id sub_241009D58()
{
  return HDCodableMedicationShareableModel.__freeTextMedicationStrengthQuantity.getter();
}

id HDCodableMedicationShareableModel.__freeTextMedicationStrengthQuantity.getter()
{
  if (!objc_msgSend(v0, sel_hasFreeTextMedicationStrengthQuantity)) {
    return 0;
  }
  id result = objc_msgSend(v0, sel_freeTextMedicationStrengthQuantity);
  if (result)
  {
    v2 = result;
    id result = objc_msgSend(result, sel_unitString);
    if (result)
    {
      v3 = result;
      sub_241160730();

      v4 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
      id v5 = objc_msgSend(self, sel_unitFromString_, v4);

      objc_msgSend(v2, sel_value);
      id v7 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v5, v6);

      return v7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_241009EA8(uint64_t a1, int *a2)
{
  double v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_24100A538;
  return v6(a1);
}

uint64_t sub_241009F84(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  if ((*(void *)(v5 + 24) >> 1) - v10 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v11 = v5 + 40 * v10 + 32;
  if (a1 + 32 < v11 + 40 * v4 && v11 < a1 + 32 + 40 * v4) {
    goto LABEL_21;
  }
  sub_241020840(0, a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v3 = v5;
    return result;
  }
  uint64_t v13 = *(void *)(v5 + 16);
  BOOL v14 = __OFADD__(v13, v4);
  uint64_t v15 = v13 + v4;
  if (!v14)
  {
    *(void *)(v5 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_24100A114(unint64_t a1)
{
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_24101261C(0, 0, 0);
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = a1 & 0xC000000000000001;
      uint64_t v14 = v2;
      unint64_t v15 = a1;
      while (v17)
      {
        id v4 = (id)MEMORY[0x245617450](v3, a1);
        unint64_t v5 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
LABEL_7:
        id v6 = v4;
        uint64_t v7 = sub_2411610B0();
        swift_bridgeObjectRetain();
        char v8 = sub_2411610D0();
        char v9 = sub_2411610C0();

        swift_bridgeObjectRelease();
        unint64_t v10 = *(void *)(v21 + 16);
        unint64_t v11 = *(void *)(v21 + 24);
        if (v10 >= v11 >> 1) {
          sub_24101261C(v11 > 1, v10 + 1, 1);
        }
        *(void *)(v21 + 16) = v10 + 1;
        uint64_t v12 = v21 + 176 * v10;
        *(void *)(v12 + 32) = v6;
        *(void *)(v12 + 40) = v7;
        *(_OWORD *)(v12 + 48) = 0u;
        *(_OWORD *)(v12 + 64) = 0u;
        *(_OWORD *)(v12 + 80) = 0u;
        *(unsigned char *)(v12 + 96) = v8;
        *(_DWORD *)(v12 + 100) = *(_DWORD *)&v20[3];
        *(_DWORD *)(v12 + 97) = *(_DWORD *)v20;
        *(void *)(v12 + 104) = 0;
        *(void *)(v12 + 112) = 0;
        *(unsigned char *)(v12 + 120) = v9;
        *(_DWORD *)(v12 + 124) = *(_DWORD *)&v19[3];
        *(_DWORD *)(v12 + 121) = *(_DWORD *)v19;
        *(_OWORD *)(v12 + 128) = 0u;
        *(_OWORD *)(v12 + 144) = 0u;
        *(_OWORD *)(v12 + 160) = xmmword_24116E930;
        *(void *)(v12 + 176) = 0xF000000000000000;
        *(unsigned char *)(v12 + 184) = 1;
        *(_DWORD *)(v12 + 188) = *(_DWORD *)&v18[3];
        *(_DWORD *)(v12 + 185) = *(_DWORD *)v18;
        *(void *)(v12 + 192) = v3;
        *(unsigned char *)(v12 + 200) = 0;
        ++v3;
        a1 = v15;
        if (v5 == v14) {
          goto LABEL_17;
        }
      }
      if (v3 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_2411616E0();
      if (!v2) {
        goto LABEL_17;
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    unint64_t v5 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_15;
    }
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_24100A348(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(a2 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a3((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v5);
    swift_release();
  }
  else
  {
    unint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = a3((char *)v10, v7, a2, v5);
    swift_release();
    MEMORY[0x2456180C0](v10, -1, -1);
  }
  return v9;
}

id sub_24100A4E4()
{
  v1 = *v0;
  if (objc_msgSend(v1, sel_hasFreeTextMedicationStrengthQuantity)) {
    return objc_msgSend(v1, sel_freeTextMedicationForm);
  }
  else {
    return 0;
  }
}

uint64_t sub_24100A538()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24100A630(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24102A258;
  char v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268CF2428 + dword_268CF2428);
  return v6(a1, v4);
}

uint64_t sub_24100A6E8(void *a1)
{
  sub_24102C0D0();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *a1;
  sub_241023CC0(0, &qword_26B005D00, (uint64_t)&type metadata for MedicationShareableData, MEMORY[0x263F8D488]);
  sub_24102AEBC();
  sub_241160920();
  sub_241020840(0, (unint64_t *)&qword_26B0073B0);
  sub_24115FBC0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24100A838(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_24100A9F4(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_241052CD8(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[22 * v9 + 4];
  if (a1 + 32 < v10 + 176 * v8 && v10 < a1 + 32 + 176 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_24100AB54@<X0>(uint64_t *a1@<X8>)
{
  return sub_24101C688((_OWORD *)(v1 + 16), *(void *)(v1 + 192), *(void **)(v1 + 200), a1);
}

uint64_t sub_24100AB90@<X0>(uint64_t *a1@<X8>)
{
  return sub_24101C688((_OWORD *)(v1 + 16), *(void *)(v1 + 192), *(void **)(v1 + 200), a1);
}

uint64_t sub_24100ABCC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241023CC0(0, (unint64_t *)&qword_26B007390, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  BOOL v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

void *sub_24100AD58(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_24102A474();
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2410535C4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24100AE78@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24115D1C0();
  long long v4 = a1[9];
  v10[8] = a1[8];
  v11[0] = v4;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)a1 + 153);
  long long v5 = a1[5];
  v10[4] = a1[4];
  v10[5] = v5;
  long long v6 = a1[7];
  v10[6] = a1[6];
  v10[7] = v6;
  long long v7 = a1[1];
  v10[0] = *a1;
  v10[1] = v7;
  long long v8 = a1[3];
  v10[2] = a1[2];
  v10[3] = v8;
  uint64_t result = sub_24101E934((uint64_t)v10);
  *a2 = result;
  return result;
}

uint64_t sub_24100AEF4@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  long long v7 = *(uint64_t (**)())(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  long long v8 = a1[9];
  v14[8] = a1[8];
  v15[0] = v8;
  *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)((char *)a1 + 153);
  long long v9 = a1[5];
  v14[4] = a1[4];
  v14[5] = v9;
  long long v10 = a1[7];
  v14[6] = a1[6];
  v14[7] = v10;
  long long v11 = a1[1];
  v14[0] = *a1;
  v14[1] = v11;
  long long v12 = a1[3];
  v14[2] = a1[2];
  v14[3] = v12;
  uint64_t result = sub_24101BE78((uint64_t)v14, v2 + v6, v7);
  *a2 = result;
  return result;
}

uint64_t sub_24100AFD4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

uint64_t sub_24100B06C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *(void *)(swift_allocObject() + 16) = a1;
  sub_241029BE8(0, &qword_26B005C10, (uint64_t (*)(uint64_t))sub_2410757A8, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v4 = a1;
  sub_24115FCF0();
  sub_24102B2F0();
  uint64_t v5 = sub_24115FE20();
  uint64_t result = swift_release();
  *a2 = v5;
  return result;
}

uint64_t sub_24100B160(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_24115D1C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  sub_24102DEEC();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = sub_2410187D4(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v14 + v13, (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(void *)(v14 + ((v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v2;
  sub_24102B8A8(0, &qword_26B005AE0, MEMORY[0x263EFDCF0]);
  sub_241020840(0, (unint64_t *)&qword_26B004160);
  sub_24102B93C();
  sub_24115FE70();
  swift_release();
  swift_release();
  sub_241019D40(&qword_26B0038A8, (void (*)(uint64_t))sub_24102DEEC);
  uint64_t v15 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v15;
}

uint64_t sub_24100B408@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24102DB74();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  type metadata accessor for MedicationsGeneratorContext();
  v12[1] = sub_241160D00();
  *(void *)(swift_allocObject() + 16) = v9;
  sub_241029BE8(0, &qword_26B005B20, (uint64_t (*)(uint64_t))sub_2410E6AAC, MEMORY[0x263EFDCF0]);
  sub_24102AD24();
  sub_241029CF4(&qword_26B005B18, &qword_26B005B20, (uint64_t (*)(uint64_t))sub_2410E6AAC);
  swift_bridgeObjectRetain();
  sub_24115FE70();
  swift_release();
  swift_release();
  sub_241029BA0(&qword_26B005650, (void (*)(uint64_t))sub_24102DB74);
  uint64_t v10 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v10;
  return result;
}

uint64_t sub_24100B620()
{
  uint64_t v2 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_24100B740;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_24102A258;
  return sub_24100E690(v3);
}

uint64_t sub_24100B740()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24100B834(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_24115D1C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  sub_24102DE00();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = sub_24100FCEC(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v14 + v13, (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(void *)(v14 + ((v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v2;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_24102B7C4(0, &qword_26B005AF0, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263EFDCF0]);
  sub_241020840(0, (unint64_t *)&qword_26B004160);
  sub_24102B850(&qword_26B005AE8, &qword_26B005AF0, v15);
  sub_24115FE70();
  swift_release();
  swift_release();
  sub_241010110(&qword_26B005610, (void (*)(uint64_t))sub_24102DE00);
  uint64_t v16 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v16;
}

uint64_t *sub_24100BB18(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v26 = a2;
  uint64_t v21 = a1;
  uint64_t v25 = *v3;
  uint64_t v24 = sub_24115D100();
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_24115D130();
  uint64_t v7 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410273F8(a1, (uint64_t)v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsShareableModelGenerator_context, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  v20[1] = sub_24115D170();
  sub_241023ADC(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v10 = sub_24115CEB0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24116B200;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = *(void (**)(unint64_t, void, uint64_t))(v11 + 104);
  v16(v15, *MEMORY[0x263F45520], v10);
  v16(v15 + v12, *MEMORY[0x263F454D0], v10);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v6, *MEMORY[0x263F45690], v24);
  sub_24115D110();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsShareableModelGenerator_domain, v9, v23);
  uint64_t v17 = v21;
  uint64_t v18 = sub_241028170(v21, v26);
  sub_2410173B8(v17, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  v3[2] = v18;
  return v3;
}

uint64_t sub_24100BE58()
{
  return sub_24101FD74();
}

uint64_t sub_24100BEB4()
{
  sub_24102E6A4();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102DA08();
  v14[0] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[1] = sub_24115D7D0();
  sub_24102ACC4(0, &qword_26B005FD0, MEMORY[0x263F8E0F8]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24116B370;
  char v10 = sub_24115F030();
  *(void *)(v9 + 56) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(v9 + 32) = v10 & 1;
  sub_24102B528();
  sub_24100C1A4(&qword_26B005B78, (void (*)(uint64_t))sub_24102B528);
  sub_24115FEF0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24100C1A4(&qword_26B005510, (void (*)(uint64_t))sub_24102E6A4);
  sub_24115FE70();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_24100C1A4(&qword_26B005690, (void (*)(uint64_t))sub_24102DA08);
  uint64_t v11 = v14[0];
  uint64_t v12 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v11);
  return v12;
}

uint64_t sub_24100C1A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24100C1EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)sub_24115D170();
  sub_24101ABDC(v8, (uint64_t)v7);

  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin42MedicationsLoggingSummaryGeneratorPipeline_domain, v7, v4);
  sub_24115F6F0();
  sub_24115D150();
  sub_24101A6BC(v14, v14[3]);
  sub_24115D0B0();
  uint64_t v9 = (void *)sub_24115F6E0();
  sub_24101F178((uint64_t)v14);
  *(void *)(v2
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin42MedicationsLoggingSummaryGeneratorPipeline_changeProvider) = v9;
  uint64_t v10 = sub_24100B160(a1, v9);
  uint64_t v11 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  *(void *)(v2 + 16) = v10;
  return v2;
}

uint64_t sub_24100C3B8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)sub_24115D170();
  sub_24100DED8(v8, (uint64_t)v7);

  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin37MedicationHighlightsGeneratorPipeline_domain, v7, v4);
  sub_24115F6F0();
  sub_24115D150();
  sub_24101A6BC(v14, v14[3]);
  sub_24115D0B0();
  uint64_t v9 = (void *)sub_24115F6E0();
  sub_24101F178((uint64_t)v14);
  *(void *)(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin37MedicationHighlightsGeneratorPipeline_changeProvider) = v9;
  uint64_t v10 = sub_24100B834(a1, v9);
  uint64_t v11 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  *(void *)(v2 + 16) = v10;
  return v2;
}

void sub_24100C584(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
    uint64_t v8 = MEMORY[0x263F8EE78];
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  if (!sub_2411616E0()) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x245617450](0, v3);
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v3 + 32);
LABEL_6:
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    sub_241024708(0, (unint64_t *)&qword_26B007360);
    id v7 = v6;
    uint64_t v8 = sub_241161040();

    id v9 = v7;
    uint64_t v10 = sub_241161050();

LABEL_9:
    *a2 = v8;
    a2[1] = v10;
    return;
  }
  __break(1u);
}

uint64_t sub_24100C6B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102732C(a1, v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsOnboardingGeneratorPipeline_medicationsContext);
  uint64_t v8 = (void *)sub_24115D170();
  sub_24100D920(v8, (uint64_t)v7);

  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsOnboardingGeneratorPipeline_domain, v7, v4);
  id v9 = *(void **)(a1 + *(int *)(type metadata accessor for MedicationsGeneratorContext() + 36));
  *(void *)(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsOnboardingGeneratorPipeline_changeProvider) = v9;
  id v10 = v9;
  uint64_t v11 = sub_241010BFC();
  sub_241024708(0, &qword_26B005E38);
  uint64_t v17 = sub_241160FA0();
  sub_24102B5F8();
  sub_24100D8D8(&qword_26B005B58, (void (*)(uint64_t))sub_24102B5F8);
  uint64_t v12 = sub_24115FE20();
  swift_release();
  uint64_t v17 = v12;
  uint64_t v13 = sub_24115FD90();
  swift_release();
  uint64_t v14 = sub_24100D3EC(a1, v11, v13);
  swift_release();
  swift_release();
  sub_241018340(a1);
  *(void *)(v2 + 16) = v14;
  return v2;
}

uint64_t sub_24100C8D0(uint64_t a1)
{
  uint64_t v31 = a1;
  uint64_t v37 = *v1;
  uint64_t v2 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v34 = *(void *)(v35 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v32 = (uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102B25C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  uint64_t v39 = v5;
  MEMORY[0x270FA5388](v4);
  v36 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24115D100();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24115D130();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_24115D170();
  sub_241023B40(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588]);
  uint64_t v15 = sub_24115CEB0();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_24116B370;
  (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x263F45570], v15);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F45688], v7);
  sub_24115D110();
  uint64_t v19 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v33 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin48MedicationsNotificationSettingsGeneratorPipeline_domain, v14, v11);
  uint64_t v20 = v31;
  uint64_t v21 = sub_241010BFC();
  uint64_t v22 = v32;
  sub_24102732C(v20, v32);
  unint64_t v23 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v37;
  *(void *)(v24 + 16) = v21;
  *(void *)(v24 + 24) = v25;
  sub_24101177C(v22, v24 + v23);
  sub_24102BE58();
  sub_24100CDC4(&qword_26B005A38, (void (*)(uint64_t))sub_24102BE58);
  swift_retain();
  int v26 = v36;
  sub_24115FD10();
  sub_24100CDC4(&qword_26B005C28, (void (*)(uint64_t))sub_24102B25C);
  uint64_t v27 = v38;
  uint64_t v28 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v27);
  swift_release();
  sub_241018340(v20);
  uint64_t result = v19;
  *(void *)(v19
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin48MedicationsNotificationSettingsGeneratorPipeline_publisher) = v28;
  return result;
}

uint64_t sub_24100CDC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24100CE0C(uint64_t a1)
{
  uint64_t v32 = a1;
  uint64_t v41 = *v1;
  uint64_t v39 = sub_24115D1C0();
  uint64_t v36 = *(void *)(v39 - 8);
  uint64_t v38 = *(void *)(v36 + 64);
  MEMORY[0x270FA5388](v39);
  uint64_t v35 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102B25C();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  MEMORY[0x270FA5388](v3);
  v40 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_24115D100();
  uint64_t v6 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_24115D130();
  uint64_t v9 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[1] = sub_24115D170();
  sub_241023BF8(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v12 = sub_24115CEB0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24116B200;
  unint64_t v17 = v16 + v15;
  uint64_t v18 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
  v18(v17, *MEMORY[0x263F45568], v12);
  v18(v17 + v14, *MEMORY[0x263F45560], v12);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F45688], v34);
  sub_24115D110();
  uint64_t v19 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v37 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationsCategoryGeneratorPipeline_domain, v11, v33);
  uint64_t v21 = v35;
  uint64_t v20 = v36;
  uint64_t v22 = v32;
  uint64_t v23 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v35, v32, v39);
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v25 = (v38 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v26 + v24, v21, v23);
  *(void *)(v26 + v25) = v41;
  sub_24102BE58();
  sub_24100D364(&qword_26B005A38, (void (*)(uint64_t))sub_24102BE58);
  uint64_t v27 = v40;
  sub_24115FD10();
  sub_24100D364(&qword_26B005C28, (void (*)(uint64_t))sub_24102B25C);
  uint64_t v28 = v42;
  uint64_t v29 = sub_24115FE20();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v23);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v28);
  uint64_t result = v19;
  *(void *)(v19 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationsCategoryGeneratorPipeline_publisher) = v29;
  return result;
}

uint64_t sub_24100D364(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24100D3AC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24100D3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a1;
  uint64_t v5 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v31 = *(void *)(v5 - 8);
  v29[1] = *(void *)(v31 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v30 = (uint64_t)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102EA58();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102CE64();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  uint64_t v35 = v13;
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102D94C();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v36 = v16;
  uint64_t v37 = v17;
  MEMORY[0x270FA5388](v16);
  v29[0] = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  sub_24102B660();
  sub_24102B5F8();
  uint64_t v33 = MEMORY[0x263EFDCF8];
  sub_24100D8D8(&qword_26B0072D0, (void (*)(uint64_t))sub_24102B660);
  sub_24100D8D8(&qword_26B005B58, (void (*)(uint64_t))sub_24102B5F8);
  swift_retain();
  swift_retain();
  sub_24115FAA0();
  sub_24115D190();
  sub_24115FA80();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v19 = v30;
  sub_24102732C(v32, v30);
  unint64_t v20 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v21 = swift_allocObject();
  sub_24101177C(v19, v21 + v20);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_2411017CC;
  *(void *)(v22 + 24) = v21;
  sub_241020840(0, (unint64_t *)&qword_26B004160);
  sub_24100D8D8(&qword_26B0057E0, (void (*)(uint64_t))sub_24102CE64);
  uint64_t v23 = v29[0];
  uint64_t v24 = v34;
  sub_24115FE70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v24);
  sub_24100D8D8(&qword_26B0056B0, (void (*)(uint64_t))sub_24102D94C);
  uint64_t v25 = v36;
  uint64_t v26 = sub_24115FD90();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v23, v25);
  uint64_t v39 = v26;
  sub_24102BE58();
  sub_24100D8D8(&qword_26B005A38, (void (*)(uint64_t))sub_24102BE58);
  uint64_t v27 = sub_24115FE20();
  swift_release();
  return v27;
}

uint64_t sub_24100D8D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24100D920@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = sub_24115D100();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_medicationDoseEventType, v18);
  uint64_t v8 = v7;
  unint64_t v9 = MEMORY[0x263F8EE78];
  unint64_t v19 = MEMORY[0x263F8EE78];
  if (v7)
  {
    id v10 = v7;
    MEMORY[0x2456167B0]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_2411609D0();
    }
    sub_241160A00();
    sub_2411609C0();
    unint64_t v9 = v19;
  }

  sub_24102A4F8();
  uint64_t v11 = sub_24115CEB0();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24116B370;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x263F45580], v11);
  if (v9 >> 62)
  {
    sub_241024708(0, (unint64_t *)&qword_26B005E00);
    id v17 = a1;
    swift_bridgeObjectRetain();
    sub_2411616D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v15 = a1;
    swift_bridgeObjectRetain();
    sub_2411618A0();
    sub_241024708(0, (unint64_t *)&qword_26B005E00);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v3);
  return sub_24115D110();
}

uint64_t sub_24100DBE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = sub_24115D100();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_medicationDoseEventType, v18);
  uint64_t v8 = v7;
  unint64_t v9 = MEMORY[0x263F8EE78];
  unint64_t v19 = MEMORY[0x263F8EE78];
  if (v7)
  {
    id v10 = v7;
    MEMORY[0x2456167B0]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_2411609D0();
    }
    sub_241160A00();
    sub_2411609C0();
    unint64_t v9 = v19;
  }

  sub_2410171D4(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v11 = sub_24115CEB0();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24116B370;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x263F454D0], v11);
  if (v9 >> 62)
  {
    sub_241024708(0, (unint64_t *)&qword_26B005E00);
    id v17 = a1;
    swift_bridgeObjectRetain();
    sub_2411616D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v15 = a1;
    swift_bridgeObjectRetain();
    sub_2411618A0();
    sub_241024708(0, (unint64_t *)&qword_26B005E00);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45690], v3);
  return sub_24115D110();
}

uint64_t sub_24100DED8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = sub_24115D100();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_medicationDoseEventType, v18);
  uint64_t v8 = v7;
  unint64_t v9 = MEMORY[0x263F8EE78];
  unint64_t v19 = MEMORY[0x263F8EE78];
  if (v7)
  {
    id v10 = v7;
    MEMORY[0x2456167B0]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_2411609D0();
    }
    sub_241160A00();
    sub_2411609C0();
    unint64_t v9 = v19;
  }

  sub_241023B94(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v11 = sub_24115CEB0();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24116B370;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x263F45578], v11);
  if (v9 >> 62)
  {
    sub_241024708(0, (unint64_t *)&qword_26B005E00);
    id v17 = a1;
    swift_bridgeObjectRetain();
    sub_2411616D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v15 = a1;
    swift_bridgeObjectRetain();
    sub_2411618A0();
    sub_241024708(0, (unint64_t *)&qword_26B005E00);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45690], v3);
  return sub_24115D110();
}

void *sub_24100E1CC(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for MedicationsGeneratorContext();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24115F790();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241160730();
  id v11 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v12 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initWithSuiteName_, v12);

  if (v13
    && (uint64_t v14 = (void *)sub_2411606F0(),
        unsigned int v15 = objc_msgSend(v13, sel_BOOLForKey_, v14),
        v13,
        v14,
        v15))
  {
    sub_24115F760();
    uint64_t v16 = sub_24115F780();
    os_log_type_t v17 = sub_241160D50();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v38[0] = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      *(void *)&long long v39 = v3;
      swift_getMetatypeMetadata();
      uint64_t v20 = sub_241160760();
      *(void *)&long long v39 = sub_24101F0A4(v20, v21, v38);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v16, v17, "[%s]: Minimal medications plugin enabled, returning nil for shareable feed item pipelines", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v19, -1, -1);
      MEMORY[0x2456180C0](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    sub_241027390(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
    uint64_t v23 = type metadata accessor for SharedMedicationsFeedItemPipeline();
    swift_allocObject();
    uint64_t v24 = sub_241013FFC((uint64_t)v6);
    uint64_t v40 = v23;
    uint64_t v25 = sub_241027824(&qword_26B004388, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemPipeline);
    uint64_t v41 = v25;
    *(void *)&long long v39 = v24;
    sub_241027314(&v39, (uint64_t)v38);
    swift_retain();
    uint64_t v22 = sub_2410279C4(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v27 = v22[2];
    unint64_t v26 = v22[3];
    if (v27 >= v26 >> 1) {
      uint64_t v22 = sub_2410279C4((void *)(v26 > 1), v27 + 1, 1, v22);
    }
    uint64_t v28 = sub_2410276D8((uint64_t)v38, v38[3]);
    MEMORY[0x270FA5388](v28);
    uint64_t v30 = (uint64_t *)((char *)&v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v31 + 16))(v30);
    uint64_t v32 = *v30;
    uint64_t v36 = v23;
    uint64_t v37 = v25;
    *(void *)&long long v35 = v32;
    v22[2] = v27 + 1;
    sub_241027314(&v35, (uint64_t)&v22[5 * v27 + 4]);
    sub_24101F178((uint64_t)v38);
    swift_release();
  }
  return v22;
}

uint64_t sub_24100E690(uint64_t a1)
{
  uint64_t v3 = *v1;
  v2[26] = a1;
  v2[27] = v3;
  v2[28] = type metadata accessor for MedicationsGeneratorContext();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  uint64_t v4 = sub_24115F790();
  v2[32] = v4;
  v2[33] = *(void *)(v4 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_241017FE0, 0, 0);
}

id sub_24100E7DC()
{
  sub_241024708(0, &qword_26B005E28);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForMedicationDoseEventWithStatus_, 4);
  id v2 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForMedicationDoseEventWithStatus_, 5);
  sub_24102AE70(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24116B210;
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v2;
  sub_2411609C0();
  sub_241024708(0, &qword_26B007318);
  id v4 = v1;
  id v5 = v2;
  uint64_t v6 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v6);

  return v7;
}

uint64_t assignWithTake for MedicationShareableData(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  id v10 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  id v11 = (_OWORD *)(a2 + 120);
  unint64_t v12 = *(void *)(a1 + 128);
  if (v12 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v13 = *(void *)(a2 + 128);
  if (v13 >> 60 == 15)
  {
    sub_2410CF034(a1 + 120);
LABEL_4:
    *(_OWORD *)(a1 + 120) = *v11;
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)v11;
  *(void *)(a1 + 128) = v13;
  sub_241023084(v14, v12);
LABEL_6:
  unsigned int v15 = (void *)(a2 + 136);
  unint64_t v16 = *(void *)(a1 + 144);
  if (v16 >> 60 != 15)
  {
    unint64_t v17 = *(void *)(a2 + 144);
    if (v17 >> 60 != 15)
    {
      uint64_t v18 = *(void *)(a1 + 136);
      *(void *)(a1 + 136) = *v15;
      *(void *)(a1 + 144) = v17;
      sub_241023084(v18, v16);
      goto LABEL_11;
    }
    sub_2410CF034(a1 + 136);
  }
  *(_OWORD *)(a1 + 136) = *(_OWORD *)v15;
LABEL_11:
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  return a1;
}

uint64_t sub_24100EAB8(uint64_t a1)
{
  uint64_t v45 = sub_24115D320();
  uint64_t v3 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102E41C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102DF94();
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  MEMORY[0x270FA5388](v10);
  long long v39 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410280A4(v1 + 16, (uint64_t)v47);
  uint64_t v12 = v48;
  uint64_t v13 = v49;
  uint64_t v14 = sub_24101A6BC(v47, v48);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v38 = a1;
  if (v15)
  {
    v35[0] = v14;
    v35[1] = v13;
    v35[2] = v12;
    uint64_t v36 = v8;
    uint64_t v37 = v7;
    uint64_t v46 = MEMORY[0x263F8EE78];
    sub_24102A550(0, v15, 0);
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v17 = v3 + 16;
    uint64_t v19 = a1 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    uint64_t v43 = *(void *)(v17 + 56);
    v44 = v18;
    uint64_t v20 = (void (**)(char *, uint64_t))(v17 - 8);
    do
    {
      uint64_t v21 = v45;
      uint64_t v22 = v17;
      v44(v5, v19, v45);
      uint64_t v23 = sub_24115D2F0();
      uint64_t v25 = v24;
      (*v20)(v5, v21);
      uint64_t v16 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24102A550(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v46;
      }
      unint64_t v27 = *(void *)(v16 + 16);
      unint64_t v26 = *(void *)(v16 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_24102A550(v26 > 1, v27 + 1, 1);
        uint64_t v16 = v46;
      }
      *(void *)(v16 + 16) = v27 + 1;
      uint64_t v28 = v16 + 16 * v27;
      *(void *)(v28 + 32) = v23;
      *(void *)(v28 + 40) = v25;
      v19 += v43;
      --v15;
      uint64_t v17 = v22;
    }
    while (v15);
    uint64_t v8 = v36;
    uint64_t v7 = v37;
  }
  sub_241025580(v16);
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_24115D370();
  swift_bridgeObjectRelease();
  uint64_t v46 = v29;
  *(void *)(swift_allocObject() + 16) = v38;
  sub_24102BBEC();
  sub_2410268CC(0, &qword_26B005CC0, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
  sub_24100EFCC(&qword_26B005A88, (void (*)(uint64_t))sub_24102BBEC);
  swift_bridgeObjectRetain();
  uint64_t v30 = v39;
  sub_24115FE70();
  swift_release();
  swift_release();
  sub_24101F178((uint64_t)v47);
  sub_24102A354();
  sub_24100EFCC(&qword_26B005600, (void (*)(uint64_t))sub_24102DF94);
  uint64_t v32 = v41;
  uint64_t v31 = v42;
  sub_24115FF50();
  sub_24100EFCC(&qword_26B005590, (void (*)(uint64_t))sub_24102E41C);
  uint64_t v33 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v31, v7);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v32);
  return v33;
}

uint64_t sub_24100EFCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_24100F014(uint64_t a1)
{
  id v2 = v1;
  uint64_t v27 = a1;
  uint64_t v29 = *v2;
  uint64_t v28 = sub_24115D100();
  uint64_t v4 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24115D130();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102732C(a1, (uint64_t)v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin22CHRAddAccountGenerator_context);
  uint64_t v26 = sub_24115D170();
  sub_241023A78(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v11 = sub_24115CEB0();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24116B370;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x263F45580], v11);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F45688], v28);
  sub_24115D110();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))((uint64_t)v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin22CHRAddAccountGenerator_domain, v10, v7);
  uint64_t v15 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v16 = v27;
  uint64_t v17 = *(void **)(v27 + *(int *)(v15 + 28));
  sub_24115F0C0();
  id v18 = v17;
  sub_24115F0B0();
  sub_24115F050();
  swift_release();
  sub_24102AC50();
  sub_241160D60();
  sub_24115F040();
  swift_allocObject();
  uint64_t v19 = sub_24115EF90();
  type metadata accessor for CHRAddAccountDataProvider();
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = v18;
  v20[3] = v19;
  id v21 = v18;
  swift_retain();
  sub_24115EFA0();
  sub_241160D90();
  id v22 = objc_allocWithZone((Class)sub_24115D7E0());
  uint64_t v23 = sub_24115D7C0();

  swift_release();
  v20[4] = v23;
  *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin22CHRAddAccountGenerator_dataProvider) = (uint64_t)v20;
  uint64_t v24 = sub_2410174D8(v16);
  sub_241018340(v16);
  v2[2] = v24;
  return v2;
}

uint64_t sub_24100F410@<X0>(void *a1@<X0>, _OWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  long long v7 = a2[6];
  *(_OWORD *)(v6 + 136) = a2[7];
  long long v8 = a2[9];
  *(_OWORD *)(v6 + 152) = a2[8];
  *(_OWORD *)(v6 + 168) = v8;
  *(_OWORD *)(v6 + 177) = *(_OWORD *)((char *)a2 + 153);
  long long v9 = a2[2];
  *(_OWORD *)(v6 + 72) = a2[3];
  long long v10 = a2[5];
  *(_OWORD *)(v6 + 88) = a2[4];
  *(_OWORD *)(v6 + 104) = v10;
  *(_OWORD *)(v6 + 120) = v7;
  long long v11 = a2[1];
  *(_OWORD *)(v6 + 24) = *a2;
  *(_OWORD *)(v6 + 40) = v11;
  *(void *)(v6 + 16) = a1;
  *(_OWORD *)(v6 + 56) = v9;
  uint64_t v12 = (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, void))MEMORY[0x263EFDE20];
  sub_24101CBCC(0, &qword_26B005BE0, MEMORY[0x263EFDE20]);
  swift_allocObject();
  id v13 = a1;
  sub_241022C6C((uint64_t)a2);
  sub_24115FCF0();
  sub_24101CA18(&qword_26B005BD8, &qword_26B005BE0, v12);
  uint64_t v14 = sub_24115FE20();
  uint64_t result = swift_release();
  *a3 = v14;
  return result;
}

uint64_t sub_24100F574(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  long long v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_241024708(0, (unint64_t *)&unk_26B007368);
    uint64_t v5 = sub_2411609A0();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_24100F62C(uint64_t a1, unint64_t a2, void *a3)
{
  sub_24101B6B0(a1, a2, a3, *(void (**)(void *))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), v3 + 40);
}

uint64_t sub_24100F63C(uint64_t a1)
{
  uint64_t v2 = sub_24115D1C0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = sub_241160CD0();
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v5);
  long long v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102C6C8();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v53 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102D548(0, &qword_26B005798, (void (*)(uint64_t))sub_24102C6C8, (void (*)(void))sub_24102C7B4);
  uint64_t v13 = v12;
  uint64_t v49 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v52 = (char *)v37 - v14;
  if (sub_24115D160())
  {
    sub_24115D150();
    uint64_t v47 = v9;
    uint64_t v48 = v10;
    uint64_t v17 = a1;
    uint64_t v45 = a1;
    sub_24101A6BC(v56, v56[3]);
    id v18 = (void *)sub_24115D0B0();
    sub_24102AE24(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_24116B220;
    *(void *)(v19 + 32) = sub_241012AC8();
    uint64_t v55 = v19;
    sub_2411609C0();
    uint64_t v41 = v7;
    sub_241160CF0();

    swift_bridgeObjectRelease();
    sub_24101F178((uint64_t)v56);
    uint64_t v46 = v13;
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v44((char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v17, v2);
    uint64_t v38 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = v2;
    uint64_t v39 = v2;
    uint64_t v21 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v43 = v21 | 7;
    uint64_t v22 = swift_allocObject();
    uint64_t v40 = v4;
    *(void *)(v22 + 16) = v54;
    uint64_t v42 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
    v42(v22 + ((v21 + 24) & ~v21), (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v20);
    sub_24115FC10();
    uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_24102B3BC(0, (unint64_t *)&qword_26B005B10, MEMORY[0x263EFDCF0]);
    v37[1] = v24;
    sub_241010110(&qword_26B005E20, MEMORY[0x263F44AB8]);
    sub_24102B444(&qword_26B005B08, (unint64_t *)&qword_26B005B10, v23);
    uint64_t v25 = v53;
    uint64_t v26 = v51;
    uint64_t v27 = v41;
    sub_24115FED0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v27, v26);
    uint64_t v28 = v38;
    uint64_t v29 = v39;
    v44(v38, v45, v39);
    uint64_t v30 = (v21 + 16) & ~v21;
    unint64_t v31 = (v40 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v32 = swift_allocObject();
    v42(v32 + v30, v28, v29);
    *(void *)(v32 + v31) = v54;
    sub_24102C7B4();
    uint64_t v33 = v52;
    uint64_t v34 = v47;
    sub_24115FE80();
    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v34);
    sub_24102D0D0(&qword_26B005790, &qword_26B005798, (void (*)(uint64_t))sub_24102C6C8, (void (*)(void))sub_24102C7B4);
    uint64_t v35 = v46;
    uint64_t v16 = sub_24115FE20();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v35);
  }
  else
  {
    v56[0] = sub_241129CC4(a1);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_24102B3BC(0, (unint64_t *)&qword_26B005B10, MEMORY[0x263EFDCF0]);
    sub_24102B444(&qword_26B005B08, (unint64_t *)&qword_26B005B10, v15);
    uint64_t v16 = sub_24115FE20();
    swift_release();
  }
  return v16;
}

uint64_t sub_24100FCEC(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_24115D1C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102DC40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  uint64_t v34 = v10;
  MEMORY[0x270FA5388](v9);
  unint64_t v31 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102E228();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v32 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_24100F63C(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v16 = (v7 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18 + v15, v8, v5);
  *(void *)(v18 + v16) = v2;
  *(void *)(v18 + v17) = a2;
  *(void *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = v2;
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_24102B3BC(0, (unint64_t *)&qword_26B005B10, MEMORY[0x263EFDCF0]);
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_24102B7C4(0, &qword_26B005AF0, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263EFDCF0]);
  sub_24102B444(&qword_26B005B08, (unint64_t *)&qword_26B005B10, v19);
  id v21 = a2;
  uint64_t v22 = v31;
  sub_24115FE70();
  swift_release();
  swift_release();
  uint64_t v23 = sub_241010110(&qword_26B005640, (void (*)(uint64_t))sub_24102DC40);
  uint64_t v24 = sub_24102B850(&qword_26B005AE8, &qword_26B005AF0, v20);
  uint64_t v26 = v32;
  uint64_t v25 = v33;
  MEMORY[0x245615D80](v33, v23, v24);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v25);
  sub_241010110(&qword_26B0055D0, (void (*)(uint64_t))sub_24102E228);
  uint64_t v27 = v35;
  uint64_t v28 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v27);
  return v28;
}

uint64_t sub_241010110(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241010158(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = self;
  uint64_t v8 = self;
  swift_retain();
  id v9 = objc_msgSend(v8, sel_medicationUserDomainConceptTypeIdentifier);
  id v10 = objc_msgSend(v7, sel_predicateForUserDomainConceptsWithTypeIdentifier_, v9);

  sub_241023CC0(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24116B220;
  sub_241160730();
  id v12 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v13 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithKey_ascending_, v13, 0);

  *(void *)(v11 + 32) = v14;
  sub_2411609C0();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = MEMORY[0x263F8EE78];
  unint64_t v16 = (void *)swift_allocObject();
  v16[2] = sub_24102A314;
  v16[3] = v6;
  v16[4] = v15;
  id v17 = objc_allocWithZone(MEMORY[0x263F0A858]);
  sub_241024708(0, &qword_26B007328);
  id v18 = v10;
  swift_retain();
  uint64_t v19 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  v22[4] = sub_24101331C;
  v22[5] = v16;
  v22[0] = MEMORY[0x263EF8330];
  v22[1] = 1107296256;
  v22[2] = sub_241013250;
  v22[3] = &unk_26F556D60;
  uint64_t v20 = _Block_copy(v22);
  id v21 = objc_msgSend(v17, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, v18, 0, 0, v19, v20);

  _Block_release(v20);
  swift_release();
  objc_msgSend(a3, sel_executeQuery_, v21);

  swift_release();
}

void sub_24101045C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  id v9 = *(void **)a4;
  swift_retain();
  id v10 = objc_msgSend(v9, sel_semanticIdentifier);
  id v11 = objc_msgSend(v10, sel_stringValue);

  if (!v11)
  {
    sub_241160730();
    id v11 = (id)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24101BC64;
  *(void *)(v12 + 24) = v8;
  long long v13 = *(_OWORD *)(a4 + 144);
  *(_OWORD *)(v12 + 160) = *(_OWORD *)(a4 + 128);
  *(_OWORD *)(v12 + 176) = v13;
  *(_OWORD *)(v12 + 185) = *(_OWORD *)(a4 + 153);
  long long v14 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v12 + 112) = v14;
  long long v15 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v12 + 128) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v12 + 144) = v15;
  long long v16 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)a4;
  *(_OWORD *)(v12 + 48) = v16;
  long long v17 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v12 + 80) = v17;
  v19[4] = sub_2410187C8;
  v19[5] = v12;
  v19[0] = MEMORY[0x263EF8330];
  v19[1] = 1107296256;
  v19[2] = sub_24102A008;
  v19[3] = &unk_26F556C70;
  id v18 = _Block_copy(v19);
  sub_241022C6C(a4);
  swift_release();
  objc_msgSend(a3, sel_fetchScheduleWithMedicationIdentifier_completion_, v11, v18);
  _Block_release(v18);
}

uint64_t sub_241010614(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v9 = sub_24115F790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  long long v13 = sub_24115F780();
  int v14 = sub_241160D50();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    int v39 = v14;
    os_log_t v41 = v13;
    uint64_t v44 = v9;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v45 = a3;
    uint64_t v46 = v38;
    *(_DWORD *)uint64_t v15 = 136447234;
    sub_24101F3E0();
    uint64_t v16 = sub_241160760();
    uint64_t v45 = sub_24101F0A4(v16, v17, &v46);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v45 = v18;
    uint64_t v19 = sub_241161850();
    uint64_t v45 = sub_24101F0A4(v19, v20, &v46);
    sub_241161430();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    uint64_t v42 = v12;
    uint64_t v43 = v10;
    int v40 = a5;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v45 = v21;
    uint64_t v22 = sub_241161850();
    uint64_t v45 = sub_24101F0A4(v22, v23, &v46);
    sub_241161430();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2082;
    char v24 = sub_24115F610();
    BOOL v25 = (v24 & 1) == 0;
    if (v24) {
      uint64_t v26 = 1702195828;
    }
    else {
      uint64_t v26 = 0x65736C6166;
    }
    if (v25) {
      unint64_t v27 = 0xE500000000000000;
    }
    else {
      unint64_t v27 = 0xE400000000000000;
    }
    uint64_t v45 = sub_24101F0A4(v26, v27, &v46);
    sub_241161430();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 42) = 2082;
    if (v40) {
      uint64_t v28 = 1702195828;
    }
    else {
      uint64_t v28 = 0x65736C6166;
    }
    if (v40) {
      unint64_t v29 = 0xE400000000000000;
    }
    else {
      unint64_t v29 = 0xE500000000000000;
    }
    uint64_t v45 = sub_24101F0A4(v28, v29, &v46);
    sub_241161430();
    swift_bridgeObjectRelease();
    os_log_t v30 = v41;
    _os_log_impl(&dword_241007000, v41, (os_log_type_t)v39, "[%{public}s] ListConceptManager: active medication count: %{public}s, archive medication count: %{public}s, has loaded list: %{public}s, prepended: %{public}s", (uint8_t *)v15, 0x34u);
    uint64_t v31 = v38;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v31, -1, -1);
    MEMORY[0x2456180C0](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  unint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_2410123EC(v32);
  swift_bridgeObjectRelease();
  unint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = sub_24100A114(v34);
  swift_bridgeObjectRelease();
  uint64_t v46 = v33;
  sub_24100A9F4(v35);
  return v46;
}

uint64_t sub_241010ADC()
{
  uint64_t v1 = (int *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_241010BFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v38 = *(void *)(v2 - 8);
  uint64_t v37 = *(void *)(v38 + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v36 = (uint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241011568();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241011690();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  uint64_t v41 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24101145C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v42 = v13;
  uint64_t v43 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v35 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410115FC();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v44 = v16;
  uint64_t v45 = v17;
  MEMORY[0x270FA5388](v16);
  int v39 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_24115F6D0();
  sub_241011390();
  sub_2410112A4(&qword_26B006168, (void (*)(uint64_t))sub_241011390);
  sub_24115FEA0();
  swift_release();
  sub_2410112EC(0, &qword_26B005FA8, MEMORY[0x263F8E0F8]);
  uint64_t v19 = sub_24115F6C0();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_24116B370;
  (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v22 + v21, *MEMORY[0x263F45D88], v19);
  sub_2410112A4(&qword_26B006138, (void (*)(uint64_t))sub_241011568);
  sub_24115FEF0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v23 = v36;
  sub_24102732C(v1, v36);
  unint64_t v24 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v25 = swift_allocObject();
  sub_24101177C(v23, v25 + v24);
  sub_24115FC10();
  uint64_t v26 = (uint64_t (*)(void, void, void, void))MEMORY[0x263EFDCF0];
  sub_2410113F8(0, (unint64_t *)&qword_26B0072D8, MEMORY[0x263EFDCF0]);
  sub_2410112A4(&qword_26B0060F8, (void (*)(uint64_t))sub_241011690);
  sub_24101134C(&qword_26B0072D0, (unint64_t *)&qword_26B0072D8, v26);
  unint64_t v27 = v35;
  uint64_t v28 = v40;
  sub_24115FF80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v28);
  sub_2410112A4(&qword_26B006148, (void (*)(uint64_t))sub_24101145C);
  unint64_t v29 = v39;
  uint64_t v30 = v42;
  sub_24115FF30();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v30);
  sub_2410112A4(&qword_26B006128, (void (*)(uint64_t))sub_2410115FC);
  uint64_t v31 = v44;
  uint64_t v32 = sub_24115FD90();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v31);
  uint64_t v46 = v32;
  uint64_t v33 = sub_24115FE20();
  swift_release();
  return v33;
}

uint64_t sub_2410112A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2410112EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_24115F6C0();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_24101134C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2410113F8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241011390()
{
  if (!qword_26B006170)
  {
    sub_24115F6C0();
    unint64_t v0 = sub_24115FC70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006170);
    }
  }
}

void sub_2410113F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D4F8], MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24101145C()
{
  if (!qword_26B006150)
  {
    unint64_t v0 = (uint64_t (*)(void, void, void, void))MEMORY[0x263EFDCF0];
    sub_2410113F8(255, (unint64_t *)&qword_26B0072D8, MEMORY[0x263EFDCF0]);
    sub_241011690();
    sub_24101134C(&qword_26B0072D0, (unint64_t *)&qword_26B0072D8, v0);
    sub_2410112A4(&qword_26B0060F8, (void (*)(uint64_t))sub_241011690);
    unint64_t v1 = sub_24115FBA0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B006150);
    }
  }
}

void sub_241011568()
{
  if (!qword_26B006140)
  {
    sub_241011390();
    sub_2410112A4(&qword_26B006168, (void (*)(uint64_t))sub_241011390);
    unint64_t v0 = sub_24115FB80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006140);
    }
  }
}

void sub_2410115FC()
{
  if (!qword_26B006130)
  {
    sub_24101145C();
    sub_2410112A4(&qword_26B006148, (void (*)(uint64_t))sub_24101145C);
    unint64_t v0 = sub_24115FB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006130);
    }
  }
}

void sub_241011690()
{
  if (!qword_26B006100)
  {
    sub_2410E910C();
    sub_241011568();
    sub_2410112A4(&qword_26B005988, (void (*)(uint64_t))sub_2410E910C);
    sub_2410112A4(&qword_26B006138, (void (*)(uint64_t))sub_241011568);
    unint64_t v0 = sub_24115FAF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006100);
    }
  }
}

uint64_t sub_24101177C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsGeneratorContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410117E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v61 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59) {
            goto LABEL_79;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v6 + 2;
            if (v6 + 2 >= v59) {
              goto LABEL_79;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v6 + 3;
              if (v6 + 3 >= v59) {
                goto LABEL_79;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                uint64_t v16 = v6 + 4;
                if (v6 + 4 >= v59) {
                  goto LABEL_79;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_83;
                    }
                    if (v15 >= v59) {
                      goto LABEL_79;
                    }
                    unint64_t v14 = *(void *)(v58 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_241161950();
        swift_bridgeObjectRetain();
        sub_241160830();
        uint64_t v20 = sub_2411619A0();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      uint64_t v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_241161890() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          uint64_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_241161890() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v60 = a3 + 56;
  uint64_t v61 = 0;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_79;
      }
      unint64_t v42 = *(void *)(v60 + 8 * v34);
      if (!v42)
      {
        int64_t v34 = v41 + 2;
        if (v41 + 2 >= v63) {
          goto LABEL_79;
        }
        unint64_t v42 = *(void *)(v60 + 8 * v34);
        if (!v42) {
          break;
        }
      }
    }
LABEL_62:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_241161950();
    swift_bridgeObjectRetain();
    sub_241160830();
    uint64_t v47 = sub_2411619A0();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    uint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_241161890() & 1) != 0)
    {
LABEL_76:
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_24102A5B8(v57, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        uint64_t v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_241161890() & 1) != 0) {
          goto LABEL_76;
        }
      }
LABEL_46:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v63) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)(v60 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_62;
    }
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_241011D20(uint64_t a1)
{
  uint64_t v51 = *v1;
  uint64_t v3 = sub_24115F790();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  uint64_t v53 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v50 = (char *)&v50 - v8;
  uint64_t v9 = sub_24115D1C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MedicationsGeneratorContext();
  unint64_t v14 = (int *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v50 - v18;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v20(v12, a1, v9);
  v20(v19, (uint64_t)v12, v9);
  sub_24115D150();
  sub_24101A6BC(v55, v55[3]);
  uint64_t v21 = (void *)sub_24115D0B0();
  *(void *)&v19[v14[7]] = v21;
  id v22 = v21;
  sub_24101F178((uint64_t)v55);
  *(void *)&v19[v14[8]] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A400]), sel_initWithHealthStore_, v22);
  *(void *)&v19[v14[9]] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C78]), sel_initWithHealthStore_, v22);
  sub_24115F6F0();
  *(void *)&v19[v14[11]] = sub_24115F6E0();
  sub_24115F0C0();
  sub_24115F0B0();
  uint64_t v23 = sub_24115F070();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(void *)&v19[v14[10]] = v23;
  uint64_t v24 = (void *)sub_24115D170();
  uint64_t v25 = (void *)sub_24115CF20();
  LOBYTE(a1) = sub_24115CF10();

  if ((a1 & 1) == 0) {
    goto LABEL_10;
  }
  sub_241160730();
  id v26 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  BOOL v27 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v26, sel_initWithSuiteName_, v27);

  if (v28)
  {
    unint64_t v29 = (void *)sub_2411606F0();
    unsigned int v30 = objc_msgSend(v28, sel_BOOLForKey_, v29);

    if (v30)
    {
      uint64_t v31 = v50;
      sub_24115F760();
      BOOL v32 = sub_24115F780();
      os_log_type_t v33 = sub_241160D50();
      BOOL v34 = os_log_type_enabled(v32, v33);
      uint64_t v35 = v52;
      if (v34)
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v54 = v37;
        *(_DWORD *)uint64_t v36 = 136315138;
        v55[0] = v51;
        swift_getMetatypeMetadata();
        uint64_t v38 = sub_241160760();
        v55[0] = sub_24101F0A4(v38, v39, &v54);
        sub_241161430();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241007000, v32, v33, "[%s]: Minimal medications plugin enabled, returning nil for sharable model pipeline for primary profile", v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v37, -1, -1);
        MEMORY[0x2456180C0](v36, -1, -1);

        (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v35);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v35);
      }
LABEL_10:
      uint64_t v46 = MEMORY[0x263F8EE78];
      goto LABEL_11;
    }
  }
  sub_24115F760();
  unint64_t v40 = sub_24115F780();
  os_log_type_t v41 = sub_241160D50();
  if (os_log_type_enabled(v40, v41))
  {
    unint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v54 = v43;
    *(_DWORD *)unint64_t v42 = 136315138;
    v55[0] = v51;
    swift_getMetatypeMetadata();
    uint64_t v44 = sub_241160760();
    v55[0] = sub_24101F0A4(v44, v45, &v54);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v40, v41, "[%s]: Returning medication tracking sharable model pipeline for primary profile", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v43, -1, -1);
    MEMORY[0x2456180C0](v42, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v53 + 8))(v7, v52);
  sub_24102A3AC();
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_24116B370;
  sub_24102732C((uint64_t)v19, (uint64_t)v17);
  uint64_t v47 = type metadata accessor for MedicationsShareableModelPipeline();
  swift_allocObject();
  uint64_t v48 = sub_2410152E8((uint64_t)v17);
  *(void *)(v46 + 56) = v47;
  *(void *)(v46 + 64) = sub_24102F548();
  *(void *)(v46 + 32) = v48;
LABEL_11:
  sub_241018340((uint64_t)v19);
  return v46;
}

uint64_t sub_2410123EC(unint64_t a1)
{
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_24101261C(0, 0, 0);
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = a1 & 0xC000000000000001;
      uint64_t v14 = v2;
      unint64_t v15 = a1;
      while (v17)
      {
        id v4 = (id)MEMORY[0x245617450](v3, a1);
        unint64_t v5 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
LABEL_7:
        id v6 = v4;
        uint64_t v7 = sub_2411610B0();
        swift_bridgeObjectRetain();
        char v8 = sub_2411610D0();
        char v9 = sub_2411610C0();

        swift_bridgeObjectRelease();
        unint64_t v10 = *(void *)(v21 + 16);
        unint64_t v11 = *(void *)(v21 + 24);
        if (v10 >= v11 >> 1) {
          sub_24101261C(v11 > 1, v10 + 1, 1);
        }
        *(void *)(v21 + 16) = v10 + 1;
        uint64_t v12 = v21 + 176 * v10;
        *(void *)(v12 + 32) = v6;
        *(void *)(v12 + 40) = v7;
        *(_OWORD *)(v12 + 48) = 0u;
        *(_OWORD *)(v12 + 64) = 0u;
        *(_OWORD *)(v12 + 80) = 0u;
        *(unsigned char *)(v12 + 96) = v8;
        *(_DWORD *)(v12 + 100) = *(_DWORD *)&v20[3];
        *(_DWORD *)(v12 + 97) = *(_DWORD *)v20;
        *(void *)(v12 + 104) = 0;
        *(void *)(v12 + 112) = 0;
        *(unsigned char *)(v12 + 120) = v9;
        *(_DWORD *)(v12 + 124) = *(_DWORD *)&v19[3];
        *(_DWORD *)(v12 + 121) = *(_DWORD *)v19;
        *(_OWORD *)(v12 + 128) = 0u;
        *(_OWORD *)(v12 + 144) = 0u;
        *(_OWORD *)(v12 + 160) = xmmword_24116E930;
        *(void *)(v12 + 176) = 0xF000000000000000;
        *(unsigned char *)(v12 + 184) = 0;
        *(_DWORD *)(v12 + 188) = *(_DWORD *)&v18[3];
        *(_DWORD *)(v12 + 185) = *(_DWORD *)v18;
        *(void *)(v12 + 192) = v3;
        *(unsigned char *)(v12 + 200) = 0;
        ++v3;
        a1 = v15;
        if (v5 == v14) {
          goto LABEL_17;
        }
      }
      if (v3 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_2411616E0();
      if (!v2) {
        goto LABEL_17;
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    unint64_t v5 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_15;
    }
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_24101261C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24101263C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_24101263C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241023CC0(0, &qword_26B005F88, (uint64_t)&type metadata for MedicationShareableData, MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 176);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 176 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410127DC(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  if (!v4) {
    return 0;
  }
  unint64_t v5 = v4;
  uint64_t v6 = sub_241160730();

  return v6;
}

uint64_t sub_241012840@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MedicationsHealthPluginDelegate();
  uint64_t v2 = swift_allocObject();
  uint64_t result = sub_2410128A8("[%{public}s] Plugin delegate has been initialized");
  *a1 = v2;
  return result;
}

uint64_t type metadata accessor for MedicationsHealthPluginDelegate()
{
  return self;
}

uint64_t sub_2410128A8(const char *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_24115F790();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  int64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F770();
  uint64_t v8 = sub_24115F780();
  os_log_type_t v9 = sub_241160D50();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v17 = v4;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = a1;
    size_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v12;
    *(_DWORD *)size_t v11 = 136446210;
    uint64_t v13 = sub_241161A00();
    uint64_t v18 = sub_24101F0A4(v13, v14, &v19);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v8, v9, v16, v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v12, -1, -1);
    MEMORY[0x2456180C0](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v3;
}

uint64_t sub_241012AC8()
{
  sub_241023B94(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  uint64_t v60 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v48 - v3;
  uint64_t v5 = sub_24115CCC0();
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  MEMORY[0x270FA5388](v5);
  int64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24115CB10();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v49 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v51 = (char *)&v48 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v48 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  int64_t v62 = (char *)&v48 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v21 = sub_24115C810();
  uint64_t v57 = *(void *)(v21 - 8);
  uint64_t v58 = v21;
  MEMORY[0x270FA5388](v21);
  v56 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241024708(0, &qword_26B005E28);
  id ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  id v53 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForMedicationDoseEventWithStatus_, 4);
  sub_24115CB00();
  sub_24115CC90();
  uint64_t v52 = v7;
  uint64_t v23 = (void *)sub_24115CC20();
  uint64_t v48 = v20;
  uint64_t v24 = (void *)sub_24115CAA0();
  id v61 = v23;
  id v25 = objc_msgSend(v23, sel_hk_startOfTomorrowForDate_, v24);

  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v8);
    goto LABEL_7;
  }
  sub_24115CAE0();

  id v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v26(v4, v16, v8);
  int64_t v59 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v59(v4, 0, 1, v8);
  BOOL v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v27(v4, 1, v8) == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v26(v62, v4, v8);
  id v28 = (void *)sub_24115CAA0();
  id v29 = objc_msgSend(v61, sel_dateByAddingUnit_value_toDate_options_, 16, -28, v28, 0);

  if (!v29)
  {
LABEL_8:
    uint64_t result = v59(v60, 1, 1, v8);
    goto LABEL_9;
  }
  sub_24115CAE0();

  unsigned int v30 = v60;
  v26(v60, v16, v8);
  v59(v30, 0, 1, v8);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v27)(v30, 1, v8);
  if (result != 1)
  {
    BOOL v32 = v51;
    v26(v51, v30, v8);
    os_log_type_t v33 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v33(v16, v32, v8);
    BOOL v34 = v62;
    v33(v49, v62, v8);
    uint64_t v35 = v56;
    sub_24115C7D0();

    uint64_t v36 = *(void (**)(char *, uint64_t))(v9 + 8);
    v36(v32, v8);
    v36(v34, v8);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v55);
    v36(v48, v8);
    sub_24115C7F0();
    uint64_t v37 = (void *)sub_24115CAA0();
    v36(v16, v8);
    sub_24115C7C0();
    uint64_t v38 = (void *)sub_24115CAA0();
    v36(v16, v8);
    id v39 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForSamplesWithStartDate_endDate_inclusiveEndDates_options_, v37, v38, 0, 0);

    sub_24102AE24(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_24116B210;
    os_log_type_t v41 = v53;
    *(void *)(v40 + 32) = v53;
    *(void *)(v40 + 40) = v39;
    uint64_t v63 = v40;
    sub_2411609C0();
    sub_241024708(0, &qword_26B007318);
    id v42 = v41;
    id v43 = v39;
    uint64_t v44 = (void *)sub_241160980();
    swift_bridgeObjectRelease();
    id v45 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v44);

    id v46 = objc_msgSend(self, sel_medicationDoseEventType);
    id v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v46, v45);

    (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v58);
    return (uint64_t)v47;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_241013250(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v11 = *(void (**)(id, void *, void *, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v15 = a2;
  id v12 = a3;
  id v13 = a4;
  id v14 = a6;
  v11(v15, a3, a4, a5, a6);
  swift_release();
}

void sub_24101331C(int a1, void *a2, int a3, char a4, void *a5)
{
  sub_241013328(a1, a2, a3, a4, a5, *(void (**)(id, uint64_t))(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
}

void sub_241013328(int a1, void *a2, int a3, char a4, id a5, void (*a6)(id, uint64_t), uint64_t a7, uint64_t a8)
{
  if (a5)
  {
    id v10 = a5;
    a6(a5, 1);
  }
  else
  {
    id v13 = (void *)(a8 + 16);
    if (a2)
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        swift_beginAccess();
        MEMORY[0x2456167B0](a2);
        if (*(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2411609D0();
        }
        sub_241160A00();
        sub_2411609C0();
        swift_endAccess();
      }
    }
    if (a4)
    {
      swift_beginAccess();
      uint64_t v14 = swift_bridgeObjectRetain();
      a6((id)v14, 0);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_241013480@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v38 = a5;
  uint64_t v10 = sub_24115F790();
  uint64_t v36 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  id v13 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = *a1;
  unint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v40 = MEMORY[0x263F8EE78];
  uint64_t v16 = *(void *)(v14 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v16; ++i)
    {
      unint64_t v18 = swift_bridgeObjectRetain();
      sub_241013820(v18);
    }
    uint64_t v11 = swift_bridgeObjectRelease();
    unint64_t v15 = v40;
  }
  MEMORY[0x270FA5388](v11);
  *(void *)&v33[-32] = a2;
  *(void *)&v33[-24] = a3;
  *(void *)&v33[-16] = a4;
  sub_241025AFC(v15, (void (*)(void **))sub_241025EC8);
  uint64_t v20 = v19;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5)
  {
    sub_24115F740();
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_24115F780();
    os_log_type_t v23 = sub_241160D50();
    int v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v39 = v35;
      *(_DWORD *)uint64_t v25 = 136446722;
      int v34 = v24;
      uint64_t v40 = a4;
      swift_getMetatypeMetadata();
      uint64_t v26 = sub_241160760();
      uint64_t v40 = sub_24101F0A4(v26, v27, &v39);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      uint64_t v40 = v20;
      sub_24102B034(0);
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_2411607A0();
      uint64_t v40 = sub_24101F0A4(v28, v29, &v39);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 22) = 2082;
      uint64_t v40 = *(void *)(v20 + 16);
      uint64_t v30 = sub_2411607A0();
      uint64_t v40 = sub_24101F0A4(v30, v31, &v39);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v22, (os_log_type_t)v34, "[%{public}s] Sharable models generated: %{public}s\ndata count: %{public}s", (uint8_t *)v25, 0x20u);
      uint64_t v32 = v35;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v32, -1, -1);
      MEMORY[0x2456180C0](v25, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v36 + 8))(v13, v37);
    *uint64_t v38 = v20;
  }
  return result;
}

uint64_t sub_241013820(unint64_t a1)
{
  return sub_241013838(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_241013A0C);
}

uint64_t sub_241013838(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2411616E0();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x245617460](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    unint64_t *v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_2411609C0();
}

uint64_t sub_241013A0C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2410D5E54(0, (unint64_t *)&qword_26B005DD0, &qword_26B005EA0, 0x263F44C50, MEMORY[0x263F8D488]);
        sub_2410D5EF0(&qword_268CF1AB0, (unint64_t *)&qword_26B005DD0, &qword_26B005EA0, 0x263F44C50);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2410CD3FC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241024708(0, &qword_26B005EA0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_241013C68()
{
  uint64_t v25 = v0;
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[26];
  sub_24115F740();
  sub_241027390(v2, v1, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  uint64_t v3 = sub_24115F780();
  os_log_type_t v4 = sub_241160D50();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v22 = v0[35];
    os_log_type_t v23 = (void (*)(uint64_t, uint64_t))v0[38];
    uint64_t v20 = (void *)v0[37];
    uint64_t v21 = v0[32];
    uint64_t v18 = v0[30];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v24 = v19;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v6 = sub_241161A00();
    v0[22] = sub_24101F0A4(v6, v7, &v24);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v8 = (void *)sub_24115D170();
    uint64_t v9 = sub_24115CEF0();
    unint64_t v11 = v10;

    v0[23] = sub_24101F0A4(v9, v11, &v24);
    sub_241161430();
    swift_bridgeObjectRelease();
    sub_24101839C(v18, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
    _os_log_impl(&dword_241007000, v3, v4, "[%s] Marked medication shards as required for first launch on profile: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v19, -1, -1);
    MEMORY[0x2456180C0](v5, -1, -1);

    v23(v22, v21);
  }
  else
  {
    uint64_t v13 = (void *)v0[37];
    uint64_t v12 = (void (*)(uint64_t, uint64_t))v0[38];
    uint64_t v14 = v0[35];
    uint64_t v15 = v0[32];
    sub_24101839C(v0[30], (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);

    v12(v14, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_241013F4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 152);
  if (v1 >> 60 != 15) {
    sub_241023084(*(void *)(v0 + 144), v1);
  }
  unint64_t v2 = *(void *)(v0 + 168);
  if (v2 >> 60 != 15) {
    sub_241023084(*(void *)(v0 + 160), v2);
  }

  return MEMORY[0x270FA0238](v0, 193, 7);
}

void *sub_241013FFC(uint64_t a1)
{
  uint64_t v3 = *v1;
  v71 = v1;
  uint64_t v80 = v3;
  sub_241014BF8(0, &qword_26B0054A8, (void (*)(uint64_t))sub_24102B9B0, (void (*)(void))sub_24102BA48);
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  MEMORY[0x270FA5388](v4);
  v66 = (char *)&v55 - v5;
  uint64_t v56 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v77 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v78 = v6;
  uint64_t v79 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_24115D420();
  uint64_t v74 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  v75 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102EB40();
  uint64_t v59 = v8;
  uint64_t v58 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v57 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102CEF8();
  uint64_t v65 = v10;
  uint64_t v63 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v61 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241014BF8(0, &qword_26B0054B8, (void (*)(uint64_t))sub_24102CEF8, (void (*)(void))sub_24102CF8C);
  uint64_t v64 = v12;
  uint64_t v62 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v60 = (char *)&v55 - v13;
  uint64_t v73 = sub_24115D100();
  uint64_t v14 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_24115D130();
  uint64_t v17 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = a1;
  sub_24102732C(a1, (uint64_t)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33SharedMedicationsFeedItemPipeline_context);
  uint64_t v70 = sub_24115D170();
  sub_24102AF38(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v20 = sub_24115CEB0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 72);
  unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_24116B200;
  unint64_t v25 = v24 + v23;
  uint64_t v26 = *(void (**)(unint64_t, void, uint64_t))(v21 + 104);
  v26(v25, *MEMORY[0x263F45520], v20);
  unint64_t v27 = v25 + v22;
  uint64_t v28 = v69;
  v26(v27, *MEMORY[0x263F454D0], v20);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F45690], v73);
  unint64_t v29 = v71;
  sub_24115D110();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))((uint64_t)v29 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33SharedMedicationsFeedItemPipeline_domain, v19, v72);
  uint64_t v30 = (void *)sub_24115D170();
  unint64_t v31 = (void *)sub_24115CF20();
  LOBYTE(v22) = sub_24115CF10();

  uint64_t v32 = (void (**)(char *, uint64_t))(v74 + 8);
  sub_24115D140();
  sub_24101A6BC(v83, v83[3]);
  os_log_type_t v33 = v75;
  sub_24115D410();
  uint64_t v34 = sub_24115D390();
  (*v32)(v33, v76);
  uint64_t v82 = v34;
  if (v22)
  {
    uint64_t v81 = sub_24115F630();
    sub_24102B9B0();
    uint64_t v35 = (void (*)(uint64_t))MEMORY[0x263F45D68];
    sub_241014B94(0, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68]);
    sub_24102BA48();
    sub_241015FA0(&qword_26B0072C0, (unint64_t *)&qword_26B0072C8, v35);
    uint64_t v36 = v57;
    sub_24115FE60();
    swift_release();
    swift_release();
    sub_24101F178((uint64_t)v83);
    sub_24115D190();
    uint64_t v37 = v61;
    uint64_t v38 = v59;
    sub_24115FA80();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v36, v38);
    uint64_t v39 = v79;
    sub_24102732C(v28, v79);
    unint64_t v40 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    unint64_t v41 = (v78 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = swift_allocObject();
    sub_24101177C(v39, v42 + v40);
    *(void *)(v42 + v41) = v80;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = sub_241150E78;
    *(void *)(v43 + 24) = v42;
    sub_24102F7E0();
    sub_24102CF8C();
    uint64_t v44 = v60;
    uint64_t v45 = v65;
    sub_24115FE30();
    swift_release();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v37, v45);
    sub_24102E968(&qword_26B0054B0, &qword_26B0054B8, (void (*)(uint64_t))sub_24102CEF8, (void (*)(void))sub_24102CF8C);
    uint64_t v46 = v64;
    uint64_t v47 = sub_24115FD90();
    uint64_t v48 = v62;
  }
  else
  {
    uint64_t v49 = v79;
    sub_24102732C(v28, v79);
    unint64_t v50 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    unint64_t v51 = (v78 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v52 = swift_allocObject();
    sub_24101177C(v49, v52 + v50);
    *(void *)(v52 + v51) = v80;
    sub_24102B9B0();
    sub_24102F7E0();
    sub_24102BA48();
    uint64_t v44 = v66;
    sub_24115FE30();
    swift_release();
    swift_release();
    sub_24101F178((uint64_t)v83);
    sub_24102E968(&qword_268CF26A8, &qword_26B0054A8, (void (*)(uint64_t))sub_24102B9B0, (void (*)(void))sub_24102BA48);
    uint64_t v46 = v68;
    uint64_t v47 = sub_24115FD90();
    uint64_t v48 = v67;
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v44, v46);
  v83[0] = v47;
  sub_241014B94(0, (unint64_t *)&qword_26B005A40, (void (*)(uint64_t))sub_24102F7E0);
  sub_241015FA0(&qword_26B005A38, (unint64_t *)&qword_26B005A40, (void (*)(uint64_t))sub_24102F7E0);
  uint64_t v53 = sub_24115FE20();
  swift_release();
  sub_241018340(v28);
  void v29[2] = v53;
  return v29;
}

uint64_t sub_241014B4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241014B94(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24115FC20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241014BF8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_24102F7E0();
    a4();
    unint64_t v6 = sub_24115FAE0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_241014C80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v34 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v35 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241160CD0();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102D630();
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102EC08(0, &qword_26B005748, (uint64_t (*)(uint64_t))sub_24102D630, sub_24102D6D0, MEMORY[0x263EFDB60]);
  uint64_t v36 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v31 - v11;
  sub_24101529C(0, &qword_26B005BD0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDDF8]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v31 - v16;
  if (sub_24115D160())
  {
    sub_24115D150();
    sub_24101A6BC(v42, v42[3]);
    uint64_t v19 = (void *)sub_24115D0B0();
    sub_24101529C(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_24116B220;
    if (qword_26B0038D0 != -1) {
      swift_once();
    }
    uint64_t v21 = (void *)qword_26B00BAD8;
    *(void *)(v20 + 32) = qword_26B00BAD8;
    uint64_t v41 = v20;
    sub_2411609C0();
    id v22 = v21;
    sub_241160CF0();

    swift_bridgeObjectRelease();
    sub_24101F178((uint64_t)v42);
    sub_241015D90(&qword_26B005E20, MEMORY[0x263F44AB8]);
    uint64_t v23 = v33;
    sub_24115FE70();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v23);
    uint64_t v24 = v35;
    sub_24102732C(a1, v35);
    unint64_t v25 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v26 = swift_allocObject();
    sub_24101177C(v24, v26 + v25);
    *(void *)(v26 + ((v3 + v25 + 7) & 0xFFFFFFFFFFFFFFF8)) = v40;
    unint64_t v27 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_24102B590(0, &qword_26B005B70, MEMORY[0x263EFDCF0]);
    sub_24102D6D0();
    sub_24102B378(&qword_26B005B68, &qword_26B005B70, v27);
    uint64_t v28 = v39;
    sub_24115FE80();
    swift_release();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v28);
    sub_24102D424();
    uint64_t v29 = v37;
    uint64_t v18 = sub_24115FE20();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v29);
  }
  else
  {
    sub_24115FCC0();
    sub_241050474();
    uint64_t v18 = sub_24115FE20();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return v18;
}

void sub_24101529C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void *sub_2410152E8(uint64_t a1)
{
  uint64_t v52 = *v1;
  uint64_t v3 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v70 = *(void *)(v3 - 8);
  uint64_t v69 = *(void *)(v70 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v67 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410171D4(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  id v61 = (char *)&v52 - v6;
  uint64_t v65 = sub_241160EE0();
  uint64_t v63 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v57 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102EC08(0, &qword_26B005470, (uint64_t (*)(uint64_t))sub_24102BDBC, sub_24102BE24, MEMORY[0x263EFDA00]);
  uint64_t v54 = v8;
  uint64_t v55 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v52 - v9;
  sub_24102CFC0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  uint64_t v59 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102C320();
  uint64_t v62 = v14;
  uint64_t v64 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v56 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102D890();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v71 = v16;
  uint64_t v72 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v60 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102E87C();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v73 = v19;
  uint64_t v74 = v20;
  MEMORY[0x270FA5388](v19);
  v66 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24115D130();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v25 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v1;
  uint64_t v68 = v1;
  sub_24102732C(a1, (uint64_t)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsShareableModelPipeline_context);
  unint64_t v27 = (void *)sub_24115D170();
  sub_24100DBE4(v27, (uint64_t)v25);

  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))((uint64_t)v26 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsShareableModelPipeline_domain, v25, v22);
  uint64_t v28 = (void *)sub_24115D1A0();
  uint64_t v76 = sub_24115F630();
  uint64_t v75 = sub_241014C80(a1);
  sub_24102BDBC();
  uint64_t v29 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_24102B590(0, &qword_26B005B70, MEMORY[0x263EFDCF0]);
  sub_24102BE24();
  sub_24102B378(&qword_26B005B68, &qword_26B005B70, v29);
  sub_24115FE60();
  swift_release();
  swift_release();
  sub_24115D190();
  uint64_t v30 = v53;
  uint64_t v31 = v54;
  sub_24115FA80();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v31);
  uint64_t v32 = v57;
  sub_241160EC0();
  uint64_t v76 = (uint64_t)v28;
  uint64_t v33 = sub_241160EB0();
  uint64_t v34 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v61, 1, 1, v33);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  sub_241015D90(&qword_26B0057C0, (void (*)(uint64_t))sub_24102CFC0);
  sub_24102A8F8();
  uint64_t v35 = v56;
  uint64_t v36 = v58;
  sub_24115FF20();
  sub_24102AB6C(v34);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v32, v65);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v30, v36);
  uint64_t v37 = v67;
  sub_24102732C(a1, v67);
  unint64_t v38 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  unint64_t v39 = (v69 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = swift_allocObject();
  sub_24101177C(v37, v40 + v38);
  *(void *)(v40 + v39) = v52;
  sub_241020840(0, &qword_26B004140);
  sub_241015D90(&qword_26B005930, (void (*)(uint64_t))sub_24102C320);
  uint64_t v41 = v60;
  uint64_t v42 = v62;
  sub_24115FE70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v35, v42);
  sub_24102A404(0, &qword_26B005F48, MEMORY[0x263F8E0F8]);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_24116B370;
  sub_24102732C(a1, v37);
  uint64_t v44 = type metadata accessor for MedicationsShareableModelGenerator();
  swift_allocObject();
  uint64_t v45 = sub_24100BB18(v37, 1);
  *(void *)(v43 + 56) = v44;
  *(void *)(v43 + 64) = sub_241015D90(&qword_26B004A10, (void (*)(uint64_t))type metadata accessor for MedicationsShareableModelGenerator);
  *(void *)(v43 + 32) = v45;
  sub_241015D90(&qword_26B0056C0, (void (*)(uint64_t))sub_24102D890);
  uint64_t v46 = v66;
  uint64_t v47 = v71;
  sub_24115FEF0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v41, v47);
  sub_241015D90(&qword_26B0054F0, (void (*)(uint64_t))sub_24102E87C);
  uint64_t v48 = v73;
  uint64_t v49 = sub_24115FD90();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v48);
  uint64_t v76 = v49;
  sub_24102BED0();
  sub_241015D90(&qword_26B005A28, (void (*)(uint64_t))sub_24102BED0);
  uint64_t v50 = sub_24115FE20();
  swift_release();

  sub_241018340(a1);
  uint64_t result = v68;
  v68[2] = v50;
  return result;
}

uint64_t sub_241015D90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241015DD8(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24107591C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241015E28(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241081940(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241015E78(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241091C30(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241015EC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241015F10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241015F58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241015FA0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241014B94(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_241015FF0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v122 = *v1;
  uint64_t v4 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v128 = v4 - 8;
  uint64_t v120 = v5;
  uint64_t v119 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v116 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102ABF8();
  MEMORY[0x270FA5388](v7 - 8);
  v112 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_241160EE0();
  uint64_t v113 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  v110 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102C234();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v117 = v10;
  uint64_t v118 = v11;
  MEMORY[0x270FA5388](v10);
  v111 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102D7E4();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v123 = v13;
  uint64_t v124 = v14;
  MEMORY[0x270FA5388](v13);
  v114 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102E790();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v125 = v16;
  uint64_t v126 = v17;
  MEMORY[0x270FA5388](v16);
  v121 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102C03C();
  uint64_t v109 = v19;
  uint64_t v127 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  v107 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102B158(0);
  uint64_t v105 = v21;
  uint64_t v106 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  v99 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_24102B158;
  v101 = sub_24102B18C;
  sub_241017340(0, &qword_26B005668, sub_24102B158, (void (*)(void))sub_24102B18C);
  uint64_t v103 = v23;
  uint64_t v104 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  v98 = (char *)&v86 - v24;
  sub_24102B0F0(0);
  uint64_t v94 = v25;
  uint64_t v95 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  v89 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_24102B0F0;
  v90 = sub_24102B124;
  sub_241017340(0, &qword_26B005678, sub_24102B0F0, (void (*)(void))sub_24102B124);
  uint64_t v92 = v27;
  uint64_t v93 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  v88 = (char *)&v86 - v28;
  uint64_t v29 = sub_24115D100();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v86 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_24115D130();
  uint64_t v96 = *(void *)(v87 - 8);
  uint64_t v33 = v96;
  MEMORY[0x270FA5388](v87);
  v129 = (char *)&v86 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)((char *)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_observerToken) = 0;
  uint64_t v100 = a1;
  sub_24102732C(a1, (uint64_t)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_context);
  sub_24115D170();
  v130 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_241017238(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v35 = sub_24115CEB0();
  uint64_t v36 = *(void *)(v35 - 8);
  unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v38 = swift_allocObject();
  long long v108 = xmmword_24116B370;
  *(_OWORD *)(v38 + 16) = xmmword_24116B370;
  (*(void (**)(unint64_t, void, uint64_t))(v36 + 104))(v38 + v37, *MEMORY[0x263F45580], v35);
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v32, *MEMORY[0x263F45688], v29);
  unint64_t v39 = v129;
  sub_24115D110();
  uint64_t v40 = v87;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))((uint64_t)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_domain, v39, v87);
  id v41 = objc_allocWithZone((Class)sub_24115D6C0());
  *(void *)((char *)v1
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_accountStateChangeListener) = sub_24115D6B0();
  uint64_t v42 = v89;
  sub_24115D6A0();
  sub_24102B124();
  uint64_t v43 = v88;
  uint64_t v44 = v94;
  sub_24115FE70();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v42, v44);
  sub_2410172F0(&qword_26B005670, &qword_26B005678, v91, (void (*)(void))v90);
  uint64_t v45 = v92;
  uint64_t v46 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v43, v45);
  *(void *)((char *)v2
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_accountStateChangePublisher) = v46;
  id v47 = objc_allocWithZone((Class)sub_24115D4F0());
  *(void *)((char *)v2
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_healthRecordsSupportedListener) = sub_24115D4E0();
  uint64_t v48 = v99;
  sub_24115D4D0();
  sub_24102B18C();
  uint64_t v49 = v98;
  uint64_t v50 = v105;
  sub_24115FE70();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v48, v50);
  sub_2410172F0(&qword_26B005660, &qword_26B005668, v102, (void (*)(void))v101);
  uint64_t v51 = v103;
  uint64_t v52 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v49, v51);
  *(void *)((char *)v2
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_healthRecordsSupportedPublisher) = v52;
  sub_241017238(0, &qword_26B005FB8, (uint64_t (*)(uint64_t))sub_24102B660, v130);
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_24116B200;
  uint64_t v54 = *(void *)((char *)v2
                  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_accountStateChangePublisher);
  v97 = v2;
  *(void *)(v53 + 32) = v54;
  *(void *)(v53 + 40) = v52;
  uint64_t v131 = v53;
  sub_2411609C0();
  sub_24102B660();
  sub_241017238(0, &qword_26B005D88, (uint64_t (*)(uint64_t))sub_24102B660, MEMORY[0x263F8D488]);
  sub_241017EE8(&qword_26B0072D0, (void (*)(uint64_t))sub_24102B660);
  sub_24102ADC0(&qword_26B005D90, &qword_26B005D88, (uint64_t (*)(uint64_t))sub_24102B660);
  swift_retain();
  swift_retain();
  uint64_t v55 = v107;
  sub_24115FBF0();
  uint64_t v56 = v96;
  uint64_t v57 = v129;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v129, (uint64_t)v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_domain, v40);
  uint64_t v58 = v100;
  uint64_t v59 = (void *)sub_24115D1A0();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v40);
  uint64_t v60 = v110;
  sub_241160EC0();
  uint64_t v131 = (uint64_t)v59;
  uint64_t v61 = sub_241160EB0();
  uint64_t v62 = (uint64_t)v112;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v112, 1, 1, v61);
  sub_24102A8B8();
  sub_241017EE8(&qword_26B0059C8, (void (*)(uint64_t))sub_24102C03C);
  sub_241017EE8((unint64_t *)&qword_26B007330, (void (*)(uint64_t))sub_24102A8B8);
  uint64_t v63 = v111;
  uint64_t v64 = v109;
  uint64_t v65 = v55;
  sub_24115FF20();
  sub_241017418(v62, (uint64_t (*)(void))sub_24102ABF8);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v60, v115);
  uint64_t v66 = v116;
  sub_24102732C(v58, v116);
  unint64_t v67 = (*(unsigned __int8 *)(v120 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
  unint64_t v68 = (v119 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  uint64_t v70 = v69 + v67;
  uint64_t v71 = v66;
  sub_24101177C(v66, v70);
  *(void *)(v69 + v68) = v122;
  sub_24102F7E0();
  sub_241017EE8(&qword_26B005940, (void (*)(uint64_t))sub_24102C234);
  uint64_t v72 = v114;
  uint64_t v73 = v117;
  sub_24115FE70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v118 + 8))(v63, v73);
  sub_241017238(0, &qword_26B005F60, (uint64_t (*)(uint64_t))sub_24102F7E0, v130);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = v108;
  sub_24102732C(v58, v71);
  uint64_t v75 = type metadata accessor for CHRAddAccountGenerator();
  swift_allocObject();
  uint64_t v76 = sub_24100F014(v71);
  *(void *)(v74 + 56) = v75;
  *(void *)(v74 + 64) = sub_241017EE8(&qword_26B004E28, (void (*)(uint64_t))type metadata accessor for CHRAddAccountGenerator);
  *(void *)(v74 + 32) = v76;
  sub_241017EE8(&qword_26B0056D0, (void (*)(uint64_t))sub_24102D7E4);
  uint64_t v77 = v121;
  uint64_t v78 = v123;
  sub_24115FEF0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v72, v78);
  sub_241017EE8(&qword_26B005500, (void (*)(uint64_t))sub_24102E790);
  uint64_t v79 = v125;
  uint64_t v80 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v77, v79);
  uint64_t v81 = v97;
  v97[2] = v80;
  uint64_t v82 = (uint64_t)v81 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_context;
  uint64_t v83 = v128;
  objc_msgSend(*(id *)((char *)v81+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_context+ *(int *)(v128 + 36)), sel_addAccountStateChangeListener_, *(void *)((char *)v81+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_accountStateChangeListener));
  objc_msgSend(*(id *)(v82 + *(int *)(v83 + 32)), sel_addHealthRecordsSupportedChangeListener_, *(void *)((char *)v81+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_healthRecordsSupportedListener));
  swift_allocObject();
  swift_weakInit();
  sub_24115D590();
  swift_allocObject();
  uint64_t v84 = sub_24115D570();

  sub_241017418(v58, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v65, v64);
  *(void *)((char *)v81 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_observerToken) = v84;
  swift_release();
  return v81;
}

void sub_241017170(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2410171D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241017238(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24101729C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241161420();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2410172F0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241017340(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241017340(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_24115FB50();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_2410173B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241017418(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241017478(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2410174D8(uint64_t a1)
{
  uint64_t v57 = a1;
  uint64_t v76 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v76 - 8);
  uint64_t v58 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v76);
  unint64_t v4 = (char *)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102E9B8();
  uint64_t v60 = v5;
  uint64_t v62 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102CDB8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v63 = v8;
  uint64_t v64 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v59 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102D318();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v67 = v11;
  uint64_t v68 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102CCE8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v70 = v14;
  uint64_t v71 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v65 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102D120();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v72 = v17;
  uint64_t v73 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v66 = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102E574();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v74 = v20;
  uint64_t v75 = v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v69 = (char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_241161030();
  uint64_t v78 = sub_24100BEB4();
  sub_24102B660();
  uint64_t v55 = MEMORY[0x263EFDCF8];
  sub_241017EA0(&qword_26B0072D0, (void (*)(uint64_t))sub_24102B660);
  sub_24115FE60();
  swift_release();
  swift_release();
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v52[0] = v4;
  uint64_t v23 = v76;
  v56(v4, a1, v76);
  uint64_t v24 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v25 = (v24 + 24) & ~v24;
  uint64_t v54 = v24 | 7;
  v58 += 7;
  unint64_t v26 = (v58 + v25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v77;
  *(void *)(v27 + 16) = v77;
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v52[1] = v2 + 32;
  uint64_t v53 = v29;
  v29(v27 + v25, (uint64_t)v4, v23);
  *(void *)(v27 + v26) = v28;
  uint64_t v30 = v28;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_24104CD40;
  *(void *)(v31 + 24) = v27;
  sub_24102B068(0);
  sub_241017EA0(&qword_26B005498, (void (*)(uint64_t))sub_24102E9B8);
  uint64_t v33 = v59;
  uint64_t v32 = v60;
  sub_24115FEB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v7, v32);
  *(void *)(swift_allocObject() + 16) = v30;
  uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_24102BC84(0, &qword_26B005A70, MEMORY[0x263EFDCF0]);
  uint64_t v62 = MEMORY[0x263EFDC08];
  sub_241017EA0(&qword_26B005800, (void (*)(uint64_t))sub_24102CDB8);
  sub_24102BD78((unint64_t *)&qword_26B005A68, &qword_26B005A70, v34);
  uint64_t v35 = v61;
  uint64_t v36 = v63;
  sub_24115FE80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v33, v36);
  uint64_t v37 = v52[0];
  uint64_t v38 = v76;
  v56((char *)v52[0], v57, v76);
  uint64_t v39 = (v24 + 16) & ~v24;
  unint64_t v40 = (v58 + v39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  v53(v41 + v39, v37, v38);
  uint64_t v42 = v77;
  *(void *)(v41 + v40) = v77;
  sub_24102AF9C(0, &qword_26B005CA8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_241017EA0(&qword_26B005760, (void (*)(uint64_t))sub_24102D318);
  uint64_t v43 = v65;
  uint64_t v44 = v67;
  sub_24115FEB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v35, v44);
  *(void *)(swift_allocObject() + 16) = v42;
  sub_24102BB60();
  sub_241017EA0(&qword_26B005810, (void (*)(uint64_t))sub_24102CCE8);
  sub_241017EA0(&qword_26B005AA8, (void (*)(uint64_t))sub_24102BB60);
  uint64_t v45 = v66;
  uint64_t v46 = v70;
  sub_24115FE80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v43, v46);
  uint64_t v79 = MEMORY[0x263F8EE78];
  sub_241017EA0(&qword_26B005780, (void (*)(uint64_t))sub_24102D120);
  id v47 = v69;
  uint64_t v48 = v72;
  sub_24115FE40();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v48);
  sub_241017EA0(&qword_26B005560, (void (*)(uint64_t))sub_24102E574);
  uint64_t v49 = v74;
  uint64_t v50 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v47, v49);
  return v50;
}

uint64_t sub_241017EA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241017EE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241017F30()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 144);
  if (v1 >> 60 != 15) {
    sub_241023084(*(void *)(v0 + 136), v1);
  }
  unint64_t v2 = *(void *)(v0 + 160);
  if (v2 >> 60 != 15) {
    sub_241023084(*(void *)(v0 + 152), v2);
  }

  return MEMORY[0x270FA0238](v0, 208, 7);
}

uint64_t sub_241017FE0()
{
  unint64_t v26 = v0;
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[31];
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A5C8]), sel_initWithHealthStore_, *(void *)(v1 + *(int *)(v0[28] + 20)));
  v0[37] = v3;
  sub_24115F740();
  sub_241027390(v1, v2, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  unint64_t v4 = sub_24115F780();
  os_log_type_t v5 = sub_241160D50();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v22 = v0[33];
    uint64_t v23 = v0[32];
    uint64_t v24 = v0[36];
    uint64_t v19 = v0[31];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v25 = v21;
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v7 = sub_241161A00();
    v0[24] = sub_24101F0A4(v7, v8, &v25);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    os_log_type_t type = v5;
    uint64_t v9 = (void *)sub_24115D170();
    uint64_t v10 = sub_24115CEF0();
    unint64_t v12 = v11;

    v0[25] = sub_24101F0A4(v10, v12, &v25);
    sub_241161430();
    swift_bridgeObjectRelease();
    sub_24101839C(v19, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
    _os_log_impl(&dword_241007000, v4, type, "[%s] Marking medication shards as required for first launch on profile: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v21, -1, -1);
    MEMORY[0x2456180C0](v6, -1, -1);

    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v13(v24, v23);
  }
  else
  {
    uint64_t v14 = v0[36];
    uint64_t v15 = v0[32];
    uint64_t v16 = v0[33];
    sub_24101839C(v0[31], (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);

    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v13(v14, v15);
  }
  v0[38] = v13;
  v0[2] = v0;
  v0[3] = sub_24102A148;
  uint64_t v17 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_24102A09C;
  v0[13] = &unk_2650E36F8;
  v0[14] = v17;
  objc_msgSend(v3, sel_markMedicationShardsAsRequiredOnFirstLaunchWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_241018340(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationsGeneratorContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24101839C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2410183FC(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  swift_release();
  os_log_type_t v5 = *(void **)(a1 + a2[9]);
}

void sub_2410184A0(uint64_t a1, void *a2, void *a3)
{
  os_log_type_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_24101852C(void *a1, uint64_t a2)
{
  sub_241018554(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32), "[%{public}s] Dispatch group leave for 1 month chart data source");
}

void sub_241018554(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5, const char *a6)
{
  uint64_t v27 = a6;
  dispatch_group_t v28 = a5;
  uint64_t v9 = sub_24115F790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v13 = a1;
    id v14 = objc_msgSend(v13, sel_data);
    uint64_t v15 = sub_24115CA00();
    uint64_t v17 = v16;

    swift_beginAccess();
    uint64_t v18 = *(void *)(a3 + 16);
    unint64_t v19 = *(void *)(a3 + 24);
    *(void *)(a3 + 16) = v15;
    *(void *)(a3 + 24) = v17;
    sub_2410230DC(v18, v19);
  }
  sub_24115F740();
  uint64_t v20 = sub_24115F780();
  os_log_type_t v21 = sub_241160D50();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v29 = a4;
    uint64_t v30 = v23;
    *(_DWORD *)uint64_t v22 = 136446210;
    sub_24101F3E0();
    uint64_t v24 = sub_241160760();
    uint64_t v29 = sub_24101F0A4(v24, v25, &v30);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v20, v21, v27, v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v23, -1, -1);
    MEMORY[0x2456180C0](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  dispatch_group_leave(v28);
}

void sub_2410187A0(void *a1, uint64_t a2)
{
  sub_241018554(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32), "[%{public}s] Dispatch group leave for 6 months chart data source");
}

void sub_2410187C8(void *a1, void *a2)
{
  sub_24101B4C8(a1, a2, *(void (**)(unsigned char *))(v2 + 16), *(void *)(v2 + 24), v2 + 32);
}

uint64_t sub_2410187D4(uint64_t a1, void *a2)
{
  uint64_t v69 = a2;
  uint64_t v4 = sub_24115D1C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v52 = v6;
  id v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102E070();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  uint64_t v60 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102E13C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v61 = v12;
  uint64_t v62 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v58 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102DD38();
  uint64_t v65 = v15;
  uint64_t v67 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v63 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102E344();
  uint64_t v66 = v17;
  uint64_t v68 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v64 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a1;
  uint64_t v57 = v2;
  uint64_t v70 = sub_241018E9C(a1);
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v48 = v7;
  uint64_t v19 = a1;
  uint64_t v20 = v4;
  uint64_t v49 = v4;
  v53(v7, v19, v4);
  uint64_t v21 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v56 = v21 | 7;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v2;
  uint64_t v55 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v55(v22 + ((v21 + 24) & ~v21), v7, v20);
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_24102B488(0, &qword_26B005A10, MEMORY[0x263EFDCF0]);
  sub_24102B730();
  uint64_t v51 = v24;
  sub_24102BF48(&qword_26B005A08, &qword_26B005A10, v23);
  sub_24115FE70();
  swift_release();
  swift_release();
  uint64_t v50 = MEMORY[0x263EFDB30];
  uint64_t v25 = sub_241019D40(&qword_26B0055F0, (void (*)(uint64_t))sub_24102E070);
  uint64_t v26 = sub_241019D40(&qword_26B005B08, (void (*)(uint64_t))sub_24102B730);
  dispatch_group_t v28 = v58;
  uint64_t v27 = v59;
  MEMORY[0x245615D80](v59, v25, v26);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v27);
  sub_241019D40(&qword_26B0055E0, (void (*)(uint64_t))sub_24102E13C);
  uint64_t v29 = v61;
  uint64_t v30 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v28, v29);
  uint64_t v70 = v30;
  uint64_t v31 = v48;
  uint64_t v32 = v49;
  v53(v48, v54, v49);
  uint64_t v33 = (v21 + 16) & ~v21;
  unint64_t v34 = (v52 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  v55(v36 + v33, v31, v32);
  uint64_t v37 = v57;
  *(void *)(v36 + v34) = v57;
  uint64_t v38 = v69;
  *(void *)(v36 + v35) = v69;
  *(void *)(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v37;
  sub_24102B8A8(0, &qword_26B005AE0, MEMORY[0x263EFDCF0]);
  id v39 = v38;
  unint64_t v40 = v63;
  sub_24115FE70();
  swift_release();
  swift_release();
  uint64_t v41 = sub_241019D40(&qword_26B005630, (void (*)(uint64_t))sub_24102DD38);
  unint64_t v42 = sub_24102B93C();
  uint64_t v44 = v64;
  uint64_t v43 = v65;
  MEMORY[0x245615D80](v65, v41, v42);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v40, v43);
  sub_241019D40(&qword_26B0055C0, (void (*)(uint64_t))sub_24102E344);
  uint64_t v45 = v66;
  uint64_t v46 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v45);
  return v46;
}

uint64_t sub_241018E9C(uint64_t a1)
{
  v111 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24101AEF4(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v104 = (char *)&v76 - v3;
  uint64_t v100 = sub_24115D130();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v96 = (uint64_t)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241160EE0();
  uint64_t v102 = *(void *)(v5 - 8);
  uint64_t v103 = v5;
  MEMORY[0x270FA5388](v5);
  v101 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_241160CD0();
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v86 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102C5A8();
  uint64_t v91 = v8;
  uint64_t v90 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v89 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102D068(0);
  uint64_t v98 = v10;
  uint64_t v97 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v93 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102BF8C(0, &qword_26B005928, (uint64_t (*)(uint64_t))sub_24102D068, sub_24102D09C, MEMORY[0x263EFDC40]);
  uint64_t v95 = v12;
  uint64_t v94 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v92 = (char *)&v76 - v13;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))sub_24115D1C0();
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v108 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (void (**)(char *, uint64_t))((char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v105 = sub_241160CC0();
  v107 = *(void (***)(char *, uint64_t))(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102D704();
  uint64_t v21 = *(void (***)(void, void))(v20 - 8);
  uint64_t v109 = v20;
  v110 = v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241019D88(0, &qword_26B005738, (void (*)(uint64_t))sub_24102D704, (void (*)(void))sub_24102D7B0);
  uint64_t v114 = v24;
  uint64_t v112 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  v85 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v115 = (char *)&v76 - v27;
  id v28 = objc_msgSend(self, sel_medicationDoseEventType);
  id v29 = sub_24100E7DC();
  id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v28, v29);

  sub_24115D150();
  sub_24101A6BC(&v117, v118);
  uint64_t v31 = (void *)sub_24115D0B0();
  sub_24102AE70(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v83 = v32;
  uint64_t v33 = swift_allocObject();
  long long v82 = xmmword_24116B220;
  *(_OWORD *)(v33 + 16) = xmmword_24116B220;
  *(void *)(v33 + 32) = v30;
  uint64_t v116 = v33;
  sub_2411609C0();
  unint64_t v34 = self;
  id v106 = v30;
  id v35 = objc_msgSend(v34, sel_sortDescriptorsForMostRecentSamples);
  sub_241024708(0, &qword_26B007328);
  sub_2411609A0();

  sub_241160CE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24101F178((uint64_t)&v117);
  sub_24101AEF4(0, (unint64_t *)&unk_26B007220, MEMORY[0x263F062D0], v111);
  sub_24102AC90();
  uint64_t v36 = v105;
  sub_24115FE70();
  v107[1](v19, v36);
  uint64_t v81 = *(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t (*)(uint64_t, uint64_t)))(v15 + 16);
  v81(v17, a1, v14);
  uint64_t v37 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = (v37 + 16) & ~v37;
  unint64_t v39 = (v108 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v78 = v39 + 8;
  uint64_t v79 = v37 | 7;
  uint64_t v40 = swift_allocObject();
  uint64_t v80 = v38;
  uint64_t v41 = *(void (**)(uint64_t, void (**)(char *, uint64_t), uint64_t (*)(uint64_t, uint64_t)))(v15 + 32);
  v107 = v17;
  uint64_t v108 = v15 + 32;
  v111 = v14;
  uint64_t v77 = v41;
  v41(v40 + v38, v17, v14);
  uint64_t v105 = v39;
  *(void *)(v40 + v39) = v113;
  unint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_24102B488(0, &qword_26B005A10, MEMORY[0x263EFDCF0]);
  uint64_t v44 = v43;
  sub_24102D7B0();
  uint64_t v45 = sub_24102BF48(&qword_26B005A08, &qword_26B005A10, v42);
  uint64_t v46 = v109;
  sub_24115FE80();
  swift_release();
  ((void (**)(char *, uint64_t))v110)[1](v23, v46);
  if (sub_24115D160())
  {
    sub_24115D150();
    sub_24101A6BC(&v117, v118);
    uint64_t v48 = (void *)sub_24115D0B0();
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v82;
    id v50 = v106;
    *(void *)(v49 + 32) = v106;
    uint64_t v116 = v49;
    sub_2411609C0();
    id v51 = v50;
    uint64_t v109 = v45;
    v110 = (void (**)(void, void))v51;
    uint64_t v52 = v86;
    sub_241160CF0();

    swift_bridgeObjectRelease();
    sub_24101F178((uint64_t)&v117);
    uint64_t v53 = v112;
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
    id v106 = v44;
    uint64_t v55 = v85;
    uint64_t v56 = v114;
    v54(v85, v115, v114);
    unint64_t v57 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    uint64_t v58 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v58 + v57, v55, v56);
    sub_24115FC10();
    sub_241019D40(&qword_26B005E20, MEMORY[0x263F44AB8]);
    sub_24102D4C0();
    uint64_t v59 = v89;
    uint64_t v60 = v88;
    sub_24115FED0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v52, v60);
    uint64_t v61 = v107;
    uint64_t v62 = v111;
    v81(v107, a1, v111);
    uint64_t v63 = swift_allocObject();
    v77(v63 + v80, v61, v62);
    *(void *)(v63 + v105) = v113;
    sub_24102C694();
    uint64_t v64 = v93;
    uint64_t v65 = v91;
    sub_24115FE80();
    swift_release();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v59, v65);
    uint64_t v66 = v101;
    sub_241160EC0();
    uint64_t v67 = (void *)sub_24115D170();
    uint64_t v68 = v96;
    sub_24101ABDC(v67, v96);

    uint64_t v69 = (void *)sub_24115D1A0();
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v68, v100);
    id v117 = v69;
    uint64_t v70 = sub_241160EB0();
    uint64_t v71 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v104, 1, 1, v70);
    sub_241024708(0, (unint64_t *)&qword_26B007340);
    sub_24102D09C();
    sub_24102A8F8();
    uint64_t v72 = v92;
    uint64_t v73 = v98;
    sub_24115FF20();
    sub_24102A960(v71, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110]);

    (*(void (**)(char *, uint64_t))(v102 + 8))(v66, v103);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v64, v73);
    sub_24102C3EC();
    uint64_t v74 = v95;
    uint64_t v47 = sub_24115FE20();

    (*(void (**)(char *, uint64_t))(v94 + 8))(v72, v74);
  }
  else
  {
    sub_24102D4C0();
    uint64_t v47 = sub_24115FE20();
  }
  (*(void (**)(char *, uint64_t))(v112 + 8))(v115, v114);
  return v47;
}

uint64_t sub_241019D40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241019D88(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_24102B488(255, &qword_26B005A10, MEMORY[0x263EFDCF0]);
    a4();
    sub_24102BF48(&qword_26B005A08, &qword_26B005A10, v6);
    unint64_t v7 = sub_24115FB60();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void *sub_241019E70(uint64_t a1)
{
  return sub_241019E94(a1);
}

void *sub_241019E94(uint64_t a1)
{
  uint64_t v61 = *v1;
  uint64_t v62 = v1;
  uint64_t v3 = sub_24115F790();
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v67 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v69 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241027640(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v60 = (char *)&v57 - v6;
  uint64_t v7 = sub_24115D1C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v63 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v57 - v11;
  uint64_t v13 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v14 = (int *)(v13 - 8);
  uint64_t v58 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v59 = (uint64_t)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v57 - v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v19(v12, a1, v7);
  uint64_t v68 = v19;
  v19(v18, (uint64_t)v12, v7);
  sub_24115D150();
  sub_24101A6BC(v73, v73[3]);
  uint64_t v20 = v7;
  uint64_t v21 = (void *)sub_24115D0B0();
  *(void *)&v18[v14[7]] = v21;
  id v22 = v21;
  sub_24101F178((uint64_t)v73);
  *(void *)&v18[v14[8]] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A400]), sel_initWithHealthStore_, v22);
  *(void *)&v18[v14[9]] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F45C78]), sel_initWithHealthStore_, v22);
  sub_24115F6F0();
  *(void *)&v18[v14[11]] = sub_24115F6E0();
  sub_24115F0C0();
  sub_24115F0B0();
  uint64_t v23 = sub_24115F070();
  swift_release();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v70 = v20;
  uint64_t v65 = v8 + 8;
  v24(v12, v20);
  *(void *)&v18[v14[10]] = v23;
  uint64_t v71 = a1;
  char v25 = sub_24115D180();
  uint64_t v64 = v24;
  if (v25)
  {
    sub_241055738((uint64_t)v18);
LABEL_8:
    uint64_t v32 = v26;
LABEL_9:
    uint64_t v33 = v69;
    id v30 = v63;
    goto LABEL_10;
  }
  if (sub_24115D160())
  {
    uint64_t v26 = sub_24101A994((uint64_t)v18);
    goto LABEL_8;
  }
  uint64_t v27 = (void *)sub_24115D170();
  if (!v27)
  {
    uint64_t v32 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_9;
  }
  id v28 = v27;
  id v29 = objc_msgSend(v27, sel_type);
  id v30 = v63;
  switch((unint64_t)v29)
  {
    case 1uLL:
      uint64_t v31 = sub_241026930((uint64_t)v18);
      goto LABEL_20;
    case 2uLL:
      uint64_t v31 = sub_24100E1CC((uint64_t)v18);
      goto LABEL_20;
    case 4uLL:
      uint64_t v31 = sub_241054704((uint64_t)v18);
LABEL_20:
      uint64_t v32 = v31;

      uint64_t v33 = v69;
      break;
    default:

      uint64_t v32 = (void *)MEMORY[0x263F8EE78];
      uint64_t v33 = v69;
      break;
  }
LABEL_10:
  sub_24115D160();
  if (sub_24115D3D0())
  {
    uint64_t v34 = sub_241160A70();
    uint64_t v35 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v60, 1, 1, v34);
    uint64_t v36 = v30;
    uint64_t v37 = v59;
    sub_241027390((uint64_t)v18, v59, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
    unint64_t v38 = (*(unsigned __int8 *)(v58 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    unint64_t v39 = (void *)swift_allocObject();
    v39[2] = 0;
    v39[3] = 0;
    v39[4] = v62;
    uint64_t v40 = v37;
    id v30 = v36;
    sub_2410275D8(v40, (uint64_t)v39 + v38, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
    swift_retain();
    sub_24101A700(v35, (uint64_t)&unk_268CF0928, (uint64_t)v39);
    swift_release();
  }
  sub_24115F740();
  v68(v30, v71, v70);
  swift_bridgeObjectRetain_n();
  uint64_t v41 = sub_24115F780();
  os_log_type_t v42 = sub_241160D50();
  int v43 = v42;
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    v73[0] = v71;
    *(_DWORD *)uint64_t v44 = 136315650;
    LODWORD(v68) = v43;
    uint64_t v45 = sub_241161A00();
    uint64_t v72 = sub_24101F0A4(v45, v46, v73);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2048;
    uint64_t v47 = v32[2];
    swift_bridgeObjectRelease();
    uint64_t v72 = v47;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 22) = 2080;
    uint64_t v48 = (void *)sub_24115D170();
    uint64_t v49 = sub_24115CEF0();
    id v50 = v32;
    id v51 = v30;
    unint64_t v53 = v52;

    uint64_t v72 = sub_24101F0A4(v49, v53, v73);
    sub_241161430();
    swift_bridgeObjectRelease();
    uint64_t v54 = v51;
    uint64_t v32 = v50;
    v64(v54, v70);
    _os_log_impl(&dword_241007000, v41, (os_log_type_t)v68, "%s Returning %ld pipeline(s) for source profile %s", (uint8_t *)v44, 0x20u);
    uint64_t v55 = v71;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v55, -1, -1);
    MEMORY[0x2456180C0](v44, -1, -1);

    (*(void (**)(char *, uint64_t))(v66 + 8))(v69, v67);
  }
  else
  {

    swift_bridgeObjectRelease();
    v64(v30, v70);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v33, v67);
  }
  sub_24101839C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  return v32;
}

void *sub_24101A6BC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_24101A700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241160A70();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_241160A60();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24101A8A4(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_241160A20();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_24101A8A4(uint64_t a1)
{
  sub_24101A930(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24101A930(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_24101A994(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v2 = type metadata accessor for MedicationsGeneratorContext();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_24115D170();
  if (!v5) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v6 = v5;
  switch((unint64_t)objc_msgSend(v5, sel_type))
  {
    case 1uLL:
      uint64_t v7 = sub_241026930(a1);
      sub_241027640(0, &qword_26B005F28, (uint64_t (*)(uint64_t))sub_24102F838, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24116B370;
      sub_241027390(a1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
      uint64_t v9 = type metadata accessor for CHRAddAccountGeneratorPipeline();
      swift_allocObject();
      uint64_t v10 = sub_241015FF0((uint64_t)v4);
      *(void *)(inited + 56) = v9;
      *(void *)(inited + 64) = sub_241027824(&qword_26B0050C8, (void (*)(uint64_t))type metadata accessor for CHRAddAccountGeneratorPipeline);
      *(void *)(inited + 32) = v10;
      uint64_t v15 = v7;
      sub_24102B0C8(inited);

      return v15;
    case 2uLL:
      uint64_t v12 = sub_24100E1CC(a1);
      goto LABEL_9;
    case 4uLL:
      uint64_t v12 = sub_241054704(a1);
LABEL_9:
      uint64_t v13 = v12;

      uint64_t result = v13;
      break;
    default:

      return (void *)MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_24101ABDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v21 = sub_24115D100();
  uint64_t v3 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_medicationDoseEventType);
  uint64_t v7 = v6;
  unint64_t v8 = MEMORY[0x263F8EE78];
  unint64_t v23 = MEMORY[0x263F8EE78];
  if (v6)
  {
    id v9 = v6;
    MEMORY[0x2456167B0]();
    if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_2411609D0();
    }
    sub_241160A00();
    sub_2411609C0();
    unint64_t v8 = v23;
  }

  sub_24101AEF4(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v10 = sub_24115CEB0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24116B200;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = *(void (**)(unint64_t, void, uint64_t))(v11 + 104);
  v16(v14 + v13, *MEMORY[0x263F45520], v10);
  v16(v15 + v12, *MEMORY[0x263F45538], v10);
  if (v8 >> 62)
  {
    sub_241024708(0, (unint64_t *)&qword_26B005E00);
    id v19 = a1;
    swift_bridgeObjectRetain();
    sub_2411616D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v17 = a1;
    swift_bridgeObjectRetain();
    sub_2411618A0();
    sub_241024708(0, (unint64_t *)&qword_26B005E00);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F45698], v21);
  return sub_24115D110();
}

void sub_24101AEF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24101AF58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24101AFBC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_24101B000()
{
  return sub_24101B014(*(void *)(v0 + 16), v0 + 24, *(void *)(v0 + 200), *(void *)(v0 + 208), *(void (**)(uint64_t *))(v0 + 216), *(void *)(v0 + 224));
}

uint64_t sub_24101B014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v45 = a6;
  unint64_t v46 = a5;
  uint64_t v10 = sub_24115F790();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  uint64_t v14 = sub_24115F780();
  os_log_type_t v15 = sub_241160D50();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v42 = v10;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v44 = a4;
    id v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v43 = a3;
    uint64_t v19 = v18;
    v61[0] = v18;
    *(_DWORD *)id v17 = 136446210;
    *(void *)&long long v41 = v17 + 4;
    *(void *)&v57[0] = a1;
    sub_24101F3E0();
    uint64_t v20 = sub_241160760();
    *(void *)&v57[0] = sub_24101F0A4(v20, v21, v61);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v14, v15, "[%{public}s] Dispatch group notify for chart data source", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v19;
    a3 = v43;
    MEMORY[0x2456180C0](v22, -1, -1);
    unint64_t v23 = v17;
    a4 = v44;
    MEMORY[0x2456180C0](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v42);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  long long v24 = *(_OWORD *)a2;
  long long v40 = *(_OWORD *)(a2 + 16);
  long long v41 = v24;
  long long v39 = *(_OWORD *)(a2 + 32);
  uint64_t v26 = *(void *)(a2 + 48);
  uint64_t v25 = *(void *)(a2 + 56);
  char v27 = *(unsigned char *)(a2 + 64);
  uint64_t v28 = *(void *)(a2 + 72);
  uint64_t v38 = *(void *)(a2 + 80);
  int v37 = *(unsigned __int8 *)(a2 + 88);
  long long v36 = *(_OWORD *)(a2 + 96);
  uint64_t v35 = *(void *)(a2 + 112);
  LODWORD(v44) = *(unsigned __int8 *)(a2 + 152);
  uint64_t v43 = *(void *)(a2 + 160);
  LODWORD(v42) = *(unsigned __int8 *)(a2 + 168);
  sub_24101B440(a2 + 120, (uint64_t)v60);
  sub_24101B440(a2 + 136, (uint64_t)v59);
  swift_beginAccess();
  uint64_t v29 = *(void *)(a3 + 16);
  unint64_t v30 = *(void *)(a3 + 24);
  sub_241022D34(v29, v30);
  sub_241022D34(v29, v30);
  sub_241022C6C(a2);
  sub_24101B410((uint64_t)v59);
  swift_beginAccess();
  uint64_t v31 = *(void *)(a4 + 16);
  unint64_t v32 = *(void *)(a4 + 24);
  sub_241022D34(v31, v32);
  sub_241022D34(v31, v32);
  sub_24101B410((uint64_t)v60);
  long long v47 = v41;
  long long v48 = v40;
  long long v49 = v39;
  *(void *)&long long v50 = v26;
  *((void *)&v50 + 1) = v25;
  LOBYTE(v51) = v27;
  *((void *)&v51 + 1) = v28;
  *(void *)&long long v52 = v38;
  BYTE8(v52) = v37;
  long long v53 = v36;
  *(void *)&long long v54 = v35;
  *((void *)&v54 + 1) = v31;
  *(void *)&long long v55 = v32;
  *((void *)&v55 + 1) = v29;
  *(void *)&v56[0] = v30;
  BYTE8(v56[0]) = v44;
  *(void *)&v56[1] = v43;
  BYTE8(v56[1]) = v42;
  sub_241022C6C((uint64_t)&v47);
  sub_2410230DC(v29, v30);
  sub_2410230DC(v31, v32);
  v57[8] = v55;
  v58[0] = v56[0];
  *(_OWORD *)((char *)v58 + 9) = *(_OWORD *)((char *)v56 + 9);
  v57[4] = v51;
  v57[5] = v52;
  v57[6] = v53;
  v57[7] = v54;
  v57[0] = v47;
  v57[1] = v48;
  v57[2] = v49;
  v57[3] = v50;
  sub_24101BC5C((uint64_t)v57);
  sub_24101CB4C((uint64_t)v57, (uint64_t)v61);
  v46(v61);
  sub_241022FBC((uint64_t)&v47);
  return sub_241022FBC((uint64_t)&v47);
}

uint64_t sub_24101B410(uint64_t a1)
{
  return a1;
}

uint64_t sub_24101B440(uint64_t a1, uint64_t a2)
{
  sub_241023CC0(0, &qword_26B0040E0, MEMORY[0x263F06F78], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24101B4C8(void *a1, void *a2, void (*a3)(unsigned char *), uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    *(void *)&v38[0] = a2;
    sub_2410E69EC((uint64_t)v38);
    sub_24101CB4C((uint64_t)v38, (uint64_t)v41);
    id v7 = a2;
    a3(v41);
  }
  else
  {
    long long v21 = *(_OWORD *)a5;
    uint64_t v10 = *(void *)(a5 + 24);
    uint64_t v20 = *(void *)(a5 + 16);
    long long v19 = *(_OWORD *)(a5 + 32);
    uint64_t v11 = *(void *)(a5 + 48);
    uint64_t v12 = *(void *)(a5 + 56);
    char v13 = *(unsigned char *)(a5 + 64);
    uint64_t v14 = *(void *)(a5 + 72);
    uint64_t v18 = *(void *)(a5 + 80);
    char v17 = *(unsigned char *)(a5 + 88);
    uint64_t v27 = *(void *)(a5 + 104);
    long long v25 = *(_OWORD *)(a5 + 128);
    long long v26 = *(_OWORD *)(a5 + 112);
    uint64_t v24 = *(void *)(a5 + 144);
    char v23 = *(unsigned char *)(a5 + 152);
    uint64_t v22 = *(void *)(a5 + 160);
    char v15 = *(unsigned char *)(a5 + 168);
    sub_2410230F0(a5 + 96, (uint64_t)&v40, (uint64_t (*)(void))sub_2410231C0);
    sub_241022C6C(a5);
    id v16 = a1;
    sub_24101BC68(&v40);
    long long v28 = v21;
    *(void *)&long long v29 = v20;
    *((void *)&v29 + 1) = v10;
    long long v30 = v19;
    *(void *)&long long v31 = v11;
    *((void *)&v31 + 1) = v12;
    LOBYTE(v32) = v13;
    *((void *)&v32 + 1) = v14;
    *(void *)&long long v33 = v18;
    BYTE8(v33) = v17;
    *(void *)&long long v34 = a1;
    *((void *)&v34 + 1) = v27;
    long long v35 = v26;
    long long v36 = v25;
    *(void *)int v37 = v24;
    v37[8] = v23;
    *(void *)&v37[16] = v22;
    v37[24] = v15;
    v38[0] = v21;
    v38[1] = v29;
    v38[4] = v32;
    uint64_t v38[5] = v33;
    *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)&v37[9];
    v38[8] = v25;
    v39[0] = *(_OWORD *)v37;
    v38[6] = v34;
    v38[7] = v26;
    v38[2] = v19;
    v38[3] = v31;
    sub_24101BC5C((uint64_t)v38);
    sub_24101CB4C((uint64_t)v38, (uint64_t)v41);
    a3(v41);
    sub_241022FBC((uint64_t)&v28);
  }
}

void sub_24101B6B0(uint64_t a1, unint64_t a2, void *a3, void (*a4)(void *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v13 = *(_OWORD *)(a7 + 144);
  long long v95 = *(_OWORD *)(a7 + 128);
  v96[0] = v13;
  *(_OWORD *)((char *)v96 + 9) = *(_OWORD *)(a7 + 153);
  long long v14 = *(_OWORD *)(a7 + 80);
  long long v91 = *(_OWORD *)(a7 + 64);
  long long v92 = v14;
  long long v15 = *(_OWORD *)(a7 + 112);
  long long v93 = *(_OWORD *)(a7 + 96);
  long long v94 = v15;
  long long v16 = *(_OWORD *)(a7 + 16);
  long long v87 = *(_OWORD *)a7;
  long long v88 = v16;
  long long v17 = *(_OWORD *)(a7 + 48);
  long long v89 = *(_OWORD *)(a7 + 32);
  long long v90 = v17;
  uint64_t v18 = sub_24115F790();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  long long v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    *(void *)&long long v75 = a3;
    sub_2410E69EC((uint64_t)&v75);
    sub_24101CB4C((uint64_t)&v75, (uint64_t)v86);
    id v22 = a3;
    a4(v86);

    return;
  }
  if (a2 && (unint64_t v23 = sub_24101BC94(a2)) != 0)
  {
    unint64_t v24 = v23;
    uint64_t v25 = v23 & 0xFFFFFFFFFFFFFF8;
    if (v23 >> 62)
    {
      sub_241022C6C(a7);
      long long v26 = (void *)sub_2411616E0();
      uint64_t v63 = a5;
      uint64_t v64 = a4;
      if (!v26) {
        goto LABEL_11;
      }
    }
    else
    {
      long long v26 = *(void **)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_241022C6C(a7);
      uint64_t v63 = a5;
      uint64_t v64 = a4;
      if (!v26)
      {
LABEL_11:
        swift_bridgeObjectRelease();
        long long v28 = *(_OWORD *)a7;
        long long v56 = *(_OWORD *)(a7 + 16);
        long long v57 = v28;
        long long v55 = *(_OWORD *)(a7 + 32);
        uint64_t v29 = *(void *)(a7 + 56);
        uint64_t v54 = *(void *)(a7 + 48);
        char v30 = *(unsigned char *)(a7 + 64);
        uint64_t v31 = *(void *)(a7 + 72);
        uint64_t v32 = *(void *)(a7 + 80);
        char v33 = *(unsigned char *)(a7 + 88);
        uint64_t v34 = *(void *)(a7 + 96);
        long long v35 = *(_OWORD *)(a7 + 112);
        long long v61 = *(_OWORD *)(a7 + 128);
        long long v62 = v35;
        uint64_t v60 = *(void *)(a7 + 144);
        LODWORD(v59) = *(unsigned __int8 *)(a7 + 152);
        uint64_t v58 = *(void *)(a7 + 160);
        char v36 = *(unsigned char *)(a7 + 168);
        sub_2410230F0(a7 + 104, (uint64_t)&v85, (uint64_t (*)(void))sub_241023158);
        id v37 = v26;
        sub_24101BC68(&v85);
        long long v65 = v57;
        long long v66 = v56;
        long long v67 = v55;
        *(void *)&long long v68 = v54;
        *((void *)&v68 + 1) = v29;
        LOBYTE(v69) = v30;
        *((void *)&v69 + 1) = v31;
        *(void *)&long long v70 = v32;
        BYTE8(v70) = v33;
        *(void *)&long long v71 = v34;
        *((void *)&v71 + 1) = v26;
        long long v72 = v62;
        long long v73 = v61;
        *(void *)&v74[0] = v60;
        BYTE8(v74[0]) = (_BYTE)v59;
        *(void *)&v74[1] = v58;
        BYTE8(v74[1]) = v36;
        sub_241022C6C((uint64_t)&v65);

        long long v83 = v73;
        v84[0] = v74[0];
        *(_OWORD *)((char *)v84 + 9) = *(_OWORD *)((char *)v74 + 9);
        long long v79 = v69;
        long long v80 = v70;
        long long v81 = v71;
        long long v82 = v72;
        long long v75 = v65;
        long long v76 = v66;
        long long v77 = v67;
        long long v78 = v68;
        sub_24101BC5C((uint64_t)&v75);
        sub_24101CB4C((uint64_t)&v75, (uint64_t)v86);
        v64(v86);
        sub_241022FBC((uint64_t)&v65);
        sub_241022FBC((uint64_t)&v65);
        return;
      }
    }
    if ((v24 & 0xC000000000000001) != 0)
    {
      id v27 = (id)MEMORY[0x245617450](0, v24);
      goto LABEL_10;
    }
    if (*(void *)(v25 + 16))
    {
      id v27 = *(id *)(v24 + 32);
LABEL_10:
      long long v26 = v27;
      goto LABEL_11;
    }
    __break(1u);
  }
  else
  {
    sub_24115F740();
    sub_241022C6C(a7);
    sub_241022C6C(a7);
    uint64_t v38 = sub_24115F780();
    os_log_type_t v39 = sub_241160D30();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      LODWORD(v61) = v40;
      uint64_t v42 = v41;
      *(void *)&long long v62 = swift_slowAlloc();
      *(void *)&long long v75 = v62;
      *(_DWORD *)uint64_t v42 = 136446466;
      uint64_t v63 = a5;
      v86[0] = a6;
      sub_24101F3E0();
      uint64_t v64 = a4;
      uint64_t v43 = sub_241160760();
      v86[0] = sub_24101F0A4(v43, v44, (uint64_t *)&v75);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2082;
      uint64_t v60 = v42 + 14;
      id v45 = objc_msgSend(*(id *)a7, sel_semanticIdentifier);
      id v46 = objc_msgSend(v45, sel_stringValue);

      uint64_t v47 = sub_241160730();
      os_log_t v59 = v38;
      uint64_t v49 = v48;

      v86[0] = v47;
      v86[1] = v49;
      uint64_t v50 = sub_241160790();
      v86[0] = sub_24101F0A4(v50, v51, (uint64_t *)&v75);
      a4 = v64;
      sub_241161430();
      swift_bridgeObjectRelease();
      sub_241022FBC(a7);
      sub_241022FBC(a7);
      uint64_t v38 = v59;
      _os_log_impl(&dword_241007000, v59, (os_log_type_t)v61, "[%{public}s] Could not properly query HKMedicationDoseEvent samples for medication identifier: %{public}s", (uint8_t *)v42, 0x16u);
      uint64_t v52 = v62;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v52, -1, -1);
      MEMORY[0x2456180C0](v42, -1, -1);
    }
    else
    {
      sub_241022FBC(a7);
      sub_241022FBC(a7);
    }

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    long long v83 = v95;
    v84[0] = v96[0];
    *(_OWORD *)((char *)v84 + 9) = *(_OWORD *)((char *)v96 + 9);
    long long v79 = v91;
    long long v80 = v92;
    long long v81 = v93;
    long long v82 = v94;
    long long v75 = v87;
    long long v76 = v88;
    long long v77 = v89;
    long long v78 = v90;
    sub_24101BC5C((uint64_t)&v75);
    sub_24101CB4C((uint64_t)&v75, (uint64_t)v86);
    a4(v86);
  }
}

uint64_t sub_24101BC5C(uint64_t result)
{
  *(unsigned char *)(result + 169) = 0;
  return result;
}

id *sub_24101BC68(id *a1)
{
  return a1;
}

uint64_t sub_24101BC94(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_241161660();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x245617450](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_241161640();
        sub_241161670();
        sub_241161680();
        sub_241161650();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        unint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_241161640();
        sub_241161670();
        sub_241161680();
        sub_241161650();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_2411616E0();
    swift_bridgeObjectRelease();
    sub_241161660();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_24101BE78(uint64_t a1, uint64_t a2, uint64_t (*a3)())
{
  uint64_t v4 = v3;
  long long v65 = a3;
  uint64_t v73 = a2;
  uint64_t v6 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v71 = (uint64_t)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24101CA5C();
  uint64_t v10 = v9;
  uint64_t v64 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v63 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24101CC4C();
  uint64_t v72 = v12;
  uint64_t v70 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  long long v68 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24101CD40(0, &qword_26B005868, (void (*)(uint64_t))sub_24101CC4C, (void (*)(void))sub_24101CD0C);
  uint64_t v69 = v14;
  uint64_t v67 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  long long v66 = (char *)v58 - v15;
  uint64_t v16 = sub_24115F790();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  sub_241022C6C(a1);
  sub_241022C6C(a1);
  uint64_t v20 = sub_24115F780();
  os_log_type_t v21 = sub_241160D50();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v62 = v4;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v61 = v10;
    uint64_t v24 = v23;
    uint64_t v59 = swift_slowAlloc();
    v77[0] = v59;
    *(_DWORD *)uint64_t v24 = 136446466;
    uint64_t v75 = v8;
    uint64_t v25 = sub_241161A00();
    uint64_t v60 = v16;
    uint64_t v76 = sub_24101F0A4(v25, v26, v77);
    uint64_t v74 = v7;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    v58[1] = v24 + 14;
    id v27 = objc_msgSend(*(id *)a1, sel_semanticIdentifier);
    id v28 = objc_msgSend(v27, sel_stringValue);

    uint64_t v29 = sub_241160730();
    unint64_t v31 = v30;

    uint64_t v76 = sub_24101F0A4(v29, v31, v77);
    uint64_t v7 = v74;
    sub_241161430();
    swift_bridgeObjectRelease();
    sub_241022FBC(a1);
    sub_241022FBC(a1);
    _os_log_impl(&dword_241007000, v20, v21, "[%{public}s] Populating data for %s", (uint8_t *)v24, 0x16u);
    uint64_t v32 = v59;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v32, -1, -1);
    uint64_t v33 = v24;
    uint64_t v10 = v61;
    MEMORY[0x2456180C0](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v60);
  }
  else
  {
    sub_241022FBC(a1);
    sub_241022FBC(a1);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  uint64_t v34 = swift_allocObject();
  long long v35 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v34 + 136) = *(_OWORD *)(a1 + 112);
  long long v36 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v34 + 152) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v34 + 168) = v36;
  *(_OWORD *)(v34 + 177) = *(_OWORD *)(a1 + 153);
  long long v37 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v34 + 72) = *(_OWORD *)(a1 + 48);
  long long v38 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v34 + 88) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v34 + 104) = v38;
  *(_OWORD *)(v34 + 120) = v35;
  long long v39 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v34 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v34 + 40) = v39;
  int v40 = v65;
  *(void *)(v34 + 16) = v65;
  *(_OWORD *)(v34 + 56) = v37;
  sub_241022C6C(a1);
  uint64_t v41 = (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_24101CBCC(0, &qword_26B005A50, MEMORY[0x263EFDCF0]);
  uint64_t v74 = v42;
  uint64_t v75 = sub_24101CA18(&qword_26B005A48, &qword_26B005A50, v41);
  uint64_t v43 = v40;
  unint64_t v44 = v63;
  sub_24115FD10();
  sub_241029BA0(&qword_26B005C38, (void (*)(uint64_t))sub_24101CA5C);
  uint64_t v45 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v44, v10);
  v77[0] = v45;
  long long v65 = type metadata accessor for MedicationsGeneratorContext;
  uint64_t v46 = v73;
  uint64_t v47 = v71;
  sub_2410273F8(v73, v71, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  unint64_t v48 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = v62;
  *(void *)(v49 + 16) = v62;
  sub_2410230F0(v47, v49 + v48, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  sub_24115FC10();
  unint64_t v51 = v68;
  sub_24115FEE0();
  swift_release();
  swift_release();
  sub_2410273F8(v46, v47, (uint64_t (*)(void))v65);
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = v50;
  sub_2410230F0(v47, v52 + v48, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  sub_24115FC10();
  sub_24101CD0C();
  uint64_t v53 = v66;
  uint64_t v54 = v72;
  sub_24115FEE0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v51, v54);
  sub_24101CE2C();
  uint64_t v55 = v69;
  uint64_t v56 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v55);
  return v56;
}

uint64_t sub_24101C688@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = swift_allocObject();
  long long v9 = a1[9];
  *(_OWORD *)(v8 + 144) = a1[8];
  *(_OWORD *)(v8 + 160) = v9;
  *(_OWORD *)(v8 + 169) = *(_OWORD *)((char *)a1 + 153);
  long long v10 = a1[5];
  *(_OWORD *)(v8 + 80) = a1[4];
  *(_OWORD *)(v8 + 96) = v10;
  long long v11 = a1[7];
  *(_OWORD *)(v8 + 112) = a1[6];
  *(_OWORD *)(v8 + 128) = v11;
  long long v12 = a1[1];
  *(_OWORD *)(v8 + 16) = *a1;
  *(_OWORD *)(v8 + 32) = v12;
  long long v13 = a1[3];
  *(_OWORD *)(v8 + 48) = a1[2];
  *(_OWORD *)(v8 + 64) = v13;
  *(void *)(v8 + 192) = a2;
  *(void *)(v8 + 200) = a3;
  uint64_t v14 = (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, void))MEMORY[0x263EFDE20];
  sub_24101CBCC(0, &qword_26B005BE0, MEMORY[0x263EFDE20]);
  swift_allocObject();
  sub_241022C6C((uint64_t)a1);
  id v15 = a3;
  sub_24115FCF0();
  sub_24101CA18(&qword_26B005BD8, &qword_26B005BE0, v14);
  uint64_t v16 = sub_24115FE20();
  uint64_t result = swift_release();
  *a4 = v16;
  return result;
}

uint64_t sub_24101C7D4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_24101CA5C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = a1[9];
  v29[8] = a1[8];
  v30[0] = v13;
  *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)((char *)a1 + 153);
  long long v14 = a1[5];
  v29[4] = a1[4];
  v29[5] = v14;
  long long v15 = a1[7];
  v29[6] = a1[6];
  v29[7] = v15;
  long long v16 = a1[1];
  v29[0] = *a1;
  long long v17 = a1[2];
  v29[3] = a1[3];
  v29[1] = v16;
  void v29[2] = v17;
  uint64_t v18 = *(void **)(a3 + *(int *)(type metadata accessor for MedicationsGeneratorContext() + 20));
  uint64_t v19 = swift_allocObject();
  long long v20 = a1[9];
  *(_OWORD *)(v19 + 144) = a1[8];
  *(_OWORD *)(v19 + 160) = v20;
  *(_OWORD *)(v19 + 169) = *(_OWORD *)((char *)a1 + 153);
  long long v21 = a1[5];
  *(_OWORD *)(v19 + 80) = a1[4];
  *(_OWORD *)(v19 + 96) = v21;
  long long v22 = a1[7];
  *(_OWORD *)(v19 + 112) = a1[6];
  *(_OWORD *)(v19 + 128) = v22;
  long long v23 = a1[1];
  *(_OWORD *)(v19 + 16) = *a1;
  *(_OWORD *)(v19 + 32) = v23;
  long long v24 = a1[3];
  *(_OWORD *)(v19 + 48) = a1[2];
  *(_OWORD *)(v19 + 64) = v24;
  *(void *)(v19 + 192) = a2;
  *(void *)(v19 + 200) = v18;
  sub_241022C6C((uint64_t)v29);
  uint64_t v25 = (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_24101CBCC(0, &qword_26B005A50, MEMORY[0x263EFDCF0]);
  sub_24101CA18(&qword_26B005A48, &qword_26B005A50, v25);
  id v26 = v18;
  sub_24115FD10();
  sub_241029BA0(&qword_26B005C38, (void (*)(uint64_t))sub_24101CA5C);
  uint64_t v27 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a4 = v27;
  return result;
}

uint64_t sub_24101CA18(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24101CBCC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24101CA5C()
{
  if (!qword_26B005C40)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_24101CBCC(255, &qword_26B005A50, MEMORY[0x263EFDCF0]);
    sub_24101CA18(&qword_26B005A48, &qword_26B005A50, v0);
    unint64_t v1 = sub_24115FD20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B005C40);
    }
  }
}

uint64_t sub_24101CB10(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(unsigned char *))(v1 + 16);
  sub_24101CB4C(a1, (uint64_t)v4);
  return v2(v4);
}

uint64_t sub_24101CB4C(uint64_t a1, uint64_t a2)
{
  sub_24101CBCC(0, &qword_26B005FF8, MEMORY[0x263F8E848]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24101CBCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241020840(255, (unint64_t *)&qword_26B0073B0);
    unint64_t v7 = a3(a1, &type metadata for MedicationShareableData, v6, MEMORY[0x263F8E4E0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_24101CC4C()
{
  if (!qword_26B005888)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_24101CBCC(255, &qword_26B005A50, MEMORY[0x263EFDCF0]);
    sub_24101CA18(&qword_26B005A48, &qword_26B005A50, v0);
    unint64_t v1 = sub_24115FBA0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B005888);
    }
  }
}

uint64_t sub_24101CD0C()
{
  return sub_241029BA0(&qword_26B005880, (void (*)(uint64_t))sub_24101CC4C);
}

void sub_24101CD40(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    unint64_t v7 = (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, void))MEMORY[0x263EFDCF0];
    sub_24101CBCC(255, &qword_26B005A50, MEMORY[0x263EFDCF0]);
    a3(255);
    sub_24101CA18(&qword_26B005A48, &qword_26B005A50, v7);
    a4();
    unint64_t v8 = sub_24115FBA0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_24101CE2C()
{
  unint64_t result = qword_26B005860;
  if (!qword_26B005860)
  {
    sub_24101CD40(255, &qword_26B005868, (void (*)(uint64_t))sub_24101CC4C, (void (*)(void))sub_24101CD0C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005860);
  }
  return result;
}

uint64_t sub_24101CEB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v105 = a3;
  uint64_t v5 = sub_24115D3C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v94 - v10;
  uint64_t v12 = sub_24115F790();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v104 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_24115D320();
  uint64_t v15 = MEMORY[0x270FA5388](v113);
  uint64_t v109 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v106 = (char *)&v94 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v115 = (char *)&v94 - v20;
  MEMORY[0x270FA5388](v19);
  unint64_t v23 = (unint64_t)&v94 - v22;
  uint64_t v24 = *a1;
  uint64_t v25 = *(void *)(*a1 + 16);
  if (!v25)
  {
    sub_2410268CC(0, &qword_26B005F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
    unint64_t v65 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_24116B370;
    *(void *)(v66 + v65) = a2;
    (*(void (**)(void))(v6 + 104))();
    *uint64_t v105 = v66;
    return swift_bridgeObjectRetain();
  }
  uint64_t v103 = a2;
  uint64_t v97 = v13;
  uint64_t v98 = v12;
  uint64_t v99 = v11;
  long long v95 = v9;
  uint64_t v100 = v6;
  uint64_t v101 = v5;
  uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
  uint64_t v26 = v21 + 16;
  v111 = v27;
  unint64_t v96 = (*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64);
  id v28 = (void *)(v24 + v96);
  uint64_t v29 = *(void *)(v26 + 56);
  v107 = (void (**)(unint64_t, char *, uint64_t))(v26 + 24);
  uint64_t v108 = (void (**)(unint64_t, char *, uint64_t))(v26 + 16);
  uint64_t v112 = v26;
  v110 = (void (**)(unint64_t, uint64_t))(v26 - 8);
  uint64_t v102 = v24;
  swift_bridgeObjectRetain();
  uint64_t v30 = MEMORY[0x263F8EE80];
  uint64_t v31 = v113;
  uint64_t v114 = v29;
  do
  {
    uint64_t v34 = v111;
    v111((char *)v23, (unint64_t)v28, v31);
    uint64_t v32 = sub_24115D2F0();
    uint64_t v36 = v35;
    v34(v115, v23, v31);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v117[0] = v30;
    long long v38 = (void *)v30;
    unint64_t v40 = sub_24101DC1C(v32, v36);
    unint64_t v41 = *(void *)(v30 + 16);
    BOOL v42 = (v39 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42))
    {
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    char v44 = v39;
    if (*(void *)(v30 + 24) >= v43)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        long long v38 = (void *)v117[0];
        if (v39) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_241065BD8();
        long long v38 = (void *)v117[0];
        if (v44) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_24101DD78(v43, isUniquelyReferenced_nonNull_native);
      unint64_t v45 = sub_24101DC1C(v32, v36);
      if ((v44 & 1) != (v46 & 1))
      {
LABEL_62:
        uint64_t result = sub_2411618E0();
        __break(1u);
        return result;
      }
      unint64_t v40 = v45;
      long long v38 = (void *)v117[0];
      if (v44)
      {
LABEL_3:
        uint64_t v32 = v114;
        uint64_t v31 = v113;
        (*v107)(v38[7] + v40 * v114, v115, v113);
        goto LABEL_4;
      }
    }
    v38[(v40 >> 6) + 8] |= 1 << v40;
    uint64_t v47 = (uint64_t *)(v38[6] + 16 * v40);
    *uint64_t v47 = v32;
    v47[1] = v36;
    uint64_t v32 = v114;
    uint64_t v31 = v113;
    (*v108)(v38[7] + v40 * v114, v115, v113);
    uint64_t v48 = v38[2];
    BOOL v49 = __OFADD__(v48, 1);
    unint64_t v41 = v48 + 1;
    if (v49) {
      goto LABEL_59;
    }
    v38[2] = v41;
    swift_bridgeObjectRetain();
LABEL_4:
    uint64_t v30 = v117[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = *v110;
    (*v110)(v23, v31);
    id v28 = (void *)((char *)v28 + v32);
    --v25;
  }
  while (v25);
  swift_bridgeObjectRelease();
  uint64_t v50 = *(char **)(v103 + 16);
  if (v50)
  {
    unint64_t v23 = v103 + v96;
    swift_bridgeObjectRetain();
    uint64_t v51 = MEMORY[0x263F8EE80];
    uint64_t v52 = v106;
    uint64_t v25 = (uint64_t)v111;
    while (1)
    {
      uint64_t v115 = v50;
      ((void (*)(char *, unint64_t, uint64_t))v25)(v52, v23, v31);
      id v28 = (void *)sub_24115D2F0();
      uint64_t v32 = v54;
      ((void (*)(char *, char *, uint64_t))v25)(v109, v52, v31);
      uint64_t v36 = swift_isUniquelyReferenced_nonNull_native();
      v117[0] = v51;
      long long v38 = (void *)v51;
      unint64_t v55 = sub_24101DC1C((uint64_t)v28, v32);
      uint64_t v57 = v51;
      unint64_t v40 = v55;
      unint64_t v41 = *(void *)(v57 + 16);
      BOOL v58 = (v56 & 1) == 0;
      uint64_t v59 = v41 + v58;
      if (__OFADD__(v41, v58)) {
        goto LABEL_58;
      }
      char v60 = v56;
      if (*(void *)(v57 + 24) >= v59)
      {
        if (v36)
        {
          long long v38 = (void *)v117[0];
          if ((v56 & 1) == 0) {
            goto LABEL_27;
          }
        }
        else
        {
          sub_241065BD8();
          long long v38 = (void *)v117[0];
          if ((v60 & 1) == 0) {
            goto LABEL_27;
          }
        }
      }
      else
      {
        sub_24101DD78(v59, v36);
        unint64_t v61 = sub_24101DC1C((uint64_t)v28, v32);
        if ((v60 & 1) != (v62 & 1)) {
          goto LABEL_62;
        }
        unint64_t v40 = v61;
        long long v38 = (void *)v117[0];
        if ((v60 & 1) == 0)
        {
LABEL_27:
          v38[(v40 >> 6) + 8] |= 1 << v40;
          uint64_t v63 = (void *)(v38[6] + 16 * v40);
          *uint64_t v63 = v28;
          v63[1] = v32;
          uint64_t v31 = v113;
          (*v108)(v38[7] + v40 * v114, v109, v113);
          uint64_t v64 = v38[2];
          BOOL v49 = __OFADD__(v64, 1);
          unint64_t v41 = v64 + 1;
          if (v49) {
            goto LABEL_60;
          }
          v38[2] = v41;
          swift_bridgeObjectRetain();
          uint64_t v53 = v114;
          goto LABEL_19;
        }
      }
      uint64_t v31 = v113;
      uint64_t v53 = v114;
      (*v107)(v38[7] + v40 * v114, v109, v113);
LABEL_19:
      uint64_t v51 = v117[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v52 = v106;
      v33((unint64_t)v106, v31);
      v23 += v53;
      uint64_t v50 = v115 - 1;
      if (v115 == (char *)1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
    }
  }
  uint64_t v51 = MEMORY[0x263F8EE80];
LABEL_36:
  uint64_t v68 = sub_241025618(v30);
  uint64_t v69 = swift_bridgeObjectRetain();
  uint64_t v70 = sub_241025618(v69);
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_24102A84C(v70, v68);
  uint64_t v71 = v104;
  if (*(void *)(v36 + 16) <= *(void *)(v70 + 16) >> 3)
  {
    v117[0] = v70;
    swift_bridgeObjectRetain();
    sub_24106E9F8(v36);
    uint64_t v25 = v117[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_24101E1C4(v36, v70);
  }
  uint64_t v115 = (char *)v51;
  if (*(void *)(v36 + 16) <= *(void *)(v68 + 16) >> 3)
  {
    v117[0] = v68;
    swift_bridgeObjectRetain();
    sub_24106E9F8(v36);
    uint64_t v72 = v117[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_24101E1C4(v36, v68);
  }
  sub_24115F730();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v73 = sub_24115F780();
  os_log_type_t v74 = sub_241160D50();
  int v75 = v74;
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v76 = swift_slowAlloc();
    uint64_t v114 = swift_slowAlloc();
    v117[0] = v114;
    *(_DWORD *)uint64_t v76 = 136316162;
    LODWORD(v113) = v75;
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_241160BC0();
    unint64_t v79 = v78;
    swift_bridgeObjectRelease();
    uint64_t v116 = sub_24101F0A4(v77, v79, v117);
    sub_241161430();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 12) = 2048;
    uint64_t v80 = *(void *)(v68 + 16);
    swift_bridgeObjectRelease();
    uint64_t v116 = v80;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v81 = sub_241160BC0();
    unint64_t v83 = v82;
    swift_release();
    uint64_t v116 = sub_24101F0A4(v81, v83, v117);
    sub_241161430();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 32) = 2048;
    uint64_t v84 = *(void *)(v25 + 16);
    swift_bridgeObjectRelease();
    uint64_t v116 = v84;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 42) = 2048;
    uint64_t v85 = *(void *)(v72 + 16);
    swift_bridgeObjectRelease();
    uint64_t v116 = v85;
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v73, (os_log_type_t)v113, "[SharableModelContextChangeGenerator] received %s new models, found %ld old models, %s of them intersects, %ld of them are new, %ld of them should be removed", (uint8_t *)v76, 0x34u);
    uint64_t v86 = v114;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v86, -1, -1);
    MEMORY[0x2456180C0](v76, -1, -1);

    (*(void (**)(char *, uint64_t))(v97 + 8))(v104, v98);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v71, v98);
  }
  uint64_t v32 = (uint64_t)v105;
  uint64_t v30 = v100;
  uint64_t v31 = v101;
  id v28 = v99;
  if (*(void *)(v72 + 16))
  {
    long long v87 = sub_24114CD20(v72);
    swift_bridgeObjectRelease();
    *id v28 = v87;
    (*(void (**)(void *, void, uint64_t))(v30 + 104))(v28, *MEMORY[0x263F458A0], v31);
    unint64_t v40 = sub_24102A570(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v23 = *(void *)(v40 + 16);
    unint64_t v41 = *(void *)(v40 + 24);
    long long v38 = (void *)(v23 + 1);
    if (v23 < v41 >> 1)
    {
LABEL_47:
      *(void *)(v40 + 16) = v38;
      (*(void (**)(unint64_t, void *, uint64_t))(v30 + 32))(v40+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v23, v28, v31);
      goto LABEL_49;
    }
LABEL_61:
    unint64_t v40 = sub_24102A570(v41 > 1, (int64_t)v38, 1, v40);
    goto LABEL_47;
  }
  swift_bridgeObjectRelease();
  unint64_t v40 = MEMORY[0x263F8EE78];
LABEL_49:
  uint64_t v88 = (uint64_t)v115;
  swift_bridgeObjectRetain();
  uint64_t v89 = sub_241025F8C(v36, v88);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v90 = sub_241025F8C(v25, v88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v117[0] = v89;
  sub_24102B09C(v90);
  if (*(void *)(v117[0] + 16))
  {
    long long v91 = v95;
    *long long v95 = v117[0];
    (*(void (**)(void *, void, uint64_t))(v30 + 104))(v91, *MEMORY[0x263F45880], v31);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v40 = sub_24102A570(0, *(void *)(v40 + 16) + 1, 1, v40);
    }
    unint64_t v93 = *(void *)(v40 + 16);
    unint64_t v92 = *(void *)(v40 + 24);
    if (v93 >= v92 >> 1) {
      unint64_t v40 = sub_24102A570(v92 > 1, v93 + 1, 1, v40);
    }
    *(void *)(v40 + 16) = v93 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, void *, uint64_t))(v30 + 32))(v40+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v93, v91, v31);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  *(void *)uint64_t v32 = v40;
  return result;
}

unint64_t sub_24101DC1C(uint64_t a1, uint64_t a2)
{
  sub_241161950();
  sub_241160830();
  uint64_t v4 = sub_2411619A0();

  return sub_24101DC94(a1, a2, v4);
}

unint64_t sub_24101DC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_241161890() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_241161890() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_24101DD78(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_24115D320();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_24101E15C();
  int v47 = a2;
  uint64_t v8 = sub_241161710();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  char v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  BOOL v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  unint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  BOOL v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    unint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    id v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_241161950();
    sub_241160830();
    uint64_t result = sub_2411619A0();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    *uint64_t v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v9;
  return result;
}

void sub_24101E15C()
{
  if (!qword_26B005ED8)
  {
    sub_24115D320();
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005ED8);
    }
  }
}

uint64_t sub_24101E1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_24101E92C();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_241161950();
      swift_bridgeObjectRetain();
      sub_241160830();
      uint64_t v19 = sub_2411619A0();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    unint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_241161890() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_241161890() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_24101E634((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_24101E92C();
    }
    else
    {
      uint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_24101E634((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_24101E92C();
      MEMORY[0x2456180C0](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_24101E634(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_24102A5B8(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_241161950();
        swift_bridgeObjectRetain();
        sub_241160830();
        uint64_t v22 = sub_2411619A0();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        id v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_241161890() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          unint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_241161890() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_24101E92C()
{
  return swift_release();
}

uint64_t sub_24101E934(uint64_t a1)
{
  sub_241023ADC(0, &qword_26B005BC8, (uint64_t (*)(uint64_t))sub_241020918, MEMORY[0x263EFDDF8]);
  uint64_t v61 = v2;
  uint64_t v59 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v57 = (char *)&v50 - v3;
  sub_241029BE8(0, &qword_26B005FF0, (uint64_t (*)(uint64_t))sub_241020918, MEMORY[0x263EFDEA0]);
  uint64_t v60 = v4;
  uint64_t v58 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v56 = (char *)&v50 - v5;
  uint64_t v6 = sub_24115F790();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v50 - v11;
  sub_241024708(0, &qword_26B005EA0);
  sub_241022C6C(a1);
  id v55 = sub_241021DE4((void **)a1);
  sub_24101F704(v65);
  id v53 = sub_241021DE4((void **)v65);
  sub_24115F740();
  sub_241022C6C(a1);
  sub_241022C6C(a1);
  int64_t v13 = sub_24115F780();
  os_log_type_t v14 = sub_241160D50();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v54 = v6;
  uint64_t v51 = v10;
  uint64_t v52 = v7;
  if (v15)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v64 = v17;
    *(_DWORD *)uint64_t v16 = 136446466;
    *(void *)&v62[0] = v50;
    sub_24101F3E0();
    uint64_t v18 = sub_241160760();
    *(void *)&v62[0] = sub_24101F0A4(v18, v19, &v64);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    long long v20 = *(_OWORD *)(a1 + 144);
    v62[8] = *(_OWORD *)(a1 + 128);
    v63[0] = v20;
    *(_OWORD *)((char *)v63 + 9) = *(_OWORD *)(a1 + 153);
    long long v21 = *(_OWORD *)(a1 + 80);
    v62[4] = *(_OWORD *)(a1 + 64);
    v62[5] = v21;
    long long v22 = *(_OWORD *)(a1 + 112);
    v62[6] = *(_OWORD *)(a1 + 96);
    v62[7] = v22;
    long long v23 = *(_OWORD *)(a1 + 16);
    v62[0] = *(_OWORD *)a1;
    v62[1] = v23;
    long long v24 = *(_OWORD *)(a1 + 48);
    v62[2] = *(_OWORD *)(a1 + 32);
    v62[3] = v24;
    sub_241022C6C(a1);
    uint64_t v25 = sub_241160760();
    *(void *)&v62[0] = sub_24101F0A4(v25, v26, &v64);
    unint64_t v10 = v51;
    uint64_t v6 = v54;
    sub_241161430();
    swift_bridgeObjectRelease();
    sub_241022FBC(a1);
    sub_241022FBC(a1);
    _os_log_impl(&dword_241007000, v13, v14, "[%{public}s] Generating primary model for: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v17;
    uint64_t v7 = v52;
    MEMORY[0x2456180C0](v27, -1, -1);
    MEMORY[0x2456180C0](v16, -1, -1);
  }
  else
  {
    sub_241022FBC(a1);
    sub_241022FBC(a1);
  }

  id v28 = *(void (**)(char *, uint64_t))(v7 + 8);
  v28(v12, v6);
  sub_24115F740();
  sub_241022C6C(a1);
  sub_241022C6C(a1);
  BOOL v29 = sub_24115F780();
  os_log_type_t v30 = sub_241160D50();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v64 = v32;
    *(_DWORD *)uint64_t v31 = 136446466;
    *(void *)&v62[0] = v50;
    sub_24101F3E0();
    uint64_t v33 = sub_241160760();
    *(void *)&v62[0] = sub_24101F0A4(v33, v34, &v64);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    sub_24101F704(v62);
    uint64_t v35 = sub_241160760();
    *(void *)&v62[0] = sub_24101F0A4(v35, v36, &v64);
    sub_241161430();
    swift_bridgeObjectRelease();
    sub_241022FBC(a1);
    sub_241022FBC(a1);
    _os_log_impl(&dword_241007000, v29, v30, "[%{public}s] Generating sharable model for: %{public}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v32, -1, -1);
    MEMORY[0x2456180C0](v31, -1, -1);

    uint64_t v37 = v51;
    uint64_t v38 = v54;
  }
  else
  {
    sub_241022FBC(a1);
    sub_241022FBC(a1);

    uint64_t v37 = v10;
    uint64_t v38 = v6;
  }
  v28(v37, v38);
  sub_241023CC0(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_24116B210;
  uint64_t v40 = v55;
  int64_t v41 = v53;
  *(void *)(v39 + 32) = v55;
  *(void *)(v39 + 40) = v41;
  *(void *)&v62[0] = v39;
  sub_2411609C0();
  sub_241020918();
  id v42 = v40;
  id v43 = v41;
  char v44 = v57;
  sub_24115FCC0();
  sub_241020840(0, (unint64_t *)&qword_26B0073B0);
  unint64_t v45 = v56;
  uint64_t v46 = v61;
  sub_24115FC90();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v46);
  sub_241020890();
  uint64_t v47 = v60;
  uint64_t v48 = sub_24115FE20();

  (*(void (**)(char *, uint64_t))(v58 + 8))(v45, v47);
  return v48;
}

uint64_t sub_24101F0A4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24101F224(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24101F1C8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24101F1C8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_24101F178((uint64_t)v12);
  return v7;
}

uint64_t sub_24101F178(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_24101F1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24101F224(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_241161440();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24101F41C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_241161630();
  if (!v8)
  {
    sub_2411616A0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_241161740();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

unint64_t sub_24101F3E0()
{
  unint64_t result = qword_26B004AF0;
  if (!qword_26B004AF0)
  {
    type metadata accessor for MedicationsShareableModelGenerator();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B004AF0);
  }
  return result;
}

uint64_t sub_24101F41C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24101F4B4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2410CD220(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_2410CD220(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24101F4B4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24101F62C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_241161600();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_2411616A0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_241160870();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_241161740();
    __break(1u);
LABEL_14:
    uint64_t result = sub_2411616A0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24101F62C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_24101F6B8(0, &qword_26B005FC0, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_24101F6B8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_24101F704@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1;
  int v75 = a1;
  uint64_t v3 = sub_24115CCC0();
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  MEMORY[0x270FA5388](v3);
  id v55 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410207E8();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v58 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v78 = (char *)&v53 - v8;
  uint64_t v9 = sub_24115CB10();
  uint64_t v79 = *(void *)(v9 - 8);
  uint64_t v80 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v59 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v54 = (char *)&v53 - v12;
  uint64_t v13 = *(void *)v1;
  uint64_t v14 = *(void *)(v1 + 8);
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = *(void *)(v1 + 32);
  uint64_t v18 = *(void *)(v1 + 40);
  uint64_t v19 = *(void *)(v1 + 48);
  uint64_t v20 = *(void *)(v1 + 56);
  int v21 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v23 = *(void *)(v1 + 72);
  uint64_t v22 = *(void *)(v1 + 80);
  int v24 = *(unsigned __int8 *)(v1 + 88);
  uint64_t v25 = *(void *)(v1 + 96);
  uint64_t v26 = *(void *)(v1 + 112);
  uint64_t v27 = *(void *)(v1 + 128);
  uint64_t v28 = *(void *)(v1 + 136);
  uint64_t v82 = *(void *)(v1 + 120);
  uint64_t v83 = v27;
  uint64_t v81 = *(void *)(v1 + 144);
  int v29 = *(unsigned __int8 *)(v1 + 152);
  uint64_t v30 = *(void *)(v1 + 160);
  uint64_t v71 = v14;
  uint64_t v72 = v13;
  uint64_t v110 = v13;
  *(void *)&long long v111 = v14;
  uint64_t v69 = v16;
  uint64_t v70 = v15;
  *((void *)&v111 + 1) = v15;
  *(void *)&long long v112 = v16;
  uint64_t v67 = v18;
  uint64_t v68 = v17;
  *((void *)&v112 + 1) = v17;
  *(void *)&long long v113 = v18;
  uint64_t v65 = v20;
  uint64_t v66 = v19;
  *((void *)&v113 + 1) = v19;
  uint64_t v114 = v20;
  int v64 = v21;
  char v115 = v21;
  uint64_t v62 = v22;
  uint64_t v63 = v23;
  *(void *)&long long v116 = v23;
  *((void *)&v116 + 1) = v22;
  int v61 = v24;
  char v117 = v24;
  uint64_t v60 = v25;
  uint64_t v118 = v25;
  sub_2410206B0(v1 + 104, (uint64_t)v126, (uint64_t)&qword_26B005E50, (uint64_t)&qword_26B007358, 0x263F0A508, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241020724);
  sub_2410206B0((uint64_t)v126, (uint64_t)&v119, (uint64_t)&qword_26B005E50, (uint64_t)&qword_26B007358, 0x263F0A508, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241020724);
  uint64_t v76 = v28;
  uint64_t v77 = v26;
  *(void *)&long long v120 = v26;
  *((void *)&v120 + 1) = v82;
  *(void *)&long long v121 = v83;
  *((void *)&v121 + 1) = v28;
  uint64_t v122 = v81;
  int v73 = v29;
  char v123 = v29;
  uint64_t v74 = v30;
  uint64_t v124 = v30;
  char v125 = 1;
  sub_2410206B0((uint64_t)v126, (uint64_t)&v127, (uint64_t)&qword_26B005E50, (uint64_t)&qword_26B007358, 0x263F0A508, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241020724);
  uint64_t v31 = v127;
  if (!v127)
  {
    uint64_t v34 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v78, 1, 1, v80);
    sub_241022C6C(v2);
    goto LABEL_7;
  }
  sub_241022C6C(v1);
  id v32 = objc_msgSend(v31, sel_startDate);
  uint64_t v33 = v59;
  sub_24115CAE0();

  uint64_t v34 = (uint64_t)v78;
  uint64_t v35 = v79;
  unint64_t v36 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
  uint64_t v37 = v80;
  v36(v78, v33, v80);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v34, 0, 1, v37);
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  if (v38(v34, 1, v37) == 1)
  {
LABEL_7:
    sub_2410A1AB8(v34);
    id v46 = v119;
LABEL_8:
    uint64_t v47 = v75;
    *(void *)&long long v84 = v72;
    *((void *)&v84 + 1) = v71;
    *(void *)&long long v85 = v70;
    *((void *)&v85 + 1) = v69;
    *(void *)&long long v86 = v68;
    *((void *)&v86 + 1) = v67;
    *(void *)&long long v87 = v66;
    *((void *)&v87 + 1) = v65;
    LOBYTE(v88) = v64;
    *((void *)&v88 + 1) = v63;
    *(void *)&long long v89 = v62;
    BYTE8(v89) = v61;
    *(void *)&long long v90 = v60;
    *((void *)&v90 + 1) = v46;
    *(void *)&long long v91 = v77;
    *((void *)&v91 + 1) = v82;
    *(void *)&long long v92 = v83;
    *((void *)&v92 + 1) = v76;
    *(void *)&v93[0] = v81;
    BYTE8(v93[0]) = v73;
    *(void *)&v93[1] = v74;
    BYTE8(v93[1]) = 1;
    long long v95 = v111;
    long long v96 = v112;
    long long v97 = v113;
    uint64_t v94 = v110;
    uint64_t v98 = v114;
    char v99 = v115;
    long long v100 = v116;
    char v101 = v117;
    uint64_t v102 = v118;
    id v103 = v46;
    long long v104 = v120;
    long long v105 = v121;
    uint64_t v106 = v122;
    char v107 = v123;
    uint64_t v108 = v124;
    char v109 = v125;
    sub_241022C6C((uint64_t)&v84);
    uint64_t result = sub_241022FBC((uint64_t)&v94);
    long long v48 = v93[0];
    v47[8] = v92;
    v47[9] = v48;
    *(_OWORD *)((char *)v47 + 153) = *(_OWORD *)((char *)v93 + 9);
    long long v49 = v89;
    v47[4] = v88;
    v47[5] = v49;
    long long v50 = v91;
    v47[6] = v90;
    v47[7] = v50;
    long long v51 = v85;
    *uint64_t v47 = v84;
    v47[1] = v51;
    long long v52 = v87;
    v47[2] = v86;
    void v47[3] = v52;
    return result;
  }
  uint64_t v39 = v54;
  v36(v54, (char *)v34, v37);
  uint64_t v40 = v59;
  sub_24115CB00();
  int64_t v41 = v55;
  sub_24115CC90();
  id v42 = v58;
  sub_24115CA70();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v41, v57);
  id v43 = *(void (**)(char *, uint64_t))(v35 + 8);
  v43(v40, v37);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v38)(v42, 1, v37);
  if (result != 1)
  {
    char v45 = sub_24115CAB0();
    v43(v39, v37);
    v43(v42, v37);
    id v46 = v119;
    if (v45)
    {

      id v46 = 0;
      id v119 = 0;
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_24101FD74()
{
  uint64_t v1 = v0;
  uint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_2411615F0();
  sub_241160860();
  id v2 = objc_msgSend(*v0, sel_semanticIdentifier);
  id v3 = objc_msgSend(v2, sel_stringValue);

  sub_241160730();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  uint64_t v23 = sub_24115F460();
  unint64_t v24 = v4;
  uint64_t v5 = MEMORY[0x263F8D310];
  sub_241160790();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_2410206B0((uint64_t)(v1 + 1), (uint64_t)v17, (uint64_t)&unk_26B005DB0, (uint64_t)&qword_26B005D98, v5, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_24102077C);
  sub_2410206B0((uint64_t)v17, (uint64_t)&v18, (uint64_t)&unk_26B005DB0, (uint64_t)&qword_26B005D98, v5, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_24102077C);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_241020598((uint64_t)(v1 + 2), (uint64_t)v16, &qword_26B005C88, v5);
  sub_241020598((uint64_t)v16, (uint64_t)v19, &qword_26B005C88, v5);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_241020598((uint64_t)(v1 + 4), (uint64_t)v15, &qword_26B005C88, v5);
  sub_241020598((uint64_t)v15, (uint64_t)v20, &qword_26B005C88, v5);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_241020598((uint64_t)(v1 + 6), (uint64_t)v14, &qword_26B005C88, v5);
  sub_241020598((uint64_t)v14, (uint64_t)v21, &qword_26B005C88, v5);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  uint64_t v6 = MEMORY[0x263F8D4F8];
  sub_241020598((uint64_t)(v1 + 8), (uint64_t)&v13, &qword_26B007428, MEMORY[0x263F8D4F8]);
  sub_241020598((uint64_t)&v13, (uint64_t)&v22, &qword_26B007428, v6);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_241020598((uint64_t)(v1 + 9), (uint64_t)v12, &qword_26B005C88, v5);
  sub_241020598((uint64_t)v12, (uint64_t)&v23, &qword_26B005C88, v5);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_241020598((uint64_t)(v1 + 11), (uint64_t)&v11, &qword_26B007428, v6);
  sub_241020598((uint64_t)&v11, (uint64_t)&v25, &qword_26B007428, v6);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_2410206B0((uint64_t)(v1 + 12), (uint64_t)v10, (uint64_t)&qword_26B007350, (uint64_t)&unk_26B007348, 0x263F44BE8, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241020724);
  sub_2410206B0((uint64_t)v10, (uint64_t)&v26, (uint64_t)&qword_26B007350, (uint64_t)&unk_26B007348, 0x263F44BE8, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241020724);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_2410206B0((uint64_t)(v1 + 13), (uint64_t)v9, (uint64_t)&qword_26B005E50, (uint64_t)&unk_26B007358, 0x263F0A508, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241020724);
  sub_2410206B0((uint64_t)v9, (uint64_t)&v27, (uint64_t)&qword_26B005E50, (uint64_t)&unk_26B007358, 0x263F0A508, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241020724);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_2410206B0((uint64_t)(v1 + 14), (uint64_t)v8, (uint64_t)&unk_26B005D50, (uint64_t)&unk_26B005D40, (uint64_t)&type metadata for MedicationHighlightsContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_24102077C);
  sub_2410206B0((uint64_t)v8, (uint64_t)&v28, (uint64_t)&unk_26B005D50, (uint64_t)&unk_26B005D40, (uint64_t)&type metadata for MedicationHighlightsContent, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_24102077C);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_241161850();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_241160860();
  return 0;
}

uint64_t sub_241020598(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_241020664(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_241020618(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_241020664(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2410206B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

void sub_241020724(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241024708(255, a3);
    unint64_t v4 = sub_241161420();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24102077C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_241020664(255, a3, a4, MEMORY[0x263F8D488]);
    unint64_t v5 = sub_241161420();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2410207E8()
{
  if (!qword_26B007240)
  {
    sub_24115CB10();
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B007240);
    }
  }
}

uint64_t sub_241020840(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_241020890()
{
  unint64_t result = qword_26B005FE8;
  if (!qword_26B005FE8)
  {
    sub_241029BE8(255, &qword_26B005FF0, (uint64_t (*)(uint64_t))sub_241020918, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005FE8);
  }
  return result;
}

void sub_241020918()
{
  if (!qword_26B005DD0)
  {
    sub_241024708(255, &qword_26B005EA0);
    unint64_t v0 = sub_241160A10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005DD0);
    }
  }
}

uint64_t sub_241020980(uint64_t (*a1)(void *), uint64_t a2, long long *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v178 = a5;
  uint64_t v183 = a4;
  long long v8 = a3[9];
  long long v206 = a3[8];
  v207[0] = v8;
  *(_OWORD *)((char *)v207 + 9) = *(long long *)((char *)a3 + 153);
  long long v9 = a3[5];
  long long v202 = a3[4];
  long long v203 = v9;
  long long v10 = a3[7];
  long long v204 = a3[6];
  long long v205 = v10;
  long long v11 = a3[1];
  long long v198 = *a3;
  long long v199 = v11;
  long long v12 = a3[3];
  long long v200 = a3[2];
  long long v201 = v12;
  uint64_t v13 = sub_241160410();
  uint64_t v163 = *(void *)(v13 - 8);
  uint64_t v164 = v13;
  MEMORY[0x270FA5388](v13);
  v161 = (char *)v140 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_241160440();
  uint64_t v160 = *(void *)(v162 - 8);
  MEMORY[0x270FA5388](v162);
  v159 = (char *)v140 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_241160420();
  uint64_t v157 = *(void *)(v16 - 8);
  uint64_t v158 = v16;
  MEMORY[0x270FA5388](v16);
  v156 = (char *)v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241023ADC(0, &qword_26B007248, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v19 - 8);
  v175 = (char *)v140 - v20;
  sub_241023ADC(0, &qword_26B007210, MEMORY[0x263F07920], v18);
  MEMORY[0x270FA5388](v21 - 8);
  v174 = (char *)v140 - v22;
  dispatch_group_t v176 = (dispatch_group_t)sub_24115C920();
  isa = (char *)v176[-1].isa;
  uint64_t v23 = MEMORY[0x270FA5388](v176);
  v155 = (char *)v140 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  v152 = (char *)v140 - v25;
  uint64_t v26 = sub_24115F790();
  uint64_t v168 = *(void *)(v26 - 8);
  uint64_t v169 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  v153 = (char *)v140 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  v170 = (char *)v140 - v29;
  uint64_t v182 = sub_24115CB10();
  uint64_t v185 = *(void *)(v182 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v182);
  v154 = (char *)v140 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  v173 = (char *)v140 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  v172 = (char *)v140 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v171 = (char *)v140 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v181 = (char *)v140 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v177 = (char *)v140 - v41;
  MEMORY[0x270FA5388](v40);
  v184 = (char *)v140 - v42;
  uint64_t v43 = sub_24115E9F0();
  uint64_t v44 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  id v46 = (char *)v140 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241023ADC(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], v18);
  MEMORY[0x270FA5388](v47 - 8);
  long long v49 = (char *)v140 - v48;
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = a1;
  *(void *)(v50 + 24) = a2;
  swift_retain();
  id v51 = sub_241024DF4();
  if (v51)
  {
    long long v52 = v51;
    uint64_t v151 = v50;
    uint64_t v53 = sub_24115CB90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v49, 1, 1, v53);
    sub_24115E9E0();
    sub_24115EF20();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
    sub_241025284((uint64_t)v49, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
    id v54 = objc_allocWithZone((Class)sub_24115ECA0());
    id v55 = v52;
    id v56 = objc_msgSend(v54, sel_init);
    id v57 = objc_allocWithZone(MEMORY[0x263F467D0]);
    uint64_t v58 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    uint64_t v59 = (void *)sub_2411606F0();
    id v60 = objc_msgSend(v57, sel_initWithGraphSeries_displayName_unitName_valueFormatter_dataTypeCode_, v55, v58, v59, v56, 273);

    id v150 = v55;
    dispatch_group_t v165 = dispatch_group_create();
    int v61 = *(void **)a3;
    id v62 = objc_allocWithZone((Class)sub_24115EBB0());
    id v63 = v61;
    id v148 = v60;
    id v179 = (id)sub_24115EBA0();
    uint64_t v64 = swift_allocObject();
    long long v149 = xmmword_24116E940;
    uint64_t v167 = v64;
    *(_OWORD *)(v64 + 16) = xmmword_24116E940;
    uint64_t v166 = swift_allocObject();
    *(_OWORD *)(v166 + 16) = v149;
    uint64_t v65 = v184;
    sub_24115CB00();
    sub_24115CA60();
    sub_24115CA50();
    sub_24115F740();
    uint64_t v66 = sub_24115F780();
    os_log_type_t v67 = sub_241160D50();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(void *)&long long v187 = v69;
      *(_DWORD *)uint64_t v68 = 136446210;
      v186[0] = v183;
      sub_24101F3E0();
      uint64_t v70 = sub_241160760();
      v186[0] = sub_24101F0A4(v70, v71, (uint64_t *)&v187);
      uint64_t v65 = v184;
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v66, v67, "[%{public}s] Dispatch group enter for 1 month chart data source", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v69, -1, -1);
      MEMORY[0x2456180C0](v68, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v168 + 8))(v170, v169);
    dispatch_group_enter(v165);
    uint64_t v72 = v185;
    uint64_t v74 = v185 + 16;
    int v73 = *(void (**)(void))(v185 + 16);
    uint64_t v75 = v182;
    v73();
    v146 = v73;
    uint64_t v147 = v74;
    ((void (*)(char *, char *, uint64_t))v73)(v172, v65, v75);
    uint64_t v76 = sub_24115CCC0();
    uint64_t v77 = *(void *)(v76 - 8);
    v144 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 56);
    uint64_t v145 = v76;
    uint64_t v143 = v77 + 56;
    v144(v174, 1, 1);
    uint64_t v78 = sub_24115CD80();
    uint64_t v79 = *(void *)(v78 - 8);
    v141 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 56);
    uint64_t v142 = v78;
    v140[1] = v79 + 56;
    v141(v175, 1, 1);
    uint64_t v80 = v152;
    sub_24115C910();
    *(void *)&long long v149 = a3;
    unsigned __int8 v197 = *((unsigned char *)a3 + 168);
    uint64_t v81 = v197;
    id v82 = objc_allocWithZone(MEMORY[0x263F46790]);
    uint64_t v83 = (void *)sub_24115CAA0();
    long long v84 = v172;
    long long v85 = (void *)sub_24115CAA0();
    long long v86 = (void *)sub_24115C8F0();
    v170 = (char *)objc_msgSend(v82, sel_initWithStartDate_endDate_statisticsInterval_audience_, v83, v85, v86, v81);

    long long v87 = isa + 8;
    v152 = (char *)*((void *)isa + 1);
    ((void (*)(char *, dispatch_group_t))v152)(v80, v176);
    long long v88 = *(void (**)(char *, uint64_t))(v72 + 8);
    v88(v84, v75);
    uint64_t v185 = v72 + 8;
    v172 = (char *)v88;
    v88(v171, v75);
    long long v89 = (void *)swift_allocObject();
    uint64_t v90 = v183;
    v89[2] = v167;
    v89[3] = v90;
    dispatch_group_t v91 = v165;
    v89[4] = v165;
    *(void *)&long long v189 = sub_24101852C;
    *((void *)&v189 + 1) = v89;
    *(void *)&long long v187 = MEMORY[0x263EF8330];
    *((void *)&v187 + 1) = 1107296256;
    *(void *)&long long v188 = sub_24102A008;
    *((void *)&v188 + 1) = &unk_26F556A68;
    long long v92 = _Block_copy(&v187);
    swift_retain();
    v171 = v91;
    swift_release();
    id v93 = objc_msgSend(v179, sel_generateSharableQueryDataForRequest_healthStore_completionHandler_, v170, v178, v92);
    _Block_release(v92);
    if (v93) {
      _Block_release(v93);
    }
    uint64_t v94 = v153;
    sub_24115F740();
    long long v95 = sub_24115F780();
    os_log_type_t v96 = sub_241160D50();
    BOOL v97 = os_log_type_enabled(v95, v96);
    isa = v87;
    if (v97)
    {
      uint64_t v98 = (uint8_t *)swift_slowAlloc();
      uint64_t v99 = swift_slowAlloc();
      *(void *)&long long v187 = v99;
      *(_DWORD *)uint64_t v98 = 136446210;
      v186[0] = v183;
      sub_24101F3E0();
      uint64_t v100 = sub_241160760();
      v186[0] = sub_24101F0A4(v100, v101, (uint64_t *)&v187);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v95, v96, "[%{public}s] Dispatch group enter for 6 months chart data source", v98, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v99, -1, -1);
      MEMORY[0x2456180C0](v98, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v168 + 8))(v94, v169);
    uint64_t v102 = v184;
    dispatch_group_enter((dispatch_group_t)v171);
    uint64_t v103 = v182;
    long long v104 = v146;
    v146();
    long long v105 = v154;
    ((void (*)(char *, char *, uint64_t))v104)(v154, v102, v103);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v144)(v174, 1, 1, v145);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v141)(v175, 1, 1, v142);
    uint64_t v106 = v155;
    sub_24115C910();
    uint64_t v107 = v197;
    id v108 = objc_allocWithZone(MEMORY[0x263F46790]);
    char v109 = (void *)sub_24115CAA0();
    uint64_t v110 = (void *)sub_24115CAA0();
    long long v111 = (void *)sub_24115C8F0();
    long long v112 = (char *)objc_msgSend(v108, sel_initWithStartDate_endDate_statisticsInterval_audience_, v109, v110, v111, v107);

    ((void (*)(char *, dispatch_group_t))v152)(v106, v176);
    long long v113 = (void (*)(char *, uint64_t))v172;
    ((void (*)(char *, uint64_t))v172)(v105, v103);
    v113(v173, v103);
    uint64_t v114 = (void *)swift_allocObject();
    uint64_t v115 = v183;
    v114[2] = v166;
    v114[3] = v115;
    dispatch_group_t v116 = (dispatch_group_t)v171;
    v114[4] = v171;
    *(void *)&long long v189 = sub_2410187A0;
    *((void *)&v189 + 1) = v114;
    *(void *)&long long v187 = MEMORY[0x263EF8330];
    *((void *)&v187 + 1) = 1107296256;
    *(void *)&long long v188 = sub_24102A008;
    *((void *)&v188 + 1) = &unk_26F556AB8;
    char v117 = _Block_copy(&v187);
    dispatch_group_t v176 = v116;
    swift_retain();
    swift_release();
    isa = v112;
    id v118 = objc_msgSend(v179, sel_generateSharableQueryDataForRequest_healthStore_completionHandler_, v112, v178, v117);
    _Block_release(v117);
    if (v118) {
      _Block_release(v118);
    }
    sub_241024708(0, (unint64_t *)&qword_26B007340);
    id v119 = v156;
    uint64_t v120 = v157;
    uint64_t v121 = v158;
    (*(void (**)(char *, void, uint64_t))(v157 + 104))(v156, *MEMORY[0x263F8F080], v158);
    uint64_t v122 = (void *)sub_241160F10();
    (*(void (**)(char *, uint64_t))(v120 + 8))(v119, v121);
    uint64_t v123 = swift_allocObject();
    uint64_t v124 = (_OWORD *)v149;
    long long v125 = *(_OWORD *)(v149 + 96);
    *(_OWORD *)(v123 + 136) = *(_OWORD *)(v149 + 112);
    long long v126 = v124[9];
    *(_OWORD *)(v123 + 152) = v124[8];
    *(_OWORD *)(v123 + 168) = v126;
    *(_OWORD *)(v123 + 177) = *(_OWORD *)((char *)v124 + 153);
    long long v127 = v124[2];
    *(_OWORD *)(v123 + 72) = v124[3];
    long long v128 = v124[5];
    *(_OWORD *)(v123 + 88) = v124[4];
    *(_OWORD *)(v123 + 104) = v128;
    *(_OWORD *)(v123 + 120) = v125;
    long long v129 = v124[1];
    *(_OWORD *)(v123 + 24) = *v124;
    *(_OWORD *)(v123 + 40) = v129;
    *(void *)(v123 + 16) = v115;
    *(_OWORD *)(v123 + 56) = v127;
    uint64_t v130 = v167;
    *(void *)(v123 + 200) = v166;
    *(void *)(v123 + 208) = v130;
    uint64_t v131 = v151;
    *(void *)(v123 + 216) = sub_24101BC64;
    *(void *)(v123 + 224) = v131;
    *(void *)&long long v189 = sub_24101B000;
    *((void *)&v189 + 1) = v123;
    *(void *)&long long v187 = MEMORY[0x263EF8330];
    *((void *)&v187 + 1) = 1107296256;
    *(void *)&long long v188 = sub_24101AFBC;
    *((void *)&v188 + 1) = &unk_26F556B08;
    v132 = _Block_copy(&v187);
    swift_retain();
    swift_retain();
    sub_241022C6C((uint64_t)v124);
    v133 = v159;
    sub_241160430();
    v186[0] = MEMORY[0x263F8EE78];
    sub_241029BA0(&qword_26B0072E0, MEMORY[0x263F8F030]);
    sub_241023ADC(0, (unint64_t *)&unk_26B0072F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_241024138();
    v134 = v161;
    uint64_t v135 = v164;
    sub_2411614F0();
    dispatch_group_t v136 = v176;
    sub_241160E80();

    _Block_release(v132);
    (*(void (**)(char *, uint64_t))(v163 + 8))(v134, v135);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v133, v162);
    uint64_t v137 = v182;
    v138 = (void (*)(char *, uint64_t))v172;
    ((void (*)(char *, uint64_t))v172)(v181, v182);
    v138(v177, v137);
    v138(v184, v137);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    swift_release();
    long long v195 = v206;
    *(_OWORD *)v196 = v207[0];
    *(_OWORD *)&v196[9] = *(_OWORD *)((char *)v207 + 9);
    long long v191 = v202;
    long long v192 = v203;
    long long v193 = v204;
    long long v194 = v205;
    long long v187 = v198;
    long long v188 = v199;
    long long v189 = v200;
    long long v190 = v201;
    sub_24101BC5C((uint64_t)&v187);
    sub_24101CB4C((uint64_t)&v187, (uint64_t)v186);
    return a1(v186);
  }
}

id sub_241021DE4(void **a1)
{
  uint64_t v110 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v101 = *(void *)(v110 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v110);
  unint64_t v4 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v98 - v5;
  sub_241023ADC(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  long long v9 = (char *)&v98 - v8;
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    long long v11 = *a1;
    id v12 = result;
    id v13 = objc_msgSend(v11, sel_semanticIdentifier);
    uint64_t v14 = a1;
    id v15 = objc_msgSend(v13, sel_stringValue);

    if (!v15)
    {
      sub_241160730();
      id v15 = (id)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v12, sel_setConceptIdentifier_, v15);

    uint64_t v100 = v14;
    uint64_t v16 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setAudienceRawValue_, v16);

    sub_24115D3A0();
    uint64_t v17 = sub_24115D3B0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 0, 1, v17);
    sub_241023228(&qword_26B005E90, &qword_26B005EA0);
    sub_24115E130();
    sub_241161120();
    uint64_t v18 = v12;
    if (v19)
    {
      uint64_t v20 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = 0;
    }
    objc_msgSend(v12, sel_setPreferredName_, v20);

    sub_2411611C0();
    uint64_t v21 = v100;
    if (v22)
    {
      uint64_t v23 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = 0;
    }
    objc_msgSend(v12, sel_setBrandName_, v23);

    sub_2411610F0();
    if (v24)
    {
      uint64_t v25 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = 0;
    }
    objc_msgSend(v12, sel_setGenericName_, v25);

    sub_241161130();
    if (v26)
    {
      uint64_t v27 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = 0;
    }
    objc_msgSend(v12, sel_setManufacturedDoseForm_, v27);

    sub_241161100();
    if (v28)
    {
      uint64_t v29 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = 0;
    }
    objc_msgSend(v12, sel_setBasicDoseForm_, v29);

    id v30 = objc_msgSend(v11, sel_unlocalizedQuantifiedUnitStrengthPreferredDisplayString);
    objc_msgSend(v12, sel_setBaseUnitStrength_, v30);

    sub_241161180();
    if (v31)
    {
      uint64_t v32 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = 0;
    }
    objc_msgSend(v12, sel_setOntologyLoggingUnitSingular_, v32);

    sub_241161170();
    if (v33)
    {
      uint64_t v34 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = 0;
    }
    objc_msgSend(v12, sel_setOntologyLoggingUnitPlural_, v34);

    if (v21[3])
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v35 = 0;
    }
    objc_msgSend(v12, sel_setEduContentString_, v35);

    if (v21[5])
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v36 = 0;
    }
    objc_msgSend(v12, sel_setSideEffectsContentString_, v36);

    if (v21[7])
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = 0;
    }
    objc_msgSend(v12, sel_setPregnancyDescriptionContentString_, v37);

    objc_msgSend(v12, sel_setIsPregnancyDescriptionCritical_, (_BYTE)v21[8] & 1);
    if (v21[10])
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v38 = 0;
    }
    objc_msgSend(v12, sel_setLactationDescriptionContentString_, v38);

    objc_msgSend(v12, sel_setIsLactationDescriptionCritical_, (_BYTE)v21[11] & 1);
    uint64_t v39 = MEMORY[0x263F8EE58];
    if (v21[1])
    {
      uint64_t v40 = swift_bridgeObjectRetain();
      sub_24102326C(v40);
      swift_bridgeObjectRelease();
      id v41 = objc_allocWithZone(MEMORY[0x263EFF980]);
      uint64_t v42 = (void *)sub_241160980();
      swift_bridgeObjectRelease();
      id v43 = objc_msgSend(v41, sel_initWithArray_, v42);

      objc_msgSend(v18, sel_setIngredientComponentStrings_, v43);
    }
    id v44 = objc_msgSend(v11, sel_userVisualizationConfigJSONString);
    objc_msgSend(v18, sel_setMedicationVisualizationConfigJSONString_, v44);

    id v45 = objc_msgSend(v11, sel_freeTextMedicationName);
    id v99 = v18;
    objc_msgSend(v18, sel_setFreeTextMedicationName_, v45);

    id v46 = objc_msgSend(v11, sel_freeTextMedicationStrengthQuantity);
    if (v46)
    {
      uint64_t v47 = v46;
      id v48 = objc_msgSend(v46, sel_codableRepresentationForSync);
    }
    else
    {
      id v48 = 0;
    }
    unint64_t v49 = 0x263EFF000uLL;
    objc_msgSend(v99, sel_setFreeTextMedicationStrengthQuantity_, v48);

    uint64_t v50 = sub_241161150();
    if ((v51 & 1) == 0) {
      objc_msgSend(v99, sel_setFreeTextMedicationForm_, v50);
    }
    sub_2410230F0((uint64_t)(v100 + 12), (uint64_t)v116, (uint64_t (*)(void))sub_2410231C0);
    sub_2410230F0((uint64_t)v116, (uint64_t)&v117, (uint64_t (*)(void))sub_2410231C0);
    long long v52 = &selRef_setSelectionStyle_;
    if (v117) {
      id v53 = objc_msgSend(v117, sel_hd_codableMedicationSchedule);
    }
    else {
      id v53 = 0;
    }
    objc_msgSend(v99, sel_setSchedule_, v53);

    sub_2410230F0((uint64_t)(v100 + 13), (uint64_t)v115, (uint64_t (*)(void))sub_241023158);
    sub_2410230F0((uint64_t)v115, (uint64_t)v118, (uint64_t (*)(void))sub_241023158);
    if (v118[0]) {
      id v54 = objc_msgSend(v118[0], sel_codableRepresentationForSync);
    }
    else {
      id v54 = 0;
    }
    id v55 = v99;
    objc_msgSend(v99, sel_setMostRecentDose_, v54);

    id v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F44C40]), sel_init);
    uint64_t v57 = (uint64_t)v100;
    if (v56)
    {
      uint64_t v58 = v56;
      unint64_t v59 = (unint64_t)v100[16];
      if (v59 >> 60 != 15)
      {
        uint64_t v60 = (uint64_t)v100[15];
        sub_241022EB4(v60, v59);
        int v61 = (void *)sub_24115C9F0();
        objc_msgSend(v58, sel_setMonthData_, v61);

        uint64_t v62 = v60;
        uint64_t v57 = (uint64_t)v100;
        sub_2410230DC(v62, v59);
      }
      unint64_t v63 = *(void *)(v57 + 144);
      if (v63 >> 60 != 15)
      {
        uint64_t v64 = (uint64_t)v100[17];
        sub_241022EB4(v64, v63);
        uint64_t v65 = (void *)sub_24115C9F0();
        objc_msgSend(v58, sel_setSixMonthsData_, v65);

        uint64_t v66 = v64;
        uint64_t v57 = (uint64_t)v100;
        sub_2410230DC(v66, v63);
      }
      id v55 = v99;
      objc_msgSend(v99, sel_setChartSeries_, v58);
    }
    objc_msgSend(v55, sel_setArchived_, *(unsigned __int8 *)(v57 + 152));
    uint64_t v67 = *(void *)(v57 + 112);
    if (v67)
    {
      int64_t v68 = *(void *)(v67 + 16);
      if (v68)
      {
        uint64_t v114 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_2410233A4(0, v68, 0);
        uint64_t v69 = 0;
        uint64_t v98 = v67;
        int64_t v103 = v68;
        uint64_t v104 = v67 + 32;
        uint64_t v102 = v39 + 8;
        while (1)
        {
          uint64_t v70 = v52;
          uint64_t v107 = v69;
          unint64_t v71 = (void *)(v104 + 56 * v69);
          uint64_t v72 = v71[1];
          uint64_t v73 = v71[3];
          uint64_t v74 = v71[5];
          uint64_t v75 = v71[6];
          id v76 = objc_allocWithZone(MEMORY[0x263F44C48]);
          uint64_t v106 = v74;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v109 = v73;
          swift_bridgeObjectRetain();
          id result = objc_msgSend(v76, sel_init, v98);
          if (!result) {
            break;
          }
          int64_t v77 = *(void *)(v75 + 16);
          uint64_t v108 = v75;
          if (v77)
          {
            uint64_t v105 = v72;
            uint64_t v111 = MEMORY[0x263F8EE78];
            uint64_t v78 = result;
            id v79 = result;
            swift_bridgeObjectRetain();
            sub_2410233A4(0, v77, 0);
            uint64_t v80 = v75 + ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80));
            uint64_t v81 = *(void *)(v101 + 72);
            while (1)
            {
              sub_2410273F8(v80, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
              sub_2410273F8((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
              id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F44C38]), sel_init);
              if (!result) {
                break;
              }
              id v82 = result;
              sub_24115CA20();
              objc_msgSend(v82, sel_setDate_);
              uint64_t v83 = v110;
              objc_msgSend(v82, sel_setStatus_, v4[*(int *)(v110 + 20)]);
              objc_msgSend(v82, sel_setIsPaddedDay_, v4[*(int *)(v83 + 24)]);

              sub_2410173B8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
              uint64_t v113 = sub_241024708(0, (unint64_t *)&qword_26B006190);
              *(void *)&long long v112 = v82;
              sub_2410173B8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
              uint64_t v84 = v111;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_2410233A4(0, *(void *)(v84 + 16) + 1, 1);
                uint64_t v84 = v111;
              }
              unint64_t v86 = *(void *)(v84 + 16);
              unint64_t v85 = *(void *)(v84 + 24);
              if (v86 >= v85 >> 1)
              {
                sub_2410233A4(v85 > 1, v86 + 1, 1);
                uint64_t v84 = v111;
              }
              *(void *)(v84 + 16) = v86 + 1;
              sub_241023394(&v112, (_OWORD *)(v84 + 32 * v86 + 32));
              v80 += v81;
              --v77;
              unint64_t v49 = 0x263EFF000;
              if (!v77)
              {
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                long long v52 = &selRef_setSelectionStyle_;
                goto LABEL_70;
              }
            }
            __break(1u);
            break;
          }
          uint64_t v78 = result;
          id v87 = result;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v52 = v70;
LABEL_70:
          id v88 = objc_allocWithZone(*(Class *)(v49 + 2432));
          long long v89 = (void *)sub_241160980();
          swift_bridgeObjectRelease();
          id v90 = objc_msgSend(v88, v52[317], v89);

          objc_msgSend(v78, sel_setDays_, v90);
          uint64_t v113 = sub_241024708(0, &qword_26B006198);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)&long long v112 = v78;
          uint64_t v91 = v114;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2410233A4(0, *(void *)(v91 + 16) + 1, 1);
            uint64_t v91 = v114;
          }
          unint64_t v93 = *(void *)(v91 + 16);
          unint64_t v92 = *(void *)(v91 + 24);
          if (v93 >= v92 >> 1)
          {
            sub_2410233A4(v92 > 1, v93 + 1, 1);
            uint64_t v91 = v114;
          }
          uint64_t v94 = v107 + 1;
          *(void *)(v91 + 16) = v93 + 1;
          uint64_t v69 = v94;
          sub_241023394(&v112, (_OWORD *)(v91 + 32 * v93 + 32));
          if (v69 == v103)
          {
            swift_bridgeObjectRelease();
            uint64_t v57 = (uint64_t)v100;
            goto LABEL_76;
          }
        }
        __break(1u);
        goto LABEL_80;
      }
LABEL_76:
      id v95 = objc_allocWithZone(*(Class *)(v49 + 2432));
      os_log_type_t v96 = (void *)sub_241160980();
      swift_bridgeObjectRelease();
      id v97 = objc_msgSend(v95, v52[317], v96);

      id v55 = v99;
      objc_msgSend(v99, sel_setMonthHighlights_, v97);
    }
    sub_241022FBC(v57);

    return v55;
  }
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_241022C6C(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  unint64_t v4 = *(void **)(a1 + 96);
  uint64_t v3 = *(void **)(a1 + 104);
  unint64_t v5 = *(void *)(a1 + 128);
  uint64_t v12 = *(void *)(a1 + 136);
  uint64_t v10 = *(void *)(a1 + 120);
  unint64_t v11 = *(void *)(a1 + 144);
  swift_bridgeObjectRetain();
  id v6 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v4;
  id v8 = v3;
  sub_241022D34(v10, v5);
  sub_241022D34(v12, v11);
  return a1;
}

uint64_t sub_241022D34(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_241022EB4(a1, a2);
  }
  return a1;
}

uint64_t initializeWithCopy for MedicationShareableData(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  unint64_t v11 = *(void **)(a2 + 96);
  uint64_t v10 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = v10;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  unint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = (uint64_t *)(a2 + 120);
  id v12 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v11;
  id v14 = v10;
  swift_bridgeObjectRetain();
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v21;
  }
  else
  {
    uint64_t v15 = *v21;
    sub_241022EB4(*v21, v20);
    *(void *)(a1 + 120) = v15;
    *(void *)(a1 + 128) = v20;
  }
  uint64_t v16 = (uint64_t *)(a2 + 136);
  unint64_t v17 = *(void *)(a2 + 144);
  if (v17 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)v16;
  }
  else
  {
    uint64_t v18 = *v16;
    sub_241022EB4(*v16, *(void *)(a2 + 144));
    *(void *)(a1 + 136) = v18;
    *(void *)(a1 + 144) = v17;
  }
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  return a1;
}

uint64_t sub_241022EB4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t destroy for MedicationShareableData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 128);
  if (v3 >> 60 != 15) {
    uint64_t result = sub_241023084(*(void *)(a1 + 120), v3);
  }
  unint64_t v4 = *(void *)(a1 + 144);
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = *(void *)(a1 + 136);
    return sub_241023084(v5, v4);
  }
  return result;
}

uint64_t sub_241022FBC(uint64_t a1)
{
  unint64_t v3 = *(void **)(a1 + 96);
  uint64_t v2 = *(void **)(a1 + 104);
  unint64_t v4 = *(void *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 136);
  uint64_t v6 = *(void *)(a1 + 120);
  unint64_t v7 = *(void *)(a1 + 144);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_2410230DC(v6, v4);
  sub_2410230DC(v8, v7);
  return a1;
}

uint64_t sub_241023084(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_2410230DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_241023084(a1, a2);
  }
  return a1;
}

uint64_t sub_2410230F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_241023158()
{
  if (!qword_26B005E50)
  {
    sub_241024708(255, &qword_26B007358);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005E50);
    }
  }
}

void sub_2410231C0()
{
  if (!qword_26B007350)
  {
    sub_241024708(255, &qword_26B007348);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B007350);
    }
  }
}

uint64_t sub_241023228(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241024708(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24102326C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_2410233A4(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2410233A4(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_2410233A4(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_241023394(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

_OWORD *sub_241023394(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2410233A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2410233C4(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_2410233C4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241023CC0(0, &qword_26B005FC8, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  id v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MedicationHighlightsContent.HighlightDay()
{
  uint64_t result = qword_26B005028;
  if (!qword_26B005028) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2410235A4(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241023ADC(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v26 - v7;
  sub_241023ADC(0, &qword_26B007248, MEMORY[0x263F079C8], v5);
  MEMORY[0x270FA5388](v9 - 8);
  int64_t v11 = (char *)v26 - v10;
  uint64_t v12 = sub_24115D3B0();
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241024708(0, &qword_26B005E58);
  id v15 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_medicationRecordTypeForIdentifier_, *MEMORY[0x263F099F0]);
  if (v15)
  {
    uint64_t v16 = v15;
    if (objc_msgSend(a1, sel_hasConceptIdentifier))
    {
      v26[1] = v14;
      uint64_t v27 = v8;
      uint64_t v28 = a2;
      uint64_t v31 = v2;
      sub_241023D14();
      uint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      sub_241161690();
      sub_241160670();
      sub_241160860();
      sub_241160670();
      sub_241160860();
      swift_bridgeObjectRelease();
      sub_241160670();
      sub_241023DE8();
      sub_241160860();
      sub_241023D0C();
      sub_241023D0C();
      v26[0] = sub_241023DF0();
      sub_241023CC0(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_24116B220;
      *(void *)(v17 + 32) = v16;
      uint64_t v29 = v17;
      sub_2411609C0();
      id v18 = v16;
      id v19 = objc_msgSend(a1, sel_data);
      if (v19)
      {
        unint64_t v20 = v19;
        sub_24115CA00();

        sub_24115D300();
        sub_24115CD70();
        uint64_t v21 = sub_24115CD80();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 0, 1, v21);
        uint64_t v22 = v27;
        sub_24115CB80();
        uint64_t v23 = sub_24115CB90();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
        sub_24115D2E0();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      sub_2410E67AC();
      swift_allocError();
      *uint64_t v25 = 1;
      swift_willThrow();
    }
  }
  else
  {
    sub_2410E67AC();
    swift_allocError();
    *uint64_t v24 = 0;
    swift_willThrow();
  }
}

void sub_241023A78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241023ADC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241023B40(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241161860();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241023B94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241023BF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241023C5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_241023CC0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241023D0C()
{
  return swift_bridgeObjectRelease();
}

id sub_241023D14()
{
  id result = objc_msgSend(v0, sel_audienceRawValue);
  if (result)
  {
    uint64_t v2 = result;
    sub_241160730();

    uint64_t v3 = sub_241161760();
    swift_bridgeObjectRelease();
    id result = objc_msgSend(v0, sel_conceptIdentifier);
    unint64_t v4 = result;
    if (v3 == 1)
    {
      if (result)
      {
LABEL_6:
        uint64_t v5 = sub_241160730();

        return (id)v5;
      }
      __break(1u);
    }
    if (result) {
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_241023DE8()
{
  return swift_bridgeObjectRetain();
}

id sub_241023DF0()
{
  id result = objc_msgSend(v0, sel_audienceRawValue);
  if (result)
  {
    uint64_t v2 = result;
    sub_241160730();

    uint64_t v3 = sub_241161760();
    swift_bridgeObjectRelease();
    if (v3 != 1) {
      return (id)MEMORY[0x263F8EE78];
    }
    sub_241023ADC(0, &qword_26B005F70, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
    uint64_t v4 = sub_24115E870();
    uint64_t v13 = *(void *)(v4 - 8);
    uint64_t v14 = v4;
    unint64_t v5 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_24116B370;
    uint64_t v7 = (void *)(v6 + v5);
    sub_241023D14();
    sub_241161690();
    sub_241160670();
    sub_241160860();
    sub_241160670();
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_241160670();
    sub_241023DE8();
    sub_241160860();
    sub_241023D0C();
    sub_241023D0C();
    sub_241024708(0, &qword_26B005EA0);
    sub_241023228(&qword_26B005E98, &qword_26B005EA0);
    uint64_t v8 = sub_24115F440();
    uint64_t v10 = v9;
    uint64_t v11 = sub_24115F450();
    *uint64_t v7 = 0;
    v7[1] = 0xE000000000000000;
    v7[2] = v8;
    v7[3] = v10;
    v7[4] = v11;
    v7[5] = v12;
    (*(void (**)(void *, void, uint64_t))(v13 + 104))(v7, *MEMORY[0x263F44A68], v14);
    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_241024138()
{
  unint64_t result = qword_26B007300;
  if (!qword_26B007300)
  {
    sub_24103BA70(255, (unint64_t *)&unk_26B0072F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B007300);
  }
  return result;
}

void sub_2410241C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = *(void **)a3;
  swift_retain();
  id v10 = objc_msgSend(v9, sel_semanticIdentifier);
  id v11 = objc_msgSend(v10, sel_stringValue);

  if (!v11)
  {
    sub_241160730();
    id v11 = (id)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v11);

  aBlock[0] = MEMORY[0x263F8EE78];
  sub_241161660();
  objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 4);
  sub_241161640();
  sub_241161670();
  sub_241161680();
  sub_241161650();
  objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 5);
  sub_241161640();
  sub_241161670();
  sub_241161680();
  sub_241161650();
  sub_241024744(aBlock[0]);
  swift_release();
  sub_241024708(0, &qword_26B007380);
  sub_241023228((unint64_t *)&qword_26B005EB8, &qword_26B007380);
  uint64_t v14 = (void *)sub_241160BB0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v12, sel_predicateForMedicationDoseEventWithStatuses_, v14);

  sub_241023CC0(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24116B210;
  *(void *)(v16 + 32) = v13;
  *(void *)(v16 + 40) = v15;
  sub_2411609C0();
  sub_241024708(0, &qword_26B007318);
  id v35 = v13;
  id v34 = v15;
  uint64_t v17 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v17);

  sub_241024708(0, &qword_26B007328);
  swift_getKeyPath();
  id v19 = (void *)sub_241160DD0();
  id v20 = objc_msgSend(self, sel_medicationDoseEventType);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24116B220;
  *(void *)(v21 + 32) = v19;
  aBlock[0] = v21;
  sub_2411609C0();
  uint64_t v22 = swift_allocObject();
  long long v23 = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(v22 + 152) = *(_OWORD *)(a3 + 112);
  long long v24 = *(_OWORD *)(a3 + 144);
  *(_OWORD *)(v22 + 168) = *(_OWORD *)(a3 + 128);
  *(_OWORD *)(v22 + 184) = v24;
  *(_OWORD *)(v22 + 193) = *(_OWORD *)(a3 + 153);
  long long v25 = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v22 + 88) = *(_OWORD *)(a3 + 48);
  long long v26 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v22 + 104) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v22 + 120) = v26;
  *(_OWORD *)(v22 + 136) = v23;
  long long v27 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v22 + 40) = *(_OWORD *)a3;
  *(_OWORD *)(v22 + 56) = v27;
  *(void *)(v22 + 16) = sub_24101BC64;
  *(void *)(v22 + 24) = v8;
  *(void *)(v22 + 32) = a4;
  *(_OWORD *)(v22 + 72) = v25;
  id v28 = objc_allocWithZone(MEMORY[0x263F0A6E0]);
  id v29 = v18;
  id v30 = v19;
  sub_241022C6C(a3);
  uint64_t v31 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  aBlock[4] = (unint64_t)sub_24100F62C;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (unint64_t)sub_24100F574;
  aBlock[3] = (unint64_t)&unk_26F556BD0;
  uint64_t v32 = _Block_copy(aBlock);
  id v33 = objc_msgSend(v28, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v20, v29, 1, v31, v32);

  _Block_release(v32);
  swift_release();
  objc_msgSend(a5, sel_executeQuery_, v33);
}

uint64_t sub_241024708(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_241024744(unint64_t a1)
{
  return sub_241024768(a1, &qword_26B007380, 0x263F08A18, (unint64_t *)&qword_26B005EB8, &qword_268CF1BC8);
}

uint64_t sub_241024768(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, unint64_t *a5)
{
  unint64_t v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  sub_241024708(0, a2);
  sub_241024DA4(a4, a2);
  uint64_t result = sub_241160BD0();
  uint64_t v18 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_2411616E0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return v18;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      return v18;
    }
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        uint64_t v14 = (void *)MEMORY[0x245617450](i, a1);
        sub_241024900(&v17, v14, a2, a3, a5, a4);
      }
    }
    else
    {
      id v15 = (void **)(a1 + 32);
      do
      {
        uint64_t v16 = *v15++;
        sub_241024900(&v17, v16, a2, a3, a5, a4);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_241024900(void *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  id v11 = v6;
  uint64_t v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0) {
      uint64_t v15 = *v6;
    }
    else {
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v16 = a2;
    uint64_t v17 = sub_241161540();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_241024708(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_241161530();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = sub_2410DC188(v15, result + 1, a5, a3, a4, a6);
    uint64_t v43 = v29;
    unint64_t v30 = *(void *)(v29 + 16);
    if (*(void *)(v29 + 24) <= v30)
    {
      id v35 = a5;
      uint64_t v36 = v30 + 1;
      id v37 = v16;
      sub_2410DC68C(v36, v35, a3, a4, a6);
      uint64_t v31 = v43;
    }
    else
    {
      uint64_t v31 = v29;
      id v32 = v16;
    }
    sub_2410DD534((uint64_t)v16, v31);
    *id v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_2411612D0();
    uint64_t v20 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v21 = v19 & ~v20;
    uint64_t v40 = a4;
    if ((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
    {
      sub_241024708(0, a3);
      id v22 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
      char v23 = sub_2411612E0();

      if (v23)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        long long v27 = *(void **)(*(void *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        id v28 = v27;
        return 0;
      }
      uint64_t v24 = ~v20;
      while (1)
      {
        unint64_t v21 = (v21 + 1) & v24;
        if (((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        id v25 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
        char v26 = sub_2411612E0();

        if (v26) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    id v34 = a2;
    sub_241024BEC((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    *uint64_t v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

void sub_241024BEC(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = v11 + 1;
  if (a3)
  {
    sub_2410DC68C(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_2410DDFE4(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_2410DE6FC(v13, a4, a5, a6, a7);
  }
  uint64_t v14 = *v7;
  uint64_t v15 = sub_2411612D0();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_241024708(0, a5);
    id v17 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
    char v18 = sub_2411612E0();

    if (v18)
    {
LABEL_13:
      sub_2411618D0();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
        char v21 = sub_2411612E0();

        if (v21) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v22 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = a1;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v25;
  }
}

uint64_t sub_241024DA4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241024708(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_241024DF4()
{
  sub_241024708(0, &qword_26B005E30);
  unint64_t v0 = (void *)MEMORY[0x245616D80]();
  id v1 = objc_msgSend(self, sel_standardNumericYAxisWithConfigurationOverrides_, 0);
  objc_msgSend(v0, sel_setYAxis_, v1);
  sub_241024708(0, &qword_26B007380);
  uint64_t v2 = (void *)sub_2411612C0();
  uint64_t v3 = (void *)sub_2411612C0();
  id v4 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v2, v3);

  sub_24102502C(MEMORY[0x263F8EE78]);
  sub_241024708(0, &qword_26B005E10);
  sub_241024FC4();
  unint64_t v5 = (void *)sub_241160620();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_ruleWithDefaultAxisBounds_axisBoundsOverrides_, v4, v5);

  objc_msgSend(v0, sel_setAxisScalingRule_, v6);
  objc_msgSend(v0, sel_setIsCriticalForAutoscale_, 1);
  id v7 = v0;
  objc_msgSend(v7, sel_setInvertYAxis_, 0);

  return v7;
}

unint64_t sub_241024FC4()
{
  unint64_t result = qword_26B005EB8;
  if (!qword_26B005EB8)
  {
    sub_241024708(255, &qword_26B007380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005EB8);
  }
  return result;
}

unint64_t sub_24102502C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_241066670();
  uint64_t v2 = (void *)sub_241161720();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (void **)(a1 + 40);
  while (1)
  {
    unint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_2410627EC((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_241025134(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241069158(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2410251A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2410C4CB8(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241025214(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2410D5AAC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241025284(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241023ADC(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2410252F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2410F2858(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241025364(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2410FCFE4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2410253D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241105F50(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241025444(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_2411111FC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2410254A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241118194(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241025510(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241150330(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241025580(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_241160BD0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_2410257B0(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_241025618(uint64_t a1)
{
  uint64_t result = sub_241160BD0();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_2410257B0(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2410257B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_241161950();
  swift_bridgeObjectRetain();
  sub_241160830();
  uint64_t v8 = sub_2411619A0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_241161890() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_241161890() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_241025960(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_241025960(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_2410DC3B0();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_2410DDE10();
      goto LABEL_22;
    }
    sub_2410DE450();
  }
  uint64_t v11 = *v4;
  sub_241161950();
  sub_241160830();
  uint64_t result = sub_2411619A0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_241161890(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_2411618D0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_241161890();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_241025AFC(unint64_t a1, void (*a2)(void **))
{
  uint64_t v36 = a2;
  sub_241023ADC(0, &qword_26B004120, MEMORY[0x263F45738], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v27 - v5;
  uint64_t v7 = (void *)sub_24115D320();
  uint64_t v30 = *(v7 - 1);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  id v35 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v29 = (char *)&v27 - v10;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_2411616E0())
  {
    unint64_t v34 = a1 & 0xC000000000000001;
    uint64_t v31 = (void (**)(char *, uint64_t, void *))(v30 + 32);
    id v32 = (unsigned int (**)(uint64_t, uint64_t, void *))(v30 + 48);
    id v37 = v7;
    unint64_t v38 = MEMORY[0x263F8EE78];
    uint64_t v12 = 4;
    unint64_t v28 = a1;
    id v33 = v6;
    while (1)
    {
      uint64_t v6 = (char *)(v12 - 4);
      uint64_t v13 = v34 ? (void *)MEMORY[0x245617450](v12 - 4, a1) : *(id *)(a1 + 8 * v12);
      uint64_t v7 = v13;
      uint64_t v14 = v12 - 3;
      if (__OFADD__(v6, 1)) {
        break;
      }
      unint64_t v15 = a1;
      BOOL v16 = (void *)MEMORY[0x245617960]();
      uint64_t v39 = v7;
      uint64_t v17 = (uint64_t)v33;
      v36(&v39);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }

      uint64_t v18 = v37;
      if ((*v32)(v17, 1, v37) == 1)
      {
        sub_241025284(v17, &qword_26B004120, MEMORY[0x263F45738]);
        a1 = v15;
      }
      else
      {
        uint64_t v19 = v17;
        uint64_t v20 = (void (*)(char *, char *, void *))*v31;
        uint64_t v21 = v29;
        (*v31)(v29, v19, v18);
        v20(v35, v21, v18);
        unint64_t v22 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v22 = sub_241026728(0, *(void *)(v22 + 16) + 1, 1, v22);
        }
        unint64_t v24 = *(void *)(v22 + 16);
        unint64_t v23 = *(void *)(v22 + 24);
        unint64_t v38 = v22;
        if (v24 >= v23 >> 1) {
          unint64_t v38 = sub_241026728(v23 > 1, v24 + 1, 1, v38);
        }
        uint64_t v25 = v37;
        unint64_t v26 = v38;
        *(void *)(v38 + 16) = v24 + 1;
        v20((char *)(v26+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v24), v35, v25);
        a1 = v28;
      }
      ++v12;
      if (v14 == v11) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
}

void sub_241025EC8(void **a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_241025EE8(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (void *)sub_24115D170();
  sub_2410235A4(v4, a2);

  if (!v2)
  {
    uint64_t v6 = sub_24115D320();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 0, 1, v6);
  }
}

uint64_t sub_241025F8C(uint64_t a1, uint64_t a2)
{
  sub_2410268CC(0, &qword_26B004120, MEMORY[0x263F45738], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v38 - v5;
  uint64_t v7 = sub_24115D320();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v43 = (char *)&v38 - v11;
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v47 = a1 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v48 = (unint64_t)(v13 + 63) >> 6;
  BOOL v16 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v46 = v8 + 16;
  uint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v42 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v49 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  unint64_t v45 = MEMORY[0x263F8EE78];
  if (!v15) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v20 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  unint64_t v21 = v20 | (v19 << 6);
  if (!*(void *)(a2 + 16))
  {
LABEL_5:
    (*v16)(v6, 1, 1, v7);
    goto LABEL_6;
  }
  while (1)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(v49 + 48) + 16 * v21);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_24101DC1C(v27, v26);
    if (v29)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(void *)(a2 + 56) + *(void *)(v8 + 72) * v28, v7);
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v30 = 1;
    }
    (*v16)(v6, v30, 1, v7);
    swift_bridgeObjectRelease();
    if ((*v17)(v6, 1, v7) == 1)
    {
LABEL_6:
      uint64_t result = sub_24106EBD8((uint64_t)v6);
      if (v15) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v40 = v8;
      uint64_t v31 = *v42;
      (*v42)(v43, v6, v7);
      id v41 = v31;
      v31(v44, v43, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v45 = sub_241026728(0, *(void *)(v45 + 16) + 1, 1, v45);
      }
      unint64_t v33 = *(void *)(v45 + 16);
      unint64_t v32 = *(void *)(v45 + 24);
      unint64_t v34 = v33 + 1;
      uint64_t v8 = v40;
      if (v33 >= v32 >> 1)
      {
        unint64_t v39 = v33 + 1;
        uint64_t v37 = sub_241026728(v32 > 1, v33 + 1, 1, v45);
        unint64_t v34 = v39;
        unint64_t v45 = v37;
      }
      id v35 = v44;
      unint64_t v36 = v45;
      *(void *)(v45 + 16) = v34;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(v36+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v33, v35, v7);
      if (v15) {
        goto LABEL_7;
      }
    }
LABEL_9:
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v22 >= v48) {
      goto LABEL_35;
    }
    unint64_t v23 = *(void *)(v47 + 8 * v22);
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v48) {
        goto LABEL_35;
      }
      unint64_t v23 = *(void *)(v47 + 8 * v19);
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v48) {
          goto LABEL_35;
        }
        unint64_t v23 = *(void *)(v47 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v48) {
            goto LABEL_35;
          }
          unint64_t v23 = *(void *)(v47 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
    if (!*(void *)(a2 + 16)) {
      goto LABEL_5;
    }
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v48)
  {
LABEL_35:
    swift_release();
    return v45;
  }
  unint64_t v23 = *(void *)(v47 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v48) {
      goto LABEL_35;
    }
    unint64_t v23 = *(void *)(v47 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_24;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_241026428(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    int64_t v19 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_2410266C4(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  int64_t v19 = (void *)swift_allocObject();
  size_t v20 = j__malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_2411616A0();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_241026770(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

void sub_2410266C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241026728(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241026428(a1, a2, a3, a4, &qword_26B005F38, MEMORY[0x263F45738], MEMORY[0x263F45738], MEMORY[0x263F45738]);
}

uint64_t sub_241026770(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

void sub_2410268CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_241026930(uint64_t a1)
{
  uint64_t v60 = *v1;
  uint64_t v64 = sub_24115D1C0();
  uint64_t v3 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MedicationsGeneratorContext();
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))sub_24115F790();
  uint64_t v61 = *((void *)v9 - 1);
  uint64_t v62 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241160730();
  id v12 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  unint64_t v13 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithSuiteName_, v13);

  if (v14
    && (uint64_t v15 = (void *)sub_2411606F0(),
        unsigned int v16 = objc_msgSend(v14, sel_BOOLForKey_, v15),
        v14,
        v15,
        v16))
  {
    sub_24115F760();
    uint64_t v17 = sub_24115F780();
    os_log_type_t v18 = sub_241160D50();
    if (os_log_type_enabled(v17, v18))
    {
      int64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(void *)&v68[0] = v20;
      *(_DWORD *)int64_t v19 = 136315138;
      v69[0] = v60;
      swift_getMetatypeMetadata();
      uint64_t v21 = sub_241160760();
      v69[0] = sub_24101F0A4(v21, v22, (uint64_t *)v68);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v17, v18, "[%s]: Minimal medications plugin enabled, returning nil for primary profile pipelines", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v20, -1, -1);
      MEMORY[0x2456180C0](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t (*)(uint64_t, uint64_t)))(v61 + 8))(v11, v62);
    return (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
    sub_241027640(0, (unint64_t *)&qword_26B005F30, (uint64_t (*)(uint64_t))sub_2410276A4, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24116B9F0;
    uint64_t v25 = a1;
    sub_241027390(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
    uint64_t v26 = type metadata accessor for MedicationsOnboardingGeneratorPipeline();
    swift_allocObject();
    uint64_t v27 = sub_24100C6B0((uint64_t)v8);
    *(void *)(inited + 56) = v26;
    *(void *)(inited + 64) = sub_241027824(&qword_26B004BC0, (void (*)(uint64_t))type metadata accessor for MedicationsOnboardingGeneratorPipeline);
    *(void *)(inited + 32) = v27;
    unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v28(v5, v25, v64);
    uint64_t v29 = type metadata accessor for MedicationsCategoryGeneratorPipeline(0);
    swift_allocObject();
    uint64_t v30 = sub_24100CE0C((uint64_t)v5);
    *(void *)(inited + 96) = v29;
    *(void *)(inited + 104) = sub_241027824(&qword_26B004B00, (void (*)(uint64_t))type metadata accessor for MedicationsCategoryGeneratorPipeline);
    *(void *)(inited + 72) = v30;
    sub_241027390(v25, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
    uint64_t v31 = type metadata accessor for MedicationsNotificationSettingsGeneratorPipeline(0);
    swift_allocObject();
    uint64_t v32 = sub_24100C8D0((uint64_t)v8);
    *(void *)(inited + 136) = v31;
    *(void *)(inited + 144) = sub_241027824(&qword_26B004D58, (void (*)(uint64_t))type metadata accessor for MedicationsNotificationSettingsGeneratorPipeline);
    *(void *)(inited + 112) = v32;
    uint64_t v33 = v64;
    v28(v5, v25, v64);
    uint64_t v34 = type metadata accessor for MedicationsLoggingSummaryGeneratorPipeline();
    swift_allocObject();
    uint64_t v35 = sub_24100C1EC((uint64_t)v5);
    *(void *)(inited + 176) = v34;
    *(void *)(inited + 184) = sub_241027824(&qword_26B004C90, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryGeneratorPipeline);
    *(void *)(inited + 152) = v35;
    v28(v5, v25, v33);
    uint64_t v36 = type metadata accessor for MedicationHighlightsGeneratorPipeline();
    swift_allocObject();
    uint64_t v37 = sub_24100C3B8((uint64_t)v5);
    *(void *)(inited + 216) = v36;
    *(void *)(inited + 224) = sub_241027824(&qword_26B005350, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsGeneratorPipeline);
    *(void *)(inited + 192) = v37;
    uint64_t v71 = inited;
    uint64_t v38 = sub_24100E1CC(v25);
    uint64_t v39 = sub_241027A4C((uint64_t)v38);
    swift_bridgeObjectRelease();
    sub_241027EF8(v39);
    uint64_t v40 = v62;
    sub_241027640(0, &qword_26B005F68, (uint64_t (*)(uint64_t))sub_241055554, v62);
    uint64_t v41 = swift_allocObject();
    long long v63 = xmmword_24116B370;
    *(_OWORD *)(v41 + 16) = xmmword_24116B370;
    *(void *)(v41 + 56) = &type metadata for MedicationsArticleDataProvider;
    *(void *)(v41 + 64) = sub_24102F66C();
    *(void *)(v41 + 72) = sub_24102F618();
    sub_241027640(0, &qword_26B005F28, (uint64_t (*)(uint64_t))sub_24102F838, v40);
    uint64_t v42 = swift_initStackObject();
    *(_OWORD *)(v42 + 16) = v63;
    v28(v5, v25, v33);
    sub_24102F784();
    uint64_t v44 = v43;
    swift_allocObject();
    uint64_t v45 = sub_24115EF30();
    *(void *)(v42 + 56) = v44;
    *(void *)(v42 + 64) = sub_241027824(&qword_26B004180, (void (*)(uint64_t))sub_24102F784);
    *(void *)(v42 + 32) = v45;
    uint64_t v46 = sub_241027A4C(v42);
    swift_setDeallocating();
    sub_24102F838();
    swift_arrayDestroy();
    sub_241027EF8(v46);
    unint64_t v23 = (void *)MEMORY[0x263F8EE78];
    v70[0] = MEMORY[0x263F8EE78];
    uint64_t v47 = *(void *)(v71 + 16);
    if (v47)
    {
      uint64_t v48 = v71 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_241027390(v48, (uint64_t)v69, (uint64_t (*)(void))sub_2410276A4);
        sub_2410275D8((uint64_t)v69, (uint64_t)&v65, (uint64_t (*)(void))sub_2410276A4);
        if (v66)
        {
          sub_241027314(&v65, (uint64_t)v68);
          sub_241027314(v68, (uint64_t)&v65);
          uint64_t v49 = (void *)v70[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            uint64_t v49 = sub_2410279C4(0, v49[2] + 1, 1, v49);
            v70[0] = (uint64_t)v49;
          }
          unint64_t v51 = v49[2];
          unint64_t v50 = v49[3];
          if (v51 >= v50 >> 1) {
            v70[0] = (uint64_t)sub_2410279C4((void *)(v50 > 1), v51 + 1, 1, v49);
          }
          uint64_t v52 = v66;
          uint64_t v53 = v67;
          uint64_t v54 = sub_2410276D8((uint64_t)&v65, v66);
          MEMORY[0x270FA5388](v54);
          id v56 = (char *)&v59 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v57 + 16))(v56);
          sub_241027728(v51, (uint64_t)v56, v70, v52, v53);
          sub_24101F178((uint64_t)&v65);
        }
        else
        {
          sub_24101839C((uint64_t)&v65, (uint64_t (*)(void))sub_2410276A4);
        }
        v48 += 40;
        --v47;
      }
      while (v47);
      swift_bridgeObjectRelease();
      unint64_t v23 = (void *)v70[0];
    }
    swift_bridgeObjectRelease();
  }
  return v23;
}

uint64_t sub_241027314(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24102732C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsGeneratorContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241027390(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2410273F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241027460(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for MedicationsGeneratorContext()
{
  uint64_t result = qword_26B0038C0;
  if (!qword_26B0038C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241027514(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  unint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v14 = a3[9];
  uint64_t v15 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v15;
  id v16 = v9;
  id v17 = v10;
  id v18 = v13;
  swift_retain();
  id v19 = v15;
  return a1;
}

uint64_t sub_2410275D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_241027640(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2410276A4(uint64_t a1)
{
}

uint64_t sub_2410276D8(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_241027728(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_2410277C0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_241027314(&v12, v10 + 40 * a1 + 32);
}

uint64_t *sub_2410277C0(uint64_t *a1)
{
  id v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_241027824(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_24102786C(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_2410279E0(0, a5, a6, a7, MEMORY[0x263F8E0F8]);
      uint64_t v14 = (void *)swift_allocObject();
      size_t v15 = j__malloc_size(v14);
      void v14[2] = v12;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      id v16 = v14 + 4;
      if (v9)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v12 + 4]) {
          memmove(v16, a4 + 4, 40 * v12);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x263F8EE78];
      id v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_241027D90(0, v12, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

void *sub_2410279C4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24102786C(a1, a2, a3, a4, &qword_26B005F28, (unint64_t *)&qword_26B004100, MEMORY[0x263F456E8]);
}

void sub_2410279E0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241027EA8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241027A4C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_241027BA4(0, v1, 0);
    uint64_t v4 = a1 + 32;
    do
    {
      sub_2410280A4(v4, (uint64_t)v8);
      sub_241020840(0, (unint64_t *)&qword_26B004100);
      sub_2410276A4(0);
      swift_dynamicCast();
      uint64_t v2 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_241027BA4(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v10;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_241027BA4(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v10;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_241028108((uint64_t)v9, v2 + 40 * v6 + 32, (uint64_t (*)(void))sub_2410276A4);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_241027BA4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_241027BC4(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_241027BC4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241023ADC(0, (unint64_t *)&qword_26B005F30, (uint64_t (*)(uint64_t))sub_2410276A4, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_2410276A4(0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_241027D90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_241027EA8(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_241027EA8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_241027EF8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  long long v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  long long v3 = sub_24100AD58(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  sub_2410276A4(0);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_24102806C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410280A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_241028108(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241028170(uint64_t a1, int a2)
{
  LODWORD(v140) = a2;
  uint64_t v162 = sub_24115D100();
  uint64_t v161 = *(void *)(v162 - 8);
  MEMORY[0x270FA5388](v162);
  uint64_t v160 = (char *)&v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24115D130();
  uint64_t v163 = *(void *)(v4 - 8);
  uint64_t v164 = v4;
  MEMORY[0x270FA5388](v4);
  v159 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v7 = v6 - 8;
  dispatch_group_t v165 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v6 - 8);
  uint64_t v129 = *((void *)v165 + 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v169 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v127 = (uint64_t (*)())MEMORY[0x263F90210];
  sub_241023ADC(0, &qword_26B005460, MEMORY[0x263F90210], MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v122 = (uint64_t (*)())((char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  id v117 = (char *)&v114 - v12;
  uint64_t v121 = sub_24115CED0();
  uint64_t v13 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  int64_t v15 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241029C74(0, &qword_26B005C50, (uint64_t (*)(uint64_t))sub_24102B6C8, sub_24102B6FC, MEMORY[0x263EFDE30]);
  uint64_t v119 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  id v19 = (char *)&v114 - v18;
  sub_241029C74(0, &qword_26B005578, (uint64_t (*)(uint64_t))sub_24102B6C8, sub_24102B6FC, MEMORY[0x263F459F0]);
  uint64_t v125 = v20;
  uint64_t v126 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v120 = (char *)&v114 - v21;
  sub_24102C928();
  uint64_t v131 = v22;
  uint64_t v132 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v123 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102DAA4();
  uint64_t v133 = v24;
  uint64_t v134 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  long long v128 = (char *)&v114 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102C488();
  dispatch_group_t v136 = v26;
  uint64_t v137 = *((void *)v26 - 1);
  MEMORY[0x270FA5388](v26);
  uint64_t v130 = (char *)&v114 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24101CD40(0, &qword_26B005878, (void (*)(uint64_t))sub_24102C488, (void (*)(void))sub_24102C574);
  uint64_t v142 = v28;
  uint64_t v145 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v135 = (char *)&v114 - v29;
  sub_24102C7E8();
  uint64_t v143 = v30;
  uint64_t v144 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  v139 = (char *)&v114 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241029C74(0, &qword_26B005848, (uint64_t (*)(uint64_t))sub_24102C7E8, sub_24102C8F4, MEMORY[0x263EFDC10]);
  uint64_t v146 = v32;
  uint64_t v148 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  v138 = (char *)&v114 - v33;
  sub_24102CC28();
  uint64_t v149 = v34;
  uint64_t v151 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  v141 = (char *)&v114 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102D20C();
  uint64_t v152 = v36;
  uint64_t v153 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v147 = (char *)&v114 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102CA48();
  uint64_t v155 = v38;
  uint64_t v157 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  id v150 = (char *)&v114 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241029C74(0, &qword_26B005538, (uint64_t (*)(uint64_t))sub_24102BA7C, sub_24102BB2C, MEMORY[0x263EFDAA0]);
  uint64_t v156 = v40;
  uint64_t v158 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  v154 = (char *)&v114 - v41;
  uint64_t v175 = sub_24115D1C0();
  uint64_t v167 = *(void *)(v175 - 8);
  uint64_t v124 = *(void *)(v167 + 64);
  uint64_t v42 = MEMORY[0x270FA5388](v175);
  uint64_t v168 = (char *)&v114 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  uint64_t v171 = v44 + 16;
  v172 = v45;
  dispatch_group_t v176 = (char *)&v114 - v46;
  ((void (*)(char *, uint64_t))v45)((char *)&v114 - v46, a1);
  sub_24115C780();
  swift_allocObject();
  uint64_t v170 = sub_24115C770();
  sub_24115D140();
  type metadata accessor for SharableModelContextChangeGenerator();
  uint64_t v174 = swift_allocObject();
  sub_241027314(&v178, v174 + 16);
  uint64_t v116 = *(void *)(a1 + *(int *)(v7 + 40));
  uint64_t v47 = *(void **)(a1 + *(int *)(v7 + 28));
  uint64_t v115 = a1;
  id v118 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F44BF0]), sel_initWithHealthStore_, v47);
  sub_24115F3C0();
  swift_allocObject();
  id v48 = v47;
  uint64_t v166 = sub_24115F3B0();
  *(void *)(swift_allocObject() + 16) = v48;
  sub_24102B6C8(0);
  sub_24102B6FC();
  id v49 = v48;
  sub_24115FD10();
  sub_24102B1C0();
  uint64_t v50 = v119;
  uint64_t v51 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v50);
  uint64_t v52 = v121;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F455A8], v121);
  sub_24115CEC0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v52);
  uint64_t v53 = sub_24115F710();
  uint64_t v54 = (uint64_t)v117;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v117, 1, 1, v53);
  *(void *)&long long v178 = v51;
  sub_24102ECF8(v54, (uint64_t)v122);
  swift_retain();
  uint64_t v55 = v120;
  sub_24115FB10();
  sub_241025284(v54, &qword_26B005460, (uint64_t (*)(uint64_t))v127);
  swift_release();
  long long v127 = type metadata accessor for MedicationsGeneratorContext;
  uint64_t v56 = (uint64_t)v169;
  sub_2410273F8(a1, (uint64_t)v169, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  uint64_t v57 = *((unsigned __int8 *)v165 + 80);
  uint64_t v58 = (v57 + 24) & ~v57;
  uint64_t v121 = v58 + v129;
  uint64_t v129 = v57 | 7;
  uint64_t v59 = swift_allocObject();
  uint64_t v60 = v173;
  *(void *)(v59 + 16) = v173;
  uint64_t v122 = type metadata accessor for MedicationsGeneratorContext;
  sub_2410230F0(v56, v59 + v58, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  sub_24115FC10();
  sub_24102AD24();
  dispatch_group_t v165 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_241029BE8(0, &qword_26B005B30, (uint64_t (*)(uint64_t))sub_24102AD24, MEMORY[0x263EFDCF0]);
  sub_24102E4D8();
  sub_241029CF4(&qword_26B005B28, &qword_26B005B30, (uint64_t (*)(uint64_t))sub_24102AD24);
  uint64_t v61 = v123;
  uint64_t v62 = v125;
  sub_24115FEE0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v55, v62);
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v60;
  *(void *)(v63 + 24) = v116;
  *(unsigned char *)(v63 + 32) = v140;
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = sub_24102F3C8;
  *(void *)(v64 + 24) = v63;
  sub_241023CC0(0, &qword_26B005D00, (uint64_t)&type metadata for MedicationShareableData, MEMORY[0x263F8D488]);
  uint64_t v140 = MEMORY[0x263EFDC28];
  sub_241029BA0(&qword_26B0058C0, (void (*)(uint64_t))sub_24102C928);
  swift_retain();
  long long v65 = v128;
  uint64_t v66 = v131;
  sub_24115FE70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v61, v66);
  sub_24115FC10();
  sub_24102C174();
  sub_241029BA0(&qword_26B005680, (void (*)(uint64_t))sub_24102DAA4);
  sub_241029BA0(&qword_26B005970, (void (*)(uint64_t))sub_24102C174);
  uint64_t v67 = v130;
  uint64_t v68 = v133;
  sub_24115FEE0();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v65, v68);
  uint64_t v69 = (uint64_t)v169;
  sub_2410273F8(v115, (uint64_t)v169, (uint64_t (*)(void))v127);
  unint64_t v70 = (v121 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = swift_allocObject();
  uint64_t v72 = v60;
  *(void *)(v71 + 16) = v60;
  sub_2410230F0(v69, v71 + v58, (uint64_t (*)(void))v122);
  uint64_t v73 = v118;
  *(void *)(v71 + v70) = v118;
  *(void *)(v71 + ((v70 + 15) & 0xFFFFFFFFFFFFFFF8)) = v166;
  uint64_t v169 = v73;
  swift_retain();
  sub_24115FC10();
  uint64_t v74 = (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, void))MEMORY[0x263EFDCF0];
  sub_24101CBCC(0, &qword_26B005A50, MEMORY[0x263EFDCF0]);
  sub_24102C574();
  sub_24101CA18(&qword_26B005A48, &qword_26B005A50, v74);
  uint64_t v75 = v135;
  id v76 = v136;
  sub_24115FEE0();
  swift_release();
  (*(void (**)(char *, void (*)(void, void, void)))(v137 + 8))(v67, v76);
  int64_t v77 = v168;
  uint64_t v78 = v175;
  v172(v168, v176, v175);
  uint64_t v79 = v167;
  uint64_t v80 = *(unsigned __int8 *)(v167 + 80);
  uint64_t v81 = (v80 + 24) & ~v80;
  uint64_t v82 = v81 + v124;
  uint64_t v137 = v80 | 7;
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 16) = v72;
  dispatch_group_t v136 = *(void (**)(void, void, void))(v79 + 32);
  v136(v83 + v81, v77, v78);
  sub_241020918();
  sub_241029BE8(0, &qword_26B005B50, (uint64_t (*)(uint64_t))sub_241020918, v165);
  sub_24102CB04();
  sub_241029CF4(&qword_26B005B48, &qword_26B005B50, (uint64_t (*)(uint64_t))sub_241020918);
  uint64_t v84 = v139;
  uint64_t v85 = v142;
  sub_24115FEE0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v145 + 8))(v75, v85);
  sub_24102C8F4();
  unint64_t v86 = v138;
  uint64_t v87 = v143;
  sub_24115FEC0();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v84, v87);
  id v88 = v168;
  uint64_t v89 = v175;
  v172(v168, v176, v175);
  unint64_t v90 = (v82 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v91 = swift_allocObject();
  *(void *)(v91 + 16) = v170;
  v136(v91 + v81, v88, v89);
  uint64_t v92 = v173;
  *(void *)(v91 + v90) = v173;
  sub_24102B034(0);
  sub_24102CB8C();
  swift_retain();
  unint64_t v93 = v141;
  uint64_t v94 = v146;
  sub_24115FEB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v148 + 8))(v86, v94);
  *(void *)(swift_allocObject() + 16) = v92;
  sub_241029BE8(0, &qword_26B005A80, (uint64_t (*)(uint64_t))sub_24102B034, v165);
  sub_241029BA0(&qword_26B005820, (void (*)(uint64_t))sub_24102CC28);
  sub_241029CF4(&qword_26B005A78, &qword_26B005A80, (uint64_t (*)(uint64_t))sub_24102B034);
  id v95 = v147;
  uint64_t v96 = v149;
  sub_24115FE80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v151 + 8))(v93, v96);
  swift_retain();
  sub_24115FC10();
  sub_241023ADC(0, &qword_26B005CC0, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
  sub_24102BA7C();
  sub_241029BA0(&qword_26B005770, (void (*)(uint64_t))sub_24102D20C);
  sub_24102BB2C();
  id v97 = v150;
  uint64_t v98 = v152;
  sub_24115FEE0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v153 + 8))(v95, v98);
  sub_24115D1B0();
  sub_24115D170();
  sub_241023ADC(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v99 = sub_24115CEB0();
  uint64_t v100 = *(void *)(v99 - 8);
  uint64_t v101 = *(void *)(v100 + 72);
  unint64_t v102 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
  uint64_t v103 = swift_allocObject();
  *(_OWORD *)(v103 + 16) = xmmword_24116B200;
  unint64_t v104 = v103 + v102;
  uint64_t v105 = *(void (**)(unint64_t, void, uint64_t))(v100 + 104);
  v105(v104, *MEMORY[0x263F45520], v99);
  v105(v104 + v101, *MEMORY[0x263F454D0], v99);
  (*(void (**)(char *, void, uint64_t))(v161 + 104))(v160, *MEMORY[0x263F45690], v162);
  uint64_t v106 = MEMORY[0x263F8EE78];
  uint64_t v107 = v159;
  sub_24115D110();
  sub_241029BA0(&qword_26B0058B0, (void (*)(uint64_t))sub_24102CA48);
  uint64_t v108 = v155;
  uint64_t v109 = sub_24115FDA0();
  (*(void (**)(char *, uint64_t))(v163 + 8))(v107, v164);
  sub_24101F178((uint64_t)&v178);
  (*(void (**)(char *, uint64_t))(v157 + 8))(v97, v108);
  uint64_t v177 = v106;
  *(void *)&long long v178 = v109;
  uint64_t v110 = v154;
  sub_24115FE40();
  swift_release();
  sub_24102E608();
  uint64_t v111 = v156;
  uint64_t v112 = sub_24115FE20();

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v110, v111);
  (*(void (**)(char *, uint64_t))(v167 + 8))(v176, v175);
  return v112;
}

uint64_t sub_241029BA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241029BE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    uint64_t v8 = sub_241020840(255, (unint64_t *)&qword_26B0073B0);
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241029C74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_241029CF4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241029BE8(255, a2, a3, MEMORY[0x263EFDCF0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 initializeWithTake for MedicationShareableData(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_OWORD *)(a1 + 153) = *(long long *)((char *)a2 + 153);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MedicationShareableData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 169)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_241029DE4()
{
  return swift_release();
}

uint64_t sub_241029DEC()
{
  return swift_release();
}

uint64_t sub_241029DF4()
{
  return swift_release();
}

uint64_t sub_241029DFC()
{
  return swift_release();
}

uint64_t sub_241029E04()
{
  return swift_release();
}

uint64_t sub_241029E0C()
{
  return swift_release();
}

uint64_t sub_241029E14()
{
  return swift_release();
}

uint64_t sub_241029E1C()
{
  return swift_release();
}

uint64_t sub_241029E24()
{
  return swift_release();
}

uint64_t sub_241029E2C()
{
  return swift_release();
}

uint64_t sub_241029E34()
{
  return swift_release();
}

uint64_t sub_241029E3C()
{
  return swift_release();
}

uint64_t sub_241029E44()
{
  return swift_release();
}

uint64_t sub_241029E4C()
{
  return swift_release();
}

uint64_t sub_241029E54()
{
  return swift_release();
}

uint64_t sub_241029E5C()
{
  return swift_release();
}

uint64_t sub_241029E64()
{
  return swift_release();
}

uint64_t sub_241029E6C()
{
  return swift_release();
}

uint64_t sub_241029E74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029E84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029E94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029F04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029F14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029F24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029F34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029F64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_241029F94()
{
  return 0;
}

uint64_t storeEnumTagSinglePayload for MedicationShareableData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 168) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 169) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 169) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

id sub_24102A00C(uint64_t a1)
{
  return objc_msgSend(v1, sel_setMinimumSupportedVersion_, a1);
}

id sub_24102A020(uint64_t a1)
{
  return objc_msgSend(v1, sel_setLatestSupportedVersion_, a1);
}

uint64_t sub_24102A034()
{
  return swift_retain();
}

uint64_t sub_24102A060(uint64_t a1, uint64_t a2)
{
  return sub_2410127DC(a1, a2, (SEL *)&selRef_manufacturedDoseForm);
}

uint64_t sub_24102A06C(uint64_t a1, uint64_t a2)
{
  return sub_2410127DC(a1, a2, (SEL *)&selRef_baseUnitStrength);
}

uint64_t sub_24102A078(uint64_t a1, uint64_t a2)
{
  return sub_2410127DC(a1, a2, (SEL *)&selRef_genericName);
}

uint64_t sub_24102A084(uint64_t a1, uint64_t a2)
{
  return sub_2410127DC(a1, a2, (SEL *)&selRef_brandName);
}

uint64_t sub_24102A090(uint64_t a1, uint64_t a2)
{
  return sub_2410127DC(a1, a2, (SEL *)&selRef_freeTextMedicationName);
}

uint64_t sub_24102A09C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a3)
    {
      sub_241020840(0, (unint64_t *)&qword_26B0073B0);
      uint64_t v6 = swift_allocError();
      *uint64_t v7 = a3;
      id v8 = a3;
      a1 = v3;
      a2 = v6;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x270FA2410](a1, a2);
  }
}

uint64_t sub_24102A148()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 312) = v1;
  if (v1) {
    uint64_t v2 = sub_241054334;
  }
  else {
    uint64_t v2 = sub_241013C68;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

void sub_24102A25C(uint64_t a1, uint64_t a2)
{
  sub_2410241C0(a1, a2, v2 + 16, *(void *)(v2 + 192), *(void **)(v2 + 200));
}

uint64_t sub_24102A268(uint64_t (*a1)(void *), uint64_t a2)
{
  return sub_241020980(a1, a2, (long long *)(v2 + 16), *(void *)(v2 + 192), *(void *)(v2 + 200));
}

void sub_24102A274(uint64_t a1, uint64_t a2)
{
  sub_24101045C(a1, a2, *(void **)(v2 + 16), v2 + 24);
}

uint64_t sub_24102A280@<X0>(uint64_t *a1@<X8>)
{
  return sub_24100F410(*(void **)(v1 + 16), (_OWORD *)(v1 + 24), a1);
}

uint64_t sub_24102A28C(uint64_t a1)
{
  return sub_24100AFD4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24102A2A4);
}

uint64_t sub_24102A2A4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_24101C7D4(a1, a2, a3, a4);
}

uint64_t sub_24102A2C4(uint64_t a1)
{
  return sub_24100AFD4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24102A2DC);
}

uint64_t sub_24102A2DC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_24101C7D4(a1, a2, a3, a4);
}

uint64_t sub_24102A314(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

unint64_t sub_24102A354()
{
  unint64_t result = qword_26B0073B0;
  if (!qword_26B0073B0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0073B0);
  }
  return result;
}

void sub_24102A3AC()
{
  if (!qword_26B005F58)
  {
    sub_24104D588();
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005F58);
    }
  }
}

void sub_24102A404(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241020840(255, &qword_26B004140);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_24102A474()
{
  if (!qword_26B005F30)
  {
    sub_2410279E0(255, &qword_26B004108, (unint64_t *)&qword_26B004100, MEMORY[0x263F456E8], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005F30);
    }
  }
}

void sub_24102A4F8()
{
  if (!qword_26B007388)
  {
    sub_24115CEB0();
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B007388);
    }
  }
}

uint64_t sub_24102A550(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24100ABCC(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_24102A570(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241026428(a1, a2, a3, a4, &qword_26B005F50, MEMORY[0x263F458B0], MEMORY[0x263F458B0], MEMORY[0x263F458B0]);
}

uint64_t sub_24102A5B8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_2410CDE8C();
  uint64_t result = sub_2411615D0();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_241161950();
    swift_bridgeObjectRetain();
    sub_241160830();
    uint64_t result = sub_2411619A0();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_24102A84C(uint64_t a1, uint64_t a2)
{
  return sub_24100A348(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_2410117E0);
}

unint64_t sub_24102A8B8()
{
  unint64_t result = qword_26B007340;
  if (!qword_26B007340)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B007340);
  }
  return result;
}

unint64_t sub_24102A8F8()
{
  unint64_t result = qword_26B007330;
  if (!qword_26B007330)
  {
    sub_241024708(255, (unint64_t *)&qword_26B007340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B007330);
  }
  return result;
}

uint64_t sub_24102A960(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24101AEF4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24102A9D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241017170(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24102AA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_24102AAA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_24101729C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24102AAFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241023B94(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24102AB6C(uint64_t a1)
{
  sub_2410171D4(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24102ABF8()
{
  if (!qword_26B0071C0)
  {
    sub_241160EB0();
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0071C0);
    }
  }
}

unint64_t sub_24102AC50()
{
  unint64_t result = qword_26B007320;
  if (!qword_26B007320)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B007320);
  }
  return result;
}

uint64_t sub_24102AC90()
{
  return sub_241019D40(&qword_26B005E18, MEMORY[0x263F44AA8]);
}

void sub_24102ACC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_24104D3F8();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_24102AD24()
{
  if (!qword_26B005DC8)
  {
    sub_2410757A8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B005DC8);
    }
  }
}

uint64_t sub_24102AD88@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_24102ADC0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241017238(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24102AE24(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_24102AE70(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_24102AEBC()
{
  unint64_t result = qword_26B005D08;
  if (!qword_26B005D08)
  {
    sub_241023CC0(255, &qword_26B005D00, (uint64_t)&type metadata for MedicationShareableData, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005D08);
  }
  return result;
}

void sub_24102AF38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24102AF9C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_24102AFE8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_24102B034(uint64_t a1)
{
}

void sub_24102B068(uint64_t a1)
{
}

uint64_t sub_24102B09C(uint64_t a1)
{
  return sub_24100A838(a1, (uint64_t (*)(void))sub_241026728, MEMORY[0x263F45738]);
}

uint64_t sub_24102B0C8(uint64_t a1)
{
  return sub_241009F84(a1, (uint64_t (*)(void))sub_2410279C4, (unint64_t *)&qword_26B004100);
}

void sub_24102B0F0(uint64_t a1)
{
}

uint64_t sub_24102B124()
{
  return sub_241017EE8(&qword_26B005C78, sub_24102B0F0);
}

void sub_24102B158(uint64_t a1)
{
}

uint64_t sub_24102B18C()
{
  return sub_241017EE8(&qword_26B005C68, sub_24102B158);
}

unint64_t sub_24102B1C0()
{
  unint64_t result = qword_26B005C48;
  if (!qword_26B005C48)
  {
    sub_241029C74(255, &qword_26B005C50, (uint64_t (*)(uint64_t))sub_24102B6C8, sub_24102B6FC, MEMORY[0x263EFDE30]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005C48);
  }
  return result;
}

void sub_24102B25C()
{
  if (!qword_26B005C30)
  {
    sub_24102BE58();
    sub_24100CDC4(&qword_26B005A38, (void (*)(uint64_t))sub_24102BE58);
    unint64_t v0 = sub_24115FD20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005C30);
    }
  }
}

unint64_t sub_24102B2F0()
{
  unint64_t result = qword_26B005C08;
  if (!qword_26B005C08)
  {
    sub_241029BE8(255, &qword_26B005C10, (uint64_t (*)(uint64_t))sub_2410757A8, MEMORY[0x263EFDE20]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005C08);
  }
  return result;
}

uint64_t sub_24102B378(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24102B590(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24102B3BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_241117DF0(255, &qword_26B005DB8, &qword_26B007358);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_24102B444(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24102B3BC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24102B488(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_24101AEF4(255, (unint64_t *)&unk_26B007220, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_24102B528()
{
  if (!qword_26B005B80)
  {
    sub_24104D3F8();
    unint64_t v0 = sub_24115FC60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005B80);
    }
  }
}

void sub_24102B590(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24102B5F8()
{
  if (!qword_26B005B60)
  {
    sub_24110161C();
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005B60);
    }
  }
}

void sub_24102B660()
{
  if (!qword_26B0072D8)
  {
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0072D8);
    }
  }
}

void sub_24102B6C8(uint64_t a1)
{
}

uint64_t sub_24102B6FC()
{
  return sub_241029BA0(&qword_26B005B38, sub_24102B6C8);
}

void sub_24102B730()
{
  if (!qword_26B005B10)
  {
    sub_241043774(255, &qword_26B005DB8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005B10);
    }
  }
}

void sub_24102B7C4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_24102AE24(255, a3, a4, MEMORY[0x263F8D488]);
    unint64_t v9 = a5(a1, v8, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_24102B850(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24102B7C4(255, a2, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24102B8A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_24102AE70(255, &qword_26B005D10, (uint64_t)&type metadata for MedicationDoseEventDetails, MEMORY[0x263F8D488]);
    unint64_t v7 = a3(a1, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_24102B93C()
{
  unint64_t result = qword_26B005AD8;
  if (!qword_26B005AD8)
  {
    sub_24102B8A8(255, &qword_26B005AE0, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005AD8);
  }
  return result;
}

void sub_24102B9B0()
{
  if (!qword_26B005AD0)
  {
    sub_24102AF38(255, &qword_26B005CC0, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005AD0);
    }
  }
}

uint64_t sub_24102BA48()
{
  return sub_241014B4C(&qword_26B005AC8, (void (*)(uint64_t))sub_24102B9B0);
}

void sub_24102BA7C()
{
  if (!qword_26B005AC0)
  {
    sub_241023ADC(255, &qword_26B005CC0, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    sub_241020840(255, (unint64_t *)&qword_26B0073B0);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005AC0);
    }
  }
}

uint64_t sub_24102BB2C()
{
  return sub_241029BA0(&qword_26B005AB8, (void (*)(uint64_t))sub_24102BA7C);
}

void sub_24102BB60()
{
  if (!qword_26B005AB0)
  {
    sub_24102AF9C(255, &qword_26B005CA8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005AB0);
    }
  }
}

void sub_24102BBEC()
{
  if (!qword_26B005A90)
  {
    sub_2410268CC(255, &qword_26B005CA0, MEMORY[0x263F45738], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005A90);
    }
  }
}

void sub_24102BC84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_24102B068(255);
    uint64_t v7 = v6;
    unint64_t v8 = sub_24102A354();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24102BCFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_24102A354();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_24102BD78(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24102BC84(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24102BDBC()
{
  if (!qword_26B0072C8)
  {
    sub_24115F6B0();
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0072C8);
    }
  }
}

uint64_t sub_24102BE24()
{
  return sub_241015D90(&qword_26B0072C0, (void (*)(uint64_t))sub_24102BDBC);
}

void sub_24102BE58()
{
  if (!qword_26B005A40)
  {
    sub_241020840(255, (unint64_t *)&qword_26B004160);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005A40);
    }
  }
}

void sub_24102BED0()
{
  if (!qword_26B005A30)
  {
    sub_241020840(255, &qword_26B004140);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005A30);
    }
  }
}

uint64_t sub_24102BF48(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24102B488(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24102BF8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_241024708(255, (unint64_t *)&qword_26B007340);
    _OWORD v11[2] = a4();
    v11[3] = sub_24102A8F8();
    unint64_t v9 = a5(a1, v11);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24102C03C()
{
  if (!qword_26B0059D0)
  {
    sub_24102B660();
    sub_241017EE8(&qword_26B0072D0, (void (*)(uint64_t))sub_24102B660);
    unint64_t v0 = sub_24115FBE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0059D0);
    }
  }
}

void sub_24102C0D0()
{
  if (!qword_26B005980)
  {
    sub_241023CC0(255, &qword_26B005D00, (uint64_t)&type metadata for MedicationShareableData, MEMORY[0x263F8D488]);
    sub_24102AEBC();
    unint64_t v0 = sub_24115FBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005980);
    }
  }
}

void sub_24102C174()
{
  if (!qword_26B005978)
  {
    sub_241023CC0(255, &qword_26B005D00, (uint64_t)&type metadata for MedicationShareableData, MEMORY[0x263F8D488]);
    sub_241020840(255, (unint64_t *)&qword_26B0073B0);
    sub_24102AEBC();
    unint64_t v0 = sub_24115FBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005978);
    }
  }
}

void sub_24102C234()
{
  if (!qword_26B005948)
  {
    sub_24102C03C();
    sub_24102A8B8();
    sub_241017EE8(&qword_26B0059C8, (void (*)(uint64_t))sub_24102C03C);
    sub_241017EE8((unint64_t *)&qword_26B007330, (void (*)(uint64_t))sub_24102A8B8);
    unint64_t v0 = sub_24115FBB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005948);
    }
  }
}

void sub_24102C320()
{
  if (!qword_26B005938)
  {
    sub_24102CFC0();
    sub_241024708(255, (unint64_t *)&qword_26B007340);
    sub_241015D90(&qword_26B0057C0, (void (*)(uint64_t))sub_24102CFC0);
    sub_24102A8F8();
    unint64_t v0 = sub_24115FBB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005938);
    }
  }
}

unint64_t sub_24102C3EC()
{
  unint64_t result = qword_26B005920;
  if (!qword_26B005920)
  {
    sub_24102BF8C(255, &qword_26B005928, (uint64_t (*)(uint64_t))sub_24102D068, sub_24102D09C, MEMORY[0x263EFDC40]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005920);
  }
  return result;
}

void sub_24102C488()
{
  if (!qword_26B005918)
  {
    sub_24102C174();
    sub_24102DAA4();
    sub_241029BA0(&qword_26B005970, (void (*)(uint64_t))sub_24102C174);
    sub_241029BA0(&qword_26B005680, (void (*)(uint64_t))sub_24102DAA4);
    unint64_t v0 = sub_24115FBA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005918);
    }
  }
}

uint64_t sub_24102C574()
{
  return sub_241029BA0(&qword_26B005910, (void (*)(uint64_t))sub_24102C488);
}

void sub_24102C5A8()
{
  if (!qword_26B005908)
  {
    sub_241044C64();
    sub_241160CD0();
    sub_241019D40(&qword_26B0055B0, (void (*)(uint64_t))sub_241044C64);
    sub_241019D40(&qword_26B005E20, MEMORY[0x263F44AB8]);
    unint64_t v0 = sub_24115FBA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005908);
    }
  }
}

uint64_t sub_24102C694()
{
  return sub_241019D40(&qword_26B005900, (void (*)(uint64_t))sub_24102C5A8);
}

void sub_24102C6C8()
{
  if (!qword_26B0058F8)
  {
    sub_24112EDE0();
    sub_241160CD0();
    sub_241010110(&qword_26B005580, (void (*)(uint64_t))sub_24112EDE0);
    sub_241010110(&qword_26B005E20, MEMORY[0x263F44AB8]);
    unint64_t v0 = sub_24115FBA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0058F8);
    }
  }
}

uint64_t sub_24102C7B4()
{
  return sub_241010110(&qword_26B0058F0, (void (*)(uint64_t))sub_24102C6C8);
}

void sub_24102C7E8()
{
  if (!qword_26B0058D8)
  {
    sub_241029BE8(255, &qword_26B005B50, (uint64_t (*)(uint64_t))sub_241020918, MEMORY[0x263EFDCF0]);
    sub_24101CD40(255, &qword_26B005878, (void (*)(uint64_t))sub_24102C488, (void (*)(void))sub_24102C574);
    sub_241029CF4(&qword_26B005B48, &qword_26B005B50, (uint64_t (*)(uint64_t))sub_241020918);
    sub_24102CB04();
    unint64_t v0 = sub_24115FBA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0058D8);
    }
  }
}

uint64_t sub_24102C8F4()
{
  return sub_241029BA0(&qword_26B0058D0, (void (*)(uint64_t))sub_24102C7E8);
}

void sub_24102C928()
{
  if (!qword_26B0058C8)
  {
    sub_241029BE8(255, &qword_26B005B30, (uint64_t (*)(uint64_t))sub_24102AD24, MEMORY[0x263EFDCF0]);
    sub_241029C74(255, &qword_26B005578, (uint64_t (*)(uint64_t))sub_24102B6C8, sub_24102B6FC, MEMORY[0x263F459F0]);
    sub_241029CF4(&qword_26B005B28, &qword_26B005B30, (uint64_t (*)(uint64_t))sub_24102AD24);
    sub_24102E4D8();
    unint64_t v0 = sub_24115FBA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0058C8);
    }
  }
}

void sub_24102CA48()
{
  if (!qword_26B0058B8)
  {
    sub_24102BA7C();
    sub_24102D20C();
    sub_24102BB2C();
    sub_241029BA0(&qword_26B005770, (void (*)(uint64_t))sub_24102D20C);
    unint64_t v0 = sub_24115FBA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0058B8);
    }
  }
}

unint64_t sub_24102CB04()
{
  unint64_t result = qword_26B005870;
  if (!qword_26B005870)
  {
    sub_24101CD40(255, &qword_26B005878, (void (*)(uint64_t))sub_24102C488, (void (*)(void))sub_24102C574);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005870);
  }
  return result;
}

unint64_t sub_24102CB8C()
{
  unint64_t result = qword_26B005840;
  if (!qword_26B005840)
  {
    sub_241029C74(255, &qword_26B005848, (uint64_t (*)(uint64_t))sub_24102C7E8, sub_24102C8F4, MEMORY[0x263EFDC10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005840);
  }
  return result;
}

void sub_24102CC28()
{
  if (!qword_26B005828)
  {
    sub_241029C74(255, &qword_26B005848, (uint64_t (*)(uint64_t))sub_24102C7E8, sub_24102C8F4, MEMORY[0x263EFDC10]);
    sub_24102B034(255);
    sub_24102CB8C();
    unint64_t v0 = sub_24115FB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005828);
    }
  }
}

void sub_24102CCE8()
{
  if (!qword_26B005818)
  {
    sub_24102D318();
    sub_24102AF9C(255, &qword_26B005CA8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_241017EA0(&qword_26B005760, (void (*)(uint64_t))sub_24102D318);
    unint64_t v0 = sub_24115FB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005818);
    }
  }
}

void sub_24102CDB8()
{
  if (!qword_26B005808)
  {
    sub_24102E9B8();
    sub_24102B068(255);
    sub_241017EA0(&qword_26B005498, (void (*)(uint64_t))sub_24102E9B8);
    unint64_t v0 = sub_24115FB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005808);
    }
  }
}

void sub_24102CE64()
{
  if (!qword_26B0057E8)
  {
    sub_24102EA58();
    sub_24100D8D8(&qword_26B005488, (void (*)(uint64_t))sub_24102EA58);
    unint64_t v0 = sub_24115FB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0057E8);
    }
  }
}

void sub_24102CEF8()
{
  if (!qword_26B0057D8)
  {
    sub_24102EB40();
    sub_241014B4C(&qword_26B005478, (void (*)(uint64_t))sub_24102EB40);
    unint64_t v0 = sub_24115FB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0057D8);
    }
  }
}

uint64_t sub_24102CF8C()
{
  return sub_241014B4C(&qword_26B0057D0, (void (*)(uint64_t))sub_24102CEF8);
}

void sub_24102CFC0()
{
  if (!qword_26B0057C8)
  {
    sub_24102EC08(255, &qword_26B005470, (uint64_t (*)(uint64_t))sub_24102BDBC, sub_24102BE24, MEMORY[0x263EFDA00]);
    sub_24105003C();
    unint64_t v0 = sub_24115FB70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0057C8);
    }
  }
}

void sub_24102D068(uint64_t a1)
{
}

uint64_t sub_24102D09C()
{
  return sub_241019D40(&qword_26B0057A0, sub_24102D068);
}

uint64_t sub_24102D0D0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24102D548(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24102D120()
{
  if (!qword_26B005788)
  {
    sub_24102CCE8();
    sub_24102BB60();
    sub_241017EA0(&qword_26B005810, (void (*)(uint64_t))sub_24102CCE8);
    sub_241017EA0(&qword_26B005AA8, (void (*)(uint64_t))sub_24102BB60);
    unint64_t v0 = sub_24115FB60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005788);
    }
  }
}

void sub_24102D20C()
{
  if (!qword_26B005778)
  {
    sub_24102CC28();
    sub_241029BE8(255, &qword_26B005A80, (uint64_t (*)(uint64_t))sub_24102B034, MEMORY[0x263EFDCF0]);
    sub_241029BA0(&qword_26B005820, (void (*)(uint64_t))sub_24102CC28);
    sub_241029CF4(&qword_26B005A78, &qword_26B005A80, (uint64_t (*)(uint64_t))sub_24102B034);
    unint64_t v0 = sub_24115FB60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005778);
    }
  }
}

void sub_24102D318()
{
  if (!qword_26B005768)
  {
    sub_24102CDB8();
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_24102BC84(255, &qword_26B005A70, MEMORY[0x263EFDCF0]);
    sub_241017EA0(&qword_26B005800, (void (*)(uint64_t))sub_24102CDB8);
    sub_24102BD78((unint64_t *)&qword_26B005A68, &qword_26B005A70, v0);
    unint64_t v1 = sub_24115FB60();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B005768);
    }
  }
}

unint64_t sub_24102D424()
{
  unint64_t result = qword_26B005740;
  if (!qword_26B005740)
  {
    sub_24102EC08(255, &qword_26B005748, (uint64_t (*)(uint64_t))sub_24102D630, sub_24102D6D0, MEMORY[0x263EFDB60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005740);
  }
  return result;
}

unint64_t sub_24102D4C0()
{
  unint64_t result = qword_26B005730;
  if (!qword_26B005730)
  {
    sub_241019D88(255, &qword_26B005738, (void (*)(uint64_t))sub_24102D704, (void (*)(void))sub_24102D7B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005730);
  }
  return result;
}

void sub_24102D548(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_24102B3BC(255, (unint64_t *)&qword_26B005B10, MEMORY[0x263EFDCF0]);
    a4();
    sub_24102B444(&qword_26B005B08, (unint64_t *)&qword_26B005B10, v6);
    unint64_t v7 = sub_24115FB60();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_24102D630()
{
  if (!qword_26B005718)
  {
    sub_241160CD0();
    sub_241015D90(&qword_26B005E20, MEMORY[0x263F44AB8]);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005718);
    }
  }
}

uint64_t sub_24102D6D0()
{
  return sub_241015D90(&qword_26B005710, (void (*)(uint64_t))sub_24102D630);
}

void sub_24102D704()
{
  if (!qword_26B0056F8)
  {
    sub_241160CC0();
    sub_24101AEF4(255, (unint64_t *)&unk_26B007220, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
    sub_24102AC90();
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0056F8);
    }
  }
}

uint64_t sub_24102D7B0()
{
  return sub_241019D40(&qword_26B0056F0, (void (*)(uint64_t))sub_24102D704);
}

void sub_24102D7E4()
{
  if (!qword_26B0056D8)
  {
    sub_24102C234();
    sub_24102F7E0();
    sub_241017EE8(&qword_26B005940, (void (*)(uint64_t))sub_24102C234);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0056D8);
    }
  }
}

void sub_24102D890()
{
  if (!qword_26B0056C8)
  {
    sub_24102C320();
    sub_241020840(255, &qword_26B004140);
    sub_241015D90(&qword_26B005930, (void (*)(uint64_t))sub_24102C320);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0056C8);
    }
  }
}

void sub_24102D94C()
{
  if (!qword_26B0056B8)
  {
    sub_24102CE64();
    sub_241020840(255, (unint64_t *)&qword_26B004160);
    sub_24100D8D8(&qword_26B0057E0, (void (*)(uint64_t))sub_24102CE64);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0056B8);
    }
  }
}

void sub_24102DA08()
{
  if (!qword_26B005698)
  {
    sub_24102E6A4();
    sub_24100C1A4(&qword_26B005510, (void (*)(uint64_t))sub_24102E6A4);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005698);
    }
  }
}

void sub_24102DAA4()
{
  if (!qword_26B005688)
  {
    sub_24102C928();
    sub_241023CC0(255, &qword_26B005D00, (uint64_t)&type metadata for MedicationShareableData, MEMORY[0x263F8D488]);
    sub_241029BA0(&qword_26B0058C0, (void (*)(uint64_t))sub_24102C928);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005688);
    }
  }
}

void sub_24102DB74()
{
  if (!qword_26B005658)
  {
    sub_241029BE8(255, &qword_26B005B20, (uint64_t (*)(uint64_t))sub_2410E6AAC, MEMORY[0x263EFDCF0]);
    sub_24102AD24();
    sub_241029CF4(&qword_26B005B18, &qword_26B005B20, (uint64_t (*)(uint64_t))sub_2410E6AAC);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005658);
    }
  }
}

void sub_24102DC40()
{
  if (!qword_26B005648)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_24102B3BC(255, (unint64_t *)&qword_26B005B10, MEMORY[0x263EFDCF0]);
    sub_24102B7C4(255, &qword_26B005AF0, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263EFDCF0]);
    sub_24102B444(&qword_26B005B08, (unint64_t *)&qword_26B005B10, v0);
    unint64_t v1 = sub_24115FB50();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B005648);
    }
  }
}

void sub_24102DD38()
{
  if (!qword_26B005638)
  {
    sub_24102B730();
    sub_24102B8A8(255, &qword_26B005AE0, MEMORY[0x263EFDCF0]);
    sub_241019D40(&qword_26B005B08, (void (*)(uint64_t))sub_24102B730);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005638);
    }
  }
}

void sub_24102DE00()
{
  if (!qword_26B005618)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_24102B7C4(255, &qword_26B005AF0, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263EFDCF0]);
    sub_241020840(255, (unint64_t *)&qword_26B004160);
    sub_24102B850(&qword_26B005AE8, &qword_26B005AF0, v0);
    unint64_t v1 = sub_24115FB50();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B005618);
    }
  }
}

void sub_24102DEEC()
{
  if (!qword_26B0038B0)
  {
    sub_24102B8A8(255, &qword_26B005AE0, MEMORY[0x263EFDCF0]);
    sub_241020840(255, (unint64_t *)&qword_26B004160);
    sub_24102B93C();
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0038B0);
    }
  }
}

void sub_24102DF94()
{
  if (!qword_26B005608)
  {
    sub_24102BBEC();
    sub_2410268CC(255, &qword_26B005CC0, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    sub_24100EFCC(&qword_26B005A88, (void (*)(uint64_t))sub_24102BBEC);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005608);
    }
  }
}

void sub_24102E070()
{
  if (!qword_26B0055F8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_24102B488(255, &qword_26B005A10, MEMORY[0x263EFDCF0]);
    sub_24102B730();
    sub_24102BF48(&qword_26B005A08, &qword_26B005A10, v0);
    unint64_t v1 = sub_24115FB50();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B0055F8);
    }
  }
}

void sub_24102E13C()
{
  if (!qword_26B0055E8)
  {
    sub_24102B730();
    sub_24102E070();
    sub_241019D40(&qword_26B005B08, (void (*)(uint64_t))sub_24102B730);
    sub_241019D40(&qword_26B0055F0, (void (*)(uint64_t))sub_24102E070);
    unint64_t v0 = sub_24115FB30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0055E8);
    }
  }
}

void sub_24102E228()
{
  if (!qword_26B0055D8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_24102B7C4(255, &qword_26B005AF0, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263EFDCF0]);
    sub_24102DC40();
    sub_24102B850(&qword_26B005AE8, &qword_26B005AF0, v0);
    sub_241010110(&qword_26B005640, (void (*)(uint64_t))sub_24102DC40);
    unint64_t v1 = sub_24115FB30();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B0055D8);
    }
  }
}

void sub_24102E344()
{
  if (!qword_26B0055C8)
  {
    sub_24102B8A8(255, &qword_26B005AE0, MEMORY[0x263EFDCF0]);
    sub_24102DD38();
    sub_24102B93C();
    sub_241019D40(&qword_26B005630, (void (*)(uint64_t))sub_24102DD38);
    unint64_t v0 = sub_24115FB30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0055C8);
    }
  }
}

void sub_24102E41C()
{
  if (!qword_26B005598)
  {
    sub_24102DF94();
    sub_24102A354();
    sub_24100EFCC(&qword_26B005600, (void (*)(uint64_t))sub_24102DF94);
    unint64_t v0 = sub_24115FB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005598);
    }
  }
}

unint64_t sub_24102E4D8()
{
  unint64_t result = qword_26B005570;
  if (!qword_26B005570)
  {
    sub_241029C74(255, &qword_26B005578, (uint64_t (*)(uint64_t))sub_24102B6C8, sub_24102B6FC, MEMORY[0x263F459F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005570);
  }
  return result;
}

void sub_24102E574()
{
  if (!qword_26B005568)
  {
    sub_24102D120();
    sub_241017EA0(&qword_26B005780, (void (*)(uint64_t))sub_24102D120);
    unint64_t v0 = sub_24115FB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005568);
    }
  }
}

unint64_t sub_24102E608()
{
  unint64_t result = qword_26B005530;
  if (!qword_26B005530)
  {
    sub_241029C74(255, &qword_26B005538, (uint64_t (*)(uint64_t))sub_24102BA7C, sub_24102BB2C, MEMORY[0x263EFDAA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005530);
  }
  return result;
}

void sub_24102E6A4()
{
  if (!qword_26B005518)
  {
    sub_24104D35C();
    sub_24102B528();
    sub_24100C1A4(&qword_26B005998, (void (*)(uint64_t))sub_24104D35C);
    sub_24100C1A4(&qword_26B005B78, (void (*)(uint64_t))sub_24102B528);
    unint64_t v0 = sub_24115FAF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005518);
    }
  }
}

void sub_24102E790()
{
  if (!qword_26B005508)
  {
    sub_2410FE56C();
    sub_24102D7E4();
    sub_241017EE8(&qword_26B005960, (void (*)(uint64_t))sub_2410FE56C);
    sub_241017EE8(&qword_26B0056D0, (void (*)(uint64_t))sub_24102D7E4);
    unint64_t v0 = sub_24115FAF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005508);
    }
  }
}

void sub_24102E87C()
{
  if (!qword_26B0054F8)
  {
    sub_2410500D8();
    sub_24102D890();
    sub_241015D90(&qword_26B005950, (void (*)(uint64_t))sub_2410500D8);
    sub_241015D90(&qword_26B0056C0, (void (*)(uint64_t))sub_24102D890);
    unint64_t v0 = sub_24115FAF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0054F8);
    }
  }
}

uint64_t sub_24102E968(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241014BF8(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24102E9B8()
{
  if (!qword_26B0054A0)
  {
    sub_24102B660();
    sub_241017EA0(&qword_26B0072D0, (void (*)(uint64_t))sub_24102B660);
    unint64_t v0 = sub_24115FA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0054A0);
    }
  }
}

void sub_24102EA58()
{
  if (!qword_26B005490)
  {
    sub_24102B660();
    sub_24102B5F8();
    sub_24100D8D8(&qword_26B0072D0, (void (*)(uint64_t))sub_24102B660);
    sub_24100D8D8(&qword_26B005B58, (void (*)(uint64_t))sub_24102B5F8);
    unint64_t v0 = sub_24115FA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005490);
    }
  }
}

void sub_24102EB40()
{
  if (!qword_26B005480)
  {
    sub_24102B9B0();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F45D68];
    sub_241014B94(255, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68]);
    sub_24102BA48();
    sub_241015FA0(&qword_26B0072C0, (unint64_t *)&qword_26B0072C8, v0);
    unint64_t v1 = sub_24115FA90();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B005480);
    }
  }
}

void sub_24102EC08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = (uint64_t (*)(void, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_24102B590(255, &qword_26B005B70, MEMORY[0x263EFDCF0]);
    v14[0] = v9;
    v14[1] = v11;
    void v14[2] = a4();
    v14[3] = sub_24102B378(&qword_26B005B68, &qword_26B005B70, v10);
    unint64_t v12 = a5(a1, v14);
    if (!v13) {
      atomic_store(v12, a2);
    }
  }
}

uint64_t sub_24102ECF8(uint64_t a1, uint64_t a2)
{
  sub_241023ADC(0, &qword_26B005460, MEMORY[0x263F90210], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MedicationHighlightsGeneratorPipeline()
{
  uint64_t result = qword_26B005358;
  if (!qword_26B005358) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24102EDD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin37MedicationHighlightsGeneratorPipeline_domain;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SharableModelContextChangeGenerator()
{
  return self;
}

uint64_t sub_24102EE74@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24101CEB4(a1, *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for CHRAddAccountGeneratorPipeline()
{
  uint64_t result = qword_26B0050D0;
  if (!qword_26B0050D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24102EEC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_domain;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CHRAddAccountDataProvider()
{
  return self;
}

uint64_t type metadata accessor for CHRAddAccountGenerator()
{
  uint64_t result = qword_26B004E30;
  if (!qword_26B004E30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24102EFB4(uint64_t a1)
{
  return sub_241011D20(a1);
}

uint64_t type metadata accessor for MedicationsNotificationSettingsGeneratorPipeline(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B004D60);
}

uint64_t sub_24102EFF8()
{
  return swift_retain();
}

uint64_t sub_24102F00C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin48MedicationsNotificationSettingsGeneratorPipeline_domain;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MedicationsLoggingSummaryGeneratorPipeline()
{
  uint64_t result = qword_26B004C98;
  if (!qword_26B004C98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24102F0D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin42MedicationsLoggingSummaryGeneratorPipeline_domain;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MedicationsOnboardingGeneratorPipeline()
{
  uint64_t result = qword_26B004BC8;
  if (!qword_26B004BC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24102F194@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsOnboardingGeneratorPipeline_domain;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MedicationsCategoryGeneratorPipeline(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B004B08);
}

uint64_t sub_24102F22C()
{
  return swift_retain();
}

uint64_t sub_24102F240@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationsCategoryGeneratorPipeline_domain;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MedicationsShareableModelGenerator()
{
  uint64_t result = qword_26B004A18;
  if (!qword_26B004A18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24102F304(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_24102F30C(uint64_t a1, uint64_t a2)
{
  sub_241010158(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_24102F314@<X0>(uint64_t *a1@<X8>)
{
  return sub_24100B06C(*(void **)(v1 + 16), a1);
}

uint64_t sub_24102F31C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_241013480(a1, *(void *)(v2 + 16), v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_24102F3C8(unint64_t a1, unint64_t a2)
{
  return sub_241010614(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32));
}

uint64_t sub_24102F3D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for MedicationsGeneratorContext();

  return sub_24100B408(a1, a2);
}

uint64_t sub_24102F458@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24100EAB8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_24102F484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsShareableModelGenerator_domain;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MedicationsShareableModelPipeline()
{
  uint64_t result = qword_26B004938;
  if (!qword_26B004938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24102F548()
{
  unint64_t result = qword_26B004930;
  if (!qword_26B004930)
  {
    type metadata accessor for MedicationsShareableModelPipeline();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004930);
  }
  return result;
}

uint64_t sub_24102F5A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsShareableModelPipeline_domain;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_24102F618()
{
  unint64_t result = qword_26B007258;
  if (!qword_26B007258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B007258);
  }
  return result;
}

unint64_t sub_24102F66C()
{
  unint64_t result = qword_26B007250;
  if (!qword_26B007250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B007250);
  }
  return result;
}

uint64_t type metadata accessor for SharedMedicationsFeedItemPipeline()
{
  uint64_t result = qword_26B004390;
  if (!qword_26B004390) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24102F70C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33SharedMedicationsFeedItemPipeline_domain;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_24102F784()
{
  if (!qword_26B004188)
  {
    sub_2410555B4();
    unint64_t v0 = sub_24115EF40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B004188);
    }
  }
}

unint64_t sub_24102F7E0()
{
  unint64_t result = qword_26B004160;
  if (!qword_26B004160)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B004160);
  }
  return result;
}

unint64_t sub_24102F838()
{
  unint64_t result = qword_26B004100;
  if (!qword_26B004100)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B004100);
  }
  return result;
}

uint64_t sub_24102F890(char a1)
{
  LOBYTE(v1) = a1;
  uint64_t v2 = sub_24115E9F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241032AA0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(_BYTE)v1) {
    return v1;
  }
  uint64_t v9 = sub_24115CB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_24115E9E0();
  uint64_t v1 = sub_24115EF20();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_241032AF8((uint64_t)v8);
  return v1;
}

BOOL sub_24102FACC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t *sub_24102FAE0@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_24102FAF8(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_24102FB04(void *a1@<X8>)
{
  *a1 = &unk_26F554908;
}

uint64_t sub_24102FB14()
{
  return sub_2411619A0();
}

uint64_t sub_24102FB5C()
{
  return sub_241161960();
}

uint64_t sub_24102FB88()
{
  return sub_2411619A0();
}

uint64_t sub_24102FBCC(void *a1, char a2)
{
  sub_241161950();
  if (a2)
  {
    sub_241160830();
    if (a2 == 1) {
      sub_241161960();
    }
  }
  else
  {
    id v4 = objc_msgSend(a1, sel_semanticIdentifier);
    sub_2411612F0();
    sub_241030DA8(a1, 0);
  }
  return sub_2411619A0();
}

uint64_t sub_24102FCA0()
{
  return sub_24102FBCC(*(void **)v0, *(unsigned char *)(v0 + 8));
}

void sub_24102FCAC()
{
  uint64_t v1 = *(void **)v0;
  if (*(unsigned char *)(v0 + 8))
  {
    if (*(unsigned char *)(v0 + 8) == 1)
    {
      sub_241160830();
      sub_241161960();
    }
    else
    {
      sub_241160830();
    }
  }
  else
  {
    id v2 = objc_msgSend(v1, sel_semanticIdentifier);
    sub_2411612F0();
    sub_241030DA8(v1, 0);
  }
}

uint64_t sub_24102FDBC()
{
  uint64_t v1 = *(void **)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_241161950();
  if (v2)
  {
    sub_241160830();
    if (v2 == 1) {
      sub_241161960();
    }
  }
  else
  {
    id v3 = objc_msgSend(v1, sel_semanticIdentifier);
    sub_2411612F0();
    sub_241030DA8(v1, 0);
  }
  return sub_2411619A0();
}

BOOL sub_24102FE88(uint64_t a1, uint64_t a2)
{
  return sub_241031F84(*(void **)a1, *(unsigned char *)(a1 + 8), *(void **)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_24102FEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24115CE00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24115CDF0();
  uint64_t result = sub_24115CDF0();
  if (v12 == result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
    uint64_t v14 = sub_24115CDF0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (v14 == 1)
    {
      sub_241032B64();
      unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24115FA60();
      uint64_t result = v15(a1, a2, a3);
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v4 + qword_268CF03D0);
      if (v16)
      {
        swift_retain();
        v16(a2, a3);
        return sub_241032B54((uint64_t)v16);
      }
    }
  }
  return result;
}

uint64_t sub_241030048(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_24115CE00();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v16 - v10;
  sub_24115CDA0();
  sub_24115CDA0();
  id v12 = a3;
  id v13 = a1;
  sub_24102FEA0((uint64_t)v12, (uint64_t)v11, (uint64_t)v9);

  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
}

BOOL sub_241030194(uint64_t a1, uint64_t a2)
{
  return sub_241032064(a2);
}

uint64_t sub_24103019C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_241030540(a1, a2, a3, a4, (uint64_t (*)(char *))sub_241032064);
}

uint64_t sub_2410301B4()
{
  return 3;
}

uint64_t sub_2410301BC()
{
  return 3;
}

uint64_t sub_2410301C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_24115E9F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241032AA0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 2 || (uint64_t v10 = 0, a2 == 1))
  {
    uint64_t v11 = sub_24115CB90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
    sub_24115E9E0();
    uint64_t v10 = sub_24115EF20();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_241032AF8((uint64_t)v9);
  }
  return v10;
}

id sub_241030404(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 <= 2 && (sub_24102F890(a4), v4))
  {
    uint64_t v5 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

uint64_t sub_241030464(uint64_t a1, uint64_t a2)
{
  return sub_24103229C(a2);
}

id sub_24103046C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24103229C(a4);
  if (v4)
  {
    uint64_t v5 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

uint64_t sub_2410304C4(uint64_t a1, uint64_t a2)
{
  return sub_241032460(a2);
}

uint64_t sub_2410304CC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  uint64_t v8 = sub_241032460(a4);

  return v8;
}

uint64_t sub_241030520(uint64_t a1, uint64_t a2)
{
  return sub_2410326FC(a2);
}

uint64_t sub_241030528(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_241030540(a1, a2, a3, a4, (uint64_t (*)(char *))sub_2410326FC);
}

uint64_t sub_241030540(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v8 = sub_24115CE00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115CDA0();
  id v12 = a3;
  id v13 = a1;
  LOBYTE(a5) = a5(v11);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return a5 & 1;
}

uint64_t sub_241030650()
{
  uint64_t v1 = v0 + qword_268CF2780;
  uint64_t v2 = sub_24115F6B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(void *)(v0 + qword_268CF03D0);

  return sub_241032B54(v3);
}

id sub_2410306D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ListEditTableDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241030708(uint64_t a1)
{
  uint64_t v2 = a1 + qword_268CF2780;
  uint64_t v3 = sub_24115F6B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = *(void *)(a1 + qword_268CF03D0);

  return sub_241032B54(v4);
}

void sub_24103078C()
{
}

id variable initialization expression of MedicationRoomOnboardingTileViewController.imageSizeConfig()
{
  sub_241024708(0, &qword_26B007000);
  uint64_t v0 = (void *)sub_2411611F0();
  id v1 = objc_msgSend(self, sel_configurationWithFont_, v0);

  return v1;
}

id variable initialization expression of MedicationRoomOnboardingTileViewController.hierarchicalColorConfig()
{
  id v0 = objc_msgSend(self, sel_systemCyanColor);
  id v1 = objc_msgSend(self, sel_configurationWithHierarchicalColor_, v0);

  return v1;
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.$__lazy_storage_$_listManager()
{
  return 0;
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.coreMedsShardStateCancellable()
{
  return 0;
}

id variable initialization expression of MedicationRoomOnboardingTileViewController.localeSupportsOntology()
{
  return objc_msgSend(self, sel_supportsOntologyBackedMedications);
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.baseIdentifier()
{
  uint64_t v1 = sub_241160730();
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.$__lazy_storage_$_bulletOne()
{
  return 0;
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.$__lazy_storage_$_bulletTwo()
{
  return 0;
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.$__lazy_storage_$_bulletThree()
{
  return 0;
}

uint64_t variable initialization expression of MedicationRoomOnboardingTileViewController.$__lazy_storage_$_bulletFour()
{
  return 0;
}

uint64_t variable initialization expression of MedicationCategoryViewController.cancellables()
{
  return MEMORY[0x263F8EE88];
}

uint64_t variable initialization expression of MedicationListCompactDataSource.viewController()
{
  return 0;
}

uint64_t variable initialization expression of MedicationListCompactDataSource.$__lazy_storage_$_ontologyStore()
{
  return 0;
}

uint64_t variable initialization expression of MedicationListCompactDataSource.$__lazy_storage_$_itemsPublisher()
{
  return 0;
}

uint64_t variable initialization expression of FollowUpNotificationTipDataSource.listManagerCancellable()
{
  return 0;
}

uint64_t variable initialization expression of ExpiringScheduleDataSource.expiringSchedulesSubscription()
{
  return 0;
}

uint64_t variable initialization expression of TipDataSource.viewController()
{
  return 0;
}

uint64_t variable initialization expression of ArchivedMedicationsListDataSource.$__lazy_storage_$_itemsPublisher()
{
  return 0;
}

id variable initialization expression of InteractiveTimelineViewController.focusIndicatorImageView()
{
  if (qword_26B007020 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_26B00BC58;
  id v1 = objc_allocWithZone(MEMORY[0x263F82828]);
  id v2 = v0;
  id v3 = objc_msgSend(v1, sel_initWithImage_, v2);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v4 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v3, sel_setTintColor_, v4);

  return v3;
}

uint64_t variable initialization expression of InteractiveTimelineViewController.$__lazy_storage_$_timelineViewController()
{
  return 0;
}

uint64_t variable initialization expression of InteractiveTimelineViewController.dateIndicator()
{
  return 0;
}

uint64_t variable initialization expression of InteractiveTimelineViewController.timelineHeight()
{
  return 0;
}

uint64_t variable initialization expression of LocalScheduleUnavailableDataSource.cancellables()
{
  return MEMORY[0x263F8EE88];
}

uint64_t variable initialization expression of LoggingBaseFeedItemViewController.feedItemData@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1, a1);
}

uint64_t variable initialization expression of LoggingBaseFeedItemViewController.$__lazy_storage_$_decoder()
{
  return 0;
}

double variable initialization expression of LoggingBaseFeedItemViewController.context@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of TimeZoneDataSource.timeZoneChangeSubscription()
{
  return 0;
}

uint64_t variable initialization expression of TimeZoneDataSource.notificationManager()
{
  return sub_24115CE90();
}

uint64_t variable initialization expression of RemoteScheduleUnavailableDataSource.cancellables()
{
  return MEMORY[0x263F8EE88];
}

uint64_t type metadata accessor for ListEditTableDataSource()
{
  uint64_t result = qword_268CF03D8;
  if (!qword_268CF03D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241030BCC()
{
  uint64_t result = sub_24115F6B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241030C6C()
{
  return type metadata accessor for ListEditTableDataSource();
}

void type metadata accessor for HKTimeScope(uint64_t a1)
{
}

__n128 initializeWithTake for MedicationDoseEventDetails(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_241030CA8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_241030CC8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for HKMedicationRoomProvenance(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for EditListCellModel(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_241030D88(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_241030D88(id result, char a2)
{
  if (!a2) {
    return result;
  }
  return result;
}

void destroy for EditListCellModel(uint64_t a1)
{
}

void sub_241030DA8(id a1, char a2)
{
  if (!a2) {
}
  }

uint64_t assignWithCopy for EditListCellModel(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_241030D88(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_241030DA8(v5, v6);
  return a1;
}

uint64_t initializeWithTake for EditListCellModel(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t assignWithTake for EditListCellModel(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_241030DA8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for EditListCellModel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EditListCellModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_241030EEC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_241030F04(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EditListCellModel()
{
  return &type metadata for EditListCellModel;
}

unsigned char *initializeBufferWithCopyOfBuffer for Section(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Section(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Section(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241031094);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_2410310BC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2410310C4(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Section()
{
  return &type metadata for Section;
}

void type metadata accessor for HKMedicationFreeTextLoggingUnitCode(uint64_t a1)
{
}

void type metadata accessor for HKMedicationFreeTextFormTypeCode(uint64_t a1)
{
}

uint64_t sub_24103112C()
{
  return sub_241031708(&qword_268CF0460, type metadata accessor for HKMedicationFreeTextFormTypeCode);
}

void *sub_241031174@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_241031188(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_2410311B8(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_2410311CC(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_2410311E0(uint64_t a1, uint64_t a2)
{
  return sub_241031614(a1, a2, MEMORY[0x263F8E7C8]);
}

uint64_t sub_2410311F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24103166C(a1, a2, a3, MEMORY[0x263F8E7C8]);
}

uint64_t sub_241031210(uint64_t a1, uint64_t a2)
{
  return sub_241031D88(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_241031234(uint64_t a1, uint64_t a2)
{
  return sub_241031D88(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_241031254()
{
  return sub_241161960();
}

void sub_241031280(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_241031288@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_24103129C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_2410312B0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_2410312DC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_241031300(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_241031314@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_241031328(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_24103133C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_241031350(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_241031364()
{
  return *v0 == 0;
}

uint64_t sub_241031374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_24103138C(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_2410313A0()
{
  return MEMORY[0x270EF1C48](*v0);
}

uint64_t sub_2410313A8(uint64_t a1, uint64_t a2)
{
  int v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x2456169B0](a1, &v6);
  char v4 = v7;
  int v5 = v6;
  if (v7) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_2410313FC(uint64_t a1, uint64_t a2)
{
  int v7 = 0;
  char v8 = 1;
  char v3 = MEMORY[0x2456169C0](a1, &v7);
  char v4 = v8;
  int v5 = v7;
  if (v8) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_241031454(float *a1@<X8>)
{
  *a1 = MEMORY[0x2456169D0]();
}

uint64_t sub_24103147C(uint64_t a1, id *a2)
{
  uint64_t result = sub_241160710();
  *a2 = 0;
  return result;
}

uint64_t sub_2410314F4(uint64_t a1, id *a2)
{
  char v3 = sub_241160720();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_241031574@<X0>(uint64_t *a1@<X8>)
{
  sub_241160730();
  uint64_t v2 = sub_2411606F0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2410315B8(uint64_t a1, uint64_t a2)
{
  return sub_241031614(a1, a2, MEMORY[0x263F8E7D0]);
}

uint64_t sub_2410315D0()
{
  return sub_241161990();
}

uint64_t sub_2410315FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24103166C(a1, a2, a3, MEMORY[0x263F8E7D0]);
}

uint64_t sub_241031614(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_241161950();
  a3(v5);
  return sub_2411619A0();
}

uint64_t sub_24103166C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_241161950();
  a4(v6);
  return sub_2411619A0();
}

uint64_t sub_2410316C0()
{
  return sub_241031708(&qword_268CF0468, type metadata accessor for HKMedicationFreeTextLoggingUnitCode);
}

uint64_t sub_241031708(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241031754()
{
  unint64_t result = qword_268CF0470;
  if (!qword_268CF0470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0470);
  }
  return result;
}

unint64_t sub_2410317AC()
{
  unint64_t result = qword_268CF0478;
  if (!qword_268CF0478)
  {
    sub_241033340(255, &qword_268CF0480, (uint64_t)&type metadata for Section, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0478);
  }
  return result;
}

unint64_t sub_24103182C()
{
  unint64_t result = qword_268CF0488;
  if (!qword_268CF0488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0488);
  }
  return result;
}

uint64_t sub_241031880()
{
  return sub_241031708(&qword_268CF0490, type metadata accessor for HKTimeScope);
}

BOOL sub_2410318CC(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_2410318E0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_2410318F0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_2410318FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_2410332E0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_24103193C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24103194C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_241160730();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_241031978()
{
  sub_241031708(&qword_268CF05E8, type metadata accessor for Key);
  sub_241031708((unint64_t *)&unk_268CF05F0, type metadata accessor for Key);

  return sub_241161750();
}

uint64_t sub_241031A34()
{
  sub_241031708(&qword_268CF0588, type metadata accessor for HKOntologyShardIdentifier);
  sub_241031708((unint64_t *)&unk_268CF0590, type metadata accessor for HKOntologyShardIdentifier);

  return sub_241161750();
}

uint64_t sub_241031AF0()
{
  sub_241031708((unint64_t *)&unk_26B006FD0, type metadata accessor for OpenURLOptionsKey);
  sub_241031708(&qword_268CF05A0, type metadata accessor for OpenURLOptionsKey);

  return sub_241161750();
}

_DWORD *sub_241031BAC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_241031BBC@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_241031BC8()
{
  return sub_241161750();
}

uint64_t sub_241031C84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2411606F0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_241031CCC()
{
  sub_241031708(&qword_268CF05B8, type metadata accessor for OpenExternalURLOptionsKey);
  sub_241031708(&qword_268CF05C0, type metadata accessor for OpenExternalURLOptionsKey);

  return sub_241161750();
}

uint64_t sub_241031D88(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_241160730();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_241031DCC()
{
  sub_241160730();
  sub_241160830();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241031E20()
{
  sub_241160730();
  sub_241161950();
  sub_241160830();
  uint64_t v0 = sub_2411619A0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_241031E94()
{
  return MEMORY[0x270F9DE70](*v0);
}

uint64_t sub_241031E9C()
{
  return sub_241161980();
}

void sub_241031ED0()
{
}

uint64_t sub_241031EE4()
{
  uint64_t v0 = sub_241160730();
  uint64_t v2 = v1;
  if (v0 == sub_241160730() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_241161890();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_241031F70(float *a1, float *a2)
{
  return *a1 == *a2;
}

BOOL sub_241031F84(void *a1, char a2, void *a3, char a4)
{
  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 == 1) {
        return a3 == a1;
      }
    }
    else if (a4 == 2 && !a3)
    {
      return 1;
    }
  }
  else if (!a4)
  {
    sub_241024708(0, (unint64_t *)&qword_26B007218);
    sub_241030D88(a1, 0);
    sub_241030D88(a3, 0);
    char v7 = sub_2411612E0();
    sub_241030DA8(a3, 0);
    sub_241030DA8(a1, 0);
    return v7 & 1;
  }
  return 0;
}

BOOL sub_241032064(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24115F6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24115CE00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v12 = sub_24115CDF0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v12 != 1) {
    return 0;
  }
  uint64_t v13 = v2 + qword_268CF2780;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  unint64_t v14 = sub_24115F6A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v15 > 1;
}

uint64_t sub_24103229C(uint64_t a1)
{
  uint64_t v2 = sub_24115E9F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241032AA0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = 0;
  if (a1 == 2)
  {
    uint64_t v10 = sub_24115CB90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    sub_24115E9E0();
    uint64_t v9 = sub_24115EF20();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_241032AF8((uint64_t)v8);
  }
  return v9;
}

uint64_t sub_241032460(uint64_t a1)
{
  uint64_t v3 = sub_24115F6B0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v15 - v8;
  switch(a1)
  {
    case 0:
      return 1;
    case 1:
      uint64_t v10 = v1 + qword_268CF2780;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v10, v3);
      unint64_t v11 = sub_24115F6A0();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      break;
    case 2:
      uint64_t v13 = v1 + qword_268CF2780;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v13, v3);
      unint64_t v11 = sub_24115F640();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      break;
    default:
      unint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
      sub_2411615F0();
      swift_bridgeObjectRelease();
      unint64_t v15 = 0xD00000000000001FLL;
      unint64_t v16 = 0x8000000241162EA0;
      uint64_t v17 = a1;
      sub_241161850();
      sub_241160860();
      swift_bridgeObjectRelease();
      uint64_t result = sub_2411616B0();
      __break(1u);
      return result;
  }
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v14 <= 1) {
    return 1;
  }
  else {
    return v14;
  }
}

uint64_t sub_2410326FC(uint64_t a1)
{
  uint64_t v2 = sub_24115F6B0();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v28 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v28 - v5;
  uint64_t v7 = sub_24115CE00();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v30 = a1;
  v14((char *)&v28 - v12, a1, v7);
  uint64_t v15 = sub_24115CDF0();
  unint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v13, v7);
  if (v15 == 2)
  {
    uint64_t v17 = v31 + qword_268CF2780;
    swift_beginAccess();
    uint64_t v18 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v6, v17, v2);
    unint64_t v19 = sub_24115F640();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v2);
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    BOOL v21 = v20 != 0;
  }
  else
  {
    BOOL v21 = 0;
    uint64_t v18 = v29;
  }
  v14(v11, v30, v7);
  uint64_t v22 = sub_24115CDF0();
  v16(v11, v7);
  if (v22 == 1)
  {
    uint64_t v23 = v31 + qword_268CF2780;
    swift_beginAccess();
    char v24 = v28;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v28, v23, v2);
    unint64_t v25 = sub_24115F6A0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v24, v2);
    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v21) {
      return v26 != 0;
    }
    return 1;
  }
  return v21;
}

void sub_241032AA0()
{
  if (!qword_26B007200)
  {
    sub_24115CB90();
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B007200);
    }
  }
}

uint64_t sub_241032AF8(uint64_t a1)
{
  sub_241032AA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241032B54(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_241032B64()
{
  if (!qword_268CF0498)
  {
    sub_241032BE0();
    sub_241032C34();
    unint64_t v0 = sub_24115FA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0498);
    }
  }
}

unint64_t sub_241032BE0()
{
  unint64_t result = qword_268CF04A0;
  if (!qword_268CF04A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF04A0);
  }
  return result;
}

unint64_t sub_241032C34()
{
  unint64_t result = qword_268CF04A8;
  if (!qword_268CF04A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF04A8);
  }
  return result;
}

void type metadata accessor for HKDisplayCategoryIdentifier(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for HKOntologyShardIdentifier(uint64_t a1)
{
}

void type metadata accessor for OpenURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for UNNotificationPresentationOptions(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
}

void type metadata accessor for HKMedicationDoseEventStatus(uint64_t a1)
{
}

uint64_t sub_241032E18()
{
  return sub_241031708(&qword_268CF0500, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_241032E60()
{
  return sub_241031708(&qword_268CF0508, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_241032EA8()
{
  return sub_241031708(&qword_268CF0510, type metadata accessor for UILayoutPriority);
}

uint64_t sub_241032EF0()
{
  return sub_241031708(&qword_268CF0518, type metadata accessor for UILayoutPriority);
}

uint64_t sub_241032F38()
{
  return sub_241031708(&qword_268CF0520, type metadata accessor for UILayoutPriority);
}

uint64_t sub_241032F80()
{
  return sub_241031708(&qword_268CF0528, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_241032FC8()
{
  return sub_241031708(&qword_268CF0530, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_241033010()
{
  return sub_241031708(&qword_268CF0538, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_241033058()
{
  return sub_241031708(&qword_268CF0540, type metadata accessor for UNNotificationPresentationOptions);
}

uint64_t sub_2410330A0()
{
  return sub_241031708(&qword_268CF0548, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_2410330E8()
{
  return sub_241031708(&qword_268CF0550, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_241033130()
{
  return sub_241031708(&qword_268CF0558, type metadata accessor for HKOntologyShardIdentifier);
}

uint64_t sub_241033178()
{
  return sub_241031708(&qword_268CF0560, type metadata accessor for HKOntologyShardIdentifier);
}

uint64_t sub_2410331C0()
{
  return sub_241031708((unint64_t *)&unk_268CF0568, type metadata accessor for HKOntologyShardIdentifier);
}

uint64_t sub_241033208()
{
  return sub_241031708(&qword_26B006FE0, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_241033250()
{
  return sub_241031708(&qword_268CF0578, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_241033298()
{
  return sub_241031708(&qword_268CF0580, type metadata accessor for UIUserInterfaceSizeClass);
}

uint64_t sub_2410332E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void type metadata accessor for Key(uint64_t a1)
{
}

void sub_241033340(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_24103338C()
{
  return sub_241031708(&qword_268CF05D0, type metadata accessor for Key);
}

uint64_t sub_2410333D4()
{
  return sub_241031708(&qword_268CF05D8, type metadata accessor for Key);
}

uint64_t sub_24103341C()
{
  return sub_241031708(&qword_268CF05E0, type metadata accessor for Key);
}

void LoggingBaseFeedItemViewController.decoder.setter()
{
}

void *sub_2410334B8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v5 = v4;
  uint64_t v28 = a3;
  uint64_t v30 = a2;
  sub_2410346C0(0);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24115CCC0();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24103BB24();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = objc_msgSend(self, sel_weakObjectsHashTable);
  v5[2] = v15;
  v5[4] = 0;
  unint64_t v16 = (char *)v5 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
  uint64_t v17 = sub_2411605E0();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a3, v17);
  v5[5] = a4;
  id v19 = a4;
  id v29 = v19;
  id v20 = a1;
  id v21 = objc_msgSend(v19, sel_currentCalendar);
  sub_24115CC50();

  type metadata accessor for MedicationDaySummaryViewModelProviderDataSource(0);
  swift_allocObject();
  sub_2410A689C(v20, (uint64_t)v14);
  sub_24103BB90(0, &qword_26B006B48, type metadata accessor for MedicationDaySummaryViewModelProviderDataSource, sub_24103BC10, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for DailyModelProvider);
  swift_allocObject();
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_241034DEC(v22, 200, 1000);
  v5[3] = v23;
  uint64_t v31 = *((void *)v23 + 3);
  swift_allocObject();
  swift_weakInit();
  sub_24103BC4C();
  sub_2410365D8(&qword_268CF06F0, (void (*)(uint64_t))sub_24103BC4C);
  swift_retain();
  uint64_t v24 = sub_24115FF60();
  swift_release();
  swift_release();
  v5[4] = v24;
  swift_release();
  uint64_t v25 = v28;
  sub_24103405C(v11);
  sub_2410346F4(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 0, 1, v26);
  sub_24103437C((uint64_t)v11);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v25, v17);
  return v5;
}

uint64_t sub_241033874(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v1 = sub_2411605E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  unint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v31 - v6;
  sub_2410346C0(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410346F4(0);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  unint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v31 - v17;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v33 = v2;
    uint64_t v21 = *(void *)(result + 24) + *(void *)(**(void **)(result + 24) + 168);
    swift_beginAccess();
    sub_241036570(v21, (uint64_t)v10, (uint64_t (*)(void))sub_2410346C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
    {
      swift_release();
      return sub_24103B8B0((uint64_t)v10, (uint64_t (*)(void))sub_2410346C0);
    }
    sub_2410366BC((uint64_t)v10, (uint64_t)v18, (uint64_t (*)(void))sub_2410346F4);
    uint64_t v22 = v34;
    if (sub_241033D18(v34))
    {
      uint64_t v23 = *(void *)(v20 + 16);
      swift_retain();
      sub_24104D67C(v23, v20);
      swift_release();
      uint64_t v24 = v20 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
      swift_beginAccess();
      uint64_t v32 = v5;
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
      v25(v7, v24, v1);
      v31[1] = sub_24103473C();
      LOBYTE(v24) = sub_2411606C0();
      v25(v32, (uint64_t)v7, v1);
      sub_241036570(v22, (uint64_t)v16, (uint64_t (*)(void))sub_2410346F4);
      if (v24)
      {
        uint64_t v26 = v32;
        char v27 = sub_2411606A0();
        sub_24103B8B0((uint64_t)v16, (uint64_t (*)(void))sub_2410346F4);
        uint64_t v28 = *(void (**)(char *, uint64_t))(v33 + 8);
        v28(v26, v1);
        v28(v7, v1);
        if (v27)
        {
          uint64_t v29 = *(void *)(v20 + 16);
          swift_retain();
          sub_24104D8E4(v29, v20);
          swift_release_n();
          return sub_24103B8B0((uint64_t)v18, (uint64_t (*)(void))sub_2410346F4);
        }
      }
      else
      {
        sub_24103B8B0((uint64_t)v16, (uint64_t (*)(void))sub_2410346F4);
        uint64_t v30 = *(void (**)(char *, uint64_t))(v33 + 8);
        v30(v32, v1);
        v30(v7, v1);
      }
    }
    sub_24103B8B0((uint64_t)v18, (uint64_t (*)(void))sub_2410346F4);
    return swift_release();
  }
  return result;
}

uint64_t sub_241033D18(uint64_t a1)
{
  sub_2410346F4(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v23 = (uint64_t)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v22 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v22 - v12;
  sub_2411605E0();
  sub_24103473C();
  char v14 = sub_2411606C0();
  sub_241036570(v1, (uint64_t)v13, (uint64_t (*)(void))sub_2410346F4);
  sub_241036570(a1, (uint64_t)v11, (uint64_t (*)(void))sub_2410346F4);
  if (v14)
  {
    sub_24103B8B0((uint64_t)v11, (uint64_t (*)(void))sub_2410346F4);
    sub_24103B8B0((uint64_t)v13, (uint64_t (*)(void))sub_2410346F4);
    sub_241036570(v1, (uint64_t)v8, (uint64_t (*)(void))sub_2410346F4);
LABEL_4:
    sub_24103B8B0((uint64_t)v8, (uint64_t (*)(void))sub_2410346F4);
    uint64_t v16 = a1;
    uint64_t v17 = v23;
    sub_241036570(v16, v23, (uint64_t (*)(void))sub_2410346F4);
    goto LABEL_5;
  }
  char v15 = sub_2411606C0();
  sub_24103B8B0((uint64_t)v11, (uint64_t (*)(void))sub_2410346F4);
  sub_24103B8B0((uint64_t)v13, (uint64_t (*)(void))sub_2410346F4);
  sub_241036570(v1, (uint64_t)v8, (uint64_t (*)(void))sub_2410346F4);
  if (v15) {
    goto LABEL_4;
  }
  sub_2410365D8(&qword_268CF1BC0, MEMORY[0x263F090E8]);
  char v20 = sub_2411606E0();
  sub_24103B8B0((uint64_t)v8, (uint64_t (*)(void))sub_2410346F4);
  uint64_t v21 = a1;
  uint64_t v17 = v23;
  sub_241036570(v21, v23, (uint64_t (*)(void))sub_2410346F4);
  if ((v20 & 1) == 0)
  {
    char v18 = sub_2411606E0() ^ 1;
    goto LABEL_6;
  }
LABEL_5:
  char v18 = 0;
LABEL_6:
  sub_24103B8B0(v17, (uint64_t (*)(void))sub_2410346F4);
  return v18 & 1;
}

uint64_t sub_24103405C@<X0>(char *a1@<X8>)
{
  sub_241036620();
  uint64_t v3 = v2;
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v32 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v29 - v6;
  uint64_t v8 = sub_2411605E0();
  uint64_t v9 = *(void **)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  char v15 = (char *)&v29 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v29 - v16;
  sub_241160580();
  sub_241160560();
  sub_2411605C0();
  uint64_t v31 = (void (*)(char *, uint64_t))v9[1];
  v31(v12, v8);
  sub_24103473C();
  uint64_t result = sub_2411606C0();
  if (result)
  {
    id v19 = &v7[*(int *)(v3 + 48)];
    uint64_t v30 = a1;
    char v20 = (void (*)(char *, char *, uint64_t))v9[4];
    v20(v7, v17, v8);
    v20(v19, v15, v8);
    uint64_t v21 = *(int *)(v3 + 48);
    uint64_t v29 = v9 + 1;
    uint64_t v22 = v32;
    uint64_t v23 = &v32[v21];
    uint64_t v24 = (void (*)(char *, char *, uint64_t))v9[2];
    v24(v32, v7, v8);
    v24(v23, v19, v8);
    uint64_t v25 = v30;
    v20(v30, v22, v8);
    uint64_t v26 = (uint64_t (*)(char *, uint64_t))v31;
    v31(v23, v8);
    char v27 = &v22[*(int *)(v3 + 48)];
    v20(v22, v7, v8);
    v20(v27, v19, v8);
    sub_2410346F4(0);
    v20(&v25[*(int *)(v28 + 36)], v27, v8);
    return v26(v22, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24103437C(uint64_t a1)
{
  sub_2410346C0(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v12[-v7];
  uint64_t v9 = *(void *)(v1 + 24);
  sub_241036570(a1, (uint64_t)&v12[-v7], (uint64_t (*)(void))sub_2410346C0);
  uint64_t v10 = v9 + *(void *)(*(void *)v9 + 168);
  swift_beginAccess();
  sub_241036570(v10, (uint64_t)v6, (uint64_t (*)(void))sub_2410346C0);
  swift_beginAccess();
  swift_retain();
  sub_241034770((uint64_t)v8, v10);
  swift_endAccess();
  sub_241034F90((uint64_t)v6);
  sub_24103B8B0((uint64_t)v8, (uint64_t (*)(void))sub_2410346C0);
  sub_24103B8B0((uint64_t)v6, (uint64_t (*)(void))sub_2410346C0);
  swift_release();
  return sub_24103B8B0(a1, (uint64_t (*)(void))sub_2410346C0);
}

uint64_t sub_2410344F4()
{
  swift_release();
  swift_release();
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
  uint64_t v2 = sub_2411605E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2410345B4()
{
  return type metadata accessor for MedicationsTimelineDataProvider();
}

uint64_t type metadata accessor for MedicationsTimelineDataProvider()
{
  uint64_t result = qword_268CF0660;
  if (!qword_268CF0660) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241034608()
{
  uint64_t result = sub_2411605E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_2410346C0(uint64_t a1)
{
}

void sub_2410346F4(uint64_t a1)
{
}

uint64_t sub_24103473C()
{
  return sub_2410365D8(&qword_26B0039C0, MEMORY[0x263F090E8]);
}

uint64_t sub_241034770(uint64_t a1, uint64_t a2)
{
  sub_2410346C0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

int *sub_2410347D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_retain();
  unint64_t v4 = sub_24105DD38(a1);
  char v6 = v5;
  swift_release();
  if (v4 >= 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = 2 - v6;
  }
  else
  {
    sub_24103BAD4(v4);
    char v7 = 0;
  }
  uint64_t v8 = sub_2411605E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  id v9 = objc_msgSend(self, sel_redColor);
  uint64_t result = (int *)type metadata accessor for TimelineDay();
  *(void *)(a2 + result[5]) = v9;
  uint64_t v11 = (void *)(a2 + result[6]);
  *uint64_t v11 = 77;
  v11[1] = 0xE100000000000000;
  *(unsigned char *)(a2 + result[7]) = v7;
  return result;
}

uint64_t sub_24103490C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_241160A70();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_241160A60();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_24103B8B0(a1, (uint64_t (*)(void))sub_241036688);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_241160A20();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void (*sub_241034AA0(void *a1))(void *)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2411605E0();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_24103997C(v2, (uint64_t)v6);
  return sub_241034B90;
}

void (*sub_241034B94(void *a1))(void *)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2411605E0();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_241039BC0(v2, (uint64_t)v6);
  return sub_241034B90;
}

void (*sub_241034C84(void *a1))(void *)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_2411605E0();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_241039AA0(v2, (uint64_t)v6);
  return sub_241034B90;
}

void sub_241034D74(void *a1)
{
  unint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);

  free(v1);
}

char *sub_241034DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_24103BC4C();
  swift_allocObject();
  *((void *)v3 + 3) = sub_24115FC50();
  sub_24115CD30();
  sub_24115CD30();
  *(void *)&v3[*(void *)(*(void *)v3 + 128)] = MEMORY[0x263F8EE80];
  uint64_t v8 = &v4[*(void *)(*(void *)v4 + 152)];
  sub_2410346F4(0);
  uint64_t v10 = v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v11(v8, 1, 1, v9);
  *(void *)&v4[*(void *)(*(void *)v4 + 160)] = 0;
  v11(&v4[*(void *)(*(void *)v4 + 168)], 1, 1, v10);
  *((void *)v4 + 2) = a1;
  *(void *)&v4[*(void *)(*(void *)v4 + 136)] = a3;
  if (a2 >= 0) {
    uint64_t v12 = a2;
  }
  else {
    uint64_t v12 = a2 + 1;
  }
  *(void *)&v4[*(void *)(*(void *)v4 + 144)] = v12 >> 1;
  return v4;
}

uint64_t sub_241034F90(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_2410346F4(0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v80 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v89 = (char *)&v77 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)&v77 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v85 = (uint64_t)&v77 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v82 = (uint64_t)&v77 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v86 = (uint64_t)&v77 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v93 = (uint64_t)&v77 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v87 = (uint64_t)&v77 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v88 = (uint64_t)&v77 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v94 = (uint64_t)&v77 - v25;
  sub_2410346C0(0);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v81 = (uint64_t)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v90 = (uint64_t)&v77 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v91 = (uint64_t)&v77 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v77 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v77 - v36;
  sub_2410359FC();
  uint64_t v39 = v38 - 8;
  MEMORY[0x270FA5388](v38);
  uint64_t v41 = (char *)&v77 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v1 + *(void *)(*(void *)v1 + 168);
  swift_beginAccess();
  uint64_t v43 = (uint64_t)&v41[*(int *)(v39 + 56)];
  uint64_t v92 = a1;
  sub_241036570(a1, (uint64_t)v41, (uint64_t (*)(void))sub_2410346C0);
  uint64_t v95 = v42;
  sub_241036570(v42, v43, (uint64_t (*)(void))sub_2410346C0);
  uint64_t v83 = v6;
  uint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v44((uint64_t)v41, 1, v5) == 1)
  {
    if (v44(v43, 1, v5) == 1)
    {
      uint64_t v45 = sub_2410346C0;
      uint64_t v46 = (uint64_t)v41;
      return sub_24103B8B0(v46, (uint64_t (*)(void))v45);
    }
    uint64_t v47 = (uint64_t (*)(void))sub_2410359FC;
    uint64_t v48 = v5;
    goto LABEL_12;
  }
  sub_241036570((uint64_t)v41, (uint64_t)v37, (uint64_t (*)(void))sub_2410346C0);
  uint64_t v79 = v5;
  if (v44(v43, 1, v5) == 1)
  {
    uint64_t v47 = (uint64_t (*)(void))sub_2410359FC;
LABEL_11:
    sub_24103B8B0((uint64_t)v37, (uint64_t (*)(void))sub_2410346F4);
    uint64_t v48 = v79;
LABEL_12:
    sub_24103B8B0((uint64_t)v41, v47);
LABEL_13:
    uint64_t v58 = v95;
    sub_241036570(v95, (uint64_t)v35, (uint64_t (*)(void))sub_2410346C0);
    if (v44((uint64_t)v35, 1, v48) == 1)
    {
      sub_24103B8B0((uint64_t)v35, (uint64_t (*)(void))sub_2410346C0);
      uint64_t v59 = v90;
      sub_241036570(v92, v90, (uint64_t (*)(void))sub_2410346C0);
      if (v44(v59, 1, v48) != 1)
      {
        uint64_t v66 = v59;
        uint64_t v67 = v82;
        sub_2410366BC(v66, v82, (uint64_t (*)(void))sub_2410346F4);
        uint64_t v68 = v67;
        uint64_t v69 = v81;
        sub_2410366BC(v68, v81, (uint64_t (*)(void))sub_2410346F4);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v69, 0, 1, v48);
        swift_beginAccess();
        sub_241035A60(v69, v58);
        return swift_endAccess();
      }
      uint64_t v45 = sub_2410346C0;
      uint64_t v46 = v59;
      return sub_24103B8B0(v46, (uint64_t (*)(void))v45);
    }
    uint64_t v60 = v93;
    sub_2410366BC((uint64_t)v35, v93, (uint64_t (*)(void))sub_2410346F4);
    uint64_t v61 = v2 + *(void *)(*(void *)v2 + 152);
    swift_beginAccess();
    uint64_t v62 = v61;
    uint64_t v63 = v91;
    sub_241036570(v62, v91, (uint64_t (*)(void))sub_2410346C0);
    if (v44(v63, 1, v48) == 1)
    {
      sub_24103B8B0(v63, (uint64_t (*)(void))sub_2410346C0);
      uint64_t v64 = v89;
      sub_241035AC4(*(void *)(v2 + *(void *)(*(void *)v2 + 144)), v89);
      sub_241036134((uint64_t)v64);
      uint64_t v65 = (uint64_t)v64;
    }
    else
    {
      uint64_t v70 = v86;
      sub_2410366BC(v63, v86, (uint64_t (*)(void))sub_2410346F4);
      char v71 = sub_241160540();
      uint64_t v72 = v85;
      sub_241036570(v60, v85, (uint64_t (*)(void))sub_2410346F4);
      uint64_t v73 = v84;
      sub_241036570(v70, v84, (uint64_t (*)(void))sub_2410346F4);
      if (v71)
      {
        sub_24103B8B0(v73, (uint64_t (*)(void))sub_2410346F4);
        sub_24103B8B0(v72, (uint64_t (*)(void))sub_2410346F4);
      }
      else
      {
        sub_2411605E0();
        sub_24103473C();
        char v74 = sub_2411606A0();
        sub_24103B8B0(v73, (uint64_t (*)(void))sub_2410346F4);
        sub_24103B8B0(v72, (uint64_t (*)(void))sub_2410346F4);
        if ((v74 & 1) == 0)
        {
          uint64_t v65 = v70;
          goto LABEL_24;
        }
      }
      uint64_t v75 = v80;
      sub_241035AC4(*(void *)(v2 + *(void *)(*(void *)v2 + 144)), v80);
      id v76 = v89;
      sub_241035DF8((uint64_t)v75, v89);
      sub_24103B8B0((uint64_t)v75, (uint64_t (*)(void))sub_2410346F4);
      sub_241036134((uint64_t)v76);
      sub_24103B8B0((uint64_t)v76, (uint64_t (*)(void))sub_2410346F4);
      uint64_t v65 = v70;
    }
LABEL_24:
    sub_24103B8B0(v65, (uint64_t (*)(void))sub_2410346F4);
    uint64_t v46 = v60;
    uint64_t v45 = sub_2410346F4;
    return sub_24103B8B0(v46, (uint64_t (*)(void))v45);
  }
  uint64_t v78 = v2;
  uint64_t v49 = v94;
  sub_2410366BC(v43, v94, (uint64_t (*)(void))sub_2410346F4);
  sub_2411605E0();
  uint64_t v77 = sub_2410365D8(&qword_268CF1BC0, MEMORY[0x263F090E8]);
  char v50 = sub_2411606E0();
  uint64_t v51 = v88;
  sub_241036570((uint64_t)v37, v88, (uint64_t (*)(void))sub_2410346F4);
  uint64_t v52 = v49;
  uint64_t v53 = v87;
  sub_241036570(v52, v87, (uint64_t (*)(void))sub_2410346F4);
  if ((v50 & 1) == 0)
  {
    sub_24103B8B0(v53, (uint64_t (*)(void))sub_2410346F4);
    sub_24103B8B0(v51, (uint64_t (*)(void))sub_2410346F4);
    sub_24103B8B0(v94, (uint64_t (*)(void))sub_2410346F4);
    uint64_t v47 = (uint64_t (*)(void))sub_2410346C0;
    uint64_t v2 = v78;
    goto LABEL_11;
  }
  uint64_t v54 = v79;
  char v55 = sub_2411606E0();
  sub_24103B8B0(v53, (uint64_t (*)(void))sub_2410346F4);
  sub_24103B8B0(v51, (uint64_t (*)(void))sub_2410346F4);
  sub_24103B8B0(v94, (uint64_t (*)(void))sub_2410346F4);
  uint64_t v56 = (uint64_t)v37;
  uint64_t v48 = v54;
  sub_24103B8B0(v56, (uint64_t (*)(void))sub_2410346F4);
  uint64_t result = sub_24103B8B0((uint64_t)v41, (uint64_t (*)(void))sub_2410346C0);
  uint64_t v2 = v78;
  if ((v55 & 1) == 0) {
    goto LABEL_13;
  }
  return result;
}

void sub_2410359FC()
{
  if (!qword_268CF0678)
  {
    sub_2410346C0(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF0678);
    }
  }
}

uint64_t sub_241035A60(uint64_t a1, uint64_t a2)
{
  sub_2410346C0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_241035AC4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v35 = a2;
  sub_241036620();
  uint64_t v4 = v3;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_2411605E0();
  uint64_t v11 = *(void **)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v31 - v16;
  if (__OFSUB__(0, a1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = v7;
    uint64_t v36 = -a1;
    sub_2410365D8((unint64_t *)&qword_268CF09A0, MEMORY[0x263F090E8]);
    sub_241161450();
    sub_2410346F4(0);
    uint64_t v19 = v18;
    uint64_t v36 = a1;
    sub_241161450();
    sub_24103473C();
    uint64_t result = sub_2411606C0();
    if (result)
    {
      uint64_t v20 = *(int *)(v4 + 48);
      uint64_t v32 = v4;
      uint64_t v33 = v19;
      uint64_t v21 = &v9[v20];
      uint64_t v22 = v4;
      uint64_t v23 = (void (*)(char *, char *, uint64_t))v11[4];
      v23(v9, v17, v10);
      v23(v21, v14, v10);
      uint64_t v24 = *(int *)(v22 + 48);
      uint64_t v25 = v34;
      uint64_t v26 = &v34[v24];
      uint64_t v27 = (void (*)(char *, char *, uint64_t))v11[2];
      v27(v34, v9, v10);
      v27(v26, v21, v10);
      uint64_t v28 = v35;
      v23(v35, v25, v10);
      uint64_t v29 = (void (*)(char *, uint64_t))v11[1];
      v29(v26, v10);
      uint64_t v30 = &v25[*(int *)(v32 + 48)];
      v23(v25, v9, v10);
      v23(v30, v21, v10);
      v23(&v28[*(int *)(v33 + 36)], v30, v10);
      return ((uint64_t (*)(char *, uint64_t))v29)(v25, v10);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_241035DF8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v43 = a2;
  sub_241036620();
  uint64_t v44 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v41 = (char *)&v37 - v9;
  uint64_t v10 = sub_2411605E0();
  uint64_t v11 = *(void **)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v37 - v15;
  sub_24103473C();
  char v17 = sub_2411606A0();
  uint64_t v18 = (void (*)(char *, uint64_t, uint64_t))v11[2];
  if (v17) {
    uint64_t v19 = a1;
  }
  else {
    uint64_t v19 = v3;
  }
  v18(v16, v19, v10);
  sub_2410346F4(0);
  uint64_t v42 = v20;
  uint64_t v21 = *(int *)(v20 + 36);
  uint64_t v22 = v3 + v21;
  uint64_t v23 = a1 + v21;
  if (sub_2411606B0()) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = v22;
  }
  v18(v14, v24, v10);
  uint64_t v40 = v14;
  uint64_t result = sub_2411606C0();
  if (result)
  {
    uint64_t v26 = v8;
    uint64_t v27 = *(int *)(v44 + 48);
    uint64_t v28 = v44;
    uint64_t v29 = v41;
    uint64_t v38 = v18;
    uint64_t v30 = &v41[v27];
    uint64_t v31 = (void (*)(char *, char *, uint64_t))v11[4];
    v31(v41, v16, v10);
    uint64_t v39 = v30;
    v31(v30, v40, v10);
    uint64_t v32 = &v26[*(int *)(v28 + 48)];
    uint64_t v33 = (void (*)(char *, char *, uint64_t))v38;
    v38(v26, (uint64_t)v29, v10);
    v33(v32, v30, v10);
    uint64_t v34 = v43;
    v31(v43, v26, v10);
    uint64_t v35 = (void (*)(char *, uint64_t))v11[1];
    v35(v32, v10);
    uint64_t v36 = &v26[*(int *)(v44 + 48)];
    v31(v26, v29, v10);
    v31(v36, v39, v10);
    v31(&v34[*(int *)(v42 + 36)], v36, v10);
    return ((uint64_t (*)(char *, uint64_t))v35)(v26, v10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241036134(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  sub_2410346F4(0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241036688(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410346C0(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v29 - v17;
  sub_241036570(a1, (uint64_t)&v29 - v17, (uint64_t (*)(void))sub_2410346F4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  sub_2410366BC((uint64_t)v18, (uint64_t)v16, (uint64_t (*)(void))sub_2410346C0);
  uint64_t v19 = (uint64_t)v2 + *(void *)(*v2 + 152);
  swift_beginAccess();
  sub_241035A60((uint64_t)v16, v19);
  swift_endAccess();
  uint64_t v20 = sub_2411605B0();
  uint64_t result = sub_2411605B0();
  if (result < v20)
  {
    __break(1u);
  }
  else
  {
    uint64_t v29 = v4;
    swift_beginAccess();
    sub_24115CCD0();
    swift_endAccess();
    uint64_t v22 = *(void *)(*v2 + 160);
    if (*(void *)((char *)v2 + v22))
    {
      sub_241027EA8(0, (unint64_t *)&qword_26B0073B0);
      swift_retain();
      sub_241160AC0();
      swift_release();
    }
    uint64_t v23 = sub_241160A70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v12, 1, 1, v23);
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = v2[2];
    sub_241036570(a1, (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_2410346F4);
    unint64_t v26 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v27 = (v8 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = v25;
    sub_2410366BC((uint64_t)v9, (uint64_t)v28 + v26, (uint64_t (*)(void))sub_2410346F4);
    *(void *)((char *)v28 + v27) = v24;
    *(void *)((char *)v28 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8)) = v29;
    swift_retain();
    *(void *)((char *)v2 + v22) = sub_24103490C((uint64_t)v12, (uint64_t)&unk_268CF0688, (uint64_t)v28);
    return swift_release();
  }
  return result;
}

uint64_t sub_241036570(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2410365D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241036620()
{
  if (!qword_268CF0990)
  {
    sub_2411605E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF0990);
    }
  }
}

void sub_241036688(uint64_t a1)
{
}

uint64_t sub_2410366BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_241036724()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24103675C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[22] = a6;
  v7[23] = a7;
  v7[21] = a5;
  uint64_t v9 = sub_241160410();
  v7[24] = v9;
  v7[25] = *(void *)(v9 - 8);
  v7[26] = swift_task_alloc();
  uint64_t v10 = sub_241160440();
  v7[27] = v10;
  v7[28] = *(void *)(v10 - 8);
  v7[29] = swift_task_alloc();
  sub_2410346F4(0);
  uint64_t v12 = *(void *)(v11 - 8);
  v7[30] = v12;
  v7[31] = *(void *)(v12 + 64);
  v7[32] = swift_task_alloc();
  uint64_t v13 = sub_24115F790();
  v7[33] = v13;
  v7[34] = *(void *)(v13 - 8);
  v7[35] = swift_task_alloc();
  v7[36] = swift_task_alloc();
  sub_24103A83C(0, &qword_26B006F70, MEMORY[0x263F8F6B8]);
  v7[37] = v14;
  v7[38] = *(void *)(v14 - 8);
  uint64_t v15 = swift_task_alloc();
  v7[39] = v15;
  sub_24103A83C(0, &qword_26B006F68, MEMORY[0x263F8F6A8]);
  v7[40] = v16;
  v7[41] = *(void *)(v16 - 8);
  v7[42] = swift_task_alloc();
  uint64_t v17 = (void *)swift_task_alloc();
  v7[43] = v17;
  *uint64_t v17 = v7;
  v17[1] = sub_241036A84;
  return sub_2410A7148(v15, a5);
}

uint64_t sub_241036A84()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_241036CB8;
  }
  else {
    uint64_t v2 = sub_241036B98;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_241036B98()
{
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 296);
  sub_241160A80();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  *(unsigned char *)(v0 + 368) = 1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v4;
  void *v4 = v0;
  v4[1] = sub_241037120;
  uint64_t v5 = *(void *)(v0 + 320);
  return MEMORY[0x270FA20F8](v0 + 136, 0, 0, v5, v0 + 144);
}

uint64_t sub_241036CB8()
{
  uint64_t v29 = v0;
  *(void *)(v0 + 128) = *(void *)(v0 + 352);
  uint64_t v1 = (id *)(v0 + 152);
  sub_241027EA8(0, (unint64_t *)&qword_26B0073B0);
  sub_241024708(0, &qword_268CF0698);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    id v3 = *v1;
    if (objc_msgSend(*v1, sel_hk_isDatabaseAccessibilityError))
    {
      uint64_t v4 = *(void *)(v0 + 256);
      uint64_t v26 = *(void *)(v0 + 240);
      uint64_t v5 = *(void *)(v0 + 168);
      sub_24115D400();
      sub_24115D3F0();
      uint64_t v6 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      sub_241036570(v5, v4, (uint64_t (*)(void))sub_2410346F4);
      unint64_t v7 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v6;
      sub_2410366BC(v4, v8 + v7, (uint64_t (*)(void))sub_2410346F4);
      swift_retain();
      sub_24115D3E0();
      swift_release();
      swift_release();
      swift_release();
    }
    sub_24115F770();
    id v9 = v3;
    uint64_t v10 = sub_24115F780();
    os_log_type_t v11 = sub_241160D30();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v13 = *(void *)(v0 + 280);
    uint64_t v15 = *(void *)(v0 + 264);
    if (v12)
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v28 = v25;
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v27 = v15;
      uint64_t v17 = sub_241161A00();
      *(void *)(v0 + 120) = sub_24101F0A4(v17, v18, &v28);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      id v19 = v9;
      id v20 = objc_msgSend(v19, sel_description);
      uint64_t v21 = sub_241160730();
      unint64_t v23 = v22;

      *(void *)(v0 + 112) = sub_24101F0A4(v21, v23, &v28);
      sub_241161430();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v10, v11, "[%s] Error fetching medication dose event samples with error %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v25, -1, -1);
      MEMORY[0x2456180C0](v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v27);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  return result;
}

uint64_t sub_241037120()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_2410377F8;
  }
  else {
    uint64_t v1 = sub_241037230;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_241037230()
{
  uint64_t v35 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  if (!v1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 328) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 320));
    goto LABEL_5;
  }
  if (sub_241160AD0())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 328) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 320));
    swift_bridgeObjectRelease();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  sub_24115F750();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_24115F780();
  os_log_type_t v5 = sub_241160D50();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 288);
  uint64_t v8 = *(void *)(v0 + 264);
  id v9 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 272) + 8);
  if (v6)
  {
    uint64_t v33 = *(void *)(v0 + 288);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v34 = v11;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v12 = sub_241161A00();
    *(void *)(v10 + 4) = sub_24101F0A4(v12, v13, &v34);
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2048;
    uint64_t v14 = *(void *)(v1 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v10 + 14) = v14;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v4, v5, "[%s] Received new changes, total changes(i.e. remove, add, etc): %ld)", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v11, -1, -1);
    MEMORY[0x2456180C0](v10, -1, -1);

    (*v9)(v33, v8);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*v9)(v7, v8);
  }
  char v25 = *(unsigned char *)(v0 + 368);
  uint64_t v15 = *(void *)(v0 + 256);
  uint64_t v24 = *(void *)(v0 + 248);
  uint64_t v16 = *(void *)(v0 + 240);
  uint64_t v32 = *(void *)(v0 + 216);
  uint64_t v29 = *(void *)(v0 + 208);
  uint64_t v17 = *(void *)(v0 + 168);
  uint64_t v26 = *(void *)(v0 + 232);
  uint64_t v30 = *(void *)(v0 + 200);
  uint64_t v31 = *(void *)(v0 + 224);
  uint64_t v28 = *(void *)(v0 + 192);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  uint64_t v27 = (void *)sub_241160EF0();
  uint64_t v18 = swift_allocObject();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_241036570(v17, v15, (uint64_t (*)(void))sub_2410346F4);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v18;
  *(unsigned char *)(v20 + 24) = v25;
  sub_2410366BC(v15, v20 + v19, (uint64_t (*)(void))sub_2410346F4);
  *(void *)(v20 + ((v24 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  *(void *)(v0 + 48) = sub_24103AB98;
  *(void *)(v0 + 56) = v20;
  *(void *)(v0 + 16) = MEMORY[0x263EF8330];
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_24101AFBC;
  *(void *)(v0 + 40) = &unk_26F5551F8;
  uint64_t v21 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  sub_241160430();
  *(void *)(v0 + 160) = MEMORY[0x263F8EE78];
  sub_2410365D8(&qword_26B0072E0, MEMORY[0x263F8F030]);
  sub_24103BA70(0, (unint64_t *)&unk_26B0072F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_241024138();
  sub_2411614F0();
  MEMORY[0x245616D40](0, v26, v29, v21);
  _Block_release(v21);

  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v28);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v26, v32);
  swift_release();
  swift_release();
  *(unsigned char *)(v0 + 368) = 0;
  unint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v22;
  *unint64_t v22 = v0;
  v22[1] = sub_241037120;
  uint64_t v23 = *(void *)(v0 + 320);
  return MEMORY[0x270FA20F8](v0 + 136, 0, 0, v23, v0 + 144);
}

uint64_t sub_2410377F8()
{
  uint64_t v29 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 328) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 320));
  *(void *)(v0 + 128) = *(void *)(v0 + 144);
  uint64_t v1 = (id *)(v0 + 152);
  sub_241027EA8(0, (unint64_t *)&qword_26B0073B0);
  sub_241024708(0, &qword_268CF0698);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    id v3 = *v1;
    if (objc_msgSend(*v1, sel_hk_isDatabaseAccessibilityError))
    {
      uint64_t v4 = *(void *)(v0 + 256);
      uint64_t v26 = *(void *)(v0 + 240);
      uint64_t v5 = *(void *)(v0 + 168);
      sub_24115D400();
      sub_24115D3F0();
      uint64_t v6 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      sub_241036570(v5, v4, (uint64_t (*)(void))sub_2410346F4);
      unint64_t v7 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v6;
      sub_2410366BC(v4, v8 + v7, (uint64_t (*)(void))sub_2410346F4);
      swift_retain();
      sub_24115D3E0();
      swift_release();
      swift_release();
      swift_release();
    }
    sub_24115F770();
    id v9 = v3;
    uint64_t v10 = sub_24115F780();
    os_log_type_t v11 = sub_241160D30();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v13 = *(void *)(v0 + 280);
    uint64_t v15 = *(void *)(v0 + 264);
    if (v12)
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v28 = v25;
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v27 = v15;
      uint64_t v17 = sub_241161A00();
      *(void *)(v0 + 120) = sub_24101F0A4(v17, v18, &v28);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      id v19 = v9;
      id v20 = objc_msgSend(v19, sel_description);
      uint64_t v21 = sub_241160730();
      unint64_t v23 = v22;

      *(void *)(v0 + 112) = sub_24101F0A4(v21, v23, &v28);
      sub_241161430();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v10, v11, "[%s] Error fetching medication dose event samples with error %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v25, -1, -1);
      MEMORY[0x2456180C0](v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v27);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  return result;
}

uint64_t sub_241037C78(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  unint64_t v36 = a4;
  sub_2410346F4(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24103AC2C(0);
  uint64_t v33 = v9;
  MEMORY[0x270FA5388](v9);
  os_log_type_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_24115CD10();
  uint64_t v12 = *(void *)(v37 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v37);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = sub_24115CD40();
  uint64_t v34 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v35 = (uint64_t)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v21 = (char *)result;
    if (a2)
    {
      swift_retain();
      sub_24103ACA8(a3, v21);
      swift_release();
      uint64_t v22 = sub_2411605B0();
      uint64_t result = sub_2411605B0();
      if (result < v22)
      {
        __break(1u);
        return result;
      }
      swift_beginAccess();
      sub_24115CCD0();
      swift_endAccess();
    }
    uint64_t v31 = v18;
    uint64_t v32 = v12;
    sub_241038148(v36, v35);
    sub_24115CD20();
    uint64_t v30 = v17;
    sub_24115CD00();
    unint64_t v23 = &v11[*(int *)(v33 + 36)];
    sub_24103AC74();
    uint64_t v24 = *(void *)v23;
    uint64_t v25 = v37;
    sub_241160C20();
    unint64_t v36 = (unint64_t)v21;
    if (v24 != v38[0])
    {
      uint64_t v26 = (void (**)(char *, char *, uint64_t))(v32 + 16);
      uint64_t v27 = (void (**)(char *, uint64_t))(v32 + 8);
      do
      {
        uint64_t v28 = (void (*)(uint64_t *, void))sub_241160C40();
        v28(v38, 0);
        (*v26)(v15, v11, v37);
        sub_241160C30();
        (*v27)(v15, v37);
        uint64_t v25 = v37;
        sub_241160C50();
        sub_24115FC40();
        sub_24103B8B0((uint64_t)v8, (uint64_t (*)(void))sub_2410346F4);
        uint64_t v29 = *(void *)v23;
        sub_241160C20();
      }
      while (v29 != v38[0]);
    }
    swift_release();
    sub_24103B8B0((uint64_t)v11, (uint64_t (*)(void))sub_24103AC2C);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v25);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v35, v31);
  }
  return result;
}

uint64_t sub_2410380E8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_241036134(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_241038148@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v193 = a2;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24103BA70(0, &qword_268CF06B8, (uint64_t (*)(uint64_t))sub_24103B768, MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  long long v201 = (char *)&v191 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v199 = (uint64_t)&v191 - v8;
  sub_24103BA70(0, &qword_268CF06C8, (uint64_t (*)(uint64_t))sub_24103B7D4, v4);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v191 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v191 - v13;
  unint64_t v15 = sub_2411605E0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unsigned __int8 v197 = (char *)&v191 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v209 = (char *)&v191 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v213 = (char *)&v191 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  long long v203 = (char *)&v191 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  long long v194 = (char *)&v191 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v191 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  v216 = (void (**)(char *, char *, unint64_t))((char *)&v191 - v31);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  unint64_t v219 = (unint64_t)&v191 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (void (**)(char *, uint64_t, unint64_t))((char *)&v191 - v34);
  uint64_t v210 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  uint64_t v36 = *(void *)(v210 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v210);
  v212 = (void (*)(uint64_t, unint64_t))((char *)&v191 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v217 = (void (*)(char *, uint64_t, unint64_t))((char *)&v191 - v40);
  MEMORY[0x270FA5388](v39);
  v211 = (void (**)(char *, unint64_t))((char *)&v191 - v41);
  uint64_t v196 = sub_24115CD40();
  uint64_t v195 = *(void *)(v196 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v196);
  long long v200 = (char *)&v191 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  v207 = (char *)&v191 - v44;
  sub_24115CD30();
  unint64_t v224 = MEMORY[0x263F8EE80];
  uint64_t v45 = *(void *)(a1 + 16);
  unint64_t v218 = v15;
  uint64_t v214 = v16;
  long long v206 = v12;
  long long v205 = v14;
  uint64_t v204 = (uint64_t)v29;
  if (v45)
  {
    unint64_t v192 = v2;
    unint64_t v202 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v46 = a1 + v202;
    int64_t v208 = *(void *)(v36 + 72);
    v215 = (void (**)(char *, uint64_t, unint64_t))(v16 + 16);
    long long v198 = (char *)(v16 + 32);
    uint64_t v47 = (void (**)(unint64_t, unint64_t))(v16 + 8);
    unint64_t v191 = a1;
    swift_bridgeObjectRetain();
    uint64_t v48 = v216;
    v220 = v35;
    uint64_t v49 = (uint64_t)v211;
    while (1)
    {
      sub_241036570(v46, v49, type metadata accessor for MedicationDaySummaryViewModelChange);
      sub_241036570(v49, (uint64_t)v217, type metadata accessor for MedicationDaySummaryViewModelChange);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 3u:
          swift_bridgeObjectRelease();
          goto LABEL_7;
        case 2u:
          uint64_t v54 = sub_24103B990;
          char v55 = &qword_268CF06D8;
          goto LABEL_12;
        case 4u:
LABEL_7:
          uint64_t v52 = v215;
          if (qword_268CF0330 != -1) {
            swift_once();
          }
          uint64_t v53 = sub_24103B878(v15, (uint64_t)qword_268CF28C0);
          (*v52)((char *)v35, v53, v15);
          goto LABEL_13;
        default:
          uint64_t v54 = sub_24103BA3C;
          char v55 = &qword_268CF06E0;
LABEL_12:
          sub_24103B9C4(0, v55, v54);
          uint64_t v56 = v217;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, void, unint64_t))v198)((char *)v35, v56, v15);
          uint64_t v52 = v215;
LABEL_13:
          if (*(void *)(v224 + 16))
          {
            sub_241062644((uint64_t)v35);
            uint64_t v57 = (void (**)(char *, unint64_t))*v52;
            if (v58) {
              goto LABEL_28;
            }
          }
          else
          {
            uint64_t v57 = (void (**)(char *, unint64_t))*v52;
          }
          uint64_t v59 = v219;
          ((void (*)(unint64_t, void, unint64_t))v57)(v219, v220, v15);
          unint64_t v60 = v224;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v223 = (void *)v60;
          unint64_t v224 = 0x8000000000000000;
          unint64_t v15 = sub_241062644(v59);
          uint64_t v63 = *(void *)(v60 + 16);
          BOOL v64 = (v62 & 1) == 0;
          uint64_t v65 = v63 + v64;
          if (__OFADD__(v63, v64))
          {
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            swift_once();
            goto LABEL_75;
          }
          char v66 = v62;
          if (*(void *)(v60 + 24) >= v65)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_241065784();
            }
          }
          else
          {
            sub_241063568(v65, isUniquelyReferenced_nonNull_native);
            unint64_t v67 = sub_241062644(v219);
            if ((v66 & 1) != (v68 & 1))
            {
LABEL_123:
              sub_2411618E0();
              __break(1u);
              JUMPOUT(0x241039968);
            }
            unint64_t v15 = v67;
          }
          uint64_t v48 = v216;
          uint64_t v69 = v223;
          if (v66)
          {
            *(void *)(v223[7] + 8 * v15) = MEMORY[0x263F8EE78];
            swift_bridgeObjectRelease();
          }
          else
          {
            v223[(v15 >> 6) + 8] |= 1 << v15;
            ((void (*)(unint64_t, unint64_t, unint64_t))v57)(v69[6] + *(void *)(v214 + 72) * v15, v219, v218);
            *(void *)(v69[7] + 8 * v15) = MEMORY[0x263F8EE78];
            uint64_t v70 = v69[2];
            BOOL v71 = __OFADD__(v70, 1);
            uint64_t v72 = v70 + 1;
            if (v71) {
              goto LABEL_118;
            }
            v69[2] = v72;
          }
          unint64_t v224 = (unint64_t)v69;
          swift_bridgeObjectRelease();
          unint64_t v15 = v218;
          (*v47)(v219, v218);
LABEL_28:
          uint64_t v35 = v220;
          ((void (*)(void, void, unint64_t))v57)(v48, v220, v15);
          char v74 = sub_241034AA0(&v223);
          if (*v73)
          {
            uint64_t v75 = v73;
            uint64_t v49 = (uint64_t)v211;
            sub_241036570((uint64_t)v211, (uint64_t)v212, type metadata accessor for MedicationDaySummaryViewModelChange);
            unint64_t v76 = *v75;
            char v77 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t *v75 = v76;
            if ((v77 & 1) == 0)
            {
              unint64_t v76 = sub_241051F20(0, *(void *)(v76 + 16) + 1, 1, v76);
              unint64_t *v75 = v76;
            }
            uint64_t v35 = v220;
            unint64_t v79 = *(void *)(v76 + 16);
            unint64_t v78 = *(void *)(v76 + 24);
            if (v79 >= v78 >> 1)
            {
              unint64_t v76 = sub_241051F20(v78 > 1, v79 + 1, 1, v76);
              unint64_t *v75 = v76;
            }
            *(void *)(v76 + 16) = v79 + 1;
            unint64_t v80 = v76 + v202;
            int64_t v51 = v208;
            sub_2410366BC((uint64_t)v212, v80 + v79 * v208, type metadata accessor for MedicationDaySummaryViewModelChange);
            ((void (*)(void **, void))v74)(&v223, 0);
            uint64_t v81 = *v47;
            uint64_t v48 = v216;
            unint64_t v15 = v218;
            (*v47)((unint64_t)v216, v218);
            v81((unint64_t)v35, v15);
          }
          else
          {
            ((void (*)(void **, void))v74)(&v223, 0);
            char v50 = *v47;
            (*v47)((unint64_t)v48, v15);
            v50((unint64_t)v35, v15);
            uint64_t v49 = (uint64_t)v211;
            int64_t v51 = v208;
          }
          sub_24103B8B0(v49, type metadata accessor for MedicationDaySummaryViewModelChange);
          v46 += v51;
          if (!--v45)
          {
            swift_bridgeObjectRelease();
            unint64_t v82 = v224;
            uint64_t v12 = v206;
            uint64_t v14 = v205;
            uint64_t v29 = (char *)v204;
            unint64_t v2 = v192;
            goto LABEL_36;
          }
          break;
      }
    }
  }
  unint64_t v82 = MEMORY[0x263F8EE80];
LABEL_36:
  uint64_t v83 = *(void *)(v82 + 64);
  unint64_t v202 = v82 + 64;
  uint64_t v84 = 1 << *(unsigned char *)(v82 + 32);
  uint64_t v85 = -1;
  if (v84 < 64) {
    uint64_t v85 = ~(-1 << v84);
  }
  unint64_t v219 = v85 & v83;
  uint64_t v86 = (void (**)(char *, uint64_t, unint64_t))(v2 + *(void *)(*(void *)v2 + 128));
  swift_bridgeObjectRetain();
  v215 = v86;
  swift_beginAccess();
  uint64_t v87 = 0;
  unint64_t v88 = (unint64_t)(v84 + 63) >> 6;
  uint64_t v89 = v214;
  v220 = (void (**)(char *, uint64_t, unint64_t))(v214 + 16);
  v216 = (void (**)(char *, char *, unint64_t))(v214 + 32);
  uint64_t v57 = (void (**)(char *, unint64_t))(v214 + 8);
  unint64_t v191 = v88 - 1;
  int64_t v208 = v88;
  long long v198 = (char *)(v88 - 4);
  uint64_t v210 = v82;
  unint64_t v90 = v219;
  unint64_t v192 = v82 + 96;
  v211 = (void (**)(char *, unint64_t))(v214 + 8);
  while (1)
  {
    if (v90)
    {
      unint64_t v219 = (v90 - 1) & v90;
      unint64_t v91 = __clz(__rbit64(v90)) | ((void)v87 << 6);
      goto LABEL_43;
    }
    int64_t v96 = (int64_t)(v87 + 1);
    if (__OFADD__(v87, 1)) {
      goto LABEL_117;
    }
    if (v96 >= v208)
    {
      int64_t v96 = (int64_t)v87;
    }
    else
    {
      unint64_t v97 = *(void *)(v202 + 8 * v96);
      if (v97) {
        goto LABEL_47;
      }
      if ((uint64_t)(v87 + 2) < v208)
      {
        unint64_t v97 = *(void *)(v202 + 8 * (void)(v87 + 2));
        if (v97)
        {
          int64_t v96 = (int64_t)(v87 + 2);
LABEL_47:
          unint64_t v219 = (v97 - 1) & v97;
          unint64_t v91 = __clz(__rbit64(v97)) + (v96 << 6);
          uint64_t v87 = (char *)v96;
LABEL_43:
          uint64_t v92 = v210;
          (*(void (**)(char *, unint64_t, unint64_t))(v89 + 16))(v12, *(void *)(v210 + 48) + *(void *)(v89 + 72) * v91, v15);
          uint64_t v93 = *(void *)(*(void *)(v92 + 56) + 8 * v91);
          sub_24103B7D4();
          uint64_t v95 = v94;
          *(void *)&v12[*(int *)(v94 + 48)] = v93;
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v12, 0, 1, v94);
          swift_bridgeObjectRetain();
          goto LABEL_50;
        }
        int64_t v96 = (int64_t)(v87 + 2);
        if ((uint64_t)(v87 + 3) < v208)
        {
          unint64_t v97 = *(void *)(v202 + 8 * (void)(v87 + 3));
          int64_t v96 = (int64_t)(v87 + 3);
          if (v97) {
            goto LABEL_47;
          }
          while (v198 != v87)
          {
            unint64_t v97 = *(void *)(v192 + 8 * (void)v87++);
            if (v97)
            {
              int64_t v96 = (int64_t)(v87 + 3);
              goto LABEL_47;
            }
          }
          int64_t v96 = v191;
        }
      }
    }
    sub_24103B7D4();
    uint64_t v95 = v98;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v12, 1, 1, v98);
    unint64_t v219 = 0;
    uint64_t v87 = (char *)v96;
LABEL_50:
    sub_24103B910((uint64_t)v12, (uint64_t)v14, &qword_268CF06C8, (uint64_t (*)(uint64_t))sub_24103B7D4);
    sub_24103B7D4();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v95 - 8) + 48))(v14, 1, v95) == 1) {
      break;
    }
    v217 = (void (*)(char *, uint64_t, unint64_t))v87;
    uint64_t v99 = *(void *)&v14[*(int *)(v95 + 48)];
    (*v216)(v29, v14, v15);
    if (qword_268CF0330 != -1) {
      swift_once();
    }
    uint64_t v100 = sub_24103B878(v15, (uint64_t)qword_268CF28C0);
    sub_2410365D8(&qword_268CF1BC0, MEMORY[0x263F090E8]);
    if (sub_2411606E0())
    {
      (*v57)(v29, v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2411605B0();
      sub_24115CCE0();
      uint64_t v101 = *v220;
      uint64_t v102 = (uint64_t)v203;
      (*v220)(v203, v100, v15);
      unint64_t v103 = v224;
      if (*(void *)(v224 + 16) && (unint64_t v104 = sub_241062644(v102), (v105 & 1) != 0))
      {
        uint64_t v106 = *(void *)(*(void *)(v103 + 56) + 8 * v104);
        uint64_t v107 = *v57;
        swift_bridgeObjectRetain();
        v107((char *)v102, v15);
      }
      else
      {
        uint64_t v107 = *v57;
        (*v57)((char *)v102, v15);
        uint64_t v106 = MEMORY[0x263F8EE78];
      }
      v101(v213, (uint64_t)v29, v15);
      uint64_t v222 = v99;
      sub_2410CF574(v106);
      uint64_t v108 = v222;
      uint64_t v109 = *v215;
      uint64_t v110 = *((void *)*v215 + 2);
      v212 = (void (*)(uint64_t, unint64_t))v107;
      if (v110)
      {
        swift_bridgeObjectRetain();
        unint64_t v111 = sub_241062644((uint64_t)v29);
        if (v112)
        {
          uint64_t v113 = (uint64_t *)(*((void *)v109 + 7) + 32 * v111);
          uint64_t v115 = *v113;
          uint64_t v114 = v113[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v115 = 0;
          uint64_t v114 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v115 = 0;
        uint64_t v114 = 0;
      }
      uint64_t v116 = sub_241133E5C(v108, v115, v114);
      uint64_t v118 = v117;
      int v120 = v119;
      uint64_t v122 = v121;
      swift_bridgeObjectRelease();
      sub_24103B71C(v115);
      uint64_t v123 = v215;
      swift_beginAccess();
      char v124 = swift_isUniquelyReferenced_nonNull_native();
      v221 = *v123;
      *uint64_t v123 = (void (*)(char *, uint64_t, unint64_t))0x8000000000000000;
      uint64_t v125 = (uint64_t)v213;
      sub_241064B3C(v116, v118, v120, v122, (uint64_t)v213, v124);
      *uint64_t v123 = v221;
      swift_bridgeObjectRelease();
      uint64_t v126 = v125;
      unint64_t v15 = v218;
      uint64_t v57 = v211;
      long long v127 = v212;
      v212(v126, v218);
      swift_endAccess();
      uint64_t v29 = (char *)v204;
      v127(v204, v15);
      uint64_t v89 = v214;
      uint64_t v12 = v206;
      uint64_t v14 = v205;
    }
    uint64_t v87 = (char *)v217;
    unint64_t v90 = v219;
  }
  swift_release();
  if (qword_268CF0330 != -1) {
    goto LABEL_122;
  }
LABEL_75:
  uint64_t v128 = sub_24103B878(v15, (uint64_t)qword_268CF28C0);
  uint64_t v129 = (uint64_t)v194;
  v217 = *v220;
  v217(v194, v128, v15);
  unint64_t v130 = v224;
  if (*(void *)(v224 + 16))
  {
    unint64_t v131 = sub_241062644(v129);
    if (v132)
    {
      v213 = *(char **)(*(void *)(v130 + 56) + 8 * v131);
      uint64_t v133 = *v57;
      swift_bridgeObjectRetain();
      v133((char *)v129, v15);
      (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v200, v207, v196);
      uint64_t v134 = *v215;
      uint64_t v135 = *((void *)*v215 + 8);
      uint64_t v204 = (uint64_t)*v215 + 64;
      uint64_t v136 = 1 << *((unsigned char *)v134 + 32);
      uint64_t v137 = -1;
      if (v136 < 64) {
        uint64_t v137 = ~(-1 << v136);
      }
      unint64_t v138 = v137 & v135;
      unint64_t v139 = (unint64_t)(v136 + 63) >> 6;
      long long v198 = (char *)(v139 - 1);
      uint64_t v140 = swift_bridgeObjectRetain();
      uint64_t v141 = 0;
      uint64_t v210 = v139;
      long long v203 = (char *)(v139 - 4);
      v212 = (void (*)(uint64_t, unint64_t))v140;
      unint64_t v202 = v140 + 96;
      long long v205 = (char *)v133;
      while (2)
      {
        if (v138)
        {
          unint64_t v142 = __clz(__rbit64(v138));
          v138 &= v138 - 1;
          unint64_t v143 = v142 | (v141 << 6);
          goto LABEL_83;
        }
        uint64_t v154 = v141 + 1;
        if (__OFADD__(v141, 1)) {
          goto LABEL_119;
        }
        if (v154 >= v210)
        {
          uint64_t v154 = v141;
          uint64_t v145 = (uint64_t)v201;
        }
        else
        {
          unint64_t v155 = *(void *)(v204 + 8 * v154);
          uint64_t v145 = (uint64_t)v201;
          if (v155)
          {
LABEL_87:
            unint64_t v138 = (v155 - 1) & v155;
            unint64_t v143 = __clz(__rbit64(v155)) + (v154 << 6);
            uint64_t v141 = v154;
LABEL_83:
            uint64_t v144 = (uint64_t)v212;
            uint64_t v145 = (uint64_t)v201;
            v217(v201, *((void *)v212 + 6) + *(void *)(v214 + 72) * v143, v15);
            uint64_t v146 = *(void *)(v144 + 56) + 32 * v143;
            uint64_t v147 = *(void *)v146;
            uint64_t v148 = *(void *)(v146 + 8);
            char v149 = *(unsigned char *)(v146 + 16);
            uint64_t v150 = *(void *)(v146 + 24);
            sub_24103B768();
            uint64_t v152 = v151;
            uint64_t v153 = v145 + *(int *)(v151 + 48);
            *(void *)uint64_t v153 = v147;
            *(void *)(v153 + 8) = v148;
            *(unsigned char *)(v153 + 16) = v149;
            *(void *)(v153 + 24) = v150;
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v151 - 8) + 56))(v145, 0, 1, v151);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_90:
            uint64_t v157 = v199;
            sub_24103B910(v145, v199, &qword_268CF06B8, (uint64_t (*)(uint64_t))sub_24103B768);
            sub_24103B768();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v152 - 8) + 48))(v157, 1, v152) == 1)
            {
              swift_release();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v195 + 8))(v200, v196);
              goto LABEL_115;
            }
            unint64_t v219 = v141;
            uint64_t v158 = v157;
            v159 = (uint64_t *)(v157 + *(int *)(v152 + 48));
            unint64_t v15 = v218;
            (*v216)(v209, (char *)v158, v218);
            uint64_t v160 = *v159;
            uint64_t v161 = v159[1];
            uint64_t v57 = (void (**)(char *, unint64_t))v159[3];
            sub_2411605B0();
            char v162 = sub_24115CCF0();
            uint64_t v163 = (uint64_t)v213;
            if ((v162 & 1) == 0)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v164 = sub_2410B064C(v160, v161, (uint64_t)v57, v163);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v164)
              {
                dispatch_group_t v165 = v209;
                sub_2411605B0();
                sub_24115CCE0();
                uint64_t v166 = (uint64_t)v197;
                v217(v197, (uint64_t)v165, v15);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                unint64_t v15 = sub_241133E5C(v163, v160, v161);
                long long v206 = v167;
                LODWORD(v208) = v168;
                uint64_t v170 = v169;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v171 = v215;
                swift_beginAccess();
                int v172 = swift_isUniquelyReferenced_nonNull_native();
                v221 = *v171;
                uint64_t v173 = v221;
                char *v171 = (void (*)(char *, uint64_t, unint64_t))0x8000000000000000;
                unint64_t v175 = sub_241062644(v166);
                uint64_t v176 = *((void *)v173 + 2);
                BOOL v177 = (v174 & 1) == 0;
                uint64_t v178 = v176 + v177;
                if (__OFADD__(v176, v177)) {
                  goto LABEL_120;
                }
                char v179 = v174;
                if (*((void *)v173 + 3) >= v178)
                {
                  if (v172) {
                    goto LABEL_98;
                  }
                  uint64_t v182 = v170;
                  sub_241065498();
                  uint64_t v183 = v221;
                  if ((v179 & 1) == 0) {
                    goto LABEL_110;
                  }
LABEL_99:
                  uint64_t v184 = *((void *)v183 + 7) + 32 * v175;
                  uint64_t v185 = v206;
                  *(void *)uint64_t v184 = v15;
                  *(void *)(v184 + 8) = v185;
                  *(unsigned char *)(v184 + 16) = v208;
                  *(void *)(v184 + 24) = v182;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  sub_24106310C(v178, v172);
                  unint64_t v180 = sub_241062644((uint64_t)v197);
                  if ((v179 & 1) != (v181 & 1)) {
                    goto LABEL_123;
                  }
                  unint64_t v175 = v180;
LABEL_98:
                  uint64_t v182 = v170;
                  uint64_t v183 = v221;
                  if (v179) {
                    goto LABEL_99;
                  }
LABEL_110:
                  *((void *)v183 + (v175 >> 6) + 8) |= 1 << v175;
                  v217((char *)(*((void *)v183 + 6) + *(void *)(v214 + 72) * v175), (uint64_t)v197, v218);
                  uint64_t v186 = *((void *)v183 + 7) + 32 * v175;
                  long long v187 = v206;
                  *(void *)uint64_t v186 = v15;
                  *(void *)(v186 + 8) = v187;
                  *(unsigned char *)(v186 + 16) = v208;
                  *(void *)(v186 + 24) = v182;
                  uint64_t v188 = *((void *)v183 + 2);
                  BOOL v71 = __OFADD__(v188, 1);
                  uint64_t v189 = v188 + 1;
                  if (v71) {
                    goto LABEL_121;
                  }
                  *((void *)v183 + 2) = v189;
                }
                *v215 = v183;
                swift_bridgeObjectRelease();
                unint64_t v15 = v218;
                uint64_t v133 = (void (*)(char *, unint64_t))v205;
                ((void (*)(char *, unint64_t))v205)(v197, v218);
                swift_endAccess();
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v133(v209, v15);
            uint64_t v141 = v219;
            continue;
          }
          if (v141 + 2 < v210)
          {
            unint64_t v155 = *(void *)(v204 + 8 * (v141 + 2));
            if (v155)
            {
              uint64_t v154 = v141 + 2;
              unint64_t v15 = v218;
              goto LABEL_87;
            }
            uint64_t v154 = v141 + 2;
            if (v141 + 3 < v210)
            {
              unint64_t v155 = *(void *)(v204 + 8 * (v141 + 3));
              uint64_t v154 = v141 + 3;
              unint64_t v15 = v218;
              if (v155) {
                goto LABEL_87;
              }
              while (v203 != (char *)v141)
              {
                unint64_t v155 = *(void *)(v202 + 8 * v141++);
                if (v155)
                {
                  uint64_t v154 = v141 + 3;
                  goto LABEL_87;
                }
              }
              uint64_t v154 = (uint64_t)v198;
            }
          }
        }
        break;
      }
      sub_24103B768();
      uint64_t v152 = v156;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 56))(v145, 1, 1, v156);
      unint64_t v138 = 0;
      uint64_t v141 = v154;
      goto LABEL_90;
    }
  }
  (*v57)((char *)v129, v15);
LABEL_115:
  (*(void (**)(uint64_t, char *, uint64_t))(v195 + 32))(v193, v207, v196);
  return swift_bridgeObjectRelease();
}

void (*sub_24103997C(void *a1, uint64_t a2))(uint64_t)
{
  uint64_t v4 = malloc(0x68uLL);
  *a1 = v4;
  uint64_t v5 = sub_2411605E0();
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  v4[9] = v6;
  uint64_t v8 = malloc(*(void *)(v6 + 64));
  v4[10] = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v8, a2, v5);
  v4[11] = sub_24103A1DC(v4);
  v4[12] = sub_241039D78(v4 + 4, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  return sub_241039A9C;
}

void (*sub_241039AA0(void *a1, uint64_t a2))(uint64_t)
{
  uint64_t v4 = malloc(0x68uLL);
  *a1 = v4;
  uint64_t v5 = sub_2411605E0();
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  v4[9] = v6;
  uint64_t v8 = malloc(*(void *)(v6 + 64));
  v4[10] = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v8, a2, v5);
  v4[11] = sub_24103A218(v4);
  v4[12] = sub_241039EF8(v4 + 4, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  return sub_241039A9C;
}

void (*sub_241039BC0(void *a1, uint64_t a2))(uint64_t)
{
  uint64_t v4 = malloc(0x68uLL);
  *a1 = v4;
  uint64_t v5 = sub_2411605E0();
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  v4[9] = v6;
  uint64_t v8 = malloc(*(void *)(v6 + 64));
  v4[10] = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v8, a2, v5);
  v4[11] = sub_24103A218(v4);
  v4[12] = sub_24103A0AC(v4 + 4, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  return sub_241039A9C;
}

void sub_241039CE0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  unint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  id v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);

  free(v1);
}

void (*sub_241039D78(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  void v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_241062644(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_241039EA8;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_241065784();
      goto LABEL_7;
    }
    sub_241063568(v14, a3 & 1);
    unint64_t v18 = sub_241062644(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_2411605E0();
  uint64_t result = (void (*)(uint64_t **))sub_2411618E0();
  __break(1u);
  return result;
}

void sub_241039EA8(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_24103A248(*a1, *((unsigned char *)*a1 + 32), (void *)(*a1)[2], (*a1)[3], (*a1)[1]);
  swift_bridgeObjectRelease();

  free(v1);
}

void (*sub_241039EF8(void *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  void v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_241062644(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_24103A028;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_241065E94();
      goto LABEL_7;
    }
    sub_241063C64(v14, a3 & 1);
    unint64_t v18 = sub_241062644(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_2411605E0();
  uint64_t result = (void (*)(uint64_t **, uint64_t))sub_2411618E0();
  __break(1u);
  return result;
}

void sub_24103A028(uint64_t **a1, uint64_t a2)
{
}

void sub_24103A054(uint64_t **a1, uint64_t a2, void (*a3)(uint64_t, char *, uint64_t, uint64_t), void (*a4)(uint64_t, void))
{
  uint64_t v4 = *a1;
  sub_24103A380(*a1, *((unsigned char *)*a1 + 32), (void *)(*a1)[2], (*a1)[3], (*a1)[1], a3, a4);
  swift_bridgeObjectRelease();

  free(v4);
}

void (*sub_24103A0AC(void *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  void v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_241062644(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_24103A028;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_241065EBC();
      goto LABEL_7;
    }
    sub_241063C8C(v14, a3 & 1);
    unint64_t v18 = sub_241062644(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_2411605E0();
  uint64_t result = (void (*)(uint64_t **, uint64_t))sub_2411618E0();
  __break(1u);
  return result;
}

uint64_t (*sub_24103A1DC(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_24103A20C;
}

uint64_t sub_24103A20C(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t (*sub_24103A218(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_24103BCB4;
}

uint64_t sub_24103A248(uint64_t *a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_2411605E0();
  MEMORY[0x270FA5388](v10);
  BOOL v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  if (v14)
  {
    uint64_t v15 = *a3;
    if (a2)
    {
      *(void *)(*(void *)(v15 + 56) + 8 * a4) = v14;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 16))(v13, a5);
      sub_241065324(a4, v13, v14, v15);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_2410E85A4(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_24103A380(uint64_t *a1, char a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, char *, uint64_t, uint64_t), void (*a7)(uint64_t, void))
{
  uint64_t v14 = sub_2411605E0();
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  if (v18)
  {
    uint64_t v19 = *a3;
    if (a2)
    {
      *(void *)(*(void *)(v19 + 56) + 8 * a4) = v18;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 16))(v17, a5);
      a6(a4, v17, v18, v19);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    a7(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_24103A4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = *a4;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_24100B740;
  return sub_24103675C(a1, a2, a3, v14, a5, a6, a7);
}

uint64_t sub_24103A5B0()
{
  sub_2410346F4(0);
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(*(void *)(v1 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v7 = v0 + v4;
  uint64_t v8 = sub_2411605E0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v7 + *(int *)(v2 + 44), v8);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24103A6EC(uint64_t a1)
{
  sub_2410346F4(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  unint64_t v6 = (*(void *)(*(void *)(v4 - 8) + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1 + 4;
  uint64_t v10 = *(uint64_t *)((char *)v1 + v6);
  uint64_t v11 = (uint64_t)v1 + v5;
  uint64_t v12 = *(uint64_t *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  BOOL v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *BOOL v13 = v2;
  v13[1] = sub_24100B740;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_268CF0680
                                                                                                + dword_268CF0680);
  return v14(a1, v7, v8, v9, v11, v10, v12);
}

void sub_24103A83C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_24103BA70(255, &qword_26B006F08, type metadata accessor for MedicationDaySummaryViewModelChange, MEMORY[0x263F8D488]);
    uint64_t v7 = v6;
    uint64_t v8 = sub_241027EA8(255, (unint64_t *)&qword_26B0073B0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_24103A8F8()
{
  sub_2410346F4(0);
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  uint64_t v7 = v0 + v4;
  uint64_t v8 = sub_2411605E0();
  unint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v7 + *(int *)(v2 + 44), v8);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24103AA08()
{
  sub_2410346F4(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_2410380E8(v3, v4);
}

uint64_t sub_24103AA6C()
{
  sub_2410346F4(0);
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 25) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(*(void *)(v1 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  uint64_t v7 = v0 + v4;
  uint64_t v8 = sub_2411605E0();
  unint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v7 + *(int *)(v2 + 44), v8);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24103AB98()
{
  sub_2410346F4(0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  char v5 = *(unsigned char *)(v0 + 24);
  unint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241037C78(v4, v5, v0 + v3, v6);
}

void sub_24103AC2C(uint64_t a1)
{
}

uint64_t sub_24103AC74()
{
  return sub_2410365D8(&qword_26B006948, MEMORY[0x263F07960]);
}

uint64_t sub_24103ACA8(uint64_t a1, char *a2)
{
  uint64_t v94 = (void (*)(unint64_t, uint64_t))a2;
  sub_241036620();
  uint64_t v92 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v82 = (char *)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v81 = (char *)v71 - v7;
  sub_2410346F4(0);
  uint64_t v9 = v8;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v79 = (void (*)(char *, char *, uint64_t))((char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v78 = (char *)v71 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v91 = (uint64_t)v71 - v14;
  uint64_t v15 = sub_2411605E0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v90 = (char *)v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  char v77 = (char *)v71 - v20;
  MEMORY[0x270FA5388](v19);
  unint64_t v76 = (char *)v71 - v21;
  sub_24103BA70(0, (unint64_t *)&unk_268CF09B0, MEMORY[0x263F090E8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v93 = (char *)v71 - v23;
  sub_24103B5D8(0);
  uint64_t v25 = v24 - 8;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241036570(a1, (uint64_t)v27, (uint64_t (*)(void))sub_2410346F4);
  uint64_t v28 = &v27[*(int *)(v25 + 44)];
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v29(v28, a1, v15);
  uint64_t v80 = v9;
  uint64_t v30 = *(int *)(v9 + 36);
  uint64_t v83 = v27;
  uint64_t v31 = &v27[v30];
  uint64_t v32 = sub_2410365D8(&qword_268CF1BC0, MEMORY[0x263F090E8]);
  if (sub_2411606E0())
  {
    uint64_t v33 = *(char **)(v16 + 56);
LABEL_12:
    uint64_t v70 = (uint64_t)v83;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v33)(v93, 1, 1, v15);
    return sub_24103B8B0(v70, (uint64_t (*)(void))sub_24103B5D8);
  }
  else
  {
    uint64_t v34 = v82;
    uint64_t v73 = v32;
    unint64_t v88 = v29;
    uint64_t v89 = (char *)(v16 + 16);
    v71[1] = v2;
    uint64_t v84 = (uint64_t *)((char *)v94 + *(void *)(*(void *)v94 + 128));
    uint64_t v87 = (void (**)(char *, char *, uint64_t))(v16 + 32);
    uint64_t v85 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v72 = v16;
    uint64_t v75 = (char **)(v16 + 56);
    uint64_t v95 = v28;
    char v74 = v31;
    while (1)
    {
      uint64_t v39 = (void (*)(char *, char *, uint64_t))v88;
      uint64_t v38 = v89;
      v88(v93, (uint64_t)v28, v15);
      uint64_t v40 = sub_24103473C();
      uint64_t v41 = v83;
      uint64_t v94 = (void (*)(unint64_t, uint64_t))v40;
      if ((sub_2411606C0() & 1) == 0) {
        break;
      }
      uint64_t v42 = v92;
      uint64_t v43 = v31;
      uint64_t v44 = v81;
      uint64_t v45 = &v81[*(int *)(v92 + 48)];
      v39(v81, v41, v15);
      uint64_t v86 = v45;
      v39(v45, v43, v15);
      uint64_t v46 = &v34[*(int *)(v42 + 48)];
      v39(v34, v44, v15);
      v39(v46, v45, v15);
      uint64_t v47 = (char *)*v87;
      uint64_t v48 = (uint64_t)v78;
      (*v87)(v78, v34, v15);
      uint64_t v49 = (char *)*v85;
      (*v85)(v46, v15);
      char v50 = &v34[*(int *)(v92 + 48)];
      ((void (*)(char *, char *, uint64_t))v47)(v34, v44, v15);
      ((void (*)(char *, char *, uint64_t))v47)(v50, v86, v15);
      uint64_t v51 = v48 + *(int *)(v80 + 36);
      uint64_t v86 = v47;
      ((void (*)(uint64_t, char *, uint64_t))v47)(v51, v50, v15);
      uint64_t v38 = v49;
      ((void (*)(char *, uint64_t))v49)(v34, v15);
      uint64_t v52 = v91;
      sub_2410366BC(v48, v91, (uint64_t (*)(void))sub_2410346F4);
      uint64_t v53 = v95;
      uint64_t v54 = v52;
      LOBYTE(v52) = sub_2411606C0();
      char v55 = v53;
      uint64_t v28 = v77;
      v88(v77, (uint64_t)v55, v15);
      uint64_t v39 = v79;
      sub_241036570(v54, (uint64_t)v79, (uint64_t (*)(void))sub_2410346F4);
      if ((v52 & 1) == 0) {
        goto LABEL_14;
      }
      char v56 = sub_2411606A0();
      sub_24103B8B0((uint64_t)v39, (uint64_t (*)(void))sub_2410346F4);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v38)(v28, v15);
      if ((v56 & 1) == 0) {
        goto LABEL_15;
      }
      sub_24103B8B0(v91, (uint64_t (*)(void))sub_2410346F4);
      uint64_t v96 = 1;
      sub_2410365D8((unint64_t *)&qword_268CF09A0, MEMORY[0x263F090E8]);
      char v58 = v76;
      uint64_t v59 = v95;
      sub_241161450();
      ((void (*)(char *, uint64_t))v38)(v59, v15);
      uint64_t v94 = (void (*)(unint64_t, uint64_t))v38;
      unint64_t v60 = v86;
      ((void (*)(char *, char *, uint64_t))v86)(v59, v58, v15);
      uint64_t v33 = *v75;
      uint64_t v61 = v93;
      ((void (*)(char *, void, uint64_t, uint64_t))*v75)(v93, 0, 1, v15);
      uint64_t v62 = (uint64_t)v90;
      ((void (*)(char *, char *, uint64_t))v60)(v90, v61, v15);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      unint64_t v63 = sub_241062644(v62);
      char v65 = v64;
      swift_bridgeObjectRelease();
      uint64_t v36 = 0;
      if (v65)
      {
        uint64_t v86 = v33;
        char v66 = v94;
        unint64_t v67 = v84;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v69 = *v67;
        uint64_t v97 = *v67;
        *unint64_t v67 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_241065498();
          uint64_t v69 = v97;
        }
        v66(*(void *)(v69 + 48) + *(void *)(v72 + 72) * v63, v15);
        uint64_t v35 = v97;
        uint64_t v36 = *(void *)(*(void *)(v97 + 56) + 32 * v63);
        sub_2410E82AC(v63, v97);
        *unint64_t v67 = v35;
        swift_bridgeObjectRelease();
        uint64_t v33 = v86;
      }
      swift_endAccess();
      sub_24103B71C(v36);
      v94((unint64_t)v90, v15);
      uint64_t v28 = v95;
      uint64_t v31 = v74;
      char v37 = sub_2411606E0();
      uint64_t v34 = v82;
      if (v37) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    sub_24103B8B0((uint64_t)v39, (uint64_t (*)(void))sub_2410346F4);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v38)(v28, v15);
LABEL_15:
    __break(1u);
  }
  return result;
}

void sub_24103B5D8(uint64_t a1)
{
}

unint64_t sub_24103B620()
{
  unint64_t result = qword_268CF06A8;
  if (!qword_268CF06A8)
  {
    sub_2410346F4(255);
    sub_2410365D8((unint64_t *)&qword_268CF09A0, MEMORY[0x263F090E8]);
    sub_24103B6C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF06A8);
  }
  return result;
}

unint64_t sub_24103B6C8()
{
  unint64_t result = qword_268CF06B0;
  if (!qword_268CF06B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF06B0);
  }
  return result;
}

uint64_t sub_24103B71C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24103B768()
{
  if (!qword_268CF06C0)
  {
    sub_2411605E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF06C0);
    }
  }
}

void sub_24103B7D4()
{
  if (!qword_268CF06D0)
  {
    sub_2411605E0();
    sub_24103BA70(255, &qword_26B006F08, type metadata accessor for MedicationDaySummaryViewModelChange, MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF06D0);
    }
  }
}

uint64_t sub_24103B878(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_24103B8B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24103B910(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_24103BA70(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_24103B990(uint64_t a1)
{
}

void sub_24103B9C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_2411605E0();
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_24103BA3C(uint64_t a1)
{
}

void sub_24103BA70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_24103BAD4(unint64_t result)
{
  if (result >= 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24103BB24()
{
  if (!qword_26B006AC0[0])
  {
    sub_241027EA8(255, (unint64_t *)&qword_26B006CF8);
    unint64_t v0 = type metadata accessor for ObserverSet();
    if (!v1) {
      atomic_store(v0, qword_26B006AC0);
    }
  }
}

void sub_24103BB90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_24103BC10()
{
  return sub_2410365D8(&qword_26B006D48, (void (*)(uint64_t))type metadata accessor for MedicationDaySummaryViewModelProviderDataSource);
}

uint64_t sub_24103BC44(uint64_t a1)
{
  return sub_241033874(a1);
}

void sub_24103BC4C()
{
  if (!qword_268CF06E8)
  {
    sub_2410346F4(255);
    unint64_t v0 = sub_24115FC60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF06E8);
    }
  }
}

uint64_t sub_24103BCC0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_24115F790();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v38 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v39 = (char *)&v35 - v7;
  uint64_t v8 = sub_24115E2A0();
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24115E2B0();
  uint64_t v37 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(a1, sel_identifier);
  uint64_t v15 = sub_241160730();
  uint64_t v17 = v16;

  if (v15 == 0xD000000000000036 && v17 == 0x8000000241163030)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v19 = (void *)sub_24115E280();
    sub_24115E290();
    id v20 = objc_allocWithZone((Class)type metadata accessor for MedicationsRoutingDetailViewController());
    uint64_t v21 = (uint64_t)sub_24104EF9C(v19, (uint64_t)v44, 3);

    return v21;
  }
  char v18 = sub_241161890();
  swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_5;
  }
  uint64_t v46 = 0;
  memset(v45, 0, sizeof(v45));
  sub_24103C33C((uint64_t)v45, (uint64_t)&v42);
  if (v43)
  {
    sub_241027314(&v42, (uint64_t)v44);
    sub_24101A6BC(v44, v44[3]);
    sub_24115E590();
    sub_24115E220();
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v10, a2, v8);
    id v30 = objc_allocWithZone((Class)sub_24115E350());
    id v31 = a1;
    uint64_t v21 = sub_24115E340();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v11);
    sub_24103C408((uint64_t)v45);
    sub_24101F178((uint64_t)v44);
  }
  else
  {
    sub_24103C408((uint64_t)&v42);
    uint64_t v22 = v39;
    sub_24115F760();
    id v23 = a1;
    uint64_t v24 = sub_24115F780();
    os_log_type_t v25 = sub_241160D30();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412290;
      v44[0] = v23;
      id v28 = v23;
      sub_241161430();
      *uint64_t v27 = v23;

      _os_log_impl(&dword_241007000, v24, v25, "[MedicationsHealthAppPluginDelegate] No custom detail view controller or configuration provided for %@", v26, 0xCu);
      sub_24103C464();
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v27, -1, -1);
      uint64_t v29 = v26;
      uint64_t v22 = v39;
      MEMORY[0x2456180C0](v29, -1, -1);
    }
    else
    {
    }
    uint64_t v33 = v40;
    uint64_t v32 = v41;

    (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v32);
    sub_24103C408((uint64_t)v45);
    return 0;
  }
  return v21;
}

uint64_t sub_24103C33C(uint64_t a1, uint64_t a2)
{
  sub_24103C3A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_24103C3A0()
{
  if (!qword_268CF06F8)
  {
    sub_241020840(255, &qword_268CF0700);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF06F8);
    }
  }
}

uint64_t sub_24103C408(uint64_t a1)
{
  sub_24103C3A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24103C464()
{
  if (!qword_26B0071F0)
  {
    sub_24103C4BC();
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0071F0);
    }
  }
}

unint64_t sub_24103C4BC()
{
  unint64_t result = qword_26B007218;
  if (!qword_26B007218)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B007218);
  }
  return result;
}

uint64_t type metadata accessor for MedicationsTimeZoneItem()
{
  uint64_t result = qword_268CF0718;
  if (!qword_268CF0718) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24103C548()
{
  return swift_initClassMetadata2();
}

void sub_24103C5A0()
{
}

uint64_t sub_24103C5D0()
{
  return swift_release();
}

uint64_t sub_24103C5E0()
{
  sub_24115E0B0();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24103C630()
{
  return type metadata accessor for MedicationsTimeZoneItem();
}

uint64_t sub_24103C638()
{
  return *(unsigned __int8 *)(v0 + qword_268CF0708);
}

uint64_t sub_24103C648()
{
  return 1;
}

uint64_t sub_24103C654(uint64_t a1)
{
  *(void *)(v1 + qword_268CF0710) = a1;
  swift_retain();
  swift_retain();
  *(unsigned char *)(v1 + qword_268CF0708) = sub_24115EF70() & 1;
  swift_release();
  if (qword_26B007268 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24115C960();

  return MEMORY[0x270F339E8](0, v3, v2, 0, 0, 0);
}

uint64_t sub_24103C758(char a1)
{
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F720();
  uint64_t v6 = sub_24115F780();
  os_log_type_t v7 = sub_241160D50();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = v2;
    uint64_t v9 = v8;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v19 = v16;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = sub_241161A00();
    uint64_t v18 = sub_24101F0A4(v10, v11, &v19);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    if (a1) {
      uint64_t v12 = 28271;
    }
    else {
      uint64_t v12 = 6710895;
    }
    if (a1) {
      unint64_t v13 = 0xE200000000000000;
    }
    else {
      unint64_t v13 = 0xE300000000000000;
    }
    uint64_t v18 = sub_24101F0A4(v12, v13, &v19);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v6, v7, "[%s]: Notification setting switch toggled to %s", (uint8_t *)v9, 0x16u);
    uint64_t v14 = v16;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v14, -1, -1);
    MEMORY[0x2456180C0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_24115EF80();
}

uint64_t sub_24103C9E0(void *a1, void *a2)
{
  sub_2411615F0();
  swift_bridgeObjectRelease();
  id v4 = a1;
  id v5 = objc_msgSend(v4, sel_description);
  sub_241160730();

  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  id v6 = a2;
  id v7 = objc_msgSend(v6, sel_description);
  sub_241160730();

  sub_241160860();
  swift_bridgeObjectRelease();
  return 0x6E65764565736F64;
}

uint64_t sub_24103CB0C()
{
  if (sub_2411612E0()) {
    return sub_2411612E0() & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_24103CB84()
{
  return sub_24103C9E0(*v0, v0[1]);
}

uint64_t sub_24103CB8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v46 = a3;
  uint64_t v7 = sub_24115D1C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_24115F790();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = *a1;
  sub_24115F740();
  uint64_t v16 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v47 = v7;
  v16(v10, a2, v7);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_24115F780();
  os_log_type_t v18 = sub_241160D50();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v45 = v11;
    uint64_t v21 = v20;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v49 = v44;
    *(_DWORD *)uint64_t v21 = 136315906;
    os_log_t v43 = v17;
    uint64_t v22 = sub_241161A00();
    uint64_t v46 = a2;
    uint64_t v48 = sub_24101F0A4(v22, v23, &v49);
    int v40 = v19;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v24 = (void *)sub_24115D170();
    uint64_t v25 = sub_24115CF00();
    uint64_t v41 = v12;
    long long v42 = v14;
    uint64_t v26 = v25;
    uint64_t v27 = a4;
    unint64_t v29 = v28;

    uint64_t v48 = sub_24101F0A4(v26, v29, &v49);
    sub_241161430();
    a4 = v27;
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v47);
    *(_WORD *)(v21 + 22) = 2048;
    uint64_t v30 = *(void *)(v15 + 16);
    swift_bridgeObjectRelease();
    uint64_t v48 = v30;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 2080;
    uint64_t v48 = v15;
    sub_24102AE70(0, &qword_26B005D10, (uint64_t)&type metadata for MedicationDoseEventDetails, MEMORY[0x263F8D488]);
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_2411607A0();
    uint64_t v48 = sub_24101F0A4(v31, v32, &v49);
    a2 = v46;
    sub_241161430();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v33 = v43;
    _os_log_impl(&dword_241007000, v43, (os_log_type_t)v40, "[%s]_%s: Received %ld medications, emitting generator for: %s", (uint8_t *)v21, 0x2Au);
    uint64_t v34 = v44;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v34, -1, -1);
    MEMORY[0x2456180C0](v21, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v42, v45);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v47);

    swift_bridgeObjectRelease_n();
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v35 = sub_24115D1E0();
  uint64_t v36 = MEMORY[0x263F456B8];
  a4[3] = v35;
  a4[4] = v36;
  uint64_t v37 = sub_2410277C0(a4);
  return sub_2410E01F8(a2, v15, (uint64_t)v37);
}

uint64_t sub_24103CFF4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v48 = a5;
  os_log_t v49 = a4;
  uint64_t v55 = a3;
  char v56 = a6;
  sub_241043A68(0, &qword_26B005BB0, MEMORY[0x263EFDDF8]);
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v52 = &v46[-v9];
  uint64_t v10 = sub_24115D1C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_24115F790();
  uint64_t v50 = *(void *)(v14 - 8);
  uint64_t v51 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = &v46[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_241043AEC();
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = &v46[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v28) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v23 = sub_24103D644(a2, v22);
    sub_24115D160();
    if (sub_24115D3D0())
    {
      uint64_t v24 = sub_24103DAA4(v22, a2);
      uint64_t v57 = v23;
      uint64_t v58 = v24;
      sub_24102B8A8(0, &qword_26B005AE0, MEMORY[0x263EFDCF0]);
      sub_24102B93C();
      sub_24115FF00();
      sub_241019D40(&qword_26B0054D0, (void (*)(uint64_t))sub_241043AEC);
      uint64_t v25 = sub_24115FE20();
      swift_release();
      swift_release();
      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v19 + 8))(v21, v18);
    }
    else
    {
      uint64_t v58 = v23;
      sub_24102B8A8(0, &qword_26B005AE0, MEMORY[0x263EFDCF0]);
      sub_24102B93C();
      uint64_t v25 = sub_24115FE20();
      uint64_t result = swift_release();
    }
    uint64_t v27 = v56;
    goto LABEL_12;
  }
  sub_24115F740();
  uint64_t v29 = v11;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  uint64_t v30 = sub_24115F780();
  os_log_type_t v31 = sub_241160D50();
  int v32 = v31;
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v33 = swift_slowAlloc();
    os_log_t v49 = v30;
    uint64_t v34 = v33;
    uint64_t v55 = swift_slowAlloc();
    uint64_t v58 = v55;
    *(_DWORD *)uint64_t v34 = 136315394;
    int v47 = v32;
    uint64_t v35 = sub_241161A00();
    uint64_t v57 = sub_24101F0A4(v35, v36, &v58);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v37 = (void *)sub_24115D170();
    uint64_t v38 = sub_24115CF00();
    unint64_t v40 = v39;

    uint64_t v57 = sub_24101F0A4(v38, v40, &v58);
    sub_241161430();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v29 + 8))(v13, v10);
    os_log_t v41 = v49;
    _os_log_impl(&dword_241007000, v49, (os_log_type_t)v47, "[%s]_%s: No dose events found, returning empty array for no data snippet", (uint8_t *)v34, 0x16u);
    uint64_t v42 = v55;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v42, -1, -1);
    MEMORY[0x2456180C0](v34, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v29 + 8))(v13, v10);
  }
  (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v16, v51);
  uint64_t v27 = v56;
  uint64_t v44 = v53;
  uint64_t v43 = v54;
  uint64_t v45 = v52;
  uint64_t v58 = MEMORY[0x263F8EE78];
  sub_24102AE70(0, &qword_26B005D10, (uint64_t)&type metadata for MedicationDoseEventDetails, MEMORY[0x263F8D488]);
  sub_24115FCC0();
  sub_241043B78();
  uint64_t v25 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v44 + 8))(v45, v43);
LABEL_12:
  *uint64_t v27 = v25;
  return result;
}

uint64_t sub_24103D644(uint64_t a1, uint64_t a2)
{
  v27[0] = a1;
  uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_24101AEF4(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v30 = (char *)v27 - v5;
  uint64_t v6 = sub_24115D130();
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24115D1C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241044238();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v31 = v13;
  uint64_t v32 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v18 = (v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v17, v12, v9);
  *(void *)(v19 + v18) = v27[1];
  sub_24102B8A8(0, &qword_26B005BF0, MEMORY[0x263EFDE20]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_24115FCF0();
  uint64_t v20 = (void *)sub_24115D170();
  sub_24101ABDC(v20, (uint64_t)v8);

  uint64_t v21 = (void *)sub_24115D1A0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v29);
  id v34 = v21;
  uint64_t v22 = sub_241160EB0();
  uint64_t v23 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v30, 1, 1, v22);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  sub_2410442F0();
  sub_24102A8F8();
  sub_24115FF10();
  sub_24102A960(v23, (unint64_t *)&qword_26B0071C0, v33);

  swift_release();
  sub_241019D40(&qword_26B0059D8, (void (*)(uint64_t))sub_241044238);
  uint64_t v24 = v31;
  uint64_t v25 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v24);
  return v25;
}

uint64_t sub_24103DAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a1;
  uint64_t v48 = sub_24115D1C0();
  uint64_t v3 = *(void *)(v48 - 8);
  uint64_t v47 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v48);
  uint64_t v44 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_24101AEF4(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v38 - v6;
  uint64_t v8 = sub_24115D130();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_241011390;
  os_log_t v41 = sub_241043BEC;
  sub_24102BF8C(0, (unint64_t *)&qword_26B006160, (uint64_t (*)(uint64_t))sub_241011390, sub_241043BEC, MEMORY[0x263EFDCA8]);
  uint64_t v43 = v12;
  uint64_t v45 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v38 - v13;
  sub_241043C20();
  uint64_t v46 = v15;
  uint64_t v49 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241043D2C();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v50 = v18;
  uint64_t v51 = v19;
  MEMORY[0x270FA5388](v18);
  unint64_t v40 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_24115F6D0();
  uint64_t v21 = (void *)sub_24115D170();
  sub_24101ABDC(v21, (uint64_t)v11);

  uint64_t v22 = (void *)sub_24115D1A0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v54 = v22;
  uint64_t v23 = sub_241160EB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 1, 1, v23);
  sub_241011390();
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  sub_241043BEC();
  sub_24102A8F8();
  sub_24115FF10();
  sub_24102A960((uint64_t)v7, (unint64_t *)&qword_26B0071C0, v39);

  swift_release();
  uint64_t v24 = v44;
  uint64_t v25 = a2;
  uint64_t v26 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v44, v25, v48);
  unint64_t v27 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v28 = (v47 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v52;
  uint64_t v31 = v53;
  *(void *)(v29 + 16) = v53;
  *(void *)(v29 + 24) = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v29 + v27, v24, v26);
  *(void *)(v29 + v28) = v31;
  sub_24102AE70(0, &qword_26B005D10, (uint64_t)&type metadata for MedicationDoseEventDetails, MEMORY[0x263F8D488]);
  sub_2410449B4(&qword_26B006158, (unint64_t *)&qword_26B006160, (uint64_t (*)(uint64_t))v42, v41);
  swift_bridgeObjectRetain();
  uint64_t v32 = v43;
  sub_24115FE30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v32);
  sub_241019D40(&qword_26B0060D8, (void (*)(uint64_t))sub_241043C20);
  sub_241043F48();
  uint64_t v33 = v40;
  uint64_t v34 = v46;
  sub_24115FF30();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v17, v34);
  sub_241019D40(&qword_26B006108, (void (*)(uint64_t))sub_241043D2C);
  uint64_t v35 = v50;
  uint64_t v36 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v35);
  return v36;
}

uint64_t sub_24103E12C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v66 = a5;
  uint64_t v75 = a4;
  uint64_t v8 = sub_24115F790();
  uint64_t v70 = *(void *)(v8 - 8);
  uint64_t v71 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v72 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_24115D1C0();
  uint64_t v10 = *(void *)(v68 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v68);
  unint64_t v67 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v63 = (char *)&v60 - v13;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v62 = (uint64_t (*)(uint64_t, char))v14;
  uint64_t v15 = self;
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  id ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  id v17 = objc_msgSend(ObjCClassFromMetadata, sel__typeIdentifier);
  id v18 = objc_msgSend(v15, sel_predicateForUserDomainConceptsWithTypeIdentifier_, v17);

  unint64_t v69 = a3;
  uint64_t v19 = sub_241124738(a3);
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t v73 = v10;
  if (v20)
  {
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_241161660();
    uint64_t v22 = v19 + 40;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = (void *)sub_2411606F0();
      id v24 = objc_msgSend(v15, sel_predicateForUserDomainConceptsWithSemanticIdentifier_, v23);
      swift_bridgeObjectRelease();

      sub_241161640();
      sub_241161670();
      sub_241161680();
      sub_241161650();
      v22 += 16;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    uint64_t v10 = v73;
    uint64_t v21 = MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_241024708(0, &qword_26B007318);
  uint64_t v25 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  uint64_t v26 = self;
  id v27 = objc_msgSend(v26, sel_orPredicateWithSubpredicates_, v25);

  sub_24102AE70(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_24116B210;
  *(void *)(v28 + 32) = v18;
  *(void *)(v28 + 40) = v27;
  aBlock[0] = v28;
  sub_2411609C0();
  id v65 = v18;
  id v64 = v27;
  uint64_t v29 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  id v74 = objc_msgSend(v26, sel_andPredicateWithSubpredicates_, v29);

  aBlock[0] = v21;
  sub_241043A68(0, &qword_26B004150, MEMORY[0x263F459D0]);
  swift_allocObject();
  uint64_t v30 = sub_24115D450();
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v31 = v63;
  uint64_t v32 = v68;
  v61(v63, v75, v68);
  unint64_t v33 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v34 = (v11 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v36 + v33, v31, v32);
  unint64_t v37 = v69;
  *(void *)(v36 + v34) = v69;
  uint64_t v38 = (uint64_t (**)(uint64_t, char))(v36 + v35);
  unint64_t v39 = v62;
  *uint64_t v38 = sub_24102A314;
  v38[1] = v39;
  *(void *)(v36 + ((v35 + 23) & 0xFFFFFFFFFFFFFFF8)) = v66;
  id v40 = objc_allocWithZone(MEMORY[0x263F0A858]);
  unint64_t v79 = sub_241044628;
  uint64_t v80 = v36;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_241013250;
  unint64_t v78 = &unk_26F555360;
  os_log_t v41 = _Block_copy(aBlock);
  unint64_t v63 = (char *)v30;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v42 = (uint64_t (*)(uint64_t, char))objc_msgSend(v40, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, v74, 0, 0, 0, v41);
  _Block_release(v41);
  swift_release();
  uint64_t v43 = v72;
  sub_24115F740();
  uint64_t v44 = v67;
  v61(v67, v75, v32);
  swift_bridgeObjectRetain_n();
  uint64_t v45 = sub_24115F780();
  int v46 = sub_241160D50();
  if (os_log_type_enabled(v45, (os_log_type_t)v46))
  {
    LODWORD(v61) = v46;
    uint64_t v62 = v42;
    uint64_t v47 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    aBlock[0] = v60;
    *(_DWORD *)uint64_t v47 = 136315906;
    uint64_t v48 = sub_241161A00();
    uint64_t v76 = sub_24101F0A4(v48, v49, aBlock);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    uint64_t v50 = (void *)sub_24115D170();
    uint64_t v51 = sub_24115CF00();
    unint64_t v53 = v52;

    uint64_t v76 = sub_24101F0A4(v51, v53, aBlock);
    sub_241161430();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v44, v32);
    *(_WORD *)(v47 + 22) = 2048;
    if (v37 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v54 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v76 = v54;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 32) = 2080;
    uint64_t v76 = v37;
    sub_241043774(0, &qword_26B005DB8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F8D488]);
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_2411607A0();
    uint64_t v76 = sub_24101F0A4(v55, v56, aBlock);
    sub_241161430();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v45, (os_log_type_t)v61, "[%s]_%s: Querying for concepts associated with %ld dose events: %s", (uint8_t *)v47, 0x2Au);
    uint64_t v57 = v60;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v57, -1, -1);
    MEMORY[0x2456180C0](v47, -1, -1);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v71);
    uint64_t v42 = v62;
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v44, v32);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v43, v71);
  }
  sub_24115D150();
  sub_24101A6BC(aBlock, (uint64_t)v78);
  uint64_t v58 = (void *)sub_24115D0B0();
  objc_msgSend(v58, sel_executeQuery_, v42);

  swift_release();
  return sub_24101F178((uint64_t)aBlock);
}

uint64_t sub_24103EA88(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(uint64_t, void), uint64_t a10, uint64_t a11)
{
  uint64_t v139 = a7;
  unint64_t v140 = a8;
  int v134 = a4;
  uint64_t v13 = a10;
  id v135 = a2;
  uint64_t v136 = a11;
  uint64_t v133 = a9;
  uint64_t v14 = sub_24115D1C0();
  os_log_t v15 = *(os_log_t *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v129 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v121 - v18;
  uint64_t v20 = sub_24115F790();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v137 = v20;
  uint64_t v138 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  id v24 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v128 = (char *)&v121 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  unint64_t v131 = (uint64_t *)((char *)&v121 - v28);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v121 - v29;
  uint64_t v132 = a10;
  if (!a5) {
    goto LABEL_6;
  }
  id v31 = a5;
  sub_24115F740();
  ((void (*)(char *, uint64_t, uint64_t))v15[2].isa)(v19, v139, v14);
  id v32 = a5;
  swift_bridgeObjectRetain();
  id v33 = a5;
  swift_bridgeObjectRetain();
  os_log_t v34 = v15;
  unint64_t v35 = sub_24115F780();
  int v36 = sub_241160D30();
  if (os_log_type_enabled(v35, (os_log_type_t)v36))
  {
    int v123 = v36;
    char v124 = (uint64_t *)v35;
    uint64_t v125 = v30;
    long long v127 = v24;
    uint64_t v130 = a6;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v122 = swift_slowAlloc();
    v142[0] = v122;
    *(_DWORD *)uint64_t v37 = 136315906;
    uint64_t v38 = sub_241161A00();
    uint64_t v141 = sub_24101F0A4(v38, v39, v142);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2080;
    id v40 = (void *)sub_24115D170();
    uint64_t v41 = sub_24115CF00();
    unint64_t v43 = v42;

    uint64_t v141 = sub_24101F0A4(v41, v43, v142);
    sub_241161430();
    swift_bridgeObjectRelease();
    os_log_t v126 = v34;
    uint64_t v44 = v19;
    uint64_t v45 = v14;
    ((void (*)(char *, uint64_t))v34[1].isa)(v44, v14);
    *(_WORD *)(v37 + 22) = 2048;
    if (v140 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v46 = *(void *)((v140 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    id v24 = v127;
    uint64_t v48 = v124;
    uint64_t v47 = v125;
    swift_bridgeObjectRelease();
    uint64_t v141 = v46;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 32) = 2080;
    uint64_t v141 = (uint64_t)a5;
    id v49 = a5;
    sub_241020840(0, (unint64_t *)&qword_26B0073B0);
    uint64_t v50 = sub_241160770();
    uint64_t v141 = sub_24101F0A4(v50, v51, v142);
    sub_241161430();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v48, (os_log_type_t)v123, "[%s]_%s: Error when querying for concepts for the %ld dose events: %s", (uint8_t *)v37, 0x2Au);
    uint64_t v52 = v122;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v52, -1, -1);
    MEMORY[0x2456180C0](v37, -1, -1);

    (*(void (**)(char *, uint64_t))(v138 + 8))(v47, v137);
    a6 = v130;
    uint64_t v13 = v132;
    uint64_t v14 = v45;
    os_log_t v15 = v126;
LABEL_6:
    id v53 = v135;
    if (!v135) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();

  ((void (*)(char *, uint64_t))v34[1].isa)(v19, v14);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v138 + 8))(v30, v137);
  os_log_t v15 = v34;
  id v53 = v135;
  if (!v135) {
    goto LABEL_13;
  }
LABEL_9:
  self;
  uint64_t v54 = swift_dynamicCastObjCClass();
  if (v54)
  {
    uint64_t v55 = (void *)v54;
    id v56 = v53;
    uint64_t v57 = sub_241044050(v140, v55);
    uint64_t v58 = (uint64_t)v55;
    if (!v57)
    {
      uint64_t v130 = a6;
      uint64_t v109 = v128;
      sub_24115F740();
      id v110 = v56;
      unint64_t v111 = sub_24115F780();
      os_log_type_t v112 = sub_241160D30();
      BOOL v113 = os_log_type_enabled(v111, v112);
      uint64_t v65 = v139;
      if (v113)
      {
        uint64_t v114 = swift_slowAlloc();
        unint64_t v131 = (void *)swift_slowAlloc();
        id v135 = (id)swift_slowAlloc();
        v142[0] = (uint64_t)v135;
        *(_DWORD *)uint64_t v114 = 136315394;
        uint64_t v115 = sub_241161A00();
        uint64_t v141 = sub_24101F0A4(v115, v116, v142);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v114 + 12) = 2112;
        uint64_t v141 = (uint64_t)v55;
        id v117 = v110;
        uint64_t v13 = v132;
        sub_241161430();
        uint64_t v118 = v131;
        *unint64_t v131 = v55;

        _os_log_impl(&dword_241007000, v111, v112, "[%s] No associated dose event for queried medication %@", (uint8_t *)v114, 0x16u);
        sub_241043774(0, (unint64_t *)&qword_26B0071F0, (unint64_t *)&qword_26B007218, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v118, -1, -1);
        id v119 = v135;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v119, -1, -1);
        MEMORY[0x2456180C0](v114, -1, -1);

        (*(void (**)(char *, uint64_t))(v138 + 8))(v128, v137);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v138 + 8))(v109, v137);
      }
      a6 = v130;
      goto LABEL_25;
    }
    uint64_t v59 = (void *)v57;
    id v60 = v56;
    id v61 = v59;
    sub_24115F740();
    os_log_t v62 = v15;
    isa = (void (*)(char *, uint64_t, uint64_t))v15[2].isa;
    id v64 = v129;
    uint64_t v65 = v139;
    isa(v129, v139, v14);
    id v66 = v60;
    id v67 = v61;
    unint64_t v131 = v66;
    id v135 = v67;
    uint64_t v68 = sub_24115F780();
    os_log_type_t v69 = sub_241160D10();
    int v70 = v69;
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v130 = a6;
      uint64_t v72 = v71;
      uint64_t v128 = (char *)swift_slowAlloc();
      v142[0] = (uint64_t)v128;
      *(_DWORD *)uint64_t v72 = 136315650;
      os_log_t v126 = v68;
      uint64_t v73 = sub_241161A00();
      LODWORD(v125) = v70;
      uint64_t v141 = sub_24101F0A4(v73, v74, v142);
      char v124 = v142;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2080;
      uint64_t v75 = (void *)sub_24115D170();
      uint64_t v76 = sub_24115CF00();
      long long v127 = v24;
      char v77 = v55;
      uint64_t v78 = v76;
      uint64_t v79 = v14;
      unint64_t v81 = v80;

      uint64_t v141 = sub_24101F0A4(v78, v81, v142);
      sub_241161430();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v62[1].isa)(v64, v79);
      *(_WORD *)(v72 + 22) = 2080;
      id v82 = v131;
      uint64_t v83 = v131;
      id v84 = v135;
      id v85 = v135;
      uint64_t v86 = sub_24103C9E0(v85, v77);
      unint64_t v88 = v87;

      uint64_t v89 = v86;
      uint64_t v58 = (uint64_t)v77;
      uint64_t v141 = sub_24101F0A4(v89, v88, v142);
      sub_241161430();

      uint64_t v65 = v139;
      swift_bridgeObjectRelease();
      os_log_t v90 = v126;
      _os_log_impl(&dword_241007000, v126, (os_log_type_t)v125, "[%s]_%s: Concept returned, details formed, adding to result: %s", (uint8_t *)v72, 0x20u);
      uint64_t v91 = v128;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v91, -1, -1);
      uint64_t v92 = v72;
      a6 = v130;
      MEMORY[0x2456180C0](v92, -1, -1);

      uint64_t v93 = (*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v127, v137);
    }
    else
    {
      ((void (*)(char *, uint64_t))v62[1].isa)(v64, v14);

      id v82 = v131;
      id v84 = v135;

      uint64_t v93 = (*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v24, v137);
    }
    MEMORY[0x270FA5388](v93);
    *(&v121 - 2) = (uint64_t)v84;
    *(&v121 - 1) = v58;
    sub_24115D440();

LABEL_22:
    uint64_t v13 = v132;
LABEL_25:
    char v107 = v134;
    uint64_t v108 = v133;
    return sub_24103F854(v107 & 1, a6, v65, v140, v108, v13);
  }
LABEL_13:
  uint64_t v94 = v131;
  sub_24115F740();
  id v95 = a5;
  swift_bridgeObjectRetain();
  id v96 = a5;
  swift_bridgeObjectRetain();
  uint64_t v97 = sub_24115F780();
  os_log_type_t v98 = sub_241160D30();
  if (os_log_type_enabled(v97, v98))
  {
    uint64_t v130 = a6;
    uint64_t v99 = swift_slowAlloc();
    uint64_t v100 = swift_slowAlloc();
    v142[0] = v100;
    *(_DWORD *)uint64_t v99 = 136315650;
    uint64_t v101 = sub_241161A00();
    uint64_t v141 = sub_24101F0A4(v101, v102, v142);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v99 + 12) = 2048;
    if (v140 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v103 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v103 = *(void *)((v140 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v141 = v103;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v99 + 22) = 2080;
    uint64_t v141 = (uint64_t)a5;
    id v104 = a5;
    sub_241044718();
    uint64_t v105 = sub_241160770();
    uint64_t v141 = sub_24101F0A4(v105, v106, v142);
    sub_241161430();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v97, v98, "[%s] No HKMedicationUserDomainConcept returned for the %ld dose events: error: %s", (uint8_t *)v99, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v100, -1, -1);
    MEMORY[0x2456180C0](v99, -1, -1);

    (*(void (**)(void *, uint64_t))(v138 + 8))(v131, v137);
    uint64_t v65 = v139;
    a6 = v130;
    goto LABEL_22;
  }
  swift_bridgeObjectRelease_n();

  (*(void (**)(void *, uint64_t))(v138 + 8))(v94, v137);
  char v107 = v134;
  uint64_t v108 = v133;
  uint64_t v65 = v139;
  return sub_24103F854(v107 & 1, a6, v65, v140, v108, v13);
}

uint64_t sub_24103F854(char a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(uint64_t, void), uint64_t a6)
{
  uint64_t v43 = a6;
  uint64_t v44 = a5;
  uint64_t v10 = sub_24115D1C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24115F790();
  uint64_t result = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v42 = v16;
    sub_24115D430();
    uint64_t v41 = v47;
    sub_24115F740();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v19 = sub_24115F780();
    int v20 = sub_241160D50();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      int v36 = v20;
      os_log_t v37 = v19;
      uint64_t v38 = a2;
      unint64_t v39 = v18;
      uint64_t v40 = v14;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v47 = v35;
      *(_DWORD *)uint64_t v21 = 136315906;
      uint64_t v22 = sub_241161A00();
      uint64_t v46 = sub_24101F0A4(v22, v23, &v47);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      id v24 = (void *)sub_24115D170();
      uint64_t v25 = sub_24115CF00();
      unint64_t v27 = v26;

      uint64_t v46 = sub_24101F0A4(v25, v27, &v47);
      sub_241161430();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      *(_WORD *)(v21 + 22) = 2048;
      if (a4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_2411616E0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v28 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      os_log_type_t v29 = v36;
      swift_bridgeObjectRelease();
      uint64_t v46 = v28;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 32) = 2080;
      sub_24115D430();
      uint64_t v45 = v46;
      sub_24102AE70(0, &qword_26B005D10, (uint64_t)&type metadata for MedicationDoseEventDetails, MEMORY[0x263F8D488]);
      uint64_t v30 = sub_2411607A0();
      uint64_t v46 = sub_24101F0A4(v30, v31, &v47);
      sub_241161430();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v32 = v37;
      _os_log_impl(&dword_241007000, v37, v29, "[%s]_%s: Query complete for concepts associated with %ld: %s", (uint8_t *)v21, 0x2Au);
      uint64_t v33 = v35;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v33, -1, -1);
      MEMORY[0x2456180C0](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v40);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

      swift_release_n();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v14);
    }
    v44(v41, 0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24103FD08(void **a1, void *a2, void *a3)
{
  uint64_t v5 = *a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2410522B8(0, v5[2] + 1, 1, v5);
    uint64_t v5 = (void *)result;
  }
  unint64_t v10 = v5[2];
  unint64_t v9 = v5[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t result = (uint64_t)sub_2410522B8((void *)(v9 > 1), v10 + 1, 1, v5);
    uint64_t v5 = (void *)result;
  }
  v5[2] = v10 + 1;
  uint64_t v11 = &v5[2 * v10];
  void v11[4] = v6;
  v11[5] = v7;
  *a1 = v5;
  return result;
}

uint64_t sub_24103FDBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, NSObject *a5@<X4>, void *a6@<X8>)
{
  os_log_t v131 = a5;
  uint64_t v132 = a4;
  os_log_t v129 = a3;
  uint64_t v130 = a2;
  id v135 = a6;
  uint64_t v7 = sub_24115D1C0();
  uint64_t v136 = *(void *)(v7 - 8);
  uint64_t v137 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v128 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v121 = (char *)&v121 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v125 = (char *)&v121 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  int v123 = (char *)&v121 - v15;
  MEMORY[0x270FA5388](v14);
  long long v127 = (uint64_t *)((char *)&v121 - v16);
  uint64_t v17 = sub_24115F790();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v133 = v17;
  uint64_t v134 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  char v124 = (char *)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v122 = (char *)&v121 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v121 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  os_log_t v126 = (char *)&v121 - v27;
  MEMORY[0x270FA5388](v26);
  os_log_type_t v29 = (char *)&v121 - v28;
  uint64_t v30 = sub_24115F6C0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v121 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  os_log_t v37 = ((char *)&v121 - v36);
  MEMORY[0x270FA5388](v35);
  unint64_t v39 = (unint64_t *)((char *)&v121 - v38);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v40((char *)&v121 - v38, a1, v30);
  int v41 = (*(uint64_t (**)(unint64_t *, uint64_t))(v31 + 88))(v39, v30);
  if (v41 == *MEMORY[0x263F45D70] || v41 == *MEMORY[0x263F45D80])
  {
    (*(void (**)(unint64_t *, uint64_t))(v31 + 96))(v39, v30);
    unint64_t v58 = *v39;
    uint64_t v59 = v132;
    v139[2] = (uint64_t)v129;
    v139[3] = v132;
    v139[4] = v130;
    id v60 = sub_2410932CC((void (*)(long long *__return_ptr, id *))sub_241044030, (uint64_t)v139, v58);
    swift_bridgeObjectRelease();
    if (!v60[2])
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = v126;
      sub_24115F740();
      uint64_t v88 = v136;
      uint64_t v89 = v137;
      os_log_t v90 = v123;
      (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v123, v59, v137);
      uint64_t v45 = sub_24115F780();
      os_log_type_t v91 = sub_241160D10();
      if (os_log_type_enabled(v45, v91))
      {
        uint64_t v92 = swift_slowAlloc();
        uint64_t v93 = v88;
        uint64_t v132 = swift_slowAlloc();
        v139[0] = v132;
        *(_DWORD *)uint64_t v92 = 136315394;
        uint64_t v94 = sub_241161A00();
        uint64_t v138 = sub_24101F0A4(v94, v95, v139);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v92 + 12) = 2080;
        id v96 = (void *)sub_24115D170();
        uint64_t v97 = v90;
        uint64_t v98 = sub_24115CF00();
        unint64_t v100 = v99;

        uint64_t v138 = sub_24101F0A4(v98, v100, v139);
        sub_241161430();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v93 + 8))(v97, v137);
        _os_log_impl(&dword_241007000, v45, v91, "[%s]_%s: Update/create received, but not associated with dose events", (uint8_t *)v92, 0x16u);
        uint64_t v101 = v132;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v101, -1, -1);
        MEMORY[0x2456180C0](v92, -1, -1);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v126, v133);
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v88 + 8))(v90, v89);
      goto LABEL_21;
    }
    sub_24115F740();
    uint64_t v62 = v136;
    uint64_t v61 = v137;
    unint64_t v63 = v127;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v136 + 16))(v127, v59, v137);
    id v64 = sub_24115F780();
    os_log_type_t v65 = sub_241160D50();
    int v66 = v65;
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v67 = swift_slowAlloc();
      LODWORD(v130) = v66;
      uint64_t v68 = v67;
      uint64_t v132 = swift_slowAlloc();
      v139[0] = v132;
      *(_DWORD *)uint64_t v68 = 136315394;
      os_log_t v129 = v64;
      uint64_t v69 = sub_241161A00();
      uint64_t v138 = sub_24101F0A4(v69, v70, v139);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2080;
      uint64_t v71 = (void *)sub_24115D170();
      uint64_t v72 = sub_24115CF00();
      unint64_t v74 = v73;

      uint64_t v138 = sub_24101F0A4(v72, v74, v139);
      sub_241161430();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t *, uint64_t))(v62 + 8))(v63, v137);
      id v64 = v129;
      _os_log_impl(&dword_241007000, v129, (os_log_type_t)v130, "[%s]_%s: Update/create received for concepts", (uint8_t *)v68, 0x16u);
      uint64_t v75 = v132;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v75, -1, -1);
      MEMORY[0x2456180C0](v68, -1, -1);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v62 + 8))(v63, v61);
    }

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v29, v133);
    *id v135 = v60;
  }
  else
  {
    if (v41 == *MEMORY[0x263F45D78])
    {
      (*(void (**)(unint64_t *, uint64_t))(v31 + 96))(v39, v30);
      swift_bridgeObjectRelease();
      sub_24115F740();
      uint64_t v42 = v136;
      uint64_t v43 = v137;
      uint64_t v44 = v125;
      (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v125, v132, v137);
      uint64_t v45 = sub_24115F780();
      os_log_type_t v46 = sub_241160D10();
      int v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v132 = (uint64_t)v25;
        LODWORD(v129) = v47;
        uint64_t v49 = v48;
        uint64_t v130 = swift_slowAlloc();
        v139[0] = v130;
        *(_DWORD *)uint64_t v49 = 136315394;
        uint64_t v50 = sub_241161A00();
        uint64_t v138 = sub_24101F0A4(v50, v51, v139);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 12) = 2080;
        uint64_t v52 = (void *)sub_24115D170();
        uint64_t v53 = sub_24115CF00();
        unint64_t v55 = v54;

        uint64_t v138 = sub_24101F0A4(v53, v55, v139);
        sub_241161430();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
        _os_log_impl(&dword_241007000, v45, (os_log_type_t)v129, "[%s]_%s: Deletion received from concept changes provider", (uint8_t *)v49, 0x16u);
        uint64_t v56 = v130;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v56, -1, -1);
        MEMORY[0x2456180C0](v49, -1, -1);

        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v134 + 8))(v132, v133);
LABEL_22:
        *id v135 = 0;
        return result;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
      goto LABEL_21;
    }
    uint64_t v76 = (void (**)(char *, uint64_t, uint64_t))(v136 + 16);
    if (v41 == *MEMORY[0x263F45D88])
    {
      uint64_t v25 = v122;
      sub_24115F740();
      char v77 = v121;
      uint64_t v78 = v137;
      (*v76)(v121, v132, v137);
      uint64_t v45 = sub_24115F780();
      os_log_type_t v79 = sub_241160D10();
      if (os_log_type_enabled(v45, v79))
      {
        uint64_t v80 = swift_slowAlloc();
        uint64_t v132 = swift_slowAlloc();
        v139[0] = v132;
        *(_DWORD *)uint64_t v80 = 136315394;
        uint64_t v81 = sub_241161A00();
        uint64_t v138 = sub_24101F0A4(v81, v82, v139);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v80 + 12) = 2080;
        uint64_t v83 = (void *)sub_24115D170();
        uint64_t v84 = sub_24115CF00();
        unint64_t v86 = v85;

        uint64_t v138 = sub_24101F0A4(v84, v86, v139);
        sub_241161430();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v136 + 8))(v77, v78);
        _os_log_impl(&dword_241007000, v45, v79, "[%s]_%s: Ignoring initial change", (uint8_t *)v80, 0x16u);
        uint64_t v87 = v132;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v87, -1, -1);
        MEMORY[0x2456180C0](v80, -1, -1);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v122, v133);
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v136 + 8))(v77, v78);
LABEL_21:

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v134 + 8))(v25, v133);
      goto LABEL_22;
    }
    unint64_t v102 = v124;
    sub_24115F740();
    (*v76)(v128, v132, v137);
    uint64_t v103 = v37;
    v40((char *)v37, a1, v30);
    id v104 = sub_24115F780();
    os_log_type_t v105 = sub_241160D30();
    int v106 = v105;
    if (os_log_type_enabled(v104, v105))
    {
      uint64_t v107 = swift_slowAlloc();
      os_log_t v129 = v103;
      uint64_t v108 = v107;
      uint64_t v132 = swift_slowAlloc();
      v139[0] = v132;
      *(_DWORD *)uint64_t v108 = 136315650;
      LODWORD(v130) = v106;
      uint64_t v109 = sub_241161A00();
      os_log_t v131 = v104;
      uint64_t v138 = sub_24101F0A4(v109, v110, v139);
      long long v127 = v139;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v108 + 12) = 2080;
      os_log_t v126 = (char *)(v108 + 14);
      unint64_t v111 = (void *)sub_24115D170();
      uint64_t v112 = sub_24115CF00();
      unint64_t v114 = v113;

      uint64_t v138 = sub_24101F0A4(v112, v114, v139);
      sub_241161430();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v136 + 8))(v128, v137);
      *(_WORD *)(v108 + 22) = 2080;
      os_log_t v115 = v129;
      v40(v34, (uint64_t)v129, v30);
      uint64_t v116 = sub_2411607A0();
      uint64_t v138 = sub_24101F0A4(v116, v117, v139);
      sub_241161430();
      swift_bridgeObjectRelease();
      uint64_t v118 = *(void (**)(os_log_t, uint64_t))(v31 + 8);
      v118(v115, v30);
      os_log_t v119 = v131;
      _os_log_impl(&dword_241007000, v131, (os_log_type_t)v130, "[%s]_%s: Unknown medication change received: %s", (uint8_t *)v108, 0x20u);
      uint64_t v120 = v132;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v120, -1, -1);
      MEMORY[0x2456180C0](v108, -1, -1);

      (*(void (**)(char *, uint64_t))(v134 + 8))(v124, v133);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v136 + 8))(v128, v137);
      uint64_t v118 = *(void (**)(os_log_t, uint64_t))(v31 + 8);
      v118(v103, v30);

      (*(void (**)(char *, uint64_t))(v134 + 8))(v102, v133);
    }
    *id v135 = 0;
    return ((uint64_t (*)(unint64_t *, uint64_t))v118)(v39, v30);
  }
  return result;
}

uint64_t sub_241040C58@<X0>(void **a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, void *a5@<X8>)
{
  uint64_t v76 = a4;
  uint64_t v79 = a3;
  unint64_t v82 = a5;
  uint64_t v8 = sub_24115D1C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v78 = (char *)v70 - v13;
  uint64_t v14 = sub_24115F790();
  uint64_t v80 = *(void *)(v14 - 8);
  uint64_t v81 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v70 - v18;
  uint64_t v20 = *a1;
  self;
  uint64_t v21 = swift_dynamicCastObjCClass();
  if (v21)
  {
    uint64_t v22 = (void *)v21;
    id v23 = v20;
    uint64_t v24 = sub_241044050(a2, v22);
    if (v24)
    {
      uint64_t v25 = (void *)v24;
      id v26 = v23;
      uint64_t v75 = v25;
      id v27 = v25;
      uint64_t v28 = v19;
      sub_24115F740();
      uint64_t v29 = v9;
      uint64_t v30 = v8;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v78, v79, v8);
      id v31 = v26;
      id v32 = v27;
      unint64_t v74 = v31;
      id v33 = v32;
      uint64_t v34 = sub_24115F780();
      os_log_type_t v35 = sub_241160D50();
      int v36 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        uint64_t v84 = v73;
        *(_DWORD *)uint64_t v37 = 136315650;
        os_log_t v72 = v34;
        uint64_t v38 = sub_241161A00();
        uint64_t v79 = v30;
        uint64_t v77 = v5;
        v83[0] = sub_24101F0A4(v38, v39, &v84);
        int v71 = v36;
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v37 + 12) = 2080;
        v70[1] = v37 + 14;
        uint64_t v40 = v78;
        int v41 = (void *)sub_24115D170();
        uint64_t v42 = sub_24115CF00();
        uint64_t v76 = v28;
        uint64_t v43 = v42;
        unint64_t v45 = v44;

        v83[0] = sub_24101F0A4(v43, v45, &v84);
        sub_241161430();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v40, v79);
        *(_WORD *)(v37 + 22) = 2080;
        v83[0] = (uint64_t)v33;
        v83[1] = (uint64_t)v22;
        os_log_type_t v46 = v74;
        id v47 = v33;
        uint64_t v48 = sub_2411607A0();
        v83[0] = sub_24101F0A4(v48, v49, &v84);
        sub_241161430();

        swift_bridgeObjectRelease();
        os_log_t v50 = v72;
        _os_log_impl(&dword_241007000, v72, (os_log_type_t)v71, "[%s]_%s: Received change for medications, created detail: %s", (uint8_t *)v37, 0x20u);
        uint64_t v51 = v73;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v51, -1, -1);
        MEMORY[0x2456180C0](v37, -1, -1);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v76, v81);
      }
      else
      {

        uint64_t v68 = v74;
        (*(void (**)(char *, uint64_t))(v29 + 8))(v78, v30);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v28, v81);
      }
      uint64_t v69 = v82;
      *unint64_t v82 = v75;
      v69[1] = v22;
      return result;
    }
    uint64_t v77 = v5;
  }
  else
  {
    uint64_t v77 = v5;
  }
  sub_24115F740();
  uint64_t v53 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v79, v8);
  unint64_t v54 = sub_24115F780();
  os_log_type_t v55 = sub_241160D50();
  int v56 = v55;
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v57 = swift_slowAlloc();
    uint64_t v79 = v8;
    LODWORD(v75) = v56;
    uint64_t v58 = v57;
    uint64_t v78 = (char *)swift_slowAlloc();
    v83[0] = (uint64_t)v78;
    *(_DWORD *)uint64_t v58 = 136315394;
    unint64_t v74 = v54;
    uint64_t v59 = sub_241161A00();
    uint64_t v84 = sub_24101F0A4(v59, v60, v83);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2080;
    uint64_t v61 = (void *)sub_24115D170();
    uint64_t v62 = sub_24115CF00();
    unint64_t v64 = v63;

    uint64_t v84 = sub_24101F0A4(v62, v64, v83);
    sub_241161430();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v79);
    os_log_type_t v65 = v74;
    _os_log_impl(&dword_241007000, v74, (os_log_type_t)v75, "[%s]_%s: No relevant dose event was found for the changed medications, ignoring", (uint8_t *)v58, 0x16u);
    int v66 = v78;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v66, -1, -1);
    MEMORY[0x2456180C0](v58, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v8);
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v17, v81);
  uint64_t v67 = v82;
  *unint64_t v82 = 0;
  v67[1] = 0;
  return result;
}

uint64_t sub_241041314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v19[0] = a3;
  sub_241044788();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24101AEF4(0, (unint64_t *)&unk_26B007220, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v19 - v11;
  uint64_t v13 = sub_24115C810();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24104480C(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_24102A960((uint64_t)v12, (unint64_t *)&unk_26B007220, MEMORY[0x263F062D0]);
    v19[1] = MEMORY[0x263F8EE78];
    sub_241043774(0, &qword_26B005DB8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F8D488]);
    sub_24115FCC0();
    sub_241019D40((unint64_t *)&unk_26B0060B8, (void (*)(uint64_t))sub_241044788);
    uint64_t v17 = sub_24115FE20();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    uint64_t v17 = sub_241041624((uint64_t)v16, a2);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  *(void *)v19[0] = v17;
  return result;
}

uint64_t sub_241041624(uint64_t a1, uint64_t a2)
{
  uint64_t v81 = a2;
  uint64_t v74 = sub_24115D1C0();
  uint64_t v71 = *(void *)(v74 - 8);
  unint64_t v72 = *(void *)(v71 + 64);
  MEMORY[0x270FA5388](v74);
  unint64_t v70 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v66 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_24101AEF4(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v57 - v4;
  uint64_t v60 = sub_24115D130();
  uint64_t v58 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_241160CC0();
  uint64_t v62 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v65 = (uint64_t (*)(uint64_t))MEMORY[0x263F44AA8];
  unint64_t v64 = sub_24102AC90;
  sub_24102BF8C(0, (unint64_t *)&qword_26B005A00, MEMORY[0x263F44AA8], sub_24102AC90, MEMORY[0x263EFDCA8]);
  uint64_t v67 = v10;
  uint64_t v68 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v82 = (char *)&v57 - v11;
  sub_2410448A0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v76 = v12;
  uint64_t v77 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v83 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241044A18();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v78 = v15;
  uint64_t v79 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v69 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24115CB10();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  MEMORY[0x270FA5388](v23);
  uint64_t v75 = sub_24115C810();
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115C7F0();
  sub_24115C7C0();
  sub_24115CA90();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  unint64_t v63 = v25;
  sub_24115C7D0();
  sub_241024708(0, &qword_26B005E28);
  id ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v27 = (void *)sub_24115C7B0();
  id v28 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForSamplesWithinDateInterval_options_, v27, 0);
  id v59 = v28;

  id v29 = objc_msgSend(self, sel_medicationDoseEventType);
  id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v29, v28);

  uint64_t v31 = v81;
  sub_24115D150();
  sub_24101A6BC(v85, (uint64_t)v85[3]);
  id v32 = (void *)sub_24115D0B0();
  sub_24102AE70(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_24116B220;
  *(void *)(v33 + 32) = v30;
  uint64_t v84 = v33;
  sub_2411609C0();
  id v57 = v30;
  sub_241160CE0();

  swift_bridgeObjectRelease();
  sub_24101F178((uint64_t)v85);
  uint64_t v34 = v31;
  os_log_type_t v35 = (void *)sub_24115D170();
  sub_24101ABDC(v35, (uint64_t)v7);

  int v36 = (void *)sub_24115D1A0();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v7, v60);
  v85[0] = v36;
  uint64_t v37 = sub_241160EB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v5, 1, 1, v37);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  sub_24102AC90();
  sub_24102A8F8();
  uint64_t v38 = v61;
  sub_24115FF10();
  sub_24102A960((uint64_t)v5, (unint64_t *)&qword_26B0071C0, v66);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v38);
  uint64_t v39 = v71;
  int v66 = *(uint64_t (**)(uint64_t))(v71 + 16);
  uint64_t v40 = v70;
  uint64_t v41 = v74;
  ((void (*)(char *, uint64_t, uint64_t))v66)(v70, v34, v74);
  uint64_t v42 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v43 = (v42 + 16) & ~v42;
  uint64_t v62 = v42 | 7;
  unint64_t v44 = (v72 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v72 = v44 + 8;
  uint64_t v45 = swift_allocObject();
  uint64_t v71 = *(void *)(v39 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v71)(v45 + v43, v40, v41);
  uint64_t v46 = v80;
  *(void *)(v45 + v44) = v80;
  sub_241043774(0, &qword_26B005DB8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F8D488]);
  sub_2410449B4(&qword_26B0059F8, (unint64_t *)&qword_26B005A00, v65, v64);
  uint64_t v47 = v67;
  uint64_t v48 = v82;
  sub_24115FE70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v48, v47);
  ((void (*)(char *, uint64_t, uint64_t))v66)(v40, v81, v41);
  uint64_t v49 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v71)(v49 + v43, v40, v41);
  *(void *)(v49 + v44) = v46;
  sub_24102B730();
  sub_241019D40(&qword_26B0056E0, (void (*)(uint64_t))sub_2410448A0);
  sub_241019D40(&qword_26B005B08, (void (*)(uint64_t))sub_24102B730);
  os_log_t v50 = v69;
  uint64_t v51 = v76;
  uint64_t v52 = v83;
  sub_24115FE80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v52, v51);
  sub_241019D40(&qword_26B005720, (void (*)(uint64_t))sub_241044A18);
  uint64_t v53 = v78;
  unint64_t v54 = (void *)sub_24115FD90();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v50, v53);
  v85[0] = v54;
  uint64_t v55 = sub_24115FE20();
  swift_release();

  (*(void (**)(char *, uint64_t))(v73 + 8))(v63, v75);
  return v55;
}

uint64_t sub_2410421AC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v59 = sub_24115D1C0();
  uint64_t v6 = *(void *)(v59 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v59);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v52 - v10;
  uint64_t v12 = sub_24115F790();
  uint64_t v57 = *(void *)(v12 - 8);
  uint64_t v58 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v52 - v16;
  unint64_t v18 = *a1;
  uint64_t v19 = sub_2410E4FE8(*a1);
  if (v19)
  {
    unint64_t v20 = v19;
    sub_24115F740();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v59);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_24115F780();
    int v22 = sub_241160D50();
    if (os_log_type_enabled(v21, (os_log_type_t)v22))
    {
      int v54 = v22;
      os_log_t v55 = v21;
      int v56 = a3;
      uint64_t v23 = swift_slowAlloc();
      os_log_t v53 = (os_log_t)swift_slowAlloc();
      os_log_t v61 = v53;
      *(_DWORD *)uint64_t v23 = 136315906;
      uint64_t v24 = sub_241161A00();
      uint64_t v60 = sub_24101F0A4(v24, v25, (uint64_t *)&v61);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      id v26 = (void *)sub_24115D170();
      uint64_t v27 = sub_24115CF00();
      unint64_t v29 = v28;

      uint64_t v60 = sub_24101F0A4(v27, v29, (uint64_t *)&v61);
      sub_241161430();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v59);
      *(_WORD *)(v23 + 22) = 2048;
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_2411616E0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      a3 = v56;
      os_log_type_t v31 = v54;
      swift_bridgeObjectRelease();
      uint64_t v60 = v30;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 32) = 2080;
      uint64_t v60 = v20;
      sub_241043774(0, &qword_26B005DB8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F8D488]);
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_2411607A0();
      uint64_t v60 = sub_24101F0A4(v32, v33, (uint64_t *)&v61);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v34 = v55;
      _os_log_impl(&dword_241007000, v55, v31, "[%s]_%s: Returning these %ld latest dose events: %s", (uint8_t *)v23, 0x2Au);
      os_log_t v35 = v53;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v35, -1, -1);
      MEMORY[0x2456180C0](v23, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v59);

      swift_bridgeObjectRelease_n();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v15, v58);
  }
  else
  {
    sub_24115F740();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, a2, v59);
    swift_bridgeObjectRetain_n();
    int v36 = sub_24115F780();
    os_log_type_t v37 = sub_241160D30();
    int v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v39 = swift_slowAlloc();
      int v54 = v38;
      uint64_t v40 = v39;
      os_log_t v55 = (os_log_t)swift_slowAlloc();
      os_log_t v61 = v55;
      *(_DWORD *)uint64_t v40 = 136315650;
      os_log_t v53 = v36;
      uint64_t v41 = sub_241161A00();
      uint64_t v60 = sub_24101F0A4(v41, v42, (uint64_t *)&v61);
      int v56 = a3;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      uint64_t v43 = (void *)sub_24115D170();
      uint64_t v44 = sub_24115CF00();
      unint64_t v46 = v45;

      uint64_t v60 = sub_24101F0A4(v44, v46, (uint64_t *)&v61);
      a3 = v56;
      sub_241161430();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v59);
      *(_WORD *)(v40 + 22) = 2080;
      uint64_t v60 = v18;
      sub_241043774(0, &qword_268CF0730, (unint64_t *)&unk_26B007368, 0x263F0A6B8, MEMORY[0x263F8D488]);
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_2411607A0();
      uint64_t v60 = sub_24101F0A4(v47, v48, (uint64_t *)&v61);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v49 = v53;
      _os_log_impl(&dword_241007000, v53, (os_log_type_t)v54, "[%s]_%s: Unexpected type returned from sample query: %s", (uint8_t *)v40, 0x20u);
      os_log_t v50 = v55;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v50, -1, -1);
      MEMORY[0x2456180C0](v40, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v59);

      swift_bridgeObjectRelease_n();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v17, v58);
    unint64_t v20 = MEMORY[0x263F8EE78];
  }
  *a3 = v20;
  return result;
}

uint64_t sub_2410428E4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v46 = a3;
  uint64_t v51 = a4;
  sub_241044788();
  uint64_t v50 = v6;
  uint64_t v48 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24115D1C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24115F790();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  sub_24115F740();
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v47 = v9;
  v18(v12, a2, v9);
  id v19 = v17;
  id v20 = v17;
  os_log_t v49 = v16;
  uint64_t v21 = sub_24115F780();
  os_log_type_t v22 = sub_241160D30();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v45 = v14;
    uint64_t v25 = v24;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v53 = v44;
    *(_DWORD *)uint64_t v25 = 136315650;
    os_log_t v43 = v21;
    uint64_t v26 = sub_241161A00();
    uint64_t v46 = v13;
    uint64_t v52 = sub_24101F0A4(v26, v27, &v53);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v41[1] = v25 + 14;
    unint64_t v28 = (void *)sub_24115D170();
    uint64_t v29 = sub_24115CF00();
    int v42 = v23;
    uint64_t v30 = v29;
    unint64_t v32 = v31;

    uint64_t v52 = sub_24101F0A4(v30, v32, &v53);
    sub_241161430();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v47);
    *(_WORD *)(v25 + 22) = 2080;
    uint64_t v52 = (uint64_t)v17;
    id v33 = v17;
    sub_241020840(0, (unint64_t *)&qword_26B0073B0);
    uint64_t v34 = sub_241160770();
    uint64_t v52 = sub_24101F0A4(v34, v35, &v53);
    sub_241161430();
    swift_bridgeObjectRelease();

    os_log_t v36 = v43;
    _os_log_impl(&dword_241007000, v43, (os_log_type_t)v42, "[%s]_%s: Error when fetching dose event samples: %s", (uint8_t *)v25, 0x20u);
    uint64_t v37 = v44;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v37, -1, -1);
    MEMORY[0x2456180C0](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v49, v46);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v47);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v49, v13);
  }
  uint64_t v53 = MEMORY[0x263F8EE78];
  sub_241043774(0, &qword_26B005DB8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F8D488]);
  sub_24115FCC0();
  sub_241019D40((unint64_t *)&unk_26B0060B8, (void (*)(uint64_t))sub_241044788);
  uint64_t v38 = v50;
  uint64_t v39 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v8, v38);
  *uint64_t v51 = v39;
  return result;
}

uint64_t sub_241042E00@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24115CB10();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v6 = *a1;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_2411616E0();
    if (result) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_24115C810();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    return v15(a2, 1, 1, v14);
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v9 = (id)MEMORY[0x245617450](0, v6);
    goto LABEL_6;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v9 = *(id *)(v6 + 32);
LABEL_6:
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v10, sel_startDate);
    sub_24115CAE0();

    id v12 = objc_msgSend(v10, sel_endDate);
    sub_24115CAE0();

    sub_24115C7D0();
    uint64_t v13 = sub_24115C810();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 0, 1, v13);
  }
  __break(1u);
  return result;
}

uint64_t sub_24104302C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, const char *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  sub_24102B488(0, &qword_268CF0738, MEMORY[0x263EFDE08]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v12 = &v44[-v11];
  uint64_t v13 = sub_24115D1C0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v44[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_24115F790();
  uint64_t v54 = *(void *)(v17 - 8);
  uint64_t v55 = v17;
  MEMORY[0x270FA5388](v17);
  id v19 = &v44[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v20 = *a1;
  sub_24115F740();
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v52 = v13;
  v21(v16, a2, v13);
  id v22 = v20;
  id v23 = v20;
  uint64_t v53 = v19;
  uint64_t v24 = sub_24115F780();
  os_log_type_t v25 = sub_241160D30();
  int v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    os_log_t v46 = v24;
    uint64_t v28 = v27;
    uint64_t v47 = swift_slowAlloc();
    uint64_t v57 = v47;
    *(_DWORD *)uint64_t v28 = 136315650;
    int v45 = v26;
    uint64_t v29 = sub_241161A00();
    uint64_t v48 = v10;
    uint64_t v56 = sub_24101F0A4(v29, v30, &v57);
    uint64_t v49 = v9;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    unint64_t v31 = (void *)sub_24115D170();
    uint64_t v32 = sub_24115CF00();
    uint64_t v50 = a5;
    uint64_t v33 = v32;
    uint64_t v34 = v12;
    unint64_t v36 = v35;

    uint64_t v56 = sub_24101F0A4(v33, v36, &v57);
    uint64_t v10 = v48;
    sub_241161430();
    id v12 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v52);
    *(_WORD *)(v28 + 22) = 2080;
    uint64_t v56 = (uint64_t)v20;
    id v37 = v20;
    sub_241020840(0, (unint64_t *)&qword_26B0073B0);
    uint64_t v38 = sub_241160770();
    uint64_t v56 = sub_24101F0A4(v38, v39, &v57);
    uint64_t v9 = v49;
    sub_241161430();
    a5 = v50;
    swift_bridgeObjectRelease();

    os_log_t v40 = v46;
    _os_log_impl(&dword_241007000, v46, (os_log_type_t)v45, v51, (uint8_t *)v28, 0x20u);
    uint64_t v41 = v47;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v41, -1, -1);
    MEMORY[0x2456180C0](v28, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v52);
  }
  (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v53, v55);
  sub_24101AEF4(0, (unint64_t *)&unk_26B007220, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  sub_24115FCD0();
  sub_24102BF48(&qword_268CF0740, &qword_268CF0738, MEMORY[0x263EFDE08]);
  uint64_t v42 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  *a5 = v42;
  return result;
}

uint64_t sub_241043558()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin42MedicationsLoggingSummaryGeneratorPipeline_domain;
  uint64_t v2 = sub_24115D130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin42MedicationsLoggingSummaryGeneratorPipeline_changeProvider));

  return swift_deallocClassInstance();
}

uint64_t sub_241043610()
{
  return type metadata accessor for MedicationsLoggingSummaryGeneratorPipeline();
}

uint64_t sub_241043618()
{
  uint64_t result = sub_24115D130();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2410436C8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24103CB8C(a1, v2 + v6, v7, a2);
}

void sub_241043774(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241024708(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_2410437DC()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24104386C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_241041314(a1, v6, a2);
}

uint64_t sub_2410438F0()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_2410439A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = *(NSObject **)(v2 + v8);
  uint64_t v11 = *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_24103CFF4(a1, v2 + v6, v9, v10, v11, a2);
}

void sub_241043A68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_24102AE70(255, &qword_26B005D10, (uint64_t)&type metadata for MedicationDoseEventDetails, MEMORY[0x263F8D488]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241043AEC()
{
  if (!qword_26B0054D8)
  {
    sub_24102B8A8(255, &qword_26B005AE0, MEMORY[0x263EFDCF0]);
    sub_24102B93C();
    unint64_t v0 = sub_24115FAF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0054D8);
    }
  }
}

unint64_t sub_241043B78()
{
  unint64_t result = qword_26B0060A8;
  if (!qword_26B0060A8)
  {
    sub_241043A68(255, &qword_26B005BB0, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0060A8);
  }
  return result;
}

uint64_t sub_241043BEC()
{
  return sub_241019D40(&qword_26B006168, (void (*)(uint64_t))sub_241011390);
}

void sub_241043C20()
{
  if (!qword_26B0060E0)
  {
    sub_24102BF8C(255, (unint64_t *)&qword_26B006160, (uint64_t (*)(uint64_t))sub_241011390, sub_241043BEC, MEMORY[0x263EFDCA8]);
    sub_24102AE70(255, &qword_26B005D10, (uint64_t)&type metadata for MedicationDoseEventDetails, MEMORY[0x263F8D488]);
    sub_2410449B4(&qword_26B006158, (unint64_t *)&qword_26B006160, (uint64_t (*)(uint64_t))sub_241011390, sub_241043BEC);
    unint64_t v0 = sub_24115FAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0060E0);
    }
  }
}

void sub_241043D2C()
{
  if (!qword_26B006110)
  {
    sub_241043C20();
    sub_241019D40(&qword_26B0060D8, (void (*)(uint64_t))sub_241043C20);
    unint64_t v0 = sub_24115FB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006110);
    }
  }
}

uint64_t sub_241043DC0()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241043E98@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(NSObject **)(v2 + 24);
  uint64_t v9 = *(NSObject **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24103FDBC(a1, v7, v8, v2 + v6, v9, a2);
}

unint64_t sub_241043F48()
{
  unint64_t result = qword_26B005D18;
  if (!qword_26B005D18)
  {
    sub_24102AE70(255, &qword_26B005D10, (uint64_t)&type metadata for MedicationDoseEventDetails, MEMORY[0x263F8D488]);
    sub_241043FDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005D18);
  }
  return result;
}

unint64_t sub_241043FDC()
{
  unint64_t result = qword_26B004FE0;
  if (!qword_26B004FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004FE0);
  }
  return result;
}

uint64_t sub_241044030@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_241040C58(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(char **)(v2 + 32), a2);
}

uint64_t sub_241044050(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_2411616E0();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v6 = (id)MEMORY[0x245617450](i - 4, a1);
          uint64_t v7 = i - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v6 = *(id *)(a1 + 8 * i);
          uint64_t v7 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v21 = v6;
        id v8 = objc_msgSend(v6, sel_medicationIdentifier);
        uint64_t v9 = sub_241160730();
        uint64_t v11 = v10;

        id v12 = objc_msgSend(a2, sel_semanticIdentifier);
        id v13 = objc_msgSend(v12, sel_stringValue);

        uint64_t v14 = sub_241160730();
        uint64_t v16 = v15;

        if (v9 == v14 && v11 == v16)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          uint64_t v3 = (uint64_t)v21;
          swift_bridgeObjectRelease();
          return v3;
        }
        char v18 = sub_241161890();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_17;
        }

        if (v7 == v3)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return v3;
}

void sub_241044238()
{
  if (!qword_26B0059E0)
  {
    sub_24102B8A8(255, &qword_26B005BF0, MEMORY[0x263EFDE20]);
    sub_241024708(255, (unint64_t *)&qword_26B007340);
    sub_2410442F0();
    sub_24102A8F8();
    unint64_t v0 = sub_24115FC00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0059E0);
    }
  }
}

unint64_t sub_2410442F0()
{
  unint64_t result = qword_26B005BE8;
  if (!qword_26B005BE8)
  {
    sub_24102B8A8(255, &qword_26B005BF0, MEMORY[0x263EFDE20]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005BE8);
  }
  return result;
}

uint64_t sub_241044364()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24104443C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24103E12C(a1, a2, v7, v2 + v6, v8);
}

uint64_t sub_2410444EC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241044524()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241044628(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5)
{
  uint64_t v11 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24103EA88(a1, a2, a3, a4, a5, *(void *)(v5 + 16), v5 + v12, *(void *)(v5 + v13), *(void (**)(uint64_t, void))(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v5 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_241044718()
{
  if (!qword_268CF0728)
  {
    sub_241020840(255, (unint64_t *)&qword_26B0073B0);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0728);
    }
  }
}

uint64_t sub_241044780(void **a1)
{
  return sub_24103FD08(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_241044788()
{
  if (!qword_26B005BC0)
  {
    sub_241043774(255, &qword_26B005DB8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_24115FCB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005BC0);
    }
  }
}

uint64_t sub_24104480C(uint64_t a1, uint64_t a2)
{
  sub_24101AEF4(0, (unint64_t *)&unk_26B007220, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2410448A0()
{
  if (!qword_26B0056E8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F44AA8];
    sub_24102BF8C(255, (unint64_t *)&qword_26B005A00, MEMORY[0x263F44AA8], sub_24102AC90, MEMORY[0x263EFDCA8]);
    sub_241043774(255, &qword_26B005DB8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F8D488]);
    sub_2410449B4(&qword_26B0059F8, (unint64_t *)&qword_26B005A00, v0, sub_24102AC90);
    unint64_t v1 = sub_24115FB50();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B0056E8);
    }
  }
}

uint64_t sub_2410449B4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24102BF8C(255, a2, a3, a4, MEMORY[0x263EFDCA8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241044A18()
{
  if (!qword_26B005728)
  {
    sub_2410448A0();
    sub_24102B730();
    sub_241019D40(&qword_26B0056E0, (void (*)(uint64_t))sub_2410448A0);
    sub_241019D40(&qword_26B005B08, (void (*)(uint64_t))sub_24102B730);
    unint64_t v0 = sub_24115FB60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005728);
    }
  }
}

uint64_t sub_241044B08@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_2410421AC(a1, v6, a2);
}

uint64_t sub_241044BB8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2410428E4(a1, v2 + v6, v7, a2);
}

void sub_241044C64()
{
  if (!qword_26B0055B8)
  {
    sub_241019D88(255, &qword_26B005738, (void (*)(uint64_t))sub_24102D704, (void (*)(void))sub_24102D7B0);
    sub_241020840(255, (unint64_t *)&qword_26B0073B0);
    sub_24102D4C0();
    unint64_t v0 = sub_24115FB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0055B8);
    }
  }
}

uint64_t sub_241044D34@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241044F50(a1, "[%s]_%s: Error in sample query: %s", a2);
}

uint64_t sub_241044D40()
{
  sub_241019D88(0, &qword_26B005738, (void (*)(uint64_t))sub_24102D704, (void (*)(void))sub_24102D7B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_241044E00@<X0>(uint64_t a1@<X8>)
{
  sub_241019D88(0, &qword_26B005738, (void (*)(uint64_t))sub_24102D704, (void (*)(void))sub_24102D7B0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, v3);
}

uint64_t sub_241044EA8()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241044F44@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241044F50(a1, "[%s]_%s: Error in observer query: %s", a2);
}

uint64_t sub_241044F50@<X0>(void **a1@<X0>, const char *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_24104302C(a1, v3 + v8, *(uint64_t **)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)), a2, a3);
}

void *initializeBufferWithCopyOfBuffer for MedicationDoseEventDetails(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for MedicationDoseEventDetails(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for MedicationDoseEventDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  unint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for MedicationDoseEventDetails(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationDoseEventDetails(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationDoseEventDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationDoseEventDetails()
{
  return &type metadata for MedicationDoseEventDetails;
}

id sub_2410451C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InteractiveTimelineItem()
{
  return self;
}

uint64_t sub_241045298(uint64_t a1, uint64_t a2)
{
  return sub_2410452B0(a1, a2, &OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_reuseIdentifier);
}

uint64_t sub_2410452A4(uint64_t a1, uint64_t a2)
{
  return sub_2410452B0(a1, a2, &OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_uniqueIdentifier);
}

uint64_t sub_2410452B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void *)(*v3 + *a3);
  swift_bridgeObjectRetain();
  return v4;
}

id sub_2410452EC(uint64_t a1)
{
  objc_super v2 = (objc_class *)type metadata accessor for InteractiveTimelineItem();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  uint64_t v4 = (uint64_t *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_reuseIdentifier];
  type metadata accessor for InteractiveTimelineItemCell();
  sub_2410453F8();
  id v5 = v3;
  uint64_t *v4 = sub_24115D9A0();
  v4[1] = v6;
  uint64_t v7 = &v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_uniqueIdentifier];
  *(void *)uint64_t v7 = 0xD000000000000017;
  *((void *)v7 + 1) = 0x800000024116B300;
  uint64_t v8 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_timelineViewControllers;
  *(void *)&v5[v8] = objc_msgSend(self, sel_weakObjectsHashTable);
  *(void *)&v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_dataProvider] = a1;
  swift_retain();

  v10.receiver = v5;
  v10.super_class = v2;
  return objc_msgSendSuper2(&v10, sel_init);
}

unint64_t sub_2410453F8()
{
  unint64_t result = qword_26B006BA8;
  if (!qword_26B006BA8)
  {
    type metadata accessor for InteractiveTimelineItemCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B006BA8);
  }
  return result;
}

uint64_t type metadata accessor for MedicationDayScheduleDataSource()
{
  uint64_t result = qword_26B006C48;
  if (!qword_26B006C48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24104549C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241045518(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v65 = a3;
  uint64_t v66 = a5;
  id v56 = a1;
  uint64_t v62 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_241017170(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v55 = (char *)&v44 - v12;
  uint64_t v13 = sub_241160EE0();
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v49 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241047C50();
  uint64_t v54 = v15;
  uint64_t v57 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v48 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241047EDC(0);
  uint64_t v58 = v17;
  uint64_t v61 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v50 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241047F58(0, &qword_268CF07B0, (uint64_t (*)(uint64_t))sub_241047EDC, sub_241048008, MEMORY[0x263EFDCA8]);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v63 = v19;
  uint64_t v64 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v53 = (char *)&v44 - v21;
  uint64_t v22 = sub_24115CB50();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  os_log_type_t v25 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v7 + qword_26B006C30) = 0;
  swift_unknownObjectWeakInit();
  int v26 = (void *)(v7 + qword_26B006C28);
  *int v26 = 0;
  v26[1] = 0;
  *(void *)(v7 + qword_26B006C38) = a4;
  swift_unknownObjectWeakAssign();
  uint64_t v52 = a6;
  *(void *)(v7 + qword_268CF0768) = a6;
  sub_241017170(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_24115DDF0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24116B370;
  id v51 = a4;
  swift_retain();
  sub_24115CB40();
  sub_24115CB20();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v23 + 8);
  v27(v25, v22);
  sub_24115DDE0();
  v69[0] = 0;
  v69[1] = (id)0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  strcpy((char *)v69, "MutableArray<");
  HIWORD(v69[1]) = -4864;
  sub_24115CB40();
  sub_24115CB20();
  v27(v25, v22);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  uint64_t v46 = sub_24115DE40();
  uint64_t v47 = a2;
  uint64_t v68 = v65;
  v69[0] = a2;
  uint64_t v67 = v66;
  sub_241047D78();
  sub_24102B660();
  sub_241047E74();
  sub_241048808(&qword_268CF0798, (void (*)(uint64_t))sub_241047D78);
  sub_241048808(&qword_26B0072D0, (void (*)(uint64_t))sub_24102B660);
  sub_241048808(&qword_26B006E28, (void (*)(uint64_t))sub_241047E74);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v28 = v48;
  sub_24115FAC0();
  uint64_t v29 = v49;
  sub_241160EC0();
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  v69[0] = (id)sub_241160EF0();
  uint64_t v30 = sub_241160EB0();
  int v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  uint64_t v31 = (uint64_t)v55;
  v45(v55, 1, 1, v30);
  sub_241047F24();
  unint64_t v44 = sub_24102A8F8();
  uint64_t v32 = v50;
  uint64_t v33 = v54;
  uint64_t v34 = v28;
  sub_24115FF20();
  unint64_t v35 = v62;
  sub_24102A9D0(v31, (unint64_t *)&qword_26B0071C0, v62);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v29, v60);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v34, v33);
  v69[0] = (id)sub_241160EF0();
  v45((char *)v31, 1, 1, v30);
  sub_241048008();
  unint64_t v36 = v53;
  uint64_t v37 = v58;
  sub_24115FF10();
  sub_24102A9D0(v31, (unint64_t *)&qword_26B0071C0, v35);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v32, v37);
  uint64_t v38 = swift_allocObject();
  uint64_t v39 = v46;
  swift_weakInit();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_241048074;
  *(void *)(v40 + 24) = v38;
  sub_241048110();
  uint64_t v41 = v63;
  uint64_t v42 = sub_24115FF60();

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v41);
  *(void *)(v39 + qword_26B006C30) = v42;
  swift_release();
  return v39;
}

uint64_t sub_241045E8C(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_241045F20(a1, a2 & 1);
    sub_24115DE60();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_241045F20(uint64_t a1, char a2)
{
  uint64_t v5 = sub_24115CCC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a2 & 1) == 0)
  {
    if (*(void *)(a1 + 16))
    {
      swift_retain();
      sub_24104852C(a1, v2);
      swift_release();
      return;
    }
    sub_241047E0C(0, (unint64_t *)&qword_26B0070A0, (unint64_t *)&qword_26B0069A8, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_24116B370;
    if (qword_26B007268 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_24115C960();
    uint64_t v31 = v30;
    uint64_t v32 = type metadata accessor for MedicationsDayScheduleEmptyItem();
    os_log_type_t v25 = (void *)swift_allocObject();
    type metadata accessor for MedicationsDayScheduleEmptyCell();
    sub_241048808(&qword_26B006A10, (void (*)(uint64_t))type metadata accessor for MedicationsDayScheduleEmptyCell);
    v25[4] = sub_24115D9A0();
    v25[5] = v33;
    v25[2] = v29;
    v25[3] = v31;
    *(void *)(v10 + 56) = v32;
    uint64_t v27 = (unint64_t *)&unk_26B006A18;
    uint64_t v28 = type metadata accessor for MedicationsDayScheduleEmptyItem;
    goto LABEL_15;
  }
  sub_24115CC90();
  char v9 = sub_24115CBE0();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  sub_241047E0C(0, (unint64_t *)&qword_26B0070A0, (unint64_t *)&qword_26B0069A8, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24116B370;
  if ((v9 & 1) == 0)
  {
    if (qword_26B007268 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_24115C960();
    uint64_t v23 = v22;
    uint64_t v24 = type metadata accessor for MedicationsDayScheduleCompleteItem();
    os_log_type_t v25 = (void *)swift_allocObject();
    type metadata accessor for MedicationsDayScheduleCompleteCell();
    sub_241048808(&qword_26B006A28, (void (*)(uint64_t))type metadata accessor for MedicationsDayScheduleCompleteCell);
    v25[4] = sub_24115D9A0();
    v25[5] = v26;
    v25[2] = v21;
    v25[3] = v23;
    *(void *)(v10 + 56) = v24;
    uint64_t v27 = (unint64_t *)&unk_268CF07F8;
    uint64_t v28 = type metadata accessor for MedicationsDayScheduleCompleteItem;
LABEL_15:
    *(void *)(v10 + 64) = sub_241048808(v27, (void (*)(uint64_t))v28);
    *(void *)(v10 + 32) = v25;
    return;
  }
  if (qword_26B007268 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_24115C960();
  uint64_t v13 = v12;
  sub_241024708(0, qword_26B003A40);
  uint64_t v14 = (void *)sub_2411612B0();
  uint64_t v15 = (void *)sub_2411606F0();
  id v16 = objc_msgSend(self, sel_imageNamed_inBundle_, v15, v14);

  if (v16)
  {
    uint64_t v17 = type metadata accessor for MedicationsCurrentDayScheduleCompleteItem();
    uint64_t v18 = (void *)swift_allocObject();
    sub_24115CB40();
    uint64_t v19 = (void *)((char *)v18
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteItem_reuseIdentifier);
    type metadata accessor for MedicationsCurrentDayScheduleCompleteCell();
    sub_241048808(&qword_26B006A30, (void (*)(uint64_t))type metadata accessor for MedicationsCurrentDayScheduleCompleteCell);
    *uint64_t v19 = sub_24115D9A0();
    v19[1] = v20;
    void v18[2] = v11;
    v18[3] = v13;
    v18[4] = v16;
    *(void *)(v10 + 56) = v17;
    *(void *)(v10 + 64) = sub_241048808(&qword_268CF0800, (void (*)(uint64_t))type metadata accessor for MedicationsCurrentDayScheduleCompleteItem);
    *(void *)(v10 + 32) = v18;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_241046518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_24115CB50();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24115F9D0();
  MEMORY[0x270FA5388](v11 - 8);
  if (sub_241160730() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v14 = sub_241161890();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_13:
    if (qword_26B007268 != -1) {
      swift_once();
    }
    sub_24115C960();
    sub_24115F970();
    uint64_t v19 = sub_24115D8A0();
    swift_allocObject();
    uint64_t v20 = sub_24115D890();
    a3[3] = v19;
    uint64_t result = sub_241048808((unint64_t *)&qword_26B0069B8, MEMORY[0x263F43AA8]);
    a3[4] = result;
    *a3 = v20;
    return result;
  }
  if (sub_241160730() == a1 && v15 == a2)
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = sub_241161890();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      a3[3] = sub_24115DA70();
      a3[4] = sub_241048808(&qword_268CF07E8, MEMORY[0x263F43D00]);
      sub_2410277C0(a3);
      return sub_24115DA60();
    }
  }
  if (*(void *)(v3 + qword_26B006C28 + 8))
  {
    v21[0] = 0x74497265746F6F46;
    v21[1] = 0xEB000000005F6D65;
    swift_bridgeObjectRetain();
    sub_24115CB40();
    sub_24115CB20();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_241160860();
    swift_bridgeObjectRelease();
    a3[3] = sub_24115E480();
    a3[4] = sub_241048808(&qword_268CF07F0, MEMORY[0x263F44568]);
    sub_2410277C0(a3);
    return sub_24115E470();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_241046918(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_24115DF90();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v23 - v11;
  MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v23 - v13;
  sub_24115DF30();
  if (!a1)
  {
    uint64_t v15 = *(void *)(v2 + qword_26B006C28 + 8);
    sub_24115DF20();
    if (v15)
    {
      sub_24115DF10();
      id v16 = *(void (**)(char *, uint64_t))(v6 + 8);
      v16(v12, v5);
      v16(v14, v5);
      uint64_t v12 = v9;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v12, v5);
  }
  id v17 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_24115DF40();
  uint64_t v18 = (void *)sub_24115DF80();
  uint64_t v19 = self;
  id v20 = objc_msgSend(a2, sel_traitCollection);
  uint64_t v21 = sub_241160F30();

  objc_msgSend(v19, sel_interItemSpacingForWidthDesignation_, v21);
  objc_msgSend(v18, sel_setInterGroupSpacing_);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  return v18;
}

uint64_t sub_241046B64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationDayScheduleItem();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v81 - v6;
  uint64_t v98 = (void (*)(char *, uint64_t))sub_24115F790();
  uint64_t v8 = *((void *)v98 - 1);
  MEMORY[0x270FA5388](v98);
  uint64_t v10 = (char *)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_24115E9F0();
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  os_log_t v90 = (char *)v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241017170(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v89 = (char *)v81 - v14;
  uint64_t v87 = sub_24115CCC0();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  id v16 = (char *)v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241017170(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], v12);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v88 = (char *)v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v81 - v20;
  uint64_t v99 = sub_24115CB10();
  uint64_t v97 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  unint64_t v85 = (char *)v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  os_log_type_t v25 = (char *)v81 - v24;
  MEMORY[0x270FA5388](v26);
  uint64_t v94 = (char *)v81 - v27;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)v81 - v29;
  MEMORY[0x270FA5388](v31);
  unint64_t v95 = (char *)v81 - v32;
  uint64_t v96 = v2;
  uint64_t v33 = *(int *)(v2 + 28);
  uint64_t v100 = a1;
  uint64_t v34 = sub_2410E4FF4(*(void *)(a1 + v33));
  if (!v34)
  {
LABEL_6:
    sub_24115F740();
    sub_241048250(v100, (uint64_t)v7);
    uint64_t v38 = sub_24115F780();
    os_log_type_t v39 = sub_241160D30();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v104 = v41;
      *(_DWORD *)uint64_t v40 = 136315138;
      sub_241048250((uint64_t)v7, (uint64_t)v4);
      uint64_t v42 = sub_241160770();
      *(void *)&long long v102 = sub_24101F0A4(v42, v43, &v104);
      sub_241161430();
      swift_bridgeObjectRelease();
      sub_2410482B4((uint64_t)v7);
      _os_log_impl(&dword_241007000, v38, v39, "scheduleDoses do not exist on MedicationDayScheduleItem: %s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v41, -1, -1);
      MEMORY[0x2456180C0](v40, -1, -1);
    }
    else
    {
      sub_2410482B4((uint64_t)v7);
    }

    return (*(uint64_t (**)(char *, void *))(v8 + 8))(v10, v98);
  }
  uint64_t v35 = v34;
  if (!*(void *)(v34 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  sub_2410280A4(v34 + 32, (uint64_t)&v104);
  sub_241048310((uint64_t)&v104, (uint64_t)&v102);
  if (v103)
  {
    sub_241027314(&v102, (uint64_t)v101);
    sub_24101A6BC(v101, v101[3]);
    sub_24115EAF0();
    uint64_t v36 = v97;
    uint64_t v37 = v99;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v21, 0, 1, v99);
    sub_24101F178((uint64_t)v101);
  }
  else
  {
    uint64_t v36 = v97;
    uint64_t v37 = v99;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v21, 1, 1, v99);
  }
  sub_2410483A0((uint64_t)&v104);
  int v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  if (v45((uint64_t)v21, 1, v37) == 1)
  {
    swift_bridgeObjectRelease();
    return sub_24102A9D0((uint64_t)v21, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  }
  else
  {
    unint64_t v82 = v45;
    uint64_t v83 = v36 + 48;
    uint64_t v84 = v30;
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    uint64_t v47 = v95;
    v81[1] = v36 + 32;
    v81[0] = v46;
    v46(v95, v21, v37);
    sub_24115CC90();
    sub_24115CAF0();
    uint64_t v48 = v94;
    sub_24115CBC0();
    uint64_t v49 = *(void (**)(char *, uint64_t))(v36 + 8);
    v49(v25, v37);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v16, v87);
    char v50 = sub_24115CAB0();
    uint64_t v98 = v49;
    v49(v48, v37);
    id v51 = v84;
    if (v50) {
      uint64_t v52 = (*(uint64_t (**)(char *, char *, uint64_t))(v36 + 16))(v84, v47, v37);
    }
    else {
      uint64_t v52 = sub_24115CAF0();
    }
    uint64_t v104 = 0;
    MEMORY[0x270FA5388](v52);
    uint64_t v79 = (uint64_t)v51;
    uint64_t v80 = &v104;
    unint64_t v53 = sub_24109349C((void *(*)(uint64_t *__return_ptr, uint64_t))sub_241048428, (uint64_t)&v81[-4], v35);
    swift_bridgeObjectRelease();
    uint64_t v54 = (uint64_t)v88;
    uint64_t v87 = v53;
    if (v53 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    uint64_t v55 = v96;
    sub_241048444(v100 + *(int *)(v96 + 24), v54);
    uint64_t v56 = v99;
    if (v82(v54, 1, v99) == 1)
    {
      sub_24102A9D0(v54, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
    }
    else
    {
      uint64_t v57 = v85;
      ((void (*)(char *, uint64_t, uint64_t))v81[0])(v85, v54, v56);
      uint64_t v58 = self;
      uint64_t v59 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
      uint64_t v60 = (void *)sub_24115CAA0();
      id v61 = objc_msgSend(v58, sel_hm_localizableTimeStringKeyWithPrefix_date_, v59, v60);

      sub_241160730();
      v98(v57, v56);
    }
    uint64_t v62 = sub_24115CB90();
    uint64_t v63 = (uint64_t)v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v89, 1, 1, v62);
    uint64_t v64 = v90;
    sub_24115E9E0();
    sub_241047E0C(0, (unint64_t *)&qword_26B007398, (unint64_t *)&qword_26B0073C0, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_24116B370;
    uint64_t v66 = (uint64_t *)(v100 + *(int *)(v55 + 20));
    uint64_t v68 = *v66;
    uint64_t v67 = v66[1];
    *(void *)(v65 + 56) = MEMORY[0x263F8D310];
    *(void *)(v65 + 64) = sub_2410484D8();
    *(void *)(v65 + 32) = v68;
    *(void *)(v65 + 40) = v67;
    swift_bridgeObjectRetain();
    uint64_t v79 = v65;
    sub_24115EF20();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v64, v92);
    sub_24102A9D0(v63, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
    uint64_t v69 = v95;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v94, v95, v56);
    sub_24115ED30();
    swift_allocObject();
    sub_24115ED20();
    uint64_t v70 = v93;
    uint64_t v71 = *(void **)(v93 + qword_26B006C38);
    id v72 = objc_allocWithZone((Class)sub_24115E900());
    swift_retain();
    id v73 = v71;
    uint64_t v74 = (void *)sub_24115E8F0();
    uint64_t v75 = MEMORY[0x2456181C0](v70 + qword_26B006C40);
    if (v75)
    {
      uint64_t v76 = (void *)v75;
      sub_241160E50();
    }
    sub_24115F580();
    swift_release();

    uint64_t v78 = (uint64_t (*)(char *, uint64_t))v98;
    uint64_t v77 = v99;
    v98(v69, v99);
    return v78(v84, v77);
  }
}

uint64_t sub_241047828@<X0>(void *a1@<X0>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  sub_24101A6BC(a1, a1[3]);
  uint64_t result = sub_24115EB00();
  if (__OFADD__(*a2, 1))
  {
    __break(1u);
  }
  else
  {
    ++*a2;
    *a3 = result;
  }
  return result;
}

void sub_2410478A8()
{
}

uint64_t sub_2410478D8()
{
  swift_release();

  swift_release();
  swift_unknownObjectWeakDestroy();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24104794C()
{
  uint64_t v0 = sub_24115DE70();
  swift_release();

  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2410479E0()
{
  return type metadata accessor for MedicationDayScheduleDataSource();
}

void *sub_2410479E8(uint64_t a1, void *a2)
{
  return sub_241046918(a1, a2);
}

uint64_t sub_241047A0C()
{
  return sub_241160DF0();
}

uint64_t sub_241047B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_241046518(a1, a2, a3);
}

uint64_t sub_241047BA8()
{
  return sub_24115E790();
}

uint64_t sub_241047C08()
{
  return sub_241048808(&qword_268CF0770, (void (*)(uint64_t))type metadata accessor for MedicationDayScheduleDataSource);
}

void sub_241047C50()
{
  if (!qword_268CF0778)
  {
    sub_241047D78();
    sub_24102B660();
    sub_241047E74();
    sub_241048808(&qword_268CF0798, (void (*)(uint64_t))sub_241047D78);
    sub_241048808(&qword_26B0072D0, (void (*)(uint64_t))sub_24102B660);
    sub_241048808(&qword_26B006E28, (void (*)(uint64_t))sub_241047E74);
    unint64_t v0 = sub_24115FAB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0778);
    }
  }
}

void sub_241047D78()
{
  if (!qword_268CF0780)
  {
    sub_241047E0C(255, &qword_268CF0788, &qword_268CF0790, MEMORY[0x263F44DD8], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0780);
    }
  }
}

void sub_241047E0C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241020840(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241047E74()
{
  if (!qword_26B006E30)
  {
    sub_24115CB10();
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006E30);
    }
  }
}

void sub_241047EDC(uint64_t a1)
{
}

uint64_t sub_241047F24()
{
  return sub_241048808(&qword_268CF07A8, (void (*)(uint64_t))sub_241047C50);
}

void sub_241047F58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_241024708(255, (unint64_t *)&qword_26B007340);
    _OWORD v11[2] = a4();
    v11[3] = sub_24102A8F8();
    unint64_t v9 = a5(a1, v11);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241048008()
{
  return sub_241048808(&qword_268CF07B8, sub_241047EDC);
}

uint64_t sub_24104803C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241048074(uint64_t a1, char a2)
{
  return sub_241045E8C(a1, a2);
}

uint64_t sub_24104807C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2410480B4(uint64_t *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, char *))(v1 + 16);
  uint64_t v4 = *a1;
  uint64_t v5 = *((unsigned __int8 *)a1 + 8);
  sub_2410481AC();
  return v3(v4, v5, (char *)a1 + *(int *)(v6 + 64));
}

unint64_t sub_241048110()
{
  unint64_t result = qword_268CF07C8;
  if (!qword_268CF07C8)
  {
    sub_241047F58(255, &qword_268CF07B0, (uint64_t (*)(uint64_t))sub_241047EDC, sub_241048008, MEMORY[0x263EFDCA8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF07C8);
  }
  return result;
}

void sub_2410481AC()
{
  if (!qword_268CF07D0)
  {
    sub_241047E0C(255, &qword_268CF0788, &qword_268CF0790, MEMORY[0x263F44DD8], MEMORY[0x263F8D488]);
    sub_24115CB10();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268CF07D0);
    }
  }
}

uint64_t sub_241048250(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationDayScheduleItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410482B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationDayScheduleItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241048310(uint64_t a1, uint64_t a2)
{
  sub_241047E0C(0, (unint64_t *)&qword_268CF07D8, &qword_268CF07E0, MEMORY[0x263F44DD0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410483A0(uint64_t a1)
{
  sub_241047E0C(0, (unint64_t *)&qword_268CF07D8, &qword_268CF07E0, MEMORY[0x263F44DD0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241048428@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241047828(a1, *(void **)(v2 + 24), a2);
}

uint64_t sub_241048444(uint64_t a1, uint64_t a2)
{
  sub_241017170(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2410484D8()
{
  unint64_t result = qword_26B0072E8;
  if (!qword_26B0072E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0072E8);
  }
  return result;
}

uint64_t sub_24104852C(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  sub_241017170(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v24 = (char *)&v22 - v5;
  uint64_t v23 = type metadata accessor for MedicationDayScheduleItem();
  MEMORY[0x270FA5388](v23);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v22 = v2;
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_2410E590C(0, v8, 0);
    uint64_t v9 = v30;
    uint64_t v10 = (void *)(a1 + 32);
    uint64_t v11 = (uint64_t)v24;
    do
    {
      int64_t v26 = v8;
      sub_24101A6BC(v10, v10[3]);
      uint64_t v12 = sub_24115EB20();
      uint64_t v14 = v13;
      sub_24101A6BC(v10, v10[3]);
      sub_24115EB10();
      sub_24101A6BC(v10, v10[3]);
      uint64_t v15 = sub_24115EB30();
      uint64_t v16 = v25;
      swift_unknownObjectRetain();
      sub_241108650(v12, v14, v11, v15, v16, (uint64_t)&off_26F5554D0, (uint64_t)v7);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v30 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2410E590C(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v30;
      }
      unint64_t v19 = *(void *)(v9 + 16);
      unint64_t v18 = *(void *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_2410E590C(v18 > 1, v19 + 1, 1);
        uint64_t v9 = v30;
      }
      uint64_t v28 = v23;
      uint64_t v29 = sub_241048808(&qword_26B006B80, (void (*)(uint64_t))type metadata accessor for MedicationDayScheduleItem);
      uint64_t v20 = sub_2410277C0((uint64_t *)&v27);
      sub_241048250((uint64_t)v7, (uint64_t)v20);
      *(void *)(v9 + 16) = v19 + 1;
      sub_241027314(&v27, v9 + 40 * v19 + 32);
      sub_2410482B4((uint64_t)v7);
      v10 += 5;
      int64_t v8 = v26 - 1;
    }
    while (v26 != 1);
  }
  return v9;
}

uint64_t sub_241048808(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241048850()
{
  qword_268CF0808 = 0x4058C00000000000;
}

void sub_241048864()
{
  if (qword_26B007030 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26B00BC60;
  uint64_t v1 = (void *)sub_2411606F0();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v1, v0, 0);

  qword_268CF27B0 = (uint64_t)v2;
}

uint64_t sub_241048930()
{
  swift_getObjectType();
  uint64_t v20 = sub_24115F790();
  uint64_t v0 = *(void *)(v20 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v20);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v19 - v2;
  uint64_t result = sub_24115E610();
  uint64_t v5 = v23;
  if (v23)
  {
    uint64_t v6 = sub_24101A6BC(v22, v23);
    uint64_t v7 = *(void *)(v5 - 8);
    MEMORY[0x270FA5388](v6);
    uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = sub_24115E3C0();
    unint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    sub_24101F178((uint64_t)v22);
    if (v12 >> 60 == 15)
    {
      sub_24115F770();
      uint64_t v13 = sub_24115F780();
      os_log_type_t v14 = sub_241160D30();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        v22[0] = v16;
        *(_DWORD *)uint64_t v15 = 136315138;
        uint64_t v17 = sub_241161A00();
        uint64_t v21 = sub_24101F0A4(v17, v18, v22);
        sub_241161430();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241007000, v13, v14, "%s Could not get user data from context; will assume HSA2 is not enabled.",
          v15,
          0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v16, -1, -1);
        MEMORY[0x2456180C0](v15, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v0 + 8))(v3, v20);
      return 0;
    }
    else
    {
      sub_24115C750();
      swift_allocObject();
      sub_24115C740();
      sub_24104B4A4();
      sub_24115C730();
      sub_2410230DC(v10, v12);
      swift_release();
      return LOBYTE(v22[0]);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MedicationRoomOnboardingTileViewController.baseIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t MedicationRoomOnboardingTileViewController.baseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*MedicationRoomOnboardingTileViewController.baseIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

double MedicationRoomOnboardingTileViewController.headerIconHeight.getter()
{
  if (qword_268CF02E0 != -1) {
    swift_once();
  }
  return *(double *)&qword_268CF0808;
}

id sub_241048FC8()
{
  return sub_24104994C(&qword_26B004030, (uint64_t (*)(uint64_t, uint64_t))sub_241048FE8);
}

uint64_t sub_241048FE8(uint64_t a1)
{
  sub_24104B4F8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_hk_medicationsSymbolImage);
  id v6 = objc_msgSend(v5, sel_imageByApplyingSymbolConfiguration_, *(void *)(a1 + qword_26B005428));

  if (v6)
  {
    uint64_t v7 = qword_26B007268;
    id v8 = v6;
    if (v7 != -1) {
      swift_once();
    }
    sub_24115C960();
    uint64_t v9 = sub_24115E5C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
    id v10 = objc_allocWithZone((Class)sub_24115E5E0());
    unint64_t v11 = (void *)sub_24115E5D0();
    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    unint64_t v12 = (void *)sub_24115E5B0();
    id v13 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F835F0], 1024);
    objc_msgSend(v12, sel_setFont_, v13);

    return (uint64_t)v11;
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    sub_2411615F0();
    uint64_t v15 = sub_241161A00();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v18 = v15;
    unint64_t v19 = v17;
    sub_241160860();
    uint64_t result = sub_2411616B0();
    __break(1u);
  }
  return result;
}

id sub_2410492B0()
{
  return sub_24104994C(&qword_26B004038, (uint64_t (*)(uint64_t, uint64_t))sub_2410492D0);
}

uint64_t sub_2410492D0(uint64_t a1)
{
  sub_24104B4F8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(id *)(a1 + qword_26B005428);
  id v6 = (void *)sub_2411606F0();
  id v7 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v6, v5);

  if (v7
    && (id v8 = objc_msgSend(v7, sel_imageByApplyingSymbolConfiguration_, *(void *)(a1 + qword_26B005438)),
        v7,
        v8))
  {
    uint64_t v9 = qword_26B007268;
    id v10 = v8;
    if (v9 != -1) {
      swift_once();
    }
    sub_24115C960();
    uint64_t v11 = sub_24115E5C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
    id v12 = objc_allocWithZone((Class)sub_24115E5E0());
    id v13 = (void *)sub_24115E5D0();
    objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    os_log_type_t v14 = (void *)sub_24115E5B0();
    id v15 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F835F0], 1024);
    objc_msgSend(v14, sel_setFont_, v15);

    return (uint64_t)v13;
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    sub_2411615F0();
    uint64_t v17 = sub_241161A00();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v20 = v17;
    unint64_t v21 = v19;
    sub_241160860();
    uint64_t result = sub_2411616B0();
    __break(1u);
  }
  return result;
}

id sub_2410495F0()
{
  return sub_24104994C(&qword_26B004048, (uint64_t (*)(uint64_t, uint64_t))sub_241049610);
}

uint64_t sub_241049610(uint64_t a1)
{
  sub_24104B4F8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(id *)(a1 + qword_26B005428);
  id v6 = (void *)sub_2411606F0();
  id v7 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v6, v5);

  if (v7
    && (id v8 = objc_msgSend(v7, sel_imageByApplyingSymbolConfiguration_, *(void *)(a1 + qword_26B005438)),
        v7,
        v8))
  {
    uint64_t v9 = qword_26B007268;
    id v10 = v8;
    if (v9 != -1) {
      swift_once();
    }
    sub_24115C960();
    uint64_t v11 = sub_24115E5C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
    id v12 = objc_allocWithZone((Class)sub_24115E5E0());
    id v13 = (void *)sub_24115E5D0();
    objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    os_log_type_t v14 = (void *)sub_24115E5B0();
    id v15 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F835F0], 1024);
    objc_msgSend(v14, sel_setFont_, v15);

    return (uint64_t)v13;
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    sub_2411615F0();
    uint64_t v17 = sub_241161A00();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v20 = v17;
    unint64_t v21 = v19;
    sub_241160860();
    uint64_t result = sub_2411616B0();
    __break(1u);
  }
  return result;
}

id sub_24104992C()
{
  return sub_24104994C(&qword_26B004040, (uint64_t (*)(uint64_t, uint64_t))sub_2410499C0);
}

id sub_24104994C(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    id v8 = (void *)a2(v2, ObjectType);
    uint64_t v9 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v8;
    id v5 = v8;

    uint64_t v4 = 0;
  }
  id v10 = v4;
  return v5;
}

uint64_t sub_2410499C0(uint64_t a1)
{
  sub_24104B4F8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B007030 != -1) {
    swift_once();
  }
  id v5 = (id)qword_26B00BC60;
  id v6 = (void *)sub_2411606F0();
  id v7 = objc_msgSend(self, sel_imageNamed_inBundle_, v6, v5);

  if (!v7) {
    goto LABEL_12;
  }
  id v8 = objc_msgSend(v7, sel_imageByApplyingSymbolConfiguration_, *(void *)(a1 + qword_26B005438));

  if (!v8) {
    goto LABEL_12;
  }
  if (sub_241048930())
  {
    id v9 = objc_msgSend(self, sel_sharedConnection);
    if (v9)
    {
      id v10 = v9;
      objc_msgSend(v9, sel_isPasscodeSet);

      goto LABEL_8;
    }
    __break(1u);
LABEL_12:
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_2411615F0();
    uint64_t v19 = sub_241161A00();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v22 = v19;
    unint64_t v23 = v21;
    sub_241160860();
    uint64_t result = sub_2411616B0();
    __break(1u);
    return result;
  }
LABEL_8:
  uint64_t v11 = qword_26B007268;
  id v12 = v8;
  if (v11 != -1) {
    swift_once();
  }
  sub_24115C960();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_24115E5C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  id v14 = objc_allocWithZone((Class)sub_24115E5E0());
  id v15 = (void *)sub_24115E5D0();
  objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  unint64_t v16 = (void *)sub_24115E5B0();
  id v17 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F835F0], 1024);
  objc_msgSend(v16, sel_setFont_, v17);

  return (uint64_t)v15;
}

void *_s26MedicationsHealthAppPlugin42MedicationRoomOnboardingTileViewControllerC03addE6Button33_5FAE89BA6A5E9071AB4F433B857311ADLLSo8UIButtonCvpfi_0()
{
  uint64_t v0 = sub_241161370();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241161320();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2411613C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v20 - v13;
  sub_2411613B0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F821A0], v4);
  sub_241161330();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F821F0], v0);
  sub_241161310();
  id v15 = self;
  id v16 = objc_msgSend(v15, sel_systemBlueColor);
  sub_241161350();
  id v17 = objc_msgSend(v15, sel_systemWhiteColor);
  sub_241161360();
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  sub_2411613A0();
  sub_241024708(0, &qword_268CF0820);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  unint64_t v18 = (void *)sub_2411613D0();
  objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v18, sel_setRole_, 1);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v18;
}

UIImage_optional __swiftcall MedicationRoomOnboardingTileViewController.makeHeaderImage()()
{
  if (qword_268CF02E8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_268CF27B0;
  id v1 = (id)qword_268CF27B0;
  uint64_t v3 = (objc_class *)v0;
  result.value.super.isa = v3;
  result.is_nil = v2;
  return result;
}

id MedicationRoomOnboardingTileViewController.makeBullets()()
{
  sub_24104A2D8();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24116B210;
  *(void *)(v1 + 32) = sub_241048FC8();
  *(void *)(v1 + 40) = sub_2410492B0();
  uint64_t v5 = v1;
  sub_2411609C0();
  if (*(unsigned char *)(v0 + qword_26B005430) == 1)
  {
    sub_2410495F0();
    MEMORY[0x2456167B0]();
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_2411609D0();
    }
    sub_241160A00();
    sub_2411609C0();
  }
  id result = objc_msgSend(self, sel_sharedConnection);
  if (result)
  {
    uint64_t v3 = result;
    unsigned int v4 = objc_msgSend(result, sel_isPasscodeSet);

    if (v4)
    {
      sub_24104992C();
      MEMORY[0x2456167B0]();
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2411609D0();
      }
      sub_241160A00();
      sub_2411609C0();
    }
    return (id)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24104A2D8()
{
  if (!qword_26B0073A0)
  {
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0073A0);
    }
  }
}

uint64_t MedicationRoomOnboardingTileViewController.makeButtons()()
{
  uint64_t v1 = *(void **)(v0 + qword_26B005418);
  objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v0, sel_presentAddMedicationFlow, 64);
  objc_msgSend(v1, sel_setEnabled_, 1);
  sub_24104A2D8();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24116B220;
  *(void *)(v2 + 32) = v1;
  uint64_t v5 = v2;
  sub_2411609C0();
  id v3 = v1;
  return v5;
}

Swift::Void __swiftcall MedicationRoomOnboardingTileViewController.viewDidLoad()()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for MedicationRoomOnboardingTileViewController();
  objc_msgSendSuper2(&v7, sel_viewDidLoad);
  uint64_t v1 = (uint64_t *)&v0[direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier];
  swift_beginAccess();
  uint64_t v3 = *v1;
  uint64_t v2 = (void *)v1[1];
  swift_bridgeObjectRetain();
  v4.value._countAndFlagsBits = v3;
  v4.value._object = v2;
  MedicationRoomOnboardingTileViewController.updateAutomationIdentifiers(with:)(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_24115E600();
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  uint64_t v6 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setText_, v6, 0xE000000000000000);
}

uint64_t type metadata accessor for MedicationRoomOnboardingTileViewController()
{
  uint64_t result = qword_26B005450;
  if (!qword_26B005450) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24104A550(void *a1)
{
  id v1 = a1;
  MedicationRoomOnboardingTileViewController.viewDidLoad()();
}

void sub_24104A598(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_navigationController);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_24115F370();
    swift_allocObject();
    sub_24115F360();
    id v4 = (id)sub_24115EDD0();
    sub_241160E50();

    swift_release();
  }
  else
  {
    sub_2411616B0();
    __break(1u);
  }
}

Swift::Void __swiftcall MedicationRoomOnboardingTileViewController.updateAutomationIdentifiers(with:)(Swift::String_optional with)
{
  uint64_t v2 = v1;
  object = with.value._object;
  uint64_t countAndFlagsBits = with.value._countAndFlagsBits;
  uint64_t v5 = sub_24115F790();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (object)
  {
    uint64_t v9 = (void *)sub_24115E5F0();
    uint64_t v28 = countAndFlagsBits;
    uint64_t v29 = object;
    swift_bridgeObjectRetain();
    sub_241160860();
    uint64_t v10 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

    uint64_t v11 = (void *)sub_24115E600();
    uint64_t v28 = countAndFlagsBits;
    uint64_t v29 = object;
    swift_bridgeObjectRetain();
    sub_241160860();
    id v12 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setAccessibilityIdentifier_, v12);

    id v13 = sub_241048FC8();
    uint64_t v28 = countAndFlagsBits;
    uint64_t v29 = object;
    swift_bridgeObjectRetain();
    sub_241160860();
    id v14 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setAccessibilityIdentifier_, v14);

    id v15 = sub_2410492B0();
    uint64_t v28 = countAndFlagsBits;
    uint64_t v29 = object;
    swift_bridgeObjectRetain();
    sub_241160860();
    id v16 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setAccessibilityIdentifier_, v16);

    id v17 = sub_2410495F0();
    uint64_t v28 = countAndFlagsBits;
    uint64_t v29 = object;
    swift_bridgeObjectRetain();
    sub_241160860();
    unint64_t v18 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setAccessibilityIdentifier_, v18);

    id v19 = sub_24104992C();
    uint64_t v28 = countAndFlagsBits;
    uint64_t v29 = object;
    swift_bridgeObjectRetain();
    sub_241160860();
    uint64_t v20 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setAccessibilityIdentifier_, v20);

    unint64_t v21 = *(void **)(v2 + qword_26B005418);
    uint64_t v28 = countAndFlagsBits;
    uint64_t v29 = object;
    swift_bridgeObjectRetain();
    sub_241160860();
    uint64_t v27 = sub_2411606F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setAccessibilityIdentifier_, v27);
    uint64_t v22 = (void *)v27;
  }
  else
  {
    sub_24115F740();
    unint64_t v23 = sub_24115F780();
    os_log_type_t v24 = sub_241160D30();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_241007000, v23, v24, "No base identifier for UIA", v25, 2u);
      MEMORY[0x2456180C0](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

id MedicationRoomOnboardingTileViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id MedicationRoomOnboardingTileViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  uint64_t v7 = qword_26B005428;
  sub_241024708(0, &qword_26B007000);
  uint64_t v8 = v3;
  uint64_t v9 = (void *)sub_2411611F0();
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_configurationWithFont_, v9);

  *(void *)&v4[v7] = v11;
  uint64_t v12 = qword_26B005438;
  id v13 = objc_msgSend(self, sel_systemCyanColor);
  id v14 = objc_msgSend(v10, sel_configurationWithHierarchicalColor_, v13);

  *(void *)&v8[v12] = v14;
  *(void *)&v8[qword_26B005440] = 0;
  *(void *)&v8[qword_26B005448] = 0;
  uint64_t v15 = qword_26B005430;
  v8[v15] = objc_msgSend(self, sel_supportsOntologyBackedMedications);
  id v16 = (uint64_t *)&v8[direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier];
  uint64_t v24 = sub_241160730();
  uint64_t v25 = v17;
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  uint64_t v18 = v25;
  *id v16 = v24;
  v16[1] = v18;
  *(void *)&v8[qword_26B004030] = 0;
  *(void *)&v8[qword_26B004038] = 0;
  *(void *)&v8[qword_26B004048] = 0;
  *(void *)&v8[qword_26B004040] = 0;
  uint64_t v19 = qword_26B005418;
  *(void *)&v8[v19] = _s26MedicationsHealthAppPlugin42MedicationRoomOnboardingTileViewControllerC03addE6Button33_5FAE89BA6A5E9071AB4F433B857311ADLLSo8UIButtonCvpfi_0();

  if (a2)
  {
    uint64_t v20 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = 0;
  }
  v23.receiver = v8;
  v23.super_class = (Class)type metadata accessor for MedicationRoomOnboardingTileViewController();
  id v21 = objc_msgSendSuper2(&v23, sel_initWithNibName_bundle_, v20, a3);

  return v21;
}

id sub_24104ADFC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_241160730();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return MedicationRoomOnboardingTileViewController.init(nibName:bundle:)(v5, v7, a4);
}

id MedicationRoomOnboardingTileViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id MedicationRoomOnboardingTileViewController.init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = qword_26B005428;
  sub_241024708(0, &qword_26B007000);
  uint64_t v5 = v1;
  uint64_t v6 = (void *)sub_2411611F0();
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_configurationWithFont_, v6);

  *(void *)&v2[v4] = v8;
  uint64_t v9 = qword_26B005438;
  id v10 = objc_msgSend(self, sel_systemCyanColor);
  id v11 = objc_msgSend(v7, sel_configurationWithHierarchicalColor_, v10);

  *(void *)&v5[v9] = v11;
  *(void *)&v5[qword_26B005440] = 0;
  *(void *)&v5[qword_26B005448] = 0;
  uint64_t v12 = qword_26B005430;
  v5[v12] = objc_msgSend(self, sel_supportsOntologyBackedMedications);
  id v13 = (uint64_t *)&v5[direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier];
  uint64_t v20 = sub_241160730();
  uint64_t v21 = v14;
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  uint64_t v15 = v21;
  *id v13 = v20;
  v13[1] = v15;
  *(void *)&v5[qword_26B004030] = 0;
  *(void *)&v5[qword_26B004038] = 0;
  *(void *)&v5[qword_26B004048] = 0;
  *(void *)&v5[qword_26B004040] = 0;
  uint64_t v16 = qword_26B005418;
  *(void *)&v5[v16] = _s26MedicationsHealthAppPlugin42MedicationRoomOnboardingTileViewControllerC03addE6Button33_5FAE89BA6A5E9071AB4F433B857311ADLLSo8UIButtonCvpfi_0();

  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for MedicationRoomOnboardingTileViewController();
  id v17 = objc_msgSendSuper2(&v19, sel_initWithCoder_, a1);

  return v17;
}

id sub_24104B0E4(uint64_t a1, uint64_t a2, void *a3)
{
  return MedicationRoomOnboardingTileViewController.init(coder:)(a3);
}

void sub_24104B10C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v1 = *(void **)(v0 + qword_26B005418);
}

id MedicationRoomOnboardingTileViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationRoomOnboardingTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_24104B208(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  objc_super v2 = *(void **)(a1 + qword_26B005418);
}

uint64_t sub_24104B2D8()
{
  uint64_t v1 = (uint64_t *)(*v0 + direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_24104B334(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2 + direct field offset for MedicationRoomOnboardingTileViewController.baseIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24104B398())()
{
  return j__swift_endAccess;
}

void sub_24104B3FC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_24104B420()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24104B49C()
{
  return type metadata accessor for MedicationRoomOnboardingTileViewController();
}

unint64_t sub_24104B4A4()
{
  unint64_t result = qword_268CF0810;
  if (!qword_268CF0810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0810);
  }
  return result;
}

void sub_24104B4F8()
{
  if (!qword_268CF0818)
  {
    sub_24115E5C0();
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0818);
    }
  }
}

uint64_t sub_24104B554(char a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = sub_24115F790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  id v13 = sub_24115F780();
  os_log_type_t v14 = sub_241160D50();
  int v15 = v14;
  BOOL v16 = os_log_type_enabled(v13, v14);
  int v38 = a2;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = v9;
    uint64_t v18 = v17;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v40 = v34;
    *(_DWORD *)uint64_t v18 = 136446722;
    uint64_t v36 = a4;
    uint64_t v39 = sub_24104D054(0);
    sub_24104D074(0, &qword_26B004F00, (void (*)(uint64_t))sub_24104D054);
    uint64_t v37 = v4;
    uint64_t v19 = sub_241160760();
    int v33 = v15;
    char v20 = a1;
    char v21 = a2;
    uint64_t v39 = sub_24101F0A4(v19, v22, &v40);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    if (v20) {
      uint64_t v23 = 1702195828;
    }
    else {
      uint64_t v23 = 0x65736C6166;
    }
    if (v20) {
      unint64_t v24 = 0xE400000000000000;
    }
    else {
      unint64_t v24 = 0xE500000000000000;
    }
    uint64_t v39 = sub_24101F0A4(v23, v24, &v40);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2082;
    if (v21) {
      uint64_t v25 = 1702195828;
    }
    else {
      uint64_t v25 = 0x65736C6166;
    }
    if (v21) {
      unint64_t v26 = 0xE400000000000000;
    }
    else {
      unint64_t v26 = 0xE500000000000000;
    }
    uint64_t v39 = sub_24101F0A4(v25, v26, &v40);
    a4 = v36;
    uint64_t v5 = v37;
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v13, (os_log_type_t)v33, "[%{public}s] Health records medication onboarding tile state; Onboardable: %{public}s isDismissedFromCategoryRoom: %{public}s",
      (uint8_t *)v18,
      0x20u);
    uint64_t v27 = v34;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v27, -1, -1);
    MEMORY[0x2456180C0](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v35);
    if ((v20 & 1) == 0) {
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if ((a1 & 1) == 0) {
      return MEMORY[0x263F8EE78];
    }
  }
  sub_241023A78(0, (unint64_t *)&qword_26B005F20, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
  uint64_t v29 = *(void *)(sub_24115D0A0() - 8);
  unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_24116B370;
  sub_24104C388(a4, v38 & 1, v28 + v30);
  if (v5)
  {
    *(void *)(v28 + 16) = 0;
    swift_release();
  }
  return v28;
}

uint64_t sub_24104B960@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_241023A78(0, &qword_268CF0828, (uint64_t (*)(uint64_t))sub_24102B068, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v31 - v6;
  sub_24102BC84(0, &qword_26B005FE0, MEMORY[0x263EFDEA0]);
  uint64_t v9 = v8;
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v36 = sub_24115F790();
  uint64_t v12 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  os_log_type_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = *a1;
  sub_24115F730();
  id v16 = v15;
  id v17 = v15;
  uint64_t v18 = sub_24115F780();
  os_log_type_t v19 = sub_241160D30();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v33 = v9;
    uint64_t v21 = v20;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v40 = v32;
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v35 = a2;
    uint64_t v39 = sub_24104D054(0);
    sub_24104D074(0, &qword_26B004F00, (void (*)(uint64_t))sub_24104D054);
    uint64_t v22 = sub_241160760();
    uint64_t v34 = v5;
    uint64_t v39 = sub_24101F0A4(v22, v23, &v40);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v39 = (uint64_t)v15;
    id v24 = v15;
    sub_24102A354();
    uint64_t v25 = sub_241160790();
    uint64_t v39 = sub_24101F0A4(v25, v26, &v40);
    a2 = v35;
    sub_241161430();
    uint64_t v5 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v18, v19, "[%{public}s] Unable to make feed items for commit: %{public}s", (uint8_t *)v21, 0x16u);
    uint64_t v27 = v32;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v27, -1, -1);
    uint64_t v28 = v21;
    uint64_t v9 = v33;
    MEMORY[0x2456180C0](v28, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v36);
  uint64_t v40 = MEMORY[0x263F8EE78];
  sub_24102B068(0);
  sub_24115FCC0();
  sub_24102A354();
  sub_24115FC90();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v5);
  sub_24102BD78((unint64_t *)&qword_26B005FD8, &qword_26B005FE0, MEMORY[0x263EFDEA0]);
  uint64_t v29 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v11, v9);
  *a2 = v29;
  return result;
}

uint64_t sub_24104BE1C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (uint64_t (*)(void, uint64_t))MEMORY[0x263F8E0F8];
  sub_24102AF9C(0, &qword_26B005F40, MEMORY[0x263F45828], MEMORY[0x263F8E0F8]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24116B370;
  sub_24102AF9C(0, (unint64_t *)&qword_26B007390, MEMORY[0x263F8D310], v4);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24116B370;
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_24115D170();
  sub_24115CEF0();

  sub_241160860();
  swift_bridgeObjectRelease();
  *(void *)(inited + 32) = 0xD000000000000021;
  *(void *)(inited + 40) = 0x8000000241163900;
  uint64_t v8 = sub_2410CD6A4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = sub_24115D170();
  *(void *)(v5 + 32) = v3;
  *(void *)(v5 + 40) = v8;
  *(void *)(v5 + 48) = result;
  *(void *)(v5 + 56) = 0;
  *(unsigned char *)(v5 + 64) = 0x80;
  *a2 = v5;
  return result;
}

uint64_t sub_24104BFA0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24104CFD8();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24115F790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  sub_24115F730();
  id v14 = v13;
  id v15 = v13;
  id v16 = sub_24115F780();
  os_log_type_t v17 = sub_241160D30();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v33 = v5;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v32 = v6;
    uint64_t v21 = v20;
    uint64_t v36 = v20;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v31 = v9;
    uint64_t v35 = sub_24104D054(0);
    sub_24104D074(0, &qword_26B004F00, (void (*)(uint64_t))sub_24104D054);
    uint64_t v22 = sub_241160760();
    uint64_t v34 = a2;
    uint64_t v35 = sub_24101F0A4(v22, v23, &v36);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    uint64_t v35 = (uint64_t)v13;
    id v24 = v13;
    sub_24102A354();
    uint64_t v25 = sub_241160790();
    uint64_t v35 = sub_24101F0A4(v25, v26, &v36);
    sub_241161430();
    a2 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v16, v17, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v21;
    uint64_t v6 = v32;
    MEMORY[0x2456180C0](v27, -1, -1);
    uint64_t v28 = v19;
    uint64_t v5 = v33;
    MEMORY[0x2456180C0](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v31);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v36 = MEMORY[0x263F8EE78];
  sub_24102AF9C(0, &qword_26B005CA8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_24115FCC0();
  sub_241017EA0(&qword_26B005B98, (void (*)(uint64_t))sub_24104CFD8);
  uint64_t v29 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v29;
  return result;
}

uint64_t sub_24104C388@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v41 = a2;
  uint64_t v37 = sub_24115D2A0();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v33 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_24115D330();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v32 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24115D7B0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24115D830();
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v40 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v30 = (unint64_t)"22CHRAddAccountGenerator";
  uint64_t v31 = a1;
  unint64_t v43 = 0xD000000000000021;
  unint64_t v44 = 0x8000000241163900;
  uint64_t v13 = (void *)sub_24115D170();
  sub_24115CEF0();

  sub_241160860();
  swift_bridgeObjectRelease();
  void v29[2] = v44;
  v29[3] = v43;
  if (qword_26B007378 != -1) {
    swift_once();
  }
  uint64_t v38 = v12;
  uint64_t v42 = a3;
  id v14 = (id)static NSBundle.medicationsHealthAppPlugin;
  sub_24115D7A0();
  v29[1] = v9;
  if (qword_26B007268 != -1) {
    swift_once();
  }
  v29[0] = sub_24115C960();
  sub_24115C960();
  sub_24115C960();
  sub_24115C960();
  id v15 = v38;
  sub_24115D820();
  unint64_t v43 = 0xD000000000000021;
  unint64_t v44 = v30 | 0x8000000000000000;
  id v16 = (void *)sub_24115D170();
  sub_24115CEF0();

  sub_241160860();
  swift_bridgeObjectRelease();
  os_log_type_t v17 = (void *)sub_24115D170();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_2411616E0()) {
    sub_2411384E4(MEMORY[0x263F8EE78]);
  }
  type metadata accessor for CHRAddAccountFeedItemViewController();
  sub_241017EA0(&qword_26B004018, (void (*)(uint64_t))type metadata accessor for CHRAddAccountFeedItemViewController);
  sub_24115CF60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v33, *MEMORY[0x263F456F0], v37);
  uint64_t v18 = v32;
  sub_24115D340();
  uint64_t v19 = v36;
  sub_24115CF80();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v19);
  uint64_t v20 = sub_24115D210();
  uint64_t v22 = v21;
  unint64_t v23 = (void (*)(unint64_t *, void))sub_24115D070();
  sub_2410257B0(&v45, v20, v22);
  swift_bridgeObjectRelease();
  v23(&v43, 0);
  if (v41)
  {
    uint64_t v24 = sub_24115D230();
    uint64_t v26 = v25;
    uint64_t v27 = (void (*)(unint64_t *, void))sub_24115D070();
    sub_2410257B0(&v45, v24, v26);
    swift_bridgeObjectRelease();
    v27(&v43, 0);
  }
  sub_24115CF90();
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v40);
}

uint64_t sub_24104CA7C()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin22CHRAddAccountGenerator_domain;
  uint64_t v2 = sub_24115D130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_241018340(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin22CHRAddAccountGenerator_context);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24104CB44()
{
  return type metadata accessor for CHRAddAccountGenerator();
}

uint64_t sub_24104CB4C()
{
  uint64_t result = sub_24115D130();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MedicationsGeneratorContext();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_24104CC2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin22CHRAddAccountGenerator_domain;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_24104CCA4()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24104CD40(char a1, int a2)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  return sub_24104B554(a1, a2, *(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_24104CDEC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24104CE24@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24104CE64()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24104CE74@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24104B960(a1, a2);
}

uint64_t sub_24104CE7C()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24104CF18@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24104BE1C(a1, a2);
}

uint64_t sub_24104CFC0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24104CFD0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24104BFA0(a1, a2);
}

void sub_24104CFD8()
{
  if (!qword_26B005BA0)
  {
    sub_24102AF9C(255, &qword_26B005CA8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_24115FCB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005BA0);
    }
  }
}

uint64_t sub_24104D054(uint64_t a1)
{
  return sub_24104D074(a1, &qword_26B004EF8, (void (*)(uint64_t))type metadata accessor for CHRAddAccountGenerator);
}

uint64_t sub_24104D074(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_24104D0B4(char *a1, char *a2)
{
  uint64_t v4 = sub_2411605E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v15 - v9;
  sub_241160570();
  sub_241160530();
  char v11 = sub_241160540();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  if (v11)
  {
    v12(a2, v4);
    v12(a1, v4);
    v12(v10, v4);
    return 0;
  }
  else
  {
    sub_241160530();
    sub_24103473C();
    char v14 = sub_2411606A0();
    v12(a2, v4);
    v12(a1, v4);
    v12(v8, v4);
    v12(v10, v4);
    if (v14) {
      return 2;
    }
    else {
      return 1;
    }
  }
}

uint64_t sub_24104D29C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_24104D4C8(a1, (uint64_t)v6);
  if (!v7)
  {
    uint64_t result = sub_24104D52C((uint64_t)v6);
    goto LABEL_5;
  }
  uint64_t result = swift_dynamicCast();
  if (!result)
  {
LABEL_5:
    char v4 = 0;
    goto LABEL_6;
  }
  char v4 = v5;
LABEL_6:
  *a2 = v4;
  return result;
}

uint64_t sub_24104D314()
{
  swift_release();

  return swift_deallocClassInstance();
}

void sub_24104D35C()
{
  if (!qword_26B0059A0)
  {
    sub_24102ACC4(255, &qword_26B005DD8, MEMORY[0x263F8D488]);
    sub_24104D454();
    unint64_t v0 = sub_24115FBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0059A0);
    }
  }
}

void sub_24104D3F8()
{
  if (!qword_26B0073D0)
  {
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0073D0);
    }
  }
}

unint64_t sub_24104D454()
{
  unint64_t result = qword_26B005DE0;
  if (!qword_26B005DE0)
  {
    sub_24102ACC4(255, &qword_26B005DD8, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005DE0);
  }
  return result;
}

uint64_t sub_24104D4C8(uint64_t a1, uint64_t a2)
{
  sub_24104D3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24104D52C(uint64_t a1)
{
  sub_24104D3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24104D588()
{
  unint64_t result = qword_26B004148;
  if (!qword_26B004148)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B004148);
  }
  return result;
}

uint64_t sub_24104D5E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24104D62C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObserverSet()
{
  return sub_24104DBA0();
}

uint64_t sub_24104D67C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24115C990();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(*(id *)(a1 + 16), sel_objectEnumerator);
  sub_241160C90();

  sub_24115C980();
  if (!v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  while (1)
  {
    sub_241023394(&v15, v14);
    sub_24101F1C8((uint64_t)v14, (uint64_t)v13);
    sub_24104DB4C();
    if ((swift_dynamicCast() & 1) == 0) {
      break;
    }
    uint64_t v9 = v12[1];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 16))(a2, &off_26F555108, ObjectType, v9);
    swift_unknownObjectRelease();
    sub_24101F178((uint64_t)v14);
    sub_24115C980();
    if (!v16) {
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_241161690();
  sub_241160860();
  sub_241160860();
  swift_release();
  uint64_t result = sub_2411616B0();
  __break(1u);
  return result;
}

uint64_t sub_24104D8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24115C990();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(*(id *)(a1 + 16), sel_objectEnumerator);
  sub_241160C90();

  sub_24115C980();
  if (!v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  while (1)
  {
    sub_241023394(&v15, v14);
    sub_24101F1C8((uint64_t)v14, (uint64_t)v13);
    sub_24104DB4C();
    if ((swift_dynamicCast() & 1) == 0) {
      break;
    }
    uint64_t v9 = v12[1];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 8))(a2, &off_26F555108, ObjectType, v9);
    swift_unknownObjectRelease();
    sub_24101F178((uint64_t)v14);
    sub_24115C980();
    if (!v16) {
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_241161690();
  sub_241160860();
  sub_241160860();
  swift_release();
  uint64_t result = sub_2411616B0();
  __break(1u);
  return result;
}

unint64_t sub_24104DB4C()
{
  unint64_t result = qword_26B006CF8;
  if (!qword_26B006CF8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B006CF8);
  }
  return result;
}

uint64_t sub_24104DBA0()
{
  return swift_getGenericMetadata();
}

void sub_24104DCAC()
{
  id v1 = objc_msgSend(v0, sel_childViewControllers);
  sub_24104F1E8();
  unint64_t v2 = sub_2411609A0();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)sub_2411616E0();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v3 = *(void **)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x245617450](0, v2);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_26;
    }
    id v4 = *(id *)(v2 + 32);
  }
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v5, sel_title);

  if (v6)
  {
    sub_241160730();

    uint64_t v3 = (void *)sub_2411606F0();
    goto LABEL_8;
  }
  uint64_t v3 = 0;
LABEL_10:
  objc_msgSend(v0, sel_setTitle_, v3);

  id v7 = objc_msgSend(v0, sel_childViewControllers);
  unint64_t v2 = sub_2411609A0();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v15)
    {
LABEL_12:
      if ((v2 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v8 = *(id *)(v2 + 32);
        goto LABEL_15;
      }
LABEL_26:
      id v8 = (id)MEMORY[0x245617450](0, v2);
LABEL_15:
      uint64_t v9 = v8;
      swift_bridgeObjectRelease();
      id v10 = objc_msgSend(v0, sel_navigationItem);
      id v11 = objc_msgSend(v9, sel_navigationItem);
      id v12 = objc_msgSend(v11, sel_largeTitleDisplayMode);

      objc_msgSend(v10, sel_setLargeTitleDisplayMode_, v12);
      id v16 = objc_msgSend(v0, sel_navigationItem);
      id v13 = objc_msgSend(v9, sel_navigationItem);
      id v14 = objc_msgSend(v13, sel_rightBarButtonItem);

      objc_msgSend(v16, sel_setRightBarButtonItem_, v14);

      return;
    }
  }
  else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_12;
  }

  swift_bridgeObjectRelease();
}

void sub_24104DFB8(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v75 = sub_24115F790();
  uint64_t v3 = *(void *)(v75 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v75);
  uint64_t v74 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v8 = (char *)&v67 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v71 = (char *)&v67 - v9;
  sub_24104F228(0, qword_26B004328, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)&v67 - v11;
  uint64_t v13 = type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  os_log_type_t v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v70 = (uint64_t)&v67 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v67 - v20;
  uint64_t v73 = a1;
  sub_24104F0E8(a1, (uint64_t)v78);
  uint64_t v76 = v1;
  if (v79)
  {
    uint64_t v67 = v8;
    uint64_t v68 = v17;
    uint64_t v69 = v21;
    id v72 = sub_24101A6BC(v78, v79);
    sub_24115C750();
    swift_allocObject();
    sub_24115C740();
    sub_24104F2D8(&qword_268CF0870, 255, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
    sub_24104F2D8(&qword_26B004270, 255, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
    sub_24115E3D0();
    swift_release();
    sub_24101F178((uint64_t)v78);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      uint64_t v22 = (uint64_t)v69;
      sub_24104F320((uint64_t)v12, (uint64_t)v69);
      sub_24104F0E8(v73, (uint64_t)v78);
      if (v79)
      {
        sub_24101A6BC(v78, v79);
        unint64_t v23 = (void *)sub_24115E3A0();
        uint64_t v24 = *(void *)(v22 + 16);
        unint64_t v25 = *(void *)(v22 + 24);
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_24113D4D8(v24, v25);

        swift_bridgeObjectRelease();
        sub_24101F178((uint64_t)v78);
        uint64_t v27 = (uint64_t)v68;
        if (v26)
        {
          uint64_t v28 = v71;
          sub_24115F740();
          uint64_t v29 = v70;
          sub_24104F384(v22, v70);
          unint64_t v30 = sub_24115F780();
          os_log_type_t v31 = sub_241160D50();
          if (os_log_type_enabled(v30, v31))
          {
            uint64_t v32 = swift_slowAlloc();
            uint64_t v74 = (char *)swift_slowAlloc();
            v78[0] = (uint64_t)v74;
            *(_DWORD *)uint64_t v32 = 136315394;
            uint64_t v33 = sub_241161A00();
            uint64_t v77 = sub_24101F0A4(v33, v34, v78);
            sub_241161430();
            swift_bridgeObjectRelease();
            *(_WORD *)(v32 + 12) = 2080;
            uint64_t v35 = *(void *)(v29 + 16);
            unint64_t v36 = *(void *)(v29 + 24);
            swift_bridgeObjectRetain();
            uint64_t v37 = v35;
            uint64_t v22 = (uint64_t)v69;
            uint64_t v77 = sub_24101F0A4(v37, v36, v78);
            sub_241161430();
            swift_bridgeObjectRelease();
            sub_24104F3E8(v29);
            _os_log_impl(&dword_241007000, v30, v31, "%s Creating concept detail view controller for %s", (uint8_t *)v32, 0x16u);
            uint64_t v38 = v74;
            swift_arrayDestroy();
            MEMORY[0x2456180C0](v38, -1, -1);
            MEMORY[0x2456180C0](v32, -1, -1);

            (*(void (**)(char *, uint64_t))(v3 + 8))(v71, v75);
          }
          else
          {
            sub_24104F3E8(v29);

            (*(void (**)(char *, uint64_t))(v3 + 8))(v28, v75);
          }
          uint64_t v63 = *(void **)(v76
                         + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_healthStore);
          sub_24115F0C0();
          id v64 = v26;
          id v65 = v63;
          sub_24115F0B0();
          sub_24115F070();
          swift_release();
          id v66 = objc_allocWithZone((Class)sub_24115EE70());
          uint64_t v62 = (void *)sub_24115EE50();
          sub_24104E988(v62);

LABEL_18:
          sub_24104F3E8(v22);
          return;
        }
      }
      else
      {
        sub_24104F27C((uint64_t)v78, (unint64_t *)&qword_268CF0858, (void (*)(uint64_t))sub_24104F090);
        uint64_t v27 = (uint64_t)v68;
      }
      char v50 = v67;
      sub_24115F740();
      sub_24104F384(v22, v27);
      id v51 = sub_24115F780();
      os_log_type_t v52 = sub_241160D50();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = swift_slowAlloc();
        uint64_t v74 = (char *)swift_slowAlloc();
        v78[0] = (uint64_t)v74;
        *(_DWORD *)uint64_t v53 = 136315394;
        uint64_t v54 = sub_241161A00();
        uint64_t v77 = sub_24101F0A4(v54, v55, v78);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 12) = 2080;
        uint64_t v56 = *(void *)(v27 + 16);
        unint64_t v57 = *(void *)(v27 + 24);
        swift_bridgeObjectRetain();
        uint64_t v77 = sub_24101F0A4(v56, v57, v78);
        uint64_t v22 = (uint64_t)v69;
        sub_241161430();
        swift_bridgeObjectRelease();
        sub_24104F3E8(v27);
        _os_log_impl(&dword_241007000, v51, v52, "%s Could not get medication concept for %s: Defaulting to category view controller", (uint8_t *)v53, 0x16u);
        uint64_t v58 = v74;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v58, -1, -1);
        MEMORY[0x2456180C0](v53, -1, -1);
      }
      else
      {
        sub_24104F3E8(v27);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v50, v75);
      uint64_t v59 = *(void **)(v76
                     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_healthStore);
      uint64_t v60 = *(void *)(v76
                      + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_provenance);
      id v61 = objc_allocWithZone((Class)type metadata accessor for MedicationCategoryViewController());
      uint64_t v62 = MedicationCategoryViewController.init(healthStore:provenance:)(v59, v60);
      sub_24104E988(v62);
      goto LABEL_18;
    }
  }
  else
  {
    sub_24104F27C((uint64_t)v78, (unint64_t *)&qword_268CF0858, (void (*)(uint64_t))sub_24104F090);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  }
  sub_24104F27C((uint64_t)v12, qword_26B004328, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
  uint64_t v39 = v74;
  sub_24115F740();
  uint64_t v40 = sub_24115F780();
  os_log_type_t v41 = sub_241160D50();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    v78[0] = v43;
    *(_DWORD *)uint64_t v42 = 136315138;
    uint64_t v44 = sub_241161A00();
    uint64_t v77 = sub_24101F0A4(v44, v45, v78);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v40, v41, "%s No medications data: Defaulting to category view controller", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v43, -1, -1);
    MEMORY[0x2456180C0](v42, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v39, v75);
  uint64_t v46 = *(void **)(v76 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_healthStore);
  uint64_t v47 = *(void *)(v76 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_provenance);
  id v48 = objc_allocWithZone((Class)type metadata accessor for MedicationCategoryViewController());
  id v49 = MedicationCategoryViewController.init(healthStore:provenance:)(v46, v47);
  sub_24104E988(v49);
}

void sub_24104E988(void *a1)
{
  id v3 = objc_msgSend(v1, sel_childViewControllers);
  sub_24104F1E8();
  unint64_t v4 = sub_2411609A0();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_9;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x245617450](0, v4);
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_20;
    }
    id v5 = *(id *)(v4 + 32);
  }
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_willMoveToParentViewController_, 0);
  id v7 = objc_msgSend(v6, sel_view);
  if (!v7)
  {
LABEL_25:
    __break(1u);
    return;
  }
  id v8 = v7;
  objc_msgSend(v7, sel_removeFromSuperview);

  objc_msgSend(v6, sel_removeFromParentViewController);
LABEL_10:
  objc_msgSend(v1, sel_addChildViewController_, a1);
  id v10 = objc_msgSend(v1, sel_view);
  if (!v10)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v11 = v10;
  id v12 = objc_msgSend(a1, sel_view);
  if (!v12)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v13 = v12;
  objc_msgSend(v11, sel_addSubview_, v12);

  id v14 = objc_msgSend(a1, sel_view);
  if (!v14)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v15 = v14;
  id v16 = objc_msgSend(v1, sel_view);
  if (!v16)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  os_log_type_t v17 = v16;
  objc_msgSend(v16, sel_bounds);
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  double v25 = v24;

  objc_msgSend(v15, sel_setFrame_, v19, v21, v23, v25);
  id v26 = objc_msgSend(a1, sel_view);
  if (!v26)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v27 = v26;
  objc_msgSend(v26, sel_setAutoresizingMask_, 18);

  objc_msgSend(a1, sel_didMoveToParentViewController_, v1);

  sub_24104DCAC();
}

id sub_24104EC68()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsRoutingDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsRoutingDetailViewController()
{
  return self;
}

uint64_t sub_24104ED38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_context;
  swift_beginAccess();
  return sub_24104F0E8(v3, a1);
}

uint64_t sub_24104ED8C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_context;
  swift_beginAccess();
  sub_24104F168(a1, v3);
  swift_endAccess();
  sub_24104F0E8(v3, (uint64_t)v5);
  sub_24104DFB8((uint64_t)v5);
  sub_24104F27C((uint64_t)v5, (unint64_t *)&qword_268CF0858, (void (*)(uint64_t))sub_24104F090);
  return sub_24104F27C(a1, (unint64_t *)&qword_268CF0858, (void (*)(uint64_t))sub_24104F090);
}

void (*sub_24104EE40(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_context;
  v3[5] = v1;
  v3[6] = v4;
  swift_beginAccess();
  return sub_24104EEAC;
}

void sub_24104EEAC(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_24104F0E8(v3[5] + v3[6], (uint64_t)v3);
    sub_24104DFB8((uint64_t)v3);
    sub_24104F27C((uint64_t)v3, (unint64_t *)&qword_268CF0858, (void (*)(uint64_t))sub_24104F090);
  }

  free(v3);
}

uint64_t sub_24104EF2C@<X0>(uint64_t a1@<X8>)
{
  return sub_2410280A4(*v1+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_pinnedContentManager, a1);
}

uint64_t sub_24104EF54(uint64_t a1, uint64_t a2)
{
  return sub_24104F2D8(&qword_268CF0850, a2, (void (*)(uint64_t))type metadata accessor for MedicationsRoutingDetailViewController);
}

id sub_24104EF9C(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = &v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_context];
  *(_OWORD *)id v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  *(void *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_healthStore] = a1;
  sub_2410280A4(a2, (uint64_t)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_pinnedContentManager]);
  *(void *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsRoutingDetailViewController_provenance] = a3;
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for MedicationsRoutingDetailViewController();
  id v8 = a1;
  uint64_t v12 = 0;
  memset(v11, 0, sizeof(v11));
  id v9 = objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, 0, 0);
  sub_24104DFB8((uint64_t)v11);

  sub_24101F178(a2);
  sub_24104F27C((uint64_t)v11, (unint64_t *)&qword_268CF0858, (void (*)(uint64_t))sub_24104F090);
  return v9;
}

unint64_t sub_24104F090()
{
  unint64_t result = qword_268CF0860;
  if (!qword_268CF0860)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF0860);
  }
  return result;
}

uint64_t sub_24104F0E8(uint64_t a1, uint64_t a2)
{
  sub_24104F228(0, (unint64_t *)&qword_268CF0858, (void (*)(uint64_t))sub_24104F090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24104F168(uint64_t a1, uint64_t a2)
{
  sub_24104F228(0, (unint64_t *)&qword_268CF0858, (void (*)(uint64_t))sub_24104F090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_24104F1E8()
{
  unint64_t result = qword_268CF0868;
  if (!qword_268CF0868)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF0868);
  }
  return result;
}

void sub_24104F228(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241161420();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_24104F27C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_24104F228(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24104F2D8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24104F320(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedMedicationsFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24104F384(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedMedicationsFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24104F3E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedMedicationsFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24104F444@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t **a3@<X8>)
{
  uint64_t v6 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  id v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v33 = sub_24115F790();
  uint64_t v12 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  id v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F730();
  sub_24102732C(a1, (uint64_t)v11);
  uint64_t v15 = sub_24115F780();
  os_log_type_t v16 = sub_241160D50();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v32 = a3;
    uint64_t v18 = v17;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v34 = v30;
    uint64_t v35 = a2;
    *(_DWORD *)uint64_t v18 = 136446722;
    swift_getMetatypeMetadata();
    uint64_t v31 = a1;
    uint64_t v19 = sub_241160760();
    uint64_t v35 = sub_24101F0A4(v19, v20, &v34);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    uint64_t v35 = type metadata accessor for MedicationsShareableModelGenerator();
    sub_24101F3E0();
    uint64_t v21 = sub_241160760();
    uint64_t v35 = sub_24101F0A4(v21, v22, &v34);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2082;
    uint64_t v35 = sub_24115D170();
    uint64_t v23 = sub_2411607A0();
    uint64_t v35 = sub_24101F0A4(v23, v24, &v34);
    a1 = v31;
    sub_241161430();
    swift_bridgeObjectRelease();
    sub_241018340((uint64_t)v11);
    _os_log_impl(&dword_241007000, v15, v16, "[%{public}s]: Emitting %{public}s, for profile: %{public}s", (uint8_t *)v18, 0x20u);
    uint64_t v25 = v30;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v25, -1, -1);
    uint64_t v26 = v18;
    a3 = v32;
    MEMORY[0x2456180C0](v26, -1, -1);
  }
  else
  {
    sub_241018340((uint64_t)v11);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v33);
  sub_24102732C(a1, (uint64_t)v9);
  uint64_t v27 = type metadata accessor for MedicationsShareableModelGenerator();
  swift_allocObject();
  uint64_t v28 = sub_24100BB18((uint64_t)v9, 0);
  a3[3] = (uint64_t *)v27;
  uint64_t result = sub_241015D90(&qword_26B004A10, (void (*)(uint64_t))type metadata accessor for MedicationsShareableModelGenerator);
  a3[4] = (uint64_t *)result;
  *a3 = v28;
  return result;
}

uint64_t sub_24104F7E4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v48 = a3;
  char v50 = a4;
  sub_24102B590(0, &qword_268CF0878, MEMORY[0x263EFDE08]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v43 - v9;
  uint64_t v11 = type metadata accessor for MedicationsGeneratorContext();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24115F790();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  sub_24115F740();
  sub_24102732C(a2, (uint64_t)v13);
  id v19 = v18;
  id v20 = v18;
  id v49 = v17;
  uint64_t v21 = sub_24115F780();
  os_log_type_t v22 = sub_241160D30();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v47 = v14;
    uint64_t v25 = v24;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v52 = v46;
    *(_DWORD *)uint64_t v25 = 136315650;
    os_log_t v45 = v21;
    uint64_t v26 = sub_241161A00();
    LODWORD(v48) = v23;
    uint64_t v51 = sub_24101F0A4(v26, v27, &v52);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v43 = v25 + 14;
    uint64_t v28 = (void *)sub_24115D170();
    uint64_t v29 = sub_24115CF00();
    uint64_t v44 = v15;
    uint64_t v30 = v29;
    uint64_t v31 = v10;
    uint64_t v32 = v8;
    uint64_t v33 = v7;
    unint64_t v35 = v34;

    uint64_t v51 = sub_24101F0A4(v30, v35, &v52);
    sub_241161430();
    uint64_t v7 = v33;
    uint64_t v8 = v32;
    uint64_t v10 = v31;
    swift_bridgeObjectRelease();
    sub_241018340((uint64_t)v13);
    *(_WORD *)(v25 + 22) = 2080;
    uint64_t v51 = (uint64_t)v18;
    id v36 = v18;
    sub_241020840(0, (unint64_t *)&qword_26B0073B0);
    uint64_t v37 = sub_241160770();
    uint64_t v51 = sub_24101F0A4(v37, v38, &v52);
    sub_241161430();
    swift_bridgeObjectRelease();

    os_log_t v39 = v45;
    _os_log_impl(&dword_241007000, v45, (os_log_type_t)v48, "[%s]_%s: Error in observer query: %s", (uint8_t *)v25, 0x20u);
    uint64_t v40 = v46;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v40, -1, -1);
    MEMORY[0x2456180C0](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v47);
  }
  else
  {
    sub_241018340((uint64_t)v13);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v49, v14);
  }
  sub_24115FCD0();
  sub_24102B378(&qword_268CF0880, &qword_268CF0878, MEMORY[0x263EFDE08]);
  uint64_t v41 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *char v50 = v41;
  return result;
}

id sub_24104FCA0()
{
  id result = sub_24104FCC0();
  qword_26B00BAD8 = (uint64_t)result;
  return result;
}

id sub_24104FCC0()
{
  sub_241024708(0, &qword_26B005E28);
  id ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForMedicationDoseEventWithStatus_, 4);
  id v2 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForMedicationDoseEventWithStatus_, 5);
  id v3 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForMedicationDoseEventWithStatus_, 6);
  sub_24101529C(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24116B7A0;
  *(void *)(v4 + 32) = v1;
  *(void *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v3;
  sub_2411609C0();
  sub_241024708(0, &qword_26B007318);
  id v5 = v1;
  id v6 = v2;
  id v7 = v3;
  uint64_t v8 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v8);

  id v10 = objc_msgSend(self, sel_medicationDoseEventType);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v10, v9);

  return v11;
}

uint64_t sub_24104FEA0()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsShareableModelPipeline_domain;
  uint64_t v2 = sub_24115D130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_241018340(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsShareableModelPipeline_context);

  return swift_deallocClassInstance();
}

uint64_t sub_24104FF58()
{
  return type metadata accessor for MedicationsShareableModelPipeline();
}

uint64_t sub_24104FF60()
{
  uint64_t result = sub_24115D130();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MedicationsGeneratorContext();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_24105003C()
{
  unint64_t result = qword_26B005468;
  if (!qword_26B005468)
  {
    sub_24102EC08(255, &qword_26B005470, (uint64_t (*)(uint64_t))sub_24102BDBC, sub_24102BE24, MEMORY[0x263EFDA00]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005468);
  }
  return result;
}

void sub_2410500D8()
{
  if (!qword_26B005958)
  {
    sub_24102A404(255, &qword_26B005CB0, MEMORY[0x263F8D488]);
    sub_241050174();
    unint64_t v0 = sub_24115FBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005958);
    }
  }
}

unint64_t sub_241050174()
{
  unint64_t result = qword_26B005CB8;
  if (!qword_26B005CB8)
  {
    sub_24102A404(255, &qword_26B005CB0, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005CB8);
  }
  return result;
}

uint64_t sub_2410501EC@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24104F444(v1 + v4, v5, a1);
}

uint64_t sub_24105029C()
{
  uint64_t v1 = (int *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_2410503C8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24104F7E4(a1, v2 + v6, v7, a2);
}

unint64_t sub_241050474()
{
  unint64_t result = qword_26B0038D8;
  if (!qword_26B0038D8)
  {
    sub_24101529C(255, &qword_26B005BD0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0038D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationsArticleTileDataController()
{
  return &type metadata for MedicationsArticleTileDataController;
}

double sub_241050504@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24115F790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_241161760();
  swift_bridgeObjectRelease();
  if (v10)
  {
    sub_24115F740();
    swift_bridgeObjectRetain_n();
    id v11 = sub_24115F780();
    os_log_type_t v12 = sub_241160D30();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v20 = v14;
      *(_DWORD *)uint64_t v13 = 136446466;
      v19[1] = v13 + 4;
      os_log_type_t v22 = &type metadata for MedicationsArticleTileDataController;
      uint64_t v23 = v14;
      sub_2410507D4();
      uint64_t v21 = v6;
      uint64_t v15 = sub_241160760();
      os_log_type_t v22 = (ValueMetadata *)sub_24101F0A4(v15, v16, &v23);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2082;
      swift_bridgeObjectRetain();
      os_log_type_t v22 = (ValueMetadata *)sub_24101F0A4(a1, a2, &v23);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241007000, v11, v12, "[%{public}s] Article identifier %{public}s could not be found", (uint8_t *)v13, 0x16u);
      uint64_t v17 = v20;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v17, -1, -1);
      MEMORY[0x2456180C0](v13, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    double result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  else
  {
    *(void *)(a3 + 24) = &type metadata for MedicationsArticleDataProvider;
    *(void *)(a3 + 32) = sub_24102F66C();
    *(void *)(a3 + 40) = sub_24102F618();
  }
  return result;
}

unint64_t sub_2410507D4()
{
  unint64_t result = qword_268CF0888;
  if (!qword_268CF0888)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF0888);
  }
  return result;
}

uint64_t type metadata accessor for CHRAddAccountFeedItemViewController()
{
  uint64_t result = qword_26B0072B0;
  if (!qword_26B0072B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24105085C()
{
  return swift_initClassMetadata2();
}

void sub_2410508C4()
{
  uint64_t v1 = sub_24115E400();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(id *)(v0 + qword_26B0052A0);
  uint64_t v6 = (void *)sub_24115D640();

  sub_24115E620();
  uint64_t v7 = (void *)sub_24115E3F0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v6, sel_setPresentingViewController_, v7);

  objc_msgSend(v6, sel_present);
  sub_24115D560();
  uint64_t v8 = (void *)sub_24115D550();
  sub_24115D540();
}

void sub_241050A14()
{
  uint64_t v1 = sub_24115D990();
  uint64_t v15 = *(void *)(v1 - 8);
  uint64_t v16 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24115E400();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115D520();
  id v14 = (id)sub_24115D500();
  sub_24115E620();
  sub_24115E3E0();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v5 + 8);
  v8(v7, v4);
  sub_24101A6BC(v17, v18);
  uint64_t v9 = (void *)sub_24115E3A0();
  uint64_t v10 = (void *)sub_24115D510();

  sub_24101F178((uint64_t)v17);
  id v11 = *(id *)(v0 + qword_26B0052A0);
  sub_24115E620();
  os_log_type_t v12 = (void *)sub_24115E3F0();
  v8(v7, v4);
  sub_24115D630();

  sub_24115D560();
  uint64_t v13 = (void *)sub_24115D550();
  sub_24115E620();
  sub_24115E3E0();
  v8(v7, v4);
  sub_24101A6BC(v17, v18);
  sub_24115E3B0();
  sub_24115D970();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v16);
  sub_24101F178((uint64_t)v17);
  sub_24115D530();
}

uint64_t sub_241050CF0(uint64_t a1)
{
  uint64_t v3 = sub_24115E400();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (char *)objc_allocWithZone(v1);
  uint64_t v8 = qword_26B0072A8;
  sub_24115C750();
  swift_allocObject();
  uint64_t v9 = v7;
  *(void *)&v7[v8] = sub_24115C740();
  uint64_t v10 = qword_26B0052A0;
  sub_24115D660();
  *(void *)&v9[v10] = sub_24115D650();
  *(void *)&v9[qword_26B0072A0] = 0;

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v11 = sub_24115E630();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v11;
}

uint64_t sub_241050E58()
{
  swift_release();

  return swift_release();
}

id sub_241050EA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CHRAddAccountFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241050EE0(uint64_t a1)
{
  swift_release();

  return swift_release();
}

uint64_t sub_241050F3C()
{
  return type metadata accessor for CHRAddAccountFeedItemViewController();
}

uint64_t sub_241050F44()
{
  return sub_241050FD4(&qword_26B003F18, MEMORY[0x263F43E20]);
}

uint64_t sub_241050F8C()
{
  return sub_241050FD4(&qword_26B0038A0, (void (*)(uint64_t))type metadata accessor for CHRAddAccountFeedItemViewController);
}

uint64_t sub_241050FD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241051024()
{
  sub_24115D560();
  id v0 = (id)sub_24115D550();
  sub_24115D540();
}

uint64_t HKMedicationUserDomainConcept.makeListContentConfiguration()()
{
  sub_24115F980();
  uint64_t v18 = v0;
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  sub_24115F460();
  sub_24115F990();
  sub_241051304();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24116B200;
  uint64_t v2 = sub_2411611B0();
  uint64_t v4 = v3;
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 40) = v3;
  uint64_t v6 = sub_2411611A0();
  uint64_t v7 = v5;
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v5;
  if (!v4)
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE78];
    if (!v5) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_241051F68(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_241051F68((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  void v8[2] = v10 + 1;
  uint64_t v11 = &v8[2 * v10];
  void v11[4] = v2;
  v11[5] = v4;
  if (v7)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_241051F68(0, v8[2] + 1, 1, v8);
    }
    unint64_t v13 = v8[2];
    unint64_t v12 = v8[3];
    if (v13 >= v12 >> 1) {
      uint64_t v8 = sub_241051F68((void *)(v12 > 1), v13 + 1, 1, v8);
    }
    void v8[2] = v13 + 1;
    id v14 = &v8[2 * v13];
    void v14[4] = v6;
    v14[5] = v7;
  }
LABEL_12:
  swift_release();
  uint64_t v18 = v8;
  sub_241054154(0, (unint64_t *)&qword_26B005D98, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_241051380();
  sub_241160680();
  swift_bridgeObjectRelease();
  sub_24115F8D0();
  id v15 = objc_msgSend(self, sel_secondaryLabelColor, v18);
  uint64_t v16 = (uint64_t (*)(void **, void))sub_24115F930();
  sub_24115F8F0();
  return v16(&v18, 0);
}

void sub_241051304()
{
  if (!qword_268CF0890)
  {
    sub_241054154(255, &qword_26B005C88, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0890);
    }
  }
}

unint64_t sub_241051380()
{
  unint64_t result = qword_26B005DA8;
  if (!qword_26B005DA8)
  {
    sub_241054154(255, (unint64_t *)&qword_26B005D98, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005DA8);
  }
  return result;
}

void sub_2410513FC(uint64_t a1, uint64_t a2, char a3)
{
  sub_241161390();
  sub_241161340();
  id v4 = objc_msgSend(self, sel_configurationWithScale_, 2);
  uint64_t v5 = (void *)sub_2411606F0();
  uint64_t v6 = self;
  id v14 = objc_msgSend(v6, sel_systemImageNamed_withConfiguration_, v5, v4);

  uint64_t v7 = (void *)sub_2411606F0();
  id v8 = objc_msgSend(v6, sel_systemImageNamed_, v7);

  BOOL v9 = (a3 & 1) == 0;
  if (a3) {
    unint64_t v10 = v14;
  }
  else {
    unint64_t v10 = v8;
  }
  if (v9) {
    uint64_t v11 = &selRef_systemGreenColor;
  }
  else {
    uint64_t v11 = &selRef_tintColor;
  }
  id v12 = v10;
  sub_241161380();
  id v13 = [self *v11];
  sub_241161360();
}

void sub_241051574()
{
  sub_2410266C4(0, &qword_26B007038, MEMORY[0x263F82228], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v18 - v2;
  uint64_t v4 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel);
  if (v5)
  {
    uint64_t v6 = *(void **)(v4 + 8);
    *((void *)&v19 + 1) = sub_24115F9D0();
    uint64_t v20 = MEMORY[0x263F81F20];
    sub_2410277C0((uint64_t *)&v18);
    id v7 = v5;
    id v8 = v6;
    HKMedicationUserDomainConcept.makeListContentConfiguration()();
    id v9 = v8;
    sub_24115F9A0();
  }
  else
  {
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
  }
  MEMORY[0x245616BF0](&v18);
  id v10 = sub_241051770();
  if (*(void *)v4)
  {
    uint64_t v11 = *(void **)(v4 + 8);
    char v12 = *(unsigned char *)(v4 + 16) & 1;
    id v13 = *(id *)v4;
    id v14 = v11;
    sub_2410513FC((uint64_t)v14, v15, v12);

    uint64_t v16 = sub_2411613C0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v3, 0, 1, v16);
  }
  else
  {
    uint64_t v17 = sub_2411613C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v3, 1, 1, v17);
  }
  sub_2411613E0();
}

id sub_241051770()
{
  uint64_t v1 = v0;
  sub_2410266C4(0, &qword_26B007038, MEMORY[0x263F82228], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v16 - v3;
  uint64_t v5 = sub_2411613C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell____lazy_storage___leadingAccessoryView;
  id v10 = *(void **)(v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell____lazy_storage___leadingAccessoryView);
  if (v10)
  {
    id v11 = *(id *)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell____lazy_storage___leadingAccessoryView);
  }
  else
  {
    sub_241161390();
    sub_241161340();
    id v12 = objc_msgSend(self, sel_buttonWithType_, 0);
    objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    sub_2411613E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    id v13 = *(void **)(v1 + v9);
    *(void *)(v1 + v9) = v12;
    id v11 = v12;

    id v10 = 0;
  }
  id v14 = v10;
  return v11;
}

void sub_24105197C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x2456181C0](v2);
  if (v3)
  {
    uint64_t v4 = (char *)v3;
    uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel);
    if (v5)
    {
      uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel + 8);
      id v7 = v5;
      id v8 = v6;
      id v9 = v7;
      sub_241054114(v5, v6);
      id v10 = *(void (**)(id))&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_leadingAccessoryActionHandler];
      if (v10)
      {
        swift_retain();
        v10(v9);
        sub_241032B54((uint64_t)v10);
      }
    }
    else
    {
      id v9 = (id)v3;
    }
  }
}

void sub_241051B38()
{
  id v1 = sub_241051770();
  objc_msgSend(v0, sel_addSubview_, v1);

  uint64_t v2 = self;
  sub_241054154(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24116B210;
  id v4 = sub_241051770();
  id v5 = objc_msgSend(v4, sel_leadingAnchor);

  id v6 = objc_msgSend(v0, sel_leadingAnchor);
  id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, 7.0);

  *(void *)(v3 + 32) = v7;
  id v8 = sub_241051770();
  id v9 = objc_msgSend(v8, sel_centerYAnchor);

  id v10 = objc_msgSend(v0, sel_centerYAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(void *)(v3 + 40) = v11;
  sub_2411609C0();
  sub_241024708(0, (unint64_t *)&qword_26B006FA0);
  id v12 = (id)sub_241160980();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v12);
}

id sub_241051E60()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationEditCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241051EFC()
{
  return HKMedicationUserDomainConcept.makeListContentConfiguration()();
}

uint64_t sub_241051F20(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241026428(a1, a2, a3, a4, &qword_26B0070A8, type metadata accessor for MedicationDaySummaryViewModelChange, type metadata accessor for MedicationDaySummaryViewModelChange, type metadata accessor for MedicationDaySummaryViewModelChange);
}

void *sub_241051F68(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241054154(0, (unint64_t *)&qword_26B007390, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241053164(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_24105209C()
{
  unint64_t result = qword_268CF0898;
  if (!qword_268CF0898)
  {
    sub_241024708(255, (unint64_t *)&qword_26B007360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0898);
  }
  return result;
}

uint64_t type metadata accessor for MedicationEditCell()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for MedicationEditCellViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for MedicationEditCellViewModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for MedicationEditCellViewModel(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MedicationEditCellViewModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationEditCellViewModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationEditCellViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationEditCellViewModel()
{
  return &type metadata for MedicationEditCellViewModel;
}

void *sub_2410522B8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241054154(0, &qword_26B005F90, (uint64_t)&type metadata for MedicationDoseEventDetails, MEMORY[0x263F8E0F8]);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241053258(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2410523E8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2410266C4(0, &qword_268CF08C0, (uint64_t (*)(uint64_t))sub_241053DB4, MEMORY[0x263F8E0F8]);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2410536FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_241052524(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241054154(0, &qword_26B0070C0, MEMORY[0x263F8D980], MEMORY[0x263F8E0F8]);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241053804(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_241052654(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24102786C(a1, a2, a3, a4, (unint64_t *)&qword_26B0070A0, (unint64_t *)&qword_26B0069A8, MEMORY[0x263F437A0]);
}

void *sub_241052670(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241053D48();
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2410538F8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24105277C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241026428(a1, a2, a3, a4, &qword_26B007088, MEMORY[0x263F06338], MEMORY[0x263F06338], MEMORY[0x263F06338]);
}

void *sub_2410527C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2410266C4(0, &qword_268CF0908, (uint64_t (*)(uint64_t))sub_241054224, MEMORY[0x263F8E0F8]);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_241053A14(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_241052918(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2410541A0();
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241053B20(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_241052A24(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241026428(a1, a2, a3, a4, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F44068], MEMORY[0x263F44068]);
}

uint64_t sub_241052A6C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241026428(a1, a2, a3, a4, &qword_268CF08E0, MEMORY[0x263F07490], MEMORY[0x263F07490], MEMORY[0x263F07490]);
}

uint64_t sub_241052AB4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241026428(a1, a2, a3, a4, &qword_26B005FA0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
}

uint64_t sub_241052AFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241026428(a1, a2, a3, a4, &qword_26B0070B0, MEMORY[0x263F44CB0], MEMORY[0x263F44CB0], MEMORY[0x263F44CB0]);
}

uint64_t sub_241052B44(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241026428(a1, a2, a3, a4, &qword_268CF08E8, MEMORY[0x263F07508], MEMORY[0x263F07508], MEMORY[0x263F07508]);
}

void *sub_241052B8C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241054154(0, &qword_26B0061A0, (uint64_t)&type metadata for MedicationHighlightsContent, MEMORY[0x263F8E0F8]);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24105334C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_241052CD8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241054154(0, &qword_26B005F88, (uint64_t)&type metadata for MedicationShareableData, MEMORY[0x263F8E0F8]);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 176);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[22 * v8 + 4]) {
          memmove(v12, a4 + 4, 176 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_241053C54(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_241052E20(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241026428(a1, a2, a3, a4, &qword_26B007090, MEMORY[0x263F07A30], MEMORY[0x263F07A30], MEMORY[0x263F07A30]);
}

void *sub_241052E68(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_2410266C4(0, &qword_268CF08D0, (uint64_t (*)(uint64_t))sub_241053E48, MEMORY[0x263F8E0F8]);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241053ED8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_241052FA4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_241054154(0, &qword_26B005F98, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263F8E0F8]);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      id v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_241053FE0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2410530D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241026428(a1, a2, a3, a4, (unint64_t *)&qword_26B005F20, MEMORY[0x263F45630], MEMORY[0x263F45630], MEMORY[0x263F45630]);
}

uint64_t sub_24105311C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_241026428(a1, a2, a3, a4, &qword_26B005F78, type metadata accessor for SharedMedicationsFeedItemData, type metadata accessor for SharedMedicationsFeedItemData, type metadata accessor for SharedMedicationsFeedItemData);
}

uint64_t sub_241053164(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_241053258(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_24105334C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

id sub_241053444(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = &v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel];
  v3[16] = 0;
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  uint64_t v4 = &v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_leadingAccessoryActionHandler];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell____lazy_storage___leadingAccessoryView] = 0;
  if (a2)
  {
    unint64_t v5 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = 0;
  }
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for MedicationEditCell();
  id v6 = objc_msgSendSuper2(&v12, sel_initWithStyle_reuseIdentifier_, 0, v5);

  id v7 = v6;
  sub_241051B38();
  id v8 = sub_241051770();
  sub_241024708(0, &qword_268CF08F0);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v10 = (void *)sub_241161300();
  objc_msgSend(v8, sel_addAction_forControlEvents_, v10, 64, 0, 0, 0, sub_24105410C, v9);

  objc_msgSend(v7, sel_setSelectionStyle_, 0);
  return v7;
}

uint64_t sub_2410535C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_2410279E0(0, &qword_26B004108, (unint64_t *)&qword_26B004100, MEMORY[0x263F456E8], MEMORY[0x263F8D8F0]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410536FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_241053E04();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_241053804(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410538F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_241027EA8(0, (unint64_t *)&unk_268CF1820);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_241053A14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_241054224();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_241053B20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_2410279E0(0, &qword_268CF0900, (unint64_t *)&qword_268CF1870, MEMORY[0x263F43C48], MEMORY[0x263F8D488]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_241053C54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 176 * a1 + 32;
    unint64_t v6 = a3 + 176 * v4;
    if (v5 >= v6 || v5 + 176 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

void sub_241053D48()
{
  if (!qword_268CF08B8)
  {
    sub_241027EA8(255, (unint64_t *)&unk_268CF1820);
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF08B8);
    }
  }
}

unint64_t sub_241053DB4()
{
  unint64_t result = qword_268CF08C8;
  if (!qword_268CF08C8)
  {
    unint64_t result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_268CF08C8);
  }
  return result;
}

unint64_t sub_241053E04()
{
  unint64_t result = qword_26B0038B8;
  if (!qword_26B0038B8)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_26B0038B8);
  }
  return result;
}

void sub_241053E48()
{
  if (!qword_268CF08D8)
  {
    sub_241024708(255, (unint64_t *)&qword_26B007360);
    sub_241024708(255, &qword_26B007348);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF08D8);
    }
  }
}

uint64_t sub_241053ED8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_241053E48();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_241053FE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410540D4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24105410C(uint64_t a1)
{
  sub_24105197C(a1, v1);
}

void sub_241054114(void *a1, void *a2)
{
  if (a1)
  {
  }
}

void sub_241054154(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2410541A0()
{
  if (!qword_268CF08F8)
  {
    sub_2410279E0(255, &qword_268CF0900, (unint64_t *)&qword_268CF1870, MEMORY[0x263F43C48], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF08F8);
    }
  }
}

unint64_t sub_241054224()
{
  unint64_t result = qword_268CF0910;
  if (!qword_268CF0910)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, &qword_268CF0910);
  }
  return result;
}

uint64_t sub_241054298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *id v7 = v5;
  v7[1] = sub_24102A258;
  return sub_24100E690(a5);
}

uint64_t sub_241054334()
{
  unint64_t v34 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[39];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[26];
  swift_willThrow();
  sub_24115F740();
  sub_241027390(v4, v3, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  id v5 = v2;
  id v6 = v2;
  id v7 = sub_24115F780();
  os_log_type_t v8 = sub_241160D30();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (void *)v0[39];
    uint64_t v31 = v0[34];
    uint64_t v32 = (void (*)(uint64_t, uint64_t))v0[38];
    uint64_t v29 = (void *)v0[37];
    uint64_t v30 = v0[32];
    uint64_t v26 = v0[29];
    os_log_type_t type = v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v33[0] = v27;
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v11 = sub_241161A00();
    v0[19] = sub_24101F0A4(v11, v12, v33);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v13 = sub_2411618F0();
    v0[20] = sub_24101F0A4(v13, v14, v33);
    sub_241161430();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 22) = 2080;
    uint64_t v15 = (void *)sub_24115D170();
    uint64_t v16 = sub_24115CEF0();
    unint64_t v18 = v17;

    v0[21] = sub_24101F0A4(v16, v18, v33);
    sub_241161430();
    swift_bridgeObjectRelease();
    sub_24101839C(v26, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
    _os_log_impl(&dword_241007000, v7, type, "[%s] Marking medication shards as required failed with error: %s on profile: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v27, -1, -1);
    MEMORY[0x2456180C0](v10, -1, -1);

    v32(v31, v30);
  }
  else
  {
    uint64_t v20 = (void (*)(uint64_t, uint64_t))v0[38];
    long long v19 = (void *)v0[39];
    uint64_t v21 = v0[34];
    uint64_t v22 = v1[32];
    uint64_t v23 = v1[29];

    sub_24101839C(v23, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
    v20(v21, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v1[1];
  return v24();
}

void *sub_241054704(uint64_t a1)
{
  uint64_t v46 = *v1;
  uint64_t v3 = type metadata accessor for MedicationsGeneratorContext();
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24115D1C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_24115F790();
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241160730();
  id v12 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v13 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithSuiteName_, v13);

  if (v14
    && (uint64_t v15 = (void *)sub_2411606F0(),
        unsigned int v16 = objc_msgSend(v14, sel_BOOLForKey_, v15),
        v14,
        v15,
        v16))
  {
    sub_24115F760();
    unint64_t v17 = sub_24115F780();
    os_log_type_t v18 = sub_241160D50();
    if (os_log_type_enabled(v17, v18))
    {
      long long v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(void *)&v52[0] = v20;
      *(_DWORD *)long long v19 = 136315138;
      v53[0] = v46;
      swift_getMetatypeMetadata();
      uint64_t v21 = sub_241160760();
      v53[0] = sub_24101F0A4(v21, v22, (uint64_t *)v52);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v17, v18, "[%s]: Minimal medications plugin enabled, returning nil for deviceless profile pipelines", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v20, -1, -1);
      MEMORY[0x2456180C0](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v48);
    return (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    long long v55 = xmmword_24116B200;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    uint64_t v24 = type metadata accessor for MedicationsCategoryGeneratorPipeline(0);
    swift_allocObject();
    uint64_t v25 = sub_24100CE0C((uint64_t)v9);
    v56[3] = v24;
    void v56[4] = sub_241027824(&qword_26B004B00, (void (*)(uint64_t))type metadata accessor for MedicationsCategoryGeneratorPipeline);
    v56[0] = v25;
    sub_241027390(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
    uint64_t v26 = type metadata accessor for MedicationsNotificationSettingsGeneratorPipeline(0);
    swift_allocObject();
    uint64_t v27 = sub_24100C8D0((uint64_t)v5);
    v57[3] = v26;
    v57[4] = sub_241027824(&qword_26B004D58, (void (*)(uint64_t))type metadata accessor for MedicationsNotificationSettingsGeneratorPipeline);
    v57[0] = v27;
    uint64_t v54 = (void *)MEMORY[0x263F8EE78];
    sub_241027390((uint64_t)v56, (uint64_t)v53, (uint64_t (*)(void))sub_2410276A4);
    sub_2410275D8((uint64_t)v53, (uint64_t)&v49, (uint64_t (*)(void))sub_2410276A4);
    if (v50)
    {
      sub_241027314(&v49, (uint64_t)v52);
      sub_241027314(v52, (uint64_t)&v49);
      uint64_t v28 = (void *)MEMORY[0x263F8EE78];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v28 = sub_2410279C4(0, v28[2] + 1, 1, v28);
        uint64_t v54 = v28;
      }
      unint64_t v30 = v28[2];
      unint64_t v29 = v28[3];
      if (v30 >= v29 >> 1) {
        uint64_t v54 = sub_2410279C4((void *)(v29 > 1), v30 + 1, 1, v28);
      }
      uint64_t v31 = v50;
      uint64_t v32 = v51;
      uint64_t v33 = sub_2410276D8((uint64_t)&v49, v50);
      MEMORY[0x270FA5388](v33);
      uint64_t v35 = (char *)&v46 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v36 + 16))(v35);
      sub_241027728(v30, (uint64_t)v35, (uint64_t *)&v54, v31, v32);
      sub_24101F178((uint64_t)&v49);
    }
    else
    {
      sub_24101839C((uint64_t)&v49, (uint64_t (*)(void))sub_2410276A4);
    }
    sub_241027390((uint64_t)v57, (uint64_t)v53, (uint64_t (*)(void))sub_2410276A4);
    sub_2410275D8((uint64_t)v53, (uint64_t)&v49, (uint64_t (*)(void))sub_2410276A4);
    if (v50)
    {
      sub_241027314(&v49, (uint64_t)v52);
      sub_241027314(v52, (uint64_t)&v49);
      uint64_t v37 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v37 = sub_2410279C4(0, v37[2] + 1, 1, v37);
        uint64_t v54 = v37;
      }
      unint64_t v39 = v37[2];
      unint64_t v38 = v37[3];
      if (v39 >= v38 >> 1) {
        uint64_t v54 = sub_2410279C4((void *)(v38 > 1), v39 + 1, 1, v37);
      }
      uint64_t v40 = v50;
      uint64_t v41 = v51;
      uint64_t v42 = sub_2410276D8((uint64_t)&v49, v50);
      MEMORY[0x270FA5388](v42);
      uint64_t v44 = (char *)&v46 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v45 + 16))(v44);
      sub_241027728(v39, (uint64_t)v44, (uint64_t *)&v54, v40, v41);
      sub_24101F178((uint64_t)&v49);
    }
    else
    {
      sub_24101839C((uint64_t)&v49, (uint64_t (*)(void))sub_2410276A4);
    }
    sub_2410276A4(0);
    swift_arrayDestroy();
    return v54;
  }
}

uint64_t sub_241054F50()
{
  sub_2410128A8("[%{public}s] Plugin delegate is deallocated");

  return swift_deallocClassInstance();
}

uint64_t *sub_241054F8C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24115D1C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    uint64_t v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    id v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v15 = a3[9];
    unsigned int v16 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)a1 + v15) = (uint64_t)v16;
    id v17 = v10;
    id v18 = v11;
    id v19 = v14;
    swift_retain();
    id v20 = v16;
  }
  return a1;
}

uint64_t sub_2410550A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)(a2 + v11);
  uint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  uint64_t v15 = a3[7];
  unsigned int v16 = *(void **)(a2 + v15);
  id v17 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = v16;
  id v18 = v16;

  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  uint64_t v19 = a3[9];
  id v20 = *(void **)(a2 + v19);
  uint64_t v21 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = v20;
  id v22 = v20;

  return a1;
}

uint64_t sub_24105518C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_241055230(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[6];
  id v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  uint64_t v11 = a3[7];
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  uint64_t v13 = a3[9];
  id v14 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);

  return a1;
}

uint64_t sub_241055304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241055318);
}

uint64_t sub_241055318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24115D1C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_2410553D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2410553EC);
}

uint64_t sub_2410553EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24115D1C0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_2410554A8()
{
  uint64_t result = sub_24115D1C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_241055554()
{
  unint64_t result = qword_26B004178;
  if (!qword_26B004178)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B004178);
  }
  return result;
}

unint64_t sub_2410555B4()
{
  unint64_t result = qword_26B004AF8;
  if (!qword_26B004AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004AF8);
  }
  return result;
}

uint64_t sub_241055608()
{
  unint64_t v1 = (int *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

void sub_241055738(uint64_t a1)
{
  uint64_t v2 = sub_24115D1C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_sharedBehavior);
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = v6;
  id v8 = objc_msgSend(v6, sel_features);

  if (!v8)
  {
LABEL_8:
    __break(1u);
    return;
  }
  unsigned int v9 = objc_msgSend(v8, sel_stanley);

  if (v9)
  {
    unint64_t v10 = (void *)sub_24115D170();
    uint64_t v11 = (void *)sub_24115CF20();
    char v12 = sub_24115CF10();

    if (v12)
    {
      sub_241027640(0, &qword_26B005F28, (uint64_t (*)(uint64_t))sub_24102F838, MEMORY[0x263F8E0F8]);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_24116B370;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
      uint64_t v14 = type metadata accessor for MedicationsCategoryGeneratorPipeline(0);
      swift_allocObject();
      uint64_t v15 = sub_24100CE0C((uint64_t)v5);
      *(void *)(v13 + 56) = v14;
      *(void *)(v13 + 64) = sub_241027824(&qword_26B004B00, (void (*)(uint64_t))type metadata accessor for MedicationsCategoryGeneratorPipeline);
      *(void *)(v13 + 32) = v15;
    }
  }
}

uint64_t sub_241055A3C()
{
  return 0;
}

uint64_t sub_241055AD4(char a1)
{
  swift_getObjectType();
  uint64_t v3 = sub_24115F790();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F750();
  id v7 = v1;
  id v8 = sub_24115F780();
  os_log_type_t v9 = sub_241160D50();
  int v10 = v9;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v23 = v3;
    uint64_t v12 = v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = v13;
    *(_DWORD *)uint64_t v12 = 136446722;
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    uint64_t v27 = v13;
    sub_241161A00();
    int v21 = v10;
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_241160860();
    id v24 = v7;
    sub_241161690();
    uint64_t v25 = sub_24101F0A4(v25, v26, &v27);
    sub_241161430();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    LOBYTE(v25) = a1;
    uint64_t v14 = sub_241160760();
    uint64_t v25 = sub_24101F0A4(v14, v15, &v27);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2082;
    LOBYTE(v25) = *((unsigned char *)v7
                  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state);
    uint64_t v16 = sub_241160760();
    uint64_t v25 = sub_24101F0A4(v16, v17, &v27);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v8, (os_log_type_t)v21, "[%{public}s] Changed state from %{public}s to %{public}s", (uint8_t *)v12, 0x20u);
    uint64_t v18 = v22;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v18, -1, -1);
    MEMORY[0x2456180C0](v12, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v23);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_241055E00(uint64_t a1, void *a2)
{
  *(void *)&long long v92 = swift_getObjectType();
  uint64_t v5 = sub_24115F790();
  uint64_t v95 = *(void *)(v5 - 8);
  uint64_t v96 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v94 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241036620();
  *(void *)&long long v90 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  *(void *)&long long v91 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v86 = (char *)&v84 - v10;
  sub_2410346F4(0);
  *(void *)&long long v88 = v11;
  MEMORY[0x270FA5388](v11);
  *(void *)&long long v89 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24115CB10();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v14 = sub_24115CCC0();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = sub_2411605E0();
  uint64_t v16 = *(void **)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v84 - v21;
  MEMORY[0x270FA5388](v20);
  id v24 = (char *)&v84 - v23;
  v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 0;
  uint64_t v25 = &v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig];
  *uint64_t v25 = 0u;
  v25[1] = 0u;
  v25[2] = 0u;
  v25[3] = 0u;
  v25[4] = 0u;
  v25[5] = 0u;
  *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_navControllerDelegateCache] = 0;
  *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider
               + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_scrollToCenteredItemCompletionHandlers] = MEMORY[0x263F8EE78];
  v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_needsScrollToCurrentDay] = 0;
  *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_calendarCache] = a2;
  unint64_t v26 = v2;
  id v93 = a2;
  id v27 = objc_msgSend(v93, sel_currentCalendar);
  sub_24115CC50();

  sub_24115CB00();
  sub_241160590();
  id v87 = v26;
  uint64_t v28 = &v26[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_today];
  unint64_t v85 = (void (*)(char *, char *, uint64_t))v16[4];
  v85(&v26[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_today], v24, v15);
  sub_241160530();
  uint64_t v101 = (_OWORD *)a1;
  swift_beginAccess();
  unint64_t v29 = (void (*)(char *, char *, uint64_t))v16[2];
  v29(v19, v28, v15);
  sub_241160560();
  unint64_t v30 = (void (*)(uint64_t, uint64_t))v16[1];
  uint64_t v100 = v16 + 1;
  uint64_t v98 = v30;
  v30((uint64_t)v19, v15);
  sub_24105FDB0(&qword_26B0039C0, MEMORY[0x263F090E8]);
  uint64_t v99 = v22;
  uint64_t v97 = v15;
  uint64_t result = sub_2411606C0();
  if (result)
  {
    uint64_t v32 = v90;
    uint64_t v33 = v86;
    uint64_t v34 = &v86[*(int *)(v90 + 48)];
    uint64_t v35 = v97;
    v29(v86, v99, v97);
    uint64_t v84 = v34;
    uint64_t v36 = v85;
    v85(v34, v24, v35);
    uint64_t v37 = (char *)v91;
    unint64_t v38 = (char *)(v91 + *(int *)(v32 + 48));
    v29((char *)v91, v33, v35);
    v29(v38, v34, v35);
    uint64_t v39 = v89;
    v36((char *)v89, v37, v35);
    uint64_t v40 = v98;
    v98((uint64_t)v38, v35);
    uint64_t v41 = &v37[*(int *)(v32 + 48)];
    v36(v37, v33, v35);
    v36(v41, v84, v35);
    v36((char *)(v39 + *(int *)(v88 + 36)), v41, v35);
    v40((uint64_t)v37, v35);
    uint64_t v42 = v87;
    sub_24105FF60(v39, (uint64_t)v87+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_indexableDays);

    uint64_t v43 = (objc_class *)type metadata accessor for InteractiveTimelineCollectionViewLayout();
    uint64_t v44 = (char *)objc_allocWithZone(v43);
    uint64_t v45 = &v44[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_itemHeight];
    *(void *)uint64_t v45 = 0;
    v45[8] = 1;
    uint64_t v46 = &v44[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_contentSize];
    *(void *)uint64_t v46 = 0;
    *((void *)v46 + 1) = 0;
    v46[16] = 1;
    uint64_t v47 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_computedAttributes;
    uint64_t v48 = v101;
    sub_241060150((uint64_t)v101);
    long long v49 = v44;
    *(void *)&v44[v47] = sub_241061B08(MEMORY[0x263F8EE78]);
    uint64_t v50 = &v49[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config];
    long long v51 = v48[1];
    *(_OWORD *)uint64_t v50 = *v48;
    long long v52 = v48[2];
    long long v53 = v48[3];
    long long v54 = v48[5];
    *((_OWORD *)v50 + 4) = v48[4];
    *((_OWORD *)v50 + 5) = v54;
    *((_OWORD *)v50 + 2) = v52;
    *((_OWORD *)v50 + 3) = v53;
    *((_OWORD *)v50 + 1) = v51;
    sub_241060150((uint64_t)v48);

    v106.receiver = v49;
    v106.super_class = v43;
    id v55 = objc_msgSendSuper2(&v106, sel_init);
    sub_24106017C((uint64_t)v48);
    uint64_t v56 = (objc_class *)v92;
    v105.receiver = v42;
    v105.super_class = (Class)v92;
    id v57 = objc_msgSendSuper2(&v105, sel_initWithCollectionViewLayout_, v55);

    sub_2410601A8(0, (unint64_t *)&qword_268CF2250, (uint64_t (*)(uint64_t))sub_24106020C, MEMORY[0x263F8E0F8]);
    uint64_t v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = xmmword_24116B200;
    uint64_t v59 = sub_24115F9E0();
    uint64_t v60 = MEMORY[0x263F81F30];
    *(void *)(v58 + 32) = v59;
    *(void *)(v58 + 40) = v60;
    uint64_t v61 = sub_2411604C0();
    uint64_t v62 = sub_24105FDB0((unint64_t *)&unk_268CF09E0, MEMORY[0x263F462B8]);
    *(void *)(v58 + 48) = v61;
    *(void *)(v58 + 56) = v62;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_2410602E0();
    id v63 = v57;
    sub_241160E60();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_24116B370;
    uint64_t v65 = sub_24115FA70();
    uint64_t v66 = MEMORY[0x263F82018];
    *(void *)(v64 + 32) = v65;
    *(void *)(v64 + 40) = v66;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v67 = (char *)v63;
    sub_241160E60();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    swift_release();
    v104.receiver = v67;
    v104.super_class = v56;
    id v68 = objc_msgSendSuper2(&v104, sel_collectionViewLayout);
    uint64_t v69 = swift_dynamicCastClassUnconditional()
        + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config;
    uint64_t v70 = *(void *)(v69 + 48);
    id v71 = *(id *)(v69 + 56);
    long long v90 = *(_OWORD *)v69;
    long long v89 = *(_OWORD *)(v69 + 16);
    long long v88 = *(_OWORD *)(v69 + 32);
    long long v92 = *(_OWORD *)(v69 + 64);
    long long v91 = *(_OWORD *)(v69 + 80);

    id v72 = &v67[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig];
    uint64_t v73 = *(void **)&v67[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig
                       + 56];
    long long v74 = v89;
    *(_OWORD *)id v72 = v90;
    *((_OWORD *)v72 + 1) = v74;
    *((_OWORD *)v72 + 2) = v88;
    *((void *)v72 + 6) = v70;
    *((void *)v72 + 7) = v71;
    long long v75 = v91;
    *((_OWORD *)v72 + 4) = v92;
    *((_OWORD *)v72 + 5) = v75;

    uint64_t v76 = v94;
    sub_24115F750();
    uint64_t v77 = v67;
    uint64_t v78 = sub_24115F780();
    os_log_type_t v79 = sub_241160D20();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      uint64_t v103 = v81;
      *(_DWORD *)uint64_t v80 = 136446210;
      uint64_t v82 = sub_241055A3C();
      uint64_t v102 = sub_24101F0A4(v82, v83, &v103);
      sub_241161430();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v78, v79, "[%{public}s] Initialized", v80, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v81, -1, -1);
      MEMORY[0x2456180C0](v80, -1, -1);

      sub_24106017C((uint64_t)v101);
    }
    else
    {

      sub_24106017C((uint64_t)v101);
    }

    (*(void (**)(char *, uint64_t))(v95 + 8))(v76, v96);
    v98((uint64_t)v99, v97);
    return (uint64_t)v77;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241056934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x2456181C0](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_241056988();
  }
}

void sub_241056988()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  int v2 = v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state];
  v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 0;
  if (v2 == 4)
  {
    sub_241055AD4(4);
  }
  else
  {
    sub_241055AD4(v2);
    uint64_t v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InteractiveTimelineCollectionViewLayoutInvalidationContext()), sel_init);
    v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_invalidateSizeClass] = 1;
    id v4 = objc_msgSend(v0, sel_collectionView);
    if (v4)
    {
      uint64_t v5 = v4;
      objc_msgSend(v4, sel_bounds);
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      CGFloat v13 = v12;

      v30.origin.x = v7;
      v30.origin.y = v9;
      v30.size.width = v11;
      v30.size.height = v13;
      *(CGFloat *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_updatedHorizontalWidth] = CGRectGetWidth(v30);
      v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_invalidateItemHeight] = 1;
      uint64_t v14 = &v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig];
      uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig
                        + 56];
      if (v15)
      {
        uint64_t v16 = *((void *)v14 + 11);
        uint64_t v17 = *((void *)v14 + 10);
        long long v18 = *((_OWORD *)v14 + 4);
        uint64_t v19 = *((void *)v14 + 6);
        long long v21 = *((_OWORD *)v14 + 1);
        int64x2_t v20 = *((int64x2_t *)v14 + 2);
        id v22 = *(id *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig
                       + 56];
        long long v23 = *(_OWORD *)v14;
      }
      else
      {
        id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F83588]);
        uint64_t v15 = 0;
        long long v18 = xmmword_24116BA80;
        int64x2_t v20 = vdupq_n_s64(0x4041000000000000uLL);
        long long v21 = xmmword_24116BA90;
        long long v23 = xmmword_24116BAA0;
        uint64_t v19 = 0;
        uint64_t v16 = 27;
        uint64_t v17 = 0;
      }
      id v24 = &v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_nextConfig];
      uint64_t v25 = *(void **)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_nextConfig
                        + 56];
      *(_OWORD *)id v24 = v23;
      *((_OWORD *)v24 + 1) = v21;
      *((int64x2_t *)v24 + 2) = v20;
      *((void *)v24 + 6) = v19;
      *((void *)v24 + 7) = v22;
      *((_OWORD *)v24 + 4) = v18;
      *((void *)v24 + 10) = v17;
      *((void *)v24 + 11) = v16;
      id v26 = v15;

      v28.receiver = v0;
      v28.super_class = ObjectType;
      id v27 = objc_msgSendSuper2(&v28, sel_collectionViewLayout);
      type metadata accessor for InteractiveTimelineCollectionViewLayout();
      objc_msgSend((id)swift_dynamicCastClassUnconditional(), sel_invalidateLayoutWithContext_, v3);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_241056BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  id v4 = (void *)MEMORY[0x2456181C0](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    v7.receiver = v4;
    v7.super_class = (Class)type metadata accessor for InteractiveTimelineCollectionViewController();
    id v6 = objc_msgSendSuper2(&v7, sel_collectionViewLayout);

    type metadata accessor for InteractiveTimelineCollectionViewLayout();
    objc_msgSend((id)swift_dynamicCastClassUnconditional(), sel_invalidateLayout);
  }
}

id sub_241056CB8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F750();
  id v6 = v0;
  objc_super v7 = sub_24115F780();
  os_log_type_t v8 = sub_241160D50();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v15 = ObjectType;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = v2;
    double v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)double v10 = 136446210;
    v13[1] = v10 + 4;
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    uint64_t v19 = v11;
    sub_241161A00();
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_241160860();
    id v16 = v6;
    sub_241161690();
    uint64_t v17 = sub_24101F0A4(v17, v18, &v19);
    sub_241161430();

    uint64_t ObjectType = v15;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v7, v8, "[%{public}s] Deinit", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v11, -1, -1);
    MEMORY[0x2456180C0](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v14);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v20.receiver = v6;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, sel_dealloc);
}

uint64_t sub_241057048()
{
  return type metadata accessor for InteractiveTimelineCollectionViewController();
}

uint64_t type metadata accessor for InteractiveTimelineCollectionViewController()
{
  uint64_t result = qword_26B003748;
  if (!qword_26B003748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_241057118()
{
  unint64_t v1 = v0;
  v23.receiver = v0;
  v23.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v23, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_collectionView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  id v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v6 = v5;
  objc_msgSend(v5, sel_setDecelerationRate_, *MEMORY[0x263F83970]);

  id v7 = objc_msgSend(v1, sel_collectionView);
  if (!v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  os_log_type_t v8 = v7;
  objc_msgSend(v7, sel_setShowsHorizontalScrollIndicator_, 0);

  id v9 = objc_msgSend(v1, sel_collectionView);
  if (!v9)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double v10 = v9;
  objc_msgSend(v9, sel_setShowsVerticalScrollIndicator_, 0);

  id v11 = objc_msgSend(v1, sel_collectionView);
  if (!v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  double v12 = v11;
  objc_msgSend(v11, sel_setBouncesVertically_, 0);

  id v13 = objc_msgSend(v1, sel_collectionView);
  if (!v13)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v14 = v13;
  if (HKUICalendarLocaleIsRightToLeft()) {
    uint64_t v15 = 4;
  }
  else {
    uint64_t v15 = 3;
  }
  objc_msgSend(v14, sel_setSemanticContentAttribute_, v15);

  id v16 = objc_msgSend(v1, sel_collectionView);
  if (!v16) {
    goto LABEL_20;
  }
  uint64_t v17 = v16;
  type metadata accessor for InteractiveTimelinePastCell(0);
  sub_24105FDB0(&qword_26B006BB0, (void (*)(uint64_t))type metadata accessor for InteractiveTimelinePastCell);
  sub_241160DE0();

  id v18 = objc_msgSend(v1, sel_collectionView);
  if (!v18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v19 = v18;
  type metadata accessor for InteractiveTimelineTodayCell(0);
  sub_24105FDB0(&qword_26B006BC8, (void (*)(uint64_t))type metadata accessor for InteractiveTimelineTodayCell);
  sub_241160DE0();

  id v20 = objc_msgSend(v1, sel_collectionView);
  if (v20)
  {
    long long v21 = v20;
    type metadata accessor for InteractiveTimelineFutureCell(0);
    sub_24105FDB0(&qword_26B006C00, (void (*)(uint64_t))type metadata accessor for InteractiveTimelineFutureCell);
    sub_241160DE0();

    sub_241160E10();
    id v22 = objc_msgSend(self, sel_defaultCenter);
    objc_msgSend(v22, sel_addObserver_selector_name_object_, v1, sel_didReceiveSignificantTimeChangeNotification, *MEMORY[0x263F83390], 0);

    return;
  }
LABEL_22:
  __break(1u);
}

void sub_2410574E4(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewDidAppear_, a1 & 1);
  id v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    id v4 = v3;
    id v5 = objc_msgSend(v3, sel_interactivePopGestureRecognizer);

    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_delegate);

      if (v6)
      {
        if (!swift_dynamicCastClass())
        {
          *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_navControllerDelegateCache] = v6;
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
          id v7 = objc_msgSend(v1, sel_navigationController);
          if (v7)
          {
            os_log_type_t v8 = v7;
            id v9 = objc_msgSend(v7, sel_interactivePopGestureRecognizer);

            if (v9)
            {
              objc_msgSend(v9, sel_setDelegate_, v1);
            }
          }
        }
        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_241057680(char a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v7, sel_viewWillDisappear_, a1 & 1);
  id v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    id v4 = v3;
    id v5 = objc_msgSend(v3, sel_interactivePopGestureRecognizer);

    if (v5)
    {
      uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_navControllerDelegateCache];
      swift_unknownObjectRetain();
      objc_msgSend(v5, sel_setDelegate_, v6);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_241057798(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_24115F790();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  objc_super v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22.receiver = v1;
  v22.super_class = ObjectType;
  objc_msgSendSuper2(&v22, sel_didMoveToParentViewController_, a1);
  sub_24115F750();
  id v8 = v1;
  id v9 = sub_24115F780();
  os_log_type_t v10 = sub_241160D50();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = v4;
    double v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)double v12 = 136446210;
    id v16 = v12 + 4;
    uint64_t v19 = 0;
    unint64_t v20 = 0xE000000000000000;
    uint64_t v21 = v13;
    sub_241161A00();
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_241160860();
    id v18 = v8;
    sub_241161690();
    uint64_t v19 = sub_24101F0A4(v19, v20, &v21);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v9, v10, "[%{public}s] Did move to parent view controller", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v13, -1, -1);
    MEMORY[0x2456180C0](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *((unsigned char *)v8
  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_needsScrollToCurrentDay) = 1;
  char v14 = *((unsigned char *)v8 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state);
  *((unsigned char *)v8 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state) = 0;
  return sub_241055AD4(v14);
}

void sub_241057AB8()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_2410601A8(0, (unint64_t *)&unk_268CF09B0, MEMORY[0x263F090E8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v43 = (uint64_t)&v38 - v2;
  uint64_t v3 = sub_2411605E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v42 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v38 - v7;
  uint64_t v9 = sub_24115F790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  double v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F750();
  uint64_t v13 = v0;
  char v14 = sub_24115F780();
  os_log_type_t v15 = sub_241160D50();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v41 = v3;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v39 = v18;
    uint64_t v40 = v9;
    *(_DWORD *)uint64_t v17 = 136446210;
    uint64_t v46 = v18;
    uint64_t v47 = 0;
    unint64_t v38 = v17 + 4;
    unint64_t v48 = 0xE000000000000000;
    sub_241161A00();
    uint64_t ObjectType = v10;
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_241160860();
    uint64_t v45 = v13;
    sub_241161690();
    uint64_t v47 = sub_24101F0A4(v47, v48, &v46);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v14, v15, "[%{public}s] Parent was reconfigured", v17, 0xCu);
    uint64_t v19 = v39;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v19, -1, -1);
    unint64_t v20 = v17;
    uint64_t v3 = v41;
    MEMORY[0x2456180C0](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(ObjectType + 8))(v12, v40);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v21 = v13;
  uint64_t v22 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state;
  if (v13[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] != 2) {
    return;
  }
  id v23 = objc_msgSend(v13, sel_collectionView);
  if (!v23)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v24 = v23;
  unsigned __int8 v25 = objc_msgSend(v23, sel_isTracking);

  if (v25) {
    return;
  }
  id v26 = objc_msgSend(v13, sel_collectionView);
  if (!v26) {
    goto LABEL_20;
  }
  id v27 = v26;
  unsigned __int8 v28 = objc_msgSend(v26, sel_isDecelerating);

  if (v28) {
    return;
  }
  id v29 = objc_msgSend(v13, sel_collectionView);
  if (!v29)
  {
LABEL_21:
    __break(1u);
    return;
  }
  CGRect v30 = v29;
  unsigned __int8 v31 = objc_msgSend(v29, sel_isDragging);

  if ((v31 & 1) == 0)
  {
    uint64_t v32 = v43;
    sub_2410580E0(v43);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v32, 1, v3) == 1)
    {
      sub_24105FE70(v32, (unint64_t *)&unk_268CF09B0, MEMORY[0x263F090E8]);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v8, v32, v3);
      uint64_t v33 = MEMORY[0x2456181C0](&v13[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider]);
      if (v33)
      {
        uint64_t v34 = v33 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
        swift_beginAccess();
        uint64_t v35 = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v42, v34, v3);
        sub_24105FDB0(&qword_268CF1BC0, MEMORY[0x263F090E8]);
        LOBYTE(v34) = sub_2411606E0();
        uint64_t v36 = *(void (**)(char *, uint64_t))(v4 + 8);
        v36(v35, v3);
        if (v34)
        {
          v36(v8, v3);
          swift_unknownObjectRelease();
        }
        else
        {
          char v37 = v21[v22];
          v21[v22] = 0;
          sub_241055AD4(v37);
          swift_unknownObjectRelease();
          v36(v8, v3);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
      }
    }
  }
}

id sub_2410580E0@<X0>(uint64_t a1@<X8>)
{
  sub_2410601A8(0, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v31 - v4;
  uint64_t v6 = sub_24115CE00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  double v12 = (char *)&v31 - v11;
  id result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  char v14 = result;
  id v15 = objc_msgSend(result, sel_superview);

  if (!v15)
  {
LABEL_10:
    uint64_t v30 = sub_2411605E0();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a1, 1, 1, v30);
  }
  id result = objc_msgSend(v1, sel_collectionView);
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v16 = result;
  objc_msgSend(result, sel_center);
  double v18 = v17;
  double v20 = v19;

  id v21 = objc_msgSend(v1, sel_collectionView);
  objc_msgSend(v15, sel_convertPoint_toView_, v21, v18, v20);
  double v23 = v22;
  double v25 = v24;

  id result = objc_msgSend(v1, sel_collectionView);
  if (result)
  {
    id v26 = result;
    id v27 = objc_msgSend(result, sel_indexPathForItemAtPoint_, v23, v25);

    if (v27)
    {
      sub_24115CDA0();

      unsigned __int8 v28 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v28(v5, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
      {
        v28(v12, v5, v6);
        sub_24115CDB0();
        sub_2411605C0();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        uint64_t v29 = sub_2411605E0();
        return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a1, 0, 1, v29);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    }
    sub_24105FE70((uint64_t)v5, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30]);
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
  return result;
}

char *sub_2410584C0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_24115CE00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v42 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24115F790();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2411605E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  double v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v34 - v13;
  v47.receiver = v0;
  v47.super_class = ObjectType;
  id result = (char *)objc_msgSendSuper2(&v47, sel_viewDidLayoutSubviews);
  uint64_t v16 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state;
  if (!v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state])
  {
    id result = (char *)MEMORY[0x2456181C0](&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider]);
    if (result)
    {
      uint64_t v38 = v3;
      uint64_t v39 = v2;
      v0[v16] = 1;
      double v17 = result;
      sub_241055AD4(0);
      char v37 = v17;
      double v18 = &v17[OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay];
      swift_beginAccess();
      double v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v19(v14, v18, v8);
      sub_24115F750();
      v19(v12, v14, v8);
      double v20 = v0;
      id v21 = sub_24115F780();
      os_log_type_t v22 = sub_241160D50();
      int v23 = v22;
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v36 = v25;
        *(_DWORD *)uint64_t v24 = 136446466;
        uint64_t v34 = v24 + 4;
        uint64_t v44 = 0;
        unint64_t v45 = 0xE000000000000000;
        uint64_t v46 = v25;
        sub_241161A00();
        int v35 = v23;
        sub_241160860();
        swift_bridgeObjectRelease();
        sub_241160860();
        uint64_t v43 = v20;
        sub_241161690();
        uint64_t v44 = sub_24101F0A4(v44, v45, &v46);
        sub_241161430();

        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 12) = 2082;
        uint64_t v34 = v24 + 14;
        sub_24105FDB0(&qword_268CF09C8, MEMORY[0x263F090E8]);
        uint64_t v26 = sub_241161850();
        uint64_t v44 = sub_24101F0A4(v26, v27, &v46);
        sub_241161430();
        swift_bridgeObjectRelease();
        unsigned __int8 v28 = *(void (**)(char *, uint64_t))(v9 + 8);
        v28(v12, v8);
        uint64_t v29 = (uint64_t (*)(char *, uint64_t))v28;
        _os_log_impl(&dword_241007000, v21, (os_log_type_t)v35, "[%{public}s] Resetting scroll position to current day: %{public}s", (uint8_t *)v24, 0x16u);
        uint64_t v30 = v36;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v30, -1, -1);
        MEMORY[0x2456180C0](v24, -1, -1);
      }
      else
      {

        uint64_t v31 = *(void (**)(char *, uint64_t))(v9 + 8);
        v31(v12, v8);
        uint64_t v29 = (uint64_t (*)(char *, uint64_t))v31;
      }

      (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v41);
      uint64_t v32 = v38;
      sub_24105FDB0((unint64_t *)&qword_268CF09A0, MEMORY[0x263F090E8]);
      sub_241161460();
      uint64_t v33 = (uint64_t)v42;
      MEMORY[0x245612C00](v44 & ~(v44 >> 63), 0);
      sub_241058A5C(v33, 0, 0, 0);
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v39);
      return (char *)v29(v14, v8);
    }
  }
  return result;
}

void sub_241058A5C(uint64_t a1, int a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v64 = a4;
  uint64_t v67 = a3;
  int v62 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = sub_24115CE00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24115F790();
  uint64_t v65 = *(void *)(v12 - 8);
  uint64_t v66 = v12;
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72.receiver = v5;
  v72.super_class = ObjectType;
  id v63 = ObjectType;
  id v15 = objc_msgSendSuper2(&v72, sel_collectionViewLayout);
  type metadata accessor for InteractiveTimelineCollectionViewLayout();
  uint64_t v16 = (char *)swift_dynamicCastClassUnconditional();
  id v17 = objc_msgSend(v16, sel_collectionView);
  if (v17)
  {
    double v18 = v17;
    double v19 = (double *)&v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config];
    double v20 = *v19;
    double v21 = v19[3];
    double v22 = (v20 + v21) * (double)sub_24115CDE0() + v21 * 0.5;
    objc_msgSend(v18, sel_bounds);
    double Width = CGRectGetWidth(v73);

    double v24 = v22 - Width * 0.5;
  }
  else
  {

    double v24 = 0.0;
  }
  id v25 = objc_msgSend(v5, sel_collectionView);
  if (!v25)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v26 = v25;
  objc_msgSend(v25, sel_contentInset);
  double v28 = v27;

  id v29 = objc_msgSend(v5, sel_collectionView);
  if (!v29)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v30 = v29;
  objc_msgSend(v29, sel_bounds);
  double v32 = v31;

  id v33 = objc_msgSend(v5, sel_collectionView);
  if (!v33)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v34 = v33;
  objc_msgSend(v33, sel_contentSize);
  double v36 = v35;

  double v37 = v36 - v24;
  double v38 = fabs(v28) + v32;
  sub_24115F750();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v39 = v5;
  uint64_t v40 = sub_24115F780();
  os_log_type_t v41 = sub_241160D20();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v61 = v14;
    uint64_t v43 = v42;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v60 = v8;
    uint64_t v45 = v44;
    uint64_t v69 = v44;
    double v70 = 0.0;
    *(_DWORD *)uint64_t v43 = 136446722;
    unint64_t v71 = 0xE000000000000000;
    sub_241161A00();
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_241160860();
    id v68 = v39;
    sub_241161690();
    double v70 = COERCE_DOUBLE(sub_24101F0A4(*(uint64_t *)&v70, v71, &v69));
    sub_241161430();

    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2048;
    uint64_t v46 = sub_24115CDE0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v60);
    double v70 = *(double *)&v46;
    sub_241161430();
    *(_WORD *)(v43 + 22) = 2082;
    double v70 = v24;
    unint64_t v71 = 0;
    type metadata accessor for CGPoint(0);
    uint64_t v47 = sub_241160760();
    double v70 = COERCE_DOUBLE(sub_24101F0A4(v47, v48, &v69));
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v40, v41, "[%{public}s] Scrolling to item %ld at offset %{public}s", (uint8_t *)v43, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v45, -1, -1);
    MEMORY[0x2456180C0](v43, -1, -1);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v61, v66);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v66);
  }
  long long v49 = v67;
  if (v37 >= v38)
  {
    if (v67)
    {
      uint64_t v50 = swift_allocObject();
      uint64_t v51 = v64;
      *(void *)(v50 + 16) = v49;
      *(void *)(v50 + 24) = v51;
      long long v52 = &v39[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_scrollToCenteredItemCompletionHandlers];
      swift_beginAccess();
      long long v53 = *(void **)v52;
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)long long v52 = v53;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        long long v53 = sub_2410523E8(0, v53[2] + 1, 1, v53);
        *(void *)long long v52 = v53;
      }
      unint64_t v56 = v53[2];
      unint64_t v55 = v53[3];
      if (v56 >= v55 >> 1)
      {
        long long v53 = sub_2410523E8((void *)(v55 > 1), v56 + 1, 1, v53);
        *(void *)long long v52 = v53;
      }
      v53[2] = v56 + 1;
      id v57 = &v53[2 * v56];
      v57[4] = sub_24105E0DC;
      void v57[5] = v50;
      swift_endAccess();
    }
    id v58 = objc_msgSend(v39, sel_collectionView);
    if (v58)
    {
      uint64_t v59 = v58;
      objc_msgSend(v58, sel_setContentOffset_animated_, v62 & 1, v24, 0.0);

      return;
    }
LABEL_25:
    __break(1u);
    return;
  }
  if (v67)
  {
    swift_retain();
    v49(1);
    sub_241032B54((uint64_t)v49);
  }
}

uint64_t sub_241059158()
{
  swift_getObjectType();
  uint64_t v1 = sub_241160410();
  uint64_t v30 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v29 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_241160440();
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v26 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24115F790();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F750();
  id v9 = v0;
  uint64_t v10 = sub_24115F780();
  os_log_type_t v11 = sub_241160D50();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = v13;
    uint64_t v25 = v6;
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v32 = v13;
    uint64_t aBlock = 0;
    int v23 = v12 + 4;
    unint64_t v34 = 0xE000000000000000;
    sub_241161A00();
    uint64_t v14 = v5;
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_241160860();
    id v31 = v9;
    sub_241161690();
    uint64_t aBlock = sub_24101F0A4(aBlock, v34, &v32);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v10, v11, "[%{public}s] Resetting to today and reloading after significant time change", v12, 0xCu);
    uint64_t v15 = v24;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v15, -1, -1);
    MEMORY[0x2456180C0](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v14);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  uint64_t v16 = (void *)sub_241160EF0();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v9;
  double v37 = sub_241060120;
  uint64_t v38 = v17;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v34 = 1107296256;
  double v35 = sub_24101AFBC;
  double v36 = &unk_26F5559E0;
  double v18 = _Block_copy(&aBlock);
  id v19 = v9;
  swift_release();
  double v20 = v26;
  sub_241160430();
  uint64_t aBlock = MEMORY[0x263F8EE78];
  sub_24105FDB0(&qword_26B0072E0, MEMORY[0x263F8F030]);
  sub_2410601A8(0, (unint64_t *)&unk_26B0072F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_241024138();
  double v21 = v29;
  sub_2411614F0();
  MEMORY[0x245616D40](0, v20, v21, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v20, v28);
}

void sub_241059698(char *a1)
{
  uint64_t v2 = sub_24115CB10();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24115CCC0();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_2411605E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_calendarCache], sel_currentCalendar);
  sub_24115CC50();

  sub_24115CB00();
  sub_241160590();
  id v9 = &a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_today];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(v9, v7, v4);
  swift_endAccess();
  id v10 = objc_msgSend(a1, sel_collectionView);
  if (v10)
  {
    os_log_type_t v11 = v10;
    objc_msgSend(v10, sel_reloadData);
  }
  else
  {
    __break(1u);
  }
}

id sub_2410598E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410601A8(0, &qword_26B007210, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  long long v74 = (char *)&v59 - v4;
  uint64_t v73 = sub_24115CCC0();
  uint64_t v5 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v81 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for TimelineDay();
  uint64_t v7 = MEMORY[0x270FA5388](v72);
  uint64_t v71 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v80 = (uint64_t)&v59 - v10;
  MEMORY[0x270FA5388](v9);
  double v70 = (char *)&v59 - v11;
  uint64_t v79 = sub_2411605E0();
  uint64_t v12 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  unint64_t v83 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24115CE00();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410601A8(0, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30], v2);
  MEMORY[0x270FA5388](v18 - 8);
  long long v90 = (char *)&v59 - v19;
  id result = objc_msgSend(v1, sel_collectionView);
  if (result)
  {
    double v21 = result;
    id v22 = objc_msgSend(result, sel_indexPathsForVisibleItems);

    uint64_t v23 = sub_2411609A0();
    uint64_t v24 = *(void *)(v23 + 16);
    uint64_t v60 = v23;
    if (v24)
    {
      long long v75 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider];
      uint64_t v67 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_indexableDays];
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
      uint64_t v25 = v15 + 16;
      long long v89 = v26;
      unint64_t v27 = v23 + ((*(unsigned __int8 *)(v25 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 64));
      uint64_t v66 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_calendarCache;
      uint64_t v86 = (void (**)(char *, char *, uint64_t))(v25 + 16);
      id v87 = (unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 32);
      uint64_t v85 = *(void *)(v25 + 56);
      uint64_t v65 = (void (**)(char *, char *, uint64_t))(v12 + 16);
      uint64_t v64 = (void (**)(char *, char *, uint64_t))(v5 + 16);
      id v63 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
      int v62 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v61 = (void (**)(char *, uint64_t))(v12 + 8);
      uint64_t v84 = (void (**)(char *, uint64_t))(v25 - 8);
      long long v88 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 40);
      unint64_t v59 = (v25 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v28 = v90;
      uint64_t v78 = v1;
      uint64_t v69 = v25;
      id v68 = v17;
      v26(v90, v27, v14);
      while (1)
      {
        uint64_t v47 = *v88;
        (*v88)(v28, 0, 1, v14);
        if ((*v87)(v28, 1, v14) == 1) {
          break;
        }
        (*v86)(v17, v28, v14);
        id result = objc_msgSend(v1, sel_collectionView, v59, v60);
        if (!result)
        {
          __break(1u);
          goto LABEL_20;
        }
        unint64_t v48 = result;
        long long v49 = (void *)sub_24115CD90();
        id v50 = objc_msgSend(v48, sel_cellForItemAtIndexPath_, v49);

        if (v50)
        {
          type metadata accessor for InteractiveTimelineDayCell(0);
          uint64_t v51 = swift_dynamicCastClass();
          if (v51)
          {
            uint64_t v52 = v51;
            uint64_t v53 = MEMORY[0x2456181C0](v75);
            if (v53)
            {
              uint64_t v82 = (void *)v52;
              uint64_t v54 = v53;
              sub_24115CDB0();
              uint64_t v55 = (uint64_t)v83;
              sub_2411605C0();
              uint64_t v77 = v54;
              swift_retain();
              unint64_t v56 = sub_24105DD38(v55);
              char v58 = v57;
              swift_release();
              if (v56 < 3)
              {
                sub_24103BAD4(v56);
                char v29 = 0;
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                char v29 = 2 - v58;
              }
              uint64_t v30 = (uint64_t)v70;
              (*v65)(v70, v83, v79);
              id v31 = objc_msgSend(self, sel_redColor);
              uint64_t v32 = v72;
              *(void *)(v30 + *(int *)(v72 + 20)) = v31;
              id v33 = (void *)(v30 + *(int *)(v32 + 24));
              *id v33 = 77;
              v33[1] = 0xE100000000000000;
              *(unsigned char *)(v30 + *(int *)(v32 + 28)) = v29;
              id v34 = objc_msgSend(*(id *)&v78[v66], sel_currentCalendar);
              double v35 = v81;
              sub_24115CC50();

              uint64_t v36 = (uint64_t)v82 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay;
              swift_beginAccess();
              uint64_t v76 = type metadata accessor for TimelineDay;
              sub_24105FFC4(v36, v80, (uint64_t (*)(void))type metadata accessor for TimelineDay);
              uint64_t v37 = v71;
              sub_24105FFC4(v30, v71, (uint64_t (*)(void))type metadata accessor for TimelineDay);
              swift_beginAccess();
              sub_24105DFAC(v37, v36);
              swift_endAccess();
              uint64_t v38 = (uint64_t)v74;
              uint64_t v39 = v35;
              uint64_t v40 = v73;
              (*v64)(v74, v39, v73);
              (*v63)(v38, 0, 1, v40);
              os_log_type_t v41 = v82;
              uint64_t v42 = (uint64_t)v82
                  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_gregorianCalendar;
              swift_beginAccess();
              sub_24105E010(v38, v42);
              swift_endAccess();
              uint64_t v92 = 0x7865646E49796144;
              unint64_t v93 = 0xE90000000000003ALL;
              uint64_t v91 = sub_2411605B0();
              sub_241161850();
              sub_241160860();
              swift_bridgeObjectRelease();
              uint64_t v43 = (void *)sub_2411606F0();
              swift_bridgeObjectRelease();
              objc_msgSend(v41, sel_setAccessibilityIdentifier_, v43);

              uint64_t v44 = v80;
              sub_2410D7AE0(v80);
              uint64_t v45 = v76;
              sub_24106002C(v44, (uint64_t (*)(void))v76);
              swift_unknownObjectRelease();
              (*v62)(v81, v40);
              uint64_t v46 = v30;
              uint64_t v1 = v78;
              sub_24106002C(v46, (uint64_t (*)(void))v45);
              (*v61)(v83, v79);
              uint64_t v17 = v68;
            }
          }
        }
        (*v84)(v17, v14);
        v27 += v85;
        --v24;
        uint64_t v28 = v90;
        if (!v24)
        {
          v47(v90, 1, 1, v14);
          return (id)swift_bridgeObjectRelease();
        }
        v89(v90, v27, v14);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v90, 1, 1, v14);
    }
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
LABEL_20:
    __break(1u);
  }
  return result;
}

uint64_t sub_24105A25C(void *a1)
{
  uint64_t v2 = v1;
  id v34 = a1;
  sub_2410601A8(0, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v32 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v33 = (uint64_t)&v32 - v6;
  uint64_t v7 = sub_2411605E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v32 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v32 - v15;
  sub_24115CDB0();
  sub_2411605C0();
  uint64_t v35 = v8;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v17(v14, v16, v7);
  uint64_t v18 = (char *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_today);
  swift_beginAccess();
  v17(v11, v18, v7);
  sub_24104D0B4(v14, v11);
  uint64_t v19 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  double v20 = (void *)sub_24115CD90();
  id v21 = objc_msgSend(v34, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v19, v20);

  type metadata accessor for InteractiveTimelineDayCell(0);
  uint64_t v22 = swift_dynamicCastClassUnconditional();
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state) == 2)
  {
    uint64_t v23 = MEMORY[0x2456181C0](v2+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider);
    if (v23)
    {
      uint64_t v24 = *(void *)(v23 + 24) + *(void *)(**(void **)(v23 + 24) + 168);
      swift_beginAccess();
      uint64_t v25 = v33;
      sub_24105FEE0(v24, v33, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4);
      swift_unknownObjectRelease();
    }
    else
    {
      sub_2410346F4(0);
      uint64_t v25 = v33;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v33, 1, 1, v26);
    }
    sub_2410346F4(0);
    int v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v25, 1, v27);
    char v29 = (void (**)(char *, uint64_t))(v35 + 8);
    if (v28)
    {
      uint64_t v30 = v32;
      sub_24105FEE0(v25, v32, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4);
      sub_24105A720(v30);
      (*v29)(v16, v7);
      sub_24105FE70(v25, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4);
    }
    else
    {
      sub_24105A9DC((uint64_t)v16);
      sub_24105A720(v25);
      (*v29)(v16, v7);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v7);
  }
  return v22;
}

uint64_t sub_24105A720(uint64_t a1)
{
  sub_2410601A8(0, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  sub_2410346F4(0);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24105FEE0(a1, (uint64_t)v8, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_24105FE70(a1, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4);
    return sub_24105FE70((uint64_t)v8, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4);
  }
  else
  {
    sub_24105FF60((uint64_t)v8, (uint64_t)v13);
    if (MEMORY[0x2456181C0](v1+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider))
    {
      sub_24105FFC4((uint64_t)v13, (uint64_t)v6, (uint64_t (*)(void))sub_2410346F4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
      sub_24103437C((uint64_t)v6);
      swift_unknownObjectRelease();
    }
    sub_24105FE70(a1, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4);
    return sub_24106002C((uint64_t)v13, (uint64_t (*)(void))sub_2410346F4);
  }
}

uint64_t sub_24105A9DC(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_241036620();
  uint64_t v59 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v56 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v54 = (char *)&v49 - v7;
  sub_2410346F4(0);
  uint64_t v9 = v8;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v55 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v49 - v12;
  uint64_t v14 = sub_2411605E0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v52 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  char v57 = (char *)&v49 - v19;
  MEMORY[0x270FA5388](v18);
  id v21 = (char *)&v49 - v20;
  sub_24105FDB0(&qword_26B0039C0, MEMORY[0x263F090E8]);
  char v22 = sub_2411606C0();
  uint64_t v61 = v15;
  char v58 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v58(v21, a1, v14);
  uint64_t v60 = v2;
  sub_24105FFC4(v2, (uint64_t)v13, (uint64_t (*)(void))sub_2410346F4);
  if (v22) {
    char v23 = sub_2411606A0();
  }
  else {
    char v23 = 0;
  }
  sub_24106002C((uint64_t)v13, (uint64_t (*)(void))sub_2410346F4);
  uint64_t v53 = *(uint64_t (**)(char *, uint64_t))(v61 + 8);
  uint64_t result = v53(v21, v14);
  if ((v23 & 1) == 0)
  {
    uint64_t v25 = v60;
    char v26 = sub_241160690();
    uint64_t v51 = v9;
    if (v26)
    {
      int v28 = v57;
      uint64_t v27 = v58;
      v58(v57, v25 + *(int *)(v9 + 36), v14);
      sub_24106002C(v25, (uint64_t (*)(void))sub_2410346F4);
      uint64_t result = sub_2411606C0();
      if (result)
      {
        uint64_t v29 = v59;
        uint64_t v30 = v54;
        id v31 = &v54[*(int *)(v59 + 48)];
        v27(v54, a1, v14);
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
        uint64_t v52 = v31;
        v32(v31, v28, v14);
        uint64_t v33 = v56;
        id v34 = &v56[*(int *)(v29 + 48)];
        v27(v56, (uint64_t)v30, v14);
        v27(v34, (uint64_t)v31, v14);
        uint64_t v35 = (uint64_t)v55;
        v32(v55, v33, v14);
        uint64_t v36 = (void (*)(char *, uint64_t))v53;
        v53(v34, v14);
        uint64_t v37 = &v33[*(int *)(v59 + 48)];
        v32(v33, v30, v14);
        uint64_t v38 = v37;
        uint64_t v39 = v52;
LABEL_10:
        v32(v38, v39, v14);
        v32((char *)(v35 + *(int *)(v51 + 36)), v37, v14);
        v36(v33, v14);
        return sub_24105FF60(v35, v60);
      }
      __break(1u);
    }
    else
    {
      uint64_t v40 = v57;
      v58(v57, v25, v14);
      sub_24106002C(v25, (uint64_t (*)(void))sub_2410346F4);
      uint64_t v62 = 1;
      sub_24105FDB0((unint64_t *)&qword_268CF09A0, MEMORY[0x263F090E8]);
      os_log_type_t v41 = v40;
      uint64_t v42 = v52;
      sub_241161450();
      uint64_t result = sub_2411606C0();
      if (result)
      {
        uint64_t v43 = v59;
        uint64_t v44 = v54;
        uint64_t v45 = &v54[*(int *)(v59 + 48)];
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
        v32(v54, v41, v14);
        id v50 = v45;
        v32(v45, v42, v14);
        uint64_t v33 = v56;
        uint64_t v46 = &v56[*(int *)(v43 + 48)];
        uint64_t v47 = (void (*)(char *, char *, uint64_t))v58;
        v58(v56, (uint64_t)v44, v14);
        v47(v46, v45, v14);
        uint64_t v35 = (uint64_t)v55;
        v32(v55, v33, v14);
        unint64_t v48 = v46;
        uint64_t v36 = (void (*)(char *, uint64_t))v53;
        v53(v48, v14);
        uint64_t v37 = &v33[*(int *)(v59 + 48)];
        v32(v33, v44, v14);
        uint64_t v38 = v37;
        uint64_t v39 = v50;
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24105B438()
{
  uint64_t v1 = v0;
  v149[1] = swift_getObjectType();
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410601A8(0, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v149 - v4;
  uint64_t v6 = sub_24115F790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v149 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241036620();
  uint64_t v161 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v154 = (char *)v149 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int v168 = (char *)v149 - v13;
  sub_2410346F4(0);
  uint64_t v167 = v14;
  uint64_t v156 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v155 = (uint64_t)v149 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v153 = (char *)v149 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v162 = (uint64_t)v149 - v19;
  uint64_t v159 = sub_2411605E0();
  uint64_t v158 = *(void *)(v159 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v159);
  uint64_t v157 = (char *)v149 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v163 = (char *)v149 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v166 = (char *)v149 - v25;
  MEMORY[0x270FA5388](v24);
  dispatch_group_t v165 = (char *)v149 - v26;
  uint64_t v27 = sub_24115CE00();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  char v164 = (char *)v149 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v169 = (char *)v149 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v178 = (char *)v149 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  int v172 = (char *)v149 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  BOOL v177 = (char *)v149 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  unint64_t v180 = (char *)v149 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v184 = (char *)v149 - v42;
  MEMORY[0x270FA5388](v41);
  long long v190 = (char *)v149 - v43;
  sub_2410601A8(0, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30], v2);
  uint64_t v45 = MEMORY[0x270FA5388](v44 - 8);
  uint64_t v47 = (char *)v149 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = MEMORY[0x270FA5388](v45);
  uint64_t v170 = (uint64_t)v149 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v176 = (uint64_t)v149 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  unint64_t v175 = (char *)v149 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v174 = (uint64_t)v149 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v173 = (char *)v149 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v195 = (char *)v149 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v62 = (char *)v149 - v61;
  MEMORY[0x270FA5388](v60);
  uint64_t v171 = v28;
  id v63 = *(void (**)(void))(v28 + 56);
  uint64_t v186 = (uint64_t)v149 - v64;
  v63();
  uint64_t v185 = v62;
  long long v198 = v63;
  uint64_t v199 = (void (*)(char *, uint64_t))(v28 + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v63)(v62, 1, 1, v27);
  uint64_t result = (uint64_t)objc_msgSend(v1, sel_collectionView);
  if (result)
  {
    uint64_t v66 = (void *)result;
    id v67 = objc_msgSend((id)result, sel_visibleCells);

    sub_241024708(0, (unint64_t *)&qword_268CF1850);
    unint64_t v68 = sub_2411609A0();

    uint64_t v152 = v5;
    uint64_t v151 = v6;
    uint64_t v150 = v7;
    uint64_t v160 = v9;
    if (v68 >> 62) {
      goto LABEL_40;
    }
    uint64_t v69 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
    char v179 = v1;
    double v70 = v180;
    if (v69)
    {
      unint64_t v194 = v68 & 0xC000000000000001;
      uint64_t v196 = (unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48);
      unsigned __int8 v197 = (void (**)(char *, char *, uint64_t))(v171 + 32);
      uint64_t v189 = (void (**)(char *, char *, uint64_t))(v171 + 16);
      long long v187 = (void (**)(char *, uint64_t))(v171 + 8);
      uint64_t v71 = 4;
      unint64_t v192 = v68;
      uint64_t v193 = v47;
      uint64_t v191 = v69;
      do
      {
        if (v194) {
          id v72 = (id)MEMORY[0x245617450](v71 - 4, v68);
        }
        else {
          id v72 = *(id *)(v68 + 8 * v71);
        }
        uint64_t v73 = v72;
        uint64_t v47 = v195;
        uint64_t v74 = v71 - 3;
        if (__OFADD__(v71 - 4, 1))
        {
          __break(1u);
LABEL_40:
          swift_bridgeObjectRetain();
          uint64_t v69 = sub_2411616E0();
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t result = (uint64_t)objc_msgSend(v1, sel_collectionView);
        if (!result) {
          goto LABEL_42;
        }
        long long v75 = (void *)result;
        id v200 = v73;
        id v76 = objc_msgSend((id)result, sel_indexPathForCell_, v73);

        if (v76)
        {
          uint64_t v77 = v184;
          sub_24115CDA0();

          uint64_t v78 = *v197;
          (*v197)(v47, v77, v27);
          ((void (*)(char *, void, uint64_t, uint64_t))v198)(v47, 0, 1, v27);
          uint64_t v79 = *v196;
          if ((*v196)(v47, 1, v27) != 1)
          {
            uint64_t v80 = v190;
            v78(v190, v47, v27);
            uint64_t v81 = v174;
            sub_24105FEE0(v186, v174, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30]);
            uint64_t v82 = v177;
            uint64_t v188 = *v189;
            v188(v177, v80, v27);
            unsigned int v83 = v79((char *)v81, 1, v27);
            uint64_t v182 = v79;
            uint64_t v183 = v78;
            if (v83 == 1)
            {
              v78(v70, v82, v27);
              sub_24105FE70(v81, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30]);
              uint64_t v84 = v27;
              uint64_t v85 = v187;
            }
            else
            {
              uint64_t v85 = v187;
              (*v187)(v82, v27);
              v78(v70, (char *)v81, v27);
              uint64_t v84 = v27;
            }
            uint64_t v86 = sub_24105FDB0(&qword_268CF09A8, MEMORY[0x263F07A30]);
            id v87 = v190;
            uint64_t v181 = v86;
            if (sub_2411606A0()) {
              long long v88 = v87;
            }
            else {
              long long v88 = v70;
            }
            uint64_t v89 = (uint64_t)v173;
            long long v90 = v70;
            uint64_t v91 = v188;
            v188(v173, v88, v84);
            uint64_t v92 = *v85;
            (*v85)(v90, v84);
            unint64_t v93 = (uint64_t (*)(uint64_t))MEMORY[0x263F07A30];
            uint64_t v94 = v186;
            sub_24105FE70(v186, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30]);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v198)(v89, 0, 1, v84);
            sub_24106008C(v89, v94);
            uint64_t v95 = v93;
            uint64_t v96 = v176;
            sub_24105FEE0((uint64_t)v185, v176, (unint64_t *)&qword_268CF0978, v95);
            uint64_t v97 = v178;
            v91(v178, v87, v84);
            uint64_t v27 = v84;
            if (v182((char *)v96, 1, v84) == 1)
            {
              uint64_t v98 = v97;
              uint64_t v99 = v172;
              v183(v172, v98, v84);
              sub_24105FE70(v96, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30]);
            }
            else
            {
              v92(v97, v84);
              uint64_t v99 = v172;
              v183(v172, (char *)v96, v84);
            }
            uint64_t v100 = v92;
            uint64_t v101 = v190;
            if (sub_2411606B0()) {
              uint64_t v102 = v101;
            }
            else {
              uint64_t v102 = v99;
            }
            uint64_t v103 = (uint64_t)v175;
            v188(v175, v102, v84);

            v100(v99, v84);
            v100(v101, v84);
            uint64_t v104 = (uint64_t)v185;
            sub_24105FE70((uint64_t)v185, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30]);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v198)(v103, 0, 1, v27);
            sub_24106008C(v103, v104);
            uint64_t v1 = v179;
            double v70 = v180;
            goto LABEL_8;
          }
        }
        else
        {
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v198)(v47, 1, 1, v27);
        }

        sub_24105FE70((uint64_t)v47, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30]);
LABEL_8:
        ++v71;
        unint64_t v68 = v192;
        uint64_t v47 = v193;
      }
      while (v74 != v191);
    }
    swift_bridgeObjectRelease();
    uint64_t v105 = v186;
    uint64_t v106 = v170;
    sub_24105FEE0(v186, v170, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30]);
    uint64_t v107 = v171;
    uint64_t v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48);
    if (v108(v106, 1, v27) == 1)
    {
      sub_24105FE70((uint64_t)v185, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30]);
      uint64_t v109 = v105;
LABEL_38:
      uint64_t v148 = (uint64_t (*)(uint64_t))MEMORY[0x263F07A30];
      sub_24105FE70(v109, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30]);
      return sub_24105FE70(v106, (unint64_t *)&qword_268CF0978, v148);
    }
    unint64_t v110 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 32);
    uint64_t v111 = v106;
    uint64_t v112 = v169;
    v110(v169, v111, v27);
    uint64_t v113 = (uint64_t)v185;
    sub_24105FEE0((uint64_t)v185, (uint64_t)v47, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30]);
    if (v108((uint64_t)v47, 1, v27) == 1)
    {
      (*(void (**)(char *, uint64_t))(v107 + 8))(v112, v27);
      sub_24105FE70(v113, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30]);
      uint64_t v109 = v186;
      uint64_t v106 = (uint64_t)v47;
      goto LABEL_38;
    }
    v110(v164, (uint64_t)v47, v27);
    sub_24115CDB0();
    sub_2411605C0();
    sub_24115CDB0();
    sub_2411605C0();
    unint64_t v114 = v157;
    sub_241160530();
    sub_241160550();
    uint64_t v115 = v158;
    unint64_t v117 = (void *)(v158 + 8);
    uint64_t v116 = *(void (**)(char *, uint64_t))(v158 + 8);
    uint64_t v118 = v159;
    v116(v114, v159);
    sub_24105FDB0(&qword_26B0039C0, MEMORY[0x263F090E8]);
    uint64_t result = sub_2411606C0();
    if (result)
    {
      uint64_t v119 = v161;
      uint64_t v120 = &v168[*(int *)(v161 + 48)];
      uint64_t v199 = v116;
      uint64_t v121 = v117;
      uint64_t v122 = *(void (**)(void))(v115 + 16);
      v122();
      int v123 = *(void (**)(char *, char *, uint64_t))(v115 + 32);
      long long v198 = (void (*)(void))v120;
      v123(v120, v163, v118);
      uint64_t v124 = *(int *)(v119 + 48);
      id v200 = v121;
      uint64_t v125 = v154;
      os_log_t v126 = &v154[v124];
      ((void (*)(char *, char *, uint64_t))v122)(v154, v168, v118);
      ((void (*)(char *, char *, uint64_t))v122)(v126, v120, v118);
      uint64_t v127 = (uint64_t)v153;
      v123(v153, v125, v118);
      uint64_t v128 = v199;
      v199(v126, v118);
      os_log_t v129 = &v125[*(int *)(v161 + 48)];
      v123(v125, v168, v118);
      v123(v129, (char *)v198, v118);
      v123((char *)(v127 + *(int *)(v167 + 36)), v129, v118);
      v128(v125, v118);
      uint64_t v130 = v162;
      sub_24105FF60(v127, v162);
      uint64_t v131 = v118;
      uint64_t v132 = v160;
      sub_24115F770();
      uint64_t v133 = v155;
      sub_24105FFC4(v130, v155, (uint64_t (*)(void))sub_2410346F4);
      uint64_t v134 = sub_24115F780();
      os_log_type_t v135 = sub_241160D50();
      if (os_log_type_enabled(v134, v135))
      {
        uint64_t v136 = swift_slowAlloc();
        uint64_t v137 = v133;
        uint64_t v138 = swift_slowAlloc();
        uint64_t v202 = v138;
        *(_DWORD *)uint64_t v136 = 136446466;
        uint64_t v139 = sub_241161A00();
        uint64_t v201 = sub_24101F0A4(v139, v140, &v202);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v136 + 12) = 2048;
        sub_24105FDB0((unint64_t *)&qword_268CF09A0, MEMORY[0x263F090E8]);
        sub_241161460();
        uint64_t v141 = v201;
        sub_24106002C(v137, (uint64_t (*)(void))sub_2410346F4);
        uint64_t v201 = v141;
        sub_241161430();
        _os_log_impl(&dword_241007000, v134, v135, "[%{public}s] resetting active range with new duration %ld", (uint8_t *)v136, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v138, -1, -1);
        uint64_t v142 = v136;
        uint64_t v143 = v167;
        MEMORY[0x2456180C0](v142, -1, -1);

        (*(void (**)(char *, uint64_t))(v150 + 8))(v160, v151);
        uint64_t v144 = (uint64_t)v152;
      }
      else
      {
        sub_24106002C(v133, (uint64_t (*)(void))sub_2410346F4);

        (*(void (**)(char *, uint64_t))(v150 + 8))(v132, v151);
        uint64_t v144 = (uint64_t)v152;
        uint64_t v143 = v167;
      }
      uint64_t v145 = v162;
      sub_24105FFC4(v162, v144, (uint64_t (*)(void))sub_2410346F4);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v156 + 56))(v144, 0, 1, v143);
      sub_24105A720(v144);
      sub_24106002C(v145, (uint64_t (*)(void))sub_2410346F4);
      uint64_t v146 = v199;
      v199(v166, v131);
      v146(v165, v131);
      uint64_t v147 = *(void (**)(char *, uint64_t))(v171 + 8);
      v147(v164, v27);
      v147(v169, v27);
      uint64_t v109 = (uint64_t)v185;
      uint64_t v106 = v186;
      goto LABEL_38;
    }
    __break(1u);
LABEL_42:
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_24105CA34(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  sub_2410601A8(0, (unint64_t *)&unk_268CF09B0, MEMORY[0x263F090E8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v38 - v5;
  uint64_t v7 = sub_2411605E0();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v44 = (char *)v38 - v11;
  uint64_t v12 = sub_24115F790();
  uint64_t v13 = *(void *)(v12 - 8);
  id result = (id)MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state;
  if (v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] == 2)
  {
    id result = objc_msgSend(a1, sel__horizontalVelocity);
    if (fabs(v18) > 2.5)
    {
      sub_24115F750();
      uint64_t v43 = v2;
      uint64_t v19 = sub_24115F780();
      os_log_type_t v20 = sub_241160D20();
      LODWORD(v42) = v20;
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v41 = v19;
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        uint64_t v40 = v22;
        *(_DWORD *)uint64_t v21 = 136446210;
        v38[1] = v21 + 12;
        uint64_t v39 = v21;
        v47[0] = v22;
        v38[0] = v21 + 4;
        uint64_t v48 = 0;
        unint64_t v49 = 0xE000000000000000;
        sub_241161A00();
        sub_241160860();
        swift_bridgeObjectRelease();
        sub_241160860();
        uint64_t v23 = v43;
        uint64_t v46 = v43;
        sub_241161690();
        uint64_t v48 = sub_24101F0A4(v48, v49, v47);
        sub_241161430();

        swift_bridgeObjectRelease();
        os_log_type_t v24 = v42;
        uint64_t v42 = v10;
        uint64_t v25 = v39;
        _os_log_impl(&dword_241007000, v41, v24, "[%{public}s] scrollViewDidScroll: Pausing data fetching due to high velocity", v39, 0xCu);
        uint64_t v26 = v40;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v26, -1, -1);
        uint64_t v27 = v25;
        uint64_t v10 = v42;
        MEMORY[0x2456180C0](v27, -1, -1);
      }
      else
      {

        uint64_t v28 = v43;
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      char v29 = v2[v17];
      v2[v17] = 3;
      id result = (id)sub_241055AD4(v29);
    }
  }
  if ((v2[v17] & 0xFE) == 2)
  {
    sub_2410580E0((uint64_t)v6);
    uint64_t v30 = v45;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v6, 1, v7) == 1)
    {
      return (id)sub_24105FE70((uint64_t)v6, (unint64_t *)&unk_268CF09B0, MEMORY[0x263F090E8]);
    }
    else
    {
      uint64_t v31 = v44;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v44, v6, v7);
      uint64_t v32 = MEMORY[0x2456181C0](&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider]);
      if (v32)
      {
        uint64_t v33 = v32;
        uint64_t v34 = v32 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
        swift_beginAccess();
        uint64_t v43 = *(char **)(v30 + 16);
        ((void (*)(char *, uint64_t, uint64_t))v43)(v10, v34, v7);
        sub_24105FDB0(&qword_268CF1BC0, MEMORY[0x263F090E8]);
        char v35 = sub_2411606E0();
        uint64_t v36 = *(void (**)(char *, uint64_t))(v30 + 8);
        v36(v10, v7);
        if (v35)
        {
          v36(v31, v7);
          return (id)swift_unknownObjectRelease();
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v43)(v10, v31, v7);
          swift_beginAccess();
          (*(void (**)(uint64_t, char *, uint64_t))(v30 + 24))(v34, v10, v7);
          swift_endAccess();
          uint64_t v37 = *(void *)(v33 + 16);
          swift_unknownObjectRetain();
          sub_24104D8E4(v37, v33);
          swift_unknownObjectRelease();
          v36(v10, v7);
          swift_unknownObjectRelease();
          return (id)((uint64_t (*)(char *, uint64_t))v36)(v31, v7);
        }
      }
      else
      {
        return (id)(*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v31, v7);
      }
    }
  }
  return result;
}

uint64_t sub_24105D0B8(char a1)
{
  uint64_t v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_scrollToCenteredItemCompletionHandlers);
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (v6)
  {
    char v7 = a1 & 1;
    swift_bridgeObjectRetain();
    uint64_t v8 = v5 + 40;
    do
    {
      uint64_t v9 = *(void (**)(char *))(v8 - 8);
      char v10 = v7;
      swift_retain();
      v9(&v10);
      swift_release();
      v8 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t *v3 = MEMORY[0x263F8EE78];
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24105D30C(void *a1, double a2, double a3)
{
  v20.receiver = v3;
  v20.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v20, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  int v7 = v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state];
  if (v7 != 4)
  {
    v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 3;
    sub_241055AD4(v7);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v3;
    v19[4] = sub_24105FE68;
    v19[5] = v8;
    v19[0] = MEMORY[0x263EF8330];
    v19[1] = 1107296256;
    void v19[2] = sub_24105D5B4;
    v19[3] = &unk_26F555990;
    uint64_t v9 = _Block_copy(v19);
    char v10 = v3;
    swift_release();
    objc_msgSend(a1, sel_animateAlongsideTransition_completion_, 0, v9);
    _Block_release(v9);
    if (a2 <= 320.0)
    {
      unint64_t v13 = 0;
      uint64_t v14 = 0x403E000000000000;
      uint64_t v12 = 0x4020000000000000;
      uint64_t v15 = 0x4020000000000000;
      uint64_t v11 = 0x4020000000000000;
    }
    else
    {
      uint64_t v11 = 0x4020000000000000;
      uint64_t v12 = 0x402E000000000000;
      if (a2 < 414.0 || a2 >= 744.0)
      {
        if (a2 < 744.0)
        {
          uint64_t v15 = 0x4020000000000000;
        }
        else
        {
          uint64_t v12 = 0x403E000000000000;
          uint64_t v15 = 0x4034000000000000;
        }
        if (a2 >= 744.0) {
          uint64_t v14 = 0x404E800000000000;
        }
        else {
          uint64_t v14 = 0x4041000000000000;
        }
        if (a2 >= 744.0) {
          uint64_t v11 = 0x4028000000000000;
        }
        unint64_t v13 = (unint64_t)(a2 >= 744.0) << 62;
      }
      else
      {
        unint64_t v13 = 0;
        uint64_t v14 = 0x4044800000000000;
        uint64_t v15 = 0x4020000000000000;
      }
    }
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F83588]);
    uint64_t v17 = (uint64_t *)&v10[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig];
    double v18 = *(void **)&v10[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig
                       + 56];
    *uint64_t v17 = v12;
    v17[1] = v15;
    void v17[2] = 0x4034000000000000;
    void v17[3] = v14;
    v17[4] = v14;
    v17[5] = v14;
    v17[6] = 0;
    v17[7] = (uint64_t)v16;
    unsigned char v17[8] = v11;
    v17[9] = 0x4033000000000000;
    v17[10] = v13;
    v17[11] = 27;
  }
}

id sub_24105D560(uint64_t a1, uint64_t a2)
{
  id result = (id)*(unsigned __int8 *)(a2
                                  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state);
  if (((1 << (char)result) & 0x15) == 0)
  {
    *(unsigned char *)(a2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state) = 2;
    sub_241055AD4((char)result);
    sub_24105B438();
    return sub_2410598E0();
  }
  return result;
}

uint64_t sub_24105D5B4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_24105D6FC()
{
  sub_2411605E0();
  if (v0 <= 0x3F)
  {
    sub_2410346F4(319);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_24105D810(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v2, sel_navigationController);
  id v5 = objc_msgSend(v4, sel_interactivePopGestureRecognizer);

  if (!v5) {
    return 1;
  }
  sub_241024708(0, (unint64_t *)&unk_268CF0980);
  id v6 = a1;
  char v7 = sub_2411612E0();

  if ((v7 & 1) == 0) {
    return 1;
  }
  uint64_t result = (uint64_t)objc_msgSend(v2, sel_collectionView);
  if (result)
  {
    uint64_t v9 = (void *)result;
    objc_msgSend((id)result, sel_bounds);
    CGFloat v11 = v10;
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    CGFloat v17 = v16;

    id v18 = objc_msgSend(v2, sel_collectionView);
    objc_msgSend(v6, sel_locationInView_, v18);
    CGFloat v20 = v19;
    CGFloat v22 = v21;

    v25.origin.x = v11;
    v25.origin.y = v13;
    v25.size.width = v15;
    v25.size.height = v17;
    v24.x = v20;
    v24.y = v22;
    if (CGRectContainsPoint(v25, v24)) {
      return 0;
    }
    uint64_t v23 = *(void **)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_navControllerDelegateCache];
    if (v23 && (objc_msgSend(v23, sel_respondsToSelector_, sel_gestureRecognizerShouldBegin_) & 1) != 0) {
      return (uint64_t)objc_msgSend(v23, sel_gestureRecognizerShouldBegin_, v6);
    }
    return 1;
  }
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for InteractiveTimelineCollectionViewController.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for InteractiveTimelineCollectionViewController.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24105DCA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractiveTimelineCollectionViewController.State()
{
  return &type metadata for InteractiveTimelineCollectionViewController.State;
}

unint64_t sub_24105DCE4()
{
  unint64_t result = qword_268CF0968;
  if (!qword_268CF0968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0968);
  }
  return result;
}

uint64_t sub_24105DD38(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24115CD40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 128));
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (*(void *)(*v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_241062644(a1);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 32 * v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v12;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = v2 + *(void *)(*(void *)v2 + 112);
  swift_beginAccess();
  double v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v7, v13, v4);
  sub_2411605B0();
  LOBYTE(v13) = sub_24115CCF0();
  CGFloat v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v7, v4);
  if (v13) {
    return 2;
  }
  uint64_t v16 = v2 + *(void *)(*(void *)v2 + 120);
  swift_beginAccess();
  v14(v7, v16, v4);
  sub_2411605B0();
  int v17 = sub_24115CCF0();
  v15(v7, v4);
  return ~v17 & 1;
}

uint64_t sub_24105DFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimelineDay();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24105E010(uint64_t a1, uint64_t a2)
{
  sub_2410601A8(0, &qword_26B007210, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24105E0A4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24105E0DC(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_24105E108(void *a1, double a2, double a3, double a4, double a5)
{
  double Width = CGRectGetWidth(*(CGRect *)&a2);
  if (Width <= 320.0)
  {
    double v17 = 0.0;
    double v15 = 30.0;
    double v13 = 8.0;
    double v14 = 8.0;
    double v16 = 8.0;
  }
  else
  {
    double v7 = 30.0;
    if (Width < 744.0) {
      double v7 = 15.0;
    }
    double v8 = 20.0;
    if (Width < 744.0) {
      double v8 = 8.0;
    }
    double v9 = 61.0;
    if (Width < 744.0) {
      double v9 = 34.0;
    }
    double v10 = 12.0;
    if (Width < 744.0) {
      double v10 = 8.0;
    }
    double v11 = 2.0;
    if (Width < 744.0) {
      double v11 = 0.0;
    }
    BOOL v12 = Width >= 414.0 && Width < 744.0;
    if (v12) {
      double v13 = 15.0;
    }
    else {
      double v13 = v7;
    }
    if (v12) {
      double v14 = 8.0;
    }
    else {
      double v14 = v8;
    }
    if (v12) {
      double v15 = 41.0;
    }
    else {
      double v15 = v9;
    }
    if (v12) {
      double v16 = 8.0;
    }
    else {
      double v16 = v10;
    }
    if (v12) {
      double v17 = 0.0;
    }
    else {
      double v17 = v11;
    }
  }
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F83588]);
  *(double *)double v21 = v13;
  *(double *)&v21[1] = v14;
  void v21[2] = 0x4034000000000000;
  *(double *)&v21[3] = v15;
  *(double *)&v21[4] = v15;
  *(double *)&v21[5] = v15;
  v21[6] = 0;
  v21[7] = v18;
  *(double *)&unsigned char v21[8] = v16;
  v21[9] = 0x4033000000000000;
  *(double *)&v21[10] = v17;
  v21[11] = 27;
  id v19 = objc_allocWithZone((Class)type metadata accessor for InteractiveTimelineCollectionViewController());
  return sub_241055E00((uint64_t)v21, a1);
}

void sub_24105E27C()
{
  v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig];
  _OWORD *v1 = 0u;
  v1[1] = 0u;
  v1[2] = 0u;
  v1[3] = 0u;
  v1[4] = 0u;
  v1[5] = 0u;
  *(void *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_navControllerDelegateCache] = 0;
  *(void *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider
               + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_scrollToCenteredItemCompletionHandlers] = MEMORY[0x263F8EE78];
  v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_needsScrollToCurrentDay] = 0;

  sub_2411616B0();
  __break(1u);
}

void sub_24105E348(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_24115CE00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24115F790();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  double v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F750();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  id v11 = v1;
  BOOL v12 = sub_24115F780();
  os_log_type_t v13 = sub_241160D50();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = v8;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = v17;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v21 = v16 + 4;
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    uint64_t v30 = v17;
    sub_241161A00();
    uint64_t ObjectType = a1;
    uint64_t v24 = v7;
    int v22 = v14;
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_241160860();
    id v27 = v11;
    sub_241161690();
    uint64_t v28 = sub_24101F0A4(v28, v29, &v30);
    sub_241161430();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    sub_24105FDB0(&qword_268CF09C0, MEMORY[0x263F07A30]);
    uint64_t v18 = sub_241161850();
    uint64_t v28 = sub_24101F0A4(v18, v19, &v30);
    a1 = ObjectType;
    sub_241161430();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl(&dword_241007000, v12, (os_log_type_t)v22, "[%{public}s] Scrolling in response to user selecting item at %{public}s", (uint8_t *)v16, 0x16u);
    uint64_t v20 = v23;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v20, -1, -1);
    MEMORY[0x2456180C0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_241058A5C(a1, 1, 0, 0);
}

void sub_24105E734(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v60 = a2;
  uint64_t v58 = sub_24115CCC0();
  uint64_t v5 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TimelineDay();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v59 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2411605E0();
  uint64_t v61 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v57 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v55 = (char *)&v49 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v56 = (char *)&v49 - v15;
  sub_2410601A8(0, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v49 - v17;
  sub_2410346F4(0);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v49 - v25;
  type metadata accessor for InteractiveTimelineDayCell(0);
  uint64_t v27 = swift_dynamicCastClass();
  if (!v27) {
    return;
  }
  uint64_t v54 = v27;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state) == 1)
  {
    uint64_t v50 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state;
    uint64_t v52 = v5;
    uint64_t v53 = v3;
    uint64_t v28 = MEMORY[0x2456181C0](v3+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider);
    if (v28)
    {
      uint64_t v29 = *(void *)(v28 + 24);
      uint64_t v30 = *(void *)(*(void *)v29 + 168);
      uint64_t v51 = v10;
      uint64_t v31 = a1;
      uint64_t v32 = v29 + v30;
      swift_beginAccess();
      uint64_t v33 = v32;
      a1 = v31;
      uint64_t v10 = v51;
      sub_24105FEE0(v33, (uint64_t)v18, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4);
      id v34 = v31;
      swift_unknownObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) != 1)
      {
        sub_24105FF60((uint64_t)v18, (uint64_t)v26);
        uint64_t v35 = v53;
        sub_24115CDB0();
        uint64_t v36 = v56;
        sub_2411605C0();
        uint64_t v49 = sub_24105FDB0(&qword_26B0039C0, MEMORY[0x263F090E8]);
        char v37 = sub_2411606C0();
        uint64_t v38 = v55;
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v55, v36, v10);
        sub_24105FFC4((uint64_t)v26, (uint64_t)v24, (uint64_t (*)(void))sub_2410346F4);
        if (v37)
        {
          char v39 = sub_2411606A0();
          sub_24106002C((uint64_t)v24, (uint64_t (*)(void))sub_2410346F4);
          uint64_t v40 = *(void (**)(char *, uint64_t))(v61 + 8);
          v40(v38, v10);
          v40(v36, v10);
          uint64_t v5 = v52;
          if (v39)
          {
            char v41 = *(unsigned char *)(v35 + v50);
            *(unsigned char *)(v35 + v50) = 2;
            sub_241055AD4(v41);
          }
        }
        else
        {
          sub_24106002C((uint64_t)v24, (uint64_t (*)(void))sub_2410346F4);
          uint64_t v44 = *(void (**)(char *, uint64_t))(v61 + 8);
          v44(v38, v10);
          v44(v36, v10);
          uint64_t v5 = v52;
        }
        sub_24106002C((uint64_t)v26, (uint64_t (*)(void))sub_2410346F4);
        goto LABEL_13;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v18, 1, 1, v20);
      id v43 = a1;
    }
    sub_24105FE70((uint64_t)v18, &qword_268CF0670, (uint64_t (*)(uint64_t))sub_2410346F4);
    uint64_t v5 = v52;
    uint64_t v35 = v53;
  }
  else
  {
    id v42 = a1;
    uint64_t v35 = v3;
  }
LABEL_13:
  if (MEMORY[0x2456181C0](v35+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider))
  {
    uint64_t v45 = (uint64_t)v7;
    sub_24115CDB0();
    uint64_t v46 = (uint64_t)v57;
    sub_2411605C0();
    uint64_t v47 = v59;
    sub_2410347D4(v46, v59);
    id v48 = objc_msgSend(*(id *)(v35+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_calendarCache), sel_currentCalendar);
    sub_24115CC50();

    sub_2410D7810(v47, v45);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v45, v58);
    sub_24106002C(v47, (uint64_t (*)(void))type metadata accessor for TimelineDay);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v46, v10);
  }
}

uint64_t sub_24105EE1C()
{
  swift_getObjectType();
  uint64_t v1 = sub_24115F790();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F750();
  id v5 = v0;
  uint64_t v6 = sub_24115F780();
  os_log_type_t v7 = sub_241160D20();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v13 = v9 + 4;
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    uint64_t v18 = v10;
    sub_241161A00();
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_241160860();
    id v15 = v5;
    sub_241161690();
    uint64_t v16 = sub_24101F0A4(v16, v17, &v18);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v6, v7, "[%{public}s] scrollViewDidEndScrollingAnimation: resuming data fetching", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v10, -1, -1);
    MEMORY[0x2456180C0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v14);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  char v11 = *((unsigned char *)v5 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state);
  if (((1 << v11) & 0x15) == 0)
  {
    *((unsigned char *)v5 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state) = 2;
    sub_241055AD4(v11);
    sub_24105B438();
    sub_2410598E0();
  }
  return sub_24105D0B8(1);
}

uint64_t sub_24105F0D0()
{
  uint64_t v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_scrollToCenteredItemCompletionHandlers);
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      uint64_t v6 = *(void (**)(char *))(v5 - 8);
      char v7 = 0;
      swift_retain();
      v6(&v7);
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t *v1 = MEMORY[0x263F8EE78];
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24105F188(char a1)
{
  swift_getObjectType();
  uint64_t v3 = sub_24115F790();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_24115F750();
    uint64_t v8 = v1;
    uint64_t v9 = sub_24115F780();
    os_log_type_t v10 = sub_241160D20();
    if (os_log_type_enabled(v9, v10))
    {
      char v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)char v11 = 136446210;
      uint64_t v14 = v11 + 4;
      uint64_t v17 = 0;
      unint64_t v18 = 0xE000000000000000;
      uint64_t v19 = v12;
      sub_241161A00();
      sub_241160860();
      swift_bridgeObjectRelease();
      sub_241160860();
      uint64_t v16 = v8;
      sub_241161690();
      uint64_t v17 = sub_24101F0A4(v17, v18, &v19);
      sub_241161430();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v9, v10, "[%{public}s] scrollViewDidEndDragging without deceleration: resuming data fetching", v11, 0xCu);
      uint64_t v13 = v15;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v13, -1, -1);
      MEMORY[0x2456180C0](v11, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t result = v8[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state];
    if (((1 << result) & 0x15) == 0)
    {
      v8[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 2;
      sub_241055AD4(result);
      sub_24105B438();
      return (uint64_t)sub_2410598E0();
    }
  }
  return result;
}

id sub_24105F42C()
{
  swift_getObjectType();
  uint64_t v1 = sub_24115F790();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F750();
  uint64_t v5 = v0;
  uint64_t v6 = sub_24115F780();
  os_log_type_t v7 = sub_241160D20();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v12 = v9 + 4;
    uint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    uint64_t v17 = v10;
    sub_241161A00();
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_241160860();
    uint64_t v14 = v5;
    sub_241161690();
    uint64_t v15 = sub_24101F0A4(v15, v16, &v17);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v6, v7, "[%{public}s] scrollViewDidEndDecelerating: resuming data fetching", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v10, -1, -1);
    MEMORY[0x2456180C0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v13);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  id result = (id)v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state];
  if (((1 << (char)result) & 0x15) == 0)
  {
    v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 2;
    sub_241055AD4((char)result);
    sub_24105B438();
    return sub_2410598E0();
  }
  return result;
}

uint64_t sub_24105F6D4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  os_log_type_t v7 = v5;
  uint64_t v48 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v53 = sub_241160410();
  uint64_t v56 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241160440();
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v59 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_241160400();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (void *)((char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_241160460();
  uint64_t v57 = *(void *)(v15 - 8);
  uint64_t v58 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v50 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v51 = (char *)v43 - v18;
  uint64_t v49 = sub_24115F790();
  uint64_t v19 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v21 = (char *)v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F770();
  uint64_t v22 = sub_24115F780();
  os_log_type_t v23 = sub_241160D50();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v46 = v7;
    uint64_t v25 = v24;
    uint64_t v45 = swift_slowAlloc();
    aBlock[0] = v45;
    *(_DWORD *)uint64_t v25 = 136446466;
    v43[1] = v25 + 4;
    uint64_t v26 = sub_241161A00();
    uint64_t ObjectType = v11;
    uint64_t v62 = sub_24101F0A4(v26, v27, aBlock);
    uint64_t v44 = a2;
    sub_241161430();
    uint64_t v11 = ObjectType;
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2048;
    uint64_t v62 = v48;
    sub_241161430();
    _os_log_impl(&dword_241007000, v22, v23, v44, (uint8_t *)v25, 0x16u);
    uint64_t v28 = v45;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v28, -1, -1);
    uint64_t v29 = v25;
    os_log_type_t v7 = v46;
    MEMORY[0x2456180C0](v29, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v49);
  char v30 = v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state];
  v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 4;
  sub_241055AD4(v30);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  uint64_t v49 = sub_241160EF0();
  uint64_t v31 = v50;
  sub_241160450();
  *uint64_t v14 = 10;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F000], v11);
  uint64_t v32 = v51;
  MEMORY[0x2456162D0](v31, v14);
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v33 = v58;
  id v34 = *(void (**)(char *, uint64_t))(v57 + 8);
  v34(v31, v58);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v7;
  aBlock[4] = v54;
  aBlock[5] = v35;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24101AFBC;
  uint64_t aBlock[3] = v55;
  uint64_t v36 = _Block_copy(aBlock);
  char v37 = v7;
  swift_release();
  uint64_t v38 = v59;
  sub_241160430();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_24105FDB0(&qword_26B0072E0, MEMORY[0x263F8F030]);
  sub_2410601A8(0, (unint64_t *)&unk_26B0072F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_241024138();
  char v39 = v52;
  uint64_t v40 = v53;
  sub_2411614F0();
  char v41 = (void *)v49;
  MEMORY[0x245616CE0](v32, v38, v39, v36);
  _Block_release(v36);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v61);
  return ((uint64_t (*)(char *, uint64_t))v34)(v32, v33);
}

uint64_t sub_24105FDB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24105FDF8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24105FE30()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state) = 2;
  return sub_241055AD4(v2);
}

id sub_24105FE68(uint64_t a1)
{
  return sub_24105D560(a1, *(void *)(v1 + 16));
}

uint64_t sub_24105FE70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2410601A8(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24105FEE0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2410601A8(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24105FF60(uint64_t a1, uint64_t a2)
{
  sub_2410346F4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24105FFC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24106002C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24106008C(uint64_t a1, uint64_t a2)
{
  sub_2410601A8(0, (unint64_t *)&qword_268CF0978, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241060120()
{
  sub_241059698(*(char **)(v0 + 16));
}

uint64_t sub_241060128(uint64_t a1)
{
  return a1;
}

uint64_t sub_241060150(uint64_t a1)
{
  id v2 = *(id *)(a1 + 56);
  return a1;
}

uint64_t sub_24106017C(uint64_t a1)
{
  return a1;
}

void sub_2410601A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_24106020C()
{
  unint64_t result = qword_268CF09D0;
  if (!qword_268CF09D0)
  {
    sub_241060248();
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF09D0);
  }
  return result;
}

unint64_t sub_241060248()
{
  unint64_t result = qword_268CF2260;
  if (!qword_268CF2260)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF2260);
  }
  return result;
}

uint64_t sub_2410602A0()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2410602D8(uint64_t a1, uint64_t a2)
{
  sub_241056934(a1, a2, v2);
}

unint64_t sub_2410602E0()
{
  unint64_t result = qword_268CF0A20;
  if (!qword_268CF0A20)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF0A20);
  }
  return result;
}

void sub_241060338(uint64_t a1, uint64_t a2)
{
  sub_241056BE8(a1, a2, v2);
}

void sub_241060364()
{
  qword_268CF27B8 = 0x4030000000000000;
  unk_268CF27C0 = 0;
  qword_268CF27C8 = 0;
  unk_268CF27D0 = 0;
}

void sub_24106037C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell____lazy_storage___hostingController] = 0;
  type metadata accessor for MedicationHighlightsView.Model();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0xE000000000000000;
  v10[4] = 0;
  v10[5] = 0xE000000000000000;
  v10[6] = 0;
  v10[7] = 0;
  uint64_t v11 = v4;
  swift_bridgeObjectRelease();
  v10[8] = MEMORY[0x263F8EE78];
  *(void *)&v11[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_viewModel] = v10;
  swift_retain();

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for SharedMedicationsMonthHighlightCell();
  id v12 = objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  id v13 = objc_msgSend(v12, sel_contentView);
  id v14 = sub_2410609F4();
  id v15 = objc_msgSend(v14, sel_view);

  if (v15)
  {
    objc_msgSend(v13, sel_addSubview_, v15);

    sub_241060C90();
    sub_2410617AC(0, (unint64_t *)&qword_268CF2250, (uint64_t (*)(uint64_t))sub_24106020C, MEMORY[0x263F8E0F8]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_24116B370;
    uint64_t v17 = sub_24115FA70();
    uint64_t v18 = MEMORY[0x263F82018];
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v18;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_2410602E0();
    sub_241161230();
    swift_release();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

id sub_2410605EC(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_item];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell____lazy_storage___hostingController] = 0;
  type metadata accessor for MedicationHighlightsView.Model();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = 0;
  v4[3] = 0xE000000000000000;
  v4[4] = 0;
  v4[5] = 0xE000000000000000;
  v4[6] = 0;
  v4[7] = 0;
  uint64_t v5 = v1;
  swift_bridgeObjectRelease();
  v4[8] = MEMORY[0x263F8EE78];
  *(void *)&v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_viewModel] = v4;
  swift_retain();

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for SharedMedicationsMonthHighlightCell();
  id v6 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);

  id v7 = v6;
  swift_release();
  if (v7) {

  }
  return v7;
}

void sub_241060704()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for SharedMedicationsMonthHighlightCell();
  objc_msgSendSuper2(&v7, sel_awakeFromNib);
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = sub_2410609F4();
  id v3 = objc_msgSend(v2, sel_view);

  if (v3)
  {
    objc_msgSend(v1, sel_addSubview_, v3);

    sub_241060C90();
    sub_2410617AC(0, (unint64_t *)&qword_268CF2250, (uint64_t (*)(uint64_t))sub_24106020C, MEMORY[0x263F8E0F8]);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_24116B370;
    uint64_t v5 = sub_24115FA70();
    uint64_t v6 = MEMORY[0x263F82018];
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v6;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_2410602E0();
    sub_241161230();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_2410608C4(void *a1, void *a2, uint64_t a3)
{
  id v5 = objc_msgSend(a1, sel_traitCollection);
  id v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  id v7 = objc_msgSend(a2, sel_preferredContentSizeCategory);
  uint64_t v8 = sub_241160730();
  uint64_t v10 = v9;
  if (v8 == sub_241160730() && v10 == v11)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_241161890();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      swift_beginAccess();
      uint64_t v14 = MEMORY[0x2456181C0](a3 + 16);
      if (v14)
      {
        id v15 = (void *)v14;
        sub_241060C90();
      }
    }
  }
}

id sub_2410609F4()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell____lazy_storage___hostingController;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell____lazy_storage___hostingController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell____lazy_storage___hostingController);
  }
  else
  {
    id v4 = sub_241060A58(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_241060A58(uint64_t a1)
{
  id v2 = (int *)type metadata accessor for MedicationHighlightsView(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  id v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)v16 - v6;
  type metadata accessor for MedicationHighlightsView.Model();
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = 0;
  v8[3] = 0xE000000000000000;
  v8[4] = 0;
  v8[5] = 0xE000000000000000;
  v8[6] = 0;
  v8[7] = 0;
  swift_bridgeObjectRelease();
  unsigned char v8[8] = MEMORY[0x263F8EE78];
  *(void *)(a1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_viewModel) = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = sub_24115E530();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  uint64_t v10 = self;
  swift_retain();
  id result = objc_msgSend(v10, sel_displayTypeWithIdentifier_, 273);
  if (result)
  {
    *(void *)&v5[v2[5]] = result;
    id v12 = (uint64_t *)&v5[v2[7]];
    *id v12 = swift_getKeyPath();
    sub_2410617AC(0, &qword_26B004050, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    *(void *)&v5[v2[6]] = v8;
    sub_241061810((uint64_t)v5, (uint64_t)v7);
    sub_241061874();
    v16[1] = sub_241160390();
    sub_2410618CC();
    id v14 = objc_allocWithZone(v13);
    uint64_t v15 = sub_241160150();
    swift_release();
    return (id)v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241060C90()
{
  id v1 = sub_2410609F4();
  id v2 = objc_msgSend(v1, sel_view);

  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  sub_24104A2D8();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24116BC00;
  id v4 = sub_2410609F4();
  id v5 = objc_msgSend(v4, sel_view);

  if (!v5)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v0, sel_contentView);
  id v8 = objc_msgSend(v7, sel_leadingAnchor);

  id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
  *(void *)(v3 + 32) = v9;
  id v10 = sub_2410609F4();
  id v11 = objc_msgSend(v10, sel_view);

  if (!v11)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v12 = objc_msgSend(v11, sel_trailingAnchor);

  id v13 = objc_msgSend(v0, sel_contentView);
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(void *)(v3 + 40) = v15;
  id v16 = sub_2410609F4();
  id v17 = objc_msgSend(v16, sel_view);

  if (!v17)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = objc_msgSend(v0, sel_contentView);
  id v20 = objc_msgSend(v19, sel_topAnchor);

  if (qword_268CF02F8 != -1) {
    swift_once();
  }
  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, *(double *)&qword_268CF27B8);

  *(void *)(v3 + 48) = v21;
  id v22 = sub_2410609F4();
  id v23 = objc_msgSend(v22, sel_view);

  if (!v23) {
    goto LABEL_15;
  }
  uint64_t v24 = self;
  id v25 = objc_msgSend(v23, sel_bottomAnchor);

  id v26 = objc_msgSend(v0, sel_contentView);
  id v27 = objc_msgSend(v26, sel_bottomAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(void *)(v3 + 56) = v28;
  sub_2411609C0();
  sub_241061764();
  id v29 = (id)sub_241160980();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_activateConstraints_, v29);
}

uint64_t sub_241061068()
{
  uint64_t v1 = sub_24115F790();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_item];
  swift_beginAccess();
  sub_241061700(v5, (uint64_t)v24);
  if (v24[3])
  {
    sub_241020840(0, (unint64_t *)&qword_26B0069A8);
    type metadata accessor for MedicationMonthHighlightItem();
    if (swift_dynamicCast())
    {
      id v6 = *(void **)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_viewModel];
      uint64_t v7 = v23[3];
      uint64_t v9 = v23[4];
      uint64_t v8 = v23[5];
      uint64_t v11 = v23[6];
      uint64_t v10 = v23[7];
      uint64_t v12 = v23[8];
      v6[2] = v23[2];
      v6[3] = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v6[4] = v9;
      v6[5] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v6[6] = v11;
      v6[7] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v6[8] = v12;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_2410616A4((uint64_t)v24);
  }
  sub_24115F740();
  id v14 = v0;
  id v15 = sub_24115F780();
  os_log_type_t v16 = sub_241160D30();
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    id v18 = (void *)swift_slowAlloc();
    uint64_t v22 = v1;
    id v23 = v18;
    id v19 = v18;
    *(_DWORD *)id v17 = 136446210;
    sub_241061700(v5, (uint64_t)v24);
    sub_24106163C();
    uint64_t v20 = sub_241160770();
    v24[0] = sub_24101F0A4(v20, v21, (uint64_t *)&v23);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v15, v16, "Incorrect view model for MedicationMonthHighlightItem: %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v19, -1, -1);
    MEMORY[0x2456180C0](v17, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v22);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

id sub_2410613C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedMedicationsMonthHighlightCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SharedMedicationsMonthHighlightCell()
{
  return self;
}

uint64_t sub_24106147C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_item;
  swift_beginAccess();
  return sub_241061700(v3, a1);
}

uint64_t sub_2410614D0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin35SharedMedicationsMonthHighlightCell_item;
  swift_beginAccess();
  sub_2410615D8(a1, v3);
  swift_endAccess();
  sub_241061068();
  return sub_2410616A4(a1);
}

uint64_t (*sub_241061540(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2410615A0;
}

uint64_t sub_2410615A0(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_241061068();
  }
  return result;
}

uint64_t sub_2410615D8(uint64_t a1, uint64_t a2)
{
  sub_24106163C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_24106163C()
{
  if (!qword_26B0069B0)
  {
    sub_241020840(255, (unint64_t *)&qword_26B0069A8);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0069B0);
    }
  }
}

uint64_t sub_2410616A4(uint64_t a1)
{
  sub_24106163C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_241061700(uint64_t a1, uint64_t a2)
{
  sub_24106163C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_241061764()
{
  unint64_t result = qword_26B006FA0;
  if (!qword_26B006FA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B006FA0);
  }
  return result;
}

void sub_2410617AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241061810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationHighlightsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_241061874()
{
  unint64_t result = qword_26B003FF8;
  if (!qword_26B003FF8)
  {
    type metadata accessor for MedicationHighlightsView(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B003FF8);
  }
  return result;
}

void sub_2410618CC()
{
  if (!qword_268CF0A10)
  {
    unint64_t v0 = sub_241160160();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0A10);
    }
  }
}

uint64_t sub_24106192C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_241061964(void *a1, void *a2)
{
  sub_2410608C4(a1, a2, v2);
}

uint64_t sub_24106196C(uint64_t a1)
{
  sub_241161950();
  sub_2410B5018((uint64_t)v6);
  uint64_t v3 = *(void **)(v1 + *(int *)(a1 + 20));
  sub_241161970();
  if (v3)
  {
    id v4 = v3;
    sub_2411612F0();
  }
  return sub_2411619A0();
}

void sub_2410619EC(uint64_t a1, uint64_t a2)
{
  sub_2410B5018(a1);
  id v4 = *(void **)(v2 + *(int *)(a2 + 20));
  if (v4)
  {
    sub_241161970();
    id v5 = v4;
    sub_2411612F0();
  }
  else
  {
    sub_241161970();
  }
}

uint64_t sub_241061A88(uint64_t a1, uint64_t a2)
{
  sub_241161950();
  sub_2410B5018((uint64_t)v7);
  id v4 = *(void **)(v2 + *(int *)(a2 + 20));
  sub_241161970();
  if (v4)
  {
    id v5 = v4;
    sub_2411612F0();
  }
  return sub_2411619A0();
}

unint64_t sub_241061B08(uint64_t a1)
{
  sub_2410681F4();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    unint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_241068274();
  uint64_t v7 = sub_241161720();
  unint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_241067AF0(v13, (uint64_t)v6, (uint64_t (*)(void))sub_2410681F4);
    unint64_t result = sub_241062718((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_24115CE00();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    void v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_241061D00(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_241067CC4();
  uint64_t v2 = sub_241161720();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_241067AF0(v6, (uint64_t)v15, (uint64_t (*)(void))sub_241067D30);
    unint64_t result = sub_24106289C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_241023394(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_241061E40(uint64_t a1)
{
  return sub_241061ED0(a1, (void (*)(void))sub_24106C9B4, (unint64_t *)&qword_268CF0B00, type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_2410628E0);
}

unint64_t sub_241061E88(uint64_t a1)
{
  return sub_241061ED0(a1, (void (*)(void))sub_241068154, &qword_268CF0AB8, type metadata accessor for OpenURLOptionsKey, (uint64_t (*)(uint64_t))sub_241062A18);
}

unint64_t sub_241061ED0(uint64_t a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    long long v10 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v9 = sub_241161720();
  long long v10 = (void *)v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  uint64_t v12 = v9 + 64;
  uint64_t v13 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_241067F44(v13, (uint64_t)&v20, a3, a4);
    uint64_t v14 = v20;
    unint64_t result = a5(v20);
    if (v16) {
      break;
    }
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v10[6] + 8 * result) = v14;
    unint64_t result = (unint64_t)sub_241023394(&v21, (_OWORD *)(v10[7] + 32 * result));
    uint64_t v17 = v10[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v10[2] = v19;
    v13 += 40;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_241062014(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24106849C();
  uint64_t v2 = (void *)sub_241161720();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    id v8 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_24101DC1C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_241062128(uint64_t a1)
{
  return sub_241061ED0(a1, (void (*)(void))sub_241067EA4, &qword_268CF0A98, type metadata accessor for OpenExternalURLOptionsKey, (uint64_t (*)(uint64_t))sub_241062A18);
}

id sub_241062170()
{
  id result = objc_msgSend(self, sel_medicationDoseEventTypeForIdentifier_, *MEMORY[0x263F099E0]);
  if (!result) {
    __break(1u);
  }
  return result;
}

void *sub_2410621BC(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + *(int *)(a1 + 20));
  id v3 = v2;
  return v2;
}

uint64_t sub_2410621E8()
{
  return 0;
}

unint64_t sub_2410621FC()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_24106228C()
{
  return sub_24115D9A0();
}

id sub_2410622C4(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v38 = a6;
  char v39 = a7;
  uint64_t v40 = a8;
  id v41 = a5;
  sub_241067880(0, &qword_268CF0A40, &qword_268CF0A48, 0x263F466F0, MEMORY[0x263F8D488]);
  uint64_t v35 = sub_241160980();
  swift_bridgeObjectRelease();
  if (a3)
  {
    sub_241024708(0, &qword_26B007380);
    uint64_t v36 = sub_241160980();
    swift_bridgeObjectRelease();
    uint64_t v16 = a10[3];
    if (v16)
    {
LABEL_3:
      uint64_t v17 = sub_24101A6BC(a10, v16);
      uint64_t v18 = *(void *)(v16 - 8);
      MEMORY[0x270FA5388](v17);
      uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v20);
      uint64_t v21 = sub_241161880();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
      sub_24101F178((uint64_t)a10);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v16 = a10[3];
    if (v16) {
      goto LABEL_3;
    }
  }
  uint64_t v21 = 0;
LABEL_6:
  uint64_t v22 = sub_24115CCC0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a11, 1, v22) != 1)
  {
    uint64_t v24 = (void *)sub_24115CC20();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a11, v22);
  }
  if (a13)
  {
    sub_241024708(0, &qword_26B007380);
    sub_241024708(0, &qword_26B005E10);
    sub_241024FC4();
    id v25 = (void *)sub_241160620();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v25 = 0;
  }
  uint64_t v33 = v21;
  id v26 = v40;
  id v27 = v39;
  id v29 = (void *)v36;
  id v28 = v37;
  char v30 = (void *)v35;
  id v37 = a9;
  uint64_t v31 = v38;
  id v34 = objc_msgSend(v28, sel_initWithStackedDisplayTypes_primaryDisplayTypeStackIndex_stackedDisplayTypeHeights_healthStore_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_timeScopeRanges_, v35, a2, v36, a4, v41, v38, v39, v40, a9, v33, v24, a12, v25);

  swift_unknownObjectRelease();
  return v34;
}

unint64_t sub_241062644(uint64_t a1)
{
  sub_2411605E0();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F090E8];
  sub_24106670C(&qword_268CF0A30, MEMORY[0x263F090E8]);
  uint64_t v3 = sub_241160650();
  return sub_241062AA8(a1, v3, MEMORY[0x263F090E8], &qword_268CF1BC0, v2, MEMORY[0x263F09108]);
}

unint64_t sub_241062718(uint64_t a1)
{
  sub_24115CE00();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F07A30];
  sub_24106670C(&qword_26B006950, MEMORY[0x263F07A30]);
  uint64_t v3 = sub_241160650();
  return sub_241062AA8(a1, v3, MEMORY[0x263F07A30], &qword_26B006958, v2, MEMORY[0x263F07A50]);
}

unint64_t sub_2410627EC(uint64_t a1)
{
  uint64_t v2 = sub_2411612D0();

  return sub_241062C48(a1, v2);
}

unint64_t sub_241062834(uint64_t a1)
{
  sub_241161950();
  sub_241161960();
  uint64_t v2 = sub_2411619A0();
  return sub_241062D64(a1, v2);
}

unint64_t sub_24106289C(uint64_t a1)
{
  uint64_t v2 = sub_241161570();

  return sub_241062E00(a1, v2);
}

unint64_t sub_2410628E0(uint64_t a1)
{
  sub_241160730();
  sub_241161950();
  sub_241160830();
  uint64_t v2 = sub_2411619A0();
  swift_bridgeObjectRelease();

  return sub_241062EC8(a1, v2);
}

unint64_t sub_241062974(uint64_t a1, uint64_t a2)
{
  sub_241161950();
  sub_241161970();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = sub_2411619A0();

  return sub_241063040(a1, a2, v4);
}

unint64_t sub_241062A18(uint64_t a1)
{
  sub_241160730();
  sub_241161950();
  sub_241160830();
  uint64_t v2 = sub_2411619A0();
  swift_bridgeObjectRelease();
  return sub_241062EC8(a1, v2);
}

unint64_t sub_241062AA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    id v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_24106670C(v23, v24);
      char v19 = sub_2411606E0();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_241062C48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_241024708(0, &qword_26B007380);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_2411612E0();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_2411612E0();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_241062D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_241062E00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_241067C14(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x2456173C0](v9, a1);
      sub_241067C70((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_241062EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_241160730();
    uint64_t v8 = v7;
    if (v6 == sub_241160730() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_241161890();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_241160730();
          uint64_t v15 = v14;
          if (v13 == sub_241160730() && v15 == v16) {
            break;
          }
          char v18 = sub_241161890();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_241063040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = *(void *)(v3 + 48);
    do
    {
      char v11 = (void *)(v10 + 16 * v6);
      uint64_t v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          BOOL v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_241161890() & 1) != 0) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
      unint64_t v6 = (v6 + 1) & v9;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

uint64_t sub_24106310C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2411605E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_241068330();
  int v47 = a2;
  uint64_t v10 = sub_241161710();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_39;
  }
  uint64_t v49 = v8;
  uint64_t v50 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  id v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  id v41 = v2;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v18++, 1)) {
      goto LABEL_41;
    }
    if (v18 >= v42) {
      break;
    }
    uint64_t v24 = v43;
    unint64_t v25 = v43[v18];
    if (!v25)
    {
      int64_t v26 = v18 + 1;
      if (v18 + 1 >= v42)
      {
LABEL_32:
        swift_release();
        uint64_t v3 = v41;
        if ((v47 & 1) == 0) {
          goto LABEL_39;
        }
        goto LABEL_35;
      }
      unint64_t v25 = v43[v26];
      if (!v25)
      {
        while (1)
        {
          int64_t v18 = v26 + 1;
          if (__OFADD__(v26, 1)) {
            break;
          }
          if (v18 >= v42) {
            goto LABEL_32;
          }
          unint64_t v25 = v43[v18];
          ++v26;
          if (v25) {
            goto LABEL_19;
          }
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v18;
    }
LABEL_19:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_20:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      uint64_t v29 = *(void *)(v9 + 56) + 32 * v22;
      long long v51 = *(_OWORD *)v29;
      char v30 = *(unsigned char *)(v29 + 16);
      uint64_t v31 = *(void *)(v29 + 24);
    }
    else
    {
      (*v44)(v49, v28, v50);
      uint64_t v32 = *(void *)(v9 + 56) + 32 * v22;
      long long v51 = *(_OWORD *)v32;
      char v30 = *(unsigned char *)(v32 + 16);
      uint64_t v31 = *(void *)(v32 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24106670C(&qword_268CF0A30, MEMORY[0x263F090E8]);
    uint64_t result = sub_241160650();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    uint64_t v20 = *(void *)(v11 + 56) + 32 * v19;
    *(_OWORD *)uint64_t v20 = v51;
    *(unsigned char *)(v20 + 16) = v30;
    *(void *)(v20 + 24) = v31;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  uint64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_35:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_39:
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_241063568(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_2411605E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_2410683CC(0, &qword_268CF0AC8, &qword_26B006F08, type metadata accessor for MedicationDaySummaryViewModelChange);
  int v46 = a2;
  uint64_t v10 = sub_241161710();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_39;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v14 = *(void *)(v9 + 64);
  int64_t v42 = (void *)(v9 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  id v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v20++, 1)) {
      goto LABEL_41;
    }
    if (v20 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v20];
    if (!v26)
    {
      int64_t v27 = v20 + 1;
      if (v20 + 1 >= v41)
      {
LABEL_32:
        swift_release();
        uint64_t v3 = v40;
        if ((v46 & 1) == 0) {
          goto LABEL_39;
        }
        goto LABEL_35;
      }
      unint64_t v26 = v42[v27];
      if (!v26)
      {
        while (1)
        {
          int64_t v20 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            break;
          }
          if (v20 >= v41) {
            goto LABEL_32;
          }
          unint64_t v26 = v42[v20];
          ++v27;
          if (v26) {
            goto LABEL_19;
          }
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v20;
    }
LABEL_19:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_20:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_24106670C(&qword_268CF0A30, MEMORY[0x263F090E8]);
    uint64_t result = sub_241160650();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_35:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_39:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_241063994(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_241067B58();
  uint64_t result = sub_241161710();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = 8 * v19;
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + v27);
      unint64_t v29 = *(void **)(*(void *)(v5 + 56) + v27);
      if ((a2 & 1) == 0) {
        id v30 = v29;
      }
      sub_241161950();
      sub_241161960();
      uint64_t result = sub_2411619A0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v7 + 48) + v17) = v28;
      *(void *)(*(void *)(v7 + 56) + v17) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_241063C64(uint64_t a1, int a2)
{
  return sub_241063CB4(a1, a2, &qword_268CF0AD8, &qword_26B006F18, MEMORY[0x263F44C90]);
}

uint64_t sub_241063C8C(uint64_t a1, int a2)
{
  return sub_241063CB4(a1, a2, &qword_268CF0AD0, &qword_26B006F10, MEMORY[0x263F44C70]);
}

uint64_t sub_241063CB4(uint64_t a1, int a2, unint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v9 = v5;
  uint64_t v11 = sub_2411605E0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v5;
  sub_2410683CC(0, a3, a4, a5);
  int v52 = a2;
  uint64_t v16 = sub_241161710();
  uint64_t v17 = v15;
  uint64_t v18 = v16;
  if (!*(void *)(v15 + 16)) {
    goto LABEL_41;
  }
  uint64_t v19 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v20 = *(void *)(v15 + 64);
  uint64_t v48 = (void *)(v15 + 64);
  if (v19 < 64) {
    uint64_t v21 = ~(-1 << v19);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v20;
  int v46 = v9;
  int64_t v47 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v49 = (void (**)(char *, unint64_t, uint64_t))(v12 + 16);
  uint64_t v51 = v12;
  char v23 = (void (**)(char *, unint64_t, uint64_t))(v12 + 32);
  uint64_t v24 = v16 + 64;
  uint64_t result = swift_retain();
  int64_t v26 = 0;
  for (i = v17; ; uint64_t v17 = i)
  {
    if (v22)
    {
      unint64_t v28 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v29 = v28 | (v26 << 6);
      goto LABEL_22;
    }
    int64_t v30 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v30 >= v47) {
      break;
    }
    uint64_t v31 = v48;
    unint64_t v32 = v48[v30];
    ++v26;
    if (!v32)
    {
      int64_t v26 = v30 + 1;
      if (v30 + 1 >= v47) {
        goto LABEL_34;
      }
      unint64_t v32 = v48[v26];
      if (!v32)
      {
        int64_t v33 = v30 + 2;
        if (v33 >= v47)
        {
LABEL_34:
          swift_release();
          uint64_t v9 = v46;
          if ((v52 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v32 = v48[v33];
        if (!v32)
        {
          while (1)
          {
            int64_t v26 = v33 + 1;
            if (__OFADD__(v33, 1)) {
              goto LABEL_43;
            }
            if (v26 >= v47) {
              goto LABEL_34;
            }
            unint64_t v32 = v48[v26];
            ++v33;
            if (v32) {
              goto LABEL_21;
            }
          }
        }
        int64_t v26 = v33;
      }
    }
LABEL_21:
    unint64_t v22 = (v32 - 1) & v32;
    unint64_t v29 = __clz(__rbit64(v32)) + (v26 << 6);
LABEL_22:
    uint64_t v34 = *(void *)(v51 + 72);
    unint64_t v35 = *(void *)(v17 + 48) + v34 * v29;
    if (v52)
    {
      (*v23)(v14, v35, v11);
      uint64_t v36 = *(void *)(*(void *)(v17 + 56) + 8 * v29);
    }
    else
    {
      (*v49)(v14, v35, v11);
      uint64_t v36 = *(void *)(*(void *)(v17 + 56) + 8 * v29);
      swift_bridgeObjectRetain();
    }
    sub_24106670C(&qword_268CF0A30, MEMORY[0x263F090E8]);
    uint64_t result = sub_241160650();
    uint64_t v37 = -1 << *(unsigned char *)(v18 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v24 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v27 = __clz(__rbit64((-1 << v38) & ~*(void *)(v24 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v24 + 8 * v39);
      }
      while (v43 == -1);
      unint64_t v27 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)(v24 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v23)(*(void *)(v18 + 48) + v34 * v27, v14, v11);
    *(void *)(*(void *)(v18 + 56) + 8 * v27) = v36;
    ++*(void *)(v18 + 16);
  }
  swift_release();
  uint64_t v9 = v46;
  uint64_t v31 = v48;
  if ((v52 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v44 = 1 << *(unsigned char *)(v17 + 32);
  if (v44 >= 64) {
    bzero(v31, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v31 = -1 << v44;
  }
  *(void *)(v17 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v9 = v18;
  return result;
}

uint64_t sub_2410640F0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_241068530();
  char v38 = a2;
  uint64_t v6 = sub_241161710();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_241161950();
    sub_241160830();
    uint64_t result = sub_2411619A0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_2410643FC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_24115CE00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_241068274();
  int v46 = a2;
  uint64_t v10 = sub_241161710();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  BOOL v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  char v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_24106670C(&qword_26B006950, MEMORY[0x263F07A30]);
    uint64_t result = sub_241160650();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_24106481C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_241067FB0();
  uint64_t v6 = sub_241161710();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v16 = v15 | (v13 << 6);
      }
      else
      {
        int64_t v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v30) {
          goto LABEL_35;
        }
        unint64_t v18 = v31[v17];
        ++v13;
        if (!v18)
        {
          int64_t v13 = v17 + 1;
          if (v17 + 1 >= v30) {
            goto LABEL_35;
          }
          unint64_t v18 = v31[v13];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v30)
            {
LABEL_35:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 >= 64) {
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v31 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_42;
                }
                if (v13 >= v30) {
                  goto LABEL_35;
                }
                unint64_t v18 = v31[v13];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v19;
          }
        }
LABEL_21:
        unint64_t v10 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      long long v32 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 16 * v16 + 8);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_241161950();
      sub_241161970();
      if (v21)
      {
        swift_bridgeObjectRetain();
        sub_241160830();
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_2411619A0();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v32;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v20;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_241064B3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = (void **)v6;
  uint64_t v32 = a4;
  int v31 = a3;
  uint64_t v30 = a2;
  uint64_t v11 = sub_2411605E0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = (void *)*v6;
  unint64_t v17 = sub_241062644(a5);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 < v20 || (a6 & 1) == 0)
  {
    if (v22 >= v20 && (a6 & 1) == 0)
    {
      sub_241065498();
      goto LABEL_7;
    }
    sub_24106310C(v20, a6 & 1);
    unint64_t v27 = sub_241062644(a5);
    if ((v21 & 1) == (v28 & 1))
    {
      unint64_t v17 = v27;
      unint64_t v23 = *v7;
      if (v21) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a5, v11);
      return sub_24106524C(v17, (uint64_t)v14, a1, v30, v31, v32, v23);
    }
LABEL_15:
    uint64_t result = sub_2411618E0();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v23 = *v7;
  if ((v21 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v24 = v23[7] + 32 * v17;
  uint64_t v25 = v30;
  *(void *)uint64_t v24 = a1;
  *(void *)(v24 + 8) = v25;
  *(unsigned char *)(v24 + 16) = v31;
  *(void *)(v24 + 24) = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_241064D50(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_241062834(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_241065A38();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v20 = 8 * v10;
    *(void *)(v16[6] + v20) = a2;
    *(void *)(v16[7] + v20) = a1;
    uint64_t v21 = v16[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      void v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_241063994(v13, a3 & 1);
  unint64_t v18 = sub_241062834(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for HKTimeScope(0);
  sub_2411618E0();
  __break(1u);
}

uint64_t sub_241064E8C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_241064EDC(a1, a2, a3, &qword_268CF0AD8, &qword_26B006F18, MEMORY[0x263F44C90]);
}

uint64_t sub_241064EB4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_241064EDC(a1, a2, a3, &qword_268CF0AD0, &qword_26B006F10, MEMORY[0x263F44C70]);
}

uint64_t sub_241064EDC(uint64_t a1, uint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v8 = (void **)v6;
  uint64_t v31 = a1;
  uint64_t v11 = sub_2411605E0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)*v6;
  unint64_t v17 = sub_241062644(a2);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 >= v20 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = *v8;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = v23[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v24 + 8 * v17) = v31;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a3 & 1) == 0)
  {
    sub_241065EE4(a4, v29, v30);
    goto LABEL_7;
  }
  sub_241063CB4(v20, a3 & 1, a4, v29, v30);
  unint64_t v26 = sub_241062644(a2);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_14:
    uint64_t result = sub_2411618E0();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  uint64_t v23 = *v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  return sub_241065328(v17, (uint64_t)v14, v31, v23);
}

void sub_2410650A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24115CE00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_241062718(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24106633C();
    goto LABEL_7;
  }
  sub_2410643FC(v17, a3 & 1);
  unint64_t v22 = sub_241062718(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_2411618E0();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_2410653E0(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_24106524C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void *a7)
{
  a7[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v14 = a7[6];
  uint64_t v15 = sub_2411605E0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1, a2, v15);
  uint64_t v17 = a7[7] + 32 * a1;
  *(void *)uint64_t v17 = a3;
  *(void *)(v17 + 8) = a4;
  *(unsigned char *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  uint64_t v18 = a7[2];
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    a7[2] = v20;
  }
  return result;
}

uint64_t sub_241065328(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_2411605E0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_2410653E0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_24115CE00();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_241065498()
{
  uint64_t v1 = v0;
  uint64_t v39 = sub_2411605E0();
  uint64_t v2 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v38 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241068330();
  uint64_t v4 = *v0;
  uint64_t v5 = sub_241161700();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v6;
    return result;
  }
  unint64_t v33 = v1;
  uint64_t result = (void *)(v5 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  }
  uint64_t v34 = v4 + 64;
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(v4 + 16);
  uint64_t v40 = v4;
  uint64_t v41 = v6;
  *(void *)(v6 + 16) = v11;
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  uint64_t v37 = v2 + 16;
  int64_t v35 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v36 = v2 + 32;
  uint64_t v15 = v39;
  uint64_t v16 = v6;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v10 << 6);
      uint64_t v19 = v40;
      goto LABEL_12;
    }
    BOOL v29 = __OFADD__(v10++, 1);
    uint64_t v19 = v40;
    if (v29) {
      goto LABEL_30;
    }
    if (v10 >= v35)
    {
LABEL_27:
      uint64_t result = (void *)swift_release();
      uint64_t v1 = v33;
      uint64_t v6 = v41;
      goto LABEL_28;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v10);
    if (!v30) {
      break;
    }
LABEL_24:
    unint64_t v14 = (v30 - 1) & v30;
    unint64_t v18 = __clz(__rbit64(v30)) + (v10 << 6);
LABEL_12:
    unint64_t v20 = *(void *)(v2 + 72) * v18;
    uint64_t v21 = v38;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v38, *(void *)(v19 + 48) + v20, v15);
    uint64_t v22 = 32 * v18;
    uint64_t v23 = *(void *)(v19 + 56) + 32 * v18;
    char v24 = *(unsigned char *)(v23 + 16);
    uint64_t v25 = *(void *)(v23 + 24);
    unint64_t v26 = *(void *)(v16 + 48) + v20;
    char v27 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 32);
    long long v42 = *(_OWORD *)v23;
    v27(v26, v21, v15);
    uint64_t v28 = *(void *)(v16 + 56) + v22;
    *(_OWORD *)uint64_t v28 = v42;
    *(unsigned char *)(v28 + 16) = v24;
    *(void *)(v28 + 24) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v10 + 1;
  if (v10 + 1 >= v35) {
    goto LABEL_27;
  }
  unint64_t v30 = *(void *)(v34 + 8 * v31);
  if (v30)
  {
    ++v10;
    goto LABEL_24;
  }
  uint64_t v6 = v41;
  while (1)
  {
    int64_t v10 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v10 >= v35)
    {
      uint64_t result = (void *)swift_release();
      uint64_t v1 = v33;
      goto LABEL_28;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v10);
    ++v31;
    if (v30) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void *sub_241065784()
{
  uint64_t v1 = v0;
  uint64_t v28 = sub_2411605E0();
  uint64_t v2 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410683CC(0, &qword_268CF0AC8, &qword_26B006F08, type metadata accessor for MedicationDaySummaryViewModelChange);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_241161700();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_23:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v23 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v14 = v28;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_25;
    }
    if (v10 >= v25)
    {
LABEL_21:
      uint64_t result = (void *)swift_release();
      uint64_t v1 = v23;
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v10);
    if (!v21) {
      break;
    }
LABEL_20:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v17, v14);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v17, v4, v14);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v10 + 1;
  if (v10 + 1 >= v25) {
    goto LABEL_21;
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    ++v10;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_21;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

id sub_241065A38()
{
  uint64_t v1 = v0;
  sub_241067B58();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241161700();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_241065BD8()
{
  uint64_t v36 = sub_24115D320();
  uint64_t v1 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24101E15C();
  int64_t v31 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_241161700();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v37 = v5;
  if (!v6)
  {
    id result = (void *)swift_release();
    uint64_t v29 = v37;
    uint64_t v28 = v31;
LABEL_28:
    *uint64_t v28 = v29;
    return result;
  }
  uint64_t v7 = v5;
  id result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v37;
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  uint64_t v32 = v4 + 64;
  int64_t v33 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v34 = v1 + 32;
  uint64_t v35 = v1 + 16;
  uint64_t v15 = v36;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      int64_t v11 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v11);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v26 - 1) & v26;
    unint64_t v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v22, v15);
    uint64_t v23 = v37;
    uint64_t v24 = (void *)(*(void *)(v37 + 48) + v18);
    *uint64_t v24 = v20;
    v24[1] = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v23 + 56) + v22, v3, v15);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v28 = v31;
    uint64_t v29 = v37;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_241065E94()
{
  return sub_241065EE4(&qword_268CF0AD8, &qword_26B006F18, MEMORY[0x263F44C90]);
}

void *sub_241065EBC()
{
  return sub_241065EE4(&qword_268CF0AD0, &qword_26B006F10, MEMORY[0x263F44C70]);
}

void *sub_241065EE4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v7 = sub_2411605E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410683CC(0, a1, a2, a3);
  uint64_t v30 = v3;
  uint64_t v11 = *v3;
  uint64_t v12 = sub_241161700();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v30 = v13;
    return result;
  }
  id result = (void *)(v12 + 64);
  unint64_t v15 = (unint64_t)((1 << *(unsigned char *)(v13 + 32)) + 63) >> 6;
  if (v13 != v11 || (unint64_t)result >= v11 + 64 + 8 * v15) {
    id result = memmove(result, (const void *)(v11 + 64), 8 * v15);
  }
  int64_t v17 = 0;
  *(void *)(v13 + 16) = *(void *)(v11 + 16);
  uint64_t v18 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v11 + 64);
  uint64_t v31 = v11 + 64;
  int64_t v32 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v33 = v8 + 32;
  uint64_t v34 = v8 + 16;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v22 = v21 | (v17 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v32) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v26);
    ++v17;
    if (!v27)
    {
      int64_t v17 = v26 + 1;
      if (v26 + 1 >= v32) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v31 + 8 * v17);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_12:
    unint64_t v23 = *(void *)(v8 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, *(void *)(v11 + 48) + v23, v7);
    uint64_t v24 = 8 * v22;
    uint64_t v25 = *(void *)(*(void *)(v11 + 56) + 8 * v22);
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(void *)(v13 + 48) + v23, v10, v7);
    *(void *)(*(void *)(v13 + 56) + v24) = v25;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v32) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v31 + 8 * v28);
  if (v27)
  {
    int64_t v17 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v17 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v17 >= v32) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v17);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_24106618C()
{
  uint64_t v1 = v0;
  sub_241068530();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_241161700();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_24106633C()
{
  uint64_t v1 = sub_24115CE00();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241068274();
  int64_t v24 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_241161700();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *int64_t v24 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v28 = v2 + 16;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v17, v1);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void **)(*(void *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v17, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    id result = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2410665CC(uint64_t a1, uint64_t a2)
{
  if (sub_2410B603C())
  {
    uint64_t v4 = *(int *)(type metadata accessor for SharedMedicationsChartItem() + 20);
    uint64_t v5 = *(void **)(a1 + v4);
    uint64_t v6 = *(void **)(a2 + v4);
    if (v5)
    {
      if (v6)
      {
        sub_241024708(0, &qword_268CF0B08);
        id v7 = v6;
        id v8 = v5;
        char v9 = sub_2411612E0();

        if (v9) {
          return 1;
        }
      }
    }
    else if (!v6)
    {
      return 1;
    }
  }
  return 0;
}

void sub_241066670()
{
  if (!qword_268CF0A28)
  {
    sub_241024708(255, &qword_26B007380);
    sub_241024708(255, &qword_26B005E10);
    sub_241024FC4();
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0A28);
    }
  }
}

uint64_t sub_24106670C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_241066754(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  sub_241067D9C();
  uint64_t v3 = (void *)sub_241161720();
  uint64_t v4 = *(void *)(a1 + 32);
  long long v16 = *(_OWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  unint64_t result = sub_241062834(v4);
  long long v7 = v16;
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = a1 + 64;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v10 = v3[7] + 24 * result;
    *(_OWORD *)uint64_t v10 = v7;
    *(void *)(v10 + 16) = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 32;
    uint64_t v4 = *(void *)v9;
    long long v17 = *(_OWORD *)(v9 + 8);
    uint64_t v5 = *(void *)(v9 + 24);
    swift_unknownObjectRetain();
    unint64_t result = sub_241062834(v4);
    uint64_t v9 = v14;
    long long v7 = v17;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

id sub_24106687C(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241069158(0, &qword_26B007210, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v109 - v4;
  uint64_t v6 = sub_24115CB10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v125 = v6;
  uint64_t v126 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v121 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int v123 = (char *)&v109 - v10;
  sub_241069158(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, v2);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v110 = (uint64_t)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  char v15 = (char *)&v109 - v14;
  sub_2410677FC();
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v111 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v117 = (char *)&v109 - v19;
  sub_241067880(0, &qword_26B004060, &qword_26B005DE8, 0x263F46468, MEMORY[0x263F08F88]);
  uint64_t v120 = v20;
  uint64_t v119 = (void (**)(void, void, void, void))*((void *)v20 - 1);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v109 = (char *)&v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v115 = (char *)&v109 - v23;
  uint64_t v24 = type metadata accessor for SharedMedicationsFeedItemData(0);
  MEMORY[0x270FA5388](v24);
  int64_t v26 = (char *)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_24115E9F0();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241069158(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], v2);
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v33 = (char *)&v109 - v32;
  id v122 = a1;
  id v34 = objc_msgSend(a1, sel_CHRRoomApplicationItems);
  id v35 = sub_241024DF4();
  if (v35)
  {
    uint64_t v36 = v35;
    id v113 = v34;
    unint64_t v114 = v5;
    uint64_t v37 = sub_24115CB90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v33, 1, 1, v37);
    sub_24115E9E0();
    sub_24115EF20();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    sub_241025134((uint64_t)v33, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
    id v38 = objc_allocWithZone((Class)sub_24115ECA0());
    id v39 = v36;
    id v40 = objc_msgSend(v38, sel_init);
    id v41 = objc_allocWithZone(MEMORY[0x263F467D0]);
    long long v42 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    uint64_t v43 = (void *)sub_2411606F0();
    id v112 = objc_msgSend(v41, sel_initWithGraphSeries_displayName_unitName_valueFormatter_dataTypeCode_, v39, v42, v43, v40, 273);

    id v124 = v39;
    id v44 = v118;
    sub_241067AF0((uint64_t)v118, (uint64_t)v26, type metadata accessor for SharedMedicationsFeedItemData);
    uint64_t v45 = (objc_class *)type metadata accessor for SharedMedicationsChartDataSouce();
    int v46 = (char *)objc_allocWithZone(v45);
    *(void *)&v46[OBJC_IVAR____TtC26MedicationsHealthAppPlugin31SharedMedicationsChartDataSouce_dataBlockMap] = MEMORY[0x263F8EE80];
    uint64_t v47 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin31SharedMedicationsChartDataSouce_decoder;
    sub_24115C750();
    swift_allocObject();
    uint64_t v48 = v46;
    *(void *)&v46[v47] = sub_24115C740();
    sub_241067AF0((uint64_t)v26, (uint64_t)&v48[OBJC_IVAR____TtC26MedicationsHealthAppPlugin31SharedMedicationsChartDataSouce_medication], type metadata accessor for SharedMedicationsFeedItemData);

    v129.receiver = v48;
    v129.super_class = v45;
    uint64_t v49 = (char *)objc_msgSendSuper2(&v129, sel_init);
    sub_2410678E8((uint64_t)v26, type metadata accessor for SharedMedicationsFeedItemData);
    uint64_t v50 = (uint64_t)v44 + *(int *)(v24 + 124);
    sub_241067948(v50, (uint64_t)v15);
    uint64_t v51 = type metadata accessor for SharedMedicationsChartSeries(0);
    int v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48);
    int v53 = v52(v15, 1, v51);
    uint64_t v116 = v49;
    if (v53 == 1)
    {
      sub_241025134((uint64_t)v15, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
      uint64_t v54 = (uint64_t)v117;
      ((void (**)(char *, uint64_t, uint64_t, void (*)(char *, uint64_t)))v119)[7](v117, 1, 1, v120);
    }
    else
    {
      uint64_t v56 = v117;
      sub_241067AF0((uint64_t)v15, (uint64_t)v117, (uint64_t (*)(void))sub_2410677FC);
      uint64_t v57 = (uint64_t)v15;
      uint64_t v54 = (uint64_t)v56;
      sub_2410678E8(v57, type metadata accessor for SharedMedicationsChartSeries);
      uint64_t v58 = v119;
      uint64_t v59 = (unsigned int (*)(uint64_t, uint64_t, void (*)(void, void)))v119[6];
      uint64_t v60 = v120;
      if (v59((uint64_t)v56, 1, (void (*)(void, void))v120) != 1)
      {
        uint64_t v61 = (void (*)(char *, char *, void (*)(void, void)))v58[4];
        v61(v115, v56, (void (*)(void, void))v60);
        uint64_t v62 = v50;
        uint64_t v63 = v110;
        sub_241067948(v62, v110);
        if (v52((char *)v63, 1, v51) == 1)
        {
          sub_241025134(v63, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
          uint64_t v64 = (uint64_t)v111;
          ((void (**)(char *, uint64_t, uint64_t, void (*)(char *, uint64_t)))v58)[7](v111, 1, 1, v60);
          uint64_t v65 = v60;
        }
        else
        {
          uint64_t v66 = v63 + *(int *)(v51 + 20);
          uint64_t v64 = (uint64_t)v111;
          sub_241067AF0(v66, (uint64_t)v111, (uint64_t (*)(void))sub_2410677FC);
          sub_2410678E8(v63, type metadata accessor for SharedMedicationsChartSeries);
          uint64_t v65 = v60;
          if (v59(v64, 1, (void (*)(void, void))v60) != 1)
          {
            id v67 = v109;
            v61(v109, (char *)v64, (void (*)(void, void))v65);
            unint64_t v68 = v115;
            uint64_t v69 = (void *)sub_2411604D0();
            uint64_t v49 = v116;
            double v70 = (void *)sub_2410EBC10(v69);

            uint64_t v71 = (void *)sub_2411604D0();
            id v72 = (void *)sub_2410EBC10(v71);

            uint64_t v73 = &v49[OBJC_IVAR____TtC26MedicationsHealthAppPlugin31SharedMedicationsChartDataSouce_dataBlockMap];
            swift_beginAccess();
            id v74 = v70;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v127 = *(void *)v73;
            *(void *)uint64_t v73 = 0x8000000000000000;
            sub_241064D50((uint64_t)v74, 4, isUniquelyReferenced_nonNull_native);
            *(void *)uint64_t v73 = v127;
            swift_bridgeObjectRelease();
            id v76 = v72;
            char v77 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v127 = *(void *)v73;
            *(void *)uint64_t v73 = 0x8000000000000000;
            sub_241064D50((uint64_t)v76, 3, v77);
            *(void *)uint64_t v73 = v127;
            swift_bridgeObjectRelease();
            swift_endAccess();

            uint64_t v78 = (void (*)(char *, void))v58[1];
            v78(v67, v65);
            v78(v68, v65);
            goto LABEL_12;
          }
        }
        ((void (*)(char *, void))v58[1])(v115, v65);
        sub_2410678E8(v64, (uint64_t (*)(void))sub_2410677FC);
        uint64_t v49 = v116;
LABEL_12:
        objc_msgSend(v124, sel_setDataSource_, v49);
        uint64_t v79 = v123;
        sub_24115CB00();
        uint64_t v80 = v121;
        sub_24115CA60();
        uint64_t v81 = (void *)sub_24115CAA0();
        uint64_t v82 = v125;
        uint64_t v83 = v126 + 8;
        uint64_t v84 = *(void (**)(char *, uint64_t))(v126 + 8);
        v84(v80, v125);
        uint64_t v85 = v84;
        uint64_t v120 = v84;
        uint64_t v126 = v83;
        sub_24115CA50();
        uint64_t v86 = (void *)sub_24115CAA0();
        uint64_t v87 = v82;
        v85(v80, v82);
        long long v88 = v81;
        uint64_t v121 = v88;
        uint64_t v89 = (void *)sub_24115CAA0();
        long long v90 = self;
        id v91 = objc_msgSend(v90, sel_valueRangeWithMinValue_maxValue_, v88, v89);

        id v92 = v86;
        unint64_t v93 = (void *)sub_24115CAA0();
        uint64_t v119 = (void (**)(void, void, void, void))v92;
        id v94 = objc_msgSend(v90, sel_valueRangeWithMinValue_maxValue_, v92, v93);

        sub_2410679DC();
        uint64_t v95 = swift_allocObject();
        *(_OWORD *)(v95 + 16) = xmmword_24116B370;
        sub_24106807C(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
        uint64_t v96 = swift_allocObject();
        *(_OWORD *)(v96 + 16) = xmmword_24116B220;
        uint64_t v97 = v112;
        *(void *)(v96 + 32) = v112;
        v128[0] = v96;
        sub_2411609C0();
        *(void *)(v95 + 32) = v128[0];
        id v118 = v97;
        id v122 = objc_msgSend(v122, sel_healthStore);
        id v98 = v113;
        unint64_t v117 = (char *)objc_msgSend(v113, sel_unitController);
        uint64_t v115 = (char *)objc_msgSend(v98, sel_dateCache);
        id v112 = objc_msgSend(v98, sel_chartDataCacheController);
        uint64_t v111 = (char *)objc_msgSend(v98, sel_timeScopeController);
        id v99 = objc_msgSend(v98, sel_sampleDateRangeController);
        v128[3] = v87;
        sub_2410277C0(v128);
        sub_24115CB00();
        uint64_t v100 = sub_24115CCC0();
        uint64_t v101 = (uint64_t)v114;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v114, 1, 1, v100);
        sub_241069158(0, &qword_268CF0A50, (uint64_t (*)(uint64_t))sub_241067A60, MEMORY[0x263F8E0F8]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_24116B200;
        *(void *)(inited + 32) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 4);
        *(void *)(inited + 40) = v91;
        id v103 = objc_allocWithZone(NSNumber);
        id v104 = v91;
        *(void *)(inited + 48) = objc_msgSend(v103, sel_initWithInteger_, 3);
        *(void *)(inited + 56) = v94;
        id v105 = v94;
        unint64_t v106 = sub_24102502C(inited);
        id v107 = objc_allocWithZone(MEMORY[0x263F467F0]);
        id v55 = sub_2410622C4(v95, 0, 0, v122, v117, v115, v112, v111, v99, v128, v101, 0x2000, v106);

        v120(v79, v125);
        return v55;
      }
    }
    sub_2410678E8(v54, (uint64_t (*)(void))sub_2410677FC);
    goto LABEL_12;
  }

  return 0;
}

void sub_2410677FC()
{
  if (!qword_26B004068)
  {
    sub_241067880(255, &qword_26B004060, &qword_26B005DE8, 0x263F46468, MEMORY[0x263F08F88]);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B004068);
    }
  }
}

void sub_241067880(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241024708(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_2410678E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241067948(uint64_t a1, uint64_t a2)
{
  sub_241069158(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2410679DC()
{
  if (!qword_268CF0A38)
  {
    sub_241067880(255, &qword_268CF0A40, &qword_268CF0A48, 0x263F466F0, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0A38);
    }
  }
}

void sub_241067A60()
{
  if (!qword_268CF0A58)
  {
    sub_241024708(255, &qword_26B007380);
    sub_241024708(255, &qword_26B005E10);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF0A58);
    }
  }
}

uint64_t sub_241067AF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_241067B58()
{
  if (!qword_268CF0A60)
  {
    type metadata accessor for HKTimeScope(255);
    sub_241024708(255, &qword_268CF0A68);
    sub_24106670C(&qword_268CF0A70, type metadata accessor for HKTimeScope);
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0A60);
    }
  }
}

uint64_t sub_241067C14(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_241067C70(uint64_t a1)
{
  return a1;
}

void sub_241067CC4()
{
  if (!qword_26B007080)
  {
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B007080);
    }
  }
}

void sub_241067D30()
{
  if (!qword_26B007058)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B007058);
    }
  }
}

void sub_241067D9C()
{
  if (!qword_268CF0A78)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_241067E48();
    sub_24106670C(&qword_268CF0A88, type metadata accessor for UIUserInterfaceSizeClass);
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0A78);
    }
  }
}

unint64_t sub_241067E48()
{
  unint64_t result = qword_268CF0A80;
  if (!qword_268CF0A80)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF0A80);
  }
  return result;
}

void sub_241067EA4()
{
  if (!qword_268CF0A90)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    sub_24106670C(&qword_268CF05B8, type metadata accessor for OpenExternalURLOptionsKey);
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0A90);
    }
  }
}

uint64_t sub_241067F44(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_24106CA54(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_241067FB0()
{
  if (!qword_268CF0AA0)
  {
    sub_24106807C(255, &qword_26B005C88, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    sub_241067880(255, &qword_26B006F20, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F8D488]);
    sub_2410680C8();
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0AA0);
    }
  }
}

void sub_24106807C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_2410680C8()
{
  unint64_t result = qword_268CF0AA8;
  if (!qword_268CF0AA8)
  {
    sub_24106807C(255, &qword_26B005C88, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0AA8);
  }
  return result;
}

void sub_241068154()
{
  if (!qword_268CF0AB0)
  {
    type metadata accessor for OpenURLOptionsKey(255);
    sub_24106670C((unint64_t *)&unk_26B006FD0, type metadata accessor for OpenURLOptionsKey);
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0AB0);
    }
  }
}

void sub_2410681F4()
{
  if (!qword_26B006960)
  {
    sub_24115CE00();
    sub_241024708(255, (unint64_t *)&qword_26B006FF0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B006960);
    }
  }
}

void sub_241068274()
{
  if (!qword_26B007068)
  {
    sub_24115CE00();
    sub_241024708(255, (unint64_t *)&qword_26B006FF0);
    sub_24106670C(&qword_26B006950, MEMORY[0x263F07A30]);
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B007068);
    }
  }
}

void sub_241068330()
{
  if (!qword_268CF0AC0)
  {
    sub_2411605E0();
    sub_24106670C(&qword_268CF0A30, MEMORY[0x263F090E8]);
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0AC0);
    }
  }
}

void sub_2410683CC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_2411605E0();
    sub_241069158(255, a3, a4, MEMORY[0x263F8D488]);
    sub_24106670C(&qword_268CF0A30, MEMORY[0x263F090E8]);
    unint64_t v7 = sub_241161730();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_24106849C()
{
  if (!qword_26B007078)
  {
    sub_241067880(255, (unint64_t *)&qword_26B007350, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B007078);
    }
  }
}

void sub_241068530()
{
  if (!qword_26B007070)
  {
    sub_241024708(255, &qword_26B007348);
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B007070);
    }
  }
}

void *sub_2410685A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    uint64_t v10 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v10;
    uint64_t v11 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v11;
    uint64_t v12 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v12;
    uint64_t v13 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v13;
    uint64_t v14 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v14;
    uint64_t v15 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v15;
    uint64_t v16 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v16;
    uint64_t v17 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v17;
    uint64_t v18 = a2[26];
    *(void *)(a1 + 200) = a2[25];
    *(void *)(a1 + 208) = v18;
    uint64_t v19 = a2[28];
    *(void *)(a1 + 216) = a2[27];
    *(void *)(a1 + 224) = v19;
    *(void *)(a1 + 232) = a2[29];
    *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
    uint64_t v20 = a2[32];
    *(void *)(a1 + 248) = a2[31];
    *(void *)(a1 + 256) = v20;
    *(unsigned char *)(a1 + 264) = *((unsigned char *)a2 + 264);
    uint64_t v21 = a2[35];
    *(void *)(a1 + 272) = a2[34];
    *(void *)(a1 + 280) = v21;
    uint64_t v22 = a2[37];
    *(void *)(a1 + 288) = a2[36];
    *(void *)(a1 + 296) = v22;
    uint64_t v23 = a2[38];
    *(unsigned char *)(a1 + 312) = *((unsigned char *)a2 + 312);
    *(void *)(a1 + 304) = v23;
    uint64_t v24 = a2[40];
    *(unsigned char *)(a1 + 328) = *((unsigned char *)a2 + 328);
    *(void *)(a1 + 320) = v24;
    uint64_t v82 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
    uint64_t v25 = v82[27];
    uint64_t v79 = (char *)v4 + v25;
    uint64_t v78 = (char *)a2 + v25;
    sub_241067880(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0, 0x263F0A630, MEMORY[0x263F08F88]);
    uint64_t v27 = v26;
    uint64_t v28 = *(void *)(v26 - 8);
    char v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v77(v78, 1, v27))
    {
      sub_241068FCC();
      memcpy(v79, v78, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v79, v78, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v79, 0, 1, v27);
    }
    uint64_t v31 = v82;
    uint64_t v32 = v82[28];
    uint64_t v33 = (char *)v4 + v32;
    id v34 = (char *)a2 + v32;
    sub_241067880(0, &qword_26B004090, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F08F88]);
    uint64_t v36 = v35;
    uint64_t v37 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v35))
    {
      sub_241069050();
      memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v33, v34, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
    }
    uint64_t v39 = v82[29];
    id v40 = (char *)v4 + v39;
    id v41 = (char *)a2 + v39;
    sub_241067880(0, &qword_26B0040A8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F08F88]);
    uint64_t v43 = v42;
    uint64_t v44 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v41, 1, v42))
    {
      sub_2410690D4();
      memcpy(v40, v41, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v40, v41, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v40, 0, 1, v43);
    }
    *(void *)((char *)v4 + v82[30]) = *(uint64_t *)((char *)a2 + v82[30]);
    uint64_t v46 = v82[31];
    uint64_t v47 = (char *)v4 + v46;
    uint64_t v48 = (char *)a2 + v46;
    uint64_t v49 = type metadata accessor for SharedMedicationsChartSeries(0);
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    swift_bridgeObjectRetain();
    if (v51(v48, 1, v49))
    {
      sub_241069158(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
      memcpy(v47, v48, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      sub_241067880(0, &qword_26B004060, &qword_26B005DE8, 0x263F46468, MEMORY[0x263F08F88]);
      uint64_t v54 = v53;
      uint64_t v55 = *(void *)(v53 - 8);
      uint64_t v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
      if (v80(v48, 1, v53))
      {
        sub_2410677FC();
        memcpy(v47, v48, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v47, v48, v54);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v47, 0, 1, v54);
      }
      uint64_t v57 = *(int *)(v49 + 20);
      uint64_t v58 = &v47[v57];
      uint64_t v59 = &v48[v57];
      if (v80(v59, 1, v54))
      {
        sub_2410677FC();
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v58, v59, v54);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v58, 0, 1, v54);
      }
      uint64_t v31 = v82;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    *((unsigned char *)v4 + v31[32]) = *((unsigned char *)a2 + v31[32]);
    uint64_t v61 = v31[33];
    uint64_t v62 = (char *)v4 + v61;
    uint64_t v63 = (char *)a2 + v61;
    uint64_t v64 = sub_24115CB10();
    uint64_t v65 = *(void *)(v64 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
    {
      sub_241069158(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
    }
    uint64_t v67 = v31[34];
    unint64_t v68 = (char *)v4 + v67;
    uint64_t v69 = (char *)a2 + v67;
    uint64_t v70 = sub_24115D3B0();
    uint64_t v71 = *(void *)(v70 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
    {
      sub_241069158(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
      memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
    }
    uint64_t v73 = *(int *)(a3 + 20);
    id v74 = *(void **)((char *)a2 + v73);
    *(void *)((char *)v4 + v73) = v74;
    id v75 = v74;
  }
  return v4;
}

void sub_241068FCC()
{
  if (!qword_26B004080)
  {
    sub_241067880(255, &qword_26B004078, (unint64_t *)&unk_26B005DF0, 0x263F0A630, MEMORY[0x263F08F88]);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B004080);
    }
  }
}

void sub_241069050()
{
  if (!qword_26B004098)
  {
    sub_241067880(255, &qword_26B004090, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F08F88]);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B004098);
    }
  }
}

void sub_2410690D4()
{
  if (!qword_26B0040B0)
  {
    sub_241067880(255, &qword_26B0040A8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F08F88]);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0040B0);
    }
  }
}

void sub_241069158(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2410691BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v5 = a1 + v4[27];
  sub_241067880(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0, 0x263F0A630, MEMORY[0x263F08F88]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
  }
  uint64_t v9 = a1 + v4[28];
  sub_241067880(0, &qword_26B004090, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F08F88]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  uint64_t v13 = a1 + v4[29];
  sub_241067880(0, &qword_26B0040A8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F08F88]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = a1 + v4[31];
  uint64_t v18 = type metadata accessor for SharedMedicationsChartSeries(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {
    sub_241067880(0, &qword_26B004060, &qword_26B005DE8, 0x263F46468, MEMORY[0x263F08F88]);
    uint64_t v20 = v19;
    uint64_t v21 = *(void *)(v19 - 8);
    uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
    if (!v22(v17, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v17, v20);
    }
    uint64_t v23 = v17 + *(int *)(v18 + 20);
    if (!v22(v23, 1, v20)) {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
    }
  }
  uint64_t v24 = a1 + v4[33];
  uint64_t v25 = sub_24115CB10();
  uint64_t v26 = *(void *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  uint64_t v27 = a1 + v4[34];
  uint64_t v28 = sub_24115D3B0();
  uint64_t v29 = *(void *)(v28 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28)) {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  }
  uint64_t v30 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_241069704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  uint64_t v19 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v19;
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  uint64_t v20 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v20;
  uint64_t v21 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v21;
  uint64_t v22 = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = v22;
  uint64_t v23 = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = v23;
  uint64_t v80 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v24 = v80[27];
  char v77 = (void *)(a1 + v24);
  id v76 = (const void *)(a2 + v24);
  sub_241067880(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0, 0x263F0A630, MEMORY[0x263F08F88]);
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 - 8);
  id v75 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v75(v76, 1, v26))
  {
    sub_241068FCC();
    memcpy(v77, v76, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v77, v76, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v77, 0, 1, v26);
  }
  uint64_t v29 = v80;
  uint64_t v30 = v80[28];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (const void *)(a2 + v30);
  sub_241067880(0, &qword_26B004090, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F08F88]);
  uint64_t v34 = v33;
  uint64_t v35 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v33))
  {
    sub_241069050();
    memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 16))(v31, v32, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
  }
  uint64_t v37 = v80[29];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (const void *)(a2 + v37);
  sub_241067880(0, &qword_26B0040A8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F08F88]);
  uint64_t v41 = v40;
  uint64_t v42 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v39, 1, v40))
  {
    sub_2410690D4();
    memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v38, v39, v41);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v38, 0, 1, v41);
  }
  *(void *)(a1 + v80[30]) = *(void *)(a2 + v80[30]);
  uint64_t v44 = v80[31];
  uint64_t v45 = (char *)(a1 + v44);
  uint64_t v46 = (char *)(a2 + v44);
  uint64_t v47 = type metadata accessor for SharedMedicationsChartSeries(0);
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  swift_bridgeObjectRetain();
  if (v49(v46, 1, v47))
  {
    sub_241069158(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
    memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    sub_241067880(0, &qword_26B004060, &qword_26B005DE8, 0x263F46468, MEMORY[0x263F08F88]);
    uint64_t v52 = v51;
    uint64_t v53 = *(void *)(v51 - 8);
    uint64_t v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    if (v78(v46, 1, v51))
    {
      sub_2410677FC();
      memcpy(v45, v46, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v45, v46, v52);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v45, 0, 1, v52);
    }
    uint64_t v55 = *(int *)(v47 + 20);
    uint64_t v56 = &v45[v55];
    uint64_t v57 = &v46[v55];
    if (v78(v57, 1, v52))
    {
      sub_2410677FC();
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v56, v57, v52);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v56, 0, 1, v52);
    }
    uint64_t v29 = v80;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  *(unsigned char *)(a1 + v29[32]) = *(unsigned char *)(a2 + v29[32]);
  uint64_t v59 = v29[33];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (const void *)(a2 + v59);
  uint64_t v62 = sub_24115CB10();
  uint64_t v63 = *(void *)(v62 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    sub_241069158(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v63 + 16))(v60, v61, v62);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  uint64_t v65 = v29[34];
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (const void *)(a2 + v65);
  uint64_t v68 = sub_24115D3B0();
  uint64_t v69 = *(void *)(v68 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
  {
    sub_241069158(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v69 + 16))(v66, v67, v68);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  uint64_t v71 = *(int *)(a3 + 20);
  uint64_t v72 = *(void **)(a2 + v71);
  *(void *)(a1 + v71) = v72;
  id v73 = v72;
  return a1;
}

uint64_t sub_24106A0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = v5;
  uint64_t v6 = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = v6;
  uint64_t v7 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v8 = v7[27];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_241067880(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0, 0x263F0A630, MEMORY[0x263F08F88]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v9, 1, v11);
  int v16 = v14(v10, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v9, v10, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v9, v12);
LABEL_6:
    sub_241068FCC();
    memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v9, v10, v12);
LABEL_7:
  uint64_t v18 = v7[28];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  sub_241067880(0, &qword_26B004090, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F08F88]);
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v19, 1, v21);
  int v26 = v24(v20, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v19, v20, v22);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v19, v22);
LABEL_12:
    sub_241069050();
    memcpy(v19, v20, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v19, v20, v22);
LABEL_13:
  uint64_t v28 = v7[29];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  sub_241067880(0, &qword_26B0040A8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F08F88]);
  uint64_t v32 = v31;
  uint64_t v33 = *(void *)(v31 - 8);
  uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  int v35 = v34(v29, 1, v31);
  int v36 = v34(v30, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v29, v32);
LABEL_18:
    sub_2410690D4();
    memcpy(v29, v30, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v29, v30, v32);
LABEL_19:
  *(void *)(a1 + v7[30]) = *(void *)(a2 + v7[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = v7[31];
  uint64_t v39 = (char *)(a1 + v38);
  uint64_t v40 = (char *)(a2 + v38);
  uint64_t v41 = type metadata accessor for SharedMedicationsChartSeries(0);
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  int v44 = v43(v39, 1, v41);
  int v45 = v43(v40, 1, v41);
  if (!v44)
  {
    if (!v45)
    {
      sub_241067880(0, &qword_26B004060, &qword_26B005DE8, 0x263F46468, MEMORY[0x263F08F88]);
      uint64_t v52 = v51;
      uint64_t v90 = *(void *)(v51 - 8);
      uint64_t v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 48);
      int v54 = v53(v39, 1, v51);
      int v55 = v53(v40, 1, v52);
      if (v54)
      {
        if (v55)
        {
          sub_2410677FC();
          memcpy(v39, v40, *(void *)(*(void *)(v56 - 8) + 64));
          uint64_t v57 = v90;
        }
        else
        {
          uint64_t v57 = v90;
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v39, v40, v52);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v39, 0, 1, v52);
        }
      }
      else
      {
        uint64_t v57 = v90;
        if (v55)
        {
          (*(void (**)(char *, uint64_t))(v90 + 8))(v39, v52);
          sub_2410677FC();
          memcpy(v39, v40, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v90 + 24))(v39, v40, v52);
        }
      }
      uint64_t v85 = *(int *)(v41 + 20);
      v39 += v85;
      v40 += v85;
      int v86 = v53(v39, 1, v52);
      int v87 = v53(v40, 1, v52);
      if (v86)
      {
        if (!v87)
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v39, v40, v52);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v39, 0, 1, v52);
          goto LABEL_38;
        }
      }
      else
      {
        if (!v87)
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 24))(v39, v40, v52);
          goto LABEL_38;
        }
        (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v52);
      }
      sub_2410677FC();
LABEL_26:
      memcpy(v39, v40, *(void *)(*(void *)(v50 - 8) + 64));
      goto LABEL_38;
    }
    sub_2410678E8((uint64_t)v39, type metadata accessor for SharedMedicationsChartSeries);
LABEL_25:
    sub_241069158(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
    goto LABEL_26;
  }
  if (v45) {
    goto LABEL_25;
  }
  sub_241067880(0, &qword_26B004060, &qword_26B005DE8, 0x263F46468, MEMORY[0x263F08F88]);
  uint64_t v47 = v46;
  uint64_t v48 = *(void *)(v46 - 8);
  uint64_t v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  if (v89(v40, 1, v46))
  {
    sub_2410677FC();
    memcpy(v39, v40, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v39, v40, v47);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v39, 0, 1, v47);
  }
  uint64_t v58 = *(int *)(v41 + 20);
  __dst = &v39[v58];
  uint64_t v59 = &v40[v58];
  if (v89(v59, 1, v47))
  {
    sub_2410677FC();
    memcpy(__dst, v59, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(__dst, v59, v47);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v47);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_38:
  *(unsigned char *)(a1 + v7[32]) = *(unsigned char *)(a2 + v7[32]);
  uint64_t v61 = v7[33];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (void *)(a2 + v61);
  uint64_t v64 = sub_24115CB10();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v65 + 48);
  int v67 = v66(v62, 1, v64);
  int v68 = v66(v63, 1, v64);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v65 + 16))(v62, v63, v64);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  if (v68)
  {
    (*(void (**)(void *, uint64_t))(v65 + 8))(v62, v64);
LABEL_43:
    sub_241069158(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v62, v63, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_44;
  }
  (*(void (**)(void *, void *, uint64_t))(v65 + 24))(v62, v63, v64);
LABEL_44:
  uint64_t v70 = v7[34];
  uint64_t v71 = (void *)(a1 + v70);
  uint64_t v72 = (void *)(a2 + v70);
  uint64_t v73 = sub_24115D3B0();
  uint64_t v74 = *(void *)(v73 - 8);
  id v75 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v74 + 48);
  int v76 = v75(v71, 1, v73);
  int v77 = v75(v72, 1, v73);
  if (!v76)
  {
    if (!v77)
    {
      (*(void (**)(void *, void *, uint64_t))(v74 + 24))(v71, v72, v73);
      goto LABEL_50;
    }
    (*(void (**)(void *, uint64_t))(v74 + 8))(v71, v73);
    goto LABEL_49;
  }
  if (v77)
  {
LABEL_49:
    sub_241069158(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    memcpy(v71, v72, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_50;
  }
  (*(void (**)(void *, void *, uint64_t))(v74 + 16))(v71, v72, v73);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
LABEL_50:
  uint64_t v79 = *(int *)(a3 + 20);
  uint64_t v80 = *(void **)(a1 + v79);
  uint64_t v81 = *(void **)(a2 + v79);
  *(void *)(a1 + v79) = v81;
  id v82 = v81;

  return a1;
}

uint64_t sub_24106B000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  long long v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  long long v8 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v8;
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  uint64_t v9 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v10 = v9[27];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  sub_241067880(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0, 0x263F0A630, MEMORY[0x263F08F88]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
  {
    sub_241068FCC();
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v11, v12, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  }
  uint64_t v17 = v9[28];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  sub_241067880(0, &qword_26B004090, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F08F88]);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v20))
  {
    sub_241069050();
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
  }
  uint64_t v24 = v9[29];
  int v25 = (void *)(a1 + v24);
  int v26 = (const void *)(a2 + v24);
  sub_241067880(0, &qword_26B0040A8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F08F88]);
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_2410690D4();
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  *(void *)(a1 + v9[30]) = *(void *)(a2 + v9[30]);
  uint64_t v31 = v9[31];
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)(a2 + v31);
  uint64_t v34 = type metadata accessor for SharedMedicationsChartSeries(0);
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    sub_241069158(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    uint64_t v59 = a3;
    sub_241067880(0, &qword_26B004060, &qword_26B005DE8, 0x263F46468, MEMORY[0x263F08F88]);
    uint64_t v38 = v37;
    uint64_t v39 = *(void *)(v37 - 8);
    uint64_t v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    if (v58(v33, 1, v37))
    {
      sub_2410677FC();
      memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v32, v33, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v38);
    }
    uint64_t v41 = *(int *)(v34 + 20);
    __dst = &v32[v41];
    uint64_t v42 = &v33[v41];
    if (v58(v42, 1, v38))
    {
      sub_2410677FC();
      memcpy(__dst, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(__dst, v42, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
    }
    a3 = v59;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  *(unsigned char *)(a1 + v9[32]) = *(unsigned char *)(a2 + v9[32]);
  uint64_t v44 = v9[33];
  int v45 = (void *)(a1 + v44);
  uint64_t v46 = (const void *)(a2 + v44);
  uint64_t v47 = sub_24115CB10();
  uint64_t v48 = *(void *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    sub_241069158(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  uint64_t v50 = v9[34];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (const void *)(a2 + v50);
  uint64_t v53 = sub_24115D3B0();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    sub_241069158(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v54 + 32))(v51, v52, v53);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24106B8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v18;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  uint64_t v19 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  uint64_t v20 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v21;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  uint64_t v22 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v23 = v22[27];
  uint64_t v24 = (void *)(a1 + v23);
  int v25 = (void *)(a2 + v23);
  sub_241067880(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0, 0x263F0A630, MEMORY[0x263F08F88]);
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  uint64_t v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v24, 1, v26);
  int v31 = v29(v25, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v24, v25, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v24, v27);
LABEL_6:
    sub_241068FCC();
    memcpy(v24, v25, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v24, v25, v27);
LABEL_7:
  uint64_t v33 = v22[28];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  sub_241067880(0, &qword_26B004090, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F08F88]);
  uint64_t v37 = v36;
  uint64_t v38 = *(void *)(v36 - 8);
  uint64_t v39 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v38 + 48);
  int v40 = v39(v34, 1, v36);
  int v41 = v39(v35, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(void *, void *, uint64_t))(v38 + 32))(v34, v35, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v34, 0, 1, v37);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v41)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v34, v37);
LABEL_12:
    sub_241069050();
    memcpy(v34, v35, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v38 + 40))(v34, v35, v37);
LABEL_13:
  uint64_t v43 = v22[29];
  uint64_t v44 = (void *)(a1 + v43);
  int v45 = (void *)(a2 + v43);
  sub_241067880(0, &qword_26B0040A8, &qword_26B007358, 0x263F0A508, MEMORY[0x263F08F88]);
  uint64_t v47 = v46;
  uint64_t v48 = *(void *)(v46 - 8);
  uint64_t v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
  int v50 = v49(v44, 1, v46);
  int v51 = v49(v45, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 32))(v44, v45, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v44, 0, 1, v47);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v44, v47);
LABEL_18:
    sub_2410690D4();
    memcpy(v44, v45, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 40))(v44, v45, v47);
LABEL_19:
  *(void *)(a1 + v22[30]) = *(void *)(a2 + v22[30]);
  swift_bridgeObjectRelease();
  uint64_t v53 = v22[31];
  uint64_t v54 = (char *)(a1 + v53);
  uint64_t v55 = (char *)(a2 + v53);
  uint64_t v56 = type metadata accessor for SharedMedicationsChartSeries(0);
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  int v59 = v58(v54, 1, v56);
  int v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (!v60)
    {
      sub_241067880(0, &qword_26B004060, &qword_26B005DE8, 0x263F46468, MEMORY[0x263F08F88]);
      uint64_t v67 = v66;
      uint64_t v103 = *(void *)(v66 - 8);
      int v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 48);
      int v69 = v68(v54, 1, v66);
      int v70 = v68(v55, 1, v67);
      if (v69)
      {
        if (v70)
        {
          sub_2410677FC();
          memcpy(v54, v55, *(void *)(*(void *)(v71 - 8) + 64));
          uint64_t v72 = v103;
        }
        else
        {
          uint64_t v72 = v103;
          (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v54, v55, v67);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v54, 0, 1, v67);
        }
      }
      else
      {
        uint64_t v72 = v103;
        if (v70)
        {
          (*(void (**)(char *, uint64_t))(v103 + 8))(v54, v67);
          sub_2410677FC();
          memcpy(v54, v55, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v103 + 40))(v54, v55, v67);
        }
      }
      uint64_t v98 = *(int *)(v56 + 20);
      v54 += v98;
      v55 += v98;
      int v99 = v68(v54, 1, v67);
      int v100 = v68(v55, 1, v67);
      if (v99)
      {
        if (!v100)
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v54, v55, v67);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v54, 0, 1, v67);
          goto LABEL_38;
        }
      }
      else
      {
        if (!v100)
        {
          (*(void (**)(char *, char *, uint64_t))(v72 + 40))(v54, v55, v67);
          goto LABEL_38;
        }
        (*(void (**)(char *, uint64_t))(v72 + 8))(v54, v67);
      }
      sub_2410677FC();
LABEL_26:
      memcpy(v54, v55, *(void *)(*(void *)(v65 - 8) + 64));
      goto LABEL_38;
    }
    sub_2410678E8((uint64_t)v54, type metadata accessor for SharedMedicationsChartSeries);
LABEL_25:
    sub_241069158(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
    goto LABEL_26;
  }
  if (v60) {
    goto LABEL_25;
  }
  sub_241067880(0, &qword_26B004060, &qword_26B005DE8, 0x263F46468, MEMORY[0x263F08F88]);
  uint64_t v62 = v61;
  uint64_t v63 = *(void *)(v61 - 8);
  uint64_t v102 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
  if (v102(v55, 1, v61))
  {
    sub_2410677FC();
    memcpy(v54, v55, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v54, v55, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v54, 0, 1, v62);
  }
  uint64_t v73 = *(int *)(v56 + 20);
  __dst = &v54[v73];
  uint64_t v74 = &v55[v73];
  if (v102(v74, 1, v62))
  {
    sub_2410677FC();
    memcpy(__dst, v74, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(__dst, v74, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(__dst, 0, 1, v62);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
LABEL_38:
  *(unsigned char *)(a1 + v22[32]) = *(unsigned char *)(a2 + v22[32]);
  uint64_t v76 = v22[33];
  int v77 = (void *)(a1 + v76);
  uint64_t v78 = (void *)(a2 + v76);
  uint64_t v79 = sub_24115CB10();
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v81 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v80 + 48);
  int v82 = v81(v77, 1, v79);
  int v83 = v81(v78, 1, v79);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(void *, void *, uint64_t))(v80 + 32))(v77, v78, v79);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  if (v83)
  {
    (*(void (**)(void *, uint64_t))(v80 + 8))(v77, v79);
LABEL_43:
    sub_241069158(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v77, v78, *(void *)(*(void *)(v84 - 8) + 64));
    goto LABEL_44;
  }
  (*(void (**)(void *, void *, uint64_t))(v80 + 40))(v77, v78, v79);
LABEL_44:
  uint64_t v85 = v22[34];
  int v86 = (void *)(a1 + v85);
  int v87 = (void *)(a2 + v85);
  uint64_t v88 = sub_24115D3B0();
  uint64_t v89 = *(void *)(v88 - 8);
  uint64_t v90 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v89 + 48);
  int v91 = v90(v86, 1, v88);
  int v92 = v90(v87, 1, v88);
  if (!v91)
  {
    if (!v92)
    {
      (*(void (**)(void *, void *, uint64_t))(v89 + 40))(v86, v87, v88);
      goto LABEL_50;
    }
    (*(void (**)(void *, uint64_t))(v89 + 8))(v86, v88);
    goto LABEL_49;
  }
  if (v92)
  {
LABEL_49:
    sub_241069158(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    memcpy(v86, v87, *(void *)(*(void *)(v93 - 8) + 64));
    goto LABEL_50;
  }
  (*(void (**)(void *, void *, uint64_t))(v89 + 32))(v86, v87, v88);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
LABEL_50:
  uint64_t v94 = *(int *)(a3 + 20);
  uint64_t v95 = *(void **)(a1 + v94);
  *(void *)(a1 + v94) = *(void *)(a2 + v94);

  return a1;
}

uint64_t sub_24106C6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24106C6F0);
}

uint64_t sub_24106C6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_24106C7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24106C7D0);
}

uint64_t sub_24106C7D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for SharedMedicationsChartItem()
{
  uint64_t result = qword_268CF0AE0;
  if (!qword_268CF0AE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24106C8D8()
{
  uint64_t result = type metadata accessor for SharedMedicationsFeedItemData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24106C96C()
{
  return sub_24106670C(&qword_268CF0AF0, (void (*)(uint64_t))type metadata accessor for SharedMedicationsChartItem);
}

void sub_24106C9B4()
{
  if (!qword_268CF0AF8)
  {
    type metadata accessor for Key(255);
    sub_24106670C(&qword_268CF05E8, type metadata accessor for Key);
    unint64_t v0 = sub_241161730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0AF8);
    }
  }
}

void sub_24106CA54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t type metadata accessor for CHRAddAccountDataSource()
{
  uint64_t result = qword_26B006B60;
  if (!qword_26B006B60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24106CB08()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24106CB48(void *a1)
{
  sub_24101AF58(0, (unint64_t *)&unk_26B007220, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v32 - v3;
  sub_24115D4C0();
  uint64_t v5 = (void *)MEMORY[0x2456132E0]();
  uint64_t v6 = (void *)sub_24115D490();
  sub_24101AF58(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v7 = sub_24115CEB0();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24116B370;
  (*(void (**)(unint64_t, void, uint64_t))(v8 + 104))(v10 + v9, *MEMORY[0x263F45580], v7);
  uint64_t v11 = sub_24115D210();
  uint64_t v13 = v12;
  uint64_t v14 = sub_24115C810();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_24106D4D0(0, &qword_26B007098);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24116B200;
  *(void *)(v15 + 32) = sub_24115CF20();
  *(void *)(v15 + 40) = 0;
  uint64_t v16 = (void *)MEMORY[0x2456132A0](v10, v11, v13, v4, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24106D444((uint64_t)v4);
  sub_24115D230();
  uint64_t v17 = (void *)sub_24115D480();
  swift_bridgeObjectRelease();
  sub_24106D4D0(0, (unint64_t *)&qword_26B0073A0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_24116B7A0;
  *(void *)(v18 + 32) = v6;
  *(void *)(v18 + 40) = v16;
  *(void *)(v18 + 48) = v17;
  uint64_t v33 = v18;
  sub_2411609C0();
  sub_241024708(0, &qword_26B007318);
  id v19 = v6;
  id v20 = v16;
  id v21 = v17;
  uint64_t v22 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v22);

  objc_msgSend(v5, sel_setPredicate_, v23);
  id v24 = objc_allocWithZone(MEMORY[0x263F08B30]);
  int v25 = (void *)sub_2411606F0();
  id v26 = objc_msgSend(v24, sel_initWithKey_ascending_, v25, 0);

  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_24116B220;
  *(void *)(v27 + 32) = v26;
  uint64_t v33 = v27;
  sub_2411609C0();
  sub_241024708(0, &qword_26B007328);
  id v28 = v26;
  uint64_t v29 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setSortDescriptors_, v29);

  objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF270]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v5, a1, 0, 0);
  uint64_t v30 = sub_24115E540();

  return v30;
}

void sub_24106CFFC()
{
}

id sub_24106D02C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CHRAddAccountDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24106D064()
{
  return type metadata accessor for CHRAddAccountDataSource();
}

void sub_24106D06C()
{
}

unint64_t sub_24106D084@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24115F9D0();
  MEMORY[0x270FA5388](v2 - 8);
  sub_24115D200();
  sub_24115F970();
  uint64_t v3 = sub_24115D8A0();
  swift_allocObject();
  uint64_t v4 = sub_24115D890();
  a1[3] = v3;
  unint64_t result = sub_24106D3EC();
  a1[4] = result;
  *a1 = v4;
  return result;
}

void sub_24106D174()
{
  uint64_t v0 = sub_24115DC40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24115DAE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_features);

  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  unsigned int v11 = objc_msgSend(v10, sel_stanley);

  if (v11)
  {
    sub_24115DAD0();
    uint64_t v12 = v16[1];
    uint64_t v13 = sub_24115DAC0();
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      uint64_t v14 = (void *)v13;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      id v15 = objc_msgSend(self, sel_estimatedDimension_, 100.0);
      sub_241161080();
    }
  }
  else
  {
    sub_24115DC20();
    sub_24115DC10();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

unint64_t sub_24106D3EC()
{
  unint64_t result = qword_26B0069B8;
  if (!qword_26B0069B8)
  {
    sub_24115D8A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0069B8);
  }
  return result;
}

uint64_t sub_24106D444(uint64_t a1)
{
  sub_24101AF58(0, (unint64_t *)&unk_26B007220, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24106D4D0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_241161860();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

ValueMetadata *type metadata accessor for MedicationsArticleDataProvider()
{
  return &type metadata for MedicationsArticleDataProvider;
}

unint64_t sub_24106D52C()
{
  return 0xD000000000000024;
}

uint64_t sub_24106D548()
{
  type metadata accessor for MedicationsHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_24115C960();

  return v2;
}

uint64_t sub_24106D60C()
{
  type metadata accessor for MedicationsHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_24115C960();

  return v2;
}

void sub_24106D6DC()
{
  sub_24106E634();
  uint64_t v0 = (void *)sub_2411612B0();
  id v1 = (void *)sub_2411606F0();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_, v1, v0);

  if (!v2) {
    __break(1u);
  }
}

uint64_t sub_24106D774()
{
  sub_24104A2D8();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24116B220;
  *(void *)(inited + 32) = objc_msgSend(self, sel_medicationDoseEventType);
  sub_2411609C0();
  uint64_t v1 = sub_2410DF478(inited);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_24106D810()
{
  type metadata accessor for MedicationsHealthPluginDelegate();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_24115C960();

  return v2;
}

void sub_24106D8D8()
{
  sub_24106E5DC();
  uint64_t v0 = sub_24115D700();
  uint64_t v1 = *(void *)(*(void *)(v0 - 8) + 72);
  uint64_t v2 = *(void *)(v0 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24116BE90;
  sub_24106E634();
  uint64_t v5 = (void *)sub_2411612B0();
  uint64_t v6 = (void *)sub_2411606F0();
  id v7 = objc_msgSend(self, sel_imageNamed_inBundle_, v6, v5);

  if (v7)
  {
    unint64_t v102 = v4 + v3;
    *(void *)unint64_t v102 = v7;
    *(unsigned char *)(v102 + 8) = 0;
    id v8 = *(void (**)(void))(v2 + 104);
    ((void (*)(unint64_t, void, uint64_t))v8)(v4 + v3, *MEMORY[0x263F42AB8], v0);
    uint64_t v104 = v0;
    unint64_t v9 = (uint64_t *)(v4 + v3 + v1);
    type metadata accessor for MedicationsHealthPluginDelegate();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v101 = self;
    id v11 = objc_msgSend(v101, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v12 = v1;
    uint64_t v106 = v1;
    uint64_t v13 = sub_24115C960();
    uint64_t v15 = v14;

    *unint64_t v9 = v13;
    v9[1] = v15;
    ((void (*)(uint64_t *, void, uint64_t))v8)(v9, *MEMORY[0x263F42AC0], v104);
    uint64_t v16 = 2 * v12;
    unint64_t v17 = v102 + 2 * v12;
    uint64_t v18 = ObjCClassFromMetadata;
    uint64_t v105 = ObjCClassFromMetadata;
    id v19 = objc_msgSend(v101, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
    uint64_t v20 = sub_24115C960();
    uint64_t v22 = v21;

    *(void *)unint64_t v17 = v20;
    *(void *)(v17 + 8) = v22;
    *(unsigned char *)(v17 + 16) = 0;
    uint64_t v23 = *MEMORY[0x263F42AE0];
    unsigned int v103 = *MEMORY[0x263F42AE0];
    ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v17, v23, v104);
    unint64_t v24 = v102 + v16 + v106;
    id v25 = objc_msgSend(v101, sel_bundleForClass_, v18, 0xE000000000000000);
    uint64_t v26 = sub_24115C960();
    uint64_t v28 = v27;

    *(void *)unint64_t v24 = v26;
    *(void *)(v24 + 8) = v28;
    *(unsigned char *)(v24 + 16) = 0;
    ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v24, v23, v104);
    uint64_t v29 = (uint64_t *)(v102 + 4 * v106);
    id v30 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v31 = sub_24115C960();
    uint64_t v33 = v32;

    *uint64_t v29 = v31;
    v29[1] = v33;
    ((void (*)(uint64_t *, void, uint64_t))v8)(v29, *MEMORY[0x263F42AD8], v104);
    unint64_t v34 = v102 + 5 * v106;
    id v35 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v36 = sub_24115C960();
    uint64_t v38 = v37;

    *(void *)unint64_t v34 = v36;
    *(void *)(v34 + 8) = v38;
    *(unsigned char *)(v34 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v8)(v34, v103, v104);
    unint64_t v39 = v102 + 6 * v106;
    id v40 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v41 = sub_24115C960();
    uint64_t v43 = v42;

    *(void *)unint64_t v39 = v41;
    *(void *)(v39 + 8) = v43;
    *(unsigned char *)(v39 + 16) = 1;
    ((void (*)(unint64_t, void, uint64_t))v8)(v39, v103, v104);
    uint64_t v44 = (uint64_t *)(v102 + 7 * v106);
    id v45 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v46 = sub_24115C960();
    uint64_t v48 = v47;

    *uint64_t v44 = v46;
    v44[1] = v48;
    v44[2] = 0;
    unsigned int v100 = *MEMORY[0x263F42A80];
    v8(v44);
    unint64_t v49 = v102 + 8 * v106;
    id v50 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v51 = sub_24115C960();
    uint64_t v53 = v52;

    *(void *)unint64_t v49 = v51;
    *(void *)(v49 + 8) = v53;
    *(unsigned char *)(v49 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v8)(v49, v103, v104);
    unint64_t v54 = v102 + 9 * v106;
    id v55 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v56 = sub_24115C960();
    uint64_t v58 = v57;

    *(void *)unint64_t v54 = v56;
    *(void *)(v54 + 8) = v58;
    *(unsigned char *)(v54 + 16) = 0;
    ((void (*)(unint64_t, void, uint64_t))v8)(v54, v103, v104);
    unint64_t v59 = v102 + 10 * v106;
    id v60 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v61 = sub_24115C960();
    uint64_t v63 = v62;

    *(void *)unint64_t v59 = v61;
    *(void *)(v59 + 8) = v63;
    *(unsigned char *)(v59 + 16) = 1;
    ((void (*)(unint64_t, void, uint64_t))v8)(v59, v103, v104);
    uint64_t v64 = (uint64_t *)(v102 + 11 * v106);
    id v65 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v66 = sub_24115C960();
    uint64_t v68 = v67;

    *uint64_t v64 = v66;
    v64[1] = v68;
    v64[2] = 0;
    ((void (*)(uint64_t *, void, uint64_t))v8)(v64, v100, v104);
    unint64_t v69 = v102 + 12 * v106;
    id v70 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v71 = sub_24115C960();
    uint64_t v73 = v72;

    *(void *)unint64_t v69 = v71;
    *(void *)(v69 + 8) = v73;
    *(unsigned char *)(v69 + 16) = 1;
    ((void (*)(unint64_t, void, uint64_t))v8)(v69, v103, v104);
    uint64_t v74 = (uint64_t *)(v102 + 13 * v106);
    id v75 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v76 = sub_24115C960();
    uint64_t v78 = v77;

    *uint64_t v74 = v76;
    v74[1] = v78;
    _OWORD v74[2] = 0;
    ((void (*)(uint64_t *, void, uint64_t))v8)(v74, v100, v104);
    unint64_t v79 = v102 + 14 * v106;
    id v80 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v81 = sub_24115C960();
    uint64_t v83 = v82;

    *(void *)unint64_t v79 = v81;
    *(void *)(v79 + 8) = v83;
    *(unsigned char *)(v79 + 16) = 1;
    ((void (*)(unint64_t, void, uint64_t))v8)(v79, v103, v104);
    uint64_t v84 = (uint64_t *)(v102 + 15 * v106);
    id v85 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v86 = sub_24115C960();
    uint64_t v88 = v87;

    *uint64_t v84 = v86;
    v84[1] = v88;
    _OWORD v84[2] = 0;
    ((void (*)(uint64_t *, void, uint64_t))v8)(v84, v100, v104);
    unint64_t v89 = v102 + 16 * v106;
    id v90 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v91 = sub_24115C960();
    uint64_t v93 = v92;

    *(void *)unint64_t v89 = v91;
    *(void *)(v89 + 8) = v93;
    *(unsigned char *)(v89 + 16) = 0;
    uint64_t v94 = (void (*)(unint64_t, void, uint64_t))v8;
    ((void (*)(unint64_t, void, uint64_t))v8)(v89, v103, v104);
    unint64_t v95 = v102 + 17 * v106;
    id v96 = objc_msgSend(v101, sel_bundleForClass_, v105, 0xE000000000000000);
    uint64_t v97 = sub_24115C960();
    uint64_t v99 = v98;

    *(void *)unint64_t v95 = v97;
    *(void *)(v95 + 8) = v99;
    *(unsigned char *)(v95 + 16) = 1;
    v94(v95, v103, v104);
  }
  else
  {
    __break(1u);
  }
}

void sub_24106E5DC()
{
  if (!qword_268CF0B10)
  {
    sub_24115D700();
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0B10);
    }
  }
}

unint64_t sub_24106E634()
{
  unint64_t result = qword_26B003A40[0];
  if (!qword_26B003A40[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_26B003A40);
  }
  return result;
}

uint64_t sub_24106E6DC()
{
  sub_2411615F0();
  sub_241160860();
  objc_msgSend(v0, sel_invalidateEverything);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  objc_msgSend(v0, sel_invalidateDataSourceCounts);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  return 0;
}

id sub_24106E954()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractiveTimelineCollectionViewLayoutInvalidationContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InteractiveTimelineCollectionViewLayoutInvalidationContext()
{
  return self;
}

uint64_t sub_24106E9C0()
{
  sub_24101F178(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_24106E9F8(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    id v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_241075ABC(v12, v13);
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_24106EBA0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24106EBD8(uint64_t a1)
{
  sub_2410268CC(0, &qword_26B004120, MEMORY[0x263F45738], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

MedicationsHealthAppPlugin::FeedItemKind_optional __swiftcall FeedItemKind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_241161760();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = MedicationsHealthAppPlugin_FeedItemKind_addAccount;
  }
  else {
    v2.value = MedicationsHealthAppPlugin_FeedItemKind_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

void *static FeedItemKind.allCases.getter()
{
  return &unk_26F5549B8;
}

uint64_t FeedItemKind.rawValue.getter(char a1)
{
  if (a1) {
    return 0x756F636341646461;
  }
  else {
    return 0x6E53646572616873;
  }
}

uint64_t sub_24106ED0C(char *a1, char *a2)
{
  return sub_2410B3D90(*a1, *a2);
}

uint64_t sub_24106ED18()
{
  return sub_2411619A0();
}

uint64_t sub_24106EDAC()
{
  sub_241160830();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24106EE2C()
{
  return sub_2411619A0();
}

uint64_t sub_24106EEBC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_241161760();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_24106EF1C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E53646572616873;
  if (*v1) {
    uint64_t v2 = 0x756F636341646461;
  }
  unint64_t v3 = 0xED00007465707069;
  if (*v1) {
    unint64_t v3 = 0xEA0000000000746ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_24106EF6C(void *a1@<X8>)
{
  *a1 = &unk_26F5549E0;
}

unint64_t FeedItemKind.identifierPrefix.getter()
{
  return 0xD000000000000019;
}

MedicationsHealthAppPlugin::FeedItemKind_optional __swiftcall FeedItemKind.init(feedItemIdentifier:)(Swift::String feedItemIdentifier)
{
  v1.value = byte_26F554A28;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  char v2 = sub_2411608D0();
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_3;
  }
  v1.value = byte_26F554A29;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  char v3 = sub_2411608D0();
  swift_bridgeObjectRelease();
  if (v3)
  {
LABEL_3:
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (MedicationsHealthAppPlugin::FeedItemKind_optional)2;
  }
  return v1;
}

uint64_t static FeedItemContextChange.deleteFeedItems(of:from:)@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  sub_24101A6BC(a1, a1[3]);
  sub_24106F4D8((uint64_t)v4);
  return sub_24106F708((uint64_t)v4, a2);
}

uint64_t FeedItemContext.previousFeedItems(of:)()
{
  FeedItemKind.identifierPrefix.getter();
  uint64_t v0 = (void *)sub_24115D0F0();
  uint64_t v1 = sub_24115D0E0();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t static FeedItemContextChange.deleteFeedItems(of:matching:from:)@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  return sub_24106F350(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_24106F764, a3);
}

uint64_t static FeedItemContextChange.deleteFeedItems(of:excluding:from:)@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  return sub_24106F350(a1, a2, sub_24106F998, a3);
}

uint64_t sub_24106F350@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t (*a3)(uint64_t, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  sub_24101A6BC(a2, a2[3]);
  uint64_t v7 = FeedItemContext.previousFeedItems(of:)();
  swift_bridgeObjectRetain();
  uint64_t v8 = a3(v7, a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0;
  *(unsigned char *)(a4 + 32) = 32;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FeedItemContext.deleteFeedItems(of:)(MedicationsHealthAppPlugin::FeedItemKind of)
{
  sub_24106FC94(0, &qword_26B005F40, MEMORY[0x263F45828], MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24116B370;
  uint64_t v2 = v1 + 32;
  sub_24106F4D8((uint64_t)v3);
  sub_24106F708((uint64_t)v3, v2);
  sub_24115D0D0();
  swift_bridgeObjectRelease();
}

uint64_t sub_24106F4D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = sub_24115D0A0();
  uint64_t v2 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  char v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = FeedItemContext.previousFeedItems(of:)();
  int64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v23 = a1;
    uint64_t v27 = MEMORY[0x263F8EE78];
    sub_24102A550(0, v6, 0);
    uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    uint64_t v7 = v2 + 16;
    uint64_t v9 = *(unsigned __int8 *)(v7 + 64);
    uint64_t v22 = v5;
    uint64_t v10 = v5 + ((v9 + 32) & ~v9);
    uint64_t v24 = *(void *)(v7 + 56);
    id v25 = v8;
    id v11 = (void (**)(char *, uint64_t))(v7 - 8);
    do
    {
      uint64_t v12 = v26;
      uint64_t v13 = v7;
      v25(v4, v10, v26);
      uint64_t v14 = sub_24115CFD0();
      uint64_t v16 = v15;
      (*v11)(v4, v12);
      uint64_t v17 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24102A550(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v27;
      }
      unint64_t v19 = *(void *)(v17 + 16);
      unint64_t v18 = *(void *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_24102A550(v18 > 1, v19 + 1, 1);
        uint64_t v17 = v27;
      }
      *(void *)(v17 + 16) = v19 + 1;
      uint64_t v20 = v17 + 16 * v19;
      *(void *)(v20 + 32) = v14;
      *(void *)(v20 + 40) = v16;
      v10 += v24;
      --v6;
      uint64_t v7 = v13;
    }
    while (v6);
    uint64_t result = swift_bridgeObjectRelease();
    a1 = v23;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x263F8EE78];
  }
  *(void *)a1 = v17;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 32;
  return result;
}

uint64_t sub_24106F708(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24106F764(uint64_t a1, void *a2)
{
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    sub_24115D0A0();
    uint64_t v3 = a2[2];
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v22 = a2 + 7;
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    uint64_t v23 = a2;
    while (1)
    {
      uint64_t v6 = sub_24115CFD0();
      uint64_t v8 = v7;
      if (v3)
      {
        uint64_t v9 = v6;
        BOOL v10 = a2[4] == v6 && a2[5] == v7;
        if (v10 || (uint64_t result = sub_241161890(), (result & 1) != 0))
        {
LABEL_11:
          swift_bridgeObjectRelease();
          uint64_t v12 = sub_24115CFD0();
          uint64_t v14 = v13;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = sub_241051F68(0, v5[2] + 1, 1, v5);
          }
          unint64_t v16 = v5[2];
          unint64_t v15 = v5[3];
          if (v16 >= v15 >> 1) {
            uint64_t v5 = sub_241051F68((void *)(v15 > 1), v16 + 1, 1, v5);
          }
          v5[2] = v16 + 1;
          uint64_t v17 = &v5[2 * v16];
          v17[4] = v12;
          v17[5] = v14;
        }
        else
        {
          if (v3 != 1)
          {
            unint64_t v18 = v22;
            uint64_t v19 = 1;
            while (1)
            {
              uint64_t v20 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                break;
              }
              if (*(v18 - 1) == v9 && *v18 == v8) {
                goto LABEL_11;
              }
              uint64_t result = sub_241161890();
              if (result) {
                goto LABEL_11;
              }
              v18 += 2;
              ++v19;
              if (v20 == v3) {
                goto LABEL_26;
              }
            }
            __break(1u);
            return result;
          }
LABEL_26:
          swift_bridgeObjectRelease();
        }
        a2 = v23;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (++v4 == v24)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_24106F998(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    sub_24115D0A0();
    uint64_t v3 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v22 = (void *)(a2 + 56);
    uint64_t v23 = a2;
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v6 = sub_24115CFD0();
      uint64_t v8 = v7;
      if (!v3) {
        goto LABEL_20;
      }
      uint64_t v9 = v6;
      if (*(void *)(v23 + 32) != v6 || *(void *)(v23 + 40) != v7)
      {
        uint64_t result = sub_241161890();
        if ((result & 1) == 0) {
          break;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v4 == v24)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
    if (v3 != 1)
    {
      uint64_t v12 = v22;
      uint64_t v13 = 1;
      while (1)
      {
        uint64_t v14 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (*(v12 - 1) == v9 && *v12 == v8) {
          goto LABEL_3;
        }
        uint64_t result = sub_241161890();
        if (result) {
          goto LABEL_3;
        }
        v12 += 2;
        ++v13;
        if (v14 == v3) {
          goto LABEL_20;
        }
      }
      __break(1u);
      return result;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_24115CFD0();
    uint64_t v18 = v17;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_241051F68(0, v5[2] + 1, 1, v5);
    }
    unint64_t v20 = v5[2];
    unint64_t v19 = v5[3];
    if (v20 >= v19 >> 1) {
      uint64_t v5 = sub_241051F68((void *)(v19 > 1), v20 + 1, 1, v5);
    }
    v5[2] = v20 + 1;
    uint64_t v21 = &v5[2 * v20];
    v21[4] = v16;
    v21[5] = v18;
    goto LABEL_4;
  }
  return MEMORY[0x263F8EE78];
}

unint64_t sub_24106FBC0()
{
  unint64_t result = qword_268CF0B38;
  if (!qword_268CF0B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0B38);
  }
  return result;
}

unint64_t sub_24106FC18()
{
  unint64_t result = qword_268CF0B40;
  if (!qword_268CF0B40)
  {
    sub_24106FC94(255, &qword_268CF0B48, (uint64_t)&type metadata for FeedItemKind, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0B40);
  }
  return result;
}

void sub_24106FC94(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for RelativeWeekdayWithMonthAndDayFormatter.Style(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeedItemKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24106FE3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24106FE64(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemKind()
{
  return &type metadata for FeedItemKind;
}

id sub_241070024()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsScheduleViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsScheduleViewController()
{
  return self;
}

uint64_t sub_24107007C()
{
  return sub_2411619A0();
}

uint64_t sub_2410700D4()
{
  return sub_241160830();
}

uint64_t sub_2410700F0()
{
  return sub_2411619A0();
}

uint64_t sub_241070144@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_241161760();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_241070198(void *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x8000000241162D60;
}

uint64_t sub_2410701BC(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_241070660(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_2411608E0();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_241160840();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_241160840();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_241160900();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_241052524(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_241052524((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  void v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_241160840();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_241160900();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_241052524(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_241052524((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    void v13[2] = v39 + 1;
    id v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_2411616A0();
  __break(1u);
LABEL_42:
  uint64_t result = sub_2411616A0();
  __break(1u);
  return result;
}

uint64_t sub_241070660(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_241160900();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_241052524(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_241052524((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    _OWORD v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    unsigned char v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_2411616A0();
  __break(1u);
  return result;
}

uint64_t _s26MedicationsHealthAppPlugin0A24ShareableModelIdentifierO4fromACSgSS_tcfC_0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_24115F790();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v75 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v75 - v12;
  v82[0] = 10848482;
  v82[1] = 0xA300000000000000;
  id v80 = v82;
  swift_bridgeObjectRetain();
  unint64_t v14 = (void *)sub_2410701BC(0x7FFFFFFFFFFFFFFFLL, 0, sub_24107127C, (uint64_t)v79, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v15 = v14[2];
  if (v15 != 4)
  {
    sub_24115F740();
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_24115F780();
    os_log_type_t v23 = sub_241160D30();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      v82[0] = v77;
      *(_DWORD *)uint64_t v24 = 136446722;
      uint64_t v81 = sub_24101F0A4(0xD000000000000023, 0x800000024116C0F0, v82);
      uint64_t v78 = v4;
      sub_241161430();
      *(_WORD *)(v24 + 12) = 2082;
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = MEMORY[0x2456167F0](v25, MEMORY[0x263F8D980]);
      uint64_t v76 = v5;
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      uint64_t v81 = sub_24101F0A4(v26, v28, v82);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2082;
      uint64_t v81 = v15;
      uint64_t v29 = sub_241161850();
      uint64_t v81 = sub_24101F0A4(v29, v30, v82);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v22, v23, "[%{public}s] Did not find 4 items in components, %{public}s, count: %{public}s", (uint8_t *)v24, 0x20u);
      uint64_t v31 = v77;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v31, -1, -1);
      MEMORY[0x2456180C0](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v76 + 8))(v7, v78);
      return 0;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v33 = v7;
    goto LABEL_7;
  }
  uint64_t v16 = v14[4];
  uint64_t v17 = v14[5];
  uint64_t v18 = v14[6];
  uint64_t v19 = v14[7];
  swift_bridgeObjectRetain();
  MEMORY[0x2456165F0](v16, v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_241161760();
  uint64_t result = swift_bridgeObjectRelease();
  if (v20)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v14[2] < 2uLL)
  {
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v35 = v14[8];
  uint64_t v36 = v14[9];
  uint64_t v37 = v14[10];
  uint64_t v38 = v14[11];
  swift_bridgeObjectRetain();
  MEMORY[0x2456165F0](v35, v36, v37, v38);
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_241161760();
  uint64_t result = swift_bridgeObjectRelease();
  if (v39)
  {
    sub_24115F740();
    swift_bridgeObjectRetain();
    id v40 = sub_24115F780();
    os_log_type_t v41 = sub_241160D30();
    int v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v43 = swift_slowAlloc();
      LODWORD(v77) = v42;
      uint64_t v44 = v43;
      uint64_t v76 = swift_slowAlloc();
      v82[0] = v76;
      *(_DWORD *)uint64_t v44 = 136446466;
      uint64_t v81 = sub_24101F0A4(0xD000000000000023, 0x800000024116C0F0, v82);
      uint64_t v78 = v4;
      sub_241161430();
      *(_WORD *)(v44 + 12) = 2082;
      uint64_t v75 = v44 + 14;
      uint64_t v46 = v14[8];
      uint64_t v45 = v14[9];
      uint64_t v48 = v14[10];
      uint64_t v47 = v14[11];
      swift_bridgeObjectRetain();
      uint64_t v49 = MEMORY[0x2456165F0](v46, v45, v48, v47);
      unint64_t v51 = v50;
      swift_bridgeObjectRelease();
      uint64_t v81 = sub_24101F0A4(v49, v51, v82);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v40, (os_log_type_t)v77, "[%{public}s] Unsupported version found when decoding version: '%{public}s'", (uint8_t *)v44, 0x16u);
      uint64_t v52 = v76;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v52, -1, -1);
      MEMORY[0x2456180C0](v44, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v78);
      return 0;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v33 = v10;
    goto LABEL_7;
  }
  if (v14[2] < 3uLL) {
    goto LABEL_26;
  }
  uint64_t v53 = v14[12];
  uint64_t v54 = v14[13];
  uint64_t v55 = v14[14];
  uint64_t v56 = v14[15];
  swift_bridgeObjectRetain();
  MEMORY[0x2456165F0](v53, v54, v55, v56);
  swift_bridgeObjectRelease();
  uint64_t v57 = sub_241161760();
  uint64_t result = swift_bridgeObjectRelease();
  if (v57 != 1)
  {
    if (!v57)
    {
      if (v14[2] >= 4uLL)
      {
LABEL_18:
        uint64_t v58 = v14[16];
        uint64_t v59 = v14[17];
        uint64_t v60 = v14[18];
        uint64_t v61 = v14[19];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v34 = MEMORY[0x2456165F0](v58, v59, v60, v61);
        swift_bridgeObjectRelease();
        return v34;
      }
      goto LABEL_27;
    }
    sub_24115F740();
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_24115F780();
    os_log_type_t v63 = sub_241160D30();
    int v64 = v63;
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v65 = swift_slowAlloc();
      LODWORD(v77) = v64;
      uint64_t v66 = v65;
      uint64_t v76 = swift_slowAlloc();
      v82[0] = v76;
      *(_DWORD *)uint64_t v66 = 136446466;
      uint64_t v81 = sub_24101F0A4(0xD000000000000023, 0x800000024116C0F0, v82);
      uint64_t v78 = v4;
      sub_241161430();
      *(_WORD *)(v66 + 12) = 2082;
      uint64_t v75 = v66 + 14;
      uint64_t v68 = v14[8];
      uint64_t v67 = v14[9];
      uint64_t v70 = v14[10];
      uint64_t v69 = v14[11];
      swift_bridgeObjectRetain();
      uint64_t v71 = MEMORY[0x2456165F0](v68, v67, v70, v69);
      unint64_t v73 = v72;
      swift_bridgeObjectRelease();
      uint64_t v81 = sub_24101F0A4(v71, v73, v82);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v62, (os_log_type_t)v77, "[%{public}s] Unsupported audience found when decoding version: '%{public}s'", (uint8_t *)v66, 0x16u);
      uint64_t v74 = v76;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v74, -1, -1);
      MEMORY[0x2456180C0](v66, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v78);
      return 0;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v33 = v13;
LABEL_7:
    v32(v33, v4);
    return 0;
  }
  if (v14[2] >= 4uLL) {
    goto LABEL_18;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t destroy for MedicationsShareableModelIdentifier()
{
  return sub_241023D0C();
}

uint64_t _s26MedicationsHealthAppPlugin35MedicationsShareableModelIdentifierOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_241023DE8();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MedicationsShareableModelIdentifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_241023DE8();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_241023D0C();
  return a1;
}

uint64_t assignWithTake for MedicationsShareableModelIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_241023D0C();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationsShareableModelIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationsShareableModelIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_241071258(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_241071260(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationsShareableModelIdentifier()
{
  return &type metadata for MedicationsShareableModelIdentifier;
}

uint64_t sub_24107127C(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_241161890() & 1;
  }
}

uint64_t sub_2410712D4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24107130C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t getEnumTagSinglePayload for MedicationsShareableModelIdentifier.Domain(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for MedicationsShareableModelIdentifier.Domain(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x241071408);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationsShareableModelIdentifier.Domain()
{
  return &type metadata for MedicationsShareableModelIdentifier.Domain;
}

unint64_t sub_241071444()
{
  unint64_t result = qword_268CF0B50;
  if (!qword_268CF0B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0B50);
  }
  return result;
}

uint64_t type metadata accessor for CriticalMedicationsListViewController(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF0B80);
}

uint64_t sub_2410714B8()
{
  return swift_initClassMetadata2();
}

id sub_241071524(uint64_t a1)
{
  uint64_t v3 = qword_268CF0B68;
  unsigned int v4 = self;
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_sharedInstance);
  uint64_t v6 = qword_268CF0B70;
  sub_24115CEA0();
  sub_24115CE90();
  uint64_t v7 = sub_24115CE80();
  swift_release();
  *(void *)&v5[v6] = v7;
  *(void *)&v5[qword_268CF0B78] = 0;
  *(void *)&v5[qword_268CF0B58] = a1;
  type metadata accessor for CriticalMedicationsDataSource(0);
  swift_allocObject();
  uint64_t v8 = swift_retain_n();
  uint64_t v9 = sub_241072914(v8);
  uint64_t v10 = qword_268CF0B60;
  *(void *)&v5[qword_268CF0B60] = v9;

  sub_241053D48();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24116B370;
  uint64_t v12 = MEMORY[0x263F440A0];
  *(void *)(v11 + 32) = *(void *)&v5[v10];
  *(void *)(v11 + 40) = v12;
  sub_24115E1C0();
  swift_allocObject();
  swift_retain();
  sub_24115E1E0();
  uint64_t v13 = (void *)sub_24115E730();
  uint64_t v14 = qword_26B007268;
  id v15 = v13;
  if (v14 != -1) {
    swift_once();
  }
  sub_24115C960();
  uint64_t v16 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setTitle_, v16, 0xE000000000000000);

  sub_241071768();
  swift_release();
  return v15;
}

void sub_241071740(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_2410763E0();
}

uint64_t sub_241071768()
{
  uint64_t v1 = v0;
  sub_24107568C(0, &qword_268CF0C30, (uint64_t (*)(uint64_t))sub_2410742E4, MEMORY[0x263EFDE48]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v9 - v5;
  swift_beginAccess();
  sub_24107568C(0, &qword_268CF0BC0, (uint64_t (*)(uint64_t))sub_2410742E4, MEMORY[0x263EFDE58]);
  sub_24115FD40();
  swift_endAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2410764BC();
  uint64_t v7 = sub_24115FF60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(void *)(v1 + qword_268CF0B78) = v7;
  return swift_release();
}

void sub_241071938(uint64_t *a1, uint64_t a2)
{
  sub_24107568C(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = *a1;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x2456181C0](a2 + 16);
  if (v8)
  {
    uint64_t v9 = (char *)v8;
    if ((v7 & 0xC000000000000001) != 0)
    {
      if (sub_241161530())
      {
LABEL_4:
        uint64_t v10 = *(void **)&v9[qword_268CF0B70];
        uint64_t v11 = swift_allocObject();
        *(void *)(v11 + 16) = v9;
        *(void *)(v11 + 24) = v7;
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = v9;
        uint64_t v13 = sub_241160A70();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
        sub_241160A50();
        id v14 = v10;
        id v15 = v9;
        swift_bridgeObjectRetain();
        uint64_t v16 = v15;
        id v17 = v14;
        swift_retain();
        swift_retain();
        uint64_t v18 = sub_241160A40();
        uint64_t v19 = (void *)swift_allocObject();
        uint64_t v20 = MEMORY[0x263F8F500];
        void v19[2] = v18;
        v19[3] = v20;
        v19[4] = v17;
        v19[5] = sub_241076584;
        void v19[6] = v11;
        unsigned char v19[7] = sub_2410765C4;
        unsigned char v19[8] = v12;
        sub_24101A700((uint64_t)v6, (uint64_t)&unk_268CF0C48, (uint64_t)v19);

        swift_release();
        swift_release();
        swift_release();
        return;
      }
    }
    else if (*(void *)(v7 + 16))
    {
      goto LABEL_4;
    }
    id v21 = *(id *)&v9[qword_268CF0B68];
    uint64_t v22 = swift_bridgeObjectRetain();
    sub_24114CE14(v22);
    swift_bridgeObjectRelease();
    sub_241024708(0, (unint64_t *)&qword_26B007360);
    os_log_type_t v23 = (void *)sub_241160980();
    swift_release();
    objc_msgSend(v21, sel_setMedications_, v23);
  }
}

void sub_241071C20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + qword_268CF0B68);
  swift_bridgeObjectRetain();
  sub_24114CE14(a2);
  swift_bridgeObjectRelease();
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  id v4 = (id)sub_241160980();
  swift_release();
  objc_msgSend(v3, sel_setMedications_, v4);
}

id sub_241071CD0()
{
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  sub_24115C960();
  uint64_t v0 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v0, v1, 1, 0xE000000000000000);

  sub_24115C960();
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  id v4 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_241076788;
  uint64_t v17 = v3;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v13 = 1107296256;
  id v14 = sub_2410B29F4;
  id v15 = &unk_26F555DB8;
  uint64_t v5 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_actionWithTitle_style_handler_, v4, 1, v5, 0xE000000000000000);
  _Block_release(v5);
  swift_release();

  objc_msgSend(v2, sel_addAction_, v7);
  sub_24115C960();
  uint64_t v8 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_2410746B0;
  uint64_t v17 = 0;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v13 = 1107296256;
  id v14 = sub_2410B29F4;
  id v15 = &unk_26F555DE0;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_release();
  id v10 = objc_msgSend(v6, sel_actionWithTitle_style_handler_, v8, 0, v9, 0xE000000000000000);
  _Block_release(v9);

  objc_msgSend(v2, sel_addAction_, v10);
  return v2;
}

uint64_t sub_241072090(void *a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_24115F790();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24115DEE0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (unsigned __int8 *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a2;
  uint64_t v12 = (void *)sub_24115CD90();
  id v27 = a1;
  id v13 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v12);

  uint64_t v29 = v4;
  if (!v13) {
    goto LABEL_6;
  }
  uint64_t v25 = v5;
  id v32 = v13;
  sub_241024708(0, (unint64_t *)&qword_268CF1850);
  sub_241027EA8(0, (unint64_t *)&unk_268CF1840);
  id v14 = v13;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v31 = 0;
    memset(v30, 0, sizeof(v30));

    sub_24102AA40((uint64_t)v30, (uint64_t)&qword_268CF0C28, (uint64_t)&unk_268CF1840, MEMORY[0x263F43FF0], (uint64_t (*)(void))sub_24107632C);
    uint64_t v4 = v29;
    uint64_t v5 = v25;
LABEL_6:
    sub_24115F740();
    uint64_t v17 = sub_24115F780();
    os_log_type_t v18 = sub_241160D30();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(void *)&v30[0] = v20;
      *(_DWORD *)uint64_t v19 = 136446210;
      v33[0] = ObjectType;
      swift_getMetatypeMetadata();
      uint64_t v21 = sub_241160760();
      v33[0] = sub_24101F0A4(v21, v22, (uint64_t *)v30);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v17, v18, "[%{public}s] cell is not a selectable cell", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v20, -1, -1);
      MEMORY[0x2456180C0](v19, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v29);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  sub_241027314(v30, (uint64_t)v33);
  sub_24101A6BC(v33, v34);
  sub_24115DD60();
  sub_24101A6BC(v33, v34);
  sub_24115DD70();
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t))(v9 + 88))(v11, v8) == *MEMORY[0x263F440D8])
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 96))(v11, v8);
    uint64_t v15 = *v11;
    uint64_t v16 = (void *)sub_24115CD90();
    objc_msgSend(v27, sel_deselectItemAtIndexPath_animated_, v16, v15);
  }
  else
  {

    (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(v11, v8);
  }
  return sub_24101F178((uint64_t)v33);
}

uint64_t sub_241072514(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_24115CE00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115CDA0();
  id v9 = a3;
  id v10 = a1;
  sub_241072090(v9, (uint64_t)v8);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_241072610()
{
}

void sub_241072640(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_241072674()
{
  swift_release();
  swift_release();

  return swift_release();
}

id sub_2410726E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CriticalMedicationsListViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24107271C(uint64_t a1)
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_241072798()
{
  return type metadata accessor for CriticalMedicationsListViewController(0);
}

uint64_t type metadata accessor for CriticalMedicationsDataSource(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF0BB0);
}

void sub_2410727C0()
{
  sub_24107568C(319, &qword_268CF0BC0, (uint64_t (*)(uint64_t))sub_2410742E4, MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_2410728A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24115FD60();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_241072914(uint64_t a1)
{
  uint64_t v3 = sub_24115CB50();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + qword_268CF0BA8) = 0;
  *(void *)(v1 + qword_268CF0B90) = a1;
  sub_24115E9C0();
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  *(void *)(v1 + qword_268CF0B98) = sub_24115E9B0();
  uint64_t v7 = ListConceptManager.criticalMedicationsSet.getter();
  swift_beginAccess();
  uint64_t v10 = v7;
  sub_2410742E4();
  sub_24115FD30();
  swift_endAccess();
  swift_release();
  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  strcpy((char *)v11, "MutableArray<");
  HIWORD(v11[1]) = -4864;
  sub_24115CB40();
  sub_24115CB20();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  uint64_t v8 = sub_24115DE40();
  swift_retain();
  sub_2410731C8();
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_241072B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v5 = sub_24115E650();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v33 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_24115DEE0();
  uint64_t v7 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  id v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24107568C(0, &qword_26B006D78, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = sub_24115CB50();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_241160730() == a1 && v17 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v19 = sub_241161890();
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_10:
    sub_24115CB40();
    sub_24115CB20();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    void v35[3] = sub_24115F9D0();
    v35[4] = MEMORY[0x263F81F20];
    sub_2410277C0(v35);
    sub_24115F9B0();
    if (qword_26B007268 != -1) {
      swift_once();
    }
    sub_24115C960();
    sub_24115F990();
    sub_24115F890();
    uint64_t v21 = sub_24115F8B0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v12, 0, 1, v21);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F440E0], v30);
    (*(void (**)(char *, void, uint64_t))(v31 + 104))(v33, *MEMORY[0x263F446D0], v32);
    uint64_t v22 = sub_24115E020();
    os_log_type_t v23 = v34;
    v34[3] = v22;
    v23[4] = sub_241076398((unint64_t *)&qword_26B0069C8, MEMORY[0x263F441F0]);
    sub_2410277C0(v23);
    return sub_24115E010();
  }
  if (sub_241160730() == a1 && v20 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v25 = sub_241161890();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      uint64_t v28 = sub_24115DA70();
      uint64_t v29 = v34;
      v34[3] = v28;
      void v29[4] = sub_241076398(&qword_268CF07E8, MEMORY[0x263F43D00]);
      sub_2410277C0(v29);
      return sub_24115DA60();
    }
  }
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  v35[0] = 0x74497265746F6F46;
  v35[1] = 0xEB000000005F6D65;
  sub_24115CB40();
  sub_24115CB20();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_241160860();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_24115E480();
  id v27 = v34;
  v34[3] = v26;
  v27[4] = sub_241076398(&qword_268CF07F0, MEMORY[0x263F44568]);
  sub_2410277C0(v27);
  return sub_24115E470();
}

uint64_t sub_2410731C8()
{
  uint64_t v21 = MEMORY[0x263F8F110];
  sub_24107568C(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  objc_super v2 = (char *)v20 - v1;
  sub_2410756F0();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241075810();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v22 = v8;
  uint64_t v23 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_24115F630();
  uint64_t v12 = (void (*)(uint64_t))MEMORY[0x263F45D68];
  sub_24107591C(0, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68]);
  sub_2410757A8();
  sub_241015DD8(&qword_26B0072C0, (unint64_t *)&qword_26B0072C8, v12);
  sub_24115FE30();
  swift_release();
  sub_24115F0C0();
  sub_24115F0B0();
  uint64_t v13 = (void *)sub_24115F080();
  swift_release();
  sub_241076398(&qword_268CF0C00, (void (*)(uint64_t))sub_2410756F0);
  uint64_t v14 = sub_24115FDF0();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v25 = v14;
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v24 = (id)sub_241160EF0();
  uint64_t v15 = sub_241160EB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v2, 1, 1, v15);
  sub_24107591C(0, &qword_268CF0BF0, (void (*)(uint64_t))sub_2410757A8);
  sub_241015DD8(&qword_268CF0BF8, &qword_268CF0BF0, (void (*)(uint64_t))sub_2410757A8);
  sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
  sub_24115FF10();
  sub_24102AA40((uint64_t)v2, (uint64_t)&qword_26B0071C0, v21, v20[2], (uint64_t (*)(void))sub_24107568C);

  swift_release();
  swift_allocObject();
  uint64_t v16 = v20[1];
  swift_weakInit();
  sub_241076398(&qword_268CF0C08, (void (*)(uint64_t))sub_241075810);
  uint64_t v17 = v22;
  uint64_t v18 = sub_24115FF60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v17);
  *(void *)(v16 + qword_268CF0BA8) = v18;
  return swift_release();
}

uint64_t sub_2410736A0@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_24115F6A0();
  uint64_t v3 = sub_2410E51B0(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_2410736E8(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_24115CB50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_24115EA50();
  uint64_t v8 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v29 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *a1;
  swift_beginAccess();
  uint64_t v26 = a2 + 16;
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_2411616E0();
    uint64_t v11 = result;
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v25 = v4;
  uint64_t v24 = v5;
  uint64_t v23 = v7;
  if (v11)
  {
    if (v11 < 1)
    {
      __break(1u);
      return result;
    }
    unint64_t v31 = v10 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v13 = 0;
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
    unsigned int v28 = *MEMORY[0x263F44DA8];
    id v27 = (void (**)(char *, void, uint64_t))(v8 + 104);
    unint64_t v32 = v10;
    uint64_t v15 = v29;
    do
    {
      if (v31) {
        id v16 = (id)MEMORY[0x245617450](v13, v10);
      }
      else {
        id v16 = *(id *)(v10 + 8 * v13 + 32);
      }
      uint64_t v17 = v16;
      if (swift_weakLoadStrong())
      {
        uint64_t v38 = sub_241024708(0, (unint64_t *)&qword_26B007360);
        uint64_t v39 = sub_241023228(&qword_268CF0C10, (unint64_t *)&qword_26B007360);
        *(void *)&long long v37 = v17;
        id v18 = v17;
        sub_24115E9D0();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_24115FD60();
        swift_release();
        swift_release();
        sub_241073D84(v18, v33);
        swift_bridgeObjectRelease();
        swift_allocObject();
        swift_weakInit();
        (*v27)(v15, v28, v30);
        *((void *)&v35 + 1) = sub_24115EA70();
        uint64_t v36 = sub_241076398(&qword_268CF0C18, MEMORY[0x263F44DB0]);
        sub_2410277C0((uint64_t *)&v34);
        swift_retain();
        sub_24115EA60();
        swift_release();
        swift_release();
      }
      else
      {
        uint64_t v36 = 0;
        long long v34 = 0u;
        long long v35 = 0u;
      }

      unint64_t v10 = v32;
      if (*((void *)&v35 + 1))
      {
        sub_241027314(&v34, (uint64_t)&v37);
        sub_241027314(&v37, (uint64_t)&v34);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_241052654(0, v14[2] + 1, 1, v14);
        }
        unint64_t v20 = v14[2];
        unint64_t v19 = v14[3];
        if (v20 >= v19 >> 1) {
          uint64_t v14 = sub_241052654((void *)(v19 > 1), v20 + 1, 1, v14);
        }
        _OWORD v14[2] = v20 + 1;
        sub_241027314(&v34, (uint64_t)&v14[5 * v20 + 4]);
      }
      else
      {
        sub_24102AA40((uint64_t)&v34, (uint64_t)&qword_26B0069B0, (uint64_t)&qword_26B0069A8, MEMORY[0x263F437A0], (uint64_t (*)(void))sub_24107632C);
      }
      ++v13;
    }
    while (v11 != v13);
  }
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_24107568C(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    sub_24115DDF0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_24116B370;
    uint64_t v21 = v23;
    sub_24115CB40();
    sub_24115CB20();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v25);
    sub_24115DDE0();
    sub_24115DE50();
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_241073D84(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_241161560();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_2411612D0(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_2411612E0();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_2411612E0();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

void sub_241073EE4(uint64_t a1, char a2)
{
  sub_2410280A4(a1, (uint64_t)v9);
  sub_241027EA8(0, &qword_268CF0C20);
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  if (swift_dynamicCast())
  {
    if (a2)
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        swift_getKeyPath();
        swift_getKeyPath();
        id v3 = v8;
        char v4 = (void (*)(unsigned char *, void))sub_24115FD50();
        sub_2410DBAD4(&v7, v3);
        v4(v9, 0);
        swift_release();

        swift_release();
        swift_release();

        return;
      }
    }
    else
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v5 = (void (*)(unsigned char *, void))sub_24115FD50();
        uint64_t v6 = (void *)sub_241075C4C(v8);
        v5(v9, 0);

        swift_release();
        swift_release();
        swift_release();

        return;
      }
    }
  }
}

void sub_2410740E0()
{
}

uint64_t sub_241074110()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_268CF0BA0;
  sub_24107568C(0, &qword_268CF0BC0, (uint64_t (*)(uint64_t))sub_2410742E4, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_release();
}

uint64_t sub_2410741DC()
{
  uint64_t v0 = sub_24115DE70();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_268CF0BA0;
  sub_24107568C(0, &qword_268CF0BC0, (uint64_t (*)(uint64_t))sub_2410742E4, MEMORY[0x263EFDE58]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

void sub_2410742E4()
{
  if (!qword_268CF0BC8)
  {
    sub_241024708(255, (unint64_t *)&qword_26B007360);
    sub_241023228((unint64_t *)&qword_268CF0898, (unint64_t *)&qword_26B007360);
    unint64_t v0 = sub_241160BF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0BC8);
    }
  }
}

uint64_t sub_24107438C()
{
  return type metadata accessor for CriticalMedicationsDataSource(0);
}

ValueMetadata *type metadata accessor for CriticalAlertNotificationsHelper()
{
  return &type metadata for CriticalAlertNotificationsHelper;
}

uint64_t sub_2410743A4()
{
  return sub_241160DF0();
}

uint64_t sub_241074444()
{
  uint64_t v0 = sub_24115DF90();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  char v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v10 - v5;
  sub_24115DF20();
  sub_24115DF10();
  id v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  uint64_t v8 = sub_24115DF80();
  v7(v4, v0);
  return v8;
}

uint64_t sub_241074560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_241072B54(a1, a2, a3);
}

uint64_t sub_241074578()
{
  return sub_24115E790();
}

uint64_t sub_2410745D4()
{
  return sub_241076398(&qword_268CF0BD0, (void (*)(uint64_t))type metadata accessor for CriticalMedicationsDataSource);
}

void sub_24107461C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (void *)MEMORY[0x2456181C0](v2);
  if (v3)
  {
    char v4 = v3;
    id v5 = objc_msgSend(v3, sel_navigationController);

    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_popViewControllerAnimated_, 1);
    }
  }
}

uint64_t sub_2410746B0()
{
  uint64_t v0 = sub_24115D770();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F43580], v0);
  sub_24115D760();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_241074794(uint64_t a1)
{
  v1[20] = a1;
  uint64_t v2 = sub_24115F790();
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_241074870, 0, 0);
}

uint64_t sub_241074870()
{
  id v16 = v0;
  sub_24115F740();
  uint64_t v1 = sub_24115F780();
  os_log_type_t v2 = sub_241160D50();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[25];
    uint64_t v4 = v0[21];
    uint64_t v5 = v0[22];
    id v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v15 = v7;
    *(_DWORD *)id v6 = 136315138;
    v0[17] = sub_24101F0A4(0xD000000000000020, 0x800000024116C240, &v15);
    sub_241161430();
    _os_log_impl(&dword_241007000, v1, v2, "%s [TCC] requestAuthorization initiating", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v7, -1, -1);
    MEMORY[0x2456180C0](v6, -1, -1);

    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v8(v3, v4);
  }
  else
  {
    uint64_t v9 = v0[25];
    uint64_t v10 = v0[21];
    uint64_t v11 = v0[22];

    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v8(v9, v10);
  }
  v0[26] = v8;
  char v12 = (void *)v0[20];
  v0[2] = v0;
  v0[7] = (char *)v0 + 228;
  v0[3] = sub_241074AD8;
  uint64_t v13 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_2410750A8;
  v0[13] = &unk_2650E3728;
  v0[14] = v13;
  objc_msgSend(v12, sel_requestAuthorizationWithOptions_completionHandler_, 16, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_241074AD8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    os_log_type_t v2 = sub_241074DFC;
  }
  else {
    os_log_type_t v2 = sub_241074BE8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_241074BE8()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(unsigned __int8 *)(v0 + 228);
  sub_24115F740();
  os_log_type_t v2 = sub_24115F780();
  os_log_type_t v3 = sub_241160D50();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v12 = *(void *)(v0 + 192);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 168);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v14 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    *(void *)(v0 + 152) = sub_24101F0A4(0xD000000000000020, 0x800000024116C240, &v14);
    sub_241161430();
    *(_WORD *)(v5 + 12) = 1024;
    *(_DWORD *)(v0 + 224) = v1;
    sub_241161430();
    _os_log_impl(&dword_241007000, v2, v3, "%s [TCC] requestAuthorization granted: %{BOOL}d", (uint8_t *)v5, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v6, -1, -1);
    MEMORY[0x2456180C0](v5, -1, -1);

    v13(v12, v4);
  }
  else
  {
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v9 = *(void *)(v0 + 168);

    v7(v8, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v10(v1);
}

uint64_t sub_241074DFC()
{
  uint64_t v22 = v0;
  uint64_t v1 = (void *)v0[27];
  swift_willThrow();
  sub_24115F740();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24115F780();
  os_log_type_t v5 = sub_241160D30();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[27];
    uint64_t v19 = v0[23];
    unint64_t v20 = (void (*)(uint64_t, uint64_t))v0[26];
    uint64_t v7 = v0[21];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v21[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    v0[16] = sub_24101F0A4(0xD000000000000020, 0x800000024116C240, v21);
    sub_241161430();
    *(_WORD *)(v8 + 12) = 2080;
    v0[15] = v6;
    id v10 = v6;
    sub_241027EA8(0, (unint64_t *)&qword_26B0073B0);
    uint64_t v11 = sub_241160760();
    v0[18] = sub_24101F0A4(v11, v12, v21);
    sub_241161430();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v4, v5, "%s [TCC] requestAuthorization error: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v9, -1, -1);
    MEMORY[0x2456180C0](v8, -1, -1);

    v20(v19, v7);
  }
  else
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[26];
    uint64_t v13 = (void *)v0[27];
    uint64_t v15 = v0[23];
    uint64_t v16 = v0[21];

    v14(v15, v16);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17(0);
}

uint64_t sub_2410750A8(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_241027EA8(0, (unint64_t *)&qword_26B0073B0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_24107516C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  **(void **)(*(void *)(v2 + 64) + 40) = a2;
  id v3 = a2;

  return MEMORY[0x270FA2400](v2);
}

uint64_t sub_2410751C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[16] = a4;
  v8[21] = sub_241160A50();
  v8[22] = sub_241160A40();
  id v10 = (void *)swift_task_alloc();
  v8[23] = v10;
  *id v10 = v8;
  v10[1] = sub_241075278;
  return sub_241074794(a4);
}

uint64_t sub_241075278()
{
  swift_task_dealloc();
  if (v0) {

  }
  return MEMORY[0x270FA2498](sub_241075380, 0, 0);
}

uint64_t sub_241075380()
{
  uint64_t v1 = (void *)v0[16];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_24107547C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_24107516C;
  v0[13] = &unk_2650E3710;
  v0[14] = v2;
  objc_msgSend(v1, sel_getNotificationSettingsWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24107547C()
{
  return MEMORY[0x270FA2498](sub_24107555C, 0, 0);
}

uint64_t sub_24107555C()
{
  uint64_t v1 = *(void **)(v0 + 120);
  *(void *)(v0 + 192) = objc_msgSend(v1, sel_criticalAlertSetting);

  uint64_t v3 = sub_241160A20();
  return MEMORY[0x270FA2498](sub_2410755FC, v3, v2);
}

uint64_t sub_2410755FC()
{
  if (*(void *)(v0 + 192) == 2) {
    uint64_t v1 = (void (**)(uint64_t))(v0 + 136);
  }
  else {
    uint64_t v1 = (void (**)(uint64_t))(v0 + 152);
  }
  uint64_t v2 = *v1;
  uint64_t v3 = swift_release();
  v2(v3);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_24107568C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2410756F0()
{
  if (!qword_268CF0BE0)
  {
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F45D68];
    sub_24107591C(255, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68]);
    sub_2410757A8();
    sub_241015DD8(&qword_26B0072C0, (unint64_t *)&qword_26B0072C8, v0);
    unint64_t v1 = sub_24115FAE0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268CF0BE0);
    }
  }
}

void sub_2410757A8()
{
  if (!qword_26B007308)
  {
    sub_241024708(255, (unint64_t *)&qword_26B007360);
    unint64_t v0 = sub_241160A10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B007308);
    }
  }
}

void sub_241075810()
{
  if (!qword_268CF0BE8)
  {
    sub_24107591C(255, &qword_268CF0BF0, (void (*)(uint64_t))sub_2410757A8);
    sub_241024708(255, (unint64_t *)&qword_26B007340);
    sub_241015DD8(&qword_268CF0BF8, &qword_268CF0BF0, (void (*)(uint64_t))sub_2410757A8);
    sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
    unint64_t v0 = sub_24115FC00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0BE8);
    }
  }
}

void sub_24107591C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24115FC20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241075980()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2410759B8(unint64_t *a1)
{
  return sub_2410736E8(a1, v1);
}

uint64_t sub_2410759C0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24115FD60();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_241075A40()
{
  return sub_24115FD70();
}

uint64_t sub_241075ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_241161950();
  swift_bridgeObjectRetain();
  sub_241160830();
  uint64_t v6 = sub_2411619A0();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  id v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_241161890() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_241161890() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2410DDE10();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_241075FC0(v8);
  uint64_t *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_241075C4C(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_241161560();

    if (v5)
    {
      uint64_t v6 = sub_241075E24();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_2411612D0();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_2411612E0();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_2411612E0();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  uint64_t *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2410DDFC0();
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_241076188(v9);
  uint64_t *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_241075E24()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_241161530();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_2410DC140(v3, v2);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_2411612D0();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    sub_241024708(0, (unint64_t *)&qword_26B007360);
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_2411612E0();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_241076188(v7);
      if (sub_2411612E0())
      {
        uint64_t *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_2411612E0();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_241075FC0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_241161500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_241161950();
        swift_bridgeObjectRetain();
        sub_241160830();
        uint64_t v10 = sub_2411619A0();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          char v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_241076188(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_241161500();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_2411612D0();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            BOOL v16 = (void *)(v15 + 8 * v2);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              *BOOL v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_24107632C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241027EA8(255, a3);
    unint64_t v4 = sub_241161420();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241076390(uint64_t a1, char a2)
{
}

uint64_t sub_241076398(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2410763E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = qword_268CF0B68;
  *(void *)&v1[v2] = objc_msgSend(self, sel_sharedInstance);
  uint64_t v3 = qword_268CF0B70;
  sub_24115CEA0();
  sub_24115CE90();
  uint64_t v4 = sub_24115CE80();
  swift_release();
  *(void *)&v1[v3] = v4;
  *(void *)&v1[qword_268CF0B78] = 0;

  sub_2411616B0();
  __break(1u);
}

void sub_2410764B4(uint64_t *a1)
{
  sub_241071938(a1, v1);
}

unint64_t sub_2410764BC()
{
  unint64_t result = qword_268CF0C38;
  if (!qword_268CF0C38)
  {
    sub_24107568C(255, &qword_268CF0C30, (uint64_t (*)(uint64_t))sub_2410742E4, MEMORY[0x263EFDE48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_268CF0C38);
  }
  return result;
}

uint64_t sub_241076544()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241076584()
{
  sub_241071C20(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24107658C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2410765C4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = sub_241071CD0();
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v2, 1, 0);
}

uint64_t sub_241076624()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_241076674(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_24100B740;
  return sub_2410751C0(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_241076750()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_241076788(uint64_t a1)
{
  sub_24107461C(a1, v1);
}

void sub_24107679C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_imageView];
  id v3 = objc_msgSend(v2, sel_widthAnchor);
  id v4 = objc_msgSend(v3, sel_constraintEqualToConstant_, 50.0);

  objc_msgSend(v4, sel_setActive_, 1);
  id v5 = objc_msgSend(v2, sel_heightAnchor);
  id v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, 50.0);

  objc_msgSend(v6, sel_setActive_, 1);
  sub_24106D4D0(0, (unint64_t *)&qword_26B0073A0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24116B210;
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_logLabel];
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v2;
  sub_2411609C0();
  id v9 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  sub_241024708(0, (unint64_t *)&qword_26B007008);
  id v10 = v8;
  id v11 = v2;
  unint64_t v12 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v9, sel_initWithArrangedSubviews_, v12);

  objc_msgSend(v13, sel_setAxis_, 0);
  objc_msgSend(v13, sel_setAlignment_, 3);
  objc_msgSend(v13, sel_setDistribution_, 0);
  objc_msgSend(v13, sel_setSpacing_, 16.0);
  objc_msgSend(v1, sel_addSubview_, v13);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v14 = objc_msgSend(v13, sel_leadingAnchor);
  id v15 = objc_msgSend(v1, sel_leadingAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  objc_msgSend(v16, sel_setActive_, 1);
  id v17 = objc_msgSend(v13, sel_topAnchor);
  id v18 = objc_msgSend(v1, sel_topAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  objc_msgSend(v19, sel_setActive_, 1);
  id v20 = objc_msgSend(v13, sel_trailingAnchor);
  id v21 = objc_msgSend(v1, sel_trailingAnchor);
  id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  objc_msgSend(v22, sel_setActive_, 1);
  id v23 = objc_msgSend(v13, sel_bottomAnchor);
  id v24 = objc_msgSend(v1, sel_bottomAnchor);
  id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  objc_msgSend(v25, sel_setActive_, 1);
}

id sub_241076B94(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  uint64_t v10 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_logLabel;
  id v11 = objc_allocWithZone(MEMORY[0x263F828E0]);
  unint64_t v12 = v5;
  id v13 = objc_msgSend(v11, sel_init);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v13, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v13, sel_setNumberOfLines_, 0);
  uint64_t v24 = sub_241160730();
  uint64_t v25 = v14;
  swift_bridgeObjectRetain();
  sub_241160860();
  id v15 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  id v16 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setAccessibilityIdentifier_, v16);

  id v17 = objc_msgSend(self, sel_systemWhiteColor);
  objc_msgSend(v15, sel_setTextColor_, v17);

  sub_241024708(0, &qword_26B007000);
  id v18 = (void *)sub_2411611F0();
  objc_msgSend(v15, sel_setFont_, v18);

  *(void *)&v5[v10] = v15;
  uint64_t v19 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_imageView;
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
  objc_msgSend(v20, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v20, sel_setContentMode_, 1);
  *(void *)&v12[v19] = v20;

  v23.receiver = v12;
  v23.super_class = (Class)type metadata accessor for MedicationsCurrentDayScheduleCompleteView();
  id v21 = objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  sub_24107679C();

  return v21;
}

id sub_241076E9C()
{
  return sub_241078250(type metadata accessor for MedicationsCurrentDayScheduleCompleteView);
}

uint64_t type metadata accessor for MedicationsCurrentDayScheduleCompleteView()
{
  return self;
}

id sub_241076F24()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell____lazy_storage___gradientLayer;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell____lazy_storage___gradientLayer);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell____lazy_storage___gradientLayer);
  }
  else
  {
    id v4 = sub_241076F84();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_241076F84()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157D0]), sel_init);
  sub_24106D4D0(0, &qword_26B005FC8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24116C380;
  sub_241024708(0, (unint64_t *)&unk_26B007010);
  uint64_t v2 = (void *)sub_241161270();
  id v3 = objc_msgSend(v2, sel_CGColor);

  type metadata accessor for CGColor(0);
  uint64_t v5 = v4;
  *(void *)(v1 + 56) = v4;
  *(void *)(v1 + 32) = v3;
  id v6 = (void *)sub_241161280();
  id v7 = objc_msgSend(v6, sel_CGColor);

  *(void *)(v1 + 88) = v5;
  *(void *)(v1 + 64) = v7;
  uint64_t v8 = (void *)sub_241161260();
  id v9 = objc_msgSend(v8, sel_CGColor);

  *(void *)(v1 + 120) = v5;
  *(void *)(v1 + 96) = v9;
  uint64_t v10 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setColors_, v10);

  objc_msgSend(v0, sel_setStartPoint_, 0.0, 0.5);
  objc_msgSend(v0, sel_setEndPoint_, 1.0, 0.5);
  return v0;
}

id sub_241077118()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell____lazy_storage___scheduleCompleteView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell____lazy_storage___scheduleCompleteView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell____lazy_storage___scheduleCompleteView);
  }
  else
  {
    type metadata accessor for MedicationsCurrentDayScheduleCompleteView();
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_2410771A0()
{
  uint64_t v1 = sub_24115F790();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell_item;
  swift_beginAccess();
  sub_241061700(v5, (uint64_t)v23);
  if (v23[3])
  {
    sub_2410787D4();
    type metadata accessor for MedicationsCurrentDayScheduleCompleteItem();
    if (swift_dynamicCast())
    {
      uint64_t v6 = v22;
      id v7 = (char *)sub_241077118();
      uint64_t v8 = *(void **)(v6 + 32);
      id v9 = *(void **)&v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_imageView];
      swift_bridgeObjectRetain();
      id v10 = v8;
      objc_msgSend(v9, sel_setImage_, v10);
      id v11 = *(void **)&v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_logLabel];
      unint64_t v12 = (void *)sub_2411606F0();
      objc_msgSend(v11, sel_setText_, v12);
      swift_release();

      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    sub_2410616A4((uint64_t)v23);
  }
  sub_24115F740();
  id v13 = v0;
  uint64_t v14 = sub_24115F780();
  os_log_type_t v15 = sub_241160D30();
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v21 = v1;
    uint64_t v22 = v17;
    uint64_t v18 = v17;
    *(_DWORD *)id v16 = 136315138;
    sub_241061700(v5, (uint64_t)v23);
    sub_24106163C();
    uint64_t v19 = sub_241160770();
    v23[0] = sub_24101F0A4(v19, v20, &v22);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v14, v15, "Incorrect view model for MedicationsCurrentDayScheduleCompleteItem: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v18, -1, -1);
    MEMORY[0x2456180C0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

void sub_24107768C()
{
  objc_msgSend(v0, sel_setClipsToBounds_, 1);
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = objc_msgSend(v1, sel_layer);

  id v3 = sub_241076F24();
  objc_msgSend(v2, sel_addSublayer_, v3);

  id v4 = sub_241076F24();
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v4, sel_setFrame_);

  id v5 = objc_msgSend(v0, sel_contentView);
  id v6 = sub_241077118();
  objc_msgSend(v5, sel_addSubview_, v6);

  id v7 = sub_241077118();
  id v8 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v7, sel_hk_alignConstraintsWithView_insets_, v8, 16.0, 16.0, 16.0, 16.0);
}

id sub_2410777EC()
{
  return sub_241078250(type metadata accessor for MedicationsCurrentDayScheduleCompleteCell);
}

uint64_t type metadata accessor for MedicationsCurrentDayScheduleCompleteCell()
{
  return self;
}

uint64_t sub_241077884@<X0>(uint64_t a1@<X8>)
{
  return sub_2410782C8(&OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell_item, a1);
}

uint64_t sub_241077890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241078338(a1, a2, a3, &OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteCell_item, (void (*)(uint64_t))sub_2410771A0);
}

uint64_t (*sub_2410778B0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241077910;
}

uint64_t sub_241077910(uint64_t a1, char a2)
{
  return sub_241078424(a1, a2, (uint64_t (*)(uint64_t))sub_2410771A0);
}

unint64_t sub_241077928()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2410779B0()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteItem_identifier;
  uint64_t v2 = sub_24115CB50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_241077A74()
{
  return type metadata accessor for MedicationsCurrentDayScheduleCompleteItem();
}

uint64_t type metadata accessor for MedicationsCurrentDayScheduleCompleteItem()
{
  uint64_t result = qword_268CF0C80;
  if (!qword_268CF0C80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241077AC8()
{
  uint64_t result = sub_24115CB50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_241077B70()
{
  uint64_t v1 = *v0;
  sub_241161950();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  id v2 = *(id *)(v1 + 32);
  sub_2411612F0();

  return sub_2411619A0();
}

void sub_241077BF0()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  id v2 = *(id *)(v1 + 32);
  sub_2411612F0();
}

uint64_t sub_241077C78()
{
  sub_241161950();
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  id v2 = *(id *)(v1 + 32);
  sub_2411612F0();

  return sub_2411619A0();
}

uint64_t sub_241077CF4()
{
  uint64_t v1 = *(void *)(*v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_241077D34()
{
  return sub_241077928();
}

uint64_t sub_241077D58(uint64_t *a1, uint64_t *a2)
{
  return sub_24107882C(*a1, *a2);
}

uint64_t sub_241077D64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24115F9D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsDayScheduleCompleteCell_item;
  swift_beginAccess();
  sub_241061700(v10, (uint64_t)v24);
  if (v25)
  {
    sub_2410787D4();
    type metadata accessor for MedicationsDayScheduleCompleteItem();
    if (swift_dynamicCast())
    {
      MEMORY[0x245616EB0]();
      swift_bridgeObjectRetain();
      sub_24115F990();
      uint64_t v25 = v6;
      uint64_t v26 = MEMORY[0x263F81F20];
      id v11 = sub_2410277C0(v24);
      (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(v11, v9, v6);
      MEMORY[0x245616E10](v24);
      id v12 = objc_msgSend(v1, sel_contentView);
      id v13 = objc_msgSend(self, sel_systemGray5Color);
      objc_msgSend(v12, sel_setBackgroundColor_, v13);
      swift_release();

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  else
  {
    sub_2410616A4((uint64_t)v24);
  }
  sub_24115F740();
  id v15 = v1;
  id v16 = sub_24115F780();
  os_log_type_t v17 = sub_241160D30();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v2;
    uint64_t v23 = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    sub_241061700(v10, (uint64_t)v24);
    sub_24106163C();
    uint64_t v20 = sub_241160770();
    v24[0] = sub_24101F0A4(v20, v21, &v23);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v16, v17, "Incorrect view model for MedicationsDayScheduleCompleteItem: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v19, -1, -1);
    MEMORY[0x2456180C0](v18, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v22);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id sub_241078238()
{
  return sub_241078250(type metadata accessor for MedicationsDayScheduleCompleteCell);
}

id sub_241078250(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsDayScheduleCompleteCell()
{
  return self;
}

uint64_t sub_2410782BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2410782C8(&OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsDayScheduleCompleteCell_item, a1);
}

uint64_t sub_2410782C8@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return sub_241061700(v4, a2);
}

uint64_t sub_241078318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241078338(a1, a2, a3, &OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsDayScheduleCompleteCell_item, (void (*)(uint64_t))sub_241077D64);
}

uint64_t sub_241078338(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t))
{
  uint64_t v8 = v5 + *a4;
  swift_beginAccess();
  sub_2410615D8(a1, v8);
  uint64_t v9 = swift_endAccess();
  a5(v9);
  return sub_2410616A4(a1);
}

uint64_t (*sub_2410783AC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_24107840C;
}

uint64_t sub_24107840C(uint64_t a1, char a2)
{
  return sub_241078424(a1, a2, (uint64_t (*)(uint64_t))sub_241077D64);
}

uint64_t sub_241078424(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

unint64_t sub_241078468()
{
  return 0xD000000000000018;
}

uint64_t sub_2410784F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationsDayScheduleCompleteItem()
{
  return self;
}

uint64_t sub_24107855C()
{
  return sub_2411619A0();
}

uint64_t sub_2410785BC()
{
  swift_bridgeObjectRetain();
  sub_241160830();

  return swift_bridgeObjectRelease();
}

uint64_t sub_241078618()
{
  return sub_2411619A0();
}

uint64_t sub_241078674()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_2410786A8()
{
  return sub_241078468();
}

uint64_t sub_2410786CC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16)
    && *(void *)(*(void *)a1 + 24) == *(void *)(*(void *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_241161890();
  }
}

uint64_t sub_2410786F8(uint64_t a1, uint64_t a2)
{
  return sub_24107878C(&qword_268CF0C98, a2, (void (*)(uint64_t))type metadata accessor for MedicationsDayScheduleCompleteItem);
}

uint64_t sub_241078740()
{
  return sub_24107878C(&qword_268CF0CA0, 255, (void (*)(uint64_t))type metadata accessor for MedicationsCurrentDayScheduleCompleteItem);
}

uint64_t sub_24107878C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2410787D4()
{
  unint64_t result = qword_26B0069A8;
  if (!qword_26B0069A8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0069A8);
  }
  return result;
}

uint64_t sub_24107882C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (!v2 && (sub_241161890() & 1) == 0) {
    return 0;
  }
  sub_241024708(0, (unint64_t *)&qword_26B007218);
  return sub_2411612E0() & 1;
}

void sub_2410788AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_logLabel;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  sub_241160730();
  swift_bridgeObjectRetain();
  sub_241160860();
  id v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  id v6 = objc_msgSend(self, sel_systemWhiteColor);
  objc_msgSend(v4, sel_setTextColor_, v6);

  sub_241024708(0, &qword_26B007000);
  uint64_t v7 = (void *)sub_2411611F0();
  objc_msgSend(v4, sel_setFont_, v7);

  *(void *)&v1[v2] = v4;
  uint64_t v8 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationsCurrentDayScheduleCompleteView_imageView;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v9, sel_setContentMode_, 1);
  *(void *)&v1[v8] = v9;

  sub_2411616B0();
  __break(1u);
}

uint64_t sub_241078B28()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24115FD60();
  swift_release();

  return swift_release();
}

uint64_t sub_241078BA0()
{
  return sub_241078BC8();
}

uint64_t sub_241078BB4()
{
  return sub_241078BC8();
}

uint64_t sub_241078BC8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24115FD60();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_241078C34()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24115FD60();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_241078CA8()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider____lazy_storage___interactiveTimelineDataSource;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider____lazy_storage___interactiveTimelineDataSource))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider____lazy_storage___interactiveTimelineDataSource);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for InteractiveTimelineDataSource();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v2 = sub_2410F64D4(v4);
    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

char *sub_241078D44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v132 = a3;
  uint64_t v133 = a4;
  uint64_t v134 = a2;
  id v114 = a1;
  uint64_t v130 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_24107FBD8(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v127 = (char *)&v101 - v7;
  sub_24107FC3C(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v124 = v8;
  uint64_t v125 = v9;
  MEMORY[0x270FA5388](v8);
  id v122 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24107FCE8(0, &qword_26B006DE0, (uint64_t (*)(uint64_t))sub_24107FC3C, sub_24107FD68, MEMORY[0x263EFDAF8]);
  uint64_t v126 = v11;
  uint64_t v128 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v121 = (char *)&v101 - v12;
  sub_24107FD9C();
  uint64_t v129 = v13;
  uint64_t v131 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  int v123 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_241160420();
  uint64_t v119 = *(void *)(v15 - 8);
  uint64_t v120 = v15;
  MEMORY[0x270FA5388](v15);
  id v118 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_24115CBA0();
  uint64_t v116 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v115 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24115CCC0();
  MEMORY[0x270FA5388](v18 - 8);
  id v113 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_2411605E0();
  MEMORY[0x270FA5388](v20 - 8);
  id v112 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24115F3F0();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v111 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24107E184();
  uint64_t v109 = v24;
  uint64_t v108 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  id v107 = (char *)&v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263EFDE58];
  sub_24107FBD8(0, &qword_26B006EC8, (uint64_t (*)(uint64_t))sub_24103B990, MEMORY[0x263EFDE58]);
  uint64_t v106 = v27;
  uint64_t v105 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v104 = (char *)&v101 - v28;
  sub_24107FBD8(0, &qword_26B006EC0, (uint64_t (*)(uint64_t))sub_24103BA3C, v26);
  uint64_t v103 = v29;
  uint64_t v102 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  unint64_t v31 = (char *)&v101 - v30;
  sub_24107FBD8(0, &qword_26B006EB8, MEMORY[0x263F07490], v26);
  uint64_t v33 = v32;
  uint64_t v34 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v101 - v35;
  uint64_t v37 = sub_24115CB10();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  os_log_type_t v41 = (char *)&v101 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)&v101 - v42;
  uint64_t v110 = (char *)&v101 - v42;
  *(void *)&v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_hidableRoomDataSource] = 0;
  *(void *)&v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_hasMedicationsCancellable] = 0;
  uint64_t v44 = &v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider__currentDate];
  uint64_t v45 = v5;
  sub_24115CB00();
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v41, v43, v37);
  sub_24115FD30();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v43, v37);
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v44, v36, v33);
  uint64_t v46 = &v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider__currentDayDoseEvents];
  uint64_t v47 = (void *)MEMORY[0x263F8EE78];
  id v136 = (id)MEMORY[0x263F8EE78];
  sub_24103BA3C(0);
  sub_24115FD30();
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v46, v31, v103);
  uint64_t v48 = &v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider__currentDayScheduleItems];
  id v136 = v47;
  sub_24103B990(0);
  uint64_t v49 = v104;
  sub_24115FD30();
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v48, v49, v106);
  unint64_t v50 = &v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider__onboardingCompleted];
  LOBYTE(v136) = 2;
  sub_24101F6B8(0, &qword_26B007428, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
  unint64_t v51 = v107;
  sub_24115FD30();
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v50, v51, v109);
  *(void *)&v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider____lazy_storage___interactiveTimelineDataSource] = 0;
  id v52 = v114;
  *(void *)&v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore] = v114;
  sub_2410280A4(v134, (uint64_t)&v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_pinnedContentManager]);
  uint64_t v53 = v133;
  *(void *)&v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_listManager] = v132;
  *(void *)&v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_analyticsManager] = v53;
  sub_24115F0C0();
  id v54 = v52;
  swift_retain();
  swift_retain();
  sub_24115F0B0();
  uint64_t v55 = (void *)sub_24115F080();
  swift_release();
  *(void *)&v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleControl] = v55;
  sub_24115F3E0();
  uint64_t v56 = (objc_class *)sub_24115F420();
  id v57 = objc_allocWithZone(v56);
  *(void *)&v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleControlObserver] = sub_24115F410();
  sub_24115F3D0();
  id v58 = objc_allocWithZone(v56);
  uint64_t v59 = (void *)sub_24115F410();
  *(void *)&v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleControlAddModifyObserver] = v59;
  sub_24115F320();
  swift_allocObject();
  id v60 = v55;
  id v61 = v59;
  *(void *)&v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleProvider] = sub_24115F310();
  sub_24115F0B0();
  uint64_t v62 = sub_24115F090();
  swift_release();
  *(void *)&v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_timeZoneProvider] = v62;
  uint64_t v63 = v116;
  int v64 = v115;
  uint64_t v65 = v117;
  (*(void (**)(char *, void, uint64_t))(v116 + 104))(v115, *MEMORY[0x263F07740], v117);
  id v66 = v54;
  id v114 = v66;
  sub_24115CBB0();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
  sub_24115CB00();
  uint64_t v67 = (uint64_t)v112;
  sub_241160590();
  id v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A130]), sel_init);
  type metadata accessor for MedicationsTimelineDataProvider();
  swift_allocObject();
  *(void *)&v45[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_timelineDataProvider] = sub_2410334B8(v66, 9, v67, v68);

  uint64_t v69 = (objc_class *)type metadata accessor for MedicationCategoryDataSourceProvider();
  v135.receiver = v45;
  v135.super_class = v69;
  id v70 = objc_msgSendSuper2(&v135, sel_init);
  uint64_t v71 = self;
  unint64_t v72 = (char *)v70;
  id v73 = objc_msgSend(v71, sel_defaultCenter);
  objc_msgSend(v73, sel_addObserver_selector_name_object_, v72, sel_timeZoneChanged, *MEMORY[0x263EFF5D0], 0);

  uint64_t v74 = *(void *)&v72[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_timelineDataProvider];
  uint64_t v75 = v72;
  swift_retain();
  sub_241113798(v75, v74);
  swift_release();

  uint64_t v117 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleControl;
  uint64_t v76 = *(void **)&v75[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleControl];
  uint64_t v77 = *(void **)&v75[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleControlObserver];
  uint64_t v115 = (char *)sub_24102A8B8();
  uint64_t v78 = *MEMORY[0x263F8F060];
  uint64_t v79 = v119;
  uint64_t v116 = *(void *)(v119 + 104);
  id v80 = v118;
  uint64_t v81 = v120;
  ((void (*)(char *, uint64_t, uint64_t))v116)(v118, v78, v120);
  id v82 = v76;
  id v83 = v77;
  uint64_t v84 = (void *)sub_241160F10();
  id v85 = *(void (**)(char *, uint64_t))(v79 + 8);
  v85(v80, v81);
  objc_msgSend(v82, sel_registerObserver_queue_, v83, v84);

  uint64_t v86 = *(void **)&v75[v117];
  uint64_t v87 = *(void **)&v75[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleControlAddModifyObserver];
  ((void (*)(char *, uint64_t, uint64_t))v116)(v80, v78, v81);
  id v88 = v86;
  id v89 = v87;
  id v90 = (void *)sub_241160F10();
  v85(v80, v81);
  objc_msgSend(v88, sel_registerObserver_queue_, v89, v90);

  id v136 = (id)sub_24115F630();
  sub_24102BDBC();
  sub_24102BE24();
  uint64_t v91 = v122;
  sub_24115FE70();
  swift_release();
  sub_24107FD68();
  uint64_t v92 = v121;
  uint64_t v93 = v124;
  sub_24115FF30();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v91, v93);
  id v136 = (id)sub_241160EF0();
  uint64_t v94 = sub_241160EB0();
  uint64_t v95 = (uint64_t)v127;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v127, 1, 1, v94);
  sub_24107FE9C();
  sub_24107FFB0((unint64_t *)&qword_26B007330, (void (*)(uint64_t))sub_24102A8B8);
  id v96 = v123;
  uint64_t v97 = v126;
  sub_24115FF10();
  sub_24107FF38(v95, (unint64_t *)&qword_26B0071C0, v130);

  (*(void (**)(char *, uint64_t))(v128 + 8))(v92, v97);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_24107FFB0(&qword_268CF0E18, (void (*)(uint64_t))sub_24107FD9C);
  uint64_t v98 = v129;
  uint64_t v99 = sub_24115FF60();

  swift_release();
  swift_release();
  swift_release();

  sub_24101F178(v134);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v96, v98);
  *(void *)&v75[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_hasMedicationsCancellable] = v99;
  swift_release();
  return v75;
}

uint64_t sub_241079D6C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = sub_24115F6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = sub_24115F6A0();
  if (v8 >> 62) {
    uint64_t v9 = sub_2411616E0();
  }
  else {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (v9)
  {
    BOOL v10 = 1;
  }
  else
  {
    unint64_t v11 = sub_24115F640();
    if (v11 >> 62) {
      uint64_t v12 = sub_2411616E0();
    }
    else {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    BOOL v10 = v12 != 0;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v10;
  return result;
}

void sub_241079EE8(char *a1, uint64_t a2)
{
  sub_24107FCE8(0, &qword_268CF0D88, (uint64_t (*)(uint64_t))sub_24107F7C0, sub_24107F830, MEMORY[0x263F43E48]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = &v13[-v7];
  char v9 = *a1;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x2456181C0](a2 + 16);
  if (v10)
  {
    unint64_t v11 = (void *)v10;
    swift_getKeyPath();
    swift_getKeyPath();
    v13[7] = v9;
    uint64_t v12 = v11;
    sub_24115FD70();
    if (*(void *)&v12[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_hidableRoomDataSource])
    {
      (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F43E40], v5);
      swift_retain();
      sub_24115DBA0();

      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_24107A0AC(void *a1)
{
  sub_24107FCE8(0, (unint64_t *)&unk_268CF0D88, (uint64_t (*)(uint64_t))sub_24107F7C0, sub_24107F830, MEMORY[0x263F43E48]);
  uint64_t v112 = *(void *)(v3 - 8);
  uint64_t v113 = v3;
  MEMORY[0x270FA5388](v3);
  id v114 = (char *)&v96 - v4;
  uint64_t v5 = sub_24115EDA0();
  uint64_t v108 = *(void *)(v5 - 8);
  uint64_t v109 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v110 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24107FBD8(0, &qword_26B006E90, MEMORY[0x263F07490], MEMORY[0x263EFDE48]);
  uint64_t v104 = *(v7 - 1);
  id v105 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v103 = (char *)&v96 - v8;
  id v116 = a1;
  uint64_t v9 = sub_24107D0F0((uint64_t)a1);
  uint64_t v115 = v10;
  sub_241160E20();
  uint64_t v117 = v1;
  uint64_t v101 = *(uint64_t **)(v1
                     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore);
  unint64_t v11 = (void *)sub_241160CB0();
  id v12 = objc_allocWithZone((Class)type metadata accessor for MedicationRoomOnboardingDataSource());
  uint64_t v13 = sub_241119604();
  sub_24101A6BC(v121, v122);
  id v14 = v13;
  uint64_t v15 = v9;
  uint64_t v16 = (void *)sub_24115CE50();
  objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF270]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v14, v16, 0, 0);

  uint64_t v17 = (void *)sub_24115E540();
  sub_24101F178((uint64_t)v121);
  swift_unknownObjectRetain();
  sub_241160E20();
  sub_24101A6BC(v121, v122);
  uint64_t v18 = (void *)sub_24115CE50();
  uint64_t v19 = (objc_class *)type metadata accessor for CHRAddAccountDataSource();
  objc_allocWithZone(v19);
  id v20 = v18;
  uint64_t v21 = (void *)sub_24106CB48(v20);

  sub_24101F178((uint64_t)v121);
  id v22 = v17;
  uint64_t v23 = sub_241052670(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v25 = v23[2];
  unint64_t v24 = v23[3];
  unint64_t v26 = v25 + 1;
  if (v25 >= v24 >> 1) {
    uint64_t v23 = sub_241052670((void *)(v24 > 1), v25 + 1, 1, v23);
  }
  uint64_t v27 = sub_24107FFB0((unint64_t *)&unk_268CF0DA0, (void (*)(uint64_t))type metadata accessor for MedicationRoomOnboardingDataSource);
  void v23[2] = v26;
  uint64_t v28 = &v23[2 * v25];
  v28[4] = v22;
  v28[5] = v27;
  if (v15)
  {
    unint64_t v29 = v23[3];
    swift_unknownObjectRetain();
    if (v26 >= v29 >> 1) {
      uint64_t v23 = sub_241052670((void *)(v29 > 1), v25 + 2, 1, v23);
    }
    void v23[2] = v25 + 2;
    uint64_t v30 = &v23[2 * v26];
    uint64_t v31 = v115;
    v30[4] = v15;
    v30[5] = v31;
  }
  unint64_t v32 = v23[2];
  unint64_t v33 = v23[3];
  id v34 = v21;
  Class v107 = v19;
  if (v32 >= v33 >> 1) {
    uint64_t v23 = sub_241052670((void *)(v33 > 1), v32 + 1, 1, v23);
  }
  uint64_t v35 = sub_24107FFB0((unint64_t *)&unk_268CF0DA8, (void (*)(uint64_t))type metadata accessor for CHRAddAccountDataSource);
  void v23[2] = v32 + 1;
  uint64_t v36 = &v23[2 * v32];
  v36[4] = v34;
  v36[5] = v35;
  uint64_t v102 = v35;

  swift_unknownObjectRelease();
  uint64_t v106 = sub_24115E1C0();
  swift_allocObject();
  uint64_t v111 = sub_24115E1E0();
  long long v118 = xmmword_24116C6B0;
  uint64_t v37 = v117;
  uint64_t v38 = sub_241078CA8();
  uint64_t v39 = MEMORY[0x263F440A0];
  uint64_t v119 = v38;
  v120[0] = MEMORY[0x263F440A0];
  uint64_t v40 = *(void *)(v37 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_listManager);
  os_log_type_t v41 = *(void **)(v37
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_analyticsManager);
  sub_24115EDF0();
  swift_allocObject();
  swift_retain();
  uint64_t v42 = v101;
  id v43 = v116;
  swift_retain();
  uint64_t v44 = sub_24115EDE0();
  uint64_t v45 = sub_24107FFB0((unint64_t *)&unk_268CF0DB0, MEMORY[0x263F44E70]);
  v120[1] = v44;
  v120[2] = v45;
  sub_24115EE90();
  swift_allocObject();
  swift_retain();
  uint64_t v46 = v42;
  id v47 = v43;
  swift_retain();
  id v116 = v41;
  uint64_t v48 = sub_24115EE80();
  uint64_t v49 = sub_24107FFB0((unint64_t *)&unk_268CF0DB8, MEMORY[0x263F44E98]);
  v120[3] = v48;
  v120[4] = v49;
  uint64_t v50 = *(void *)(v37
                  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_scheduleProvider);
  type metadata accessor for LocalScheduleUnavailableDataSource();
  swift_allocObject();
  swift_retain();
  swift_retain();
  v120[5] = sub_241113EB4(v40, v50);
  v120[6] = v39;
  sub_24115F0C0();
  swift_retain();
  sub_24115F0B0();
  unint64_t v51 = (void *)sub_24115F0A0();
  swift_release();
  type metadata accessor for RemoteScheduleUnavailableDataSource();
  swift_allocObject();
  swift_retain();
  v120[7] = sub_24114856C(v40, v51, v50);
  v120[8] = v39;
  self;
  uint64_t v52 = swift_dynamicCastObjCClass();
  uint64_t v100 = v15;
  if (v52)
  {
    uint64_t v53 = (void *)v52;
    uint64_t v101 = &v119;
    type metadata accessor for ExpiringScheduleDataSource();
    swift_allocObject();
    swift_retain();
    id v54 = v46;
    id v55 = v47;
    v120[9] = ExpiringScheduleDataSource.init(healthStore:listManager:viewController:)(v54, v40, v53);
    v120[10] = v39;
    uint64_t v56 = *(void *)(v37
                    + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_timeZoneProvider);
    type metadata accessor for TimeZoneDataSource();
    swift_allocObject();
    id v57 = v54;
    id v58 = v55;
    swift_retain();
    v120[11] = TimeZoneDataSource.init(healthStore:healthTimeZoneProvider:viewController:)(v57, v56, v53);
    v120[12] = v39;
    type metadata accessor for FollowUpNotificationTipDataSource();
    swift_allocObject();
    swift_retain();
    uint64_t v59 = v57;
    id v99 = v58;
    v120[13] = FollowUpNotificationTipDataSource.init(healthStore:listManager:viewController:)(v59, v40, v53);
    v120[14] = v39;
    uint64_t v98 = sub_24107C0EC();
    uint64_t v97 = (void *)sub_24107C6C0();
    swift_beginAccess();
    id v60 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_24107FBD8(0, &qword_26B006EB8, MEMORY[0x263F07490], MEMORY[0x263EFDE58]);
    id v61 = v103;
    sub_24115FD40();
    swift_endAccess();
    sub_24107F460(&qword_26B006E88, &qword_26B006E90, v60);
    id v62 = v105;
    uint64_t v63 = sub_24115FE20();
    (*(void (**)(char *, id))(v104 + 8))(v61, v62);
    type metadata accessor for MedicationDayScheduleDataSource();
    swift_allocObject();
    int v64 = v59;
    id v65 = v99;
    uint64_t v66 = (uint64_t)v116;
    swift_retain();
    id v105 = v65;
    v120[15] = sub_241045518(v65, v97, v98, v64, v63, v66);
    v120[16] = v39;
    v120[17] = sub_24107ECBC();
    v120[18] = v67;
    v120[19] = sub_24107EED8();
    v120[20] = v68;
    v120[21] = sub_24107CE00(v65);
    v120[22] = MEMORY[0x263F444C8];
    sub_24115EC90();
    swift_allocObject();
    swift_retain();
    uint64_t v69 = v64;
    swift_retain();
    uint64_t v70 = sub_24115EC80();
    uint64_t v71 = sub_24107FFB0((unint64_t *)&unk_268CF0DC0, MEMORY[0x263F44E20]);
    v120[23] = v70;
    v120[24] = v71;
    (*(void (**)(char *, void, uint64_t))(v108 + 104))(v110, *MEMORY[0x263F44E50], v109);
    sub_24115EDC0();
    swift_allocObject();
    swift_retain();
    unint64_t v72 = v69;
    swift_retain();
    uint64_t v73 = sub_24115EDB0();
    uint64_t v74 = sub_24107FFB0((unint64_t *)&unk_268CF0DC8, MEMORY[0x263F44E58]);
    v120[25] = v73;
    v120[26] = v74;
    v120[27] = v100;
    v120[28] = v115;
    swift_unknownObjectRetain();
    uint64_t v75 = v105;
    sub_241160E20();
    sub_24101A6BC(v121, v122);
    uint64_t v76 = (void *)sub_24115CE50();
    id v77 = objc_allocWithZone(v107);
    id v78 = v76;
    uint64_t v79 = sub_24106CB48(v78);

    sub_24101F178((uint64_t)v121);
    v120[29] = v79;
    v120[30] = v102;
    v120[31] = sub_24107D630(v75);
    v120[32] = v80;
    v120[33] = sub_24107DAE4();
    uint64_t v81 = MEMORY[0x263F440A0];
    v120[34] = MEMORY[0x263F440A0];
    v120[35] = sub_24107DACC();
    v120[36] = v81;
    uint64_t v82 = v81;
    type metadata accessor for MedicationCategoryOptionsDataSource();
    swift_allocObject();
    uint64_t v83 = 0;
    v120[37] = sub_2410F74C8();
    v120[38] = v82;
    uint64_t v84 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v86 = v120[v83 - 1];
      if (v86)
      {
        uint64_t v87 = v120[v83];
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v84 = sub_241052670(0, v84[2] + 1, 1, v84);
        }
        unint64_t v89 = v84[2];
        unint64_t v88 = v84[3];
        if (v89 >= v88 >> 1) {
          uint64_t v84 = sub_241052670((void *)(v88 > 1), v89 + 1, 1, v84);
        }
        _OWORD v84[2] = v89 + 1;
        id v85 = &v84[2 * v89];
        id v85[4] = v86;
        v85[5] = v87;
      }
      v83 += 2;
    }
    while (v83 != 40);
    sub_24107F8AC(0, (unint64_t *)&unk_268CF0DD0, MEMORY[0x263F8D8F0]);
    swift_arrayDestroy();
    swift_allocObject();
    sub_24115E1E0();
    sub_24107F7C0();
    swift_allocObject();
    uint64_t v90 = v117;
    swift_unknownObjectWeakInit();
    swift_retain();
    swift_retain();
    sub_24115E100();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24115FD60();
    swift_release();
    swift_release();
    uint64_t v91 = (unsigned int *)MEMORY[0x263F43E38];
    if (LOBYTE(v121[0]) != 2) {
      uint64_t v91 = (unsigned int *)MEMORY[0x263F43E40];
    }
    (*(void (**)(char *, void, uint64_t))(v112 + 104))(v114, *v91, v113);
    sub_24107FCE8(0, &qword_268CF0DD8, (uint64_t (*)(uint64_t))sub_24107F7C0, sub_24107F830, MEMORY[0x263F43E58]);
    swift_allocObject();
    swift_retain();
    uint64_t v92 = sub_24115DBB0();
    *(void *)(v90
              + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_hidableRoomDataSource) = v92;
    swift_retain();
    swift_release();
    sub_24107F8AC(0, (unint64_t *)&qword_268CF08B8, MEMORY[0x263F8E0F8]);
    uint64_t v93 = swift_allocObject();
    *(_OWORD *)(v93 + 16) = xmmword_24116B370;
    unint64_t v94 = sub_24107F920();
    *(void *)(v93 + 32) = v92;
    *(void *)(v93 + 40) = v94;
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return v93;
  }
  else
  {
    uint64_t result = sub_2411616B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_24107AF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2456181C0](v3);
  if (result)
  {
    uint64_t v5 = (void *)result;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24115FD60();

    swift_release();
    swift_release();
    return v6 != 2 && (v6 & 1) == 0;
  }
  return result;
}

uint64_t sub_24107AFE4()
{
  swift_getObjectType();
  uint64_t v0 = sub_241160410();
  uint64_t v48 = *(void *)(v0 - 8);
  uint64_t v49 = v0;
  MEMORY[0x270FA5388](v0);
  id v47 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_241160440();
  uint64_t v45 = *(void *)(v2 - 8);
  uint64_t v46 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v44 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241160400();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = sub_241160480();
  uint64_t v41 = *(void *)(v43 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v43);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v40 = (char *)&v36 - v11;
  uint64_t v12 = sub_24115F790();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  uint64_t v16 = sub_24115F780();
  os_log_type_t v17 = sub_241160D50();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v36 = v12;
    uint64_t v37 = v10;
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v38 = v5;
    uint64_t v20 = v19;
    aBlock[0] = v19;
    uint64_t v39 = v4;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v21 = sub_241161A00();
    uint64_t v50 = sub_24101F0A4(v21, v22, aBlock);
    uint64_t v4 = v39;
    sub_241161430();
    uint64_t v10 = v37;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v16, v17, "[%s] observed time zone change notification", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v20;
    uint64_t v5 = v38;
    MEMORY[0x2456180C0](v23, -1, -1);
    MEMORY[0x2456180C0](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v36);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  sub_24102A8B8();
  uint64_t v39 = sub_241160EF0();
  sub_241160470();
  *uint64_t v7 = 250;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F000], v4);
  unint64_t v24 = v40;
  MEMORY[0x2456162F0](v10, v7);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  unint64_t v25 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v26 = v43;
  v25(v10, v43);
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v42;
  *(void *)(v27 + 16) = v42;
  aBlock[4] = (uint64_t)sub_24107F7B8;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24101AFBC;
  uint64_t aBlock[3] = (uint64_t)&unk_26F555E98;
  unint64_t v29 = _Block_copy(aBlock);
  id v30 = v28;
  swift_release();
  uint64_t v31 = v44;
  sub_241160430();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_24107FFB0(&qword_26B0072E0, MEMORY[0x263F8F030]);
  sub_24107FBD8(0, (unint64_t *)&unk_26B0072F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_241024138();
  unint64_t v32 = v47;
  uint64_t v33 = v49;
  sub_2411614F0();
  id v34 = (void *)v39;
  MEMORY[0x245616CD0](v24, v31, v32, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v33);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v46);
  return ((uint64_t (*)(char *, uint64_t))v25)(v24, v26);
}

uint64_t sub_24107B690()
{
  swift_getObjectType();
  uint64_t v0 = sub_241160410();
  uint64_t v48 = *(void *)(v0 - 8);
  uint64_t v49 = v0;
  MEMORY[0x270FA5388](v0);
  id v47 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_241160440();
  uint64_t v45 = *(void *)(v2 - 8);
  uint64_t v46 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v44 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241160400();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = sub_241160480();
  uint64_t v41 = *(void *)(v43 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v43);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v40 = (char *)&v36 - v11;
  uint64_t v12 = sub_24115F790();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  uint64_t v16 = sub_24115F780();
  os_log_type_t v17 = sub_241160D50();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v36 = v12;
    uint64_t v37 = v10;
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v38 = v5;
    uint64_t v20 = v19;
    aBlock[0] = v19;
    uint64_t v39 = v4;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v21 = sub_241161A00();
    uint64_t v50 = sub_24101F0A4(v21, v22, aBlock);
    uint64_t v4 = v39;
    sub_241161430();
    uint64_t v10 = v37;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v16, v17, "[%s] observed day change notification, triggering timeline day update", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v20;
    uint64_t v5 = v38;
    MEMORY[0x2456180C0](v23, -1, -1);
    MEMORY[0x2456180C0](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v36);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  sub_24102A8B8();
  uint64_t v39 = sub_241160EF0();
  sub_241160470();
  *uint64_t v7 = 200;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F000], v4);
  unint64_t v24 = v40;
  MEMORY[0x2456162F0](v10, v7);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  unint64_t v25 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v26 = v43;
  v25(v10, v43);
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v42;
  *(void *)(v27 + 16) = v42;
  aBlock[4] = (uint64_t)sub_24107F7B0;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24101AFBC;
  uint64_t aBlock[3] = (uint64_t)&unk_26F555E48;
  unint64_t v29 = _Block_copy(aBlock);
  id v30 = v28;
  swift_release();
  uint64_t v31 = v44;
  sub_241160430();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_24107FFB0(&qword_26B0072E0, MEMORY[0x263F8F030]);
  sub_24107FBD8(0, (unint64_t *)&unk_26B0072F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_241024138();
  unint64_t v32 = v47;
  uint64_t v33 = v49;
  sub_2411614F0();
  id v34 = (void *)v39;
  MEMORY[0x245616CD0](v24, v31, v32, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v33);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v46);
  return ((uint64_t (*)(char *, uint64_t))v25)(v24, v26);
}

void sub_24107BCF4()
{
  uint64_t v25 = sub_24115CE00();
  uint64_t v0 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_2411605E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241078CA8();
  id v8 = objc_msgSend(*(id *)(*(void *)(v7 + qword_26B006BE0)+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_timelineViewControllers), sel_allObjects);
  type metadata accessor for InteractiveTimelineViewController();
  unint64_t v9 = sub_2411609A0();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v10)
    {
LABEL_3:
      if (v10 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v11 = 0;
        v21[1] = v7;
        unint64_t v22 = v9 & 0xC000000000000001;
        uint64_t v12 = (void (**)(char *, char *, uint64_t))(v4 + 16);
        uint64_t v13 = (void (**)(char *, uint64_t))(v0 + 8);
        uint64_t v14 = (void (**)(char *, uint64_t))(v4 + 8);
        uint64_t v23 = v10;
        unint64_t v24 = v9;
        do
        {
          if (v22) {
            id v15 = (id)MEMORY[0x245617450](v11, v9);
          }
          else {
            id v15 = *(id *)(v9 + 8 * v11 + 32);
          }
          uint64_t v16 = v15;
          ++v11;
          os_log_type_t v17 = sub_241111ADC();
          uint64_t v18 = &v17[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_today];
          swift_beginAccess();
          (*v12)(v6, v18, v3);

          uint64_t v19 = sub_241111ADC();
          char v20 = v19[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state];
          v19[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 3;
          sub_241055AD4(v20);
          sub_24107FFB0((unint64_t *)&qword_268CF09A0, MEMORY[0x263F090E8]);
          sub_241161460();
          MEMORY[0x245612C00](v26 & ~(v26 >> 63), 0);
          sub_241058A5C((uint64_t)v2, 1, 0, 0);
          (*v13)(v2, v25);

          (*v14)(v6, v3);
          unint64_t v9 = v24;
        }
        while (v23 != v11);
        swift_release();
        swift_bridgeObjectRelease();
      }
      return;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_3;
    }
  }
  swift_release();

  swift_bridgeObjectRelease();
}

uint64_t sub_24107C0EC()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263EFDE48];
  sub_24107FBD8(0, &qword_26B006EA0, (uint64_t (*)(uint64_t))sub_24103BA3C, MEMORY[0x263EFDE48]);
  uint64_t v19 = v1;
  MEMORY[0x270FA5388](v1);
  sub_24107FBD8(0, &qword_26B006EB0, (uint64_t (*)(uint64_t))sub_24103B990, v0);
  uint64_t v17 = v2;
  MEMORY[0x270FA5388](v2);
  sub_24107F260();
  uint64_t v16 = v3;
  uint64_t v18 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24107FC70(0, &qword_268CF0D78, (void (*)(uint64_t))sub_24107F260, (void (*)(void))sub_24107F570);
  uint64_t v15 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v15 - v8;
  swift_beginAccess();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263EFDE58];
  sub_24107FBD8(0, &qword_26B006EC8, (uint64_t (*)(uint64_t))sub_24103B990, MEMORY[0x263EFDE58]);
  sub_24115FD40();
  swift_endAccess();
  swift_beginAccess();
  sub_24107FBD8(0, &qword_26B006EC0, (uint64_t (*)(uint64_t))sub_24103BA3C, v10);
  sub_24115FD40();
  swift_endAccess();
  uint64_t v20 = sub_24115EF60();
  sub_24107F3C8();
  sub_24107F460(&qword_26B006EA8, &qword_26B006EB0, (uint64_t (*)(uint64_t))sub_24103B990);
  sub_24107F460(&qword_26B006E98, &qword_26B006EA0, (uint64_t (*)(uint64_t))sub_24103BA3C);
  sub_24107FFB0(&qword_268CF0D48, (void (*)(uint64_t))sub_24107F3C8);
  sub_24115FAC0();
  sub_24107F570();
  uint64_t v11 = v16;
  sub_24115FE70();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v11);
  sub_24107F6F0();
  uint64_t v12 = v15;
  uint64_t v13 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
  return v13;
}

uint64_t sub_24107C52C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_24107FBD8(0, &qword_268CF0D40, MEMORY[0x263F44C68], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = sub_24115EAB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24107F5A4();
  sub_24107F65C(a1 + *(int *)(v11 + 64), (uint64_t)v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24115EA80();
  LOBYTE(a1) = sub_24115EA90();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a2 = a1 & 1;
  return result;
}

uint64_t sub_24107C6C0()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263EFDE48];
  sub_24107FBD8(0, &qword_26B006EA0, (uint64_t (*)(uint64_t))sub_24103BA3C, MEMORY[0x263EFDE48]);
  uint64_t v20 = v1;
  MEMORY[0x270FA5388](v1);
  sub_24107FBD8(0, &qword_26B006EB0, (uint64_t (*)(uint64_t))sub_24103B990, v0);
  uint64_t v16 = v2;
  MEMORY[0x270FA5388](v2);
  sub_24107F260();
  uint64_t v17 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24107F4C4();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v18 = v7;
  uint64_t v19 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263EFDE58];
  sub_24107FBD8(0, &qword_26B006EC8, (uint64_t (*)(uint64_t))sub_24103B990, MEMORY[0x263EFDE58]);
  sub_24115FD40();
  swift_endAccess();
  swift_beginAccess();
  sub_24107FBD8(0, &qword_26B006EC0, (uint64_t (*)(uint64_t))sub_24103BA3C, v11);
  sub_24115FD40();
  swift_endAccess();
  uint64_t v21 = sub_24115EF60();
  sub_24107F3C8();
  sub_24107F460(&qword_26B006EA8, &qword_26B006EB0, (uint64_t (*)(uint64_t))sub_24103B990);
  sub_24107F460(&qword_26B006E98, &qword_26B006EA0, (uint64_t (*)(uint64_t))sub_24103BA3C);
  sub_24107FFB0(&qword_268CF0D48, (void (*)(uint64_t))sub_24107F3C8);
  sub_24115FAC0();
  sub_24107FBD8(0, &qword_268CF0D58, MEMORY[0x263F44D40], MEMORY[0x263F8D488]);
  sub_24107F570();
  uint64_t v12 = v17;
  sub_24115FE70();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v12);
  sub_24107FFB0(&qword_268CF0D68, (void (*)(uint64_t))sub_24107F4C4);
  uint64_t v13 = v18;
  uint64_t v14 = sub_24115FDE0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v13);
  return v14;
}

uint64_t sub_24107CB38@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = sub_24115CD80();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24107FBD8(0, &qword_268CF0D40, MEMORY[0x263F44C68], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = sub_24115EAB0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24107F5A4();
  sub_24107F65C(a1 + *(int *)(v14 + 64), (uint64_t)v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24115EA80();
  sub_24115CD70();
  uint64_t v15 = sub_24115EAA0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *uint64_t v18 = v15;
  return result;
}

uint64_t sub_24107CD74@<X0>(uint64_t *a1@<X8>)
{
  sub_24103BA3C(0);
  sub_24107FFB0(&qword_268CF0E08, sub_24103BA3C);
  uint64_t result = sub_241160C10();
  *a1 = result;
  return result;
}

uint64_t sub_24107CE00(void *a1)
{
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_listManager);
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore);
    uint64_t v7 = *(void *)(v1
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_analyticsManager);
    type metadata accessor for MedicationListCompactDataSource(0);
    swift_allocObject();
    id v8 = a1;
    swift_retain();
    id v9 = v6;
    swift_retain();
    uint64_t v10 = sub_2410D5698(v5, (uint64_t)v9, v4, v7);

    swift_release();
    type metadata accessor for MedicationListRegularDataSource(0);
    swift_allocObject();
    id v11 = v8;
    swift_retain();
    id v12 = v9;
    swift_retain();
    uint64_t v13 = sub_2410D5698(v5, (uint64_t)v12, v4, v7);

    swift_release();
    sub_24107FBD8(0, &qword_268CF0D10, (uint64_t (*)(uint64_t))sub_24107F1F0, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24116B200;
    *(void *)(inited + 32) = 1;
    uint64_t v15 = sub_24107FFB0(&qword_268CF0D20, (void (*)(uint64_t))type metadata accessor for MedicationListCompactDataSource);
    *(void *)(inited + 40) = v10;
    *(void *)(inited + 48) = v15;
    uint64_t v16 = MEMORY[0x263F440A0];
    *(void *)(inited + 56) = MEMORY[0x263F440A0];
    *(void *)(inited + 64) = 2;
    uint64_t v17 = sub_24107FFB0(&qword_268CF0D28, (void (*)(uint64_t))type metadata accessor for MedicationListRegularDataSource);
    *(void *)(inited + 72) = v13;
    *(void *)(inited + 80) = v17;
    *(void *)(inited + 88) = v16;
    sub_241066754(inited);
    swift_setDeallocating();
    sub_24107F1F0();
    swift_retain();
    swift_retain();
    swift_arrayDestroy();
    sub_24115E420();
    swift_allocObject();
    uint64_t v18 = sub_24115E410();
    swift_release();
    swift_release();

    return v18;
  }
  else
  {
    uint64_t result = sub_2411616B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_24107D0F0(uint64_t a1)
{
  uint64_t v41 = a1;
  uint64_t v38 = (uint64_t (*)(uint64_t))MEMORY[0x263F43C08];
  sub_24107FBD8(0, &qword_26B003F10, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v31 - v2;
  uint64_t v4 = sub_24115E2A0();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v35 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24115E710();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (uint64_t *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_24115E260();
  uint64_t v36 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24115E700();
  uint64_t v31 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v31 - v18;
  uint64_t v20 = sub_24115D900();
  uint64_t v32 = *(void *)(v20 - 8);
  uint64_t v33 = v20;
  MEMORY[0x270FA5388](v20);
  unint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115D8F0();
  sub_24115E6F0();
  *id v9 = objc_msgSend(self, sel_medicationDoseEventType);
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F44778], v6);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  sub_24115E230();
  sub_24115E250();
  uint64_t v23 = sub_24115CE40();
  uint64_t v24 = sub_24115CE30();
  uint64_t v44 = v23;
  uint64_t v45 = MEMORY[0x263F45450];
  uint64_t v43 = v24;
  uint64_t v25 = v34;
  id v26 = objc_msgSend(*(id *)(v34+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore), sel_profileIdentifier);
  uint64_t v27 = sub_24115D990();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v3, 1, 1, v27);
  sub_24115DB90();

  sub_24107FF38((uint64_t)v3, &qword_26B003F10, v38);
  sub_2410280A4(v25 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_pinnedContentManager, (uint64_t)v42);
  sub_241160E40();
  uint64_t v28 = v35;
  sub_24115E270();
  uint64_t v29 = sub_24115E240();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v40);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v31);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v33);
  return v29;
}

uint64_t sub_24107D630(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = sub_24115F790();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_resolvedHealthStore);
  if (v8)
  {
    id v9 = v8;
    id v10 = objc_msgSend(self, sel_medicationDoseEventType);
    sub_241160E20();
    sub_24101A6BC(v34, v34[3]);
    sub_24115CE50();
    sub_2410280A4(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_pinnedContentManager, (uint64_t)v33);
    sub_24101F6B8(0, &qword_26B007098, MEMORY[0x263F455D0], MEMORY[0x263F8E0F8]);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_24116B370;
    *(void *)(v11 + 32) = objc_msgSend(v9, sel_profileIdentifier);
    if (qword_26B007268 != -1) {
      swift_once();
    }
    sub_24115C960();
    id v12 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    sub_24115D870();
    swift_allocObject();
    uint64_t v13 = sub_24115D860();
    sub_24101F178((uint64_t)v34);
  }
  else
  {
    sub_24115F740();
    id v14 = a1;
    uint64_t v15 = sub_24115F780();
    os_log_type_t v16 = sub_241160D50();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      int v31 = v17;
      uint64_t v19 = v18;
      uint64_t v32 = swift_slowAlloc();
      v34[0] = v32;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v20 = sub_241161A00();
      v33[0] = sub_24101F0A4(v20, v21, v34);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      v30[1] = v19 + 14;
      id v22 = v14;
      id v23 = objc_msgSend(v22, sel_description);
      uint64_t v24 = v5;
      uint64_t v25 = sub_241160730();
      unint64_t v27 = v26;

      v33[0] = sub_24101F0A4(v25, v27, v34);
      sub_241161430();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v15, (os_log_type_t)v31, "[%s)]: No resolved health store provided by %s", (uint8_t *)v19, 0x16u);
      uint64_t v28 = v32;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v28, -1, -1);
      MEMORY[0x2456180C0](v19, -1, -1);

      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    return 0;
  }
  return v13;
}

void *sub_24107DACC()
{
  return sub_24107DAFC((void (*)(void))type metadata accessor for MedicationCategoryArchivedMedicationsDataSource);
}

void *sub_24107DAE4()
{
  return sub_24107DAFC((void (*)(void))type metadata accessor for MedicationCategoryPDFDataSource);
}

void *sub_24107DAFC(void (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_listManager);
  a1(0);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + qword_26B006D08) = MEMORY[0x263F8EE88];
  *(void *)(v3 + qword_26B006D00) = v2;
  swift_retain_n();
  uint64_t v4 = (void *)sub_24115E4D0();
  uint64_t v5 = *(void (**)(uint64_t))(qword_26B00BC48 + *v4 + 64);
  swift_retain_n();
  v5(v2);
  sub_24115DE50();
  swift_release();
  swift_bridgeObjectRelease();
  sub_241092BE0();
  swift_release();
  swift_release();
  return v4;
}

id sub_24107DC60()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationCategoryDataSourceProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24107DF20()
{
  return type metadata accessor for MedicationCategoryDataSourceProvider();
}

uint64_t type metadata accessor for MedicationCategoryDataSourceProvider()
{
  uint64_t result = qword_26B006CE8;
  if (!qword_26B006CE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24107DF74()
{
  sub_24107FBD8(319, &qword_26B006EB8, MEMORY[0x263F07490], MEMORY[0x263EFDE58]);
  if (v0 <= 0x3F)
  {
    sub_24107FBD8(319, &qword_26B006EC0, (uint64_t (*)(uint64_t))sub_24103BA3C, MEMORY[0x263EFDE58]);
    if (v1 <= 0x3F)
    {
      sub_24107FBD8(319, &qword_26B006EC8, (uint64_t (*)(uint64_t))sub_24103B990, MEMORY[0x263EFDE58]);
      if (v2 <= 0x3F)
      {
        sub_24107E184();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_24107E184()
{
  if (!qword_26B006ED0)
  {
    sub_24101F6B8(255, &qword_26B007428, MEMORY[0x263F8D4F8], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_24115FD80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006ED0);
    }
  }
}

uint64_t sub_24107E200(void *a1)
{
  return sub_24107A0AC(a1);
}

uint64_t sub_24107E228()
{
  return sub_24107E5F8(v0);
}

uint64_t sub_24107E230()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24115FD60();
  swift_release();

  return swift_release();
}

uint64_t sub_24107E2AC(uint64_t a1, void **a2)
{
  uint64_t v4 = sub_24115CB10();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v15 - v9, a1, v4);
  id v12 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v11(v8, (uint64_t)v10, v4);
  id v13 = v12;
  sub_24115FD70();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_24107E418@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24115FD60();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24107E494(uint64_t a1, void **a2)
{
  unint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return sub_24115FD70();
}

uint64_t sub_24107E508@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24115FD60();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24107E588(uint64_t a1, void **a2)
{
  unint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_24115FD70();
}

uint64_t sub_24107E5F8(char *a1)
{
  id v36 = a1;
  uint64_t v42 = sub_24115CCC0();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  id v3 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2411605E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v43 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v35 - v8;
  uint64_t v41 = sub_24115CB10();
  uint64_t v10 = *(void *)(v41 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v41);
  uint64_t v37 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)v35 - v13;
  uint64_t v15 = *(void *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_timelineDataProvider];
  uint64_t v16 = v15 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
  v35[1] = v15;
  uint64_t v38 = v15 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
  swift_beginAccess();
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v17 = v16;
  uint64_t v18 = v4;
  v39(v9, v17, v4);
  id v19 = objc_msgSend(*(id *)(v15 + 40), sel_currentCalendar);
  sub_24115CC50();

  sub_2411605D0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v3, v42);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v42 = v5 + 8;
  v20(v9, v18);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v21 = v41;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v37, v14, v41);
  id v22 = v36;
  sub_24115FD70();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v21);
  uint64_t v23 = (uint64_t)v43;
  v39(v43, v38, v18);
  swift_retain();
  unint64_t v24 = sub_24105DD38(v23);
  unint64_t v26 = v25;
  swift_release();
  v20((char *)v23, v18);
  if (v24 >= 3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    unint64_t v44 = v24;
    id v33 = v22;
    swift_bridgeObjectRetain();
    sub_24115FD70();
    swift_getKeyPath();
    swift_getKeyPath();
    unint64_t v44 = v26;
    id v34 = v33;
    swift_bridgeObjectRetain();
    sub_24115FD70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_24103BAD4(v24);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24115FD60();
    swift_release();
    swift_release();
    if (v44 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    unint64_t v28 = MEMORY[0x263F8EE78];
    if (v27)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      unint64_t v44 = v28;
      id v29 = v22;
      sub_24115FD70();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24115FD60();
    swift_release();
    swift_release();
    if (v44 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v30)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      unint64_t v44 = v28;
      id v32 = v22;
      return sub_24115FD70();
    }
  }
  return result;
}

uint64_t sub_24107EC1C@<X0>(void *a1@<X8>)
{
  return sub_24107E418(a1);
}

uint64_t sub_24107EC44(uint64_t a1, void **a2)
{
  return sub_24107E494(a1, a2);
}

uint64_t sub_24107EC6C@<X0>(void *a1@<X8>)
{
  return sub_24107E418(a1);
}

uint64_t sub_24107EC94(uint64_t a1, void **a2)
{
  return sub_24107E494(a1, a2);
}

uint64_t sub_24107ECBC()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_24107FBD8(0, &qword_26B006E90, MEMORY[0x263F07490], MEMORY[0x263EFDE48]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore);
  swift_beginAccess();
  sub_24107FBD8(0, &qword_26B006EB8, v1, MEMORY[0x263EFDE58]);
  id v8 = v7;
  swift_retain();
  sub_24115FD40();
  swift_endAccess();
  sub_24107F460(&qword_26B006E88, &qword_26B006E90, v1);
  sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_24115E960();
  swift_allocObject();
  swift_retain();
  return sub_24115E950();
}

uint64_t sub_24107EED8()
{
  sub_24107FBD8(0, &qword_26B006EA0, (uint64_t (*)(uint64_t))sub_24103BA3C, MEMORY[0x263EFDE48]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v15 - v4;
  sub_24107F9BC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_24107FBD8(0, &qword_26B006EC0, (uint64_t (*)(uint64_t))sub_24103BA3C, MEMORY[0x263EFDE58]);
  sub_24115FD40();
  swift_endAccess();
  sub_24103BA3C(0);
  sub_24107F460(&qword_26B006E98, &qword_26B006EA0, (uint64_t (*)(uint64_t))sub_24103BA3C);
  sub_24115FE30();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_24107FFB0(&qword_26B006DA0, (void (*)(uint64_t))sub_24107F9BC);
  uint64_t v11 = sub_24115FDD0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v15[1] = v11;
  sub_24107FA88(0, &qword_268CF0DE8, (void (*)(uint64_t))sub_24107FAEC);
  sub_24107FB58();
  sub_24115FE20();
  swift_release();
  uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationCategoryDataSourceProvider_healthStore);
  sub_24115E940();
  swift_allocObject();
  id v13 = v12;
  return sub_24115E930();
}

void sub_24107F1F0()
{
  if (!qword_268CF0D18)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_241067E48();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF0D18);
    }
  }
}

void sub_24107F260()
{
  if (!qword_268CF0D30)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263EFDE48];
    sub_24107FBD8(255, &qword_26B006EB0, (uint64_t (*)(uint64_t))sub_24103B990, MEMORY[0x263EFDE48]);
    sub_24107FBD8(255, &qword_26B006EA0, (uint64_t (*)(uint64_t))sub_24103BA3C, v0);
    sub_24107F3C8();
    sub_24107F460(&qword_26B006EA8, &qword_26B006EB0, (uint64_t (*)(uint64_t))sub_24103B990);
    sub_24107F460(&qword_26B006E98, &qword_26B006EA0, (uint64_t (*)(uint64_t))sub_24103BA3C);
    sub_24107FFB0(&qword_268CF0D48, (void (*)(uint64_t))sub_24107F3C8);
    unint64_t v1 = sub_24115FAB0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268CF0D30);
    }
  }
}

void sub_24107F3C8()
{
  if (!qword_268CF0D38)
  {
    sub_24107FBD8(255, &qword_268CF0D40, MEMORY[0x263F44C68], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0D38);
    }
  }
}

uint64_t sub_24107F460(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24107FBD8(255, a2, a3, MEMORY[0x263EFDE48]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24107F4C4()
{
  if (!qword_268CF0D50)
  {
    sub_24107F260();
    sub_24107FBD8(255, &qword_268CF0D58, MEMORY[0x263F44D40], MEMORY[0x263F8D488]);
    sub_24107F570();
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0D50);
    }
  }
}

uint64_t sub_24107F570()
{
  return sub_24107FFB0(&qword_268CF0D60, (void (*)(uint64_t))sub_24107F260);
}

void sub_24107F5A4()
{
  if (!qword_268CF0D70)
  {
    sub_24103B990(255);
    sub_24103BA3C(255);
    sub_24107FBD8(255, &qword_268CF0D40, MEMORY[0x263F44C68], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268CF0D70);
    }
  }
}

uint64_t sub_24107F65C(uint64_t a1, uint64_t a2)
{
  sub_24107FBD8(0, &qword_268CF0D40, MEMORY[0x263F44C68], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24107F6F0()
{
  unint64_t result = qword_268CF0D80;
  if (!qword_268CF0D80)
  {
    sub_24107FC70(255, &qword_268CF0D78, (void (*)(uint64_t))sub_24107F260, (void (*)(void))sub_24107F570);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0D80);
  }
  return result;
}

uint64_t sub_24107F778()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24107F7B0()
{
}

uint64_t sub_24107F7B8()
{
  return sub_24107E5F8(*(char **)(v0 + 16));
}

void sub_24107F7C0()
{
  if (!qword_268CF0D90)
  {
    sub_24115E1C0();
    unint64_t v0 = sub_24115E110();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0D90);
    }
  }
}

uint64_t sub_24107F830()
{
  return sub_24107FFB0(&qword_268CF0D98, (void (*)(uint64_t))sub_24107F7C0);
}

uint64_t sub_24107F864()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24107F89C(uint64_t a1, uint64_t a2)
{
  return sub_24107AF34(a1, a2, v2);
}

void sub_24107F8AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241027EA8(255, (unint64_t *)&unk_268CF1820);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_24107F920()
{
  unint64_t result = qword_268CF0DE0;
  if (!qword_268CF0DE0)
  {
    sub_24107FCE8(255, &qword_268CF0DD8, (uint64_t (*)(uint64_t))sub_24107F7C0, sub_24107F830, MEMORY[0x263F43E58]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0DE0);
  }
  return result;
}

void sub_24107F9BC()
{
  if (!qword_26B006DA8)
  {
    sub_24107FBD8(255, &qword_26B006EA0, (uint64_t (*)(uint64_t))sub_24103BA3C, MEMORY[0x263EFDE48]);
    sub_24103BA3C(255);
    sub_24107F460(&qword_26B006E98, &qword_26B006EA0, (uint64_t (*)(uint64_t))sub_24103BA3C);
    unint64_t v0 = sub_24115FAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006DA8);
    }
  }
}

void sub_24107FA88(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24115FC20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24107FAEC()
{
  if (!qword_268CF0DF0)
  {
    sub_241027EA8(255, &qword_268CF0DF8);
    unint64_t v0 = sub_241160A10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0DF0);
    }
  }
}

unint64_t sub_24107FB58()
{
  unint64_t result = qword_268CF0E00;
  if (!qword_268CF0E00)
  {
    sub_24107FA88(255, &qword_268CF0DE8, (void (*)(uint64_t))sub_24107FAEC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0E00);
  }
  return result;
}

uint64_t sub_24107FBCC()
{
  return sub_24115F580();
}

void sub_24107FBD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24107FC3C(uint64_t a1)
{
}

void sub_24107FC70(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_24115FB50();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_24107FCE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_24107FD68()
{
  return sub_24107FFB0(&qword_26B006DE8, sub_24107FC3C);
}

void sub_24107FD9C()
{
  if (!qword_268CF0E10)
  {
    sub_24107FCE8(255, &qword_26B006DE0, (uint64_t (*)(uint64_t))sub_24107FC3C, sub_24107FD68, MEMORY[0x263EFDAF8]);
    sub_24102A8B8();
    sub_24107FE9C();
    sub_24107FFB0((unint64_t *)&qword_26B007330, (void (*)(uint64_t))sub_24102A8B8);
    unint64_t v0 = sub_24115FC00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0E10);
    }
  }
}

unint64_t sub_24107FE9C()
{
  unint64_t result = qword_26B006DD8;
  if (!qword_26B006DD8)
  {
    sub_24107FCE8(255, &qword_26B006DE0, (uint64_t (*)(uint64_t))sub_24107FC3C, sub_24107FD68, MEMORY[0x263EFDAF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B006DD8);
  }
  return result;
}

uint64_t sub_24107FF38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_24107FBD8(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_24107FFA8(char *a1)
{
  sub_241079EE8(a1, v1);
}

uint64_t sub_24107FFB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ArchivedMedicationsListViewController()
{
  uint64_t result = qword_268CF0E30;
  if (!qword_268CF0E30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241080050()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2410800A8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_2411616E0())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)MEMORY[0x245617450](0, a2);
LABEL_5:
      unint64_t v6 = v5;
      sub_241024708(0, (unint64_t *)&qword_268CF0868);
      char v7 = sub_2411612E0();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = sub_2411612E0();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      MEMORY[0x245617450](v9, a2);
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = sub_2411612E0();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_241080230(uint64_t a1, void *a2)
{
  *(void *)&v2[qword_268CF0E28] = 0;
  *(void *)&v2[qword_268CF0E20] = a1;
  id v5 = objc_allocWithZone(MEMORY[0x263F82570]);
  swift_retain();
  id v6 = objc_msgSend(v5, sel_init);
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for ArchivedMedicationsListViewController();
  id v7 = objc_msgSendSuper2(&v12, sel_initWithCollectionViewLayout_, v6);

  type metadata accessor for ArchivedMedicationsDataSourceProvider();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  sub_2410816B4(&qword_268CF0EA0, (void (*)(uint64_t))type metadata accessor for ArchivedMedicationsDataSourceProvider);
  swift_retain();
  id v9 = v7;
  id v10 = a2;
  sub_24115E740();

  swift_release();
  return v9;
}

void sub_24108036C(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_268CF0E28] = 0;
  id v4 = a3;

  sub_2411616B0();
  __break(1u);
}

void sub_2410803E4(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for ArchivedMedicationsListViewController();
  id v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_241080440();
}

uint64_t sub_241080440()
{
  uint64_t v0 = sub_241160EE0();
  uint64_t v44 = *(void *)(v0 - 8);
  uint64_t v45 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v43 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102ABF8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v39 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24108146C();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24108158C();
  uint64_t v35 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  objc_super v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241081620();
  uint64_t v37 = v13;
  uint64_t v40 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v34 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410816FC();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v41 = v15;
  uint64_t v42 = v16;
  MEMORY[0x270FA5388](v15);
  id v36 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v18 = (void *)sub_24115F630();
  swift_release();
  id v46 = v18;
  id v19 = (void (*)(uint64_t))MEMORY[0x263F45D68];
  sub_241081940(0, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68]);
  sub_241081524();
  sub_241015E28(&qword_26B0072C0, (unint64_t *)&qword_26B0072C8, v19);
  sub_24115FE70();
  swift_release();
  sub_2410816B4(&qword_268CF0E50, (void (*)(uint64_t))sub_24108146C);
  sub_2410817FC();
  sub_24115FF30();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_2410816B4(&qword_268CF0E60, (void (*)(uint64_t))sub_24108158C);
  uint64_t v21 = v34;
  uint64_t v20 = v35;
  sub_24115FEA0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v46 = (id)sub_241160EF0();
  uint64_t v22 = sub_241160EB0();
  uint64_t v23 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v39, 1, 1, v22);
  sub_2410816B4(&qword_268CF0E70, (void (*)(uint64_t))sub_241081620);
  sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
  unint64_t v25 = v36;
  uint64_t v24 = v37;
  sub_24115FF10();
  sub_241081898(v23, (uint64_t (*)(void))sub_24102ABF8);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v24);
  swift_allocObject();
  uint64_t v26 = v38;
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v27 = v43;
  sub_241160EC0();
  unint64_t v28 = (void *)sub_241160EF0();
  id v46 = v28;
  sub_2410816B4(&qword_268CF0E88, (void (*)(uint64_t))sub_2410816FC);
  uint64_t v29 = v41;
  uint64_t v30 = (void *)sub_24115FDC0();

  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v45);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v29);
  swift_release();
  id v46 = v30;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_241081940(0, &qword_268CF0E90, (void (*)(uint64_t))sub_241081524);
  sub_241015E28(&qword_268CF0E98, &qword_268CF0E90, (void (*)(uint64_t))sub_241081524);
  uint64_t v31 = sub_24115FF60();
  swift_release();
  swift_release();
  *(void *)(v26 + qword_268CF0E28) = v31;
  return swift_release();
}

uint64_t sub_241080BD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24115F640();
  *a1 = result;
  return result;
}

BOOL sub_241080BFC(void *a1)
{
  if (*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return v1 == 0;
}

uint64_t sub_241080C60(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x2456181C0](v1);
  id v3 = v2;
  if (v2)
  {
    id v4 = objc_msgSend(v2, sel_navigationController);

    id v3 = objc_msgSend(v4, sel_topViewController);
  }
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x2456181C0](v1);
  uint64_t v6 = (void *)v5;
  if (v3)
  {
    if (v5)
    {
      sub_241024708(0, (unint64_t *)&qword_268CF0868);
      id v7 = v3;
      char v8 = sub_2411612E0();
    }
    else
    {
      char v8 = 0;
      uint64_t v6 = v3;
    }
  }
  else
  {
    if (!v5)
    {
      char v8 = 1;
      return v8 & 1;
    }
    char v8 = 0;
  }

  return v8 & 1;
}

void sub_241080D80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  id v3 = (void *)MEMORY[0x2456181C0](v2);
  if (v3)
  {
    id v4 = v3;
    id v5 = objc_msgSend(v3, sel_navigationController);
    id v6 = objc_msgSend(v5, sel_topViewController);

    if (v6
      && (sub_241024708(0, (unint64_t *)&qword_268CF0868),
          id v7 = v4,
          id v8 = v6,
          char v9 = sub_2411612E0(),
          v8,
          v8,
          v7,
          (v9 & 1) != 0))
    {
      id v10 = objc_msgSend(v7, sel_navigationController);
      if (v10)
      {
        uint64_t v11 = v10;
      }
    }
    else
    {
      id v12 = objc_msgSend(v4, sel_navigationController);
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = objc_msgSend(v12, sel_viewControllers);

        sub_241024708(0, (unint64_t *)&qword_268CF0868);
        unint64_t v15 = sub_2411609A0();

        if (sub_2410800A8((uint64_t)v4, v15))
        {
          id v16 = objc_msgSend(v4, sel_navigationController);
          if (!v16)
          {

            swift_bridgeObjectRelease();
            return;
          }
          uint64_t v17 = v16;
          id v4 = v4;
          sub_2410819A4(v15);
          swift_bridgeObjectRelease();

          uint64_t v18 = (void *)sub_241160980();
          swift_bridgeObjectRelease();
          objc_msgSend(v17, sel_setViewControllers_, v18);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

void sub_241080FB4(void *a1)
{
  uint64_t v2 = (void *)sub_24115CD90();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  id v3 = (void *)sub_24115CD90();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_24115E720();
    sub_24115E1C0();
    sub_24115DC00();
    swift_release();
    sub_2410280A4((uint64_t)v11, (uint64_t)v8);
    sub_241020840(0, (unint64_t *)&qword_26B0069A8);
    sub_241020840(0, (unint64_t *)&unk_268CF1840);
    if (swift_dynamicCast())
    {
      id v5 = v6;
LABEL_6:
      sub_241027314(v5, (uint64_t)v10);
      sub_24101A6BC(v10, v10[3]);
      sub_24115DD60();

      sub_24101F178((uint64_t)v11);
      sub_24101F178((uint64_t)v10);
      return;
    }
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_241081898((uint64_t)v6, (uint64_t (*)(void))sub_241081404);
    *(void *)&v6[0] = v4;
    sub_241024708(0, (unint64_t *)&qword_268CF1850);
    id v4 = v4;
    if (swift_dynamicCast())
    {
      id v5 = v8;
      goto LABEL_6;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));

    sub_24101F178((uint64_t)v11);
    sub_241081898((uint64_t)v8, (uint64_t (*)(void))sub_241081404);
  }
}

uint64_t sub_2410811D8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_24115CE00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115CDA0();
  id v9 = a3;
  id v10 = a1;
  sub_241080FB4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_2410812D4()
{
}

void sub_241081304(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_241081338()
{
  swift_release();

  return swift_release();
}

id sub_241081378()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArchivedMedicationsListViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2410813B0()
{
  swift_release();

  return swift_release();
}

uint64_t sub_2410813FC()
{
  return type metadata accessor for ArchivedMedicationsListViewController();
}

void sub_241081404()
{
  if (!qword_268CF0C28)
  {
    sub_241020840(255, (unint64_t *)&unk_268CF1840);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0C28);
    }
  }
}

void sub_24108146C()
{
  if (!qword_268CF0E40)
  {
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F45D68];
    sub_241081940(255, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68]);
    sub_241081524();
    sub_241015E28(&qword_26B0072C0, (unint64_t *)&qword_26B0072C8, v0);
    unint64_t v1 = sub_24115FB50();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_268CF0E40);
    }
  }
}

void sub_241081524()
{
  if (!qword_26B006180)
  {
    sub_241024708(255, &qword_26B006188);
    unint64_t v0 = sub_241160A10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006180);
    }
  }
}

void sub_24108158C()
{
  if (!qword_268CF0E48)
  {
    sub_24108146C();
    sub_2410816B4(&qword_268CF0E50, (void (*)(uint64_t))sub_24108146C);
    unint64_t v0 = sub_24115FB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0E48);
    }
  }
}

void sub_241081620()
{
  if (!qword_268CF0E58)
  {
    sub_24108158C();
    sub_2410816B4(&qword_268CF0E60, (void (*)(uint64_t))sub_24108158C);
    unint64_t v0 = sub_24115FB80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0E58);
    }
  }
}

uint64_t sub_2410816B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2410816FC()
{
  if (!qword_268CF0E68)
  {
    sub_241081620();
    sub_241024708(255, (unint64_t *)&qword_26B007340);
    sub_2410816B4(&qword_268CF0E70, (void (*)(uint64_t))sub_241081620);
    sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
    unint64_t v0 = sub_24115FC00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0E68);
    }
  }
}

unint64_t sub_2410817FC()
{
  unint64_t result = qword_268CF0E78;
  if (!qword_268CF0E78)
  {
    sub_241081524();
    sub_241023228(&qword_268CF0E80, &qword_26B006188);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0E78);
  }
  return result;
}

uint64_t sub_241081898(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2410818F8()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241081930()
{
  return sub_241080C60(v0);
}

void sub_241081938(uint64_t a1)
{
  sub_241080D80(a1, v1);
}

void sub_241081940(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24115FC20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2410819A4(unint64_t a1)
{
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x245617450](v3, a1);
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        sub_241024708(0, (unint64_t *)&qword_268CF0868);
        if (sub_2411612E0())
        {
        }
        else
        {
          sub_241161640();
          sub_241161670();
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_241161680();
          sub_241161650();
        }
        ++v3;
        if (v7 == v2) {
          return v9;
        }
      }
      if (v3 < *(void *)(v4 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = sub_2411616E0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

void sub_241081B34(char a1)
{
  if (a1 != 2)
  {
    char v2 = a1 & 1;
    sub_241087584(0, qword_26B0070C8, (uint64_t (*)(uint64_t))sub_241067D30, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24116B370;
    if (qword_26B007030 != -1) {
      swift_once();
    }
    NSBundle.bundleName.getter();
    sub_241160860();
    sub_241160860();
    sub_241161590();
    *(void *)(inited + 96) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(inited + 72) = v2;
    sub_241061D00(inited);
    uint64_t v4 = (void *)sub_241160620();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_addUserInfoEntriesFromDictionary_, v4);
  }
}

uint64_t sub_241081CC4()
{
  return sub_241081D04();
}

uint64_t sub_241081CE0()
{
  return sub_241081D04();
}

uint64_t sub_241081D04()
{
  id v1 = objc_msgSend(v0, sel_userInfo);
  uint64_t v2 = MEMORY[0x263F8EE58];
  if (!v1)
  {
    long long v10 = 0u;
    long long v11 = 0u;
LABEL_13:
    sub_2410873BC((uint64_t)&v10, (uint64_t)&qword_26B0073D0, v2 + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24101F6B8);
    return 0;
  }
  unint64_t v3 = v1;
  uint64_t v4 = sub_241160630();

  if (qword_26B007030 != -1) {
    swift_once();
  }
  *(void *)&v9[0] = NSBundle.bundleName.getter();
  *((void *)&v9[0] + 1) = v5;
  sub_241160860();
  sub_241160860();
  long long v10 = v9[0];
  sub_241161590();
  if (*(void *)(v4 + 16) && (unint64_t v6 = sub_24106289C((uint64_t)v9), (v7 & 1) != 0))
  {
    sub_24101F1C8(*(void *)(v4 + 56) + 32 * v6, (uint64_t)&v10);
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  sub_241067C70((uint64_t)v9);
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1)) {
    goto LABEL_13;
  }
  if (swift_dynamicCast()) {
    return *(void *)&v9[0];
  }
  else {
    return 0;
  }
}

void sub_241081ED4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    unint64_t v3 = v2;
    sub_241087584(0, qword_26B0070C8, (uint64_t (*)(uint64_t))sub_241067D30, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24116B370;
    if (qword_26B007030 != -1) {
      swift_once();
    }
    NSBundle.bundleName.getter();
    sub_241160860();
    sub_241160860();
    uint64_t v7 = MEMORY[0x263F8D310];
    sub_241161590();
    *(void *)(inited + 96) = v7;
    *(void *)(inited + 72) = a1;
    *(void *)(inited + 80) = a2;
    sub_241061D00(inited);
    id v8 = (void *)sub_241160620();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_addUserInfoEntriesFromDictionary_, v8);
  }
}

uint64_t sub_241082060()
{
  id v1 = objc_msgSend(v0, sel_userInfo);
  uint64_t v2 = MEMORY[0x263F8EE58];
  if (!v1)
  {
    long long v10 = 0u;
    long long v11 = 0u;
LABEL_13:
    sub_2410873BC((uint64_t)&v10, (uint64_t)&qword_26B0073D0, v2 + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24101F6B8);
    return 0;
  }
  unint64_t v3 = v1;
  uint64_t v4 = sub_241160630();

  if (qword_26B007030 != -1) {
    swift_once();
  }
  *(void *)&v9[0] = NSBundle.bundleName.getter();
  *((void *)&v9[0] + 1) = v5;
  sub_241160860();
  sub_241160860();
  long long v10 = v9[0];
  sub_241161590();
  if (*(void *)(v4 + 16) && (unint64_t v6 = sub_24106289C((uint64_t)v9), (v7 & 1) != 0))
  {
    sub_24101F1C8(*(void *)(v4 + 56) + 32 * v6, (uint64_t)&v10);
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  sub_241067C70((uint64_t)v9);
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1)) {
    goto LABEL_13;
  }
  if (swift_dynamicCast()) {
    return *(void *)&v9[0];
  }
  else {
    return 0;
  }
}

void sub_24108223C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    sub_241087584(0, qword_26B0070C8, (uint64_t (*)(uint64_t))sub_241067D30, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24116B370;
    if (qword_26B007030 != -1) {
      swift_once();
    }
    NSBundle.bundleName.getter();
    sub_241160860();
    sub_241160860();
    sub_241161590();
    *(void *)(inited + 96) = MEMORY[0x263F8D6C8];
    *(void *)(inited + 72) = a1;
    sub_241061D00(inited);
    uint64_t v5 = (void *)sub_241160620();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v5);
  }
}

uint64_t sub_2410823CC@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_userInfo);
  uint64_t v4 = MEMORY[0x263F8EE58];
  if (v3)
  {
    uint64_t v5 = v3;
    uint64_t v6 = sub_241160630();

    if (qword_26B007030 != -1) {
      swift_once();
    }
    v14[0] = NSBundle.bundleName.getter();
    v14[1] = v7;
    sub_241160860();
    sub_241160860();
    sub_241161590();
    if (*(void *)(v6 + 16) && (unint64_t v8 = sub_24106289C((uint64_t)v14), (v9 & 1) != 0))
    {
      sub_24101F1C8(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v15);
    }
    else
    {
      long long v15 = 0u;
      long long v16 = 0u;
    }
    sub_241067C70((uint64_t)v14);
    swift_bridgeObjectRelease();
    if (*((void *)&v16 + 1))
    {
      uint64_t v10 = sub_24115CB10();
      int v11 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, v11 ^ 1u, 1, v10);
    }
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  sub_2410873BC((uint64_t)&v15, (uint64_t)&qword_26B0073D0, v4 + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24101F6B8);
  uint64_t v13 = sub_24115CB10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
}

uint64_t sub_241082600(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_241087584(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v19 - v6;
  uint64_t v8 = sub_24115CB10();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241087504(a1, (uint64_t)v7, (unint64_t *)&qword_26B007240, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    uint64_t v12 = MEMORY[0x263F07490];
    uint64_t v13 = MEMORY[0x263F8D8F0];
    sub_2410873BC(a1, (uint64_t)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
    return sub_2410873BC((uint64_t)v7, (uint64_t)&qword_26B007240, v12, v13, (uint64_t (*)(void))sub_241087584);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_241087584(0, qword_26B0070C8, (uint64_t (*)(uint64_t))sub_241067D30, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24116B370;
    if (qword_26B007030 != -1) {
      swift_once();
    }
    v19[1] = NSBundle.bundleName.getter();
    void v19[2] = v16;
    sub_241160860();
    sub_241160860();
    sub_241161590();
    *(void *)(inited + 96) = v8;
    uint64_t v17 = sub_2410277C0((uint64_t *)(inited + 72));
    (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(v17, v11, v8);
    sub_241061D00(inited);
    uint64_t v18 = (void *)sub_241160620();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v18);

    sub_2410873BC(a1, (uint64_t)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_2410829D8()
{
  id v1 = objc_msgSend(v0, sel_userInfo);
  uint64_t v2 = MEMORY[0x263F8EE58];
  if (!v1)
  {
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_14:
    sub_2410873BC((uint64_t)&v11, (uint64_t)&qword_26B0073D0, v2 + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24101F6B8);
    return 3;
  }
  id v3 = v1;
  uint64_t v4 = sub_241160630();

  if (qword_26B007030 != -1) {
    swift_once();
  }
  v10[0] = NSBundle.bundleName.getter();
  v10[1] = v5;
  sub_241160860();
  sub_241160860();
  sub_241161590();
  if (*(void *)(v4 + 16) && (unint64_t v6 = sub_24106289C((uint64_t)v10), (v7 & 1) != 0))
  {
    sub_24101F1C8(*(void *)(v4 + 56) + 32 * v6, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  sub_241067C70((uint64_t)v10);
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1)) {
    goto LABEL_14;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 3;
  }
  unint64_t v8 = sub_241161760();
  swift_bridgeObjectRelease();
  if (v8 >= 3) {
    return 3;
  }
  else {
    return v8;
  }
}

void sub_241082BBC(char a1)
{
  if (a1 != 3)
  {
    uint64_t v2 = v1;
    sub_241087584(0, qword_26B0070C8, (uint64_t (*)(uint64_t))sub_241067D30, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24116B370;
    if (qword_26B007030 != -1) {
      swift_once();
    }
    NSBundle.bundleName.getter();
    sub_241160860();
    sub_241160860();
    uint64_t v5 = MEMORY[0x263F8D310];
    sub_241161590();
    if (a1)
    {
      if (a1 == 1)
      {
        unint64_t v6 = 0xE700000000000000;
        uint64_t v7 = 0x65736F44676F6CLL;
      }
      else
      {
        unint64_t v6 = 0xEE006D6F6F526E6FLL;
        uint64_t v7 = 0x697461636964656DLL;
      }
    }
    else
    {
      unint64_t v6 = 0xEC0000006D6F6F52;
      uint64_t v7 = 0x79726F6765746163;
    }
    *(void *)(inited + 96) = v5;
    *(void *)(inited + 72) = v7;
    *(void *)(inited + 80) = v6;
    sub_241061D00(inited);
    unint64_t v8 = (void *)sub_241160620();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v8);
  }
}

uint64_t sub_241082DA8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  unint64_t v36 = a8;
  uint64_t v37 = a9;
  uint64_t v34 = a7;
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v30 = a3;
  int v29 = a2;
  uint64_t v28 = a1;
  int v35 = a10 & 1;
  long long v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241087584(0, &qword_26B006930, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v28 - v13;
  sub_241087584(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], v11);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v28 - v16;
  uint64_t v18 = sub_24115C9E0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_24115C8E0();
  uint64_t v22 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v24 = (char *)&v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B007030 != -1) {
    swift_once();
  }
  id v25 = objc_msgSend((id)qword_26B00BC60, sel_bundleURL, v28);
  sub_24115C9C0();

  sub_24115C9A0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_24115D850();
  swift_bridgeObjectRelease();
  unint64_t v38 = 47;
  unint64_t v39 = 0xE100000000000000;
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_24115C8D0();
  sub_2410832FC(v29);
  swift_bridgeObjectRetain();
  sub_2410836C0(v30, a4);
  uint64_t v26 = v32;
  swift_bridgeObjectRetain();
  sub_241083A78(v31, v26);
  sub_241087504(v34, (uint64_t)v17, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  sub_241083E50((uint64_t)v17);
  sub_24108449C(v36, v35);
  sub_24115C8B0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18) == 1)
  {
    sub_2410873BC((uint64_t)v14, (uint64_t)&qword_26B006930, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
    unint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    sub_2411615F0();
    swift_bridgeObjectRelease();
    unint64_t v38 = 0xD00000000000001ALL;
    unint64_t v39 = 0x8000000241165460;
    sub_2410875E8();
    sub_241161850();
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_2411616B0();
    __break(1u);
    JUMPOUT(0x2410832ECLL);
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v33);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(v37, v14, v18);
}

uint64_t sub_2410832FC(int a1)
{
  uint64_t v31 = sub_24115C870();
  uint64_t v3 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v34 = &v27[-v7];
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v27[-v9];
  uint64_t v11 = sub_24115C880();
  unint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    uint64_t v13 = v11;
    uint64_t v38 = *(void *)(v11 + 16);
    unint64_t v39 = MEMORY[0x263F8EE78];
    if (v38)
    {
      int v28 = a1;
      int v29 = v5;
      uint64_t v30 = v1;
      unint64_t v14 = 0;
      uint64_t v33 = (void *)(v3 + 32);
      unint64_t v36 = "scheduleItemIdentifier";
      uint64_t v37 = v3 + 16;
      unint64_t v35 = 0x8000000241165410;
      unint64_t v12 = v31;
      while (1)
      {
        if (v14 >= *(void *)(v13 + 16))
        {
          __break(1u);
LABEL_25:
          unint64_t v12 = sub_24105277C(0, *(void *)(v12 + 16) + 1, 1, v12);
LABEL_20:
          unint64_t v25 = *(void *)(v12 + 16);
          unint64_t v24 = *(void *)(v12 + 24);
          if (v25 >= v24 >> 1) {
            unint64_t v12 = sub_24105277C(v24 > 1, v25 + 1, 1, v12);
          }
          *(void *)(v12 + 16) = v25 + 1;
          (*(void (**)(unint64_t, unsigned char *, uint64_t))(v3 + 32))(v12+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v25, v5, v31);
          return sub_24115C890();
        }
        unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
        uint64_t v5 = *(unsigned char **)(v3 + 72);
        (*(void (**)(unsigned char *, unint64_t, unint64_t))(v3 + 16))(v10, v13 + v15 + (void)v5 * v14, v12);
        if (sub_24115C850() == 0xD000000000000014 && v16 == v35)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v17 = sub_241161890();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
          {
            uint64_t v18 = (void (*)(unint64_t, unsigned char *, uint64_t))*v33;
            ((void (*)(unsigned char *, unsigned char *, unint64_t))*v33)(v34, v10, v12);
            unint64_t v19 = v39;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v32 = v18;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_2410E5994(0, *(void *)(v19 + 16) + 1, 1);
              unint64_t v19 = v39;
            }
            unint64_t v22 = *(void *)(v19 + 16);
            unint64_t v21 = *(void *)(v19 + 24);
            if (v22 >= v21 >> 1)
            {
              sub_2410E5994(v21 > 1, v22 + 1, 1);
              unint64_t v19 = v39;
            }
            *(void *)(v19 + 16) = v22 + 1;
            unint64_t v23 = v19 + v15 + v22 * (void)v5;
            unint64_t v12 = v31;
            v32(v23, v34, v31);
            unint64_t v39 = v19;
            goto LABEL_6;
          }
        }
        (*(void (**)(unsigned char *, unint64_t))(v3 + 8))(v10, v12);
LABEL_6:
        if (v38 == ++v14)
        {
          unint64_t v12 = v39;
          uint64_t v5 = v29;
          LOBYTE(a1) = v28;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (a1 != 2)
  {
    sub_24115C840();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  return sub_24115C890();
}

uint64_t sub_2410836C0(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = sub_24115C870();
  uint64_t v5 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v36 = (char *)v29 - v9;
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)v29 - v11;
  uint64_t v13 = sub_24115C880();
  unint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    uint64_t v15 = v13;
    uint64_t v40 = *(void *)(v13 + 16);
    unint64_t v41 = MEMORY[0x263F8EE78];
    if (v40)
    {
      v29[1] = a1;
      uint64_t v30 = a2;
      uint64_t v31 = v7;
      uint64_t v32 = v2;
      unint64_t v16 = 0;
      unint64_t v35 = (void (**)(char *, char *, unint64_t))(v5 + 32);
      uint64_t v38 = "stViewController.swift";
      uint64_t v39 = v5 + 16;
      unint64_t v37 = 0x80000002411653F0;
      unint64_t v14 = v33;
      while (1)
      {
        if (v16 >= *(void *)(v15 + 16))
        {
          __break(1u);
LABEL_25:
          unint64_t v14 = sub_24105277C(0, *(void *)(v14 + 16) + 1, 1, v14);
LABEL_20:
          unint64_t v27 = *(void *)(v14 + 16);
          unint64_t v26 = *(void *)(v14 + 24);
          if (v27 >= v26 >> 1) {
            unint64_t v14 = sub_24105277C(v26 > 1, v27 + 1, 1, v14);
          }
          *(void *)(v14 + 16) = v27 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v27, v7, v33);
          return sub_24115C890();
        }
        uint64_t v7 = (char *)((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        uint64_t v17 = *(void *)(v5 + 72);
        (*(void (**)(char *, char *, unint64_t))(v5 + 16))(v12, &v7[v15 + v17 * v16], v14);
        if (sub_24115C850() == 0xD000000000000016 && v18 == v37)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v19 = sub_241161890();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            uint64_t v20 = *v35;
            (*v35)(v36, v12, v14);
            unint64_t v21 = v41;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v34 = v20;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_2410E5994(0, *(void *)(v21 + 16) + 1, 1);
              unint64_t v21 = v41;
            }
            unint64_t v24 = *(void *)(v21 + 16);
            unint64_t v23 = *(void *)(v21 + 24);
            if (v24 >= v23 >> 1)
            {
              sub_2410E5994(v23 > 1, v24 + 1, 1);
              unint64_t v21 = v41;
            }
            *(void *)(v21 + 16) = v24 + 1;
            unint64_t v25 = &v7[v21 + v24 * v17];
            unint64_t v14 = v33;
            v34(v25, v36, v33);
            unint64_t v41 = v21;
            goto LABEL_6;
          }
        }
        (*(void (**)(char *, unint64_t))(v5 + 8))(v12, v14);
LABEL_6:
        if (v40 == ++v16)
        {
          unint64_t v14 = v41;
          uint64_t v7 = v31;
          a2 = v30;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (a2)
  {
    sub_24115C840();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  return sub_24115C890();
}

uint64_t sub_241083A78(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = sub_24115C870();
  uint64_t v5 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v36 = (char *)v29 - v9;
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)v29 - v11;
  uint64_t v13 = sub_24115C880();
  unint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    uint64_t v15 = v13;
    uint64_t v38 = *(void *)(v13 + 16);
    unint64_t v39 = MEMORY[0x263F8EE78];
    if (v38)
    {
      v29[1] = a1;
      uint64_t v30 = a2;
      uint64_t v31 = v7;
      uint64_t v32 = v2;
      unint64_t v16 = 0;
      uint64_t v37 = v5 + 16;
      unint64_t v35 = (void (**)(char *, char *, unint64_t))(v5 + 32);
      unint64_t v14 = v33;
      while (1)
      {
        if (v16 >= *(void *)(v15 + 16))
        {
          __break(1u);
LABEL_25:
          unint64_t v14 = sub_24105277C(0, *(void *)(v14 + 16) + 1, 1, v14);
LABEL_20:
          unint64_t v27 = *(void *)(v14 + 16);
          unint64_t v26 = *(void *)(v14 + 24);
          if (v27 >= v26 >> 1) {
            unint64_t v14 = sub_24105277C(v26 > 1, v27 + 1, 1, v14);
          }
          *(void *)(v14 + 16) = v27 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v27, v7, v33);
          return sub_24115C890();
        }
        uint64_t v7 = (char *)((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        uint64_t v17 = *(void *)(v5 + 72);
        (*(void (**)(char *, char *, unint64_t))(v5 + 16))(v12, &v7[v15 + v17 * v16], v14);
        if (sub_24115C850() == 0x697461636964656DLL && v18 == 0xEE00656D614E6E6FLL)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v19 = sub_241161890();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            uint64_t v20 = *v35;
            (*v35)(v36, v12, v14);
            unint64_t v21 = v39;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v34 = v20;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_2410E5994(0, *(void *)(v21 + 16) + 1, 1);
              unint64_t v21 = v39;
            }
            unint64_t v24 = *(void *)(v21 + 16);
            unint64_t v23 = *(void *)(v21 + 24);
            if (v24 >= v23 >> 1)
            {
              sub_2410E5994(v23 > 1, v24 + 1, 1);
              unint64_t v21 = v39;
            }
            *(void *)(v21 + 16) = v24 + 1;
            unint64_t v25 = &v7[v21 + v24 * v17];
            unint64_t v14 = v33;
            v34(v25, v36, v33);
            unint64_t v39 = v21;
            goto LABEL_6;
          }
        }
        (*(void (**)(char *, unint64_t))(v5 + 8))(v12, v14);
LABEL_6:
        if (v38 == ++v16)
        {
          unint64_t v14 = v39;
          uint64_t v7 = v31;
          a2 = v30;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (a2)
  {
    sub_24115C840();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  return sub_24115C890();
}

uint64_t sub_241083E50(uint64_t a1)
{
  sub_241087584(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v40 = (uint64_t)&v34 - v4;
  uint64_t v5 = sub_24115CB10();
  unint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24115C870();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  MEMORY[0x270FA5388](v9);
  unint64_t v39 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v44 = (char *)&v34 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = sub_24115C880();
  unint64_t v17 = MEMORY[0x263F8EE78];
  if (v16)
  {
    uint64_t v18 = v16;
    uint64_t v46 = *(void *)(v16 + 16);
    unint64_t v47 = MEMORY[0x263F8EE78];
    if (v46)
    {
      uint64_t v34 = v8;
      unint64_t v35 = v6;
      uint64_t v36 = v5;
      uint64_t v37 = v1;
      uint64_t v38 = a1;
      unint64_t v6 = 0;
      uint64_t v5 = v41;
      uint64_t v19 = v42;
      uint64_t v45 = v41 + 16;
      uint64_t v43 = (void (**)(char *, char *, uint64_t))(v41 + 32);
      uint64_t v8 = (char *)(v41 + 8);
      while (1)
      {
        if (v6 >= *(void *)(v18 + 16))
        {
          __break(1u);
LABEL_26:
          unint64_t v17 = sub_24105277C(0, *(void *)(v17 + 16) + 1, 1, v17);
LABEL_21:
          unint64_t v32 = *(void *)(v17 + 16);
          unint64_t v31 = *(void *)(v17 + 24);
          if (v32 >= v31 >> 1) {
            unint64_t v17 = sub_24105277C(v31 > 1, v32 + 1, 1, v17);
          }
          *(void *)(v17 + 16) = v32 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v17+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v32, v15, v42);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          goto LABEL_24;
        }
        unint64_t v20 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        a1 = *(void *)(v5 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v15, v18 + v20 + a1 * v6, v19);
        if (sub_24115C850() == 0x446C6C6966657270 && v21 == 0xEB00000000657461)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v17 = sub_241161890();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
          {
            unint64_t v22 = *v43;
            (*v43)(v44, v15, v19);
            unint64_t v23 = v47;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_2410E5994(0, *(void *)(v23 + 16) + 1, 1);
              unint64_t v23 = v47;
            }
            unint64_t v25 = *(void *)(v23 + 16);
            unint64_t v24 = *(void *)(v23 + 24);
            unint64_t v17 = v25 + 1;
            if (v25 >= v24 >> 1)
            {
              sub_2410E5994(v24 > 1, v25 + 1, 1);
              unint64_t v23 = v47;
            }
            *(void *)(v23 + 16) = v17;
            unint64_t v26 = v23 + v20 + v25 * a1;
            uint64_t v19 = v42;
            v22((char *)v26, v44, v42);
            unint64_t v47 = v23;
            uint64_t v5 = v41;
            goto LABEL_6;
          }
        }
        (*(void (**)(char *, uint64_t))v8)(v15, v19);
LABEL_6:
        if (v46 == ++v6)
        {
          unint64_t v17 = v47;
          a1 = v38;
          unint64_t v6 = v35;
          uint64_t v5 = v36;
          uint64_t v8 = v34;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = v40;
  sub_241087504(a1, v40, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v27, 1, v5) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
    id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
    int v29 = (void *)sub_24115CAA0();
    id v30 = objc_msgSend(v28, sel_stringFromDate_, v29);

    sub_241160730();
    uint64_t v15 = v39;
    sub_24115C840();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_26;
    }
    goto LABEL_21;
  }
  sub_2410873BC(v27, (uint64_t)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
LABEL_24:
  sub_24115C890();
  return sub_2410873BC(a1, (uint64_t)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
}

uint64_t sub_24108449C(unint64_t a1, int a2)
{
  uint64_t v34 = sub_24115C870();
  uint64_t v5 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v37 = &v29[-v9];
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v29[-v11];
  uint64_t v13 = sub_24115C880();
  unint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    uint64_t v15 = v13;
    uint64_t v39 = *(void *)(v13 + 16);
    unint64_t v40 = MEMORY[0x263F8EE78];
    if (v39)
    {
      int v30 = a2;
      unint64_t v31 = a1;
      unint64_t v32 = v7;
      uint64_t v33 = v2;
      unint64_t v16 = 0;
      uint64_t v38 = v5 + 16;
      uint64_t v36 = (void *)(v5 + 32);
      uint64_t v17 = v34;
      while (1)
      {
        if (v16 >= *(void *)(v15 + 16))
        {
          __break(1u);
LABEL_25:
          unint64_t v14 = sub_24105277C(0, *(void *)(v14 + 16) + 1, 1, v14);
LABEL_20:
          unint64_t v27 = *(void *)(v14 + 16);
          unint64_t v26 = *(void *)(v14 + 24);
          if (v27 >= v26 >> 1) {
            unint64_t v14 = sub_24105277C(v26 > 1, v27 + 1, 1, v14);
          }
          *(void *)(v14 + 16) = v27 + 1;
          (*(void (**)(unint64_t, unsigned char *, uint64_t))(v5 + 32))(v14+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v27, v7, v34);
          return sub_24115C890();
        }
        uint64_t v7 = (unsigned char *)((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        uint64_t v18 = *(void *)(v5 + 72);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v12, &v7[v15 + v18 * v16], v17);
        if (sub_24115C850() == 0x446C6C6966657270 && v19 == 0xED0000656761736FLL)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v14 = sub_241161890();
          swift_bridgeObjectRelease();
          if ((v14 & 1) == 0)
          {
            unint64_t v20 = (void (*)(unsigned char *, unsigned char *, uint64_t))*v36;
            ((void (*)(unsigned char *, unsigned char *, uint64_t))*v36)(v37, v12, v17);
            unint64_t v21 = v40;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v35 = v20;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_2410E5994(0, *(void *)(v21 + 16) + 1, 1);
              unint64_t v21 = v40;
            }
            unint64_t v24 = *(void *)(v21 + 16);
            unint64_t v23 = *(void *)(v21 + 24);
            unint64_t v14 = v24 + 1;
            if (v24 >= v23 >> 1)
            {
              sub_2410E5994(v23 > 1, v24 + 1, 1);
              unint64_t v21 = v40;
            }
            *(void *)(v21 + 16) = v14;
            unint64_t v25 = &v7[v21 + v24 * v18];
            uint64_t v17 = v34;
            v35(v25, v37, v34);
            unint64_t v40 = v21;
            goto LABEL_6;
          }
        }
        (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v12, v17);
LABEL_6:
        if (v39 == ++v16)
        {
          unint64_t v14 = v40;
          uint64_t v7 = v32;
          a1 = v31;
          LOBYTE(a2) = v30;
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if ((a2 & 1) == 0)
  {
    unint64_t v40 = a1;
    sub_241161850();
    sub_24115C840();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  return sub_24115C890();
}

uint64_t sub_2410848A4()
{
  sub_24115C8C0();
  unint64_t v0 = sub_24108741C();
  uint64_t v1 = (void *)MEMORY[0x2456172F0](47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x263F8D310], v0);
  swift_bridgeObjectRelease();
  if (v1[2])
  {
    uint64_t v2 = v1[4];
    uint64_t v3 = v1[5];
    uint64_t v4 = v1[6];
    uint64_t v5 = v1[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    MEMORY[0x2456165F0](v2, v3, v4, v5);
    swift_bridgeObjectRelease();
    unint64_t v6 = sub_241161760();
    swift_bridgeObjectRelease();
    if (v6 >= 3) {
      return 3;
    }
    else {
      return v6;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 3;
  }
}

uint64_t sub_241084998()
{
  uint64_t v0 = sub_24115C870();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241087584(0, &qword_26B006918, MEMORY[0x263F06338], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = sub_24115C880();
  if (!v7) {
    return 2;
  }
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    unint64_t v22 = v6;
    uint64_t v23 = v1;
    uint64_t v10 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    uint64_t v9 = v1 + 16;
    unint64_t v25 = v10;
    unint64_t v11 = v7 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v12 = *(void *)(v9 + 56);
    v21[1] = v7;
    swift_bridgeObjectRetain();
    unint64_t v24 = 0x8000000241165410;
    while (1)
    {
      v25(v3, v11, v0);
      if (sub_24115C850() == 0xD000000000000014 && v13 == v24) {
        break;
      }
      char v14 = sub_241161890();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t))(v9 - 8))(v3, v0);
      v11 += v12;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = 1;
        unint64_t v6 = v22;
        uint64_t v1 = v23;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    unint64_t v6 = v22;
    uint64_t v1 = v23;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v22, v3, v0);
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, v15, 1, v0);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
  {
    sub_2410873BC((uint64_t)v6, (uint64_t)&qword_26B006918, MEMORY[0x263F06338], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
  }
  else
  {
    uint64_t v16 = sub_24115C860();
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    if (v18)
    {
      if (v16 == 48 && v18 == 0xE100000000000000 || (sub_241161890() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      if (v16 == 49 && v18 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v20 = sub_241161890();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0) {
          return 2;
        }
      }
      return 1;
    }
  }
  return 2;
}

uint64_t sub_241084D74()
{
  uint64_t v0 = sub_24115C870();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241087584(0, &qword_26B006918, MEMORY[0x263F06338], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)v18 - v5;
  uint64_t v7 = sub_24115C880();
  uint64_t v8 = v7;
  if (v7)
  {
    uint64_t v9 = *(void *)(v7 + 16);
    if (v9)
    {
      uint64_t v19 = v6;
      uint64_t v20 = v1;
      unint64_t v11 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
      uint64_t v10 = v1 + 16;
      unint64_t v22 = v11;
      unint64_t v12 = v7 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
      uint64_t v13 = *(void *)(v10 + 56);
      v18[1] = v7;
      swift_bridgeObjectRetain();
      unint64_t v21 = 0x80000002411653F0;
      while (1)
      {
        v22(v3, v12, v0);
        if (sub_24115C850() == 0xD000000000000016 && v14 == v21) {
          break;
        }
        char v15 = sub_241161890();
        swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_12;
        }
        (*(void (**)(char *, uint64_t))(v10 - 8))(v3, v0);
        v12 += v13;
        if (!--v9)
        {
          swift_bridgeObjectRelease();
          uint64_t v16 = 1;
          unint64_t v6 = v19;
          uint64_t v1 = v20;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRelease();
      unint64_t v6 = v19;
      uint64_t v1 = v20;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v19, v3, v0);
      uint64_t v16 = 0;
    }
    else
    {
      uint64_t v16 = 1;
    }
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, v16, 1, v0);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
    {
      sub_2410873BC((uint64_t)v6, (uint64_t)&qword_26B006918, MEMORY[0x263F06338], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
      return 0;
    }
    else
    {
      uint64_t v8 = sub_24115C860();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    }
  }
  return v8;
}

uint64_t sub_2410850D0()
{
  uint64_t v0 = sub_24115C870();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241087584(0, &qword_26B006918, MEMORY[0x263F06338], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)v19 - v5;
  uint64_t v7 = sub_24115C880();
  uint64_t v8 = v7;
  if (v7)
  {
    uint64_t v9 = *(void *)(v7 + 16);
    if (v9)
    {
      uint64_t v20 = v6;
      uint64_t v21 = v1;
      unint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
      uint64_t v10 = v1 + 16;
      unint64_t v11 = v12;
      unint64_t v13 = v7 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
      uint64_t v14 = *(void *)(v10 + 56);
      v19[1] = v7;
      swift_bridgeObjectRetain();
      while (1)
      {
        v11(v3, v13, v0);
        if (sub_24115C850() == 0x697461636964656DLL && v15 == 0xEE00656D614E6E6FLL) {
          break;
        }
        char v16 = sub_241161890();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_12;
        }
        (*(void (**)(char *, uint64_t))(v10 - 8))(v3, v0);
        v13 += v14;
        if (!--v9)
        {
          swift_bridgeObjectRelease();
          uint64_t v17 = 1;
          unint64_t v6 = v20;
          uint64_t v1 = v21;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRelease();
      unint64_t v6 = v20;
      uint64_t v1 = v21;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v20, v3, v0);
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = 1;
    }
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, v17, 1, v0);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
    {
      sub_2410873BC((uint64_t)v6, (uint64_t)&qword_26B006918, MEMORY[0x263F06338], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
      return 0;
    }
    else
    {
      uint64_t v8 = sub_24115C860();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    }
  }
  return v8;
}

uint64_t sub_241085444@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24115C870();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241087584(0, &qword_26B006918, MEMORY[0x263F06338], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = sub_24115C880();
  if (!v9) {
    goto LABEL_16;
  }
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v23 = v8;
    uint64_t v24 = v3;
    uint64_t v25 = a1;
    unint64_t v11 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    unint64_t v12 = v9 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    unint64_t v13 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v14 = *(void *)(v3 + 72);
    uint64_t v22 = v9;
    swift_bridgeObjectRetain();
    while (1)
    {
      v11(v5, v12, v2);
      if (sub_24115C850() == 0x446C6C6966657270 && v15 == 0xEB00000000657461) {
        break;
      }
      char v16 = sub_241161890();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_11;
      }
      (*v13)(v5, v2);
      v12 += v14;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = 1;
        uint64_t v3 = v24;
        a1 = v25;
        uint64_t v8 = v23;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v8 = v23;
    uint64_t v3 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v23, v5, v2);
    uint64_t v17 = 0;
    a1 = v25;
  }
  else
  {
    uint64_t v17 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, v17, 1, v2);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_2410873BC((uint64_t)v8, (uint64_t)&qword_26B006918, MEMORY[0x263F06338], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
LABEL_16:
    sub_24115CAF0();
    goto LABEL_17;
  }
  sub_24115C860();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  if (!v19) {
    goto LABEL_16;
  }
  sub_2410867A0(a1);
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v20 = sub_24115CB10();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t sub_241085810()
{
  uint64_t v0 = sub_24115C870();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241087584(0, &qword_26B006918, MEMORY[0x263F06338], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v41 - v5;
  uint64_t v7 = sub_24115C880();
  if (!v7) {
    return 1;
  }
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v42 = v6;
    uint64_t v43 = v1;
    unint64_t v11 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    uint64_t v9 = v1 + 16;
    uint64_t v10 = v11;
    unint64_t v12 = v7 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v13 = *(void *)(v9 + 56);
    v41[1] = v7;
    swift_bridgeObjectRetain();
    while (1)
    {
      v10(v3, v12, v0);
      if (sub_24115C850() == 0x446C6C6966657270 && v14 == 0xED0000656761736FLL) {
        break;
      }
      char v15 = sub_241161890();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t))(v9 - 8))(v3, v0);
      v12 += v13;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = 1;
        uint64_t v6 = v42;
        uint64_t v1 = v43;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v6 = v42;
    uint64_t v1 = v43;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v42, v3, v0);
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 1;
  }
LABEL_12:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, v16, 1, v0);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
  {
    sub_2410873BC((uint64_t)v6, (uint64_t)&qword_26B006918, MEMORY[0x263F06338], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
    return 1;
  }
  uint64_t v17 = sub_24115C860();
  unint64_t v19 = v18;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  if (!v19) {
    return 1;
  }
  uint64_t v21 = HIBYTE(v19) & 0xF;
  uint64_t v22 = v17 & 0xFFFFFFFFFFFFLL;
  if ((v19 & 0x2000000000000000) != 0) {
    uint64_t v23 = HIBYTE(v19) & 0xF;
  }
  else {
    uint64_t v23 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (!v23)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v19 & 0x1000000000000000) == 0)
  {
    if ((v19 & 0x2000000000000000) == 0)
    {
      if ((v17 & 0x1000000000000000) != 0) {
        uint64_t v24 = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v24 = (unsigned __int8 *)sub_241161630();
      }
      uint64_t v25 = (uint64_t)sub_241086C54(v24, v22, 10);
      char v27 = v26 & 1;
      goto LABEL_59;
    }
    v44[0] = v17;
    v44[1] = v19 & 0xFFFFFFFFFFFFFFLL;
    if (v17 == 43)
    {
      if (!v21) {
        goto LABEL_72;
      }
      if (v21 == 1 || (BYTE1(v17) - 48) > 9u) {
        goto LABEL_46;
      }
      uint64_t v25 = (BYTE1(v17) - 48);
      if (v21 != 2)
      {
        if ((BYTE2(v17) - 48) > 9u) {
          goto LABEL_46;
        }
        uint64_t v25 = 10 * (BYTE1(v17) - 48) + (BYTE2(v17) - 48);
        uint64_t v28 = v21 - 3;
        if (v28)
        {
          int v29 = (unsigned __int8 *)v44 + 3;
          while (1)
          {
            unsigned int v30 = *v29 - 48;
            if (v30 > 9) {
              goto LABEL_46;
            }
            uint64_t v31 = 10 * v25;
            if ((unsigned __int128)(v25 * (__int128)10) >> 64 != (10 * v25) >> 63) {
              goto LABEL_46;
            }
            uint64_t v25 = v31 + v30;
            if (__OFADD__(v31, v30)) {
              goto LABEL_46;
            }
            char v27 = 0;
            ++v29;
            if (!--v28) {
              goto LABEL_59;
            }
          }
        }
      }
    }
    else
    {
      if (v17 == 45)
      {
        if (v21)
        {
          if (v21 != 1 && (BYTE1(v17) - 48) <= 9u)
          {
            if (v21 == 2)
            {
              char v27 = 0;
              uint64_t v25 = -(uint64_t)(BYTE1(v17) - 48);
              goto LABEL_59;
            }
            if ((BYTE2(v17) - 48) <= 9u)
            {
              uint64_t v25 = -10 * (BYTE1(v17) - 48) - (BYTE2(v17) - 48);
              uint64_t v36 = v21 - 3;
              if (!v36) {
                goto LABEL_58;
              }
              uint64_t v37 = (unsigned __int8 *)v44 + 3;
              while (1)
              {
                unsigned int v38 = *v37 - 48;
                if (v38 > 9) {
                  break;
                }
                uint64_t v39 = 10 * v25;
                if ((unsigned __int128)(v25 * (__int128)10) >> 64 != (10 * v25) >> 63) {
                  break;
                }
                uint64_t v25 = v39 - v38;
                if (__OFSUB__(v39, v38)) {
                  break;
                }
                char v27 = 0;
                ++v37;
                if (!--v36) {
                  goto LABEL_59;
                }
              }
            }
          }
LABEL_46:
          uint64_t v25 = 0;
          char v27 = 1;
          goto LABEL_59;
        }
        __break(1u);
LABEL_72:
        __break(1u);
        return result;
      }
      if (!v21 || (v17 - 48) > 9u) {
        goto LABEL_46;
      }
      uint64_t v25 = (v17 - 48);
      if (v21 != 1)
      {
        if ((BYTE1(v17) - 48) > 9u) {
          goto LABEL_46;
        }
        uint64_t v25 = 10 * (v17 - 48) + (BYTE1(v17) - 48);
        uint64_t v32 = v21 - 2;
        if (v32)
        {
          uint64_t v33 = (unsigned __int8 *)v44 + 2;
          while (1)
          {
            unsigned int v34 = *v33 - 48;
            if (v34 > 9) {
              goto LABEL_46;
            }
            uint64_t v35 = 10 * v25;
            if ((unsigned __int128)(v25 * (__int128)10) >> 64 != (10 * v25) >> 63) {
              goto LABEL_46;
            }
            uint64_t v25 = v35 + v34;
            if (__OFADD__(v35, v34)) {
              goto LABEL_46;
            }
            char v27 = 0;
            ++v33;
            if (!--v32) {
              goto LABEL_59;
            }
          }
        }
      }
    }
LABEL_58:
    char v27 = 0;
    goto LABEL_59;
  }
  uint64_t v25 = (uint64_t)sub_241086B6C(v17, v19, 10);
  char v27 = v40;
LABEL_59:
  swift_bridgeObjectRelease();
  if (v27) {
    return 0;
  }
  else {
    return v25;
  }
}

void *sub_241085E24()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241087584(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v51 = (uint64_t)&v48 - v2;
  sub_241087584(0, &qword_26B006920, MEMORY[0x263F06370], v0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v52 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v50 = (char *)&v48 - v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v49 = (uint64_t)&v48 - v8;
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v48 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v48 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v48 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v48 - v19;
  sub_24115C8A0();
  if (qword_26B007030 != -1) {
    swift_once();
  }
  NSBundle.bundleName.getter();
  uint64_t v21 = (void *)sub_24115D840();
  swift_bridgeObjectRelease();
  sub_241087584(0, qword_26B0070C8, (uint64_t (*)(uint64_t))sub_241067D30, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24116B370;
  uint64_t v54 = NSBundle.bundleName.getter();
  uint64_t v55 = v23;
  sub_241160860();
  sub_241160860();
  sub_241161590();
  *(void *)(inited + 96) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 72) = 1;
  sub_241061D00(inited);
  uint64_t v24 = (void *)sub_241160620();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_addUserInfoEntriesFromDictionary_, v24);

  sub_241087504((uint64_t)v20, (uint64_t)v17, &qword_26B006920, MEMORY[0x263F06370]);
  uint64_t v25 = sub_24115C8E0();
  uint64_t v26 = *(void *)(v25 - 8);
  char v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v17, 1, v25) == 1)
  {
    sub_2410873BC((uint64_t)v17, (uint64_t)&qword_26B006920, MEMORY[0x263F06370], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
    char v28 = 3;
  }
  else
  {
    char v28 = sub_2410848A4();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v25);
  }
  sub_241082BBC(v28);
  sub_241087504((uint64_t)v20, (uint64_t)v14, &qword_26B006920, MEMORY[0x263F06370]);
  if (v27(v14, 1, v25) == 1)
  {
    sub_2410873BC((uint64_t)v14, (uint64_t)&qword_26B006920, MEMORY[0x263F06370], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
    char v29 = 2;
  }
  else
  {
    char v29 = sub_241084998();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v25);
  }
  sub_241081B34(v29);
  sub_241087504((uint64_t)v20, (uint64_t)v11, &qword_26B006920, MEMORY[0x263F06370]);
  unsigned int v30 = v27(v11, 1, v25);
  uint64_t v31 = (uint64_t)v50;
  if (v30 == 1)
  {
    sub_2410873BC((uint64_t)v11, (uint64_t)&qword_26B006920, MEMORY[0x263F06370], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
    uint64_t v32 = 0;
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v32 = sub_241084D74();
    uint64_t v33 = v34;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v25);
  }
  uint64_t v53 = v26;
  sub_241081ED4(v32, v33);
  uint64_t v35 = v49;
  sub_241087504((uint64_t)v20, v49, &qword_26B006920, MEMORY[0x263F06370]);
  unsigned int v36 = v27((char *)v35, 1, v25);
  uint64_t v37 = (uint64_t)v52;
  if (v36 == 1)
  {
    sub_2410873BC(v35, (uint64_t)&qword_26B006920, MEMORY[0x263F06370], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
    uint64_t v38 = 0;
    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v38 = sub_2410850D0();
    uint64_t v39 = v40;
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v35, v25);
  }
  sub_241081ED4(v38, v39);
  sub_241087504((uint64_t)v20, v31, &qword_26B006920, MEMORY[0x263F06370]);
  if (v27((char *)v31, 1, v25) == 1)
  {
    sub_2410873BC(v31, (uint64_t)&qword_26B006920, MEMORY[0x263F06370], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
    uint64_t v41 = sub_24115CB10();
    uint64_t v42 = v51;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v51, 1, 1, v41);
    uint64_t v43 = v53;
  }
  else
  {
    uint64_t v42 = v51;
    sub_241085444(v51);
    uint64_t v43 = v53;
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v31, v25);
  }
  sub_241082600(v42);
  sub_241087504((uint64_t)v20, v37, &qword_26B006920, MEMORY[0x263F06370]);
  if (v27((char *)v37, 1, v25) == 1)
  {
    sub_2410873BC(v37, (uint64_t)&qword_26B006920, MEMORY[0x263F06370], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
    uint64_t v44 = 0;
    char v45 = 1;
  }
  else
  {
    uint64_t v44 = sub_241085810();
    char v45 = v46 & 1;
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v37, v25);
  }
  sub_24108223C(v44, v45);
  sub_2410873BC((uint64_t)v20, (uint64_t)&qword_26B006920, MEMORY[0x263F06370], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
  return v21;
}

uint64_t sub_2410867A0@<X0>(uint64_t a1@<X8>)
{
  sub_241087584(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v19 - v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v19 - v9;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F088C0]), sel_init);
  uint64_t v12 = (void *)sub_2411606F0();
  id v13 = objc_msgSend(v11, sel_dateFromString_, v12);

  if (v13)
  {
    sub_24115CAE0();

    uint64_t v14 = sub_24115CB10();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 0, 1, v14);
  }
  else
  {
    uint64_t v14 = sub_24115CB10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 1, 1, v14);
  }
  sub_241087470((uint64_t)v7, (uint64_t)v10);
  sub_241087504((uint64_t)v10, (uint64_t)v4, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  sub_24115CB10();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v4, 1, v14) == 1)
  {
    uint64_t v16 = MEMORY[0x263F07490];
    uint64_t v17 = MEMORY[0x263F8D8F0];
    sub_2410873BC((uint64_t)v4, (uint64_t)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);
    sub_24115CAF0();

    return sub_2410873BC((uint64_t)v10, (uint64_t)&qword_26B007240, v16, v17, (uint64_t (*)(void))sub_241087584);
  }
  else
  {
    sub_2410873BC((uint64_t)v10, (uint64_t)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_241087584);

    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v4, v14);
  }
}

uint64_t sub_241086AF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_2411608C0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x2456166D0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_241086B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2411608F0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_241086ED0();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_241161630();
  }
LABEL_7:
  uint64_t v11 = sub_241086C54(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_241086C54(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_241086ED0()
{
  unint64_t v0 = sub_241160900();
  uint64_t v4 = sub_241086F50(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_241086F50(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_2410870A8(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_24101F62C(v9, 0);
      unint64_t v12 = sub_2410871A8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_241161630();
LABEL_4:
        JUMPOUT(0x245616620);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x245616620](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x245616620]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_2410870A8(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_241086AF0(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_241086AF0(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_2410871A8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_241086AF0(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_2411608B0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_241161630();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_241086AF0(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_241160880();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2410873BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

unint64_t sub_24108741C()
{
  unint64_t result = qword_268CF0EA8;
  if (!qword_268CF0EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0EA8);
  }
  return result;
}

uint64_t sub_241087470(uint64_t a1, uint64_t a2)
{
  sub_241087584(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241087504(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241087584(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_241087584(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2410875E8()
{
  unint64_t result = qword_268CF0EB0;
  if (!qword_268CF0EB0)
  {
    sub_24115C8E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF0EB0);
  }
  return result;
}

uint64_t sub_241087640@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MedicationPDFTextRow(0);
  uint64_t v5 = (char *)a2 + *(int *)(v4 + 20);
  uint64_t v6 = *MEMORY[0x263F43D88];
  uint64_t v7 = sub_24115DB30();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v54 = a2;
  unint64_t v8 = (char *)a2 + *(int *)(v4 + 24);
  uint64_t v9 = *MEMORY[0x263F448F8];
  uint64_t v10 = sub_241160F60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  id v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F089B8]), sel_init);
  unint64_t v57 = MEMORY[0x263F8EE78];
  unint64_t v56 = *(void *)(a1 + 16);
  sub_241089980(v56, 0);
  sub_2411609C0();
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    unint64_t v12 = (void *)*MEMORY[0x263F814F0];
    double v13 = *MEMORY[0x263F81840];
    uint64_t v14 = (void *)*MEMORY[0x263F81500];
    double v15 = *MEMORY[0x263F81838];
    swift_bridgeObjectRetain();
    unint64_t v16 = 0;
    uint64_t v17 = a1 + 40;
    while (v16 <= 1)
    {
      if (v56 < 2 || v16 != 1)
      {
        sub_2410892A8(0, &qword_268CF0EE8, (uint64_t (*)(uint64_t))sub_241089BD0, MEMORY[0x263F8E0F8]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_24116B200;
        *(void *)(inited + 32) = v12;
        uint64_t v40 = self;
        swift_bridgeObjectRetain();
        id v41 = v12;
        id v42 = objc_msgSend(v40, sel_systemFontOfSize_weight_, 12.0, v13);
        uint64_t v43 = sub_241024708(0, &qword_26B007000);
        *(void *)(inited + 40) = v42;
        *(void *)(inited + 64) = v43;
        *(void *)(inited + 72) = v14;
        uint64_t v44 = self;
        id v45 = v14;
        id v46 = objc_msgSend(v44, sel_darkTextColor);
        *(void *)(inited + 104) = sub_241024708(0, (unint64_t *)&unk_26B007010);
        *(void *)(inited + 80) = v46;
        sub_241061E40(inited);
        id v26 = objc_allocWithZone(MEMORY[0x263F086A0]);
        unint64_t v27 = (void *)sub_2411606F0();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_241089B14(&qword_268CF05E8, type metadata accessor for Key);
        goto LABEL_9;
      }
      swift_bridgeObjectRetain_n();
      sub_241160860();
      swift_bridgeObjectRelease();
      sub_2410892A8(0, &qword_268CF0EE8, (uint64_t (*)(uint64_t))sub_241089BD0, MEMORY[0x263F8E0F8]);
      uint64_t v28 = swift_initStackObject();
      *(_OWORD *)(v28 + 16) = xmmword_24116B200;
      *(void *)(v28 + 32) = v12;
      char v29 = self;
      id v30 = v12;
      id v31 = objc_msgSend(v29, sel_systemFontOfSize_weight_, 12.0, v13);
      uint64_t v32 = sub_241024708(0, &qword_26B007000);
      *(void *)(v28 + 40) = v31;
      *(void *)(v28 + 64) = v32;
      *(void *)(v28 + 72) = v14;
      uint64_t v33 = self;
      id v34 = v14;
      id v35 = objc_msgSend(v33, sel_darkTextColor);
      *(void *)(v28 + 104) = sub_241024708(0, (unint64_t *)&unk_26B007010);
      *(void *)(v28 + 80) = v35;
      sub_241061E40(v28);
      id v36 = objc_allocWithZone(MEMORY[0x263F086A0]);
      uint64_t v37 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_241089B14(&qword_268CF05E8, type metadata accessor for Key);
      uint64_t v38 = (void *)sub_241160620();
      swift_bridgeObjectRelease();
      objc_msgSend(v36, sel_initWithString_attributes_, v37, v38);

LABEL_10:
      MEMORY[0x2456167B0]();
      if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2411609D0();
      }
      sub_241160A00();
      ++v16;
      v17 += 16;
      sub_2411609C0();
      if (v11 == v16)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        goto LABEL_15;
      }
    }
    sub_2410892A8(0, &qword_268CF0EE8, (uint64_t (*)(uint64_t))sub_241089BD0, MEMORY[0x263F8E0F8]);
    uint64_t v18 = swift_initStackObject();
    *(_OWORD *)(v18 + 16) = xmmword_24116B200;
    *(void *)(v18 + 32) = v12;
    char v19 = self;
    swift_bridgeObjectRetain();
    id v20 = v12;
    id v21 = objc_msgSend(v19, sel_systemFontOfSize_weight_, 12.0, v15);
    uint64_t v22 = sub_241024708(0, &qword_26B007000);
    *(void *)(v18 + 40) = v21;
    *(void *)(v18 + 64) = v22;
    *(void *)(v18 + 72) = v14;
    unint64_t v23 = self;
    id v24 = v14;
    id v25 = objc_msgSend(v23, sel_darkTextColor);
    *(void *)(v18 + 104) = sub_241024708(0, (unint64_t *)&unk_26B007010);
    *(void *)(v18 + 80) = v25;
    sub_241061E40(v18);
    id v26 = objc_allocWithZone(MEMORY[0x263F086A0]);
    unint64_t v27 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_241089B14(&qword_268CF05E8, type metadata accessor for Key);
LABEL_9:
    unint64_t v47 = (void *)sub_241160620();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_initWithString_attributes_, v27, v47);

    goto LABEL_10;
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_15:
  if (!(v57 >> 62))
  {
    uint64_t v49 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v50 = v55;
    if (v49) {
      goto LABEL_17;
    }
LABEL_24:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v54 = v50;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_2411616E0();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v50 = v55;
  if (!v49) {
    goto LABEL_24;
  }
LABEL_17:
  if (v49 >= 1)
  {
    for (uint64_t i = 0; i != v49; ++i)
    {
      if ((v57 & 0xC000000000000001) != 0) {
        id v52 = (id)MEMORY[0x245617450](i, v57);
      }
      else {
        id v52 = *(id *)(v57 + 8 * i + 32);
      }
      uint64_t v53 = v52;
      objc_msgSend(v50, sel_appendAttributedString_, v52);
    }
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

id sub_241087E68()
{
  return *v0;
}

uint64_t sub_241087E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_24115DB30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_241087EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_241160F60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_241087F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_241089B14(&qword_268CF0ED8, (void (*)(uint64_t))type metadata accessor for MedicationPDFTextRow);

  return MEMORY[0x270F32C88](a1, a2, a3, v8, a4);
}

uint64_t sub_241087FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241088014(a1, a2, a3, MEMORY[0x263F43C60]);
}

uint64_t sub_241087FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_241088014(a1, a2, a3, MEMORY[0x263F43C68]);
}

uint64_t sub_241088014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = sub_241089B14(&qword_268CF0ED8, (void (*)(uint64_t))type metadata accessor for MedicationPDFTextRow);

  return a4(a1, a2, v7, a3);
}

uint64_t sub_2410880AC(uint64_t a1)
{
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = sub_241089B14(&qword_268CF0EE0, (void (*)(uint64_t))type metadata accessor for MedicationPDFTextRow);
  void *v3 = v1;
  v3[1] = sub_24108A550;
  return MEMORY[0x270F33478](a1, v4);
}

void *sub_241088188()
{
  uint64_t v78 = type metadata accessor for MedicationPDFTextRow(0);
  uint64_t v1 = MEMORY[0x270FA5388](v78);
  unint64_t v3 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (uint64_t *)((char *)&v59 - v4);
  uint64_t v77 = sub_24115C7A0();
  uint64_t v6 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v76 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24115DB30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (char *)v0 + *(int *)(type metadata accessor for MedicationsPDFProvider(0) + 20);
  double v13 = *(void (**)(void))(v9 + 104);
  unsigned int v71 = *MEMORY[0x263F43D90];
  uint64_t v70 = v9 + 104;
  uint64_t v69 = (void (*)(char *, void, uint64_t))v13;
  v13(v11);
  unint64_t v72 = v12;
  LOBYTE(v12) = sub_24115DB20();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v73 = v11;
  uint64_t v75 = v8;
  uint64_t v74 = v9 + 8;
  uint64_t v68 = v14;
  v14(v11, v8);
  uint64_t v15 = 8236;
  if (v12) {
    uint64_t v15 = 11296;
  }
  uint64_t v67 = v15;
  uint64_t v16 = *v0;
  if (!((unint64_t)*v0 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_5;
    }
LABEL_31:
    id v20 = (void *)MEMORY[0x263F8EE78];
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v20;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_2411616E0();
  if (!v17) {
    goto LABEL_31;
  }
LABEL_5:
  uint64_t result = self;
  id v66 = result;
  if (v17 >= 1)
  {
    uint64_t v19 = 0;
    unint64_t v64 = v16 & 0xC000000000000001;
    id v20 = (void *)MEMORY[0x263F8EE78];
    uint64_t v63 = (void (**)(char *, uint64_t))(v6 + 8);
    long long v62 = xmmword_24116B200;
    long long v61 = xmmword_24116C380;
    uint64_t v60 = v16;
    uint64_t v65 = v17;
    do
    {
      uint64_t v83 = v19;
      if (v64) {
        id v21 = (id)MEMORY[0x245617450](v19, v16);
      }
      else {
        id v21 = *(id *)(v16 + 8 * v19 + 32);
      }
      uint64_t v22 = v21;
      uint64_t v82 = v20;
      *(void *)&long long v84 = sub_241161160();
      *((void *)&v84 + 1) = v23;
      id v24 = v76;
      sub_24115C790();
      sub_24108741C();
      uint64_t v80 = sub_241161480();
      uint64_t v79 = v25;
      (*v63)(v24, v77);
      swift_bridgeObjectRelease();
      sub_241051304();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v62;
      uint64_t v27 = sub_241161140();
      uint64_t v29 = v28;
      *(void *)(inited + 32) = v27;
      *(void *)(inited + 40) = v28;
      id v81 = v22;
      uint64_t v30 = sub_2411611A0();
      uint64_t v32 = v31;
      *(void *)(inited + 48) = v30;
      *(void *)(inited + 56) = v31;
      if (v29)
      {
        uint64_t v33 = v5;
        id v34 = v3;
        swift_bridgeObjectRetain();
        id v35 = sub_241051F68(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v37 = v35[2];
        unint64_t v36 = v35[3];
        if (v37 >= v36 >> 1) {
          id v35 = sub_241051F68((void *)(v36 > 1), v37 + 1, 1, v35);
        }
        void v35[2] = v37 + 1;
        uint64_t v38 = &v35[2 * v37];
        uint64_t v38[4] = v27;
        uint64_t v38[5] = v29;
        unint64_t v3 = v34;
        uint64_t v5 = v33;
      }
      else
      {
        id v35 = (void *)MEMORY[0x263F8EE78];
      }
      uint64_t v39 = v83;
      if (v32)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v35 = sub_241051F68(0, v35[2] + 1, 1, v35);
        }
        unint64_t v41 = v35[2];
        unint64_t v40 = v35[3];
        if (v41 >= v40 >> 1) {
          id v35 = sub_241051F68((void *)(v40 > 1), v41 + 1, 1, v35);
        }
        void v35[2] = v41 + 1;
        id v42 = &v35[2 * v41];
        void v42[4] = v30;
        v42[5] = v32;
      }
      uint64_t v19 = v39 + 1;
      swift_release();
      *(void *)&long long v84 = v35;
      sub_241089A60(0, (unint64_t *)&qword_26B005D98, MEMORY[0x263F8D488]);
      sub_241051380();
      uint64_t v43 = sub_241160680();
      uint64_t v45 = v44;
      swift_bridgeObjectRelease();
      id v46 = (void *)sub_241160C00();
      id v47 = objc_msgSend(v66, sel_localizedStringFromNumber_numberStyle_, v46, 0);

      uint64_t v48 = sub_241160730();
      uint64_t v50 = v49;

      uint64_t v51 = v73;
      uint64_t v52 = v75;
      v69(v73, v71, v75);
      LOBYTE(v47) = sub_24115DB20();
      v68(v51, v52);
      if (v47)
      {
        *(void *)&long long v84 = 9404642;
        *((void *)&v84 + 1) = 0xA300000000000000;
        sub_241160860();
        swift_bridgeObjectRelease();
      }
      else
      {
        *(void *)&long long v84 = v48;
        *((void *)&v84 + 1) = v50;
      }
      sub_241160860();
      long long v53 = v84;
      sub_241089A60(0, (unint64_t *)&qword_26B007390, MEMORY[0x263F8E0F8]);
      uint64_t v54 = swift_initStackObject();
      *(_OWORD *)(v54 + 16) = v61;
      *(_OWORD *)(v54 + 32) = v53;
      uint64_t v55 = v79;
      *(void *)(v54 + 48) = v80;
      *(void *)(v54 + 56) = v55;
      *(void *)(v54 + 64) = v43;
      *(void *)(v54 + 72) = v45;
      sub_241087640(v54, v5);
      sub_241089AB0((uint64_t)v5, (uint64_t)v3);
      id v20 = v82;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v20 = sub_2410527C4(0, v20[2] + 1, 1, v20);
      }
      uint64_t v16 = v60;
      unint64_t v57 = v20[2];
      unint64_t v56 = v20[3];
      if (v57 >= v56 >> 1) {
        id v20 = sub_2410527C4((void *)(v56 > 1), v57 + 1, 1, v20);
      }
      uint64_t v85 = v78;
      uint64_t v86 = sub_241089B14(&qword_268CF0ED8, (void (*)(uint64_t))type metadata accessor for MedicationPDFTextRow);
      uint64_t v87 = sub_241089B14(&qword_268CF0EE0, (void (*)(uint64_t))type metadata accessor for MedicationPDFTextRow);
      id v58 = sub_2410277C0((uint64_t *)&v84);
      sub_241089AB0((uint64_t)v3, (uint64_t)v58);
      void v20[2] = v57 + 1;
      sub_241089B5C(&v84, &v20[6 * v57 + 4]);
      sub_241089B74((uint64_t)v3);

      sub_241089B74((uint64_t)v5);
    }
    while (v65 != v19);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_241088A04(uint64_t a1)
{
  uint64_t v2 = sub_24115DB30();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v29[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_24115DB60();
  uint64_t v31 = MEMORY[0x263F43E08];
  sub_2410277C0(v29);
  sub_24115DB70();
  uint64_t v6 = sub_24115DD40();
  sub_24101F178((uint64_t)v29);
  if (qword_26B007268 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_24115C960();
  uint64_t v9 = v8;
  uint64_t v10 = sub_24115D940();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F43D88], v2);
  uint64_t v30 = sub_24115E7F0();
  uint64_t v31 = MEMORY[0x263F44898];
  sub_2410277C0(v29);
  MEMORY[0x245614640](v7, v9, v5, v10);
  uint64_t v11 = sub_24115DD40();
  sub_24101F178((uint64_t)v29);
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    double v13 = (uint64_t *)(a1 + 72);
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
    long long v28 = xmmword_24116B370;
    do
    {
      uint64_t v15 = *(v13 - 2);
      uint64_t v16 = *v13;
      uint64_t v17 = sub_24101A6BC(v13 - 5, v15);
      uint64_t v30 = v15;
      uint64_t v31 = v16;
      uint64_t v18 = sub_2410277C0(v29);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v18, v17, v15);
      uint64_t v19 = sub_24115DD40();
      sub_24101F178((uint64_t)v29);
      sub_2410892A8(0, (unint64_t *)&qword_268CF08F8, (uint64_t (*)(uint64_t))sub_241089274, MEMORY[0x263F8E0F8]);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = v28;
      *(void *)(v20 + 32) = v19;
      uint64_t v21 = MEMORY[0x245613B70]();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_241052918(0, v14[2] + 1, 1, v14);
      }
      unint64_t v23 = v14[2];
      unint64_t v22 = v14[3];
      if (v23 >= v22 >> 1) {
        uint64_t v14 = sub_241052918((void *)(v22 > 1), v23 + 1, 1, v14);
      }
      _OWORD v14[2] = v23 + 1;
      v14[v23 + 4] = v21;
      v13 += 6;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v24 = MEMORY[0x245613B60](v14);
  swift_bridgeObjectRelease();
  sub_2410892A8(0, (unint64_t *)&qword_268CF08F8, (uint64_t (*)(uint64_t))sub_241089274, MEMORY[0x263F8E0F8]);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_24116C380;
  *(void *)(v25 + 32) = v6;
  *(void *)(v25 + 40) = v11;
  *(void *)(v25 + 48) = v24;
  uint64_t v26 = MEMORY[0x245613B70]();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_241088DF8()
{
  uint64_t v0 = sub_24115E860();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_241088188();
  sub_24115D930();
  sub_24115E850();
  swift_bridgeObjectRelease();
  sub_24115DA10();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_241088F1C()
{
  return sub_24115D8B0();
}

uint64_t sub_241088F40(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  uint64_t v4 = sub_241089B14(&qword_268CF19A0, (void (*)(uint64_t))type metadata accessor for MedicationsPDFProvider);
  void *v3 = v1;
  v3[1] = sub_24108901C;
  return MEMORY[0x270F33478](a1, v4);
}

uint64_t sub_24108901C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_24108911C()
{
  sub_24115D920();
  uint64_t v0 = (void *)sub_24115D910();
  id v1 = objc_msgSend(v0, sel_CGColor);

  uint64_t v8 = sub_24115DEC0();
  uint64_t v9 = MEMORY[0x263F440B0];
  sub_2410277C0(v7);
  sub_24115DEB0();
  uint64_t v2 = sub_24115DD40();
  sub_24101F178((uint64_t)v7);
  uint64_t v8 = sub_24115DB60();
  uint64_t v9 = MEMORY[0x263F43E08];
  sub_2410277C0(v7);
  sub_24115DB70();
  uint64_t v3 = sub_24115DD40();
  sub_24101F178((uint64_t)v7);
  sub_2410892A8(0, (unint64_t *)&qword_268CF08F8, (uint64_t (*)(uint64_t))sub_241089274, MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24116B200;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v3;
  uint64_t v5 = MEMORY[0x245613B70]();
  swift_bridgeObjectRelease();
  return v5;
}

void sub_241089274(uint64_t a1)
{
}

void sub_2410892A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_24108930C()
{
  unint64_t result = qword_268CF1870;
  if (!qword_268CF1870)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF1870);
  }
  return result;
}

uint64_t *sub_241089364(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24115DB30();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_241089448(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24115DB30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_2410894C0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24115DB30();
  unint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_241089558(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24115DB30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_2410895EC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24115DB30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_241089668(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24115DB30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_2410896F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241089708);
}

uint64_t sub_241089708(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24115DB30();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2410897B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2410897CC);
}

void *sub_2410897CC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24115DB30();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MedicationsPDFProvider(uint64_t a1)
{
  return sub_24102806C(a1, qword_268CF0EB8);
}

uint64_t sub_241089894()
{
  uint64_t result = sub_24115DB30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_241089930()
{
  return sub_241089B14(&qword_268CF0ED0, (void (*)(uint64_t))type metadata accessor for MedicationsPDFProvider);
}

uint64_t sub_241089978()
{
  return sub_241088A04(*(void *)(v0 + 16));
}

uint64_t sub_241089980(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x245617460](v7, v9, a2 & 1, v5);
  uint64_t *v2 = result;
  return result;
}

uint64_t type metadata accessor for MedicationPDFTextRow(uint64_t a1)
{
  return sub_24102806C(a1, qword_268CF0EF0);
}

void sub_241089A60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8D310]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241089AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationPDFTextRow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241089B14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_OWORD *sub_241089B5C(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_241089B74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationPDFTextRow(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_241089BD0()
{
  if (!qword_268CF0B00)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF0B00);
    }
  }
}

void **sub_241089C3C(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24115DB30();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    double v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)v7 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_241160F60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v7;
}

uint64_t sub_241089D74(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24115DB30();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_241160F60();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void **sub_241089E34(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24115DB30();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_241160F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

void **sub_241089F20(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_24115DB30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_241160F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

void *sub_24108A000(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24115DB30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_241160F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void **sub_24108A0D4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24115DB30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_241160F60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_24108A1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24108A1C4);
}

uint64_t sub_24108A1C4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24115DB30();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_241160F60();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_24108A2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24108A304);
}

void *sub_24108A304(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_24115DB30();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_241160F60();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_24108A430()
{
  uint64_t result = sub_24115DB30();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_241160F60();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_24108A508()
{
  return sub_241089B14(&qword_268CF0F08, (void (*)(uint64_t))type metadata accessor for MedicationPDFTextRow);
}

uint64_t type metadata accessor for MedicationsNotificationSettingsViewController(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF0F18);
}

uint64_t sub_24108A574()
{
  return swift_initClassMetadata2();
}

id sub_24108A5C4()
{
  sub_24115CEA0();
  unint64_t v1 = v0;
  uint64_t v2 = sub_24115CE90();
  sub_24115F0C0();
  sub_24115F0B0();
  sub_24115F050();
  swift_release();
  sub_241024708(0, (unint64_t *)&qword_26B007320);
  sub_241160D60();
  sub_24115F040();
  swift_allocObject();
  uint64_t v3 = sub_24115EF90();
  type metadata accessor for MedicationsNotificationSettingsDataSource(0);
  uint64_t v4 = swift_allocObject();
  *(void *)&v1[qword_268CF0F10] = sub_241090080(v3, v2, v4);

  swift_retain();
  uint64_t v5 = (void *)sub_24115E730();
  uint64_t v6 = qword_26B007268;
  id v7 = v5;
  if (v6 != -1) {
    swift_once();
  }
  sub_24115C960();
  uint64_t v8 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setTitle_, v8, 0xE000000000000000);

  id result = objc_msgSend(v7, sel_collectionView);
  if (result)
  {
    uint64_t v10 = result;
    id v11 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
    objc_msgSend(v10, sel_setBackgroundColor_, v11);

    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24108A7E4()
{
}

void sub_24108A840()
{
}

void sub_24108A870(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_24108A8A4()
{
  return swift_release();
}

id sub_24108A8B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsNotificationSettingsViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24108A8EC()
{
  return swift_release();
}

uint64_t sub_24108A8FC()
{
  return type metadata accessor for MedicationsNotificationSettingsViewController(0);
}

uint64_t type metadata accessor for MedicationsNotificationSettingsDataSource(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF0F58);
}

uint64_t sub_24108A924()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24108A994()
{
  uint64_t v1 = sub_24115CB50();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t result = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + qword_268CF0F30);
  int v7 = *(unsigned __int8 *)(v0 + qword_268CF0F40);
  int v8 = *(unsigned __int8 *)(v6 + qword_268CF0F68);
  *(unsigned char *)(v6 + qword_268CF0F68) = v7;
  if (v7 != v8)
  {
    uint64_t v9 = type metadata accessor for MedicationsDoseRemindersItem();
    swift_allocObject();
    uint64_t v10 = swift_retain();
    uint64_t v11 = sub_2410B33C0(v10, v7);
    swift_release();
    sub_241091788(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    sub_24115DDF0();
    uint64_t v12 = swift_allocObject();
    long long v14 = xmmword_24116B370;
    *(_OWORD *)(v12 + 16) = xmmword_24116B370;
    sub_2410917EC(0, (unint64_t *)&qword_26B0070A0, (unint64_t *)&qword_26B0069A8, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = v14;
    *(void *)(v13 + 56) = v9;
    *(void *)(v13 + 64) = sub_2410928C8(&qword_268CF1160, (void (*)(uint64_t))type metadata accessor for MedicationsDoseRemindersItem);
    *(void *)(v13 + 32) = v11;
    swift_retain();
    sub_24115CB40();
    sub_24115CB20();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    sub_24115DDE0();
    sub_24115DE50();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24108AC80()
{
  uint64_t v1 = v0;
  sub_24102ABF8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410921B0(0, &qword_268CF1180, (void (*)(uint64_t))sub_24109281C, (void (*)(void))sub_241092894);
  uint64_t v15 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v15 - v7;
  sub_2410280A4(v0 + qword_268CF0F48, (uint64_t)v18);
  uint64_t v9 = v19;
  uint64_t v10 = v20;
  sub_24101A6BC(v18, v19);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v16 = (id)sub_241160EF0();
  uint64_t v11 = sub_241160EB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  sub_24109281C();
  sub_241092894();
  sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
  sub_24115FF10();
  sub_241092390((uint64_t)v4, (uint64_t (*)(void))sub_24102ABF8);

  swift_release();
  sub_24101F178((uint64_t)v18);
  swift_allocObject();
  swift_weakInit();
  sub_241092918();
  uint64_t v12 = v15;
  uint64_t v13 = sub_24115FF60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
  *(void *)(v1 + qword_268CF0F50) = v13;
  return swift_release();
}

uint64_t sub_24108AF88(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    BOOL v4 = objc_msgSend(v1, sel_authorizationStatus) == (id)1;
    *(unsigned char *)(v3 + qword_268CF0F40) = v4;
    sub_24108A994();
    return swift_release();
  }
  return result;
}

uint64_t sub_24108B008()
{
  swift_retain();
  sub_24108AC80();

  return swift_release();
}

void sub_24108B044()
{
}

uint64_t sub_24108B074()
{
  swift_release();
  swift_release();
  swift_release();
  sub_24101F178(v0 + qword_268CF0F48);

  return swift_release();
}

uint64_t sub_24108B0E4()
{
  uint64_t v0 = sub_24115E1D0();
  swift_release();
  swift_release();
  swift_release();
  sub_24101F178(v0 + qword_268CF0F48);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24108B174()
{
  return type metadata accessor for MedicationsNotificationSettingsDataSource(0);
}

uint64_t type metadata accessor for MedicationsDoseRemindersDataSource(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF0F78);
}

uint64_t sub_24108B19C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24108B1F4(uint64_t a1, char a2)
{
  uint64_t v18 = sub_24115CB50();
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  *(void *)(v2 + qword_268CF0F70) = a1;
  *(unsigned char *)(v2 + qword_268CF0F68) = a2;
  uint64_t v8 = type metadata accessor for MedicationsDoseRemindersItem();
  swift_allocObject();
  uint64_t v19 = a1;
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_2410B33C0(v9, a2);
  sub_241091788(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_24115DDF0();
  uint64_t v11 = swift_allocObject();
  long long v17 = xmmword_24116B370;
  *(_OWORD *)(v11 + 16) = xmmword_24116B370;
  sub_2410917EC(0, (unint64_t *)&qword_26B0070A0, (unint64_t *)&qword_26B0069A8, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v17;
  *(void *)(v12 + 56) = v8;
  *(void *)(v12 + 64) = sub_2410928C8(&qword_268CF1160, (void (*)(uint64_t))type metadata accessor for MedicationsDoseRemindersItem);
  *(void *)(v12 + 32) = v10;
  swift_retain();
  sub_24115CB40();
  sub_24115CB20();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v14 = v18;
  v13(v7, v18);
  sub_24115DDE0();
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  strcpy((char *)v21, "MutableArray<");
  HIWORD(v21[1]) = -4864;
  sub_24115CB40();
  sub_24115CB20();
  v13(v7, v14);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  uint64_t v15 = sub_24115DE40();
  swift_release();
  swift_release();
  return v15;
}

void sub_24108B560()
{
}

uint64_t sub_24108B57C()
{
  return swift_release();
}

uint64_t sub_24108B58C()
{
  sub_24115DE70();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24108B5DC()
{
  return type metadata accessor for MedicationsDoseRemindersDataSource(0);
}

uint64_t type metadata accessor for MedicationsFollowUpNotificationDataSource(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF0FC0);
}

void sub_24108B604()
{
  sub_24108F2BC(319);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_24108B6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24108FBF0(a1, a2, a3, a4, MEMORY[0x263F44120]);
}

uint64_t sub_24108B710()
{
  return sub_24115E790();
}

uint64_t sub_24108B76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_24115CB50();
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24115E480();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241091788(0, &qword_268CF1058, MEMORY[0x263F441D8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v26 - v14;
  if (sub_241160730() == a1 && v16 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v26 = v9;
  char v18 = sub_241161890();
  swift_bridgeObjectRelease();
  if (v18)
  {
LABEL_13:
    if (qword_26B007268 != -1) {
      swift_once();
    }
    sub_24115C960();
    uint64_t v24 = sub_24115DFE0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v15, 1, 1, v24);
    a3[3] = sub_24115E000();
    a3[4] = sub_2410928C8(&qword_268CF1060, MEMORY[0x263F441E0]);
    sub_2410277C0(a3);
    return sub_24115DFF0();
  }
  if (sub_241160730() == a1 && v19 == a2)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = v10;
  }
  else
  {
    char v21 = sub_241161890();
    swift_bridgeObjectRelease();
    uint64_t v22 = v10;
    if ((v21 & 1) == 0)
    {
      a3[3] = sub_24115DA70();
      a3[4] = sub_2410928C8(&qword_268CF07E8, MEMORY[0x263F43D00]);
      sub_2410277C0(a3);
      return sub_24115DA60();
    }
  }
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  *(void *)&long long v28 = 0x74497265746F6F46;
  *((void *)&v28 + 1) = 0xEB000000005F6D65;
  sub_24115CB40();
  sub_24115CB20();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_24115E470();
  uint64_t v25 = v26;
  a3[3] = v26;
  a3[4] = sub_2410928C8(&qword_268CF07F0, MEMORY[0x263F44568]);
  sub_2410277C0(a3);
  (*(void (**)(void))(v22 + 16))();
  long long v28 = xmmword_24116CA30;
  long long v29 = xmmword_24116CA40;
  char v30 = 0;
  sub_24115E460();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v12, v25);
}

uint64_t sub_24108BCF8()
{
  sub_24115F9B0();
  unint64_t v0 = (void (*)(unsigned char *, void))sub_24115F940();
  void *v1 = 0x4024000000000000;
  v0(v5, 0);
  uint64_t v2 = (uint64_t (*)(unsigned char *, void))sub_24115F940();
  *(void *)(v3 + 16) = 0x4020000000000000;
  return v2(v5, 0);
}

uint64_t sub_24108BD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_24108B76C(a1, a2, a3);
}

void sub_24108BD90(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24108BDA0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_24104D4C8(a1, (uint64_t)v4);
  if (!v4[3])
  {
    uint64_t result = sub_24104D52C((uint64_t)v4);
    goto LABEL_5;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
LABEL_5:
  }
    *a2 = 2;
  return result;
}

unint64_t sub_24108BE14(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  unint64_t v53 = a1;
  uint64_t v58 = sub_24115DDF0();
  uint64_t v60 = *(void *)(v58 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v58);
  uint64_t v59 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v55 = (char *)v52 - v10;
  sub_2410925DC(0);
  uint64_t v56 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v57 = (uint64_t)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v54 = (uint64_t)v52 - v15;
  uint64_t v16 = sub_24115CB50();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v20 = sub_24115EFD0();
  uint64_t v21 = a7[3];
  uint64_t v22 = a7[4];
  sub_24101A6BC(a7, v21);
  char v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
  if (v20 & 1) != 0 && (v23)
  {
    uint64_t v24 = type metadata accessor for MedicationsFollowUpNotificationsItem();
    swift_allocObject();
    uint64_t v25 = swift_retain();
    uint64_t v26 = sub_2411042DC(v25);
    swift_release();
    sub_241091788(0, &qword_268CF1150, (uint64_t (*)(uint64_t))sub_2410925DC, MEMORY[0x263F8E0F8]);
    uint64_t v27 = *(void *)(v12 + 72);
    unint64_t v28 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_24116B200;
    v52[0] = v29;
    uint64_t v30 = v29 + v28;
    sub_2410917EC(0, (unint64_t *)&qword_26B0070A0, (unint64_t *)&qword_26B0069A8, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_24116B370;
    *(void *)(v31 + 56) = v24;
    *(void *)(v31 + 64) = sub_2410928C8(&qword_268CF1158, (void (*)(uint64_t))type metadata accessor for MedicationsFollowUpNotificationsItem);
    *(void *)(v31 + 32) = v26;
    v52[1] = v26;
    swift_retain();
    sub_24115CB40();
    sub_24115CB20();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    sub_24115DDE0();
    uint64_t v32 = v60;
    uint64_t v33 = v58;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v30, 0, 1, v58);
    uint64_t v34 = v30 + v27;
    sub_24115F0C0();
    sub_24115F0B0();
    uint64_t v35 = sub_24115F070();
    swift_release();
    sub_24108C5AC(v35, a7, v53, v30 + v27);
    swift_release();
    uint64_t v36 = v54;
    sub_241092610(v30, v54);
    uint64_t v37 = v57;
    sub_241092674(v36, v57);
    uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
    uint64_t v39 = (void (**)(char *, uint64_t, uint64_t))(v32 + 32);
    if (v38(v37, 1, v33) == 1)
    {
      sub_241092390(v37, (uint64_t (*)(void))sub_2410925DC);
      unint64_t v40 = MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v41 = v37;
      id v42 = *v39;
      uint64_t v43 = v55;
      (*v39)(v55, v41, v33);
      v42(v59, (uint64_t)v43, v33);
      unint64_t v40 = MEMORY[0x263F8EE78];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v40 = sub_241052A24(0, *(void *)(v40 + 16) + 1, 1, v40);
      }
      unint64_t v45 = *(void *)(v40 + 16);
      unint64_t v44 = *(void *)(v40 + 24);
      if (v45 >= v44 >> 1) {
        unint64_t v40 = sub_241052A24(v44 > 1, v45 + 1, 1, v40);
      }
      *(void *)(v40 + 16) = v45 + 1;
      unint64_t v46 = v40
          + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))
          + *(void *)(v60 + 72) * v45;
      uint64_t v33 = v58;
      v42((char *)v46, (uint64_t)v59, v58);
      uint64_t v37 = v57;
    }
    sub_241092610(v34, v36);
    sub_241092674(v36, v37);
    if (v38(v37, 1, v33) == 1)
    {
      sub_241092390(v37, (uint64_t (*)(void))sub_2410925DC);
    }
    else
    {
      id v47 = *v39;
      uint64_t v48 = v55;
      (*v39)(v55, v37, v33);
      v47(v59, (uint64_t)v48, v33);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v40 = sub_241052A24(0, *(void *)(v40 + 16) + 1, 1, v40);
      }
      unint64_t v50 = *(void *)(v40 + 16);
      unint64_t v49 = *(void *)(v40 + 24);
      if (v50 >= v49 >> 1) {
        unint64_t v40 = sub_241052A24(v49 > 1, v50 + 1, 1, v40);
      }
      *(void *)(v40 + 16) = v50 + 1;
      v47((char *)(v40+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v50), (uint64_t)v59, v33);
    }
    swift_release();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  else
  {
    sub_241091788(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    unint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_24116B370;
    sub_24115CB40();
    sub_24115CB20();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    sub_24115DDE0();
  }
  return v40;
}

uint64_t sub_24108C5AC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v7 = sub_24115CB50();
  uint64_t v28 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24115E020();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v24 < 1) {
      goto LABEL_9;
    }
  }
  else if (*(uint64_t *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    goto LABEL_9;
  }
  sub_24115F0C0();
  sub_24115F0B0();
  sub_24115F050();
  swift_release();
  sub_241024708(0, (unint64_t *)&qword_26B007320);
  sub_241160D60();
  sub_24115F040();
  swift_allocObject();
  sub_24115EF90();
  char v14 = sub_24115F000();
  swift_release();
  if (v14)
  {
    int v15 = sub_24109251C(a2);
    unint64_t v16 = Array<A>.markedCritical.getter(a3);
    uint64_t v17 = sub_2410DF49C(v16);
    swift_bridgeObjectRelease();
    if ((v17 & 0xC000000000000001) != 0) {
      uint64_t v18 = sub_241161530();
    }
    else {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    uint64_t v19 = a4;
    swift_bridgeObjectRelease();
    sub_24108DA10(v15, v18, v27, (uint64_t)v13);
    sub_2410917EC(0, (unint64_t *)&qword_26B0070A0, (unint64_t *)&qword_26B0069A8, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_24116B370;
    *(void *)(v20 + 56) = v10;
    *(void *)(v20 + 64) = sub_2410928C8((unint64_t *)&qword_26B0069C8, MEMORY[0x263F441F0]);
    uint64_t v21 = sub_2410277C0((uint64_t *)(v20 + 32));
    (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 16))(v21, v13, v10);
    sub_24115CB40();
    sub_24115CB20();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v7);
    sub_24115DDE0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v22 = sub_24115DDF0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v19, 0, 1, v22);
  }
LABEL_9:
  uint64_t v25 = sub_24115DDF0();
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);

  return v26(a4, 1, 1, v25);
}

uint64_t sub_24108C9F8()
{
  return sub_241160DF0();
}

uint64_t sub_24108CA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v39 = a4;
  uint64_t v6 = sub_24115E650();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v35 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241091788(0, &qword_268CF1138, MEMORY[0x263F43C30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v34 = (char *)&v32 - v9;
  uint64_t v10 = sub_24115CB50();
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24115E480();
  uint64_t v38 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  int v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_241160730() == a1 && v16 == a2)
  {
    swift_bridgeObjectRelease();
    if (sub_24115CDF0()) {
      goto LABEL_7;
    }
LABEL_11:
    if (qword_26B007268 == -1) {
      goto LABEL_17;
    }
    goto LABEL_22;
  }
  char v18 = sub_241161890();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0 && !sub_24115CDF0()) {
    goto LABEL_11;
  }
LABEL_7:
  if (sub_241160730() == a1 && v19 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = sub_241161890();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
LABEL_18:
      uint64_t v24 = sub_24115DA70();
      uint64_t v25 = v39;
      v39[3] = v24;
      v25[4] = sub_2410928C8(&qword_268CF07E8, MEMORY[0x263F43D00]);
      sub_2410277C0(v25);
      return sub_24115DA60();
    }
  }
  if (sub_24115CDF0() != 1) {
    goto LABEL_18;
  }
  if (sub_24109251C(v36) <= 2u)
  {
    if (qword_26B007268 == -1)
    {
LABEL_17:
      sub_24115C960();
      *(void *)&long long v40 = 0x74497265746F6F46;
      *((void *)&v40 + 1) = 0xEB000000005F6D65;
      sub_24115CB40();
      sub_24115CB20();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v10);
      sub_241160860();
      swift_bridgeObjectRelease();
      sub_24115E470();
      uint64_t v21 = v39;
      v39[3] = v13;
      v21[4] = sub_2410928C8(&qword_268CF07F0, MEMORY[0x263F44568]);
      sub_2410277C0(v21);
      uint64_t v22 = v38;
      (*(void (**)(void))(v38 + 16))();
      long long v40 = xmmword_24116CA30;
      long long v41 = xmmword_24116CA40;
      char v42 = 0;
      sub_24115E460();
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v15, v13);
    }
LABEL_22:
    swift_once();
    goto LABEL_17;
  }
  if (qword_26B007268 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_24115C960();
  uint64_t v28 = v27;
  sub_24115C960();
  *(void *)&long long v40 = v26;
  *((void *)&v40 + 1) = v28;
  sub_241160860();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_2411607D0();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  uint64_t v29 = sub_24115D9F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v34, 1, 1, v29);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v35, *MEMORY[0x263F446D0], v33);
  uint64_t v30 = sub_24115DA00();
  uint64_t v31 = v39;
  v39[3] = v30;
  v31[4] = sub_2410928C8(&qword_268CF1140, MEMORY[0x263F43C38]);
  sub_2410277C0(v31);
  return sub_24115D9E0();
}

uint64_t sub_24108D1FC()
{
  uint64_t v0 = sub_24115D770();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F43580], v0);
  sub_24115D760();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_24108D2E0()
{
  uint64_t v0 = sub_24115DF90();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  BOOL v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = sub_24115E180();
  sub_24115DF30();
  if (v7 < 1)
  {
    sub_24115E170();
    uint64_t v9 = sub_24115DF80();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  }
  else
  {
    sub_24115DF10();
    uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
    v8(v6, v0);
    sub_24115E170();
    uint64_t v9 = sub_24115DF80();
    swift_unknownObjectRelease();
    v8(v4, v0);
  }
  return v9;
}

void sub_24108D470()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void (**)(uint64_t))((char *)v0 + qword_268CF2858);
  if (v2)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    sub_241032B54((uint64_t)v2);
  }
  sub_24115F0C0();
  sub_24115F0B0();
  BOOL v4 = (void *)sub_24115F080();
  swift_release();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  v7[4] = sub_241092814;
  v7[5] = v5;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_24108D998;
  uint64_t v7[3] = &unk_26F556010;
  uint64_t v6 = _Block_copy(v7);
  swift_release();
  objc_msgSend(v4, sel_rescheduleMedicationsWithCompletion_, v6);
  _Block_release(v6);
}

uint64_t sub_24108D5C0(char a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_24115F790();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - v11;
  if (a1)
  {
    sub_24115F740();
    uint64_t v13 = sub_24115F780();
    os_log_type_t v14 = sub_241160D10();
    if (os_log_type_enabled(v13, v14))
    {
      int v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v31 = v16;
      uint64_t v32 = a3;
      *(_DWORD *)int v15 = 136446210;
      swift_getMetatypeMetadata();
      uint64_t v17 = sub_241160760();
      uint64_t v32 = sub_24101F0A4(v17, v18, &v31);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v13, v14, "[%{public}s] Notification Setting changed, rescheduling medications ", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v16, -1, -1);
      MEMORY[0x2456180C0](v15, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    sub_24115F740();
    id v20 = a2;
    id v21 = a2;
    uint64_t v22 = sub_24115F780();
    os_log_type_t v23 = sub_241160D30();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v31 = v25;
      uint64_t v32 = a3;
      *(_DWORD *)uint64_t v24 = 136446466;
      swift_getMetatypeMetadata();
      uint64_t v26 = sub_241160760();
      uint64_t v32 = sub_24101F0A4(v26, v27, &v31);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      uint64_t v32 = (uint64_t)a2;
      id v28 = a2;
      sub_2410917EC(0, (unint64_t *)&qword_268CF0728, (unint64_t *)&qword_26B0073B0, MEMORY[0x263F8E4D8], MEMORY[0x263F8D8F0]);
      uint64_t v29 = sub_241160760();
      uint64_t v32 = sub_24101F0A4(v29, v30, &v31);
      sub_241161430();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241007000, v22, v23, "[%{public}s] Failed to reschedule medications after notification setting change with error: %{public}s)", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v25, -1, -1);
      MEMORY[0x2456180C0](v24, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

void sub_24108D998(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_24108DA10@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v77 = a3;
  uint64_t v67 = a2;
  LODWORD(v78) = a1;
  uint64_t v90 = a4;
  uint64_t v88 = sub_24115F8B0();
  uint64_t v86 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  id v66 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24115E650();
  uint64_t v83 = *(void *)(v5 - 8);
  uint64_t v84 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v87 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241091788(0, &qword_26B006D78, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v89 = (char *)&v66 - v9;
  uint64_t v10 = sub_24115DEE0();
  uint64_t v79 = *(void *)(v10 - 8);
  uint64_t v80 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v85 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241091788(0, &qword_26B006D70, MEMORY[0x263F81DF8], v7);
  MEMORY[0x270FA5388](v12 - 8);
  unsigned int v71 = (char *)&v66 - v13;
  uint64_t v76 = sub_24115F7F0();
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  unint64_t v72 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_24115F7B0();
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v70 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_24115E9F0();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241032AA0();
  MEMORY[0x270FA5388](v18 - 8);
  id v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24115F9D0();
  uint64_t v81 = *(void *)(v21 - 8);
  uint64_t v82 = v21;
  MEMORY[0x270FA5388](v21);
  os_log_type_t v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F9C0();
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  sub_24115F990();
  uint64_t v24 = self;
  id v25 = objc_msgSend(v24, sel_secondaryLabelColor);
  uint64_t v26 = sub_24115F930();
  uint64_t v91 = v23;
  unint64_t v27 = (void (*)(uint64_t *, void))v26;
  sub_24115F8F0();
  v27(v92, 0);
  if (v78 - 1 >= 2)
  {
    uint64_t v43 = v91;
    if ((_BYTE)v78)
    {
      sub_24115C960();
      uint64_t v48 = v43;
      sub_24115F8D0();
      id v58 = objc_msgSend(v24, sel_secondaryLabelColor);
      uint64_t v59 = (void (*)(uint64_t *, void))sub_24115F920();
      sub_24115F8F0();
      v59(v92, 0);
      uint64_t v60 = v66;
      sub_24115F8A0();
      id v61 = objc_msgSend(v24, sel_quaternarySystemFillColor);
      sub_24115F870();
      uint64_t v49 = v82;
      uint64_t v93 = v82;
      uint64_t v94 = MEMORY[0x263F81F20];
      long long v62 = sub_2410277C0(v92);
      uint64_t v51 = v81;
      (*(void (**)(uint64_t *, char *, uint64_t))(v81 + 16))(v62, v43, v49);
      (*(void (**)(unsigned char *, void, uint64_t))(v79 + 104))(v85, *MEMORY[0x263F440E0], v80);
      uint64_t v63 = v86;
      uint64_t v65 = v88;
      unint64_t v64 = v89;
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v89, v60, v88);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v64, 0, 1, v65);
      (*(void (**)(char *, void, uint64_t))(v83 + 104))(v87, *MEMORY[0x263F446D0], v84);
      sub_24115E010();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v65);
    }
    else
    {
      uint64_t v44 = sub_24115CB90();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v20, 1, 1, v44);
      sub_24115E9E0();
      sub_24115EF20();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v17, v69);
      sub_241092390((uint64_t)v20, (uint64_t (*)(void))sub_241032AA0);
      sub_2410917EC(0, (unint64_t *)&qword_26B007398, (unint64_t *)&qword_26B0073C0, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
      uint64_t v45 = swift_allocObject();
      long long v78 = xmmword_24116B370;
      uint64_t v46 = MEMORY[0x263F8D6C8];
      *(_OWORD *)(v45 + 16) = xmmword_24116B370;
      uint64_t v47 = MEMORY[0x263F8D750];
      *(void *)(v45 + 56) = v46;
      *(void *)(v45 + 64) = v47;
      *(void *)(v45 + 32) = 0;
      sub_241160750();
      swift_bridgeObjectRelease();
      uint64_t v48 = v43;
      sub_24115F8D0();
      uint64_t v49 = v82;
      uint64_t v93 = v82;
      uint64_t v94 = MEMORY[0x263F81F20];
      unint64_t v50 = sub_2410277C0(v92);
      uint64_t v51 = v81;
      (*(void (**)(uint64_t *, char *, uint64_t))(v81 + 16))(v50, v43, v49);
      sub_241091788(0, &qword_26B0070B8, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
      sub_24115F800();
      *(_OWORD *)(swift_allocObject() + 16) = v78;
      uint64_t v52 = v73;
      unint64_t v53 = v70;
      uint64_t v54 = v74;
      (*(void (**)(char *, void, uint64_t))(v73 + 104))(v70, *MEMORY[0x263F81DE8], v74);
      uint64_t v55 = sub_24115F7C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v71, 1, 1, v55);
      uint64_t v56 = v72;
      sub_24115F7E0();
      sub_24115F7D0();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v56, v76);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
      uint64_t v57 = v85;
      unsigned char *v85 = 1;
      (*(void (**)(unsigned char *, void, uint64_t))(v79 + 104))(v57, *MEMORY[0x263F440D8], v80);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v89, 1, 1, v88);
      (*(void (**)(char *, void, uint64_t))(v83 + 104))(v87, *MEMORY[0x263F446D0], v84);
      swift_retain();
      sub_24115E010();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v48, v49);
  }
  else
  {
    uint64_t v28 = sub_24115CB90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v20, 1, 1, v28);
    sub_24115E9E0();
    sub_24115EF20();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v17, v69);
    sub_241092390((uint64_t)v20, (uint64_t (*)(void))sub_241032AA0);
    sub_2410917EC(0, (unint64_t *)&qword_26B007398, (unint64_t *)&qword_26B0073C0, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
    uint64_t v29 = swift_allocObject();
    long long v78 = xmmword_24116B370;
    uint64_t v30 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v29 + 16) = xmmword_24116B370;
    uint64_t v31 = MEMORY[0x263F8D750];
    *(void *)(v29 + 56) = v30;
    *(void *)(v29 + 64) = v31;
    *(void *)(v29 + 32) = v67;
    sub_241160750();
    swift_bridgeObjectRelease();
    uint64_t v32 = v91;
    sub_24115F8D0();
    uint64_t v33 = v82;
    uint64_t v93 = v82;
    uint64_t v94 = MEMORY[0x263F81F20];
    uint64_t v34 = sub_2410277C0(v92);
    uint64_t v35 = v81;
    (*(void (**)(uint64_t *, char *, uint64_t))(v81 + 16))(v34, v32, v33);
    sub_241091788(0, &qword_26B0070B8, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
    sub_24115F800();
    *(_OWORD *)(swift_allocObject() + 16) = v78;
    uint64_t v36 = v73;
    uint64_t v37 = v70;
    uint64_t v38 = v74;
    (*(void (**)(char *, void, uint64_t))(v73 + 104))(v70, *MEMORY[0x263F81DE8], v74);
    uint64_t v39 = sub_24115F7C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v71, 1, 1, v39);
    long long v40 = v72;
    sub_24115F7E0();
    sub_24115F7D0();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v40, v76);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    long long v41 = v85;
    unsigned char *v85 = 1;
    (*(void (**)(unsigned char *, void, uint64_t))(v79 + 104))(v41, *MEMORY[0x263F440D8], v80);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v89, 1, 1, v88);
    (*(void (**)(char *, void, uint64_t))(v83 + 104))(v87, *MEMORY[0x263F446D0], v84);
    swift_retain();
    sub_24115E010();
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v91, v33);
  }
}

uint64_t sub_24108EADC()
{
  sub_24102ABF8();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410921B0(0, &qword_268CF1170, (void (*)(uint64_t))sub_24102B528, (void (*)(void))sub_241091BC8);
  uint64_t v5 = v4;
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - v6;
  id v8 = *(id *)(v0 + qword_268CF0F88);
  uint64_t v9 = sub_24115D7D0();

  uint64_t v26 = v9;
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v27 = (id)sub_241160EF0();
  uint64_t v10 = sub_241160EB0();
  uint64_t v11 = *(void *)(v10 - 8);
  os_log_type_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v24 = v11 + 56;
  v23(v3, 1, 1, v10);
  sub_24102B528();
  uint64_t v22 = v12;
  uint64_t v21 = sub_241091BC8();
  uint64_t v20 = sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
  sub_24115FF10();
  uint64_t v19 = sub_24102ABF8;
  sub_241092390((uint64_t)v3, (uint64_t (*)(void))sub_24102ABF8);

  swift_release();
  swift_allocObject();
  uint64_t v13 = v18[1];
  swift_weakInit();
  void v18[2] = sub_241092774();
  sub_24115FF60();
  swift_release();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v25 + 8);
  v25 += 8;
  v14(v7, v5);
  swift_beginAccess();
  sub_24115FC30();
  swift_endAccess();
  swift_release();
  id v15 = *(id *)(v13 + qword_268CF0F98);
  uint64_t v16 = sub_24115D7D0();

  uint64_t v26 = v16;
  id v27 = (id)sub_241160EF0();
  v23(v3, 1, 1, v10);
  sub_24115FF10();
  sub_241092390((uint64_t)v3, (uint64_t (*)(void))v19);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_24115FF60();
  swift_release();
  v14(v7, v5);
  swift_beginAccess();
  sub_24115FC30();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_24108EF28(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    sub_24104D4C8(a1, (uint64_t)v5);
    if (v6)
    {
      if ((swift_dynamicCast() & 1) != 0 && v4 != *(unsigned char *)(v3 + qword_268CF0FB0))
      {
        *(unsigned char *)(v3 + qword_268CF0FB0) = v4;
        sub_24108D470();
      }
      return swift_release();
    }
    else
    {
      swift_release();
      return sub_24104D52C((uint64_t)v5);
    }
  }
  return result;
}

uint64_t sub_24108EFF0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24108D470();
    return swift_release();
  }
  return result;
}

void sub_24108F048()
{
}

void sub_24108F058()
{
}

uint64_t sub_24108F088()
{
  swift_release();
  sub_24101F178(v0 + qword_268CF0FA8);
  uint64_t v1 = v0 + qword_268CF2848;
  sub_24108F2BC(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v0 + qword_268CF2858);

  return sub_241032B54(v3);
}

uint64_t sub_24108F178()
{
  uint64_t v0 = sub_24115DD00();

  swift_release();
  sub_24101F178(v0 + qword_268CF0FA8);
  uint64_t v1 = v0 + qword_268CF2848;
  sub_24108F2BC(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  sub_241032B54(*(void *)(v0 + qword_268CF2858));
  return v0;
}

uint64_t sub_24108F268()
{
  sub_24108F178();

  return swift_deallocClassInstance();
}

void sub_24108F2BC(uint64_t a1)
{
}

uint64_t sub_24108F304()
{
  return sub_2410928C8(&qword_26B006FB0, MEMORY[0x263F07CB0]);
}

uint64_t sub_24108F338()
{
  return type metadata accessor for MedicationsFollowUpNotificationDataSource(0);
}

uint64_t type metadata accessor for MedicationsTimeZoneDataSource(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF0FD8);
}

uint64_t sub_24108F360()
{
  return swift_initClassMetadata2();
}

void sub_24108F3A0(void *a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for CriticalMedicationsListViewController(0));
  uint64_t v3 = swift_retain();
  id v6 = sub_241071524(v3);
  id v4 = objc_msgSend(a1, sel_navigationController);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_pushViewController_animated_, v6, 1);
  }
}

uint64_t sub_24108F440(uint64_t a1)
{
  uint64_t v14 = a1;
  uint64_t v2 = sub_24115CB50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MedicationsTimeZoneItem();
  swift_allocObject();
  uint64_t v7 = sub_24103C654(a1);
  sub_241091788(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_24115DDF0();
  uint64_t v8 = swift_allocObject();
  long long v13 = xmmword_24116B370;
  *(_OWORD *)(v8 + 16) = xmmword_24116B370;
  sub_2410917EC(0, (unint64_t *)&qword_26B0070A0, (unint64_t *)&qword_26B0069A8, MEMORY[0x263F437A0], MEMORY[0x263F8E0F8]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = v13;
  *(void *)(v9 + 56) = v6;
  *(void *)(v9 + 64) = sub_2410928C8(&qword_268CF1070, (void (*)(uint64_t))type metadata accessor for MedicationsTimeZoneItem);
  *(void *)(v9 + 32) = v7;
  swift_retain();
  sub_24115CB40();
  sub_24115CB20();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  sub_24115DDE0();
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  strcpy((char *)v15, "MutableArray<");
  HIWORD(v15[1]) = -4864;
  sub_24115CB40();
  sub_24115CB20();
  v10(v5, v2);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  uint64_t v11 = sub_24115DE40();
  swift_release();
  swift_release();
  return v11;
}

uint64_t sub_24108F77C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_24115CB50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24115E480();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_241160730() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = sub_241161890();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      a3[3] = sub_24115DA70();
      a3[4] = sub_2410928C8(&qword_268CF07E8, MEMORY[0x263F43D00]);
      sub_2410277C0(a3);
      return sub_24115DA60();
    }
  }
  uint64_t v19 = v6;
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  *(void *)&long long v20 = 0x74497265746F6F46;
  *((void *)&v20 + 1) = 0xEB000000005F6D65;
  sub_24115CB40();
  sub_24115CB20();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_24115E470();
  a3[3] = v10;
  a3[4] = sub_2410928C8(&qword_268CF07F0, MEMORY[0x263F44568]);
  sub_2410277C0(a3);
  (*(void (**)(void))(v11 + 16))();
  long long v20 = xmmword_24116CA30;
  long long v21 = xmmword_24116CA40;
  char v22 = 0;
  sub_24115E460();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_24108FAF0()
{
}

void sub_24108FB0C()
{
}

uint64_t sub_24108FB38()
{
  sub_24115DE70();

  return swift_deallocClassInstance();
}

uint64_t sub_24108FB68()
{
  return type metadata accessor for MedicationsTimeZoneDataSource(0);
}

uint64_t sub_24108FB70()
{
  return sub_241160DF0();
}

uint64_t sub_24108FBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24108FBF0(a1, a2, a3, a4, MEMORY[0x263F44128]);
}

uint64_t sub_24108FBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v6 = sub_24115DF90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  long long v13 = (char *)&v17 - v12;
  a5(v11);
  sub_24115DF10();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v13, v6);
  uint64_t v15 = sub_24115DF80();
  v14(v10, v6);
  return v15;
}

uint64_t sub_24108FD1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_24108F77C(a1, a2, a3);
}

uint64_t sub_24108FD34()
{
  return sub_24115E790();
}

void sub_24108FD90()
{
  objc_msgSend(v0, sel_setModalPresentationStyle_, 2);
  id v1 = objc_msgSend(v0, sel_navigationItem);
  sub_241024708(0, &qword_268CF1168);
  sub_241024708(0, &qword_268CF08F0);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_241161300();
  id v3 = (id)sub_241160DA0();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_24109272C, v2);
}

void sub_24108FED8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  id v3 = (void *)MEMORY[0x2456181C0](v2);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void sub_24108FF3C(void *a1)
{
  id v1 = a1;
  sub_24108FD90();
}

void sub_24108FF84(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);
}

uint64_t sub_24108FFF0()
{
  return sub_2410928C8(&qword_268CF1048, (void (*)(uint64_t))type metadata accessor for MedicationsTimeZoneDataSource);
}

uint64_t sub_241090038()
{
  return sub_2410928C8(&qword_268CF1050, (void (*)(uint64_t))type metadata accessor for MedicationsDoseRemindersDataSource);
}

uint64_t sub_241090080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v20[3] = sub_24115CEA0();
  v20[4] = &protocol witness table for HealthAppNotificationManager;
  *(unsigned char *)(a3 + qword_268CF0F40) = 0;
  v20[0] = a2;
  *(void *)(a3 + qword_268CF0F50) = 0;
  *(void *)(a3 + qword_268CF0F28) = a1;
  sub_2410280A4((uint64_t)v20, a3 + qword_268CF0F48);
  type metadata accessor for MedicationsDoseRemindersDataSource(0);
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  uint64_t v6 = sub_24108B1F4(a1, 0);
  uint64_t v7 = qword_268CF0F30;
  *(void *)(a3 + qword_268CF0F30) = v6;
  type metadata accessor for MedicationsFollowUpNotificationDataSource(0);
  uint64_t v8 = (void *)swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v9 = sub_2410902E8(a1, a2, v8);
  uint64_t v10 = qword_268CF0F38;
  *(void *)(a3 + qword_268CF0F38) = v9;
  swift_release();
  type metadata accessor for MedicationsTimeZoneDataSource(0);
  swift_allocObject();
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_24108F440(v11);
  sub_241053D48();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_24116C380;
  uint64_t v14 = MEMORY[0x263F440A0];
  *(void *)(v13 + 32) = *(void *)(a3 + v7);
  *(void *)(v13 + 40) = v14;
  uint64_t v15 = *(void *)(a3 + v10);
  uint64_t v16 = sub_2410928C8(&qword_268CF1068, (void (*)(uint64_t))type metadata accessor for MedicationsFollowUpNotificationDataSource);
  *(void *)(v13 + 48) = v15;
  *(void *)(v13 + 56) = v16;
  *(void *)(v13 + 64) = v12;
  *(void *)(v13 + 72) = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v17 = sub_24115E1E0();
  swift_retain();
  sub_24108AC80();
  id v18 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v18, sel_addObserver_selector_name_object_, v17, sel_fetchNotificationAuthorizationStatus, *MEMORY[0x263F833B8], 0);
  swift_release();
  swift_release();

  swift_release();
  sub_24101F178((uint64_t)v20);
  return v17;
}

uint64_t sub_2410902E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v130 = *a3;
  sub_24102ABF8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v132 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241091858(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v122 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_241161410();
  uint64_t v127 = *(void *)(v10 - 8);
  uint64_t v128 = v10;
  MEMORY[0x270FA5388](v10);
  long long v118 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410919E0(0, &qword_268CF1078, sub_24108F2BC, (void (*)(void))sub_2410919AC);
  uint64_t v114 = v12;
  uint64_t v113 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  Class v107 = (char *)&v96 - v13;
  sub_2410919E0(0, &qword_268CF10A8, sub_241091AAC, (void (*)(void))sub_241091BFC);
  uint64_t v110 = v14;
  uint64_t v111 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  id v105 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v104 = (char *)&v96 - v17;
  sub_2410756F0();
  uint64_t v101 = v18;
  uint64_t v102 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v97 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241091C94();
  uint64_t v109 = v20;
  uint64_t v112 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v106 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241091EE8();
  uint64_t v116 = v22;
  uint64_t v117 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v108 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241091FD4();
  uint64_t v120 = v24;
  uint64_t v123 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v115 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410920D4();
  uint64_t v124 = v26;
  uint64_t v129 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v119 = (char *)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410921B0(0, &qword_268CF1110, (void (*)(uint64_t))sub_2410920D4, (void (*)(void))sub_24109228C);
  uint64_t v125 = v28;
  uint64_t v126 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v121 = (char *)&v96 - v29;
  sub_241091AAC(0);
  uint64_t v133 = v30;
  uint64_t v131 = *(void *)(v30 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  objc_super v135 = (char *)&v96 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v134 = (char *)&v96 - v34;
  MEMORY[0x270FA5388](v33);
  id v136 = (char *)&v96 - v35;
  uint64_t v36 = sub_241160FB0();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (char *)&v96 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138[3] = sub_24115CEA0();
  v138[4] = &protocol witness table for HealthAppNotificationManager;
  v138[0] = a2;
  id v99 = (char *)a3 + qword_268CF2848;
  long long v40 = self;
  swift_retain();
  id v41 = objc_msgSend(v40, sel_defaultCenter);
  sub_241160FC0();

  sub_24108F304();
  sub_24115FE70();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
  uint64_t v42 = qword_268CF2850;
  uint64_t v98 = sub_24115F0C0();
  sub_24115F0B0();
  uint64_t v43 = sub_24115F070();
  swift_release();
  *(void *)((char *)a3 + v42) = v43;
  *(void *)((char *)a3 + qword_268CF0FB8) = MEMORY[0x263F8EE88];
  uint64_t v44 = (void *)((char *)a3 + qword_268CF2858);
  *uint64_t v44 = 0;
  v44[1] = 0;
  uint64_t v103 = a1;
  *(void *)((char *)a3 + qword_268CF0FA0) = a1;
  swift_retain();
  *((unsigned char *)a3 + qword_268CF0FB0) = sub_24115F000() & 1;
  sub_241024708(0, (unint64_t *)&qword_26B007320);
  sub_241160D60();
  sub_241160D70();
  uint64_t v45 = (objc_class *)sub_24115D7E0();
  id v46 = objc_allocWithZone(v45);
  uint64_t v47 = sub_24115D7C0();
  uint64_t v48 = qword_268CF0F90;
  *(void *)((char *)a3 + qword_268CF0F90) = v47;
  sub_241160D60();
  sub_241160D80();
  id v49 = objc_allocWithZone(v45);
  uint64_t v50 = sub_24115D7C0();
  uint64_t v51 = qword_268CF0F88;
  *(void *)((char *)a3 + qword_268CF0F88) = v50;
  sub_241160D60();
  sub_241160730();
  id v52 = objc_allocWithZone(v45);
  uint64_t v53 = sub_24115D7C0();
  uint64_t v54 = qword_268CF0F98;
  *(void *)((char *)a3 + qword_268CF0F98) = v53;
  sub_2410280A4((uint64_t)v138, (uint64_t)a3 + qword_268CF0FA8);
  id v55 = *(id *)((char *)a3 + v48);
  uint64_t v56 = sub_24115D7D0();

  *(void *)&long long v137 = v56;
  sub_24102B528();
  sub_241091BC8();
  sub_24115FE30();
  swift_release();
  id v57 = *(id *)((char *)a3 + v51);
  uint64_t v58 = sub_24115D7D0();

  *(void *)&long long v137 = v58;
  sub_24115FE30();
  swift_release();
  id v59 = *(id *)((char *)a3 + v54);
  uint64_t v60 = sub_24115D7D0();

  *(void *)&long long v137 = v60;
  sub_24115FE30();
  swift_release();
  uint64_t v100 = a3;
  *(void *)&long long v137 = sub_24115F630();
  id v61 = (void (*)(uint64_t))MEMORY[0x263F45D68];
  sub_241091C30(0, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68]);
  sub_2410757A8();
  sub_241015E78(&qword_26B0072C0, (unint64_t *)&qword_26B0072C8, v61);
  long long v62 = v97;
  sub_24115FE30();
  swift_release();
  sub_24115F0B0();
  uint64_t v63 = (void *)sub_24115F080();
  swift_release();
  sub_2410928C8(&qword_268CF0C00, (void (*)(uint64_t))sub_2410756F0);
  uint64_t v64 = v101;
  uint64_t v65 = sub_24115FDF0();

  (*(void (**)(char *, uint64_t))(v102 + 8))(v62, v64);
  *(void *)&long long v137 = v65;
  sub_241091BFC();
  id v66 = v104;
  sub_24115FEF0();
  uint64_t v67 = v105;
  sub_24115FEF0();
  sub_24108F2BC(0);
  sub_2410919AC();
  uint64_t v68 = v107;
  sub_24115FEF0();
  swift_release();
  sub_241091C30(0, &qword_268CF0BF0, (void (*)(uint64_t))sub_2410757A8);
  sub_241015E78(&qword_268CF0BF8, &qword_268CF0BF0, (void (*)(uint64_t))sub_2410757A8);
  sub_241091DD8();
  sub_241091E60();
  uint64_t v69 = v106;
  uint64_t v70 = v110;
  uint64_t v71 = v114;
  sub_24115FE50();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v68, v71);
  unint64_t v72 = *(void (**)(char *, uint64_t))(v111 + 8);
  v72(v67, v70);
  v72(v66, v70);
  swift_release();
  uint64_t v73 = v66;
  uint64_t v74 = v133;
  sub_24115FEF0();
  sub_2410928C8(&qword_268CF10E0, (void (*)(uint64_t))sub_241091C94);
  uint64_t v75 = v108;
  uint64_t v76 = v109;
  sub_24115FE60();
  v72(v73, v70);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v69, v76);
  uint64_t v77 = v118;
  sub_241161400();
  *(void *)&long long v137 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v78 = sub_2411613F0();
  uint64_t v79 = (uint64_t)v122;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v122, 1, 1, v78);
  sub_241024708(0, &qword_26B007050);
  sub_2410928C8(&qword_268CF10F0, (void (*)(uint64_t))sub_241091EE8);
  sub_241023228(&qword_26B007048, &qword_26B007050);
  uint64_t v80 = v115;
  uint64_t v81 = v116;
  sub_24115FF20();
  sub_241092390(v79, (uint64_t (*)(void))sub_241091858);

  (*(void (**)(char *, uint64_t))(v127 + 8))(v77, v128);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v75, v81);
  sub_2410280A4((uint64_t)v138, (uint64_t)&v137);
  uint64_t v82 = swift_allocObject();
  *(void *)(v82 + 16) = v103;
  sub_241027314(&v137, v82 + 24);
  uint64_t v83 = v130;
  *(void *)(v82 + 64) = v130;
  uint64_t v84 = swift_allocObject();
  *(void *)(v84 + 16) = sub_241092300;
  *(void *)(v84 + 24) = v82;
  sub_241091788(0, &qword_268CF1100, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
  sub_2410928C8(&qword_268CF1108, (void (*)(uint64_t))sub_241091FD4);
  swift_retain();
  uint64_t v85 = v119;
  uint64_t v86 = v120;
  sub_24115FE30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v80, v86);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  *(void *)&long long v137 = sub_241160EF0();
  uint64_t v87 = sub_241160EB0();
  uint64_t v88 = (uint64_t)v132;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v132, 1, 1, v87);
  sub_24109228C();
  sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
  unint64_t v89 = v121;
  uint64_t v90 = v124;
  sub_24115FF10();
  sub_241092390(v88, (uint64_t (*)(void))sub_24102ABF8);

  (*(void (**)(char *, uint64_t))(v129 + 8))(v85, v90);
  sub_2410923F0();
  uint64_t v91 = v125;
  sub_24115FDB0();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v89, v91);
  sub_24115E300();
  sub_24115DBE0();
  swift_release();
  sub_2410280A4((uint64_t)v138, (uint64_t)&v137);
  uint64_t v92 = swift_allocObject();
  sub_241027314(&v137, v92 + 16);
  *(void *)(v92 + 56) = v83;
  sub_2410924BC();
  sub_2410928C8(&qword_268CF1130, (void (*)(uint64_t))sub_2410924BC);
  sub_24115DBF0();
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v93 = sub_24115DCF0();
  swift_retain();
  sub_24108EADC();
  swift_release();
  swift_release();
  swift_release();
  sub_24101F178((uint64_t)v138);
  uint64_t v94 = *(void (**)(char *, uint64_t))(v131 + 8);
  v94(v135, v74);
  v94(v134, v74);
  v94(v136, v74);
  return v93;
}

void sub_241091788(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2410917EC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241027EA8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241091858(uint64_t a1)
{
}

void sub_24109188C()
{
  if (!qword_268CF1080)
  {
    sub_241091B7C(255, &qword_268CF1088, MEMORY[0x263F8D4F8], MEMORY[0x263F8D488]);
    sub_241091930();
    unint64_t v0 = sub_24115FBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1080);
    }
  }
}

unint64_t sub_241091930()
{
  unint64_t result = qword_268CF1090;
  if (!qword_268CF1090)
  {
    sub_241091B7C(255, &qword_268CF1088, MEMORY[0x263F8D4F8], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1090);
  }
  return result;
}

uint64_t sub_2410919AC()
{
  return sub_2410928C8(&qword_268CF10A0, sub_24108F2BC);
}

void sub_2410919E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    sub_24109188C();
    a3(255);
    sub_2410928C8(&qword_268CF1098, (void (*)(uint64_t))sub_24109188C);
    a4();
    unint64_t v7 = sub_24115FAF0();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241091AAC(uint64_t a1)
{
}

void sub_241091AF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, void, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, MEMORY[0x263F8D4F8], v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_241091B7C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_241091BC8()
{
  return sub_2410928C8(&qword_26B005B78, (void (*)(uint64_t))sub_24102B528);
}

uint64_t sub_241091BFC()
{
  return sub_2410928C8(&qword_268CF10B8, sub_241091AAC);
}

void sub_241091C30(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24115FC20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241091C94()
{
  if (!qword_268CF10C0)
  {
    sub_241091C30(255, &qword_268CF0BF0, (void (*)(uint64_t))sub_2410757A8);
    sub_2410919E0(255, &qword_268CF10A8, sub_241091AAC, (void (*)(void))sub_241091BFC);
    sub_2410919E0(255, &qword_268CF1078, sub_24108F2BC, (void (*)(void))sub_2410919AC);
    sub_241015E78(&qword_268CF0BF8, &qword_268CF0BF0, (void (*)(uint64_t))sub_2410757A8);
    sub_241091DD8();
    sub_241091E60();
    unint64_t v0 = sub_24115FAD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF10C0);
    }
  }
}

unint64_t sub_241091DD8()
{
  unint64_t result = qword_268CF10C8;
  if (!qword_268CF10C8)
  {
    sub_2410919E0(255, &qword_268CF10A8, sub_241091AAC, (void (*)(void))sub_241091BFC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF10C8);
  }
  return result;
}

unint64_t sub_241091E60()
{
  unint64_t result = qword_268CF10D0;
  if (!qword_268CF10D0)
  {
    sub_2410919E0(255, &qword_268CF1078, sub_24108F2BC, (void (*)(void))sub_2410919AC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF10D0);
  }
  return result;
}

void sub_241091EE8()
{
  if (!qword_268CF10D8)
  {
    sub_241091C94();
    sub_2410919E0(255, &qword_268CF10A8, sub_241091AAC, (void (*)(void))sub_241091BFC);
    sub_2410928C8(&qword_268CF10E0, (void (*)(uint64_t))sub_241091C94);
    sub_241091DD8();
    unint64_t v0 = sub_24115FA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF10D8);
    }
  }
}

void sub_241091FD4()
{
  if (!qword_268CF10E8)
  {
    sub_241091EE8();
    sub_241024708(255, &qword_26B007050);
    sub_2410928C8(&qword_268CF10F0, (void (*)(uint64_t))sub_241091EE8);
    sub_241023228(&qword_26B007048, &qword_26B007050);
    unint64_t v0 = sub_24115FBB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF10E8);
    }
  }
}

void sub_2410920D4()
{
  if (!qword_268CF10F8)
  {
    sub_241091FD4();
    sub_241091788(255, &qword_268CF1100, MEMORY[0x263F44068], MEMORY[0x263F8D488]);
    sub_2410928C8(&qword_268CF1108, (void (*)(uint64_t))sub_241091FD4);
    unint64_t v0 = sub_24115FAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF10F8);
    }
  }
}

void sub_2410921B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_241024708(255, (unint64_t *)&qword_26B007340);
    a4();
    sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
    unint64_t v6 = sub_24115FC00();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_24109228C()
{
  return sub_2410928C8(&qword_268CF1118, (void (*)(uint64_t))sub_2410920D4);
}

uint64_t sub_2410922C0()
{
  swift_release();
  sub_24101F178(v0 + 24);

  return MEMORY[0x270FA0238](v0, 72, 7);
}

unint64_t sub_241092300(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24108BE14(a1, a2, a3, a4, a5, *(void *)(v5 + 16), (void *)(v5 + 24));
}

uint64_t sub_241092310()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241092348@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void, void, void))(v2 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(unsigned __int8 *)(a1 + 9), *(unsigned __int8 *)(a1 + 10), *(unsigned __int8 *)(a1 + 11));
  *a2 = result;
  return result;
}

uint64_t sub_241092390(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2410923F0()
{
  unint64_t result = qword_268CF1120;
  if (!qword_268CF1120)
  {
    sub_2410921B0(255, &qword_268CF1110, (void (*)(uint64_t))sub_2410920D4, (void (*)(void))sub_24109228C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1120);
  }
  return result;
}

uint64_t sub_241092478()
{
  sub_24101F178(v0 + 16);

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_2410924B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_24108CA90(a1, a2, (void *)(v3 + 16), a3);
}

void sub_2410924BC()
{
  if (!qword_268CF1128)
  {
    sub_24115E300();
    unint64_t v0 = sub_24115DA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1128);
    }
  }
}

uint64_t sub_24109251C(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  sub_24101A6BC(a1, v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  if (v3 == 1) {
    return 3;
  }
  uint64_t v4 = v3;
  if (v3 == 2) {
    return 2;
  }
  sub_241024708(0, (unint64_t *)&qword_26B007320);
  unint64_t v6 = (void *)sub_241160D60();
  unsigned int v7 = objc_msgSend(v6, sel_hk_keyExists_, *MEMORY[0x263F44B80]) ^ 1;

  if (v4) {
    return 1;
  }
  else {
    return v7;
  }
}

void sub_2410925DC(uint64_t a1)
{
}

uint64_t sub_241092610(uint64_t a1, uint64_t a2)
{
  sub_2410925DC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241092674(uint64_t a1, uint64_t a2)
{
  sub_2410925DC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2410926D8(void *a1)
{
}

uint64_t sub_2410926F4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24109272C(uint64_t a1)
{
  sub_24108FED8(a1, v1);
}

uint64_t sub_241092734()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24109276C(uint64_t a1)
{
  return sub_24108EF28(a1);
}

unint64_t sub_241092774()
{
  unint64_t result = qword_268CF1178;
  if (!qword_268CF1178)
  {
    sub_2410921B0(255, &qword_268CF1170, (void (*)(uint64_t))sub_24102B528, (void (*)(void))sub_241091BC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1178);
  }
  return result;
}

uint64_t sub_2410927FC()
{
  return sub_24108EFF0();
}

uint64_t sub_241092804()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241092814(char a1, void *a2)
{
  return sub_24108D5C0(a1, a2, *(void *)(v2 + 16));
}

void sub_24109281C()
{
  if (!qword_268CF1188)
  {
    sub_241024708(255, &qword_268CF1190);
    unint64_t v0 = sub_24115FCE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1188);
    }
  }
}

uint64_t sub_241092894()
{
  return sub_2410928C8(&qword_268CF1198, (void (*)(uint64_t))sub_24109281C);
}

uint64_t sub_2410928C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241092910(void **a1)
{
  return sub_24108AF88(a1);
}

unint64_t sub_241092918()
{
  unint64_t result = qword_268CF11A0;
  if (!qword_268CF11A0)
  {
    sub_2410921B0(255, &qword_268CF1180, (void (*)(uint64_t))sub_24109281C, (void (*)(void))sub_241092894);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF11A0);
  }
  return result;
}

uint64_t type metadata accessor for MedicationCategoryListElementObserverDataSource()
{
  uint64_t result = qword_26B006D10;
  if (!qword_26B006D10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410929F0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241092A4C()
{
  uint64_t v0 = sub_24115DF90();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = &v13[-v5];
  sub_24115DF30();
  id v7 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  sub_24115DF40();
  uint64_t v8 = (void (*)(unsigned char *, void))sub_24115DF70();
  *uint64_t v9 = 0xC024000000000000;
  v8(v13, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v10 = sub_24115DF80();
  unint64_t v11 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v11(v6, v0);
  return v10;
}

uint64_t sub_241092BE0()
{
  sub_24102ABF8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410931A0();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = sub_24115F630();
  sub_24102A8B8();
  id v11 = (id)sub_241160EF0();
  uint64_t v8 = sub_241160EB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  sub_24102BDBC();
  sub_241015EC8(&qword_26B0072C0, (void (*)(uint64_t))sub_24102BDBC);
  sub_241015EC8((unint64_t *)&qword_26B007330, (void (*)(uint64_t))sub_24102A8B8);
  sub_24115FF10();
  sub_24102AB6C((uint64_t)v2);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_241015EC8(&qword_26B006E18, (void (*)(uint64_t))sub_2410931A0);
  sub_24115FF60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess();
  sub_24115FC30();
  swift_endAccess();
  return swift_release();
}

void *sub_241092EE0()
{
  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void (**)(uint64_t))(qword_26B00BC48 + *result + 64);
    uint64_t v2 = swift_retain();
    v1(v2);
    swift_release();
    sub_24115DE50();
    swift_release();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_241092FB0()
{
}

void sub_24109305C()
{
}

void sub_241093078()
{
}

void sub_241093094()
{
}

uint64_t sub_2410930C0()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_241093100()
{
  sub_24115E4F0();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241093160()
{
  return type metadata accessor for MedicationCategoryListElementObserverDataSource();
}

uint64_t sub_241093168()
{
  return sub_241160DE0();
}

void sub_2410931A0()
{
  if (!qword_26B006E20)
  {
    sub_24102BDBC();
    sub_24102A8B8();
    sub_241015EC8(&qword_26B0072C0, (void (*)(uint64_t))sub_24102BDBC);
    sub_241015EC8((unint64_t *)&qword_26B007330, (void (*)(uint64_t))sub_24102A8B8);
    unint64_t v0 = sub_24115FC00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006E20);
    }
  }
}

uint64_t sub_24109328C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void *sub_2410932C4()
{
  return sub_241092EE0();
}

void *sub_2410932CC(void (*a1)(long long *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_19;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_2411616E0())
  {
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
    for (uint64_t i = 4; ; ++i)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x245617450](i - 4, a3) : *(id *)(a3 + 8 * i);
      uint64_t v9 = v8;
      uint64_t v10 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v19 = v8;
      a1(&v18, &v19);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v6;
      }

      if ((void)v18)
      {
        long long v17 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_2410522B8(0, v6[2] + 1, 1, v6);
        }
        unint64_t v12 = v6[2];
        unint64_t v11 = v6[3];
        long long v13 = v17;
        if (v12 >= v11 >> 1)
        {
          uint64_t v14 = sub_2410522B8((void *)(v11 > 1), v12 + 1, 1, v6);
          long long v13 = v17;
          uint64_t v6 = v14;
        }
        _OWORD v6[2] = v12 + 1;
        *(_OWORD *)&v6[2 * v12 + 4] = v13;
      }
      if (v10 == v5)
      {
        swift_bridgeObjectRelease();
        return v6;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x263F8EE78];
}

uint64_t sub_24109349C(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v7 = a3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      id v8 = a1(&v9, v7);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v9)
      {
        MEMORY[0x2456167B0](v8);
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2411609D0();
        }
        sub_241160A00();
        sub_2411609C0();
      }
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

unint64_t sub_2410935BC(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v50 = a2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410981B0(0, &qword_268CF1320, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (char *)v35 - v8;
  uint64_t v46 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v9 = *(void *)(v46 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v46);
  uint64_t v45 = (uint64_t)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v38 = (uint64_t)v35 - v12;
  uint64_t v13 = sub_24115CB10();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v51 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410981B0(0, (unint64_t *)&qword_26B007240, 255, MEMORY[0x263F07490], v6);
  MEMORY[0x270FA5388](v16 - 8);
  long long v18 = (char *)v35 - v17;
  uint64_t v19 = *(void *)(a3 + 16);
  if (v19)
  {
    uint64_t v54 = v3;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v21 = v14 + 16;
    uint64_t v22 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    id v52 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = *(void *)(v21 + 56);
    uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 32);
    uint64_t v48 = v20;
    uint64_t v42 = v23;
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(v21 + 16);
    uint64_t v49 = v21;
    uint64_t v44 = (void (**)(char *, uint64_t))(v21 - 8);
    v35[1] = a3;
    uint64_t v36 = v9;
    id v41 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    unint64_t v53 = MEMORY[0x263F8EE78];
    uint64_t v37 = a1;
    uint64_t v24 = (uint64_t)v39;
    while (1)
    {
      v48(v18, v22, v13);
      long long v40 = *v52;
      v40(v18, 0, 1, v13);
      if ((*v47)(v18, 1, v13) == 1) {
        break;
      }
      uint64_t v25 = a1;
      uint64_t v26 = v51;
      (*v43)(v51, v18, v13);
      uint64_t v27 = v54;
      v25(v26);
      if (v27)
      {
        (*v44)(v26, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v53;
      }
      (*v44)(v26, v13);
      int v28 = (*v41)(v24, 1, v46);
      uint64_t v54 = 0;
      if (v28 == 1)
      {
        sub_2410A1B6C(v24);
        a1 = v25;
      }
      else
      {
        uint64_t v29 = v38;
        sub_2410A0094(v24, v38, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        sub_2410A0094(v29, v45, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v53 = sub_241052AB4(0, *(void *)(v53 + 16) + 1, 1, v53);
        }
        unint64_t v31 = *(void *)(v53 + 16);
        unint64_t v30 = *(void *)(v53 + 24);
        if (v31 >= v30 >> 1) {
          unint64_t v53 = sub_241052AB4(v30 > 1, v31 + 1, 1, v53);
        }
        unint64_t v32 = v53;
        *(void *)(v53 + 16) = v31 + 1;
        sub_2410A0094(v45, v32+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v31, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        a1 = v37;
        uint64_t v24 = (uint64_t)v39;
      }
      v22 += v42;
      if (!--v19)
      {
        v40(v18, 1, 1, v13);
        break;
      }
    }
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    swift_bridgeObjectRetain();
    unint64_t v53 = MEMORY[0x263F8EE78];
    v33(v18, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  return v53;
}

unint64_t sub_241093B30(void (*a1)(long long *), uint64_t a2, uint64_t a3)
{
  unint64_t v31 = a1;
  sub_2410981B0(0, &qword_26B0040F8, 255, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = sub_24115D0A0();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  int v28 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v24 = (char *)&v21 - v12;
  uint64_t v27 = *(void *)(a3 + 16);
  if (!v27) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v22 = v11;
  uint64_t v25 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  unint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v23 = a3;
  do
  {
    long long v29 = *(_OWORD *)(a3 + 16 * v13 + 32);
    long long v30 = v29;
    id v15 = (id)v29;
    swift_bridgeObjectRetain();
    v31(&v30);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v14;
    }
    swift_bridgeObjectRelease();

    if ((*v26)(v7, 1, v8) == 1)
    {
      sub_2410A2080((uint64_t)v7);
    }
    else
    {
      uint64_t v16 = v24;
      uint64_t v17 = *v25;
      (*v25)(v24, v7, v8);
      v17(v28, v16, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v14 = sub_2410530D4(0, *(void *)(v14 + 16) + 1, 1, v14);
      }
      unint64_t v19 = *(void *)(v14 + 16);
      unint64_t v18 = *(void *)(v14 + 24);
      if (v19 >= v18 >> 1) {
        unint64_t v14 = sub_2410530D4(v18 > 1, v19 + 1, 1, v14);
      }
      *(void *)(v14 + 16) = v19 + 1;
      v17((char *)(v14+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19), v28, v8);
      a3 = v23;
    }
    ++v13;
  }
  while (v27 != v13);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_241093E74(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  void (*v40)(uint64_t *__return_ptr, char *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  long long v40 = a1;
  uint64_t v5 = sub_24115D320();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v39 = (char *)&v31 - v10;
  uint64_t v11 = *(void *)(a3 + 56);
  uint64_t v35 = a3 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v38 = v6 + 16;
  int64_t v36 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v37 = v6 + 32;
  id v15 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v43 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v34 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v17 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v17 >= v36) {
      goto LABEL_31;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v17);
    if (!v21) {
      break;
    }
LABEL_18:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_19:
    uint64_t v23 = v39;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v39, *(void *)(v43 + 48) + *(void *)(v6 + 72) * v19, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v23, v5);
    v40(&v41, v9);
    if (v3)
    {
      (*v15)(v9, v5);
      long long v30 = v34;
      swift_bridgeObjectRelease();
LABEL_32:
      swift_release();
      return (uint64_t)v30;
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v15)(v9, v5);
    uint64_t v24 = v42;
    if (v42)
    {
      uint64_t v33 = v41;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_241051F68(0, v34[2] + 1, 1, v34);
        uint64_t v34 = (void *)result;
      }
      unint64_t v26 = v34[2];
      unint64_t v25 = v34[3];
      unint64_t v27 = v26 + 1;
      if (v26 >= v25 >> 1)
      {
        unint64_t v31 = v34[2];
        unint64_t v32 = v26 + 1;
        uint64_t result = (uint64_t)sub_241051F68((void *)(v25 > 1), v26 + 1, 1, v34);
        unint64_t v26 = v31;
        unint64_t v27 = v32;
        uint64_t v34 = (void *)result;
      }
      int v28 = v34;
      v34[2] = v27;
      long long v29 = &v28[2 * v26];
      void v29[4] = v33;
      v29[5] = v24;
    }
  }
  int64_t v22 = v17 + 1;
  if (v17 + 1 >= v36) {
    goto LABEL_31;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 2;
  if (v17 + 2 >= v36) {
    goto LABEL_31;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 3;
  if (v17 + 3 >= v36) {
    goto LABEL_31;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 4;
  if (v17 + 4 >= v36)
  {
LABEL_31:
    long long v30 = v34;
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
LABEL_17:
    int64_t v17 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v17 >= v36) {
      goto LABEL_31;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_18;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_24109420C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v78 = a4;
  uint64_t v72 = a2;
  uint64_t v77 = *v4;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410981B0(0, &qword_26B003F10, 255, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v73 = (uint64_t)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v71 = (char *)v69 - v11;
  uint64_t v12 = sub_24115F790();
  uint64_t v79 = *(void *)(v12 - 8);
  uint64_t v80 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  unint64_t v91 = (unint64_t)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v70 = (char *)v69 - v15;
  uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F445F8];
  sub_2410981B0(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], v7);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v76 = (uint64_t)v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  int64_t v22 = (char *)v69 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)v69 - v23;
  sub_2410A4D78(a3, (uint64_t)v69 - v23, &qword_26B003F20, v16, v7);
  uint64_t v25 = sub_24115E530();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v75(v24, 1, v25) == 1)
  {
    sub_2410A1C84((uint64_t)v24);
  }
  else
  {
    v69[3] = a1;
    uint64_t v27 = sub_24115E510();
    unint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
    if (v29 >> 60 != 15)
    {
      sub_24113C114((uint64_t)v83);
      v69[0] = v83[1];
      v69[1] = v83[3];
      id v69[2] = v83[5];
      sub_2410A1D7C((uint64_t)v83, (uint64_t)v84, &qword_26B006178, (uint64_t)&type metadata for MedicationHighlightsContent);
      if (*((void *)&v84[0] + 1))
      {
        uint64_t v76 = v27;
        unint64_t v91 = v29;
        long long v86 = v84[0];
        long long v87 = v84[1];
        long long v88 = v84[2];
        uint64_t v89 = v85;
        long long v30 = v70;
        sub_24115F740();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        unint64_t v31 = sub_24115F780();
        os_log_type_t v32 = sub_241160D10();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = swift_slowAlloc();
          uint64_t v34 = swift_slowAlloc();
          v90[0] = v34;
          *(_DWORD *)uint64_t v33 = 136315394;
          uint64_t v35 = sub_241161A00();
          *(void *)&v81[0] = sub_24101F0A4(v35, v36, v90);
          sub_241161430();
          swift_bridgeObjectRelease();
          *(_WORD *)(v33 + 12) = 2080;
          v81[0] = v86;
          v81[1] = v87;
          void v81[2] = v88;
          uint64_t v82 = v89;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v37 = sub_241160760();
          *(void *)&v81[0] = sub_24101F0A4(v37, v38, v90);
          sub_241161430();
          swift_bridgeObjectRelease();
          sub_2410A1DFC(v83);
          sub_2410A1DFC(v83);
          _os_log_impl(&dword_241007000, v31, v32, "[%s]: Received updated user data: %s", (uint8_t *)v33, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2456180C0](v34, -1, -1);
          MEMORY[0x2456180C0](v33, -1, -1);
        }
        else
        {
          sub_2410A1DFC(v83);
          sub_2410A1DFC(v83);
        }

        (*(void (**)(char *, uint64_t))(v79 + 8))(v30, v80);
        id v57 = v78;
        sub_2410981B0(0, &qword_268CF11D8, v58, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsView.Model, MEMORY[0x263F43CB8]);
        sub_24115DA40();
        id v59 = *(void **)&v81[0];
        uint64_t v60 = *((void *)&v86 + 1);
        *(void *)(*(void *)&v81[0] + 16) = v86;
        v59[3] = v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v61 = *((void *)&v87 + 1);
        v59[4] = v87;
        v59[5] = v61;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v62 = MEMORY[0x263F8D310];
        sub_2410A1D7C((uint64_t)&v88, (uint64_t)v90, &qword_26B005C88, MEMORY[0x263F8D310]);
        sub_2410A1D7C((uint64_t)v90, (uint64_t)(v59 + 6), &qword_26B005C88, v62);
        sub_2410A1E98((uint64_t)v90);
        swift_bridgeObjectRelease();
        v59[8] = v89;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_2410A1DFC(v83);
        uint64_t v63 = (uint64_t)v71;
        sub_24115DC90();
        uint64_t v64 = sub_24115D990();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 0, 1, v64);
        uint64_t v65 = (uint64_t (*)(uint64_t))MEMORY[0x263F43C08];
        uint64_t v66 = v73;
        sub_2410A1EC4(v63, v73, &qword_26B003F10, MEMORY[0x263F43C08]);
        uint64_t v67 = (char *)v74
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationHighlightsConfigurationProvider_presentationContext;
        swift_beginAccess();
        sub_2410A1F44(v66, (uint64_t)v67, &qword_26B003F10, v65);
        swift_endAccess();
        sub_2410A1FCC();
        v57[3] = v68;
        v57[4] = sub_24109B77C(&qword_268CF1358, 255, (void (*)(uint64_t))sub_2410A1FCC);
        sub_2410277C0(v57);
        type metadata accessor for MedicationHighlightsView(0);
        sub_24109B77C((unint64_t *)&qword_26B003FF8, 255, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsView);
        sub_2411601A0();
        swift_release();
        return sub_2410230DC(v76, v91);
      }
      sub_2410230DC(v27, v29);
    }
  }
  unint64_t v39 = v91;
  sub_24115F740();
  uint64_t v40 = (uint64_t)v22;
  sub_2410A4D78(a3, (uint64_t)v22, &qword_26B003F20, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  id v41 = sub_24115F780();
  int v42 = sub_241160D30();
  if (os_log_type_enabled(v41, (os_log_type_t)v42))
  {
    LODWORD(v73) = v42;
    os_log_t v74 = v41;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    *(void *)&v81[0] = v72;
    *(_DWORD *)uint64_t v43 = 136315394;
    uint64_t v44 = sub_241161A00();
    *(void *)&long long v86 = sub_24101F0A4(v44, v45, (uint64_t *)v81);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2080;
    uint64_t v46 = v76;
    sub_2410A4D78(v40, v76, &qword_26B003F20, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    if (v75((char *)v46, 1, v25) == 1)
    {
      sub_2410A1C84(v46);
      uint64_t v47 = 0;
      unint64_t v48 = 0xF000000000000000;
    }
    else
    {
      uint64_t v47 = sub_24115E510();
      unint64_t v48 = v50;
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v46, v25);
    }
    uint64_t v49 = v78;
    *(void *)&long long v86 = v47;
    *((void *)&v86 + 1) = v48;
    sub_2410A522C(0, &qword_26B0040E0, MEMORY[0x263F06F78], MEMORY[0x263F8D8F0]);
    uint64_t v51 = sub_241160760();
    *(void *)&long long v86 = sub_24101F0A4(v51, v52, (uint64_t *)v81);
    sub_241161430();
    swift_bridgeObjectRelease();
    sub_2410A1C84(v40);
    os_log_t v53 = v74;
    _os_log_impl(&dword_241007000, v74, (os_log_type_t)v73, "[%s]: Could not read user data from context: %s", (uint8_t *)v43, 0x16u);
    uint64_t v54 = v72;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v54, -1, -1);
    MEMORY[0x2456180C0](v43, -1, -1);

    (*(void (**)(unint64_t, uint64_t))(v79 + 8))(v91, v80);
  }
  else
  {
    sub_2410A1C84(v40);

    (*(void (**)(unint64_t, uint64_t))(v79 + 8))(v39, v80);
    uint64_t v49 = v78;
  }
  sub_2410A1D14();
  v49[3] = v55;
  v49[4] = sub_24109B77C(&qword_268CF1348, 255, (void (*)(uint64_t))sub_2410A1D14);
  sub_2410277C0(v49);
  return sub_2411601A0();
}

id sub_241094D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for MedicationHighlightsView(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = sub_24115E530();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  uint64_t v11 = self;
  swift_retain();
  id result = objc_msgSend(v11, sel_displayTypeWithIdentifier_, 273);
  if (result)
  {
    *(void *)&v7[v4[5]] = result;
    uint64_t v13 = (uint64_t *)&v7[v4[7]];
    *uint64_t v13 = swift_getKeyPath();
    sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    *(void *)&v7[v4[6]] = a1;
    sub_2410A0094((uint64_t)v7, (uint64_t)v9, type metadata accessor for MedicationHighlightsView);
    return (id)sub_2410A0094((uint64_t)v9, a2, type metadata accessor for MedicationHighlightsView);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241094F40()
{
  swift_unknownObjectRelease();
  sub_24109B9CC(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationHighlightsConfigurationProvider_presentationContext);

  return swift_deallocClassInstance();
}

uint64_t sub_241094FAC()
{
  return type metadata accessor for MedicationHighlightsConfigurationProvider(0);
}

uint64_t type metadata accessor for MedicationHighlightsConfigurationProvider(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B004020);
}

void sub_241094FD4()
{
  sub_2410981B0(319, &qword_26B003F10, 255, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for MedicationHighlightsTileHeader(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF11A8);
}

uint64_t sub_2410950C4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241095104()
{
  type metadata accessor for MedicationHighlightsConfigurationProvider(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationHighlightsConfigurationProvider_presentationContext;
  uint64_t v2 = sub_24115D990();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return v0;
}

uint64_t sub_24109518C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  return sub_24109420C(a1, a2, a3, a4);
}

uint64_t sub_2410951A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24115F8B0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_241095210()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_24109521C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for MedicationHighlightsConfigurationProvider(0);

  return MEMORY[0x270F33F70](a1, v5, a3);
}

uint64_t sub_24109526C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_2410952B0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_241095304())()
{
  return j__swift_endAccess;
}

uint64_t sub_241095358()
{
  sub_24115DE20();
  uint64_t v0 = v9;
  if (v9)
  {
    uint64_t v1 = sub_24101A6BC(v8, v9);
    uint64_t v2 = *(void *)(v0 - 8);
    MEMORY[0x270FA5388](v1);
    uint64_t v4 = (char *)&v8[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v2 + 16))(v4);
    sub_2410A1BFC((uint64_t)v8);
    uint64_t v5 = sub_24115DD50();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  }
  else
  {
    sub_2410A1BFC((uint64_t)v8);
    return 0;
  }
  return v5;
}

id sub_241095494(void *a1, double a2, double a3, double a4, double a5)
{
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for MedicationHighlightsTileHeader(0);
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_241095508(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MedicationHighlightsTileHeader(0);
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_241095554()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationHighlightsTileHeader(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24109558C()
{
  return type metadata accessor for MedicationHighlightsTileHeader(0);
}

uint64_t type metadata accessor for MedicationHighlightsView.MedicationsHighlightsViewActionHandler(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B003F98);
}

uint64_t sub_2410955B4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241095600()
{
  uint64_t v1 = sub_24115D990();
  objc_super v2 = *(void **)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v44 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24109B934();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v52 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v41 - v8;
  objc_super v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F43C08];
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410981B0(0, &qword_26B003F10, 255, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v42 = (uint64_t)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v51 = (char *)&v41 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v45 = (uint64_t)&v41 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41MedicationHighlightsConfigurationProvider_presentationContext;
  swift_beginAccess();
  uint64_t v22 = *MEMORY[0x263F43BE0];
  uint64_t v46 = (void (*)(char *, uint64_t, uint64_t))v2[13];
  v46(v20, v22, v1);
  uint64_t v47 = (void (*)(char *, void, uint64_t, uint64_t))v2[7];
  unint64_t v48 = v2 + 7;
  v47(v20, 0, 1, v1);
  uint64_t v49 = v21;
  uint64_t v50 = v5;
  uint64_t v23 = (uint64_t)&v9[*(int *)(v5 + 48)];
  sub_2410A4D78(v21, (uint64_t)v9, &qword_26B003F10, v10, v11);
  sub_2410A4D78((uint64_t)v20, v23, &qword_26B003F10, v10, v11);
  os_log_t v53 = v2;
  uint64_t v24 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v2[6];
  if (v24((uint64_t)v9, 1, v1) == 1)
  {
    sub_24109B9CC((uint64_t)v20);
    if (v24(v23, 1, v1) == 1) {
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  uint64_t v25 = v45;
  sub_2410A4D78((uint64_t)v9, v45, &qword_26B003F10, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  if (v24(v23, 1, v1) == 1)
  {
    sub_24109B9CC((uint64_t)v20);
    ((void (*)(uint64_t, uint64_t))v53[1])(v25, v1);
LABEL_6:
    uint64_t v43 = v24;
    sub_2410A589C((uint64_t)v9, (uint64_t (*)(void))sub_24109B934);
    goto LABEL_7;
  }
  uint64_t v43 = v24;
  uint64_t v33 = v53;
  uint64_t v34 = v44;
  ((void (*)(char *, uint64_t, uint64_t))v53[4])(v44, v23, v1);
  sub_24109B77C(&qword_268CF11D0, 255, MEMORY[0x263F43C08]);
  char v35 = sub_2411606E0();
  unint64_t v36 = (void (*)(char *, uint64_t))v33[1];
  v36(v34, v1);
  sub_24109B9CC((uint64_t)v20);
  v36((char *)v25, v1);
  sub_24109B9CC((uint64_t)v9);
  if (v35) {
    goto LABEL_14;
  }
LABEL_7:
  uint64_t v26 = (uint64_t)v51;
  v46(v51, *MEMORY[0x263F43BD8], v1);
  v47((char *)v26, 0, 1, v1);
  uint64_t v9 = v52;
  uint64_t v27 = (uint64_t)&v52[*(int *)(v50 + 48)];
  unint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x263F43C08];
  unint64_t v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410A4D78(v49, (uint64_t)v52, &qword_26B003F10, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  sub_2410A4D78(v26, v27, &qword_26B003F10, v28, v29);
  long long v30 = v43;
  if (v43((uint64_t)v9, 1, v1) == 1)
  {
    sub_24109B9CC(v26);
    if (v30(v27, 1, v1) == 1)
    {
LABEL_9:
      sub_24109B9CC((uint64_t)v9);
LABEL_14:
      char v32 = 1;
      return v32 & 1;
    }
  }
  else
  {
    uint64_t v31 = v42;
    sub_2410A4D78((uint64_t)v9, v42, &qword_26B003F10, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
    if (v30(v27, 1, v1) != 1)
    {
      uint64_t v37 = v53;
      unint64_t v38 = v44;
      ((void (*)(char *, uint64_t, uint64_t))v53[4])(v44, v27, v1);
      sub_24109B77C(&qword_268CF11D0, 255, MEMORY[0x263F43C08]);
      char v32 = sub_2411606E0();
      unint64_t v39 = (void (*)(char *, uint64_t))v37[1];
      v39(v38, v1);
      sub_24109B9CC(v26);
      v39((char *)v31, v1);
      sub_24109B9CC((uint64_t)v9);
      return v32 & 1;
    }
    sub_24109B9CC(v26);
    ((void (*)(uint64_t, uint64_t))v53[1])(v31, v1);
  }
  sub_2410A589C((uint64_t)v9, (uint64_t (*)(void))sub_24109B934);
  char v32 = 0;
  return v32 & 1;
}

uint64_t sub_241095D08()
{
  return sub_241095600() & 1;
}

uint64_t sub_241095D30(uint64_t a1)
{
  uint64_t v2 = sub_24115E530();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(swift_allocObject() + qword_26B0060D0) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_24115E370();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t sub_241095E44()
{
  sub_24115E380();

  return swift_deallocClassInstance();
}

uint64_t sub_241095E74()
{
  return type metadata accessor for MedicationHighlightsView.MedicationsHighlightsViewActionHandler(0);
}

uint64_t sub_241095E84()
{
  sub_2410981B0(0, (unint64_t *)&qword_26B007200, 255, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v18[-v1];
  uint64_t v3 = sub_24115CBA0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_24115CCC0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  objc_super v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = swift_bridgeObjectRetain();
  unint64_t v12 = sub_2410A0248(v11);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F07740], v3);
  sub_24115CBB0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  sub_24115CB70();
  uint64_t v13 = sub_24115CB90();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v2, 0, 1, v13);
  sub_24115CC80();
  uint64_t v14 = sub_24115CC30();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v17 = sub_2410A16AC(0, *(void *)(v12 + 16), v15, v12, v15);
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24109614C()
{
  uint64_t v1 = sub_24115E9F0();
  uint64_t v58 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v54 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410981B0(0, (unint64_t *)&qword_26B007200, 255, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v54 - v4;
  uint64_t v6 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v60 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v54 - v10;
  uint64_t v56 = v0;
  uint64_t v12 = sub_241095E84();
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v57 = v1;
  uint64_t v55 = v5;
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    uint64_t v16 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v17 = *(void *)(v12 + 8 * v15++ + 32);
      uint64_t v61 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2410CF724(v17);
      swift_bridgeObjectRelease();
      uint64_t v16 = v61;
    }
    while (v13 != v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v61 = v14;
  uint64_t v19 = *(void *)(v16 + 16);
  if (v19)
  {
    unint64_t v20 = 0;
    id v59 = (void (*)(char *, uint64_t))v6;
    while (v20 < *(void *)(v16 + 16))
    {
      unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v22 = *(void *)(v7 + 72);
      sub_2410A5A18(v16 + v21 + v22 * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
      if (v11[*(int *)(v6 + 24)])
      {
        uint64_t result = sub_2410A589C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
      }
      else
      {
        sub_2410A0094((uint64_t)v11, v60, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        uint64_t v23 = v61;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2410E5A04(0, *(void *)(v23 + 16) + 1, 1);
          uint64_t v23 = v61;
        }
        unint64_t v25 = *(void *)(v23 + 16);
        unint64_t v24 = *(void *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_2410E5A04(v24 > 1, v25 + 1, 1);
          uint64_t v23 = v61;
        }
        *(void *)(v23 + 16) = v25 + 1;
        uint64_t result = sub_2410A0094(v60, v23 + v21 + v25 * v22, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        uint64_t v6 = (uint64_t)v59;
      }
      if (v19 == ++v20)
      {
        uint64_t v26 = v61;
        uint64_t v27 = v58;
        unint64_t v28 = v54;
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v26 = v14;
    uint64_t v27 = v58;
    unint64_t v28 = v54;
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v29 = *(void *)(v26 + 16);
    swift_release();
    uint64_t v30 = sub_24115CB90();
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
    uint64_t v32 = (uint64_t)v55;
    v31(v55, 1, 1, v30);
    sub_24115E9E0();
    sub_24115EF20();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v27 + 8);
    uint64_t v58 = v27 + 8;
    id v59 = v33;
    v33(v28, v57);
    sub_241032AF8(v32);
    sub_2410A01E0(0, (unint64_t *)&qword_26B007398, (unint64_t *)&qword_26B0073C0, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
    uint64_t v34 = swift_allocObject();
    char v35 = v28;
    uint64_t v36 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v34 + 16) = xmmword_24116B370;
    uint64_t v37 = MEMORY[0x263F8D750];
    *(void *)(v34 + 56) = v36;
    *(void *)(v34 + 64) = v37;
    *(void *)(v34 + 32) = v29;
    uint64_t v60 = sub_241160700();
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v40 = v56;
    uint64_t v41 = *(void *)(v56 + 56);
    if (v41)
    {
      uint64_t v54 = *(char **)(v56 + 48);
      v31((char *)v32, 1, 1, v30);
      swift_bridgeObjectRetain();
      sub_24115E9E0();
      sub_24115EF20();
      v59(v35, v57);
      sub_241032AF8(v32);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_24116C380;
      uint64_t v43 = MEMORY[0x263F8D310];
      *(void *)(v42 + 56) = MEMORY[0x263F8D310];
      unint64_t v44 = sub_2410484D8();
      *(void *)(v42 + 32) = v54;
      *(void *)(v42 + 40) = v41;
      uint64_t v46 = *(void *)(v40 + 16);
      uint64_t v45 = *(void *)(v40 + 24);
      *(void *)(v42 + 96) = v43;
      *(void *)(v42 + 104) = v44;
      *(void *)(v42 + 64) = v44;
      *(void *)(v42 + 72) = v46;
      *(void *)(v42 + 80) = v45;
      *(void *)(v42 + 136) = v43;
      *(void *)(v42 + 144) = v44;
      *(void *)(v42 + 112) = v60;
      *(void *)(v42 + 120) = v39;
    }
    else
    {
      v31((char *)v32, 1, 1, v30);
      sub_24115E9E0();
      sub_24115EF20();
      v59(v35, v57);
      sub_241032AF8(v32);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_24116B200;
      uint64_t v48 = *(void *)(v40 + 16);
      uint64_t v49 = *(void *)(v40 + 24);
      uint64_t v50 = MEMORY[0x263F8D310];
      *(void *)(v47 + 56) = MEMORY[0x263F8D310];
      unint64_t v51 = sub_2410484D8();
      *(void *)(v47 + 32) = v48;
      *(void *)(v47 + 40) = v49;
      *(void *)(v47 + 96) = v50;
      *(void *)(v47 + 104) = v51;
      uint64_t v52 = v60;
      *(void *)(v47 + 64) = v51;
      *(void *)(v47 + 72) = v52;
      *(void *)(v47 + 80) = v39;
    }
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_241160750();
    swift_bridgeObjectRelease();
    return v53;
  }
  return result;
}

uint64_t sub_241096898(uint64_t a1)
{
  uint64_t v49 = a1;
  uint64_t v48 = sub_24115CCA0();
  uint64_t v2 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v46 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_2410981B0(0, (unint64_t *)&qword_26B007240, 255, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v45 = (char *)&v35 - v6;
  uint64_t v7 = sub_24115CB10();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v50 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v35 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v35 - v18;
  sub_2410981B0(0, &qword_268CF08E0, 255, v4, MEMORY[0x263F8E0F8]);
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v38 = *(void *)(v8 + 72);
  unint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24116B370;
  unint64_t v37 = v20;
  sub_24115C7F0();
  uint64_t v41 = v1;
  sub_24115C7F0();
  sub_24115CBC0();
  uint64_t v22 = v19;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v9 += 8;
  uint64_t v39 = v23;
  v23(v17, v7);
  unint64_t v44 = *(void (**)(char *, void, uint64_t))(v2 + 104);
  unsigned int v43 = *MEMORY[0x263F07870];
  uint64_t v47 = v2 + 104;
  uint64_t v42 = (void (**)(char *, uint64_t))(v2 + 8);
  unint64_t v24 = (uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 40);
  unint64_t v25 = (void (**)(char *, char *, uint64_t))(v9 + 24);
  uint64_t v40 = v9;
  uint64_t v36 = (void (**)(char *, char *, uint64_t))(v9 + 8);
  uint64_t v26 = v45;
  while (1)
  {
    uint64_t v27 = v46;
    uint64_t v28 = v48;
    v44(v46, v43, v48);
    uint64_t v29 = v22;
    sub_24115CC60();
    (*v42)(v27, v28);
    uint64_t result = (*v24)(v26, 1, v7);
    if (result == 1) {
      break;
    }
    uint64_t v31 = *v25;
    (*v25)(v14, v26, v7);
    if ((sub_24115C800() & 1) == 0)
    {
      uint64_t v34 = v39;
      v39(v14, v7);
      v34(v29, v7);
      return v21;
    }
    (*v36)(v50, v14, v7);
    unint64_t v33 = *(void *)(v21 + 16);
    unint64_t v32 = *(void *)(v21 + 24);
    if (v33 >= v32 >> 1) {
      unint64_t v21 = sub_241052A6C(v32 > 1, v33 + 1, 1, v21);
    }
    *(void *)(v21 + 16) = v33 + 1;
    v31((char *)(v21 + v37 + v33 * v38), v50, v7);
    v39(v22, v7);
    v31(v22, v14, v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_241096D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v108 = a6;
  uint64_t v121 = a4;
  uint64_t v122 = a5;
  uint64_t v133 = a3;
  uint64_t v124 = a2;
  uint64_t v135 = a1;
  uint64_t v107 = sub_24115C920();
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  id v105 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_24115CCC0();
  uint64_t v119 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v10 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_24115C810();
  uint64_t v120 = *(void *)(v117 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v117);
  uint64_t v113 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v116 = (char *)&v105 - v13;
  uint64_t v134 = sub_24115CB10();
  uint64_t v130 = *(void *)(v134 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v134);
  uint64_t v109 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v112 = (char *)&v105 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v115 = (char *)&v105 - v19;
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v105 - v20;
  uint64_t v22 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v23 = *((void *)v22 - 1);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v114 = (char **)((char *)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v105 - v26;
  sub_2410981B0(0, &qword_268CF1320, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, MEMORY[0x263F8D8F0]);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  long long v118 = (char *)&v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v123 = (char **)((char *)&v105 - v32);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v131 = (char *)&v105 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)&v105 - v35;
  unint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, int *))(v23 + 56);
  v37((char *)&v105 - v35, 1, 1, v22);
  uint64_t v38 = a7;
  uint64_t v39 = *(void *)(v124 + 16);
  uint64_t v126 = v38;
  uint64_t v110 = v10;
  uint64_t v125 = v22;
  uint64_t v128 = v23 + 56;
  uint64_t v129 = v36;
  uint64_t v127 = v37;
  if (v39)
  {
    uint64_t v40 = v124 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    uint64_t v41 = (void (**)(char *, uint64_t))(v130 + 8);
    uint64_t v132 = v23;
    uint64_t v42 = *(void *)(v23 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2410A5A18(v40, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
      sub_24115CBC0();
      char v43 = sub_24115CAD0();
      (*v41)(v21, v134);
      if (v43) {
        break;
      }
      sub_2410A589C((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
      v40 += v42;
      if (!--v39)
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = v132;
        uint64_t v22 = v125;
        uint64_t v38 = v126;
        uint64_t v36 = v129;
        unint64_t v37 = v127;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v36 = v129;
    sub_2410A1B6C((uint64_t)v129);
    sub_2410A0094((uint64_t)v27, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
    uint64_t v22 = v125;
    unint64_t v37 = v127;
    v127(v36, 0, 1, v125);
    uint64_t v23 = v132;
    uint64_t v38 = v126;
  }
LABEL_7:
  uint64_t v44 = v38;
  uint64_t v45 = (uint64_t)v131;
  v37(v131, 1, 1, v22);
  uint64_t v46 = (void (*)(void, void, void))v123;
  sub_2410A4D78((uint64_t)v36, (uint64_t)v123, &qword_268CF1320, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, MEMORY[0x263F8D8F0]);
  uint64_t v47 = *(char ***)(v23 + 48);
  uint64_t v132 = v23 + 48;
  if (((unsigned int (*)(void, uint64_t, int *))v47)(v46, 1, v22) != 1)
  {
    uint64_t v69 = (uint64_t)v46;
    uint64_t v70 = (uint64_t)v114;
    sub_2410A0094(v69, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
    sub_2410A1B6C(v45);
    sub_2410A0094(v70, v45, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
    uint64_t v65 = v44;
    uint64_t v67 = (uint64_t)v118;
    uint64_t v66 = v119;
    uint64_t v68 = v127;
    goto LABEL_12;
  }
  uint64_t v114 = v47;
  sub_2410A1B6C((uint64_t)v46);
  uint64_t v48 = v135;
  char v49 = sub_24115C800();
  uint64_t v50 = v120;
  uint64_t v52 = v116;
  uint64_t v51 = v117;
  uint64_t v123 = *(char ***)(v120 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v123)(v116, v122, v117);
  uint64_t v53 = v130;
  uint64_t v54 = v115;
  uint64_t v55 = v48;
  uint64_t v56 = v134;
  uint64_t v124 = *(void *)(v130 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v124)(v115, v55, v134);
  if ((v49 & 1) == 0)
  {
    uint64_t v115 = *(char **)(v53 + 8);
    ((void (*)(char *, uint64_t))v115)(v54, v56);
    uint64_t v64 = *(void (**)(char *, uint64_t))(v50 + 8);
    v64(v52, v51);
    goto LABEL_21;
  }
  uint64_t v57 = v50;
  uint64_t v58 = v53;
  char v59 = sub_24115C800();
  uint64_t v60 = v134;
  char v61 = v59;
  uint64_t v62 = v54;
  uint64_t v63 = *(void (**)(char *, uint64_t))(v58 + 8);
  v63(v62, v134);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v57 + 8);
  v64(v52, v51);
  if ((v61 & 1) == 0)
  {
    uint64_t v115 = (char *)v63;
    uint64_t v56 = v60;
LABEL_21:
    uint64_t v83 = (void (*)(char *, uint64_t, uint64_t))v124;
    uint64_t v84 = v135;
    char v85 = sub_24115C800();
    long long v86 = v113;
    ((void (*)(char *, uint64_t, uint64_t))v123)(v113, v122, v51);
    long long v87 = v112;
    v83(v112, v84, v56);
    uint64_t v88 = v56;
    if (v85)
    {
      uint64_t v89 = v87;
      uint64_t v90 = v88;
      char v91 = sub_24115C800();
      ((void (*)(char *, uint64_t))v115)(v89, v90);
      v64(v86, v51);
      uint64_t v22 = v125;
      uint64_t v92 = (uint64_t)v131;
      uint64_t v93 = (uint64_t)v129;
      if ((v91 & 1) == 0)
      {
        sub_2410A1B6C((uint64_t)v131);
        v83((char *)v92, v135, v90);
        *(unsigned char *)(v92 + v22[5]) = 0;
        *(unsigned char *)(v92 + v22[6]) = 1;
        *(unsigned char *)(v92 + v22[7]) = 0;
        uint64_t v67 = (uint64_t)v118;
        uint64_t v66 = v119;
        uint64_t v65 = v126;
        uint64_t v45 = v92;
        uint64_t v47 = v114;
        v127((char *)v92, 0, 1, v22);
        goto LABEL_13;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t))v115)(v87, v56);
      v64(v86, v51);
      uint64_t v22 = v125;
      uint64_t v92 = (uint64_t)v131;
      uint64_t v93 = (uint64_t)v129;
    }
    sub_2410A1B6C(v93);
    v127((char *)v126, 1, 1, v22);
    return sub_2410A1B6C(v92);
  }
  uint64_t v45 = (uint64_t)v131;
  sub_2410A1B6C((uint64_t)v131);
  ((void (*)(uint64_t, uint64_t, uint64_t))v124)(v45, v135, v60);
  uint64_t v22 = v125;
  uint64_t v65 = v126;
  *(unsigned char *)(v45 + v125[5]) = 0;
  *(unsigned char *)(v45 + v22[6]) = 0;
  *(unsigned char *)(v45 + v22[7]) = 0;
  uint64_t v67 = (uint64_t)v118;
  uint64_t v66 = v119;
  uint64_t v68 = v127;
  uint64_t v47 = v114;
LABEL_12:
  v68((char *)v45, 0, 1, v22);
LABEL_13:
  sub_2410A4D78(v45, v67, &qword_268CF1320, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, MEMORY[0x263F8D8F0]);
  unsigned int v71 = ((uint64_t (*)(uint64_t, uint64_t, int *))v47)(v67, 1, v22);
  sub_2410A1B6C(v67);
  if (v71 == 1)
  {
    sub_2410A1B6C((uint64_t)v129);
    uint64_t v72 = v45;
  }
  else if (((unsigned int (*)(uint64_t, uint64_t, int *))v47)(v45, 1, v22))
  {
    sub_2410A1B6C((uint64_t)v129);
    uint64_t v72 = (uint64_t)v131;
  }
  else
  {
    uint64_t v73 = v65;
    uint64_t v74 = v135;
    char v75 = sub_24115CAD0();
    uint64_t v76 = v66;
    uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
    uint64_t v78 = v110;
    uint64_t v79 = v111;
    v77(v110, v133, v111);
    uint64_t v80 = v109;
    uint64_t v81 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v109, v74, v134);
    if (v75)
    {
      (*(void (**)(char *, uint64_t))(v130 + 8))(v80, v81);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v79);
      sub_2410A1B6C((uint64_t)v129);
      char v82 = 1;
      uint64_t v72 = (uint64_t)v131;
      uint64_t v65 = v73;
    }
    else
    {
      sub_2410981B0(0, &qword_268CF1328, 255, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
      uint64_t v95 = sub_24115CCA0();
      uint64_t v96 = v79;
      uint64_t v97 = v76;
      uint64_t v98 = *(void *)(v95 - 8);
      unint64_t v99 = (*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
      uint64_t v100 = swift_allocObject();
      *(_OWORD *)(v100 + 16) = xmmword_24116B370;
      (*(void (**)(unint64_t, void, uint64_t))(v98 + 104))(v100 + v99, *MEMORY[0x263F07870], v95);
      sub_2410CD9EC(v100);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v101 = v105;
      sub_24115CBF0();
      swift_bridgeObjectRelease();
      uint64_t v102 = sub_24115C900();
      LOBYTE(v95) = v103;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v101, v107);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v80, v81);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v78, v96);
      sub_2410A1B6C((uint64_t)v129);
      BOOL v104 = (v95 & 1) == 0;
      uint64_t v22 = v125;
      uint64_t v65 = v126;
      BOOL v104 = v104 && v102 == 1;
      char v82 = v104;
      uint64_t v72 = (uint64_t)v131;
    }
    *(unsigned char *)(v72 + v22[7]) = v82;
  }
  return sub_2410A1EC4(v72, v65, &qword_268CF1320, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay);
}

unint64_t sub_241097AB4()
{
  unint64_t result = 0x697461636964656DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 1937334628;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_241097B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2410A3D94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241097B7C()
{
  return 0;
}

void sub_241097B88(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_241097B94(uint64_t a1)
{
  unint64_t v2 = sub_24109BA5C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241097BD0(uint64_t a1)
{
  unint64_t v2 = sub_24109BA5C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241097C0C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationHighlightsView.Model()
{
  return self;
}

uint64_t sub_241097C80(void *a1)
{
  uint64_t v3 = v1;
  sub_2410A4DE4(0, &qword_26B0040D8, (uint64_t (*)(void))sub_24109BA5C, (uint64_t)&type metadata for MedicationHighlightsView.Model.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v11 - v8;
  sub_24101A6BC(a1, a1[3]);
  sub_24109BA5C();
  sub_2411619D0();
  char v15 = 0;
  swift_bridgeObjectRetain();
  sub_241161800();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v14 = 1;
    swift_bridgeObjectRetain();
    sub_241161800();
    swift_bridgeObjectRelease();
    char v13 = 2;
    swift_bridgeObjectRetain();
    sub_2411617D0();
    swift_bridgeObjectRelease();
    v11[1] = *(void *)(v3 + 64);
    char v12 = 3;
    sub_24109BAB0(0);
    sub_2410A014C(&qword_26B005D38, &qword_26B005020);
    sub_241161820();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t *sub_241097F2C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24115E530();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_2410981B0(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    char v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v14 = a3[7];
    char v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    id v17 = v13;
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_241160120();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v15, v16, v18);
    }
    else
    {
      *char v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_2410981B0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_241098214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24115E530();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }

  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_241160120();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

char *sub_2410983A0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24115E530();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2410981B0(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)&a2[v9];
  *(void *)&a1[v9] = v11;
  *(void *)&a1[v10] = *(void *)&a2[v10];
  uint64_t v12 = a3[7];
  char v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  id v15 = v11;
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_241160120();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
  }
  else
  {
    *(void *)char v13 = *(void *)v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_2410985CC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24115E530();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_2410981B0(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  char v13 = *(void **)&a2[v12];
  uint64_t v14 = *(void **)&a1[v12];
  *(void *)&a1[v12] = v13;
  id v15 = v13;

  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v16 = a3[7];
    id v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    sub_241098880((uint64_t)&a1[v16]);
    sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_241160120();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *(void *)id v17 = *(void *)v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_241098880(uint64_t a1)
{
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_241098910(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24115E530();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2410981B0(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  uint64_t v14 = v13;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_241160120();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v11, v12, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

char *sub_241098B40(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24115E530();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_2410981B0(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = *(void **)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];

  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v14 = a3[7];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    sub_241098880((uint64_t)&a1[v14]);
    sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    uint64_t v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_241160120();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v15, v16, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_241098DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241098E0C);
}

uint64_t sub_241098E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2410981B0(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_2410981B0(0, &qword_268CF11B8, 255, MEMORY[0x263F19A00], MEMORY[0x263F185D0]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_241098FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241098FB4);
}

void sub_241098FB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_2410981B0(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    sub_2410981B0(0, &qword_268CF11B8, 255, MEMORY[0x263F19A00], MEMORY[0x263F185D0]);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    v12(v14, a2, a2, v13);
  }
}

uint64_t type metadata accessor for MedicationHighlightsView(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B004000);
}

void sub_241099168()
{
  sub_2410981B0(319, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_2410981B0(319, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_2410992B4(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &unk_241173034, 1);
}

void *sub_2410992D0(void *a1)
{
  uint64_t v3 = v1;
  sub_2410A4DE4(0, &qword_26B0040C0, (uint64_t (*)(void))sub_24109BA5C, (uint64_t)&type metadata for MedicationHighlightsView.Model.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v17 - v8;
  v1[6] = 0;
  v1[7] = 0;
  uint64_t v10 = a1[3];
  v17[0] = a1;
  sub_24101A6BC(a1, v10);
  sub_24109BA5C();
  sub_2411619C0();
  if (v2)
  {
    uint64_t v11 = v17[0];
    swift_bridgeObjectRelease();
    type metadata accessor for MedicationHighlightsView.Model();
    swift_deallocPartialClassInstance();
    uint64_t v15 = v11;
  }
  else
  {
    char v21 = 0;
    v1[2] = sub_2411617A0();
    v1[3] = v12;
    char v20 = 1;
    v1[4] = sub_2411617A0();
    v1[5] = v13;
    char v19 = 2;
    v1[6] = sub_241161770();
    v1[7] = v14;
    swift_bridgeObjectRelease();
    sub_24109BAB0(0);
    char v18 = 3;
    sub_2410A014C(&qword_26B0040B8, &qword_26B004010);
    sub_2411617C0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v15 = v17[0];
    v1[8] = v17[1];
  }
  sub_24101F178(v15);
  return v3;
}

uint64_t sub_2410995EC()
{
  return sub_24115DE10();
}

uint64_t sub_241099664()
{
  return sub_24115DE00();
}

void *sub_2410996B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for MedicationHighlightsView.Model();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_2410992D0(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_24109970C(void *a1)
{
  return sub_241097C80(a1);
}

uint64_t sub_241099730()
{
  return sub_241160040();
}

uint64_t sub_241099754(uint64_t a1)
{
  uint64_t v2 = sub_241160120();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_241160050();
}

uint64_t sub_24109981C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void v23[2] = a2;
  v23[3] = a1;
  v23[4] = a3;
  uint64_t v4 = sub_24115E160();
  v23[1] = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410981B0(0, &qword_268CF12E8, 255, MEMORY[0x263F43640], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v23 - v7;
  sub_2410981B0(0, &qword_268CF12F0, 255, MEMORY[0x263F43F20], v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v23 - v10;
  uint64_t v12 = *(void **)(v3 + *(int *)(type metadata accessor for MedicationHighlightsView(0) + 20));
  swift_bridgeObjectRetain();
  id v13 = objc_msgSend(v12, sel_displayCategory);
  id v14 = objc_msgSend(v13, sel_systemImageName);

  sub_241160730();
  v23[0] = v15;

  uint64_t v16 = sub_24115DCE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
  id v17 = objc_msgSend(v12, sel_objectType);
  sub_24115D7F0();
  uint64_t v18 = *MEMORY[0x263F43630];
  uint64_t v19 = sub_24115D780();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v8, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
  sub_2410981B0(0, &qword_268CF12F8, 255, MEMORY[0x263F44328], MEMORY[0x263F8E0F8]);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24116B200;
  sub_24115E140();
  sub_24115E150();
  void v23[5] = v21;
  sub_24109B77C(&qword_268CF1300, 255, MEMORY[0x263F44328]);
  sub_2410A0114(0);
  sub_24109B77C(&qword_268CF1310, 255, sub_2410A0114);
  sub_2411614F0();
  sub_24115E050();
  swift_allocObject();
  sub_24115E040();
  return sub_24115E060();
}

uint64_t sub_241099C78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_24109BB10();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24109C230(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24109C258(0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_241160140();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  sub_2410A5598(0, &qword_268CF12B0, sub_24109BBA8);
  sub_241099F3C(v2, &v6[*(int *)(v15 + 44)]);
  sub_2411603F0();
  sub_241160030();
  sub_2410A5A18((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))sub_24109BB10);
  uint64_t v16 = &v10[*(int *)(v8 + 44)];
  long long v17 = v24[5];
  *((_OWORD *)v16 + 4) = v24[4];
  *((_OWORD *)v16 + 5) = v17;
  *((_OWORD *)v16 + 6) = v24[6];
  long long v18 = v24[1];
  *(_OWORD *)uint64_t v16 = v24[0];
  *((_OWORD *)v16 + 1) = v18;
  long long v19 = v24[3];
  *((_OWORD *)v16 + 2) = v24[2];
  *((_OWORD *)v16 + 3) = v19;
  sub_2410A589C((uint64_t)v6, (uint64_t (*)(void))sub_24109BB10);
  sub_2410A5A18((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))sub_24109C230);
  *(_WORD *)&v14[*(int *)(v12 + 44)] = 256;
  sub_2410A589C((uint64_t)v10, (uint64_t (*)(void))sub_24109C230);
  uint64_t v20 = sub_241160330();
  LOBYTE(v10) = sub_2411601F0();
  sub_2410A5A18((uint64_t)v14, a1, (uint64_t (*)(void))sub_24109C258);
  sub_24109C280(0);
  uint64_t v22 = a1 + *(int *)(v21 + 36);
  *(void *)uint64_t v22 = v20;
  *(unsigned char *)(v22 + 8) = (_BYTE)v10;
  return sub_2410A589C((uint64_t)v14, (uint64_t (*)(void))sub_24109C258);
}

uint64_t sub_241099F3C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v115 = a2;
  sub_24109BE80();
  uint64_t v126 = v3;
  uint64_t v128 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v125 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v123 = (char *)&v98 - v6;
  sub_2410981B0(0, (unint64_t *)&qword_26B007200, 255, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  id v105 = (char *)&v98 - v8;
  uint64_t v102 = sub_24115CBA0();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v100 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = (uint64_t (*)(void))sub_24115CCC0();
  uint64_t v112 = *((void *)v113 - 1);
  MEMORY[0x270FA5388](v113);
  unint64_t v99 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for MedicationHighlightDaysOfWeekRow(0) - 8;
  MEMORY[0x270FA5388](v103);
  uint64_t v12 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24109BE38(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v108 = (uint64_t)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24109BE10(0);
  uint64_t v114 = v15 - 8;
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v127 = (uint64_t)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v119 = (uint64_t)&v98 - v18;
  uint64_t v121 = sub_24115E070();
  uint64_t v124 = *(void *)(v121 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v121);
  uint64_t v120 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (uint64_t)&v98 - v21;
  uint64_t v122 = (char *)&v98 - v21;
  uint64_t v109 = *(int *)(type metadata accessor for MedicationHighlightsView(0) + 24);
  uint64_t v107 = a1;
  uint64_t v23 = *(void *)(a1 + v109);
  uint64_t v24 = *(void *)(v23 + 16);
  uint64_t v25 = *(void *)(v23 + 24);
  swift_bridgeObjectRetain();
  sub_24109981C(v24, v25, v22);
  swift_bridgeObjectRelease();
  uint64_t v133 = sub_24109614C();
  uint64_t v134 = v26;
  sub_24108741C();
  uint64_t v27 = sub_2411602D0();
  uint64_t v29 = v28;
  char v31 = v30 & 1;
  sub_241160230();
  sub_241160250();
  sub_241160270();
  swift_release();
  uint64_t v32 = sub_2411602B0();
  uint64_t v34 = v33;
  LOBYTE(v22) = v35;
  swift_release();
  sub_24109C2A0(v27, v29, v31);
  swift_bridgeObjectRelease();
  id v36 = objc_msgSend(self, sel_labelColor);
  MEMORY[0x2456161B0](v36);
  uint64_t v117 = sub_2411602A0();
  uint64_t v110 = v37;
  char v39 = v38;
  uint64_t v111 = v40;
  swift_release();
  int v116 = v39 & 1;
  sub_24109C2A0(v32, v34, v22 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v118 = swift_getKeyPath();
  int v104 = sub_241160210();
  sub_24115FF90();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v49 = v101;
  uint64_t v50 = v100;
  uint64_t v51 = v102;
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v100, *MEMORY[0x263F07740], v102);
  uint64_t v52 = v99;
  sub_24115CBB0();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  uint64_t v53 = v105;
  sub_24115CB70();
  uint64_t v54 = sub_24115CB90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
  uint64_t v55 = v52;
  sub_24115CC80();
  uint64_t v56 = swift_getKeyPath();
  uint64_t v57 = v103;
  *(void *)&v12[*(int *)(v103 + 32)] = v56;
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t (*)(void)))(v112 + 32))(v12, v55, v113);
  uint64_t v58 = *(int *)(v57 + 28);
  HKUIOnePixel();
  *(void *)&v12[v58] = v59;
  uint64_t v60 = sub_2411603E0();
  uint64_t v61 = v108;
  sub_24109AC5C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v108, 0.0, 1, 0.0, 1, v60, v62, (void (*)(uint64_t, uint64_t))sub_2410A00FC, (uint64_t (*)(void))sub_24109BE38);
  sub_2410A589C((uint64_t)v12, type metadata accessor for MedicationHighlightDaysOfWeekRow);
  LOBYTE(v58) = sub_241160210();
  sub_24115FF90();
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v71 = v127;
  sub_2410A5A18(v61, v127, (uint64_t (*)(void))sub_24109BE38);
  uint64_t v72 = v71 + *(int *)(v114 + 44);
  *(unsigned char *)uint64_t v72 = v58;
  *(void *)(v72 + 8) = v64;
  *(void *)(v72 + 16) = v66;
  *(void *)(v72 + 24) = v68;
  *(void *)(v72 + 32) = v70;
  *(unsigned char *)(v72 + 40) = 0;
  sub_2410A589C(v61, (uint64_t (*)(void))sub_24109BE38);
  uint64_t v73 = v119;
  sub_2410A0094(v71, v119, (uint64_t (*)(void))sub_24109BE10);
  uint64_t v133 = sub_241095E84();
  swift_getKeyPath();
  sub_24109BF90(0);
  sub_24109BFC8(0);
  sub_24109B77C(&qword_268CF1288, 255, sub_24109BF90);
  sub_2410A014C(&qword_268CF1290, &qword_268CF1270);
  sub_2410A3AA4(&qword_268CF12C8, sub_24109BFC8, (void (*)(void))sub_24109FFC0);
  uint64_t v74 = v123;
  sub_2411603C0();
  char v75 = *(void (**)(char *, char *, uint64_t))(v124 + 16);
  uint64_t v76 = v120;
  uint64_t v77 = v121;
  v75(v120, v122, v121);
  LOBYTE(v133) = 1;
  char v132 = v116;
  char v131 = 1;
  char v130 = 0;
  uint64_t v113 = (uint64_t (*)(void))sub_24109BE10;
  sub_2410A5A18(v73, v71, (uint64_t (*)(void))sub_24109BE10);
  uint64_t v114 = *(void *)(v128 + 16);
  uint64_t v79 = v125;
  uint64_t v78 = v126;
  ((void (*)(char *, char *, uint64_t))v114)(v125, v74, v126);
  char v129 = 1;
  uint64_t v80 = v115;
  v75(v115, v76, v77);
  sub_24109BBE0();
  char v82 = v81;
  uint64_t v83 = &v80[v81[12]];
  char v84 = v133;
  *(void *)uint64_t v83 = 0;
  v83[8] = v84;
  char v85 = &v80[v81[16]];
  LOBYTE(v75) = v132;
  char v86 = v131;
  char v87 = v130;
  uint64_t v88 = v117;
  uint64_t v89 = v110;
  *(void *)char v85 = v117;
  *((void *)v85 + 1) = v89;
  v85[16] = (char)v75;
  uint64_t v90 = KeyPath;
  *((void *)v85 + 3) = v111;
  *((void *)v85 + 4) = v90;
  v85[40] = 0;
  *((void *)v85 + 6) = v118;
  *((void *)v85 + 7) = 0;
  v85[64] = v86;
  v85[72] = v104;
  *((void *)v85 + 10) = v42;
  *((void *)v85 + 11) = v44;
  *((void *)v85 + 12) = v46;
  *((void *)v85 + 13) = v48;
  v85[112] = v87;
  sub_2410A5A18(v127, (uint64_t)&v80[v81[20]], v113);
  ((void (*)(char *, char *, uint64_t))v114)(&v80[v82[24]], v79, v78);
  char v91 = &v80[v82[28]];
  char v92 = v129;
  *(void *)char v91 = 0;
  v91[8] = v92;
  sub_2410A006C(v88, v89, (char)v75);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  LOBYTE(v77) = v116;
  sub_2410A006C(v88, v89, v116);
  uint64_t v93 = *(void (**)(char *, uint64_t))(v128 + 8);
  v128 += 8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v94 = v126;
  v93(v123, v126);
  sub_2410A589C(v119, (uint64_t (*)(void))sub_24109BE10);
  sub_24109C2A0(v88, v89, v77);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v95 = *(void (**)(char *, uint64_t))(v124 + 8);
  uint64_t v96 = v121;
  v95(v122, v121);
  v93(v125, v94);
  sub_2410A589C(v127, (uint64_t (*)(void))sub_24109BE10);
  sub_24109C2A0(v117, v89, v132);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v95)(v120, v96);
}

__n128 sub_24109AC5C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t, uint64_t), uint64_t (*a17)(void))
{
  uint64_t v18 = v17;
  uint64_t v20 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_241160D40();
    uint64_t v29 = (void *)sub_2411601E0();
    sub_24115F700();

    uint64_t v20 = a17;
  }
  sub_241160030();
  a16(v18, a9);
  char v30 = (_OWORD *)(a9 + *(int *)(v20(0) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *char v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  void v30[2] = v34;
  _OWORD v30[3] = v35;
  return result;
}

uint64_t sub_24109AE30@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_241160D40();
    uint64_t v23 = (void *)sub_2411601E0();
    sub_24115F700();
  }
  sub_241160030();
  long long v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  a9[4] = v13[4];
  *(_OWORD *)((char *)a9 + 73) = *(_OWORD *)((char *)v13 + 73);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[10] = v31;
  a9[11] = v32;
  a9[12] = v33;
  a9[6] = v27;
  a9[7] = v28;
  a9[8] = v29;
  a9[9] = v30;

  return sub_2410A59A4((uint64_t)v13);
}

uint64_t sub_24109AFF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  sub_24109C018(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24109BFF0(0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  *(void *)uint64_t v5 = sub_2411600E0();
  *((void *)v5 + 1) = 0;
  unsigned char v5[16] = 1;
  sub_2410A5598(0, &qword_268CF12E0, (void (*)(uint64_t))sub_24109C060);
  v25[1] = &v5[*(int *)(v11 + 44)];
  uint64_t v27 = v10;
  swift_getKeyPath();
  sub_24109BAB0(0);
  type metadata accessor for MedicationHighlightsDayView(0);
  sub_24109B77C(&qword_268CF1268, 255, sub_24109BAB0);
  sub_24109B77C(&qword_268CF1270, 255, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay);
  sub_24109B77C(&qword_268CF1280, 255, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsDayView);
  swift_bridgeObjectRetain();
  sub_2411603C0();
  char v12 = sub_241160200();
  sub_24115FF90();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  sub_2410A5A18((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))sub_24109C018);
  uint64_t v21 = &v9[*(int *)(v7 + 44)];
  *uint64_t v21 = v12;
  *((void *)v21 + 1) = v14;
  *((void *)v21 + 2) = v16;
  *((void *)v21 + 3) = v18;
  *((void *)v21 + 4) = v20;
  v21[40] = 0;
  sub_2410A589C((uint64_t)v5, (uint64_t (*)(void))sub_24109C018);
  uint64_t v22 = sub_2411603E0();
  sub_24109AC5C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v26, 0.0, 1, 0.0, 1, v22, v23, (void (*)(uint64_t, uint64_t))sub_2410A007C, (uint64_t (*)(void))sub_24109BFC8);
  return sub_2410A589C((uint64_t)v9, (uint64_t (*)(void))sub_24109BFF0);
}

uint64_t sub_24109B360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410A5A18(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)(a2 + *(int *)(type metadata accessor for MedicationHighlightsDayView(0) + 20)) = KeyPath;
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  swift_storeEnumTagMultiPayload();
  return sub_2410A0094((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
}

id sub_24109B484@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24115E530();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a3, 1, 1, v6);
  id result = objc_msgSend(self, sel_displayTypeWithIdentifier_, 273);
  if (result)
  {
    *(void *)(a3 + a2[5]) = result;
    uint64_t v8 = (uint64_t *)(a3 + a2[7]);
    *uint64_t v8 = swift_getKeyPath();
    sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    swift_storeEnumTagMultiPayload();
    sub_2410981B0(0, &qword_268CF11D8, v9, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsView.Model, MEMORY[0x263F43CB8]);
    uint64_t v11 = v10;
    sub_24115DA40();
    id result = (id)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    *(void *)(a3 + a2[6]) = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24109B614@<X0>(uint64_t a1@<X8>)
{
  return sub_2410A4D78(v1, a1, &qword_26B003F20, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
}

uint64_t sub_24109B664(uint64_t a1)
{
  return sub_2410A1F44(a1, v1, &qword_26B003F20, MEMORY[0x263F445F8]);
}

uint64_t (*sub_24109B69C())()
{
  return nullsub_1;
}

uint64_t sub_24109B6C4()
{
  return sub_241160300();
}

uint64_t sub_24109B6E4()
{
  return sub_24109B77C((unint64_t *)&qword_26B003FF8, 255, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsView);
}

uint64_t sub_24109B730()
{
  return sub_24109B77C(&qword_26B003FF0, 255, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsView);
}

uint64_t sub_24109B77C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24109B7C4()
{
  return sub_24109B77C(&qword_26B003FE0, 255, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsView);
}

uint64_t sub_24109B810()
{
  return sub_24109B77C(&qword_268CF11C0, 255, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsView.MedicationsHighlightsViewActionHandler);
}

uint64_t sub_24109B85C(uint64_t a1, uint64_t a2)
{
  return sub_24109B77C(&qword_26B003FC8, a2, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsView.Model);
}

uint64_t sub_24109B8A4(uint64_t a1, uint64_t a2)
{
  return sub_24109B77C(&qword_26B003FD8, a2, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsView.Model);
}

uint64_t sub_24109B8EC(uint64_t a1, uint64_t a2)
{
  return sub_24109B77C(&qword_26B003FD0, a2, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsView.Model);
}

void sub_24109B934()
{
  if (!qword_268CF11C8)
  {
    sub_2410981B0(255, &qword_26B003F10, 255, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF11C8);
    }
  }
}

uint64_t sub_24109B9CC(uint64_t a1)
{
  sub_2410981B0(0, &qword_26B003F10, 255, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24109BA5C()
{
  unint64_t result = qword_26B003FA8;
  if (!qword_26B003FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B003FA8);
  }
  return result;
}

void sub_24109BAB0(uint64_t a1)
{
}

uint64_t sub_24109BAE8()
{
  return sub_241160040();
}

void sub_24109BB10()
{
  if (!qword_268CF11E0)
  {
    sub_24109BBA8(255);
    sub_24109B77C(&qword_268CF1298, 255, sub_24109BBA8);
    unint64_t v0 = sub_241160380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF11E0);
    }
  }
}

void sub_24109BBA8(uint64_t a1)
{
}

void sub_24109BBE0()
{
  if (!qword_268CF11F0)
  {
    sub_24115E070();
    sub_2410A5278(255, &qword_268CF11F8, (void (*)(uint64_t))sub_24109BCA0);
    sub_24109BE10(255);
    sub_24109BE80();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_268CF11F0);
    }
  }
}

void sub_24109BCA0()
{
  if (!qword_268CF1200)
  {
    sub_24109BD20();
    sub_24109BDA4(255, (unint64_t *)&qword_268CF1218, &qword_268CF1220, MEMORY[0x263F8D6C8]);
    unint64_t v0 = sub_241160000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1200);
    }
  }
}

void sub_24109BD20()
{
  if (!qword_268CF1208)
  {
    sub_2410A522C(255, &qword_268CF1210, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t v0 = sub_241160000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1208);
    }
  }
}

void sub_24109BDA4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_2410A522C(255, a3, a4, MEMORY[0x263F8D8F0]);
    unint64_t v5 = sub_2411601C0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_24109BE10(uint64_t a1)
{
}

void sub_24109BE38(uint64_t a1)
{
}

uint64_t type metadata accessor for MedicationHighlightDaysOfWeekRow(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF1370);
}

void sub_24109BE80()
{
  if (!qword_268CF1238)
  {
    sub_24109BF90(255);
    sub_24109BAB0(255);
    sub_24109BFC8(255);
    sub_24109B77C(&qword_268CF1288, 255, sub_24109BF90);
    sub_2410A014C(&qword_268CF1290, &qword_268CF1270);
    unint64_t v0 = sub_2411603D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1238);
    }
  }
}

void sub_24109BF90(uint64_t a1)
{
}

void sub_24109BFC8(uint64_t a1)
{
}

void sub_24109BFF0(uint64_t a1)
{
}

void sub_24109C018(uint64_t a1)
{
}

void sub_24109C060()
{
  if (!qword_268CF1260)
  {
    sub_24109BAB0(255);
    type metadata accessor for MedicationHighlightsContent.HighlightDay();
    type metadata accessor for MedicationHighlightsDayView(255);
    sub_24109B77C(&qword_268CF1268, 255, sub_24109BAB0);
    sub_24109B77C(&qword_268CF1270, 255, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay);
    unint64_t v0 = sub_2411603D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1260);
    }
  }
}

uint64_t type metadata accessor for MedicationHighlightsDayView(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF1360);
}

unint64_t sub_24109C18C()
{
  unint64_t result = qword_268CF1278;
  if (!qword_268CF1278)
  {
    sub_24109C060();
    sub_24109B77C(&qword_268CF1280, 255, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsDayView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1278);
  }
  return result;
}

void sub_24109C230(uint64_t a1)
{
}

void sub_24109C258(uint64_t a1)
{
}

void sub_24109C280(uint64_t a1)
{
}

uint64_t sub_24109C2A0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24109C2B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_241160120();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicationHighlightDaysOfWeekRow(0);
  sub_24109FB5C((uint64_t)v5);
  char v6 = sub_241160110();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v7 = v3 + 8;
  v8(v5, v2);
  if (v6) {
    uint64_t v9 = sub_24115CC40();
  }
  else {
    uint64_t v9 = sub_24115CC30();
  }
  uint64_t v10 = v9;
  uint64_t v11 = sub_24115CBD0();
  uint64_t v12 = v11 - 1;
  if (__OFSUB__(v11, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v7 = *(void *)(v10 + 16);
  if (v7 < v12)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v12 < 0)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_24114CF20(v10, v1, v12, (2 * v7) | 1);
    goto LABEL_12;
  }
  uint64_t v1 = v10 + 32;
  sub_2411618B0();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v13 = swift_dynamicCastClass();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x263F8EE78];
  }
  uint64_t v14 = *(void *)(v13 + 16);
  swift_release();
  if (v14 != v7 - v12) {
    goto LABEL_21;
  }
  uint64_t v15 = swift_dynamicCastClass();
  if (!v15)
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x263F8EE78];
  }
LABEL_12:
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain_n();
  uint64_t v16 = swift_dynamicCastClass();
  if (!v16)
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  uint64_t v17 = *(void *)(v16 + 16);
  swift_release();
  if (v17 == v12)
  {
    uint64_t v18 = swift_dynamicCastClass();
    if (!v18)
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = MEMORY[0x263F8EE78];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_24114CF20(v10, v1, 0, (2 * v12) | 1);
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v15;
  sub_2410CF750(v18);
  return v21;
}

uint64_t sub_24109C534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v100 = a1;
  uint64_t v94 = (char *)type metadata accessor for MedicationHighlightDaysOfWeekRow(0);
  uint64_t v80 = *((void *)v94 - 1);
  MEMORY[0x270FA5388](v94);
  uint64_t v81 = v2;
  uint64_t v82 = (uint64_t)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410A416C(0, &qword_268CF1520, (uint64_t (*)(uint64_t))sub_2410A5150, (uint64_t (*)(void))sub_2410A5400, MEMORY[0x263F1B640]);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v5 = (char *)&v79 - v4;
  sub_2410A50AC();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v87 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410A5084(0);
  uint64_t v89 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v98 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v90 = (uint64_t)&v79 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v97 = (uint64_t)&v79 - v13;
  uint64_t v14 = sub_2411603B0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410A5004();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410A4FDC(0);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v95 = (uint64_t)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v96 = (uint64_t)&v79 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  long long v29 = (char *)&v79 - v28;
  MEMORY[0x270FA5388](v27);
  long long v31 = (char *)&v79 - v30;
  sub_2411603A0();
  if (qword_268CF0300 != -1) {
    swift_once();
  }
  uint64_t v32 = qword_268CF2880;
  uint64_t KeyPath = swift_getKeyPath();
  long long v34 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v85 = v15 + 16;
  char v84 = v34;
  v34(v21, v17, v14);
  uint64_t v88 = v19;
  __n128 v35 = (uint64_t *)&v21[*(int *)(v19 + 36)];
  *__n128 v35 = KeyPath;
  v35[1] = v32;
  long long v36 = *(void (**)(char *, uint64_t))(v15 + 8);
  swift_retain();
  uint64_t v91 = v15 + 8;
  uint64_t v92 = v14;
  char v86 = v36;
  v36(v17, v14);
  uint64_t v83 = *((int *)v94 + 5);
  uint64_t v37 = v100;
  double v38 = *(double *)(v100 + v83);
  uint64_t v39 = sub_2411603E0();
  sub_24109AC5C(0.0, 1, 0.0, 1, INFINITY, 0, v38, 0, (uint64_t)v29, 0.0, 1, v38, 0, v39, v40, (void (*)(uint64_t, uint64_t))sub_2410A5A00, (uint64_t (*)(void))sub_2410A4FDC);
  sub_2410A589C((uint64_t)v21, (uint64_t (*)(void))sub_2410A5004);
  uint64_t v93 = v29;
  uint64_t v94 = v31;
  sub_2410A0094((uint64_t)v29, (uint64_t)v31, (uint64_t (*)(void))sub_2410A4FDC);
  *(void *)unint64_t v5 = sub_2411600E0();
  *((void *)v5 + 1) = 0;
  unsigned char v5[16] = 1;
  sub_2410A5598(0, &qword_268CF1560, (void (*)(uint64_t))sub_2410A5150);
  uint64_t v101 = sub_24109C2B0();
  swift_getKeyPath();
  uint64_t v41 = v82;
  sub_2410A00FC(v37, v82);
  unint64_t v42 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  uint64_t v43 = swift_allocObject();
  sub_2410A0094(v41, v43 + v42, type metadata accessor for MedicationHighlightDaysOfWeekRow);
  sub_2410A522C(0, (unint64_t *)&qword_26B005D98, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_2410A5278(0, &qword_268CF1530, (void (*)(uint64_t))sub_2410A52DC);
  sub_2410A5384();
  sub_2410A5470();
  sub_2411603C0();
  uint64_t v44 = sub_2411603E0();
  uint64_t v45 = v87;
  sub_24109AC5C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v87, 0.0, 1, 0.0, 1, v44, v46, (void (*)(uint64_t, uint64_t))sub_2410A58FC, (uint64_t (*)(void))sub_2410A50AC);
  sub_2410A57FC((uint64_t)v5);
  LOBYTE(v32) = sub_241160200();
  unsigned __int8 v47 = sub_241160210();
  char v48 = sub_241160220();
  sub_241160220();
  if (sub_241160220() != v32) {
    char v48 = sub_241160220();
  }
  sub_241160220();
  if (sub_241160220() != v47) {
    char v48 = sub_241160220();
  }
  uint64_t v49 = v100;
  uint64_t v51 = v92;
  uint64_t v50 = (uint64_t)v93;
  uint64_t v52 = v88;
  sub_24115FF90();
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v61 = v90;
  sub_2410A5A18(v45, v90, (uint64_t (*)(void))sub_2410A50AC);
  uint64_t v62 = v61 + *(int *)(v89 + 36);
  *(unsigned char *)uint64_t v62 = v48;
  *(void *)(v62 + 8) = v54;
  *(void *)(v62 + 16) = v56;
  *(void *)(v62 + 24) = v58;
  *(void *)(v62 + 32) = v60;
  *(unsigned char *)(v62 + 40) = 0;
  sub_2410A589C(v45, (uint64_t (*)(void))sub_2410A50AC);
  uint64_t v63 = v97;
  sub_2410A0094(v61, v97, (uint64_t (*)(void))sub_2410A5084);
  sub_2411603A0();
  uint64_t v64 = qword_268CF2880;
  uint64_t v65 = swift_getKeyPath();
  v84(v21, v17, v51);
  uint64_t v66 = (uint64_t *)&v21[*(int *)(v52 + 36)];
  uint64_t *v66 = v65;
  v66[1] = v64;
  swift_retain();
  v86(v17, v51);
  double v67 = *(double *)(v49 + v83);
  uint64_t v68 = sub_2411603E0();
  uint64_t v69 = v96;
  sub_24109AC5C(0.0, 1, 0.0, 1, INFINITY, 0, v67, 0, v96, 0.0, 1, v67, 0, v68, v70, (void (*)(uint64_t, uint64_t))sub_2410A5A00, (uint64_t (*)(void))sub_2410A4FDC);
  sub_2410A589C((uint64_t)v21, (uint64_t (*)(void))sub_2410A5004);
  sub_2410A0094(v69, v50, (uint64_t (*)(void))sub_2410A4FDC);
  uint64_t v71 = (uint64_t)v94;
  sub_2410A5A18((uint64_t)v94, v69, (uint64_t (*)(void))sub_2410A4FDC);
  uint64_t v72 = v50;
  uint64_t v73 = v98;
  sub_2410A5A18(v63, v98, (uint64_t (*)(void))sub_2410A5084);
  uint64_t v74 = v95;
  sub_2410A5A18(v72, v95, (uint64_t (*)(void))sub_2410A4FDC);
  uint64_t v75 = v99;
  sub_2410A5A18(v69, v99, (uint64_t (*)(void))sub_2410A4FDC);
  sub_2410A4F68();
  uint64_t v77 = v76;
  sub_2410A5A18(v73, v75 + *(int *)(v76 + 48), (uint64_t (*)(void))sub_2410A5084);
  sub_2410A5A18(v74, v75 + *(int *)(v77 + 64), (uint64_t (*)(void))sub_2410A4FDC);
  sub_2410A589C(v72, (uint64_t (*)(void))sub_2410A4FDC);
  sub_2410A589C(v63, (uint64_t (*)(void))sub_2410A5084);
  sub_2410A589C(v71, (uint64_t (*)(void))sub_2410A4FDC);
  sub_2410A589C(v74, (uint64_t (*)(void))sub_2410A4FDC);
  sub_2410A589C(v73, (uint64_t (*)(void))sub_2410A5084);
  return sub_2410A589C(v69, (uint64_t (*)(void))sub_2410A4FDC);
}

__n128 sub_24109CFD0@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v32 = sub_241160130();
  *(void *)&v33[0] = v3;
  *((void *)&v33[0] + 1) = v4;
  sub_24108741C();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_2411602D0();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v10 = self;
  sub_241160730();
  uint64_t v11 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v10, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v11, 32770, *MEMORY[0x263F83430]);

  sub_241160290();
  uint64_t v13 = sub_2411602B0();
  uint64_t v15 = v14;
  char v17 = v16;
  swift_release();
  sub_24109C2A0(v5, v7, v9);
  swift_bridgeObjectRelease();
  if (qword_268CF0308 != -1) {
    swift_once();
  }
  char v18 = v17 & 1;
  swift_retain();
  uint64_t v19 = sub_2411602A0();
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  swift_release();
  sub_24109C2A0(v13, v15, v18);
  swift_bridgeObjectRelease();
  uint64_t v34 = v32;
  uint64_t v35 = 0;
  char v36 = 1;
  uint64_t v37 = v19;
  uint64_t v38 = v21;
  char v39 = v23 & 1;
  uint64_t v40 = v25;
  uint64_t KeyPath = swift_getKeyPath();
  char v42 = 1;
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = 1;
  char v45 = 0;
  sub_2411603E0();
  sub_24109AE30(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v33, 0.0, 1, 0.0, 1);
  sub_24109C2A0(v19, v21, v23 & 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  long long v26 = v33[11];
  *(_OWORD *)(a2 + 160) = v33[10];
  *(_OWORD *)(a2 + 176) = v26;
  *(_OWORD *)(a2 + 192) = v33[12];
  long long v27 = v33[7];
  *(_OWORD *)(a2 + 96) = v33[6];
  *(_OWORD *)(a2 + 112) = v27;
  long long v28 = v33[9];
  *(_OWORD *)(a2 + 128) = v33[8];
  *(_OWORD *)(a2 + 144) = v28;
  long long v29 = v33[3];
  *(_OWORD *)(a2 + 32) = v33[2];
  *(_OWORD *)(a2 + 48) = v29;
  long long v30 = v33[5];
  *(_OWORD *)(a2 + 64) = v33[4];
  *(_OWORD *)(a2 + 80) = v30;
  __n128 result = (__n128)v33[1];
  *(_OWORD *)a2 = v33[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_24109D2A8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_241160130();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_2410A5598(0, &qword_268CF14D8, sub_2410A4F30);
  return sub_24109C534(v1, a1 + *(int *)(v3 + 44));
}

id sub_24109D318()
{
  sub_2410981B0(0, (unint64_t *)&qword_26B007200, 255, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v20 - v4;
  uint64_t v6 = sub_24115CBA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24115CCC0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F07740], v6);
  sub_24115CBB0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_24115CB70();
  uint64_t v15 = sub_24115CB90();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v5, 0, 1, v15);
  sub_24115CC80();
  sub_24115CC70();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  char v17 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v3, 1, v15) != 1)
  {
    char v17 = (void *)sub_24115CB60();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v15);
  }
  objc_msgSend(v14, sel_setLocale_, v17);

  char v18 = (void *)sub_2411606F0();
  objc_msgSend(v14, sel_setLocalizedDateFormatFromTemplate_, v18);

  return v14;
}

uint64_t sub_24109D66C()
{
  uint64_t v1 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + *(int *)(v2 + 36)) != 1) {
    return 32;
  }
  id v5 = sub_24109D318();
  sub_2410A5A18(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
  uint64_t v6 = (void *)sub_24115CAA0();
  uint64_t v7 = sub_24115CB10();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
  id v8 = objc_msgSend(v5, sel_stringFromDate_, v6);

  uint64_t v9 = sub_241160730();
  uint64_t v11 = v10;

  v14[0] = v9;
  v14[1] = v11;
  sub_24108741C();
  uint64_t v12 = sub_241161470();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_24109D7D4()
{
  sub_2410A4DE4(0, &qword_268CF14C8, (uint64_t (*)(void))sub_2410A4E4C, MEMORY[0x263F8D6C8], MEMORY[0x263F068B8]);
  uint64_t v29 = *(void *)(v0 - 8);
  uint64_t v30 = v0;
  MEMORY[0x270FA5388](v0);
  long long v28 = (char *)&v25 - v1;
  sub_2410981B0(0, (unint64_t *)&qword_26B007200, 255, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  id v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_24115CBA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24115CCC0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24115CB90();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  long long v26 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  long long v27 = (char *)&v25 - v20;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F07740], v8);
  sub_24115CBB0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_24115CB70();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v7, 0, 1, v16);
  sub_24115CC80();
  sub_24115CC70();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
  {
    sub_241032AF8((uint64_t)v5);
    return 0;
  }
  else
  {
    char v22 = v27;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v27, v5, v16);
    uint64_t v31 = sub_24109DCA8();
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v26, v22, v16);
    sub_2410A4E4C();
    char v23 = v28;
    sub_24115C970();
    sub_2410A4EA0();
    uint64_t v24 = v30;
    sub_2411614C0();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v24);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    return v32;
  }
}

uint64_t sub_24109DCA8()
{
  uint64_t v0 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = sub_24115CCA0();
  uint64_t v3 = *(void *)(v22[0] - 8);
  MEMORY[0x270FA5388](v22[0]);
  id v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410981B0(0, (unint64_t *)&qword_26B007200, 255, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v22 - v7;
  uint64_t v9 = sub_24115CBA0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24115CCC0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F07740], v9);
  sub_24115CBB0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_24115CB70();
  uint64_t v17 = sub_24115CB90();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 0, 1, v17);
  sub_24115CC80();
  uint64_t v18 = v22[0];
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x263F07870], v22[0]);
  sub_2410A5A18(v22[1], (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
  uint64_t v19 = sub_24115CCB0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v20 = sub_24115CB10();
  (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v2, v20);
  return v19;
}

uint64_t sub_24109E074@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_2410A3F58();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410A490C(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410A4934(0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410A495C(0);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_241160130();
  *((void *)v6 + 1) = 0x4014000000000000;
  v6[16] = 0;
  sub_2410A5598(0, &qword_268CF1490, sub_2410A3FF0);
  sub_24109E398(v2, (uint64_t *)&v6[*(int *)(v18 + 44)]);
  uint64_t v19 = sub_2411603E0();
  sub_24109AC5C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v9, 0.0, 1, 0.0, 1, v19, v20, (void (*)(uint64_t, uint64_t))sub_2410A497C, (uint64_t (*)(void))sub_2410A490C);
  sub_2410A589C((uint64_t)v6, (uint64_t (*)(void))sub_2410A3F58);
  if (*(unsigned char *)(v2 + *(int *)(type metadata accessor for MedicationHighlightsContent.HighlightDay() + 24))) {
    double v21 = 0.0;
  }
  else {
    double v21 = 1.0;
  }
  sub_2410A5A18((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))sub_2410A490C);
  *(double *)&v13[*(int *)(v11 + 44)] = v21;
  sub_2410A589C((uint64_t)v9, (uint64_t (*)(void))sub_2410A490C);
  uint64_t v22 = sub_241160330();
  char v23 = sub_2411601F0();
  sub_2410A5A18((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))sub_2410A4934);
  uint64_t v24 = &v17[*(int *)(v15 + 44)];
  *(void *)uint64_t v24 = v22;
  v24[8] = v23;
  sub_2410A589C((uint64_t)v13, (uint64_t (*)(void))sub_2410A4934);
  return sub_2410A0094((uint64_t)v17, a1, (uint64_t (*)(void))sub_2410A495C);
}

uint64_t sub_24109E398@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v143 = a1;
  uint64_t v189 = a2;
  sub_2410A4590(0);
  uint64_t v185 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v187 = (uint64_t)&v143 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_24115CCC0();
  uint64_t v167 = *(void *)(v168 - 8);
  MEMORY[0x270FA5388](v168);
  uint64_t v166 = (char *)&v143 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = type metadata accessor for MedicationHighlightsContent.HighlightDay() - 8;
  MEMORY[0x270FA5388](v193);
  uint64_t v165 = (uint64_t)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = sub_241160020();
  uint64_t v6 = MEMORY[0x270FA5388](v198);
  uint64_t v188 = (double *)((char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6);
  uint64_t v191 = (double *)((char *)&v143 - v8);
  sub_2410A46B8();
  uint64_t v164 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v171 = (uint64_t)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410A4600(0);
  uint64_t v170 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v176 = (uint64_t)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410A45D8(0);
  uint64_t v175 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v181 = (uint64_t)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_241160120();
  uint64_t v199 = *(void *)(v200 - 8);
  MEMORY[0x270FA5388](v200);
  uint64_t v190 = (uint64_t)&v143 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410A44C0(0);
  uint64_t v172 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v183 = (char *)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410A44F4(0, &qword_268CF1408, sub_2410A44C0, (void (*)(uint64_t))sub_2410A4874);
  uint64_t v180 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v186 = (uint64_t)&v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v182 = (char *)&v143 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v184 = (uint64_t)&v143 - v23;
  sub_2411600F0();
  uint64_t v24 = sub_2411602C0();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  uint64_t v29 = self;
  sub_241160730();
  uint64_t v30 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  uint64_t v31 = *MEMORY[0x263F83430];
  id v192 = (id)v29;
  id v32 = objc_msgSend((id)v29, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v30, 32770, v31);

  sub_241160290();
  uint64_t v178 = sub_2411602B0();
  uint64_t v177 = v33;
  int v163 = v34;
  uint64_t v179 = v35;
  swift_release();
  sub_24109C2A0(v24, v26, v28);
  swift_bridgeObjectRelease();
  uint64_t v174 = sub_2411603E0();
  uint64_t v173 = v36;
  *(void *)&long long v210 = sub_24109D66C();
  *((void *)&v210 + 1) = v37;
  unint64_t v161 = sub_24108741C();
  uint64_t v38 = sub_2411602D0();
  uint64_t v40 = v39;
  char v42 = v41 & 1;
  sub_241160730();
  uint64_t v43 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v44 = objc_msgSend((id)v29, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v43, 32770, v31);

  sub_241160290();
  uint64_t v45 = sub_2411602B0();
  uint64_t v47 = v46;
  LOBYTE(v29) = v48;
  swift_release();
  sub_24109C2A0(v38, v40, v42);
  swift_bridgeObjectRelease();
  id v145 = self;
  MEMORY[0x2456161B0](objc_msgSend(v145, sel_secondaryLabelColor));
  uint64_t v196 = sub_2411602A0();
  uint64_t v169 = v49;
  int v162 = v50;
  uint64_t v197 = v51;
  swift_release();
  sub_24109C2A0(v45, v47, v29 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v194 = swift_getKeyPath();
  uint64_t v52 = v143;
  *(void *)&long long v210 = sub_24109D7D4();
  *((void *)&v210 + 1) = v53;
  uint64_t v54 = sub_2411602D0();
  uint64_t v56 = v55;
  LOBYTE(v38) = v57 & 1;
  sub_241160730();
  uint64_t v58 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v59 = objc_msgSend(v192, sel_hk_preferredFontForTextStyle_symbolicTraits_maximumContentSizeCategory_, v58, 32770, v31);

  sub_241160290();
  uint64_t v60 = sub_2411602B0();
  uint64_t v62 = v61;
  char v64 = v63;
  uint64_t v65 = v52;
  swift_release();
  sub_24109C2A0(v54, v56, v38);
  swift_bridgeObjectRelease();
  uint64_t v146 = *(int *)(v193 + 28);
  if (*(unsigned char *)(v52 + v146) != 1)
  {
    if (qword_268CF0318 == -1) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if (qword_268CF0310 != -1) {
LABEL_19:
  }
    swift_once();
LABEL_5:
  swift_retain();
  uint64_t v160 = sub_2411602A0();
  uint64_t v159 = v66;
  int v144 = v67;
  unint64_t v161 = v68;
  swift_release();
  sub_24109C2A0(v60, v62, v64 & 1);
  swift_bridgeObjectRelease();
  uint64_t v158 = swift_getKeyPath();
  uint64_t v157 = swift_getKeyPath();
  uint64_t v69 = v52 + *(int *)(type metadata accessor for MedicationHighlightsDayView(0) + 20);
  uint64_t v70 = v190;
  sub_24109FB5C(v190);
  sub_241160110();
  uint64_t v71 = v199 + 8;
  uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v199 + 8);
  uint64_t v73 = v200;
  v72(v70, v200);
  sub_24109FB5C(v70);
  sub_241160110();
  v72(v70, v73);
  sub_2411603E0();
  sub_24115FFD0();
  uint64_t v152 = v201;
  int v151 = v202;
  uint64_t v150 = v203;
  int v149 = v204;
  uint64_t v148 = v205;
  uint64_t v147 = v206;
  uint64_t v193 = v69;
  sub_24109FB5C(v70);
  char v74 = sub_241160110();
  uint64_t v75 = v71;
  id v192 = v72;
  v72(v70, v73);
  if (v74) {
    double v76 = 8.0;
  }
  else {
    double v76 = 16.0;
  }
  uint64_t v77 = v191;
  uint64_t v78 = (char *)v191 + *(int *)(v198 + 20);
  uint64_t v79 = *MEMORY[0x263F19860];
  uint64_t v80 = sub_241160100();
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v82 = *(void (**)(char *, void, uint64_t))(v81 + 104);
  unsigned int v156 = v79;
  uint64_t v155 = v80;
  uint64_t v154 = v82;
  uint64_t v153 = v81 + 104;
  ((void (*)(char *, uint64_t))v82)(v78, v79);
  *uint64_t v77 = v76;
  v77[1] = v76;
  id v83 = objc_msgSend(v145, sel_labelColor);
  id v84 = objc_msgSend(v83, sel_colorWithAlphaComponent_, 0.4);

  uint64_t v85 = MEMORY[0x2456161B0](v84);
  uint64_t v86 = v165;
  sub_2410A5A18(v65, v165, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
  uint64_t v87 = v166;
  sub_24115CC90();
  sub_24115CBE0();
  (*(void (**)(char *, uint64_t))(v167 + 8))(v87, v168);
  uint64_t v88 = sub_24115CB10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v88 - 8) + 8))(v86, v88);
  sub_24115FFB0();
  uint64_t v89 = (uint64_t (*)(void))MEMORY[0x263F19048];
  uint64_t v90 = v171;
  sub_2410A5A18((uint64_t)v77, v171, MEMORY[0x263F19048]);
  double v91 = *(double *)&v207 * 0.5;
  uint64_t v92 = v90 + *(int *)(v164 + 68);
  sub_2410A5A18((uint64_t)v77, v92, v89);
  *(double *)(v92 + *(int *)(sub_241160010() + 20)) = v91;
  sub_2410A4994();
  uint64_t v94 = v92 + *(int *)(v93 + 36);
  long long v95 = v208;
  *(_OWORD *)uint64_t v94 = v207;
  *(_OWORD *)(v94 + 16) = v95;
  *(void *)(v94 + 32) = v209;
  sub_2410A4A2C();
  *(void *)(v92 + *(int *)(v96 + 52)) = v85;
  *(_WORD *)(v92 + *(int *)(v96 + 56)) = 256;
  uint64_t v97 = sub_2411603E0();
  uint64_t v99 = v98;
  sub_2410A4AE0();
  uint64_t v101 = (uint64_t *)(v92 + *(int *)(v100 + 36));
  uint64_t *v101 = v97;
  v101[1] = v99;
  sub_2410A589C((uint64_t)v77, MEMORY[0x263F19048]);
  if (*(unsigned char *)(v65 + v146) == 1)
  {
    if (qword_268CF0320 != -1) {
      swift_once();
    }
    uint64_t v102 = &qword_268CF28A0;
  }
  else
  {
    if (qword_268CF0328 != -1) {
      swift_once();
    }
    uint64_t v102 = &qword_268CF28A8;
  }
  uint64_t v103 = *v102;
  swift_retain();
  LODWORD(v167) = v144 & 1;
  LODWORD(v168) = v162 & 1;
  LODWORD(v191) = v163 & 1;
  char v104 = sub_2411601F0();
  uint64_t v105 = v176;
  sub_2410A5A18(v90, v176, (uint64_t (*)(void))sub_2410A46B8);
  uint64_t v106 = v105 + *(int *)(v170 + 36);
  *(void *)uint64_t v106 = v103;
  *(unsigned char *)(v106 + 8) = v104;
  sub_2410A589C(v90, (uint64_t (*)(void))sub_2410A46B8);
  uint64_t v107 = v190;
  sub_24109FB5C(v190);
  sub_241160110();
  uint64_t v108 = v200;
  uint64_t v109 = (void (*)(uint64_t, uint64_t))v192;
  ((void (*)(uint64_t, uint64_t))v192)(v107, v200);
  uint64_t v199 = v75;
  sub_24109FB5C(v107);
  sub_241160110();
  v109(v107, v108);
  sub_2411603E0();
  sub_24115FFD0();
  uint64_t v110 = v181;
  sub_2410A5A18(v105, v181, (uint64_t (*)(void))sub_2410A4600);
  uint64_t v111 = (_OWORD *)(v110 + *(int *)(v175 + 36));
  long long v112 = v211;
  _OWORD *v111 = v210;
  v111[1] = v112;
  v111[2] = v212;
  sub_2410A589C(v105, (uint64_t (*)(void))sub_2410A4600);
  uint64_t v113 = sub_2411603E0();
  uint64_t v115 = v114;
  uint64_t v116 = v187;
  sub_2410A5A18(v110, v187, (uint64_t (*)(void))sub_2410A45D8);
  uint64_t v117 = (uint64_t *)(v116 + *(int *)(v185 + 36));
  *uint64_t v117 = v113;
  v117[1] = v115;
  uint64_t v118 = (uint64_t)v183;
  sub_2410A5A18(v116, (uint64_t)&v183[*(int *)(v172 + 36)], (uint64_t (*)(void))sub_2410A4590);
  uint64_t v119 = v160;
  uint64_t v120 = v159;
  *(void *)uint64_t v118 = v160;
  *(void *)(v118 + 8) = v120;
  char v121 = v167;
  *(unsigned char *)(v118 + 16) = v167;
  uint64_t v122 = v158;
  *(void *)(v118 + 24) = v161;
  *(void *)(v118 + 32) = v122;
  *(unsigned char *)(v118 + 40) = 1;
  *(void *)(v118 + 48) = v157;
  *(void *)(v118 + 56) = 1;
  *(unsigned char *)(v118 + 64) = 0;
  *(void *)(v118 + 72) = v152;
  *(unsigned char *)(v118 + 80) = v151;
  *(void *)(v118 + 88) = v150;
  *(unsigned char *)(v118 + 96) = v149;
  uint64_t v123 = v147;
  *(void *)(v118 + 104) = v148;
  *(void *)(v118 + 112) = v123;
  sub_2410A006C(v119, v120, v121);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_2410A589C(v116, (uint64_t (*)(void))sub_2410A4590);
  sub_2410A589C(v110, (uint64_t (*)(void))sub_2410A45D8);
  sub_24109C2A0(v119, v120, v121);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24109FB5C(v107);
  LOBYTE(v113) = sub_241160110();
  ((void (*)(uint64_t, uint64_t))v192)(v107, v200);
  if (v113) {
    double v124 = 8.0;
  }
  else {
    double v124 = 16.0;
  }
  uint64_t v125 = v188;
  v154((char *)v188 + *(int *)(v198 + 20), v156, v155);
  *uint64_t v125 = v124;
  v125[1] = v124;
  uint64_t v126 = (uint64_t)v182;
  uint64_t v127 = (uint64_t)&v182[*(int *)(v180 + 36)];
  sub_2410A5A18((uint64_t)v125, v127, MEMORY[0x263F19048]);
  sub_2410A4874();
  *(_WORD *)(v127 + *(int *)(v128 + 36)) = 256;
  sub_2410A5A18(v118, v126, (uint64_t (*)(void))sub_2410A44C0);
  sub_2410A589C((uint64_t)v125, MEMORY[0x263F19048]);
  sub_2410A589C(v118, (uint64_t (*)(void))sub_2410A44C0);
  uint64_t v129 = v126;
  uint64_t v130 = v184;
  sub_2410A4BC4(v129, v184);
  uint64_t v131 = v186;
  sub_2410A4C58(v130, v186);
  char v132 = v189;
  uint64_t v133 = v178;
  uint64_t v134 = v177;
  *uint64_t v189 = v178;
  v132[1] = v134;
  char v135 = (char)v191;
  *((unsigned char *)v132 + 16) = (_BYTE)v191;
  uint64_t v136 = v196;
  v132[3] = v179;
  v132[4] = v136;
  uint64_t v137 = v169;
  v132[5] = v169;
  char v138 = v168;
  *((unsigned char *)v132 + 48) = v168;
  uint64_t v139 = KeyPath;
  v132[7] = v197;
  v132[8] = v139;
  *((unsigned char *)v132 + 72) = 1;
  v132[10] = v194;
  v132[11] = 1;
  *((unsigned char *)v132 + 96) = 0;
  *(_WORD *)((char *)v132 + 97) = 257;
  uint64_t v140 = v173;
  v132[13] = v174;
  v132[14] = v140;
  sub_2410A4028();
  sub_2410A4C58(v131, (uint64_t)v132 + *(int *)(v141 + 48));
  sub_2410A006C(v133, v134, v135);
  swift_bridgeObjectRetain();
  sub_2410A006C(v136, v137, v138);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_2410A4CEC(v130);
  sub_2410A4CEC(v131);
  sub_24109C2A0(v133, v134, (char)v191);
  swift_bridgeObjectRelease();
  sub_24109C2A0(v196, v137, v138);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_24109F7CC()
{
  uint64_t v0 = sub_24115F790();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  id v5 = objc_msgSend(v4, sel_displayTypeController);

  if (!v5)
  {
    __break(1u);
    return;
  }
  id v6 = objc_msgSend(self, sel_medicationDoseEventType);
  id v7 = objc_msgSend(v5, sel_displayTypeForObjectType_, v6);

  if (v7)
  {
    id v8 = objc_msgSend(self, sel_categoryWithID_, objc_msgSend(v7, sel_categoryIdentifier));
    if (v8)
    {
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, sel_color);
      if (!v10) {
        id v10 = objc_msgSend(self, sel_systemCyanColor);
      }
      MEMORY[0x2456161B0](v10);

      return;
    }
  }
  sub_24115F740();
  uint64_t v11 = sub_24115F780();
  os_log_type_t v12 = sub_241160D40();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_241007000, v11, v12, "Unable to resolve hkType and/or display category. As such, we can't access the correct medication category color", v13, 2u);
    MEMORY[0x2456180C0](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v14 = objc_msgSend(self, sel_systemCyanColor);
  MEMORY[0x2456161B0](v14);
}

uint64_t sub_24109FA48()
{
  uint64_t result = MEMORY[0x2456161B0](objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.9, 0.9, 0.92, 1.0));
  qword_268CF2880 = result;
  return result;
}

uint64_t sub_24109FA98(uint64_t a1)
{
  return sub_24109FB14(a1, (SEL *)&selRef_secondaryLabelColor, &qword_268CF2888);
}

uint64_t sub_24109FAAC()
{
  uint64_t result = sub_241160340();
  qword_268CF2890 = result;
  return result;
}

uint64_t sub_24109FACC(uint64_t a1)
{
  return sub_24109FB14(a1, (SEL *)&selRef_secondaryLabelColor, &qword_268CF2898);
}

void sub_24109FAE0()
{
  sub_24109F7CC();
  qword_268CF28A0 = v0;
}

uint64_t sub_24109FB00(uint64_t a1)
{
  return sub_24109FB14(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_268CF28A8);
}

uint64_t sub_24109FB14(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id v4 = [self *a2];
  uint64_t result = MEMORY[0x2456161B0](v4);
  *a3 = result;
  return result;
}

uint64_t sub_24109FB5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2411600D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F19A00];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F185C8];
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  MEMORY[0x270FA5388](v10);
  os_log_type_t v12 = (char *)v20 - v11;
  sub_2410A4D78(v2, (uint64_t)v20 - v11, &qword_26B004050, v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_241160120();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, v12, v13);
  }
  else
  {
    os_log_type_t v15 = sub_241160D40();
    uint64_t v16 = sub_2411601E0();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v20[1] = a1;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v21 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      void v20[2] = sub_24101F0A4(0xD000000000000013, 0x8000000241166070, &v21);
      sub_241161430();
      _os_log_impl(&dword_241007000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v19, -1, -1);
      MEMORY[0x2456180C0](v18, -1, -1);
    }

    sub_2411600C0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_24109FE50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_241160080();
  *a1 = result;
  return result;
}

uint64_t sub_24109FE7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_241160080();
  *a1 = result;
  return result;
}

uint64_t sub_24109FEA8()
{
  return sub_241160090();
}

uint64_t sub_24109FED0()
{
  return sub_241160090();
}

uint64_t sub_24109FEF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_2411600A0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_24109FF2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_2411600A0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_24109FF60()
{
  return sub_2411600B0();
}

uint64_t sub_24109FF90()
{
  return sub_2411600B0();
}

unint64_t sub_24109FFC0()
{
  unint64_t result = qword_268CF12D0;
  if (!qword_268CF12D0)
  {
    sub_24109BFF0(255);
    sub_24109B77C(&qword_268CF12D8, 255, sub_24109C018);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF12D0);
  }
  return result;
}

uint64_t sub_2410A006C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_2410A007C(uint64_t a1, uint64_t a2)
{
  return sub_2410A5A18(a1, a2, (uint64_t (*)(void))sub_24109BFF0);
}

uint64_t sub_2410A0094(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2410A00FC(uint64_t a1, uint64_t a2)
{
  return sub_2410A5A18(a1, a2, type metadata accessor for MedicationHighlightDaysOfWeekRow);
}

void sub_2410A0114(uint64_t a1)
{
}

uint64_t sub_2410A014C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24109BAB0(255);
    sub_24109B77C(a2, 255, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2410A01E0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241020840(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_2410A0248(uint64_t a1)
{
  uint64_t v161 = a1;
  uint64_t v152 = sub_24115CCA0();
  int v151 = *(uint8_t **)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  uint64_t v150 = (char *)&v143 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410981B0(0, (unint64_t *)&qword_26B007240, 255, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  int v149 = (char *)&v143 - v4;
  uint64_t v5 = sub_24115F790();
  uint64_t v180 = *(void *)(v5 - 8);
  unint64_t v181 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v164 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v157 = (char *)&v143 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v147 = (char *)&v143 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v175 = (char *)&v143 - v12;
  uint64_t v179 = sub_24115C810();
  uint64_t v169 = *(void *)(v179 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v179);
  uint64_t v160 = (char *)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v173 = (char *)&v143 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v155 = (char *)&v143 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v172 = (char *)&v143 - v19;
  uint64_t v20 = sub_24115CB10();
  uint64_t v165 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v146 = (char *)&v143 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v171 = (char *)&v143 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v178 = (char *)&v143 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v182 = (char *)&v143 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v143 - v30;
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  int v34 = (char *)&v143 - v33;
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v37 = (char *)&v143 - v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v143 - v38;
  sub_2410981B0(0, (unint64_t *)&qword_26B007200, 255, MEMORY[0x263F07690], v2);
  MEMORY[0x270FA5388](v40 - 8);
  char v42 = (char *)&v143 - v41;
  uint64_t v43 = sub_24115CBA0();
  uint64_t v44 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v46 = (char *)&v143 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_24115CCC0();
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x270FA5388](v159);
  char v48 = (char *)&v143 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v46, *MEMORY[0x263F07740], v43);
  sub_24115CBB0();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
  sub_24115CB70();
  uint64_t v49 = sub_24115CB90();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56);
  uint64_t v145 = v49;
  int v144 = v51;
  uint64_t v143 = v50 + 56;
  ((void (*)(char *, void, uint64_t))v51)(v42, 0, 1);
  uint64_t v148 = v42;
  sub_24115CC80();
  sub_24115CB00();
  sub_24115CBC0();
  uint64_t v52 = v165;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v165 + 8);
  uint64_t v163 = v165 + 8;
  int v162 = v53;
  v53(v37, v20);
  uint64_t v177 = v48;
  uint64_t v54 = v20;
  uint64_t v55 = (void *)sub_24115CC20();
  uint64_t v56 = (void *)sub_24115CAA0();
  id v57 = objc_msgSend(v55, sel_hk_startOfDateBySubtractingDays_fromDate_, 27, v56);

  sub_24115CAE0();
  uint64_t v58 = v169;
  uint64_t v59 = v52 + 16;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  uint64_t v61 = v34;
  v60(v37, v34, v20);
  uint64_t v170 = v39;
  uint64_t v167 = v59;
  uint64_t v166 = v60;
  v60(v31, v39, v20);
  uint64_t v168 = v37;
  unsigned int v156 = v31;
  uint64_t v62 = v179;
  sub_24115C7D0();
  sub_24115F740();
  char v63 = *(void (**)(void))(v58 + 16);
  char v64 = v155;
  uint64_t v154 = v58 + 16;
  uint64_t v153 = v63;
  v63();
  uint64_t v65 = sub_24115F780();
  os_log_type_t v66 = sub_241160D10();
  BOOL v67 = os_log_type_enabled(v65, v66);
  uint64_t v174 = v54;
  uint64_t v176 = v61;
  if (v67)
  {
    unint64_t v68 = (uint8_t *)swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    uint64_t v186 = v69;
    *(_DWORD *)unint64_t v68 = 136315138;
    sub_24109B77C(&qword_268CF1318, 255, MEMORY[0x263F062D0]);
    uint64_t v70 = sub_241161850();
    uint64_t v185 = sub_24101F0A4(v70, v71, &v186);
    sub_241161430();
    swift_bridgeObjectRelease();
    uint64_t v155 = *(char **)(v58 + 8);
    ((void (*)(char *, uint64_t))v155)(v64, v62);
    _os_log_impl(&dword_241007000, v65, v66, "InnerInterval = %s", v68, 0xCu);
    swift_arrayDestroy();
    uint64_t v72 = v69;
    uint64_t v61 = v176;
    MEMORY[0x2456180C0](v72, -1, -1);
    uint64_t v73 = v68;
    uint64_t v54 = v174;
    MEMORY[0x2456180C0](v73, -1, -1);
  }
  else
  {
    uint64_t v155 = *(char **)(v58 + 8);
    ((void (*)(char *, uint64_t))v155)(v64, v62);
  }

  char v74 = v175;
  uint64_t v175 = *(char **)(v180 + 8);
  ((void (*)(char *, unint64_t))v175)(v74, v181);
  uint64_t v75 = v166;
  v166(v182, v61, v54);
  double v76 = v178;
  v75(v178, v170, v54);
  uint64_t v77 = (void *)sub_24115CC20();
  uint64_t v78 = sub_24115CBD0();
  uint64_t v79 = (void *)sub_24115CAA0();
  id v80 = objc_msgSend(v77, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, v78, v79, 1);

  sub_24115CAE0();
  uint64_t v81 = v151;
  uint64_t v82 = v150;
  uint64_t v83 = v152;
  (*((void (**)(char *, void, uint64_t))v151 + 13))(v150, *MEMORY[0x263F07870], v152);
  uint64_t v84 = (uint64_t)v149;
  sub_24115CC60();
  (*((void (**)(char *, uint64_t))v81 + 1))(v82, v83);
  uint64_t v85 = (void (**)(void, void, void))v165;
  int v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v165 + 48))(v84, 1, v54);
  uint64_t v87 = v157;
  if (v86 == 1)
  {
    sub_2410A1AB8(v84);
  }
  else
  {
    uint64_t v88 = v146;
    ((void (**)(char *, uint64_t, uint64_t))v85)[4](v146, v84, v54);
    ((void (**)(char *, char *, uint64_t))v85)[3](v76, v88, v54);
    uint64_t v89 = v147;
    sub_24115F740();
    uint64_t v90 = sub_24115F780();
    os_log_type_t v91 = sub_241160D10();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = (uint8_t *)swift_slowAlloc();
      uint64_t v152 = swift_slowAlloc();
      uint64_t v186 = v152;
      *(_DWORD *)uint64_t v92 = 136315138;
      int v151 = v92 + 4;
      swift_beginAccess();
      uint64_t v93 = (uint64_t)v148;
      sub_24115CB80();
      v144(v93, 0, 1, v145);
      uint64_t v94 = sub_24115CA30();
      unint64_t v96 = v95;
      sub_241032AF8(v93);
      uint64_t v185 = sub_24101F0A4(v94, v96, &v186);
      uint64_t v54 = v174;
      unint64_t v97 = v181;
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v90, v91, "OuterEnd changed to %s", v92, 0xCu);
      uint64_t v98 = v152;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v98, -1, -1);
      MEMORY[0x2456180C0](v92, -1, -1);

      ((void (*)(char *, unint64_t))v175)(v147, v97);
      v162(v146, v54);
    }
    else
    {

      ((void (*)(char *, unint64_t))v175)(v89, v181);
      v162(v88, v54);
    }
  }
  uint64_t v99 = (void *)sub_24115CC20();
  uint64_t v100 = sub_24115CBD0();
  uint64_t v101 = (void *)sub_24115CAA0();
  id v102 = objc_msgSend(v99, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, v100, v101, 0);

  uint64_t v103 = v168;
  sub_24115CAE0();

  ((void (**)(char *, char *, uint64_t))v85)[5](v182, v103, v54);
  sub_24115F740();
  char v104 = sub_24115F780();
  os_log_type_t v105 = sub_241160D10();
  if (os_log_type_enabled(v104, v105))
  {
    uint64_t v106 = (uint8_t *)swift_slowAlloc();
    uint64_t v107 = swift_slowAlloc();
    uint64_t v186 = v107;
    *(_DWORD *)uint64_t v106 = 136315138;
    swift_beginAccess();
    uint64_t v108 = (uint64_t)v148;
    sub_24115CB80();
    v144(v108, 0, 1, v145);
    uint64_t v109 = sub_24115CA30();
    unint64_t v111 = v110;
    sub_241032AF8(v108);
    uint64_t v185 = sub_24101F0A4(v109, v111, &v186);
    uint64_t v54 = v174;
    unint64_t v112 = v181;
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v104, v105, "OuterStart changed to %s", v106, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v107, -1, -1);
    MEMORY[0x2456180C0](v106, -1, -1);

    uint64_t v113 = v87;
    unint64_t v114 = v112;
  }
  else
  {

    unint64_t v114 = v181;
    uint64_t v113 = v87;
  }
  ((void (*)(char *, unint64_t))v175)(v113, v114);
  uint64_t v115 = v179;
  uint64_t v116 = v164;
  uint64_t v117 = v160;
  uint64_t v118 = v182;
  swift_beginAccess();
  uint64_t v119 = v166;
  v166(v168, v118, v54);
  uint64_t v120 = v178;
  swift_beginAccess();
  v119(v156, v120, v54);
  char v121 = v173;
  sub_24115C7D0();
  sub_24115F740();
  ((void (*)(char *, char *, uint64_t))v153)(v117, v121, v115);
  uint64_t v122 = sub_24115F780();
  os_log_type_t v123 = sub_241160D10();
  BOOL v124 = os_log_type_enabled(v122, v123);
  uint64_t v125 = (void (*)(char *, uint64_t))v155;
  if (v124)
  {
    uint64_t v126 = v117;
    uint64_t v127 = (uint8_t *)swift_slowAlloc();
    uint64_t v128 = swift_slowAlloc();
    uint64_t v184 = v128;
    *(_DWORD *)uint64_t v127 = 136315138;
    sub_24109B77C(&qword_268CF1318, 255, MEMORY[0x263F062D0]);
    uint64_t v129 = sub_241161850();
    uint64_t v183 = sub_24101F0A4(v129, v130, &v184);
    sub_241161430();
    swift_bridgeObjectRelease();
    uint64_t v169 = (v169 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v125(v126, v115);
    _os_log_impl(&dword_241007000, v122, v123, "OuterInterval = %s", v127, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v128, -1, -1);
    MEMORY[0x2456180C0](v127, -1, -1);

    uint64_t v131 = v164;
  }
  else
  {
    uint64_t v169 = (v169 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    ((void (*)(char *, uint64_t))v155)(v117, v115);

    uint64_t v131 = v116;
  }
  ((void (*)(char *, unint64_t))v175)(v131, v181);
  char v132 = v125;
  uint64_t v133 = (uint64_t)v177;
  uint64_t v134 = v173;
  uint64_t v135 = sub_241096898((uint64_t)v177);
  MEMORY[0x270FA5388](v135);
  *(&v143 - 6) = v161;
  *(&v143 - 5) = v133;
  uint64_t v136 = v172;
  *(&v143 - 4) = (uint64_t)v134;
  *(&v143 - 3) = (uint64_t)v136;
  uint64_t v137 = v176;
  *(&v143 - 2) = (uint64_t)v176;
  unint64_t v181 = sub_2410935BC((void (*)(char *))sub_2410A1B48, (uint64_t)(&v143 - 8), v135);
  uint64_t v138 = v174;
  uint64_t v139 = v162;
  v162(v171, v174);
  v139(v170, v138);
  uint64_t v140 = v134;
  uint64_t v141 = v179;
  v132(v140, v179);
  v132(v136, v141);
  v139(v137, v138);
  (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v133, v159);
  swift_bridgeObjectRelease();
  v139(v178, v138);
  v139(v182, v138);
  return v181;
}

uint64_t sub_2410A16AC(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a3;
  uint64_t v7 = a2;
  uint64_t v8 = a1;
  int64_t v9 = 0;
  int64_t v10 = a1;
  while (1)
  {
    BOOL v11 = v10 <= a2;
    if (a3 > 0) {
      BOOL v11 = v10 >= a2;
    }
    if (v11) {
      break;
    }
    BOOL v12 = __OFADD__(v10, a3);
    v10 += a3;
    if (v12) {
      int64_t v10 = (v10 >> 63) ^ 0x8000000000000000;
    }
    BOOL v12 = __OFADD__(v9++, 1);
    if (v12)
    {
      __break(1u);
      break;
    }
  }
  uint64_t v38 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2410E59E4(0, v9, 0);
  uint64_t v36 = v7;
  if (v9)
  {
    uint64_t v34 = v6;
    uint64_t v35 = *(void *)(a4 + 16);
    while (1)
    {
      BOOL v14 = v8 <= v7;
      if (v6 > 0) {
        BOOL v14 = v8 >= v7;
      }
      if (v14) {
        break;
      }
      if (__OFADD__(v8, v6)) {
        int64_t v15 = ((v8 + v6) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v15 = v8 + v6;
      }
      if (__OFADD__(v8, a5)) {
        goto LABEL_61;
      }
      if (v35 >= v8 + a5) {
        uint64_t v16 = v8 + a5;
      }
      else {
        uint64_t v16 = v35;
      }
      if (v16 < v8) {
        goto LABEL_62;
      }
      if (v8 < 0) {
        goto LABEL_63;
      }
      sub_2411618B0();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v17 = swift_dynamicCastClass();
      if (!v17)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = MEMORY[0x263F8EE78];
      }
      uint64_t v18 = *(void *)(v17 + 16);
      swift_release();
      if (v18 == v16 - v8)
      {
        uint64_t v19 = swift_dynamicCastClass();
        uint64_t v6 = v34;
        uint64_t v7 = v36;
        if (!v19)
        {
          swift_bridgeObjectRelease();
          uint64_t v19 = MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v22 = *(void *)(type metadata accessor for MedicationHighlightsContent.HighlightDay() - 8);
        uint64_t v19 = sub_24114D0A0(a4, a4 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)), v8, (2 * v16) | 1);
        uint64_t v6 = v34;
        uint64_t v7 = v36;
      }
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v21 = *(void *)(v38 + 16);
      unint64_t v20 = *(void *)(v38 + 24);
      if (v21 >= v20 >> 1) {
        uint64_t result = sub_2410E59E4(v20 > 1, v21 + 1, 1);
      }
      *(void *)(v38 + 16) = v21 + 1;
      *(void *)(v38 + 8 * v21 + 32) = v19;
      uint64_t v8 = v15;
      if (!--v9) {
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
  }
  else
  {
    int64_t v15 = v8;
LABEL_35:
    BOOL v23 = v15 <= v7;
    if (v6 > 0) {
      BOOL v23 = v15 >= v7;
    }
    if (v23) {
      return v38;
    }
    while (1)
    {
      int64_t v24 = __OFADD__(v15, v6) ? ((v15 + v6) >> 63) ^ 0x8000000000000000 : v15 + v6;
      if (__OFADD__(v15, a5)) {
        break;
      }
      if (*(void *)(a4 + 16) >= v15 + a5) {
        int64_t v25 = v15 + a5;
      }
      else {
        int64_t v25 = *(void *)(a4 + 16);
      }
      if (v25 < v15) {
        goto LABEL_65;
      }
      if (v15 < 0) {
        goto LABEL_66;
      }
      sub_2411618B0();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v26 = swift_dynamicCastClass();
      if (!v26)
      {
        swift_bridgeObjectRelease();
        uint64_t v26 = MEMORY[0x263F8EE78];
      }
      uint64_t v27 = *(void *)(v26 + 16);
      swift_release();
      if (v27 == v25 - v15)
      {
        uint64_t v28 = swift_dynamicCastClass();
        int64_t v29 = v36;
        if (!v28)
        {
          swift_bridgeObjectRelease();
          uint64_t v28 = MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v33 = *(void *)(type metadata accessor for MedicationHighlightsContent.HighlightDay() - 8);
        uint64_t v28 = sub_24114D0A0(a4, a4 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80)), v15, (2 * v25) | 1);
        int64_t v29 = v36;
      }
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v31 = *(void *)(v38 + 16);
      unint64_t v30 = *(void *)(v38 + 24);
      if (v31 >= v30 >> 1) {
        uint64_t result = sub_2410E59E4(v30 > 1, v31 + 1, 1);
      }
      *(void *)(v38 + 16) = v31 + 1;
      *(void *)(v38 + 8 * v31 + 32) = v28;
      BOOL v32 = v24 <= v29;
      if (v6 > 0) {
        BOOL v32 = v24 >= v29;
      }
      int64_t v15 = v24;
      if (v32) {
        return v38;
      }
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_2410A1AB8(uint64_t a1)
{
  sub_2410981B0(0, (unint64_t *)&qword_26B007240, 255, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2410A1B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_241096D34(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t sub_2410A1B6C(uint64_t a1)
{
  sub_2410981B0(0, &qword_268CF1320, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2410A1BFC(uint64_t a1)
{
  sub_2410A01E0(0, &qword_268CF1330, &qword_268CF1338, MEMORY[0x263F43FA0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2410A1C84(uint64_t a1)
{
  sub_2410981B0(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2410A1D14()
{
  if (!qword_268CF1340)
  {
    unint64_t v0 = sub_2411601B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1340);
    }
  }
}

uint64_t sub_2410A1D7C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_2410A522C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t *sub_2410A1DFC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_2410A1E34(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2410A1E98(uint64_t a1)
{
  return a1;
}

uint64_t sub_2410A1EC4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2410981B0(0, a3, 255, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_2410A1F44(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2410981B0(0, a3, 255, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

id sub_2410A1FC4@<X0>(uint64_t a1@<X8>)
{
  return sub_241094D78(v1, a1);
}

void sub_2410A1FCC()
{
  if (!qword_268CF1350)
  {
    type metadata accessor for MedicationHighlightsView(255);
    sub_24109B77C((unint64_t *)&qword_26B003FF8, 255, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsView);
    unint64_t v0 = sub_2411601B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1350);
    }
  }
}

uint64_t sub_2410A2080(uint64_t a1)
{
  sub_2410981B0(0, &qword_26B0040F8, 255, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationHighlightsView.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MedicationHighlightsView.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2410A226CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationHighlightsView.Model.CodingKeys()
{
  return &type metadata for MedicationHighlightsView.Model.CodingKeys;
}

void *sub_2410A22A4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24115CB10();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    int v8 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
    *((unsigned char *)a1 + v8[5]) = *((unsigned char *)a2 + v8[5]);
    *((unsigned char *)a1 + v8[6]) = *((unsigned char *)a2 + v8[6]);
    *((unsigned char *)a1 + v8[7]) = *((unsigned char *)a2 + v8[7]);
    uint64_t v9 = *(int *)(a3 + 20);
    int64_t v10 = (void *)((char *)a1 + v9);
    BOOL v11 = (void *)((char *)a2 + v9);
    sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_241160120();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *int64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2410A2458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24115CB10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_241160120();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_2410A2570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24115CB10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  *(unsigned char *)(a1 + v7[5]) = *(unsigned char *)(a2 + v7[5]);
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  int64_t v10 = (void *)(a2 + v8);
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_241160120();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2410A26CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24115CB10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  *(unsigned char *)(a1 + v7[5]) = *(unsigned char *)(a2 + v7[5]);
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)(a1 + v8);
    int64_t v10 = (void *)(a2 + v8);
    sub_241098880(a1 + v8);
    sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_241160120();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2410A2838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24115CB10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  *(unsigned char *)(a1 + v7[5]) = *(unsigned char *)(a2 + v7[5]);
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  int64_t v10 = (const void *)(a2 + v8);
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  uint64_t v12 = v11;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_241160120();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2410A29A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24115CB10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  *(unsigned char *)(a1 + v7[5]) = *(unsigned char *)(a2 + v7[5]);
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)(a1 + v8);
    int64_t v10 = (const void *)(a2 + v8);
    sub_241098880(a1 + v8);
    sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_241160120();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2410A2B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2410A2B34);
}

uint64_t sub_2410A2B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_2410981B0(0, &qword_268CF11B8, 255, MEMORY[0x263F19A00], MEMORY[0x263F185D0]);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_2410A2C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2410A2C74);
}

uint64_t sub_2410A2C74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_2410981B0(0, &qword_268CF11B8, 255, MEMORY[0x263F19A00], MEMORY[0x263F185D0]);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_2410A2DAC()
{
  type metadata accessor for MedicationHighlightsContent.HighlightDay();
  if (v0 <= 0x3F)
  {
    sub_2410981B0(319, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_2410A2EA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24115CCC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_241160120();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2410A3038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24115CCC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_241160120();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_2410A3150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24115CCC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_241160120();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2410A3288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24115CCC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_241098880(a1 + v7);
    sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_241160120();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2410A33D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24115CCC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_241160120();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2410A351C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24115CCC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_241098880(a1 + v7);
    sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_241160120();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2410A3678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2410A368C);
}

uint64_t sub_2410A368C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24115CCC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_2410981B0(0, &qword_268CF11B8, 255, MEMORY[0x263F19A00], MEMORY[0x263F185D0]);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_2410A37B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2410A37CC);
}

uint64_t sub_2410A37CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_24115CCC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_2410981B0(0, &qword_268CF11B8, 255, MEMORY[0x263F19A00], MEMORY[0x263F185D0]);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

void sub_2410A3904()
{
  sub_24115CCC0();
  if (v0 <= 0x3F)
  {
    sub_2410981B0(319, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_2410A3A0C()
{
  return sub_2410A42D0(&qword_268CF1380, sub_24109C280, (void (*)(void))sub_2410A3A68, (void (*)(void))sub_2410A3BD0);
}

uint64_t sub_2410A3A68()
{
  return sub_2410A3AA4(&qword_268CF1388, sub_24109C258, (void (*)(void))sub_2410A3B24);
}

uint64_t sub_2410A3AA4(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2410A3B24()
{
  unint64_t result = qword_268CF1390;
  if (!qword_268CF1390)
  {
    sub_24109C230(255);
    sub_24109B77C(&qword_268CF1398, 255, (void (*)(uint64_t))sub_24109BB10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1390);
  }
  return result;
}

unint64_t sub_2410A3BD0()
{
  unint64_t result = qword_268CF13A0;
  if (!qword_268CF13A0)
  {
    sub_2410A4B74(255, &qword_268CF12C0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A158]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF13A0);
  }
  return result;
}

uint64_t sub_2410A3C54(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &unk_241173084, 1);
}

unint64_t sub_2410A3C74()
{
  unint64_t result = qword_268CF13A8;
  if (!qword_268CF13A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF13A8);
  }
  return result;
}

uint64_t sub_2410A3CC8(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &unk_24117305C, 1);
}

unint64_t sub_2410A3CE8()
{
  unint64_t result = qword_26B003FB8;
  if (!qword_26B003FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B003FB8);
  }
  return result;
}

unint64_t sub_2410A3D40()
{
  unint64_t result = qword_26B003FB0;
  if (!qword_26B003FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B003FB0);
  }
  return result;
}

uint64_t sub_2410A3D94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x697461636964656DLL && a2 == 0xEE00656D614E6E6FLL;
  if (v2 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000241165FB0 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000241165FD0 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1937334628 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_241161890();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void sub_2410A3F58()
{
  if (!qword_268CF13B0)
  {
    sub_2410A3FF0(255);
    sub_24109B77C(&qword_268CF1470, 255, sub_2410A3FF0);
    unint64_t v0 = sub_241160380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF13B0);
    }
  }
}

void sub_2410A3FF0(uint64_t a1)
{
}

void sub_2410A4028()
{
  if (!qword_268CF13C0)
  {
    sub_2410A40C8();
    sub_2410A44F4(255, &qword_268CF1408, sub_2410A44C0, (void (*)(uint64_t))sub_2410A4874);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF13C0);
    }
  }
}

void sub_2410A40C8()
{
  if (!qword_268CF13C8)
  {
    sub_2410A416C(255, &qword_268CF13D0, (uint64_t (*)(uint64_t))sub_2410A41EC, (uint64_t (*)(void))sub_2410A4214, MEMORY[0x263F19120]);
    unint64_t v0 = sub_241160000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF13C8);
    }
  }
}

void sub_2410A416C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_2410A41EC(uint64_t a1)
{
}

unint64_t sub_2410A4214()
{
  unint64_t result = qword_268CF13E0;
  if (!qword_268CF13E0)
  {
    sub_2410A41EC(255);
    sub_2410A42D0((unint64_t *)&qword_268CF13E8, (void (*)(uint64_t))sub_24109BCA0, (void (*)(void))sub_2410A435C, (void (*)(void))sub_2410A4450);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF13E0);
  }
  return result;
}

uint64_t sub_2410A42D0(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2410A435C()
{
  unint64_t result = qword_268CF13F0;
  if (!qword_268CF13F0)
  {
    sub_24109BD20();
    sub_2410A43D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF13F0);
  }
  return result;
}

unint64_t sub_2410A43D4()
{
  unint64_t result = qword_268CF13F8;
  if (!qword_268CF13F8)
  {
    sub_2410A522C(255, &qword_268CF1210, MEMORY[0x263F18968], MEMORY[0x263F1A418]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF13F8);
  }
  return result;
}

unint64_t sub_2410A4450()
{
  unint64_t result = qword_268CF1400;
  if (!qword_268CF1400)
  {
    sub_24109BDA4(255, (unint64_t *)&qword_268CF1218, &qword_268CF1220, MEMORY[0x263F8D6C8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1400);
  }
  return result;
}

void sub_2410A44C0(uint64_t a1)
{
}

void sub_2410A44F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_241160000();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_2410A4568(uint64_t a1)
{
}

void sub_2410A4590(uint64_t a1)
{
}

void sub_2410A45D8(uint64_t a1)
{
}

void sub_2410A4600(uint64_t a1)
{
}

void sub_2410A4620(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_2410A4B74(255, &qword_268CF12C0, MEMORY[0x263F1B440], MEMORY[0x263F1B420], MEMORY[0x263F1A158]);
    unint64_t v4 = sub_241160000();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2410A46B8()
{
  if (!qword_268CF1438)
  {
    sub_241160020();
    sub_24109B77C(&qword_268CF1440, 255, MEMORY[0x263F19048]);
    unint64_t v0 = sub_241160180();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1438);
    }
  }
}

unint64_t sub_2410A4780()
{
  unint64_t result = qword_268CF1448;
  if (!qword_268CF1448)
  {
    sub_2410A45D8(255);
    sub_2410A42D0(&qword_268CF1450, sub_2410A4600, (void (*)(void))sub_2410A483C, (void (*)(void))sub_2410A3BD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1448);
  }
  return result;
}

uint64_t sub_2410A483C()
{
  return sub_24109B77C(&qword_268CF1458, 255, (void (*)(uint64_t))sub_2410A46B8);
}

void sub_2410A4874()
{
  if (!qword_268CF1460)
  {
    sub_241160020();
    sub_24109B77C(&qword_268CF1468, 255, MEMORY[0x263F19048]);
    unint64_t v0 = sub_24115FFC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1460);
    }
  }
}

void sub_2410A490C(uint64_t a1)
{
}

void sub_2410A4934(uint64_t a1)
{
}

void sub_2410A495C(uint64_t a1)
{
}

uint64_t sub_2410A497C(uint64_t a1, uint64_t a2)
{
  return sub_2410A5A18(a1, a2, (uint64_t (*)(void))sub_2410A3F58);
}

void sub_2410A4994()
{
  if (!qword_268CF1498)
  {
    sub_241160010();
    sub_24109B77C(&qword_268CF14A0, 255, MEMORY[0x263F19028]);
    unint64_t v0 = sub_24115FFE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1498);
    }
  }
}

void sub_2410A4A2C()
{
  if (!qword_268CF14A8)
  {
    sub_2410A4994();
    sub_24109B77C(&qword_268CF14B0, 255, (void (*)(uint64_t))sub_2410A4994);
    unint64_t v0 = sub_24115FFA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF14A8);
    }
  }
}

void sub_2410A4AE0()
{
  if (!qword_268CF14B8)
  {
    sub_2410A4A2C();
    sub_2410A4B74(255, &qword_268CF14C0, MEMORY[0x263F1BA08], MEMORY[0x263F1BA00], MEMORY[0x263F19B10]);
    unint64_t v0 = sub_241160000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF14B8);
    }
  }
}

void sub_2410A4B74(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_2410A4BC4(uint64_t a1, uint64_t a2)
{
  sub_2410A44F4(0, &qword_268CF1408, sub_2410A44C0, (void (*)(uint64_t))sub_2410A4874);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410A4C58(uint64_t a1, uint64_t a2)
{
  sub_2410A44F4(0, &qword_268CF1408, sub_2410A44C0, (void (*)(uint64_t))sub_2410A4874);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410A4CEC(uint64_t a1)
{
  sub_2410A44F4(0, &qword_268CF1408, sub_2410A44C0, (void (*)(uint64_t))sub_2410A4874);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2410A4D78(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_2410981B0(0, a3, 255, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_2410A4DE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_2410A4E4C()
{
  unint64_t result = qword_26B007430;
  if (!qword_26B007430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B007430);
  }
  return result;
}

unint64_t sub_2410A4EA0()
{
  unint64_t result = qword_268CF14D0;
  if (!qword_268CF14D0)
  {
    sub_2410A4DE4(255, &qword_268CF14C8, (uint64_t (*)(void))sub_2410A4E4C, MEMORY[0x263F8D6C8], MEMORY[0x263F068B8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF14D0);
  }
  return result;
}

void sub_2410A4F30(uint64_t a1)
{
}

void sub_2410A4F68()
{
  if (!qword_268CF14E8)
  {
    sub_2410A4FDC(255);
    sub_2410A5084(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268CF14E8);
    }
  }
}

void sub_2410A4FDC(uint64_t a1)
{
}

void sub_2410A5004()
{
  if (!qword_268CF14F8)
  {
    sub_2411603B0();
    sub_24109BDA4(255, &qword_268CF1500, &qword_268CF1508, MEMORY[0x263F1B440]);
    unint64_t v0 = sub_241160000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF14F8);
    }
  }
}

void sub_2410A5084(uint64_t a1)
{
}

void sub_2410A50AC()
{
  if (!qword_268CF1518)
  {
    sub_2410A416C(255, &qword_268CF1520, (uint64_t (*)(uint64_t))sub_2410A5150, (uint64_t (*)(void))sub_2410A5400, MEMORY[0x263F1B640]);
    unint64_t v0 = sub_241160000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1518);
    }
  }
}

void sub_2410A5150()
{
  if (!qword_268CF1528)
  {
    sub_2410A522C(255, (unint64_t *)&qword_26B005D98, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_2410A5278(255, &qword_268CF1530, (void (*)(uint64_t))sub_2410A52DC);
    sub_2410A5384();
    unint64_t v0 = sub_2411603D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1528);
    }
  }
}

void sub_2410A522C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_2410A5278(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241160000();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2410A52DC()
{
  if (!qword_268CF1538)
  {
    sub_24109BCA0();
    sub_2410A42D0((unint64_t *)&qword_268CF13E8, (void (*)(uint64_t))sub_24109BCA0, (void (*)(void))sub_2410A435C, (void (*)(void))sub_2410A4450);
    unint64_t v0 = sub_241160380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1538);
    }
  }
}

unint64_t sub_2410A5384()
{
  unint64_t result = qword_268CF1540;
  if (!qword_268CF1540)
  {
    sub_2410A522C(255, (unint64_t *)&qword_26B005D98, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1540);
  }
  return result;
}

unint64_t sub_2410A5400()
{
  unint64_t result = qword_268CF1548;
  if (!qword_268CF1548)
  {
    sub_2410A5150();
    sub_2410A5470();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1548);
  }
  return result;
}

unint64_t sub_2410A5470()
{
  unint64_t result = qword_268CF1550;
  if (!qword_268CF1550)
  {
    sub_2410A5278(255, &qword_268CF1530, (void (*)(uint64_t))sub_2410A52DC);
    sub_24109B77C(&qword_268CF1558, 255, (void (*)(uint64_t))sub_2410A52DC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1550);
  }
  return result;
}

uint64_t sub_2410A5540@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_241160060();
  *a1 = result;
  return result;
}

uint64_t sub_2410A556C()
{
  return sub_241160070();
}

void sub_2410A5598(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24115FFF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2410A5604()
{
  uint64_t v1 = (int *)(type metadata accessor for MedicationHighlightDaysOfWeekRow(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_24115CCC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  uint64_t v6 = v0 + v3 + v1[8];
  sub_2410981B0(0, &qword_26B004050, 255, MEMORY[0x263F19A00], MEMORY[0x263F185C8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_241160120();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

double sub_2410A577C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for MedicationHighlightDaysOfWeekRow(0);

  *(void *)&double result = sub_24109CFD0(a1, a2).n128_u64[0];
  return result;
}

uint64_t sub_2410A57FC(uint64_t a1)
{
  sub_2410A416C(0, &qword_268CF1520, (uint64_t (*)(uint64_t))sub_2410A5150, (uint64_t (*)(void))sub_2410A5400, MEMORY[0x263F1B640]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2410A589C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2410A58FC(uint64_t a1, uint64_t a2)
{
  sub_2410A416C(0, &qword_268CF1520, (uint64_t (*)(uint64_t))sub_2410A5150, (uint64_t (*)(void))sub_2410A5400, MEMORY[0x263F1B640]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410A59A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_2410A5A00(uint64_t a1, uint64_t a2)
{
  return sub_2410A5A18(a1, a2, (uint64_t (*)(void))sub_2410A5004);
}

uint64_t sub_2410A5A18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2410A5A80()
{
  return sub_2410A42D0(&qword_268CF1568, sub_2410A495C, (void (*)(void))sub_2410A5ADC, (void (*)(void))sub_2410A3BD0);
}

uint64_t sub_2410A5ADC()
{
  return sub_2410A3AA4(&qword_268CF1570, sub_2410A4934, (void (*)(void))sub_2410A5B18);
}

unint64_t sub_2410A5B18()
{
  unint64_t result = qword_268CF1578;
  if (!qword_268CF1578)
  {
    sub_2410A490C(255);
    sub_24109B77C(&qword_268CF1580, 255, (void (*)(uint64_t))sub_2410A3F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1578);
  }
  return result;
}

uint64_t sub_2410A5BC4()
{
  return sub_24109B77C(&qword_268CF1588, 255, (void (*)(uint64_t))sub_2410A5C10);
}

void sub_2410A5C10()
{
  if (!qword_268CF1590)
  {
    sub_2410A4F30(255);
    sub_24109B77C(&qword_268CF1598, 255, sub_2410A4F30);
    unint64_t v0 = sub_241160380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1590);
    }
  }
}

uint64_t sub_2410A5CB0()
{
  uint64_t v0 = sub_2411605E0();
  sub_2410B1068(v0, qword_268CF28C0);
  sub_24103B878(v0, (uint64_t)qword_268CF28C0);
  sub_24115C720();
  return sub_2411605A0();
}

uint64_t sub_2410A5D04()
{
  uint64_t v22 = sub_24115CB50();
  uint64_t v1 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410AFD80(v0, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v24 = 0;
      unint64_t v25 = 0xE000000000000000;
      sub_2411615F0();
      swift_bridgeObjectRelease();
      uint64_t v24 = 60;
      unint64_t v25 = 0xE100000000000000;
      uint64_t v23 = v4;
      sub_2410AFDE4();
      sub_241160760();
      sub_241160860();
      swift_bridgeObjectRelease();
      sub_241160860();
      sub_2410B10CC(&qword_26B006938, MEMORY[0x263F07508]);
      sub_241160BC0();
      sub_241160860();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 2u:
      sub_2410AFE20(0, &qword_268CF06D8, &qword_26B006F18, MEMORY[0x263F44C90]);
      swift_bridgeObjectRelease();
      uint64_t v24 = 0;
      unint64_t v25 = 0xE000000000000000;
      sub_2411615F0();
      swift_bridgeObjectRelease();
      uint64_t v24 = 60;
      unint64_t v25 = 0xE100000000000000;
      uint64_t v23 = v4;
      sub_2410AFDE4();
      sub_241160760();
      sub_241160860();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v24 = 0;
      unint64_t v25 = 0xE000000000000000;
      sub_2411615F0();
      swift_bridgeObjectRelease();
      uint64_t v24 = 60;
      unint64_t v25 = 0xE100000000000000;
      uint64_t v23 = v4;
      sub_2410AFDE4();
      sub_241160760();
      sub_241160860();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 4u:
      uint64_t v24 = 0;
      unint64_t v25 = 0xE000000000000000;
      sub_2411615F0();
      swift_bridgeObjectRelease();
      uint64_t v24 = 60;
      unint64_t v25 = 0xE100000000000000;
      uint64_t v23 = v4;
      sub_2410AFDE4();
      sub_241160760();
      sub_241160860();
      swift_bridgeObjectRelease();
LABEL_17:
      sub_241160860();
      return v24;
    default:
      sub_2410AFE20(0, &qword_268CF06E0, &qword_26B006F10, MEMORY[0x263F44C70]);
      unint64_t v8 = *(void *)&v6[*(int *)(v7 + 48)];
      uint64_t v24 = 0;
      unint64_t v25 = 0xE000000000000000;
      sub_2411615F0();
      swift_bridgeObjectRelease();
      uint64_t v24 = 60;
      unint64_t v25 = 0xE100000000000000;
      uint64_t v23 = v4;
      sub_2410AFDE4();
      sub_241160760();
      sub_241160860();
      swift_bridgeObjectRelease();
      sub_241160860();
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_2411616E0();
        swift_bridgeObjectRelease();
        if (v9) {
          goto LABEL_4;
        }
LABEL_19:
        swift_bridgeObjectRelease();
        uint64_t v11 = MEMORY[0x263F8EE78];
        goto LABEL_20;
      }
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v9) {
        goto LABEL_19;
      }
LABEL_4:
      unint64_t v20 = v6;
      uint64_t v23 = MEMORY[0x263F8EE78];
      sub_2410E58BC(0, v9 & ~(v9 >> 63), 0);
      if (v9 < 0)
      {
        __break(1u);
        JUMPOUT(0x2410A635CLL);
      }
      uint64_t v10 = 0;
      uint64_t v11 = v23;
      unint64_t v21 = v8 & 0xC000000000000001;
      unint64_t v12 = v8;
      do
      {
        if (v21) {
          MEMORY[0x245617450](v10, v8);
        }
        else {
          swift_retain();
        }
        uint64_t v13 = (void *)sub_24115F150();
        id v14 = objc_msgSend(v13, sel_UUID);

        sub_24115CB30();
        swift_release();

        uint64_t v23 = v11;
        unint64_t v16 = *(void *)(v11 + 16);
        unint64_t v15 = *(void *)(v11 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_2410E58BC(v15 > 1, v16 + 1, 1);
          uint64_t v11 = v23;
        }
        ++v10;
        *(void *)(v11 + 16) = v16 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v11+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v16, v3, v22);
        unint64_t v8 = v12;
      }
      while (v9 != v10);
      swift_bridgeObjectRelease();
      uint64_t v6 = v20;
LABEL_20:
      MEMORY[0x2456167F0](v11, v22);
      sub_241160860();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_21:
      sub_241160860();
      uint64_t v17 = v24;
      uint64_t v18 = sub_2411605E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v6, v18);
      return v17;
  }
}

uint64_t sub_2410A6374(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_15:
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_2411616E0();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x245617450](v4, a1);
      }
      else {
        swift_retain();
      }
      uint64_t v6 = (void *)sub_24115F150();
      id v7 = objc_msgSend(v6, sel_medicationIdentifier);

      uint64_t v8 = sub_241160730();
      uint64_t v10 = v9;
      swift_release();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_241051F68(0, v5[2] + 1, 1, v5);
      }
      unint64_t v12 = v5[2];
      unint64_t v11 = v5[3];
      if (v12 >= v11 >> 1) {
        uint64_t v5 = sub_241051F68((void *)(v11 > 1), v12 + 1, 1, v5);
      }
      ++v4;
      v5[2] = v12 + 1;
      uint64_t v13 = &v5[2 * v12];
      void v13[4] = v8;
      v13[5] = v10;
    }
    while (v2 != v4);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_2410A6508(unint64_t a1)
{
  uint64_t v36 = sub_24115F2E0();
  uint64_t v29 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2411616E0();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 0;
      unint64_t v30 = a1 & 0xC000000000000001;
      unint64_t v26 = a1 + 32;
      uint64_t v35 = v29 + 16;
      uint64_t v6 = (void (**)(char *, uint64_t))(v29 + 8);
      uint64_t v7 = MEMORY[0x263F8EE78];
      uint64_t v27 = v4;
      unint64_t v28 = a1;
      while (1)
      {
        if (v30)
        {
          uint64_t v8 = MEMORY[0x245617450](v5, a1);
          BOOL v9 = __OFADD__(v5++, 1);
          if (v9) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(v26 + 8 * v5);
          swift_retain();
          BOOL v9 = __OFADD__(v5++, 1);
          if (v9)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        uint64_t v10 = sub_24115F220();
        uint64_t v11 = *(void *)(v10 + 16);
        if (v11)
        {
          uint64_t v32 = v8;
          uint64_t v33 = v7;
          uint64_t v34 = v5;
          unint64_t v12 = v10 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
          uint64_t v37 = *(void *)(v29 + 72);
          uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v29 + 16);
          uint64_t v31 = v10;
          swift_bridgeObjectRetain();
          id v14 = (void *)MEMORY[0x263F8EE78];
          do
          {
            uint64_t v15 = v36;
            v13(v3, v12, v36);
            unint64_t v16 = (void *)sub_24115F2C0();
            id v17 = objc_msgSend(v16, sel_medicationIdentifier);

            uint64_t v18 = sub_241160730();
            uint64_t v20 = v19;

            (*v6)(v3, v15);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v14 = sub_241051F68(0, v14[2] + 1, 1, v14);
            }
            unint64_t v22 = v14[2];
            unint64_t v21 = v14[3];
            if (v22 >= v21 >> 1) {
              id v14 = sub_241051F68((void *)(v21 > 1), v22 + 1, 1, v14);
            }
            void v14[2] = v22 + 1;
            uint64_t v23 = &v14[2 * v22];
            v23[4] = v18;
            void v23[5] = v20;
            v12 += v37;
            --v11;
          }
          while (v11);
          swift_bridgeObjectRelease_n();
          uint64_t v4 = v27;
          a1 = v28;
          uint64_t v7 = v33;
          uint64_t v5 = v34;
        }
        else
        {
          swift_bridgeObjectRelease();
          id v14 = (void *)MEMORY[0x263F8EE78];
        }
        uint64_t v38 = v7;
        swift_bridgeObjectRetain();
        sub_2410CF750((uint64_t)v14);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v7 = v38;
        if (v5 == v4)
        {
          swift_bridgeObjectRelease();
          return v7;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2410A682C()
{
  return 60;
}

uint64_t sub_2410A689C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(void *)(v3
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventObserverTask) = 0;
  *(void *)(v3
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserverTask) = 0;
  *(void *)(v3
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationObserverTask) = 0;
  uint64_t v6 = v3
     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_gregorianCalendar;
  uint64_t v7 = sub_24115CCC0();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  sub_24115ECC0();
  id v9 = a1;
  *(void *)(v3
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventDataSource) = sub_24115ECB0();
  sub_24115F1A0();
  id v10 = v9;
  *(void *)(v3
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationDataSource) = sub_24115F190();
  id v11 = objc_allocWithZone((Class)sub_24115EC50());
  uint64_t v12 = sub_24115EC40();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  *(void *)(v3
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserver) = v12;
  return v3;
}

uint64_t sub_2410A69F8()
{
  if (*(void *)(v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventObserverTask))
  {
    sub_24102A354();
    swift_retain();
    sub_241160AC0();
    swift_release();
  }
  if (*(void *)(v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserverTask))
  {
    sub_24102A354();
    swift_retain();
    sub_241160AC0();
    swift_release();
  }
  if (*(void *)(v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationObserverTask))
  {
    sub_24102A354();
    swift_retain();
    sub_241160AC0();
    swift_release();
  }
  uint64_t v1 = v0
     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_gregorianCalendar;
  uint64_t v2 = sub_24115CCC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserver));
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_2410A6B84()
{
  sub_2410A69F8();

  return swift_deallocClassInstance();
}

uint64_t sub_2410A6BDC()
{
  return type metadata accessor for MedicationDaySummaryViewModelProviderDataSource(0);
}

uint64_t type metadata accessor for MedicationDaySummaryViewModelProviderDataSource(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B006D50);
}

uint64_t sub_2410A6C04()
{
  uint64_t result = sub_24115CCC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2410A6CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24115CB50();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  id v10 = (char *)&v39 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v46 = (char *)&v39 - v11;
  unint64_t v12 = *(void *)(a2 + 16);
  if (!v12) {
    return 1;
  }
  unint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return 1;
  }
  if (v12 >= v13) {
    uint64_t v14 = a1;
  }
  else {
    uint64_t v14 = a2;
  }
  if (v12 >= v13) {
    a1 = a2;
  }
  uint64_t v15 = *(void *)(v14 + 56);
  uint64_t v41 = v14 + 56;
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  uint64_t v39 = ~v16;
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v40 = (unint64_t)(63 - v16) >> 6;
  uint64_t v42 = v47 + 32;
  uint64_t v50 = a1 + 56;
  uint64_t v51 = v47 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v45 = v14;
  swift_bridgeObjectRetain();
  uint64_t v52 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v49)
  {
    unint64_t v43 = v18;
    uint64_t v44 = i;
    if (!v18) {
      break;
    }
    uint64_t v48 = (v18 - 1) & v18;
    int64_t v49 = i;
    unint64_t v22 = __clz(__rbit64(v18)) | (i << 6);
LABEL_29:
    uint64_t v27 = v46;
    uint64_t v28 = v47;
    uint64_t v29 = *(void *)(v47 + 72);
    unint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v47 + 16);
    v30(v46, *(void *)(v45 + 48) + v29 * v22, v4);
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v10, v27, v4);
    if (*(void *)(v52 + 16))
    {
      uint64_t v31 = v52;
      sub_2410B10CC(&qword_26B006938, MEMORY[0x263F07508]);
      uint64_t v32 = sub_241160650();
      uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
      unint64_t v34 = v32 & ~v33;
      if ((*(void *)(v50 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
      {
        uint64_t v35 = ~v33;
        while (1)
        {
          v30(v7, *(void *)(v52 + 48) + v34 * v29, v4);
          sub_2410B10CC(&qword_268CF15D8, MEMORY[0x263F07508]);
          char v36 = sub_2411606E0();
          uint64_t v37 = (uint64_t (*)(char *, uint64_t))*v19;
          (*v19)(v7, v4);
          if (v36) {
            break;
          }
          unint64_t v34 = (v34 + 1) & v35;
          if (((*(void *)(v50 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        v37(v10, v4);
        uint64_t v38 = 0;
        goto LABEL_37;
      }
    }
LABEL_12:
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v19)(v10, v4);
    unint64_t v18 = v48;
  }
  int64_t v23 = i + 1;
  if (__OFADD__(i, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v23 >= v40) {
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v41 + 8 * v23);
  int64_t v25 = i + 1;
  if (v24) {
    goto LABEL_28;
  }
  int64_t v25 = i + 2;
  if (i + 2 >= v40) {
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v41 + 8 * v25);
  if (v24) {
    goto LABEL_28;
  }
  int64_t v25 = i + 3;
  if (i + 3 >= v40) {
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v41 + 8 * v25);
  if (v24)
  {
LABEL_28:
    uint64_t v48 = (v24 - 1) & v24;
    int64_t v49 = v25;
    unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
    goto LABEL_29;
  }
  uint64_t v26 = i + 4;
  if (i + 4 >= v40)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    uint64_t v38 = 1;
LABEL_37:
    sub_24101E92C();
    return v38;
  }
  unint64_t v24 = *(void *)(v41 + 8 * v26);
  if (v24)
  {
    int64_t v25 = i + 4;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v25 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v25 >= v40) {
      goto LABEL_39;
    }
    unint64_t v24 = *(void *)(v41 + 8 * v25);
    ++v26;
    if (v24) {
      goto LABEL_28;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2410A7148(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_2410B17E0(0, &qword_26B006F58, MEMORY[0x263F8F688]);
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  sub_24115CB10();
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  uint64_t v5 = sub_24115C810();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2410A72C0, 0, 0);
}

uint64_t sub_2410A72C0()
{
  uint64_t v1 = v0[4];
  sub_2411605D0();
  sub_2410346F4(0);
  sub_2411605D0();
  sub_24115C7D0();
  if (*(void *)(v1
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventObserverTask))
  {
    sub_24102A354();
    swift_retain();
    sub_241160AC0();
    swift_release();
  }
  uint64_t v2 = v0[4];
  if (*(void *)(v2
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserverTask))
  {
    sub_24102A354();
    swift_retain();
    sub_241160AC0();
    swift_release();
    uint64_t v2 = v0[4];
  }
  if (*(void *)(v2
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationObserverTask))
  {
    sub_24102A354();
    swift_retain();
    sub_241160AC0();
    swift_release();
  }
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v12 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v7 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v4;
  sub_2410AFEBC(0, &qword_26B006F08, type metadata accessor for MedicationDaySummaryViewModelChange, MEMORY[0x263F8D488]);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, *MEMORY[0x263F8F680], v7);
  sub_241160B30();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v12);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_2410A7588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v58 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v49 - v7;
  uint64_t v53 = sub_24115C810();
  uint64_t v9 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v52 = v10;
  uint64_t v54 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410AFEBC(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v49 - v12;
  swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v56 = a1;
  sub_241160AE0();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  id v57 = v13;
  if (Strong)
  {
    uint64_t v51 = Strong;
    uint64_t v15 = sub_241160A70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 1, 1, v15);
    uint64_t v50 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v16 = v54;
    uint64_t v17 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v54, v55, v53);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v56, v5);
    unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v19 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v20 = v6;
    uint64_t v21 = v5;
    unint64_t v22 = v8;
    unint64_t v23 = (v52 + v19 + v18) & ~v19;
    unint64_t v24 = (char *)swift_allocObject();
    *((void *)v24 + 2) = 0;
    *((void *)v24 + 3) = 0;
    *((void *)v24 + 4) = v50;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v24[v18], v16, v17);
    int64_t v25 = &v24[v23];
    uint64_t v8 = v22;
    uint64_t v5 = v21;
    uint64_t v6 = v20;
    uint64_t v13 = v57;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v25, v8, v5);
    uint64_t v26 = sub_24103490C((uint64_t)v13, (uint64_t)&unk_268CF15F0, (uint64_t)v24);
    *(void *)(v51
              + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventObserverTask) = v26;
    swift_release();
    swift_release();
  }
  uint64_t v27 = v54;
  uint64_t v28 = v55;
  swift_beginAccess();
  uint64_t v29 = swift_weakLoadStrong();
  if (v29)
  {
    uint64_t v51 = v29;
    uint64_t v30 = sub_241160A70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v13, 1, 1, v30);
    uint64_t v50 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v31 = v28;
    uint64_t v32 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v27, v31, v53);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v56, v5);
    unint64_t v33 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v34 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v35 = v6;
    uint64_t v36 = v5;
    uint64_t v37 = v8;
    unint64_t v38 = (v52 + v34 + v33) & ~v34;
    uint64_t v39 = (char *)swift_allocObject();
    *((void *)v39 + 2) = 0;
    *((void *)v39 + 3) = 0;
    *((void *)v39 + 4) = v50;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v39[v33], v27, v32);
    int64_t v40 = &v39[v38];
    uint64_t v8 = v37;
    uint64_t v5 = v36;
    uint64_t v6 = v35;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v40, v8, v5);
    uint64_t v41 = sub_24103490C((uint64_t)v57, (uint64_t)&unk_268CF1600, (uint64_t)v39);
    *(void *)(v51
              + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserverTask) = v41;
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v43 = result;
    uint64_t v44 = sub_241160A70();
    uint64_t v45 = (uint64_t)v57;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v57, 1, 1, v44);
    uint64_t v46 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v56, v5);
    unint64_t v47 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v48 = (char *)swift_allocObject();
    *((void *)v48 + 2) = 0;
    *((void *)v48 + 3) = 0;
    *((void *)v48 + 4) = v46;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v48[v47], v8, v5);
    *(void *)(v43
              + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationObserverTask) = sub_24103490C(v45, (uint64_t)&unk_268CF1610, (uint64_t)v48);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2410A7D8C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (*(void *)(Strong
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventObserverTask))
    {
      swift_retain();
      swift_release();
      sub_24102A354();
      sub_241160AC0();
    }
    swift_release();
  }
  swift_beginAccess();
  uint64_t v1 = swift_weakLoadStrong();
  if (v1)
  {
    if (*(void *)(v1
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserverTask))
    {
      swift_retain();
      swift_release();
      sub_24102A354();
      sub_241160AC0();
    }
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(void *)(result
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationObserverTask))
    {
      swift_retain();
      swift_release();
      sub_24102A354();
      sub_241160AC0();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2410A7F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  sub_2410B17E0(0, &qword_26B006F50, MEMORY[0x263F8F670]);
  v6[18] = v7;
  v6[19] = *(void *)(v7 - 8);
  v6[20] = swift_task_alloc();
  uint64_t v8 = sub_24115CB50();
  v6[21] = v8;
  v6[22] = *(void *)(v8 - 8);
  v6[23] = swift_task_alloc();
  unsigned char v6[24] = swift_task_alloc();
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  sub_2410B1C58(0);
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  sub_2410B1888(0, &qword_26B006ED8, (unint64_t *)&unk_26B007368, 0x263F0A6B8, MEMORY[0x263F09020]);
  v6[29] = v9;
  v6[30] = *(void *)(v9 - 8);
  v6[31] = swift_task_alloc();
  sub_2410B1C8C();
  v6[32] = swift_task_alloc();
  sub_2410B1888(0, &qword_26B006EF0, (unint64_t *)&unk_26B007368, 0x263F0A6B8, MEMORY[0x263F09038]);
  v6[33] = v10;
  v6[34] = *(void *)(v10 - 8);
  v6[35] = swift_task_alloc();
  sub_2410B1888(0, &qword_26B006EE8, (unint64_t *)&unk_26B007368, 0x263F0A6B8, MEMORY[0x263F09028]);
  v6[36] = v11;
  v6[37] = *(void *)(v11 - 8);
  v6[38] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2410A82B4, 0, 0);
}

uint64_t sub_2410A82B4()
{
  if ((sub_241160AD0() & 1) != 0 || (swift_beginAccess(), (uint64_t Strong = swift_weakLoadStrong()) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    v0[39] = *(void *)(Strong
                       + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_doseEventDataSource);
    swift_retain();
    swift_release();
    uint64_t v2 = MEMORY[0x263F44E28];
    uint64_t v3 = (int)*MEMORY[0x263F44E28];
    uint64_t v4 = (void *)swift_task_alloc();
    v0[40] = v4;
    void *v4 = v0;
    v4[1] = sub_2410A84C8;
    uint64_t v5 = v0[35];
    uint64_t v6 = v0[16];
    return ((uint64_t (*)(uint64_t, uint64_t))(v3 + v2))(v5, v6);
  }
}

uint64_t sub_2410A84C8()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2410A991C;
  }
  else {
    uint64_t v2 = sub_2410A8608;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2410A8608()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[34];
  uint64_t v2 = v0[35];
  uint64_t v4 = v0[33];
  sub_241160520();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_beginAccess();
  unint64_t v5 = sub_2410B1D10();
  uint64_t v6 = (void *)swift_task_alloc();
  v1[42] = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_2410A873C;
  uint64_t v7 = v1[36];
  uint64_t v8 = v1[32];
  return MEMORY[0x270FA1E80](v8, v7, v5);
}

uint64_t sub_2410A873C()
{
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2410A926C;
  }
  else {
    uint64_t v2 = sub_2410A887C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2410A887C()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[30];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[37] + 8))(v0[38], v0[36]);
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[31], v1, v2);
  uint64_t Strong = swift_weakLoadStrong();
  v0[44] = Strong;
  if (!Strong)
  {
LABEL_6:
    uint64_t v5 = v0[38];
    uint64_t v6 = v0[36];
    uint64_t v7 = v0[37];
    uint64_t v9 = v0[30];
    uint64_t v8 = v0[31];
    uint64_t v10 = v0[29];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    goto LABEL_7;
  }
  if (sub_241160AD0())
  {
    swift_release();
    goto LABEL_6;
  }
  unint64_t v13 = sub_241160510();
  unint64_t v14 = v13;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_2411616E0();
    if (v15) {
      goto LABEL_12;
    }
LABEL_26:
    unint64_t v17 = MEMORY[0x263F8EE78];
    goto LABEL_27;
  }
  uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v15) {
    goto LABEL_26;
  }
LABEL_12:
  if (v15 < 1) {
    __break(1u);
  }
  uint64_t v16 = 0;
  unint64_t v77 = v14 & 0xC000000000000001;
  unint64_t v17 = MEMORY[0x263F8EE78];
  unint64_t v81 = v14;
  do
  {
    unint64_t v75 = v17;
    if (v77) {
      id v18 = (id)MEMORY[0x245617450](v16, v14);
    }
    else {
      id v18 = *(id *)(v14 + 8 * v16 + 32);
    }
    uint64_t v19 = v18;
    uint64_t v20 = v0[27];
    uint64_t v21 = v0[25];
    uint64_t v23 = v0[21];
    uint64_t v22 = v0[22];
    id v24 = objc_msgSend(v18, sel_UUID);
    sub_24115CB30();

    int64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32);
    v25(v20, v21, v23);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v23);

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v23) == 1)
    {
      sub_2410B05EC(v0[27], (uint64_t (*)(void))sub_2410B1C58);
      unint64_t v17 = v75;
      unint64_t v14 = v81;
    }
    else
    {
      uint64_t v26 = v0[26];
      uint64_t v27 = v0[24];
      uint64_t v28 = v0[21];
      v25(v26, v0[27], v28);
      v25(v27, v26, v28);
      unint64_t v17 = v75;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_241052B44(0, *(void *)(v75 + 16) + 1, 1, v75);
      }
      unint64_t v14 = v81;
      unint64_t v30 = *(void *)(v17 + 16);
      unint64_t v29 = *(void *)(v17 + 24);
      if (v30 >= v29 >> 1) {
        unint64_t v17 = sub_241052B44(v29 > 1, v30 + 1, 1, v17);
      }
      uint64_t v31 = v0[24];
      uint64_t v32 = v0[21];
      uint64_t v33 = v0[22];
      *(void *)(v17 + 16) = v30 + 1;
      v25(v17+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v30, v31, v32);
    }
    ++v16;
  }
  while (v15 != v16);
LABEL_27:
  swift_bridgeObjectRelease_n();
  sub_2410B10CC(&qword_26B006938, MEMORY[0x263F07508]);
  uint64_t v34 = sub_241160BD0();
  uint64_t v35 = v0[22];
  uint64_t v72 = *(void *)(v17 + 16);
  if (v72)
  {
    uint64_t v36 = 0;
    unint64_t v71 = v17 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
    uint64_t v78 = *(void *)(v35 + 72);
    uint64_t v82 = *(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 16);
    while (1)
    {
      uint64_t v42 = v0[28];
      uint64_t v43 = v0[21];
      uint64_t v44 = v0[22];
      v82(v42, v71 + v36 * v78, v43);
      uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
      v70(v42, 0, 1, v43);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43) == 1) {
        break;
      }
      uint64_t v73 = v36;
      (*(void (**)(void, void, void))(v0[22] + 32))(v0[23], v0[28], v0[21]);
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_241160650();
      uint64_t v46 = -1 << *(unsigned char *)(v34 + 32);
      unint64_t v47 = v45 & ~v46;
      uint64_t v48 = v34;
      uint64_t v49 = v34 + 56;
      if ((*(void *)(v34 + 56 + ((v47 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v47))
      {
        uint64_t v50 = ~v46;
        while (1)
        {
          uint64_t v51 = v0[25];
          uint64_t v52 = v0[22];
          uint64_t v53 = v0[21];
          v82(v51, *(void *)(v48 + 48) + v47 * v78, v53);
          sub_2410B10CC(&qword_268CF15D8, MEMORY[0x263F07508]);
          char v54 = sub_2411606E0();
          uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
          v55(v51, v53);
          if (v54) {
            break;
          }
          unint64_t v47 = (v47 + 1) & v50;
          if (((*(void *)(v49 + ((v47 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v47) & 1) == 0) {
            goto LABEL_29;
          }
        }
        uint64_t v56 = v0[23];
        uint64_t v57 = v0[21];
        uint64_t v34 = v48;
        swift_bridgeObjectRelease();
        v55(v56, v57);
      }
      else
      {
LABEL_29:
        uint64_t v37 = v0[25];
        uint64_t v38 = v0[22];
        unint64_t v39 = v0[23];
        uint64_t v40 = v0[21];
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v82(v37, v39, v40);
        sub_2410DD5B8(v37, v47, isUniquelyReferenced_nonNull_native);
        uint64_t v34 = v48;
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v38 + 8))(v39, v40);
      }
      uint64_t v36 = v73 + 1;
      if (v73 + 1 == v72)
      {
        v70(v0[28], 1, 1, v0[21]);
        break;
      }
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v35 + 56))(v0[28], 1, 1, v0[21]);
  }
  v0[45] = v34;
  swift_bridgeObjectRelease();
  unint64_t v58 = sub_241160500();
  uint64_t v59 = sub_2410E4FE8(v58);
  v0[46] = v59;
  swift_bridgeObjectRelease();
  if (!v59)
  {
    uint64_t v63 = v0[37];
    uint64_t v80 = v0[36];
    uint64_t v83 = v0[38];
    uint64_t v64 = v0[30];
    uint64_t v76 = v0[29];
    uint64_t v79 = v0[31];
    uint64_t v65 = v0[19];
    uint64_t v66 = v0[20];
    uint64_t v74 = v0[18];
    sub_2410AFEBC(0, &qword_26B0070A8, type metadata accessor for MedicationDaySummaryViewModelChange, MEMORY[0x263F8E0F8]);
    uint64_t v67 = *(void *)(type metadata accessor for MedicationDaySummaryViewModelChange(0) - 8);
    unint64_t v68 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_24116B370;
    *(void *)(v69 + v68) = v34;
    swift_storeEnumTagMultiPayload();
    v0[13] = v69;
    sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
    sub_241160AF0();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v66, v74);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v79, v76);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v83, v80);
    goto LABEL_7;
  }
  uint64_t v60 = (void *)swift_task_alloc();
  v0[47] = v60;
  *uint64_t v60 = v0;
  v60[1] = sub_2410A94E0;
  uint64_t v61 = MEMORY[0x263F8EE78];
  uint64_t v62 = MEMORY[0x263F8EE78];
  return sub_2410A9CAC(v59, v61, v62);
}

uint64_t sub_2410A926C()
{
  *(void *)(v0 + 96) = *(void *)(v0 + 344);
  sub_24102A354();
  swift_willThrowTypedImpl();
  return MEMORY[0x270FA2498](sub_2410A9320, 0, 0);
}

uint64_t sub_2410A9320()
{
  uint64_t v1 = v0[38];
  uint64_t v2 = v0[36];
  uint64_t v3 = v0[37];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = (void *)v0[43];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    v0[11] = v4;
    sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
    sub_241160B00();
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_2410A94E0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 384) = a1;
  *(void *)(v3 + 392) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_2410A9AC0;
  }
  else
  {
    uint64_t v4 = sub_2410A9664;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2410A9664()
{
  uint64_t v1 = v0[45];
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = v0[48];
    sub_2410AFEBC(0, &qword_26B0070A8, type metadata accessor for MedicationDaySummaryViewModelChange, MEMORY[0x263F8E0F8]);
    uint64_t v3 = *(void *)(type metadata accessor for MedicationDaySummaryViewModelChange(0) - 8);
    unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_24116B370;
    *(void *)(v5 + v4) = v1;
    swift_storeEnumTagMultiPayload();
    sub_2410CF574(v5);
    uint64_t v6 = v2;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v0[48];
  }
  uint64_t v8 = v0[30];
  uint64_t v7 = v0[31];
  uint64_t v9 = v0[29];
  if (*(void *)(v6 + 16))
  {
    uint64_t v11 = v0[19];
    uint64_t v10 = v0[20];
    uint64_t v17 = v0[18];
    v0[14] = v6;
    sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
    sub_241160AF0();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v17);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    (*(void (**)(void, void))(v8 + 8))(v0[31], v0[29]);
    swift_release();
    swift_bridgeObjectRelease();
  }
  unint64_t v12 = sub_2410B1D10();
  unint64_t v13 = (void *)swift_task_alloc();
  v0[42] = v13;
  *unint64_t v13 = v0;
  v13[1] = sub_2410A873C;
  uint64_t v14 = v0[36];
  uint64_t v15 = v0[32];
  return MEMORY[0x270FA1E80](v15, v14, v12);
}

uint64_t sub_2410A991C()
{
  swift_release();
  uint64_t v1 = (void *)v0[41];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    v0[11] = v1;
    sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
    sub_241160B00();
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_2410A9AC0()
{
  uint64_t v1 = v0[38];
  uint64_t v2 = v0[36];
  uint64_t v3 = v0[37];
  uint64_t v5 = v0[30];
  uint64_t v4 = v0[31];
  uint64_t v6 = v0[29];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = (void *)v0[49];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    v0[11] = v7;
    sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
    sub_241160B00();
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_2410A9CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[23] = a3;
  v4[24] = v3;
  v4[21] = a1;
  v4[22] = a2;
  v4[25] = *v3;
  uint64_t v5 = sub_24115F790();
  v4[26] = v5;
  v4[27] = *(void *)(v5 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410AFEBC(0, &qword_268CF1620, (uint64_t (*)(uint64_t))sub_2410B197C, MEMORY[0x263F8D8F0]);
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  uint64_t v7 = sub_24115F2E0();
  v4[32] = v7;
  v4[33] = *(void *)(v7 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  v4[36] = v8;
  v4[37] = *(void *)(v8 - 8);
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  unsigned char v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  sub_2410AFEBC(0, &qword_268CF1630, (uint64_t (*)(uint64_t))sub_2410B19A4, v6);
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  uint64_t v9 = sub_24115CCC0();
  v4[44] = v9;
  v4[45] = *(void *)(v9 - 8);
  v4[46] = swift_task_alloc();
  sub_24115CB10();
  v4[47] = swift_task_alloc();
  uint64_t v10 = sub_2411605E0();
  v4[48] = v10;
  v4[49] = *(void *)(v10 - 8);
  v4[50] = swift_task_alloc();
  v4[51] = swift_task_alloc();
  v4[52] = swift_task_alloc();
  v4[53] = swift_task_alloc();
  v4[54] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2410AA07C, 0, 0);
}

uint64_t sub_2410AA07C()
{
  uint64_t v159 = v0;
  *(void *)(v0 + 112) = MEMORY[0x263F8EE80];
  *(void *)(v0 + 120) = MEMORY[0x263F8EE78];
  unint64_t v1 = *(void *)(v0 + 168);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_2411616E0();
    *(void *)(v0 + 440) = v13;
    if (v13) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 440) = v2;
    if (v2)
    {
LABEL_3:
      uint64_t v3 = *(void *)(v0 + 192);
      uint64_t v4 = *(void *)(v0 + 168);
      uint64_t v5 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationDataSource;
      *(void *)(v0 + 448) = OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_gregorianCalendar;
      *(void *)(v0 + 456) = *(void *)(v3 + v5);
      if ((v4 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x245617450](0);
      }
      else {
        id v6 = *(id *)(v4 + 32);
      }
      *(void *)(v0 + 464) = v6;
      *(void *)(v0 + 472) = 1;
      id v7 = objc_msgSend(v6, sel_medicationIdentifier);
      uint64_t v8 = sub_241160730();
      uint64_t v10 = v9;

      *(void *)(v0 + 480) = v10;
      uint64_t v153 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x263F44C80] + MEMORY[0x263F44C80]);
      uint64_t v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 488) = v11;
      *uint64_t v11 = v0;
      v11[1] = sub_2410AB4F4;
LABEL_7:
      return v153(v8, v10);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + 296);
  uint64_t v15 = -1;
  uint64_t v16 = -1 << *(unsigned char *)(MEMORY[0x263F8EE80] + 32);
  if (-v16 < 64) {
    uint64_t v15 = ~(-1 << -(char)v16);
  }
  unint64_t v17 = v15 & *(void *)(MEMORY[0x263F8EE80] + 64);
  uint64_t v150 = *(void *)(v0 + 392);
  int64_t v148 = (unint64_t)(63 - v16) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v154 = 0;
  if (!v17) {
    goto LABEL_16;
  }
LABEL_14:
  unint64_t v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v19 = v18 | (v154 << 6);
LABEL_15:
  uint64_t v20 = *(void *)(v0 + 336);
  uint64_t v21 = MEMORY[0x263F8EE80];
  (*(void (**)(uint64_t, unint64_t, void))(v150 + 16))(v20, *(void *)(MEMORY[0x263F8EE80] + 48) + *(void *)(v150 + 72) * v19, *(void *)(v0 + 384));
  uint64_t v22 = *(void *)(v21 + 56);
  sub_2410B19A4(0);
  uint64_t v24 = v23;
  *(void *)(v20 + *(int *)(v23 + 48)) = *(void *)(v22 + 8 * v19);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v20, 0, 1, v23);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v30 = *(void *)(v0 + 344);
    sub_2410B1AD0(*(void *)(v0 + 336), v30, &qword_268CF1630, (uint64_t (*)(uint64_t))sub_2410B19A4);
    sub_2410B19A4(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v30, 1, v24) == 1) {
      break;
    }
    uint64_t v31 = *(void *)(v0 + 384);
    uint64_t v32 = *(void *)(v0 + 344);
    uint64_t v33 = *(void *)(v0 + 328);
    uint64_t v34 = *(void *)(v32 + *(int *)(v24 + 48));
    sub_2410AFE20(0, &qword_268CF06E0, &qword_26B006F10, MEMORY[0x263F44C70]);
    uint64_t v36 = *(int *)(v35 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 32))(v33, v32, v31);
    *(void *)(v33 + v36) = v34;
    swift_storeEnumTagMultiPayload();
    unint64_t v37 = *(void *)(v0 + 120);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v37 = sub_241051F20(0, *(void *)(v37 + 16) + 1, 1, v37);
    }
    unint64_t v39 = *(void *)(v37 + 16);
    unint64_t v38 = *(void *)(v37 + 24);
    if (v39 >= v38 >> 1) {
      unint64_t v37 = sub_241051F20(v38 > 1, v39 + 1, 1, v37);
    }
    uint64_t v40 = *(void *)(v0 + 328);
    *(void *)(v37 + 16) = v39 + 1;
    uint64_t result = sub_2410B1A6C(v40, v37+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v39);
    *(void *)(v0 + 120) = v37;
    if (v17) {
      goto LABEL_14;
    }
LABEL_16:
    int64_t v25 = v154 + 1;
    if (__OFADD__(v154, 1))
    {
      __break(1u);
      goto LABEL_120;
    }
    if (v25 < v148)
    {
      unint64_t v26 = *(void *)(MEMORY[0x263F8EE80] + 8 * v25 + 64);
      if (v26) {
        goto LABEL_19;
      }
      int64_t v27 = v154 + 2;
      ++v154;
      if (v25 + 1 < v148)
      {
        unint64_t v26 = *(void *)(MEMORY[0x263F8EE80] + 8 * v27 + 64);
        if (v26) {
          goto LABEL_22;
        }
        int64_t v154 = v25 + 1;
        if (v25 + 2 < v148)
        {
          unint64_t v26 = *(void *)(MEMORY[0x263F8EE80] + 8 * (v25 + 2) + 64);
          if (v26)
          {
            v25 += 2;
            goto LABEL_19;
          }
          int64_t v27 = v25 + 3;
          int64_t v154 = v25 + 2;
          if (v25 + 3 < v148)
          {
            unint64_t v26 = *(void *)(MEMORY[0x263F8EE80] + 8 * v27 + 64);
            if (!v26)
            {
              while (1)
              {
                int64_t v25 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  break;
                }
                if (v25 >= v148)
                {
                  int64_t v154 = v148 - 1;
                  goto LABEL_33;
                }
                unint64_t v26 = *(void *)(MEMORY[0x263F8EE80] + 8 * v25 + 64);
                ++v27;
                if (v26) {
                  goto LABEL_19;
                }
              }
              __break(1u);
              goto LABEL_133;
            }
LABEL_22:
            int64_t v25 = v27;
LABEL_19:
            unint64_t v17 = (v26 - 1) & v26;
            unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
            int64_t v154 = v25;
            goto LABEL_15;
          }
        }
      }
    }
LABEL_33:
    uint64_t v28 = *(void *)(v0 + 336);
    sub_2410B19A4(0);
    uint64_t v24 = v29;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
    unint64_t v17 = 0;
  }
  unint64_t v41 = *(void *)(v0 + 176);
  uint64_t v42 = MEMORY[0x263F8EE80];
  swift_release();
  *(void *)(v0 + 104) = v42;
  if (v41 >> 62) {
    goto LABEL_123;
  }
  uint64_t v43 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_43:
  uint64_t v44 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 512) = v43;
  if (!v43)
  {
    swift_bridgeObjectRelease();
    uint64_t v78 = MEMORY[0x263F8EE80];
    if (*(void *)(MEMORY[0x263F8EE80] + 16)) {
      goto LABEL_76;
    }
LABEL_107:
    unint64_t v113 = *(void *)(v0 + 184);
    if (v113 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v135 = sub_2411616E0();
      swift_bridgeObjectRelease();
      if (v135) {
        goto LABEL_109;
      }
    }
    else if (*(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_109:
      sub_24115F770();
      swift_bridgeObjectRetain_n();
      unint64_t v114 = sub_24115F780();
      os_log_type_t v115 = sub_241160D50();
      BOOL v116 = os_log_type_enabled(v114, v115);
      uint64_t v117 = *(void *)(v0 + 232);
      uint64_t v118 = *(void *)(v0 + 208);
      uint64_t v119 = *(void *)(v0 + 216);
      if (v116)
      {
        uint64_t v156 = *(void *)(v0 + 232);
        uint64_t v120 = *(void *)(v0 + 184);
        uint64_t v121 = swift_slowAlloc();
        uint64_t v122 = swift_slowAlloc();
        uint64_t v158 = v122;
        *(_DWORD *)uint64_t v121 = 136315394;
        uint64_t v123 = sub_241161A00();
        *(void *)(v0 + 136) = sub_24101F0A4(v123, v124, &v158);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v121 + 12) = 2080;
        *(void *)(v0 + 144) = v120;
        sub_2410B1888(0, (unint64_t *)&qword_26B007308, (unint64_t *)&qword_26B007360, 0x263F44C18, MEMORY[0x263F8D488]);
        swift_bridgeObjectRetain();
        uint64_t v125 = sub_2411607A0();
        *(void *)(v0 + 152) = sub_24101F0A4(v125, v126, &v158);
        sub_241161430();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_241007000, v114, v115, "[%s] Create model with updated medications: %s", (uint8_t *)v121, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v122, -1, -1);
        MEMORY[0x2456180C0](v121, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v156, v118);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v117, v118);
      }
      **(void **)(v0 + 304) = *(void *)(v0 + 184);
      swift_storeEnumTagMultiPayload();
      unint64_t v127 = *(void *)(v0 + 120);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v127 = sub_241051F20(0, *(void *)(v127 + 16) + 1, 1, v127);
      }
      unint64_t v129 = *(void *)(v127 + 16);
      unint64_t v128 = *(void *)(v127 + 24);
      if (v129 >= v128 >> 1) {
        unint64_t v127 = sub_241051F20(v128 > 1, v129 + 1, 1, v127);
      }
      uint64_t v131 = *(void *)(v0 + 296);
      uint64_t v130 = *(void *)(v0 + 304);
      *(void *)(v127 + 16) = v129 + 1;
      sub_2410B1A6C(v130, v127+ ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80))+ *(void *)(v131 + 72) * v129);
      *(void *)(v0 + 120) = v127;
      goto LABEL_126;
    }
    unint64_t v127 = *(void *)(v0 + 120);
LABEL_126:
    sub_24115F770();
    swift_bridgeObjectRetain_n();
    uint64_t v136 = sub_24115F780();
    os_log_type_t v137 = sub_241160D50();
    BOOL v138 = os_log_type_enabled(v136, v137);
    uint64_t v140 = *(void *)(v0 + 216);
    uint64_t v139 = *(void *)(v0 + 224);
    uint64_t v141 = *(void *)(v0 + 208);
    if (v138)
    {
      uint64_t v157 = *(void *)(v0 + 224);
      uint64_t v142 = swift_slowAlloc();
      uint64_t v143 = swift_slowAlloc();
      uint64_t v158 = v143;
      *(_DWORD *)uint64_t v142 = 136315394;
      uint64_t v144 = sub_241161A00();
      *(void *)(v0 + 160) = sub_24101F0A4(v144, v145, &v158);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v142 + 12) = 2048;
      uint64_t v146 = *(void *)(v127 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = v146;
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v136, v137, "[%s] Create model with dose event and schedule items. modelsByDayIndex.count: %ld", (uint8_t *)v142, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v143, -1, -1);
      MEMORY[0x2456180C0](v142, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v157, v141);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v139, v141);
    }
    swift_beginAccess();
    uint64_t v152 = *(void *)(v0 + 120);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v147 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v147(v152);
  }
  unint64_t v45 = 0;
  *(void *)(v0 + 520) = OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationDataSource;
  *(void *)(v0 + 528) = OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_gregorianCalendar;
  do
  {
    uint64_t v46 = *(void *)(v0 + 176);
    if ((v46 & 0xC000000000000001) != 0)
    {
      id v47 = (id)MEMORY[0x245617450](v45);
    }
    else
    {
      if (v45 >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_122;
      }
      id v47 = *(id *)(v46 + 8 * v45 + 32);
    }
    *(void *)(v0 + 536) = v47;
    *(void *)(v0 + 544) = v45 + 1;
    if (__OFADD__(v45, 1))
    {
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_2411616E0();
      goto LABEL_43;
    }
    id v48 = objc_msgSend(v47, sel_doses);
    sub_241024708(0, &qword_26B006FC8);
    unint64_t v49 = sub_2411609A0();
    *(void *)(v0 + 552) = v49;

    if (v49 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_2411616E0();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 560) = v77;
      if (v77)
      {
LABEL_69:
        *(void *)(v0 + 568) = *(void *)(*(void *)(v0 + 192) + *(void *)(v0 + 520));
        *(void *)(v0 + 576) = v44;
        uint64_t v79 = *(void *)(v0 + 552);
        if ((v79 & 0xC000000000000001) != 0) {
          id v80 = (id)MEMORY[0x245617450](0);
        }
        else {
          id v80 = *(id *)(v79 + 32);
        }
        *(void *)(v0 + 584) = v80;
        *(void *)(v0 + 592) = 1;
        id v132 = objc_msgSend(v80, sel_medicationIdentifier, v148 - 1);
        uint64_t v8 = sub_241160730();
        uint64_t v10 = v133;

        *(void *)(v0 + 600) = v10;
        uint64_t v153 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x263F44C80] + MEMORY[0x263F44C80]);
        uint64_t v134 = (void *)swift_task_alloc();
        *(void *)(v0 + 608) = v134;
        void *v134 = v0;
        v134[1] = sub_2410ACC5C;
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
      *(void *)(v0 + 560) = v50;
      if (v50) {
        goto LABEL_69;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v51 = *(void **)(v0 + 536);
    if (!*(void *)(v44 + 16))
    {
      swift_bridgeObjectRelease();

      goto LABEL_46;
    }
    uint64_t v52 = *(void *)(v0 + 368);
    uint64_t v54 = *(void *)(v0 + 352);
    uint64_t v53 = *(void *)(v0 + 360);
    uint64_t v55 = *(void *)(v0 + 192) + *(void *)(v0 + 528);
    id v56 = objc_msgSend(*(id *)(v0 + 536), sel_scheduledDateTime);
    sub_24115CAE0();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v52, v55, v54);
    uint64_t v57 = MEMORY[0x263F8EE78];
    sub_241160590();
    sub_24115F230();
    swift_allocObject();
    id v58 = v51;
    sub_24115F240();
    if (!*(void *)(*(void *)(v0 + 104) + 16))
    {
      uint64_t v62 = *(void *)(v0 + 392);
      uint64_t v60 = *(void (**)(uint64_t, void, uint64_t))(v62 + 16);
      goto LABEL_59;
    }
    uint64_t v59 = *(void *)(v0 + 392);
    sub_241062644(*(void *)(v0 + 408));
    uint64_t v60 = *(void (**)(uint64_t, void, uint64_t))(v59 + 16);
    if ((v61 & 1) == 0)
    {
      uint64_t v62 = *(void *)(v0 + 392);
LABEL_59:
      uint64_t v63 = *(void *)(v0 + 424);
      uint64_t v64 = *(void *)(v0 + 384);
      v60(v63, *(void *)(v0 + 408), v64);
      uint64_t v65 = *(void *)(v0 + 104);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v158 = v65;
      sub_241064E8C(v57, v63, isUniquelyReferenced_nonNull_native);
      *(void *)(v0 + 104) = v65;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v63, v64);
    }
    v60(*(void *)(v0 + 400), *(void *)(v0 + 408), *(void *)(v0 + 384));
    unint64_t v68 = (void (*)(void))sub_241034C84((void *)(v0 + 48));
    if (*v67)
    {
      uint64_t v69 = v67;
      uint64_t v70 = swift_retain();
      MEMORY[0x2456167B0](v70);
      if (*(void *)((*v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2411609D0();
      }
      sub_241160A00();
      sub_2411609C0();
    }
    v68();
    unint64_t v71 = *(void **)(v0 + 536);
    uint64_t v72 = *(void *)(v0 + 400);
    uint64_t v73 = *(void *)(v0 + 408);
    uint64_t v74 = *(void *)(v0 + 384);
    uint64_t v75 = *(void *)(v0 + 392);
    swift_release();

    uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v76(v72, v74);
    v76(v73, v74);
    uint64_t v44 = MEMORY[0x263F8EE78];
LABEL_46:
    unint64_t v45 = *(void *)(v0 + 544);
  }
  while (v45 != *(void *)(v0 + 512));
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  unint64_t v81 = *(void *)(v0 + 120);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v81 = sub_241051F20(0, *(void *)(v81 + 16) + 1, 1, v81);
  }
  unint64_t v83 = *(void *)(v81 + 16);
  unint64_t v82 = *(void *)(v81 + 24);
  if (v83 >= v82 >> 1) {
    unint64_t v81 = sub_241051F20(v82 > 1, v83 + 1, 1, v81);
  }
  uint64_t v84 = *(void *)(v0 + 320);
  uint64_t v85 = *(void *)(v0 + 296);
  *(void *)(v81 + 16) = v83 + 1;
  sub_2410B1A6C(v84, v81+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(void *)(v85 + 72) * v83);
  *(void *)(v0 + 120) = v81;
  uint64_t v78 = *(void *)(v0 + 104);
  if (!*(void *)(v78 + 16)) {
    goto LABEL_107;
  }
LABEL_76:
  uint64_t v149 = v78 + 64;
  uint64_t v86 = -1;
  uint64_t v87 = -1 << *(unsigned char *)(v78 + 32);
  if (-v87 < 64) {
    uint64_t v86 = ~(-1 << -(char)v87);
  }
  unint64_t v88 = v86 & *(void *)(v78 + 64);
  int64_t v151 = (unint64_t)(63 - v87) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v155 = 0;
  if (v88)
  {
LABEL_79:
    unint64_t v89 = __clz(__rbit64(v88));
    v88 &= v88 - 1;
    unint64_t v90 = v89 | (v155 << 6);
LABEL_80:
    uint64_t v91 = *(void *)(v0 + 240);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 392) + 16))(v91, *(void *)(v78 + 48) + *(void *)(*(void *)(v0 + 392) + 72) * v90, *(void *)(v0 + 384));
    uint64_t v92 = *(void *)(v78 + 56);
    sub_2410B197C(0);
    uint64_t v94 = v93;
    *(void *)(v91 + *(int *)(v93 + 48)) = *(void *)(v92 + 8 * v90);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v91, 0, 1, v93);
    swift_bridgeObjectRetain();
    goto LABEL_99;
  }
  while (2)
  {
    int64_t v95 = v155 + 1;
    if (__OFADD__(v155, 1)) {
      goto LABEL_121;
    }
    if (v95 >= v151) {
      goto LABEL_98;
    }
    unint64_t v96 = *(void *)(v149 + 8 * v95);
    if (v96) {
      goto LABEL_84;
    }
    int64_t v97 = v155 + 2;
    ++v155;
    if (v95 + 1 >= v151) {
      goto LABEL_98;
    }
    unint64_t v96 = *(void *)(v149 + 8 * v97);
    if (v96) {
      goto LABEL_87;
    }
    int64_t v155 = v95 + 1;
    if (v95 + 2 >= v151) {
      goto LABEL_98;
    }
    unint64_t v96 = *(void *)(v149 + 8 * (v95 + 2));
    if (v96)
    {
      v95 += 2;
      goto LABEL_84;
    }
    int64_t v97 = v95 + 3;
    int64_t v155 = v95 + 2;
    if (v95 + 3 >= v151)
    {
LABEL_98:
      uint64_t v98 = *(void *)(v0 + 240);
      sub_2410B197C(0);
      uint64_t v94 = v99;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v98, 1, 1, v99);
      unint64_t v88 = 0;
LABEL_99:
      uint64_t v100 = *(void *)(v0 + 248);
      sub_2410B1AD0(*(void *)(v0 + 240), v100, &qword_268CF1620, (uint64_t (*)(uint64_t))sub_2410B197C);
      sub_2410B197C(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 48))(v100, 1, v94) == 1)
      {
        swift_release();
        goto LABEL_107;
      }
      uint64_t v101 = *(void *)(v0 + 384);
      uint64_t v102 = *(void *)(v0 + 392);
      uint64_t v103 = *(void *)(v0 + 312);
      uint64_t v104 = *(void *)(v0 + 248);
      uint64_t v105 = *(void *)(v104 + *(int *)(v94 + 48));
      sub_2410AFE20(0, &qword_268CF06D8, &qword_26B006F18, MEMORY[0x263F44C90]);
      uint64_t v107 = *(int *)(v106 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 32))(v103, v104, v101);
      *(void *)(v103 + v107) = v105;
      swift_storeEnumTagMultiPayload();
      unint64_t v108 = *(void *)(v0 + 120);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v108 = sub_241051F20(0, *(void *)(v108 + 16) + 1, 1, v108);
      }
      unint64_t v110 = *(void *)(v108 + 16);
      unint64_t v109 = *(void *)(v108 + 24);
      if (v110 >= v109 >> 1) {
        unint64_t v108 = sub_241051F20(v109 > 1, v110 + 1, 1, v108);
      }
      uint64_t v111 = *(void *)(v0 + 312);
      uint64_t v112 = *(void *)(v0 + 296);
      *(void *)(v108 + 16) = v110 + 1;
      uint64_t result = sub_2410B1A6C(v111, v108+ ((*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80))+ *(void *)(v112 + 72) * v110);
      *(void *)(v0 + 120) = v108;
      if (v88) {
        goto LABEL_79;
      }
      continue;
    }
    break;
  }
  unint64_t v96 = *(void *)(v149 + 8 * v97);
  if (v96)
  {
LABEL_87:
    int64_t v95 = v97;
LABEL_84:
    unint64_t v88 = (v96 - 1) & v96;
    unint64_t v90 = __clz(__rbit64(v96)) + (v95 << 6);
    int64_t v155 = v95;
    goto LABEL_80;
  }
  while (1)
  {
    int64_t v95 = v97 + 1;
    if (__OFADD__(v97, 1)) {
      break;
    }
    if (v95 >= v151)
    {
      int64_t v155 = v151 - 1;
      goto LABEL_98;
    }
    unint64_t v96 = *(void *)(v149 + 8 * v95);
    ++v97;
    if (v96) {
      goto LABEL_84;
    }
  }
LABEL_133:
  __break(1u);
  return result;
}

uint64_t sub_2410AB4F4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 496) = a1;
  *(void *)(v3 + 504) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_2410ADE14;
  }
  else
  {
    uint64_t v4 = sub_2410AB62C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2410AB62C()
{
  uint64_t v175 = v1;
  unint64_t v3 = *(void *)(v1 + 496);
  uint64_t v4 = *(void **)(v1 + 464);
  if (!v3)
  {

    goto LABEL_10;
  }
  uint64_t v5 = *(void *)(v1 + 368);
  uint64_t v6 = *(void *)(v1 + 352);
  uint64_t v7 = *(void *)(v1 + 360);
  uint64_t v8 = *(void *)(v1 + 192) + *(void *)(v1 + 448);
  id v9 = objc_msgSend(v4, sel_startDate);
  sub_24115CAE0();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v8, v6);
  sub_241160590();
  if (!*(void *)(*(void *)(v1 + 112) + 16) || (sub_241062644(*(void *)(v1 + 432)), (v10 & 1) == 0))
  {
    uint64_t v11 = *(void *)(v1 + 424);
    uint64_t v12 = *(void *)(v1 + 384);
    uint64_t v13 = *(void *)(v1 + 392);
    (*(void (**)(uint64_t, void, uint64_t))(v13 + 16))(v11, *(void *)(v1 + 432), v12);
    uint64_t v14 = *(void *)(v1 + 112);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v174 = v14;
    sub_241064EB4(MEMORY[0x263F8EE78], v11, isUniquelyReferenced_nonNull_native);
    *(void *)(v1 + 112) = v14;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v16 = *(void **)(v1 + 464);
  uint64_t v17 = *(void *)(v1 + 432);
  uint64_t v18 = *(void *)(v1 + 416);
  uint64_t v20 = *(void *)(v1 + 384);
  uint64_t v19 = *(void *)(v1 + 392);
  sub_24115F170();
  swift_allocObject();
  id v21 = v16;
  unint64_t v2 = (unint64_t)(id)v3;
  sub_24115F180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v17, v20);
  uint64_t v0 = v1 + 16;
  unint64_t v3 = (unint64_t)sub_241034B94((void *)(v1 + 16));
  if (!*v22) {
    goto LABEL_8;
  }
  uint64_t v23 = v22;
  uint64_t v24 = swift_retain();
  MEMORY[0x2456167B0](v24);
  if (*(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_132;
  }
  while (1)
  {
    sub_241160A00();
    sub_2411609C0();
LABEL_8:
    ((void (*)(uint64_t, void))v3)(v0, 0);
    int64_t v25 = *(void **)(v1 + 464);
    uint64_t v26 = *(void *)(v1 + 432);
    uint64_t v0 = *(void *)(v1 + 416);
    unint64_t v3 = *(void *)(v1 + 384);
    uint64_t v27 = *(void *)(v1 + 392);
    swift_release();

    unint64_t v2 = *(void *)(v27 + 8);
    ((void (*)(uint64_t, unint64_t))v2)(v0, v3);
    ((void (*)(uint64_t, unint64_t))v2)(v26, v3);
LABEL_10:
    uint64_t v28 = *(void *)(v1 + 168);
    uint64_t v29 = *(void *)(v1 + 472);
    if (v29 == *(void *)(v1 + 440)) {
      break;
    }
    if ((v28 & 0xC000000000000001) != 0) {
      id v56 = (id)MEMORY[0x245617450](*(void *)(v1 + 472));
    }
    else {
      id v56 = *(id *)(v28 + 8 * v29 + 32);
    }
    *(void *)(v1 + 464) = v56;
    *(void *)(v1 + 472) = v29 + 1;
    if (!__OFADD__(v29, 1))
    {
      id v88 = objc_msgSend(v56, sel_medicationIdentifier);
      uint64_t v89 = sub_241160730();
      uint64_t v91 = v90;

      *(void *)(v1 + 480) = v91;
      uint64_t v170 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x263F44C80] + MEMORY[0x263F44C80]);
      uint64_t v92 = (void *)swift_task_alloc();
      *(void *)(v1 + 488) = v92;
      *uint64_t v92 = v1;
      v92[1] = sub_2410AB4F4;
LABEL_81:
      return v170(v89, v91);
    }
LABEL_131:
    __break(1u);
LABEL_132:
    sub_2411609D0();
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v1 + 296);
  uint64_t v31 = *(void *)(v1 + 112);
  uint64_t v32 = *(void *)(v31 + 64);
  uint64_t v162 = v31 + 64;
  uint64_t v33 = -1;
  uint64_t v34 = -1 << *(unsigned char *)(v31 + 32);
  if (-v34 < 64) {
    uint64_t v33 = ~(-1 << -(char)v34);
  }
  unint64_t v35 = v33 & v32;
  uint64_t v164 = *(void *)(v1 + 392);
  int64_t v163 = (unint64_t)(63 - v34) >> 6;
  uint64_t v166 = *(void *)(v1 + 112);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v169 = 0;
  if (v35)
  {
LABEL_14:
    unint64_t v37 = __clz(__rbit64(v35));
    v35 &= v35 - 1;
    unint64_t v38 = v37 | (v169 << 6);
LABEL_15:
    uint64_t v39 = *(void *)(v1 + 336);
    (*(void (**)(uint64_t, unint64_t, void))(v164 + 16))(v39, *(void *)(v166 + 48) + *(void *)(v164 + 72) * v38, *(void *)(v1 + 384));
    uint64_t v40 = *(void *)(v166 + 56);
    sub_2410B19A4(0);
    uint64_t v42 = v41;
    *(void *)(v39 + *(int *)(v41 + 48)) = *(void *)(v40 + 8 * v38);
    unint64_t v3 = (v41 - 8) & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v39, 0, 1, v41);
    swift_bridgeObjectRetain();
    goto LABEL_34;
  }
  while (1)
  {
    int64_t v43 = v169 + 1;
    if (__OFADD__(v169, 1))
    {
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
    if (v43 < v163)
    {
      unint64_t v44 = *(void *)(v162 + 8 * v43);
      if (v44) {
        goto LABEL_19;
      }
      int64_t v45 = v169 + 2;
      ++v169;
      if (v43 + 1 < v163)
      {
        unint64_t v44 = *(void *)(v162 + 8 * v45);
        if (v44) {
          goto LABEL_22;
        }
        int64_t v169 = v43 + 1;
        if (v43 + 2 < v163)
        {
          unint64_t v44 = *(void *)(v162 + 8 * (v43 + 2));
          if (v44)
          {
            v43 += 2;
LABEL_19:
            unint64_t v35 = (v44 - 1) & v44;
            unint64_t v38 = __clz(__rbit64(v44)) + (v43 << 6);
            int64_t v169 = v43;
            goto LABEL_15;
          }
          int64_t v45 = v43 + 3;
          int64_t v169 = v43 + 2;
          if (v43 + 3 < v163)
          {
            unint64_t v44 = *(void *)(v162 + 8 * v45);
            if (!v44)
            {
              while (1)
              {
                int64_t v43 = v45 + 1;
                if (__OFADD__(v45, 1)) {
                  break;
                }
                if (v43 >= v163)
                {
                  int64_t v169 = v163 - 1;
                  goto LABEL_33;
                }
                unint64_t v44 = *(void *)(v162 + 8 * v43);
                ++v45;
                if (v44) {
                  goto LABEL_19;
                }
              }
              __break(1u);
              goto LABEL_142;
            }
LABEL_22:
            int64_t v43 = v45;
            goto LABEL_19;
          }
        }
      }
    }
LABEL_33:
    uint64_t v46 = *(void *)(v1 + 336);
    sub_2410B19A4(0);
    uint64_t v42 = v47;
    unint64_t v3 = (v47 - 8) & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 1, 1, v47);
    unint64_t v35 = 0;
LABEL_34:
    uint64_t v0 = *(void *)(v1 + 344);
    sub_2410B1AD0(*(void *)(v1 + 336), v0, &qword_268CF1630, (uint64_t (*)(uint64_t))sub_2410B19A4);
    sub_2410B19A4(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v0, 1, v42) == 1) {
      break;
    }
    uint64_t v48 = *(void *)(v1 + 384);
    uint64_t v49 = *(void *)(v1 + 344);
    uint64_t v50 = *(void *)(v1 + 328);
    uint64_t v51 = *(void *)(v49 + *(int *)(v42 + 48));
    sub_2410AFE20(0, &qword_268CF06E0, &qword_26B006F10, MEMORY[0x263F44C70]);
    uint64_t v53 = *(int *)(v52 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v164 + 32))(v50, v49, v48);
    *(void *)(v50 + v53) = v51;
    swift_storeEnumTagMultiPayload();
    uint64_t v0 = *(void *)(v1 + 120);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v0 = sub_241051F20(0, *(void *)(v0 + 16) + 1, 1, v0);
    }
    unint64_t v3 = *(void *)(v0 + 16);
    unint64_t v54 = *(void *)(v0 + 24);
    if (v3 >= v54 >> 1) {
      uint64_t v0 = sub_241051F20(v54 > 1, v3 + 1, 1, v0);
    }
    uint64_t v55 = *(void *)(v1 + 328);
    *(void *)(v0 + 16) = v3 + 1;
    uint64_t result = sub_2410B1A6C(v55, v0+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v3);
    *(void *)(v1 + 120) = v0;
    if (v35) {
      goto LABEL_14;
    }
  }
  unint64_t v57 = *(void *)(v1 + 176);
  swift_release();
  *(void *)(v1 + 104) = MEMORY[0x263F8EE80];
  if (!(v57 >> 62))
  {
    uint64_t v58 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    *(void *)(v1 + 512) = v58;
    if (v58) {
      goto LABEL_45;
    }
LABEL_88:
    swift_bridgeObjectRelease();
    uint64_t v99 = MEMORY[0x263F8EE80];
    if (!*(void *)(MEMORY[0x263F8EE80] + 16)) {
      goto LABEL_120;
    }
    goto LABEL_89;
  }
LABEL_87:
  swift_bridgeObjectRetain();
  uint64_t v103 = sub_2411616E0();
  *(void *)(v1 + 512) = v103;
  if (!v103) {
    goto LABEL_88;
  }
LABEL_45:
  unint64_t v59 = 0;
  *(void *)(v1 + 520) = OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationDataSource;
  *(void *)(v1 + 528) = OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_gregorianCalendar;
  uint64_t v60 = MEMORY[0x263F8EE78];
  while (2)
  {
    uint64_t v61 = *(void *)(v1 + 176);
    if ((v61 & 0xC000000000000001) != 0)
    {
      id v62 = (id)MEMORY[0x245617450](v59);
    }
    else
    {
      if (v59 >= *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_86;
      }
      id v62 = *(id *)(v61 + 8 * v59 + 32);
    }
    *(void *)(v1 + 536) = v62;
    *(void *)(v1 + 544) = v59 + 1;
    if (__OFADD__(v59, 1)) {
      goto LABEL_85;
    }
    id v63 = objc_msgSend(v62, sel_doses);
    sub_241024708(0, &qword_26B006FC8);
    unint64_t v64 = sub_2411609A0();
    *(void *)(v1 + 552) = v64;

    if (v64 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v0 = sub_2411616E0();
      swift_bridgeObjectRelease();
      *(void *)(v1 + 560) = v0;
      if (v0)
      {
LABEL_71:
        *(void *)(v1 + 568) = *(void *)(*(void *)(v1 + 192) + *(void *)(v1 + 520));
        *(void *)(v1 + 576) = v60;
        uint64_t v93 = *(void *)(v1 + 552);
        if ((v93 & 0xC000000000000001) != 0) {
          id v94 = (id)MEMORY[0x245617450](0);
        }
        else {
          id v94 = *(id *)(v93 + 32);
        }
        *(void *)(v1 + 584) = v94;
        *(void *)(v1 + 592) = 1;
        id v100 = objc_msgSend(v94, sel_medicationIdentifier, v163 - 1);
        uint64_t v89 = sub_241160730();
        uint64_t v91 = v101;

        *(void *)(v1 + 600) = v91;
        uint64_t v170 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x263F44C80] + MEMORY[0x263F44C80]);
        uint64_t v102 = (void *)swift_task_alloc();
        *(void *)(v1 + 608) = v102;
        *uint64_t v102 = v1;
        v102[1] = sub_2410ACC5C;
        goto LABEL_81;
      }
    }
    else
    {
      uint64_t v0 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
      *(void *)(v1 + 560) = v0;
      if (v0) {
        goto LABEL_71;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v65 = *(void **)(v1 + 536);
    if (*(void *)(v60 + 16))
    {
      uint64_t v66 = *(void *)(v1 + 368);
      uint64_t v68 = *(void *)(v1 + 352);
      uint64_t v67 = *(void *)(v1 + 360);
      uint64_t v69 = *(void *)(v1 + 192) + *(void *)(v1 + 528);
      id v70 = objc_msgSend(*(id *)(v1 + 536), sel_scheduledDateTime);
      sub_24115CAE0();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v66, v69, v68);
      sub_241160590();
      sub_24115F230();
      swift_allocObject();
      id v71 = v65;
      sub_24115F240();
      if (*(void *)(*(void *)(v1 + 104) + 16))
      {
        uint64_t v72 = *(void *)(v1 + 392);
        sub_241062644(*(void *)(v1 + 408));
        uint64_t v73 = *(void (**)(uint64_t, void, uint64_t))(v72 + 16);
        if ((v74 & 1) == 0)
        {
          uint64_t v75 = *(void *)(v1 + 392);
          goto LABEL_60;
        }
      }
      else
      {
        uint64_t v75 = *(void *)(v1 + 392);
        uint64_t v73 = *(void (**)(uint64_t, void, uint64_t))(v75 + 16);
LABEL_60:
        uint64_t v76 = *(void *)(v1 + 424);
        uint64_t v77 = *(void *)(v1 + 384);
        v73(v76, *(void *)(v1 + 408), v77);
        uint64_t v78 = *(void *)(v1 + 104);
        char v79 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v174 = v78;
        sub_241064E8C(v60, v76, v79);
        *(void *)(v1 + 104) = v78;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v76, v77);
      }
      v73(*(void *)(v1 + 400), *(void *)(v1 + 408), *(void *)(v1 + 384));
      unint64_t v81 = (void (*)(void))sub_241034C84((void *)(v1 + 48));
      if (*v80)
      {
        unint64_t v82 = v80;
        uint64_t v83 = swift_retain();
        MEMORY[0x2456167B0](v83);
        if (*(void *)((*v82 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v82 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2411609D0();
        }
        sub_241160A00();
        sub_2411609C0();
      }
      v81();
      uint64_t v84 = *(void **)(v1 + 536);
      uint64_t v0 = *(void *)(v1 + 400);
      uint64_t v85 = *(void *)(v1 + 408);
      unint64_t v3 = *(void *)(v1 + 384);
      uint64_t v86 = *(void *)(v1 + 392);
      swift_release();

      uint64_t v87 = *(void (**)(uint64_t, unint64_t))(v86 + 8);
      v87(v0, v3);
      v87(v85, v3);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t v59 = *(void *)(v1 + 544);
    if (v59 != *(void *)(v1 + 512)) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  unint64_t v95 = *(void *)(v1 + 120);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v95 = sub_241051F20(0, *(void *)(v95 + 16) + 1, 1, v95);
  }
  unint64_t v3 = *(void *)(v95 + 16);
  unint64_t v96 = *(void *)(v95 + 24);
  uint64_t v0 = v3 + 1;
  if (v3 >= v96 >> 1) {
    unint64_t v95 = sub_241051F20(v96 > 1, v3 + 1, 1, v95);
  }
  uint64_t v97 = *(void *)(v1 + 320);
  uint64_t v98 = *(void *)(v1 + 296);
  *(void *)(v95 + 16) = v0;
  sub_2410B1A6C(v97, v95+ ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80))+ *(void *)(v98 + 72) * v3);
  *(void *)(v1 + 120) = v95;
  uint64_t v99 = *(void *)(v1 + 104);
  if (!*(void *)(v99 + 16))
  {
LABEL_120:
    unint64_t v130 = *(void *)(v1 + 184);
    if (v130 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v149 = sub_2411616E0();
      swift_bridgeObjectRelease();
      if (!v149) {
        goto LABEL_134;
      }
LABEL_122:
      sub_24115F770();
      swift_bridgeObjectRetain_n();
      uint64_t v131 = sub_24115F780();
      os_log_type_t v132 = sub_241160D50();
      BOOL v133 = os_log_type_enabled(v131, v132);
      uint64_t v134 = *(void *)(v1 + 232);
      uint64_t v136 = *(void *)(v1 + 208);
      uint64_t v135 = *(void *)(v1 + 216);
      if (v133)
      {
        uint64_t v172 = *(void *)(v1 + 232);
        uint64_t v137 = *(void *)(v1 + 184);
        uint64_t v138 = swift_slowAlloc();
        uint64_t v139 = swift_slowAlloc();
        uint64_t v174 = v139;
        *(_DWORD *)uint64_t v138 = 136315394;
        uint64_t v140 = sub_241161A00();
        *(void *)(v1 + 136) = sub_24101F0A4(v140, v141, &v174);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v138 + 12) = 2080;
        *(void *)(v1 + 144) = v137;
        sub_2410B1888(0, (unint64_t *)&qword_26B007308, (unint64_t *)&qword_26B007360, 0x263F44C18, MEMORY[0x263F8D488]);
        swift_bridgeObjectRetain();
        uint64_t v142 = sub_2411607A0();
        *(void *)(v1 + 152) = sub_24101F0A4(v142, v143, &v174);
        sub_241161430();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_241007000, v131, v132, "[%s] Create model with updated medications: %s", (uint8_t *)v138, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v139, -1, -1);
        MEMORY[0x2456180C0](v138, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v172, v136);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v134, v136);
      }
      **(void **)(v1 + 304) = *(void *)(v1 + 184);
      swift_storeEnumTagMultiPayload();
      unint64_t v144 = *(void *)(v1 + 120);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v144 = sub_241051F20(0, *(void *)(v144 + 16) + 1, 1, v144);
      }
      unint64_t v146 = *(void *)(v144 + 16);
      unint64_t v145 = *(void *)(v144 + 24);
      if (v146 >= v145 >> 1) {
        unint64_t v144 = sub_241051F20(v145 > 1, v146 + 1, 1, v144);
      }
      uint64_t v148 = *(void *)(v1 + 296);
      uint64_t v147 = *(void *)(v1 + 304);
      *(void *)(v144 + 16) = v146 + 1;
      sub_2410B1A6C(v147, v144+ ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80))+ *(void *)(v148 + 72) * v146);
      *(void *)(v1 + 120) = v144;
    }
    else
    {
      if (*(void *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_122;
      }
LABEL_134:
      unint64_t v144 = *(void *)(v1 + 120);
    }
    sub_24115F770();
    swift_bridgeObjectRetain_n();
    uint64_t v150 = sub_24115F780();
    os_log_type_t v151 = sub_241160D50();
    BOOL v152 = os_log_type_enabled(v150, v151);
    uint64_t v154 = *(void *)(v1 + 216);
    uint64_t v153 = *(void *)(v1 + 224);
    uint64_t v155 = *(void *)(v1 + 208);
    if (v152)
    {
      uint64_t v173 = *(void *)(v1 + 224);
      uint64_t v156 = swift_slowAlloc();
      uint64_t v157 = swift_slowAlloc();
      uint64_t v174 = v157;
      *(_DWORD *)uint64_t v156 = 136315394;
      uint64_t v158 = sub_241161A00();
      *(void *)(v1 + 160) = sub_24101F0A4(v158, v159, &v174);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v156 + 12) = 2048;
      uint64_t v160 = *(void *)(v144 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v1 + 128) = v160;
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v150, v151, "[%s] Create model with dose event and schedule items. modelsByDayIndex.count: %ld", (uint8_t *)v156, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v157, -1, -1);
      MEMORY[0x2456180C0](v156, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v173, v155);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v153, v155);
    }
    swift_beginAccess();
    uint64_t v168 = *(void *)(v1 + 120);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v161 = *(uint64_t (**)(uint64_t))(v1 + 8);
    return v161(v168);
  }
LABEL_89:
  uint64_t v165 = v99 + 64;
  uint64_t v104 = -1;
  uint64_t v105 = -1 << *(unsigned char *)(v99 + 32);
  if (-v105 < 64) {
    uint64_t v104 = ~(-1 << -(char)v105);
  }
  unint64_t v2 = v104 & *(void *)(v99 + 64);
  int64_t v167 = (unint64_t)(63 - v105) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v171 = 0;
  if (v2)
  {
LABEL_92:
    unint64_t v106 = __clz(__rbit64(v2));
    v2 &= v2 - 1;
    unint64_t v107 = v106 | (v171 << 6);
LABEL_93:
    uint64_t v108 = *(void *)(v1 + 240);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v1 + 392) + 16))(v108, *(void *)(v99 + 48) + *(void *)(*(void *)(v1 + 392) + 72) * v107, *(void *)(v1 + 384));
    uint64_t v109 = *(void *)(v99 + 56);
    sub_2410B197C(0);
    uint64_t v111 = v110;
    *(void *)(v108 + *(int *)(v110 + 48)) = *(void *)(v109 + 8 * v107);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v108, 0, 1, v110);
    swift_bridgeObjectRetain();
    goto LABEL_112;
  }
  while (2)
  {
    int64_t v112 = v171 + 1;
    if (__OFADD__(v171, 1))
    {
      __break(1u);
      goto LABEL_131;
    }
    if (v112 >= v167) {
      goto LABEL_111;
    }
    unint64_t v113 = *(void *)(v165 + 8 * v112);
    if (v113) {
      goto LABEL_97;
    }
    int64_t v114 = v171 + 2;
    ++v171;
    if (v112 + 1 >= v167) {
      goto LABEL_111;
    }
    unint64_t v113 = *(void *)(v165 + 8 * v114);
    if (v113) {
      goto LABEL_100;
    }
    int64_t v171 = v112 + 1;
    if (v112 + 2 >= v167) {
      goto LABEL_111;
    }
    unint64_t v113 = *(void *)(v165 + 8 * (v112 + 2));
    if (v113)
    {
      v112 += 2;
      goto LABEL_97;
    }
    int64_t v114 = v112 + 3;
    int64_t v171 = v112 + 2;
    if (v112 + 3 >= v167)
    {
LABEL_111:
      uint64_t v115 = *(void *)(v1 + 240);
      sub_2410B197C(0);
      uint64_t v111 = v116;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v115, 1, 1, v116);
      unint64_t v2 = 0;
LABEL_112:
      uint64_t v117 = *(void *)(v1 + 248);
      sub_2410B1AD0(*(void *)(v1 + 240), v117, &qword_268CF1620, (uint64_t (*)(uint64_t))sub_2410B197C);
      sub_2410B197C(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 48))(v117, 1, v111) == 1)
      {
        swift_release();
        goto LABEL_120;
      }
      uint64_t v118 = *(void *)(v1 + 384);
      uint64_t v119 = *(void *)(v1 + 392);
      uint64_t v120 = *(void *)(v1 + 312);
      uint64_t v121 = *(void *)(v1 + 248);
      uint64_t v122 = *(void *)(v121 + *(int *)(v111 + 48));
      sub_2410AFE20(0, &qword_268CF06D8, &qword_26B006F18, MEMORY[0x263F44C90]);
      uint64_t v124 = *(int *)(v123 + 48);
      uint64_t v125 = *(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 32);
      unint64_t v3 = v119 + 32;
      v125(v120, v121, v118);
      *(void *)(v120 + v124) = v122;
      swift_storeEnumTagMultiPayload();
      uint64_t v0 = *(void *)(v1 + 120);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v0 = sub_241051F20(0, *(void *)(v0 + 16) + 1, 1, v0);
      }
      unint64_t v127 = *(void *)(v0 + 16);
      unint64_t v126 = *(void *)(v0 + 24);
      if (v127 >= v126 >> 1) {
        uint64_t v0 = sub_241051F20(v126 > 1, v127 + 1, 1, v0);
      }
      uint64_t v128 = *(void *)(v1 + 312);
      uint64_t v129 = *(void *)(v1 + 296);
      *(void *)(v0 + 16) = v127 + 1;
      uint64_t result = sub_2410B1A6C(v128, v0+ ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80))+ *(void *)(v129 + 72) * v127);
      *(void *)(v1 + 120) = v0;
      if (v2) {
        goto LABEL_92;
      }
      continue;
    }
    break;
  }
  unint64_t v113 = *(void *)(v165 + 8 * v114);
  if (v113)
  {
LABEL_100:
    int64_t v112 = v114;
LABEL_97:
    unint64_t v2 = (v113 - 1) & v113;
    unint64_t v107 = __clz(__rbit64(v113)) + (v112 << 6);
    int64_t v171 = v112;
    goto LABEL_93;
  }
  while (1)
  {
    int64_t v112 = v114 + 1;
    if (__OFADD__(v114, 1)) {
      break;
    }
    if (v112 >= v167)
    {
      int64_t v171 = v167 - 1;
      goto LABEL_111;
    }
    unint64_t v113 = *(void *)(v165 + 8 * v112);
    ++v114;
    if (v113) {
      goto LABEL_97;
    }
  }
LABEL_142:
  __break(1u);
  return result;
}

uint64_t sub_2410ACC5C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 616) = a1;
  *(void *)(v3 + 624) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_2410ADF90;
  }
  else
  {
    uint64_t v4 = sub_2410ACDB8;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2410ACDB8()
{
  uint64_t v129 = v0;
  uint64_t v1 = *(void **)(v0 + 616);
  unint64_t v2 = *(void **)(v0 + 584);
  if (v1)
  {
    uint64_t v3 = *(void **)(v0 + 536);
    uint64_t v5 = *(void *)(v0 + 272);
    uint64_t v4 = *(void *)(v0 + 280);
    uint64_t v7 = *(void *)(v0 + 256);
    uint64_t v6 = *(void *)(v0 + 264);
    id v8 = v2;
    id v9 = objc_msgSend(v3, sel_identifier);
    sub_241160730();

    unint64_t v10 = v1;
    sub_24115F2F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v12 = *(void *)(v0 + 576);
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
    goto LABEL_89;
  }

  unint64_t v12 = *(void *)(v0 + 576);
  while (1)
  {
    unint64_t v10 = *(void *)(v0 + 592);
    if (v10 == *(void *)(v0 + 560)) {
      break;
    }
LABEL_67:
    *(void *)(v0 + 576) = v12;
    uint64_t v82 = *(void *)(v0 + 552);
    if ((v82 & 0xC000000000000001) != 0) {
      id v83 = (id)MEMORY[0x245617450](v10);
    }
    else {
      id v83 = *(id *)(v82 + 8 * v10 + 32);
    }
    *(void *)(v0 + 584) = v83;
    *(void *)(v0 + 592) = v10 + 1;
    if (!__OFADD__(v10, 1))
    {
      id v84 = objc_msgSend(v83, sel_medicationIdentifier);
      uint64_t v85 = sub_241160730();
      uint64_t v87 = v86;

      *(void *)(v0 + 600) = v87;
      uint64_t v125 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x263F44C80] + MEMORY[0x263F44C80]);
      id v88 = (void *)swift_task_alloc();
      *(void *)(v0 + 608) = v88;
      void *v88 = v0;
      v88[1] = sub_2410ACC5C;
      return v125(v85, v87);
    }
LABEL_88:
    __break(1u);
LABEL_89:
    unint64_t v12 = sub_241052AFC(0, *(void *)(v12 + 16) + 1, 1, v12);
LABEL_3:
    unint64_t v14 = *(void *)(v12 + 16);
    unint64_t v13 = *(void *)(v12 + 24);
    if (v14 >= v13 >> 1) {
      unint64_t v12 = sub_241052AFC(v13 > 1, v14 + 1, 1, v12);
    }
    uint64_t v15 = *(void **)(v0 + 584);
    uint64_t v16 = *(void *)(v0 + 272);
    uint64_t v17 = *(void *)(v0 + 280);
    uint64_t v18 = *(void *)(v0 + 256);
    uint64_t v19 = *(void *)(v0 + 264);
    *(void *)(v12 + 16) = v14 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 32))(v12+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v14, v16, v18);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  uint64_t v20 = MEMORY[0x263F8EE78];
  while (1)
  {
    swift_bridgeObjectRelease();
    id v21 = *(void **)(v0 + 536);
    if (!*(void *)(v12 + 16))
    {
      swift_bridgeObjectRelease();

      goto LABEL_21;
    }
    uint64_t v22 = *(void *)(v0 + 368);
    uint64_t v23 = *(void *)(v0 + 352);
    uint64_t v24 = *(void *)(v0 + 360);
    uint64_t v25 = *(void *)(v0 + 192) + *(void *)(v0 + 528);
    id v26 = objc_msgSend(*(id *)(v0 + 536), sel_scheduledDateTime);
    sub_24115CAE0();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, v25, v23);
    sub_241160590();
    sub_24115F230();
    swift_allocObject();
    id v27 = v21;
    sub_24115F240();
    if (!*(void *)(*(void *)(v0 + 104) + 16))
    {
      uint64_t v32 = *(void *)(v0 + 392);
      uint64_t v29 = *(void (**)(uint64_t, void, uint64_t))(v32 + 16);
      uint64_t v30 = (void *)(v0 + 48);
      uint64_t v20 = MEMORY[0x263F8EE78];
      goto LABEL_15;
    }
    uint64_t v28 = *(void *)(v0 + 392);
    sub_241062644(*(void *)(v0 + 408));
    uint64_t v29 = *(void (**)(uint64_t, void, uint64_t))(v28 + 16);
    uint64_t v30 = (void *)(v0 + 48);
    uint64_t v20 = MEMORY[0x263F8EE78];
    if ((v31 & 1) == 0)
    {
      uint64_t v32 = *(void *)(v0 + 392);
LABEL_15:
      uint64_t v33 = *(void *)(v0 + 424);
      uint64_t v34 = *(void *)(v0 + 384);
      v29(v33, *(void *)(v0 + 408), v34);
      uint64_t v35 = *(void *)(v0 + 104);
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v128 = v35;
      sub_241064E8C(v20, v33, v36);
      *(void *)(v0 + 104) = v35;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
    }
    v29(*(void *)(v0 + 400), *(void *)(v0 + 408), *(void *)(v0 + 384));
    unint64_t v38 = sub_241034C84(v30);
    if (*v37)
    {
      uint64_t v39 = v37;
      uint64_t v40 = swift_retain();
      MEMORY[0x2456167B0](v40);
      if (*(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2411609D0();
      }
      sub_241160A00();
      sub_2411609C0();
    }
    ((void (*)(void *, void))v38)(v30, 0);
    uint64_t v41 = *(void **)(v0 + 536);
    unint64_t v10 = *(void *)(v0 + 400);
    unint64_t v42 = *(void *)(v0 + 408);
    uint64_t v43 = *(void *)(v0 + 384);
    uint64_t v44 = *(void *)(v0 + 392);
    swift_release();

    int64_t v45 = *(void (**)(unint64_t, uint64_t))(v44 + 8);
    v45(v10, v43);
    v45(v42, v43);
LABEL_21:
    unint64_t v12 = *(void *)(v0 + 544);
    if (v12 == *(void *)(v0 + 512)) {
      break;
    }
    uint64_t v46 = *(void *)(v0 + 176);
    if ((v46 & 0xC000000000000001) != 0)
    {
      id v47 = (id)MEMORY[0x245617450](*(void *)(v0 + 544));
    }
    else
    {
      if (v12 >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_86;
      }
      id v47 = *(id *)(v46 + 8 * v12 + 32);
    }
    *(void *)(v0 + 536) = v47;
    *(void *)(v0 + 544) = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    id v48 = objc_msgSend(v47, sel_doses);
    sub_241024708(0, &qword_26B006FC8);
    unint64_t v49 = sub_2411609A0();
    *(void *)(v0 + 552) = v49;

    if (v49 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v10 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v10 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(v0 + 560) = v10;
    unint64_t v12 = v20;
    if (v10)
    {
      unint64_t v10 = 0;
      *(void *)(v0 + 568) = *(void *)(*(void *)(v0 + 192) + *(void *)(v0 + 520));
      unint64_t v12 = MEMORY[0x263F8EE78];
      goto LABEL_67;
    }
  }
  swift_bridgeObjectRelease();
  swift_storeEnumTagMultiPayload();
  unint64_t v50 = *(void *)(v0 + 120);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v50 = sub_241051F20(0, *(void *)(v50 + 16) + 1, 1, v50);
  }
  unint64_t v52 = *(void *)(v50 + 16);
  unint64_t v51 = *(void *)(v50 + 24);
  unint64_t v10 = v52 + 1;
  if (v52 >= v51 >> 1) {
    unint64_t v50 = sub_241051F20(v51 > 1, v52 + 1, 1, v50);
  }
  uint64_t v53 = *(void *)(v0 + 320);
  uint64_t v54 = *(void *)(v0 + 296);
  *(void *)(v50 + 16) = v10;
  sub_2410B1A6C(v53, v50+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v52);
  *(void *)(v0 + 120) = v50;
  unint64_t v12 = *(void *)(v0 + 104);
  if (!*(void *)(v12 + 16))
  {
LABEL_75:
    unint64_t v89 = *(void *)(v0 + 184);
    if (v89 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v108 = sub_2411616E0();
      swift_bridgeObjectRelease();
      if (v108) {
        goto LABEL_77;
      }
    }
    else if (*(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_77:
      sub_24115F770();
      swift_bridgeObjectRetain_n();
      uint64_t v90 = sub_24115F780();
      os_log_type_t v91 = sub_241160D50();
      BOOL v92 = os_log_type_enabled(v90, v91);
      uint64_t v93 = *(void *)(v0 + 232);
      uint64_t v95 = *(void *)(v0 + 208);
      uint64_t v94 = *(void *)(v0 + 216);
      if (v92)
      {
        uint64_t v126 = *(void *)(v0 + 232);
        uint64_t v96 = *(void *)(v0 + 184);
        uint64_t v97 = swift_slowAlloc();
        uint64_t v98 = swift_slowAlloc();
        uint64_t v128 = v98;
        *(_DWORD *)uint64_t v97 = 136315394;
        uint64_t v99 = sub_241161A00();
        *(void *)(v0 + 136) = sub_24101F0A4(v99, v100, &v128);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v97 + 12) = 2080;
        *(void *)(v0 + 144) = v96;
        sub_2410B1888(0, (unint64_t *)&qword_26B007308, (unint64_t *)&qword_26B007360, 0x263F44C18, MEMORY[0x263F8D488]);
        swift_bridgeObjectRetain();
        uint64_t v101 = sub_2411607A0();
        *(void *)(v0 + 152) = sub_24101F0A4(v101, v102, &v128);
        sub_241161430();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_241007000, v90, v91, "[%s] Create model with updated medications: %s", (uint8_t *)v97, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v98, -1, -1);
        MEMORY[0x2456180C0](v97, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v126, v95);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v93, v95);
      }
      **(void **)(v0 + 304) = *(void *)(v0 + 184);
      swift_storeEnumTagMultiPayload();
      unint64_t v103 = *(void *)(v0 + 120);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v103 = sub_241051F20(0, *(void *)(v103 + 16) + 1, 1, v103);
      }
      unint64_t v105 = *(void *)(v103 + 16);
      unint64_t v104 = *(void *)(v103 + 24);
      if (v105 >= v104 >> 1) {
        unint64_t v103 = sub_241051F20(v104 > 1, v105 + 1, 1, v103);
      }
      uint64_t v107 = *(void *)(v0 + 296);
      uint64_t v106 = *(void *)(v0 + 304);
      *(void *)(v103 + 16) = v105 + 1;
      sub_2410B1A6C(v106, v103+ ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80))+ *(void *)(v107 + 72) * v105);
      *(void *)(v0 + 120) = v103;
      goto LABEL_92;
    }
    unint64_t v103 = *(void *)(v0 + 120);
LABEL_92:
    sub_24115F770();
    swift_bridgeObjectRetain_n();
    uint64_t v109 = sub_24115F780();
    os_log_type_t v110 = sub_241160D50();
    BOOL v111 = os_log_type_enabled(v109, v110);
    uint64_t v113 = *(void *)(v0 + 216);
    uint64_t v112 = *(void *)(v0 + 224);
    uint64_t v114 = *(void *)(v0 + 208);
    if (v111)
    {
      uint64_t v127 = *(void *)(v0 + 224);
      uint64_t v115 = swift_slowAlloc();
      uint64_t v116 = swift_slowAlloc();
      uint64_t v128 = v116;
      *(_DWORD *)uint64_t v115 = 136315394;
      uint64_t v117 = sub_241161A00();
      *(void *)(v0 + 160) = sub_24101F0A4(v117, v118, &v128);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v115 + 12) = 2048;
      uint64_t v119 = *(void *)(v103 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = v119;
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v109, v110, "[%s] Create model with dose event and schedule items. modelsByDayIndex.count: %ld", (uint8_t *)v115, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v116, -1, -1);
      MEMORY[0x2456180C0](v115, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v127, v114);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v112, v114);
    }
    swift_beginAccess();
    uint64_t v123 = *(void *)(v0 + 120);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v120 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v120(v123);
  }
  unint64_t v121 = v12 + 64;
  uint64_t v55 = -1;
  uint64_t v56 = -1 << *(unsigned char *)(v12 + 32);
  if (-v56 < 64) {
    uint64_t v55 = ~(-1 << -(char)v56);
  }
  unint64_t v57 = v55 & *(void *)(v12 + 64);
  int64_t v122 = (unint64_t)(63 - v56) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v124 = 0;
  if (v57)
  {
LABEL_40:
    unint64_t v59 = __clz(__rbit64(v57));
    v57 &= v57 - 1;
    unint64_t v60 = v59 | (v124 << 6);
LABEL_41:
    uint64_t v61 = *(void *)(v0 + 240);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 392) + 16))(v61, *(void *)(v12 + 48) + *(void *)(*(void *)(v0 + 392) + 72) * v60, *(void *)(v0 + 384));
    uint64_t v62 = *(void *)(v12 + 56);
    sub_2410B197C(0);
    uint64_t v64 = v63;
    *(void *)(v61 + *(int *)(v63 + 48)) = *(void *)(v62 + 8 * v60);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v61, 0, 1, v63);
    swift_bridgeObjectRetain();
    goto LABEL_60;
  }
  while (2)
  {
    int64_t v65 = v124 + 1;
    if (__OFADD__(v124, 1)) {
      goto LABEL_87;
    }
    if (v65 >= v122) {
      goto LABEL_59;
    }
    unint64_t v66 = *(void *)(v121 + 8 * v65);
    if (v66) {
      goto LABEL_45;
    }
    int64_t v67 = v124 + 2;
    ++v124;
    if (v65 + 1 >= v122) {
      goto LABEL_59;
    }
    unint64_t v66 = *(void *)(v121 + 8 * v67);
    if (v66) {
      goto LABEL_48;
    }
    int64_t v124 = v65 + 1;
    if (v65 + 2 >= v122) {
      goto LABEL_59;
    }
    unint64_t v66 = *(void *)(v121 + 8 * (v65 + 2));
    if (v66)
    {
      v65 += 2;
      goto LABEL_45;
    }
    int64_t v67 = v65 + 3;
    int64_t v124 = v65 + 2;
    if (v65 + 3 >= v122)
    {
LABEL_59:
      uint64_t v68 = *(void *)(v0 + 240);
      sub_2410B197C(0);
      uint64_t v64 = v69;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 1, 1, v69);
      unint64_t v57 = 0;
LABEL_60:
      uint64_t v70 = *(void *)(v0 + 248);
      sub_2410B1AD0(*(void *)(v0 + 240), v70, &qword_268CF1620, (uint64_t (*)(uint64_t))sub_2410B197C);
      sub_2410B197C(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 48))(v70, 1, v64) == 1)
      {
        swift_release();
        goto LABEL_75;
      }
      uint64_t v71 = *(void *)(v0 + 384);
      uint64_t v72 = *(void *)(v0 + 392);
      uint64_t v73 = *(void *)(v0 + 312);
      uint64_t v74 = *(void *)(v0 + 248);
      uint64_t v75 = *(void *)(v74 + *(int *)(v64 + 48));
      sub_2410AFE20(0, &qword_268CF06D8, &qword_26B006F18, MEMORY[0x263F44C90]);
      uint64_t v77 = *(int *)(v76 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v73, v74, v71);
      *(void *)(v73 + v77) = v75;
      swift_storeEnumTagMultiPayload();
      unint64_t v10 = *(void *)(v0 + 120);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v10 = sub_241051F20(0, *(void *)(v10 + 16) + 1, 1, v10);
      }
      unint64_t v79 = *(void *)(v10 + 16);
      unint64_t v78 = *(void *)(v10 + 24);
      if (v79 >= v78 >> 1) {
        unint64_t v10 = sub_241051F20(v78 > 1, v79 + 1, 1, v10);
      }
      uint64_t v80 = *(void *)(v0 + 312);
      uint64_t v81 = *(void *)(v0 + 296);
      *(void *)(v10 + 16) = v79 + 1;
      uint64_t result = sub_2410B1A6C(v80, v10+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(void *)(v81 + 72) * v79);
      *(void *)(v0 + 120) = v10;
      if (v57) {
        goto LABEL_40;
      }
      continue;
    }
    break;
  }
  unint64_t v66 = *(void *)(v121 + 8 * v67);
  if (v66)
  {
LABEL_48:
    int64_t v65 = v67;
LABEL_45:
    unint64_t v57 = (v66 - 1) & v66;
    unint64_t v60 = __clz(__rbit64(v66)) + (v65 << 6);
    int64_t v124 = v65;
    goto LABEL_41;
  }
  while (1)
  {
    int64_t v65 = v67 + 1;
    if (__OFADD__(v67, 1)) {
      break;
    }
    if (v65 >= v122)
    {
      int64_t v124 = v122 - 1;
      goto LABEL_59;
    }
    unint64_t v66 = *(void *)(v121 + 8 * v65);
    ++v67;
    if (v66) {
      goto LABEL_45;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2410ADE14()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2410ADF90()
{
  uint64_t v1 = *(void **)(v0 + 584);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2410AE11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[11] = a4;
  sub_2410B17E0(0, &qword_26B006F50, MEMORY[0x263F8F670]);
  v6[14] = v7;
  v6[15] = *(void *)(v7 - 8);
  v6[16] = swift_task_alloc();
  sub_2410B1B50();
  v6[17] = v8;
  v6[18] = *(void *)(v8 - 8);
  v6[19] = swift_task_alloc();
  sub_2410B1BD4();
  v6[20] = v9;
  v6[21] = *(void *)(v9 - 8);
  v6[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2410AE2B4, 0, 0);
}

uint64_t sub_2410AE2B4()
{
  if ((sub_241160AD0() & 1) != 0 || (swift_beginAccess(), (uint64_t Strong = swift_weakLoadStrong()) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    unint64_t v2 = *(void **)(Strong
                  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_scheduleItemObserver);
    v0[23] = v2;
    v2;
    swift_release();
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x263F44E10] + MEMORY[0x263F44E10]);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[24] = v3;
    void *v3 = v0;
    v3[1] = sub_2410AE414;
    uint64_t v4 = v0[19];
    uint64_t v5 = v0[12];
    return v8(v4, v5);
  }
}

uint64_t sub_2410AE414()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_2410AED68;
  }
  else {
    unint64_t v2 = sub_2410AE528;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2410AE528()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  sub_241160A80();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  void *v4 = v0;
  v4[1] = sub_2410AE630;
  uint64_t v5 = v0[20];
  return MEMORY[0x270FA1F68](v0 + 8, 0, 0, v5);
}

uint64_t sub_2410AE630()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2410AE72C, 0, 0);
}

uint64_t sub_2410AE72C()
{
  unint64_t v1 = v0[8];
  v0[27] = v1;
  if (!v1)
  {
    uint64_t v4 = (void *)v0[23];
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);

LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  uint64_t Strong = swift_weakLoadStrong();
  v0[28] = Strong;
  if (!Strong)
  {
    uint64_t v3 = (void *)v0[23];
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
    goto LABEL_7;
  }
  if (sub_241160AD0())
  {
    uint64_t v3 = (void *)v0[23];
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
    swift_release();
LABEL_7:

    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_13;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    uint64_t v7 = (void *)swift_task_alloc();
    v0[29] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_2410AEAE8;
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v9 = MEMORY[0x263F8EE78];
    return sub_2410A9CAC(v9, v1, v8);
  }
  uint64_t v12 = v0[15];
  uint64_t v11 = v0[16];
  uint64_t v13 = v0[14];
  swift_bridgeObjectRelease();
  sub_2410AFEBC(0, &qword_26B0070A8, type metadata accessor for MedicationDaySummaryViewModelChange, MEMORY[0x263F8E0F8]);
  type metadata accessor for MedicationDaySummaryViewModelChange(0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24116B370;
  swift_storeEnumTagMultiPayload();
  v0[10] = v14;
  sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
  sub_241160AF0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  uint64_t v15 = (void *)swift_task_alloc();
  v0[26] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_2410AE630;
  uint64_t v16 = v0[20];
  return MEMORY[0x270FA1F68](v0 + 8, 0, 0, v16);
}

uint64_t sub_2410AEAE8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_2410AEDF4;
  }
  else {
    uint64_t v4 = sub_2410AEC24;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2410AEC24()
{
  uint64_t v1 = v0[30];
  if (*(void *)(v1 + 16))
  {
    v0[9] = v1;
    uint64_t v3 = v0[15];
    uint64_t v2 = v0[16];
    uint64_t v4 = v0[14];
    sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
    sub_241160AF0();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2410AE630;
  uint64_t v6 = v0[20];
  return MEMORY[0x270FA1F68](v0 + 8, 0, 0, v6);
}

uint64_t sub_2410AED68()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2410AEDF4()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_2410AEEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  sub_2410B17E0(0, &qword_26B006F50, MEMORY[0x263F8F670]);
  v5[12] = v6;
  v5[13] = *(void *)(v6 - 8);
  v5[14] = swift_task_alloc();
  sub_2410B18F0(0, &qword_26B006F48, MEMORY[0x263F8F5B8]);
  v5[15] = v7;
  unsigned char v5[16] = *(void *)(v7 - 8);
  v5[17] = swift_task_alloc();
  sub_2410B18F0(0, &qword_26B006F38, MEMORY[0x263F8F5A8]);
  v5[18] = v8;
  v5[19] = *(void *)(v8 - 8);
  v5[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2410AF074, 0, 0);
}

uint64_t sub_2410AF074()
{
  if ((sub_241160AD0() & 1) != 0 || (swift_beginAccess(), (uint64_t Strong = swift_weakLoadStrong()) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    v0[21] = *(void *)(Strong
                       + OBJC_IVAR____TtC26MedicationsHealthAppPlugin47MedicationDaySummaryViewModelProviderDataSource_medicationDataSource);
    swift_retain();
    swift_release();
    uint64_t v6 = (uint64_t (*)(uint64_t))((int)*MEMORY[0x263F44C88] + MEMORY[0x263F44C88]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[22] = v2;
    void *v2 = v0;
    v2[1] = sub_2410AF1D0;
    uint64_t v3 = v0[17];
    return v6(v3);
  }
}

uint64_t sub_2410AF1D0()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2410AF908;
  }
  else {
    uint64_t v2 = sub_2410AF2E4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2410AF2E4()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  sub_241160A80();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[24] = v4;
  void *v4 = v0;
  v4[1] = sub_2410AF3EC;
  uint64_t v5 = v0[18];
  return MEMORY[0x270FA1F68](v0 + 8, 0, 0, v5);
}

uint64_t sub_2410AF3EC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2410AF4E8, 0, 0);
}

uint64_t sub_2410AF4E8()
{
  uint64_t v1 = v0[8];
  v0[25] = v1;
  if (!v1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_release();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  uint64_t Strong = swift_weakLoadStrong();
  v0[26] = Strong;
  if (!Strong)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    goto LABEL_7;
  }
  if (sub_241160AD0())
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_release();
LABEL_7:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v5 = (void *)swift_task_alloc();
  v0[27] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2410AF688;
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v7 = MEMORY[0x263F8EE78];
  return sub_2410A9CAC(v7, v6, v1);
}

uint64_t sub_2410AF688(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 224) = a1;
  *(void *)(v3 + 232) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_2410AF994;
  }
  else {
    uint64_t v4 = sub_2410AF7C4;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2410AF7C4()
{
  uint64_t v1 = v0[28];
  if (*(void *)(v1 + 16))
  {
    v0[9] = v1;
    uint64_t v3 = v0[13];
    uint64_t v2 = v0[14];
    uint64_t v4 = v0[12];
    sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
    sub_241160AF0();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = (void *)swift_task_alloc();
  v0[24] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2410AF3EC;
  uint64_t v6 = v0[18];
  return MEMORY[0x270FA1F68](v0 + 8, 0, 0, v6);
}

uint64_t sub_2410AF908()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2410AF994()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2410AFA48()
{
  return 0;
}

uint64_t sub_2410AFB00()
{
  return sub_2410AFA48();
}

unint64_t sub_2410AFB28()
{
  unint64_t result = qword_268CF15B0;
  if (!qword_268CF15B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF15B0);
  }
  return result;
}

_UNKNOWN **sub_2410AFB7C()
{
  return &off_26F556140;
}

uint64_t sub_2410AFB88()
{
  return sub_2410B10CC(&qword_268CF15B8, (void (*)(uint64_t))type metadata accessor for MedicationDaySummaryViewModelChange);
}

uint64_t type metadata accessor for MedicationDaySummaryViewModelChange(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF1648);
}

uint64_t sub_2410AFBF0(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v22 = a1 + 32;
  uint64_t v4 = a2 + 56;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v2; ++i)
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v6 = (uint64_t *)(v22 + 16 * i);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_241161950();
      swift_bridgeObjectRetain();
      sub_241160830();
      uint64_t v9 = sub_2411619A0();
      uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = *(void *)(a2 + 48);
        uint64_t v13 = (void *)(v12 + 16 * v11);
        BOOL v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_241161890() & 1) != 0)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          uint64_t v20 = 0;
          goto LABEL_23;
        }
        uint64_t v15 = ~v10;
        for (unint64_t j = v11 + 1; ; unint64_t j = v17 + 1)
        {
          uint64_t v17 = j & v15;
          if (((*(void *)(v4 + (((j & v15) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v15)) & 1) == 0) {
            break;
          }
          uint64_t v18 = (void *)(v12 + 16 * v17);
          BOOL v19 = *v18 == v8 && v18[1] == v7;
          if (v19 || (sub_241161890() & 1) != 0) {
            goto LABEL_22;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v20 = 1;
LABEL_23:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_2410AFD80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2410AFDE4()
{
  unint64_t result = qword_268CF15C0;
  if (!qword_268CF15C0)
  {
    type metadata accessor for MedicationDaySummaryViewModelChange(255);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF15C0);
  }
  return result;
}

void sub_2410AFE20(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_2411605E0();
    sub_2410AFEBC(255, a3, a4, MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v8) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_2410AFEBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2410AFF20()
{
  unint64_t result = qword_268CF15C8;
  if (!qword_268CF15C8)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF15C8);
  }
  return result;
}

uint64_t sub_2410AFF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2411605E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  uint64_t v55 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v53 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v10 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v53 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  BOOL v19 = (uint64_t *)((char *)&v53 - v18);
  MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v53 - v20;
  sub_2410B0588();
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = (uint64_t *)&v25[*(int *)(v23 + 56)];
  sub_2410AFD80(a1, (uint64_t)v25);
  sub_2410AFD80(a2, (uint64_t)v26);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2410AFD80((uint64_t)v25, (uint64_t)v19);
      uint64_t v30 = *v19;
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_14;
      }
      char v31 = sub_241132C00(v30, *v26);
      goto LABEL_11;
    case 2u:
      sub_2410AFD80((uint64_t)v25, (uint64_t)v16);
      sub_2410AFE20(0, &qword_268CF06D8, &qword_26B006F18, MEMORY[0x263F44C90]);
      uint64_t v33 = *(int *)(v32 + 48);
      unint64_t v34 = *(void *)&v16[v33];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v54);
        goto LABEL_16;
      }
      uint64_t v35 = *(uint64_t *)((char *)v26 + v33);
      uint64_t v36 = v55;
      unint64_t v37 = v53;
      unint64_t v38 = v26;
      uint64_t v39 = v54;
      (*(void (**)(char *, uint64_t *, uint64_t))(v55 + 32))(v53, v38, v54);
      sub_2410B10CC((unint64_t *)&qword_268CF09A0, MEMORY[0x263F090E8]);
      sub_241161460();
      uint64_t v40 = v56;
      uint64_t v41 = *(void (**)(char *, uint64_t))(v36 + 8);
      v41(v16, v39);
      if (v40)
      {
        v41(v37, v39);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      uint64_t v43 = sub_241131DE8(v34, v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41(v37, v39);
      uint64_t v44 = type metadata accessor for MedicationDaySummaryViewModelChange;
      break;
    case 3u:
      sub_2410AFD80((uint64_t)v25, (uint64_t)v13);
      uint64_t v42 = *v13;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      char v31 = sub_241132054(v42, *v26);
LABEL_11:
      LOBYTE(v43) = v31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = type metadata accessor for MedicationDaySummaryViewModelChange;
      break;
    case 4u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v44 = type metadata accessor for MedicationDaySummaryViewModelChange;
      if (EnumCaseMultiPayload != 4) {
        goto LABEL_16;
      }
      LOBYTE(v43) = 1;
      break;
    default:
      sub_2410AFD80((uint64_t)v25, (uint64_t)v21);
      sub_2410AFE20(0, &qword_268CF06E0, &qword_26B006F10, MEMORY[0x263F44C70]);
      uint64_t v28 = *(int *)(v27 + 48);
      unint64_t v29 = *(void *)&v21[v28];
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v54);
LABEL_16:
        LOBYTE(v43) = 0;
        uint64_t v44 = (uint64_t (*)(void))sub_2410B0588;
      }
      else
      {
        uint64_t v47 = *(uint64_t *)((char *)v26 + v28);
        uint64_t v48 = v55;
        unint64_t v49 = v26;
        uint64_t v50 = v54;
        (*(void (**)(char *, uint64_t *, uint64_t))(v55 + 32))(v9, v49, v54);
        sub_2410B10CC((unint64_t *)&qword_268CF09A0, MEMORY[0x263F090E8]);
        sub_241161460();
        uint64_t v51 = v56;
        unint64_t v52 = *(void (**)(char *, uint64_t))(v48 + 8);
        v52(v21, v50);
        if (v51)
        {
          v52(v9, v50);
          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRelease();
          LOBYTE(v43) = 0;
          uint64_t v44 = type metadata accessor for MedicationDaySummaryViewModelChange;
        }
        else
        {
          uint64_t v43 = sub_241131DA0(v29, v47);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v52(v9, v50);
          uint64_t v44 = type metadata accessor for MedicationDaySummaryViewModelChange;
        }
      }
      break;
  }
  sub_2410B05EC((uint64_t)v25, v44);
  return v43 & 1;
}

void sub_2410B0588()
{
  if (!qword_268CF15D0)
  {
    type metadata accessor for MedicationDaySummaryViewModelChange(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF15D0);
    }
  }
}

uint64_t sub_2410B05EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2410B064C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v89 = a3;
  uint64_t v7 = sub_24115CB50();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v96 = v7;
  uint64_t v97 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v95 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (void *)((char *)v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v104 = MEMORY[0x263F8EE88];
  uint64_t v14 = *(void *)(a4 + 16);
  unint64_t v88 = (unint64_t)a1 >> 62;
  uint64_t v100 = a1;
  if (!v14)
  {
LABEL_71:
    if (!v88)
    {
      uint64_t v73 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v73)
      {
LABEL_73:
        uint64_t v102 = MEMORY[0x263F8EE78];
        sub_2410E58BC(0, v73 & ~(v73 >> 63), 0);
        if (v73 < 0)
        {
          __break(1u);
          JUMPOUT(0x2410B1054);
        }
        uint64_t v74 = 0;
        uint64_t v75 = v102;
        unint64_t v76 = a1 & 0xC000000000000001;
        uint64_t v77 = v95;
        do
        {
          if (v76) {
            MEMORY[0x245617450](v74, v100);
          }
          else {
            swift_retain();
          }
          unint64_t v78 = (void *)sub_24115F150();
          id v79 = objc_msgSend(v78, sel_UUID);

          sub_24115CB30();
          swift_release();

          uint64_t v102 = v75;
          unint64_t v81 = *(void *)(v75 + 16);
          unint64_t v80 = *(void *)(v75 + 24);
          if (v81 >= v80 >> 1)
          {
            sub_2410E58BC(v80 > 1, v81 + 1, 1);
            uint64_t v75 = v102;
          }
          ++v74;
          *(void *)(v75 + 16) = v81 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v97 + 32))(v75+ ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80))+ *(void *)(v97 + 72) * v81, v77, v96);
        }
        while (v73 != v74);
        swift_bridgeObjectRelease();
        goto LABEL_87;
      }
LABEL_86:
      swift_bridgeObjectRelease();
      uint64_t v75 = MEMORY[0x263F8EE78];
LABEL_87:
      uint64_t v82 = sub_2410DF4C0(v75);
      swift_bridgeObjectRelease();
      char v83 = sub_2410A6CC0(v104, v82);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v72 = v83 ^ 1;
      return v72 & 1;
    }
LABEL_85:
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_2411616E0();
    if (v73) {
      goto LABEL_73;
    }
    goto LABEL_86;
  }
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v93 = *(void *)(v11 + 72);
  uint64_t v94 = a4 + ((v15 + 32) & ~v15);
  uint64_t v16 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v87 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v16 = a2;
  }
  v85[1] = v16;
  unint64_t v101 = a2 & 0xC000000000000001;
  uint64_t v17 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v86 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 < 0) {
    uint64_t v17 = a1;
  }
  v85[0] = v17;
  unint64_t v99 = a1 & 0xC000000000000001;
  v85[2] = a4;
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  os_log_type_t v91 = v13;
  uint64_t v92 = v10;
  uint64_t v90 = v14;
  while (2)
  {
    a1 = v18 + 1;
    sub_2410AFD80(v94 + v93 * v18, (uint64_t)v13);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v98 = a1;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_2411301D8(*v13);
        goto LABEL_9;
      case 2:
        BOOL v19 = (uint64_t (*)(uint64_t))MEMORY[0x263F44C90];
        uint64_t v20 = (unint64_t *)&unk_268CF06D8;
        id v21 = &qword_26B006F18;
        goto LABEL_8;
      case 3:
        uint64_t v24 = *v13;
        if ((unint64_t)*v13 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v25 = sub_2411616E0();
          if (!v25)
          {
LABEL_57:
            uint64_t v27 = (void *)MEMORY[0x263F8EE78];
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v25) {
            goto LABEL_57;
          }
        }
        if (v25 < 1)
        {
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
          goto LABEL_85;
        }
        uint64_t v26 = 0;
        uint64_t v27 = (void *)MEMORY[0x263F8EE78];
        do
        {
          if ((v24 & 0xC000000000000001) != 0) {
            id v28 = (id)MEMORY[0x245617450](v26, v24);
          }
          else {
            id v28 = *(id *)(v24 + 8 * v26 + 32);
          }
          unint64_t v29 = v28;
          id v30 = objc_msgSend(v28, sel_semanticIdentifier);
          id v31 = objc_msgSend(v30, sel_stringValue);

          uint64_t v32 = sub_241160730();
          uint64_t v34 = v33;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v27 = sub_241051F68(0, v27[2] + 1, 1, v27);
          }
          unint64_t v36 = v27[2];
          unint64_t v35 = v27[3];
          if (v36 >= v35 >> 1) {
            uint64_t v27 = sub_241051F68((void *)(v35 > 1), v36 + 1, 1, v27);
          }
          ++v26;
          void v27[2] = v36 + 1;
          unint64_t v37 = &v27[2 * v36];
          v37[4] = v32;
          v37[5] = v34;
        }
        while (v25 != v26);
LABEL_58:
        swift_bridgeObjectRelease_n();
        char v65 = sub_2410AFBF0((uint64_t)v27, v89);
        swift_bridgeObjectRelease();
        uint64_t v13 = v91;
        uint64_t v14 = v90;
        if ((v65 & 1) == 0) {
          goto LABEL_69;
        }
        goto LABEL_9;
      case 4:
        if (!((unint64_t)a2 >> 62))
        {
          uint64_t v38 = *(void *)(v87 + 16);
          if (v38)
          {
            swift_bridgeObjectRetain();
            goto LABEL_29;
          }
LABEL_9:
          uint64_t v18 = v98;
          a1 = v100;
          if (v98 == v14)
          {
            swift_bridgeObjectRelease();
            goto LABEL_71;
          }
          continue;
        }
        swift_bridgeObjectRetain();
        uint64_t v66 = sub_2411616E0();
        swift_bridgeObjectRelease();
        if (!v66) {
          goto LABEL_9;
        }
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_2411616E0();
        if (!v38)
        {
          swift_bridgeObjectRelease();
          uint64_t v40 = MEMORY[0x263F8EE78];
          goto LABEL_38;
        }
LABEL_29:
        uint64_t v102 = MEMORY[0x263F8EE78];
        sub_24102A550(0, v38 & ~(v38 >> 63), 0);
        if (v38 < 0) {
          goto LABEL_83;
        }
        uint64_t v39 = 0;
        uint64_t v40 = v102;
        do
        {
          if (v101) {
            MEMORY[0x245617450](v39, a2);
          }
          else {
            swift_retain();
          }
          uint64_t v41 = (void *)sub_24115F210();
          id v42 = objc_msgSend(v41, sel_identifier);

          uint64_t v43 = sub_241160730();
          uint64_t v45 = v44;
          swift_release();

          uint64_t v102 = v40;
          unint64_t v47 = *(void *)(v40 + 16);
          unint64_t v46 = *(void *)(v40 + 24);
          if (v47 >= v46 >> 1)
          {
            sub_24102A550(v46 > 1, v47 + 1, 1);
            uint64_t v40 = v102;
          }
          ++v39;
          *(void *)(v40 + 16) = v47 + 1;
          uint64_t v48 = v40 + 16 * v47;
          *(void *)(v48 + 32) = v43;
          *(void *)(v48 + 40) = v45;
        }
        while (v38 != v39);
        swift_bridgeObjectRelease();
LABEL_38:
        uint64_t v103 = sub_241160BD0();
        uint64_t v49 = *(void *)(v40 + 16);
        if (v49)
        {
          uint64_t v50 = (uint64_t *)(v40 + 40);
          do
          {
            uint64_t v51 = *(v50 - 1);
            uint64_t v52 = *v50;
            swift_bridgeObjectRetain();
            sub_2410257B0(&v102, v51, v52);
            swift_bridgeObjectRelease();
            v50 += 2;
            --v49;
          }
          while (v49);
        }
        swift_bridgeObjectRelease();
        uint64_t v53 = v103;
        if (v88)
        {
          a1 = v100;
          swift_bridgeObjectRetain_n();
          uint64_t v54 = sub_2411616E0();
          if (!v54) {
            goto LABEL_64;
          }
LABEL_43:
          if (v54 < 1) {
            goto LABEL_84;
          }
          uint64_t v55 = 0;
          uint64_t v56 = (void *)MEMORY[0x263F8EE78];
          do
          {
            if (v99) {
              MEMORY[0x245617450](v55, a1);
            }
            else {
              swift_retain();
            }
            unint64_t v57 = (void *)sub_24115F150();
            id v58 = objc_msgSend(v57, sel_scheduleItemIdentifier);

            if (v58)
            {
              uint64_t v59 = sub_241160730();
              uint64_t v61 = v60;
              swift_release();

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v56 = sub_241051F68(0, v56[2] + 1, 1, v56);
              }
              unint64_t v63 = v56[2];
              unint64_t v62 = v56[3];
              if (v63 >= v62 >> 1) {
                uint64_t v56 = sub_241051F68((void *)(v62 > 1), v63 + 1, 1, v56);
              }
              _OWORD v56[2] = v63 + 1;
              uint64_t v64 = &v56[2 * v63];
              v64[4] = v59;
              v64[5] = v61;
              a1 = v100;
            }
            else
            {
              swift_release();
            }
            ++v55;
          }
          while (v54 != v55);
        }
        else
        {
          uint64_t v54 = *(void *)(v86 + 16);
          a1 = v100;
          swift_bridgeObjectRetain_n();
          if (v54) {
            goto LABEL_43;
          }
LABEL_64:
          uint64_t v56 = (void *)MEMORY[0x263F8EE78];
        }
        swift_bridgeObjectRelease_n();
        uint64_t v103 = sub_241160BD0();
        uint64_t v67 = v56[2];
        if (v67)
        {
          uint64_t v68 = v56 + 5;
          do
          {
            uint64_t v69 = *(v68 - 1);
            uint64_t v70 = *v68;
            swift_bridgeObjectRetain();
            sub_2410257B0(&v102, v69, v70);
            swift_bridgeObjectRelease();
            v68 += 2;
            --v67;
          }
          while (v67);
        }
        swift_bridgeObjectRelease();
        char v71 = sub_2411309EC(v103, v53);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = v91;
        uint64_t v14 = v90;
        if (v71) {
          goto LABEL_9;
        }
LABEL_69:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v72 = 1;
        return v72 & 1;
      default:
        BOOL v19 = (uint64_t (*)(uint64_t))MEMORY[0x263F44C70];
        uint64_t v20 = (unint64_t *)&unk_268CF06E0;
        id v21 = &qword_26B006F10;
LABEL_8:
        sub_2410AFE20(0, v20, v21, v19);
        swift_bridgeObjectRelease();
        uint64_t v22 = sub_2411605E0();
        (*(void (**)(uint64_t *, uint64_t))(*(void *)(v22 - 8) + 8))(v13, v22);
        goto LABEL_9;
    }
  }
}

uint64_t *sub_2410B1068(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_2410B10CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2410B1114()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2410B114C(uint64_t a1)
{
  return sub_2410A7588(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_2410B1154()
{
  return sub_2410A7D8C();
}

uint64_t sub_2410B1160(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_24115C810() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(*(void *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + v9;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[1] = sub_24102A258;
  return sub_2410A7F24(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_2410B12E0()
{
  uint64_t v1 = sub_24115C810();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v5 + v9) & ~v9;
  uint64_t v11 = v10 + *(void *)(v8 + 64);
  uint64_t v12 = v3 | v9 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v7);

  return MEMORY[0x270FA0238](v0, v11, v12);
}

uint64_t sub_2410B145C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_24115C810() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(*(void *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + v9;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[1] = sub_24100B740;
  return sub_2410AE11C(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_2410B15D8()
{
  sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 40) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);

  return MEMORY[0x270FA0238](v0, v6, v7);
}

uint64_t sub_2410B16C8(uint64_t a1)
{
  sub_2410B17E0(0, &qword_26B006F60, MEMORY[0x263F8F690]);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *unint64_t v9 = v2;
  v9[1] = sub_24102A258;
  return sub_2410AEEA8(a1, v5, v6, v7, v8);
}

void sub_2410B17E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_2410AFEBC(255, &qword_26B006F08, type metadata accessor for MedicationDaySummaryViewModelChange, MEMORY[0x263F8D488]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_24102A354();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2410B1888(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241024708(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_2410B18F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_2410B1888(255, (unint64_t *)&qword_26B007308, (unint64_t *)&qword_26B007360, 0x263F44C18, MEMORY[0x263F8D488]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_2410B197C(uint64_t a1)
{
}

void sub_2410B19A4(uint64_t a1)
{
}

void sub_2410B19CC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_2411605E0();
    sub_2410AFEBC(255, a3, a4, MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v8) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_2410B1A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410B1AD0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2410AFEBC(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_2410B1B50()
{
  if (!qword_26B006F40)
  {
    sub_2410B1888(255, &qword_26B006F28, &qword_26B006FC0, 0x263F44C00, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241160AB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006F40);
    }
  }
}

void sub_2410B1BD4()
{
  if (!qword_26B006F30)
  {
    sub_2410B1888(255, &qword_26B006F28, &qword_26B006FC0, 0x263F44C00, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241160AA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006F30);
    }
  }
}

void sub_2410B1C58(uint64_t a1)
{
}

void sub_2410B1C8C()
{
  if (!qword_26B006EE0)
  {
    sub_2410B1888(255, &qword_26B006ED8, (unint64_t *)&unk_26B007368, 0x263F0A6B8, MEMORY[0x263F09020]);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006EE0);
    }
  }
}

unint64_t sub_2410B1D10()
{
  unint64_t result = qword_268CF1640;
  if (!qword_268CF1640)
  {
    sub_2410B1888(255, &qword_26B006EE8, (unint64_t *)&unk_26B007368, 0x263F0A6B8, MEMORY[0x263F09028]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1640);
  }
  return result;
}

uint64_t *sub_2410B1D94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_2411605E0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        sub_2410AFE20(0, &qword_268CF06E0, &qword_26B006F10, MEMORY[0x263F44C70]);
        *(uint64_t *)((char *)a1 + *(int *)(v8 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 48));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v11 = sub_2411605E0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        sub_2410AFE20(0, &qword_268CF06D8, &qword_26B006F18, MEMORY[0x263F44C90]);
        *(uint64_t *)((char *)a1 + *(int *)(v12 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 48));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_2410B1FCC(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_2411605E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      uint64_t v4 = &qword_268CF06E0;
      int v5 = &qword_26B006F10;
      uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F44C70];
      goto LABEL_4;
    case 1:
    case 3:
      goto LABEL_5;
    case 2:
      uint64_t v7 = sub_2411605E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      uint64_t v4 = &qword_268CF06D8;
      int v5 = &qword_26B006F18;
      uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F44C90];
LABEL_4:
      sub_2410AFE20(0, v4, v5, v6);
LABEL_5:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *sub_2410B2114(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_2411605E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      sub_2410AFE20(0, &qword_268CF06E0, &qword_26B006F10, MEMORY[0x263F44C70]);
      *(void *)((char *)a1 + *(int *)(v7 + 48)) = *(void *)((char *)a2 + *(int *)(v7 + 48));
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 1u:
    case 3u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 2u:
      uint64_t v8 = sub_2411605E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      sub_2410AFE20(0, &qword_268CF06D8, &qword_26B006F18, MEMORY[0x263F44C90]);
      *(void *)((char *)a1 + *(int *)(v9 + 48)) = *(void *)((char *)a2 + *(int *)(v9 + 48));
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_2410B22FC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2410B05EC((uint64_t)a1, type metadata accessor for MedicationDaySummaryViewModelChange);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_2411605E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        sub_2410AFE20(0, &qword_268CF06E0, &qword_26B006F10, MEMORY[0x263F44C70]);
        *(void *)((char *)a1 + *(int *)(v7 + 48)) = *(void *)((char *)a2 + *(int *)(v7 + 48));
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 1u:
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 2u:
        uint64_t v8 = sub_2411605E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        sub_2410AFE20(0, &qword_268CF06D8, &qword_26B006F18, MEMORY[0x263F44C90]);
        *(void *)((char *)a1 + *(int *)(v9 + 48)) = *(void *)((char *)a2 + *(int *)(v9 + 48));
        swift_bridgeObjectRetain();
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_2410B2508(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = sub_2411605E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    sub_2410AFE20(0, &qword_268CF06D8, &qword_26B006F18, MEMORY[0x263F44C90]);
    *(void *)&a1[*(int *)(v10 + 48)] = *(void *)&a2[*(int *)(v10 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_2411605E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    sub_2410AFE20(0, &qword_268CF06E0, &qword_26B006F10, MEMORY[0x263F44C70]);
    *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_2410B2684(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2410B05EC((uint64_t)a1, type metadata accessor for MedicationDaySummaryViewModelChange);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = sub_2411605E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      sub_2410AFE20(0, &qword_268CF06D8, &qword_26B006F18, MEMORY[0x263F44C90]);
      *(void *)&a1[*(int *)(v10 + 48)] = *(void *)&a2[*(int *)(v10 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_2411605E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      sub_2410AFE20(0, &qword_268CF06E0, &qword_26B006F10, MEMORY[0x263F44C70]);
      *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_2410B2824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_2410B284C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_2410B2878()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2410B2888()
{
  uint64_t result = sub_2411605E0();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = MEMORY[0x263F8CF50] + 64;
    swift_getTupleTypeLayout2();
    int v5 = &v4;
    uint64_t v6 = v2;
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v3;
    uint64_t v8 = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for MedicationsDoseRemindersItem()
{
  uint64_t result = qword_268CF1668;
  if (!qword_268CF1668) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410B299C()
{
  return swift_initClassMetadata2();
}

void sub_2410B29F4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_2410B2A5C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24115F790();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(v2 + qword_268CF1660);
  if (v8 == 1)
  {
    sub_24115F750();
    uint64_t v9 = sub_24115F780();
    os_log_type_t v10 = sub_241160D50();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v20 = a1;
      uint64_t v12 = (uint8_t *)v11;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v22 = v19;
      *(_DWORD *)uint64_t v12 = 136315138;
      v18[1] = v12 + 4;
      uint64_t v13 = sub_241161A00();
      uint64_t v21 = sub_24101F0A4(v13, v14, &v22);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v9, v10, "[%s]: Showing notifications disabled alert", v12, 0xCu);
      uint64_t v15 = v19;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v15, -1, -1);
      uint64_t v16 = v12;
      a1 = v20;
      MEMORY[0x2456180C0](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_2410B2C94(a1);
  }
  return v8 ^ 1u;
}

void sub_2410B2C94(void *a1)
{
  id v26 = a1;
  uint64_t v22 = *v1;
  uint64_t v2 = sub_24115F790();
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  sub_24115C960();
  uint64_t v4 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v4, v5, 1, v22);

  sub_24115C960();
  uint64_t v7 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  int v8 = self;
  id v9 = objc_msgSend(v8, sel_actionWithTitle_style_handler_, v7, 1, 0);

  objc_msgSend(v6, sel_addAction_, v9);
  sub_24115C960();
  os_log_type_t v10 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  aBlock[4] = (uint64_t)sub_2410B31E8;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2410B29F4;
  uint64_t aBlock[3] = (uint64_t)&unk_26F5561F0;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  id v12 = objc_msgSend(v8, sel_actionWithTitle_style_handler_, v10, 0, v11);
  _Block_release(v11);

  objc_msgSend(v6, sel_addAction_, v12);
  objc_msgSend(v6, sel_setPreferredAction_, v12);
  id v13 = objc_msgSend(v26, sel_viewController);
  if (v13)
  {
    unint64_t v14 = v13;
    objc_msgSend(v13, sel_presentViewController_animated_completion_, v6, 1, 0);
  }
  else
  {
    uint64_t v15 = v25;
    sub_24115F750();
    uint64_t v16 = sub_24115F780();
    os_log_type_t v17 = sub_241160D30();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      aBlock[0] = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v20 = sub_241161A00();
      uint64_t v27 = sub_24101F0A4(v20, v21, aBlock);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v16, v17, "[%s]: Could not present alert: No view controller available", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v19, -1, -1);
      MEMORY[0x2456180C0](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v24);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v24);
    }
  }
}

uint64_t sub_2410B31E8()
{
  uint64_t v0 = sub_24115D770();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F43580], v0);
  sub_24115D760();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_2410B32CC()
{
}

uint64_t sub_2410B32FC()
{
  return swift_release();
}

uint64_t sub_2410B330C()
{
  sub_24115E0B0();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2410B335C()
{
  return type metadata accessor for MedicationsDoseRemindersItem();
}

uint64_t sub_2410B3364()
{
  if (sub_24115EFD0()) {
    char v1 = *(unsigned char *)(v0 + qword_268CF1660) ^ 1;
  }
  else {
    char v1 = 0;
  }
  return v1 & 1;
}

uint64_t sub_2410B33C0(uint64_t a1, char a2)
{
  *(void *)(v2 + qword_268CF1658) = a1;
  *(unsigned char *)(v2 + qword_268CF1660) = a2;
  uint64_t v3 = qword_26B007268;
  swift_retain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24115C960();

  return MEMORY[0x270F339E8](0, v5, v4, 0, 0, 0);
}

void sub_2410B34A0(char a1)
{
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F720();
  id v6 = sub_24115F780();
  os_log_type_t v7 = sub_241160D50();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v21 = v2;
    uint64_t v9 = v8;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v23 = v20;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = sub_241161A00();
    uint64_t v22 = sub_24101F0A4(v10, v11, &v23);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    if (a1) {
      uint64_t v12 = 28271;
    }
    else {
      uint64_t v12 = 6710895;
    }
    if (a1) {
      unint64_t v13 = 0xE200000000000000;
    }
    else {
      unint64_t v13 = 0xE300000000000000;
    }
    uint64_t v22 = sub_24101F0A4(v12, v13, &v23);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v6, v7, "[%s]: Notification setting switch toggled to %s", (uint8_t *)v9, 0x16u);
    uint64_t v14 = v20;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v14, -1, -1);
    MEMORY[0x2456180C0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_24115EFE0();
  uint64_t v15 = (void *)*MEMORY[0x263F44BB0];
  sub_2410B37D8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24116B370;
  *(void *)(inited + 32) = sub_241160730();
  *(void *)(inited + 40) = v17;
  id v18 = v15;
  sub_241025580(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v19 = (void *)sub_241160BB0();
  swift_bridgeObjectRelease();
  HKSynchronizeNanoPreferencesUserDefaults();
}

void sub_2410B37D8()
{
  if (!qword_26B007390)
  {
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B007390);
    }
  }
}

uint64_t SharedMedicationsChartCellDataSource.layout(for:environment:)()
{
  uint64_t v0 = sub_24115DC40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115DC30();
  uint64_t v4 = sub_24115DC10();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void SharedMedicationsChartCellDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void SharedMedicationsChartCellDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_2410B3968()
{
  return sub_24104F3E8(v0 + qword_268CF28E8);
}

uint64_t SharedMedicationsChartCellDataSource.deinit()
{
  uint64_t v0 = sub_24115D620();
  sub_24104F3E8(v0 + qword_268CF28E8);
  return v0;
}

uint64_t SharedMedicationsChartCellDataSource.__deallocating_deinit()
{
  uint64_t v0 = sub_24115D620();
  sub_24104F3E8(v0 + qword_268CF28E8);

  return swift_deallocClassInstance();
}

uint64_t sub_2410B3A24()
{
  uint64_t v0 = sub_24115DC40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115DC30();
  uint64_t v4 = sub_24115DC10();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_2410B3AFC()
{
  return sub_24115E790();
}

Swift::Void __swiftcall SharedMedicationsChartCellDataSource.registerCells(for:)(UICollectionView *a1)
{
}

unint64_t sub_2410B3B94()
{
  unint64_t result = qword_268CF1678;
  if (!qword_268CF1678)
  {
    type metadata accessor for SharedMedicationsChartCellDataSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1678);
  }
  return result;
}

uint64_t type metadata accessor for SharedMedicationsChartCellDataSource()
{
  uint64_t result = qword_268CF1680;
  if (!qword_268CF1680) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410B3C38()
{
  return sub_241160DE0();
}

uint64_t sub_2410B3C70()
{
  uint64_t result = type metadata accessor for SharedMedicationsFeedItemData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2410B3D08()
{
  return type metadata accessor for SharedMedicationsChartCellDataSource();
}

uint64_t sub_2410B3D10(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x676E6972616873;
  }
  else {
    uint64_t v2 = 0x7972616D697270;
  }
  if (a2) {
    uint64_t v3 = 0x676E6972616873;
  }
  else {
    uint64_t v3 = 0x7972616D697270;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_241161890();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_2410B3D90(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x756F636341646461;
  }
  else {
    uint64_t v3 = 0x6E53646572616873;
  }
  if (v2) {
    unint64_t v4 = 0xED00007465707069;
  }
  else {
    unint64_t v4 = 0xEA0000000000746ELL;
  }
  if (a2) {
    uint64_t v5 = 0x756F636341646461;
  }
  else {
    uint64_t v5 = 0x6E53646572616873;
  }
  if (a2) {
    unint64_t v6 = 0xEA0000000000746ELL;
  }
  else {
    unint64_t v6 = 0xED00007465707069;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_241161890();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2410B3E48()
{
  return sub_241160960();
}

uint64_t sub_2410B3ED8()
{
  return sub_241160940();
}

uint64_t sub_2410B3F58(void *a1)
{
  sub_2410C4BE0(0, &qword_26B005EE0, (uint64_t (*)(void))sub_2410C4B1C, (uint64_t)&type metadata for SharedMedicationsChartSeries.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v9 - v6;
  sub_24101A6BC(a1, a1[3]);
  sub_2410C4B1C();
  sub_2411619D0();
  char v11 = 0;
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  sub_2410C4C48();
  sub_2411617F0();
  if (!v1)
  {
    type metadata accessor for SharedMedicationsChartSeries(0);
    char v10 = 1;
    sub_2411617F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2410B4134()
{
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v15 - v4;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v15 - v10;
  sub_241161950();
  sub_2410BECF0(v0, (uint64_t)v11, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v12(v11, 1, v2) == 1)
  {
    sub_241161970();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_241161970();
    sub_2410C1844();
    sub_241160660();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v13 = type metadata accessor for SharedMedicationsChartSeries(0);
  sub_2410BECF0(v0 + *(int *)(v13 + 20), (uint64_t)v9, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  if (v12(v9, 1, v2) == 1)
  {
    sub_241161970();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    sub_241161970();
    sub_2410C1844();
    sub_241160660();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_2411619A0();
}

uint64_t sub_2410B441C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v19 = (char *)&v17 - v7;
  sub_2410C4BE0(0, &qword_268CF17E0, (uint64_t (*)(void))sub_2410C4B1C, (uint64_t)&type metadata for SharedMedicationsChartSeries.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v20 = *(void *)(v8 - 8);
  uint64_t v21 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = type metadata accessor for SharedMedicationsChartSeries(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24101A6BC(a1, a1[3]);
  sub_2410C4B1C();
  uint64_t v14 = v22;
  sub_2411619C0();
  if (v14) {
    return sub_24101F178((uint64_t)a1);
  }
  uint64_t v22 = v11;
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  char v24 = 0;
  sub_2410C4B70();
  uint64_t v15 = (uint64_t)v19;
  sub_241161790();
  sub_2410BEEEC(v15, (uint64_t)v13, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  char v23 = 1;
  sub_241161790();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v21);
  sub_2410BEEEC((uint64_t)v6, (uint64_t)&v13[*(int *)(v22 + 20)], (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  sub_2410BF098((uint64_t)v13, v18, type metadata accessor for SharedMedicationsChartSeries);
  sub_24101F178((uint64_t)a1);
  return sub_2410C4A00((uint64_t)v13, type metadata accessor for SharedMedicationsChartSeries);
}

uint64_t sub_2410B47F4()
{
  return sub_241160960();
}

uint64_t sub_2410B4884()
{
  return sub_241160940();
}

BOOL sub_2410B4904(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2410B491C()
{
  if (*v0) {
    return 0x68746E6F4D786973;
  }
  else {
    return 0x74614468746E6F6DLL;
  }
}

uint64_t sub_2410B4968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2410C5488(a1, a2);
  *a3 = result;
  return result;
}

void sub_2410B4990(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2410B499C(uint64_t a1)
{
  unint64_t v2 = sub_2410C4B1C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2410B49D8(uint64_t a1)
{
  unint64_t v2 = sub_2410C4B1C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2410B4A14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2410B441C(a1, a2);
}

uint64_t sub_2410B4A2C(void *a1)
{
  return sub_2410B3F58(a1);
}

uint64_t sub_2410B4A48(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v16 - v6;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v16 - v12;
  uint64_t v17 = v2;
  sub_2410BECF0(v2, (uint64_t)&v16 - v12, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v14(v13, 1, v4) == 1)
  {
    sub_241161970();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
    sub_241161970();
    sub_2410C1844();
    sub_241160660();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_2410BECF0(v17 + *(int *)(v16 + 20), (uint64_t)v11, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  if (v14(v11, 1, v4) == 1) {
    return sub_241161970();
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
  sub_241161970();
  sub_2410C1844();
  sub_241160660();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2410B4D24(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v16 - v6;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v16 - v12;
  sub_241161950();
  sub_2410BECF0(v2, (uint64_t)v13, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v14(v13, 1, v4) == 1)
  {
    sub_241161970();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
    sub_241161970();
    sub_2410C1844();
    sub_241160660();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_2410BECF0(v2 + *(int *)(v16 + 20), (uint64_t)v11, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  if (v14(v11, 1, v4) == 1)
  {
    sub_241161970();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    sub_241161970();
    sub_2410C1844();
    sub_241160660();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_2411619A0();
}

uint64_t sub_2410B5018(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v76 = sub_24115D3B0();
  uint64_t v73 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  unint64_t v63 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410C4CB8(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v72 = (uint64_t)&v59 - v7;
  uint64_t v8 = sub_24115CB10();
  uint64_t v70 = *(void *)(v8 - 8);
  uint64_t v71 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v62 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410C4CB8(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], v5);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v69 = (char *)&v59 - v11;
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v67 = *(void *)(v12 - 8);
  uint64_t v68 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v61 = (char *)&v59 - v13;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v59 - v15;
  sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
  uint64_t v65 = v17;
  uint64_t v75 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v60 = (char *)&v59 - v18;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v59 - v20;
  sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v64 = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v59 = (char *)&v59 - v24;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (char *)&v59 - v26;
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  sub_241160830();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v2 + 48);
  uint64_t v74 = v23;
  sub_241161970();
  if (v28)
  {
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = v75;
  if (*(void *)(v2 + 64))
  {
    sub_241161970();
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
    if (*(void *)(v2 + 80)) {
      goto LABEL_5;
    }
  }
  else
  {
    sub_241161970();
    if (*(void *)(v2 + 80))
    {
LABEL_5:
      sub_241161970();
      swift_bridgeObjectRetain();
      sub_241160830();
      swift_bridgeObjectRelease();
      if (*(void *)(v2 + 96)) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  sub_241161970();
  if (*(void *)(v2 + 96))
  {
LABEL_6:
    sub_241161970();
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
    if (*(void *)(v2 + 112)) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  sub_241161970();
  if (*(void *)(v2 + 112))
  {
LABEL_7:
    sub_241161970();
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
    if (*(void *)(v2 + 128)) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  sub_241161970();
  if (*(void *)(v2 + 128))
  {
LABEL_8:
    sub_241161970();
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
    if (*(void *)(v2 + 144)) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  sub_241161970();
  if (*(void *)(v2 + 144))
  {
LABEL_9:
    sub_241161970();
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
    if (*(void *)(v2 + 160)) {
      goto LABEL_10;
    }
LABEL_18:
    sub_241161970();
    if (*(void *)(v2 + 176)) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_17:
  sub_241161970();
  if (!*(void *)(v2 + 160)) {
    goto LABEL_18;
  }
LABEL_10:
  sub_241161970();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 176))
  {
LABEL_11:
    sub_241161970();
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
LABEL_19:
  sub_241161970();
LABEL_20:
  uint64_t v66 = v16;
  uint64_t v30 = *(void *)(v2 + 184);
  if (v30)
  {
    sub_241161970();
    sub_241161960();
    uint64_t v31 = *(void *)(v30 + 16);
    if (v31)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = v30 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_241160830();
        swift_bridgeObjectRelease();
        v32 += 16;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease();
      uint64_t v29 = v75;
    }
    if (*(void *)(v2 + 200))
    {
LABEL_26:
      sub_241161970();
      swift_bridgeObjectRetain();
      sub_241160830();
      swift_bridgeObjectRelease();
      if (*(void *)(v2 + 216)) {
        goto LABEL_27;
      }
LABEL_31:
      sub_241161970();
      if (*(void *)(v2 + 232)) {
        goto LABEL_28;
      }
      goto LABEL_32;
    }
  }
  else
  {
    sub_241161970();
    if (*(void *)(v2 + 200)) {
      goto LABEL_26;
    }
  }
  sub_241161970();
  if (!*(void *)(v2 + 216)) {
    goto LABEL_31;
  }
LABEL_27:
  sub_241161970();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 232))
  {
LABEL_28:
    sub_241161970();
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
LABEL_32:
  sub_241161970();
LABEL_33:
  if (*(unsigned char *)(v2 + 240) != 2) {
    sub_241161970();
  }
  sub_241161970();
  if (*(void *)(v2 + 256))
  {
    sub_241161970();
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_241161970();
  }
  if (*(unsigned char *)(v2 + 264) != 2) {
    sub_241161970();
  }
  sub_241161970();
  if (*(void *)(v2 + 280))
  {
    sub_241161970();
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_241161970();
  }
  if (*(void *)(v2 + 296))
  {
    sub_241161970();
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_241161970();
  }
  if (*(unsigned char *)(v2 + 312) == 1)
  {
    sub_241161970();
  }
  else
  {
    sub_241161970();
    sub_241161990();
  }
  if (*(unsigned char *)(v2 + 328) == 1)
  {
    sub_241161970();
  }
  else
  {
    sub_241161970();
    sub_241161990();
  }
  uint64_t v33 = (uint64_t)v66;
  uint64_t v34 = v64;
  unint64_t v35 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  sub_2410BECF0(v2 + v35[27], (uint64_t)v27, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v36 = v74;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v27, 1, v34) == 1)
  {
    sub_241161970();
  }
  else
  {
    unint64_t v37 = v21;
    uint64_t v38 = v29;
    uint64_t v39 = v59;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v59, v27, v34);
    sub_241161970();
    sub_2410C10CC();
    sub_241160660();
    uint64_t v40 = v39;
    uint64_t v29 = v38;
    uint64_t v21 = v37;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v40, v34);
  }
  uint64_t v42 = (uint64_t)v69;
  uint64_t v41 = v70;
  uint64_t v43 = v65;
  sub_2410BECF0(v2 + v35[28], (uint64_t)v21, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v21, 1, v43) == 1)
  {
    sub_241161970();
  }
  else
  {
    uint64_t v44 = v41;
    uint64_t v45 = v60;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v60, v21, v43);
    uint64_t v46 = v29;
    unint64_t v47 = v45;
    sub_241161970();
    sub_2410C1188();
    sub_241160660();
    uint64_t v41 = v44;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v43);
  }
  uint64_t v49 = v67;
  uint64_t v48 = v68;
  sub_2410BECF0(v2 + v35[29], v33, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v33, 1, v48) == 1)
  {
    sub_241161970();
  }
  else
  {
    uint64_t v50 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v61, v33, v48);
    sub_241161970();
    sub_2410C1244();
    sub_241160660();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v48);
  }
  uint64_t v51 = v73;
  uint64_t v52 = v71;
  uint64_t v53 = *(void *)(v2 + v35[30]);
  sub_241161970();
  if (v53)
  {
    swift_bridgeObjectRetain();
    sub_24113BCDC(a1, v53);
    swift_bridgeObjectRelease();
  }
  sub_2410C1300(a1);
  sub_241161970();
  sub_2410C1760(v2 + v35[33], v42, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v42, 1, v52) == 1)
  {
    sub_241161970();
  }
  else
  {
    uint64_t v54 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v62, v42, v52);
    sub_241161970();
    sub_2410C4F98(&qword_268CF1738, MEMORY[0x263F07490]);
    sub_241160660();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v52);
  }
  uint64_t v55 = v72;
  sub_2410C1760(v2 + v35[34], v72, &qword_26B004138, MEMORY[0x263F45780]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v55, 1, v76) == 1) {
    return sub_241161970();
  }
  unint64_t v57 = v63;
  uint64_t v58 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v63, v55, v76);
  sub_241161970();
  sub_2410C4F98(&qword_268CF1740, MEMORY[0x263F45780]);
  sub_241160660();
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v57, v58);
}

unint64_t sub_2410B6040(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x65636E6569647561;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x6572726566657270;
      break;
    case 5:
      unint64_t result = 0x6D614E646E617262;
      break;
    case 6:
      unint64_t result = 0x4E636972656E6567;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0x736F446369736162;
      break;
    case 10:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000019;
      break;
    case 12:
      unint64_t result = 0xD000000000000014;
      break;
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 15:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 16:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 17:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 18:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 19:
      unint64_t result = 0xD000000000000017;
      break;
    case 20:
      unint64_t result = 0xD000000000000016;
      break;
    case 21:
      unint64_t result = 0xD000000000000016;
      break;
    case 22:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 23:
      unint64_t result = 0xD000000000000022;
      break;
    case 24:
      unint64_t result = 0x656C756465686373;
      break;
    case 25:
      unint64_t result = 0x6563655274736F6DLL;
      break;
    case 26:
      unint64_t result = 0x67694868746E6F6DLL;
      break;
    case 27:
      unint64_t result = 0x7265537472616863;
      break;
    case 28:
      unint64_t result = 0x6465766968637261;
      break;
    case 29:
      unint64_t result = 0x746E6176656C6572;
      break;
    case 30:
      unint64_t result = 0x6E6F6973726576;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2410B6388(void *a1)
{
  uint64_t v3 = v1;
  sub_2410C4BE0(0, &qword_26B005EE8, (uint64_t (*)(void))sub_2410BED64, (uint64_t)&type metadata for SharedMedicationsFeedItemData.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  sub_24101A6BC(a1, a1[3]);
  sub_2410BED64();
  sub_2411619D0();
  LOBYTE(v14) = 0;
  sub_241161800();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_241161800();
    LOBYTE(v14) = *(unsigned char *)(v3 + 32);
    char v16 = 2;
    sub_2410BF100();
    sub_241161820();
    LOBYTE(v14) = 3;
    sub_2411617D0();
    LOBYTE(v14) = 4;
    sub_2411617D0();
    LOBYTE(v14) = 5;
    sub_2411617D0();
    LOBYTE(v14) = 6;
    sub_2411617D0();
    LOBYTE(v14) = 7;
    sub_2411617D0();
    LOBYTE(v14) = 8;
    sub_2411617D0();
    LOBYTE(v14) = 9;
    sub_2411617D0();
    LOBYTE(v14) = 10;
    sub_2411617D0();
    LOBYTE(v14) = 11;
    sub_2411617D0();
    uint64_t v14 = *(void *)(v3 + 184);
    char v16 = 12;
    sub_241020618(0, (unint64_t *)&qword_26B005D98, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_2410BF154(&qword_26B005DA0);
    sub_2411617F0();
    LOBYTE(v14) = 13;
    sub_2411617D0();
    LOBYTE(v14) = 14;
    sub_2411617D0();
    LOBYTE(v14) = 15;
    sub_2411617D0();
    LOBYTE(v14) = 16;
    sub_2411617E0();
    LOBYTE(v14) = 17;
    sub_2411617D0();
    LOBYTE(v14) = 18;
    sub_2411617E0();
    LOBYTE(v14) = 19;
    sub_2411617D0();
    LOBYTE(v14) = 20;
    sub_2411617D0();
    char v10 = *(unsigned char *)(v3 + 312);
    uint64_t v14 = *(void *)(v3 + 304);
    char v15 = v10;
    char v16 = 21;
    type metadata accessor for HKMedicationFreeTextFormTypeCode(0);
    sub_2410C4F98(&qword_26B005E80, type metadata accessor for HKMedicationFreeTextFormTypeCode);
    sub_2411617F0();
    char v11 = *(unsigned char *)(v3 + 328);
    uint64_t v14 = *(void *)(v3 + 320);
    char v15 = v11;
    char v16 = 22;
    type metadata accessor for HKMedicationFreeTextLoggingUnitCode(0);
    sub_2410C4F98(&qword_26B005EA8, type metadata accessor for HKMedicationFreeTextLoggingUnitCode);
    sub_2411617F0();
    uint64_t v12 = type metadata accessor for SharedMedicationsFeedItemData(0);
    LOBYTE(v14) = 23;
    sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
    sub_2410BF1D8();
    sub_2411617F0();
    LOBYTE(v14) = 24;
    sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
    sub_2410BF248();
    sub_2411617F0();
    LOBYTE(v14) = 25;
    sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
    sub_2410BF2B8();
    sub_2411617F0();
    uint64_t v14 = *(void *)(v3 + *(int *)(v12 + 120));
    char v16 = 26;
    sub_241020618(0, &qword_26B005D40, (uint64_t)&type metadata for MedicationHighlightsContent, MEMORY[0x263F8D488]);
    sub_2410BF328(&qword_26B005D48, (void (*)(void))sub_2410BF3B8);
    sub_2411617F0();
    LOBYTE(v14) = 27;
    type metadata accessor for SharedMedicationsChartSeries(0);
    sub_2410C4F98(&qword_26B0041A8, (void (*)(uint64_t))type metadata accessor for SharedMedicationsChartSeries);
    sub_2411617F0();
    LOBYTE(v14) = 28;
    sub_241161810();
    LOBYTE(v14) = 29;
    sub_24115CB10();
    sub_2410C4F98(&qword_26B0040E8, MEMORY[0x263F07490]);
    sub_2411617F0();
    LOBYTE(v14) = 30;
    sub_24115D3B0();
    sub_2410C4F98(&qword_26B004130, MEMORY[0x263F45780]);
    sub_2411617F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2410B6CFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v105 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410C4CB8(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v103 = (uint64_t)&v97[-v5];
  sub_2410C4CB8(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], v3);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v106 = &v97[-v7];
  sub_2410C4CB8(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, v3);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v104 = (uint64_t)&v97[-v9];
  sub_2410B9CB8(0, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v97[-v11];
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
  MEMORY[0x270FA5388](v13 - 8);
  char v15 = &v97[-v14];
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = &v97[-v17];
  sub_2410C4BE0(0, &qword_268CF16A8, (uint64_t (*)(void))sub_2410BED64, (uint64_t)&type metadata for SharedMedicationsFeedItemData.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v110 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = &v97[-v21];
  BOOL v111 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  MEMORY[0x270FA5388](v111);
  uint64_t v24 = &v97[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *((void *)v24 + 5) = 0;
  *((void *)v24 + 6) = 0;
  uint64_t v113 = v24;
  uint64_t v25 = a1[3];
  uint64_t v107 = (uint64_t)a1;
  sub_24101A6BC(a1, v25);
  sub_2410BED64();
  uint64_t v108 = v22;
  uint64_t v26 = v112;
  sub_2411619C0();
  if (v26)
  {
    uint64_t v112 = v26;
    LODWORD(v110) = 0;
    unsigned int v30 = 8;
  }
  else
  {
    uint64_t v27 = (uint64_t)v18;
    uint64_t v109 = (uint64_t)v12;
    uint64_t v28 = (uint64_t)v106;
    LOBYTE(v114) = 0;
    uint64_t v29 = sub_2411617A0();
    uint64_t v41 = v113;
    *(void *)uint64_t v113 = v29;
    *((void *)v41 + 1) = v42;
    LOBYTE(v114) = 1;
    *((void *)v41 + 2) = sub_2411617A0();
    *((void *)v41 + 3) = v43;
    char v117 = 2;
    sub_2410BEDB8();
    sub_2411617C0();
    v41[32] = v114;
    LOBYTE(v114) = 3;
    *((void *)v41 + 5) = sub_241161770();
    *((void *)v41 + 6) = v44;
    LOBYTE(v114) = 4;
    *((void *)v41 + 7) = sub_241161770();
    *((void *)v41 + 8) = v45;
    LOBYTE(v114) = 5;
    *((void *)v41 + 9) = sub_241161770();
    *((void *)v41 + 10) = v46;
    LOBYTE(v114) = 6;
    *((void *)v41 + 11) = sub_241161770();
    *((void *)v41 + 12) = v47;
    LOBYTE(v114) = 7;
    *((void *)v41 + 13) = sub_241161770();
    *((void *)v41 + 14) = v48;
    LOBYTE(v114) = 8;
    *((void *)v41 + 15) = sub_241161770();
    *((void *)v41 + 16) = v49;
    LOBYTE(v114) = 9;
    uint64_t v50 = sub_241161770();
    uint64_t v112 = 0;
    uint64_t v51 = v113;
    *((void *)v113 + 17) = v50;
    *((void *)v51 + 18) = v52;
    LOBYTE(v114) = 10;
    uint64_t v53 = sub_241161770();
    uint64_t v112 = 0;
    uint64_t v54 = v113;
    *((void *)v113 + 19) = v53;
    *((void *)v54 + 20) = v55;
    LOBYTE(v114) = 11;
    uint64_t v56 = sub_241161770();
    uint64_t v112 = 0;
    uint64_t v58 = v113;
    *((void *)v113 + 21) = v56;
    *((void *)v58 + 22) = v57;
    sub_241020618(0, (unint64_t *)&qword_26B005D98, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    char v117 = 12;
    sub_2410BF154(&qword_268CF16B8);
    uint64_t v59 = v112;
    sub_241161790();
    uint64_t v112 = v59;
    if (v59)
    {
      (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v108, v110);
      LODWORD(v110) = 0;
      unsigned int v30 = 4091;
    }
    else
    {
      *((void *)v113 + 23) = v114;
      LOBYTE(v114) = 13;
      uint64_t v60 = v112;
      uint64_t v61 = sub_241161770();
      uint64_t v112 = v60;
      if (v60)
      {
        (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v108, v110);
        LODWORD(v110) = 0;
        unsigned int v30 = 8187;
      }
      else
      {
        unint64_t v63 = v113;
        *((void *)v113 + 24) = v61;
        *((void *)v63 + 25) = v62;
        LOBYTE(v114) = 14;
        uint64_t v64 = sub_241161770();
        uint64_t v112 = 0;
        uint64_t v65 = v113;
        *((void *)v113 + 26) = v64;
        *((void *)v65 + 27) = v66;
        LOBYTE(v114) = 15;
        uint64_t v67 = sub_241161770();
        uint64_t v112 = 0;
        uint64_t v68 = v113;
        *((void *)v113 + 28) = v67;
        *((void *)v68 + 29) = v69;
        LOBYTE(v114) = 16;
        char v70 = sub_241161780();
        uint64_t v112 = 0;
        v113[240] = v70;
        LOBYTE(v114) = 17;
        uint64_t v71 = sub_241161770();
        uint64_t v112 = 0;
        uint64_t v72 = v113;
        *((void *)v113 + 31) = v71;
        *((void *)v72 + 32) = v73;
        LOBYTE(v114) = 18;
        char v74 = sub_241161780();
        uint64_t v112 = 0;
        v113[264] = v74;
        LOBYTE(v114) = 19;
        uint64_t v75 = sub_241161770();
        uint64_t v112 = 0;
        uint64_t v76 = v113;
        *((void *)v113 + 34) = v75;
        *((void *)v76 + 35) = v77;
        LOBYTE(v114) = 20;
        uint64_t v78 = sub_241161770();
        uint64_t v112 = 0;
        id v79 = v113;
        *((void *)v113 + 36) = v78;
        *((void *)v79 + 37) = v80;
        type metadata accessor for HKMedicationFreeTextFormTypeCode(0);
        char v117 = 21;
        sub_2410C4F98(&qword_268CF16C0, type metadata accessor for HKMedicationFreeTextFormTypeCode);
        uint64_t v81 = v112;
        sub_241161790();
        uint64_t v112 = v81;
        if (v81) {
          goto LABEL_60;
        }
        uint64_t v82 = v113;
        char v83 = v113 + 312;
        char v84 = v115;
        *((void *)v113 + 38) = v114;
        v82[312] = v84;
        type metadata accessor for HKMedicationFreeTextLoggingUnitCode(0);
        char v117 = 22;
        sub_2410C4F98(&qword_268CF16C8, type metadata accessor for HKMedicationFreeTextLoggingUnitCode);
        uint64_t v85 = v112;
        sub_241161790();
        uint64_t v112 = v85;
        if (v85) {
          goto LABEL_60;
        }
        char v86 = v115;
        *((void *)v113 + 40) = v114;
        v83[16] = v86;
        sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
        LOBYTE(v114) = 23;
        sub_2410BEE0C();
        uint64_t v87 = v112;
        sub_241161790();
        uint64_t v112 = v87;
        if (v87)
        {
LABEL_60:
          unsigned int v30 = 1769467;
          (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v108, v110);
          LODWORD(v110) = 0;
        }
        else
        {
          sub_2410BEEEC(v27, (uint64_t)&v113[v111[27]], (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
          sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
          LOBYTE(v114) = 24;
          sub_2410BEE7C();
          uint64_t v88 = v112;
          sub_241161790();
          uint64_t v112 = v88;
          if (v88)
          {
            (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v108, v110);
            LODWORD(v110) = 0;
            unsigned int v30 = 10158075;
          }
          else
          {
            sub_2410BEEEC((uint64_t)v15, (uint64_t)&v113[v111[28]], (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
            sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
            LOBYTE(v114) = 25;
            sub_2410BEF60();
            uint64_t v89 = v112;
            sub_241161790();
            uint64_t v112 = v89;
            if (v89)
            {
              (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v108, v110);
              LODWORD(v110) = 0;
              unsigned int v30 = 26935291;
            }
            else
            {
              sub_2410BEEEC(v109, (uint64_t)&v113[v111[29]], (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
              sub_241020618(0, &qword_26B005D40, (uint64_t)&type metadata for MedicationHighlightsContent, MEMORY[0x263F8D488]);
              char v117 = 26;
              sub_2410BF328(&qword_268CF16E8, (void (*)(void))sub_2410BEFD0);
              uint64_t v90 = v112;
              sub_241161790();
              uint64_t v112 = v90;
              if (!v90)
              {
                *(void *)&v113[v111[30]] = v114;
                type metadata accessor for SharedMedicationsChartSeries(0);
                LOBYTE(v114) = 27;
                sub_2410C4F98(&qword_268CF16F8, (void (*)(uint64_t))type metadata accessor for SharedMedicationsChartSeries);
                uint64_t v91 = v112;
                sub_241161790();
                LODWORD(v109) = v91 == 0;
                uint64_t v112 = v91;
                if (v91) {
                  goto LABEL_70;
                }
                sub_2410BF024(v104, (uint64_t)&v113[v111[31]], (uint64_t)qword_26B0041E8, (uint64_t)type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2410C4CB8);
                LOBYTE(v114) = 28;
                uint64_t v92 = v112;
                char v93 = sub_2411617B0();
                uint64_t v112 = v92;
                if (v92
                  || (v113[v111[32]] = v93 & 1,
                      sub_24115CB10(),
                      LOBYTE(v114) = 29,
                      sub_2410C4F98(&qword_26B003F08, MEMORY[0x263F07490]),
                      uint64_t v94 = v112,
                      sub_241161790(),
                      (uint64_t v112 = v94) != 0))
                {
LABEL_70:
                  (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v108, v110);
                  LODWORD(v108) = 0;
                }
                else
                {
                  sub_2410BF024(v28, (uint64_t)&v113[v111[33]], (uint64_t)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2410C4CB8);
                  sub_24115D3B0();
                  LOBYTE(v114) = 30;
                  sub_2410C4F98(&qword_268CF1700, MEMORY[0x263F45780]);
                  uint64_t v95 = v112;
                  sub_241161790();
                  uint64_t v112 = v95;
                  if (!v95)
                  {
                    (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v108, v110);
                    uint64_t v96 = (uint64_t)v113;
                    sub_2410BF024(v103, (uint64_t)&v113[v111[34]], (uint64_t)&qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2410C4CB8);
                    sub_2410BF098(v96, v105, type metadata accessor for SharedMedicationsFeedItemData);
                    sub_24101F178(v107);
                    return sub_2410C4A00(v96, type metadata accessor for SharedMedicationsFeedItemData);
                  }
                  (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v108, v110);
                  LODWORD(v108) = 1;
                }
                sub_24101F178(v107);
                uint64_t v31 = v113;
                swift_bridgeObjectRelease();
                LODWORD(v107) = 1;
                LODWORD(v110) = 1;
                LODWORD(v106) = 1;
                LODWORD(v105) = 1;
                LODWORD(v104) = 1;
                int v102 = 1;
                LODWORD(v103) = 1;
                int v116 = 1;
                int v100 = 1;
                int v101 = 1;
                int v98 = 1;
                int v99 = 1;
                int v38 = 1;
                int v37 = 1;
                int v36 = 1;
                int v35 = 1;
                int v34 = 1;
                int v33 = 1;
                LOBYTE(v32) = 1;
LABEL_7:
                swift_bridgeObjectRelease();
                uint64_t result = swift_bridgeObjectRelease();
                if (v32) {
                  goto LABEL_8;
                }
                goto LABEL_31;
              }
              (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v108, v110);
              unsigned int v30 = 60489723;
              LODWORD(v110) = 1;
            }
          }
        }
      }
    }
  }
  uint64_t v31 = v113;
  sub_24101F178(v107);
  int v32 = (v30 >> 4) & 1;
  int v33 = (v30 >> 5) & 1;
  int v34 = (v30 >> 6) & 1;
  int v35 = (v30 >> 7) & 1;
  int v36 = (v30 >> 8) & 1;
  int v37 = (v30 >> 9) & 1;
  int v38 = (v30 >> 10) & 1;
  LODWORD(v106) = HIBYTE(v30) & 1;
  LODWORD(v105) = (v30 >> 23) & 1;
  LODWORD(v104) = (v30 >> 20) & 1;
  int v102 = (v30 >> 15) & 1;
  LODWORD(v103) = (v30 >> 19) & 1;
  int v116 = (v30 >> 17) & 1;
  int v100 = (v30 >> 13) & 1;
  int v101 = (v30 >> 14) & 1;
  int v98 = (v30 >> 11) & 1;
  int v99 = (v30 >> 12) & 1;
  if (v30)
  {
    swift_bridgeObjectRelease();
    if ((v30 & 2) != 0) {
      goto LABEL_6;
    }
  }
  else if ((v30 & 2) != 0)
  {
LABEL_6:
    LODWORD(v108) = 0;
    LODWORD(v109) = 0;
    LODWORD(v107) = 0;
    goto LABEL_7;
  }
  uint64_t result = swift_bridgeObjectRelease();
  LODWORD(v107) = 0;
  LODWORD(v109) = 0;
  LODWORD(v108) = 0;
  if ((v30 & 0x10) != 0)
  {
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v33 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_31:
  if (!v33)
  {
LABEL_9:
    if (v34) {
      goto LABEL_10;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = swift_bridgeObjectRelease();
  if (v34)
  {
LABEL_10:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v35 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
LABEL_33:
  if (!v35)
  {
LABEL_11:
    if (v36) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = swift_bridgeObjectRelease();
  if (v36)
  {
LABEL_12:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v37 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_36;
  }
LABEL_35:
  if (!v37)
  {
LABEL_13:
    uint64_t v40 = v111;
    if (v38) {
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v40 = v111;
  if (v38)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v98 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }
LABEL_37:
  if (!v98)
  {
LABEL_15:
    if (v99) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = swift_bridgeObjectRelease();
  if (v99)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v100 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_39:
  if (!v100)
  {
LABEL_17:
    if (v101) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = swift_bridgeObjectRelease();
  if (v101)
  {
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v102 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
LABEL_41:
  if (!v102)
  {
LABEL_19:
    if (v116) {
      goto LABEL_20;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = swift_bridgeObjectRelease();
  if (v116)
  {
LABEL_20:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v103 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_44;
  }
LABEL_43:
  if (!v103)
  {
LABEL_21:
    if (v104) {
      goto LABEL_22;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = swift_bridgeObjectRelease();
  if (v104)
  {
LABEL_22:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v105 & 1) == 0) {
      goto LABEL_23;
    }
    goto LABEL_46;
  }
LABEL_45:
  if (!v105)
  {
LABEL_23:
    if (v106) {
      goto LABEL_24;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = sub_2410BEC94((uint64_t)&v31[v40[27]], (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  if (v106)
  {
LABEL_24:
    uint64_t result = sub_2410BEC94((uint64_t)&v31[v40[28]], (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
    if ((v110 & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_48;
  }
LABEL_47:
  if (!v110)
  {
LABEL_25:
    if (v107) {
      goto LABEL_26;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = sub_2410BEC94((uint64_t)&v31[v40[29]], (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
  if (v107)
  {
LABEL_26:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v109 & 1) == 0) {
      goto LABEL_27;
    }
LABEL_50:
    uint64_t result = sub_2410251A4((uint64_t)&v31[v40[31]], qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
    if ((v108 & 1) == 0) {
      return result;
    }
    return sub_2410251A4((uint64_t)&v31[v40[33]], (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  }
LABEL_49:
  if (v109) {
    goto LABEL_50;
  }
LABEL_27:
  if (!v108) {
    return result;
  }
  return sub_2410251A4((uint64_t)&v31[v40[33]], (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
}

uint64_t sub_2410B822C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, long long a13, long long a14, long long a15, long long a16, long long a17, long long a18, long long a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,long long a26,long long a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5 & 1;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(_OWORD *)(a9 + 112) = a13;
  *(_OWORD *)(a9 + 128) = a14;
  *(_OWORD *)(a9 + 144) = a15;
  *(_OWORD *)(a9 + 160) = a16;
  *(_OWORD *)(a9 + 176) = a17;
  *(_OWORD *)(a9 + 192) = a18;
  *(_OWORD *)(a9 + 208) = a19;
  *(void *)(a9 + 224) = a20;
  *(void *)(a9 + 232) = a21;
  *(unsigned char *)(a9 + 240) = a22;
  *(void *)(a9 + 248) = a23;
  *(void *)(a9 + 256) = a24;
  *(unsigned char *)(a9 + 264) = a25;
  *(_OWORD *)(a9 + 272) = a26;
  *(_OWORD *)(a9 + 288) = a27;
  *(void *)(a9 + 304) = a28;
  *(unsigned char *)(a9 + 312) = a29 & 1;
  *(void *)(a9 + 320) = a30;
  *(unsigned char *)(a9 + 328) = a31 & 1;
  uint64_t v40 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  sub_2410BEEEC(a32, a9 + v40[27], (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  sub_2410BEEEC(a33, a9 + v40[28], (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
  sub_2410BEEEC(a34, a9 + v40[29], (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
  *(void *)(a9 + v40[30]) = a35;
  uint64_t v41 = MEMORY[0x263F8D8F0];
  sub_2410BF024(a36, a9 + v40[31], (uint64_t)&unk_26B0041E8, (uint64_t)type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2410C4CB8);
  *(unsigned char *)(a9 + v40[32]) = a37;
  sub_2410BF024(a38, a9 + v40[33], (uint64_t)&qword_26B007240, MEMORY[0x263F07490], v41, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2410C4CB8);
  return sub_2410BF024(a39, a9 + v40[34], (uint64_t)&unk_26B004138, MEMORY[0x263F45780], v41, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2410C4CB8);
}

unint64_t sub_2410B8488()
{
  return sub_2410B6040(*v0);
}

uint64_t sub_2410B8490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2410C55AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_2410B84B8(unsigned char *a1@<X8>)
{
  *a1 = 31;
}

uint64_t sub_2410B84C4(uint64_t a1)
{
  unint64_t v2 = sub_2410BED64();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2410B8500(uint64_t a1)
{
  unint64_t v2 = sub_2410BED64();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2410B853C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2410B6CFC(a1, a2);
}

uint64_t sub_2410B8554(void *a1)
{
  return sub_2410B6388(a1);
}

uint64_t sub_2410B856C()
{
  sub_241161950();
  sub_2410B5018((uint64_t)v1);
  return sub_2411619A0();
}

uint64_t sub_2410B85B0()
{
  sub_241161950();
  sub_2410B5018((uint64_t)v1);
  return sub_2411619A0();
}

uint64_t sub_2410B85EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115F140();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410C4CB8(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - v7;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = type metadata accessor for SharedMedicationsFeedItemData(0);
  sub_2410BECF0(v1 + *(int *)(v12 + 116), (uint64_t)v11, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v13) == 1)
  {
    sub_2410BEC94((uint64_t)v11, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
    return 0;
  }
  uint64_t v16 = (void *)sub_2411604D0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
  id v17 = objc_msgSend(v16, sel_doseQuantity);

  if (!v17) {
    return 0;
  }
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  sub_241160B40();
  uint64_t v18 = sub_241161190();
  uint64_t v20 = v19;
  uint64_t v21 = sub_24115CB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 1, 1, v21);
  sub_24115F130();
  sub_2410C4CB8(0, (unint64_t *)&qword_26B007398, (uint64_t (*)(uint64_t))sub_2410C4D1C, MEMORY[0x263F8E0F8]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_24116B200;
  *(void *)(v22 + 56) = sub_241024708(0, &qword_26B007380);
  *(void *)(v22 + 64) = sub_241023228(&qword_268CF17F0, &qword_26B007380);
  *(void *)(v22 + 32) = v17;
  *(void *)(v22 + 96) = MEMORY[0x263F8D310];
  *(void *)(v22 + 104) = sub_2410484D8();
  *(void *)(v22 + 72) = v18;
  *(void *)(v22 + 80) = v20;
  id v23 = v17;
  uint64_t v24 = sub_24115F5B0();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_2410251A4((uint64_t)v8, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
  return v24;
}

uint64_t sub_2410B8A8C(uint64_t a1)
{
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - v4;
  sub_2410BECF0(v1 + *(int *)(a1 + 112), (uint64_t)&v11 - v4, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
  sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_2410BEC94((uint64_t)v5, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
    return 0;
  }
  else
  {
    uint64_t v9 = sub_2411604D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  return v9;
}

uint64_t sub_2410B8C24()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2410B8C54()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2410B8C84()
{
  return *(void *)(v0 + 304);
}

uint64_t sub_2410B8C94()
{
  return *(void *)(v0 + 320);
}

uint64_t sub_2410B8CB0(uint64_t a1, char a2)
{
  return MEMORY[0x270F35450](a1, a2 & 1);
}

uint64_t sub_2410B8CD0()
{
  return 0;
}

uint64_t sub_2410B8CDC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2410B8D0C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2410B8D3C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2410B8D6C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2410B8D9C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2410B8DCC()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2410B8DFC()
{
  uint64_t v1 = *(void *)(v0 + 288);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2410B8E2C(uint64_t a1)
{
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - v4;
  sub_2410BECF0(v1 + *(int *)(a1 + 108), (uint64_t)&v11 - v4, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_2410BEC94((uint64_t)v5, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
    return 0;
  }
  else
  {
    uint64_t v9 = sub_2411604D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  return v9;
}

id sub_2410B8FC0()
{
  return objc_msgSend(v0, sel_hasLatestSupportedVersion);
}

id sub_2410B8FE4(char a1)
{
  return objc_msgSend(v1, sel_setHasLatestSupportedVersion_, a1 & 1);
}

id (*sub_2410B8FF8(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasLatestSupportedVersion);
  return sub_2410B904C;
}

id sub_2410B904C(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasLatestSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_2410B9064()
{
  return objc_msgSend(v0, sel_latestSupportedVersion);
}

id (*sub_2410B9074(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_latestSupportedVersion);
  return sub_2410B90C8;
}

id sub_2410B90C8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setLatestSupportedVersion_, *(void *)a1);
}

id sub_2410B90DC()
{
  return objc_msgSend(v0, sel_hasMinimumSupportedVersion);
}

id sub_2410B9100(char a1)
{
  return objc_msgSend(v1, sel_setHasMinimumSupportedVersion_, a1 & 1);
}

id (*sub_2410B9114(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = objc_msgSend(v1, sel_hasMinimumSupportedVersion);
  return sub_2410B9168;
}

id sub_2410B9168(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasMinimumSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_2410B9180()
{
  return objc_msgSend(v0, sel_minimumSupportedVersion);
}

id (*sub_2410B9190(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_minimumSupportedVersion);
  return sub_2410B91E4;
}

id sub_2410B91E4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setMinimumSupportedVersion_, *(void *)a1);
}

void *sub_2410B91F8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v75 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v75;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    uint64_t v9 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v9;
    uint64_t v10 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v10;
    uint64_t v11 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v11;
    uint64_t v12 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v12;
    uint64_t v13 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v13;
    uint64_t v14 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v14;
    uint64_t v15 = a2[22];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v15;
    uint64_t v16 = a2[24];
    *(void *)(a1 + 184) = a2[23];
    *(void *)(a1 + 192) = v16;
    uint64_t v17 = a2[26];
    *(void *)(a1 + 200) = a2[25];
    *(void *)(a1 + 208) = v17;
    uint64_t v18 = a2[28];
    *(void *)(a1 + 216) = a2[27];
    *(void *)(a1 + 224) = v18;
    *(void *)(a1 + 232) = a2[29];
    *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
    uint64_t v19 = a2[32];
    *(void *)(a1 + 248) = a2[31];
    *(void *)(a1 + 256) = v19;
    *(unsigned char *)(a1 + 264) = *((unsigned char *)a2 + 264);
    uint64_t v20 = a2[35];
    *(void *)(a1 + 272) = a2[34];
    *(void *)(a1 + 280) = v20;
    uint64_t v21 = a2[36];
    uint64_t v22 = a2[37];
    uint64_t v23 = a2[38];
    *(unsigned char *)(a1 + 312) = *((unsigned char *)a2 + 312);
    *(void *)(a1 + 296) = v22;
    *(void *)(a1 + 304) = v23;
    uint64_t v24 = a2[40];
    *(unsigned char *)(a1 + 328) = *((unsigned char *)a2 + 328);
    *(void *)(a1 + 320) = v24;
    uint64_t v25 = a3[27];
    uint64_t v76 = (void *)(a1 + v25);
    char v74 = (char *)a2 + v25;
    *(void *)(a1 + 288) = v21;
    sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
    uint64_t v27 = v26;
    uint64_t v28 = *(void *)(v26 - 8);
    uint64_t v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v73(v74, 1, v27))
    {
      sub_2410B9CB8(0, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
      memcpy(v76, v74, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v28 + 16))(v76, v74, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v76, 0, 1, v27);
    }
    uint64_t v31 = a3[28];
    int v32 = (char *)v4 + v31;
    int v33 = (char *)a2 + v31;
    sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
    uint64_t v35 = v34;
    uint64_t v36 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v33, 1, v34))
    {
      sub_2410B9CB8(0, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
      memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v32, v33, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
    }
    uint64_t v38 = a3[29];
    uint64_t v39 = (char *)v4 + v38;
    uint64_t v40 = (char *)a2 + v38;
    sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
    uint64_t v42 = v41;
    uint64_t v43 = *(void *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v40, 1, v41))
    {
      sub_2410B9CB8(0, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
      memcpy(v39, v40, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v39, v40, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v39, 0, 1, v42);
    }
    uint64_t v45 = a3[31];
    *(void *)((char *)v4 + a3[30]) = *(uint64_t *)((char *)a2 + a3[30]);
    uint64_t v46 = (char *)v4 + v45;
    uint64_t v47 = (char *)a2 + v45;
    uint64_t v48 = type metadata accessor for SharedMedicationsChartSeries(0);
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
    swift_bridgeObjectRetain();
    if (v50(v47, 1, v48))
    {
      sub_2410C4CB8(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
      memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
      uint64_t v53 = v52;
      uint64_t v54 = *(void *)(v52 - 8);
      uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
      if (v77(v47, 1, v52))
      {
        sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
        memcpy(v46, v47, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v46, v47, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v46, 0, 1, v53);
      }
      uint64_t v56 = *(int *)(v48 + 20);
      uint64_t v57 = &v46[v56];
      uint64_t v58 = &v47[v56];
      if (v77(v58, 1, v53))
      {
        sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v57, v58, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v57, 0, 1, v53);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    uint64_t v60 = a3[33];
    *((unsigned char *)v4 + a3[32]) = *((unsigned char *)a2 + a3[32]);
    uint64_t v61 = (char *)v4 + v60;
    uint64_t v62 = (char *)a2 + v60;
    uint64_t v63 = sub_24115CB10();
    uint64_t v64 = *(void *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
    {
      sub_2410C4CB8(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
      memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
    }
    uint64_t v66 = a3[34];
    uint64_t v67 = (char *)v4 + v66;
    uint64_t v68 = (char *)a2 + v66;
    uint64_t v69 = sub_24115D3B0();
    uint64_t v70 = *(void *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
    {
      sub_2410C4CB8(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
      memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
    }
  }
  return v4;
}

void sub_2410B9C40(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241024708(255, a3);
    unint64_t v4 = sub_2411604E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for SharedMedicationsChartSeries(uint64_t a1)
{
  return sub_24102806C(a1, qword_26B0041B0);
}

void sub_2410B9CB8(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_2410B9C40(255, a3, a4);
    unint64_t v5 = sub_241161420();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_2410B9D14(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[27];
  sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
  uint64_t v8 = a1 + a2[28];
  sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
  }
  uint64_t v12 = a1 + a2[29];
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = a1 + a2[31];
  uint64_t v17 = type metadata accessor for SharedMedicationsChartSeries(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17))
  {
    sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    if (!v21(v16, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v16, v19);
    }
    uint64_t v22 = v16 + *(int *)(v17 + 20);
    if (!v21(v22, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v19);
    }
  }
  uint64_t v23 = a1 + a2[33];
  uint64_t v24 = sub_24115CB10();
  uint64_t v25 = *(void *)(v24 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  }
  uint64_t v26 = a1 + a2[34];
  uint64_t v27 = sub_24115D3B0();
  uint64_t v30 = *(void *)(v27 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v26, 1, v27);
  if (!result)
  {
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8);
    return v29(v26, v27);
  }
  return result;
}

uint64_t sub_2410BA214(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v13;
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  uint64_t v16 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v16;
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  uint64_t v19 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v19;
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  uint64_t v20 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v20;
  uint64_t v21 = *(void *)(a2 + 288);
  uint64_t v22 = *(void *)(a2 + 296);
  uint64_t v23 = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 296) = v22;
  *(void *)(a1 + 304) = v23;
  uint64_t v24 = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = v24;
  uint64_t v25 = a3[27];
  uint64_t v75 = (void *)(a1 + v25);
  char v74 = (const void *)(a2 + v25);
  *(void *)(a1 + 288) = v21;
  sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  uint64_t v73 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v73(v74, 1, v27))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
    memcpy(v75, v74, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v75, v74, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v75, 0, 1, v27);
  }
  uint64_t v30 = a3;
  uint64_t v31 = a3[28];
  int v32 = (void *)(a1 + v31);
  int v33 = (const void *)(a2 + v31);
  sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
  uint64_t v35 = v34;
  uint64_t v36 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48))(v33, 1, v34))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
    memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v36 + 16))(v32, v33, v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
  }
  uint64_t v38 = a3[29];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (const void *)(a2 + v38);
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v42 = v41;
  uint64_t v43 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v40, 1, v41))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
    memcpy(v39, v40, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(v39, v40, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v39, 0, 1, v42);
  }
  uint64_t v45 = a3[31];
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  uint64_t v46 = (char *)(a1 + v45);
  uint64_t v47 = (char *)(a2 + v45);
  uint64_t v48 = type metadata accessor for SharedMedicationsChartSeries(0);
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  swift_bridgeObjectRetain();
  if (v50(v47, 1, v48))
  {
    sub_2410C4CB8(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
    memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
    uint64_t v53 = v52;
    uint64_t v54 = *(void *)(v52 - 8);
    uint64_t v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
    if (v76(v47, 1, v52))
    {
      sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
      memcpy(v46, v47, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v46, v47, v53);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v46, 0, 1, v53);
    }
    uint64_t v56 = *(int *)(v48 + 20);
    uint64_t v57 = &v46[v56];
    uint64_t v58 = &v47[v56];
    if (v76(v58, 1, v53))
    {
      sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v57, v58, v53);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v57, 0, 1, v53);
    }
    uint64_t v30 = a3;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  uint64_t v60 = v30[33];
  *(unsigned char *)(a1 + v30[32]) = *(unsigned char *)(a2 + v30[32]);
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (const void *)(a2 + v60);
  uint64_t v63 = sub_24115CB10();
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    sub_2410C4CB8(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v64 + 16))(v61, v62, v63);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
  }
  uint64_t v66 = v30[34];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = (const void *)(a2 + v66);
  uint64_t v69 = sub_24115D3B0();
  uint64_t v70 = *(void *)(v69 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
  {
    sub_2410C4CB8(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v70 + 16))(v67, v68, v69);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
  }
  return a1;
}

uint64_t sub_2410BAC0C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = v6;
  uint64_t v7 = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = v7;
  uint64_t v8 = a3[27];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v9, 1, v11);
  int v16 = v14(v10, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v9, v10, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v9, v12);
LABEL_6:
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
    memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v9, v10, v12);
LABEL_7:
  uint64_t v18 = a3[28];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v19, 1, v21);
  int v26 = v24(v20, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 16))(v19, v20, v22);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v19, v22);
LABEL_12:
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
    memcpy(v19, v20, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 24))(v19, v20, v22);
LABEL_13:
  uint64_t v28 = a3[29];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v32 = v31;
  uint64_t v33 = *(void *)(v31 - 8);
  uint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  int v35 = v34(v29, 1, v31);
  int v36 = v34(v30, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v29, v32);
LABEL_18:
    sub_2410B9CB8(0, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
    memcpy(v29, v30, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v29, v30, v32);
LABEL_19:
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[31];
  uint64_t v39 = (char *)(a1 + v38);
  uint64_t v40 = (char *)(a2 + v38);
  uint64_t v41 = type metadata accessor for SharedMedicationsChartSeries(0);
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  int v44 = v43(v39, 1, v41);
  int v45 = v43(v40, 1, v41);
  if (!v44)
  {
    if (v45)
    {
      sub_2410C4A00((uint64_t)v39, type metadata accessor for SharedMedicationsChartSeries);
      goto LABEL_25;
    }
    sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
    uint64_t v55 = v54;
    uint64_t v56 = *(void *)(v54 - 8);
    uint64_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
    int v58 = v57(v39, 1, v54);
    int v59 = v57(v40, 1, v55);
    if (v58)
    {
      if (!v59)
      {
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v39, v40, v55);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v39, 0, 1, v55);
LABEL_56:
        uint64_t v84 = *(int *)(v41 + 20);
        uint64_t v85 = &v39[v84];
        char v86 = &v40[v84];
        int v87 = v57(v85, 1, v55);
        int v88 = v57(v86, 1, v55);
        if (v87)
        {
          if (!v88)
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v85, v86, v55);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v85, 0, 1, v55);
            goto LABEL_38;
          }
        }
        else
        {
          if (!v88)
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 24))(v85, v86, v55);
            goto LABEL_38;
          }
          (*(void (**)(char *, uint64_t))(v56 + 8))(v85, v55);
        }
        sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
        size_t v51 = *(void *)(*(void *)(v89 - 8) + 64);
        uint64_t v52 = v85;
        uint64_t v53 = v86;
LABEL_26:
        memcpy(v52, v53, v51);
        goto LABEL_38;
      }
    }
    else
    {
      if (!v59)
      {
        (*(void (**)(char *, char *, uint64_t))(v56 + 24))(v39, v40, v55);
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v55);
    }
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(v39, v40, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_56;
  }
  if (v45)
  {
LABEL_25:
    sub_2410C4CB8(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
    size_t v51 = *(void *)(*(void *)(v50 - 8) + 64);
    uint64_t v52 = v39;
    uint64_t v53 = v40;
    goto LABEL_26;
  }
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  uint64_t v47 = v46;
  uint64_t v48 = *(void *)(v46 - 8);
  uint64_t v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  if (v90(v40, 1, v46))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(v39, v40, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v39, v40, v47);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v39, 0, 1, v47);
  }
  uint64_t v60 = *(int *)(v41 + 20);
  uint64_t v61 = &v39[v60];
  uint64_t v62 = &v40[v60];
  if (v90(v62, 1, v47))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v61, v62, v47);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v61, 0, 1, v47);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_38:
  *(unsigned char *)(a1 + a3[32]) = *(unsigned char *)(a2 + a3[32]);
  uint64_t v64 = a3[33];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (void *)(a2 + v64);
  uint64_t v67 = sub_24115CB10();
  uint64_t v68 = *(void *)(v67 - 8);
  uint64_t v69 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v68 + 48);
  int v70 = v69(v65, 1, v67);
  int v71 = v69(v66, 1, v67);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(void *, void *, uint64_t))(v68 + 16))(v65, v66, v67);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  if (v71)
  {
    (*(void (**)(void *, uint64_t))(v68 + 8))(v65, v67);
LABEL_43:
    sub_2410C4CB8(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v65, v66, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_44;
  }
  (*(void (**)(void *, void *, uint64_t))(v68 + 24))(v65, v66, v67);
LABEL_44:
  uint64_t v73 = a3[34];
  char v74 = (void *)(a1 + v73);
  uint64_t v75 = (void *)(a2 + v73);
  uint64_t v76 = sub_24115D3B0();
  uint64_t v77 = *(void *)(v76 - 8);
  uint64_t v78 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v77 + 48);
  int v79 = v78(v74, 1, v76);
  int v80 = v78(v75, 1, v76);
  if (!v79)
  {
    if (!v80)
    {
      (*(void (**)(void *, void *, uint64_t))(v77 + 24))(v74, v75, v76);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v77 + 8))(v74, v76);
    goto LABEL_49;
  }
  if (v80)
  {
LABEL_49:
    sub_2410C4CB8(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    memcpy(v74, v75, *(void *)(*(void *)(v81 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v77 + 16))(v74, v75, v76);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
  return a1;
}

uint64_t sub_2410BBB70(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  long long v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  long long v8 = *(_OWORD *)(a2 + 272);
  long long v9 = *(_OWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  uint64_t v10 = a3[27];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 272) = v8;
  *(_OWORD *)(a1 + 288) = v9;
  sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v11, v12, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  }
  uint64_t v17 = a3[28];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v20))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
  }
  uint64_t v24 = a3[29];
  int v25 = (void *)(a1 + v24);
  int v26 = (const void *)(a2 + v24);
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  uint64_t v31 = a3[31];
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)(a2 + v31);
  uint64_t v34 = type metadata accessor for SharedMedicationsChartSeries(0);
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    sub_2410C4CB8(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
    uint64_t v38 = v37;
    uint64_t v39 = *(void *)(v37 - 8);
    int v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    if (v58(v33, 1, v37))
    {
      sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
      memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v32, v33, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v38);
    }
    uint64_t v41 = *(int *)(v34 + 20);
    __dst = &v32[v41];
    uint64_t v42 = &v33[v41];
    if (v58(v42, 1, v38))
    {
      sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
      memcpy(__dst, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(__dst, v42, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  uint64_t v44 = a3[33];
  *(unsigned char *)(a1 + a3[32]) = *(unsigned char *)(a2 + a3[32]);
  int v45 = (void *)(a1 + v44);
  uint64_t v46 = (const void *)(a2 + v44);
  uint64_t v47 = sub_24115CB10();
  uint64_t v48 = *(void *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    sub_2410C4CB8(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  uint64_t v50 = a3[34];
  size_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (const void *)(a2 + v50);
  uint64_t v53 = sub_24115D3B0();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    sub_2410C4CB8(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v54 + 32))(v51, v52, v53);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  return a1;
}

uint64_t sub_2410BC470(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  uint64_t v20 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  uint64_t v21 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v22;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  uint64_t v23 = a3[27];
  uint64_t v24 = (void *)(a1 + v23);
  int v25 = (void *)(a2 + v23);
  sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  uint64_t v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v24, 1, v26);
  int v31 = v29(v25, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v24, v25, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v24, v27);
LABEL_6:
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
    memcpy(v24, v25, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v24, v25, v27);
LABEL_7:
  uint64_t v33 = a3[28];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
  uint64_t v37 = v36;
  uint64_t v38 = *(void *)(v36 - 8);
  uint64_t v39 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v38 + 48);
  int v40 = v39(v34, 1, v36);
  int v41 = v39(v35, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(void *, void *, uint64_t))(v38 + 32))(v34, v35, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v34, 0, 1, v37);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v41)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v34, v37);
LABEL_12:
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
    memcpy(v34, v35, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v38 + 40))(v34, v35, v37);
LABEL_13:
  uint64_t v43 = a3[29];
  uint64_t v44 = (void *)(a1 + v43);
  int v45 = (void *)(a2 + v43);
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v47 = v46;
  uint64_t v48 = *(void *)(v46 - 8);
  uint64_t v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
  int v50 = v49(v44, 1, v46);
  int v51 = v49(v45, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 32))(v44, v45, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v44, 0, 1, v47);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v44, v47);
LABEL_18:
    sub_2410B9CB8(0, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
    memcpy(v44, v45, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 40))(v44, v45, v47);
LABEL_19:
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[31];
  uint64_t v54 = (char *)(a1 + v53);
  uint64_t v55 = (char *)(a2 + v53);
  uint64_t v56 = type metadata accessor for SharedMedicationsChartSeries(0);
  uint64_t v57 = *(void *)(v56 - 8);
  int v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  int v59 = v58(v54, 1, v56);
  int v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (v60)
    {
      sub_2410C4A00((uint64_t)v54, type metadata accessor for SharedMedicationsChartSeries);
      goto LABEL_25;
    }
    sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
    uint64_t v70 = v69;
    uint64_t v71 = *(void *)(v69 - 8);
    uint64_t v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48);
    int v73 = v72(v54, 1, v69);
    int v74 = v72(v55, 1, v70);
    if (v73)
    {
      if (!v74)
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v54, v55, v70);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v54, 0, 1, v70);
LABEL_56:
        uint64_t v99 = *(int *)(v56 + 20);
        int v100 = &v54[v99];
        int v101 = &v55[v99];
        int v102 = v72(v100, 1, v70);
        int v103 = v72(v101, 1, v70);
        if (v102)
        {
          if (!v103)
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v100, v101, v70);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v100, 0, 1, v70);
            goto LABEL_38;
          }
        }
        else
        {
          if (!v103)
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 40))(v100, v101, v70);
            goto LABEL_38;
          }
          (*(void (**)(char *, uint64_t))(v71 + 8))(v100, v70);
        }
        sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
        size_t v66 = *(void *)(*(void *)(v104 - 8) + 64);
        uint64_t v67 = v100;
        uint64_t v68 = v101;
LABEL_26:
        memcpy(v67, v68, v66);
        goto LABEL_38;
      }
    }
    else
    {
      if (!v74)
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 40))(v54, v55, v70);
        goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t))(v71 + 8))(v54, v70);
    }
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(v54, v55, *(void *)(*(void *)(v98 - 8) + 64));
    goto LABEL_56;
  }
  if (v60)
  {
LABEL_25:
    sub_2410C4CB8(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
    size_t v66 = *(void *)(*(void *)(v65 - 8) + 64);
    uint64_t v67 = v54;
    uint64_t v68 = v55;
    goto LABEL_26;
  }
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  uint64_t v62 = v61;
  uint64_t v63 = *(void *)(v61 - 8);
  uint64_t v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
  if (v105(v55, 1, v61))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(v54, v55, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v54, v55, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v54, 0, 1, v62);
  }
  uint64_t v75 = *(int *)(v56 + 20);
  uint64_t v76 = &v54[v75];
  uint64_t v77 = &v55[v75];
  if (v105(v77, 1, v62))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v76, v77, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v76, 0, 1, v62);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
LABEL_38:
  uint64_t v79 = a3[33];
  *(unsigned char *)(a1 + a3[32]) = *(unsigned char *)(a2 + a3[32]);
  int v80 = (void *)(a1 + v79);
  uint64_t v81 = (void *)(a2 + v79);
  uint64_t v82 = sub_24115CB10();
  uint64_t v83 = *(void *)(v82 - 8);
  uint64_t v84 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v83 + 48);
  int v85 = v84(v80, 1, v82);
  int v86 = v84(v81, 1, v82);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(void *, void *, uint64_t))(v83 + 32))(v80, v81, v82);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  if (v86)
  {
    (*(void (**)(void *, uint64_t))(v83 + 8))(v80, v82);
LABEL_43:
    sub_2410C4CB8(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
    memcpy(v80, v81, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_44;
  }
  (*(void (**)(void *, void *, uint64_t))(v83 + 40))(v80, v81, v82);
LABEL_44:
  uint64_t v88 = a3[34];
  uint64_t v89 = (void *)(a1 + v88);
  uint64_t v90 = (void *)(a2 + v88);
  uint64_t v91 = sub_24115D3B0();
  uint64_t v92 = *(void *)(v91 - 8);
  char v93 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v92 + 48);
  int v94 = v93(v89, 1, v91);
  int v95 = v93(v90, 1, v91);
  if (!v94)
  {
    if (!v95)
    {
      (*(void (**)(void *, void *, uint64_t))(v92 + 40))(v89, v90, v91);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v92 + 8))(v89, v91);
    goto LABEL_49;
  }
  if (v95)
  {
LABEL_49:
    sub_2410C4CB8(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
    memcpy(v89, v90, *(void *)(*(void *)(v96 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v92 + 32))(v89, v90, v91);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
  return a1;
}

uint64_t sub_2410BD2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2410BD2C4);
}

uint64_t sub_2410BD2C4(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[27];
LABEL_15:
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v16(a1 + v11, a2, v9);
  }
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[28];
    goto LABEL_15;
  }
  sub_2410B9CB8(0, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[29];
    goto LABEL_15;
  }
  sub_2410C4CB8(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a3[31];
    goto LABEL_15;
  }
  sub_2410C4CB8(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v9 = v15;
    uint64_t v10 = *(void *)(v15 - 8);
    uint64_t v11 = a3[33];
    goto LABEL_15;
  }
  sub_2410C4CB8(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[34];

  return v18(v20, a2, v19);
}

uint64_t sub_2410BD610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2410BD624);
}

uint64_t sub_2410BD624(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[27];
LABEL_13:
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v16(v5 + v11, a2, a2, v9);
  }
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[28];
    goto LABEL_13;
  }
  sub_2410B9CB8(0, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[29];
    goto LABEL_13;
  }
  sub_2410C4CB8(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[31];
    goto LABEL_13;
  }
  sub_2410C4CB8(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a3)
  {
    uint64_t v9 = v15;
    uint64_t v10 = *(void *)(v15 - 8);
    uint64_t v11 = a4[33];
    goto LABEL_13;
  }
  sub_2410C4CB8(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = v5 + a4[34];

  return v18(v20, a2, a2, v19);
}

uint64_t type metadata accessor for SharedMedicationsFeedItemData(uint64_t a1)
{
  return sub_24102806C(a1, qword_26B004278);
}

void sub_2410BD990()
{
  sub_2410B9CB8(319, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  if (v0 <= 0x3F)
  {
    sub_2410B9CB8(319, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
    if (v1 <= 0x3F)
    {
      sub_2410B9CB8(319, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
      if (v2 <= 0x3F)
      {
        sub_2410C4CB8(319, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
        if (v3 <= 0x3F)
        {
          sub_2410C4CB8(319, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
          if (v4 <= 0x3F)
          {
            sub_2410C4CB8(319, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t *sub_2410BDCA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    uint64_t v10 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
    if (v10(a2, 1, v7))
    {
      sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    if (v10((uint64_t *)v15, 1, v8))
    {
      sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v15, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
    }
  }
  return a1;
}

uint64_t sub_2410BDEEC(uint64_t a1, uint64_t a2)
{
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

char *sub_2410BE01C(char *a1, char *a2, uint64_t a3)
{
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(a2, 1, v6))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (v9(v13, 1, v7))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v13, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  return a1;
}

char *sub_2410BE218(char *a1, char *a2, uint64_t a3)
{
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(a1, v7);
LABEL_6:
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 24))(a1, a2, v7);
LABEL_7:
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  int v16 = v9(&a1[v13], 1, v7);
  int v17 = v9(v15, 1, v7);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v14, v15, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    goto LABEL_12;
  }
  if (v17)
  {
LABEL_12:
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v15, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
  return a1;
}

char *sub_2410BE4D0(char *a1, char *a2, uint64_t a3)
{
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(a2, 1, v6))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (v9(v13, 1, v7))
  {
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v13, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  return a1;
}

char *sub_2410BE6CC(char *a1, char *a2, uint64_t a3)
{
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(a1, v7);
LABEL_6:
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 40))(a1, a2, v7);
LABEL_7:
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  int v16 = v9(&a1[v13], 1, v7);
  int v17 = v9(v15, 1, v7);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v14, v15, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    goto LABEL_12;
  }
  if (v17)
  {
LABEL_12:
    sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v15, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
  return a1;
}

uint64_t sub_2410BE984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2410BE998);
}

uint64_t sub_2410BE998(uint64_t a1, uint64_t a2)
{
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_2410BEA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2410BEA38);
}

uint64_t sub_2410BEA38(uint64_t a1, uint64_t a2)
{
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_2410BEAC8()
{
  sub_2410B9CB8(319, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_2410BEB74()
{
  return sub_2410C4F98(&qword_268CF1690, (void (*)(uint64_t))type metadata accessor for SharedMedicationsChartSeries);
}

uint64_t sub_2410BEBBC()
{
  return sub_2410C4F98(&qword_268CF1698, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
}

uint64_t sub_2410BEC04()
{
  return sub_2410C4F98((unint64_t *)&unk_268CF1DC0, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
}

uint64_t sub_2410BEC4C()
{
  return sub_2410C4F98(&qword_268CF16A0, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
}

uint64_t sub_2410BEC94(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  sub_2410B9CB8(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_2410BECF0(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, unint64_t *a5)
{
  sub_2410B9CB8(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

unint64_t sub_2410BED64()
{
  unint64_t result = qword_26B004248;
  if (!qword_26B004248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004248);
  }
  return result;
}

unint64_t sub_2410BEDB8()
{
  unint64_t result = qword_268CF16B0;
  if (!qword_268CF16B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF16B0);
  }
  return result;
}

unint64_t sub_2410BEE0C()
{
  unint64_t result = qword_268CF16D0;
  if (!qword_268CF16D0)
  {
    sub_2410B9C40(255, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF16D0);
  }
  return result;
}

unint64_t sub_2410BEE7C()
{
  unint64_t result = qword_268CF16D8;
  if (!qword_268CF16D8)
  {
    sub_2410B9C40(255, &qword_26B004090, &qword_26B007348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF16D8);
  }
  return result;
}

uint64_t sub_2410BEEEC(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, unint64_t *a5)
{
  sub_2410B9CB8(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

unint64_t sub_2410BEF60()
{
  unint64_t result = qword_268CF16E0;
  if (!qword_268CF16E0)
  {
    sub_2410B9C40(255, &qword_26B0040A8, &qword_26B007358);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF16E0);
  }
  return result;
}

unint64_t sub_2410BEFD0()
{
  unint64_t result = qword_268CF16F0;
  if (!qword_268CF16F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF16F0);
  }
  return result;
}

uint64_t sub_2410BF024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_2410BF098(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_2410BF100()
{
  unint64_t result = qword_26B004F08;
  if (!qword_26B004F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004F08);
  }
  return result;
}

uint64_t sub_2410BF154(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241020618(255, (unint64_t *)&qword_26B005D98, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2410BF1D8()
{
  unint64_t result = qword_26B004070;
  if (!qword_26B004070)
  {
    sub_2410B9C40(255, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004070);
  }
  return result;
}

unint64_t sub_2410BF248()
{
  unint64_t result = qword_26B004088;
  if (!qword_26B004088)
  {
    sub_2410B9C40(255, &qword_26B004090, &qword_26B007348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004088);
  }
  return result;
}

unint64_t sub_2410BF2B8()
{
  unint64_t result = qword_26B0040A0;
  if (!qword_26B0040A0)
  {
    sub_2410B9C40(255, &qword_26B0040A8, &qword_26B007358);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0040A0);
  }
  return result;
}

uint64_t sub_2410BF328(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241020618(255, &qword_26B005D40, (uint64_t)&type metadata for MedicationHighlightsContent, MEMORY[0x263F8D488]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2410BF3B8()
{
  unint64_t result = qword_26B0050C0;
  if (!qword_26B0050C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0050C0);
  }
  return result;
}

id sub_2410BF40C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v259 = (void *)a6;
  uint64_t v248 = a5;
  uint64_t v246 = a3;
  int v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410C4CB8(0, &qword_26B004138, MEMORY[0x263F45780], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  v245 = (char *)&v201 - v13;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v244 = (uint64_t)&v201 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v201 - v17;
  sub_2410C4CB8(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, v11);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v252 = (uint64_t)&v201 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v251 = (uint64_t)&v201 - v22;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v250 = (uint64_t)&v201 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v201 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v256 = (uint64_t)&v201 - v29;
  sub_2410C4CB8(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], v11);
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  uint64_t v247 = (uint64_t)&v201 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  v254 = (char *)&v201 - v33;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  uint64_t v253 = (uint64_t)&v201 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v255 = (uint64_t)&v201 - v37;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
  uint64_t v39 = MEMORY[0x270FA5388](v38 - 8);
  uint64_t v249 = (uint64_t)&v201 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)&v201 - v42;
  MEMORY[0x270FA5388](v41);
  uint64_t v257 = (uint64_t)&v201 - v44;
  id v45 = objc_allocWithZone(MEMORY[0x263F62228]);
  sub_241022EB4(a1, a2);
  uint64_t v46 = (void *)sub_24115C9F0();
  sub_241023084(a1, a2);
  id v47 = objc_msgSend(v45, sel_initWithData_, v46);

  id v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F44C50]), sel_init);
  if (v48)
  {
    uint64_t v49 = v48;
    uint64_t v258 = a4;
    objc_msgSend(v48, sel_readFrom_, v47);
    if (objc_msgSend(v49, sel_hasConceptIdentifier))
    {
      id v243 = v47;
      if (!objc_msgSend(v49, sel_hasArchived)
        || !objc_msgSend(v49, sel_hasAudienceRawValue))
      {
        sub_241023084(a1, a2);

        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      uint64_t v242 = a7;
      id v50 = objc_msgSend(v49, sel_audienceRawValue);
      if (!v50)
      {
        __break(1u);
        goto LABEL_101;
      }
      int v51 = v50;
      sub_241160730();

      uint64_t v52 = sub_241161760();
      swift_bridgeObjectRelease();
      if (!v52)
      {
        int v53 = 0;
LABEL_16:
        id v57 = objc_msgSend(v49, sel_ingredientComponentStrings);
        int v240 = v53;
        if (v57)
        {
          int v58 = v57;
          unint64_t v260 = 0;
          sub_241160990();

          unint64_t v241 = v260;
        }
        else
        {
          unint64_t v241 = 0;
        }
        sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
        uint64_t v60 = v59;
        uint64_t v61 = *(void *)(v59 - 8);
        uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
        uint64_t v63 = v61 + 56;
        v62(v257, 1, 1, v59);
        if (objc_msgSend(v49, sel_hasSchedule))
        {
          uint64_t v238 = v63;
          v239 = v62;
          id v64 = objc_msgSend(v49, sel_schedule);
          if (!v64)
          {
LABEL_103:
            swift_bridgeObjectRelease();
            __break(1u);
            goto LABEL_104;
          }
          uint64_t v65 = v64;
          id v66 = objc_msgSend(self, sel_hd_medicationScheduleFromCodable_, v64);

          sub_241024708(0, &qword_26B007348);
          sub_2411604F0();
          uint64_t v67 = v257;
          sub_2410BEC94(v257, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
          v239((uint64_t)v43, 0, 1, v60);
          sub_2410BEEEC((uint64_t)v43, v67, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
        }
        sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
        uint64_t v69 = v68;
        v237 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56);
        v237(v255, 1, 1, v68);
        uint64_t v70 = sub_24115CB10();
        uint64_t v71 = *(void *)(v70 - 8);
        v239 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
        uint64_t v238 = v71 + 56;
        v239((uint64_t)v254, 1, 1, v70);
        if (objc_msgSend(v49, sel_hasMostRecentDose))
        {
          id v72 = objc_msgSend(v49, sel_mostRecentDose);
          if (!v72)
          {
LABEL_104:
            swift_bridgeObjectRelease();
            __break(1u);
            goto LABEL_105;
          }
          int v73 = v72;
          id v236 = (id)sub_241024708(0, &qword_26B007358);
          id v74 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_createWithCodable_, v73);

          if (v74)
          {
            id v75 = v74;
            uint64_t v235 = v70;
            uint64_t v76 = v253;
            id v77 = v75;
            sub_2411604F0();
            uint64_t v78 = v255;
            sub_2410BEC94(v255, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
            v237(v76, 0, 1, v69);
            sub_2410BEEEC(v76, v78, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
            id v79 = objc_msgSend(v77, sel_startDate);
            uint64_t v80 = v247;
            sub_24115CAE0();

            uint64_t v81 = MEMORY[0x263F07490];
            uint64_t v82 = (uint64_t)v254;
            sub_2410251A4((uint64_t)v254, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
            v239(v80, 0, 1, v235);
            sub_2410BF024(v80, v82, (uint64_t)&qword_26B007240, v81, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2410C4CB8);
          }
        }
        LODWORD(v239) = objc_msgSend(v49, sel_hasFreeTextMedicationForm);
        if (v239) {
          v237 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))objc_msgSend(v49, sel_freeTextMedicationForm);
        }
        else {
          v237 = 0;
        }
        LODWORD(v238) = objc_msgSend(v49, sel_hasFreeTextMedicationLoggingUnit);
        if (v238) {
          id v236 = objc_msgSend(v49, sel_freeTextMedicationLoggingUnit);
        }
        else {
          id v236 = 0;
        }
        sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
        uint64_t v84 = v83;
        uint64_t v85 = *(void *)(v83 - 8);
        int v86 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56);
        uint64_t v87 = (void *)(v85 + 56);
        v86(v256, 1, 1, v83);
        if (objc_msgSend(v49, sel_hasFreeTextMedicationStrengthQuantity))
        {
          id v88 = objc_msgSend(v49, sel_freeTextMedicationStrengthQuantity);
          if (!v88)
          {
LABEL_105:
            id result = (id)swift_bridgeObjectRelease();
            __break(1u);
            goto LABEL_106;
          }
          uint64_t v89 = v88;
          id v233 = v87;
          v234 = v86;
          uint64_t v235 = v84;
          id result = objc_msgSend(v88, sel_unitString);
          if (!result)
          {
LABEL_106:
            __break(1u);
            return result;
          }
          uint64_t v90 = result;
          sub_241160730();

          uint64_t v91 = (void *)sub_2411606F0();
          swift_bridgeObjectRelease();
          id v92 = objc_msgSend(self, sel_unitFromString_, v91);

          objc_msgSend(v89, sel_value);
          id v94 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v92, v93);

          sub_241024708(0, (unint64_t *)&unk_26B005DF0);
          sub_2411604F0();
          uint64_t v95 = v256;
          sub_2410BEC94(v256, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
          ((void (*)(char *, void, uint64_t, uint64_t))v234)(v28, 0, 1, v235);
          sub_2410BEEEC((uint64_t)v28, v95, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
        }
        unint64_t v260 = (unint64_t)v49;
        uint64_t v96 = sub_241024708(0, &qword_26B005EA0);
        sub_241023228(&qword_26B005E98, &qword_26B005EA0);
        uint64_t v235 = v96;
        uint64_t v97 = sub_24115F440();
        uint64_t v99 = v98;
        id v100 = objc_msgSend(v49, sel_conceptIdentifier);
        if (v100)
        {
          int v101 = v100;
          uint64_t v102 = sub_241160730();
          uint64_t v104 = v103;

          id v105 = objc_msgSend(v49, sel_monthHighlights);
          if (v105
            && (uint64_t v106 = v105,
                unint64_t v260 = 0,
                sub_241024708(0, &qword_26B006198),
                sub_241160990(),
                v106,
                (unint64_t v107 = v260) != 0))
          {
            uint64_t v108 = v97;
            uint64_t v109 = v259;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v234 = sub_2410C4D74(v107, v108, v99, v102, v104, v248, v109);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v234 = 0;
          }
          uint64_t v110 = type metadata accessor for SharedMedicationsChartSeries(0);
          BOOL v111 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56);
          v111(v251, 1, 1, v110);
          if (objc_msgSend(v49, sel_hasChartSeries))
          {
            id v112 = objc_msgSend(v49, sel_chartSeries);
            if (v112)
            {
              uint64_t v113 = v112;
              if (!objc_msgSend(v112, sel_hasMonthData)
                || !objc_msgSend(v113, sel_hasSixMonthsData))
              {

                goto LABEL_50;
              }
              id v114 = objc_msgSend(v113, sel_monthData);
              if (v114)
              {
                id v233 = (id)sub_24115CA00();
                unint64_t v116 = v115;

                id v114 = (id)sub_24115C9F0();
                sub_241023084((uint64_t)v233, v116);
              }
              id v233 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F62228]), sel_initWithData_, v114);

              id v117 = objc_msgSend(v113, sel_sixMonthsData);
              if (v117)
              {
                unint64_t v118 = v117;
                uint64_t v231 = sub_24115CA00();
                id v232 = v119;

                uint64_t v120 = v231;
                unint64_t v121 = (void *)sub_24115C9F0();
                sub_241023084(v120, (unint64_t)v232);
              }
              else
              {
                unint64_t v121 = 0;
              }
              id v232 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F62228]), sel_initWithData_, v121);

              id v180 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46468]), sel_init);
              if (v180)
              {
                unint64_t v181 = v180;
                id v182 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46468]), sel_init);
                if (v182)
                {
                  uint64_t v183 = v182;
                  uint64_t v231 = (uint64_t)v182;
                  objc_msgSend(v181, sel_readFrom_, v233);
                  objc_msgSend(v183, sel_readFrom_, v232);
                  uint64_t v227 = sub_241024708(0, &qword_26B005DE8);
                  id v228 = v181;
                  sub_2411604F0();
                  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
                  uint64_t v229 = v184;
                  v230 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v184 - 8) + 56);
                  v230(v18, 0, 1, v184);
                  uint64_t v185 = v244;
                  sub_2411604F0();

                  id v233 = type metadata accessor for SharedMedicationsChartSeries;
                  uint64_t v186 = v251;
                  sub_2410251A4(v251, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                  v230((char *)v185, 0, 1, v229);
                  uint64_t v187 = (uint64_t)v18;
                  uint64_t v188 = v252;
                  sub_2410BEEEC(v187, v252, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
                  sub_2410BEEEC(v185, v188 + *(int *)(v110 + 20), (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
                  v111(v188, 0, 1, v110);
                  sub_2410BF024(v188, v186, (uint64_t)qword_26B0041E8, (uint64_t)v233, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_2410C4CB8);
                  goto LABEL_50;
                }
              }
            }
          }
LABEL_50:
          id v122 = objc_msgSend(v49, sel_conceptIdentifier);
          if (v122)
          {
            uint64_t v123 = v122;
            uint64_t v124 = sub_241160730();
            uint64_t v126 = v125;

            id v127 = objc_msgSend(v49, sel_preferredName);
            if (v127)
            {
              uint64_t v128 = v127;
              uint64_t v229 = sub_241160730();
              id v228 = v129;
            }
            else
            {
              uint64_t v229 = 0;
              id v228 = 0;
            }
            id v130 = objc_msgSend(v49, sel_brandName);
            if (v130)
            {
              uint64_t v131 = v130;
              uint64_t v227 = sub_241160730();
              uint64_t v226 = v132;
            }
            else
            {
              uint64_t v227 = 0;
              uint64_t v226 = 0;
            }
            id v133 = objc_msgSend(v49, sel_genericName);
            if (v133)
            {
              uint64_t v134 = v133;
              uint64_t v225 = sub_241160730();
              uint64_t v224 = v135;
            }
            else
            {
              uint64_t v225 = 0;
              uint64_t v224 = 0;
            }
            id v136 = objc_msgSend(v49, sel_manufacturedDoseForm);
            if (v136)
            {
              uint64_t v137 = v136;
              uint64_t v223 = sub_241160730();
              uint64_t v222 = v138;
            }
            else
            {
              uint64_t v223 = 0;
              uint64_t v222 = 0;
            }
            id v139 = objc_msgSend(v49, sel_basicDoseForm);
            if (v139)
            {
              uint64_t v140 = v139;
              uint64_t v221 = sub_241160730();
              uint64_t v220 = v141;
            }
            else
            {
              uint64_t v221 = 0;
              uint64_t v220 = 0;
            }
            id v142 = objc_msgSend(v49, sel_baseUnitStrength);
            if (v142)
            {
              unint64_t v143 = v142;
              uint64_t v219 = sub_241160730();
              uint64_t v218 = v144;
            }
            else
            {
              uint64_t v219 = 0;
              uint64_t v218 = 0;
            }
            id v145 = objc_msgSend(v49, sel_ontologyLoggingUnitSingular);
            if (v145)
            {
              unint64_t v146 = v145;
              uint64_t v217 = sub_241160730();
              uint64_t v216 = v147;
            }
            else
            {
              uint64_t v217 = 0;
              uint64_t v216 = 0;
            }
            id v148 = objc_msgSend(v49, sel_ontologyLoggingUnitPlural);
            if (v148)
            {
              uint64_t v149 = v148;
              uint64_t v215 = sub_241160730();
              uint64_t v214 = v150;
            }
            else
            {
              uint64_t v215 = 0;
              uint64_t v214 = 0;
            }
            id v151 = objc_msgSend(v49, sel_eduContentString);
            if (v151)
            {
              BOOL v152 = v151;
              uint64_t v213 = sub_241160730();
              uint64_t v212 = v153;
            }
            else
            {
              uint64_t v213 = 0;
              uint64_t v212 = 0;
            }
            id v154 = objc_msgSend(v49, sel_sideEffectsContentString);
            if (v154)
            {
              uint64_t v155 = v154;
              uint64_t v211 = sub_241160730();
              uint64_t v210 = v156;
            }
            else
            {
              uint64_t v211 = 0;
              uint64_t v210 = 0;
            }
            id v157 = objc_msgSend(v49, sel_pregnancyDescriptionContentString);
            if (v157)
            {
              uint64_t v158 = v157;
              uint64_t v209 = sub_241160730();
              uint64_t v208 = v159;
            }
            else
            {
              uint64_t v209 = 0;
              uint64_t v208 = 0;
            }
            unsigned int v160 = objc_msgSend(v49, sel_isPregnancyDescriptionCritical);
            id v161 = objc_msgSend(v49, sel_lactationDescriptionContentString);
            if (v161)
            {
              uint64_t v162 = v161;
              uint64_t v207 = sub_241160730();
              uint64_t v206 = v163;
            }
            else
            {
              uint64_t v207 = 0;
              uint64_t v206 = 0;
            }
            unsigned int v164 = v239 ^ 1;
            int v165 = v238 ^ 1;
            unsigned int v166 = objc_msgSend(v49, sel_isLactationDescriptionCritical);
            id v167 = objc_msgSend(v49, sel_medicationVisualizationConfigJSONString);
            if (v167)
            {
              uint64_t v168 = v167;
              uint64_t v205 = sub_241160730();
              uint64_t v204 = v169;
            }
            else
            {
              uint64_t v205 = 0;
              uint64_t v204 = 0;
            }
            id v170 = objc_msgSend(v49, sel_freeTextMedicationName);
            uint64_t v244 = v124;
            id v233 = v126;
            LODWORD(v232) = v160;
            LODWORD(v239) = v164;
            LODWORD(v238) = v165;
            LODWORD(v231) = v166;
            if (v170)
            {
              int64_t v171 = v170;
              uint64_t v203 = sub_241160730();
              uint64_t v202 = v172;
            }
            else
            {
              uint64_t v203 = 0;
              uint64_t v202 = 0;
            }
            sub_2410BECF0(v256, v250, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
            sub_2410BECF0(v257, v249, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
            sub_2410BECF0(v255, v253, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
            uint64_t v173 = v251;
            sub_2410C1760(v251, v252, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
            LODWORD(v230) = objc_msgSend(v49, sel_archived);
            uint64_t v174 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
            uint64_t v175 = (uint64_t)v254;
            uint64_t v176 = v247;
            sub_2410C1760((uint64_t)v254, v247, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
            sub_241023228(&qword_26B005E90, &qword_26B005EA0);
            uint64_t v177 = (uint64_t)v245;
            sub_24115E120();

            sub_241023084(a1, a2);
            sub_2410251A4(v173, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
            sub_2410BEC94(v256, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
            sub_2410251A4(v175, (unint64_t *)&qword_26B007240, v174);
            sub_2410BEC94(v255, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
            sub_2410BEC94(v257, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
            *((void *)&v200 + 1) = v202;
            *(void *)&long long v200 = v203;
            *((void *)&v199 + 1) = v204;
            *(void *)&long long v199 = v205;
            *((void *)&v198 + 1) = v210;
            *(void *)&long long v198 = v211;
            *((void *)&v197 + 1) = v212;
            *(void *)&long long v197 = v213;
            *((void *)&v196 + 1) = v241;
            *(void *)&long long v196 = v214;
            *((void *)&v195 + 1) = v215;
            *(void *)&long long v195 = v216;
            *((void *)&v194 + 1) = v217;
            *(void *)&long long v194 = v218;
            *((void *)&v193 + 1) = v219;
            *(void *)&long long v193 = v220;
            *((void *)&v192 + 1) = v221;
            *(void *)&long long v192 = v222;
            *((void *)&v191 + 1) = v223;
            *(void *)&long long v191 = v224;
            *((void *)&v190 + 1) = v225;
            *(void *)&long long v190 = v226;
            *((void *)&v189 + 1) = v227;
            *(void *)&long long v189 = v228;
            uint64_t v178 = v242;
            sub_2410B822C(v246, v258, v244, (uint64_t)v233, v240, v248, (uint64_t)v259, v229, v242, v189, v190, v191, v192, v193, v194, v195, v196, v197, v198,
              v209,
              v208,
              (char)v232,
              v207,
              v206,
              v231,
              v199,
              v200,
              (uint64_t)v237,
              (char)v239,
              (uint64_t)v236,
              v238,
              v250,
              v249,
              v253,
              (uint64_t)v234,
              v252,
              (char)v230,
              v176,
              v177);
            uint64_t v179 = type metadata accessor for SharedMedicationsFeedItemData(0);
            return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v179 - 8) + 56))(v178, 0, 1, v179);
          }
          goto LABEL_102;
        }
LABEL_101:
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_102:
        swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_103;
      }
      a7 = v242;
      id v47 = v243;
      if (v52 == 1)
      {
        int v53 = 1;
        goto LABEL_16;
      }
    }
    sub_241023084(a1, a2);

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_241023084(a1, a2);

    swift_bridgeObjectRelease();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v54 = type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56);

  return (id)v55(a7, 1, 1, v54);
}