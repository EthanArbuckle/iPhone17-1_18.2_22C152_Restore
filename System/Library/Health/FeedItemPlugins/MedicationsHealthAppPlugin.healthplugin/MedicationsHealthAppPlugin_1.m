unint64_t sub_2410C10CC()
{
  unint64_t result;

  result = qword_268CF1708;
  if (!qword_268CF1708)
  {
    sub_2410B9C40(255, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
    sub_241023228(&qword_268CF1710, (unint64_t *)&unk_26B005DF0);
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1708);
  }
  return result;
}

unint64_t sub_2410C1188()
{
  unint64_t result = qword_268CF1718;
  if (!qword_268CF1718)
  {
    sub_2410B9C40(255, &qword_26B004090, &qword_26B007348);
    sub_241023228(&qword_268CF1720, &qword_26B007348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1718);
  }
  return result;
}

unint64_t sub_2410C1244()
{
  unint64_t result = qword_268CF1728;
  if (!qword_268CF1728)
  {
    sub_2410B9C40(255, &qword_26B0040A8, &qword_26B007358);
    sub_241023228(&qword_268CF1730, &qword_26B007358);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1728);
  }
  return result;
}

uint64_t sub_2410C1300(uint64_t a1)
{
  uint64_t v28 = a1;
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  uint64_t v3 = v2;
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  v27 = (char *)&v25 - v4;
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for SharedMedicationsChartSeries(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410C4CB8(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  v17 = (char *)&v25 - v16;
  sub_2410C1760(v1, (uint64_t)&v25 - v16, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11) == 1) {
    return sub_241161970();
  }
  sub_2410C17E0((uint64_t)v17, (uint64_t)v14);
  sub_241161970();
  sub_2410BECF0((uint64_t)v14, (uint64_t)v10, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v19 = v26;
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v20(v10, 1, v3) == 1)
  {
    sub_241161970();
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v25 = v8;
    v22 = v27;
    v21(v27, v10, v3);
    sub_241161970();
    sub_2410C1844();
    sub_241160660();
    v23 = v22;
    v8 = v25;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v3);
  }
  sub_2410BECF0((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v8, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  if (v20(v8, 1, v3) == 1)
  {
    sub_241161970();
  }
  else
  {
    v24 = v27;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v27, v8, v3);
    sub_241161970();
    sub_2410C1844();
    sub_241160660();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v3);
  }
  return sub_2410C4A00((uint64_t)v14, type metadata accessor for SharedMedicationsChartSeries);
}

uint64_t sub_2410C1760(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2410C4CB8(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2410C17E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedMedicationsChartSeries(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2410C1844()
{
  unint64_t result = qword_268CF1748;
  if (!qword_268CF1748)
  {
    sub_2410B9C40(255, &qword_26B004060, &qword_26B005DE8);
    sub_241023228(&qword_268CF1750, &qword_26B005DE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1748);
  }
  return result;
}

BOOL sub_2410C1900(uint64_t a1, uint64_t a2)
{
  uint64_t v254 = sub_24115D3B0();
  uint64_t v252 = *(void *)(v254 - 8);
  MEMORY[0x270FA5388](v254);
  v251 = (char *)&v212 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
  sub_2410C3C58(0, &qword_268CF1758, &qword_26B004138, MEMORY[0x263F45780]);
  uint64_t v247 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v253 = (uint64_t)&v212 - v7;
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410C4CB8(0, &qword_26B004138, v5, MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v250 = (uint64_t)&v212 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v248 = (uint64_t)&v212 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v249 = (uint64_t)&v212 - v14;
  uint64_t v246 = sub_24115CB10();
  uint64_t v244 = *(void *)(v246 - 8);
  MEMORY[0x270FA5388](v246);
  v243 = (char *)&v212 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_2410C3C58(0, &qword_268CF1760, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  uint64_t v239 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v245 = (uint64_t)&v212 - v18;
  sub_2410C4CB8(0, (unint64_t *)&qword_26B007240, v16, v8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v242 = (uint64_t)&v212 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v240 = (uint64_t)&v212 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v241 = (uint64_t)&v212 - v24;
  uint64_t v25 = type metadata accessor for SharedMedicationsChartSeries(0);
  uint64_t v236 = *(void *)(v25 - 8);
  uint64_t v237 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v235 = (uint64_t)&v212 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410C3C58(0, &qword_268CF1768, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
  uint64_t v231 = v27;
  MEMORY[0x270FA5388](v27);
  uint64_t v238 = (uint64_t)&v212 - v28;
  sub_2410C4CB8(0, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries, v8);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  uint64_t v234 = (uint64_t)&v212 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v232 = (uint64_t)&v212 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v233 = (uint64_t)&v212 - v34;
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v230 = v35;
  uint64_t v228 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  v226 = (char *)&v212 - v36;
  sub_2410C3CD0();
  uint64_t v223 = v37;
  MEMORY[0x270FA5388](v37);
  uint64_t v229 = (uint64_t)&v212 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410B9CB8(0, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v40 = MEMORY[0x270FA5388](v39 - 8);
  uint64_t v227 = (uint64_t)&v212 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v224 = (uint64_t)&v212 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v225 = (uint64_t)&v212 - v44;
  sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
  uint64_t v222 = v45;
  uint64_t v220 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  v218 = (char *)&v212 - v46;
  sub_2410C3D54();
  uint64_t v215 = v47;
  MEMORY[0x270FA5388](v47);
  uint64_t v221 = (uint64_t)&v212 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
  uint64_t v50 = MEMORY[0x270FA5388](v49 - 8);
  uint64_t v219 = (uint64_t)&v212 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v216 = (uint64_t)&v212 - v53;
  MEMORY[0x270FA5388](v52);
  uint64_t v217 = (uint64_t)&v212 - v54;
  sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v56 = v55;
  uint64_t v214 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  v58 = (char *)&v212 - v57;
  sub_2410C3DD8();
  uint64_t v60 = v59;
  MEMORY[0x270FA5388](v59);
  v62 = (char *)&v212 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v64 = MEMORY[0x270FA5388](v63 - 8);
  v66 = (char *)&v212 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = MEMORY[0x270FA5388](v64);
  v69 = (char *)&v212 - v68;
  MEMORY[0x270FA5388](v67);
  v71 = (char *)&v212 - v70;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v72 = sub_241161890(), BOOL result = 0, (v72 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (v74 = sub_241161890(), BOOL result = 0, (v74 & 1) != 0))
    {
      if (*(unsigned char *)(a1 + 32)) {
        uint64_t v75 = 0x676E6972616873;
      }
      else {
        uint64_t v75 = 0x7972616D697270;
      }
      if (*(unsigned char *)(a2 + 32)) {
        uint64_t v76 = 0x676E6972616873;
      }
      else {
        uint64_t v76 = 0x7972616D697270;
      }
      if (v75 == v76)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v77 = sub_241161890();
        swift_bridgeObjectRelease_n();
        BOOL result = 0;
        if ((v77 & 1) == 0) {
          return result;
        }
      }
      uint64_t v78 = *(void *)(a1 + 48);
      uint64_t v79 = *(void *)(a2 + 48);
      if (v78)
      {
        if (!v79) {
          return 0;
        }
        if (*(void *)(a1 + 40) != *(void *)(a2 + 40) || v78 != v79)
        {
          char v80 = sub_241161890();
          BOOL result = 0;
          if ((v80 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v79)
      {
        return 0;
      }
      uint64_t v81 = *(void *)(a1 + 64);
      uint64_t v82 = *(void *)(a2 + 64);
      if (v81)
      {
        if (!v82) {
          return 0;
        }
        if (*(void *)(a1 + 56) != *(void *)(a2 + 56) || v81 != v82)
        {
          char v83 = sub_241161890();
          BOOL result = 0;
          if ((v83 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v82)
      {
        return 0;
      }
      uint64_t v84 = *(void *)(a1 + 80);
      uint64_t v85 = *(void *)(a2 + 80);
      if (v84)
      {
        if (!v85) {
          return 0;
        }
        if (*(void *)(a1 + 72) != *(void *)(a2 + 72) || v84 != v85)
        {
          char v86 = sub_241161890();
          BOOL result = 0;
          if ((v86 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v85)
      {
        return 0;
      }
      uint64_t v87 = *(void *)(a1 + 96);
      uint64_t v88 = *(void *)(a2 + 96);
      if (v87)
      {
        if (!v88) {
          return 0;
        }
        if (*(void *)(a1 + 88) != *(void *)(a2 + 88) || v87 != v88)
        {
          char v89 = sub_241161890();
          BOOL result = 0;
          if ((v89 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v88)
      {
        return 0;
      }
      uint64_t v90 = *(void *)(a1 + 112);
      uint64_t v91 = *(void *)(a2 + 112);
      if (v90)
      {
        if (!v91) {
          return 0;
        }
        if (*(void *)(a1 + 104) != *(void *)(a2 + 104) || v90 != v91)
        {
          char v92 = sub_241161890();
          BOOL result = 0;
          if ((v92 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v91)
      {
        return 0;
      }
      uint64_t v93 = *(void *)(a1 + 128);
      uint64_t v94 = *(void *)(a2 + 128);
      if (v93)
      {
        if (!v94) {
          return 0;
        }
        if (*(void *)(a1 + 120) != *(void *)(a2 + 120) || v93 != v94)
        {
          char v95 = sub_241161890();
          BOOL result = 0;
          if ((v95 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v94)
      {
        return 0;
      }
      uint64_t v96 = *(void *)(a1 + 144);
      uint64_t v97 = *(void *)(a2 + 144);
      if (v96)
      {
        if (!v97) {
          return 0;
        }
        if (*(void *)(a1 + 136) != *(void *)(a2 + 136) || v96 != v97)
        {
          char v98 = sub_241161890();
          BOOL result = 0;
          if ((v98 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v97)
      {
        return 0;
      }
      uint64_t v99 = *(void *)(a1 + 160);
      uint64_t v100 = *(void *)(a2 + 160);
      if (v99)
      {
        if (!v100) {
          return 0;
        }
        if (*(void *)(a1 + 152) != *(void *)(a2 + 152) || v99 != v100)
        {
          char v101 = sub_241161890();
          BOOL result = 0;
          if ((v101 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v100)
      {
        return 0;
      }
      uint64_t v102 = *(void *)(a1 + 176);
      uint64_t v103 = *(void *)(a2 + 176);
      if (v102)
      {
        if (!v103) {
          return 0;
        }
        if (*(void *)(a1 + 168) != *(void *)(a2 + 168) || v102 != v103)
        {
          char v104 = sub_241161890();
          BOOL result = 0;
          if ((v104 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v103)
      {
        return 0;
      }
      v105 = *(void **)(a1 + 184);
      v106 = *(void **)(a2 + 184);
      if (v105)
      {
        if (!v106 || (sub_241132724(v105, v106) & 1) == 0) {
          return 0;
        }
      }
      else if (v106)
      {
        return 0;
      }
      uint64_t v107 = *(void *)(a1 + 200);
      uint64_t v108 = *(void *)(a2 + 200);
      if (v107)
      {
        if (!v108) {
          return 0;
        }
        if (*(void *)(a1 + 192) != *(void *)(a2 + 192) || v107 != v108)
        {
          char v109 = sub_241161890();
          BOOL result = 0;
          if ((v109 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v108)
      {
        return 0;
      }
      uint64_t v110 = *(void *)(a1 + 216);
      uint64_t v111 = *(void *)(a2 + 216);
      if (v110)
      {
        if (!v111) {
          return 0;
        }
        if (*(void *)(a1 + 208) != *(void *)(a2 + 208) || v110 != v111)
        {
          char v112 = sub_241161890();
          BOOL result = 0;
          if ((v112 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v111)
      {
        return 0;
      }
      uint64_t v113 = *(void *)(a1 + 232);
      uint64_t v114 = *(void *)(a2 + 232);
      if (v113)
      {
        if (!v114) {
          return 0;
        }
        if (*(void *)(a1 + 224) != *(void *)(a2 + 224) || v113 != v114)
        {
          char v115 = sub_241161890();
          BOOL result = 0;
          if ((v115 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v114)
      {
        return 0;
      }
      int v116 = *(unsigned __int8 *)(a1 + 240);
      int v117 = *(unsigned __int8 *)(a2 + 240);
      if (v116 == 2)
      {
        if (v117 != 2) {
          return 0;
        }
      }
      else
      {
        BOOL result = 0;
        BOOL v118 = (v116 & 1) == 0;
        if (v117 == 2 || ((v118 ^ v117) & 1) == 0) {
          return result;
        }
      }
      uint64_t v119 = *(void *)(a1 + 256);
      uint64_t v120 = *(void *)(a2 + 256);
      if (v119)
      {
        if (!v120) {
          return 0;
        }
        if (*(void *)(a1 + 248) != *(void *)(a2 + 248) || v119 != v120)
        {
          char v121 = sub_241161890();
          BOOL result = 0;
          if ((v121 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v120)
      {
        return 0;
      }
      int v122 = *(unsigned __int8 *)(a1 + 264);
      int v123 = *(unsigned __int8 *)(a2 + 264);
      if (v122 == 2)
      {
        if (v123 != 2) {
          return 0;
        }
      }
      else
      {
        BOOL result = 0;
        BOOL v124 = (v122 & 1) == 0;
        if (v123 == 2 || ((v124 ^ v123) & 1) == 0) {
          return result;
        }
      }
      uint64_t v125 = *(void *)(a1 + 280);
      uint64_t v126 = *(void *)(a2 + 280);
      if (v125)
      {
        if (!v126) {
          return 0;
        }
        if (*(void *)(a1 + 272) != *(void *)(a2 + 272) || v125 != v126)
        {
          char v127 = sub_241161890();
          BOOL result = 0;
          if ((v127 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v126)
      {
        return 0;
      }
      uint64_t v128 = *(void *)(a1 + 296);
      uint64_t v129 = *(void *)(a2 + 296);
      if (v128)
      {
        if (!v129) {
          return 0;
        }
        if (*(void *)(a1 + 288) != *(void *)(a2 + 288) || v128 != v129)
        {
          char v130 = sub_241161890();
          BOOL result = 0;
          if ((v130 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v129)
      {
        return 0;
      }
      char v131 = *(unsigned char *)(a2 + 312);
      if (*(unsigned char *)(a1 + 312))
      {
        if (!*(unsigned char *)(a2 + 312)) {
          return 0;
        }
      }
      else
      {
        if (*(void *)(a1 + 304) != *(void *)(a2 + 304)) {
          char v131 = 1;
        }
        if (v131) {
          return 0;
        }
      }
      char v132 = *(unsigned char *)(a2 + 328);
      if (*(unsigned char *)(a1 + 328))
      {
        if (!*(unsigned char *)(a2 + 328)) {
          return 0;
        }
      }
      else
      {
        if (*(void *)(a1 + 320) != *(void *)(a2 + 320)) {
          char v132 = 1;
        }
        if (v132) {
          return 0;
        }
      }
      uint64_t v133 = type metadata accessor for SharedMedicationsFeedItemData(0);
      sub_2410BECF0(a1 + *(int *)(v133 + 108), (uint64_t)v71, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
      v212 = (int *)v133;
      sub_2410BECF0(a2 + *(int *)(v133 + 108), (uint64_t)v69, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
      uint64_t v134 = (uint64_t)&v62[*(int *)(v60 + 48)];
      sub_2410BECF0((uint64_t)v71, (uint64_t)v62, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
      uint64_t v213 = v134;
      sub_2410BECF0((uint64_t)v69, v134, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
      v135 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v214 + 48);
      if (v135((uint64_t)v62, 1, v56) == 1)
      {
        sub_2410BEC94((uint64_t)v69, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
        sub_2410BEC94((uint64_t)v71, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
        if (v135(v213, 1, v56) == 1)
        {
          sub_2410BEC94((uint64_t)v62, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
          goto LABEL_155;
        }
      }
      else
      {
        sub_2410BECF0((uint64_t)v62, (uint64_t)v66, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
        if (v135(v213, 1, v56) != 1)
        {
          uint64_t v138 = v214;
          (*(void (**)(char *, uint64_t, uint64_t))(v214 + 32))(v58, v213, v56);
          sub_2410C4030();
          LODWORD(v213) = sub_2411606E0();
          v139 = *(void (**)(char *, uint64_t))(v138 + 8);
          v139(v58, v56);
          sub_2410BEC94((uint64_t)v69, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
          sub_2410BEC94((uint64_t)v71, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
          v139(v66, v56);
          sub_2410BEC94((uint64_t)v62, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
          if ((v213 & 1) == 0) {
            return 0;
          }
LABEL_155:
          v140 = v212;
          uint64_t v141 = v217;
          sub_2410BECF0(a1 + v212[28], v217, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
          uint64_t v142 = v216;
          sub_2410BECF0(a2 + v140[28], v216, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
          uint64_t v143 = v221;
          uint64_t v144 = v221 + *(int *)(v215 + 48);
          sub_2410BECF0(v141, v221, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
          sub_2410BECF0(v142, v144, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
          v145 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v220 + 48);
          if (v145(v143, 1, v222) == 1)
          {
            sub_2410BEC94(v216, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
            sub_2410BEC94(v217, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
            if (v145(v144, 1, v222) == 1)
            {
              sub_2410BEC94(v221, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
LABEL_162:
              v152 = v212;
              uint64_t v153 = v225;
              sub_2410BECF0(a1 + v212[29], v225, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
              uint64_t v154 = v224;
              sub_2410BECF0(a2 + v152[29], v224, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
              uint64_t v155 = v229;
              uint64_t v156 = v229 + *(int *)(v223 + 48);
              sub_2410BECF0(v153, v229, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
              sub_2410BECF0(v154, v156, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
              v157 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v228 + 48);
              if (v157(v155, 1, v230) == 1)
              {
                sub_2410BEC94(v224, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
                sub_2410BEC94(v225, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
                if (v157(v156, 1, v230) == 1)
                {
                  sub_2410BEC94(v229, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
                  goto LABEL_173;
                }
              }
              else
              {
                sub_2410BECF0(v229, v227, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
                if (v157(v156, 1, v230) != 1)
                {
                  uint64_t v158 = v228;
                  v159 = v226;
                  uint64_t v160 = v230;
                  (*(void (**)(char *, uint64_t, uint64_t))(v228 + 32))(v226, v156, v230);
                  sub_2410C3EB8();
                  uint64_t v161 = v227;
                  LODWORD(v223) = sub_2411606E0();
                  v162 = *(void (**)(char *, uint64_t))(v158 + 8);
                  v162(v159, v160);
                  sub_2410BEC94(v224, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
                  sub_2410BEC94(v225, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
                  v162((char *)v161, v160);
                  sub_2410BEC94(v229, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
                  if ((v223 & 1) == 0) {
                    return 0;
                  }
LABEL_173:
                  uint64_t v163 = v212[30];
                  uint64_t v164 = *(void *)(a2 + v163);
                  if (*(void *)(a1 + v163))
                  {
                    if (!v164) {
                      return 0;
                    }
                    swift_bridgeObjectRetain();
                    uint64_t v165 = swift_bridgeObjectRetain();
                    char v166 = sub_2411327EC(v165, v164);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v166 & 1) == 0) {
                      return 0;
                    }
                  }
                  else if (v164)
                  {
                    return 0;
                  }
                  v167 = v212;
                  uint64_t v168 = v233;
                  sub_2410C1760(a1 + v212[31], v233, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                  uint64_t v169 = v232;
                  sub_2410C1760(a2 + v167[31], v232, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                  uint64_t v170 = v238;
                  uint64_t v171 = v238 + *(int *)(v231 + 48);
                  sub_2410C1760(v168, v238, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                  sub_2410C1760(v169, v171, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                  v172 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v236 + 48);
                  if (v172(v170, 1, v237) == 1)
                  {
                    sub_2410251A4(v232, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                    sub_2410251A4(v233, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                    if (v172(v171, 1, v237) == 1)
                    {
                      sub_2410251A4(v238, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
LABEL_186:
                      if (*(unsigned __int8 *)(a1 + v212[32]) != *(unsigned __int8 *)(a2 + v212[32])) {
                        return 0;
                      }
                      v180 = v212;
                      v181 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
                      uint64_t v182 = v241;
                      sub_2410C1760(a1 + v212[33], v241, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
                      uint64_t v183 = v240;
                      sub_2410C1760(a2 + v180[33], v240, (unint64_t *)&qword_26B007240, v181);
                      uint64_t v184 = v245;
                      uint64_t v185 = v245 + *(int *)(v239 + 48);
                      sub_2410C1760(v182, v245, (unint64_t *)&qword_26B007240, v181);
                      sub_2410C1760(v183, v185, (unint64_t *)&qword_26B007240, v181);
                      v186 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v244 + 48);
                      if (v186(v184, 1, v246) == 1)
                      {
                        v187 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
                        sub_2410251A4(v240, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
                        sub_2410251A4(v241, (unint64_t *)&qword_26B007240, v187);
                        if (v186(v185, 1, v246) == 1)
                        {
                          sub_2410251A4(v245, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
LABEL_194:
                          v196 = v212;
                          v197 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
                          uint64_t v198 = v249;
                          sub_2410C1760(a1 + v212[34], v249, &qword_26B004138, MEMORY[0x263F45780]);
                          uint64_t v199 = v248;
                          sub_2410C1760(a2 + v196[34], v248, &qword_26B004138, v197);
                          uint64_t v200 = v253;
                          uint64_t v201 = v253 + *(int *)(v247 + 48);
                          sub_2410C1760(v198, v253, &qword_26B004138, v197);
                          sub_2410C1760(v199, v201, &qword_26B004138, v197);
                          v202 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v252 + 48);
                          if (v202(v200, 1, v254) == 1)
                          {
                            v203 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
                            sub_2410251A4(v248, &qword_26B004138, MEMORY[0x263F45780]);
                            sub_2410251A4(v249, &qword_26B004138, v203);
                            if (v202(v201, 1, v254) == 1)
                            {
                              sub_2410251A4(v253, &qword_26B004138, MEMORY[0x263F45780]);
                              return 1;
                            }
                            goto LABEL_199;
                          }
                          sub_2410C1760(v253, v250, &qword_26B004138, MEMORY[0x263F45780]);
                          if (v202(v201, 1, v254) == 1)
                          {
                            v204 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
                            sub_2410251A4(v248, &qword_26B004138, MEMORY[0x263F45780]);
                            sub_2410251A4(v249, &qword_26B004138, v204);
                            (*(void (**)(uint64_t, uint64_t))(v252 + 8))(v250, v254);
LABEL_199:
                            v173 = &qword_268CF1758;
                            v174 = &qword_26B004138;
                            v175 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
                            uint64_t v176 = v253;
                            goto LABEL_184;
                          }
                          v205 = v251;
                          uint64_t v206 = v252;
                          uint64_t v207 = v254;
                          (*(void (**)(char *, uint64_t, uint64_t))(v252 + 32))(v251, v201, v254);
                          sub_2410C4F98(&qword_268CF1788, MEMORY[0x263F45780]);
                          uint64_t v208 = v250;
                          char v209 = sub_2411606E0();
                          v210 = *(void (**)(char *, uint64_t))(v206 + 8);
                          v210(v205, v207);
                          v211 = (uint64_t (*)(uint64_t))MEMORY[0x263F45780];
                          sub_2410251A4(v248, &qword_26B004138, MEMORY[0x263F45780]);
                          sub_2410251A4(v249, &qword_26B004138, v211);
                          v210((char *)v208, v207);
                          sub_2410251A4(v253, &qword_26B004138, v211);
                          return (v209 & 1) != 0;
                        }
                      }
                      else
                      {
                        sub_2410C1760(v245, v242, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
                        if (v186(v185, 1, v246) != 1)
                        {
                          v189 = v243;
                          uint64_t v190 = v244;
                          uint64_t v191 = v246;
                          (*(void (**)(char *, uint64_t, uint64_t))(v244 + 32))(v243, v185, v246);
                          sub_2410C4F98(&qword_268CF1790, MEMORY[0x263F07490]);
                          uint64_t v192 = v242;
                          char v193 = sub_2411606E0();
                          v194 = *(void (**)(char *, uint64_t))(v190 + 8);
                          v194(v189, v191);
                          v195 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
                          sub_2410251A4(v240, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
                          sub_2410251A4(v241, (unint64_t *)&qword_26B007240, v195);
                          v194((char *)v192, v191);
                          sub_2410251A4(v245, (unint64_t *)&qword_26B007240, v195);
                          if ((v193 & 1) == 0) {
                            return 0;
                          }
                          goto LABEL_194;
                        }
                        v188 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
                        sub_2410251A4(v240, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
                        sub_2410251A4(v241, (unint64_t *)&qword_26B007240, v188);
                        (*(void (**)(uint64_t, uint64_t))(v244 + 8))(v242, v246);
                      }
                      v173 = &qword_268CF1760;
                      v174 = (unint64_t *)&qword_26B007240;
                      v175 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
                      uint64_t v176 = v245;
LABEL_184:
                      sub_2410C3E5C(v176, v173, v174, v175);
                      return 0;
                    }
                  }
                  else
                  {
                    sub_2410C1760(v238, v234, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                    if (v172(v171, 1, v237) != 1)
                    {
                      uint64_t v177 = v235;
                      sub_2410C17E0(v171, v235);
                      uint64_t v178 = v234;
                      BOOL v179 = sub_2410C40EC(v234, v177);
                      sub_2410C4A00(v177, type metadata accessor for SharedMedicationsChartSeries);
                      sub_2410251A4(v232, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                      sub_2410251A4(v233, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                      sub_2410C4A00(v178, type metadata accessor for SharedMedicationsChartSeries);
                      sub_2410251A4(v238, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                      if (!v179) {
                        return 0;
                      }
                      goto LABEL_186;
                    }
                    sub_2410251A4(v232, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                    sub_2410251A4(v233, qword_26B0041E8, type metadata accessor for SharedMedicationsChartSeries);
                    sub_2410C4A00(v234, type metadata accessor for SharedMedicationsChartSeries);
                  }
                  v173 = &qword_268CF1768;
                  v174 = qword_26B0041E8;
                  v175 = type metadata accessor for SharedMedicationsChartSeries;
                  uint64_t v176 = v238;
                  goto LABEL_184;
                }
                sub_2410BEC94(v224, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
                sub_2410BEC94(v225, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
                (*(void (**)(uint64_t, uint64_t))(v228 + 8))(v227, v230);
              }
              v136 = sub_2410C3CD0;
              v146 = &v255;
              goto LABEL_168;
            }
          }
          else
          {
            sub_2410BECF0(v221, v219, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
            if (v145(v144, 1, v222) != 1)
            {
              uint64_t v147 = v220;
              v148 = v218;
              uint64_t v149 = v222;
              (*(void (**)(char *, uint64_t, uint64_t))(v220 + 32))(v218, v144, v222);
              sub_2410C3F74();
              uint64_t v150 = v219;
              LODWORD(v215) = sub_2411606E0();
              v151 = *(void (**)(char *, uint64_t))(v147 + 8);
              v151(v148, v149);
              sub_2410BEC94(v216, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
              sub_2410BEC94(v217, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
              v151((char *)v150, v149);
              sub_2410BEC94(v221, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
              if ((v215 & 1) == 0) {
                return 0;
              }
              goto LABEL_162;
            }
            sub_2410BEC94(v216, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
            sub_2410BEC94(v217, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
            (*(void (**)(uint64_t, uint64_t))(v220 + 8))(v219, v222);
          }
          v136 = sub_2410C3D54;
          v146 = &v253;
LABEL_168:
          uint64_t v137 = *(v146 - 32);
          goto LABEL_169;
        }
        sub_2410BEC94((uint64_t)v69, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
        sub_2410BEC94((uint64_t)v71, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v66, v56);
      }
      v136 = sub_2410C3DD8;
      uint64_t v137 = (uint64_t)v62;
LABEL_169:
      sub_2410C4A00(v137, (uint64_t (*)(void))v136);
      return 0;
    }
  }
  return result;
}

void sub_2410C3C58(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_2410C4CB8(255, a3, a4, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_2410C3CD0()
{
  if (!qword_268CF1770)
  {
    sub_2410B9CB8(255, (unint64_t *)&qword_26B0040B0, &qword_26B0040A8, &qword_26B007358);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF1770);
    }
  }
}

void sub_2410C3D54()
{
  if (!qword_268CF1778)
  {
    sub_2410B9CB8(255, (unint64_t *)&qword_26B004098, &qword_26B004090, &qword_26B007348);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF1778);
    }
  }
}

void sub_2410C3DD8()
{
  if (!qword_268CF1780)
  {
    sub_2410B9CB8(255, (unint64_t *)&qword_26B004080, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF1780);
    }
  }
}

uint64_t sub_2410C3E5C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_2410C3C58(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_2410C3EB8()
{
  unint64_t result = qword_268CF1798;
  if (!qword_268CF1798)
  {
    sub_2410B9C40(255, &qword_26B0040A8, &qword_26B007358);
    sub_241023228(&qword_268CF17A0, &qword_26B007358);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1798);
  }
  return result;
}

unint64_t sub_2410C3F74()
{
  unint64_t result = qword_268CF17A8;
  if (!qword_268CF17A8)
  {
    sub_2410B9C40(255, &qword_26B004090, &qword_26B007348);
    sub_241023228(&qword_268CF17B0, &qword_26B007348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF17A8);
  }
  return result;
}

unint64_t sub_2410C4030()
{
  unint64_t result = qword_268CF17B8;
  if (!qword_268CF17B8)
  {
    sub_2410B9C40(255, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
    sub_241023228(&qword_268CF17C0, (unint64_t *)&unk_26B005DF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF17B8);
  }
  return result;
}

BOOL sub_2410C40EC(uint64_t a1, uint64_t a2)
{
  sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  uint64_t v59 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v49 = &v46[-v6];
  sub_2410C497C();
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v54 = &v46[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v46[-v11];
  sub_2410B9CB8(0, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v48 = &v46[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v55 = &v46[-v17];
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v53 = &v46[-v19];
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v57 = (uint64_t)&v46[-v21];
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = &v46[-v23];
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = &v46[-v25];
  uint64_t v51 = a1;
  sub_2410BECF0(a1, (uint64_t)&v46[-v25], (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v52 = a2;
  sub_2410BECF0(a2, (uint64_t)v24, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v50 = v8;
  uint64_t v27 = (uint64_t)&v12[*(int *)(v8 + 48)];
  sub_2410BECF0((uint64_t)v26, (uint64_t)v12, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  sub_2410BECF0((uint64_t)v24, v27, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v28 = v58;
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  if (v29((uint64_t)v12, 1, v58) != 1)
  {
    sub_2410BECF0((uint64_t)v12, v57, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    if (v29(v27, 1, v28) != 1)
    {
      uint64_t v56 = v29;
      uint64_t v31 = v59;
      uint64_t v32 = v49;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v59 + 32))(v49, v27, v28);
      sub_2410C4A60();
      uint64_t v33 = v57;
      int v47 = sub_2411606E0();
      uint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v31 + 8);
      v34(v32, v28);
      sub_2410BEC94((uint64_t)v24, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
      sub_2410BEC94((uint64_t)v26, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
      v34((unsigned char *)v33, v28);
      sub_2410BEC94((uint64_t)v12, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
      if ((v47 & 1) == 0) {
        return 0;
      }
      goto LABEL_8;
    }
    sub_2410BEC94((uint64_t)v24, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    sub_2410BEC94((uint64_t)v26, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v28);
LABEL_6:
    uint64_t v30 = (uint64_t)v12;
LABEL_14:
    sub_2410C4A00(v30, (uint64_t (*)(void))sub_2410C497C);
    return 0;
  }
  uint64_t v56 = v29;
  sub_2410BEC94((uint64_t)v24, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  sub_2410BEC94((uint64_t)v26, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  if (v56(v27, 1, v28) != 1) {
    goto LABEL_6;
  }
  sub_2410BEC94((uint64_t)v12, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
LABEL_8:
  uint64_t v35 = type metadata accessor for SharedMedicationsChartSeries(0);
  uint64_t v36 = v53;
  sub_2410BECF0(v51 + *(int *)(v35 + 20), (uint64_t)v53, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v37 = v55;
  sub_2410BECF0(v52 + *(int *)(v35 + 20), (uint64_t)v55, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v38 = v54;
  uint64_t v39 = (uint64_t)&v54[*(int *)(v50 + 48)];
  sub_2410BECF0((uint64_t)v36, (uint64_t)v54, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  sub_2410BECF0((uint64_t)v37, v39, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  uint64_t v40 = v56;
  if (v56((uint64_t)v38, 1, v28) == 1)
  {
    sub_2410BEC94((uint64_t)v37, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    sub_2410BEC94((uint64_t)v36, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    if (v40(v39, 1, v28) == 1)
    {
      sub_2410BEC94((uint64_t)v38, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
      return 1;
    }
    goto LABEL_13;
  }
  uint64_t v41 = v48;
  sub_2410BECF0((uint64_t)v38, (uint64_t)v48, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  if (v40(v39, 1, v28) == 1)
  {
    sub_2410BEC94((uint64_t)v55, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    sub_2410BEC94((uint64_t)v36, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    (*(void (**)(unsigned char *, uint64_t))(v59 + 8))(v41, v28);
LABEL_13:
    uint64_t v30 = (uint64_t)v38;
    goto LABEL_14;
  }
  uint64_t v43 = v59;
  uint64_t v44 = v49;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v59 + 32))(v49, v39, v28);
  sub_2410C4A60();
  LODWORD(v57) = sub_2411606E0();
  uint64_t v45 = *(void (**)(unsigned char *, uint64_t))(v43 + 8);
  v45(v44, v28);
  sub_2410BEC94((uint64_t)v55, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  sub_2410BEC94((uint64_t)v36, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  v45(v41, v28);
  sub_2410BEC94((uint64_t)v38, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
  return (v57 & 1) != 0;
}

void sub_2410C497C()
{
  if (!qword_268CF17C8)
  {
    sub_2410B9CB8(255, (unint64_t *)&qword_26B004068, &qword_26B004060, &qword_26B005DE8);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF17C8);
    }
  }
}

uint64_t sub_2410C4A00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2410C4A60()
{
  unint64_t result = qword_268CF17D0;
  if (!qword_268CF17D0)
  {
    sub_2410B9C40(255, &qword_26B004060, &qword_26B005DE8);
    sub_241023228(&qword_268CF17D8, &qword_26B005DE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF17D0);
  }
  return result;
}

unint64_t sub_2410C4B1C()
{
  unint64_t result = qword_26B004190;
  if (!qword_26B004190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004190);
  }
  return result;
}

unint64_t sub_2410C4B70()
{
  unint64_t result = qword_268CF17E8;
  if (!qword_268CF17E8)
  {
    sub_2410B9C40(255, &qword_26B004060, &qword_26B005DE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF17E8);
  }
  return result;
}

void sub_2410C4BE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_2410C4C48()
{
  unint64_t result = qword_26B004058;
  if (!qword_26B004058)
  {
    sub_2410B9C40(255, &qword_26B004060, &qword_26B005DE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004058);
  }
  return result;
}

void sub_2410C4CB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2410C4D1C()
{
  unint64_t result = qword_26B0073C0;
  if (!qword_26B0073C0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B0073C0);
  }
  return result;
}

void *sub_2410C4D74(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_2411616E0())
  {
    unint64_t v8 = a1;
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
    uint64_t v10 = 4;
    uint64_t v23 = v7;
    while (1)
    {
      id v12 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x245617450](v10 - 4, v8) : *(id *)(v8 + 8 * v10);
      uint64_t v13 = v12;
      uint64_t v14 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      sub_24114820C(a2, a3, a4, a5, a6, a7, v32);
      uint64_t v15 = v32[0];
      uint64_t v16 = v32[1];
      uint64_t v17 = v32[3];
      uint64_t v35 = v32[2];
      uint64_t v18 = v32[4];
      uint64_t v30 = v32[6];
      uint64_t v31 = v32[5];

      sub_2410BF024((uint64_t)v32, (uint64_t)v33, (uint64_t)&unk_26B006178, (uint64_t)&type metadata for MedicationHighlightsContent, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241020618);
      if (v34)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_241052B8C(0, v9[2] + 1, 1, v9);
        }
        unint64_t v20 = v9[2];
        unint64_t v19 = v9[3];
        if (v20 >= v19 >> 1) {
          uint64_t v9 = sub_241052B8C((void *)(v19 > 1), v20 + 1, 1, v9);
        }
        v9[2] = v20 + 1;
        uint64_t v11 = &v9[7 * v20];
        v11[4] = v15;
        v11[5] = v16;
        v11[6] = v35;
        v11[7] = v17;
        v11[8] = v18;
        v11[9] = v31;
        v11[10] = v30;
        unint64_t v8 = a1;
      }
      ++v10;
      if (v14 == v23)
      {
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x263F8EE78];
}

uint64_t sub_2410C4F98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharedMedicationsChartSeries.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2410C50ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedMedicationsChartSeries.CodingKeys()
{
  return &type metadata for SharedMedicationsChartSeries.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SharedMedicationsFeedItemData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE2) {
    goto LABEL_17;
  }
  if (a2 + 30 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 30) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 30;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 30;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 30;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1F;
  int v8 = v6 - 31;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SharedMedicationsFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 30 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 30) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE1)
  {
    unsigned int v6 = ((a2 - 226) >> 8) + 1;
    *uint64_t result = a2 + 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2410C5240);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 30;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedMedicationsFeedItemData.CodingKeys()
{
  return &type metadata for SharedMedicationsFeedItemData.CodingKeys;
}

unint64_t sub_2410C527C()
{
  unint64_t result = qword_268CF1808;
  if (!qword_268CF1808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1808);
  }
  return result;
}

unint64_t sub_2410C52D4()
{
  unint64_t result = qword_268CF1810;
  if (!qword_268CF1810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1810);
  }
  return result;
}

unint64_t sub_2410C532C()
{
  unint64_t result = qword_26B0041A0;
  if (!qword_26B0041A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0041A0);
  }
  return result;
}

unint64_t sub_2410C5384()
{
  unint64_t result = qword_26B004198;
  if (!qword_26B004198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004198);
  }
  return result;
}

unint64_t sub_2410C53DC()
{
  unint64_t result = qword_26B004258;
  if (!qword_26B004258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004258);
  }
  return result;
}

unint64_t sub_2410C5434()
{
  unint64_t result = qword_26B004250;
  if (!qword_26B004250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004250);
  }
  return result;
}

uint64_t sub_2410C5488(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74614468746E6F6DLL && a2 == 0xE900000000000061;
  if (v2 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x68746E6F4D786973 && a2 == 0xED00006174614473)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_241161890();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2410C55AC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000241166550 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000241166570 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65636E6569647561 && a2 == 0xE800000000000000 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000241165FD0 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6572726566657270 && a2 == 0xED0000656D614E64 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D614E646E617262 && a2 == 0xE900000000000065 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4E636972656E6567 && a2 == 0xEB00000000656D61 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000241166590 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x736F446369736162 && a2 == 0xED00006D726F4665 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002411665B0 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002411665D0 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002411665F0 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000241166610 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000241166630 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000241166650 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000241166670 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000241166690 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002411666B0 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000002411666D0 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002411666F0 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000241166710 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000241166730 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000241166750 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000241166770 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x656C756465686373 && a2 == 0xE800000000000000 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x6563655274736F6DLL && a2 == 0xEE0065736F44746ELL || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x67694868746E6F6DLL && a2 == 0xEF73746867696C68 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x7265537472616863 && a2 == 0xEB00000000736569 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x6465766968637261 && a2 == 0xE800000000000000 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0x746E6176656C6572 && a2 == 0xEC00000065746144 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else
  {
    char v5 = sub_241161890();
    swift_bridgeObjectRelease();
    if (v5) {
      return 30;
    }
    else {
      return 31;
    }
  }
}

id MedicationCategoryViewController.__allocating_init(healthStore:provenance:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return MedicationCategoryViewController.init(healthStore:provenance:)(a1, a2);
}

uint64_t MedicationCategoryViewController.providedPresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43BB8];
  uint64_t v3 = sub_24115D990();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

id sub_2410C6280(void *a1)
{
  uint64_t v2 = self;
  id v3 = a1;
  id v4 = objc_msgSend(v2, sel_categoryWithID_, 31);
  if (v4)
  {
    id v5 = v4;
    sub_241160E70();

    char v6 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {

    char v6 = 0;
  }

  return v6;
}

uint64_t MedicationCategoryViewController.sidebarSelectionIdentifier.getter()
{
  id v0 = objc_msgSend(self, sel_categoryWithID_, 31);
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  uint64_t v2 = sub_241160E70();

  return v2;
}

id MedicationCategoryViewController.init(healthStore:provenance:)(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_24115E330();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x270FA5388](v5);
  BOOL v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_24115E9F0();
  uint64_t v8 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x263F07690];
  uint64_t v12 = MEMORY[0x263F8D8F0];
  sub_2410CE988(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v32 - v14;
  *(void *)&v2[qword_26B005208] = MEMORY[0x263F8EE88];
  *(void *)&v2[qword_26B007280] = a1;
  sub_24115F0C0();
  uint64_t v16 = v2;
  id v17 = a1;
  *(void *)&v16[qword_26B007288] = sub_24115F0B0();
  *(void *)&v16[qword_26B007270] = a2;
  sub_24115F5A0();
  swift_allocObject();
  *(void *)&v16[qword_26B005218] = sub_24115F590();

  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82570]), sel_init);
  unint64_t v19 = (objc_class *)type metadata accessor for MedicationCategoryViewController();
  v36.receiver = v16;
  v36.super_class = v19;
  id v20 = objc_msgSendSuper2(&v36, sel_initWithCollectionViewLayout_, v18);

  uint64_t v21 = sub_24115CB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v15, 1, 1, v21);
  id v22 = v20;
  sub_24115E9E0();
  sub_24115EF20();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v33);
  sub_2410CE4E0((uint64_t)v15, (uint64_t)&qword_26B007200, v11, v12, (uint64_t (*)(void))sub_2410CE988);
  uint64_t v23 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setTitle_, v23);

  id v24 = objc_msgSend(v22, sel_navigationItem);
  objc_msgSend(v24, sel_setLargeTitleDisplayMode_, 2);

  sub_24115E320();
  LOBYTE(v24) = sub_24115E310();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v35);
  if (v24)
  {
    id v25 = objc_msgSend(v22, sel_navigationItem);
    uint64_t v26 = (void *)sub_2411606F0();
    id v27 = objc_msgSend(self, sel_systemImageNamed_, v26);

    id v28 = objc_allocWithZone(MEMORY[0x263F824A8]);
    id v29 = v22;
    id v30 = objc_msgSend(v28, sel_initWithImage_style_target_action_, v27, 0, v29, sel_tapToRadarButtonTappedWithSender_);

    objc_msgSend(v25, sel_setRightBarButtonItem_, v30);
    id v17 = v30;
  }
  else
  {
    id v25 = v22;
  }

  return v22;
}

uint64_t type metadata accessor for MedicationCategoryViewController()
{
  uint64_t result = qword_26B007290;
  if (!qword_26B007290) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2410C68CC(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_26B005208] = MEMORY[0x263F8EE88];
  id v4 = a3;

  sub_2411616B0();
  __break(1u);
}

Swift::Void __swiftcall MedicationCategoryViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  id v2 = *(id *)&v0[qword_26B007280];
  sub_241160E30();
  uint64_t v3 = sub_24115F070();
  uint64_t v4 = *(void *)&v1[qword_26B005218];
  uint64_t v5 = (objc_class *)type metadata accessor for MedicationCategoryDataSourceProvider();
  objc_allocWithZone(v5);
  swift_retain();
  uint64_t v6 = sub_241078D44(v2, (uint64_t)v11, v3, v4);
  v11[3] = v5;
  v11[4] = sub_2410C860C(&qword_26B006CE0, (void (*)(uint64_t))type metadata accessor for MedicationCategoryDataSourceProvider);
  v11[0] = v6;
  sub_24115E740();
  BOOL v7 = (objc_class *)type metadata accessor for MedicationCategoryViewController();
  v10.receiver = v1;
  v10.super_class = v7;
  objc_msgSendSuper2(&v10, sel_viewDidLoad);
  sub_2410C8218();
  sub_24115F580();
  v11[0] = v1;
  uint64_t v8 = *MEMORY[0x263F46330];
  uint64_t v9 = sub_2410C860C(&qword_268CF1818, (void (*)(uint64_t))type metadata accessor for MedicationCategoryViewController);
  MEMORY[0x2456145C0](0xD000000000000017, 0x80000002411667A0, v8, v2, v7, v9);
}

void sub_2410C6AEC(void *a1)
{
  id v1 = a1;
  MedicationCategoryViewController.viewDidLoad()();
}

Swift::Void __swiftcall MedicationCategoryViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  sub_2410CE988(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v8 - v4;
  uint64_t v6 = (objc_class *)type metadata accessor for MedicationCategoryViewController();
  v8.receiver = v1;
  v8.super_class = v6;
  objc_msgSendSuper2(&v8, sel_viewDidAppear_, a1);
  sub_2410C7548();
  sub_2410C6D24();
  sub_2410C93A4();
  sub_24115F0C0();
  sub_24115F0B0();
  sub_24115F050();
  swift_release();
  sub_241024708(0, (unint64_t *)&qword_26B007320);
  sub_241160D60();
  sub_24115F040();
  swift_allocObject();
  sub_24115EF90();
  sub_24115CB00();
  uint64_t v7 = sub_24115CB10();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
  sub_24115F020();
  swift_release();
}

void sub_2410C6CD0(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4 = a1;
  MedicationCategoryViewController.viewDidAppear(_:)(a3);
}

uint64_t sub_2410C6D24()
{
  uint64_t v18 = MEMORY[0x263F8D8F0];
  sub_2410CE988(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  id v2 = (char *)&v16 - v1;
  uint64_t v3 = sub_241160FB0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410CE724(0, (unint64_t *)&unk_268CF19E0, MEMORY[0x263F07CB0], sub_24108F304, MEMORY[0x263EFDCA8]);
  uint64_t v17 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  objc_super v10 = (char *)&v16 - v9;
  id v11 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v12 = (void *)sub_241160F80();
  sub_241160FC0();

  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v20 = (id)sub_241160EF0();
  uint64_t v13 = sub_241160EB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v2, 1, 1, v13);
  sub_24108F304();
  sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
  sub_24115FF10();
  sub_2410CE4E0((uint64_t)v2, (uint64_t)&qword_26B0071C0, v19, v18, (uint64_t (*)(void))sub_2410CE988);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2410CE580();
  uint64_t v14 = v17;
  sub_24115FF60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v14);
  swift_beginAccess();
  sub_24115FC30();
  swift_endAccess();
  return swift_release();
}

void sub_2410C710C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x2456181C0](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v5 = sub_2410C7184();
    objc_msgSend(v4, sel_presentViewController_animated_completion_, v5, 1, 0);
  }
}

id sub_2410C7184()
{
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  sub_24115C960();
  uint64_t v0 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v0, v1, 1, 0xE000000000000000);

  sub_24115C960();
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v4 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_24109272C;
  uint64_t v17 = v3;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_2410B29F4;
  uint64_t v15 = &unk_26F5563A8;
  id v5 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_actionWithTitle_style_handler_, v4, 1, v5, 0xE000000000000000);
  _Block_release(v5);

  swift_release();
  objc_msgSend(v2, sel_addAction_, v7);

  sub_24115C960();
  uint64_t v8 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_2410C9DB0;
  uint64_t v17 = 0;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_2410B29F4;
  uint64_t v15 = &unk_26F5563D0;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_release();
  id v10 = objc_msgSend(v6, sel_actionWithTitle_style_handler_, v8, 0, v9, 0xE000000000000000);
  _Block_release(v9);

  objc_msgSend(v2, sel_addAction_, v10);
  return v2;
}

uint64_t sub_2410C7548()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  uint64_t v59 = MEMORY[0x263F8D8F0];
  sub_2410CE988(0, &qword_268CF19F8, MEMORY[0x263F8F118], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v57 = (char *)v41 - v2;
  uint64_t v55 = sub_241160EE0();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v46 = MEMORY[0x263F8F110];
  int v47 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410CE988(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], v0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v41 - v5;
  uint64_t v7 = sub_241160FB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410CE61C();
  uint64_t v12 = v11;
  uint64_t v45 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410CE6A8(0);
  uint64_t v49 = v15;
  uint64_t v52 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v42 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410CE724(0, &qword_268CF1A10, (uint64_t (*)(uint64_t))sub_2410CE6A8, sub_2410CE808, MEMORY[0x263EFDB70]);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v50 = v17;
  uint64_t v51 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v60 = (char *)v41 - v19;
  sub_2410CE83C();
  uint64_t v54 = v20;
  uint64_t v56 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v48 = (char *)v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v23 = (void *)sub_241160F70();
  sub_241160FC0();

  sub_241024708(0, (unint64_t *)&qword_26B007360);
  sub_24108F304();
  sub_24115FE30();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v61 = (id)sub_241160EF0();
  uint64_t v24 = sub_241160EB0();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  uint64_t v44 = v25 + 56;
  v43(v6, 1, 1, v24);
  sub_2410CE6F0();
  v41[1] = sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
  sub_24115FF10();
  uint64_t v26 = v46;
  sub_2410CE4E0((uint64_t)v6, (uint64_t)&qword_26B0071C0, v46, v59, (uint64_t (*)(void))sub_2410CE988);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v12);
  id v27 = v47;
  sub_241160EC0();
  uint64_t v28 = v53;
  uint64_t v29 = (uint64_t)v57;
  uint64_t v30 = v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v57, 1, 1, v55);
  id v61 = (id)sub_241160EF0();
  v43(v6, 1, 1, v24);
  sub_2410CE808();
  uint64_t v31 = (uint64_t)v6;
  uint64_t v32 = v49;
  uint64_t v33 = v42;
  sub_24115FE90();
  uint64_t v34 = v26;
  uint64_t v35 = v59;
  sub_2410CE4E0(v31, (uint64_t)&qword_26B0071C0, v34, v59, (uint64_t (*)(void))sub_2410CE988);

  sub_2410CE4E0(v29, (uint64_t)&qword_268CF19F8, v58, v35, (uint64_t (*)(void))sub_2410CE988);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v30);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v32);
  sub_2410CE8E4();
  sub_241023228(&qword_268CF1A30, (unint64_t *)&qword_26B007360);
  objc_super v36 = v48;
  uint64_t v37 = v50;
  uint64_t v38 = v60;
  sub_24115FF30();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v37);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2410C860C(&qword_268CF1A38, (void (*)(uint64_t))sub_2410CE83C);
  uint64_t v39 = v54;
  sub_24115FF60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v39);
  swift_beginAccess();
  sub_24115FC30();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_2410C7DF0@<X0>(void *a1@<X8>)
{
  sub_24115C820();
  if (!v3[3])
  {
    uint64_t result = sub_2410CE4E0((uint64_t)v3, (uint64_t)&qword_26B0073D0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_24106807C);
    goto LABEL_5;
  }
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
LABEL_5:
  }
    *a1 = 0;
  return result;
}

void sub_2410C7EB4(void **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = (char *)MEMORY[0x2456181C0](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_navigationController);
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_presentedViewController);

      if (v8)
      {
        type metadata accessor for MedicationsListEditViewController();
        uint64_t v9 = (void *)swift_dynamicCastClass();
        if (v9) {
          objc_msgSend(v9, sel_dismissViewControllerAnimated_completion_, 0, 0);
        }
      }
    }
    id v10 = *(void **)&v5[qword_26B007280];
    id v11 = v2;
    id v12 = v10;
    sub_24115F070();
    id v13 = objc_allocWithZone((Class)sub_24115EE70());
    uint64_t v14 = (void *)sub_24115EE50();
    id v15 = objc_msgSend(v5, sel_navigationController);
    if (v15)
    {
      uint64_t v16 = v15;
      objc_msgSend(v15, sel_pushViewController_animated_, v14, 1);
    }
  }
}

Swift::Void __swiftcall MedicationCategoryViewController.registerReusableCollectionViewTypes()()
{
  sub_24115E750();
  uint64_t v1 = (void (*)(void))sub_24115E760();
  v1();
  sub_24115E720();
  uint64_t v2 = sub_24115E1B0();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    sub_241027EA8(0, (unint64_t *)&unk_268CF1820);
    sub_241027EA8(0, &qword_26B0069D8);
    uint64_t v4 = 0;
    while (1)
    {
      long long v9 = *(_OWORD *)(v2 + 16 * v4 + 32);
      swift_unknownObjectRetain_n();
      if (swift_dynamicCast())
      {
        sub_241027314(v7, (uint64_t)v10);
        sub_24101A6BC(v10, v10[3]);
        id v5 = objc_msgSend(v0, sel_collectionView);
        if (!v5)
        {
          __break(1u);
          return;
        }
        id v6 = v5;
        sub_24115E390();

        swift_unknownObjectRelease();
        sub_24101F178((uint64_t)v10);
      }
      else
      {
        uint64_t v8 = 0;
        memset(v7, 0, sizeof(v7));
        swift_unknownObjectRelease();
        sub_2410C98D4((uint64_t)v7, (unint64_t *)&unk_268CF1830, &qword_26B0069D8, MEMORY[0x263F44498]);
      }
      if (v3 == ++v4)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_2410C8218()
{
  sub_2410CE988(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v25 - v2;
  uint64_t v4 = sub_24115F790();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F0C0();
  sub_24115F0B0();
  sub_24115F050();
  swift_release();
  sub_241024708(0, (unint64_t *)&qword_26B007320);
  sub_241160D60();
  sub_24115F040();
  swift_allocObject();
  sub_24115EF90();
  char v8 = sub_24115EFF0();
  swift_release();
  if (v8)
  {
    sub_24115F740();
    id v9 = v0;
    id v10 = sub_24115F780();
    os_log_type_t v11 = sub_241160D50();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v27 = v4;
      id v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v29 = v13;
      uint64_t v26 = v5;
      *(_DWORD *)id v12 = 136446210;
      v25[1] = v12 + 4;
      id v14 = v9;
      id v15 = objc_msgSend(v14, sel_description);
      uint64_t v16 = sub_241160730();
      unint64_t v18 = v17;

      uint64_t v28 = sub_24101F0A4(v16, v18, &v29);
      sub_241161430();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241007000, v10, v11, "[%{public}s] Shard check override enabled. Not marking medication shards as required.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v13, -1, -1);
      MEMORY[0x2456180C0](v12, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v27);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    uint64_t v20 = sub_241160A70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v3, 1, 1, v20);
    sub_241160A50();
    id v21 = v0;
    uint64_t v22 = sub_241160A40();
    uint64_t v23 = (void *)swift_allocObject();
    uint64_t v24 = MEMORY[0x263F8F500];
    v23[2] = v22;
    v23[3] = v24;
    v23[4] = v21;
    sub_24101A700((uint64_t)v3, (uint64_t)&unk_268CF1A48, (uint64_t)v23);
    return swift_release();
  }
}

uint64_t sub_2410C860C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2410C8654()
{
  v0[2] = sub_241160A50();
  v0[3] = sub_241160A40();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2410C8700;
  return sub_2410C889C();
}

uint64_t sub_2410C8700()
{
  swift_task_dealloc();
  uint64_t v1 = sub_241160A20();
  return MEMORY[0x270FA2498](sub_2410C883C, v1, v0);
}

uint64_t sub_2410C883C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2410C889C()
{
  v1[23] = v0;
  uint64_t v2 = sub_24115F790();
  v1[24] = v2;
  v1[25] = *(void *)(v2 - 8);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  sub_241160A50();
  v1[29] = sub_241160A40();
  uint64_t v4 = sub_241160A20();
  v1[30] = v4;
  v1[31] = v3;
  return MEMORY[0x270FA2498](sub_2410C89AC, v4, v3);
}

uint64_t sub_2410C89AC()
{
  uint64_t v29 = v0;
  uint64_t v1 = (void *)v0[23];
  sub_24115F740();
  id v2 = v1;
  uint64_t v3 = sub_24115F780();
  os_log_type_t v4 = sub_241160D50();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v25 = v0[25];
    uint64_t v5 = (void *)v0[23];
    uint64_t v26 = v0[24];
    uint64_t v27 = v0[28];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    uint64_t v28 = v7;
    v0[21] = v5;
    type metadata accessor for MedicationCategoryViewController();
    id v8 = v5;
    uint64_t v9 = sub_241160770();
    v0[22] = sub_24101F0A4(v9, v10, &v28);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v3, v4, "[%{public}s] Marking 'coreMeds' and 'medScanning' shards as required.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v7, -1, -1);
    MEMORY[0x2456180C0](v6, -1, -1);

    os_log_type_t v11 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v11(v27, v26);
  }
  else
  {
    uint64_t v12 = v0[28];
    uint64_t v13 = v0[24];
    uint64_t v14 = v0[25];
    id v15 = (void *)v0[23];

    os_log_type_t v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v0[32] = v11;
  uint64_t v16 = (void *)sub_24115F060();
  v0[33] = v16;
  sub_2410CE988(0, (unint64_t *)&unk_268CF1968, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, MEMORY[0x263F8E0F8]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_24116B200;
  unint64_t v18 = (void *)*MEMORY[0x263F09B50];
  uint64_t v19 = (void *)*MEMORY[0x263F09B58];
  *(void *)(v17 + 32) = *MEMORY[0x263F09B50];
  *(void *)(v17 + 40) = v19;
  type metadata accessor for HKOntologyShardIdentifier(0);
  id v20 = v18;
  id v21 = v19;
  uint64_t v22 = sub_241160980();
  v0[34] = v22;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[3] = sub_2410C8D18;
  uint64_t v23 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_24102A09C;
  v0[13] = &unk_2650E3758;
  v0[14] = v23;
  objc_msgSend(v16, sel_markShardsWithIdentifiers_options_completion_, v22, 5, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2410C8D18()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 280) = v2;
  uint64_t v3 = *(void *)(v1 + 248);
  uint64_t v4 = *(void *)(v1 + 240);
  if (v2) {
    uint64_t v5 = sub_2410C9094;
  }
  else {
    uint64_t v5 = sub_2410C8E48;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_2410C8E48()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void **)(v0 + 264);
  uint64_t v2 = *(void **)(v0 + 184);

  swift_release();
  sub_24115F740();
  id v3 = v2;
  uint64_t v4 = sub_24115F780();
  os_log_type_t v5 = sub_241160D50();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v19 = *(void *)(v0 + 216);
    id v20 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    uint64_t v6 = *(void **)(v0 + 184);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v21 = v8;
    *(void *)(v0 + 152) = v6;
    type metadata accessor for MedicationCategoryViewController();
    id v9 = v6;
    uint64_t v10 = sub_241160770();
    *(void *)(v0 + 160) = sub_24101F0A4(v10, v11, &v21);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v4, v5, "[%{public}s] Marked 'coreMeds' and '.medsScanning' shards as required (userInitiated) successfully", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v8, -1, -1);
    MEMORY[0x2456180C0](v7, -1, -1);

    v20(v19, v18);
  }
  else
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    uint64_t v13 = *(void *)(v0 + 216);
    uint64_t v14 = *(void *)(v0 + 192);
    id v15 = *(void **)(v0 + 184);

    v12(v13, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_2410C9094()
{
  uint64_t v32 = v0;
  uint64_t v2 = (void *)v0[34];
  uint64_t v1 = (void *)v0[35];
  id v3 = (void *)v0[33];
  uint64_t v4 = (void *)v0[23];
  swift_release();
  swift_willThrow();

  sub_24115F740();
  id v5 = v4;
  id v6 = v1;
  id v7 = v5;
  id v8 = v1;
  id v9 = sub_24115F780();
  os_log_type_t v10 = sub_241160D30();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (void *)v0[35];
    uint64_t v29 = v0[26];
    uint64_t v30 = (void (*)(uint64_t, uint64_t))v0[32];
    uint64_t v12 = (void *)v0[23];
    uint64_t v28 = v0[24];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v31[0] = v14;
    *(_DWORD *)uint64_t v13 = 136446466;
    v0[15] = v12;
    type metadata accessor for MedicationCategoryViewController();
    id v15 = v12;
    uint64_t v16 = sub_241160770();
    v0[16] = sub_24101F0A4(v16, v17, v31);
    sub_241161430();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    v0[17] = v11;
    id v18 = v11;
    sub_241027EA8(0, (unint64_t *)&qword_26B0073B0);
    uint64_t v19 = sub_241160760();
    v0[18] = sub_24101F0A4(v19, v20, v31);
    sub_241161430();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v9, v10, "[%{public}s] Failed to mark 'coreMeds' and '.medsScanning' as required, error: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v14, -1, -1);
    MEMORY[0x2456180C0](v13, -1, -1);

    v30(v29, v28);
  }
  else
  {
    uint64_t v21 = (void *)v0[35];
    uint64_t v22 = (void (*)(uint64_t, uint64_t))v0[32];
    uint64_t v23 = v0[26];
    uint64_t v25 = (void *)v0[23];
    uint64_t v24 = v0[24];

    v22(v23, v24);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

void sub_2410C93A4()
{
  uint64_t v1 = sub_24115F790();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_sharedBehavior);
  if (v5)
  {
    id v6 = v5;
    unsigned int v7 = objc_msgSend(v5, sel_hkmd_supportsMedicationsWidget);

    if (v7)
    {
      sub_24115F740();
      id v8 = v0;
      id v9 = sub_24115F780();
      os_log_type_t v10 = sub_241160D50();
      if (os_log_type_enabled(v9, v10))
      {
        unint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        uint64_t v17 = (uint64_t)v8;
        uint64_t v18 = v12;
        *(_DWORD *)unint64_t v11 = 136446210;
        v16[1] = v11 + 4;
        type metadata accessor for MedicationCategoryViewController();
        id v13 = v8;
        uint64_t v14 = sub_241160770();
        uint64_t v17 = sub_24101F0A4(v14, v15, &v18);
        sub_241161430();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_241007000, v9, v10, "[%{public}s] Requesting medications widget reload", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v12, -1, -1);
        MEMORY[0x2456180C0](v11, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      sub_241160610();
      sub_241160600();
      sub_241160730();
      sub_2411605F0();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2410C9634(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241027EA8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void MedicationCategoryViewController.collectionView(_:didSelectItemAt:)(void *a1)
{
  uint64_t v2 = (void *)sub_24115CD90();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  uint64_t v3 = (void *)sub_24115CD90();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_24115E720();
    sub_24115E1C0();
    sub_24115DC00();
    swift_release();
    sub_2410280A4((uint64_t)v11, (uint64_t)v8);
    sub_241027EA8(0, (unint64_t *)&qword_26B0069A8);
    sub_241027EA8(0, (unint64_t *)&unk_268CF1840);
    if (swift_dynamicCast())
    {
      id v5 = v6;
LABEL_6:
      sub_241027314(v5, (uint64_t)v10);
      sub_24101A6BC(v10, v10[3]);
      sub_24115DD60();

      sub_24101F178((uint64_t)v11);
      sub_24101F178((uint64_t)v10);
      return;
    }
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_2410C98D4((uint64_t)v6, (unint64_t *)&qword_268CF0C28, (unint64_t *)&unk_268CF1840, MEMORY[0x263F43FF0]);
    *(void *)&v6[0] = v4;
    sub_241024708(0, (unint64_t *)&qword_268CF1850);
    id v4 = v4;
    if (swift_dynamicCast())
    {
      id v5 = v8;
      goto LABEL_6;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));

    sub_24101F178((uint64_t)v11);
    sub_2410C98D4((uint64_t)v8, (unint64_t *)&qword_268CF0C28, (unint64_t *)&unk_268CF1840, MEMORY[0x263F43FF0]);
  }
}

uint64_t sub_2410C98D4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_2410C9634(0, a2, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_2410C9944(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_24115CE00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115CDA0();
  id v9 = a3;
  id v10 = a1;
  MedicationCategoryViewController.collectionView(_:didSelectItemAt:)(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void MedicationCategoryViewController.__allocating_init(dataSource:)()
{
}

void MedicationCategoryViewController.init(dataSource:)()
{
}

id MedicationCategoryViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicationCategoryViewController.init(collectionViewLayout:)()
{
}

void sub_2410C9B14(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2410C9B48()
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

id MedicationCategoryViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationCategoryViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2410C9BE0(uint64_t a1)
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2410C9C4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43BB8];
  uint64_t v3 = sub_24115D990();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

Swift::Void __swiftcall MedicationCategoryViewController.onInternalSettingsGesture()()
{
  type metadata accessor for MedicationsInternalSettingsViewController();
  id v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v0, sel_showViewController_sender_, v1, v0);
}

void sub_2410C9D28(void *a1)
{
  type metadata accessor for MedicationsInternalSettingsViewController();
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v3 = a1;
  id v4 = objc_msgSend(v2, sel_init);
  objc_msgSend(v3, sel_showViewController_sender_, v4, v3);
}

uint64_t sub_2410C9DB0()
{
  uint64_t v0 = sub_24115D770();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F43580], v0);
  sub_24115D760();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void MedicationCategoryViewController.beginAddMedicationFlow(analyticsContext:)()
{
  id v0 = (id)sub_24115EDD0();
  sub_241160E50();
}

Swift::Void __swiftcall MedicationCategoryViewController.showArchivedMedications()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115F070();
  id v3 = *(void **)&v1[qword_26B007280];
  objc_allocWithZone((Class)type metadata accessor for ArchivedMedicationsListViewController());
  id v6 = sub_241080230(v2, v3);
  id v4 = objc_msgSend(v1, sel_navigationController);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_pushViewController_animated_, v6, 1);
  }
}

uint64_t MedicationCategoryViewController.createPDFForMedications()()
{
  v1[7] = v0;
  uint64_t v2 = sub_24115DED0();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v3 = sub_24115DC70();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  uint64_t v4 = sub_24115DAF0();
  v1[14] = v4;
  v1[15] = *(void *)(v4 - 8);
  v1[16] = swift_task_alloc();
  uint64_t v5 = sub_24115DB10();
  v1[17] = v5;
  v1[18] = *(void *)(v5 - 8);
  v1[19] = swift_task_alloc();
  uint64_t v6 = sub_24115CBA0();
  v1[20] = v6;
  v1[21] = *(void *)(v6 - 8);
  v1[22] = swift_task_alloc();
  sub_24115CCC0();
  v1[23] = swift_task_alloc();
  uint64_t v7 = sub_24115E9F0();
  v1[24] = v7;
  v1[25] = *(void *)(v7 - 8);
  v1[26] = swift_task_alloc();
  sub_2410CE988(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  v1[27] = swift_task_alloc();
  uint64_t v8 = sub_24115E2E0();
  v1[28] = v8;
  v1[29] = *(void *)(v8 - 8);
  v1[30] = swift_task_alloc();
  sub_241160A50();
  v1[31] = sub_241160A40();
  uint64_t v10 = sub_241160A20();
  v1[32] = v10;
  v1[33] = v9;
  return MEMORY[0x270FA2498](sub_2410CA358, v10, v9);
}

uint64_t sub_2410CA358()
{
  sub_24115F070();
  unint64_t v1 = sub_24115F600();
  swift_release();
  uint64_t v27 = MEMORY[0x263F8EE78];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2411616E0();
    if (v2) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x263F8EE78];
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_16;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    return MEMORY[0x270F33F40]();
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v4 = (id)MEMORY[0x245617450](i, v1);
    }
    else {
      id v4 = *(id *)(v1 + 8 * i + 32);
    }
    uint64_t v5 = v4;
    self;
    if (swift_dynamicCastObjCClass())
    {
      MEMORY[0x2456167B0]();
      if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2411609D0();
      }
      sub_241160A00();
      sub_2411609C0();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = v27;
LABEL_17:
  v0[34] = v6;
  uint64_t v8 = v0[26];
  uint64_t v7 = v0[27];
  uint64_t v9 = v0[25];
  uint64_t v25 = v0[24];
  uint64_t v10 = v0[22];
  uint64_t v11 = v0[21];
  uint64_t v26 = v0[20];
  uint64_t v12 = v0[7];
  swift_bridgeObjectRelease();
  id v13 = *(void **)(v12 + qword_26B007280);
  sub_24115E0F0();
  id v14 = v13;
  v0[35] = sub_24115E0E0();
  swift_retain();
  sub_24115E2C0();
  v0[36] = sub_24115DC60();
  uint64_t v15 = sub_24115CB90();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  swift_retain();
  sub_24115E9E0();
  sub_24115EF20();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v25);
  sub_2410CE4E0(v7, (uint64_t)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_2410CE988);
  sub_2410CE988(0, &qword_268CF1860, MEMORY[0x263F43F70], MEMORY[0x263F8E0F8]);
  uint64_t v16 = sub_24115DD10();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_24116B200;
  unint64_t v21 = v20 + v19;
  uint64_t v22 = *(void (**)(unint64_t, void, uint64_t))(v17 + 104);
  v22(v21, *MEMORY[0x263F43F60], v16);
  v22(v21 + v18, *MEMORY[0x263F43F68], v16);
  sub_2410CDA40(v20, MEMORY[0x263F43F70], sub_2410CE3D4, (void (*)(uint64_t))sub_2410CE478, (void (*)(uint64_t))sub_2410CE4AC);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v10, *MEMORY[0x263F07740], v26);
  sub_24115CBB0();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v26);
  v0[37] = sub_24115DC50();
  uint64_t v23 = (void *)swift_task_alloc();
  v0[38] = v23;
  void *v23 = v0;
  v23[1] = sub_2410CA8F8;
  return MEMORY[0x270F33F40]();
}

uint64_t sub_2410CA8F8(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {

    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    if (a1) {
      uint64_t v5 = a1;
    }
  }
  *(void *)(v4 + 312) = v5;
  return MEMORY[0x270FA2498](sub_2410CAA30, 0, 0);
}

uint64_t sub_2410CAA30()
{
  sub_2410C9634(0, &qword_268CF1868, (unint64_t *)&qword_268CF1870, MEMORY[0x263F43C48], MEMORY[0x263F8E0F8]);
  uint64_t v1 = swift_allocObject();
  v0[40] = v1;
  *(_OWORD *)(v1 + 16) = xmmword_24116B370;
  uint64_t v2 = sub_24115E860();
  uint64_t v3 = MEMORY[0x263F448B8];
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v3;
  sub_2410277C0((uint64_t *)(v1 + 32));
  sub_24115E850();
  uint64_t v4 = v0[32];
  uint64_t v5 = v0[33];
  return MEMORY[0x270FA2498](sub_2410CAB24, v4, v5);
}

uint64_t sub_2410CAB24()
{
  uint64_t v26 = v0[39];
  uint64_t v27 = v0[40];
  uint64_t v25 = v0[34];
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = (uint64_t *)v0[13];
  uint64_t v4 = v0[14];
  uint64_t v6 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v8 = v0[9];
  uint64_t v7 = v0[10];
  uint64_t v9 = v0[8];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x263F43D68], v4);
  *uint64_t v3 = sub_24115E6D0();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v3, *MEMORY[0x263F43ED8], v6);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v7, *MEMORY[0x263F440C0], v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v26;
  v10[3] = v25;
  void v10[4] = v27;
  sub_24115DB00();
  if (qword_26B007268 != -1) {
    swift_once();
  }
  uint64_t v22 = v0[29];
  uint64_t v23 = v0[28];
  uint64_t v24 = v0[30];
  uint64_t v12 = v0[18];
  uint64_t v11 = v0[19];
  uint64_t v13 = v0[17];
  id v14 = (void *)v0[7];
  sub_24115C960();
  uint64_t v15 = MEMORY[0x263F43D78];
  v0[5] = v13;
  v0[6] = v15;
  uint64_t v16 = sub_2410277C0(v0 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(v16, v11, v13);
  id v17 = objc_allocWithZone((Class)sub_24115DEA0());
  swift_retain();
  uint64_t v18 = (void *)sub_24115DE90();
  sub_2410C860C(&qword_268CF1878, (void (*)(uint64_t))type metadata accessor for MedicationCategoryViewController);
  swift_unknownObjectRetain();
  sub_24115DE80();
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v18, 0xE000000000000000);
  objc_msgSend(v14, sel_presentViewController_animated_completion_, v19, 1, 0);

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_2410CAEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v26 = sub_24115DB30();
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MedicationsPDFProvider(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410CE988(0, &qword_268CF1998, MEMORY[0x263F43AC8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = sub_24115D8C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_2410C9634(0, &qword_268CF1868, (unint64_t *)&qword_268CF1870, MEMORY[0x263F43C48], MEMORY[0x263F8E0F8]);
  uint64_t v14 = swift_allocObject();
  long long v25 = xmmword_24116B370;
  *(_OWORD *)(v14 + 16) = xmmword_24116B370;
  *(void *)(v14 + 56) = v7;
  *(void *)(v14 + 64) = sub_2410C860C(&qword_268CF19A0, (void (*)(uint64_t))type metadata accessor for MedicationsPDFProvider);
  uint64_t v15 = sub_2410277C0((uint64_t *)(v14 + 32));
  *(void *)uint64_t v9 = a2;
  uint64_t v16 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v17 = objc_msgSend(v16, sel_sharedApplication);
  id v18 = objc_msgSend(v17, sel_userInterfaceLayoutDirection);

  id v19 = (unsigned int *)MEMORY[0x263F43D90];
  if (v18 != (id)1) {
    id v19 = (unsigned int *)MEMORY[0x263F43D88];
  }
  uint64_t v20 = v26;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *v19, v26);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v9[*(int *)(v7 + 20)], v6, v20);
  sub_2410CE2EC((uint64_t)v9, (uint64_t)v15);
  v28[3] = sub_24115D8E0();
  v28[4] = MEMORY[0x263F43AD0];
  sub_2410277C0(v28);
  swift_bridgeObjectRetain();
  sub_24115D8D0();
  uint64_t v21 = sub_24115E0D0();
  sub_24101F178((uint64_t)v28);
  sub_2410CE350();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v25;
  *(void *)(v22 + 32) = v21;
  uint64_t v23 = MEMORY[0x245613F00]();
  swift_bridgeObjectRelease();
  return v23;
}

void sub_2410CB2B0()
{
  id v0 = (id)sub_24115EDD0();
  sub_241160E50();
}

void sub_2410CB318()
{
  uint64_t v1 = (char *)*v0;
  uint64_t v2 = sub_24115F070();
  uint64_t v3 = *(void **)&v1[qword_26B007280];
  objc_allocWithZone((Class)type metadata accessor for ArchivedMedicationsListViewController());
  id v6 = sub_241080230(v2, v3);
  id v4 = objc_msgSend(v1, sel_navigationController);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_pushViewController_animated_, v6, 1);
  }
}

uint64_t sub_2410CB3DC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24102A258;
  return MedicationCategoryViewController.createPDFForMedications()();
}

uint64_t MedicationCategoryViewController.pdfViewControllerDidLoad(_:)()
{
  return sub_24115F580();
}

uint64_t MedicationCategoryViewController.pdfViewControllerDidTapShare(_:)()
{
  return sub_24115F580();
}

uint64_t sub_2410CB4D4()
{
  return sub_24115F580();
}

uint64_t sub_2410CB508()
{
  return sub_24115F580();
}

uint64_t MedicationCategoryViewController.logDoseViewControllerFor(scheduleItemIdentifier:)(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = sub_24115F790();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  uint64_t v5 = sub_24115E9F0();
  v3[12] = v5;
  v3[13] = *(void *)(v5 - 8);
  v3[14] = swift_task_alloc();
  sub_2410CE988(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  v3[15] = swift_task_alloc();
  uint64_t v6 = sub_24115CCC0();
  v3[16] = v6;
  v3[17] = *(void *)(v6 - 8);
  v3[18] = swift_task_alloc();
  uint64_t v7 = sub_24115CB10();
  v3[19] = v7;
  v3[20] = *(void *)(v7 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  sub_241160A50();
  v3[25] = sub_241160A40();
  uint64_t v9 = sub_241160A20();
  v3[26] = v9;
  v3[27] = v8;
  return MEMORY[0x270FA2498](sub_2410CB7DC, v9, v8);
}

uint64_t sub_2410CB7DC()
{
  uint64_t v1 = *(void **)(v0[7] + qword_26B007280);
  v0[28] = v1;
  sub_24115F3A0();
  swift_allocObject();
  id v2 = v1;
  v0[29] = sub_24115F390();
  sub_24115F1A0();
  id v3 = v2;
  v0[30] = sub_24115F190();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[31] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2410CB8D8;
  uint64_t v6 = v0[5];
  uint64_t v5 = v0[6];
  return MEMORY[0x270F35568](v6, v5);
}

uint64_t sub_2410CB8D8(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 256) = a1;
  *(void *)(v4 + 264) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 216);
  uint64_t v6 = *(void *)(v3 + 208);
  if (v1) {
    uint64_t v7 = sub_2410CC8E8;
  }
  else {
    uint64_t v7 = sub_2410CBA1C;
  }
  return MEMORY[0x270FA2498](v7, v6, v5);
}

void sub_2410CBA1C()
{
  uint64_t v34 = v0;
  unint64_t v1 = v0[32];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_2411616E0();
    swift_bridgeObjectRelease();
    v0[34] = v17;
    if (v17) {
      goto LABEL_3;
    }
LABEL_16:
    swift_release();
    swift_bridgeObjectRelease();
    sub_24115F740();
    swift_bridgeObjectRetain_n();
    id v18 = sub_24115F780();
    os_log_type_t v19 = sub_241160D30();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v22 = v0[9];
    uint64_t v21 = v0[10];
    uint64_t v23 = v0[8];
    unint64_t v24 = v0[6];
    if (v20)
    {
      uint64_t v29 = v0[5];
      long long v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = v23;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v33 = v26;
      *(_DWORD *)long long v25 = 136315138;
      swift_bridgeObjectRetain();
      v0[4] = sub_24101F0A4(v29, v24, &v33);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241007000, v18, v19, "Could not find unlogged scheduleItems for identifier: %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v26, -1, -1);
      MEMORY[0x2456180C0](v25, -1, -1);
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v30);
    }
    else
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = (void (*)(void))v0[1];
    v27(0);
    return;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v0[34] = v2;
  if (!v2) {
    goto LABEL_16;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v28 = v0[32];
    swift_bridgeObjectRetain();
    MEMORY[0x245617450](0, v28);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_retain();
  }
  uint64_t v4 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[20];
  uint64_t v8 = v0[17];
  uint64_t v7 = v0[18];
  uint64_t v31 = v0[16];
  sub_24115F0E0();
  swift_release();
  sub_24115CC90();
  sub_24115CB00();
  sub_24115CBC0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[35] = v9;
  v0[36] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v31);
  char v10 = sub_24115CAB0();
  v9(v3, v5);
  if (v10) {
    (*(void (**)(void, void, void))(v0[20] + 16))(v0[23], v0[24], v0[19]);
  }
  else {
    sub_24115CB00();
  }
  uint64_t v11 = v0[32];
  v0[2] = MEMORY[0x263F8EE78];
  v0[37] = 0;
  if ((v11 & 0xC000000000000001) != 0) {
    uint64_t v12 = MEMORY[0x245617450](0);
  }
  else {
    uint64_t v12 = swift_retain();
  }
  v0[38] = v12;
  v0[39] = 1;
  uint64_t v13 = sub_24115F0D0();
  uint64_t v15 = v14;
  v0[40] = v14;
  uint64_t v32 = (void (*)(uint64_t, uint64_t))((int)*MEMORY[0x263F44C80] + MEMORY[0x263F44C80]);
  uint64_t v16 = (void *)swift_task_alloc();
  v0[41] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_2410CBEF0;
  v32(v13, v15);
}

uint64_t sub_2410CBEF0(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[42] = a1;
  v3[43] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v3[26];
    uint64_t v5 = v3[27];
    uint64_t v6 = sub_2410CC9D8;
  }
  else
  {
    uint64_t v4 = v3[26];
    uint64_t v5 = v3[27];
    uint64_t v6 = sub_2410CC028;
  }
  return MEMORY[0x270FA2498](v6, v4, v5);
}

uint64_t sub_2410CC028()
{
  uint64_t v59 = v0;
  uint64_t v2 = (void *)v0[42];
  if (v2)
  {
    (*(void (**)(void, void, void))(v0[20] + 16))(v0[22], v0[23], v0[19]);
    sub_24115E8E0();
    swift_allocObject();
    id v3 = v2;
    swift_retain();
    sub_24115E8D0();
    MEMORY[0x2456167B0]();
    if (*(void *)((v0[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_2411609D0();
    }
    sub_241160A00();
    sub_2411609C0();
  }
  swift_release();
  uint64_t v4 = v0[39];
  if (v4 == v0[34])
  {
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v5 = v0[2];
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_2411616E0();
      swift_bridgeObjectRelease();
      if (v28)
      {
LABEL_8:
        id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
        objc_msgSend(v1, sel_setTimeStyle_, 1);
        objc_msgSend(v1, sel_setDateStyle_, 0);
        uint64_t v6 = (void *)sub_24115CAA0();
        id v7 = objc_msgSend(v1, sel_stringFromDate_, v6);

        uint64_t v8 = sub_241160730();
        uint64_t v45 = v9;
        uint64_t v46 = v8;

        if (!(v5 >> 62))
        {
LABEL_9:
          uint64_t v50 = (void *)v0[28];
          uint64_t v53 = v0[23];
          uint64_t v54 = (void (*)(uint64_t, uint64_t))v0[35];
          uint64_t v47 = v0[22];
          uint64_t v10 = v0[20];
          uint64_t v43 = v0[24];
          uint64_t v44 = v0[19];
          uint64_t v11 = v0[14];
          uint64_t v12 = v0[15];
          uint64_t v13 = v0[13];
          uint64_t v42 = v0[12];
          uint64_t v14 = (void *)sub_2411606F0();
          swift_bridgeObjectRelease();
          uint64_t v15 = (void *)sub_24115CAA0();
          uint64_t v48 = v1;
          id v16 = objc_msgSend(v1, sel_hm_localizableTimeStringKeyWithPrefix_date_, v14, v15);

          sub_241160730();
          uint64_t v17 = sub_24115CB90();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 1, 1, v17);
          sub_24115E9E0();
          sub_2410C9634(0, (unint64_t *)&qword_26B007398, (unint64_t *)&qword_26B0073C0, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
          uint64_t v18 = swift_allocObject();
          *(_OWORD *)(v18 + 16) = xmmword_24116B370;
          *(void *)(v18 + 56) = MEMORY[0x263F8D310];
          *(void *)(v18 + 64) = sub_2410484D8();
          *(void *)(v18 + 32) = v46;
          *(void *)(v18 + 40) = v45;
          sub_24115EF20();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v42);
          sub_2410CE4E0(v12, (uint64_t)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_2410CE988);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v47, v43, v44);
          sub_24115ED30();
          swift_allocObject();
          sub_24115ED20();
          id v19 = objc_allocWithZone((Class)sub_24115E900());
          id v20 = v50;
          swift_retain();
          uint64_t v21 = sub_24115E8F0();

          swift_release();
          swift_release();
          swift_release();
          v54(v53, v44);
          v54(v43, v44);
LABEL_22:
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v41 = (uint64_t (*)(uint64_t))v0[1];
          return v41(v21);
        }
LABEL_26:
        swift_bridgeObjectRetain();
        sub_2411616E0();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    sub_24115F740();
    swift_bridgeObjectRetain_n();
    uint64_t v29 = sub_24115F780();
    os_log_type_t v30 = sub_241160D30();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = (void (*)(uint64_t, uint64_t))v0[35];
    uint64_t v34 = v0[23];
    uint64_t v33 = v0[24];
    uint64_t v35 = v0[19];
    uint64_t v57 = v0[11];
    uint64_t v36 = v0[9];
    uint64_t v55 = v0[8];
    unint64_t v37 = v0[6];
    if (v31)
    {
      uint64_t v52 = v0[24];
      uint64_t v38 = v0[5];
      uint64_t v51 = v0[23];
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = v35;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v58 = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      swift_bridgeObjectRetain();
      v0[3] = sub_24101F0A4(v38, v37, &v58);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241007000, v29, v30, "Could not find unlogged scheduleItems with active medications for identifier: %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v40, -1, -1);
      MEMORY[0x2456180C0](v39, -1, -1);
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v57, v55);
      v32(v51, v49);
      v32(v52, v49);
    }
    else
    {
      swift_release();
      swift_release();

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v57, v55);
      v32(v34, v35);
      v32(v33, v35);
    }
    uint64_t v21 = 0;
    goto LABEL_22;
  }
  v0[37] = v4;
  if ((v0[32] & 0xC000000000000001) != 0) {
    uint64_t v22 = MEMORY[0x245617450](v4);
  }
  else {
    uint64_t v22 = swift_retain();
  }
  v0[38] = v22;
  v0[39] = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v23 = sub_24115F0D0();
  uint64_t v25 = v24;
  v0[40] = v24;
  uint64_t v56 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x263F44C80] + MEMORY[0x263F44C80]);
  uint64_t v26 = (void *)swift_task_alloc();
  v0[41] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_2410CBEF0;
  return v56(v23, v25);
}

uint64_t sub_2410CC8E8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2410CC9D8()
{
  id v1 = (void (*)(uint64_t, uint64_t))v0[35];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[19];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v1(v3, v4);
  v1(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t MedicationCategoryViewController.medicationRoomViewControllerFor(medicationName:)(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  void v3[4] = a1;
  uint64_t v4 = sub_24115F790();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  sub_241160A50();
  v3[11] = sub_241160A40();
  uint64_t v6 = sub_241160A20();
  return MEMORY[0x270FA2498](sub_2410CCC00, v6, v5);
}

unint64_t sub_2410CCC00()
{
  uint64_t v39 = v0;
  swift_release();
  sub_24115F0C0();
  sub_24115F0B0();
  uint64_t v2 = sub_24115F070();
  swift_release();
  unint64_t v3 = v2;
  uint64_t v4 = sub_24115F600();
  uint64_t v5 = v4;
  unint64_t v38 = MEMORY[0x263F8EE78];
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0) {
      unint64_t v3 = v4;
    }
    else {
      unint64_t v3 = v4 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    unint64_t result = sub_2411616E0();
    int64_t v6 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    unint64_t v11 = MEMORY[0x263F8EE78];
    goto LABEL_20;
  }
  int64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t result = swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_19;
  }
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_44;
  }
  for (uint64_t i = 0; i != (uint64_t *)v6; uint64_t i = (uint64_t *)((char *)i + 1))
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x245617450](i, v5);
    }
    else {
      id v9 = *(id *)(v5 + 8 * (void)i + 32);
    }
    uint64_t v10 = v9;
    self;
    if (swift_dynamicCastObjCClass())
    {
      MEMORY[0x2456167B0]();
      if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2411609D0();
      }
      sub_241160A00();
      sub_2411609C0();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v11 = v38;
LABEL_20:
  uint64_t v12 = v0[4];
  uint64_t v13 = v0[5];
  int64_t v6 = (int64_t)(v0 + 4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_2410CD844(v11, v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v3 >> 62))
  {
    uint64_t v1 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v14 = v1;
    if (v1) {
      goto LABEL_22;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    if (v1 == 1) {
      goto LABEL_32;
    }
    id v16 = 0;
LABEL_36:
    sub_24115F740();
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_24115F780();
    os_log_type_t v28 = sub_241160D50();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = v0[10];
    uint64_t v31 = v0[8];
    uint64_t v37 = v0[7];
    unint64_t v32 = v0[5];
    if (v29)
    {
      uint64_t v35 = *(void *)v6;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      unint64_t v38 = v36;
      *(_DWORD *)uint64_t v33 = 136315394;
      swift_bridgeObjectRetain();
      v0[2] = sub_24101F0A4(v35, v32, (uint64_t *)&v38);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2048;
      v0[3] = v1;
      sub_241161430();
      _os_log_impl(&dword_241007000, v27, v28, "Deep link couldn't be created for medication name: %s, because match count != 1. match count: %ld.", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v36, -1, -1);
      MEMORY[0x2456180C0](v33, -1, -1);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v37);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v37);
    }
LABEL_39:
    uint64_t v20 = 0;
    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_2411616E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_2411616E0();
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_31;
  }
LABEL_22:
  unint64_t result = v14 - 1;
  if (__OFSUB__(v14, 1))
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if ((v3 & 0xC000000000000001) == 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v15 = *(id *)(v3 + 8 * result + 32);
      goto LABEL_27;
    }
    __break(1u);
    return result;
  }
LABEL_45:
  id v15 = (id)MEMORY[0x245617450](result, v3);
LABEL_27:
  id v16 = v15;
  swift_bridgeObjectRelease();
  if (v1 != 1) {
    goto LABEL_36;
  }
  if (!v16)
  {
LABEL_32:
    sub_24115F740();
    uint64_t v21 = sub_24115F780();
    os_log_type_t v22 = sub_241160D50();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_241007000, v21, v22, "Couldn't create deep link because matching medication concept was nil.", v23, 2u);
      MEMORY[0x2456180C0](v23, -1, -1);
    }
    uint64_t v25 = v0[8];
    uint64_t v24 = v0[9];
    uint64_t v26 = v0[7];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    goto LABEL_39;
  }
  uint64_t v17 = *(void **)(v0[6] + qword_26B007280);
  id v18 = objc_allocWithZone((Class)sub_24115EE70());
  id v19 = v17;
  uint64_t v20 = sub_24115EE50();
LABEL_40:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = (uint64_t (*)(uint64_t))v0[1];
  return v34(v20);
}

uint64_t sub_2410CD1A0(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_2411614D0();
  swift_unknownObjectRelease();
  sub_24115E890();
  MEMORY[0x2456146C0](a1);

  return sub_24101F178((uint64_t)&v4);
}

uint64_t sub_2410CD220(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_24106807C(0, &qword_26B005FC0, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t (*sub_2410CD390(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2410CD514(v6, a2, a3);
  return sub_2410CD3F8;
}

uint64_t (*sub_2410CD3FC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2410CD59C(v6, a2, a3);
  return sub_2410CD3F8;
}

uint64_t (*sub_2410CD464(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_2410CD61C(v6, a2, a3);
  return sub_2410CD3F8;
}

void sub_2410CD4CC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_2410CD514(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x245617450](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *unint64_t v3 = v4;
    return sub_2410CD594;
  }
  __break(1u);
  return result;
}

uint64_t sub_2410CD594()
{
  return swift_release();
}

uint64_t (*sub_2410CD59C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x245617450](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)unint64_t v3 = v4;
    return sub_2410CEAE8;
  }
  __break(1u);
  return result;
}

void (*sub_2410CD61C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x245617450](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)unint64_t v3 = v4;
    return sub_2410CD69C;
  }
  __break(1u);
  return result;
}

void sub_2410CD69C(id *a1)
{
}

uint64_t sub_2410CD6A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_2410CDE8C();
    uint64_t v3 = sub_2411615D0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_241161950();
      swift_bridgeObjectRetain();
      sub_241160830();
      uint64_t result = sub_2411619A0();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        id v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_241161890(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          id v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_241161890();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *uint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_2410CD844(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      unint64_t v7 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v8 = (id)MEMORY[0x245617450](v7, a1);
LABEL_9:
        int64_t v9 = v8;
        unint64_t v10 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_18;
        }
        if (sub_2411610E0() == a2 && v11 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_14:
          sub_241161640();
          sub_241161670();
          sub_241161680();
          sub_241161650();
          goto LABEL_5;
        }
        char v12 = sub_241161890();
        swift_bridgeObjectRelease();
        if (v12) {
          goto LABEL_14;
        }

LABEL_5:
        ++v7;
        if (v10 == v6) {
          return v14;
        }
      }
      if (v7 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      uint64_t v6 = sub_2411616E0();
      if (!v6) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v8 = *(id *)(a1 + 8 * v7 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_2410CD9EC(uint64_t a1)
{
  return sub_2410CDA40(a1, MEMORY[0x263F07908], sub_2410CDDF0, (void (*)(uint64_t))sub_2410CDE24, (void (*)(uint64_t))sub_2410CDE58);
}

uint64_t sub_2410CDA40(uint64_t a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  uint64_t v43 = a5;
  uint64_t v41 = a4;
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v46 = (char *)&v37 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    a3(0);
    uint64_t v14 = sub_2411615D0();
    uint64_t v15 = 0;
    BOOL v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v16 = v8 + 16;
    uint64_t v44 = v17;
    uint64_t v45 = v14 + 56;
    uint64_t v18 = *(unsigned __int8 *)(v16 + 64);
    uint64_t v39 = v13;
    uint64_t v40 = a1 + ((v18 + 32) & ~v18);
    uint64_t v19 = *(void *)(v16 + 56);
    uint64_t v20 = (void (**)(char *, uint64_t))(v16 - 8);
    unint64_t v38 = (uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 16);
    while (1)
    {
      uint64_t v42 = v15;
      uint64_t v21 = v44(v46, v40 + v19 * v15, v7);
      v41(v21);
      uint64_t v22 = sub_241160650();
      uint64_t v23 = ~(-1 << *(unsigned char *)(v14 + 32));
      unint64_t v24 = v22 & v23;
      unint64_t v25 = (v22 & (unint64_t)v23) >> 6;
      uint64_t v26 = *(void *)(v45 + 8 * v25);
      uint64_t v27 = 1 << (v22 & v23);
      if ((v27 & v26) != 0)
      {
        while (1)
        {
          uint64_t v28 = v16;
          uint64_t v29 = v44(v11, *(void *)(v14 + 48) + v24 * v19, v7);
          v43(v29);
          char v30 = sub_2411606E0();
          uint64_t v31 = *v20;
          (*v20)(v11, v7);
          if (v30) {
            break;
          }
          unint64_t v24 = (v24 + 1) & v23;
          unint64_t v25 = v24 >> 6;
          uint64_t v26 = *(void *)(v45 + 8 * (v24 >> 6));
          uint64_t v27 = 1 << v24;
          uint64_t v16 = v28;
          if ((v26 & (1 << v24)) == 0) {
            goto LABEL_8;
          }
        }
        v31(v46, v7);
        uint64_t v16 = v28;
      }
      else
      {
LABEL_8:
        unint64_t v32 = v46;
        *(void *)(v45 + 8 * v25) = v27 | v26;
        uint64_t result = (*v38)(*(void *)(v14 + 48) + v24 * v19, v32, v7);
        uint64_t v34 = *(void *)(v14 + 16);
        BOOL v35 = __OFADD__(v34, 1);
        uint64_t v36 = v34 + 1;
        if (v35)
        {
          __break(1u);
          return result;
        }
        *(void *)(v14 + 16) = v36;
      }
      uint64_t v15 = v42 + 1;
      if (v42 + 1 == v39) {
        return v14;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_2410CDD18()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2410CDD60()
{
  return sub_2410CAEF8(v0[2], v0[3], v0[4]);
}

uint64_t sub_2410CDD6C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2410CDDE8()
{
  return type metadata accessor for MedicationCategoryViewController();
}

void sub_2410CDDF0(uint64_t a1)
{
}

uint64_t sub_2410CDE24()
{
  return sub_2410C860C(&qword_268CF1980, MEMORY[0x263F07908]);
}

uint64_t sub_2410CDE58()
{
  return sub_2410C860C((unint64_t *)&unk_268CF1988, MEMORY[0x263F07908]);
}

void sub_2410CDE8C()
{
  if (!qword_26B005ED0)
  {
    unint64_t v0 = sub_2411615E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005ED0);
    }
  }
}

void sub_2410CDEEC(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_2410CE244();
      uint64_t v3 = sub_2411615D0();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_2411616E0();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v43 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v41 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x245617450](v8, v1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        uint64_t v12 = sub_2411612D0();
        uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)(v7 + 8 * v15) = v17 | v16;
        *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
        uint64_t v23 = *(void *)(v3 + 16);
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        *(void *)(v3 + 16) = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_241024708(0, (unint64_t *)&qword_26B005E00);
      id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
      char v19 = sub_2411612E0();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_2411612E0();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v41;
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      unint64_t v1 = v41;
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = v1 + 32;
  uint64_t v42 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_2411612D0();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_241024708(0, (unint64_t *)&qword_26B005E00);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_2411612E0();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_2411612E0();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_38;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_2410CE244()
{
  if (!qword_26B0060C8)
  {
    sub_241024708(255, (unint64_t *)&qword_26B005E00);
    sub_241023228(&qword_26B005E08, (unint64_t *)&qword_26B005E00);
    unint64_t v0 = sub_2411615E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0060C8);
    }
  }
}

uint64_t sub_2410CE2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsPDFProvider(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2410CE350()
{
  if (!qword_268CF19A8)
  {
    sub_2410C9634(255, &qword_268CF19B0, &qword_268CF19B8, MEMORY[0x263F43E70], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF19A8);
    }
  }
}

void sub_2410CE3D4(uint64_t a1)
{
}

void sub_2410CE408(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_2411615E0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_2410CE478()
{
  return sub_2410C860C(&qword_268CF19C8, MEMORY[0x263F43F70]);
}

uint64_t sub_2410CE4AC()
{
  return sub_2410C860C((unint64_t *)&unk_268CF19D0, MEMORY[0x263F43F70]);
}

uint64_t sub_2410CE4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_2410CE540()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2410CE578(uint64_t a1)
{
  sub_2410C710C(a1, v1);
}

unint64_t sub_2410CE580()
{
  unint64_t result = qword_268CF19F0;
  if (!qword_268CF19F0)
  {
    sub_2410CE724(255, (unint64_t *)&unk_268CF19E0, MEMORY[0x263F07CB0], sub_24108F304, MEMORY[0x263EFDCA8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF19F0);
  }
  return result;
}

void sub_2410CE61C()
{
  if (!qword_26B006DC0)
  {
    sub_241160FB0();
    sub_241024708(255, (unint64_t *)&qword_26B007360);
    sub_24108F304();
    unint64_t v0 = sub_24115FAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006DC0);
    }
  }
}

void sub_2410CE6A8(uint64_t a1)
{
}

uint64_t sub_2410CE6F0()
{
  return sub_2410C860C(&qword_26B006DB8, (void (*)(uint64_t))sub_2410CE61C);
}

void sub_2410CE724(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_241024708(255, (unint64_t *)&qword_26B007340);
    v11[2] = a4();
    v11[3] = sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
    unint64_t v9 = a5(a1, v11);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_2410CE808()
{
  return sub_2410C860C(&qword_268CF1A18, sub_2410CE6A8);
}

void sub_2410CE83C()
{
  if (!qword_268CF1A20)
  {
    sub_2410CE724(255, &qword_268CF1A10, (uint64_t (*)(uint64_t))sub_2410CE6A8, sub_2410CE808, MEMORY[0x263EFDB70]);
    sub_2410CE8E4();
    unint64_t v0 = sub_24115FB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1A20);
    }
  }
}

unint64_t sub_2410CE8E4()
{
  unint64_t result = qword_268CF1A28;
  if (!qword_268CF1A28)
  {
    sub_2410CE724(255, &qword_268CF1A10, (uint64_t (*)(uint64_t))sub_2410CE6A8, sub_2410CE808, MEMORY[0x263EFDB70]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1A28);
  }
  return result;
}

void sub_2410CE980(void **a1)
{
  sub_2410C7EB4(a1, v1);
}

void sub_2410CE988(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2410CE9EC()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2410CEA2C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24100B740;
  return sub_2410C8654();
}

uint64_t sub_2410CEAEC()
{
  return sub_2411619A0();
}

uint64_t sub_2410CEB64()
{
  sub_241160830();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2410CEBC0()
{
  return sub_2411619A0();
}

uint64_t sub_2410CEC34@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_241161760();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_2410CEC94(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7972616D697270;
  if (*v1) {
    uint64_t v2 = 0x676E6972616873;
  }
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_2410CECCC()
{
  return sub_241160950();
}

uint64_t sub_2410CED2C()
{
  return sub_241160930();
}

uint64_t sub_2410CED7C(char *a1, char *a2)
{
  return sub_2410B3D10(*a1, *a2);
}

uint64_t sub_2410CED88()
{
  if (*v0) {
    return 0x676E6972616873;
  }
  else {
    return 0x7972616D697270;
  }
}

uint64_t initializeBufferWithCopyOfBuffer for InteractiveTimelineConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t assignWithCopy for MedicationShareableData(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v7 = *(void **)(a1 + 96);
  unint64_t v8 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v8;
  id v9 = v8;

  uint64_t v10 = *(void **)(a1 + 104);
  uint64_t v11 = *(void **)(a2 + 104);
  *(void *)(a1 + 104) = v11;
  id v12 = v11;

  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t *)(a2 + 120);
  unint64_t v14 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128) >> 60 == 15)
  {
    if (v14 >> 60 != 15)
    {
      uint64_t v15 = *v13;
      sub_241022EB4(*v13, *(void *)(a2 + 128));
      *(void *)(a1 + 120) = v15;
      *(void *)(a1 + 128) = v14;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
    sub_2410CF034(a1 + 120);
LABEL_6:
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v13;
    goto LABEL_8;
  }
  uint64_t v16 = *v13;
  sub_241022EB4(*v13, *(void *)(a2 + 128));
  uint64_t v17 = *(void *)(a1 + 120);
  unint64_t v18 = *(void *)(a1 + 128);
  *(void *)(a1 + 120) = v16;
  *(void *)(a1 + 128) = v14;
  sub_241023084(v17, v18);
LABEL_8:
  char v19 = (uint64_t *)(a2 + 136);
  unint64_t v20 = *(void *)(a2 + 144);
  if (*(void *)(a1 + 144) >> 60 != 15)
  {
    if (v20 >> 60 != 15)
    {
      uint64_t v22 = *v19;
      sub_241022EB4(*v19, *(void *)(a2 + 144));
      uint64_t v23 = *(void *)(a1 + 136);
      unint64_t v24 = *(void *)(a1 + 144);
      *(void *)(a1 + 136) = v22;
      *(void *)(a1 + 144) = v20;
      sub_241023084(v23, v24);
      goto LABEL_15;
    }
    sub_2410CF034(a1 + 136);
    goto LABEL_13;
  }
  if (v20 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 136) = *(_OWORD *)v19;
    goto LABEL_15;
  }
  uint64_t v21 = *v19;
  sub_241022EB4(*v19, *(void *)(a2 + 144));
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v20;
LABEL_15:
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  return a1;
}

uint64_t sub_2410CF034(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for MedicationShareableData()
{
  return &type metadata for MedicationShareableData;
}

unsigned char *storeEnumTagSinglePayload for MedicationShareableData.Audience(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2410CF164);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationShareableData.Audience()
{
  return &type metadata for MedicationShareableData.Audience;
}

unint64_t sub_2410CF1A0()
{
  unint64_t result = qword_268CF1A50;
  if (!qword_268CF1A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1A50);
  }
  return result;
}

unint64_t sub_2410CF1F4()
{
  unint64_t result = qword_26B004F10;
  if (!qword_26B004F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004F10);
  }
  return result;
}

uint64_t sub_2410CF248(unint64_t a1)
{
  return sub_2410CF2A0(a1, MEMORY[0x263F44D88], sub_2410D61F0);
}

uint64_t sub_2410CF274(unint64_t a1)
{
  return sub_2410CF2A0(a1, (uint64_t (*)(void))type metadata accessor for MedicationMonthHighlightItem, sub_2410D5EBC);
}

uint64_t sub_2410CF2A0(unint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (!v6) {
    return v7;
  }
  uint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t result = sub_2410E590C(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = v20;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = 0;
      do
      {
        uint64_t v10 = MEMORY[0x245617450](v9, a1);
        uint64_t v20 = v7;
        unint64_t v12 = *(void *)(v7 + 16);
        unint64_t v11 = *(void *)(v7 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_2410E590C(v11 > 1, v12 + 1, 1);
          uint64_t v7 = v20;
        }
        ++v9;
        uint64_t v18 = a2(0);
        uint64_t v19 = a3();
        *(void *)&long long v17 = v10;
        *(void *)(v7 + 16) = v12 + 1;
        sub_241027314(&v17, v7 + 40 * v12 + 32);
      }
      while (v6 != v9);
    }
    else
    {
      uint64_t v13 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v14 = *v13;
        uint64_t v20 = v7;
        unint64_t v15 = *(void *)(v7 + 16);
        unint64_t v16 = *(void *)(v7 + 24);
        swift_retain();
        if (v15 >= v16 >> 1)
        {
          sub_2410E590C(v16 > 1, v15 + 1, 1);
          uint64_t v7 = v20;
        }
        uint64_t v18 = a2(0);
        uint64_t v19 = a3();
        *(void *)&long long v17 = v14;
        *(void *)(v7 + 16) = v15 + 1;
        sub_241027314(&v17, v7 + 40 * v15 + 32);
        ++v13;
        --v6;
      }
      while (v6);
    }
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t MedicationListCompactDataSource.__allocating_init(listManager:healthStore:viewController:analyticsManager:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_2410D5698(a1, a2, (uint64_t)a3, a4);

  swift_release();
  return v8;
}

uint64_t sub_2410CF4FC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_2410D5698(a1, a2, (uint64_t)a3, a4);

  swift_release();
  return v8;
}

uint64_t sub_2410CF574(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_241051F20(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(type metadata accessor for MedicationDaySummaryViewModelChange(0) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410CF724(uint64_t a1)
{
  return sub_24100A838(a1, (uint64_t (*)(void))sub_241052AB4, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
}

uint64_t sub_2410CF750(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_241051F68(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410CF8A4(uint64_t a1)
{
  return sub_24100A838(a1, (uint64_t (*)(void))sub_241052AFC, MEMORY[0x263F44CB0]);
}

uint64_t sub_2410CF8D0(unint64_t a1)
{
  return sub_241013838(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_2410D4F84);
}

uint64_t _s26MedicationsHealthAppPlugin31MedicationListCompactDataSourceC13makePublisher7Combine03AnyK0VySay0bA2UI0eF4ItemCG_AKts5NeverOGyF_0()
{
  uint64_t v1 = qword_268CF1A80;
  if (*(void *)(v0 + qword_268CF1A80))
  {
    uint64_t v2 = *(void *)(v0 + qword_268CF1A80);
  }
  else
  {
    uint64_t v2 = sub_2410CF950(v0);
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_2410CF950(uint64_t a1)
{
  sub_2410D6224();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v2);
  int64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410D63D8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  uint64_t v36 = v7;
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410D65D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  uint64_t v38 = v11;
  MEMORY[0x270FA5388](v10);
  id v33 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24115F400();
  int64_t v14 = *(void **)(a1 + qword_268CF1A58);
  unint64_t v15 = (void *)sub_24115D5A0();
  uint64_t v34 = v13;
  uint64_t v40 = v13;
  swift_retain();
  sub_24115D5B0();
  uint64_t v16 = sub_24115F630();
  swift_release();
  uint64_t v39 = v16;
  sub_2410D631C();
  unint64_t v17 = (void (*)(uint64_t))MEMORY[0x263F45D68];
  sub_2410D64D0(0, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68]);
  sub_2410D59C8(&qword_26B006E68, (void (*)(uint64_t))sub_2410D631C);
  sub_2410D6388(&qword_26B0072C0, (unint64_t *)&qword_26B0072C8, v17);
  sub_24115FAA0();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v14;
  *(void *)(v18 + 24) = v15;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_2410D6750;
  *(void *)(v19 + 24) = v18;
  id v20 = v14;
  id v30 = v15;
  sub_24115FC10();
  sub_2410D64D0(0, &qword_26B006E40, (void (*)(uint64_t))sub_2410D6534);
  sub_2410D59C8(&qword_26B006D90, (void (*)(uint64_t))sub_2410D6224);
  sub_2410D6388(&qword_26B006E38, &qword_26B006E40, (void (*)(uint64_t))sub_2410D6534);
  uint64_t v21 = v31;
  sub_24115FF80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v21);
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_2410D67C0;
  *(void *)(v23 + 24) = v22;
  sub_2410D667C();
  sub_2410D59C8(&qword_26B006E08, (void (*)(uint64_t))sub_2410D63D8);
  unint64_t v24 = v33;
  uint64_t v25 = v35;
  sub_24115FE70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v25);
  sub_2410D59C8(&qword_26B006DF8, (void (*)(uint64_t))sub_2410D65D0);
  uint64_t v26 = v37;
  uint64_t v27 = sub_24115FE20();
  swift_release();

  (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v26);
  return v27;
}

unint64_t sub_2410CFE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a3;
  uint64_t v46 = a2;
  sub_2410D6818();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24115F6B0();
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v48 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410D5AAC(0, &qword_26B006E80, MEMORY[0x263F45D68], MEMORY[0x263EFDDF8]);
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v41 - v12;
  sub_2410D69A4();
  uint64_t v43 = *(void *)(v13 - 8);
  uint64_t v44 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v42 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a1;
  unint64_t result = sub_24115F6A0();
  unint64_t v16 = result;
  if (result >> 62)
  {
    unint64_t result = sub_2411616E0();
    uint64_t v17 = result;
  }
  else
  {
    uint64_t v17 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v55 = v6;
  uint64_t v56 = v5;
  uint64_t v54 = v8;
  if (!v17)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_241161090();
    swift_bridgeObjectRelease();
    uint64_t v58 = v30;
    uint64_t v57 = MEMORY[0x263F8EE78];
    sub_2410D6A38();
    sub_2410D59C8(&qword_26B006E48, (void (*)(uint64_t))sub_2410D6A38);
    uint64_t v31 = v42;
    sub_24115FE40();
    swift_release();
    sub_2410D59C8(&qword_26B006DC8, (void (*)(uint64_t))sub_2410D69A4);
    uint64_t v32 = v44;
    uint64_t v33 = sub_24115FE20();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v32);
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v48, v53, v52);
    uint64_t v34 = v47;
    sub_24115FCC0();
    sub_2410D6AE4();
    uint64_t v35 = v50;
    uint64_t v36 = sub_24115FE20();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v35);
    uint64_t v57 = v33;
    uint64_t v58 = v36;
    uint64_t v37 = (void (*)(uint64_t))MEMORY[0x263F45D68];
    sub_2410D64D0(0, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68]);
    sub_2410D6910();
    sub_2410D6388(&qword_26B0072C0, (unint64_t *)&qword_26B0072C8, v37);
    sub_2410D59C8(&qword_26B006E58, (void (*)(uint64_t))sub_2410D6910);
    uint64_t v38 = v54;
    sub_24115FE60();
    sub_2410D59C8(&qword_26B006D80, (void (*)(uint64_t))sub_2410D6818);
    uint64_t v39 = v56;
    uint64_t v40 = sub_24115FE20();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v39);
    return v40;
  }
  if (v17 >= 1)
  {
    uint64_t v18 = 0;
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if ((v16 & 0xC000000000000001) != 0) {
        id v20 = (id)MEMORY[0x245617450](v18, v16);
      }
      else {
        id v20 = *(id *)(v16 + 8 * v18 + 32);
      }
      uint64_t v21 = v20;
      id v22 = objc_msgSend(v20, sel_semanticIdentifier);
      id v23 = objc_msgSend(v22, sel_stringValue);

      uint64_t v24 = sub_241160730();
      uint64_t v26 = v25;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_241051F68(0, v19[2] + 1, 1, v19);
      }
      unint64_t v28 = v19[2];
      unint64_t v27 = v19[3];
      if (v28 >= v27 >> 1) {
        uint64_t v19 = sub_241051F68((void *)(v27 > 1), v28 + 1, 1, v19);
      }
      ++v18;
      v19[2] = v28 + 1;
      uint64_t v29 = &v19[2 * v28];
      v29[4] = v24;
      v29[5] = v26;
    }
    while (v17 != v18);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_2410D04CC(void *a1, unint64_t a2)
{
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return MEMORY[0x263F8EE78];
  }
  if (a2 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2411616E0();
    uint64_t v33 = (uint64_t)a1;
    if (v4) {
      goto LABEL_4;
    }
    goto LABEL_29;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v33 = (uint64_t)a1;
  if (!v4)
  {
LABEL_29:
    a1 = (void *)MEMORY[0x263F8EE80];
LABEL_30:
    swift_bridgeObjectRelease();
    sub_2410D07BC((uint64_t)a1);
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    unint64_t v29 = sub_2410D0AD4(v33, v31);
    swift_bridgeObjectRelease();
    swift_release();
    return v29;
  }
LABEL_4:
  unint64_t v35 = a2 & 0xC000000000000001;
  a1 = (void *)MEMORY[0x263F8EE80];
  uint64_t v5 = 4;
  unint64_t v34 = a2;
  while (1)
  {
    if (v35) {
      id v6 = (id)MEMORY[0x245617450](v5 - 4, a2);
    }
    else {
      id v6 = *(id *)(a2 + 8 * v5);
    }
    uint64_t v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    id v9 = objc_msgSend(v6, sel_medicationIdentifier);
    if (v9) {
      break;
    }

LABEL_6:
    ++v5;
    if (v8 == v4) {
      goto LABEL_30;
    }
  }
  uint64_t v10 = v9;
  a2 = v4;
  uint64_t v11 = sub_241160730();
  uint64_t v13 = v12;

  id v14 = v7;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v17 = sub_24101DC1C(v11, v13);
  uint64_t v18 = a1[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19)) {
    goto LABEL_26;
  }
  char v21 = v16;
  if (a1[3] >= v20)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v16) {
        goto LABEL_19;
      }
    }
    else
    {
      sub_24106618C();
      if (v21) {
        goto LABEL_19;
      }
    }
LABEL_21:
    a1[(v17 >> 6) + 8] |= 1 << v17;
    uint64_t v25 = (uint64_t *)(a1[6] + 16 * v17);
    uint64_t *v25 = v11;
    v25[1] = v13;
    *(void *)(a1[7] + 8 * v17) = v14;
    uint64_t v26 = a1[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_27;
    }
    a1[2] = v28;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  sub_2410640F0(v20, isUniquelyReferenced_nonNull_native);
  unint64_t v22 = sub_24101DC1C(v11, v13);
  if ((v21 & 1) == (v23 & 1))
  {
    unint64_t v17 = v22;
    if ((v21 & 1) == 0) {
      goto LABEL_21;
    }
LABEL_19:
    uint64_t v24 = a1[7];

    *(void *)(v24 + 8 * v17) = v14;
LABEL_23:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a2;
    a2 = v34;
    goto LABEL_6;
  }
  uint64_t result = sub_2411618E0();
  __break(1u);
  return result;
}

void sub_2410D07BC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_24106849C();
    uint64_t v2 = (void *)sub_241161720();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v11 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v11 >= v27) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v11);
  int64_t v13 = i + 1;
  if (!v12)
  {
    int64_t v13 = i + 2;
    if (i + 2 >= v27) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v13);
    if (!v12)
    {
      int64_t v13 = i + 3;
      if (i + 3 >= v27) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = i + 4;
        if (i + 4 >= v27) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v13);
        if (!v12)
        {
          int64_t v14 = i + 5;
          if (i + 5 < v27)
          {
            unint64_t v12 = *(void *)(v28 + 8 * v14);
            if (v12)
            {
              int64_t v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_36;
              }
              if (v13 >= v27) {
                break;
              }
              unint64_t v12 = *(void *)(v28 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_24101E92C();
          return;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v12 - 1) & v12;
  unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; unint64_t v10 = v9 | (i << 6))
  {
    unint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    sub_241024708(0, &qword_26B007348);
    sub_2410D5E54(0, (unint64_t *)&qword_26B007350, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F8D8F0]);
    swift_bridgeObjectRetain();
    id v19 = v18;
    swift_dynamicCast();
    unint64_t v20 = sub_24101DC1C(v17, v16);
    unint64_t v21 = v20;
    if (v22)
    {
      uint64_t v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      *uint64_t v7 = v17;
      v7[1] = v16;
      uint64_t v8 = v2[7];

      *(void *)(v8 + 8 * v21) = v29;
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    char v23 = (uint64_t *)(v2[6] + 16 * v20);
    uint64_t *v23 = v17;
    v23[1] = v16;
    *(void *)(v2[7] + 8 * v20) = v29;
    uint64_t v24 = v2[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_34;
    }
    v2[2] = v26;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

unint64_t sub_2410D0AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v68 = a2;
  uint64_t v3 = sub_24115EB60();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  v66 = (char *)&v60 - v9;
  MEMORY[0x270FA5388](v8);
  int64_t v11 = (char *)&v60 - v10;
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v70 = MEMORY[0x263F8EE78];
  unint64_t result = sub_24115F6A0();
  unint64_t v14 = result;
  if (result >> 62)
  {
    unint64_t result = sub_2411616E0();
    uint64_t v15 = result;
    uint64_t v67 = v3;
    if (result) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v15 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v67 = v3;
  if (!v15) {
    goto LABEL_20;
  }
LABEL_3:
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v60 = a1;
  uint64_t v61 = v4;
  uint64_t v16 = 0;
  uint64_t v64 = (void (**)(char *, char *, uint64_t))(v4 + 16);
  unint64_t v65 = v14 & 0xC000000000000001;
  v62 = v7;
  uint64_t v63 = (void (**)(char *, uint64_t))(v4 + 8);
  do
  {
    if (v65) {
      id v17 = (id)MEMORY[0x245617450](v16, v14);
    }
    else {
      id v17 = *(id *)(v14 + 8 * v16 + 32);
    }
    uint64_t v18 = v17;
    self;
    uint64_t v19 = swift_dynamicCastObjCClass();
    if (v19)
    {
      unint64_t v20 = (void *)v19;
      uint64_t v21 = v15;
      id v22 = v18;
      id v23 = objc_msgSend(v20, sel_semanticIdentifier, v60);
      id v24 = objc_msgSend(v23, sel_stringValue);

      uint64_t v25 = sub_241160730();
      uint64_t v27 = v26;

      uint64_t v28 = v68;
      if (*(void *)(v68 + 16) && (unint64_t v29 = sub_24101DC1C(v25, v27), (v30 & 1) != 0))
      {
        uint64_t v31 = *(void **)(*(void *)(v28 + 56) + 8 * v29);
        id v32 = v31;
      }
      else
      {
        uint64_t v31 = 0;
      }
      swift_bridgeObjectRelease();
      id v33 = v31;
      id v34 = v22;
      sub_24115EB50();
      uint64_t v35 = v67;
      (*v64)(v66, v11, v67);
      sub_24115D5A0();
      sub_24115EA10();
      swift_allocObject();
      sub_24115EA00();
      uint64_t v36 = swift_retain();
      MEMORY[0x2456167B0](v36);
      if (*(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2411609D0();
      }
      sub_241160A00();
      sub_2411609C0();

      swift_release();
      (*v63)(v11, v35);
      uint64_t v15 = v21;
    }
    else
    {
    }
    ++v16;
  }
  while (v15 != v16);
  swift_bridgeObjectRelease();
  uint64_t v4 = v61;
  uint64_t v7 = v62;
  uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_21:
  uint64_t v69 = v12;
  unint64_t result = sub_24115F640();
  unint64_t v37 = result;
  if (!(result >> 62))
  {
    uint64_t v38 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v38) {
      goto LABEL_23;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    return v70;
  }
  unint64_t result = sub_2411616E0();
  uint64_t v38 = result;
  if (!result) {
    goto LABEL_41;
  }
LABEL_23:
  if (v38 >= 1)
  {
    uint64_t v39 = 0;
    uint64_t v64 = (void (**)(char *, char *, uint64_t))(v4 + 16);
    unint64_t v65 = v37 & 0xC000000000000001;
    uint64_t v63 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      if (v65) {
        id v40 = (id)MEMORY[0x245617450](v39, v37);
      }
      else {
        id v40 = *(id *)(v37 + 8 * v39 + 32);
      }
      uint64_t v41 = v40;
      self;
      uint64_t v42 = swift_dynamicCastObjCClass();
      if (v42)
      {
        uint64_t v43 = (void *)v42;
        id v44 = v41;
        id v45 = objc_msgSend(v43, sel_semanticIdentifier);
        id v46 = objc_msgSend(v45, sel_stringValue);

        uint64_t v47 = sub_241160730();
        uint64_t v49 = v48;

        uint64_t v50 = v68;
        if (*(void *)(v68 + 16))
        {
          unint64_t v51 = sub_24101DC1C(v47, v49);
          uint64_t v52 = v7;
          if (v53)
          {
            uint64_t v54 = *(void **)(*(void *)(v50 + 56) + 8 * v51);
            id v55 = v54;
          }
          else
          {
            uint64_t v54 = 0;
          }
        }
        else
        {
          uint64_t v54 = 0;
          uint64_t v52 = v7;
        }
        swift_bridgeObjectRelease();
        id v56 = v54;
        id v57 = v44;
        sub_24115EB50();
        uint64_t v58 = v67;
        (*v64)(v66, v52, v67);
        sub_24115D5A0();
        sub_24115EA10();
        swift_allocObject();
        sub_24115EA00();
        uint64_t v59 = swift_retain();
        MEMORY[0x2456167B0](v59);
        uint64_t v7 = v52;
        if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2411609D0();
        }
        sub_241160A00();
        sub_2411609C0();

        swift_release();
        (*v63)(v52, v58);
      }
      else
      {
      }
      ++v39;
    }
    while (v38 != v39);
    goto LABEL_41;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t MedicationListCompactDataSource.init(listManager:healthStore:viewController:analyticsManager:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = sub_2410D5698(a1, a2, (uint64_t)a3, a4);

  swift_release();
  return v5;
}

uint64_t sub_2410D1128()
{
  swift_release();
  swift_unknownObjectWeakDestroy();

  return swift_release();
}

uint64_t MedicationListCompactDataSource.deinit()
{
  objc_msgSend(*(id *)(v0 + qword_268CF1A58), sel_unregisterObserver_, *(void *)(v0 + qword_268CF1A60));
  uint64_t v1 = sub_24115D600();

  swift_release();
  swift_unknownObjectWeakDestroy();

  swift_release();
  return v1;
}

uint64_t MedicationListCompactDataSource.__deallocating_deinit()
{
  MedicationListCompactDataSource.deinit();

  return swift_deallocClassInstance();
}

Swift::Void __swiftcall MedicationListCompactDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_2410D5934();
  uint64_t v2 = (void (*)(UICollectionView *))sub_24115D5F0();
  v2(a1);
  sub_24115EB40();
  sub_2410D59C8(&qword_26B0069F8, MEMORY[0x263F44DE8]);
  sub_241160DE0();
  sub_24115E770();
  sub_241160DE0();
  sub_24115DB80();
  sub_241160DE0();
  sub_24115E980();
  sub_2410D59C8(&qword_26B0069E0, MEMORY[0x263F44D60]);
  sub_241160DE0();
  sub_24115E5A0();
  sub_241160DF0();
}

void MedicationListCompactDataSource.layoutType(for:with:)(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24115DF90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 == 1)
  {
    sub_24115DF30();
    sub_24115DF60();
    id v10 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    sub_24115DF40();
    int64_t v11 = (void (*)(unsigned char *, void))sub_24115DF70();
    *(void *)(v12 + 16) = 0x4034000000000000;
    v11(v20, 0);
    sub_2410D5A10();
    uint64_t v14 = *(int *)(v13 + 48);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v7 + 16))(a3, v9, v6);
    uint64_t v15 = sub_24115D5D0();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    *(void *)(a3 + v14) = v15;
    uint64_t v16 = *MEMORY[0x263F44110];
    uint64_t v17 = sub_24115DF00();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104))(a3, v16, v17);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(a3, 0, 1, v17);
  }
  else if (a1)
  {
    sub_2410D5934();
    uint64_t v19 = (void (*)(uint64_t, void *))sub_24115D5F0();
    v19(a1, a2);
  }
  else
  {
    sub_2410D166C(0, a2, a3);
  }
}

void sub_2410D166C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v52 = a3;
  uint64_t v4 = sub_24115DF90();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24115E1A0();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v46 = (void (*)(void))sub_24115DAE0();
  uint64_t v10 = *((void *)v46 - 1);
  MEMORY[0x270FA5388](v46);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24115DF00();
  uint64_t v51 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v50 = (uint64_t *)((char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v47 = a2;
  id v15 = objc_msgSend(a2, sel_traitCollection, v43);
  id v16 = objc_msgSend(v15, sel_horizontalSizeClass);

  if (v16 != (id)2) {
    goto LABEL_8;
  }
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A980]), sel_init);
  id v18 = objc_msgSend(v17, sel_features);

  if (!v18) {
    goto LABEL_12;
  }
  unsigned int v19 = objc_msgSend(v18, sel_stanley);

  if (!v19)
  {
LABEL_8:
    sub_24115DF20();
    sub_24115DF60();
    id v24 = (void (*)(char *, void))sub_24115DF70();
    *(void *)(v25 + 16) = 0x4024000000000000;
    v24(v53, 0);
    sub_24115DF50();
    id v26 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    sub_24115DF40();
    sub_2410D5A10();
    uint64_t v28 = v27;
    uint64_t v29 = *(int *)(v27 + 48);
    uint64_t v30 = v48;
    uint64_t v31 = v49;
    uint64_t v44 = *(void *)(v48 + 16);
    id v32 = v50;
    ((void (*)(void *, char *, uint64_t))v44)(v50, v6, v49);
    *(void *)((char *)v32 + v29) = sub_24115D5D0();
    LODWORD(v47) = *MEMORY[0x263F44110];
    uint64_t v33 = v51;
    id v46 = *(void (**)(void))(v51 + 104);
    v46(v32);
    uint64_t v34 = v13;
    uint64_t v45 = *(int *)(v28 + 48);
    ((void (*)(uint64_t, char *, uint64_t))v44)(v52, v6, v31);
    uint64_t v35 = v52;
    uint64_t v36 = sub_24115D5D0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
    (*(void (**)(void *, uint64_t))(v33 + 8))(v50, v34);
    *(void *)(v35 + v45) = v36;
    uint64_t v42 = v34;
    ((void (*)(uint64_t, void, uint64_t))v46)(v35, v47, v34);
    goto LABEL_9;
  }
  uint64_t v49 = v13;
  id v20 = objc_msgSend(v47, sel_traitCollection);
  id v21 = objc_msgSend(v20, sel_preferredContentSizeCategory);

  sub_241161020();
  sub_2410D466C();
  swift_unknownObjectRetain();
  sub_24115D5B0();
  unint64_t v22 = sub_24115F600();
  swift_release();
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!__OFADD__(v23, 1))
  {
    sub_24115E190();
    unint64_t v37 = (void *)sub_24115DAC0();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v45);
    id v38 = objc_msgSend(self, sel_estimatedDimension_, 100.0);
    uint64_t v39 = (void *)sub_241161080();

    objc_msgSend(v39, sel__setPreBoundaryPadding_, 30.0);
    objc_msgSend(v39, sel_contentInsets);
    objc_msgSend(v39, sel_setContentInsets_);
    (*(void (**)(char *, void (*)(void)))(v10 + 8))(v12, v46);
    id v40 = v50;
    *uint64_t v50 = v39;
    uint64_t v41 = v51;
    uint64_t v42 = v49;
    (*(void (**)(void *, void, uint64_t))(v51 + 104))(v40, *MEMORY[0x263F44118], v49);
    (*(void (**)(uint64_t, void *, uint64_t))(v41 + 32))(v52, v40, v42);
LABEL_9:
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v42);
    return;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t MedicationListCompactDataSource.sectionsForItems(listItems:nonListItems:)(unint64_t a1)
{
  uint64_t v2 = sub_24115E9F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F07690];
  sub_2410D5AAC(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v23 - v8;
  sub_2410D5AAC(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  uint64_t v26 = *(void *)(*(void *)(sub_24115DDF0() - 8) + 72);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24116B200;
  uint64_t v11 = sub_24115CB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  sub_24115E9E0();
  uint64_t v12 = sub_24115EF20();
  uint64_t v24 = v13;
  uint64_t v25 = v12;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_241025214((uint64_t)v9, (unint64_t *)&qword_26B007200, v6);
  long long v23 = xmmword_24116B370;
  long long v33 = xmmword_24116B370;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14)
  {
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
  }
  else
  {
    swift_allocObject();
    swift_weakInit();
    *((void *)&v35 + 1) = sub_24115E9A0();
    uint64_t v36 = sub_2410D59C8(&qword_268CF1A88, MEMORY[0x263F44D70]);
    sub_2410277C0((uint64_t *)&v34);
    sub_24115E990();
  }
  sub_241061700((uint64_t)&v34, (uint64_t)v32);
  sub_241028108((uint64_t)v32, (uint64_t)&v29, (uint64_t (*)(void))sub_24106163C);
  if (v30)
  {
    sub_241027314(&v29, (uint64_t)v31);
    sub_241027314(v31, (uint64_t)&v29);
    id v15 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v15 = sub_241052654(0, v15[2] + 1, 1, v15);
    }
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1) {
      id v15 = sub_241052654((void *)(v16 > 1), v17 + 1, 1, v15);
    }
    v15[2] = v17 + 1;
    sub_241027314(&v29, (uint64_t)&v15[5 * v17 + 4]);
  }
  else
  {
    sub_2410D5F54((uint64_t)&v29, (uint64_t (*)(void))sub_24106163C);
    id v15 = (void *)MEMORY[0x263F8EE78];
  }
  sub_24106163C();
  swift_arrayDestroy();
  uint64_t v18 = sub_2410CF2A0(a1, MEMORY[0x263F44D88], sub_2410D61F0);
  v32[0] = v15;
  sub_241009F84(v18, (uint64_t (*)(void))sub_241052654, (unint64_t *)&qword_26B0069A8);
  sub_24115DDE0();
  long long v27 = v23;
  sub_2410D2BC0(v14 == 0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))1, (uint64_t)v28);
  sub_241061700((uint64_t)v28, (uint64_t)v32);
  sub_241028108((uint64_t)v32, (uint64_t)&v29, (uint64_t (*)(void))sub_24106163C);
  if (v30)
  {
    sub_241027314(&v29, (uint64_t)v31);
    sub_241027314(v31, (uint64_t)&v29);
    unsigned int v19 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unsigned int v19 = sub_241052654(0, v19[2] + 1, 1, v19);
    }
    unint64_t v21 = v19[2];
    unint64_t v20 = v19[3];
    if (v21 >= v20 >> 1) {
      unsigned int v19 = sub_241052654((void *)(v20 > 1), v21 + 1, 1, v19);
    }
    v19[2] = v21 + 1;
    sub_241027314(&v29, (uint64_t)&v19[5 * v21 + 4]);
  }
  else
  {
    sub_2410D5F54((uint64_t)&v29, (uint64_t (*)(void))sub_24106163C);
  }
  swift_arrayDestroy();
  sub_24115DDE0();
  return v10;
}

Swift::String_optional __swiftcall MedicationListCompactDataSource.buttonText(for:)(Swift::Int a1)
{
  uint64_t v2 = sub_24115E9F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410D5AAC(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  if (!a1)
  {
    uint64_t v11 = sub_24115CB90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
    sub_24115E9E0();
    uint64_t v9 = sub_24115EF20();
    uint64_t v10 = v12;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_241025214((uint64_t)v8, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
  }
  uint64_t v13 = v9;
  uint64_t v14 = v10;
  result.value._object = v14;
  result.value._countAndFlagsBits = v13;
  return result;
}

uint64_t (*MedicationListCompactDataSource.buttonTappedCallback(for:)(uint64_t a1))()
{
  uint64_t v1 = nullsub_1;
  if (!a1)
  {
    swift_allocObject();
    swift_weakInit();
    return sub_2410D5B50;
  }
  return v1;
}

uint64_t sub_2410D2638()
{
  uint64_t v0 = sub_241160410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241160440();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    sub_241024708(0, (unint64_t *)&qword_26B007340);
    uint64_t v10 = sub_241160EF0();
    aBlock[4] = sub_2410D601C;
    aBlock[5] = v9;
    uint64_t v16 = (void *)v10;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24101AFBC;
    aBlock[3] = &unk_26F556590;
    id v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_241160430();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_2410D59C8(&qword_26B0072E0, MEMORY[0x263F8F030]);
    uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
    sub_2410D5AAC(0, (unint64_t *)&unk_26B0072F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    uint64_t v14 = v4;
    sub_2410D6024((unint64_t *)&qword_26B007300, (unint64_t *)&unk_26B0072F0, v11);
    sub_2411614F0();
    uint64_t v13 = v15;
    uint64_t v12 = v16;
    MEMORY[0x245616D40](0, v7, v3, v15);
    _Block_release(v13);
    swift_release();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  }
  return result;
}

void sub_2410D2968()
{
  uint64_t v0 = (void *)sub_24115D5A0();
  uint64_t v1 = sub_24115D5B0();
  id v2 = objc_allocWithZone((Class)type metadata accessor for MedicationsListEditViewController());
  uint64_t v6 = sub_2411113D4(v0, v1);

  swift_release();
  uint64_t v3 = (void *)sub_24115D5D0();
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_viewController);

    if (v5)
    {
      sub_241160E50();
    }
  }
}

double MedicationListCompactDataSource.makeAddMedicationHeroTile(isEmpty:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    swift_allocObject();
    swift_weakInit();
    *(void *)(a2 + 24) = sub_24115E9A0();
    *(void *)(a2 + 32) = sub_2410D59C8(&qword_268CF1A88, MEMORY[0x263F44D70]);
    sub_2410277C0((uint64_t *)a2);
    sub_24115E990();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_2410D2B10()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)MEMORY[0x2456181C0](result + qword_268CF1A70);
    if (v1)
    {
      id v2 = v1;
      sub_2410D3C08(v1);
      swift_retain();
      sub_24115F580();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2410D2BC0@<X0>(int a1@<W0>, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v102 = a2;
  LODWORD(v113) = a1;
  uint64_t v112 = a3;
  uint64_t v4 = *v3;
  uint64_t v108 = v3;
  uint64_t v109 = v4;
  uint64_t v5 = sub_24115E650();
  uint64_t v105 = *(void *)(v5 - 8);
  uint64_t v106 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v111 = (char *)v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24115DEE0();
  uint64_t v103 = *(void *)(v7 - 8);
  uint64_t v104 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v110 = (char *)v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_24115F8E0();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v10 = (char *)v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24115EEB0();
  uint64_t v98 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24115E9F0();
  uint64_t v107 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410D5AAC(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v20 = (char *)v88 - v19;
  sub_2410D5AAC(0, &qword_26B006D78, MEMORY[0x263F81EE0], v17);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v24 = (char *)v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v114 = (uint64_t)v88 - v25;
  uint64_t v26 = sub_24115F9D0();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  long long v29 = (char *)v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v27);
  long long v33 = (char *)v88 - v32;
  if (v113)
  {
    long long v34 = (_OWORD *)v112;
    *(void *)(v112 + 32) = 0;
    *long long v34 = 0u;
    v34[1] = 0u;
  }
  else
  {
    uint64_t v93 = v20;
    uint64_t v94 = v16;
    char v89 = v13;
    uint64_t v95 = v14;
    uint64_t v90 = v11;
    uint64_t v91 = v10;
    uint64_t v113 = (uint64_t)v24;
    uint64_t v35 = v31;
    uint64_t v36 = sub_24115F8B0();
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v38 = v37;
    uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
    uint64_t v96 = v37 + 56;
    v39(v114, 1, 1, v36);
    sub_24115F9C0();
    uint64_t v97 = v35;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v33, v29, v26);
    uint64_t v101 = v26;
    id v40 = v33;
    if (v102 == (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))2)
    {
      v88[1] = sub_241024708(0, &qword_268CF1B08);
      uint64_t v41 = sub_24115CB90();
      uint64_t v42 = (uint64_t)v93;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v93, 1, 1, v41);
      uint64_t v43 = v94;
      sub_24115E9E0();
      uint64_t v44 = sub_24115EF20();
      uint64_t v102 = v39;
      uint64_t v46 = v45;
      (*(void (**)(char *, uint64_t))(v107 + 8))(v43, v95);
      sub_241025214(v42, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
      uint64_t v47 = v98;
      uint64_t v48 = v89;
      uint64_t v49 = v90;
      (*(void (**)(char *, void, uint64_t))(v98 + 104))(v89, *MEMORY[0x263F44EA0], v90);
      uint64_t v50 = v38;
      uint64_t v51 = (void *)sub_24115EEA0();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
      MEMORY[0x245616D90](v44, v46, 0, v51, 0, 0);

      swift_bridgeObjectRelease();
      sub_24115F910();
      (*(void (**)(char *, void, uint64_t))(v99 + 104))(v91, *MEMORY[0x263F81F00], v100);
      uint64_t v52 = (void (*)(uint64_t *, void))sub_24115F920();
      sub_24115F900();
      v52(v117, 0);
      char v53 = self;
      id v54 = objc_msgSend(v53, sel_linkColor);
      id v55 = (void (*)(uint64_t *, void))sub_24115F920();
      sub_24115F8F0();
      v55(v117, 0);
      sub_24115F950();
      sub_241161060();
      id v56 = v40;
      sub_24115F960();
      uint64_t v57 = v113;
      sub_24115F880();
      v102(v57, 0, 1, v36);
      uint64_t v58 = v57;
      uint64_t v59 = v114;
      sub_2410D615C(v58, v114);
      uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
      if (!v60(v59, 1, v36))
      {
        sub_24115CE10();
        sub_24115F860();
      }
      unsigned int v61 = v60(v114, 1, v36);
      v62 = v108;
      uint64_t v63 = v109;
      if (!v61)
      {
        id v64 = objc_msgSend(v53, sel_separatorColor);
        sub_24115F840();
      }
      unsigned int v65 = v60(v114, 1, v36);
      uint64_t v67 = v110;
      v66 = v111;
      if (!v65) {
        sub_24115F850();
      }
      if (!v60(v114, 1, v36))
      {
        id v68 = objc_msgSend(v53, sel_clearColor);
        sub_24115F870();
      }
    }
    else
    {
      uint64_t v69 = sub_24115CB90();
      uint64_t v70 = (uint64_t)v93;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v93, 1, 1, v69);
      v71 = v94;
      sub_24115E9E0();
      sub_24115EF20();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v71, v95);
      sub_241025214(v70, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
      sub_24115F990();
      id v72 = objc_msgSend(self, sel_linkColor);
      id v56 = v33;
      v73 = (void (*)(uint64_t *, void))sub_24115F920();
      sub_24115F8F0();
      v73(v117, 0);
      uint64_t v74 = v114;
      sub_241025214(v114, &qword_26B006D78, MEMORY[0x263F81EE0]);
      v39(v74, 1, 1, v36);
      uint64_t v67 = v110;
      v66 = v111;
      v62 = v108;
      uint64_t v63 = v109;
    }
    uint64_t v75 = v101;
    v117[3] = v101;
    v117[4] = MEMORY[0x263F81F20];
    uint64_t v76 = sub_2410277C0(v117);
    uint64_t v77 = v97;
    uint64_t v78 = *(void (**)(uint64_t *, char *, uint64_t))(v97 + 16);
    char v92 = v56;
    v78(v76, v56, v75);
    uint64_t v79 = *(void *)((char *)v62 + qword_268CF1A68);
    uint64_t v80 = sub_24115D5B0();
    uint64_t v81 = (void *)swift_allocObject();
    v81[2] = v80;
    v81[3] = v79;
    v81[4] = v63;
    *uint64_t v67 = 1;
    (*(void (**)(unsigned char *, void, uint64_t))(v103 + 104))(v67, *MEMORY[0x263F440D8], v104);
    uint64_t v82 = v114;
    sub_2410D60C8(v114, v113);
    uint64_t v115 = 0;
    unint64_t v116 = 0xE000000000000000;
    swift_retain();
    swift_retain();
    sub_2411615F0();
    uint64_t v83 = sub_241160730();
    unint64_t v85 = v84;
    swift_bridgeObjectRelease();
    uint64_t v115 = v83;
    unint64_t v116 = v85;
    sub_241160860();
    (*(void (**)(char *, void, uint64_t))(v105 + 104))(v66, *MEMORY[0x263F446D0], v106);
    uint64_t v86 = sub_24115E020();
    uint64_t v87 = (uint64_t *)v112;
    *(void *)(v112 + 24) = v86;
    v87[4] = sub_2410D59C8((unint64_t *)&qword_26B0069C8, MEMORY[0x263F441F0]);
    sub_2410277C0(v87);
    sub_24115E010();
    swift_release();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v92, v101);
    return sub_241025214(v82, &qword_26B006D78, MEMORY[0x263F81EE0]);
  }
  return result;
}

uint64_t sub_2410D38F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_24115F790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1;
  sub_241024708(0, (unint64_t *)&qword_268CF0868);
  sub_241020840(0, &qword_268CF1AE0);
  id v10 = a1;
  if (swift_dynamicCast())
  {
    sub_241027314(v21, (uint64_t)v24);
    sub_24115F5E0();
    sub_24115F370();
    swift_allocObject();
    uint64_t v11 = sub_24115F360();
    uint64_t v12 = v25;
    uint64_t v13 = v26;
    sub_24101A6BC(v24, v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v11, v12, v13);
    sub_24115F580();
    swift_release();
    return sub_24101F178((uint64_t)v24);
  }
  else
  {
    uint64_t v22 = 0;
    memset(v21, 0, sizeof(v21));
    sub_2410D5F54((uint64_t)v21, (uint64_t (*)(void))sub_2410D5FB4);
    sub_24115F740();
    uint64_t v15 = sub_24115F780();
    os_log_type_t v16 = sub_241160D30();
    if (os_log_type_enabled(v15, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(void *)&v21[0] = v18;
      *(_DWORD *)unint64_t v17 = 136446210;
      v24[0] = a4;
      swift_getMetatypeMetadata();
      uint64_t v19 = sub_241160760();
      v24[0] = sub_24101F0A4(v19, v20, (uint64_t *)v21);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v15, v16, "[%{public}s] Add medication triggered by unexpected view controller", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v18, -1, -1);
      MEMORY[0x2456180C0](v17, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_2410D3C08(void *a1)
{
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1;
  sub_241024708(0, (unint64_t *)&qword_268CF0868);
  sub_241020840(0, &qword_268CF1AE0);
  id v6 = a1;
  if (swift_dynamicCast())
  {
    sub_241027314(v17, (uint64_t)v20);
    sub_24115D5B0();
    unint64_t v7 = sub_24115F600();
    swift_release();
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v8)
    {
      sub_24115D5B0();
      unint64_t v13 = sub_24115F5C0();
      swift_release();
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_2411616E0();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    sub_24115F370();
    swift_allocObject();
    uint64_t v14 = sub_24115F360();
    uint64_t v15 = v21;
    uint64_t v16 = v22;
    sub_24101A6BC(v20, v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 8))(v14, v15, v16);
    swift_release();
    return sub_24101F178((uint64_t)v20);
  }
  else
  {
    uint64_t v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_2410D5F54((uint64_t)v17, (uint64_t (*)(void))sub_2410D5FB4);
    sub_24115F740();
    uint64_t v9 = sub_24115F780();
    os_log_type_t v10 = sub_241160D30();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_241007000, v9, v10, "Add medication triggered by unexpected view controller", v11, 2u);
      MEMORY[0x2456180C0](v11, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void MedicationListCompactDataSource.__allocating_init(listManager:healthStore:collectionView:)()
{
}

void MedicationListCompactDataSource.init(listManager:healthStore:collectionView:)()
{
}

uint64_t sub_2410D3F8C(unint64_t a1)
{
  uint64_t v2 = sub_24115E9F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (uint64_t (*)(uint64_t))MEMORY[0x263F07690];
  sub_2410D5AAC(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v24 - v8;
  sub_2410D5AAC(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_24115DDF0();
  uint64_t v10 = swift_allocObject();
  long long v25 = xmmword_24116B370;
  *(_OWORD *)(v10 + 16) = xmmword_24116B370;
  uint64_t v11 = sub_24115CB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  sub_24115E9E0();
  uint64_t v12 = sub_24115EF20();
  v24[1] = v13;
  v24[2] = v12;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_241025214((uint64_t)v9, (unint64_t *)&qword_26B007200, v6);
  long long v32 = v25;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14)
    {
LABEL_3:
      uint64_t v35 = 0;
      long long v33 = 0u;
      long long v34 = 0u;
      goto LABEL_6;
    }
  }
  swift_allocObject();
  swift_weakInit();
  *((void *)&v34 + 1) = sub_24115E9A0();
  uint64_t v35 = sub_2410D59C8(&qword_268CF1A88, MEMORY[0x263F44D70]);
  sub_2410277C0((uint64_t *)&v33);
  sub_24115E990();
LABEL_6:
  sub_241061700((uint64_t)&v33, (uint64_t)v31);
  sub_241028108((uint64_t)v31, (uint64_t)&v28, (uint64_t (*)(void))sub_24106163C);
  if (v29)
  {
    sub_241027314(&v28, (uint64_t)v30);
    sub_241027314(v30, (uint64_t)&v28);
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_241052654(0, v15[2] + 1, 1, v15);
    }
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1) {
      uint64_t v15 = sub_241052654((void *)(v16 > 1), v17 + 1, 1, v15);
    }
    v15[2] = v17 + 1;
    sub_241027314(&v28, (uint64_t)&v15[5 * v17 + 4]);
  }
  else
  {
    sub_2410D5F54((uint64_t)&v28, (uint64_t (*)(void))sub_24106163C);
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
  }
  sub_24106163C();
  swift_arrayDestroy();
  uint64_t v18 = sub_2410CF2A0(a1, MEMORY[0x263F44D88], sub_2410D61F0);
  v31[0] = v15;
  sub_241009F84(v18, (uint64_t (*)(void))sub_241052654, (unint64_t *)&qword_26B0069A8);
  uint64_t v19 = v31[0];
  long long v26 = v25;
  sub_2410D2BC0(v14 == 0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))2, (uint64_t)v27);
  sub_241061700((uint64_t)v27, (uint64_t)v31);
  sub_241028108((uint64_t)v31, (uint64_t)&v28, (uint64_t (*)(void))sub_24106163C);
  if (v29)
  {
    sub_241027314(&v28, (uint64_t)v30);
    sub_241027314(v30, (uint64_t)&v28);
    unint64_t v20 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v20 = sub_241052654(0, v20[2] + 1, 1, v20);
    }
    unint64_t v22 = v20[2];
    unint64_t v21 = v20[3];
    if (v22 >= v21 >> 1) {
      unint64_t v20 = sub_241052654((void *)(v21 > 1), v22 + 1, 1, v20);
    }
    v20[2] = v22 + 1;
    sub_241027314(&v28, (uint64_t)&v20[5 * v22 + 4]);
  }
  else
  {
    sub_2410D5F54((uint64_t)&v28, (uint64_t (*)(void))sub_24106163C);
    unint64_t v20 = (void *)MEMORY[0x263F8EE78];
  }
  swift_arrayDestroy();
  v31[0] = v19;
  sub_241009F84((uint64_t)v20, (uint64_t (*)(void))sub_241052654, (unint64_t *)&qword_26B0069A8);
  sub_24115DDE0();
  return v10;
}

uint64_t sub_2410D463C()
{
  MedicationListCompactDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_2410D466C()
{
  sub_2410D5AAC(0, &qword_268CF1AF0, MEMORY[0x263F43D38], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_24115DAB0();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_24115DAE0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v12 - v7;
  sub_24115DAD0();
  sub_24115DAA0();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v8, v2);
  sub_24115DAD0();
  sub_24115DA80();
  v9(v6, v2);
  sub_241024708(0, &qword_268CF1AF8);
  sub_2411611D0();
  id v10 = objc_msgSend(self, sel_interSectionSpacing);
  return sub_24115DA90();
}

void _s26MedicationsHealthAppPlugin08ArchivedA14ListDataSourceC10layoutType3for4with0B12ExperienceUI019LayoutConfigurationJ0OSgSi_So012NSCollectionO11Environment_ptF_0(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id v56 = a3;
  uint64_t v51 = a1;
  uint64_t v4 = sub_24115DF90();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v47 - v9;
  uint64_t v11 = sub_24115E1A0();
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v48 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24115DAE0();
  uint64_t v53 = *(void *)(v13 - 8);
  uint64_t v54 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v52 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24115DF00();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  id v55 = (uint64_t *)((char *)&v47 - v20);
  unint64_t v21 = a2;
  id v22 = objc_msgSend(a2, sel_traitCollection);
  id v23 = objc_msgSend(v22, sel_horizontalSizeClass);

  if (v23 != (id)2) {
    goto LABEL_7;
  }
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A980]), sel_init);
  id v25 = objc_msgSend(v24, sel_features);

  if (v25)
  {
    unsigned int v26 = objc_msgSend(v25, sel_stanley);

    if (v26)
    {
      id v27 = objc_msgSend(v21, sel_traitCollection);
      id v28 = objc_msgSend(v27, sel_preferredContentSizeCategory);

      sub_241161020();
      uint64_t v29 = v52;
      sub_2410D466C();
      swift_unknownObjectRetain();
      sub_24115D5B0();
      unint64_t v30 = sub_24115F5C0();
      swift_release();
      if (v30 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_2411616E0();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v31 = v48;
      sub_24115E190();
      uint64_t v39 = (void *)sub_24115DAC0();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v50);
      id v40 = self;
      id v41 = objc_msgSend(v40, sel_estimatedDimension_, 100.0);
      uint64_t v42 = (void *)sub_241161080();

      id v43 = objc_msgSend(v40, sel_estimatedDimension_, 50.0);
      uint64_t v44 = sub_2410D5B58((uint64_t)v43);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v29, v54);
      uint64_t v45 = v55;
      *id v55 = v44;
      (*(void (**)(void *, void, uint64_t))(v16 + 104))(v45, *MEMORY[0x263F44118], v15);
      uint64_t v46 = v56;
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v56, v45, v15);
      goto LABEL_8;
    }
LABEL_7:
    sub_24115DF20();
    sub_24115DF10();
    long long v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    v32(v8, v4);
    sub_24115DF60();
    id v33 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    sub_24115DF40();
    sub_2410D5A10();
    uint64_t v35 = *(int *)(v34 + 48);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v19, v10, v4);
    uint64_t v36 = sub_24115D5D0();
    v32(v10, v4);
    *(void *)&v19[v35] = v36;
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v19, *MEMORY[0x263F44110], v15);
    uint64_t v37 = *(void (**)(void *, char *, uint64_t))(v16 + 32);
    uint64_t v38 = (char *)v55;
    v37(v55, v19, v15);
    uint64_t v46 = v56;
    v37(v56, v38, v15);
LABEL_8:
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v46, 0, 1, v15);
    return;
  }
  __break(1u);
}

NSCollectionLayoutSection __swiftcall NSCollectionLayoutSection.withFooter(height:)(NSCollectionLayoutDimension height)
{
  uint64_t v1 = sub_2410D5B58((uint64_t)height.super.isa);

  return (NSCollectionLayoutSection)v1;
}

uint64_t sub_2410D4F84(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x263F44C70];
        sub_2410D5AAC(0, &qword_26B006F10, MEMORY[0x263F44C70], MEMORY[0x263F8D488]);
        sub_2410D6024(&qword_268CF0E08, &qword_26B006F10, v11);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v13 = sub_2410CD390(v17, i, a3);
          uint64_t v15 = *v14;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v13)(v17, 0);
          *(void *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_24115F170();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410D51E0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2410D5E54(0, (unint64_t *)&qword_26B007308, (unint64_t *)&qword_26B007360, 0x263F44C18, MEMORY[0x263F8D488]);
        sub_2410D5EF0(&qword_268CF1AC0, (unint64_t *)&qword_26B007308, (unint64_t *)&qword_26B007360, 0x263F44C18);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2410CD3FC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241024708(0, (unint64_t *)&qword_26B007360);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410D543C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2410D5E54(0, &qword_268CF1AD0, &qword_268CF1AC8, 0x263F44C28, MEMORY[0x263F8D488]);
        sub_2410D5EF0(&qword_268CF1AD8, &qword_268CF1AD0, &qword_268CF1AC8, 0x263F44C28);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_2410CD464(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_241024708(0, &qword_268CF1AC8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410D5698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v22[0] = a3;
  v22[1] = a1;
  uint64_t v8 = sub_241160420();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24115F3F0();
  MEMORY[0x270FA5388](v12 - 8);
  swift_unknownObjectWeakInit();
  *(void *)(v4 + qword_268CF1A78) = 0;
  *(void *)(v4 + qword_268CF1A80) = 0;
  swift_retain();
  sub_24115F3E0();
  id v13 = objc_allocWithZone((Class)sub_24115F420());
  id v14 = (void *)sub_24115F410();
  *(void *)(v4 + qword_268CF1A60) = v14;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F44BF0]), sel_initWithHealthStore_, a2);
  *(void *)(v4 + qword_268CF1A58) = v15;
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F060], v8);
  id v16 = v15;
  id v17 = v14;
  uint64_t v18 = (void *)sub_241160F10();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  objc_msgSend(v16, sel_registerObserver_queue_, v17, v18);

  uint64_t v19 = (void *)v22[0];
  swift_unknownObjectWeakAssign();
  *(void *)(v5 + qword_268CF1A68) = a4;
  swift_retain();
  swift_release();
  id v20 = objc_msgSend(v19, sel_collectionView);
  return sub_24115D5C0();
}

void sub_2410D5934()
{
  if (!qword_26B0069A0)
  {
    sub_24115EA10();
    sub_2410D59C8(&qword_26B0069F0, MEMORY[0x263F44D88]);
    unint64_t v0 = sub_24115D5E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0069A0);
    }
  }
}

uint64_t sub_2410D59C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2410D5A10()
{
  if (!qword_26B0069C0)
  {
    sub_24115DF90();
    sub_2410D5E54(255, &qword_26B006F88, &qword_26B006F80, 0x263F82528, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B0069C0);
    }
  }
}

void sub_2410D5AAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2410D5B10()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2410D5B48()
{
  return sub_2410D2B10();
}

uint64_t sub_2410D5B50()
{
  return sub_2410D2638();
}

void *sub_2410D5B58(uint64_t a1)
{
  uint64_t v2 = v1;
  objc_msgSend(v2, sel_contentInsets);
  objc_msgSend(v2, sel_setContentInsets_);
  id v4 = objc_msgSend(self, sel_fractionalWidthDimension_, 1.0);
  id v5 = objc_msgSend(self, sel_sizeWithWidthDimension_heightDimension_, v4, a1);

  sub_241160730();
  unint64_t v6 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(self, sel_boundarySupplementaryItemWithLayoutSize_elementKind_alignment_, v5, v6, 4);

  id v8 = v7;
  id v9 = objc_msgSend(v2, sel_boundarySupplementaryItems);
  sub_241024708(0, &qword_268CF1B00);
  uint64_t v10 = sub_2411609A0();

  MEMORY[0x2456167B0]();
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_2411609D0();
  }
  sub_241160A00();
  sub_2411609C0();
  uint64_t v11 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setBoundarySupplementaryItems_, v11);

  return v2;
}

uint64_t type metadata accessor for MedicationListCompactDataSource(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF1A90);
}

uint64_t sub_2410D5D70()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2410D5DE4()
{
  return type metadata accessor for MedicationListCompactDataSource(0);
}

uint64_t type metadata accessor for MedicationListRegularDataSource(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_268CF1AA0);
}

uint64_t sub_2410D5E0C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2410D5E4C()
{
  return type metadata accessor for MedicationListRegularDataSource(0);
}

void sub_2410D5E54(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241024708(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_2410D5EBC()
{
  return sub_2410D59C8(&qword_268CF1AB8, (void (*)(uint64_t))type metadata accessor for MedicationMonthHighlightItem);
}

uint64_t sub_2410D5EF0(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2410D5E54(255, a2, a3, a4, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2410D5F54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2410D5FB4()
{
  if (!qword_268CF1AE8)
  {
    sub_241020840(255, &qword_268CF1AE0);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1AE8);
    }
  }
}

void sub_2410D601C()
{
}

uint64_t sub_2410D6024(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2410D5AAC(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2410D607C()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2410D60BC(void *a1)
{
  return sub_2410D38F4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_2410D60C8(uint64_t a1, uint64_t a2)
{
  sub_2410D5AAC(0, &qword_26B006D78, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410D615C(uint64_t a1, uint64_t a2)
{
  sub_2410D5AAC(0, &qword_26B006D78, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410D61F0()
{
  return sub_2410D59C8(&qword_26B0069E8, MEMORY[0x263F44D88]);
}

void sub_2410D6224()
{
  if (!qword_26B006D98)
  {
    sub_2410D631C();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F45D68];
    sub_2410D64D0(255, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68]);
    sub_2410D59C8(&qword_26B006E68, (void (*)(uint64_t))sub_2410D631C);
    sub_2410D6388(&qword_26B0072C0, (unint64_t *)&qword_26B0072C8, v0);
    unint64_t v1 = sub_24115FA90();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B006D98);
    }
  }
}

void sub_2410D631C()
{
  if (!qword_26B006E70)
  {
    unint64_t v0 = sub_24115FC70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006E70);
    }
  }
}

uint64_t sub_2410D6388(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2410D64D0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2410D63D8()
{
  if (!qword_26B006E10)
  {
    sub_2410D64D0(255, &qword_26B006E40, (void (*)(uint64_t))sub_2410D6534);
    sub_2410D6224();
    sub_2410D6388(&qword_26B006E38, &qword_26B006E40, (void (*)(uint64_t))sub_2410D6534);
    sub_2410D59C8(&qword_26B006D90, (void (*)(uint64_t))sub_2410D6224);
    unint64_t v0 = sub_24115FBA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006E10);
    }
  }
}

void sub_2410D64D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24115FC20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_2410D6534()
{
  if (!qword_26B006D68)
  {
    sub_24115F6B0();
    sub_2410D5E54(255, &qword_26B006F20, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B006D68);
    }
  }
}

void sub_2410D65D0()
{
  if (!qword_26B006E00)
  {
    sub_2410D63D8();
    sub_2410D667C();
    sub_2410D59C8(&qword_26B006E08, (void (*)(uint64_t))sub_2410D63D8);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006E00);
    }
  }
}

void sub_2410D667C()
{
  if (!qword_26B006F00)
  {
    sub_2410D5AAC(255, &qword_26B006EF8, MEMORY[0x263F44D88], MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B006F00);
    }
  }
}

uint64_t sub_2410D6710()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_2410D6750(uint64_t a1)
{
  return sub_2410CFE98(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_2410D6758()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2410D6790@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_2410D67C0(void *a1, unint64_t a2)
{
  return sub_2410D04CC(a1, a2);
}

uint64_t sub_2410D67C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, void))(v2 + 16);
  sub_2410D6534();
  uint64_t result = v5(a1, *(void *)(a1 + *(int *)(v6 + 48)));
  *a2 = result;
  a2[1] = v8;
  return result;
}

void sub_2410D6818()
{
  if (!qword_26B006D88)
  {
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F45D68];
    sub_2410D64D0(255, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68]);
    sub_2410D6910();
    sub_2410D6388(&qword_26B0072C0, (unint64_t *)&qword_26B0072C8, v0);
    sub_2410D59C8(&qword_26B006E58, (void (*)(uint64_t))sub_2410D6910);
    unint64_t v1 = sub_24115FA90();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B006D88);
    }
  }
}

void sub_2410D6910()
{
  if (!qword_26B006E60)
  {
    sub_2410D5E54(255, &qword_26B006F20, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006E60);
    }
  }
}

void sub_2410D69A4()
{
  if (!qword_26B006DD0)
  {
    sub_2410D6A38();
    sub_2410D59C8(&qword_26B006E48, (void (*)(uint64_t))sub_2410D6A38);
    unint64_t v0 = sub_24115FB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006DD0);
    }
  }
}

void sub_2410D6A38()
{
  if (!qword_26B006E50)
  {
    sub_2410D5E54(255, &qword_26B006F20, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F8D488]);
    sub_241020840(255, (unint64_t *)&qword_26B0073B0);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006E50);
    }
  }
}

unint64_t sub_2410D6AE4()
{
  unint64_t result = qword_26B006E78;
  if (!qword_26B006E78)
  {
    sub_2410D5AAC(255, &qword_26B006E80, MEMORY[0x263F45D68], MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B006E78);
  }
  return result;
}

uint64_t static SharedMedicationsFeedItemIdentifierFactory.make(for:feedItemKind:profile:)()
{
  return sub_2410D6C00();
}

unint64_t static SharedMedicationsFeedItemIdentifierFactory.makePrefixComponent(feedItemKind:)()
{
  return FeedItemKind.identifierPrefix.getter();
}

unint64_t static SharedMedicationsFeedItemIdentifierFactory.makeTagComponentForSnippetItem()()
{
  return 0xD000000000000014;
}

uint64_t static SharedMedicationsFeedItemIdentifierFactory.makeComponent(sharingId:)()
{
  return 0x676E69726168535BLL;
}

uint64_t sub_2410D6C00()
{
  unint64_t v0 = (void *)sub_24115CEE0();
  FeedItemKind.identifierPrefix.getter();
  sub_2410D6E44();
  uint64_t v1 = sub_24115D690();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  sub_241160860();
  sub_241160860();
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_241051F68(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v6 = v4[2];
  unint64_t v5 = v4[3];
  int64_t v7 = v5 >> 1;
  unint64_t v8 = v6 + 1;
  if (v5 >> 1 <= v6)
  {
    unint64_t v4 = sub_241051F68((void *)(v5 > 1), v6 + 1, 1, v4);
    unint64_t v5 = v4[3];
    int64_t v7 = v5 >> 1;
  }
  v4[2] = v8;
  unint64_t v9 = &v4[2 * v6];
  v9[4] = v1;
  v9[5] = v3;
  if (v7 < (uint64_t)(v6 + 2)) {
    unint64_t v4 = sub_241051F68((void *)(v5 > 1), v6 + 2, 1, v4);
  }
  v4[2] = v6 + 2;
  uint64_t v10 = &v4[2 * v8];
  void v10[4] = 0xD000000000000014;
  v10[5] = 0x8000000241166E50;
  unint64_t v11 = v4[2];
  unint64_t v12 = v4[3];
  swift_bridgeObjectRetain();
  if (v11 >= v12 >> 1) {
    unint64_t v4 = sub_241051F68((void *)(v12 > 1), v11 + 1, 1, v4);
  }
  v4[2] = v11 + 1;
  id v13 = &v4[2 * v11];
  v13[4] = 0x676E69726168535BLL;
  v13[5] = 0xEB000000003A4449;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2410D6E98();
  sub_241051380();
  uint64_t v14 = sub_241160680();
  swift_bridgeObjectRelease();
  return v14;
}

ValueMetadata *type metadata accessor for SharedMedicationsFeedItemIdentifierFactory()
{
  return &type metadata for SharedMedicationsFeedItemIdentifierFactory;
}

unint64_t sub_2410D6E44()
{
  unint64_t result = qword_26B004788;
  if (!qword_26B004788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004788);
  }
  return result;
}

void sub_2410D6E98()
{
  if (!qword_26B005D98)
  {
    unint64_t v0 = sub_241160A10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005D98);
    }
  }
}

id sub_2410D6EF0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_2411605E0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v31 - v14;
  id v16 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_indicatorLayerAppearanceKey];
  *(void *)id v16 = 0xD000000000000013;
  *((void *)v16 + 1) = 0x80000002411671A0;
  id v17 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_hideAnimationLayerKey];
  *(void *)id v17 = 0xD000000000000010;
  *((void *)v17 + 1) = 0x80000002411671C0;
  uint64_t v18 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_showAnimationLayerKey];
  *(void *)uint64_t v18 = 0xD000000000000010;
  *((void *)v18 + 1) = 0x80000002411671E0;
  uint64_t v19 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_gregorianCalendar];
  uint64_t v20 = sub_24115CCC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  unint64_t v21 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay];
  id v22 = v4;
  sub_241160530();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  id v23 = objc_msgSend(self, sel_systemBackgroundColor);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v13, v9);
  id v24 = (int *)type metadata accessor for TimelineDay();
  *(void *)&v21[v24[5]] = v23;
  id v25 = &v21[v24[6]];
  *(void *)id v25 = 0;
  *((void *)v25 + 1) = 0xE000000000000000;
  v21[v24[7]] = 0;
  sub_24115CA40();
  *(void *)&v22[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___dayOfWeekLabel] = 0;
  *(void *)&v22[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___formatter] = 0;
  *(void *)&v22[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___logIndicator] = 0;
  *(void *)&v22[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___pill] = 0;
  unsigned int v26 = &v22[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration];
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F83588]);
  *(_OWORD *)unsigned int v26 = xmmword_24116BAA0;
  *((_OWORD *)v26 + 1) = xmmword_24116BA90;
  *((int64x2_t *)v26 + 2) = vdupq_n_s64(0x4041000000000000uLL);
  *((void *)v26 + 6) = 0;
  *((void *)v26 + 7) = v27;
  *((_OWORD *)v26 + 4) = xmmword_24116BA80;
  *((void *)v26 + 10) = 0;
  *((void *)v26 + 11) = 27;

  id v28 = (objc_class *)type metadata accessor for InteractiveTimelineDayCell(0);
  v31.receiver = v22;
  v31.super_class = v28;
  id v29 = objc_msgSendSuper2(&v31, sel_initWithFrame_, a1, a2, a3, a4);
  sub_2410D8EBC();

  return v29;
}

id sub_2410D7274(void *a1)
{
  uint64_t v3 = sub_2411605E0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  int64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_indicatorLayerAppearanceKey];
  *(void *)uint64_t v10 = 0xD000000000000013;
  *((void *)v10 + 1) = 0x80000002411671A0;
  uint64_t v11 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_hideAnimationLayerKey];
  *(void *)uint64_t v11 = 0xD000000000000010;
  *((void *)v11 + 1) = 0x80000002411671C0;
  uint64_t v12 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_showAnimationLayerKey];
  *(void *)uint64_t v12 = 0xD000000000000010;
  *((void *)v12 + 1) = 0x80000002411671E0;
  id v13 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_gregorianCalendar];
  uint64_t v14 = sub_24115CCC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  id v15 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay];
  id v16 = v1;
  sub_241160530();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  id v17 = objc_msgSend(self, sel_systemBackgroundColor);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v15, v7, v3);
  uint64_t v18 = (int *)type metadata accessor for TimelineDay();
  *(void *)&v15[v18[5]] = v17;
  uint64_t v19 = &v15[v18[6]];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0xE000000000000000;
  v15[v18[7]] = 0;
  sub_24115CA40();
  *(void *)&v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___dayOfWeekLabel] = 0;
  *(void *)&v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___formatter] = 0;
  *(void *)&v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___logIndicator] = 0;
  *(void *)&v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___pill] = 0;
  uint64_t v20 = &v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration];
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F83588]);
  *(_OWORD *)uint64_t v20 = xmmword_24116BAA0;
  *((_OWORD *)v20 + 1) = xmmword_24116BA90;
  *((int64x2_t *)v20 + 2) = vdupq_n_s64(0x4041000000000000uLL);
  *((void *)v20 + 6) = 0;
  *((void *)v20 + 7) = v21;
  *((_OWORD *)v20 + 4) = xmmword_24116BA80;
  *((void *)v20 + 10) = 0;
  *((void *)v20 + 11) = 27;

  id v22 = (objc_class *)type metadata accessor for InteractiveTimelineDayCell(0);
  v27.receiver = v16;
  v27.super_class = v22;
  id v23 = objc_msgSendSuper2(&v27, sel_initWithCoder_, a1);
  id v24 = v23;
  if (v23)
  {
    id v25 = v23;
    sub_2410D8EBC();
  }
  return v24;
}

uint64_t sub_2410D7810(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_2410DB3D4(0, &qword_26B007210, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v21 - v7;
  uint64_t v9 = type metadata accessor for TimelineDay();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v21 - v13;
  uint64_t v15 = (uint64_t)v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay;
  swift_beginAccess();
  sub_2410DB2AC(v15, (uint64_t)v14);
  sub_2410DB2AC(a1, (uint64_t)v12);
  swift_beginAccess();
  sub_24105DFAC((uint64_t)v12, v15);
  swift_endAccess();
  uint64_t v16 = sub_24115CCC0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v8, a2, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
  uint64_t v18 = (uint64_t)v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_gregorianCalendar;
  swift_beginAccess();
  sub_24105E010((uint64_t)v8, v18);
  swift_endAccess();
  long long v21[2] = 0x7865646E49796144;
  v21[3] = 0xE90000000000003ALL;
  v21[1] = sub_2411605B0();
  sub_241161850();
  sub_241160860();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v19);

  sub_2410D7AE0((uint64_t)v14);
  return sub_2410DB374((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TimelineDay);
}

void sub_2410D7AE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410DB3D4(0, &qword_26B007210, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  *(void *)&CGFloat m34 = (char *)v118 - v6;
  uint64_t v7 = type metadata accessor for TimelineDay();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  *(void *)&CGFloat m33 = (char *)v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  *(void *)&CGFloat m41 = (char *)v118 - v10;
  sub_2410DB3D4(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], v4);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v119 = (char *)v118 - v12;
  *(double *)&uint64_t v13 = COERCE_DOUBLE(sub_24115CB10());
  CGFloat m43 = *(double *)(v13 - 8);
  CGFloat m42 = *(double *)&v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  v118[0] = (char *)v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  *(void *)&CGFloat m44 = (char *)v118 - v16;
  uint64_t v17 = sub_2411605E0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v21 = (char *)v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  id v23 = (char *)v118 - v22;
  id v24 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  CGFloat m32 = *(double *)&a1;
  v24((char *)v118 - v22, a1, v17);
  *(void *)&CGFloat v25 = v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay;
  swift_beginAccess();
  CGFloat m31 = v25;
  v24(v21, *(void *)&v25, v17);
  v118[1] = sub_2410DB438(&qword_268CF1BC0, MEMORY[0x263F090E8]);
  char v26 = sub_2411606E0();
  objc_super v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v27(v21, v17);
  v27(v23, v17);
  uint64_t v128 = v2;
  if ((v26 & 1) == 0)
  {
    sub_2410DB2AC(*(uint64_t *)&m31, *(uint64_t *)&m41);
    uint64_t v28 = v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_gregorianCalendar;
    swift_beginAccess();
    CGFloat v29 = m34;
    sub_2410DB480(v28, *(uint64_t *)&m34);
    uint64_t v30 = sub_24115CCC0();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(CGFloat, uint64_t, uint64_t))(v31 + 48))(COERCE_CGFLOAT(*(void *)&v29), 1, v30) == 1)
    {
      __break(1u);
      return;
    }
    v24(v23, *(void *)&m32, v17);
    CGFloat v32 = m41;
    char v33 = sub_2411606E0();
    v27(v23, v17);
    uint64_t v34 = *(void *)&v32;
    if (v33)
    {
      uint64_t v35 = 1;
      uint64_t v36 = v128;
      CGFloat v38 = m43;
      CGFloat v37 = m42;
      CGFloat v39 = m34;
      uint64_t v40 = (uint64_t)v119;
    }
    else
    {
      uint64_t v40 = (uint64_t)v119;
      CGFloat v39 = m34;
      sub_2411605D0();
      uint64_t v35 = 0;
      uint64_t v36 = v128;
      CGFloat v38 = m43;
      CGFloat v37 = m42;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, CGFloat))(*(void *)&v38 + 56))(v40, v35, 1, COERCE_CGFLOAT(*(void *)&v37));
    sub_2410DB374(v34, (uint64_t (*)(void))type metadata accessor for TimelineDay);
    (*(void (**)(CGFloat, uint64_t))(v31 + 8))(COERCE_CGFLOAT(*(void *)&v39), v30);
    if ((*(unsigned int (**)(uint64_t, uint64_t, CGFloat))(*(void *)&v38 + 48))(v40, 1, COERCE_CGFLOAT(*(void *)&v37)) == 1)
    {
      sub_2410DB514(v40, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
    }
    else
    {
      CGFloat v41 = m44;
      (*(void (**)(CGFloat, uint64_t, CGFloat))(*(void *)&v38 + 32))(COERCE_CGFLOAT(*(void *)&m44), v40, COERCE_CGFLOAT(*(void *)&v37));
      uint64_t v42 = *(void (**)(uint64_t, uint64_t, void))(*(void *)&v38 + 16);
      uint64_t v43 = v118[0];
      v42(v118[0], *(void *)&v41, *(void *)&v37);
      uint64_t v44 = v36 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_startDate;
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, CGFloat))(*(void *)&v38 + 40))(v44, v43, COERCE_CGFLOAT(*(void *)&v37));
      swift_endAccess();
      id v45 = sub_2410D8B88();
      id v46 = sub_2410D8C50();
      v42(v43, v44, *(void *)&v37);
      uint64_t v47 = (void *)sub_24115CAA0();
      uint64_t v48 = *(void (**)(uint64_t, void))(*(void *)&v38 + 8);
      v48(v43, *(void *)&v37);
      id v49 = objc_msgSend(v46, sel_stringFromDate_, v47);

      if (!v49)
      {
        sub_241160730();
        id v49 = (id)sub_2411606F0();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v45, sel_setText_, v49);

      v48(*(void *)&m44, *(void *)&v37);
    }
  }
  id v50 = sub_2410D8DC8();
  uint64_t v51 = (void *)sub_2411606F0();
  id v52 = objc_msgSend(v50, sel_valueForKey_, v51);

  if (v52)
  {
    sub_2411614D0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(&v130, 0, 32);
  }
  uint64_t v53 = *(void *)&m33;
  sub_2410DB310((uint64_t)&v130, (uint64_t)&v131);
  if (!*(void *)&v131.m14)
  {
    sub_2410DB374((uint64_t)&v131, (uint64_t (*)(void))sub_24104D3F8);
    goto LABEL_18;
  }
  if (!swift_dynamicCast())
  {
LABEL_18:
    unsigned __int8 m11_low = 0;
    goto LABEL_19;
  }
  unsigned __int8 m11_low = LOBYTE(v129.m11);
LABEL_19:
  sub_2410DB2AC(*(uint64_t *)&m31, v53);
  __int16 v55 = sub_24110241C(m11_low, *(uint64_t *)&m32);
  sub_2410DB374(v53, (uint64_t (*)(void))type metadata accessor for TimelineDay);
  id v56 = objc_msgSend(self, *off_2650E37A0[(char)v55]);
  double v57 = dbl_24116E240[v55 == 1];
  uint64_t v58 = self;
  objc_msgSend(v58, sel_begin);
  objc_msgSend(v58, sel_setDisableActions_, (v55 & 0x100) == 0);
  if ((v55 & 0x100) != 0)
  {
    if ((_BYTE)v55)
    {
      objc_msgSend(v58, sel_begin);
      objc_msgSend(v58, sel_setDisableActions_, 1);
      sub_2410D898C(v57, v128, v56);
      objc_msgSend(v58, sel_commit);
      CATransform3DMakeScale(&v131, 1.0, 1.0, 1.0);
      CGFloat m11 = v131.m11;
      CGFloat m12 = v131.m12;
      CGFloat m13 = v131.m13;
      CGFloat m14 = v131.m14;
      CGFloat m21 = v131.m21;
      CGFloat m22 = v131.m22;
      CGFloat m23 = v131.m23;
      CGFloat m24 = v131.m24;
      CGFloat m32 = v131.m32;
      CGFloat m31 = v131.m31;
      CGFloat m34 = v131.m34;
      CGFloat m33 = v131.m33;
      CGFloat m42 = v131.m42;
      CGFloat m41 = v131.m41;
      CGFloat m44 = v131.m44;
      CGFloat m43 = v131.m43;
      CATransform3D v130 = v131;
      id v103 = sub_2410D8DC8();
      CATransform3DMakeScale(&v131, 0.001, 0.001, 1.0);
      uint64_t v104 = (void *)sub_2411606F0();
      id v105 = objc_msgSend(self, sel_animationWithKeyPath_, v104);

      uint64_t v106 = (void *)sub_241160CA0();
      objc_msgSend(v105, sel_setFromValue_, v106);

      uint64_t v107 = (void *)sub_241160CA0();
      objc_msgSend(v105, sel_setToValue_, v107);

      uint64_t v108 = (void *)sub_2411606F0();
      objc_msgSend(v103, sel_addAnimation_forKey_, v105, v108);

      id v94 = sub_2410D8DC8();
      v129.CGFloat m11 = m11;
      v129.CGFloat m12 = m12;
      v129.CGFloat m13 = m13;
      v129.CGFloat m14 = m14;
      v129.CGFloat m21 = m21;
      v129.CGFloat m22 = m22;
      v129.CGFloat m23 = m23;
      v129.CGFloat m24 = m24;
      v129.CGFloat m31 = m31;
      v129.CGFloat m32 = m32;
      v129.CGFloat m33 = m33;
      v129.CGFloat m34 = m34;
      v129.CGFloat m41 = m41;
      v129.CGFloat m42 = m42;
      v129.CGFloat m43 = m43;
      v129.CGFloat m44 = m44;
      objc_msgSend(v94, sel_setTransform_, &v129);
    }
    else
    {
      CATransform3DMakeScale(&v131, 1.0, 1.0, 1.0);
      CATransform3DMakeScale(&v130, 0.001, 0.001, 1.0);
      uint64_t v109 = (void *)sub_2411606F0();
      id v110 = objc_msgSend(self, sel_animationWithKeyPath_, v109);

      uint64_t v111 = (void *)sub_241160CA0();
      objc_msgSend(v110, sel_setFromValue_, v111);

      uint64_t v112 = (void *)sub_241160CA0();
      objc_msgSend(v110, sel_setToValue_, v112);

      objc_msgSend(v110, sel_setDelegate_, v128);
      id v113 = sub_2410D8DC8();
      uint64_t v114 = (void *)sub_2411606F0();
      objc_msgSend(v113, sel_addAnimation_forKey_, v110, v114);

      id v94 = sub_2410D8DC8();
      CATransform3DMakeScale(&v129, 0.001, 0.001, 1.0);
      objc_msgSend(v94, sel_setTransform_, &v129);
    }
  }
  else
  {
    id v59 = sub_2410D8DC8();
    objc_msgSend(v59, sel_setHidden_, v55 == 0);

    id v60 = sub_2410D8DC8();
    id v61 = objc_msgSend(v56, sel_CGColor);
    objc_msgSend(v60, sel_setFillColor_, v61);

    id v62 = sub_2410D8DC8();
    id v63 = sub_2410D8DC8();
    objc_msgSend(v63, sel_frame);
    CGFloat v65 = v64;
    CGFloat v67 = v66;
    CGFloat v69 = v68;
    CGFloat v71 = v70;

    v132.origin.x = v65;
    v132.origin.y = v67;
    v132.size.width = v69;
    v132.size.height = v71;
    double MidX = CGRectGetMidX(v132);
    id v73 = sub_2410D8DC8();
    objc_msgSend(v73, sel_frame);
    CGFloat v75 = v74;
    CGFloat v77 = v76;
    CGFloat v79 = v78;
    CGFloat v81 = v80;

    v133.origin.x = v75;
    v133.origin.y = v77;
    v133.size.width = v79;
    v133.size.height = v81;
    CGFloat v82 = CGRectGetHeight(v133) * 0.5;
    id v83 = sub_2410D8DC8();
    objc_msgSend(v83, sel_frame);
    CGFloat v85 = v84;
    CGFloat v87 = v86;
    CGFloat v89 = v88;
    CGFloat v91 = v90;

    v134.origin.x = v85;
    v134.origin.y = v87;
    v134.size.width = v89;
    v134.size.height = v91;
    CGFloat v92 = CGRectGetWidth(v134) * 0.5;
    id v93 = objc_msgSend(self, sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, 1, MidX, v82, v92, 0.0, v57);
    id v94 = objc_msgSend(v93, sel_CGPath);

    objc_msgSend(v62, sel_setPath_, v94);
  }

  id v115 = sub_2410D8DC8();
  LOBYTE(v129.m11) = v55;
  uint64_t v116 = sub_2411618C0();
  int v117 = (void *)sub_2411606F0();
  objc_msgSend(v115, sel_setValue_forKey_, v116, v117);

  swift_unknownObjectRelease();
  objc_msgSend(v58, sel_commit);
}

void sub_2410D898C(double a1, uint64_t a2, void *a3)
{
  id v5 = sub_2410D8DC8();
  id v6 = objc_msgSend(a3, sel_CGColor);
  objc_msgSend(v5, sel_setFillColor_, v6);

  id v7 = sub_2410D8DC8();
  id v8 = sub_2410D8DC8();
  objc_msgSend(v8, sel_frame);
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;

  v42.origin.x = v10;
  v42.origin.y = v12;
  v42.size.width = v14;
  v42.size.height = v16;
  double MidX = CGRectGetMidX(v42);
  id v18 = sub_2410D8DC8();
  objc_msgSend(v18, sel_frame);
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;

  v43.origin.x = v20;
  v43.origin.y = v22;
  v43.size.width = v24;
  v43.size.height = v26;
  CGFloat v27 = CGRectGetHeight(v43) * 0.5;
  id v28 = sub_2410D8DC8();
  objc_msgSend(v28, sel_frame);
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  CGFloat v36 = v35;

  v44.origin.x = v30;
  v44.origin.y = v32;
  v44.size.width = v34;
  v44.size.height = v36;
  CGFloat v37 = CGRectGetWidth(v44) * 0.5;
  id v38 = objc_msgSend(self, sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, 1, MidX, v27, v37, 0.0, a1);
  id v39 = objc_msgSend(v38, sel_CGPath);

  objc_msgSend(v7, sel_setPath_, v39);
  id v40 = sub_2410D8DC8();
  objc_msgSend(v40, sel_setHidden_, 0);
}

id sub_2410D8B88()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___dayOfWeekLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___dayOfWeekLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___dayOfWeekLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v5, sel_setAdjustsFontSizeToFitWidth_, 1);
    objc_msgSend(v5, sel_setNumberOfLines_, 1);
    objc_msgSend(v5, sel_setTextAlignment_, 1);
    sub_241161210();
    id v6 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_2410D8C50()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115CB90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___formatter;
  id v7 = *(void **)(v1
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___formatter);
  if (v7)
  {
    id v8 = *(id *)(v1
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___formatter);
  }
  else
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    sub_24115CB80();
    CGFloat v10 = (void *)sub_24115CB60();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v9, sel_setLocale_, v10);

    double v11 = (void *)sub_2411606F0();
    objc_msgSend(v9, sel_setLocalizedDateFormatFromTemplate_, v11);

    CGFloat v12 = *(void **)(v1 + v6);
    *(void *)(v1 + v6) = v9;
    id v8 = v9;

    id v7 = 0;
  }
  id v13 = v7;
  return v8;
}

id sub_2410D8DC8()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___logIndicator;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___logIndicator);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___logIndicator);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15880]), sel_init);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2410D8E3C()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___pill;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___pill);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell____lazy_storage___pill);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SimpleShapeFakeMaskingView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_2410D8EBC()
{
  swift_getObjectType();
  uint64_t v1 = type metadata accessor for TimelineDay();
  MEMORY[0x270FA5388](v1 - 8);
  id v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v5);

  id v6 = objc_msgSend(v0, sel_contentView);
  id v7 = sub_2410D8B88();
  objc_msgSend(v6, sel_addSubview_, v7);

  id v8 = objc_msgSend(v0, sel_contentView);
  id v9 = sub_2410D8E3C();
  objc_msgSend(v8, sel_addSubview_, v9);

  id v10 = objc_msgSend(v0, sel_contentView);
  id v11 = objc_msgSend(v10, sel_layer);

  id v12 = sub_2410D8DC8();
  objc_msgSend(v11, sel_addSublayer_, v12);

  id v13 = sub_2410D8B88();
  unsigned __int8 v14 = (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
  int v15 = v14;
  id v16 = objc_msgSend(v4, *off_2650E3788[(char)v14]);
  objc_msgSend(v13, sel_setTextColor_, v16);

  sub_2410D9BF8();
  id v17 = sub_2410D8B88();
  id v18 = &selRef_labelColor;
  if (v15 != 1) {
    id v18 = &selRef_clearColor;
  }
  id v19 = [v4 *v18];
  objc_msgSend(v17, sel_setBackgroundColor_, v19);

  sub_2410D92E8();
  sub_2410D942C();
  uint64_t v20 = (uint64_t)v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay;
  swift_beginAccess();
  sub_2410DB2AC(v20, (uint64_t)v3);
  sub_2410D7AE0((uint64_t)v3);
  sub_2410DB374((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for TimelineDay);
  sub_2410DB3D4(0, (unint64_t *)&qword_268CF2250, (uint64_t (*)(uint64_t))sub_24106020C, MEMORY[0x263F8E0F8]);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24116C380;
  uint64_t v22 = sub_24115F9E0();
  uint64_t v23 = MEMORY[0x263F81F30];
  *(void *)(v21 + 32) = v22;
  *(void *)(v21 + 40) = v23;
  uint64_t v24 = sub_2411604C0();
  uint64_t v25 = sub_2410DB438((unint64_t *)&unk_268CF09E0, MEMORY[0x263F462B8]);
  *(void *)(v21 + 48) = v24;
  *(void *)(v21 + 56) = v25;
  uint64_t v26 = sub_24115FA70();
  uint64_t v27 = MEMORY[0x263F82018];
  *(void *)(v21 + 64) = v26;
  *(void *)(v21 + 72) = v27;
  sub_241161230();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_24116B370;
  uint64_t v29 = sub_24115F8C0();
  uint64_t v30 = MEMORY[0x263F81EF0];
  *(void *)(v28 + 32) = v29;
  *(void *)(v28 + 40) = v30;
  sub_241161230();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2410D92E8()
{
  id v1 = sub_2410D8DC8();
  uint64_t v2 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration;
  double v3 = *(double *)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 40);
  v14.origin.x = 0.0;
  v14.origin.y = 0.0;
  v14.size.width = v3;
  v14.size.height = v3;
  CGPathRef v4 = CGPathCreateWithEllipseInRect(v14, 0);
  objc_msgSend(v1, sel_setFrame_, 0.0, 0.0, v3, v3);
  objc_msgSend(v1, sel_setPath_, v4);

  id v5 = sub_2410D8DC8();
  objc_msgSend(v5, sel_setAnchorPoint_, 0.5, 0.5);

  id v12 = sub_2410D8DC8();
  double v6 = *(double *)(v2 + 8);
  double v7 = *(double *)(v2 + 32);
  double v8 = *(double *)(v2 + 40);
  double v9 = *(double *)(v2 + 48);
  double v10 = *(double *)(v2 + 64);
  objc_msgSend(*(id *)(v2 + 56), sel_scaledValueForValue_, *(double *)(v2 + 72));
  objc_msgSend(v12, sel_setPosition_, 0.0, v8 * 0.5 + v7 + v6 + v10 + v11 - v9 - v8);
}

void sub_2410D942C()
{
  id v1 = v0;
  id v2 = sub_2410D8B88();
  double v3 = (double *)((char *)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration);
  objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 56), sel_scaledValueForValue_, *(double *)((char *)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 72));
  sub_241161060();
  sub_2411611E0();
  objc_msgSend(v2, sel_frame);
  objc_msgSend(v2, sel_setFrame_);

  id v4 = sub_2410D8B88();
  id v5 = sub_2410D8B88();
  objc_msgSend(v5, sel_frame);
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;

  v22.origin.x = v7;
  v22.origin.y = v9;
  v22.size.width = v11;
  v22.size.height = v13;
  CGRectGetWidth(v22);
  sub_241161200();

  id v14 = sub_2410D8B88();
  (*(void (**)(void))((*MEMORY[0x263F8EED0] & *v1) + 0xC0))();
  id v15 = objc_msgSend(v1, sel_traitCollection);
  id v16 = objc_msgSend(v15, sel_horizontalSizeClass);

  if (v16 == (id)2)
  {
    if (qword_268CF0340 != -1) {
      swift_once();
    }
    id v17 = &qword_268CF1B18;
  }
  else
  {
    if (qword_268CF0338 != -1) {
      swift_once();
    }
    id v17 = &qword_268CF1B10;
  }
  id v18 = (id)*v17;
  sub_241024708(0, &qword_26B007000);
  id v19 = (void *)sub_2411611F0();

  objc_msgSend(v14, sel_setFont_, v19);
  id v20 = sub_2410D8B88();
  sub_2411018D4(v3[8]);
  objc_msgSend(v20, sel_frame);
  objc_msgSend(v20, sel_setFrame_);
}

void sub_2410D972C(uint64_t a1)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration;
  if (*(double *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration) != *(double *)a1) {
    goto LABEL_13;
  }
  if (*(double *)(v2 + 8) != *(double *)(a1 + 8)) {
    goto LABEL_13;
  }
  if (*(double *)(v2 + 16) != *(double *)(a1 + 16)) {
    goto LABEL_13;
  }
  if (*(double *)(v2 + 24) != *(double *)(a1 + 24)) {
    goto LABEL_13;
  }
  if (*(double *)(v2 + 32) != *(double *)(a1 + 32)) {
    goto LABEL_13;
  }
  if (*(double *)(v2 + 40) != *(double *)(a1 + 40)) {
    goto LABEL_13;
  }
  if (*(double *)(v2 + 48) != *(double *)(a1 + 48)) {
    goto LABEL_13;
  }
  id v4 = *(void **)(v2 + 56);
  double v6 = *(double *)(v2 + 64);
  double v5 = *(double *)(v2 + 72);
  double v7 = *(double *)(v2 + 80);
  uint64_t v8 = *(void *)(v2 + 88);
  sub_241024708(0, (unint64_t *)&qword_26B007218);
  id v9 = v4;
  char v10 = sub_2411612E0();

  if ((v10 & 1) == 0
    || v6 != *(double *)(a1 + 64)
    || v5 != *(double *)(a1 + 72)
    || v7 != *(double *)(a1 + 80)
    || v8 != *(void *)(a1 + 88))
  {
LABEL_13:
    sub_2410D92E8();
  }
}

id sub_2410D9894(void *a1)
{
  v21.receiver = v1;
  v21.super_class = (Class)type metadata accessor for InteractiveTimelineDayCell(0);
  objc_msgSendSuper2(&v21, sel_applyLayoutAttributes_, a1);
  type metadata accessor for InteractiveTimelineCollectionViewLayoutAttributes();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = *(void *)(v3
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                   + 48);
    double v5 = *(void **)(v3
                  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                  + 56);
    uint64_t v6 = *(void *)(v3
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                   + 80);
    uint64_t v7 = *(void *)(v3
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                   + 88);
    uint64_t v8 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration];
    long long v9 = *(_OWORD *)(v3
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration);
    long long v10 = *(_OWORD *)(v3
                    + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                    + 16);
    long long v11 = *(_OWORD *)(v3
                    + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                    + 32);
    long long v12 = *(_OWORD *)(v3
                    + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                    + 64);
    long long v13 = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 48];
    void v22[2] = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 32];
    v22[3] = v13;
    long long v14 = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 80];
    v22[4] = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 64];
    v22[5] = v14;
    long long v15 = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 16];
    v22[0] = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration];
    v22[1] = v15;
    id v16 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 56];
    *(_OWORD *)uint64_t v8 = v9;
    *((_OWORD *)v8 + 1) = v10;
    *((_OWORD *)v8 + 2) = v11;
    *((void *)v8 + 6) = v4;
    *((void *)v8 + 7) = v5;
    *((_OWORD *)v8 + 4) = v12;
    *((void *)v8 + 10) = v6;
    *((void *)v8 + 11) = v7;
    id v17 = v5;
    id v18 = a1;
    sub_241060150((uint64_t)v22);

    sub_2410D972C((uint64_t)v22);
    sub_24106017C((uint64_t)v22);
  }
  id v19 = self;
  objc_msgSend(v19, sel_begin);
  objc_msgSend(v19, sel_setDisableActions_, 1);
  sub_2410DA120(v1);
  return objc_msgSend(v19, sel_commit);
}

id sub_2410D9A54()
{
  uint64_t v1 = type metadata accessor for TimelineDay();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = sub_2410D8B88();
  int v5 = (*(unsigned __int8 (**)(void))((*MEMORY[0x263F8EED0] & *(void *)v0) + 0xC0))();
  uint64_t v6 = self;
  uint64_t v7 = &selRef_labelColor;
  if (v5 != 1) {
    uint64_t v7 = &selRef_clearColor;
  }
  id v8 = [v6 *v7];
  objc_msgSend(v4, sel_setBackgroundColor_, v8);

  uint64_t v9 = (uint64_t)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay];
  swift_beginAccess();
  sub_2410DB2AC(v9, (uint64_t)v3);
  sub_2410D7AE0((uint64_t)v3);
  sub_2410DB374((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for TimelineDay);
  sub_2410D92E8();
  sub_2410D942C();
  long long v10 = self;
  objc_msgSend(v10, sel_begin);
  objc_msgSend(v10, sel_setDisableActions_, 1);
  sub_2410DA120(v0);
  return objc_msgSend(v10, sel_commit);
}

id sub_2410D9BF8()
{
  uint64_t v0 = self;
  objc_msgSend(v0, sel_begin);
  objc_msgSend(v0, sel_setDisableActions_, 1);
  uint64_t v1 = (char *)sub_2410D8E3C();
  id v2 = objc_msgSend(self, sel_systemGray6Color);
  uint64_t v3 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayerColor;
  id v4 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayerColor];
  *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayerColor] = v2;
  id v5 = v2;

  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayer];
  id v7 = *(id *)&v1[v3];
  id v8 = v6;
  if (v7) {
    id v7 = objc_msgSend(v7, sel_CGColor);
  }
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  return objc_msgSend(v0, sel_commit);
}

id sub_2410D9E30()
{
  return sub_2410DA7DC(0, (uint64_t (*)(void))type metadata accessor for InteractiveTimelineDayCell);
}

uint64_t sub_2410D9F9C()
{
  return type metadata accessor for InteractiveTimelineDayCell(0);
}

uint64_t type metadata accessor for InteractiveTimelineDayCell(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B003A28);
}

void sub_2410D9FC4()
{
  sub_2410DB3D4(319, &qword_26B007210, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for TimelineDay();
    if (v1 <= 0x3F)
    {
      sub_24115CB10();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_2410DA120(char *a1)
{
  unint64_t v2 = &a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration];
  double v3 = *(double *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 8];
  double v4 = *(double *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 24];
  double v5 = *(double *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 32];
  double v6 = *(double *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 64];
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 56], sel_scaledValueForValue_, *(double *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_configuration + 72]);
  double v8 = v3 + v6 + v7;
  id v9 = sub_2410D8E3C();
  objc_msgSend(a1, sel_convertRect_toCoordinateSpace_, v9, 0.0, v8, v4, v5);
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;

  id v18 = (char *)sub_2410D8E3C();
  id v19 = *(id *)&v18[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_croppingLayer];

  objc_msgSend(v19, sel_setFrame_, v11, v13, v15, v17);
  id v20 = sub_2410D8E3C();
  objc_msgSend(a1, sel_bounds);
  objc_msgSend(v20, sel_setFrame_);

  id v21 = sub_2410D8E3C();
  objc_msgSend(v21, sel_setNeedsLayout);

  id v22 = sub_2410D8E3C();
  objc_msgSend(v22, sel_layoutIfNeeded);

  id v23 = sub_2410D8DC8();
  objc_msgSend(a1, sel_bounds);
  double MidX = CGRectGetMidX(v40);
  double v25 = *((double *)v2 + 1);
  double v26 = *((double *)v2 + 4);
  double v27 = *((double *)v2 + 5);
  double v28 = *((double *)v2 + 6);
  double v29 = *((double *)v2 + 8);
  objc_msgSend(*((id *)v2 + 7), sel_scaledValueForValue_, *((double *)v2 + 9));
  objc_msgSend(v23, sel_setPosition_, MidX, v27 * 0.5 + v26 + v25 + v29 + v30 - v28 - v27);

  id v31 = sub_2410D8DC8();
  CATransform3DMakeScale(&v39, 1.0, 1.0, 1.0);
  objc_msgSend(v31, sel_setTransform_, &v39);

  id v32 = sub_2410D8B88();
  objc_msgSend(a1, sel_bounds);
  double v33 = CGRectGetMidX(v41);
  objc_msgSend(v32, sel_center);
  objc_msgSend(v32, sel_setCenter_, v33);

  id v34 = sub_2410D8B88();
  id v35 = sub_2410D8B88();
  objc_msgSend(v35, sel_frame);
  double v37 = v36;

  double v38 = sub_2411018D4(v37);
  objc_msgSend(v34, sel_frame);
  objc_msgSend(v34, sel_setFrame_, v38);
}

uint64_t sub_2410DA3D4(void *a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TimelineDay();
  MEMORY[0x270FA5388](v6 - 8);
  double v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_24115F790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  double v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24115F750();
  id v13 = a1;
  double v14 = sub_24115F780();
  os_log_type_t v15 = sub_241160D50();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v36[0] = v32;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v31 = v16 + 4;
    id v17 = v13;
    id v18 = objc_msgSend(v17, sel_description);
    uint64_t v33 = v9;
    id v19 = v18;
    uint64_t v20 = sub_241160730();
    uint64_t v34 = v3;
    uint64_t v21 = v20;
    int v30 = a2;
    unint64_t v23 = v22;

    uint64_t v35 = sub_24101F0A4(v21, v23, v36);
    sub_241161430();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    if (v30) {
      uint64_t v24 = 1702195828;
    }
    else {
      uint64_t v24 = 0x65736C6166;
    }
    if (v30) {
      unint64_t v25 = 0xE400000000000000;
    }
    else {
      unint64_t v25 = 0xE500000000000000;
    }
    uint64_t v35 = sub_24101F0A4(v24, v25, v36);
    sub_241161430();
    uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v14, v15, "Animation: %{public}s finished %{public}s", (uint8_t *)v16, 0x16u);
    uint64_t v26 = v32;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v26, -1, -1);
    MEMORY[0x2456180C0](v16, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v33);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v27 = v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26InteractiveTimelineDayCell_timelineDay;
  swift_beginAccess();
  sub_2410DB2AC(v27, (uint64_t)v8);
  sub_2410D7AE0((uint64_t)v8);
  return sub_2410DB374((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TimelineDay);
}

id sub_2410DA7C0()
{
  return sub_2410DA7DC(0, (uint64_t (*)(void))type metadata accessor for InteractiveTimelinePastCell);
}

id sub_2410DA7DC(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_2410DA818()
{
  return type metadata accessor for InteractiveTimelinePastCell(0);
}

uint64_t type metadata accessor for InteractiveTimelinePastCell(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B006BB8);
}

unint64_t sub_2410DA844()
{
  return 0xD00000000000001BLL;
}

id sub_2410DA878(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void))
{
  v12.receiver = a1;
  v12.super_class = (Class)a7(0);
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_2410DA908(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4(0);
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

id sub_2410DA958()
{
  return sub_2410DA7DC(0, (uint64_t (*)(void))type metadata accessor for InteractiveTimelineTodayCell);
}

uint64_t sub_2410DA978()
{
  return type metadata accessor for InteractiveTimelineTodayCell(0);
}

uint64_t type metadata accessor for InteractiveTimelineTodayCell(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B006BD0);
}

unint64_t sub_2410DA9A0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2410DA9BC()
{
  return 2;
}

id sub_2410DA9F4()
{
  return sub_2410DA7DC(0, (uint64_t (*)(void))type metadata accessor for InteractiveTimelineFutureCell);
}

uint64_t sub_2410DAA14()
{
  return type metadata accessor for InteractiveTimelineFutureCell(0);
}

uint64_t type metadata accessor for InteractiveTimelineFutureCell(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B006C08);
}

uint64_t sub_2410DAA3C()
{
  return swift_updateClassMetadata2();
}

unint64_t sub_2410DAA74()
{
  return 0xD00000000000001DLL;
}

char *sub_2410DAAE8(double a1, double a2, double a3, double a4)
{
  swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayerColor] = 0;
  id v9 = objc_allocWithZone(MEMORY[0x263F157E8]);
  uint64_t v10 = v4;
  id v11 = objc_msgSend(v9, sel_init);
  *(void *)&v10[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayer] = v11;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F157E8]), sel_init);
  *(void *)&v10[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_croppingLayer] = v12;

  v27.receiver = v10;
  v27.super_class = (Class)type metadata accessor for SimpleShapeFakeMaskingView();
  id v13 = (char *)objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v14 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayer;
  os_log_type_t v15 = *(void **)&v13[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayer];
  uint64_t v16 = v13;
  id v17 = v15;
  objc_msgSend(v16, sel_bounds);
  objc_msgSend(v17, sel_setFrame_);

  id v18 = objc_msgSend(v16, sel_layer);
  objc_msgSend(v18, sel_setBackgroundColor_, 0);

  uint64_t v19 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_croppingLayer;
  objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_croppingLayer], sel_frame);
  objc_msgSend(*(id *)&v16[v19], sel_setCornerRadius_, CGRectGetWidth(v28) * 0.5);
  id v20 = *(id *)&v16[v19];
  objc_msgSend(v16, sel_bounds);
  objc_msgSend(v20, sel_setFrame_);

  objc_msgSend(*(id *)&v16[v19], sel_setMasksToBounds_, 1);
  objc_msgSend(*(id *)&v16[v19], sel_addSublayer_, *(void *)&v13[v14]);
  id v21 = objc_msgSend(v16, sel_layer);
  objc_msgSend(v21, sel_addSublayer_, *(void *)&v16[v19]);

  sub_2410DB3D4(0, (unint64_t *)&qword_268CF2250, (uint64_t (*)(uint64_t))sub_24106020C, MEMORY[0x263F8E0F8]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_24116B370;
  uint64_t v23 = sub_24115F8C0();
  uint64_t v24 = MEMORY[0x263F81EF0];
  *(void *)(v22 + 32) = v23;
  *(void *)(v22 + 40) = v24;
  unint64_t v25 = v16;
  sub_241161230();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v25;
}

void sub_2410DAE40()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_croppingLayer;
  id v2 = *(id *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_croppingLayer];
  objc_msgSend(v2, sel_frame);
  objc_msgSend(v2, sel_setCornerRadius_, CGRectGetWidth(v14) * 0.5);

  id v12 = *(id *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayer];
  id v3 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v3, sel_convertRect_toLayer_, *(void *)&v0[v1]);
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  objc_msgSend(v12, sel_setFrame_, v5, v7, v9, v11);
}

id sub_2410DAFA0(uint64_t a1)
{
  return sub_2410DA7DC(a1, type metadata accessor for SimpleShapeFakeMaskingView);
}

uint64_t type metadata accessor for SimpleShapeFakeMaskingView()
{
  return self;
}

id sub_2410DB038()
{
  qword_268CF1B10 = *MEMORY[0x263F83588];
  return (id)qword_268CF1B10;
}

id sub_2410DB050()
{
  qword_268CF1B18 = *MEMORY[0x263F835B8];
  return (id)qword_268CF1B18;
}

void sub_2410DB068()
{
}

void sub_2410DB098()
{
  id v0 = sub_2410D8DC8();
  uint64_t v1 = (void *)sub_2411606F0();
  id v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    sub_2411614D0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_2410DB310((uint64_t)v7, (uint64_t)v8);
  if (v9)
  {
    if (swift_dynamicCast())
    {
      id v3 = sub_2410D8DC8();
      id v4 = objc_msgSend(self, *off_2650E37A0[v6]);
      id v5 = objc_msgSend(v4, sel_CGColor);

      objc_msgSend(v3, sel_setFillColor_, v5);
    }
  }
  else
  {
    sub_2410DB374((uint64_t)v8, (uint64_t (*)(void))sub_24104D3F8);
  }
}

void sub_2410DB200(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayerColor);
  id v2 = *(void **)(a1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin26SimpleShapeFakeMaskingView_backgroundLayer);
  id v3 = v1;
  id v4 = v2;
  if (v1) {
    id v5 = objc_msgSend(v3, sel_CGColor);
  }
  else {
    id v5 = 0;
  }
  id v6 = v5;
  objc_msgSend(v4, sel_setBackgroundColor_);
}

uint64_t sub_2410DB2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimelineDay();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410DB310(uint64_t a1, uint64_t a2)
{
  sub_24104D3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410DB374(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_2410DB3D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2410DB438(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2410DB480(uint64_t a1, uint64_t a2)
{
  sub_2410DB3D4(0, &qword_26B007210, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410DB514(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2410DB3D4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t ListConceptManager.criticalMedicationsSet.getter()
{
  uint64_t v0 = sub_24115F6B0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F5F0();
  unint64_t v4 = sub_24115F6A0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  unint64_t v14 = MEMORY[0x263F8EE78];
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v10 = MEMORY[0x263F8EE78];
LABEL_17:
    swift_bridgeObjectRelease();
    unint64_t v11 = Array<A>.markedCritical.getter(v10);
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_241024768(v11, (unint64_t *)&qword_26B007360, 0x263F44C18, (unint64_t *)&qword_268CF0898, &qword_268CF1BE8);
    swift_bridgeObjectRelease();
    return v12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_2411616E0();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x245617450](i, v4);
      }
      else {
        id v8 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x2456167B0]();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2411609D0();
        }
        sub_241160A00();
        sub_2411609C0();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v10 = v14;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t Array<A>.markedCriticalCount.getter(unint64_t a1)
{
  unint64_t v1 = Array<A>.markedCritical.getter(a1);
  uint64_t v2 = sub_241024768(v1, (unint64_t *)&qword_26B007360, 0x263F44C18, (unint64_t *)&qword_268CF0898, &qword_268CF1BE8);
  swift_bridgeObjectRelease();
  if ((v2 & 0xC000000000000001) != 0) {
    uint64_t v3 = sub_241161530();
  }
  else {
    uint64_t v3 = *(void *)(v2 + 16);
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t Array<A>.markedCritical.getter(unint64_t a1)
{
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_2411616E0();
  if (!v2) {
    goto LABEL_14;
  }
LABEL_3:
  uint64_t result = self;
  id v16 = (id)result;
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = 0;
    long long v15 = xmmword_24116B370;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x245617450](v4, a1);
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      id v6 = v5;
      id v7 = objc_msgSend(v16, sel_sharedInstance, v15);
      sub_2410B37D8();
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = v15;
      id v9 = objc_msgSend(v6, sel_semanticIdentifier);
      id v10 = objc_msgSend(v9, sel_stringValue);

      uint64_t v11 = sub_241160730();
      uint64_t v13 = v12;

      *(void *)(v8 + 32) = v11;
      *(void *)(v8 + 40) = v13;
      unint64_t v14 = (void *)sub_241160980();
      swift_bridgeObjectRelease();
      LODWORD(v8) = objc_msgSend(v7, sel_containsAtLeastOneOfIdentifiers_, v14);

      if (v8)
      {
        sub_241161640();
        sub_241161670();
        sub_241161680();
        sub_241161650();
      }
      else
      {
      }
      ++v4;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    return v17;
  }
  return result;
}

uint64_t ListConceptManager.criticalMedicationsCount.getter()
{
  uint64_t v0 = ListConceptManager.criticalMedicationsSet.getter();
  if ((v0 & 0xC000000000000001) != 0) {
    uint64_t v1 = sub_241161530();
  }
  else {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2410DBAD4(void *a1, void *a2)
{
  return sub_241024900(a1, a2, (unint64_t *)&qword_26B007360, 0x263F44C18, &qword_268CF1BE8, (unint64_t *)&qword_268CF0898);
}

uint64_t sub_2410DBAF8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24115CB50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2410DF788(&qword_26B006938, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_241160650();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    CGRect v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    id v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      id v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2410DF788(&qword_268CF15D8, MEMORY[0x263F07508]);
      char v21 = sub_2411606E0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2410DD5B8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2410DBE1C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24115D040();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_2410DF788(&qword_26B0040F0, MEMORY[0x263F45618]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_241160650();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    CGRect v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    id v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      id v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_2410DF788(&qword_268CF1BF8, MEMORY[0x263F45618]);
      char v21 = sub_2411606E0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_2410DDB48((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_2410DC140(uint64_t a1, uint64_t a2)
{
  return sub_2410DC188(a1, a2, &qword_268CF1BE8, (unint64_t *)&qword_26B007360, 0x263F44C18, (unint64_t *)&qword_268CF0898);
}

uint64_t sub_2410DC164(uint64_t a1, uint64_t a2)
{
  return sub_2410DC188(a1, a2, (unint64_t *)&qword_268CF1BE0, &qword_268CF1BD0, 0x263F0A868, &qword_268CF1BD8);
}

uint64_t sub_2410DC188(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  if (a2)
  {
    sub_2410DF8F8(0, a3, a4, a5, a6);
    uint64_t v10 = sub_2411615C0();
    uint64_t v23 = v10;
    sub_241161520();
    if (sub_241161550())
    {
      sub_241024708(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v10 = v23;
        unint64_t v17 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v17)
        {
          sub_2410DC68C(v17 + 1, a3, a4, a5, a6);
          uint64_t v10 = v23;
        }
        uint64_t result = sub_2411612D0();
        uint64_t v12 = v10 + 56;
        uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
        unint64_t v14 = result & ~v13;
        unint64_t v15 = v14 >> 6;
        if (((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v15 == v19;
            if (v15 == v19) {
              unint64_t v15 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          unint64_t v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(void *)(*(void *)(v10 + 48) + 8 * v16) = v22;
        ++*(void *)(v10 + 16);
      }
      while (sub_241161550());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v10;
}

uint64_t sub_2410DC3B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2410CDE8C();
  uint64_t v3 = sub_2411615B0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_241161950();
      sub_241160830();
      uint64_t result = sub_2411619A0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2410DC68C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_2410DF8F8(0, a2, a3, a4, a5);
  uint64_t v8 = sub_2411615B0();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    uint64_t v33 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    int64_t v11 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 56);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v15 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v22 = v11[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_33;
            }
            unint64_t v22 = v11[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
                if (v32 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v11 = -1 << v32;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v14) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v11[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
      uint64_t result = sub_2411612D0();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v9;
  return result;
}

uint64_t sub_2410DC928()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_24115CB50();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  CGRect v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_2410DF7D0();
  uint64_t v5 = sub_2411615B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    double v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *double v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2410DF788(&qword_26B006938, MEMORY[0x263F07508]);
      uint64_t result = sub_241160650();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_2410DCD20(uint64_t a1)
{
  return sub_2410DC68C(a1, (unint64_t *)&qword_268CF1BE0, &qword_268CF1BD0, 0x263F0A868, &qword_268CF1BD8);
}

uint64_t sub_2410DCD44()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_24115D320();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  CGRect v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_2410DF864();
  uint64_t v5 = sub_2411615B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    double v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *double v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2410DF788(&qword_26B004110, MEMORY[0x263F45738]);
      uint64_t result = sub_241160650();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_2410DD13C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_24115D040();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  CGRect v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_2410DFB20();
  uint64_t v5 = sub_2411615B0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    double v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *double v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_2410DF788(&qword_26B0040F0, MEMORY[0x263F45618]);
      uint64_t result = sub_241160650();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

unint64_t sub_2410DD534(uint64_t a1, uint64_t a2)
{
  sub_2411612D0();
  unint64_t result = sub_241161510();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_2410DD5B8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_24115CB50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2410DC928();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2410DE19C(MEMORY[0x263F07508], (void (*)(void))sub_2410DF7D0);
      goto LABEL_12;
    }
    sub_2410DE974();
  }
  uint64_t v12 = *v3;
  sub_2410DF788(&qword_26B006938, MEMORY[0x263F07508]);
  uint64_t v13 = sub_241160650();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_2410DF788(&qword_268CF15D8, MEMORY[0x263F07508]);
      char v21 = sub_2411606E0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_2411618D0();
  __break(1u);
  return result;
}

uint64_t sub_2410DD880(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_24115D320();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2410DCD44();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2410DE19C(MEMORY[0x263F45738], (void (*)(void))sub_2410DF864);
      goto LABEL_12;
    }
    sub_2410DED20();
  }
  uint64_t v12 = *v3;
  sub_2410DF788(&qword_26B004110, MEMORY[0x263F45738]);
  uint64_t v13 = sub_241160650();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_2410DF788(&qword_26B004118, MEMORY[0x263F45738]);
      char v21 = sub_2411606E0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_2411618D0();
  __break(1u);
  return result;
}

uint64_t sub_2410DDB48(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_24115D040();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_2410DD13C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2410DE19C(MEMORY[0x263F45618], (void (*)(void))sub_2410DFB20);
      goto LABEL_12;
    }
    sub_2410DF0CC();
  }
  uint64_t v12 = *v3;
  sub_2410DF788(&qword_26B0040F0, MEMORY[0x263F45618]);
  uint64_t v13 = sub_241160650();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_2410DF788(&qword_268CF1BF8, MEMORY[0x263F45618]);
      char v21 = sub_2411606E0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_2411618D0();
  __break(1u);
  return result;
}

void *sub_2410DDE10()
{
  uint64_t v1 = v0;
  sub_2410CDE8C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2411615A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2410DDFC0()
{
  return sub_2410DDFE4(&qword_268CF1BE8, (unint64_t *)&qword_26B007360, 0x263F44C18, (unint64_t *)&qword_268CF0898);
}

id sub_2410DDFE4(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_2410DF8F8(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_2411615A0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v5 = v8;
    return result;
  }
  id result = (id)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v10 + 8 * v13);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    unint64_t v21 = *(void **)(*(void *)(v6 + 48) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v17) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2410DE19C(uint64_t (*a1)(void), void (*a2)(void))
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - v7;
  a2(0);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_2411615A0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  BOOL v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_2410DE450()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_2410CDE8C();
  uint64_t v3 = sub_2411615B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_241161950();
    swift_bridgeObjectRetain();
    sub_241160830();
    uint64_t result = sub_2411619A0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2410DE6FC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_2410DF8F8(0, a2, a3, a4, a5);
  uint64_t v8 = sub_2411615B0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v6 = v9;
    return result;
  }
  BOOL v32 = v5;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v7 + 56);
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v15 = v8 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    id v24 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    uint64_t result = sub_2411612D0();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
    ++*(void *)(v9 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v32;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2410DE974()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115CB50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_2410DF7D0();
  uint64_t v7 = sub_2411615B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2410DF788(&qword_26B006938, MEMORY[0x263F07508]);
    uint64_t result = sub_241160650();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2410DED20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115D320();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_2410DF864();
  uint64_t v7 = sub_2411615B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2410DF788(&qword_26B004110, MEMORY[0x263F45738]);
    uint64_t result = sub_241160650();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2410DF0CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115D040();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_2410DFB20();
  uint64_t v7 = sub_2411615B0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_2410DF788(&qword_26B0040F0, MEMORY[0x263F45618]);
    uint64_t result = sub_241160650();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2410DF478(unint64_t a1)
{
  return sub_241024768(a1, (unint64_t *)&qword_26B005E00, 0x263F0A598, &qword_26B005E08, (unint64_t *)&qword_26B0060C8);
}

uint64_t sub_2410DF49C(unint64_t a1)
{
  return sub_241024768(a1, (unint64_t *)&qword_26B007360, 0x263F44C18, (unint64_t *)&qword_268CF0898, &qword_268CF1BE8);
}

uint64_t sub_2410DF4C0(uint64_t a1)
{
  uint64_t v2 = sub_24115CB50();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v27 = (char *)v21 - v6;
  sub_2410B1C58(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_2410DF788(&qword_26B006938, MEMORY[0x263F07508]);
  uint64_t v29 = sub_241160BD0();
  if (v10)
  {
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    int64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    int64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    unint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_2410DBAF8(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_2410DF764(unint64_t a1)
{
  return sub_241024768(a1, &qword_268CF1BD0, 0x263F0A868, &qword_268CF1BD8, (unint64_t *)&qword_268CF1BE0);
}

uint64_t sub_2410DF788(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2410DF7D0()
{
  if (!qword_268CF1BF0)
  {
    sub_24115CB50();
    sub_2410DF788(&qword_26B006938, MEMORY[0x263F07508]);
    unint64_t v0 = sub_2411615E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1BF0);
    }
  }
}

void sub_2410DF864()
{
  if (!qword_26B005EC0)
  {
    sub_24115D320();
    sub_2410DF788(&qword_26B004110, MEMORY[0x263F45738]);
    unint64_t v0 = sub_2411615E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005EC0);
    }
  }
}

void sub_2410DF8F8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_241024708(255, a3);
    sub_241024DA4(a5, a3);
    unint64_t v8 = sub_2411615E0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2410DF984(uint64_t a1)
{
  uint64_t v2 = sub_24115D040();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_2410DF788(&qword_26B0040F0, MEMORY[0x263F45618]);
  uint64_t result = sub_241160BD0();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_2410DBE1C((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

void sub_2410DFB20()
{
  if (!qword_268CF1C00)
  {
    sub_24115D040();
    sub_2410DF788(&qword_26B0040F0, MEMORY[0x263F45618]);
    unint64_t v0 = sub_2411615E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1C00);
    }
  }
}

ValueMetadata *type metadata accessor for MedicationsLoggingSummaryContent()
{
  return &type metadata for MedicationsLoggingSummaryContent;
}

uint64_t *sub_2410DFBC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_24115CB10();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_2410DFCB4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_24115CB10();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_2410DFD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24115CB10();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_2410DFDCC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24115CB10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_2410DFE70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24115CB10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_2410DFEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24115CB10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_2410DFF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2410DFF9C);
}

uint64_t sub_2410DFF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24115CB10();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2410E004C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2410E0060);
}

uint64_t sub_2410E0060(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24115CB10();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent()
{
  uint64_t result = qword_26B004878;
  if (!qword_26B004878) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410E0154()
{
  uint64_t result = sub_24115CB10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2410E01F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v4 = sub_24115D130();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v23 = (uint64_t)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24115D1C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  int64_t v22 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v21 - v10;
  v21[1] = (char *)v21 - v10;
  unint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  unint64_t v26 = 0xD000000000000014;
  unint64_t v27 = 0x8000000241167200;
  unint64_t v12 = (void *)sub_24115D170();
  sub_24115CEF0();

  sub_241160860();
  swift_bridgeObjectRelease();
  unint64_t v14 = v26;
  unint64_t v13 = v27;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v15(v11, a1, v6);
  uint64_t v16 = (void *)sub_24115D170();
  sub_24101ABDC(v16, v23);

  swift_bridgeObjectRetain();
  v21[0] = sub_24115D170();
  uint64_t v17 = v22;
  v15(v22, a1, v6);
  unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = v24;
  *((void *)v19 + 3) = v14;
  *((void *)v19 + 4) = v13;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v19[v18], v17, v6);
  swift_bridgeObjectRetain();
  return sub_24115D1D0();
}

id sub_2410E0490(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v55 = a2;
  id v56 = a3;
  uint64_t v6 = sub_24115D130();
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  MEMORY[0x270FA5388](v6);
  id v49 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24115F790();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  MEMORY[0x270FA5388](v8);
  sub_2410E32D0(0, &qword_26B0040F8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v57 = sub_24115D0A0();
  uint64_t v12 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v58 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24115CEB0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_2410E1F10(v18);
  swift_bridgeObjectRelease();
  uint64_t v53 = v15;
  int64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  unint64_t v21 = (unsigned int *)MEMORY[0x263F45538];
  if (*(void *)(a1 + 16)) {
    unint64_t v21 = (unsigned int *)MEMORY[0x263F45520];
  }
  uint64_t v22 = *v21;
  uint64_t v54 = v14;
  v20(v17, v22, v14);
  type metadata accessor for MedicationsLoggingSummaryView(0);
  type metadata accessor for MedicationsLoggingSummaryView.Model();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v19;
  uint64_t v61 = v23;
  swift_bridgeObjectRetain();
  uint64_t v52 = a4;
  uint64_t v24 = (void *)sub_24115D170();
  uint64_t v59 = sub_241160730();
  uint64_t v60 = v25;
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_2410E33BC(&qword_26B003F70, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView);
  unint64_t v26 = v17;
  sub_24115CF70();
  uint64_t v27 = (uint64_t)v49;
  id v56 = v26;
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v28 = v57;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v57);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v29(v58, v11, v28);
  sub_2410E224C();
  BOOL v31 = v30;
  id result = objc_msgSend(self, sel_categoryWithID_, 31);
  if (result)
  {
    uint64_t v33 = result;
    uint64_t v34 = v12;
    uint64_t v35 = (uint64_t)v58;
    sub_2410E2344((int)v58, v31, result);

    sub_2410E247C(v35);
    swift_bridgeObjectRelease();
    int64_t v36 = (void *)sub_24115D170();
    uint64_t v37 = (void *)sub_24115CF20();
    sub_24115CF10();

    sub_24115CFA0();
    uint64_t v38 = (void *)sub_24115D170();
    sub_24101ABDC(v38, v27);

    sub_24115D120();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v27, v48);
    sub_24115CFE0();
    uint64_t v39 = (void *)sub_24115D170();
    int64_t v40 = (void *)sub_24115CF20();
    char v41 = sub_24115CF10();

    if (v41)
    {
      id v42 = objc_msgSend(self, sel_medicationDoseEventType);
      sub_241160C80();
    }
    sub_24115D050();
    uint64_t v44 = v53;
    uint64_t v43 = v54;
    sub_2410E32D0(0, (unint64_t *)&qword_26B005F20, MEMORY[0x263F45630], MEMORY[0x263F8E0F8]);
    unint64_t v45 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_24116B370;
    v29((char *)(v46 + v45), v58, v28);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v56, v43);
    return (id)v46;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2410E0C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2410E0C10(a1, a2);
}

uint64_t sub_2410E0C10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2410E32D0(0, qword_26B0048B8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v17 - v5;
  v17[1] = a1;
  swift_getKeyPath();
  sub_2410E32D0(0, &qword_26B005CE8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent, MEMORY[0x263F8D488]);
  sub_2410E3334();
  sub_2410E33BC((unint64_t *)&unk_26B007230, MEMORY[0x263F07490]);
  uint64_t v7 = sub_241160910();
  swift_release();
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent();
  uint64_t v10 = *(void *)(v9 - 8);
  if (v8)
  {
    sub_2410E2FB0(v7+ ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80)), (uint64_t)v6);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, v11, 1, v9);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_2410E3404((uint64_t)v6, qword_26B0048B8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent);
    uint64_t v12 = sub_24115CB10();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else
  {
    uint64_t v14 = &v6[*(int *)(v9 + 24)];
    uint64_t v15 = sub_24115CB10();
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(a2, v14, v15);
    sub_2410E3014((uint64_t)v6);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a2, 0, 1, v15);
  }
}

uint64_t sub_2410E0F24(void *a1, uint64_t a2)
{
  sub_2410E3070(0, &qword_26B005F00, (uint64_t (*)(void))sub_2410E2E48, (uint64_t)&type metadata for MedicationsLoggingSummaryContent.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v10 - v7;
  sub_24101A6BC(a1, a1[3]);
  sub_2410E2E48();
  sub_2411619D0();
  v10[1] = a2;
  sub_2410E32D0(0, &qword_26B005CE8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent, MEMORY[0x263F8D488]);
  sub_2410E2E9C(&qword_26B005CF0, &qword_26B004870);
  sub_241161820();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2410E110C()
{
  return sub_2411619A0();
}

uint64_t sub_2410E1150()
{
  return sub_241161960();
}

uint64_t sub_2410E1178()
{
  return sub_2411619A0();
}

uint64_t sub_2410E11B8()
{
  return 0x73746E657665;
}

uint64_t sub_2410E11CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_241161890();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2410E125C(uint64_t a1)
{
  unint64_t v2 = sub_2410E2E48();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2410E1298(uint64_t a1)
{
  unint64_t v2 = sub_2410E2E48();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_2410E12D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_2410E2C1C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_2410E1300(void *a1)
{
  return sub_2410E0F24(a1, *v1);
}

uint64_t sub_2410E131C(uint64_t *a1, uint64_t *a2)
{
  return sub_24113251C(*a1, *a2);
}

uint64_t sub_2410E1328()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v21[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_24115F790();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v1 == 5)
  {
    if (qword_26B007268 != -1) {
      swift_once();
    }
    sub_24115C960();
    v21[0] = 673202213;
    v21[1] = 0xE400000000000000;
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_241160860();
    sub_2410E30D8();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_24116B370;
    uint64_t v12 = v1[1];
    uint64_t v11 = v1[2];
    *(void *)(v10 + 56) = MEMORY[0x263F8D310];
    *(void *)(v10 + 64) = sub_2410484D8();
    *(void *)(v10 + 32) = v12;
    *(void *)(v10 + 40) = v11;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_241160700();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (*v1 == 4)
  {
    uint64_t v9 = v1[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_24115F740();
    sub_2410E2FB0((uint64_t)v1, (uint64_t)v4);
    uint64_t v13 = sub_24115F780();
    os_log_type_t v14 = sub_241160D30();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      v21[0] = v16;
      *(_DWORD *)uint64_t v15 = 136315394;
      uint64_t v22 = sub_24101F0A4(0x45676E6967676F4CLL, 0xEC000000746E6576, v21);
      sub_241161430();
      *(_WORD *)(v15 + 12) = 2080;
      uint64_t v22 = *v4;
      type metadata accessor for HKMedicationDoseEventStatus(0);
      uint64_t v17 = sub_241160760();
      uint64_t v22 = sub_24101F0A4(v17, v18, v21);
      sub_241161430();
      swift_bridgeObjectRelease();
      sub_2410E3014((uint64_t)v4);
      _os_log_impl(&dword_241007000, v13, v14, "[%s]: Unexpected status type: %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v16, -1, -1);
      MEMORY[0x2456180C0](v15, -1, -1);
    }
    else
    {
      sub_2410E3014((uint64_t)v4);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  return v9;
}

uint64_t sub_2410E170C(void *a1)
{
  uint64_t v3 = v1;
  sub_2410E3070(0, &qword_26B005EF8, (uint64_t (*)(void))sub_2410E2F5C, (uint64_t)&type metadata for MedicationsLoggingSummaryContent.LoggingEvent.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  sub_24101A6BC(a1, a1[3]);
  sub_2410E2F5C();
  sub_2411619D0();
  uint64_t v12 = *v3;
  v11[15] = 0;
  type metadata accessor for HKMedicationDoseEventStatus(0);
  sub_2410E33BC(&qword_26B005E70, type metadata accessor for HKMedicationDoseEventStatus);
  sub_241161820();
  if (!v2)
  {
    v11[14] = 1;
    sub_241161800();
    type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent();
    v11[13] = 2;
    sub_24115CB10();
    sub_2410E33BC(&qword_26B0040E8, MEMORY[0x263F07490]);
    sub_241161820();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2410E1974@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v23 = sub_24115CB10();
  uint64_t v20 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410E3070(0, &qword_268CF1C20, (uint64_t (*)(void))sub_2410E2F5C, (uint64_t)&type metadata for MedicationsLoggingSummaryContent.LoggingEvent.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v24 = v5;
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24101A6BC(a1, a1[3]);
  sub_2410E2F5C();
  uint64_t v25 = v7;
  uint64_t v11 = v26;
  sub_2411619C0();
  if (v11) {
    return sub_24101F178((uint64_t)a1);
  }
  uint64_t v12 = (uint64_t)a1;
  uint64_t v13 = v10;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  uint64_t v16 = v4;
  type metadata accessor for HKMedicationDoseEventStatus(0);
  char v29 = 0;
  sub_2410E33BC(&qword_268CF1C28, type metadata accessor for HKMedicationDoseEventStatus);
  uint64_t v17 = v24;
  sub_2411617C0();
  *(void *)uint64_t v13 = v30;
  char v28 = 1;
  *((void *)v13 + 1) = sub_2411617A0();
  *((void *)v13 + 2) = v18;
  char v27 = 2;
  sub_2410E33BC(&qword_26B003F08, MEMORY[0x263F07490]);
  sub_2411617C0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v17);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v13[*(int *)(v8 + 24)], v16, v15);
  sub_2410E2FB0((uint64_t)v13, v21);
  sub_24101F178(v12);
  return sub_2410E3014((uint64_t)v13);
}

uint64_t sub_2410E1D48()
{
  uint64_t v1 = 0x697461636964656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 1702125924;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x737574617473;
  }
}

uint64_t sub_2410E1DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2410E3900(a1, a2);
  *a3 = result;
  return result;
}

void sub_2410E1DCC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2410E1DD8(uint64_t a1)
{
  unint64_t v2 = sub_2410E2F5C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2410E1E14(uint64_t a1)
{
  unint64_t v2 = sub_2410E2F5C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2410E1E50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2410E1974(a1, a2);
}

uint64_t sub_2410E1E68(void *a1)
{
  return sub_2410E170C(a1);
}

uint64_t sub_2410E1E84(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  BOOL v2 = a1[1] == a2[1] && a1[2] == a2[2];
  if (!v2 && (sub_241161890() & 1) == 0) {
    return 0;
  }
  type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent();

  return sub_24115CAD0();
}

uint64_t sub_2410E1F10(uint64_t a1)
{
  uint64_t v31 = sub_24115CB10();
  uint64_t v2 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v30 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_24115C810();
  uint64_t v4 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_2410E5A74(0, v10, 0);
    uint64_t v25 = (void (**)(char *, char *, uint64_t))(v2 + 32);
    uint64_t v26 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v12 = (void **)(a1 + 40);
    uint64_t v13 = v30;
    do
    {
      uint64_t v14 = *v12;
      id v15 = *(v12 - 1);
      id v16 = v14;
      sub_2411612A0();
      sub_24115C7C0();
      (*v26)(v6, v29);
      id v17 = objc_msgSend(v15, sel_status);
      id v32 = v16;
      sub_2410E3474();
      uint64_t v18 = sub_24115F460();
      uint64_t v20 = v19;
      (*v25)(&v9[*(int *)(v28 + 24)], v13, v31);

      *(void *)uint64_t v9 = v17;
      *((void *)v9 + 1) = v18;
      *((void *)v9 + 2) = v20;
      uint64_t v11 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2410E5A74(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v11 = v33;
      }
      unint64_t v22 = *(void *)(v11 + 16);
      unint64_t v21 = *(void *)(v11 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_2410E5A74(v21 > 1, v22 + 1, 1);
        uint64_t v11 = v33;
      }
      *(void *)(v11 + 16) = v22 + 1;
      sub_2410E34B4((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v22);
      v12 += 2;
      --v10;
    }
    while (v10);
  }
  return v11;
}

void sub_2410E224C()
{
  unint64_t v0 = self;
  sub_24115D150();
  sub_24101A6BC(v5, v5[3]);
  uint64_t v1 = (void *)sub_24115D0B0();
  id v2 = objc_msgSend(v0, sel_sharedInstanceForHealthStore_, v1);

  sub_24101F178((uint64_t)v5);
  if (!v2)
  {
    __break(1u);
    goto LABEL_5;
  }
  id v3 = objc_msgSend(self, sel_medicationDoseEventType);
  id v4 = objc_msgSend(v2, sel_displayTypeForObjectType_, v3);

  if (!v4) {
LABEL_5:
  }
    __break(1u);
}

uint64_t sub_2410E2344(int a1, id a2, void *a3)
{
  id v5 = objc_msgSend(a2, sel_localization);
  id v6 = objc_msgSend(v5, sel_displayName);

  sub_241160730();
  sub_24115CFB0();
  id v7 = objc_msgSend(a2, sel_localization);
  id v8 = objc_msgSend(v7, sel_summary);

  if (v8)
  {
    sub_241160730();
  }
  sub_24115CFF0();
  sub_24115D020();
  id v9 = objc_msgSend(a3, sel_displayName);
  sub_241160730();

  return sub_24115D010();
}

uint64_t sub_2410E247C(uint64_t a1)
{
  id v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410E32D0(0, (unint64_t *)&unk_26B007220, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v39 = (char *)v35 - v4;
  sub_2410E32D0(0, &qword_26B004128, MEMORY[0x263F45770], v2);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v38 = (char *)v35 - v6;
  sub_2410E32D0(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], v2);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  int64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v35 - v11;
  uint64_t v13 = sub_24115CB10();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int64_t v36 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v35 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v37 = (char *)v35 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v35 - v22;
  uint64_t v24 = swift_bridgeObjectRetain();
  sub_2410E0C10(v24, (uint64_t)v12);
  swift_bridgeObjectRelease();
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1) {
    return sub_2410E3404((uint64_t)v12, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  }
  v35[1] = a1;
  uint64_t v27 = v12;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v28(v23, v27, v13);
  uint64_t v29 = swift_bridgeObjectRetain();
  sub_2410E0C10(v29, (uint64_t)v10);
  swift_bridgeObjectRelease();
  if (v25(v10, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
    return sub_2410E3404((uint64_t)v10, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  }
  else
  {
    uint64_t v30 = v37;
    v28(v37, v10, v13);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v31(v19, v23, v13);
    v31(v36, v30, v13);
    id v32 = v39;
    sub_24115C7D0();
    uint64_t v33 = sub_24115C810();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
    sub_24115D350();
    sub_24115D000();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v14 + 8);
    v34(v30, v13);
    return ((uint64_t (*)(char *, uint64_t))v34)(v23, v13);
  }
}

uint64_t sub_2410E290C()
{
  uint64_t v0 = sub_24115F790();
  MEMORY[0x270FA5388](v0);
  sub_24115C750();
  swift_allocObject();
  sub_24115C740();
  sub_2410E3140();
  sub_24115C730();
  swift_release();
  return v2;
}

void *sub_2410E2C1C(void *a1)
{
  sub_2410E3070(0, &qword_268CF1C08, (uint64_t (*)(void))sub_2410E2E48, (uint64_t)&type metadata for MedicationsLoggingSummaryContent.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = sub_24101A6BC(a1, a1[3]);
  sub_2410E2E48();
  uint64_t v9 = v8;
  sub_2411619C0();
  if (!v1)
  {
    sub_2410E32D0(0, &qword_26B005CE8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent, MEMORY[0x263F8D488]);
    sub_2410E2E9C(&qword_268CF1C10, &qword_268CF1C18);
    sub_2411617C0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  sub_24101F178((uint64_t)a1);
  return v9;
}

unint64_t sub_2410E2E48()
{
  unint64_t result = qword_26B004918;
  if (!qword_26B004918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004918);
  }
  return result;
}

uint64_t sub_2410E2E9C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2410E32D0(255, &qword_26B005CE8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent, MEMORY[0x263F8D488]);
    sub_2410E33BC(a2, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2410E2F5C()
{
  unint64_t result = qword_26B004858;
  if (!qword_26B004858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004858);
  }
  return result;
}

uint64_t sub_2410E2FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410E3014(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2410E3070(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_2410E30D8()
{
  if (!qword_26B007398)
  {
    sub_241020840(255, (unint64_t *)&qword_26B0073C0);
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B007398);
    }
  }
}

unint64_t sub_2410E3140()
{
  unint64_t result = qword_268CF1C30;
  if (!qword_268CF1C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1C30);
  }
  return result;
}

uint64_t sub_2410E3194()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

id sub_2410E3268()
{
  uint64_t v1 = *(void *)(sub_24115D1C0() - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (char *)v0[4];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_2410E0490(v2, v3, v4, v5);
}

void sub_2410E32D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2410E3334()
{
  unint64_t result = qword_26B005CF8;
  if (!qword_26B005CF8)
  {
    sub_2410E32D0(255, &qword_26B005CE8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005CF8);
  }
  return result;
}

uint64_t sub_2410E33BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2410E3404(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_2410E32D0(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_2410E3474()
{
  unint64_t result = qword_26B007360;
  if (!qword_26B007360)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B007360);
  }
  return result;
}

uint64_t sub_2410E34B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for MedicationsLoggingSummaryContent.LoggingEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2410E35E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent.CodingKeys()
{
  return &type metadata for MedicationsLoggingSummaryContent.LoggingEvent.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MedicationsLoggingSummaryContent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2410E36B8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationsLoggingSummaryContent.CodingKeys()
{
  return &type metadata for MedicationsLoggingSummaryContent.CodingKeys;
}

unint64_t sub_2410E36F4()
{
  unint64_t result = qword_268CF1C38;
  if (!qword_268CF1C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1C38);
  }
  return result;
}

unint64_t sub_2410E374C()
{
  unint64_t result = qword_268CF1C40;
  if (!qword_268CF1C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1C40);
  }
  return result;
}

unint64_t sub_2410E37A4()
{
  unint64_t result = qword_26B004868;
  if (!qword_26B004868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004868);
  }
  return result;
}

unint64_t sub_2410E37FC()
{
  unint64_t result = qword_26B004860;
  if (!qword_26B004860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004860);
  }
  return result;
}

unint64_t sub_2410E3854()
{
  unint64_t result = qword_26B004928;
  if (!qword_26B004928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004928);
  }
  return result;
}

unint64_t sub_2410E38AC()
{
  unint64_t result = qword_26B004920;
  if (!qword_26B004920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004920);
  }
  return result;
}

uint64_t sub_2410E3900(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697461636964656DLL && a2 == 0xEE00656D614E6E6FLL || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_241161890();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t *NSBundle.medicationsHealthAppPlugin.unsafeMutableAddressor()
{
  if (qword_26B007378 != -1) {
    swift_once();
  }
  return &static NSBundle.medicationsHealthAppPlugin;
}

uint64_t NSBundle.bundleName.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115C9E0();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x270FA5388](v2).n128_u64[0];
  char v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(v0, sel_bundleURL, v4);
  sub_24115C9C0();

  uint64_t v8 = sub_24115C9A0();
  uint64_t v10 = v9;
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v6, v2);
  uint64_t v24 = v8;
  uint64_t v25 = v10;
  unint64_t v12 = sub_24108741C();
  uint64_t v13 = (void *)MEMORY[0x2456172F0](46, 0xE100000000000000, 1, 1, MEMORY[0x263F8D310], v12);
  swift_bridgeObjectRelease();
  if (v13[2])
  {
    uint64_t v14 = v13[4];
    uint64_t v15 = v13[5];
    uint64_t v16 = v13[6];
    uint64_t v17 = v13[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x2456165F0](v14, v15, v16, v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(v1, sel_bundleURL);
    sub_24115C9C0();

    uint64_t v20 = sub_24115C9A0();
    uint64_t v22 = v21;
    v11(v6, v2);
    uint64_t v24 = v20;
    uint64_t v25 = v22;
    return sub_2411608F0();
  }
  return v18;
}

uint64_t NSBundle.bundleNameAndExtension.getter()
{
  uint64_t v1 = sub_24115C9E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  double v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(v0, sel_bundleURL);
  sub_24115C9C0();

  uint64_t v6 = sub_24115C9A0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

id sub_2410E3DBC(uint64_t a1)
{
  return sub_2410E3E58(a1, (void (*)(void))type metadata accessor for MedicationCategoryViewController, &static NSBundle.medicationsHealthAppPlugin);
}

id static NSBundle.medicationsHealthAppPlugin.getter()
{
  if (qword_26B007378 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSBundle.medicationsHealthAppPlugin;

  return v0;
}

id sub_2410E3E38(uint64_t a1)
{
  return sub_2410E3E58(a1, (void (*)(void))type metadata accessor for MedicationsHealthAppPluginDelegate, &qword_26B00BC60);
}

id sub_2410E3E58(uint64_t a1, void (*a2)(void), void *a3)
{
  a2(0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  *a3 = result;
  return result;
}

uint64_t sub_2410E3EB4()
{
  uint64_t v2 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  sub_241160860();
  sub_241139684();
  sub_241161850();
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2410E3F88(uint64_t a1)
{
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  sub_241161970();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24113BB54(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2410E40D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationMonthHighlightItem()
{
  return self;
}

uint64_t sub_2410E4164()
{
  sub_241161950();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  sub_241161970();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24113BB54((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return sub_2411619A0();
}

uint64_t type metadata accessor for SharedMedicationsHighlightsDataSource()
{
  uint64_t result = qword_268CF1C50;
  if (!qword_268CF1C50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410E4304()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2410E4354()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2410E4388()
{
  return sub_2410E3EB4();
}

uint64_t sub_2410E43AC(void **a1, void **a2)
{
  return sub_2410E4E20(*a1, *a2);
}

uint64_t sub_2410E43B8()
{
  return sub_2410E4164();
}

uint64_t sub_2410E43DC(uint64_t a1)
{
  return sub_2410E3F88(a1);
}

uint64_t sub_2410E4400()
{
  sub_241161950();
  sub_2410E3F88((uint64_t)v1);
  return sub_2411619A0();
}

uint64_t sub_2410E4440(uint64_t a1)
{
  uint64_t v3 = sub_24115CB50();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v33 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24115DDF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + qword_268CF1C48) = a1;
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v27 = v4;
    uint64_t v28 = v3;
    uint64_t v29 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v30 = v7;
    uint64_t v31 = v6;
    uint64_t v32 = v1;
    unint64_t v37 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_241161660();
    uint64_t v35 = type metadata accessor for SharedMedicationsMonthHighlightCell();
    uint64_t v34 = type metadata accessor for MedicationMonthHighlightItem();
    uint64_t v26 = a1;
    unint64_t v12 = (uint64_t *)(a1 + 80);
    do
    {
      uint64_t v14 = *(v12 - 6);
      uint64_t v13 = *(v12 - 5);
      uint64_t v16 = *(v12 - 4);
      uint64_t v15 = *(v12 - 3);
      uint64_t v17 = *(v12 - 1);
      uint64_t v36 = *(v12 - 2);
      uint64_t v18 = *v12;
      v12 += 7;
      id v19 = (void *)swift_allocObject();
      sub_2410E4F3C(&qword_268CF1C70, 255, (void (*)(uint64_t))type metadata accessor for SharedMedicationsMonthHighlightCell);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19[9] = sub_24115D9A0();
      v19[10] = v20;
      v19[2] = v14;
      v19[3] = v13;
      v19[4] = v16;
      v19[5] = v15;
      v19[6] = v36;
      v19[7] = v17;
      v19[8] = v18;
      sub_241161640();
      sub_241161670();
      sub_241161680();
      sub_241161650();
      --v10;
    }
    while (v10);
    unint64_t v11 = v37;
    swift_bridgeObjectRelease();
    uint64_t v6 = v31;
    uint64_t v9 = v29;
    uint64_t v7 = v30;
    uint64_t v4 = v27;
    uint64_t v3 = v28;
  }
  sub_2410CF274(v11);
  swift_bridgeObjectRelease();
  uint64_t v21 = v33;
  sub_24115CB40();
  sub_24115CB20();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v21, v3);
  sub_24115DDE0();
  sub_2410E4F84(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  unint64_t v22 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_24116B370;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 16))(v23 + v22, v9, v6);
  uint64_t v24 = sub_24115D610();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v24;
}

void sub_2410E47E8()
{
}

uint64_t sub_2410E4818()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2410E4828()
{
  sub_24115D620();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2410E4878()
{
  return type metadata accessor for SharedMedicationsHighlightsDataSource();
}

uint64_t sub_2410E4880(uint64_t a1)
{
  uint64_t v2 = sub_24115DF90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    sub_24115DF30();
  }
  else {
    sub_24115DF20();
  }
  uint64_t v6 = sub_24115DF80();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t sub_2410E4970()
{
  return sub_24115E790();
}

uint64_t sub_2410E49CC()
{
  return sub_241160DE0();
}

uint64_t sub_2410E4A58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24115F9D0();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24115E9F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410E4F84(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v14 - v8;
  if (sub_24115CDF0())
  {
    a1[3] = sub_24115DA70();
    a1[4] = sub_2410E4F3C(&qword_268CF07E8, 255, MEMORY[0x263F43D00]);
    sub_2410277C0(a1);
    return sub_24115DA60();
  }
  else
  {
    uint64_t v11 = sub_24115CB90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
    sub_24115E9E0();
    sub_24115EF20();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_241032AF8((uint64_t)v9);
    sub_24115F970();
    uint64_t v12 = sub_24115D8A0();
    swift_allocObject();
    uint64_t v13 = sub_24115D890();
    a1[3] = v12;
    uint64_t result = sub_2410E4F3C((unint64_t *)&qword_26B0069B8, 255, MEMORY[0x263F43AA8]);
    a1[4] = result;
    *a1 = v13;
  }
  return result;
}

uint64_t sub_2410E4D74@<X0>(uint64_t *a1@<X8>)
{
  return sub_2410E4A58(a1);
}

uint64_t sub_2410E4D8C()
{
  return sub_2410E4F3C(&qword_268CF1C60, 255, (void (*)(uint64_t))type metadata accessor for SharedMedicationsHighlightsDataSource);
}

uint64_t sub_2410E4DD8(uint64_t a1, uint64_t a2)
{
  return sub_2410E4F3C(&qword_268CF1C68, a2, (void (*)(uint64_t))type metadata accessor for MedicationMonthHighlightItem);
}

uint64_t sub_2410E4E20(void *a1, void *a2)
{
  uint64_t v2 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v3 = a1[6];
  uint64_t v6 = a1[7];
  uint64_t v5 = a1[8];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v9 = a2[7];
  uint64_t v11 = a2[8];
  if ((a1[2] != a2[2] || a1[3] != a2[3]) && (sub_241161890() & 1) == 0
    || (v2 != v7 || v4 != v8) && (sub_241161890() & 1) == 0)
  {
    return 0;
  }
  if (v6)
  {
    if (v9 && (v3 == v10 && v6 == v9 || (sub_241161890() & 1) != 0)) {
      goto LABEL_12;
    }
    return 0;
  }
  if (v9) {
    return 0;
  }
LABEL_12:

  return sub_241132068(v5, v11);
}

uint64_t sub_2410E4F3C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2410E4F84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2410E4FE8(unint64_t a1)
{
  return sub_24101BC94(a1);
}

uint64_t sub_2410E4FF4(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  sub_2410E5950(0, v2, 0);
  if (!v2) {
    return v12;
  }
  for (uint64_t i = a1 + 32; ; i += 40)
  {
    sub_2410280A4(i, (uint64_t)v10);
    sub_241020840(0, &qword_268CF1CB8);
    sub_241020840(0, &qword_268CF07E0);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_241027314(v8, (uint64_t)v11);
    sub_241027314(v11, (uint64_t)v10);
    uint64_t v4 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2410E5950(0, *(void *)(v4 + 16) + 1, 1);
      uint64_t v4 = v12;
    }
    unint64_t v6 = *(void *)(v4 + 16);
    unint64_t v5 = *(void *)(v4 + 24);
    if (v6 >= v5 >> 1)
    {
      sub_2410E5950(v5 > 1, v6 + 1, 1);
      uint64_t v4 = v12;
    }
    *(void *)(v4 + 16) = v6 + 1;
    sub_241027314(v10, v4 + 40 * v6 + 32);
    if (!--v2) {
      return v4;
    }
  }
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_release();
  sub_2410173B8((uint64_t)v8, (uint64_t (*)(void))sub_2410E6CA8);
  return 0;
}

uint64_t sub_2410E51B0(unint64_t a1)
{
  return sub_24101BC94(a1);
}

uint64_t sub_2410E51BC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v33 = a2;
  sub_241023ADC(0, &qword_268CF1C78, (uint64_t (*)(uint64_t))sub_24102B034, MEMORY[0x263EFDDF8]);
  uint64_t v6 = v5;
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v30 - v7;
  sub_241029BE8(0, &qword_268CF1C80, (uint64_t (*)(uint64_t))sub_24102B034, MEMORY[0x263EFDEA0]);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v34 = sub_24115F790();
  uint64_t v12 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  sub_24115F740();
  id v16 = v15;
  id v17 = v15;
  uint64_t v18 = sub_24115F780();
  os_log_type_t v19 = sub_241160D30();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v38 = v31;
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v32 = a3;
    uint64_t v39 = v33;
    swift_getMetatypeMetadata();
    uint64_t v21 = sub_241160760();
    uint64_t v33 = v6;
    uint64_t v39 = sub_24101F0A4(v21, v22, &v38);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    uint64_t v39 = (uint64_t)v15;
    id v23 = v15;
    sub_241020840(0, (unint64_t *)&qword_26B0073B0);
    uint64_t v24 = sub_2411607A0();
    uint64_t v39 = sub_24101F0A4(v24, v25, &v38);
    a3 = v32;
    sub_241161430();
    uint64_t v6 = v33;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v18, v19, "[%{public}s] Error making sharable models for medication: %{public}s", (uint8_t *)v20, 0x16u);
    uint64_t v26 = v31;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v26, -1, -1);
    MEMORY[0x2456180C0](v20, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v34);
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_24102B034(0);
  sub_24115FCC0();
  sub_241020840(0, (unint64_t *)&qword_26B0073B0);
  sub_24115FC90();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v6);
  sub_2410E6724();
  uint64_t v27 = v36;
  uint64_t v28 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v11, v27);
  *a3 = v28;
  return result;
}

void sub_2410E564C(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_startDate);
  sub_24115CAE0();
}

uint64_t sub_2410E56AC()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsShareableModelGenerator_domain;
  uint64_t v2 = sub_24115D130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_2410173B8(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsShareableModelGenerator_context, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);

  return swift_deallocClassInstance();
}

uint64_t HDCodableMedicationShareableModel.__userSpecifiedName.getter()
{
  return 0;
}

uint64_t HDCodableMedicationShareableModel.__preferredName.getter()
{
  return sub_2410E57D8((SEL *)&selRef_preferredName);
}

uint64_t HDCodableMedicationShareableModel.__brandName.getter()
{
  return sub_2410E57D8((SEL *)&selRef_brandName);
}

uint64_t HDCodableMedicationShareableModel.__genericName.getter()
{
  return sub_2410E57D8((SEL *)&selRef_genericName);
}

uint64_t HDCodableMedicationShareableModel.__manufacturedDoseForm.getter()
{
  return sub_2410E57D8((SEL *)&selRef_manufacturedDoseForm);
}

uint64_t HDCodableMedicationShareableModel.__basicDoseForm.getter()
{
  return sub_2410E57D8((SEL *)&selRef_basicDoseForm);
}

uint64_t HDCodableMedicationShareableModel.__baseUnitStrength.getter()
{
  return sub_2410E57D8((SEL *)&selRef_baseUnitStrength);
}

uint64_t HDCodableMedicationShareableModel.__freeTextMedicationName.getter()
{
  return sub_2410E57D8((SEL *)&selRef_freeTextMedicationName);
}

uint64_t sub_2410E57D8(SEL *a1)
{
  id v2 = [v1 *a1];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_241160730();

  return v4;
}

id HDCodableMedicationShareableModel.__freeTextMedicationForm.getter()
{
  if (objc_msgSend(v0, sel_hasFreeTextMedicationStrengthQuantity)) {
    return objc_msgSend(v0, sel_freeTextMedicationForm);
  }
  else {
    return 0;
  }
}

uint64_t sub_2410E588C(uint64_t a1, uint64_t a2)
{
  return sub_2410127DC(a1, a2, (SEL *)&selRef_preferredName);
}

uint64_t sub_2410E5898(uint64_t a1, uint64_t a2)
{
  return sub_2410127DC(a1, a2, (SEL *)&selRef_basicDoseForm);
}

uint64_t sub_2410E58A4()
{
  return type metadata accessor for MedicationsShareableModelGenerator();
}

uint64_t sub_2410E58BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2410E5C9C(a1, a2, a3, (void *)*v3, &qword_268CF08E8, MEMORY[0x263F07508], MEMORY[0x263F07508]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2410E590C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2410E5AE4(a1, a2, a3, (void *)*v3, (void (*)(void))sub_2410E6BC4, (unint64_t *)&qword_26B0069A8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2410E5950(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2410E5AE4(a1, a2, a3, (void *)*v3, (void (*)(void))sub_2410E6D10, &qword_268CF07E0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2410E5994(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2410E5C9C(a1, a2, a3, (void *)*v3, &qword_26B007088, MEMORY[0x263F06338], MEMORY[0x263F06338]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2410E59E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2410E5F00(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2410E5A04(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2410E5C9C(a1, a2, a3, (void *)*v3, &qword_26B005FA0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2410E5A54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2410E60B4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_2410E5A74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2410E5C9C(a1, a2, a3, (void *)*v3, &qword_26B005F80, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent, (uint64_t (*)(void))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2410E5AC4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2410E623C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_2410E5AE4(char a1, int64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    a5(0);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_241020840(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410E5C9C(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    id v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_241023ADC(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  id v17 = (void *)swift_allocObject();
  size_t v18 = j__malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  void v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v22 = (char *)v17 + v21;
  id v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  unint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410E5F00(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241023ADC(0, &qword_268CF1CA0, (uint64_t (*)(uint64_t))sub_24109BAB0, MEMORY[0x263F8E0F8]);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    long long v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_24109BAB0(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410E60B4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241023CC0(0, &qword_268CF1C98, (uint64_t)&type metadata for EditListCellModel, MEMORY[0x263F8E0F8]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410E623C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_2410E6C2C();
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    long long v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_241023CC0(0, &qword_268CF1CB0, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263F8D8F0]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_2410E63E4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2410E6420()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 33, 7);
}

uint64_t sub_2410E6458()
{
  uint64_t v1 = (int *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v4);
}

uint64_t sub_2410E65A4()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2410E6634()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2410E670C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2410E671C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2410E51BC(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_2410E6724()
{
  unint64_t result = qword_268CF1C88;
  if (!qword_268CF1C88)
  {
    sub_241029BE8(255, &qword_268CF1C80, (uint64_t (*)(uint64_t))sub_24102B034, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1C88);
  }
  return result;
}

unint64_t sub_2410E67AC()
{
  unint64_t result = qword_268CF1C90;
  if (!qword_268CF1C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1C90);
  }
  return result;
}

uint64_t sub_2410E6814()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 60 != 15) {
    sub_241023084(*(void *)(v0 + 16), v1);
  }

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2410E6864()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 152);
  if (v1 >> 60 != 15) {
    sub_241023084(*(void *)(v0 + 144), v1);
  }
  unint64_t v2 = *(void *)(v0 + 168);
  if (v2 >> 60 != 15) {
    sub_241023084(*(void *)(v0 + 160), v2);
  }
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 232, 7);
}

char *sub_2410E692C()
{
  return sel_startDate;
}

uint64_t sub_2410E693C()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 168);
  if (v1 >> 60 != 15) {
    sub_241023084(*(void *)(v0 + 160), v1);
  }
  unint64_t v2 = *(void *)(v0 + 184);
  if (v2 >> 60 != 15) {
    sub_241023084(*(void *)(v0 + 176), v2);
  }

  return MEMORY[0x270FA0238](v0, 209, 7);
}

uint64_t sub_2410E69EC(uint64_t result)
{
  *(unsigned char *)(result + 169) = 1;
  return result;
}

uint64_t sub_2410E69FC()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 160);
  if (v1 >> 60 != 15) {
    sub_241023084(*(void *)(v0 + 152), v1);
  }
  unint64_t v2 = *(void *)(v0 + 176);
  if (v2 >> 60 != 15) {
    sub_241023084(*(void *)(v0 + 168), v2);
  }

  return MEMORY[0x270FA0238](v0, 201, 7);
}

void sub_2410E6AAC()
{
  if (!qword_26B005DC0)
  {
    sub_241024708(255, &qword_26B005E60);
    unint64_t v0 = sub_241160A10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005DC0);
    }
  }
}

uint64_t sub_2410E6B14()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2410E6B4C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2410E6B84()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2410E6BC4()
{
  if (!qword_26B0070A0)
  {
    sub_241020840(255, (unint64_t *)&qword_26B0069A8);
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0070A0);
    }
  }
}

void sub_2410E6C2C()
{
  if (!qword_268CF1CA8)
  {
    sub_241023CC0(255, &qword_268CF1CB0, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1CA8);
    }
  }
}

void sub_2410E6CA8()
{
  if (!qword_268CF07D8)
  {
    sub_241020840(255, &qword_268CF07E0);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF07D8);
    }
  }
}

void sub_2410E6D10()
{
  if (!qword_268CF1CC0)
  {
    sub_241020840(255, &qword_268CF07E0);
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1CC0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for MedicationsShareableModelGenerator.SharableModelGenerationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2410E6E44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationsShareableModelGenerator.SharableModelGenerationError()
{
  return &type metadata for MedicationsShareableModelGenerator.SharableModelGenerationError;
}

unint64_t sub_2410E6E80()
{
  unint64_t result = qword_268CF1CC8;
  if (!qword_268CF1CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1CC8);
  }
  return result;
}

void sub_2410E70CC()
{
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    unint64_t v2 = v1;
    objc_msgSend(v1, sel_bounds);
    unsigned int v4 = &v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_itemHeight];
    if (v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_itemHeight + 8] == 1)
    {
      *(void *)unsigned int v4 = v3;
      v4[8] = 0;
    }
    uint64_t v5 = &v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_contentSize];
    if (v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_contentSize + 16] == 1)
    {
      id v6 = objc_msgSend(v2, sel_numberOfItemsInSection_, 0);
      if (__OFSUB__(v6, 1))
      {
        __break(1u);
        return;
      }
      uint64_t v7 = *(void *)v4;
      if (v4[8]) {
        uint64_t v7 = 0;
      }
      *(double *)uint64_t v5 = *(double *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config
                                   + 24]
                    + (*(double *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config
                                    + 24]
                     + *(double *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config])
                    * (double)((unint64_t)v6 - 1);
      *((void *)v5 + 1) = v7;
      v5[16] = 0;
    }
    id v8 = v2;
    objc_msgSend(v8, sel_bounds);
    CGRectGetWidth(v10);
    objc_msgSend(v8, sel_contentInset);
    objc_msgSend(v8, sel_setContentInset_);
  }
}

void (*sub_2410E72AC(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5))(char *, void)
{
  uint64_t v11 = sub_24115CE00();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = ((uint64_t (*)(uint64_t))MEMORY[0x270FA5388])(v11);
  uint64_t v39 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = ((uint64_t (*)(uint64_t))MEMORY[0x270FA5388])(v13);
  id v17 = (char *)v36 - v16;
  MEMORY[0x270FA5388](v15);
  os_log_type_t v19 = (char *)v36 - v18;
  v42.origin.x = a2;
  v42.origin.y = a3;
  v42.size.width = a4;
  v42.size.height = a5;
  double MinX = CGRectGetMinX(v42);
  v43.origin.x = a2;
  v43.origin.y = a3;
  v43.size.width = a4;
  v43.size.height = a5;
  CGRectGetMinY(v43);
  id v37 = a1;
  sub_2410E7F98(a1, MinX);
  unint64_t v21 = (double *)(v5 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config);
  uint64_t v38 = v5 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_itemHeight;
  int64_t v40 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  unint64_t v22 = (void (**)(char *, uint64_t))(v12 + 8);
  v36[1] = v12 + 32;
  unint64_t v23 = MEMORY[0x263F8EE78];
  while (1)
  {
    v40(v17, v19, v11);
    double v24 = *v21;
    double v25 = v21[3];
    double v26 = (v24 + v25) * (double)sub_24115CDE0();
    CGFloat v27 = v21[3];
    if (*(unsigned char *)(v38 + 8)) {
      double v28 = 0.0;
    }
    else {
      double v28 = *(double *)v38;
    }
    uint64_t v29 = *v22;
    (*v22)(v17, v11);
    v44.origin.y = 0.0;
    v44.origin.x = v26;
    v44.size.width = v27;
    v44.size.height = v28;
    double v30 = CGRectGetMinX(v44);
    v45.origin.x = a2;
    v45.origin.y = a3;
    v45.size.width = a4;
    v45.size.height = a5;
    if (v30 > CGRectGetMaxX(v45)
      || (uint64_t v31 = sub_24115CDE0(), v31 >= (uint64_t)objc_msgSend(v37, sel_numberOfItemsInSection_, 0)))
    {
      v29(v19, v11);
      return (void (*)(char *, void))v23;
    }
    v40(v39, v19, v11);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v23 = sub_241052E20(0, *(void *)(v23 + 16) + 1, 1, v23);
    }
    unint64_t v33 = *(void *)(v23 + 16);
    unint64_t v32 = *(void *)(v23 + 24);
    if (v33 >= v32 >> 1) {
      unint64_t v23 = sub_241052E20(v32 > 1, v33 + 1, 1, v23);
    }
    *(void *)(v23 + 16) = v33 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v23+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v33, v39, v11);
    unint64_t result = (void (*)(char *, void))sub_24115CDD0();
    if (__OFADD__(*v35, 1)) {
      break;
    }
    ++*v35;
    result(v41, 0);
  }
  __break(1u);
  return result;
}

char *sub_2410E772C(uint64_t a1)
{
  uint64_t v3 = sub_24115CE00();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = MEMORY[0x270FA5388](v3).n128_u64[0];
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(v1, sel_collectionView, v5);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = v8;
  CGRect v10 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_computedAttributes];
  swift_beginAccess();
  uint64_t v11 = *(void *)v10;
  if (*(void *)(*(void *)v10 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_241062718(a1);
    if (v13)
    {
      uint64_t v14 = *(char **)(*(void *)(v11 + 56) + 8 * v12);
      uint64_t v15 = v14;

      swift_bridgeObjectRelease();
      return v14;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = sub_2410E795C(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
  swift_beginAccess();
  if (v14)
  {
    uint64_t v16 = v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *(void *)v10;
    *(void *)CGRect v10 = 0x8000000000000000;
    sub_2410650A4((uint64_t)v16, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
    *(void *)CGRect v10 = v21;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    uint64_t v18 = (void *)sub_2410E81B4((uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  swift_endAccess();

  return v14;
}

char *sub_2410E795C(void *a1)
{
  uint64_t v3 = sub_24115CDE0();
  id v4 = objc_msgSend(a1, sel_numberOfItemsInSection_, 0);
  double v5 = 0;
  if (v3 < (uint64_t)v4)
  {
    type metadata accessor for InteractiveTimelineCollectionViewLayoutAttributes();
    uint64_t v6 = (void *)sub_24115CD90();
    double v5 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_layoutAttributesForCellWithIndexPath_, v6);

    uint64_t v7 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config;
    double v8 = *(double *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config);
    double v9 = *(double *)(v1
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config
                   + 24);
    double v10 = (v8 + v9) * (double)sub_24115CDE0();
    double v11 = 0.0;
    if (!*(unsigned char *)(v1
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_itemHeight
                   + 8))
      double v11 = *(double *)(v1
                      + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_itemHeight);
    objc_msgSend(v5, sel_setFrame_, v10, 0.0, *(double *)(v7 + 24), v11);
    uint64_t v12 = *(void *)(v7 + 48);
    char v13 = *(void **)(v7 + 56);
    uint64_t v14 = *(void *)(v7 + 80);
    uint64_t v15 = *(void *)(v7 + 88);
    uint64_t v16 = &v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration];
    id v17 = *(void **)&v5[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                      + 56];
    long long v18 = *(_OWORD *)(v7 + 16);
    long long v19 = *(_OWORD *)(v7 + 32);
    long long v20 = *(_OWORD *)(v7 + 64);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v7;
    *((_OWORD *)v16 + 1) = v18;
    *((_OWORD *)v16 + 2) = v19;
    *((void *)v16 + 6) = v12;
    *((void *)v16 + 7) = v13;
    *((_OWORD *)v16 + 4) = v20;
    *((void *)v16 + 10) = v14;
    *((void *)v16 + 11) = v15;
    id v21 = v13;
  }
  return v5;
}

void sub_2410E7BB4(void *a1)
{
  type metadata accessor for InteractiveTimelineCollectionViewLayoutInvalidationContext();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    id v4 = (char *)v3;
    id v5 = a1;
    if (objc_msgSend(v4, sel_invalidateEverything))
    {
      unint64_t v6 = sub_241061B08(MEMORY[0x263F8EE78]);
      uint64_t v7 = (unint64_t *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_computedAttributes];
      swift_beginAccess();
      *uint64_t v7 = v6;
      swift_bridgeObjectRelease();
    }
    if ((objc_msgSend(v4, sel_invalidateEverything) & 1) != 0
      || objc_msgSend(v4, sel_invalidateDataSourceCounts))
    {
      double v8 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_contentSize];
      *(void *)double v8 = 0;
      *((void *)v8 + 1) = 0;
      v8[16] = 1;
    }
    if ((objc_msgSend(v4, sel_invalidateEverything) & 1) != 0
      || v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_invalidateItemHeight] == 1)
    {
      double v9 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_itemHeight];
      *(void *)double v9 = 0;
      v9[8] = 1;
    }
    if (v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_invalidateSizeClass] == 1)
    {
      double v10 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_contentSize];
      *(void *)double v10 = 0;
      *((void *)v10 + 1) = 0;
      v10[16] = 1;
      double v11 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_itemHeight];
      *(void *)double v11 = 0;
      v11[8] = 1;
      uint64_t v12 = *(void *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_nextConfig
                         + 48];
      char v13 = *(void **)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_nextConfig
                        + 56];
      uint64_t v14 = *(void *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_nextConfig
                         + 80];
      uint64_t v15 = *(void *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_nextConfig
                         + 88];
      uint64_t v16 = &v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config];
      id v17 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config
                        + 56];
      long long v18 = *(_OWORD *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_nextConfig
                         + 16];
      long long v19 = *(_OWORD *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_nextConfig
                         + 32];
      long long v20 = *(_OWORD *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_nextConfig
                         + 64];
      *(_OWORD *)uint64_t v16 = *(_OWORD *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_nextConfig];
      *((_OWORD *)v16 + 1) = v18;
      *((_OWORD *)v16 + 2) = v19;
      *((void *)v16 + 6) = v12;
      *((void *)v16 + 7) = v13;
      *((_OWORD *)v16 + 4) = v20;
      *((void *)v16 + 10) = v14;
      *((void *)v16 + 11) = v15;
      id v21 = v13;
    }
    unint64_t v22 = sub_241061B08(MEMORY[0x263F8EE78]);
    unint64_t v23 = (unint64_t *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_computedAttributes];
    swift_beginAccess();
    unint64_t *v23 = v22;
    swift_bridgeObjectRelease();
    v24.receiver = v1;
    v24.super_class = (Class)type metadata accessor for InteractiveTimelineCollectionViewLayout();
    objc_msgSendSuper2(&v24, sel_invalidateLayoutWithContext_, v4);
  }
}

unsigned char *sub_2410E7E40(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v9 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InteractiveTimelineCollectionViewLayoutInvalidationContext()), sel_init);
  id v10 = objc_msgSend(v4, sel_collectionView);
  if (v10)
  {
    double v11 = v10;
    objc_msgSend(v10, sel_bounds);
    if (v14 == a3 && v15 == a4)
    {
    }
    else
    {
      double Height = CGRectGetHeight(*(CGRect *)&v12);
      v20.origin.x = a1;
      v20.origin.y = a2;
      v20.size.width = a3;
      v20.size.height = a4;
      double v18 = CGRectGetHeight(v20);

      if (Height != v18) {
        v9[OBJC_IVAR____TtC26MedicationsHealthAppPlugin58InteractiveTimelineCollectionViewLayoutInvalidationContext_invalidateItemHeight] = 1;
      }
    }
  }
  return v9;
}

void sub_2410E7F98(void *a1, double a2)
{
  double v3 = *(double *)(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config)
     + *(double *)(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config + 24);
  if (v3 == 0.0) {
    goto LABEL_6;
  }
  double v4 = floor(a2 / v3);
  if ((~*(void *)&v4 & 0x7FF0000000000000) != 0)
  {
    if (v4 > -9.22337204e18)
    {
      if (v4 < 9.22337204e18)
      {
        if (!__OFSUB__(objc_msgSend(a1, sel_numberOfItemsInSection_, 0), 1))
        {
LABEL_6:
LABEL_13:
          JUMPOUT(0x245612C00);
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_11;
}

id sub_2410E810C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractiveTimelineCollectionViewLayout();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InteractiveTimelineCollectionViewLayout()
{
  return self;
}

uint64_t sub_2410E81B4(uint64_t a1)
{
  objc_super v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_241062718(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *objc_super v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24106633C();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_24115CE00();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_2410E88A0(v4, v7);
  *objc_super v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_2410E82AC(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2411605E0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v35 = a2 + 64;
    unint64_t result = sub_241161500();
    uint64_t v12 = v35;
    if ((*(void *)(v35 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v32 = (result + 1) & v11;
      unint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v34 = v5 + 16;
      char v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v33(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_2410E90C4(&qword_268CF0A30, MEMORY[0x263F090E8]);
        uint64_t v17 = sub_241160650();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v32)
        {
          if (v18 >= v32 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            unint64_t v23 = (_OWORD *)(v22 + 32 * a1);
            objc_super v24 = (_OWORD *)(v22 + 32 * v10);
            uint64_t v12 = v35;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 2))
            {
              long long v25 = v24[1];
              _OWORD *v23 = *v24;
              v23[1] = v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v32 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v35;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    double v26 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << a1) - 1;
  }
  else
  {
    double v26 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  *double v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_2410E85A8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2411605E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = sub_241161500();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      uint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      char v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_2410E90C4(&qword_268CF0A30, MEMORY[0x263F090E8]);
        uint64_t v17 = sub_241160650();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            uint64_t v22 = (void *)(v21 + 8 * a1);
            unint64_t v23 = (void *)(v21 + 8 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              void *v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    objc_super v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    objc_super v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  uint64_t *v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_2410E88A0(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24115CE00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = sub_241161500();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      uint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      char v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_2410E90C4(&qword_26B006950, MEMORY[0x263F07A30]);
        uint64_t v17 = sub_241160650();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            uint64_t v22 = (void *)(v21 + 8 * a1);
            unint64_t v23 = (void *)(v21 + 8 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              void *v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    objc_super v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    objc_super v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  uint64_t *v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_2410E8B98(uint64_t a1, void *a2)
{
  id v28 = a2;
  uint64_t v3 = sub_24115CE00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v27 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410E906C();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x263F8EE78];
  uint64_t v9 = *(void *)(a1 + 16);
  v20[2] = a1;
  if (v9)
  {
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v10 = v4 + 16;
    uint64_t v26 = v11;
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v23 = *(void *)(v10 + 56);
    objc_super v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 32);
    uint64_t v21 = (uint64_t (**)(char *, uint64_t))(v10 - 8);
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    uint64_t v25 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 40);
    v20[1] = (v10 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v26(v8, v12, v3);
      char v13 = *v25;
      (*v25)(v8, 0, 1, v3);
      if ((*v24)(v8, 1, v3) == 1) {
        break;
      }
      uint64_t v14 = v27;
      (*v22)(v27, v8, v3);
      uint64_t v15 = (void *)sub_24115CD90();
      id v16 = objc_msgSend(v28, sel_layoutAttributesForItemAtIndexPath_, v15);

      uint64_t v17 = (*v21)(v14, v3);
      if (v16)
      {
        MEMORY[0x2456167B0](v17);
        if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2411609D0();
        }
        sub_241160A00();
        sub_2411609C0();
      }
      v12 += v23;
      if (!--v9)
      {
        v13(v8, 1, 1, v3);
        break;
      }
    }
  }
  else
  {
    unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
    v18(v8, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  return v29;
}

double sub_2410E8E74(double a1)
{
  uint64_t v3 = sub_24115CE00();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = MEMORY[0x270FA5388](v3).n128_u64[0];
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(v1, sel_collectionView, v5);
  if (v8)
  {
    uint64_t v9 = v8;
    objc_msgSend(v8, sel_bounds);
    double v10 = CGRectGetWidth(v20) * 0.5 + a1;
    a1 = 0.0;
    sub_2410E7F98(v9, v10);
    id v11 = objc_msgSend(v1, sel_collectionView);
    if (v11)
    {
      uint64_t v12 = v11;
      char v13 = (double *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config];
      double v14 = *(double *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config];
      double v15 = *(double *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config
                         + 24];
      double v16 = (v14 + v15) * (double)sub_24115CDE0() + v13[3] * 0.5;
      objc_msgSend(v12, sel_bounds);
      double Width = CGRectGetWidth(v21);

      a1 = v16 - Width * 0.5;
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return a1;
}

unint64_t sub_2410E902C()
{
  unint64_t result = qword_26B006FF0;
  if (!qword_26B006FF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B006FF0);
  }
  return result;
}

void sub_2410E906C()
{
  if (!qword_268CF0978)
  {
    sub_24115CE00();
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0978);
    }
  }
}

uint64_t sub_2410E90C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2410E910C()
{
  if (!qword_26B005990)
  {
    sub_2410112EC(255, &qword_26B005D58, MEMORY[0x263F8D488]);
    sub_2410E91A8();
    unint64_t v0 = sub_24115FBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005990);
    }
  }
}

unint64_t sub_2410E91A8()
{
  unint64_t result = qword_26B005D60;
  if (!qword_26B005D60)
  {
    sub_2410112EC(255, &qword_26B005D58, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005D60);
  }
  return result;
}

uint64_t sub_2410E921C(uint64_t a1)
{
  uint64_t v2 = sub_24115F6C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  double v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x263F45D70])
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
    uint64_t v7 = *v5;
    if ((unint64_t)*v5 >> 62) {
      goto LABEL_29;
    }
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v8; uint64_t v8 = sub_2411616E0())
    {
      uint64_t v9 = 4;
      while (1)
      {
        id v10 = (v7 & 0xC000000000000001) != 0 ? (id)MEMORY[0x245617450](v9 - 4, v7) : *(id *)(v7 + 8 * v9);
        id v11 = v10;
        uint64_t v12 = v9 - 3;
        if (__OFADD__(v9 - 4, 1)) {
          break;
        }
        id v13 = objc_msgSend(v10, sel_semanticIdentifier);
        id v14 = objc_msgSend(v13, sel_typeIdentifier);

        LODWORD(v13) = objc_msgSend(v14, sel_isMedicationTypeIdentifier);
        if (v13) {
          goto LABEL_26;
        }
        ++v9;
        if (v12 == v8) {
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain();
    }
    goto LABEL_22;
  }
  if (v6 != *MEMORY[0x263F45D78])
  {
    if (v6 != *MEMORY[0x263F45D88]) {
      (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
    }
    return 0;
  }
  (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
  uint64_t v7 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v15 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_15;
    }
LABEL_22:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_2411616E0();
  if (!v15) {
    goto LABEL_22;
  }
LABEL_15:
  uint64_t v16 = 4;
  while (1)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v17 = (id)MEMORY[0x245617450](v16 - 4, v7);
    }
    else {
      id v17 = *(id *)(v7 + 8 * v16);
    }
    unint64_t v18 = v17;
    uint64_t v19 = v16 - 3;
    if (__OFADD__(v16 - 4, 1)) {
      goto LABEL_28;
    }
    id v20 = objc_msgSend(v17, sel_semanticIdentifier);
    id v21 = objc_msgSend(v20, sel_typeIdentifier);

    LODWORD(v20) = objc_msgSend(v21, sel_isMedicationTypeIdentifier);
    if (v20) {
      break;
    }
    ++v16;
    if (v19 == v15) {
      goto LABEL_22;
    }
  }
LABEL_26:
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t sub_2410E9590@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  sub_2410E9860();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102732C(a1, (uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  sub_24101177C((uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  id v14 = (uint64_t (*)(void, void, void, void))MEMORY[0x263EFDE20];
  sub_2410113F8(0, &qword_26B005C20, MEMORY[0x263EFDE20]);
  sub_24101134C(&qword_26B005C18, &qword_26B005C20, v14);
  sub_24115FD00();
  swift_release();
  sub_2410112A4(&qword_26B005C58, (void (*)(uint64_t))sub_2410E9860);
  uint64_t v15 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *a2 = v15;
  return result;
}

uint64_t sub_2410E97E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_2410E9590(v4, a1);
}

void sub_2410E9860()
{
  if (!qword_26B005C60)
  {
    unint64_t v0 = (uint64_t (*)(void, void, void, void))MEMORY[0x263EFDE20];
    sub_2410113F8(255, &qword_26B005C20, MEMORY[0x263EFDE20]);
    sub_24101134C(&qword_26B005C18, &qword_26B005C20, v0);
    unint64_t v1 = sub_24115FD20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B005C60);
    }
  }
}

uint64_t sub_2410E9914@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  sub_24102732C(a1, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_24101177C((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  sub_2410113F8(0, &qword_26B005C20, MEMORY[0x263EFDE20]);
  swift_allocObject();
  uint64_t result = sub_24115FCF0();
  *a2 = result;
  return result;
}

uint64_t sub_2410E9A54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_2410E9914(v4, a1);
}

void sub_2410E9AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  unint64_t v7 = self;
  uint64_t v8 = self;
  swift_retain();
  id v9 = objc_msgSend(v8, sel_medicationUserDomainConceptTypeIdentifier);
  id v10 = objc_msgSend(v7, sel_predicateForUserDomainConceptsWithTypeIdentifier_, v9);

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  unint64_t v12 = (void *)swift_allocObject();
  v12[2] = sub_2410E9ED8;
  v12[3] = v6;
  v12[4] = v11;
  id v13 = objc_allocWithZone(MEMORY[0x263F0A858]);
  v18[4] = sub_2410EA300;
  v18[5] = v12;
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 1107296256;
  v18[2] = sub_241013250;
  v18[3] = &unk_26F556F08;
  id v14 = _Block_copy(v18);
  swift_retain();
  id v15 = objc_msgSend(v13, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, v10, 0, 1, 0, v14);
  _Block_release(v14);
  swift_release();
  id v16 = v15;
  uint64_t v17 = (void *)sub_2411606F0();
  objc_msgSend(v16, sel_setDebugIdentifier_, v17);

  objc_msgSend(*(id *)(a3 + *(int *)(type metadata accessor for MedicationsGeneratorContext() + 20)), sel_executeQuery_, v16);
  swift_release();
}

uint64_t sub_2410E9D00()
{
  uint64_t v1 = (int *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

void sub_2410E9E20(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_2410E9AC4(a1, a2, v6);
}

uint64_t sub_2410E9EA0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2410E9ED8(__int16 a1)
{
  uint64_t v2 = *(uint64_t (**)(__int16 *))(v1 + 16);
  __int16 v4 = a1 & 0x1FF;
  return v2(&v4);
}

uint64_t sub_2410E9F18()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2410E9F50(uint64_t a1, void *a2, uint64_t a3, char a4, void *a5, void (*a6)(void), uint64_t a7, uint64_t a8)
{
  uint64_t v14 = sub_24115F790();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    id v18 = a5;
    sub_24115F740();
    id v19 = a5;
    id v20 = a5;
    id v21 = sub_24115F780();
    os_log_type_t v22 = sub_241160D30();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v37[0] = v33;
      *(_DWORD *)uint64_t v23 = 136315650;
      uint64_t v36 = sub_24101F0A4(0xD00000000000001BLL, 0x8000000241167760, v37);
      uint64_t v35 = a6;
      sub_241161430();
      uint64_t v34 = a7;
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v36 = sub_24101F0A4(0xD00000000000001DLL, 0x8000000241167780, v37);
      sub_241161430();
      *(_WORD *)(v23 + 22) = 2080;
      uint64_t v36 = (uint64_t)a5;
      id v24 = a5;
      sub_24102A354();
      uint64_t v25 = sub_241160770();
      uint64_t v36 = sub_24101F0A4(v25, v26, v37);
      a6 = v35;
      sub_241161430();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241007000, v21, v22, "%s.%s Error: %s", (uint8_t *)v23, 0x20u);
      uint64_t v27 = v33;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v27, -1, -1);
      MEMORY[0x2456180C0](v23, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    a6(0);
  }
  else
  {
    id v28 = (void **)(a8 + 16);
    if (a2)
    {
      self;
      uint64_t v29 = swift_dynamicCastObjCClass();
      if (v29) {
        id v30 = a2;
      }
      swift_beginAccess();
      uint64_t v31 = *v28;
      *id v28 = (void *)v29;
    }
    if (a4)
    {
      swift_beginAccess();
      a6(*v28 != 0);
    }
  }
}

uint64_t sub_2410EA2C0()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2410EA300(uint64_t a1, void *a2, uint64_t a3, char a4, void *a5)
{
  sub_2410E9F50(a1, a2, a3, a4, a5, *(void (**)(void))(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
}

void *FollowUpNotificationTipDataSource.__allocating_init(healthStore:listManager:viewController:)(void *a1, uint64_t a2, void *a3)
{
  return FollowUpNotificationTipDataSource.init(healthStore:listManager:viewController:)(a1, a2, a3);
}

void *FollowUpNotificationTipDataSource.init(healthStore:listManager:viewController:)(void *a1, uint64_t a2, void *a3)
{
  sub_24102ABF8();
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410931A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v21 = v10;
  uint64_t v22 = v11;
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v3 + qword_268CF1CF0) = 0;
  *(void *)(v3 + qword_268CF1CF8) = a2;
  sub_24115F0C0();
  swift_retain();
  swift_retain();
  sub_24115F0B0();
  sub_24115F050();
  swift_release();
  sub_241024708(0, (unint64_t *)&qword_26B007320);
  sub_241160D60();
  sub_24115F040();
  swift_allocObject();
  *(void *)(v3 + qword_268CF1D00) = sub_24115EF90();
  swift_release();
  id v14 = a1;
  id v15 = a3;
  uint64_t v16 = TipDataSource.init(healthStore:viewController:)(v14, v15);
  swift_retain();
  uint64_t v24 = sub_24115F630();
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v23 = (id)sub_241160EF0();
  uint64_t v17 = sub_241160EB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
  sub_24102BDBC();
  sub_241015F10(&qword_26B0072C0, (void (*)(uint64_t))sub_24102BDBC);
  sub_24102A8F8();
  sub_24115FF10();
  sub_24102AB6C((uint64_t)v9);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_241015F10(&qword_26B006E18, (void (*)(uint64_t))sub_2410931A0);
  uint64_t v18 = v21;
  uint64_t v19 = sub_24115FF60();

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v18);
  *(void *)((char *)v16 + qword_268CF1CF0) = v19;
  swift_release();
  return v16;
}

uint64_t sub_2410EA718()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2410EA750()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    if (FollowUpNotificationTipDataSource.shouldShowTip()()) {
      (*(void (**)(void))(class metadata base offset for TipDataSource + *v1 + 56))();
    }
    else {
      TipDataSource.hideItem()();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2410EA7F8()
{
  return sub_2410EA750();
}

Swift::Bool __swiftcall FollowUpNotificationTipDataSource.shouldShowTip()()
{
  uint64_t v0 = sub_24115F790();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  __int16 v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)&v31 - v6;
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v31 - v8;
  unint64_t v10 = sub_24115F600();
  if (v10 >> 62) {
    uint64_t v11 = sub_2411616E0();
  }
  else {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v11)
  {
    if (sub_24115EFB0())
    {
      sub_24115F740();
      uint64_t v12 = sub_24115F780();
      os_log_type_t v13 = sub_241160D50();
      if (os_log_type_enabled(v12, v13))
      {
        id v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v32 = v15;
        *(_DWORD *)id v14 = 136315138;
        uint64_t v16 = sub_241161A00();
        uint64_t v31 = sub_24101F0A4(v16, v17, &v32);
        sub_241161430();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241007000, v12, v13, "[%s] Tip has already been shown to the user. Not showing again", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v15, -1, -1);
        MEMORY[0x2456180C0](v14, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
    }
    else
    {
      if ((sub_24115F000() & 1) == 0) {
        return 1;
      }
      sub_24115F740();
      uint64_t v24 = sub_24115F780();
      os_log_type_t v25 = sub_241160D50();
      if (os_log_type_enabled(v24, v25))
      {
        unint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        uint64_t v32 = v27;
        *(_DWORD *)unint64_t v26 = 136315138;
        uint64_t v28 = sub_241161A00();
        uint64_t v31 = sub_24101F0A4(v28, v29, &v32);
        sub_241161430();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241007000, v24, v25, "[%s] User has follow up notifications already enabled. Should not alert them about a feature they already use", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v27, -1, -1);
        MEMORY[0x2456180C0](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
    }
  }
  else
  {
    sub_24115F740();
    uint64_t v18 = sub_24115F780();
    os_log_type_t v19 = sub_241160D50();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v32 = v21;
      *(_DWORD *)id v20 = 136315138;
      uint64_t v22 = sub_241161A00();
      uint64_t v31 = sub_24101F0A4(v22, v23, &v32);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v18, v19, "[%s] no meds are available. Won't show the follow up tip", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v21, -1, -1);
      MEMORY[0x2456180C0](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  }
  return 0;
}

uint64_t FollowUpNotificationTipDataSource.makeTipItem()@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  sub_24115C960();
  sub_24115C960();
  objc_msgSend(self, sel_systemCyanColor, 0xE000000000000000);
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  a1[3] = sub_24115E8C0();
  a1[4] = sub_241015F10(&qword_268CF1D08, MEMORY[0x263F44D38]);
  sub_2410277C0(a1);
  return sub_24115E8A0();
}

uint64_t sub_2410EAF84()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result + direct field offset for TipDataSource.viewController;
    swift_beginAccess();
    uint64_t v2 = MEMORY[0x2456181C0](v1);
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      id v4 = objc_allocWithZone((Class)type metadata accessor for MedicationsNotificationSettingsViewController(0));
      id v5 = sub_24108A5C4();
      sub_241160E50();
    }
    sub_2410EB0D4();
    return swift_release();
  }
  return result;
}

id sub_2410EB068(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_2410EB07C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_2410EB0D4();
    return swift_release();
  }
  return result;
}

void sub_2410EB0D4()
{
  uint64_t v0 = sub_24115F790();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  id v4 = sub_24115F780();
  os_log_type_t v5 = sub_241160D50();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v0;
    uint64_t v7 = (uint8_t *)v6;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = sub_241161A00();
    uint64_t v13 = sub_24101F0A4(v9, v10, &v14);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v4, v5, "[%s] Dismissing tip", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v8, -1, -1);
    MEMORY[0x2456180C0](v7, -1, -1);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v12);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  sub_24115EFC0();
  TipDataSource.hideItem()();
}

void FollowUpNotificationTipDataSource.__allocating_init(healthStore:viewController:)()
{
}

void FollowUpNotificationTipDataSource.init(healthStore:viewController:)()
{
}

uint64_t sub_2410EB368()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t FollowUpNotificationTipDataSource.deinit()
{
  uint64_t v0 = sub_24115DE70();

  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FollowUpNotificationTipDataSource.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2410EB4D0()
{
  return sub_2410EAF84();
}

uint64_t sub_2410EB4D8()
{
  return sub_2410EB07C();
}

uint64_t type metadata accessor for FollowUpNotificationTipDataSource()
{
  uint64_t result = qword_268CF1D10;
  if (!qword_268CF1D10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410EB52C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2410EB588()
{
  return type metadata accessor for FollowUpNotificationTipDataSource();
}

uint64_t sub_2410EB590(double a1)
{
  if (a1 != 1.0)
  {
    if (v1[22])
    {
      uint64_t v2 = v1 + 21;
      goto LABEL_6;
    }
    return 0;
  }
  if (!v1[20]) {
    return 0;
  }
  uint64_t v2 = v1 + 19;
LABEL_6:
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

id sub_2410EB5F4(uint64_t a1, uint64_t a2)
{
  id v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31SharedMedicationsChartDataSouce_dataBlockMap);
  swift_beginAccess();
  uint64_t v5 = *v4;
  if (*(void *)(v5 + 16) && (uint64_t v6 = sub_241062830(a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void **)(*(void *)(v5 + 56) + 8 * v6);
    return v8;
  }
  else
  {
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46778]), sel_init);
    sub_2410EBF84();
    uint64_t v11 = (void *)sub_241160980();
    objc_msgSend(v10, sel_setChartPoints_, v11);

    return v10;
  }
}

id sub_2410EB7A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedMedicationsChartDataSouce();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2410EB850()
{
  return type metadata accessor for SharedMedicationsChartDataSouce();
}

uint64_t type metadata accessor for SharedMedicationsChartDataSouce()
{
  uint64_t result = qword_268CF1D30;
  if (!qword_268CF1D30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410EB8A4()
{
  uint64_t result = type metadata accessor for SharedMedicationsFeedItemData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2410EB950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24115C920();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_24115CB10();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = *(void *)(sub_24115EC30() - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = a2 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31SharedMedicationsChartDataSouce_medication;
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_24115EC20();
      sub_24115EC10();
      sub_24115EBC0();
      sub_24115EBD0();
      sub_24115EBF0();
      v16[3] = type metadata accessor for SharedMedicationsFeedItemData(0);
      v16[4] = sub_2410EBFDC((unint64_t *)&unk_268CF1DC0, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
      uint64_t v12 = sub_2410277C0(v16);
      sub_24104F384(v15, (uint64_t)v12);
      sub_24115EBE0();
      sub_24115EC00();
      id v13 = objc_allocWithZone((Class)sub_24115EAD0());
      uint64_t v14 = sub_24115EAC0();
      MEMORY[0x2456167B0](v14);
      if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2411609D0();
      }
      sub_241160A00();
      sub_2411609C0();
      v10 += v11;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    return v17;
  }
  return result;
}

uint64_t sub_2410EBC10(void *a1)
{
  id v6 = objc_msgSend(a1, sel_queryDataObject);
  if (v6)
  {
    char v7 = v6;
    sub_2410EBE8C();
    uint64_t v8 = sub_24115CA00();
    unint64_t v10 = v9;

    sub_2410EBEE4();
    sub_24115C730();
    sub_241023084(v8, v10);
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46778]), sel_init);
    id v12 = v1;
    unint64_t v13 = sub_2410EB950(v17, (uint64_t)v12);
    swift_bridgeObjectRelease();

    if (v13 >> 62)
    {
      sub_2410EBF84();
      swift_bridgeObjectRetain();
      sub_2411616D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_2411618A0();
      sub_2410EBF84();
    }
    swift_bridgeObjectRelease();
    sub_2410EBF84();
    uint64_t v14 = (void *)sub_241160980();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setChartPoints_, v14);

    return (uint64_t)v11;
  }
  else
  {
    __break(1u);

    sub_241023084(v4, v3);
    sub_2411615F0();
    sub_241160860();
    id v16 = objc_msgSend(a1, sel_description);
    sub_241160730();

    sub_241160860();
    swift_bridgeObjectRelease();
    uint64_t result = sub_2411616B0();
    __break(1u);
  }
  return result;
}

void sub_2410EBE8C()
{
  if (!qword_268CF1D40)
  {
    sub_24115EC30();
    unint64_t v0 = sub_241160A10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1D40);
    }
  }
}

unint64_t sub_2410EBEE4()
{
  unint64_t result = qword_268CF1D48;
  if (!qword_268CF1D48)
  {
    sub_2410EBE8C();
    sub_2410EBFDC(&qword_268CF1D50, MEMORY[0x263F44E00]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1D48);
  }
  return result;
}

unint64_t sub_2410EBF84()
{
  unint64_t result = qword_268CF1D58;
  if (!qword_268CF1D58)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF1D58);
  }
  return result;
}

uint64_t sub_2410EBFDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2410EC024(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_2410EC084()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsHealthAppPluginDelegate_medicationDoseEventLogger;
  sub_24115F270();
  swift_allocObject();
  uint64_t v3 = v0;
  *(void *)&v0[v2] = sub_24115F260();
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  *(void *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsHealthAppPluginDelegate_healthStore] = v4;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F44BF0]), sel_initWithHealthStore_, v4);
  *(void *)&v3[OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsHealthAppPluginDelegate_scheduleControl] = v5;

  v7.receiver = v3;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for MedicationsHealthAppPluginDelegate()
{
  return self;
}

id sub_2410EC204()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

uint64_t sub_2410EC238(uint64_t a1)
{
  if (a1 != 12) {
    return 0;
  }
  swift_unknownObjectRetain();
  return v1;
}

BOOL sub_2410EC270()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  id v1 = objc_msgSend(v0, sel_identifiersCount);

  return v1 != 0;
}

uint64_t sub_2410EC2CC(char *a1, void *a2)
{
  id v49 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_24115F790();
  uint64_t v52 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v48 - v7;
  sub_2410F2858(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v48 - v10;
  uint64_t v12 = sub_24115C9E0();
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)&double v14 = MEMORY[0x270FA5388](v12).n128_u64[0];
  id v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(a2, sel_notification, v14);
  id v18 = objc_msgSend(v17, sel_request);

  id v19 = objc_msgSend(v18, sel_content);
  id v20 = objc_msgSend(v19, sel_userInfo);

  uint64_t v21 = sub_241160630();
  uint64_t v53 = sub_241160730();
  uint64_t v54 = v22;
  sub_241161590();
  if (*(void *)(v21 + 16) && (unint64_t v23 = sub_24106289C((uint64_t)v55), (v24 & 1) != 0))
  {
    sub_24101F1C8(*(void *)(v21 + 56) + 32 * v23, (uint64_t)&v56);
  }
  else
  {
    long long v56 = 0u;
    long long v57 = 0u;
  }
  sub_241067C70((uint64_t)v55);
  if (!*((void *)&v57 + 1))
  {
    sub_2410EC024((uint64_t)&v56, (uint64_t (*)(void))sub_24104D3F8);
LABEL_11:
    sub_24115F740();
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_24115F780();
    os_log_type_t v40 = sub_241160D30();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v55[0] = v42;
      *(_DWORD *)uint64_t v41 = 136446466;
      id v49 = v5;
      uint64_t v43 = sub_241161A00();
      *(void *)&long long v56 = sub_24101F0A4(v43, v44, v55);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_241160640();
      uint64_t v50 = v3;
      unint64_t v47 = v46;
      swift_bridgeObjectRelease();
      *(void *)&long long v56 = sub_24101F0A4(v45, v47, v55);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v39, v40, "[%{public}s] Received notification userInfo without ScheduleItemIdentifier: %{public}s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v42, -1, -1);
      MEMORY[0x2456180C0](v41, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v49, v50);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v5, v3);
    }
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v50 = v3;
  swift_bridgeObjectRelease();
  uint64_t v25 = v53;
  uint64_t v26 = v54;
  uint64_t v27 = sub_24115CB10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v11, 1, 1, v27);
  sub_241082DA8(1, 0, v25, v26, 0, 0, (uint64_t)v11, 0, (uint64_t)v16, 1);
  swift_bridgeObjectRelease();
  sub_2410252F4((uint64_t)v11, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  sub_2410F0104();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  sub_24115F740();
  uint64_t v28 = sub_24115F780();
  os_log_type_t v29 = sub_241160D50();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v55[0] = v31;
    *(_DWORD *)uint64_t v30 = 136446467;
    uint64_t v32 = sub_241161A00();
    *(void *)&long long v56 = sub_24101F0A4(v32, v33, v55);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2081;
    id v34 = objc_msgSend(self, sel_rawValueWithIdentifier_, v49);
    uint64_t v35 = sub_241160730();
    unint64_t v37 = v36;

    *(void *)&long long v56 = sub_24101F0A4(v35, v37, v55);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v28, v29, "%{public}s Navigate for action: %{private}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v31, -1, -1);
    MEMORY[0x2456180C0](v30, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v8, v50);
}

uint64_t sub_2410ECA94(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(id, uint64_t, uint64_t))
{
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  id v15 = a3;
  id v16 = a4;
  id v17 = a1;
  a8(v16, a7, v14);

  return swift_release();
}

uint64_t sub_2410ECB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[20] = a6;
  v7[21] = a7;
  v7[18] = a4;
  v7[19] = a5;
  uint64_t v8 = sub_24115F790();
  v7[22] = v8;
  v7[23] = *(void *)(v8 - 8);
  v7[24] = swift_task_alloc();
  uint64_t v9 = sub_24115CB10();
  v7[25] = v9;
  v7[26] = *(void *)(v9 - 8);
  v7[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2410ECC74, 0, 0);
}

uint64_t sub_2410ECC74()
{
  sub_24115CAF0();
  id v1 = (void *)swift_task_alloc();
  v0[28] = v1;
  *id v1 = v0;
  v1[1] = sub_2410ECD2C;
  uint64_t v2 = v0[27];
  uint64_t v4 = v0[19];
  uint64_t v3 = v0[20];
  return MEMORY[0x270F354B0](v4, v3, 3, v2);
}

uint64_t sub_2410ECD2C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[26] + 8))(v2[27], v2[25]);
  if (v0) {
    uint64_t v3 = sub_2410ED110;
  }
  else {
    uint64_t v3 = sub_2410ECE94;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2410ECE94()
{
  uint64_t v1 = *(void **)(v0[18]
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsHealthAppPluginDelegate_scheduleControl);
  v0[2] = v0;
  v0[3] = sub_2410ECF94;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_24102A09C;
  v0[13] = &unk_2650E37D0;
  v0[14] = v2;
  objc_msgSend(v1, sel_rescheduleMedicationsWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2410ECF94()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 240) = v1;
  if (v1) {
    uint64_t v2 = sub_2410ED384;
  }
  else {
    uint64_t v2 = sub_2410ED0A4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2410ED0A4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2410ED110()
{
  uint64_t v22 = v0;
  uint64_t v1 = (void *)v0[29];
  sub_24115F740();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24115F780();
  os_log_type_t v5 = sub_241160D30();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[23];
    uint64_t v19 = v0[22];
    uint64_t v20 = v0[24];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v21 = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    uint64_t v9 = sub_241161A00();
    v0[15] = sub_24101F0A4(v9, v10, &v21);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    v0[16] = v1;
    id v11 = v1;
    sub_24102A354();
    uint64_t v12 = sub_241160760();
    v0[17] = sub_24101F0A4(v12, v13, &v21);
    sub_241161430();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v4, v5, "[%{public}s] Could not snooze notification error: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v8, -1, -1);
    MEMORY[0x2456180C0](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v19);
  }
  else
  {
    uint64_t v15 = v0[23];
    uint64_t v14 = v0[24];
    uint64_t v16 = v0[22];

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_2410ED384()
{
  uint64_t v22 = v0;
  swift_willThrow();
  uint64_t v1 = (void *)v0[30];
  sub_24115F740();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24115F780();
  os_log_type_t v5 = sub_241160D30();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[23];
    uint64_t v19 = v0[22];
    uint64_t v20 = v0[24];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v21[0] = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    uint64_t v9 = sub_241161A00();
    v0[15] = sub_24101F0A4(v9, v10, v21);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    v0[16] = v1;
    id v11 = v1;
    sub_24102A354();
    uint64_t v12 = sub_241160760();
    v0[17] = sub_24101F0A4(v12, v13, v21);
    sub_241161430();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v4, v5, "[%{public}s] Could not snooze notification error: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v8, -1, -1);
    MEMORY[0x2456180C0](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v19);
  }
  else
  {
    uint64_t v15 = v0[23];
    uint64_t v14 = v0[24];
    uint64_t v16 = v0[22];

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_2410ED600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  uint64_t v9 = sub_24115F790();
  v8[10] = v9;
  v8[11] = *(void *)(v9 - 8);
  v8[12] = swift_task_alloc();
  uint64_t v10 = sub_24115CB10();
  v8[13] = v10;
  v8[14] = *(void *)(v10 - 8);
  v8[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2410ED724, 0, 0);
}

uint64_t sub_2410ED724()
{
  sub_24115CAF0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2410ED7DC;
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[6];
  return MEMORY[0x270F354B0](v5, v3, v4, v2);
}

uint64_t sub_2410ED7DC()
{
  uint64_t v2 = *(void *)(*v1 + 120);
  uint64_t v3 = *(void *)(*v1 + 112);
  uint64_t v4 = *(void *)(*v1 + 104);
  uint64_t v5 = *v1;
  *(void *)(v5 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2410ED990, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_2410ED990()
{
  char v24 = v0;
  uint64_t v1 = (void *)v0[17];
  sub_24115F740();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24115F780();
  os_log_type_t v5 = sub_241160D30();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[17];
    uint64_t v7 = v0[11];
    uint64_t v21 = v0[10];
    uint64_t v22 = v0[12];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v23 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v10 = sub_241161A00();
    v0[2] = sub_24101F0A4(v10, v11, &v23);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    v0[3] = v6;
    id v12 = v6;
    sub_24102A354();
    uint64_t v13 = sub_241160760();
    v0[4] = sub_24101F0A4(v13, v14, &v23);
    sub_241161430();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v4, v5, "[%{public}s] Could not save dose events from notification error: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v9, -1, -1);
    MEMORY[0x2456180C0](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v22, v21);
  }
  else
  {
    uint64_t v15 = (void *)v0[17];
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v18 = v0[10];

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_2410EDC10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  swift_getObjectType();
  uint64_t v24 = sub_24115CEB0();
  uint64_t v3 = *(void *)(v24 - 8);
  *(void *)&double v4 = MEMORY[0x270FA5388](v24).n128_u64[0];
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_localizedTitle, v4);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v23 = sub_241160730();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v10 = 0xE700000000000000;
    uint64_t v23 = 0x656D614E206F4ELL;
  }
  uint64_t v11 = sub_2410EDE94(a1);
  uint64_t v13 = v12;
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  void v22[2] = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  swift_bridgeObjectRetain();
  v22[1] = sub_2410EE54C(a1);
  sub_24115D470();
  id v15 = objc_msgSend(a1, sel_uniqueIdentifier);
  uint64_t v16 = sub_241160730();
  unint64_t v18 = v17;

  sub_2410EEE20(v16, v18, v23, v10, v11, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F454D0], v24);
  uint64_t v19 = v25;
  sub_24115E6B0();
  uint64_t v20 = sub_24115E6C0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
}

uint64_t sub_2410EDE94(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v33 = sub_24115F790();
  uint64_t v4 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  MEMORY[0x270FA5388](v5);
  id v7 = &v30[-v6];
  uint64_t v8 = type metadata accessor for SharedMedicationsFeedItemData(0);
  *(void *)&double v9 = MEMORY[0x270FA5388](v8).n128_u64[0];
  uint64_t v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v12 = objc_msgSend(a1, sel_userData, v9);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v32 = v2;
    uint64_t v14 = sub_24115CA00();
    unint64_t v16 = v15;

    sub_24115C750();
    swift_allocObject();
    sub_24115C740();
    sub_2410F2810(&qword_268CF0870, 255, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
    sub_24115C730();
    sub_2410F2810(&qword_26B004268, 255, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
    uint64_t v28 = sub_24115F450();
    swift_release();
    sub_241023084(v14, v16);
    sub_2410EC024((uint64_t)v11, type metadata accessor for SharedMedicationsFeedItemData);
  }
  else
  {
    sub_24115F740();
    id v17 = a1;
    unint64_t v18 = sub_24115F780();
    os_log_type_t v19 = sub_241160D30();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v35 = v32;
      *(_DWORD *)uint64_t v20 = 136446467;
      uint64_t v21 = sub_241161A00();
      uint64_t v31 = v4;
      uint64_t v34 = sub_24101F0A4(v21, v22, &v35);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2085;
      id v23 = objc_msgSend(v17, sel_uniqueIdentifier);
      uint64_t v24 = sub_241160730();
      unint64_t v26 = v25;

      uint64_t v34 = sub_24101F0A4(v24, v26, &v35);
      sub_241161430();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v18, v19, "[%{public}s] Could not get user data from feed item id: %{sensitive}s", (uint8_t *)v20, 0x16u);
      uint64_t v27 = v32;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v27, -1, -1);
      MEMORY[0x2456180C0](v20, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v7, v33);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v33);
    }
    return 0;
  }
  return v28;
}

uint64_t sub_2410EE54C(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v44 = sub_24115F790();
  uint64_t v3 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v39 - v5;
  sub_2410F2858(0, &qword_26B006D60, MEMORY[0x263F44CB8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  double v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for SharedMedicationsFeedItemData(0);
  *(void *)&double v14 = MEMORY[0x270FA5388](v13).n128_u64[0];
  unint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(a1, sel_userData, v14);
  if (v17)
  {
    unint64_t v18 = v17;
    os_log_type_t v40 = v9;
    uint64_t v41 = ObjectType;
    uint64_t v19 = sub_24115CA00();
    unint64_t v21 = v20;

    sub_24115C750();
    swift_allocObject();
    sub_24115C740();
    sub_2410F2810(&qword_268CF0870, 255, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
    uint64_t v42 = v19;
    unint64_t v43 = v21;
    sub_24115C730();
    uint64_t v33 = *((void *)v16 + 35);
    if (!v33)
    {
      sub_2410EC024((uint64_t)v16, type metadata accessor for SharedMedicationsFeedItemData);
      swift_release();
      sub_241023084(v42, v43);
      return v33;
    }
    swift_bridgeObjectRetain();
    sub_24115F340();
    sub_24115E6A0();
    sub_24115E690();
    sub_24115E690();
    uint64_t v35 = (uint64_t)v40;
    sub_2410F0070((uint64_t)v12, (uint64_t)v40);
    uint64_t v36 = sub_24115F350();
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) != 1)
    {
      uint64_t v33 = sub_24115F330();
      swift_release();
      sub_241023084(v42, v43);
      sub_2410252F4((uint64_t)v12, &qword_26B006D60, MEMORY[0x263F44CB8]);
      sub_2410EC024((uint64_t)v16, type metadata accessor for SharedMedicationsFeedItemData);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
      return v33;
    }
    swift_release();
    sub_241023084(v42, v43);
    uint64_t v38 = (uint64_t (*)(uint64_t))MEMORY[0x263F44CB8];
    sub_2410252F4((uint64_t)v12, &qword_26B006D60, MEMORY[0x263F44CB8]);
    sub_2410EC024((uint64_t)v16, type metadata accessor for SharedMedicationsFeedItemData);
    sub_2410252F4(v35, &qword_26B006D60, v38);
  }
  else
  {
    uint64_t v41 = v3;
    sub_24115F740();
    id v22 = a1;
    id v23 = sub_24115F780();
    os_log_type_t v24 = sub_241160D30();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      unint64_t v43 = swift_slowAlloc();
      unint64_t v46 = v43;
      *(_DWORD *)uint64_t v25 = 136446467;
      uint64_t v26 = sub_241161A00();
      uint64_t v45 = sub_24101F0A4(v26, v27, (uint64_t *)&v46);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2085;
      id v28 = objc_msgSend(v22, sel_uniqueIdentifier);
      uint64_t v29 = sub_241160730();
      unint64_t v31 = v30;

      uint64_t v45 = sub_24101F0A4(v29, v31, (uint64_t *)&v46);
      sub_241161430();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v23, v24, "[%{public}s] Could not get user data from feed item id: %{sensitive}s", (uint8_t *)v25, 0x16u);
      unint64_t v32 = v43;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v32, -1, -1);
      MEMORY[0x2456180C0](v25, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v44);
  }
  return 0;
}

uint64_t sub_2410EEE20(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v49 = a5;
  uint64_t v50 = a6;
  uint64_t v51 = a4;
  uint64_t v48 = a3;
  uint64_t v9 = sub_24115F790();
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  double v14 = (char *)&v47 - v13;
  uint64_t v15 = sub_24115E870();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (uint64_t *)((char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = v6;
  unint64_t v19 = sub_2410EF8D0(a1, a2);
  if (!v20)
  {
    sub_24115F740();
    swift_bridgeObjectRetain_n();
    uint64_t v34 = sub_24115F780();
    os_log_type_t v35 = sub_241160D30();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v54 = v37;
      *(_DWORD *)uint64_t v36 = 136446467;
      uint64_t v38 = sub_241161A00();
      uint64_t v56 = sub_24101F0A4(v38, v39, &v54);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_24101F0A4(a1, a2, &v54);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241007000, v34, v35, "[%{public}s] Could not extract sharing ID from feed item id: %{sensitive}s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v37, -1, -1);
      MEMORY[0x2456180C0](v36, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
    return MEMORY[0x263F8EE78];
  }
  uint64_t v21 = v19;
  unint64_t v22 = v20;
  swift_bridgeObjectRetain();
  uint64_t v23 = _s26MedicationsHealthAppPlugin0A24ShareableModelIdentifierO4fromACSgSS_tcfC_0(v21, v22);
  if (v25 == 0xFF)
  {
    sub_24115F740();
    swift_bridgeObjectRetain();
    os_log_type_t v40 = sub_24115F780();
    os_log_type_t v41 = sub_241160D30();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v54 = v43;
      *(_DWORD *)uint64_t v42 = 136446467;
      uint64_t v44 = sub_241161A00();
      uint64_t v56 = sub_24101F0A4(v44, v45, &v54);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_24101F0A4(v21, v22, &v54);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241007000, v40, v41, "[%{public}s] Could not create sharable model identifier from identifier: %{sensitive}s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v43, -1, -1);
      MEMORY[0x2456180C0](v42, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v53);
    return MEMORY[0x263F8EE78];
  }
  uint64_t v26 = v23;
  uint64_t v27 = v24;
  unsigned __int8 v28 = v25;
  swift_bridgeObjectRelease();
  uint64_t v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  sub_241161690();
  sub_241160670();
  sub_241160860();
  sub_241160670();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160670();
  sub_241023DE8();
  sub_241160860();
  sub_2410F0058(v26, v27, v28);
  sub_2410F0058(v26, v27, v28);
  unint64_t v29 = v55;
  *unint64_t v18 = v54;
  v18[1] = v29;
  uint64_t v31 = v50;
  uint64_t v30 = v51;
  v18[2] = v48;
  v18[3] = v30;
  v18[4] = v49;
  v18[5] = v31;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F44A68], v15);
  sub_2410F2858(0, &qword_26B005F70, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
  unint64_t v32 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_24116B370;
  (*(void (**)(unint64_t, void *, uint64_t))(v16 + 32))(v33 + v32, v18, v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v33;
}

uint64_t sub_2410EF4B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getObjectType();
  uint64_t v4 = sub_24115CEB0();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24115E870();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (void *)((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16);
  ((void (*)(void *, uint64_t, uint64_t, __n128))v12)(v11, a1, v7, v9);
  if ((*(unsigned int (**)(void *, uint64_t))(v8 + 88))(v11, v7) == *MEMORY[0x263F44A68])
  {
    uint64_t v28 = a2;
    (*(void (**)(void *, uint64_t))(v8 + 96))(v11, v7);
    uint64_t v14 = v11[3];
    uint64_t v13 = v11[4];
    uint64_t v26 = v11[2];
    uint64_t v27 = v13;
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(self, sel_categoryWithID_, 31);
    if (v15)
    {
      v25[1] = v15;
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v25[0] = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v17 = 0x656D614E206F4ELL;
      if (v14) {
        uint64_t v17 = v26;
      }
      uint64_t v26 = v17;
      sub_2410F2858(0, &qword_26B005F70, MEMORY[0x263F44A78], MEMORY[0x263F8E0F8]);
      unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_24116B370;
      v12(v19 + v18, a1, v7);
      (*(void (**)(char *, void, uint64_t))(v29 + 104))(v6, *MEMORY[0x263F454D0], v4);
      uint64_t v20 = v28;
      sub_24115E6B0();
      uint64_t v21 = sub_24115E6C0();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
    }
    else
    {
      uint64_t v24 = sub_24115E6C0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v28, 1, 1, v24);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v23 = sub_24115E6C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a2, 1, 1, v23);
    return (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  }
}

unint64_t sub_2410EF8D0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_24115F790();
  uint64_t v42 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  __n128 v9 = &v38[-v8];
  uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F07690];
  sub_2410F2858(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = &v38[-v12];
  v45[0] = a1;
  v45[1] = a2;
  uint64_t v43 = 0x676E69726168535BLL;
  unint64_t v44 = 0xEB000000003A4449;
  uint64_t v14 = sub_24115CB90();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_24108741C();
  sub_2411614A0();
  unint64_t v16 = v15;
  char v18 = v17;
  sub_2410252F4((uint64_t)v13, (unint64_t *)&qword_26B007200, v10);
  swift_bridgeObjectRelease();
  if (v18)
  {
    sub_24115F740();
    swift_bridgeObjectRetain_n();
    uint64_t v31 = sub_24115F780();
    os_log_type_t v32 = sub_241160D30();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      v45[0] = v34;
      *(_DWORD *)uint64_t v33 = 136446467;
      uint64_t v35 = sub_241161A00();
      uint64_t v43 = sub_24101F0A4(v35, v36, v45);
      uint64_t v41 = v4;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_24101F0A4(a1, a2, v45);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241007000, v31, v32, "[%{public}s] Could not find index of \"[SharingID:\": %{sensitive}s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v34, -1, -1);
      MEMORY[0x2456180C0](v33, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v6, v41);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v6, v4);
    }
    return 0;
  }
  unint64_t result = sub_241160850();
  if (result >> 14 >= v16 >> 14)
  {
    uint64_t v20 = sub_241160900();
    uint64_t v21 = MEMORY[0x2456165F0](v20);
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    sub_24115F740();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v24 = sub_24115F780();
    os_log_type_t v25 = sub_241160D20();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      v45[0] = v40;
      *(_DWORD *)uint64_t v27 = 136446723;
      uint64_t v28 = sub_241161A00();
      uint64_t v41 = v4;
      uint64_t v43 = sub_24101F0A4(v28, v29, v45);
      int v39 = v26;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_24101F0A4(v21, v23, v45);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_24101F0A4(a1, a2, v45);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241007000, v24, (os_log_type_t)v39, "[%{public}s] Sharing id %{sensitive}s for feed item id: %s", (uint8_t *)v27, 0x20u);
      uint64_t v30 = v40;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v30, -1, -1);
      MEMORY[0x2456180C0](v27, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v9, v41);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v9, v4);
    }
    uint64_t v37 = HIBYTE(v23) & 0xF;
    if ((v23 & 0x2000000000000000) == 0) {
      uint64_t v37 = v21 & 0xFFFFFFFFFFFFLL;
    }
    if (v37) {
      return v21;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

void sub_2410EFF2C()
{
  swift_getObjectType();

  JUMPOUT(0x245614390);
}

uint64_t sub_2410F0010(uint64_t a1, uint64_t a2)
{
  return sub_2410F2810(qword_26B0061D0, a2, (void (*)(uint64_t))type metadata accessor for MedicationsHealthAppPluginDelegate);
}

uint64_t sub_2410F0058(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_241023D0C();
  }
  return result;
}

uint64_t sub_2410F0070(uint64_t a1, uint64_t a2)
{
  sub_2410F2858(0, &qword_26B006D60, MEMORY[0x263F44CB8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2410F0104()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_sharedApplication);
  id v2 = objc_msgSend(v1, sel_delegate);

  if (v2)
  {
    if (objc_msgSend(v2, sel_respondsToSelector_, sel_application_openURL_options_))
    {
      id v3 = objc_msgSend(v0, sel_sharedApplication);
      sub_241061E88(MEMORY[0x263F8EE78]);
      uint64_t v4 = (void *)sub_24115C9B0();
      type metadata accessor for OpenURLOptionsKey(0);
      sub_2410F2810((unint64_t *)&unk_26B006FD0, 255, type metadata accessor for OpenURLOptionsKey);
      id v5 = (id)sub_241160620();
      objc_msgSend(v2, sel_application_openURL_options_, v3, v4, v5);
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_2410F02BC(void *a1)
{
  id v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  sub_2410F2858(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v45 - v6;
  uint64_t v8 = sub_24115F790();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v13 = MEMORY[0x270FA5388](v12).n128_u64[0];
  unint64_t v15 = (char *)&v45 - v14;
  id v16 = objc_msgSend(a1, sel_notification, v13);
  id v17 = objc_msgSend(v16, sel_request);

  id v18 = objc_msgSend(v17, sel_content);
  id v19 = objc_msgSend(v18, sel_userInfo);

  uint64_t v20 = sub_241160630();
  uint64_t v52 = sub_241160730();
  unint64_t v53 = v21;
  sub_241161590();
  if (*(void *)(v20 + 16) && (unint64_t v22 = sub_24106289C((uint64_t)v54), (v23 & 1) != 0))
  {
    sub_24101F1C8(*(void *)(v20 + 56) + 32 * v22, (uint64_t)&v55);
  }
  else
  {
    long long v55 = 0u;
    long long v56 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_241067C70((uint64_t)v54);
  if (*((void *)&v56 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v24 = ObjectType;
      uint64_t v51 = v8;
      uint64_t v26 = v52;
      unint64_t v25 = v53;
      sub_24115F740();
      swift_bridgeObjectRetain_n();
      uint64_t v27 = sub_24115F780();
      os_log_type_t v28 = sub_241160D50();
      int v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v30 = swift_slowAlloc();
        int v48 = v29;
        uint64_t v31 = v30;
        uint64_t v47 = swift_slowAlloc();
        v54[0] = v47;
        *(_DWORD *)uint64_t v31 = 136446466;
        uint64_t v49 = v7;
        uint64_t v50 = v2;
        uint64_t v32 = sub_241161A00();
        *(void *)&long long v55 = sub_24101F0A4(v32, v33, v54);
        uint64_t v46 = v26;
        sub_241161430();
        uint64_t v7 = v49;
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v55 = sub_24101F0A4(v26, v25, v54);
        id v2 = v50;
        sub_241161430();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_241007000, v27, (os_log_type_t)v48, "[%{public}s] Received snooze notification action for scheduleItemIdentifier: %{public}s", (uint8_t *)v31, 0x16u);
        uint64_t v34 = v47;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v34, -1, -1);
        MEMORY[0x2456180C0](v31, -1, -1);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v51);
        uint64_t v26 = v46;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v51);
      }
      uint64_t v42 = sub_241160A70();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v7, 1, 1, v42);
      uint64_t v43 = (void *)swift_allocObject();
      v43[2] = 0;
      v43[3] = 0;
      v43[4] = v2;
      v43[5] = v26;
      v43[6] = v25;
      v43[7] = v24;
      id v44 = v2;
      sub_24101A700((uint64_t)v7, (uint64_t)&unk_268CF1EC0, (uint64_t)v43);
      return swift_release();
    }
  }
  else
  {
    sub_2410EC024((uint64_t)&v55, (uint64_t (*)(void))sub_24104D3F8);
  }
  sub_24115F740();
  uint64_t v35 = sub_24115F780();
  os_log_type_t v36 = sub_241160D30();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v54[0] = v38;
    *(_DWORD *)uint64_t v37 = 136446210;
    uint64_t v39 = sub_241161A00();
    *(void *)&long long v55 = sub_24101F0A4(v39, v40, v54);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v35, v36, "[%{public}s] Notification userInfo is missing scheduleItem", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v38, -1, -1);
    MEMORY[0x2456180C0](v37, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2410F08E8(uint64_t a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_2410F2858(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v70 - v5;
  uint64_t v7 = sub_24115F790();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v76 = v7;
  uint64_t v77 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  double v13 = (char *)v70 - v12;
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)v70 - v15;
  uint64_t v17 = sub_24115F2A0();
  uint64_t v18 = *(void *)(v17 - 8);
  *(void *)&double v19 = MEMORY[0x270FA5388](v17).n128_u64[0];
  unint64_t v21 = (char *)v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = objc_msgSend(a2, sel_notification, v19);
  id v23 = objc_msgSend(v22, sel_request);

  id v24 = objc_msgSend(v23, sel_content);
  id v25 = objc_msgSend(v24, sel_userInfo);

  uint64_t v26 = sub_241160630();
  sub_24115F2B0();
  uint64_t v73 = sub_24115F280();
  LOBYTE(v25) = v27;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  if (v25)
  {
    swift_bridgeObjectRelease();
    sub_24115F740();
    uint64_t v31 = sub_24115F780();
    os_log_type_t v32 = sub_241160D30();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      v80[0] = v34;
      *(_DWORD *)uint64_t v33 = 136446466;
      uint64_t v35 = sub_241161A00();
      *(void *)&long long v81 = sub_24101F0A4(v35, v36, v80);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2082;
      id v37 = objc_msgSend(self, sel_rawValueWithIdentifier_, a1);
      uint64_t v38 = sub_241160730();
      unint64_t v40 = v39;

      *(void *)&long long v81 = sub_24101F0A4(v38, v40, v80);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v31, v32, "[%{public}s] Invalid action given to save samples from notification: %{public}s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v34, -1, -1);
      MEMORY[0x2456180C0](v33, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v10, v76);
  }
  else
  {
    uint64_t v78 = sub_241160730();
    unint64_t v79 = v28;
    sub_241161590();
    if (*(void *)(v26 + 16) && (unint64_t v29 = sub_24106289C((uint64_t)v80), (v30 & 1) != 0))
    {
      sub_24101F1C8(*(void *)(v26 + 56) + 32 * v29, (uint64_t)&v81);
    }
    else
    {
      long long v81 = 0u;
      long long v82 = 0u;
    }
    sub_241067C70((uint64_t)v80);
    if (*((void *)&v82 + 1))
    {
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        uint64_t v42 = v78;
        unint64_t v43 = v79;
        sub_24115F740();
        swift_bridgeObjectRetain_n();
        id v44 = sub_24115F780();
        os_log_type_t v45 = sub_241160D50();
        int v46 = v45;
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v47 = swift_slowAlloc();
          uint64_t v72 = swift_slowAlloc();
          v80[0] = v72;
          *(_DWORD *)uint64_t v47 = 136446722;
          int v71 = v46;
          uint64_t v48 = sub_241161A00();
          *(void *)&long long v81 = sub_24101F0A4(v48, v49, v80);
          sub_241161430();
          swift_bridgeObjectRelease();
          *(_WORD *)(v47 + 12) = 2082;
          v70[1] = v47 + 14;
          id v50 = objc_msgSend(self, sel_rawValueWithIdentifier_, a1);
          uint64_t v51 = sub_241160730();
          unint64_t v53 = v52;

          *(void *)&long long v81 = sub_24101F0A4(v51, v53, v80);
          sub_241161430();
          swift_bridgeObjectRelease();
          *(_WORD *)(v47 + 22) = 2082;
          swift_bridgeObjectRetain();
          *(void *)&long long v81 = sub_24101F0A4(v42, v43, v80);
          sub_241161430();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_241007000, v44, (os_log_type_t)v71, "[%{public}s] Received notification action: %{public}s for scheduleItemIdentifier: %{public}s", (uint8_t *)v47, 0x20u);
          uint64_t v54 = v72;
          swift_arrayDestroy();
          MEMORY[0x2456180C0](v54, -1, -1);
          MEMORY[0x2456180C0](v47, -1, -1);

          uint64_t v55 = ObjectType;
          (*(void (**)(char *, uint64_t))(v77 + 8))(v16, v76);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v77 + 8))(v16, v76);
          uint64_t v55 = ObjectType;
        }
        uint64_t v65 = sub_241160A70();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v6, 1, 1, v65);
        double v66 = (void *)swift_allocObject();
        v66[2] = 0;
        v66[3] = 0;
        uint64_t v68 = v73;
        CGFloat v67 = v74;
        v66[4] = v74;
        v66[5] = v42;
        v66[6] = v43;
        v66[7] = v68;
        v66[8] = v55;
        id v69 = v67;
        sub_24101A700((uint64_t)v6, (uint64_t)&unk_268CF1ED0, (uint64_t)v66);
        return swift_release();
      }
    }
    else
    {
      sub_2410EC024((uint64_t)&v81, (uint64_t (*)(void))sub_24104D3F8);
    }
    sub_24115F740();
    swift_bridgeObjectRetain();
    long long v56 = sub_24115F780();
    os_log_type_t v57 = sub_241160D30();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = swift_slowAlloc();
      uint64_t ObjectType = swift_slowAlloc();
      v80[0] = ObjectType;
      *(_DWORD *)uint64_t v58 = 136446466;
      uint64_t v59 = sub_241161A00();
      *(void *)&long long v81 = sub_24101F0A4(v59, v60, v80);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v58 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_241160640();
      unint64_t v63 = v62;
      swift_bridgeObjectRelease();
      *(void *)&long long v81 = sub_24101F0A4(v61, v63, v80);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v56, v57, "[%{public}s] Received notification userInfo is invalid: %{public}s", (uint8_t *)v58, 0x16u);
      uint64_t v64 = ObjectType;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v64, -1, -1);
      MEMORY[0x2456180C0](v58, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v13, v76);
  }
}

uint64_t sub_2410F1280(void *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v125 = a3;
  uint64_t v126 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_24115F2A0();
  uint64_t v119 = *(void *)(v5 - 8);
  uint64_t v120 = v5;
  MEMORY[0x270FA5388](v5);
  BOOL v118 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_24115CB10();
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v8 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410F2858(0, &qword_26B006930, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v116 = (char *)&v109 - v10;
  uint64_t v11 = sub_24115C9E0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v110 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24115F790();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v111 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  char v127 = (char *)&v109 - v18;
  MEMORY[0x270FA5388](v19);
  unint64_t v21 = (char *)&v109 - v20;
  sub_24115F740();
  id v22 = a1;
  id v23 = sub_24115F780();
  os_log_type_t v24 = sub_241160D50();
  LODWORD(v122) = v24;
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v26 = &selRef_setSelectionStyle_;
  uint64_t v121 = ObjectType;
  uint64_t v115 = v11;
  uint64_t v114 = v12;
  if (v25)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v109 = swift_slowAlloc();
    v130[0] = v109;
    *(_DWORD *)uint64_t v27 = 136446723;
    uint64_t v28 = sub_241161A00();
    *(void *)&long long v131 = sub_24101F0A4(v28, v29, v130);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2081;
    id v30 = objc_msgSend(v22, sel_notification);
    id v31 = objc_msgSend(v30, sel_request);
    uint64_t v124 = v14;
    id v32 = v31;

    id v33 = objc_msgSend(v32, sel_identifier);
    uint64_t v34 = sub_241160730();
    uint64_t v123 = v15;
    uint64_t v35 = v8;
    unint64_t v37 = v36;

    *(void *)&long long v131 = sub_24101F0A4(v34, v37, v130);
    sub_241161430();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2081;
    id v38 = objc_msgSend(v22, sel_actionIdentifier);
    uint64_t v39 = sub_241160730();
    unint64_t v41 = v40;

    uint64_t v26 = &selRef_setSelectionStyle_;
    uint64_t v42 = v39;
    uint64_t v8 = v35;
    uint64_t v15 = v123;
    *(void *)&long long v131 = sub_24101F0A4(v42, v41, v130);
    sub_241161430();

    uint64_t v14 = v124;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v23, (os_log_type_t)v122, "[%{public}s] Received notification: %{private}s, response action: %{private}s", (uint8_t *)v27, 0x20u);
    uint64_t v43 = v109;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v43, -1, -1);
    MEMORY[0x2456180C0](v27, -1, -1);
  }
  else
  {
  }
  id v44 = *(void (**)(char *, uint64_t))(v15 + 8);
  v44(v21, v14);
  id v45 = [v22 v26[351]];
  id v46 = objc_msgSend(v45, sel_request);

  id v47 = objc_msgSend(v46, sel_content);
  id v48 = objc_msgSend(v47, sel_categoryIdentifier);

  uint64_t v49 = sub_241160730();
  uint64_t v51 = v50;

  if (v49 == sub_241160730() && v51 == v52)
  {
    swift_bridgeObjectRelease_n();
    unint64_t v53 = v127;
    goto LABEL_8;
  }
  char v54 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v53 = v127;
  if (v54)
  {
LABEL_8:
    id v55 = objc_msgSend(v22, sel_notification);
    id v56 = objc_msgSend(v55, (SEL)&selRef_codableRepresentationForSync);

    id v57 = objc_msgSend(v56, sel_content);
    id v58 = objc_msgSend(v57, sel_userInfo);

    uint64_t v59 = sub_241160630();
    uint64_t v128 = sub_241160730();
    uint64_t v129 = v60;
    sub_241161590();
    if (*(void *)(v59 + 16) && (unint64_t v61 = sub_24106289C((uint64_t)v130), (v62 & 1) != 0))
    {
      sub_24101F1C8(*(void *)(v59 + 56) + 32 * v61, (uint64_t)&v131);
    }
    else
    {
      long long v131 = 0u;
      long long v132 = 0u;
    }
    sub_241067C70((uint64_t)v130);
    if (*((void *)&v132 + 1))
    {
      if (swift_dynamicCast())
      {
        unint64_t v63 = v116;
        sub_24115C9D0();
        uint64_t v64 = (uint64_t)v63;
        swift_bridgeObjectRelease();
        uint64_t v65 = v114;
        double v66 = v63;
        uint64_t v67 = v115;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v66, 1, v115) != 1)
        {
          swift_bridgeObjectRelease();
          double v90 = v110;
          (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v110, v64, v67);
          sub_2410F0104();
          uint64_t v80 = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v90, v67);
          return v126(v80);
        }
        sub_2410252F4(v64, &qword_26B006930, MEMORY[0x263F06EA8]);
      }
    }
    else
    {
      sub_2410EC024((uint64_t)&v131, (uint64_t (*)(void))sub_24104D3F8);
    }
    sub_24115F740();
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_24115F780();
    os_log_type_t v69 = sub_241160D30();
    if (!os_log_type_enabled(v68, v69))
    {

      swift_bridgeObjectRelease_n();
      uint64_t v80 = ((uint64_t (*)(char *, uint64_t))v44)(v53, v14);
      return v126(v80);
    }
    uint64_t v70 = swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    int v122 = (uint64_t (*)(char *, uint64_t))v44;
    uint64_t v72 = v71;
    v130[0] = v71;
    *(_DWORD *)uint64_t v70 = 136446466;
    uint64_t v73 = sub_241161A00();
    *(void *)&long long v131 = sub_24101F0A4(v73, v74, v130);
    uint64_t v124 = v14;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v70 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_241160640();
    uint64_t v123 = v15;
    unint64_t v77 = v76;
    swift_bridgeObjectRelease();
    *(void *)&long long v131 = sub_24101F0A4(v75, v77, v130);
    sub_241161430();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v68, v69, "[%{public}s] Received notification userInfo without a valid kHKNotificationsURLKey %{public}s", (uint8_t *)v70, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v72, -1, -1);
    MEMORY[0x2456180C0](v70, -1, -1);

    uint64_t v78 = v124;
    unint64_t v79 = v127;
LABEL_19:
    uint64_t v80 = v122(v79, v78);
    return v126(v80);
  }
  int v122 = (uint64_t (*)(char *, uint64_t))v44;
  sub_241160730();
  id v81 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  long long v82 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v83 = objc_msgSend(v81, sel_initWithSuiteName_, v82);

  id v84 = objc_msgSend(v22, sel_actionIdentifier);
  if (!v84)
  {
    sub_241160730();
    id v84 = (id)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  unint64_t v85 = (unint64_t)objc_msgSend(self, sel_identifierWithRawValue_, v84);

  if (v85 <= 6)
  {
    if (((1 << v85) & 0x66) != 0)
    {
      double v86 = v22;
      uint64_t v87 = v117;
      sub_2410F08E8(v85, v86);
      if (!v83)
      {
LABEL_32:
        id v93 = v118;
        sub_24115F2B0();
        uint64_t v94 = sub_24115F290();
        char v96 = v95;
        (*(void (**)(char *, uint64_t))(v119 + 8))(v93, v120);
        if ((v96 & 1) == 0)
        {
          sub_24115CEA0();
          sub_24115CE90();
          uint64_t v97 = (void *)sub_24115CE70();
          swift_release();
          BOOL v98 = objc_msgSend(v97, sel_authorizationStatus) != (id)1;
          uint64_t v99 = self;
          id v100 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v98);
          objc_msgSend(v99, sel_submitNotificationInterationMetricForType_withHealthNotificationsAuthorizedStatus_dataSource_, v94, v100, *(void *)(v87+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin34MedicationsHealthAppPluginDelegate_healthStore));

          return v126(v80);
        }
        uint64_t v102 = v111;
        sub_24115F740();
        id v103 = sub_24115F780();
        os_log_type_t v104 = sub_241160D30();
        if (os_log_type_enabled(v103, v104))
        {
          id v105 = (uint8_t *)swift_slowAlloc();
          uint64_t v106 = swift_slowAlloc();
          v130[0] = v106;
          *(_DWORD *)id v105 = 136446210;
          uint64_t v107 = sub_241161A00();
          uint64_t v124 = v14;
          *(void *)&long long v131 = sub_24101F0A4(v107, v108, v130);
          sub_241161430();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241007000, v103, v104, "[%{public}s] Received notification action without a defined analyticsInteraction)", v105, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2456180C0](v106, -1, -1);
          MEMORY[0x2456180C0](v105, -1, -1);

          unint64_t v79 = v102;
          uint64_t v78 = v124;
        }
        else
        {

          unint64_t v79 = v102;
          uint64_t v78 = v14;
        }
        goto LABEL_19;
      }
LABEL_26:
      id v88 = v83;
      sub_24115CB00();
      CGFloat v89 = (void *)sub_24115CAA0();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v8, v113);
      objc_msgSend(v88, sel_setObject_forKey_, v89, *MEMORY[0x263F44BA8]);

      goto LABEL_32;
    }
    if (v85 == 3)
    {
      CGFloat v91 = v22;
      uint64_t v87 = v117;
      sub_2410F02BC(v91);
      goto LABEL_32;
    }
    if (v85 == 4)
    {
      CGFloat v92 = v22;
      uint64_t v87 = v117;
      sub_2410EC2CC((char *)4, v92);
      if (!v83) {
        goto LABEL_32;
      }
      goto LABEL_26;
    }
  }
  uint64_t result = sub_2411616B0();
  __break(1u);
  return result;
}

uint64_t sub_2410F2148(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  swift_getObjectType();
  uint64_t v6 = sub_24115F790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  id v10 = a1;
  uint64_t v11 = sub_24115F780();
  os_log_type_t v12 = sub_241160D50();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v30 = v26;
    *(_DWORD *)uint64_t v13 = 136446467;
    uint64_t v28 = a2;
    uint64_t v14 = sub_241161A00();
    uint64_t v27 = a3;
    uint64_t v29 = sub_24101F0A4(v14, v15, &v30);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2081;
    v24[1] = v13 + 14;
    id v16 = objc_msgSend(v10, sel_request);
    id v17 = objc_msgSend(v16, sel_identifier);
    uint64_t v25 = v6;
    id v18 = v17;

    uint64_t v19 = sub_241160730();
    unint64_t v21 = v20;

    uint64_t v29 = sub_24101F0A4(v19, v21, &v30);
    sub_241161430();

    a2 = v28;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v11, v12, "[%{public}s] Received foreground notification presentation: %{private}s", (uint8_t *)v13, 0x16u);
    uint64_t v22 = v26;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v22, -1, -1);
    MEMORY[0x2456180C0](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return a2(27);
}

uint64_t sub_2410F2414(uint64_t a1)
{
  uint64_t v2 = sub_24115E870();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (void *)((char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v3 + 88))(v6, v2) == *MEMORY[0x263F44A68])
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v6, v2);
    uint64_t v7 = *v6;
    unint64_t v8 = v6[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = _s26MedicationsHealthAppPlugin0A24ShareableModelIdentifierO4fromACSgSS_tcfC_0(v7, v8);
    if (v11 != 0xFF)
    {
      uint64_t v12 = v9;
      uint64_t v13 = v10;
      unsigned __int8 v14 = v11;
      if (v11)
      {
        v18[0] = 0;
        v18[1] = 0xE000000000000000;
        sub_241161690();
        sub_241160670();
        sub_241160860();
        sub_241160670();
        sub_241160860();
        sub_241160670();
        swift_bridgeObjectRetain();
        sub_241160860();
        sub_2410F0058(v12, v13, v14);
        sub_2410F0058(v12, v13, v14);
        id v17 = (void *)sub_24115CF20();
        uint64_t v15 = sub_2410D6C00();
        swift_bridgeObjectRelease();

        return v15;
      }
      sub_2410F0058(v9, v10, v11);
    }
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v6, v2);
  }
  return 0;
}

id sub_2410F26C0(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, a1);
  id v4 = objc_msgSend(v3, sel_profile);

  id v5 = objc_allocWithZone((Class)sub_24115ECE0());
  id v6 = a2;
  id v7 = v4;
  unint64_t v8 = (void *)sub_24115ECD0();
  id v9 = objc_allocWithZone(MEMORY[0x263F46238]);
  id v10 = v6;
  id v11 = objc_msgSend(v9, sel_initWithDisplayType_profile_dataProvider_usingInsetStyling_, v10, v7, v8, 1);

  return v11;
}

uint64_t sub_2410F27B4()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2410F27EC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_2410F2800()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_2410F2810(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2410F2858(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2410F28BC()
{
  return sub_2410F29A0(64);
}

uint64_t sub_2410F28C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  id v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_24102A258;
  return sub_2410ECB54(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_2410F2998()
{
  return sub_2410F29A0(72);
}

uint64_t sub_2410F29A0(uint64_t a1)
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_2410F29F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  id v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *id v11 = v2;
  v11[1] = sub_24100B740;
  return sub_2410ED600(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_2410F2AD4()
{
  return sub_2410F59C0(qword_26B0061D0, (void (*)(uint64_t))type metadata accessor for MedicationsHealthAppPluginDelegate);
}

void sub_2410F2B1C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_24115F790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  id v10 = v3;
  id v11 = a1;
  id v12 = v10;
  id v13 = v11;
  unsigned __int8 v14 = sub_24115F780();
  os_log_type_t v15 = sub_241160D50();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = v6;
    uint64_t v18 = v17;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v38 = v33;
    *(_DWORD *)uint64_t v18 = 136315394;
    int v32 = v16;
    uint64_t ObjectType = swift_getObjectType();
    sub_2410F41A8();
    os_log_t v31 = v14;
    uint64_t v19 = sub_241160760();
    unint64_t v36 = a3;
    uint64_t ObjectType = sub_24101F0A4(v19, v20, &v38);
    sub_241161430();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v30[1] = v18 + 14;
    id v21 = v13;
    id v22 = objc_msgSend(v21, sel_description);
    uint64_t v23 = sub_241160730();
    id v35 = v13;
    uint64_t v24 = v23;
    unint64_t v26 = v25;

    uint64_t ObjectType = sub_24101F0A4(v24, v26, &v38);
    sub_241161430();

    a3 = v36;
    swift_bridgeObjectRelease();
    os_log_t v27 = v31;
    _os_log_impl(&dword_241007000, v31, (os_log_type_t)v32, "%s Received request to open NSUserActivity: %s", (uint8_t *)v18, 0x16u);
    uint64_t v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v28, -1, -1);
    MEMORY[0x2456180C0](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v34);
    id v13 = v35;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v29 = (void *)sub_24115E080();
  sub_2410F2E38((uint64_t)v13, v29, a3);
}

void sub_2410F2E38(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = sub_24115E490();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (!v10)
  {
    id v31 = objc_msgSend(a2, sel_resolvedHealthStore);
    if (!v31) {
      id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
    }
    id v32 = objc_allocWithZone((Class)type metadata accessor for MedicationCategoryViewController());
    id v33 = MedicationCategoryViewController.init(healthStore:provenance:)(v31, 7);
    sub_24101A6BC(a3, a3[3]);
    *uint64_t v9 = 1;
    (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F44570], v6);
    sub_24115DB50();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    id v34 = v33;
    goto LABEL_34;
  }
  id v11 = (void *)v10;
  uint64_t v41 = a1;
  id v12 = a2;
  id v13 = objc_msgSend(v11, sel_viewControllers);
  unint64_t v42 = sub_24104F1E8();
  unint64_t v14 = sub_2411609A0();

  if (v14 >> 62) {
    goto LABEL_26;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v15; uint64_t v15 = sub_2411616E0())
  {
    uint64_t v16 = 4;
    while (1)
    {
      id v17 = (v14 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x245617450](v16 - 4, v14)
          : *(id *)(v14 + 8 * v16);
      uint64_t v18 = v17;
      uint64_t v19 = v16 - 3;
      if (__OFADD__(v16 - 4, 1)) {
        break;
      }
      type metadata accessor for MedicationCategoryViewController();
      uint64_t v20 = swift_dynamicCastClass();
      if (v20)
      {
        id v35 = (void *)v20;

        swift_bridgeObjectRelease_n();
        id v36 = v18;
        a1 = v41;
        goto LABEL_35;
      }

      ++v16;
      if (v19 == v15) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease_n();
  id v21 = v12;
  id v22 = objc_msgSend(v12, sel_resolvedHealthStore);
  if (!v22) {
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  }
  id v23 = objc_allocWithZone((Class)type metadata accessor for MedicationCategoryViewController());
  id v24 = MedicationCategoryViewController.init(healthStore:provenance:)(v22, 7);
  id v25 = objc_msgSend(v11, sel_viewControllers);
  unint64_t v26 = sub_2411609A0();

  if (!(v26 >> 62))
  {
    id v27 = *(id *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    a1 = v41;
    if (v27) {
      goto LABEL_15;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v43 = MEMORY[0x263F8EE78];
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  id v27 = (id)sub_2411616E0();
  swift_bridgeObjectRelease();
  a1 = v41;
  if (!v27) {
    goto LABEL_29;
  }
LABEL_15:
  if ((v26 & 0xC000000000000001) != 0)
  {
    id v28 = (id)MEMORY[0x245617450](0, v26);
  }
  else
  {
    if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    id v28 = *(id *)(v26 + 32);
  }
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  uint64_t v43 = MEMORY[0x263F8EE78];
  if (!v29)
  {
LABEL_30:
    id v37 = v24;
    id v27 = 0;
    goto LABEL_31;
  }
  id v30 = v24;
  id v27 = v29;
  MEMORY[0x2456167B0]();
  if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_38:
  }
    sub_2411609D0();
  sub_241160A00();
  sub_2411609C0();
LABEL_31:
  id v38 = v24;
  MEMORY[0x2456167B0]();
  if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_2411609D0();
  }
  sub_241160A00();
  sub_2411609C0();

  uint64_t v39 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setViewControllers_animated_, v39, 0);

  id v34 = v38;
LABEL_34:
  id v35 = v34;
LABEL_35:
  objc_msgSend(v35, sel_restoreUserActivityState_, a1);
  sub_2410F380C(a1, v35);
}

uint64_t sub_2410F337C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v41 = a3;
  sub_2410F596C(0, &qword_268CF1F28, MEMORY[0x263F43DC0]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v42 = &v33[-v9];
  uint64_t v10 = sub_24115C9E0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_24115F790();
  uint64_t v39 = *(void *)(v14 - 8);
  uint64_t v40 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = &v33[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24115F740();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  id v17 = v4;
  uint64_t v18 = sub_24115F780();
  os_log_type_t v19 = sub_241160D50();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v36 = a1;
    uint64_t v22 = v21;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v44 = v35;
    *(_DWORD *)uint64_t v22 = 136315394;
    int v34 = v20;
    uint64_t ObjectType = swift_getObjectType();
    sub_2410F41A8();
    uint64_t v37 = a2;
    uint64_t v23 = sub_241160760();
    uint64_t v38 = a4;
    uint64_t ObjectType = sub_24101F0A4(v23, v24, &v44);
    sub_241161430();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    sub_2410F59C0(&qword_26B006928, MEMORY[0x263F06EA8]);
    uint64_t v25 = sub_241161850();
    uint64_t ObjectType = sub_24101F0A4(v25, v26, &v44);
    a4 = v38;
    sub_241161430();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    _os_log_impl(&dword_241007000, v18, (os_log_type_t)v34, "[%s] Received request to open URL: [%s]]", (uint8_t *)v22, 0x16u);
    uint64_t v27 = v35;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v27, -1, -1);
    MEMORY[0x2456180C0](v22, -1, -1);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  }

  (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v16, v40);
  id v28 = sub_241085E24();
  uint64_t v29 = (void *)sub_24115E080();
  sub_2410F2E38((uint64_t)v28, v29, v41);

  id v30 = objc_msgSend(self, sel_categoryWithID_, 31);
  sub_24115DB40();

  sub_24115E4A0();
  uint64_t v31 = sub_24115E4B0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a4, 0, 1, v31);
}

uint64_t sub_2410F380C(uint64_t a1, void *a2)
{
  uint64_t v71 = a2;
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v68 = v2;
  uint64_t v69 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v68 - v7;
  sub_2410F596C(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v68 - v10;
  uint64_t v12 = sub_24115CB10();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v68 - v17;
  sub_2410F596C(0, &qword_26B007310, MEMORY[0x263F8F520]);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v68 - v20;
  uint64_t result = sub_2410829D8();
  switch((char)result)
  {
    case 1:
      uint64_t v23 = sub_241081CC4();
      if (v24)
      {
        uint64_t v25 = v24;
        uint64_t v26 = v23;
        uint64_t v27 = sub_241160A70();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v21, 1, 1, v27);
        id v28 = (void *)swift_allocObject();
        v28[2] = 0;
        v28[3] = 0;
        uint64_t v29 = v70;
        v28[4] = v70;
        uint64_t v28[5] = v26;
        id v30 = v71;
        v28[6] = v25;
        v28[7] = v30;
        id v31 = v29;
        id v32 = v30;
        id v33 = &unk_268CF1F08;
        uint64_t v34 = (uint64_t)v21;
        uint64_t v35 = (uint64_t)v28;
        goto LABEL_6;
      }
      uint64_t v46 = sub_241081CE0();
      if (v47)
      {
        uint64_t v69 = v47;
        uint64_t v48 = v46;
        uint64_t v49 = sub_241082060();
        if (v50) {
          uint64_t v51 = 1;
        }
        else {
          uint64_t v51 = v49;
        }
        uint64_t v68 = v51;
        sub_2410823CC((uint64_t)v11);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_24115CAF0();
          sub_2410A1AB8((uint64_t)v11);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
        }
        uint64_t v58 = sub_241160A70();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v21, 1, 1, v58);
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
        uint64_t v59 = v13;
        unint64_t v60 = (*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        unint64_t v61 = (v14 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
        char v62 = (char *)swift_allocObject();
        *((void *)v62 + 2) = 0;
        *((void *)v62 + 3) = 0;
        uint64_t v63 = v69;
        uint64_t v64 = v70;
        *((void *)v62 + 4) = v70;
        *((void *)v62 + 5) = v48;
        uint64_t v65 = v71;
        *((void *)v62 + 6) = v63;
        *((void *)v62 + 7) = v65;
        (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v62[v60], v15, v12);
        *(void *)&v62[v61] = v68;
        id v66 = v64;
        id v67 = v65;
        sub_24101A700((uint64_t)v21, (uint64_t)&unk_268CF1EF8, (uint64_t)v62);
        swift_release();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v18, v12);
      }
      else
      {
        sub_24115F740();
        id v55 = sub_24115F780();
        os_log_type_t v56 = sub_241160D30();
        if (os_log_type_enabled(v55, v56))
        {
          id v57 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v57 = 0;
          _os_log_impl(&dword_241007000, v55, v56, "LogDose route is missing required scheduleItemIdentifier OR medication name.", v57, 2u);
          MEMORY[0x2456180C0](v57, -1, -1);
        }

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v8, v68);
      }
      break;
    case 2:
      uint64_t v36 = sub_241081CE0();
      if (v37)
      {
        uint64_t v38 = v36;
        uint64_t v39 = v37;
        uint64_t v40 = sub_241160A70();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v21, 1, 1, v40);
        uint64_t v41 = (void *)swift_allocObject();
        void v41[2] = 0;
        v41[3] = 0;
        unint64_t v42 = v70;
        v41[4] = v70;
        v41[5] = v38;
        uint64_t v43 = v71;
        v41[6] = v39;
        v41[7] = v43;
        id v44 = v42;
        id v45 = v43;
        id v33 = &unk_268CF1EE8;
        uint64_t v34 = (uint64_t)v21;
        uint64_t v35 = (uint64_t)v41;
LABEL_6:
        sub_24101A700(v34, (uint64_t)v33, v35);
        uint64_t result = swift_release();
      }
      else
      {
        sub_24115F740();
        uint64_t v52 = sub_24115F780();
        os_log_type_t v53 = sub_241160D30();
        if (os_log_type_enabled(v52, v53))
        {
          char v54 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v54 = 0;
          _os_log_impl(&dword_241007000, v52, v53, "Medication Room is missing required medication name.", v54, 2u);
          MEMORY[0x2456180C0](v54, -1, -1);
        }

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v5, v68);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2410F3E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268CF1F10 + dword_268CF1F10);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_24102A258;
  return v13(a5, a6, a7);
}

uint64_t sub_2410F3F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_268CF1F18 + dword_268CF1F18);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_24102A258;
  return v15(a5, a6, a7, a8, v17);
}

uint64_t sub_2410F4018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268CF1F20 + dword_268CF1F20);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_24102A258;
  return v13(a5, a6, a7);
}

uint64_t sub_2410F40D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F34210](a1, a2, ObjectType, a4);
}

uint64_t sub_2410F4140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F34218](a1, a2, ObjectType, a4);
}

unint64_t sub_2410F41A8()
{
  unint64_t result = qword_26B006A38[0];
  if (!qword_26B006A38[0])
  {
    type metadata accessor for MedicationsHealthAppPluginDelegate();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, qword_26B006A38);
  }
  return result;
}

uint64_t sub_2410F41E8()
{
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24102A258;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268CF1F20 + dword_268CF1F20);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_24102A258;
  return v8(v2, v3, v4);
}

uint64_t sub_2410F42EC()
{
  uint64_t v1 = sub_24115CB10();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2410F43DC()
{
  uint64_t v2 = *(void *)(sub_24115CB10() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = (char *)v0 + v3;
  uint64_t v8 = *(void *)((char *)v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_24100B740;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t))((char *)&dword_268CF1F18 + dword_268CF1F18);
  uint64_t v10 = (void *)swift_task_alloc();
  v9[2] = v10;
  void *v10 = v9;
  v10[1] = sub_24102A258;
  return v12(v4, v5, v6, v7, v8);
}

uint64_t sub_2410F455C()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_2410F45AC()
{
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24102A258;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_268CF1F10 + dword_268CF1F10);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_24102A258;
  return v8(v2, v3, v4);
}

uint64_t sub_2410F46B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v3[4] = a3;
  uint64_t v6 = sub_24115F790();
  v3[5] = v6;
  v3[6] = *(void *)(v6 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  v3[9] = sub_241160A50();
  v3[10] = sub_241160A40();
  uint64_t v7 = (void *)swift_task_alloc();
  v3[11] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2410F47E8;
  return MedicationCategoryViewController.logDoseViewControllerFor(scheduleItemIdentifier:)(a1, a2);
}

uint64_t sub_2410F47E8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  uint64_t v5 = sub_241160A20();
  if (v1) {
    uint64_t v6 = sub_2410F4A8C;
  }
  else {
    uint64_t v6 = sub_2410F4948;
  }
  return MEMORY[0x270FA2498](v6, v5, v4);
}

uint64_t sub_2410F4948()
{
  uint64_t v1 = v0[12];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[12];
    sub_241160E50();
  }
  else
  {
    sub_24115F740();
    uint64_t v3 = sub_24115F780();
    os_log_type_t v4 = sub_241160D30();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_241007000, v3, v4, "Could not show logging view, failed to construct Logging View Controller", v5, 2u);
      MEMORY[0x2456180C0](v5, -1, -1);
    }
    uint64_t v6 = v0[8];
    uint64_t v7 = v0[5];
    uint64_t v8 = v0[6];

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_2410F4A8C()
{
  uint64_t v22 = v0;
  uint64_t v1 = (void *)v0[13];
  swift_release();
  sub_24115F740();
  id v2 = v1;
  id v3 = v1;
  os_log_type_t v4 = sub_24115F780();
  os_log_type_t v5 = sub_241160D30();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[13];
    uint64_t v7 = v0[6];
    uint64_t v19 = v0[5];
    uint64_t v20 = v0[7];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v21 = v9;
    v0[2] = v6;
    id v10 = v6;
    sub_24102A354();
    uint64_t v11 = sub_241160760();
    v0[3] = sub_24101F0A4(v11, v12, &v21);
    sub_241161430();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v4, v5, "Could not show logging view error: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v9, -1, -1);
    MEMORY[0x2456180C0](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v19);
  }
  else
  {
    uint64_t v13 = (void *)v0[13];
    uint64_t v15 = v0[6];
    uint64_t v14 = v0[7];
    uint64_t v16 = v0[5];

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_2410F4CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  void v5[4] = a3;
  uint64_t v8 = sub_24115F790();
  v5[7] = v8;
  v5[8] = *(void *)(v8 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  v5[11] = sub_241160A50();
  v5[12] = sub_241160A40();
  uint64_t v9 = (void *)swift_task_alloc();
  v5[13] = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_2410F4E0C;
  return MedicationCategoryViewController.medicationRoomViewControllerFor(medicationName:)(a1, a2);
}

uint64_t sub_2410F4E0C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  uint64_t v5 = sub_241160A20();
  if (v1) {
    uint64_t v6 = sub_2410F50E4;
  }
  else {
    uint64_t v6 = sub_2410F4F6C;
  }
  return MEMORY[0x270FA2498](v6, v5, v4);
}

uint64_t sub_2410F4F6C()
{
  uint64_t v1 = v0[14];
  swift_release();
  if (v1)
  {
    id v2 = (void *)v0[14];
    uint64_t v3 = (void *)sub_24115EE60();
    uint64_t v4 = (void *)sub_24115EE40();

    sub_241160E50();
  }
  else
  {
    sub_24115F740();
    uint64_t v5 = sub_24115F780();
    os_log_type_t v6 = sub_241160D30();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_241007000, v5, v6, "Could not show logging view, failed to construct Logging View Controller", v7, 2u);
      MEMORY[0x2456180C0](v7, -1, -1);
    }
    uint64_t v8 = v0[10];
    uint64_t v9 = v0[7];
    uint64_t v10 = v0[8];

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_2410F50E4()
{
  uint64_t v22 = v0;
  uint64_t v1 = (void *)v0[15];
  swift_release();
  sub_24115F740();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24115F780();
  os_log_type_t v5 = sub_241160D30();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = (void *)v0[15];
    uint64_t v7 = v0[8];
    uint64_t v19 = v0[7];
    uint64_t v20 = v0[9];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v21 = v9;
    v0[2] = v6;
    id v10 = v6;
    sub_24102A354();
    uint64_t v11 = sub_241160760();
    v0[3] = sub_24101F0A4(v11, v12, &v21);
    sub_241161430();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v4, v5, "Could not show logging view error: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v9, -1, -1);
    MEMORY[0x2456180C0](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v19);
  }
  else
  {
    uint64_t v13 = (void *)v0[15];
    uint64_t v15 = v0[8];
    uint64_t v14 = v0[9];
    uint64_t v16 = v0[7];

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_2410F5328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v3[4] = a3;
  uint64_t v6 = sub_24115F790();
  v3[5] = v6;
  v3[6] = *(void *)(v6 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  v3[9] = sub_241160A50();
  v3[10] = sub_241160A40();
  uint64_t v7 = (void *)swift_task_alloc();
  v3[11] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2410F5460;
  return MedicationCategoryViewController.medicationRoomViewControllerFor(medicationName:)(a1, a2);
}

uint64_t sub_2410F5460(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  uint64_t v5 = sub_241160A20();
  if (v1) {
    uint64_t v6 = sub_2410F5728;
  }
  else {
    uint64_t v6 = sub_2410F55C0;
  }
  return MEMORY[0x270FA2498](v6, v5, v4);
}

uint64_t sub_2410F55C0()
{
  uint64_t v1 = v0[12];
  swift_release();
  if (v1)
  {
    id v2 = (void *)v0[12];
    uint64_t v3 = (void *)v0[4];
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46858]), sel_initWithRootViewController_, v2);
    objc_msgSend(v3, sel_presentViewController_animated_completion_, v4, 1, 0);
  }
  else
  {
    sub_24115F740();
    uint64_t v5 = sub_24115F780();
    os_log_type_t v6 = sub_241160D30();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_241007000, v5, v6, "Could not show medication room view, failed to construct Medication Room View Controller", v7, 2u);
      MEMORY[0x2456180C0](v7, -1, -1);
    }
    uint64_t v8 = v0[8];
    uint64_t v9 = v0[5];
    uint64_t v10 = v0[6];

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_2410F5728()
{
  uint64_t v22 = v0;
  uint64_t v1 = (void *)v0[13];
  swift_release();
  sub_24115F740();
  id v2 = v1;
  id v3 = v1;
  id v4 = sub_24115F780();
  os_log_type_t v5 = sub_241160D30();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = (void *)v0[13];
    uint64_t v7 = v0[6];
    uint64_t v19 = v0[5];
    uint64_t v20 = v0[7];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v21 = v9;
    v0[2] = v6;
    id v10 = v6;
    sub_24102A354();
    uint64_t v11 = sub_241160760();
    v0[3] = sub_24101F0A4(v11, v12, &v21);
    sub_241161430();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v4, v5, "Could not show medication room view error: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v9, -1, -1);
    MEMORY[0x2456180C0](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v19);
  }
  else
  {
    uint64_t v13 = (void *)v0[13];
    uint64_t v15 = v0[6];
    uint64_t v14 = v0[7];
    uint64_t v16 = v0[5];

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

void sub_2410F596C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241161420();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2410F59C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MedicationsOnboardingUserData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MedicationsOnboardingUserData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2410F5B74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationsOnboardingUserData()
{
  return &type metadata for MedicationsOnboardingUserData;
}

uint64_t sub_2410F5BAC()
{
  return 0x6E45324153487369;
}

uint64_t sub_2410F5BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E45324153487369 && a2 == 0xED000064656C6261)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_241161890();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2410F5C8C(uint64_t a1)
{
  unint64_t v2 = sub_2410F5FD8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2410F5CC8(uint64_t a1)
{
  unint64_t v2 = sub_2410F5FD8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2410F5D04@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_2410F602C(0, &qword_268CF1F30, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v12 - v8;
  sub_24101A6BC(a1, a1[3]);
  sub_2410F5FD8();
  sub_2411619C0();
  if (v2) {
    return sub_24101F178((uint64_t)a1);
  }
  char v10 = sub_2411617B0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = sub_24101F178((uint64_t)a1);
  *a2 = v10 & 1;
  return result;
}

uint64_t sub_2410F5E90(void *a1)
{
  sub_2410F602C(0, &qword_26B005EF0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_24101A6BC(a1, a1[3]);
  sub_2410F5FD8();
  sub_2411619D0();
  sub_241161810();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2410F5FD8()
{
  unint64_t result = qword_26B0047F8;
  if (!qword_26B0047F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0047F8);
  }
  return result;
}

void sub_2410F602C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_2410F5FD8();
    unint64_t v7 = a3(a1, &type metadata for MedicationsOnboardingUserData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for MedicationsOnboardingUserData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2410F612CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationsOnboardingUserData.CodingKeys()
{
  return &type metadata for MedicationsOnboardingUserData.CodingKeys;
}

unint64_t sub_2410F6168()
{
  unint64_t result = qword_268CF1F38;
  if (!qword_268CF1F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF1F38);
  }
  return result;
}

unint64_t sub_2410F61C0()
{
  unint64_t result = qword_26B004808;
  if (!qword_26B004808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004808);
  }
  return result;
}

unint64_t sub_2410F6218()
{
  unint64_t result = qword_26B004800;
  if (!qword_26B004800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004800);
  }
  return result;
}

uint64_t type metadata accessor for InteractiveTimelineDataSource()
{
  uint64_t result = qword_26B006BE8;
  if (!qword_26B006BE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410F62B8()
{
  return swift_initClassMetadata2();
}

void sub_2410F6308()
{
}

void sub_2410F6338()
{
}

uint64_t sub_2410F6348()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2410F6398()
{
  return type metadata accessor for InteractiveTimelineDataSource();
}

id sub_2410F63A0(uint64_t a1, void *a2)
{
  return sub_2410F67D8(a2);
}

uint64_t sub_2410F63A8()
{
  return sub_24115E790();
}

uint64_t sub_2410F6404()
{
  return sub_241160DE0();
}

uint64_t sub_2410F648C()
{
  return sub_2410F6F80(&qword_268CF1F40, (void (*)(uint64_t))type metadata accessor for InteractiveTimelineDataSource);
}

uint64_t sub_2410F64D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24115CB50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v17[-2] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v8 = sub_2410452EC(a1);
  uint64_t v9 = qword_26B006BE0;
  *(void *)(v2 + qword_26B006BE0) = v8;
  swift_release();
  sub_2410F6F2C(0, &qword_268CF07C0, MEMORY[0x263F44068]);
  sub_24115DDF0();
  uint64_t v10 = swift_allocObject();
  long long v16 = xmmword_24116B370;
  *(_OWORD *)(v10 + 16) = xmmword_24116B370;
  sub_2410F6F2C(0, (unint64_t *)&qword_26B0070A0, (void (*)(uint64_t))sub_2410787D4);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = v16;
  uint64_t v12 = *(void **)(v2 + v9);
  *(void *)(v11 + 56) = type metadata accessor for InteractiveTimelineItem();
  *(void *)(v11 + 64) = sub_2410F6F80(&qword_26B006B70, (void (*)(uint64_t))type metadata accessor for InteractiveTimelineItem);
  *(void *)(v11 + 32) = v12;
  id v13 = v12;
  sub_24115CB40();
  sub_24115CB20();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  sub_24115DDE0();
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  strcpy((char *)v17, "MutableArray<");
  HIWORD(v17[1]) = -4864;
  sub_24115CB40();
  sub_24115CB20();
  v14(v7, v4);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  return sub_24115DE40();
}

id sub_2410F67D8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_traitCollection);
  id v2 = objc_msgSend(v1, sel_preferredContentSizeCategory);

  uint64_t v3 = sub_241160730();
  uint64_t v5 = v4;
  if (v3 == sub_241160730() && v5 == v6) {
    goto LABEL_13;
  }
  char v8 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_14:

    uint64_t v19 = 0x4064600000000000;
LABEL_15:
    double v20 = *(double *)&v19;
    goto LABEL_16;
  }
  uint64_t v9 = sub_241160730();
  uint64_t v11 = v10;
  if (v9 == sub_241160730() && v11 == v12)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  char v14 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_14;
  }
  uint64_t v15 = sub_241160730();
  uint64_t v17 = v16;
  if (v15 == sub_241160730() && v17 == v18) {
    goto LABEL_13;
  }
  char v31 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_14;
  }
  uint64_t v32 = sub_241160730();
  uint64_t v34 = v33;
  if (v32 == sub_241160730() && v34 == v35) {
    goto LABEL_13;
  }
  char v36 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v36) {
    goto LABEL_14;
  }
  uint64_t v37 = sub_241160730();
  uint64_t v39 = v38;
  if (v37 == sub_241160730() && v39 == v40) {
    goto LABEL_13;
  }
  char v41 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v41) {
    goto LABEL_14;
  }
  uint64_t v42 = sub_241160730();
  uint64_t v44 = v43;
  if (v42 == sub_241160730() && v44 == v45) {
    goto LABEL_13;
  }
  char v46 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v46) {
    goto LABEL_14;
  }
  uint64_t v47 = sub_241160730();
  uint64_t v49 = v48;
  if (v47 == sub_241160730() && v49 == v50) {
    goto LABEL_13;
  }
  char v51 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v51) {
    goto LABEL_14;
  }
  uint64_t v52 = sub_241160730();
  uint64_t v54 = v53;
  if (v52 == sub_241160730() && v54 == v55) {
    goto LABEL_32;
  }
  char v56 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v56) {
    goto LABEL_34;
  }
  uint64_t v57 = sub_241160730();
  uint64_t v59 = v58;
  if (v57 == sub_241160730() && v59 == v60) {
    goto LABEL_32;
  }
  char v61 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v61) {
    goto LABEL_34;
  }
  uint64_t v62 = sub_241160730();
  uint64_t v64 = v63;
  if (v62 == sub_241160730() && v64 == v65)
  {
LABEL_32:
    swift_bridgeObjectRelease_n();
LABEL_34:

    uint64_t v19 = 0x406A400000000000;
    goto LABEL_15;
  }
  char v66 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v66) {
    goto LABEL_34;
  }
  uint64_t v67 = sub_241160730();
  uint64_t v69 = v68;
  if (v67 == sub_241160730() && v69 == v70)
  {
    swift_bridgeObjectRelease_n();
LABEL_45:

    uint64_t v19 = 0x4070400000000000;
    goto LABEL_15;
  }
  char v71 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v71) {
    goto LABEL_45;
  }
  uint64_t v72 = sub_241160730();
  uint64_t v74 = v73;
  if (v72 == sub_241160730() && v74 == v75)
  {
    double v20 = 290.0;
  }
  else if (sub_241161890())
  {
    double v20 = 290.0;
  }
  else
  {
    double v20 = 163.0;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v21 = self;
  id v22 = objc_msgSend(v21, sel_fractionalWidthDimension_, 1.0);
  id v23 = objc_msgSend(v21, sel_estimatedDimension_, v20);
  id v24 = objc_msgSend(self, sel_sizeWithWidthDimension_heightDimension_, v22, v23);

  uint64_t v25 = self;
  sub_24104A2D8();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_24116B220;
  *(void *)(v26 + 32) = objc_msgSend(self, sel_itemWithLayoutSize_, v24);
  sub_2411609C0();
  sub_2410F6EEC();
  uint64_t v27 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v25, sel_verticalGroupWithLayoutSize_subitems_, v24, v27);

  id v29 = objc_msgSend(self, sel_sectionWithGroup_, v28);
  objc_msgSend(v29, sel_setContentInsetsReference_, 2);

  return v29;
}

unint64_t sub_2410F6EEC()
{
  unint64_t result = qword_26B006FB8;
  if (!qword_26B006FB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B006FB8);
  }
  return result;
}

void sub_2410F6F2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241161860();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2410F6F80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MedicationsOnboardingTileActionHandler()
{
  uint64_t result = qword_268CF1F48;
  if (!qword_268CF1F48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410F7014()
{
  return swift_initClassMetadata2();
}

void sub_2410F7054()
{
  uint64_t v0 = sub_24115E400();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v14[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v14[-1] - v5;
  sub_24115E620();
  sub_24115E3E0();
  unint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  sub_24101A6BC(v14, v14[3]);
  char v8 = (void *)sub_24115E3A0();
  id v9 = objc_allocWithZone((Class)type metadata accessor for MedicationCategoryViewController());
  id v10 = MedicationCategoryViewController.init(healthStore:provenance:)(v8, 1);
  sub_24101F178((uint64_t)v14);
  sub_24115E620();
  uint64_t v11 = (void *)sub_24115E3F0();
  v7(v3, v0);
  id v12 = objc_msgSend(v11, sel_navigationController);

  if (v12)
  {
    objc_msgSend(v12, sel_pushViewController_animated_, v10, 1);
  }
}

uint64_t sub_2410F7218(uint64_t a1)
{
  uint64_t v3 = sub_24115E400();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = sub_24115E630();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_2410F7318()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsOnboardingTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2410F7350()
{
  return type metadata accessor for MedicationsOnboardingTileActionHandler();
}

uint64_t sub_2410F7358()
{
  return sub_2410F73E8(&qword_26B003F18, MEMORY[0x263F43E20]);
}

uint64_t sub_2410F73A0()
{
  return sub_2410F73E8(&qword_268CF1F58, (void (*)(uint64_t))type metadata accessor for MedicationsOnboardingTileActionHandler);
}

uint64_t sub_2410F73E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MedicationCategoryOptionsDataSource()
{
  uint64_t result = qword_26B006CA8;
  if (!qword_26B006CA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410F7488()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2410F74C8()
{
  uint64_t v0 = sub_24115CB50();
  uint64_t v59 = *(void *)(v0 - 8);
  uint64_t v60 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v58 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24115E650();
  uint64_t v54 = *(void *)(v2 - 8);
  uint64_t v55 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v53 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_2410F81D4(0, &qword_26B006D78, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  char v51 = (char *)&v41 - v6;
  uint64_t v49 = sub_24115DEE0();
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v50 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410F81D4(0, &qword_26B006D70, MEMORY[0x263F81DF8], v4);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v42 = (char *)&v41 - v9;
  uint64_t v44 = sub_24115F7F0();
  uint64_t v43 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24115F7B0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24115E020();
  uint64_t v56 = *(void *)(v16 - 8);
  uint64_t v57 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v52 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24115F9D0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24115E4D0();
  uint64_t v23 = qword_26B007268;
  swift_retain();
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_24115C960();
  sub_24115F980();
  swift_bridgeObjectRetain();
  sub_24115F990();
  v64[3] = v18;
  v64[4] = MEMORY[0x263F81F20];
  id v24 = sub_2410277C0(v64);
  (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 16))(v24, v21, v18);
  uint64_t v47 = v18;
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_2410F81D4(0, &qword_26B0070B8, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  sub_24115F800();
  uint64_t v46 = v19;
  uint64_t v26 = swift_allocObject();
  uint64_t v45 = v21;
  long long v61 = xmmword_24116B370;
  *(_OWORD *)(v26 + 16) = xmmword_24116B370;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F81DE8], v12);
  uint64_t v27 = sub_24115F7C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v42, 1, 1, v27);
  sub_24115F7E0();
  sub_24115F7D0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v44);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v28 = v49;
  id v29 = v50;
  *uint64_t v50 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v48 + 104))(v29, *MEMORY[0x263F440D8], v28);
  uint64_t v30 = sub_24115F8B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v51, 1, 1, v30);
  uint64_t v62 = 0;
  unint64_t v63 = 0xE000000000000000;
  swift_retain();
  sub_2411615F0();
  uint64_t v31 = sub_241160730();
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v62 = v31;
  unint64_t v63 = v33;
  sub_241160860();
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *MEMORY[0x263F446D0], v55);
  uint64_t v34 = v52;
  sub_24115E010();
  sub_2410F81D4(0, &qword_268CF07C0, MEMORY[0x263F44068], v25);
  sub_24115DDF0();
  *(_OWORD *)(swift_allocObject() + 16) = v61;
  sub_2410F81D4(0, (unint64_t *)&qword_26B0070A0, (uint64_t (*)(uint64_t))sub_2410787D4, v25);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = v61;
  uint64_t v36 = v57;
  *(void *)(v35 + 56) = v57;
  *(void *)(v35 + 64) = sub_2410F8238();
  uint64_t v37 = sub_2410277C0((uint64_t *)(v35 + 32));
  uint64_t v38 = v56;
  (*(void (**)(uint64_t *, char *, uint64_t))(v56 + 16))(v37, v34, v36);
  swift_retain();
  uint64_t v39 = v58;
  sub_24115CB40();
  sub_24115CB20();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v39, v60);
  sub_24115DDE0();
  sub_24115DE50();
  swift_bridgeObjectRelease();
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v34, v36);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
  return v22;
}

uint64_t sub_2410F7F24()
{
  uint64_t v0 = sub_24115DF90();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v13[-v5];
  sub_24115DF30();
  id v7 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  sub_24115DF40();
  uint64_t v8 = (void (*)(unsigned char *, void))sub_24115DF70();
  *uint64_t v9 = 0xC024000000000000;
  v8(v13, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v10 = sub_24115DF80();
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v11(v6, v0);
  return v10;
}

void sub_2410F80B8(void *a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for MedicationsNotificationSettingsViewController(0));
  id v5 = sub_24108A5C4();
  objc_msgSend(a1, sel_showAdaptively_sender_, v5, a2);
}

void sub_2410F8130()
{
}

void sub_2410F814C()
{
}

void sub_2410F8168()
{
}

uint64_t sub_2410F8194()
{
  sub_24115E4F0();

  return swift_deallocClassInstance();
}

uint64_t sub_2410F81C4()
{
  return type metadata accessor for MedicationCategoryOptionsDataSource();
}

void sub_2410F81CC(void *a1)
{
  sub_2410F80B8(a1, v1);
}

void sub_2410F81D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_2410F8238()
{
  unint64_t result = qword_26B0069C8;
  if (!qword_26B0069C8)
  {
    sub_24115E020();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0069C8);
  }
  return result;
}

uint64_t ExpiringScheduleDataSource.__allocating_init(healthStore:listManager:viewController:)(void *a1, uint64_t a2, void *a3)
{
  return ExpiringScheduleDataSource.init(healthStore:listManager:viewController:)(a1, a2, a3);
}

uint64_t ExpiringScheduleDataSource.init(healthStore:listManager:viewController:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v25 = a3;
  uint64_t v7 = sub_241160420();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24115F3F0();
  MEMORY[0x270FA5388](v11 - 8);
  *(void *)(v4 + qword_268CF1F60) = 0;
  *(void *)(v4 + qword_268CF1F68) = a2;
  *(void *)(v4 + qword_268CF1F70) = a1;
  id v12 = objc_allocWithZone(MEMORY[0x263F44BF0]);
  swift_retain();
  swift_retain();
  id v13 = a1;
  id v14 = objc_msgSend(v12, sel_initWithHealthStore_, v13);
  *(void *)(v4 + qword_268CF1F78) = v14;
  sub_24115F3D0();
  id v15 = objc_allocWithZone((Class)sub_24115F420());
  uint64_t v16 = (void *)sub_24115F410();
  *(void *)(v4 + qword_268CF1F80) = v16;
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F060], v7);
  id v17 = v14;
  id v18 = v16;
  uint64_t v19 = (void *)sub_241160F10();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  objc_msgSend(v17, sel_registerObserver_queue_, v18, v19);

  uint64_t v20 = v25;
  *(void *)(v4 + qword_268CF1F88) = v25;
  id v21 = v20;
  swift_release();
  uint64_t v22 = sub_24115E4E0();
  swift_retain();
  sub_2410F86D0();

  swift_release();
  swift_release();
  return v22;
}

uint64_t sub_2410F85A8()
{
  uint64_t v0 = sub_24115DF90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115DF30();
  sub_24115DF60();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_24115DF40();
  sub_24115E170();
  uint64_t v5 = sub_24115DF80();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_2410F86D0()
{
  id v29 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_2410FCFE4(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v24 - v2;
  sub_2410756F0();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410FD048();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  uint64_t v27 = v10;
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410FD134();
  uint64_t v28 = v13;
  uint64_t v30 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v25 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v31 = (id)sub_24115F630();
  sub_24102BDBC();
  sub_241043774(0, (unint64_t *)&qword_26B007308, (unint64_t *)&qword_26B007360, 0x263F44C18, MEMORY[0x263F8D488]);
  sub_2410FD26C(&qword_26B0072C0, (void (*)(uint64_t))sub_24102BDBC);
  sub_24115FE30();
  swift_release();
  uint64_t v15 = v0;
  id v31 = (id)sub_24115F400();
  sub_2410D631C();
  sub_2410FD26C(&qword_268CF0C00, (void (*)(uint64_t))sub_2410756F0);
  sub_2410FD26C(&qword_26B006E68, (void (*)(uint64_t))sub_2410D631C);
  sub_24115FE60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v31 = (id)sub_241160EF0();
  uint64_t v16 = sub_241160EB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v3, 1, 1, v16);
  sub_2410FD26C(&qword_268CF2028, (void (*)(uint64_t))sub_2410FD048);
  sub_24102A8F8();
  id v18 = v25;
  uint64_t v17 = v26;
  sub_24115FF10();
  sub_241025364((uint64_t)v3, (unint64_t *)&qword_26B0071C0, v29);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v17);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_2410FD200;
  *(void *)(v20 + 24) = v19;
  sub_2410FD26C(&qword_268CF2030, (void (*)(uint64_t))sub_2410FD134);
  uint64_t v21 = v28;
  uint64_t v22 = sub_24115FF60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v21);
  *(void *)(v15 + qword_268CF1F60) = v22;
  return swift_release();
}

uint64_t sub_2410F8C7C(uint64_t a1)
{
  sub_2410FCFE4(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - v3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = sub_241160A70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    uint64_t v8 = (void *)swift_allocObject();
    long long v8[2] = 0;
    v8[3] = 0;
    v8[4] = v6;
    v8[5] = a1;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24101A700((uint64_t)v4, (uint64_t)&unk_268CF2040, (uint64_t)v8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t ExpiringScheduleDataSource.makeExpirationTipItem(for:schedule:index:)@<X0>(unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v60 = a4;
  uint64_t v67 = a3;
  uint64_t v54 = a2;
  uint64_t v51 = sub_24115EEF0();
  uint64_t v6 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  char v66 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_24115E9F0();
  uint64_t v8 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v61 = (uint64_t (*)(uint64_t))MEMORY[0x263F07690];
  sub_2410FCFE4(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v46 - v12;
  uint64_t v14 = sub_24115CB50();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  unint64_t v69 = 0xD000000000000012;
  unint64_t v70 = 0x8000000241167D70;
  id v18 = objc_msgSend(a2, sel_UUID);
  sub_24115CB30();

  sub_2410FD26C(&qword_268CF1F90, MEMORY[0x263F07508]);
  sub_241161850();
  sub_241160860();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  unint64_t v57 = v70;
  unint64_t v58 = v69;
  uint64_t v48 = (void *)a1;
  unint64_t v69 = a1;
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  uint64_t v19 = sub_24115F460();
  uint64_t v55 = v20;
  uint64_t v56 = v19;
  uint64_t v21 = sub_24115CB90();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v63 = v22 + 56;
  v47(v13, 1, 1, v21);
  uint64_t v23 = v10;
  sub_24115E9E0();
  uint64_t v24 = sub_24115EF20();
  uint64_t v52 = v25;
  uint64_t v53 = v24;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v64 = v8 + 8;
  uint64_t v65 = v26;
  uint64_t v27 = v62;
  v26(v10, v62);
  uint64_t v28 = v61;
  sub_241025364((uint64_t)v13, (unint64_t *)&qword_26B007200, v61);
  id v29 = v66;
  sub_241161110();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v29, *MEMORY[0x263F44EC0], v51);
  unint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  unint64_t v69 = 0xD000000000000015;
  unint64_t v70 = 0x8000000241167DB0;
  uint64_t v68 = v67;
  sub_241161850();
  sub_241160860();
  swift_bridgeObjectRelease();
  unint64_t v50 = v70;
  uint64_t v51 = v69;
  sub_2410FCFE4(0, &qword_268CF1F98, MEMORY[0x263F44EC8], MEMORY[0x263F8E0F8]);
  v46[2] = *(void *)(*(void *)(sub_24115EF10() - 8) + 72);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_24116B200;
  uint64_t v30 = v47;
  v47(v13, 1, 1, v21);
  sub_24115E9E0();
  v46[1] = sub_24115EF20();
  v65(v23, v27);
  sub_241025364((uint64_t)v13, (unint64_t *)&qword_26B007200, v28);
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v59;
  swift_weakInit();
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = v48;
  *(void *)(v33 + 16) = v31;
  *(void *)(v33 + 24) = v34;
  id v35 = v34;
  sub_24115EF00();
  v30(v13, 1, 1, v21);
  sub_24115E9E0();
  sub_24115EF20();
  v65(v23, v62);
  sub_241025364((uint64_t)v13, (unint64_t *)&qword_26B007200, v61);
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v37 = (void *)swift_allocObject();
  uint64_t v38 = v54;
  v37[2] = v54;
  uint64_t v37[3] = v35;
  v37[4] = v36;
  id v39 = v35;
  id v40 = v38;
  sub_24115EF00();
  uint64_t v41 = (void *)swift_allocObject();
  void v41[2] = v32;
  v41[3] = v40;
  v41[4] = v67;
  uint64_t v42 = sub_24115E8C0();
  uint64_t v43 = v60;
  v60[3] = v42;
  v43[4] = sub_2410FD26C(&qword_268CF1D08, MEMORY[0x263F44D38]);
  sub_2410277C0(v43);
  id v44 = v40;
  swift_retain();
  return sub_24115E8B0();
}

uint64_t sub_2410F970C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2410F9744(uint64_t a1, void *a2)
{
  sub_241024708(0, &qword_268CF2008);
  uint64_t v3 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  id v5 = a2;
  uint64_t v6 = (void *)MEMORY[0x245616D60](sub_2410FCFDC, v4, 0, 0);
  swift_release();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v8 = *(id *)(Strong + qword_268CF1F88);
    swift_release();
    objc_msgSend(v8, sel_presentViewController_animated_completion_, v6, 1, 0);
  }
}

uint64_t sub_2410F98B4()
{
  return sub_2410FCF90(32);
}

void sub_2410F98BC()
{
  sub_2410F9744(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_2410F98C4()
{
  sub_2410FCFE4(0, &qword_268CF2010, MEMORY[0x263F45D68], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - v1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    sub_24115F5D0();
    swift_release();
    uint64_t v3 = sub_24115F6B0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  }
  else
  {
    uint64_t v4 = sub_24115F6B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  }
  return sub_241025364((uint64_t)v2, &qword_268CF2010, MEMORY[0x263F45D68]);
}

void sub_2410F9A60(void *a1, void *a2)
{
  id v8 = objc_msgSend(a1, sel_copyByRemovingEndDateAndSetStartDateToToday);
  sub_2410FCEF4();
  swift_allocObject();
  id v3 = v8;
  sub_24115FC80();
  objc_allocWithZone((Class)sub_24115E920());
  id v4 = a2;
  id v5 = (void *)sub_24115E910();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v7 = *(id *)(Strong + qword_268CF1F88);
    swift_release();
    sub_241160E50();
  }
}

uint64_t sub_2410F9B78()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_2410F9BC0()
{
  sub_2410F9A60(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_2410F9BCC(uint64_t a1, void *a2, uint64_t a3)
{
  sub_2410FCFE4(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v13 - v7;
  uint64_t v9 = sub_241160A70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = 0;
  v10[3] = 0;
  void v10[4] = a1;
  v10[5] = a2;
  v10[6] = a3;
  swift_retain();
  id v11 = a2;
  sub_24101A700((uint64_t)v8, (uint64_t)&unk_268CF1FE0, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_2410F9D0C()
{
  return sub_2410FCF90(40);
}

uint64_t sub_2410F9D14()
{
  return sub_2410F9BCC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_2410F9D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_24102A258;
  return sub_2410FC418(a5);
}

uint64_t sub_2410F9DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  sub_241160A50();
  v4[7] = sub_241160A40();
  uint64_t v6 = sub_241160A20();
  return MEMORY[0x270FA2498](sub_2410F9E54, v6, v5);
}

uint64_t sub_2410F9E54()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_2410F86D0();
    swift_release();
  }
  **(unsigned char **)(v0 + 40) = Strong == 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

Swift::Void __swiftcall ExpiringScheduleDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_2410F9F6C(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return MEMORY[0x270FA2498](sub_2410F9F8C, 0, 0);
}

uint64_t sub_2410F9F8C()
{
  uint64_t v1 = *(void **)(v0[17] + qword_268CF1F78);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_2410FA094;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_2410FA77C;
  v0[13] = &unk_2650E3800;
  v0[14] = v2;
  objc_msgSend(v1, sel_fetchAllSchedulesWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2410FA094()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_2410FA48C;
  }
  else {
    uint64_t v2 = sub_2410FA1A4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2410FA1A4()
{
  id v18 = v0;
  unint64_t v1 = v0[15];
  if (!v1)
  {
    swift_bridgeObjectRelease();
    unint64_t v1 = MEMORY[0x263F8EE78];
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (v1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  id v3 = (id)MEMORY[0x263F8EE78];
  if (v2)
  {
    unint64_t v4 = 0;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x245617450](v4, v1);
      }
      else
      {
        if (v4 >= *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          swift_bridgeObjectRetain();
          uint64_t v2 = sub_2411616E0();
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        id v5 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      unint64_t v7 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        goto LABEL_32;
      }
      id v17 = v5;
      if (sub_2410FA87C(&v17))
      {
        sub_241161640();
        sub_241161670();
        sub_241161680();
        sub_241161650();
      }
      else
      {
      }
      ++v4;
      if (v7 == v2)
      {
        uint64_t v8 = v16;
        id v3 = (id)MEMORY[0x263F8EE78];
        goto LABEL_18;
      }
    }
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_18:
  uint64_t result = swift_bridgeObjectRelease();
  id v17 = v3;
  if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2411616E0();
    uint64_t result = swift_release();
    if (v10) {
      goto LABEL_21;
    }
LABEL_35:
    swift_release();
    goto LABEL_36;
  }
  uint64_t v10 = *(void *)(v8 + 16);
  if (!v10) {
    goto LABEL_35;
  }
LABEL_21:
  if (v10 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v10; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v12 = (id)MEMORY[0x245617450](i, v8);
    }
    else {
      id v12 = *(id *)(v8 + 8 * i + 32);
    }
    uint64_t v13 = v12;
    if (objc_msgSend(v12, sel_displayOptions, v16))
    {
    }
    else
    {
      sub_241161640();
      sub_241161670();
      sub_241161680();
      sub_241161650();
    }
  }
  swift_release();
  id v3 = v17;
LABEL_36:
  uint64_t v14 = sub_2410FAF98((unint64_t)v3, v0[16]);
  swift_release();
  uint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(v14);
}

uint64_t sub_2410FA48C()
{
  uint64_t v19 = v0;
  unint64_t v1 = (void *)v0[18];
  swift_willThrow();

  swift_bridgeObjectRelease();
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (MEMORY[0x263F8EE78] >> 62) {
    goto LABEL_31;
  }
  uint64_t v2 = *(void *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  unint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    unint64_t v4 = 0;
    while (1)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x245617450](v4, v3);
      }
      else
      {
        if (v4 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          swift_bridgeObjectRetain();
          uint64_t v2 = sub_2411616E0();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        id v5 = *(id *)(v3 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      unint64_t v7 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        goto LABEL_30;
      }
      unint64_t v18 = (unint64_t)v5;
      if (sub_2410FA87C((id *)&v18))
      {
        sub_241161640();
        sub_241161670();
        sub_241161680();
        sub_241161650();
      }
      else
      {
      }
      ++v4;
      if (v7 == v2)
      {
        uint64_t v8 = v17;
        goto LABEL_16;
      }
    }
  }
  uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_16:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v18 = v3;
  if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2411616E0();
    uint64_t result = swift_release();
    if (v10) {
      goto LABEL_19;
    }
LABEL_33:
    swift_release();
    unint64_t v14 = MEMORY[0x263F8EE78];
    goto LABEL_34;
  }
  uint64_t v10 = *(void *)(v8 + 16);
  if (!v10) {
    goto LABEL_33;
  }
LABEL_19:
  if (v10 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v10; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v12 = (id)MEMORY[0x245617450](i, v8);
    }
    else {
      id v12 = *(id *)(v8 + 8 * i + 32);
    }
    uint64_t v13 = v12;
    if (objc_msgSend(v12, sel_displayOptions))
    {
    }
    else
    {
      sub_241161640();
      sub_241161670();
      sub_241161680();
      sub_241161650();
    }
  }
  swift_release();
  unint64_t v14 = v18;
LABEL_34:
  uint64_t v15 = sub_2410FAF98(v14, v0[16]);
  swift_release();
  uint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
  return v16(v15);
}

uint64_t sub_2410FA77C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_24102A354();
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    if (a2)
    {
      sub_241024708(0, &qword_26B007348);
      uint64_t v8 = sub_2411609A0();
    }
    else
    {
      uint64_t v8 = 0;
    }
    uint64_t v10 = v8;
    sub_2410FBF8C((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40), (uint64_t (*)(void))sub_2410FBFF4);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_2410FA87C(id *a1)
{
  sub_2410FBDD0();
  uint64_t v73 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v74 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v71 = (char *)&v60 - v5;
  sub_2410FBE38();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v72 = (char *)&v60 - v11;
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)&v60 - v13;
  sub_2410FCFE4(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = sub_24115CB10();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v70 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  unint64_t v77 = (char *)&v60 - v22;
  MEMORY[0x270FA5388](v23);
  unint64_t v76 = (char *)&v60 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v60 - v26;
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v60 - v29;
  *(void *)&double v32 = MEMORY[0x270FA5388](v31).n128_u64[0];
  uint64_t v75 = (char *)&v60 - v33;
  id v34 = objc_msgSend(*a1, sel_endDateTime, v32);
  if (!v34)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    goto LABEL_7;
  }
  id v35 = v34;
  char v66 = v9;
  uint64_t v67 = v7;
  uint64_t v65 = v14;
  sub_24115CAE0();

  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v36(v17, v30, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
LABEL_7:
    sub_241025364((uint64_t)v17, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
    char v57 = 0;
    return v57 & 1;
  }
  uint64_t v64 = v36;
  v36(v75, v17, v18);
  uint64_t v63 = v27;
  sub_24115CB00();
  sub_24115CA80();
  uint64_t v37 = v76;
  sub_24115CAC0();
  uint64_t v38 = v30;
  id v39 = *(void (**)(char *, uint64_t))(v19 + 8);
  v39(v38, v18);
  id v40 = v77;
  sub_24115CA50();
  uint64_t v62 = sub_2410FD26C((unint64_t *)&unk_26B007230, MEMORY[0x263F07490]);
  uint64_t result = sub_2411606C0();
  if (result)
  {
    uint64_t v42 = v73;
    uint64_t v43 = *(int *)(v73 + 48);
    uint64_t v68 = v39;
    uint64_t v69 = v19 + 8;
    id v44 = v71;
    uint64_t v45 = &v71[v43];
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    long long v61 = v46;
    v46(v71, v37, v18);
    uint64_t v47 = v45;
    uint64_t v60 = v45;
    v46(v45, v40, v18);
    uint64_t v48 = v74;
    uint64_t v49 = &v74[*(int *)(v42 + 48)];
    v46(v74, v44, v18);
    v46(v49, v47, v18);
    uint64_t v50 = (uint64_t)v72;
    uint64_t v51 = v64;
    v64(v72, v48, v18);
    v68(v49, v18);
    uint64_t v52 = &v48[*(int *)(v42 + 48)];
    v51(v48, v44, v18);
    v51(v52, v60, v18);
    v51((char *)(v50 + *(int *)(v67 + 36)), v52, v18);
    v68(v48, v18);
    uint64_t v53 = (uint64_t)v65;
    sub_2410FBF8C(v50, (uint64_t)v65, (uint64_t (*)(void))sub_2410FBE38);
    uint64_t v54 = v63;
    LOBYTE(v44) = sub_2411606B0();
    uint64_t v55 = v70;
    v61(v70, v54, v18);
    uint64_t v56 = (uint64_t)v66;
    sub_2410FBECC(v53, (uint64_t)v66);
    if (v44) {
      char v57 = sub_2411606C0();
    }
    else {
      char v57 = 0;
    }
    sub_2410FBF30(v56);
    unint64_t v58 = v55;
    uint64_t v59 = v68;
    v68(v58, v18);
    sub_2410FBF30(v53);
    v59(v77, v18);
    v59(v76, v18);
    v59(v54, v18);
    v59(v75, v18);
    return v57 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_2410FAF98(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_51;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  uint64_t v4 = (void *)MEMORY[0x263F8EE80];
  uint64_t v60 = (void *)MEMORY[0x263F8EE80];
  unint64_t v58 = v2 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  uint64_t v5 = 4;
  uint64_t v55 = MEMORY[0x263F8EE50] + 8;
  long long v54 = xmmword_24116B220;
  uint64_t v57 = v3;
  uint64_t v6 = (void *)v2;
  do
  {
    if (v58) {
      id v9 = (id)MEMORY[0x245617450](v5 - 4, v2);
    }
    else {
      id v9 = *(id *)(v2 + 8 * v5);
    }
    id v10 = v9;
    uint64_t v11 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_2411616E0();
      swift_bridgeObjectRelease();
      if (!v3) {
        return MEMORY[0x263F8EE78];
      }
      goto LABEL_3;
    }
    id v12 = objc_msgSend(v9, sel_medicationIdentifier);
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = sub_241160730();
      uint64_t v16 = v15;
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v16 = 0;
    }
    unint64_t v2 = (unint64_t)v4;
    unint64_t v18 = sub_241062974(v14, v16);
    uint64_t v19 = v4[2];
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      goto LABEL_48;
    }
    char v22 = v17;
    if (v4[3] < v21)
    {
      sub_24106481C(v21, 1);
      uint64_t v4 = v60;
      unint64_t v23 = sub_241062974(v14, v16);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_58;
      }
      unint64_t v18 = v23;
    }
    if (v22)
    {
      uint64_t v7 = swift_bridgeObjectRelease();
      uint64_t v8 = (void *)(v4[7] + 8 * v18);
      MEMORY[0x2456167B0](v7);
      if (*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2411609D0();
      }
      sub_241160A00();
      sub_2411609C0();
    }
    else
    {
      sub_24106807C(0, (unint64_t *)&qword_26B0073A0, v55, MEMORY[0x263F8E0F8]);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_24116B220;
      *(void *)(v25 + 32) = v10;
      uint64_t v59 = v25;
      unint64_t v2 = (unint64_t)&v59;
      sub_2411609C0();
      uint64_t v26 = v59;
      v4[(v18 >> 6) + 8] |= 1 << v18;
      uint64_t v27 = (uint64_t *)(v4[6] + 16 * v18);
      uint64_t *v27 = v14;
      v27[1] = v16;
      *(void *)(v4[7] + 8 * v18) = v26;
      uint64_t v28 = v4[2];
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29) {
        goto LABEL_49;
      }
      v4[2] = v30;
    }
    ++v5;
    unint64_t v2 = (unint64_t)v6;
  }
  while (v11 != v57);
  swift_bridgeObjectRelease();
  unint64_t v31 = a2;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v31 = a2;
    uint64_t v32 = sub_2411616E0();
    if (!v32) {
      goto LABEL_54;
    }
LABEL_24:
    if (v32 < 1)
    {
      __break(1u);
LABEL_58:
      sub_24106807C(0, &qword_26B005C88, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
      uint64_t result = sub_2411618E0();
      __break(1u);
      return result;
    }
    uint64_t v33 = 0;
    unint64_t v34 = v31 & 0xC000000000000001;
    id v35 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      if (v34) {
        id v36 = (id)MEMORY[0x245617450](v33, v31);
      }
      else {
        id v36 = *(id *)(v31 + 8 * v33 + 32);
      }
      uint64_t v37 = v36;
      id v38 = objc_msgSend(v36, sel_semanticIdentifier, v54);
      id v39 = objc_msgSend(v38, sel_stringValue);

      uint64_t v40 = sub_241160730();
      uint64_t v42 = v41;

      if (v4[2])
      {
        unint64_t v43 = sub_241062974(v40, v42);
        if (v44)
        {
          unint64_t v2 = *(void *)(v4[7] + 8 * v43);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v2 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v52 = sub_2411616E0();
            swift_bridgeObjectRelease();
            if (v52)
            {
LABEL_35:
              if ((v2 & 0xC000000000000001) != 0)
              {
                id v45 = (id)MEMORY[0x245617450](0, v2);
              }
              else
              {
                if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_50;
                }
                id v45 = *(id *)(v2 + 32);
              }
              uint64_t v46 = v45;
              swift_bridgeObjectRelease();
              id v47 = v37;
              id v48 = v46;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                id v35 = sub_241052E68(0, v35[2] + 1, 1, v35);
              }
              unint64_t v50 = v35[2];
              unint64_t v49 = v35[3];
              if (v50 >= v49 >> 1) {
                id v35 = sub_241052E68((void *)(v49 > 1), v50 + 1, 1, v35);
              }
              void v35[2] = v50 + 1;
              uint64_t v51 = &v35[2 * v50];
              v51[4] = v47;
              v51[5] = v48;

              goto LABEL_27;
            }
          }
          else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_35;
          }
        }
      }

      swift_bridgeObjectRelease();
LABEL_27:
      ++v33;
      unint64_t v31 = a2;
      if (v32 == v33)
      {
        swift_release();
        goto LABEL_55;
      }
    }
  }
  uint64_t v32 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v32) {
    goto LABEL_24;
  }
LABEL_54:
  swift_release();
  id v35 = (void *)MEMORY[0x263F8EE78];
LABEL_55:
  swift_bridgeObjectRelease();
  return (uint64_t)v35;
}

uint64_t sub_2410FB4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  sub_2410FCFE4(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  v5[3] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  void v5[4] = v8;
  void *v8 = v5;
  v8[1] = sub_2410FB600;
  v8[16] = a5;
  v8[17] = a4;
  return MEMORY[0x270FA2498](sub_2410F9F8C, 0, 0);
}

uint64_t sub_2410FB600(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2410FB700, 0, 0);
}

uint64_t sub_2410FB700()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = sub_241160A70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  sub_241160A50();
  swift_retain();
  uint64_t v5 = sub_241160A40();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = MEMORY[0x263F8F500];
  _OWORD v6[2] = v5;
  v6[3] = v7;
  v6[4] = v4;
  v6[5] = v1;
  swift_release();
  sub_24101A700(v2, (uint64_t)&unk_268CF2050, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_2410FB84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  sub_241160A50();
  v5[8] = sub_241160A40();
  uint64_t v7 = sub_241160A20();
  return MEMORY[0x270FA2498](sub_2410FB8E4, v7, v6);
}

uint64_t sub_2410FB8E4()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_2410FC23C(v3, (void (*)(void *__return_ptr, uint64_t, id, id))sub_2410FD484, v2);
    swift_bridgeObjectRelease();
    sub_24115DE60();
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_2410FB9E4(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  id v8 = a2;
  id v7 = a3;
  ExpiringScheduleDataSource.makeExpirationTipItem(for:schedule:index:)((unint64_t)v8, v7, a1, a4);
}

void ExpiringScheduleDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
}

void ExpiringScheduleDataSource.init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
}

void ExpiringScheduleDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
}

void sub_2410FBAB0()
{
}

void ExpiringScheduleDataSource.init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
}

uint64_t sub_2410FBAF8()
{
  swift_release();

  return swift_release();
}

uint64_t ExpiringScheduleDataSource.deinit()
{
  uint64_t v0 = sub_24115E4F0();
  swift_release();

  swift_release();
  return v0;
}

uint64_t ExpiringScheduleDataSource.__deallocating_deinit()
{
  uint64_t v0 = sub_24115E4F0();
  swift_release();

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2410FBCA0()
{
  return sub_241160DE0();
}

uint64_t type metadata accessor for ExpiringScheduleDataSource()
{
  uint64_t result = qword_268CF1FA8;
  if (!qword_268CF1FA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410FBD5C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2410FBDC8()
{
  return type metadata accessor for ExpiringScheduleDataSource();
}

void sub_2410FBDD0()
{
  if (!qword_268CF1FC0)
  {
    sub_24115CB10();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF1FC0);
    }
  }
}

void sub_2410FBE38()
{
  if (!qword_268CF1FC8)
  {
    sub_24115CB10();
    sub_2410FD26C((unint64_t *)&unk_26B007230, MEMORY[0x263F07490]);
    unint64_t v0 = sub_2411606D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1FC8);
    }
  }
}

uint64_t sub_2410FBECC(uint64_t a1, uint64_t a2)
{
  sub_2410FBE38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2410FBF30(uint64_t a1)
{
  sub_2410FBE38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2410FBF8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_2410FBFF4()
{
  if (!qword_268CF1FD0)
  {
    sub_241043774(255, &qword_26B006F20, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, &qword_268CF1FD0);
    }
  }
}

uint64_t sub_2410FC078()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2410FC0C0()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24102A258;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_24102A258;
  return sub_2410FC418(v2);
}

uint64_t sub_2410FC1A4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_2410277C0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_241027314(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_2410FC23C(uint64_t a1, void (*a2)(void *__return_ptr, uint64_t, id, id), uint64_t a3)
{
  void v22[2] = a3;
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_2410E590C(0, 0, 0);
  uint64_t v5 = v26;
  uint64_t v6 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  v22[0] = a1;
  if (v6)
  {
    uint64_t v7 = 0;
    id v8 = (void **)(a1 + 40);
    do
    {
      uint64_t v9 = *v8;
      id v10 = *(v8 - 1);
      id v11 = v9;
      a2(v23, v7, v10, v11);

      uint64_t v26 = v5;
      unint64_t v13 = *(void *)(v5 + 16);
      unint64_t v12 = *(void *)(v5 + 24);
      if (v13 >= v12 >> 1) {
        sub_2410E590C(v12 > 1, v13 + 1, 1);
      }
      ++v7;
      uint64_t v14 = v24;
      uint64_t v15 = v25;
      uint64_t v16 = sub_2410276D8((uint64_t)v23, v24);
      __n128 v17 = MEMORY[0x270FA5388](v16);
      uint64_t v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v20 + 16))(v19, v17);
      sub_2410FC1A4(v13, (uint64_t)v19, &v26, v14, v15);
      sub_24101F178((uint64_t)v23);
      uint64_t v5 = v26;
      v8 += 2;
    }
    while (v6 != v7);
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2410FC418(uint64_t a1)
{
  v2[18] = a1;
  v2[19] = v1;
  v2[20] = *v1;
  sub_2410FCFE4(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  v2[21] = swift_task_alloc();
  uint64_t v3 = sub_24115F790();
  v2[22] = v3;
  v2[23] = *(void *)(v3 - 8);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2410FC578, 0, 0);
}

uint64_t sub_2410FC578()
{
  uint64_t v20 = v0;
  sub_24115F740();
  uint64_t v1 = sub_24115F780();
  os_log_type_t v2 = sub_241160D50();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v18 = v0[26];
    uint64_t v4 = v0[22];
    uint64_t v3 = v0[23];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v19 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = sub_241161A00();
    v0[17] = sub_24101F0A4(v7, v8, &v19);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v1, v2, "[%s] Dismissing tip", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v6, -1, -1);
    MEMORY[0x2456180C0](v5, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v9(v18, v4);
  }
  else
  {
    uint64_t v10 = v0[26];
    uint64_t v11 = v0[22];
    uint64_t v12 = v0[23];

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v9(v10, v11);
  }
  v0[27] = v9;
  unint64_t v13 = (void *)v0[18];
  uint64_t v14 = v0[19];
  objc_msgSend(v13, sel_updateDisplayOptions_, 1);
  uint64_t v15 = *(void **)(v14 + qword_268CF1F78);
  v0[2] = v0;
  v0[3] = sub_2410FC800;
  uint64_t v16 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_24102A09C;
  v0[13] = &unk_2650E3818;
  v0[14] = v16;
  objc_msgSend(v15, sel_saveSchedule_completion_, v13, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2410FC800()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 224) = v1;
  if (v1) {
    os_log_type_t v2 = sub_2410FCBEC;
  }
  else {
    os_log_type_t v2 = sub_2410FC910;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2410FC910()
{
  char v22 = v0;
  uint64_t v1 = v0[21];
  uint64_t v2 = sub_241160A70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  sub_241160A50();
  swift_retain();
  uint64_t v4 = sub_241160A40();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = MEMORY[0x263F8F500];
  v5[2] = v4;
  v5[3] = v6;
  void v5[4] = v3;
  swift_release();
  sub_241102850(v1, (uint64_t)&unk_268CF1FF8, (uint64_t)v5);
  swift_release();
  sub_24115F740();
  uint64_t v7 = sub_24115F780();
  os_log_type_t v8 = sub_241160D50();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v19 = v0[25];
    uint64_t v20 = (void (*)(uint64_t, uint64_t))v0[27];
    uint64_t v9 = v0[22];
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v21 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = sub_241161A00();
    v0[16] = sub_24101F0A4(v12, v13, &v21);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v7, v8, "[%s] Updated dismissal state for schedule successfully", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v11, -1, -1);
    MEMORY[0x2456180C0](v10, -1, -1);

    v20(v19, v9);
  }
  else
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[27];
    uint64_t v15 = v0[25];
    uint64_t v16 = v0[22];

    v14(v15, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  __n128 v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_2410FCBEC()
{
  uint64_t v17 = v0;
  swift_willThrow();
  sub_24115F740();
  uint64_t v1 = sub_24115F780();
  os_log_type_t v2 = sub_241160D50();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void **)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
    uint64_t v13 = *(void *)(v0 + 176);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v16 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_241161A00();
    *(void *)(v0 + 120) = sub_24101F0A4(v6, v7, &v16);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v1, v2, "[%s] Failed to update display for medication.", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v5, -1, -1);
    MEMORY[0x2456180C0](v4, -1, -1);

    v15(v14, v13);
  }
  else
  {
    os_log_type_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
    uint64_t v9 = *(void *)(v0 + 192);
    uint64_t v10 = *(void *)(v0 + 176);

    v8(v9, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_2410FCE00()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2410FCE40(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_24102A258;
  return sub_2410F9DBC(a1, v4, v5, v6);
}

void sub_2410FCEF4()
{
  if (!qword_268CF2000)
  {
    sub_241043774(255, (unint64_t *)&qword_26B007350, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_24115FC70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2000);
    }
  }
}

uint64_t sub_2410FCF88()
{
  return sub_2410FCF90(32);
}

uint64_t sub_2410FCF90(uint64_t a1)
{
  swift_release();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_2410FCFDC()
{
  return sub_2410F98C4();
}

void sub_2410FCFE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2410FD048()
{
  if (!qword_268CF2018)
  {
    sub_2410756F0();
    sub_2410D631C();
    sub_2410FD26C(&qword_268CF0C00, (void (*)(uint64_t))sub_2410756F0);
    sub_2410FD26C(&qword_26B006E68, (void (*)(uint64_t))sub_2410D631C);
    unint64_t v0 = sub_24115FA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2018);
    }
  }
}

void sub_2410FD134()
{
  if (!qword_268CF2020)
  {
    sub_2410FD048();
    sub_241024708(255, (unint64_t *)&qword_26B007340);
    sub_2410FD26C(&qword_268CF2028, (void (*)(uint64_t))sub_2410FD048);
    sub_24102A8F8();
    unint64_t v0 = sub_24115FC00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2020);
    }
  }
}

uint64_t sub_2410FD200(uint64_t a1)
{
  return sub_2410F8C7C(a1);
}

uint64_t sub_2410FD208()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2410FD240(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_2410FD26C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2410FD2B8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24100B740;
  return sub_2410FB4F0(a1, v4, v5, v7, v6);
}

uint64_t sub_2410FD37C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2410FD3C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24102A258;
  return sub_2410FB84C(a1, v4, v5, v7, v6);
}

void sub_2410FD484(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
}

uint64_t type metadata accessor for SharedMedicationsDetailViewController()
{
  uint64_t result = qword_268CF2058;
  if (!qword_268CF2058) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2410FD4D8()
{
  uint64_t result = type metadata accessor for SharedMedicationsFeedItemData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_2410FD570()
{
}

id sub_2410FD5CC()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SharedMedicationsFeedItemData(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24104F384((uint64_t)v0 + qword_268CF2970, (uint64_t)v4);
  uint64_t v5 = type metadata accessor for SharedMedicationsDetailDataSourceProvider();
  uint64_t v6 = swift_allocObject();
  sub_24104F384((uint64_t)v4, v6 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41SharedMedicationsDetailDataSourceProvider_feedItemData);
  sub_24115F5A0();
  swift_allocObject();
  uint64_t v7 = sub_24115F590();
  sub_24104F3E8((uint64_t)v4);
  *(void *)(v6
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41SharedMedicationsDetailDataSourceProvider_analyticsManager) = v7;
  uint64_t v14 = v5;
  uint64_t v15 = sub_2410FDEB0(&qword_268CF2068, (void (*)(uint64_t))type metadata accessor for SharedMedicationsDetailDataSourceProvider);
  uint64_t v13 = v6;
  sub_24115E740();
  sub_2410FDEB0(&qword_26B004268, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
  sub_24115F440();
  unint64_t v8 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v8);

  uint64_t v9 = (objc_class *)type metadata accessor for SharedMedicationsDetailViewController();
  v12.receiver = v1;
  v12.super_class = v9;
  return objc_msgSendSuper2(&v12, sel_viewDidLoad);
}

void sub_2410FD7DC(void *a1)
{
  id v1 = a1;
  sub_2410FD5CC();
}

id sub_2410FD824()
{
  sub_24115E750();
  id v1 = (void (*)(void))sub_24115E760();
  v1();
  sub_24115E720();
  uint64_t v2 = sub_24115E1B0();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    sub_241027EA8(0, (unint64_t *)&unk_268CF1820);
    sub_241027EA8(0, &qword_26B0069D8);
    uint64_t v4 = 0;
    while (1)
    {
      long long v9 = *(_OWORD *)(v2 + 16 * v4 + 32);
      swift_unknownObjectRetain_n();
      if (swift_dynamicCast())
      {
        sub_241027314(v7, (uint64_t)v10);
        sub_24101A6BC(v10, v10[3]);
        id result = objc_msgSend(v0, sel_collectionView);
        if (!result)
        {
          __break(1u);
          return result;
        }
        uint64_t v6 = result;
        sub_24115E390();

        swift_unknownObjectRelease();
        sub_24101F178((uint64_t)v10);
      }
      else
      {
        uint64_t v8 = 0;
        memset(v7, 0, sizeof(v7));
        swift_unknownObjectRelease();
        sub_2410FDEF8((uint64_t)v7, (unint64_t *)&unk_268CF1830, &qword_26B0069D8);
      }
      if (v3 == ++v4) {
        return (id)swift_bridgeObjectRelease();
      }
    }
  }

  return (id)swift_bridgeObjectRelease();
}

void sub_2410FDA18(void *a1)
{
  uint64_t v2 = (void *)sub_24115CD90();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  uint64_t v3 = (void *)sub_24115CD90();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_24115E720();
    sub_24115E1C0();
    sub_24115DC00();
    swift_release();
    sub_2410280A4((uint64_t)v11, (uint64_t)v8);
    sub_241027EA8(0, (unint64_t *)&qword_26B0069A8);
    sub_241027EA8(0, (unint64_t *)&unk_268CF1840);
    if (swift_dynamicCast())
    {
      uint64_t v5 = v6;
LABEL_6:
      sub_241027314(v5, (uint64_t)v10);
      sub_24101A6BC(v10, v10[3]);
      sub_24115DD60();

      sub_24101F178((uint64_t)v11);
      sub_24101F178((uint64_t)v10);
      return;
    }
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_2410FDEF8((uint64_t)v6, (unint64_t *)&qword_268CF0C28, (unint64_t *)&unk_268CF1840);
    *(void *)&v6[0] = v4;
    sub_2410FDE70();
    id v4 = v4;
    if (swift_dynamicCast())
    {
      uint64_t v5 = v8;
      goto LABEL_6;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));

    sub_24101F178((uint64_t)v11);
    sub_2410FDEF8((uint64_t)v8, (unint64_t *)&qword_268CF0C28, (unint64_t *)&unk_268CF1840);
  }
}

uint64_t sub_2410FDC3C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_24115CE00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115CDA0();
  id v9 = a3;
  id v10 = a1;
  sub_2410FDA18(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_2410FDD38()
{
}

void sub_2410FDD68(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2410FDD9C()
{
  return sub_24104F3E8(v0 + qword_268CF2970);
}

id sub_2410FDDAC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedMedicationsDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2410FDDE4(uint64_t a1)
{
  return sub_24104F3E8(a1 + qword_268CF2970);
}

uint64_t sub_2410FDDF4()
{
  return type metadata accessor for SharedMedicationsDetailViewController();
}

uint64_t sub_2410FDDFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F43BD8];
  uint64_t v3 = sub_24115D990();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

unint64_t sub_2410FDE70()
{
  unint64_t result = qword_268CF1850;
  if (!qword_268CF1850)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF1850);
  }
  return result;
}

uint64_t sub_2410FDEB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2410FDEF8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_24107632C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2410FDF54@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t **a3@<X8>)
{
  uint64_t v6 = type metadata accessor for MedicationsGeneratorContext();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24115F790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F730();
  uint64_t v13 = sub_24115F780();
  os_log_type_t v14 = sub_241160D20();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = a3;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = v17;
    uint64_t v29 = a2;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v26 = a1;
    swift_getMetatypeMetadata();
    uint64_t v18 = sub_241160760();
    uint64_t v29 = sub_24101F0A4(v18, v19, &v28);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v29 = type metadata accessor for CHRAddAccountGenerator();
    sub_24104D054(0);
    uint64_t v20 = sub_241160760();
    uint64_t v29 = sub_24101F0A4(v20, v21, &v28);
    a1 = v26;
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v13, v14, "[%{public}s]: Emitting %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v17, -1, -1);
    uint64_t v22 = v16;
    a3 = v27;
    MEMORY[0x2456180C0](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_24102732C(a1, (uint64_t)v8);
  uint64_t v23 = type metadata accessor for CHRAddAccountGenerator();
  swift_allocObject();
  uint64_t v24 = sub_24100F014((uint64_t)v8);
  a3[3] = (uint64_t *)v23;
  uint64_t result = sub_241017EE8(&qword_26B004E28, (void (*)(uint64_t))type metadata accessor for CHRAddAccountGenerator);
  a3[4] = (uint64_t *)result;
  *a3 = v24;
  return result;
}

uint64_t sub_2410FE258()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_context;
    uint64_t v3 = type metadata accessor for MedicationsGeneratorContext();
    objc_msgSend(*(id *)(v2 + *(int *)(v3 + 28)), sel_removeAccountStateChangeListener_, *(void *)(v1+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_accountStateChangeListener));
    objc_msgSend(*(id *)(v2 + *(int *)(v3 + 24)), sel_removeHealthRecordsSupportedChangeListener_, *(void *)(v1+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_healthRecordsSupportedListener));
    return swift_release();
  }
  return result;
}

uint64_t sub_2410FE30C()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_observerToken))
  {
    swift_retain();
    sub_24115D580();
    swift_release();
  }
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_domain;
  uint64_t v3 = sub_24115D130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_241017418(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_context, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  objc_release(*(id *)(v1
                     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_accountStateChangeListener));
  objc_release(*(id *)(v1
                     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin30CHRAddAccountGeneratorPipeline_healthRecordsSupportedListener));
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2410FE414()
{
  sub_2410FE30C();

  return swift_deallocClassInstance();
}

uint64_t sub_2410FE46C()
{
  return type metadata accessor for CHRAddAccountGeneratorPipeline();
}

uint64_t sub_2410FE474()
{
  uint64_t result = sub_24115D130();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MedicationsGeneratorContext();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

void sub_2410FE56C()
{
  if (!qword_26B005968)
  {
    sub_241017238(255, &qword_26B005CD0, (uint64_t (*)(uint64_t))sub_24102F7E0, MEMORY[0x263F8D488]);
    sub_24102ADC0(&qword_26B005CD8, &qword_26B005CD0, (uint64_t (*)(uint64_t))sub_24102F7E0);
    unint64_t v0 = sub_24115FBD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005968);
    }
  }
}

void sub_2410FE63C(uint64_t a1)
{
}

void sub_2410FE670(uint64_t a1)
{
}

uint64_t sub_2410FE6A4()
{
  uint64_t v1 = (int *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_2410FE7D0@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2410FDF54(v1 + v4, v5, a1);
}

uint64_t sub_2410FE87C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2410FE8B4()
{
  return sub_2410FE258();
}

void sub_2410FE8C0()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_24115CD40();
    if (v1 <= 0x3F)
    {
      sub_2410346C0(319);
      if (v2 <= 0x3F) {
        swift_initClassMetadata2();
      }
    }
  }
}

uint64_t *sub_2410FEA00()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  if (*(uint64_t *)((char *)v0 + *(void *)(*v0 + 160)))
  {
    sub_24102A354();
    swift_retain();
    sub_241160AC0();
    swift_release();
    uint64_t v1 = *v0;
  }
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(v1 + 96));
  swift_release();
  uint64_t v3 = (uint64_t)v0 + *(void *)(*v0 + 112);
  uint64_t v4 = sub_24115CD40();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5((uint64_t)v0 + *(void *)(*v0 + 120), v4);
  swift_bridgeObjectRelease();
  sub_2410FEC5C((uint64_t)v0 + *(void *)(*v0 + 152));
  swift_release();
  sub_2410FEC5C((uint64_t)v0 + *(void *)(*v0 + 168));
  return v0;
}

uint64_t sub_2410FEBEC()
{
  sub_2410FEA00();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DailyModelProvider()
{
  return sub_24104DBA0();
}

uint64_t sub_2410FEC5C(uint64_t a1)
{
  sub_2410346C0(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void (*sub_2410FED88(uint64_t *a1))(id *a1, char a2)
{
  a1[1] = v1;
  id v3 = sub_2410FF3A8();
  uint64_t v4 = sub_24115E7A0();

  *a1 = v4;
  return sub_2410FEDE8;
}

void sub_2410FEDE8(id *a1, char a2)
{
  if (a2)
  {
    id v2 = *a1;
    id v3 = sub_2410FF3A8();
    sub_24115E7B0();
  }
  else
  {
    id v3 = sub_2410FF3A8();
    sub_24115E7B0();
  }
}

void sub_2410FEE70()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin27InteractiveTimelineItemCell_item;
  swift_beginAccess();
  sub_241061700(v6, (uint64_t)v48);
  if (v48[3])
  {
    sub_2410787D4();
    type metadata accessor for InteractiveTimelineItem();
    if (swift_dynamicCast())
    {
      uint64_t v7 = (char *)v46;
      id v8 = sub_2410FF3A8();
      uint64_t v9 = (void *)sub_24115E7C0();

      if (v9)
      {
        id v10 = sub_2410FF3A8();
        uint64_t v11 = sub_24115E7C0();

        if (!v11)
        {
LABEL_13:

          return;
        }
        type metadata accessor for InteractiveTimelineViewController();
        if (!swift_dynamicCastClass())
        {
LABEL_12:

          uint64_t v7 = (char *)v11;
          goto LABEL_13;
        }
        uint64_t v12 = sub_241111ADC();
        sub_241057AB8();
        uint64_t v13 = (void *)v11;
        uint64_t v11 = (uint64_t)v12;
      }
      else
      {
        id v14 = objc_allocWithZone((Class)type metadata accessor for InteractiveTimelineViewController());
        uint64_t v15 = swift_retain();
        id v16 = sub_2410FFEC4(v15, v14);
        swift_release();
        objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin23InteractiveTimelineItem_timelineViewControllers], sel_addObject_, v16);
        sub_24115F740();
        id v17 = v1;
        id v18 = v16;
        id v19 = v17;
        id v20 = v18;
        unint64_t v21 = sub_24115F780();
        os_log_type_t v22 = sub_241160D50();
        int v23 = v22;
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v24 = swift_slowAlloc();
          uint64_t v44 = v3;
          uint64_t v25 = v24;
          uint64_t v42 = swift_slowAlloc();
          v48[0] = v42;
          *(_DWORD *)uint64_t v25 = 136446466;
          uint64_t v43 = v2;
          id v26 = objc_msgSend(v19, sel_description);
          int v41 = v23;
          id v27 = v26;
          uint64_t v28 = sub_241160730();
          id v45 = v16;
          uint64_t v29 = v28;
          os_log_t v40 = v21;
          uint64_t v30 = v19;
          unint64_t v32 = v31;

          uint64_t v46 = sub_24101F0A4(v29, v32, v48);
          sub_241161430();

          swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 12) = 2080;
          id v33 = objc_msgSend(v20, sel_description);
          uint64_t v34 = sub_241160730();
          unint64_t v36 = v35;

          uint64_t v46 = sub_24101F0A4(v34, v36, v48);
          sub_241161430();

          swift_bridgeObjectRelease();
          os_log_t v37 = v40;
          _os_log_impl(&dword_241007000, v40, (os_log_type_t)v41, "[%{public}s] Created %s", (uint8_t *)v25, 0x16u);
          uint64_t v38 = v42;
          swift_arrayDestroy();
          MEMORY[0x2456180C0](v38, -1, -1);
          MEMORY[0x2456180C0](v25, -1, -1);

          (*(void (**)(char *, uint64_t))(v44 + 8))(v5, v43);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        }
        uint64_t v11 = (uint64_t)sub_2410FF3A8();
        sub_241100044();
        id v39 = (char *)v20;
        sub_24115E7D0();
        uint64_t v13 = v7;
        uint64_t v7 = v39;
      }

      goto LABEL_12;
    }
  }
  else
  {
    sub_2410616A4((uint64_t)v48);
  }
  v48[0] = 0;
  v48[1] = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  uint64_t v46 = 0xD000000000000018;
  unint64_t v47 = 0x8000000241168280;
  sub_241061700(v6, (uint64_t)v48);
  sub_24106163C();
  sub_241160760();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_2411616B0();
  __break(1u);
}

id sub_2410FF3A8()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin27InteractiveTimelineItemCell____lazy_storage___hostView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin27InteractiveTimelineItemCell____lazy_storage___hostView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin27InteractiveTimelineItemCell____lazy_storage___hostView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)sub_24115E7E0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2410FF42C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_24115F790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin27InteractiveTimelineItemCell_item];
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin27InteractiveTimelineItemCell____lazy_storage___hostView] = 0;
  id v14 = (objc_class *)type metadata accessor for InteractiveTimelineItemCell();
  v32.receiver = v4;
  v32.super_class = v14;
  id v15 = objc_msgSendSuper2(&v32, sel_initWithFrame_, a1, a2, a3, a4);
  sub_24115F740();
  id v16 = v15;
  id v17 = sub_24115F780();
  os_log_type_t v18 = sub_241160D50();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v29 = v9;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v28 = v10;
    id v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v31 = v21;
    *(_DWORD *)id v20 = 136446210;
    v27[1] = v20 + 4;
    id v22 = objc_msgSend(v16, sel_description);
    uint64_t v23 = sub_241160730();
    unint64_t v25 = v24;

    uint64_t v30 = sub_24101F0A4(v23, v25, &v31);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v17, v18, "[%{public}s] Initialized", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v21, -1, -1);
    MEMORY[0x2456180C0](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_2410FF784();

  return v16;
}

void sub_2410FF784()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v2);

  id v3 = objc_msgSend(v1, sel_contentView);
  id v4 = sub_2410FF3A8();
  objc_msgSend(v3, sel_addSubview_, v4);

  id v5 = sub_2410FF3A8();
  id v6 = objc_msgSend(v1, sel_contentView);
  MEMORY[0x245617060]();

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v8 = objc_msgSend(v1, sel_backgroundColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v8);

  id v9 = objc_msgSend(v1, sel_contentView);
  id v10 = sub_2410FF3A8();
  objc_msgSend(v9, sel_insertSubview_belowSubview_, v7, v10);

  uint64_t v11 = self;
  sub_24104A2D8();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24116BC00;
  id v13 = objc_msgSend(v7, sel_topAnchor);
  id v14 = objc_msgSend(v1, sel_contentView);
  id v15 = objc_msgSend(v14, sel_topAnchor);

  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, -2000.0);
  *(void *)(v12 + 32) = v16;
  id v17 = objc_msgSend(v7, sel_leadingAnchor);
  id v18 = objc_msgSend(v1, sel_contentView);
  id v19 = objc_msgSend(v18, sel_leadingAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v19);
  *(void *)(v12 + 40) = v20;
  id v21 = objc_msgSend(v7, sel_trailingAnchor);
  id v22 = objc_msgSend(v1, sel_contentView);
  id v23 = objc_msgSend(v22, sel_trailingAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(void *)(v12 + 48) = v24;
  id v25 = objc_msgSend(v7, sel_bottomAnchor);
  id v26 = objc_msgSend(v1, sel_contentView);
  id v27 = objc_msgSend(v26, sel_bottomAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(void *)(v12 + 56) = v28;
  sub_2411609C0();
  sub_241061764();
  id v29 = (id)sub_241160980();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_activateConstraints_, v29);
}

id sub_2410FFBA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractiveTimelineItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InteractiveTimelineItemCell()
{
  return self;
}

uint64_t sub_2410FFC44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin27InteractiveTimelineItemCell_item;
  swift_beginAccess();
  return sub_241061700(v3, a1);
}

uint64_t sub_2410FFC98(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin27InteractiveTimelineItemCell_item;
  swift_beginAccess();
  sub_2410615D8(a1, v3);
  swift_endAccess();
  sub_2410FEE70();
  return sub_2410616A4(a1);
}

void (*sub_2410FFD08(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2410FFD68;
}

void sub_2410FFD68(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_2410FEE70();
  }
}

uint64_t sub_2410FFD9C()
{
  id v0 = sub_2410FF3A8();
  uint64_t v1 = sub_24115E7A0();

  return v1;
}

void sub_2410FFDD0()
{
  id v0 = sub_2410FF3A8();
  sub_24115E7B0();
}

void (*sub_2410FFE24(uint64_t **a1))(void *a1)
{
  objc_super v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_2410FED88(v2);
  return sub_2410FFE7C;
}

void sub_2410FFE7C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

id sub_2410FFEC4(uint64_t a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_focusIndicatorImageView;
  uint64_t v6 = qword_26B007020;
  id v7 = a2;
  if (v6 != -1) {
    swift_once();
  }
  id v8 = (void *)qword_26B00BC58;
  id v9 = objc_allocWithZone(MEMORY[0x263F82828]);
  id v10 = v8;
  id v11 = objc_msgSend(v9, sel_initWithImage_, v10);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v12 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v11, sel_setTintColor_, v12);

  *(void *)&v7[v5] = v11;
  *(void *)&v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController____lazy_storage___timelineViewController] = 0;
  *(void *)&v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_dateIndicator] = 0;
  *(void *)&v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_timelineHeight] = 0;
  id v13 = &v7[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_timelineDataProvider];
  *(void *)id v13 = a1;
  *((void *)v13 + 1) = &off_26F555108;
  swift_unknownObjectRetain();

  v15.receiver = v7;
  v15.super_class = ObjectType;
  return objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, 0, 0);
}

unint64_t sub_241100044()
{
  unint64_t result = qword_26B006C90;
  if (!qword_26B006C90)
  {
    type metadata accessor for InteractiveTimelineViewController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B006C90);
  }
  return result;
}

id sub_24110009C()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter____lazy_storage___relativeDateFormatter;
  objc_super v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter____lazy_storage___relativeDateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter____lazy_storage___relativeDateFormatter);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    objc_msgSend(v4, sel_setDateStyle_, 1);
    objc_msgSend(v4, sel_setDoesRelativeDateFormatting_, 1);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_241100138()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter____lazy_storage___nonRelativeDateFormatter;
  objc_super v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter____lazy_storage___nonRelativeDateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter____lazy_storage___nonRelativeDateFormatter);
  }
  else
  {
    id v4 = sub_24110009C();
    objc_msgSend(v4, sel_copy);

    sub_2411614D0();
    swift_unknownObjectRelease();
    sub_24110133C();
    swift_dynamicCast();
    objc_msgSend(v8, sel_setDoesRelativeDateFormatting_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v8;
    id v3 = v8;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_24110020C()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter____lazy_storage___dynamicRelativeDateFormatter;
  objc_super v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter____lazy_storage___dynamicRelativeDateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter____lazy_storage___dynamicRelativeDateFormatter);
  }
  else
  {
    id v4 = sub_24110009C();
    objc_msgSend(v4, sel_copy);

    sub_2411614D0();
    swift_unknownObjectRelease();
    sub_24110133C();
    swift_dynamicCast();
    objc_msgSend(v8, sel_setFormattingContext_, 1);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v8;
    id v3 = v8;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2411002E0(char a1)
{
  char v2 = a1 & 1;
  uint64_t v3 = sub_24115CB90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter____lazy_storage___relativeDateFormatter] = 0;
  *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter____lazy_storage___nonRelativeDateFormatter] = 0;
  *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter____lazy_storage___dynamicRelativeDateFormatter] = 0;
  v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter_style] = v2;
  id v7 = objc_allocWithZone(MEMORY[0x263F08790]);
  id v8 = v1;
  id v9 = objc_msgSend(v7, sel_init);
  sub_24115CB80();
  id v10 = (void *)sub_24115CB60();
  id v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  objc_msgSend(v9, sel_setLocale_, v10);

  objc_msgSend(v9, sel_setFormattingContext_, 2);
  id v12 = (void *)sub_2411606F0();
  objc_msgSend(v9, sel_setLocalizedDateFormatFromTemplate_, v12);

  *(void *)&v8[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter_weekdayMonthAndDayFormatter] = v9;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  sub_24115CB80();
  id v14 = (void *)sub_24115CB60();
  v11(v6, v3);
  objc_msgSend(v13, sel_setLocale_, v14);

  objc_msgSend(v13, sel_setFormattingContext_, 1);
  objc_super v15 = (void *)sub_2411606F0();
  objc_msgSend(v13, sel_setLocalizedDateFormatFromTemplate_, v15);

  *(void *)&v8[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter_justMonthAndDayFormatter] = v13;
  id v16 = (objc_class *)type metadata accessor for RelativeWeekdayWithMonthAndDayFormatter();
  v18.receiver = v8;
  v18.super_class = v16;
  return objc_msgSendSuper2(&v18, sel_init);
}

uint64_t sub_2411006B0(uint64_t a1)
{
  char v2 = v1;
  uint64_t v4 = sub_24115CB10();
  uint64_t v87 = *(void *)(v4 - 8);
  uint64_t v88 = v4;
  MEMORY[0x270FA5388](v4);
  double v86 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  CGFloat v89 = (char *)&v76 - v7;
  uint64_t v8 = sub_24115CCC0();
  CGFloat v91 = *(void **)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v90 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24110137C(0, &qword_26B007210, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v85 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)&v76 - v13;
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)&v76 - v16;
  id v18 = sub_24110009C();
  id v19 = (void *)sub_24115CAA0();
  id v20 = objc_msgSend(v18, sel_stringFromDate_, v19);

  uint64_t v21 = sub_241160730();
  uint64_t v23 = v22;

  id v24 = sub_241100138();
  id v25 = (void *)sub_24115CAA0();
  id v26 = objc_msgSend(v24, sel_stringFromDate_, v25);

  uint64_t v27 = sub_241160730();
  uint64_t v29 = v28;

  if (v21 == v27 && v23 == v29)
  {
    swift_bridgeObjectRelease_n();
LABEL_5:
    uint64_t v31 = *(void **)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter_weekdayMonthAndDayFormatter];
    objc_super v32 = (void *)sub_24115CAA0();
    id v33 = objc_msgSend(v31, sel_stringFromDate_, v32);

    uint64_t v34 = sub_241160730();
    return v34;
  }
  char v30 = sub_241161890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_5;
  }
  id v35 = objc_msgSend(v2, sel_calendar);
  if (!v35)
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v91[7])(v17, 1, 1, v8);
    goto LABEL_24;
  }
  unint64_t v36 = v35;
  id v84 = v2;
  os_log_t v37 = v90;
  sub_24115CC50();

  uint64_t v38 = v91;
  id v81 = (void (*)(char *, char *, uint64_t))v91[4];
  uint64_t v78 = v91 + 4;
  v81(v17, v37, v8);
  long long v82 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v38[7];
  id v83 = v38 + 7;
  v82(v17, 0, 1, v8);
  uint64_t v80 = (unsigned int (*)(char *, uint64_t, uint64_t))v38[6];
  if (v80(v17, 1, v8) == 1)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    v82(v14, 1, 1, v8);
    goto LABEL_26;
  }
  char v39 = sub_24115CBE0();
  os_log_t v40 = (void (*)(char *, uint64_t))v38[1];
  CGFloat v91 = v38 + 1;
  unint64_t v79 = v40;
  v40(v17, v8);
  uint64_t v41 = v87;
  uint64_t v42 = v88;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
  uint64_t v44 = v89;
  v43(v89, a1, v88);
  if (v39)
  {
    id v45 = *(void (**)(char *, uint64_t))(v41 + 8);
    v45(v44, v42);
    uint64_t v46 = v86;
    v43(v86, a1, v42);
LABEL_14:
    v45(v46, v42);
    char v2 = v84;
    goto LABEL_15;
  }
  unint64_t v77 = v43;
  id v47 = objc_msgSend(v84, sel_calendar);
  if (!v47) {
    goto LABEL_25;
  }
  id v48 = v47;
  unint64_t v49 = v90;
  sub_24115CC50();

  v81(v14, v49, v8);
  v82(v14, 0, 1, v8);
  unsigned int v50 = v80(v14, 1, v8);
  uint64_t v51 = v89;
  if (v50 == 1)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v82)(v85, 1, 1, v8);
    goto LABEL_28;
  }
  char v52 = sub_24115CC00();
  uint64_t v53 = v51;
  uint64_t v42 = v88;
  CGFloat v89 = *(char **)(v87 + 8);
  ((void (*)(char *, uint64_t))v89)(v53, v88);
  v79(v14, v8);
  uint64_t v46 = v86;
  v77(v86, a1, v42);
  if (v52)
  {
    id v45 = (void (*)(char *, uint64_t))v89;
    goto LABEL_14;
  }
  id v71 = objc_msgSend(v84, sel_calendar);
  if (!v71) {
    goto LABEL_27;
  }
  uint64_t v72 = v71;
  uint64_t v73 = v90;
  sub_24115CC50();

  uint64_t v74 = v85;
  v81(v85, v73, v8);
  v82(v74, 0, 1, v8);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v80)(v74, 1, v8);
  if (result != 1)
  {
    char v75 = sub_24115CC10();
    ((void (*)(char *, uint64_t))v89)(v46, v42);
    v79(v74, v8);
    char v2 = v84;
    if ((v75 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_15:
    id v54 = sub_24110020C();
    uint64_t v55 = (void *)sub_24115CAA0();
    id v56 = objc_msgSend(v54, sel_stringFromDate_, v55);

    uint64_t v57 = sub_241160730();
    uint64_t v59 = v58;

    uint64_t v60 = *(void **)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin39RelativeWeekdayWithMonthAndDayFormatter_justMonthAndDayFormatter];
    long long v61 = (void *)sub_24115CAA0();
    id v62 = objc_msgSend(v60, sel_stringFromDate_, v61);

    uint64_t v63 = sub_241160730();
    uint64_t v65 = v64;

    if (qword_26B007268 != -1) {
      swift_once();
    }
    id v66 = (id)static LocalizationSource.medicationsHealthAppPlugin;
    swift_bridgeObjectRetain();
    sub_24115C960();
    swift_bridgeObjectRelease();

    sub_24110137C(0, (unint64_t *)&qword_26B007398, (uint64_t (*)(uint64_t))sub_2410C4D1C, MEMORY[0x263F8E0F8]);
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_24116B200;
    uint64_t v68 = MEMORY[0x263F8D310];
    *(void *)(v67 + 56) = MEMORY[0x263F8D310];
    unint64_t v69 = sub_2410484D8();
    *(void *)(v67 + 32) = v57;
    *(void *)(v67 + 40) = v59;
    *(void *)(v67 + 96) = v68;
    *(void *)(v67 + 104) = v69;
    *(void *)(v67 + 64) = v69;
    *(void *)(v67 + 72) = v63;
    *(void *)(v67 + 80) = v65;
    uint64_t v34 = sub_241160750();
    swift_bridgeObjectRelease();
    return v34;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_24110110C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RelativeWeekdayWithMonthAndDayFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RelativeWeekdayWithMonthAndDayFormatter()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for RelativeWeekdayWithMonthAndDayFormatter.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2411012ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RelativeWeekdayWithMonthAndDayFormatter.Style()
{
  return &type metadata for RelativeWeekdayWithMonthAndDayFormatter.Style;
}

unint64_t sub_2411012E8()
{
  unint64_t result = qword_268CF20B0;
  if (!qword_268CF20B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF20B0);
  }
  return result;
}

unint64_t sub_24110133C()
{
  unint64_t result = qword_26B006F78;
  if (!qword_26B006F78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B006F78);
  }
  return result;
}

void sub_24110137C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411013E0@<X0>(id a1@<X1>, char a2@<W0>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  if (a3) {
    int v8 = 0;
  }
  else {
    int v8 = objc_msgSend(a1, sel_accountSupportsSecureContainer);
  }
  uint64_t v9 = sub_24115D1E0();
  uint64_t v10 = MEMORY[0x263F456B8];
  a5[3] = v9;
  a5[4] = v10;
  uint64_t v11 = sub_2410277C0(a5);
  return sub_24113736C(a4, a2 & 1, v8, (uint64_t)v11);
}

uint64_t sub_241101464()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsOnboardingGeneratorPipeline_domain;
  uint64_t v2 = sub_24115D130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsOnboardingGeneratorPipeline_changeProvider));
  sub_241018340(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin38MedicationsOnboardingGeneratorPipeline_medicationsContext);

  return swift_deallocClassInstance();
}

uint64_t sub_24110152C()
{
  return type metadata accessor for MedicationsOnboardingGeneratorPipeline();
}

uint64_t sub_241101534()
{
  uint64_t result = sub_24115D130();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MedicationsGeneratorContext();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void sub_24110161C()
{
  if (!qword_26B006000)
  {
    sub_241024708(255, &qword_26B005E68);
    sub_241020840(255, (unint64_t *)&qword_26B0073B0);
    unint64_t v0 = sub_2411619B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006000);
    }
  }
}

uint64_t sub_2411016AC()
{
  uint64_t v1 = (int *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_2411017CC@<X0>(char a1@<W0>, void *a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  char v8 = a3 & 1;
  uint64_t v9 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v10 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_2411013E0(a2, a1, v8, v10, a4);
}

uint64_t sub_241101864()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24110189C(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*a1, *((void *)a1 + 1), a1[16]);
}

double sub_2411018D4(double a1)
{
  id v3 = objc_msgSend(v1, sel_window);
  if (!v3 || (uint64_t v4 = v3, v5 = objc_msgSend(v3, sel_screen), v4, !v5)) {
    id v5 = objc_msgSend(self, sel_mainScreen);
  }
  objc_msgSend(v5, sel_scale);
  double v7 = v6;

  return round(v7 * a1) / v7;
}

double sub_241101984(uint64_t a1, double a2)
{
  uint64_t v5 = sub_241161870();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = MEMORY[0x270FA5388](v5).n128_u64[0];
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(v2, sel_window, v7);
  if (!v10
    || (uint64_t v11 = v10, v12 = objc_msgSend(v10, sel_screen), v11, !v12))
  {
    id v12 = objc_msgSend(self, sel_mainScreen);
  }
  objc_msgSend(v12, sel_scale);
  double v14 = v13;

  double v15 = v14 * a2;
  double v21 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v16 == *MEMORY[0x263F8E210])
  {
    double v17 = round(v15);
  }
  else if (v16 == *MEMORY[0x263F8E208])
  {
    double v17 = rint(v15);
  }
  else if (v16 == *MEMORY[0x263F8E218])
  {
    double v17 = ceil(v15);
  }
  else if (v16 == *MEMORY[0x263F8E220])
  {
    double v17 = floor(v15);
  }
  else if (v16 == *MEMORY[0x263F8E1F8])
  {
    double v17 = trunc(v15);
  }
  else if (v16 == *MEMORY[0x263F8E200])
  {
    double v17 = ceil(v15);
    double v18 = floor(v15);
    if (v15 < 0.0) {
      double v17 = v18;
    }
  }
  else
  {
    sub_241160B50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    double v17 = v21;
  }
  return v17 / v14;
}

uint64_t sub_241101BE4()
{
  self;
  uint64_t v1 = (void *)swift_dynamicCastObjCClass();
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  id v2 = objc_msgSend(v1, sel_collectionView);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  id v3 = v2;
  sub_241053D48();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24116B370;
  uint64_t v5 = *(void **)(v0 + 24);
  type metadata accessor for ArchivedMedicationsListDataSource();
  *(void *)(swift_allocObject() + qword_268CF2138) = 0;
  swift_retain();
  id v6 = v5;
  id v7 = v3;
  uint64_t v8 = sub_24115D5C0();
  uint64_t v9 = MEMORY[0x263F440A0];
  *(void *)(v4 + 32) = v8;
  *(void *)(v4 + 40) = v9;

  return v4;
}

uint64_t sub_241101CE0()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArchivedMedicationsDataSourceProvider()
{
  return self;
}

uint64_t sub_241101D44()
{
  return sub_241101BE4();
}

void *sub_241101D68(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2411605E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    id v10 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v10;
    uint64_t v11 = (void *)((char *)a1 + v9);
    id v12 = (void *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    id v14 = v10;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_241101E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2411605E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_241101EE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2411605E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  id v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  id v13 = v9;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241101F84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2411605E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_241102044(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2411605E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_2411020D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2411605E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[6];
  id v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  void *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_241102180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241102194);
}

uint64_t sub_241102194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2411605E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_241102254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241102268);
}

uint64_t sub_241102268(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2411605E0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TimelineDay()
{
  uint64_t result = qword_26B003998;
  if (!qword_26B003998) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241102370()
{
  uint64_t result = sub_2411605E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24110241C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TimelineDay();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v18 - v11;
  uint64_t v13 = *(int *)(v10 + 36);
  int v14 = *(unsigned __int8 *)(v3 + v13);
  sub_2410DB2AC(v3, (uint64_t)v18 - v11);
  sub_2410DB2AC(a2, (uint64_t)v9);
  if (v14 == a1)
  {
    int v15 = 0;
  }
  else
  {
    sub_2411605E0();
    sub_241102640();
    sub_241161460();
    BOOL v16 = v18[1] != 0;
    if ((v16 | sub_241102560((uint64_t)v9, (uint64_t)v12))) {
      int v15 = 0;
    }
    else {
      int v15 = 256;
    }
  }
  sub_241102698((uint64_t)v9);
  sub_241102698((uint64_t)v12);
  return v15 | *(unsigned __int8 *)(v3 + v13);
}

BOOL sub_241102560(uint64_t a1, uint64_t a2)
{
  sub_2411605E0();
  sub_241102640();
  sub_241161460();
  if (v12) {
    return 0;
  }
  sub_24103C4BC();
  uint64_t v4 = type metadata accessor for TimelineDay();
  if ((sub_2411612E0() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  if (v6 == *v8 && v7 == v8[1]) {
    return *(unsigned __int8 *)(a1 + *(int *)(v4 + 28)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 28));
  }
  char v10 = sub_241161890();
  BOOL result = 0;
  if (v10) {
    return *(unsigned __int8 *)(a1 + *(int *)(v4 + 28)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 28));
  }
  return result;
}

unint64_t sub_241102640()
{
  unint64_t result = qword_268CF09A0;
  if (!qword_268CF09A0)
  {
    sub_2411605E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF09A0);
  }
  return result;
}

uint64_t sub_241102698(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TimelineDay();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for TimelineLogIndicatorAppearance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2411027C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimelineLogIndicatorAppearance()
{
  return &type metadata for TimelineLogIndicatorAppearance;
}

unint64_t sub_2411027FC()
{
  unint64_t result = qword_268CF20B8;
  if (!qword_268CF20B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF20B8);
  }
  return result;
}

uint64_t sub_241102850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_241160A70();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_241160A60();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24101A8A4(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_241160A20();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_241104004();
  return swift_task_create();
}

void *TipDataSource.init(healthStore:viewController:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24115CB50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  *(void *)(v3 + direct field offset for TipDataSource.healthStore) = a1;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  id v10 = a1;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  strcpy((char *)v16, "MutableArray<");
  HIWORD(v16[1]) = -4864;
  sub_24115CB40();
  sub_24115CB20();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  uint64_t v11 = (void *)sub_24115DE40();
  uint64_t v12 = *(void (**)(uint64_t))(class metadata base offset for TipDataSource + *v11 + 56);
  uint64_t v13 = swift_retain();
  v12(v13);
  swift_release();

  return v11;
}

uint64_t TipDataSource.deinit()
{
  uint64_t v0 = sub_24115DE70();

  swift_unknownObjectWeakDestroy();
  return v0;
}

void TipDataSource.__allocating_init(arrangedSections:identifier:)()
{
}

uint64_t TipDataSource.viewController.getter()
{
  uint64_t v1 = v0 + direct field offset for TipDataSource.viewController;
  swift_beginAccess();
  return MEMORY[0x2456181C0](v1);
}

void TipDataSource.viewController.setter(void *a1)
{
}

void (*TipDataSource.viewController.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = direct field offset for TipDataSource.viewController;
  void v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x2456181C0](v5);
  return sub_241102DB0;
}

void sub_241102DB0(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }

  free(v3);
}

Swift::Void __swiftcall TipDataSource.showTipIfNeeded()()
{
  uint64_t v1 = *v0;
  sub_24101A930(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  __n128 v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v11 - v4;
  if ((*(uint64_t (**)(__n128))(class metadata base offset for TipDataSource + v1 + 48))(v3))
  {
    uint64_t v6 = sub_241160A70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    sub_241160A50();
    swift_retain();
    uint64_t v8 = sub_241160A40();
    uint64_t v9 = (void *)swift_allocObject();
    uint64_t v10 = MEMORY[0x263F8F500];
    v9[2] = v8;
    v9[3] = v10;
    v9[4] = v7;
    v9[5] = v1;
    swift_release();
    sub_24101A700((uint64_t)v5, (uint64_t)&unk_268CF20D8, (uint64_t)v9);
    swift_release();
  }
}

Swift::Void __swiftcall TipDataSource.hideItem()()
{
  uint64_t v0 = sub_24115F790();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  __n128 v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TipDataSource();
  if (sub_24115DBD0() < 1 || sub_24115DBC0() < 1)
  {
    sub_24115F740();
    uint64_t v4 = sub_24115F780();
    os_log_type_t v5 = sub_241160D10();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v11 = v7;
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v8 = sub_241161A00();
      uint64_t v10 = sub_24101F0A4(v8, v9, &v11);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v4, v5, "[%s] Attempting to hide a nonexistent item. Nothing to do.", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v7, -1, -1);
      MEMORY[0x2456180C0](v6, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    MEMORY[0x270F33620](0);
  }
}

Swift::Void __swiftcall TipDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t TipDataSource.layout(for:environment:)()
{
  uint64_t v0 = sub_24115DF90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  __n128 v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115DF30();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_24115DF40();
  uint64_t v5 = sub_24115DF80();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

id TipDataSource.healthStore.getter()
{
  return *(id *)(v0 + direct field offset for TipDataSource.healthStore);
}

void *TipDataSource.__allocating_init(healthStore:viewController:)(void *a1, void *a2)
{
  return TipDataSource.init(healthStore:viewController:)(a1, a2);
}

Swift::Bool __swiftcall TipDataSource.shouldShowTip()()
{
  return 1;
}

uint64_t sub_241103424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = sub_24115F790();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  sub_241160A50();
  v5[11] = sub_241160A40();
  uint64_t v8 = sub_241160A20();
  return MEMORY[0x270FA2498](sub_241103518, v8, v7);
}

uint64_t sub_241103518()
{
  double v17 = v0;
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_24115F740();
    __n128 v3 = sub_24115F780();
    os_log_type_t v4 = sub_241160D50();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v7 = v0[9];
    uint64_t v6 = v0[10];
    uint64_t v8 = v0[8];
    if (v5)
    {
      uint64_t v15 = v0[10];
      unint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v16 = v10;
      *(_DWORD *)unint64_t v9 = 136315138;
      uint64_t v11 = sub_241161A00();
      v0[5] = sub_24101F0A4(v11, v12, &v16);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v3, v4, "[%s] Will show tip item", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v10, -1, -1);
      MEMORY[0x2456180C0](v9, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v8);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    }
    sub_24101A930(0, (unint64_t *)&qword_26B0070A0, (uint64_t (*)(uint64_t))sub_2410787D4, MEMORY[0x263F8E0F8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_24116B370;
    (*(void (**)(void))(class metadata base offset for TipDataSource + *v2 + 64))();
    sub_24115DE60();
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

void TipDataSource.makeTipItem()()
{
}

void TipDataSource.init(arrangedSections:identifier:)()
{
}

uint64_t sub_241103880()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2411038B8()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2411038F8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24100B740;
  return sub_241103424(a1, v4, v5, v7, v6);
}

uint64_t type metadata accessor for TipDataSource()
{
  uint64_t result = qword_268CF20E8;
  if (!qword_268CF20E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241103A04()
{
  return swift_unknownObjectWeakDestroy();
}

uint64_t TipDataSource.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocClassInstance();
}

uint64_t sub_241103AA4()
{
  return sub_241160DE0();
}

uint64_t sub_241103B14()
{
  uint64_t v0 = sub_24115DF90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  __n128 v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115DF30();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_24115DF40();
  uint64_t v5 = sub_24115DF80();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_241103C0C()
{
  return sub_24115E790();
}

uint64_t sub_241103C68()
{
  return sub_241103CB0(&qword_268CF20E0, (void (*)(uint64_t))type metadata accessor for TipDataSource);
}

uint64_t sub_241103CB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_241103CF8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241103D50()
{
  return type metadata accessor for TipDataSource();
}

uint64_t sub_241103D58(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  __n128 v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *__n128 v3 = v2;
  v3[1] = sub_241103E38;
  return v5(v2 + 32);
}

uint64_t sub_241103E38()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  __n128 v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_241103F4C(uint64_t a1)
{
  id v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24100B740;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268CF20F8 + dword_268CF20F8);
  return v6(a1, v4);
}

void sub_241104004()
{
  if (!qword_268CF2108)
  {
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2108);
    }
  }
}

uint64_t sub_241104060()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t MedicationsFollowUpNotificationsItem.isOn.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + direct field offset for MedicationsFollowUpNotificationsItem.isOn);
  swift_beginAccess();
  return *v1;
}

uint64_t MedicationsFollowUpNotificationsItem.isOn.setter(char a1)
{
  __n128 v3 = (unsigned char *)(v1 + direct field offset for MedicationsFollowUpNotificationsItem.isOn);
  uint64_t result = swift_beginAccess();
  *__n128 v3 = a1;
  return result;
}

uint64_t (*MedicationsFollowUpNotificationsItem.isOn.modify())()
{
  return j__swift_endAccess;
}

uint64_t MedicationsFollowUpNotificationsItem.validateSwitchValueChange(for:)()
{
  return 1;
}

void MedicationsFollowUpNotificationsItem.__allocating_init(image:text:detailText:backgroundColor:)()
{
}

void MedicationsFollowUpNotificationsItem.init(image:text:detailText:backgroundColor:)()
{
}

uint64_t sub_2411041F8()
{
  return swift_release();
}

uint64_t MedicationsFollowUpNotificationsItem.deinit()
{
  uint64_t v0 = sub_24115E0B0();
  swift_release();
  return v0;
}

uint64_t MedicationsFollowUpNotificationsItem.__deallocating_deinit()
{
  sub_24115E0B0();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241104290()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + direct field offset for MedicationsFollowUpNotificationsItem.isOn);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2411042DC(uint64_t a1)
{
  *(void *)(v1 + qword_268CF2120) = a1;
  swift_retain();
  swift_retain();
  *(unsigned char *)(v1 + direct field offset for MedicationsFollowUpNotificationsItem.isOn) = sub_24115F000() & 1;
  swift_release();
  if (qword_26B007268 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24115C960();

  return MEMORY[0x270F339E8](0, v3, v2, 0, 0, 0);
}

void _s26MedicationsHealthAppPlugin0A25FollowUpNotificationsItemC24handleSwitchValueChanged_3forySb_0B12ExperienceUI0J18CollectionViewCellCtF_0(char a1)
{
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F720();
  uint64_t v6 = sub_24115F780();
  os_log_type_t v7 = sub_241160D50();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v21 = v2;
    uint64_t v9 = v8;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v23 = v20;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = sub_241161A00();
    uint64_t v22 = sub_24101F0A4(v10, v11, &v23);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    if (a1) {
      uint64_t v12 = 28271;
    }
    else {
      uint64_t v12 = 6710895;
    }
    if (a1) {
      unint64_t v13 = 0xE200000000000000;
    }
    else {
      unint64_t v13 = 0xE300000000000000;
    }
    uint64_t v22 = sub_24101F0A4(v12, v13, &v23);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v6, v7, "[%s]: Notification setting switch toggled to %s", (uint8_t *)v9, 0x16u);
    uint64_t v14 = v20;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v14, -1, -1);
    MEMORY[0x2456180C0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_24115F010();
  uint64_t v15 = (void *)*MEMORY[0x263F44BB0];
  sub_2410B37D8();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24116B370;
  *(void *)(inited + 32) = sub_241160730();
  *(void *)(inited + 40) = v17;
  id v18 = v15;
  sub_241025580(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  id v19 = (void *)sub_241160BB0();
  swift_bridgeObjectRelease();
  HKSynchronizeNanoPreferencesUserDefaults();
}

uint64_t type metadata accessor for MedicationsFollowUpNotificationsItem()
{
  uint64_t result = qword_268CF2128;
  if (!qword_268CF2128) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241104764()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2411047BC()
{
  return type metadata accessor for MedicationsFollowUpNotificationsItem();
}

uint64_t ArchivedMedicationsListDataSource.__allocating_init(listManager:healthStore:collectionView:)()
{
  *(void *)(swift_allocObject() + qword_268CF2138) = 0;
  return sub_24115D5C0();
}

uint64_t _s26MedicationsHealthAppPlugin08ArchivedA14ListDataSourceC13makePublisher7Combine03AnyJ0VySay0bA2UI010MedicationF4ItemCG_AKts5NeverOGyF_0()
{
  uint64_t v1 = qword_268CF2138;
  if (*(void *)(v0 + qword_268CF2138))
  {
    uint64_t v2 = *(void *)(v0 + qword_268CF2138);
  }
  else
  {
    uint64_t v2 = sub_24110488C(v0);
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_24110488C(uint64_t a1)
{
  v18[1] = a1;
  id v19 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_241105F50(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v18 - v2;
  sub_2410931A0();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24110612C();
  uint64_t v20 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115D5B0();
  uint64_t v13 = sub_24115F630();
  swift_release();
  uint64_t v22 = v13;
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v21 = (id)sub_241160EF0();
  uint64_t v14 = sub_241160EB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
  sub_24102BDBC();
  sub_2411061F0(&qword_26B0072C0, (void (*)(uint64_t))sub_24102BDBC);
  sub_24102A8F8();
  sub_24115FF10();
  sub_2410253D4((uint64_t)v3, (unint64_t *)&qword_26B0071C0, v19);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_2410D667C();
  sub_2411061F0(&qword_26B006E18, (void (*)(uint64_t))sub_2410931A0);
  sub_24115FE70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_2411061F0(&qword_268CF2158, (void (*)(uint64_t))sub_24110612C);
  uint64_t v15 = v20;
  uint64_t v16 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v15);
  return v16;
}

uint64_t sub_241104C68@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24115F6B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = sub_24115F640();
    uint64_t v13 = v2;
    uint64_t v14 = v7;
    swift_getKeyPath();
    sub_241081524();
    sub_2411061F0((unint64_t *)&unk_268CF2160, (void (*)(uint64_t))sub_241081524);
    sub_2411061F0((unint64_t *)&unk_26B007230, MEMORY[0x263F07490]);
    sub_241160910();
    swift_bridgeObjectRelease();
    swift_release();
    sub_24115F690();
    sub_24115F680();
    sub_24115F670();
    unint64_t v8 = sub_241062014(MEMORY[0x263F8EE78]);
    unint64_t v9 = sub_2410D0AD4((uint64_t)v5, v8);
    unint64_t v11 = v10;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v13);
  }
  else
  {
    unint64_t v9 = MEMORY[0x263F8EE78];
    unint64_t v11 = MEMORY[0x263F8EE78];
  }
  *a1 = v9;
  a1[1] = v11;
  return result;
}

void sub_241104EAC(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_creationDate);
  sub_24115CAE0();
}

uint64_t ArchivedMedicationsListDataSource.sectionsForItems(listItems:nonListItems:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = sub_24115E9F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x263F07690];
  sub_241105F50(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v14 - v9;
  sub_241105F50(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_24115DDF0();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24116B370;
  uint64_t v12 = sub_24115CB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  sub_24115E9E0();
  sub_24115EF20();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_2410253D4((uint64_t)v10, (unint64_t *)&qword_26B007200, v7);
  sub_2410CF248(a2);
  sub_24115DDE0();
  return v11;
}

Swift::String_optional __swiftcall ArchivedMedicationsListDataSource.buttonText(for:)(Swift::Int a1)
{
  uint64_t v2 = sub_24115E9F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241105F50(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = 0;
  unint64_t v10 = 0;
  if (!a1)
  {
    uint64_t v11 = sub_24115CB90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
    sub_24115E9E0();
    uint64_t v9 = sub_24115EF20();
    unint64_t v10 = v12;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_2410253D4((uint64_t)v8, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
  }
  uint64_t v13 = v9;
  uint64_t v14 = v10;
  result.value._object = v14;
  result.value._countAndFlagsBits = v13;
  return result;
}

uint64_t (*ArchivedMedicationsListDataSource.buttonTappedCallback(for:)(uint64_t a1))()
{
  id v1 = nullsub_1;
  if (!a1)
  {
    swift_allocObject();
    swift_weakInit();
    return sub_241105FEC;
  }
  return v1;
}

uint64_t sub_241105470()
{
  uint64_t v0 = sub_241160410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&aBlock[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_241160440();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    sub_241024708(0, (unint64_t *)&qword_26B007340);
    uint64_t v10 = sub_241160EF0();
    uint64_t v13 = v4;
    uint64_t v11 = (void *)v10;
    aBlock[4] = sub_2410D601C;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24101AFBC;
    aBlock[3] = &unk_26F557650;
    uint64_t v12 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_241160430();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_2411061F0(&qword_26B0072E0, MEMORY[0x263F8F030]);
    sub_241105F50(0, (unint64_t *)&unk_26B0072F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_241024138();
    sub_2411614F0();
    MEMORY[0x245616D40](0, v7, v3, v12);
    _Block_release(v12);
    swift_release();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
  }
  return result;
}

Swift::Void __swiftcall ArchivedMedicationsListDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_2410D5934();
  uint64_t v2 = (void (*)(UICollectionView *))sub_24115D5F0();
  v2(a1);
  sub_24115EB40();
  sub_2411061F0(&qword_26B0069F8, MEMORY[0x263F44DE8]);
  sub_241160DE0();
  sub_24115DFD0();
  sub_241160DE0();
  sub_24115E450();
  sub_241160DE0();
}

uint64_t ArchivedMedicationsListDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v45 = a3;
  uint64_t v5 = sub_24115CB50();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24115F9D0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24115E9F0();
  uint64_t v44 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241105F50(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v39 - v16;
  BOOL v19 = sub_241160730() == a1 && v18 == a2;
  uint64_t v43 = v11;
  if (v19)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  os_log_t v40 = v8;
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  char v20 = sub_241161890();
  swift_bridgeObjectRelease();
  if (v20)
  {
LABEL_10:
    uint64_t v22 = sub_24115CB90();
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    v23(v17, 1, 1, v22);
    sub_24115E9E0();
    id v24 = v45;
    uint64_t v25 = sub_24115EF20();
    uint64_t v41 = v26;
    uint64_t v42 = v25;
    uint64_t v27 = *(void (**)(char *, uint64_t))(v44 + 8);
    v27(v14, v12);
    uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x263F07690];
    sub_2410253D4((uint64_t)v17, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
    v23(v17, 1, 1, v22);
    sub_24115E9E0();
    sub_24115EF20();
    v27(v14, v12);
    sub_2410253D4((uint64_t)v17, (unint64_t *)&qword_26B007200, v28);
    swift_allocObject();
    swift_weakInit();
    sub_24115F970();
    uint64_t v29 = sub_24115D8A0();
    swift_allocObject();
    uint64_t v30 = sub_24115D890();
    void v24[3] = v29;
    uint64_t result = sub_2411061F0((unint64_t *)&qword_26B0069B8, MEMORY[0x263F43AA8]);
    v24[4] = result;
    uint64_t *v24 = v30;
    return result;
  }
  if (sub_241160730() == a1 && v21 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v33 = sub_24115CB90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v17, 1, 1, v33);
    sub_24115E9E0();
    sub_24115EF20();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v12);
    sub_2410253D4((uint64_t)v17, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
    uint64_t v46 = 0x74497265746F6F46;
    unint64_t v47 = 0xEB000000005F6D65;
    uint64_t v34 = v40;
    sub_24115CB40();
    sub_24115CB20();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v42);
    sub_241160860();
    swift_bridgeObjectRelease();
    uint64_t v35 = sub_24115E480();
    unint64_t v36 = v45;
    v45[3] = v35;
    v36[4] = sub_2411061F0(&qword_268CF07F0, MEMORY[0x263F44568]);
    sub_2410277C0(v36);
    return sub_24115E470();
  }
  char v32 = sub_241161890();
  swift_bridgeObjectRelease();
  if (v32) {
    goto LABEL_13;
  }
  uint64_t v37 = sub_24115DA70();
  uint64_t v38 = v45;
  v45[3] = v37;
  unsigned char v38[4] = sub_2411061F0(&qword_268CF07E8, MEMORY[0x263F43D00]);
  sub_2410277C0(v38);
  return sub_24115DA60();
}

uint64_t ArchivedMedicationsListDataSource.init(listManager:healthStore:collectionView:)()
{
  *(void *)(v0 + qword_268CF2138) = 0;
  return sub_24115D5C0();
}

void sub_241105F50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241105FB4()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241105FEC()
{
  return sub_241105470();
}

uint64_t sub_241105FF4()
{
  return swift_release();
}

uint64_t ArchivedMedicationsListDataSource.deinit()
{
  uint64_t v0 = sub_24115D600();
  swift_release();
  return v0;
}

uint64_t ArchivedMedicationsListDataSource.__deallocating_deinit()
{
  sub_24115D600();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArchivedMedicationsListDataSource()
{
  uint64_t result = qword_268CF2140;
  if (!qword_268CF2140) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2411060D8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241106124()
{
  return type metadata accessor for ArchivedMedicationsListDataSource();
}

void sub_24110612C()
{
  if (!qword_268CF2150)
  {
    sub_2410931A0();
    sub_2410D667C();
    sub_2411061F0(&qword_26B006E18, (void (*)(uint64_t))sub_2410931A0);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2150);
    }
  }
}

uint64_t sub_2411061D8@<X0>(unint64_t *a1@<X8>)
{
  return sub_241104C68(a1);
}

char *sub_2411061E0()
{
  return sel_creationDate;
}

uint64_t sub_2411061F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *LocalizationSource.medicationsHealthAppPlugin.unsafeMutableAddressor()
{
  if (qword_26B007268 != -1) {
    swift_once();
  }
  return &static LocalizationSource.medicationsHealthAppPlugin;
}

uint64_t localized(_:locale:source:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result = sub_24115C960();
  if (*(void *)(a11 + 16))
  {
    uint64_t v12 = sub_241160740();
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t LocalizationSource.table.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_241106358()
{
  if (qword_26B007378 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)static NSBundle.medicationsHealthAppPlugin;
  static LocalizationSource.medicationsHealthAppPlugin = static NSBundle.medicationsHealthAppPlugin;
  unk_26B00BC80 = 0xD000000000000026;
  qword_26B00BC88 = 0x8000000241168730;

  return v0;
}

uint64_t static LocalizationSource.medicationsHealthAppPlugin.getter()
{
  if (qword_26B007268 != -1) {
    swift_once();
  }
  uint64_t v0 = static LocalizationSource.medicationsHealthAppPlugin;
  id v1 = (id)static LocalizationSource.medicationsHealthAppPlugin;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t localized(_:locale:source:value:comment:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result = sub_24115C960();
  if (*(void *)(a11 + 16))
  {
    uint64_t v12 = sub_241160740();
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t destroy for LocalizationSource(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s26MedicationsHealthAppPlugin18LocalizationSourceVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocalizationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for LocalizationSource(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LocalizationSource(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizationSource(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizationSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationSource()
{
  return &type metadata for LocalizationSource;
}

id sub_2411066CC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_2411605E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v54 - v10;
  v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_alwaysFormatForCurrentYear] = 0;
  v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_sidebarDidMove] = 0;
  *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator____lazy_storage___dateLabel] = 0;
  uint64_t v12 = &v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_cachedStartOfCurrentYear];
  uint64_t v13 = sub_24115CB10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_previousYearsFormatter] = 0;
  *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_currentYearFormatter] = 0;
  *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_calendarCache] = a1;
  uint64_t v14 = v2;
  id v15 = a1;
  sub_241160530();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  id v16 = objc_msgSend(self, sel_systemBackgroundColor);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  uint64_t v17 = &v14[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_timelineDay];
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v14[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_timelineDay], v8, v5);
  uint64_t v18 = (int *)type metadata accessor for TimelineDay();
  *(void *)&v17[v18[5]] = v16;
  BOOL v19 = &v17[v18[6]];
  *(void *)BOOL v19 = 0;
  *((void *)v19 + 1) = 0xE000000000000000;
  v17[v18[7]] = 0;

  char v20 = (objc_class *)type metadata accessor for InteractiveTimelineDateIndicator();
  v55.receiver = v14;
  v55.super_class = v20;
  id v21 = objc_msgSendSuper2(&v55, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v22 = sub_24110726C();
  objc_msgSend(v21, sel_addSubview_, v22);

  uint64_t v23 = self;
  sub_24104A2D8();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_24116BC00;
  id v25 = sub_24110726C();
  id v26 = objc_msgSend(v25, sel_topAnchor);

  id v27 = objc_msgSend(v21, sel_topAnchor);
  if (qword_26B006980 != -1) {
    swift_once();
  }
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, *(double *)&qword_26B006970);

  *(void *)(v24 + 32) = v28;
  id v29 = objc_msgSend(v21, sel_bottomAnchor);
  id v30 = sub_24110726C();
  id v31 = objc_msgSend(v30, sel_bottomAnchor);

  if (qword_26B006998 != -1) {
    swift_once();
  }
  id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, *(double *)&qword_26B006988);

  *(void *)(v24 + 40) = v32;
  id v33 = sub_24110726C();
  id v34 = objc_msgSend(v33, sel_centerXAnchor);

  id v35 = objc_msgSend(v21, sel_layoutMarginsGuide);
  id v36 = objc_msgSend(v35, sel_centerXAnchor);

  id v37 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v36);
  *(void *)(v24 + 48) = v37;
  id v38 = sub_24110726C();
  id v39 = objc_msgSend(v38, sel_widthAnchor);

  id v40 = objc_msgSend(v21, sel_layoutMarginsGuide);
  id v41 = objc_msgSend(v40, sel_widthAnchor);

  id v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v41);
  *(void *)(v24 + 56) = v42;
  v54[1] = v24;
  sub_2411609C0();
  sub_241024708(0, (unint64_t *)&qword_26B006FA0);
  uint64_t v43 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_activateConstraints_, v43);

  sub_241106DC8();
  id v44 = objc_msgSend(self, sel_defaultCenter);
  objc_msgSend(v44, sel_addObserver_selector_name_object_, v21, sel_significantTimeChange, *MEMORY[0x263F83390], 0);

  sub_241108574(0, (unint64_t *)&qword_268CF2250, (uint64_t (*)(uint64_t))sub_24106020C, MEMORY[0x263F8E0F8]);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_24116B200;
  uint64_t v46 = sub_24115FA70();
  uint64_t v47 = MEMORY[0x263F82018];
  *(void *)(v45 + 32) = v46;
  *(void *)(v45 + 40) = v47;
  uint64_t v48 = sub_24115F9E0();
  uint64_t v49 = MEMORY[0x263F81F30];
  *(void *)(v45 + 48) = v48;
  *(void *)(v45 + 56) = v49;
  uint64_t v50 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v50;
  *(void *)(v51 + 24) = ObjectType;
  sub_2410602E0();
  id v52 = v21;
  sub_241161230();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v52;
}

id sub_241106DC8()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_traitCollection);
  id v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);

  char v4 = sub_241161020();
  id v5 = objc_allocWithZone((Class)type metadata accessor for RelativeWeekdayWithMonthAndDayFormatter());
  if (v4)
  {
    id v6 = sub_2411002E0(0);
    uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_currentYearFormatter];
    *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_currentYearFormatter] = v6;

    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    objc_msgSend(v8, sel_setDateStyle_, 2);
  }
  else
  {
    id v9 = sub_2411002E0(1);
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_currentYearFormatter];
    *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_currentYearFormatter] = v9;

    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    objc_msgSend(v8, sel_setDateStyle_, 3);
  }
  objc_msgSend(v8, sel_setTimeStyle_, 0);

  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_previousYearsFormatter];
  *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_previousYearsFormatter] = v8;

  id result = *(id *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_previousYearsFormatter];
  if (result)
  {
    return objc_msgSend(result, sel_setFormattingContext_, 2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_241106F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_24115F790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a3 + 16;
  sub_24115F750();
  uint64_t v11 = sub_24115F780();
  os_log_type_t v12 = sub_241160D50();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = v6;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = v15;
    uint64_t v27 = a4;
    *(_DWORD *)uint64_t v14 = 136446210;
    swift_getMetatypeMetadata();
    uint64_t v16 = sub_241160760();
    uint64_t v27 = sub_24101F0A4(v16, v17, &v26);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v11, v12, "[%{public}s] preferredContentSizeCategory or UITraitHorizontalSizeClass changed", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v15, -1, -1);
    MEMORY[0x2456180C0](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_beginAccess();
  uint64_t v18 = MEMORY[0x2456181C0](v10);
  if (v18)
  {
    BOOL v19 = (void *)v18;
    uint64_t v20 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_sidebarDidMove;
    if ((*(unsigned char *)(v18 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_sidebarDidMove) & 1) == 0)
    {
      id v21 = sub_24110726C();
      id v22 = objc_msgSend(v19, sel_traitCollection);
      objc_msgSend(v22, sel_horizontalSizeClass);

      sub_241024708(0, &qword_26B007000);
      uint64_t v23 = (void *)sub_2411611F0();
      objc_msgSend(v21, sel_setFont_, v23);
    }
    *((unsigned char *)v19 + v20) = 0;
    sub_241106DC8();
  }
}

id sub_24110726C()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator____lazy_storage___dateLabel;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator____lazy_storage___dateLabel];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator____lazy_storage___dateLabel];
  }
  else
  {
    id v4 = sub_2411072D0(v0);
    id v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_2411072D0(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v2, sel_setAdjustsFontSizeToFitWidth_, 1);
  id v3 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v3);

  uint64_t v10 = sub_241160730();
  uint64_t v11 = v4;
  swift_bridgeObjectRetain();
  sub_241160860();
  id v5 = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  id v6 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6, v10, v11);

  id v7 = objc_msgSend(a1, sel_traitCollection);
  objc_msgSend(v7, sel_horizontalSizeClass);

  sub_241024708(0, &qword_26B007000);
  uint64_t v8 = (void *)sub_2411611F0();
  objc_msgSend(v5, sel_setFont_, v8);

  objc_msgSend(v5, sel_setTextAlignment_, 1);
  objc_msgSend(v5, sel_setNumberOfLines_, 1);
  return v5;
}

uint64_t sub_241107538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24115CB10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24115CCC0();
  uint64_t v7 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241108574(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  os_log_type_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v21 - v14;
  uint64_t v16 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_cachedStartOfCurrentYear;
  swift_beginAccess();
  sub_241048444(v16, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v15, 1, v3) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v15, v3);
  }
  sub_2410A1AB8((uint64_t)v15);
  sub_24115CC90();
  unint64_t v17 = (void *)sub_24115CC20();
  sub_24115CB00();
  uint64_t v18 = (void *)sub_24115CAA0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v19 = objc_msgSend(v17, sel_hk_startOfYearForDate_addingYears_, v18, 0);

  sub_24115CAE0();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v12, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v3);
  swift_beginAccess();
  sub_24110838C((uint64_t)v12, v16);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v22);
}

uint64_t sub_241107880()
{
  uint64_t v1 = sub_241160410();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241160440();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v9 = (void *)sub_241160EF0();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_241108384;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24101AFBC;
  aBlock[3] = &unk_26F557720;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  sub_241160430();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_24110852C(&qword_26B0072E0, MEMORY[0x263F8F030]);
  sub_241108574(0, (unint64_t *)&unk_26B0072F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_241024138();
  sub_2411614F0();
  MEMORY[0x245616D40](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_241107B68(uint64_t a1)
{
  sub_241108574(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - v3;
  uint64_t v5 = sub_24115CB10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_cachedStartOfCurrentYear;
  swift_beginAccess();
  sub_24110838C((uint64_t)v4, v6);
  swift_endAccess();
  return sub_241107CC8();
}

id sub_241107CC8()
{
  uint64_t v1 = v0;
  uint64_t v31 = sub_24115CCC0();
  uint64_t v2 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2411605E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_24115CB10();
  uint64_t v9 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_timelineDay;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v15, v5);
  id v16 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_calendarCache), sel_currentCalendar);
  sub_24115CC50();

  unint64_t v17 = v14;
  sub_2411605D0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v31);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v18 = v30;
  sub_241107538((uint64_t)v11);
  sub_24110852C((unint64_t *)&unk_26B007230, MEMORY[0x263F07490]);
  LOBYTE(v8) = sub_2411606A0();
  id v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v11, v18);
  if ((v8 & 1) != 0
    && *(unsigned char *)(v1
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_alwaysFormatForCurrentYear) != 1)
  {
    id result = sub_24110726C();
    uint64_t v26 = *(void **)(v1
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_previousYearsFormatter);
    if (v26)
    {
      uint64_t v22 = result;
      id v27 = v26;
      id v28 = (void *)sub_24115CAA0();
      id v25 = objc_msgSend(v27, sel_stringFromDate_, v28);

      if (!v25)
      {
        sub_241160730();
        id v25 = (id)sub_2411606F0();
        swift_bridgeObjectRelease();
      }
      goto LABEL_5;
    }
  }
  else
  {
    id result = sub_24110726C();
    uint64_t v21 = *(void **)(v1
                   + OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_currentYearFormatter);
    if (v21)
    {
      uint64_t v22 = result;
      id v23 = v21;
      uint64_t v24 = (void *)sub_24115CAA0();
      id v25 = objc_msgSend(v23, sel_stringFromDate_, v24);

LABEL_5:
      objc_msgSend(v22, sel_setText_, v25);

      return (id)((uint64_t (*)(char *, uint64_t))v19)(v17, v18);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_241108114()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractiveTimelineDateIndicator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2411081D8()
{
  return type metadata accessor for InteractiveTimelineDateIndicator();
}

uint64_t type metadata accessor for InteractiveTimelineDateIndicator()
{
  uint64_t result = qword_26B006C80;
  if (!qword_26B006C80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24110822C()
{
  sub_241108574(319, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for TimelineDay();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_24110834C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_241108384()
{
  return sub_241107B68(*(void *)(v0 + 16));
}

uint64_t sub_24110838C(uint64_t a1, uint64_t a2)
{
  sub_241108574(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_241108420()
{
  qword_26B006970 = 0x4038000000000000;
}

void sub_241108430()
{
  qword_26B006988 = 0x4020000000000000;
}

void sub_241108440()
{
  v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_alwaysFormatForCurrentYear] = 0;
  v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_sidebarDidMove] = 0;
  *(void *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator____lazy_storage___dateLabel] = 0;
  unint64_t v1 = &v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_cachedStartOfCurrentYear];
  uint64_t v2 = sub_24115CB10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_previousYearsFormatter] = 0;
  *(void *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_currentYearFormatter] = 0;

  sub_2411616B0();
  __break(1u);
}

uint64_t sub_24110852C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241108574(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411085D8()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241108610()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_241108648(uint64_t a1, uint64_t a2)
{
  sub_241106F3C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_241108650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v51 = a6;
  uint64_t v52 = a5;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v49 = sub_24115CCC0();
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v47 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_24110B3D4(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = sub_24115CB10();
  uint64_t v50 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v43 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v44 = (char *)&v43 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v46 = (char *)&v43 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v45 = (char *)&v43 - v22;
  sub_24115CB40();
  id v23 = (int *)type metadata accessor for MedicationDayScheduleItem();
  uint64_t v24 = a7 + v23[9];
  *(void *)(v24 + 8) = 0;
  swift_unknownObjectWeakInit();
  id v25 = (uint64_t *)(a7 + v23[10]);
  type metadata accessor for MedicationDayScheduleCell();
  sub_24110D208(&qword_26B006B78, v26, (void (*)(uint64_t))type metadata accessor for MedicationDayScheduleCell);
  uint64_t *v25 = sub_24115D9A0();
  v25[1] = v27;
  id v28 = (void *)(a7 + v23[5]);
  uint64_t v29 = v54;
  *id v28 = v53;
  v28[1] = v29;
  sub_24110C0B4(a3, a7 + v23[6], (unint64_t *)&qword_26B007240, v11);
  *(void *)(a7 + v23[7]) = a4;
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v31 = sub_2410E4FF4(v30);
  swift_bridgeObjectRelease();
  if (v31)
  {
    if (*(void *)(v31 + 16))
    {
      sub_2410280A4(v31 + 32, (uint64_t)v58);
    }
    else
    {
      uint64_t v59 = 0;
      memset(v58, 0, sizeof(v58));
    }
    swift_bridgeObjectRelease();
    uint64_t v32 = a3;
    uint64_t v33 = v50;
    sub_24110C17C((uint64_t)v58, (uint64_t)&v56, (unint64_t *)&qword_268CF07D8, &qword_268CF07E0);
    if (v57)
    {
      sub_241027314(&v56, (uint64_t)v55);
      sub_24101A6BC(v55, v55[3]);
      sub_24115EAF0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v14, 0, 1, v15);
      sub_24101F178((uint64_t)v55);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v14, 1, 1, v15);
    }
    sub_24110C1EC((uint64_t)v58, (unint64_t *)&qword_268CF07D8, &qword_268CF07E0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v14, 1, v15) != 1)
    {
      id v35 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
      uint64_t v54 = v32;
      id v36 = v45;
      v35(v45, v14, v15);
      id v37 = v47;
      sub_24115CC90();
      id v38 = v43;
      sub_24115CB00();
      id v39 = v44;
      sub_24115CBC0();
      id v40 = *(void (**)(char *, uint64_t))(v33 + 8);
      v40(v38, v15);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v49);
      id v41 = v46;
      sub_24115CA90();
      v40(v39, v15);
      LOBYTE(v39) = sub_24115CAB0();
      sub_24110C120(v54, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
      v40(v41, v15);
      v40(v36, v15);
      *(unsigned char *)(a7 + v23[8]) = v39 & 1;
      uint64_t v34 = v51;
      goto LABEL_13;
    }
    sub_24110C120(v32, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  }
  else
  {
    uint64_t v14 = (char *)a3;
  }
  uint64_t v34 = v51;
  sub_24110C120((uint64_t)v14, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  *(unsigned char *)(a7 + v23[8]) = 1;
LABEL_13:
  *(void *)(v24 + 8) = v34;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

id sub_241108C38()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  uint64_t v6 = sub_241160730();
  uint64_t v7 = v1;
  swift_bridgeObjectRetain();
  sub_241160860();
  id v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v6, v7);

  objc_msgSend(v2, sel_setNumberOfLines_, 1);
  id v4 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x263F835D0]);
  objc_msgSend(v2, sel_setFont_, v4);

  return v2;
}

id sub_241108DC4()
{
  sub_24110B3D4(0, &qword_26B007038, MEMORY[0x263F82228]);
  MEMORY[0x270FA5388](v0 - 8);
  id v2 = (char *)&v19 - v1;
  uint64_t v3 = sub_241161370();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2411613C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824E8]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_241161390();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F82200], v3);
  sub_241161310();
  id v12 = objc_msgSend(self, sel_systemBlueColor);
  sub_241161360();
  sub_241024708(0, &qword_26B007028);
  MEMORY[0x2456170D0]();
  sub_241161380();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v2, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v7);
  sub_2411613E0();
  uint64_t v19 = sub_241160730();
  uint64_t v20 = v13;
  swift_bridgeObjectRetain();
  sub_241160860();
  uint64_t v14 = v19;
  uint64_t v15 = v20;
  id v16 = v11;
  swift_bridgeObjectRelease();
  uint64_t v19 = v14;
  uint64_t v20 = v15;
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setAccessibilityIdentifier_, v17);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v16;
}

id sub_241109134(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_logActionHandler];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_headerLabel;
  id v11 = v4;
  *(void *)&v4[v10] = sub_241108C38();
  uint64_t v12 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_logButton;
  *(void *)&v11[v12] = sub_241108DC4();
  uint64_t v13 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_lineItemsStackView;
  id v14 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  sub_241024708(0, (unint64_t *)&qword_26B007008);
  uint64_t v15 = (void *)sub_241160980();
  id v16 = objc_msgSend(v14, sel_initWithArrangedSubviews_, v15);

  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v16, sel_setAxis_, 1);
  objc_msgSend(v16, sel_setAlignment_, 1);
  objc_msgSend(v16, sel_setDistribution_, 0);
  objc_msgSend(v16, sel_setSpacing_, 8.0);
  *(void *)&v11[v13] = v16;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for MedicationDayScheduleView();
  id v17 = objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  sub_24110930C();

  return v17;
}

void sub_24110930C()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_headerLabel];
  objc_msgSend(v0, sel_addSubview_, v2);
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_logButton];
  objc_msgSend(v1, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_logButton]);
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_lineItemsStackView];
  objc_msgSend(v1, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_lineItemsStackView]);
  type metadata accessor for UILayoutPriority(0);
  sub_24110D208(&qword_26B006F90, 255, type metadata accessor for UILayoutPriority);
  sub_24115F7A0();
  LODWORD(v5) = v34;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 1, v5);
  objc_msgSend(v3, sel_addTarget_action_forControlEvents_, v0, sel_didTapLog_, 64);
  LODWORD(v6) = 1144750080;
  objc_msgSend(v3, sel_setContentHuggingPriority_forAxis_, 0, v6);
  id v7 = objc_msgSend(v2, sel_leadingAnchor);
  id v8 = objc_msgSend(v1, (SEL)&off_2650E3238 + 2);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  objc_msgSend(v9, sel_setActive_, 1);
  id v10 = objc_msgSend(v2, sel_topAnchor);
  id v11 = objc_msgSend(v1, (SEL)&selRef_doses + 3);
  id v12 = objc_msgSend(v10, (SEL)&off_2650E32E8 + 6, v11);

  objc_msgSend(v12, sel_setActive_, 1);
  id v13 = objc_msgSend(v3, (SEL)&off_2650E3238 + 2);
  id v14 = objc_msgSend(v2, sel_trailingAnchor);
  id v15 = objc_msgSend(v13, sel_constraintGreaterThanOrEqualToAnchor_constant_, v14, 24.0);

  objc_msgSend(v15, sel_setActive_, 1);
  id v16 = objc_msgSend(v3, sel_centerYAnchor);
  id v17 = objc_msgSend(v2, sel_centerYAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  objc_msgSend(v18, sel_setActive_, 1);
  id v19 = objc_msgSend(v3, sel_trailingAnchor);
  id v20 = objc_msgSend(v1, sel_trailingAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  objc_msgSend(v21, sel_setActive_, 1);
  id v22 = objc_msgSend(v4, sel_leadingAnchor);
  id v23 = objc_msgSend(v1, sel_leadingAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  objc_msgSend(v24, sel_setActive_, 1);
  id v25 = objc_msgSend(v4, sel_trailingAnchor);
  id v26 = objc_msgSend(v1, sel_trailingAnchor);
  id v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  objc_msgSend(v27, sel_setActive_, 1);
  id v28 = objc_msgSend(v4, sel_topAnchor);
  id v29 = objc_msgSend(v2, sel_bottomAnchor);
  id v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v29, 8.0);

  objc_msgSend(v30, sel_setActive_, 1);
  id v31 = objc_msgSend(v4, sel_bottomAnchor);
  id v32 = objc_msgSend(v1, sel_bottomAnchor);
  id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

  objc_msgSend(v33, sel_setActive_, 1);
}

void sub_24110985C(uint64_t a1)
{
  sub_24110B3D4(0, &qword_26B006D60, MEMORY[0x263F44CB8]);
  *(void *)&double v4 = MEMORY[0x270FA5388](v3 - 8).n128_u64[0];
  double v6 = (char *)v21 - v5;
  id v7 = *(void **)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_lineItemsStackView);
  id v8 = objc_msgSend(v7, sel_arrangedSubviews, v4);
  sub_241024708(0, (unint64_t *)&qword_26B007008);
  unint64_t v9 = sub_2411609A0();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (!v10) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v10) {
      goto LABEL_10;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v11 = 0;
  do
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)MEMORY[0x245617450](v11, v9);
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    id v13 = v12;
    ++v11;
    objc_msgSend(v7, sel_removeArrangedSubview_, v12);
    objc_msgSend(v13, sel_removeFromSuperview);
  }
  while (v10 != v11);
LABEL_10:
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_layoutIfNeeded);
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    id v15 = (void *)(a1 + 32);
    v21[1] = a1;
    swift_bridgeObjectRetain();
    do
    {
      sub_24101A6BC(v15, v15[3]);
      sub_24115ED00();
      sub_24101A6BC(v15, v15[3]);
      uint64_t v16 = sub_24115ED10();
      uint64_t v18 = v17;
      sub_24101A6BC(v15, v15[3]);
      char v19 = sub_24115ECF0();
      id v20 = sub_24110B958((uint64_t)v6, v16, v18, v19 & 1);
      swift_bridgeObjectRelease();
      sub_24110C120((uint64_t)v6, &qword_26B006D60, MEMORY[0x263F44CB8]);
      objc_msgSend(v7, sel_addArrangedSubview_, v20);

      v15 += 5;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
}

id sub_241109BAC()
{
  return sub_24110B114(type metadata accessor for MedicationDayScheduleView);
}

uint64_t type metadata accessor for MedicationDayScheduleView()
{
  return self;
}

id sub_241109C58()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleCell____lazy_storage___scheduleView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleCell____lazy_storage___scheduleView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleCell____lazy_storage___scheduleView);
  }
  else
  {
    type metadata accessor for MedicationDayScheduleView();
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_241109CE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v44 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24110B3D4(0, &qword_26B006D78, MEMORY[0x263F81EE0]);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)v41 - v6;
  uint64_t v8 = sub_24115F8B0();
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24110B3D4(0, &qword_26B006BA0, (void (*)(uint64_t))type metadata accessor for MedicationDayScheduleItem);
  MEMORY[0x270FA5388](v11 - 8);
  id v13 = (char *)v41 - v12;
  uint64_t v14 = type metadata accessor for MedicationDayScheduleItem();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleCell_item;
  swift_beginAccess();
  sub_24110C17C(v18, (uint64_t)v46, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
  if (v46[3])
  {
    sub_241020840(0, (unint64_t *)&qword_26B0069A8);
    int v19 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, v19 ^ 1u, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      sub_24110B754((uint64_t)v13, (uint64_t)v17);
      id v20 = (char *)sub_241109C58();
      uint64_t v21 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v22 = (void (**)())&v20[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_logActionHandler];
      uint64_t v23 = *(void *)&v20[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_logActionHandler];
      void *v22 = sub_24110B7F0;
      v22[1] = (void (*)())v21;
      sub_241032B54(v23);

      id v24 = (char *)sub_241109C58();
      uint64_t v25 = *(int *)(v14 + 32);
      uint64_t v26 = *(void *)&v17[*(int *)(v14 + 28)];
      uint64_t v27 = v17[v25];
      id v28 = *(void **)&v24[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_headerLabel];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v29 = (void *)sub_2411606F0();
      objc_msgSend(v28, sel_setText_, v29);

      sub_24110985C(v26);
      objc_msgSend(*(id *)&v24[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_logButton], sel_setEnabled_, v27);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24115F8A0();
      sub_241024708(0, (unint64_t *)&unk_26B007010);
      sub_241161240();
      sub_24115F870();
      uint64_t v31 = v42;
      uint64_t v30 = v43;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v7, v10, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v7, 0, 1, v30);
      MEMORY[0x245616E30](v7);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v30);
      return sub_2410482B4((uint64_t)v17);
    }
  }
  else
  {
    sub_24110C1EC((uint64_t)v46, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }
  uint64_t v43 = v3;
  sub_24110C120((uint64_t)v13, &qword_26B006BA0, (void (*)(uint64_t))type metadata accessor for MedicationDayScheduleItem);
  id v33 = v44;
  sub_24115F740();
  id v34 = v1;
  id v35 = sub_24115F780();
  os_log_type_t v36 = sub_241160D30();
  if (os_log_type_enabled(v35, v36))
  {
    id v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v45 = v38;
    *(_DWORD *)id v37 = 136315138;
    v41[1] = v37 + 4;
    uint64_t v42 = v2;
    sub_24110C17C(v18, (uint64_t)v46, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
    sub_24110B474(0, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
    uint64_t v39 = sub_241160770();
    v46[0] = sub_24101F0A4(v39, v40, &v45);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v35, v36, "Incorrect view model for MedicationDayScheduleItem: %s", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v38, -1, -1);
    MEMORY[0x2456180C0](v37, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v44, v42);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v33, v2);
  }
}

void sub_24110A3C0(uint64_t a1)
{
  sub_24110B3D4(0, &qword_26B006BA0, (void (*)(uint64_t))type metadata accessor for MedicationDayScheduleItem);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = v14 - v3 + 16;
  uint64_t v5 = type metadata accessor for MedicationDayScheduleItem();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x2456181C0](a1 + 16);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    uint64_t v11 = v9 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleCell_item;
    swift_beginAccess();
    sub_24110C17C(v11, (uint64_t)v14, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
    if (v15)
    {
      sub_241020840(0, (unint64_t *)&qword_26B0069A8);
      int v12 = swift_dynamicCast();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, v12 ^ 1u, 1, v5);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        sub_24110B754((uint64_t)v4, (uint64_t)v8);
        if (MEMORY[0x2456181C0](&v8[*(int *)(v5 + 36)]))
        {
          sub_241046B64((uint64_t)v8);
          swift_unknownObjectRelease();

          sub_2410482B4((uint64_t)v8);
        }
        else
        {
          sub_2410482B4((uint64_t)v8);
        }
        return;
      }
    }
    else
    {
      sub_24110C1EC((uint64_t)v14, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    }

    sub_24110C120((uint64_t)v4, &qword_26B006BA0, (void (*)(uint64_t))type metadata accessor for MedicationDayScheduleItem);
  }
}

uint64_t sub_24110A670()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115F790();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x270FA5388](v2);
  id v41 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24110B3D4(0, &qword_26B006D78, MEMORY[0x263F81EE0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v38 - v8;
  MEMORY[0x270FA5388](v10);
  int v12 = (char *)v38 - v11;
  sub_24110B3D4(0, &qword_26B006BA0, (void (*)(uint64_t))type metadata accessor for MedicationDayScheduleItem);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v38 - v14;
  uint64_t v16 = type metadata accessor for MedicationDayScheduleItem();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  int v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = (void *)sub_24115F810();
  uint64_t v21 = (objc_class *)type metadata accessor for MedicationDayScheduleCell();
  v44.receiver = v1;
  v44.super_class = v21;
  objc_msgSendSuper2(&v44, sel__bridgedUpdateConfigurationUsingState_, v20);

  uint64_t v22 = (uint64_t)v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleCell_item;
  swift_beginAccess();
  sub_24110C17C(v22, (uint64_t)v43, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
  if (!v43[3])
  {
    sub_24110C1EC((uint64_t)v43, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
LABEL_8:
    sub_24110C120((uint64_t)v15, &qword_26B006BA0, (void (*)(uint64_t))type metadata accessor for MedicationDayScheduleItem);
    uint64_t v27 = v41;
    sub_24115F740();
    id v28 = v1;
    id v29 = sub_24115F780();
    os_log_type_t v30 = sub_241160D30();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v42 = v32;
      *(_DWORD *)uint64_t v31 = 136315138;
      v38[1] = v31 + 4;
      sub_24110C17C(v22, (uint64_t)v43, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
      sub_24110B474(0, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
      uint64_t v33 = sub_241160770();
      v43[0] = sub_24101F0A4(v33, v34, &v42);
      sub_241161430();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v29, v30, "Incorrect view model for MedicationDayScheduleItem: %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v32, -1, -1);
      MEMORY[0x2456180C0](v31, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v41, v40);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v27, v40);
    }
  }
  sub_241020840(0, (unint64_t *)&qword_26B0069A8);
  int v23 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, v23 ^ 1u, 1, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    goto LABEL_8;
  }
  sub_24110B754((uint64_t)v15, (uint64_t)v19);
  if (v19[*(int *)(v16 + 32)])
  {
    if (objc_msgSend(v1, sel_isHighlighted))
    {
      MEMORY[0x245616E20]();
      uint64_t v24 = sub_24115F8B0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v12, 1, v24))
      {
        uint64_t v25 = (void (*)(uint64_t))MEMORY[0x263F81EE0];
        sub_24110C0B4((uint64_t)v12, (uint64_t)v9, &qword_26B006D78, MEMORY[0x263F81EE0]);
        MEMORY[0x245616E30](v9);
        sub_2410482B4((uint64_t)v19);
        uint64_t v26 = (uint64_t)v12;
        return sub_24110C120(v26, &qword_26B006D78, v25);
      }
      sub_241024708(0, (unint64_t *)&unk_26B007010);
      sub_241161250();
      sub_24115F870();
      id v37 = v12;
    }
    else
    {
      MEMORY[0x245616E20]();
      uint64_t v36 = sub_24115F8B0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v6, 1, v36))
      {
        uint64_t v25 = (void (*)(uint64_t))MEMORY[0x263F81EE0];
        sub_24110C0B4((uint64_t)v6, (uint64_t)v9, &qword_26B006D78, MEMORY[0x263F81EE0]);
        MEMORY[0x245616E30](v9);
        sub_2410482B4((uint64_t)v19);
        uint64_t v26 = (uint64_t)v6;
        return sub_24110C120(v26, &qword_26B006D78, v25);
      }
      sub_241024708(0, (unint64_t *)&unk_26B007010);
      sub_241161240();
      sub_24115F870();
      id v37 = v6;
    }
    MEMORY[0x245616E30](v37);
  }
  return sub_2410482B4((uint64_t)v19);
}

id sub_24110AE50(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_24115F9D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleCell____lazy_storage___scheduleView] = 0;
  uint64_t v13 = &v4[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleCell_item];
  uint64_t v14 = (objc_class *)type metadata accessor for MedicationDayScheduleCell();
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;
  v29.receiver = v4;
  v29.super_class = v14;
  id v15 = objc_msgSendSuper2(&v29, sel_initWithFrame_, a1, a2, a3, a4);
  id v16 = objc_msgSend(v15, sel_contentView);
  id v17 = sub_241109C58();
  objc_msgSend(v16, sel_addSubview_, v17);

  sub_24115F980();
  sub_24115F950();
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  double v25 = v24;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v26 = sub_241109C58();
  id v27 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v26, sel_hk_alignConstraintsWithView_insets_, v27, v19, v21, v23, v25);

  return v15;
}

id sub_24110B0FC()
{
  return sub_24110B114(type metadata accessor for MedicationDayScheduleCell);
}

id sub_24110B114(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for MedicationDayScheduleCell()
{
  return self;
}

uint64_t sub_24110B1C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleCell_item;
  swift_beginAccess();
  return sub_24110C17C(v3, a1, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
}

uint64_t sub_24110B234(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleCell_item;
  swift_beginAccess();
  sub_2410615D8(a1, v3);
  swift_endAccess();
  sub_241109CE0();
  return sub_24110C1EC(a1, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
}

uint64_t (*sub_24110B2BC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_24110B31C;
}

uint64_t sub_24110B31C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_241109CE0();
  }
  return result;
}

uint64_t sub_24110B354()
{
  return sub_24115DD80();
}

void sub_24110B3D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241161420();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for MedicationDayScheduleItem()
{
  uint64_t result = qword_26B006B90;
  if (!qword_26B006B90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24110B474(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241020840(255, a3);
    unint64_t v4 = sub_241161420();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_24110B4CC()
{
  return 0xD000000000000010;
}

uint64_t sub_24110B54C()
{
  return sub_2411619A0();
}

uint64_t sub_24110B5B4()
{
  swift_bridgeObjectRetain();
  sub_241160830();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24110B614()
{
  return sub_2411619A0();
}

uint64_t sub_24110B678(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

void sub_24110B6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(v3 + *(int *)(a3 + 32)) == 1 && MEMORY[0x2456181C0](v3 + *(int *)(a3 + 36)))
  {
    sub_241046B64(v3);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_24110B720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a3 + 20);
  if (*(void *)(a1 + v3) == *(void *)(a2 + v3) && *(void *)(a1 + v3 + 8) == *(void *)(a2 + v3 + 8)) {
    return 1;
  }
  else {
    return sub_241161890();
  }
}

uint64_t sub_24110B754(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationDayScheduleItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24110B7B8()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24110B7F0()
{
  sub_24110A3C0(v0);
}

void sub_24110B7F8()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_logActionHandler];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_headerLabel;
  *(void *)&v0[v2] = sub_241108C38();
  uint64_t v3 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_logButton;
  *(void *)&v0[v3] = sub_241108DC4();
  uint64_t v4 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin25MedicationDayScheduleView_lineItemsStackView;
  id v5 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  sub_241024708(0, (unint64_t *)&qword_26B007008);
  uint64_t v6 = (void *)sub_241160980();
  id v7 = objc_msgSend(v5, sel_initWithArrangedSubviews_, v6);

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v7, sel_setAxis_, 1);
  objc_msgSend(v7, sel_setAlignment_, 1);
  objc_msgSend(v7, sel_setDistribution_, 0);
  objc_msgSend(v7, sel_setSpacing_, 8.0);
  *(void *)&v0[v4] = v7;

  sub_2411616B0();
  __break(1u);
}

id sub_24110B958(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v50 = a4;
  v45[1] = a2;
  uint64_t v45[2] = a3;
  uint64_t v48 = (void *)sub_24115E9F0();
  *(void *)&long long v47 = *(v48 - 1);
  MEMORY[0x270FA5388](v48);
  uint64_t v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = (void (*)(uint64_t))MEMORY[0x263F07690];
  sub_24110B3D4(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v45 - v8;
  uint64_t v10 = (void (*)(uint64_t))MEMORY[0x263F44CB8];
  sub_24110B3D4(0, &qword_26B006D60, MEMORY[0x263F44CB8]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v45 - v12;
  id v14 = objc_msgSend(objc_allocWithZone((Class)sub_24115F100()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_24110C0B4(a1, (uint64_t)v13, &qword_26B006D60, v10);
  sub_24115F0F0();
  id v49 = v14;
  id v15 = objc_msgSend(v14, sel_widthAnchor);
  id v16 = objc_msgSend(v15, sel_constraintEqualToConstant_, 35.0);

  objc_msgSend(v16, sel_setActive_, 1);
  id v17 = objc_msgSend(v14, sel_heightAnchor);
  id v18 = objc_msgSend(v17, sel_constraintEqualToConstant_, 35.0);

  objc_msgSend(v18, sel_setActive_, 1);
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v19, sel_setNumberOfLines_, 3);
  double v20 = self;
  id v21 = objc_msgSend(v20, sel_preferredFontForTextStyle_, *MEMORY[0x263F83570]);
  objc_msgSend(v19, sel_setFont_, v21);

  double v22 = self;
  id v23 = objc_msgSend(v22, sel_labelColor);
  objc_msgSend(v19, sel_setTextColor_, v23);

  double v24 = (void *)sub_2411606F0();
  objc_msgSend(v19, sel_setText_, v24);

  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  objc_msgSend(v25, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v26 = objc_msgSend(v20, sel__preferredFontForTextStyle_weight_, *MEMORY[0x263F83588], *MEMORY[0x263F81800]);
  objc_msgSend(v25, sel_setFont_, v26);

  id v27 = objc_msgSend(v22, sel_secondaryLabelColor);
  objc_msgSend(v25, sel_setTextColor_, v27);

  uint64_t v28 = sub_24115CB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v9, 1, 1, v28);
  sub_24115E9E0();
  sub_24115EF20();
  (*(void (**)(char *, void *))(v47 + 8))(v6, v48);
  sub_24110C120((uint64_t)v9, (unint64_t *)&qword_26B007200, v46);
  sub_241160780();
  swift_bridgeObjectRelease();
  objc_super v29 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setText_, v29);

  objc_msgSend(v25, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v25, sel_setHidden_, 1);
  sub_24104A2D8();
  uint64_t v30 = swift_allocObject();
  long long v47 = xmmword_24116B210;
  *(_OWORD *)(v30 + 16) = xmmword_24116B210;
  *(void *)(v30 + 32) = v19;
  *(void *)(v30 + 40) = v25;
  uint64_t v51 = v30;
  sub_2411609C0();
  id v31 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  sub_241024708(0, (unint64_t *)&qword_26B007008);
  id v32 = v19;
  uint64_t v48 = v25;
  uint64_t v33 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v31, sel_initWithArrangedSubviews_, v33);

  objc_msgSend(v34, sel_setAxis_, 1);
  objc_msgSend(v34, sel_setSpacing_, 4.0);
  objc_msgSend(v34, sel_setDistribution_, 3);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = v47;
  uint64_t v36 = v49;
  *(void *)(v35 + 32) = v49;
  *(void *)(v35 + 40) = v34;
  uint64_t v51 = v35;
  sub_2411609C0();
  id v37 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  id v38 = v36;
  id v39 = v34;
  uint64_t v40 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  id v41 = objc_msgSend(v37, sel_initWithArrangedSubviews_, v40);

  objc_msgSend(v41, sel_setAxis_, 0);
  objc_msgSend(v41, sel_setAlignment_, 3);
  objc_msgSend(v41, sel_setDistribution_, 0);
  objc_msgSend(v41, sel_setSpacing_, 8.0);
  id v42 = v48;
  if (v50)
  {
    uint64_t v43 = v48;
    objc_msgSend(v43, sel_setHidden_, 0);

    id v39 = v32;
    id v32 = v43;
  }

  return v41;
}

uint64_t sub_24110C0B4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_24110B3D4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24110C120(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_24110B3D4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24110C17C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_24110B474(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24110C1EC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_24110B474(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void *sub_24110C248(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24115CB50();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    id v14 = (char *)a2 + v9;
    uint64_t v15 = sub_24115CB10();
    uint64_t v16 = *(void *)(v15 - 8);
    id v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      sub_24110B3D4(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v20 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
    uint64_t v21 = a3[9];
    double v22 = (char *)a1 + v21;
    id v23 = (char *)a2 + v21;
    swift_bridgeObjectRetain();
    swift_unknownObjectWeakCopyInit();
    *((void *)v22 + 1) = *((void *)v23 + 1);
    uint64_t v24 = a3[10];
    id v25 = (void *)((char *)a1 + v24);
    id v26 = (void *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24110C478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24115CB50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_24115CB10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24110C5A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24115CB50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (const void *)(a2 + v8);
  uint64_t v14 = sub_24115CB10();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    sub_24110B3D4(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  swift_bridgeObjectRetain();
  swift_unknownObjectWeakCopyInit();
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  uint64_t v22 = a3[10];
  id v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = v24[1];
  void *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24110C784(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24115CB50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_24115CB10();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_24110B3D4(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v19 = a2 + a3[9];
  *(void *)(swift_unknownObjectWeakCopyAssign() + 8) = *(void *)(v19 + 8);
  uint64_t v20 = a3[10];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24110C9F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24115CB50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24115CB10();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_24110B3D4(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a2 + a3[9];
  *(void *)(swift_unknownObjectWeakTakeInit() + 8) = *(void *)(v14 + 8);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_24110CBA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24115CB50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_24115CB10();
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    sub_24110B3D4(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(swift_unknownObjectWeakTakeAssign() + 8) = *(void *)(a2 + v21 + 8);
  uint64_t v22 = a3[10];
  id v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  void *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24110CDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24110CE00);
}

uint64_t sub_24110CE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24115CB50();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_24110B3D4(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_24110CF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24110CF60);
}

uint64_t sub_24110CF60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24115CB50();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    sub_24110B3D4(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_24110D0AC()
{
  sub_24115CB50();
  if (v0 <= 0x3F)
  {
    sub_24110B3D4(319, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_24110D1BC()
{
  return sub_24110D208(&qword_26B006B88, 255, (void (*)(uint64_t))type metadata accessor for MedicationDayScheduleItem);
}

uint64_t sub_24110D208(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24110D250(char *a1)
{
  uint64_t v3 = sub_24115F6B0();
  uint64_t v4 = *(void **)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  unint64_t v10 = (char *)&v23 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v23 = v1;
  uint64_t v13 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_listManagerState;
  swift_beginAccess();
  uint64_t v14 = (void (*)(char *, uint64_t, uint64_t))v4[2];
  v14(v12, v13, v3);
  swift_beginAccess();
  uint64_t v15 = (void (*)(uint64_t, char *, uint64_t))v4[3];
  uint64_t v24 = a1;
  v15(v13, a1, v3);
  swift_endAccess();
  unint64_t v16 = sub_24115F6A0();
  if (v16 >> 62) {
    uint64_t v17 = sub_2411616E0();
  }
  else {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v14(v10, (uint64_t)v12, v3);
  if (v17)
  {
    BOOL v18 = 1;
  }
  else
  {
    unint64_t v19 = sub_24115F640();
    if (v19 >> 62) {
      uint64_t v20 = sub_2411616E0();
    }
    else {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    BOOL v18 = v20 != 0;
  }
  uint64_t v21 = (void (*)(char *, uint64_t))v4[1];
  v21(v10, v3);
  v14(v7, v13, v3);
  sub_24110EBB8((uint64_t)v7, v18);
  v21(v7, v3);
  v21(v24, v3);
  return ((uint64_t (*)(char *, uint64_t))v21)(v12, v3);
}

uint64_t sub_24110D4F4()
{
  uint64_t v1 = v0;
  uint64_t v20 = (void (*)(uint64_t))MEMORY[0x263F8F110];
  sub_2411111FC(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v19 - v3;
  sub_2410931A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241111250();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  uint64_t v24 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24115F630();
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v25 = (id)sub_241160EF0();
  uint64_t v13 = sub_241160EB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  sub_24102BDBC();
  sub_241015F58(&qword_26B0072C0, (void (*)(uint64_t))sub_24102BDBC);
  sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
  sub_24115FF10();
  sub_241025444((uint64_t)v4, (unint64_t *)&qword_26B0071C0, v20);

  swift_release();
  uint64_t v14 = *(void *)(v0
                  + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_currentIdentifiers);
  *(void *)(swift_allocObject() + 16) = v14;
  sub_241015F58(&qword_26B006E18, (void (*)(uint64_t))sub_2410931A0);
  swift_bridgeObjectRetain();
  uint64_t v15 = v21;
  sub_24115FEA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v15);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_241015F58((unint64_t *)&unk_268CF2220, (void (*)(uint64_t))sub_241111250);
  uint64_t v16 = v23;
  uint64_t v17 = sub_24115FF60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v16);
  *(void *)(v1
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_listRefreshSubscription) = v17;
  return swift_release();
}

uint64_t sub_24110D938(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = sub_24115F6A0();
  unint64_t v4 = v3;
  if (v3 >> 62)
  {
    uint64_t v5 = sub_2411616E0();
    if (v5) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    unint64_t v11 = MEMORY[0x263F8EE78];
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_11;
  }
LABEL_3:
  unint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t result = sub_241161660();
  if (v5 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  do
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x245617450](v7, v4);
    }
    else {
      id v8 = *(id *)(v4 + 8 * v7 + 32);
    }
    uint64_t v9 = v8;
    ++v7;
    id v10 = objc_msgSend(v8, sel_semanticIdentifier);

    sub_241161640();
    sub_241161670();
    sub_241161680();
    sub_241161650();
  }
  while (v5 != v7);
  unint64_t v11 = v15;
  swift_bridgeObjectRelease();
LABEL_12:
  uint64_t v12 = sub_2410DF764(v11);
  swift_bridgeObjectRelease();
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16)) {
      goto LABEL_14;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (!sub_241161530()) {
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v13 = sub_24110FFE0(a2, v12);
  if ((v13 & 0xC000000000000001) != 0) {
    uint64_t v14 = sub_241161530();
  }
  else {
    uint64_t v14 = *(void *)(v13 + 16);
  }
  swift_release();
  return v14 != 0;
}

void sub_24110DB08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24115F6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x2456181C0](a2 + 16);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    sub_24110D250(v7);
  }
}

void sub_24110DC10()
{
  uint64_t v1 = sub_24115F6B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(v0, sel_tableView);
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = v5;
  type metadata accessor for MedicationEditCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v8 = (void *)sub_2411606F0();
  objc_msgSend(v6, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v8);

  id v9 = objc_msgSend(v0, sel_tableView);
  if (!v9)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v10 = v9;
  sub_241024708(0, &qword_268CF2210);
  uint64_t v11 = swift_getObjCClassFromMetadata();
  uint64_t v12 = (void *)sub_2411606F0();
  objc_msgSend(v10, sel_registerClass_forCellReuseIdentifier_, v11, v12);

  id v13 = objc_msgSend(v0, sel_tableView);
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v14 = v13;
  objc_msgSend(v13, sel_setAllowsSelectionDuringEditing_, 1);

  if (objc_msgSend(v0, sel_tableView))
  {
    unint64_t v15 = &v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_listManagerState];
    swift_beginAccess();
    uint64_t v16 = v2;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    id v31 = v4;
    v17(v4, v15, v1);
    uint64_t v18 = *(void *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_medmojiCache];
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = v0;
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v21 = (char *)objc_allocWithZone((Class)type metadata accessor for ListEditTableDataSource());
    uint64_t v22 = v1;
    uint64_t v23 = (uint64_t *)&v21[qword_268CF03D0];
    uint64_t *v23 = 0;
    v23[1] = 0;
    uint64_t v24 = v22;
    ((void (*)(char *, char *))v17)(&v21[qword_268CF2780], v4);
    uint64_t v25 = *v23;
    uint64_t *v23 = (uint64_t)sub_241111144;
    v23[1] = v20;
    swift_retain();
    uint64_t v26 = v0;
    swift_retain_n();
    sub_241032B54(v25);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_24111113C;
    *(void *)(v27 + 24) = v19;
    swift_retain();
    uint64_t v28 = sub_24115FA30();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v31, v24);
    swift_release();
    objc_super v29 = *(void **)&v26[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_diffableDataSource];
    *(void *)&v26[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_diffableDataSource] = v28;

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_24110DFDC(void *a1, uint64_t a2, void (**a3)(void, void, void), char a4, uint64_t a5, uint64_t a6)
{
  v64[1] = a5;
  v64[2] = a6;
  uint64_t v68 = a3;
  id v70 = a1;
  sub_2411111FC(0, &qword_26B006D78, MEMORY[0x263F81EE0]);
  MEMORY[0x270FA5388](v8 - 8);
  id v66 = (char *)v64 - v9;
  uint64_t v67 = sub_24115F8B0();
  uint64_t v65 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v11 = (char *)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24115CE00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_24115E9F0();
  uint64_t v16 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v18 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411111FC(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)v64 - v20;
  uint64_t v22 = sub_24115F9D0();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    uint64_t v68 = v24;
    uint64_t v27 = v23;
    uint64_t v28 = (void *)sub_2411606F0();
    objc_super v29 = (void *)sub_24115CD90();
    if (a4 == 1)
    {
      uint64_t v30 = (char *)objc_msgSend(v70, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v28, v29);

      objc_msgSend(v30, sel_setUserInteractionEnabled_, 0);
      sub_24115F980();
      uint64_t v31 = sub_24115CB90();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v21, 1, 1, v31);
      sub_24115E9E0();
      sub_24115EF20();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v69);
      sub_241025444((uint64_t)v21, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
      sub_24115F990();
      id v32 = self;
      id v33 = objc_msgSend(v32, sel_secondaryLabelColor);
      id v34 = (void (*)(uint64_t *, void))sub_24115F920();
      sub_24115F8F0();
      v34(v71, 0);
      uint64_t v72 = v27;
      uint64_t v73 = MEMORY[0x263F81F20];
      uint64_t v35 = sub_2410277C0(v71);
      uint64_t v36 = v68;
      ((void (**)(uint64_t *, char *, uint64_t))v68)[2](v35, v26, v27);
      MEMORY[0x245616BF0](v71);
      sub_24115F8A0();
      id v37 = objc_msgSend(v32, sel_quaternarySystemFillColor);
      sub_24115F870();
      uint64_t v39 = v65;
      id v38 = v66;
      uint64_t v40 = v67;
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v66, v11, v67);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v38, 0, 1, v40);
      MEMORY[0x245616C00](v38);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v40);
      ((void (*)(char *, uint64_t))v36[1])(v26, v27);
    }
    else
    {
      uint64_t v30 = (char *)objc_msgSend(v70, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v28, v29);

      sub_24115F980();
      uint64_t v58 = sub_24115CB90();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v21, 1, 1, v58);
      sub_24115E9E0();
      sub_24115EF20();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v69);
      sub_241025444((uint64_t)v21, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
      sub_24115F990();
      id v59 = objc_msgSend(self, sel_tintColor);
      uint64_t v60 = (void (*)(uint64_t *, void))sub_24115F920();
      sub_24115F8F0();
      v60(v71, 0);
      uint64_t v72 = v27;
      uint64_t v73 = MEMORY[0x263F81F20];
      long long v61 = sub_2410277C0(v71);
      id v62 = v68;
      ((void (**)(uint64_t *, char *, uint64_t))v68)[2](v61, v26, v27);
      MEMORY[0x245616BF0](v71);
      ((void (*)(char *, uint64_t))v62[1])(v26, v27);
    }
    return (uint64_t)v30;
  }
  id v41 = v68;
  sub_241030D88(v68, 0);
  id v42 = (void *)sub_2411606F0();
  uint64_t v43 = (void *)sub_24115CD90();
  id v44 = objc_msgSend(v70, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v42, v43);

  type metadata accessor for MedicationEditCell();
  uint64_t v45 = swift_dynamicCastClass();
  if (v45)
  {
    uint64_t v30 = (char *)v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
    unint64_t v46 = sub_24115CDF0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    char v47 = (v46 < 3) & v46;
    id v48 = v41;
    id v49 = (void *)sub_24115E9D0();
    int v50 = &v30[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel];
    uint64_t v51 = *(void **)&v30[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel];
    uint64_t v52 = *(void **)&v30[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_viewModel + 8];
    *(void *)int v50 = v41;
    *((void *)v50 + 1) = v49;
    v50[16] = v47;
    sub_241030D88(v41, 0);
    id v53 = v49;
    sub_241054114(v51, v52);
    sub_241051574();
    sub_241030DA8(v41, 0);

    uint64_t v54 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = v54;
    *(unsigned char *)(v55 + 24) = v47;
    long long v56 = (void (**)(void *))&v30[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_leadingAccessoryActionHandler];
    uint64_t v57 = *(void *)&v30[OBJC_IVAR____TtC26MedicationsHealthAppPlugin18MedicationEditCell_leadingAccessoryActionHandler];
    *long long v56 = sub_2411111F0;
    v56[1] = (void (*)(void *))v55;
    swift_retain();
    sub_241032B54(v57);
    sub_241030DA8(v41, 0);
    swift_release();
    return (uint64_t)v30;
  }

  uint64_t result = sub_2411616B0();
  __break(1u);
  return result;
}

void sub_24110E9B4(void *a1, uint64_t a2, char a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x2456181C0](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_24110F604(a1, a3 & 1);
  }
}

void sub_24110EA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_24115F6B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v14[-v9];
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x2456181C0](a3 + 16);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    uint64_t v13 = v11 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_listManagerState;
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, v13, v4);
    sub_24115CDB0();
    sub_24115CDB0();
    sub_24115F660();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
    sub_24110D250(v10);
  }
}

uint64_t sub_24110EBB8(uint64_t a1, int a2)
{
  v62[3] = a2;
  uint64_t v3 = sub_24115F6B0();
  uint64_t v64 = *(void *)(v3 - 8);
  uint64_t v65 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v63 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24111107C();
  uint64_t v6 = v5;
  uint64_t v66 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241032BE0();
  sub_241032C34();
  sub_24115FA10();
  sub_24115FA00();
  LOBYTE(v72) = 0;
  uint64_t v70 = v6;
  id v71 = v8;
  sub_24115F9F0();
  uint64_t v69 = a1;
  unint64_t v9 = sub_24115F6A0();
  unint64_t v10 = v9;
  unint64_t v11 = MEMORY[0x263F8EE78];
  unint64_t v72 = MEMORY[0x263F8EE78];
  unint64_t v12 = v9 >> 62;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_2411616E0();
    uint64_t v13 = result;
  }
  else
  {
    uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  unint64_t v68 = v12;
  if (v13)
  {
    if (v13 < 1)
    {
      __break(1u);
      goto LABEL_79;
    }
    for (uint64_t i = 0; i != v13; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v16 = (id)MEMORY[0x245617450](i, v10);
      }
      else {
        id v16 = *(id *)(v10 + 8 * i + 32);
      }
      uint64_t v17 = v16;
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x2456167B0]();
        if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2411609D0();
        }
        sub_241160A00();
        sub_2411609C0();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v18 = v72;
    if (!(v72 >> 62))
    {
LABEL_16:
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v19) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v18 = MEMORY[0x263F8EE78];
    if (!(MEMORY[0x263F8EE78] >> 62)) {
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_2411616E0();
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_17:
    unint64_t v72 = v11;
    uint64_t result = sub_2410E5A54(0, v19 & ~(v19 >> 63), 0);
    if ((v19 & 0x8000000000000000) == 0)
    {
      uint64_t v20 = 0;
      unint64_t v21 = v72;
      do
      {
        if ((v18 & 0xC000000000000001) != 0) {
          id v22 = (id)MEMORY[0x245617450](v20, v18);
        }
        else {
          id v22 = *(id *)(v18 + 8 * v20 + 32);
        }
        id v23 = v22;
        unint64_t v72 = v21;
        unint64_t v25 = *(void *)(v21 + 16);
        unint64_t v24 = *(void *)(v21 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_2410E5A54(v24 > 1, v25 + 1, 1);
          unint64_t v21 = v72;
        }
        ++v20;
        *(void *)(v21 + 16) = v25 + 1;
        unint64_t v26 = v21 + 16 * v25;
        *(void *)(v26 + 32) = v23;
        *(unsigned char *)(v26 + 40) = 0;
      }
      while (v19 != v20);
      swift_bridgeObjectRelease();
      unint64_t v11 = MEMORY[0x263F8EE78];
      if (*(void *)(v21 + 16)) {
        goto LABEL_26;
      }
      goto LABEL_30;
    }
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
LABEL_29:
  swift_bridgeObjectRelease();
  if (*(void *)(MEMORY[0x263F8EE78] + 16))
  {
LABEL_26:
    LOBYTE(v72) = 1;
    sub_24115F9F0();
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  LOBYTE(v72) = 1;
  sub_24115F9F0();
LABEL_31:
  unint64_t v27 = sub_24115F640();
  unint64_t v28 = v27;
  unint64_t v72 = v11;
  if (!(v27 >> 62))
  {
    uint64_t v29 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v29) {
      goto LABEL_33;
    }
LABEL_47:
    swift_bridgeObjectRelease();
    unint64_t v33 = MEMORY[0x263F8EE78];
    goto LABEL_48;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_2411616E0();
  uint64_t v29 = result;
  if (!result) {
    goto LABEL_47;
  }
LABEL_33:
  if (v29 < 1)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  for (uint64_t j = 0; j != v29; ++j)
  {
    if ((v28 & 0xC000000000000001) != 0) {
      id v31 = (id)MEMORY[0x245617450](j, v28);
    }
    else {
      id v31 = *(id *)(v28 + 8 * j + 32);
    }
    id v32 = v31;
    self;
    if (swift_dynamicCastObjCClass())
    {
      MEMORY[0x2456167B0]();
      if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2411609D0();
      }
      sub_241160A00();
      sub_2411609C0();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v33 = v72;
  unint64_t v11 = MEMORY[0x263F8EE78];
LABEL_48:
  swift_bridgeObjectRelease();
  if (!(v33 >> 62))
  {
    uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v34) {
      goto LABEL_50;
    }
LABEL_60:
    swift_bridgeObjectRelease();
    unint64_t v36 = MEMORY[0x263F8EE78];
    goto LABEL_61;
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_2411616E0();
  swift_bridgeObjectRelease();
  if (!v34) {
    goto LABEL_60;
  }
LABEL_50:
  unint64_t v72 = v11;
  uint64_t result = sub_2410E5A54(0, v34 & ~(v34 >> 63), 0);
  if (v34 < 0)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  uint64_t v35 = 0;
  unint64_t v36 = v72;
  do
  {
    if ((v33 & 0xC000000000000001) != 0) {
      id v37 = (id)MEMORY[0x245617450](v35, v33);
    }
    else {
      id v37 = *(id *)(v33 + 8 * v35 + 32);
    }
    id v38 = v37;
    unint64_t v72 = v36;
    unint64_t v40 = *(void *)(v36 + 16);
    unint64_t v39 = *(void *)(v36 + 24);
    if (v40 >= v39 >> 1)
    {
      sub_2410E5A54(v39 > 1, v40 + 1, 1);
      unint64_t v36 = v72;
    }
    ++v35;
    *(void *)(v36 + 16) = v40 + 1;
    unint64_t v41 = v36 + 16 * v40;
    *(void *)(v41 + 32) = v38;
    *(unsigned char *)(v41 + 40) = 0;
  }
  while (v34 != v35);
  swift_bridgeObjectRelease();
  unint64_t v11 = MEMORY[0x263F8EE78];
LABEL_61:
  unint64_t v42 = v68;
  if (*(void *)(v36 + 16))
  {
    LOBYTE(v72) = 2;
    sub_24115F9F0();
    swift_bridgeObjectRelease();
    uint64_t v43 = v10 & 0xFFFFFFFFFFFFFF8;
    if (!v42) {
      goto LABEL_63;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    LOBYTE(v72) = 2;
    sub_24115F9F0();
    uint64_t v43 = v10 & 0xFFFFFFFFFFFFFF8;
    if (!v42)
    {
LABEL_63:
      uint64_t v44 = *(void *)(v43 + 16);
      if (v44) {
        goto LABEL_64;
      }
      goto LABEL_73;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_2411616E0();
  swift_bridgeObjectRelease();
  if (v44)
  {
LABEL_64:
    unint64_t v72 = v11;
    uint64_t result = sub_241161660();
    if ((v44 & 0x8000000000000000) == 0)
    {
      uint64_t v45 = 0;
      do
      {
        if ((v10 & 0xC000000000000001) != 0) {
          id v46 = (id)MEMORY[0x245617450](v45, v10);
        }
        else {
          id v46 = *(id *)(v10 + 8 * v45 + 32);
        }
        char v47 = v46;
        ++v45;
        id v48 = objc_msgSend(v46, sel_semanticIdentifier);

        sub_241161640();
        sub_241161670();
        sub_241161680();
        sub_241161650();
      }
      while (v44 != v45);
      unint64_t v49 = v72;
      swift_bridgeObjectRelease();
      goto LABEL_74;
    }
LABEL_82:
    __break(1u);
    return result;
  }
LABEL_73:
  swift_bridgeObjectRelease();
  unint64_t v49 = MEMORY[0x263F8EE78];
LABEL_74:
  uint64_t v50 = sub_2410DF764(v49);
  swift_bridgeObjectRelease();
  uint64_t v51 = v67;
  *(void *)(v67 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_currentIdentifiers) = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_diffableDataSource;
  id v53 = *(char **)(v51
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_diffableDataSource);
  if (v53)
  {
    uint64_t v55 = v63;
    uint64_t v54 = v64;
    uint64_t v56 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v63, v69, v65);
    uint64_t v57 = &v53[qword_268CF2780];
    swift_beginAccess();
    uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v54 + 40);
    id v59 = v53;
    v58(v57, v55, v56);
    swift_endAccess();

    uint64_t v60 = *(void **)(v51 + v52);
    if (v60)
    {
      id v61 = v60;
      sub_24115FA40();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v71, v70);
}

void sub_24110F604(void *a1, char a2)
{
  uint64_t v5 = sub_24115F6B0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_241024708(0, &qword_268CF2008);
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = a1;
    swift_retain();
    id v10 = a1;
    uint64_t v13 = MEMORY[0x245616D60](sub_24110FFD8, v9, 0, 0);
    swift_release();
    swift_release();
    objc_msgSend(v2, sel_presentViewController_animated_completion_, v13, 1, 0);
    unint64_t v11 = (void *)v13;
  }
  else
  {
    sub_24115F5D0();
    sub_24110D250(v7);
  }
}

void sub_24110F7A4(uint64_t a1)
{
  uint64_t v2 = sub_24115F6B0();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x2456181C0](a1 + 16);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    swift_retain();
    sub_24115F5D0();
    swift_release();
    sub_24110D250(v4);
  }
}

id sub_24110FD78()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsListEditViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24110FE80()
{
  return type metadata accessor for MedicationsListEditViewController();
}

uint64_t type metadata accessor for MedicationsListEditViewController()
{
  uint64_t result = qword_268CF21F8;
  if (!qword_268CF21F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24110FED4()
{
  uint64_t result = sub_24115F6B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24110FF9C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24110FFD8()
{
  sub_24110F7A4(*(void *)(v0 + 16));
}

uint64_t sub_24110FFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  unint64_t v4 = a1 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (!v4) {
      return sub_24100A348(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_241110B48);
    }
    goto LABEL_7;
  }
  if (v4)
  {
    if (a2 >= 0) {
      uint64_t v2 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v5 = sub_241161530();
    a2 = sub_2410DC164(v2, v5);
    a1 = v3;
LABEL_7:
    return sub_241110564(a1, a2);
  }
  sub_241024708(0, &qword_268CF1BD0);
  uint64_t v7 = MEMORY[0x263F8EE88];
  uint64_t v29 = MEMORY[0x263F8EE88];
  sub_241161520();
  if (!sub_241161550()) {
    goto LABEL_34;
  }
  uint64_t v8 = v3 + 56;
  do
  {
    swift_dynamicCast();
    if (!*(void *)(v3 + 16)) {
      goto LABEL_12;
    }
    uint64_t v9 = sub_2411612D0();
    uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v11 = v9 & ~v10;
    if (((*(void *)(v8 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_12;
    }
    id v12 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
    char v13 = sub_2411612E0();

    if ((v13 & 1) == 0)
    {
      uint64_t v14 = ~v10;
      while (1)
      {
        unint64_t v11 = (v11 + 1) & v14;
        if (((*(void *)(v8 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
        char v16 = sub_2411612E0();

        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_12:

      continue;
    }
LABEL_20:
    uint64_t v17 = v29;
    unint64_t v18 = *(void *)(v29 + 16);
    if (*(void *)(v29 + 24) <= v18)
    {
      sub_2410DCD20(v18 + 1);
      uint64_t v17 = v29;
    }
    uint64_t result = sub_2411612D0();
    uint64_t v19 = v17 + 56;
    uint64_t v20 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v17 + 56 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v17 + 56 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v19 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(*(void *)(v17 + 48) + 8 * v23) = v28;
    ++*(void *)(v17 + 16);
  }
  while (sub_241161550());
  uint64_t v7 = v29;
LABEL_34:
  swift_release();
  return v7;
}

uint64_t sub_241110308(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_24111132C();
  uint64_t result = sub_2411615D0();
  uint64_t v9 = result;
  unint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_2411612D0();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_241110564(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    sub_2411106EC((void *)((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    uint64_t v8 = v7;
    swift_release();
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v6);
    sub_2411106EC((unint64_t *)v9, v5, v3, a2);
    uint64_t v8 = v10;
    swift_release();
    MEMORY[0x2456180C0](v9, -1, -1);
  }
  return v8;
}

void sub_2411106EC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_241161520();
    sub_241024708(0, &qword_268CF1BD0);
    sub_241023228(&qword_268CF1BD8, &qword_268CF1BD0);
    sub_241160BE0();
    uint64_t v4 = v40;
    uint64_t v35 = v41;
    uint64_t v5 = v42;
    uint64_t v6 = v43;
    uint64_t v7 = v44;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v35 = a3 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    uint64_t v7 = v10 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  uint64_t v33 = 0;
  int64_t v34 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v38 = a4 + 56;
  uint64_t v37 = v4;
LABEL_8:
  uint64_t v11 = v6;
  unint64_t v12 = v7;
  while (v4 < 0)
  {
    if (!sub_241161550()) {
      goto LABEL_45;
    }
    sub_241024708(0, &qword_268CF1BD0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v45;
    swift_unknownObjectRelease();
    uint64_t v6 = v11;
    uint64_t v7 = v12;
    if (!v45) {
      goto LABEL_45;
    }
LABEL_33:
    uint64_t v18 = sub_2411612D0();
    uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    uint64_t v22 = 1 << v20;
    if (((1 << v20) & *(void *)(v38 + 8 * (v20 >> 6))) == 0) {
      goto LABEL_9;
    }
    sub_241024708(0, &qword_268CF1BD0);
    id v23 = *(id *)(*(void *)(a4 + 48) + 8 * v20);
    char v24 = sub_2411612E0();

    if (v24)
    {

LABEL_41:
      uint64_t v4 = v37;
      unint64_t v30 = a1[v21];
      a1[v21] = v22 | v30;
      uint64_t v11 = v6;
      unint64_t v12 = v7;
      if ((v22 & v30) == 0)
      {
        if (!__OFADD__(v33++, 1)) {
          goto LABEL_8;
        }
        __break(1u);
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v25 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v27 + 1)
      {
        unint64_t v27 = i & v25;
        if (((*(void *)(v38 + (((i & v25) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v25)) & 1) == 0) {
          break;
        }
        id v28 = *(id *)(*(void *)(a4 + 48) + 8 * v27);
        char v29 = sub_2411612E0();

        if (v29)
        {

          unint64_t v21 = v27 >> 6;
          uint64_t v22 = 1 << v27;
          goto LABEL_41;
        }
      }
LABEL_9:

      uint64_t v11 = v6;
      uint64_t v4 = v37;
      unint64_t v12 = v7;
    }
  }
  if (v12)
  {
    uint64_t v7 = (v12 - 1) & v12;
    unint64_t v13 = __clz(__rbit64(v12)) | (v11 << 6);
    uint64_t v6 = v11;
LABEL_32:
    id v14 = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    if (!v14) {
      goto LABEL_45;
    }
    goto LABEL_33;
  }
  int64_t v15 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v15 >= v34) {
      goto LABEL_45;
    }
    unint64_t v16 = *(void *)(v35 + 8 * v15);
    uint64_t v6 = v11 + 1;
    if (!v16)
    {
      uint64_t v6 = v11 + 2;
      if (v11 + 2 >= v34) {
        goto LABEL_45;
      }
      unint64_t v16 = *(void *)(v35 + 8 * v6);
      if (!v16)
      {
        uint64_t v6 = v11 + 3;
        if (v11 + 3 >= v34) {
          goto LABEL_45;
        }
        unint64_t v16 = *(void *)(v35 + 8 * v6);
        if (!v16)
        {
          uint64_t v6 = v11 + 4;
          if (v11 + 4 >= v34) {
            goto LABEL_45;
          }
          unint64_t v16 = *(void *)(v35 + 8 * v6);
          if (!v16)
          {
            uint64_t v6 = v11 + 5;
            if (v11 + 5 >= v34) {
              goto LABEL_45;
            }
            unint64_t v16 = *(void *)(v35 + 8 * v6);
            if (!v16)
            {
              uint64_t v17 = v11 + 6;
              while (v34 != v17)
              {
                unint64_t v16 = *(void *)(v35 + 8 * v17++);
                if (v16)
                {
                  uint64_t v6 = v17 - 1;
                  goto LABEL_31;
                }
              }
LABEL_45:
              sub_24101E92C();
              swift_retain();
              sub_241110308(a1, a2, v33, a4);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v7 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v6 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

void sub_241110B48(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v53 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v54 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v56 = 0;
    uint64_t v61 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          uint64_t v57 = (v9 - 1) & v9;
          int64_t v59 = v6;
          unint64_t v10 = __clz(__rbit64(v9)) | (v6 << 6);
          uint64_t v11 = a4;
        }
        else
        {
          int64_t v12 = v6 + 1;
          uint64_t v11 = a4;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_65;
          }
          if (v12 >= v54) {
            goto LABEL_63;
          }
          unint64_t v13 = *(void *)(v53 + 8 * v12);
          int64_t v14 = v6 + 1;
          if (!v13)
          {
            int64_t v14 = v12 + 1;
            if (v12 + 1 >= v54) {
              goto LABEL_63;
            }
            unint64_t v13 = *(void *)(v53 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v12 + 2;
              if (v12 + 2 >= v54) {
                goto LABEL_63;
              }
              unint64_t v13 = *(void *)(v53 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v12 + 3;
                if (v15 >= v54) {
                  goto LABEL_63;
                }
                unint64_t v13 = *(void *)(v53 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      goto LABEL_67;
                    }
                    if (v14 >= v54) {
                      goto LABEL_63;
                    }
                    unint64_t v13 = *(void *)(v53 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v14 = v15;
              }
            }
          }
LABEL_22:
          uint64_t v57 = (v13 - 1) & v13;
          int64_t v59 = v14;
          unint64_t v10 = __clz(__rbit64(v13)) + (v14 << 6);
        }
        id v16 = *(id *)(*(void *)(v11 + 48) + 8 * v10);
        uint64_t v17 = sub_2411612D0();
        uint64_t v18 = v5;
        uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v20 = v17 & ~v19;
        unint64_t v21 = v20 >> 6;
        uint64_t v22 = 1 << v20;
        if (((1 << v20) & *(void *)(v61 + 8 * (v20 >> 6))) != 0) {
          break;
        }
LABEL_6:

        uint64_t v5 = v18;
        unint64_t v9 = v57;
        int64_t v6 = v59;
      }
      sub_241024708(0, &qword_268CF1BD0);
      id v23 = *(id *)(*(void *)(v18 + 48) + 8 * v20);
      char v24 = sub_2411612E0();

      if ((v24 & 1) == 0)
      {
        uint64_t v25 = ~v19;
        for (unint64_t i = v20 + 1; ; unint64_t i = v27 + 1)
        {
          unint64_t v27 = i & v25;
          if (((*(void *)(v61 + (((i & v25) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v25)) & 1) == 0) {
            break;
          }
          uint64_t v5 = v18;
          id v28 = *(id *)(*(void *)(v18 + 48) + 8 * v27);
          char v29 = sub_2411612E0();

          if (v29)
          {

            unint64_t v21 = v27 >> 6;
            uint64_t v22 = 1 << v27;
            goto LABEL_30;
          }
        }
        goto LABEL_6;
      }

      uint64_t v5 = v18;
LABEL_30:
      unint64_t v9 = v57;
      int64_t v6 = v59;
      a1[v21] |= v22;
      BOOL v30 = __OFADD__(v56++, 1);
      if (v30) {
        goto LABEL_66;
      }
    }
  }
  int64_t v31 = 0;
  uint64_t v55 = a3 + 56;
  uint64_t v56 = 0;
  uint64_t v32 = 1 << *(unsigned char *)(a3 + 32);
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  else {
    uint64_t v33 = -1;
  }
  unint64_t v34 = v33 & *(void *)(a3 + 56);
  int64_t v58 = (unint64_t)(v32 + 63) >> 6;
  uint64_t v35 = a4 + 56;
  while (1)
  {
    if (v34)
    {
      unint64_t v36 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      int64_t v62 = v31;
      unint64_t v37 = v36 | (v31 << 6);
      goto LABEL_55;
    }
    int64_t v38 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v38 >= v58) {
      goto LABEL_63;
    }
    unint64_t v39 = *(void *)(v55 + 8 * v38);
    int64_t v40 = v31 + 1;
    if (!v39)
    {
      int64_t v40 = v31 + 2;
      if (v31 + 2 >= v58) {
        goto LABEL_63;
      }
      unint64_t v39 = *(void *)(v55 + 8 * v40);
      if (!v39)
      {
        int64_t v40 = v31 + 3;
        if (v31 + 3 >= v58) {
          goto LABEL_63;
        }
        unint64_t v39 = *(void *)(v55 + 8 * v40);
        if (!v39) {
          break;
        }
      }
    }
LABEL_54:
    unint64_t v34 = (v39 - 1) & v39;
    int64_t v62 = v40;
    unint64_t v37 = __clz(__rbit64(v39)) + (v40 << 6);
LABEL_55:
    unint64_t v60 = v37;
    id v42 = *(id *)(*(void *)(v5 + 48) + 8 * v37);
    uint64_t v43 = sub_2411612D0();
    uint64_t v44 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v45 = v43 & ~v44;
    if (((*(void *)(v35 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
      goto LABEL_38;
    }
    sub_241024708(0, &qword_268CF1BD0);
    id v46 = *(id *)(*(void *)(v4 + 48) + 8 * v45);
    char v47 = sub_2411612E0();

    if (v47)
    {
LABEL_60:

      int64_t v31 = v62;
      *(unint64_t *)((char *)a1 + ((v60 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v60;
      BOOL v30 = __OFADD__(v56++, 1);
      uint64_t v4 = a4;
      if (v30)
      {
        __break(1u);
LABEL_63:
        swift_retain();
        sub_241110308(a1, a2, v56, v5);
        return;
      }
    }
    else
    {
      uint64_t v48 = ~v44;
      while (1)
      {
        unint64_t v45 = (v45 + 1) & v48;
        uint64_t v4 = a4;
        if (((*(void *)(v35 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
          break;
        }
        id v49 = *(id *)(*(void *)(a4 + 48) + 8 * v45);
        char v50 = sub_2411612E0();

        if (v50) {
          goto LABEL_60;
        }
      }
LABEL_38:

      int64_t v31 = v62;
    }
  }
  uint64_t v41 = v31 + 4;
  if (v31 + 4 >= v58) {
    goto LABEL_63;
  }
  unint64_t v39 = *(void *)(v55 + 8 * v41);
  if (v39)
  {
    int64_t v40 = v31 + 4;
    goto LABEL_54;
  }
  while (1)
  {
    int64_t v40 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v40 >= v58) {
      goto LABEL_63;
    }
    unint64_t v39 = *(void *)(v55 + 8 * v40);
    ++v41;
    if (v39) {
      goto LABEL_54;
    }
  }
LABEL_68:
  __break(1u);
}

void sub_24111107C()
{
  if (!qword_268CF2208)
  {
    sub_241032BE0();
    sub_241032C34();
    unint64_t v0 = sub_24115FA20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2208);
    }
  }
}

uint64_t sub_2411110FC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24111113C(void *a1, uint64_t a2, void (**a3)(void, void, void), char a4)
{
  return sub_24110DFDC(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

void sub_241111144(uint64_t a1, uint64_t a2)
{
  sub_24110EA24(a1, a2, v2);
}

uint64_t sub_24111114C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241111184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v3 + 16))(a1, a2, *(void *)a3, *(unsigned __int8 *)(a3 + 8));
}

uint64_t sub_2411111B8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 25, 7);
}

void sub_2411111F0(void *a1)
{
  sub_24110E9B4(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void sub_2411111FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241161420();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241111250()
{
  if (!qword_268CF2218)
  {
    sub_2410931A0();
    sub_241015F58(&qword_26B006E18, (void (*)(uint64_t))sub_2410931A0);
    unint64_t v0 = sub_24115FB80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2218);
    }
  }
}

uint64_t sub_2411112E4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24111131C(uint64_t a1)
{
  return sub_24110D938(a1, *(void *)(v1 + 16));
}

void sub_241111324(uint64_t a1)
{
  sub_24110DB08(a1, v1);
}

void sub_24111132C()
{
  if (!qword_268CF1BE0)
  {
    sub_241024708(255, &qword_268CF1BD0);
    sub_241023228(&qword_268CF1BD8, &qword_268CF1BD0);
    unint64_t v0 = sub_2411615E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1BE0);
    }
  }
}

char *sub_2411113D4(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_24115F6B0();
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  MEMORY[0x270FA5388](v5);
  int64_t v31 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24115E9F0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void (*)(uint64_t))MEMORY[0x263F07690];
  sub_2411111FC(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
  MEMORY[0x270FA5388](v12 - 8);
  int64_t v14 = (char *)&v31 - v13;
  *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_diffableDataSource] = 0;
  *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_listRefreshSubscription] = 0;
  *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_currentIdentifiers] = MEMORY[0x263F8EE88];
  int64_t v15 = v2;
  sub_24115F650();
  *(void *)&v15[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_listManager] = a2;
  *(void *)&v15[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_healthStore] = a1;
  sub_24115E9C0();
  swift_allocObject();
  swift_retain_n();
  id v16 = a1;
  *(void *)&v15[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_medmojiCache] = sub_24115E9B0();

  uint64_t v17 = (objc_class *)type metadata accessor for MedicationsListEditViewController();
  v34.receiver = v15;
  v34.super_class = v17;
  id v18 = objc_msgSendSuper2(&v34, sel_initWithStyle_, 2);
  uint64_t v19 = sub_24115CB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v14, 1, 1, v19);
  unint64_t v20 = (char *)v18;
  sub_24115E9E0();
  sub_24115EF20();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_241025444((uint64_t)v14, (unint64_t *)&qword_26B007200, v11);
  unint64_t v21 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setTitle_, v21);

  id v22 = objc_msgSend(v20, sel_navigationItem);
  objc_msgSend(v22, sel_setLargeTitleDisplayMode_, 2);

  objc_msgSend(v20, sel_setEditing_, 1);
  sub_24110DC10();
  sub_24110D4F4();
  id v23 = objc_msgSend(v20, sel_navigationItem);
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v20, sel_didTapDone);
  objc_msgSend(v23, sel_setRightBarButtonItem_, v24);

  uint64_t v25 = &v20[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33MedicationsListEditViewController_listManagerState];
  swift_beginAccess();
  uint64_t v27 = (uint64_t)v31;
  uint64_t v26 = v32;
  id v28 = v25;
  uint64_t v29 = v33;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v31, v28, v33);
  sub_24110EBB8(v27, 1);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v29);
  return v20;
}

uint64_t sub_241111868()
{
  uint64_t v0 = sub_24115CE00();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_2411605E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_241111ADC();
  uint64_t v9 = &v8[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_today];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);

  unint64_t v10 = sub_241111ADC();
  char v11 = v10[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state];
  v10[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_state] = 3;
  sub_241055AD4(v11);
  sub_241102640();
  sub_241161460();
  MEMORY[0x245612C00](v13 & ~(v13 >> 63), 0);
  sub_241058A5C((uint64_t)v3, 1, 0, 0);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Void __swiftcall InteractiveTimelineViewController.parentDidReconfigure()()
{
  uint64_t v0 = sub_241111ADC();
  sub_241057AB8();
}

char *sub_241111ADC()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController____lazy_storage___timelineViewController;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController____lazy_storage___timelineViewController];
  if (v2)
  {
    uint64_t v3 = *(char **)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController____lazy_storage___timelineViewController];
  }
  else
  {
    uint64_t v4 = sub_241111B40(v0);
    uint64_t v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    uint64_t v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_241111B40(char *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A130]), sel_init);
  uint64_t result = (char *)objc_msgSend(a1, sel_view);
  if (result)
  {
    uint64_t v4 = result;
    objc_msgSend(result, sel_bounds);
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;

    id v13 = v2;
    int64_t v14 = (char *)sub_24105E108(v13, v6, v8, v10, v12);
    *(void *)&v14[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_timelineDataProvider
                  + 8] = *(void *)&a1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_timelineDataProvider
                                      + 8];
    uint64_t v15 = swift_unknownObjectWeakAssign();
    uint64_t v16 = MEMORY[0x2456181C0](v15);
    if (v16)
    {
      uint64_t v17 = v16;
      swift_unknownObjectRetain();
      sub_24111366C(v14, v17);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
    }
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall InteractiveTimelineViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_2411605E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v138 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TimelineDay();
  *(void *)&double v7 = MEMORY[0x270FA5388](v6 - 8).n128_u64[0];
  double v9 = (char *)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142.receiver = v1;
  v142.super_class = ObjectType;
  objc_msgSendSuper2(&v142, sel_viewDidLoad, v7);
  sub_241160E10();
  uint64_t v137 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_timelineDataProvider;
  double v10 = *(void **)(*(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_timelineDataProvider]
                 + 40);
  id v11 = objc_allocWithZone((Class)type metadata accessor for InteractiveTimelineDateIndicator());
  id v12 = sub_2411066CC(v10);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v13 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_dateIndicator];
  *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_dateIndicator] = v12;
  id v14 = v12;

  id v15 = objc_msgSend(v1, sel_view);
  if (!v15)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v16 = v15;
  uint64_t v17 = self;
  id v18 = objc_msgSend(v17, sel_systemBackgroundColor);
  objc_msgSend(v16, sel_setBackgroundColor_, v18);

  uint64_t v19 = sub_241111ADC();
  objc_msgSend(v1, sel_addChildViewController_, v19);

  unint64_t v20 = sub_241111ADC();
  id v21 = objc_msgSend(v20, sel_view);

  if (!v21)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  objc_msgSend(v21, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F46968]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  HKUIOnePixel();
  objc_msgSend(v22, sel_setSeparatorThickness_);
  id v23 = objc_msgSend(v17, sel_separatorColor);
  objc_msgSend(v22, sel_setColor_, v23);

  id v140 = v22;
  objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v24 = objc_msgSend(v1, sel_view);
  if (!v24)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v25 = v24;
  uint64_t v136 = v4;
  objc_msgSend(v24, sel_addSubview_, v14);

  id v26 = objc_msgSend(v1, sel_view);
  if (!v26)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v27 = v26;
  id v28 = sub_241111ADC();
  id v29 = objc_msgSend(v28, sel_view);

  if (!v29)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(v27, sel_addSubview_, v29);

  id v30 = objc_msgSend(v1, sel_view);
  if (!v30)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v31 = v30;
  objc_msgSend(v30, sel_addSubview_, v140);

  id v32 = objc_msgSend(v1, sel_view);
  if (!v32)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v33 = v32;
  uint64_t v134 = v3;
  id v139 = *(id *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_focusIndicatorImageView];
  objc_msgSend(v32, sel_addSubview_);

  objc_super v34 = sub_241111ADC();
  id v35 = objc_msgSend(v34, sel_view);

  if (!v35)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  CGRect v133 = v9;
  id v36 = objc_msgSend(v35, sel_heightAnchor);

  id v37 = objc_msgSend(v36, sel_constraintEqualToConstant_, 0.0);
  int64_t v38 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_timelineHeight];
  uint64_t v135 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_timelineHeight;
  *(void *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_timelineHeight] = v37;

  sub_241112A90(0);
  sub_24104A2D8();
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_24116FBF0;
  id v40 = objc_msgSend(v14, sel_topAnchor);
  id v41 = objc_msgSend(v1, sel_view);
  if (!v41)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  id v42 = v41;
  uint64_t v43 = v14;
  id v44 = objc_msgSend(v41, sel_safeAreaLayoutGuide);

  id v45 = objc_msgSend(v44, sel_topAnchor);
  id v46 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v45);

  *(void *)(v39 + 32) = v46;
  id v47 = objc_msgSend(v43, sel_leadingAnchor);
  id v48 = objc_msgSend(v1, sel_view);
  if (!v48)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v49 = v48;
  id v50 = objc_msgSend(v48, sel_safeAreaLayoutGuide);

  id v51 = objc_msgSend(v50, sel_leadingAnchor);
  id v52 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v51);

  *(void *)(v39 + 40) = v52;
  id v53 = objc_msgSend(v43, sel_trailingAnchor);
  id v54 = objc_msgSend(v1, sel_view);
  if (!v54)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v55 = v54;
  id v56 = objc_msgSend(v54, (SEL)&selRef_setAnchorPoint_ + 3);

  id v57 = objc_msgSend(v56, sel_trailingAnchor);
  id v58 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v57);

  *(void *)(v39 + 48) = v58;
  id v59 = v140;
  id v60 = objc_msgSend(v140, sel_topAnchor);
  long long v132 = v43;
  uint64_t v61 = v43;
  int64_t v62 = v59;
  id v63 = objc_msgSend(v61, sel_bottomAnchor);
  id v64 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v63);

  *(void *)(v39 + 56) = v64;
  id v65 = objc_msgSend(v62, sel_leadingAnchor);
  id v66 = objc_msgSend(v1, sel_view);
  if (!v66)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v67 = v66;
  id v68 = objc_msgSend(v66, sel_leadingAnchor);

  id v69 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v68);
  *(void *)(v39 + 64) = v69;
  id v70 = objc_msgSend(v62, sel_trailingAnchor);
  id v71 = objc_msgSend(v1, sel_view);
  if (!v71)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v72 = v71;
  id v73 = objc_msgSend(v71, sel_trailingAnchor);

  id v74 = objc_msgSend(v70, sel_constraintEqualToAnchor_, v73);
  *(void *)(v39 + 72) = v74;
  id v75 = v139;
  id v76 = objc_msgSend(v139, sel_topAnchor);
  id v77 = objc_msgSend(v62, sel_bottomAnchor);
  id v78 = objc_msgSend(v76, sel_constraintEqualToAnchor_, v77);

  *(void *)(v39 + 80) = v78;
  id v79 = objc_msgSend(v75, sel_centerXAnchor);
  id v80 = objc_msgSend(v1, sel_view);
  if (!v80)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  id v81 = v80;
  id v82 = objc_msgSend(v80, sel_centerXAnchor);

  id v83 = objc_msgSend(v79, sel_constraintEqualToAnchor_, v82);
  *(void *)(v39 + 88) = v83;
  id v84 = sub_241111ADC();
  id v85 = objc_msgSend(v84, sel_view);

  if (!v85)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  id v86 = objc_msgSend(v85, sel_topAnchor);

  id v87 = objc_msgSend(v139, sel_bottomAnchor);
  id v88 = objc_msgSend(v86, sel_constraintEqualToAnchor_, v87);

  *(void *)(v39 + 96) = v88;
  CGFloat v89 = sub_241111ADC();
  id v90 = objc_msgSend(v89, sel_view);

  if (!v90)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  id v91 = objc_msgSend(v90, sel_leftAnchor);

  id v92 = objc_msgSend(v1, sel_view);
  if (!v92)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  id v93 = v92;
  id v94 = objc_msgSend(v92, sel_leftAnchor);

  id v95 = objc_msgSend(v91, sel_constraintEqualToAnchor_, v94);
  *(void *)(v39 + 104) = v95;
  char v96 = sub_241111ADC();
  id v97 = objc_msgSend(v96, sel_view);

  if (!v97)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  id v98 = objc_msgSend(v97, sel_rightAnchor);

  id v99 = objc_msgSend(v1, sel_view);
  if (!v99)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  id v100 = v99;
  id v101 = objc_msgSend(v99, sel_rightAnchor);

  id v102 = objc_msgSend(v98, sel_constraintEqualToAnchor_, v101);
  *(void *)(v39 + 112) = v102;
  id v103 = *(void **)&v1[v135];
  if (!v103)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  *(void *)(v39 + 120) = v103;
  id v104 = v103;
  id v105 = objc_msgSend(v1, sel_view);
  if (!v105)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v106 = v105;
  id v107 = objc_msgSend(v105, sel_safeAreaLayoutGuide);

  id v108 = objc_msgSend(v107, sel_bottomAnchor);
  uint64_t v109 = sub_241111ADC();
  id v110 = objc_msgSend(v109, sel_view);

  if (v110)
  {
    uint64_t v111 = self;
    id v112 = objc_msgSend(v110, (SEL)&selRef_pregnancyDescriptionContentString + 5);

    id v113 = objc_msgSend(v108, sel_constraintEqualToAnchor_, v112);
    *(void *)(v39 + 128) = v113;
    uint64_t v141 = v39;
    sub_2411609C0();
    sub_241061764();
    uint64_t v114 = (void *)sub_241160980();
    swift_bridgeObjectRelease();
    objc_msgSend(v111, sel_activateConstraints_, v114);

    uint64_t v115 = v137;
    uint64_t v116 = *(void *)&v1[v137];
    swift_unknownObjectRetain();
    sub_2411138C4(v1, v116);
    swift_unknownObjectRelease();
    uint64_t v117 = sub_241111ADC();
    sub_241057798((uint64_t)v1);

    uint64_t v118 = *(void *)&v1[v115]
         + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
    swift_beginAccess();
    uint64_t v119 = v136;
    uint64_t v120 = (uint64_t)v138;
    uint64_t v121 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v138, v118, v134);
    swift_unknownObjectRetain();
    uint64_t v122 = (uint64_t)v133;
    sub_2410347D4(v120, (uint64_t)v133);
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v120, v121);
    swift_unknownObjectRelease();
    uint64_t v123 = v132;
    uint64_t v124 = (uint64_t)v132 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_timelineDay;
    swift_beginAccess();
    sub_2411139F0(v122, v124);
    swift_endAccess();
    sub_241107CC8();
    sub_241102698(v122);
    id v125 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CB0]), sel_initWithTarget_action_, v1, sel_scrollToCurrentDay);
    objc_msgSend(v123, sel_addGestureRecognizer_, v125);

    sub_241113A54();
    uint64_t v126 = swift_allocObject();
    *(_OWORD *)(v126 + 16) = xmmword_24116B200;
    uint64_t v127 = sub_24115F9E0();
    uint64_t v128 = MEMORY[0x263F81F30];
    *(void *)(v126 + 32) = v127;
    *(void *)(v126 + 40) = v128;
    uint64_t v129 = sub_24115FA70();
    uint64_t v130 = MEMORY[0x263F82018];
    *(void *)(v126 + 48) = v129;
    *(void *)(v126 + 56) = v130;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_2410602E0();
    sub_241160E60();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
LABEL_45:
  __break(1u);
}

void sub_241112A90(char a1)
{
  uint64_t v3 = sub_24115F790();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241161870();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  double v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    id v28 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_timelineHeight];
    if (v28)
    {
      id v24 = v28;
      id v29 = objc_msgSend(v1, sel_view);
      if (v29)
      {
        id v30 = v29;
        int64_t v31 = sub_241111ADC();
        id v32 = (objc_class *)type metadata accessor for InteractiveTimelineCollectionViewController();
        v46.receiver = v31;
        v46.super_class = v32;
        id v33 = objc_msgSendSuper2(&v46, sel_collectionViewLayout);

        type metadata accessor for InteractiveTimelineCollectionViewLayout();
        uint64_t v34 = swift_dynamicCastClassUnconditional();
        double v35 = *(double *)(v34
                        + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config
                        + 8);
        double v36 = *(double *)(v34
                        + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config
                        + 16);
        double v37 = *(double *)(v34
                        + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config
                        + 32);
        double v39 = *(double *)(v34
                        + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config
                        + 64);
        double v38 = *(double *)(v34
                        + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config
                        + 72);
        id v40 = objc_retain(*(id *)(v34
                                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin39InteractiveTimelineCollectionViewLayout_config
                                + 56));

        objc_msgSend(v40, sel_scaledValueForValue_, v38);
        double v42 = v41;

        (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8E218], v7);
        double v27 = sub_241101984((uint64_t)v10, v36 + v37 + v35 + v39 + v42);

        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  id v11 = sub_241111ADC();
  id v12 = v11;
  id v13 = (double *)&v11[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig];
  id v14 = *(void **)&v11[OBJC_IVAR____TtC26MedicationsHealthAppPlugin43InteractiveTimelineCollectionViewController_nextCollectionViewLayoutConfig
                     + 56];
  if (v14)
  {
    double v16 = v13[8];
    double v15 = v13[9];
    double v17 = v13[4];
    double v19 = v13[1];
    double v18 = v13[2];
    id v20 = v14;

    objc_msgSend(v20, sel_scaledValueForValue_, v15);
    double v22 = v21;

    id v23 = *(void **)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_timelineHeight];
    if (v23)
    {
      id v24 = v23;
      id v25 = objc_msgSend(v1, sel_view);
      if (v25)
      {
        id v26 = v25;
        (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8E218], v7);
        double v27 = sub_241101984((uint64_t)v10, v18 + v17 + v19 + v16 + v22);

LABEL_9:
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        objc_msgSend(v24, sel_setConstant_, v27);

        return;
      }
      goto LABEL_16;
    }
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }

  sub_24115F740();
  uint64_t v43 = sub_24115F780();
  os_log_type_t v44 = sub_241160D30();
  if (os_log_type_enabled(v43, v44))
  {
    id v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v45 = 0;
    _os_log_impl(&dword_241007000, v43, v44, "Could not resize InteractiveTimelineViewController's height because estimate provided was nil.", v45, 2u);
    MEMORY[0x2456180C0](v45, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_241112EB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x2456181C0](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    id v8 = objc_msgSend(a2, sel_horizontalSizeClass);
    id v9 = objc_msgSend(a1, sel_traitCollection);
    id v10 = objc_msgSend(v9, sel_horizontalSizeClass);

    type metadata accessor for InteractiveTimelineViewController();
    if ((sub_241160F90() & 1) == 0 || v8 != v10) {
      sub_241112A90(v8 != v10);
    }
  }
}

id InteractiveTimelineViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void InteractiveTimelineViewController.init(nibName:bundle:)()
{
}

id InteractiveTimelineViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2411131A4()
{
  swift_getObjectType();

  return sub_24115E820();
}

uint64_t sub_2411131E0()
{
  swift_getObjectType();

  return sub_24115E810();
}

void sub_24111321C()
{
  swift_getObjectType();

  JUMPOUT(0x245614670);
}

uint64_t sub_241113258()
{
  swift_getObjectType();

  return sub_24115E840();
}

void sub_241113294(uint64_t a1)
{
  uint64_t v3 = sub_2411605E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for TimelineDay();
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = *(void **)(v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_dateIndicator);
  if (v10)
  {
    uint64_t v11 = a1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsTimelineDataProvider_currentDay;
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v11, v3);
    id v12 = v10;
    sub_2410347D4((uint64_t)v6, (uint64_t)v9);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v13 = (uint64_t)v12 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_timelineDay;
    swift_beginAccess();
    sub_2411139F0((uint64_t)v9, v13);
    swift_endAccess();
    sub_241107CC8();
    sub_241102698((uint64_t)v9);
  }
}

void sub_241113460(uint64_t a1)
{
}

void sub_241113478()
{
  if (qword_26B007030 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26B00BC60;
  uint64_t v1 = (void *)sub_2411606F0();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v1, v0, 0);

  qword_26B00BC58 = (uint64_t)v2;
}

Swift::Void __swiftcall InteractiveTimelineViewController.splitViewController(_:willHide:)(UISplitViewController *_, UISplitViewControllerColumn willHide)
{
}

Swift::Void __swiftcall InteractiveTimelineViewController.splitViewController(_:willShow:)(UISplitViewController *_, UISplitViewControllerColumn willShow)
{
}

id sub_24111366C(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void **)(v3 + 16);
    return objc_msgSend(v6, sel_addObject_, v5);
  }
  else
  {
    a1;
    sub_2411615F0();
    sub_241027EA8(0, (unint64_t *)&qword_26B006CF8);
    sub_241161690();
    sub_241160860();
    id result = (id)sub_2411616B0();
    __break(1u);
  }
  return result;
}

id sub_241113798(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void **)(v3 + 16);
    return objc_msgSend(v6, sel_addObject_, v5);
  }
  else
  {
    a1;
    sub_2411615F0();
    sub_241027EA8(0, (unint64_t *)&qword_26B006CF8);
    sub_241161690();
    sub_241160860();
    id result = (id)sub_2411616B0();
    __break(1u);
  }
  return result;
}

id sub_2411138C4(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void **)(v3 + 16);
    return objc_msgSend(v6, sel_addObject_, v5);
  }
  else
  {
    a1;
    sub_2411615F0();
    sub_241027EA8(0, (unint64_t *)&qword_26B006CF8);
    sub_241161690();
    sub_241160860();
    id result = (id)sub_2411616B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_2411139F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimelineDay();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_241113A54()
{
  if (!qword_268CF2250)
  {
    sub_24106020C();
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2250);
    }
  }
}

uint64_t sub_241113AAC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_241113AE4(void *a1, void *a2)
{
  sub_241112EB4(a1, a2, v2);
}

void sub_241113AEC()
{
  uint64_t v1 = OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_focusIndicatorImageView;
  if (qword_26B007020 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_26B00BC58;
  id v3 = objc_allocWithZone(MEMORY[0x263F82828]);
  id v4 = v2;
  id v5 = objc_msgSend(v3, sel_initWithImage_, v4);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v6 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v5, sel_setTintColor_, v6);

  *(void *)&v0[v1] = v5;
  *(void *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController____lazy_storage___timelineViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_dateIndicator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_timelineHeight] = 0;

  sub_2411616B0();
  __break(1u);
}

uint64_t sub_241113C3C(uint64_t a1, const char *a2)
{
  uint64_t v4 = v2;
  swift_getObjectType();
  uint64_t v6 = sub_24115F790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F770();
  id v10 = sub_24115F780();
  os_log_type_t v11 = sub_241160D50();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = a1;
    uint64_t v13 = v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = v14;
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v22 = v6;
    uint64_t v15 = sub_241161A00();
    uint64_t v23 = sub_24101F0A4(v15, v16, &v24);
    id v20 = a2;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2048;
    uint64_t v23 = v21;
    sub_241161430();
    _os_log_impl(&dword_241007000, v10, v11, v20, (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v14, -1, -1);
    MEMORY[0x2456180C0](v13, -1, -1);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  }
  else
  {

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v18 = *(void *)(v4 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33InteractiveTimelineViewController_dateIndicator);
  if (v18) {
    *(unsigned char *)(v18 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin32InteractiveTimelineDateIndicator_sidebarDidMove) = 1;
  }
  return result;
}

uint64_t type metadata accessor for InteractiveTimelineViewController()
{
  return self;
}

uint64_t sub_241113EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  double v41 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_241118194(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  double v38 = (char *)&v32 - v7;
  sub_2410756F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  uint64_t v34 = v9;
  MEMORY[0x270FA5388](v8);
  os_log_type_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241117E48();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241118030();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  uint64_t v40 = v17;
  MEMORY[0x270FA5388](v16);
  double v37 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24115CB50();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v3 + qword_268CF22F8) = MEMORY[0x263F8EE88];
  *(void *)(v3 + qword_268CF22E8) = a1;
  uint64_t v32 = a2;
  *(void *)(v3 + qword_268CF22F0) = a2;
  v42[0] = 0;
  v42[1] = 0xE000000000000000;
  swift_retain();
  swift_retain();
  sub_2411615F0();
  swift_bridgeObjectRelease();
  strcpy((char *)v42, "MutableArray<");
  HIWORD(v42[1]) = -4864;
  sub_24115CB40();
  sub_24115CB20();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  uint64_t v23 = sub_24115DE40();
  swift_retain();
  v42[0] = sub_24115F630();
  sub_241117F34(0, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68], MEMORY[0x263EFDCF0]);
  sub_241117DF0(0, (unint64_t *)&qword_26B007308, (unint64_t *)&qword_26B007360);
  sub_24102BE24();
  sub_24115FE30();
  swift_release();
  v42[0] = sub_24115F300();
  sub_241117F34(0, &qword_268CF2330, (uint64_t (*)(uint64_t))sub_2410FBFF4, MEMORY[0x263EFDD90]);
  sub_2411182A4(&qword_268CF0C00, (void (*)(uint64_t))sub_2410756F0);
  sub_241117FA8();
  uint64_t v24 = v33;
  sub_24115FE60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v24);
  sub_2411182A4(&qword_268CF2368, (void (*)(uint64_t))sub_241117E48);
  uint64_t v25 = v35;
  uint64_t v26 = sub_24115FE00();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v25);
  v42[0] = v26;
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v43 = (id)sub_241160EF0();
  uint64_t v27 = sub_241160EB0();
  uint64_t v28 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v38, 1, 1, v27);
  sub_2411180FC();
  sub_2411182A4(&qword_268CF2360, (void (*)(uint64_t))sub_2411180FC);
  sub_24102A8F8();
  id v29 = v37;
  sub_24115FF10();
  sub_2410254A0(v28, (unint64_t *)&qword_26B0071C0, v41);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_2411182A4(&qword_268CF2370, (void (*)(uint64_t))sub_241118030);
  uint64_t v30 = v39;
  sub_24115FF60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v29, v30);
  swift_beginAccess();
  sub_24115FC30();
  swift_endAccess();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v23;
}

uint64_t sub_241114630(unint64_t *a1)
{
  unint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v1) {
      swift_bridgeObjectRetain();
    }
    sub_2411146A4(v1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2411146A4(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24115CB50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24115EEE0();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v59 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_24115F790();
  uint64_t v10 = *(void *)(v63 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v63);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v58 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v58 - v17;
  uint64_t v64 = v5;
  uint64_t v65 = v4;
  if (!a1)
  {
    *(void *)&long long v62 = v7;
    sub_24115F740();
    uint64_t v27 = sub_24115F780();
    os_log_type_t v28 = sub_241160D50();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      unint64_t v67 = v30;
      *(_DWORD *)id v29 = 136315138;
      uint64_t v31 = sub_241161A00();
      uint64_t v66 = sub_24101F0A4(v31, v32, (uint64_t *)&v67);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v27, v28, "[%s] unavailableScheduleMedications is nil", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v30, -1, -1);
      MEMORY[0x2456180C0](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v63);
    sub_241118194(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    sub_24115DDF0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_24116B370;
    uint64_t v33 = v62;
    sub_24115CB40();
    sub_24115CB20();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v33, v65);
    goto LABEL_22;
  }
  unint64_t v19 = a1 >> 62;
  if (!(a1 >> 62))
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_2411616E0();
  swift_bridgeObjectRelease();
  if (!v48)
  {
LABEL_19:
    sub_24115F740();
    id v49 = sub_24115F780();
    os_log_type_t v50 = sub_241160D50();
    if (os_log_type_enabled(v49, v50))
    {
      id v51 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      *(void *)&long long v62 = v7;
      uint64_t v53 = v52;
      unint64_t v67 = v52;
      *(_DWORD *)id v51 = 136315138;
      uint64_t v54 = sub_241161A00();
      uint64_t v66 = sub_24101F0A4(v54, v55, (uint64_t *)&v67);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v49, v50, "[%s] unavailableScheduleMedications is empty", v51, 0xCu);
      swift_arrayDestroy();
      uint64_t v56 = v53;
      uint64_t v7 = (char *)v62;
      MEMORY[0x2456180C0](v56, -1, -1);
      MEMORY[0x2456180C0](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v63);
    sub_24115F500();
    sub_241024708(0, (unint64_t *)&qword_26B007320);
    id v57 = (void *)sub_241160D60();
    sub_24115F4E0();

    sub_241118194(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    sub_24115DDF0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_24116B370;
    sub_24115CB40();
    sub_24115CB20();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v7, v65);
LABEL_22:
    sub_24115DDE0();
    sub_24115DE50();
    return swift_bridgeObjectRelease();
  }
LABEL_4:
  sub_24115F740();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_24115F780();
  os_log_type_t v21 = sub_241160D50();
  if (os_log_type_enabled(v20, v21))
  {
    *(void *)&long long v62 = v7;
    uint64_t v58 = v2;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    unint64_t v67 = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v24 = sub_241161A00();
    uint64_t v66 = sub_24101F0A4(v24, v25, (uint64_t *)&v67);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2048;
    if (v19)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v66 = v26;
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v20, v21, "[%s] unavailableScheduleMedications count: %ld", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v23, -1, -1);
    MEMORY[0x2456180C0](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v63);
    uint64_t v7 = (char *)v62;
    if (!v19) {
      goto LABEL_14;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v63);
    if (!v19)
    {
LABEL_14:
      uint64_t v35 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
  }
  unint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = (uint64_t)sub_24114D30C(v34);
  swift_bridgeObjectRelease();
LABEL_15:
  unint64_t v67 = v35;
  sub_241116F38((uint64_t *)&v67);
  unint64_t v36 = v67;
  sub_241024708(0, (unint64_t *)&qword_26B007320);
  swift_retain();
  sub_241160D60();
  sub_24115F500();
  swift_allocObject();
  sub_24115F4C0();
  sub_24115F4F0();
  swift_bridgeObjectRelease();
  if (sub_24115F4B0())
  {
    uint64_t v37 = v59;
    sub_24111593C(v36, v59);
    swift_release();
    double v38 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
    sub_241118194(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    uint64_t v39 = *(void *)(sub_24115DDF0() - 8);
    unint64_t v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v41 = swift_allocObject();
    long long v62 = xmmword_24116B370;
    *(_OWORD *)(v41 + 16) = xmmword_24116B370;
    uint64_t v63 = v41 + v40;
    sub_241118194(0, (unint64_t *)&qword_26B0070A0, (uint64_t (*)(uint64_t))sub_2410787D4, v38);
    double v42 = v7;
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = v62;
    uint64_t v44 = v61;
    *(void *)(v43 + 56) = v61;
    *(void *)(v43 + 64) = sub_2411182A4(&qword_268CF2320, MEMORY[0x263F44EB8]);
    id v45 = sub_2410277C0((uint64_t *)(v43 + 32));
    uint64_t v46 = v60;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v60 + 16))(v45, v37, v44);
    sub_24115CB40();
    sub_24115CB20();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v42, v65);
    sub_24115DDE0();
    sub_24115DE50();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v37, v44);
  }
  swift_release();
  sub_241118194(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_24115DDF0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24116B370;
  sub_24115CB40();
  sub_24115CB20();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v7, v65);
  sub_24115DDE0();
  sub_24115DE50();
  swift_release();
  return swift_bridgeObjectRelease();
}

id sub_241115354()
{
  uint64_t v0 = sub_24115F790();
  uint64_t v36 = *(void *)(v0 - 8);
  uint64_t v37 = v0;
  MEMORY[0x270FA5388](v0);
  double v38 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24115ED70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24115ED90();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241118194(0, &qword_268CF2318, MEMORY[0x263F44E40], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = sub_24115ED60();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v33 - v17;
  sub_24115ED50();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v18, *MEMORY[0x263F44E38], v12);
    sub_2410254A0((uint64_t)v11, &qword_268CF2318, MEMORY[0x263F44E40]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F44E48], v2);
  sub_24115ED40();
  uint64_t v19 = sub_24115ED80();
  if (v20)
  {
    unint64_t v21 = v19;
LABEL_13:
    (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v40);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    return (id)v21;
  }
  uint64_t v22 = v38;
  sub_24115F740();
  uint64_t v23 = v35;
  swift_retain_n();
  uint64_t v24 = sub_24115F780();
  os_log_type_t v25 = sub_241160D30();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v41 = v23;
    uint64_t v42 = v34;
    *(_DWORD *)uint64_t v26 = 136446210;
    uint64_t v33 = v26 + 4;
    type metadata accessor for LocalScheduleUnavailableDataSource();
    swift_retain();
    uint64_t v27 = sub_241160760();
    uint64_t v41 = sub_24101F0A4(v27, v28, &v42);
    sub_241161430();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v24, v25, "[%{public}s] Error getting body text for data source, ScheduleUnavailableDeviceState returned nil", v26, 0xCu);
    uint64_t v29 = v34;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v29, -1, -1);
    MEMORY[0x2456180C0](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v37);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v37);
  }
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v31 = result;
    unsigned int v32 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v32) {
      unint64_t v21 = 0xD00000000000002ALL;
    }
    else {
      unint64_t v21 = 0;
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_24111593C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v35 = a1;
  uint64_t v40 = *v2;
  uint64_t v41 = a2;
  uint64_t v3 = sub_24115EEC0();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v39 = (void *)((char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_24115E9F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F07690];
  sub_241118194(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v31 - v11;
  id v13 = objc_allocWithZone(MEMORY[0x263F825C8]);
  aBlock[4] = sub_241115E94;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24114CCB8;
  aBlock[3] = &unk_26F5578F0;
  uint64_t v14 = _Block_copy(aBlock);
  id v32 = objc_msgSend(v13, sel_initWithDynamicProvider_, v14);
  _Block_release(v14);
  swift_release();
  uint64_t v15 = sub_24115CB90();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v12, 1, 1, v15);
  sub_24115E9E0();
  uint64_t v17 = sub_24115EF20();
  uint64_t v33 = v18;
  uint64_t v34 = v17;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v36 = v5;
  v19(v8, v5);
  uint64_t v20 = v9;
  unint64_t v21 = v35;
  sub_2410254A0((uint64_t)v12, (unint64_t *)&qword_26B007200, v20);
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  id v22 = sub_241115354();
  v31[1] = v23;
  long long v31[2] = v22;
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  v31[0] = sub_2411609E0();
  v16(v12, 1, 1, v15);
  sub_24115E9E0();
  sub_24115EF20();
  v19(v8, v36);
  sub_2410254A0((uint64_t)v12, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
  uint64_t v24 = v38;
  os_log_type_t v25 = v39;
  *uint64_t v39 = v32;
  (*(void (**)(void *, void, uint64_t))(v37 + 104))(v25, *MEMORY[0x263F44EB0], v24);
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v40;
  *(void *)(v26 + 16) = v40;
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = v21;
  v29[3] = v28;
  v29[4] = v27;
  swift_bridgeObjectRetain();
  return sub_24115EED0();
}

id sub_241115E94(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  uint64_t v2 = self;
  uint64_t v3 = &selRef_secondarySystemBackgroundColor;
  if (v1 != (id)2) {
    uint64_t v3 = &selRef_systemGroupedBackgroundColor;
  }
  id v4 = [v2 *v3];

  return v4;
}

uint64_t sub_241115F00(uint64_t a1)
{
  uint64_t v45 = a1;
  uint64_t v49 = sub_24115C9E0();
  uint64_t v1 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24115F140();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v48 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241118194(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  id v47 = (char *)&v40 - v9;
  sub_241118194(0, &qword_26B006930, MEMORY[0x263F06EA8], v7);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  id v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v46 = sub_24115F790();
  uint64_t v16 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  uint64_t v19 = sub_24115F780();
  os_log_type_t v20 = sub_241160D10();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v44 = v15;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v42 = v13;
    id v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v41 = v5;
    uint64_t v24 = v23;
    uint64_t v51 = v23;
    uint64_t v43 = v4;
    *(_DWORD *)id v22 = 136315138;
    uint64_t v40 = v22 + 4;
    uint64_t v25 = sub_241161A00();
    uint64_t v50 = sub_24101F0A4(v25, v26, &v51);
    uint64_t v4 = v43;
    sub_241161430();
    uint64_t v15 = v44;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v19, v20, "[%s] Did tap 'Learn More' in Schedule Unavailable Data Source unavailable item", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v27 = v24;
    uint64_t v5 = v41;
    MEMORY[0x2456180C0](v27, -1, -1);
    uint64_t v28 = v22;
    id v13 = v42;
    MEMORY[0x2456180C0](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v46);
  uint64_t v29 = sub_24115CB90();
  uint64_t v30 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v47, 1, 1, v29);
  uint64_t v31 = v48;
  sub_24115F130();
  sub_24115F5B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v31, v4);
  sub_2410254A0(v30, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
  sub_24115C9D0();
  swift_bridgeObjectRelease();
  sub_241116EA4((uint64_t)v15, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v13, 1, v49) == 1)
  {
    sub_2410254A0((uint64_t)v15, &qword_26B006930, MEMORY[0x263F06EA8]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v13, v49);
    id v32 = self;
    id v33 = objc_msgSend(v32, sel_sharedApplication);
    uint64_t v34 = (void *)sub_24115C9B0();
    unsigned int v35 = objc_msgSend(v33, sel_canOpenURL_, v34);

    if (v35)
    {
      id v36 = objc_msgSend(v32, sel_sharedApplication);
      uint64_t v37 = (void *)sub_24115C9B0();
      sub_241062128(MEMORY[0x263F8EE78]);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_2411182A4(&qword_268CF05B8, type metadata accessor for OpenExternalURLOptionsKey);
      uint64_t v38 = (void *)sub_241160620();
      swift_bridgeObjectRelease();
      objc_msgSend(v36, sel_openURL_options_completionHandler_, v37, v38, 0);
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v49);
    id v13 = v15;
  }
  return sub_2410254A0((uint64_t)v13, &qword_26B006930, MEMORY[0x263F06EA8]);
}

uint64_t sub_2411165C4(uint64_t a1)
{
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  uint64_t v6 = sub_24115F780();
  os_log_type_t v7 = sub_241160D10();
  if (os_log_type_enabled(v6, v7))
  {
    v14[0] = v2;
    uint64_t v8 = swift_slowAlloc();
    v14[1] = a1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    v15[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v11 = sub_241161A00();
    v14[2] = sub_24101F0A4(v11, v12, v15);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v6, v7, "[%s] Did tap 'x (Dismiss)' in Schedule Unavailable Data Source unavailable item", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v10, -1, -1);
    MEMORY[0x2456180C0](v9, -1, -1);

    (*(void (**)(char *, void))(v3 + 8))(v5, v14[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_241024708(0, (unint64_t *)&qword_26B007320);
  swift_bridgeObjectRetain();
  sub_241160D60();
  sub_24115F500();
  swift_allocObject();
  sub_24115F4C0();
  sub_24115F4D0();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_24115DE50();
    swift_release();
  }
  return swift_release();
}

Swift::Void __swiftcall LocalScheduleUnavailableDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t LocalScheduleUnavailableDataSource.layout(for:environment:)()
{
  uint64_t v0 = sub_24115DF90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115DF30();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_24115DF40();
  uint64_t v5 = sub_24115DF80();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

void LocalScheduleUnavailableDataSource.__allocating_init(arrangedSections:identifier:)()
{
}

void LocalScheduleUnavailableDataSource.init(arrangedSections:identifier:)()
{
}

uint64_t sub_241116A30()
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t LocalScheduleUnavailableDataSource.deinit()
{
  uint64_t v0 = sub_24115DE70();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LocalScheduleUnavailableDataSource.__deallocating_deinit()
{
  sub_24115DE70();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_241116B48()
{
  return sub_241160DE0();
}

uint64_t sub_241116BB8()
{
  return sub_2411182A4(&qword_268CF2300, (void (*)(uint64_t))type metadata accessor for LocalScheduleUnavailableDataSource);
}

uint64_t type metadata accessor for LocalScheduleUnavailableDataSource()
{
  uint64_t result = qword_268CF2308;
  if (!qword_268CF2308) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241116C4C()
{
  uint64_t v0 = sub_24115DF90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115DF30();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_24115DF40();
  uint64_t v5 = sub_24115DF80();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_241116D44()
{
  return sub_24115E790();
}

uint64_t sub_241116DA0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241116E00()
{
  return type metadata accessor for LocalScheduleUnavailableDataSource();
}

uint64_t sub_241116E08()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241116E18()
{
  return sub_241115F00(*(void *)(v0 + 16));
}

uint64_t sub_241116E20()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241116E58()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_241116E98()
{
  return sub_2411165C4(*(void *)(v0 + 16));
}

uint64_t sub_241116EA4(uint64_t a1, uint64_t a2)
{
  sub_241118194(0, &qword_26B006930, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_241116F38(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_24115039C();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_241116FB4(v6);
  return sub_241161650();
}

uint64_t sub_241116FB4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_241161840();
  if (result < v4)
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 >= -1)
    {
      uint64_t v7 = result;
      id v94 = a1;
      if (v4 < 2)
      {
        uint64_t v10 = (char *)MEMORY[0x263F8EE78];
        uint64_t v108 = MEMORY[0x263F8EE78];
        __dst = (char *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
        if (v4 != 1)
        {
          unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
          if (v13 < 2) {
            goto LABEL_110;
          }
          goto LABEL_98;
        }
      }
      else
      {
        uint64_t v8 = v6 >> 1;
        sub_241024708(0, (unint64_t *)&qword_26B007360);
        uint64_t v9 = sub_2411609F0();
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
        __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
        uint64_t v108 = v9;
      }
      uint64_t v11 = 0;
      uint64_t v12 = *a1;
      uint64_t v96 = *a1 + 16;
      uint64_t v97 = v7;
      uint64_t v95 = *a1 - 8;
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v102 = v4;
      uint64_t v107 = *a1;
      while (1)
      {
        uint64_t v14 = v11++;
        uint64_t v103 = v14;
        if (v11 < v4)
        {
          uint64_t v15 = *(void **)(v12 + 8 * v11);
          uint64_t v16 = *(void **)(v12 + 8 * v14);
          sub_241024708(0, (unint64_t *)&qword_26B007360);
          id v98 = v15;
          id v17 = v16;
          sub_24115F460();
          sub_24115F460();
          sub_24108741C();
          uint64_t v104 = sub_241161490();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v11 = v14 + 2;
          if (v14 + 2 < v4)
          {
            id v99 = v10;
            uint64_t v18 = (id *)(v96 + 8 * v14);
            while (1)
            {
              uint64_t v19 = *(v18 - 1);
              id v20 = *v18;
              id v21 = v19;
              sub_24115F460();
              sub_24115F460();
              uint64_t v22 = sub_241161490();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v104 == -1) == (v22 != -1)) {
                break;
              }
              ++v11;
              ++v18;
              uint64_t v4 = v102;
              if (v102 == v11)
              {
                uint64_t v11 = v102;
                uint64_t v10 = v99;
                goto LABEL_22;
              }
            }
            uint64_t v10 = v99;
            uint64_t v4 = v102;
LABEL_22:
            uint64_t v14 = v103;
          }
          if (v104 == -1)
          {
            if (v11 < v14) {
              goto LABEL_136;
            }
            if (v14 < v11)
            {
              uint64_t v23 = (uint64_t *)(v95 + 8 * v11);
              uint64_t v24 = v11;
              uint64_t v25 = v14;
              unint64_t v26 = (uint64_t *)(v107 + 8 * v14);
              do
              {
                if (v25 != --v24)
                {
                  if (!v107) {
                    goto LABEL_139;
                  }
                  uint64_t v27 = *v26;
                  *unint64_t v26 = *v23;
                  uint64_t *v23 = v27;
                }
                ++v25;
                --v23;
                ++v26;
              }
              while (v25 < v24);
            }
          }
        }
        if (v11 < v4)
        {
          if (__OFSUB__(v11, v14)) {
            goto LABEL_132;
          }
          if (v11 - v14 < v97)
          {
            if (__OFADD__(v14, v97)) {
              goto LABEL_134;
            }
            if (v14 + v97 >= v4) {
              uint64_t v28 = v4;
            }
            else {
              uint64_t v28 = v14 + v97;
            }
            if (v28 < v14)
            {
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              break;
            }
            if (v11 != v28)
            {
              id v100 = v10;
              sub_241024708(0, (unint64_t *)&qword_26B007360);
              uint64_t v29 = v107;
              uint64_t v30 = v95 + 8 * v11;
              uint64_t v101 = v28;
              do
              {
                uint64_t v31 = *(void **)(v29 + 8 * v11);
                uint64_t v105 = v30;
                while (1)
                {
                  id v32 = *(void **)v30;
                  id v33 = v31;
                  id v34 = v32;
                  sub_24115F460();
                  sub_24115F460();
                  sub_24108741C();
                  uint64_t v35 = sub_241161490();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v35 != -1) {
                    break;
                  }
                  uint64_t v29 = v107;
                  if (!v107) {
                    goto LABEL_137;
                  }
                  id v36 = *(void **)v30;
                  uint64_t v31 = *(void **)(v30 + 8);
                  *(void *)uint64_t v30 = v31;
                  *(void *)(v30 + 8) = v36;
                  v30 -= 8;
                  if (v11 == ++v14) {
                    goto LABEL_42;
                  }
                }
                uint64_t v29 = v107;
LABEL_42:
                ++v11;
                uint64_t v14 = v103;
                uint64_t v30 = v105 + 8;
              }
              while (v11 != v101);
              uint64_t v11 = v101;
              uint64_t v10 = v100;
            }
          }
        }
        if (v11 < v14) {
          goto LABEL_127;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_24114F2EC(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v38 = *((void *)v10 + 2);
        unint64_t v37 = *((void *)v10 + 3);
        unint64_t v13 = v38 + 1;
        uint64_t v12 = v107;
        if (v38 >= v37 >> 1)
        {
          id v87 = sub_24114F2EC((char *)(v37 > 1), v38 + 1, 1, v10);
          uint64_t v12 = v107;
          uint64_t v10 = v87;
        }
        *((void *)v10 + 2) = v13;
        uint64_t v39 = v10 + 32;
        uint64_t v40 = &v10[16 * v38 + 32];
        *(void *)uint64_t v40 = v14;
        *((void *)v40 + 1) = v11;
        if (v38)
        {
          while (1)
          {
            unint64_t v41 = v13 - 1;
            if (v13 >= 4)
            {
              uint64_t v46 = &v39[16 * v13];
              uint64_t v47 = *((void *)v46 - 8);
              uint64_t v48 = *((void *)v46 - 7);
              BOOL v52 = __OFSUB__(v48, v47);
              uint64_t v49 = v48 - v47;
              if (v52) {
                goto LABEL_116;
              }
              uint64_t v51 = *((void *)v46 - 6);
              uint64_t v50 = *((void *)v46 - 5);
              BOOL v52 = __OFSUB__(v50, v51);
              uint64_t v44 = v50 - v51;
              char v45 = v52;
              if (v52) {
                goto LABEL_117;
              }
              unint64_t v53 = v13 - 2;
              uint64_t v54 = &v39[16 * v13 - 32];
              uint64_t v56 = *(void *)v54;
              uint64_t v55 = *((void *)v54 + 1);
              BOOL v52 = __OFSUB__(v55, v56);
              uint64_t v57 = v55 - v56;
              if (v52) {
                goto LABEL_119;
              }
              BOOL v52 = __OFADD__(v44, v57);
              uint64_t v58 = v44 + v57;
              if (v52) {
                goto LABEL_122;
              }
              if (v58 >= v49)
              {
                id v76 = &v39[16 * v41];
                uint64_t v78 = *(void *)v76;
                uint64_t v77 = *((void *)v76 + 1);
                BOOL v52 = __OFSUB__(v77, v78);
                uint64_t v79 = v77 - v78;
                if (v52) {
                  goto LABEL_126;
                }
                BOOL v69 = v44 < v79;
                goto LABEL_86;
              }
            }
            else
            {
              if (v13 != 3)
              {
                uint64_t v70 = *((void *)v10 + 4);
                uint64_t v71 = *((void *)v10 + 5);
                BOOL v52 = __OFSUB__(v71, v70);
                uint64_t v63 = v71 - v70;
                char v64 = v52;
                goto LABEL_80;
              }
              uint64_t v43 = *((void *)v10 + 4);
              uint64_t v42 = *((void *)v10 + 5);
              BOOL v52 = __OFSUB__(v42, v43);
              uint64_t v44 = v42 - v43;
              char v45 = v52;
            }
            if (v45) {
              goto LABEL_118;
            }
            unint64_t v53 = v13 - 2;
            uint64_t v59 = &v39[16 * v13 - 32];
            uint64_t v61 = *(void *)v59;
            uint64_t v60 = *((void *)v59 + 1);
            BOOL v62 = __OFSUB__(v60, v61);
            uint64_t v63 = v60 - v61;
            char v64 = v62;
            if (v62) {
              goto LABEL_121;
            }
            uint64_t v65 = &v39[16 * v41];
            uint64_t v67 = *(void *)v65;
            uint64_t v66 = *((void *)v65 + 1);
            BOOL v52 = __OFSUB__(v66, v67);
            uint64_t v68 = v66 - v67;
            if (v52) {
              goto LABEL_124;
            }
            if (__OFADD__(v63, v68)) {
              goto LABEL_125;
            }
            if (v63 + v68 >= v44)
            {
              BOOL v69 = v44 < v68;
LABEL_86:
              if (v69) {
                unint64_t v41 = v53;
              }
              goto LABEL_88;
            }
LABEL_80:
            if (v64) {
              goto LABEL_120;
            }
            unint64_t v72 = &v39[16 * v41];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v52 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v52) {
              goto LABEL_123;
            }
            if (v75 < v63) {
              goto LABEL_14;
            }
LABEL_88:
            unint64_t v80 = v41 - 1;
            if (v41 - 1 >= v13)
            {
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
              goto LABEL_135;
            }
            if (!v12) {
              goto LABEL_138;
            }
            id v81 = v10;
            id v82 = &v39[16 * v80];
            uint64_t v83 = *(void *)v82;
            id v84 = &v39[16 * v41];
            uint64_t v85 = *((void *)v84 + 1);
            sub_2411179DC((id *)(v12 + 8 * *(void *)v82), (id *)(v12 + 8 * *(void *)v84), v12 + 8 * v85, __dst);
            if (v1) {
              goto LABEL_110;
            }
            if (v85 < v83) {
              goto LABEL_113;
            }
            if (v41 > *((void *)v81 + 2)) {
              goto LABEL_114;
            }
            *(void *)id v82 = v83;
            *(void *)&v39[16 * v80 + 8] = v85;
            unint64_t v86 = *((void *)v81 + 2);
            if (v41 >= v86) {
              goto LABEL_115;
            }
            uint64_t v10 = v81;
            unint64_t v13 = v86 - 1;
            memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
            *((void *)v81 + 2) = v86 - 1;
            uint64_t v12 = v107;
            if (v86 <= 2) {
              goto LABEL_14;
            }
          }
        }
        unint64_t v13 = 1;
LABEL_14:
        uint64_t v4 = v102;
        if (v11 >= v102)
        {
          uint64_t v2 = v1;
          if (v13 < 2)
          {
LABEL_110:
            swift_bridgeObjectRelease();
            *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
            sub_2411609C0();
            return swift_bridgeObjectRelease();
          }
LABEL_98:
          uint64_t v88 = *v94;
          while (1)
          {
            unint64_t v89 = v13 - 2;
            if (v13 < 2) {
              goto LABEL_128;
            }
            if (!v88) {
              goto LABEL_140;
            }
            uint64_t v90 = *(void *)&v10[16 * v89 + 32];
            uint64_t v91 = *(void *)&v10[16 * v13 + 24];
            sub_2411179DC((id *)(v88 + 8 * v90), (id *)(v88 + 8 * *(void *)&v10[16 * v13 + 16]), v88 + 8 * v91, __dst);
            if (v2) {
              goto LABEL_110;
            }
            if (v91 < v90) {
              goto LABEL_129;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v10 = sub_24114F4D4((uint64_t)v10);
            }
            if (v89 >= *((void *)v10 + 2)) {
              goto LABEL_130;
            }
            id v92 = &v10[16 * v89 + 32];
            *(void *)id v92 = v90;
            *((void *)v92 + 1) = v91;
            unint64_t v93 = *((void *)v10 + 2);
            if (v13 > v93) {
              goto LABEL_131;
            }
            memmove(&v10[16 * v13 + 16], &v10[16 * v13 + 32], 16 * (v93 - v13));
            *((void *)v10 + 2) = v93 - 1;
            unint64_t v13 = v93 - 1;
            if (v93 <= 2) {
              goto LABEL_110;
            }
          }
        }
      }
    }
    uint64_t result = sub_2411616A0();
    __break(1u);
    return result;
  }
  if (v4 < 0) {
    goto LABEL_133;
  }
  if (v4) {
    return sub_241117868(0, v4, 1, a1);
  }
  return result;
}

uint64_t sub_241117868(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v15 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    sub_241024708(0, (unint64_t *)&qword_26B007360);
    uint64_t v17 = v5;
    uint64_t v6 = v5 + 8 * v4 - 8;
LABEL_5:
    uint64_t v7 = *(void **)(v17 + 8 * v4);
    uint64_t v8 = v15;
    uint64_t v16 = v6;
    while (1)
    {
      uint64_t v9 = *(void **)v6;
      id v10 = v7;
      id v11 = v9;
      sub_24115F460();
      sub_24115F460();
      sub_24108741C();
      uint64_t v12 = sub_241161490();

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v12 != -1)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v16 + 8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v17) {
        break;
      }
      unint64_t v13 = *(void **)v6;
      uint64_t v7 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v13;
      v6 -= 8;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2411179DC(id *a1, id *__src, unint64_t a3, char *__dst)
{
  uint64_t v5 = __src;
  uint64_t v6 = (char *)__src - (char *)a1;
  uint64_t v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0) {
    uint64_t v7 = (char *)__src - (char *)a1;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v10 = a3 - (void)__src;
  }
  uint64_t v11 = v10 >> 3;
  unint64_t v38 = a1;
  unint64_t v37 = (void **)__dst;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (__dst != (char *)__src || &__src[v11] <= (id *)__dst) {
        memmove(__dst, __src, 8 * v11);
      }
      uint64_t v30 = __dst;
      id v20 = &__dst[8 * v11];
      id v36 = v20;
      unint64_t v38 = v5;
      if (a1 < v5 && v9 >= 8)
      {
        sub_241024708(0, (unint64_t *)&qword_26B007360);
        id v21 = (id *)(a3 - 8);
        uint64_t v22 = v5;
        do
        {
          id v32 = v20;
          id v34 = v21 + 1;
          uint64_t v24 = (void *)*((void *)v20 - 1);
          v20 -= 8;
          uint64_t v23 = v24;
          uint64_t v25 = *--v22;
          id v26 = v23;
          id v27 = v25;
          sub_24115F460();
          sub_24115F460();
          sub_24108741C();
          uint64_t v28 = sub_241161490();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v28 == -1)
          {
            id v20 = v32;
            if (v34 != v5 || v21 >= v5) {
              *id v21 = *v22;
            }
            unint64_t v38 = v22;
          }
          else
          {
            id v36 = v20;
            uint64_t v22 = v5;
            if (v34 < (id *)v32 || v21 >= (id *)v32 || v34 != (id *)v32) {
              *id v21 = *(id *)v20;
            }
          }
          if (v22 <= a1) {
            break;
          }
          --v21;
          uint64_t v5 = v22;
        }
        while (v20 > v30);
      }
      goto LABEL_42;
    }
  }
  else if (v6 >= -7)
  {
    if (__dst != (char *)a1 || &a1[v8] <= (id *)__dst) {
      memmove(__dst, a1, 8 * v8);
    }
    id v33 = (void **)&__dst[8 * v8];
    id v36 = (char *)v33;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      sub_241024708(0, (unint64_t *)&qword_26B007360);
      uint64_t v12 = (void **)__dst;
      unint64_t v13 = a1;
      do
      {
        uint64_t v14 = *v12;
        id v15 = *v5;
        uint64_t v16 = v5;
        id v17 = v14;
        sub_24115F460();
        sub_24115F460();
        sub_24108741C();
        uint64_t v18 = sub_241161490();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18 == -1)
        {
          uint64_t v19 = v16 + 1;
          if (v13 < v16 || v13 >= v19 || v13 != v16) {
            *unint64_t v13 = *v16;
          }
        }
        else
        {
          if (v13 != v12) {
            *unint64_t v13 = *v12;
          }
          unint64_t v37 = ++v12;
          uint64_t v19 = v16;
        }
        ++v13;
        if (v12 >= v33) {
          break;
        }
        uint64_t v5 = v19;
      }
      while ((unint64_t)v19 < a3);
      unint64_t v38 = v13;
    }
LABEL_42:
    sub_24114F414(&v38, &v37, &v36);
    return 1;
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

void sub_241117DF0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241024708(255, a3);
    unint64_t v4 = sub_241160A10();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_241117E48()
{
  if (!qword_268CF2328)
  {
    sub_2410756F0();
    sub_241117F34(255, &qword_268CF2330, (uint64_t (*)(uint64_t))sub_2410FBFF4, MEMORY[0x263EFDD90]);
    sub_2411182A4(&qword_268CF0C00, (void (*)(uint64_t))sub_2410756F0);
    sub_241117FA8();
    unint64_t v0 = sub_24115FA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2328);
    }
  }
}

void sub_241117F34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_241117FA8()
{
  unint64_t result = qword_268CF2338;
  if (!qword_268CF2338)
  {
    sub_241117F34(255, &qword_268CF2330, (uint64_t (*)(uint64_t))sub_2410FBFF4, MEMORY[0x263EFDD90]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF2338);
  }
  return result;
}

void sub_241118030()
{
  if (!qword_268CF2340)
  {
    sub_2411180FC();
    sub_241024708(255, (unint64_t *)&qword_26B007340);
    sub_2411182A4(&qword_268CF2360, (void (*)(uint64_t))sub_2411180FC);
    sub_24102A8F8();
    unint64_t v0 = sub_24115FC00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2340);
    }
  }
}

void sub_2411180FC()
{
  if (!qword_268CF2348)
  {
    sub_241118194(255, &qword_268CF2350, (uint64_t (*)(uint64_t))sub_2411181F8, MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2348);
    }
  }
}

void sub_241118194(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_2411181F8()
{
  if (!qword_268CF2358)
  {
    sub_241117DF0(255, (unint64_t *)&qword_26B007308, (unint64_t *)&qword_26B007360);
    sub_241117DF0(255, &qword_26B006F20, &qword_26B007348);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF2358);
    }
  }
}

uint64_t sub_24111829C(unint64_t *a1)
{
  return sub_241114630(a1);
}

uint64_t sub_2411182A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL HealthAppNotificationManager.areNotificationsEnabled.getter()
{
  unint64_t v0 = (void *)sub_24115CE70();
  id v1 = objc_msgSend(v0, sel_authorizationStatus);

  return v1 == (id)2;
}

id HealthAppNotificationManager.criticalAlertSetting.getter()
{
  unint64_t v0 = (void *)sub_24115CE70();
  id v1 = objc_msgSend(v0, sel_criticalAlertSetting);

  return v1;
}

BOOL sub_241118368()
{
  unint64_t v0 = (void *)sub_24115CE70();
  id v1 = objc_msgSend(v0, sel_authorizationStatus);

  return v1 == (id)2;
}

id sub_2411183AC()
{
  unint64_t v0 = (void *)sub_24115CE70();
  id v1 = objc_msgSend(v0, sel_criticalAlertSetting);

  return v1;
}

uint64_t sub_2411183EC()
{
  return sub_24115CE60();
}

void sub_2411184E4(void *a1)
{
}

void sub_2411184FC(void *a1)
{
}

void sub_241118514(void *a1, void (*a2)(void))
{
  if (objc_msgSend(a1, sel_sender))
  {
    sub_2411614D0();
    swift_unknownObjectRelease();
    sub_241023394(&v7, &v8);
    sub_241024708(0, &qword_268CF2378);
    swift_dynamicCast();
    id v3 = objc_msgSend(self, sel_standardUserDefaults);
    id v4 = objc_msgSend(v6, sel_isOn);
    a2();
    uint64_t v5 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setBool_forKey_, v4, v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_24111863C(void *a1)
{
}

void sub_241118654(void *a1)
{
  if (objc_msgSend(a1, sel_sender))
  {
    sub_2411614D0();
    swift_unknownObjectRelease();
    sub_241023394(&v5, &v6);
    sub_241024708(0, &qword_268CF2378);
    swift_dynamicCast();
    sub_241024708(0, (unint64_t *)&qword_26B007320);
    id v1 = (void *)sub_241160D60();
    id v2 = objc_msgSend(v4, sel_isOn);
    sub_2411607F0();
    id v3 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setBool_forKey_, v2, v3);
  }
  else
  {
    __break(1u);
  }
}

id sub_241118988(uint64_t a1)
{
  return sub_241118AD8(a1, type metadata accessor for MedicationsInternalSettingsViewController);
}

uint64_t type metadata accessor for MedicationsInternalSettingsViewController()
{
  return self;
}

id sub_241118A6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  v7.receiver = a1;
  v7.super_class = (Class)a5(a4);
  return objc_msgSendSuper2(&v7, sel_initWithCoder_, a3);
}

id sub_241118ABC()
{
  return sub_241118AD8(0, type metadata accessor for MedicationsSettingsTableCell);
}

id sub_241118AD8(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsSettingsTableCell()
{
  return self;
}

void *sub_241118B38(void *a1)
{
  uint64_t v2 = sub_24115F9D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v5 = (char *)&v28[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115CDB0();
  long long v6 = (void *)sub_2411606F0();
  objc_super v7 = (void *)sub_24115CD90();
  id v8 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v6, v7);

  type metadata accessor for MedicationsSettingsTableCell();
  uint64_t v9 = (void *)swift_dynamicCastClassUnconditional();
  switch((unint64_t)v9)
  {
    case 0uLL:
      sub_24115F9C0();
      sub_24115F990();
      uint64_t v29 = v2;
      uint64_t v30 = MEMORY[0x263F81F20];
      uint64_t v10 = sub_2410277C0(v28);
      (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v10, v5, v2);
      id v11 = v8;
      MEMORY[0x245616BF0](v28);

      sub_241024708(0, &qword_268CF08F0);
      uint64_t v12 = (void *)sub_241161300();
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_initWithFrame_primaryAction_, v12, 0.0, 0.0, 0.0, 0.0);

      id v14 = objc_msgSend(self, sel_standardUserDefaults);
      sub_241160810();
      break;
    case 1uLL:
      sub_24115F9C0();
      sub_24115F990();
      uint64_t v29 = v2;
      uint64_t v30 = MEMORY[0x263F81F20];
      id v21 = sub_2410277C0(v28);
      (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v21, v5, v2);
      id v22 = v8;
      MEMORY[0x245616BF0](v28);

      sub_241024708(0, &qword_268CF08F0);
      uint64_t v23 = (void *)sub_241161300();
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_initWithFrame_primaryAction_, v23, 0.0, 0.0, 0.0, 0.0);

      id v14 = objc_msgSend(self, sel_standardUserDefaults);
      sub_241160820();
      break;
    case 2uLL:
      sub_24115F9C0();
      sub_24115F990();
      uint64_t v29 = v2;
      uint64_t v30 = MEMORY[0x263F81F20];
      id v15 = sub_2410277C0(v28);
      (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v15, v5, v2);
      id v16 = v8;
      MEMORY[0x245616BF0](v28);

      sub_241024708(0, &qword_268CF08F0);
      id v17 = (void *)sub_241161300();
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_initWithFrame_primaryAction_, v17, 0.0, 0.0, 0.0, 0.0);

      id v14 = objc_msgSend(self, sel_standardUserDefaults);
      sub_241160800();
      break;
    case 3uLL:
      sub_24115F9C0();
      sub_24115F990();
      uint64_t v29 = v2;
      uint64_t v30 = MEMORY[0x263F81F20];
      uint64_t v18 = sub_2410277C0(v28);
      (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v18, v5, v2);
      id v19 = v8;
      MEMORY[0x245616BF0](v28);

      sub_241024708(0, &qword_268CF08F0);
      id v20 = (void *)sub_241161300();
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82C40]), sel_initWithFrame_primaryAction_, v20, 0.0, 0.0, 0.0, 0.0);

      sub_241024708(0, (unint64_t *)&qword_26B007320);
      id v14 = (id)sub_241160D60();
      sub_2411607F0();
      break;
    default:
      __break(1u);
      JUMPOUT(0x241119200);
  }
  uint64_t v24 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v14, sel_BOOLForKey_, v24);

  objc_msgSend(v13, sel_setOn_, v25);
  objc_msgSend(v13, sel_sizeToFit);
  objc_msgSend(v9, sel_setAccessoryView_, v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

uint64_t type metadata accessor for MedicationRoomOnboardingDataSource()
{
  uint64_t result = qword_26B006C98;
  if (!qword_26B006C98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24111925C()
{
  return swift_initClassMetadata2();
}

void sub_24111929C()
{
}

id sub_2411192CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationRoomOnboardingDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241119304()
{
  return type metadata accessor for MedicationRoomOnboardingDataSource();
}

uint64_t sub_24111930C()
{
  uint64_t v0 = sub_24115DC40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115DC20();
  uint64_t v4 = sub_24115DC10();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_2411193D8()
{
  return sub_24115E790();
}

uint64_t sub_241119434@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24115F9D0();
  MEMORY[0x270FA5388](v2 - 8);
  sub_24115F970();
  uint64_t v3 = sub_24115D8A0();
  swift_allocObject();
  uint64_t v4 = sub_24115D890();
  a1[3] = v3;
  uint64_t result = sub_2411195BC((unint64_t *)&qword_26B0069B8, MEMORY[0x263F43AA8]);
  a1[4] = result;
  *a1 = v4;
  return result;
}

uint64_t sub_24111953C()
{
  return sub_241160E00();
}

uint64_t sub_241119574()
{
  return sub_2411195BC(&qword_268CF2380, (void (*)(uint64_t))type metadata accessor for MedicationRoomOnboardingDataSource);
}

uint64_t sub_2411195BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_241119604()
{
  sub_24115D4C0();
  uint64_t v0 = (void *)MEMORY[0x2456132E0]();
  sub_241024708(0, &qword_26B007318);
  sub_2410E30D8();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24116B200;
  uint64_t v2 = sub_24115D4B0();
  uint64_t v4 = v3;
  uint64_t v5 = MEMORY[0x263F8D310];
  *(void *)(v1 + 56) = MEMORY[0x263F8D310];
  unint64_t v6 = sub_2410484D8();
  *(void *)(v1 + 64) = v6;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  sub_24115CEF0();
  sub_241160860();
  swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = v5;
  *(void *)(v1 + 104) = v6;
  *(void *)(v1 + 72) = 0xD000000000000021;
  *(void *)(v1 + 80) = 0x80000002411692C0;
  objc_super v7 = (void *)sub_241160C70();
  objc_msgSend(v0, sel_setPredicate_, v7);

  sub_24104A2D8();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24116B220;
  id v9 = objc_allocWithZone(MEMORY[0x263F08B30]);
  uint64_t v10 = (void *)sub_2411606F0();
  id v11 = objc_msgSend(v9, sel_initWithKey_ascending_, v10, 1);

  *(void *)(v8 + 32) = v11;
  sub_2411609C0();
  sub_241024708(0, &qword_26B007328);
  uint64_t v12 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setSortDescriptors_, v12, v8);

  objc_msgSend(v0, sel_setFetchLimit_, 1);
  return v0;
}

uint64_t sub_241119844()
{
  uint64_t v1 = *MEMORY[0x263F8EED0] & *v0;
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(v1 + 200))(v4);
  sub_24115F750();
  objc_super v7 = v0;
  uint64_t v8 = sub_24115F780();
  os_log_type_t v9 = sub_241160D20();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v2;
    id v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v12;
    *(_DWORD *)id v11 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for LoggingBaseFeedItemViewController();
    swift_getMetatypeMetadata();
    uint64_t v13 = sub_241160760();
    uint64_t ObjectType = sub_24101F0A4(v13, v14, &v19);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v8, v9, "dataDidUpdate: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v12, -1, -1);
    MEMORY[0x2456180C0](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v17);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

uint64_t LoggingBaseFeedItemViewController.feedItemData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
  swift_beginAccess();
  uint64_t v4 = sub_241161420();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LoggingBaseFeedItemViewController.feedItemData.setter(uint64_t a1)
{
  sub_24111C27C(a1);
  uint64_t v2 = sub_241161420();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

void (*LoggingBaseFeedItemViewController.feedItemData.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = *MEMORY[0x263F8EED0] & *v1;
  uint64_t v5 = sub_241161420();
  void v3[4] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  v3[5] = v6;
  size_t v8 = *(void *)(v6 + 64);
  v3[6] = malloc(v8);
  os_log_type_t v9 = malloc(v8);
  v3[7] = v9;
  uint64_t v10 = (char *)v1 + *(void *)(v4 + 96);
  swift_beginAccess();
  id v11 = *(void (**)(void *, char *, uint64_t))(v7 + 16);
  v3[8] = v11;
  v3[9] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v9, v10, v5);
  return sub_241119D68;
}

void sub_241119D68(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void **)(*a1 + 56);
  uint64_t v5 = *(void *)(*a1 + 32);
  uint64_t v6 = *(void *)(*a1 + 40);
  if (a2)
  {
    (*(void (**)(void, void, void))(v2 + 64))(*(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 32));
    sub_24111C27C((uint64_t)v4);
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v4, v5);
    v7(v3, v5);
  }
  else
  {
    sub_24111C27C(*(void *)(v2 + 56));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  free(v3);
  free(v4);

  free((void *)v2);
}

uint64_t LoggingBaseFeedItemViewController.decoder.getter()
{
  uint64_t v1 = *(void *)((*MEMORY[0x263F8EED0] & *v0) + 0x68);
  if (*(void *)((char *)v0 + v1))
  {
    uint64_t v2 = *(void *)((char *)v0 + v1);
  }
  else
  {
    uint64_t v3 = v0;
    sub_24115C750();
    swift_allocObject();
    uint64_t v2 = sub_24115C740();
    *(void *)((char *)v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

Swift::Void __swiftcall LoggingBaseFeedItemViewController.viewDidLoad()()
{
  uint64_t v1 = (void *)MEMORY[0x263F8EED0];
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (objc_class *)type metadata accessor for LoggingBaseFeedItemViewController();
  v20.receiver = v0;
  v20.super_class = v6;
  id v7 = objc_msgSendSuper2(&v20, sel_viewDidLoad);
  (*(void (**)(id))((*v1 & *v0) + 0xC8))(v7);
  sub_24115F750();
  size_t v8 = v0;
  os_log_type_t v9 = sub_24115F780();
  os_log_type_t v10 = sub_241160D20();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v17 = v2;
    uint64_t v13 = v12;
    uint64_t v19 = v12;
    *(_DWORD *)id v11 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    swift_getMetatypeMetadata();
    uint64_t v14 = sub_241160760();
    uint64_t ObjectType = sub_24101F0A4(v14, v15, &v19);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v9, v10, "viewDidLoad: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v13, -1, -1);
    MEMORY[0x2456180C0](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_24111A184(void *a1)
{
  id v1 = a1;
  LoggingBaseFeedItemViewController.viewDidLoad()();
}

Swift::Void __swiftcall LoggingBaseFeedItemViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  uint64_t v3 = sub_24115F790();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  id v7 = (objc_class *)type metadata accessor for LoggingBaseFeedItemViewController();
  v15.receiver = v1;
  v15.super_class = v7;
  objc_msgSendSuper2(&v15, sel_viewDidAppear_, a1);
  LoggingBaseFeedItemViewController.context.getter((uint64_t)v13);
  uint64_t v8 = v14;
  sub_24111C4A0((uint64_t)v13, (uint64_t (*)(void))sub_24111C374);
  if (!v8)
  {
    sub_24115F750();
    os_log_type_t v9 = sub_24115F780();
    os_log_type_t v10 = sub_241160D30();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl(&dword_241007000, v9, v10, "FeedItemViewControllerContext should be set before the tile appears", v11, 2u);
      MEMORY[0x2456180C0](v11, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_24111A394(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4 = a1;
  LoggingBaseFeedItemViewController.viewDidAppear(_:)(a3);
}

uint64_t sub_24111A3E8()
{
  uint64_t v1 = sub_24115F790();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F750();
  id v5 = v0;
  uint64_t v6 = sub_24115F780();
  os_log_type_t v7 = sub_241160D20();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v1;
    os_log_type_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v10;
    *(_DWORD *)os_log_type_t v9 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for LoggingBaseFeedItemViewController();
    swift_getMetatypeMetadata();
    uint64_t v11 = sub_241160760();
    uint64_t ObjectType = sub_24101F0A4(v11, v12, &v17);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v6, v7, "contextWillUpdate: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v10, -1, -1);
    MEMORY[0x2456180C0](v9, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_24111A648()
{
  uint64_t v1 = v0;
  uint64_t v2 = *MEMORY[0x263F8EED0] & *v0;
  uint64_t v3 = sub_24115F790();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  os_log_type_t v9 = (char *)&v23 - v8;
  uint64_t v10 = (uint64_t)v1 + *(void *)(v2 + 112);
  swift_beginAccess();
  sub_24104F0E8(v10, (uint64_t)v25);
  uint64_t v11 = v25[3];
  sub_24111C4A0((uint64_t)v25, (uint64_t (*)(void))sub_24111C374);
  if (!v11)
  {
    sub_24115F750();
    unint64_t v12 = sub_24115F780();
    os_log_type_t v13 = sub_241160D30();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_241007000, v12, v13, "FeedItemViewControllerContext should never be null", v14, 2u);
      MEMORY[0x2456180C0](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  LoggingBaseFeedItemViewController.reloadData()();
  sub_24115F750();
  id v15 = v1;
  uint64_t v16 = sub_24115F780();
  os_log_type_t v17 = sub_241160D20();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v25[0] = v19;
    uint64_t v23 = v3;
    *(_DWORD *)uint64_t v18 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for LoggingBaseFeedItemViewController();
    swift_getMetatypeMetadata();
    uint64_t v20 = sub_241160760();
    uint64_t ObjectType = sub_24101F0A4(v20, v21, v25);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v16, v17, "contextDidUpdate: %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v19, -1, -1);
    MEMORY[0x2456180C0](v18, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v23);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t LoggingBaseFeedItemViewController.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70);
  swift_beginAccess();
  return sub_24104F0E8(v3, a1);
}

uint64_t LoggingBaseFeedItemViewController.context.setter(uint64_t a1)
{
  sub_24111A3E8();
  uint64_t v3 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70);
  swift_beginAccess();
  sub_24104F168(a1, v3);
  swift_endAccess();
  sub_24111A648();
  return sub_24111C4A0(a1, (uint64_t (*)(void))sub_24111C374);
}

void (*LoggingBaseFeedItemViewController.context.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x70);
  swift_beginAccess();
  sub_24104F0E8(v4, (uint64_t)v3);
  return sub_24111AB78;
}

void sub_24111AB78(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    sub_24104F0E8(*a1, (uint64_t)v2 + 40);
    LoggingBaseFeedItemViewController.context.setter((uint64_t)v2 + 40);
    sub_24111C4A0((uint64_t)v2, (uint64_t (*)(void))sub_24111C374);
  }
  else
  {
    LoggingBaseFeedItemViewController.context.setter(*a1);
  }

  free(v2);
}

uint64_t LoggingBaseFeedItemViewController.reloadData()()
{
  uint64_t v21 = *MEMORY[0x263F8EED0] & *v0;
  uint64_t v1 = sub_24115F790();
  void v20[3] = *(void *)(v1 - 8);
  v20[4] = v1;
  MEMORY[0x270FA5388](v1);
  v20[5] = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = *(void *)(v21 + 80);
  uint64_t v4 = sub_241161420();
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  os_log_type_t v9 = (char *)v20 - v8;
  uint64_t result = LoggingBaseFeedItemViewController.context.getter((uint64_t)v24);
  uint64_t v11 = v25;
  if (v25)
  {
    unint64_t v12 = sub_24101A6BC(v24, v25);
    uint64_t v13 = *(void *)(v11 - 8);
    __n128 v14 = MEMORY[0x270FA5388](v12);
    uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v13 + 16))(v16, v14);
    uint64_t v17 = sub_24115E3C0();
    unint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
    sub_24101F178((uint64_t)v24);
    if (v19 >> 60 == 15)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v6, 1, 1, v3);
      sub_24111C27C((uint64_t)v6);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v6, v23);
    }
    else
    {
      LoggingBaseFeedItemViewController.decoder.getter();
      sub_24115C730();
      swift_release();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v9, 0, 1, v3);
      sub_24111C27C((uint64_t)v9);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v23);
      return sub_2410230DC(v17, v19);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall LoggingBaseFeedItemViewController.reloadView()()
{
}

uint64_t LoggingBaseFeedItemViewController.didTapTile(sender:)()
{
  uint64_t v1 = sub_24115F790();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F750();
  id v5 = v0;
  uint64_t v6 = sub_24115F780();
  os_log_type_t v7 = sub_241160D20();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = v1;
    os_log_type_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v10;
    *(_DWORD *)os_log_type_t v9 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for LoggingBaseFeedItemViewController();
    swift_getMetatypeMetadata();
    uint64_t v11 = sub_241160760();
    uint64_t ObjectType = sub_24101F0A4(v11, v12, &v17);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v6, v7, "didTapTile: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v10, -1, -1);
    MEMORY[0x2456180C0](v9, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t LoggingBaseFeedItemViewController.deselectionBehavior.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F440E0];
  uint64_t v3 = sub_24115DEE0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

id LoggingBaseFeedItemViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id LoggingBaseFeedItemViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(char *, uint64_t, uint64_t, void))(*(void *)(*(void *)((*MEMORY[0x263F8EED0] & *(void *)v3)
                                                                                   + 0x50)
                                                                       - 8)
                                                           + 56))(&v3[*(void *)((*MEMORY[0x263F8EED0] & *(void *)v3) + 0x60)], 1, 1, *(void *)((*MEMORY[0x263F8EED0] & *(void *)v3) + 0x50));
  *(void *)&v3[*(void *)((*v6 & *(void *)v3) + 0x68)] = 0;
  id v7 = &v3[*(void *)((*v6 & *(void *)v3) + 0x70)];
  *(_OWORD *)id v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  if (a2)
  {
    uint64_t v8 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for LoggingBaseFeedItemViewController();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, v8, a3);

  return v9;
}

id sub_24111B6E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_241160730();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return LoggingBaseFeedItemViewController.init(nibName:bundle:)(v5, v7, a4);
}

id LoggingBaseFeedItemViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id LoggingBaseFeedItemViewController.init(coder:)(void *a1)
{
  id v3 = (void *)MEMORY[0x263F8EED0];
  (*(void (**)(char *, uint64_t, uint64_t, void))(*(void *)(*(void *)((*MEMORY[0x263F8EED0] & *(void *)v1)
                                                                                   + 0x50)
                                                                       - 8)
                                                           + 56))(&v1[*(void *)((*MEMORY[0x263F8EED0] & *(void *)v1) + 0x60)], 1, 1, *(void *)((*MEMORY[0x263F8EED0] & *(void *)v1) + 0x50));
  *(void *)&v1[*(void *)((*v3 & *(void *)v1) + 0x68)] = 0;
  uint64_t v4 = &v1[*(void *)((*v3 & *(void *)v1) + 0x70)];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for LoggingBaseFeedItemViewController();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id sub_24111B8C8(uint64_t a1, uint64_t a2, void *a3)
{
  return LoggingBaseFeedItemViewController.init(coder:)(a3);
}

id LoggingBaseFeedItemViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LoggingBaseFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24111B964(void *a1)
{
  objc_super v2 = (void *)MEMORY[0x263F8EED0];
  id v3 = (char *)a1 + *(void *)((*MEMORY[0x263F8EED0] & *a1) + 0x60);
  uint64_t v4 = sub_241161420();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return sub_24111C4A0((uint64_t)a1 + *(void *)((*v2 & *a1) + 0x70), (uint64_t (*)(void))sub_24111C374);
}

void (*sub_24111BA68(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = LoggingBaseFeedItemViewController.context.modify(v2);
  return sub_2410FFE7C;
}

uint64_t sub_24111BAC0(void *a1)
{
  return _s26MedicationsHealthAppPlugin33LoggingBaseFeedItemViewControllerC13didSelectCell_2inySo6UIViewC_So0oJ0CtF_0(a1);
}

uint64_t sub_24111BAE4@<X0>(uint64_t a1@<X8>)
{
  return LoggingBaseFeedItemViewController.deselectionBehavior.getter(a1);
}

uint64_t _s26MedicationsHealthAppPlugin33LoggingBaseFeedItemViewControllerC13didSelectCell_2inySo6UIViewC_So0oJ0CtF_0(void *a1)
{
  id v3 = (void *)MEMORY[0x263F8EED0];
  uint64_t v4 = *MEMORY[0x263F8EED0] & *v1;
  uint64_t v5 = *(void *)(v4 + 0x50);
  uint64_t v6 = sub_241161420();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v39 - v7;
  uint64_t v9 = sub_24115F790();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  MEMORY[0x270FA5388](v9);
  char v45 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - v12;
  sub_24115F750();
  uint64_t v46 = v1;
  uint64_t v14 = v1;
  id v15 = a1;
  uint64_t v16 = v14;
  id v17 = v15;
  unint64_t v18 = sub_24115F780();
  os_log_type_t v19 = sub_241160D20();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v47 = v4;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v49[0] = v39;
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for LoggingBaseFeedItemViewController();
    swift_getMetatypeMetadata();
    uint64_t v22 = sub_241160760();
    uint64_t v40 = v5;
    uint64_t ObjectType = sub_24101F0A4(v22, v23, v49);
    sub_241161430();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t ObjectType = (uint64_t)v17;
    sub_24111C500();
    id v24 = v17;
    uint64_t v25 = sub_241160770();
    uint64_t ObjectType = sub_24101F0A4(v25, v26, v49);
    uint64_t v5 = v40;
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v18, v19, "didSelectCell: %{public}s %{public}s", (uint8_t *)v21, 0x16u);
    uint64_t v27 = v39;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v27, -1, -1);
    uint64_t v28 = v21;
    id v3 = (void *)MEMORY[0x263F8EED0];
    MEMORY[0x2456180C0](v28, -1, -1);
  }
  else
  {
  }
  uint64_t v29 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v30 = v13;
  uint64_t v31 = v42;
  v29(v30, v42);
  LoggingBaseFeedItemViewController.feedItemData.getter((uint64_t)v8);
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v8, 1, v5);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v44);
  if (v32 == 1)
  {
    sub_24115F750();
    id v33 = sub_24115F780();
    os_log_type_t v34 = sub_241160D30();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_241007000, v33, v34, "User tapped tile before its data was available", v35, 2u);
      MEMORY[0x2456180C0](v35, -1, -1);
    }

    v29(v45, v31);
  }
  v49[3] = type metadata accessor for LoggingBaseFeedItemViewController();
  v49[0] = (uint64_t)v16;
  id v36 = *(void (**)(uint64_t *))((*v3 & *v16) + 0xD0);
  unint64_t v37 = v16;
  v36(v49);
  return sub_24111C4A0((uint64_t)v49, (uint64_t (*)(void))sub_24104D3F8);
}

uint64_t sub_24111C018(const char *a1)
{
  uint64_t v3 = sub_24115F790();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F750();
  id v7 = v1;
  id v8 = sub_24115F780();
  os_log_type_t v9 = sub_241160D20();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v17 = v3;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = a1;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t ObjectType = swift_getObjectType();
    type metadata accessor for LoggingBaseFeedItemViewController();
    swift_getMetatypeMetadata();
    uint64_t v13 = sub_241160760();
    uint64_t ObjectType = sub_24101F0A4(v13, v14, &v19);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v8, v9, v16, v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v12, -1, -1);
    MEMORY[0x2456180C0](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_24111C27C(uint64_t a1)
{
  uint64_t v3 = (void *)MEMORY[0x263F8EED0];
  sub_24111C018("dataWillUpdate: %{public}s");
  uint64_t v4 = (char *)v1 + *(void *)((*v3 & *v1) + 0x60);
  swift_beginAccess();
  uint64_t v5 = sub_241161420();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(v4, a1, v5);
  swift_endAccess();
  return sub_241119844();
}

uint64_t type metadata accessor for LoggingBaseFeedItemViewController()
{
  return sub_24104DBA0();
}

void sub_24111C374()
{
  if (!qword_268CF0858)
  {
    sub_241020840(255, (unint64_t *)&qword_268CF0860);
    unint64_t v0 = sub_241161420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF0858);
    }
  }
}

uint64_t sub_24111C3DC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24111C3F8()
{
  uint64_t result = sub_241161420();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24111C4A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24111C500()
{
  unint64_t result = qword_26B007008;
  if (!qword_26B007008)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B007008);
  }
  return result;
}

void destroy for InteractiveTimelineConfiguration(uint64_t a1)
{
}

uint64_t initializeWithCopy for InteractiveTimelineConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v3 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v3;
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  id v5 = v3;
  return a1;
}

void *assignWithCopy for InteractiveTimelineConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  long long v4 = (void *)a2[7];
  id v5 = (void *)a1[7];
  a1[7] = v4;
  id v6 = v4;

  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  return a1;
}

__n128 initializeWithTake for InteractiveTimelineConfiguration(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for InteractiveTimelineConfiguration(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  long long v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractiveTimelineConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractiveTimelineConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractiveTimelineConfiguration()
{
  return &type metadata for InteractiveTimelineConfiguration;
}

BOOL sub_24111C770(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  v9[2] = a1[2];
  v9[3] = v2;
  long long v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  long long v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  long long v5 = a2[3];
  long long v10[2] = a2[2];
  v10[3] = v5;
  long long v6 = a2[5];
  void v10[4] = a2[4];
  v10[5] = v6;
  long long v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_24111C7CC((uint64_t)v9, (uint64_t)v10);
}

BOOL sub_24111C7CC(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(double *)(a1 + 16) == *(double *)(a2 + 16)
    && *(double *)(a1 + 24) == *(double *)(a2 + 24)
    && *(double *)(a1 + 32) == *(double *)(a2 + 32)
    && *(double *)(a1 + 40) == *(double *)(a2 + 40)
    && *(double *)(a1 + 48) == *(double *)(a2 + 48)
    && (sub_24103C4BC(), (sub_2411612E0() & 1) != 0)
    && *(double *)(a1 + 64) == *(double *)(a2 + 64)
    && *(double *)(a1 + 72) == *(double *)(a2 + 72)
    && *(double *)(a1 + 80) == *(double *)(a2 + 80))
  {
    return *(void *)(a1 + 88) == *(void *)(a2 + 88);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_24111C8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  sub_24111E4F8();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = a1;
  sub_24102732C(a3, (uint64_t)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  sub_24101177C((uint64_t)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  sub_24115FC10();
  sub_24102B660();
  sub_24102BE58();
  sub_24100CDC4(&qword_26B0072D0, (void (*)(uint64_t))sub_24102B660);
  sub_24100CDC4(&qword_26B005A38, (void (*)(uint64_t))sub_24102BE58);
  sub_24115FF80();
  swift_release();
  sub_24100CDC4(&qword_26B005850, (void (*)(uint64_t))sub_24111E4F8);
  uint64_t v18 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *a4 = v18;
  return result;
}

uint64_t sub_24111CB70@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_24111E784();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24115D1E0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24111CD9C(a2, *a1);
  v19[3] = v11;
  v19[4] = MEMORY[0x263F456B8];
  id v15 = sub_2410277C0(v19);
  (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 16))(v15, v14, v11);
  sub_241020840(0, (unint64_t *)&qword_26B004160);
  sub_24115FCC0();
  sub_24100CDC4((unint64_t *)&qword_26B005B88, (void (*)(uint64_t))sub_24111E784);
  uint64_t v16 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *a3 = v16;
  return result;
}

uint64_t sub_24111CD9C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  LODWORD(v4) = a2;
  uint64_t v6 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v58 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v59 = v7;
  uint64_t v61 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24115D100();
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v56 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v54 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24115D130();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v57 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24115D1C0();
  uint64_t v48 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v53 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24115F790();
  uint64_t v46 = *(void *)(v14 - 8);
  uint64_t v47 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_241161A00();
  unint64_t v64 = v17;
  sub_241160860();
  uint64_t v60 = a1;
  uint64_t v18 = (void *)sub_24115D170();
  sub_24115CEF0();

  sub_241160860();
  swift_bridgeObjectRelease();
  uint64_t v20 = v63;
  unint64_t v19 = v64;
  uint64_t v21 = sub_24115D1F0();
  uint64_t v51 = v22;
  uint64_t v52 = v21;
  uint64_t v50 = v23;
  int v49 = v24;
  sub_24115F730();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_24115F780();
  os_log_type_t v26 = sub_241160D50();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    int v45 = v4;
    uint64_t v4 = v27;
    uint64_t v42 = swift_slowAlloc();
    uint64_t v63 = v42;
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v43 = v12;
    uint64_t v28 = sub_241161A00();
    uint64_t v62 = sub_24101F0A4(v28, v29, &v63);
    uint64_t v44 = v3;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_24101F0A4(v20, v19, &v63);
    uint64_t v3 = v44;
    uint64_t v12 = v43;
    sub_241161430();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_241007000, v25, v26, "%s Creating feed item %s", (uint8_t *)v4, 0x16u);
    uint64_t v30 = v42;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v30, -1, -1);
    uint64_t v31 = v4;
    LOBYTE(v4) = v45;
    MEMORY[0x2456180C0](v31, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v47);
  uint64_t v32 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v53, v60, v12);
  sub_24115D170();
  sub_241023B40(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588]);
  uint64_t v33 = sub_24115CEB0();
  uint64_t v34 = *(void *)(v33 - 8);
  unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_24116B370;
  (*(void (**)(unint64_t, void, uint64_t))(v34 + 104))(v36 + v35, *MEMORY[0x263F45570], v33);
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, *MEMORY[0x263F45688], v56);
  sub_24115D110();
  uint64_t v37 = v61;
  sub_24102732C(v32, v61);
  unint64_t v38 = (*(unsigned __int8 *)(v58 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  uint64_t v39 = v38 + v59;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v3;
  sub_24101177C(v37, v40 + v38);
  *(unsigned char *)(v40 + v39) = v4 & 1;
  return sub_24115D1D0();
}

uint64_t sub_24111D40C(uint64_t a1, char a2)
{
  uint64_t v64 = a1;
  uint64_t v3 = sub_24115F790();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v48 - v8;
  uint64_t v10 = sub_24115D810();
  uint64_t v67 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v65 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24115CEB0();
  uint64_t v61 = *(void *)(v12 - 8);
  uint64_t v62 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v63 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24115D0A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v66 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_24115D9D0();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24115DCD0();
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v51 = v15;
    uint64_t v52 = v10;
    uint64_t v53 = v14;
    uint64_t v56 = v7;
    uint64_t v54 = v4;
    uint64_t v55 = v3;
    uint64_t v57 = v21;
    uint64_t v58 = v20;
    if (qword_26B007268 != -1) {
      swift_once();
    }
    id v24 = (id)static LocalizationSource.medicationsHealthAppPlugin;
    swift_bridgeObjectRetain();
    sub_24115C960();
    swift_bridgeObjectRelease();

    id v25 = (id)static LocalizationSource.medicationsHealthAppPlugin;
    swift_bridgeObjectRetain();
    sub_24115C960();
    swift_bridgeObjectRelease();

    sub_24115D9B0();
    sub_24115DCA0();
    uint64_t v50 = sub_24115DCC0();
    unint64_t v49 = v32;
    sub_241022EB4(v50, v32);
    v69[0] = sub_241161A00();
    v69[1] = v33;
    sub_241160860();
    uint64_t v34 = (void *)sub_24115D170();
    sub_24115CEF0();

    sub_241160860();
    swift_bridgeObjectRelease();
    *(void *)&long long v68 = v69[0];
    type metadata accessor for MedicationsNotificationSettingsDisclosureCellViewController(0);
    sub_24115CF30();
    (*(void (**)(char *, void, uint64_t))(v61 + 104))(v63, *MEMORY[0x263F45570], v62);
    sub_24115D170();
    unint64_t v35 = v66;
    uint64_t v36 = v50;
    unint64_t v37 = v49;
    sub_24115CFC0();
    unint64_t v38 = v23;
    sub_24115DCB0();
    sub_24115D9C0();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v18, v60);
    sub_24115CFB0();
    sub_2410B37D8();
    uint64_t inited = swift_initStackObject();
    long long v68 = xmmword_24116B370;
    *(_OWORD *)(inited + 16) = xmmword_24116B370;
    *(void *)(inited + 32) = sub_24115D250();
    *(void *)(inited + 40) = v40;
    sub_2410CD6A4(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    sub_24115D080();
    uint64_t v41 = v67;
    uint64_t v42 = v65;
    uint64_t v43 = v52;
    (*(void (**)(char *, void, uint64_t))(v67 + 104))(v65, *MEMORY[0x263F43828], v52);
    sub_24115D800();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
    sub_24115D090();
    sub_24115CFA0();
    sub_241023B40(0, (unint64_t *)&qword_26B005F20, MEMORY[0x263F45630]);
    uint64_t v44 = v51;
    unint64_t v45 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v68;
    (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v46 + v45, v35, v53);
    sub_241023084(v36, v37);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v58);
  }
  else
  {
    sub_24115F730();
    os_log_type_t v26 = sub_24115F780();
    os_log_type_t v27 = sub_241160D50();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      v69[0] = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v30 = sub_241161A00();
      v69[3] = sub_24101F0A4(v30, v31, v69);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v26, v27, "%s Feature is not onboarded, generating nothing for notification settings", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v29, -1, -1);
      MEMORY[0x2456180C0](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    return MEMORY[0x263F8EE78];
  }
  return v46;
}

uint64_t sub_24111DED8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin48MedicationsNotificationSettingsGeneratorPipeline_domain;
  uint64_t v2 = sub_24115D130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24111DF88()
{
  return type metadata accessor for MedicationsNotificationSettingsGeneratorPipeline(0);
}

uint64_t sub_24111DF90()
{
  uint64_t result = sub_24115D130();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MedicationsNotificationSettingsDisclosureCellViewController(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B004E18);
}

uint64_t sub_24111E04C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24111E08C()
{
  uint64_t v1 = sub_241160730();
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t (*sub_24111E0FC(uint64_t *a1))()
{
  uint64_t v4 = sub_241160730();
  uint64_t v5 = v2;
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v5;
  return destroy for MedicationHighlightsGeneratorPipeline.Failure;
}

uint64_t destroy for MedicationHighlightsGeneratorPipeline.Failure()
{
  return swift_bridgeObjectRelease();
}

id sub_24111E1A0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    sub_241160730();
    id v6 = a4;
    uint64_t v7 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = a4;
    uint64_t v7 = 0;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for MedicationsNotificationSettingsDisclosureCellViewController(0);
  id v9 = objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, v7, a4);

  return v9;
}

id sub_24111E244(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MedicationsNotificationSettingsDisclosureCellViewController(0);
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_24111E290()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsNotificationSettingsDisclosureCellViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24111E2C8()
{
  return type metadata accessor for MedicationsNotificationSettingsDisclosureCellViewController(0);
}

void sub_24111E2D0(uint64_t a1, void *a2)
{
  id v3 = objc_allocWithZone((Class)type metadata accessor for MedicationsNotificationSettingsViewController(0));
  id v6 = sub_24108A5C4();
  id v4 = objc_msgSend(a2, sel_navigationController);
  if (v4)
  {
    objc_super v5 = v4;
    objc_msgSend(v4, sel_pushViewController_animated_, v6, 1);
  }
}

uint64_t sub_24111E35C()
{
  uint64_t v1 = (int *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24111E484@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_24111C8CC(v4, v5, v6, a1);
}

void sub_24111E4F8()
{
  if (!qword_26B005858)
  {
    sub_24102BE58();
    sub_24102B660();
    sub_24100CDC4(&qword_26B005A38, (void (*)(uint64_t))sub_24102BE58);
    sub_24100CDC4(&qword_26B0072D0, (void (*)(uint64_t))sub_24102B660);
    unint64_t v0 = sub_24115FBA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005858);
    }
  }
}

uint64_t sub_24111E5E0()
{
  uint64_t v1 = (int *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24111E700@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_24111CB70(a1, v6, a2);
}

void sub_24111E784()
{
  if (!qword_26B005B90)
  {
    sub_241020840(255, (unint64_t *)&qword_26B004160);
    unint64_t v0 = sub_24115FCB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005B90);
    }
  }
}

uint64_t sub_24111E7EC()
{
  uint64_t v1 = (int *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  uint64_t v5 = *(void *)(*(void *)v1 + 64) + v3 + 1;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24111E910()
{
  uint64_t v1 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_24111D40C(v0 + v2, *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64)));
}

uint64_t TimeZoneDataSource.__allocating_init(healthStore:healthTimeZoneProvider:viewController:)(void *a1, uint64_t a2, void *a3)
{
  return TimeZoneDataSource.init(healthStore:healthTimeZoneProvider:viewController:)(a1, a2, a3);
}

uint64_t TimeZoneDataSource.init(healthStore:healthTimeZoneProvider:viewController:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  long long v68 = a3;
  uint64_t v88 = a2;
  unint64_t v86 = (void (*)(uint64_t))MEMORY[0x263F8F110];
  sub_24101729C(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v83 = (char *)v65 - v7;
  uint64_t v85 = (void (*)(uint64_t))MEMORY[0x263F8F118];
  sub_24101729C(0, &qword_268CF19F8, MEMORY[0x263F8F118]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v78 = (char *)v65 - v9;
  uint64_t v89 = sub_241160EE0();
  uint64_t v87 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  id v76 = (char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_241160FB0();
  unint64_t v71 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v12 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24111F548();
  uint64_t v14 = *(v13 - 1);
  unint64_t v72 = (void (*)(void, void, void, void))v13;
  uint64_t v73 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v66 = (char *)v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24111F634();
  uint64_t v77 = v16;
  uint64_t v79 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v70 = (char *)v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24111F720(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v80 = v18;
  uint64_t v81 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v74 = (char *)v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24111F768(0, &qword_268CF23B0, (uint64_t (*)(uint64_t))sub_24111F720, sub_24111F84C, MEMORY[0x263EFDCA8]);
  uint64_t v82 = v21;
  uint64_t v84 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v75 = (char *)v65 - v22;
  uint64_t v23 = sub_241160420();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  os_log_type_t v26 = (char *)v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_24115F3F0();
  MEMORY[0x270FA5388](v27 - 8);
  *(void *)(v3 + qword_268CF23C0) = 0;
  uint64_t v28 = qword_268CF23C8;
  sub_24115CEA0();
  swift_retain();
  *(void *)(v3 + v28) = sub_24115CE90();
  id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F44BF0]), sel_initWithHealthStore_, a1);
  uint64_t v30 = qword_268CF23D0;
  *(void *)(v3 + qword_268CF23D0) = v29;
  *(void *)(v3 + qword_268CF23D8) = v88;
  swift_retain();
  sub_24115F3D0();
  id v31 = objc_allocWithZone((Class)sub_24115F420());
  unint64_t v32 = (void *)sub_24115F410();
  *(void *)(v4 + qword_268CF23E0) = v32;
  uint64_t v33 = *(void **)(v4 + v30);
  v65[1] = sub_241024708(0, (unint64_t *)&qword_26B007340);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v26, *MEMORY[0x263F8F090], v23);
  id v34 = v33;
  id v35 = v32;
  uint64_t v36 = (void *)sub_241160F10();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  objc_msgSend(v34, sel_registerObserver_queue_, v35, v36);
  swift_release();

  id v37 = a1;
  id v67 = v37;
  long long v68 = v68;
  unint64_t v38 = TipDataSource.init(healthStore:viewController:)(v37, v68);
  uint64_t v39 = self;
  uint64_t v40 = v38;
  swift_retain();
  id v41 = objc_msgSend(v39, sel_defaultCenter);
  sub_241160FC0();

  uint64_t v42 = *(void **)((char *)v40 + qword_268CF23E0);
  v65[0] = v40;
  id v43 = v42;
  uint64_t v44 = (void *)sub_24115F400();

  id v90 = v44;
  sub_2410D631C();
  sub_2411237E4(&qword_26B006FB0, MEMORY[0x263F07CB0]);
  sub_2411237E4(&qword_26B006E68, (void (*)(uint64_t))sub_2410D631C);
  unint64_t v45 = v66;
  uint64_t v46 = v69;
  sub_24115FE60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v12, v46);
  id v90 = (id)sub_24115EF60();
  sub_24107F3C8();
  sub_2411237E4(&qword_268CF2398, (void (*)(uint64_t))sub_24111F548);
  sub_2411237E4(&qword_268CF0D48, (void (*)(uint64_t))sub_24107F3C8);
  uint64_t v47 = v70;
  uint64_t v48 = v72;
  sub_24115FE60();
  swift_release();
  (*(void (**)(char *, void (*)(void, void, void, void)))(v73 + 8))(v45, v48);
  unint64_t v49 = v76;
  sub_241160ED0();
  uint64_t v50 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v78, 1, 1, v89);
  id v90 = (id)sub_241160EF0();
  uint64_t v51 = sub_241160EB0();
  uint64_t v52 = *(void *)(v51 - 8);
  unint64_t v72 = *(void (**)(void, void, void, void))(v52 + 56);
  uint64_t v73 = v52 + 56;
  uint64_t v53 = v83;
  v72(v83, 1, 1, v51);
  sub_24111F818();
  unint64_t v71 = sub_24102A8F8();
  uint64_t v54 = v74;
  uint64_t v55 = v77;
  sub_24115FE90();
  uint64_t v56 = (uint64_t)v53;
  uint64_t v57 = (uint64_t)v53;
  uint64_t v58 = v86;
  sub_24102AAA0(v56, (unint64_t *)&qword_26B0071C0, v86);

  sub_24102AAA0(v50, &qword_268CF19F8, v85);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v49, v89);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v47, v55);
  id v90 = (id)sub_241160EF0();
  v72(v57, 1, 1, v51);
  sub_24111F84C();
  uint64_t v59 = v75;
  uint64_t v60 = v80;
  sub_24115FF10();
  sub_24102AAA0(v57, (unint64_t *)&qword_26B0071C0, v58);

  (*(void (**)(char *, uint64_t))(v81 + 8))(v54, v60);
  swift_allocObject();
  uint64_t v61 = v65[0];
  swift_weakInit();
  sub_24111FB60();
  uint64_t v62 = v82;
  uint64_t v63 = sub_24115FF60();
  swift_release();
  swift_release();

  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v59, v62);
  *(void *)(v61 + qword_268CF23C0) = v63;
  swift_release();
  return v61;
}

void sub_24111F548()
{
  if (!qword_268CF2388)
  {
    sub_241160FB0();
    sub_2410D631C();
    sub_2411237E4(&qword_26B006FB0, MEMORY[0x263F07CB0]);
    sub_2411237E4(&qword_26B006E68, (void (*)(uint64_t))sub_2410D631C);
    unint64_t v0 = sub_24115FA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2388);
    }
  }
}

void sub_24111F634()
{
  if (!qword_268CF2390)
  {
    sub_24111F548();
    sub_24107F3C8();
    sub_2411237E4(&qword_268CF2398, (void (*)(uint64_t))sub_24111F548);
    sub_2411237E4(&qword_268CF0D48, (void (*)(uint64_t))sub_24107F3C8);
    unint64_t v0 = sub_24115FA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2390);
    }
  }
}

void sub_24111F720(uint64_t a1)
{
}

void sub_24111F768(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_241024708(255, (unint64_t *)&qword_26B007340);
    long long v11[2] = a4();
    v11[3] = sub_24102A8F8();
    unint64_t v9 = a5(a1, v11);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_24111F818()
{
  return sub_2411237E4(&qword_268CF23A8, (void (*)(uint64_t))sub_24111F634);
}

uint64_t sub_24111F84C()
{
  return sub_2411237E4(&qword_268CF23B8, sub_24111F720);
}

uint64_t sub_24111F880()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24111F8B8(uint64_t a1)
{
  sub_241123C58();
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24101729C(0, &qword_268CF0D40, MEMORY[0x263F44C68]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = *(int *)(v3 + 56);
  uint64_t v10 = (uint64_t)&v5[v9];
  uint64_t v11 = a1 + v9;
  uint64_t v12 = sub_24115C830();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v5, a1, v12);
  sub_24107F65C(v11, v10);
  sub_241123D50(v10, (uint64_t)v8);
  uint64_t v14 = sub_24115F120();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v12);
    sub_24102AAA0((uint64_t)v8, &qword_268CF0D40, MEMORY[0x263F44C68]);
  }
  else
  {
    char v16 = sub_24115F110();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v14);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v12);
    if (v16)
    {
      swift_beginAccess();
      uint64_t result = swift_weakLoadStrong();
      if (!result) {
        return result;
      }
      TimeZoneDataSource.showTipIfNeeded()();
      return swift_release();
    }
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  TipDataSource.hideItem()();
  return swift_release();
}

uint64_t sub_24111FB58(uint64_t a1)
{
  return sub_24111F8B8(a1);
}

unint64_t sub_24111FB60()
{
  unint64_t result = qword_268CF23E8;
  if (!qword_268CF23E8)
  {
    sub_24111F768(255, &qword_268CF23B0, (uint64_t (*)(uint64_t))sub_24111F720, sub_24111F84C, MEMORY[0x263EFDCA8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_268CF23E8);
  }
  return result;
}

Swift::Bool __swiftcall TimeZoneDataSource.shouldShowTip()()
{
  uint64_t v0 = sub_24115F790();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)&v34 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v34 - v8;
  sub_24115F0C0();
  sub_24115F0B0();
  sub_24115F050();
  swift_release();
  sub_241024708(0, (unint64_t *)&qword_26B007320);
  sub_241160D60();
  sub_24115F040();
  swift_allocObject();
  sub_24115EF90();
  id v10 = objc_msgSend(self, sel_sharedBehavior);
  if (v10)
  {
    uint64_t v11 = v10;
    unsigned __int8 v12 = objc_msgSend(v10, sel_hkmd_supportsTimeZone);

    if ((v12 & 1) == 0)
    {
      sub_24115F740();
      uint64_t v19 = sub_24115F780();
      os_log_type_t v20 = sub_241160D50();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v35 = v0;
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        uint64_t v37 = v22;
        *(_DWORD *)uint64_t v21 = 136315138;
        uint64_t v23 = sub_241161A00();
        uint64_t v36 = sub_24101F0A4(v23, v24, &v37);
        sub_241161430();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241007000, v19, v20, "[%s] Abort show time zone item. Not supported", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v22, -1, -1);
        MEMORY[0x2456180C0](v21, -1, -1);
        swift_release();

        (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v35);
        goto LABEL_17;
      }
      swift_release();

      id v31 = *(void (**)(char *, uint64_t))(v1 + 8);
      unint64_t v32 = v9;
LABEL_16:
      v31(v32, v0);
      goto LABEL_17;
    }
    if ((sub_24115EF70() & 1) == 0)
    {
      sub_24115F740();
      uint64_t v25 = sub_24115F780();
      os_log_type_t v26 = sub_241160D50();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v35 = v0;
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v37 = v28;
        *(_DWORD *)uint64_t v27 = 136315138;
        uint64_t v29 = sub_241161A00();
        uint64_t v36 = sub_24101F0A4(v29, v30, &v37);
        sub_241161430();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241007000, v25, v26, "[%s] Abort show time zone item. Setting toggle off.", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v28, -1, -1);
        MEMORY[0x2456180C0](v27, -1, -1);
        swift_release();

        (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v35);
        goto LABEL_17;
      }
      swift_release();

      id v31 = *(void (**)(char *, uint64_t))(v1 + 8);
      unint64_t v32 = v7;
      goto LABEL_16;
    }
    type metadata accessor for TimeZoneDataSource();
    if (sub_24115DBD0() >= 1 && sub_24115DBC0() > 0)
    {
      sub_24115F740();
      uint64_t v13 = sub_24115F780();
      os_log_type_t v14 = sub_241160D50();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v35 = v0;
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        uint64_t v37 = v16;
        *(_DWORD *)uint64_t v15 = 136315138;
        uint64_t v17 = sub_241161A00();
        uint64_t v36 = sub_24101F0A4(v17, v18, &v37);
        sub_241161430();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241007000, v13, v14, "[%s] Abort show tip item. Item is already visible.", v15, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v16, -1, -1);
        MEMORY[0x2456180C0](v15, -1, -1);
        swift_release();

        (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v35);
LABEL_17:
        LOBYTE(v10) = 0;
        return (char)v10;
      }
      swift_release();

      id v31 = *(void (**)(char *, uint64_t))(v1 + 8);
      unint64_t v32 = v4;
      goto LABEL_16;
    }
    swift_release();
    LOBYTE(v10) = 1;
  }
  else
  {
    __break(1u);
  }
  return (char)v10;
}

Swift::Void __swiftcall TimeZoneDataSource.showTipIfNeeded()()
{
  uint64_t v1 = *v0;
  sub_24101729C(0, &qword_26B007310, MEMORY[0x263F8F520]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - v3;
  if (TimeZoneDataSource.shouldShowTip()())
  {
    uint64_t v5 = sub_241160A70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    uint64_t v6 = swift_allocObject();
    swift_weakInit();
    uint64_t v7 = (void *)swift_allocObject();
    long long v7[2] = 0;
    v7[3] = 0;
    v7[4] = v6;
    v7[5] = v1;
    sub_24101A700((uint64_t)v4, (uint64_t)&unk_268CF23F8, (uint64_t)v7);
    swift_release();
  }
}

uint64_t sub_241120350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  sub_24101729C(0, &qword_26B007310, MEMORY[0x263F8F520]);
  v5[13] = swift_task_alloc();
  uint64_t v6 = sub_24115CB10();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  uint64_t v7 = sub_24115CD80();
  v5[17] = v7;
  v5[18] = *(void *)(v7 - 8);
  v5[19] = swift_task_alloc();
  uint64_t v8 = sub_24115F790();
  v5[20] = v8;
  v5[21] = *(void *)(v8 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  sub_24101729C(0, &qword_268CF0D40, MEMORY[0x263F44C68]);
  v5[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_241120580, 0, 0);
}

uint64_t sub_241120580()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[27] = Strong;
  if (Strong)
  {
    v0[28] = *(void *)(Strong + qword_268CF23D8);
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[29] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_241120708;
    uint64_t v3 = v0[26];
    return MEMORY[0x270F352E8](v3);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_241120708()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_241120820, 0, 0);
}

uint64_t sub_241120820()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = sub_24115F120();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_24102AAA0(v1, &qword_268CF0D40, MEMORY[0x263F44C68]);
LABEL_7:
    sub_24115F740();
    uint64_t v7 = sub_24115F780();
    os_log_type_t v8 = sub_241160D50();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v12 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 168);
    if (v9)
    {
      uint64_t v19 = *(void *)(v0 + 160);
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v20 = v14;
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v15 = sub_241161A00();
      *(void *)(v0 + 40) = sub_24101F0A4(v15, v16, &v20);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 1024;
      *(_DWORD *)(v0 + 272) = 0;
      sub_241161430();
      _os_log_impl(&dword_241007000, v7, v8, "[%s] Abort show time zone item. Should show time zone item is: %{BOOL}d", (uint8_t *)v13, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v14, -1, -1);
      MEMORY[0x2456180C0](v13, -1, -1);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v19);
    }
    else
    {

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  char v4 = sub_24115F110();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((v4 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v5 = *(void **)(*(void *)(v0 + 216) + qword_268CF23D0);
  *(void *)(v0 + 240) = v5;
  v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_241120BC0;
  return MEMORY[0x270F35738]();
}

uint64_t sub_241120BC0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 256) = a1;
  *(void *)(v3 + 264) = v1;
  swift_task_dealloc();
  if (v1)
  {
    char v4 = sub_24112131C;
  }
  else
  {

    char v4 = sub_241120CDC;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_241120CDC()
{
  uint64_t v59 = v0;
  unint64_t v1 = v0[32];
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v3 = v0[32];
    if (v2) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    sub_24115F740();
    uint64_t v37 = sub_24115F780();
    os_log_type_t v38 = sub_241160D50();
    BOOL v39 = os_log_type_enabled(v37, v38);
    uint64_t v40 = v0[25];
    uint64_t v41 = v0[20];
    uint64_t v42 = v0[21];
    if (v39)
    {
      uint64_t v57 = v0[20];
      uint64_t v54 = v0[25];
      id v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v58 = v44;
      *(_DWORD *)id v43 = 136315138;
      uint64_t v45 = sub_241161A00();
      v0[10] = sub_24101F0A4(v45, v46, &v58);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v37, v38, "[%s] Abort show time zone item. User has no active schedules.", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v44, -1, -1);
      MEMORY[0x2456180C0](v43, -1, -1);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v54, v57);
    }
    else
    {

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
    }
    goto LABEL_19;
  }
LABEL_15:
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_2411616E0();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0[32];
  if (!v2) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v7 = v0[16];
  uint64_t v6 = v0[17];
  uint64_t v9 = v0[14];
  uint64_t v8 = v0[15];
  sub_24115CD70();
  sub_24115CB00();
  uint64_t v52 = sub_24115CD50();
  uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v51(v7, v9);
  uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v50(v4, v6);
  unint64_t v55 = v1 & 0xC000000000000001;
  uint64_t v49 = v3 + 32;
  swift_bridgeObjectRetain();
  unint64_t v1 = 0;
  do
  {
    if (v55) {
      id v10 = (id)MEMORY[0x245617450](v1, v0[32]);
    }
    else {
      id v10 = *(id *)(v49 + 8 * v1);
    }
    uint64_t v11 = v10;
    unint64_t v12 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    uint64_t v13 = v2;
    uint64_t v14 = v0[19];
    uint64_t v16 = v0[16];
    uint64_t v15 = v0[17];
    uint64_t v17 = v0[14];
    id v18 = objc_msgSend(v10, sel_createdUTCOffset);
    sub_24115CD60();

    sub_24115CB00();
    uint64_t v19 = sub_24115CD50();
    v51(v16, v17);
    v50(v14, v15);

    if (v19 != v52)
    {
      uint64_t v31 = v0[12];
      uint64_t v30 = v0[13];
      swift_bridgeObjectRelease_n();
      uint64_t v32 = sub_241160A70();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v30, 1, 1, v32);
      uint64_t v33 = swift_allocObject();
      swift_weakInit();
      sub_241160A50();
      swift_retain();
      uint64_t v34 = sub_241160A40();
      uint64_t v35 = (void *)swift_allocObject();
      uint64_t v36 = MEMORY[0x263F8F500];
      void v35[2] = v34;
      v35[3] = v36;
      v35[4] = v33;
      v35[5] = v31;
      swift_release();
      sub_24101A700(v30, (uint64_t)&unk_268CF2448, (uint64_t)v35);
      swift_release();
      swift_release();
      goto LABEL_19;
    }
    ++v1;
    uint64_t v2 = v13;
  }
  while (v12 != v13);
  swift_bridgeObjectRelease_n();
  sub_24115F740();
  uint64_t v20 = sub_24115F780();
  os_log_type_t v21 = sub_241160D50();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v23 = v0[24];
  uint64_t v24 = v0[20];
  uint64_t v25 = v0[21];
  if (v22)
  {
    uint64_t v56 = v0[24];
    os_log_type_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = v24;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v58 = v27;
    *(_DWORD *)os_log_type_t v26 = 136315138;
    uint64_t v28 = sub_241161A00();
    v0[9] = sub_24101F0A4(v28, v29, &v58);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v20, v21, "[%s] Abort show time zone item. All existing schedules created with a timezone with the same UTC offset.", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v27, -1, -1);
    MEMORY[0x2456180C0](v26, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v56, v53);
  }
  else
  {

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  }
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v47 = (uint64_t (*)(void))v0[1];
  return v47();
}

uint64_t sub_24112131C()
{
  uint64_t v24 = v0;
  unint64_t v1 = *(void **)(v0 + 264);

  sub_24115F740();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24115F780();
  os_log_type_t v5 = sub_241160D30();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 264);
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v22 = *(void *)(v0 + 176);
    uint64_t v21 = *(void *)(v0 + 160);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v23 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v10 = sub_241161A00();
    *(void *)(v0 + 48) = sub_24101F0A4(v10, v11, &v23);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    *(void *)(v0 + 56) = v6;
    id v12 = v6;
    sub_241020840(0, (unint64_t *)&qword_26B0073B0);
    uint64_t v13 = sub_241160760();
    *(void *)(v0 + 64) = sub_24101F0A4(v13, v14, &v23);
    sub_241161430();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v4, v5, "[%s] Abort show time zone item. Fetch active schedules error: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v9, -1, -1);
    MEMORY[0x2456180C0](v8, -1, -1);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v22, v21);
  }
  else
  {
    uint64_t v15 = *(void **)(v0 + 264);
    uint64_t v17 = *(void *)(v0 + 168);
    uint64_t v16 = *(void *)(v0 + 176);
    uint64_t v18 = *(void *)(v0 + 160);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_241121604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = sub_24115F790();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  sub_241160A50();
  v5[11] = sub_241160A40();
  uint64_t v8 = sub_241160A20();
  return MEMORY[0x270FA2498](sub_2411216F8, v8, v7);
}

uint64_t sub_2411216F8()
{
  uint64_t v16 = v0;
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_24115F740();
    unint64_t v1 = sub_24115F780();
    os_log_type_t v2 = sub_241160D50();
    BOOL v3 = os_log_type_enabled(v1, v2);
    uint64_t v5 = v0[9];
    uint64_t v4 = v0[10];
    uint64_t v6 = v0[8];
    if (v3)
    {
      uint64_t v14 = v0[10];
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v15 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v9 = sub_241161A00();
      v0[5] = sub_24101F0A4(v9, v10, &v15);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v1, v2, "[%s] Will show time zone item", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v8, -1, -1);
      MEMORY[0x2456180C0](v7, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v6);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    }
    sub_2410E6BC4();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_24116B370;
    TimeZoneDataSource.makeTipItem()((uint64_t *)(v11 + 32));
    sub_24115DE60();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  id v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t TimeZoneDataSource.makeTipItem()@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  sub_24115C960();
  sub_24115C960();
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  os_log_type_t v2 = self;
  swift_retain();
  swift_retain();
  objc_msgSend(v2, sel_systemGrayColor, 0xE000000000000000);
  a1[3] = sub_24115E8C0();
  a1[4] = sub_2411237E4(&qword_268CF1D08, MEMORY[0x263F44D38]);
  sub_2410277C0(a1);
  sub_24115E8A0();
  swift_release();

  return swift_release();
}

uint64_t sub_241121C28()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_241121CDC(1);
    return swift_release();
  }
  return result;
}

uint64_t sub_241121C84()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_2411227D0();
    return swift_release();
  }
  return result;
}

uint64_t sub_241121CDC(int a1)
{
  os_log_type_t v2 = v1;
  uint64_t v4 = *v1;
  sub_24101729C(0, &qword_26B007310, MEMORY[0x263F8F520]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = sub_24115F790();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  id v12 = sub_24115F780();
  os_log_type_t v13 = sub_241160D50();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = v8;
    uint64_t v15 = v14;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v27 = v23;
    *(_DWORD *)uint64_t v15 = 136315394;
    int v25 = a1;
    uint64_t v16 = sub_241161A00();
    uint64_t v26 = sub_24101F0A4(v16, v17, &v27);
    LOBYTE(a1) = v25;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 1024;
    LODWORD(v26) = a1 & 1;
    sub_241161430();
    _os_log_impl(&dword_241007000, v12, v13, "[%s] Update schedule tapped %{BOOL}d", (uint8_t *)v15, 0x12u);
    uint64_t v18 = v23;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v18, -1, -1);
    MEMORY[0x2456180C0](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v19 = sub_241160A70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 1, 1, v19);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  *(void *)(v20 + 32) = v2;
  *(unsigned char *)(v20 + 40) = a1 & 1;
  *(void *)(v20 + 48) = v4;
  swift_retain();
  sub_24101A700((uint64_t)v7, (uint64_t)&unk_268CF2438, v20);
  return swift_release();
}

uint64_t sub_241122028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 200) = a5;
  *(void *)(v6 + 136) = a4;
  *(void *)(v6 + 144) = a6;
  uint64_t v7 = sub_24115F790();
  *(void *)(v6 + 152) = v7;
  *(void *)(v6 + 160) = *(void *)(v7 - 8);
  *(void *)(v6 + 168) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2411220EC, 0, 0);
}

uint64_t sub_2411220EC()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 200);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F44BF0]), sel_initWithHealthStore_, *(void *)(*(void *)(v0 + 136) + direct field offset for TipDataSource.healthStore));
  *(void *)(v0 + 176) = v2;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_241122220;
  uint64_t v3 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x263EF8330];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_24102A09C;
  *(void *)(v0 + 104) = &unk_2650E38E8;
  *(void *)(v0 + 112) = v3;
  objc_msgSend(v2, sel_updateSchedulesToLocalTimeZoneAndMaintainCalendarDatesAndTimes_completion_, v1, v0 + 80);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_241122220()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    id v2 = sub_241122524;
  }
  else {
    id v2 = sub_241122330;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_241122330()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2411223C0;
  return sub_241122ACC();
}

uint64_t sub_2411223C0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2411224BC, 0, 0);
}

uint64_t sub_2411224BC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_241122524()
{
  uint64_t v27 = v0;
  uint64_t v1 = v0;
  uint64_t v4 = v0 + 22;
  uint64_t v3 = (void *)v0[22];
  id v2 = (void *)v4[1];
  swift_willThrow();

  sub_24115F740();
  id v5 = v2;
  id v6 = v2;
  uint64_t v7 = sub_24115F780();
  os_log_type_t v8 = sub_241160D30();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (void *)v1[23];
    uint64_t v23 = v1[20];
    uint64_t v24 = v1[19];
    uint64_t v25 = v1[21];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v26 = v22;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v12 = sub_241161A00();
    v1[15] = sub_24101F0A4(v12, v13, &v26);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    id v14 = v9;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v1[16] = v15;
    sub_241161430();
    *uint64_t v11 = v15;

    _os_log_impl(&dword_241007000, v7, v8, "[%s] Failed to update schedules to the local time zone while maintaining calendar dates and times error: %@.", (uint8_t *)v10, 0x16u);
    sub_24103C464();
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v22, -1, -1);
    MEMORY[0x2456180C0](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    uint64_t v16 = (void *)v1[23];
    uint64_t v18 = v1[20];
    uint64_t v17 = v1[21];
    uint64_t v19 = v1[19];

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v1[1];
  return v20();
}

uint64_t sub_2411227D0()
{
  uint64_t v1 = v0;
  sub_24101729C(0, &qword_26B007310, MEMORY[0x263F8F520]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v14 - v3;
  uint64_t v5 = sub_241160A70();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  long long v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_24102AAA0((uint64_t)v4, &qword_26B007310, MEMORY[0x263F8F520]);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_241160A60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_241160A20();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_268CF2420;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    void v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_241122A3C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24102A258;
  return sub_241122ACC();
}

uint64_t sub_241122ACC()
{
  v1[18] = v0;
  v1[19] = *v0;
  sub_24101729C(0, &qword_26B007310, MEMORY[0x263F8F520]);
  v1[20] = swift_task_alloc();
  uint64_t v2 = sub_24115F790();
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_241122C0C, 0, 0);
}

uint64_t sub_241122C0C()
{
  uint64_t v18 = v0;
  sub_24115F740();
  uint64_t v1 = sub_24115F780();
  os_log_type_t v2 = sub_241160D50();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v16 = v0[24];
    uint64_t v4 = v0[21];
    uint64_t v3 = v0[22];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = sub_241161A00();
    v0[17] = sub_24101F0A4(v7, v8, &v17);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v1, v2, "[%s] Dismissing Timezone update tip", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v6, -1, -1);
    MEMORY[0x2456180C0](v5, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v9(v16, v4);
  }
  else
  {
    uint64_t v10 = v0[24];
    uint64_t v11 = v0[21];
    uint64_t v12 = v0[22];

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v9(v10, v11);
  }
  v0[25] = v9;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F44BF0]), sel_initWithHealthStore_, *(void *)(v0[18] + direct field offset for TipDataSource.healthStore));
  v0[26] = v13;
  v0[2] = v0;
  v0[3] = sub_241122EA4;
  uint64_t v14 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_24102A09C;
  v0[13] = &unk_2650E38D0;
  v0[14] = v14;
  objc_msgSend(v13, sel_setTimeZoneTipAsDismissedWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_241122EA4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    os_log_type_t v2 = sub_241123114;
  }
  else {
    os_log_type_t v2 = sub_241122FB4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_241122FB4()
{
  uint64_t v1 = *(void *)(v0 + 160);

  uint64_t v2 = sub_241160A70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  sub_241160A50();
  swift_retain();
  uint64_t v4 = sub_241160A40();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = MEMORY[0x263F8F500];
  v5[2] = v4;
  v5[3] = v6;
  void v5[4] = v3;
  swift_release();
  sub_241102850(v1, (uint64_t)&unk_268CF2410, (uint64_t)v5);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_241123114()
{
  uint64_t v27 = v0;
  uint64_t v1 = v0;
  uint64_t v4 = v0 + 26;
  uint64_t v3 = (void *)v0[26];
  uint64_t v2 = (void *)v4[1];
  swift_willThrow();

  sub_24115F740();
  id v5 = v2;
  id v6 = v2;
  uint64_t v7 = sub_24115F780();
  os_log_type_t v8 = sub_241160D30();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (void *)v1[27];
    uint64_t v24 = v1[23];
    uint64_t v25 = (void (*)(uint64_t, uint64_t))v1[25];
    uint64_t v23 = v1[21];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v26 = v22;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v12 = sub_241161A00();
    v1[15] = sub_24101F0A4(v12, v13, &v26);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    id v14 = v9;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v1[16] = v15;
    sub_241161430();
    *uint64_t v11 = v15;

    _os_log_impl(&dword_241007000, v7, v8, "[%s] Failed to dismiss timeZone tip with: %@.", (uint8_t *)v10, 0x16u);
    sub_24103C464();
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v22, -1, -1);
    MEMORY[0x2456180C0](v10, -1, -1);

    v25(v24, v23);
  }
  else
  {
    uint64_t v16 = (void *)v1[27];
    uint64_t v17 = (void (*)(uint64_t, uint64_t))v1[25];
    uint64_t v18 = v1[23];
    uint64_t v19 = v1[21];

    v17(v18, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v1[1];
  return v20();
}

uint64_t sub_2411233E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  sub_241160A50();
  v4[7] = sub_241160A40();
  uint64_t v6 = sub_241160A20();
  return MEMORY[0x270FA2498](sub_241123478, v6, v5);
}

uint64_t sub_241123478()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    TipDataSource.hideItem()();
    swift_release();
  }
  **(unsigned char **)(v0 + 40) = Strong == 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void TimeZoneDataSource.__allocating_init(healthStore:viewController:)()
{
}

void TimeZoneDataSource.init(healthStore:viewController:)()
{
}

uint64_t sub_241123580()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t TimeZoneDataSource.deinit()
{
  uint64_t v0 = sub_24115DE70();

  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();

  swift_release();
  return v0;
}

uint64_t TimeZoneDataSource.__deallocating_deinit()
{
  TimeZoneDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TimeZoneDataSource()
{
  uint64_t result = qword_26B006B50;
  if (!qword_26B006B50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24112370C()
{
  return sub_241123B4C(48);
}

uint64_t sub_241123714(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24102A258;
  return sub_241120350(a1, v4, v5, v7, v6);
}

uint64_t sub_2411237D4()
{
  return sub_241121C28();
}

uint64_t sub_2411237DC()
{
  return sub_241121C84();
}

uint64_t sub_2411237E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24112382C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241123898()
{
  return type metadata accessor for TimeZoneDataSource();
}

uint64_t sub_2411238A0()
{
  return sub_241123B4C(40);
}

uint64_t sub_2411238A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24102A258;
  return sub_2411233E0(a1, v4, v5, v6);
}

uint64_t sub_24112395C()
{
  return sub_241123B4C(40);
}

uint64_t sub_241123964()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24102A258;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24102A258;
  return sub_241122ACC();
}

uint64_t sub_241123A38()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241123A70()
{
  return sub_241123B4C(56);
}

uint64_t sub_241123A78(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_24100B740;
  return sub_241122028(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_241123B44()
{
  return sub_241123B4C(48);
}

uint64_t sub_241123B4C(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_241123B98(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24102A258;
  return sub_241121604(a1, v4, v5, v7, v6);
}

void sub_241123C58()
{
  if (!qword_268CF2450)
  {
    sub_241123CE4();
    sub_24101729C(255, &qword_268CF0D40, MEMORY[0x263F44C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF2450);
    }
  }
}

void sub_241123CE4()
{
  if (!qword_268CF2458)
  {
    sub_24115C830();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF2458);
    }
  }
}

uint64_t sub_241123D50(uint64_t a1, uint64_t a2)
{
  sub_24101729C(0, &qword_268CF0D40, MEMORY[0x263F44C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241123DD0()
{
  uint64_t v1 = sub_24115F790();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411246E4(0, &qword_26B006D78, MEMORY[0x263F81EE0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v29 - v6;
  uint64_t v8 = sub_24115F8B0();
  uint64_t v31 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24115F9D0();
  uint64_t v30 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsDayScheduleEmptyCell_item;
  swift_beginAccess();
  sub_241061700(v14, (uint64_t)v33);
  if (v34)
  {
    uint64_t v29 = v8;
    sub_2410787D4();
    type metadata accessor for MedicationsDayScheduleEmptyItem();
    if (swift_dynamicCast())
    {
      MEMORY[0x245616EB0]();
      swift_bridgeObjectRetain();
      sub_24115F990();
      uint64_t v34 = v11;
      uint64_t v35 = MEMORY[0x263F81F20];
      uint64_t v15 = sub_2410277C0(v33);
      uint64_t v16 = v30;
      (*(void (**)(uint64_t *, char *, uint64_t))(v30 + 16))(v15, v13, v11);
      MEMORY[0x245616E10](v33);
      sub_24115F8A0();
      id v17 = objc_msgSend(self, sel_tertiarySystemGroupedBackgroundColor);
      sub_24115F870();
      uint64_t v18 = v31;
      uint64_t v19 = v29;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v7, v10, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v7, 0, 1, v19);
      MEMORY[0x245616E30](v7);
      swift_release();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v19);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v13, v11);
    }
  }
  else
  {
    sub_2410616A4((uint64_t)v33);
  }
  sub_24115F740();
  id v21 = v0;
  uint64_t v22 = v4;
  uint64_t v23 = sub_24115F780();
  os_log_type_t v24 = sub_241160D30();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v31 = v1;
    uint64_t v32 = v26;
    sub_241061700(v14, (uint64_t)v33);
    sub_2411246E4(0, (unint64_t *)&qword_26B0069B0, (void (*)(uint64_t))sub_2410787D4);
    uint64_t v27 = sub_241160770();
    v33[0] = sub_24101F0A4(v27, v28, &v32);
    sub_241161430();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v23, v24, "Incorrect view model for MedicationsDayScheduleEmptyItem: %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v26, -1, -1);
    MEMORY[0x2456180C0](v25, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v22, v31);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v22, v1);
  }
}

id sub_2411243F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsDayScheduleEmptyCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsDayScheduleEmptyCell()
{
  return self;
}

uint64_t sub_24112445C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsDayScheduleEmptyCell_item;
  swift_beginAccess();
  return sub_241061700(v3, a1);
}

uint64_t sub_2411244B0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin31MedicationsDayScheduleEmptyCell_item;
  swift_beginAccess();
  sub_2410615D8(a1, v3);
  swift_endAccess();
  sub_241123DD0();
  return sub_2410616A4(a1);
}

uint64_t (*sub_241124520(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_241124580;
}

uint64_t sub_241124580(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_241123DD0();
  }
  return result;
}

unint64_t sub_2411245B4()
{
  return 0xD000000000000015;
}

uint64_t type metadata accessor for MedicationsDayScheduleEmptyItem()
{
  return self;
}

unint64_t sub_241124668()
{
  return sub_2411245B4();
}

unint64_t sub_241124690()
{
  unint64_t result = qword_26B006A20;
  if (!qword_26B006A20)
  {
    type metadata accessor for MedicationsDayScheduleEmptyItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B006A20);
  }
  return result;
}

void sub_2411246E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241161420();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241124738(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_15:
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_2411616E0();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x245617450](v4, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_medicationIdentifier);
      uint64_t v9 = sub_241160730();
      uint64_t v11 = v10;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_241051F68(0, v5[2] + 1, 1, v5);
      }
      unint64_t v13 = v5[2];
      unint64_t v12 = v5[3];
      if (v13 >= v12 >> 1) {
        uint64_t v5 = sub_241051F68((void *)(v12 > 1), v13 + 1, 1, v5);
      }
      ++v4;
      v5[2] = v13 + 1;
      uint64_t v14 = &v5[2 * v13];
      void v14[4] = v9;
      v14[5] = v11;
    }
    while (v2 != v4);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_2411248B0(void (*a1)(long long *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (!v6) {
      return v7;
    }
    uint64_t v19 = MEMORY[0x263F8EE78];
    uint64_t result = sub_2410E5AC4(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v9 = 0;
    uint64_t v7 = v19;
    while (v6 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x245617450](v9, a3);
      }
      else {
        id v10 = *(id *)(a3 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      id v17 = v10;
      a1(&v18, &v17);
      if (v4)
      {
        swift_release();

        return v7;
      }
      uint64_t v4 = 0;

      long long v12 = v18;
      uint64_t v19 = v7;
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        long long v15 = v18;
        sub_2410E5AC4(v13 > 1, v14 + 1, 1);
        long long v12 = v15;
        uint64_t v7 = v19;
      }
      ++v9;
      *(void *)(v7 + 16) = v14 + 1;
      *(_OWORD *)(v7 + 16 * v14 + 32) = v12;
      if (v6 == v9) {
        return v7;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_241124A40(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_241161660();
    uint64_t result = sub_24112E1B8(a3);
    int64_t v7 = result;
    int v9 = v8;
    char v11 = v10 & 1;
    while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(a3 + 32))
    {
      if (((*(void *)(a3 + 56 + (((unint64_t)v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_13;
      }
      if (*(_DWORD *)(a3 + 36) != v9) {
        goto LABEL_14;
      }
      long long v12 = (void *)(*(void *)(a3 + 48) + 16 * v7);
      uint64_t v13 = v12[1];
      v17[0] = *v12;
      v17[1] = v13;
      swift_bridgeObjectRetain();
      a1(&v18, v17);
      swift_bridgeObjectRelease();
      if (v3) {
        return swift_release();
      }
      sub_241161640();
      sub_241161670();
      sub_241161680();
      sub_241161650();
      uint64_t result = sub_24112E258(v7, v9, v11 & 1, a3);
      int64_t v7 = result;
      int v9 = v14;
      char v11 = v15 & 1;
      if (!--v4)
      {
        sub_24112FA88(result, v14, v15 & 1);
        return v19;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

unint64_t sub_241124BDC(void *a1)
{
  sub_2411615F0();
  swift_bridgeObjectRelease();
  id v2 = a1;
  id v3 = objc_msgSend(v2, sel_description);
  sub_241160730();

  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  uint64_t v4 = sub_241024708(0, &qword_26B007358);
  uint64_t v5 = swift_bridgeObjectRetain();
  MEMORY[0x2456167F0](v5, v4);
  sub_241160860();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

unint64_t sub_241124D10()
{
  return sub_241124BDC(*v0);
}

uint64_t sub_241124D18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  sub_241024708(0, (unint64_t *)&qword_26B007218);
  if ((sub_2411612E0() & 1) == 0) {
    return 0;
  }

  return sub_241132288(v2, v3);
}

uint64_t sub_241124DA0()
{
  return 0;
}

uint64_t sub_241124E24()
{
  return sub_241124DA0();
}

uint64_t sub_241124E38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v59 = a3;
  uint64_t v7 = sub_24115D130();
  MEMORY[0x270FA5388](v7 - 8);
  int v9 = &v53[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_24115D1C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v65 = &v53[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v66 = &v53[-v15];
  uint64_t v64 = v16;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = &v53[-v17];
  uint64_t v19 = sub_24115F790();
  uint64_t v61 = *(void *)(v19 - 8);
  uint64_t v62 = v19;
  MEMORY[0x270FA5388](v19);
  id v21 = &v53[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = *a1;
  sub_24115F740();
  uint64_t v23 = v10;
  uint64_t v63 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16);
  v63(v18, a2, v10);
  uint64_t v67 = v22;
  swift_bridgeObjectRetain_n();
  uint64_t v60 = v21;
  os_log_type_t v24 = sub_24115F780();
  os_log_type_t v25 = sub_241160D50();
  int v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v58 = v9;
    os_log_t v55 = v24;
    uint64_t v28 = v27;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v69 = v29;
    *(_DWORD *)uint64_t v28 = 136315906;
    int v54 = v26;
    uint64_t v30 = sub_241161A00();
    uint64_t v57 = v11;
    uint64_t v68 = sub_24101F0A4(v30, v31, &v69);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    uint64_t v32 = (void *)sub_24115D170();
    uint64_t v33 = sub_24115CF00();
    uint64_t v59 = a2;
    uint64_t v34 = v33;
    uint64_t v56 = v11 + 16;
    uint64_t v35 = a4;
    uint64_t v36 = v23;
    unint64_t v38 = v37;

    uint64_t v68 = sub_24101F0A4(v34, v38, &v69);
    uint64_t v11 = v57;
    sub_241161430();
    uint64_t v39 = v36;
    a4 = v35;
    swift_bridgeObjectRelease();
    uint64_t v23 = v39;
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v18, v39);
    *(_WORD *)(v28 + 22) = 2048;
    uint64_t v40 = v67;
    uint64_t v41 = *(void *)(v67 + 16);
    swift_bridgeObjectRelease();
    uint64_t v68 = v41;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 32) = 2080;
    uint64_t v68 = v40;
    sub_24102AE24(0, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263F8D488]);
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_2411607A0();
    uint64_t v68 = sub_24101F0A4(v42, v43, &v69);
    sub_241161430();
    swift_bridgeObjectRelease_n();
    a2 = v59;
    swift_bridgeObjectRelease();
    os_log_t v44 = v55;
    _os_log_impl(&dword_241007000, v55, (os_log_type_t)v54, "[%s]_%s: Received %ld highlights, emitting generator for: %s", (uint8_t *)v28, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v29, -1, -1);
    int v9 = v58;
    MEMORY[0x2456180C0](v28, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v18, v23);

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v60, v62);
  uint64_t v45 = sub_24115D1E0();
  uint64_t v46 = MEMORY[0x263F456B8];
  a4[3] = v45;
  a4[4] = v46;
  sub_2410277C0(a4);
  uint64_t v47 = v63;
  v63(v66, a2, v23);
  uint64_t v48 = (void *)sub_24115D170();
  sub_24100DED8(v48, (uint64_t)v9);

  sub_24115D170();
  uint64_t v49 = v65;
  v47(v65, a2, v23);
  unint64_t v50 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v67;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v11 + 32))(v51 + v50, v49, v23);
  swift_bridgeObjectRetain();
  return sub_24115D1D0();
}

uint64_t sub_241125438@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v49 = a5;
  os_log_t v50 = a4;
  uint64_t v56 = a3;
  uint64_t v57 = a6;
  sub_24112DAF0(0, &qword_26B005BB8, MEMORY[0x263EFDDF8]);
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v53 = &v47[-v9];
  uint64_t v10 = sub_24115D1C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v47[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_24115F790();
  uint64_t v51 = *(void *)(v14 - 8);
  uint64_t v52 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = &v47[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24112DB74();
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  id v21 = &v47[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v23 = sub_241125B00(a2, v22);
    sub_24115D160();
    if (sub_24115D3D0())
    {
      uint64_t v24 = sub_241125FB4(v22, a2);
      uint64_t v58 = v23;
      uint64_t v59 = v24;
      os_log_type_t v25 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
      sub_24102B7C4(0, &qword_26B005AF0, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263EFDCF0]);
      sub_24102B850(&qword_26B005AE8, &qword_26B005AF0, v25);
      sub_24115FF00();
      sub_241010110(&qword_26B0054E0, (void (*)(uint64_t))sub_24112DB74);
      uint64_t v26 = sub_24115FE20();
      swift_release();
      swift_release();
      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v19 + 8))(v21, v18);
    }
    else
    {
      uint64_t v59 = v23;
      uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
      sub_24102B7C4(0, &qword_26B005AF0, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263EFDCF0]);
      sub_24102B850(&qword_26B005AE8, &qword_26B005AF0, v29);
      uint64_t v26 = sub_24115FE20();
      uint64_t result = swift_release();
    }
    uint64_t v28 = v57;
    goto LABEL_12;
  }
  sub_24115F740();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  unint64_t v31 = sub_24115F780();
  os_log_type_t v32 = sub_241160D50();
  int v33 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v34 = swift_slowAlloc();
    os_log_t v50 = v31;
    uint64_t v35 = v34;
    uint64_t v56 = swift_slowAlloc();
    uint64_t v59 = v56;
    *(_DWORD *)uint64_t v35 = 136315394;
    int v48 = v33;
    uint64_t v36 = sub_241161A00();
    uint64_t v58 = sub_24101F0A4(v36, v37, &v59);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    unint64_t v38 = (void *)sub_24115D170();
    uint64_t v39 = sub_24115CF00();
    unint64_t v41 = v40;

    uint64_t v58 = sub_24101F0A4(v39, v41, &v59);
    sub_241161430();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    os_log_t v42 = v50;
    _os_log_impl(&dword_241007000, v50, (os_log_type_t)v48, "[%s]_%s: No dose events found, returning empty array for no data snippet", (uint8_t *)v35, 0x16u);
    uint64_t v43 = v56;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v43, -1, -1);
    MEMORY[0x2456180C0](v35, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  }
  (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v16, v52);
  uint64_t v28 = v57;
  uint64_t v45 = v54;
  uint64_t v44 = v55;
  uint64_t v46 = v53;
  uint64_t v59 = MEMORY[0x263F8EE78];
  sub_24102AE24(0, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263F8D488]);
  sub_24115FCC0();
  sub_24112DC44();
  uint64_t v26 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v45 + 8))(v46, v44);
LABEL_12:
  *uint64_t v28 = v26;
  return result;
}

uint64_t sub_241125B00(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a1;
  uint64_t v35 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_241023B94(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  os_log_type_t v32 = (char *)&v28 - v6;
  uint64_t v31 = sub_24115D130();
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24115D1C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24112E900();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v33 = v13;
  uint64_t v34 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v30 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v17 = (v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, v12, v9);
  *(void *)(v18 + v17) = v2;
  *(void *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = v2;
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDE20];
  sub_24102B7C4(0, &qword_26B005C00, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263EFDE20]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_24115FCF0();
  uint64_t v20 = (void *)sub_24115D170();
  sub_24100DED8(v20, (uint64_t)v8);

  id v21 = (void *)sub_24115D1A0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v31);
  id v36 = v21;
  uint64_t v22 = sub_241160EB0();
  uint64_t v23 = (uint64_t)v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v32, 1, 1, v22);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  sub_24102B850(&qword_26B005BF8, &qword_26B005C00, v19);
  sub_24102A8F8();
  uint64_t v24 = v30;
  sub_24115FF10();
  sub_24102AAFC(v23, (unint64_t *)&qword_26B0071C0, v35);

  swift_release();
  sub_241010110(&qword_26B0059E8, (void (*)(uint64_t))sub_24112E900);
  uint64_t v25 = v33;
  uint64_t v26 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v25);
  return v26;
}

uint64_t sub_241125FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a1;
  uint64_t v46 = sub_24115D1C0();
  uint64_t v3 = *(void *)(v46 - 8);
  uint64_t v45 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v46);
  unint64_t v41 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_241023B94(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v38 - v6;
  uint64_t v8 = sub_24115D130();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24112DCB8();
  uint64_t v44 = v12;
  uint64_t v48 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24112DD84();
  uint64_t v47 = v15;
  uint64_t v49 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v40 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24112F86C(0, &qword_26B006120, (uint64_t (*)(uint64_t))sub_24112DD84, sub_24112DE54, MEMORY[0x263EFDAF8]);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  uint64_t v43 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v38 - v19;
  uint64_t v53 = sub_24115F6D0();
  id v21 = (void *)sub_24115D170();
  sub_24100DED8(v21, (uint64_t)v11);

  uint64_t v22 = (void *)sub_24115D1A0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v52 = v22;
  uint64_t v23 = sub_241160EB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 1, 1, v23);
  sub_24112F66C(0, (unint64_t *)&qword_26B006170, MEMORY[0x263F45D90], MEMORY[0x263EFDD90]);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  sub_241043BEC();
  sub_24102A8F8();
  sub_24115FF10();
  sub_24102AAFC((uint64_t)v7, (unint64_t *)&qword_26B0071C0, v39);

  swift_release();
  uint64_t v24 = v41;
  uint64_t v25 = a2;
  uint64_t v26 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v41, v25, v46);
  unint64_t v27 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v28 = (v45 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v50;
  uint64_t v31 = v51;
  *(void *)(v29 + 16) = v51;
  *(void *)(v29 + 24) = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v29 + v27, v24, v26);
  *(void *)(v29 + v28) = v31;
  sub_24102AE24(0, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263F8D488]);
  sub_241010110(&qword_26B006158, (void (*)(uint64_t))sub_24112DCB8);
  swift_bridgeObjectRetain();
  os_log_type_t v32 = v40;
  uint64_t v33 = v44;
  sub_24115FE30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v33);
  sub_24112DE54();
  sub_24112E010();
  uint64_t v34 = v47;
  sub_24115FF30();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v34);
  sub_24112E0F8();
  uint64_t v35 = v42;
  uint64_t v36 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v35);
  return v36;
}

uint64_t sub_241126620(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v73 = a6;
  uint64_t v70 = a5;
  uint64_t v82 = a4;
  uint64_t v9 = sub_24115F790();
  uint64_t v77 = *(void *)(v9 - 8);
  uint64_t v78 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v79 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_24115D1C0();
  uint64_t v11 = *(void *)(v75 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v75);
  uint64_t v74 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v69 = (char *)v66 - v14;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v68 = v15;
  uint64_t v16 = self;
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  id v18 = objc_msgSend(ObjCClassFromMetadata, sel__typeIdentifier);
  id v19 = objc_msgSend(v16, sel_predicateForUserDomainConceptsWithTypeIdentifier_, v18);

  unint64_t v76 = a3;
  uint64_t v20 = sub_241124738(a3);
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v80 = v11;
  if (v21)
  {
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_241161660();
    uint64_t v23 = v20 + 40;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = (void *)sub_2411606F0();
      id v25 = objc_msgSend(v16, sel_predicateForUserDomainConceptsWithSemanticIdentifier_, v24);
      swift_bridgeObjectRelease();

      sub_241161640();
      sub_241161670();
      sub_241161680();
      sub_241161650();
      v23 += 16;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    uint64_t v11 = v80;
    uint64_t v22 = MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_241024708(0, &qword_26B007318);
  uint64_t v26 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  unint64_t v27 = self;
  id v28 = objc_msgSend(v27, sel_orPredicateWithSubpredicates_, v26);

  sub_24102AE24(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_24116B210;
  *(void *)(v29 + 32) = v19;
  *(void *)(v29 + 40) = v28;
  aBlock[0] = v29;
  sub_2411609C0();
  id v72 = v19;
  id v71 = v28;
  uint64_t v30 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  id v81 = objc_msgSend(v27, sel_andPredicateWithSubpredicates_, v30);

  aBlock[0] = v22;
  sub_24112DAF0(0, &qword_26B004158, MEMORY[0x263F459D0]);
  swift_allocObject();
  uint64_t v31 = sub_24115D450();
  os_log_type_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v66[1] = v11 + 16;
  uint64_t v67 = v32;
  uint64_t v33 = v69;
  uint64_t v34 = v75;
  v32(v69, v82, v75);
  unint64_t v35 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v36 = (v12 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v39 + v35, v33, v34);
  unint64_t v40 = v76;
  *(void *)(v39 + v36) = v76;
  unint64_t v41 = (uint64_t (**)(uint64_t, char))(v39 + v37);
  uint64_t v42 = (uint64_t (*)(uint64_t, char))v68;
  *unint64_t v41 = sub_24102A314;
  v41[1] = v42;
  *(void *)(v39 + v38) = v70;
  *(void *)(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8)) = v73;
  id v43 = objc_allocWithZone(MEMORY[0x263F0A858]);
  unint64_t v86 = sub_24112ECDC;
  uint64_t v87 = v39;
  uint64_t v44 = v34;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_241013250;
  uint64_t v85 = &unk_26F557DB8;
  uint64_t v45 = _Block_copy(aBlock);
  uint64_t v70 = v31;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v46 = (char *)objc_msgSend(v43, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, v81, 0, 0, 0, v45);
  _Block_release(v45);
  swift_release();
  uint64_t v47 = v79;
  sub_24115F740();
  uint64_t v48 = v74;
  v67(v74, v82, v44);
  swift_bridgeObjectRetain_n();
  uint64_t v49 = sub_24115F780();
  int v50 = sub_241160D50();
  if (os_log_type_enabled(v49, (os_log_type_t)v50))
  {
    LODWORD(v68) = v50;
    uint64_t v69 = v46;
    uint64_t v51 = swift_slowAlloc();
    uint64_t v67 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
    aBlock[0] = (uint64_t)v67;
    *(_DWORD *)uint64_t v51 = 136315906;
    uint64_t v52 = sub_241161A00();
    uint64_t v83 = sub_24101F0A4(v52, v53, aBlock);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2080;
    uint64_t v54 = (void *)sub_24115D170();
    uint64_t v55 = v44;
    uint64_t v56 = sub_24115CF00();
    unint64_t v58 = v57;

    uint64_t v83 = sub_24101F0A4(v56, v58, aBlock);
    sub_241161430();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v48, v55);
    *(_WORD *)(v51 + 22) = 2048;
    if (v40 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v59 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    os_log_type_t v60 = v68;
    swift_bridgeObjectRelease();
    uint64_t v83 = v59;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 32) = 2080;
    uint64_t v83 = v40;
    sub_241117DF0(0, &qword_26B005DB8, &qword_26B007358);
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_2411607A0();
    uint64_t v83 = sub_24101F0A4(v61, v62, aBlock);
    sub_241161430();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v49, v60, "[%s]_%s: Querying for concepts associated with %ld dose events: %s", (uint8_t *)v51, 0x2Au);
    uint64_t v63 = v67;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v63, -1, -1);
    MEMORY[0x2456180C0](v51, -1, -1);

    (*(void (**)(char *, uint64_t))(v77 + 8))(v79, v78);
    uint64_t v46 = v69;
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v48, v44);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v47, v78);
  }
  sub_24115D150();
  sub_24101A6BC(aBlock, (uint64_t)v85);
  uint64_t v64 = (void *)sub_24115D0B0();
  objc_msgSend(v64, sel_executeQuery_, v46);

  swift_release();
  return sub_24101F178((uint64_t)aBlock);
}

uint64_t sub_241126FA4(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(void, void), uint64_t a10, uint64_t a11, uint64_t a12)
{
  unint64_t v106 = a8;
  int v100 = a4;
  id v101 = a2;
  uint64_t v15 = a10;
  id v99 = a9;
  uint64_t v16 = sub_24115D1C0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v89 - v21;
  uint64_t v23 = sub_24115F790();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v104 = v23;
  uint64_t v105 = v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  id v92 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  id v94 = (char *)&v89 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v97 = (char *)&v89 - v30;
  MEMORY[0x270FA5388](v29);
  os_log_type_t v32 = (char *)&v89 - v31;
  uint64_t v96 = v16;
  uint64_t v102 = a7;
  uint64_t v103 = a12;
  uint64_t v98 = a10;
  if (!a5) {
    goto LABEL_6;
  }
  unint64_t v93 = v20;
  id v33 = a5;
  sub_24115F740();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v22, a7, v16);
  id v34 = a5;
  swift_bridgeObjectRetain();
  id v35 = a5;
  swift_bridgeObjectRetain();
  unint64_t v36 = sub_24115F780();
  int v37 = sub_241160D30();
  if (os_log_type_enabled(v36, (os_log_type_t)v37))
  {
    int v90 = v37;
    uint64_t v91 = v36;
    uint64_t v95 = a6;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    v108[0] = v89;
    *(_DWORD *)uint64_t v38 = 136315906;
    uint64_t v39 = sub_241161A00();
    uint64_t v107 = sub_24101F0A4(v39, v40, v108);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    unint64_t v41 = (void *)sub_24115D170();
    uint64_t v42 = sub_24115CF00();
    unint64_t v44 = v43;

    uint64_t v107 = sub_24101F0A4(v42, v44, v108);
    sub_241161430();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v96);
    *(_WORD *)(v38 + 22) = 2048;
    if (v106 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v45 = *(void *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v46 = v91;
    swift_bridgeObjectRelease();
    uint64_t v107 = v45;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 32) = 2080;
    uint64_t v107 = (uint64_t)a5;
    id v47 = a5;
    sub_241020840(0, (unint64_t *)&qword_26B0073B0);
    uint64_t v48 = sub_241160770();
    uint64_t v107 = sub_24101F0A4(v48, v49, v108);
    sub_241161430();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v46, (os_log_type_t)v90, "[%s]_%s: Error when querying for concepts for the %ld dose events: %s", (uint8_t *)v38, 0x2Au);
    uint64_t v50 = v89;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v50, -1, -1);
    MEMORY[0x2456180C0](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v105 + 8))(v32, v104);
    a6 = v95;
    uint64_t v15 = v98;
LABEL_6:
    id v51 = v101;
    if (!v101) {
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v105 + 8))(v32, v104);
  id v51 = v101;
  if (!v101)
  {
LABEL_11:
    uint64_t v56 = v97;
    sub_24115F740();
    id v57 = a5;
    swift_bridgeObjectRetain();
    id v58 = a5;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_24115F780();
    os_log_type_t v60 = sub_241160D30();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v95 = a6;
      uint64_t v61 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      v108[0] = v62;
      *(_DWORD *)uint64_t v61 = 136315650;
      uint64_t v63 = sub_241161A00();
      uint64_t v107 = sub_24101F0A4(v63, v64, v108);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 12) = 2048;
      uint64_t v65 = v102;
      if (v106 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v66 = sub_2411616E0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v66 = *(void *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v107 = v66;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 22) = 2080;
      uint64_t v107 = (uint64_t)a5;
      id v67 = a5;
      sub_241044718();
      uint64_t v68 = sub_241160770();
      uint64_t v107 = sub_24101F0A4(v68, v69, v108);
      sub_241161430();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241007000, v59, v60, "[%s] No HKMedicationUserDomainConcept returned for the %ld dose events: error: %s", (uint8_t *)v61, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v62, -1, -1);
      MEMORY[0x2456180C0](v61, -1, -1);

      (*(void (**)(char *, uint64_t))(v105 + 8))(v97, v104);
      a6 = v95;
      goto LABEL_15;
    }
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v105 + 8))(v56, v104);
LABEL_26:
    char v71 = v100;
    uint64_t v70 = v99;
    uint64_t v65 = v102;
    return sub_241127DEC(v71 & 1, a6, v65, v106, v70, v15);
  }
LABEL_9:
  self;
  uint64_t v52 = swift_dynamicCastObjCClass();
  if (!v52) {
    goto LABEL_11;
  }
  unint64_t v53 = (void *)v52;
  unint64_t v54 = v106;
  swift_bridgeObjectRetain();
  id v101 = v51;
  unint64_t v55 = sub_24112E33C(v54, v53);
  swift_bridgeObjectRelease();
  unint64_t v72 = sub_24112E770(v55);
  uint64_t v73 = swift_bridgeObjectRelease();
  if (v72 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_2411616E0();
    uint64_t v73 = swift_bridgeObjectRelease();
    if (v75) {
      goto LABEL_19;
    }
  }
  else if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_19:
    MEMORY[0x270FA5388](v73);
    *(&v89 - 2) = (uint64_t)v53;
    *(&v89 - 1) = v72;
    id v74 = v101;
    sub_24115D440();
    swift_bridgeObjectRelease();

    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  unint64_t v76 = v92;
  sub_24115F740();
  id v77 = v101;
  uint64_t v78 = sub_24115F780();
  os_log_type_t v79 = sub_241160D30();
  if (!os_log_type_enabled(v78, v79))
  {

    (*(void (**)(char *, uint64_t))(v105 + 8))(v76, v104);
    uint64_t v15 = v98;
    goto LABEL_26;
  }
  uint64_t v80 = swift_slowAlloc();
  uint64_t v81 = swift_slowAlloc();
  v108[0] = v81;
  *(_DWORD *)uint64_t v80 = 136315394;
  uint64_t v95 = a6;
  uint64_t v82 = sub_241161A00();
  uint64_t v107 = sub_24101F0A4(v82, v83, v108);
  sub_241161430();
  swift_bridgeObjectRelease();
  *(_WORD *)(v80 + 12) = 2080;
  uint64_t v107 = (uint64_t)v53;
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  id v84 = v77;
  uint64_t v85 = v102;
  uint64_t v86 = sub_2411607A0();
  uint64_t v107 = sub_24101F0A4(v86, v87, v108);
  a6 = v95;
  sub_241161430();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_241007000, v78, v79, "[%s] No associated dose event for queried medication %s", (uint8_t *)v80, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x2456180C0](v81, -1, -1);
  MEMORY[0x2456180C0](v80, -1, -1);

  uint64_t v65 = v85;
  (*(void (**)(char *, uint64_t))(v105 + 8))(v92, v104);
LABEL_15:
  uint64_t v15 = v98;
  uint64_t v70 = v99;
  char v71 = v100;
  return sub_241127DEC(v71 & 1, a6, v65, v106, v70, v15);
}

uint64_t sub_241127DEC(char a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void, void), uint64_t a6)
{
  unint64_t v44 = a4;
  uint64_t v10 = sub_24115D1C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24115F790();
  uint64_t result = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v42 = v16;
    uint64_t v43 = result;
    uint64_t v19 = v18;
    sub_24115D430();
    uint64_t v20 = v46;
    sub_24115F740();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_24115F780();
    int v41 = sub_241160D50();
    if (os_log_type_enabled(v21, (os_log_type_t)v41))
    {
      os_log_t v37 = v21;
      uint64_t v38 = v19;
      uint64_t v39 = a6;
      unint64_t v40 = a5;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v46 = v36;
      *(_DWORD *)uint64_t v22 = 136315906;
      uint64_t v23 = sub_241161A00();
      uint64_t v45 = sub_24101F0A4(v23, v24, &v46);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v25 = (void *)sub_24115D170();
      uint64_t v26 = sub_24115CF00();
      unint64_t v28 = v27;

      uint64_t v45 = sub_24101F0A4(v26, v28, &v46);
      unint64_t v29 = v44;
      sub_241161430();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      *(_WORD *)(v22 + 22) = 2048;
      if (v29 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_2411616E0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      a5 = v40;
      swift_bridgeObjectRelease();
      uint64_t v45 = v30;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 32) = 2080;
      uint64_t v45 = v20;
      sub_24102AE24(0, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263F8D488]);
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_2411607A0();
      uint64_t v45 = sub_24101F0A4(v31, v32, &v46);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v33 = v37;
      _os_log_impl(&dword_241007000, v37, (os_log_type_t)v41, "[%s]_%s: Query complete for concepts associated with %ld: %s", (uint8_t *)v22, 0x2Au);
      uint64_t v34 = v36;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v34, -1, -1);
      MEMORY[0x2456180C0](v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v38, v43);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v43);
    }
    a5(v20, 0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2411282A4(void **a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  id v6 = a2;
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_241052FA4(0, v5[2] + 1, 1, v5);
    uint64_t v5 = (void *)result;
  }
  unint64_t v9 = v5[2];
  unint64_t v8 = v5[3];
  if (v9 >= v8 >> 1)
  {
    uint64_t result = (uint64_t)sub_241052FA4((void *)(v8 > 1), v9 + 1, 1, v5);
    uint64_t v5 = (void *)result;
  }
  v5[2] = v9 + 1;
  uint64_t v10 = &v5[2 * v9];
  void v10[4] = v6;
  v10[5] = a3;
  *a1 = v5;
  return result;
}

uint64_t sub_241128358@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, NSObject **a6@<X8>)
{
  CGRect v133 = a5;
  os_log_t v134 = a3;
  os_log_t v135 = a2;
  uint64_t v136 = a4;
  id v139 = a6;
  uint64_t v7 = sub_24115D1C0();
  uint64_t v140 = *(void *)(v7 - 8);
  uint64_t v141 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v131 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v126 = (char *)&v125 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v130 = (char *)&v125 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v127 = (char *)&v125 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v125 - v16;
  uint64_t v18 = sub_24115F790();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v137 = v18;
  uint64_t v138 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v129 = (char *)&v125 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v128 = (char *)&v125 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v125 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  long long v132 = (uint64_t *)((char *)&v125 - v28);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v125 - v29;
  uint64_t v31 = sub_24115F6C0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  id v125 = (char *)&v125 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  os_log_t v37 = (char *)&v125 - v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = (unint64_t *)((char *)&v125 - v38);
  unint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v40((char *)&v125 - v38, a1, v31);
  int v41 = (*(uint64_t (**)(unint64_t *, uint64_t))(v32 + 88))(v39, v31);
  if (v41 == *MEMORY[0x263F45D70] || v41 == *MEMORY[0x263F45D80])
  {
    (*(void (**)(unint64_t *, uint64_t))(v32 + 96))(v39, v31);
    uint64_t v61 = v136;
    uint64_t v62 = sub_241129214(*v39, (uint64_t)v134, v136);
    swift_bridgeObjectRelease();
    if (!v62[2].isa)
    {
      swift_bridgeObjectRelease();
      os_log_type_t v79 = v132;
      sub_24115F740();
      uint64_t v93 = v140;
      uint64_t v92 = v141;
      id v94 = v127;
      (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v127, v61, v141);
      uint64_t v82 = sub_24115F780();
      os_log_type_t v95 = sub_241160D10();
      int v96 = v95;
      if (os_log_type_enabled(v82, v95))
      {
        uint64_t v97 = swift_slowAlloc();
        LODWORD(v135) = v96;
        uint64_t v98 = v97;
        uint64_t v136 = swift_slowAlloc();
        v143[0] = v136;
        *(_DWORD *)uint64_t v98 = 136315394;
        uint64_t v99 = sub_241161A00();
        uint64_t v142 = sub_24101F0A4(v99, v100, v143);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v98 + 12) = 2080;
        id v101 = (void *)sub_24115D170();
        uint64_t v102 = sub_24115CF00();
        unint64_t v104 = v103;

        uint64_t v142 = sub_24101F0A4(v102, v104, v143);
        sub_241161430();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v92);
        _os_log_impl(&dword_241007000, v82, (os_log_type_t)v135, "[%s]_%s: Update/create received, but not associated with highlights", (uint8_t *)v98, 0x16u);
        uint64_t v105 = v136;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v105, -1, -1);
        MEMORY[0x2456180C0](v98, -1, -1);

        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v138 + 8))(v132, v137);
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v92);
LABEL_21:

      uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v138 + 8))(v79, v137);
      goto LABEL_22;
    }
    sub_24115F740();
    uint64_t v63 = v140;
    uint64_t v64 = v61;
    uint64_t v65 = v141;
    (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v17, v64, v141);
    uint64_t v66 = sub_24115F780();
    os_log_type_t v67 = sub_241160D50();
    int v68 = v67;
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v69 = swift_slowAlloc();
      uint64_t v136 = swift_slowAlloc();
      v143[0] = v136;
      *(_DWORD *)uint64_t v69 = 136315394;
      os_log_t v135 = v66;
      uint64_t v70 = sub_241161A00();
      uint64_t v142 = sub_24101F0A4(v70, v71, v143);
      LODWORD(v134) = v68;
      uint64_t v72 = v63;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 12) = 2080;
      uint64_t v73 = (void *)sub_24115D170();
      uint64_t v74 = sub_24115CF00();
      unint64_t v76 = v75;

      uint64_t v142 = sub_24101F0A4(v74, v76, v143);
      sub_241161430();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v17, v141);
      uint64_t v66 = v135;
      _os_log_impl(&dword_241007000, v135, (os_log_type_t)v134, "[%s]_%s: Update/create received for concepts", (uint8_t *)v69, 0x16u);
      uint64_t v77 = v136;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v77, -1, -1);
      MEMORY[0x2456180C0](v69, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v65);
    }

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v30, v137);
    *id v139 = v62;
  }
  else
  {
    if (v41 == *MEMORY[0x263F45D78])
    {
      (*(void (**)(unint64_t *, uint64_t))(v32 + 96))(v39, v31);
      uint64_t v42 = v136;
      uint64_t v43 = sub_241129214(*v39, (uint64_t)v134, v136);
      swift_bridgeObjectRelease();
      sub_24115F740();
      uint64_t v44 = v140;
      uint64_t v45 = v141;
      uint64_t v46 = v130;
      (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v130, v42, v141);
      id v47 = sub_24115F780();
      os_log_type_t v48 = sub_241160D50();
      int v49 = v48;
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v50 = swift_slowAlloc();
        uint64_t v136 = swift_slowAlloc();
        v143[0] = v136;
        *(_DWORD *)uint64_t v50 = 136315394;
        LODWORD(v135) = v49;
        uint64_t v51 = sub_241161A00();
        uint64_t v142 = sub_24101F0A4(v51, v52, v143);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 12) = 2080;
        unint64_t v53 = (void *)sub_24115D170();
        uint64_t v54 = sub_24115CF00();
        CGRect v133 = v26;
        os_log_t v134 = v43;
        uint64_t v55 = v54;
        uint64_t v56 = v46;
        unint64_t v58 = v57;

        uint64_t v142 = sub_24101F0A4(v55, v58, v143);
        sub_241161430();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v56, v45);
        _os_log_impl(&dword_241007000, v47, (os_log_type_t)v135, "[%s]_%s: Deletion received for concepts", (uint8_t *)v50, 0x16u);
        uint64_t v59 = v136;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v59, -1, -1);
        MEMORY[0x2456180C0](v50, -1, -1);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v133, v137);
        *id v139 = v134;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v45);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v26, v137);
        *id v139 = v43;
      }
      return result;
    }
    uint64_t v78 = (void (**)(char *, uint64_t, uint64_t))(v140 + 16);
    if (v41 == *MEMORY[0x263F45D88])
    {
      os_log_type_t v79 = (uint64_t *)v128;
      sub_24115F740();
      uint64_t v80 = v126;
      uint64_t v81 = v141;
      (*v78)(v126, v136, v141);
      uint64_t v82 = sub_24115F780();
      os_log_type_t v83 = sub_241160D10();
      if (os_log_type_enabled(v82, v83))
      {
        uint64_t v84 = swift_slowAlloc();
        uint64_t v136 = swift_slowAlloc();
        v143[0] = v136;
        *(_DWORD *)uint64_t v84 = 136315394;
        uint64_t v85 = sub_241161A00();
        uint64_t v142 = sub_24101F0A4(v85, v86, v143);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 12) = 2080;
        unint64_t v87 = (void *)sub_24115D170();
        uint64_t v88 = sub_24115CF00();
        unint64_t v90 = v89;

        uint64_t v142 = sub_24101F0A4(v88, v90, v143);
        sub_241161430();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v140 + 8))(v80, v81);
        _os_log_impl(&dword_241007000, v82, v83, "[%s]_%s: Ignoring initial change", (uint8_t *)v84, 0x16u);
        uint64_t v91 = v136;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v91, -1, -1);
        MEMORY[0x2456180C0](v84, -1, -1);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v128, v137);
LABEL_22:
        *id v139 = 0;
        return result;
      }
      (*(void (**)(char *, uint64_t))(v140 + 8))(v80, v81);
      goto LABEL_21;
    }
    unint64_t v106 = v129;
    sub_24115F740();
    (*v78)(v131, v136, v141);
    v40(v37, a1, v31);
    uint64_t v107 = sub_24115F780();
    os_log_type_t v108 = sub_241160D30();
    int v109 = v108;
    if (os_log_type_enabled(v107, v108))
    {
      uint64_t v110 = swift_slowAlloc();
      uint64_t v136 = swift_slowAlloc();
      v143[0] = v136;
      *(_DWORD *)uint64_t v110 = 136315650;
      LODWORD(v135) = v109;
      uint64_t v111 = sub_241161A00();
      uint64_t v142 = sub_24101F0A4(v111, v112, v143);
      long long v132 = v143;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v110 + 12) = 2080;
      uint64_t v130 = (char *)(v110 + 14);
      CGRect v133 = v37;
      id v113 = v131;
      uint64_t v114 = (void *)sub_24115D170();
      uint64_t v115 = sub_24115CF00();
      os_log_t v134 = v107;
      uint64_t v116 = v115;
      unint64_t v118 = v117;

      uint64_t v142 = sub_24101F0A4(v116, v118, v143);
      sub_241161430();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v113, v141);
      *(_WORD *)(v110 + 22) = 2080;
      uint64_t v119 = v133;
      v40(v125, (uint64_t)v133, v31);
      uint64_t v120 = sub_2411607A0();
      uint64_t v142 = sub_24101F0A4(v120, v121, v143);
      sub_241161430();
      swift_bridgeObjectRelease();
      uint64_t v122 = *(void (**)(char *, uint64_t))(v32 + 8);
      v122(v119, v31);
      os_log_t v123 = v134;
      _os_log_impl(&dword_241007000, v134, (os_log_type_t)v135, "[%s]_%s: Unknown medication change received: %s", (uint8_t *)v110, 0x20u);
      uint64_t v124 = v136;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v124, -1, -1);
      MEMORY[0x2456180C0](v110, -1, -1);

      (*(void (**)(char *, uint64_t))(v138 + 8))(v129, v137);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v140 + 8))(v131, v141);
      uint64_t v122 = *(void (**)(char *, uint64_t))(v32 + 8);
      v122(v37, v31);

      (*(void (**)(char *, uint64_t))(v138 + 8))(v106, v137);
    }
    *id v139 = 0;
    return ((uint64_t (*)(unint64_t *, uint64_t))v122)(v39, v31);
  }
  return result;
}

void *sub_241129214(unint64_t a1, uint64_t a2, uint64_t a3)
{
  v14[2] = a3;
  void v14[3] = a2;
  uint64_t v3 = sub_2411248B0((void (*)(long long *__return_ptr, id *))sub_24112E194, (uint64_t)v14, a1);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t *)(v3 + 40);
    id v6 = (void *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v8 = (void *)*(v5 - 1);
      if (v8)
      {
        uint64_t v9 = *v5;
        id v10 = v8;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v6 = sub_241052FA4(0, v6[2] + 1, 1, v6);
        }
        unint64_t v12 = v6[2];
        unint64_t v11 = v6[3];
        if (v12 >= v11 >> 1) {
          id v6 = sub_241052FA4((void *)(v11 > 1), v12 + 1, 1, v6);
        }
        uint64_t v6[2] = v12 + 1;
        uint64_t v7 = &v6[2 * v12];
        v7[4] = v10;
        v7[5] = v9;
      }
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_241129358@<X0>(void **a1@<X0>, unsigned char *a2@<X1>, NSObject *a3@<X4>, void *a4@<X8>)
{
  os_log_t v99 = a3;
  unint64_t v103 = a4;
  uint64_t v7 = sub_24115D1C0();
  Class isa = v7[-1].isa;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v94 = &v92[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v98 = &v92[-v12];
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v92[-v13];
  uint64_t v15 = sub_24115F790();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v101 = v15;
  uint64_t v102 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  int v96 = &v92[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = &v92[-v20];
  MEMORY[0x270FA5388](v19);
  unint64_t v100 = &v92[-v22];
  uint64_t v23 = *a1;
  self;
  uint64_t v24 = swift_dynamicCastObjCClass();
  if (v24)
  {
    uint64_t v25 = (void *)v24;
    unint64_t v100 = a2;
    Class v95 = isa;
    uint64_t v26 = v23;
    unint64_t v27 = swift_bridgeObjectRetain();
    unint64_t v28 = sub_24112E33C(v27, v25);
    swift_bridgeObjectRelease();
    unint64_t v29 = sub_24112E770(v28);
    if (v4)
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = v21;
      sub_24115F740();
      Class v31 = v95;
      uint64_t v32 = v98;
      uint64_t v33 = v7;
      (*((void (**)(unsigned char *, unsigned char *, NSObject *))v95 + 2))(v98, v100, v7);
      id v34 = v4;
      id v35 = v4;
      uint64_t v36 = sub_24115F780();
      os_log_type_t v37 = sub_241160D30();
      int v38 = v37;
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v39 = swift_slowAlloc();
        int v96 = v30;
        uint64_t v40 = v39;
        id v94 = (unsigned char *)swift_slowAlloc();
        uint64_t v105 = v94;
        *(_DWORD *)uint64_t v40 = 136315650;
        int v93 = v38;
        uint64_t v41 = sub_241161A00();
        uint64_t v97 = v4;
        uint64_t v104 = sub_24101F0A4(v41, v42, (uint64_t *)&v105);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2080;
        uint64_t v43 = (void *)sub_24115D170();
        uint64_t v44 = sub_24115CF00();
        os_log_t v99 = v36;
        unint64_t v100 = v26;
        uint64_t v45 = v32;
        uint64_t v46 = v44;
        unint64_t v48 = v47;

        uint64_t v104 = sub_24101F0A4(v46, v48, (uint64_t *)&v105);
        sub_241161430();
        swift_bridgeObjectRelease();
        (*((void (**)(unsigned char *, NSObject *))v31 + 1))(v45, v33);
        *(_WORD *)(v40 + 22) = 2080;
        int v49 = v97;
        swift_getErrorValue();
        uint64_t v50 = sub_2411618F0();
        uint64_t v104 = sub_24101F0A4(v50, v51, (uint64_t *)&v105);
        sub_241161430();
        swift_bridgeObjectRelease();

        unint64_t v52 = v49;
        os_log_t v53 = v99;
        _os_log_impl(&dword_241007000, v99, (os_log_type_t)v93, "[%s]_%s: %s", (uint8_t *)v40, 0x20u);
        uint64_t v54 = v94;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v54, -1, -1);
        MEMORY[0x2456180C0](v40, -1, -1);

        uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v102 + 8))(v96, v101);
      }
      else
      {

        (*((void (**)(unsigned char *, NSObject *))v31 + 1))(v32, v33);
        uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v102 + 8))(v30, v101);
      }
      unint64_t v71 = v103;
LABEL_12:
      void *v71 = 0;
      v71[1] = 0;
      return result;
    }
    unint64_t v67 = v29;
    uint64_t result = swift_bridgeObjectRelease();
    int v68 = v7;
    if (v67 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v73 = sub_2411616E0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v69 = v100;
      if (v73) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v69 = v100;
      if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_9:
        uint64_t v70 = v103;
        *unint64_t v103 = v25;
        v70[1] = v67;
        return result;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v74 = v96;
    sub_24115F740();
    unint64_t v76 = v94;
    Class v75 = v95;
    (*((void (**)(unsigned char *, unsigned char *, NSObject *))v95 + 2))(v94, v69, v68);
    uint64_t v77 = sub_24115F780();
    os_log_type_t v78 = sub_241160D50();
    int v79 = v78;
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v80 = swift_slowAlloc();
      int v93 = v79;
      uint64_t v81 = v80;
      uint64_t v98 = (unsigned char *)swift_slowAlloc();
      uint64_t v105 = v98;
      *(_DWORD *)uint64_t v81 = 136315394;
      uint64_t v82 = sub_241161A00();
      unint64_t v100 = v26;
      uint64_t v104 = sub_24101F0A4(v82, v83, (uint64_t *)&v105);
      os_log_t v99 = v68;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v81 + 12) = 2080;
      uint64_t v84 = (void *)sub_24115D170();
      uint64_t v85 = sub_24115CF00();
      uint64_t v97 = 0;
      Class v86 = v75;
      unint64_t v87 = v76;
      uint64_t v88 = v85;
      unint64_t v90 = v89;

      uint64_t v104 = sub_24101F0A4(v88, v90, (uint64_t *)&v105);
      sub_241161430();
      swift_bridgeObjectRelease();
      (*((void (**)(unsigned char *, os_log_t))v86 + 1))(v87, v99);
      _os_log_impl(&dword_241007000, v77, (os_log_type_t)v93, "[%s]_%s: No relevant dose event was found for the changed medications, ignoring", (uint8_t *)v81, 0x16u);
      uint64_t v91 = v98;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v91, -1, -1);
      MEMORY[0x2456180C0](v81, -1, -1);

      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v102 + 8))(v96, v101);
    }
    else
    {
      (*((void (**)(unsigned char *, NSObject *))v75 + 1))(v76, v68);

      uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v102 + 8))(v74, v101);
    }
    unint64_t v71 = v103;
    goto LABEL_12;
  }
  uint64_t v97 = v4;
  sub_24115F740();
  (*((void (**)(unsigned char *, unsigned char *, NSObject *))isa + 2))(v14, a2, v7);
  uint64_t v56 = sub_24115F780();
  os_log_type_t v57 = sub_241160D50();
  int v58 = v57;
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v59 = swift_slowAlloc();
    uint64_t v98 = (unsigned char *)swift_slowAlloc();
    uint64_t v105 = v98;
    *(_DWORD *)uint64_t v59 = 136315394;
    LODWORD(v96) = v58;
    uint64_t v60 = sub_241161A00();
    uint64_t v104 = sub_24101F0A4(v60, v61, (uint64_t *)&v105);
    os_log_t v99 = v7;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v59 + 12) = 2080;
    uint64_t v62 = (void *)sub_24115D170();
    uint64_t v63 = sub_24115CF00();
    unint64_t v65 = v64;

    uint64_t v104 = sub_24101F0A4(v63, v65, (uint64_t *)&v105);
    sub_241161430();
    swift_bridgeObjectRelease();
    (*((void (**)(unsigned char *, os_log_t))isa + 1))(v14, v99);
    _os_log_impl(&dword_241007000, v56, (os_log_type_t)v96, "[%s]_%s: No relevant dose event was found for the changed medications, ignoring", (uint8_t *)v59, 0x16u);
    uint64_t v66 = v98;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v66, -1, -1);
    MEMORY[0x2456180C0](v59, -1, -1);
  }
  else
  {
    (*((void (**)(unsigned char *, NSObject *))isa + 1))(v14, v7);
  }

  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v102 + 8))(v100, v101);
  uint64_t v72 = v103;
  *unint64_t v103 = 0;
  v72[1] = 0;
  return result;
}

uint64_t sub_241129CC4(uint64_t a1)
{
  uint64_t v61 = sub_24115D1C0();
  uint64_t v58 = *(void *)(v61 - 8);
  unint64_t v73 = *(void *)(v58 + 64);
  MEMORY[0x270FA5388](v61);
  os_log_type_t v57 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class v75 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_241023B94(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v54 - v4;
  unint64_t v71 = (void (*)(char *, uint64_t, uint64_t))sub_24115D130();
  uint64_t v6 = *((void *)v71 - 1);
  MEMORY[0x270FA5388](v71);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_241160CC0();
  uint64_t v74 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24112EFFC();
  uint64_t v59 = v12;
  uint64_t v60 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v56 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410448A0();
  uint64_t v62 = v14;
  uint64_t v63 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v76 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_2410448A0;
  unint64_t v65 = sub_24112F0C8;
  sub_24102D548(0, (unint64_t *)&qword_26B005728, (void (*)(uint64_t))sub_2410448A0, (void (*)(void))sub_24112F0C8);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v67 = v16;
  uint64_t v68 = v17;
  MEMORY[0x270FA5388](v16);
  os_log_type_t v78 = (char *)&v54 - v18;
  sub_24112F0FC();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v69 = v19;
  uint64_t v70 = v20;
  MEMORY[0x270FA5388](v19);
  unint64_t v64 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115D150();
  sub_24101A6BC(v80, (uint64_t)v80[3]);
  uint64_t v22 = (void *)sub_24115D0B0();
  sub_24102AE24(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_24116B220;
  *(void *)(v23 + 32) = sub_241012AC8();
  uint64_t v79 = v23;
  sub_2411609C0();
  sub_241160CE0();

  swift_bridgeObjectRelease();
  sub_24101F178((uint64_t)v80);
  uint64_t v24 = (void *)sub_24115D170();
  sub_24100DED8(v24, (uint64_t)v8);

  uint64_t v72 = a1;
  uint64_t v25 = (void *)sub_24115D1A0();
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v6 + 8))(v8, v71);
  v80[0] = v25;
  uint64_t v26 = sub_241160EB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v5, 1, 1, v26);
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  sub_241010110(&qword_26B005E18, MEMORY[0x263F44AA8]);
  sub_24102A8F8();
  sub_24115FF10();
  sub_24102AAFC((uint64_t)v5, (unint64_t *)&qword_26B0071C0, v75);

  (*(void (**)(char *, uint64_t))(v74 + 8))(v11, v9);
  uint64_t v27 = v58;
  unint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  unint64_t v28 = v57;
  uint64_t v29 = v61;
  v71(v57, a1, v61);
  uint64_t v30 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v74 = (v30 + 16) & ~v30;
  Class v75 = (uint64_t (*)(uint64_t))(v30 | 7);
  uint64_t v31 = v74;
  unint64_t v32 = (v73 + v74 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = v32 + 8;
  unint64_t v33 = v32;
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v34 + v31;
  uint64_t v36 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
  uint64_t v37 = v29;
  v36(v35, v28, v29);
  uint64_t v38 = v77;
  *(void *)(v34 + v33) = v77;
  unint64_t v55 = v33;
  sub_241117DF0(0, &qword_26B005DB8, &qword_26B007358);
  sub_241010110(&qword_26B0059F8, (void (*)(uint64_t))sub_24112EFFC);
  uint64_t v39 = v59;
  uint64_t v40 = v56;
  sub_24115FE70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v39);
  v71(v28, v72, v37);
  uint64_t v41 = swift_allocObject();
  v36(v41 + v74, v28, v37);
  *(void *)(v41 + v33) = v38;
  unint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_24102B3BC(0, (unint64_t *)&qword_26B005B10, MEMORY[0x263EFDCF0]);
  uint64_t v60 = v43;
  sub_24112F0C8();
  uint64_t v59 = sub_24102B444(&qword_26B005B08, (unint64_t *)&qword_26B005B10, v42);
  uint64_t v44 = v62;
  uint64_t v45 = v76;
  sub_24115FE80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v44);
  v71(v28, v72, v37);
  uint64_t v46 = swift_allocObject();
  v36(v46 + v74, v28, v37);
  *(void *)(v46 + v55) = v77;
  sub_24115FC10();
  sub_24112F218();
  sub_24102D0D0(&qword_26B005720, (unint64_t *)&qword_26B005728, (void (*)(uint64_t))v66, (void (*)(void))v65);
  sub_241010110(&qword_26B005620, (void (*)(uint64_t))sub_24112F218);
  unint64_t v47 = v64;
  uint64_t v48 = v67;
  int v49 = v78;
  sub_24115FF80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v49, v48);
  sub_241010110(&qword_26B0058E0, (void (*)(uint64_t))sub_24112F0FC);
  uint64_t v50 = v69;
  unint64_t v51 = (void *)sub_24115FD90();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v47, v50);
  v80[0] = v51;
  uint64_t v52 = sub_24115FE20();
  swift_release();
  return v52;
}

uint64_t sub_24112A784@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  sub_241129CC4(a1);
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
  sub_24102B3BC(0, (unint64_t *)&qword_26B005B10, MEMORY[0x263EFDCF0]);
  sub_24102B444(&qword_26B005B08, (unint64_t *)&qword_26B005B10, v3);
  uint64_t v4 = sub_24115FE20();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_24112A848@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v46 = a3;
  unint64_t v51 = a4;
  sub_24102B3BC(0, &qword_268CF2470, MEMORY[0x263EFDE08]);
  uint64_t v50 = v6;
  uint64_t v48 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v41 - v7;
  uint64_t v9 = sub_24115D1C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24115F790();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  sub_24115F740();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v47 = v9;
  v18(v12, a2, v9);
  id v19 = v17;
  id v20 = v17;
  int v49 = v16;
  uint64_t v21 = sub_24115F780();
  os_log_type_t v22 = sub_241160D30();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v45 = v14;
    uint64_t v25 = v24;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v53 = v44;
    *(_DWORD *)uint64_t v25 = 136315650;
    os_log_t v43 = v21;
    uint64_t v26 = sub_241161A00();
    uint64_t v46 = v13;
    uint64_t v52 = sub_24101F0A4(v26, v27, &v53);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v41[1] = v25 + 14;
    unint64_t v28 = (void *)sub_24115D170();
    uint64_t v29 = sub_24115CF00();
    int v42 = v23;
    uint64_t v30 = v29;
    unint64_t v32 = v31;

    uint64_t v52 = sub_24101F0A4(v30, v32, &v53);
    sub_241161430();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v47);
    *(_WORD *)(v25 + 22) = 2080;
    uint64_t v52 = (uint64_t)v17;
    id v33 = v17;
    sub_241020840(0, (unint64_t *)&qword_26B0073B0);
    uint64_t v34 = sub_241160770();
    uint64_t v52 = sub_24101F0A4(v34, v35, &v53);
    sub_241161430();
    swift_bridgeObjectRelease();

    os_log_t v36 = v43;
    _os_log_impl(&dword_241007000, v43, (os_log_type_t)v42, "[%s]_%s: Error in observer query: %s", (uint8_t *)v25, 0x20u);
    uint64_t v37 = v44;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v37, -1, -1);
    MEMORY[0x2456180C0](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v49, v46);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v47);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v49, v13);
  }
  sub_241117DF0(0, &qword_26B005DB8, &qword_26B007358);
  sub_24115FCD0();
  sub_24102B444(&qword_268CF2478, &qword_268CF2470, MEMORY[0x263EFDE08]);
  uint64_t v38 = v50;
  uint64_t v39 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v8, v38);
  *unint64_t v51 = v39;
  return result;
}

uint64_t sub_24112AD74@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v59 = sub_24115D1C0();
  uint64_t v6 = *(void *)(v59 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v59);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v52 - v10;
  uint64_t v12 = sub_24115F790();
  uint64_t v57 = *(void *)(v12 - 8);
  uint64_t v58 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v52 - v16;
  unint64_t v18 = *a1;
  uint64_t v19 = sub_2410E4FE8(*a1);
  if (v19)
  {
    unint64_t v20 = v19;
    sub_24115F740();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v59);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_24115F780();
    int v22 = sub_241160D50();
    if (os_log_type_enabled(v21, (os_log_type_t)v22))
    {
      int v54 = v22;
      os_log_t v55 = v21;
      uint64_t v56 = a3;
      uint64_t v23 = swift_slowAlloc();
      os_log_t v53 = (os_log_t)swift_slowAlloc();
      os_log_t v61 = v53;
      *(_DWORD *)uint64_t v23 = 136315906;
      uint64_t v24 = sub_241161A00();
      uint64_t v60 = sub_24101F0A4(v24, v25, (uint64_t *)&v61);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v26 = (void *)sub_24115D170();
      uint64_t v27 = sub_24115CF00();
      unint64_t v29 = v28;

      uint64_t v60 = sub_24101F0A4(v27, v29, (uint64_t *)&v61);
      sub_241161430();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v59);
      *(_WORD *)(v23 + 22) = 2048;
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_2411616E0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      a3 = v56;
      os_log_type_t v31 = v54;
      swift_bridgeObjectRelease();
      uint64_t v60 = v30;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 32) = 2080;
      uint64_t v60 = v20;
      sub_241117DF0(0, &qword_26B005DB8, &qword_26B007358);
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_2411607A0();
      uint64_t v60 = sub_24101F0A4(v32, v33, (uint64_t *)&v61);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v34 = v55;
      _os_log_impl(&dword_241007000, v55, v31, "[%s]_%s: Returning the %ld latest dose events: %s", (uint8_t *)v23, 0x2Au);
      os_log_t v35 = v53;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v35, -1, -1);
      MEMORY[0x2456180C0](v23, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v59);

      swift_bridgeObjectRelease_n();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v15, v58);
  }
  else
  {
    sub_24115F740();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, a2, v59);
    swift_bridgeObjectRetain_n();
    os_log_t v36 = sub_24115F780();
    os_log_type_t v37 = sub_241160D30();
    int v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v39 = swift_slowAlloc();
      int v54 = v38;
      uint64_t v40 = v39;
      os_log_t v55 = (os_log_t)swift_slowAlloc();
      os_log_t v61 = v55;
      *(_DWORD *)uint64_t v40 = 136315650;
      os_log_t v53 = v36;
      uint64_t v41 = sub_241161A00();
      uint64_t v60 = sub_24101F0A4(v41, v42, (uint64_t *)&v61);
      uint64_t v56 = a3;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      os_log_t v43 = (void *)sub_24115D170();
      uint64_t v44 = sub_24115CF00();
      unint64_t v46 = v45;

      uint64_t v60 = sub_24101F0A4(v44, v46, (uint64_t *)&v61);
      a3 = v56;
      sub_241161430();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v59);
      *(_WORD *)(v40 + 22) = 2080;
      uint64_t v60 = v18;
      sub_241117DF0(0, &qword_268CF0730, (unint64_t *)&unk_26B007368);
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_241160770();
      uint64_t v60 = sub_24101F0A4(v47, v48, (uint64_t *)&v61);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v49 = v53;
      _os_log_impl(&dword_241007000, v53, (os_log_type_t)v54, "[%s]_%s: Unexpected type returned from sample query: %s", (uint8_t *)v40, 0x20u);
      os_log_t v50 = v55;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v50, -1, -1);
      MEMORY[0x2456180C0](v40, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v59);

      swift_bridgeObjectRelease_n();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v17, v58);
    unint64_t v20 = MEMORY[0x263F8EE78];
  }
  *a3 = v20;
  return result;
}

uint64_t sub_24112B484@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v45 = a3;
  os_log_t v50 = a4;
  sub_241044788();
  uint64_t v46 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24115D1C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24115F790();
  uint64_t v49 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  sub_24115F740();
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v47 = v10;
  v18(v13, a2, v10);
  id v19 = v17;
  id v20 = v17;
  unint64_t v48 = v16;
  uint64_t v21 = sub_24115F780();
  os_log_type_t v22 = sub_241160D30();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v44 = v14;
    uint64_t v25 = v24;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v52 = v43;
    *(_DWORD *)uint64_t v25 = 136315650;
    os_log_t v42 = v21;
    uint64_t v26 = sub_241161A00();
    int v41 = v23;
    uint64_t v51 = sub_24101F0A4(v26, v27, &v52);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v40[1] = v25 + 14;
    unint64_t v28 = (void *)sub_24115D170();
    uint64_t v29 = sub_24115CF00();
    uint64_t v45 = v7;
    unint64_t v31 = v30;

    uint64_t v51 = sub_24101F0A4(v29, v31, &v52);
    sub_241161430();
    uint64_t v7 = v45;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v47);
    *(_WORD *)(v25 + 22) = 2080;
    uint64_t v51 = (uint64_t)v17;
    id v32 = v17;
    sub_241020840(0, (unint64_t *)&qword_26B0073B0);
    uint64_t v33 = sub_241160770();
    uint64_t v51 = sub_24101F0A4(v33, v34, &v52);
    sub_241161430();
    swift_bridgeObjectRelease();

    os_log_t v35 = v42;
    _os_log_impl(&dword_241007000, v42, (os_log_type_t)v41, "[%s]_%s: Error when fetching dose event samples: %s", (uint8_t *)v25, 0x20u);
    uint64_t v36 = v43;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v36, -1, -1);
    MEMORY[0x2456180C0](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v44);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v47);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v14);
  }
  uint64_t v52 = MEMORY[0x263F8EE78];
  sub_241117DF0(0, &qword_26B005DB8, &qword_26B007358);
  sub_24115FCC0();
  sub_241010110((unint64_t *)&unk_26B0060B8, (void (*)(uint64_t))sub_241044788);
  uint64_t v37 = v46;
  uint64_t v38 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v37);
  *os_log_t v50 = v38;
  return result;
}

uint64_t sub_24112B980(unint64_t *a1, char *a2)
{
  unint64_t v2 = *a1;
  sub_24112BAA0(a2, *a1);
  *(void *)(swift_allocObject() + 16) = v2;
  sub_24102B7C4(0, &qword_26B005B00, (unint64_t *)&qword_26B005D98, MEMORY[0x263F8D310], MEMORY[0x263EFDCF0]);
  sub_241117DF0(0, &qword_26B005DB8, &qword_26B007358);
  sub_24112F2D8();
  swift_bridgeObjectRetain();
  sub_24115FE70();
  swift_release();
  return swift_release();
}

uint64_t sub_24112BAA0(char *a1, unint64_t a2)
{
  uint64_t v40 = a1;
  sub_24112F5D8();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24112F7D0();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v44 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24112F86C(0, &qword_26B005838, (uint64_t (*)(uint64_t))sub_24112F7D0, sub_24112F8EC, MEMORY[0x263EFDC10]);
  uint64_t v45 = v12;
  uint64_t v43 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  os_log_t v42 = (char *)&v35 - v13;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (!v14)
  {
LABEL_13:
    uint64_t v27 = sub_241025580(v15);
    uint64_t v28 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v28);
    uint64_t v29 = v41;
    *(&v35 - 2) = v40;
    *(&v35 - 1) = v29;
    uint64_t v30 = sub_241124A40((void (*)(uint64_t *__return_ptr, void *))sub_24112F920, (uint64_t)(&v35 - 4), v27);
    swift_bridgeObjectRelease();
    uint64_t v46 = v30;
    sub_24112F66C(0, &qword_26B005A60, (uint64_t (*)(uint64_t))sub_24112F6E0, MEMORY[0x263EFDCF0]);
    sub_24112F964();
    sub_24112F748();
    sub_241010110(&qword_26B005D70, (void (*)(uint64_t))sub_24112F964);
    sub_24115FBF0();
    sub_241010110(&qword_26B0059A8, (void (*)(uint64_t))sub_24112F5D8);
    unint64_t v31 = v44;
    sub_24115FE30();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_24112F8EC();
    id v32 = v42;
    sub_24115FEC0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v9);
    sub_24112F9EC();
    uint64_t v33 = v45;
    uint64_t v34 = sub_24115FE20();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
    return v34;
  }
  uint64_t v46 = MEMORY[0x263F8EE78];
  uint64_t result = sub_24102A550(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    os_log_t v35 = v7;
    uint64_t v36 = v10;
    uint64_t v37 = v5;
    uint64_t v38 = v9;
    uint64_t v39 = v4;
    uint64_t v17 = 0;
    uint64_t v15 = v46;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v18 = (id)MEMORY[0x245617450](v17, a2);
      }
      else {
        id v18 = *(id *)(a2 + 8 * v17 + 32);
      }
      id v19 = v18;
      id v20 = objc_msgSend(v18, sel_medicationIdentifier, v35, v36, v37, v38, v39);
      uint64_t v21 = sub_241160730();
      uint64_t v23 = v22;

      uint64_t v46 = v15;
      unint64_t v25 = *(void *)(v15 + 16);
      unint64_t v24 = *(void *)(v15 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_24102A550(v24 > 1, v25 + 1, 1);
        uint64_t v15 = v46;
      }
      ++v17;
      *(void *)(v15 + 16) = v25 + 1;
      uint64_t v26 = v15 + 16 * v25;
      *(void *)(v26 + 32) = v21;
      *(void *)(v26 + 40) = v23;
    }
    while (v14 != v17);
    uint64_t v9 = v38;
    uint64_t v4 = v39;
    uint64_t v10 = v36;
    uint64_t v5 = v37;
    uint64_t v7 = v35;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_24112BFD8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  unint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_24112E548(v4, v3);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_24112C044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v129 = a3;
  uint64_t v135 = a2;
  uint64_t v119 = a1;
  uint64_t v125 = sub_241160CC0();
  uint64_t v123 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v120 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24112FA94();
  uint64_t v127 = v4;
  uint64_t v124 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v121 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24112F86C(0, &qword_26B005548, (uint64_t (*)(uint64_t))sub_24112FA94, sub_24112FB40, MEMORY[0x263EFDAA0]);
  uint64_t v128 = v6;
  uint64_t v126 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v122 = (char *)&v103 - v7;
  uint64_t v117 = sub_24115CCA0();
  uint64_t v114 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v115 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241023B94(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  unint64_t v118 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v103 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v103 - v15;
  uint64_t v111 = sub_24115CCC0();
  uint64_t v110 = *(void **)(v111 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v111);
  unint64_t v112 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  id v20 = (char *)&v103 - v19;
  CGRect v133 = (void *)sub_24115C810();
  uint64_t v138 = (void *)*(v133 - 1);
  uint64_t v21 = MEMORY[0x270FA5388](v133);
  uint64_t v116 = (char *)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v107 = (char *)&v103 - v23;
  uint64_t v137 = sub_24115CB10();
  uint64_t v24 = *(void *)(v137 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v137);
  id v113 = (char *)&v103 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  os_log_t v134 = (char *)&v103 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  long long v132 = (char *)&v103 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  unint64_t v106 = (char *)&v103 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  os_log_t v35 = (char *)&v103 - v34;
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  uint64_t v38 = (char *)&v103 - v37;
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  int v41 = (char *)&v103 - v40;
  MEMORY[0x270FA5388](v39);
  id v139 = (char *)&v103 - v42;
  sub_24115CB00();
  sub_24115CC90();
  int v109 = v20;
  uint64_t v43 = (void (*)(char *, uint64_t))sub_24115CC20();
  os_log_type_t v108 = v41;
  uint64_t v44 = (void *)sub_24115CAA0();
  uint64_t v136 = v43;
  id v45 = objc_msgSend(v43, sel_hk_startOfTomorrowForDate_, v44);

  if (!v45)
  {
    uint64_t v102 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    uint64_t v50 = v24 + 56;
    v102(v16, 1, 1, v137);
    goto LABEL_10;
  }
  sub_24115CAE0();

  uint64_t v47 = v24 + 32;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v131 = v35;
  uint64_t v48 = v137;
  uint64_t v141 = v46;
  v46(v16, v35, v137);
  os_log_t v35 = *(char **)(v24 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v35)(v16, 0, 1, v48);
  uint64_t v140 = v24;
  uint64_t v49 = v24;
  uint64_t v50 = v48;
  uint64_t v51 = v49 + 48;
  uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  if (v52(v16, 1, v48) == 1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v130 = v47;
  v141(v38, v16, v48);
  os_log_t v53 = (void *)sub_24115CAA0();
  id v54 = objc_msgSend(v136, sel_dateByAddingUnit_value_toDate_options_, 16, -28, v53, 0);

  if (!v54)
  {
LABEL_11:
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v35)(v14, 1, 1, v50);
    goto LABEL_12;
  }
  os_log_t v55 = v131;
  sub_24115CAE0();

  v141(v14, v55, v50);
  ((void (*)(char *, void, uint64_t, uint64_t))v35)(v14, 0, 1, v50);
  uint64_t v105 = v51;
  uint64_t v104 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v52;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v52)(v14, 1, v50);
  if (result == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v57 = v106;
  v141(v106, v14, v50);
  uint64_t v58 = v140;
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
  unint64_t v103 = v59;
  v59(v55, v57, v50);
  v59(v132, v38, v50);
  uint64_t v60 = v107;
  sub_24115C7D0();

  os_log_t v61 = *(void (**)(char *, uint64_t))(v58 + 8);
  v61(v57, v50);
  v61(v38, v50);
  uint64_t v62 = (void (*)(char *, uint64_t))v110[1];
  uint64_t v63 = v111;
  v62(v109, v111);
  uint64_t v140 = v58 + 8;
  uint64_t v136 = v61;
  v61(v108, v50);
  unint64_t v64 = v139;
  sub_24115C7F0();
  unint64_t v65 = (void *)v138[1];
  ++v138;
  uint64_t v110 = v65;
  ((void (*)(char *, void *))v65)(v60, v133);
  uint64_t v66 = v112;
  sub_24115CC90();
  uint64_t v67 = v114;
  uint64_t v68 = v115;
  uint64_t v69 = v117;
  (*(void (**)(char *, void, uint64_t))(v114 + 104))(v115, *MEMORY[0x263F078A0], v117);
  uint64_t v70 = (uint64_t)v118;
  sub_24115CC60();
  unint64_t v71 = v68;
  uint64_t v72 = v137;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v71, v69);
  uint64_t v73 = v63;
  uint64_t v74 = v103;
  v62(v66, v73);
  Class v75 = v113;
  v74(v113, v64, v72);
  if (v104(v70, 1, v72) == 1)
  {
    unint64_t v76 = v134;
    v141(v134, v75, v72);
    sub_24102AAFC(v70, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  }
  else
  {
    v136(v75, v72);
    unint64_t v76 = v134;
    v141(v134, (char *)v70, v72);
  }
  sub_241024708(0, &qword_26B005E28);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v74(v131, v76, v72);
  v74(v132, v139, v72);
  os_log_type_t v78 = v116;
  sub_24115C7D0();
  uint64_t v79 = (void *)sub_24115C7B0();
  ((void (*)(char *, void *))v110)(v78, v133);
  id v80 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForSamplesWithinDateInterval_options_, v79, 2);

  uint64_t v81 = v129;
  uint64_t v82 = (void *)sub_2411606F0();
  id v83 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v82);

  sub_24102AE24(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = xmmword_24116B210;
  *(void *)(v84 + 32) = v80;
  *(void *)(v84 + 40) = v83;
  v144[0] = v84;
  sub_2411609C0();
  sub_241024708(0, &qword_26B007318);
  uint64_t v141 = (void (*)(char *, char *, uint64_t))v80;
  uint64_t v138 = v83;
  uint64_t v85 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  id v86 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v85);

  id v87 = objc_msgSend(self, sel_medicationDoseEventType);
  id v88 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A678]), sel_initWithSampleType_predicate_, v87, v86);

  sub_24115D150();
  sub_24101A6BC(v144, v146);
  unint64_t v89 = (void *)sub_24115D0B0();
  uint64_t v90 = swift_allocObject();
  *(_OWORD *)(v90 + 16) = xmmword_24116B220;
  *(void *)(v90 + 32) = v88;
  uint64_t v142 = v90;
  sub_2411609C0();
  CGRect v133 = v88;
  uint64_t v142 = sub_241161A00();
  uint64_t v143 = v91;
  sub_241160860();
  sub_241160860();
  uint64_t v92 = v120;
  sub_241160CE0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24101F178((uint64_t)v144);
  uint64_t v93 = swift_allocObject();
  uint64_t v94 = v135;
  *(void *)(v93 + 16) = v135;
  *(void *)(v93 + 24) = v81;
  sub_24112F6E0();
  sub_241010110(&qword_26B005E18, MEMORY[0x263F44AA8]);
  swift_bridgeObjectRetain();
  Class v95 = v121;
  uint64_t v96 = v125;
  sub_24115FE70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v92, v96);
  v144[0] = v94;
  v144[1] = v81;
  char v145 = 0;
  sub_24112FB40();
  uint64_t v97 = v122;
  uint64_t v98 = v127;
  sub_24115FE40();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v95, v98);
  sub_24112FBB4();
  uint64_t v99 = v128;
  uint64_t v100 = sub_24115FE20();

  (*(void (**)(char *, uint64_t))(v126 + 8))(v97, v99);
  uint64_t v101 = v136;
  v136(v134, v72);
  v101(v139, v72);
  return v100;
}

uint64_t sub_24112D018@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  if (*((unsigned char *)a1 + 16) == 1)
  {
    uint64_t v3 = *a1;
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t result = 0;
  }
  *a2 = v3;
  a2[1] = result;
  return result;
}

uint64_t sub_24112D064@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v5 = *a1;
  *(void *)a4 = a2;
  *(void *)(a4 + 8) = a3;
  if (v5 >> 62) {
    goto LABEL_8;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  if (v6)
  {
    while (1)
    {
      unint64_t v8 = v6 - 1;
      if (__OFSUB__(v6, 1))
      {
        __break(1u);
LABEL_11:
        MEMORY[0x245617450](v6 - 1, v5);
        swift_unknownObjectRelease();
        goto LABEL_12;
      }
      if ((v5 & 0xC000000000000001) != 0) {
        goto LABEL_11;
      }
      if ((v8 & 0x8000000000000000) != 0) {
        break;
      }
      unint64_t v9 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 < v9) {
        goto LABEL_13;
      }
      __break(1u);
LABEL_8:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_2411616E0();
      uint64_t v6 = result;
      if (!result) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    uint64_t result = swift_bridgeObjectRelease();
LABEL_13:
    *(unsigned char *)(a4 + 16) = v6 != 0;
  }
  return result;
}

void sub_24112D14C(unint64_t *a1@<X0>, id *a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v56 = sub_24115CCC0();
  uint64_t v8 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_24115CB10();
  uint64_t v11 = *(void (***)(char *, uint64_t))(v55 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v55);
  id v54 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  os_log_t v53 = (char *)&v45 - v15;
  MEMORY[0x270FA5388](v14);
  os_log_t v61 = (char *)&v45 - v16;
  unint64_t v17 = *a1;
  id v62 = *a2;
  unint64_t v63 = v17;
  if (v17 >> 62) {
    goto LABEL_23;
  }
  uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v18; uint64_t v18 = sub_2411616E0())
  {
    uint64_t v46 = a3;
    uint64_t v47 = v4;
    unint64_t v51 = v17;
    unint64_t v52 = v17 & 0xC000000000000001;
    uint64_t v49 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v50 = v11 + 1;
    uint64_t v4 = 4;
    uint64_t v48 = v18;
    while (1)
    {
      a3 = (unint64_t *)(v4 - 4);
      uint64_t v19 = v52 ? (char *)MEMORY[0x245617450](v4 - 4, v17) : (char *)*(id *)(v17 + 8 * v4);
      uint64_t v11 = (void (**)(char *, uint64_t))v19;
      if (__OFADD__(a3, 1)) {
        break;
      }
      uint64_t v58 = v4 - 3;
      id v20 = objc_msgSend(v19, sel_medicationIdentifier);
      uint64_t v21 = sub_241160730();
      uint64_t v23 = v22;

      id v24 = objc_msgSend(v62, sel_medicationIdentifier);
      uint64_t v25 = sub_241160730();
      uint64_t v27 = v26;

      if (v21 == v25 && v23 == v27)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v29 = sub_241161890();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v39 = objc_msgSend(v62, sel_medicationIdentifier);
          uint64_t v40 = sub_241160730();
          uint64_t v42 = v41;

          sub_24112E8AC();
          swift_allocError();
          *uint64_t v43 = v40;
          v43[1] = v42;
          swift_willThrow();

          return;
        }
      }
      uint64_t v57 = v4;
      sub_24115CC90();
      id v30 = objc_msgSend(v11, sel_startDate);
      uint64_t v60 = v11;
      uint64_t v31 = v53;
      sub_24115CAE0();

      sub_24115CBC0();
      uint64_t v32 = *v50;
      uint64_t v33 = v55;
      (*v50)(v31, v55);
      uint64_t v59 = *v49;
      uint64_t v34 = v56;
      v59(v10, v56);
      sub_24115CC90();
      id v35 = objc_msgSend(v62, sel_startDate);
      sub_24115CAE0();

      uint64_t v36 = v54;
      sub_24115CBC0();
      v32(v31, v33);
      v59(v10, v34);
      uint64_t v37 = v61;
      uint64_t v8 = sub_24115CAD0();

      v32(v36, v33);
      v32(v37, v33);
      if (v8)
      {
        swift_bridgeObjectRelease();
LABEL_21:
        a3 = v46;
        goto LABEL_27;
      }
      uint64_t v4 = v57 + 1;
      unint64_t v17 = v51;
      if (v58 == v48)
      {
        swift_bridgeObjectRelease();
        id v38 = v62;
        MEMORY[0x2456167B0]();
        if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2411609D0();
        }
        sub_241160A00();
        sub_2411609C0();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain_n();
  }
  swift_bridgeObjectRelease();
  id v44 = v62;
  MEMORY[0x2456167B0]();
  if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_2411609D0();
  }
  sub_241160A00();
  sub_2411609C0();
LABEL_27:
  *a3 = v63;
}

uint64_t sub_24112D6D8()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin37MedicationHighlightsGeneratorPipeline_domain;
  uint64_t v2 = sub_24115D130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin37MedicationHighlightsGeneratorPipeline_changeProvider));

  return swift_deallocClassInstance();
}

uint64_t sub_24112D790()
{
  return type metadata accessor for MedicationHighlightsGeneratorPipeline();
}

uint64_t sub_24112D79C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241124E38(a1, v2 + v6, v7, a2);
}

uint64_t sub_24112D848()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

unint64_t sub_24112D914()
{
  uint64_t v1 = *(void *)(sub_24115D1C0() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_24113977C(v2, v3);
}

uint64_t sub_24112D978()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_24112DA2C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = *(NSObject **)(v2 + v8);
  uint64_t v11 = *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_241125438(a1, v2 + v6, v9, v10, v11, a2);
}

void sub_24112DAF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_24102AE24(255, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263F8D488]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_24112DB74()
{
  if (!qword_26B0054E8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_24102B7C4(255, &qword_26B005AF0, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263EFDCF0]);
    sub_24102B850(&qword_26B005AE8, &qword_26B005AF0, v0);
    unint64_t v1 = sub_24115FAF0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B0054E8);
    }
  }
}

unint64_t sub_24112DC44()
{
  unint64_t result = qword_26B0060B0;
  if (!qword_26B0060B0)
  {
    sub_24112DAF0(255, &qword_26B005BB8, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B0060B0);
  }
  return result;
}

void sub_24112DCB8()
{
  if (!qword_26B006160)
  {
    sub_24112F66C(255, (unint64_t *)&qword_26B006170, MEMORY[0x263F45D90], MEMORY[0x263EFDD90]);
    sub_241024708(255, (unint64_t *)&qword_26B007340);
    sub_241043BEC();
    sub_24102A8F8();
    unint64_t v0 = sub_24115FC00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B006160);
    }
  }
}

void sub_24112DD84()
{
  if (!qword_26B0060F0)
  {
    sub_24112DCB8();
    sub_24102AE24(255, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263F8D488]);
    sub_241010110(&qword_26B006158, (void (*)(uint64_t))sub_24112DCB8);
    unint64_t v0 = sub_24115FAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0060F0);
    }
  }
}

uint64_t sub_24112DE54()
{
  return sub_241010110(&qword_26B0060E8, (void (*)(uint64_t))sub_24112DD84);
}

uint64_t sub_24112DE88()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24112DF60@<X0>(uint64_t a1@<X0>, NSObject **a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = *(NSObject **)(v2 + 16);
  uint64_t v8 = *(NSObject **)(v2 + 24);
  uint64_t v9 = *(char **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241128358(a1, v7, v8, v2 + v6, v9, a2);
}

unint64_t sub_24112E010()
{
  unint64_t result = qword_26B005D28;
  if (!qword_26B005D28)
  {
    sub_24102AE24(255, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263F8D488]);
    sub_24112E0A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005D28);
  }
  return result;
}

unint64_t sub_24112E0A4()
{
  unint64_t result = qword_26B004FE8;
  if (!qword_26B004FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004FE8);
  }
  return result;
}

unint64_t sub_24112E0F8()
{
  unint64_t result = qword_26B006118;
  if (!qword_26B006118)
  {
    sub_24112F86C(255, &qword_26B006120, (uint64_t (*)(uint64_t))sub_24112DD84, sub_24112DE54, MEMORY[0x263EFDAF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B006118);
  }
  return result;
}

uint64_t sub_24112E194@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_241129358(a1, *(unsigned char **)(v2 + 16), *(NSObject **)(v2 + 40), a2);
}

uint64_t sub_24112E1B8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_24112E258(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (unint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_24112E33C(unint64_t a1, void *a2)
{
  uint64_t v22 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      uint64_t v20 = v3;
      unint64_t v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x245617450](v4, a1);
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_21;
        }
        id v8 = objc_msgSend(v5, sel_medicationIdentifier);
        uint64_t v9 = sub_241160730();
        uint64_t v11 = v10;

        id v12 = objc_msgSend(a2, sel_semanticIdentifier);
        id v13 = objc_msgSend(v12, sel_stringValue);

        uint64_t v14 = sub_241160730();
        uint64_t v16 = v15;

        if (v9 == v14 && v11 == v16)
        {
          swift_bridgeObjectRelease_n();
LABEL_17:
          sub_241161640();
          sub_241161670();
          sub_241161680();
          sub_241161650();
          goto LABEL_5;
        }
        char v18 = sub_241161890();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_17;
        }

LABEL_5:
        ++v4;
        if (v7 == v20) {
          return v22;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      uint64_t v3 = sub_2411616E0();
      if (!v3) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_24112E548(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v25 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v19 = v3;
      unint64_t v5 = 0;
      uint64_t v23 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v24 = v3 & 0xC000000000000001;
      uint64_t v21 = v4;
      uint64_t v22 = (void *)(v3 + 32);
      uint64_t v20 = a2 + 7;
      while (1)
      {
        if (v24)
        {
          id v6 = (id)MEMORY[0x245617450](v5, v19);
        }
        else
        {
          if (v5 >= *(void *)(v23 + 16))
          {
            __break(1u);
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
          id v6 = (id)v22[v5];
        }
        unint64_t v7 = v6;
        if (__OFADD__(v5++, 1)) {
          goto LABEL_31;
        }
        id v9 = objc_msgSend(v6, sel_medicationIdentifier);
        uint64_t v10 = sub_241160730();
        unint64_t v3 = (unint64_t)v11;

        id v12 = (void *)a2[2];
        if (v12) {
          break;
        }

        swift_bridgeObjectRelease();
LABEL_5:
        if (v5 == v4) {
          return v25;
        }
      }
      id v13 = a2;
      BOOL v14 = a2[4] == v10 && a2[5] == v3;
      if (v14 || (sub_241161890() & 1) != 0) {
        break;
      }
      if (v12 == (void *)1)
      {
LABEL_27:

        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      uint64_t v15 = v20;
      uint64_t v16 = 1;
      while (1)
      {
        a2 = (void *)(v16 + 1);
        if (__OFADD__(v16, 1)) {
          break;
        }
        BOOL v17 = *(v15 - 1) == v10 && *v15 == v3;
        if (v17 || (sub_241161890() & 1) != 0) {
          goto LABEL_16;
        }
        v15 += 2;
        ++v16;
        if (a2 == v12) {
          goto LABEL_27;
        }
      }
LABEL_32:
      __break(1u);
LABEL_33:
      uint64_t v4 = sub_2411616E0();
      if (!v4) {
        return MEMORY[0x263F8EE78];
      }
    }
LABEL_16:
    swift_bridgeObjectRelease();
    sub_241161640();
    sub_241161670();
    sub_241161680();
    unint64_t v3 = (unint64_t)&v25;
    sub_241161650();
LABEL_17:
    uint64_t v4 = v21;
    a2 = v13;
    goto LABEL_5;
  }
  return MEMORY[0x263F8EE78];
}

unint64_t sub_24112E770(unint64_t a1)
{
  unint64_t v12 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_2411616E0())
  {
    unint64_t v4 = MEMORY[0x263F8EE78];
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x245617450](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      unint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v11 = v6;
      sub_24112D14C(&v12, &v11, &v10);
      swift_bridgeObjectRelease();
      if (v1)
      {
        swift_bridgeObjectRelease();

        return v4;
      }

      unint64_t v4 = v10;
      unint64_t v12 = v10;
      ++v5;
      if (v8 == v3) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  unint64_t v4 = MEMORY[0x263F8EE78];
LABEL_15:
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_24112E8AC()
{
  unint64_t result = qword_268CF2468;
  if (!qword_268CF2468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF2468);
  }
  return result;
}

void sub_24112E900()
{
  if (!qword_26B0059F0)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDE20];
    sub_24102B7C4(255, &qword_26B005C00, &qword_26B005D20, (uint64_t)&type metadata for MedicationLoggingHighlight, MEMORY[0x263EFDE20]);
    sub_241024708(255, (unint64_t *)&qword_26B007340);
    sub_24102B850(&qword_26B005BF8, &qword_26B005C00, v0);
    sub_24102A8F8();
    unint64_t v1 = sub_24115FC00();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B0059F0);
    }
  }
}

uint64_t sub_24112E9FC()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24112EADC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_241126620(a1, a2, v8, v2 + v6, v9, v10);
}

uint64_t sub_24112EB98()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24112EBD0()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24112ECDC(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5)
{
  uint64_t v11 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_241126FA4(a1, a2, a3, a4, a5, *(void *)(v5 + 16), v5 + v12, *(void *)(v5 + v13), *(void (**)(void, void))(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v5 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v5+ ((((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24112EDD8(void **a1)
{
  return sub_2411282A4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_24112EDE0()
{
  if (!qword_26B005588)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x263EFDCF0];
    sub_24102B3BC(255, (unint64_t *)&qword_26B005B10, MEMORY[0x263EFDCF0]);
    sub_241020840(255, (unint64_t *)&qword_26B0073B0);
    sub_24102B444(&qword_26B005B08, (unint64_t *)&qword_26B005B10, v0);
    unint64_t v1 = sub_24115FB20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B005588);
    }
  }
}

uint64_t sub_24112EECC()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24112EF5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_24115D1C0() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_24112A784(v4, a1);
}

uint64_t sub_24112EFE4(uint64_t a1)
{
  return sub_24112F428(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_24112A848);
}

void sub_24112EFFC()
{
  if (!qword_26B005A00)
  {
    sub_241160CC0();
    sub_241024708(255, (unint64_t *)&qword_26B007340);
    sub_241010110(&qword_26B005E18, MEMORY[0x263F44AA8]);
    sub_24102A8F8();
    unint64_t v0 = sub_24115FC00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005A00);
    }
  }
}

uint64_t sub_24112F0C8()
{
  return sub_241010110(&qword_26B0056E0, (void (*)(uint64_t))sub_2410448A0);
}

void sub_24112F0FC()
{
  if (!qword_26B0058E8)
  {
    sub_24112F218();
    sub_24102D548(255, (unint64_t *)&qword_26B005728, (void (*)(uint64_t))sub_2410448A0, (void (*)(void))sub_24112F0C8);
    sub_241010110(&qword_26B005620, (void (*)(uint64_t))sub_24112F218);
    sub_24102D0D0(&qword_26B005720, (unint64_t *)&qword_26B005728, (void (*)(uint64_t))sub_2410448A0, (void (*)(void))sub_24112F0C8);
    unint64_t v0 = sub_24115FBA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0058E8);
    }
  }
}

void sub_24112F218()
{
  if (!qword_26B005628)
  {
    sub_24102B7C4(255, &qword_26B005B00, (unint64_t *)&qword_26B005D98, MEMORY[0x263F8D310], MEMORY[0x263EFDCF0]);
    sub_241117DF0(255, &qword_26B005DB8, &qword_26B007358);
    sub_24112F2D8();
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005628);
    }
  }
}

unint64_t sub_24112F2D8()
{
  unint64_t result = qword_26B005AF8;
  if (!qword_26B005AF8)
  {
    sub_24102B7C4(255, &qword_26B005B00, (unint64_t *)&qword_26B005D98, MEMORY[0x263F8D310], MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005AF8);
  }
  return result;
}

uint64_t sub_24112F360@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_24112AD74(a1, v6, a2);
}

uint64_t sub_24112F410(uint64_t a1)
{
  return sub_24112F428(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_24112B484);
}

uint64_t sub_24112F428(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a2(a1, v2 + v5, v6);
}

uint64_t sub_24112F4EC(unint64_t *a1)
{
  uint64_t v3 = *(void *)(sub_24115D1C0() - 8);
  uint64_t v4 = (char *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_24112B980(a1, v4);
}

uint64_t sub_24112F598()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24112F5D0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24112BFD8(a1, a2);
}

void sub_24112F5D8()
{
  if (!qword_26B0059B0)
  {
    sub_24112F66C(255, &qword_26B005A60, (uint64_t (*)(uint64_t))sub_24112F6E0, MEMORY[0x263EFDCF0]);
    sub_24112F748();
    unint64_t v0 = sub_24115FBE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0059B0);
    }
  }
}

void sub_24112F66C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_24112F6E0()
{
  if (!qword_26B005C90)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B005C90);
    }
  }
}

unint64_t sub_24112F748()
{
  unint64_t result = qword_26B005A58;
  if (!qword_26B005A58)
  {
    sub_24112F66C(255, &qword_26B005A60, (uint64_t (*)(uint64_t))sub_24112F6E0, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005A58);
  }
  return result;
}

void sub_24112F7D0()
{
  if (!qword_26B0054C8)
  {
    sub_24112F5D8();
    sub_241010110(&qword_26B0059A8, (void (*)(uint64_t))sub_24112F5D8);
    unint64_t v0 = sub_24115FAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0054C8);
    }
  }
}

void sub_24112F86C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_24112F8EC()
{
  return sub_241010110(&qword_26B0054C0, (void (*)(uint64_t))sub_24112F7D0);
}

uint64_t sub_24112F920@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24112C044(*(void *)(v2 + 16), *a1, a1[1]);
  *a2 = result;
  return result;
}

void sub_24112F964()
{
  if (!qword_26B005D68)
  {
    sub_24112F66C(255, &qword_26B005A60, (uint64_t (*)(uint64_t))sub_24112F6E0, MEMORY[0x263EFDCF0]);
    unint64_t v0 = sub_241160A10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005D68);
    }
  }
}

unint64_t sub_24112F9EC()
{
  unint64_t result = qword_26B005830;
  if (!qword_26B005830)
  {
    sub_24112F86C(255, &qword_26B005838, (uint64_t (*)(uint64_t))sub_24112F7D0, sub_24112F8EC, MEMORY[0x263EFDC10]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005830);
  }
  return result;
}

uint64_t sub_24112FA88(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24112FA94()
{
  if (!qword_26B005708)
  {
    sub_241160CC0();
    sub_24112F6E0();
    sub_241010110(&qword_26B005E18, MEMORY[0x263F44AA8]);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005708);
    }
  }
}

uint64_t sub_24112FB40()
{
  return sub_241010110(&qword_26B005700, (void (*)(uint64_t))sub_24112FA94);
}

uint64_t sub_24112FB74()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24112FBAC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24112D064(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_24112FBB4()
{
  unint64_t result = qword_26B005540;
  if (!qword_26B005540)
  {
    sub_24112F86C(255, &qword_26B005548, (uint64_t (*)(uint64_t))sub_24112FA94, sub_24112FB40, MEMORY[0x263EFDAA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005540);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for MedicationHighlightsGeneratorPipeline.Failure(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MedicationHighlightsGeneratorPipeline.Failure(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for MedicationHighlightsGeneratorPipeline.Failure(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationHighlightsGeneratorPipeline.Failure(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationHighlightsGeneratorPipeline.Failure(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationHighlightsGeneratorPipeline.Failure()
{
  return &type metadata for MedicationHighlightsGeneratorPipeline.Failure;
}

void *initializeBufferWithCopyOfBuffer for MedicationLoggingHighlight(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MedicationLoggingHighlight(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for MedicationLoggingHighlight(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for MedicationLoggingHighlight(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MedicationLoggingHighlight()
{
  return &type metadata for MedicationLoggingHighlight;
}

void sub_24112FEB8(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_241161520();
    sub_241024708(0, (unint64_t *)&qword_26B007360);
    sub_24105209C();
    sub_241160BE0();
    uint64_t v5 = v24;
    uint64_t v23 = v25;
    uint64_t v7 = v26;
    int64_t v8 = v27;
    unint64_t v9 = v28;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v23 = a3 + 56;
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = v11;
    int64_t v8 = 0;
  }
  int64_t v22 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_241161550()) {
    goto LABEL_36;
  }
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v14 = v29;
  swift_unknownObjectRelease();
  int64_t v15 = v8;
  uint64_t v16 = v9;
  if (!v14) {
    goto LABEL_36;
  }
  while (1)
  {
    id v29 = v14;
    char v20 = a1(&v29);
    if (v4)
    {

      goto LABEL_36;
    }
    if (v20) {
      goto LABEL_36;
    }

    int64_t v8 = v15;
    unint64_t v9 = v16;
    if (v5 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v9) {
      break;
    }
    uint64_t v16 = (v9 - 1) & v9;
    unint64_t v17 = __clz(__rbit64(v9)) | (v8 << 6);
    int64_t v15 = v8;
LABEL_24:
    id v14 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
    if (!v14) {
      goto LABEL_36;
    }
  }
  int64_t v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v15 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v15);
  if (v18)
  {
LABEL_23:
    uint64_t v16 = (v18 - 1) & v18;
    unint64_t v17 = __clz(__rbit64(v18)) + (v15 << 6);
    goto LABEL_24;
  }
  int64_t v19 = v8 + 2;
  if (v8 + 2 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18) {
    goto LABEL_22;
  }
  int64_t v19 = v8 + 3;
  if (v8 + 3 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18) {
    goto LABEL_22;
  }
  int64_t v19 = v8 + 4;
  if (v8 + 4 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18)
  {
LABEL_22:
    int64_t v15 = v19;
    goto LABEL_23;
  }
  int64_t v15 = v8 + 5;
  if (v8 + 5 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v15);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v21 = v8 + 6;
  while (v22 != v21)
  {
    unint64_t v18 = *(void *)(v23 + 8 * v21++);
    if (v18)
    {
      int64_t v15 = v21 - 1;
      goto LABEL_23;
    }
  }
LABEL_36:
  sub_24101E92C();
}

uint64_t sub_2411301D8(uint64_t a1)
{
  uint64_t v2 = sub_24115CB50();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int64_t v8 = (char *)&v25 - v7;
  sub_2411358C8(0, &qword_26B006940, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  uint64_t result = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v25 - v11;
  int64_t v13 = 0;
  uint64_t v30 = a1;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v15 = a1 + 56;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 24);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v25 = v15;
  int64_t v26 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v28 = v3 + 16;
  id v29 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v27 = v3 + 48;
  if ((v18 & v14) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v20 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v13 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(void *)(v30 + 48) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_2410DBAF8((uint64_t)v8, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v26) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v25 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v26) {
        goto LABEL_24;
      }
      unint64_t v23 = *(void *)(v25 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v26) {
          goto LABEL_24;
        }
        unint64_t v23 = *(void *)(v25 + 8 * v13);
        if (!v23)
        {
          int64_t v13 = v22 + 3;
          if (v22 + 3 >= v26) {
            goto LABEL_24;
          }
          unint64_t v23 = *(void *)(v25 + 8 * v13);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v19 = (v23 - 1) & v23;
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v26)
  {
LABEL_24:
    (*v29)(v12, 1, 1, v2);
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v25 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_241130560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24115CB50();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v37 - v10;
  MEMORY[0x270FA5388](v9);
  int64_t v13 = (char *)&v37 - v12;
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v15 = *(void *)(a2 + 56);
  uint64_t v49 = a2 + 56;
  uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
  uint64_t v40 = ~v16;
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v41 = (unint64_t)(63 - v16) >> 6;
  uint64_t v46 = v5 + 32;
  uint64_t v50 = a1 + 56;
  uint64_t v51 = v5 + 16;
  unint64_t v52 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v44 = a2;
  id v38 = v13;
  uint64_t v39 = v5;
  int64_t v47 = 0;
  unint64_t v48 = v18;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v42 = (v18 - 1) & v18;
  int64_t v43 = v20;
  for (unint64_t i = __clz(__rbit64(v18)) | (v20 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    uint64_t v26 = *(void *)(v5 + 72);
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v27(v13, *(void *)(a2 + 48) + v26 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v13, v4);
    uint64_t v28 = *(void *)(a1 + 16);
    uint64_t v45 = (unint64_t)v52 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    id v29 = v11;
    if (!v28
      || (sub_2411333B4(&qword_26B006938, MEMORY[0x263F07508]),
          uint64_t v30 = sub_241160650(),
          uint64_t v31 = -1 << *(unsigned char *)(a1 + 32),
          unint64_t v32 = v30 & ~v31,
          ((*(void *)(v50 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0))
    {
      (*v52)(v11, v4);
LABEL_30:
      uint64_t v14 = 0;
      goto LABEL_31;
    }
    uint64_t v33 = a1;
    uint64_t v34 = ~v31;
    while (1)
    {
      v27(v8, *(void *)(v33 + 48) + v32 * v26, v4);
      sub_2411333B4(&qword_268CF15D8, MEMORY[0x263F07508]);
      char v35 = sub_2411606E0();
      uint64_t v36 = *v52;
      (*v52)(v8, v4);
      if (v35) {
        break;
      }
      unint64_t v32 = (v32 + 1) & v34;
      if (((*(void *)(v50 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
      {
        v36(v29, v4);
        goto LABEL_30;
      }
    }
    uint64_t v11 = v29;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v36)(v29, v4);
    unint64_t v18 = v42;
    int64_t v20 = v43;
    a2 = v44;
    a1 = v33;
    int64_t v13 = v38;
    uint64_t v5 = v39;
    int64_t v47 = v43;
    unint64_t v48 = v42;
    if (v42) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v22 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v22 >= v41) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v49 + 8 * v22);
    int64_t v24 = v20 + 1;
    if (!v23)
    {
      int64_t v24 = v20 + 2;
      if (v20 + 2 >= v41) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v49 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v20 + 3;
        if (v20 + 3 >= v41) {
          goto LABEL_34;
        }
        unint64_t v23 = *(void *)(v49 + 8 * v24);
        if (!v23) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v42 = (v23 - 1) & v23;
    int64_t v43 = v24;
  }
  uint64_t v25 = v20 + 4;
  if (v20 + 4 >= v41)
  {
LABEL_34:
    uint64_t v14 = 1;
LABEL_31:
    sub_24101E92C();
    return v14;
  }
  unint64_t v23 = *(void *)(v49 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v20 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v41) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v49 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_21;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2411309EC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v31 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v30 = (unint64_t)(63 - v5) >> 6;
  uint64_t v32 = a1 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v12)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (i << 6);
      int64_t v12 = i;
      if (!*(void *)(v4 + 16)) {
        goto LABEL_40;
      }
      goto LABEL_25;
    }
    int64_t v13 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v13 >= v30) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v12 = i + 1;
    if (!v14)
    {
      int64_t v12 = i + 2;
      if (i + 2 >= v30) {
        goto LABEL_41;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v12);
      if (!v14)
      {
        int64_t v12 = i + 3;
        if (i + 3 >= v30) {
          goto LABEL_41;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v12);
        if (!v14) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    if (!*(void *)(v4 + 16))
    {
LABEL_40:
      uint64_t v2 = 0;
      goto LABEL_42;
    }
LABEL_25:
    uint64_t v16 = v3;
    uint64_t v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_241161950();
    swift_bridgeObjectRetain();
    sub_241160830();
    uint64_t v20 = sub_2411619A0();
    uint64_t v21 = v4;
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v20 & ~v22;
    if (((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v24 = *(void *)(v21 + 48);
    uint64_t v25 = (void *)(v24 + 16 * v23);
    BOOL v26 = *v25 == v19 && v25[1] == v18;
    if (!v26 && (sub_241161890() & 1) == 0)
    {
      uint64_t v27 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v27;
        if (((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        uint64_t v28 = (void *)(v24 + 16 * v23);
        BOOL v29 = *v28 == v19 && v28[1] == v18;
        if (v29 || (sub_241161890() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      uint64_t v2 = 0;
LABEL_42:
      sub_24101E92C();
      return v2;
    }
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v16;
    uint64_t v4 = v21;
  }
  int64_t v15 = i + 4;
  if (i + 4 >= v30)
  {
LABEL_41:
    uint64_t v2 = 1;
    goto LABEL_42;
  }
  unint64_t v14 = *(void *)(v31 + 8 * v15);
  if (v14)
  {
    int64_t v12 = i + 4;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v12 >= v30) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v12);
    ++v15;
    if (v14) {
      goto LABEL_24;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_241130CE0(uint64_t a1, uint64_t a2)
{
  unint64_t v98 = sub_24115CB50();
  uint64_t v4 = *(void *)(v98 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v98);
  uint64_t j = (void (**)(void))&v89[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (unint64_t)&v89[-v8];
  uint64_t v10 = sub_24115CB10();
  uint64_t v92 = *(void *)(v10 - 8);
  uint64_t v93 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v96 = &v89[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2411358C8(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v97 = &v89[-v13];
  unint64_t v99 = a1;
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v15 = v14;
    if (v14) {
      goto LABEL_3;
    }
LABEL_30:
    uint64_t v18 = MEMORY[0x263F8EE78];
    unint64_t v100 = MEMORY[0x263F8EE78];
    if ((unint64_t)a2 >> 62) {
      goto LABEL_105;
    }
    uint64_t v30 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v99 = v9;
    if (v30) {
      goto LABEL_32;
    }
LABEL_106:
    swift_bridgeObjectRelease();
    unint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t v97 = j;
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) == 0) {
      goto LABEL_107;
    }
LABEL_118:
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_2411616E0();
    swift_release();
    if (!v63) {
      goto LABEL_119;
    }
LABEL_109:
    unint64_t v100 = v18;
    uint64_t result = sub_2410E58BC(0, v63 & ~(v63 >> 63), 0);
    if ((v63 & 0x8000000000000000) == 0)
    {
      uint64_t v94 = a2;
      uint64_t v64 = 0;
      uint64_t v65 = v100;
      uint64_t v95 = v4 + 32;
      uint64_t v96 = (unsigned char *)(v35 & 0xC000000000000001);
      uint64_t v66 = v30;
      unint64_t v67 = v35;
      unint64_t v68 = v99;
      do
      {
        if (v96) {
          MEMORY[0x245617450](v64, v35);
        }
        else {
          swift_retain();
        }
        uint64_t v69 = (void *)sub_24115F150();
        id v70 = objc_msgSend(v69, sel_UUID);

        sub_24115CB30();
        swift_release();

        unint64_t v100 = v65;
        unint64_t v72 = *(void *)(v65 + 16);
        unint64_t v71 = *(void *)(v65 + 24);
        if (v72 >= v71 >> 1)
        {
          sub_2410E58BC(v71 > 1, v72 + 1, 1);
          uint64_t v65 = v100;
        }
        ++v64;
        *(void *)(v65 + 16) = v72 + 1;
        (*(void (**)(unint64_t, unint64_t, unint64_t))(v4 + 32))(v65+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v72, v68, v98);
        unint64_t v35 = v67;
      }
      while (v63 != v64);
      uint64_t v30 = v66;
      swift_release();
      a2 = v94;
      uint64_t v18 = MEMORY[0x263F8EE78];
      goto LABEL_120;
    }
    goto LABEL_156;
  }
  if (a1 < 0) {
    uint64_t v18 = a1;
  }
  else {
    uint64_t v18 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_2411616E0();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_2411616E0();
  swift_bridgeObjectRelease();
  if (!v14)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    goto LABEL_12;
  }
LABEL_3:
  unint64_t v100 = MEMORY[0x263F8EE78];
  sub_24102A550(0, v14 & ~(v14 >> 63), 0);
  if (v14 < 0)
  {
    __break(1u);
LABEL_44:
    if (a2 < 0) {
      uint64_t v18 = a2;
    }
    else {
      uint64_t v18 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_2411616E0();
    uint64_t v95 = v15;
    if (v26) {
      goto LABEL_14;
    }
LABEL_48:
    swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x263F8EE78];
    goto LABEL_49;
  }
  uint64_t v94 = a2;
  uint64_t v95 = v15;
  uint64_t v4 = 0;
  uint64_t v16 = v100;
  unint64_t v17 = a1 & 0xC000000000000001;
  do
  {
    if (v17)
    {
      uint64_t v18 = MEMORY[0x245617450](v4, a1);
    }
    else
    {
      uint64_t v18 = *(void *)(a1 + 8 * v4 + 32);
      swift_retain();
    }
    uint64_t v19 = (void *)sub_24115F210();
    id v20 = objc_msgSend(v19, sel_identifier);

    uint64_t v21 = sub_241160730();
    uint64_t j = v22;
    swift_release();

    unint64_t v100 = v16;
    unint64_t v24 = *(void *)(v16 + 16);
    unint64_t v23 = *(void *)(v16 + 24);
    if (v24 >= v23 >> 1)
    {
      uint64_t v18 = (uint64_t)&v100;
      sub_24102A550(v23 > 1, v24 + 1, 1);
      uint64_t v16 = v100;
    }
    ++v4;
    *(void *)(v16 + 16) = v24 + 1;
    uint64_t v25 = v16 + 16 * v24;
    *(void *)(v25 + 32) = v21;
    *(void *)(v25 + 40) = j;
    a1 = v99;
  }
  while (v14 != v4);
  a2 = v94;
  uint64_t v15 = v95;
LABEL_12:
  uint64_t v94 = sub_241025580(v16);
  swift_bridgeObjectRelease();
  unint64_t v9 = MEMORY[0x263F8EE78];
  unint64_t v100 = MEMORY[0x263F8EE78];
  if ((unint64_t)a2 >> 62) {
    goto LABEL_44;
  }
  uint64_t v26 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v95 = v15;
  if (!v26) {
    goto LABEL_48;
  }
LABEL_14:
  if (v26 < 1)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  for (uint64_t i = 0; i != v26; ++i)
  {
    if ((a2 & 0xC000000000000001) != 0) {
      MEMORY[0x245617450](i, a2);
    }
    else {
      swift_retain();
    }
    uint64_t v28 = (void *)sub_24115F150();
    uint64_t v18 = (uint64_t)objc_msgSend(v28, sel_status);

    if (v18 == 4)
    {
      uint64_t v18 = (uint64_t)&v100;
      sub_241161640();
      sub_241161670();
      sub_241161680();
      sub_241161650();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = v100;
LABEL_49:
  unint64_t v100 = v9;
  uint64_t v36 = ((unint64_t)v29 >> 62) & 1;
  if (v29 < 0) {
    LODWORD(v36) = 1;
  }
  int v90 = v36;
  a2 = v93;
  if (v36 == 1)
  {
    swift_retain();
    uint64_t v4 = sub_2411616E0();
    if (v4) {
      goto LABEL_53;
    }
LABEL_67:
    swift_release();
    unint64_t v9 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_100;
    }
    goto LABEL_68;
  }
  uint64_t v4 = *(void *)(v29 + 16);
  swift_retain();
  if (!v4) {
    goto LABEL_67;
  }
LABEL_53:
  if (v4 < 1)
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  uint64_t v37 = 0;
  uint64_t v38 = v29;
  unint64_t v98 = v29 & 0xC000000000000001;
  uint64_t j = (void (**)(void))(v92 + 32);
  uint64_t v39 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56);
  uint64_t v40 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
  do
  {
    if (v98) {
      MEMORY[0x245617450](v37, v38);
    }
    else {
      swift_retain();
    }
    uint64_t v42 = (void *)sub_24115F150();
    uint64_t v18 = (uint64_t)objc_msgSend(v42, sel_scheduledDate);

    if (!v18)
    {
      uint64_t v41 = (uint64_t)v97;
      (*v39)((uint64_t)v97, 1, 1, a2);
LABEL_56:
      sub_2410A1AB8(v41);
      swift_release();
      goto LABEL_57;
    }
    sub_24115CAE0();

    uint64_t v41 = (uint64_t)v97;
    (*j)();
    (*v39)(v41, 0, 1, a2);
    if ((*v40)(v41, 1, a2) == 1) {
      goto LABEL_56;
    }
    sub_2410A1AB8(v41);
    uint64_t v18 = (uint64_t)&v100;
    sub_241161640();
    sub_241161670();
    sub_241161680();
    sub_241161650();
LABEL_57:
    ++v37;
  }
  while (v4 != v37);
  uint64_t v29 = v38;
  swift_release();
  unint64_t v9 = v100;
  if ((v100 & 0x8000000000000000) != 0)
  {
LABEL_100:
    swift_retain();
    uint64_t v43 = sub_2411616E0();
    goto LABEL_70;
  }
LABEL_68:
  if ((v9 & 0x4000000000000000) != 0) {
    goto LABEL_100;
  }
  uint64_t v43 = *(void *)(v9 + 16);
  swift_retain();
LABEL_70:
  uint64_t v44 = (void *)MEMORY[0x263F8EE78];
  uint64_t v91 = v29;
  if (!v43)
  {
LABEL_84:
    swift_release_n();
    uint64_t v18 = v94;
    unint64_t v9 = 0;
    uint64_t v53 = sub_241133C44((uint64_t)v44, v94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = *(void *)(v53 + 16);
    swift_bridgeObjectRelease();
    unint64_t v100 = MEMORY[0x263F8EE78];
    uint64_t v4 = v95;
    if (v95 >= 1)
    {
      unint64_t v55 = v99;
      if ((v99 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v56 = 0;
        do
        {
          MEMORY[0x245617450](v56++, v55);
          uint64_t v57 = sub_24115F220();
          swift_unknownObjectRelease();
          sub_2410CF8A4(v57);
        }
        while (v4 != v56);
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v58 = 0;
        do
        {
          ++v58;
          swift_retain();
          uint64_t v59 = sub_24115F220();
          swift_release();
          sub_2410CF8A4(v59);
        }
        while (v4 != v58);
      }
      swift_bridgeObjectRelease();
      uint64_t v60 = *(void *)(v100 + 16);
      swift_bridgeObjectRelease();
      if (v54 && v54 == v60)
      {
        swift_release();
        return 0;
      }
      else
      {
        if (v90)
        {
          swift_bridgeObjectRetain();
          uint64_t v62 = sub_2411616E0();
          swift_release();
        }
        else
        {
          uint64_t v62 = *(void *)(v91 + 16);
        }
        swift_release();
        if (v62 > 0) {
          return 1;
        }
        else {
          return 2;
        }
      }
    }
    __break(1u);
    goto LABEL_102;
  }
  if (v43 >= 1)
  {
    for (uint64_t j = 0; j != (void (**)(void))v43; uint64_t j = (void (**)(void))((char *)j + 1))
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        a2 = MEMORY[0x245617450](j, v9);
      }
      else
      {
        a2 = *(void *)(v9 + 8 * (void)j + 32);
        swift_retain();
      }
      uint64_t v45 = (void *)sub_24115F150();
      id v46 = objc_msgSend(v45, sel_scheduleItemIdentifier);

      if (v46)
      {
        uint64_t v47 = sub_241160730();
        uint64_t v49 = v48;
        swift_release();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v44 = sub_241051F68(0, v44[2] + 1, 1, v44);
        }
        unint64_t v51 = v44[2];
        unint64_t v50 = v44[3];
        a2 = v51 + 1;
        if (v51 >= v50 >> 1) {
          uint64_t v44 = sub_241051F68((void *)(v50 > 1), v51 + 1, 1, v44);
        }
        v44[2] = a2;
        unint64_t v52 = &v44[2 * v51];
        v52[4] = v47;
        v52[5] = v49;
      }
      else
      {
        swift_release();
      }
    }
    goto LABEL_84;
  }
LABEL_104:
  __break(1u);
LABEL_105:
  swift_bridgeObjectRetain();
  uint64_t result = sub_2411616E0();
  uint64_t v30 = result;
  unint64_t v99 = v9;
  if (!result) {
    goto LABEL_106;
  }
LABEL_32:
  if (v30 < 1)
  {
    __break(1u);
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  for (uint64_t k = 0; k != v30; ++k)
  {
    if ((a2 & 0xC000000000000001) != 0) {
      MEMORY[0x245617450](k, a2);
    }
    else {
      swift_retain();
    }
    uint64_t v33 = (void *)sub_24115F150();
    id v34 = objc_msgSend(v33, sel_scheduleItemIdentifier);

    if (v34)
    {

      sub_241161640();
      sub_241161670();
      sub_241161680();
      sub_241161650();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v35 = v100;
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v97 = j;
  if ((v100 & 0x8000000000000000) != 0) {
    goto LABEL_118;
  }
LABEL_107:
  if ((v35 & 0x4000000000000000) != 0) {
    goto LABEL_118;
  }
  uint64_t v63 = *(void *)(v35 + 16);
  if (v63) {
    goto LABEL_109;
  }
LABEL_119:
  swift_release();
  uint64_t v65 = MEMORY[0x263F8EE78];
LABEL_120:
  uint64_t v96 = (unsigned char *)sub_2410DF4C0(v65);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v100 = v18;
  if (!v30)
  {
    uint64_t v76 = v18;
    if (v18 < 0) {
      goto LABEL_144;
    }
    goto LABEL_133;
  }
  if (v30 < 1)
  {
LABEL_157:
    __break(1u);
    goto LABEL_158;
  }
  swift_bridgeObjectRetain();
  for (uint64_t m = 0; m != v30; ++m)
  {
    if ((a2 & 0xC000000000000001) != 0) {
      MEMORY[0x245617450](m, a2);
    }
    else {
      swift_retain();
    }
    uint64_t v74 = (void *)sub_24115F150();
    id v75 = objc_msgSend(v74, sel_status);

    if (v75 == (id)4)
    {
      sub_241161640();
      sub_241161670();
      sub_241161680();
      sub_241161650();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v76 = v100;
  uint64_t v18 = MEMORY[0x263F8EE78];
  if ((v100 & 0x8000000000000000) == 0)
  {
LABEL_133:
    if ((v76 & 0x4000000000000000) != 0) {
      goto LABEL_144;
    }
    uint64_t v77 = *(void *)(v76 + 16);
    if (v77) {
      goto LABEL_135;
    }
LABEL_145:
    swift_release();
    uint64_t v79 = MEMORY[0x263F8EE78];
LABEL_146:
    uint64_t v86 = sub_2410DF4C0(v79);
    swift_bridgeObjectRelease();
    char v87 = sub_241130560(v86, (uint64_t)v96);
    swift_bridgeObjectRelease();
    uint64_t v88 = *(void *)(v86 + 16);
    if (v87)
    {
      if (v88)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v61 = 2;
    }
    else if (v88)
    {
      uint64_t v61 = 1;
    }
    else
    {
      uint64_t v61 = 2;
    }
    swift_bridgeObjectRelease();
    return v61;
  }
LABEL_144:
  swift_bridgeObjectRetain();
  uint64_t v77 = sub_2411616E0();
  swift_release();
  if (!v77) {
    goto LABEL_145;
  }
LABEL_135:
  unint64_t v100 = v18;
  uint64_t result = sub_2410E58BC(0, v77 & ~(v77 >> 63), 0);
  if ((v77 & 0x8000000000000000) == 0)
  {
    uint64_t v78 = 0;
    uint64_t v79 = v100;
    unint64_t v99 = v76 & 0xC000000000000001;
    uint64_t v80 = v76;
    do
    {
      if (v99) {
        MEMORY[0x245617450](v78, v76);
      }
      else {
        swift_retain();
      }
      uint64_t v81 = (void *)sub_24115F150();
      id v82 = objc_msgSend(v81, sel_UUID);

      id v83 = v97;
      sub_24115CB30();
      swift_release();

      unint64_t v100 = v79;
      unint64_t v85 = *(void *)(v79 + 16);
      unint64_t v84 = *(void *)(v79 + 24);
      if (v85 >= v84 >> 1)
      {
        sub_2410E58BC(v84 > 1, v85 + 1, 1);
        uint64_t v79 = v100;
      }
      ++v78;
      *(void *)(v79 + 16) = v85 + 1;
      (*(void (**)(unint64_t, unsigned char *, unint64_t))(v4 + 32))(v79+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v85, v83, v98);
      uint64_t v76 = v80;
    }
    while (v77 != v78);
    swift_release();
    goto LABEL_146;
  }
LABEL_158:
  __break(1u);
  return result;
}

uint64_t sub_241131B58(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  if ((sub_241131E30(*(void *)a1, *(void *)a2, MEMORY[0x263F44C70], &qword_268CF2488, MEMORY[0x263F44C70]) & 1) == 0
    || (sub_241131E30(v2, v5, MEMORY[0x263F44C90], &qword_268CF2480, MEMORY[0x263F44C90]) & 1) == 0
    || v3 != v6)
  {
    return 0;
  }

  return sub_241133110(v4, v7);
}

uint64_t sub_241131C7C(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_semanticIdentifier);
  id v2 = objc_msgSend(v1, sel_stringValue);

  uint64_t v3 = sub_241160730();
  uint64_t v5 = v4;

  int v6 = (void *)sub_24115F2D0();
  id v7 = objc_msgSend(v6, sel_semanticIdentifier);

  id v8 = objc_msgSend(v7, sel_stringValue);
  uint64_t v9 = sub_241160730();
  uint64_t v11 = v10;

  if (v3 == v9 && v5 == v11) {
    char v13 = 1;
  }
  else {
    char v13 = sub_241161890();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

unint64_t sub_241131DA0(unint64_t a1, uint64_t a2)
{
  return sub_241131E30(a1, a2, MEMORY[0x263F44C70], &qword_268CF2488, MEMORY[0x263F44C70]);
}

unint64_t sub_241131DE8(unint64_t a1, uint64_t a2)
{
  return sub_241131E30(a1, a2, MEMORY[0x263F44C90], &qword_268CF2480, MEMORY[0x263F44C90]);
}

unint64_t sub_241131E30(unint64_t result, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v7 = result;
  unint64_t v8 = result >> 62;
  if (result >> 62) {
    goto LABEL_31;
  }
  uint64_t v9 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_2411616E0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 == v17) {
      goto LABEL_5;
    }
LABEL_33:
    char v15 = 0;
    return v15 & 1;
  }
  if (v9 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_33;
  }
LABEL_5:
  if (!v9) {
    goto LABEL_28;
  }
  uint64_t v10 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v7 < 0) {
    uint64_t v10 = v7;
  }
  if (!v8) {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v12 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  uint64_t v18 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v11 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v12 = v11;
  }
  if (v10 == v12)
  {
LABEL_28:
    char v15 = 1;
    return v15 & 1;
  }
  if ((v9 & 0x8000000000000000) == 0)
  {
    a3 = (uint64_t (*)(void))a3(0);
    unint64_t v13 = 0;
    unint64_t v8 = v7 & 0xC000000000000001;
    unint64_t v14 = a2 & 0xC000000000000001;
    uint64_t v19 = a2;
    a2 = v9 - 1;
    while (1)
    {
      if (v9 == v13)
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_2411616E0();
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      if (v8)
      {
        MEMORY[0x245617450](v13, v7);
        if (v14) {
          goto LABEL_20;
        }
      }
      else
      {
        swift_retain();
        if (v14)
        {
LABEL_20:
          MEMORY[0x245617450](v13, v19);
          goto LABEL_24;
        }
      }
      if (v13 >= *(void *)(v18 + 16)) {
        goto LABEL_30;
      }
      swift_retain();
LABEL_24:
      sub_2411333B4(a4, a5);
      char v15 = sub_2411606E0();
      swift_release();
      swift_release();
      if ((v15 & 1) != 0 && a2 != v13++) {
        continue;
      }
      return v15 & 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_241132054(uint64_t a1, uint64_t a2)
{
  return sub_24113229C(a1, a2, (uint64_t)&qword_26B007360);
}

uint64_t sub_241132068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v17 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      while (1)
      {
        uint64_t v15 = v14;
        sub_2411357A4(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        sub_2411357A4(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        if ((sub_24115CAD0() & 1) == 0 || v10[v4[5]] != v7[v4[5]] || v10[v4[6]] != v7[v4[6]]) {
          break;
        }
        char v16 = v10[v4[7]] ^ v7[v4[7]];
        sub_2411333FC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        sub_2411333FC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        if ((v16 & 1) == 0)
        {
          uint64_t v14 = v15 - 1;
          v12 += v13;
          if (v15) {
            continue;
          }
        }
        char v17 = v16 ^ 1;
        return v17 & 1;
      }
      sub_2411333FC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
      sub_2411333FC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
      char v17 = 0;
    }
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_241132288(uint64_t a1, uint64_t a2)
{
  return sub_24113229C(a1, a2, (uint64_t)&qword_26B007358);
}

uint64_t sub_24113229C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v8 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_2411616E0();
    swift_bridgeObjectRelease();
    if ((void *)v7 == v9) {
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v9 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v7 != v9) {
    return 0;
  }
LABEL_5:
  if (!v7) {
    return 1;
  }
  uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v10 = a1;
  }
  if (v6) {
    uint64_t v11 = v10;
  }
  uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v13 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v12 = a2;
  }
  if (v8) {
    uint64_t v13 = v12;
  }
  if (v11 == v13) {
    return 1;
  }
  if (v7 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x245617450](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v9 = (void *)result;
  unint64_t v8 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v15 = (id)MEMORY[0x245617450](0, a2);
LABEL_22:
    char v16 = v15;
    sub_241024708(0, (unint64_t *)a3);
    a3 = sub_2411612E0();

    if (a3)
    {
      uint64_t v17 = 1 - v7;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v7 = v17 + i == 5;
        if (v17 + i == 5) {
          return v7;
        }
        unint64_t v22 = i - 4;
        if (v23)
        {
          a3 = MEMORY[0x245617450](i - 4, a1);
          if (v8) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v22 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          a3 = (uint64_t)*(id *)(a1 + 8 * i);
          if (v8)
          {
LABEL_24:
            id v19 = (id)MEMORY[0x245617450](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v22 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v19 = *(id *)(a2 + 8 * i);
LABEL_25:
        id v20 = v19;
        char v21 = sub_2411612E0();

        if ((v21 & 1) == 0) {
          return v7;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_24113251C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v20 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_19:
    char v16 = 0;
    return v16 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_2411357A4(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent);
      sub_2411357A4(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent);
      if (*v10 != *v7) {
        break;
      }
      BOOL v15 = v10[1] == v7[1] && v10[2] == v7[2];
      if (!v15 && (sub_241161890() & 1) == 0) {
        break;
      }
      char v16 = sub_24115CAD0();
      sub_2411333FC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent);
      sub_2411333FC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent);
      BOOL v18 = v14-- != 0;
      if (v16)
      {
        v12 += v13;
        if (v18) {
          continue;
        }
      }
      return v16 & 1;
    }
    sub_2411333FC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent);
    sub_2411333FC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent);
    goto LABEL_19;
  }
  char v16 = 1;
  return v16 & 1;
}

uint64_t sub_241132724(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_241161890(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_241161890() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_2411327EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    uint64_t v12 = 0;
    uint64_t v13 = a2 + 32;
    uint64_t v14 = a1 + 32;
    uint64_t v44 = *(void *)(a1 + 16);
    uint64_t v42 = v8;
    uint64_t v43 = v13;
    while (1)
    {
      char v16 = (uint64_t *)(v14 + 56 * v12);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      uint64_t v20 = v16[2];
      uint64_t v19 = v16[3];
      uint64_t v22 = v16[4];
      uint64_t v21 = v16[5];
      uint64_t v50 = v18;
      uint64_t v51 = v21;
      uint64_t v23 = v16[6];
      unint64_t v24 = (uint64_t *)(v13 + 56 * v12);
      uint64_t v25 = *v24;
      uint64_t v26 = v24[1];
      uint64_t v28 = v24[2];
      uint64_t v27 = v24[3];
      uint64_t v30 = v24[4];
      uint64_t v29 = v24[5];
      uint64_t v45 = v26;
      uint64_t v46 = v29;
      uint64_t v52 = v24[6];
      BOOL v31 = v17 == v25 && v18 == v26;
      uint64_t v48 = v27;
      uint64_t v49 = v19;
      if (!v31)
      {
        char v32 = sub_241161890();
        uint64_t v19 = v49;
        uint64_t v27 = v48;
        if ((v32 & 1) == 0) {
          break;
        }
      }
      BOOL v33 = v20 == v28 && v19 == v27;
      if (!v33 && (sub_241161890() & 1) == 0) {
        break;
      }
      if (v51)
      {
        if (!v46) {
          return 0;
        }
        BOOL v34 = v22 == v30 && v51 == v46;
        if (!v34 && (sub_241161890() & 1) == 0) {
          return 0;
        }
      }
      else if (v46)
      {
        return 0;
      }
      uint64_t v35 = *(void *)(v23 + 16);
      if (v35 != *(void *)(v52 + 16)) {
        return 0;
      }
      if (v35 && v23 != v52)
      {
        uint64_t v41 = v14;
        uint64_t v36 = v42;
        unint64_t v37 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v47 = *(void *)(v36 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_2411357A4(v23 + v37, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
          sub_2411357A4(v52 + v37, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
          if ((sub_24115CAD0() & 1) == 0 || v10[v4[5]] != v7[v4[5]] || v10[v4[6]] != v7[v4[6]]) {
            break;
          }
          uint64_t v38 = v4[7];
          int v39 = v10[v38];
          int v40 = v7[v38];
          sub_2411333FC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
          sub_2411333FC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
          if (v39 != v40) {
            goto LABEL_37;
          }
          v37 += v47;
          if (!--v35)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v14 = v41;
            goto LABEL_6;
          }
        }
        sub_2411333FC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
        sub_2411333FC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MedicationHighlightsContent.HighlightDay);
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
LABEL_6:
      ++v12;
      uint64_t result = 1;
      uint64_t v13 = v43;
      if (v12 == v44) {
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_241132C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24115CB50();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v48 = (char *)&v35 - v9;
  sub_2411358C8(0, &qword_26B006940, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  uint64_t result = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v35 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v14 = 0;
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v38 = a1 + 56;
    uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v15;
    int64_t v39 = (unint64_t)(v16 + 63) >> 6;
    uint64_t v44 = v5 + 48;
    uint64_t v45 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v46 = a2 + 56;
    uint64_t v47 = v5 + 16;
    uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v36 = v5;
    uint64_t v37 = a1;
    uint64_t v35 = v13;
    if (!v18) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v41 = (v18 - 1) & v18;
    int64_t v42 = v14;
    for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
    {
      uint64_t v25 = *(void *)(v5 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
      uint64_t v27 = 1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1) {
        return v27;
      }
      (*v43)(v48, v13, v4);
      sub_2411333B4(&qword_26B006938, MEMORY[0x263F07508]);
      uint64_t v28 = sub_241160650();
      uint64_t v29 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v30 = v28 & ~v29;
      if (((*(void *)(v46 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
      {
        (*v19)(v48, v4);
        return 0;
      }
      uint64_t v40 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v31 = a2;
      uint64_t v32 = ~v29;
      while (1)
      {
        v26(v8, *(void *)(v31 + 48) + v30 * v25, v4);
        sub_2411333B4(&qword_268CF15D8, MEMORY[0x263F07508]);
        char v33 = sub_2411606E0();
        BOOL v34 = *v19;
        (*v19)(v8, v4);
        if (v33) {
          break;
        }
        unint64_t v30 = (v30 + 1) & v32;
        if (((*(void *)(v46 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        {
          v34(v48, v4);
          return 0;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v48, v4);
      a2 = v31;
      uint64_t v5 = v36;
      a1 = v37;
      uint64_t v13 = v35;
      unint64_t v18 = v41;
      int64_t v14 = v42;
      if (v41) {
        goto LABEL_7;
      }
LABEL_8:
      int64_t v21 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      if (v21 >= v39) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v38 + 8 * v21);
      int64_t v23 = v14 + 1;
      if (!v22)
      {
        int64_t v23 = v14 + 2;
        if (v14 + 2 >= v39) {
          goto LABEL_34;
        }
        unint64_t v22 = *(void *)(v38 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 3;
          if (v14 + 3 >= v39) {
            goto LABEL_34;
          }
          unint64_t v22 = *(void *)(v38 + 8 * v23);
          if (!v22)
          {
            uint64_t v24 = v14 + 4;
            if (v14 + 4 >= v39)
            {
LABEL_34:
              uint64_t v27 = 1;
              (*v45)(v13, 1, 1, v4);
              return v27;
            }
            unint64_t v22 = *(void *)(v38 + 8 * v24);
            if (!v22)
            {
              while (1)
              {
                int64_t v23 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_36;
                }
                if (v23 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v22 = *(void *)(v38 + 8 * v23);
                ++v24;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v23 = v14 + 4;
          }
        }
      }
LABEL_21:
      uint64_t v41 = (v22 - 1) & v22;
      int64_t v42 = v23;
    }
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  return 0;
}

uint64_t sub_241133110(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_241161950();
    swift_bridgeObjectRetain();
    sub_241160830();
    uint64_t v18 = sub_2411619A0();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    unint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_241161890() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_241161890() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_2411333B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2411333FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_24113345C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_241161520();
    sub_241024708(0, (unint64_t *)&qword_26B007360);
    sub_24105209C();
    sub_241160BE0();
    uint64_t v1 = v32;
    uint64_t v30 = v33;
    uint64_t v2 = v34;
    uint64_t v3 = v35;
    unint64_t v4 = v36;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v30 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    uint64_t v3 = 0;
  }
  int64_t v29 = (unint64_t)(v2 + 64) >> 6;
  uint64_t v31 = v1;
  if ((v1 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_241161550()) {
    goto LABEL_39;
  }
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v9 = v37;
  swift_unknownObjectRelease();
  uint64_t v10 = v3;
  uint64_t v11 = v4;
  if (!v37) {
    goto LABEL_39;
  }
  while (1)
  {
    id v16 = objc_msgSend(v9, sel_semanticIdentifier);
    id v17 = objc_msgSend(v16, sel_stringValue);

    uint64_t v18 = sub_241160730();
    uint64_t v20 = v19;

    uint64_t v21 = (void *)sub_24115F160();
    if (v21)
    {
      unint64_t v22 = v21;
      id v23 = objc_msgSend(v21, sel_semanticIdentifier);

      id v24 = objc_msgSend(v23, sel_stringValue);
      uint64_t v25 = sub_241160730();
      uint64_t v27 = v26;

      if (v18 == v25 && v20 == v27)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_39;
      }
      char v28 = sub_241161890();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_39;
      }

      uint64_t v3 = v10;
      unint64_t v4 = v11;
      uint64_t v1 = v31;
      if (v31 < 0) {
        goto LABEL_8;
      }
    }
    else
    {

      swift_bridgeObjectRelease();
      uint64_t v3 = v10;
      unint64_t v4 = v11;
      if (v1 < 0) {
        goto LABEL_8;
      }
    }
LABEL_11:
    if (!v4) {
      break;
    }
    uint64_t v11 = (v4 - 1) & v4;
    unint64_t v12 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v10 = v3;
LABEL_29:
    id v9 = *(id *)(*(void *)(v1 + 48) + 8 * v12);
    if (!v9) {
      goto LABEL_39;
    }
  }
  int64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    return;
  }
  if (v13 >= v29) {
    goto LABEL_39;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v13);
  uint64_t v10 = v3 + 1;
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 2;
  if (v3 + 2 >= v29) {
    goto LABEL_39;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v10);
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 3;
  if (v3 + 3 >= v29) {
    goto LABEL_39;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v10);
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 4;
  if (v3 + 4 >= v29) {
    goto LABEL_39;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v10);
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 5;
  if (v3 + 5 >= v29) {
    goto LABEL_39;
  }
  unint64_t v14 = *(void *)(v30 + 8 * v10);
  if (v14)
  {
LABEL_28:
    uint64_t v11 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_29;
  }
  uint64_t v15 = v3 + 6;
  while (v29 != v15)
  {
    unint64_t v14 = *(void *)(v30 + 8 * v15++);
    if (v14)
    {
      uint64_t v10 = v15 - 1;
      goto LABEL_28;
    }
  }
LABEL_39:
  sub_24101E92C();
}

uint64_t sub_241133864(unint64_t a1, uint64_t *a2)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_24115CB50();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v38 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v41 = (char *)&v27 - v6;
  uint64_t v42 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_21:
    uint64_t v7 = sub_2411616E0();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7)
    {
LABEL_3:
      unint64_t v8 = 0;
      uint64_t v32 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v33 = a1 & 0xC000000000000001;
      unint64_t v29 = a1 + 32;
      uint64_t v30 = v7;
      uint64_t v37 = v28 + 16;
      int64_t v39 = (void (**)(char *, uint64_t))(v28 + 8);
      unint64_t v31 = a1;
      while (1)
      {
        if (v33)
        {
          uint64_t v9 = MEMORY[0x245617450](v8, a1);
          BOOL v10 = __OFADD__(v8, 1);
          unint64_t v11 = v8 + 1;
          if (v10)
          {
LABEL_18:
            __break(1u);
            return v42;
          }
        }
        else
        {
          if (v8 >= *(void *)(v32 + 16))
          {
            __break(1u);
            goto LABEL_21;
          }
          uint64_t v9 = *(void *)(v29 + 8 * v8);
          swift_retain();
          BOOL v10 = __OFADD__(v8, 1);
          unint64_t v11 = v8 + 1;
          if (v10) {
            goto LABEL_18;
          }
        }
        unint64_t v36 = v11;
        uint64_t v12 = *v34;
        swift_bridgeObjectRetain();
        uint64_t v35 = v9;
        int64_t v13 = (void *)sub_24115F150();
        id v14 = objc_msgSend(v13, sel_UUID);

        sub_24115CB30();
        uint64_t v40 = v12;
        if (*(void *)(v12 + 16)
          && (uint64_t v15 = v40,
              sub_2411333B4(&qword_26B006938, MEMORY[0x263F07508]),
              uint64_t v16 = sub_241160650(),
              uint64_t v17 = -1 << *(unsigned char *)(v15 + 32),
              unint64_t v18 = v16 & ~v17,
              uint64_t v19 = v15 + 56,
              ((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) != 0))
        {
          uint64_t v20 = ~v17;
          uint64_t v21 = *(void *)(v28 + 72);
          unint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
          while (1)
          {
            id v23 = v38;
            v22(v38, *(void *)(v40 + 48) + v21 * v18, v3);
            sub_2411333B4(&qword_268CF15D8, MEMORY[0x263F07508]);
            char v24 = sub_2411606E0();
            uint64_t v25 = *v39;
            (*v39)(v23, v3);
            if (v24) {
              break;
            }
            unint64_t v18 = (v18 + 1) & v20;
            if (((*(void *)(v19 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
              goto LABEL_4;
            }
          }
          swift_bridgeObjectRelease();
          v25(v41, v3);
          swift_release();
        }
        else
        {
LABEL_4:
          swift_bridgeObjectRelease();
          (*v39)(v41, v3);
          sub_241161640();
          sub_241161670();
          sub_241161680();
          sub_241161650();
        }
        unint64_t v8 = v36;
        a1 = v31;
        if (v36 == v30) {
          return v42;
        }
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_241133C44(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v25 = result + 32;
    uint64_t v5 = a2 + 56;
    uint64_t v6 = MEMORY[0x263F8EE78];
    unint64_t v26 = *(void *)(result + 16);
    while (1)
    {
      uint64_t v24 = v6;
      if (v4 <= v2) {
        unint64_t v7 = v2;
      }
      else {
        unint64_t v7 = v4;
      }
      unint64_t v8 = v4;
      while (1)
      {
        if (v8 == v7)
        {
          __break(1u);
          return result;
        }
        unint64_t v4 = v8 + 1;
        if (*(void *)(a2 + 16)) {
          break;
        }
LABEL_8:
        unint64_t v8 = v4;
        if (v4 == v2) {
          return v24;
        }
      }
      uint64_t v9 = (uint64_t *)(v25 + 16 * v8);
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      sub_241161950();
      swift_bridgeObjectRetain();
      sub_241160830();
      uint64_t v12 = sub_2411619A0();
      uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v14 = v12 & ~v13;
      if (((*(void *)(v5 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        goto LABEL_7;
      }
      uint64_t v15 = *(void *)(a2 + 48);
      uint64_t v16 = (void *)(v15 + 16 * v14);
      BOOL v17 = *v16 == v11 && v16[1] == v10;
      if (!v17 && (sub_241161890() & 1) == 0) {
        break;
      }
LABEL_24:
      uint64_t v6 = v24;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_24102A550(0, *(void *)(v24 + 16) + 1, 1);
        uint64_t v6 = v24;
      }
      unint64_t v22 = *(void *)(v6 + 16);
      unint64_t v21 = *(void *)(v6 + 24);
      if (v22 >= v21 >> 1)
      {
        uint64_t result = sub_24102A550(v21 > 1, v22 + 1, 1);
        uint64_t v6 = v24;
      }
      *(void *)(v6 + 16) = v22 + 1;
      uint64_t v23 = v6 + 16 * v22;
      *(void *)(v23 + 32) = v11;
      *(void *)(v23 + 40) = v10;
      unint64_t v2 = v26;
      if (v4 == v26) {
        return v6;
      }
    }
    uint64_t v18 = ~v13;
    while (1)
    {
      unint64_t v14 = (v14 + 1) & v18;
      if (((*(void *)(v5 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        break;
      }
      uint64_t v19 = (void *)(v15 + 16 * v14);
      BOOL v20 = *v19 == v11 && v19[1] == v10;
      if (v20 || (sub_241161890() & 1) != 0) {
        goto LABEL_24;
      }
    }
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v2 = v26;
    goto LABEL_8;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_241133E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v142 = a3;
  uint64_t v138 = sub_24115F2E0();
  uint64_t v155 = *(void *)(v138 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v138 - 8);
  uint64_t v158 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v140 = (char *)&v131 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v136 = (char *)&v131 - v10;
  uint64_t v135 = sub_24115CB50();
  uint64_t v11 = *(void *)(v135 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v135);
  os_log_t v134 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v133 = (uint64_t)&v131 - v14;
  uint64_t v15 = type metadata accessor for MedicationDaySummaryViewModelChange(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (uint64_t *)((char *)&v131 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v172 = MEMORY[0x263F8EE88];
  uint64_t v170 = 0;
  unint64_t v171 = MEMORY[0x263F8EE78];
  unint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    uint64_t v20 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v163 = *MEMORY[0x263F09AF0];
    id v153 = (id)*MEMORY[0x263F09AF8];
    uint64_t v21 = a2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v143 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0) {
      uint64_t v21 = a2;
    }
    uint64_t v131 = v21;
    v159 = (void (**)(unint64_t, char *, uint64_t))(a2 & 0xC000000000000001);
    long long v132 = (void (**)(uint64_t, uint64_t))(v11 + 8);
    uint64_t v137 = a1;
    swift_bridgeObjectRetain();
    int v139 = 0;
    v152 = 0;
    unint64_t v22 = 0;
    v157 = (void (**)(unint64_t, uint64_t))(MEMORY[0x263F8EE58] + 8);
    unint64_t v160 = a2;
    unint64_t v148 = v15;
    uint64_t v147 = v16;
    uint64_t v146 = v18;
    uint64_t v145 = v19;
    uint64_t v150 = v20;
LABEL_5:
    if (v22 <= v19) {
      unint64_t v23 = v19;
    }
    else {
      unint64_t v23 = v22;
    }
    unint64_t v156 = v23;
    while (2)
    {
      if (v22 != v156)
      {
        unint64_t v26 = v22++;
        sub_2411357A4(v20 + *(void *)(v16 + 72) * v26, (uint64_t)v18, type metadata accessor for MedicationDaySummaryViewModelChange);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_2411301D8(*v18);
            goto LABEL_10;
          case 2u:
            swift_bridgeObjectRelease();
            sub_24113582C(0, &qword_268CF06D8, &qword_26B006F18, MEMORY[0x263F44C90]);
            v152 = *(void **)((char *)v18 + *(int *)(v24 + 48));
            uint64_t v25 = sub_2411605E0();
            (*(void (**)(uint64_t *, uint64_t))(*(void *)(v25 - 8) + 8))(v18, v25);
            goto LABEL_10;
          case 3u:
            uint64_t v3 = v22;
            unint64_t v22 = *v18;
            uint64_t v80 = v170;
            if (!v170) {
              uint64_t v80 = MEMORY[0x263F8EE88];
            }
            uint64_t v170 = v80;
            if (v22 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v81 = sub_2411616E0();
              swift_bridgeObjectRelease();
              if (!v81)
              {
LABEL_113:
                swift_bridgeObjectRelease();
                unint64_t v22 = v3;
                goto LABEL_10;
              }
            }
            else
            {
              uint64_t v81 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (!v81) {
                goto LABEL_113;
              }
            }
            if (v81 < 1) {
              goto LABEL_146;
            }
            if ((v22 & 0xC000000000000001) != 0)
            {
              for (uint64_t i = 0; i != v81; ++i)
              {
                id v83 = (void *)MEMORY[0x245617450](i, v22);
                sub_2410DBAD4(&v167, v83);
              }
            }
            else
            {
              for (uint64_t j = 0; j != v81; ++j)
              {
                uint64_t v86 = *(void **)(v22 + 8 * j + 32);
                sub_2410DBAD4(&v167, v86);
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v20 = v150;
            unint64_t v22 = v3;
LABEL_10:
            if (v22 != v19) {
              continue;
            }
LABEL_115:
            swift_bridgeObjectRelease();
            char v87 = v152;
            if (a2) {
              goto LABEL_116;
            }
            goto LABEL_121;
          case 4u:
            int v139 = 1;
            if (v22 != v19) {
              goto LABEL_5;
            }
            goto LABEL_115;
          default:
            unint64_t v151 = v22;
            sub_24113582C(0, &qword_268CF06E0, &qword_26B006F10, MEMORY[0x263F44C70]);
            unint64_t v28 = *(uint64_t *)((char *)v18 + *(int *)(v27 + 48));
            if (v28 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v29 = sub_2411616E0();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            unint64_t v22 = (unint64_t)&selRef_setSelectionStyle_;
            if (!v29) {
              goto LABEL_107;
            }
            unint64_t v30 = 0;
            unint64_t v164 = v28 & 0xC000000000000001;
            unint64_t v161 = v28 + 32;
            uint64_t v162 = v28 & 0xFFFFFFFFFFFFFF8;
LABEL_17:
            while (2)
            {
              if (v164)
              {
                uint64_t v3 = MEMORY[0x245617450](v30, v28);
                BOOL v31 = __OFADD__(v30++, 1);
                if (!v31)
                {
LABEL_23:
                  uint64_t v32 = (void *)sub_24115F150();
                  id v33 = [v32 *(SEL *)(v22 + 3576)];

                  if (v33)
                  {
                    uint64_t v34 = sub_241160630();

                    uint64_t v35 = sub_241160730();
                    if (*(void *)(v34 + 16) && (unint64_t v37 = sub_24101DC1C(v35, v36), (v38 & 1) != 0))
                    {
                      sub_24101F1C8(*(void *)(v34 + 56) + 32 * v37, (uint64_t)&v167);
                    }
                    else
                    {
                      long long v167 = 0u;
                      long long v168 = 0u;
                    }
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (*((void *)&v168 + 1))
                    {
                      if ((swift_dynamicCast() & 1) == 0) {
                        goto LABEL_36;
                      }
                      unint64_t v39 = v165;
                      uint64_t v40 = v166;
                      uint64_t v41 = (void *)sub_24115F150();
                      id v42 = [v41 *(SEL *)(v22 + 3576)];

                      if (v42)
                      {
                        uint64_t v43 = sub_241160630();

                        uint64_t v44 = sub_241160730();
                        if (*(void *)(v43 + 16) && (unint64_t v46 = sub_24101DC1C(v44, v45), (v47 & 1) != 0))
                        {
                          sub_24101F1C8(*(void *)(v43 + 56) + 32 * v46, (uint64_t)&v167);
                        }
                        else
                        {
                          long long v167 = 0u;
                          long long v168 = 0u;
                        }
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if (*((void *)&v168 + 1))
                        {
                          uint64_t v49 = sub_241024708(0, &qword_26B007380);
                          unint64_t v22 = 0x2650E4000;
                          if (swift_dynamicCast())
                          {
                            id v149 = (id)v165;
                            if (a2)
                            {
                              uint64_t v144 = v29;
                              uint64_t v141 = v49;
                              uint64_t v154 = (void *)v39;
                              if ((unint64_t)a2 >> 62)
                              {
                                swift_bridgeObjectRetain_n();
                                uint64_t v50 = sub_2411616E0();
                                if (v50) {
                                  goto LABEL_47;
                                }
                              }
                              else
                              {
                                uint64_t v50 = *(void *)(v143 + 16);
                                swift_bridgeObjectRetain_n();
                                if (v50)
                                {
LABEL_47:
                                  uint64_t v51 = 4;
                                  while (1)
                                  {
                                    uint64_t v52 = v51 - 4;
                                    if (v159)
                                    {
                                      MEMORY[0x245617450](v51 - 4, a2);
                                      unint64_t v22 = v51 - 3;
                                      if (__OFADD__(v52, 1)) {
                                        goto LABEL_144;
                                      }
                                    }
                                    else
                                    {
                                      swift_retain();
                                      unint64_t v22 = v51 - 3;
                                      if (__OFADD__(v52, 1)) {
                                        goto LABEL_144;
                                      }
                                    }
                                    uint64_t v53 = (void *)sub_24115F150();
                                    id v54 = objc_msgSend(v53, sel_metadata);

                                    if (!v54) {
                                      break;
                                    }
                                    uint64_t v55 = sub_241160630();

                                    uint64_t v56 = sub_241160730();
                                    if (*(void *)(v55 + 16) && (unint64_t v58 = sub_24101DC1C(v56, v57), (v59 & 1) != 0))
                                    {
                                      sub_24101F1C8(*(void *)(v55 + 56) + 32 * v58, (uint64_t)&v167);
                                    }
                                    else
                                    {
                                      long long v167 = 0u;
                                      long long v168 = 0u;
                                    }
                                    swift_bridgeObjectRelease();
                                    swift_bridgeObjectRelease();
                                    if (!*((void *)&v168 + 1)) {
                                      goto LABEL_49;
                                    }
                                    if (swift_dynamicCast())
                                    {
                                      if ((void *)v165 == v154 && v166 == v40)
                                      {
                                        swift_bridgeObjectRelease();
                                        swift_bridgeObjectRelease_n();
LABEL_72:
                                        swift_bridgeObjectRelease();
                                        uint64_t v61 = (void *)sub_24115F150();
                                        unint64_t v22 = (unint64_t)&selRef_setSelectionStyle_;
                                        id v62 = objc_msgSend(v61, sel_metadata);

                                        id v63 = v149;
                                        if (v62)
                                        {
                                          uint64_t v64 = sub_241160630();

                                          uint64_t v65 = sub_241160730();
                                          if (*(void *)(v64 + 16) && (unint64_t v67 = sub_24101DC1C(v65, v66), (v68 & 1) != 0))
                                          {
                                            sub_24101F1C8(*(void *)(v64 + 56) + 32 * v67, (uint64_t)&v167);
                                          }
                                          else
                                          {
                                            long long v167 = 0u;
                                            long long v168 = 0u;
                                          }
                                          swift_bridgeObjectRelease();
                                          swift_bridgeObjectRelease();
                                          if (*((void *)&v168 + 1))
                                          {
                                            if (swift_dynamicCast())
                                            {
                                              id v69 = (id)v165;
                                              objc_msgSend((id)v165, sel_doubleValue);
                                              double v71 = v70;
                                              objc_msgSend(v63, sel_doubleValue);
                                              if (v71 < v72)
                                              {
                                                uint64_t v73 = swift_retain();
                                                MEMORY[0x2456167B0](v73);
                                                if (*(void *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                                                  sub_2411609D0();
                                                }
                                                sub_241160A00();
                                                sub_2411609C0();
                                                uint64_t v74 = (void *)sub_24115F150();
                                                id v75 = objc_msgSend(v74, sel_UUID);

                                                uint64_t v76 = v134;
                                                sub_24115CB30();

                                                uint64_t v77 = v133;
                                                sub_2410DBAF8(v133, v76);
                                                swift_release();

                                                swift_release();
                                                (*v132)(v77, v135);
                                                a2 = v160;
                                                unint64_t v22 = 0x2650E4000;
LABEL_89:
                                                uint64_t v29 = v144;
                                                if (v30 == v144)
                                                {
LABEL_107:
                                                  swift_bridgeObjectRelease();
                                                  uint64_t v84 = sub_2411605E0();
                                                  uint64_t v18 = v146;
                                                  (*(void (**)(uint64_t *, uint64_t))(*(void *)(v84 - 8) + 8))(v146, v84);
                                                  uint64_t v16 = v147;
                                                  unint64_t v19 = v145;
                                                  uint64_t v20 = v150;
                                                  unint64_t v22 = v151;
                                                  goto LABEL_10;
                                                }
                                                goto LABEL_17;
                                              }

                                              swift_release();
LABEL_88:
                                              swift_release();
                                              a2 = v160;
                                              goto LABEL_89;
                                            }
LABEL_85:
                                            uint64_t v78 = swift_retain();
                                            MEMORY[0x2456167B0](v78);
                                            if (*(void *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                                              sub_2411609D0();
                                            }
                                            sub_241160A00();
                                            sub_2411609C0();

                                            swift_release();
                                            goto LABEL_88;
                                          }
                                        }
                                        else
                                        {
                                          long long v167 = 0u;
                                          long long v168 = 0u;
                                        }
                                        sub_2411333FC((uint64_t)&v167, (uint64_t (*)(void))sub_24104D3F8);
                                        goto LABEL_85;
                                      }
                                      char v60 = sub_241161890();
                                      swift_bridgeObjectRelease();
                                      if (v60)
                                      {
                                        swift_bridgeObjectRelease();
                                        swift_bridgeObjectRelease();
                                        goto LABEL_72;
                                      }
                                    }
LABEL_50:
                                    swift_release();
                                    ++v51;
                                    a2 = v160;
                                    if (v22 == v50) {
                                      goto LABEL_93;
                                    }
                                  }
                                  long long v167 = 0u;
                                  long long v168 = 0u;
LABEL_49:
                                  sub_2411333FC((uint64_t)&v167, (uint64_t (*)(void))sub_24104D3F8);
                                  goto LABEL_50;
                                }
                              }
LABEL_93:
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease_n();
                              unint64_t v22 = 0x2650E4000;
                              uint64_t v29 = v144;
                            }
                            else
                            {
                              swift_bridgeObjectRelease();
                            }
                            uint64_t v79 = swift_retain();
                            MEMORY[0x2456167B0](v79);
                            if (*(void *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171 & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
                              sub_2411609D0();
                            sub_241160A00();
                            sub_2411609C0();

LABEL_39:
                            swift_release();
                            if (v30 == v29) {
                              goto LABEL_107;
                            }
                            continue;
                          }
                          swift_bridgeObjectRelease();
LABEL_36:
                          uint64_t v48 = swift_retain();
                          MEMORY[0x2456167B0](v48);
                          if (*(void *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171 & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
                            sub_2411609D0();
                          sub_241160A00();
                          sub_2411609C0();
                          goto LABEL_39;
                        }
                      }
                      else
                      {
                        long long v167 = 0u;
                        long long v168 = 0u;
                      }
                      swift_bridgeObjectRelease();
                      sub_2411333FC((uint64_t)&v167, (uint64_t (*)(void))sub_24104D3F8);
                      unint64_t v22 = 0x2650E4000;
                      goto LABEL_36;
                    }
                  }
                  else
                  {
                    long long v167 = 0u;
                    long long v168 = 0u;
                  }
                  sub_2411333FC((uint64_t)&v167, (uint64_t (*)(void))sub_24104D3F8);
                  goto LABEL_36;
                }
              }
              else
              {
                if (v30 >= *(void *)(v162 + 16)) {
                  goto LABEL_143;
                }
                uint64_t v3 = *(void *)(v161 + 8 * v30);
                swift_retain();
                BOOL v31 = __OFADD__(v30++, 1);
                if (!v31) {
                  goto LABEL_23;
                }
              }
              break;
            }
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
            break;
        }
      }
      break;
    }
    __break(1u);
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  int v139 = 0;
  char v87 = 0;
  if (!a2)
  {
LABEL_121:
    uint64_t v90 = v171;
    if (v87) {
      uint64_t v91 = (uint64_t)v87;
    }
    else {
      uint64_t v91 = MEMORY[0x263F8EE78];
    }
    uint64_t v92 = sub_2410A6374(v171);
    uint64_t v93 = sub_2410A6508(v91);
    *(void *)&long long v167 = v92;
    sub_2410CF750(v93);
    uint64_t v94 = v167;
    goto LABEL_169;
  }
LABEL_116:
  v152 = v87;
  unint64_t v88 = swift_bridgeObjectRetain();
  unint64_t v22 = sub_241133864(v88, &v172);
  swift_bridgeObjectRelease();
  *(void *)&long long v167 = MEMORY[0x263F8EE78];
  unint64_t v165 = MEMORY[0x263F8EE78];
  uint64_t v3 = v170;
  if (v170)
  {
    if ((v170 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v89 = sub_241161530();
      if (!v89) {
        goto LABEL_154;
      }
    }
    else
    {
      unint64_t v89 = *(void *)(v170 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v89)
      {
LABEL_154:
        swift_bridgeObjectRelease();
        goto LABEL_155;
      }
    }
    if (!(v22 >> 62))
    {
      uint64_t v95 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v162 = v3;
      if (!v95)
      {
LABEL_151:
        unint64_t v98 = v22;
        goto LABEL_152;
      }
LABEL_129:
      if (v95 < 1) {
        goto LABEL_212;
      }
      uint64_t v97 = 0;
      unint64_t v98 = v22;
      unint64_t v99 = v22 & 0xC000000000000001;
      do
      {
        if (v99) {
          MEMORY[0x245617450](v97, v98);
        }
        else {
          swift_retain();
        }
        swift_retain();
        sub_24113345C(v3);
        uint64_t v102 = v101;
        swift_release();
        if (v102)
        {
          sub_24115F150();
          sub_24115F170();
          swift_allocObject();
          id v100 = v102;
          sub_24115F180();
          unint64_t v89 = (unint64_t)&v167;
          MEMORY[0x2456167B0]();
          if (*(void *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_2411609D0();
          }
          sub_241160A00();
          sub_2411609C0();

          uint64_t v3 = v162;
        }
        else
        {
          uint64_t v103 = swift_retain();
          unint64_t v89 = (unint64_t)&v167;
          MEMORY[0x2456167B0](v103);
          if (*(void *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_2411609D0();
          }
          sub_241160A00();
          sub_2411609C0();
        }
        ++v97;
        swift_release();
      }
      while (v95 != v97);
LABEL_152:
      unint64_t v22 = v98;
      swift_bridgeObjectRelease();
      if ((v139 & 1) == 0 && !v152)
      {
        uint64_t v144 = v98;
        uint64_t v96 = v142 & 0xFFFFFFFFFFFFFF8;
        if ((unint64_t)v142 >> 62) {
          goto LABEL_213;
        }
        uint64_t v110 = *(void *)((v142 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_172:
        uint64_t v111 = v138;
        unint64_t v22 = (unint64_t)v136;
        if (v110)
        {
          uint64_t v146 = (uint64_t *)v96;
          unint64_t v148 = v142 & 0xC000000000000001;
          uint64_t v145 = v142 + 32;
          uint64_t v150 = v155 + 16;
          v159 = (void (**)(unint64_t, char *, uint64_t))(v155 + 32);
          v157 = (void (**)(unint64_t, uint64_t))(v155 + 8);
          swift_bridgeObjectRetain();
          unint64_t v112 = 0;
          uint64_t v147 = v110;
          while (1)
          {
            if (v148)
            {
              uint64_t v114 = MEMORY[0x245617450](v112, v142);
              BOOL v31 = __OFADD__(v112++, 1);
              if (v31) {
                goto LABEL_208;
              }
            }
            else
            {
              if (v112 >= v146[2])
              {
                __break(1u);
LABEL_212:
                __break(1u);
LABEL_213:
                if (v142 >= 0) {
                  unint64_t v89 = v96;
                }
                else {
                  unint64_t v89 = v142;
                }
                uint64_t v130 = v96;
                swift_bridgeObjectRetain();
                uint64_t v110 = sub_2411616E0();
                swift_bridgeObjectRelease();
                uint64_t v96 = v130;
                goto LABEL_172;
              }
              uint64_t v114 = *(void *)(v145 + 8 * v112);
              swift_retain();
              BOOL v31 = __OFADD__(v112++, 1);
              if (v31)
              {
LABEL_208:
                __break(1u);
                goto LABEL_209;
              }
            }
            unint64_t v89 = v114;
            uint64_t v115 = sub_24115F220();
            uint64_t v116 = v115;
            unint64_t v117 = *(void *)(v115 + 16);
            if (v117)
            {
              uint64_t v154 = (void *)v114;
              unint64_t v151 = v112;
              LODWORD(v153) = 0;
              unint64_t v118 = 0;
              unint64_t v160 = (*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80);
              unint64_t v161 = v115 + v160;
              unint64_t v156 = v117;
              id v149 = (id)(v117 - 1);
              unint64_t v119 = MEMORY[0x263F8EE78];
              do
              {
                while (1)
                {
                  if (v118 >= *(void *)(v116 + 16))
                  {
                    __break(1u);
                    goto LABEL_208;
                  }
                  uint64_t v163 = *(void *)(v155 + 72);
                  unint64_t v164 = v118 + 1;
                  uint64_t v120 = *(uint64_t (**)(unint64_t, unint64_t, uint64_t))(v155 + 16);
                  uint64_t v121 = v120(v22, v161 + v163 * v118, v111);
                  MEMORY[0x270FA5388](v121);
                  *(&v131 - 2) = v22;
                  sub_24112FEB8(sub_24113580C, (uint64_t)(&v131 - 4), v3);
                  if (!v122) {
                    break;
                  }
                  uint64_t v125 = v122;
                  sub_24115F2C0();
                  uint64_t v126 = (void *)sub_24115F210();
                  id v127 = objc_msgSend(v126, sel_identifier);

                  sub_241160730();
                  id v153 = v125;
                  sub_24115F2F0();
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    unint64_t v119 = sub_241052AFC(0, *(void *)(v119 + 16) + 1, 1, v119);
                  }
                  uint64_t v111 = v138;
                  unint64_t v89 = *(void *)(v119 + 16);
                  unint64_t v128 = *(void *)(v119 + 24);
                  if (v89 >= v128 >> 1) {
                    unint64_t v119 = sub_241052AFC(v128 > 1, v89 + 1, 1, v119);
                  }
                  *(void *)(v119 + 16) = v89 + 1;
                  (*v159)(v119 + v160 + v89 * v163, v140, v111);

                  (*v157)(v22, v111);
                  LODWORD(v153) = 1;
                  BOOL v129 = v149 == (id)v118;
                  uint64_t v3 = v162;
                  unint64_t v118 = v164;
                  if (v129)
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_202;
                  }
                }
                v120((unint64_t)v158, v22, v111);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v119 = sub_241052AFC(0, *(void *)(v119 + 16) + 1, 1, v119);
                }
                uint64_t v3 = v162;
                unint64_t v124 = *(void *)(v119 + 16);
                unint64_t v123 = *(void *)(v119 + 24);
                unint64_t v89 = v124 + 1;
                if (v124 >= v123 >> 1) {
                  unint64_t v119 = sub_241052AFC(v123 > 1, v124 + 1, 1, v119);
                }
                *(void *)(v119 + 16) = v89;
                (*v159)(v119 + v160 + v124 * v163, v158, v111);
                (*v157)(v22, v111);
                unint64_t v118 = v164;
              }
              while (v156 != v164);
              swift_bridgeObjectRelease();
              uint64_t v110 = v147;
              unint64_t v112 = v151;
              if ((v153 & 1) == 0) {
                goto LABEL_174;
              }
LABEL_202:
              sub_24115F210();
              sub_24115F230();
              swift_allocObject();
              sub_24115F240();
              unint64_t v89 = (unint64_t)&v165;
              MEMORY[0x2456167B0]();
              if (*(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_2411609D0();
              }
              sub_241160A00();
              uint64_t v110 = v147;
              unint64_t v112 = v151;
            }
            else
            {
LABEL_174:
              swift_bridgeObjectRelease();
              uint64_t v113 = swift_retain();
              unint64_t v89 = (unint64_t)&v165;
              MEMORY[0x2456167B0](v113);
              if (*(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_2411609D0();
              }
              sub_241160A00();
            }
            sub_2411609C0();
            swift_release();
            if (v112 == v110)
            {
              swift_bridgeObjectRelease();
              break;
            }
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v22 = v144;
        goto LABEL_155;
      }
      goto LABEL_154;
    }
LABEL_147:
    if ((v22 & 0x8000000000000000) != 0) {
      unint64_t v89 = v22;
    }
    else {
      unint64_t v89 = v22 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v95 = sub_2411616E0();
    uint64_t v162 = v3;
    if (!v95) {
      goto LABEL_151;
    }
    goto LABEL_129;
  }
  swift_bridgeObjectRetain();
LABEL_155:
  unint64_t v89 = v167;
  if ((unint64_t)v167 >> 62)
  {
LABEL_209:
    swift_bridgeObjectRetain();
    uint64_t v104 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v104 = *(void *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v104) {
    unint64_t v105 = v89;
  }
  else {
    unint64_t v105 = v22;
  }
  swift_bridgeObjectRelease();
  uint64_t v91 = v165;
  if (v165 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v106 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v106 = *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v106) {
    uint64_t v91 = v142;
  }
  swift_bridgeObjectRelease();
  if (v152)
  {
    uint64_t v91 = (uint64_t)v152;
    swift_bridgeObjectRelease();
  }
  else if (v139)
  {
    swift_bridgeObjectRelease();
    uint64_t v91 = MEMORY[0x263F8EE78];
  }
  unint64_t v169 = v105;
  sub_2410CF8D0(v171);
  uint64_t v90 = v169;
  uint64_t v107 = sub_2410A6374(v169);
  uint64_t v108 = sub_2410A6508(v91);
  unint64_t v169 = v107;
  sub_2410CF750(v108);
  uint64_t v94 = v169;
LABEL_169:
  sub_241025580(v94);
  swift_bridgeObjectRelease();
  sub_241130CE0(v91, v90);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v90;
}

uint64_t sub_2411357A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24113580C(id *a1)
{
  return sub_241131C7C(a1) & 1;
}

void sub_24113582C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_2411605E0();
    sub_2411358C8(255, a3, a4, MEMORY[0x263F8D488]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v8) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_2411358C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for MedicationDaySummaryViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MedicationDaySummaryViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MedicationDaySummaryViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MedicationDaySummaryViewModel(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for MedicationDaySummaryViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationDaySummaryViewModel(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationDaySummaryViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationDaySummaryViewModel()
{
  return &type metadata for MedicationDaySummaryViewModel;
}

unsigned char *storeEnumTagSinglePayload for MedicationDaySummaryViewModel.DoseEventsState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x241135C10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationDaySummaryViewModel.DoseEventsState()
{
  return &type metadata for MedicationDaySummaryViewModel.DoseEventsState;
}

unint64_t sub_241135C4C()
{
  unint64_t result = qword_268CF2490;
  if (!qword_268CF2490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_268CF2490);
  }
  return result;
}

uint64_t type metadata accessor for MedicationBrowseTileViewController()
{
  uint64_t result = qword_26B007188;
  if (!qword_26B007188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241135CEC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241135D2C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_24115E9F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241032AA0();
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(self, sel_hk_medicationsSymbolImage);
  uint64_t v10 = sub_24115CB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_24115E9E0();
  uint64_t v11 = sub_24115EF20();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_241032AF8((uint64_t)v8);
  *a1 = v9;
  a1[1] = v11;
  a1[2] = v13;
  uint64_t v14 = *MEMORY[0x263F44180];
  uint64_t v15 = sub_24115DFB0();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(a1, v14, v15);
}

uint64_t sub_241135F50()
{
  return sub_24115DFA0();
}

id sub_241135F88(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    sub_241160730();
    id v6 = a4;
    uint64_t v7 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = a4;
    uint64_t v7 = 0;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for MedicationBrowseTileViewController();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, v7, a4);

  return v9;
}

id sub_24113602C(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MedicationBrowseTileViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_241136078()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationBrowseTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2411360B0()
{
  return type metadata accessor for MedicationBrowseTileViewController();
}

void sub_2411360B8(uint64_t a1, void *a2)
{
}

void sub_2411360E0(void *a1)
{
  sub_24115DFC0();
  uint64_t v2 = v15;
  if (v15)
  {
    uint64_t v3 = sub_24101A6BC(v14, v15);
    uint64_t v4 = *(void *)(v2 - 8);
    __n128 v5 = MEMORY[0x270FA5388](v3);
    uint64_t v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v4 + 16))(v7, v5);
    id v8 = (void *)sub_24115E3A0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
    id v9 = objc_allocWithZone((Class)type metadata accessor for MedicationCategoryViewController());
    id v10 = MedicationCategoryViewController.init(healthStore:provenance:)(v8, 3);
    sub_24101F178((uint64_t)v14);
    id v11 = objc_msgSend(a1, sel_navigationController);
    if (v11)
    {
      uint64_t v12 = v11;
      objc_msgSend(v11, sel_pushViewController_animated_, v10, 1);
    }
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_24113625C()
{
  unint64_t result = qword_26B003A38;
  if (!qword_26B003A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B003A38);
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationBrowseTileViewModel()
{
  return &type metadata for MedicationBrowseTileViewModel;
}

uint64_t type metadata accessor for MedicationCategoryPDFDataSource()
{
  uint64_t result = qword_26B006C18;
  if (!qword_26B006C18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24113630C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24113634C()
{
  unint64_t v0 = sub_24115F600();
  if (v0 >> 62) {
    uint64_t v1 = sub_2411616E0();
  }
  else {
    uint64_t v1 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_2411371C0(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_24115DDF0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24116B370;
  long long v11 = xmmword_24116B370;
  sub_2411365FC(v12);
  sub_241061700((uint64_t)v12, (uint64_t)v10);
  sub_241137144((uint64_t)v10, (uint64_t)&v7);
  if (v8)
  {
    sub_241027314(&v7, (uint64_t)v9);
    sub_241027314(v9, (uint64_t)&v7);
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_241052654(0, v3[2] + 1, 1, v3);
    }
    unint64_t v5 = v3[2];
    unint64_t v4 = v3[3];
    if (v5 >= v4 >> 1) {
      uint64_t v3 = sub_241052654((void *)(v4 > 1), v5 + 1, 1, v3);
    }
    v3[2] = v5 + 1;
    sub_241027314(&v7, (uint64_t)&v3[5 * v5 + 4]);
  }
  else
  {
    sub_24113730C((uint64_t)&v7, (uint64_t)&qword_26B0069B0, (uint64_t)&qword_26B0069A8, MEMORY[0x263F437A0], (uint64_t (*)(void))sub_24110B474);
  }
  sub_24110B474(0, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
  swift_arrayDestroy();
  sub_24115DDE0();
  return v2;
}

uint64_t sub_2411365FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24115E650();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2411371C0(0, &qword_26B006D78, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = sub_24115DEE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241136918(v21);
  *uint64_t v12 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F440D8], v9);
  uint64_t v13 = sub_24115F8B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_2411615F0();
  uint64_t v14 = sub_241160730();
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v19 = v14;
  unint64_t v20 = v16;
  sub_241160860();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F446D0], v2);
  a1[3] = sub_24115E020();
  a1[4] = sub_2410F8238();
  sub_2410277C0(a1);
  return sub_24115E010();
}

uint64_t sub_241136918@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v20 = sub_24115E9F0();
  uint64_t v1 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x263F07690];
  uint64_t v5 = MEMORY[0x263F8D8F0];
  sub_2411371C0(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = sub_24115F9D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F9C0();
  uint64_t v13 = sub_24115CB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  sub_24115E9E0();
  sub_24115EF20();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v20);
  sub_24113730C((uint64_t)v8, (uint64_t)&qword_26B007200, v4, v5, (uint64_t (*)(void))sub_2411371C0);
  sub_24115F990();
  id v14 = objc_msgSend(self, sel_linkColor);
  unint64_t v15 = (void (*)(char *, void))sub_24115F920();
  sub_24115F8F0();
  v15(v22, 0);
  uint64_t v16 = MEMORY[0x263F81F20];
  uint64_t v17 = v21;
  v21[3] = v9;
  v17[4] = v16;
  uint64_t v18 = sub_2410277C0(v17);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v18, v12, v9);
}

uint64_t sub_241136C38(void *a1)
{
  sub_2411371C0(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v16 - v3;
  uint64_t v5 = sub_24115F790();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1;
  sub_24104F1E8();
  sub_241020840(0, &qword_268CF1AE0);
  id v9 = a1;
  if (swift_dynamicCast())
  {
    sub_241027314(v16, (uint64_t)v19);
    uint64_t v10 = sub_241160A70();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
    sub_2410280A4((uint64_t)v19, (uint64_t)v16);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = 0;
    sub_241027314(v16, v11 + 32);
    sub_24101A700((uint64_t)v4, (uint64_t)&unk_268CF24A0, v11);
    swift_release();
    return sub_24101F178((uint64_t)v19);
  }
  else
  {
    uint64_t v17 = 0;
    memset(v16, 0, sizeof(v16));
    sub_24113730C((uint64_t)v16, (uint64_t)&qword_268CF1AE8, (uint64_t)&qword_268CF1AE0, (uint64_t)&protocol descriptor for MedicationListEditing, (uint64_t (*)(void))sub_24110B474);
    sub_24115F740();
    uint64_t v13 = sub_24115F780();
    os_log_type_t v14 = sub_241160D30();
    if (os_log_type_enabled(v13, v14))
    {
      unint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v15 = 0;
      _os_log_impl(&dword_241007000, v13, v14, "[MedicationListDataSource] Share PDF triggered by unexpected view controller", v15, 2u);
      MEMORY[0x2456180C0](v15, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_241136F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_241136F48, 0, 0);
}

uint64_t sub_241136F48()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_24101A6BC(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_241137048;
  return v6(v2, v3);
}

uint64_t sub_241137048()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24113713C()
{
  return type metadata accessor for MedicationCategoryPDFDataSource();
}

uint64_t sub_241137144(uint64_t a1, uint64_t a2)
{
  sub_24110B474(0, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2411371C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_241137224()
{
  swift_unknownObjectRelease();
  sub_24101F178(v0 + 32);

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_241137264()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_24100B740;
  v2[2] = v0 + 32;
  return MEMORY[0x270FA2498](sub_241136F48, 0, 0);
}

uint64_t sub_24113730C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_24113736C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v31 = a2;
  int v32 = a3;
  uint64_t v33 = a4;
  uint64_t v5 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v29 = *(void *)(v30 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v28 = (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24115D130();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v27 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24115D1C0();
  uint64_t v9 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  unint64_t v34 = 0xD00000000000001ELL;
  unint64_t v35 = 0x80000002411698C0;
  uint64_t v12 = (void *)sub_24115D170();
  sub_24115CEF0();

  sub_241160860();
  swift_bridgeObjectRelease();
  unint64_t v13 = v34;
  unint64_t v14 = v35;
  unint64_t v15 = (void *)sub_24115D170();
  unint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  unint64_t v34 = 0xD000000000000021;
  unint64_t v35 = 0x80000002411692C0;
  sub_24115CEF0();
  sub_241160860();
  swift_bridgeObjectRelease();

  unint64_t v16 = v34;
  unint64_t v17 = v35;
  sub_24106D4D0(0, (unint64_t *)&qword_26B007390);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24116B200;
  *(void *)(inited + 32) = v13;
  *(void *)(inited + 40) = v14;
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v17;
  sub_2410CD6A4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v26);
  uint64_t v19 = (void *)sub_24115D170();
  sub_24100D920(v19, v27);

  uint64_t v20 = v28;
  sub_24102732C(a1, v28);
  unint64_t v21 = (*(unsigned __int8 *)(v30 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v22 = v21 + v29;
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 16) = v31;
  sub_24101177C(v20, v23 + v21);
  *(unsigned char *)(v23 + v22) = v32;
  return sub_24115D1D0();
}

uint64_t sub_2411376F0(char a1, uint64_t a2, char a3)
{
  sub_2411389C4();
  uint64_t v6 = *(void *)(sub_24115D0A0() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  if (a1)
  {
    *(_OWORD *)(v8 + 16) = xmmword_24116B370;
  }
  else
  {
    *(_OWORD *)(v8 + 16) = xmmword_24116B200;
    sub_241137B74(a2, v8 + v7);
  }
  sub_2411377F8(a2, a3 & 1);
  return v8;
}

uint64_t sub_2411377F8(uint64_t a1, int a2)
{
  uint64_t v19 = sub_24115CEB0();
  uint64_t v17 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v18 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24115F790();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F730();
  uint64_t v8 = sub_24115F780();
  os_log_type_t v9 = sub_241160D50();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v4;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = v12;
    int v16 = a2;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v20 = sub_24101F0A4(0xD00000000000001ELL, 0x80000002411698E0, &v21);
    sub_241161430();
    _os_log_impl(&dword_241007000, v8, v9, "[%s] Creating add medication onboarding item", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v12, -1, -1);
    MEMORY[0x2456180C0](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  unint64_t v13 = (void *)sub_24115D170();
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  uint64_t v21 = 0xD000000000000021;
  unint64_t v22 = 0x80000002411692C0;
  sub_24115CEF0();
  sub_241160860();
  swift_bridgeObjectRelease();

  type metadata accessor for MedicationRoomOnboardingTileViewController();
  sub_241138A1C();
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v18, *MEMORY[0x263F45580], v19);
  sub_24115D170();
  sub_24115CF40();
  return sub_24115CF90();
}

uint64_t sub_241137B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v36 = sub_24115D2A0();
  uint64_t v33 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v30 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_24115D330();
  uint64_t v32 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v41 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24115D7B0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v34 = sub_24115D830();
  uint64_t v31 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v43 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  unint64_t v44 = 0xD00000000000001ELL;
  unint64_t v45 = 0x80000002411698C0;
  unint64_t v39 = 0x80000002411698C0;
  uint64_t v40 = a1;
  unint64_t v7 = (void *)sub_24115D170();
  sub_24115CEF0();

  sub_241160860();
  swift_bridgeObjectRelease();
  unint64_t v37 = v45;
  unint64_t v38 = v44;
  uint64_t v8 = self;
  id v9 = objc_msgSend(v8, sel_configurationWithPointSize_, 51.0);
  id v10 = objc_msgSend(v8, sel_hk_medicationTrackingSymbolConfiguration);
  id v11 = objc_msgSend(v9, sel_configurationByApplyingConfiguration_, v10);

  sub_24115D790();
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  sub_24115C960();
  sub_24115C960();
  sub_24115D820();
  unint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  unint64_t v44 = 0xD00000000000001ELL;
  unint64_t v45 = v39;
  uint64_t v12 = (void *)sub_24115D170();
  sub_24115CEF0();

  sub_241160860();
  swift_bridgeObjectRelease();
  unint64_t v13 = (void *)sub_24115D170();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_2411616E0()) {
    sub_2411384E4(MEMORY[0x263F8EE78]);
  }
  type metadata accessor for MedicationsOnboardingTileActionHandler();
  sub_241138D9C(&qword_268CF24A8, (void (*)(uint64_t))type metadata accessor for MedicationsOnboardingTileActionHandler);
  sub_24115CF60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_24106D4D0(0, (unint64_t *)&qword_26B0073A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24116B220;
  *(void *)(inited + 32) = objc_msgSend(self, sel_medicationDoseEventType);
  unint64_t v44 = inited;
  sub_2411609C0();
  unint64_t v15 = v44;
  if (v44 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_2411616E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v18 = v35;
  uint64_t v17 = v36;
  uint64_t v19 = v34;
  uint64_t v20 = v33;
  uint64_t v21 = v32;
  uint64_t v22 = v31;
  uint64_t v23 = v30;
  if (v16) {
    sub_2410CDEEC(v15);
  }
  swift_bridgeObjectRelease();
  sub_24115CFE0();
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v23, *MEMORY[0x263F45700], v17);
  uint64_t v24 = v41;
  sub_24115D340();
  sub_24115CF80();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v18);
  uint64_t v25 = sub_24115D210();
  uint64_t v27 = v26;
  uint64_t v28 = (void (*)(unint64_t *, void))sub_24115D070();
  sub_2410257B0(&v46, v25, v27);
  swift_bridgeObjectRelease();
  v28(&v44, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v43, v19);
}

uint64_t sub_241138308(unint64_t a1, unint64_t a2)
{
  sub_241138D5C();
  if (a2 >> 62)
  {
    uint64_t v4 = sub_2411616F0();
    self;
    if (swift_dynamicCastObjCClass()) {
      return v4;
    }
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      self;
      if (!swift_dynamicCastObjCClass()) {
        goto LABEL_10;
      }
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_2411615F0();
  sub_241160860();
  sub_241161A00();
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_241161A00();
  sub_241160860();
  swift_bridgeObjectRelease();
  uint64_t result = sub_2411616C0();
  __break(1u);
  return result;
}

void sub_2411384E4(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_2410CE244();
      uint64_t v3 = sub_2411615D0();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_2411616E0();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v42 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = sub_241138308(v8, a1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      uint64_t v12 = sub_2411612D0();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        sub_241138D5C();
        id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
        char v19 = sub_2411612E0();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_2411612E0();

          if (v22) {
            goto LABEL_11;
          }
        }
      }
      *(void *)(v7 + 8 * v15) = v17 | v16;
      *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
      uint64_t v23 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      *(void *)(v3 + 16) = v24;
LABEL_12:
      if (v8 == v42) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = a1 + 32;
  uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_2411612D0();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_241138D5C();
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_2411612E0();

      if (v34)
      {
LABEL_23:

        uint64_t v5 = v42;
        goto LABEL_24;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_2411612E0();

        if (v37) {
          goto LABEL_23;
        }
      }
      uint64_t v5 = v42;
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_39;
    }
    *(void *)(v3 + 16) = v39;
LABEL_24:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_241138818()
{
  uint64_t v1 = (int *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 17) & ~v2;
  uint64_t v4 = v2 | 7;
  uint64_t v5 = *(void *)(*(void *)v1 + 64) + v3 + 1;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24115D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24113893C()
{
  uint64_t v1 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  char v3 = *(unsigned char *)(v0 + 16);
  char v4 = *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64));

  return sub_2411376F0(v3, v0 + v2, v4);
}

void sub_2411389C4()
{
  if (!qword_26B005F20)
  {
    sub_24115D0A0();
    unint64_t v0 = sub_241161860();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005F20);
    }
  }
}

uint64_t sub_241138A1C()
{
  uint64_t v0 = sub_24115F790();
  MEMORY[0x270FA5388](v0);
  sub_24115C780();
  swift_allocObject();
  sub_24115C770();
  sub_241138D08();
  uint64_t v1 = sub_24115C760();
  swift_release();
  return v1;
}

unint64_t sub_241138D08()
{
  unint64_t result = qword_26B004810;
  if (!qword_26B004810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004810);
  }
  return result;
}

unint64_t sub_241138D5C()
{
  unint64_t result = qword_26B005E00;
  if (!qword_26B005E00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B005E00);
  }
  return result;
}

uint64_t sub_241138D9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for MedicationHighlightsContent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MedicationHighlightsContent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MedicationHighlightsContent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MedicationHighlightsContent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MedicationHighlightsContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationHighlightsContent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationHighlightsContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationHighlightsContent()
{
  return &type metadata for MedicationHighlightsContent;
}

void *sub_241139068(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24115CB10();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_241139148(uint64_t a1)
{
  uint64_t v2 = sub_24115CB10();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_2411391AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24115CB10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_24113923C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24115CB10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_2411392D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24115CB10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_241139360(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24115CB10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_2411393F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241139404);
}

uint64_t sub_241139404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24115CB10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_2411394D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2411394E8);
}

uint64_t sub_2411394E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24115CB10();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_2411395A4()
{
  uint64_t result = sub_24115CB10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24113963C()
{
  return sub_24113CF38(&qword_268CF24B0, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay);
}

uint64_t sub_241139684()
{
  sub_241161950();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    sub_241161970();
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_241161970();
  }
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  sub_24113BB54((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_2411619A0();
}

unint64_t sub_24113977C(uint64_t a1, uint64_t a2)
{
  v3[2] = a2;
  return sub_241093B30((void (*)(long long *))sub_24113CE64, (uint64_t)v3, a1);
}

uint64_t sub_2411397C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v113 = a3;
  unint64_t v112 = (void *)sub_24115F790();
  uint64_t v111 = *(v112 - 1);
  MEMORY[0x270FA5388](v112);
  uint64_t v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_24115D130();
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v96 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24113CE80(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  unint64_t v99 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v100 = (char *)&v86 - v12;
  uint64_t v95 = sub_24115CCC0();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v104 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_24115CB10();
  uint64_t v106 = *(void *)(v101 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v101);
  uint64_t v91 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v93 = (char *)&v86 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unint64_t v105 = (unint64_t *)((char *)&v86 - v19);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v102 = (char *)&v86 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v103 = (char *)&v86 - v22;
  sub_24113CE80(0, (unint64_t *)&unk_26B007220, MEMORY[0x263F062D0], v8);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v92 = (char *)&v86 - v24;
  sub_24113CE80(0, &qword_26B004128, MEMORY[0x263F45770], v8);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v90 = (char *)&v86 - v26;
  uint64_t v110 = sub_24115CEB0();
  int v109 = *(void (***)(char *, void, uint64_t))(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v107 = (char *)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24113CE80(0, &qword_26B0040F8, MEMORY[0x263F45630], v8);
  MEMORY[0x270FA5388](v28 - 8);
  unint64_t v30 = (char *)&v86 - v29;
  id v32 = *(id *)a1;
  unint64_t v31 = *(void *)(a1 + 8);
  id v33 = objc_msgSend(*(id *)a1, sel_semanticIdentifier);
  id v34 = objc_msgSend(v33, sel_stringValue);

  sub_241160730();
  v118[0] = 0xD000000000000015;
  v118[1] = 0x80000002411699C0;
  uint64_t v108 = a2;
  uint64_t v35 = (void *)sub_24115D170();
  sub_24115CEF0();

  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  sub_241160860();
  swift_bridgeObjectRelease();
  uint64_t v36 = v118[0];
  char v37 = (unint64_t *)v32;
  swift_bridgeObjectRetain();
  sub_24113C458(v37, v31, 0, 0, v118);
  uint64_t v38 = sub_24113A810();
  unint64_t v40 = v39;
  sub_24113CEE4((uint64_t)v118);
  if (v40 >> 60 != 15)
  {
    type metadata accessor for MedicationHighlightsView.Model();
    sub_241022EB4(v38, v40);
    sub_24113CF38(&qword_26B003FC0, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsView.Model);
    uint64_t v89 = v38;
    uint64_t v42 = v114;
    sub_24115DE10();
    if (v42)
    {

      swift_bridgeObjectRelease();
      uint64_t v41 = v113;
      uint64_t v47 = v89;
      uint64_t v48 = sub_24115D0A0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v30, 1, 1, v48);
      sub_2410230DC(v47, v40);
      sub_2410A2080((uint64_t)v30);
      goto LABEL_6;
    }
    unint64_t v87 = v40;
    uint64_t v88 = type metadata accessor for MedicationHighlightsView(0);
    uint64_t v117 = v118[9];
    uint64_t v43 = *MEMORY[0x263F45578];
    uint64_t v114 = (void *)v36;
    unint64_t v44 = v107;
    v109[13](v107, v43, v110);
    unint64_t v45 = (void *)sub_24115D170();
    uint64_t v115 = sub_241160730();
    uint64_t v116 = v46;
    swift_bridgeObjectRetain();
    sub_241160860();
    swift_bridgeObjectRelease();
    sub_24113CF38(&qword_26B003FE8, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsView);
    sub_24115CF70();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    ((void (*)(char *, uint64_t))v109[1])(v44, v110);
    swift_release();
    uint64_t v54 = sub_24115D0A0();
    uint64_t v55 = *(void *)(v54 - 8);
    uint64_t v56 = *(void (***)(char *, void, uint64_t))(v55 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v56)(v30, 0, 1, v54);
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v113, v30, v54);
    uint64_t v57 = (char *)objc_msgSend(self, sel_categoryWithID_, 31);
    if (v57)
    {
      unint64_t v58 = v57;
      int v109 = v56;
      uint64_t v110 = v55 + 56;
      uint64_t v114 = 0;
      uint64_t v115 = (uint64_t)v37;
      sub_2410E3474();
      sub_24115F460();
      sub_24115CFB0();
      sub_24115CFF0();
      sub_24115D020();
      uint64_t v107 = v58;
      id v59 = objc_msgSend(v58, sel_displayName);
      sub_241160730();

      sub_24115D010();
      sub_24115CFA0();
      sub_24115CB00();
      sub_24115CC90();
      char v60 = (void *)sub_24115CC20();
      uint64_t v61 = (void *)sub_24115CAA0();
      unint64_t v112 = v60;
      id v62 = objc_msgSend(v60, sel_hk_startOfTomorrowForDate_, v61);

      char v37 = v105;
      if (v62)
      {
        sub_24115CAE0();

        uint64_t v63 = v106;
        uint64_t v64 = *(void (**)(char *, unint64_t *, uint64_t))(v106 + 32);
        uint64_t v65 = v100;
        uint64_t v66 = v37;
        char v37 = (unint64_t *)v101;
        v64(v100, v66, v101);
        uint64_t v111 = *(void *)(v63 + 56);
        ((void (*)(char *, void, uint64_t, unint64_t *))v111)(v65, 0, 1, v37);
        unint64_t v67 = *(uint64_t (**)(char *, uint64_t, unint64_t *))(v63 + 48);
        if (v67(v65, 1, v37) != 1)
        {
          uint64_t v88 = v54;
          v64(v102, (unint64_t *)v65, (uint64_t)v37);
          char v68 = (void *)sub_24115CAA0();
          id v69 = objc_msgSend(v112, sel_dateByAddingUnit_value_toDate_options_, 16, -28, v68, 0);

          if (v69)
          {
            double v70 = v105;
            sub_24115CAE0();

            double v71 = v99;
            v64(v99, v70, (uint64_t)v37);
            ((void (*)(char *, void, uint64_t, unint64_t *))v111)(v71, 0, 1, v37);
            uint64_t result = v67(v71, 1, v37);
            if (result != 1)
            {
              double v72 = v93;
              v64(v93, (unint64_t *)v71, (uint64_t)v37);
              uint64_t v73 = v37;
              uint64_t v74 = v106;
              id v75 = *(void (**)(unint64_t *, char *, unint64_t *))(v106 + 16);
              v75(v70, v72, v37);
              uint64_t v76 = v102;
              v75((unint64_t *)v91, v102, v37);
              uint64_t v77 = v92;
              sub_24115C7D0();

              uint64_t v78 = *(void (**)(char *, unint64_t *))(v74 + 8);
              v78(v72, v73);
              v78(v76, v73);
              (*(void (**)(char *, uint64_t))(v94 + 8))(v104, v95);
              v78(v103, v73);
              uint64_t v79 = sub_24115C810();
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v77, 0, 1, v79);
              sub_24115D350();
              uint64_t v80 = v113;
              sub_24115D000();
              uint64_t v81 = (void *)sub_24115D170();
              uint64_t v82 = v96;
              sub_24100DED8(v81, v96);

              sub_24115D120();
              (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v82, v98);
              sub_24115CFE0();
              sub_2410B37D8();
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_24116B200;
              *(void *)(inited + 32) = sub_24115D210();
              *(void *)(inited + 40) = v84;
              *(void *)(inited + 48) = sub_24115D220();
              *(void *)(inited + 56) = v85;
              sub_2410CD6A4(inited);
              swift_setDeallocating();
              swift_arrayDestroy();
              sub_24115D080();
              sub_24115D050();
              sub_24115CF90();
              sub_2410230DC(v89, v87);

              return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v109)(v80, 0, 1, v88);
            }
            goto LABEL_19;
          }
LABEL_18:
          uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t, unint64_t *))v111)(v99, 1, 1, v37);
LABEL_19:
          __break(1u);
          return result;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56))(v100, 1, 1, v101);
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  uint64_t v41 = v113;
LABEL_6:
  sub_24115F740();
  uint64_t v49 = sub_24115F780();
  os_log_type_t v50 = sub_241160D30();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v51 = 0;
    _os_log_impl(&dword_241007000, v49, v50, "Failed to make swiftUI feed item for in MedicationHighlightsFeedItemGenerator", v51, 2u);
    MEMORY[0x2456180C0](v51, -1, -1);
  }

  (*(void (**)(char *, void *))(v111 + 8))(v6, v112);
  uint64_t v52 = sub_24115D0A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v41, 1, 1, v52);
}

uint64_t sub_24113A810()
{
  uint64_t v0 = sub_24115F790();
  MEMORY[0x270FA5388](v0);
  sub_24115C780();
  swift_allocObject();
  sub_24115C770();
  sub_2410BF3B8();
  uint64_t v1 = sub_24115C760();
  swift_release();
  return v1;
}

uint64_t sub_24113AB0C(void *a1)
{
  uint64_t v3 = v1;
  sub_24113CDFC(0, &qword_26B005F08, (uint64_t (*)(void))sub_24113CBD4, (uint64_t)&type metadata for MedicationHighlightsContent.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v11 - v8;
  sub_24101A6BC(a1, a1[3]);
  sub_24113CBD4();
  sub_2411619D0();
  char v15 = 0;
  sub_241161800();
  if (!v2)
  {
    char v14 = 1;
    sub_241161800();
    char v13 = 2;
    sub_2411617D0();
    v11[1] = *(void *)(v3 + 48);
    char v12 = 3;
    sub_24113CE80(0, &qword_26B005D30, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, MEMORY[0x263F8D488]);
    sub_24113CC28(&qword_26B005D38, &qword_26B005020);
    sub_241161820();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_24113AD84()
{
  unint64_t result = 0x697461636964656DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 1937334628;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24113AE24(uint64_t a1)
{
  unint64_t v2 = sub_24113CBD4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24113AE60(uint64_t a1)
{
  unint64_t v2 = sub_24113CBD4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24113AE9C(void *a1)
{
  sub_24113CDFC(0, &qword_26B005F10, (uint64_t (*)(void))sub_24113CDA8, (uint64_t)&type metadata for MedicationHighlightsContent.HighlightDay.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_24101A6BC(a1, a1[3]);
  sub_24113CDA8();
  sub_2411619D0();
  char v13 = 0;
  sub_24115CB10();
  sub_24113CF38(&qword_26B0040E8, MEMORY[0x263F07490]);
  sub_241161820();
  if (!v1)
  {
    type metadata accessor for MedicationHighlightsContent.HighlightDay();
    char v12 = 1;
    sub_241161810();
    char v11 = 2;
    sub_241161810();
    char v10 = 3;
    sub_241161810();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24113B0E0()
{
  return sub_2411619A0();
}

uint64_t sub_24113B1B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_24115CB10();
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24113CDFC(0, &qword_26B0040C8, (uint64_t (*)(void))sub_24113CDA8, (uint64_t)&type metadata for MedicationHighlightsContent.HighlightDay.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v24 = v5;
  uint64_t v20 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24101A6BC(a1, a1[3]);
  sub_24113CDA8();
  uint64_t v23 = v7;
  uint64_t v11 = v25;
  sub_2411619C0();
  if (v11) {
    return sub_24101F178((uint64_t)a1);
  }
  uint64_t v12 = (uint64_t)a1;
  uint64_t v14 = v20;
  uint64_t v13 = v21;
  char v29 = 0;
  sub_24113CF38(&qword_26B003F08, MEMORY[0x263F07490]);
  uint64_t v16 = v22;
  char v15 = v23;
  sub_2411617C0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v16, v3);
  char v28 = 1;
  v10[v8[5]] = sub_2411617B0() & 1;
  char v27 = 2;
  v10[v8[6]] = sub_2411617B0() & 1;
  char v26 = 3;
  LOBYTE(v16) = sub_2411617B0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v24);
  v10[v8[7]] = v16 & 1;
  sub_24113CCE8((uint64_t)v10, v19);
  sub_24101F178(v12);
  return sub_24113CD4C((uint64_t)v10);
}

double sub_24113B56C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24113C7C0(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_24113B5BC(void *a1)
{
  return sub_24113AB0C(a1);
}

uint64_t sub_24113B5D4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  long long v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_24113C04C(v5, v7) & 1;
}

uint64_t sub_24113B634(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  sub_241161970();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24113BB54(a1, v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_24113B72C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_241161950();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_241160830();
  swift_bridgeObjectRelease();
  sub_241161970();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_241160830();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24113BB54((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_2411619A0();
}

unint64_t sub_24113B820()
{
  unint64_t result = 1702125924;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x737574617473;
      break;
    case 2:
      unint64_t result = 0x6465646461507369;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24113B8B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24113D310(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24113B8D8(uint64_t a1)
{
  unint64_t v2 = sub_24113CDA8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24113B914(uint64_t a1)
{
  unint64_t v2 = sub_24113CDA8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24113B950@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24113B1B0(a1, a2);
}

uint64_t sub_24113B968(void *a1)
{
  return sub_24113AE9C(a1);
}

uint64_t sub_24113B988()
{
  return sub_241161970();
}

uint64_t sub_24113BA38()
{
  return sub_2411619A0();
}

unint64_t sub_24113BB00()
{
  unint64_t result = qword_268CF24B8;
  if (!qword_268CF24B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF24B8);
  }
  return result;
}

uint64_t sub_24113BB54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = sub_241161960();
  if (v7)
  {
    uint64_t v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    do
    {
      sub_24113CCE8(v9, (uint64_t)v6);
      sub_24115CB10();
      sub_24113CF38(&qword_268CF1738, MEMORY[0x263F07490]);
      sub_241160660();
      sub_241161970();
      sub_241161970();
      sub_241161970();
      uint64_t result = sub_24113CD4C((uint64_t)v6);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_24113BCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v20 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t result = sub_241161960();
  uint64_t v22 = v6;
  if (v6)
  {
    uint64_t v8 = 0;
    uint64_t v21 = a2 + 32;
    do
    {
      uint64_t v9 = (void *)(v21 + 56 * v8);
      uint64_t v11 = v9[5];
      uint64_t v10 = v9[6];
      uint64_t v12 = v9[3];
      uint64_t v23 = v9[4];
      uint64_t v13 = v9[1];
      uint64_t v26 = v9[2];
      swift_bridgeObjectRetain();
      uint64_t v24 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_241160830();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_241160830();
      swift_bridgeObjectRelease();
      uint64_t v25 = v12;
      sub_241161970();
      if (v11)
      {
        swift_bridgeObjectRetain();
        sub_241160830();
        swift_bridgeObjectRelease();
      }
      uint64_t v14 = v24;
      sub_241161960();
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        uint64_t v23 = v11;
        uint64_t v24 = v13;
        uint64_t v26 = v8;
        uint64_t v16 = v20;
        uint64_t v17 = v14 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
        swift_bridgeObjectRetain();
        uint64_t v18 = *(void *)(v16 + 72);
        do
        {
          sub_24113CCE8(v17, (uint64_t)v5);
          sub_24115CB10();
          sub_24113CF38(&qword_268CF1738, MEMORY[0x263F07490]);
          sub_241160660();
          sub_241161970();
          sub_241161970();
          sub_241161970();
          sub_24113CD4C((uint64_t)v5);
          v17 += v18;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v8 = v26;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    while (v8 != v22);
  }
  return result;
}

uint64_t sub_24113BFC8(uint64_t a1, uint64_t a2)
{
  if ((sub_24115CAD0() & 1) != 0
    && (uint64_t v4 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay(),
        *(unsigned __int8 *)(a1 + v4[5]) == *(unsigned __int8 *)(a2 + v4[5]))
    && *(unsigned __int8 *)(a1 + v4[6]) == *(unsigned __int8 *)(a2 + v4[6]))
  {
    char v5 = *(unsigned char *)(a1 + v4[7]) ^ *(unsigned char *)(a2 + v4[7]) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_24113C04C(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_241161890() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (sub_241161890() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a1[5];
  uint64_t v7 = a2[5];
  if (v6)
  {
    if (v7 && (a1[4] == a2[4] && v6 == v7 || (sub_241161890() & 1) != 0)) {
      goto LABEL_16;
    }
    return 0;
  }
  if (v7) {
    return 0;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  uint64_t v9 = a2[6];

  return sub_241132068(v8, v9);
}

uint64_t sub_24113C114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24115F790();
  MEMORY[0x270FA5388](v2);
  sub_24115C750();
  swift_allocObject();
  sub_24115C740();
  sub_2410BEFD0();
  sub_24115C730();
  uint64_t result = swift_release();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  *(void *)(a1 + 48) = v9;
  return result;
}

uint64_t sub_24113C458@<X0>(unint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v11 = *((void *)v10 - 1);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a1;
  sub_2410E3474();
  uint64_t v14 = sub_24115F460();
  uint64_t v38 = v15;
  uint64_t v39 = v14;
  swift_bridgeObjectRetain();
  uint64_t v41 = a1;
  id v16 = objc_msgSend(a1, sel_semanticIdentifier);
  id v17 = objc_msgSend(v16, sel_stringValue);

  uint64_t v37 = sub_241160730();
  uint64_t v19 = v18;

  if (!(a2 >> 62))
  {
    uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v40 = a5;
    if (v20) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease_n();

    uint64_t v23 = (unint64_t *)MEMORY[0x263F8EE78];
LABEL_14:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v32 = v38;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease_n();
    id v33 = v40;
    *unint64_t v40 = v39;
    v33[1] = v32;
    v33[2] = v37;
    uint64_t v33[3] = v19;
    v33[4] = a3;
    v33[5] = a4;
    v33[6] = (uint64_t)v23;
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_2411616E0();
  unint64_t v40 = a5;
  if (!v20) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v43 = (unint64_t *)MEMORY[0x263F8EE78];
  uint64_t result = sub_2410E5A04(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v34 = v19;
    uint64_t v35 = a3;
    uint64_t v36 = a4;
    uint64_t v22 = 0;
    uint64_t v23 = v43;
    unint64_t v42 = a2 & 0xC000000000000001;
    unint64_t v24 = a2;
    uint64_t v25 = v20;
    do
    {
      if (v42) {
        id v26 = (id)MEMORY[0x245617450](v22, a2);
      }
      else {
        id v26 = *(id *)(a2 + 8 * v22 + 32);
      }
      char v27 = v26;
      id v28 = objc_msgSend(v26, sel_startDate, v34, v35, v36);
      sub_24115CAE0();

      id v29 = objc_msgSend(v27, sel_status);
      v13[v10[5]] = v29 == (id)4;
      v13[v10[6]] = 0;
      v13[v10[7]] = 0;
      uint64_t v43 = v23;
      unint64_t v31 = v23[2];
      unint64_t v30 = v23[3];
      if (v31 >= v30 >> 1)
      {
        sub_2410E5A04(v30 > 1, v31 + 1, 1);
        uint64_t v23 = v43;
      }
      ++v22;
      v23[2] = v31 + 1;
      sub_24113CF80((uint64_t)v13, (uint64_t)v23+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v31);
      a2 = v24;
    }
    while (v25 != v22);
    swift_bridgeObjectRelease_n();

    a3 = v35;
    a4 = v36;
    uint64_t v19 = v34;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_24113C7C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v28 = a2;
  sub_24113CDFC(0, &qword_268CF24C0, (uint64_t (*)(void))sub_24113CBD4, (uint64_t)&type metadata for MedicationHighlightsContent.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v8 = (char *)&v24 - v7;
  sub_24101A6BC(a1, a1[3]);
  sub_24113CBD4();
  sub_2411619C0();
  if (v2)
  {
    sub_24101F178((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v27 = a1;
    uint64_t v9 = v6;
    char v33 = 0;
    uint64_t v10 = v5;
    uint64_t v11 = sub_2411617A0();
    uint64_t v13 = v12;
    char v32 = 1;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_2411617A0();
    uint64_t v16 = v15;
    uint64_t v25 = v14;
    char v31 = 2;
    swift_bridgeObjectRetain();
    uint64_t v26 = v16;
    uint64_t v17 = sub_241161770();
    uint64_t v19 = v18;
    uint64_t v24 = v17;
    sub_24113CE80(0, &qword_26B005D30, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, MEMORY[0x263F8D488]);
    char v30 = 3;
    sub_24113CC28(&qword_26B0040B8, &qword_26B004010);
    swift_bridgeObjectRetain();
    sub_2411617C0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
    uint64_t v20 = v29;
    swift_bridgeObjectRetain();
    uint64_t v21 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24101F178((uint64_t)v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = v28;
    *id v28 = v11;
    v23[1] = v13;
    v23[2] = v25;
    void v23[3] = v21;
    v23[4] = v24;
    v23[5] = v19;
    v23[6] = v20;
  }
  return result;
}

unint64_t sub_24113CBD4()
{
  unint64_t result = qword_26B004FF0;
  if (!qword_26B004FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004FF0);
  }
  return result;
}

uint64_t sub_24113CC28(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24113CE80(255, &qword_26B005D30, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, MEMORY[0x263F8D488]);
    sub_24113CF38(a2, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24113CCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24113CD4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24113CDA8()
{
  unint64_t result = qword_26B005008;
  if (!qword_26B005008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005008);
  }
  return result;
}

void sub_24113CDFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_24113CE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2411397C8(a1, *(void *)(v2 + 16), a2);
}

void sub_24113CE80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_24113CEE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_24113CF38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24113CF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationHighlightsContent.HighlightDay();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for MedicationHighlightsContent.HighlightDay.CodingKeys()
{
  return &type metadata for MedicationHighlightsContent.HighlightDay.CodingKeys;
}

unsigned char *_s26MedicationsHealthAppPlugin27MedicationHighlightsContentV12HighlightDayV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24113D0C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationHighlightsContent.CodingKeys()
{
  return &type metadata for MedicationHighlightsContent.CodingKeys;
}

unint64_t sub_24113D104()
{
  unint64_t result = qword_268CF24C8;
  if (!qword_268CF24C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF24C8);
  }
  return result;
}

unint64_t sub_24113D15C()
{
  unint64_t result = qword_268CF24D0;
  if (!qword_268CF24D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF24D0);
  }
  return result;
}

unint64_t sub_24113D1B4()
{
  unint64_t result = qword_26B005018;
  if (!qword_26B005018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005018);
  }
  return result;
}

unint64_t sub_24113D20C()
{
  unint64_t result = qword_26B005010;
  if (!qword_26B005010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005010);
  }
  return result;
}

unint64_t sub_24113D264()
{
  unint64_t result = qword_26B005000;
  if (!qword_26B005000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005000);
  }
  return result;
}

unint64_t sub_24113D2BC()
{
  unint64_t result = qword_26B004FF8;
  if (!qword_26B004FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B004FF8);
  }
  return result;
}

uint64_t sub_24113D310(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465646461507369 && a2 == 0xEB00000000796144 || (sub_241161890() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000241169A00)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_241161890();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void *sub_24113D4D8(uint64_t a1, unint64_t a2)
{
  uint64_t v58 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_24115F790();
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v56 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_241160460();
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v48 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v49 = (char *)&v45 - v8;
  uint64_t v9 = (void *)swift_allocObject();
  long long v9[2] = 0;
  unint64_t v45 = v9 + 2;
  unint64_t v10 = self;
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  id v11 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__typeIdentifier);
  id v12 = objc_msgSend(v10, sel_predicateForUserDomainConceptsWithTypeIdentifier_, v11);

  uint64_t v13 = (void *)sub_2411606F0();
  id v14 = objc_msgSend(v10, sel_predicateForUserDomainConceptsWithSemanticIdentifier_, v13);

  sub_24104A2D8();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24116B210;
  *(void *)(v15 + 32) = v12;
  *(void *)(v15 + 40) = v14;
  aBlock[0] = v15;
  sub_2411609C0();
  sub_241024708(0, &qword_26B007318);
  id v54 = v12;
  id v53 = v14;
  uint64_t v16 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v16);

  dispatch_semaphore_t v18 = dispatch_semaphore_create(0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_24116B220;
  sub_241160730();
  id v20 = objc_allocWithZone(MEMORY[0x263F08B30]);
  id v21 = v17;
  uint64_t v22 = (void *)sub_2411606F0();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v20, sel_initWithKey_ascending_, v22, 1);

  *(void *)(v19 + 32) = v23;
  aBlock[0] = v19;
  sub_2411609C0();
  uint64_t v24 = (void *)swift_allocObject();
  void v24[2] = v58;
  void v24[3] = a2;
  v24[4] = v18;
  v24[5] = v9;
  v24[6] = ObjectType;
  id v25 = objc_allocWithZone(MEMORY[0x263F0A858]);
  sub_241024708(0, &qword_26B007328);
  unint64_t v55 = a2;
  swift_bridgeObjectRetain();
  uint64_t v26 = v18;
  swift_retain();
  char v27 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  aBlock[4] = (uint64_t)sub_24113DFFC;
  aBlock[5] = (uint64_t)v24;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_241013250;
  uint64_t aBlock[3] = (uint64_t)&unk_26F558388;
  id v28 = _Block_copy(aBlock);
  id v29 = objc_msgSend(v25, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, v21, 0, 1, v27, v28);

  _Block_release(v28);
  swift_release();
  objc_msgSend(v52, sel_executeQuery_, v29);
  char v30 = v48;
  sub_241160450();
  char v31 = v49;
  MEMORY[0x2456162E0](v30, 3.0);
  char v32 = *(void (**)(char *, uint64_t))(v50 + 8);
  char v33 = v30;
  uint64_t v34 = v51;
  v32(v33, v51);
  LOBYTE(v28) = sub_241161000();
  v32(v31, v34);
  if (v28)
  {
    id v52 = v9;
    sub_24115F770();
    swift_bridgeObjectRetain_n();
    uint64_t v37 = sub_24115F780();
    os_log_type_t v38 = sub_241160D30();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      aBlock[0] = v40;
      *(_DWORD *)uint64_t v39 = 136446466;
      uint64_t v41 = sub_241161A00();
      uint64_t v59 = sub_24101F0A4(v41, v42, aBlock);
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2082;
      unint64_t v43 = v55;
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_24101F0A4(v58, v43, aBlock);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_241007000, v37, v38, "[%{public}s] Timed out fetching concept for identifier: %{public}s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v40, -1, -1);
      MEMORY[0x2456180C0](v39, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v56, v47);
    swift_release();
    return 0;
  }
  else
  {

    swift_beginAccess();
    uint64_t v35 = (void *)v9[2];
    id v36 = v35;
    swift_release();
  }
  return v35;
}

uint64_t sub_24113DC20()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24113DC58(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = sub_24115F790();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 && (self, (uint64_t v18 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v19 = v18;
    swift_beginAccess();
    id v20 = *(void **)(a9 + 16);
    *(void *)(a9 + 16) = v19;
    id v21 = a2;

    sub_241161010();
  }
  else
  {
    sub_24115F770();
    swift_bridgeObjectRetain();
    id v22 = a5;
    swift_bridgeObjectRetain();
    id v23 = a5;
    uint64_t v24 = sub_24115F780();
    os_log_type_t v25 = sub_241160D30();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v35 = a6;
      uint64_t v27 = swift_slowAlloc();
      int v37 = v26;
      uint64_t v28 = v27;
      uint64_t v36 = swift_slowAlloc();
      v39[0] = v36;
      *(_DWORD *)uint64_t v28 = 136446722;
      uint64_t v29 = sub_241161A00();
      uint64_t v40 = sub_24101F0A4(v29, v30, v39);
      uint64_t v38 = a8;
      sub_241161430();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_24101F0A4(v35, a7, v39);
      sub_241161430();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 22) = 2082;
      uint64_t v40 = (uint64_t)a5;
      id v31 = a5;
      sub_241044718();
      uint64_t v32 = sub_241160760();
      uint64_t v40 = sub_24101F0A4(v32, v33, v39);
      sub_241161430();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_241007000, v24, (os_log_type_t)v37, "[%{public}s] Failed to fetch concept for identifier: %{public}s error: %{public}s", (uint8_t *)v28, 0x20u);
      uint64_t v34 = v36;
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v34, -1, -1);
      MEMORY[0x2456180C0](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    sub_241161010();
  }
}

uint64_t sub_24113DFB4()
{
  swift_bridgeObjectRelease();

  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_24113DFFC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_24113DC58(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40));
}

uint64_t sub_24113E02C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v82[2] = a2;
  unint64_t v99 = a3;
  sub_241023BF8(0, (unint64_t *)&qword_26B005B90, (uint64_t (*)(uint64_t))sub_24102F7E0, MEMORY[0x263EFDDF8]);
  uint64_t v97 = *(void *)(v4 - 8);
  uint64_t v98 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v96 = (char *)v82 - v5;
  uint64_t v91 = sub_24115D100();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v89 = (char *)v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24115D130();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v92 = (char *)v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_24115D1C0();
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v88 = (char *)v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_24115D1E0();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v93 = (char *)v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_24115F790();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  id v12 = (char *)v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241023BF8(0, &qword_26B0040F8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v82 - v14;
  uint64_t v16 = sub_24115D0A0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  int v109 = (char *)v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  id v22 = (char *)v82 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v104 = (char *)v82 - v24;
  MEMORY[0x270FA5388](v23);
  int v26 = (char *)v82 - v25;
  uint64_t v87 = a1;
  sub_24113FF30();
  uint64_t v28 = *(void *)(v27 + 16);
  id v100 = v12;
  if (v28)
  {
    uint64_t v110 = v17;
    uint64_t v29 = v17 + 16;
    unint64_t v30 = *(void (**)(void, void, void))(v17 + 16);
    unint64_t v31 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v82[1] = v27;
    unint64_t v102 = v31;
    uint64_t v32 = v27 + v31;
    uint64_t v33 = *(void *)(v29 + 56);
    uint64_t v106 = (void (**)(char *, uint64_t))(v29 - 8);
    uint64_t v107 = (void (**)(char *, void, uint64_t, uint64_t))(v29 + 40);
    unint64_t v105 = (unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 32);
    uint64_t v34 = (void (**)(char *, char *, uint64_t))(v29 + 16);
    uint64_t v108 = v22;
    unint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t v103 = v30;
    uint64_t v101 = v33;
    v30(v26, v27 + v31, v16);
    while (1)
    {
      v30(v15, v26, v16);
      (*v107)(v15, 0, 1, v16);
      (*v106)(v26, v16);
      if ((*v105)(v15, 1, v16) == 1)
      {
        sub_241140424((uint64_t)v15, &qword_26B0040F8, MEMORY[0x263F45630]);
      }
      else
      {
        uint64_t v36 = *v34;
        int v37 = v104;
        (*v34)(v104, v15, v16);
        v36(v108, v37, v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v35 = sub_2410530D4(0, *(void *)(v35 + 16) + 1, 1, v35);
        }
        unint64_t v39 = *(void *)(v35 + 16);
        unint64_t v38 = *(void *)(v35 + 24);
        uint64_t v40 = v35;
        if (v39 >= v38 >> 1) {
          uint64_t v40 = sub_2410530D4(v38 > 1, v39 + 1, 1, v35);
        }
        *(void *)(v40 + 16) = v39 + 1;
        unint64_t v35 = v40;
        uint64_t v41 = v40 + v102 + v39 * v101;
        uint64_t v33 = v101;
        v36((char *)v41, v108, v16);
        unint64_t v30 = v103;
      }
      v32 += v33;
      if (!--v28) {
        break;
      }
      v30(v26, v32, v16);
    }
    swift_bridgeObjectRelease();
    id v12 = v100;
    uint64_t v17 = v110;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v35 = MEMORY[0x263F8EE78];
  }
  int64_t v42 = *(void *)(v35 + 16);
  uint64_t v106 = (void (**)(char *, uint64_t))v35;
  if (v42)
  {
    v112[0] = MEMORY[0x263F8EE78];
    sub_24102A550(0, v42, 0);
    unint64_t v44 = *(char **)(v17 + 16);
    uint64_t v43 = v17 + 16;
    unint64_t v45 = v35 + ((*(unsigned __int8 *)(v43 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 64));
    uint64_t v107 = *(void (***)(char *, void, uint64_t, uint64_t))(v43 + 56);
    uint64_t v108 = v44;
    uint64_t v110 = v43;
    do
    {
      uint64_t v46 = v109;
      ((void (*)(char *, unint64_t, uint64_t))v108)(v109, v45, v16);
      uint64_t v47 = sub_24115CFD0();
      uint64_t v49 = v48;
      (*(void (**)(char *, uint64_t))(v43 - 8))(v46, v16);
      uint64_t v50 = v112[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24102A550(0, *(void *)(v50 + 16) + 1, 1);
        uint64_t v50 = v112[0];
      }
      unint64_t v52 = *(void *)(v50 + 16);
      unint64_t v51 = *(void *)(v50 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_24102A550(v51 > 1, v52 + 1, 1);
        uint64_t v50 = v112[0];
      }
      *(void *)(v50 + 16) = v52 + 1;
      uint64_t v53 = v50 + 16 * v52;
      *(void *)(v53 + 32) = v47;
      *(void *)(v53 + 40) = v49;
      v45 += (unint64_t)v107;
      --v42;
    }
    while (v42);
    id v12 = v100;
  }
  uint64_t v54 = swift_bridgeObjectRetain();
  uint64_t v55 = sub_241025580(v54);
  swift_bridgeObjectRelease();
  sub_24115F730();
  swift_bridgeObjectRetain();
  uint64_t v56 = sub_24115F780();
  os_log_type_t v57 = sub_241160D50();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    v112[0] = v59;
    *(_DWORD *)uint64_t v58 = 136446466;
    uint64_t v60 = sub_241161A00();
    uint64_t v62 = sub_24101F0A4(v60, v61, v112);
    uint64_t v110 = v55;
    uint64_t v111 = v62;
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2080;
    uint64_t v63 = swift_bridgeObjectRetain();
    uint64_t v64 = MEMORY[0x2456167F0](v63, MEMORY[0x263F8D310]);
    unint64_t v66 = v65;
    swift_bridgeObjectRelease();
    uint64_t v111 = sub_24101F0A4(v64, v66, v112);
    sub_241161430();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v56, v57, "[%{public}s] Creating feed items %s", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v59, -1, -1);
    MEMORY[0x2456180C0](v58, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v83 + 8))(v12, v84);
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v88, v87, v86);
  sub_24115D170();
  sub_241023BF8(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v67 = sub_24115CEB0();
  uint64_t v68 = *(void *)(v67 - 8);
  uint64_t v69 = *(void *)(v68 + 72);
  unint64_t v70 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  uint64_t v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = xmmword_24116B200;
  unint64_t v72 = v71 + v70;
  uint64_t v73 = *(void (**)(unint64_t, void, uint64_t))(v68 + 104);
  v73(v72, *MEMORY[0x263F45568], v67);
  v73(v72 + v69, *MEMORY[0x263F45560], v67);
  (*(void (**)(char *, void, uint64_t))(v90 + 104))(v89, *MEMORY[0x263F45688], v91);
  sub_24115D110();
  *(void *)(swift_allocObject() + 16) = v106;
  swift_bridgeObjectRetain();
  uint64_t v74 = v93;
  sub_24115D1D0();
  uint64_t v75 = v95;
  v112[3] = v95;
  v112[4] = MEMORY[0x263F456B8];
  uint64_t v76 = sub_2410277C0(v112);
  uint64_t v77 = v94;
  (*(void (**)(uint64_t *, char *, uint64_t))(v94 + 16))(v76, v74, v75);
  sub_24102F7E0();
  uint64_t v78 = v96;
  sub_24115FCC0();
  sub_24114039C();
  uint64_t v79 = v98;
  uint64_t v80 = sub_24115FE20();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v78, v79);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v74, v75);
  *unint64_t v99 = v80;
  return result;
}

uint64_t sub_24113ECA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = sub_24115E9F0();
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v17 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t (*)(uint64_t))MEMORY[0x263F07690];
  sub_241023BF8(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = sub_24115CEB0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_2411615F0();
  swift_bridgeObjectRelease();
  unint64_t v22 = 0xD00000000000001CLL;
  unint64_t v23 = 0x8000000241169AC0;
  sub_24115CEF0();
  sub_241160860();
  swift_bridgeObjectRelease();
  type metadata accessor for MedicationBrowseTileViewController();
  sub_24115CF30();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F45568], v8);
  id v12 = a1;
  sub_24115CFC0();
  uint64_t v13 = sub_24115CB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
  uint64_t v14 = v17;
  sub_24115E9E0();
  sub_24115EF20();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v21);
  sub_241140424((uint64_t)v7, (unint64_t *)&qword_26B007200, v19);
  return sub_24115CFB0();
}

uint64_t sub_24113EFF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = sub_24115F790();
  uint64_t v4 = *(void *)(v36 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v36);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v34 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = sub_24115DA30();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
LABEL_6:
    sub_24115F730();
    id v18 = a1;
    uint64_t v19 = sub_24115F780();
    os_log_type_t v20 = sub_241160D30();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v38 = v22;
      *(_DWORD *)uint64_t v21 = 136446466;
      uint64_t v35 = a2;
      uint64_t v37 = sub_24101F0A4(0x65466E6967756C50, 0xEE006D6574496465, &v38);
      sub_241161430();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v23 = sub_24115CEF0();
      uint64_t v37 = sub_24101F0A4(v23, v24, &v38);
      a2 = v35;
      sub_241161430();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v19, v20, "[%{public}s] Sidebar feed item is not supported for non-primary profile: %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v22, -1, -1);
      MEMORY[0x2456180C0](v21, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v36);
    goto LABEL_10;
  }
  id v15 = a1;
  if (objc_msgSend(v15, sel_type) != (id)1)
  {

    goto LABEL_6;
  }
  id v16 = objc_msgSend(self, sel_categoryWithID_, 31);
  if (v16)
  {
    uint64_t v17 = v16;
    type metadata accessor for MedicationsSidebarActionHandler(0);
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F43CA8], v11);
    sub_24100D364(&qword_26B004818, (void (*)(uint64_t))type metadata accessor for MedicationsSidebarActionHandler);
    sub_24115CF50();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

    uint64_t v32 = sub_24115D0A0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a2, 0, 1, v32);
  }
  sub_24115F730();
  int v26 = sub_24115F780();
  os_log_type_t v27 = sub_241160D30();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v38 = v29;
    *(_DWORD *)uint64_t v28 = 136446466;
    uint64_t v37 = sub_24101F0A4(0x65466E6967756C50, 0xEE006D6574496465, &v38);
    sub_241161430();
    *(_WORD *)(v28 + 12) = 2080;
    uint64_t v37 = 21;
    type metadata accessor for HKDisplayCategoryIdentifier(0);
    uint64_t v30 = sub_241160760();
    uint64_t v37 = sub_24101F0A4(v30, v31, &v38);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v26, v27, "[%{public}s] Unexpectedly found nil display category with id %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v29, -1, -1);
    MEMORY[0x2456180C0](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v36);
LABEL_10:
  uint64_t v25 = sub_24115D0A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a2, 1, 1, v25);
}

uint64_t sub_24113F7FC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin36MedicationsCategoryGeneratorPipeline_domain;
  uint64_t v2 = sub_24115D130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24113F8AC()
{
  return type metadata accessor for MedicationsCategoryGeneratorPipeline(0);
}

uint64_t type metadata accessor for MedicationsSidebarActionHandler(uint64_t a1)
{
  return sub_24102806C(a1, qword_26B004820);
}

uint64_t sub_24113F8D4()
{
  return swift_initClassMetadata2();
}

void sub_24113F914()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115E530();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24115F790();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F770();
  uint64_t v10 = sub_24115F780();
  os_log_type_t v11 = sub_241160D50();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v24 = v6;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v26 = v2;
    uint64_t v13 = (uint8_t *)v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = v14;
    uint64_t v25 = v3;
    *(_DWORD *)uint64_t v13 = 136446210;
    uint64_t v23 = v13 + 4;
    uint64_t v15 = sub_241161A00();
    uint64_t v27 = sub_24101F0A4(v15, v16, &v28);
    uint64_t v3 = v25;
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v10, v11, "[%{public}s] Navigating to Medications room from sidebar", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v14, -1, -1);
    uint64_t v17 = v13;
    uint64_t v2 = v26;
    MEMORY[0x2456180C0](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_24115E360();
  sub_24115E500();
  id v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v5, v2);
  uint64_t v19 = (void *)sub_24115DC80();
  swift_release();
  id v20 = objc_allocWithZone((Class)type metadata accessor for MedicationCategoryViewController());
  id v21 = MedicationCategoryViewController.init(healthStore:provenance:)(v19, 8);
  sub_24115E360();
  uint64_t v22 = (void *)sub_24115E520();
  v18(v5, v2);
  objc_msgSend(v22, sel_showDetailViewController_sender_, v21, v1);
}

uint64_t sub_24113FC68(uint64_t a1)
{
  uint64_t v2 = sub_24115E530();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_24115E370();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t sub_24113FD70()
{
  sub_24115E380();

  return swift_deallocClassInstance();
}

uint64_t sub_24113FDA0()
{
  return type metadata accessor for MedicationsSidebarActionHandler(0);
}

uint64_t sub_24113FDA8()
{
  return sub_24100D364(&qword_26B004818, (void (*)(uint64_t))type metadata accessor for MedicationsSidebarActionHandler);
}

uint64_t sub_24113FDF8()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24113FE94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24113E02C(v1 + v4, v5, a1);
}

void sub_24113FF30()
{
  sub_241023BF8(0, &qword_26B0040F8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v38 = (uint64_t)&v31 - v1;
  uint64_t v2 = sub_24115D0A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)&v31 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v31 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = (void *)sub_24115D170();
  sub_24113ECA0(v13, (uint64_t)v12);

  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v14(v10, v12, v2);
  unint64_t v15 = sub_2410530D4(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v17 = *(void *)(v15 + 16);
  unint64_t v16 = *(void *)(v15 + 24);
  uint64_t v35 = v14;
  if (v17 >= v16 >> 1) {
    unint64_t v15 = sub_2410530D4(v16 > 1, v17 + 1, 1, v15);
  }
  *(void *)(v15 + 16) = v17 + 1;
  id v18 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
  unint64_t v33 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v34 = v18;
  uint64_t v32 = *(void *)(v3 + 72);
  v18(v15 + v33 + v32 * v17, v10, v2);
  id v19 = objc_msgSend(self, sel_sharedBehavior);
  if (!v19)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v20 = v19;
  id v21 = objc_msgSend(v19, sel_features);

  if (!v21)
  {
LABEL_13:
    __break(1u);
    return;
  }
  unsigned int v22 = objc_msgSend(v21, sel_stanley);

  if (v22)
  {
    uint64_t v23 = (void *)sub_24115D170();
    uint64_t v24 = v38;
    sub_24113EFF0(v23, v38);

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v24, 1, v2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
      sub_241140424(v24, &qword_26B0040F8, MEMORY[0x263F45630]);
    }
    else
    {
      uint64_t v25 = v36;
      uint64_t v26 = v34;
      v34((unint64_t)v36, (char *)v24, v2);
      uint64_t v27 = v37;
      v35(v37, v25, v2);
      unint64_t v29 = *(void *)(v15 + 16);
      unint64_t v28 = *(void *)(v15 + 24);
      if (v29 >= v28 >> 1) {
        unint64_t v15 = sub_2410530D4(v28 > 1, v29 + 1, 1, v15);
      }
      *(void *)(v15 + 16) = v29 + 1;
      v26(v15 + v33 + v29 * v32, v27, v2);
      uint64_t v30 = *(void (**)(char *, uint64_t))(v3 + 8);
      v30(v25, v2);
      v30(v12, v2);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  }
}

uint64_t sub_24114035C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_241140394()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_24114039C()
{
  unint64_t result = qword_26B005B88;
  if (!qword_26B005B88)
  {
    sub_241023BF8(255, (unint64_t *)&qword_26B005B90, (uint64_t (*)(uint64_t))sub_24102F7E0, MEMORY[0x263EFDDF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005B88);
  }
  return result;
}

uint64_t sub_241140424(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241023BF8(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_241140494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v84 = a4;
  uint64_t v76 = a2;
  uint64_t v78 = a1;
  uint64_t v82 = *v4;
  sub_241143C48();
  Class isa = v6[-1].isa;
  os_log_t v81 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v79 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241143AB8(0, &qword_26B003F10, 255, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v75 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v74 = (char *)&v71 - v12;
  uint64_t v83 = sub_24115F790();
  uint64_t v85 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  unint64_t v86 = (unint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v73 = (char *)&v71 - v15;
  unint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F445F8];
  sub_241143AB8(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], v8);
  MEMORY[0x270FA5388](v17 - 8);
  id v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  unsigned int v22 = (char *)&v71 - v21;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v71 - v24;
  sub_241145480(a3, (uint64_t)&v71 - v24, &qword_26B003F20, v16);
  uint64_t v26 = sub_24115E530();
  uint64_t v27 = *(void *)(v26 - 8);
  unint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v28(v25, 1, v26) == 1)
  {
    sub_241145500((uint64_t)v25, &qword_26B003F20, MEMORY[0x263F445F8]);
  }
  else
  {
    uint64_t v29 = sub_24115E510();
    uint64_t v30 = v25;
    unint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
    if (v32 >> 60 != 15)
    {
      uint64_t v72 = sub_2410E290C();
      if (v72)
      {
        unint64_t v86 = v32;
        uint64_t v33 = v29;
        uint64_t v34 = v73;
        sub_24115F740();
        uint64_t v35 = v72;
        swift_bridgeObjectRetain_n();
        uint64_t v36 = sub_24115F780();
        os_log_type_t v37 = sub_241160D50();
        if (os_log_type_enabled(v36, v37))
        {
          uint64_t v38 = swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          v87[0] = v39;
          *(_DWORD *)uint64_t v38 = 136315394;
          uint64_t v40 = sub_241161A00();
          uint64_t v88 = (char *)sub_24101F0A4(v40, v41, v87);
          sub_241161430();
          swift_bridgeObjectRelease();
          *(_WORD *)(v38 + 12) = 2080;
          uint64_t v88 = (char *)v72;
          swift_bridgeObjectRetain();
          uint64_t v42 = sub_241160760();
          uint64_t v88 = (char *)sub_24101F0A4(v42, v43, v87);
          uint64_t v35 = v72;
          sub_241161430();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_241007000, v36, v37, "[%s]: Received updated user data: %s", (uint8_t *)v38, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2456180C0](v39, -1, -1);
          MEMORY[0x2456180C0](v38, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v85 + 8))(v34, v83);
        unint64_t v61 = v84;
        uint64_t v62 = (uint64_t)v74;
        sub_24115DC90();
        uint64_t v63 = sub_24115D990();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 0, 1, v63);
        uint64_t v64 = v75;
        sub_241143D1C(v62, v75);
        uint64_t v65 = v77
            + OBJC_IVAR____TtC26MedicationsHealthAppPlugin46MedicationsLoggingSummaryConfigurationProvider_presentationContext;
        swift_beginAccess();
        sub_2411455E0(v64, v65, &qword_26B003F10, MEMORY[0x263F43C08]);
        swift_endAccess();
        sub_241143AB8(0, &qword_268CF24F0, v66, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView.Model, MEMORY[0x263F43CB8]);
        sub_24115DA40();
        *(void *)(v87[0] + 16) = v35;
        swift_bridgeObjectRelease();
        type metadata accessor for MedicationsLoggingSummaryView(0);
        sub_241145710(&qword_26B003F80, 255, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView);
        uint64_t v67 = v79;
        sub_2411601A0();
        id v68 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
        v87[0] = MEMORY[0x245616160](v68);
        sub_241143DBC();
        v61[3] = v69;
        v61[4] = sub_241145710(&qword_268CF2510, 255, (void (*)(uint64_t))sub_241143DBC);
        sub_2410277C0(v61);
        os_log_t v70 = v81;
        sub_241160190();
        sub_2410230DC(v33, v86);
        swift_release();
        swift_release();
        return (*((uint64_t (**)(char *, os_log_t))isa + 1))(v67, v70);
      }
      sub_2410230DC(v29, v32);
    }
  }
  unint64_t v44 = v86;
  sub_24115F740();
  sub_241145480(a3, (uint64_t)v22, &qword_26B003F20, MEMORY[0x263F445F8]);
  unint64_t v45 = sub_24115F780();
  int v46 = sub_241160D30();
  if (os_log_type_enabled(v45, (os_log_type_t)v46))
  {
    LODWORD(isa) = v46;
    os_log_t v81 = v45;
    uint64_t v47 = swift_slowAlloc();
    uint64_t v79 = (char *)swift_slowAlloc();
    uint64_t v88 = v79;
    *(_DWORD *)uint64_t v47 = 136315394;
    uint64_t v48 = sub_241161A00();
    v87[0] = sub_24101F0A4(v48, v49, (uint64_t *)&v88);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    sub_241145480((uint64_t)v22, (uint64_t)v19, &qword_26B003F20, MEMORY[0x263F445F8]);
    if (v28(v19, 1, v26) == 1)
    {
      sub_241145500((uint64_t)v19, &qword_26B003F20, MEMORY[0x263F445F8]);
      uint64_t v50 = 0;
      uint64_t v51 = 0xF000000000000000;
    }
    else
    {
      uint64_t v50 = sub_24115E510();
      uint64_t v51 = v53;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v26);
    }
    unint64_t v52 = v84;
    uint64_t v54 = v83;
    v87[0] = v50;
    v87[1] = v51;
    sub_24114503C(0, &qword_26B0040E0, MEMORY[0x263F06F78], MEMORY[0x263F8D8F0]);
    uint64_t v55 = sub_241160760();
    v87[0] = sub_24101F0A4(v55, v56, (uint64_t *)&v88);
    sub_241161430();
    swift_bridgeObjectRelease();
    sub_241145500((uint64_t)v22, &qword_26B003F20, MEMORY[0x263F445F8]);
    os_log_t v57 = v81;
    _os_log_impl(&dword_241007000, v81, (os_log_type_t)isa, "[%s]: Could not read user data from context: %s", (uint8_t *)v47, 0x16u);
    uint64_t v58 = v79;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v58, -1, -1);
    MEMORY[0x2456180C0](v47, -1, -1);

    (*(void (**)(unint64_t, uint64_t))(v85 + 8))(v86, v54);
  }
  else
  {
    sub_241145500((uint64_t)v22, &qword_26B003F20, MEMORY[0x263F445F8]);

    (*(void (**)(unint64_t, uint64_t))(v85 + 8))(v44, v83);
    unint64_t v52 = v84;
  }
  sub_2410A1D14();
  v52[3] = v59;
  v52[4] = sub_241145710(&qword_268CF1348, 255, (void (*)(uint64_t))sub_2410A1D14);
  sub_2410277C0(v52);
  return sub_2411601A0();
}

uint64_t sub_241140FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24115E530();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  uint64_t v5 = type metadata accessor for MedicationsLoggingSummaryView(0);
  uint64_t v6 = (uint64_t *)(a2 + *(int *)(v5 + 20));
  uint64_t v9 = sub_241160730();
  uint64_t v10 = v7;
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_retain();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = v9;
  v6[1] = v10;
  *(void *)(a2 + *(int *)(v5 + 24)) = a1;
  return result;
}

uint64_t sub_2411410DC()
{
  swift_unknownObjectRelease();
  sub_241145500(v0+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin46MedicationsLoggingSummaryConfigurationProvider_presentationContext, &qword_26B003F10, MEMORY[0x263F43C08]);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_241141178()
{
  return type metadata accessor for MedicationsLoggingSummaryConfigurationProvider(0);
}

uint64_t type metadata accessor for MedicationsLoggingSummaryConfigurationProvider(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B003890);
}

void sub_2411411A0()
{
  sub_241143AB8(319, &qword_26B003F10, 255, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for MedicationsLoggingSummaryView.MedicationsLoggingSummaryViewActionHandler(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B003F28);
}

uint64_t sub_241141290()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2411412D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  return sub_241140494(a1, a2, a3, a4);
}

uint64_t sub_2411412EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for MedicationsLoggingSummaryConfigurationProvider(0);

  return MEMORY[0x270F33F70](a1, v5, a3);
}

uint64_t (*sub_24114133C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_241141390()
{
  uint64_t v1 = (uint64_t *)(*v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin46MedicationsLoggingSummaryConfigurationProvider_baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2411413EC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin46MedicationsLoggingSummaryConfigurationProvider_baseIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_241141450())()
{
  return j__swift_endAccess;
}

void sub_2411414B0(uint64_t a1, void *a2)
{
}

uint64_t sub_2411414D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24115E530();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  uint64_t v5 = type metadata accessor for MedicationsLoggingSummaryView(0);
  uint64_t v6 = (uint64_t *)(a2 + *(int *)(v5 + 20));
  uint64_t v12 = sub_241160730();
  uint64_t v13 = v7;
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  *uint64_t v6 = v12;
  v6[1] = v13;
  sub_241143AB8(0, &qword_268CF24F0, v8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView.Model, MEMORY[0x263F43CB8]);
  uint64_t v10 = v9;
  sub_24115DA40();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
  *(void *)(a2 + *(int *)(v5 + 24)) = v12;
  return result;
}

void sub_24114163C()
{
  uint64_t v0 = sub_24115E530();
  uint64_t v23 = v0;
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = sub_24115D990();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v22 - v12;
  sub_24115E360();
  sub_24115E500();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14(v6, v0);
  sub_24115DC90();
  swift_release();
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F43BA0], v7);
  LOBYTE(v6) = sub_24115D980();
  unint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v24 = v7;
  v16(v10, v7);
  if (v6) {
    uint64_t v17 = 2;
  }
  else {
    uint64_t v17 = 3;
  }
  id v18 = objc_allocWithZone((Class)type metadata accessor for MedicationCategoryViewController());
  id v19 = MedicationCategoryViewController.init(healthStore:provenance:)(v15, v17);
  sub_24115E360();
  uint64_t v20 = (void *)sub_24115E520();
  v14(v3, v23);
  id v21 = objc_msgSend(v20, sel_navigationController);

  if (v21)
  {
    objc_msgSend(v21, sel_pushViewController_animated_, v19, 1);

    v16(v13, v24);
  }
  else
  {
    v16(v13, v24);
  }
}

uint64_t sub_241141934(uint64_t a1)
{
  uint64_t v2 = sub_24115E530();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_24115E370();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t sub_241141A3C()
{
  return type metadata accessor for MedicationsLoggingSummaryView.MedicationsLoggingSummaryViewActionHandler(0);
}

uint64_t sub_241141A48()
{
  uint64_t v1 = type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent() - 8;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v21 = *(void *)(v0 + 16);
  uint64_t v22 = v0;
  uint64_t v7 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v8 = *(void *)(v2 + 72);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  do
  {
    sub_2411453B8(v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent);
    uint64_t v11 = sub_2410E1328();
    uint64_t v13 = v12;
    sub_241145420((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent);
    if (v13)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_241051F68(0, v9[2] + 1, 1, v9);
      }
      unint64_t v15 = v9[2];
      unint64_t v14 = v9[3];
      if (v15 >= v14 >> 1) {
        uint64_t v9 = sub_241051F68((void *)(v14 > 1), v15 + 1, 1, v9);
      }
      long long v9[2] = v15 + 1;
      uint64_t v10 = &v9[2 * v15];
      void v10[4] = v11;
      v10[5] = v13;
    }
    v7 += v8;
    --v6;
  }
  while (v6);
  swift_bridgeObjectRelease();
  if (*(void *)(*(void *)(v22 + 16) + 16))
  {
    unint64_t v16 = self;
    uint64_t v17 = (void *)sub_241160980();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v16, sel_localizedStringByJoiningStrings_, v17);

    uint64_t v19 = sub_241160730();
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    if (qword_26B007268 != -1) {
      swift_once();
    }
    return sub_24115C960();
  }
  return v19;
}

uint64_t sub_241141D0C(uint64_t a1)
{
  unint64_t v2 = sub_241143A64();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_241141D48(uint64_t a1)
{
  unint64_t v2 = sub_241143A64();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_241141D84()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationsLoggingSummaryView.Model()
{
  return self;
}

uint64_t sub_241141DE0(void *a1)
{
  uint64_t v2 = v1;
  sub_241143B1C(0, &qword_26B0040D0, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v10 - v7;
  sub_24101A6BC(a1, a1[3]);
  sub_241143A64();
  sub_2411619D0();
  v10[1] = *(void *)(v2 + 16);
  sub_241143AB8(0, &qword_26B005CE8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent, MEMORY[0x263F8D488]);
  sub_241143B80(&qword_26B005CF0, &qword_26B004870);
  sub_241161820();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_241141FB0(void *a1)
{
  sub_241143B1C(0, &qword_268CF24E0, MEMORY[0x263F8E040]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v10 - v7;
  sub_24101A6BC(a1, a1[3]);
  sub_241143A64();
  sub_2411619C0();
  if (v2)
  {
    type metadata accessor for MedicationsLoggingSummaryView.Model();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_241143AB8(0, &qword_26B005CE8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent, MEMORY[0x263F8D488]);
    sub_241143B80(&qword_268CF1C10, &qword_268CF1C18);
    sub_2411617C0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v1 + 16) = v10[1];
  }
  sub_24101F178((uint64_t)a1);
  return v1;
}

uint64_t sub_2411421D8()
{
  return sub_24115DE10();
}

uint64_t sub_241142250()
{
  return sub_24115DE00();
}

uint64_t sub_2411422A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for MedicationsLoggingSummaryView.Model();
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_241141FB0(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_2411422F8(void *a1)
{
  return sub_241141DE0(a1);
}

uint64_t sub_24114231C(uint64_t a1, uint64_t a2)
{
  return sub_241145710(&qword_26B003F50, a2, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView.Model);
}

uint64_t sub_241142364(uint64_t a1, uint64_t a2)
{
  return sub_241145710(&qword_26B003F60, a2, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView.Model);
}

uint64_t sub_2411423AC(uint64_t a1, uint64_t a2)
{
  return sub_241145710(&qword_26B003F58, a2, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView.Model);
}

uint64_t sub_2411423F4()
{
  return sub_241145710(&qword_268CF24D8, 255, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView.MedicationsLoggingSummaryViewActionHandler);
}

uint64_t sub_241142440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_241144E20();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241145114();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_241160140();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  sub_241145174();
  sub_241142674(v2, (uint64_t)&v6[*(int *)(v11 + 44)]);
  sub_24115CE20();
  sub_2411603E0();
  sub_241160030();
  sub_2411453B8((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))sub_241144E20);
  uint64_t v12 = &v10[*(int *)(v8 + 36)];
  long long v13 = v17[6];
  *((_OWORD *)v12 + 4) = v17[5];
  *((_OWORD *)v12 + 5) = v13;
  *((_OWORD *)v12 + 6) = v17[7];
  long long v14 = v17[2];
  *(_OWORD *)uint64_t v12 = v17[1];
  *((_OWORD *)v12 + 1) = v14;
  long long v15 = v17[4];
  *((_OWORD *)v12 + 2) = v17[3];
  *((_OWORD *)v12 + 3) = v15;
  sub_241145420((uint64_t)v6, (uint64_t (*)(void))sub_241144E20);
  return sub_241145350((uint64_t)v10, a1, (uint64_t (*)(void))sub_241145114);
}

uint64_t sub_241142674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v109 = a2;
  uint64_t v110 = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241143AB8(0, &qword_268CF2560, 255, MEMORY[0x263F1A620], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v102 = (char *)v95 - v4;
  uint64_t v103 = sub_241160280();
  uint64_t v101 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  id v100 = (char *)v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241144F78(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v108 = (uint64_t)v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v106 = (char *)v95 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v107 = (uint64_t)v95 - v11;
  uint64_t v12 = sub_24115E070();
  uint64_t v99 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v98 = (char *)v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241143AB8(0, (unint64_t *)&qword_26B007240, 255, MEMORY[0x263F07490], v2);
  MEMORY[0x270FA5388](v14 - 8);
  unint64_t v16 = (char *)v95 - v15;
  sub_241143AB8(0, &qword_268CF12F0, 255, MEMORY[0x263F43F20], v2);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v97 = (uint64_t)v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v95 - v20;
  sub_241145210(0, &qword_268CF2568, MEMORY[0x263F44210], MEMORY[0x263F43B88], MEMORY[0x263F19B20]);
  uint64_t v23 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v95 - v24;
  uint64_t v26 = sub_24115D950();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)v95 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241144F30(0);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v105 = (uint64_t)v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)v95 - v33;
  id v35 = objc_msgSend(self, sel_displayTypeWithIdentifier_, 273);
  uint64_t v104 = v34;
  if (v35)
  {
    uint64_t v36 = v35;
    v95[1] = v23;
    v95[2] = v26;
    uint64_t v96 = v12;
    type metadata accessor for MedicationsLoggingSummaryView(0);
    uint64_t v37 = swift_bridgeObjectRetain();
    sub_2410E0C08(v37, (uint64_t)v16);
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_24115CB10();
    uint64_t v39 = *(void *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v16, 1, v38) == 1)
    {
      sub_241145500((uint64_t)v16, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
      uint64_t v40 = sub_24115DCE0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v21, 1, 1, v40);
    }
    else
    {
      sub_241145578();
      uint64_t v42 = *(int *)(v41 + 48);
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v21, v16, v38);
      v21[v42] = 1;
      uint64_t v43 = *MEMORY[0x263F43F18];
      uint64_t v44 = sub_24115DCE0();
      uint64_t v45 = *(void *)(v44 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 104))(v21, v43, v44);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v21, 0, 1, v44);
    }
    sub_24115E050();
    int v46 = (uint64_t (*)(uint64_t))MEMORY[0x263F43F20];
    sub_241145480((uint64_t)v21, v97, &qword_268CF12F0, MEMORY[0x263F43F20]);
    id v47 = v36;
    sub_24115E030();
    uint64_t v48 = v98;
    sub_24115E060();
    uint64_t v49 = v99;
    uint64_t v50 = v96;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v25, v48, v96);
    swift_storeEnumTagMultiPayload();
    sub_241145710(&qword_268CF2570, 255, MEMORY[0x263F44210]);
    sub_241145710(&qword_268CF2578, 255, MEMORY[0x263F43B88]);
    sub_241160170();

    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v50);
    sub_241145500((uint64_t)v21, &qword_268CF12F0, v46);
  }
  else
  {
    sub_24115D960();
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v25, v29, v26);
    swift_storeEnumTagMultiPayload();
    sub_241145710(&qword_268CF2570, 255, MEMORY[0x263F44210]);
    sub_241145710(&qword_268CF2578, 255, MEMORY[0x263F43B88]);
    sub_241160170();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  }
  uint64_t v51 = v103;
  uint64_t v103 = type metadata accessor for MedicationsLoggingSummaryView(0);
  uint64_t v99 = *(int *)(v103 + 24);
  uint64_t v52 = *(void *)(v110 + v99);
  uint64_t v113 = sub_241141A48();
  uint64_t v114 = v53;
  sub_24108741C();
  uint64_t v54 = sub_2411602D0();
  uint64_t v56 = v55;
  uint64_t v98 = v57;
  char v59 = v58 & 1;
  uint64_t v60 = v101;
  if (*(void *)(*(void *)(v52 + 16) + 16)) {
    unint64_t v61 = (unsigned int *)MEMORY[0x263F1A6F8];
  }
  else {
    unint64_t v61 = (unsigned int *)MEMORY[0x263F1A6F0];
  }
  uint64_t v62 = v100;
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v100, *v61, v51);
  uint64_t v63 = *MEMORY[0x263F1A610];
  uint64_t v64 = sub_241160240();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = (uint64_t)v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 104))(v102, v63, v64);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v66, 0, 1, v64);
  sub_241160260();
  sub_241145500(v66, &qword_268CF2560, MEMORY[0x263F1A620]);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v51);
  sub_241160250();
  sub_241160270();
  swift_release();
  uint64_t v67 = sub_2411602B0();
  uint64_t v69 = v68;
  char v71 = v70;
  swift_release();
  uint64_t v72 = v54;
  uint64_t v73 = v110;
  sub_24109C2A0(v72, v56, v59);
  swift_bridgeObjectRelease();
  if (*(void *)(*(void *)(*(void *)(v73 + v99) + 16) + 16)) {
    sub_241160350();
  }
  else {
    sub_241160360();
  }
  char v74 = v71 & 1;
  uint64_t v75 = sub_2411602A0();
  uint64_t v77 = v76;
  char v79 = v78;
  os_log_t v81 = v80;
  unint64_t v102 = v80;
  swift_release();
  v79 &= 1u;
  sub_24109C2A0(v67, v69, v74);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v83 = swift_getKeyPath();
  uint64_t v113 = v75;
  uint64_t v114 = v77;
  char v115 = v79;
  uint64_t v116 = v81;
  uint64_t v117 = KeyPath;
  char v118 = 0;
  uint64_t v119 = v83;
  uint64_t v120 = 3;
  char v121 = 0;
  uint64_t v84 = (uint64_t *)(v73 + *(int *)(v103 + 20));
  uint64_t v85 = v84[1];
  uint64_t v111 = *v84;
  uint64_t v112 = v85;
  swift_bridgeObjectRetain();
  sub_241160860();
  sub_24109BCA0();
  sub_2411452A4();
  uint64_t v86 = (uint64_t)v106;
  sub_241160310();
  swift_bridgeObjectRelease();
  sub_24109C2A0(v75, v77, v79);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v87 = v107;
  sub_241145350(v86, v107, (uint64_t (*)(void))sub_241144F78);
  uint64_t v89 = (uint64_t)v104;
  uint64_t v88 = v105;
  sub_2411453B8((uint64_t)v104, v105, (uint64_t (*)(void))sub_241144F30);
  uint64_t v90 = v108;
  sub_2411453B8(v87, v108, (uint64_t (*)(void))sub_241144F78);
  uint64_t v91 = v109;
  sub_2411453B8(v88, v109, (uint64_t (*)(void))sub_241144F30);
  sub_241144EB8();
  uint64_t v93 = v91 + *(int *)(v92 + 48);
  *(void *)uint64_t v93 = 0x4037000000000000;
  *(unsigned char *)(v93 + 8) = 0;
  sub_2411453B8(v90, v91 + *(int *)(v92 + 64), (uint64_t (*)(void))sub_241144F78);
  sub_241145420(v87, (uint64_t (*)(void))sub_241144F78);
  sub_241145420(v89, (uint64_t (*)(void))sub_241144F30);
  sub_241145420(v90, (uint64_t (*)(void))sub_241144F78);
  return sub_241145420(v88, (uint64_t (*)(void))sub_241144F30);
}

uint64_t sub_241143410@<X0>(uint64_t a1@<X8>)
{
  return sub_241145480(v1, a1, &qword_26B003F20, MEMORY[0x263F445F8]);
}

uint64_t sub_24114344C(uint64_t a1)
{
  return sub_2411455E0(a1, v1, &qword_26B003F20, MEMORY[0x263F445F8]);
}

void sub_241143488(void *a1)
{
  id v30 = a1;
  uint64_t v2 = sub_24115D990();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v28 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24109B934();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F43C08];
  sub_241143AB8(0, &qword_26B003F10, 255, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v28 - v14;
  id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
  uint64_t v16 = v1
      + OBJC_IVAR____TtC26MedicationsHealthAppPlugin46MedicationsLoggingSummaryConfigurationProvider_presentationContext;
  swift_beginAccess();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v15, *MEMORY[0x263F43BA0], v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  uint64_t v17 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_241145480(v16, (uint64_t)v8, &qword_26B003F10, v9);
  sub_241145480((uint64_t)v15, v17, &qword_26B003F10, v9);
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v18((uint64_t)v8, 1, v2) == 1)
  {
    sub_241145500((uint64_t)v15, &qword_26B003F10, MEMORY[0x263F43C08]);
    if (v18(v17, 1, v2) == 1)
    {
      sub_241145500((uint64_t)v8, &qword_26B003F10, MEMORY[0x263F43C08]);
LABEL_8:
      uint64_t v23 = 2;
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  sub_241145480((uint64_t)v8, (uint64_t)v12, &qword_26B003F10, MEMORY[0x263F43C08]);
  if (v18(v17, 1, v2) == 1)
  {
    sub_241145500((uint64_t)v15, &qword_26B003F10, MEMORY[0x263F43C08]);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
LABEL_6:
    sub_241145420((uint64_t)v8, (uint64_t (*)(void))sub_24109B934);
    goto LABEL_9;
  }
  uint64_t v19 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v28, v17, v2);
  sub_241145710(&qword_268CF11D0, 255, MEMORY[0x263F43C08]);
  char v20 = sub_2411606E0();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v3 + 8);
  v21(v19, v2);
  uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F43C08];
  sub_241145500((uint64_t)v15, &qword_26B003F10, MEMORY[0x263F43C08]);
  v21(v12, v2);
  sub_241145500((uint64_t)v8, &qword_26B003F10, v22);
  if (v20) {
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v23 = 3;
LABEL_10:
  id v24 = objc_allocWithZone((Class)type metadata accessor for MedicationCategoryViewController());
  id v25 = MedicationCategoryViewController.init(healthStore:provenance:)(v29, v23);
  id v26 = objc_msgSend(v30, sel_navigationController);
  if (v26)
  {
    uint64_t v27 = v26;
    objc_msgSend(v26, sel_pushViewController_animated_, v25, 1);
  }
}

uint64_t sub_241143970()
{
  type metadata accessor for MedicationsLoggingSummaryConfigurationProvider(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  uint64_t v1 = v0
     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin46MedicationsLoggingSummaryConfigurationProvider_presentationContext;
  uint64_t v2 = sub_24115D990();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin46MedicationsLoggingSummaryConfigurationProvider_baseIdentifier);
  uint64_t v6 = sub_241160730();
  uint64_t v7 = v4;
  swift_bridgeObjectRetain();
  sub_241160860();
  swift_bridgeObjectRelease();
  *uint64_t v3 = v6;
  v3[1] = v7;
  return v0;
}

unint64_t sub_241143A64()
{
  unint64_t result = qword_26B003F38;
  if (!qword_26B003F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B003F38);
  }
  return result;
}

void sub_241143AB8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_241143B1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_241143A64();
    unint64_t v7 = a3(a1, &type metadata for MedicationsLoggingSummaryView.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_241143B80(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_241143AB8(255, &qword_26B005CE8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent, MEMORY[0x263F8D488]);
    sub_241145710(a2, 255, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryContent.LoggingEvent);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241143C48()
{
  if (!qword_268CF24E8)
  {
    type metadata accessor for MedicationsLoggingSummaryView(255);
    sub_241145710(&qword_26B003F80, 255, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView);
    unint64_t v0 = sub_2411601B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF24E8);
    }
  }
}

uint64_t type metadata accessor for MedicationsLoggingSummaryView(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B003F88);
}

uint64_t sub_241143D1C(uint64_t a1, uint64_t a2)
{
  sub_241143AB8(0, &qword_26B003F10, 255, MEMORY[0x263F43C08], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_241143DB4@<X0>(uint64_t a1@<X8>)
{
  return sub_241140FE4(v1, a1);
}

void sub_241143DBC()
{
  if (!qword_268CF24F8)
  {
    type metadata accessor for MedicationsLoggingSummaryView(255);
    sub_241143EB0();
    sub_241145710(&qword_26B003F80, 255, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView);
    sub_241145710(&qword_268CF2508, 255, (void (*)(uint64_t))sub_241143EB0);
    unint64_t v0 = sub_2411601B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF24F8);
    }
  }
}

void sub_241143EB0()
{
  if (!qword_268CF2500)
  {
    unint64_t v0 = sub_2411601D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2500);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for MedicationsLoggingSummaryView.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x241143FACLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationsLoggingSummaryView.Model.CodingKeys()
{
  return &type metadata for MedicationsLoggingSummaryView.Model.CodingKeys;
}

char *sub_241143FE4(char *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    unsigned int v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_24115E530();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_241143AB8(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = &v4[v11];
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *(void *)uint64_t v13 = *v14;
    *((void *)v13 + 1) = v15;
    *(void *)&v4[v12] = *(uint64_t *)((char *)a2 + v12);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2411441A4(uint64_t a1)
{
  uint64_t v2 = sub_24115E530();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

char *sub_241144280(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24115E530();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241143AB8(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  *(void *)&a1[v10] = *(void *)&a2[v10];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

char *sub_2411443F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24115E530();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241143AB8(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_2411445EC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24115E530();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_241143AB8(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  return a1;
}

char *sub_24114474C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_24115E530();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_241143AB8(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_24114492C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_241144940);
}

uint64_t sub_241144940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_241143AB8(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_241144A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_241144A4C);
}

void sub_241144A4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_241143AB8(0, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

void sub_241144B40()
{
  sub_241143AB8(319, &qword_26B003F20, 255, MEMORY[0x263F445F8], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_241144C18()
{
  return sub_241145710(&qword_26B003F80, 255, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView);
}

unint64_t sub_241144C68()
{
  unint64_t result = qword_268CF2518;
  if (!qword_268CF2518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF2518);
  }
  return result;
}

uint64_t sub_241144CBC()
{
  return sub_241145710(&qword_26B003F78, 255, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView);
}

uint64_t sub_241144D08()
{
  return sub_241145710(&qword_26B003F68, 255, (void (*)(uint64_t))type metadata accessor for MedicationsLoggingSummaryView);
}

uint64_t sub_241144D54(uint64_t a1)
{
  return MEMORY[0x270FA03F0](a1, &unk_2411751DC, 1);
}

unint64_t sub_241144D74()
{
  unint64_t result = qword_26B003F48;
  if (!qword_26B003F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B003F48);
  }
  return result;
}

unint64_t sub_241144DCC()
{
  unint64_t result = qword_26B003F40;
  if (!qword_26B003F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B003F40);
  }
  return result;
}

void sub_241144E20()
{
  if (!qword_268CF2520)
  {
    sub_241143AB8(255, &qword_268CF2528, 255, (uint64_t (*)(uint64_t))sub_241144EB8, MEMORY[0x263F1BAC8]);
    sub_241145088();
    unint64_t v0 = sub_241160380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2520);
    }
  }
}

void sub_241144EB8()
{
  if (!qword_268CF2530)
  {
    sub_241144F30(255);
    sub_241144F78(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_268CF2530);
    }
  }
}

void sub_241144F30(uint64_t a1)
{
}

void sub_241144F78(uint64_t a1)
{
}

void sub_241144FC0()
{
  if (!qword_268CF1218)
  {
    sub_24114503C(255, &qword_268CF1220, MEMORY[0x263F8D6C8], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_2411601C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF1218);
    }
  }
}

void sub_24114503C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_241145088()
{
  unint64_t result = qword_268CF2548;
  if (!qword_268CF2548)
  {
    sub_241143AB8(255, &qword_268CF2528, 255, (uint64_t (*)(uint64_t))sub_241144EB8, MEMORY[0x263F1BAC8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF2548);
  }
  return result;
}

void sub_241145114()
{
  if (!qword_268CF2550)
  {
    sub_241144E20();
    unint64_t v0 = sub_241160000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2550);
    }
  }
}

void sub_241145174()
{
  if (!qword_268CF2558)
  {
    sub_241143AB8(255, &qword_268CF2528, 255, (uint64_t (*)(uint64_t))sub_241144EB8, MEMORY[0x263F1BAC8]);
    unint64_t v0 = sub_24115FFF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2558);
    }
  }
}

void sub_241145210(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

unint64_t sub_2411452A4()
{
  unint64_t result = qword_268CF13E8;
  if (!qword_268CF13E8)
  {
    sub_24109BCA0();
    sub_2410A435C();
    sub_241145710((unint64_t *)&qword_268CF1400, 255, (void (*)(uint64_t))sub_241144FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF13E8);
  }
  return result;
}

uint64_t sub_241145350(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2411453B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_241145420(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_241145480(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241143AB8(0, a3, 255, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_241145500(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241143AB8(0, a2, 255, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_241145578()
{
  if (!qword_268CF2580)
  {
    sub_24115CB10();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_268CF2580);
    }
  }
}

uint64_t sub_2411455E0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241143AB8(0, a3, 255, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

unint64_t sub_241145664()
{
  unint64_t result = qword_268CF2588;
  if (!qword_268CF2588)
  {
    sub_241145114();
    sub_241145710(&qword_268CF2590, 255, (void (*)(uint64_t))sub_241144E20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF2588);
  }
  return result;
}

uint64_t sub_241145710(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241145758(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (objc_class *)type metadata accessor for InteractiveTimelineCollectionViewLayoutAttributes();
  v18.receiver = v2;
  v18.super_class = v5;
  objc_msgSendSuper2(&v18, sel_copyWithZone_, a1);
  sub_2411614D0();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  uint64_t v6 = &v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration];
  uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                    + 48];
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                   + 56];
  uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                    + 80];
  uint64_t v10 = *(void *)&v2[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                     + 88];
  uint64_t v11 = v17
      + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration;
  uint64_t v12 = *(void **)(v17
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                 + 56);
  long long v13 = *((_OWORD *)v6 + 1);
  long long v14 = *((_OWORD *)v6 + 2);
  long long v15 = *((_OWORD *)v6 + 4);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v6;
  *(_OWORD *)(v11 + 16) = v13;
  *(_OWORD *)(v11 + 32) = v14;
  *(void *)(v11 + 48) = v7;
  *(void *)(v11 + 56) = v8;
  *(_OWORD *)(v11 + 64) = v15;
  *(void *)(v11 + 80) = v9;
  *(void *)(v11 + 88) = v10;
  id v16 = v8;

  a2[3] = v5;
  *a2 = v17;
}

id sub_2411458A8(uint64_t a1)
{
  sub_24104D4C8(a1, (uint64_t)&v27);
  if (!*((void *)&v28 + 1))
  {
    sub_24104D52C((uint64_t)&v27);
    return 0;
  }
  uint64_t v3 = (objc_class *)type metadata accessor for InteractiveTimelineCollectionViewLayoutAttributes();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(void **)&v26[0];
  uint64_t v5 = (_OWORD *)(*(void *)&v26[0]
                + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration);
  long long v6 = *(_OWORD *)(*(void *)&v26[0]
                 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration);
  v26[1] = *(_OWORD *)(*(void *)&v26[0]
                     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                     + 16);
  v26[0] = v6;
  long long v7 = v5[2];
  long long v8 = v5[3];
  long long v9 = v5[5];
  v26[4] = v5[4];
  v26[5] = v9;
  void v26[2] = v7;
  v26[3] = v8;
  long long v10 = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                     + 48];
  long long v29 = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                     + 32];
  long long v30 = v10;
  long long v11 = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                     + 80];
  long long v31 = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                     + 64];
  long long v32 = v11;
  long long v12 = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration
                     + 16];
  long long v27 = *(_OWORD *)&v1[OBJC_IVAR____TtC26MedicationsHealthAppPlugin49InteractiveTimelineCollectionViewLayoutAttributes_configuration];
  long long v28 = v12;
  sub_241060150((uint64_t)v26);
  sub_241060150((uint64_t)&v27);
  BOOL v13 = sub_24111C7CC((uint64_t)v26, (uint64_t)&v27);
  sub_24106017C((uint64_t)&v27);
  sub_24106017C((uint64_t)v26);
  if (!v13)
  {

    return 0;
  }
  sub_24104D4C8(a1, (uint64_t)v24);
  uint64_t v14 = v25;
  if (v25)
  {
    long long v15 = sub_24101A6BC(v24, v25);
    uint64_t v16 = *(void *)(v14 - 8);
    __n128 v17 = MEMORY[0x270FA5388](v15);
    uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v16 + 16))(v19, v17);
    uint64_t v20 = sub_241161880();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v14);
    sub_24101F178((uint64_t)v24);
  }
  else
  {
    uint64_t v20 = 0;
  }
  v23.receiver = v1;
  v23.super_class = v3;
  id v21 = objc_msgSendSuper2(&v23, sel_isEqual_, v20);

  swift_unknownObjectRelease();
  return v21;
}

id sub_241145C28()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractiveTimelineCollectionViewLayoutAttributes();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InteractiveTimelineCollectionViewLayoutAttributes()
{
  return self;
}

uint64_t type metadata accessor for MedicationCategoryArchivedMedicationsDataSource()
{
  uint64_t result = qword_26B006A00;
  if (!qword_26B006A00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241145CE0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_241145D20()
{
  unint64_t v0 = sub_24115F5C0();
  if (v0 >> 62) {
    uint64_t v1 = sub_2411616E0();
  }
  else {
    uint64_t v1 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_24114696C(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
  sub_24115DDF0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24116B370;
  long long v11 = xmmword_24116B370;
  sub_241145FC8(v12);
  sub_241061700((uint64_t)v12, (uint64_t)v10);
  sub_241137144((uint64_t)v10, (uint64_t)&v7);
  if (v8)
  {
    sub_241027314(&v7, (uint64_t)v9);
    sub_241027314(v9, (uint64_t)&v7);
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_241052654(0, v3[2] + 1, 1, v3);
    }
    unint64_t v5 = v3[2];
    unint64_t v4 = v3[3];
    if (v5 >= v4 >> 1) {
      uint64_t v3 = sub_241052654((void *)(v4 > 1), v5 + 1, 1, v3);
    }
    v3[2] = v5 + 1;
    sub_241027314(&v7, (uint64_t)&v3[5 * v5 + 4]);
  }
  else
  {
    sub_2411469D0((uint64_t)&v7, (uint64_t)&qword_26B0069B0, (uint64_t)&qword_26B0069A8, MEMORY[0x263F437A0], (uint64_t (*)(void))sub_24110B474);
  }
  sub_24110B474(0, (unint64_t *)&qword_26B0069B0, (unint64_t *)&qword_26B0069A8);
  swift_arrayDestroy();
  sub_24115DDE0();
  return v2;
}

uint64_t sub_241145FC8@<X0>(uint64_t *a1@<X8>)
{
  id v47 = a1;
  uint64_t v1 = sub_24115E650();
  uint64_t v45 = *(void *)(v1 - 8);
  uint64_t v46 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v44 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_24114696C(0, &qword_26B006D78, MEMORY[0x263F81EE0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v43 = (char *)&v34 - v5;
  uint64_t v6 = sub_24115DEE0();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v40 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24114696C(0, &qword_26B006D70, MEMORY[0x263F81DF8], v3);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v37 = (char *)&v34 - v9;
  uint64_t v10 = sub_24115F7F0();
  uint64_t v38 = *(void *)(v10 - 8);
  uint64_t v39 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v36 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24115F7B0();
  uint64_t v34 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24115E9F0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x263F07690];
  sub_24114696C(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], v3);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v34 - v21;
  v48[3] = sub_24115F9D0();
  v48[4] = MEMORY[0x263F81F20];
  sub_2410277C0(v48);
  sub_24115F980();
  uint64_t v23 = sub_24115CB90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  sub_24115E9E0();
  sub_24115EF20();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_2411469D0((uint64_t)v22, (uint64_t)&qword_26B007200, v19, (uint64_t)v3, (uint64_t (*)(void))sub_24114696C);
  sub_24115F990();
  sub_24114696C(0, &qword_26B0070B8, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
  sub_24115F800();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_24116B370;
  uint64_t v25 = v34;
  uint64_t v24 = v35;
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v14, *MEMORY[0x263F81DE8], v35);
  uint64_t v26 = sub_24115F7C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v37, 1, 1, v26);
  long long v27 = v36;
  sub_24115F7E0();
  sub_24115F7D0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v39);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v24);
  long long v29 = v40;
  uint64_t v28 = v41;
  *uint64_t v40 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v28 + 104))(v29, *MEMORY[0x263F440D8], v42);
  uint64_t v30 = sub_24115F8B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v43, 1, 1, v30);
  (*(void (**)(char *, void, uint64_t))(v45 + 104))(v44, *MEMORY[0x263F446D0], v46);
  uint64_t v31 = sub_24115E020();
  long long v32 = v47;
  v47[3] = v31;
  v32[4] = sub_2410F8238();
  sub_2410277C0(v32);
  return sub_24115E010();
}

uint64_t sub_241146754(void *a1)
{
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1;
  sub_24104F1E8();
  sub_241020840(0, &qword_268CF1AE0);
  id v6 = a1;
  if (swift_dynamicCast())
  {
    sub_241027314(v13, (uint64_t)v16);
    uint64_t v7 = v17;
    uint64_t v8 = v18;
    sub_24101A6BC(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    return sub_24101F178((uint64_t)v16);
  }
  else
  {
    uint64_t v14 = 0;
    memset(v13, 0, sizeof(v13));
    sub_2411469D0((uint64_t)v13, (uint64_t)&qword_268CF1AE8, (uint64_t)&qword_268CF1AE0, (uint64_t)&protocol descriptor for MedicationListEditing, (uint64_t (*)(void))sub_24110B474);
    sub_24115F740();
    uint64_t v10 = sub_24115F780();
    os_log_type_t v11 = sub_241160D30();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_241007000, v10, v11, "[MedicationListDataSource] Archived medications triggered by unexpected view controller", v12, 2u);
      MEMORY[0x2456180C0](v12, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_241146964()
{
  return type metadata accessor for MedicationCategoryArchivedMedicationsDataSource();
}

void sub_24114696C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411469D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_241146A30()
{
  sub_241147FE8(&qword_26B004268, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);

  return sub_24115F440();
}

uint64_t sub_241146A9C(uint64_t a1, uint64_t a2)
{
  return sub_241146ACC(a1, a2, MEMORY[0x263F44CD0]);
}

uint64_t sub_241146AB4(uint64_t a1, uint64_t a2)
{
  return sub_241146ACC(a1, a2, MEMORY[0x263F44CC8]);
}

uint64_t sub_241146ACC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = sub_241147FE8(&qword_26B004268, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
  uint64_t result = a3(a1, v5);
  if (!v7) {
    return 0;
  }
  return result;
}

uint64_t sub_241146B4C@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + 280))
  {
    swift_bridgeObjectRetain();
    return sub_24115F340();
  }
  else
  {
    uint64_t v4 = sub_24115F350();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    return v5(a1, 1, 1, v4);
  }
}

BOOL sub_241146C10()
{
  return *(void *)(v0 + 200) != 0;
}

uint64_t sub_241146C20()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241146C50()
{
  return 0x74756F6241;
}

uint64_t sub_241146C64()
{
  uint64_t v1 = *(void *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241146C94()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241146CC4()
{
  return *(unsigned __int8 *)(v0 + 240);
}

uint64_t sub_241146CCC()
{
  uint64_t v1 = *(void *)(v0 + 248);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241146CFC()
{
  return *(unsigned __int8 *)(v0 + 264);
}

uint64_t sub_241146D04()
{
  uint64_t v0 = sub_24115CB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115CB40();
  uint64_t v4 = sub_24115CB20();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_241146DE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24115F350();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_241146E4C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_241146E54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = a1;
  a2[4] = sub_241147FE8(&qword_268CF25B0, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
  uint64_t v4 = sub_2410277C0(a2);

  return sub_24104F384(v2, (uint64_t)v4);
}

uint64_t sub_241146ED0()
{
  sub_24104F3E8(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41SharedMedicationsDetailDataSourceProvider_feedItemData);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_241146F44()
{
  return type metadata accessor for SharedMedicationsDetailDataSourceProvider();
}

uint64_t type metadata accessor for SharedMedicationsDetailDataSourceProvider()
{
  uint64_t result = qword_268CF25A0;
  if (!qword_268CF25A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241146F98()
{
  uint64_t result = type metadata accessor for SharedMedicationsFeedItemData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_241147034()
{
  return sub_24114763C();
}

void sub_241147058(uint64_t a1)
{
  v17[3] = type metadata accessor for SharedMedicationsFeedItemData(0);
  v17[4] = sub_241147FE8(&qword_268CF25F0, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
  uint64_t v2 = sub_2410277C0(v17);
  sub_24104F384(a1, (uint64_t)v2);
  sub_2410280A4((uint64_t)v17, (uint64_t)v16);
  sub_24115EE10();
  swift_allocObject();
  swift_retain();
  uint64_t v3 = sub_24115EE00();
  id v4 = objc_msgSend(self, sel_sharedBehavior);
  if (!v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_features);

  if (!v6)
  {
LABEL_8:
    __break(1u);
    return;
  }
  unsigned int v7 = objc_msgSend(v6, sel_stanley);

  if (v7)
  {
    sub_2410280A4((uint64_t)v17, (uint64_t)v16);
    sub_24115EE30();
    swift_allocObject();
    swift_retain();
    uint64_t v8 = sub_24115EE20();
    sub_241147F94(0, &qword_268CF0D10, (void (*)(uint64_t))sub_24107F1F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24116B200;
    *(void *)(inited + 32) = 1;
    uint64_t v10 = (void (*)(uint64_t))MEMORY[0x263F44E80];
    uint64_t v11 = sub_241147FE8(&qword_268CF2600, MEMORY[0x263F44E80]);
    uint64_t v12 = sub_241147FE8(&qword_268CF25F8, v10);
    *(void *)(inited + 40) = v3;
    *(void *)(inited + 48) = v11;
    *(void *)(inited + 56) = v12;
    *(void *)(inited + 64) = 2;
    uint64_t v13 = (void (*)(uint64_t))MEMORY[0x263F44E90];
    uint64_t v14 = sub_241147FE8(&qword_268CF2608, MEMORY[0x263F44E90]);
    uint64_t v15 = sub_241147FE8(&qword_268CF2610, v13);
    *(void *)(inited + 72) = v8;
    *(void *)(inited + 80) = v14;
    *(void *)(inited + 88) = v15;
    sub_241066754(inited);
    swift_setDeallocating();
    sub_24107F1F0();
    swift_retain();
    swift_retain();
    swift_arrayDestroy();
    sub_24115E420();
    swift_allocObject();
    sub_24115E410();
    swift_release();
    swift_release();
  }
  else
  {
    sub_241147FE8(&qword_268CF25F8, MEMORY[0x263F44E80]);
  }
  sub_24101F178((uint64_t)v17);
}

uint64_t sub_2411473CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedMedicationsFeedItemData(0);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24104F384(a1, (uint64_t)v4);
  type metadata accessor for SharedMedicationsChartCellDataSource();
  uint64_t v5 = swift_allocObject();
  sub_24104F384((uint64_t)v4, v5 + qword_268CF28E8);
  sub_241147F94(0, &qword_268CF07C0, MEMORY[0x263F44068]);
  sub_24115DDF0();
  uint64_t v6 = swift_allocObject();
  long long v12 = xmmword_24116B370;
  *(_OWORD *)(v6 + 16) = xmmword_24116B370;
  sub_2410E6BC4();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = v12;
  uint64_t v8 = type metadata accessor for SharedMedicationsChartItem();
  *(void *)(v7 + 56) = v8;
  *(void *)(v7 + 64) = sub_241147FE8(&qword_268CF2618, (void (*)(uint64_t))type metadata accessor for SharedMedicationsChartItem);
  uint64_t v9 = sub_2410277C0((uint64_t *)(v7 + 32));
  sub_24104F384((uint64_t)v4, (uint64_t)v9);
  *(uint64_t *)((char *)v9 + *(int *)(v8 + 20)) = 0;
  sub_24115DDE0();
  uint64_t v10 = sub_24115D610();
  sub_24104F3E8((uint64_t)v4);
  sub_241147FE8(&qword_268CF2620, (void (*)(uint64_t))type metadata accessor for SharedMedicationsChartCellDataSource);
  return v10;
}

void *sub_24114763C()
{
  unint64_t v1 = v0;
  uint64_t v58 = sub_24115F790();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v56 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24115EA20();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v63 = xmmword_24116B9F0;
  uint64_t v7 = (uint64_t)v0
     + OBJC_IVAR____TtC26MedicationsHealthAppPlugin41SharedMedicationsDetailDataSourceProvider_feedItemData;
  uint64_t v64 = sub_2411473CC((uint64_t)v0+ OBJC_IVAR____TtC26MedicationsHealthAppPlugin41SharedMedicationsDetailDataSourceProvider_feedItemData);
  uint64_t v65 = v8;
  uint64_t v9 = type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v61 = v9;
  uint64_t v62 = sub_241147FE8(&qword_268CF25B8, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
  uint64_t v10 = sub_2410277C0(v60);
  sub_24104F384(v7, (uint64_t)v10);
  sub_2410280A4((uint64_t)v60, (uint64_t)v59);
  sub_24115EC70();
  swift_allocObject();
  uint64_t v11 = sub_24115EC60();
  uint64_t v12 = sub_241147FE8(&qword_268CF25C0, MEMORY[0x263F44E18]);
  sub_24101F178((uint64_t)v60);
  uint64_t v66 = v11;
  uint64_t v67 = v12;
  uint64_t v61 = v9;
  uint64_t v62 = sub_241147FE8(&qword_268CF25C8, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
  uint64_t v13 = sub_2410277C0(v60);
  sub_24104F384(v7, (uint64_t)v13);
  sub_2410280A4((uint64_t)v60, (uint64_t)v59);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F44D90], v3);
  sub_24115EA40();
  swift_allocObject();
  swift_retain();
  uint64_t v14 = sub_24115EA30();
  uint64_t v15 = sub_241147FE8(&qword_268CF25D0, MEMORY[0x263F44D98]);
  sub_24101F178((uint64_t)v60);
  uint64_t v68 = v14;
  uint64_t v69 = v15;
  uint64_t v16 = *(void *)(v7 + *(int *)(v9 + 120));
  if (v16)
  {
    if (*(void *)(v16 + 16))
    {
      type metadata accessor for SharedMedicationsHighlightsDataSource();
      swift_allocObject();
      uint64_t v17 = swift_bridgeObjectRetain();
      uint64_t v16 = sub_2410E4440(v17);
      uint64_t v18 = sub_241147FE8(&qword_268CF25E8, (void (*)(uint64_t))type metadata accessor for SharedMedicationsHighlightsDataSource);
      goto LABEL_6;
    }
    uint64_t v16 = 0;
  }
  uint64_t v18 = 0;
LABEL_6:
  uint64_t v19 = v56;
  uint64_t v70 = v16;
  uint64_t v71 = v18;
  sub_241147058(v7);
  uint64_t v72 = v20;
  uint64_t v73 = v21;
  uint64_t v22 = v64;
  if (!v64)
  {
    uint64_t v24 = (void *)MEMORY[0x263F8EE78];
    uint64_t v28 = v66;
    if (!v66) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  uint64_t v23 = v65;
  swift_unknownObjectRetain();
  uint64_t v24 = sub_241052670(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v26 = v24[2];
  unint64_t v25 = v24[3];
  if (v26 >= v25 >> 1) {
    uint64_t v24 = sub_241052670((void *)(v25 > 1), v26 + 1, 1, v24);
  }
  void v24[2] = v26 + 1;
  long long v27 = &v24[2 * v26];
  v27[4] = v22;
  v27[5] = v23;
  uint64_t v28 = v66;
  if (v66)
  {
LABEL_12:
    uint64_t v29 = v67;
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v24 = sub_241052670(0, v24[2] + 1, 1, v24);
    }
    unint64_t v31 = v24[2];
    unint64_t v30 = v24[3];
    if (v31 >= v30 >> 1) {
      uint64_t v24 = sub_241052670((void *)(v30 > 1), v31 + 1, 1, v24);
    }
    void v24[2] = v31 + 1;
    long long v32 = &v24[2 * v31];
    v32[4] = v28;
    void v32[5] = v29;
    uint64_t v14 = v68;
  }
LABEL_17:
  if (v14)
  {
    uint64_t v33 = v69;
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v24 = sub_241052670(0, v24[2] + 1, 1, v24);
    }
    unint64_t v35 = v24[2];
    unint64_t v34 = v24[3];
    if (v35 >= v34 >> 1) {
      uint64_t v24 = sub_241052670((void *)(v34 > 1), v35 + 1, 1, v24);
    }
    void v24[2] = v35 + 1;
    uint64_t v36 = &v24[2 * v35];
    v36[4] = v14;
    v36[5] = v33;
  }
  uint64_t v37 = v70;
  if (v70)
  {
    uint64_t v38 = v71;
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v24 = sub_241052670(0, v24[2] + 1, 1, v24);
    }
    unint64_t v40 = v24[2];
    unint64_t v39 = v24[3];
    if (v40 >= v39 >> 1) {
      uint64_t v24 = sub_241052670((void *)(v39 > 1), v40 + 1, 1, v24);
    }
    void v24[2] = v40 + 1;
    uint64_t v41 = &v24[2 * v40];
    v41[4] = v37;
    v41[5] = v38;
  }
  uint64_t v42 = v72;
  if (v72)
  {
    uint64_t v43 = v73;
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v24 = sub_241052670(0, v24[2] + 1, 1, v24);
    }
    unint64_t v45 = v24[2];
    unint64_t v44 = v24[3];
    if (v45 >= v44 >> 1) {
      uint64_t v24 = sub_241052670((void *)(v44 > 1), v45 + 1, 1, v24);
    }
    void v24[2] = v45 + 1;
    uint64_t v46 = &v24[2 * v45];
    v46[4] = v42;
    void v46[5] = v43;
  }
  sub_241147F20(0, &qword_268CF0DD0, MEMORY[0x263F8D8F0]);
  swift_arrayDestroy();
  sub_24115F740();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  id v47 = sub_24115F780();
  os_log_type_t v48 = sub_241160D50();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    v60[0] = v50;
    *(_DWORD *)uint64_t v49 = 136446466;
    v59[0] = *v1;
    sub_241147EE4();
    uint64_t v51 = sub_241160760();
    v59[0] = sub_24101F0A4(v51, v52, v60);
    sub_241161430();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2082;
    v59[0] = v24;
    sub_241147F20(0, &qword_268CF25E0, MEMORY[0x263F8D488]);
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_2411607A0();
    v59[0] = sub_24101F0A4(v53, v54, v60);
    sub_241161430();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v47, v48, "[%{public}s] Notifying data sources of hidden display types change, sources: %{public}s", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v50, -1, -1);
    MEMORY[0x2456180C0](v49, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v57 + 8))(v19, v58);
  return v24;
}

unint64_t sub_241147EE4()
{
  unint64_t result = qword_268CF25D8;
  if (!qword_268CF25D8)
  {
    type metadata accessor for SharedMedicationsDetailDataSourceProvider();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_268CF25D8);
  }
  return result;
}

void sub_241147F20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_241027EA8(255, (unint64_t *)&unk_268CF1820);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_241147F94(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_241161860();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_241147FE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id HDCodableQuantity.quantity.getter()
{
  id result = objc_msgSend(v0, sel_unitString);
  if (result)
  {
    uint64_t v2 = result;
    sub_241160730();

    uint64_t v3 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(self, sel_unitFromString_, v3);

    objc_msgSend(v0, sel_value);
    id v6 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v4, v5);

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HDCodableQuantity.init(_:)(void *a1)
{
  id result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    id v3 = result;
    objc_msgSend(a1, sel__value);
    objc_msgSend(v3, sel_setValue_);
    id v4 = objc_msgSend(a1, sel__unit);
    id v5 = objc_msgSend(v4, sel_unitString);

    if (!v5)
    {
      sub_241160730();
      id v5 = (id)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v3, sel_setUnitString_, v5);

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_24114820C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, void *a7@<X8>)
{
  unint64_t v39 = a6;
  uint64_t v40 = a5;
  uint64_t v13 = (int *)type metadata accessor for MedicationHighlightsContent.HighlightDay();
  uint64_t v14 = *((void *)v13 - 1);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(v7, sel_days);
  uint64_t v18 = result;
  if (!result)
  {
    a1 = 0;
    a2 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    unint64_t v22 = 0;
LABEL_19:
    *a7 = a1;
    a7[1] = a2;
    a7[2] = v31;
    a7[3] = result;
    a7[4] = v32;
    a7[5] = v18;
    a7[6] = v22;
    return result;
  }
  uint64_t v37 = a4;
  uint64_t v38 = a3;
  unint64_t v42 = 0;
  sub_24114852C();
  sub_241160990();

  unint64_t v19 = v42;
  if (!v42)
  {
    a1 = 0;
    a2 = 0;
    uint64_t v31 = 0;
    id result = 0;
    uint64_t v32 = 0;
    uint64_t v18 = 0;
    unint64_t v22 = 0;
    goto LABEL_19;
  }
  if (!(v42 >> 62))
  {
    uint64_t v20 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    unint64_t v22 = MEMORY[0x263F8EE78];
LABEL_18:
    uint64_t v18 = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (id)swift_bridgeObjectRetain();
    uint64_t v31 = v38;
    uint64_t v32 = v40;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_2411616E0();
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_17;
  }
LABEL_5:
  unint64_t v42 = MEMORY[0x263F8EE78];
  id result = (id)sub_2410E5A04(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v34 = a2;
    uint64_t v35 = a1;
    uint64_t v36 = a7;
    uint64_t v21 = 0;
    unint64_t v22 = v42;
    unint64_t v23 = v19;
    unint64_t v41 = v19 & 0xC000000000000001;
    uint64_t v24 = v20;
    do
    {
      if (v41) {
        id v25 = (id)MEMORY[0x245617450](v21, v23);
      }
      else {
        id v25 = *(id *)(v23 + 8 * v21 + 32);
      }
      unint64_t v26 = v25;
      objc_msgSend(v25, sel_date);
      sub_24115CA10();
      unsigned __int8 v27 = objc_msgSend(v26, sel_status);
      unsigned __int8 v28 = objc_msgSend(v26, sel_isPaddedDay);

      v16[v13[5]] = v27;
      v16[v13[6]] = v28;
      v16[v13[7]] = 0;
      unint64_t v42 = v22;
      unint64_t v30 = *(void *)(v22 + 16);
      unint64_t v29 = *(void *)(v22 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_2410E5A04(v29 > 1, v30 + 1, 1);
        unint64_t v22 = v42;
      }
      ++v21;
      *(void *)(v22 + 16) = v30 + 1;
      sub_24113CF80((uint64_t)v16, v22+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v30);
    }
    while (v24 != v21);
    swift_bridgeObjectRelease();
    a1 = v35;
    a7 = v36;
    a2 = v34;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

unint64_t sub_24114852C()
{
  unint64_t result = qword_26B006190;
  if (!qword_26B006190)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B006190);
  }
  return result;
}

uint64_t sub_24114856C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v45 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F110];
  sub_241150330(0, (unint64_t *)&qword_26B0071C0, MEMORY[0x263F8F110], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v42 = (char *)&v35 - v9;
  sub_2410756F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  uint64_t v37 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241117E48();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v38 = v14;
  uint64_t v39 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241150148();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v43 = v18;
  uint64_t v44 = v19;
  MEMORY[0x270FA5388](v18);
  unint64_t v41 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24115CB50();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + qword_268CF2640) = MEMORY[0x263F8EE88];
  *(void *)(v4 + qword_268CF2628) = a1;
  *(void *)(v4 + qword_268CF2630) = a2;
  uint64_t v46 = a3;
  v47[0] = 0;
  *(void *)(v4 + qword_268CF2638) = a3;
  v47[1] = 0xE000000000000000;
  uint64_t v40 = a1;
  swift_retain();
  id v35 = a2;
  swift_retain();
  sub_2411615F0();
  swift_bridgeObjectRelease();
  strcpy((char *)v47, "MutableArray<");
  HIWORD(v47[1]) = -4864;
  sub_24115CB40();
  sub_24115CB20();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  sub_241160860();
  swift_bridgeObjectRelease();
  sub_241160860();
  uint64_t v25 = sub_24115DE40();
  swift_retain();
  v47[0] = sub_24115F630();
  sub_241117F34(0, (unint64_t *)&qword_26B0072C8, MEMORY[0x263F45D68], MEMORY[0x263EFDCF0]);
  sub_24114F530(0, (unint64_t *)&qword_26B007308, (unint64_t *)&qword_26B007360, 0x263F44C18, MEMORY[0x263F8D488]);
  sub_24102BE24();
  sub_24115FE30();
  swift_release();
  v47[0] = sub_24115F300();
  sub_241117F34(0, &qword_268CF2330, (uint64_t (*)(uint64_t))sub_2410FBFF4, MEMORY[0x263EFDD90]);
  sub_2411502E8(&qword_268CF0C00, (void (*)(uint64_t))sub_2410756F0);
  sub_241117FA8();
  uint64_t v26 = v36;
  sub_24115FE60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v26);
  sub_2411502E8(&qword_268CF2368, (void (*)(uint64_t))sub_241117E48);
  unsigned __int8 v27 = v35;
  uint64_t v28 = v38;
  uint64_t v29 = sub_24115FE10();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v28);
  v47[0] = v29;
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  id v48 = (id)sub_241160EF0();
  uint64_t v30 = sub_241160EB0();
  uint64_t v31 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v42, 1, 1, v30);
  sub_241150248();
  sub_2411502E8(&qword_268CF2698, (void (*)(uint64_t))sub_241150248);
  sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
  uint64_t v32 = v41;
  sub_24115FF10();
  sub_241025510(v31, (unint64_t *)&qword_26B0071C0, v45);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_2411502E8(&qword_268CF26A0, (void (*)(uint64_t))sub_241150148);
  uint64_t v33 = v43;
  sub_24115FF60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v33);
  swift_beginAccess();
  sub_24115FC30();
  swift_endAccess();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return v25;
}

uint64_t sub_241148D4C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_241148DAC(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_241148DAC(uint64_t a1)
{
  uint64_t v87 = *v1;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241150330(0, &qword_26B007310, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  os_log_t v81 = (char *)&v75 - v5;
  uint64_t v6 = sub_24115F790();
  uint64_t v88 = *(void *)(v6 - 8);
  *(void *)&long long v89 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v82 = (char *)&v75 - v10;
  uint64_t v11 = sub_24115CB50();
  uint64_t v91 = *(void *)(v11 - 8);
  uint64_t v92 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v90 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24115EEE0();
  uint64_t v85 = *(void *)(v13 - 8);
  uint64_t v86 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v84 = (uint8_t **)((char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_24115F550();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v83 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v75 - v19;
  uint64_t v21 = (uint64_t (*)(uint64_t))MEMORY[0x263F44CE0];
  sub_241150330(0, &qword_268CF2670, MEMORY[0x263F44CE0], v3);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)&v75 - v23;
  uint64_t v25 = sub_24115F570();
  uint64_t v26 = *(void *)(*(void *)(v25 - 8) + 64);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v80 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v75 - v28;
  uint64_t v31 = v30;
  uint64_t v32 = v21;
  uint64_t v34 = v33;
  sub_24114FE74(a1, (uint64_t)v24, &qword_268CF2670, v32);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v24, 1, v34) == 1)
  {
    sub_241025510((uint64_t)v24, &qword_268CF2670, MEMORY[0x263F44CE0]);
    sub_24115F740();
    id v35 = sub_24115F780();
    os_log_type_t v36 = sub_241160D50();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v94[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v39 = sub_241161A00();
      uint64_t v93 = sub_24101F0A4(v39, v40, v94);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v35, v36, "[%s] Alert determiner is nil, returning early", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v38, -1, -1);
      MEMORY[0x2456180C0](v37, -1, -1);
    }

    (*(void (**)(char *, void))(v88 + 8))(v9, v89);
    sub_241150330(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
    sub_24115DDF0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_24116B370;
    unint64_t v41 = v90;
    sub_24115CB40();
    sub_24115CB20();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v41, v92);
    sub_24115DDE0();
    sub_24115DE50();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v79 = v31;
    uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v76(v29, v24, v34);
    uint64_t v43 = (uint64_t)v29;
    sub_24115F560();
    unint64_t v44 = sub_24115F530();
    id v47 = *(uint8_t ***)(v16 + 8);
    uint64_t v46 = v16 + 8;
    unint64_t v45 = v47;
    ((void (*)(char *, uint64_t))v47)(v20, v15);
    if (v44 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_2411616E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v48 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v78 = v34;
    if (v48)
    {
      uint64_t v49 = (void (*)(void, void))v84;
      uint64_t v77 = v43;
      sub_24114A938(v43, (uint64_t)v84);
      sub_241150330(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
      sub_24115DDF0();
      uint64_t v50 = swift_allocObject();
      long long v89 = xmmword_24116B370;
      *(_OWORD *)(v50 + 16) = xmmword_24116B370;
      sub_24114FEF4(0, (unint64_t *)&qword_26B0070A0, (unint64_t *)&qword_26B0069A8);
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = v89;
      uint64_t v52 = v86;
      *(void *)(v51 + 56) = v86;
      *(void *)(v51 + 64) = sub_2411502E8(&qword_268CF2320, MEMORY[0x263F44EB8]);
      uint64_t v53 = sub_2410277C0((uint64_t *)(v51 + 32));
      uint64_t v54 = v85;
      (*(void (**)(uint64_t *, void (*)(void, void), uint64_t))(v85 + 16))(v53, v49, v52);
      uint64_t v55 = v90;
      sub_24115CB40();
      sub_24115CB20();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v55, v92);
      sub_24115DDE0();
      sub_24115DE50();
      swift_bridgeObjectRelease();
      (*(void (**)(void, uint64_t))(v54 + 8))(v49, v52);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8))(v77, v78);
    }
    else
    {
      uint64_t v84 = v45;
      uint64_t v85 = v46;
      uint64_t v86 = v15;
      uint64_t v56 = v82;
      sub_24115F740();
      uint64_t v57 = sub_24115F780();
      os_log_type_t v58 = sub_241160D50();
      if (os_log_type_enabled(v57, v58))
      {
        char v59 = (uint8_t *)swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        v94[0] = v60;
        *(_DWORD *)char v59 = 136315138;
        uint64_t v75 = v59 + 4;
        uint64_t v61 = sub_241161A00();
        uint64_t v93 = sub_24101F0A4(v61, v62, v94);
        sub_241161430();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_241007000, v57, v58, "[%s] No new unavailable remote records to show", v59, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v60, -1, -1);
        MEMORY[0x2456180C0](v59, -1, -1);
      }

      (*(void (**)(char *, void))(v88 + 8))(v56, v89);
      uint64_t v63 = v43;
      sub_241150330(0, &qword_268CF07C0, MEMORY[0x263F44068], MEMORY[0x263F8E0F8]);
      sub_24115DDF0();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_24116B370;
      uint64_t v64 = v90;
      sub_24115CB40();
      sub_24115CB20();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v64, v92);
      sub_24115DDE0();
      sub_24115DE50();
      swift_bridgeObjectRelease();
      uint64_t v65 = v83;
      sub_24115F560();
      unint64_t v66 = sub_24115F540();
      ((void (*)(char *, uint64_t))v84)(v65, v86);
      if (v66 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v67 = sub_2411616E0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v67 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v68 = v78;
      swift_bridgeObjectRelease();
      if (v67)
      {
        uint64_t v69 = sub_241160A70();
        uint64_t v70 = (uint64_t)v81;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v81, 1, 1, v69);
        uint64_t v71 = v79;
        uint64_t v72 = v80;
        (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v80, v63, v68);
        unint64_t v73 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
        uint64_t v74 = swift_allocObject();
        *(void *)(v74 + 16) = 0;
        *(void *)(v74 + 24) = 0;
        v76((char *)(v74 + v73), v72, v68);
        *(void *)(v74 + ((v26 + v73 + 7) & 0xFFFFFFFFFFFFFFF8)) = v87;
        sub_24101A700(v70, (uint64_t)&unk_268CF2680, v74);
        swift_release();
        return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v63, v68);
      }
      else
      {
        return (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8))(v43, v68);
      }
    }
  }
}

uint64_t sub_241149B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = sub_24115F790();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_241149BE8, 0, 0);
}

uint64_t sub_241149BE8()
{
  uint64_t v17 = v0;
  sub_24115F740();
  unint64_t v1 = sub_24115F780();
  os_log_type_t v2 = sub_241160D50();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v15 = v0[12];
    uint64_t v4 = v0[8];
    uint64_t v3 = v0[9];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v16 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = sub_241161A00();
    v0[5] = sub_24101F0A4(v7, v8, &v16);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v1, v2, "[%s] >0 newly supported remote records present, automatically saving records", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v6, -1, -1);
    MEMORY[0x2456180C0](v5, -1, -1);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v9(v15, v4);
  }
  else
  {
    uint64_t v10 = v0[12];
    uint64_t v11 = v0[8];
    uint64_t v12 = v0[9];

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v9(v10, v11);
  }
  v0[13] = v9;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[14] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_241149DF4;
  return MEMORY[0x270F35640]();
}

uint64_t sub_241149DF4(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24114A118;
  }
  else
  {
    *(unsigned char *)(v4 + 128) = a1 & 1;
    uint64_t v5 = sub_241149F20;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_241149F20()
{
  uint64_t v16 = v0;
  if (*(unsigned char *)(v0 + 128) == 1)
  {
    sub_24115F740();
    uint64_t v1 = sub_24115F780();
    os_log_type_t v2 = sub_241160D50();
    BOOL v3 = os_log_type_enabled(v1, v2);
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0 + 104);
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 64);
    if (v3)
    {
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 104);
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = v5;
      uint64_t v8 = swift_slowAlloc();
      uint64_t v15 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v9 = sub_241161A00();
      *(void *)(v0 + 32) = sub_24101F0A4(v9, v10, &v15);
      sub_241161430();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_241007000, v1, v2, "[%s] Did save remote records", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2456180C0](v8, -1, -1);
      MEMORY[0x2456180C0](v7, -1, -1);

      v14(v13, v6);
    }
    else
    {

      v4(v5, v6);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_24114A118()
{
  uint64_t v25 = v0;
  uint64_t v1 = v0;
  os_log_type_t v2 = (void *)v0[15];
  sub_24115F740();
  id v3 = v2;
  id v4 = v2;
  uint64_t v5 = sub_24115F780();
  os_log_type_t v6 = sub_241160D30();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[15];
    uint64_t v22 = v0[10];
    uint64_t v23 = (void (*)(uint64_t, uint64_t))v0[13];
    uint64_t v21 = v0[8];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v20;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v10 = sub_241161A00();
    v0[2] = sub_24101F0A4(v10, v11, &v24);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2112;
    id v12 = v7;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v13;
    sub_241161430();
    *uint64_t v9 = v13;

    _os_log_impl(&dword_241007000, v5, v6, "[%s] Failed to save remote records with error: %@", (uint8_t *)v8, 0x16u);
    sub_24114F530(0, (unint64_t *)&qword_26B0071F0, (unint64_t *)&qword_26B007218, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v20, -1, -1);
    MEMORY[0x2456180C0](v8, -1, -1);

    v23(v22, v21);
  }
  else
  {
    uint64_t v14 = (void *)v0[15];
    uint64_t v15 = (void (*)(uint64_t, uint64_t))v1[13];
    uint64_t v16 = v1[10];
    uint64_t v17 = v1[8];

    v15(v16, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v1[1];
  return v18();
}

id sub_24114A400()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24115F790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24115E9F0();
  uint64_t v35 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241150330(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v34 - v10;
  sub_241024708(0, (unint64_t *)&qword_26B007360);
  uint64_t v12 = sub_2411609E0();
  if (v13)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    sub_241024708(0, &qword_268CF1AC8);
    uint64_t v16 = sub_2411609E0();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = v16;
      uint64_t v20 = sub_24115CB90();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 1, 1, v20);
      sub_24115E9E0();
      sub_24114FEF4(0, (unint64_t *)&qword_26B007398, (unint64_t *)&qword_26B0073C0);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_24116B200;
      uint64_t v22 = MEMORY[0x263F8D310];
      *(void *)(v21 + 56) = MEMORY[0x263F8D310];
      unint64_t v23 = sub_2410484D8();
      *(void *)(v21 + 32) = v14;
      *(void *)(v21 + 40) = v15;
      *(void *)(v21 + 96) = v22;
      *(void *)(v21 + 104) = v23;
      *(void *)(v21 + 64) = v23;
      *(void *)(v21 + 72) = v19;
      *(void *)(v21 + 80) = v18;
      uint64_t v24 = sub_24115EF20();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v6);
      sub_241025510((uint64_t)v11, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
      return (id)v24;
    }
    swift_bridgeObjectRelease();
  }
  sub_24115F740();
  swift_retain_n();
  uint64_t v25 = sub_24115F780();
  os_log_type_t v26 = sub_241160D30();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v36 = v1;
    uint64_t v37 = v28;
    *(_DWORD *)uint64_t v27 = 136446210;
    type metadata accessor for RemoteScheduleUnavailableDataSource();
    uint64_t v35 = v2;
    swift_retain();
    uint64_t v29 = sub_241160760();
    uint64_t v36 = sub_24101F0A4(v29, v30, &v37);
    sub_241161430();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v25, v26, "[%{public}s] Error getting body text for data source, medication names/device naems returned nil", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v28, -1, -1);
    MEMORY[0x2456180C0](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v35);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v32 = result;
    unsigned int v33 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v33) {
      return (id)0xD00000000000002ALL;
    }
    else {
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24114A938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v5 = *v2;
  uint64_t v98 = v2;
  uint64_t v99 = v5;
  uint64_t v6 = sub_24115F570();
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v89 = v7;
  uint64_t v92 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24115EEC0();
  uint64_t v87 = *(void *)(v8 - 8);
  uint64_t v88 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v90 = (uint64_t *)((char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v86 = sub_24115E9F0();
  uint64_t v85 = *(void **)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v84 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241150330(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v83 = (char *)&v77 - v12;
  uint64_t v81 = sub_24115F790();
  uint64_t v13 = *(void *)(v81 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v81);
  uint64_t v97 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v96 = (char *)&v77 - v16;
  uint64_t v17 = sub_24115F550();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = ((char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v21 = objc_allocWithZone(MEMORY[0x263F825C8]);
  aBlock[4] = (uint64_t)sub_241115E94;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24114CCB8;
  uint64_t aBlock[3] = (uint64_t)&unk_26F558490;
  uint64_t v22 = _Block_copy(aBlock);
  id v82 = objc_msgSend(v21, sel_initWithDynamicProvider_, v22);
  _Block_release(v22);
  swift_release();
  uint64_t v91 = a1;
  sub_24115F560();
  unint64_t v23 = v20;
  uint64_t v24 = sub_24115F530();
  (*(void (**)(NSObject *, uint64_t))(v18 + 8))(v20, v17);
  aBlock[0] = MEMORY[0x263F8EE78];
  if (!((unint64_t)v24 >> 62))
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_43;
    }
    goto LABEL_20;
  }
  if (v24 < 0) {
    unint64_t v23 = v24;
  }
  else {
    unint64_t v23 = (v24 & 0xFFFFFFFFFFFFFF8);
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_2411616E0();
  if (!v25) {
    goto LABEL_19;
  }
LABEL_3:
  if (v25 < 1)
  {
    __break(1u);
LABEL_47:
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_2411616E0();
    swift_release();
    goto LABEL_33;
  }
  for (uint64_t i = 0; i != v25; ++i)
  {
    if ((v24 & 0xC000000000000001) != 0) {
      id v27 = (id)MEMORY[0x245617450](i, v24);
    }
    else {
      id v27 = *(id *)(v24 + 8 * i + 32);
    }
    uint64_t v28 = v27;
    id v29 = objc_msgSend(v27, sel_medication);

    if (v29)
    {
      MEMORY[0x2456167B0]();
      if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_2411609D0();
      }
      sub_241160A00();
      sub_2411609C0();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = aBlock[0];
  if (aBlock[0] < 0) {
    goto LABEL_43;
  }
LABEL_20:
  if ((v30 & 0x4000000000000000) == 0)
  {
    uint64_t v31 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
LABEL_43:
  unint64_t v75 = swift_bridgeObjectRetain();
  uint64_t v31 = (uint64_t)sub_24114D324(v75, (void (*)(void *, uint64_t, unint64_t))sub_2410D51E0);
  swift_bridgeObjectRelease();
LABEL_22:
  aBlock[0] = v31;
  sub_24114D5BC(aBlock, (uint64_t (*)(uint64_t))sub_24115039C, (void (*)(void *))sub_24114D7E4);
  swift_bridgeObjectRelease();
  if (!v25)
  {
    swift_bridgeObjectRelease();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  uint64_t v32 = aBlock[0];
  if ((v24 & 0xC000000000000001) != 0)
  {
    id v33 = (id)MEMORY[0x245617450](0, v24);
    uint64_t v25 = v13;
  }
  else
  {
    if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_45;
    }
    uint64_t v25 = v13;
    id v33 = *(id *)(v24 + 32);
  }
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v33, sel_devices);

  sub_241024708(0, &qword_268CF1AC8);
  uint64_t v35 = sub_2411609A0();

  if ((v35 & 0x8000000000000000) == 0 && (v35 & 0x4000000000000000) == 0)
  {
    uint64_t v36 = v35 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
LABEL_45:
  unint64_t v76 = swift_bridgeObjectRetain();
  uint64_t v36 = (uint64_t)sub_24114D324(v76, (void (*)(void *, uint64_t, unint64_t))sub_2410D543C);
  swift_bridgeObjectRelease();
LABEL_29:
  aBlock[0] = v36;
  sub_24114D5BC(aBlock, (uint64_t (*)(uint64_t))sub_24114FE00, (void (*)(void *))sub_24114E098);
  swift_bridgeObjectRelease();
  uint64_t v37 = aBlock[0];
  uint64_t v38 = v96;
  sub_24115F740();
  swift_retain_n();
  unint64_t v23 = sub_24115F780();
  os_log_type_t v3 = sub_241160D50();
  BOOL v39 = os_log_type_enabled(v23, v3);
  uint64_t v80 = v32;
  if (!v39)
  {

    swift_release_n();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v25 + 8);
    unint64_t v45 = v38;
    uint64_t v17 = v81;
    v43(v45, v81);
    unint64_t v44 = v97;
    goto LABEL_35;
  }
  uint64_t v79 = v37;
  uint64_t v24 = swift_slowAlloc();
  uint64_t v20 = swift_slowAlloc();
  aBlock[0] = (uint64_t)v20;
  *(_DWORD *)uint64_t v24 = 136315394;
  uint64_t v40 = sub_241161A00();
  uint64_t v100 = sub_24101F0A4(v40, v41, aBlock);
  sub_241161430();
  swift_bridgeObjectRelease();
  *(_WORD *)(v24 + 12) = 2048;
  uint64_t v17 = v81;
  if (v32 < 0 || (v32 & 0x4000000000000000) != 0) {
    goto LABEL_47;
  }
  uint64_t v42 = *(void *)(v32 + 16);
LABEL_33:
  swift_release();
  uint64_t v100 = v42;
  sub_241161430();
  swift_release();
  _os_log_impl(&dword_241007000, v23, v3, "[%s] unavailableMedications count: %ld", (uint8_t *)v24, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x2456180C0](v20, -1, -1);
  MEMORY[0x2456180C0](v24, -1, -1);

  uint64_t v43 = *(void (**)(char *, uint64_t))(v25 + 8);
  v43(v96, v17);
  unint64_t v44 = v97;
  uint64_t v37 = v79;
LABEL_35:
  sub_24115F740();
  swift_retain_n();
  uint64_t v46 = sub_24115F780();
  os_log_type_t v47 = sub_241160D50();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v96 = (char *)v25;
    uint64_t v48 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    aBlock[0] = v49;
    *(_DWORD *)uint64_t v48 = 136315394;
    uint64_t v50 = sub_241161A00();
    uint64_t v100 = sub_24101F0A4(v50, v51, aBlock);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2048;
    if (v37 < 0 || (v37 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_2411616E0();
      swift_release();
    }
    else
    {
      uint64_t v52 = *(void *)(v37 + 16);
    }
    swift_release();
    uint64_t v100 = v52;
    sub_241161430();
    swift_release();
    _os_log_impl(&dword_241007000, v46, v47, "[%s] unavailableDevices count: %ld", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v49, -1, -1);
    MEMORY[0x2456180C0](v48, -1, -1);

    uint64_t v53 = v97;
  }
  else
  {

    swift_release_n();
    uint64_t v53 = v44;
  }
  v43(v53, v17);
  uint64_t v54 = sub_24115CB90();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
  uint64_t v79 = v55 + 56;
  uint64_t v56 = (uint64_t)v83;
  v78(v83, 1, 1, v54);
  uint64_t v57 = v84;
  sub_24115E9E0();
  uint64_t v58 = sub_24115EF20();
  uint64_t v96 = v59;
  uint64_t v97 = (char *)v58;
  uint64_t v60 = (void (*)(char *, uint64_t))v85[1];
  uint64_t v61 = v86;
  v60(v57, v86);
  unint64_t v62 = (uint64_t (*)(uint64_t))MEMORY[0x263F07690];
  sub_241025510(v56, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
  uint64_t v85 = sub_24114A400();
  uint64_t v81 = v63;
  swift_release();
  swift_release();
  v78((char *)v56, 1, 1, v54);
  sub_24115E9E0();
  uint64_t v80 = sub_24115EF20();
  uint64_t v79 = v64;
  v60(v57, v61);
  sub_241025510(v56, (unint64_t *)&qword_26B007200, v62);
  uint64_t v65 = v90;
  *uint64_t v90 = v82;
  (*(void (**)(void *, void, uint64_t))(v87 + 104))(v65, *MEMORY[0x263F44EB0], v88);
  uint64_t v88 = swift_allocObject();
  uint64_t v66 = v99;
  *(void *)(v88 + 16) = v99;
  uint64_t v67 = swift_allocObject();
  swift_weakInit();
  uint64_t v69 = v92;
  uint64_t v68 = v93;
  uint64_t v70 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v92, v91, v94);
  unint64_t v71 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  unint64_t v72 = (v89 + v71 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v73 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v73 + v71, v69, v70);
  *(void *)(v73 + v72) = v67;
  *(void *)(v73 + ((v72 + 15) & 0xFFFFFFFFFFFFFFF8)) = v66;
  return sub_24115EED0();
}

uint64_t sub_24114B768(uint64_t a1)
{
  uint64_t v46 = a1;
  uint64_t v1 = sub_24115C9E0();
  uint64_t v50 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  os_log_type_t v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24115F140();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v49 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241150330(0, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v48 = (char *)&v41 - v9;
  sub_241150330(0, &qword_26B006930, MEMORY[0x263F06EA8], v7);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v47 = sub_24115F790();
  uint64_t v16 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  uint64_t v19 = sub_24115F780();
  os_log_type_t v20 = sub_241160D10();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v42 = v5;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v43 = v13;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v45 = v1;
    uint64_t v24 = v23;
    uint64_t v52 = v23;
    unint64_t v44 = v15;
    *(_DWORD *)uint64_t v22 = 136315138;
    unint64_t v41 = v22 + 4;
    uint64_t v25 = sub_241161A00();
    uint64_t v51 = sub_24101F0A4(v25, v26, &v52);
    uint64_t v15 = v44;
    sub_241161430();
    uint64_t v5 = v42;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v19, v20, "[%s] Did tap 'Learn More' in Remote Schedule Unavailable Data Source unavailable item", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v27 = v24;
    uint64_t v1 = v45;
    MEMORY[0x2456180C0](v27, -1, -1);
    uint64_t v28 = v22;
    uint64_t v13 = v43;
    MEMORY[0x2456180C0](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v47);
  uint64_t v29 = sub_24115CB90();
  uint64_t v30 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v48, 1, 1, v29);
  uint64_t v31 = v49;
  sub_24115F130();
  sub_24115F5B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v31, v4);
  sub_241025510(v30, (unint64_t *)&qword_26B007200, MEMORY[0x263F07690]);
  sub_24115C9D0();
  swift_bridgeObjectRelease();
  sub_24114FE74((uint64_t)v15, (uint64_t)v13, &qword_26B006930, MEMORY[0x263F06EA8]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v13, 1, v1) == 1)
  {
    sub_241025510((uint64_t)v15, &qword_26B006930, MEMORY[0x263F06EA8]);
  }
  else
  {
    uint64_t v32 = v15;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v3, v13, v1);
    id v33 = self;
    id v34 = objc_msgSend(v33, sel_sharedApplication);
    uint64_t v35 = (void *)sub_24115C9B0();
    unsigned int v36 = objc_msgSend(v34, sel_canOpenURL_, v35);

    if (v36)
    {
      id v37 = objc_msgSend(v33, sel_sharedApplication);
      uint64_t v38 = (void *)sub_24115C9B0();
      sub_241062128(MEMORY[0x263F8EE78]);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_2411502E8(&qword_268CF05B8, type metadata accessor for OpenExternalURLOptionsKey);
      BOOL v39 = (void *)sub_241160620();
      swift_bridgeObjectRelease();
      objc_msgSend(v37, sel_openURL_options_completionHandler_, v38, v39, 0);
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v3, v1);
    uint64_t v13 = v32;
  }
  return sub_241025510((uint64_t)v13, &qword_26B006930, MEMORY[0x263F06EA8]);
}

uint64_t sub_24114BE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24115F790();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  uint64_t v9 = sub_24115F780();
  os_log_type_t v10 = sub_241160D10();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v20 = v5;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v21 = a3;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    v19[1] = v12 + 4;
    uint64_t v14 = sub_241161A00();
    uint64_t v22 = sub_24101F0A4(v14, v15, &v23);
    sub_241161430();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_241007000, v9, v10, "[%s] Did tap 'x (Dismiss)' in Remote Schedule Unavailable Data Source unavailable item", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v13, -1, -1);
    uint64_t v16 = v12;
    a3 = v21;
    MEMORY[0x2456180C0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  swift_retain();
  sub_24115F520();
  return swift_release();
}

uint64_t sub_24114C0B0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v34 = a3;
  void aBlock[6] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_241160410();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v38 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_241160440();
  uint64_t v36 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v35 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24115F790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115F740();
  id v13 = a2;
  id v14 = a2;
  unint64_t v15 = sub_24115F780();
  os_log_type_t v16 = sub_241160D10();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v31 = v9;
    uint64_t v32 = v5;
    uint64_t v33 = v4;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = (void *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    aBlock[0] = v30;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v19 = sub_241161A00();
    uint64_t v39 = sub_24101F0A4(v19, v20, aBlock);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2112;
    if (a2)
    {
      id v21 = a2;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v39 = v22;
      sub_241161430();
    }
    else
    {
      uint64_t v39 = 0;
      sub_241161430();
      uint64_t v22 = 0;
    }
    *uint64_t v18 = v22;

    _os_log_impl(&dword_241007000, v15, v16, "[%s] Did save records with error: %@", (uint8_t *)v17, 0x16u);
    sub_24114F530(0, (unint64_t *)&qword_26B0071F0, (unint64_t *)&qword_26B007218, 0x263F8C6D0, MEMORY[0x263F8D8F0]);
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v18, -1, -1);
    uint64_t v23 = v30;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v23, -1, -1);
    MEMORY[0x2456180C0](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v31);
    uint64_t v5 = v32;
    uint64_t v4 = v33;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  uint64_t v24 = (void *)sub_241160EF0();
  aBlock[4] = (uint64_t)sub_24114F528;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24101AFBC;
  uint64_t aBlock[3] = (uint64_t)&unk_26F558558;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  unint64_t v26 = v35;
  sub_241160430();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2411502E8(&qword_26B0072E0, MEMORY[0x263F8F030]);
  sub_241150330(0, (unint64_t *)&unk_26B0072F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_241024138();
  uint64_t v27 = v38;
  sub_2411614F0();
  MEMORY[0x245616D40](0, v26, v27, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v27, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v26, v37);
}

uint64_t sub_24114C678()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24115DE50();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall RemoteScheduleUnavailableDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t RemoteScheduleUnavailableDataSource.layout(for:environment:)()
{
  uint64_t v0 = sub_24115DF90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  os_log_type_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115DF30();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_24115DF40();
  uint64_t v5 = sub_24115DF80();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

void RemoteScheduleUnavailableDataSource.__allocating_init(arrangedSections:identifier:)()
{
}

void RemoteScheduleUnavailableDataSource.init(arrangedSections:identifier:)()
{
}

uint64_t sub_24114C8A4()
{
  swift_release();

  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t RemoteScheduleUnavailableDataSource.deinit()
{
  uint64_t v0 = sub_24115DE70();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RemoteScheduleUnavailableDataSource.__deallocating_deinit()
{
  uint64_t v0 = sub_24115DE70();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_24114C9EC()
{
  return sub_241160DE0();
}

uint64_t sub_24114CA5C()
{
  return sub_2411502E8(&qword_268CF2648, (void (*)(uint64_t))type metadata accessor for RemoteScheduleUnavailableDataSource);
}

uint64_t type metadata accessor for RemoteScheduleUnavailableDataSource()
{
  uint64_t result = qword_268CF2650;
  if (!qword_268CF2650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24114CAF0()
{
  uint64_t v0 = sub_24115DF90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  os_log_type_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115DF30();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_24115DF40();
  uint64_t v5 = sub_24115DF80();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_24114CBE8()
{
  return sub_24115E790();
}

uint64_t sub_24114CC44()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24114CCB0()
{
  return type metadata accessor for RemoteScheduleUnavailableDataSource();
}

id sub_24114CCB8(uint64_t a1, void *a2)
{
  os_log_type_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

void *sub_24114CD20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_24106D4D0(0, (unint64_t *)&qword_26B007390);
  os_log_type_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_24114F598((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_24101E92C();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_24114CE14(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_241161530();
    if (v2) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  if (v2 <= 0)
  {
    os_log_type_t v3 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    sub_24106D4D0(0, (unint64_t *)&qword_26B0073A0);
    os_log_type_t v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24114F798(&v8, v3 + 4, v2, a1);
  uint64_t result = sub_24101E92C();
  if (v6 == (void *)v2) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_24114CF20(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_24106D4D0(0, (unint64_t *)&qword_26B007390);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      long long v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_24114D0A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  if (v5 <= 0)
  {
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(type metadata accessor for MedicationHighlightsContent.HighlightDay() - 8);
      unint64_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      uint64_t v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_241150330(0, &qword_26B005FA0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsContent.HighlightDay, MEMORY[0x263F8E0F8]);
  uint64_t v8 = *(void *)(type metadata accessor for MedicationHighlightsContent.HighlightDay() - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    void v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

void *sub_24114D30C(unint64_t a1)
{
  return sub_24114D324(a1, (void (*)(void *, uint64_t, unint64_t))sub_2410D51E0);
}

void *sub_24114D324(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      sub_24106D4D0(0, (unint64_t *)&qword_26B0073A0);
      uint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = j__malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v4;
      _OWORD v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_2411616E0();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v5;
}

size_t sub_24114D43C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_241150330(0, &qword_26B005F38, MEMORY[0x263F45738], MEMORY[0x263F8E0F8]);
  uint64_t v3 = *(void *)(sub_24115D320() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      _OWORD v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_24114FAB8(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_24101E92C();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24114D5BC(uint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(void *))
{
  uint64_t v6 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v6 = a2(v6);
    *a1 = v6;
  }
  uint64_t v8 = *(void *)(v6 + 16);
  v10[0] = v6 + 32;
  v10[1] = v8;
  a3(v10);
  return sub_241161650();
}

uint64_t sub_24114D650()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24114D660()
{
  return sub_24114B768(*(void *)(v0 + 16));
}

uint64_t sub_24114D668()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24114D6A0()
{
  uint64_t v1 = sub_24115F570();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24114D74C()
{
  uint64_t v1 = *(void *)(sub_24115F570() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + v3);
  uint64_t v5 = *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_24114BE50(v0 + v2, v4, v5);
}

uint64_t sub_24114D7E4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_241161840();
  if (result < v4)
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 >= -1)
    {
      uint64_t v7 = result;
      uint64_t v94 = a1;
      if (v4 < 2)
      {
        uint64_t v10 = (char *)MEMORY[0x263F8EE78];
        uint64_t v108 = MEMORY[0x263F8EE78];
        __dst = (char *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
        if (v4 != 1)
        {
          unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
          if (v13 < 2) {
            goto LABEL_110;
          }
          goto LABEL_98;
        }
      }
      else
      {
        uint64_t v8 = v6 >> 1;
        sub_241024708(0, (unint64_t *)&qword_26B007360);
        uint64_t v9 = sub_2411609F0();
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
        __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
        uint64_t v108 = v9;
      }
      uint64_t v11 = 0;
      uint64_t v12 = *a1;
      uint64_t v96 = *a1 + 16;
      uint64_t v97 = v7;
      uint64_t v95 = *a1 - 8;
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v102 = v4;
      uint64_t v107 = *a1;
      while (1)
      {
        uint64_t v14 = v11++;
        uint64_t v103 = v14;
        if (v11 < v4)
        {
          unint64_t v15 = *(void **)(v12 + 8 * v11);
          uint64_t v16 = *(void **)(v12 + 8 * v14);
          sub_241024708(0, (unint64_t *)&qword_26B007360);
          id v98 = v15;
          id v17 = v16;
          sub_24115F460();
          sub_24115F460();
          sub_24108741C();
          uint64_t v104 = sub_241161490();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v11 = v14 + 2;
          if (v14 + 2 < v4)
          {
            uint64_t v99 = v10;
            uint64_t v18 = (id *)(v96 + 8 * v14);
            while (1)
            {
              uint64_t v19 = *(v18 - 1);
              id v20 = *v18;
              id v21 = v19;
              sub_24115F460();
              sub_24115F460();
              uint64_t v22 = sub_241161490();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v104 == -1) == (v22 != -1)) {
                break;
              }
              ++v11;
              ++v18;
              uint64_t v4 = v102;
              if (v102 == v11)
              {
                uint64_t v11 = v102;
                uint64_t v10 = v99;
                goto LABEL_22;
              }
            }
            uint64_t v10 = v99;
            uint64_t v4 = v102;
LABEL_22:
            uint64_t v14 = v103;
          }
          if (v104 == -1)
          {
            if (v11 < v14) {
              goto LABEL_136;
            }
            if (v14 < v11)
            {
              uint64_t v23 = (uint64_t *)(v95 + 8 * v11);
              uint64_t v24 = v11;
              uint64_t v25 = v14;
              unint64_t v26 = (uint64_t *)(v107 + 8 * v14);
              do
              {
                if (v25 != --v24)
                {
                  if (!v107) {
                    goto LABEL_139;
                  }
                  uint64_t v27 = *v26;
                  *unint64_t v26 = *v23;
                  uint64_t *v23 = v27;
                }
                ++v25;
                --v23;
                ++v26;
              }
              while (v25 < v24);
            }
          }
        }
        if (v11 < v4)
        {
          if (__OFSUB__(v11, v14)) {
            goto LABEL_132;
          }
          if (v11 - v14 < v97)
          {
            if (__OFADD__(v14, v97)) {
              goto LABEL_134;
            }
            if (v14 + v97 >= v4) {
              uint64_t v28 = v4;
            }
            else {
              uint64_t v28 = v14 + v97;
            }
            if (v28 < v14)
            {
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              break;
            }
            if (v11 != v28)
            {
              uint64_t v100 = v10;
              sub_241024708(0, (unint64_t *)&qword_26B007360);
              uint64_t v29 = v107;
              uint64_t v30 = v95 + 8 * v11;
              uint64_t v101 = v28;
              do
              {
                uint64_t v31 = *(void **)(v29 + 8 * v11);
                uint64_t v105 = v30;
                while (1)
                {
                  uint64_t v32 = *(void **)v30;
                  id v33 = v31;
                  id v34 = v32;
                  sub_24115F460();
                  sub_24115F460();
                  sub_24108741C();
                  uint64_t v35 = sub_241161490();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v35 != -1) {
                    break;
                  }
                  uint64_t v29 = v107;
                  if (!v107) {
                    goto LABEL_137;
                  }
                  uint64_t v36 = *(void **)v30;
                  uint64_t v31 = *(void **)(v30 + 8);
                  *(void *)uint64_t v30 = v31;
                  *(void *)(v30 + 8) = v36;
                  v30 -= 8;
                  if (v11 == ++v14) {
                    goto LABEL_42;
                  }
                }
                uint64_t v29 = v107;
LABEL_42:
                ++v11;
                uint64_t v14 = v103;
                uint64_t v30 = v105 + 8;
              }
              while (v11 != v101);
              uint64_t v11 = v101;
              uint64_t v10 = v100;
            }
          }
        }
        if (v11 < v14) {
          goto LABEL_127;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_24114F2EC(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v38 = *((void *)v10 + 2);
        unint64_t v37 = *((void *)v10 + 3);
        unint64_t v13 = v38 + 1;
        uint64_t v12 = v107;
        if (v38 >= v37 >> 1)
        {
          uint64_t v87 = sub_24114F2EC((char *)(v37 > 1), v38 + 1, 1, v10);
          uint64_t v12 = v107;
          uint64_t v10 = v87;
        }
        *((void *)v10 + 2) = v13;
        uint64_t v39 = v10 + 32;
        uint64_t v40 = &v10[16 * v38 + 32];
        *(void *)uint64_t v40 = v14;
        *((void *)v40 + 1) = v11;
        if (v38)
        {
          while (1)
          {
            unint64_t v41 = v13 - 1;
            if (v13 >= 4)
            {
              uint64_t v46 = &v39[16 * v13];
              uint64_t v47 = *((void *)v46 - 8);
              uint64_t v48 = *((void *)v46 - 7);
              BOOL v52 = __OFSUB__(v48, v47);
              uint64_t v49 = v48 - v47;
              if (v52) {
                goto LABEL_116;
              }
              uint64_t v51 = *((void *)v46 - 6);
              uint64_t v50 = *((void *)v46 - 5);
              BOOL v52 = __OFSUB__(v50, v51);
              uint64_t v44 = v50 - v51;
              char v45 = v52;
              if (v52) {
                goto LABEL_117;
              }
              unint64_t v53 = v13 - 2;
              uint64_t v54 = &v39[16 * v13 - 32];
              uint64_t v56 = *(void *)v54;
              uint64_t v55 = *((void *)v54 + 1);
              BOOL v52 = __OFSUB__(v55, v56);
              uint64_t v57 = v55 - v56;
              if (v52) {
                goto LABEL_119;
              }
              BOOL v52 = __OFADD__(v44, v57);
              uint64_t v58 = v44 + v57;
              if (v52) {
                goto LABEL_122;
              }
              if (v58 >= v49)
              {
                unint64_t v76 = &v39[16 * v41];
                uint64_t v78 = *(void *)v76;
                uint64_t v77 = *((void *)v76 + 1);
                BOOL v52 = __OFSUB__(v77, v78);
                uint64_t v79 = v77 - v78;
                if (v52) {
                  goto LABEL_126;
                }
                BOOL v69 = v44 < v79;
                goto LABEL_86;
              }
            }
            else
            {
              if (v13 != 3)
              {
                uint64_t v70 = *((void *)v10 + 4);
                uint64_t v71 = *((void *)v10 + 5);
                BOOL v52 = __OFSUB__(v71, v70);
                uint64_t v63 = v71 - v70;
                char v64 = v52;
                goto LABEL_80;
              }
              uint64_t v43 = *((void *)v10 + 4);
              uint64_t v42 = *((void *)v10 + 5);
              BOOL v52 = __OFSUB__(v42, v43);
              uint64_t v44 = v42 - v43;
              char v45 = v52;
            }
            if (v45) {
              goto LABEL_118;
            }
            unint64_t v53 = v13 - 2;
            char v59 = &v39[16 * v13 - 32];
            uint64_t v61 = *(void *)v59;
            uint64_t v60 = *((void *)v59 + 1);
            BOOL v62 = __OFSUB__(v60, v61);
            uint64_t v63 = v60 - v61;
            char v64 = v62;
            if (v62) {
              goto LABEL_121;
            }
            uint64_t v65 = &v39[16 * v41];
            uint64_t v67 = *(void *)v65;
            uint64_t v66 = *((void *)v65 + 1);
            BOOL v52 = __OFSUB__(v66, v67);
            uint64_t v68 = v66 - v67;
            if (v52) {
              goto LABEL_124;
            }
            if (__OFADD__(v63, v68)) {
              goto LABEL_125;
            }
            if (v63 + v68 >= v44)
            {
              BOOL v69 = v44 < v68;
LABEL_86:
              if (v69) {
                unint64_t v41 = v53;
              }
              goto LABEL_88;
            }
LABEL_80:
            if (v64) {
              goto LABEL_120;
            }
            unint64_t v72 = &v39[16 * v41];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v52 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v52) {
              goto LABEL_123;
            }
            if (v75 < v63) {
              goto LABEL_14;
            }
LABEL_88:
            unint64_t v80 = v41 - 1;
            if (v41 - 1 >= v13)
            {
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
              goto LABEL_135;
            }
            if (!v12) {
              goto LABEL_138;
            }
            uint64_t v81 = v10;
            id v82 = &v39[16 * v80];
            uint64_t v83 = *(void *)v82;
            uint64_t v84 = &v39[16 * v41];
            uint64_t v85 = *((void *)v84 + 1);
            sub_24114EAD0((id *)(v12 + 8 * *(void *)v82), (id *)(v12 + 8 * *(void *)v84), v12 + 8 * v85, __dst);
            if (v1) {
              goto LABEL_110;
            }
            if (v85 < v83) {
              goto LABEL_113;
            }
            if (v41 > *((void *)v81 + 2)) {
              goto LABEL_114;
            }
            *(void *)id v82 = v83;
            *(void *)&v39[16 * v80 + 8] = v85;
            unint64_t v86 = *((void *)v81 + 2);
            if (v41 >= v86) {
              goto LABEL_115;
            }
            uint64_t v10 = v81;
            unint64_t v13 = v86 - 1;
            memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
            *((void *)v81 + 2) = v86 - 1;
            uint64_t v12 = v107;
            if (v86 <= 2) {
              goto LABEL_14;
            }
          }
        }
        unint64_t v13 = 1;
LABEL_14:
        uint64_t v4 = v102;
        if (v11 >= v102)
        {
          uint64_t v2 = v1;
          if (v13 < 2)
          {
LABEL_110:
            swift_bridgeObjectRelease();
            *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
            sub_2411609C0();
            return swift_bridgeObjectRelease();
          }
LABEL_98:
          uint64_t v88 = *v94;
          while (1)
          {
            unint64_t v89 = v13 - 2;
            if (v13 < 2) {
              goto LABEL_128;
            }
            if (!v88) {
              goto LABEL_140;
            }
            uint64_t v90 = *(void *)&v10[16 * v89 + 32];
            uint64_t v91 = *(void *)&v10[16 * v13 + 24];
            sub_24114EAD0((id *)(v88 + 8 * v90), (id *)(v88 + 8 * *(void *)&v10[16 * v13 + 16]), v88 + 8 * v91, __dst);
            if (v2) {
              goto LABEL_110;
            }
            if (v91 < v90) {
              goto LABEL_129;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v10 = sub_24114F4D4((uint64_t)v10);
            }
            if (v89 >= *((void *)v10 + 2)) {
              goto LABEL_130;
            }
            uint64_t v92 = &v10[16 * v89 + 32];
            *(void *)uint64_t v92 = v90;
            *((void *)v92 + 1) = v91;
            unint64_t v93 = *((void *)v10 + 2);
            if (v13 > v93) {
              goto LABEL_131;
            }
            memmove(&v10[16 * v13 + 16], &v10[16 * v13 + 32], 16 * (v93 - v13));
            *((void *)v10 + 2) = v93 - 1;
            unint64_t v13 = v93 - 1;
            if (v93 <= 2) {
              goto LABEL_110;
            }
          }
        }
      }
    }
    uint64_t result = sub_2411616A0();
    __break(1u);
    return result;
  }
  if (v4 < 0) {
    goto LABEL_133;
  }
  if (v4) {
    return sub_241117868(0, v4, 1, a1);
  }
  return result;
}

uint64_t sub_24114E098(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_241161840();
  if (result < v4)
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 >= -1)
    {
      uint64_t v7 = result;
      uint64_t v101 = a1;
      if (v4 < 2)
      {
        uint64_t v10 = (char *)MEMORY[0x263F8EE78];
        uint64_t v113 = MEMORY[0x263F8EE78];
        __dst = (char *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
        if (v4 != 1)
        {
          unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
          if (v13 < 2) {
            goto LABEL_109;
          }
          goto LABEL_97;
        }
      }
      else
      {
        uint64_t v8 = v6 >> 1;
        sub_241024708(0, &qword_268CF1AC8);
        uint64_t v9 = sub_2411609F0();
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
        __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
        uint64_t v113 = v9;
      }
      uint64_t v11 = 0;
      uint64_t v12 = *a1;
      uint64_t v103 = *a1 + 16;
      uint64_t v104 = v7;
      uint64_t v102 = *a1 - 8;
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v108 = v4;
      uint64_t v112 = *a1;
      while (1)
      {
        uint64_t v14 = v11++;
        uint64_t v107 = v14;
        if (v11 < v4)
        {
          uint64_t v105 = v10;
          unint64_t v15 = *(void **)(v12 + 8 * v14);
          id v16 = *(id *)(v12 + 8 * v11);
          id v17 = v15;
          id v18 = objc_msgSend(v16, sel_name);
          sub_241160730();

          id v19 = objc_msgSend(v17, sel_name);
          sub_241160730();

          uint64_t v4 = v108;
          sub_24108741C();
          uint64_t v109 = sub_241161490();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v11 = v14 + 2;
          if (v14 + 2 < v108)
          {
            id v20 = (id *)(v103 + 8 * v14);
            while (1)
            {
              id v21 = *(v20 - 1);
              id v22 = *v20;
              id v23 = v21;
              id v24 = objc_msgSend(v22, sel_name);
              sub_241160730();

              id v25 = objc_msgSend(v23, sel_name);
              sub_241160730();

              uint64_t v26 = sub_241161490();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v109 == -1) == (v26 != -1)) {
                break;
              }
              ++v11;
              ++v20;
              uint64_t v4 = v108;
              if (v108 == v11)
              {
                uint64_t v11 = v108;
                goto LABEL_22;
              }
            }
            uint64_t v4 = v108;
          }
LABEL_22:
          uint64_t v10 = v105;
          uint64_t v12 = v112;
          if (v109 == -1)
          {
            if (v11 < v14) {
              goto LABEL_135;
            }
            if (v14 < v11)
            {
              uint64_t v27 = (uint64_t *)(v102 + 8 * v11);
              uint64_t v28 = v11;
              uint64_t v29 = v14;
              uint64_t v30 = (uint64_t *)(v112 + 8 * v14);
              do
              {
                if (v29 != --v28)
                {
                  if (!v112) {
                    goto LABEL_138;
                  }
                  uint64_t v31 = *v30;
                  *uint64_t v30 = *v27;
                  uint64_t *v27 = v31;
                }
                ++v29;
                --v27;
                ++v30;
              }
              while (v29 < v28);
            }
          }
        }
        if (v11 < v4)
        {
          if (__OFSUB__(v11, v14)) {
            goto LABEL_131;
          }
          if (v11 - v14 < v104)
          {
            if (__OFADD__(v14, v104)) {
              goto LABEL_133;
            }
            if (v14 + v104 >= v4) {
              uint64_t v32 = v4;
            }
            else {
              uint64_t v32 = v14 + v104;
            }
            if (v32 < v14)
            {
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              break;
            }
            if (v11 != v32)
            {
              uint64_t v106 = v32;
              uint64_t v33 = v102 + 8 * v11;
              do
              {
                id v34 = *(void **)(v12 + 8 * v11);
                uint64_t v35 = v14;
                uint64_t v110 = v33;
                uint64_t v36 = v33;
                while (1)
                {
                  unint64_t v37 = *(void **)v36;
                  id v38 = v34;
                  id v39 = v37;
                  id v40 = objc_msgSend(v38, sel_name);
                  sub_241160730();

                  id v41 = objc_msgSend(v39, sel_name);
                  sub_241160730();

                  sub_24108741C();
                  uint64_t v42 = sub_241161490();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v42 != -1) {
                    break;
                  }
                  uint64_t v12 = v112;
                  if (!v112) {
                    goto LABEL_136;
                  }
                  uint64_t v43 = *(void **)v36;
                  id v34 = *(void **)(v36 + 8);
                  *(void *)uint64_t v36 = v34;
                  *(void *)(v36 + 8) = v43;
                  v36 -= 8;
                  if (v11 == ++v35) {
                    goto LABEL_41;
                  }
                }
                uint64_t v12 = v112;
LABEL_41:
                ++v11;
                uint64_t v33 = v110 + 8;
                uint64_t v14 = v107;
              }
              while (v11 != v106);
              uint64_t v11 = v106;
            }
          }
        }
        if (v11 < v14) {
          goto LABEL_126;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_24114F2EC(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v45 = *((void *)v10 + 2);
        unint64_t v44 = *((void *)v10 + 3);
        unint64_t v13 = v45 + 1;
        uint64_t v12 = v112;
        if (v45 >= v44 >> 1)
        {
          uint64_t v94 = sub_24114F2EC((char *)(v44 > 1), v45 + 1, 1, v10);
          uint64_t v12 = v112;
          uint64_t v10 = v94;
        }
        *((void *)v10 + 2) = v13;
        uint64_t v46 = v10 + 32;
        uint64_t v47 = &v10[16 * v45 + 32];
        *(void *)uint64_t v47 = v14;
        *((void *)v47 + 1) = v11;
        if (v45)
        {
          while (1)
          {
            unint64_t v48 = v13 - 1;
            if (v13 >= 4)
            {
              unint64_t v53 = &v46[16 * v13];
              uint64_t v54 = *((void *)v53 - 8);
              uint64_t v55 = *((void *)v53 - 7);
              BOOL v59 = __OFSUB__(v55, v54);
              uint64_t v56 = v55 - v54;
              if (v59) {
                goto LABEL_115;
              }
              uint64_t v58 = *((void *)v53 - 6);
              uint64_t v57 = *((void *)v53 - 5);
              BOOL v59 = __OFSUB__(v57, v58);
              uint64_t v51 = v57 - v58;
              char v52 = v59;
              if (v59) {
                goto LABEL_116;
              }
              unint64_t v60 = v13 - 2;
              uint64_t v61 = &v46[16 * v13 - 32];
              uint64_t v63 = *(void *)v61;
              uint64_t v62 = *((void *)v61 + 1);
              BOOL v59 = __OFSUB__(v62, v63);
              uint64_t v64 = v62 - v63;
              if (v59) {
                goto LABEL_118;
              }
              BOOL v59 = __OFADD__(v51, v64);
              uint64_t v65 = v51 + v64;
              if (v59) {
                goto LABEL_121;
              }
              if (v65 >= v56)
              {
                uint64_t v83 = &v46[16 * v48];
                uint64_t v85 = *(void *)v83;
                uint64_t v84 = *((void *)v83 + 1);
                BOOL v59 = __OFSUB__(v84, v85);
                uint64_t v86 = v84 - v85;
                if (v59) {
                  goto LABEL_125;
                }
                BOOL v76 = v51 < v86;
                goto LABEL_85;
              }
            }
            else
            {
              if (v13 != 3)
              {
                uint64_t v77 = *((void *)v10 + 4);
                uint64_t v78 = *((void *)v10 + 5);
                BOOL v59 = __OFSUB__(v78, v77);
                uint64_t v70 = v78 - v77;
                char v71 = v59;
                goto LABEL_79;
              }
              uint64_t v50 = *((void *)v10 + 4);
              uint64_t v49 = *((void *)v10 + 5);
              BOOL v59 = __OFSUB__(v49, v50);
              uint64_t v51 = v49 - v50;
              char v52 = v59;
            }
            if (v52) {
              goto LABEL_117;
            }
            unint64_t v60 = v13 - 2;
            uint64_t v66 = &v46[16 * v13 - 32];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v69 = __OFSUB__(v67, v68);
            uint64_t v70 = v67 - v68;
            char v71 = v69;
            if (v69) {
              goto LABEL_120;
            }
            unint64_t v72 = &v46[16 * v48];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v59 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v59) {
              goto LABEL_123;
            }
            if (__OFADD__(v70, v75)) {
              goto LABEL_124;
            }
            if (v70 + v75 >= v51)
            {
              BOOL v76 = v51 < v75;
LABEL_85:
              if (v76) {
                unint64_t v48 = v60;
              }
              goto LABEL_87;
            }
LABEL_79:
            if (v71) {
              goto LABEL_119;
            }
            uint64_t v79 = &v46[16 * v48];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v59 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v59) {
              goto LABEL_122;
            }
            if (v82 < v70) {
              goto LABEL_14;
            }
LABEL_87:
            unint64_t v87 = v48 - 1;
            if (v48 - 1 >= v13)
            {
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
              goto LABEL_134;
            }
            if (!v12) {
              goto LABEL_137;
            }
            uint64_t v88 = v10;
            unint64_t v89 = &v46[16 * v87];
            uint64_t v90 = *(void *)v89;
            uint64_t v91 = &v46[16 * v48];
            uint64_t v92 = *((void *)v91 + 1);
            sub_24114EEE4((id *)(v12 + 8 * *(void *)v89), (id *)(v12 + 8 * *(void *)v91), v12 + 8 * v92, __dst);
            if (v1) {
              goto LABEL_109;
            }
            if (v92 < v90) {
              goto LABEL_112;
            }
            if (v48 > *((void *)v88 + 2)) {
              goto LABEL_113;
            }
            *(void *)unint64_t v89 = v90;
            *(void *)&v46[16 * v87 + 8] = v92;
            unint64_t v93 = *((void *)v88 + 2);
            if (v48 >= v93) {
              goto LABEL_114;
            }
            uint64_t v10 = v88;
            unint64_t v13 = v93 - 1;
            memmove(&v46[16 * v48], v91 + 16, 16 * (v93 - 1 - v48));
            *((void *)v88 + 2) = v93 - 1;
            uint64_t v12 = v112;
            if (v93 <= 2) {
              goto LABEL_14;
            }
          }
        }
        unint64_t v13 = 1;
LABEL_14:
        uint64_t v4 = v108;
        if (v11 >= v108)
        {
          uint64_t v2 = v1;
          if (v13 < 2)
          {
LABEL_109:
            swift_bridgeObjectRelease();
            *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
            sub_2411609C0();
            return swift_bridgeObjectRelease();
          }
LABEL_97:
          uint64_t v95 = *v101;
          while (1)
          {
            unint64_t v96 = v13 - 2;
            if (v13 < 2) {
              goto LABEL_127;
            }
            if (!v95) {
              goto LABEL_139;
            }
            uint64_t v97 = *(void *)&v10[16 * v96 + 32];
            uint64_t v98 = *(void *)&v10[16 * v13 + 24];
            sub_24114EEE4((id *)(v95 + 8 * v97), (id *)(v95 + 8 * *(void *)&v10[16 * v13 + 16]), v95 + 8 * v98, __dst);
            if (v2) {
              goto LABEL_109;
            }
            if (v98 < v97) {
              goto LABEL_128;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v10 = sub_24114F4D4((uint64_t)v10);
            }
            if (v96 >= *((void *)v10 + 2)) {
              goto LABEL_129;
            }
            uint64_t v99 = &v10[16 * v96 + 32];
            *(void *)uint64_t v99 = v97;
            *((void *)v99 + 1) = v98;
            unint64_t v100 = *((void *)v10 + 2);
            if (v13 > v100) {
              goto LABEL_130;
            }
            memmove(&v10[16 * v13 + 16], &v10[16 * v13 + 32], 16 * (v100 - v13));
            *((void *)v10 + 2) = v100 - 1;
            unint64_t v13 = v100 - 1;
            if (v100 <= 2) {
              goto LABEL_109;
            }
          }
        }
      }
    }
    uint64_t result = sub_2411616A0();
    __break(1u);
    return result;
  }
  if (v4 < 0) {
    goto LABEL_132;
  }
  if (v4) {
    return sub_24114E95C(0, v4, 1, a1);
  }
  return result;
}

uint64_t sub_24114E95C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v16 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v18 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v6 = *(void **)(v18 + 8 * v4);
    uint64_t v7 = v16;
    uint64_t v17 = v5;
    while (1)
    {
      uint64_t v8 = *(void **)v5;
      id v9 = v6;
      id v10 = v8;
      id v11 = objc_msgSend(v9, sel_name);
      sub_241160730();

      id v12 = objc_msgSend(v10, sel_name);
      sub_241160730();

      sub_24108741C();
      uint64_t v13 = sub_241161490();

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v13 != -1)
      {
LABEL_4:
        ++v4;
        uint64_t v5 = v17 + 8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v18) {
        break;
      }
      uint64_t v14 = *(void **)v5;
      uint64_t v6 = *(void **)(v5 + 8);
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v14;
      v5 -= 8;
      if (v4 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24114EAD0(id *a1, id *__src, unint64_t a3, char *__dst)
{
  uint64_t v5 = __src;
  uint64_t v6 = (char *)__src - (char *)a1;
  uint64_t v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0) {
    uint64_t v7 = (char *)__src - (char *)a1;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v10 = a3 - (void)__src;
  }
  uint64_t v11 = v10 >> 3;
  id v38 = a1;
  unint64_t v37 = (void **)__dst;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (__dst != (char *)__src || &__src[v11] <= (id *)__dst) {
        memmove(__dst, __src, 8 * v11);
      }
      uint64_t v30 = __dst;
      id v20 = &__dst[8 * v11];
      uint64_t v36 = v20;
      id v38 = v5;
      if (a1 < v5 && v9 >= 8)
      {
        sub_241024708(0, (unint64_t *)&qword_26B007360);
        id v21 = (id *)(a3 - 8);
        id v22 = v5;
        do
        {
          uint64_t v32 = v20;
          id v34 = v21 + 1;
          id v24 = (void *)*((void *)v20 - 1);
          v20 -= 8;
          id v23 = v24;
          id v25 = *--v22;
          id v26 = v23;
          id v27 = v25;
          sub_24115F460();
          sub_24115F460();
          sub_24108741C();
          uint64_t v28 = sub_241161490();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v28 == -1)
          {
            id v20 = v32;
            if (v34 != v5 || v21 >= v5) {
              *id v21 = *v22;
            }
            id v38 = v22;
          }
          else
          {
            uint64_t v36 = v20;
            id v22 = v5;
            if (v34 < (id *)v32 || v21 >= (id *)v32 || v34 != (id *)v32) {
              *id v21 = *(id *)v20;
            }
          }
          if (v22 <= a1) {
            break;
          }
          --v21;
          uint64_t v5 = v22;
        }
        while (v20 > v30);
      }
      goto LABEL_42;
    }
  }
  else if (v6 >= -7)
  {
    if (__dst != (char *)a1 || &a1[v8] <= (id *)__dst) {
      memmove(__dst, a1, 8 * v8);
    }
    uint64_t v33 = (void **)&__dst[8 * v8];
    uint64_t v36 = (char *)v33;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      sub_241024708(0, (unint64_t *)&qword_26B007360);
      id v12 = (void **)__dst;
      uint64_t v13 = a1;
      do
      {
        uint64_t v14 = *v12;
        id v15 = *v5;
        uint64_t v16 = v5;
        id v17 = v14;
        sub_24115F460();
        sub_24115F460();
        sub_24108741C();
        uint64_t v18 = sub_241161490();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18 == -1)
        {
          id v19 = v16 + 1;
          if (v13 < v16 || v13 >= v19 || v13 != v16) {
            *uint64_t v13 = *v16;
          }
        }
        else
        {
          if (v13 != v12) {
            *uint64_t v13 = *v12;
          }
          unint64_t v37 = ++v12;
          id v19 = v16;
        }
        ++v13;
        if (v12 >= v33) {
          break;
        }
        uint64_t v5 = v19;
      }
      while ((unint64_t)v19 < a3);
      id v38 = v13;
    }
LABEL_42:
    sub_24114F418((void **)&v38, (const void **)&v37, &v36);
    return 1;
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

uint64_t sub_24114EEE4(id *a1, id *__src, unint64_t a3, char *__dst)
{
  uint64_t v5 = __src;
  uint64_t v6 = (char *)__src - (char *)a1;
  uint64_t v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0) {
    uint64_t v7 = (char *)__src - (char *)a1;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v10 = a3 - (void)__src;
  }
  uint64_t v11 = v10 >> 3;
  id v41 = a1;
  id v40 = (void **)__dst;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (__dst != (char *)__src || &__src[v11] <= (id *)__dst) {
        memmove(__dst, __src, 8 * v11);
      }
      uint64_t v33 = __dst;
      id v21 = &__dst[8 * v11];
      id v39 = v21;
      id v41 = v5;
      if (a1 < v5 && v9 >= 8)
      {
        id v22 = (id *)(a3 - 8);
        id v23 = v5;
        do
        {
          uint64_t v35 = v21;
          unint64_t v37 = v22 + 1;
          id v25 = (void *)*((void *)v21 - 1);
          v21 -= 8;
          id v24 = v25;
          id v26 = *--v23;
          id v27 = v24;
          id v28 = v26;
          id v29 = objc_msgSend(v27, sel_name);
          sub_241160730();

          id v30 = objc_msgSend(v28, sel_name);
          sub_241160730();

          sub_24108741C();
          uint64_t v31 = sub_241161490();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31 == -1)
          {
            id v21 = v35;
            if (v37 != v5 || v22 >= v5) {
              id *v22 = *v23;
            }
            id v41 = v23;
          }
          else
          {
            id v39 = v21;
            id v23 = v5;
            if (v37 < (id *)v35 || v22 >= (id *)v35 || v37 != (id *)v35) {
              id *v22 = *(id *)v21;
            }
          }
          if (v23 <= a1) {
            break;
          }
          --v22;
          uint64_t v5 = v23;
        }
        while (v21 > v33);
      }
      goto LABEL_42;
    }
  }
  else if (v6 >= -7)
  {
    if (__dst != (char *)a1 || &a1[v8] <= (id *)__dst) {
      memmove(__dst, a1, 8 * v8);
    }
    uint64_t v36 = (void **)&__dst[8 * v8];
    id v39 = (char *)v36;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      id v12 = (void **)__dst;
      uint64_t v13 = a1;
      do
      {
        uint64_t v14 = *v12;
        id v15 = *v5;
        id v16 = v14;
        id v17 = objc_msgSend(v15, sel_name);
        sub_241160730();

        id v18 = objc_msgSend(v16, sel_name);
        sub_241160730();

        sub_24108741C();
        uint64_t v19 = sub_241161490();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v19 == -1)
        {
          id v20 = v5 + 1;
          if (v13 < v5 || v13 >= v20 || v13 != v5) {
            *uint64_t v13 = *v5;
          }
        }
        else
        {
          if (v13 != v12) {
            *uint64_t v13 = *v12;
          }
          id v40 = ++v12;
          id v20 = v5;
        }
        ++v13;
        if (v12 >= v36) {
          break;
        }
        uint64_t v5 = v20;
      }
      while ((unint64_t)v20 < a3);
      id v41 = v13;
    }
LABEL_42:
    sub_24114F418((void **)&v41, (const void **)&v40, &v39);
    return 1;
  }
  uint64_t result = sub_241161740();
  __break(1u);
  return result;
}

char *sub_24114F2EC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_241150330(0, &qword_268CF2660, (uint64_t (*)(uint64_t))sub_24114FE14, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24114F418(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_241161740();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_24114F4D4(uint64_t a1)
{
  return sub_24114F2EC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24114F4E8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24114F520(uint64_t a1, void *a2)
{
  return sub_24114C0B0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_24114F528()
{
  return sub_24114C678();
}

void sub_24114F530(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241024708(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_24114F598(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    _OWORD v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    id v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_24114F798(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  id v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_241161520();
    sub_241024708(0, (unint64_t *)&qword_26B007360);
    sub_241023228((unint64_t *)&qword_268CF0898, (unint64_t *)&qword_26B007360);
    uint64_t result = (void *)sub_241160BE0();
    uint64_t v4 = v27;
    uint64_t v7 = v28;
    uint64_t v8 = v29;
    int64_t v9 = v30;
    unint64_t v10 = v31;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v11 = 0;
    goto LABEL_38;
  }
  int64_t v9 = 0;
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = a4 + 56;
  uint64_t v8 = ~v19;
  uint64_t v20 = -v19;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v10 = v21 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v11 = 0;
LABEL_38:
    id v22 = v24;
LABEL_41:
    void *v22 = v4;
    v22[1] = v7;
    void v22[2] = v8;
    void v22[3] = v9;
    v22[4] = v10;
    return (void *)v11;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v11 = 0;
  int64_t v25 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_241161550()) {
        goto LABEL_40;
      }
      sub_241024708(0, (unint64_t *)&qword_26B007360);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v25)
    {
      unint64_t v10 = 0;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    if (v16) {
      goto LABEL_23;
    }
    int64_t v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      unint64_t v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25) {
        goto LABEL_44;
      }
      unint64_t v16 = *(void *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        int64_t v15 = v9 + 3;
        goto LABEL_23;
      }
      int64_t v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        unint64_t v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v17);
      if (!v16)
      {
        int64_t v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          unint64_t v10 = 0;
          int64_t v9 = v17;
          goto LABEL_40;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v15);
        if (!v16)
        {
          int64_t v18 = v9 + 6;
          while (v25 != v18)
          {
            unint64_t v16 = *(void *)(v7 + 8 * v18++);
            if (v16)
            {
              int64_t v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v10 = 0;
          int64_t v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v15 = v17;
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v9 = v15;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    id v14 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      uint64_t v11 = a3;
LABEL_40:
      uint64_t v8 = v23;
      id v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_24114FAB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24115D320();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v42 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v10);
  id v41 = (char *)&v32 - v13;
  uint64_t v43 = a4;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v15 = a4 + 56;
  uint64_t v14 = v16;
  uint64_t v37 = v15;
  uint64_t v17 = -1 << *(unsigned char *)(v15 - 24);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v31 = v37;
    *a1 = v43;
    a1[1] = v31;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(v15 - 24);
  uint64_t v35 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v38 = v9 + 32;
  uint64_t v39 = v9 + 16;
  int64_t v36 = (unint64_t)(63 - v17) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v40 = a3;
  id v22 = v41;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v24 = v23 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v28 = v42;
    uint64_t v29 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v42, *(void *)(v43 + 48) + v29 * v24, v8);
    int64_t v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v22, v28, v8);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v8);
    a3 = v40;
    if (v21 == v40) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v36) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v20 = v25;
  }
  v20 += 2;
  if (v25 + 1 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v36) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v20 = v25 + 3;
  if (v25 + 3 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v20;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v36)
  {
LABEL_32:
    unint64_t v19 = 0;
LABEL_36:
    a3 = v21;
LABEL_37:
    uint64_t v17 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v36)
    {
      unint64_t v19 = 0;
      int64_t v20 = v33;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_24114FE00()
{
}

void sub_24114FE14()
{
  if (!qword_268CF2668)
  {
    unint64_t v0 = sub_241160C60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2668);
    }
  }
}

uint64_t sub_24114FE74(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241150330(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_24114FEF4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_241020840(255, a3);
    unint64_t v4 = sub_241161860();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_24114FF4C()
{
  uint64_t v1 = sub_24115F570();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_241150024(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_24115F570() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_24100B740;
  return sub_241149B0C(a1, v6, v7, v8, v9);
}

void sub_241150148()
{
  if (!qword_268CF2688)
  {
    sub_241150248();
    sub_241024708(255, (unint64_t *)&qword_26B007340);
    sub_2411502E8(&qword_268CF2698, (void (*)(uint64_t))sub_241150248);
    sub_241023228((unint64_t *)&qword_26B007330, (unint64_t *)&qword_26B007340);
    unint64_t v0 = sub_24115FC00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2688);
    }
  }
}

void sub_241150248()
{
  if (!qword_268CF2690)
  {
    sub_241150330(255, &qword_268CF2670, MEMORY[0x263F44CE0], MEMORY[0x263F8D8F0]);
    unint64_t v0 = sub_24115FC20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268CF2690);
    }
  }
}

uint64_t sub_2411502E0(uint64_t a1)
{
  return sub_241148D4C(a1);
}

uint64_t sub_2411502E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_241150330(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411503A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t **a4@<X8>)
{
  uint64_t v8 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = &v37[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v37[-v12];
  uint64_t v42 = sub_24115F790();
  uint64_t v14 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v16 = &v37[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24115F730();
  sub_24102732C(a2, (uint64_t)v13);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_24115F780();
  os_log_type_t v18 = sub_241160D50();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    id v41 = a4;
    uint64_t v21 = v20;
    uint64_t v39 = swift_slowAlloc();
    uint64_t v43 = v39;
    uint64_t v44 = a3;
    *(_DWORD *)uint64_t v21 = 136446978;
    int v38 = v19;
    swift_getMetatypeMetadata();
    uint64_t v40 = a2;
    uint64_t v22 = sub_241160760();
    uint64_t v44 = sub_24101F0A4(v22, v23, &v43);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v44 = type metadata accessor for SharedMedicationsFeedItemGenerator(0);
    sub_241151060();
    uint64_t v24 = sub_241160760();
    uint64_t v44 = sub_24101F0A4(v24, v25, &v43);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    uint64_t v44 = a1;
    sub_24102AF38(0, &qword_26B005CC0, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_2411607A0();
    uint64_t v44 = sub_24101F0A4(v26, v27, &v43);
    sub_241161430();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 2082;
    uint64_t v28 = (void *)sub_24115D170();
    uint64_t v29 = sub_24115CEE0();

    uint64_t v44 = v29;
    sub_24102AF38(0, &qword_26B005E48, (uint64_t (*)(uint64_t))sub_24115109C, MEMORY[0x263F8D8F0]);
    uint64_t v30 = sub_2411607A0();
    uint64_t v44 = sub_24101F0A4(v30, v31, &v43);
    sub_241161430();
    a2 = v40;
    swift_bridgeObjectRelease();
    sub_241018340((uint64_t)v13);
    _os_log_impl(&dword_241007000, v17, (os_log_type_t)v38, "[%{public}s]: Emitting %{public}s, with sharable model changes: %{public}s, for profile: %{public}s", (uint8_t *)v21, 0x2Au);
    uint64_t v32 = v39;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v32, -1, -1);
    uint64_t v33 = v21;
    a4 = v41;
    MEMORY[0x2456180C0](v33, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_241018340((uint64_t)v13);
  }

  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v42);
  sub_24102732C(a2, (uint64_t)v11);
  uint64_t v34 = type metadata accessor for SharedMedicationsFeedItemGenerator(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_24115A1F4((uint64_t)v11, a1);
  swift_bridgeObjectRelease();
  a4[3] = (uint64_t *)v34;
  uint64_t result = sub_241014B4C(&qword_26B004458, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemGenerator);
  a4[4] = (uint64_t *)result;
  *a4 = v35;
  return result;
}

uint64_t sub_241150850@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  uint64_t v8 = type metadata accessor for MedicationsGeneratorContext();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v38[-v12];
  uint64_t v43 = sub_24115F790();
  uint64_t v14 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v16 = &v38[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = *a1;
  sub_24115F730();
  sub_24102732C(a2, (uint64_t)v13);
  swift_bridgeObjectRetain_n();
  os_log_type_t v18 = sub_24115F780();
  os_log_type_t v19 = sub_241160D50();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v42 = a4;
    uint64_t v22 = v21;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v44 = v40;
    uint64_t v45 = a3;
    *(_DWORD *)uint64_t v22 = 136446978;
    int v39 = v20;
    swift_getMetatypeMetadata();
    uint64_t v41 = a2;
    uint64_t v23 = sub_241160760();
    uint64_t v45 = sub_24101F0A4(v23, v24, &v44);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    uint64_t v45 = type metadata accessor for SharedMedicationsFeedItemGenerator(0);
    sub_241151060();
    uint64_t v25 = sub_241160760();
    uint64_t v45 = sub_24101F0A4(v25, v26, &v44);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2082;
    uint64_t v45 = v17;
    sub_24102AF38(0, &qword_26B005CC0, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_2411607A0();
    uint64_t v45 = sub_24101F0A4(v27, v28, &v44);
    sub_241161430();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 32) = 2082;
    uint64_t v29 = (void *)sub_24115D170();
    uint64_t v30 = sub_24115CEE0();

    uint64_t v45 = v30;
    sub_24102AF38(0, &qword_26B005E48, (uint64_t (*)(uint64_t))sub_24115109C, MEMORY[0x263F8D8F0]);
    uint64_t v31 = sub_2411607A0();
    uint64_t v45 = sub_24101F0A4(v31, v32, &v44);
    sub_241161430();
    a2 = v41;
    swift_bridgeObjectRelease();
    sub_241018340((uint64_t)v13);
    _os_log_impl(&dword_241007000, v18, (os_log_type_t)v39, "[%{public}s]: Emitting %{public}s, with sharable model changes: %{public}s, for profile: %{public}s", (uint8_t *)v22, 0x2Au);
    uint64_t v33 = v40;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v33, -1, -1);
    uint64_t v34 = v22;
    a4 = v42;
    MEMORY[0x2456180C0](v34, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_241018340((uint64_t)v13);
  }

  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v43);
  sub_24102732C(a2, (uint64_t)v11);
  uint64_t v35 = type metadata accessor for SharedMedicationsFeedItemGenerator(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  int64_t v36 = sub_24115A1F4((uint64_t)v11, v17);
  swift_bridgeObjectRelease();
  a4[3] = (uint64_t *)v35;
  uint64_t result = sub_241014B4C(&qword_26B004458, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemGenerator);
  a4[4] = (uint64_t *)result;
  *a4 = v36;
  return result;
}

uint64_t sub_241150D04()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33SharedMedicationsFeedItemPipeline_domain;
  uint64_t v2 = sub_24115D130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_241018340(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin33SharedMedicationsFeedItemPipeline_context);

  return swift_deallocClassInstance();
}

uint64_t sub_241150DBC()
{
  return type metadata accessor for SharedMedicationsFeedItemPipeline();
}

uint64_t sub_241150DC8@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_241150850(a1, v2 + v6, v7, a2);
}

uint64_t sub_241150E78@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for MedicationsGeneratorContext() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2411503A0(a1, v2 + v6, v7, a2);
}

uint64_t sub_241150F2C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_241150F64(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  sub_241150FC0();
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

void sub_241150FC0()
{
  if (!qword_26B005CC8)
  {
    sub_24102AF38(255, &qword_26B005CC0, MEMORY[0x263F458B0], MEMORY[0x263F8D488]);
    sub_24115F6B0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B005CC8);
    }
  }
}

unint64_t sub_241151060()
{
  unint64_t result = qword_26B004540;
  if (!qword_26B004540)
  {
    type metadata accessor for SharedMedicationsFeedItemGenerator(255);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B004540);
  }
  return result;
}

unint64_t sub_24115109C()
{
  unint64_t result = qword_26B005E40;
  if (!qword_26B005E40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B005E40);
  }
  return result;
}

double sub_2411510DC()
{
  double result = 7.0;
  xmmword_268CF26B0 = xmmword_2411713F0;
  *(_OWORD *)&qword_268CF26C0 = xmmword_241171400;
  return result;
}

void sub_2411510FC()
{
  qword_268CF26D0 = 0x4000000000000000;
}

void sub_24115110C()
{
  qword_268CF26D8 = 0x4032000000000000;
}

uint64_t sub_24115111C()
{
  uint64_t v0 = sub_24115CCC0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115CC90();
  id v4 = objc_allocWithZone(MEMORY[0x263F466D0]);
  uint64_t v5 = (void *)sub_24115CC20();
  id v6 = objc_msgSend(v4, sel_initWithCalendar_, v5);

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_268CF29E8 = (uint64_t)v6;
  return result;
}

id sub_241151220()
{
  uint64_t v1 = qword_26B004570;
  uint64_t v2 = *(void **)(v0 + qword_26B004570);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_26B004570);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A410]), sel_init);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_241151294()
{
  uint64_t v1 = qword_26B004578;
  if (*(void *)(v0 + qword_26B004578))
  {
    uint64_t v2 = *(void *)(v0 + qword_26B004578);
  }
  else
  {
    uint64_t v3 = v0;
    sub_24115F0C0();
    sub_24115F0B0();
    uint64_t v2 = sub_24115F070();
    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_24115131C()
{
  uint64_t v1 = qword_26B004568;
  uint64_t v2 = *(void **)(v0 + qword_26B004568);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_26B004568);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v6 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v6);

    uint64_t v14 = sub_241160730();
    uint64_t v15 = v7;
    swift_bridgeObjectRetain();
    sub_241160860();
    id v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_241160860();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v14, v15);

    sub_241024708(0, &qword_26B007000);
    uint64_t v10 = (void *)sub_2411611F0();
    objc_msgSend(v8, sel_setFont_, v10);

    objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
    uint64_t v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

id sub_241151540()
{
  uint64_t v1 = qword_26B004580;
  uint64_t v2 = *(void **)(v0 + qword_26B004580);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_26B004580);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    uint64_t v14 = sub_241160730();
    uint64_t v15 = v6;
    swift_bridgeObjectRetain();
    sub_241160860();
    id v7 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_241160860();
    swift_bridgeObjectRelease();
    id v8 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8, v14, v15);

    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v9 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v7, sel_setTextColor_, v9);

    sub_241024708(0, &qword_26B007000);
    uint64_t v10 = (void *)sub_2411611F0();
    objc_msgSend(v7, sel_setFont_, v10);

    objc_msgSend(v7, sel_setAdjustsFontForContentSizeCategory_, 1);
    uint64_t v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

void sub_24115176C(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for SharedMedicationsTileViewController();
  id v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_2411517D4();
  sub_2411518D8();
  sub_2411520E4();
}

void sub_2411517D4()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_super v2 = v1;
  objc_msgSend(v1, sel_addSubview_, *(void *)&v0[qword_26B004550]);

  id v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v3;
  id v5 = sub_24115131C();
  objc_msgSend(v4, sel_addSubview_, v5);

  id v6 = objc_msgSend(v0, sel_view);
  if (!v6)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v7 = v6;
  id v8 = sub_241151540();
  objc_msgSend(v7, sel_addSubview_, v8);
}

id sub_2411518D8()
{
  id v1 = v0;
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v3 = result;
  id v4 = objc_msgSend(result, sel_bottomAnchor);

  id v5 = sub_24115131C();
  id v6 = objc_msgSend(v5, sel_bottomAnchor);

  if (qword_268CF0348 != -1) {
    swift_once();
  }
  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&qword_268CF26C0);

  uint64_t v8 = qword_26B004560;
  id v9 = *(void **)&v1[qword_26B004560];
  *(void *)&v1[qword_26B004560] = v7;

  id result = objc_msgSend(v1, sel_view);
  if (!result) {
    goto LABEL_22;
  }
  uint64_t v10 = result;
  uint64_t v63 = v8;
  id v11 = objc_msgSend(result, sel_bottomAnchor);

  id v12 = sub_241151540();
  id v13 = objc_msgSend(v12, sel_bottomAnchor);

  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v13, *(double *)&qword_268CF26C0);
  uint64_t v15 = qword_26B004558;
  uint64_t v16 = *(void **)&v1[qword_26B004558];
  *(void *)&v1[qword_26B004558] = v14;

  sub_24101F6B8(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_241171410;
  os_log_type_t v18 = *(void **)&v1[qword_26B004550];
  id v19 = objc_msgSend(v18, sel_leadingAnchor);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int v20 = result;
  id v21 = objc_msgSend(result, sel_leadingAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(void *)(v17 + 32) = v22;
  id v23 = objc_msgSend(v18, sel_trailingAnchor);
  id result = objc_msgSend(v1, (SEL)off_2650E3798);
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v24 = result;
  id v25 = objc_msgSend(result, sel_trailingAnchor);

  id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);
  *(void *)(v17 + 40) = v26;
  id v27 = objc_msgSend(v18, sel_topAnchor);
  id result = objc_msgSend(v1, (SEL)off_2650E3798);
  if (!result)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v28 = result;
  id v29 = objc_msgSend(result, sel_topAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(void *)(v17 + 48) = v30;
  id v31 = sub_24115131C();
  id v32 = objc_msgSend(v31, sel_topAnchor);

  id v33 = objc_msgSend(v18, sel_bottomAnchor);
  if (qword_268CF0358 != -1) {
    swift_once();
  }
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, *(double *)&qword_268CF26D8);

  *(void *)(v17 + 56) = v34;
  id v35 = sub_24115131C();
  id v36 = objc_msgSend(v35, sel_leadingAnchor);

  id result = objc_msgSend(v1, sel_view);
  if (!result) {
    goto LABEL_26;
  }
  uint64_t v37 = result;
  id v38 = objc_msgSend(result, sel_leadingAnchor);

  id v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v38, *((double *)&xmmword_268CF26B0 + 1));
  *(void *)(v17 + 64) = v39;
  id v40 = sub_24115131C();
  id v41 = objc_msgSend(v40, sel_trailingAnchor);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v42 = result;
  id v43 = objc_msgSend(result, sel_trailingAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, *(double *)&qword_268CF26C8);
  *(void *)(v17 + 72) = v44;
  id v45 = sub_241151540();
  id v46 = objc_msgSend(v45, (SEL)&off_2650E3238 + 2);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v47 = result;
  id v48 = objc_msgSend(result, (SEL)&off_2650E3238 + 2);

  id v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, *((double *)&xmmword_268CF26B0 + 1));
  *(void *)(v17 + 80) = v49;
  id v50 = sub_241151540();
  id v51 = objc_msgSend(v50, sel_trailingAnchor);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  char v52 = result;
  unint64_t v53 = self;
  id v54 = objc_msgSend(v52, sel_trailingAnchor);

  id v55 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v54, *(double *)&qword_268CF26C8);
  *(void *)(v17 + 88) = v55;
  id v56 = sub_241151540();
  id v57 = objc_msgSend(v56, sel_topAnchor);

  id v58 = sub_24115131C();
  id v59 = objc_msgSend(v58, sel_bottomAnchor);

  if (qword_268CF0350 != -1) {
    swift_once();
  }
  id v60 = objc_msgSend(v57, sel_constraintEqualToAnchor_constant_, v59, *(double *)&qword_268CF26D0);

  *(void *)(v17 + 96) = v60;
  sub_2411609C0();
  sub_241024708(0, (unint64_t *)&qword_26B006FA0);
  uint64_t v61 = (void *)sub_241160980();
  swift_bridgeObjectRelease();
  objc_msgSend(v53, sel_activateConstraints_, v61);

  id v62 = sub_241151540();
  objc_msgSend(v62, sel_setHidden_, 0);

  objc_msgSend(*(id *)&v1[v63], sel_setActive_, 0);
  id result = *(id *)&v1[v15];
  if (result)
  {
    return objc_msgSend(result, sel_setActive_, 1);
  }
  return result;
}

uint64_t sub_2411520E4()
{
  id v1 = v0;
  sub_2410690D4();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v47 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24115D6F0();
  uint64_t v48 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x263F8D8F0];
  sub_241155458(0, qword_26B004328, type metadata accessor for SharedMedicationsFeedItemData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60);
  swift_beginAccess();
  sub_2411545B4(v15, (uint64_t)v10, (uint64_t)qword_26B004328, (uint64_t)type metadata accessor for SharedMedicationsFeedItemData, v7, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241155458);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_241154628((uint64_t)v10);
  }
  uint64_t v17 = v11;
  uint64_t v18 = (uint64_t)v47;
  sub_24104F320((uint64_t)v10, (uint64_t)v14);
  id v46 = v14;
  sub_241152830((uint64_t)v14, (uint64_t)v6);
  v49[3] = v4;
  uint64_t v49[4] = MEMORY[0x263F46190];
  id v19 = sub_2410277C0(v49);
  uint64_t v20 = v48;
  (*(void (**)(uint64_t *, char *, uint64_t))(v48 + 16))(v19, v6, v4);
  sub_24115D670();
  id v21 = sub_24115131C();
  sub_24115D6E0();
  uint64_t v22 = v4;
  uint64_t v23 = v20;
  unint64_t v24 = v1;
  id v45 = v6;
  if (v25)
  {
    id v26 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v26 = 0;
  }
  objc_msgSend(v21, sel_setText_, v26, v45);

  id v27 = sub_24115131C();
  uint64_t v28 = (uint64_t)v46;
  sub_2411546B4((uint64_t)&v46[*(int *)(v17 + 116)], v18, (uint64_t (*)(void))sub_2410690D4);
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v18, 1, v29);
  sub_24115471C(v18, (uint64_t (*)(void))sub_2410690D4);
  id v31 = self;
  id v32 = &selRef_secondaryLabelColor;
  if (v30 != 1) {
    id v32 = &selRef_labelColor;
  }
  id v33 = [v31 *v32];
  objc_msgSend(v27, sel_setTextColor_, v33);

  unint64_t v34 = sub_2411526A4();
  BOOL v37 = (v35 & 1) == 0 && v34 == 4;
  id v38 = sub_241151540();
  if (v37)
  {
    sub_2410B85EC();
    if (v39)
    {
      id v40 = (void *)sub_2411606F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v40 = 0;
    }
    objc_msgSend(v38, sel_setText_, v40);

    id v44 = sub_241151540();
    objc_msgSend(v44, sel_setHidden_, 0);

    objc_msgSend(*(id *)((char *)v24 + qword_26B004560), sel_setActive_, 0);
    id v43 = *(void **)((char *)v24 + qword_26B004558);
    uint64_t v28 = (uint64_t)v46;
    if (!v43) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  id v41 = (void *)sub_2411606F0();
  objc_msgSend(v38, sel_setText_, v41);

  id v42 = sub_241151540();
  objc_msgSend(v42, sel_setHidden_, 1);

  objc_msgSend(*(id *)((char *)v24 + qword_26B004560), sel_setActive_, 1);
  id v43 = *(void **)((char *)v24 + qword_26B004558);
  if (v43) {
LABEL_18:
  }
    objc_msgSend(v43, sel_setActive_, v37);
LABEL_19:
  (*(void (**)(char *, uint64_t))(v23 + 8))(v45, v22);
  return sub_24115471C(v28, type metadata accessor for SharedMedicationsFeedItemData);
}

unint64_t sub_2411526A4()
{
  sub_2410690D4();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SharedMedicationsFeedItemData(0);
  sub_2411546B4(v0 + *(int *)(v4 + 116), (uint64_t)v3, (uint64_t (*)(void))sub_2410690D4);
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v5) == 1)
  {
    sub_24115471C((uint64_t)v3, (uint64_t (*)(void))sub_2410690D4);
    return 0;
  }
  else
  {
    uint64_t v9 = (void *)sub_2411604D0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
    unint64_t v10 = (unint64_t)objc_msgSend(v9, sel_status);

    if ((v10 & 0xFFFFFFFFFFFFFFFELL) == 4) {
      return v10;
    }
    else {
      return 0;
    }
  }
}

void sub_241152830(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24115CB10();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2410690D4();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = objc_msgSend(self, sel_categoryWithID_, 31);
  if (qword_26B007268 != -1) {
    swift_once();
  }
  sub_24115C960();
  uint64_t v24 = type metadata accessor for SharedMedicationsFeedItemData(0);
  sub_2411546B4(a1 + *(int *)(v24 + 116), (uint64_t)v9, (uint64_t (*)(void))sub_2410690D4);
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10) == 1)
  {
    sub_24115471C((uint64_t)v9, (uint64_t (*)(void))sub_2410690D4);
  }
  else
  {
    uint64_t v22 = a2;
    uint64_t v13 = (void *)sub_2411604D0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    switch((unint64_t)objc_msgSend(v13, sel_status))
    {
      case 4uLL:
        swift_bridgeObjectRelease();
        sub_24115C960();
        id v17 = objc_msgSend(v13, sel_startDate);
        sub_24115CAE0();

        uint64_t v18 = (void *)sub_24115CAA0();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
        if (qword_268CF0360 != -1) {
          swift_once();
        }
        id v19 = (id)HKMostRecentSampleEndDateText();

        if (v19) {
          goto LABEL_15;
        }
        __break(1u);
        goto LABEL_6;
      case 5uLL:
        swift_bridgeObjectRelease();
        sub_24115C960();
        id v20 = objc_msgSend(v13, sel_startDate);
        sub_24115CAE0();

        id v21 = (void *)sub_24115CAA0();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
        if (qword_268CF0360 != -1) {
          swift_once();
        }
        id v19 = (id)HKMostRecentSampleEndDateText();

        if (!v19)
        {
          __break(1u);
          JUMPOUT(0x241152E34);
        }
LABEL_15:
        sub_241160730();

        break;
      default:
LABEL_6:

        break;
    }
  }
  sub_2411554BC(&qword_26B004268, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
  sub_24115F440();
  id v14 = v25;
  id v15 = objc_msgSend(v25, sel_shareIcon);
  id v16 = objc_msgSend(v14, sel_color);
  sub_24115D6D0();
}

uint64_t sub_241152E4C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v61 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = MEMORY[0x263F8D8F0];
  sub_241155458(0, qword_26B004328, type metadata accessor for SharedMedicationsFeedItemData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v54 - v5;
  uint64_t v7 = type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v54 - v11;
  uint64_t v13 = (uint64_t)v2 + *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x60);
  swift_beginAccess();
  uint64_t v14 = v3;
  uint64_t v15 = v8;
  sub_2411545B4(v13, (uint64_t)v6, (uint64_t)qword_26B004328, (uint64_t)type metadata accessor for SharedMedicationsFeedItemData, v14, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_241155458);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_241154628((uint64_t)v6);
  }
  uint64_t v57 = v9;
  id v58 = v2;
  uint64_t v59 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24104F320((uint64_t)v6, (uint64_t)v12);
  if (v12[32])
  {
    uint64_t v17 = v59;
    sub_2411546B4((uint64_t)v12, v59, type metadata accessor for SharedMedicationsFeedItemData);
    uint64_t v18 = (objc_class *)type metadata accessor for SharedMedicationsDetailViewController();
    id v19 = objc_allocWithZone(v18);
    sub_2411546B4(v17, (uint64_t)v19 + qword_268CF2970, type metadata accessor for SharedMedicationsFeedItemData);
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82570]), sel_init);
    v67.receiver = v19;
    v67.super_class = v18;
    id v21 = objc_msgSendSuper2(&v67, sel_initWithCollectionViewLayout_, v20);

    sub_24115471C(v17, type metadata accessor for SharedMedicationsFeedItemData);
    sub_2411545B4(v61, (uint64_t)aBlock, (uint64_t)&qword_26B0073D0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_24101F6B8);
    uint64_t v22 = v63;
    uint64_t v23 = v58;
    if (v63)
    {
      uint64_t v24 = sub_24101A6BC(aBlock, (uint64_t)v63);
      uint64_t v25 = *(v22 - 1);
      __n128 v26 = MEMORY[0x270FA5388](v24);
      uint64_t v28 = (char *)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v25 + 16))(v28, v26);
      uint64_t v29 = sub_241161880();
      (*(void (**)(char *, void *))(v25 + 8))(v28, v22);
      sub_24101F178((uint64_t)aBlock);
    }
    else
    {
      uint64_t v29 = 0;
    }
    objc_msgSend(v23, sel_showViewController_sender_, v21, v29);

    swift_unknownObjectRelease();
  }
  else
  {
    int v30 = self;
    sub_241024708(0, (unint64_t *)&qword_26B007360);
    id v31 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__typeIdentifier);
    id v32 = objc_msgSend(v30, sel_predicateForUserDomainConceptsWithTypeIdentifier_, v31);

    uint64_t v33 = v15;
    swift_bridgeObjectRetain();
    unint64_t v34 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    id v35 = objc_msgSend(v30, sel_predicateForUserDomainConceptsWithSemanticIdentifier_, v34);

    sub_24101F6B8(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_24116B210;
    *(void *)(v36 + 32) = v32;
    *(void *)(v36 + 40) = v35;
    aBlock[0] = v36;
    sub_2411609C0();
    sub_241024708(0, &qword_26B007318);
    id v56 = v32;
    id v55 = v35;
    BOOL v37 = (void *)sub_241160980();
    swift_bridgeObjectRelease();
    id v38 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v37);

    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_24116B220;
    sub_241160730();
    id v40 = objc_allocWithZone(MEMORY[0x263F08B30]);
    id v41 = v38;
    id v42 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
    id v43 = objc_msgSend(v40, sel_initWithKey_ascending_, v42, 1);

    *(void *)(v39 + 32) = v43;
    aBlock[0] = v39;
    sub_2411609C0();
    uint64_t v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v45 = v59;
    sub_2411546B4((uint64_t)v12, v59, type metadata accessor for SharedMedicationsFeedItemData);
    sub_2411545B4(v61, (uint64_t)v66, (uint64_t)&qword_26B0073D0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_24101F6B8);
    unint64_t v46 = (*(unsigned __int8 *)(v33 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    unint64_t v47 = (v57 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v44;
    sub_24104F320(v45, v48 + v46);
    sub_2410DB310((uint64_t)v66, v48 + v47);
    *(void *)(v48 + ((v47 + 39) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    id v49 = objc_allocWithZone(MEMORY[0x263F0A858]);
    sub_241024708(0, &qword_26B007328);
    swift_retain();
    id v50 = (void *)sub_241160980();
    swift_bridgeObjectRelease();
    uint64_t v64 = sub_241154D38;
    uint64_t v65 = v48;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_241013250;
    uint64_t v63 = &unk_26F558670;
    id v51 = _Block_copy(aBlock);
    id v52 = objc_msgSend(v49, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, v41, 0, 1, v50, v51);

    _Block_release(v51);
    swift_release();
    swift_release();
    id v53 = sub_241151220();
    objc_msgSend(v53, sel_executeQuery_, v52);
  }
  return sub_24115471C((uint64_t)v12, type metadata accessor for SharedMedicationsFeedItemData);
}

uint64_t sub_2411536D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v35 = a7;
  uint64_t v36 = a5;
  uint64_t v37 = a9;
  uint64_t v39 = sub_241160410();
  uint64_t v42 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_241160440();
  uint64_t v40 = *(void *)(v14 - 8);
  uint64_t v41 = v14;
  MEMORY[0x270FA5388](v14);
  id v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v17 - 8);
  id v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a6 + 16;
  sub_241024708(0, (unint64_t *)&qword_26B007340);
  uint64_t v38 = sub_241160EF0();
  uint64_t v22 = swift_allocObject();
  swift_beginAccess();
  uint64_t v23 = (void *)MEMORY[0x2456181C0](v21);
  swift_unknownObjectWeakInit();

  sub_2411546B4(v35, (uint64_t)v20, type metadata accessor for SharedMedicationsFeedItemData);
  sub_2411545B4(a8, (uint64_t)v44, (uint64_t)&qword_26B0073D0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_24101F6B8);
  unint64_t v24 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v25 = (v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v22;
  *(void *)(v27 + 24) = a2;
  sub_24104F320((uint64_t)v20, v27 + v24);
  uint64_t v28 = v36;
  *(void *)(v27 + v25) = v36;
  sub_2410DB310((uint64_t)v44, v27 + v26);
  *(void *)(v27 + ((v26 + 39) & 0xFFFFFFFFFFFFFFF8)) = v37;
  aBlock[4] = sub_2411553B0;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24101AFBC;
  void aBlock[3] = &unk_26F5586C0;
  uint64_t v29 = _Block_copy(aBlock);
  id v30 = a2;
  id v31 = v28;
  swift_release();
  sub_241160430();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2411554BC(&qword_26B0072E0, MEMORY[0x263F8F030]);
  sub_241155458(0, (unint64_t *)&unk_26B0072F0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_241024138();
  uint64_t v32 = v39;
  sub_2411614F0();
  uint64_t v33 = (void *)v38;
  MEMORY[0x245616D40](0, v16, v13, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v16, v41);
}

uint64_t sub_241153B5C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for SharedMedicationsFeedItemData(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24115F790();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x2456181C0](a1 + 16);
  if (result)
  {
    uint64_t v18 = (void *)result;
    uint64_t v47 = v14;
    if (a2 && (self, swift_dynamicCastObjCClass()))
    {
      id v19 = a2;
      sub_241151220();
      sub_241151294();
      id v20 = objc_allocWithZone((Class)sub_24115EE70());
      uint64_t v21 = (void *)sub_24115EE50();
      sub_2411545B4(a5, (uint64_t)v48, (uint64_t)&qword_26B0073D0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_24101F6B8);
      uint64_t v22 = v49;
      if (v49)
      {
        uint64_t v23 = sub_24101A6BC(v48, v49);
        uint64_t v24 = *(void *)(v22 - 8);
        __n128 v25 = MEMORY[0x270FA5388](v23);
        uint64_t v27 = (char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v24 + 16))(v27, v25);
        uint64_t v28 = sub_241161880();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v22);
        sub_24101F178((uint64_t)v48);
      }
      else
      {
        uint64_t v28 = 0;
      }
      objc_msgSend(v18, sel_showViewController_sender_, v21, v28);

      return swift_unknownObjectRelease();
    }
    else
    {
      sub_24115F770();
      sub_2411546B4(a3, (uint64_t)v12, type metadata accessor for SharedMedicationsFeedItemData);
      id v29 = a4;
      id v30 = a4;
      id v31 = sub_24115F780();
      os_log_type_t v32 = sub_241160D30();
      int v33 = v32;
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v34 = swift_slowAlloc();
        int v45 = v33;
        uint64_t v35 = v34;
        uint64_t v46 = swift_slowAlloc();
        v48[0] = v46;
        *(_DWORD *)uint64_t v35 = 136315650;
        uint64_t v36 = sub_241161A00();
        uint64_t v50 = sub_24101F0A4(v36, v37, v48);
        sub_241161430();
        swift_bridgeObjectRelease();
        *(_WORD *)(v35 + 12) = 2080;
        os_log_t v44 = v31;
        uint64_t v39 = *((void *)v12 + 2);
        unint64_t v38 = *((void *)v12 + 3);
        swift_bridgeObjectRetain();
        uint64_t v50 = sub_24101F0A4(v39, v38, v48);
        sub_241161430();
        swift_bridgeObjectRelease();
        sub_24115471C((uint64_t)v12, type metadata accessor for SharedMedicationsFeedItemData);
        *(_WORD *)(v35 + 22) = 2080;
        uint64_t v50 = (uint64_t)a4;
        id v40 = a4;
        sub_241155458(0, (unint64_t *)&qword_268CF0728, (uint64_t (*)(uint64_t))sub_24102A354, MEMORY[0x263F8D8F0]);
        uint64_t v41 = sub_241160760();
        uint64_t v50 = sub_24101F0A4(v41, v42, v48);
        sub_241161430();
        swift_bridgeObjectRelease();

        id v31 = v44;
        _os_log_impl(&dword_241007000, v44, (os_log_type_t)v45, "[%s] Could not fetch medication detail for identifier: %s error: %s", (uint8_t *)v35, 0x20u);
        uint64_t v43 = v46;
        swift_arrayDestroy();
        MEMORY[0x2456180C0](v43, -1, -1);
        MEMORY[0x2456180C0](v35, -1, -1);
      }
      else
      {
        sub_24115471C((uint64_t)v12, type metadata accessor for SharedMedicationsFeedItemData);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v16, v13);
    }
  }
  return result;
}

id sub_2411540F4(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[qword_26B004570] = 0;
  *(void *)&v3[qword_26B004578] = 0;
  uint64_t v6 = qword_26B004550;
  id v7 = objc_allocWithZone((Class)sub_24115D680());
  uint64_t v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v8[qword_26B004568] = 0;
  *(void *)&v8[qword_26B004580] = 0;
  *(void *)&v8[qword_26B004560] = 0;
  *(void *)&v8[qword_26B004558] = 0;

  if (a2)
  {
    uint64_t v9 = (void *)sub_2411606F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for SharedMedicationsTileViewController();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, v9, a3);

  return v10;
}

id sub_241154224(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = sub_241160730();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = a4;
  return sub_2411540F4(v5, v7, a4);
}

id sub_241154284(void *a1)
{
  *(void *)&v1[qword_26B004570] = 0;
  *(void *)&v1[qword_26B004578] = 0;
  uint64_t v3 = qword_26B004550;
  id v4 = objc_allocWithZone((Class)sub_24115D680());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v5[qword_26B004568] = 0;
  *(void *)&v5[qword_26B004580] = 0;
  *(void *)&v5[qword_26B004560] = 0;
  *(void *)&v5[qword_26B004558] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for SharedMedicationsTileViewController();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);

  return v6;
}

id sub_241154378(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_241154284(a3);
}

void sub_2411543A0()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + qword_26B004558);
}

id sub_241154430()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedMedicationsTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_241154468(uint64_t a1)
{
  swift_release();
  objc_super v2 = *(void **)(a1 + qword_26B004558);
}

uint64_t type metadata accessor for SharedMedicationsTileViewController()
{
  uint64_t result = qword_26B004778;
  if (!qword_26B004778) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_241154550()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2411545AC()
{
  return type metadata accessor for SharedMedicationsTileViewController();
}

uint64_t sub_2411545B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_241154628(uint64_t a1)
{
  sub_241155458(0, qword_26B004328, type metadata accessor for SharedMedicationsFeedItemData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2411546B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24115471C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24115477C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2411547B4()
{
  uint64_t v1 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[27];
  sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  }
  uint64_t v10 = v5 + v1[28];
  sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
  }
  uint64_t v14 = v5 + v1[29];
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  uint64_t v18 = v4 + v3;
  swift_bridgeObjectRelease();
  uint64_t v19 = v5 + v1[31];
  uint64_t v20 = type metadata accessor for SharedMedicationsChartSeries(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20))
  {
    sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
    uint64_t v22 = v21;
    uint64_t v23 = *(void *)(v21 - 8);
    uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    if (!v24(v19, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v19, v22);
    }
    uint64_t v25 = v19 + *(int *)(v20 + 20);
    if (!v24(v25, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v22);
    }
  }
  uint64_t v26 = v5 + v1[33];
  uint64_t v27 = sub_24115CB10();
  uint64_t v28 = *(void *)(v27 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27)) {
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
  }
  unint64_t v29 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = v5 + v1[34];
  uint64_t v31 = sub_24115D3B0();
  uint64_t v32 = *(void *)(v31 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  if (*(void *)(v0 + v29 + 24)) {
    sub_24101F178(v0 + v29);
  }

  return MEMORY[0x270FA0238](v0, ((v29 + 39) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_241154D38(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v11 = *(void *)(type metadata accessor for SharedMedicationsFeedItemData(0) - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2411536D8(a1, a2, a3, a4, a5, *(void *)(v5 + 16), v5 + v12, v5 + v13, *(void *)(v5 + ((v13 + 39) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_241154E14()
{
  uint64_t v1 = (int *)type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();

  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[27];
  sub_2410B9C40(0, &qword_26B004078, (unint64_t *)&unk_26B005DF0);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  }
  uint64_t v10 = v4 + v3;
  uint64_t v11 = v5 + v1[28];
  sub_2410B9C40(0, &qword_26B004090, &qword_26B007348);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
  }
  uint64_t v15 = v10 + 7;
  uint64_t v16 = v5 + v1[29];
  sub_2410B9C40(0, &qword_26B0040A8, &qword_26B007358);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }
  unint64_t v20 = v15 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v21 = v5 + v1[31];
  uint64_t v22 = type metadata accessor for SharedMedicationsChartSeries(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22))
  {
    sub_2410B9C40(0, &qword_26B004060, &qword_26B005DE8);
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)(v23 - 8);
    uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    if (!v26(v21, 1, v23)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v24);
    }
    uint64_t v27 = v21 + *(int *)(v22 + 20);
    if (!v26(v27, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
    }
  }
  uint64_t v28 = v5 + v1[33];
  uint64_t v29 = sub_24115CB10();
  uint64_t v30 = *(void *)(v29 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
  }
  unint64_t v31 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = v5 + v1[34];
  uint64_t v33 = sub_24115D3B0();
  uint64_t v34 = *(void *)(v33 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33)) {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
  }

  if (*(void *)(v0 + v31 + 24)) {
    sub_24101F178(v0 + v31);
  }

  return MEMORY[0x270FA0238](v0, ((v31 + 39) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_2411553B0()
{
  uint64_t v1 = *(void *)(type metadata accessor for SharedMedicationsFeedItemData(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + 24);
  uint64_t v6 = *(void **)(v0 + v3);

  return sub_241153B5C(v4, v5, v0 + v2, v6, v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
}

void sub_241155458(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_2411554BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SharedMedications_SharingVersionMismatchTileView(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B004790);
}

uint64_t sub_24115552C()
{
  return swift_initClassMetadata2();
}

id sub_24115556C(void *a1, double a2, double a3, double a4, double a5)
{
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for SharedMedications_SharingVersionMismatchTileView(0);
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_2411555E0(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for SharedMedications_SharingVersionMismatchTileView(0);
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_24115562C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedMedications_SharingVersionMismatchTileView(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_241155664()
{
  return type metadata accessor for SharedMedications_SharingVersionMismatchTileView(0);
}

uint64_t sub_24115566C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v43 = a3;
  uint64_t v48 = a2;
  uint64_t v45 = sub_24115D130();
  uint64_t v52 = *(void *)(v45 - 8);
  uint64_t v46 = *(void *)(v52 + 64);
  MEMORY[0x270FA5388](v45);
  os_log_t v44 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_24115D1C0();
  uint64_t v5 = *(void *)(v42 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v42);
  uint64_t v7 = sub_24115D420();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  objc_super v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115A548();
  uint64_t v49 = v11;
  uint64_t v51 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v47 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115D140();
  sub_24101A6BC(v55, v55[3]);
  sub_24115D410();
  uint64_t v13 = sub_24115D380();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v54 = v13;
  uint64_t v14 = a1;
  sub_24115D1B0();
  sub_24102BBEC();
  uint64_t v40 = v15;
  uint64_t v39 = MEMORY[0x263EFDCF8];
  uint64_t v41 = sub_24115A630(&qword_26B005A88, (void (*)(uint64_t))sub_24102BBEC);
  uint64_t v16 = v43;
  uint64_t v17 = sub_24115FDA0();
  sub_24101F178((uint64_t)v53);
  swift_release();
  sub_24101F178((uint64_t)v55);
  v55[0] = v17;
  uint64_t v18 = v5;
  uint64_t v38 = v5;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  unint64_t v20 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v42;
  v19(v20, v14, v42);
  uint64_t v22 = v52;
  uint64_t v23 = v44;
  uint64_t v24 = v16;
  uint64_t v25 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v44, v24, v45);
  unint64_t v26 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v27 = (v6 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (*(unsigned __int8 *)(v22 + 80) + v28 + 8) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v30 = (v46 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v31 + v26, v20, v21);
  *(void *)(v31 + v27) = v48;
  uint64_t v32 = v50;
  *(void *)(v31 + v28) = v50;
  (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v31 + v29, v23, v25);
  *(void *)(v31 + v30) = v32;
  swift_bridgeObjectRetain();
  sub_24115FC10();
  sub_24102BB60();
  sub_24115A630(&qword_26B005AA8, (void (*)(uint64_t))sub_24102BB60);
  uint64_t v33 = v47;
  sub_24115FF80();
  swift_release();
  swift_release();
  sub_24115A630(&qword_26B0058A0, (void (*)(uint64_t))sub_24115A548);
  uint64_t v34 = v49;
  uint64_t v35 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v34);
  return v35;
}

uint64_t sub_241155BC8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  v163[2] = a5;
  uint64_t v164 = a4;
  uint64_t v187 = a3;
  unint64_t v171 = a6;
  sub_24115A91C();
  uint64_t v170 = v8;
  uint64_t v169 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v168 = (char *)v163 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24104CFD8();
  uint64_t v167 = v10;
  uint64_t v166 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v165 = (char *)v163 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24115D320();
  uint64_t v178 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v163 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  v197 = (char *)v163 - v17;
  MEMORY[0x270FA5388](v16);
  v196 = (char *)v163 - v18;
  uint64_t v19 = sub_24115D3C0();
  uint64_t v186 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  v188 = (char *)v163 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24115D1C0();
  uint64_t v191 = *(void *)(v21 - 8);
  uint64_t v192 = (char *)v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v190 = (char *)v163 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_24115F790();
  uint64_t v181 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)v163 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = 0;
  uint64_t v200 = sub_24115D0A0();
  uint64_t v26 = *(void *)(v200 - 8);
  MEMORY[0x270FA5388](v200);
  unint64_t v28 = (char *)v163 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v183 = *a1;
  uint64_t v204 = MEMORY[0x263F8EE88];
  uint64_t v194 = a2;
  sub_24115D150();
  sub_24101A6BC(&v202, v203);
  uint64_t v29 = FeedItemContext.previousFeedItems(of:)();
  sub_24101F178((uint64_t)&v202);
  int64_t v30 = *(void *)(v29 + 16);
  char v193 = v15;
  uint64_t v189 = v19;
  v163[1] = v29;
  uint64_t v182 = v23;
  if (v30)
  {
    uint64_t v184 = v25;
    uint64_t v202 = MEMORY[0x263F8EE78];
    sub_24102A550(0, v30, 0);
    uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
    uint64_t v31 = v26 + 16;
    unint64_t v33 = v29 + ((*(unsigned __int8 *)(v31 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 64));
    uint64_t v198 = *(void (***)(char *, uint64_t))(v31 + 56);
    uint64_t v199 = v32;
    v195 = (void (**)(char *, uint64_t))(v31 - 8);
    do
    {
      uint64_t v34 = v200;
      uint64_t v35 = v31;
      v199(v28, v33, v200);
      uint64_t v36 = sub_24115CFD0();
      uint64_t v38 = v37;
      (*v195)(v28, v34);
      uint64_t v39 = v202;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24102A550(0, *(void *)(v39 + 16) + 1, 1);
        uint64_t v39 = v202;
      }
      unint64_t v41 = *(void *)(v39 + 16);
      unint64_t v40 = *(void *)(v39 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_24102A550(v40 > 1, v41 + 1, 1);
        uint64_t v39 = v202;
      }
      *(void *)(v39 + 16) = v41 + 1;
      uint64_t v42 = v39 + 16 * v41;
      *(void *)(v42 + 32) = v36;
      *(void *)(v42 + 40) = v38;
      v33 += (unint64_t)v198;
      --v30;
      uint64_t v15 = v193;
      uint64_t v19 = v189;
      uint64_t v31 = v35;
    }
    while (v30);
    uint64_t v177 = v39;
    uint64_t v43 = v187;
    uint64_t v25 = v184;
  }
  else
  {
    uint64_t v177 = MEMORY[0x263F8EE78];
    uint64_t v43 = v187;
  }
  os_log_t v44 = v192;
  uint64_t v45 = (int *)MEMORY[0x263F458A8];
  uint64_t v184 = *(char **)(v43 + 16);
  uint64_t v47 = v190;
  uint64_t v46 = v191;
  if (v184)
  {
    uint64_t result = swift_bridgeObjectRetain();
LABEL_17:
    unint64_t v63 = 0;
    unint64_t v183 = v43 + ((*(unsigned __int8 *)(v186 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v186 + 80));
    uint64_t v182 = v186 + 16;
    uint64_t v181 = v186 + 88;
    int v180 = *v45;
    int v176 = *MEMORY[0x263F45880];
    int v174 = *MEMORY[0x263F458A0];
    int v173 = *MEMORY[0x263F45888];
    uint64_t v172 = (uint64_t (**)(char *, uint64_t))(v186 + 8);
    BOOL v179 = (void (**)(char *, uint64_t))(v186 + 96);
    uint64_t v198 = (void (**)(char *, uint64_t))(v178 + 8);
    uint64_t v199 = (void (*)(char *, unint64_t, uint64_t))(v178 + 16);
    v163[0] = v177 + 40;
    uint64_t v200 = MEMORY[0x263F8EE88];
    uint64_t v187 = v43;
    while (1)
    {
      if (v63 >= *(void *)(v43 + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v64 = v186;
      uint64_t v65 = *(void *)(v186 + 72);
      uint64_t v190 = (char *)v63;
      uint64_t v66 = v188;
      (*(void (**)(char *, unint64_t, uint64_t))(v186 + 16))(v188, v183 + v65 * v63, v19);
      int v67 = (*(uint64_t (**)(char *, uint64_t))(v64 + 88))(v66, v19);
      if (v67 == v180)
      {
        (*v179)(v66, v19);
        uint64_t v68 = *(void *)v66;
        uint64_t v69 = *(void *)(*(void *)v66 + 16);
        uint64_t v191 = *(void *)v66;
        if (v69)
        {
          uint64_t v70 = v68 + ((*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80));
          uint64_t v71 = *(void *)(v178 + 72);
          swift_bridgeObjectRetain();
          unint64_t v72 = (void *)MEMORY[0x263F8EE78];
          do
          {
            sub_24115D2F0();
            uint64_t v73 = (void *)sub_24115D170();
            uint64_t v74 = sub_2410D6C00();
            v195 = v75;
            swift_bridgeObjectRelease();

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v72 = sub_241051F68(0, v72[2] + 1, 1, v72);
            }
            unint64_t v77 = v72[2];
            unint64_t v76 = v72[3];
            if (v77 >= v76 >> 1) {
              unint64_t v72 = sub_241051F68((void *)(v76 > 1), v77 + 1, 1, v72);
            }
            v72[2] = v77 + 1;
            uint64_t v78 = &v72[2 * v77];
            uint64_t v79 = v195;
            v78[4] = v74;
            v78[5] = v79;
            v70 += v71;
            --v69;
          }
          while (v69);
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v72 = (void *)MEMORY[0x263F8EE78];
        }
        uint64_t v110 = swift_bridgeObjectRetain();
        uint64_t v111 = v185;
        uint64_t v112 = sub_24115A02C(v110, v72);
        uint64_t v185 = v111;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v113 = *(void *)(v112 + 16);
        if (v113)
        {
          uint64_t v114 = (uint64_t *)(v112 + 40);
          do
          {
            uint64_t v115 = *(v114 - 1);
            uint64_t v116 = *v114;
            swift_bridgeObjectRetain();
            sub_2410257B0(&v202, v115, v116);
            swift_bridgeObjectRelease();
            v114 += 2;
            --v113;
          }
          while (v113);
        }
        swift_bridgeObjectRelease();
        v195 = *(void (***)(char *, uint64_t))(v191 + 16);
        if (v195)
        {
          uint64_t v117 = 0;
          uint64_t v192 = (char *)(v191
                        + ((*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80)));
          uint64_t v118 = *(void *)(v178 + 72);
          uint64_t v119 = *(void (**)(char *, char *, uint64_t))(v178 + 16);
          v119(v196, v192, v12);
          while (1)
          {
            uint64_t v124 = v200;
            sub_24115A630(&qword_26B004110, MEMORY[0x263F45738]);
            swift_bridgeObjectRetain();
            uint64_t v125 = sub_241160650();
            uint64_t v126 = -1 << *(unsigned char *)(v124 + 32);
            unint64_t v127 = v125 & ~v126;
            uint64_t v128 = v124 + 56;
            if ((*(void *)(v124 + 56 + ((v127 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v127))
            {
              uint64_t v129 = ~v126;
              while (1)
              {
                uint64_t v130 = v197;
                v119(v197, (char *)(*(void *)(v200 + 48) + v127 * v118), v12);
                sub_24115A630(&qword_26B004118, MEMORY[0x263F45738]);
                char v131 = sub_2411606E0();
                long long v132 = *v198;
                (*v198)(v130, v12);
                if (v131) {
                  break;
                }
                unint64_t v127 = (v127 + 1) & v129;
                if (((*(void *)(v128 + ((v127 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v127) & 1) == 0) {
                  goto LABEL_57;
                }
              }
              swift_bridgeObjectRelease();
              v132(v196, v12);
            }
            else
            {
LABEL_57:
              uint64_t v120 = v200;
              swift_bridgeObjectRelease();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v123 = v196;
              uint64_t v122 = (uint64_t)v197;
              v119(v197, v196, v12);
              uint64_t v202 = v120;
              sub_2410DD880(v122, v127, isUniquelyReferenced_nonNull_native);
              uint64_t v200 = v202;
              swift_bridgeObjectRelease();
              (*v198)(v123, v12);
            }
            uint64_t v15 = v193;
            if ((void (**)(char *, uint64_t))++v117 == v195) {
              break;
            }
            v119(v196, &v192[v118 * v117], v12);
          }
LABEL_66:
          uint64_t result = swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
      else
      {
        if (v67 == v176)
        {
          uint64_t v80 = v188;
          (*v179)(v188, v19);
          uint64_t v81 = *(void *)v80;
          uint64_t v192 = *(char **)(*(void *)v80 + 16);
          if (!v192)
          {
            uint64_t result = swift_bridgeObjectRelease();
            goto LABEL_20;
          }
          uint64_t v82 = 0;
          unint64_t v83 = (*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80);
          uint64_t v175 = v81;
          uint64_t v191 = v81 + v83;
          uint64_t v84 = *(void *)(v178 + 72);
          uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v178 + 16);
          do
          {
            v195 = v82;
            v85(v15, v191 + v84 * (void)v82, v12);
            uint64_t v89 = v200;
            sub_24115A630(&qword_26B004110, MEMORY[0x263F45738]);
            swift_bridgeObjectRetain();
            uint64_t v90 = sub_241160650();
            uint64_t v91 = -1 << *(unsigned char *)(v89 + 32);
            unint64_t v92 = v90 & ~v91;
            uint64_t v93 = v89 + 56;
            if ((*(void *)(v93 + ((v92 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v92))
            {
              uint64_t v94 = ~v91;
              while (1)
              {
                uint64_t v95 = v197;
                v85(v197, *(void *)(v200 + 48) + v92 * v84, v12);
                sub_24115A630(&qword_26B004118, MEMORY[0x263F45738]);
                char v96 = sub_2411606E0();
                uint64_t v97 = *v198;
                (*v198)(v95, v12);
                if (v96) {
                  break;
                }
                unint64_t v92 = (v92 + 1) & v94;
                if (((*(void *)(v93 + ((v92 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v92) & 1) == 0) {
                  goto LABEL_34;
                }
              }
              swift_bridgeObjectRelease();
              v97(v15, v12);
            }
            else
            {
LABEL_34:
              uint64_t v86 = v200;
              swift_bridgeObjectRelease();
              char v87 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v88 = (uint64_t)v197;
              v85(v197, (uint64_t)v15, v12);
              uint64_t v202 = v86;
              sub_2410DD880(v88, v92, v87);
              uint64_t v200 = v202;
              swift_bridgeObjectRelease();
              (*v198)(v15, v12);
            }
            uint64_t v82 = (void (**)(char *, uint64_t))((char *)v195 + 1);
          }
          while ((char *)v195 + 1 != v192);
          goto LABEL_66;
        }
        if (v67 != v174)
        {
          if (v67 != v173)
          {
            uint64_t result = (*v172)(v188, v19);
            goto LABEL_20;
          }
          swift_bridgeObjectRelease();
          uint64_t result = v177;
          uint64_t v133 = *(void *)(v177 + 16);
          if (v133)
          {
            swift_bridgeObjectRetain();
            os_log_t v134 = (uint64_t *)v163[0];
            do
            {
              uint64_t v135 = *(v134 - 1);
              uint64_t v136 = *v134;
              swift_bridgeObjectRetain();
              sub_2410257B0(&v202, v135, v136);
              swift_bridgeObjectRelease();
              v134 += 2;
              --v133;
            }
            while (v133);
            uint64_t result = swift_bridgeObjectRelease();
          }
          uint64_t v200 = MEMORY[0x263F8EE88];
          goto LABEL_19;
        }
        uint64_t v98 = v188;
        (*v179)(v188, v19);
        uint64_t v99 = *(void *)v98;
        uint64_t v100 = *(void *)(*(void *)v98 + 16);
        if (v100)
        {
          swift_bridgeObjectRetain();
          uint64_t v101 = v99 + 40;
          uint64_t v102 = (void *)MEMORY[0x263F8EE78];
          do
          {
            swift_bridgeObjectRetain();
            uint64_t v103 = (void *)sub_24115D170();
            uint64_t v104 = sub_2410D6C00();
            uint64_t v106 = v105;
            swift_bridgeObjectRelease();

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v102 = sub_241051F68(0, v102[2] + 1, 1, v102);
            }
            unint64_t v108 = v102[2];
            unint64_t v107 = v102[3];
            if (v108 >= v107 >> 1) {
              uint64_t v102 = sub_241051F68((void *)(v107 > 1), v108 + 1, 1, v102);
            }
            v101 += 16;
            v102[2] = v108 + 1;
            uint64_t v109 = &v102[2 * v108];
            v109[4] = v104;
            v109[5] = v106;
            --v100;
          }
          while (v100);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v102 = (void *)MEMORY[0x263F8EE78];
        }
        swift_bridgeObjectRelease();
        uint64_t v137 = v102[2];
        if (v137)
        {
          uint64_t v138 = v102 + 5;
          do
          {
            uint64_t v139 = *(v138 - 1);
            uint64_t v140 = *v138;
            swift_bridgeObjectRetain();
            sub_2410257B0(&v202, v139, v140);
            swift_bridgeObjectRelease();
            v138 += 2;
            --v137;
          }
          while (v137);
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = v193;
LABEL_19:
      uint64_t v19 = v189;
LABEL_20:
      uint64_t v43 = v187;
      unint64_t v63 = (unint64_t)(v190 + 1);
      if (v190 + 1 == v184)
      {
        swift_bridgeObjectRelease();
        uint64_t v141 = swift_bridgeObjectRelease();
        goto LABEL_81;
      }
    }
  }
  sub_24115F730();
  (*(void (**)(char *, uint64_t, char *))(v46 + 16))(v47, v194, v44);
  uint64_t v49 = v25;
  uint64_t v50 = v44;
  uint64_t v51 = sub_24115F780();
  os_log_type_t v52 = sub_241160D20();
  if (os_log_type_enabled(v51, v52))
  {
    id v53 = v47;
    uint64_t v54 = swift_slowAlloc();
    uint64_t v200 = swift_slowAlloc();
    uint64_t v202 = v200;
    *(_DWORD *)uint64_t v54 = 136446466;
    uint64_t v184 = v49;
    unint64_t v201 = sub_241151060();
    sub_24115B53C(0, &qword_26B004548, (void (*)(uint64_t))sub_241151060);
    uint64_t v55 = sub_241160760();
    unint64_t v201 = sub_24101F0A4(v55, v56, &v202);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2082;
    unint64_t v201 = sub_24115D170();
    uint64_t v57 = sub_241160790();
    unint64_t v201 = sub_24101F0A4(v57, v58, &v202);
    uint64_t v19 = v189;
    sub_241161430();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v46 + 8))(v53, v50);
    _os_log_impl(&dword_241007000, v51, v52, "[%{public}s]: for profile: %{public}s, prepended generator generating for previous sharable models", (uint8_t *)v54, 0x16u);
    uint64_t v59 = v200;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v59, -1, -1);
    MEMORY[0x2456180C0](v54, -1, -1);

    (*(void (**)(char *, uint64_t))(v181 + 8))(v184, v182);
  }
  else
  {
    (*(void (**)(char *, char *))(v46 + 8))(v47, v50);

    (*(void (**)(char *, uint64_t))(v181 + 8))(v49, v182);
  }
  sub_241023C5C(0, &qword_26B005F50, MEMORY[0x263F458B0], MEMORY[0x263F8E0F8]);
  uint64_t v60 = v186;
  unint64_t v61 = (*(unsigned __int8 *)(v186 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v186 + 80);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_24116B370;
  *(void *)(v43 + v61) = v183;
  (*(void (**)(void))(v60 + 104))();
  id v62 = *(char **)(v43 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v184 = v62;
  if (v62)
  {
    uint64_t v45 = (int *)MEMORY[0x263F458A8];
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  uint64_t v141 = swift_bridgeObjectRelease();
  uint64_t v200 = MEMORY[0x263F8EE88];
LABEL_81:
  MEMORY[0x270FA5388](v141);
  uint64_t v142 = v194;
  v163[-2] = v164;
  v163[-1] = v142;
  uint64_t v143 = v200;
  swift_bridgeObjectRetain();
  uint64_t v144 = sub_241093E74((void (*)(uint64_t *__return_ptr, char *))sub_24115A9B0, (uint64_t)&v163[-4], v143);
  swift_bridgeObjectRelease();
  if (*(void *)(v204 + 16) && (uint64_t v145 = *(void *)(v144 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v146 = (uint64_t *)(v144 + 40);
    do
    {
      uint64_t v147 = *(v146 - 1);
      uint64_t v148 = *v146;
      swift_bridgeObjectRetain();
      sub_241075ABC(v147, v148);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v146 += 2;
      --v145;
    }
    while (v145);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v149 = (void (*)(char *, uint64_t, uint64_t))sub_24114D43C(v200);
  swift_bridgeObjectRelease();
  uint64_t v150 = sub_24115A9CC(v149, v194);
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v151 = sub_24114CD20(v204);
  swift_bridgeObjectRelease();
  sub_24115D150();
  sub_24101A6BC(&v202, v203);
  uint64_t v152 = FeedItemContext.previousFeedItems(of:)();
  swift_bridgeObjectRetain();
  uint64_t v153 = sub_24106F764(v152, v151);
  swift_bridgeObjectRelease();
  swift_release();
  sub_24101F178((uint64_t)&v202);
  uint64_t v154 = MEMORY[0x263F45828];
  sub_24102AFE8(0, &qword_26B005F40, MEMORY[0x263F45828], MEMORY[0x263F8E0F8]);
  uint64_t v155 = swift_allocObject();
  *(_OWORD *)(v155 + 16) = xmmword_24116B370;
  *(void *)(v155 + 32) = v153;
  *(void *)(v155 + 40) = 0;
  *(void *)(v155 + 48) = 0;
  *(void *)(v155 + 56) = 0;
  *(unsigned char *)(v155 + 64) = 32;
  uint64_t v202 = v155;
  sub_24102AFE8(0, &qword_26B005CA8, v154, MEMORY[0x263F8D488]);
  swift_bridgeObjectRetain();
  unint64_t v156 = v165;
  sub_24115FCC0();
  sub_24115A630(&qword_26B005B98, (void (*)(uint64_t))sub_24104CFD8);
  uint64_t v157 = v167;
  uint64_t v158 = sub_24115FE20();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v166 + 8))(v156, v157);
  swift_release();
  sub_241023C5C(0, &qword_26B005FB0, (uint64_t (*)(uint64_t))sub_24102BB60, MEMORY[0x263F8E0F8]);
  uint64_t v159 = swift_allocObject();
  *(_OWORD *)(v159 + 16) = xmmword_24116B200;
  *(void *)(v159 + 32) = v150;
  *(void *)(v159 + 40) = v158;
  uint64_t v202 = v159;
  sub_2411609C0();
  sub_24102BB60();
  sub_241023C5C(0, &qword_26B005D78, (uint64_t (*)(uint64_t))sub_24102BB60, MEMORY[0x263F8D488]);
  sub_24115A630(&qword_26B005AA8, (void (*)(uint64_t))sub_24102BB60);
  sub_24115B4B4();
  swift_retain();
  swift_retain();
  unint64_t v160 = v168;
  sub_24115FBF0();
  sub_24115A630(&qword_26B0059B8, (void (*)(uint64_t))sub_24115A91C);
  uint64_t v161 = v170;
  uint64_t v162 = sub_24115FE20();
  swift_release();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v169 + 8))(v160, v161);
  *unint64_t v171 = v162;
  return result;
}

void sub_2411573E8(uint64_t *a1@<X8>)
{
  sub_24115D2F0();
  objc_super v2 = (void *)sub_24115D170();
  uint64_t v3 = sub_2410D6C00();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  *a1 = v3;
  a1[1] = v5;
}

id sub_24115746C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24115D310();
  unint64_t v4 = v3;
  uint64_t v5 = sub_24115D2F0();
  uint64_t v7 = v6;
  sub_24115D2C0();
  uint64_t v8 = sub_2411607C0();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();

  return sub_2410BF40C(v2, v4, v5, v7, v8, v10, a1);
}

uint64_t sub_241157510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a3;
  uint64_t v23 = a2;
  sub_241023C5C(0, &qword_26B005BA8, (uint64_t (*)(uint64_t))sub_24115BAD8, MEMORY[0x263EFDDF8]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v26 = sub_24102B068;
  sub_24102BCFC(0, &qword_26B005FE0, (uint64_t (*)(uint64_t))sub_24102B068, MEMORY[0x263EFDEA0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v22 - v12;
  sub_24115C068();
  uint64_t v27 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  sub_24115BAD8(0);
  swift_bridgeObjectRetain();
  sub_24115FCC0();
  uint64_t v18 = v24;
  uint64_t v28 = v24;
  uint64_t v29 = v23;
  uint64_t v30 = v25;
  sub_24102B068(0);
  sub_24115FCA0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)(swift_allocObject() + 16) = v18;
  sub_24102BCFC(0, &qword_26B005A70, (uint64_t (*)(uint64_t))v26, MEMORY[0x263EFDCF0]);
  sub_24115C148();
  sub_24115B64C();
  sub_24115FE80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_24115A630(&qword_26B0057B0, (void (*)(uint64_t))sub_24115C068);
  uint64_t v19 = v27;
  uint64_t v20 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v19);
  return v20;
}

uint64_t sub_2411578B8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_24115D1C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_24115F790();
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v39 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v14 = *a1;
  sub_24115F730();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_24115F780();
  os_log_type_t v16 = sub_241160D20();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    os_log_t v34 = v15;
    uint64_t v19 = v18;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v41 = v35;
    *(_DWORD *)uint64_t v19 = 136446722;
    int v33 = v17;
    unint64_t v40 = sub_241151060();
    sub_24115B53C(0, &qword_26B004548, (void (*)(uint64_t))sub_241151060);
    uint64_t v37 = v3;
    uint64_t v20 = sub_241160760();
    uint64_t v36 = a3;
    unint64_t v40 = sub_24101F0A4(v20, v21, &v41);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    uint64_t v22 = (void *)sub_24115D170();
    uint64_t v23 = sub_24115CEE0();

    unint64_t v40 = v23;
    sub_24115C000(0, &qword_26B005E48, (unint64_t *)&qword_26B005E40, 0x263F0A618, MEMORY[0x263F8D8F0]);
    uint64_t v24 = sub_241160790();
    unint64_t v40 = sub_24101F0A4(v24, v25, &v41);
    sub_241161430();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    *(_WORD *)(v19 + 22) = 2082;
    unint64_t v40 = v14;
    sub_24102B068(0);
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_241160790();
    unint64_t v40 = sub_24101F0A4(v26, v27, &v41);
    a3 = v36;
    sub_241161430();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v28 = v34;
    _os_log_impl(&dword_241007000, v34, (os_log_type_t)v33, "[%{public}s]: for profile: %{public}s, generated new feed items: %{public}s", (uint8_t *)v19, 0x20u);
    uint64_t v29 = v35;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v29, -1, -1);
    MEMORY[0x2456180C0](v19, -1, -1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v13, v39);
  sub_24102AFE8(0, &qword_26B005F40, MEMORY[0x263F45828], MEMORY[0x263F8E0F8]);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_24116B200;
  *(void *)(v30 + 32) = v14;
  *(void *)(v30 + 40) = 0;
  *(void *)(v30 + 48) = 0;
  *(void *)(v30 + 56) = 0;
  *(unsigned char *)(v30 + 64) = 0;
  *(void *)(v30 + 72) = MEMORY[0x263F8EE78];
  *(void *)(v30 + 80) = 0;
  *(void *)(v30 + 88) = 0;
  *(void *)(v30 + 96) = 0;
  *(unsigned char *)(v30 + 104) = 32;
  *a3 = v30;
  return swift_bridgeObjectRetain();
}

uint64_t sub_241157D4C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24104CFD8();
  uint64_t v5 = v4;
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115B7E0(0, &qword_268CF26E0, MEMORY[0x263EFDEA0]);
  uint64_t v9 = v8;
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v36 = sub_24115F790();
  uint64_t v12 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  unint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  sub_24115F730();
  id v16 = v15;
  id v17 = v15;
  uint64_t v18 = sub_24115F780();
  os_log_type_t v19 = sub_241160D30();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v33 = v9;
    uint64_t v21 = v20;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v40 = v32;
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v35 = a2;
    unint64_t v39 = sub_241151060();
    sub_24115B53C(0, &qword_26B004548, (void (*)(uint64_t))sub_241151060);
    uint64_t v22 = sub_241160760();
    uint64_t v34 = v5;
    unint64_t v39 = sub_24101F0A4(v22, v23, &v40);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    unint64_t v39 = (unint64_t)v15;
    id v24 = v15;
    sub_24102A354();
    uint64_t v25 = sub_241160790();
    unint64_t v39 = sub_24101F0A4(v25, v26, &v40);
    a2 = v35;
    sub_241161430();
    uint64_t v5 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v18, v19, "[%{public}s] Unable to compute desired feed item difference based on sharable model change for commit: %{public}s", (uint8_t *)v21, 0x16u);
    uint64_t v27 = v32;
    swift_arrayDestroy();
    MEMORY[0x2456180C0](v27, -1, -1);
    uint64_t v28 = v21;
    uint64_t v9 = v33;
    MEMORY[0x2456180C0](v28, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v36);
  uint64_t v40 = MEMORY[0x263F8EE78];
  sub_24102AFE8(0, &qword_26B005CA8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  sub_24115FCC0();
  sub_24102A354();
  sub_24115FC90();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v5);
  sub_24115BFBC(&qword_268CF26E8, &qword_268CF26E0, MEMORY[0x263EFDEA0]);
  uint64_t v29 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v11, v9);
  *a2 = v29;
  return result;
}

void sub_241158200(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_24115827C(a1, a2, a3, a4);
  if (!v4)
  {
    uint64_t v6 = sub_24115D0A0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a4, 0, 1, v6);
  }
}

void sub_24115827C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = (void *)MEMORY[0x245617960]();
  sub_2411586C8(a1, a3, v4, a2, a4);
}

uint64_t sub_2411582FC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24102BCFC(0, &qword_268CF26F0, (uint64_t (*)(uint64_t))sub_24102B068, MEMORY[0x263EFDE08]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = sub_24115F790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  sub_24115F730();
  id v14 = v13;
  id v15 = v13;
  id v16 = sub_24115F780();
  os_log_type_t v17 = sub_241160D30();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v33 = v5;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v32 = v6;
    uint64_t v21 = v20;
    uint64_t v36 = v20;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v31 = v9;
    unint64_t v35 = sub_241151060();
    sub_24115B53C(0, &qword_26B004548, (void (*)(uint64_t))sub_241151060);
    uint64_t v22 = sub_241160760();
    uint64_t v34 = a2;
    unint64_t v35 = sub_24101F0A4(v22, v23, &v36);
    sub_241161430();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    unint64_t v35 = (unint64_t)v13;
    id v24 = v13;
    sub_24102A354();
    uint64_t v25 = sub_241160790();
    unint64_t v35 = sub_24101F0A4(v25, v26, &v36);
    sub_241161430();
    a2 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_241007000, v16, v17, "[%{public}s] Unable to generate sharing snippets: %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v21;
    uint64_t v6 = v32;
    MEMORY[0x2456180C0](v27, -1, -1);
    uint64_t v28 = v19;
    uint64_t v5 = v33;
    MEMORY[0x2456180C0](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v31);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_24102B068(0);
  sub_24102A354();
  sub_24115FCD0();
  sub_24115C248();
  uint64_t v29 = sub_24115FE20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v29;
  return result;
}

id sub_2411586C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v96 = a4;
  uint64_t v108 = a3;
  uint64_t v104 = a2;
  uint64_t v110 = a5;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_241023C5C(0, (unint64_t *)&unk_26B007220, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v95 = (char *)&v91 - v8;
  uint64_t v9 = sub_24115CB10();
  uint64_t v106 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v93 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v94 = (char *)&v91 - v12;
  sub_241023C5C(0, &qword_26B004128, MEMORY[0x263F45770], v6);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v105 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  os_log_type_t v17 = (char *)&v91 - v16;
  uint64_t v18 = sub_24115D1C0();
  uint64_t v113 = *(void *)(v18 - 8);
  uint64_t v114 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v112 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for SharedMedicationsFeedItemData(0);
  MEMORY[0x270FA5388](v121);
  uint64_t v117 = (uint64_t)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241023C5C(0, &qword_26B004138, MEMORY[0x263F45780], v6);
  MEMORY[0x270FA5388](v21 - 8);
  unint64_t v23 = (void (*)(char *, char *, uint64_t))((char *)&v91 - v22);
  sub_241023C5C(0, &qword_26B0040F8, MEMORY[0x263F45630], v6);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v116 = (uint64_t *)((char *)&v91 - v25);
  sub_241023C5C(0, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490], v6);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v98 = (uint64_t)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v91 - v29;
  uint64_t v31 = sub_24115CEB0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  unint64_t v92 = (char *)&v91 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v111 = (char *)&v91 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  unint64_t v39 = (char *)&v91 - v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v91 - v40;
  int v97 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v100 = v17;
  uint64_t v118 = v32;
  uint64_t v115 = (char *)&v91 - v40;
  uint64_t v99 = v9;
  uint64_t v102 = v23;
  if (v97)
  {
    (*(void (**)(char *, void, uint64_t))(v32 + 104))((char *)&v91 - v40, *MEMORY[0x263F454D0], v31);
    uint64_t v42 = v31;
  }
  else
  {
    uint64_t v43 = v9;
    os_log_t v44 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    sub_24115C560(a1 + *(int *)(v121 + 132), (uint64_t)v30, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
    LODWORD(v43) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v106 + 48))(v30, 1, v43);
    sub_24115C67C((uint64_t)v30, (unint64_t *)&qword_26B007240, v44);
    uint64_t v45 = (unsigned int *)MEMORY[0x263F45538];
    if (v43 != 1) {
      uint64_t v45 = (unsigned int *)MEMORY[0x263F45520];
    }
    (*(void (**)(char *, void, uint64_t))(v32 + 104))(v39, *v45, v31);
    uint64_t v46 = v39;
    uint64_t v42 = v31;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v41, v46, v31);
  }
  uint64_t v47 = v104;
  uint64_t v48 = (void *)sub_24115D170();
  uint64_t v49 = sub_2410D6C00();
  uint64_t v51 = v50;

  uint64_t v101 = a1 + *(int *)(v121 + 136);
  uint64_t v52 = (uint64_t)v102;
  sub_24115D3A0();
  uint64_t v53 = sub_24115D3B0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 0, 1, v53);
  type metadata accessor for SharedMedications_SharingVersionMismatchTileView(0);
  type metadata accessor for SharedMedicationsFeedItemGenerator(0);
  sub_24115A630(&qword_26B004450, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemGenerator);
  uint64_t v54 = v116;
  uint64_t v91 = v49;
  uint64_t v103 = v51;
  sub_24115E6E0();
  sub_24115C67C(v52, &qword_26B004138, MEMORY[0x263F45780]);
  uint64_t v108 = a1;
  sub_241027460(a1, v117, type metadata accessor for SharedMedicationsFeedItemData);
  uint64_t v55 = v111;
  uint64_t v102 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
  v102(v111, v115, v42);
  uint64_t v56 = v42;
  uint64_t v57 = v112;
  uint64_t v58 = v113;
  uint64_t v59 = v47;
  uint64_t v60 = v114;
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v112, v59, v114);
  uint64_t v61 = sub_24115D0A0();
  uint64_t v62 = *(void *)(v61 - 8);
  int v63 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v62 + 48))(v54, 1, v61);
  uint64_t v107 = v56;
  if (v63 == 1)
  {
    sub_24115A630(&qword_26B004270, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
    uint64_t v64 = v117;
    uint64_t v65 = v109;
    sub_24115C760();
    uint64_t v66 = (uint64_t)v105;
    if (v65)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v112, v114);
      int v67 = *(void (**)(char *, uint64_t))(v118 + 8);
      uint64_t v68 = v107;
      v67(v111, v107);
      sub_241017478(v64, type metadata accessor for SharedMedicationsFeedItemData);
      v67(v115, v68);
      return (id)sub_24115C67C((uint64_t)v116, &qword_26B0040F8, MEMORY[0x263F45630]);
    }
    uint64_t v109 = 0;
    type metadata accessor for SharedMedicationsTileViewController();
    uint64_t v71 = v111;
    v102(v92, v111, v107);
    unint64_t v72 = v112;
    sub_24115D170();
    sub_24115CF40();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v72, v114);
    uint64_t v70 = *(void (**)(char *, uint64_t))(v118 + 8);
    v70(v71, v107);
    sub_241017478(v117, type metadata accessor for SharedMedicationsFeedItemData);
    sub_24115C67C((uint64_t)v116, &qword_26B0040F8, MEMORY[0x263F45630]);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v60);
    uint64_t v70 = *(void (**)(char *, uint64_t))(v118 + 8);
    v70(v55, v56);
    sub_241017478(v117, type metadata accessor for SharedMedicationsFeedItemData);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v62 + 32))(v110, v116, v61);
    uint64_t v66 = (uint64_t)v105;
  }
  uint64_t v73 = v108;
  uint64_t v117 = sub_24115C2F0(v108);
  uint64_t v74 = sub_24115D360();
  uint64_t v75 = (uint64_t)v100;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v100, 1, 1, v74);
  uint64_t v76 = v98;
  sub_24115C560(v73 + *(int *)(v121 + 132), v98, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  uint64_t v77 = v106;
  uint64_t v78 = v99;
  int v79 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v76, 1, v99);
  uint64_t v116 = (uint64_t *)v70;
  if (v79 == 1)
  {
    sub_24115C67C(v76, (unint64_t *)&qword_26B007240, MEMORY[0x263F07490]);
  }
  else
  {
    uint64_t v80 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v94, v76, v78);
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v93, v80, v78);
    uint64_t v81 = v95;
    sub_24115C7E0();
    uint64_t v82 = sub_24115C810();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 0, 1, v82);
    sub_24115D350();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v80, v78);
    sub_24115C67C(v75, &qword_26B004128, MEMORY[0x263F45770]);
    sub_24115C5E0(v66, v75);
  }
  sub_24115C560(v75, v66, &qword_26B004128, MEMORY[0x263F45770]);
  sub_24115D000();
  sub_24115A630(&qword_26B004268, (void (*)(uint64_t))type metadata accessor for SharedMedicationsFeedItemData);
  sub_24115F440();
  sub_24115CFB0();
  unint64_t v83 = (void (*)(unint64_t *, void))sub_24115D070();
  uint64_t v84 = *(void *)(v117 + 16);
  if (v84)
  {
    uint64_t v85 = (uint64_t *)(v117 + 40);
    do
    {
      uint64_t v86 = *(v85 - 1);
      uint64_t v87 = *v85;
      swift_bridgeObjectRetain();
      sub_2410257B0(&v119, v86, v87);
      swift_bridgeObjectRelease();
      v85 += 2;
      --v84;
    }
    while (v84);
  }
  swift_bridgeObjectRelease();
  v83(&v120, 0);
  id result = objc_msgSend(self, sel_categoryWithID_, 31);
  if (result)
  {
    uint64_t v88 = result;
    sub_24115D020();

    sub_24115CFA0();
    sub_241023C5C(0, &qword_26B005F18, MEMORY[0x263F45618], MEMORY[0x263F8E0F8]);
    sub_24115D040();
    uint64_t v89 = swift_allocObject();
    *(_OWORD *)(v89 + 16) = xmmword_24116B370;
    swift_bridgeObjectRetain();
    sub_24115D030();
    sub_2410DF984(v89);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_24115D060();
    sub_24102AFE8(0, (unint64_t *)&qword_26B0073A0, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24116B220;
    *(void *)(inited + 32) = objc_msgSend(self, sel_medicationDoseEventType);
    unint64_t v120 = inited;
    sub_2411609C0();
    sub_2410DF478(v120);
    swift_bridgeObjectRelease();
    sub_24115CFE0();
    sub_24115C67C(v75, &qword_26B004128, MEMORY[0x263F45770]);
    return (id)((uint64_t (*)(char *, uint64_t))v116)(v115, v107);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_241159710()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34SharedMedicationsFeedItemGenerator_domain;
  uint64_t v2 = sub_24115D130();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_241017478(v0 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34SharedMedicationsFeedItemGenerator_context, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2411597EC()
{
  return type metadata accessor for SharedMedicationsFeedItemGenerator(0);
}

uint64_t type metadata accessor for SharedMedicationsFeedItemGenerator(uint64_t a1)
{
  return sub_24102806C(a1, (uint64_t *)&unk_26B004460);
}

uint64_t sub_241159814()
{
  uint64_t result = sub_24115D130();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MedicationsGeneratorContext();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_2411598FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34SharedMedicationsFeedItemGenerator_domain;
  uint64_t v4 = sub_24115D130();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_241159974(uint64_t a1, void (*a2)(void))
{
  sub_241023C5C(0, qword_26B004328, type metadata accessor for SharedMedicationsFeedItemData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v24 - v6;
  uint64_t v29 = type metadata accessor for SharedMedicationsFeedItemData(0);
  uint64_t v8 = *(void *)(v29 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v29);
  uint64_t v28 = (uint64_t)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v27 = (uint64_t)v24 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x263F8EE78];
  }
  v24[1] = v2;
  uint64_t v13 = *(void *)(sub_24115D320() - 8);
  uint64_t v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v25 = v8;
  uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v16 = *(void *)(v13 + 72);
  v24[0] = a1;
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v26 = a2;
  do
  {
    uint64_t v19 = (void *)MEMORY[0x245617960](v17);
    a2(v14);
    if ((*v15)(v7, 1, v29) == 1)
    {
      uint64_t v17 = sub_24115C67C((uint64_t)v7, qword_26B004328, type metadata accessor for SharedMedicationsFeedItemData);
    }
    else
    {
      uint64_t v20 = v27;
      sub_24104F320((uint64_t)v7, v27);
      sub_24104F320(v20, v28);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_24105311C(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v22 = *(void *)(v18 + 16);
      unint64_t v21 = *(void *)(v18 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v18 = sub_24105311C(v21 > 1, v22 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v22 + 1;
      uint64_t v17 = sub_24104F320(v28, v18+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v22);
      a2 = v26;
    }
    v14 += v16;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_241159C98(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v36 = a3;
  sub_241023C5C(0, &qword_26B0040F8, MEMORY[0x263F45630], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_24115D0A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v35 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v31 = (char *)&v28 - v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v15 = *(void *)(type metadata accessor for SharedMedicationsFeedItemData(0) - 8);
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v29 = v10;
  uint64_t v33 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v32 = *(void *)(v15 + 72);
  uint64_t v28 = a1;
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v30 = a2;
  do
  {
    uint64_t v19 = (void *)MEMORY[0x245617960](v17);
    a2(v16);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((*v34)(v8, 1, v9) == 1)
    {
      uint64_t v17 = sub_24115C67C((uint64_t)v8, &qword_26B0040F8, MEMORY[0x263F45630]);
    }
    else
    {
      uint64_t v20 = v9;
      unint64_t v21 = *v33;
      unint64_t v22 = v31;
      (*v33)(v31, v8, v20);
      unint64_t v23 = v22;
      uint64_t v24 = v20;
      v21(v35, v23, v20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_2410530D4(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v26 = *(void *)(v18 + 16);
      unint64_t v25 = *(void *)(v18 + 24);
      if (v26 >= v25 >> 1) {
        unint64_t v18 = sub_2410530D4(v25 > 1, v26 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v26 + 1;
      uint64_t v17 = ((uint64_t (*)(unint64_t, char *, uint64_t))v21)(v18+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v26, v35, v24);
      uint64_t v9 = v24;
      a2 = v30;
    }
    v16 += v32;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_24115A02C(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v22 = result + 32;
  uint64_t v20 = a2 + 7;
  uint64_t v21 = MEMORY[0x263F8EE78];
  do
  {
    if (v4 <= v2) {
      unint64_t v5 = v2;
    }
    else {
      unint64_t v5 = v4;
    }
    unint64_t v23 = v5;
    while (1)
    {
      if (v4 == v23) {
        goto LABEL_33;
      }
      uint64_t v6 = (uint64_t *)(v22 + 16 * v4);
      uint64_t v7 = *v6;
      uint64_t v8 = v6[1];
      ++v4;
      uint64_t v9 = a2[2];
      if (!v9) {
        goto LABEL_24;
      }
      uint64_t result = a2[4];
      if (result != v7 || a2[5] != v8)
      {
        uint64_t result = sub_241161890();
        if ((result & 1) == 0) {
          break;
        }
      }
LABEL_7:
      if (v4 == v2) {
        return v21;
      }
    }
    if (v9 != 1)
    {
      uint64_t v11 = v20;
      uint64_t v12 = 1;
      while (1)
      {
        uint64_t v13 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          break;
        }
        uint64_t result = *(v11 - 1);
        if (result == v7 && *v11 == v8) {
          goto LABEL_7;
        }
        uint64_t result = sub_241161890();
        if (result) {
          goto LABEL_7;
        }
        v11 += 2;
        ++v12;
        if (v13 == v9) {
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = v21;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_24102A550(0, *(void *)(v21 + 16) + 1, 1);
      uint64_t v15 = v21;
    }
    uint64_t v16 = v15;
    unint64_t v18 = *(void *)(v15 + 16);
    unint64_t v17 = *(void *)(v15 + 24);
    if (v18 >= v17 >> 1)
    {
      uint64_t result = sub_24102A550(v17 > 1, v18 + 1, 1);
      uint64_t v16 = v21;
    }
    *(void *)(v16 + 16) = v18 + 1;
    uint64_t v21 = v16;
    uint64_t v19 = v16 + 16 * v18;
    *(void *)(v19 + 32) = v7;
    *(void *)(v19 + 40) = v8;
  }
  while (v4 != v2);
  return v21;
}

uint64_t *sub_24115A1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v28 = *v3;
  uint64_t v27 = sub_24115D100();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24115D130();
  uint64_t v8 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for MedicationsGeneratorContext;
  uint64_t v22 = a1;
  sub_241027460(a1, (uint64_t)v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34SharedMedicationsFeedItemGenerator_context, (uint64_t (*)(void))type metadata accessor for MedicationsGeneratorContext);
  uint64_t v23 = a2;
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34SharedMedicationsFeedItemGenerator_changes) = a2;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_24115D170();
  sub_241023C5C(0, (unint64_t *)&qword_26B007388, MEMORY[0x263F45588], MEMORY[0x263F8E0F8]);
  uint64_t v11 = sub_24115CEB0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24116B200;
  unint64_t v16 = v15 + v14;
  unint64_t v17 = *(void (**)(unint64_t, void, uint64_t))(v12 + 104);
  v17(v16, *MEMORY[0x263F45520], v11);
  v17(v16 + v13, *MEMORY[0x263F454D0], v11);
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v7, *MEMORY[0x263F45698], v27);
  sub_24115D110();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))((uint64_t)v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34SharedMedicationsFeedItemGenerator_domain, v10, v26);
  uint64_t v18 = v22;
  uint64_t v19 = sub_24115566C(v22, v23, (uint64_t)v3 + OBJC_IVAR____TtC26MedicationsHealthAppPlugin34SharedMedicationsFeedItemGenerator_domain);
  sub_241017478(v18, (uint64_t (*)(void))v24);
  v3[2] = v19;
  return v3;
}

void sub_24115A548()
{
  if (!qword_26B0058A8)
  {
    sub_24102BB60();
    sub_24102BBEC();
    sub_24115A630(&qword_26B005AA8, (void (*)(uint64_t))sub_24102BB60);
    sub_24115A630(&qword_26B005A88, (void (*)(uint64_t))sub_24102BBEC);
    unint64_t v0 = sub_24115FBA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0058A8);
    }
  }
}

uint64_t sub_24115A630(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24115A678()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_24115D130();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x270FA0238](v0, v11, v10);
}

uint64_t sub_24115A7F0@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_24115D130() - 8);
  uint64_t v10 = *(void *)(v2 + v7);
  uint64_t v11 = *(void *)(v2 + v8);
  uint64_t v12 = v2 + ((v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_241155BC8(a1, v2 + v6, v10, v11, v12, a2);
}

void sub_24115A91C()
{
  if (!qword_26B0059C0)
  {
    sub_24102BB60();
    sub_24115A630(&qword_26B005AA8, (void (*)(uint64_t))sub_24102BB60);
    unint64_t v0 = sub_24115FBE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0059C0);
    }
  }
}

void sub_24115A9B0(uint64_t *a1@<X8>)
{
}

uint64_t sub_24115A9CC(void (*a1)(char *, uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v58 = a1;
  sub_24115B57C();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  uint64_t v65 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v61 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115B6D4();
  uint64_t v66 = v6;
  uint64_t v68 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v62 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115B87C();
  uint64_t v67 = v8;
  uint64_t v69 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int v63 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_24115D1C0();
  uint64_t v54 = *(void *)(v71 - 8);
  uint64_t v73 = *(void *)(v54 + 64);
  MEMORY[0x270FA5388](v71);
  uint64_t v53 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_24115D2D0();
  uint64_t v11 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115B910();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115BA2C();
  uint64_t v55 = v19;
  uint64_t v56 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v48 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115BB0C();
  uint64_t v57 = v21;
  uint64_t v59 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v52 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24115C780();
  swift_allocObject();
  uint64_t v70 = sub_24115C770();
  uint64_t v50 = a2;
  sub_24115D150();
  sub_24101A6BC(v75, v75[3]);
  uint64_t v74 = sub_24115D0C0();
  sub_24115D2B0();
  uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_24102BCFC(0, &qword_26B005A20, MEMORY[0x263F45718], MEMORY[0x263EFDCF0]);
  sub_24115B9A4();
  sub_24115FE40();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v60);
  swift_release();
  sub_24101F178((uint64_t)v75);
  *(void *)(swift_allocObject() + 16) = v58;
  sub_24115BAD8(0);
  uint64_t v60 = MEMORY[0x263EFDAA8];
  sub_24115A630(&qword_26B005520, (void (*)(uint64_t))sub_24115B910);
  swift_bridgeObjectRetain();
  sub_24115FE70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v23 = v54;
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
  uint64_t v24 = v53;
  uint64_t v25 = v71;
  v58(v53, a2, v71);
  uint64_t v26 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v49 = v26 | 7;
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v70;
  *(void *)(v27 + 16) = v72;
  *(void *)(v27 + 24) = v28;
  uint64_t v54 = *(void *)(v23 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v54)(v27 + ((v26 + 32) & ~v26), v24, v25);
  swift_retain();
  sub_24115FC10();
  sub_24102BCFC(0, &qword_26B005A70, (uint64_t (*)(uint64_t))sub_24102B068, v51);
  uint64_t v51 = v29;
  sub_24115A630(&qword_26B0056A0, (void (*)(uint64_t))sub_24115BA2C);
  sub_24115B64C();
  uint64_t v30 = v52;
  uint64_t v31 = v55;
  uint64_t v32 = v48;
  sub_24115FF70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v31);
  sub_24115A630(&qword_26B005890, (void (*)(uint64_t))sub_24115BB0C);
  uint64_t v33 = v57;
  uint64_t v34 = sub_24115FE20();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v30, v33);
  v75[0] = v34;
  uint64_t v35 = v71;
  v58(v24, v50, v71);
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = v72;
  *(void *)(v36 + 16) = v72;
  ((void (*)(uint64_t, char *, uint64_t))v54)(v36 + ((v26 + 24) & ~v26), v24, v35);
  sub_24102AFE8(0, &qword_26B005CA8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
  uint64_t v38 = v61;
  sub_24115FEB0();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v37;
  unint64_t v39 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
  sub_24115B7E0(0, &qword_26B005AA0, MEMORY[0x263EFDCF0]);
  sub_24115A630(&qword_26B0057F0, (void (*)(uint64_t))sub_24115B57C);
  sub_24115BFBC(&qword_26B005A98, &qword_26B005AA0, v39);
  uint64_t v40 = v62;
  uint64_t v41 = v64;
  sub_24115FE80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v41);
  v75[0] = MEMORY[0x263F8EE78];
  sub_24115A630(&qword_26B005750, (void (*)(uint64_t))sub_24115B6D4);
  uint64_t v42 = v63;
  uint64_t v43 = v66;
  sub_24115FE40();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v40, v43);
  sub_24115A630(&qword_26B005550, (void (*)(uint64_t))sub_24115B87C);
  uint64_t v44 = v67;
  uint64_t v45 = sub_24115FE20();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v44);
  return v45;
}

unint64_t sub_24115B4B4()
{
  unint64_t result = qword_26B005D80;
  if (!qword_26B005D80)
  {
    sub_241023C5C(255, &qword_26B005D78, (uint64_t (*)(uint64_t))sub_24102BB60, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005D80);
  }
  return result;
}

uint64_t sub_24115B53C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3(255);
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_24115B57C()
{
  if (!qword_26B0057F8)
  {
    sub_24102BCFC(255, &qword_26B005A70, (uint64_t (*)(uint64_t))sub_24102B068, MEMORY[0x263EFDCF0]);
    sub_24102AFE8(255, &qword_26B005CA8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    sub_24115B64C();
    unint64_t v0 = sub_24115FB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0057F8);
    }
  }
}

unint64_t sub_24115B64C()
{
  unint64_t result = qword_26B005A68;
  if (!qword_26B005A68)
  {
    sub_24102BCFC(255, &qword_26B005A70, (uint64_t (*)(uint64_t))sub_24102B068, MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005A68);
  }
  return result;
}

void sub_24115B6D4()
{
  if (!qword_26B005758)
  {
    sub_24115B57C();
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x263EFDCF0];
    sub_24115B7E0(255, &qword_26B005AA0, MEMORY[0x263EFDCF0]);
    sub_24115A630(&qword_26B0057F0, (void (*)(uint64_t))sub_24115B57C);
    sub_24115BFBC(&qword_26B005A98, &qword_26B005AA0, v0);
    unint64_t v1 = sub_24115FB60();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B005758);
    }
  }
}

void sub_24115B7E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_24102AFE8(255, &qword_26B005CA8, MEMORY[0x263F45828], MEMORY[0x263F8D488]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_24102A354();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x263F8E4E0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24115B87C()
{
  if (!qword_26B005558)
  {
    sub_24115B6D4();
    sub_24115A630(&qword_26B005750, (void (*)(uint64_t))sub_24115B6D4);
    unint64_t v0 = sub_24115FB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005558);
    }
  }
}

void sub_24115B910()
{
  if (!qword_26B005528)
  {
    sub_24102BCFC(255, &qword_26B005A20, MEMORY[0x263F45718], MEMORY[0x263EFDCF0]);
    sub_24115B9A4();
    unint64_t v0 = sub_24115FB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005528);
    }
  }
}

unint64_t sub_24115B9A4()
{
  unint64_t result = qword_26B005A18;
  if (!qword_26B005A18)
  {
    sub_24102BCFC(255, &qword_26B005A20, MEMORY[0x263F45718], MEMORY[0x263EFDCF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005A18);
  }
  return result;
}

void sub_24115BA2C()
{
  if (!qword_26B0056A8)
  {
    sub_24115B910();
    sub_24115BAD8(255);
    sub_24115A630(&qword_26B005520, (void (*)(uint64_t))sub_24115B910);
    unint64_t v0 = sub_24115FB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0056A8);
    }
  }
}

void sub_24115BAD8(uint64_t a1)
{
}

void sub_24115BB0C()
{
  if (!qword_26B005898)
  {
    sub_24102BCFC(255, &qword_26B005A70, (uint64_t (*)(uint64_t))sub_24102B068, MEMORY[0x263EFDCF0]);
    sub_24115BBF8();
    sub_24115B64C();
    sub_24115A630(&qword_26B0055A0, (void (*)(uint64_t))sub_24115BBF8);
    unint64_t v0 = sub_24115FBA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B005898);
    }
  }
}

void sub_24115BBF8()
{
  if (!qword_26B0055A8)
  {
    sub_24115BA2C();
    sub_24102A354();
    sub_24115A630(&qword_26B0056A0, (void (*)(uint64_t))sub_24115BA2C);
    unint64_t v0 = sub_24115FB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0055A8);
    }
  }
}

uint64_t sub_24115BCB4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

unint64_t sub_24115BCEC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_241159974(*(void *)(v1 + 16), (void (*)(void))sub_24115C674);
  *a1 = result;
  return result;
}

uint64_t sub_24115BD4C()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24115BE18@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  uint64_t result = sub_241157510(*a1, *(void *)(v2 + 24), v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
  *a2 = result;
  return result;
}

uint64_t sub_24115BE94()
{
  uint64_t v1 = sub_24115D1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24115BF24@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24115D1C0() - 8);
  return sub_2411578B8(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_24115BFA4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24115BFB4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_241157D4C(a1, a2);
}

uint64_t sub_24115BFBC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24115B7E0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24115C000(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_241024708(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_24115C068()
{
  if (!qword_26B0057B8)
  {
    sub_24102BCFC(255, &qword_26B005FE0, (uint64_t (*)(uint64_t))sub_24102B068, MEMORY[0x263EFDEA0]);
    sub_24102BCFC(255, &qword_26B005A70, (uint64_t (*)(uint64_t))sub_24102B068, MEMORY[0x263EFDCF0]);
    sub_24115C148();
    sub_24115B64C();
    unint64_t v0 = sub_24115FB60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B0057B8);
    }
  }
}

unint64_t sub_24115C148()
{
  unint64_t result = qword_26B005FD8;
  if (!qword_26B005FD8)
  {
    sub_24102BCFC(255, &qword_26B005FE0, (uint64_t (*)(uint64_t))sub_24102B068, MEMORY[0x263EFDEA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B005FD8);
  }
  return result;
}

unint64_t sub_24115C1D0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v6 = *a1;
  v8[1] = *(_OWORD *)(v2 + 16);
  uint64_t v9 = v5;
  unint64_t result = sub_241159C98(v6, (void (*)(void))sub_24115C2D0, (uint64_t)v8);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24115C230()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24115C240@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2411582FC(a1, a2);
}

unint64_t sub_24115C248()
{
  unint64_t result = qword_268CF26F8;
  if (!qword_268CF26F8)
  {
    sub_24102BCFC(255, &qword_268CF26F0, (uint64_t (*)(uint64_t))sub_24102B068, MEMORY[0x263EFDE08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268CF26F8);
  }
  return result;
}

void sub_24115C2D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_241158200(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_24115C2F0(uint64_t a1)
{
  sub_241069050();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24102AFE8(0, (unint64_t *)&qword_26B007390, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24116B200;
  *(void *)(v5 + 32) = sub_24115D290();
  *(void *)(v5 + 40) = v6;
  *(void *)(v5 + 48) = sub_24115D240();
  *(void *)(v5 + 56) = v7;
  uint64_t v8 = type metadata accessor for SharedMedicationsFeedItemData(0);
  if (*(unsigned char *)(a1 + *(int *)(v8 + 128)) == 1)
  {
    uint64_t v9 = sub_24115D260();
    uint64_t v11 = v10;
    uint64_t v5 = (uint64_t)sub_241051F68((void *)1, 3, 1, (void *)v5);
    *(void *)(v5 + 16) = 3;
    *(void *)(v5 + 64) = v9;
    *(void *)(v5 + 72) = v11;
  }
  else
  {
    sub_241027460(a1 + *(int *)(v8 + 112), (uint64_t)v4, (uint64_t (*)(void))sub_241069050);
    sub_24115C000(0, &qword_26B004090, &qword_26B007348, 0x263F44BE8, MEMORY[0x263F08F88]);
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v12) == 1)
    {
      sub_241017478((uint64_t)v4, (uint64_t (*)(void))sub_241069050);
      uint64_t v15 = sub_24115D280();
    }
    else
    {
      uint64_t v17 = (void *)sub_2411604D0();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);

      uint64_t v15 = sub_24115D270();
    }
    uint64_t v18 = v15;
    uint64_t v19 = v16;
    unint64_t v21 = *(void *)(v5 + 16);
    unint64_t v20 = *(void *)(v5 + 24);
    unint64_t v22 = v21 + 1;
    if (v21 >= v20 >> 1)
    {
      unint64_t v27 = v21 + 1;
      uint64_t v25 = sub_241051F68((void *)(v20 > 1), v21 + 1, 1, (void *)v5);
      unint64_t v22 = v27;
      uint64_t v5 = (uint64_t)v25;
    }
    *(void *)(v5 + 16) = v22;
    uint64_t v23 = v5 + 16 * v21;
    *(void *)(v23 + 32) = v18;
    *(void *)(v23 + 40) = v19;
  }
  return v5;
}

uint64_t sub_24115C560(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_241023C5C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_24115C5E0(uint64_t a1, uint64_t a2)
{
  sub_241023C5C(0, &qword_26B004128, MEMORY[0x263F45770], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_24115C674@<X0>(uint64_t a1@<X8>)
{
  return sub_24115746C(a1);
}

uint64_t sub_24115C67C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_241023C5C(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_24115C6EC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_24115C720()
{
  return MEMORY[0x270EEDAC8]();
}

uint64_t sub_24115C730()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_24115C740()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_24115C750()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_24115C760()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_24115C770()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_24115C780()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_24115C790()
{
  return MEMORY[0x270EEE098]();
}

uint64_t sub_24115C7A0()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_24115C7B0()
{
  return MEMORY[0x270EEE2C8]();
}

uint64_t sub_24115C7C0()
{
  return MEMORY[0x270EEE2F0]();
}

uint64_t sub_24115C7D0()
{
  return MEMORY[0x270EEE2F8]();
}

uint64_t sub_24115C7E0()
{
  return MEMORY[0x270EEE300]();
}

uint64_t sub_24115C7F0()
{
  return MEMORY[0x270EEE308]();
}

uint64_t sub_24115C800()
{
  return MEMORY[0x270EEE318]();
}

uint64_t sub_24115C810()
{
  return MEMORY[0x270EEE338]();
}

uint64_t sub_24115C820()
{
  return MEMORY[0x270EEE3A8]();
}

uint64_t sub_24115C830()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_24115C840()
{
  return MEMORY[0x270EEE3E0]();
}

uint64_t sub_24115C850()
{
  return MEMORY[0x270EEE3F0]();
}

uint64_t sub_24115C860()
{
  return MEMORY[0x270EEE408]();
}

uint64_t sub_24115C870()
{
  return MEMORY[0x270EEE410]();
}

uint64_t sub_24115C880()
{
  return MEMORY[0x270EEE4B0]();
}

uint64_t sub_24115C890()
{
  return MEMORY[0x270EEE4C0]();
}

uint64_t sub_24115C8A0()
{
  return MEMORY[0x270EEE518]();
}

uint64_t sub_24115C8B0()
{
  return MEMORY[0x270EEE520]();
}

uint64_t sub_24115C8C0()
{
  return MEMORY[0x270EEE558]();
}

uint64_t sub_24115C8D0()
{
  return MEMORY[0x270EEE568]();
}

uint64_t sub_24115C8E0()
{
  return MEMORY[0x270EEE610]();
}

uint64_t sub_24115C8F0()
{
  return MEMORY[0x270EEE738]();
}

uint64_t sub_24115C900()
{
  return MEMORY[0x270EEE768]();
}

uint64_t sub_24115C910()
{
  return MEMORY[0x270EEE890]();
}

uint64_t sub_24115C920()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_24115C930()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_24115C940()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_24115C950()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_24115C960()
{
  return MEMORY[0x270EEEEC0]();
}

uint64_t sub_24115C970()
{
  return MEMORY[0x270EEF0A0]();
}

uint64_t sub_24115C980()
{
  return MEMORY[0x270EEFA08]();
}

uint64_t sub_24115C990()
{
  return MEMORY[0x270EEFA18]();
}

uint64_t sub_24115C9A0()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_24115C9B0()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_24115C9C0()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_24115C9D0()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_24115C9E0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24115C9F0()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_24115CA00()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_24115CA10()
{
  return MEMORY[0x270EF02B0]();
}

uint64_t sub_24115CA20()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_24115CA30()
{
  return MEMORY[0x270EF06E8]();
}

uint64_t sub_24115CA40()
{
  return MEMORY[0x270EF0700]();
}

uint64_t sub_24115CA50()
{
  return MEMORY[0x270F31B98]();
}

uint64_t sub_24115CA60()
{
  return MEMORY[0x270F31BB0]();
}

uint64_t sub_24115CA70()
{
  return MEMORY[0x270F31BD8]();
}

uint64_t sub_24115CA80()
{
  return MEMORY[0x270F31BE0]();
}

uint64_t sub_24115CA90()
{
  return MEMORY[0x270EF0898]();
}

uint64_t sub_24115CAA0()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_24115CAB0()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_24115CAC0()
{
  return MEMORY[0x270F352E0]();
}

uint64_t sub_24115CAD0()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_24115CAE0()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_24115CAF0()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_24115CB00()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_24115CB10()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24115CB20()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_24115CB30()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_24115CB40()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24115CB50()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24115CB60()
{
  return MEMORY[0x270EF0EE0]();
}

uint64_t sub_24115CB70()
{
  return MEMORY[0x270EF0EF8]();
}

uint64_t sub_24115CB80()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_24115CB90()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_24115CBA0()
{
  return MEMORY[0x270EF10C8]();
}

uint64_t sub_24115CBB0()
{
  return MEMORY[0x270EF10D8]();
}

uint64_t sub_24115CBC0()
{
  return MEMORY[0x270EF1100]();
}

uint64_t sub_24115CBD0()
{
  return MEMORY[0x270EF1120]();
}

uint64_t sub_24115CBE0()
{
  return MEMORY[0x270EF1150]();
}

uint64_t sub_24115CBF0()
{
  return MEMORY[0x270EF1258]();
}

uint64_t sub_24115CC00()
{
  return MEMORY[0x270EF12A0]();
}

uint64_t sub_24115CC10()
{
  return MEMORY[0x270EF12A8]();
}

uint64_t sub_24115CC20()
{
  return MEMORY[0x270EF12C8]();
}

uint64_t sub_24115CC30()
{
  return MEMORY[0x270EF12E8]();
}

uint64_t sub_24115CC40()
{
  return MEMORY[0x270EF1308]();
}

uint64_t sub_24115CC50()
{
  return MEMORY[0x270EF1350]();
}

uint64_t sub_24115CC60()
{
  return MEMORY[0x270EF1388]();
}

uint64_t sub_24115CC70()
{
  return MEMORY[0x270EF13C0]();
}

uint64_t sub_24115CC80()
{
  return MEMORY[0x270EF13C8]();
}

uint64_t sub_24115CC90()
{
  return MEMORY[0x270EF13D8]();
}

uint64_t sub_24115CCA0()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_24115CCB0()
{
  return MEMORY[0x270EF1430]();
}

uint64_t sub_24115CCC0()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_24115CCD0()
{
  return MEMORY[0x270EF14C8]();
}

uint64_t sub_24115CCE0()
{
  return MEMORY[0x270EF14D8]();
}

uint64_t sub_24115CCF0()
{
  return MEMORY[0x270EF1510]();
}

uint64_t sub_24115CD00()
{
  return MEMORY[0x270EF1518]();
}

uint64_t sub_24115CD10()
{
  return MEMORY[0x270EF1520]();
}

uint64_t sub_24115CD20()
{
  return MEMORY[0x270EF1528]();
}

uint64_t sub_24115CD30()
{
  return MEMORY[0x270EF1538]();
}

uint64_t sub_24115CD40()
{
  return MEMORY[0x270EF1550]();
}

uint64_t sub_24115CD50()
{
  return MEMORY[0x270EF15A0]();
}

uint64_t sub_24115CD60()
{
  return MEMORY[0x270EF15E8]();
}

uint64_t sub_24115CD70()
{
  return MEMORY[0x270EF1600]();
}

uint64_t sub_24115CD80()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_24115CD90()
{
  return MEMORY[0x270EF16E0]();
}

uint64_t sub_24115CDA0()
{
  return MEMORY[0x270EF1700]();
}

uint64_t sub_24115CDB0()
{
  return MEMORY[0x270F816F8]();
}

uint64_t sub_24115CDC0()
{
  return MEMORY[0x270F81700]();
}

uint64_t sub_24115CDD0()
{
  return MEMORY[0x270F81710]();
}

uint64_t sub_24115CDE0()
{
  return MEMORY[0x270F81718]();
}

uint64_t sub_24115CDF0()
{
  return MEMORY[0x270F81740]();
}

uint64_t sub_24115CE00()
{
  return MEMORY[0x270EF1738]();
}

uint64_t sub_24115CE10()
{
  return MEMORY[0x270F32640]();
}

uint64_t sub_24115CE20()
{
  return MEMORY[0x270F32658]();
}

uint64_t sub_24115CE30()
{
  return MEMORY[0x270F36140]();
}

uint64_t sub_24115CE40()
{
  return MEMORY[0x270F36148]();
}

uint64_t sub_24115CE50()
{
  return MEMORY[0x270F36180]();
}

uint64_t sub_24115CE60()
{
  return MEMORY[0x270F36198]();
}

uint64_t sub_24115CE70()
{
  return MEMORY[0x270F361A0]();
}

uint64_t sub_24115CE80()
{
  return MEMORY[0x270F361A8]();
}

uint64_t sub_24115CE90()
{
  return MEMORY[0x270F361B8]();
}

uint64_t sub_24115CEA0()
{
  return MEMORY[0x270F361C0]();
}

uint64_t sub_24115CEB0()
{
  return MEMORY[0x270F362C0]();
}

uint64_t sub_24115CEC0()
{
  return MEMORY[0x270F362D0]();
}

uint64_t sub_24115CED0()
{
  return MEMORY[0x270F362D8]();
}

uint64_t sub_24115CEE0()
{
  return MEMORY[0x270F36320]();
}

uint64_t sub_24115CEF0()
{
  return MEMORY[0x270F36328]();
}

uint64_t sub_24115CF00()
{
  return MEMORY[0x270F36330]();
}

uint64_t sub_24115CF10()
{
  return MEMORY[0x270F36338]();
}

uint64_t sub_24115CF20()
{
  return MEMORY[0x270F36340]();
}

uint64_t sub_24115CF30()
{
  return MEMORY[0x270F36348]();
}

uint64_t sub_24115CF40()
{
  return MEMORY[0x270F31BE8]();
}

uint64_t sub_24115CF50()
{
  return MEMORY[0x270F32660]();
}

uint64_t sub_24115CF60()
{
  return MEMORY[0x270F32680]();
}

uint64_t sub_24115CF70()
{
  return MEMORY[0x270F32688]();
}

uint64_t sub_24115CF80()
{
  return MEMORY[0x270F363B8]();
}

uint64_t sub_24115CF90()
{
  return MEMORY[0x270F363D8]();
}

uint64_t sub_24115CFA0()
{
  return MEMORY[0x270F363E8]();
}

uint64_t sub_24115CFB0()
{
  return MEMORY[0x270F363F8]();
}

uint64_t sub_24115CFC0()
{
  return MEMORY[0x270F36400]();
}

uint64_t sub_24115CFD0()
{
  return MEMORY[0x270F36408]();
}

uint64_t sub_24115CFE0()
{
  return MEMORY[0x270F36420]();
}

uint64_t sub_24115CFF0()
{
  return MEMORY[0x270F36460]();
}

uint64_t sub_24115D000()
{
  return MEMORY[0x270F36470]();
}

uint64_t sub_24115D010()
{
  return MEMORY[0x270F36488]();
}

uint64_t sub_24115D020()
{
  return MEMORY[0x270F36490]();
}

uint64_t sub_24115D030()
{
  return MEMORY[0x270F36498]();
}

uint64_t sub_24115D040()
{
  return MEMORY[0x270F364A0]();
}

uint64_t sub_24115D050()
{
  return MEMORY[0x270F364B0]();
}

uint64_t sub_24115D060()
{
  return MEMORY[0x270F364C0]();
}

uint64_t sub_24115D070()
{
  return MEMORY[0x270F364C8]();
}

uint64_t sub_24115D080()
{
  return MEMORY[0x270F364D8]();
}

uint64_t sub_24115D090()
{
  return MEMORY[0x270F364F0]();
}

uint64_t sub_24115D0A0()
{
  return MEMORY[0x270F36500]();
}

uint64_t sub_24115D0B0()
{
  return MEMORY[0x270F36528]();
}

uint64_t sub_24115D0C0()
{
  return MEMORY[0x270F36540]();
}

uint64_t sub_24115D0D0()
{
  return MEMORY[0x270F36568]();
}

uint64_t sub_24115D0E0()
{
  return MEMORY[0x270F36590]();
}

uint64_t sub_24115D0F0()
{
  return MEMORY[0x270F365A0]();
}

uint64_t sub_24115D100()
{
  return MEMORY[0x270F365D8]();
}

uint64_t sub_24115D110()
{
  return MEMORY[0x270F365F0]();
}

uint64_t sub_24115D120()
{
  return MEMORY[0x270F36600]();
}

uint64_t sub_24115D130()
{
  return MEMORY[0x270F36608]();
}

uint64_t sub_24115D140()
{
  return MEMORY[0x270F36610]();
}

uint64_t sub_24115D150()
{
  return MEMORY[0x270F36618]();
}

uint64_t sub_24115D160()
{
  return MEMORY[0x270F36620]();
}

uint64_t sub_24115D170()
{
  return MEMORY[0x270F36630]();
}

uint64_t sub_24115D180()
{
  return MEMORY[0x270F36638]();
}

uint64_t sub_24115D190()
{
  return MEMORY[0x270F36640]();
}

uint64_t sub_24115D1A0()
{
  return MEMORY[0x270F36648]();
}

uint64_t sub_24115D1B0()
{
  return MEMORY[0x270F36658]();
}

uint64_t sub_24115D1C0()
{
  return MEMORY[0x270F36660]();
}

uint64_t sub_24115D1D0()
{
  return MEMORY[0x270F366E0]();
}

uint64_t sub_24115D1E0()
{
  return MEMORY[0x270F366F0]();
}

uint64_t sub_24115D1F0()
{
  return MEMORY[0x270F366F8]();
}

uint64_t sub_24115D200()
{
  return MEMORY[0x270F36FC0]();
}

uint64_t sub_24115D210()
{
  return MEMORY[0x270F36780]();
}

uint64_t sub_24115D220()
{
  return MEMORY[0x270F367E8]();
}

uint64_t sub_24115D230()
{
  return MEMORY[0x270F36800]();
}

uint64_t sub_24115D240()
{
  return MEMORY[0x270F36850]();
}

uint64_t sub_24115D250()
{
  return MEMORY[0x270F36870]();
}

uint64_t sub_24115D260()
{
  return MEMORY[0x270F36878]();
}

uint64_t sub_24115D270()
{
  return MEMORY[0x270F36880]();
}

uint64_t sub_24115D280()
{
  return MEMORY[0x270F36888]();
}

uint64_t sub_24115D290()
{
  return MEMORY[0x270F368A8]();
}

uint64_t sub_24115D2A0()
{
  return MEMORY[0x270F368C8]();
}

uint64_t sub_24115D2B0()
{
  return MEMORY[0x270F368D0]();
}

uint64_t sub_24115D2C0()
{
  return MEMORY[0x270F368D8]();
}

uint64_t sub_24115D2D0()
{
  return MEMORY[0x270F368F0]();
}

uint64_t sub_24115D2E0()
{
  return MEMORY[0x270F36908]();
}

uint64_t sub_24115D2F0()
{
  return MEMORY[0x270F36910]();
}

uint64_t sub_24115D300()
{
  return MEMORY[0x270F36928]();
}

uint64_t sub_24115D310()
{
  return MEMORY[0x270F36930]();
}

uint64_t sub_24115D320()
{
  return MEMORY[0x270F36948]();
}

uint64_t sub_24115D330()
{
  return MEMORY[0x270F36978]();
}

uint64_t sub_24115D340()
{
  return MEMORY[0x270F36980]();
}

uint64_t sub_24115D350()
{
  return MEMORY[0x270F369C0]();
}

uint64_t sub_24115D360()
{
  return MEMORY[0x270F369C8]();
}

uint64_t sub_24115D370()
{
  return MEMORY[0x270F369D0]();
}

uint64_t sub_24115D380()
{
  return MEMORY[0x270F369D8]();
}

uint64_t sub_24115D390()
{
  return MEMORY[0x270F369E0]();
}

uint64_t sub_24115D3A0()
{
  return MEMORY[0x270F36A10]();
}

uint64_t sub_24115D3B0()
{
  return MEMORY[0x270F36A28]();
}

uint64_t sub_24115D3C0()
{
  return MEMORY[0x270F36B88]();
}

uint64_t sub_24115D3D0()
{
  return MEMORY[0x270F36C08]();
}

uint64_t sub_24115D3E0()
{
  return MEMORY[0x270F36C10]();
}

uint64_t sub_24115D3F0()
{
  return MEMORY[0x270F36C18]();
}

uint64_t sub_24115D400()
{
  return MEMORY[0x270F36C20]();
}

uint64_t sub_24115D410()
{
  return MEMORY[0x270F36D20]();
}

uint64_t sub_24115D420()
{
  return MEMORY[0x270F36D28]();
}

uint64_t sub_24115D430()
{
  return MEMORY[0x270F36DA0]();
}

uint64_t sub_24115D440()
{
  return MEMORY[0x270F36DA8]();
}

uint64_t sub_24115D450()
{
  return MEMORY[0x270F36DB8]();
}

uint64_t sub_24115D460()
{
  return MEMORY[0x270F36FE0]();
}

uint64_t sub_24115D470()
{
  return MEMORY[0x270F36FF8]();
}

uint64_t sub_24115D480()
{
  return MEMORY[0x270F37000]();
}

uint64_t sub_24115D490()
{
  return MEMORY[0x270F37008]();
}

uint64_t sub_24115D4A0()
{
  return MEMORY[0x270F36DC8]();
}

uint64_t sub_24115D4B0()
{
  return MEMORY[0x270F36DD8]();
}

uint64_t sub_24115D4C0()
{
  return MEMORY[0x270F36DE8]();
}

uint64_t sub_24115D4D0()
{
  return MEMORY[0x270F37338]();
}

uint64_t sub_24115D4E0()
{
  return MEMORY[0x270F37340]();
}

uint64_t sub_24115D4F0()
{
  return MEMORY[0x270F37348]();
}

uint64_t sub_24115D500()
{
  return MEMORY[0x270F374D0]();
}

uint64_t sub_24115D510()
{
  return MEMORY[0x270F374D8]();
}

uint64_t sub_24115D520()
{
  return MEMORY[0x270F374E8]();
}

uint64_t sub_24115D530()
{
  return MEMORY[0x270F375B0]();
}

uint64_t sub_24115D540()
{
  return MEMORY[0x270F375B8]();
}

uint64_t sub_24115D550()
{
  return MEMORY[0x270F375C0]();
}

uint64_t sub_24115D560()
{
  return MEMORY[0x270F375C8]();
}

uint64_t sub_24115D570()
{
  return MEMORY[0x270F37610]();
}

uint64_t sub_24115D580()
{
  return MEMORY[0x270F37618]();
}

uint64_t sub_24115D590()
{
  return MEMORY[0x270F37620]();
}

uint64_t sub_24115D5A0()
{
  return MEMORY[0x270F37628]();
}

uint64_t sub_24115D5B0()
{
  return MEMORY[0x270F37630]();
}

uint64_t sub_24115D5C0()
{
  return MEMORY[0x270F37638]();
}

uint64_t sub_24115D5D0()
{
  return MEMORY[0x270F37640]();
}

uint64_t sub_24115D5E0()
{
  return MEMORY[0x270F37648]();
}

uint64_t sub_24115D5F0()
{
  return MEMORY[0x270F37650]();
}

uint64_t sub_24115D600()
{
  return MEMORY[0x270F37658]();
}

uint64_t sub_24115D610()
{
  return MEMORY[0x270F376A8]();
}

uint64_t sub_24115D620()
{
  return MEMORY[0x270F376B0]();
}

uint64_t sub_24115D630()
{
  return MEMORY[0x270F377C8]();
}

uint64_t sub_24115D640()
{
  return MEMORY[0x270F377E8]();
}

uint64_t sub_24115D650()
{
  return MEMORY[0x270F37800]();
}

uint64_t sub_24115D660()
{
  return MEMORY[0x270F37808]();
}

uint64_t sub_24115D670()
{
  return MEMORY[0x270F378D8]();
}

uint64_t sub_24115D680()
{
  return MEMORY[0x270F378E0]();
}

uint64_t sub_24115D690()
{
  return MEMORY[0x270F37940]();
}

uint64_t sub_24115D6A0()
{
  return MEMORY[0x270F37948]();
}

uint64_t sub_24115D6B0()
{
  return MEMORY[0x270F37950]();
}

uint64_t sub_24115D6C0()
{
  return MEMORY[0x270F37958]();
}

uint64_t sub_24115D6D0()
{
  return MEMORY[0x270F37AC8]();
}

uint64_t sub_24115D6E0()
{
  return MEMORY[0x270F37AD8]();
}

uint64_t sub_24115D6F0()
{
  return MEMORY[0x270F37AE0]();
}

uint64_t sub_24115D700()
{
  return MEMORY[0x270F30F18]();
}

uint64_t sub_24115D710()
{
  return MEMORY[0x270F30F80]();
}

uint64_t sub_24115D720()
{
  return MEMORY[0x270F30F88]();
}

uint64_t sub_24115D730()
{
  return MEMORY[0x270F30F90]();
}

uint64_t sub_24115D740()
{
  return MEMORY[0x270F30FB0]();
}

uint64_t sub_24115D750()
{
  return MEMORY[0x270F30FB8]();
}

uint64_t sub_24115D760()
{
  return MEMORY[0x270F31DE8]();
}

uint64_t sub_24115D770()
{
  return MEMORY[0x270F31DF0]();
}

uint64_t sub_24115D780()
{
  return MEMORY[0x270F31E88]();
}

uint64_t sub_24115D790()
{
  return MEMORY[0x270F31E98]();
}

uint64_t sub_24115D7A0()
{
  return MEMORY[0x270F31EB0]();
}

uint64_t sub_24115D7B0()
{
  return MEMORY[0x270F31EB8]();
}

uint64_t sub_24115D7C0()
{
  return MEMORY[0x270F320B0]();
}

uint64_t sub_24115D7D0()
{
  return MEMORY[0x270F320B8]();
}

uint64_t sub_24115D7E0()
{
  return MEMORY[0x270F320C0]();
}

uint64_t sub_24115D7F0()
{
  return MEMORY[0x270F32200]();
}

uint64_t sub_24115D800()
{
  return MEMORY[0x270F322B8]();
}

uint64_t sub_24115D810()
{
  return MEMORY[0x270F322C0]();
}

uint64_t sub_24115D820()
{
  return MEMORY[0x270F32308]();
}

uint64_t sub_24115D830()
{
  return MEMORY[0x270F32330]();
}

uint64_t sub_24115D840()
{
  return MEMORY[0x270F30E18]();
}

uint64_t sub_24115D850()
{
  return MEMORY[0x270F30EA0]();
}

uint64_t sub_24115D860()
{
  return MEMORY[0x270F32728]();
}

uint64_t sub_24115D870()
{
  return MEMORY[0x270F32730]();
}

uint64_t sub_24115D880()
{
  return MEMORY[0x270F32780]();
}

uint64_t sub_24115D890()
{
  return MEMORY[0x270F328A8]();
}

uint64_t sub_24115D8A0()
{
  return MEMORY[0x270F328B8]();
}

uint64_t sub_24115D8B0()
{
  return MEMORY[0x270F328F8]();
}

uint64_t sub_24115D8C0()
{
  return MEMORY[0x270F32910]();
}

uint64_t sub_24115D8D0()
{
  return MEMORY[0x270F32958]();
}

uint64_t sub_24115D8E0()
{
  return MEMORY[0x270F32968]();
}

uint64_t sub_24115D8F0()
{
  return MEMORY[0x270F329A8]();
}

uint64_t sub_24115D900()
{
  return MEMORY[0x270F329E8]();
}

uint64_t sub_24115D910()
{
  return MEMORY[0x270F32A08]();
}

uint64_t sub_24115D920()
{
  return MEMORY[0x270F32A18]();
}

uint64_t sub_24115D930()
{
  return MEMORY[0x270F32A20]();
}

uint64_t sub_24115D940()
{
  return MEMORY[0x270F32AB0]();
}

uint64_t sub_24115D950()
{
  return MEMORY[0x270F32B70]();
}

uint64_t sub_24115D960()
{
  return MEMORY[0x270F32B78]();
}

uint64_t sub_24115D970()
{
  return MEMORY[0x270F37C30]();
}

uint64_t sub_24115D980()
{
  return MEMORY[0x270F32BD8]();
}

uint64_t sub_24115D990()
{
  return MEMORY[0x270F32BE0]();
}

uint64_t sub_24115D9A0()
{
  return MEMORY[0x270F32BE8]();
}

uint64_t sub_24115D9B0()
{
  return MEMORY[0x270F32BF0]();
}

uint64_t sub_24115D9C0()
{
  return MEMORY[0x270F32BF8]();
}

uint64_t sub_24115D9D0()
{
  return MEMORY[0x270F32C00]();
}

uint64_t sub_24115D9E0()
{
  return MEMORY[0x270F32C08]();
}

uint64_t sub_24115D9F0()
{
  return MEMORY[0x270F32C18]();
}

uint64_t sub_24115DA00()
{
  return MEMORY[0x270F32C20]();
}

uint64_t sub_24115DA10()
{
  return MEMORY[0x270F32C80]();
}

uint64_t sub_24115DA30()
{
  return MEMORY[0x270F32D28]();
}

uint64_t sub_24115DA40()
{
  return MEMORY[0x270F32D38]();
}

uint64_t sub_24115DA50()
{
  return MEMORY[0x270F32D80]();
}

uint64_t sub_24115DA60()
{
  return MEMORY[0x270F32DA0]();
}

uint64_t sub_24115DA70()
{
  return MEMORY[0x270F32DA8]();
}

uint64_t sub_24115DA80()
{
  return MEMORY[0x270F32E20]();
}

uint64_t sub_24115DA90()
{
  return MEMORY[0x270F32E28]();
}

uint64_t sub_24115DAA0()
{
  return MEMORY[0x270F32E30]();
}

uint64_t sub_24115DAB0()
{
  return MEMORY[0x270F32E38]();
}

uint64_t sub_24115DAC0()
{
  return MEMORY[0x270F32E40]();
}

uint64_t sub_24115DAD0()
{
  return MEMORY[0x270F32E50]();
}

uint64_t sub_24115DAE0()
{
  return MEMORY[0x270F32E60]();
}

uint64_t sub_24115DAF0()
{
  return MEMORY[0x270F32EA0]();
}

uint64_t sub_24115DB00()
{
  return MEMORY[0x270F32EA8]();
}

uint64_t sub_24115DB10()
{
  return MEMORY[0x270F32EB0]();
}

uint64_t sub_24115DB20()
{
  return MEMORY[0x270F32EC8]();
}

uint64_t sub_24115DB30()
{
  return MEMORY[0x270F32ED0]();
}

uint64_t sub_24115DB40()
{
  return MEMORY[0x270F32EE8]();
}

uint64_t sub_24115DB50()
{
  return MEMORY[0x270F32F30]();
}

uint64_t sub_24115DB60()
{
  return MEMORY[0x270F32F70]();
}

uint64_t sub_24115DB70()
{
  return MEMORY[0x270F32F78]();
}

uint64_t sub_24115DB80()
{
  return MEMORY[0x270F32F88]();
}

uint64_t sub_24115DB90()
{
  return MEMORY[0x270F32FD0]();
}

uint64_t sub_24115DBA0()
{
  return MEMORY[0x270F33008]();
}

uint64_t sub_24115DBB0()
{
  return MEMORY[0x270F33020]();
}

uint64_t sub_24115DBC0()
{
  return MEMORY[0x270F33060]();
}

uint64_t sub_24115DBD0()
{
  return MEMORY[0x270F33070]();
}

uint64_t sub_24115DBE0()
{
  return MEMORY[0x270F33088]();
}

uint64_t sub_24115DBF0()
{
  return MEMORY[0x270F330B0]();
}

uint64_t sub_24115DC00()
{
  return MEMORY[0x270F330B8]();
}

uint64_t sub_24115DC10()
{
  return MEMORY[0x270F33118]();
}

uint64_t sub_24115DC20()
{
  return MEMORY[0x270F33170]();
}

uint64_t sub_24115DC30()
{
  return MEMORY[0x270F33188]();
}

uint64_t sub_24115DC40()
{
  return MEMORY[0x270F331B0]();
}

uint64_t sub_24115DC50()
{
  return MEMORY[0x270F331E0]();
}

uint64_t sub_24115DC60()
{
  return MEMORY[0x270F331E8]();
}

uint64_t sub_24115DC70()
{
  return MEMORY[0x270F331F0]();
}

uint64_t sub_24115DC80()
{
  return MEMORY[0x270F33250]();
}

uint64_t sub_24115DC90()
{
  return MEMORY[0x270F33258]();
}

uint64_t sub_24115DCA0()
{
  return MEMORY[0x270F33278]();
}

uint64_t sub_24115DCB0()
{
  return MEMORY[0x270F33280]();
}

uint64_t sub_24115DCC0()
{
  return MEMORY[0x270F33288]();
}

uint64_t sub_24115DCD0()
{
  return MEMORY[0x270F33290]();
}

uint64_t sub_24115DCE0()
{
  return MEMORY[0x270F332A0]();
}

uint64_t sub_24115DCF0()
{
  return MEMORY[0x270F332C0]();
}

uint64_t sub_24115DD00()
{
  return MEMORY[0x270F332D0]();
}

uint64_t sub_24115DD10()
{
  return MEMORY[0x270F33310]();
}

uint64_t sub_24115DD20()
{
  return MEMORY[0x270F33318]();
}

uint64_t sub_24115DD30()
{
  return MEMORY[0x270F33320]();
}

uint64_t sub_24115DD40()
{
  return MEMORY[0x270F33340]();
}

uint64_t sub_24115DD50()
{
  return MEMORY[0x270F33368]();
}

uint64_t sub_24115DD60()
{
  return MEMORY[0x270F333B8]();
}

uint64_t sub_24115DD70()
{
  return MEMORY[0x270F333C0]();
}

uint64_t sub_24115DD80()
{
  return MEMORY[0x270F333C8]();
}

uint64_t sub_24115DD90()
{
  return MEMORY[0x270F333D0]();
}

uint64_t sub_24115DDA0()
{
  return MEMORY[0x270F333D8]();
}

uint64_t sub_24115DDB0()
{
  return MEMORY[0x270F333E0]();
}

uint64_t sub_24115DDC0()
{
  return MEMORY[0x270F333E8]();
}

uint64_t sub_24115DDE0()
{
  return MEMORY[0x270F33530]();
}

uint64_t sub_24115DDF0()
{
  return MEMORY[0x270F33538]();
}

uint64_t sub_24115DE00()
{
  return MEMORY[0x270F33560]();
}

uint64_t sub_24115DE10()
{
  return MEMORY[0x270F33568]();
}

uint64_t sub_24115DE20()
{
  return MEMORY[0x270F335F0]();
}

uint64_t sub_24115DE40()
{
  return MEMORY[0x270F33630]();
}

uint64_t sub_24115DE50()
{
  return MEMORY[0x270F33640]();
}

uint64_t sub_24115DE60()
{
  return MEMORY[0x270F33650]();
}

uint64_t sub_24115DE70()
{
  return MEMORY[0x270F336B8]();
}

uint64_t sub_24115DE80()
{
  return MEMORY[0x270F336E8]();
}

uint64_t sub_24115DE90()
{
  return MEMORY[0x270F336F0]();
}

uint64_t sub_24115DEA0()
{
  return MEMORY[0x270F33700]();
}

uint64_t sub_24115DEB0()
{
  return MEMORY[0x270F33708]();
}

uint64_t sub_24115DEC0()
{
  return MEMORY[0x270F33710]();
}

uint64_t sub_24115DED0()
{
  return MEMORY[0x270F33718]();
}

uint64_t sub_24115DEE0()
{
  return MEMORY[0x270F33748]();
}

uint64_t sub_24115DEF0()
{
  return MEMORY[0x270F33790]();
}

uint64_t sub_24115DF00()
{
  return MEMORY[0x270F337A0]();
}

uint64_t sub_24115DF10()
{
  return MEMORY[0x270F337A8]();
}

uint64_t sub_24115DF20()
{
  return MEMORY[0x270F337B0]();
}

uint64_t sub_24115DF30()
{
  return MEMORY[0x270F337C0]();
}

uint64_t sub_24115DF40()
{
  return MEMORY[0x270F337C8]();
}

uint64_t sub_24115DF50()
{
  return MEMORY[0x270F337D0]();
}

uint64_t sub_24115DF60()
{
  return MEMORY[0x270F337E0]();
}

uint64_t sub_24115DF70()
{
  return MEMORY[0x270F337E8]();
}

uint64_t sub_24115DF80()
{
  return MEMORY[0x270F337F8]();
}

uint64_t sub_24115DF90()
{
  return MEMORY[0x270F33800]();
}

uint64_t sub_24115DFA0()
{
  return MEMORY[0x270F33868]();
}

uint64_t sub_24115DFB0()
{
  return MEMORY[0x270F33880]();
}

uint64_t sub_24115DFC0()
{
  return MEMORY[0x270F33888]();
}

uint64_t sub_24115DFD0()
{
  return MEMORY[0x270F338C0]();
}

uint64_t sub_24115DFE0()
{
  return MEMORY[0x270F338C8]();
}

uint64_t sub_24115DFF0()
{
  return MEMORY[0x270F338D0]();
}

uint64_t sub_24115E000()
{
  return MEMORY[0x270F338D8]();
}

uint64_t sub_24115E010()
{
  return MEMORY[0x270F338F8]();
}

uint64_t sub_24115E020()
{
  return MEMORY[0x270F33900]();
}

uint64_t sub_24115E030()
{
  return MEMORY[0x270F33928]();
}

uint64_t sub_24115E040()
{
  return MEMORY[0x270F33930]();
}

uint64_t sub_24115E050()
{
  return MEMORY[0x270F33938]();
}

uint64_t sub_24115E060()
{
  return MEMORY[0x270F33940]();
}

uint64_t sub_24115E070()
{
  return MEMORY[0x270F33948]();
}

uint64_t sub_24115E080()
{
  return MEMORY[0x270F339D0]();
}

uint64_t sub_24115E090()
{
  return MEMORY[0x270F339E0]();
}

uint64_t sub_24115E0B0()
{
  return MEMORY[0x270F339F0]();
}

uint64_t sub_24115E0C0()
{
  return MEMORY[0x270F33A68]();
}

uint64_t sub_24115E0D0()
{
  return MEMORY[0x270F33A80]();
}

uint64_t sub_24115E0E0()
{
  return MEMORY[0x270F33AE8]();
}

uint64_t sub_24115E0F0()
{
  return MEMORY[0x270F33B00]();
}

uint64_t sub_24115E100()
{
  return MEMORY[0x270F33B20]();
}

uint64_t sub_24115E110()
{
  return MEMORY[0x270F33B30]();
}

uint64_t sub_24115E120()
{
  return MEMORY[0x270F33B50]();
}

uint64_t sub_24115E130()
{
  return MEMORY[0x270F33B58]();
}

uint64_t sub_24115E140()
{
  return MEMORY[0x270F33BB0]();
}

uint64_t sub_24115E150()
{
  return MEMORY[0x270F33BB8]();
}

uint64_t sub_24115E160()
{
  return MEMORY[0x270F33BC0]();
}

uint64_t sub_24115E170()
{
  return MEMORY[0x270F33BC8]();
}

uint64_t sub_24115E180()
{
  return MEMORY[0x270F33BD0]();
}

uint64_t sub_24115E190()
{
  return MEMORY[0x270F33BD8]();
}

uint64_t sub_24115E1A0()
{
  return MEMORY[0x270F33BE8]();
}

uint64_t sub_24115E1B0()
{
  return MEMORY[0x270F33BF8]();
}

uint64_t sub_24115E1C0()
{
  return MEMORY[0x270F33C50]();
}

uint64_t sub_24115E1D0()
{
  return MEMORY[0x270F33C58]();
}

uint64_t sub_24115E1E0()
{
  return MEMORY[0x270F33C60]();
}

uint64_t sub_24115E1F0()
{
  return MEMORY[0x270F33C70]();
}

uint64_t sub_24115E200()
{
  return MEMORY[0x270F33C88]();
}

uint64_t sub_24115E210()
{
  return MEMORY[0x270F33CA0]();
}

uint64_t sub_24115E220()
{
  return MEMORY[0x270F33CC0]();
}

uint64_t sub_24115E230()
{
  return MEMORY[0x270F33D60]();
}

uint64_t sub_24115E240()
{
  return MEMORY[0x270F33EA8]();
}

uint64_t sub_24115E250()
{
  return MEMORY[0x270F33EB0]();
}

uint64_t sub_24115E260()
{
  return MEMORY[0x270F33EB8]();
}

uint64_t sub_24115E270()
{
  return MEMORY[0x270F33ED8]();
}

uint64_t sub_24115E280()
{
  return MEMORY[0x270F33EE0]();
}

uint64_t sub_24115E290()
{
  return MEMORY[0x270F33EE8]();
}

uint64_t sub_24115E2A0()
{
  return MEMORY[0x270F33F00]();
}

uint64_t sub_24115E2B0()
{
  return MEMORY[0x270F33F08]();
}

uint64_t sub_24115E2C0()
{
  return MEMORY[0x270F33F38]();
}

uint64_t sub_24115E2E0()
{
  return MEMORY[0x270F33F48]();
}

uint64_t sub_24115E300()
{
  return MEMORY[0x270F33F78]();
}

uint64_t sub_24115E310()
{
  return MEMORY[0x270F33F88]();
}

uint64_t sub_24115E320()
{
  return MEMORY[0x270F33F90]();
}

uint64_t sub_24115E330()
{
  return MEMORY[0x270F33F98]();
}

uint64_t sub_24115E340()
{
  return MEMORY[0x270F34010]();
}

uint64_t sub_24115E350()
{
  return MEMORY[0x270F34038]();
}

uint64_t sub_24115E360()
{
  return MEMORY[0x270F340A0]();
}

uint64_t sub_24115E370()
{
  return MEMORY[0x270F340A8]();
}

uint64_t sub_24115E380()
{
  return MEMORY[0x270F340B0]();
}

uint64_t sub_24115E390()
{
  return MEMORY[0x270F340D0]();
}

uint64_t sub_24115E3A0()
{
  return MEMORY[0x270F34108]();
}

uint64_t sub_24115E3B0()
{
  return MEMORY[0x270F34110]();
}

uint64_t sub_24115E3C0()
{
  return MEMORY[0x270F34130]();
}

uint64_t sub_24115E3D0()
{
  return MEMORY[0x270F34138]();
}

uint64_t sub_24115E3E0()
{
  return MEMORY[0x270F34160]();
}

uint64_t sub_24115E3F0()
{
  return MEMORY[0x270F34168]();
}

uint64_t sub_24115E400()
{
  return MEMORY[0x270F34178]();
}

uint64_t sub_24115E410()
{
  return MEMORY[0x270F34198]();
}

uint64_t sub_24115E420()
{
  return MEMORY[0x270F341A0]();
}

uint64_t sub_24115E450()
{
  return MEMORY[0x270F342A8]();
}

uint64_t sub_24115E460()
{
  return MEMORY[0x270F342C0]();
}

uint64_t sub_24115E470()
{
  return MEMORY[0x270F342C8]();
}

uint64_t sub_24115E480()
{
  return MEMORY[0x270F342D0]();
}

uint64_t sub_24115E490()
{
  return MEMORY[0x270F342D8]();
}

uint64_t sub_24115E4A0()
{
  return MEMORY[0x270F34328]();
}

uint64_t sub_24115E4B0()
{
  return MEMORY[0x270F34330]();
}

uint64_t sub_24115E4C0()
{
  return MEMORY[0x270F343B8]();
}

uint64_t sub_24115E4D0()
{
  return MEMORY[0x270F343F8]();
}

uint64_t sub_24115E4E0()
{
  return MEMORY[0x270F34400]();
}

uint64_t sub_24115E4F0()
{
  return MEMORY[0x270F34418]();
}

uint64_t sub_24115E500()
{
  return MEMORY[0x270F344F0]();
}

uint64_t sub_24115E510()
{
  return MEMORY[0x270F344F8]();
}

uint64_t sub_24115E520()
{
  return MEMORY[0x270F34500]();
}

uint64_t sub_24115E530()
{
  return MEMORY[0x270F34510]();
}

uint64_t sub_24115E540()
{
  return MEMORY[0x270F34548]();
}

uint64_t sub_24115E550()
{
  return MEMORY[0x270F345D0]();
}

uint64_t sub_24115E560()
{
  return MEMORY[0x270F345E8]();
}

uint64_t sub_24115E570()
{
  return MEMORY[0x270F345F0]();
}

uint64_t sub_24115E580()
{
  return MEMORY[0x270F34640]();
}

uint64_t sub_24115E590()
{
  return MEMORY[0x270F34648]();
}

uint64_t sub_24115E5A0()
{
  return MEMORY[0x270F34650]();
}

uint64_t sub_24115E5B0()
{
  return MEMORY[0x270F34658]();
}

uint64_t sub_24115E5C0()
{
  return MEMORY[0x270F34660]();
}

uint64_t sub_24115E5D0()
{
  return MEMORY[0x270F34668]();
}

uint64_t sub_24115E5E0()
{
  return MEMORY[0x270F34670]();
}

uint64_t sub_24115E5F0()
{
  return MEMORY[0x270F34678]();
}

uint64_t sub_24115E600()
{
  return MEMORY[0x270F34680]();
}

uint64_t sub_24115E610()
{
  return MEMORY[0x270F34688]();
}

uint64_t sub_24115E620()
{
  return MEMORY[0x270F346D8]();
}

uint64_t sub_24115E630()
{
  return MEMORY[0x270F346E0]();
}

uint64_t sub_24115E640()
{
  return MEMORY[0x270F34740]();
}

uint64_t sub_24115E650()
{
  return MEMORY[0x270F34778]();
}

uint64_t sub_24115E660()
{
  return MEMORY[0x270F34780]();
}

uint64_t sub_24115E670()
{
  return MEMORY[0x270F34788]();
}

uint64_t sub_24115E680()
{
  return MEMORY[0x270F34790]();
}

uint64_t sub_24115E690()
{
  return MEMORY[0x270F34798]();
}

uint64_t sub_24115E6A0()
{
  return MEMORY[0x270F347A0]();
}

uint64_t sub_24115E6B0()
{
  return MEMORY[0x270F347A8]();
}

uint64_t sub_24115E6C0()
{
  return MEMORY[0x270F347B0]();
}

uint64_t sub_24115E6D0()
{
  return MEMORY[0x270F348B8]();
}

uint64_t sub_24115E6E0()
{
  return MEMORY[0x270F348E8]();
}

uint64_t sub_24115E6F0()
{
  return MEMORY[0x270F34950]();
}

uint64_t sub_24115E700()
{
  return MEMORY[0x270F34958]();
}

uint64_t sub_24115E710()
{
  return MEMORY[0x270F34960]();
}

uint64_t sub_24115E720()
{
  return MEMORY[0x270F34968]();
}

uint64_t sub_24115E730()
{
  return MEMORY[0x270F34970]();
}

uint64_t sub_24115E740()
{
  return MEMORY[0x270F34980]();
}

uint64_t sub_24115E750()
{
  return MEMORY[0x270F34988]();
}

uint64_t sub_24115E760()
{
  return MEMORY[0x270F34990]();
}

uint64_t sub_24115E770()
{
  return MEMORY[0x270F34998]();
}

uint64_t sub_24115E780()
{
  return MEMORY[0x270F34AB8]();
}

uint64_t sub_24115E790()
{
  return MEMORY[0x270F34B08]();
}

uint64_t sub_24115E7A0()
{
  return MEMORY[0x270F34BB8]();
}

uint64_t sub_24115E7B0()
{
  return MEMORY[0x270F34BC0]();
}

uint64_t sub_24115E7C0()
{
  return MEMORY[0x270F34BC8]();
}

uint64_t sub_24115E7D0()
{
  return MEMORY[0x270F34BD0]();
}

uint64_t sub_24115E7E0()
{
  return MEMORY[0x270F34BD8]();
}

uint64_t sub_24115E7F0()
{
  return MEMORY[0x270F34C20]();
}

uint64_t sub_24115E800()
{
  return MEMORY[0x270F34C28]();
}

uint64_t sub_24115E810()
{
  return MEMORY[0x270F34C30]();
}

uint64_t sub_24115E820()
{
  return MEMORY[0x270F34C38]();
}

uint64_t sub_24115E830()
{
  return MEMORY[0x270F34C40]();
}

uint64_t sub_24115E840()
{
  return MEMORY[0x270F34C48]();
}

uint64_t sub_24115E850()
{
  return MEMORY[0x270F34CC0]();
}

uint64_t sub_24115E860()
{
  return MEMORY[0x270F34CC8]();
}

uint64_t sub_24115E870()
{
  return MEMORY[0x270F350D0]();
}

uint64_t sub_24115E880()
{
  return MEMORY[0x270F357B8]();
}

uint64_t sub_24115E890()
{
  return MEMORY[0x270F357C0]();
}

uint64_t sub_24115E8A0()
{
  return MEMORY[0x270F357C8]();
}

uint64_t sub_24115E8B0()
{
  return MEMORY[0x270F357D0]();
}

uint64_t sub_24115E8C0()
{
  return MEMORY[0x270F357D8]();
}

uint64_t sub_24115E8D0()
{
  return MEMORY[0x270F357E0]();
}

uint64_t sub_24115E8E0()
{
  return MEMORY[0x270F357E8]();
}

uint64_t sub_24115E8F0()
{
  return MEMORY[0x270F357F0]();
}

uint64_t sub_24115E900()
{
  return MEMORY[0x270F357F8]();
}

uint64_t sub_24115E910()
{
  return MEMORY[0x270F35800]();
}

uint64_t sub_24115E920()
{
  return MEMORY[0x270F35808]();
}

uint64_t sub_24115E930()
{
  return MEMORY[0x270F35810]();
}

uint64_t sub_24115E940()
{
  return MEMORY[0x270F35818]();
}

uint64_t sub_24115E950()
{
  return MEMORY[0x270F35820]();
}

uint64_t sub_24115E960()
{
  return MEMORY[0x270F35828]();
}

uint64_t sub_24115E970()
{
  return MEMORY[0x270F35830]();
}

uint64_t sub_24115E980()
{
  return MEMORY[0x270F35838]();
}

uint64_t sub_24115E990()
{
  return MEMORY[0x270F35840]();
}

uint64_t sub_24115E9A0()
{
  return MEMORY[0x270F35848]();
}

uint64_t sub_24115E9B0()
{
  return MEMORY[0x270F35850]();
}

uint64_t sub_24115E9C0()
{
  return MEMORY[0x270F35858]();
}

uint64_t sub_24115E9D0()
{
  return MEMORY[0x270F35860]();
}

uint64_t sub_24115E9E0()
{
  return MEMORY[0x270F35868]();
}

uint64_t sub_24115E9F0()
{
  return MEMORY[0x270F35878]();
}

uint64_t sub_24115EA00()
{
  return MEMORY[0x270F35880]();
}

uint64_t sub_24115EA10()
{
  return MEMORY[0x270F35888]();
}

uint64_t sub_24115EA20()
{
  return MEMORY[0x270F35890]();
}

uint64_t sub_24115EA30()
{
  return MEMORY[0x270F35898]();
}

uint64_t sub_24115EA40()
{
  return MEMORY[0x270F358A0]();
}

uint64_t sub_24115EA50()
{
  return MEMORY[0x270F358A8]();
}

uint64_t sub_24115EA60()
{
  return MEMORY[0x270F358B0]();
}

uint64_t sub_24115EA70()
{
  return MEMORY[0x270F358B8]();
}

uint64_t sub_24115EA80()
{
  return MEMORY[0x270F358C0]();
}

uint64_t sub_24115EA90()
{
  return MEMORY[0x270F358C8]();
}

uint64_t sub_24115EAA0()
{
  return MEMORY[0x270F358D0]();
}

uint64_t sub_24115EAB0()
{
  return MEMORY[0x270F358D8]();
}

uint64_t sub_24115EAC0()
{
  return MEMORY[0x270F358E0]();
}

uint64_t sub_24115EAD0()
{
  return MEMORY[0x270F358E8]();
}

uint64_t sub_24115EAE0()
{
  return MEMORY[0x270F358F0]();
}

uint64_t sub_24115EAF0()
{
  return MEMORY[0x270F358F8]();
}

uint64_t sub_24115EB00()
{
  return MEMORY[0x270F35900]();
}

uint64_t sub_24115EB10()
{
  return MEMORY[0x270F35908]();
}

uint64_t sub_24115EB20()
{
  return MEMORY[0x270F35910]();
}

uint64_t sub_24115EB30()
{
  return MEMORY[0x270F35918]();
}

uint64_t sub_24115EB40()
{
  return MEMORY[0x270F35920]();
}

uint64_t sub_24115EB50()
{
  return MEMORY[0x270F35928]();
}

uint64_t sub_24115EB60()
{
  return MEMORY[0x270F35930]();
}

uint64_t sub_24115EB70()
{
  return MEMORY[0x270F35938]();
}

uint64_t sub_24115EB80()
{
  return MEMORY[0x270F35940]();
}

uint64_t sub_24115EB90()
{
  return MEMORY[0x270F35948]();
}

uint64_t sub_24115EBA0()
{
  return MEMORY[0x270F35950]();
}

uint64_t sub_24115EBB0()
{
  return MEMORY[0x270F35958]();
}

uint64_t sub_24115EBC0()
{
  return MEMORY[0x270F35960]();
}

uint64_t sub_24115EBD0()
{
  return MEMORY[0x270F35968]();
}

uint64_t sub_24115EBE0()
{
  return MEMORY[0x270F35970]();
}

uint64_t sub_24115EBF0()
{
  return MEMORY[0x270F35978]();
}

uint64_t sub_24115EC00()
{
  return MEMORY[0x270F35980]();
}

uint64_t sub_24115EC10()
{
  return MEMORY[0x270F35988]();
}

uint64_t sub_24115EC20()
{
  return MEMORY[0x270F35990]();
}

uint64_t sub_24115EC30()
{
  return MEMORY[0x270F35998]();
}

uint64_t sub_24115EC40()
{
  return MEMORY[0x270F359A0]();
}

uint64_t sub_24115EC50()
{
  return MEMORY[0x270F359A8]();
}

uint64_t sub_24115EC60()
{
  return MEMORY[0x270F359B0]();
}

uint64_t sub_24115EC70()
{
  return MEMORY[0x270F359B8]();
}

uint64_t sub_24115EC80()
{
  return MEMORY[0x270F359C0]();
}

uint64_t sub_24115EC90()
{
  return MEMORY[0x270F359C8]();
}

uint64_t sub_24115ECA0()
{
  return MEMORY[0x270F359D0]();
}

uint64_t sub_24115ECB0()
{
  return MEMORY[0x270F359D8]();
}

uint64_t sub_24115ECC0()
{
  return MEMORY[0x270F359E0]();
}

uint64_t sub_24115ECD0()
{
  return MEMORY[0x270F359E8]();
}

uint64_t sub_24115ECE0()
{
  return MEMORY[0x270F359F0]();
}

uint64_t sub_24115ECF0()
{
  return MEMORY[0x270F359F8]();
}

uint64_t sub_24115ED00()
{
  return MEMORY[0x270F35A00]();
}

uint64_t sub_24115ED10()
{
  return MEMORY[0x270F35A08]();
}

uint64_t sub_24115ED20()
{
  return MEMORY[0x270F35A10]();
}

uint64_t sub_24115ED30()
{
  return MEMORY[0x270F35A18]();
}

uint64_t sub_24115ED40()
{
  return MEMORY[0x270F35A20]();
}

uint64_t sub_24115ED50()
{
  return MEMORY[0x270F35A28]();
}

uint64_t sub_24115ED60()
{
  return MEMORY[0x270F35A30]();
}

uint64_t sub_24115ED70()
{
  return MEMORY[0x270F35A38]();
}

uint64_t sub_24115ED80()
{
  return MEMORY[0x270F35A40]();
}

uint64_t sub_24115ED90()
{
  return MEMORY[0x270F35A48]();
}

uint64_t sub_24115EDA0()
{
  return MEMORY[0x270F35A50]();
}

uint64_t sub_24115EDB0()
{
  return MEMORY[0x270F35A58]();
}

uint64_t sub_24115EDC0()
{
  return MEMORY[0x270F35A60]();
}

uint64_t sub_24115EDD0()
{
  return MEMORY[0x270F35A68]();
}

uint64_t sub_24115EDE0()
{
  return MEMORY[0x270F35A88]();
}

uint64_t sub_24115EDF0()
{
  return MEMORY[0x270F35A90]();
}

uint64_t sub_24115EE00()
{
  return MEMORY[0x270F35A98]();
}

uint64_t sub_24115EE10()
{
  return MEMORY[0x270F35AA0]();
}

uint64_t sub_24115EE20()
{
  return MEMORY[0x270F35AA8]();
}

uint64_t sub_24115EE30()
{
  return MEMORY[0x270F35AB0]();
}

uint64_t sub_24115EE40()
{
  return MEMORY[0x270F35AB8]();
}

uint64_t sub_24115EE50()
{
  return MEMORY[0x270F35AC0]();
}

uint64_t sub_24115EE60()
{
  return MEMORY[0x270F35AC8]();
}

uint64_t sub_24115EE70()
{
  return MEMORY[0x270F35AD0]();
}

uint64_t sub_24115EE80()
{
  return MEMORY[0x270F35AF0]();
}

uint64_t sub_24115EE90()
{
  return MEMORY[0x270F35AF8]();
}

uint64_t sub_24115EEA0()
{
  return MEMORY[0x270F35B00]();
}

uint64_t sub_24115EEB0()
{
  return MEMORY[0x270F35B08]();
}

uint64_t sub_24115EEC0()
{
  return MEMORY[0x270F35B10]();
}

uint64_t sub_24115EED0()
{
  return MEMORY[0x270F35B18]();
}

uint64_t sub_24115EEE0()
{
  return MEMORY[0x270F35B20]();
}

uint64_t sub_24115EEF0()
{
  return MEMORY[0x270F35B28]();
}

uint64_t sub_24115EF00()
{
  return MEMORY[0x270F35B30]();
}

uint64_t sub_24115EF10()
{
  return MEMORY[0x270F35B38]();
}

uint64_t sub_24115EF20()
{
  return MEMORY[0x270F35B40]();
}

uint64_t sub_24115EF30()
{
  return MEMORY[0x270F30ED8]();
}

uint64_t sub_24115EF40()
{
  return MEMORY[0x270F30EF0]();
}

uint64_t sub_24115EF60()
{
  return MEMORY[0x270F352F0]();
}

uint64_t sub_24115EF70()
{
  return MEMORY[0x270F352F8]();
}

uint64_t sub_24115EF80()
{
  return MEMORY[0x270F35300]();
}

uint64_t sub_24115EF90()
{
  return MEMORY[0x270F35308]();
}

uint64_t sub_24115EFA0()
{
  return MEMORY[0x270F35310]();
}

uint64_t sub_24115EFB0()
{
  return MEMORY[0x270F35318]();
}

uint64_t sub_24115EFC0()
{
  return MEMORY[0x270F35320]();
}

uint64_t sub_24115EFD0()
{
  return MEMORY[0x270F35328]();
}

uint64_t sub_24115EFE0()
{
  return MEMORY[0x270F35330]();
}

uint64_t sub_24115EFF0()
{
  return MEMORY[0x270F35338]();
}

uint64_t sub_24115F000()
{
  return MEMORY[0x270F35340]();
}

uint64_t sub_24115F010()
{
  return MEMORY[0x270F35348]();
}

uint64_t sub_24115F020()
{
  return MEMORY[0x270F35350]();
}

uint64_t sub_24115F030()
{
  return MEMORY[0x270F35358]();
}

uint64_t sub_24115F040()
{
  return MEMORY[0x270F35360]();
}

uint64_t sub_24115F050()
{
  return MEMORY[0x270F35368]();
}

uint64_t sub_24115F060()
{
  return MEMORY[0x270F35370]();
}

uint64_t sub_24115F070()
{
  return MEMORY[0x270F35378]();
}

uint64_t sub_24115F080()
{
  return MEMORY[0x270F35380]();
}

uint64_t sub_24115F090()
{
  return MEMORY[0x270F35388]();
}

uint64_t sub_24115F0A0()
{
  return MEMORY[0x270F35390]();
}

uint64_t sub_24115F0B0()
{
  return MEMORY[0x270F35398]();
}

uint64_t sub_24115F0C0()
{
  return MEMORY[0x270F353A0]();
}

uint64_t sub_24115F0D0()
{
  return MEMORY[0x270F353A8]();
}

uint64_t sub_24115F0E0()
{
  return MEMORY[0x270F353B0]();
}

uint64_t sub_24115F0F0()
{
  return MEMORY[0x270F353E8]();
}

uint64_t sub_24115F100()
{
  return MEMORY[0x270F353F0]();
}

uint64_t sub_24115F110()
{
  return MEMORY[0x270F353F8]();
}

uint64_t sub_24115F120()
{
  return MEMORY[0x270F35400]();
}

uint64_t sub_24115F130()
{
  return MEMORY[0x270F35408]();
}

uint64_t sub_24115F140()
{
  return MEMORY[0x270F35410]();
}

uint64_t sub_24115F150()
{
  return MEMORY[0x270F35418]();
}

uint64_t sub_24115F160()
{
  return MEMORY[0x270F35420]();
}

uint64_t sub_24115F170()
{
  return MEMORY[0x270F35428]();
}

uint64_t sub_24115F180()
{
  return MEMORY[0x270F35430]();
}

uint64_t sub_24115F190()
{
  return MEMORY[0x270F35438]();
}

uint64_t sub_24115F1A0()
{
  return MEMORY[0x270F35440]();
}

uint64_t sub_24115F1B0()
{
  return MEMORY[0x270F35448]();
}

uint64_t sub_24115F1D0()
{
  return MEMORY[0x270F35458]();
}

uint64_t sub_24115F1E0()
{
  return MEMORY[0x270F35460]();
}

uint64_t sub_24115F1F0()
{
  return MEMORY[0x270F35468]();
}

uint64_t sub_24115F200()
{
  return MEMORY[0x270F35470]();
}

uint64_t sub_24115F210()
{
  return MEMORY[0x270F35478]();
}

uint64_t sub_24115F220()
{
  return MEMORY[0x270F35480]();
}

uint64_t sub_24115F230()
{
  return MEMORY[0x270F35488]();
}

uint64_t sub_24115F240()
{
  return MEMORY[0x270F35490]();
}

uint64_t sub_24115F260()
{
  return MEMORY[0x270F354B8]();
}

uint64_t sub_24115F270()
{
  return MEMORY[0x270F354C0]();
}

uint64_t sub_24115F280()
{
  return MEMORY[0x270F354C8]();
}

uint64_t sub_24115F290()
{
  return MEMORY[0x270F354D0]();
}

uint64_t sub_24115F2A0()
{
  return MEMORY[0x270F354D8]();
}

uint64_t sub_24115F2B0()
{
  return MEMORY[0x270F354E0]();
}

uint64_t sub_24115F2C0()
{
  return MEMORY[0x270F354E8]();
}

uint64_t sub_24115F2D0()
{
  return MEMORY[0x270F354F0]();
}

uint64_t sub_24115F2E0()
{
  return MEMORY[0x270F354F8]();
}

uint64_t sub_24115F2F0()
{
  return MEMORY[0x270F35500]();
}

uint64_t sub_24115F300()
{
  return MEMORY[0x270F35508]();
}

uint64_t sub_24115F310()
{
  return MEMORY[0x270F35510]();
}

uint64_t sub_24115F320()
{
  return MEMORY[0x270F35518]();
}

uint64_t sub_24115F330()
{
  return MEMORY[0x270F35B48]();
}

uint64_t sub_24115F340()
{
  return MEMORY[0x270F35520]();
}

uint64_t sub_24115F350()
{
  return MEMORY[0x270F35528]();
}

uint64_t sub_24115F360()
{
  return MEMORY[0x270F35540]();
}

uint64_t sub_24115F370()
{
  return MEMORY[0x270F35548]();
}

uint64_t sub_24115F390()
{
  return MEMORY[0x270F35570]();
}

uint64_t sub_24115F3A0()
{
  return MEMORY[0x270F35578]();
}

uint64_t sub_24115F3B0()
{
  return MEMORY[0x270F35590]();
}

uint64_t sub_24115F3C0()
{
  return MEMORY[0x270F35598]();
}

uint64_t sub_24115F3D0()
{
  return MEMORY[0x270F355A0]();
}

uint64_t sub_24115F3E0()
{
  return MEMORY[0x270F355A8]();
}

uint64_t sub_24115F3F0()
{
  return MEMORY[0x270F355B0]();
}

uint64_t sub_24115F400()
{
  return MEMORY[0x270F355B8]();
}

uint64_t sub_24115F410()
{
  return MEMORY[0x270F355C0]();
}

uint64_t sub_24115F420()
{
  return MEMORY[0x270F355C8]();
}

uint64_t sub_24115F430()
{
  return MEMORY[0x270F355D0]();
}

uint64_t sub_24115F440()
{
  return MEMORY[0x270F355D8]();
}

uint64_t sub_24115F450()
{
  return MEMORY[0x270F355E0]();
}

uint64_t sub_24115F460()
{
  return MEMORY[0x270F355E8]();
}

uint64_t sub_24115F470()
{
  return MEMORY[0x270F355F0]();
}

uint64_t sub_24115F480()
{
  return MEMORY[0x270F355F8]();
}

uint64_t sub_24115F490()
{
  return MEMORY[0x270F35600]();
}

uint64_t sub_24115F4A0()
{
  return MEMORY[0x270F35608]();
}

uint64_t sub_24115F4B0()
{
  return MEMORY[0x270F35610]();
}

uint64_t sub_24115F4C0()
{
  return MEMORY[0x270F35618]();
}

uint64_t sub_24115F4D0()
{
  return MEMORY[0x270F35620]();
}

uint64_t sub_24115F4E0()
{
  return MEMORY[0x270F35628]();
}

uint64_t sub_24115F4F0()
{
  return MEMORY[0x270F35630]();
}

uint64_t sub_24115F500()
{
  return MEMORY[0x270F35638]();
}

uint64_t sub_24115F520()
{
  return MEMORY[0x270F35648]();
}

uint64_t sub_24115F530()
{
  return MEMORY[0x270F35650]();
}

uint64_t sub_24115F540()
{
  return MEMORY[0x270F35658]();
}

uint64_t sub_24115F550()
{
  return MEMORY[0x270F35660]();
}

uint64_t sub_24115F560()
{
  return MEMORY[0x270F35668]();
}

uint64_t sub_24115F570()
{
  return MEMORY[0x270F35670]();
}

uint64_t sub_24115F580()
{
  return MEMORY[0x270F35678]();
}

uint64_t sub_24115F590()
{
  return MEMORY[0x270F35680]();
}

uint64_t sub_24115F5A0()
{
  return MEMORY[0x270F35688]();
}

uint64_t sub_24115F5B0()
{
  return MEMORY[0x270F35690]();
}

uint64_t sub_24115F5C0()
{
  return MEMORY[0x270F371C8]();
}

uint64_t sub_24115F5D0()
{
  return MEMORY[0x270F35B50]();
}

uint64_t sub_24115F5E0()
{
  return MEMORY[0x270F371D0]();
}

uint64_t sub_24115F5F0()
{
  return MEMORY[0x270F371E0]();
}

uint64_t sub_24115F600()
{
  return MEMORY[0x270F371E8]();
}

uint64_t sub_24115F610()
{
  return MEMORY[0x270F371F0]();
}

uint64_t sub_24115F620()
{
  return MEMORY[0x270F371F8]();
}

uint64_t sub_24115F630()
{
  return MEMORY[0x270F37208]();
}

uint64_t sub_24115F640()
{
  return MEMORY[0x270F37218]();
}

uint64_t sub_24115F650()
{
  return MEMORY[0x270F37220]();
}

uint64_t sub_24115F660()
{
  return MEMORY[0x270F37228]();
}

uint64_t sub_24115F670()
{
  return MEMORY[0x270F37238]();
}

uint64_t sub_24115F680()
{
  return MEMORY[0x270F37240]();
}

uint64_t sub_24115F690()
{
  return MEMORY[0x270F37248]();
}

uint64_t sub_24115F6A0()
{
  return MEMORY[0x270F37250]();
}

uint64_t sub_24115F6B0()
{
  return MEMORY[0x270F37258]();
}

uint64_t sub_24115F6C0()
{
  return MEMORY[0x270F37260]();
}

uint64_t sub_24115F6D0()
{
  return MEMORY[0x270F37268]();
}

uint64_t sub_24115F6E0()
{
  return MEMORY[0x270F37270]();
}

uint64_t sub_24115F6F0()
{
  return MEMORY[0x270F37278]();
}

uint64_t sub_24115F700()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t sub_24115F710()
{
  return MEMORY[0x270FA2D00]();
}

uint64_t sub_24115F720()
{
  return MEMORY[0x270F36E38]();
}

uint64_t sub_24115F730()
{
  return MEMORY[0x270F36E40]();
}

uint64_t sub_24115F740()
{
  return MEMORY[0x270F36E48]();
}

uint64_t sub_24115F750()
{
  return MEMORY[0x270F36E78]();
}

uint64_t sub_24115F760()
{
  return MEMORY[0x270F36E98]();
}

uint64_t sub_24115F770()
{
  return MEMORY[0x270F356A0]();
}

uint64_t sub_24115F780()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24115F790()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24115F7A0()
{
  return MEMORY[0x270F81750]();
}

uint64_t sub_24115F7B0()
{
  return MEMORY[0x270F81960]();
}

uint64_t sub_24115F7C0()
{
  return MEMORY[0x270F81978]();
}

uint64_t sub_24115F7D0()
{
  return MEMORY[0x270F81990]();
}

uint64_t sub_24115F7E0()
{
  return MEMORY[0x270F819A8]();
}

uint64_t sub_24115F7F0()
{
  return MEMORY[0x270F819B0]();
}

uint64_t sub_24115F800()
{
  return MEMORY[0x270F819D0]();
}

uint64_t sub_24115F810()
{
  return MEMORY[0x270F81C60]();
}

uint64_t sub_24115F820()
{
  return MEMORY[0x270F81C68]();
}

uint64_t sub_24115F830()
{
  return MEMORY[0x270F81C80]();
}

uint64_t sub_24115F840()
{
  return MEMORY[0x270F81CA0]();
}

uint64_t sub_24115F850()
{
  return MEMORY[0x270F81CA8]();
}

uint64_t sub_24115F860()
{
  return MEMORY[0x270F81CB0]();
}

uint64_t sub_24115F870()
{
  return MEMORY[0x270F81CD0]();
}

uint64_t sub_24115F880()
{
  return MEMORY[0x270F81CD8]();
}

uint64_t sub_24115F890()
{
  return MEMORY[0x270F81CE8]();
}

uint64_t sub_24115F8A0()
{
  return MEMORY[0x270F81D08]();
}

uint64_t sub_24115F8B0()
{
  return MEMORY[0x270F81D10]();
}

uint64_t sub_24115F8C0()
{
  return MEMORY[0x270F81D20]();
}

uint64_t sub_24115F8D0()
{
  return MEMORY[0x270F81D68]();
}

uint64_t sub_24115F8E0()
{
  return MEMORY[0x270F81D78]();
}

uint64_t sub_24115F8F0()
{
  return MEMORY[0x270F81DC8]();
}

uint64_t sub_24115F900()
{
  return MEMORY[0x270F81DD0]();
}

uint64_t sub_24115F910()
{
  return MEMORY[0x270F81DE8]();
}

uint64_t sub_24115F920()
{
  return MEMORY[0x270F81DF0]();
}

uint64_t sub_24115F930()
{
  return MEMORY[0x270F81E50]();
}

uint64_t sub_24115F940()
{
  return MEMORY[0x270F81E60]();
}

uint64_t sub_24115F950()
{
  return MEMORY[0x270F81E68]();
}

uint64_t sub_24115F960()
{
  return MEMORY[0x270F81E70]();
}

uint64_t sub_24115F970()
{
  return MEMORY[0x270F81E88]();
}

uint64_t sub_24115F980()
{
  return MEMORY[0x270F81EA0]();
}

uint64_t sub_24115F990()
{
  return MEMORY[0x270F81EB0]();
}

uint64_t sub_24115F9A0()
{
  return MEMORY[0x270F81EC0]();
}

uint64_t sub_24115F9B0()
{
  return MEMORY[0x270F81EC8]();
}

uint64_t sub_24115F9C0()
{
  return MEMORY[0x270F81ED8]();
}

uint64_t sub_24115F9D0()
{
  return MEMORY[0x270F81EE0]();
}

uint64_t sub_24115F9E0()
{
  return MEMORY[0x270F81EF0]();
}

uint64_t sub_24115F9F0()
{
  return MEMORY[0x270F81F60]();
}

uint64_t sub_24115FA00()
{
  return MEMORY[0x270F81FB0]();
}

uint64_t sub_24115FA10()
{
  return MEMORY[0x270F82058]();
}

uint64_t sub_24115FA20()
{
  return MEMORY[0x270F82068]();
}

uint64_t sub_24115FA30()
{
  return MEMORY[0x270F82138]();
}

uint64_t sub_24115FA40()
{
  return MEMORY[0x270F82150]();
}

uint64_t sub_24115FA50()
{
  return MEMORY[0x270F82168]();
}

uint64_t sub_24115FA60()
{
  return MEMORY[0x270F82170]();
}

uint64_t sub_24115FA70()
{
  return MEMORY[0x270F823A0]();
}

uint64_t sub_24115FA80()
{
  return MEMORY[0x270F36EC0]();
}

uint64_t sub_24115FA90()
{
  return MEMORY[0x270EE3840]();
}

uint64_t sub_24115FAA0()
{
  return MEMORY[0x270EE3848]();
}

uint64_t sub_24115FAB0()
{
  return MEMORY[0x270EE3850]();
}

uint64_t sub_24115FAC0()
{
  return MEMORY[0x270EE3858]();
}

uint64_t sub_24115FAD0()
{
  return MEMORY[0x270EE3860]();
}

uint64_t sub_24115FAE0()
{
  return MEMORY[0x270EE3880]();
}

uint64_t sub_24115FAF0()
{
  return MEMORY[0x270EE38B0]();
}

uint64_t sub_24115FB00()
{
  return MEMORY[0x270EE38E0]();
}

uint64_t sub_24115FB10()
{
  return MEMORY[0x270F36EF0]();
}

uint64_t sub_24115FB20()
{
  return MEMORY[0x270EE3900]();
}

uint64_t sub_24115FB30()
{
  return MEMORY[0x270EE3908]();
}

uint64_t sub_24115FB40()
{
  return MEMORY[0x270EE3930]();
}

uint64_t sub_24115FB50()
{
  return MEMORY[0x270EE3950]();
}

uint64_t sub_24115FB60()
{
  return MEMORY[0x270EE3988]();
}

uint64_t sub_24115FB70()
{
  return MEMORY[0x270EE39C0]();
}

uint64_t sub_24115FB80()
{
  return MEMORY[0x270EE39C8]();
}

uint64_t sub_24115FB90()
{
  return MEMORY[0x270EE3A38]();
}

uint64_t sub_24115FBA0()
{
  return MEMORY[0x270EE3A48]();
}

uint64_t sub_24115FBB0()
{
  return MEMORY[0x270EE3A58]();
}

uint64_t sub_24115FBC0()
{
  return MEMORY[0x270EE3A70]();
}

uint64_t sub_24115FBD0()
{
  return MEMORY[0x270EE3A90]();
}

uint64_t sub_24115FBE0()
{
  return MEMORY[0x270EE3AB8]();
}

uint64_t sub_24115FBF0()
{
  return MEMORY[0x270EE3AC0]();
}

uint64_t sub_24115FC00()
{
  return MEMORY[0x270EE3AD8]();
}

uint64_t sub_24115FC10()
{
  return MEMORY[0x270EE3B50]();
}

uint64_t sub_24115FC20()
{
  return MEMORY[0x270EE3B60]();
}

uint64_t sub_24115FC30()
{
  return MEMORY[0x270EE3B98]();
}

uint64_t sub_24115FC40()
{
  return MEMORY[0x270EE3C50]();
}

uint64_t sub_24115FC50()
{
  return MEMORY[0x270EE3C70]();
}

uint64_t sub_24115FC60()
{
  return MEMORY[0x270EE3C78]();
}

uint64_t sub_24115FC70()
{
  return MEMORY[0x270EE3CA8]();
}

uint64_t sub_24115FC80()
{
  return MEMORY[0x270EE3CB8]();
}

uint64_t sub_24115FC90()
{
  return MEMORY[0x270EE3D18]();
}

uint64_t sub_24115FCA0()
{
  return MEMORY[0x270EE3D30]();
}

uint64_t sub_24115FCB0()
{
  return MEMORY[0x270EE3D38]();
}

uint64_t sub_24115FCC0()
{
  return MEMORY[0x270EE3D40]();
}

uint64_t sub_24115FCD0()
{
  return MEMORY[0x270EE3D50]();
}

uint64_t sub_24115FCE0()
{
  return MEMORY[0x270EE3D68]();
}

uint64_t sub_24115FCF0()
{
  return MEMORY[0x270EE3D78]();
}

uint64_t sub_24115FD00()
{
  return MEMORY[0x270F37C40]();
}

uint64_t sub_24115FD10()
{
  return MEMORY[0x270EE3D98]();
}

uint64_t sub_24115FD20()
{
  return MEMORY[0x270EE3DA0]();
}

uint64_t sub_24115FD30()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t sub_24115FD40()
{
  return MEMORY[0x270EE3DB0]();
}

uint64_t sub_24115FD50()
{
  return MEMORY[0x270EE3DD0]();
}

uint64_t sub_24115FD60()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_24115FD70()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_24115FD80()
{
  return MEMORY[0x270EE3DF0]();
}

uint64_t sub_24115FD90()
{
  return MEMORY[0x270F36F00]();
}

uint64_t sub_24115FDA0()
{
  return MEMORY[0x270F36F18]();
}

uint64_t sub_24115FDB0()
{
  return MEMORY[0x270F34CD8]();
}

uint64_t sub_24115FDC0()
{
  return MEMORY[0x270F35B58]();
}

uint64_t sub_24115FDD0()
{
  return MEMORY[0x270F35B60]();
}

uint64_t sub_24115FDE0()
{
  return MEMORY[0x270F35B68]();
}

uint64_t sub_24115FDF0()
{
  return MEMORY[0x270F356A8]();
}

uint64_t sub_24115FE00()
{
  return MEMORY[0x270F356B0]();
}

uint64_t sub_24115FE10()
{
  return MEMORY[0x270F356B8]();
}

uint64_t sub_24115FE20()
{
  return MEMORY[0x270EE3E08]();
}

uint64_t sub_24115FE30()
{
  return MEMORY[0x270EE3E18]();
}

uint64_t sub_24115FE40()
{
  return MEMORY[0x270EE3E38]();
}

uint64_t sub_24115FE50()
{
  return MEMORY[0x270EE3E48]();
}

uint64_t sub_24115FE60()
{
  return MEMORY[0x270EE3E50]();
}

uint64_t sub_24115FE70()
{
  return MEMORY[0x270EE3E78]();
}

uint64_t sub_24115FE80()
{
  return MEMORY[0x270EE3EA0]();
}

uint64_t sub_24115FE90()
{
  return MEMORY[0x270EE3EA8]();
}

uint64_t sub_24115FEA0()
{
  return MEMORY[0x270EE3F18]();
}

uint64_t sub_24115FEB0()
{
  return MEMORY[0x270EE3F30]();
}

uint64_t sub_24115FEC0()
{
  return MEMORY[0x270EE3F40]();
}

uint64_t sub_24115FED0()
{
  return MEMORY[0x270EE3F58]();
}

uint64_t sub_24115FEE0()
{
  return MEMORY[0x270EE3F60]();
}

uint64_t sub_24115FEF0()
{
  return MEMORY[0x270EE3F68]();
}

uint64_t sub_24115FF00()
{
  return MEMORY[0x270EE3F70]();
}

uint64_t sub_24115FF10()
{
  return MEMORY[0x270EE3F78]();
}

uint64_t sub_24115FF20()
{
  return MEMORY[0x270EE3F90]();
}

uint64_t sub_24115FF30()
{
  return MEMORY[0x270EE3FD8]();
}

uint64_t sub_24115FF40()
{
  return MEMORY[0x270EE3FE0]();
}

uint64_t sub_24115FF50()
{
  return MEMORY[0x270EE3FF0]();
}

uint64_t sub_24115FF60()
{
  return MEMORY[0x270EE4008]();
}

uint64_t sub_24115FF70()
{
  return MEMORY[0x270EE4028]();
}

uint64_t sub_24115FF80()
{
  return MEMORY[0x270EE4030]();
}

uint64_t sub_24115FF90()
{
  return MEMORY[0x270EFECF8]();
}

uint64_t sub_24115FFA0()
{
  return MEMORY[0x270EFEEC0]();
}

uint64_t sub_24115FFB0()
{
  return MEMORY[0x270EFF128]();
}

uint64_t sub_24115FFC0()
{
  return MEMORY[0x270EFF230]();
}

uint64_t sub_24115FFD0()
{
  return MEMORY[0x270EFF598]();
}

uint64_t sub_24115FFE0()
{
  return MEMORY[0x270EFF900]();
}

uint64_t sub_24115FFF0()
{
  return MEMORY[0x270EFF918]();
}

uint64_t sub_241160000()
{
  return MEMORY[0x270F001A8]();
}

uint64_t sub_241160010()
{
  return MEMORY[0x270F00590]();
}

uint64_t sub_241160020()
{
  return MEMORY[0x270F00598]();
}

uint64_t sub_241160030()
{
  return MEMORY[0x270F00688]();
}

uint64_t sub_241160040()
{
  return MEMORY[0x270F00978]();
}

uint64_t sub_241160050()
{
  return MEMORY[0x270F00980]();
}

uint64_t sub_241160060()
{
  return MEMORY[0x270F00A20]();
}

uint64_t sub_241160070()
{
  return MEMORY[0x270F00A30]();
}

uint64_t sub_241160080()
{
  return MEMORY[0x270F00C78]();
}

uint64_t sub_241160090()
{
  return MEMORY[0x270F00C88]();
}

uint64_t sub_2411600A0()
{
  return MEMORY[0x270F00E88]();
}

uint64_t sub_2411600B0()
{
  return MEMORY[0x270F00E98]();
}

uint64_t sub_2411600C0()
{
  return MEMORY[0x270F00ED8]();
}

uint64_t sub_2411600D0()
{
  return MEMORY[0x270F00EE0]();
}

uint64_t sub_2411600E0()
{
  return MEMORY[0x270F01070]();
}

uint64_t sub_2411600F0()
{
  return MEMORY[0x270F01270]();
}

uint64_t sub_241160100()
{
  return MEMORY[0x270F01358]();
}

uint64_t sub_241160110()
{
  return MEMORY[0x270F01498]();
}

uint64_t sub_241160120()
{
  return MEMORY[0x270F014A8]();
}

uint64_t sub_241160130()
{
  return MEMORY[0x270F01510]();
}

uint64_t sub_241160140()
{
  return MEMORY[0x270F01520]();
}

uint64_t sub_241160150()
{
  return MEMORY[0x270F016A0]();
}

uint64_t sub_241160160()
{
  return MEMORY[0x270F016D0]();
}

uint64_t sub_241160170()
{
  return MEMORY[0x270F01800]();
}

uint64_t sub_241160180()
{
  return MEMORY[0x270F01BF8]();
}

uint64_t sub_241160190()
{
  return MEMORY[0x270F01E08]();
}

uint64_t sub_2411601A0()
{
  return MEMORY[0x270F01E28]();
}

uint64_t sub_2411601B0()
{
  return MEMORY[0x270F01E38]();
}

uint64_t sub_2411601C0()
{
  return MEMORY[0x270F02798]();
}

uint64_t sub_2411601D0()
{
  return MEMORY[0x270F029A8]();
}

uint64_t sub_2411601E0()
{
  return MEMORY[0x270F029E0]();
}

uint64_t sub_2411601F0()
{
  return MEMORY[0x270F02A30]();
}

uint64_t sub_241160200()
{
  return MEMORY[0x270F02A38]();
}

uint64_t sub_241160210()
{
  return MEMORY[0x270F02A48]();
}

uint64_t sub_241160220()
{
  return MEMORY[0x270F02A68]();
}

uint64_t sub_241160230()
{
  return MEMORY[0x270F02B48]();
}

uint64_t sub_241160240()
{
  return MEMORY[0x270F02BA8]();
}

uint64_t sub_241160250()
{
  return MEMORY[0x270F02BC0]();
}

uint64_t sub_241160260()
{
  return MEMORY[0x270F02C68]();
}

uint64_t sub_241160270()
{
  return MEMORY[0x270F02C98]();
}

uint64_t sub_241160280()
{
  return MEMORY[0x270F02D30]();
}

uint64_t sub_241160290()
{
  return MEMORY[0x270F02D50]();
}

uint64_t sub_2411602A0()
{
  return MEMORY[0x270F03008]();
}

uint64_t sub_2411602B0()
{
  return MEMORY[0x270F030A8]();
}

uint64_t sub_2411602C0()
{
  return MEMORY[0x270F03228]();
}

uint64_t sub_2411602D0()
{
  return MEMORY[0x270F03250]();
}

uint64_t sub_2411602E0()
{
  return MEMORY[0x270F032C0]();
}

uint64_t sub_2411602F0()
{
  return MEMORY[0x270F032D0]();
}

uint64_t sub_241160300()
{
  return MEMORY[0x270F036C0]();
}

uint64_t sub_241160310()
{
  return MEMORY[0x270F03D30]();
}

uint64_t sub_241160320()
{
  return MEMORY[0x270F04378]();
}

uint64_t sub_241160330()
{
  return MEMORY[0x270F04478]();
}

uint64_t sub_241160340()
{
  return MEMORY[0x270F04498]();
}

uint64_t sub_241160350()
{
  return MEMORY[0x270F044F0]();
}

uint64_t sub_241160360()
{
  return MEMORY[0x270F04558]();
}

uint64_t sub_241160370()
{
  return MEMORY[0x270F045A8]();
}

uint64_t sub_241160380()
{
  return MEMORY[0x270F04AF8]();
}

uint64_t sub_241160390()
{
  return MEMORY[0x270F04B20]();
}

uint64_t sub_2411603A0()
{
  return MEMORY[0x270F04C20]();
}

uint64_t sub_2411603B0()
{
  return MEMORY[0x270F04C30]();
}

uint64_t sub_2411603C0()
{
  return MEMORY[0x270F04C90]();
}

uint64_t sub_2411603D0()
{
  return MEMORY[0x270F04CC0]();
}

uint64_t sub_2411603E0()
{
  return MEMORY[0x270F05078]();
}

uint64_t sub_2411603F0()
{
  return MEMORY[0x270F05088]();
}

uint64_t sub_241160400()
{
  return MEMORY[0x270FA0970]();
}

uint64_t sub_241160410()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_241160420()
{
  return MEMORY[0x270FA09D0]();
}

uint64_t sub_241160430()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_241160440()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_241160450()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t sub_241160460()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_241160470()
{
  return MEMORY[0x270FA0B08]();
}

uint64_t sub_241160480()
{
  return MEMORY[0x270FA0B20]();
}

uint64_t sub_241160490()
{
  return MEMORY[0x270FA0BB0]();
}

uint64_t sub_2411604A0()
{
  return MEMORY[0x270FA0BC8]();
}

uint64_t sub_2411604B0()
{
  return MEMORY[0x270FA0BD0]();
}

uint64_t sub_2411604C0()
{
  return MEMORY[0x270F37F50]();
}

uint64_t sub_2411604D0()
{
  return MEMORY[0x270EF30B8]();
}

uint64_t sub_2411604E0()
{
  return MEMORY[0x270EF30D0]();
}

uint64_t sub_2411604F0()
{
  return MEMORY[0x270EF30D8]();
}

uint64_t sub_241160500()
{
  return MEMORY[0x270EF3240]();
}

uint64_t sub_241160510()
{
  return MEMORY[0x270EF3248]();
}

uint64_t sub_241160520()
{
  return MEMORY[0x270EF3250]();
}

uint64_t sub_241160530()
{
  return MEMORY[0x270EF3328]();
}

uint64_t sub_241160540()
{
  return MEMORY[0x270EF3330]();
}

uint64_t sub_241160550()
{
  return MEMORY[0x270EF3338]();
}

uint64_t sub_241160560()
{
  return MEMORY[0x270EF3340]();
}

uint64_t sub_241160570()
{
  return MEMORY[0x270EF3348]();
}

uint64_t sub_241160580()
{
  return MEMORY[0x270EF3350]();
}

uint64_t sub_241160590()
{
  return MEMORY[0x270EF3360]();
}

uint64_t sub_2411605A0()
{
  return MEMORY[0x270EF3368]();
}

uint64_t sub_2411605B0()
{
  return MEMORY[0x270EF3370]();
}

uint64_t sub_2411605C0()
{
  return MEMORY[0x270EF3378]();
}

uint64_t sub_2411605D0()
{
  return MEMORY[0x270EF3388]();
}

uint64_t sub_2411605E0()
{
  return MEMORY[0x270EF3390]();
}

uint64_t sub_2411605F0()
{
  return MEMORY[0x270F075F0]();
}

uint64_t sub_241160600()
{
  return MEMORY[0x270F075F8]();
}

uint64_t sub_241160610()
{
  return MEMORY[0x270F07600]();
}

uint64_t sub_241160620()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_241160630()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_241160640()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_241160650()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_241160660()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_241160670()
{
  return MEMORY[0x270F9D3C8]();
}

uint64_t sub_241160680()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_241160690()
{
  return MEMORY[0x270F9D480]();
}

uint64_t sub_2411606A0()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_2411606B0()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_2411606C0()
{
  return MEMORY[0x270F9D498]();
}

uint64_t sub_2411606D0()
{
  return MEMORY[0x270F9D550]();
}

uint64_t sub_2411606E0()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_2411606F0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_241160700()
{
  return MEMORY[0x270EF19B8]();
}

uint64_t sub_241160710()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_241160720()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_241160730()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_241160740()
{
  return MEMORY[0x270EF1A28]();
}

uint64_t sub_241160750()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_241160760()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_241160770()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_241160780()
{
  return MEMORY[0x270F9D610]();
}

uint64_t sub_241160790()
{
  return MEMORY[0x270F36F20]();
}

uint64_t sub_2411607A0()
{
  return MEMORY[0x270F36F28]();
}

uint64_t sub_2411607B0()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_2411607C0()
{
  return MEMORY[0x270F32528]();
}

uint64_t sub_2411607D0()
{
  return MEMORY[0x270F32538]();
}

uint64_t sub_2411607E0()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_2411607F0()
{
  return MEMORY[0x270F356C0]();
}

uint64_t sub_241160800()
{
  return MEMORY[0x270F356C8]();
}

uint64_t sub_241160810()
{
  return MEMORY[0x270F356D0]();
}

uint64_t sub_241160820()
{
  return MEMORY[0x270F356D8]();
}

uint64_t sub_241160830()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_241160840()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_241160850()
{
  return MEMORY[0x270F9D760]();
}

uint64_t sub_241160860()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_241160870()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_241160880()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_241160890()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_2411608B0()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_2411608C0()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_2411608D0()
{
  return MEMORY[0x270F9D878]();
}

uint64_t sub_2411608E0()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_2411608F0()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_241160900()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_241160910()
{
  return MEMORY[0x270F32548]();
}

uint64_t sub_241160920()
{
  return MEMORY[0x270EE4040]();
}

uint64_t sub_241160930()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_241160940()
{
  return MEMORY[0x270F9DAC0]();
}

uint64_t sub_241160950()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_241160960()
{
  return MEMORY[0x270F9DB40]();
}

uint64_t sub_241160970()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_241160980()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_241160990()
{
  return MEMORY[0x270EF1BA8]();
}

uint64_t sub_2411609A0()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_2411609B0()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_2411609C0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_2411609D0()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_2411609E0()
{
  return MEMORY[0x270F356E0]();
}

uint64_t sub_2411609F0()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_241160A00()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_241160A10()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_241160A20()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_241160A40()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_241160A50()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_241160A60()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_241160A70()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_241160A80()
{
  return MEMORY[0x270FA1F60]();
}

uint64_t sub_241160AA0()
{
  return MEMORY[0x270FA1F78]();
}

uint64_t sub_241160AB0()
{
  return MEMORY[0x270FA1F88]();
}

uint64_t sub_241160AC0()
{
  return MEMORY[0x270FA1FB0]();
}

uint64_t sub_241160AD0()
{
  return MEMORY[0x270FA1FD8]();
}

uint64_t sub_241160AE0()
{
  return MEMORY[0x270FA20C0]();
}

uint64_t sub_241160AF0()
{
  return MEMORY[0x270FA20D8]();
}

uint64_t sub_241160B00()
{
  return MEMORY[0x270FA20E0]();
}

uint64_t sub_241160B10()
{
  return MEMORY[0x270FA20F0]();
}

uint64_t sub_241160B30()
{
  return MEMORY[0x270FA2120]();
}

uint64_t sub_241160B40()
{
  return MEMORY[0x270EF1C00]();
}

uint64_t sub_241160B50()
{
  return MEMORY[0x270F9DD68]();
}

uint64_t sub_241160B70()
{
  return MEMORY[0x270EF1C60]();
}

uint64_t sub_241160B80()
{
  return MEMORY[0x270EF1C70]();
}

uint64_t sub_241160B90()
{
  return MEMORY[0x270EF1C78]();
}

uint64_t sub_241160BB0()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_241160BC0()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_241160BD0()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_241160BE0()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_241160BF0()
{
  return MEMORY[0x270F9DFD0]();
}

uint64_t sub_241160C00()
{
  return MEMORY[0x270EF1CE0]();
}

uint64_t sub_241160C10()
{
  return MEMORY[0x270F35B78]();
}

uint64_t sub_241160C20()
{
  return MEMORY[0x270F9E0D8]();
}

uint64_t sub_241160C30()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_241160C40()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_241160C50()
{
  return MEMORY[0x270EF33B8]();
}

uint64_t sub_241160C60()
{
  return MEMORY[0x270F9E330]();
}

uint64_t sub_241160C70()
{
  return MEMORY[0x270EF1DB8]();
}

uint64_t sub_241160C80()
{
  return MEMORY[0x270F36F50]();
}

uint64_t sub_241160C90()
{
  return MEMORY[0x270EF1E08]();
}

uint64_t sub_241160CA0()
{
  return MEMORY[0x270FA1278]();
}

uint64_t sub_241160CB0()
{
  return MEMORY[0x270F36F58]();
}

uint64_t sub_241160CC0()
{
  return MEMORY[0x270F35138]();
}

uint64_t sub_241160CD0()
{
  return MEMORY[0x270F35140]();
}

uint64_t sub_241160CE0()
{
  return MEMORY[0x270F35148]();
}

uint64_t sub_241160CF0()
{
  return MEMORY[0x270F35158]();
}

uint64_t sub_241160D00()
{
  return MEMORY[0x270F37280]();
}

uint64_t sub_241160D10()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_241160D20()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_241160D30()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_241160D40()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_241160D50()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_241160D60()
{
  return MEMORY[0x270F356F0]();
}

uint64_t sub_241160D70()
{
  return MEMORY[0x270F356F8]();
}

uint64_t sub_241160D80()
{
  return MEMORY[0x270F35700]();
}

uint64_t sub_241160D90()
{
  return MEMORY[0x270F35708]();
}

uint64_t sub_241160DA0()
{
  return MEMORY[0x270F82478]();
}

uint64_t sub_241160DB0()
{
  return MEMORY[0x270F824A0]();
}

uint64_t sub_241160DC0()
{
  return MEMORY[0x270F824B0]();
}

uint64_t sub_241160DD0()
{
  return MEMORY[0x270EF1F38]();
}

uint64_t sub_241160DE0()
{
  return MEMORY[0x270F34D40]();
}

uint64_t sub_241160DF0()
{
  return MEMORY[0x270F34D48]();
}

uint64_t sub_241160E00()
{
  return MEMORY[0x270F34D50]();
}

uint64_t sub_241160E10()
{
  return MEMORY[0x270F34D58]();
}

uint64_t sub_241160E20()
{
  return MEMORY[0x270F34D60]();
}

uint64_t sub_241160E30()
{
  return MEMORY[0x270F34D80]();
}

uint64_t sub_241160E40()
{
  return MEMORY[0x270F34D88]();
}

uint64_t sub_241160E50()
{
  return MEMORY[0x270F35B80]();
}

uint64_t sub_241160E60()
{
  return MEMORY[0x270F82578]();
}

uint64_t sub_241160E70()
{
  return MEMORY[0x270F34DA0]();
}

uint64_t sub_241160E80()
{
  return MEMORY[0x270FA0C20]();
}

uint64_t sub_241160E90()
{
  return MEMORY[0x270FA0C60]();
}

uint64_t sub_241160EA0()
{
  return MEMORY[0x270FA0C78]();
}

uint64_t sub_241160EB0()
{
  return MEMORY[0x270FA0CD0]();
}

uint64_t sub_241160EC0()
{
  return MEMORY[0x270FA0CF0]();
}

uint64_t sub_241160ED0()
{
  return MEMORY[0x270FA0D00]();
}

uint64_t sub_241160EE0()
{
  return MEMORY[0x270FA0D20]();
}

uint64_t sub_241160EF0()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_241160F00()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_241160F10()
{
  return MEMORY[0x270FA0DD0]();
}

uint64_t sub_241160F20()
{
  return MEMORY[0x270F35B88]();
}

uint64_t sub_241160F30()
{
  return MEMORY[0x270F38150]();
}

uint64_t sub_241160F40()
{
  return MEMORY[0x270F35B90]();
}

uint64_t sub_241160F50()
{
  return MEMORY[0x270F37CE0]();
}

uint64_t sub_241160F60()
{
  return MEMORY[0x270F34DA8]();
}

uint64_t sub_241160F70()
{
  return MEMORY[0x270F35B98]();
}

uint64_t sub_241160F80()
{
  return MEMORY[0x270F35BA0]();
}

uint64_t sub_241160F90()
{
  return MEMORY[0x270F38158]();
}

uint64_t sub_241160FA0()
{
  return MEMORY[0x270F325D8]();
}

uint64_t sub_241160FB0()
{
  return MEMORY[0x270EF2010]();
}

uint64_t sub_241160FC0()
{
  return MEMORY[0x270EF2020]();
}

uint64_t sub_241160FD0()
{
  return MEMORY[0x270F82658]();
}

uint64_t sub_241160FE0()
{
  return MEMORY[0x270F82668]();
}

uint64_t sub_241160FF0()
{
  return MEMORY[0x270F82670]();
}

uint64_t sub_241161000()
{
  return MEMORY[0x270FA0F00]();
}

uint64_t sub_241161010()
{
  return MEMORY[0x270FA0F28]();
}

uint64_t sub_241161020()
{
  return MEMORY[0x270F82688]();
}

uint64_t sub_241161030()
{
  return MEMORY[0x270F37D08]();
}

uint64_t sub_241161040()
{
  return MEMORY[0x270F37288]();
}

uint64_t sub_241161050()
{
  return MEMORY[0x270F37290]();
}

uint64_t sub_241161060()
{
  return MEMORY[0x270F37D38]();
}

uint64_t sub_241161070()
{
  return MEMORY[0x270F826D8]();
}

uint64_t sub_241161080()
{
  return MEMORY[0x270F34E20]();
}

uint64_t sub_241161090()
{
  return MEMORY[0x270F35730]();
}

uint64_t sub_2411610B0()
{
  return MEMORY[0x270F35BA8]();
}

uint64_t sub_2411610C0()
{
  return MEMORY[0x270F35BB8]();
}

uint64_t sub_2411610D0()
{
  return MEMORY[0x270F35BC0]();
}

uint64_t sub_2411610E0()
{
  return MEMORY[0x270F35BC8]();
}

uint64_t sub_2411610F0()
{
  return MEMORY[0x270F35740]();
}

uint64_t sub_241161100()
{
  return MEMORY[0x270F35748]();
}

uint64_t sub_241161110()
{
  return MEMORY[0x270F35750]();
}

uint64_t sub_241161120()
{
  return MEMORY[0x270F35758]();
}

uint64_t sub_241161130()
{
  return MEMORY[0x270F35760]();
}

uint64_t sub_241161140()
{
  return MEMORY[0x270F35768]();
}

uint64_t sub_241161150()
{
  return MEMORY[0x270F35770]();
}

uint64_t sub_241161160()
{
  return MEMORY[0x270F35778]();
}

uint64_t sub_241161170()
{
  return MEMORY[0x270F35780]();
}

uint64_t sub_241161180()
{
  return MEMORY[0x270F35788]();
}

uint64_t sub_241161190()
{
  return MEMORY[0x270F35790]();
}

uint64_t sub_2411611A0()
{
  return MEMORY[0x270F35798]();
}

uint64_t sub_2411611B0()
{
  return MEMORY[0x270F357A0]();
}

uint64_t sub_2411611C0()
{
  return MEMORY[0x270F357A8]();
}

uint64_t sub_2411611D0()
{
  return MEMORY[0x270F34E60]();
}

uint64_t sub_2411611E0()
{
  return MEMORY[0x270F37D68]();
}

uint64_t sub_2411611F0()
{
  return MEMORY[0x270F34E68]();
}

uint64_t sub_241161200()
{
  return MEMORY[0x270F34E70]();
}

uint64_t sub_241161210()
{
  return MEMORY[0x270F34E80]();
}

uint64_t sub_241161220()
{
  return MEMORY[0x270F35BD8]();
}

uint64_t sub_241161230()
{
  return MEMORY[0x270F828E0]();
}

uint64_t sub_241161240()
{
  return MEMORY[0x270F35BE0]();
}

uint64_t sub_241161250()
{
  return MEMORY[0x270F35BE8]();
}

uint64_t sub_241161260()
{
  return MEMORY[0x270F35BF0]();
}

uint64_t sub_241161270()
{
  return MEMORY[0x270F35BF8]();
}

uint64_t sub_241161280()
{
  return MEMORY[0x270F35C00]();
}

uint64_t sub_241161290()
{
  return MEMORY[0x270F35C08]();
}

uint64_t sub_2411612A0()
{
  return MEMORY[0x270F32628]();
}

uint64_t sub_2411612B0()
{
  return MEMORY[0x270F35C10]();
}

uint64_t sub_2411612C0()
{
  return MEMORY[0x270EF2198]();
}

uint64_t sub_2411612D0()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_2411612E0()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_2411612F0()
{
  return MEMORY[0x270FA1190]();
}

uint64_t sub_241161300()
{
  return MEMORY[0x270F82960]();
}

uint64_t sub_241161310()
{
  return MEMORY[0x270F82998]();
}

uint64_t sub_241161320()
{
  return MEMORY[0x270F829B0]();
}

uint64_t sub_241161330()
{
  return MEMORY[0x270F829B8]();
}

uint64_t sub_241161340()
{
  return MEMORY[0x270F82A10]();
}

uint64_t sub_241161350()
{
  return MEMORY[0x270F82A68]();
}

uint64_t sub_241161360()
{
  return MEMORY[0x270F82A78]();
}

uint64_t sub_241161370()
{
  return MEMORY[0x270F82AD0]();
}

uint64_t sub_241161380()
{
  return MEMORY[0x270F82AF0]();
}

uint64_t sub_241161390()
{
  return MEMORY[0x270F82B00]();
}

uint64_t sub_2411613A0()
{
  return MEMORY[0x270F82B18]();
}

uint64_t sub_2411613B0()
{
  return MEMORY[0x270F82B28]();
}

uint64_t sub_2411613C0()
{
  return MEMORY[0x270F82B58]();
}

uint64_t sub_2411613D0()
{
  return MEMORY[0x270F82B60]();
}

uint64_t sub_2411613E0()
{
  return MEMORY[0x270F82B88]();
}

uint64_t sub_2411613F0()
{
  return MEMORY[0x270EF2310]();
}

uint64_t sub_241161400()
{
  return MEMORY[0x270EF2320]();
}

uint64_t sub_241161410()
{
  return MEMORY[0x270EF2340]();
}

uint64_t sub_241161420()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_241161430()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_241161440()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_241161450()
{
  return MEMORY[0x270F9E570]();
}

uint64_t sub_241161460()
{
  return MEMORY[0x270F9E578]();
}

uint64_t sub_241161470()
{
  return MEMORY[0x270EF2470]();
}

uint64_t sub_241161480()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_241161490()
{
  return MEMORY[0x270EF2508]();
}

uint64_t sub_2411614A0()
{
  return MEMORY[0x270EF2560]();
}

uint64_t sub_2411614B0()
{
  return MEMORY[0x270FA13A0]();
}

uint64_t sub_2411614C0()
{
  return MEMORY[0x270EF25E8]();
}

uint64_t sub_2411614D0()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_2411614F0()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_241161500()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_241161510()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_241161520()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_241161530()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_241161540()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_241161550()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_241161560()
{
  return MEMORY[0x270F9E878]();
}

uint64_t sub_241161570()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_241161580()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_241161590()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_2411615A0()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_2411615B0()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_2411615C0()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_2411615D0()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_2411615E0()
{
  return MEMORY[0x270F9E978]();
}

uint64_t sub_2411615F0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_241161600()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_241161610()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_241161620()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_241161630()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_241161640()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_241161650()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_241161660()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_241161670()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_241161680()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_241161690()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_2411616A0()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_2411616B0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_2411616C0()
{
  return MEMORY[0x270F9EFF8]();
}

uint64_t sub_2411616D0()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_2411616E0()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_2411616F0()
{
  return MEMORY[0x270F9F090]();
}

uint64_t sub_241161700()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_241161710()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_241161720()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_241161730()
{
  return MEMORY[0x270F9F0B8]();
}

uint64_t sub_241161740()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_241161750()
{
  return MEMORY[0x270F9F1A8]();
}

uint64_t sub_241161760()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_241161770()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_241161780()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_241161790()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_2411617A0()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_2411617B0()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_2411617C0()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_2411617D0()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_2411617E0()
{
  return MEMORY[0x270F9F3B8]();
}

uint64_t sub_2411617F0()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_241161800()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_241161810()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_241161820()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_241161830()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_241161840()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_241161850()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_241161860()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_241161870()
{
  return MEMORY[0x270F9F750]();
}

uint64_t sub_241161880()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_241161890()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_2411618A0()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_2411618B0()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_2411618C0()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_2411618D0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_2411618E0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_2411618F0()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_241161900()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_241161910()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_241161920()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_241161930()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_241161940()
{
  return MEMORY[0x270F9FC30]();
}

uint64_t sub_241161950()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_241161960()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_241161970()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_241161980()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_241161990()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_2411619A0()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_2411619B0()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_2411619C0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_2411619D0()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_241161A00()
{
  return MEMORY[0x270FA0128]();
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x270EFB948](retstr, sx, sy, sz);
}

CGPathRef CGPathCreateWithEllipseInRect(CGRect rect, const CGAffineTransform *transform)
{
  return (CGPathRef)MEMORY[0x270EE7050](transform, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return MEMORY[0x270EE7170]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, (__n128)point, *(__n128 *)&point.y);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x270EE71A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  MEMORY[0x270EE71C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  MEMORY[0x270EE71D8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x270EE71F8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x270EE7210]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x270EE7218]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t HKMostRecentSampleEndDateText()
{
  return MEMORY[0x270F38280]();
}

uint64_t HKSynchronizeNanoPreferencesUserDefaults()
{
  return MEMORY[0x270EF3898]();
}

uint64_t HKUICalendarLocaleIsRightToLeft()
{
  return MEMORY[0x270F382F0]();
}

uint64_t HKUIOnePixel()
{
  return MEMORY[0x270F38398]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

{
  return MEMORY[0x270F9A3C0]();
}

{
  return MEMORY[0x270F9A3C8]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x270ED9340]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x270ED94B8](value);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x270FA2408]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x270FA0250]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x270FA0270]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x270FA0350]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x270FA0358]();
}

uint64_t swift_getFunctionTypeMetadata0()
{
  return MEMORY[0x270FA0388]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x270FA0390]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x270FA0420]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x270FA05D8]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x270FA05E0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x270FA0600]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x270FA0608]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}