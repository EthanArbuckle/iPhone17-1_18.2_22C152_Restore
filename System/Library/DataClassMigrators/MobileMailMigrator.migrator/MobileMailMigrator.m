void sub_1CD4(uint64_t a1)
{
  os_log_t v1;
  void *v2;
  id v3;
  uint64_t vars8;

  NSStringFromClass(*(Class *)(a1 + 32));
  v3 = objc_claimAutoreleasedReturnValue();
  v1 = os_log_create("com.apple.mobilemail", (const char *)[v3 UTF8String]);
  v2 = (void *)qword_C3D0;
  qword_C3D0 = (uint64_t)v1;
}

void sub_1D44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1E58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2080(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  _Unwind_Resume(a1);
}

BOOL sub_2888(id a1, NSURL *a2, NSError *a3)
{
  v4 = a2;
  v5 = a3;
  v6 = MFLogGeneral();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = [(NSURL *)v4 path];
    int v9 = 138412546;
    v10 = v7;
    __int16 v11 = 2112;
    v12 = v5;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "#Warning Attachment enumeration encountered error at path \"%@\": %@", (uint8_t *)&v9, 0x16u);
  }
  return 1;
}

void sub_2970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2AD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2C48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2D4C(_Unwind_Exception *a1)
{
  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_2F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_3358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  _Unwind_Resume(a1);
}

void sub_3624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_3694(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  v6 = +[NSMutableDictionary dictionary];
  v7 = [v5 objectForKeyedSubscript:@"n"];
  if (v7) {
    [v6 setObject:v7 forKeyedSubscript:@"Name"];
  }
  v8 = [v5 objectForKeyedSubscript:@"a"];
  if (v8) {
    [v6 setObject:v8 forKeyedSubscript:@"EmailAddresses"];
  }

  [*(id *)(a1 + 32) setObject:v6 forKeyedSubscript:v9];
}

void sub_3790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_3854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3CD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_3D2C(void *a1, void *a2)
{
  if (a1)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v3 = a1;
    id v4 = [v3 countByEnumeratingWithState:&v15 objects:v20 count:16];
    if (v4)
    {
      uint64_t v5 = *(void *)v16;
      do
      {
        v6 = 0;
        do
        {
          if (*(void *)v16 != v5) {
            objc_enumerationMutation(v3);
          }
          CFDictionaryGetValue((CFDictionaryRef)v3, *(const void **)(*((void *)&v15 + 1) + 8 * (void)v6));
          _CFPreferencesSetValueWithContainer();
          v6 = (char *)v6 + 1;
        }
        while (v4 != v6);
        id v4 = [v3 countByEnumeratingWithState:&v15 objects:v20 count:16];
      }
      while (v4);
    }
  }
  if (a2)
  {
    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    id v7 = a2;
    v8 = (char *)[v7 countByEnumeratingWithState:&v11 objects:v19 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v12;
      do
      {
        v10 = 0;
        do
        {
          if (*(void *)v12 != v9) {
            objc_enumerationMutation(v7);
          }
          _CFPreferencesSetValueWithContainer();
          ++v10;
        }
        while (v8 != v10);
        v8 = (char *)[v7 countByEnumeratingWithState:&v11 objects:v19 count:16];
      }
      while (v8);
    }
  }
}

void sub_3F28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_445C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19)
{
  _Unwind_Resume(a1);
}

BOOL sub_453C(id a1, NSURL *a2, NSError *a3)
{
  id v4 = a2;
  uint64_t v5 = a3;
  v6 = +[MobileMailMigrator log];
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    id v7 = [(NSURL *)v4 path];
    v8 = [(NSError *)v5 ef_publicDescription];
    sub_4FA4(v7, v8, v10, v6);
  }

  return 1;
}

void sub_4608(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_478C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_4DC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_4F4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_4F7C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

void sub_4FA4(void *a1, void *a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412546;
  *(void *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2114;
  *(void *)(buf + 14) = a2;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Error while enumerating attachment placeholder file '%@': %{public}@", buf, 0x16u);
}

void sub_5014()
{
  sub_4F98();
  _os_log_error_impl(&dword_0, v0, OS_LOG_TYPE_ERROR, "Setting remoteContentAlertDate to nil", v1, 2u);
}

void sub_5054()
{
  sub_4F98();
  _os_log_error_impl(&dword_0, v0, OS_LOG_TYPE_ERROR, "Failed to update TCC Service for Ubiquity!", v1, 2u);
}

void sub_5094()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self _migrateInteractionLogSalt]", v2, v3, v4, v5, v6);
}

void sub_50C8()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self _migratePersistentConnection]", v2, v3, v4, v5, v6);
}

void sub_50FC()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self _migrateVIPs]", v2, v3, v4, v5, v6);
}

void sub_5130()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self _removePermanentTags]", v2, v3, v4, v5, v6);
}

void sub_5164()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self removeAutoLaunchFiles]", v2, v3, v4, v5, v6);
}

void sub_5198()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self removeContentIndex]", v2, v3, v4, v5, v6);
}

void sub_51CC()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self migrateAttachmentsProtectionClass]", v2, v3, v4, v5, v6);
}

void sub_5200()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self migrateUserAttachmentScalePeference]", v2, v3, v4, v5, v6);
}

void sub_5234()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self removeOldFormatAutosaveMessages]", v2, v3, v4, v5, v6);
}

void sub_5268()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self migrateAttachmentPlaceholderProtectionClass]", v2, v3, v4, v5, v6);
}

void sub_529C()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [MFMigrationPersistence migrateDatabaseAtPath:[MFMailMessageLibrary defaultPath]]", v2, v3, v4, v5, v6);
}

void sub_52D0()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self migrateUbiquitousKeyValueStoreToContainer]", v2, v3, v4, v5, v6);
}

void sub_5304()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [MFUserDefaultMigrator migratePreferencesToSharedAppGroup]", v2, v3, v4, v5, v6);
}

void sub_5338()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self removeUnusedPreferences]", v2, v3, v4, v5, v6);
}

void sub_536C()
{
  sub_4F98();
  sub_4F7C(&dword_0, v0, v1, "Migration step failed: [self migratePreferencesToContainer]", v2, v3, v4, v5, v6);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return _CFArrayGetCount(theArray);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

CFArrayRef CFPreferencesCopyKeyList(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return _CFPreferencesCopyKeyList(applicationID, userName, hostName);
}

CFDictionaryRef CFPreferencesCopyMultiple(CFArrayRef keysToFetch, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return _CFPreferencesCopyMultiple(keysToFetch, applicationID, userName, hostName);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

uint64_t CPSharedResourcesDirectory()
{
  return _CPSharedResourcesDirectory();
}

uint64_t MFLogGeneral()
{
  return _MFLogGeneral();
}

uint64_t MFMailDirectory()
{
  return _MFMailDirectory();
}

uint64_t MFMobileMailContainerPath()
{
  return _MFMobileMailContainerPath();
}

uint64_t MFMobileMailPreferenceDomain()
{
  return _MFMobileMailPreferenceDomain();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t PCSettingsGetClassPollInterval()
{
  return _PCSettingsGetClassPollInterval();
}

uint64_t PCSettingsSetClassPollInterval()
{
  return _PCSettingsSetClassPollInterval();
}

uint64_t TCCAccessSetForBundleId()
{
  return _TCCAccessSetForBundleId();
}

uint64_t _CFPreferencesCopyValueWithContainer()
{
  return __CFPreferencesCopyValueWithContainer();
}

uint64_t _CFPreferencesSetValueWithContainer()
{
  return __CFPreferencesSetValueWithContainer();
}

uint64_t _CFPreferencesSynchronizeWithContainer()
{
  return __CFPreferencesSynchronizeWithContainer();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_enumerationMutation(id obj)
{
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

int stat(const char *a1, stat *a2)
{
  return _stat(a1, a2);
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return [a1 UTF8String];
}

id objc_msgSend__migrateInteractionLogSalt(void *a1, const char *a2, ...)
{
  return [a1 _migrateInteractionLogSalt];
}

id objc_msgSend__migrateLoadRemoteContentDefault(void *a1, const char *a2, ...)
{
  return [a1 _migrateLoadRemoteContentDefault];
}

id objc_msgSend__migratePersistentConnection(void *a1, const char *a2, ...)
{
  return [a1 _migratePersistentConnection];
}

id objc_msgSend__migrateTCCServiceUbiquity(void *a1, const char *a2, ...)
{
  return [a1 _migrateTCCServiceUbiquity];
}

id objc_msgSend__migrateVIPs(void *a1, const char *a2, ...)
{
  return [a1 _migrateVIPs];
}

id objc_msgSend__removePermanentTags(void *a1, const char *a2, ...)
{
  return [a1 _removePermanentTags];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return [a1 BOOLValue];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return [a1 currentCalendar];
}

id objc_msgSend_currentVersion(void *a1, const char *a2, ...)
{
  return [a1 currentVersion];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return [a1 date];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return [a1 defaultManager];
}

id objc_msgSend_defaultPath(void *a1, const char *a2, ...)
{
  return [a1 defaultPath];
}

id objc_msgSend_depthFirstEnumerator(void *a1, const char *a2, ...)
{
  return [a1 depthFirstEnumerator];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return [a1 dictionary];
}

id objc_msgSend_extraAttributes(void *a1, const char *a2, ...)
{
  return [a1 extraAttributes];
}

id objc_msgSend_fileAttributes(void *a1, const char *a2, ...)
{
  return [a1 fileAttributes];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return [a1 fileSystemRepresentation];
}

id objc_msgSend_fullPath(void *a1, const char *a2, ...)
{
  return [a1 fullPath];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return [a1 integerValue];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return [a1 length];
}

id objc_msgSend_log(void *a1, const char *a2, ...)
{
  return [a1 log];
}

id objc_msgSend_mailAccounts(void *a1, const char *a2, ...)
{
  return [a1 mailAccounts];
}

id objc_msgSend_mailDataDirectory(void *a1, const char *a2, ...)
{
  return [a1 mailDataDirectory];
}

id objc_msgSend_mailboxCachePath(void *a1, const char *a2, ...)
{
  return [a1 mailboxCachePath];
}

id objc_msgSend_migrateAccessClass(void *a1, const char *a2, ...)
{
  return [a1 migrateAccessClass];
}

id objc_msgSend_migrateAttachmentPlaceholderProtectionClass(void *a1, const char *a2, ...)
{
  return [a1 migrateAttachmentPlaceholderProtectionClass];
}

id objc_msgSend_migrateAttachmentsProtectionClass(void *a1, const char *a2, ...)
{
  return [a1 migrateAttachmentsProtectionClass];
}

id objc_msgSend_migratePreferencesToContainer(void *a1, const char *a2, ...)
{
  return [a1 migratePreferencesToContainer];
}

id objc_msgSend_migratePreferencesToSharedAppGroup(void *a1, const char *a2, ...)
{
  return [a1 migratePreferencesToSharedAppGroup];
}

id objc_msgSend_migrateUbiquitousKeyValueStoreToContainer(void *a1, const char *a2, ...)
{
  return [a1 migrateUbiquitousKeyValueStoreToContainer];
}

id objc_msgSend_migrateUserAttachmentScalePeference(void *a1, const char *a2, ...)
{
  return [a1 migrateUserAttachmentScalePeference];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return [a1 mutableCopy];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return [a1 path];
}

id objc_msgSend_placeholderDirectory(void *a1, const char *a2, ...)
{
  return [a1 placeholderDirectory];
}

id objc_msgSend_removeAutoLaunchFiles(void *a1, const char *a2, ...)
{
  return [a1 removeAutoLaunchFiles];
}

id objc_msgSend_removeContentIndex(void *a1, const char *a2, ...)
{
  return [a1 removeContentIndex];
}

id objc_msgSend_removeOldFormatAutosaveMessages(void *a1, const char *a2, ...)
{
  return [a1 removeOldFormatAutosaveMessages];
}

id objc_msgSend_removeUnusedPreferences(void *a1, const char *a2, ...)
{
  return [a1 removeUnusedPreferences];
}

id objc_msgSend_rootMailbox(void *a1, const char *a2, ...)
{
  return [a1 rootMailbox];
}

id objc_msgSend_saltProviderFromKeyChain(void *a1, const char *a2, ...)
{
  return [a1 saltProviderFromKeyChain];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return [a1 standardUserDefaults];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedIntegerValue];
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "writeToURL:options:error:");
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 v10.st_mtimespec = v4;
  v10.st_ctimespec = v4;
  *(timespec *)&v10.st_uid = v4;
  v10.st_atimespec = v4;
  *(timespec *)&v10.st_dev = v4;
  uint64_t v5 = v3;
  if (stat((const char *)objc_msgSend(v5, "fileSystemRepresentation", *(_OWORD *)&v10.st_dev, *(_OWORD *)&v10.st_uid, *(_OWORD *)&v10.st_atimespec, *(_OWORD *)&v10.st_mtimespec, *(_OWORD *)&v10.st_ctimespec, *(_OWORD *)&v10.st_birthtimespec), &v10))
  {
    id v7 = 0.0;
  }
  else
  {
    uint8_t v6 = (double)v10.st_size * 0.0000163281591;
    id v7 = v6;
  }
  v8 = MFLogGeneral();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    long long v12 = v7;
    _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "estimated duration: %f", buf, 0xCu);
  }

  return v7;
}

- (float)migrationProgress
{
  return -1.0;
}

@end