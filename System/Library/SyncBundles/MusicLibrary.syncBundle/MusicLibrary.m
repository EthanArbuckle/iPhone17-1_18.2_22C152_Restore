void *sub_22F4(void *result)
{
  *result = ++qword_A4AC0;
  return result;
}

uint64_t sub_2310(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  NDR_record_t v34 = NDR_record;
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = *(_DWORD *)&v34.mig_vers;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_256C(mach_port_t a1, unsigned int a2, long long *a3)
{
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  NDR_record_t v13 = NDR_record;
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_26FC(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  NDR_record_t v22 = NDR_record;
  *(_DWORD *)long long v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_28EC(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_2A68(uint64_t a1)
{
  uint64_t v1 = (uint64_t)*(&off_99820
                + ((-19 * ((qword_A39F8 - dword_A4570) ^ 0xED)) ^ byte_7ACD0[byte_77D70[(-19 * ((qword_A39F8 - dword_A4570) ^ 0xED))] ^ 0xAF])
                - 17);
  uint64_t v2 = *(void *)(v1 - 4);
  v3 = *(&off_99820
       + (byte_7ACD0[byte_77D7C[(-19 * ((qword_A39F8 + v2) ^ 0xED)) - 12] ^ 0xFA] ^ (-19 * ((qword_A39F8 + v2) ^ 0xED)))
       - 155);
  unint64_t v4 = v2 ^ (unint64_t)&v6 ^ *v3;
  *(void *)(v1 - 4) = 1469428717 * v4 - 0x13BC45BED9160A13;
  void *v3 = 1469428717 * (v4 ^ 0xEC43BA4126E9F5EDLL);
  unsigned int v8 = 1734 - 535753261 * (((&v7 | 0x243DADCF) - (&v7 & 0x243DADCF)) ^ 0x2EC9A3E0);
  uint64_t v7 = a1;
  LOBYTE(v3) = -19 * ((*(_DWORD *)v3 - *(_DWORD *)(v1 - 4)) ^ 0xED);
  (*(void (**)(uint64_t *))((char *)*(&off_99820
                                              + ((-19 * (dword_A4570 ^ 0xED ^ qword_A39F8)) ^ byte_7AAD0[byte_77C70[(-19 * (dword_A4570 ^ 0xED ^ qword_A39F8))] ^ 0x33])
                                              - 98)
                                    + 8
                                    * (byte_77F78[(byte_84240[v3] ^ 0x3C)
                                                                               - 8] ^ v3)
                                    + 16356))(&v7);
  return v9;
}

uint64_t sub_2C60(unsigned int a1)
{
  return byte_7AAD4[(byte_77C7C[a1 - 12] ^ 0xCB) - 4] ^ a1;
}

uint64_t sub_2C90(char a1, unsigned int a2)
{
  return byte_7ACD0[(byte_77D7C[a2 - 12] ^ a1)] ^ a2;
}

uint64_t sub_2CBC(unsigned int a1)
{
  return byte_80550[byte_7ADD4[a1 - 4] ^ 0xA3] ^ a1;
}

uint64_t sub_2CE8(char a1, unsigned int a2)
{
  return byte_77F78[(byte_84240[a2] ^ a1) - 8] ^ a2;
}

uint64_t sub_2D14(unsigned int a1)
{
  return byte_7ACD0[byte_77D7C[a1 - 12] ^ 0xFA] ^ a1;
}

uint64_t sub_2D40(unsigned int a1)
{
  return byte_7AAD4[(byte_77C7C[a1 - 12] ^ 0x33) - 4] ^ a1;
}

uint64_t sub_2D70(unsigned int a1)
{
  return byte_77E74[(byte_8414C[a1 - 12] ^ 0xD1) - 4] ^ a1;
}

uint64_t sub_2DA0(unsigned int a1)
{
  return byte_80454[(byte_7ABD0[a1] ^ 0x1E) - 4] ^ a1;
}

uint64_t sub_2DCC(uint64_t a1)
{
  uint64_t v1 = (uint64_t)*(&off_99820
                + (byte_80550[byte_7ADD4[(-19 * ((qword_A39F8 + dword_A4550) ^ 0xED))
                                                        - 4] ^ 0x35] ^ (-19 * ((qword_A39F8 + dword_A4550) ^ 0xED)))
                - 51);
  uint64_t v2 = *(void *)(v1 - 4);
  v3 = *(&off_99820
       + (byte_7ACD0[byte_77D7C[(-19 * ((qword_A39F8 + v2) ^ 0xED)) - 12] ^ 0xFA] ^ (-19 * ((qword_A39F8 + v2) ^ 0xED)))
       - 155);
  unint64_t v4 = (*v3 - v2) ^ (unint64_t)&v6;
  *(void *)(v1 - 4) = 1469428717 * v4 + 0x13BC45BED9160A13;
  void *v3 = 1469428717 * (v4 ^ 0xEC43BA4126E9F5EDLL);
  uint64_t v8 = a1;
  unsigned int v7 = 235795823 * ((&v7 & 0x7E4C88B4 | ~(&v7 | 0x7E4C88B4)) ^ 0x151E3E12) + 336;
  LOBYTE(v3) = -19 * ((*(_DWORD *)v3 - *(_DWORD *)(v1 - 4)) ^ 0xED);
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_99820
                                                             + ((-19
                                                                                              * (dword_A4550 ^ 0xED ^ qword_A39F8)) ^ byte_7AAD0[byte_77C70[(-19 * (dword_A4550 ^ 0xED ^ qword_A39F8))] ^ 0x69])
                                                             + 66)
                                                   + 8
                                                   * (byte_7AAD4[(byte_77C7C[v3 - 12] ^ 0xCB)
                                                                                              - 4] ^ v3)
                                                   + 16140))(&v7);
}

uint64_t sub_2FC0(char a1, unsigned int a2)
{
  return byte_80454[(byte_7ABD0[a2] ^ a1) - 4] ^ a2;
}

uint64_t sub_2FEC(unsigned int a1)
{
  return byte_7ACD0[byte_77D7C[a1 - 12] ^ 0xCE] ^ a1;
}

uint64_t sub_3018(char a1, unsigned int a2)
{
  return byte_77E74[(byte_8414C[a2 - 12] ^ a1) - 4] ^ a2;
}

uint64_t sub_3044(unsigned int a1)
{
  return byte_77F78[(byte_84240[a1] ^ 0x3D) - 8] ^ a1;
}

uint64_t sub_3074(unsigned int a1)
{
  return byte_77E74[(byte_8414C[a1 - 12] ^ 0x7E) - 4] ^ a1;
}

uint64_t sub_30A0(unsigned int a1)
{
  return byte_7ACD0[byte_77D7C[a1 - 12] ^ 0xA3] ^ a1;
}

uint64_t sub_30CC(unsigned int a1)
{
  return byte_7AAD4[(byte_77C7C[a1 - 12] ^ 0x69) - 4] ^ a1;
}

uint64_t sub_30FC(uint64_t a1)
{
  uint64_t v1 = (unint64_t *)*(&off_99820
                           + ((-19 * ((qword_A39F8 - dword_A39A0) ^ 0xED)) ^ byte_7AAD0[byte_77C70[(-19 * ((qword_A39F8 - dword_A39A0) ^ 0xED))] ^ 0x69])
                           - 57);
  unsigned __int8 v2 = -19 * ((qword_A39F8 + *v1) ^ 0xED);
  v3 = (unint64_t *)*(&off_99820
                           + (byte_7ACD0[byte_77D7C[v2 - 12] ^ 0xA3] ^ v2)
                           + 9);
  unint64_t v4 = 1469428717 * ((*v3 - *v1) ^ (unint64_t)&v6 ^ 0xEC43BA4126E9F5EDLL);
  *uint64_t v1 = v4;
  unint64_t *v3 = v4;
  unsigned int v7 = 1078 - 1734042137 * ((2 * (&v7 & 0x23947D68) - &v7 + 1550549653) ^ 0xA541D8);
  uint64_t v8 = a1;
  LOBYTE(v3) = -19 * (*(_DWORD *)v1 ^ 0xED ^ *(_DWORD *)v3);
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_99820
                                                             + ((-19
                                                                                * ((qword_A39F8 + dword_A39A0) ^ 0xED)) ^ byte_80450[byte_7ABD0[(-19 * ((qword_A39F8 + dword_A39A0) ^ 0xED))] ^ 0xD1])
                                                             - 83)
                                                   + 8
                                                   * (byte_77F78[(byte_84240[v3] ^ 0x3D)
                                                                                              - 8] ^ v3)
                                                   + 17140))(&v7);
}

uint64_t sub_32F4(char a1, unsigned int a2)
{
  return byte_7AAD4[(byte_77C7C[a2 - 12] ^ a1) - 4] ^ a2;
}

uint64_t sub_3320(unsigned int a1)
{
  return byte_80454[(byte_7ABD0[a1] ^ 0xD1) - 4] ^ a1;
}

uint64_t sub_3350(char a1, unsigned int a2)
{
  return byte_80550[(byte_7ADD4[a2 - 4] ^ a1)] ^ a2;
}

uint64_t sub_337C(unsigned int a1)
{
  return byte_77E74[(byte_8414C[a1 - 12] ^ 0xC3) - 4] ^ a1;
}

uint64_t sub_33AC(unsigned int a1)
{
  return byte_7AAD4[(byte_77C7C[a1 - 12] ^ 0x3E) - 4] ^ a1;
}

uint64_t sub_33D8(unsigned int a1)
{
  return byte_7ACD0[byte_77D7C[a1 - 12] ^ 0xAF] ^ a1;
}

uint64_t sub_3404(unsigned int a1)
{
  return byte_77F78[(byte_84240[a1] ^ 0x3C) - 8] ^ a1;
}

uint64_t sub_3430(unsigned int a1)
{
  return byte_80550[byte_7ADD4[a1 - 4] ^ 0x35] ^ a1;
}

uint64_t sub_345C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x67843F9A1244BAC7) - 1611802106;
  int v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x67843F9A1244BAC7) - 1611802106;
  int v4 = (v2 < 1907881794) ^ (v3 < 1907881794);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v6 = v2 < 1907881794;
  }
  else {
    BOOL v6 = v5;
  }
  int v1 = *(_DWORD *)a1 ^ (1374699841 * ((((2 * a1) | 0x4FD35BAC) - a1 + 1477857834) ^ 0xCA1DB5DF));
  return (*(uint64_t (**)(void))((char *)*(&off_99820 + (v1 ^ 0x4B2))
                              + 8 * ((!v6 * (((v1 - 816017451) & 0x30A36FE2) - 888)) ^ v1)
                              - 4))();
}

void sub_354C(_DWORD *a1)
{
  unsigned int v1 = *a1 + 628203409 * ((-2 - ((~a1 | 0x96C77CC6) + (a1 | 0x69388339))) ^ 0x144F70F5);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_3634@<X0>(uint64_t a1@<X4>, int a2@<W8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>, int8x16_t a5@<Q4>, int8x16_t a6@<Q5>, int8x16_t a7@<Q6>, int32x4_t a8@<Q7>)
{
  a4.i64[0] = *(void *)(v9 + 4);
  a4.i32[2] = *(_DWORD *)(v9 + 12);
  int8x16_t v15 = vextq_s8(a3, a4, 0xCuLL);
  int8x16_t v16 = a4;
  v16.i32[3] = *(_DWORD *)(v9 + 16);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a5), vandq_s8(v15, v14)), 1uLL), a6);
  v18.i32[0] = *(_DWORD *)(a1 + 4 * (*(_DWORD *)(v9 + 4) & 1));
  v18.i32[1] = *(_DWORD *)(a1 + 4 * (*(_DWORD *)(v9 + 8) & ((a2 ^ v10) - 439)));
  v18.i32[2] = *(_DWORD *)(a1 + 4 * (*(_DWORD *)(v9 + 12) & 1));
  v18.i32[3] = *(_DWORD *)(a1 + 4 * (v16.i8[12] & 1));
  *(int8x16_t *)uint64_t v9 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v9 - 908), v18), v13), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), a7)), a8));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v8 == 4) * v11) ^ a2)))();
}

uint64_t sub_3640@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v7 = ((153 * (a1 ^ 0x29C)) ^ (v4 + 128)) + v5;
  *(unsigned char *)(a2 + v7) = *(unsigned char *)(v2 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((1844 * (v5 - 1 == v3)) ^ (a1 - 328))))();
}

uint64_t sub_368C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((54 * (a7 ^ 0x2F7) - 249) | 0x30) - 168) * (v8 != 0)) ^ a7)))();
}

uint64_t sub_36C4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v2 == 0) ^ (v0 - 52)) & 1)
                                * (((v0 - 2067077236) & 0x3B3517FF) - 480)) ^ v0)))();
}

uint64_t sub_3708()
{
  ++*(_DWORD *)(v2 + 52);
  STACK[0x468] = v1 + ((v0 - 465) | 0x28u) - 2543;
  LODWORD(STACK[0x5B4]) = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((39 * (STACK[0x420] == 0)) | v0)))();
}

uint64_t sub_3758@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((945 * (a1 + 1 == v3 + 4)) ^ v1)))();
}

uint64_t sub_3820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unint64_t a25)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26
                                                                       + 8
                                                                       * (((a25 < (unint64_t)((v25 - 244) | 0x321u)
                                                                                - 942)
                                                                         * ((v25 - 1605990425) & 0x5FB977BE ^ 0x122)) ^ v25)))(a1, a2, a3, v27);
}

uint64_t sub_3878()
{
  unint64_t v3 = v1 - 1397079334;
  if (v3 <= 0x38) {
    unint64_t v3 = 56;
  }
  int v4 = v3 - v1 + ((v0 - 668459672) | 0x60589C0u) + ((v0 - 1015) | 0x102u) - 2330457226 < 8;
  return (*(uint64_t (**)(void))(v2 + 8 * (((32 * v4) | (v4 << 6)) ^ v0)))();
}

uint64_t sub_38F4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v4 + ((181 * (a3 ^ 0x191)) ^ 0x381) == 32)
                                     * (((181 * (a3 ^ 0x191) + 2027898454) & 0x8720B7B4) + 1099)) ^ (181 * (a3 ^ 0x191)))))();
}

void sub_394C(int a1@<W8>)
{
  *(void *)(v4 - 0x102FB98998D77CDDLL) = *v2;
  *(_DWORD *)(v5 - 0x27EFF0CD9F36B463) = a1;
  *uint64_t v2 = 0;
  *(void *)(v8 - 0x7761D79CB8DF4D0BLL) = 0x51089CEA51089CEALL;
  _DWORD *v3 = 277809779;
  *(_DWORD *)(v8 - 0x7761D79CB8DF4CFFLL) = ((*(_DWORD *)(v8 - 0x7761D79CB8DF4CFFLL) & 0xFFFFFFFE ^ 0x776CBDFA | v1 ^ 0xC22BA866)
                                          - (*(_DWORD *)(v8 - 0x7761D79CB8DF4CFFLL) & 0xFFFFFFFE ^ 0x776CBDFA | 0x3DD457F1)
                                          + 1037326321) ^ 0xB54715F4;
  *(_DWORD *)(v7 + 48) = *v6;
}

uint64_t sub_3A64(double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int8x16_t a15, int32x4_t a16, int8x16_t a17, int8x16_t a18, int8x16_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int8x16_t v28 = (int8x16_t)vld1q_dup_f32((const float *)v27);
  v29.i64[0] = 0x8000000080000000;
  v29.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(v27 + 4);
  a2.i32[2] = *(_DWORD *)(v27 + 12);
  int8x16_t v30 = vextq_s8(v28, a2, 0xCuLL);
  int8x16_t v31 = a2;
  v31.i32[3] = *(_DWORD *)(v27 + 16);
  int32x4_t v32 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v31, a19), vandq_s8(v30, v29)), 1uLL), a18);
  v33.i32[0] = *(_DWORD *)(v26 + 4 * (*(_DWORD *)(v27 + 4) & 1));
  v33.i32[1] = *(_DWORD *)(v26 + 4 * (*(_DWORD *)(v27 + 8) & 1));
  v33.i32[2] = *(_DWORD *)(v26 + 4 * (*(_DWORD *)(v27 + 12) & 1));
  v33.i32[3] = *(_DWORD *)(v26 + 4 * (v31.i8[12] & 1));
  *(int8x16_t *)uint64_t v27 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v27 + 1588), v33), a15), (int8x16_t)vaddq_s32(vsubq_s32(v32, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v32, v32), a17)), a16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 11304))(1460018998, a25, 1345627118, 23, 3052433383, 1281);
}

uint64_t sub_3A78()
{
  LODWORD(STACK[0x3C8]) = v1;
  int v6 = v0 ^ 0x6A3;
  STACK[0x1918] = 0xF81F920D611722D2;
  LODWORD(STACK[0x43C]) = **(_DWORD **)(v3 + 8 * ((v0 ^ 0x6A3) - 1200)) - 24759838;
  uint64_t v7 = **(unsigned int **)(v3 + 8 * ((v0 ^ 0x6A3) - 1338));
  uint64_t v8 = 1224239923 * ((v2 + 0x1A450EEF0D1ADC24 - 2 * (v2 & 0x1A450EEF0D1ADC24)) ^ 0x321FBB86FFA921F3);
  int v9 = v6 - 1518280087 + v8;
  *(_DWORD *)(v5 - 160) = ((v6 - 1518280087) & 0xE5E6FF82) + v8;
  *(_DWORD *)(v5 - 156) = v9;
  *(_DWORD *)(v5 - 188) = v9 + 35;
  *(void *)(v5 - 184) = v7 ^ v8;
  *(void *)(v5 - 176) = v8 ^ 0x5A748A2C;
  *(_DWORD *)(v5 - 168) = v8 + v6 - 1501687204;
  *(_DWORD *)(v5 - 164) = -1224239923 * ((v2 + 219864100 - 2 * (v2 & 0xD1ADC24)) ^ 0xFFA921F3);
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v6 + 812)))(v5 - 192);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v5 - 192)))(v10);
}

uint64_t sub_3B88()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((218
                                * ((((v0 + 1102) < 0x7FFFFFFF) ^ (93 * (v1 ^ 0x4C))) & 1)) ^ v1)))();
}

uint64_t sub_3BC8(int a1)
{
  return sub_13488(a1);
}

uint64_t sub_3BD8(uint64_t a1)
{
  int v5 = (v1 + 1338) ^ 0x98;
  *uint64_t v8 = a1;
  *int v9 = (v1 + 1338) ^ (v2 - 1663) ^ v12;
  int v6 = (v5 - 1722541643) & 0x66ABE67B;
  uint64_t v15 = v11;
  unsigned int v14 = v5 + (((v13 | 0x72FB31C9) + (~v13 | 0x8D04CE36)) ^ 0x780F3FE7) * v4 + 470;
  (*(void (**)(unsigned char *))(v3 + 8 * (v5 + 546)))(v13);
  uint64_t v15 = v10;
  unsigned int v14 = v6 + (v13 ^ 0xAF40E2F) * v4 + 421;
  (*(void (**)(unsigned char *))(v3 + 8 * (v6 ^ 0xE71)))(v13);
  return v2 ^ 0xAE215E86;
}

void sub_3CF4()
{
  *(_DWORD *)(v1 + 8) = v0 - 4;
}

uint64_t sub_3CFC@<X0>(unsigned int a1@<W8>)
{
  uint64_t v8 = v2 - 1;
  *(unsigned char *)(v5 + v8) = ((v1 + 116) ^ v4) * (v1 - 123);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v3 ^ (v8 == 0)) & 1) * v6) ^ a1)))();
}

uint64_t sub_3D04(int a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * (((((~a19 + v20 - (unint64_t)(v19 + a1) < 0x10) ^ (v21 - a5 + 39)) & 1)
                                * (v21 - 1409)) | v21)))();
}

uint64_t sub_3D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v69 = *(unsigned __int8 *)(v67 - 0x843828D0CDF33CDLL) ^ 0xCE;
  if (v69 == 1)
  {
    unsigned int v72 = 3 * a52;
    unsigned int v77 = *(_DWORD *)(v67 - 0x843828D0CDF33E9);
    *(unsigned char *)(v67 - 0x843828D0CDF33F5) = ((8 * v77) ^ 0x78) - ((3 * a52 - 100) & (2 * ((8 * v77) ^ 0x78))) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F4) = ((v77 >> 5) ^ 0x6A) + (~(2 * ((v77 >> 5) ^ 0x6A)) | 0x35) - 26;
    char v76 = -54;
    *(unsigned char *)(v67 - 0x843828D0CDF33F3) = ((v77 >> 13) ^ 0x79) - ((2 * ((v77 >> 13) ^ 0x79)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F2) = ((v77 >> 21) ^ 0x71)
                                          - 2 * (((v77 >> 21) ^ 0x71) & 0x6D ^ (v77 >> 21) & 8)
                                          - 27;
    unsigned int v78 = *(_DWORD *)(v67 - 0x843828D0CDF33EDLL);
    HIDWORD(v79) = v78 ^ 0x12;
    LODWORD(v79) = v77 ^ 0xC0000000;
    *(unsigned char *)(v67 - 0x843828D0CDF33F1) = (v79 >> 29) - ((2 * (v79 >> 29)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F0) = ((v78 >> 5) ^ 0x7F) - ((2 * ((v78 >> 5) ^ 0x7F)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33EFLL) = ((v78 >> 13) ^ 0xC0)
                                          + ~(2 * (((v78 >> 13) ^ 0xC0) & 0x6D ^ (v78 >> 13) & 8))
                                          - 26;
    unsigned int v75 = (v78 >> 21) ^ 0xFFFFFF94;
  }
  else
  {
    unsigned int v70 = STACK[0x3FC];
    if (v69 != 2) {
      goto LABEL_6;
    }
    unsigned int v71 = *(_DWORD *)(v67 - 0x843828D0CDF33EDLL);
    unsigned int v72 = a51 & 0xC27673E4;
    unsigned int v73 = *(_DWORD *)(v67 - 0x843828D0CDF33E9);
    HIDWORD(v74) = v71 ^ 0x12;
    LODWORD(v74) = v73 ^ 0xC0000000;
    *(unsigned char *)(v67 - 0x843828D0CDF33F5) = ((v71 >> 21) ^ 0x94)
                                          + (a51 & 0xE4 ^ 0xC1)
                                          - 2 * (((v71 >> 21) ^ 0x94) & 0xE7 ^ (v71 >> 21) & 2);
    *(unsigned char *)(v67 - 0x843828D0CDF33F4) = ((v71 >> 13) ^ 0xC0) - ((2 * ((v71 >> 13) ^ 0xC0)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F3) = ((v71 >> 5) ^ 0x7F) - ((2 * ((v71 >> 5) ^ 0x7F)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F2) = (v74 >> 29) - ((2 * (v74 >> 29)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F1) = ((v73 >> 21) ^ 0x71) - ((2 * ((v73 >> 21) ^ 0x71)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F0) = ((v73 >> 13) ^ 0x79) - ((2 * ((v73 >> 13) ^ 0x79)) & 0xCA) - 27;
    LOBYTE(v75) = (8 * v73) ^ 0x78;
    char v76 = -64;
    *(unsigned char *)(v67 - 0x843828D0CDF33EFLL) = ((v73 >> 5) ^ 0x6A) - ((2 * ((v73 >> 5) ^ 0x6A)) & 0xCA) - 27;
  }
  unsigned int v70 = (v72 + 1026429521) & 0xC2D1EFDA;
  *(unsigned char *)(v67 - 0x843828D0CDF33EELL) = v75 + v70 - (v76 & (2 * v75)) - 107;
LABEL_6:
  STACK[0x5B8] = *(void *)(v68 + 8 * (int)(v70 - 1348));
  STACK[0x638] = v67;
  STACK[0x640] = v67 - 0x843828D0CDF342DLL;
  unint64_t v80 = STACK[0x468];
  v81 = (char *)&a9 + STACK[0x468] - 0x2CDB5D806DA9DF9DLL;
  STACK[0x648] = (unint64_t)v81;
  STACK[0x468] = v80 + 320;
  int v82 = *(_DWORD *)(v67 - 0x843828D0CDF33E5);
  LODWORD(STACK[0x404]) = v82;
  int v83 = *(_DWORD *)(v67 - 0x843828D0CDF33E1);
  LODWORD(STACK[0x418]) = v83;
  int v84 = *(_DWORD *)(v67 - 0x843828D0CDF33DDLL);
  LODWORD(STACK[0x4A4]) = v84;
  int v85 = *(_DWORD *)(v67 - 0x843828D0CDF33D9);
  LODWORD(STACK[0x504]) = v85;
  int v86 = *(unsigned __int8 *)(v67 - 0x843828D0CDF33CDLL) ^ 0xCE;
  if (v86 == 2)
  {
    int v91 = LODWORD(STACK[0x3FC]) ^ 0x49F;
    LODWORD(STACK[0x41C]) = *(_DWORD *)(v67 - 0x843828D0CDF33D5);
    LODWORD(STACK[0x54C]) = 213328488;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v68
                                                       + 8
                                                       * ((26 * (193 * (v91 ^ 0x1C9) + ((v91 - 439) | 2) == 1120)) ^ v91)))(110757599, 42);
  }
  else if (v86 == 1)
  {
    int v87 = LODWORD(STACK[0x3FC]) + 90;
    LODWORD(STACK[0x54C]) = v66;
    BOOL v89 = v67 - 0x843828D0CDF342DLL >= a66 + v80 || (unint64_t)v81 >= v67 - 0x843828D0CDF33EDLL;
    return (*(uint64_t (**)(void))(v68 + 8 * (((LODWORD(STACK[0x334]) - 482) * v89) ^ v87)))();
  }
  else
  {
    int v92 = (*(_DWORD *)(v67 - 0x843828D0CDF33E5) ^ 0x522D736A) + (v82 ^ 0x522D736A);
    *(_DWORD *)(v67 - 0x843828D0CDF33E5) = v92 + 1378710378 - ((2 * v92) & 0xA45AE6D4);
    int v93 = (*(_DWORD *)(v67 - 0x843828D0CDF33E1) ^ 0x522D736A) + (v83 ^ 0x522D736A);
    *(_DWORD *)(v67 - 0x843828D0CDF33E1) = v93 + 1378710378 - ((2 * v93) & 0xA45AE6D4);
    int v94 = (*(_DWORD *)(v67 - 0x843828D0CDF33DDLL) ^ 0x522D736A) + (v84 ^ 0x522D736A);
    *(_DWORD *)(v67 - 0x843828D0CDF33DDLL) = v94 + 1378710378 - ((2 * v94) & 0xA45AE6D4);
    int v95 = (*(_DWORD *)(v67 - 0x843828D0CDF33D9) ^ 0x522D736A) + (v85 ^ 0x522D736A);
    *(_DWORD *)(v67 - 0x843828D0CDF33D9) = v95 + 1378710378 - ((2 * v95) & 0xA45AE6D4);
    STACK[0x468] = v80;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x5B8])(a1, a2, a3, a4, 773938822);
  }
}

uint64_t sub_4540@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X8>)
{
  *(unsigned char *)(a4 + (v6 + a2)) = *(unsigned char *)(v4 + (v6 + a2));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 != a1) * a3) | (v5 - 252))))();
}

uint64_t sub_4574()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((115 * (((4 * v1 - v2 == 625506449) ^ (v0 + 1)) & 1)) ^ v0)))();
}

uint64_t sub_45B8(uint64_t a1)
{
  unsigned int v8 = v5 + v3 + v4 + 1860;
  v9.i64[0] = 0x9494949494949494;
  v9.i64[1] = 0x9494949494949494;
  uint64_t v10 = v1 + v8;
  uint64_t v11 = a1 + v8;
  int8x16_t v12 = vaddq_s8(*(int8x16_t *)(v10 - 31), v9);
  *(int8x16_t *)(v11 - 15) = vaddq_s8(*(int8x16_t *)(v10 - 15), v9);
  *(int8x16_t *)(v11 - 31) = v12;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((v2 & 0xFFFFFFE0) == 32) * (((v6 - 1468664172) & 0x578A0A7D) - 478)) ^ (v6 + 329))))();
}

uint64_t sub_4630@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(*a1 - 0x18DA4F3048EDB6D0) = 0;
  return (*(uint64_t (**)(void))(a2 + 8 * (((*v3 == v2) * (v4 - 762)) ^ v4)))();
}

uint64_t sub_4694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,int a23,unsigned int a24)
{
  unsigned int v25 = (a8 ^ (a8 + 349) ^ 0xD0D80E68) + a21;
  BOOL v26 = v25 < (((a5 + a8 + 1115) | 0xC0) ^ 0x48C795A5u);
  BOOL v27 = v25 > a24;
  if (a24 < 0x48C79377 != v26) {
    BOOL v28 = v26;
  }
  else {
    BOOL v28 = v27;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * ((v28 | (16 * v28)) ^ (a5 + a8 + 1205))))();
}

uint64_t sub_46A0()
{
  int v5 = *(_DWORD *)(v2 + v3 * (uint64_t)v0 + 36) - 514649368;
  BOOL v7 = v5 > -540604939 && v5 < SLODWORD(STACK[0x380]);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 * ((v1 - 1017023355) & 0x3C9E8F58 ^ 0xAA)) ^ v1)))();
}

uint64_t sub_4714(uint64_t a1)
{
  return (*(uint64_t (**)(void))((char *)*(&off_99820 + (int)((*(_DWORD *)a1 - 1225351577 * (a1 ^ 0x239AD816)) ^ 0x8AE))
                              + 8
                              * (int)(((*(void *)(a1 + 8) == 0x7761D79CB8DF4D13)
                                     * (((*(_DWORD *)a1 - 1225351577 * (a1 ^ 0x239AD816) - 372351934) & 0x16319FF7)
                                      - 1128)) | (*(_DWORD *)a1 - 1225351577 * (a1 ^ 0x239AD816)))
                              - 4))();
}

uint64_t sub_47A0()
{
  BOOL v4 = v2 + 1203445623 < (v1 - 1881140751);
  if ((v2 + 1203445623) < 0xDC6EDB61 != v1 - 1881140751 < (v0 - 596714809)) {
    BOOL v4 = v1 - 1881140751 < (v0 - 596714809);
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((54 * !v4) ^ v0)))();
}

uint64_t sub_4810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25)
{
  *(void *)(v28 - 128) = a22;
  *(void *)(v28 - 120) = a25;
  *(_DWORD *)(v28 - 104) = (v27 + 1584) ^ (((((2 * ((v28 - 144) ^ 0x4CC07973)) | 0xC27ADE42)
                                           - ((v28 - 144) ^ 0x4CC07973)
                                           - 1631416097) ^ 0x9E80A606)
                                         * v25);
  *(void *)(v28 - 112) = a25;
  *(void *)(v28 - 144) = a21;
  *(void *)(v28 - 136) = a9;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v27 ^ 0x9A8)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((46
                                              * (((((v27 ^ 0x2BB) + 139) ^ ((a24 - 584148098) < 0x7FFFFFFF)) & 1) == 0)) ^ (v27 + 956))))(v29);
}

uint64_t sub_48E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v27 - 120) = v23;
  *(void *)(v27 - 112) = a23;
  *(_DWORD *)(v27 - 104) = v25
                         + 1759421093 * (((~(v27 - 120) & 0x6C5869DC) - (~(v27 - 120) | 0x6C5869DD)) ^ 0xDF25D989)
                         + 1481;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v25 ^ 0xA22)))(v27 - 120);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((v26 == ((v25 + 331) ^ 0x26469F59))
                                              * (((v25 - 2014397009) & 0x7811439B) + 746)) ^ v25)))(v28);
}

uint64_t sub_4998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,_DWORD *a34)
{
  *a34 ^= a33;
  return (*(uint64_t (**)(void))(v35
                              + 8
                              * (int)(((((((v34 - 495) | 0x81) - 1988964409) | 0x30892C03) ^ 0xB9FBFEAD)
                                     * (v36 == 2137013033)) ^ ((v34 - 495) | 0x81))))();
}

uint64_t sub_4A28@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((588 * (a2 == v4 + (a1 ^ (a1 + 179)) + 165 - 410)) ^ (a1 + v2))))();
}

uint64_t sub_4A6C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1331
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                 + ((v2 - 87) ^ (v0 - 200) ^ (*(unsigned __int8 *)(v3 + 2) - 72)) == v0 + v2 - 256 - 287)) ^ v2)))();
}

uint64_t sub_4AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  unint64_t v61 = STACK[0x508];
  int v62 = *(unsigned __int8 *)(STACK[0x508] - 0x843828D0CDF33CDLL) ^ 0xCE;
  if (v62 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60
  }
                                                                                           + 8
                                                                                           * (((*(_DWORD *)(v61 - 0x843828D0CDF33D1) == 1321801015)
                                                                                             * (a52 - 175)) ^ (LODWORD(STACK[0x3FC]) + 410))))(a1, a2, a3, 36533098, 2897210627, 3037000498);
  if (v62 == 1)
  {
    BOOL v63 = *(_DWORD *)(v61 - 0x843828D0CDF33D1) == ((LODWORD(STACK[0x3FC]) - 1056) | 0x4B) + 1321800636;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60
                                                                                           + 8
                                                                                           * ((v63 | (16 * v63)) ^ (LODWORD(STACK[0x3FC]) - 201))))(a1, 82, a3, 36533098, 2897210627, 3037000498);
  }
  else
  {
    int v65 = (LODWORD(STACK[0x3FC]) - 1360) | 0x364;
    STACK[0x5A0] = 91;
    *(unsigned char *)(v61 - 0x843828D0CDF33D2) = (a60 ^ 0xBA) * (a60 + 17);
    BOOL v66 = STACK[0x5A0] != ((5 * (v65 ^ 0x274u)) ^ 0x550);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60
                                                                                           + 8
                                                                                           * (((4 * v66) | (8 * v66)) ^ v65)))(1360, 82, a3, 36533098, 2897210627, 3037000498);
  }
}

uint64_t sub_4C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * (int)(((((v5 - 258) | 4)
                                                                                       + ((v5 - 783) ^ 0xFFFFFDAF))
                                                                                      * (v4 > 0xF)) | v5)))(a1, a2, a3, a4, 0);
}

uint64_t sub_4CA8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((314 * ((int)(((a4 + 420) ^ 0xAE35E70D) + v5) >= 0)) ^ a4)))();
}

void sub_4CE4(uint64_t a1)
{
  int v1 = 535753261 * (((a1 | 0x8E29127E) - a1 + (a1 & 0x71D6ED81)) ^ 0x84DD1C51);
  int v2 = *(_DWORD *)(a1 + 12) - v1;
  __asm { BRAA            X15, X17 }
}

void sub_4DBC()
{
  *(_DWORD *)(v0 + 16) = v1 + 1;
}

uint64_t sub_4DF8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v5 = 2 * (a2 ^ 0x52D);
  uint64_t v6 = (v4 + v5 - 452720997);
  BOOL v8 = v2 - 1824920715 > (((v5 - 530) | 0x422) ^ 0x65040C96) || v2 - 1824920715 < (int)v6;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * ((1474 * v8) ^ v5)))(a1, v6);
}

uint64_t sub_4ED0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1734042137 * (((a1 | 0xD7F017E0) - (a1 & 0xD7F017E0)) ^ 0x8B3ED4AD));
  return (*(uint64_t (**)(void))((char *)*(&off_99820 + (v1 ^ 0x5D2))
                              + 8 * (((*(void *)a1 == *(void *)(a1 + 8)) * (v1 ^ 0x557)) ^ v1)
                              - 4))();
}

uint64_t sub_4F4C()
{
  BOOL v5 = v1 < v0;
  if (v5 == v2 - 0x5800F43E018EB52ELL < v0 + (v3 ^ 0x7Bu) - 334) {
    BOOL v5 = v2 - 0x5800F43E018EB52ELL < v1;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((70 * !v5) ^ v3)))();
}

uint64_t sub_4FB4()
{
  STACK[0x350] = v1;
  unsigned int v3 = v0 & 0xAE1C2BF1;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (int)(v3 ^ 0xBBF)))(1576, 3012117910);
  STACK[0x430] = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((v4 == 0) * (v3 ^ 0x6A9 ^ ((v3 - 993) | 0x550))) ^ v3)))();
}

uint64_t sub_5030(uint64_t a1, double a2)
{
  *(double *)(v3 + a1) = a2;
  BOOL v8 = v4 == a1;
  uint64_t v9 = a1 + 8;
  int v10 = v8;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((896 * (v6 & ~(v5 ^ v10))) ^ v2)))(v9);
}

uint64_t sub_5060(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x67843F9A1244BAC7);
  int v4 = v2 - 1372200252;
  BOOL v3 = v2 - 1372200252 < 0;
  int v5 = 1372200252 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = *(_DWORD *)(a1 + 4) - 460628867 * ((a1 & 0x873FB66C | ~(a1 | 0x873FB66C)) ^ 0x3456CBEE) + 287;
  return (*(uint64_t (**)(void))((char *)*(&off_99820 + v1 - 468)
                              + 8
                              * (((v1 + (v5 ^ 0xF3F5FFDF) + ((2 * v5) & 0xE7EBFFBE) + 201981364 < 0x7FFFFFFF)
                                * ((v1 ^ 0x5D7) - 1957)) ^ v1)
                              - 4))();
}

uint64_t sub_5164()
{
  uint64_t v7 = 497 * (v4 ^ 0x7D1u);
  v8.i64[0] = 0xCACACACACACACACALL;
  v8.i64[1] = 0xCACACACACACACACALL;
  v9.i64[0] = 0xE5E5E5E5E5E5E5E5;
  v9.i64[1] = 0xE5E5E5E5E5E5E5E5;
  *(int8x16_t *)(v3 + (v0 & 0x3F) + v1 - 310 + (v7 ^ 0x6E3)) = vaddq_s8(vsubq_s8(*v5, vandq_s8(vaddq_s8(*v5, *v5), v8)), v9);
  BOOL v10 = ((v7 + 0x1FFFFF82CLL) & (v2 + 1)) != 16;
  return (*(uint64_t (**)(void))(v6 + 8 * (v10 | (16 * v10) | v7)))();
}

uint64_t sub_51F4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((26
                                * (((1132050804 << (((v0 ^ 0x32) - 31) ^ 0x13)) & ((23 * (v0 ^ 0x432)) ^ 0xF36FBB07)) == 0x82633260)) ^ v0)))();
}

uint64_t sub_51FC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((45 * (STACK[0x430] != 0)) | (v0 - 1150))))();
}

uint64_t sub_5228(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * ((((v3 + 188) ^ 0x410 ^ ((v3 + 188) | 0x410) ^ 0x3D)
                                                                * (v2 == 0)) ^ v3)))(a1, a2, 1373504863);
}

uint64_t sub_526C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  HIDWORD(v12) = a7 ^ 2;
  LODWORD(v12) = a7 ^ a4;
  return (*(uint64_t (**)(void, uint64_t, void))(v8 + 8 * ((97 * (v7 + 1 == v11 + 40)) ^ a5)))((v12 >> 2) + v10 - (v9 & (2 * (v12 >> 2))), a2, (a5 + 31));
}

uint64_t sub_532C@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  *(_OWORD *)(a3 + (((v4 - 298) ^ (unint64_t)(a1 + 252)) & (a4 + 16))) = *v6;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 16) * a2) ^ v4)))();
}

uint64_t sub_5338@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32)
{
  int v36 = (unsigned __int8 *)(a1 + a2 + v35);
  int v37 = *v36 ^ 0xE5;
  LODWORD(v36) = ((v36[2] ^ 0xE5) << 16) | ((v36[3] ^ 0xE5) << 24) | v37 & 0xFFFF00FF | (((a32 + 119) ^ 0xDA ^ v36[1]) << 8);
  *(_DWORD *)(v34 + ((a2 + v35) & 0xFFFFFFFFFFFFFFFCLL)) = v36
                                                         + v33
                                                         - 2 * (v36 & 0x2E215E97 ^ v37 & 0x11111111);
  return (*(uint64_t (**)(void))(v32 + 8 * ((1467 * ((unint64_t)(a2 + 4 + v35) < 0x40)) ^ a32)))();
}

void sub_53DC(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

void sub_5428(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x330904BA72E93EC0) = v2;
  *(_DWORD *)(v1 + 40) = -1373544826;
}

uint64_t sub_5480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v19 - 128) = (v14 - 528) ^ (((((v19 - 128) | 0x5428CE33) + (~(v19 - 128) | 0xABD731CC)) ^ 0x39DCD63B) * v16);
  *(void *)(v19 - 120) = v18;
  *(void *)(v19 - 112) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 501)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v19 - 124) == v17 + 3107) * ((v14 - 1175) ^ 4)) ^ v14)))(v20);
}

uint64_t sub_5508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  return (*(uint64_t (**)(void))(v32
                              + 8
                              * (((v31 + a31 + (v33 ^ 0x37u) + 35 < 0xFFFFFFFB) * ((v33 ^ 0xF9) - 185)) ^ (v33 + 1869))))();
}

uint64_t sub_5554@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xA4Eu));
  return v3(v1);
}

uint64_t sub_5588@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + (v4 + v3)) = *(unsigned char *)(v2 + (v4 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * (v5 | (((((v5 - 1447) | 1) ^ 0xFFFFFE76) + v4 == a2) << 6))))();
}

uint64_t sub_55C0(uint64_t a1, uint64_t a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, char a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((v8 + a3) & a4 ^ a7) ^ (((((v8 + a3) & a4) + 1165) ^ a8) + v10 == 32)) & 1 ^ (v8 + a3) & a4)))();
}

uint64_t sub_5618(uint64_t a1, unsigned int a2, int a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((82 * (a3 ^ 0x35A) - 766) ^ ((a3 - 580) | 0x4C0)) * (a2 < a5)) ^ a3)))();
}

uint64_t sub_5658()
{
  LODWORD(STACK[0x400]) = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 + 1076) | 0x12) - 295) ^ 0x528) * ((v1 & 0xFFFFFFFC) == 1284426096)) ^ v0)))();
}

uint64_t sub_56A4()
{
  *(_DWORD *)(v5 - 128) = (v4 - 460) ^ (1374699841
                                      * ((~((v5 - 128) | 0xB0449EB5) + ((v5 - 128) & 0xB0449EB5)) ^ 0x224F7943));
  *(void *)(v5 - 120) = v1;
  *(void *)(v5 - 112) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 + 569)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * ((3566 * (*(_DWORD *)(v5 - 124) > (v4 ^ 0x11u) + v2 + v4 + 68)) ^ v4)))(v6);
}

uint64_t sub_5750()
{
  int v6 = 535753261 * ((((v5 - 144) | 0x56A47031) - ((v5 - 144) & 0x56A47031)) ^ 0x5C507E1E);
  *(void *)(v5 - 136) = v3;
  *(_DWORD *)(v5 - 128) = v1 - v6 + 792587581 + v4 - 648;
  *(_DWORD *)(v5 - 144) = v6 + v4 + 574;
  *(void *)(v5 - 120) = v8;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 1029)))(v5 - 144);
  *int v10 = v9;
  *(_DWORD *)(v0 + 64) = -1373544826;
  return result;
}

uint64_t sub_5824(uint64_t a1)
{
  unsigned int v5 = v2 - ((2 * v1 + 1726115104) & 0xF12F46B6) - 1408706070;
  BOOL v6 = (v5 ^ (37 * (v3 ^ 0x68E)) ^ 0x952C1A62) - 2100224 + ((2 * v5) & 0xDB777F3E ^ v3 ^ 0xD1274096) != 1838920607;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * (((2 * v6) | (16 * v6)) ^ v3)))(a1, 71, 2456046688);
}

uint64_t sub_58D4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x1E4u)))();
}

uint64_t sub_59A8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((((v2 + 1969331262) & 0x8A9E603D ^ 0x35) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_59EC@<X0>(int a1@<W8>)
{
  int v4 = v2 ^ 0xE;
  unsigned int v5 = (((v4 - 415) | 2) ^ 0xA1D18DF0) + a1;
  unsigned int v6 = ((v4 + 846655816) & 0xCD890F5F ^ 0x60D03957) + v1;
  int v7 = (v6 < 0xC05F5F60) ^ (v5 < 0xC05F5F60);
  BOOL v8 = v5 < v6;
  if (v7) {
    BOOL v8 = v6 < 0xC05F5F60;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((361 * v8) ^ v4)))();
}

uint64_t sub_5A84()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v0) == v0)
                                * (v3 + 1625)) ^ v3)))();
}

uint64_t sub_5AC8@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v17 = a2 - 2043;
  int v18 = (a2 - 2043) ^ (v13 + 2);
  int v19 = 4 * (v18 ^ 0x210);
  int v20 = 67 * v18;
  int v21 = v15 + v17 + 1824;
  BOOL v22 = a13 + 735634789 < (v16 + 1946015711);
  if (v16 + 1946015711 < (v20 ^ (a1 + 2242)) != a13 + 735634789 < (v19 + a1)) {
    BOOL v22 = v16 + 1946015711 < (v20 ^ (a1 + 2242));
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((111 * v22) ^ v21)))();
}

uint64_t sub_5ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61)
{
  BOOL v67 = *v61 == 229 && LODWORD(STACK[0x618]) == -934990107 && v62 == v64 + 1;
  return (*(uint64_t (**)(void))(v63 + 8 * ((79 * (((a61 ^ v67) & 1) == 0)) ^ (LODWORD(STACK[0x3FC]) + 344))))();
}

uint64_t sub_5B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * (int)(((((23 * (v22 ^ 0xF9)) ^ ((v21 | a21) == 0)) & 1)
                                     * ((v22 + 195979439) & 0xF45196EF ^ 0x5F3)) ^ v22)))();
}

uint64_t sub_5B8C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((2 * (v5 + 1 == v10 + 80)) | (8 * (v5 + 1 == v10 + 80)) | a5)))((__PAIR64__(v6 ^ 2u, v6 ^ a4) >> 2)+ v9- (v8 & (2 * (__PAIR64__(v6 ^ 2u, v6 ^ a4) >> 2))));
}

uint64_t sub_5C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, uint64_t a16, int a17, unsigned int a18, unint64_t *a19)
{
  unsigned int v22 = 1759421093 * ((((2 * &a14) | 0xDA735848) - &a14 - 1832496164) ^ 0xDE441C70);
  a14 = 1036168092 - v22;
  a17 = v22 ^ 0x6E57E88A;
  a18 = v22 + v21 + 2138962573;
  a16 = a12;
  a19 = &STACK[0x4CAF57822185BFA1];
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v20 + 8 * (v21 + 1345)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((a15 == v19) * ((v21 + 463909738) & 0x3FB ^ 0x94A)) ^ v21)))(v23);
}

void sub_5D20(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 535753261 * ((a1 & 0x658A5D69 | ~(a1 | 0x658A5D69)) ^ 0x9081ACB9);
  uint64_t v2 = *(void *)(a1 + 8);
  v4[0] = v1
        + 235795823 * ((-1614712329 - (v4 | 0x9FC171F7) + (v4 | 0x603E8E08)) ^ 0xF493C751)
        - 87;
  uint64_t v5 = v2;
  int v3 = (char *)*(&off_99820 + (v1 ^ 0x251)) - 4;
  (*(void (**)(_DWORD *))&v3[8 * v1 + 11896])(v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_5E70(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((((v9 + a4) & a6) + 1051) ^ a7) * (v8 == 0)) ^ v9)))();
}

uint64_t sub_5EA4()
{
  int v6 = v3 + *(unsigned __int8 *)(v4 + 6) - 288;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1137 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_5EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v11 = *(unsigned __int8 *)(v8 + ((v5 + 484960361) & 0xE318177D ^ 0xA7FF0BC1D42DC581) + v9)
      - *(unsigned __int8 *)(v7 + ((v5 + 484960361) & 0xE318177D ^ 0xA7FF0BC1D42DC581) + v9);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * (int)(((((2 * v11) & 0xFF69D4CC) + (v11 ^ v6) == v6)
                                                   * (a5 + ((v5 + 1344572280) | 0x8E092121) + 1065)) ^ v5)))(4294925278);
}

uint64_t sub_5F6C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * (((STACK[0x408] == v3)
                                                                * ((v2 - 934) ^ 0x3BD ^ ((v2 - 1359) | 0x218))) ^ (v2 - 139))))(a1, a2, 1373504863);
}

uint64_t sub_5FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((430 * (a7 + 1 == v9 + 24)) ^ v7)))();
}

uint64_t sub_607C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, int8x16_t a8)
{
  signed int v12 = (v8 + 300) ^ 0xB9FBFC63;
  int8x16_t v13 = (int8x16_t)vld1q_dup_f32((const float *)v10);
  v14.i64[0] = 0x8000000080000000;
  v14.i64[1] = 0x8000000080000000;
  a8.i64[0] = *(void *)(v10 + 4);
  a8.i32[2] = *(_DWORD *)(v10 + 12);
  int8x16_t v15 = vextq_s8(v13, a8, 0xCuLL);
  int8x16_t v16 = a8;
  v16.i32[3] = *(_DWORD *)(v10 + 16);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v15, v14)), 1uLL), (int8x16_t)vdupq_n_s32(0x2B830F9Bu));
  v18.i32[0] = *(_DWORD *)(v11 - 152 + 4 * (*(_DWORD *)(v10 + 4) & ((v12 + 1680194067) & 0x9BDA47FB ^ 0x3FA)));
  v18.i32[1] = *(_DWORD *)(v11 - 152 + 4 * (*(_DWORD *)(v10 + 8) & 1));
  v18.i32[2] = *(_DWORD *)(v11 - 152 + 4 * (*(_DWORD *)(v10 + 12) & 1));
  v18.i32[3] = *(_DWORD *)(v11 - 152 + 4 * (v16.i8[12] & 1));
  *(int8x16_t *)uint64_t v10 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v10 + 1588), v18), (int8x16_t)vdupq_n_s32(0x91F5AA21)), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), (int8x16_t)vdupq_n_s32(0xAE0C3E6C))), vdupq_n_s32(0x57061F36u)));
  return (*(uint64_t (**)(void))(v9 + 8 * v12))();
}

uint64_t sub_6088(uint64_t a1)
{
  int v2 = 1759421093 * (((a1 | 0x72C27792) - (a1 & 0x72C27792)) ^ 0xC1BFC7C6);
  int v3 = *(_DWORD *)(a1 + 20) - v2;
  int v4 = *(_DWORD *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 24);
  int v7 = 1374699841 * ((&v9 + 1892788145 - 2 * ((unint64_t)&v9 & 0x70D1A7B1)) ^ 0x1D25BFB8);
  int v14 = (v2 ^ *(_DWORD *)(a1 + 16) ^ 0x5729E64E) - v7;
  uint64_t v9 = v5;
  uint64_t v11 = v6;
  int v12 = v3 - v7 - 2138962000;
  int v13 = v2 + v4 + v7 - 376971175;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_99820 + (v3 ^ 0x7F7DFD38)) + 8 * (v3 ^ 0x7F7DF50B) - 4))(&v9);
  *(_DWORD *)(a1 + 4) = v10;
  return result;
}

uint64_t sub_61E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * (int)(((((v11 - 1758701403) & 0x68D3A5DC ^ 0xFFFFFFF6) + ((v11 - 522) | 0x8C)) * (v12 == 0)) | (v11 - 330))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_6264(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_627C(double a1, double a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, int a8, int a9)
{
  uint64_t v14 = a9 - 2147334888 + a8 + ((4 * v12) ^ 0xC40u);
  int8x16_t v15 = vrev64q_s8(*(int8x16_t *)(v10 + v14 - 15));
  int8x16_t v16 = vextq_s8(v15, v15, 8uLL);
  int8x16_t v17 = vrev64q_s8(*(int8x16_t *)(v10 + v14 - 31));
  int8x16_t v18 = vextq_s8(v17, v17, 8uLL);
  uint64_t v19 = v9 + v14;
  int8x16_t v20 = vrev64q_s8(vaddq_s8(vsubq_s8(v16, vandq_s8(vaddq_s8(v16, v16), a5)), a6));
  *(int8x16_t *)(v19 - 15) = vextq_s8(v20, v20, 8uLL);
  int8x16_t v21 = vrev64q_s8(vaddq_s8(vsubq_s8(v18, vandq_s8(vaddq_s8(v18, v18), a5)), a6));
  *(int8x16_t *)(v19 - 31) = vextq_s8(v21, v21, 8uLL);
  return (*(uint64_t (**)(void))(v13 + 8 * ((1153 * ((v11 & 0xFFFFFFE0) == 32)) ^ v12)))();
}

uint64_t sub_6318(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

void sub_6330(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_63C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v13 = (_DWORD *)STACK[0x3C8];
  *uint64_t v13 = v9 - 1;
  uint64_t v14 = &v13[6 * (v9 - 1321678225)];
  int v15 = v14[2];
  STACK[0x3A0] = *((void *)v14 + 2);
  LODWORD(STACK[0x528]) = v14[6];
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (int)(((*(_DWORD *)(v10
                                                  + 48 * (int)(((v8 + 1546298118) & 0xA3D55E7E ^ (a8 + 422)) + v15)
                                                  + 36) == v11)
                                     * ((((v8 + 1546298118) & 0xA3D55E7E ^ 0x318) + 1669) ^ 0x298)) ^ (v8 + 1546298118) & 0xA3D55E7E)))();
}

uint64_t sub_6498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  return sub_1932C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_64A4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((107 * ((*(_DWORD *)(v1 + v3 * (uint64_t)v2 + 40) & 8) == v0 - 1245)) ^ (v0 + 718))))();
}

void sub_64E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23)
{
  int v27 = ((((v26 - 144) | 0xDB4EDC7B) + (~(v26 - 144) | 0x24B12384)) ^ 0x87801F37) * v24;
  *(void *)(v26 - 136) = a23;
  *(void *)(v26 - 128) = v25;
  *(_DWORD *)(v26 - 144) = (a14 + 572) ^ v27;
  *(_DWORD *)(v26 - 140) = a22 - v27 + ((a14 + 357) ^ 0x3D1CB08E);
  (*(void (**)(uint64_t))(v23 + 8 * (a14 + 1197)))(v26 - 144);
  sub_4362C();
}

uint64_t sub_6560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  return (*(uint64_t (**)(void))(v52
                              + 8 * ((216 * (a51 - 129800696 < a5 + ((v51 + 151422881) | 0xE4400424) - 423)) ^ v51)))();
}

uint64_t sub_65BC@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v5 + v4)) = *(unsigned char *)(v3 + (v5 + v4));
  BOOL v7 = v5 - 1 != (a2 ^ 9) - 333 + a3;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v7 | (8 * v7)) ^ a2 ^ 9)))();
}

void sub_65F8()
{
}

void sub_6604(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (3804331 * (a1 ^ 0xFA9EF356));
  BOOL v2 = (*(unsigned char *)(a1 + 4) - 85 * (a1 ^ 0x56)) == 66;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_66A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15, uint64_t a16, unint64_t a17)
{
  int v21 = 628203409 * ((2 * ((v20 - 160) & 0x5955AA10) - (v20 - 160) + 648697320) ^ 0xA42259DB);
  STACK[0x268] = a15;
  STACK[0x250] = a14;
  STACK[0x258] = a12;
  *(_DWORD *)(v20 - 144) = v18 - v21 + 1489;
  *(_DWORD *)(v20 - 140) = v19 - v21 + ((v18 + 190) | 0x421) - 643093692;
  STACK[0x280] = a13;
  STACK[0x278] = a17;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v18 ^ 0x8FE)))(v20 - 160);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((919 * (*(_DWORD *)(v20 - 128) == v18 - 1373544960)) ^ v18)))(v22);
}

uint64_t sub_679C(uint64_t a1, uint64_t a2)
{
  STACK[0x4C0] = *(void *)(v2 + 8 * (LODWORD(STACK[0x3FC]) - 1343));
  return sub_25A74(a1, a2, 4244635637);
}

void sub_67C4()
{
  int v0 = *(&off_99820
       + ((-19 * ((qword_A39F8 + dword_A4568) ^ 0xED)) ^ byte_77F70[byte_84240[(-19 * ((qword_A39F8 + dword_A4568) ^ 0xED))] ^ 0x3C])
       - 113);
  unsigned __int8 v1 = -19 * ((qword_A39F8 + *v0) ^ 0xED);
  uint64_t v2 = *(&off_99820 + (byte_7ACD0[byte_77D7C[v1 - 12] ^ 0xAF] ^ v1) - 73);
  unint64_t v3 = *v0 ^ (unint64_t)&v5 ^ *v2;
  *int v0 = 1469428717 * v3 + 0x13BC45BED9160A13;
  *uint64_t v2 = 1469428717 * (v3 ^ 0xEC43BA4126E9F5EDLL);
  v6[0] = 1734042137 * (v6 ^ 0x5CCEC34D) + 1695027452;
  LOBYTE(v2) = -19 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0xED);
  int v4 = (char *)*(&off_99820
               + ((-19 * (dword_A4568 ^ 0xED ^ qword_A39F8)) ^ byte_7AAD0[byte_77C70[(-19 * (dword_A4568 ^ 0xED ^ qword_A39F8))] ^ 0x33])
               - 98)
     - 4;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_7AAD4[(byte_77C7C[v2 - 12] ^ 0x3E) - 4] ^ v2)
                                      + 16424])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_69D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = (v14 - 1948153979) & 0x741E73E3;
  int v21 = 535753261
      * (((((v19 - 128) ^ 0x30128C00 | 0x416973FA) ^ 0xFFFFFFFE) - ((v19 - 128) ^ 0x1210290 | 0xBE968C05)) ^ 0xC4387F40);
  *(void *)(v19 - 128) = v18;
  *(_DWORD *)(v19 - 120) = v21 + v16 + v20 - 156505027;
  *(_DWORD *)(v19 - 116) = v21 + v14 - 411;
  (*(void (**)(uint64_t))(v15 + 8 * (v14 ^ 0xE4E)))(v19 - 128);
  *(_DWORD *)(v19 - 128) = (v20 + 647) ^ (1374699841
                                        * ((1659477659 - ((v19 - 128) | 0x62E99E9B) + ((v19 - 128) | 0x9D166164)) ^ 0xF0E2796D));
  *(void *)(v19 - 120) = a13;
  *(void *)(v19 - 112) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v20 ^ 0x98C)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((((((v20 + 1107) ^ (*(_DWORD *)(v19 - 124) > (v17 + 3105))) & 1) == 0)
                                              * ((v20 - 14591406) & 0xDEA6FF ^ 0x2F9)) | v20)))(v22);
}

uint64_t sub_6B44()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 738)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((110 * (STACK[0x510] == 0)) ^ (v0 - 145))))();
}

uint64_t sub_6B80()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((16 * (v1 >= 0xC6723268)) | (32 * (v1 >= 0xC6723268))) ^ (v2 + 1174669690))))();
}

uint64_t sub_6BC4()
{
  return sub_30DAC(2029, (uint64_t)&off_99820);
}

uint64_t sub_6D34@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((70
                                * (((2 * (a1 - 1284426096)) & 0x17CE6FEFCLL)
                                 + ((a1 - 1284426096) ^ 0x6F7BFB3CBE737F7ELL)
                                 - 0x6F7BFB3C942FF961 == 709068317)) ^ 0x135u)))();
}

uint64_t sub_6DE4()
{
  unsigned int v3 = v1 - ((2 * v1 + 1726115102) & 0xECAD5932) + 700965672;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((23
                                * ((v3 ^ (v2 - 892) ^ 0x733 ^ ((v2 - 578) | 0x242) ^ 0x49B14170)
                                 - 713105948
                                 + ((2 * v3) & 0x7FCFDEBC ^ 0x6C8D5830) == 359058754)) ^ (v2 - 892))))();
}

uint64_t sub_6E90(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((46 * (a1 ^ 0x452)) ^ 0xFFFFFF5F) + 340 * (a1 ^ 0x449)) * (v1 < 0x20)) ^ a1)))();
}

uint64_t sub_6EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  unint64_t v36 = (v32 ^ HIDWORD(v33)) + HIDWORD(v35) + (*(_DWORD *)(a30 + a15) ^ v30);
  *(_DWORD *)(a30 + 4 * a18) = v36 + v30 - (v31 & (2 * v36));
  *(_DWORD *)(a30 + a15) = v30
                         + (v36 >> (((a6 + 60) ^ 0xEFu) - 105))
                         - (v31 & (2 * (v36 >> (((a6 + 60) ^ 0xEFu) - 105))));
  BOOL v38 = a27 + 138315445 < 94651918 && a27 + 138315445 >= a22;
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v34 + 8 * (a6 ^ (231 * v38))))(a1, a2, a14);
}

uint64_t sub_6F7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_150BC(a1, 910379865, 1946, 2342524100, a4 ^ 0x5C5u);
}

uint64_t sub_6FD8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, unsigned int a17)
{
  BOOL v20 = a17 > v19;
  if (v20 == a4 - 377429886 < -1445847462) {
    BOOL v20 = a4 - 377429886 < a16;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18
                                                              + 8 * ((!v20 * (((v17 - 1133) | 0x10A) ^ 0x331)) ^ v17)))(0x78C952AFF9F5365, 4288631653, 0x1FF3EA6CALL);
}

uint64_t sub_7084()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 ^ 0x1D4) + 1377 + 71 * (v0 ^ 0x1D4) - 838) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_70C0(uint64_t result)
{
  return sub_3658C(result);
}

void sub_70F4()
{
}

uint64_t sub_711C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, uint64_t a3@<X8>, int8x16_t a4@<Q2>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int8x16_t *a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v31 = (v28 + 92007456) & 0xFA8413DD;
  *(int8x16_t *)(a2 + (((v31 ^ 0x761) + 4294966083) & (a3 + a1))) = vaddq_s8(vaddq_s8(*a25, a4), vmvnq_s8(vandq_s8(vaddq_s8(*a25, *a25), v30)));
  return (*(uint64_t (**)(void))(v29 + 8 * (int)(v31 ^ (2 * (((v31 + 0x1FFFFFC13) & (a11 + a28 - 1613)) != 16)))))();
}

uint64_t sub_71C0()
{
  int v4 = (unint64_t *)((char *)&STACK[0x670] + STACK[0x350] - 0x2CDB5D806DA9E6DDLL);
  STACK[0x408] = v1 + 0x399DE98F08C0F0A4;
  *int v4 = 0x1A1A1A1A1A1A1A1ALL;
  v4[1] = 0xE5E5E5E5E3E5E5F7;
  int v5 = 460628867 * ((2 * ((v3 - 192) & 0x3E6D31C8) - (v3 - 192) - 1047343563) ^ 0x8D044C48);
  *(_DWORD *)(v3 - 188) = v5 + 1652078569;
  *(_DWORD *)(v3 - 184) = (v0 + 1064655308) ^ v5;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 ^ 0xD20)))(v3 - 192);
  LODWORD(STACK[0x400]) = 1284426432;
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v0 + 759)))(336, 1925803308);
  STACK[0x440] = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2
                                                                                         + 8
                                                                                         * ((((((v0 - 863) ^ (v6 == 0)) & 1) == 0)
                                                                                           * (((v0 - 1127) | 0x450) ^ 0x54F)) ^ v0)))(v6, v7, v8, v9, v10, v11);
}

uint64_t sub_7300@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 7 + (v3 + a1 - v6)) = *(void *)(v2 - 7 + (v3 + a1 - v6));
  return (*(uint64_t (**)(void))(v8 + 8 * ((3468 * (((v7 - 1294) ^ 0x8C) + v6 == v5 - (v4 & 7))) ^ v7)))();
}

uint64_t sub_7350()
{
  int v5 = (v0 - 20) | 0x100;
  *uint64_t v2 = v2[623];
  unint64_t v6 = STACK[0x3E8];
  *(_DWORD *)(v4 - 176) = STACK[0x3E8] + v5 + 2104631030;
  *(void *)(v4 - 168) = STACK[0x3E0];
  *(void *)(v4 - 184) = (v1 - 1770738666) ^ v6;
  *(_DWORD *)(v4 - 160) = v6 + 1;
  *(_DWORD *)(v4 - 156) = (v5 + 187755731) ^ v6;
  *(_DWORD *)(v4 - 152) = v6 ^ (v5 + 187755783) ^ 0x18;
  *(_DWORD *)(v4 - 148) = v5 + 187755783 + v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v5 + 809)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 192)))(v7);
}

uint64_t sub_73F4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 ^ 9 ^ ((v1 + 7) | 8)) * ((a1 ^ 0x30u) > 7)) ^ v1)))();
}

uint64_t sub_7434@<X0>(int a1@<W3>, char a2@<W4>, int a3@<W5>, int a4@<W6>, uint64_t a5@<X7>, int a6@<W8>)
{
  int v13 = v9 + a6;
  *(unsigned char *)(v7 + (v13 + 1931)) = *(unsigned char *)(a5 + (v13 + 1931)) ^ (((v13 - 117) & 0xF) * a2) ^ *(unsigned char *)((((_BYTE)v13 - 117) & 0xF) + *(void *)(v11 + 8 * (v6 - 680)) + 2) ^ *(unsigned char *)(*(void *)(v11 + 8 * (v6 ^ a1)) + (((_BYTE)v13 - 117) & 0xF) - 12) ^ *(unsigned char *)(*(void *)(v11 + 8 * (v6 ^ a3)) + ((v13 + 1931) & 0xFLL) - 9) ^ v10;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v8 == v13) * a4) ^ v6)))();
}

uint64_t sub_743C(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v32 = v29 + v28 - 669;
  *(_DWORD *)(a25 + 4 * (v32 + v30)) = v26;
  int v33 = v32 + a2;
  if (v32 + a2 < a3)
  {
    BOOL v36 = __OFSUB__(v33, v27);
    BOOL v34 = v33 == v27;
    BOOL v35 = v33 - v27 < 0;
  }
  else
  {
    BOOL v36 = 0;
    BOOL v34 = 1;
    BOOL v35 = 0;
  }
  if (v35 ^ v36 | v34) {
    int v37 = 0;
  }
  else {
    int v37 = 1;
  }
  return (*(uint64_t (**)(void))(v31 + 8 * ((v37 * a4) ^ v25)))();
}

uint64_t sub_7448()
{
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0xD62)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((45 * (STACK[0x430] != 0)) | (v0 - 1150))))();
}

uint64_t sub_7484@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  unsigned int v12 = (((((v5 + a2 - v6) >> 30) ^ 1) + a2 - 4 * ((v5 + a2 - v6) >> 31)) ^ (v5 + a2 - v6))
      * a1;
  *(_DWORD *)(v11 + 4 * a3) = a3 + v7 + v12 - (((v12 + a3) << v3) & v10) - 1;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a3 < 0x26F) * v4) ^ v8)))();
}

uint64_t sub_7490()
{
  BOOL v3 = ((v1 - 1284426096 + ((v0 - 204) | 0x393) - 980) & (v0 - 276)) - LODWORD(STACK[0x398]) == -1284426096;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 | (8 * v3)) ^ v0)))();
}

uint64_t sub_74DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6, __n128 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55)
{
  v56.n128_u64[0] = 0xE6E6E6E6E6E6E6E6;
  v56.n128_u64[1] = 0xE6E6E6E6E6E6E6E6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, __n128, __n128, __n128))(v55 + 8 * ((2638 * (a21 + ((((a19 + 773472433) | 0x301) - 1186563291) ^ a55 & 0x3F) + ((2 * a55) & 0x72 ^ 0x12u) < 0xFFFFFFC0)) ^ (a35 + 588))))(a1, a2, a3, a4, a5, &a46, 202, &a42, a6, a7, v56);
}

uint64_t sub_7594@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  int v37 = (v34 - 1323196391) & 0x4EDE5E6F;
  *(&a33 + (a8 + v33)) = *(unsigned char *)(a21 + v36 - 2012186348)
                                     - ((v37 + 124) & (2 * *(unsigned char *)(a21 + v36 - 2012186348)))
                                     - 27;
  BOOL v38 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * ((395 * ((a2 + a8 + 295) < 0x40)) ^ v37));
  return v38(v38, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13);
}

uint64_t sub_7610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((15 * (((v7 == 63) ^ (11 * (v8 ^ (a7 + 79) ^ (a7 - 73)))) & 1)) ^ v8)))();
}

uint64_t sub_7650@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((((a3 - 80) | 0x50) + 16) ^ 0x71)
                                                   + *(unsigned char *)(v4 + v3)
                                                   - **(unsigned char **)(a1 + 8 * (((a3 - 336) | 0x150) - 1184))) != 44)
                                * a2) ^ (((a3 - 336) | 0x150) - 532))))();
}

uint64_t sub_76A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16, uint64_t a17, unsigned int a18, unsigned int a19, unint64_t *a20)
{
  unsigned int v22 = 1759421093 * ((&a15 & 0xB88B6601 | ~(&a15 | 0xB88B6601)) ^ 0xF40929AA);
  a17 = a11;
  a20 = &STACK[0x4CAF57822185BFB1];
  a18 = v22 ^ 0xFE1BE9AC;
  a19 = v22 + v20 + 2138961799;
  a15 = 1036168092 - v22;
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v21 + 8 * ((v20 - 27) ^ 0xDAA)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (((((v20 + 104) ^ (a16 == -1373544826)) & 1)
                                              * (((v20 - 27) ^ 0x3B4) - 611)) ^ (v20 - 27))))(v23);
}

uint64_t sub_7794()
{
  LODWORD(STACK[0x5CC]) = v0;
  STACK[0x468] = v1;
  LODWORD(STACK[0x5B4]) = v0;
  return sub_2DB98();
}

uint64_t sub_77B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v17 = 3804331 * ((v16 - 82795860 - 2 * ((v16 - 120) & 0xFB10A324)) ^ 0x18E5072);
  *(void *)(v16 - 112) = a11;
  *(_DWORD *)(v16 - 120) = v17 + v15 + 1377;
  *(_DWORD *)(v16 - 116) = (a14 + 376469364) ^ v17;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 2122)))(v16 - 120);
  uint64_t v19 = *(_DWORD *)(v16 - 152) & 0x3F;
  *(unsigned char *)(v16 - 220 + (v19 ^ 0xF)) = 101;
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((859
                                              * ((v19 ^ 0xF) > ((667 * (v15 ^ 0x1F)) ^ 0x21D25581)
                                                                           + ((v15 + 1545932136) | 0x8208A063))) ^ v15)))(v18);
}

uint64_t sub_78C4@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  uint64_t v11 = (unsigned int *)(v10 + 4 * v5);
  uint64_t v12 = v5 + 1;
  int v13 = *(_DWORD *)(v10 + 4 * v12);
  unsigned int v14 = v6 ^ ((v13 & 0x7FFFFFFE | v4 & 0x80000000) >> 1);
  *uint64_t v11 = v11[397] ^ a2 ^ *(_DWORD *)(v8 + 4 * (v13 & 1)) ^ (v14 + a1 - ((v9 + a4 - 1040 - 338) & (2 * v14)));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v12 == 227) * a3) ^ a4)))();
}

uint64_t sub_7934(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((v2 - 1729) ^ 0xD47 ^ (v2 - 420))))(a1, 549541838);
}

uint64_t sub_79B0(uint64_t a1)
{
  int v2 = 1224239923 * (((a1 | 0x54F5E249) - a1 + (a1 & 0xAB0A1DB6)) ^ 0xA6461F9E);
  int v3 = *(_DWORD *)(a1 + 12) ^ v2;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)a1;
  unsigned int v8 = 1224239923
     * (((&v10 | 0xE2EFC804) - &v10 + (&v10 & 0x1D1037F8)) ^ 0x105C35D3);
  unsigned int v11 = ((*(_DWORD *)(a1 + 16) + v2) ^ 0xAE5E5D4)
      - v8
      - 757175556
      + ((2 * (*(_DWORD *)(a1 + 16) + v2)) & 0xFFFBFEDE ^ 0xEA303456);
  uint64_t v13 = v5;
  uint64_t v14 = v6;
  uint64_t v12 = v4;
  unsigned int v16 = v3 - 368399084 + v8;
  uint64_t v10 = v7;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_99820 + (v3 ^ 0x15F557A9)) + 8 * v3 - 2947183452))(&v10);
  *(_DWORD *)(a1 + 8) = v15;
  return result;
}

uint64_t sub_7B1C@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W8>)
{
  BOOL v11 = a4 < a1;
  *(unsigned char *)(v10 - 220 + (v5 - 123541585)) = *(unsigned char *)(v9 + (v6 + a2))
                                                         - ((2 * *(unsigned char *)(v9 + (v6 + a2))) & 0xCA)
                                                         - 27;
  unsigned int v12 = a3 + v6 + 1;
  int v13 = v11 ^ (v12 < a1);
  BOOL v14 = v12 < a4;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((!v11 * v4) ^ v7)))();
}

uint64_t sub_7BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v7 + 8 * ((LODWORD(STACK[0x3FC]) + 474) ^ 0x1A)))(a1, a2, a3, a4, a5, a6, a7, STACK[0x250]);
}

uint64_t sub_7BFC()
{
  if (v2 >= 0) {
    unsigned int v4 = v2;
  }
  else {
    unsigned int v4 = -v2;
  }
  if (v1 >= 0) {
    unsigned int v5 = v1;
  }
  else {
    unsigned int v5 = -v1;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v0 - 169) | 0x402) + 993 * (v0 ^ 0x46B) - 3662) * (v4 > v5)) ^ v0)))();
}

uint64_t sub_7C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49)
{
  int v49 = *(_DWORD *)(a1 + 8) + 1759421093 * ((((2 * a1) | 0x1851ADD4) - a1 - 204003050) ^ 0xBF5566BE);
  unsigned int v50 = 628203409
      * (((v56 | 0x809EFB7E) - v56 + (v56 & 0x7F610480)) ^ 0x216F74D);
  v56[0] = v49 + v50 + 1172345419;
  v56[2] = v50 - 290923570;
  v57 = &STACK[0x843828D0CDF3525];
  (*(void (**)(_DWORD *))((char *)*(&off_99820 + v49 + 136) + 8 * (v49 ^ 0x87B) - 4))(v56);
  return sub_15A68(4294440761, 525277, (v49 + 1919272670) & 0x8D9A3FB5, v51, v52, (uint64_t)v55, 202, (uint64_t)&v54, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_7F18(int8x8_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  *(int8x8_t *)(a4 + v7) = vadd_s8(*(int8x8_t *)(v6 + v7), a1);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a5 != v8) * v5) ^ a3)))();
}

uint64_t sub_7F4C(_OWORD *a1)
{
  *(_OWORD *)(v3 + ((v4 ^ 0xFFFFFEE9) & (v1 + 16))) = *a1;
  return (*(uint64_t (**)(_OWORD *))(v5 + 8 * (int)((86 * (v2 == 16)) ^ v4)))(a1 + 1);
}

uint64_t sub_7F5C@<X0>(int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  unint64_t v25 = (a2 ^ HIDWORD(v24)) + HIDWORD(a3) + (*(_DWORD *)(a21 + a8) ^ v21);
  *(_DWORD *)(a21 + 4 * a9) = v25 + v21 - (((a1 - 481262120) & 0x1CAF7FF7 ^ (v22 + 1425)) & (2 * v25));
  *(_DWORD *)(a21 + a8) = (v25 >> ((17 * (a1 ^ 0xBE)) ^ 0x2Fu))
                        + v21
                        - (v22 & (2 * (v25 >> ((17 * (a1 ^ 0xBE)) ^ 0x2Fu))));
  BOOL v27 = a18 - 1871735615 < 1367328606 && a18 - 1871735615 >= a13;
  return (*(uint64_t (**)(void))(v23 + 8 * (a1 ^ (14 * v27))))();
}

uint64_t sub_801C(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  v22.n128_u64[0] = 0xCACACACACACACACALL;
  v22.n128_u64[1] = 0xCACACACACACACACALL;
  v23.n128_u64[0] = 0xE5E5E5E5E5E5E5E5;
  v23.n128_u64[1] = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(v21 + 8 * (((((a21 - 70) | 0x478) + ((a21 - 853635148) & 0x32E1747D) - 1510) * (a17 < 0xFFFFFFFE)) ^ a21)))(3550254202, 3152611897, 2115178074, 744713094, 1941479911, 2179789222, 1619931834, a1, a2, a3, a4, v22, v23);
}

uint64_t sub_80D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = a1;
  v6[1] = v3 + 535753261 * (((~v6 & 0xF5EFFFB2) - (~v6 | 0xF5EFFFB3)) ^ 0xFF1BF19C) + 1746;
  uint64_t result = (*(uint64_t (**)(_DWORD *))(v2 + 8 * (v3 + 1822)))(v6);
  *(_DWORD *)(v1 + 4) = v4;
  return result;
}

uint64_t sub_8134()
{
  int v5 = *(unsigned __int8 *)(v0 + v2 - 0x7F787F4811B8E217)
     - (*(unsigned char *)(v1 + v2 - 0x7F787F4811B8E217) - 106);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((951 * (((v3 ^ 0xB5FB9E9E) & (2 * v5)) + (v3 ^ 0x5AFDCE84 ^ v5) == 1526583286)) ^ v3)))();
}

uint64_t sub_813C(uint64_t a1, uint64_t a2)
{
  int v5 = v2 + 495;
  (*(void (**)(void, uint64_t, void))(v3 + 8 * (v2 + 1314)))(*(unsigned int *)STACK[0x2B8], a2, 0);
  uint64_t v6 = LODWORD(STACK[0x5B4]);
  unint64_t v7 = 1224239923
     * ((2 * ((v4 - 192) & 0x2D9C6B7C1C2A4430) - (v4 - 192) - 0x2D9C6B7C1C2A4434) ^ 0xFA3921EA1166461BLL);
  *(_DWORD *)(v4 - 168) = v7 + v5 - 1501687204;
  *(_DWORD *)(v4 - 164) = -1224239923 * ((2 * ((v4 - 192) & 0x1C2A4430) - (v4 - 192) - 472532020) ^ 0x1166461B);
  int v8 = v5 + 1739640646 + v7;
  *(_DWORD *)(v4 - 160) = v8 + 41;
  *(_DWORD *)(v4 - 156) = v8;
  *(void *)(v4 - 184) = v7 ^ 0x51DE055C;
  *(void *)(v4 - 176) = v6 ^ v7;
  *(_DWORD *)(v4 - 188) = ((v5 + 1739640646) ^ 0x46) + v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v5 ^ 0xD2C)))(v4 - 192);
  STACK[0x338] = 0;
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 192));
  LODWORD(STACK[0x2D0]) = 1746339940;
  return v10(v9);
}

uint64_t sub_8244(uint64_t a1, int a2)
{
  return sub_26B98(a1, a2);
}

uint64_t sub_8264@<X0>(unsigned int a1@<W0>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(a13 + 4 * (v13 + a3)) = a2;
  int v20 = v16 + v13 + 1;
  int v21 = (v18 > a1) ^ (v20 < v15 + 917);
  BOOL v22 = v20 < v17;
  if (v21) {
    BOOL v22 = v18 > a1;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((v22 | (4 * v22)) ^ v14)))();
}

uint64_t sub_82C4()
{
  int v7 = ((((v6 - 144) | 0x57D1B2BD) + (~(v6 - 144) | 0xA82E4D42)) ^ 0x744B6AAA) * v5;
  *(void *)(v6 - 136) = v0;
  *(_DWORD *)(v6 - 128) = (v1 - 584148100) ^ v7;
  *(_DWORD *)(v6 - 140) = (v3 - 1586) ^ v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 + 409)))(v6 - 144);
  BOOL v9 = *(_DWORD *)(v6 - 144) == v4 + ((v3 - 1343) ^ 0x373) - 737;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v9 | (2 * v9)) ^ (v3 - 1056))))(v8);
}

_DWORD *sub_8378@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  *uint64_t result = a2;
  return result;
}

void sub_8380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v26 - 144) = v23;
  *(void *)(v26 - 136) = a16;
  *(void *)(v26 - 120) = v25;
  *(void *)(v26 - 112) = v25;
  *(_DWORD *)(v26 - 104) = (v22 + 1336) ^ (1759421093
                                         * ((-2001794876 - ((v26 - 144) | 0x88AF08C4) + ((v26 - 144) | 0x7750F73B)) ^ 0xC42D476F));
  *(void *)(v26 - 128) = a22;
  (*(void (**)(uint64_t))(v24 + 8 * (v22 + 1456)))(v26 - 144);
  JUMPOUT(0x4890);
}

void sub_8400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned char *a9)
{
  unsigned int v12 = v10 - 2 * ((v10 + 95369912) & 0x3BE90A3F ^ v10 & 6) + 1100498161;
  *a9 = ((v11 + 112) & 0x97 ^ HIBYTE(v12) ^ 0x3F) - ((2 * ((v11 + 112) & 0x97 ^ HIBYTE(v12) ^ 0x3F)) & 0xCA) - 27;
  a9[1] = (BYTE2(v12) ^ 0xE9) - ((2 * (BYTE2(v12) ^ 0xE9)) & 0xCA) - 27;
  a9[2] = (BYTE1(v12) ^ 0xA) - ((v12 >> 7) & 0xCA) - 27;
  a9[3] = (v10 - 2 * ((v10 - 72) & 0x3F ^ v10 & 6) - 15) ^ 0xDC;
  uint64_t v13 = v9 - ((2 * v9) & 0x21C65756906EBF36) - 0x6F1CD454B7C8A065;
  a9[4] = (HIBYTE(v13) ^ 0x90) + (~(2 * HIBYTE(v13)) | 0x35) - 26;
  a9[5] = (BYTE6(v13) ^ 0xE3) + (~(2 * (BYTE6(v13) ^ 0xE3)) | 0x35) - 26;
  a9[6] = (BYTE5(v13) ^ 0x2B) + (~(2 * (BYTE5(v13) ^ 0x2B)) | 0x35) - 26;
  a9[7] = (BYTE4(v13) ^ 0xAB) - ((2 * (BYTE4(v13) ^ 0xAB)) & 0xCA) - 27;
  a9[8] = (((v9 - ((2 * v9) & 0x906EBF36) + 1211588507) >> 24) ^ 0x48)
        - ((2 * (((v9 - ((2 * v9) & 0x906EBF36) + 1211588507) >> 24) ^ 0x48)) & 0xCA)
        - 27;
  a9[9] = (BYTE2(v13) ^ 0x37) - ((2 * (BYTE2(v13) ^ 0x37)) & 0xCA) - 27;
  a9[10] = (BYTE1(v13) ^ 0x5F) + (~(2 * (BYTE1(v13) ^ 0x5F)) | 0x35) - 26;
  a9[11] = (v9 - ((2 * v9) & 0x36) - 101) ^ 0x7E;
  sub_1308C();
}

uint64_t sub_85A0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17)
{
  int v24 = 6 * (v22 ^ 0x33);
  *(_DWORD *)(a17 + 4 * (a3 + v23 + (v24 ^ a2))) = ((v19 >> (v24 ^ 0x1Au)) ^ v17)
                                                   + v18
                                                   - 2
                                                   * (((v19 >> (v24 ^ 0x1Au)) ^ v17) & (v18 + 5) ^ (v19 >> (v24 ^ 0x1Au)) & 5);
  BOOL v26 = v21 + 2106559789 > ((223 * (v24 ^ 0x53C)) ^ 0x23B8C8CD) || v21 + 2106559789 < a15;
  return (*(uint64_t (**)(void))(v20 + 8 * ((v26 * (v24 ^ 0x522)) ^ v24 ^ 0x614)))();
}

uint64_t sub_865C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 629) | 0x1C) ^ 0x196) * (v1 == a1)) ^ v2)))();
}

uint64_t sub_8698()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v2 == (((v0 - 226) | 0xE2) ^ 0x4631225A)) * (((v0 - 190) | 0x186) ^ 0x3D5)) ^ (v0 + 331))))();
}

uint64_t sub_86E4(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v10 = v8 - 32;
  uint64_t v11 = v6 + v10;
  long long v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a2 != 32) * (a3 + 18)) ^ (a6 + v7 + 1243))))();
}

uint64_t sub_86F0(char a1, char a2, char a3, char a4, unsigned __int8 a5, int a6, int8x16_t a7, int8x8_t a8, int8x8_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  char v57 = v51 - 8;
  uint64_t v58 = (a6 + v55 - 8);
  v60.val[0].i64[0] = ((_BYTE)a6 + (_BYTE)v55 - 8) & 0xF;
  v60.val[0].i64[1] = ((_BYTE)a6 + v54 - 8) & 0xF;
  v60.val[1].i64[0] = ((_BYTE)a6 + a4 - 8) & 0xF;
  v60.val[1].i64[1] = ((_BYTE)a6 + a3 - 8) & 0xF;
  v60.val[2].i64[0] = ((_BYTE)a6 + a2 - 8) & 0xF;
  v60.val[2].i64[1] = ((_BYTE)a6 + a1 - 8) & 0xF;
  v60.val[3].i64[0] = ((_BYTE)a6 + v57 + (a5 ^ 7)) & 0xF;
  v60.val[3].i64[1] = ((_BYTE)a6 + v57) & 0xF;
  *(int8x8_t *)(*(void *)(v56 - 136) + v58) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v52 + v58), *(int8x8_t *)(v49 + (v58 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v50 + (v58 & 0xF) - 7), *(int8x8_t *)(v48 + (v58 & 0xF) - 7)))), a9), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v60, a7), a8)));
  return (*(uint64_t (**)(void))(a48 + 8 * ((14 * (a6 != v53 + 8)) ^ *(_DWORD *)(v56 - 128))))();
}

uint64_t sub_8714()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0)
                                * (((v3 - 1289) ^ 0x369) - 157)) ^ v3)))();
}

uint64_t sub_8754(uint64_t a1)
{
  int v3 = (*(uint64_t (**)(void))(v1 + 17208))();
  if (v3 == 16) {
    unsigned int v4 = -42029;
  }
  else {
    unsigned int v4 = -42030;
  }
  if (v3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  (*(void (**)(uint64_t))(v1 + 16784))(a1);
  return v5;
}

uint64_t sub_879C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((v6 - 10048682) & 0xEDDFDDEF ^ (a5 - 747)) + v6 - 149) * (v5 != 63)) | v6)))();
}

uint64_t sub_87DC@<X0>(uint64_t a1@<X8>)
{
  int v6 = 47 * (v2 ^ 0x45E);
  *(unsigned char *)(a1 + v3 + ((v6 - 1729136004) & 0x6710815F) + v1 - 22) = v4;
  return (*(uint64_t (**)(void))(v5 + 8 * ((112 * ((unint64_t)(a1 + v3) < 0x40)) ^ v6)))();
}

uint64_t sub_8834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18)
{
  *(_DWORD *)a4 = 0;
  return sub_46200(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_883C()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * (((((v1 ^ 0x59A) + 1769) ^ (877 * (v1 ^ 0x59A))) * (v0 == 63)) ^ v1)))(229);
}

uint64_t sub_888C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(v17 - 104) = (v16 + 1685) ^ (1759421093 * ((v17 - 144) ^ 0xB37DB054));
  *(void *)(v17 - 128) = v13;
  *(void *)(v17 - 120) = v12;
  *(void *)(v17 - 144) = v14;
  *(void *)(v17 - 136) = a11;
  *(void *)(v17 - 112) = v12;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 1805)))(v17 - 144);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((218
                                              * ((((v11 + 1102) < 0x7FFFFFFF) ^ (93 * ((v16 + 34) ^ 0x4C))) & 1)) ^ (v16 + 802))))(v18);
}

uint64_t sub_891C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((7 * (*(_DWORD *)(*a1 + v4) == ((v3 - 683) ^ (v2 + 307) ^ v3 ^ 0xA6))) ^ v3)))();
}

uint64_t sub_895C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24) = v3;
  unsigned int v4 = *(_DWORD *)(a1 + 4) - 152375292 - ((2 * *(_DWORD *)(a1 + 4) + 1726115104) & 0x86F372E8);
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((199
                                             * (((2 * v4) & 0xF36FBF60 ^ 0x82633260) + (v4 ^ 0x3ACE66C4) - 1093664896 == 948428592)) ^ 0x660u)))(0);
}

uint64_t sub_8A04@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  *(_DWORD *)(v60 - 120) = a2 + 13;
  *(_DWORD *)(v60 - 116) = a2 + 14;
  v66.val[1].i64[0] = ((_BYTE)a2 + 10) & 0xF;
  v66.val[1].i64[1] = ((_BYTE)a2 + 9) & 0xF;
  v66.val[2].i64[0] = ((_BYTE)a2 + 8) & 0xF;
  v66.val[2].i64[1] = ((_BYTE)a2 + 7) & 0xF;
  v66.val[3].i64[0] = ((_BYTE)a2 + 6) & 0xF;
  v66.val[3].i64[1] = (((-63 * ((a3 - 26) ^ 0x8E)) ^ 7) + (_BYTE)a2) & 0xF;
  unsigned int v61 = a4 + v59 + a1;
  v62.i64[0] = 0x3333333333333333;
  v62.i64[1] = 0x3333333333333333;
  v66.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)v59 + (_BYTE)a1) & 0xF;
  v66.val[0].i64[1] = ((_BYTE)a2 + 11) & 0xF;
  v63.i64[0] = vqtbl4q_s8(v66, (int8x16_t)xmmword_84370).u64[0];
  v67.val[0].i64[1] = ((_BYTE)a2 + 3) & 0xF;
  v67.val[1].i64[1] = ((_BYTE)a2 + 1) & 0xF;
  v67.val[2].i64[1] = ((_BYTE)a2 - 1) & 0xF;
  v67.val[3].i64[1] = *(_DWORD *)(v60 - 120) & 0xF;
  v67.val[0].i64[0] = ((_BYTE)a2 + 4) & 0xF;
  v67.val[1].i64[0] = ((_BYTE)a2 + 2) & 0xF;
  v67.val[2].i64[0] = a2 & 0xF;
  v67.val[3].i64[0] = *(_DWORD *)(v60 - 116) & 0xF;
  v63.i64[1] = vqtbl4q_s8(v67, (int8x16_t)xmmword_84370).u64[0];
  int8x16_t v64 = vrev64q_s8(vmulq_s8(v63, v62));
  *(int8x16_t *)(a52 - 15 + v61) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v57 + (v61 & 0xF) - 15), *(int8x16_t *)(v54 - 15 + v61)), veorq_s8(*(int8x16_t *)((v61 & 0xF) + v56 - 13), *(int8x16_t *)((v61 & 0xF) + v55 - 14))), vextq_s8(v64, v64, 8uLL));
  return (*(uint64_t (**)(void))(a54
                              + 8
                              * ((14 * (449 * ((a3 + 486) ^ 0x38E) - (v58 & 0xFFFFFFF0) != 882)) ^ (449
                                                                                                  * ((a3 + 486) ^ 0x38E)))))();
}

uint64_t sub_8B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v12 = ((unint64_t)&a9 ^ 0x7FDEF1FF7CEDEACALL)
      - 0x9091720841A7CALL
      + ((2 * (void)&a9) & 0xFFBDE3FEF9DBD590);
  a9 = v10 - 1;
  *(unsigned char *)(a2 + a9) = (v12 ^ 0xBA) * (v12 + 17);
  uint64_t v13 = *(uint64_t (**)(void))(v11 + 8 * (v9 | (16 * (a9 == (v9 + 1454) - 2031))));
  return v13(v13);
}

void sub_8C0C()
{
  *int v1 = v0;
}

uint64_t sub_8C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  return (*(uint64_t (**)(void))(v17
                              + 8 * ((42 * (a15 != (((v15 - 593) | 0x251) ^ (v16 + v15 - 248 - 1044)))) ^ (v15 - 575))))();
}

uint64_t sub_8C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((a6 + v6 - 514 + ((v6 + 1375996359) | 0x8C29A1E3) + 566) * (v7 == v8)) ^ v6)))();
}

uint64_t sub_8CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18, unint64_t *a19, unint64_t *a20,unint64_t *a21,unsigned int a22)
{
  int v25 = v24 - 549;
  a22 = (v24 + 55) ^ (1225351577 * (&a17 ^ 0x239AD816));
  a20 = &STACK[0xC9996988DE51CE];
  a21 = &STACK[0x6A4735A87A264415];
  a19 = a13;
  (*(void (**)(unsigned int *))(v23 + 8 * (v24 + 1490)))(&a17);
  int v26 = v24 + 745;
  a19 = &STACK[0x18D17CD12703C5FB];
  a20 = a13;
  a17 = v26 ^ (1374699841 * (((&a17 | 0xF86CA62A) - (&a17 & 0xF86CA62A)) ^ 0x9598BE23));
  (*(void (**)(unsigned int *))(v23 + 8 * (v25 + 1987)))(&a17);
  a19 = &STACK[0x18D17CD12703C5FF];
  a20 = a13;
  a17 = v26 ^ (1374699841 * ((((2 * &a17) | 0xEC1A9DD8) - &a17 + 166899988) ^ 0x9BF956E5));
  (*(void (**)(unsigned int *))(v23 + 8 * (v25 + 1987)))(&a17);
  a17 = v25 + 1225351577 * (((&a17 | 0x37C6CE8F) - (&a17 & 0x37C6CE8F)) ^ 0x145C1699) + 1924;
  a19 = a13;
  uint64_t v27 = (*(uint64_t (**)(unsigned int *))(v23 + 8 * (v25 + 1998)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (((a18 == v22) * ((v25 ^ 0x265) + 974)) ^ v25)))(v27);
}

uint64_t sub_8E94()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((37 * ((((((v1 - 634744504) & 0x25D569FF) + 679) ^ ((v1 - 606) | 0x45)) & v0) == 0)) ^ v1)))();
}

uint64_t sub_8EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6
                                                              + 8
                                                              * ((1668 * (a5 + (v5 ^ (a3 + 1283) ^ 0xD4AC58B5) < 0x38)) ^ (a4 + v5 + 654))))(a1, a2, -3381051899);
}

uint64_t sub_8F40()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x7761D79CB8DF4D03) - 1775046531;
  unsigned int v4 = *(_DWORD *)(v1 - 0x7761D79CB8DF4D07) + 1438211590;
  BOOL v5 = v4 < 0xA6C1FAF0;
  BOOL v6 = v3 < v4;
  if (v3 < 0xA6C1FAF0 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((!v6 * ((v2 + 984) ^ 0x818)) ^ v2)))();
}

uint64_t sub_8FD4@<X0>(char a1@<W2>, int a2@<W8>)
{
  uint64_t v9 = v2 - 1;
  *(unsigned char *)(v6 + v9) = ((v3 + a1 + v4 + 11) ^ v5) * (v3 + a1 + v4 + 28);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 == 0) * v7) ^ a2)))();
}

uint64_t sub_8FE4@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  return (*(uint64_t (**)(void))(v16 + 8 * ((211 * (a16 == (((a2 ^ 0x2C6) + a1) ^ (a2 - 769)))) ^ a2)))();
}

uint64_t sub_9024()
{
  STACK[0x5A8] = STACK[0x3D8];
  return sub_3F964();
}

uint64_t sub_9038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, int a11, int a12, uint64_t a13, uint64_t a14)
{
  int v17 = 1224239923 * ((1269078856 - ((v16 - 128) | 0x4BA49B48) + ((v16 - 128) | 0xB45B64B7)) ^ 0x46E89960);
  *(_DWORD *)(v16 - 112) = (((a12 << ((v15 + 70) ^ 0xF3)) & 0x7EFBBD80)
                          + ((a12 << ((v15 - 12) ^ 0xA6)) ^ 0x3F7DDEDF)
                          - 557842637) ^ v17;
  *(_DWORD *)(v16 - 128) = v15 - v17 + 608;
  *(void *)(v16 - 120) = a14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 1729)))(v16 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8 * ((1810 * ((*a10 - 1372200253) < 0x7FFFFFFF)) ^ v15)))(v18);
}

uint64_t sub_9138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23,uint64_t a24,unsigned int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return sub_1A330(a1, a2, a3, a29, 1618280891, 904237698, a25, a23);
}

void sub_9144()
{
}

uint64_t sub_920C(int a1)
{
  BOOL v5 = *(_DWORD *)(v4 + 48 * (a1 + v2 + ((v1 - 456474799) & 0x1B354676 ^ 0x5D3) - 945) + 36) == v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((8 * ((v5 ^ (((v1 + 81) & 0x76) - 1)) & 1)) & 0xEF | (16 * ((v5 ^ (((v1 - 456474799) & 0x1B354676) - 1)) & 1))) ^ (v1 - 456474799) & 0x1B354676u)))();
}

void sub_927C(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(void *)(v18 - 120) = a17;
  *(void *)(v18 - 112) = a17;
  *(_DWORD *)(v18 - 104) = (a1 + 1336) ^ (((((2 * (v18 - 144)) | 0xBDB19FDC) - (v18 - 144) + 556216338) ^ 0x6DA57FBA)
                                        * v17);
  *(void *)(v18 - 144) = a14;
  *(void *)(v18 - 136) = a6;
  *(void *)(v18 - 128) = a15;
  JUMPOUT(0x4878);
}

void sub_92E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v27 - 144) = v24;
  *(void *)(v27 - 136) = a20;
  *(void *)(v27 - 128) = v26;
  *(void *)(v27 - 120) = a24;
  *(_DWORD *)(v27 - 104) = (v25 + 1336) ^ (1759421093 * ((v27 - 144) ^ 0xB37DB054));
  *(void *)(v27 - 112) = a24;
  JUMPOUT(0x83ECLL);
}

uint64_t sub_932C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v8 = (v3 - v1);
  long long v9 = *(_OWORD *)(a1 + v8 - 15);
  long long v10 = *(_OWORD *)(a1 + v8 - 31);
  uint64_t v11 = v6 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((((v5 + 670) | v2) ^ 0x570) + v1 == 320) * v4) ^ v5)))();
}

uint64_t sub_9378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((1420 * (v22 + a22 - *(_DWORD *)(a2 + 4) + 1058512890 == (v23 ^ 0x2C6) - 2026074099)) ^ v23)))();
}

uint64_t sub_93CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int32x4_t a33,int32x4_t a34,int32x4_t a35,int32x4_t a36)
{
  long long v44 = (const char *)(v43 - 220);
  v45.n128_u64[0] = 0xE5E5E5E5E5E5E5E5;
  v45.n128_u64[1] = 0xE5E5E5E5E5E5E5E5;
  __n128 v46 = (__n128)vdupq_n_s32(0x2E215E87u);
  __n128 v47 = (__n128)vdupq_n_s32(0xAE215E86);
  a25 = v42 - 16;
  v48.n128_u64[0] = 0xCACACACACACACACALL;
  v48.n128_u64[1] = 0xCACACACACACACACALL;
  uint64_t v49 = (a7 - 1418661384) & 0x766163EE;
  __n128 v50 = (__n128)vdupq_n_s32(0x2E215E97u);
  HIDWORD(v104) = v49 ^ 0x3DD;
  char v51 = *(uint64_t (**)(__n128, __n128, __n128, __n128, __n128))(v37 + 8 * v36);
  unsigned int v52 = *(_DWORD *)(v43 - 144);
  HIDWORD(a23) = *(_DWORD *)(v43 - 148);
  unsigned int v53 = *(_DWORD *)(v43 - 140);
  unsigned int v54 = *(_DWORD *)(v43 - 136);
  int v55 = *(unsigned char *)(v43 - 124) ^ 0xCE;
  LODWORD(v101) = *(unsigned __int8 *)(v43 - 124) ^ 0xFFFFFFCE;
  if (v55 == 2)
  {
    int8x16x4_t v106 = vld4q_s8(v44);
    uint8x16_t v81 = (uint8x16_t)veorq_s8(v106.val[0], (int8x16_t)v45);
    uint16x8_t v82 = vmovl_u8(*(uint8x8_t *)v81.i8);
    uint16x8_t v83 = vmovl_high_u8(v81);
    uint8x16_t v84 = (uint8x16_t)veorq_s8(v106.val[1], (int8x16_t)v45);
    _Q22 = vmovl_u8(*(uint8x8_t *)v84.i8);
    _Q21 = vmovl_high_u8(v84);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    uint8x16_t v89 = (uint8x16_t)veorq_s8(v106.val[2], (int8x16_t)v45);
    uint16x8_t v90 = vmovl_high_u8(v89);
    uint16x8_t v91 = vmovl_u8(*(uint8x8_t *)v89.i8);
    v106.val[0] = veorq_s8(v106.val[3], (int8x16_t)v45);
    v106.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v106.val[0]);
    v106.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v106.val[1]);
    v106.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v106.val[1].i8);
    v106.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v106.val[0].i8);
    v106.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v106.val[0]);
    v106.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v106.val[0].i8);
    int32x4_t v92 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v91.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v82.i8), 0x18uLL)), v106.val[0]);
    int32x4_t v93 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v91, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v82), 0x18uLL)), v106.val[3]);
    int32x4_t v94 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v90.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v83.i8), 0x18uLL)), v106.val[1]);
    int32x4_t v95 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v90, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v83), 0x18uLL)), v106.val[2]);
    v106.val[0] = veorq_s8(vandq_s8((int8x16_t)v92, (int8x16_t)v46), (int8x16_t)(*(_OWORD *)v106.val & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v106.val[3] = veorq_s8(vandq_s8((int8x16_t)v93, (int8x16_t)v46), (int8x16_t)(*(_OWORD *)&v106.val[3] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v106.val[1] = veorq_s8(vandq_s8((int8x16_t)v94, (int8x16_t)v46), (int8x16_t)(*(_OWORD *)&v106.val[1] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v106.val[2] = veorq_s8(vandq_s8((int8x16_t)v95, (int8x16_t)v46), (int8x16_t)(*(_OWORD *)&v106.val[2] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    a35 = vaddq_s32(vsubq_s32(v94, vaddq_s32((int32x4_t)v106.val[1], (int32x4_t)v106.val[1])), (int32x4_t)v47);
    a36 = vaddq_s32(vsubq_s32(v95, vaddq_s32((int32x4_t)v106.val[2], (int32x4_t)v106.val[2])), (int32x4_t)v47);
    a33 = vaddq_s32(vsubq_s32(v92, vaddq_s32((int32x4_t)v106.val[0], (int32x4_t)v106.val[0])), (int32x4_t)v47);
    a34 = vaddq_s32(vsubq_s32(v93, vaddq_s32((int32x4_t)v106.val[3], (int32x4_t)v106.val[3])), (int32x4_t)v47);
    v96 = (_DWORD *)&a33 + v41 + 36307424;
    int v97 = *((_DWORD *)&a33 + v41 + 36307416) ^ *(v96 - 3);
    int v98 = v97 + v40 - ((2 * v97) & 0x5C42BD0C);
    int v99 = *(v96 - 16) ^ *(v96 - 14);
    HIDWORD(v100) = v99 ^ 0x2E215E86 ^ v98;
    LODWORD(v100) = v99 ^ ~v98;
    _DWORD *v96 = (v100 >> 31) + v40 - ((2 * (v100 >> 31)) & 0x5C42BD0C);
    return (*(uint64_t (**)(uint64_t))(v37 + 8 * ((744 * (v42 == 36307361)) ^ 0x56Fu)))(a25);
  }
  else if (v55 == 1)
  {
    HIDWORD(v103) = *(_DWORD *)(v43 - 144);
    int8x16x4_t v105 = vld4q_s8(v44);
    uint8x16_t v56 = (uint8x16_t)veorq_s8(v105.val[0], (int8x16_t)v45);
    uint16x8_t v57 = vmovl_u8(*(uint8x8_t *)v56.i8);
    int8x16_t v58 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v57.i8);
    int8x16_t v59 = (int8x16_t)vmovl_high_u16(v57);
    uint16x8_t v60 = vmovl_high_u8(v56);
    int8x16_t v61 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8);
    int8x16_t v62 = (int8x16_t)vmovl_high_u16(v60);
    uint8x16_t v63 = (uint8x16_t)veorq_s8(v105.val[1], (int8x16_t)v45);
    uint16x8_t v64 = vmovl_high_u8(v63);
    uint16x8_t v65 = vmovl_u8(*(uint8x8_t *)v63.i8);
    uint8x16_t v66 = (uint8x16_t)veorq_s8(v105.val[2], (int8x16_t)v45);
    _Q26 = (int8x16_t)vmovl_high_u8(v66);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v66.i8);
    int8x16_t v69 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    int8x16_t v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v105.val[0] = veorq_s8(v105.val[3], (int8x16_t)v45);
    v105.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v105.val[0]);
    v105.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v105.val[1]);
    v105.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v105.val[0].i8);
    v105.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v105.val[0]);
    v105.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v105.val[0].i8), 0x18uLL), v69), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v65.i8, 8uLL), v58));
    v105.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v105.val[3], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v65, 8uLL), v59));
    v105.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v105.val[1].i8), 0x18uLL), v74), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v64.i8, 8uLL), v61));
    v105.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v105.val[2], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v64, 8uLL), v62));
    int32x4_t v75 = (int32x4_t)veorq_s8(vandq_s8(v105.val[0], (int8x16_t)v50), (int8x16_t)(*(_OWORD *)&v58 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v76 = (int32x4_t)veorq_s8(vandq_s8(v105.val[3], (int8x16_t)v50), (int8x16_t)(*(_OWORD *)&v59 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v77 = (int32x4_t)veorq_s8(vandq_s8(v105.val[1], (int8x16_t)v50), (int8x16_t)(*(_OWORD *)&v61 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v78 = (int32x4_t)veorq_s8(vandq_s8(v105.val[2], (int8x16_t)v50), (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    a35 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[1], vaddq_s32(v77, v77)), (int32x4_t)v47);
    a36 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[2], vaddq_s32(v78, v78)), (int32x4_t)v47);
    a33 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[0], vaddq_s32(v75, v75)), (int32x4_t)v47);
    a34 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[3], vaddq_s32(v76, v76)), (int32x4_t)v47);
    unint64_t v79 = (char *)*(&off_99820 + HIDWORD(v104)) - 8;
    HIDWORD(v101) = (a7 - 846348848) ^ 0xABBB6849;
    LODWORD(v102) = (a7 - 846348848) & 0x544495FB;
    HIDWORD(v102) = a7 - 846348848;
    LODWORD(v103) = HIDWORD(a13) + 2026403945;
    LODWORD(v104) = (a7 - 1418661384) & 0x221406C;
    return (*(uint64_t (**)(void, uint64_t, void, void, uint64_t, void, void, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((1991 * (a25 + 1 != v42)) ^ v49)))(*(&off_99820 + v104), a25 + 1, v52, (v39 - 2), v49, -(*((unsigned char *)*(&off_99820 + v104) + a25 + v41) - 26), *(unsigned int *)&v79[4 * a25 + 4 * v41], v79, a9, a10, a11, a12, a13, a14, a15, a16, a17, v101, v102,
             v103,
             __PAIR64__(v54, v53),
             v51,
             a23,
             v104,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32);
  }
  else
  {
    *(_DWORD *)(v43 - 148) = 2 * (*(_DWORD *)(v43 - 148) ^ v39) + v39 - (v38 & (4 * (*(_DWORD *)(v43 - 148) ^ v39)));
    *(_DWORD *)(v43 - 144) = 2 * (v52 ^ v39) + v39 - (v38 & (4 * (v52 ^ v39)));
    *(_DWORD *)(v43 - 140) = 2 * (v53 ^ v39) + v39 - (v38 & (4 * (v53 ^ v39)));
    *(_DWORD *)(v43 - 136) = 2 * (v54 ^ v39) + v39 - (v38 & (4 * (v54 ^ v39)));
    return v51(v45, v46, v47, v48, v50);
  }
}

uint64_t sub_94A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v73 = 235795823 * ((((v72 - 192) | 0x7D9F5389) - (v72 - 192) + ((v72 - 192) & 0x8260AC70)) ^ 0xE9321AD0);
  *(_DWORD *)(v72 - 168) = v73 + v69 + 492;
  *(_DWORD *)(v72 - 184) = -1886077896 - v73;
  *(void *)(v72 - 176) = a68;
  *(void *)(v72 - 192) = 0x6C39C41327E11828;
  *(void *)(v72 - 160) = a69;
  uint64_t v74 = (*(uint64_t (**)(uint64_t))(v71 + 8 * (v69 + 1965)))(v72 - 192);
  int32x4_t v75 = *(uint64_t (**)(uint64_t))(v71
                                          + 8
                                          * (((((v69 - 52) ^ (*(_DWORD *)(v72 - 152) == -1373544826)) & 1)
                                            * (((v69 - 169) | 0x44) + 37)) ^ v69));
  STACK[0x3D8] = *(void *)(v70 + 8 * (v69 - 25)) - 12;
  return v75(v74);
}

uint64_t sub_95C0@<X0>(int a1@<W6>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,int a42,int a43,uint64_t a44)
{
  return sub_28E80(a1 ^ 0x727A1DC4u, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_95F4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  return sub_A0D0(a1, (4 * a3) ^ 0xFB0u, *(_DWORD *)(*v5 + 4 * (a2 - 1071499594 + ((4 * a3) ^ 0xFB0))), v4, a4);
}

uint64_t sub_9624@<X0>(int a1@<W5>, int a2@<W7>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v8 - 220 + ((((a1 + v4 - 665) | 0xAu) ^ 0xFFFFFFC4) & (v5 + a3))) = *(unsigned char *)(v3 + v7 - 353013623)
                                                                                 + (~(2 * *(unsigned char *)(v3 + v7 - 353013623)) | 0x35)
                                                                                 - 26;
  return (*(uint64_t (**)(void))(v6 + 8 * ((a1 + v4 + 441) | (16 * ((a2 + v5 + 1) < 0x40)))))();
}

uint64_t sub_969C@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  uint64_t v10 = (a1 + v7);
  *(unsigned char *)(a2 + v10) = *(unsigned char *)(v2 + v10) ^ *(unsigned char *)(v4 + (v10 & 0xF)) ^ *(unsigned char *)(v5 + (v10 & 0xF)) ^ *(unsigned char *)(v3 + (v10 & 0xF)) ^ (97 * (v10 & 0xF)) ^ 0xE5;
  return (*(uint64_t (**)(void))(v9 + 8 * ((1767 * (a1 - 1 == ((257 * (v8 ^ 0x7D4)) ^ (v6 + 1542)))) ^ (v8 - 1750))))();
}

uint64_t sub_9714(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((((2 * v5) ^ 0x582) + 298) | 0x8E) ^ 0x1B0) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_974C(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v14 = (unsigned int *)(v12 + 4 * v10);
  uint64_t v15 = v10 + 1;
  int v16 = *(_DWORD *)(v12 + 4 * v15);
  unsigned int v17 = v11 ^ ((v16 & 0x7FFFFFFE | v9 & 0x80000000) >> 1);
  *uint64_t v14 = v14[397] ^ a3 ^ *(_DWORD *)(a5 + 4 * (v16 & 1)) ^ (v17 + a2 - ((a1 + (a7 ^ (2 * v8)) - 722) & (2 * v17)));
  return (*(uint64_t (**)(void))(v13 + 8 * (((v15 == 227) * a8) ^ v8)))();
}

uint64_t sub_97BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v9 - 126) ^ 0x659) - 1226) * (v8 == a7)) ^ v9)))();
}

uint64_t sub_9838(_DWORD *a1)
{
  unsigned int v1 = 1374699841 * ((-2 - ((a1 | 0xA88133EE) + (~a1 | 0x577ECC11))) ^ 0x3A8AD418);
  return (*(uint64_t (**)(void))((char *)*(&off_99820 + (int)((*a1 ^ v1) & 0xC20E8598))
                              + 8
                              * (int)((((a1[4] ^ v1 ^ 0xAE215E86) - 1 < 0x63) * (((*a1 ^ v1) + 670) ^ 0x549)) ^ *a1 ^ v1)
                              - 4))();
}

uint64_t sub_98D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8 * ((55 * (a3 <= 3)) ^ (v3 + 370))))(a1, 4188504625, a2, 3803812920, 3312658544, 1860, 1003, 1493);
}

uint64_t sub_9960()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((((v2 ^ 0x2FB) + 1670) ^ (v2 - 1044)) * (v1 == v3)) ^ v2)))();
}

uint64_t sub_9990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  return sub_125E0(2282780948, a2, a3, a4, a5, a6, a7, 3980823791, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

void sub_99AC(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 24) != 0x7761D79CB8DF4D13
    && *(void *)(a1 + 8) != 0x102FB98998D77CDDLL
    && *(void *)(a1 + 40) != 0x27EFF0CD9F36B463;
  int v1 = *(_DWORD *)a1 - 1224239923 * ((-2 - ((~a1 | 0x50890EB9) + (a1 | 0xAF76F146))) ^ 0xA23AF36E);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_9AD4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * (((*(_DWORD *)(a20 + 4 * (a1 + v21 + 1603)) == v20)
                                * (((v23 - 4) | 4) ^ 0x3E9)) ^ v23)))();
}

uint64_t sub_9B20()
{
  uint64_t v8 = v2 - 1;
  *(unsigned char *)(v4 + v8) = ((v1 + 1) ^ v3) * (v1 + 18);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 == v5) * v6) ^ v0)))();
}

uint64_t sub_9FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  BOOL v19 = a3 > 0xA06006;
  unint64_t v20 = a1
      - 0x689170CABB1BB2A6
      + ((v11 + ((v9 + v15) & v16) - 405) ^ 0x1B21A8FA)
      + v13 * (unint64_t)(*(_DWORD *)(*v12 + 4 * a4) ^ v11);
  *(_DWORD *)(a5 + 4 * v14) = v20 + v11 - ((v20 << ((v9 + 23) & v17 ^ v18)) & 0x364351F4);
  uint64_t v21 = (a2 ^ HIDWORD(v20)) + (a7 & (v20 >> 31)) + v10;
  if (v19 == a4 + 2136973306 < v7) {
    BOOL v19 = a4 + 2136973306 < a6;
  }
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (v9 ^ ((4 * v19) | (16 * v19)))))(v21);
}

uint64_t sub_A0D0@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 24) + (a4 + a5)) = (a3 ^ v7) >> v8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1464 * (a4 - 1 == ((a2 + 939302187) & 0xC80367F6) + v6)) ^ a2)))();
}

uint64_t sub_A12C@<X0>(int a1@<W8>)
{
  *(void *)(v2 - 1397079334 + v4 - 220 - 1760 + ((a1 - 1283771627) & 0x4C84CFFF)) = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(void))(v3 + 8 * ((44 * ((v1 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ a1)))();
}

uint64_t sub_A198@<X0>(uint64_t a1@<X8>)
{
  int v6 = 7 * (v1 ^ 0x425);
  int v7 = v1 - 195;
  BOOL v8 = v4 - 32122991 < -1053336894;
  uint64_t v9 = 4 * (v6 - 182);
  unsigned int v10 = (*(_DWORD *)(*(void *)(a1 - 0x67843F9A1244BAC3) + v9) ^ 0xE4DE5705) + 1;
  *(_DWORD *)(*(void *)(a1 - 0x67843F9A1244BAC3) + v9) = v10 + v2 - (v5 & (2 * v10));
  if (v4 - 32122991 >= -1053336894) {
    BOOL v8 = v4 - 32122991 > 1094146755;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8 * ((253 * !v8) ^ v7)))(3310070269, 3839776517, 109249910);
}

uint64_t sub_A26C()
{
  unsigned int v5 = (v1 + 741284429) & 0xD3D0E5B4;
  unsigned int v6 = *(_DWORD *)(v2 + 16) - v0 - 2052113801;
  BOOL v8 = (*(unsigned char *)(v3 - 0x7761D79CB8DF4CFFLL) & 1) == 0 || v6 > 0xFFFFFFBE;
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((v8 * (((5 * (v5 ^ 0x1DC) + 1701594610) & 0x9A93BDFF) - 1307)) ^ v5)))();
}

uint64_t sub_A310(uint64_t a1, int a2, int a3)
{
  int v9 = v4 + v3;
  if ((a3 + v9 + 1) > 0x40) {
    a2 = a3 + v9 + 1;
  }
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((25
                                * (((v7 + 1498314822) & 0x185EF ^ 0x4FDBF230) - v9 >= v6 + v5 + (v7 ^ 0x4FDBF07A) + a2)) ^ v7)))();
}

void sub_A388(_DWORD *a1, int a2)
{
  int v9 = (v5 - 1402469611) | 8;
  *((unsigned char *)a1 + v4 + 4) = v8;
  int v10 = v7 + v3;
  *a1 = v7 + v3 + 1041861450;
  unsigned int v11 = a1 + 1;
  *((unsigned char *)v11 + (a2 + v3)) = v6;
  *((unsigned char *)v11 + (v2 + v3 - 2)) = -106;
  *((unsigned char *)v11 + (v10 - 43950353)) = -92;
  *((unsigned char *)v11 + v10 + ((v9 + 1402469603) ^ 0xAEF6A381)) = 103;
  JUMPOUT(0x18370);
}

uint64_t sub_A410()
{
  unsigned int v4 = v1 - 14;
  if (v4 <= 0x40) {
    unsigned int v4 = 64;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((218 * (-v2 - v0 + v4 + 14 < 0xF)) ^ 0x34Cu)))();
}

void sub_A47C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a1 + a2) = 1372200252;
  sub_32F7C();
}

uint64_t sub_A48C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v11 = *(unsigned __int8 *)(v7 + (a2 + a6)) | ((((v10 - 114) | 0x646) ^ 0x71369657) + (a3 << 8));
  return (*(uint64_t (**)(uint64_t, void, void))(v8 + 8 * ((676 * (v9 - 1 == a7 + 1623)) ^ v10)))(a1, (a2 + 1), (v11 ^ 0xCFEEEFFB) + 2090850677 + ((2 * v11) & 0x9FDDDFF6));
}

uint64_t sub_A50C@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((v3 + 1344634787) & 0xAFDA79FF ^ 0x150)
                                     * (*(_DWORD *)(v4 + 48 * (v2 + a1) + 36) == a2)) ^ v3)))();
}

uint64_t sub_A570@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v10 = 4 * (v6 + v3);
  int v11 = (*(_DWORD *)(*(void *)(v9 - 0x67843F9A1244BAC3) + v10) ^ v4)
      - (*(_DWORD *)(*(void *)(a2 - 0x67843F9A1244BAC3) + v10) ^ v4);
  *(_DWORD *)(*(void *)(a1 - 0x67843F9A1244BAC3) + v10) = v11
                                                            + v4
                                                            - ((v11 << ((26 * ((v8 - 59) ^ 0x37)) ^ 0x2F)) & v7);
  BOOL v12 = v6 - 748435184 < (int)(v2 + 377834560);
  if (v2 > 0x697AB3BF != v6 - 748435184 < -1769649088) {
    BOOL v12 = v2 > 0x697AB3BF;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((101 * v12) ^ (v8 - 827) ^ 0x3B2)))();
}

unsigned int *sub_A6A4@<X0>(unsigned int *result@<X0>, int a2@<W8>)
{
  *uint64_t result = ((*(_DWORD *)(*(void *)(v2 - 0x67843F9A1244BAC3) + 4 * v4) ^ 0x1B21A8FAu) >> v3) & 1 | a2;
  return result;
}

uint64_t sub_A6DC(double a1, int8x16_t a2)
{
  unsigned int v4 = (LODWORD(STACK[0x3FC]) + 785875599) & 0xD1287AAE;
  int8x16_t v5 = (int8x16_t)vld1q_dup_f32((const float *)v2);
  v6.i64[0] = 0x8000000080000000;
  v6.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(v2 + 4);
  a2.i32[2] = *(_DWORD *)(v2 + 12);
  int8x16_t v7 = vextq_s8(v5, a2, 0xCuLL);
  int8x16_t v8 = a2;
  v8.i32[3] = *(_DWORD *)(v2 + 16);
  int32x4_t v9 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v8, *(int8x16_t *)&STACK[0x320]), vandq_s8(v7, v6)), 1uLL), *(int8x16_t *)&STACK[0x310]);
  v10.i32[0] = *((_DWORD *)&STACK[0x1918] + (*(unsigned int *)(v2 + 4) & ((v4 - 282) ^ 0x175)));
  v10.i32[1] = *((_DWORD *)&STACK[0x1918] + (*(_DWORD *)(v2 + 8) & 1));
  v10.i32[2] = *((_DWORD *)&STACK[0x1918] + (*(_DWORD *)(v2 + 12) & 1));
  v10.i32[3] = *((_DWORD *)&STACK[0x1918] + (v8.i8[12] & 1));
  *(int8x16_t *)uint64_t v2 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v2 + 1588), v10), *(int8x16_t *)&STACK[0x2E0]), (int8x16_t)vaddq_s32(vsubq_s32(v9, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v9, v9), *(int8x16_t *)&STACK[0x300])), *(int32x4_t *)&STACK[0x2F0]));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v3 + 8 * (int)(v4 ^ 0x19)))(2920037996, 1460018998, 907099620, 373, &STACK[0x1918]);
}

uint64_t sub_A6E4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((785 * ((v1 - 368391659) & 0x15F5352F ^ 0x521) - 1522) ^ v0) > 7) | v1)))();
}

uint64_t sub_A730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,_DWORD *a27,_DWORD *a28)
{
  *a27 = 24759839;
  uint64_t v32 = (*a28 + 723385280);
  uint64_t v33 = 235795823 * ((v31 - 144) ^ 0x8B0BAFE94AD4959);
  *(_DWORD *)(v31 - 104) = (v28 - 827113830) & 0xBAFF7BD8 ^ v33;
  *(_DWORD *)(v31 - 100) = v28 - 827113830 + v33;
  *(_DWORD *)(v31 - 128) = v33 + v28 - 1015666717;
  *(void *)(v31 - 136) = v32 ^ v33;
  *(void *)(v31 - 120) = v33 + 2240972268;
  *(_DWORD *)(v31 - 112) = v33 + 1;
  *(_DWORD *)(v31 - 108) = (v28 - 827113939) ^ v33;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v30 + v28 + 1372)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * *(int *)(v31 - 144)))(v34);
}

uint64_t sub_A81C()
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v2 + 738)))(v1);
  LODWORD(STACK[0x5CC]) = v0;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((STACK[0x580] != 0) * (((v2 - 1267) ^ 0x6D2) - 1469)) ^ (v2 + 527))))(v4);
}

uint64_t sub_A88C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((7 * (((((LODWORD(STACK[0x3FC]) - 910) | 0x15) ^ 0xD6) & a1) == 0)) ^ (LODWORD(STACK[0x3FC]) - 1222))))();
}

void sub_A8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  LODWORD(STACK[0x520]) ^= a30;
  JUMPOUT(0x9C5CLL);
}

uint64_t sub_A8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((((v6 + v8 + 778457624 + 163) | a5) - 95) ^ (v8 + 778457624) & v6) * (v5 > 1)) ^ v8)))();
}

uint64_t sub_A8F4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  if (a3) {
    BOOL v12 = a10 == v10 + ((a1 - 223) ^ 0x3D7) - 727;
  }
  else {
    BOOL v12 = 1;
  }
  int v14 = !v12 && a4 != 0;
  return (*(uint64_t (**)(void))(v11 + 8 * ((v14 * (((a1 - 223) | 0x680) ^ 0x7B8)) ^ a1)))();
}

uint64_t sub_A950@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1004 * ((v2 + 1388 + a1 - 1756634936) < 0x38)) ^ (v2 + 472))))();
}

uint64_t sub_A99C@<X0>(int a1@<W8>)
{
  *(void *)(v1 - 0x31FD77B69BC3E185) = (*v3 + a1) + *(void *)(v4 - 0x7761D79CB8DF4D13) + 8;
  return (*(uint64_t (**)(void))(v7 + 8 * ((375 * (*v6 == v5)) ^ v2 ^ 0x153)))();
}

uint64_t sub_AA00()
{
  int v2 = v0 ^ 0x273;
  unsigned __int8 v3 = (v0 ^ 0x73) - 52;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0xD0E)))(1576, 2940923044);
  STACK[0x458] = v4;
  return (*(uint64_t (**)(void))(v1 + 8 * ((26 * (((v4 == 0) ^ v3) & 1)) ^ v2)))();
}

uint64_t sub_AA80@<X0>(uint64_t a1@<X8>)
{
  BOOL v5 = v3 - a1 - 0x843828D0CDF342DLL + (unint64_t)(((2 * (v2 + 221)) ^ 0xC50u) + 50331659 + v1 - 279) < 0x10;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((16 * (((v2 + 123) ^ v5) & 1)) & 0xBF | ((((v2 + 123) ^ v5) & 1) << 6)) ^ (v2 + 221))))();
}

uint64_t sub_AAF8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((v4 - 785726711) > 7) * ((((a4 ^ 0x6E7) - 670) | 1) ^ 0x204)) ^ a4 ^ 0x6E7)))();
}

uint64_t sub_AB50@<X0>(uint64_t a1@<X8>)
{
  int v9 = STACK[0x4A0];
  unsigned int v10 = 1755732067 * (v1 ^ 0xDEC6BDDB);
  *(void *)(v8 - 192) = v6 + 0x3AC75C5FABFFD32DLL;
  *(void *)(v8 - 184) = a1;
  STACK[0x338] = v2;
  *(void *)(v8 - 160) = v2;
  *(void *)(v8 - 144) = v6 + 0x1B326768DCF9E3AELL;
  *(_DWORD *)(v8 - 176) = v10 + 680 * (v5 ^ v3) + 854622387 * v9 - 1873543765;
  *(_DWORD *)(v8 - 172) = v10 + v5 - 2024873194;
  *(_DWORD *)(v8 - 168) = (575096879 * v4 + 1470712469) ^ v10;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v7 + 8 * (v5 ^ 0x8C1)))(v8 - 192);
  int v12 = *(_DWORD *)(v8 - 152);
  LODWORD(STACK[0x5B4]) = v12;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((1999 * (v12 == -1373544826)) ^ v5)))(v11);
}

uint64_t sub_AC44@<X0>(int a1@<W8>)
{
  int v6 = STACK[0x528];
  uint64_t v7 = (_DWORD *)STACK[0x3C8];
  unint64_t v8 = STACK[0x3C8] + 24 * (v1 - 1321678225 + ((a1 - 1045826904) & 0x3E560DD9u) - 1359);
  *(_DWORD *)(v8 + 8) = v4;
  *(_DWORD *)(v8 + 12) = v3;
  *(void *)(v8 + 16) = STACK[0x3A0];
  *(_DWORD *)(v8 + 24) = v6;
  *uint64_t v7 = v1 + 1;
  BOOL v10 = v2 + 1743106478 > 1717150907 || v2 + 1743106478 < SLODWORD(STACK[0x378]);
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a1 - 35476763) & 0x21D537E ^ 0x67) * v10) ^ a1)))();
}

uint64_t sub_ACF0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, int a8)
{
  uint64_t v13 = v8 + 1;
  BOOL v15 = v10 == (((v9 + 113) | a1) ^ ((v9 + 41) | a6) ^ a7) || v13 == v11 + 200;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v15 * a8) ^ v9)))();
}

void sub_AD34()
{
  uint64_t v0 = __chkstk_darwin();
  if (*(void *)v0) {
    BOOL v2 = *(void *)(v0 + 16) == 0x4CAF57822185BF99;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  int v1 = *(_DWORD *)(v0 + 24) + 1374699841 * ((~v0 & 0x2CB30A96 | v0 & 0xD34CF569) ^ 0x4147129F);
  __asm { BRAA            X8, X17 }
}

_DWORD *sub_AE48(_DWORD *result)
{
  *uint64_t result = 584148097;
  return result;
}

void sub_AE58(int a1@<W8>)
{
  **(_DWORD **)(v1 - 0x67843F9A1244BAC3) = (v2 + 978157314) ^ ((v3 - 621) | 0x25A) ^ 0x216CD523;
  *(_DWORD *)(v1 - 0x67843F9A1244BAC7) = a1 + 1;
}

uint64_t sub_AEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((62 * ((((unint64_t)(a13 + v13 - a1) < 0x10) ^ (v14 - 1)) & 1)) ^ v14)))();
}

uint64_t sub_AF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  return (*(uint64_t (**)(uint64_t))(v33
                                            + 8
                                            * ((((a33 - 1098794476) < 0xFFFFFFFB)
                                              * (((v34 - 31) | 0x19C) ^ 0x1B6)) ^ (v34 + 1105))))(a1);
}

uint64_t sub_AFA8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((124 * (v2 + v1 + (v0 ^ 0x183u) + 437 < 4)) ^ v0)))();
}

uint64_t sub_AFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  char v51 = (_DWORD *)(a27 + 24 * v43);
  *char v51 = v47;
  v51[1] = v45;
  *(void *)(v48 + 24 * v43 + 16) = v50;
  v51[4] = a32;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((1067 * (*(_DWORD *)(a4 + 48 * v46 + 32) + 1967413501 < (((v42 ^ (v44 + 214)) - v44 + 1634) ^ 0x80000661))) ^ v42)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_B06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  uint64_t v24 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((v23 - 1131) ^ (658 * ((a22 & 0x20000000) == 0))));
  return v24(a1, v24, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_B09C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)(((v0 == 0x57FADEEBDD29AE6) * ((v1 + 26812047) & 0xFE66DFE3 ^ 0x39D)) ^ v1)))();
}

uint64_t sub_B0EC@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W4>, int a4@<W8>)
{
  *(unsigned char *)(v6 + v5) = *(unsigned char *)(v9 + (v4 + a1))
                      - (v7 & (2 * *(unsigned char *)(v9 + (v4 + a1))))
                      - 27;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 == 63) * a2) ^ (a3 + a4 + 199))))();
}

void sub_B134(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned char *a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned char *a23,uint64_t a24,uint64_t a25,unsigned char *a26,uint64_t a27,unsigned char *a28,unsigned char *a29,unsigned char *a30,unsigned char *a31,unsigned char *a32,unsigned char *a33,unsigned char *a34)
{
  uint64_t v43 = ((a7 ^ 0x32C05921B005B848) + v41 - 2 * ((a7 ^ 0x32C05921B005B848) & (v41 + 32) ^ a7 & 0x20)) ^ a6;
  uint64_t v44 = (((v36 << ((v39 - 80) ^ 0xC4u)) | (v34 - 79274182))
       + 0x6DB7B20BBF96EA95
       - 2
       * (((v36 << ((v39 - 80) ^ 0xC4u)) | (v34 - 79274182)) & 0x6DB7B20BBF96EAB7 ^ (v34 - 79274182) & 0x22)) ^ v37;
  unint64_t v45 = v44 ^ 0xA173397C065C8DEALL;
  uint64_t v46 = v44 ^ 0x5E8CC683F9A37215;
  uint64_t v47 = ((v44 ^ 0x5E8CC683F9A37215)
       + 0x1EC5A4A56706F2AALL
       - ((2 * (v44 ^ 0x5E8CC683F9A37215)) & 0x3D8B494ACE0DE554)) ^ v38;
  uint64_t v48 = v47 ^ 0x629A61E2FE92CDE4;
  unint64_t v49 = v43 ^ 0x8ABB7B075CE8A96ELL;
  unint64_t v50 = (v47 ^ 0x629A61E2FE92CDE4) & v45 ^ v43 ^ 0x8ABB7B075CE8A96ELL;
  unint64_t v51 = v35 ^ 0xBF323BF9DB38FEFALL;
  unint64_t v52 = (v47 ^ 0x9D659E1D016D321BLL) & (v35 ^ 0xBF323BF9DB38FEFALL) ^ v46 ^ v50;
  *((void *)&v53 + 1) = v52 ^ 0xABEF87C8808CCB5;
  *(void *)&long long v53 = v52 ^ 0x8000000000000000;
  uint64_t v54 = v52 ^ __ROR8__(v52, 39) ^ (v53 >> 61);
  uint64_t v55 = v46 & (v43 ^ 0x754484F8A3175691);
  uint64_t v56 = v50 ^ 0xF38BFF733C051F6;
  unint64_t v57 = a7 ^ 0x32C05921B005B848 ^ v35 ^ 0xBF323BF9DB38FEFALL;
  unint64_t v58 = v55 ^ v57;
  uint64_t v59 = (v55 ^ v57) & 0x200000000;
  BOOL v60 = (v56 & v59) == 0;
  uint64_t v61 = v59 | 0x5E403E4D98A0DFB4;
  if (!v60) {
    uint64_t v61 = 0xBC807C9B3141BF68 - v61;
  }
  unint64_t v62 = ((v56 + v61 - 0x5E403E4D98A0DFB4) ^ (0x5E403E4D98A0DFB4 - (v56 + v61)) ^ ((v58 & 0xFFFFFFFDFFFFFFFFLL)
                                                                                    - ((v56 + v61 - 0x5E403E4D98A0DFB4) ^ v58 & 0xFFFFFFFDFFFFFFFFLL)))
      + (v58 & 0xFFFFFFFDFFFFFFFFLL);
  unint64_t v63 = v62 - ((2 * v62) & 0xF9ADD5D921835D00) - 0x32915136F3E5180;
  *((void *)&v64 + 1) = v63 ^ 0x1AE80;
  *(void *)&long long v64 = v63 ^ 0xFCD6EAEC90C00000;
  uint64_t v65 = ((v64 >> 19) - ((2 * (v64 >> 19)) & 0xF9ADD5D921835D00) - 0x32915136F3E5180) ^ v63;
  uint64_t v66 = (v58 << 23) ^ (v58 >> 7) ^ ((v58 >> 41) | (v58 << 57)) ^ 0x1EC655AF97FB0312;
  unint64_t v67 = v58 ^ 0xCE3FEF428C6AADCELL ^ (v66 - ((2 * v66) & 0xF20D916BB84ADA78) + 0x7906C8B5DC256D3CLL);
  unint64_t v68 = v67 ^ (v63 << 36) ^ (v65 & 0x88A7E47BC54E7E29 ^ ((v63 >> 28) ^ 0xFCD6EAEC9) & 0xBC54E7E29 | v65 & 0x77581B843AB181D6 ^ ((v63 >> 28) ^ 0xFCD6EAEC9) & 0x43AB181D6);
  uint64_t v69 = v48 ^ v57 & (v35 ^ 0x40CDC40624C70105);
  unint64_t v70 = v49 & ~v57 ^ v51 ^ v69;
  unint64_t v71 = ((v70 >> 10) ^ (v70 >> 17) | (v70 << 54)) ^ 0xF5EC3F377C10F093;
  unint64_t v72 = v70 ^ 0x8CC2F1154917B5F3 ^ (v71 - ((2 * v71) & 0x7ABA2642C505A448) + 0x3D5D13216282D224);
  unint64_t v73 = v72 & 0x4C1D4E44A4B3031DLL ^ ((v70 << 47) ^ 0xB3EB800000000000) & 0x4C1D000000000000 | v72 & 0xB3E2B1BB5B4CFCE2 ^ ((v70 << 47) ^ 0xB3EB800000000000) & 0xB3E2800000000000;
  uint64_t v74 = v73 - 2 * (v73 & 0x5C37298372F631AELL ^ v72 & 0x20) + 0x5C37298372F6318ELL;
  unint64_t v75 = v74 ^ (v67 - ((2 * v67) & 0xB86E5306E5EC631CLL) + 0x5C37298372F6318ELL);
  uint64_t v76 = v68 ^ 0xC1AE80000000000;
  *((void *)&v64 + 1) = ~v69;
  *(void *)&long long v64 = v69 ^ 0x92CFC162FD513142;
  unint64_t v77 = v69 ^ 0xDC6E8A9B512F3AC0 ^ (((v69 << 58) ^ 0xC00000000000000)
                                    - ((2 * ((v69 << 58) ^ 0xC00000000000000)) & 0x9FFFFFFFFFFFFFFFLL)
                                    + 0x4EA14BF9AC7E0B83);
  uint64_t v78 = ((v69 ^ 0x92CFC162FD513166) >> (v58 & 6 ^ 2) >> (v58 & 6 ^ 4)) ^ (v64 >> 1) ^ v54 ^ 0xC4D4B7916925957CLL ^ (v77 - ((2 * v77) & 0x6EF4BCE914704872) - 0x4885A18B75C7DBC7);
  unint64_t v79 = (v74 ^ 0xA3C8D67C8D09CE71) & v67 ^ v78;
  unint64_t v80 = v79 ^ v74 ^ (((v68 ^ 0xC1AE80000000000) & ~v75)
                   - ((2 * ((v68 ^ 0xC1AE80000000000) & ~v75)) & 0xB86E5306E5EC631CLL)
                   + 0x5C37298372F6318ELL);
  unint64_t v81 = ((v80 >> 10) & 0x2000000000000 ^ 0xFFFFFCDEFBFFBD7DLL) + 2 * ((v80 >> 10) & 0x2000000000000);
  unint64_t v82 = (v68 ^ 0xF3E517FFFFFFFFFFLL) & (v54 ^ 0x73AEE9E5E31DB145) ^ v75;
  unint64_t v83 = ((v82 >> 41) ^ (v82 >> 7) | (v82 << 57)) ^ (v82 << 23) ^ 0xF774B04353CE1CF4;
  uint64_t v84 = v83 - ((2 * v83) & 0x6F16C3181610451ALL) - 0x48749E73F4F7DD73;
  unint64_t v85 = v81 + 0x67E8D3FD3637F6BBLL;
  if (((v81 + 0x32104004283) & (v80 ^ 0x28E000000000000)) != 0) {
    unint64_t v85 = 0x67E8CDBB2E3771B5 - v81;
  }
  unint64_t v86 = (v80 >> 10) & 0xFFFDFFFFFFFFFFFFLL ^ 0xA3E966F75234 ^ ((v80 ^ 0x28FA59BDD48D0B6) - 0x67E8D0DC3237B438 + v85);
  uint64_t v87 = ((v86 >> 38) & 0x2A35FE4) + (v86 >> 39) - 2 * ((v86 >> 38) & 0x2A35FE4) + 0x61376A34D751AFF2;
  *((void *)&v88 + 1) = v80 ^ 0xD0B6;
  *(void *)&long long v88 = v80 ^ 0x28FA59BDD480000;
  uint64_t v89 = (((v87 << 39) ^ (v80 << 54)) & 0xFFFFFF8000000000 | ((v87 ^ (v86 << 25)) >> 25)) ^ (v88 >> 17);
  unint64_t v90 = v76 ^ v78 & (v54 ^ 0x8C51161A1CE24EBALL);
  unint64_t v91 = (((v74 ^ 0x5C37298372F6318ELL) & ~v78)
       - ((2 * ((v74 ^ 0x5C37298372F6318ELL) & ~v78)) & 0x6EF4BCE914704872)
       - 0x4885A18B75C7DBC7) ^ v54 ^ 0xC4D4B7916925957CLL ^ v90;
  unint64_t v92 = (8 * v91) ^ (v91 >> 39) ^ 0xBA3E0AB73A03F932 ^ ((*(unsigned char *)(v40
                                                                                     + (((v91 >> 57) ^ 0x2B) & 0x70 ^ 0xFE)) ^ ((((v91 >> 57) ^ 0x2B) & 0x70 ^ 0xDE) + (((v91 >> 57) ^ 0x2B) & 0x70 ^ 0x4B)) ^ 0xA1)
                                                                         - 122);
  unint64_t v93 = (v92 - ((2 * v92) & 0xC6CFDCA813A16390) - 0x1C9811ABF62F4E38) ^ v91;
  unint64_t v94 = (v93 ^ 0xB4202F02EE851F1ELL)
      + ((v91 << 25) ^ 0xADCEAB5DAC000000)
      - 2 * ((v93 ^ 0xB4202F02EE851F1ELL) & ((v91 << 25) ^ 0xADCEAB5DAC000000));
  unint64_t v95 = v84 ^ v82;
  unint64_t v96 = v82 ^ v90;
  *(void *)&long long v88 = __ROR8__(__ROR8__(v96 ^ 0x787EEEF1A7EE72F1, 16) ^ 0x1712D402E105A6CBLL, 48);
  unint64_t v97 = v96 ^ 0xAC7C0FF4012565E3 ^ ((v96 ^ 0xAC7C0FF4012565E3) >> 19) ^ ((unint64_t)v88 >> 28) ^ ((void)v88 << 36) ^ ((void)v88 << 45) ^ v95;
  *((void *)&v88 + 1) = v97 ^ 0x1C8;
  *(void *)&long long v88 = v97 ^ 0x2DB35D748A885600;
  uint64_t v98 = v94 - 2 * (v94 & 0x16CD819CC9B85F4 ^ v93 & 0x40) - 0x7E9327E633647A4CLL;
  unint64_t v99 = v89 ^ 0x8557F9309BB51A6BLL;
  unint64_t v100 = v89 ^ 0x8557F9309BB51A6BLL ^ v95;
  unint64_t v101 = v100 ^ 0x2DB35D748A8857C8 ^ (v98 ^ 0x816CD819CC9B85B4) & ((((unint64_t)(v88 >> 9) ^ 0x284B28057C49B8D1) >> (v69 & 0x37 ^ 3) >> (v69 & 0x37 ^ 0x34)) ^ (((unint64_t)(v88 >> 9) ^ 0x284B28057C49B8D1) << 9) ^ 0x69AFF5076C8E5DAFLL);
  *((void *)&v88 + 1) = v101 ^ 0x118501E2B14;
  *(void *)&long long v88 = v101 ^ 0x26974A0000000000;
  uint64_t v102 = v101 ^ 0x21BCE6A3A42CEDA8 ^ (((v88 >> 41) ^ (v101 << 57) ^ 0x2800000000000000)
                                      - 2 * (((v88 >> 41) ^ (v101 << 57)) & 0x72BADBBF432C6BELL ^ (v88 >> 41) & 2)
                                      + 0x72BADBBF432C6BCLL);
  uint64_t v103 = v102 + ((v101 >> 7) ^ 0x4D2E9630A03C56) - 2 * (v102 & ((v101 >> 7) ^ 0x4D2E9630A03C56));
  unint64_t v104 = (v79 >> 1) ^ (v79 >> 6) ^ (v79 << 58) ^ 0xDE1FAE11AA0A9F1DLL;
  uint64_t v105 = v79 ^ 0x63DBD0D498974E6ELL ^ (v104 - ((2 * v104) & 0x193D4E9663911CA8) + 0xC9EA74B31C88E54);
  unint64_t v106 = v105 & 0xF47FF077890F9720 ^ (v79 << 63) | v105 & 0xB800F8876F068DFLL;
  uint64_t v107 = (v100 ^ 0x2DB35D748A8857C8) & (v89 ^ 0x7AA806CF644AE594);
  unint64_t v108 = ((v100 ^ 0xD24CA28B7577A837) & (v97 ^ 0x2DB35D748A8857C8))
       - ((2 * ((v100 ^ 0xD24CA28B7577A837) & (v97 ^ 0x2DB35D748A8857C8))) & 0xBD3617C5B1C3A084);
  uint64_t v109 = v98 ^ (v106 - 2 * (v106 & 0x16CD819CC9B85BFLL ^ v105 & 0xB) - 0x7E9327E633647A4CLL);
  unint64_t v110 = v107 ^ v109;
  uint64_t v111 = v110 ^ v99 ^ (v108 + 0x5E9B0BE2D8E1D042);
  *((void *)&v88 + 1) = v111 ^ 0x374;
  *(void *)&long long v88 = v111 ^ 0x2DEBA78A88D11800;
  uint64_t v112 = v111 ^ 0x5E9B0BE2D8E1D042 ^ ((v111 ^ 0x5E9B0BE2D8E1D042uLL) >> 17) ^ (v88 >> 10) ^ ((v111 ^ 0x5E9B0BE2D8E1D042) << 47);
  unint64_t v113 = v97 ^ 0xE3CF220AE2FEDEB8 ^ (((v98 ^ 0x7E9327E633647A4BLL) & v106)
                                     - ((2 * ((v98 ^ 0x7E9327E633647A4BLL) & v106)) & 0x9CF8FEFCD0ED12E0)
                                     - 0x3183808197897690);
  unint64_t v114 = ((v113 ^ v99 & ~v109) - ((2 * (v113 ^ v99 & ~v109)) & 0x2D9B03399370B68) - 0x7E9327E633647A4CLL) ^ v98;
  *((void *)&v88 + 1) = v114 ^ 0x38FE43D2BCLL;
  *(void *)&long long v88 = v114 ^ 0x3278F80000000000;
  uint64_t v115 = v103 + (v112 ^ 0x16EB95D00604E32ELL) - 2 * (v103 & (v112 ^ 0x16EB95D00604E32ELL));
  unint64_t v116 = __ROR8__(v114, 61) ^ (v114 << 25) ^ __ROR8__((v88 >> 38) ^ (v114 >> 39 << 26) ^ 0xC258A8B62E885BC3, 26);
  *((void *)&v88 + 1) = v110 ^ 0x548B80C;
  *(void *)&long long v88 = v110 ^ 0x7955EAEC48000000;
  unint64_t v117 = ((v110 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (v88 >> 27);
  unint64_t v118 = (v110 >> 6) ^ (v110 >> 1) ^ (((v117 << 27) ^ (v110 << 63)) & 0xFFFFFFFFF8000000 | (v117 >> 37));
  unint64_t v119 = v116 ^ v118;
  unint64_t v120 = v116 ^ v118 ^ 0xC51AEF5B5CC303B1;
  unint64_t v121 = v120 ^ v115 & (v112 ^ 0xE9146A2FF9FB1CD1);
  unint64_t v122 = (v121 >> 1) ^ (v121 >> 6);
  unint64_t v123 = (v122 | (v121 << 63)) ^ (v121 << 58) ^ 0x82A267617DDD3C0DLL;
  uint64_t v124 = (v123 - 2 * (v123 & 0x7EBC29819D2C087ALL ^ v122 & 0x30) - 0x143D67E62D3F7B6) ^ v121;
  uint64_t v125 = v124 ^ 0x2D6637B2FD938C70;
  unint64_t v126 = (v118 ^ 0x853759C940934A2BLL) + (v120 | v116 ^ 0xBFD2496DE3AFB665) + 1;
  unint64_t v127 = v113 ^ v101;
  uint64_t v128 = (v127 >> 19) ^ (v127 << 36) ^ (v127 << 45) ^ 0x2A792D60982B22B5;
  uint64_t v129 = (v127 >> 28) ^ 0x6E04C1591;
  unint64_t v130 = v127 ^ 0x26C2CAED819D93A9 ^ (v128 - ((2 * v128) & 0x918C1769286C2B46) + 0x48C60BB4943615A3);
  unint64_t v131 = (v130 & 0x26452CB7C950B7B6 ^ v129 & 0x7C950B7B6 | v130 & 0xD9BAD34836AF4849 ^ v129 & 0x836AF4849) ^ v103;
  unint64_t v132 = v126 & 1;
  unint64_t v133 = (v126 & 0xFFFFFFFFFFFFFFFELL) - ((2 * v126) & 0xCF01D65F04156390) + 0x6780EB2F820AB1C8;
  if ((v132 & v131) != 0) {
    uint64_t v134 = v131 - v132 - ((2 * (v131 - v132)) & 0xCF01D65F04156390) + 0x6780EB2F820AB1C8;
  }
  else {
    uint64_t v134 = v131 ^ 0x6780EB2F820AB1C8 ^ v132;
  }
  unint64_t v135 = v134 ^ v133;
  uint64_t v136 = v116 ^ 0x402DB6921C50499ALL;
  unint64_t v137 = (v119 ^ 0x3AE510A4A33CFC4ELL) & (v112 ^ 0x16EB95D00604E32ELL) ^ v136 ^ v134 ^ v133;
  unint64_t v138 = ((8 * v137) ^ 0x12BB25DAC3BED128) & (v137 ^ 0x425764BB5877DA20) ^ __ROR8__(v137, 39) ^ (v137 ^ 0xBACDD3CE8F7A987ALL ^ (-(uint64_t)((v137 >> 61) ^ 2) - 0x765488A28F2BDA1) | (8 * v137) ^ 0x12BB25DAC3BED128);
  unint64_t v139 = v138 ^ 0xD7E1EF54E2AA4150 ^ (v125
                                      - 2 * ((v124 ^ 0x2D6637B2FD938C70) & 0x215100E0A82EEF9DLL ^ v124 & 4)
                                      - 0x5EAEFF1F57D11067);
  unint64_t v140 = v139 & 0xA9AD36174A77719DLL | (v138 ^ 0xD7E1EF54E2AA4150 ^ (v125
                                                                     - 2 * (v125 & 0x215100E0A82EEF9FLL ^ v124 & 6)
                                                                     + 0x215100E0A82EEF99)) & 0x5652C9E8B5888E62;
  unint64_t v141 = v140 - 2 * (v140 & 0x20E79BEA82685F7BLL ^ v139 & 0x10);
  unint64_t v142 = v136 & ~v131 ^ v115;
  unint64_t v143 = ((v142 + (v142 ^ 0x8F38572C0C9BC202) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v142;
  unint64_t v144 = v143 - 0x59F2A5370C103C39 + (~(2 * v143) | 0xB3E54A6E18207873);
  uint64_t v145 = v144 & 0x10000000000000 | 0x70EBFD95D6695370;
  if (((v144 >> 7) & v144 & 0x10000000000000) != 0) {
    uint64_t v145 = 0xE1D7FB2BACD2A6E0 - v145;
  }
  unint64_t v146 = v144 & 0xFFEFFFFFFFFFFFFFLL ^ (v144 >> 41) ^ (v144 << 23) ^ (v144 << 57) ^ (((v144 >> 7) ^ 0x14C1AB591E7DF87)
                                                                                   - 0x70EBFD95D6695370
                                                                                   + v145) ^ 0x4E74AD2910BCC56BLL;
  unint64_t v147 = v121 ^ v112 ^ ((v131 & ~v115) - ((2 * (v131 & ~v115)) & 0x97F0F6C0B590A44) - 0x7B407849FA537ADELL);
  unint64_t v148 = (v147 & 0x1000000000 | (v147 << 47)) ^ v147 & 0xFFFFFFEFFFFFFFFFLL ^ ((v147 >> 10) ^ (v147 >> 17) | (v147 << 54));
  *((void *)&v149 + 1) = v148 ^ 0x28800E8B16;
  *(void *)&long long v149 = v148 ^ 0x73200B0000000000;
  unint64_t v150 = v141 + 0x20E79BEA82685F6BLL;
  uint64_t v151 = v148 ^ 0x6D05C65A90D9DE49;
  uint64_t v152 = (v146 - ((2 * v146) & 0x3C4B9AE421AEAABELL) + 0x1E25CD7210D7555FLL) ^ v148 ^ 0x6D05C65A90D9DE49;
  uint64_t v153 = (v141 + 0x20E79BEA82685F6BLL) ^ v152 & (__ROR8__((v149 >> 38) ^ 0xE2AAF8192B2B27F8, 26) ^ 0x353601C75541F9B5);
  unint64_t v154 = ((v153 ^ 0xB2DC9F1EA9685FD0) + 0x6DC4FB0BD4FFFF45) ^ ((v153 ^ 0xDF1864157D97A094) + 1);
  uint64_t v155 = v153 ^ 0x60AF3E63C9FE1A68;
  unint64_t v156 = (v154 - ((2 * v154) & 0x80914B12972C8A06) + 0x4048A5894B964503) ^ v153 ^ 0x60AF3E63C9FE1A68;
  unint64_t v157 = v156 - ((2 * v156 - 0x247609E856000178) & 0xA5AFDCF64A7B9102) + 0x409CE986FA3DC7C5;
  *((void *)&v149 + 1) = (v156 - ((2 * v156 - 1442840952) & 0x4A7B9102) - 96614459) ^ 1u;
  *(void *)&long long v149 = v157 ^ 0xD2D7EE7B253DC880;
  uint64_t v158 = ((v149 >> 6) ^ (v157 >> 1) ^ ((v156 << 63) | 0x696BF73D929EE440))
       - 0x2D281184DAC23780
       - 2
       * (((v149 >> 6) ^ (v157 >> 1) ^ ((v156 << 63) | 0x696BF73D929EE440)) & 0x52D7EE7B253DC8A3 ^ ((v149 >> 6) ^ (v157 >> 1)) & 0x22);
  unint64_t v159 = (((2 * v150) ^ 0xBE30C82AFB2F4129) + (v150 ^ 0x20E79BEA82685F6BLL)) & (v148 ^ 0x73200B28800E8B16);
  unint64_t v160 = (v135 - ((2 * v135) & 0x6DB45E14F3AD28CALL) + 0x36DA2F0A79D69465) ^ v142;
  uint64_t v161 = ((v160 ^ 0x36DA2F0A79D69465) << 45) ^ ((v160 ^ 0x36DA2F0A79D69465) << 36) ^ v146 ^ __ROR8__(((v160 << 34) & 0xC000000000000000 | ((v160 ^ 0x36DA2F0A79D69465) >> 30)) ^ __ROR8__(v160 ^ 0x37EE2224DF3B75EALL ^ (((v160 >> 19) ^ 0x1425911DF1E7) - ((2 * ((v160 >> 19) ^ 0x1425911DF1E7)) & 0x1596A00A280ALL) - 0x693D5534AFFAEBFBLL), 2) ^ 0xA6115EFD9A53B36ELL, 62);
  unint64_t v162 = (v150 ^ 0x20E79BEA82685F6BLL) & (v138 ^ 0x894F104BB57B5136) ^ v161 ^ 0xE87B635F1624B3E6;
  unint64_t v163 = v162 ^ v138 ^ 0xD7E1EF54E2AA4150 ^ (v159 - ((2 * v159) & 0x42A201C1505DDF32) - 0x5EAEFF1F57D11067);
  *((void *)&v149 + 1) = v163 ^ 0x5BE354A5BB0B2;
  *(void *)&long long v149 = v163 ^ 0x6000000000000000;
  uint64_t v164 = (v158 + 1) ^ v157;
  uint64_t v165 = v163 ^ __ROR8__(v163, 39) ^ (v149 >> 61);
  unint64_t v166 = ((v161 ^ 0x3D9656FDEA6A2FLL ^ -(v161 ^ 0x3D9656FDEA6A2FLL) ^ ((v161 ^ 0xE87B635F1624B3E6)
                                                                     + 0x17B90AF614312637))
        + 0x17B90AF614312636) & (v138 ^ 0x76B0EFB44A84AEC9) ^ v152;
  unint64_t v167 = v166 ^ 0x2DB5B6AF87F64351 ^ ((v166 ^ 0x2DB5B6AF87F64351) >> 7) ^ ((v166 ^ 0x2DB5B6AF87F64351) << 23) ^ (((v166 ^ 0x2DB5B6AF87F64351) >> 41) | ((v166 ^ 0x2DB5B6AF87F64351) << 57));
  unint64_t v168 = (((v161 ^ 0xE87B635F1624B3E6) & ~v152)
        + 0x1E25CD7210D7555FLL
        + (~(2 * ((v161 ^ 0xE87B635F1624B3E6) & ~v152)) | 0xC3B4651BDE515541)
        + 1) ^ v151;
  unint64_t v169 = (v168 - ((2 * v168) & 0x80914B12972C8A06) + 0x4048A5894B964503) ^ v155;
  unint64_t v170 = v169 ^ (v169 << 54) ^ (v169 << 47) ^ (v169 >> 10) ^ (v169 >> 17);
  *(void *)&long long v149 = __ROR8__(__ROR8__(v162, 61) ^ 0x500CB82D79BEE91BLL, 3);
  unint64_t v171 = (((v166 ^ (unint64_t)v149) >> 19) ^ ((v166 ^ (unint64_t)v149) >> 28) | ((v166 ^ (unint64_t)v149) << 45)) ^ 0x21278C61855392E3;
  unint64_t v172 = v166 ^ v149 ^ ((v166 ^ (unint64_t)v149) << 36) ^ v167 ^ (v171
                                                                       - ((2 * v171) & 0xA5837C4598A999CCLL)
                                                                       - 0x2D3E41DD33AB331ALL);
  unint64_t v173 = v172 ^ 0xF5EC99A47815C5DALL;
  uint64_t v174 = v170 ^ 0x435E5D47FAAE2BFLL;
  unint64_t v175 = v170 ^ 0x435E5D47FAAE2BFLL ^ (v167 - ((2 * v167) & 0xB239C28FF8BCAD24) - 0x26E31EB803A1A96ELL);
  unint64_t v176 = (v172 ^ 0xA13665B87EA3A25) & (v165 ^ 0xA9109542E9BBBCELL) ^ v175;
  unint64_t v177 = v164 & (v165 ^ 0xF56EF6ABD1644431) ^ v172 ^ 0xF5EC99A47815C5DALL;
  *((void *)&v149 + 1) = v177 ^ v176 ^ 0x62F93;
  *(void *)&long long v149 = v177 ^ v176 ^ 0x69309AC4CA80000;
  uint64_t v178 = v177 ^ v176 ^ 0x78EEF9D17364E4DFLL ^ (((v149 >> 19) ^ ((v177 ^ v176) << 36) ^ 0xCAE2F93000000000)
                                             - 2
                                             * (((v149 >> 19) ^ ((v177 ^ v176) << 36) ^ 0xCAE2F93000000000) & 0x7E7DF07D3FCACB7ELL ^ (v149 >> 19) & 0x32)
                                             + 0x7E7DF07D3FCACB4CLL);
  uint64_t v179 = (v178 ^ -v178 ^ ((((v177 ^ v176) >> 28) ^ 0x69309AC4) - (v178 ^ ((v177 ^ v176) >> 28) ^ 0x69309AC4)))
       + (((v177 ^ v176) >> 28) ^ 0x69309AC4);
  unint64_t v180 = v179 + v41 - (a5 & (2 * v179));
  LOBYTE(v179) = *(unsigned char *)(a21 + (v180 ^ 0x99));
  *a28 = BYTE1(v180) ^ 0x92;
  a3[5] = ((v179 ^ 0x94) >> 6) | (4 * (v179 ^ 0x94));
  uint64_t v181 = (v180 >> 12) & 0xF0 | (v180 >> 20) & 0xF;
  LOBYTE(v179) = ((v180 >> 12) & 0xF0 | (v180 >> 20) & 0xF) ^ 0xED;
  *a29 = (*(unsigned char *)(v40 + (v181 ^ 0xED)) ^ 0xA1)
       + (v181 ^ 0x58)
       + (v181 ^ 0xCD)
       - 2 * (((v181 ^ 0x58) + (v181 ^ 0xCD)) & (*(unsigned char *)(v40 + (v181 ^ 0xED)) ^ 0xA1))
       - 122;
  LOBYTE(v181) = *(unsigned char *)(a21 + (BYTE3(v180) ^ 0x6DLL)) ^ 0x94;
  *a30 = (v181 >> 6) | (4 * v181);
  v165 ^= 0x6FDEE5B424470515uLL;
  unint64_t v182 = (v164 - ((2 * v164) & 0xCA9FD9C015B97DB6) + 0x654FECE00ADCBEDBLL) ^ v165;
  unint64_t v183 = (((v170 ^ 0xDD29049383F4B42DLL) & ~v182 ^ v177)
        - ((2 * ((v170 ^ 0xDD29049383F4B42DLL) & ~v182 ^ v177)) & 0xCA9FD9C015B97DB6)
        + 0x654FECE00ADCBEDBLL) ^ v165;
  *(void *)&long long v149 = __ROR8__((v183 >> 13) & 0x7000000000000 ^ __ROR8__(v183 ^ 0x8FFCFFC229DFFE59 ^ (((8 * v183) ^ (v183 << 25) ^ 0xBF0681A6CFCC6AD0)- 2* (((8 * v183) ^ (v183 << 25) ^ 0xBF0681A6CFCC6AD0) & 0x6DFFF195A6A67328 ^ (8 * v183) & 0x28)- 0x12000E6A59598CFDLL), 16) ^ 0x59AF12027FFB7224, 48);
  uint64_t v184 = (v149 ^ -(uint64_t)v149 ^ (((v183 >> 39) ^ 0xC4061C) - (v149 ^ (v183 >> 39) ^ 0xC4061C)))
       + ((v183 >> 39) ^ 0xC4061C);
  LODWORD(v162) = *(unsigned __int8 *)(a13
                                     + ((((v180 >> 31) & 0xB8 ^ 0x88) + (BYTE4(v180) ^ 0x1A)) ^ 0x77));
  DWORD1(v149) = (v162 >> 6) ^ 0x7F ^ -((v162 >> 6) ^ 0x7F) ^ (((v162 >> 6) | (8 * v162))
                                                                                         - 127);
  LODWORD(v149) = (DWORD1(v149) + 4 * v162) << 24;
  a3[1] = v184 ^ 0xAC;
  a23[6] = (BYTE6(v180) ^ 0xBA) - ((2 * (BYTE6(v180) ^ 0xBA)) & 0xAC) + 86;
  a3[4] = BYTE2(v184) ^ 0x24;
  *a31 = (unint64_t)v149 >> 26;
  unint64_t v185 = v182 ^ (v170 ^ 0x22D6FB6C7C0B4BD2) & v167;
  unint64_t v186 = (v185 >> 1) ^ (v185 >> 6) ^ ((v185 << 58) ^ 0xB800000000000000) & 0xE7FFFFFFFFFFFFFFLL ^ (((v185 << 58) ^ 0xB800000000000000) & 0x1800000000000000 ^ v185 & 0x183B3BDBC4516A26 | v185 & 0xE7C4C4243BAE95D9 ^ (v185 << 63));
  a23[12] = (BYTE3(v184) ^ 0x72) - 2 * ((BYTE3(v184) ^ 0x72) & 0x5E ^ BYTE3(v184) & 8) + 86;
  *(unsigned char *)(a24 + 29) = HIBYTE(v180) ^ 0x32;
  a23[13] = (BYTE5(v180) ^ 0x13) - ((2 * (BYTE5(v180) ^ 0x13)) & 0xAC) + 86;
  a19[6] = (v184 ^ 0x12027FFB722459ACuLL) >> (v179 & 8) >> (~(_BYTE)v179 & 8);
  LODWORD(v179) = *(unsigned __int8 *)(a13 + (((BYTE4(v184) ^ 0xFB) - 36) ^ 0x77));
  a19[4] = BYTE6(v184) ^ 2;
  *a3 = HIBYTE(v184) ^ 0x12;
  a19[2] = ((unsigned __int16)((v185 >> 1) ^ (v185 >> 6) ^ v185) >> 8) ^ 5;
  *a33 = BYTE5(v184) ^ 0x7F;
  LODWORD(v181) = (((v185 >> 1) ^ (v185 >> 6) ^ v185) >> 16);
  a3[2] = (v185 >> 1) ^ (v185 >> 6) ^ v185 ^ 0xDB;
  *a19 = ((((v179 >> 6) | (4 * v179)) ^ 0x7F) >> 2) | ((((v179 >> 6) | (4 * v179)) ^ 0x7F) << 6);
  LOBYTE(v179) = *(unsigned char *)(a12
                          + (((v181 ^ 0x76) + (v181 ^ 0xFFFFFFAA) + 1) ^ 0xFFFFFFFE)
                          + (v181 ^ 0x76));
  *a32 = (((v185 >> 1) ^ (v185 >> 6) ^ v185) >> 24) ^ 0x87;
  unint64_t v187 = ((v185 ^ v173 & ~v175) - ((2 * (v185 ^ v173 & ~v175)) & 0xB239C28FF8BCAD24) - 0x26E31EB803A1A96ELL) ^ v174;
  unint64_t v188 = v187
       - ((2 * v187) & 0x9E2B77E5823BC0A6)
       + 0x4F15BBF2C11DE053
       - ((2 * (v187 - ((2 * v187) & 0x9E2B77E5823BC0A6) + 0x4F15BBF2C11DE053)) & 0xD353878DB8FE41B0)
       + 0x69A9C3C6DC7F20D8;
  a3[3] = BYTE6(v186) ^ 0x5D;
  LOBYTE(v179) = (v179 ^ 0xF2 ^ (16 * v179) & 0x40) & 7 ^ 0x35 ^ ((unint64_t)((v179 ^ 0xF2 ^ (16 * v179) & 0x40) >> 3) << ((v184 ^ 0xAC) & (v184 ^ 0x50)) << ((v184 ^ 0xAC) & (v184 ^ 0x50) ^ 3));
  unint64_t v189 = v188 ^ (v188 << 47) ^ (v188 >> 10) ^ (v188 << 54);
  unint64_t v190 = v189 ^ (v188 >> 17);
  a3[11] = v190 ^ 0x2F;
  *(unsigned char *)(a24 + 28) = BYTE5(v186) ^ 0x22;
  a3[13] = ((v179 >> 3) | (32 * v179)) ^ 0xA6;
  *a26 = BYTE2(v190) ^ 0x2B;
  unint64_t v191 = v176 ^ (v176 << 23) ^ ((v176 >> 7) ^ (v176 >> 41) | (v176 << 57));
  uint64_t v192 = (v190 >> 20) & 0xF0 | (v190 >> 28);
  a23[8] = (HIBYTE(v186) ^ 0xA1) - ((2 * HIBYTE(v186)) & 0xAC) + 86;
  a23[17] = (BYTE4(v186) ^ 0x3C) + (~(2 * (BYTE4(v186) ^ 0x3C)) | 0x53) + 87;
  a23[11] = (BYTE1(v190) ^ 0x51) - ((2 * (BYTE1(v190) ^ 0x51)) & 0xAC) + 86;
  LOBYTE(v190) = *(unsigned char *)(v40 + (v192 ^ 0x32));
  *(unsigned char *)a24 = BYTE6(v189) ^ 0xDF;
  char v193 = v190 ^ ((v192 ^ 0x12) + (v192 ^ 0x87)) ^ 0xA1;
  *a34 = BYTE5(v190) ^ 0x9D;
  *(unsigned char *)(a24 + 15) = v42 ^ BYTE3(v191);
  a23[19] = v191 ^ 0xC4;
  a19[5] = BYTE1(v191) ^ 0x3D;
  a3[8] = BYTE2(v191) ^ 3;
  a23[18] = v193 - 2 * ((v193 + 6) & 0x57 ^ v193 & 1) - 36;
  a3[6] = BYTE4(v190) ^ 0x62;
  a19[7] = HIBYTE(v189) ^ 0xCF;
  unsigned __int8 v194 = *(unsigned char *)(a21 + (BYTE4(v191) ^ 0x19)) ^ 0x94;
  *(unsigned char *)(a24 + 14) = BYTE5(v191) ^ 0x49;
  a19[3] = HIBYTE(v191) ^ 0xBE;
  a19[1] = BYTE6(v191) ^ 0x75;
  *(unsigned char *)(a24 + 16) = (v194 >> 6) | (4 * v194);
  *(_DWORD *)(a24 + 4) = a15 - 2138037661;
  JUMPOUT(0xD33CLL);
}

uint64_t sub_D3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned __int8 a26)
{
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * (((16 * (((v27 > 0xC67234D7) ^ a26) & 1)) & 0xDF | (32 * (((v27 > 0xC67234D7) ^ a26) & 1))) ^ (v28 + 1174669690))))();
}

uint64_t sub_D3FC(char a1, int a2, char a3, int a4, int8x16_t a5, int8x8_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  char v57 = v50 - 8;
  uint64_t v58 = (a4 + a2 - 8);
  v60.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)a2 - 8) & 0xF;
  v60.val[0].i64[1] = ((_BYTE)a4 + v57) & 0xF;
  v60.val[1].i64[0] = ((_BYTE)a4 + v54 - 8) & 0xF;
  v60.val[1].i64[1] = ((_BYTE)a4 + v53 - 8) & 0xF;
  v60.val[2].i64[0] = ((_BYTE)a4 + a3 - 8) & 0xF;
  v60.val[2].i64[1] = ((_BYTE)a4 + a1 - 8) & 0xF;
  v60.val[3].i64[0] = ((_BYTE)a4 + v57 + (v55 ^ 0xC)) & 0xF;
  v60.val[3].i64[1] = ((_BYTE)a4 + v51 - 8) & 0xF;
  *(int8x8_t *)(a10 + v58) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v47 + (v58 & 0xF) - 7), *(int8x8_t *)(a10 + v58)), veor_s8(*(int8x8_t *)((v58 & 0xF) + v49 - 5), *(int8x8_t *)((v58 & 0xF) + v48 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v60, a5), a6)));
  return (*(uint64_t (**)(void))(a47 + 8 * (((a4 != v52 + 8) * v56) ^ a8)))();
}

uint64_t sub_D420()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((825
                                * (((v1 + (((v3 - 615) | 0x112) ^ 0x7E9) - 1663) & (2
                                                                                  * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v0) == v0)) ^ ((v3 - 615) | 0x112))))();
}

uint64_t sub_D47C@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v1 + (v2 + v6)) = *(unsigned char *)(*v1 + (v4 + v6));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 == v3) * v5) ^ a1)))();
}

uint64_t sub_D490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  a14 = &STACK[0x2F7E69BD89C710D];
  a16 = 501 - 460628867 * (((&a14 | 0x98AB1C2F) - (&a14 & 0x98AB1C2F)) ^ 0xD43D9E52);
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v17 + 17104))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1268 * (a15 == ((v18 - 396) ^ 0x27C))) ^ v16)))(v19);
}

uint64_t sub_D52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 535753261 * ((~((v19 - 136) | 0x43BBA8D6) + ((v19 - 136) & 0x43BBA8D6)) ^ 0xB6B05906);
  *(void *)(v19 - 136) = v18;
  *(_DWORD *)(v19 - 128) = v20 + (v16 ^ 0x2B0) + v14 + 1558070844;
  *(_DWORD *)(v19 - 124) = v20 + v16 + 943;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 ^ 0x884)))(v19 - 136);
  *(_DWORD *)(v19 - 136) = ((v16 ^ 0x2B0) + 490) ^ (1374699841
                                                  * ((486019166 - ((v19 - 136) | 0x1CF8105E) + ((v19 - 136) | 0xE307EFA1)) ^ 0x8EF3F7A8));
  *(void *)(v19 - 128) = v17;
  *(void *)(v19 - 120) = a14;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * ((v16 ^ 0x2B0) + 1519)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v19 - 132) <= 25 * (v16 ^ 0xD0u) + 645999113)
                                              * ((v16 ^ 0x2B0) - 348)) ^ v16 ^ 0x2B0)))(v21);
}

uint64_t sub_D668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 136) = (v17 + 704) ^ (1374699841
                                        * ((2 * ((v18 - 136) & 0x4A0D4328) - (v18 - 136) - 1242383148) ^ 0xD806A4DD));
  *(void *)(v18 - 128) = v14;
  *(void *)(v18 - 120) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 + 1733)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v18 - 132) == v15 + 2) * (2 * (v17 + 383) - 1470)) | v17)))(v19);
}

uint64_t sub_D704()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v0 + 8 * (v3 + 1838)))(((v3 + 1944921513) & 0x8C12DFFF ^ 0xB3713143 ^ ((v3 - 296) | 0x102)) + *(_DWORD *)(v2 + 24 * v1 + 16), 2970849626) != 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (v4 | (8 * v4) | v3)))();
}

uint64_t sub_D788(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * ((14
                                                      * (((v1 + 92) ^ 0xAF ^ (((v1 - 1956) | 0x201)
                                                                                             + *(_DWORD *)(v3 - 0x7761D79CB8DF4D07)
                                                                                             - 1359519531 == 0)) & 1)) ^ v1)))(a1, *(void *)(v3 - 0x7761D79CB8DF4D13));
}

uint64_t sub_D800()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1083
                                * (**(_DWORD **)(v2 + 8 * (v1 ^ 0x3DD)) == ((v1 + 1258527437) & 0xB4FC65FF) - 1223)) ^ v1)))();
}

uint64_t sub_D85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v29 - 112) = v25;
  *(void *)(v29 - 104) = a25;
  *(_DWORD *)(v29 - 120) = (v26 + 146) ^ (((((v29 - 120) | 0x33721CEE) - (v29 - 120) + ((v29 - 120) & 0xCC8DE310)) ^ 0x5E8604E7)
                                        * v28);
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (int)(v26 + 1175)))(v29 - 120);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8 * ((52 * (*(_DWORD *)(v29 - 116) - 645999915 < v26 - 37941721)) ^ v26)))(v30);
}

uint64_t sub_D8FC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((*(void *)(v2 + 8) == 0x950CE2110AB3F3FLL)
                                     * (a2 ^ 0x6FC ^ (a2 + 1516272499) & 0xA59F7DF1)) ^ a2)))();
}

uint64_t sub_D954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  unint64_t v37 = (*(_DWORD *)(v36 + v31) ^ v27) + HIDWORD(v35);
  *(_DWORD *)(v36 + 4 * a3) = v37 + v27 - ((v37 << (v34 - 67)) & (v28 + v34 - 958 - 390));
  *(_DWORD *)(a27 + v31) = HIDWORD(v37) | v27;
  BOOL v39 = v30 + 644991003 > 601327475 || v30 + 644991003 < v29;
  return (*(uint64_t (**)(void))(v33 + 8 * ((v34 - 721) ^ (v39 * v32))))();
}

void sub_D9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,_DWORD **a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  int v42 = (a24 - 1922018004) & 0x76D6CFE9;
  uint64_t v43 = *a25;
  if (((unint64_t)*a25 & 3) != ((a24 + 71771552) ^ v42 ^ 0x19ALL)
    || (uint64_t v44 = *(&off_99820 + a24 + 71769796), *v44))
  {
    *a9 = 1373504825;
    sub_2FE28();
  }
  else
  {
    int v45 = v42 - 1429;
    *uint64_t v44 = v43;
    *(_DWORD *)*(&off_99820 + (v42 ^ 0x6C1u)) = 255;
    *v43 |= ~v43[*v43 & 0x3ELL] << 16;
    v43[4] |= ~v43[v43[4] & 0x3ELL] << ((((a24 + 44) & 0xE9) + 107) ^ 0x24);
    v43[8] |= ~v43[v43[8] & 0x3ELL] << 16;
    v43[12] |= ~v43[v43[12] & 0x3ELL] << 16;
    v43[16] |= ~v43[v43[16] & 0x3ELL] << 16;
    v43[20] |= ~v43[v43[20] & 0x3ELL] << 16;
    v43[24] |= ~v43[v43[24] & 0x3ELL] << 16;
    v43[28] |= ~v43[v43[28] & 0x3ELL] << 16;
    v43[32] |= ~v43[v43[32] & 0x3ELL] << 16;
    v43[36] |= ~v43[v43[36] & 0x3ELL] << 16;
    v43[40] |= ~v43[v43[40] & 0x3ELL] << 16;
    v43[44] |= ~v43[v43[44] & 0x3ELL] << 16;
    v43[48] |= ~v43[v43[48] & 0x3ELL] << 16;
    v43[52] |= ~v43[v43[52] & 0x3ELL] << 16;
    v43[56] |= ~v43[v43[56] & 0x3ELL] << 16;
    v43[60] |= ~v43[v43[60] & 0x3ELL] << 16;
    uint64_t v46 = (*(uint64_t (**)(char *, void, uint64_t))(v40 + 8 * (v42 ^ 0xE68u)))(&a40, 0, 1024);
    (*(void (**)(uint64_t))(v40 + 8 * ((((193 * (v45 ^ 0x13D)) ^ (v41 - 346)) + v45 - v41 + 489) ^ v45)))(v46);
  }
}

uint64_t sub_DD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(a6 + 1) = *(unsigned char *)(a8 + (v9 - 158929245));
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((2300 * ((v9 & ((v8 - 1496599054) & 0x59344934 ^ 0xFFFFFFEC)) == 158929244)) ^ v8)))();
}

uint64_t sub_DD90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((((v2 - 861803743) & 0x335E176F ^ 0x457) * (a1 != 0x689170CABB1BB2A6)) ^ v2)))();
}

uint64_t sub_DDEC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + (v5 + v3)) = *(unsigned char *)(v2 + (v5 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 - 1 != a2) | (8 * (v5 - 1 != a2))) ^ v4)))();
}

uint64_t sub_DE18(uint64_t a1, int a2, int a3)
{
  BOOL v6 = a2 - 863443013 > 34 * (a3 ^ 0x5C2) + 1833582302 || a2 - 863443013 < v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((718 * v6) ^ a3)))();
}

uint64_t sub_DE78()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 151162646) & 0x59EAEFFB) + ((v2 - 389) ^ (v4 + 2275))) * (v0 - v1 == 644837419)) ^ v2)))();
}

uint64_t sub_DEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v61 = a52 ^ 0xCE;
  if (v61 == 1)
  {
    LOBYTE(a47) = ((8 * BYTE4(a48)) ^ 0x78) - ((2 * ((8 * BYTE4(a48)) ^ 0x78)) & 0xC0) - 27;
    BYTE1(a47) = ((v60 + 90) ^ (HIDWORD(a48) >> 5)) - (a7 & (2 * ((v60 + 90) ^ (HIDWORD(a48) >> 5)))) - 27;
    BYTE2(a47) = ((HIDWORD(a48) >> 13) ^ 0x79)
               - 2 * (((HIDWORD(a48) >> 13) ^ 0x79) & 0xE7 ^ (HIDWORD(a48) >> 13) & 2)
               - 27;
    BYTE3(a47) = ((HIDWORD(a48) >> 21) ^ 0x71) - (a7 & (2 * ((HIDWORD(a48) >> 21) ^ 0x71))) - 27;
    HIDWORD(v65) = a48 ^ 0x12;
    LODWORD(v65) = HIDWORD(a48) ^ 0xC0000000;
    BYTE4(a47) = (v65 >> 29) - (a7 & (2 * (v65 >> 29))) - 27;
    BYTE5(a47) = ((a48 >> 5) ^ 0x7F) - (a7 & (2 * ((a48 >> 5) ^ 0x7F))) - 27;
    BYTE6(a47) = ((a48 >> 13) ^ 0xC0) - (a7 & (2 * ((a48 >> 13) ^ 0xC0))) - 27;
    unsigned int v64 = ((a48 >> 21) ^ 0xFFFFFF94) + (~(2 * ((a48 >> 21) ^ 0xFFFFFF94)) | 0x35) - 26;
    uint64_t v62 = a31;
    goto LABEL_5;
  }
  uint64_t v62 = a31;
  if (v61 == 2)
  {
    HIDWORD(v63) = a48 ^ 0x12;
    LODWORD(v63) = HIDWORD(a48) ^ 0xC0000000;
    LOBYTE(a47) = v60
                + 97
                + ((a48 >> 21) ^ 0x94)
                - 2 * (((a48 >> 21) ^ 0x94) & 0xE7 ^ (a48 >> 21) & 2)
                + 116;
    BYTE1(a47) = ((a48 >> 13) ^ 0xC0)
               + ~(2 * (((a48 >> 13) ^ 0xC0) & 0x6D ^ (a48 >> 13) & 8))
               - 26;
    BYTE2(a47) = ((a48 >> 5) ^ 0x7F) - (a7 & (2 * ((a48 >> 5) ^ 0x7F))) - 27;
    BYTE3(a47) = (v63 >> 29) - (a7 & (2 * (v63 >> 29))) - 27;
    BYTE4(a47) = ((HIDWORD(a48) >> 21) ^ 0x71)
               - 2 * (((HIDWORD(a48) >> 21) ^ 0x71) & 0xE7 ^ (HIDWORD(a48) >> 21) & 2)
               - 27;
    BYTE5(a47) = ((HIDWORD(a48) >> 13) ^ 0x79) - (a7 & (2 * ((HIDWORD(a48) >> 13) ^ 0x79))) - 27;
    BYTE6(a47) = ((HIDWORD(a48) >> 5) ^ 0x6A) - (a7 & (2 * ((HIDWORD(a48) >> 5) ^ 0x6A))) - 27;
    unsigned int v64 = ((8 * HIDWORD(a48)) ^ 0x78) - (((8 * HIDWORD(a48)) ^ 0x78u) >> 5 << 6) - 27;
LABEL_5:
    HIBYTE(a47) = v64;
  }
  return sub_464C8(a1, a2, a3, a4, v62, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_E0FC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1753
                                * (*(_DWORD *)(a1 + 4
                                                  * (((23 * (v2 ^ 0x660)) ^ 0x2D6 ^ (v3 + 668)) + v5)) == v1)) ^ (v2 - 960))))();
}

void sub_E14C()
{
}

uint64_t sub_E2EC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((117 * (*(unsigned char *)(a1 + v2) == 94)) ^ v1)))();
}

uint64_t sub_E334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v27 - 104) = (v25 + 973) ^ (1734042137
                                        * ((2 * ((v27 - 120) & 0x65AB1798) - (v27 - 120) - 1705711513) ^ 0xC69A2B2A));
  *(void *)(v27 - 120) = a25;
  *(void *)(v27 - 112) = a21;
  (*(void (**)(uint64_t))(v26 + 8 * (v25 + 1640)))(v27 - 120);
  *(void *)(v27 - 112) = a23;
  *(void *)(v27 - 104) = a25;
  *(_DWORD *)(v27 - 120) = (v25 + 685) ^ (1374699841
                                        * ((1825418699 - ((v27 - 120) | 0x6CCDADCB) + ((v27 - 120) | 0x93325234)) ^ 0xFEC64A3D));
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v25 + 1714)))(v27 - 120);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (((*(_DWORD *)(v27 - 116) > 0x26812D29u)
                                              * ((v25 + 190) ^ 0x3DE ^ (140 * (v25 ^ 0x17F)))) ^ v25)))(v28);
}

uint64_t sub_E478()
{
  return 4294925278;
}

uint64_t sub_E480(uint64_t a1, int a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((47 * (a4 + a3 + 545783810 < ((a2 - 1090) ^ (a2 - 1082)))) ^ a2)))();
}

uint64_t sub_E4D0(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  HIDWORD(v18) = a1 ^ a7;
  LODWORD(v18) = (275 * (v7 ^ 0x204)) ^ a1 ^ 0x55555555;
  int v19 = (v18 >> 27)
      + (a2 ^ v10)
      + (*(_DWORD *)(v8 + 4 * (a5 + v15)) ^ v11)
      + ((v13 ^ v10 | v17 ^ v10) & (v9 ^ v10) | (v13 ^ v10) & (v17 ^ v10));
  return (*(uint64_t (**)(void, uint64_t))(v14 + 8 * (v7 | (32 * (a5 + 1 == v16 + 44)))))(v19 - ((2 * v19 + 506952120) & v12) - 515297210, v13);
}

uint64_t sub_E594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = (v16 - 1965393939) & 0x7525836F;
  int v20 = 535753261
      * (((((v18 - 136) ^ 0x25058434 | 0xCA7A79C2) ^ 0xFFFFFFFE) - ((v18 - 136) ^ 0xA006080 | 0x3585863D)) ^ 0xDA0E1564);
  *(void *)(v18 - 136) = v17;
  *(_DWORD *)(v18 - 128) = v20 + v14 + v19 + 850856627;
  *(_DWORD *)(v18 - 124) = v20 + v16 - 335;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 646)))(v18 - 136);
  *(void *)(v18 - 128) = a12;
  *(void *)(v18 - 120) = a14;
  *(_DWORD *)(v18 - 136) = (v19 + 735) ^ (1374699841
                                        * ((2 * (((v18 - 136) ^ 0x16C7926F) & 0x37D42D5D)
                                          - ((v18 - 136) ^ 0x16C7926F)
                                          + 1210831522) ^ 0x331858C4));
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v19 + 1764)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 132) > 0x26812D29u)
                                              * (((v19 - 610295155) & 0x24605EAF) - 626)) ^ v19)))(v21);
}

uint64_t sub_E6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 < a5 - 1884) * (((a5 - 1876) | 0x80) ^ 0x45)) ^ a5)))();
}

uint64_t sub_E74C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  if (a16 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36
  }
                                                                + 8
                                                                * ((225
                                                                  * (a36 == ((a4 - 422543519) & 0x4FA8BEF3 ^ 0x4EC91566))) ^ (a4 + a5))))(a1, 913915477, -3381051899);
  if (a16 != 1) {
    JUMPOUT(0xE8ECLL);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36
                                                              + 8
                                                              * ((1102
                                                                * ((((a4 + 913915572) ^ (a36 == 1321801015)) & 1) == 0)) ^ (a4 + 913915572))))(a1, a2, -3381051899);
}

uint64_t sub_E91C@<X0>(int a1@<W4>, int a2@<W8>)
{
  *(unsigned char *)(v4 + v3) = *(unsigned char *)(v6 + (a2 + v7))
                      - (v9 & (2 * *(unsigned char *)(v6 + (a2 + v7))))
                      - 27;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v3 != 63) * v5) ^ (a1 + v2 + 131))))();
}

uint64_t sub_E964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46)
{
  int v48 = HIDWORD(a11) + a46 - (((HIDWORD(a11) << ((v46 + 18) ^ 0x19)) + 244002942) & 0x2B8E84E6) - 1123232474;
  unsigned int v49 = ((2 * v48) & 0xB4DFFE7E ^ 0x208E8466) + (v48 ^ 0xCFA8BD4C);
  BOOL v51 = ((v49 + ((v46 + 18) ^ 0x5F5) - 1004) & ((v46 + 18) ^ 0x617)) == 0 && v49 != -630194369;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * ((v46 + 18) ^ (32 * v51))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

void sub_EA20(_DWORD *a1@<X8>)
{
  int v3 = *(_DWORD *)(v1 + 16) ^ v2;
  *uint64_t v4 = (HIBYTE(v3) ^ 0xD7) - ((2 * (HIBYTE(v3) ^ 0xD7)) & 0xCA) - 27;
  v4[1] = (BYTE2(v3) ^ 0x3D) - ((2 * (BYTE2(v3) ^ 0x3D)) & 0xCA) - 27;
  _DWORD v4[2] = (BYTE1(v3) ^ 0xC) - 2 * ((BYTE1(v3) ^ 0xC) & 0xE7 ^ BYTE1(v3) & 2) - 27;
  v4[3] = v3 ^ 0x15;
  *(_DWORD *)(v1 + 12) = *a1;
}

uint64_t sub_EAC8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((216 * ((v0 & 0x1F ^ 0xF) == (((v1 - 1568) | 0x280) ^ 0x2B8))) ^ v1)))();
}

void sub_EB08()
{
}

uint64_t sub_EB14(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v33 = a2 + v30;
  *(_DWORD *)(a27 + 4 * (v33 + v31)) = v27;
  BOOL v35 = v33 + a3 > a4 || v33 + a3 <= v29;
  return (*(uint64_t (**)(void))(v32 + 8 * ((v35 | (2 * v35)) ^ (v28 + 564))))();
}

uint64_t sub_EB20@<X0>(int a1@<W8>)
{
  BOOL v4 = v1[7] == 0xDE78D69D6C1C02DLL || (v1[3] | v1[6]) == 0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((25 * ((a1 - 42) ^ 0xDB)) ^ v4) & 1)
                                     * ((a1 + 1941569956) & 0x8C45FE5B ^ 0x5EB)) ^ (a1 - 1066))))();
}

uint64_t sub_EBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,int a22,uint64_t a23,uint64_t a24,int a25)
{
  int v27 = (a25 ^ a8) - (a21 & (2 * (a25 ^ a8))) + 1602200845;
  return (*(uint64_t (**)(void))(v25
                              + 8
                              * ((175
                                * ((((a22 & 0x53060F6F) - 301165) & (2 * v27) ^ 0xBEFB421A)
                                 + (v27 ^ 0x208216E2)
                                 - 205853192 == a5)) ^ (v26 + 257))))();
}

uint64_t sub_EC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, int32x4_t a9, int32x4_t a10, int32x4_t a11, int32x4_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return sub_93CC(a1, a2, a3, a4, a5, a6, a7, a8, a13, a14, a15, a16, a17, a18, a19, v36, a21, a22, a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a9,
           a10,
           a11,
           a12);
}

uint64_t sub_EC54@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>, uint8x8_t a3@<D0>)
{
  a3.i32[0] = *(_DWORD *)(a2 + a1 + 1);
  return sub_EC7C((v3 ^ 0x791u) - 1479, 0, a2 - 3, 426, COERCE_DOUBLE(vmovn_s16((int16x8_t)vmovl_u8(a3))));
}

uint64_t sub_EC7C(int a1, int a2, uint64_t a3, int a4, float a5)
{
  *(float *)(a3 + (v5 + v8 - a2 + 187)) = a5;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 + a2 - 183 == v7) * a4) ^ v6)))();
}

uint64_t sub_ECB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067 * ((&a11 & 0x7E1935 | ~(&a11 | 0x7E1935)) ^ 0x21475B11);
  a13 = (v17 + 114) ^ v19;
  a15 = v19 ^ 0x7E8A3AB2;
  a11 = &STACK[0x18DA4F3048EDB6D0];
  a12 = v18;
  a14 = &STACK[0x5248BA885C210B10];
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 + 713)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((3565 * (*(_DWORD *)(v18 - 0x7761D79CB8DF4CFBLL) == v15 + v17 - 915 - 557)) ^ v17)))(v20);
}

uint64_t sub_ED94@<X0>(int a1@<W2>, uint64_t a2@<X6>, int a3@<W8>)
{
  int v12 = a3 + 1;
  *(unsigned char *)(v9 + (v12 + v7)) = *(unsigned char *)(a2 + v10 + v6)
                                            - ((*(unsigned char *)(a2 + v10 + v6) << ((v4 & v5) - 42)) & v8)
                                            - 27;
  return (*(uint64_t (**)(void))(v11 + 8 * ((480 * ((a1 + v12 + 1) < 0x40)) ^ v3)))();
}

uint64_t sub_ED9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v4 < 0x20) ^ (a4 - 1)) & 1) * ((277 * (a4 ^ 0x1B6)) ^ 0x27F)) ^ a4)))();
}

uint64_t sub_EDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(unsigned char *)(v13 + (a6 - 18198468)) = *(unsigned char *)(v11 + ((a6 - 18198468) & 0xFLL)) ^ *(unsigned char *)(v7 + (a6 - 18198468)) ^ *(unsigned char *)((((_BYTE)a6 + 60) & 0xF) + v10 + 2) ^ *(unsigned char *)((((_BYTE)a6 + 60) & 0xF) + v9 + 1) ^ (((a6 + 60) & 0xF) * (a7 - 18));
  return (*(uint64_t (**)(void))(v12 + 8 * ((255 * (a6 - 1 != v8)) ^ (a7 + 552))))();
}

void sub_EE50()
{
  *(_DWORD *)(v0 + 12) = -1373544826;
}

uint64_t sub_EE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((49 * (a7 + 1 == v8 + 32)) ^ a5)))();
}

uint64_t sub_EF64()
{
  *(_DWORD *)(*v2 + 4 * (v4 + v0)) = v1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((14 * (v4 + v0 > 0)) ^ v3)))();
}

uint64_t sub_EFA4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 565) ^ v2 ^ 0x250) * (a1 == v1)) ^ v2)))();
}

uint64_t sub_EFDC@<X0>(uint64_t a1@<X4>, int a2@<W5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((1181 * (a3 + 1 == v4 + 16)) ^ a2)))(a1);
}

uint64_t sub_F0B4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v1 != v2 - 1913) * ((v2 - 1498) ^ 0x168)) ^ v2)))();
}

uint64_t sub_F0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, _DWORD *a11)
{
  *a10 = a1;
  *a11 = v12;
  return (*(uint64_t (**)(void))(v13 + 8
                                    * ((87 * (((a9 == 0) ^ (((v11 + 66) & 0xD7) + 8)) & 1)) ^ v11)))();
}

_DWORD *sub_F140@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  *uint64_t result = v3 - 1405785566 + (a2 << (((v2 - 39) | 8) - 72));
  return result;
}

uint64_t sub_F16C@<X0>(uint64_t a1@<X8>)
{
  BOOL v8 = v4 > 0xA28D1518;
  *(unsigned char *)(a1 + (v3 - 299 + v6 - 1218717820)) = *(unsigned char *)(v1
                                                                         + (v3 - 299 + v6 - 1218717820));
  if (v8 == v6 + 349094967 < v2) {
    BOOL v8 = v6 + 349094967 < v5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((1898 * v8) ^ v3)))();
}

uint64_t sub_F1DC@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((486 * (a2 == v4)) ^ (v2 + a1 - 271))))();
}

uint64_t sub_F208@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v30 = a1 ^ (v27 - 725);
  *int v28 = v28[623];
  *(void *)(v29 - 136) = (v24 - 857349981) ^ v25;
  int v31 = v25 ^ (v30 + 102165556);
  *(_DWORD *)(v29 - 128) = v25 + v30 - 1015666717;
  *(_DWORD *)(v29 - 104) = v31 ^ 0x3A;
  *(_DWORD *)(v29 - 100) = v30 + 102165556 + v25;
  *(void *)(v29 - 120) = a24;
  *(_DWORD *)(v29 - 112) = v25 + 1;
  *(_DWORD *)(v29 - 108) = v31 ^ 0x41;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v30 ^ (v27 - 2121))))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * *(int *)(v29 - 144)))(v32);
}

uint64_t sub_F2AC(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v7 = a3 + ((v4 + 1469578481) & 0xFBFFFFF1) + *(unsigned __int8 *)(a2 + 6) - 186;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1306 * ((v6 & (2 * v7)) + (v7 ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_F304@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((8 * ((a1 ^ (v1 - 1284426161 < ((a1 + 291) ^ 0xFFFFFA35))) & 1)) & 0xEF | (16 * ((a1 ^ (v1 - 1284426161 < ((a1 + 291) ^ 0xFFFFFA35))) & 1)) | a1)))();
}

uint64_t sub_F350()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((249 * (v0 < (v1 ^ (v1 + 656)) + 580817192)) ^ (v3 + v1 + 343))))();
}

void sub_F390()
{
  int v6 = 1734042137 * (((v5 - 144) & 0x80439F6D | ~((v5 - 144) | 0x80439F6D)) ^ 0x2372A3DF);
  *(_DWORD *)(v5 - 144) = ((v4 ^ 0x736) + 464) ^ v6;
  *(_DWORD *)(v5 - 140) = v0 - v6 + ((4 * (v4 ^ 0x736)) ^ 0x25B1B169);
  *(void *)(v5 - 136) = v3;
  *(void *)(v5 - 128) = v2;
  (*(void (**)(uint64_t))(v1 + 8 * ((v4 ^ 0x736) + 1089)))(v5 - 144);
  JUMPOUT(0x57D0);
}

uint64_t sub_F410@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34,uint64_t a35,char a36)
{
  int v41 = &a34 + v36;
  uint64_t v59 = &a32 + v36;
  uint64_t v58 = &a36 + v36;
  char v57 = &a30 + v36;
  int v56 = &a26 + v36;
  unsigned __int8 v55 = &a28 + v36;
  char v54 = &a24 + v36;
  int v42 = &a20 + v36;
  int v43 = v37 + 410;
  uint64_t v44 = *a1;
  uint64_t v61 = v39;
  uint64_t v62 = a1[5];
  uint64_t v45 = a1[3];
  uint64_t v46 = *(void *)(v45 - 0x571561323F81230ALL);
  int v47 = v37 + 1038;
  *(_DWORD *)(v40 - 104) = (v37 + 1038) ^ (1759421093 * ((v40 - 440558450 - 2 * ((v40 - 144) & 0xE5BD9D1E)) ^ 0x56C02D4A));
  *(void *)(v40 - 128) = v44;
  *(void *)(v40 - 120) = v46;
  int v48 = (v37 + 410) ^ 0x6FA;
  int v49 = (v37 - 180) | 0x29;
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = a2;
  *(void *)(v40 - 112) = &a34 + v36;
  uint64_t v60 = 8 * (v37 + 1158);
  (*(void (**)(uint64_t))(v38 + v60))(v40 - 144);
  *(void *)(v40 - 112) = v42;
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = v41;
  *(void *)(v40 - 128) = v45;
  *(_DWORD *)(v40 - 120) = v43
                         + 535753261 * ((((2 * (v40 - 144)) | 0x70DF0EA6) - (v40 - 144) - 946833235) ^ 0x329B897C)
                         - 10;
  (*(void (**)(uint64_t))(v38 + 8 * (v43 + 835)))(v40 - 144);
  *(void *)(v40 - 120) = v41;
  *(void *)(v40 - 112) = v59;
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093 * ((v40 - 144) ^ 0xB37DB054));
  *(void *)(v40 - 128) = v44;
  (*(void (**)(uint64_t))(v38 + v60))(v40 - 144);
  *(void *)(v40 - 120) = v59;
  *(void *)(v40 - 112) = v58;
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093
                                * ((((v40 - 144) | 0xFED2E386) - (v40 - 144) + ((v40 - 144) & 0x12D1C78)) ^ 0x4DAF53D2));
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v44;
  *(void *)(v40 - 144) = v45;
  (*(void (**)(uint64_t))(v38 + v60))(v40 - 144);
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093
                                * ((1192167507 - ((v40 - 144) | 0x470F0853) + ((v40 - 144) | 0xB8F0F7AC)) ^ 0xB8D47F8));
  *(void *)(v40 - 120) = v58;
  *(void *)(v40 - 112) = v57;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v44;
  *(void *)(v40 - 144) = v45;
  (*(void (**)(uint64_t))(v38 + v60))(v40 - 144);
  *(void *)(v40 - 128) = v44;
  *(void *)(v40 - 120) = v57;
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093 * ((((v40 - 144) | 0x738EEFBD) + (~(v40 - 144) | 0x8C711042)) ^ 0xC0F35FE8));
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 112) = v56;
  uint64_t v53 = 8 * (v43 ^ 0xD74);
  (*(void (**)(uint64_t))(v38 + v53))(v40 - 144);
  *(void *)(v40 - 120) = v56;
  *(void *)(v40 - 112) = v55;
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093 * ((((v40 - 144) | 0xEC5B9577) + (~(v40 - 144) | 0x13A46A88)) ^ 0x5F262522));
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v44;
  (*(void (**)(uint64_t))(v38 + v60))(v40 - 144);
  *(void *)(v40 - 120) = v55;
  *(void *)(v40 - 112) = v54;
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093 * ((((2 * (v40 - 144)) | 0xAC7F21A) - (v40 - 144) - 90437901) ^ 0xB61E4959));
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v44;
  (*(void (**)(uint64_t))(v38 + v60))(v40 - 144);
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093 * ((v40 + 1718522719 - 2 * ((v40 - 144) & 0x666E93EF)) ^ 0xD51323BB));
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 120) = v54;
  *(void *)(v40 - 112) = v42;
  *(void *)(v40 - 128) = v44;
  (*(void (**)(uint64_t))(v38 + v53))(v40 - 144);
  uint64_t v50 = *(void *)(v45 - 0x571561323F812312);
  *(_DWORD *)(v40 - 128) = (v43 - 4) ^ (1734042137
                                      * ((((v40 - 144) | 0x81FFDE0) - ((v40 - 144) & 0x81FFDE0)) ^ 0x54D13EAD));
  *(void *)(v40 - 144) = v50;
  *(void *)(v40 - 136) = v61;
  (*(void (**)(uint64_t))(v38 + 8 * (v43 ^ 0x2AB)))(v40 - 144);
  *(void *)(v40 - 136) = v62;
  *(_DWORD *)(v40 - 140) = v43 + 460628867 * ((v40 - 144) ^ 0x4C96827D) - 1025;
  uint64_t v51 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (v43 ^ 0xDDE)))(v40 - 144);
  return (*(uint64_t (**)(uint64_t))(v38
                                            + 8
                                            * ((46 * (v49 + (v48 ^ 0xDD2E9BE1) + *(_DWORD *)(v40 - 144) > 0x7FFFFFFE)) ^ v43)))(v51);
}

uint64_t sub_F930@<X0>(int a1@<W1>, int a2@<W7>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((((a2 - 148) | 0x408) + ((a2 - 2062101510) & 0x3AE92F79) - 2056) * (a1 == v3)) ^ a2)))();
}

uint64_t sub_F978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * (((a23 == 845113444) * (((v23 - 220584677) & 0xD25D8FF) + 1261)) ^ v23)))();
}

uint64_t sub_F9C8(uint64_t a1, uint64_t a2)
{
  unsigned int v9 = v5 + v4 + v6;
  uint64_t v10 = a2 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = v2 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v3 & 0xFFFFFFE0) == 32) * (v7 + 865)) ^ (v7 + 1397))))();
}

uint64_t sub_FA1C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1988 * (v0 < ((v1 + 905) ^ 0x726u) + 2147482854)) ^ (v1 + 293))))();
}

uint64_t sub_FA6C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1936 * (v4 == ((a4 - 1779146635) & 0x6A0B9EDF ^ 0x29D))) ^ a4)))();
}

uint64_t sub_FAB0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((1473 * ((v1 ^ 0x325F6854) == (a1 ^ (v3 + 134)) + (a1 ^ 0x983C6883) + v2)) ^ a1)))();
}

uint64_t sub_FB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((339 * (a8 + 1 == v10 + 32)) ^ v8)))();
}

uint64_t sub_FBD4@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1063));
  return v3(v1);
}

uint64_t sub_FC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>)
{
  *(unsigned char *)(a6 + (a8 - 853605376)) = *(unsigned char *)(a5 + a7 - 158929246);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                + 8
                                                                                * (int)((((a8 - 853605375) < 0x40)
                                                                                       * (((((v8 - 18) | 8) + 1030547169) & 0xC293183C)
                                                                                        - 6)) ^ ((v8 - 18) | 8))))(a1, a2, a3, a4, a5 + 1);
}

uint64_t sub_FC78@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char a23)
{
  uint64_t v26 = *v24;
  *(_DWORD *)(v23 - 0xDE78D69D6C1C02DLL) = 0;
  return (*(uint64_t (**)(char *, char *, char *))(v25
                                                           + 8
                                                           * (((v26 == 0x67843F9A1244BACBLL) * ((a1 + 487) ^ 0x7C2)) ^ a1)))(&a20, &a23, &a13);
}

void sub_FD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, unsigned int a14)
{
  unsigned int v18 = 1178560073 * ((&a10 + 1082006361 - 2 * (&a10 & 0x407E1B59)) ^ 0x72681B19);
  a10 = v16;
  a11 = 0x31FD77B69BC3E185;
  a12 = v18 ^ 0x294A23BB;
  a13 = v18 + (v14 ^ v15) - 897;
  a14 = -955300587 - v18;
  (*(void (**)(uint64_t *))(v17 + 8 * (v14 ^ v15 ^ 0xDB3)))(&a10);
  sub_1308C();
}

uint64_t sub_FDA8()
{
  return sub_FDB0();
}

uint64_t sub_FDB0(uint64_t a1, uint64_t a2, uint64_t a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * v51);
  HIDWORD(a27) = HIDWORD(a42);
  LODWORD(a23) = BYTE4(a45) ^ 0xFFFFFFCE;
  int v62 = BYTE4(a45) ^ 0xCE;
  if (v62 == 2)
  {
    LODWORD(a25) = a44;
    int8x16x4_t v84 = vld4q_s8(v53);
    HIDWORD(a21) = HIDWORD(a44);
    uint8x16_t v71 = (uint8x16_t)veorq_s8(v84.val[1], a4);
    _Q22 = vmovl_u8(*(uint8x8_t *)v71.i8);
    _Q21 = vmovl_high_u8(v71);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    uint64_t v76 = (_DWORD *)(v57 + 4 * (v55 + 256920931));
    int v77 = *(v76 - 8) ^ *(v76 - 3);
    int v78 = v77 + v56 - (v54 & (2 * v77));
    int v79 = *(v76 - 16) ^ *(v76 - 14);
    uint64_t v80 = v79 ^ 0x2E215E86 ^ v78;
    HIDWORD(v81) = v79 ^ 0x2E215E86 ^ v78;
    LODWORD(v81) = v79 ^ ~v78;
    *uint64_t v76 = (v81 >> 31) + v56 - (v54 & (2 * (v81 >> 31)));
    unint64_t v82 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((62 * (v60 != 256920868)) ^ v52));
    return v82(a1, a2, a3, v82, v80, a44, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a43,
             a25,
             v61,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51);
  }
  else if (v62 == 1)
  {
    LODWORD(a25) = a44;
    int8x16x4_t v83 = vld4q_s8(v53);
    uint8x16_t v63 = (uint8x16_t)veorq_s8(v83.val[2], a4);
    _Q26 = vmovl_high_u8(v63);
    _Q25 = vmovl_u8(*(uint8x8_t *)v63.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * ((1191 * (a29 + 1 == v60)) ^ ((int)a6 + (int)a9 + 499))))(3739490932, a2, a3, *(&off_99820 + (int)((a6 + a9 + 499) ^ 0x3E6)), (a6 + a9 + 499), HIDWORD(a43), a43 ^ v59, 256920931, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a43,
             a25,
             v61,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51);
  }
  else
  {
    return v61(a1, a2, a3, a43, a6, a44, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35);
  }
}

void sub_101F4()
{
}

uint64_t sub_102D4(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((123 * (a3 + a1 + ((v3 + 1579) ^ 0x89408A49 ^ (v3 + 1588059218) & 0xA158276F) < 8)) ^ v3)))();
}

uint64_t sub_1036C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (a1 ^ 0x1C4)))();
}

uint64_t sub_103C0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  int v55 = *(_DWORD *)(&a39 + ((v53 + v51) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v53 + v51 + 1)) = (BYTE2(v55) ^ 0x2D) - ((2 * (BYTE2(v55) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a1 + (v53 + v51)) = (HIBYTE(v55) ^ 0x52) - ((v52 + 15) & (2 * (HIBYTE(v55) ^ 0x52))) - 27;
  *(unsigned char *)(a1 + (v53 + v51 + 2)) = (BYTE1(v55) ^ 0x73) - ((2 * (BYTE1(v55) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a1 + (v53 + v51 + 3)) = v55 ^ 0x8F;
  BOOL v56 = v53 + 1693402170 < (a51 + 1862017596);
  if (v53 + 1693402170 < a2 != a51 + 1862017596 < a2) {
    BOOL v56 = a51 + 1862017596 < a2;
  }
  return (*(uint64_t (**)(void))(v54 + 8 * ((3761 * v56) ^ v52)))();
}

uint64_t sub_10498@<X0>(int a1@<W4>, int a2@<W8>, int8x16_t a3@<Q2>, int8x16_t a4@<Q3>)
{
  *uint64_t v5 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v6 + (a2 + v7)), vandq_s8(vaddq_s8(*(int8x16_t *)(v6 + (a2 + v7)), *(int8x16_t *)(v6 + (a2 + v7))), a4)), a3);
  return (*(uint64_t (**)(void))(v8 + 8 * (a1 + v4 + 254)))();
}

uint64_t sub_104E8(uint64_t a1, uint64_t a2, int a3)
{
  int v8 = *(unsigned __int8 *)(a2 + 1) + ((v3 + v5 - 142) ^ (a3 - 254));
  return (*(uint64_t (**)(void))(v4 + 8 * ((1195 * ((v7 & (2 * v8)) + (v8 ^ v6) == v6)) ^ v5)))();
}

uint64_t sub_10534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v25 = ((((v24 - 144) | 0xE1017CD9) - (v24 - 144) + ((v24 - 144) & 0x1EFE8320)) ^ 0xBDCFBF94) * v19;
  *(_DWORD *)(v24 - 136) = v18 - v25 + 630;
  *(_DWORD *)(v24 - 116) = v21 - v25 + ((423 * (v18 ^ 0x49E)) ^ 0xD3277DA4);
  *(void *)(v24 - 128) = v23;
  *(void *)(v24 - 144) = v20;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v18 ^ 0xC14)))(v24 - 144);
  return sub_357D8(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_105C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  unsigned int v24 = ((2 * (&a14 & 0x4F910590) - &a14 + 812579432) ^ 0x6CA03925) * v23;
  LODWORD(a16) = (v20 - ((v20 << ((81 * (v21 ^ 0x7B) + 97) ^ (v21 + 29))) & 0xAE7A19E0) - 683864848) ^ v24;
  LODWORD(a15) = v21 - v24 + 66;
  a14 = a10;
  (*(void (**)(uint64_t *))(v22 + 8 * (v21 + 1527)))(&a14);
  a15 = v19;
  a16 = a10;
  LODWORD(a14) = v21 + 1178560073 * (&a14 ^ 0x32160040) + 1011;
  (*(void (**)(uint64_t *))(v22 + 8 * (v21 + 1606)))(&a14);
  unsigned int v25 = 628203409 * ((&a14 + 1529925748 - 2 * (&a14 & 0x5B30D074)) ^ 0xD9B8DC47);
  LODWORD(a14) = v21 - v25 + 776;
  a15 = v17;
  LODWORD(a16) = (v18 ^ 0x7E56EDCD) + ((2 * v18) & 0xFCADDB9A) - 67512453 + v25;
  a17 = a10;
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v22 + 8 * (v21 + 1513)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((165 * (HIDWORD(a14) == -1373544826)) ^ v21)))(v26);
}

uint64_t sub_10760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,unsigned int a22)
{
  unsigned int v24 = v23 - 1731440224 + a20;
  BOOL v25 = v24 < 0xADD6E28A;
  BOOL v26 = v24 > a22;
  if (a22 < 0xADD6E28A != v25) {
    BOOL v27 = v25;
  }
  else {
    BOOL v27 = v26;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8 * ((v27 * a19) ^ (a6 + a7 + 808))))(a1, 3941953673);
}

void sub_107F0()
{
}

uint64_t sub_10804(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a4 - 350) ^ 0xF7) * (v4 > 0x1F)) ^ a4)))();
}

uint64_t sub_10830@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *uint64_t v5 = v5[623];
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((461 * (v4 + ((a2 - 484) ^ (v2 + 656)) - v2 + 67 == 299839176)) ^ (a2 - 484))))(a1, 1460018998);
}

uint64_t sub_1088C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  *(void *)(a4 + (v6 - v7)) = *(void *)(a3 + (v6 - v7));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a5 + v7 != a2) * a6) ^ v8)))();
}

uint64_t sub_108B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(unsigned char *)(*v21 + (v18 + a6)) = 101;
  BOOL v22 = v18 - 1773944972 < (a18 - 1405106839);
  if ((a18 - 1405106839) < 0x1456CDCD != (v18 - 1773944972) < 0x1456CDCD) {
    BOOL v22 = (a18 - 1405106839) < 0x1456CDCD;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * (((v19 - 244) * v22) ^ v19)))();
}

void sub_1092C()
{
  *unsigned int v0 = 1373504850;
  sub_2FE28();
}

uint64_t sub_10940(uint64_t a1, int a2)
{
  *(void *)(a1 - 7 + (v4 + v3 - v6)) = *(void *)(v2 - 7 + (v4 + v3 - v6));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1418 * ((((a2 + 88) | 0x248) ^ 0x340) + v6 == v7 - (v5 & 7))) ^ a2)))();
}

void sub_1099C(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x67843F9A1244BAC3) + 4 * (v5 + v3)) = v1
                                                                        - (((v1 << (((v2 - 115) | 0x24) + 93))
                                                                          + 116381130) & v4)
                                                                        + 1050252255;
  sub_21874(a1);
}

uint64_t sub_109F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int32x4_t a25)
{
  int8x16x4_t v51 = vld4q_s8(a6);
  uint8x16_t v27 = (uint8x16_t)veorq_s8(v51.val[0], v26);
  uint16x8_t v28 = vmovl_u8(*(uint8x8_t *)v27.i8);
  int8x16_t v29 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v28.i8);
  int8x16_t v30 = (int8x16_t)vmovl_high_u16(v28);
  uint16x8_t v31 = vmovl_high_u8(v27);
  int8x16_t v32 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v31.i8);
  int8x16_t v33 = (int8x16_t)vmovl_high_u16(v31);
  uint8x16_t v34 = (uint8x16_t)veorq_s8(v51.val[1], v26);
  uint16x8_t v35 = vmovl_high_u8(v34);
  uint16x8_t v36 = vmovl_u8(*(uint8x8_t *)v34.i8);
  uint8x16_t v37 = (uint8x16_t)veorq_s8(v51.val[2], v26);
  _Q21 = (int8x16_t)vmovl_high_u8(v37);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v37.i8);
  int8x16_t v40 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v45 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v51.val[0] = veorq_s8(v51.val[3], v26);
  v51.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v51.val[0]);
  v51.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v51.val[1]);
  v51.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v51.val[0].i8);
  v51.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v51.val[0]);
  v51.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v51.val[0].i8), 0x18uLL), v40), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v36.i8, 8uLL), v29));
  v51.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v51.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v36, 8uLL), v30));
  v51.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v51.val[1].i8), 0x18uLL), v45), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v35.i8, 8uLL), v32));
  v51.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v51.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v35, 8uLL), v33));
  int32x4_t v46 = (int32x4_t)veorq_s8(vandq_s8(v51.val[0], a17), (int8x16_t)(*(_OWORD *)&v29 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  int32x4_t v47 = (int32x4_t)veorq_s8(vandq_s8(v51.val[3], a17), (int8x16_t)(*(_OWORD *)&v30 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  int32x4_t v48 = (int32x4_t)veorq_s8(vandq_s8(v51.val[1], a17), (int8x16_t)(*(_OWORD *)&v32 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  int32x4_t v49 = (int32x4_t)veorq_s8(vandq_s8(v51.val[2], a17), (int8x16_t)(*(_OWORD *)&v33 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  v25[2] = vaddq_s32(vsubq_s32((int32x4_t)v51.val[1], vaddq_s32(v48, v48)), a25);
  v25[3] = vaddq_s32(vsubq_s32((int32x4_t)v51.val[2], vaddq_s32(v49, v49)), a25);
  *BOOL v25 = vaddq_s32(vsubq_s32((int32x4_t)v51.val[0], vaddq_s32(v46, v46)), a25);
  v25[1] = vaddq_s32(vsubq_s32((int32x4_t)v51.val[3], vaddq_s32(v47, v47)), a25);
  return sub_37FF0(a1, a2, a3, a4, a20 & 0x5B8F35BF, (uint64_t)a6, a7, 768623631);
}

uint64_t sub_10B38(uint64_t a1)
{
  BOOL v5 = ((v4 - v3) & 0x1F) != 1;
  return (*(uint64_t (**)(uint64_t, void))(v2 + 8 * (v1 ^ ((4 * v5) | (8 * v5)))))(a1, (v1 ^ 0x7A4u) + 682);
}

uint64_t sub_10B9C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((a1 ^ 0x40A ^ (v1 == 0)) & 1) == 0) ^ a1 ^ 0x40A)))();
}

uint64_t sub_10BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (((((v5 - 692) ^ 0x596)
                                                                          + ((v5 - 692) | 0x2B4)
                                                                          - 2001)
                                                                         * (v3 == 1899470963)) ^ (v5 - 1430))))(a1, a2, a3, 1310800152);
}

uint64_t sub_10C18()
{
  return sub_10C20();
}

uint64_t sub_10C20(double a1, double a2, int8x16_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v55 = *(uint64_t (**)(void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * v47);
  int v56 = BYTE4(a39) ^ 0xCE;
  LODWORD(a19) = BYTE4(a39) ^ 0xFFFFFFCE;
  if (v56 == 2)
  {
    int8x16x4_t v76 = vld4q_s8(v50);
    uint8x16_t v65 = (uint8x16_t)veorq_s8(v76.val[1], a3);
    _Q22 = vmovl_u8(*(uint8x8_t *)v65.i8);
    _Q21 = vmovl_high_u8(v65);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    unint64_t v70 = (_DWORD *)(v48 + 4 * (v53 + 177557651));
    int v71 = *(v70 - 8) ^ *(v70 - 3);
    int v72 = v71 + v51 - ((v49 + 1547876620) & (2 * v71));
    int v73 = *(v70 - 16) ^ *(v70 - 14);
    HIDWORD(v74) = v73 ^ 0x2E215E86 ^ v72;
    LODWORD(v74) = v73 ^ ~v72;
    *unint64_t v70 = (v74 >> 31) + v51 - ((2 * (v74 >> 31)) & 0x5C42BD0C);
    return (*(uint64_t (**)(void))(v52 + 8 * (((v54 == 177557588) | (16 * (v54 == 177557588))) ^ v49)))(HIDWORD(a36));
  }
  else if (v56 == 1)
  {
    int8x16x4_t v75 = vld4q_s8(v50);
    uint8x16_t v57 = (uint8x16_t)veorq_s8(v75.val[2], a3);
    _Q26 = vmovl_high_u8(v57);
    _Q25 = vmovl_u8(*(uint8x8_t *)v57.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    return (*(uint64_t (**)(void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * (int)((1343 * (a24 + 1 == v54)) ^ a6)))(-(*((unsigned char *)*(&off_99820 + (int)a23) + a24 + v53) - 26), a24 + 1, a6, *((unsigned int *)*(&off_99820 + SHIDWORD(a23)) + a24 + v53 - 2), 177557651, a9, a10, HIDWORD(a37), a12, a13, a14, a15, a16, a17, a18, a19, __PAIR64__(a37, HIDWORD(a36)), __PAIR64__(a38, HIDWORD(a37)), v55,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47);
  }
  else
  {
    return v55(HIDWORD(a36), HIDWORD(a36), a6, a7, a8, a9, a10, a38, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29);
  }
}

void sub_1105C()
{
}

uint64_t sub_11134@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  if (a2 + v2 + 341 >= ((v5 - 1948489645) & 0x7423979Fu) + 2147483496) {
    int v6 = -1550566792 - v4;
  }
  else {
    int v6 = v4;
  }
  _DWORD *v3 = v6;
  *(_DWORD *)(result + 12) = 54151989;
  return result;
}

uint64_t sub_1118C(uint64_t result)
{
  *(_DWORD *)(result + 4) = v2 - v1 + 1291998337;
  return result;
}

uint64_t sub_111A4(char a1, int a2, int a3, void *a4, int a5, int a6, int a7)
{
  int v13 = v9 + a6;
  unsigned int v14 = *(_DWORD *)(*a4 + 4 * (v13 + v10)) ^ v8;
  *(_DWORD *)(*a4 + 4 * (v7 + v11 + 1)) = v8 + ((v14 >> a1) | a5 ^ v8) - (a2 & (2 * ((v14 >> a1) | a5 ^ v8)));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v13 + v10 > 0) * a7) ^ a3)))();
}

uint64_t sub_111AC@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W7>, uint64_t a4@<X8>)
{
  HIDWORD(v8) = a3 ^ 2;
  LODWORD(v8) = a3 ^ a2;
  return (*(uint64_t (**)(void))(v4 + 8 * ((3821 * (a4 + 1 == v7 + 60)) ^ a1)))((v8 >> 2)
                                                                                            + v6 - (v5 & (2 * (v8 >> 2))));
}

void sub_11278(_DWORD *a1@<X8>)
{
  *a1 = v2;
  *(_DWORD *)(v1 + 4) = 1373504947;
}

uint64_t sub_112C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  *(unsigned char *)(a2 + (v7 + a3 + 54)) = *(unsigned char *)(a1 + ((v5 + 4294967232) & (v6 + 3196172763)));
  return (*(uint64_t (**)(void))(v9 + 8 * (v3 ^ (774 * ((v4 & 0xFFFFFFFC) == v8)))))();
}

uint64_t sub_11310(char a1, char a2, char a3, uint64_t a4, int a5, int8x16_t a6, int8x8_t a7, int8x8_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  int v70 = a11 - 8;
  uint64_t v71 = (a5 + v70);
  v73.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)v70) & 0xF;
  v73.val[0].i64[1] = (v68 + (_BYTE)v70) & 0xF;
  v73.val[1].i64[0] = (a3 + (_BYTE)v70) & 0xF;
  v73.val[1].i64[1] = (v67 + (_BYTE)v70) & 0xF;
  v73.val[2].i64[0] = (v66 + (_BYTE)v70) & 0xF;
  v73.val[2].i64[1] = (a2 + (_BYTE)v70) & 0xF;
  v73.val[3].i64[0] = (v64 + (_BYTE)v70) & 0xF;
  v73.val[3].i64[1] = (a1 + (_BYTE)v70) & 0xF;
  *(int8x8_t *)(a4 + v71) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a4 + v71), *(int8x8_t *)(v62 + (v71 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v61 + (v71 & 0xF) - 7), *(int8x8_t *)(v63 + (v71 & 0xF) - 7)))), a8), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v73, a6), a7)));
  return (*(uint64_t (**)(void))(a61 + 8 * (((v65 == v70) * v69) ^ a10)))();
}

uint64_t sub_11318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a6 + v6 + v8) = v9;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)((((unint64_t)(v6 + 1 + v8) < 0x40)
                                     * (((v7 + 1334918868) & 0xB06EBEEF) + 1069)) ^ (v7 + 1334918868) & 0xB06EBEEF)))();
}

uint64_t sub_11364(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(a4 + v6 + v8) = a1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((unint64_t)(v6 + v8 + v5 - 62) < 0x38) * v7) ^ v4)))();
}

uint64_t sub_11394(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  unsigned int v29 = (a4 ^ 0x6A) + a24 + 918096561;
  int v30 = (a28 + 640286815 < (((a4 ^ 0x436) + 1619931834) & 0x9F71C9CA ^ 0x3A85D75E)) ^ (v29 < 0x3A85D65C);
  BOOL v31 = v29 < a28 + 640286815;
  if (v30) {
    BOOL v31 = a28 + 640286815 < (((a4 ^ 0x436) + 1619931834) & 0x9F71C9CA ^ 0x3A85D75E);
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((116 * v31) ^ ((a4 ^ 0x436) - 320))))();
}

void sub_11470(uint64_t a1, int a2)
{
  *int v2 = a2;
  sub_27F64();
}

uint64_t sub_11478()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (int)((((((v2 + v1 - 1841020831) < 8) ^ ((v0 ^ 0x9C) - 1)) & 1)
                                                   * (((v0 ^ 0x19C) + 1604675653) & 0xA05A96EE ^ 0x54F)) ^ v0 ^ 0x19C)))(v3);
}

uint64_t sub_114F0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  BOOL v33 = a2 + v31 + a31 - 1626 - 426 < (a2 + v31 + a31 - 277 - 1838);
  return (*(uint64_t (**)(void))(v32 + 8 * ((v33 | (8 * v33)) ^ a31)))();
}

void sub_11538()
{
}

uint64_t sub_11598()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 | (16
                                     * (((v1 << ((v0 + 124) ^ 7)) & 0xBEEFFFFC ^ 0xA0679790)
                                      + (v1 ^ 0x2FC43436)
                                      + ((v0 + 311421163) & 0xED70158F)
                                      + 1975383173 == 1429600648)))))();
}

uint64_t sub_11618(uint64_t a1)
{
  unsigned int v6 = *(unsigned __int8 *)(v1 + (v5 + 1));
  return (*(uint64_t (**)(uint64_t, void, void))(v2 + 8
                                                                 * (int)(((8 * (v6 >> 7)) | (32 * (v6 >> 7))) ^ v4)))(a1, (v3 - 1284426094), ((2 * v6) & 0xEC) + (v4 ^ 0x36A ^ v6 ^ 0xFFBEEC53) + ((v4 - 172004176) & 0xA409757 ^ 0x4CCFDDAD));
}

uint64_t sub_116D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((472 * (a1 + 1 != v3 + 4)) ^ v1)))();
}

uint64_t sub_11794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unsigned int v25 = ((&a17 & 0xF0CC7DD5 | ~(&a17 | 0xF0CC7DD5)) ^ 0x53FD4167) * v19;
  LODWORD(a19) = (v21 - ((2 * v21) & 0xAE7A19E0) + (((v24 + 953) | 4) ^ 0xD73D0A64)) ^ v25;
  LODWORD(a18) = v24 - v25 - 25;
  a17 = a12;
  (*(void (**)(uint64_t *))(v23 + 8 * (v24 + 1436)))(&a17);
  LODWORD(a17) = v24 + 1178560073 * (&a17 ^ 0x32160040) + 920;
  a18 = v20;
  a19 = a12;
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v23 + 8 * (v24 + 1515)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((1942 * (HIDWORD(a17) == v22)) ^ v24)))(v26);
}

uint64_t sub_11884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned int a31,unsigned int a32,unsigned int a33,uint64_t a34,int a35)
{
  unsigned int v37 = ((v36 + 436) ^ 0xAB9751FB) + a35;
  BOOL v38 = v37 < a31;
  BOOL v39 = v37 > a33;
  if (a33 < a32 != v38) {
    BOOL v40 = v38;
  }
  else {
    BOOL v40 = v39;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((23 * !v40) ^ (v36 + 1004))))();
}

uint64_t sub_11890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(_DWORD *)(a16 + 4 * (v19 - 1735915887)) = v16;
  BOOL v22 = v19 - 696982420 < -1108550182 || v19 - 696982420 >= v18;
  return (*(uint64_t (**)(void))(v20 + 8 * ((v22 * (((v17 - 957098005) & 0x390C27FF) - 540)) ^ v17)))();
}

uint64_t sub_118F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8
                                                                                * ((705
                                                                                  * (v6 > (int)(((v5 + 1538559729) & 0xA44B6BFF)
                                                                                              - 217))) ^ v5)))(a1, a2, a3, a4, a5);
}

void sub_1196C()
{
}

uint64_t sub_11980(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((9 * (a1 ^ 0x88)) ^ (a1 - 104)) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_119B4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((19
                                     * (((((v1 + 1994336146) & 0x8920D3DF) - 1600490958) & 0x5F658EFF ^ 0xFFFFFD81) + v0 < 23 * ((v1 + 1994336146) & 0x8920D3DF ^ 0x1D5) + 2147482934)) ^ (v1 + 1994336146) & 0x8920D3DF)))();
}

uint64_t sub_11A3C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  BOOL v17 = v14 != 1927359580 || a14 != ((a1 - 67305608) & 0x54EB6711) - 893619869;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v17 * ((a1 ^ 0x77D) - 1958)) ^ a1)))();
}

uint64_t sub_11AA0(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((((v3 + v7 - 544441935 + 178) | 0x22u) + v4) ^ *(_DWORD *)(*v5 + 4 * a2)) > (*(_DWORD *)(*v6 + 4 * a2) ^ (v4 + 1066)))
                                * (((v7 - 544441935) & v3) - 826)) ^ v7)))();
}

uint64_t sub_11B08(int a1, double a2)
{
  *(double *)(v3 + v6) = a2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v4 == v6) ^ v5) & 1) * a1) ^ v2)))();
}

uint64_t sub_11B34()
{
  *(_DWORD *)(v6 - 136) = (v4 + 418) ^ (((v6 - 136) ^ 0x6DF41809) * v3);
  *(void *)(v6 - 128) = v0;
  *(void *)(v6 - 120) = v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 + 1447)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((*(_DWORD *)(v6 - 132) > v2 + 71 * (v4 ^ 0x281u) - 639)
                                              * ((v4 ^ 0x281) + 1991)) ^ v4)))(v7);
}

uint64_t sub_11BC0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((55 * (((v0 == 0x3F54DF1F) ^ (v1 + 109)) & 1)) ^ v1)))();
}

uint64_t sub_11C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8 * (((32 * (a10 + 4 < a10)) | ((a10 + 4 < a10) << 7)) ^ v11 ^ 0x19D)))(a1);
}

uint64_t sub_11C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31)
{
  unsigned int v33 = 628203409 * ((&a24 & 0x8C7A82BE | ~(&a24 | 0x8C7A82BE)) ^ 0xF10D7172);
  unsigned int v34 = *(_DWORD *)(a2 + 4) - v33 + ((35 * (v31 ^ 0x19D)) ^ 0xD9AB305C);
  a30 = *(void *)(a2 + 8);
  a31 = a15;
  a28 = a17;
  a26 = v31 - v33 + 1213;
  a27 = v34;
  a24 = a16;
  a25 = a14;
  int v38 = v31;
  (*(void (**)(uint64_t *))(v32 + 8 * (v31 + 1758)))(&a24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                                  + 8 * ((1071 * (a29 == -1373544826)) ^ v38)))(a1, a2, 4143985707, 3146710353, 1435407688, 132026824, 1284425797);
}

uint64_t sub_11DBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v9 = a1 + 1;
  *uint64_t v2 = ((v3 + v9) ^ v5) * (v4 + v9);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v8 ^ (v9 == 91)) & 1) * v6) ^ v1)))();
}

uint64_t sub_11DC4@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a1 + ((v2 - a1 - 202214291) | 0xC0D8CA2) - 620) * (v3 == a2)) ^ v2)))();
}

uint64_t sub_11E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  return sub_464C8(a1, a2, a3, a4, a31);
}

uint64_t sub_11E18@<X0>(char a1@<W3>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  int v37 = *((_DWORD *)&a20 + ((v35 + a3) >> (v33 ^ (a1 + 80) ^ (a1 + 2))) + 18);
  *(unsigned char *)(a2 + (v35 + a3)) = v37 ^ 0x8F;
  *(unsigned char *)(a2 + (v35 + a3 + 1)) = (BYTE1(v37) ^ 0x73) - ((2 * (BYTE1(v37) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a2 + (v35 + a3 + 2)) = (BYTE2(v37) ^ 0x2D) - ((2 * (BYTE2(v37) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a2 + (v35 + a3 + 3)) = (HIBYTE(v37) ^ 0x52) - ((2 * (HIBYTE(v37) ^ 0x52)) & 0xCA) - 27;
  BOOL v38 = v35 + 1618067848 < (a32 + 1424192426);
  if (v35 + 1618067848 < v32 != a32 + 1424192426 < v32) {
    BOOL v38 = a32 + 1424192426 < v32;
  }
  return (*(uint64_t (**)(void))(v36 + 8 * ((v38 * v34) | v33)))();
}

uint64_t sub_11EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int8x16_t a21,uint64_t a22,uint64_t a23,int32x4_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  int8x16x4_t v50 = vld4q_s8(a6);
  uint8x16_t v30 = (uint8x16_t)veorq_s8(v50.val[0], v29);
  uint16x8_t v31 = vmovl_u8(*(uint8x8_t *)v30.i8);
  uint16x8_t v32 = vmovl_high_u8(v30);
  uint8x16_t v33 = (uint8x16_t)veorq_s8(v50.val[1], v29);
  _Q17 = vmovl_u8(*(uint8x8_t *)v33.i8);
  _Q16 = vmovl_high_u8(v33);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint8x16_t v42 = (uint8x16_t)veorq_s8(v50.val[2], v29);
  uint16x8_t v43 = vmovl_high_u8(v42);
  uint16x8_t v44 = vmovl_u8(*(uint8x8_t *)v42.i8);
  v50.val[0] = veorq_s8(v50.val[3], v29);
  v50.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v50.val[0]);
  v50.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v50.val[1]);
  v50.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v50.val[1].i8);
  v50.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v50.val[0].i8);
  v50.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v50.val[0]);
  v50.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v50.val[0].i8);
  int32x4_t v45 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v44.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v31.i8), 0x18uLL)), v50.val[0]);
  int32x4_t v46 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(v44, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v31), 0x18uLL)), v50.val[3]);
  int32x4_t v47 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v43.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v32.i8), 0x18uLL)), v50.val[1]);
  int32x4_t v48 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v43, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v32), 0x18uLL)), v50.val[2]);
  v50.val[0] = veorq_s8(vandq_s8((int8x16_t)v45, a21), (int8x16_t)(*(_OWORD *)v50.val & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  v50.val[3] = veorq_s8(vandq_s8((int8x16_t)v46, a21), (int8x16_t)(*(_OWORD *)&v50.val[3] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  v50.val[1] = veorq_s8(vandq_s8((int8x16_t)v47, a21), (int8x16_t)(*(_OWORD *)&v50.val[1] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  v50.val[2] = veorq_s8(vandq_s8((int8x16_t)v48, a21), (int8x16_t)(*(_OWORD *)&v50.val[2] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  v28[2] = vaddq_s32(vsubq_s32(v47, vaddq_s32((int32x4_t)v50.val[1], (int32x4_t)v50.val[1])), a24);
  v28[3] = vaddq_s32(vsubq_s32(v48, vaddq_s32((int32x4_t)v50.val[2], (int32x4_t)v50.val[2])), a24);
  *uint64_t v28 = vaddq_s32(vsubq_s32(v45, vaddq_s32((int32x4_t)v50.val[0], (int32x4_t)v50.val[0])), a24);
  v28[1] = vaddq_s32(vsubq_s32(v46, vaddq_s32((int32x4_t)v50.val[3], (int32x4_t)v50.val[3])), a24);
  return sub_44A24(a1, a2, a3, 9 * ((a28 + 837) ^ 0x383u));
}

uint64_t sub_12034()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((854
                                * (((v1 + ((v3 - 366) | 0x2C3) - 747) & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == v0)) ^ v3)))();
}

void sub_12090(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
  sub_2E03C();
}

uint64_t sub_12098(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((63
                                * (*(_DWORD *)(*(void *)(a1 + 8) + v3) != 38 * ((v4 + 316356896) & 0xED24C5FC ^ 0x1B1)
                                                                          + v2)) ^ v4)))();
}

uint64_t sub_120F0(uint64_t result)
{
  uint64_t v2 = *v1;
  *(void *)uint64_t result = 0;
  *(void *)(result + 8) = 0x51089CEA51089CEALL;
  *(void *)(result + 16) = 0xFA8CD10D108F0A73;
  *(_DWORD *)(result + 24) = -1373544826;
  *(void *)(v2 - 0x2F7E69BD89C7105) = result + 0x7761D79CB8DF4D13;
  *((_DWORD *)v1 + 2) = -1373544826;
  return result;
}

uint64_t sub_12164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v17 - 128) = v15;
  *(void *)(v17 - 120) = a13;
  *(_DWORD *)(v17 - 112) = v14
                         + 1759421093 * ((~((v17 - 128) | 0x92D7BE90) + ((v17 - 128) & 0x92D7BE90)) ^ 0xDE55F13B)
                         + 559;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 ^ 0xD88)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (((v16 != (v14 ^ 0x3DD) + 1797234320) | (16
                                                                                     * (v16 != (v14 ^ 0x3DD)
                                                                                             + 1797234320))) ^ v14)))(v18);
}

uint64_t sub_12208()
{
  BOOL v4 = v1 - 1320402170 < (int)(v2 + 744738012);
  if (v2 > 0x539C3323 != v1 - 1320402170 < -1402745636) {
    BOOL v4 = v2 > 0x539C3323;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((253 * ((v4 ^ (13 * ((v0 - 89) ^ 0xD1) + 1)) & 1)) ^ v0)))();
}

uint64_t sub_122A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * ((86
                                                                                           * (a7
                                                                                            - v9
                                                                                            + (unint64_t)((a8 + 958565308) & 0xC6DD77B8)
                                                                                            - 2455 < 0x20)) ^ a8)))(a1, a2, a3, a4, a5, a4);
}

uint64_t sub_122EC(int a1, uint64_t a2, int a3, int a4, int a5)
{
  *(_DWORD *)(a2 + (v7 - a4 + a1)) = *(_DWORD *)(v5 + (v7 - a4 + a1));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a4 + 4 == v6) * a5) ^ a3)))();
}

uint64_t sub_1231C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = v6 + v10;
  *(unsigned char *)(a6 + v12) = v9;
  return (*(uint64_t (**)(void))(v11 + 8 * ((((unint64_t)(v12 + 1) < 0x38) * v8) ^ (59 * (v7 ^ 0xB9)))))();
}

uint64_t sub_12360(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (a4 ^ (2 * ((unint64_t)(v4 - a1) < 0x20)))))();
}

uint64_t sub_12384()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((14
                                * ((((7 * (v3 ^ 0x1BF)) ^ (v1 + 235)) & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                 + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v0) == v0 + (v3 ^ 0x1BF) + 1622 - 1663)) ^ v3)))();
}

uint64_t sub_123E8(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((60 * (((v5 + 907586432) & 0xC9E756EE) - 2147334888 + a3 + a2 + 13 < 8)) ^ (v5 + 416))))(v3);
}

uint64_t sub_12464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  *(&a33 + v33 - 1076023950) = -27;
  return (*(uint64_t (**)(void))(v35 + 8 * ((26 * ((unint64_t)(v33 - 1076023949) > 0x3F)) | (a5 + v34 + 202))))();
}

uint64_t sub_124AC()
{
  return 4294925278;
}

uint64_t sub_124B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                                        + 8
                                                                                        * (((v8 >= (((a8 - 244) | 0x2D0) ^ 0x3CEu))
                                                                                          * ((a8 + 393) ^ 0x385)) ^ a8)))(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_124F4(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((((((a4 ^ 0x36F) + 1740) ^ 0x3D0) + 25 * (a4 ^ 0x36F)) * (v4 == a2)) ^ a4 ^ 0xF3)))();
}

uint64_t sub_12548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_19F3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           v26);
}

uint64_t sub_1255C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v30 = 460628867 * ((v29 - 1318213208 - 2 * ((v29 - 144) & 0xB16DAA38)) ^ 0xFDFB2845);
  *(void *)(v29 - 144) = v24;
  *(void *)(v29 - 120) = v26;
  *(_DWORD *)(v29 - 128) = v27 + v30 + ((v25 - 66) ^ 0x92A4ED3);
  *(_DWORD *)(v29 - 136) = v30 + v25 - 188;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v25 + 1808)))(v29 - 144);
  return sub_14698(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_125E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  HIDWORD(a22) = HIDWORD(a18) - 63387130;
  v52.i64[0] = 0xE5E5E5E5E5E5E5E5;
  v52.i64[1] = 0xE5E5E5E5E5E5E5E5;
  LODWORD(a27) = 31 * (a8 ^ (a8 - 15)) + 1342176815;
  return sub_FDB0(a1, (v50 - 2), 2005, v52, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           v51 - 16,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_12660@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6)
{
  BOOL v8 = a6 < 0x54CA2F02;
  if (v8 == (v6 + 1204532593) < 0x54CA2F02) {
    BOOL v8 = v6 + 1204532593 < a6;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((!v8 * (a1 ^ 0x244)) ^ a1)))();
}

uint64_t sub_126D8@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1303 * (a2 == v4 + ((7 * (a1 ^ (a1 - 35)) + 2127456005) & 0x81319ADF) - 730)) ^ (v2 + a1 + 320))))();
}

uint64_t sub_12738(int a1, unint64_t a2, unsigned int a3, int a4, int a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  BOOL v42 = v28 > v39;
  int v43 = a4 + a5;
  int v44 = a4 + 1;
  uint64_t v45 = 4 * (v44 + a5);
  unint64_t v46 = (*(_DWORD *)(a27 + v45) ^ v27) + (v30 ^ HIDWORD(v33));
  unint64_t v47 = HIDWORD(v40)
      + v36 * (unint64_t)(*(_DWORD *)(*v34 + v45) ^ v27)
      + ((v46 + a1 - ((v46 << (((v32 + 123) | v37) ^ v38)) & a3)) ^ a2);
  *(_DWORD *)(a27 + 4 * v43) = v47 + v27 - (v29 & (2 * v47));
  if (v42 == v44 + v31 < v41) {
    BOOL v42 = v44 + v31 < a8;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((!v42 * a7) ^ v32)))();
}

uint64_t sub_127E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50 = BYTE4(a44) ^ 0xCE;
  if (v50 == 1)
  {
    BYTE4(a39) = ((8 * a41) ^ 0x78) - ((2 * ((8 * a41) ^ 0x78)) & 0xC0) - 27;
    char v54 = -54;
    BYTE5(a39) = ((a5 + a8 - 77) ^ (a41 >> 5))
               - ((2 * ((a5 + a8 - 77) ^ (a41 >> 5))) & 0xCA)
               - 27;
    BYTE6(a39) = ((a41 >> 13) ^ 0x79)
               - 2 * (((a41 >> 13) ^ 0x79) & 0xE7 ^ (a41 >> 13) & 2)
               - 27;
    HIBYTE(a39) = ((a41 >> 21) ^ 0x71) - ((2 * ((a41 >> 21) ^ 0x71)) & 0xCA) - 27;
    HIDWORD(v55) = HIDWORD(a40) ^ 0x12;
    LODWORD(v55) = a41 ^ 0xC0000000;
    LOBYTE(a40) = (v55 >> 29) - ((2 * (v55 >> 29)) & 0xCA) - 27;
    BYTE1(a40) = ((HIDWORD(a40) >> 5) ^ 0x7F) - ((2 * ((HIDWORD(a40) >> 5) ^ 0x7F)) & 0xCA) - 27;
    BYTE2(a40) = ((HIDWORD(a40) >> 13) ^ 0xC0)
               - 2 * (((HIDWORD(a40) >> 13) ^ 0xC0) & 0xE7 ^ (HIDWORD(a40) >> 13) & 2)
               - 27;
    char v52 = a5 + a8 - 92;
    unsigned int v53 = (HIDWORD(a40) >> 21) ^ 0xFFFFFF94;
    goto LABEL_5;
  }
  if (v50 == 2)
  {
    BYTE4(a39) = ((HIDWORD(a40) >> 21) ^ 0x94) - ((2 * ((HIDWORD(a40) >> 21) ^ 0x94)) & 0xCA) - 27;
    BYTE5(a39) = ((HIDWORD(a40) >> (a5 + a8 + 86)) ^ 0xC0)
               - 2 * (((HIDWORD(a40) >> (a5 + a8 + 86)) ^ 0xC0) & 0xE7 ^ (HIDWORD(a40) >> (a5 + a8 + 86)) & 2)
               - 27;
    BYTE6(a39) = ((HIDWORD(a40) >> 5) ^ 0x7F) - ((2 * ((HIDWORD(a40) >> 5) ^ 0x7F)) & 0xCA) - 27;
    HIDWORD(v51) = HIDWORD(a40) ^ 0x12;
    LODWORD(v51) = a41 ^ 0xC0000000;
    HIBYTE(a39) = (v51 >> 29) - ((2 * (v51 >> 29)) & 0xCA) - 27;
    LOBYTE(a40) = ((a41 >> 21) ^ 0x71)
                - 2 * (((a41 >> 21) ^ 0x71) & 0xE7 ^ (a41 >> 21) & 2)
                - 27;
    BYTE1(a40) = ((a41 >> 13) ^ 0x79)
               - 2 * (((a41 >> 13) ^ 0x79) & 0xE7 ^ (a41 >> 13) & 2)
               - 27;
    char v52 = a5 + a8 - 92;
    BYTE2(a40) = ((a41 >> 5) ^ 0x6A) - ((2 * ((a41 >> 5) ^ 0x6A)) & 0xCA) - 27;
    LOBYTE(v53) = (8 * a41) ^ 0x78;
    char v54 = -64;
LABEL_5:
    BYTE3(a40) = v53 + ((v52 - 50) | 0xC6) - (v54 & (2 * v53)) - 10;
  }
  return sub_125E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_12A20(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  unsigned int v42 = 323 * ((a6 - 68748850) & 0xCD9FC7FF ^ (a4 + 2));
  int v37 = 3804331 * ((((2 * (v36 - 128)) | 0xAC7E5376) - (v36 - 128) - 1446980027) ^ 0xACA1DAED);
  *(void *)(v36 - 120) = a10;
  *(_DWORD *)(v36 - 128) = v37 + a6 + 1359;
  *(_DWORD *)(v36 - 124) = (a13 + 376469364) ^ v37;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (a6 ^ 0x848)))(v36 - 128);
  uint64_t v39 = a35 & 0x3F;
  *(&a26 + (v39 ^ 0xF)) = 101;
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * (int)((((v39 ^ 0xF) > 0x37) * (v42 - 554)) ^ a6)))(v38);
}

uint64_t sub_12B40@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((v1 == 1284426096) | 0x1EAu)))();
}

uint64_t sub_12B88@<X0>(int a1@<W4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,char a41)
{
  int v44 = 3 * (v41 ^ 0x284);
  *(&a41 + (v44 ^ (a1 + 1677)) + v42) = a34;
  *(&a41 + a2 + ((v44 - 381) ^ 0xE3607785)) = a35;
  return (*(uint64_t (**)(void))(v43 + 8 * (v44 ^ 0x38A)))();
}

uint64_t sub_12C2C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)((((((a8 - 215) | 0x780) ^ 0xFFFFF9C2) + ((a8 - 66) | 0x110)) * (v8 == a4)) ^ a8)))();
}

uint64_t sub_12C6C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1490
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 8) - 5)))
                                 + ((*(unsigned __int8 *)(v3 + 8) - 5) ^ v0) == v0
                                                                              + (v2 ^ 0x69)
                                                                              + ((v2 + 683794921) & 0xD73E1EBF)
                                                                              - 830)) ^ v2)))();
}

uint64_t sub_12CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,int a63)
{
  *(_DWORD *)(v64 - 120) = a61 ^ 0x659D6CCE;
  *(_DWORD *)(v64 - 132) = a63 ^ 0xF627E161;
  *(_DWORD *)(v64 - 124) = a64 ^ 0x8B487518;
  *(_DWORD *)(v64 - 128) = a62 ^ 0x4EAD3BEE;
  return sub_3DA14(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_12D20@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v5 = (((((a2 + 1947429836) & 0x94EC65AE) + 536873573) | 0xD7002420) + 919828612) & 0xD22C57FF;
  int v6 = **(unsigned __int8 **)(v4 + 80) - (*((unsigned __int8 *)*(&off_99820 + (a2 ^ (a1 + 7))) - 2) ^ 0xE5);
  BOOL v8 = (v6 ^ 0xEF9B7F7D) + ((2 * v6) & 0xDF36FEFA) + 527229912 != v3 || v5 == 0x4A6;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (int)((3252 * v8) ^ v5)))(v4 + 80);
}

uint64_t sub_12DB8()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((39
                                              * (v1 + v0 + 338837507 < ((146 * (v3 ^ 0x24E) + 1898542513) & 0x8ED6857D ^ 0x17D))) ^ v3)))(v2);
}

uint64_t sub_12E28()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v0 ^ 0x259 ^ (((v1 - 1262286146) & 0x81B635FE) - 645)) > 7)
                                     * (281 * ((v1 - 1262286146) & 0x81B635FE ^ 0x4EC) - 535)) ^ (v1 - 1262286146) & 0x81B635FE)))();
}

uint64_t sub_12E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)(((((v8 + 1576629962) & 0xF2EEE7FD ^ (v12 - 230)) + ((v8 - 2120) | 0x86))
                                     * (*(_DWORD *)(v11 + 48 * (v9 + a8) + 36) == v9)) | v8)))();
}

uint64_t sub_12EE8()
{
  int v8 = (void *)(v6 - 0x67843F9A1244BAC3);
  BOOL v9 = v1 + 40963502 < -2106520016;
  unsigned int v10 = ((2 * (*(_DWORD *)(*v8 + 4 * (v0 + 130)) ^ v3)) << (v2 ^ 0x1F)) | ((*(_DWORD *)(*v8 + 4 * (v0 + 129)) ^ v3) >> v2);
  *(_DWORD *)*int v8 = v10 + ((v5 + 51) ^ (v3 + 268)) - (v4 & (2 * v10));
  if (v1 + 40963502 >= -2106520016) {
    BOOL v9 = v1 + 40963502 > 40963633;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((1271 * v9) ^ (v5 - 255))))();
}

uint64_t sub_12FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20)
{
  int v23 = ((v20 + 684) ^ 0x596C891) + v21;
  int v24 = (a20 > 0x39590137) ^ (v23 < 69 * (v20 ^ 0x207) - 962134880);
  BOOL v25 = v23 < (int)(a20 + 1185349320);
  if (v24) {
    BOOL v25 = a20 > 0x39590137;
  }
  return (*(uint64_t (**)(void))(v22 + 8 * ((1307 * v25) ^ v20)))();
}

uint64_t sub_13044@<X0>(int a1@<W0>, unsigned int a2@<W8>)
{
  BOOL v7 = a2 < v2;
  if (v7 == a1 + v4 < v2) {
    BOOL v7 = a2 > a1 + v4;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (((((4 * v3) ^ v6) - 1352) * v7) ^ v3)))();
}

void sub_1308C()
{
  *(_DWORD *)(v0 + 4) = *(_DWORD *)(v1 - 0x7761D79CB8DF4CFBLL);
}

uint64_t sub_130DC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (a3 ^ ((v3 - v5 == -2051424976) | (32 * (v3 - v5 == -2051424976))))))();
}

uint64_t sub_1314C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (v9 | (8
                                     * (((a8 + (v9 ^ 0x211) - 178) ^ 0x6556F5BCu) + v8 < ((8 * (v9 ^ 0x211)) ^ (a1 + 880))
                                                                                       + v8)))))();
}

uint64_t sub_131A0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 == 24) * ((a3 - 1309) ^ 0xD47)) ^ a3)))();
}

void sub_131D0(uint64_t a1@<X8>, int a2, int a3, uint64_t a4)
{
  int v8 = (((v6 - 489) | 0x400) + 2144799759) & (v7 + 1132741596);
  unsigned int v9 = 535753261 * (((~&a2 & 0x516F954C) - (~&a2 | 0x516F954D)) ^ 0x5B9B9B62);
  a2 = v6 - v9 + 209;
  a3 = v4 + v9 - v8 - 1582454275;
  a4 = v5;
  (*(void (**)(int *))(a1 + 8 * (v6 ^ 0x96D)))(&a2);
  sub_2EB60();
}

uint64_t sub_1326C(uint64_t a1, int a2, int a3)
{
  unsigned int v6 = v3 - 1464369795 + (a2 ^ a3) - 1032;
  BOOL v7 = v5 + 977124861 > v6;
  if ((v5 + 977124861) < 0xCEF179E5 != v6 < 0xCEF179E5) {
    BOOL v7 = (v5 + 977124861) < 0xCEF179E5;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((100 * !v7) ^ a2)))();
}

uint64_t sub_132E0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v21 = (((((a9 + 1947429836) & 0x94EC65AE) + 536873573) | 0xD7002420) + 919828612) & 0xD22C57FF;
  int v22 = *(unsigned __int8 *)(*a1 + v17 + 0x3E76A940CF826F04)
      - (*((unsigned __int8 *)*(&off_99820 + v12 + a9 - 255) + v17 + 0x3E76A940CF826F04) ^ v13);
  BOOL v24 = (v22 ^ v19) + (v15 & (2 * v22)) + v14 != v18 || v21 + a6 + 0x3E76A940C7A3D88FLL == 0x3E76A940CF826F04;
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * (int)((v24 * v20) ^ v21)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12);
}

uint64_t sub_13314(uint64_t a1, uint64_t a2, int a3)
{
  v9.i64[0] = 0xCACACACACACACACALL;
  v9.i64[1] = 0xCACACACACACACACALL;
  v10.i64[0] = 0xE5E5E5E5E5E5E5E5;
  v10.i64[1] = 0xE5E5E5E5E5E5E5E5;
  uint64_t v11 = v6 + (((a3 ^ 0x56C) - 601) ^ v4);
  int8x16_t v12 = vrev64q_s8(*(int8x16_t *)(v7 + v11 - 15));
  int8x16_t v13 = vextq_s8(v12, v12, 8uLL);
  int8x16_t v14 = vrev64q_s8(*(int8x16_t *)(v7 + v11 - 31));
  int8x16_t v15 = vextq_s8(v14, v14, 8uLL);
  uint64_t v16 = v3 + v11;
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v13, vandq_s8(vaddq_s8(v13, v13), v9)), v10));
  *(int8x16_t *)(v16 - 15) = vextq_s8(v17, v17, 8uLL);
  int8x16_t v18 = vrev64q_s8(vaddq_s8(vsubq_s8(v15, vandq_s8(vaddq_s8(v15, v15), v9)), v10));
  *(int8x16_t *)(v16 - 31) = vextq_s8(v18, v18, 8uLL);
  return (*(uint64_t (**)(void))(v8 + 8 * ((396 * ((v5 & 0xFFFFFFE0) == 32)) | ((a3 ^ 0x56C) - 356))))();
}

uint64_t sub_133BC@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  *(unsigned char *)(a1 + v3 + v4) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v3 + 1 + v4) < 0x40) * v2) ^ a2)))();
}

uint64_t sub_133E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v39 = v35 + 1;
  *(unsigned char *)(a4 + (v39 + v37)) = *(unsigned char *)(a34 + a35 - 218003857)
                                             - (a7 & (2 * *(unsigned char *)(a34 + a35 - 218003857)))
                                             - 27;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((1458 * ((v37 + v39 + 1) < 0x40)) ^ v36)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_133F0@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 - 0x950CE2110AB3F3FLL) = 1;
  return sub_13408();
}

uint64_t sub_13408(uint64_t result)
{
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(*(void *)(v1 + 24) - 0x567D362CA97960D8) = result;
  *(_DWORD *)(v3 - 0x7F632B302E08524DLL) = v2;
  *(_DWORD *)uint64_t v1 = -1373544826;
  return result;
}

uint64_t sub_1347C()
{
  return sub_13488();
}

uint64_t sub_13488(int a1)
{
  int8x16_t v10 = *(uint64_t (**)(void))(v8 + 8 * v2);
  unsigned int v11 = v3 + a1;
  uint64_t v12 = *v9;
  *(unsigned char *)(*v9 + v11 + 1) = (v5 ^ BYTE2(v1)) - (v4 & (2 * (v5 ^ BYTE2(v1)))) - 27;
  *(unsigned char *)(v12 + v11) = (HIBYTE(v1) ^ 0xBB) - (v4 & (2 * (HIBYTE(v1) ^ 0xBB))) - 27;
  *(unsigned char *)(v12 + v11 + 2) = (v7 ^ BYTE1(v1)) - (v4 & (v1 >> 7)) - 27;
  *(unsigned char *)(v12 + v11 + 3) = v1 ^ v6;
  return v10();
}

uint64_t sub_134FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  BOOL v15 = a12 < 0x8C856A39;
  if (v15 == v12 + 1038825440 < ((v13 - 727454495) & 0x2B5C0FBF ^ 0x8C856A0B)) {
    BOOL v15 = v12 + 1038825440 < a12;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * (v13 ^ (8 * !v15))))();
}

uint64_t sub_13590(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, unsigned int a17)
{
  unsigned int v18 = a7 - 2108778312 + ((a5 + a4 + 945) | 0x6C);
  BOOL v19 = v18 < 0x9B1223C9;
  BOOL v20 = v18 > a17;
  if (a17 < 0x9B1223C9 != v19) {
    BOOL v21 = v19;
  }
  else {
    BOOL v21 = v20;
  }
  return (*(uint64_t (**)(void))(v17 + 8 * ((v21 * ((a5 + a4 + 49) ^ 0x9B)) ^ (a5 + a4 + 120))))();
}

uint64_t sub_13598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31)
{
  int v33 = *(_DWORD *)(a2 + 4);
  uint64_t v34 = *(void *)(a2 + 8);
  unsigned int v35 = 628203409 * (((&a24 | 0xD4CD0C0A) - (&a24 & 0xD4CD0C0A)) ^ 0x56450039);
  a28 = a17;
  a26 = v31 - v35 + 893;
  a27 = v33 - v35 + (((v31 - 502) | 0x11) ^ 0xD9AB305C);
  a30 = v34;
  a31 = a15;
  a24 = a16;
  a25 = a14;
  uint64_t v37 = (*(uint64_t (**)(uint64_t *))(v32 + 8 * (v31 + 1438)))(&a24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                                  + 8 * (((a29 == -1373544826) | (32 * (a29 == -1373544826))) ^ v31)))(v37, a2, 4143985707, 3146710353, 1435407688, 132026824, 1284425797);
}

uint64_t sub_136A4@<X0>(int a1@<W5>, int a2@<W8>)
{
  *(unsigned char *)(v5 + a1 + v4 + ((v6 + 1739829825) & 0x984C4B71)) = *(unsigned char *)(v3
                                                                         + a1
                                                                         + v4
                                                                         + ((v6 + 1739829825) & 0x984C4B71));
  return (*(uint64_t (**)(void))(v2 + 8 * ((207 * (a1 - 1 != a2)) ^ (v6 - 77))))();
}

uint64_t sub_136F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v25 - 120) = v22;
  *(void *)(v25 - 112) = a21;
  *(_DWORD *)(v25 - 104) = v21
                         + 1759421093 * (((~(v25 - 120) & 0xE915FA78) - (~(v25 - 120) | 0xE915FA79)) ^ 0x5A684A2D)
                         + 1188;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v21 ^ 0xB1D)))(v25 - 120);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (((v24 == (v21 ^ 0x5F2A513)) * ((v21 - 659) ^ 0x700)) ^ v21)))(v26);
}

void sub_1379C()
{
}

uint64_t sub_137A8(uint64_t a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  BOOL v55 = v52 != a2 + ((v51 - 142) | 0x108) - 1374 || a51 != a3;
  return (*(uint64_t (**)(void))(v53 + 8 * ((v55 * (a5 + ((v51 - 142) ^ a28) - 373)) ^ (v51 - 954))))();
}

uint64_t sub_137FC()
{
  uint64_t v4 = *(void *)(v6 + 8);
  *(_DWORD *)(v3 - 112) = (v0 - 374) ^ (1734042137 * ((v3 - 128) ^ 0x5CCEC34D));
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 120) = v4;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x125)))(v3 - 128);
}

uint64_t sub_1389C@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,unsigned int a33)
{
  unsigned int v39 = ((*v37 & 0x7FFFFFFE | v37[623] & 0x80000000) >> ((a3 + 23) & 0x67 ^ (v33 - 1))) ^ v34;
  v37[623] = v37[396] ^ a2 ^ *(_DWORD *)(v38 - 152 + 4 * (*v37 & 1)) ^ (v39 + a1 - (v36 & (2 * v39)));
  return (*(uint64_t (**)(void))(v35 + 8 * ((1841 * (a33 > 0x26F)) ^ a3)))();
}

uint64_t sub_13928()
{
  return v0();
}

uint64_t sub_13930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57)
{
  if (a33 == 2) {
    return (*(uint64_t (**)(uint64_t))(v57
  }
                                              + 8 * (((a57 == 1321801015) * ((v58 + 1660) ^ 0x6E3)) ^ (v58 + 1899))))(a14);
  if (a33 != 1) {
    JUMPOUT(0x13A68);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57
                                                              + 8 * ((v58 + 1658) ^ (2 * (a57 == (v58 ^ 0x4EC91508))))))(a1, a2, a14);
}

uint64_t sub_13AA0(uint64_t a1, int a2, uint64_t a3, int a4)
{
  BOOL v7 = v4 > 0x23E8B5F9;
  if (v7 == a2 + 473530960 < -602453498) {
    BOOL v7 = a2 + 473530960 < v6;
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * (((a4 + 567) * v7) ^ a4)))(a1);
}

uint64_t sub_13B0C@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  if (((905 * (v5 ^ 0x591)) ^ (a2 + 1196)) + v2 >= 0x7FFFFFFF) {
    int v6 = -1550566792 - v4;
  }
  else {
    int v6 = v4;
  }
  _DWORD *v3 = v6;
  *(_DWORD *)(result + 24) = 1234927729;
  return result;
}

uint64_t sub_13B50@<X0>(uint64_t a1@<X1>, int a2@<W5>, uint64_t a3@<X8>)
{
  HIDWORD(v9) = v4 ^ 2;
  LODWORD(v9) = v4 ^ (v7 - 2);
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v5 + 8 * ((3398 * (a3 + 1 == v8 + 20)) ^ a2)))((v9 >> 2) + v7 - (v6 & (2 * (v9 >> 2))), a1, v3);
}

uint64_t sub_13C28(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v3 & 0x18) == (a3 ^ 0x555) - 1865) * (((a3 ^ 0x133) - 355) ^ 0x490)) ^ a3 ^ 0x133)))();
}

uint64_t sub_13C6C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v7 = (a4 - 681) | 8;
  BOOL v8 = v4 < ((v7 - 194675818) ^ (v6 + 126) ^ (6 * (v7 ^ 0x2B3u)));
  return (*(uint64_t (**)(void))(v5 + 8 * (v8 | (16 * v8) | v7)))();
}

uint64_t sub_13CC0(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v9 = a3 + v6 + v7 + v8 + 155343132 - 1638518935;
  unsigned int v10 = v4 + 214954298;
  int v11 = (v10 < 0x3309EB53) ^ (v9 < 0x3309EB53);
  BOOL v12 = v9 > v10;
  if (v11) {
    BOOL v12 = v9 < 0x3309EB53;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((97 * v12) ^ (a4 - 1053))))();
}

uint64_t sub_13D40@<X0>(int8x16_t *a1@<X0>, int a2@<W8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>)
{
  *(int8x16_t *)(v6 + (a2 + 16)) = vaddq_s8(vsubq_s8(*a1, vandq_s8(vaddq_s8(*a1, *a1), a3)), a4);
  return (*(uint64_t (**)(int8x16_t *))(v8 + 8 * (((v5 == 16) * ((v4 + 4) ^ v7)) ^ v4)))(a1 + 1);
}

uint64_t sub_13D4C@<X0>(int a1@<W8>)
{
  int v6 = 59 * (v4 ^ 0x179);
  *(_DWORD *)(*(void *)(v3 - 0x67843F9A1244BAC3) + 4 * (a1 + v2 + 342)) = v5;
  int v7 = v2 + v6 - 176;
  int v8 = v6 ^ 0xE;
  *(_DWORD *)(v3 - 0x67843F9A1244BAC7) = v7;
  int v9 = (v6 ^ 0xE ^ (a1 + 269)) + v7;
  if (v9 < 0) {
    int v9 = -v9;
  }
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((772
                                * ((int)((v9 ^ 0x73FBFF3E)
                                       - 573694466
                                       + ((2 * v9) & 0xE7F7FE7C)
                                       + a1
                                       + ((4 * v8) ^ 0x258)
                                       + ((v8 - 1903052482) & 0x716E46B3)) >= 0)) ^ v8)))();
}

uint64_t sub_13E3C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, uint64_t a7)
{
  a4 = (v9 - 528) ^ (1374699841 * (((&a4 | 0x498218C7) - (&a4 & 0x498218C7)) ^ 0x247600CE));
  a6 = a1;
  a7 = a3;
  uint64_t v10 = (*(uint64_t (**)(unsigned int *))(v8 + 8 * (v9 ^ 0xFA5)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8 * (((a5 != v7 + v9 - 1715 - 285) * (((v9 - 1719) | 4) ^ 0x12F)) ^ v9)))(v10);
}

uint64_t sub_13EE0(uint64_t a1)
{
  int v1 = 1734042137 * ((((2 * a1) | 0x8ED2A308) - a1 + 949399164) ^ 0x9BA792C9);
  int v2 = *(_DWORD *)a1 ^ v1;
  int v3 = *(_DWORD *)(a1 + 4) + v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 16) - 0x67843F9A1244BAC7);
  unsigned int v6 = v4 - 1372200252;
  BOOL v5 = v4 - 1372200252 < 0;
  unsigned int v7 = 1372200252 - v4;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_99820 + v2 - 1456)
                              + 8
                              * ((214
                                * (((v2 - 93) ^ ((v3 - 1739280847) < 4 * (unint64_t)v8)) & 1)) ^ v2)
                              - 4))();
}

uint64_t sub_13FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * (int)(((454
                                                                                       * (((v6 - 423) | 0x782) ^ 0x7D1)
                                                                                       - 1348)
                                                                                      * ((v5 >> 3) & 1)) ^ v6)))(a1, a2, a3, a4, (v4 - a4));
}

uint64_t sub_13FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59)
{
  int v60 = STACK[0x4A8];
  LODWORD(STACK[0x5DC]) = LODWORD(STACK[0x4A8]) + 64;
  unsigned int v61 = LODWORD(STACK[0x634]) - 475207161;
  BOOL v62 = v60 + 615398715 > v61;
  if (v60 + 615398715 < (a59 + 1128008121) != v61 < (((a59 - 931) | 0x30) ^ 0x433C0D54u)) {
    BOOL v62 = v60 + 615398715 < (a59 + 1128008121);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8
                                                                                               * ((31 * v62) ^ a59)))(a1, a2, a3, 36533098, 2897210627, 3037000498);
}

uint64_t sub_140A4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((LODWORD(STACK[0x3FC]) - 639) ^ (4
                                                                * (((v0 > 0xD5E073EE) ^ (5 * LOBYTE(STACK[0x3B4]) - 64)) & 1)))))();
}

uint64_t sub_140F0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v10 = v2 - 1359518955;
  int v11 = v2 - 1;
  int v12 = *(unsigned __int8 *)(v5 + v10);
  if (v12 == 229) {
    __asm { BRAA            X11, X17 }
  }
  if (v12 == 101)
  {
    int v13 = -1373544826;
    uint64_t v14 = *(void *)(v3 + 8);
    int v15 = *(unsigned __int8 *)(v3 + 16) ^ v4;
    *(void *)uint64_t result = v5;
    *(_DWORD *)(result + 8) = v6;
    *(_DWORD *)(result + 12) = v11;
    if (v15 == 24) {
      int v16 = -91434738;
    }
    else {
      int v16 = -91434737;
    }
    *(_DWORD *)(result + 16) = 277809779;
    *(_DWORD *)(result + 20) = v16;
    *(_DWORD *)(result + 24) = -1373544826;
    *(void *)(v14 - 0x3DC5316605FC20BALL) = a2;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(void))(v9 + 8 * (v8 ^ 0xF0F)))();
    int v13 = 1373504863;
  }
  *(_DWORD *)uint64_t v3 = v13;
  return result;
}

uint64_t sub_141D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return (*(uint64_t (**)(void))(v23
                              + 8 * ((((a21 - 463788147) < 0x10) * (v21 - v22 + 436)) ^ (v21 + v24))))();
}

uint64_t sub_14218()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v1 ^ 0xFDE)))(v0 ^ (v2 + 344) ^ ((v1 - 1640) | 0x40u), 2064759104) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * (((v1 - 1786) | 0x251) - 667)) ^ v1)))();
}

uint64_t sub_1427C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  *(_DWORD *)(v36 - 136) = v32 - ((((v36 - 144) | 0x1DB24E5C) - ((v36 - 144) & 0x1DB24E5C)) ^ 0xE72CBD0A) * v33 - 1196;
  *(void *)(v36 - 128) = v35;
  *(void *)(v36 - 144) = v34;
  (*(void (**)(uint64_t))(v31 + 8 * (v32 + 798)))(v36 - 144);
  *(void *)(v36 - 120) = a31;
  *(void *)(v36 - 112) = v34;
  *(void *)(v36 - 144) = a24;
  *(void *)(v36 - 136) = v34;
  *(_DWORD *)(v36 - 104) = (v32 + 623) ^ (1759421093 * ((v36 + 1631053602 - 2 * ((v36 - 144) & 0x6137E7B2)) ^ 0xD24A57E6));
  *(void *)(v36 - 128) = v35;
  (*(void (**)(uint64_t))(v31 + 8 * (v32 ^ 0xD69)))(v36 - 144);
  *(void *)(v36 - 120) = v34;
  *(void *)(v36 - 112) = v34;
  *(void *)(v36 - 144) = a24;
  *(void *)(v36 - 136) = a18;
  *(void *)(v36 - 128) = v35;
  *(_DWORD *)(v36 - 104) = (v32 + 623) ^ (1759421093
                                        * ((2 * ((v36 - 144) & 0x65B19EF8) - (v36 - 144) + 441344258) ^ 0xA933D156));
  (*(void (**)(uint64_t))(v31 + 8 * (v32 ^ 0xD69)))(v36 - 144);
  *(void *)(v36 - 144) = a23;
  *(_DWORD *)(v36 - 136) = v32
                         + 1755732067 * ((v36 + 2048135898 - 2 * ((v36 - 144) & 0x7A14136A)) ^ 0xA4D2AEB1)
                         - 1882358827;
  *(void *)(v36 - 128) = v34;
  (*(void (**)(uint64_t))(v31 + 8 * (v32 ^ 0xD3A)))(v36 - 144);
  *(_DWORD *)(v36 - 136) = v32
                         - 3804331 * ((2 * ((v36 - 144) & 0x2EAC1DC0) - (v36 - 144) - 783031752) ^ 0x2BCD116E)
                         - 1196;
  *(void *)(v36 - 144) = v34;
  *(void *)(v36 - 128) = a25;
  (*(void (**)(uint64_t))(v31 + 8 * (v32 + 798)))(v36 - 144);
  *(_DWORD *)(v36 - 128) = (v32 - 9) ^ (1734042137
                                      * ((((v36 - 144) | 0xAD709DC5) + (~(v36 - 144) | 0x528F623A)) ^ 0xF1BE5E89));
  *(void *)(v36 - 144) = v34;
  *(void *)(v36 - 136) = a25;
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(v31 + 8 * (v32 ^ 0x2B6)))(v36 - 144);
  return (*(uint64_t (**)(uint64_t))(v31
                                            + 8
                                            * (((((((2 * v32) ^ 0xEAA) - 1410122829) & 0x540CC44C) - 1022) * (a22 != 0)) ^ (v32 + 722))))(v37);
}

uint64_t sub_142D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * (int)(((((((v5 - 380707167) & 0x16B11F6A) + 812) | 0x108) != 1375)
                                                   * (a5 + ((((v5 - 380707167) & 0x16B11F6A) + 812) ^ 0xED4688B9) - 373)) ^ (v5 - 380707167) & 0x16B11F6A)))(4114897149);
}

uint64_t sub_143A4@<X0>(unsigned int a1@<W5>, uint64_t a2@<X6>, char a3@<W8>)
{
  unsigned int v9 = v4 ^ 0x4E;
  unsigned int v10 = (unsigned char *)(a2 + (v5 - 693154930));
  unsigned int v11 = 2111498075
      * ((*(_DWORD *)(*(void *)STACK[0x3D8] + (*(unsigned int *)STACK[0x3D0] & (v9 ^ 0x2EE30A69))) ^ v10) & ((v9 - 893) ^ 0x7FFFFFBF));
  unint64_t v12 = 2111498075 * (v11 ^ HIWORD(v11));
  LOBYTE(v12) = *(unsigned char *)(*(void *)(v6 + 8 * (int)(v9 & 0xA9A9D081)) + (v12 >> 24)) ^ ((v3 ^ a1) >> a3) ^ *(unsigned char *)(*(void *)(v6 + 8 * (int)(v9 - 854)) + (v12 >> 24) - 5) ^ *(unsigned char *)(*(void *)(v6 + 8 * (int)(v9 ^ 0x322)) + (v12 >> 24) - 3) ^ v12 ^ (127 * BYTE3(v12));
  *unsigned int v10 = v12;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((123 * (v5 - (v12 != 0) == v7)) ^ v9)))();
}

uint64_t sub_143B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,int a53,int a54,int a55,unsigned int a56,int a57,int a58,int a59,unsigned __int8 a60)
{
  int v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * a7);
  uint64_t v65 = a56;
  int v66 = a60 ^ 0xCE;
  if (v66 == 2)
  {
    BOOL v71 = (unint64_t)&a43 + 4 < a28 && v62 < (unint64_t)&a52;
    return (*(uint64_t (**)(void, uint64_t))(v60
                                                      + 8
                                                      * ((((v71 ^ (v61 + 70)) & 1)
                                                        * ((v61 + 826) ^ 0x36C)) ^ (v61 + 1194))))(a56, 36533098);
  }
  else if (v66 == 1)
  {
    BOOL v68 = (unint64_t)&a43 + 4 < a28 && v62 < (unint64_t)&a52;
    return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, char *))(v60
                                                                                         + 8
                                                                                         * (((((HIDWORD(a23) ^ v68) & 1) == 0)
                                                                                           * (HIDWORD(a36) - 673)) ^ (v61 + 1875))))(a56, a1, a2, a3, a4, (char *)&a43 + 4);
  }
  else
  {
    a54 = 2 * (a54 ^ v64) + v64 - (v63 & (4 * (a54 ^ v64)));
    a55 = 2 * (a55 ^ v64) + v64 - (v63 & (4 * (a55 ^ v64)));
    a56 = 2 * (a56 ^ v64) + v64 - (v63 & (4 * (a56 ^ v64)));
    a57 = v64 + 2 * (a57 ^ v64) - (v63 & (4 * (a57 ^ v64)));
    HIDWORD(a31) = a60 ^ 0xFFFFFFCE;
    return v72(v65, a1, a2, a3, a4, v72, a5, a6, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             v72,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45);
  }
}

void sub_14590(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_14618@<X0>(uint64_t a1@<X8>)
{
  int v7 = ((((v6 - 144) | 0x6AE408BC) - (v6 - 144) + ((v6 - 144) & 0x951BF740)) ^ 0x362ACBF1) * v2;
  *(_DWORD *)(v6 - 116) = v4 - v7 - 359492785 + v1 - 66;
  *(void *)(v6 - 144) = v3;
  *(_DWORD *)(v6 - 136) = v1 - v7 + 1471;
  *(void *)(v6 - 128) = a1;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v1 ^ 0x9DBu)))(v6 - 144);
  return sub_14698(v8);
}

uint64_t sub_14698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v31 - 144) = a23;
  *(void *)(v31 - 136) = a24;
  *(_DWORD *)(v31 - 128) = (v28 + 472) ^ (((-243003403 - ((v31 - 144) | 0xF1840FF5) + ((v31 - 144) | 0xE7BF00A)) ^ 0x9AD6B953)
                                        * v26);
  uint64_t v35 = 8 * (v28 + 1885);
  (*(void (**)(uint64_t))(v24 + v35))(v31 - 144);
  *(void *)(v31 - 136) = v30;
  *(void *)(v31 - 128) = v27;
  *(void *)(v31 - 112) = a23;
  *(_DWORD *)(v31 - 120) = v28
                         + 1455
                         + 1224239923 * ((((2 * (v31 - 144)) | 0x8E0681A8) - (v31 - 144) + 956088108) ^ 0x35B0BD03);
  *(void *)(v31 - 144) = a24;
  uint64_t v34 = 8 * (v28 ^ 0x96A);
  (*(void (**)(uint64_t))(v24 + v34))(v31 - 144);
  *(void *)(v31 - 128) = a23;
  *(void *)(v31 - 120) = v25;
  *(void *)(v31 - 112) = v30;
  *(_DWORD *)(v31 - 104) = (v28 + 1713) ^ (1759421093
                                         * ((2 * ((v31 - 144) & 0x2B596A10) - (v31 - 144) + 1420203497) ^ 0xE7DB25BD));
  *(void *)(v31 - 144) = a24;
  *(void *)(v31 - 136) = v30;
  (*(void (**)(uint64_t))(v24 + 8 * (v28 ^ 0x92B)))(v31 - 144);
  *(_DWORD *)(v31 - 128) = (v28 + 129) ^ (3804331
                                        * (((v31 - 144) & 0xB2991CB8 | ~((v31 - 144) | 0xB2991CB8)) ^ 0xB7F81011));
  *(void *)(v31 - 120) = a24;
  *(void *)(v31 - 112) = v30;
  *(void *)(v31 - 144) = a23;
  *(void *)(v31 - 136) = v30;
  *(void *)(v31 - 104) = a16;
  (*(void (**)(uint64_t))(v24 + 8 * (v28 + 1907)))(v31 - 144);
  *(_DWORD *)(v31 - 128) = (v28 + 472) ^ (235795823 * ((v31 - 323564042 - 2 * ((v31 - 144) & 0xECB6CE86)) ^ 0x781B87DF));
  *(void *)(v31 - 144) = a19;
  *(void *)(v31 - 136) = a24;
  (*(void (**)(uint64_t))(v24 + v35))(v31 - 144);
  *(void *)(v31 - 112) = a19;
  *(_DWORD *)(v31 - 120) = v28 + 1455 + 1224239923 * ((v31 - 1979322361 - 2 * ((v31 - 144) & 0x8A05F097)) ^ 0x78B60D40);
  *(void *)(v31 - 136) = v29;
  *(void *)(v31 - 128) = v27;
  *(void *)(v31 - 144) = a24;
  (*(void (**)(uint64_t))(v24 + v34))(v31 - 144);
  *(void *)(v31 - 120) = v25;
  *(void *)(v31 - 112) = v29;
  *(void *)(v31 - 144) = a24;
  *(void *)(v31 - 136) = v29;
  *(_DWORD *)(v31 - 104) = (v28 + 1713) ^ (1759421093
                                         * ((((v31 - 144) | 0x87326FB7) - ((v31 - 144) & 0x87326FB7)) ^ 0x344FDFE3));
  *(void *)(v31 - 128) = a19;
  (*(void (**)(uint64_t))(v24 + 8 * (v28 ^ 0x92B)))(v31 - 144);
  *(void *)(v31 - 112) = v29;
  *(void *)(v31 - 104) = a17;
  *(_DWORD *)(v31 - 128) = (v28 + 129) ^ (3804331 * ((v31 - 144) ^ 0xFA9EF356));
  *(void *)(v31 - 144) = a19;
  *(void *)(v31 - 136) = v29;
  *(void *)(v31 - 120) = a24;
  (*(void (**)(uint64_t))(v24 + 8 * (v28 + 1907)))(v31 - 144);
  *(void *)(v31 - 144) = v30;
  *(void *)(v31 - 136) = v29;
  *(_DWORD *)(v31 - 128) = v28 + 1759421093 * ((v31 - 144) ^ 0xB37DB054) + 1797;
  (*(void (**)(uint64_t))(v24 + 8 * (v28 ^ 0x97E)))(v31 - 144);
  *(_DWORD *)(v31 - 144) = v28 + 535753261 * ((v31 - 445287334 - 2 * ((v31 - 144) & 0xE57574EA)) ^ 0xEF817AC5) + 1062;
  *(void *)(v31 - 136) = v29;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v28 + 1913)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((*(_DWORD *)(v31 - 128) < ((v28 - 686641950) & 0x28ED575F ^ 0x640A4529u))
                                              * (v28 - 212)) ^ v28)))(v32);
}

uint64_t sub_14ABC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 + 790 + ((v3 - 1137) | 2) - 1902) * (a2 == 0)) ^ (v3 - 165))))();
}

uint64_t sub_14AF0()
{
  uint64_t v6 = *(void *)(v9 + 8);
  int v7 = 460628867 * ((2 * ((v5 - 144) & 0x14EB5CC0) - (v5 - 144) - 350969028) ^ 0xA7822141);
  *(_DWORD *)(v5 - 128) = v7 + v0 - 372;
  *(void *)(v5 - 136) = v10;
  *(_DWORD *)(v5 - 144) = 774089200 - v7;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 ^ 0xC35)))(v5 - 144);
  *(void *)(v5 - 144) = v3;
  *(void *)(v5 - 136) = v10;
  *(void *)(v5 - 128) = v2;
  *(void *)(v5 - 120) = v1;
  *(_DWORD *)(v5 - 104) = (v0 + 883) ^ (1759421093
                                      * ((((v5 - 144) | 0x5E818490) - ((v5 - 144) & 0x5E818490)) ^ 0xEDFC34C4));
  *(void *)(v5 - 112) = v1;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 + 1003)))(v5 - 144);
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 136) = v6;
  *(_DWORD *)(v5 - 128) = (v0 + 251) ^ (1734042137
                                      * ((((v5 - 144) ^ 0x5ADF16E7)
                                        + 1656396633
                                        - 2 * (((v5 - 144) ^ 0x5ADF16E7) & 0x62BA9B59)) ^ 0x64AB4EF3));
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 ^ 0x3AA)))(v5 - 144);
}

uint64_t sub_14C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v34 = v30 + 1186562376;
  if ((v30 + 1186562376) <= 0x40) {
    int v34 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33
                                                                                + 8
                                                                                * ((((v29 ^ 0x66) - 1169)
                                                                                  * ((-v32
                                                                                                  - 1186563990
                                                                                                  - v31
                                                                                                  + v34
                                                                                                  + 1614) < 0xF)) ^ v29)))(-1318728281, a29, 4294966083, 3334056263, 53);
}

void sub_14D0C()
{
}

uint64_t sub_14D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((669 * ((v5 & 0x18) == ((a5 - 701) ^ 0x1B0))) ^ a5)))();
}

uint64_t sub_14D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v37 = a9 + 1;
  *(unsigned char *)(a4 + (v37 + a2)) = *(unsigned char *)(v35 + ((v34 - 605) ^ a6) + a34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * ((((a3 + v37 + 53) < 0x40) * (int)a1) ^ v34)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

void sub_14D64(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  unsigned int v11 = (&a3 ^ 0x32160040) * a1;
  a7 = v7 - v11;
  a3 = v9;
  a4 = 0x31FD77B69BC3E185;
  a5 = v11 ^ 0x294A23BB;
  a6 = v11 + v8 + 368;
  (*(void (**)(uint64_t *))(v10 + 8 * (v8 + 1956)))(&a3);
  sub_277A8();
}

uint64_t sub_14DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W6>, uint64_t a5@<X8>)
{
  *(unsigned char *)(v5 + (a4 - 948428593)) = *(unsigned char *)(a5 + (a4 - 948428593));
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v7
                                                             + 8
                                                             * (((a4 - 1 != v6) * ((a3 ^ 0xC1) - 176)) ^ a3 ^ 0xC1)))(a1, a2, (a3 ^ 0xC1u) + 855);
}

uint64_t sub_14E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((1753
                                * (*(_DWORD *)(a16
                                             + 4 * (((23 * (v17 ^ 0x660)) ^ 0x2D6 ^ (v18 + 668)) + v20)) == v16)) ^ (v17 - 960))))();
}

uint64_t sub_14E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  *(_DWORD *)(v8 - 120) = v6 + 6;
  *(_DWORD *)(v8 - 128) = v6 - 1;
  v9.n128_u64[0] = ((_BYTE)v6 + 5) & 0xF;
  v9.n128_u64[1] = ((_BYTE)v6 + 4) & 0xF;
  v10.n128_u64[0] = ((_BYTE)v6 + 3) & 0xF;
  v10.n128_u64[1] = ((_BYTE)v6 + 2) & 0xF;
  v11.n128_u64[0] = ((_BYTE)v6 + 1) & 0xF;
  v11.n128_u64[1] = v6 & 0xF;
  v12.n128_u64[0] = 0x6161616161616161;
  v12.n128_u64[1] = 0x6161616161616161;
  v13.n128_u64[0] = 0xE5E5E5E5E5E5E5E5;
  v13.n128_u64[1] = 0xE5E5E5E5E5E5E5E5;
  return sub_14F54(a1, a2, a3, a4, a5, v7 & 0xFFFFFFF0, a6, v9, v10, v11, (__n128)xmmword_84370, v12, v13);
}

uint64_t sub_14F54(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15)
{
  uint64_t v30 = (v19 + v18 - a15);
  uint64_t v31 = ((_BYTE)v19 + (_BYTE)v18 - (_BYTE)a15) & 0xF;
  uint64_t v32 = v21;
  v33.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v33.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v26, a5).u64[0];
  int8x16_t v34 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v20 + v30), *(int8x16_t *)(v16 + (v30 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v17 + (v30 & 0xF) - 15), *(int8x16_t *)(v15 + (v30 & 0xF) - 15))));
  int8x16_t v35 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v34, v34, 8uLL), a7), vmulq_s8(v33, a6)));
  *(int8x16_t *)(v23 + v30) = vextq_s8(v35, v35, 8uLL);
  return (*(uint64_t (**)(void))(v25 + 8 * (((a15 + v22 - 683 == a13) * v24) ^ a14)))();
}

uint64_t sub_14FE0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((7 * (v0 != ((v1 + 557) | 0x84u) + 0x51B1E41BDC880F77)) ^ v1)))();
}

uint64_t sub_15024@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((123 * (v2 + a1 + (v1 ^ 0x77Cu) < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_15064(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = STACK[0x3FC];
  STACK[0x468] -= 1616;
  LODWORD(STACK[0x5CC]) = a3 + 82;
  return (*(uint64_t (**)(void))(v3 + 8 * (((STACK[0x580] != 0) * (((v4 - 1267) ^ 0x6D2) - 1469)) ^ (v4 + 527))))();
}

void sub_150B4()
{
}

uint64_t sub_150BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((v6 == 24) * a3) ^ a5)))();
}

uint64_t sub_15108()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1895
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                 + ((v2 + 169) ^ (v0 - 539) ^ (*(unsigned __int8 *)(v3 + 3) - 134)) == v0)) ^ v2)))();
}

uint64_t sub_15148@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v6 + v3)) = *(unsigned char *)(v2 + (v6 + v3));
  return (*(uint64_t (**)(void))(v1 + 8 * (((8 * (v6 - 1 == v4)) | (32 * (v6 - 1 == v4))) ^ v5)))(0);
}

uint64_t sub_1517C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1348
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ (v0 + ((v2 + 143) | 0x1A) - 543)) == v0)) ^ v2)))();
}

uint64_t sub_151C4()
{
  return sub_19F50();
}

uint64_t sub_151D4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 - 1102148613) < 2) ^ (v1 - 1)) & 1)
                                * (((v1 - 1710) | 0x600) + 2173)) ^ v1)))();
}

uint64_t sub_15214(uint64_t a1)
{
  unint64_t v3 = STACK[0x578];
  BOOL v4 = LODWORD(STACK[0x474]) == 0;
  STACK[0x4D0] = LODWORD(STACK[0x474]);
  return (*(uint64_t (**)(uint64_t, unint64_t))(v2
                                                              + 8
                                                              * ((v4 ^ (v1 - 9)) & 1 | (32 * ((v4 ^ (v1 - 9)) & 1)) | v1)))(a1, v3);
}

uint64_t sub_15254()
{
  int v4 = (v1 ^ 0x340) + v2 + 644990708;
  BOOL v6 = v4 <= 601327475 && v4 >= v0 - 1546156268 + v1 - 518;
  return (*(uint64_t (**)(void))(v3 + 8 * ((21 * v6) ^ v1)))();
}

uint64_t sub_152AC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((61
                                * (((v1 << (3 * (v0 ^ 0x5D) + 62)) & 0xE27FDFF6 ^ 0x822C4204)
                                 + ((5 * (v0 ^ 0x60B) + 946456970) ^ v1)
                                 - 1881817560 != 18198051)) ^ v0)))();
}

void sub_15330()
{
}

void sub_1533C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  *int8x16_t v35 = -687464650;
  (*(void (**)(uint64_t))(v34 + 8 * ((v33 - 126) ^ 0x848)))(a33);
  JUMPOUT(0x153A4);
}

uint64_t sub_154F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  if (a14 < 0xB3C7DED3 != (a13 + 1697492154) < 0xB3C7DED3) {
    BOOL v16 = (a13 + 1697492154) < 0xB3C7DED3;
  }
  else {
    BOOL v16 = a13 + 1697492154 > a14;
  }
  return (*(uint64_t (**)(void))(v14
                              + 8 * (((((v15 - 1) ^ v16) & 1) * ((v15 + 897) ^ 0x3A5)) ^ (v15 + 588))))();
}

uint64_t sub_15570@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unint64_t a5@<X8>)
{
  uint64_t v9 = (a3 + a1 + a2);
  unint64_t v10 = v9 + a5 + 1;
  uint64_t v11 = ((a4 + 231) ^ 0x7DD) & v9;
  unint64_t v12 = v5 + v11 - v9;
  unint64_t v13 = v11 + v5 + 1;
  unint64_t v14 = v11 + v7 - v9 + 2;
  unint64_t v15 = v11 + v7 + 3;
  uint64_t v16 = v11 + v6;
  unint64_t v17 = v16 - v9 + 4;
  unint64_t v18 = v16 + 5;
  BOOL v20 = v13 > a5 && v12 < v10;
  if (v15 > a5 && v14 < v10) {
    BOOL v20 = 1;
  }
  int v23 = v18 > a5 && v17 < v10 || v20;
  return (*(uint64_t (**)(void))(v8 + 8 * (a4 | (4 * v23))))();
}

uint64_t sub_155F8(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  *(void *)(v8 - 152) = 0x5FFB05C8C6F3B517;
  unint64_t v9 = 1224239923 * ((~((v8 - 144) | v6) + ((v8 - 144) & v6)) ^ 0x911661D9A965DBABLL);
  unint64_t v10 = *a3 ^ v9;
  *(void *)(v8 - 136) = v9 ^ v7;
  *(void *)(v8 - 128) = v10;
  *(_DWORD *)(v8 - 120) = v9 + v3 - 327017655;
  *(_DWORD *)(v8 - 116) = -1224239923 * ((~((v8 - 144) | v6) + ((v8 - 144) & v6)) ^ 0xA965DBAB);
  int v11 = v3 - 2131395791 + v9;
  *(_DWORD *)(v8 - 112) = v11 + 63;
  *(_DWORD *)(v8 - 108) = v11;
  *(_DWORD *)(v8 - 140) = ((v3 - 2131395791) ^ 0x3D) + v9;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v3 ^ (v4 - 2116))))(v8 - 144);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v8 - 144)))(v12);
}

void sub_156D4()
{
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1336));
  JUMPOUT(0x67B8);
}

uint64_t sub_156F4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((701 * (*(_DWORD *)(v1 - 0x7761D79CB8DF4CFBLL) == ((v2 - 18) ^ 0xAE215AD8))) ^ v2)))();
}

void sub_1573C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_15888@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4)
{
  BOOL v16 = v14 > v8;
  uint64_t v17 = 4 * (v11 + v9);
  int v18 = v4 + v12 + (*(_DWORD *)(*(void *)(a4 - 0x67843F9A1244BAC3) + v17) ^ v13);
  *(_DWORD *)(*(void *)(a2 - 0x67843F9A1244BAC3) + v17) = v18 + v13 - (v10 & (2 * v18));
  int v19 = v11 + 1 + v5;
  LODWORD(v17) = v16 ^ (v19 < v6);
  BOOL v20 = v19 < v7;
  if (!v17) {
    BOOL v16 = v20;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * ((1678 * v16) ^ a1 ^ 0xB)))();
}

uint64_t sub_1596C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(&a19 + a2 + a1) = -27;
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((1050 * ((unint64_t)(a2 + a1 + 1) < 0x38)) ^ (v19 - 1979929764) & 0x760356DFu)))();
}

uint64_t sub_159C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  *(_DWORD *)(*v9 + 4 * (((a6 + 777) ^ (a7 + 80)) + v8)) = v11;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * (((((a6 - 65) | a5) + 2813) * (v10 == 0)) ^ (a6 + 777))))(a1, a2, a3, a4);
}

uint64_t sub_15A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  return sub_15A68(4294440761, 525277, a17, a4, a5, &a41, 202, &a37);
}

uint64_t sub_15A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v50 + 8 * ((77 * (a2 + ((2 * a50) & 0x48 ^ 8) + (a50 & 0x3F ^ (a1 + 1266)) - 61 < 0xFFFFFFC0)) ^ (v51 + 1277))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           *(void *)(v50 + 8 * a9));
}

uint64_t sub_15B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * ((1421 * (a23 == (((v23 - 502) | 0x11) ^ 0x325F6821))) ^ v23)))();
}

uint64_t sub_15BA0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((a1 - 383) ^ (448 * (v2 > 1)))))();
}

uint64_t sub_15CEC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((((a1 - 743) ^ (v2 == v1)) & 1) == 0) * (((a1 + 316) | 0x100) ^ 0x4E1)) ^ a1)))();
}

uint64_t sub_15D38@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  int v11 = v3 - 1375989922;
  int v12 = 19 * (v4 ^ 0x678);
  uint64_t v13 = 4 * (v7 + v5);
  int v14 = v8
      - 595061477
      + (*(_DWORD *)(*(void *)(a2 - 0x67843F9A1244BAC3) + v13) ^ v9)
      + (*(_DWORD *)(*(void *)(a3 - 0x67843F9A1244BAC3) + v13) ^ v9);
  *(_DWORD *)(*(void *)(a1 - 0x67843F9A1244BAC3) + v13) = v14 + v9 - ((v14 << (((v12 + 27) & 0xE2) + 95)) & v6);
  BOOL v16 = v7 + 853837193 > 771493725 || v7 + 853837193 < v11;
  return (*(uint64_t (**)(void))(v10 + 8 * ((850 * v16) ^ v12)))();
}

uint64_t sub_15E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,int a42,char a43)
{
  uint64_t v47 = *a13;
  *(void *)(v46 - 184) = 0xE5E5E5E5E5E5E5E5;
  *(void *)(v46 - 176) = 0xE5E5E5E5E5E5E5E5;
  int v48 = 235795823 * ((v46 - 168) ^ 0x94AD4959);
  *(_DWORD *)(v46 - 160) = v48 + 1488611281;
  *(void *)(v46 - 168) = &a43;
  *(_DWORD *)(v46 - 132) = (v45 + 1975) ^ v48;
  *(void *)(v46 - 152) = &a40;
  *(void *)(v46 - 144) = v47;
  *(void *)(v46 - 128) = v46 + 0x3AC75C5FABFFD261;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (v45 ^ 0x8B7)))(v46 - 168);
  return (*(uint64_t (**)(uint64_t))(v43
                                            + 8
                                            * (((*(_DWORD *)(v46 - 136) == v44 + v45 - 27) * ((v45 + 1236) ^ 0x27F)) ^ v45)))(v49);
}

uint64_t sub_15F5C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_15FF0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v1 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                      + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == v0)
                                     * (((v3 + 2061882985) & 0x851A2E7F) - 1591)) ^ v3)))();
}

uint64_t sub_16048(uint64_t a1)
{
  STACK[0x588] = *(void *)(v1 + 8 * (LODWORD(STACK[0x3FC]) - 1329));
  return sub_1720C(a1, 705);
}

uint64_t sub_16064(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((15
                                * (((v3 + 81) ^ 0xE8536C3A) + (v2 & 0x7FD93FCE) - 675285281 + (v5 ^ 0x3FEC98BB ^ a2) < ((2 * v3) ^ 0x7FFFF69Bu))) ^ v3)))();
}

uint64_t sub_160E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v13 = *(unsigned __int8 *)(v8 + (v11 + v10 + 2));
  return (*(uint64_t (**)(uint64_t, void, void))(v9
                                                            + 8
                                                            * ((234
                                                              * (a8 + 2147067901 != ((v12 - 882) | 0x253) + 707297053)) ^ v12)))(a1, (a5 + v10 + 1), (v13 ^ 0x5FFEEF7D) - 326116877 + (((v12 + 736436065) & 0xD41AD9AB ^ 0x79) & (2 * v13)));
}

uint64_t sub_16188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  *int v7 = v7[623];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * (((v4
                                                                          + v6
                                                                          + (((a4 ^ 0x3E5) - 1987477688) | 0x30727C23) == 1078720519)
                                                                         * ((a4 ^ 0x3E5) + 194)) ^ a4 ^ 0x3E5)))(a1, a2, a3, 1460018998);
}

void sub_161F4()
{
}

uint64_t sub_16204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  LODWORD(STACK[0x620]) = a16;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18
                                                              + 8
                                                              * (((STACK[0x408] == v17)
                                                                * ((v16 - 934) ^ 0x3BD ^ ((v16 - 1359) | 0x218))) ^ (v16 - 139))))(a1, a2, 1373504863);
}

uint64_t sub_16268@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((243 * (v1 == 1284426096)) ^ 0x46Bu)))();
}

uint64_t sub_16294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                                           + 8
                                           * ((979 * (((((v6 + 1494421154) & 0xA6ECF15F) - 326) & a5) == v6 - 348)) ^ v6)))((v6 + 1285));
}

uint64_t sub_162E0(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + (v7 + v6)) = *(void *)(a3 + (v7 + v6));
  return (*(uint64_t (**)(void))(v5 + 8 * (((a2 == 0) | (8 * (a2 == 0))) ^ a1)))();
}

uint64_t sub_16310(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((a2 + a8 - 16 >= (((a5 ^ 0x514) + 1088) ^ 0xFFFFFBB5)) * ((182 * (a5 ^ 0x514)) ^ 0x3BF)) ^ a5)))();
}

uint64_t sub_1635C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 1428) = 604952962;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1888 * (*(_DWORD *)(a2 + 4) == ((v2 + 1824539168) & 0x933FBEDF ^ 0x4C8ECB66))) ^ v2)))();
}

void sub_163C8()
{
}

uint64_t sub_163FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((37 * (v8 != (((v7 - 1564) | 0x550) ^ 0x552) * a7 + 1284424252)) ^ v7)))();
}

void sub_16448()
{
}

void sub_164F8()
{
}

uint64_t sub_16514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  int v46 = 3804331 * ((((2 * (v45 - 152)) | 0x254F8DF4) - (v45 - 152) + 1834498310) ^ 0x683935AC);
  *(void *)(v45 - 144) = a16;
  *(_DWORD *)(v45 - 152) = v46 + v43 + 1375;
  *(_DWORD *)(v45 - 148) = (a19 - 17819612) ^ v46;
  (*(void (**)(uint64_t))(v44 + 8 * (v43 + 2120)))(v45 - 152);
  uint64_t v47 = a43 & 0x3F;
  *(&a34 + (v47 ^ 0xF)) = 101;
  return (*(uint64_t (**)(uint64_t))(v44 + 8 * ((728 * ((v47 ^ 0xF) > 0x37)) ^ v43)))(2282780948);
}

uint64_t sub_16630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v11 = (char *)&STACK[0x670] + v9 + ((16 * v8) ^ 0xD324A27F925647D3);
  STACK[0x5E0] = (unint64_t)v11;
  STACK[0x3C8] = (unint64_t)(v11 + 228);
  LODWORD(STACK[0x454]) = 713989200;
  STACK[0x468] = v9 + (v8 - 70) - 1482;
  STACK[0x4B0] = 0;
  LODWORD(STACK[0x4F4]) = 1284426096;
  STACK[0x3D0] = (unint64_t)v11;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((v8 - 230) ^ (16 * (v11 == (char *)-248)))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1663C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((a5 + 1 == v7 + 48) ^ v5)))();
}

uint64_t sub_166FC()
{
  int v6 = 460628867 * ((((v5 - 144) | 0x70A3BF97) - (v5 - 144) + ((v5 - 144) & 0x8F5C4068)) ^ 0x3C353DEA);
  *(_DWORD *)(v5 - 128) = v6 + v2 - 217;
  *(void *)(v5 - 136) = v9;
  *(_DWORD *)(v5 - 144) = 774089200 - v6;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 + 1222)))(v5 - 144);
  *(void *)(v5 - 120) = v4;
  *(void *)(v5 - 112) = v4;
  *(void *)(v5 - 136) = v9;
  *(void *)(v5 - 128) = v3;
  *(_DWORD *)(v5 - 104) = (v2 + 1038) ^ (1759421093
                                       * ((((v5 - 144) | 0x1491497) + (~(v5 - 144) | 0xFEB6EB68)) ^ 0xB234A4C2));
  *(void *)(v5 - 144) = v0;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 ^ 0xB8E)))(v5 - 144);
  *(_DWORD *)(v5 - 128) = (v2 + 406) ^ (1734042137 * ((v5 - 144) ^ 0x5CCEC34D));
  *(void *)(v5 - 144) = v4;
  *(void *)(v5 - 136) = v8;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 + 1073)))(v5 - 144);
}

uint64_t sub_1685C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v32 = (v27 - 295336722) & 0x119A7F5F;
  int v33 = ((((v31 - 144) ^ 0x767B6BD9) - 2094765727 - 2 * (((v31 - 144) ^ 0x767B6BD9) & 0x83246961)) ^ 0xD6C5DAAE) * v29;
  *(void *)(v31 - 136) = a25;
  *(_DWORD *)(v31 - 128) = ((v32 ^ (v30 + 742)) + v25) ^ v33;
  *(_DWORD *)(v31 - 140) = (v32 - 1152) ^ v33;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v32 + 843)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (((*(_DWORD *)(v31 - 144) == v28 + ((v32 - 1183) | 0x20A) - 650)
                                              * (v32 ^ 0x52D)) ^ v32)))(v34);
}

uint64_t sub_1692C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  unsigned int v10 = (((((v2 + v5 - v3) >> 30) ^ 1) + v5 - 4 * ((v2 + v5 - v3) >> 31)) ^ (v2 + v5 - v3))
      * (((v7 - 1128) | v6) ^ a1);
  *(_DWORD *)(v8 + 4 * a2) = a2 + v5 + v10 - (v4 & (2 * (v10 + a2)));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a2 > 0x26E) | (4 * (a2 > 0x26E))) ^ v7)))();
}

uint64_t sub_16938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v76 = (((v73 | 0xE497B9B3) - v73 + (v73 & 0x1B684648)) ^ 0x703AF0EA) * v69;
  *(_DWORD *)(v75 - 168) = v76 + v70 + 492;
  *(void *)(v75 - 160) = a69;
  *(void *)(v75 - 176) = a68;
  *(void *)(v75 - 192) = v72;
  *(_DWORD *)(v75 - 184) = -1886077894 - v76;
  uint64_t v77 = (*(uint64_t (**)(uint64_t))(v74 + 8 * (v70 + 1965)))(v75 - 192);
  return (*(uint64_t (**)(uint64_t))(v74
                                            + 8
                                            * (((((v70 - 100) ^ (*(_DWORD *)(v75 - 152) == v71)) & 1)
                                              * ((v70 - 101) ^ 0x3D)) ^ v70)))(v77);
}

uint64_t sub_16A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8
                                                                                * (((((v6 + 171) | 0xA6) - 1147)
                                                                                  * (v5 == 0)) ^ v6)))(a1, a2, a3, a4, a5);
}

uint64_t sub_16A74()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1323 * (*(unsigned __int8 *)(v1 + 1) == (((v2 + 115) | 0x70) ^ 0x75))) ^ v2)))();
}

void sub_16AB4()
{
}

uint64_t sub_16AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(v6 - 1397079334 + v9 - 220 - 1) = -27;
  return (*(uint64_t (**)(void))(v8 + 8 * ((1417 * ((unint64_t)(v6 - 1397079334) < 0x40)) ^ (a6 + v7 - 229))))();
}

uint64_t sub_16B0C(int a1, int a2, int a3, unsigned int a4)
{
  unsigned int v8 = (a3 + 1091022934) & 0xBEF84BDF;
  int v9 = v5 + v4;
  unsigned int v10 = v9 + 1651848091 + ((v8 - 1777818468) | 0x482505C4);
  if (v10 <= 0x40) {
    unsigned int v10 = a4;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((23 * (v7 - v9 < v7 + a1 + a2 + 263 * (v8 ^ 0x385) + v10 - 526)) ^ v8)))();
}

uint64_t sub_16BA0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v1 | (8
                                     * (a1 + v2 - 1900015611 >= ((v1 + 1928025716) & 0x8D14A7D9)
                                                              + ((v1 - 638) ^ 0xFFFFFEB2))))))();
}

uint64_t sub_16C24@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W4>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21)
{
  *(&a21 + a4 + a1) = -27;
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((((unint64_t)(a4 + 1 + a1) > 0x3F) * (a3 + (v21 ^ (a2 + 466)) + 19)) ^ v21)))();
}

uint64_t sub_16C68(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(a1 - 7 + (v6 + v5 - v9)) = *(void *)(v4 - 7 + (v6 + v5 - v9));
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((203 * (((3 * (a4 ^ 0x81) + 1250) ^ 0x543) + v9 != v8 - ((3 * (a4 ^ 0x81) - 98) & v7))) ^ (3 * (a4 ^ 0x81)))))();
}

uint64_t sub_16CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * ((1111 * (a3 + 1 == v7 + 44)) ^ v3)))(v4, v5);
}

uint64_t sub_16D94()
{
  return 4294925278;
}

uint64_t sub_16D9C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, unsigned int a7)
{
  unsigned int v10 = 1178560073 * ((&a3 & 0x4D8B99B8 | ~(&a3 | 0x4D8B99B8)) ^ 0x80626607);
  a3 = v7;
  a4 = a1;
  a5 = v10 ^ 0x294A23C7;
  a6 = v10 + v9 - 875;
  a7 = -418429675 - v10;
  uint64_t v11 = (*(uint64_t (**)(uint64_t *))(v8 + 8 * (v9 + 713)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * (((*(_DWORD *)(v7 - 0x7761D79CB8DF4CFBLL) == ((5 * (v9 ^ 0x522)) ^ 0xAE215FFA))
                                              * (v9 - 864)) ^ v9)))(v11);
}

void sub_16E68()
{
  unint64_t v0 = STACK[0x3D0];
  unint64_t v1 = STACK[0x280];
  STACK[0x3A0] = STACK[0x280] + 2353;
  STACK[0x398] = v0 + 49;
  STACK[0x390] = v1 + 2333;
  STACK[0x388] = v0 + 29;
  STACK[0x380] = v1 + 2313;
  STACK[0x378] = v0 + 9;
  JUMPOUT(0x15F78);
}

void sub_16EFC()
{
}

void sub_16F20(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 32) - 0x4CAF57822185BF99) = a1;
  JUMPOUT(0x16F40);
}

void sub_16F80()
{
  unsigned int v4 = 628203409 * ((((2 * v1) | 0x9A16942A) - v1 - 1292585493) ^ 0xCF834626);
  *(void *)(v3 - 176) = STACK[0x5E8];
  *(_DWORD *)(v3 - 184) = v4 - 290923570;
  *(_DWORD *)(v3 - 192) = v4 + v0 + 1172345424;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 ^ 0x860)))(v3 - 192);
  STACK[0x4C0] = *(void *)(v2 + 8 * v0);
  JUMPOUT(0x25A6CLL);
}

uint64_t sub_17000@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((*(unsigned char *)(v5 + 1 + v6) - *(unsigned char *)(v4 + 1)) != 27)
                                * ((a4 + a1) & a2 ^ a3)) ^ (a4 - 607))))();
}

uint64_t sub_1700C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                       + 8
                                                                       * (((2 * (v4 < 0xDCFE8190)) | (4 * (v4 < 0xDCFE8190))) ^ (v5 + 1174669493))))(a1, a2, a3, 1460018998);
}

uint64_t sub_17054@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, int a7@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (((a7 + 1018) * (v8 == v7)) ^ a7)))(2282780948, a1, a2, a3, a4, a5, a6, 3980823791);
}

uint64_t sub_1708C@<X0>(void *a1@<X3>, uint64_t a2@<X4>, int a3@<W8>)
{
  *a1 = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v3 + a3 + 1067) ^ (29 * (a2 == 0)))))();
}

uint64_t *sub_170B8@<X0>(uint64_t *result@<X0>, int a2@<W1>, int a3@<W2>, _DWORD *a4@<X8>)
{
  uint64_t v7 = result[6];
  uint64_t v9 = *result;
  uint64_t v8 = result[1];
  *a4 = v5;
  *(_DWORD *)(v9 - 0x39E8CCF6252BBBF8) = v6;
  *(_DWORD *)(v7 - 0x35AD11BEDFA3F43ALL) = a3;
  *(void *)(v8 - 0x76DC35A7F08F6A42) = v4 + (a2 - 1210380922);
  *((_DWORD *)result + 8) = -1373544826;
  return result;
}

uint64_t sub_17124@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6, unsigned int a7)
{
  unsigned int v11 = 1178560073 * (((&a3 | 0x843CFE6E) - (&a3 & 0x843CFE6E)) ^ 0xB62AFE2E);
  a7 = -955300587 - v11;
  a5 = ((((v10 + 420) | 0x43) ^ 0xAEF95D10) + v9) ^ v11;
  a6 = v11 + v10 + 135;
  a3 = v7;
  a4 = a1;
  uint64_t v12 = (*(uint64_t (**)(uint64_t *))(v8 + 8 * (v10 ^ 0x94B)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((1495 * (*(_DWORD *)(v7 - 0x7761D79CB8DF4CFBLL) == -1373544826)) ^ v10)))(v12);
}

void sub_171F0()
{
}

uint64_t sub_1720C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W8>)
{
  STACK[0x508] = v6;
  STACK[0x5F0] = STACK[0x3C8];
  unsigned int v8 = *(_DWORD *)(v6 - 0x843828D0CDF33E9) & 0x3F ^ (((a6 + 299) | 0x410) - 1345);
  *(unsigned char *)(v6 - 0x843828D0CDF342DLL + v8) = 101;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * (((v8 > 0x37) * ((a6 - 1544227363) & 0x5C0B0FDF ^ 0x192)) ^ a6)))(a1, a2, 1373504863, a3, a4, a5, 1547877644, 595);
}

uint64_t sub_172D4(uint64_t a1, int a2)
{
  int v9 = (a2 - 773) | 0x300;
  uint64_t v10 = (v4 + v5 + v6 + v9 - v7);
  *(int8x8_t *)(a1 - 7 + v10) = vadd_s8(*(int8x8_t *)(v2 - 7 + v10), (int8x8_t)0x9494949494949494);
  return (*(uint64_t (**)(void))(v8 + 8 * ((13 * (((v9 ^ 0xFFFFF8BC) & v3) != v7 + 8)) ^ v9)))();
}

uint64_t sub_17348()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((38
                                * (((3 * ((v0 - 1383120170) & 0x5270BFBE ^ 0x629) - 1166) & *(_DWORD *)(v1 - 0x7761D79CB8DF4CFFLL)) != 0)) ^ v0)))();
}

uint64_t sub_173A4(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((7 * (a2 + a1 + 1195538728 + ((271 * (v2 ^ 0x749) + 483) | 0x44u) - 1092 > 7)) ^ v2)))();
}

void sub_1742C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1759421093 * ((-870162447 - (a1 | 0xCC225FF1) + (a1 | 0x33DDA00E)) ^ 0x80A0105A);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1750C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v0 ^ (706 * ((v2 + v1 - 2) < 0x7FFFFFFF)))))();
}

void sub_17580(int a1@<W8>, int a2, int a3, uint64_t a4)
{
  unsigned int v9 = (((&a2 | 0xEF29C4DE) - (&a2 & 0xEF29C4DE)) ^ 0xE5DDCAF1) * v5;
  a4 = v6;
  a2 = v7 - v9 + 396;
  a3 = v9 - a1 - ((v7 + 2144800481) & (1133978962 - v8)) + 565648056;
  (*(void (**)(int *))(v4 + 8 * (v7 ^ 0x9A8)))(&a2);
  sub_434CC();
}

void sub_1760C()
{
}

uint64_t sub_17618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  *(_DWORD *)(STACK[0x250] + 360) = 1102148614;
  uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))(v54 + 8 * (v49 + 834)))(v51, 2, &STACK[0x5F8], STACK[0x538], (v50 - 1284426096), a6, &STACK[0x580], &STACK[0x470]);
  int v58 = ((2 * v56) & 0xBBFFFFD2) + (v56 ^ 0x5DFFFFE9);
  if (v58 == 1845493740)
  {
    LODWORD(STACK[0x5CC]) = 1373504958;
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v54
                                                                                  + 8
                                                                                  * (((STACK[0x580] != 0)
                                                                                    * (((LODWORD(STACK[0x3FC]) - 1267) ^ 0x6D2)
                                                                                     - 1469)) ^ (LODWORD(STACK[0x3FC])
                                                                                               + 527))))(v56, STACK[0x580], 1373504863, v57);
  }
  else if (v58 == 1577058281)
  {
    int v59 = (LODWORD(STACK[0x3FC]) - 1348) | 0x3B1;
    STACK[0x380] = STACK[0x580];
    LODWORD(STACK[0x378]) = STACK[0x470];
    STACK[0x290] = STACK[0x280] + 2304;
    uint64_t v60 = 3 * (v59 ^ 0x2ECu);
    LODWORD(STACK[0x450]) = 70636633;
    int v61 = (char *)&STACK[0x670] + v52 - 0x2CDB5D806DA9E60DLL;
    STACK[0x220] = (unint64_t)&STACK[0x670] + v52 - 0x2CDB5D806DA9DC8DLL;
    STACK[0x278] = v52 + 4144;
    STACK[0x468] = v52 + 4144;
    *((void *)v61 + 304) = 0x6370646600;
    v61[2440] = 1;
    STACK[0x388] = (unint64_t)&STACK[0x670]
                 + v52
                 + ((v60 ^ 0x3D0) & (16 * ((void)&STACK[0x670] + v52 - 0x2CDB5D806DA9D5DDLL) + 16))
                 - 0x2CDB5D806DA9D5CDLL;
    STACK[0x3A0] = (unint64_t)&STACK[0x670] + v52 - 0x2CDB5D806DA9DC84;
    unint64_t v62 = *(uint64_t (**)(__n128))(v54
                                           + 8 * (int)((((v60 ^ 0x3D3) == 32) * (v60 ^ 0x42F)) ^ v60));
    STACK[0x3D8] = *(void *)(v53 + 8 * ((int)v60 - 892));
    STACK[0x3D0] = *(void *)(v53 + 8 * ((int)v60 - 1003));
    return v62((__n128)0);
  }
  else
  {
    int v64 = STACK[0x3FC];
    int v65 = 1374699841 * ((2 * ((v55 - 192) & 0xA20CFF0) - (v55 - 192) + 1977561096) ^ 0x182B2801);
    *(_DWORD *)(v55 - 192) = (LODWORD(STACK[0x3FC]) - 627) ^ v65;
    *(_DWORD *)(v55 - 176) = (v58 - ((2 * v58 + 1140850734) & 0x5C42BD0C) + 1344364189) ^ v65;
    *(void *)(v55 - 184) = a49;
    uint64_t v66 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (v64 ^ 0xDC9)))(v55 - 192);
    return (*(uint64_t (**)(uint64_t))(v54
                                              + 8
                                              * (((STACK[0x580] != 0) * (((v64 - 1267) ^ 0x6D2) - 1469)) ^ (v64 + 527))))(v66);
  }
}

uint64_t sub_17950()
{
  return sub_17958();
}

uint64_t sub_17958@<X0>(unsigned int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)(v4 + (v3 ^ a1) - v5) = *(void *)(a3 + (v3 ^ a1) - v5 - 7);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 == 328) * a2) ^ (v3 - 92))))();
}

uint64_t sub_17994()
{
  return sub_13488(-744713094);
}

uint64_t sub_17B2C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  if (!a1) {
    return (*(uint64_t (**)(void))(v57 + 8 * ((436 * ((a14 - 463788147) < 0x10)) ^ (v61 + 1357408016))))();
  }
  if (a1 != 3) {
    return (*(uint64_t (**)(void))(v57
  }
                                + 8
                                * ((1078
                                  * (*(_DWORD *)(v59 + 48 * v58 + 36)
                                   + 220123653
                                   + 2 * ((v56 + 67) ^ 0x50E86710u)
                                   + 280 < v62)) ^ (v61 + 1357408016))))();
  STACK[0x200] = a10 + (v60 + 1800160278);
  uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 48 * v58 + 8))(a4, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * ((1746 * (v63 - 1373544826 + (~(2 * v63) | 0xA3BD42F3) == -1373544827)) ^ (v56 + v61))))(v63, v64, v65, v66, 2921422470, v67, 3230439687, 2367607715, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_17CB8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((853
                                * ((((181 * (v1 ^ 0x175)) ^ v3) & (2 * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v0) == v0)) ^ v1)))();
}

uint64_t sub_17D00@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v7 = *(unsigned __int8 *)(a2 + a1 + v6 + 3) ^ 0xE5;
  int v8 = ((*(unsigned __int8 *)(a2 + a1 + v6) ^ 0xE5) << 24) | ((*(unsigned __int8 *)(a2 + a1 + v6 + 1) ^ 0xE5) << 16) | ((*(unsigned __int8 *)(a1 + v6 + a2 + (a3 - 826) - 61) ^ 0xE5) << 8) | v7;
  *(_DWORD *)(v5 + ((a1 + v6) & 0xFFFFFFFFFFFFFFFCLL)) = v8 + v4 - 2 * (v8 & 0x2E215E87 ^ v7 & 1);
  return (*(uint64_t (**)(void))(v3 + 8 * ((253 * ((unint64_t)(a1 + 4 + v6) > 0x3F)) ^ a3)))();
}

void sub_17D9C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20) - 1178560073 * ((2 * (a1 & 0xF0D1717) - a1 - 252516120) ^ 0xC2E4E8A8);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_17E84@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  *(void *)(a1 - 7 + (a3 + a2 - v4)) = *(void *)(v6 - 7 + (a3 + a2 - v4));
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((2944 * (v4 + ((v5 + 1816310812) & 0x93BD4AF0) - 664 == (v3 & 0xFFFFFFF8))) ^ v5)))();
}

uint64_t sub_17EE4(uint64_t a1)
{
  LODWORD(STACK[0x5CC]) = v2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * ((((v1 - 477) ^ 0x3A6) * v3) ^ (v1 + 512))))(a1, 249);
}

uint64_t sub_17F18(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(void *)(a1 + (a2 - v8)) = *(void *)(v11 + (a2 - v8));
  return (*(uint64_t (**)(void))(v12 + 8 * (((a3 + v8 == v10) * a8) ^ v9)))();
}

uint64_t sub_17F44()
{
  unsigned int v6 = v2 + ((v3 - 1201002) & 0xDE3FFFEF ^ 0x9E8F4C65);
  if (v6 <= 0x40) {
    unsigned int v6 = 64;
  }
  BOOL v7 = v5 - v0 - v1 + v6 < 0xF;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 | (4 * v7)) ^ (v3 + 1520))))();
}

uint64_t sub_17FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  LODWORD(STACK[0x350]) = (BYTE4(a23) | ((a27 ^ 0xC) << 24) | ((a26 ^ 0xEF) << 8) | ((a28 ^ 0x92) << 16)) ^ 0x9C045E9D;
  LODWORD(STACK[0x28C]) = HIDWORD(a26) ^ 0x2754616F;
  LODWORD(STACK[0x380]) = (HIDWORD(a25) | (HIDWORD(a27) << 8) | ((HIDWORD(a28) ^ 0xC2) << 16) | (HIDWORD(a24) << ((a30 - 77) ^ 0x93))) ^ 0xD5DAF903;
  LODWORD(STACK[0x390]) = ((((a29 ^ 0x5B) << 16) + ((a24 ^ v61) << 24)) | a25 | ((BYTE4(a29) ^ v62) << 8)) ^ 0x93D686E3;
  return sub_38844((int)a30 + 1715, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_180AC@<X0>(int a1@<W8>)
{
  v8.i64[0] = 0xCACACACACACACACALL;
  v8.i64[1] = 0xCACACACACACACACALL;
  v9.i64[0] = 0xE6E6E6E6E6E6E6E6;
  v9.i64[1] = 0xE6E6E6E6E6E6E6E6;
  *(int8x16_t *)(v3 + (v1 + a1)) = vaddq_s8(vaddq_s8(*v7, v9), vmvnq_s8(vandq_s8(vaddq_s8(*v7, *v7), v8)));
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((30
                                * ((((((v4 - 14) ^ 0x1FFFFFA19) & (v5 + v2 - 902)) == 16) ^ (-65 * ((v4 - 14) ^ 0xEA))) & 1)) ^ (v4 - 14))))();
}

void sub_1813C()
{
  LODWORD(STACK[0x4A8]) = v0;
  STACK[0x5B8] = *(void *)(v2 + 8 * v1);
  JUMPOUT(0x4288);
}

uint64_t sub_18168@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((1462 * (((v2 + 1719695118) & 0xAC38FD46) + a2 - 1076024274 < 0x38)) ^ (v2 + a1))))();
}

uint64_t sub_181B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 120) = (v16 + 609) ^ (1734042137
                                        * ((2 * ((v17 - 136) & 0x7099D5F8) - (v17 - 136) - 1889129977) ^ 0xD3A8E94A));
  *(void *)(v17 - 136) = a14;
  *(void *)(v17 - 128) = a13;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 1276)))(v17 - 136);
  int v18 = 535753261 * ((2 * ((v17 - 136) & 0x59E62C60) - (v17 - 136) + 639226782) ^ 0x2CEDDDB1);
  *(void *)(v17 - 136) = v14;
  *(_DWORD *)(v17 - 128) = v18 + 1640731306;
  *(_DWORD *)(v17 - 124) = v18 + v16 + 438;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 1419)))(v17 - 136);
  *(_DWORD *)(v17 - 136) = (v16 + 321) ^ (1374699841 * ((v17 - 136) ^ 0x6DF41809));
  *(void *)(v17 - 128) = v14;
  *(void *)(v17 - 120) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 1350)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v17 - 132) > 0x26812D29u) * ((v16 - 97) ^ 0x29E)) ^ (v16 - 414))))(v19);
}

uint64_t sub_181BC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (qword_A39F8 - qword_A4578) ^ (unint64_t)&v7;
  qword_A4578 = 1469428717 * (v2 + 0x13BC45BED9160A13);
  qword_A39F8 = 1469428717 * (v2 ^ 0xEC43BA4126E9F5EDLL);
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = (char *)*(&off_99820
               + ((-19 * ((qword_A39F8 - 19 * (v2 + 19)) ^ 0xED)) ^ byte_77E70[byte_84140[(-19 * ((qword_A39F8 - 19 * (v2 + 19)) ^ 0xED))] ^ 0xC3])
               - 88)
     - 4;
  if (v3 == 1284426099) {
    __asm { BRAA            X1, X17 }
  }
  if (v3 == 1284426106)
  {
    int v5 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X3, X17 }
  }
  return 4294925278;
}

uint64_t sub_1837C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((v4 + v6 + 307) ^ ((2 * (a4 == 0)) | (4 * (a4 == 0))))))();
}

uint64_t sub_183A4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1745
                                * ((((v2 - 1017698103) & 0x3CA8D7DF ^ (v1 - 533)) & (2
                                                                                   * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ (v0 + ((v2 + 724) | 0x235) - 1663)) == v0)) ^ v2)))();
}

uint64_t sub_1840C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * (int)(((*(_DWORD *)(v23 + 72) == a7 + 309) * (a21 & 0xC96C35EB ^ 0x112)) ^ (v21 + a3 + 373))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

void sub_18460()
{
}

uint64_t sub_184A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t), uint64_t a11)
{
  *(unsigned char *)(a2 + (a3 + 55)) = *(unsigned char *)(a1 + ((v11 + 4294967232) & (v12 + 2)));
  int v15 = 3804331 * ((((2 * (v14 - 168)) | 0x6F9E3C84) - (v14 - 168) + 1211163070) ^ 0x4D51ED14);
  *(void *)(v14 - 160) = a11;
  *(_DWORD *)(v14 - 168) = v15 + v11 + 1342;
  *(_DWORD *)(v14 - 164) = v15 ^ 0x4B7EE199;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (int)(v11 ^ 0x859)))(v14 - 168);
  return a10(v16);
}

uint64_t sub_1853C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 628203409 * ((2 * ((v19 - 152) & 0x70BF9FC0) - (v19 - 152) - 1891606465) ^ 0xDC86C0C);
  *(void *)(v19 - 152) = a13;
  *(void *)(v19 - 144) = a11;
  *(void *)(v19 - 112) = v18;
  *(void *)(v19 - 104) = a12;
  *(_DWORD *)(v19 - 136) = v15 - v20 + 371;
  *(_DWORD *)(v19 - 132) = v14 - v20 - 643092311;
  *(void *)(v19 - 128) = a14;
  (*(void (**)(uint64_t))(v17 + 8 * (v15 ^ 0xC9C)))(v19 - 152);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17
                                                              + 8
                                                              * (int)(((*(_DWORD *)(v19 - 120) == v16)
                                                                     * ((((v15 - 1409857276) & 0x5408B7B7) - 314144514) ^ ((v15 + 1212414854) | 0xA5028C85))) ^ v15)))(4114897149, 180070146, 129800696);
}

uint64_t sub_18660@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(*(void *)(v2 + 8 * (155 * (v1 ^ 0x7BF) - 468))
                              - 4
                              + 8
                              * (((a1 + 155 * (v1 ^ 0x7BFu) - 1135927872 < 0x7FFFFFFF)
                                * (((155 * (v1 ^ 0x7BF)) ^ 0x5D7) - 1957)) ^ (155 * (v1 ^ 0x7BF)))))();
}

uint64_t sub_186BC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  HIDWORD(v19) = a1 ^ a7;
  LODWORD(v19) = a1 ^ 0x55555555;
  int v20 = (v19 >> 27)
      + (a8 ^ v11)
      + (((v18 ^ v10) + v11 - (v13 & (2 * (v18 ^ v10)))) ^ v14)
      + (*(_DWORD *)(v8 + 4 * (v16 + a4 + 259 * (v9 ^ 0x470u)) - 2072) ^ v12);
  return (*(uint64_t (**)(void))(v15 + 8 * ((176 * (a4 + 1 == v17 + 24)) ^ v9)))(v20
                                                                                             - ((2 * v20 - 575416510) & v13) - 1056481525);
}

void sub_18788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unint64_t *a34,unint64_t a35,int a36,int a37,unint64_t a38,char *a39,unint64_t *a40,uint64_t a41,int a42,int a43,unint64_t *a44,uint64_t a45,uint64_t a46,int a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,unint64_t *a55,int a56,int a57,int a58,int a59,unint64_t *a60,int32x4_t a61,int32x4_t a62,uint64_t a63)
{
  STACK[0x338] = 0;
  a34 = &STACK[0xDE78D69D6C1C591];
  STACK[0x370] = (unint64_t)&STACK[0x35FF68D50C8F45BB];
  STACK[0x368] = (unint64_t)&STACK[0x39E8CCF6252BC0C4];
  STACK[0x360] = (unint64_t)&STACK[0x35AD11BEDFA3F866];
  STACK[0x358] = (unint64_t)&STACK[0x76DC35A7F08F6FB2];
  a77 = &STACK[0x330904BA72E943D0];
  a76 = &STACK[0x56530F603BC308C8];
  a75 = &STACK[0x330904BA72E94450];
  a74 = &STACK[0x56530F603BC309A8];
  a44 = &STACK[0x5CF1D1600198EE64];
  a60 = &STACK[0xDE78D69D6C1C4C1];
  STACK[0x270] = (unint64_t)&STACK[0x330904BA72E943B8];
  STACK[0x268] = (unint64_t)&STACK[0x56530F603BC308F4];
  a55 = &STACK[0x216229CD9A8FA6DD];
  STACK[0x218] = (unint64_t)&STACK[0x216229CD9A8FA6C5];
  STACK[0x238] = (unint64_t)&STACK[0x102FB98998D780FD];
  STACK[0x230] = (unint64_t)&STACK[0x27EFF0CD9F36B903];
  a40 = &STACK[0x18D17CD12703CAFF];
  int v84 = *(_DWORD *)(v81 + 28);
  int v85 = *(_DWORD *)(v81 + 32);
  STACK[0x208] = v81;
  a35 = ((unint64_t)&STACK[0x498] ^ 0xEBE8DEF97FAEEFB6)
      + 0x561F6FE6CFF3FF4CLL
      + ((2 * (void)&STACK[0x498]) & 0xD7D1BDF2FF5DDF60);
  a38 = ((unint64_t)&STACK[0x5D0] ^ 0xBF7ED3EF7DFBFF7ELL)
      + 0x59E7BD9BAFC53AE8
      + ((2 * (void)&STACK[0x5D0]) & 0x7EFDA7DEFBF7FEF0);
  a48 = 2 * (v85 + v79);
  LODWORD(STACK[0x288]) = ((v85 + v79) ^ 0xCCF05EF9) + 1587003127 + (a48 & 0xF7FD977E ^ 0x661D020C);
  unint64_t v86 = ((unint64_t)&STACK[0x478] ^ 0x9655BDBCEFFDDFB6)
      + 0x6BBEF673D7A26A4ALL
      + ((2 * (void)&STACK[0x478]) & 0x2CAB7B79DFFBBF60);
  a66 = ((unint64_t)&STACK[0x5A0] ^ 0x7FA7FEFED33B55FFLL)
      - 0x1301C4218FFFFLL
      + ((2 * (void)&STACK[0x5A0]) & 0xFF4FFDFDA676ABF0);
  int v87 = 562 * (v82 ^ 0x552);
  *(int32x4_t *)&STACK[0x320] = vdupq_n_s32(0x7FFFFFFEu);
  a59 = (v82 - 2139099761) & 0x7F800DED;
  LODWORD(STACK[0x334]) = (v82 + 643302905) & 0xD9A7F6FE;
  a61 = vdupq_n_s32(0xAE215E86);
  a62 = vdupq_n_s32(0x2E215E97u);
  STACK[0x2A0] = (unint64_t)&STACK[0x43C] % ((v80 - 2145297183) & 0x7FDE9FDD ^ 0xF9uLL) + 16;
  a49 = v85 + v79;
  LODWORD(STACK[0x228]) = (v85 + v79) ^ 0x370E9546;
  a73 = (char *)&a9 - 0x2CDB5D806DA9DF5DLL;
  a79 = (char *)&a9 - 0x2CDB5D806DA9DF36;
  a39 = (char *)&a9 - 0x2CDB5D806DA9E00BLL;
  LODWORD(STACK[0x29C]) = v82 ^ 0xD0E;
  LODWORD(STACK[0x298]) = v82 ^ 0xDD7;
  STACK[0x3F0] = 1759421093
               * ((-2 - ((~v83 | 0x5289147DE7DBE16FLL) + (v83 | 0xAD76EB8218241E90))) ^ 0x7C37D52D54A6513BLL);
  LODWORD(STACK[0x3C4]) = v87;
  LODWORD(STACK[0x3C0]) = v87 ^ 0x3D2;
  uint64_t v88 = 235795823 * (v83 ^ 0x8B0BAFE94AD4959);
  STACK[0x3E8] = v88;
  STACK[0x3E0] = v88 + 3367993564;
  LODWORD(STACK[0x3BC]) = v82 - 197893457;
  LODWORD(STACK[0x3B8]) = v82 + 632555110;
  LODWORD(STACK[0x3B4]) = v82 ^ 0x5C1;
  LODWORD(STACK[0x3B0]) = v82 - 1323836213;
  LODWORD(STACK[0x3AC]) = v82 - 1537364177;
  *(int32x4_t *)&STACK[0x300] = vdupq_n_s32(0xAE0C3E6C);
  *(int32x4_t *)&STACK[0x310] = vdupq_n_s32(0x2B830F9Bu);
  *(int32x4_t *)&STACK[0x2E0] = vdupq_n_s32(0x36113DE4u);
  *(int32x4_t *)&STACK[0x2F0] = vdupq_n_s32(0x57061F36u);
  STACK[0x2D8] = v83 | 0x40C4F3B8249A0ADCLL;
  a70 = v82 + 103690383;
  a65 = 85 * (v82 ^ 0x55B);
  a54 = v82 + 478081546;
  a53 = v82 - 1702595193;
  a52 = v82 - 1041721046;
  a51 = v82 + 2057982218;
  a50 = v82 - 1365785299;
  a58 = v82 ^ 0x45C;
  a57 = v82 + 1032423919;
  a67 = (v82 - 1075947970) & 0x4021A473;
  a68 = (v82 - 1075947970);
  LODWORD(STACK[0x2D4]) = v82 + 1552164447;
  a37 = v84 - v79;
  LODWORD(STACK[0x22C]) = v84 - v79 + 866030275;
  LODWORD(STACK[0x214]) = v82 ^ 0x5C5;
  STACK[0x200] = v86;
  a78 = v86 + 17;
  LODWORD(STACK[0x2B0]) = 1868785827;
  LODWORD(STACK[0x3FC]) = v82;
  a43 = v82 ^ 0xDC9;
  a42 = 2037425540;
  LODWORD(STACK[0x2B4]) = 1050041142;
  LODWORD(STACK[0x2D0]) = 1746339940;
  JUMPOUT(0x18E2CLL);
}

void sub_18EAC()
{
  LODWORD(STACK[0x618]) = v0;
  JUMPOUT(0x15F78);
}

uint64_t sub_18ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void))(v7
                                                                                                + 8
                                                                                                * ((v6 - 311) | (2 * ((v5 & 8) != (((v6 - 1203) | 0x405) ^ 0x445))))))(a1, a2, a3, a4, a5, (a4 - a5), (v6 - 758));
}

uint64_t sub_18F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,int a47)
{
  int v51 = STACK[0x2B4];
  if (LODWORD(STACK[0x2B4]) == 1318476601) {
    return (*(uint64_t (**)(void))(v49
  }
                                + 8
                                * ((58
                                  * (((LODWORD(STACK[0x2B0]) - 1868785827 < (LODWORD(STACK[0x3FC]) - 1357)) ^ (3 * LOBYTE(STACK[0x214]))) & 1)) ^ (LODWORD(STACK[0x3FC]) - 78))))();
  if (v51 == 1050041142)
  {
    int v56 = STACK[0x3FC];
    (*(void (**)(void, unint64_t, void))(v49 + 8 * (LODWORD(STACK[0x3FC]) + 819)))(*(unsigned int *)STACK[0x2B8], STACK[0x338], (LODWORD(STACK[0x2D0]) - 1746339940));
    unint64_t v57 = STACK[0x578];
    int v58 = 3804331 * ((((v50 - 192) | 0x1F3E4AD9) - (v50 - 192) + ((v50 - 192) & 0xE0C1B520)) ^ 0xE5A0B98F);
    int v59 = *(_DWORD *)(v48 + 52) - v58 + 964717148;
    *(_DWORD *)(v50 - 184) = (LODWORD(STACK[0x474]) ^ ((v56 ^ 0x2EE) + 1005054508))
                           - v58
                           + ((2 * LODWORD(STACK[0x474])) & 0x77CFE3D4)
                           - 570429792;
    *(_DWORD *)(v50 - 168) = v59;
    *(_DWORD *)(v50 - 164) = v56 - v58 - 1297;
    *(void *)(v50 - 192) = v47;
    *(_DWORD *)(v50 - 160) = ((a47 & 0x7FFFFFFF ^ 0xC1F52239) - 847417416 + (a46 & 0xEDF76EFE ^ 0x6C152A8C)) ^ v58;
    *(void *)(v50 - 152) = &STACK[0x650];
    *(void *)(v50 - 176) = v57;
    uint64_t v60 = (*(uint64_t (**)(uint64_t))(v49 + 8 * (v56 ^ 0xDFA)))(v50 - 192);
    int v61 = *(_DWORD *)(v50 - 180);
    LODWORD(STACK[0x5B4]) = v61;
    return (*(uint64_t (**)(uint64_t))(v49 + 8 * ((163 * (v61 == -1373544826)) ^ (v56 - 495))))(v60);
  }
  else
  {
    int v52 = STACK[0x3FC];
    LODWORD(STACK[0x2B4]) = v51;
    int v53 = v51 - (((v51 << ((37 * (v52 ^ 0x53)) ^ 0x6E)) + 47401364) & 0x5C42BD0C) + 1871381328;
    int v54 = 1374699841 * ((((v50 - 192) | 0xCEF6BA01) - (v50 - 192) + ((v50 - 192) & 0x310945F8)) ^ 0xA302A208);
    *(_DWORD *)(v50 - 176) = v53 ^ v54;
    *(_DWORD *)(v50 - 192) = (v52 - 627) ^ v54;
    *(void *)(v50 - 184) = STACK[0x218];
    (*(void (**)(uint64_t))(v49 + 8 * (v52 + 841)))(v50 - 192);
    return sub_2DB98();
  }
}

uint64_t sub_191E8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((v0 == 0) ^ v1) & 1) * (((v1 - 1476) | 0x284) ^ 0x2A8)) ^ v1)))();
}

uint64_t sub_19228@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v4)) = *(unsigned char *)(v3 + (v7 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v7 - 1 != v5) * v6) | v2)))(0);
}

uint64_t sub_19258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((21 * (a8 + 1 != v10 + 16)) | v8)))();
}

uint64_t sub_1932C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  HIDWORD(a16) = HIDWORD(a12) + 1711520168;
  v45.i64[0] = 0xE5E5E5E5E5E5E5E5;
  v45.i64[1] = 0xE5E5E5E5E5E5E5E5;
  uint64_t v46 = (a4 + 1715739123) & 0xD03525D7;
  HIDWORD(v48) = v46 ^ 0x1D4;
  LODWORD(v48) = v46 ^ 0x18B;
  return sub_10C20(*(double *)vdupq_n_s32(0x2E215E87u).i64, *(double *)vdupq_n_s32(0xAE215E86).i64, v45, a1, a2, v46, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a7, a15, a16,
           a17,
           a18,
           a19,
           v48,
           v44 - 16,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_193D0@<X0>(uint64_t a1@<X3>, char a2@<W8>)
{
  *(void *)(a1 + v3 + ((166 * (v2 ^ 0x6EDu)) ^ (unint64_t)(v4 + 392))) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((460 * ((a2 & 0x38) == 8)) ^ v2)))();
}

uint64_t sub_1941C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v6
                                                                      + 8
                                                                      * (((((a5 - 1458928467) & 0x56F575B6) - 385)
                                                                        * (v5 > 0xF)) ^ a5)))(a1, a2, a3, 0);
}

uint64_t sub_19458()
{
  STACK[0x350] = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((727 * (v0 == (((LODWORD(STACK[0x3FC]) - 109) | 8) ^ (v3 - 1049)))) ^ (LODWORD(STACK[0x3FC]) - 1282))))();
}

uint64_t sub_19494(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 32) = a4;
  return result;
}

uint64_t sub_1949C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * ((13 * (v5 + 1 != v6 + 48)) ^ v3)))(a1, a3, v7);
}

uint64_t sub_19588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v39 = (v32 - 1723263750) | 0x20B2E463;
  *int v37 = v37[623];
  unint64_t v40 = 1759421093 * ((0x816621BACCE92126 - (v36 | 0x816621BACCE92126) + a32) ^ 0x50271F15806B6E8DLL);
  *(void *)(v38 - 120) = (v35 + 1) ^ v40;
  *(_DWORD *)(v38 - 112) = ((v39 - 924210008) ^ 0x33) - v40;
  *(_DWORD *)(v38 - 104) = ((v39 - 924210008) ^ 0x63) - v40;
  *(_DWORD *)(v38 - 128) = -1098935330 - v40 + v39;
  *(_DWORD *)(v38 - 124) = v39 - 924210008 - v40;
  *(_DWORD *)(v38 - 144) = v40;
  *(void *)(v38 - 136) = 3 - v40;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v34 + 8 * (v39 ^ (v33 - 1910))))(v38 - 144);
  return (*(uint64_t (**)(uint64_t))(v34 + 8 * *(int *)(v38 - 108)))(v41);
}

uint64_t sub_19678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 == (v5 ^ 0x2DA) - 1224) * (3 * (v5 ^ 0x682) + 49)) ^ v5)))();
}

uint64_t sub_19748(uint64_t result)
{
  unint64_t v1 = 1224239923
     * ((-2 - ((~result | 0xA9794F52C0023E71) + (result | 0x5686B0AD3FFDC18ELL))) ^ 0x8123FA3B32B1C3A6);
  uint64_t v2 = *(void *)(result + 8);
  uint64_t v3 = *(void *)(result + 16);
  unint64_t v4 = v2 ^ v1;
  BOOL v5 = v3 == v2;
  BOOL v6 = (v3 ^ v1) > v4;
  if ((*(_DWORD *)(result + 28) + v1)) {
    BOOL v5 = v6;
  }
  BOOL v7 = !v5;
  uint64_t v8 = 32;
  if (!v7) {
    uint64_t v8 = 36;
  }
  *(_DWORD *)uint64_t result = (*(_DWORD *)(result + v8) - v1) ^ (*(_DWORD *)(result + 4) - v1);
  return result;
}

void sub_197F4(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 1734042137 * (((a1 ^ 0xA2C4A338 | 0x16634A81) - ((a1 ^ 0xA2C4A338) & 0x16634A81)) ^ 0xE8692AF4);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = (char *)*(&off_99820 + (v1 ^ 0x4AE)) - 4;
  (*(void (**)(char *, uint64_t (*)()))&v3[8 * (v1 ^ 0xC5E)])((char *)*(&off_99820 + v1 - 1054) - 4, sub_33208);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_198C0(uint64_t a1)
{
  int v1 = 3804331 * (((a1 ^ 0x9A32C815 | 0x394EC663) - ((a1 ^ 0x9A32C815) & 0x394EC663)) ^ 0x59E2FD20);
  int v2 = *(_DWORD *)a1 - v1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = (*(_DWORD *)(a1 + 4) ^ v1) - 1266606485;
  unsigned int v5 = v4
     + (*(_DWORD *)(v3 - 0x843828D0CDF33E9) ^ 0xCE2F2D4F)
     - ((2 * (v4 + (*(_DWORD *)(v3 - 0x843828D0CDF33E9) ^ 0xCE2F2D4F))) & 0x9C5E5A9E)
     - 835769009;
  *(_DWORD *)(v3 - 0x843828D0CDF33E9) = v5;
  return (*(uint64_t (**)(void))((char *)*(&off_99820 + (v2 ^ 0x5E5)) + 8 * ((856 * ((v5 ^ 0xCE2F2D4F) < v4)) ^ v2) - 4))();
}

uint64_t sub_19994(uint64_t a1, int a2, uint64_t a3, int8x16_t *a4, int a5)
{
  int8x16_t v11 = *(int8x16_t *)(v7 + v6 + (((v5 - 480) | a5) ^ (a2 - 79)));
  *a4 = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), v9)), v10);
  return (*(uint64_t (**)(void))(v8 + 8 * v5))();
}

uint64_t sub_199EC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((477 * (v1 == 1284426096)) ^ 0xF9u)))();
}

uint64_t sub_19A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return sub_D954(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_19A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v30 - 120) = v25
                         + 611
                         + 535753261 * ((2 * ((v30 - 144) & 0x5FD672B8) - (v30 - 144) + 539594051) ^ 0x2ADD836C);
  *(void *)(v30 - 112) = a24;
  *(void *)(v30 - 136) = a24;
  *(void *)(v30 - 128) = a21;
  *(void *)(v30 - 144) = v28;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 ^ 0xA70)))(v30 - 144);
  *(void *)(v30 - 144) = v28;
  *(void *)(v30 - 136) = a24;
  *(void *)(v30 - 128) = a21;
  *(_DWORD *)(v30 - 120) = v25
                         + 611
                         + 535753261 * ((2 * ((v30 - 144) & 0x98E9AE0) - (v30 - 144) + 1987142940) ^ 0x7C856B33);
  *(void *)(v30 - 112) = a24;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 ^ 0xA70)))(v30 - 144);
  int v31 = ((v30 + 250314850 - 2 * ((v30 - 144) & 0xEEB80F2)) ^ 0x2D7158E4) * v29;
  *(void *)(v30 - 136) = a25;
  *(_DWORD *)(v30 - 140) = (v25 - 578) ^ v31;
  *(_DWORD *)(v30 - 128) = (v26 - 584148099) ^ v31;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v25 ^ 0xA8B)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * ((19
                                              * (((v25 - 10) ^ (*(_DWORD *)(v30 - 144) == ((v25 + 1001407662) & 0xC44FBAFA ^ 0xB87C5416))) & 1)) ^ v25)))(v32);
}

void sub_19BE4()
{
}

void sub_19C40()
{
}

uint64_t sub_19C4C(void *a1, int a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unint64_t v33 = (*(_DWORD *)(a25 + 4 * (v25 + 1 + v28)) ^ v26)
      + HIDWORD(v29)
      + v32 * (unint64_t)(*(_DWORD *)(*a1 + 4 * (v25 + 1 + v28)) ^ v26);
  *(_DWORD *)(a25 + 4 * (v25 + v28)) = v26 + v31 - 1223 + v33 - (v27 & (2 * v33)) - 169;
  BOOL v35 = v25 + a4 < a5 && v25 + a4 >= a2;
  return (*(uint64_t (**)(void))(v30 + 8 * (((2 * v35) | (8 * v35)) ^ v31)))();
}

void sub_19CC4()
{
  int v0 = *(&off_99820
       + ((-19 * (dword_A3998 ^ 0xED ^ qword_A39F8)) ^ byte_7AAD0[byte_77C70[(-19 * (dword_A3998 ^ 0xED ^ qword_A39F8))] ^ 0x3E])
       - 40);
  int v1 = *(&off_99820
       + (byte_77E70[byte_84140[(-19 * ((qword_A39F8 + *v0) ^ 0xED))] ^ 0xD1] ^ (-19 * ((qword_A39F8 + *v0) ^ 0xED)))
       - 165);
  unint64_t v2 = (unint64_t)&v4[*v1 - *v0];
  *int v0 = 1469428717 * (v2 + 0x13BC45BED9160A13);
  *int v1 = 1469428717 * (v2 ^ 0xEC43BA4126E9F5EDLL);
  v5[0] = 1734042137 * ((-520473560 - (v5 | 0xE0FA3428) + (v5 | 0x1F05CBD7)) ^ 0x43CB089A)
        + 1695027452;
  LOBYTE(v1) = -19 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0xED);
  uint64_t v3 = (char *)*(&off_99820
               + ((-19 * ((qword_A39F8 + dword_A3998) ^ 0xED)) ^ byte_77E70[byte_84140[(-19 * ((qword_A39F8 + dword_A3998) ^ 0xED))] ^ 0xD1])
               - 103)
     - 4;
  (*(void (**)(_DWORD *))&v3[8
                                      * (v1 ^ byte_77E70[byte_84140[v1] ^ 0xC3])
                                      + 15768])(v5);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_19EF0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v0 + 675942036) & 0xB5F06F) + 352) ^ 0x67B) * (v1 == v2)) ^ v0)))();
}

void sub_19F30()
{
}

uint64_t sub_19F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned int a27)
{
  return sub_19F50(a1, (v27 + 536870141) & a27);
}

uint64_t sub_19F50()
{
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_19FC4@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v11 = v8 + 1;
  BOOL v12 = v3 < v7;
  *(_DWORD *)(*v6 + 4 * (v11 + v4)) = *(_DWORD *)(*v6 + 4 * (v2 + v11));
  if (v12 == v11 + v9 < ((v5 + 17) ^ a2)) {
    BOOL v12 = v11 + v9 < v3;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((!v12 * a1) ^ v5)))();
}

uint64_t sub_19FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a18 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18
  }
                                                                         + 8
                                                                         * ((1131
                                                                           * ((((a7 + a6) ^ (*(_DWORD *)(v19 - 128) == 1321801015)) & 1) == 0)) ^ (a7 + a6))))(a1, a2, a3, a10);
  if (a18 != 1) {
    JUMPOUT(0x1A128);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18
                                                     + 8
                                                     * (((8 * (*(_DWORD *)(v19 - 128) != 1321801015)) | (32 * (*(_DWORD *)(v19 - 128) != 1321801015))) ^ (a7 + a6))))(a1, a10);
}

uint64_t sub_1A160()
{
  STACK[0x338] = 0;
  int v2 = STACK[0x3FC];
  int v3 = *(_DWORD *)(v0 + 56);
  *(_DWORD *)(v0 + 56) = v3 + 1;
  int v4 = *(uint64_t (**)(void))(v1 + 8 * ((1747 * (v3 - 490784372 < 3 * (v2 ^ 0x575u) - 117)) ^ (v2 - 1249)));
  LODWORD(STACK[0x2D0]) = 1746339940;
  return v4();
}

void sub_1A1C0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20) - 235795823 * (((a1 | 0xEB3D4C35) - (a1 | 0x14C2B3CA) + 348304330) ^ 0x7F90056C);
  __asm { BRAA            X9, X17 }
}

void sub_1A2FC()
{
}

uint64_t sub_1A330(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int *a28,uint64_t a29,int *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  int v46 = (v44 - 1174668986) | 0x6C9;
  if (v40) {
    int v47 = v45;
  }
  else {
    int v47 = *a28 + 1;
  }
  *a28 = v47;
  int v48 = (((v42 >> 11) ^ 0xAE0C3) + v41 - ((2 * ((v42 >> 11) ^ 0xAE0C3)) & 0xC3E6C)) ^ v42;
  unsigned int v49 = (((v46 - 1658040393) & (v48 << 7) ^ v48) << 15) & 0xEFC60000 ^ (v46 - 1658040393) & (v48 << 7) ^ v48;
  uint64_t v50 = &a40 + a7 + ((v46 + 8370995) & 0xFF803F37) - 904238007;
  unsigned int v51 = 2111498075 * ((v50 ^ *(_DWORD *)(*a4 + (*a30 & 0xFFFFFFFF9387F0E4))) & 0x7FFFFFFF);
  unint64_t v52 = 2111498075 * (v51 ^ HIWORD(v51));
  char v53 = *((unsigned char *)*(&off_99820 + (v46 ^ 0x694)) + (v52 >> 24)) ^ v49 ^ a5 ^ (v49 >> 18) ^ a5 ^ *((unsigned char *)*(&off_99820 + (v46 ^ 0x64B))
                                                                                                + (v52 >> 24)) ^ *((unsigned char *)*(&off_99820 + v46 - 1584) + (v52 >> 24)) ^ v52 ^ (-71 * BYTE3(v52));
  *uint64_t v50 = v53;
  return (*(uint64_t (**)(void))(v43 + 8 * ((392 * (a7 - (v53 != 0) == a6)) ^ v46)))();
}

uint64_t sub_1A4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,_DWORD *a34)
{
  uint64_t v39 = (*(uint64_t (**)(uint64_t, void))(v35 + 8 * (v34 | 0x806)))(a19, 0);
  int v40 = a34[4] + 1460018998 - (v36 & (2 * a34[4]));
  a34[1] = a34[6] + 1460018998 - (((v34 ^ 0xB9FBFCFA) - 200261111) & (2 * a34[6]));
  a34[2] = v40;
  int v41 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 + 2030)))(v39);
  a34[3] = v41 + 1460018998 - (v36 & (2 * v41));
  int v42 = (*(uint64_t (**)(void))(v35 + 8 * (v34 ^ 0x81E)))();
  *a34 = v42 + 1460018998 - (v36 & (2 * v42));
  unint64_t v43 = 1759421093
      * ((2 * ((v38 - 144) & 0x4E1191D0B57F5BF0) - (v38 - 144) - 0x4E1191D0B57F5BF4) ^ 0x9F50AF7FF9FD1458);
  int v44 = (((*v37 >> 30) ^ 1) + 1460018998 + 2 * (((*v37 >> 30) ^ 1 | 0x7FFFFFF6) ^ (*v37 >> 30)) + 18) ^ *v37;
  unsigned int v45 = (*a34 ^ 0x57061F36) + ((1664525 * v44 + 1460018998 - ((3329050 * v44) & 0xAE0C3E6C)) ^ v37[1]);
  v37[1] = v45 + 1460018998 - ((2 * v45) & 0xAE0C3E6C);
  *(_DWORD *)(v38 - 144) = 1759421093 * ((2 * ((v38 - 144) & 0xB57F5BF0) - (v38 - 144) + 1249944588) ^ 0xF9FD1458);
  *(_DWORD *)(v38 - 112) = (v34 ^ 0xB9FBFCFA)
                         - 1759421093 * ((2 * ((v38 - 144) & 0xB57F5BF0) - (v38 - 144) + 1249944588) ^ 0xF9FD1458)
                         + 43861090;
  *(_DWORD *)(v38 - 104) = (v34 ^ 0xB9FBFCFA)
                         - 1759421093 * ((2 * ((v38 - 144) & 0xB57F5BF0) - (v38 - 144) + 1249944588) ^ 0xF9FD1458)
                         + 43861072;
  *(void *)(v38 - 136) = 3329372778u - v43;
  *(void *)(v38 - 120) = v43 ^ 0xC6723268;
  *(_DWORD *)(v38 - 128) = -1098935330
                         - 1759421093 * ((2 * ((v38 - 144) & 0xB57F5BF0) - (v38 - 144) + 1249944588) ^ 0xF9FD1458)
                         + (v34 ^ 0xB9FBFCFA);
  *(_DWORD *)(v38 - 124) = (v34 ^ 0xB9FBFCFA)
                         - 1759421093 * ((2 * ((v38 - 144) & 0xB57F5BF0) - (v38 - 144) + 1249944588) ^ 0xF9FD1458)
                         + 43861114;
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 ^ 0x817)))(v38 - 144);
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * *(int *)(v38 - 108)))(v46);
}

void sub_1A778()
{
}

uint64_t sub_1A780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v42 = *(void *)(v39 + 24);
  *(int8x16_t *)(v41 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v39 + 40) - 0x3AC75C5FABFFD319), (int8x16_t)xmmword_84360);
  if (a9) {
    BOOL v43 = v42 == 0x1B326768DCF9E3AALL;
  }
  else {
    BOOL v43 = 1;
  }
  int v44 = !v43;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (v44 ^ v38)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1A7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  BOOL v13 = (a11 ^ 0xF47BFFDB) + 2142562560 + ((a11 << ((v12 ^ 0x65) - 68)) & 0xE8F7FFB6) + 149 * (v12 ^ 0x325) - 1949363142 < 0x7FFFFFFE;
  return (*(uint64_t (**)(void))(v11 + 8 * ((2 * v13) | (4 * v13) | v12)))();
}

uint64_t sub_1A874()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)(((15 * (v1 ^ 0x33F) + ((v1 - 417) ^ 0xFFFFFB54)) * (v0 == 0x49562106)) | v1)))();
}

uint64_t sub_1A8D4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((77
                                * ((a1 ^ (v2 + 214) ^ (v4 - 1142) ^ (((v4 - 1142) ^ (v2 + 214)) - 237807668)) == v1 - 1223307022)) ^ (v4 - 1142))))();
}

uint64_t sub_1A92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((484 * (((((2 * (v17 ^ 0x711)) ^ 0xB3713747) + v19) & 0xFFFFFFFC) - a17 != -1284426096)) ^ v17 ^ 0x711)))();
}

uint64_t sub_1A97C(uint64_t a1)
{
  int v2 = 1755732067 * (a1 ^ 0xDEC6BDDB);
  int v3 = *(_DWORD *)(a1 + 20) - v2;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 32);
  int v8 = -664392069 * (*(_DWORD *)(a1 + 16) - v2) + 788557571;
  unsigned int v9 = 235795823 * (((&v11 | 0x91AE193F) + (~&v11 | 0x6E51E6C0)) ^ 0x5035067);
  int v16 = v9 ^ (v3 + 2024875085);
  uint64_t v17 = v5;
  unsigned int v12 = v9 + (v8 ^ 0x5FFA77F1) + ((2 * v8) & 0xBFF4EFE2) - 121638960;
  uint64_t v13 = v6;
  uint64_t v14 = v4;
  uint64_t v11 = v7;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_99820 + (int)(v3 ^ 0x874EE31D))
                                                + 8 * (int)(v3 ^ 0x874EEB29)
                                                - 4))(&v11);
  *(_DWORD *)(a1 + 40) = v15;
  return result;
}

uint64_t sub_1AAD8(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13)
{
  unsigned int v24 = v16 - 16;
  uint64_t v25 = v24 & 0xF;
  v27.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v27.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v20, a5).u64[0];
  int8x16_t v28 = vrev64q_s8(vmulq_s8(v27, a6));
  *(int8x16_t *)(a12 + v24) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v13 + v25 - 15), *(int8x16_t *)(a12 + v24)), veorq_s8(*(int8x16_t *)(v25 + v15 - 13), *(int8x16_t *)(v25 + v14 - 11))), vextq_s8(v28, v28, 8uLL));
  return (*(uint64_t (**)(void))(v19 + 8 * (((v17 == 16) * v18) ^ a11)))();
}

void sub_1AAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1AB78()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 != ((v1 + 1628817779) & 0x9EEA3539 ^ (v2 - 240))) * (v1 - 602)) ^ v1)))();
}

uint64_t sub_1ABC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8
                                            * ((1329 * (v5 == ((a5 + (v6 ^ 0xAC) + 77) ^ 0xF3))) ^ v6)))(4294925278);
}

uint64_t sub_1AC04()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(unsigned char *)(v0 + (v1 - 1284426097)) == 101)
                                * (((v2 - 615) | 0x140) - 959)) ^ v2)))();
}

uint64_t sub_1AC44()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(void *)(v0 - 0x7761D79CB8DF4D13) == 0) * ((v2 + 114) ^ v2 ^ 0x432 ^ 0x4A4)) | v2)))();
}

uint64_t sub_1ACA0(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  int v17 = v15 + a2;
  if ((v15 + a2) <= 0x40) {
    int v17 = 64;
  }
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((507 * (a1 - v13 - v14 + v17 + 1258 < ((a13 + 1819572371) & 0x938B87F3) - 1907)) ^ a13)))();
}

uint64_t sub_1AD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v16 - 120) = (v14 + 309) ^ (1734042137 * ((v16 - 136) ^ 0x5CCEC34D));
  *(void *)(v16 - 136) = v15;
  *(void *)(v16 - 128) = a13;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 + 976)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((463
                                              * (a10 < (int)((((v14 - 1042) | 0x410) ^ 0xFFFFF90B) + ((v14 - 461) | 0xA1)))) ^ v14)))(v17);
}

uint64_t sub_1ADC8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (v1 | (8 * (v0 == (v1 ^ 0x2A1 ^ (v1 + 2012962495) & 0x88049FDE))))))();
}

uint64_t sub_1AE20@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 3 + (v5 + v3 + a1 - 484)) = *(_DWORD *)(v2 - 3 + (v5 + v3 + a1 - 484));
  return (*(uint64_t (**)(void))(v6 + 8 * ((830 * (v4 == 4)) ^ (a1 - 477))))();
}

uint64_t sub_1AE6C()
{
  *(_DWORD *)(*(void *)(v0 + 96) + 1428) = 604952974;
  return sub_42D44();
}

uint64_t sub_1AEA0@<X0>(int a1@<W8>)
{
  int v6 = 601 * (v3 ^ 0x5B8);
  *(_DWORD *)(*(void *)(v5 - 0x67843F9A1244BAC3) + 4 * ((v6 ^ 0x6A93750F) + a1 + v1)) = *(_DWORD *)(*(void *)(v5 - 0x67843F9A1244BAC3) + 4 * (v1 + v2));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * ((559
                                                       * ((v6 ^ 0x1B1 ^ (v2 + 770)) + v1 < 0x7FFFFFFF)) ^ v6)))(433, 0x7FFFFFFFLL);
}

uint64_t sub_1AF20()
{
  BOOL v4 = v0 == ((v1 + 990) ^ (v3 - 688));
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 | (4 * v4)) ^ v1)))();
}

uint64_t sub_1AF4C@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  unsigned int v50 = (v47 ^ 0x366 ^ (a2 + 15)) + v48;
  int v51 = *(_DWORD *)(&a34 + (v50 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + v50) = v51 ^ 0x8F;
  unsigned int v52 = v48 + a2;
  *(unsigned char *)(a1 + v52) = (BYTE1(v51) ^ 0x73) - ((2 * (BYTE1(v51) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a1 + v52 + 1) = (BYTE2(v51) ^ 0x2D) - ((2 * (BYTE2(v51) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a1 + v52 + 2) = (HIBYTE(v51) ^ 0x52) - ((2 * (HIBYTE(v51) ^ 0x52)) & 0xCA) - 27;
  BOOL v53 = v48 - 936006667 < (a46 - 1894219465);
  if (v48 - 936006667 < v46 != a46 - 1894219465 < v46) {
    BOOL v53 = a46 - 1894219465 < v46;
  }
  return (*(uint64_t (**)(void))(v49 + 8 * ((1429 * v53) ^ v47)))();
}

void sub_1B02C()
{
}

void sub_1B038(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 235795823 * ((-969832657 - (a1 | 0xC631872F) + (a1 | 0x39CE78D0)) ^ 0xAD633189);
  uint64_t v2 = (char *)*(&off_99820 + v1 - 184) - 4;
  uint64_t v3 = *(void *)(a1 + 8);
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * (v1 ^ 0x938)])((char *)*(&off_99820 + (v1 ^ 0x148)) - 4, sub_33208);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,char a38)
{
  return sub_384C0(a1, a2, a3, a4, a5, &a38 + v38 + v39 + (a6 ^ 0x1C3u));
}

uint64_t sub_1B12C()
{
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 8 * (v0 + 738)))();
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((STACK[0x408] == 0x399DE98F08C0F0A4)
                                              * ((v0 - 934) ^ 0x3BD ^ ((v0 - 1359) | 0x218))) ^ (v0 - 139))))(v2);
}

void sub_1B1A0()
{
  int v0 = (uint64_t *)*(&off_99820
                  + (byte_80550[byte_7ADD4[(-19 * ((qword_A39F8 - dword_A4558) ^ 0xED))
                                                          - 4] ^ 0xA3] ^ (-19 * ((qword_A39F8 - dword_A4558) ^ 0xED)))
                  - 20);
  uint64_t v1 = (unint64_t *)*(&off_99820
                           + (byte_77E70[byte_84140[(-19 * ((qword_A39F8 - *v0) ^ 0xED))] ^ 0xD1] ^ (-19 * ((qword_A39F8 - *v0) ^ 0xED)))
                           - 165);
  unint64_t v2 = (unint64_t)&v7[*v0 + *v1];
  uint64_t v3 = 1469428717 * v2 + 0x13BC45BED9160A13;
  unint64_t v4 = 1469428717 * (v2 ^ 0xEC43BA4126E9F5EDLL);
  *int v0 = v3;
  *uint64_t v1 = v4;
  LOBYTE(v4) = -19 * ((v4 - *(_DWORD *)v0) ^ 0xED);
  *(_DWORD *)*(&off_99820 + (byte_80450[byte_7ABD0[v4] ^ 0xD1] ^ v4) - 120) = -1373544826;
  uint64_t v5 = (char *)*(&off_99820
               + ((-19 * ((qword_A39F8 - dword_A4558) ^ 0xED)) ^ byte_77F70[byte_84240[(-19 * ((qword_A39F8 - dword_A4558) ^ 0xED))] ^ 0x3C])
               - 16)
     - 4;
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))&v5[8
                                                      * ((-19 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xED)) ^ byte_80450[byte_7ABD0[(-19 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xED))] ^ 0xD1])
                                                      + 15256])(512, 1509315540);
  *(void *)*(&off_99820
             + ((-19 * (*(_DWORD *)v0 ^ 0xED ^ *(_DWORD *)v1)) ^ byte_77E70[byte_84140[(-19 * (*(_DWORD *)v0 ^ 0xED ^ *(_DWORD *)v1))] ^ 0xD1])
             - 86) = v6;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B3E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  int v51 = *((_DWORD *)&a33 + ((v49 + v46) >> ((v47 + 0x80) ^ (a4 - 2))) + 18);
  *(unsigned char *)(a7 + (v49 + v46 + 1)) = (BYTE2(v51) ^ 0x2D) - ((2 * (BYTE2(v51) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a7 + (v49 + v46)) = (HIBYTE(v51) ^ 0x52) - ((2 * (HIBYTE(v51) ^ 0x52)) & 0xCA) - 27;
  *(unsigned char *)(a7 + (v49 + v46 + 2)) = (BYTE1(v51) ^ 0x73) - ((2 * (BYTE1(v51) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a7 + (v49 + v46 + 3)) = v51 ^ 0x8F;
  BOOL v52 = v49 + 1829489089 < (a45 + 2042502612);
  if (v49 + 1829489089 < v45 != a45 + 2042502612 < v45) {
    BOOL v52 = a45 + 2042502612 < v45;
  }
  return (*(uint64_t (**)(void))(v50 + 8 * ((v52 * v48) ^ v47)))();
}

uint64_t sub_1B4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v13
                              + 8 * (int)(((v12 - 562 + ((v12 + 1085387858) & 0xBF4E4F6D) + 945) * (a12 > a11)) ^ v12)))();
}

void sub_1B544()
{
}

uint64_t sub_1B5F8(uint64_t a1, int a2)
{
  *(void *)(v6 + v4 - 0x843828D62D41556 + ((v2 + 1352623773) & v5)) = v8;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v3 & 0xFFFFFFFFFFFFFFF8) == 8) * a2) | v2)))();
}

uint64_t sub_1B654@<X0>(int a1@<W5>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v12 = 4 * (v10 + v7);
  unsigned int v13 = v3 + 1110271258 + ((v5 + 808) ^ 0xE4DE520B ^ *(_DWORD *)(*(void *)(a3 - 0x67843F9A1244BAC3) + v12));
  *(_DWORD *)(*(void *)(a2 - 0x67843F9A1244BAC3) + v12) = v13 + v8 - (v11 & (2 * v13));
  int v14 = v4 + v10 + 487;
  BOOL v16 = v14 <= a1 + 1290 && v14 >= v6;
  return (*(uint64_t (**)(void))(v9 + 8 * ((28 * v16) ^ v5)))();
}

uint64_t sub_1B730()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((((v1 + 2082308602) & 0x83E27B6F) - 676) * (v0 == 64)) ^ v1)))();
}

uint64_t sub_1B770@<X0>(_DWORD *a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, int a10)
{
  *a1 = 0;
  int v14 = a2 ^ v10;
  int v15 = v11 + a2 + 1552;
  a9 = a2
     + 1734042137 * ((2 * (&a9 & 0x45E37E58) - &a9 + 974946727) ^ 0x66D242EA)
     - 910888342;
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(v13 + 8 * (v11 + a2 + 2179)))(&a9);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((122 * (((v14 ^ (a10 == v12)) & 1) == 0)) ^ v15)))(v16);
}

void sub_1B818()
{
}

uint64_t sub_1B84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((v13 + 775 + (v13 ^ 0x77C) - 2139) * ((a12 - 152591868) < 0x7FFFFFFF)) ^ v13)))();
}

uint64_t sub_1B894@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2003 * (*(_DWORD *)(a1 + 48 * v2 + 36) + 1967413501 < (a2 ^ 0x80000756 ^ (a2 + 307)))) ^ a2)))();
}

uint64_t sub_1B8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v5
                                                                      + 8
                                                                      * ((35
                                                                        * (((v7 + 17) ^ (a5 < v6 + ((v7 - 60323294) & 0x2CF8FDC9) - 1600)) & 1)) ^ v7)))((v7 - 645665263) & 0x3C16F3, a2, a3, a4);
}

uint64_t sub_1B958()
{
  LODWORD(STACK[0x5B4]) = v0;
  return sub_44CB4();
}

uint64_t sub_1B968@<X0>(int a1@<W8>)
{
  int v7 = (a1 << (((v5 + 53) | v6) ^ 0xE8)) ^ v4;
  BOOL v8 = ((v7 + v2 - (v4 & (2 * v7))) ^ v2) <= v1;
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * v8) | (4 * v8)) ^ v5)))();
}

uint64_t sub_1B9B0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v11 = v10 + a8 + 1694769959;
  unsigned int v12 = v8 + 2108472054 + 955 * (((a2 - 84) | 0x51) ^ 0x655);
  BOOL v13 = v11 < 0xA3E6BC85;
  BOOL v14 = v11 > v12;
  if (v13 != v12 < 0xA3E6BC85) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * (((8 * !v14) | (32 * !v14)) ^ a2)))();
}

uint64_t sub_1BA3C@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  BOOL v9 = a2 + 820605999 < (a7 + 345936113);
  if (a7 + 345936113 < (v7 ^ 0x440u) + 1236073188 != (a2 + 820605999) < 0x49ACFB12) {
    BOOL v9 = a7 + 345936113 < (v7 ^ 0x440u) + 1236073188;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * ((29 * !v9) ^ v7)))(a1, 3514796083);
}

uint64_t sub_1BABC@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  int v5 = v3 + 795;
  char v6 = (unsigned char *)STACK[0x5F0];
  unsigned int v7 = *(_DWORD *)(a2 - 0x843828D0CDF33E5);
  *char v6 = v7 ^ 0x8F;
  int v8 = (v7 >> (((v5 + 122) | 0x40) - 72)) ^ 0x73;
  v6[1] = v8 - ((2 * v8) & 0xCA) - 27;
  _DWORD v6[2] = (BYTE2(v7) ^ 0x2D) - ((2 * (BYTE2(v7) ^ 0x2D)) & 0xCA) - 27;
  v6[3] = (a1 ^ HIBYTE(v7)) - ((2 * (a1 ^ HIBYTE(v7))) & 0xCA) - 27;
  unsigned int v9 = *v2 + 716923627;
  BOOL v10 = v9 < 0x79847822;
  BOOL v11 = v9 > 0x79847826;
  if (v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((3252 * v11) ^ v5)))();
}

uint64_t sub_1BBCC()
{
  STACK[0x348] = STACK[0x2C8];
  return sub_2639C();
}

uint64_t sub_1BBE0(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1396 * (*(_DWORD *)(*v4 + 4 * a2) == v3 + v5 + 1188 - 1427)) ^ v5)))();
}

void sub_1BC14()
{
}

uint64_t sub_1BC20(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  HIDWORD(v19) = a1 ^ a7;
  LODWORD(v19) = a1 ^ 0x55555555;
  int v20 = (v19 >> 27)
      + (v9 ^ 0x123 ^ (v11 - 763) ^ a4)
      + (((v18 ^ v10) + v11 - (v13 & (2 * (v18 ^ v10)))) ^ v14)
      + (*(_DWORD *)(v8 + 4 * (a8 + v16)) ^ v12);
  return (*(uint64_t (**)(void))(v15 + 8 * ((1423 * (a8 + 1 == v17 + 64)) ^ v9)))(v20
                                                                                              - 2
                                                                                              * ((v20 + 1247986134) & (v11 + 1) ^ v20 & 1u) + 479212864);
}

void sub_1BCEC()
{
}

uint64_t sub_1BCF4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, unsigned int a8)
{
  int v18 = (v13 ^ a4) * a5;
  unint64_t v19 = (*(_DWORD *)(v9 + 4 * v16) ^ v10) + a1 + ((v18 + a6) & a8 ^ 0x976E8F3544E44F4CLL);
  *(_DWORD *)(v9 + 4 * v16) = v19 + v10 - ((2 * v19) & 0x364351F4);
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v11 ^ HIDWORD(v19)) + (v12 & (v19 >> 31)) + v14 == v17) * v15) ^ v18)))();
}

uint64_t sub_1BD04@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((34 * ((v3 + 1181) ^ a1)) ^ (((v3 + 1181) ^ a2) + 1560)) * (a3 == 19)) ^ (v3 + 1181))))();
}

uint64_t sub_1BD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                         + 8
                                                                                         * ((42
                                                                                           * (v4 == v3 - 1469 + ((v3 - 1269049306) & 0x4BA427F7) - 1478)) ^ v3)))(a1, a2, a3, 36533098, 2897210627, 3037000498);
}

uint64_t sub_1BDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v27 - 120) = (v24 + 495) ^ ((((v26 | (v27 - 120)) - ((v27 - 120) & v26)) ^ 0x14D554D2) * v25);
  *(void *)(v27 - 112) = v21;
  *(void *)(v27 - 104) = a21;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 + 1524)))(v27 - 120);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((118
                                              * (((v24 + 18) ^ (*(_DWORD *)(v27 - 116) > ((v24 - 946197058) & 0x3865D39E ^ (v22 + 640)))) & 1)) ^ v24)))(v28);
}

uint64_t sub_1BE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((1953 * (a9 == (((v16 - 944) | 0x226) ^ 0x266))) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a8, *(void *)(a1 + 16), a11, a12, a13, a14, a15, a16);
}

void sub_1BEAC()
{
  if (v0 == 294122701) {
    int v1 = -1373544826;
  }
  else {
    int v1 = 1373504862;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_1BF10(unint64_t a1)
{
  STACK[0x468] = v3 - 176;
  STACK[0x568] = a1;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((v1 | 0x436) + 493894077) & 0xE28FC5F5 ^ 0x58C) * (v2 > a1)) ^ (v1 | 0x436))))();
}

uint64_t sub_1BFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = v26 - 539;
  *(void *)(v29 - 112) = a23;
  *(void *)(v29 - 104) = a25;
  *(_DWORD *)(v29 - 120) = (v30 + 685) ^ (((~((v29 - 120) | 0xA4080441) + ((v29 - 120) & 0xA4080441)) ^ 0x3603E3B7) * v28);
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v30 + 1714)))(v29 - 120);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (((*(_DWORD *)(v29 - 116) > (((v30 - 381) | 0x118) ^ v25))
                                              * ((v30 + 190) ^ 0x2C6)) ^ v30)))(v31);
}

uint64_t sub_1BFD0()
{
  uint64_t v4 = v0;
  unint64_t v5 = v2 + ((v1 + 695) ^ 0xA33u) + v0 - 564;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((29 * (((v1 + 695) ^ 0x55F4D176) - v4 + v5 > 7)) ^ (v1 + 695))))();
}

uint64_t sub_1C04C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 - 533426946) & 0x1FCB75D4 ^ 0xFFFFF985) + ((v1 + 399) | 0x10))
                                     * (*(_DWORD *)(a1 + 1424) == 568327263)) ^ v1)))();
}

void sub_1C0A0(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v9 = v7 + 1646;
  a5 = (v7 + 930) ^ (1734042137
                   * (((&a3 | 0x8A5BE56D) - &a3 + (&a3 & 0x75A41A90)) ^ 0xD6952620));
  a3 = a1;
  a4 = v6;
  (*(void (**)(uint64_t *))(v5 + 8 * (v7 ^ 0x64D)))(&a3);
  *uint64_t v8 = (v9 ^ 0xA394326E) - *v8;
  sub_32B68();
}

uint64_t sub_1C124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v52 = *(void *)(a1 + 24);
  *(int8x16_t *)(v50 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(a1 + 16) - 0x3F0B617C4F927BF5), (int8x16_t)xmmword_84380);
  if (v51) {
    BOOL v53 = v52 == 0x1B326768DCF9E3AALL;
  }
  else {
    BOOL v53 = 1;
  }
  int v54 = !v53;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * (int)((212 * v54) ^ a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1C198(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v4 == (((a2 + v3 - 95) ^ a2) + 23)) * (((a2 + v3 + 417) & a3) + 222)) ^ v3)))();
}

void sub_1C1CC()
{
}

uint64_t sub_1C1EC(uint64_t a1, int a2, unsigned __int8 a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((((((unint64_t)(v3 - a1) < 0x20) ^ a3) & 1) * ((a2 + 632) ^ 0x77F)) ^ a2)))();
}

uint64_t sub_1C224@<X0>(int a1@<W8>)
{
  *v1 ^= v3;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((a1 + 1965672939) & 0x8AD637D6 ^ 0x3F2) * (v2 != 62153878)) ^ (a1 + 1965672939) & 0x8AD637D6)))();
}

uint64_t sub_1C258@<X0>(uint64_t a1@<X8>)
{
  int v5 = v2 + 1815;
  unsigned int v6 = (v1 - 303564317) & 0x8C2BBFFF;
  *(_DWORD *)(*(void *)(v3 + 96) + 528) = 950047466;
  *(_DWORD *)(*(void *)(v3 + 96) + 532) = 1372200252;
  *(void *)(*(void *)(v3 + 96) + 536) = *(void *)(v3 + 96) + 544;
  uint64_t v7 = *(void *)(v3 + 96) + 0x67843F9A1244BCDBLL;
  unsigned int v8 = 1734042137 * (((&v11 | 0x9DCB4523) - (&v11 & 0x9DCB4523)) ^ 0xC105866E);
  uint64_t v13 = *(void *)(v4 + 8) + (*(_DWORD *)(v4 + 4) - v5);
  int v15 = v5 - v8 - 929929536;
  uint64_t v11 = v7;
  int v12 = v1 - v8 + 310;
  (*(void (**)(uint64_t *))(a1 + 8 * (v1 ^ 0xD54u)))(&v11);
  int v9 = v14;
  *(void *)(*(void *)(v3 + 96) + 512) = *(void *)(v4 + 8) + (*(_DWORD *)(v4 + 4) - v5);
  return v6 + v9 + 708886480;
}

uint64_t sub_1C260@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v15 + 8 * (v14 ^ (126 * (a9 == 0)))))((a9 == 0) << 7, a2, a3, a4, a5, a6, a7, a8, a10, *a1, a12, a13, a14);
}

void sub_1C2C8()
{
}

uint64_t sub_1C2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v13 = v10 < v8;
  int v14 = v7 + 1;
  *(unsigned char *)(*v12 + (v14 + a6)) = -27;
  if (v13 == v14 + v6 < v8) {
    BOOL v13 = v14 + v6 < v10;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v13 * ((8 * v9) ^ 0x81E)) ^ v9)))();
}

uint64_t sub_1C334()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((((v2 - 1372200252) * (v1 - 1372200252) < 0) ^ (v3 - 1)) & 1)
                                * ((53 * (v3 ^ 0x3BE)) ^ 0x61B)) ^ v3)))();
}

uint64_t sub_1C38C@<X0>(int a1@<W3>, int a2@<W8>, __n128 a3@<Q0>)
{
  *(__n128 *)(v5 + v4) = a3;
  return (*(uint64_t (**)(void))(v6 + 8 * (v3 ^ (8 * (a1 & ~(a2 ^ (v4 == 1500)))))))();
}

uint64_t sub_1C3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v18 - 128) = v17;
  *(void *)(v18 - 120) = a13;
  *(_DWORD *)(v18 - 136) = (v16 - 623) ^ (((((v18 - 136) | 0x74A96C87) - ((v18 - 136) & 0x74A96C87)) ^ 0x195D748E) * v13);
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0xEB6)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((398
                                              * ((((v16 ^ 0x69) + 39) ^ (*(_DWORD *)(v18 - 132) > v14)) & 1)) ^ v16)))(v19);
}

uint64_t sub_1C45C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1171 * (v4 + 1 == v6 + 64)) ^ a4)))();
}

uint64_t sub_1C51C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6, int a7)
{
  unsigned int v13 = ((((2 * &a3) | 0x81A77FC4) - &a3 - 1087619042) ^ 0x72C5BFA2) * a1;
  a5 = (((2 * (v12 - 1938056290)) & 0xDBD67FF6) + ((v11 - 303349912) ^ (v12 - 1938056290)) + 996074432) ^ v13;
  a6 = v13 + v11 + 368;
  a3 = v9;
  a4 = v8;
  a7 = v7 - v13;
  uint64_t v14 = (*(uint64_t (**)(uint64_t *))(v10 + 8 * (v11 + 1956)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((1841 * (*(_DWORD *)(v9 - 0x7761D79CB8DF4CFBLL) == -1373544826)) ^ v11)))(v14);
}

uint64_t sub_1C5F0()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v2 ^ (979
                                     * ((v1 - 568327263 + ~(v0 + LODWORD(STACK[0x390]) - 604952942)) > 2)))))();
}

uint64_t sub_1C690()
{
  return ((uint64_t (*)(void))STACK[0x588])();
}

uint64_t sub_1C6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((71 * (v7 + 1 != v8 + 32)) ^ a6)))();
}

uint64_t sub_1C7A8@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((2913 * (a2 == ((a1 + v2) ^ (v4 - 283) ^ (a1 + v2 - 165)))) ^ (a1 + v2 + 450))))();
}

void sub_1C7E8()
{
}

uint64_t sub_1C82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((975 * ((a8 + 1 + v9) < 0x30)) ^ v8)))();
}

uint64_t sub_1C900@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v11 = *(void *)(v9 - 0x67843F9A1244BAC3);
  unsigned int v12 = (*(_DWORD *)(v11 + 4 * (v10 - 1)) ^ v5) >> v3;
  uint64_t result = (v2 - 130);
  int v14 = v12 + v5 - (v6 & (2 * v12));
  uint64_t v15 = 4 * (int)result;
  *(_DWORD *)(v11 + v15) = v14;
  int v16 = v2 + a2 + v4 - (*(_DWORD *)(*(void *)(v9 - 0x67843F9A1244BAC3) + v15) == v5);
  if (*v7 + ((a1 + 1612670177) & 0x9FE09AEB ^ v8) >= 0x7FFFFFFF) {
    int v16 = -1550566792 - v16;
  }
  *uint64_t v7 = v16;
  return result;
}

uint64_t sub_1C9D4()
{
  int v4 = v0 - 20 + v2 + 2031870518;
  BOOL v6 = v4 > ((2 * v0) ^ 0x3C3D64B8) || v4 < v3 - 1136826547;
  return (*(uint64_t (**)(void))(v1 + 8 * ((532 * v6) ^ v0)))();
}

uint64_t sub_1CA2C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((621 * ((((v2 + 150) ^ 0x586) & v1) == v2 - 1288)) ^ v2)))();
}

void sub_1CA68()
{
}

uint64_t sub_1CB70@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 + a1 + ((v1 - 602) | 0x260u) - 1770 < 0x7FFFFF7D)
                                * ((v1 - 899982949) & 0x35A4A5ED ^ 0x5DE)) ^ v1)))();
}

uint64_t sub_1CBD0@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((772 * (v3 + v4 - 165 + a2 + ((4 * a1) ^ 0x258) + ((a1 - 1903052482) & 0x716E46B3) >= 0)) ^ a1)))();
}

uint64_t sub_1CC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_1CC44(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1CC44@<X0>(const char *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v64 = a45 ^ 0xCE;
  if (v64 == 2)
  {
    int8x16x4_t v92 = vld4q_s8(a1);
    uint8x16_t v81 = (uint8x16_t)veorq_s8(v92.val[1], v63);
    _Q17 = vmovl_u8(*(uint8x8_t *)v81.i8);
    _Q16 = vmovl_high_u8(v81);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    unint64_t v86 = (_DWORD *)(v54 + 4 * (v58 + 1950094482));
    int v87 = *(v86 - 8) ^ *(v86 - 3);
    int v88 = v87 + v59 - ((2 * v87) & 0x5C42BD0C);
    int v89 = *(v86 - 16) ^ *(v86 - 14);
    HIDWORD(v90) = v89 ^ HIDWORD(a28) ^ v88;
    LODWORD(v90) = v89 ^ ~v88;
    *unint64_t v86 = (v90 >> 31) + v59 - ((2 * (v90 >> 31)) & 0x5C42BD0C);
    return (*(uint64_t (**)(void))(v55 + 8 * (int)((335 * (v62 == 1950094419)) ^ a29)))(HIDWORD(a42));
  }
  else if (v64 == 1)
  {
    int8x16x4_t v91 = vld4q_s8(a1);
    uint8x16_t v65 = (uint8x16_t)veorq_s8(v91.val[2], v63);
    _Q21 = vmovl_high_u8(v65);
    _Q20 = vmovl_u8(*(uint8x8_t *)v65.i8);
    __asm
    {
      SHLL2           V20.4S, V20.8H, #0x10
      SHLL2           V21.4S, V21.8H, #0x10
    }
    uint64_t v72 = v62 - 16;
    uint64_t v73 = (v57 - 628) | 0x286u;
    uint64_t v74 = (char *)*(&off_99820 + v57 - 598) - 12;
    uint64_t v75 = (char *)*(&off_99820 + (int)a28) - 8;
    int v76 = (a42 ^ v56)
        + v60
        + ((HIDWORD(a43) ^ v56) & (HIDWORD(a42) ^ 0xADD28C95) | (v73 ^ (v56 - 430) ^ a43) & (HIDWORD(a42) ^ v56))
        + *(_DWORD *)&v75[4 * v72 + 4 * v58]
        + (*(_DWORD *)(v54 + 4 * (v74[v72 + v58] - 68)) ^ v59);
    uint64_t v77 = (uint64_t)*(&off_99820 + v57 - 632);
    unsigned int v78 = (v76 + v56 - (v61 & (2 * v76))) ^ v56;
    int v79 = ((v78 << (*(unsigned char *)(v77 + v72 + v58) - 26)) | (v78 >> (26 - *(unsigned char *)(v77 + v72 + v58))))
        + (HIDWORD(a42) ^ v56);
    LODWORD(a25) = a45 ^ 0xFFFFFFCE;
    return (*(uint64_t (**)(void, char *, char *, uint64_t, void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * v57))(HIDWORD(a42), v74, v75, v77, v79 + v56 - (v61 & (2 * v79)), v73, v62 - 15, *(void *)(v55 + 8 * v57), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
             a13,
             a14,
             a15,
             a16,
             a17,
             a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             *(void *)(v55 + 8 * v53),
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53);
  }
  else
  {
    return (*(uint64_t (**)(void))(v55 + 8 * v53))(HIDWORD(a42));
  }
}

void sub_1D084()
{
}

void sub_1D14C()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1D15CLL);
}

uint64_t sub_1D20C@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, int a3@<W3>, int a4@<W7>, unint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v36 = v32 + a3;
  int v37 = v32 + 1;
  uint64_t v38 = 4 * (v37 + a3);
  unint64_t v39 = (*(_DWORD *)(a22 + v38) ^ v23) + (a1 ^ HIDWORD(v31));
  unint64_t v40 = (a5 >> (((v22 + v25) & v26) + 127))
      + v29 * (unint64_t)(*(_DWORD *)(*v33 + v38) ^ v23)
      + ((v39 + v27 - (a4 & (2 * v39))) ^ a2);
  *(_DWORD *)(a22 + 4 * v36) = v40 + v23 - (v24 & (2 * v40));
  BOOL v42 = v37 + v28 <= v35 && v37 + v28 >= v34;
  return (*(uint64_t (**)(void))(v30 + 8 * ((v42 | (32 * v42)) ^ v22)))();
}

uint64_t sub_1D29C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v1 + 1255504445) & 0xB52A87D3 ^ 0x537)
                                     * ((v0 - 1102148614) < 0xFFFFFFFE)) ^ v1)))();
}

uint64_t sub_1D2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(*v11 + (v12 + a6)) = *(unsigned char *)(*v11 + (v9 + v13));
  return (*(uint64_t (**)(void))(v10 + 8 * ((114 * ((v7 ^ (v6 == 226063316)) & 1)) ^ v8)))();
}

uint64_t sub_1D344@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  BOOL v11 = v8 > 0x7B04751C;
  *(unsigned char *)(a2 + (a1 - 471039382)) = *(unsigned char *)(v2 + (a1 - 471039382)) ^ *(unsigned char *)(v4 + (((_BYTE)a1 + 106) & 0xF)) ^ *(unsigned char *)(v5 + (((_BYTE)a1 + 106) & 0xF)) ^ *(unsigned char *)(v3 + ((a1 - 471039382) & 0xFLL)) ^ (97 * ((a1 + 106) & 0xF)) ^ 0xE5;
  unsigned int v12 = a1 + 1760038222;
  uint64_t v13 = (a1 + 1);
  int v14 = v11 ^ (v12 < ((v7 + 2078986540) & 0x84152EBE) + v6);
  BOOL v15 = v12 < v9;
  if (!v14) {
    BOOL v11 = v15;
  }
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((243 * v11) ^ v7)))(v13);
}

uint64_t sub_1D3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v16 - 120) = v12
                         + 1759421093 * ((~((v16 - 136) | 0x7D6057C6) + ((v16 - 136) & 0x7D6057C6)) ^ 0x31E2186D)
                         + 1431;
  *(void *)(v16 - 136) = v15;
  *(void *)(v16 - 128) = a12;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v12 ^ 0xA10)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((247 * (((v14 == 789874348) ^ (v12 + 66)) & 1)) ^ v12)))(v17);
}

uint64_t sub_1D4AC()
{
  int v2 = STACK[0x4F4];
  unint64_t v3 = STACK[0x4B0];
  STACK[0x5D0] = (LODWORD(STACK[0x4F4]) - 1284426096);
  return (*(uint64_t (**)(unint64_t))(v1 + 8 * (((v2 == 1284426096) * (v0 ^ 0x556)) | (v0 - 1055))))(v3);
}

uint64_t sub_1D504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((497 * (a7 + 1 != v8 + 32)) ^ a6)))();
}

uint64_t sub_1D5E4@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x7761D79CB8DF4D03) + 2073477588;
  unsigned int v4 = *(_DWORD *)(v2 - 0x7761D79CB8DF4D07) + 991768405;
  BOOL v5 = v3 < 0x8C25CC3F;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x8C25CC3F) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v6 | (8 * v6)) ^ v1)))();
}

uint64_t sub_1D668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27)
{
  uint64_t v29 = (((v27 ^ (a8 - 1458) ^ a18) + a27) ^ 0xDC7BD5FD)
      + 937426944
      + ((2 * ((v27 ^ (a8 - 1458) ^ a18) + a27)) & 0xB8F7ABFA);
  uint64_t v30 = (((a25 ^ a8) + a26) ^ 0x57C95AFF)
      - 1380453028
      + ((2 * ((a25 ^ a8) + a26)) & 0xAF92B5FE);
  BOOL v31 = HIDWORD(a18) < 0xE503F0D6;
  unsigned int v32 = a18 - 1618 + v30 - 545087365;
  int v33 = v31 ^ (v32 < 0xE503F0D6);
  BOOL v34 = v32 < HIDWORD(a18);
  if (!v33) {
    BOOL v31 = v34;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (int)((v31 * (a18 - 1392)) ^ a18)))(v29, v30, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_1D740(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(a4 + v4 + v8) = a1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((1485 * (v4 + 1 + v8 < ((((v5 + 110) ^ v7) * v6) ^ 0x7FuLL))) ^ (v5 + 110))))();
}

uint64_t sub_1D780()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 == (((v0 - 1503) | 0x364) ^ 0x294A20CF)) * ((v0 ^ 0x7EC) + 392)) ^ v0)))();
}

uint64_t sub_1D7C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ (125 * ((unint64_t)(v2 - a1) < 0x20)))))();
}

void sub_1D800(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  a6 = v8
     + 460628867 * ((&a3 - 1469165069 - 2 * ((unint64_t)&a3 & 0xA86E51F3)) ^ 0xE4F8D38E)
     + 1277;
  a4 = v6;
  a5 = v7;
  a3 = v7;
  (*(void (**)(uint64_t *))(a1 + 8 * (v8 ^ 0x82A)))(&a3);
  sub_23724();
}

uint64_t sub_1D864()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 >= (STACK[0x3B8] & 0xDA4BF65B ^ 0xC8BF82CE)) * ((STACK[0x3BC] & 0xBCB9A12) - 336)) ^ (v1 - 1243))))();
}

void sub_1D8B8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * (((a1 | 0x882D0BB0) - a1 + (a1 & 0x77D2F44F)) ^ 0x82D9059F);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1D95C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 48) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1D974()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_DWORD *)(v1 - 0x7761D79CB8DF4D03) == v0 + 277808837) * ((v0 ^ 0x185) - 532)) ^ v0)))();
}

uint64_t sub_1D9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (((((8 * v26) ^ 0x758) + 1198) * ((v28 + v27 + 15) < 4)) ^ v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1D9F8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((51 * (STACK[0x4F8] == 0)) ^ (v0 - 1147))))();
}

uint64_t sub_1DA30()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((59 * (*(_DWORD *)(v1 + 1424) == ((170 * (((v0 - 908) | 0x47) ^ 0xDF)) ^ 0x21DFF90F))) ^ v0)))();
}

void sub_1DA80(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  __asm { BRAA            X10, X17 }
}

void sub_1DB20(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x67843F9A1244BAC7) = (((v3 + v2) * (v1 - 1678393466)) ^ 0x5BCEBD3C)
                                         - 168075264
                                         + ((2 * (v3 + v2) * (v1 - 1678393466)) & 0xB79D7A78);
}

void sub_1DBAC()
{
  *(_DWORD *)(v0 - 0x7761D79CB8DF4CFBLL) = 1373504850;
  JUMPOUT(0x24290);
}

uint64_t sub_1DBCC()
{
  BOOL v5 = v2 + 1047343068 <= 871503511 && v2 + 1047343068 >= v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v5 * (((v0 - 1315) | 1) - 128)) ^ v0)))();
}

uint64_t sub_1DC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  unsigned int v24 = (v20 + 721018517) & 0xD50626AA;
  char v25 = v21 + ((v20 - 107) & 0xAA) + 76;
  BOOL v27 = v19 == 463788147 || a19 - v23 != 1210380922;
  return (*(uint64_t (**)(void))(v22 + 8 * (int)((v27 ^ (v25 + 1)) & 1 | v24)))();
}

uint64_t sub_1DC94(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5
                                           + 8
                                           * ((878
                                             * (((((a2 + 914) | 0x24C) ^ 0x6D7) & v3) == ((a2 - 1980890498) & 0x7611FFFC ^ 0x36C))) ^ a2)))((v2 - v4));
}

uint64_t sub_1DCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                       + 8
                                                                       * (int)((154
                                                                              * (((v4 == (v5 & 0xFD07F77F) + 1739278948) ^ ((v5 & 0x7F) + 64)) & 1)) ^ v5 & 0xFD07F77F)))(a1, a2, a3, 1556690660);
}

uint64_t sub_1DD3C(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((205 * ((a4 + 1 + v4) < 0x40)) ^ a1)))();
}

uint64_t sub_1DE18()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 > ((v3 + v1 - 669) | 0x210u) + 580817815) * ((v3 + v1 - 669) ^ 0x79)) ^ (v3 + v1 + 343))))();
}

void sub_1DE68()
{
}

uint64_t sub_1DE98(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((210 * (((v3 == v4) ^ (-125 * ((a3 + 99) ^ 0x60))) & 1)) ^ (a3 + 1891))))();
}

uint64_t sub_1DED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  a14 = &STACK[0x2F7E69BD89C711D];
  a16 = 501 - 460628867 * ((((2 * &a14) | 0x98B0CA2E) - &a14 - 1280861463) ^ 0xCEE76A);
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v18 + 17104))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1573 * (a15 == ((v17 - 241) ^ 0x313))) ^ v16)))(v19);
}

uint64_t sub_1DF70(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((45 * ((v1 - 213328467) < 0x28)) ^ (2 * (a1 ^ 0x82)))))();
}

void sub_1E04C()
{
}

uint64_t sub_1E078(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((90 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x12Au)))();
}

uint64_t sub_1E0A4()
{
  unsigned int v3 = v1 - ((2 * v1 + 190739824) & 0xEC72B624) + 2078840266;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((30
                                * (((2 * v3) & 0xD79B7FFA ^ 0xC4123465 ^ ((v2 - 291) | 5))
                                 + ((v2 + 502587788) ^ v3)
                                 + 1073670359 == 734832852)) ^ v2)))();
}

void sub_1E13C(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(&off_99820
       + ((-19 * ((qword_A39F8 - dword_A3A00) ^ 0xED)) ^ byte_7ACD0[byte_77D70[(-19 * ((qword_A39F8 - dword_A3A00) ^ 0xED))] ^ 0xA3])
       + 96);
  unsigned __int8 v4 = -19 * ((qword_A39F8 + *v3) ^ 0xED);
  uint64_t v5 = *(&off_99820 + (byte_77E74[(byte_8414C[v4 - 12] ^ 0xC3) - 4] ^ v4) - 150);
  uint64_t v6 = *v5 - *v3 - (void)&v8;
  void *v3 = 1469428717 * (v6 + 0x13BC45BED9160A13);
  *uint64_t v5 = 1469428717 * (v6 ^ 0xEC43BA4126E9F5EDLL);
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  LODWORD(v6) = 628203409 * ((v10 - 918820755 - 2 * (v10 & 0xC93BE86D)) ^ 0x4BB3E45E);
  v10[2] = v6 - 290923570;
  v10[0] = v6 + 1172345435;
  BOOL v11 = &STACK[0x843828D0CDF34A9];
  LODWORD(v5) = 1469428717 * ((*(_DWORD *)v5 - *(_DWORD *)v3) ^ 0x26E9F5ED);
  uint64_t v7 = (char *)*(&off_99820
               + ((-19 * ((qword_A39F8 + dword_A3A00) ^ 0xED)) ^ byte_80550[byte_7ADD0[(-19 * ((qword_A39F8 + dword_A3A00) ^ 0xED))] ^ 0xA3])
               - 1)
     - 4;
  (*(void (**)(_DWORD *))&v7[8
                                      * (byte_7ACD0[byte_77D7C[v5 - 12] ^ 0xCE] ^ v5)
                                      + 16712])(v10);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1E430(uint64_t a1, uint64_t a2)
{
  int v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((1929 * ((v3 & (2 * v6)) + (((v4 - 521) | 0x109) ^ (v2 - 283) ^ v6) == v2)) ^ v4)))();
}

uint64_t sub_1E47C@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,arg34_1E47C a34)
{
  *(_OWORD *)(a2 + (a3 + a1)) = *(_OWORD *)&a34.arr[4];
  return (*(uint64_t (**)(void))(v36 + 8 * (((((v35 + 1) & 0x1FFFFFFF0) == 16) * (v34 + 459)) ^ v34)))();
}

uint64_t sub_1E4C0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W5>, uint64_t a5@<X8>)
{
  int v9 = v7 & 7;
  int v10 = v8 + v7;
  *(void *)(a5 - 7 + v10 + a2 - a4 + (a1 ^ 0x4EE)) = *(void *)(v6
                                                                               - 7
                                                                               + v10
                                                                               + a2
                                                                               - a4
                                                                               + (a1 ^ 0x4EE));
  return (*(uint64_t (**)(uint64_t, void))(v5
                                                    + 8
                                                    * (int)(((v10 + a3 - a4 - v9 == 8) | (8 * (v10 + a3 - a4 - v9 == 8))) ^ a1)))(a1, (v10 + a3 - a4 - v9 - 16));
}

uint64_t sub_1E524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                                           + 8 * ((((a8 + v9) ^ (v9 + 1438) ^ (3 * (a8 ^ 0x48D))) * (a5 == a6)) ^ a8)))(0);
}

uint64_t sub_1E560()
{
  unsigned int v3 = LODWORD(STACK[0x528]) + ((v0 - 40) ^ 0x3F7149BD);
  int v4 = (v1 - 2020196116 < (v0 - 735772059)) ^ (v3 < 0xD4250A5C);
  BOOL v5 = v3 < v1 - 2020196116;
  if (v4) {
    BOOL v5 = v1 - 2020196116 < (v0 - 735772059);
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((4038 * !v5) ^ v0)))();
}

uint64_t sub_1E5D8()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((((v3 ^ 0x3D1) - v2 + 1282) ^ (v1 + 2074)) * (v4 == 0)) ^ v3)))(0);
}

uint64_t sub_1E610@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X6>, unsigned int a7@<W8>, int8x16_t a8@<Q0>, int8x8_t a9@<D1>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v68 = a5 - 8;
  uint64_t v69 = (a4 + v68);
  v71.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)v68) & 0xF;
  v71.val[0].i64[1] = (v67 + (_BYTE)v68) & 0xF;
  v71.val[1].i64[0] = (a2 + (_BYTE)v68) & 0xF;
  v71.val[1].i64[1] = (v66 + (_BYTE)v68) & 0xF;
  v71.val[2].i64[0] = (v65 + (_BYTE)v68) & 0xF;
  v71.val[2].i64[1] = (a1 + (_BYTE)v68) & 0xF;
  v71.val[3].i64[0] = (v62 + (_BYTE)v68) & 0xF;
  v71.val[3].i64[1] = (v63 + (_BYTE)v68) & 0xF;
  *(int8x8_t *)(a6 + v69) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v61 + (v69 & 0xF) - 7), *(int8x8_t *)(a3 + v69)), veor_s8(*(int8x8_t *)((v69 & 0xF) + v60 - 5), *(int8x8_t *)((v69 & 0xF) + v59 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v71, a8), a9)));
  return (*(uint64_t (**)(void))(a59 + 8 * ((1329 * (v64 == v68)) ^ a7)))();
}

uint64_t sub_1E618@<X0>(int a1@<W8>)
{
  int v3 = a1 - 52;
  BOOL v4 = *v1 != (v3 ^ 0x94) - 1044;
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v4) | (16 * v4)) ^ v3)))();
}

uint64_t sub_1E8B4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,char a45)
{
  unsigned int v50 = v48 + a5 + ((v45 + 120) ^ 0x3CD);
  if (v50 <= 0x40) {
    unsigned int v50 = 64;
  }
  int v51 = a1 - v46 - v47 + v50 < 0xF;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *))(v49 + 8 * ((8 * v51) | (v51 << 6) | v45)))(1866, 3814750137, 3814750085, &a45);
}

uint64_t sub_1E930()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v2 ^ 0x75C) + v2 - 299) * (v1 == 251658240)) ^ v2)))();
}

uint64_t sub_1E960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,int a47)
{
  if (a22 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47
  }
                                                                         + 8
                                                                         * ((1563
                                                                           * (a47 != ((3 * (a8 ^ (a8 + 219))) ^ 0x4EC91658))) ^ (a5 + a8 + 440))))(a1, a2, a3, 3980823791);
  if (a22 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47
  }
                                                                         + 8
                                                                         * ((53 * (a47 == 1321801015)) ^ (a5 - 314143086))))(a1, a15, a3, 3980823791);
  unint64_t v49 = ((unint64_t)&a29 ^ 0x57EBFFD9FCFAF65FLL)
      + ((2 * (void)&a29) & 0xAFD7FFB3F9F5ECB0)
      - 0x406A221000282F5FLL;
  a46 = (v49 ^ 0xBA) * (v49 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 6384))(a1, a15, a3, 3980823791);
}

void sub_1EB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v25 - 120) = v24;
  *(void *)(v25 - 112) = v24;
  *(void *)(v25 - 144) = v23;
  *(void *)(v25 - 136) = a15;
  *(void *)(v25 - 128) = a22;
  *(_DWORD *)(v25 - 104) = ((v22 & 0x75B2E3FB) + 1007) ^ (1759421093
                                                        * ((((v25 - 144) | 0xF0E7B2DF)
                                                          - (v25
                                                           - 144)
                                                          + ((v25 - 144) & 0xF184D20)) ^ 0x439A028B));
  JUMPOUT(0x83F0);
}

uint64_t sub_1EBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  return (*(uint64_t (**)(void))(v36
                              + 8
                              * (((v35 + a35 + (v37 ^ 0x37u) + 35 < 0xFFFFFFFB) * ((v37 ^ 0xF9) - 185)) ^ (v37 + 1869))))();
}

uint64_t sub_1EC10()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0)
                                * ((v3 ^ 0x7E9) - 343)) ^ v3)))();
}

uint64_t sub_1EC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v14 = v12 ^ (v12 - 1089);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8 * (v12 ^ (v12 - 2086))))(a11, 2965982036);
  int v15 = (*(uint64_t (**)(void))(v11 + 8 * (v12 ^ (v12 - 1919))))();
  unsigned int v16 = v15 + (v14 ^ 0x57061B77) - ((2 * v15) & 0xAE0C3E6C);
  *uint64_t v13 = v16;
  int v17 = (((v16 >> ((((v12 ^ (v12 - 65)) - 1) | 3) - 37)) ^ 1)
       + 1460018998
       - ((2 * (v16 >> ((((v12 ^ (v12 - 65)) - 1) | 3) - 37))) & 4)) ^ v16;
  v13[1] = 1812433253 * v17 - ((2 - 670100790 * v17) & 0xAE0C3E6C) + 1460018999;
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * v14))(1812433253);
}

uint64_t sub_1ED5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((191 * ((((a6 - 985) ^ (v7 + a3 - 1072164702 < ((a6 - 985) ^ 0x10Fu) - 395)) & 1) == 0)) ^ a6)))();
}

void sub_1EDC8()
{
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1323));
  JUMPOUT(0x67B8);
}

uint64_t sub_1EE0C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((STACK[0x3B0] & 0x4EE81FF6 ^ 0x2D0) * (v0 <= 0xC8BF80DF)) ^ (v1 - 1243))))();
}

uint64_t sub_1EE50()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((63 * (v0 < 0x996F20F8)) ^ 0x31D)))();
}

uint64_t sub_1EEAC()
{
  return sub_1AF20();
}

uint64_t sub_1EEDC@<X0>(int a1@<W8>)
{
  int v4 = a1 - 108;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 8 * (a1 ^ 0xCE2)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (((*v2 == 0) * (v4 ^ 0xA0 ^ (v4 + 160) ^ 0x3D)) ^ v4)))(v5);
}

uint64_t sub_1EF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 535753261 * ((((v19 - 136) | 0xE290E452) - ((v19 - 136) & 0xE290E452)) ^ 0xE864EA7D);
  *(void *)(v19 - 136) = v14;
  *(_DWORD *)(v19 - 128) = v20 + v15 - 130679437;
  *(_DWORD *)(v19 - 124) = v20 + v18 + 438;
  (*(void (**)(uint64_t))(v17 + 8 * (v18 + 1419)))(v19 - 136);
  *(void *)(v19 - 128) = a11;
  *(void *)(v19 - 120) = a14;
  *(_DWORD *)(v19 - 136) = (v18 + 321) ^ (1374699841
                                        * (((((v19 - 136) | 0x21165438) ^ 0xFFFFFFFE) - (~(v19 - 136) | 0xDEE9ABC7)) ^ 0xB31DB3CE));
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v18 + 1350)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((473
                                              * (*(_DWORD *)(v19 - 132) > v16 + ((v18 + 2067659446) & 0x84C20675) - 1045)) ^ (v18 + 456))))(v21);
}

uint64_t sub_1F058@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  uint64_t v7 = v2 + v5;
  *(unsigned char *)(a1 + v7) = v4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v7 + 1) < 0x38) * v3) ^ a2)))();
}

uint64_t sub_1F08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  int v38 = v34 + v36;
  unsigned int v39 = v34 + v36 + 1186562376;
  if (v39 <= 0x40) {
    unsigned int v39 = 64;
  }
  BOOL v40 = __CFADD__(v38 + (v35 ^ 0x46B985FE), v33 - 1186563990 + a33 + ((v35 + 1463833269) & 0xA8BFAEDF) + v39);
  return (*(uint64_t (**)(void))(v37 + 8 * ((v40 | (4 * v40)) ^ v35)))();
}

uint64_t sub_1F114()
{
  *(void *)(v3 + v0 - 0x843828D62D411D9 + ((v2 + 39220095) & 0xFDA98DBB)) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1130 * ((v1 & 0x38) == 8)) ^ v2)))();
}

uint64_t sub_1F17C(uint64_t a1)
{
  BOOL v4 = ((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 + 1800160278))
       - ((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 + 1800160278)) << (((v3 - 94) ^ 0x69) - 61)) & 0xA8)
       + 845113428) & 0x1F) == 11;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v4 | (2 * v4)) ^ v3)))();
}

uint64_t sub_1F1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,int a23)
{
  BOOL v27 = a22 - v24 == 1210380922 && a23 == a7 + 319;
  return (*(uint64_t (**)(void))(v25 + 8 * ((v27 * ((v23 - 485) ^ 0x4DD)) ^ v23)))();
}

uint64_t sub_1F22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v50 = a24 - (((a5 ^ 0x1A472E59) + 2 * a24) & 0x3533B704) - 943886057;
  BOOL v52 = (((((_BYTE)v50 << (a5 ^ 0x72)) & 0x7E ^ 4)
        + (v50 ^ 0x3D)
        + (a5 ^ 0x90)
        - 24
        + 54) & 0xF) != 0
     || ((v50 << (a5 ^ 0x72)) & 0xCDFEDD7E ^ 0x5329504) + (v50 ^ 0xFC66B53D) == -419467585;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * (int)((v52 * (((a5 ^ 0x490) - 312) ^ 0xB6)) ^ a5 ^ 0x490)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1F2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  if (v5 == a5) {
    int v6 = 1373504856;
  }
  else {
    int v6 = v5;
  }
  return v6 ^ a5;
}

uint64_t sub_1F338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                                        + 8
                                                                                        * ((924
                                                                                          * (*(_DWORD *)(v7 - 128) == *(_DWORD *)(v7 - 136))) ^ v5)))(a1, a2, a3, a4, a5, v5 + 1499);
}

uint64_t sub_1F368@<X0>(int a1@<W8>)
{
  *uint64_t v7 = v10 ^ v1;
  int v5 = a1 ^ v2;
  uint64_t v13 = v9;
  unsigned int v12 = 535753261 * ((2 * (v11 & 0x412B78B8) - v11 + 1054115655) ^ 0x34208968)
      + 928801026
      + a1
      + 2025;
  (*(void (**)(unsigned char *))(v3 + 8 * (a1 ^ (v2 - 1886))))(v11);
  uint64_t v13 = v8;
  unsigned int v12 = v5 + 535753261 * ((2 * (v11 & 0x4AF28A8) - v11 - 78588075) ^ 0xF1A4D97A) + 1622;
  (*(void (**)(unsigned char *))(v3 + 8 * (v5 ^ 0x9A2)))(v11);
  return v4 ^ 0xAE215E86;
}

uint64_t sub_1F49C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_951B0 + ((1246 * (*(_DWORD *)(a2 + 4) == 1284426109)) ^ 0x340u)))(4294925278);
}

void sub_1F4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  (*(void (**)(uint64_t, uint64_t))(v22 + 8 * (v23 - 1174666844)))(a21, 2965982036);
  int v26 = (*(uint64_t (**)(void))(v22 + 8 * (v23 - 1174666803)))();
  *uint64_t v25 = v26 + 1460018998 - ((v26 << ((v21 + 127) & 0xDF ^ 0xC3)) & v24);
  JUMPOUT(0x1F57CLL);
}

void sub_1F634(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1F714()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v0 - 1318728218 >= v0
                                                    - 1318728297
                                                    + ((((v2 - 12) | 0x800) - 590161428) & 0x232D1E1Fu))
                                * (((((v2 - 12) | 0x800) - 1724) | 0x680) - 1931)) ^ ((v2 - 12) | 0x800))))();
}

uint64_t sub_1F784(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(a4 + v8) = *(unsigned char *)(v10 + (v7 + a2))
                      - (a7 & (2 * *(unsigned char *)(v10 + (v7 + a2))))
                      - 27;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v8 != 63) * a3) ^ v9)))();
}

uint64_t sub_1F7D0@<X0>(char a1@<W1>, char a2@<W3>, uint64_t a3@<X5>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  unsigned int v38 = *(_DWORD *)(&a21 + ((v36 + v33) & 0xFFFFFFFC) + 72);
  int v39 = (v38 >> ((v34 - a1) ^ (a2 - 16))) ^ 0x2D;
  *(unsigned char *)(a3 + (v36 + v33 + 1)) = v39 - ((2 * v39) & 0xCA) - 27;
  *(unsigned char *)(a3 + (v36 + v33)) = (HIBYTE(v38) ^ 0x52) - ((2 * (HIBYTE(v38) ^ 0x52)) & 0xCA) - 27;
  *(unsigned char *)(a3 + (v36 + v33 + 2)) = (BYTE1(v38) ^ 0x73) - ((2 * (BYTE1(v38) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a3 + (v36 + v33 + 3)) = v38 ^ 0x8F;
  BOOL v40 = v36 + 2108414039 < (a33 - 1915079222);
  if (v36 + 2108414039 < a4 != a33 - 1915079222 < a4) {
    BOOL v40 = a33 - 1915079222 < a4;
  }
  return (*(uint64_t (**)(void))(v37 + 8 * ((!v40 * v35) ^ v34)))();
}

uint64_t sub_1F8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1F8D0(v5 & 0xFFFFFFE0, a2, 0, a4, (v4 - 948428593), 1446, 93);
}

uint64_t sub_1F8D0@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W6>, uint64_t a6@<X8>)
{
  uint64_t v9 = (a3 - a2);
  long long v10 = *(_OWORD *)(a6 + v9 - 15);
  long long v11 = *(_OWORD *)(a6 + v9 - 31);
  uint64_t v12 = v6 + v9;
  *(_OWORD *)(v12 - 15) = v10;
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v7 + 1095) ^ a4) + a2 == a1) * a5) ^ v7)))();
}

uint64_t sub_1F914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                + 8
                                                                                * (((((v31 + 402) ^ 0x4AE)
                                                                                   + (v31 ^ 0x493))
                                                                                  * (v29 == v30)) ^ v31)))(-1318728281, a29, 4294966083, 3334056263, 53);
}

uint64_t sub_1F970(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_951B0 + ((1812 * (*(_DWORD *)(a2 + 4) == 1284426109)) ^ 0x160u)))(4294925278);
}

uint64_t sub_1F9B4(uint64_t a1, int a2)
{
  *(void *)(v5 + (v3 & v6)) = v8;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 == 0) * a2) | v2)))();
}

uint64_t sub_1F9E0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((STACK[0x2D4] & 0xA37BD456 ^ 0x81A) * (v1 == v3)) ^ (v0 - 1324))))();
}

uint64_t sub_1FA18()
{
  *(_DWORD *)(v3 - 192) = v1
                        + 460628867 * ((-863243537 - (v0 | 0xCC8BF2EF) + (v0 | 0x33740D10)) ^ 0x7FE28F6D)
                        - 231790342;
  (*(void (**)(uint64_t))(v2 + 8 * (v1 + 654)))(v3 - 192);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 590)))(336, 1777295586);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2
                                                                                                  + 8 * (((v4 == 0) * (v1 ^ 0x7B2 ^ v1 ^ 0x7BA ^ 0xD)) | v1)))(v4, v5, 1373504863, v6, v7, v8, v9);
}

uint64_t sub_1FAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 < ((2 * a5) ^ 0xCEu)) * (((a5 + 435) | 0x84) ^ 0x228)) ^ a5)))();
}

uint64_t sub_1FB38()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((47 * (((v0 == v1) ^ ((v2 - 72) ^ (v2 + 101))) & 1)) ^ (v2 + 614))))();
}

uint64_t sub_1FB70(int a1, int a2)
{
  unsigned int v5 = a1 + v2 + 50331659;
  if (v5 <= 0x40) {
    int v6 = 64;
  }
  else {
    int v6 = a1 + v2 + 50331659;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 + v6 <= ((v3 - 1479) ^ (v5 - 1))) * ((v3 ^ 0xF) - 484)) ^ v3)))();
}

uint64_t sub_1FBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v45 = (_DWORD *)(a28 + 24 * (a9 - 129800697));
  LODWORD(a33) = v45[4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8 * ((35 * (((*v45 + (int)a1) & 0xFFFFFFFFFFFFFFDLL) != 0)) ^ v43)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

void sub_1FC6C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  unsigned int v9 = (v8 + 319885368) & 0xECEEEDB9;
  a4 = v9
     - 535753261 * ((((&a3 | 0xF3AC9EC6) ^ 0xFFFFFFFE) - (~&a3 | 0xC536139)) ^ 0x6A76F16)
     + 663;
  a3 = v7;
  a5 = a1;
  a6 = v7;
  (*(void (**)(uint64_t *))(v6 + 8 * (int)(v9 + 1751)))(&a3);
  sub_32B68();
}

uint64_t sub_1FCE8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v2 + 306) | 2) + ((v2 + 60) ^ 0xFFFFFC10)) * (a1 == v1)) ^ v2)))();
}

uint64_t sub_1FD24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int8x16_t *a35)
{
  *(int8x16_t *)(a3 + (((a8 + a2) & a4 ^ a5) & (v35 + v37))) = vaddq_s8(vsubq_s8(*a35, vandq_s8(vaddq_s8(*a35, *a35), v39)), v40);
  uint64_t v41 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((1833 * (((v36 + 1) & 0x1FFFFFFF0) == 16)) ^ a8));
  return v41(v41, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1FD94(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)((((a6 + 593185905) & 0xDCA4B57F ^ (a6 + 1437018844) & 0xAA58D7FF ^ 0x347)
                                     * (v6 == a4)) ^ (a6 - 471))))();
}

uint64_t sub_1FDF8@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  int v50 = *(_DWORD *)(&a34 + ((v48 + v46) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v48 + v46)) = (HIBYTE(v50) ^ 0x52) - ((v47 + 84) & (2 * (HIBYTE(v50) ^ 0x52))) - 27;
  *(unsigned char *)(a1 + (v48 + v46 + 1)) = (BYTE2(v50) ^ 0x2D) - ((2 * (BYTE2(v50) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a1 + (v48 + v46 + 2)) = (BYTE1(v50) ^ 0x73) - ((2 * (BYTE1(v50) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a1 + (v48 + v46 + 3)) = v50 ^ 0x8F;
  BOOL v51 = v48 + 1183505713 < (a46 + 1474566681);
  if (v48 + 1183505713 < a2 != a46 + 1474566681 < a2) {
    BOOL v51 = a46 + 1474566681 < a2;
  }
  return (*(uint64_t (**)(void))(v49 + 8 * ((v51 | (8 * v51)) ^ v47)))();
}

uint64_t sub_1FECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,unsigned int a23)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v24
                                                     + 8
                                                     * ((v23 - 518093089) & 0x1EE175B9 | (2 * (a23 > 1)) | (4 * (a23 > 1)))))(910381556, 126653738);
}

uint64_t sub_200C8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v11 = *(unsigned __int8 *)(v7 + v9 - 0x3E76A940CF826F04)
      - (*(unsigned __int8 *)(v8 + v9 - 0x3E76A940CF826F04) ^ 0xE5);
  return (*(uint64_t (**)(void))(v10 + 8 * (((((2 * v11) & 0xDF36FEFA) + (v11 ^ a6) == a6) * ((a1 ^ v6) - 517)) ^ a1)))();
}

uint64_t sub_20130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44 = BYTE4(a36) ^ 0xCE;
  if (v44 == 1)
  {
    BYTE4(a31) = ((8 * a33) ^ 0x78) + ((a4 - 61) & 0xEB ^ 0x4E) - ((2 * ((8 * a33) ^ 0x78)) & 0xC0);
    BYTE5(a31) = ((a33 >> 5) ^ 0x6A) - ((2 * ((a33 >> 5) ^ 0x6A)) & 0xCA) - 27;
    BYTE6(a31) = ((a33 >> 13) ^ 0x79)
               - 2 * (((a33 >> 13) ^ 0x79) & 0xE7 ^ (a33 >> 13) & 2)
               - 27;
    HIBYTE(a31) = ((a33 >> 21) ^ 0x71)
                - 2 * (((a33 >> 21) ^ 0x71) & 0xE7 ^ (a33 >> 21) & 2)
                - 27;
    HIDWORD(v48) = HIDWORD(a32) ^ 0x12;
    LODWORD(v48) = a33 ^ 0xC0000000;
    LOBYTE(a32) = (v48 >> 29) - ((2 * (v48 >> 29)) & 0xCA) - 27;
    BYTE1(a32) = ((HIDWORD(a32) >> 5) ^ 0x7F) - ((2 * ((HIDWORD(a32) >> 5) ^ 0x7F)) & 0xCA) - 27;
    BYTE2(a32) = ((HIDWORD(a32) >> 13) ^ 0xC0) + (~(2 * ((HIDWORD(a32) >> 13) ^ 0xC0)) | 0x35) - 26;
    unsigned int v47 = ((HIDWORD(a32) >> 21) ^ 0xFFFFFF94)
        - 2 * (((HIDWORD(a32) >> 21) ^ 0xFFFFFF94) & 0x67 ^ (HIDWORD(a32) >> 21) & 2)
        - 27;
    uint64_t v45 = a8;
    goto LABEL_5;
  }
  uint64_t v45 = a8;
  if (v44 == 2)
  {
    BYTE4(a31) = ((HIDWORD(a32) >> 21) ^ 0x94)
               - 2 * (((HIDWORD(a32) >> 21) ^ 0x94) & 0xE7 ^ ((57 * (a4 ^ (a4 + 3))) ^ 0x29) & (HIDWORD(a32) >> 21))
               - 27;
    BYTE5(a31) = ((HIDWORD(a32) >> 13) ^ 0xC0) - ((2 * ((HIDWORD(a32) >> 13) ^ 0xC0)) & 0xCA) - 27;
    BYTE6(a31) = ((HIDWORD(a32) >> 5) ^ 0x7F) - ((2 * ((HIDWORD(a32) >> 5) ^ 0x7F)) & 0xCA) - 27;
    HIDWORD(v46) = HIDWORD(a32) ^ 0x12;
    LODWORD(v46) = a33 ^ 0xC0000000;
    HIBYTE(a31) = (v46 >> 29) - ((2 * (v46 >> 29)) & 0xCA) - 27;
    LOBYTE(a32) = ((a33 >> 21) ^ 0x71)
                - 2 * (((a33 >> 21) ^ 0x71) & 0x6D ^ (a33 >> 21) & 8)
                - 27;
    BYTE1(a32) = ((a33 >> 13) ^ 0x79) - ((2 * ((a33 >> 13) ^ 0x79)) & 0xCA) - 27;
    BYTE2(a32) = ((a33 >> 5) ^ 0x6A) - ((2 * ((a33 >> 5) ^ 0x6A)) & 0xCA) - 27;
    LOBYTE(v47) = ((8 * a33) ^ 0x78) + (~(2 * ((8 * a33) ^ 0x78)) | 0x3F) - 26;
LABEL_5:
    BYTE3(a32) = v47;
  }
  return sub_1932C(a1, a2, a3, a4, 913915477, a6, v45, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_203A8@<X0>(unsigned int a1@<W2>, int a2@<W8>)
{
  unsigned int v9 = v7 + 1;
  BOOL v10 = v5 < a1;
  *(unsigned char *)(v6 + (v2 + 1)) = *(unsigned char *)(v4 + (a2 + 1));
  if (v10 == v9 < ((v3 + 413) ^ (a1 - 920))) {
    BOOL v10 = v9 < v5;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((30 * !v10) ^ v3)))();
}

uint64_t sub_203B8(uint64_t a1, uint64_t a2, int a3, int a4)
{
  *(unsigned char *)(*(void *)(v7 + 96) + 1568) = 1;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v7 + 72) == (((v4 + 922759040) | 0xC0000420) ^ a4))
                                * (v5 + a3 + v4 - 139 - 361)) ^ v4)))();
}

uint64_t sub_20410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x3D8] = v69;
  int v73 = 235795823 * (((v72 - 192) & 0xED1918E5 | ~((v72 - 192) | 0xED1918E5)) ^ 0x864BAE43);
  *(void *)(v72 - 192) = 0x6C39C41327E11828;
  *(_DWORD *)(v72 - 168) = v73 + v70 + 492;
  *(void *)(v72 - 160) = a69;
  *(void *)(v72 - 176) = a68;
  *(_DWORD *)(v72 - 184) = -1886077894 - v73;
  uint64_t v74 = (*(uint64_t (**)(uint64_t))(v71 + 8 * (v70 ^ 0x8D3)))(v72 - 192);
  return (*(uint64_t (**)(uint64_t))(v71
                                            + 8
                                            * ((115 * (*(_DWORD *)(v72 - 152) != ((v70 - 101) ^ 0xAE215EC8))) ^ v70)))(v74);
}

uint64_t sub_204F0(uint64_t result)
{
  unint64_t v1 = 1759421093 * ((result - 2 * (result & 0xCE10C030FCF42454) - 0x31EF3FCF030BDBACLL) ^ 0xE0AE01604F899400);
  unint64_t v2 = *(void *)(result + 24) ^ v1;
  unint64_t v3 = *(void *)(result + 8) + v1;
  BOOL v4 = (uint64_t)v3 < (uint64_t)v2;
  BOOL v5 = v3 < v2;
  int v6 = v4;
  if ((*(_DWORD *)result - v1)) {
    int v7 = v6;
  }
  else {
    int v7 = v5;
  }
  BOOL v8 = v7 == 0;
  uint64_t v9 = 32;
  if (!v8) {
    uint64_t v9 = 20;
  }
  *(_DWORD *)(result + 36) = (*(_DWORD *)(result + v9) + v1) ^ (*(_DWORD *)(result + 40) + v1);
  return result;
}

void sub_20584(uint64_t a1)
{
  __asm { BRAA            X13, X17 }
}

void sub_206BC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
  JUMPOUT(0x167E4);
}

void sub_206D4(uint64_t a1@<X8>)
{
  *(_DWORD *)(v4 - 144) = v3;
  *(void *)(v4 - 120) = v1 - 7;
  *(void *)(v4 - 136) = a1 - 7;
  *(_DWORD *)(v4 - 152) = (v2 ^ 0xFFFFFC26) & v3;
  *(_DWORD *)(v4 - 128) = v2 ^ 0xE;
  JUMPOUT(0x2075CLL);
}

uint64_t sub_2083C()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v2 ^ 0xF99)))(v0 ^ v1, 921157844) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (((((687 * (v2 ^ 0x7C4) - 1532) | 0x408) - 1537) * v4) ^ v2)))();
}

uint64_t sub_208A0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((108 * (v1 < 0x83)) ^ (v0 - 1417))))();
}

uint64_t sub_208C4@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  unint64_t v7 = v2 + v4;
  *(unsigned char *)(v7 + a2 - 1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8
                                   * (((v7 < (unint64_t)(v3 + 796) - 1304) * a1) ^ (v3 - 461))))();
}

uint64_t sub_208FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, unint64_t *a16, unint64_t *a17)
{
  a14 = (v17 + 1248) ^ (1374699841
                      * ((&a14 - 397078248 - 2 * (&a14 & 0xE8551118)) ^ 0x85A10911));
  a16 = &STACK[0x18D17CD12703C5EB];
  a17 = a11;
  (*(void (**)(unsigned int *))(v18 + 8 * (v17 + 1941)))(&a14);
  a14 = (v17 + 1248) ^ (1374699841
                      * ((&a14 + 536729857 - 2 * (&a14 & 0x1FFDD901)) ^ 0x7209C108));
  a16 = &STACK[0x18D17CD12703C5EF];
  a17 = a11;
  (*(void (**)(unsigned int *))(v18 + 8 * (v17 + 1941)))(&a14);
  a14 = v17 + 1225351577 * (((&a14 | 0xCDD97601) - (&a14 & 0xCDD97601)) ^ 0xEE43AE17) + 1878;
  a16 = a11;
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v18 + 8 * (v17 + 1952)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (((a15 == -1373544826) * (((v17 - 218) | 0x718) ^ 0xE)) ^ v17)))(v19);
}

uint64_t sub_20A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  unint64_t v64 = STACK[0x5E0] + 0x843828D0CDF34ADLL;
  STACK[0x5E8] = v64;
  unsigned int v65 = 628203409 * ((2 * ((v61 ^ 0xFE0FC357) & 0x4A6DD617) - (v61 ^ 0xFE0FC357) + 898771432) ^ 0x4915E68C);
  *(_DWORD *)(v63 - 184) = v65 - 290923570;
  *(_DWORD *)(v63 - 192) = a60 + 1172345424 + v65 + 9;
  *(void *)(v63 - 176) = v64;
  unint64_t v66 = v60;
  (*(void (**)(uint64_t))(v62 + 8 * (a60 | 0x869)))(v63 - 192);
  STACK[0x4C0] = *(void *)(v62 + 8 * a60);
  STACK[0x3D8] = v66;
  return sub_25A74(-50331659, v66);
}

uint64_t sub_20B54@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  unint64_t v7 = (__n128 *)(v5 + v2);
  v7[73] = a2;
  v7[74] = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v2 == 224) ^ v3) & 1) * v4) ^ a1)))();
}

uint64_t sub_20B8C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * ((121 * ((a4 + 1 + v7) > 0x4F)) ^ v6)))(v5, a5);
}

uint64_t sub_20C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  unsigned int v18 = v14 + ((9 * ((v16 + 451) ^ 0x8D7)) ^ 0xB0240F84);
  if (v18 <= 0x40) {
    unsigned int v18 = 64;
  }
  uint64_t v19 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((15 * (((-45 * ((v16 - 61) ^ 7)) ^ (1339814031 - v13 - v15 + v18 + 1894 < 0xF)) & 1)) | (v16 + 451)));
  return v19(v19, 64, 2955151370, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_20D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((98 * (a7 + 1 == v9 + 64)) ^ v7)))();
}

uint64_t sub_20DC0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v1 - 1102148613 >= (a1 - 445))
                                     * (((a1 + 64912862) & 0xFC2184FB) - 1072)) ^ a1)))();
}

uint64_t sub_20E0C(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((23 * (*(_DWORD *)(v3 + 48 * (v1 + a1)) != v4 + 1206528366)) | v4)))();
}

uint64_t sub_20E58()
{
  BOOL v4 = v0 < 0x312BB8B7;
  if (v4 == v1 - 0x7F787F47E08D2960 < (((37 * (v2 ^ 0x519) - 64) | 0x40u) ^ 0x312BB9C5uLL)) {
    BOOL v4 = v1 - 0x7F787F47E08D2960 < v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((56 * !v4) ^ v2)))();
}

uint64_t sub_20ED4@<X0>(uint64_t a1@<X3>, int a2@<W5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,unint64_t a26,int a27)
{
  LODWORD(STACK[0x2D8]) = a3;
  LODWORD(STACK[0x2DC]) = a25;
  STACK[0x2E0] = a26;
  LODWORD(STACK[0x2E8]) = a27 - a2 + 890137121;
  STACK[0x2F0] = v31 + a2 + 1800159890 + ((v30 - 689) | 0x84u);
  int v32 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 48 * v27 + 8))(a12, a19);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29
                                                              + 8
                                                              * ((1052
                                                                * (v32
                                                                 + ((v30 - 689) ^ (v28 + 256))
                                                                 - ((2 * v32) & 0x5C42BD0C) == v28)) ^ v30)))(4114897149, 180070146, 129800696);
}

void sub_20FB4()
{
}

uint64_t sub_20FBC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v1 & (2 * (*(unsigned __int8 *)(v2 + 1) - 134)))
                                      + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v0) == v0)
                                     * (((v3 + 1798279904) & 0x94D06B96) + 1041)) ^ v3)))();
}

uint64_t sub_21014@<X0>(unsigned int a1@<W8>)
{
  uint64_t v3 = a1;
  uint64_t v4 = a1 - 1076023950;
  if ((unint64_t)(v4 + 1) > 0x38) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 + 16 * ((unint64_t)(v5 - v3 + 1076023950) > 7))))();
}

uint64_t sub_21080()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((195 * (((v1 - 670) ^ 0xFFFFFD41) + v0 > 0x9B)) ^ v1)))();
}

uint64_t sub_210B8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((830
                                * (((((v3 + 51612834) | 0x50847041) - 364424723) & (2
                                                                                  * (*(unsigned __int8 *)(a2 + 5) - 242)))
                                 + ((*(unsigned __int8 *)(a2 + 5) - 242) ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_21114(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((535 * (a4 + 1 == v5 + 32)) ^ a1)))();
}

uint64_t sub_211E0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((STACK[0x580] != 0) * (((v0 - 1267) ^ 0x6D2) - 1469)) ^ (v0 + 527))))();
}

uint64_t sub_21214(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((v6 - 171762935) & 0xA3CE23A ^ (a5 + (v6 ^ (a4 + 790)) + 823)) * (v7 == v5)) ^ v6)))();
}

uint64_t sub_2125C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  *(unsigned char *)(v11 + v12 + v13 + 277) = *(unsigned char *)(a11 + v12 + v13 + 277) ^ 0xE5;
  return (*(uint64_t (**)(void))(v15 + 8 * ((47 * (((v16 - 959) ^ v12) + v13 < (a10 ^ v14))) ^ v16)))();
}

void sub_212B4()
{
}

uint64_t sub_21308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((317 * (v7 + 1 == v6 + 24)) ^ a5)))();
}

uint64_t sub_213D8()
{
  STACK[0x350] = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((LODWORD(STACK[0x3FC]) + 455) * (v0 == v3)) ^ (LODWORD(STACK[0x3FC]) - 1282))))();
}

uint64_t sub_21404()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0xB3E)))();
  LODWORD(STACK[0x620]) = v1;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((((v0 ^ 0x65C) + v0 + 580 - 1303) * (v1 == -1373544826)) ^ v0)))(v3);
}

void sub_21458()
{
  *int v0 = 1373504947;
}

void sub_2146C(uint64_t a1)
{
  int v1 = 1224239923 * (((a1 | 0x53DFEB40) - (a1 & 0x53DFEB40)) ^ 0xA16C1697);
  int v2 = *(_DWORD *)a1 ^ v1;
  int v3 = (*(unsigned char *)(a1 + 32) ^ v1);
  uint64_t v4 = (char *)*(&off_99820 + (v2 ^ 0x45F)) - 4;
  (*(void (**)(void, uint64_t (*)()))&v4[8 * v2 + 7432])(*(&off_99820 + (v2 ^ 0x4E5)), sub_4569C);
  uint64_t v5 = *(void *)((char *)*(&off_99820 + (v2 ^ 0x4BC)) - 4);
  int v6 = v2 + 235795823 * ((&v6 + 707848054 - 2 * ((unint64_t)&v6 & 0x2A30E776)) ^ 0xBE9DAE2F) - 887;
  uint64_t v7 = v5;
  (*(void (**)(int *))&v4[8 * v2 + 7544])(&v6);
  __asm { BRAA            X8, X17 }
}

void sub_215BC()
{
}

uint64_t sub_21730@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((108 * (a1 < 0x83)) ^ (v1 - 1417))))();
}

void sub_21770(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 3804331 * ((a1 & 0x618DD5DA | ~(a1 | 0x618DD5DA)) ^ 0x64ECD973);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_21824(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v4 == v3) ^ (13 * (a3 ^ 0xCD))) & 1)
                                * (((a3 - 962143839) & 0x39591FD7) - 306)) ^ a3)))();
}

void sub_21874(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x67843F9A1244BAC7) = (((v3 + v2) * (v1 - 1678393466)) ^ 0xFFFA9DBD)
                                         + 1372553087
                                         + ((2 * (v3 + v2) * (v1 - 1678393466)) & 0xFFF53B7A);
}

uint64_t sub_21900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, char a13, int a14, uint64_t a15, int a16)
{
  char v24 = *(unsigned char *)(v16 + 28) - v23;
  unsigned int v25 = (((&a11 | 0xB8431E8) - (&a11 | 0xF47BCE17) - 193212905) ^ 0xB8F981BC) * v20;
  a14 = v22 + v25 + v19 + 1239 - 400160217;
  a12 = &STACK[0x3DC5316605FC20C2];
  a16 = v19 - v25 + 1568;
  a15 = v21;
  a13 = ((v24 ^ 0x93) + ((2 * v24) & 0xB2 ^ 0x90) - 65) ^ ((((&a11 | 0xE8)
                                                           - (&a11 | 0x17)
                                                           + 23) ^ 0xBC)
                                                         * v20);
  uint64_t v26 = (*(uint64_t (**)(int *))(v18 + 8 * (v19 + 1893)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1420 * (a11 == v17)) ^ v19)))(v26);
}

uint64_t sub_219EC(double a1)
{
  *(double *)(v3 + v5) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * ((28 * ((v1 ^ (v4 == v5)) & 1)) ^ v2)))();
}

uint64_t sub_21A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, int32x4_t a33, int32x4_t a34, int32x4_t a35, int32x4_t a36, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16,uint64_t a17,uint64_t a18,uint64_t a19,uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  return sub_93CC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_21A30@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  uint64_t v7 = (v3 + a1);
  long long v8 = *(_OWORD *)(v2 + v7 - 15);
  long long v9 = *(_OWORD *)(v2 + v7 - 31);
  uint64_t v10 = a2 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((95 * (((v5 + 307) ^ 0x6A3) == (v4 & 0xFFFFFFE0))) ^ (v5 - 535))))();
}

uint64_t sub_21A8C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((11
                                * ((a3 ^ 0x86 ^ (a7 - 21) ^ (a15
                                                                                             + a8
                                                                                             - (unint64_t)(v15 + a2) < ((a7 + (a3 ^ 0x286u) - 821) ^ 0xDE2DADF7uLL))) & 1)) ^ a3 ^ 0x286u)))();
}

uint64_t sub_21AF0(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v3 - 7 + (v6 + v5 + v8 - v9)) = *(void *)(a2 - 7 + (v6 + v5 + v8 - v9));
  return (*(uint64_t (**)(void))(v10
                                           + 8
                                           * (((2 * ((((a3 + 392) ^ (((a3 - 562) & v4) - v9 == 8)) & 1) == 0)) & 0xF7 | (8 * (((a3 - 120) ^ ~(((a3 - 562) & v4) - v9 == 8)) & 1))) ^ (a3 - 10))))(v7 - ((a3 - 562) & v4));
}

void sub_21B58()
{
}

uint64_t sub_21B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v31 - 136) = v30;
  *(void *)(v31 - 128) = v26;
  *(void *)(v31 - 144) = v29;
  *(_DWORD *)(v31 - 120) = v25
                         + 535753261 * ((((v31 - 144) | 0x2DE115EC) - ((v31 - 144) & 0x2DE115EC)) ^ 0x27151BC3)
                         + 539;
  *(void *)(v31 - 112) = v30;
  (*(void (**)(uint64_t))(v28 + 8 * (v25 + 1384)))(v31 - 144);
  int v32 = 1225351577 * ((((v31 - 144) | 0x1068A157) + (~(v31 - 144) | 0xEF975EA8)) ^ 0x33F27940);
  *(void *)(v31 - 136) = a25;
  *(_DWORD *)(v31 - 128) = (v27 - 584148098) ^ v32;
  *(_DWORD *)(v31 - 140) = (v25 - 650) ^ v32;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v25 ^ 0xB43)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * (((*(_DWORD *)(v31 - 144) == (v25 ^ 0xB87C55B5))
                                              * (((v25 - 535) | 0x80) - 152)) ^ v25)))(v33);
}

void sub_21C90()
{
}

uint64_t sub_21C98@<X0>(int a1@<W1>, int a2@<W5>, uint64_t a3@<X7>, int a4@<W8>)
{
  *(unsigned char *)(a3 + v6) = *(unsigned char *)(v8 + (v5 + a1))
                      - (v9 & (2 * *(unsigned char *)(v8 + (v5 + a1))))
                      - 27;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 == 63) * a4) ^ (a2 + v4 + 143))))();
}

uint64_t sub_21CE4()
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((((v2 - 817149711) & 0x30B4B4FC) + (v2 ^ 0x26D)) * (v0 == v1)) ^ v2)))(1866);
}

uint64_t sub_21D48(uint64_t a1)
{
  int v1 = 535753261 * ((((2 * a1) | 0x48BC2786) - a1 - 610145219) ^ 0x2EAA1DEC);
  int v2 = *(_DWORD *)a1 - v1;
  int v3 = *(_DWORD *)(a1 + 16) + v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x67843F9A1244BAC7);
  unsigned int v6 = v4 - 1372200252;
  BOOL v5 = v4 - 1372200252 < 0;
  unsigned int v7 = 1372200252 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_99820 + (v2 ^ 0x62E))
                              + 8
                              * ((82
                                * (((v2 - 1) ^ ((v3 - 1899470963) < 4
                                                                                                 * (unint64_t)v7)) & 1)) ^ v2)
                              - 4))();
}

uint64_t sub_21E1C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)(*v2 + 4 * v4) == v0 + 1863) * (((v3 - 1723) | 0x459) ^ 0xAFE)) ^ v3)))();
}

uint64_t sub_21E58()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1729 * ((v0 ^ v3) < (((v1 + 825) | 0x40) ^ 0x751u))) ^ v1)))();
}

void sub_21E9C(_DWORD *a1)
{
  *((unsigned char *)a1 + v2 + 4) = -68;
  sub_A388(a1, v1 + 1);
}

uint64_t sub_21EC8@<X0>(int a1@<W8>)
{
  unsigned int v3 = (unsigned char *)STACK[0x440];
  v1[12] = -((-256 << (((a1 + 63) & 0xFD) + 116)) & 0xCA) - 27;
  v1[13] = -27;
  v1[14] = -27;
  v1[15] = -28;
  v3[16] ^= *v1 ^ 0xE5;
  v3[17] ^= v1[1] ^ 0xE5;
  v3[18] ^= v1[2] ^ 0xE5;
  v3[19] ^= v1[3] ^ 0xE5;
  v3[20] ^= v1[4] ^ 0xE5;
  v3[21] ^= v1[5] ^ 0xE5;
  v3[22] ^= v1[6] ^ 0xE5;
  v3[23] ^= v1[7] ^ 0xE5;
  v3[24] ^= v1[8] ^ 0xE5;
  v3[25] ^= v1[9] ^ 0xE5;
  v3[26] ^= v1[10] ^ 0xE5;
  v3[27] ^= v1[11] ^ 0xE5;
  v3[28] ^= v1[12] ^ 0xE5;
  v3[29] ^= v1[13] ^ 0xE5;
  v3[30] ^= v1[14] ^ 0xE5;
  v3[31] ^= v1[15] ^ 0xE5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 8 * ((a1 + 11) ^ 0x80)))(3010541200, 1360, 1814, 4294967273, 10, 220, 922, 1285);
}

uint64_t sub_220EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(v28 - 120) = (v23 + 843) ^ (((2 * (((v28 - 120) ^ 0x83A470D) & 0x166438A5)
                                          - ((v28 - 120) ^ 0x83A470D)
                                          - 375666854) ^ 0x8C55985E)
                                        * v27);
  *(void *)(v28 - 112) = v24;
  *(void *)(v28 - 104) = a23;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v23 ^ 0x8F0)))(v28 - 120);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((49
                                              * (*(_DWORD *)(v28 - 116) == ((v23 + 21947128) & 0xFEB11FEF ^ (v26 + 451)))) ^ v23)))(v29);
}

void sub_221A4()
{
}

uint64_t sub_221B0@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v7 = v4 + a1;
  *(unsigned char *)(a2 + v7) = v3;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v7 + 1) < 0x38) * v5) ^ v2)))();
}

uint64_t sub_221E4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v4 ^ 0x2737DFFB) - 87394384 + (v2 & 0x4E6FBFF6) - 570578860 <= a2 - 1885)
                                * (((a2 - 1852) | 0x210) ^ 0x20A)) ^ a2)))();
}

void sub_2227C()
{
}

uint64_t sub_22284(int a1)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)((((v1 ^ 0xF0B3CBC8) == ((a1 + 1020498302) & 0xC32C6F3B ^ 0x61B))
                                                   * (((a1 + 1867240005) & 0x90B42E5F) - 1291)) ^ a1)))(471039382);
}

uint64_t sub_22300@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v3 - 0x67843F9A1244BAC7);
  int v5 = v4 - 1372200252;
  if (v4 - 1372200252 < 0) {
    int v5 = 1372200252 - v4;
  }
  *(_DWORD *)(v2 - 0x67843F9A1244BAC7) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((61
                                * ((v5 ^ (677 * (v1 ^ 0x548) - 541591663))
                                 + ((((v1 ^ 0x307) - 898204078) & 0x35897FF2 ^ 0xBF6FFD24) & (2 * v5))
                                 + 2103087015 == 1561496706)) ^ v1 ^ 0x307)))();
}

uint64_t sub_223B8(uint64_t a1, uint64_t a2, int a3)
{
  return sub_44330(a1, 40, 229, 910381710, 65, a3 - 265);
}

uint64_t sub_22404(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 88) = 3;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_22424(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  __int16 v2 = *(_DWORD *)(result + 8) - -24687 * (((result | 0xEC2B) - (result & 0xEC2B)) ^ 0xE018);
  unsigned int v3 = (((2 * (v2 & 0x1FF ^ 0x1A4)) | 0x6C6A4E9C) - (v2 & 0x1FF ^ 0x1A4) - 909453134) ^ 0x943D2306;
  *(_DWORD *)(v1 - 0x843828D0CDF33CDLL) = (v3 - ((2 * v3) & 0xBEFE99B8) - 545305380) ^ 0xEEDBA632;
  *(void *)(v1 - 0x843828D0CDF33EDLL) = 0xCE2F2D4FD2980FF2;
  *(_DWORD *)(v1 - 0x843828D0CDF33D1) = 1321801015;
  int v4 = v2 ^ 0xCC;
  if (v4 == 1)
  {
    int v5 = 1321801031;
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    *(_DWORD *)(v1 - 0x843828D0CDF33D5) = -1845521766;
    int v5 = 1321801035;
LABEL_5:
    *(void *)(v1 - 0x843828D0CDF33E5) = 0xBDE0D8E33568506BLL;
    *(void *)(v1 - 0x843828D0CDF33DDLL) = 0x421F271CCA97AF94;
    *(_DWORD *)(v1 - 0x843828D0CDF33D1) = v5;
  }
  *(_DWORD *)(result + 4) = 1071257447;
  return result;
}

void sub_225B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(_DWORD *)(v9 - 120) = v8;
  *(_DWORD *)(v9 - 128) = v7;
  *(_DWORD *)(v9 - 136) = ((a7 - 194901397) & 0xB9DF55F ^ 0xFFFFFAE5) & v7;
  JUMPOUT(0x2263CLL);
}

uint64_t sub_22708()
{
  BOOL v3 = v2 - 431651006 != ((7 * (v1 ^ 0x4E)) ^ 0x59C9EDAF);
  return (*(uint64_t (**)(void))(v0 + 8 * ((v3 | (4 * v3)) ^ v1)))();
}

uint64_t sub_22758()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v0 == (((v1 ^ 0x6B) + 69) ^ v3)) * v2) ^ v1 ^ 0x6B)))();
}

void sub_22784(uint64_t a1, int a2)
{
  *(_DWORD *)(*(void *)(a1 + 24) - 0x5248BA885C210B04) = a2;
  *int v2 = v3;
  JUMPOUT(0x21464);
}

uint64_t sub_227A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((v5 - 1511330940) & 0x5A1513EF ^ ((v5 + 1385) | 0xA) ^ 0x62A) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_227F0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((230 * (a8 + ((23 * (a7 ^ 0x524)) ^ (a2 + 1305)) < (a7 ^ 0x524u) - 93)) ^ a7)))();
}

void sub_22838(uint64_t a1)
{
  int v1 = 1734042137 * (a1 ^ 0x5CCEC34D);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_228B0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 | (1968 * (v1 == v3)))))();
}

uint64_t sub_228D4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  LODWORD(STACK[0x5B4]) = v2 + 10;
  unint64_t v4 = STACK[0x578];
  BOOL v5 = LODWORD(STACK[0x474]) == 0;
  STACK[0x4D0] = LODWORD(STACK[0x474]);
  return (*(uint64_t (**)(uint64_t, unint64_t))(v3
                                                              + 8
                                                              * ((v5 ^ (a2 + 111)) & 1 | (32 * ((v5 ^ (a2 + 111)) & 1)) | (a2 - 136))))(a1, v4);
}

uint64_t sub_2291C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((LODWORD(STACK[0x5CC]) == (((a1 - 77) | 0x208) ^ (v2 - 488))) * ((a1 + 18) ^ 0xEE)) ^ a1)))();
}

uint64_t sub_2295C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  HIDWORD(a10) = a5;
  return sub_22A2C(0x689170CABB1BB2A6, 0xE9F7F0EEFFBFBBEFLL, a3, 0, a5, (a3 + 2136973305), ((a7 + 228) ^ 0x9FEB7E5E) + a5, a2 - 0x67843F9A1244BAC3, a9, a10, a2, v10);
}

uint64_t sub_22A2C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v11 = v9 + a4 > 535525989 || v9 + a4 < a7;
  return (*(uint64_t (**)(void))(v7 + 8 * ((73 * v11) ^ v8)))();
}

uint64_t sub_22A80()
{
  return sub_22AD0((v0 - 1773207761), 1773206227, 223152103, 2865249692, 431);
}

uint64_t sub_22AD0@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  BOOL v21 = v16 > v19;
  *(_DWORD *)(a14 + 4 * (v14 + a4)) = *(_DWORD *)(*v18 + 4 * (v14 + a4));
  if (v21 == v14 + a1 < a2) {
    BOOL v21 = v14 + a1 < v17;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((v21 * a3) ^ (v15 - 980))))();
}

uint64_t sub_22B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  unsigned int v25 = ((&a14 + 832624133 - 2 * (&a14 & 0x31A0D605)) ^ 0x6D6E1548) * v24;
  a14 = a12;
  LODWORD(a15) = v23 - v25 - 85;
  a16 = v25 ^ (v20 - ((2 * v20) & 0xAE7A19E0) - 683864848);
  (*(void (**)(uint64_t *))(v22 + 8 * (v23 ^ 0xB60)))(&a14);
  unsigned int v26 = 628203409 * (((~&a14 & 0xC0F0C382) - (~&a14 | 0xC0F0C383)) ^ 0x4278CFB0);
  a16 = (v19 ^ 0x7ED3DFED) + ((v19 << (v23 ^ 0x12)) & 0xFDA7BFDA) - 75700901 + v26;
  a15 = v18;
  a17 = a12;
  LODWORD(a14) = v23 + 625 - v26;
  (*(void (**)(uint64_t *))(v22 + 8 * (v23 + 1362)))(&a14);
  unsigned int v27 = 628203409
      * (((&a14 | 0x394CF50C) - &a14 + (&a14 & 0xC6B30AF0)) ^ 0xBBC4F93F);
  a17 = a12;
  a16 = (v17 ^ 0x7E56F5D8) + ((2 * v17) & 0xFCADEBB0) - 67514512 + v27;
  a15 = a9;
  LODWORD(a14) = v23 + 625 - v27;
  uint64_t v28 = (*(uint64_t (**)(uint64_t *))(v22 + 8 * (v23 + 1362)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((87 * (HIDWORD(a14) == v21)) ^ v23)))(v28);
}

uint64_t sub_22D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  unsigned int v20 = (a17 ^ v18) - (((a17 ^ v18) << (((v17 - 91) & 0xBF) + 68)) & 0x86F372E8) + 1132050804;
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((209
                                * (((2 * v20) & 0xF36FBF60 ^ (((v17 - 530845339) & 0x1FA40FD7) - 2107428917))
                                 + (v20 ^ 0x3ACE66C4)
                                 - 1093664896 == 948428592)) ^ v17)))();
}

uint64_t sub_22DD0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 >> v4) & 1) == 0) * v3) ^ v2)))();
}

uint64_t sub_22DF8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((30
                                * (((v1 - 1102148613 < ((v0 - 425) ^ 0x6Du)) ^ (37 * ((v0 - 22) ^ 1))) & 1)) ^ (v0 + 234))))();
}

uint64_t sub_22E54@<X0>(int a1@<W8>)
{
  *(void *)(v4 - 220 + v1 + 1) = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((28
                                * ((((v2 ^ 0x1A) - 110) ^ ((((v2 ^ 0x1A) - 1265) & a1) == 8)) & 1)) ^ v2 ^ 0x1A)))();
}

uint64_t sub_22EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 == 1) * a6) ^ v6)))();
}

uint64_t sub_22EBC@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, unsigned int a6@<W5>, void *a7@<X6>, int a8@<W7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v40 = 4 * (a4 + 1 + a5);
  unint64_t v41 = (*(_DWORD *)(a28 + v40) ^ v28) + (a2 ^ HIDWORD(v33)) + a6 * (unint64_t)(*(_DWORD *)(*a7 + v40) ^ v28);
  unint64_t v42 = HIDWORD(v39)
      + v36 * (unint64_t)(*(_DWORD *)(*v34 + v40) ^ v28)
      + ((v41 + v38 - (((a9 ^ v29) * v31 + v32) & (2 * v41))) ^ v37);
  *(_DWORD *)(a28 + 4 * (a4 + a5)) = v42 + v28 - (a1 & (2 * v42));
  BOOL v44 = a4 + a8 > v30 || a4 + a8 < a3;
  return (*(uint64_t (**)(void))(v35 + 8 * (((2 * v44) | (4 * v44)) ^ a9)))();
}

void sub_22F60()
{
}

uint64_t sub_22F6C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(*(void *)(a1 - 0x67843F9A1244BAC3) + 4
                                                                                      * (v2 + v5 - 1)) != v3)
                                * (((2 * (v1 ^ 0x3FA)) ^ 0x1D) - 446)) ^ (2 * (v1 ^ 0x3FA)))))();
}

uint64_t sub_22FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v16 = ((2
        * ((a13 ^ (v13 + (v14 ^ 0xE8C) - 1665)) - ((2 * (a13 ^ (v13 + (v14 ^ 0xE8C) - 1665))) & 0x86F372E8) + 1132050804)) & 0xF36FBF60 ^ 0x82633260)
      + ((v14 - 36) ^ 0x3ACE612D ^ ((a13 ^ (v13 + (v14 ^ 0xE8C) - 1665))
                                  - ((2 * (a13 ^ (v13 + (v14 ^ 0xE8C) - 1665))) & 0x86F372E8)
                                  + 1132050804))
      - 1093664896 != 948428592;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v16 | (v16 << 6)) ^ v14)))();
}

void sub_2305C(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 535753261 * ((a1 + 317168069 - 2 * (a1 & 0x12E799C5)) ^ 0x181397EA);
  uint64_t v2 = *(void *)(a1 + 8);
  v4[0] = v1 + 235795823 * (((~v4 & 0x980B8B58) - (~v4 | 0x980B8B59)) ^ 0xCA6C200) - 709;
  uint64_t v5 = v2;
  int v3 = (char *)*(&off_99820 + v1 - 1183) - 4;
  (*(void (**)(_DWORD *))&v3[8 * (v1 ^ 0xDAF)])(v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_2316C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((61 * (v6 - 1397079335 < ((a6 + v7 - 523) | 0x600u) - 1671)) ^ (a6 + v7 + 969))))();
}

uint64_t sub_231AC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 ^ 0x78C ^ (a2 - 633333131) & 0x25BFDFFC) * (v2 == v3)) ^ a2)))();
}

void sub_231FC(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x35FF68D50C8F4093) - 865915663;
  unsigned int v3 = *(_DWORD *)(a1 + 20) + v1 + 987557569;
  BOOL v4 = v2 < 0x6116E8DA;
  BOOL v5 = v2 > v3;
  if (v3 < 0x6116E8DA != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X10, X17 }
}

uint64_t sub_232F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v7
                                                                      + 8
                                                                      * (((((11 * (a6 ^ 0x7F8)) ^ 0x49C) - 1333)
                                                                        * (v6 < 0x10)) ^ a6 ^ 0x432)))(a1, a2, a3, 0);
}

uint64_t sub_23334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((((a10 - 1098794476) < 0xFFFFFFFB)
                                              * (((v11 - 31) | 0x19C) ^ 0x1B6)) ^ (v11 + 1105))))(a1);
}

uint64_t sub_2338C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v7 = v5 - (((v5 << ((68 * (v4 ^ 0x53)) ^ 0xCD)) + 1726115104) & 0x86F372E8) - 152375292;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * ((1022
                                                                                  * (((2 * v7) & 0xF36FBF60 ^ 0x82633260)
                                                                                   + (v7 ^ 0x3ACE66C4)
                                                                                   - 1093664896 == 948428592)) ^ (v4 + 171))))(a1, a2, 1373504863, a4, 948428592);
}

uint64_t sub_23458@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W6>, uint64_t a4@<X8>)
{
  int v12 = v8 + v6;
  int v13 = *(_DWORD *)(a4 + 4 * (v8 + v6 - 8)) ^ *(_DWORD *)(a4 + 4 * (v8 + v6 - 3));
  int v14 = v13 + v11 - (a3 & (2 * v13));
  int v15 = *(_DWORD *)(a4 + 4 * (v12 - 16)) ^ *(_DWORD *)(a4 + 4 * (v12 + ((v4 + v7) & a1) - 553));
  HIDWORD(v16) = v15 ^ v14 ^ v9;
  LODWORD(v16) = v15 ^ ~v14;
  *(_DWORD *)(a4 + 4 * (v5 + v8)) = (v16 >> 31) + v11 - (a3 & (2 * (v16 >> 31)));
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v5 + 1 + v8) > 0x4F) * a2) ^ v4)))();
}

uint64_t sub_234E8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((44 * (((v0 == v1) ^ ((v2 + 89) ^ (v2 - 50))) & 1)) ^ v2)))();
}

uint64_t sub_2352C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((494 * (a5 + 1 == v7 + 16)) ^ v5)))();
}

uint64_t sub_2361C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)((((v8 ^ 0x30u) >= ((v9 - 604) ^ 0xB0u))
                                     * ((v9 - 272175909) & 0xFD7F9CFF ^ (a8 - 53))) ^ v9)))();
}

uint64_t sub_2366C()
{
  return sub_23674();
}

uint64_t sub_23674@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W4>, int a4@<W8>, int8x16_t a5@<Q0>, int8x16_t a6@<Q3>)
{
  int8x16_t v11 = *(int8x16_t *)(v10 + (v6 + a1 + v7));
  *(int8x16_t *)(v8 + v7) = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), a6)), a5);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 != 48) * a2) ^ (a3 + a4 - 48))))();
}

void sub_236BC()
{
}

uint64_t sub_236C4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  a5 = v6;
  a6 = v7;
  a3 = v7;
  a4 = v8 - 535753261 * ((&a3 & 0x2344C342 | ~(&a3 | 0x2344C342)) ^ 0xD64F3292) + 920;
  uint64_t v9 = (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v8 ^ 0x8D8)))(&a3);
  return sub_23724(v9);
}

uint64_t sub_2374C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_951B0 + ((107 * (*(_DWORD *)(a2 + 4) == 1284426097)) ^ 0x528u)))();
}

uint64_t sub_23788()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(void *)(*(void *)(v2 + 8 * (v1 - 1048)) - 4) == 0)
                                * ((541 * (v1 ^ 0x434)) ^ 0x436)) ^ v1)))();
}

uint64_t sub_237C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v15 = (a6 + v9);
  *(unsigned char *)(v14 + v15) ^= *(unsigned char *)(v11 + (v15 & 0xF)) ^ *(unsigned char *)(v10 + (v15 & 0xF)) ^ *(unsigned char *)(v12 + (v15 & 0xF)) ^ (5 * (v15 & 0xF)) ^ 0xE5;
  return (*(uint64_t (**)(void))(v13 + 8 * ((1940 * (a6 - 1 == v8)) ^ (a8 - 545))))();
}

void sub_23828()
{
}

uint64_t sub_2388C(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((125 * ((((v1 ^ 0xFFFFFC4E) + v1 + 396) & (a1 + v3 - (v2 & 3) + 638)) > a1 + v3 + 641)) ^ v1)))();
}

uint64_t sub_238DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v17 - 128) = v16;
  *(void *)(v17 - 120) = a13;
  *(_DWORD *)(v17 - 136) = (v15 + 461) ^ (((((2 * (v17 - 136)) | 0x313D44FC) - (v17 - 136) - 413049470) ^ 0x756ABA77)
                                        * v13);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 1490)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((60 * (*(_DWORD *)(v17 - 132) - 645999914 < (v15 ^ 0xF1C487B8))) ^ v15)))(v18);
}

uint64_t sub_2398C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W6>, _DWORD **a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  BOOL v27 = v16 > v18;
  uint64_t v28 = 4 * (int)(v24 + ((v26 + v19) & v20 ^ (a2 + 1481)));
  unsigned int v29 = (v14 ^ 0x974770DA) + (v25 ^ v15) * (**a5 ^ v15) + (*(_DWORD *)(a14 + v28) ^ v15);
  *(_DWORD *)(a14 + v28) = (v29 + a1 - (v21 & (2 * v29))) ^ v22;
  if (v27 == a3 + 1 < a6) {
    BOOL v27 = a3 + 1 < a4;
  }
  return (*(uint64_t (**)(void))(v23 + 8 * ((!v27 * v17) ^ v26)))();
}

void sub_23A40(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_23AA4@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((a3 == ((v3 - 270) ^ (a1 + 108))) * (a2 + ((v3 - 3151787) & 0xED769FEF) - 361)) ^ v3)))();
}

uint64_t sub_23AF4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  unint64_t v48 = STACK[0x5F0];
  uint64_t v49 = (v46 + 105647720);
  int v50 = *(_DWORD *)(a1 - 0x843828D0CDF33E5 + v49);
  *(unsigned char *)(v48 + v49) = ((a45 - 125) ^ HIBYTE(v50) ^ 2) - ((2 * ((a45 - 125) ^ HIBYTE(v50))) & 0xCA) - 27;
  *(unsigned char *)(v48 + (v46 + 105647721)) = (BYTE2(v50) ^ 0x2D) - ((2 * (BYTE2(v50) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(v48 + (v46 + 105647722)) = (BYTE1(v50) ^ 0x73) - ((2 * (BYTE1(v50) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(v48 + (v46 + 105647723)) = v50 ^ 0x8F;
  LODWORD(v49) = *v45 + 1005959301;
  BOOL v51 = v49 < 0x8ABECDBC;
  BOOL v52 = v49 > 0x8ABECDC0;
  if (v51) {
    BOOL v52 = v51;
  }
  return (*(uint64_t (**)(void))(v47 + 8 * (v52 | (a45 - 1))))();
}

uint64_t sub_23BE0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * ((22 * (v5 - v3 < (unint64_t)(((a3 - 1094) | 0x46u) - 209) - 341)) ^ a3)))(v4);
}

uint64_t sub_23C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 128) = v17;
  *(void *)(v18 - 120) = a14;
  *(_DWORD *)(v18 - 136) = (v16 + 826) ^ (1374699841
                                        * ((2 * ((v18 - 136) & 0x2F83ECE8) - (v18 - 136) + 1350308629) ^ 0x3D880B1C));
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0x8DF)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((504 * (*(_DWORD *)(v18 - 132) == v14 + 288 * (v16 ^ 0xF2) - 574)) ^ v16)))(v19);
}

void sub_23CC8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_23DE8@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x28C]) = v2 + 130;
  unint64_t v6 = STACK[0x3C8];
  *(_DWORD *)(v6 + 392) = a1;
  *(_DWORD *)(v6 + 396) = STACK[0x42C];
  *(void *)(v6 + 400) = STACK[0x570];
  *(_DWORD *)(v6 + 408) = ((v2 + 344) ^ 0x350E6C07) - v4 + LODWORD(STACK[0x528]);
  *(void *)(v6 + 416) = STACK[0x3A0] + (v4 + 1800160278);
  int v7 = (*(uint64_t (**)(unint64_t, unint64_t))(v1 + 48 * v3 + 8))(STACK[0x348], STACK[0x248]);
  return (*(uint64_t (**)(__n128))(v5
                                           + 8
                                           * (((v7 - 1373544826 - ((2 * v7) & 0x5C42BD0C) == -1373544826)
                                             * (LODWORD(STACK[0x28C]) ^ 0x770)) ^ v2)))((__n128)0);
}

uint64_t sub_23EC0@<X0>(int a1@<W8>)
{
  STACK[0x3D8] = v2;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 == v1 + ((a1 - 632879372) ^ 0xDA4707F5) - 78)
                                * ((a1 - 632879372) & 0x25B8F8F7 ^ 0x648)) ^ (a1 - 7))))();
}

void sub_23F3C()
{
}

void sub_23F48()
{
}

uint64_t sub_23F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  BOOL v13 = a11 + 4198659 < ((v12 - 55) ^ v12 ^ 0xB65 ^ 0x7FFFF552u);
  return (*(uint64_t (**)(void))(v11 + 8 * (((2 * v13) | (4 * v13)) ^ v12)))();
}

void sub_23FB8(int a1@<W8>)
{
  BOOL v6 = *(_DWORD *)(*v4 + 4 * (v2 + a1 + 1)) == v3;
  sub_314FC((((v5 + 201) | 0x9D) ^ 0x79773F3D) - 1678393466 * (a1 - v6) + (v2 + a1 - v6 + 2) * v1);
}

uint64_t sub_24008@<X0>(int a1@<W4>, int a2@<W8>)
{
  *(unsigned char *)(v5 + (v8 + v4 + a1)) = *(unsigned char *)(v3 + (v8 + v4 + a1));
  return (*(uint64_t (**)(void))(v2 + 8 * (((v8 - 1 != a2) * v7) ^ v6)))();
}

uint64_t sub_24038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16, unint64_t *a17, unint64_t *a18, unint64_t *a19, unsigned int a20)
{
  a17 = a12;
  a18 = &STACK[0xC9996988DE51B2];
  a19 = &STACK[0x6A4735A87A26440D];
  a20 = (v20 - 883) ^ (1225351577
                     * ((((&a15 | 0x2B2818A2) ^ 0xFFFFFFFE) - (~&a15 | 0xD4D7E75D)) ^ 0xF74D3F4B));
  (*(void (**)(unsigned int *))(v21 + 8 * (v20 ^ 0xE28)))(&a15);
  a17 = &STACK[0x18D17CD12703C5F7];
  a18 = a12;
  a15 = (v20 - 193) ^ (1374699841
                     * ((2 * (&a15 & 0x69BA0620) - &a15 - 1773798946) ^ 0xFBB1E1D7));
  (*(void (**)(unsigned int *))(v21 + 8 * (v20 + 500)))(&a15);
  a15 = v20 + 1225351577 * (&a15 ^ 0x239AD816) + 437;
  a17 = a12;
  uint64_t v22 = (*(uint64_t (**)(unsigned int *))(v21 + 8 * (v20 + 511)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((344 * (a16 == ((v20 - 104) ^ 0xAE21589F))) | v20)))(v22);
}

uint64_t sub_241B8@<X0>(char a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v7 = a3 + v5;
  *(unsigned char *)(a2 + v7) = a1;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((v7 + (unint64_t)(((v3 - 677) | 0x488) ^ 0x4B5u) - 62 < 0x38) * v4) ^ ((v3 - 677) | 0x488))))();
}

uint64_t sub_241FC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  *a3 = 0;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v4 + v6 + 307) ^ ((2 * (a4 == 0)) | (4 * (a4 == 0))))))();
}

uint64_t sub_24228(uint64_t a1)
{
  return sub_24230(a1, *v1);
}

uint64_t sub_24230(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t, void))(v4 + 8 * (v2 ^ 0xAAD)))(*v6, a2, (v2 ^ 0x84u) - 1359519636 + *(_DWORD *)(v3 - 0x7761D79CB8DF4D0BLL));
  *int v9 = v8;
  *(_DWORD *)(v3 - 0x7761D79CB8DF4D0BLL) = v7;
  *uint64_t v5 = v7;
  return result;
}

void sub_242B0()
{
  *uint64_t v0 = -1123209429;
}

uint64_t sub_242BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7
                                           + 8
                                           * ((((((v4 & 0x18) == 0) ^ a4 ^ 0x11) & 1)
                                             * (((a4 - 28) | 0xA0) ^ 0x4D)) ^ a4)))((v5 - v6));
}

void sub_24300()
{
}

uint64_t sub_2430C@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v31 = 4 * (v25 - 108174678);
  unsigned int v32 = *(_DWORD *)(v29 + 4 * (v25 - 108174679));
  int v33 = (a1 + ((v32 >> 30) ^ 1) + 2 * (((v32 >> 30) ^ 1 | 0x7FFFFFFE) ^ (v32 >> 30)) + 2) ^ v32;
  int v34 = ((a1 + 1566083941 * v33 - ((-1162799414 * v33) & 0xAE0C3E6C)) ^ *(_DWORD *)(v29 + v31)) - v25;
  *(_DWORD *)(v29 + v31) = v34 - ((2 * v34 + 216349356) & 0xAE0C3E6C) + 1568193676;
  unint64_t v35 = 1759421093 * ((0x79B31E4EFDD16787 - (v28 | 0x79B31E4EFDD16787) + a25) ^ 0xA8F220E1B153282CLL);
  *(_DWORD *)(v30 - 144) = v35;
  *(void *)(v30 - 136) = (v25 + 472643171) - v35;
  *(_DWORD *)(v30 - 128) = -1098935330 - v35 + a2;
  *(_DWORD *)(v30 - 124) = a2 - 1340386951 - v35;
  *(_DWORD *)(v30 - 112) = ((a2 - 1340386951) ^ 6) - v35;
  *(_DWORD *)(v30 - 104) = ((a2 - 1340386951) ^ 0x78) - v35;
  *(void *)(v30 - 120) = v35 ^ 0x229E93B8;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v27 + a2 + 1393)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * *(int *)(v30 - 108)))(v36);
}

uint64_t sub_24470@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 ^ 0x59Fu) - 1372201613 + *(_DWORD *)(a1 + 532) < 0x7FFFFFFF) * ((v1 ^ 0x73) + 504)) ^ v1)))();
}

uint64_t sub_244C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v18 - 120) = v17
                         + 535753261 * ((~((v18 - 144) | 0xFD65ADB9) + ((v18 - 144) & 0xFD65ADB9)) ^ 0x86E5C69)
                         + 1069;
  *(void *)(v18 - 112) = v13;
  *(void *)(v18 - 136) = v13;
  *(void *)(v18 - 128) = v15;
  *(void *)(v18 - 144) = v14;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 ^ 0x986)))(v18 - 144);
  int v19 = 1225351577 * ((v18 + 1601168125 - 2 * ((v18 - 144) & 0x5F6FE38D)) ^ 0x7CF53B9B);
  *(void *)(v18 - 136) = a12;
  *(_DWORD *)(v18 - 140) = (v17 - 120) ^ v19;
  *(_DWORD *)(v18 - 128) = (v17 + 824 + v12 - 584149201) ^ v19;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 + 1875)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((58 * (*(_DWORD *)(v18 - 144) == -1199810916)) ^ v17)))(v20);
}

uint64_t sub_245F4()
{
  *(_DWORD *)(*(void *)(v4 - 0x67843F9A1244BAC3) + 4 * (v0 + v1 + 1)) = 455190778;
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * ((((v0 + v1) < 0x7FFFFFFF) * (v2 ^ 0x757)) ^ (v2 + 155))))((v0 - 1));
}

uint64_t sub_246A0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (v4 + a1 + 811)) = *(unsigned char *)(v5 + (v4 + a1 + 811))
                                                 - ((*(unsigned char *)(v5 + (v4 + a1 + 811)) << ((a2 ^ 0xF1) + 125)) & 0xCA)
                                                 - 27;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1051 * (a1 - 1 == a3)) ^ a2)))();
}

uint64_t sub_246F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x4E0] = v63;
  STACK[0x460] = v65;
  STACK[0x520] = *(void *)(v66 + 8 * v64);
  unint64_t v67 = STACK[0x380];
  STACK[0x468] = ((v64 + 1210) ^ 0x48ALL) + STACK[0x278];
  STACK[0x4E8] = v67;
  if (v67) {
    BOOL v68 = a63 == 0;
  }
  else {
    BOOL v68 = 1;
  }
  int v69 = v68;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66
                                                                                         + 8
                                                                                         * ((v69 * (v64 + 422)) ^ (v64 + 1210))))(1219, 1189, 1373504863, a4, a5, 2682113404);
}

uint64_t sub_247C4(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (a1 ^ (4
                                     * (v2 + v1 + (((a1 - 1410) | 0x120) ^ 0x864821E0) >= ((a1 - 658816563) & 0x2744BA6B ^ 0x243u))))))();
}

uint64_t sub_2482C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18)
{
  unsigned int v24 = (((&a15 ^ 0x227EE9EA) & 0x95A0AE03 | ~(&a15 ^ 0x227EE9EA | 0x95A0AE03)) ^ 0x14EF7B5B)
      * v23;
  LODWORD(a16) = v21 - v24 - 859;
  a17 = (v20 - ((v20 << (v21 - 24)) & 0xAE7A19E0) - 683864848) ^ v24;
  a15 = a11;
  (*(void (**)(uint64_t *))(v22 + 8 * (v21 ^ 0xE6A)))(&a15);
  unsigned int v25 = 628203409 * ((((2 * &a15) | 0xF1DB8CC) - &a15 + 2020680602) ^ 0x506D055);
  a16 = v18;
  a18 = a11;
  LODWORD(a15) = v21 - v25 - 149;
  a17 = (v19 ^ 0x7ADDFFFE) + ((v19 << (((v21 + 39) | 0xA) - 73)) & 0xF5BBFFFC) + v25 - 9255606;
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v22 + 8 * (v21 + 588)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((52 * (HIDWORD(a15) == -1373544826)) ^ v21)))(v26);
}

uint64_t sub_24994()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v2 - 652) ^ 0x15B ^ ((v2 - 652) | v3) ^ 0x53)
                                * ((v1 + v0 - 2042093488) < 8)) ^ v2)))();
}

uint64_t sub_249F0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((unk_A4CC0 == 0) * (a1 ^ 0xF7)) ^ v1)))();
}

uint64_t sub_24A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  STACK[0x278] = a7;
  int v39 = (LODWORD(STACK[0x3FC]) - 2018854263) & 0x78554576;
  unint64_t v40 = STACK[0x458];
  unint64_t v41 = STACK[0x430];
  unint64_t v42 = STACK[0x350];
  STACK[0x3D8] = (unint64_t)&STACK[0x670] + STACK[0x350] - 0x2CDB5D806DA9E67DLL;
  STACK[0x3D0] = a38 + v42;
  int v43 = 91 * (v39 ^ 0x557);
  int v44 = v39 - 544;
  if (v40) {
    BOOL v45 = v41 == 0;
  }
  else {
    BOOL v45 = 1;
  }
  int v46 = v45;
  return (*(uint64_t (**)(void))(v38 + 8 * ((v46 * (v43 - 538)) ^ v44)))();
}

uint64_t sub_24ADC@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v1 + 1428);
  if (v4 == 604952962 || v4 == 604952958) {
    return (*(uint64_t (**)(void))(v3
  }
                                + 8
                                * ((1932 * (*(_DWORD *)(a1 + 476) == LODWORD(STACK[0x3FC]) + 141254224)) ^ (LODWORD(STACK[0x3FC]) - 1153))))();
  STACK[0x468] = STACK[0x278];
  return v2();
}

void sub_24BD4()
{
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1353));
  JUMPOUT(0x67B8);
}

uint64_t sub_24C00@<X0>(int a1@<W8>)
{
  STACK[0x390] = v3;
  LODWORD(STACK[0x43C]) = a1;
  uint64_t v5 = (*(uint64_t (**)(unint64_t, void))(v4 + 8 * (v2 ^ 0xB6D)))(STACK[0x388], 0);
  unsigned int v6 = v1[4] + 1460018998 - ((2 * v1[4]) & 0xAE0C3E6C);
  v1[1] = ((v2 - 754) | 0x450) + 1460018998 + v1[6] - ((2 * v1[6]) & 0xAE0C3E6C) - 1360;
  v1[2] = v6;
  int v7 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v2 + 1173)))(v5);
  v1[3] = v7 + 1460018998 - ((2 * v7) & 0xAE0C3E6C);
  int v8 = (*(uint64_t (**)(void))(v4 + 8 * (v2 + 1173)))();
  *uint64_t v1 = v8 + 1460018998 - ((2 * v8) & 0xAE0C3E6C);
  return sub_24CD8();
}

uint64_t sub_24CD8()
{
  uint64_t v9 = 4 * (v4 - 1364770032);
  int v10 = (((*(_DWORD *)(v5 + 4 * (v4 - 1364770033)) >> 30) ^ 1)
       + v1
       - 4 * (*(_DWORD *)(v5 + 4 * (v4 - 1364770033)) >> 31)) ^ *(_DWORD *)(v5
                                                                                          + 4
                                                                                          * (v4 - 1364770033));
  int v11 = (*(_DWORD *)(v2 + 4 * (v3 - 843764935)) ^ v1)
      + v3
      - 843764935
      + ((v1 + 1664525 * v10 - ((3329050 * v10) & v0)) ^ *(_DWORD *)(v5 + v9));
  *(_DWORD *)(v5 + v9) = v11 + v1 - (v0 & (2 * v11));
  unint64_t v12 = STACK[0x3F0];
  *(void *)(v8 - 168) = STACK[0x3F0] ^ 0x7B9DCDD1;
  *(void *)(v8 - 184) = (v4 + 709169378) - v12;
  *(_DWORD *)(v8 - 192) = v12;
  int v13 = v6 + 1473596429 - v12;
  *(_DWORD *)(v8 - 160) = ((v6 + 1473596429) ^ 0x15) - v12;
  *(_DWORD *)(v8 - 152) = v13 - 83;
  *(_DWORD *)(v8 - 176) = 2021362417 - v12 + v6;
  *(_DWORD *)(v8 - 172) = v13;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(v7 + 8 * (v6 + 830)))(v8 - 192);
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * *(int *)(v8 - 156)))(v14);
}

uint64_t sub_24DEC@<X0>(int a1@<W0>, unsigned int a2@<W8>)
{
  return sub_13044(a1, a2);
}

void sub_25180(uint64_t a1)
{
  int v1 = 3804331 * ((a1 & 0x499EDE0F | ~(a1 | 0x499EDE0F)) ^ 0x4CFFD2A6);
  int v2 = *(_DWORD *)(a1 + 32) + v1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(_DWORD *)(a1 + 68) - v1;
  int v11 = 950047403;
  int v12 = 1372200252;
  int v13 = &v8;
  uint64_t v9 = 0x51CA1D3C38A0932CLL;
  int v10 = &v14;
  if (v3 | v4) {
    BOOL v6 = v5 == 1106882886;
  }
  else {
    BOOL v6 = 1;
  }
  char v7 = v6;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_252DC(_DWORD *a1)
{
  *((unsigned char *)a1 + v1 + ((v2 - 1444348490) & 0x76BFFFEAu) - 1633758198) = 103;
  *a1 = v1;
  return 0;
}

uint64_t sub_25368(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((200 * (((v4 == 867756946) ^ (a3 + 125)) & 1)) ^ a3)))();
}

uint64_t sub_253DC(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = **(unsigned __int8 **)(a2 + 8) + ((v4 + 772643872) & 0xD1F25F7F ^ 0xFFFFFDC9);
  return (*(uint64_t (**)(void))(v5 + 8 * ((267 * ((v3 & (2 * v6)) + (v6 ^ v2) == v2)) ^ v4)))();
}

uint64_t sub_25434@<X0>(uint64_t a1@<X8>)
{
  int v7 = (*(unsigned __int8 *)(a1 + 1128) ^ v2) - *(unsigned __int8 *)(v4 + 1148);
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * ((1772
                                              * ((v7 ^ v3) + 2061418368 + ((v7 << ((v1 + 118) ^ 0x51)) & v5) != 1784331903)) ^ v1)))(368044921);
}

void sub_254AC()
{
}

void sub_254B4(int a1@<W8>, int a2, __int16 a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,char a51,char a52,char a53)
{
  unint64_t v60 = *(unsigned int **)(v58 + 8 * (a1 ^ 0x4BB));
  uint64_t v61 = *(void *)(v58 + 8 * (a1 ^ 0x4F4));
  uint64_t v62 = *v60;
  unint64_t v63 = *(unsigned char **)(v61 - 4);
  a24 = *v63 - 43;
  a25 = v63[1] - 43;
  a26 = v63[2] - 43;
  a27 = v63[3] - 43;
  a28 = v63[4] - 43;
  a29 = v63[5] - 43;
  a30 = v63[6] - 43;
  a31 = v63[7] - 43;
  a32 = v63[8] - 43;
  a33 = v63[9] - 43;
  a34 = v63[10] - 43;
  a35 = v63[11] - 43;
  a36 = v63[12] - 43;
  a37 = v63[13] - 43;
  a38 = v63[14] - 43;
  a39 = v63[15] - 43;
  a40 = v63[16] - 43;
  a41 = v63[17] - 43;
  a42 = v63[18] - 43;
  a43 = v63[19] - 43;
  a44 = v63[20] - 43;
  a45 = v63[21] - 43;
  int v64 = *(unsigned char **)(v61 - 4);
  a46 = v64[22] - 43;
  a47 = v64[23] - 43;
  a48 = v64[24] - 43;
  a49 = v64[25] - 43;
  a50 = v64[26] - 43;
  a51 = v64[27] - 43;
  a52 = v64[28] - 43;
  a53 = v64[29] - 43;
  uint64_t v65 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v56 + 8 * (a1 + 939)))(v62, &a24, v53);
  int v72 = ((2 * v65) & 0xB3DBFBFE) + (v65 ^ 0xD9EDFDFF);
  if (v72 == -638714369)
  {
    *(_DWORD *)(v59 + 348) |= (v55 - 117) ^ 0x458;
    *(_DWORD *)(v59 + 48) = 490784367;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * (v55 ^ 0xC60)))(*v53, v59 + 336, v59 + 340, v59 + 344, v54);
    sub_34B00();
  }
  else
  {
    if (v72 == -638713267)
    {
      uint64_t v73 = *v60;
      uint64_t v74 = **(unsigned char ***)(v58 + 8 * (v55 ^ 0x4EE));
      a4 = *v74 - 77;
      a5 = v74[1] - 77;
      a6 = v74[2] - 77;
      a7 = v74[3] - 77;
      a8 = v74[4] - 77;
      a9 = v74[5] - 77;
      a10 = v74[6] - 77;
      a11 = v74[7] - 77;
      a12 = v74[8] - 77;
      a13 = v74[9] - 77;
      a14 = v74[10] - 77;
      a15 = v74[11] - 77;
      a16 = v74[12] - 77;
      a17 = v74[13] - 77;
      a18 = v74[14] - 77;
      a19 = v74[15] - 77;
      a20 = v74[16] - 77;
      a21 = v74[17] - 77;
      a22 = v74[18] - 77;
      a23 = v74[19] - 77;
      uint64_t v65 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v56 + 8 * (v55 ^ 0xCB5)))(v73, &a4, v53);
      int v75 = (2 * v65) & 0xB5F7DEFE;
      int v72 = (v65 ^ 0xDAFBEF7F) + 2112749055;
    }
    else
    {
      int v75 = 2130440063;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56
                                                                                          + 8
                                                                                          * (((v72 + v75 != 1491725694)
                                                                                            * ((v55 ^ 0x95) + 854)) ^ v57)))(v65, v66, v67, v68, v69, v70, v71);
  }
}

uint64_t sub_25864(int8x8_t a1, int8x8_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v12 = v7 - 8 + (v6 ^ (v5 + 329));
  int8x8_t v13 = vrev64_s8(*(int8x8_t *)(v9 + v12));
  *(int8x8_t *)(a4 + v12) = vrev64_s8(vadd_s8(vsub_s8(v13, vand_s8(vadd_s8(v13, v13), a1)), a2));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v8 == -8) * v10) ^ a5)))();
}

uint64_t sub_25870(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  STACK[0x4B0] = a1;
  LODWORD(STACK[0x4F4]) = v36;
  unint64_t v38 = STACK[0x440];
  STACK[0x498] = 335;
  *(unsigned char *)(v38 + 335) = ((a35 - 2) ^ 0xBA) * (a35 + 15);
  return (*(uint64_t (**)(void))(v37
                              + 8
                              * (((8 * (STACK[0x498] != 0)) | (16 * (STACK[0x498] != 0))) ^ (4 * ((v35 - 295) ^ 0x4FB)))))();
}

uint64_t sub_25910()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v0 + 738)))();
  LODWORD(STACK[0x5CC]) = v1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8 * ((((v0 - 477) ^ 0x3A6) * v2) ^ (v0 + 512))))(v4, 249, 1373504863);
}

uint64_t sub_2595C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v10 = *v9 - 1061210124;
  int v11 = (v7 - 1061210124 < -1836493520) ^ (v10 < ((a7 - 316) | 0x122) - 1836494346);
  BOOL v12 = v7 - 1061210124 > v10;
  if (v11) {
    BOOL v13 = v7 - 1061210124 < -1836493520;
  }
  else {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (((4 * v13) | (32 * v13)) ^ a7)))();
}

uint64_t sub_259C8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*v3 + 4 * (a1 + v7)) = *(_DWORD *)(*v4 + 4 * (a1 + v7));
  return (*(uint64_t (**)(void))(a2 + 8 * (((v6 + a1 != v2) * v8) ^ v5)))();
}

void sub_259D0()
{
  unint64_t v3 = STACK[0x5E8];
  unsigned int v4 = 628203409 * ((((2 * v1) | 0xBDDF856C) - v1 + 554712394) ^ 0x5C67CE85);
  *(_DWORD *)(v2 - 192) = v0 + 1172345424 + v4 + 8;
  *(_DWORD *)(v2 - 184) = v4 - 290923570;
  *(void *)(v2 - 176) = v3;
  JUMPOUT(0x25A40);
}

uint64_t sub_25A74@<X0>(int a1@<W2>, unint64_t a2@<X8>)
{
  STACK[0x628] = v4;
  LODWORD(STACK[0x634]) = v2;
  STACK[0x488] = a2;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((252
                                * (v2
                                 + ((v3 - 1446175911) & 0x5632E2DF ^ 0xA370DEE2)
                                 + (((v3 ^ 0xF2) - 1084) & (2 * *(_DWORD *)(v4 - 0x843828D0CDF33E9)) ^ 0xC)
                                 + (*(_DWORD *)(v4 - 0x843828D0CDF33E9) & 0x3F ^ (a1 + 4)) > 0xFFFFFFBF)) ^ v3)))();
}

uint64_t sub_25B10()
{
  STACK[0x468] = STACK[0x350];
  return ((uint64_t (*)(void))STACK[0x390])();
}

void sub_25B28()
{
}

uint64_t sub_25B34(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (v2 + 445878254) & 0xE56C69DF;
  uint64_t v5 = (*(uint64_t (**)(void, uint64_t, void))(v3 + 8 * (v2 + 500)))(*(unsigned int *)STACK[0x2B8], a2, LODWORD(STACK[0x470]));
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (int)(((LODWORD(STACK[0x5CC]) == (((v4 - 77) | 0x208) ^ 0xAE215C9E))
                                                   * ((v4 + 18) ^ 0xEE)) ^ v4)))(v5);
}

void sub_25BB8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 40) ^ (1759421093 * ((-746607788 - (a1 | 0xD37FAB54) + (a1 | 0x2C8054AB)) ^ 0x9FFDE4FF));
  __asm { BRAA            X9, X17 }
}

uint64_t sub_25CE4@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v4 - 1582647308)) = *(unsigned char *)(v3 + (v4 - 1582647308)) - 108;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1567 * ((a2 ^ 0x607) + v4 - 1996 == a3)) ^ a2)))();
}

uint64_t sub_25D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_OWORD *)(a4 + v7) = *v5;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 == 0) * v6) ^ v4)))();
}

void sub_25D58()
{
}

uint64_t sub_25D64()
{
  int v4 = *(_DWORD *)(v1 + 52) + 1335741915;
  int v5 = 1759421093 * ((((2 * (v3 - 192)) | 0xD19EEED6) - (v3 - 192) - 1758426987) ^ 0xDBB2C73F);
  *(void *)(v3 - 192) = v1 + 0x1B326768DCF9E3CELL;
  int v6 = LODWORD(STACK[0x288]) ^ v5;
  *(_DWORD *)(v3 - 184) = v0 - v5 - 95;
  *(_DWORD *)(v3 - 180) = v6;
  int v7 = LODWORD(STACK[0x2D0]) - v5 - 1089889616;
  *(void *)(v3 - 152) = STACK[0x338];
  *(_DWORD *)(v3 - 160) = v7;
  *(_DWORD *)(v3 - 168) = v4 ^ v5;
  *(void *)(v3 - 176) = &STACK[0x660];
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 2124)))(v3 - 192);
  int v9 = *(_DWORD *)(v3 - 164);
  LODWORD(STACK[0x5B4]) = v9;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((1321 * (v9 == ((16 * v0) ^ 0x5CF) - 1373545657)) ^ v0)))(v8);
}

uint64_t sub_25E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v29 = v22 + 1;
  int v30 = (*v26 - 575680361) * (v27 ^ 0x1B21A955 ^ *(_DWORD *)(a18 + 4 * (v29 - 414666719)));
  int v31 = 1225351577 * ((v23 + v25 - 2 * (v23 & v25)) ^ 0x7986CD05);
  *(void *)(v28 - 120) = a13;
  *(void *)(v28 - 112) = a14;
  *(_DWORD *)(v28 - 104) = v31 + v29 + 957533533;
  *(_DWORD *)(v28 - 128) = (v30 ^ 0xF4FFFED2) - v31 + ((2 * v30) & 0xE9FFFDA4) + 2144733696;
  *(_DWORD *)(v28 - 124) = v31 + v24 - 196;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v20 + 8 * v19))(v28 - 128);
  BOOL v34 = v29 - 1570050566 > 992099799 || v29 - 1570050566 < v18;
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((v34 * v21) ^ v24)))(v32);
}

uint64_t sub_25E78@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  va_start(va, a2);
  BOOL v5 = (*(uint64_t (**)(void, char *, void, uint64_t))(v3 + 8 * (int)(v4 + 218)))(**(unsigned int **)(v2 + 8 * (int)(v4 - 1793)), va, (((a1 - 540034060) << ((v4 + 67) & 0x9F ^ 0x8E)) & 0xAEB3A000)+ ((((v4 - 837429437) ^ 0xCE15DCD7) + 1465506759) ^ (a1 - 540034060) & 0xFFFFF000)- 1465507327, 1) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((27 * v5) ^ v4)))();
}

void sub_25F24()
{
}

uint64_t sub_25F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * ((1892
                                * (((v22 - 14) ^ 0x68071083) + a22 - *(_DWORD *)(a2 + 4) == ((49 * (v22 ^ 0x2DF)) ^ 0xB02C043C))) ^ v22)))();
}

uint64_t sub_25F88@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((469 * (v2 != ((a1 + 1751565868) & 0x979939BF ^ (v1 - 173)))) ^ a1)))();
}

uint64_t sub_25FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v20 = a18 - 1372200252;
  if (a18 - 1372200252 < 0) {
    int v20 = 1372200252 - a18;
  }
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((1016
                                * ((int)((v20 ^ 0x75DB7DFC) + ((v20 << (v18 + 12)) & 0xEBB6FBF8) - 1977318909) > v18 - 758)) ^ (v18 + 571))))();
}

uint64_t sub_26064(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16)
{
  uint64_t v27 = v22 - 16 + ((a14 + 229) ^ (v16 + 1203));
  uint64_t v28 = ((_BYTE)v22 - 16 + ((a14 - 27) ^ (v16 - 77))) & 0xF;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v24).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v24).u64[0];
  int8x16_t v31 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a15 + v27), *(int8x16_t *)(v18 + (v27 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v17 + (v27 & 0xF) - 15), *(int8x16_t *)(v19 + (v27 & 0xF) - 15))));
  int8x16_t v32 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v31, v31, 8uLL), v26), vmulq_s8(v30, v25)));
  *(int8x16_t *)(a15 + v27) = vextq_s8(v32, v32, 8uLL);
  return (*(uint64_t (**)(void))(v23 + 8 * (((v20 == 16) * v21) ^ a14)))();
}

uint64_t sub_26070@<X0>(int a1@<W8>)
{
  *int v7 = (v2 + (a1 ^ 0x308) - 727) ^ v10;
  int v5 = a1 ^ 0x74B;
  uint64_t v13 = v9;
  unsigned int v12 = (a1 ^ 0x308)
      + ((((2 * v11) | 0xE8105D64) - v11 + 200790350) ^ 0xFEFC209D) * v4
      + 1304;
  (*(void (**)(unsigned char *))(v3 + 8 * (a1 ^ 0x9E4)))(v11);
  unsigned int v12 = v5 + ((v11 + 749825941 - 2 * ((unint64_t)v11 & 0x2CB16F95)) ^ 0x264561BA) * v4 + 347;
  uint64_t v13 = v8;
  (*(void (**)(unsigned char *))(v3 + 8 * (v5 + 423)))(v11);
  return v1 ^ v2;
}

uint64_t sub_26184(int a1)
{
  return sub_13488(a1);
}

uint64_t sub_26194@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W6>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,char a30)
{
  BOOL v36 = v31 < a3;
  *(&a30 + (a1 + a5 + 294)) = *(unsigned char *)(v35 + (v30 + a2))
                                          - ((2 * *(unsigned char *)(v35 + (v30 + a2))) & 0xCA)
                                          - 27;
  unsigned int v37 = a4 + v30 + 1;
  int v38 = v36 ^ (v37 < a3);
  BOOL v39 = v37 < v31;
  if (!v38) {
    BOOL v36 = v39;
  }
  return (*(uint64_t (**)(void))(v34 + 8 * ((!v36 * v32) ^ v33)))();
}

uint64_t sub_262A0()
{
  BOOL v2 = ((LODWORD(STACK[0x42C]) - 1284426096) ^ 0x6F9DB6D6BF7FEF9FLL)
     - 0x6F9DB6D68E5436E8
     + (((unint64_t)(LODWORD(STACK[0x42C]) - 1284426096) << ((v0 + 99) ^ 0x73)) & (v0 ^ 0x17EFFDA31)) == 824948919;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(((4 * v2) | (32 * v2)) ^ v0)))();
}

uint64_t sub_26338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((LODWORD(STACK[0x3A0]) - 588221694 != ((v7 - 210) ^ 0xFF4CBF)) * a7) ^ (v7 + 1057))))();
}

void sub_26380()
{
}

uint64_t sub_2639C@<X0>(int a1@<W8>)
{
  STACK[0x3A0] = *v1;
  return sub_329A0(a1);
}

uint64_t sub_263C8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((2 * (((v0 - 819) | 0x41) ^ 0x1D0)) ^ 0x5BA) * (v1 == 1321678224)) ^ v0)))();
}

uint64_t sub_26410()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1016 * (v1 - 1 > v2)) ^ v0)))();
}

uint64_t sub_26440@<X0>(int a1@<W8>)
{
  *int v1 = STACK[0x490];
  v1[85] = STACK[0x450];
  v1[86] = STACK[0x484];
  v1[87] = STACK[0x414];
  v1[88] = STACK[0x59C];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((STACK[0x580] != 0) * (((((a1 - 1683870514) & 0x645DD7D4) - 1267) ^ 0x6D2) - 1469)) ^ (((a1 - 1683870514) & 0x645DD7D4) + 527))))();
}

uint64_t sub_264B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  *(void *)(a5 + (a7 + v9)) = *(void *)(a4 + (a7 + v9));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v10 == 0) * a3) ^ a8)))();
}

uint64_t sub_264E4@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x43C]) = 0;
  int v6 = LODWORD(STACK[0x43C])++;
  _DWORD *v3 = v6 + 24759839;
  unint64_t v7 = 235795823 * ((0xBF3B0C47DB65F523 - (v2 | 0xBF3B0C47DB65F523) + STACK[0x2D8]) ^ 0x48744946B0374385);
  *(void *)(v5 - 184) = (*v1 - 2064070796) ^ v7;
  *(void *)(v5 - 168) = v7 + 3748483488u;
  int v8 = v7 ^ (a1 - 169753647);
  *(_DWORD *)(v5 - 176) = v7 + a1 + 2104631030;
  *(_DWORD *)(v5 - 152) = v8 ^ 0x11;
  *(_DWORD *)(v5 - 148) = a1 - 169753647 + v7;
  *(_DWORD *)(v5 - 160) = v7 + 1;
  *(_DWORD *)(v5 - 156) = v8 ^ 0x49;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (a1 + 809)))(v5 - 192);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v5 - 192)))(v9);
}

uint64_t sub_264EC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((*(_DWORD *)(*a6 + 4 * (a2 + v8 + 1 + 1317)) != v6)
                                * (((22 * (v9 ^ 0x51F) - 519868207) & 0x1EFC8E6F) - 619)) | v9)))();
}

void sub_264F8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((2 * (a1 & 0x5E99CC2A) - a1 - 1587137579) ^ 0xAB923DFA);
  if (*(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7) - 1372200252 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7) - 1372200252;
  }
  else {
    unsigned int v3 = 1372200252 - *(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7);
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x67843F9A1244BAC7) - 1372200252 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0x67843F9A1244BAC7) - 1372200252;
  }
  else {
    unsigned int v4 = 1372200252 - *(_DWORD *)(v2 - 0x67843F9A1244BAC7);
  }
  uint64_t v8 = *(void *)a1;
  unsigned int v7 = v1 + 535753261 * (((~&v7 & 0xF9B5D77A) - (~&v7 | 0xF9B5D77B)) ^ 0xF341D954) + 248;
  uint64_t v5 = (char *)*(&off_99820 + (v1 ^ 0x4A7)) - 4;
  (*(void (**)(unsigned int *))&v5[8 * (v1 ^ 0xCB5)])(&v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X13, X17 }
}

uint64_t sub_26690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, uint64_t a16, int a17, unsigned int a18, unint64_t *a19)
{
  unsigned int v22 = 1759421093 * ((2 * (&a14 & 0x7DEFB770) - &a14 + 34621583) ^ 0xB16DF8DB);
  a19 = &STACK[0x4CAF57822185BFA9];
  a16 = a10;
  a14 = 1036168093 - v22;
  a17 = v22 ^ 0x6E57E88A;
  a18 = v22 + v19 + 2138962793;
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v21 + 8 * (v19 ^ 0xA63u)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (((((v19 - 92) ^ (a15 == v20)) & 1) * ((v19 - 343) ^ 0xAB)) ^ v19)))(v23);
}

uint64_t sub_2678C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13)
{
  return sub_267F8(220, 110, 1610590544, 25, (*(_DWORD *)(a13 + 24) + a11), -1098794543, 202, 13);
}

uint64_t sub_267F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * ((((a1 & (2 * a52) ^ 0xE) + (a52 & 0x3F ^ 0xBC9FDEF8) + 1130373325 > 0xFFFFFFBF) * (int)a3) ^ (v53 + 389))))(3164593910, a1, a2, a3, 1130371624, a4, a5, a6, a8, a9, a10, a11, a12, a13, *(void *)(v52 + 8 * a7), a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

void sub_268CC()
{
}

uint64_t sub_26990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31)
{
  unsigned int v34 = 628203409 * (((&a24 | 0x561E2EB9) - (&a24 & 0x561E2EB9)) ^ 0xD496228A);
  a28 = a17;
  a30 = a23;
  a26 = v31 - v34 + 907;
  a27 = -643092388 - v34 + (v31 ^ 0x239) + a22 - 168;
  a31 = a15;
  a24 = a16;
  a25 = a14;
  uint64_t v35 = (*(uint64_t (**)(uint64_t *))(v32 + 8 * (v31 + 1452)))(&a24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                                  + 8 * (((a29 != -1373544826) * ((v31 - 800833234) & 0x2FBBBEDF ^ 0x2CC)) ^ v31)))(v35, v33, 4143985707, 3146710353, 1435407688, 132026824, 1284425797);
}

void sub_26AB8()
{
}

uint64_t sub_26B4C()
{
  *(void *)(v1 + 8 + (((v0 - 1314) | 0x204u) ^ (unint64_t)(v3 - 420))) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((340 * (v2 == 8)) ^ v0)))();
}

void sub_26B58()
{
  LODWORD(STACK[0x400]) = 1284426096;
  JUMPOUT(0x25894);
}

uint64_t sub_26B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26)
{
  return sub_26B98(a1, a26);
}

uint64_t sub_26B98(uint64_t a1, int a2)
{
  return sub_19F38(((a2 - 92360787) ^ 0x7BF3ADC7) - 42141764 + ((2 * (a2 - 92360787)) & 0xF7E75B8E));
}

uint64_t sub_26C74()
{
  *uint64_t v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_26C98@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v6 = v3 + (a2 + 1055) - 1361;
  STACK[0x5D0] = v6;
  *(unsigned char *)(a1 + v6) = ((v2 - 102) ^ v4) * (v2 - 85);
  return (*(uint64_t (**)(void))(v5 + 8 * (((2 * (STACK[0x5D0] == 0)) | (4 * (STACK[0x5D0] == 0))) ^ a2)))();
}

uint64_t sub_26CE4()
{
  int v4 = 628203409 * ((v3 - 192) ^ 0x82880C33);
  *(_DWORD *)(v3 - 176) = v1 - v4 + 1253;
  *(_DWORD *)(v3 - 172) = v0 - v4 - 643092311;
  unint64_t v5 = STACK[0x360];
  unint64_t v6 = STACK[0x358];
  *(void *)(v3 - 192) = STACK[0x368];
  *(void *)(v3 - 184) = v6;
  *(void *)(v3 - 152) = STACK[0x3A0];
  *(void *)(v3 - 144) = v5;
  *(void *)(v3 - 168) = STACK[0x370];
  (*(void (**)(uint64_t))(v2 + 8 * (v1 + 1798)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v2 + 8 * (((*(_DWORD *)(v3 - 160) == -1373544826) * (((v1 ^ 0x437) + 11) ^ 0x697)) ^ v1)))(160, 19, 1373504863, 1, 44, 90, 1232, 2173439218, (__n128)0);
}

uint64_t sub_26DC0(double a1)
{
  *(double *)(v2 + v4) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((30 * (v3 != v4)) ^ v1)))();
}

uint64_t sub_26DE8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 24);
  return 0;
}

uint64_t sub_26E00(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  unint64_t v35 = ((v33 + 422) ^ (v27 + 1220) ^ *(_DWORD *)(a27 + 4 * (v31 + 1 + v29)))
      + HIDWORD(v32)
      + v34 * (unint64_t)(*(_DWORD *)(*a1 + 4 * (v31 + 1 + v29)) ^ v27);
  *(_DWORD *)(a27 + 4 * (v31 + v29)) = v35 + v27 - (v28 & (2 * v35));
  BOOL v37 = v31 + a6 > a7 || v31 + a6 < a2;
  return (*(uint64_t (**)(void))(v30 + 8 * ((v37 * a8) ^ v33)))();
}

void sub_26E74()
{
  uint64_t v0 = __chkstk_darwin();
  int v1 = *(_DWORD *)(v0 + 16) ^ (3804331 * (v0 ^ 0xFA9EF356));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_26FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unsigned int v31 = v26 + v27 + 1078493763;
  if (v31 <= 0x40) {
    int v32 = 64;
  }
  else {
    int v32 = v31;
  }
  BOOL v33 = __CFADD__(v31 - 1, a1 - 1078495680 + v29 + ((v28 - 1916) | 0x63) + v32 + 1690);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((v33 * (((2 * v28) ^ 0xD12) - 743)) | v28)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_27040(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((437 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x6C2)))();
}

uint64_t sub_27090()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((v0 - 1185) ^ 0xAC2)))(32, 0x101004023FF3BD5) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((391 * ((v2 ^ (v0 - 74)) & 1)) ^ (v0 - 1185))))();
}

uint64_t sub_270F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_384BC(a1, 4076963439, 107, a4, 70);
}

uint64_t sub_2710C()
{
  return (*(uint64_t (**)(unint64_t))(v0 + 8 * (LODWORD(STACK[0x3FC]) + 614)))(STACK[0x3C8]);
}

uint64_t sub_27160()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 != v2 + (v1 ^ 0x18D) - 72613831) * (v1 - 1213)) ^ v1)))();
}

uint64_t sub_27198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((15 * (v8 == ((((v9 ^ a8) + 1) | 8) + 94))) | v9 ^ a8)))();
}

uint64_t sub_271C8@<X0>(int a1@<W2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a1 ^ (201 * ((unint64_t)(a3 - a2 - 1452) > 0x1F)))))();
}

void sub_27200()
{
}

uint64_t sub_27208@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  int v56 = *(_DWORD *)(&a39 + (v53 ^ v52 ^ a2) + v54 + 72);
  *(unsigned char *)(a1 + (v53 ^ v52 ^ a2) + v54) = v56 ^ 0x8F;
  int v57 = a2 + v54;
  *(unsigned char *)(a1 + (v57 + 34)) = (BYTE1(v56) ^ 0x73) - ((2 * (BYTE1(v56) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a1 + (v57 + 35)) = (BYTE2(v56) ^ 0x2D) - ((2 * (BYTE2(v56) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a1 + (v57 + 36)) = (HIBYTE(v56) ^ 0x52) - ((2 * (HIBYTE(v56) ^ 0x52)) & 0xCA) - 27;
  BOOL v58 = v54 + 374188180 < (a51 - 751752151);
  if (v54 + 374188180 < v51 != a51 - 751752151 < v51) {
    BOOL v58 = a51 - 751752151 < v51;
  }
  return (*(uint64_t (**)(void))(v55 + 8 * (v53 ^ (2 * !v58))))();
}

uint64_t sub_272DC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((14 * (v2 < 0x4DCEC6D6)) ^ (v0 - 1174668212))))();
}

uint64_t sub_27338(int a1)
{
  *(_DWORD *)(*v3 + 4 * (a1 + v1 + 1)) = v2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 + v1 < v6) * v5) ^ v4)))((a1 - 1));
}

uint64_t sub_27368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  LODWORD(STACK[0x450]) = 70636353;
  LODWORD(STACK[0x494]) = 128;
  int v56 = 3804331 * (((v55 - 192) & 0x436B6990 | ~((v55 - 192) | 0x436B6990)) ^ 0x460A6539);
  *(void *)(v55 - 176) = v53;
  *(void *)(v55 - 168) = a43;
  *(void *)(v55 - 144) = 0;
  *(void *)(v55 - 136) = a52;
  *(_DWORD *)(v55 - 160) = v52 - v56 + 1215;
  *(_DWORD *)(v55 - 124) = v56 + 1106883014;
  *(void *)(v55 - 192) = v53 + 0x67843F9A1244BE6BLL;
  *(void *)(v55 - 184) = 0;
  *(void *)(v55 - 152) = v53 + 0x67843F9A1244BD5BLL;
  uint64_t v57 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (v52 ^ 0x92C)))(v55 - 192);
  return (*(uint64_t (**)(uint64_t))(v54
                                            + 8
                                            * (int)(((*(_DWORD *)(v55 - 128) == -1373544826)
                                                   * ((v52 + 2120928760) & 0x819535FC ^ (v52 - 155990397) & 0x94C3AFF ^ 0x40B)) ^ v52)))(v57);
}

uint64_t sub_27498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = v18 - 1541;
  int v21 = 535753261 * ((((v19 - 136) | 0xE24C4B28) - ((v19 - 136) & 0xE24C4B28)) ^ 0xE8B84507);
  *(_DWORD *)(v19 - 128) = v21 + 1640731306;
  *(_DWORD *)(v19 - 124) = v21 + v20 + 607;
  *(void *)(v19 - 136) = v17;
  (*(void (**)(uint64_t))(v16 + 8 * (v20 + 1588)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = (v20 + 778) ^ (1734042137
                                        * ((((v19 - 136) | 0x40015D88) - ((v19 - 136) & 0x40015D88)) ^ 0x1CCF9EC5));
  *(void *)(v19 - 136) = a14;
  *(void *)(v19 - 128) = a13;
  (*(void (**)(uint64_t))(v16 + 8 * (v20 + 1445)))(v19 - 136);
  *(_DWORD *)(v19 - 136) = (v20 + 490) ^ (((~((v19 - 136) | 0x864C299C) + ((v19 - 136) & 0x864C299C)) ^ 0x1447CE6A) * v14);
  *(void *)(v19 - 128) = v17;
  *(void *)(v19 - 120) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v20 + 1519)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((((v20 + 89) ^ (*(_DWORD *)(v19 - 132) > v15)) & 1)
                                              * (((v20 + 1113) ^ 0x5B9) - 572)) ^ v20)))(v22);
}

uint64_t sub_275F8@<X0>(uint64_t a1@<X4>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  unint64_t v5 = (((v2 - 1634) | 2u) ^ (unint64_t)(a1 - 162)) + a2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((77 * (((125 * (v2 ^ 6)) ^ (v5 - v4 + 726900810 < 8)) & 1)) ^ v2)))();
}

uint64_t sub_27668()
{
  int v3 = v1 - (((v1 << (((v2 + 112) | 0x82) ^ 0xCA)) + 1726115104) & 0x514E7D16) + 1545106715;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((56
                                * (((2 * v3) & 0xFCFE9A36 ^ 0x504E1816) + ((v2 + 297) ^ 0xD6D87B92 ^ v3) - 539624720 == 1582647307)) ^ v2)))();
}

uint64_t sub_2770C(int8x16_t a1, int8x16_t a2, double a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int32x4_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, int a14)
{
  a2.i64[0] = *(void *)(v16 + 4);
  a2.i32[2] = *(_DWORD *)(v16 + 12);
  int8x16_t v21 = vextq_s8(a1, a2, 0xCuLL);
  int8x16_t v22 = a2;
  v22.i32[3] = *(_DWORD *)(v16 + 16);
  int32x4_t v23 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v22, a5), vandq_s8(v21, v19)), 1uLL), a6);
  v24.i32[0] = *(_DWORD *)(v18 + 4 * (*(_DWORD *)(v16 + 4) & 1));
  v24.i32[1] = *(_DWORD *)(v18 + 4 * (*(_DWORD *)(v16 + 8) & (((v14 + a12) & a13) - 895)));
  v24.i32[2] = *(_DWORD *)(v18 + 4 * (*(_DWORD *)(v16 + 12) & 1));
  v24.i32[3] = *(_DWORD *)(v18 + 4 * (v22.i8[12] & 1));
  *(int8x16_t *)uint64_t v16 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v16 - 908), v24), v20), (int8x16_t)vaddq_s32(vsubq_s32(v23, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v23, v23), a7)), a8));
  return (*(uint64_t (**)(void))(v17 + 8 * (((v15 == 4) * a14) ^ v14)))();
}

uint64_t sub_27718()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1410 * (v1 + v3 + (v0 ^ 0x337u) + 905 - 1088 < 0x7FFFFFFF)) ^ v0)))();
}

uint64_t sub_27754()
{
  return sub_27760();
}

uint64_t sub_27760(int8x16_t a1, double a2, double a3, int8x16_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12)
{
  int8x16_t v18 = *(int8x16_t *)(v17 + (v12 + a6 + v13));
  *(int8x16_t *)(a12 + v13) = vaddq_s8(vsubq_s8(v18, vandq_s8(vaddq_s8(v18, v18), a4)), a1);
  return (*(uint64_t (**)(void))(v16 + 8 * (((v13 == 48) * v15) ^ (a10 + v14 - 517))))();
}

void sub_277A8()
{
  *(_DWORD *)(v0 + 4) = *(_DWORD *)(v1 - 0x7761D79CB8DF4CFBLL);
}

void sub_27810()
{
}

void sub_2787C()
{
}

uint64_t sub_27884(_DWORD *a1)
{
  unsigned int v1 = 460628867 * ((2 * (a1 & 0x1FF5D3B4) - a1 - 536204213) ^ 0xAC9CAE36);
  unsigned int v2 = a1[4] - v1;
  unsigned int v3 = v1 + *a1;
  unsigned int v5 = v3 - 774089199;
  BOOL v4 = (int)(v3 - 774089199) < 0;
  LODWORD(v6) = 774089199 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_99820 + (int)(v2 - 579))
                              + 8 * (int)(((v6 == ((2 * v6) & 0x749AFE04)) * ((v2 + 19) ^ 0x2DB)) ^ v2)
                              - 4))();
}

uint64_t sub_27940@<X0>(int a1@<W0>, int a2@<W2>, uint64_t a3@<X8>)
{
  int v9 = v4 & 7;
  int v10 = v5 + v4;
  *(void *)(v3 - 7 + (v10 + v6 - a1)) = *(void *)(a3 - 7 + (v10 + v6 - a1));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v10 + v7 - a1 - v9 == 8) * (a2 ^ 0x5B3)) ^ a2)))();
}

void sub_279A8()
{
}

uint64_t sub_279BC()
{
  *uint64_t v0 = 1373504863;
  return sub_279C8();
}

uint64_t sub_27A04@<X0>(unsigned int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, void *a5@<X6>, int a6@<W7>, unint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v39 = 4 * (v35 + 1 + a4);
  unint64_t v40 = (*(_DWORD *)(a24 + v39) ^ v24) + (a2 ^ HIDWORD(v34)) + a1 * (unint64_t)(*(_DWORD *)(*a5 + v39) ^ v24);
  unint64_t v41 = HIDWORD(a7)
      + v31 * (unint64_t)(*(_DWORD *)(*v36 + v39) ^ v24)
      + ((v40 + v29 - ((((v38 ^ v33) * v28) ^ v30) & (2 * v40))) ^ a3);
  *(_DWORD *)(a24 + 4 * (v35 + a4)) = v41 + v24 - (v25 & (2 * v41));
  BOOL v43 = v35 + v26 > a6 || v35 + v26 < v37;
  return (*(uint64_t (**)(void))(v32 + 8 * ((v43 * v27) ^ v38)))();
}

uint64_t sub_27AA4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((500
                                * (((v3 - 102) ^ ((v1 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                                                 + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ (v0 + ((v3 - 728955884) & 0x2B72FF7F) - 1663)) == v0)) & 1)) ^ v3)))();
}

void sub_27B14()
{
}

uint64_t sub_27B7C(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((14 * (*(_DWORD *)(*v4 + 4 * a2) != v3 + ((v5 - 24) | 0x26) - 191)) ^ v5)))();
}

uint64_t sub_27BC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v13 = (v10 + v6 - v8 + 75);
  int8x8_t v14 = vrev64_s8(*(int8x8_t *)(v5 - 7 + v13));
  *(int8x8_t *)(v4 - 7 + v13) = vrev64_s8(vadd_s8(vsub_s8(v14, vand_s8(vadd_s8(v14, v14), v11)), v12));
  return (*(uint64_t (**)(void))(v9 + 8 * ((1720 * ((a4 ^ 0x364) + v8 == (v7 & 0xFFFFFFF8))) ^ a4)))(v6 - (v7 & 0xFFFFFFF8));
}

uint64_t sub_27C28@<X0>(int a1@<W0>, unsigned int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(v4 + a1 + v9 + ((v6 - 1733) | a2)) = *(unsigned char *)(v5 + a1 + v9 + ((v6 - 1733) | a2))
                                                - (v7 & (2 * *(unsigned char *)(v5 + a1 + v9 + ((v6 - 1733) | a2))))
                                                - 27;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 - 1 == a4) * a3) ^ v6)))();
}

uint64_t sub_27C6C(int a1, uint64_t a2, int a3)
{
  unsigned int v7 = v4 + 50331659;
  if (v7 <= 0x40) {
    unsigned int v7 = 64;
  }
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((a3 - v3 - a1 + v7 >= (v5 ^ 0x75Au) - 1466)
                                     * (((v5 + 1780464443) & 0x95E047F7) - 1093)) ^ v5)))();
}

uint64_t sub_27D3C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((15 * (a2 + v2 + ((v3 + 1763163494) & 0x96E8454D ^ 0x86482519) < 3 * (v3 ^ 0xF0) - 1831)) ^ v3)))();
}

void sub_27DA8(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_27E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v16 - 112) = a12;
  *(_DWORD *)(v16 - 120) = v15
                         + 1220
                         + 535753261 * ((((2 * (v16 - 120)) | 0xDEE4908E) - (v16 - 120) - 1869760583) ^ 0x65864668);
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x8F9)))(v16 - 120);
  *(_DWORD *)(v16 - 120) = v15 + 1220 + 535753261 * ((v16 - 106022399 - 2 * ((v16 - 120) & 0xF9AE3A79)) ^ 0xF35A3456);
  *(void *)(v16 - 112) = a13;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x8F9)))(v16 - 120);
  *(_DWORD *)(v16 - 104) = (v15 + 1239) ^ (1734042137
                                         * ((((v16 - 120) | 0xCBD4BC66) - (v16 - 120) + ((v16 - 120) & 0x342B4398)) ^ 0x971A7F2B));
  *(void *)(v16 - 120) = v13;
  *(void *)(v16 - 112) = a13;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 ^ 0x796)))(v16 - 120);
  return sub_27F64(v17);
}

uint64_t sub_27FA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v15 = v14 + a3 + v13 - a7 + ((a8 + 1315) ^ (v10 + 1644));
  *(void *)(v11 - 7 + v15) = *(void *)(v9 - 7 + v15);
  return (*(uint64_t (**)(void))(v8 + 8 * ((1480 * (a7 - (v12 & 0xFFFFFFF8) == -8)) ^ a8)))();
}

uint64_t sub_28000@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (char *)*(&off_99820 + v9 - 911) - 4;
  int v12 = v11[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E3A9) ^ 0x85];
  unsigned int v13 = (v9 + 618974189) & 0xDB1B37F7;
  HIDWORD(v14) = v13 ^ v12 ^ 2;
  LODWORD(v14) = (v12 ^ 0x40) << 24;
  int v15 = ((v14 >> 30) ^ 0x9F) << 16;
  uint64_t v16 = (char *)*(&off_99820 + v9 - 867) - 12;
  int v17 = v16[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E39FLL) ^ 0xBFLL];
  HIDWORD(v14) = v17 ^ 5;
  LODWORD(v14) = (v17 ^ 0x10) << 24;
  LOBYTE(v17) = v14 >> 28;
  uint64_t v18 = *(unsigned __int8 *)(v8 - 0x1B326768DCF9E3A5);
  *(_DWORD *)(v10 - 128) = v6;
  LODWORD(v18) = v11[v18 ^ 0x6F];
  HIDWORD(v14) = v18 ^ 0x10;
  LODWORD(v14) = (v18 ^ 0x40) << 24;
  int8x16_t v19 = (char *)*(&off_99820 + (v9 ^ 0x3BD)) - 4;
  int v20 = v17 | ((v19[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E3A0) ^ 0xB7] ^ 0x4A) << 8);
  int8x16_t v21 = (char *)*(&off_99820 + (v9 ^ 0x3AD)) - 8;
  char v22 = v21[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E39ELL) ^ 0xD8];
  unint64_t v23 = ((v19[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E39CLL) ^ 0xC7] ^ 0xAALL) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v22 ^ 0x85u) << 24);
  int v24 = (((v14 >> 30) ^ 0x68) << 16) | ((v19[*(unsigned __int8 *)(v8
                                                                                                  - 0x1B326768DCF9E3A4) ^ 0xDFLL] ^ 0x6B) << 8);
  int v25 = v16[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E39BLL) ^ 0xBCLL];
  HIDWORD(v14) = v25 ^ 5;
  LODWORD(v14) = (v25 ^ 0x10) << 24;
  unsigned __int8 v26 = v14 >> 28;
  uint64_t v27 = v26 ^ 0x68;
  int v28 = v16[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E3A3) ^ 0x98];
  HIDWORD(v14) = v28 ^ 5;
  LODWORD(v14) = (v28 ^ 0x10) << 24;
  unsigned int v29 = v24 & 0xFFFFFF00 | ((v21[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E3A6) ^ 0xAFLL] ^ 0x55555555) << 24) | (v14 >> 28);
  LODWORD(v16) = v16[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E3A7) ^ 0xD0];
  HIDWORD(v14) = v16 ^ 5;
  LODWORD(v14) = (v16 ^ 0x10) << 24;
  int v30 = v11[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E39DLL) ^ 0xB6];
  LOBYTE(v16) = (v14 >> 28) ^ 0x3C;
  HIDWORD(v14) = v30 ^ 0x10;
  LODWORD(v14) = (v30 ^ 0x40) << 24;
  unsigned int v31 = v15 & 0xFFFFFF00 | ((v19[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E3A8) ^ 0x49] ^ 0xE1) << 8) | ((v21[*v7 ^ 0xFELL] ^ 0x8C) << 24) | v16;
  uint64_t v32 = (v14 >> 30) ^ 0x21;
  int v33 = v11[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E3A1) ^ 0xC8];
  HIDWORD(v14) = v33 ^ 0x10;
  LODWORD(v14) = (v33 ^ 0x40) << 24;
  unint64_t v34 = (v23 | (v32 << 16) | v27) ^ 0x75F49EF4;
  unsigned int v35 = v20 & 0xFF00FFFF | (((v14 >> 30) ^ 0x37) << 16) | ((v21[*(unsigned __int8 *)(v8 - 0x1B326768DCF9E3A2) ^ 0x18] ^ 0xCA) << 24);
  BOOL v36 = (char *)*(&off_99820 + (v9 ^ 0x3D8)) - 8;
  int v37 = (((unsigned __int16)((v23 | v27) ^ 0x9EF4) >> 8) - ((2 * (v34 >> 8)) & 0x1A8) - 269957164) ^ *(_DWORD *)&v36[4 * (((unsigned __int16)((v23 | v27) ^ 0x9EF4) >> 8) ^ 0xF5)];
  int v38 = (char *)*(&off_99820 + (v9 ^ 0x37D)) - 8;
  int v39 = *(_DWORD *)&v38[4 * (v22 ^ 0x9A)];
  HIDWORD(v14) = ~v39;
  LODWORD(v14) = v39 ^ 0xEA6EA488;
  uint64_t v40 = (uint64_t)*(&off_99820 + (v9 ^ 0x34C));
  int v41 = (v14 >> 2) ^ *(_DWORD *)(v40 + 4 * (v32 ^ 0xDD)) ^ (v37 - ((2 * v37) & 0x6A850AF8) - 1253931652);
  int v42 = v41 - ((2 * v41) & 0x91A05594);
  BOOL v43 = (char *)*(&off_99820 + (v9 ^ 0x38F)) - 8;
  int v44 = *(_DWORD *)&v43[4 * (v26 ^ 0xD9)] ^ v31 ^ (v42 - 925881654);
  int v45 = v35 ^ 0xE6 ^ v44 ^ v29 ^ 0x2789BBD4;
  LODWORD(v16) = *(_DWORD *)&v38[4 * (((v45 ^ v34) >> 24) ^ 0x21)];
  HIDWORD(v14) = ~v16;
  LODWORD(v14) = v16 ^ 0xEA6EA488;
  LODWORD(v16) = ((v14 >> 2) - ((2 * (v14 >> 2)) & 0x91A05594) - 925881654) ^ *(_DWORD *)&v43[4
                                                                                            * ((v45 ^ v34) ^ 0xDE)];
  unsigned int v107 = *(_DWORD *)&v36[4 * (((unsigned __int16)(v45 ^ v34) >> 8) ^ 0x1E)] ^ *(_DWORD *)(v40 + 4 * (((v45 ^ v34) >> 16) ^ 0x8Fu)) ^ v44 ^ ((((unsigned __int16)(v45 ^ v34) >> 8) ^ 0xEB) - ((2 * (((v45 ^ v34) >> 8) ^ 0x4BA6EB)) & 0x1A8) - 269957164) ^ (v16 - ((2 * v16) & 0x6A850AF8) - 1253931652);
  int v46 = v107 ^ 0x76E748E2 ^ v44 ^ v29;
  int v47 = *(_DWORD *)&v38[4 * (((v46 ^ v34) >> 24) ^ 0xA2)];
  HIDWORD(v14) = ~v47;
  LODWORD(v14) = v47 ^ 0xEA6EA488;
  unsigned int v48 = v46 ^ v34 ^ 0xC84590C6;
  int v49 = *(_DWORD *)&v36[4 * (BYTE1(v48) ^ 0xF5)] ^ *(_DWORD *)(v40
                                                             + 4
                                                             * (((v46 ^ v34) >> 16) ^ 0x6Cu)) ^ (BYTE1(v48) - ((v48 >> 7) & 0x1A8) - 269957164) ^ ((v14 >> 2) - ((2 * (v14 >> 2)) & 0x6A850AF8) - 1253931652);
  unsigned int v106 = v107 ^ 0x76E748E2 ^ *(_DWORD *)&v43[4 * ((v46 ^ v34) ^ 0x83)] ^ (v49
                                                                                         - ((2 * v49) & 0x91A05594)
                                                                                         - 925881654);
  unsigned int v50 = v106 ^ 0x2789BBD4 ^ v46 ^ 0x8EDEEA78;
  int v51 = v50 ^ v46 ^ v45;
  unsigned int v52 = v51 ^ v48;
  int v53 = *(_DWORD *)&v38[4 * (((v51 ^ v48) >> 24) ^ 0x67)];
  HIDWORD(v14) = ~v53;
  LODWORD(v14) = v53 ^ 0xEA6EA488;
  int v54 = (v14 >> 2) ^ *(_DWORD *)&v36[4 * (BYTE1(v52) ^ 0x97)] ^ ((BYTE1(v52) ^ 0x62)
                                                               - ((2 * ((v52 >> 8) ^ 0xD8B62)) & 0x1A8)
                                                               - 269957164);
  unsigned int v55 = (v54 - ((2 * v54) & 0x91A05594) - 925881654) ^ *(_DWORD *)&v43[4 * ((v51 ^ v48) ^ 0xE1)];
  LODWORD(v18) = v106 ^ 0x2789BBD4 ^ *(_DWORD *)(v40 + 4 * (((v51 ^ v48 ^ 0x2142BA5) >> 16) ^ 0xB6u)) ^ (v55 - 1253931652 + (~(2 * v55) | 0x957AF507) + 1);
  int v56 = v18 ^ v50;
  HIDWORD(v105) = v51 ^ v48;
  LODWORD(v16) = v51 ^ 0x5EF1BA37;
  int v57 = v18 ^ v50 ^ 0x307C325C;
  LODWORD(v104) = v57 ^ v51 ^ 0x5EF1BA37;
  HIDWORD(v104) = v56;
  int v58 = *(_DWORD *)&v38[4 * (((v104 ^ v51 ^ v48) >> 24) ^ 0xA4)];
  HIDWORD(v14) = ~v58;
  LODWORD(v14) = v58 ^ 0xEA6EA488;
  int v59 = ((v14 >> 2) - ((2 * (v14 >> 2)) & 0x91A05594) - 925881654) ^ *(_DWORD *)&v43[4
                                                                                   * ((v104 ^ v51 ^ v48) ^ 0x18)];
  unsigned int v60 = v104 ^ v51 ^ v48 ^ 0xCEE37B5D;
  HIDWORD(v103) = v104 ^ v52;
  LODWORD(v105) = v18;
  int v61 = *(_DWORD *)(v40 + 4 * (((v104 ^ v52) >> 16) ^ 0xCAu)) ^ *(_DWORD *)&v36[4 * (BYTE1(v60) ^ 0xF5)] ^ v18 ^ (BYTE1(v60) - ((v60 >> 7) & 0x1A8) - 269957164) ^ 0x6931DDAF ^ (v59 - ((2 * v59) & 0x6A850AF8) - 1253931652);
  unsigned int v62 = v61 ^ (v16 - ((2 * v16) & 0xD263BB5E) + 1764875695);
  LODWORD(v16) = *(_DWORD *)&v38[4 * (((v62 ^ v60) >> 24) ^ 0x70)];
  HIDWORD(v14) = ~v16;
  LODWORD(v14) = v16 ^ 0xEA6EA488;
  LODWORD(v16) = ((v14 >> 2) - ((2 * (v14 >> 2)) & 0x6A850AF8) - 1253931652) ^ *(_DWORD *)(v40
                                                                                         + 4
                                                                                         * (((v62 ^ v60 ^ 0xF3443494) >> 16) ^ 0xE4u));
  LODWORD(v16) = (v16 - ((2 * v16) & 0x91A05594) - 925881654) ^ *(_DWORD *)&v43[4
                                                                                              * ((v62 ^ v60) ^ 0x91)];
  LODWORD(v102) = v62 ^ v60;
  int v63 = v62 ^ v60 ^ 0x1A89BBD4;
  LODWORD(v16) = (v16 - ((2 * v16) & 0xDFD18FA8) - 269957164) ^ *(_DWORD *)&v36[4 * (BYTE1(v63) ^ 0xF5)];
  unsigned int v64 = v61 ^ BYTE1(v63) ^ (v16 - ((2 * v16) & 0xD263BB5E) + 1764875695);
  HIDWORD(v102) = v62;
  LODWORD(v103) = v61;
  LODWORD(v101) = v61 ^ (v57 - ((2 * v57) & 0xD263BB5E) + 1764875695);
  HIDWORD(v100) = v64 ^ v101;
  LODWORD(v16) = v64 ^ v101 ^ 0xE6F58988;
  unsigned int v65 = v16 ^ v62 ^ v63;
  int v66 = *(_DWORD *)&v38[4 * (HIBYTE(v65) ^ 0x43)];
  HIDWORD(v14) = ~v66;
  LODWORD(v14) = v66 ^ 0xEA6EA488;
  HIDWORD(v99) = v65;
  int v67 = v65 ^ 0x299B7ABE;
  int v68 = *(_DWORD *)&v36[4 * (((unsigned __int16)(v65 ^ 0x7ABE) >> 8) ^ 0xF5)] ^ *(_DWORD *)(v40 + 4 * (((v65 ^ 0x4D501F31) >> 16) ^ 0xE2u)) ^ (((unsigned __int16)(v65 ^ 0x7ABE) >> 8) - (((v65 ^ 0x299B7ABE) >> 7) & 0x1A8) - 269957164) ^ ((v14 >> 2) - ((2 * (v14 >> 2)) & 0x6A850AF8) - 1253931652);
  HIDWORD(v101) = v64;
  unsigned int v69 = v64 ^ *(_DWORD *)&v43[4 * (v65 ^ 0xFB)] ^ (v68 - ((2 * v68) & 0x91A05594) - 925881654);
  HIDWORD(v98) = v69 ^ v16;
  unsigned int v70 = v69 ^ v16 ^ 0x5BF36347;
  LODWORD(v100) = v16 ^ v62;
  LODWORD(v98) = v70 ^ v16 ^ v62;
  LODWORD(v18) = v98 ^ 0x2745D0FF ^ v67;
  int v71 = v18 ^ 0x3DCC6B2B;
  unsigned int v72 = (((unsigned __int16)(v18 ^ 0x6B2B) >> 8)
       - (((v18 ^ 0x3DCC6B2B) >> 7) & 0x1A8)
       - 269957164) ^ *(_DWORD *)&v36[4 * (((unsigned __int16)(v18 ^ 0x6B2B) >> 8) ^ 0xF5)];
  unsigned int v73 = (v72 - ((2 * v72) & 0x91A05594) - 925881654) ^ *(_DWORD *)&v43[4 * ((~(_BYTE)v98 ^ v67) ^ 0x6E)];
  HIDWORD(v97) = v18;
  int v74 = *(_DWORD *)&v38[4 * (BYTE3(v18) ^ 0x57)];
  HIDWORD(v14) = ~v74;
  LODWORD(v14) = v74 ^ 0xEA6EA488;
  LODWORD(v99) = v69;
  LODWORD(v97) = (v14 >> 2) ^ *(_DWORD *)(v40 + 4
                                              * (((v18 ^ 0x516EF336) >> 16) ^ 0x8Bu)) ^ v69 ^ (v73 - ((2 * v73) & 0x6A850AF8) - 1253931652);
  LODWORD(v18) = v97 ^ 0x930000ED ^ v70;
  LODWORD(v96) = v18 ^ 0x8D06EA22 ^ v98 ^ 0x2745D0FF;
  int v75 = *(_DWORD *)&v38[4 * (((v96 ^ v71) >> 24) ^ 0x39)];
  HIDWORD(v14) = ~v75;
  LODWORD(v14) = v75 ^ 0xEA6EA488;
  HIDWORD(v95) = v96 ^ v71;
  unsigned int v76 = v96 ^ v71 ^ 0x53DEAA41;
  LODWORD(v23) = *(_DWORD *)&v43[4
                               * (v18 ^ 0x22 ^ ~(_BYTE)v98 ^ v71 ^ 4)] ^ *(_DWORD *)&v36[4 * (BYTE1(v76) ^ 0xF5)] ^ 0x2738ED1E ^ (v14 >> 2);
  int v77 = *(_DWORD *)(v40 + 4 * (((v96 ^ v71 ^ 0x9289BB39) >> 16) ^ 0x7Eu)) ^ v97 ^ 0x930000ED ^ BYTE1(v76) ^ 0x2E0F5397 ^ (v23 - ((2 * v23) & 0x6A850AF8) - 1253931652);
  HIDWORD(v96) = v18;
  int v78 = v77 ^ ((v98 ^ 0x2745D0FF) - ((2 * (v98 ^ 0x2745D0FF)) & 0x5C1EA72E) + 772756375);
  unsigned int v79 = v78 ^ v76;
  LODWORD(v38) = *(_DWORD *)&v38[4 * (((v78 ^ v76) >> 24) ^ 0x44)];
  HIDWORD(v14) = ~v38;
  LODWORD(v14) = v38 ^ 0xEA6EA488;
  LODWORD(v43) = *(_DWORD *)&v36[4 * (BYTE1(v79) ^ 0xFD)] ^ *(_DWORD *)&v43[4
                                                                          * (*(unsigned char *)(v40
                                                                                      + 4
                                                                                      * (((v96 ^ v71 ^ 0x9289BB39) >> 16) ^ 0x7Eu)) ^ v97 ^ 0xED ^ ((unsigned __int16)(v96 ^ v71 ^ 0xAA41) >> 8) ^ 0x97 ^ (v23 - ((2 * v23) & 0xF8) + 124) ^ (~(_BYTE)v98 - ((2 * ~(_BYTE)v98) & 0x2E) - 105) ^ (v96 ^ v71) ^ 0x41 ^ 0xC4)] ^ ((BYTE1(v79) ^ 8) - ((v79 >> 7) & 0x1A8) - 269957164) ^ ((v14 >> 2) - ((2 * (v14 >> 2)) & 0x91A05594) - 925881654);
  HIDWORD(v94) = v78 ^ v76 ^ 0x18F210CD;
  LODWORD(v43) = (v43 - ((2 * v43) & 0x6A850AF8) - 1253931652) ^ *(_DWORD *)(v40
                                                                                           + 4
                                                                                           * (((v78 ^ v76) >> 16) ^ 0x16u));
  uint64_t v80 = v78 ^ 0x626A2240u;
  uint8x16_t v81 = (char *)*(&off_99820 + (v9 ^ 0x398)) - 12;
  uint64_t v82 = (uint64_t)*(&off_99820 + v9 - 839);
  uint64_t v83 = (uint64_t)*(&off_99820 + v9 - 953);
  unint64_t v93 = (char *)*(&off_99820 + (v9 ^ 0x3B9)) - 8;
  uint64_t v84 = ((v93[*(unsigned __int8 *)(v10 - 105) ^ 0x28] ^ 0x30) & 0xFFFF00FF | ((((*(unsigned char *)(v10 - 106) ^ 0xAC) + v81[*(unsigned __int8 *)(v10 - 106) ^ 0xA3] + 78) ^ 0xF6) << 8) | ((*(unsigned __int8 *)(v83 + (*(unsigned __int8 *)(v10 - 108) ^ 0xB2)) ^ 0xAAAAAAAA) << 24) | ((*(unsigned __int8 *)(v82 + (*(unsigned __int8 *)(v10 - 107) ^ 0x27)) ^ 0xB5) << 16)) ^ 0xC55B4CF7;
  HIDWORD(v92) = *(_DWORD *)(v10 - 128) + 630194369;
  LODWORD(v16) = (v18 ^ 0x8D06EA22) - 2 * ((v18 ^ 0x8D06EA22) & 0x2E0F539F ^ v18 & 8) + 772756375;
  int v85 = v43 - ((2 * v43) & 0x5C1EA72E) + 772756375;
  HIDWORD(v91) = v13 + 1033661947;
  LODWORD(v91) = v13 ^ 0x78D;
  HIDWORD(v90) = v77 ^ v16;
  LODWORD(v90) = v13 ^ 0x745;
  HIDWORD(v89) = v13 ^ 0x7B9;
  LODWORD(v89) = v13 ^ 0x7E9;
  LODWORD(v95) = v77;
  HIDWORD(v88) = v85 ^ v77;
  LODWORD(v88) = v13 ^ 0x790;
  HIDWORD(v87) = v13 ^ 0x7AD;
  *(_DWORD *)(v10 - 120) = v13;
  LODWORD(v87) = v13 ^ 0x77D;
  LODWORD(v94) = v80;
  LODWORD(v92) = v16 ^ 0x3DC8BA5D ^ v85;
  HIDWORD(a6) = v92 ^ v80;
  return sub_28E80(69, v80, v81, 93, v82, v83, v84, 3369085642, a2, a3, a4, a1, a6, v87, v88, v89, v90, v91, v92,
           v83,
           v82,
           v93,
           v81,
           v94,
           v95,
           v96,
           v97,
           v98,
           v99,
           v100,
           v101,
           v102,
           v103,
           v104,
           v105);
}

uint64_t sub_28E80@<X0>(int a1@<W6>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,int a42,int a43,uint64_t a44)
{
  *(_DWORD *)(v48 - 252) = v46;
  uint64_t v49 = v46 & 0xFFFFFFF8 ^ ((HIDWORD(a12) & 0xC2638FBE) - 2120041885);
  *(void *)(v48 - 200) = v49;
  uint64_t v50 = *(unsigned __int8 *)(a2 + v49);
  uint64_t v51 = v46 & 0xFFFFFFF3 ^ 0x81A2BFED;
  *(void *)(v48 - 168) = v51;
  LODWORD(v50) = *(unsigned __int8 *)(a16 + (v50 ^ 0x41));
  uint64_t v52 = *(unsigned __int8 *)(a2 + v51) ^ 0x60;
  uint64_t v53 = v46 & 0xFFFFFFF7 ^ 0x81A2BFED;
  *(void *)(v48 - 152) = v53;
  uint64_t v54 = v46 & 0xFFFFFFFE ^ 0x81A2BFED;
  *(void *)(v48 - 128) = v54;
  LODWORD(v52) = *(unsigned __int8 *)(a14 + v52) ^ 0x29;
  LODWORD(v53) = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a2 + v53) ^ 0xC1)) ^ 0x9D;
  LODWORD(v54) = *(unsigned __int8 *)(a15 + (*(unsigned __int8 *)(a2 + v54) ^ 0x66)) ^ 0x6C;
  uint64_t v55 = v46 & 0xFFFFFFF0 ^ 0x81A2BFEF;
  *(void *)(v48 - 136) = v55;
  uint64_t v56 = *(unsigned __int8 *)(a2 + v55) ^ 0xE9;
  uint64_t v57 = v46 & 0xFFFFFFF4 ^ 0x81A2BFEF;
  *(void *)(v48 - 160) = v57;
  uint64_t v58 = *(unsigned __int8 *)(a2 + v57);
  LODWORD(v57) = *(unsigned __int8 *)(a16 + v56) ^ 0xE7;
  LODWORD(v58) = *(unsigned __int8 *)(a16 + (v58 ^ 0xC3));
  uint64_t v59 = v46 ^ 0x81A2BFED;
  *(void *)(v48 - 176) = v59;
  int v60 = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a2 + v59) ^ 0x30));
  LODWORD(v59) = v57 | (v52 << 24);
  int v61 = (v54 << 16) | ((v60 ^ 0x19) << 24);
  LOBYTE(v54) = v58 ^ 0x2D;
  LODWORD(v58) = v58 ^ 0x2D | (v53 << 24);
  uint64_t v62 = v46 & 0xFFFFFFFD ^ 0x81A2BFEF;
  *(void *)(v48 - 144) = v62;
  unsigned int v63 = v61 & 0xFFFF00FF | (((*(unsigned char *)(a17 + (*(unsigned __int8 *)(a2 + v62) ^ 0xC0))
                                             + (*(unsigned char *)(a2 + v62) ^ 0xCF)
                                             + 78) ^ 0xF9) << 8);
  uint64_t v64 = v46 & 0xFFFFFFFB ^ 0x81A2BFED;
  *(void *)(v48 - 208) = v64;
  LODWORD(v53) = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a2 + v64) ^ 0xFCLL)) ^ 0xA7;
  LODWORD(v64) = v50 ^ 0x37;
  uint64_t v65 = v46 & 0xFFFFFFF6 ^ 0x81A2BFED;
  *(void *)(v48 - 216) = v65;
  LODWORD(v65) = (*(unsigned __int8 *)(a15 + (*(unsigned __int8 *)(a2 + v65) ^ 0x5DLL)) ^ 0xBF) << 16;
  uint64_t v66 = v46 & 0xFFFFFFF5 ^ 0x81A2BFEF;
  *(void *)(v48 - 192) = v66;
  LODWORD(v65) = v65 & 0xFFFF00FF | (((*(unsigned char *)(a17 + (*(unsigned __int8 *)(a2 + v66) ^ 0xD5))
                                                      + (*(unsigned char *)(a2 + v66) ^ 0xDA)
                                                      + 78) ^ 0xCF) << 8) | v58;
  uint64_t v67 = v46 & 0xFFFFFFF1 ^ 0x81A2BFEF;
  *(void *)(v48 - 184) = v67;
  LODWORD(v58) = (*(unsigned char *)(a17 + (*(unsigned __int8 *)(a2 + v67) ^ 0xE4))
                                 + (*(unsigned char *)(a2 + v67) ^ 0xEB)
                                 - 50) << 8;
  uint64_t v68 = v46 & 0xFFFFFFF2 ^ 0x81A2BFED;
  *(void *)(v48 - 240) = v68;
  uint64_t v69 = *(unsigned __int8 *)(a2 + v68);
  uint64_t v70 = v46 & 0xFFFFFFFC ^ 0x81A2BFEF;
  *(void *)(v48 - 224) = v70;
  int v71 = *(unsigned __int8 *)(a16 + (*(unsigned __int8 *)(a2 + v70) ^ 0xDCLL)) ^ 0xF3;
  LODWORD(v58) = v58 | ((*(unsigned __int8 *)(a15 + (v69 ^ 0x92)) ^ 0x82) << 16) | v59;
  uint64_t v72 = v46 & 0xFFFFFFF9 ^ 0x81A2BFEF;
  *(void *)(v48 - 248) = v72;
  LOBYTE(v51) = *(unsigned char *)(a17 + (*(unsigned __int8 *)(a2 + v72) ^ 0x4FLL)) + (*(unsigned char *)(a2 + v72) ^ 0x40);
  uint64_t v73 = v46 & 0xFFFFFFFA ^ 0x81A2BFED;
  *(void *)(v48 - 232) = v73;
  LODWORD(v51) = ((*(unsigned __int8 *)(a15 + (*(unsigned __int8 *)(a2 + v73) ^ 0xA9)) ^ 0x51) << 16) | (((v51 + 78) ^ 0xB7) << 8) | v64 | (v53 << 24);
  LODWORD(v72) = v45 ^ a42 ^ ((v71 | v63) - 2 * ((v71 | v63) & 0x4FF8F914 ^ v71 & 0x14) - 805766912);
  LODWORD(v64) = a1 ^ a43 ^ (v51 + 2095248718 - 2 * (v51 & 0x7CE2F55E ^ v64 & 0x10));
  LODWORD(v57) = v47 ^ a39 ^ (v58 - 2 * (v58 & 0x6366929F ^ v57 & 2) - 479817059);
  unsigned int v74 = v44 ^ a38 ^ (v65 - 2 * (v65 & 0x7CD37FD ^ v54 & 0x10) - 2016593939);
  int v75 = (char *)*(&off_99820 + *(_DWORD *)(v48 - 120) - 1911) - 8;
  uint64_t v76 = (uint64_t)*(&off_99820 + *(_DWORD *)(v48 - 120) - 1828);
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (HIBYTE(v74) ^ 0x3F));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v65) = (v77 >> 1) ^ *(_DWORD *)&v75[4 * (BYTE2(v57) ^ 0x34)] ^ ((BYTE2(v57) ^ 0x68)
                                                                        + 62854711
                                                                        - ((2 * (WORD1(v57) ^ 0xB768)) & 0x6E));
  int v78 = (char *)*(&off_99820 + *(_DWORD *)(v48 - 120) - 1845) - 8;
  LODWORD(v54) = *(_DWORD *)&v78[4 * (v74 ^ 0xC6)] ^ ((BYTE2(v72) ^ 0xD5)
                                                                     + 62854711
                                                                     - 2 * ((BYTE2(v72) ^ 0xD5) & 0x3F ^ WORD1(v72) & 8)) ^ ((v74 ^ 0xAB) - 570297388 - ((2 * (v74 ^ 0xAB) + 361726) & 0x402AA)) ^ *(_DWORD *)&v75[4 * (BYTE2(v72) ^ 0x89)];
  LODWORD(v58) = *(_DWORD *)&v75[4 * (BYTE2(v64) ^ 0x8C)] ^ *(_DWORD *)&v78[4 * (v57 ^ 0xB6)] ^ ((v57 ^ 0xDB) - 570297387 + ((2 * (v57 ^ 0xDB) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ ((BYTE2(v64) ^ 0xD0) + 62854711 - ((2 * (WORD1(v64) ^ 0xC8D0)) & 0x6E));
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v64) ^ 0xC8));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v51) = ((BYTE2(v74) ^ 0xAD) + 62854711 - ((2 * (HIWORD(v74) ^ 0x3FAD)) & 0x6E)) ^ *(_DWORD *)&v78[4 * (v72 ^ 0x1C)] ^ ((v72 ^ 0x71) - 570297387 + ((2 * (v72 ^ 0x71) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v75[4 * (BYTE2(v74) ^ 0xF1)] ^ (v77 >> 1);
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v72) ^ 0x6C));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v53) = v77 >> 1;
  int v79 = v51 - 509880201 - ((2 * v51) & 0xC337B0EE);
  LODWORD(v69) = (v64 ^ 0x10)
               - 570297387
               + ((2 * (v64 ^ 0x10) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF);
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v57) ^ 0xB7));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  uint64_t v80 = (char *)*(&off_99820 + (int)a12) - 8;
  LODWORD(v65) = *(_DWORD *)&v80[4 * (BYTE1(v72) ^ 0xDE)] ^ a35 ^ *(_DWORD *)&v78[4 * (v64 ^ 0x7D)] ^ (v65 - 509880201 - ((2 * v65) & 0xC337B0EE));
  LODWORD(v64) = (v54 - 509880201 - ((2 * v54) & 0xC337B0EE)) ^ *(_DWORD *)&v80[4 * (BYTE1(v64) ^ 0x2F)] ^ (v77 >> 1);
  LODWORD(v51) = v64 - ((2 * v64) & 0x59DA0252);
  LODWORD(v64) = *(_DWORD *)&v80[4 * (BYTE1(v74) ^ 0x29)] ^ a37 ^ v53;
  int v81 = *(_DWORD *)&v80[4 * (BYTE1(v57) ^ 0x66)];
  LODWORD(v64) = v64 ^ (v58 - 509880201 - ((2 * v58) & 0xC337B0EE));
  LODWORD(v57) = v65 ^ v69;
  LODWORD(v72) = v81 ^ a36 ^ v79;
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * ((v65 ^ ~v69) >> 24));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  int v82 = v77 >> 1;
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v64) ^ 0x91));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v58) = v77 >> 1;
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v72) ^ 0xA3));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  int v83 = v58 ^ *(_DWORD *)&v75[4 * (BYTE2(v72) ^ 0xF0)] ^ ((BYTE2(v72) ^ 0xAC)
                                                        + 62854711
                                                        - ((2 * (WORD1(v72) ^ 0xA3AC)) & 0x6E));
  LODWORD(v54) = (v77 >> 1) ^ *(_DWORD *)&v75[4 * (BYTE2(v57) ^ 0x15)] ^ *(_DWORD *)&v78[4
                                                                                       * (v64 ^ 0x7B)] ^ ((BYTE2(v57) ^ 0x49) + 62854711 - ((2 * (WORD1(v57) ^ 0xFF49)) & 0x6E)) ^ ((v64 ^ 0x16) - 570297387 + ((2 * (v64 ^ 0x16) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  LODWORD(v53) = v54 - 509880201 - ((2 * v54) & 0xC337B0EE);
  LODWORD(v51) = (v51 + 753729833) ^ a34;
  unsigned int v84 = (v83 - 509880201 - ((2 * v83) & 0xC337B0EE)) ^ *(_DWORD *)&v80[4
                                                                     * (((unsigned __int16)(v65 ^ v69) >> 8) ^ 0x2C)];
  LODWORD(v65) = v82 ^ *(_DWORD *)&v78[4 * (v72 ^ 3)] ^ ((v72 ^ 0x6E)
                                                                        - 570297387
                                                                        + ((2 * (v72 ^ 0x6E) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v75[4 * (BYTE2(v51) ^ 0x88)] ^ ((BYTE2(v51) ^ 0xD4) + 62854711 - 2 * ((BYTE2(v51) ^ 0xD4) & 0x3F ^ WORD1(v51) & 8));
  *(_DWORD *)(v48 - 256) = 62854712;
  LODWORD(v54) = *(_DWORD *)&v75[4 * (BYTE2(v64) ^ 0x2E)] ^ ((BYTE2(v64) ^ 0x72)
                                                           + 62854712
                                                           + ~(2 * ((BYTE2(v64) ^ 0x72) & 0x3F ^ WORD1(v64) & 8)));
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v51) ^ 0x42));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v54) = ((v57 ^ 0xFC)
                - 570297387
                + ((2 * (v57 ^ 0xFC) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v80[4 * (BYTE1(v72) ^ 0xBD)] ^ *(_DWORD *)&v78[4 * (v57 ^ 0x91)] ^ (v54 - 509880201 - ((2 * v54) & 0xC337B0EE)) ^ (v77 >> 1);
  LODWORD(v58) = *(_DWORD *)&v80[4 * (BYTE1(v51) ^ 0x9A)];
  LODWORD(v51) = ((v51 ^ 0x64) - 1726037377) ^ a33 ^ *(_DWORD *)&v78[4 * (v51 ^ 9)] ^ (v84 + 1155739989 - ((2 * v84) & 0x89C662AA));
  LODWORD(v57) = *(_DWORD *)&v80[4 * (BYTE1(v64) ^ 0x57)] ^ HIDWORD(a30) ^ (v65 - 509880201 - ((2 * v65) & 0xC337B0EE));
  LODWORD(v64) = (v54 - ((2 * v54) & 0xFD08E87A) + 2122609725) ^ a32;
  unsigned int v85 = v58 ^ HIDWORD(a32) ^ v53;
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v64) ^ 0x93));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v54) = (((v58 ^ BYTE4(a32) ^ v53) ^ 0xA1)
                - 570297387
                + ((2 * ((v58 ^ BYTE4(a32) ^ v53) ^ 0xA1) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v78[4 * ((v58 ^ BYTE4(a32) ^ v53) ^ 0xCC)];
  LODWORD(v65) = *(_DWORD *)&v75[4 * (BYTE2(v51) ^ 0xDB)] ^ ((BYTE2(v51) ^ 0x87)
                                                           + 62854711
                                                           - 2 * ((BYTE2(v51) ^ 0x87) & 0x3F ^ WORD1(v51) & 8)) ^ (v77 >> 1);
  LODWORD(v54) = (v54 - 509880201 - ((2 * v54) & 0xC337B0EE)) ^ *(_DWORD *)&v80[4 * (BYTE1(v51) ^ 0xDE)];
  LODWORD(v53) = ((v51 ^ 0x9E)
                - 570297387
                + ((2 * (v51 ^ 0x9E) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v78[4 * (v51 ^ 0xF3)];
  LODWORD(v69) = v54 + 62854711 - ((2 * v54) & 0x77E2C6E);
  LODWORD(v65) = (v65 - 509880201 - ((2 * v65) & 0xC337B0EE)) ^ *(_DWORD *)&v80[4 * (BYTE1(v85) ^ 0x57)];
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v57) ^ 0x37));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v54) = v77 >> 1;
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v51) ^ 0x3A));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v58) = ((v57 ^ 0x740CBC3A) >> 16);
  int v86 = v58 + 62854711 - (((v57 ^ 0x740CBC3A) >> 15) & 0x6E);
  LODWORD(v51) = *(_DWORD *)&v80[4 * ((unsigned __int16)(v57 ^ 0xBC3A) >> 8)] ^ BYTE2(v85) ^ *(_DWORD *)&v75[4 * (BYTE2(v85) ^ 0xF6)] ^ (v77 >> 1);
  LODWORD(v72) = ((v64 ^ 0x2D) - 1726037377) ^ HIDWORD(a31) ^ *(_DWORD *)&v78[4
                                                                                             * (v64 ^ 0x40)] ^ ((v51 ^ 0xE224CEEA) + 1155739989 + ((2 * ((v51 ^ 0xE224CEEA) & 0x44E3315D ^ v51 & 8)) ^ 0xFFFFFFEF) + 1);
  LODWORD(v57) = ((v57 ^ 0x3A) - 1726037377) ^ HIDWORD(a29) ^ *(_DWORD *)&v78[4
                                                                                             * (v57 ^ 0x57)] ^ (v65 + 1155739989 - ((2 * v65) & 0x89C662AA));
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (HIBYTE(v85) ^ 0x7C));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v54) = *(_DWORD *)&v75[4 * (BYTE2(v64) ^ 2)] ^ a30 ^ BYTE2(v64) ^ v54 ^ v69;
  unsigned int v87 = *(_DWORD *)&v80[4 * (BYTE1(v64) ^ 0x94)] ^ a31 ^ v86 ^ *(_DWORD *)&v75[4 * (v58 ^ 0x5C)] ^ (v77 >> 1) ^ (v53 - 509880201 - ((2 * v53) & 0xC337B0EE));
  LODWORD(v65) = ((v54 ^ 0x9D)
                - 570297387
                + ((2 * (v54 ^ 0x9D) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v78[4 * (v54 ^ 0xF0)];
  LODWORD(v69) = v65 - 509880201 - ((2 * v65) & 0xC337B0EE);
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v72) ^ 0x5B));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v65) = (v77 >> 1) ^ *(_DWORD *)&v78[4 * (v57 ^ 0x1F)] ^ ((v57 ^ 0x72)
                                                                                  - 570297387
                                                                                  + ((2 * (v57 ^ 0x72)
                                                                                    + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v57) ^ 0x28));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v51) = v77 >> 1;
  LODWORD(v53) = v65 - 509880201 - ((2 * v65) & 0xC337B0EE);
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v54) ^ 0xB9));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v65) = v77 >> 1;
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (HIBYTE(v87) ^ 0xB4));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v65) = v65 ^ *(_DWORD *)&v78[4 * (v87 ^ 0x8B)] ^ ((v87 ^ 0xE6)
                                                                           - 570297387
                                                                           + ((2 * (v87 ^ 0xE6) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  int v88 = BYTE2(v72) ^ 0x95;
  unsigned int v89 = v88 + 62854711 - 2 * ((BYTE2(v72) ^ 0x95) & 0x3F ^ WORD1(v72) & 8);
  int v90 = v72;
  unsigned int v91 = (v72 ^ 0xF4)
      - 570297387
      + ((2 * (v72 ^ 0xF4) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF);
  LODWORD(v72) = ((BYTE2(v57) ^ 0x14) + 62854711 - ((2 * (WORD1(v57) ^ 0x2814)) & 0x6E)) ^ a28 ^ *(_DWORD *)&v80[4 * (BYTE1(v72) ^ 0x1F)] ^ (v65 - 509880201 - ((2 * v65) & 0xC337B0EE)) ^ *(_DWORD *)&v75[4 * (BYTE2(v57) ^ 0x48)];
  LODWORD(v64) = *(_DWORD *)&v80[4 * ((unsigned __int16)(v54 ^ 0xA59D) >> 8)] ^ a29 ^ ((BYTE2(v87) ^ 0x59) + 62854711 - ((2 * (HIWORD(v87) ^ 0xB459)) & 0x6E)) ^ *(_DWORD *)&v75[4 * (BYTE2(v87) ^ 5)] ^ v53;
  LODWORD(v57) = (((v54 ^ 0xFA64A59D) >> 16)
                + 62854711
                - (((v54 ^ 0xFA64A59D) >> 15) & 0x6E)) ^ HIDWORD(a28) ^ ((v77 >> 1)
                                                                                     - 509880201
                                                                                     - ((2 * (v77 >> 1)) & 0xC337B0EE)) ^ *(_DWORD *)&v80[4 * (BYTE1(v57) ^ 0x12)] ^ *(_DWORD *)&v78[4 * (v90 ^ 0x99)] ^ *(_DWORD *)&v75[4 * (((v54 ^ 0xFA64A59D) >> 16) ^ 0x5C)] ^ v91;
  unsigned int v92 = *(_DWORD *)&v80[4 * (BYTE1(v87) ^ 0x34)] ^ HIDWORD(a27) ^ *(_DWORD *)&v75[4 * (v88 ^ 0x5C)] ^ v51 ^ v69 ^ v89;
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (HIBYTE(v92) ^ 0xEB));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v53) = (v77 >> 1) - 509880201 - ((2 * (v77 >> 1)) & 0xC337B0EE);
  LODWORD(v65) = ((BYTE2(v57) ^ 0x81) + 62854711 - 2 * ((BYTE2(v57) ^ 0x81) & 0x3F ^ WORD1(v57) & 8)) ^ *(_DWORD *)&v75[4 * (BYTE2(v57) ^ 0xDD)];
  unsigned int v93 = ((v57 ^ 0x51)
       - 570297387
       + ((2 * (v57 ^ 0x51) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v78[4
                                                                                                * (v57 ^ 0x3C)];
  unsigned int v94 = *(_DWORD *)&v75[4 * (BYTE2(v72) ^ 0xDB)] ^ ((BYTE2(v72) ^ 0x87)
                                                  + 62854711
                                                  - 2 * ((BYTE2(v72) ^ 0x87) & 0x3F ^ WORD1(v72) & 8));
  int v95 = *(_DWORD *)&v75[4 * (((v92 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v92 ^ 0xA87CE98B) >> 16) ^ (v93 + 62854711 - ((2 * v93) & 0x77E2C6E));
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v57) ^ 0x14));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  int v96 = v77 >> 1;
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v64) ^ 0x9A));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v65) = *(_DWORD *)&v78[4 * (v92 ^ 0xE6)] ^ *(_DWORD *)&v80[4 * (BYTE1(v72) ^ 0xDE)] ^ ((v92 ^ 0x8B) - 570297387 + ((2 * (v92 ^ 0x8B) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ (v65 - 509880201 - ((2 * v65) & 0xC337B0EE)) ^ (v77 >> 1);
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v72) ^ 0x77));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v57) = *(_DWORD *)&v80[4 * (BYTE1(v57) ^ 0x34)] ^ a26 ^ ((BYTE2(v64) ^ 0xE9)
                                                                 + 62854711
                                                                 - ((2 * (WORD1(v64) ^ 0x9AE9)) & 0x6E)) ^ *(_DWORD *)&v75[4 * (BYTE2(v64) ^ 0xB5)] ^ v53 ^ ((v72 ^ 0x9E) - 570297387 + ((2 * (v72 ^ 0x9E) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v78[4 * (v72 ^ 0xF3)];
  LODWORD(v51) = *(_DWORD *)&v80[4 * (BYTE1(v92) ^ 0xB)] ^ a25 ^ ((v64 ^ 0xA8)
                                                                - 570297387
                                                                + ((2 * (v64 ^ 0xA8) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v78[4 * (v64 ^ 0xC5)] ^ v96 ^ (v94 - 509880201 - ((2 * v94) & 0xC337B0EE));
  LODWORD(v64) = *(_DWORD *)&v80[4 * (BYTE1(v64) ^ 0x2D)] ^ HIDWORD(a26) ^ (v77 >> 1) ^ (v95
                                                                                       - 509880201
                                                                                       - ((2 * v95) & 0xC337B0EE));
  BYTE1(v53) = BYTE1(v51) ^ 0x65;
  int v97 = ((v51 ^ 0x2E0E654A) >> 16);
  LODWORD(v54) = v97 + 62854711 - (((v51 ^ 0x2E0E654A) >> 15) & 0x6E);
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v51) ^ 0x6D));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v69) = v77 >> 1;
  LODWORD(v72) = (v65 + 1764875695 - ((2 * v65) & 0xD263BB5E)) ^ a27;
  LODWORD(v65) = *(_DWORD *)&v75[4 * (v97 ^ 0x5C)];
  unsigned int v98 = *(_DWORD *)(v76 + 4 * (BYTE3(v72) ^ 0xFD));
  LODWORD(v65) = v65 ^ (v98 << 31) ^ (v98 >> 1) ^ v54;
  unsigned int v99 = ((v51 ^ 0x4A)
       - 570297387
       + ((2 * (v51 ^ 0x4A) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v78[4
                                                                                                * (v51 ^ 0x27)];
  LODWORD(v51) = (v65 ^ 0x63E2CBB2) - 509880201 - 2 * ((v65 ^ 0x63E2CBB2) & 0x619BD87F ^ v65 & 8);
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v64) ^ 0xAE));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v65) = (v77 >> 1) ^ (v99 - 509880201 - ((2 * v99) & 0xC337B0EE)) ^ *(_DWORD *)&v80[4 * (BYTE1(v72) ^ 0xA4)];
  int v100 = v65 + 62854711 - ((2 * v65) & 0x77E2C6E);
  LODWORD(v65) = *(_DWORD *)&v75[4 * (BYTE2(v64) ^ 0x3A)] ^ v69 ^ ((BYTE2(v64) ^ 0x66)
                                                                 + 62854711
                                                                 - 2 * ((BYTE2(v64) ^ 0x66) & 0x3F ^ WORD1(v64) & 8)) ^ *(_DWORD *)&v78[4 * (v72 ^ 0x4D)] ^ ((v72 ^ 0x20) - 570297387 + ((2 * (v72 ^ 0x20) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  LODWORD(v53) = ((v64 ^ 0xB3)
                + 2059049719
                + ((2 * (v64 ^ 0xB3) + 254) & 0xEE ^ 0xFDCA7FFF)) ^ *(_DWORD *)&v80[4 * BYTE1(v53)];
  LODWORD(v53) = (v53 + 1155739989 - ((2 * v53) & 0x89C662AA)) ^ *(_DWORD *)&v78[4 * (v64 ^ 0xDE)];
  LODWORD(v72) = *(_DWORD *)&v75[4 * (BYTE2(v72) ^ 0x40)] ^ ((BYTE2(v72) ^ 0x1C)
                                                           + 62854711
                                                           - ((2 * (WORD1(v72) ^ 0xFD1C)) & 0x6E));
  LODWORD(v53) = (v72 ^ 0xD9E215AF ^ -(v72 ^ 0xD9E215AF) ^ ((v72 ^ v53 ^ 0x431D28D3) + (v53 ^ 0x6500C283) + 1))
               + (v53 ^ 0x6500C283);
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * ((v57 ^ 0x3F162902) >> 24));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v72) = ((v57 ^ 0x3F162902) >> 16) ^ a24 ^ *(_DWORD *)&v75[4 * (((v57 ^ 0x3F162902) >> 16) ^ 0x5C)] ^ v100;
  LODWORD(v69) = (v77 >> 1) ^ HIDWORD(a23) ^ v53;
  unsigned int v101 = *(_DWORD *)&v80[4 * (BYTE1(v57) ^ 0xCB)] ^ HIDWORD(a24) ^ (v65 - 509880201 - ((2 * v65) & 0xC337B0EE));
  LODWORD(v64) = *(_DWORD *)&v80[4 * (BYTE1(v64) ^ 0x7C)] ^ HIDWORD(a25) ^ ((v57 ^ 2)
                                                                          - 570297388
                                                                          - ((2 * (v57 ^ 2) + 361726) & 0x402AA)) ^ *(_DWORD *)&v78[4 * (v57 ^ 0x6F)] ^ v51;
  LODWORD(v65) = ((BYTE2(v64) ^ 0xE9) + 62854711 - ((2 * (WORD1(v64) ^ 0xB8E9)) & 0x6E)) ^ *(_DWORD *)&v75[4 * (BYTE2(v64) ^ 0xB5)];
  LODWORD(v53) = v65 - 509880201 - ((2 * v65) & 0xC337B0EE);
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v72) ^ 0x9D));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v57) = v77 >> 1;
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (HIBYTE(v101) ^ 0x61));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v65) = *(_DWORD *)&v78[4 * (v64 ^ 0xC5)] ^ *(_DWORD *)&v75[4 * (BYTE2(v72) ^ 0x28)] ^ ((v64 ^ 0xA8) - 570297388 - ((2 * (v64 ^ 0xA8) + 361726) & 0x402AA)) ^ (v77 >> 1) ^ ((BYTE2(v72) ^ 0x74) + 62854711 - 2 * ((BYTE2(v72) ^ 0x74) & 0x3F ^ WORD1(v72) & 8));
  int v102 = v57 ^ ((BYTE2(v69) ^ 0xE6) + 62854711 - ((2 * (WORD1(v69) ^ 0xB0E6)) & 0x6E)) ^ *(_DWORD *)&v75[4 * (BYTE2(v69) ^ 0xBA)];
  LODWORD(v51) = v72;
  LODWORD(v54) = (v72 ^ 0xD9)
               - 570297387
               + ((2 * (v72 ^ 0xD9) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF);
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v64) ^ 0xB8));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  int v103 = ((BYTE2(v101) ^ 8) + 62854711 - ((v101 >> 15) & 0x6E)) ^ *(_DWORD *)&v75[4 * (BYTE2(v101) ^ 0x54)] ^ *(_DWORD *)&v78[4 * (v69 ^ 0x29)] ^ ((v69 ^ 0x44) - 570297387 + ((2 * (v69 ^ 0x44) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ (v77 >> 1);
  LODWORD(v57) = *(_DWORD *)&v80[4 * (BYTE1(v69) ^ 0xDD)] ^ HIDWORD(a22) ^ (v65 - 509880201 - ((2 * v65) & 0xC337B0EE));
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v69) ^ 0xB0));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v72) = *(_DWORD *)&v80[4 * (BYTE1(v72) ^ 0xBD)] ^ a23 ^ (v103 - 509880201 - ((2 * v103) & 0xC337B0EE));
  unsigned int v104 = *(_DWORD *)&v80[4 * (BYTE1(v101) ^ 0x8F)] ^ HIDWORD(a21) ^ *(_DWORD *)&v78[4 * (v51 ^ 0xB4)] ^ v54 ^ (v77 >> 1) ^ v53;
  unsigned int v105 = ((v101 ^ 0x85)
        - 570297387
        + ((2 * (v101 ^ 0x85) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ a22 ^ *(_DWORD *)&v78[4 * (v101 ^ 0xE8)] ^ *(_DWORD *)&v80[4 * (BYTE1(v64) ^ 0x2D)] ^ (v102 - 509880201 - ((2 * v102) & 0xC337B0EE));
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (HIBYTE(v104) ^ 0x18));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v65) = ((BYTE2(v105) ^ 0x66) + 62854711 - 2 * ((BYTE2(v105) ^ 0x66) & 0x3F ^ HIWORD(v105) & 8)) ^ *(_DWORD *)&v75[4 * (BYTE2(v105) ^ 0x3A)];
  LODWORD(v64) = ((v77 >> 1) + 62854711 - ((2 * (v77 >> 1)) & 0x77E2C6E)) ^ *(_DWORD *)&v75[4 * (BYTE2(v72) ^ 0x40)];
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v72) ^ 0xEF));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  int v106 = (v77 >> 1) ^ *(_DWORD *)&v78[4 * (v104 ^ 0x90)] ^ ((v104 ^ 0xFD)
                                                                           - 570297387
                                                                           + ((2 * (v104 ^ 0xFD) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  LODWORD(v54) = *(_DWORD *)&v78[4 * (v57 ^ 0x27)] ^ ((v57 ^ 0x4A)
                                                                     - 570297387
                                                                     + ((2 * (v57 ^ 0x4A) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (HIBYTE(v105) ^ 0xAE));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v54) = (v77 >> 1) ^ *(_DWORD *)&v75[4 * (BYTE2(v104) ^ 0xF)] ^ (v54
                                                                        + *(_DWORD *)(v48 - 256)
                                                                        + ~((2 * v54) & 0x77E2C6E));
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v57) ^ 0xDC));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  int v107 = v64 - 509880201 - ((2 * v64) & 0xC337B0EE);
  LODWORD(v64) = ((BYTE2(v57) ^ 0xE) + 62854711 - ((2 * (WORD1(v57) ^ 0xDC0E)) & 0x6E)) ^ a21 ^ *(_DWORD *)&v80[4 * (BYTE1(v105) ^ 0x7C)] ^ *(_DWORD *)&v75[4 * (BYTE2(v57) ^ 0x52)] ^ (v106 - 509880201 - ((2 * v106) & 0xC337B0EE));
  int v108 = v105;
  unsigned int v109 = (v105 ^ 0xB3)
       - 570297387
       + ((2 * (v105 ^ 0xB3) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF);
  unsigned int v110 = *(_DWORD *)&v80[4 * (BYTE1(v104) ^ 0x1B)] ^ HIDWORD(a20) ^ *(_DWORD *)&v78[4 * (v72 ^ 0x4D)] ^ ((v72 ^ 0x20) - 570297387 + ((2 * (v72 ^ 0x20) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ (v77 >> 1) ^ (v65 - 509880201 - ((2 * v65) & 0xC337B0EE));
  LODWORD(v65) = v109 ^ HIDWORD(a19) ^ *(_DWORD *)&v80[4 * (BYTE1(v57) ^ 0x65)] ^ *(_DWORD *)&v78[4 * (v108 ^ 0xDE)];
  LODWORD(v57) = BYTE1(v72) ^ 0xA4;
  BYTE1(v108) = BYTE1(v65) ^ BYTE1(v107);
  LODWORD(v72) = v65 ^ v107 ^ BYTE2(v72);
  LODWORD(v53) = *(_DWORD *)&v80[4 * v57] ^ a20 ^ (v54 - 509880201 - ((2 * v54) & 0xC337B0EE));
  LODWORD(v54) = (v80[4 * v57] ^ a20 ^ (v54 + 119 - ((2 * v54) & 0xEE)) ^ BYTE2(v104));
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * ((v72 ^ 0x7641388B) >> 24));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  int v111 = v77 >> 1;
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * ((v64 ^ 0xF7E9CFA8) >> 24));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  int v112 = v77 >> 1;
  LODWORD(v51) = (((v72 ^ 0x7641388B) >> 16)
                + 62854711
                - (((v72 ^ 0x7641388B) >> 15) & 0x6E)) ^ *(_DWORD *)&v75[4
                                                                                     * (((v72 ^ 0x7641388B) >> 16) ^ 0x5C)];
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (BYTE3(v53) ^ 0xE7));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v57) = v77 >> 1;
  LODWORD(v54) = v111 ^ *(_DWORD *)&v78[4 * (v54 ^ 0x18)] ^ (((v64 ^ 0xF7E9CFA8) >> 16)
                                                                         + 62854711
                                                                         - (((v64 ^ 0xF7E9CFA8) >> 15) & 0x6E)) ^ *(_DWORD *)&v75[4 * (((v64 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ ((v54 ^ 0x75) - 570297387 + ((2 * (v54 ^ 0x75) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  LODWORD(v54) = (v54 - 509880201 - ((2 * v54) & 0xC337B0EE)) ^ *(_DWORD *)&v80[4 * (BYTE1(v110) ^ 0xEC)];
  LODWORD(v65) = v112 ^ *(_DWORD *)&v75[4 * (BYTE2(v110) ^ 0xA7)] ^ ((BYTE2(v110) ^ 0xFB)
                                                                   + 62854711
                                                                   - ((2 * (HIWORD(v110) ^ 0x57FB)) & 0x6E)) ^ ((v72 ^ 0x8B) - 570297387 + ((2 * (v72 ^ 0x8B) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v78[4 * (v72 ^ 0xE6)];
  HIDWORD(v77) = *(_DWORD *)(v76 + 4 * (HIBYTE(v110) ^ 0x57));
  LODWORD(v77) = HIDWORD(v77) ^ 0xC7C59764;
  LODWORD(v65) = (v65 - 509880201 - ((2 * v65) & 0xC337B0EE)) ^ *(_DWORD *)&v80[4 * (BYTE1(v53) ^ 0x6D)];
  LODWORD(v53) = WORD1(v53);
  LODWORD(v58) = *(_DWORD *)&v75[4 * (v53 ^ 0x6D)];
  LODWORD(v53) = ((v64 ^ 0xA8)
                - 570297387
                + ((2 * (v64 ^ 0xA8) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v78[4 * (v64 ^ 0xC5)] ^ ((v53 ^ 0x31) + 62854711 - 2 * ((v53 ^ 0x31) & 0x3F ^ v53 & 8));
  LODWORD(v72) = *(_DWORD *)&v80[4 * (BYTE1(v64) ^ 0x2D)];
  int v113 = HIDWORD(a11) ^ *(_DWORD *)&v80[4 * (BYTE1(v108) ^ 0xDA)] ^ ((v53 ^ v58 ^ (v77 >> 1))
                                                                   - 509880201
                                                                   - ((2 * (v53 ^ v58 ^ (v77 >> 1))) & 0xC337B0EE));
  LODWORD(v64) = (v65 + 772756375 - ((2 * v65) & 0x5C1EA72E)) ^ a19;
  unsigned int v114 = (v54 + 919410764 - ((2 * v54) & 0x6D9A3098)) ^ HIDWORD(a18);
  LODWORD(v76) = v72 ^ a18 ^ ((v110 ^ 0x2F)
                            - 570297387
                            + ((2 * (v110 ^ 0x2F) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ v57 ^ *(_DWORD *)&v78[4 * (v110 ^ 0x42)] ^ (v51 - 509880201 - ((2 * v51) & 0xC337B0EE));
  BYTE2(v78) = BYTE2(v113) ^ 0x8C;
  LODWORD(v51) = v114 ^ 0x351D74B9;
  int v115 = *(_DWORD *)(v48 - 120);
  unint64_t v116 = (char *)*(&off_99820 + v115 - 1929) - 8;
  unint64_t v117 = (char *)*(&off_99820 + SHIDWORD(a10)) - 8;
  unint64_t v118 = (char *)*(&off_99820 + (int)a10) - 4;
  LODWORD(v54) = (*(_DWORD *)&v118[4 * (BYTE2(v64) ^ 0x9E)] + 2129186456) ^ (*(_DWORD *)&v116[4
                                                                                            * (v76 ^ 0xC9)]
                                                                           - 2100870534);
  LODWORD(v65) = (*(_DWORD *)&v118[4 * (BYTE2(v76) ^ 0x38)] + 2129186456) ^ (*(_DWORD *)&v117[4
                                                                                            * ((v113 ^ 0x898C5DC8) >> 24)]
                                                                           + 26696721) ^ (*(_DWORD *)&v116[4 * (((v65 - 105 - ((2 * v65) & 0x2E)) ^ a19) ^ 0xA2)]
                                                                                        - 2100870534);
  LODWORD(v58) = *(_DWORD *)&v116[4 * (v113 ^ 0xC8)];
  LODWORD(v116) = *(_DWORD *)&v116[4 * (v114 ^ 0xB9)];
  LODWORD(v72) = *(_DWORD *)&v117[4 * (BYTE3(v64) ^ 0xE7)];
  int v119 = *(_DWORD *)&v117[4 * (BYTE3(v76) ^ 0xB8)];
  LODWORD(v117) = *(_DWORD *)&v117[4 * (HIBYTE(v114) ^ 0x65)];
  unint64_t v120 = (char *)*(&off_99820 + (int)a11) - 12;
  int v121 = (v54 - 2114776122 - ((2 * v54) & 0x3E6278C)) ^ *(_DWORD *)&v120[4 * (BYTE1(v113) ^ 0x61)] ^ (v117 + 26696721);
  LODWORD(v54) = *(_DWORD *)&v120[4 * (BYTE1(v64) ^ 0xA0)];
  LODWORD(v117) = *(_DWORD *)&v120[4 * (BYTE1(v76) ^ 0xE9)];
  LODWORD(v80) = *(_DWORD *)&v118[4 * BYTE2(v78)];
  LODWORD(v118) = *(_DWORD *)&v118[4 * BYTE2(v51)];
  uint64_t v122 = *(_DWORD *)&v120[4 * BYTE1(v51)] ^ a13 ^ (v65
                                                               - 2114776122
                                                               - ((2 * v65) & 0x3E6278C));
  LODWORD(v64) = HIDWORD(a7) ^ HIDWORD(a18) ^ (v121 + 919410764 - ((2 * v121) & 0x6D9A3098));
  uint64_t v123 = (uint64_t)*(&off_99820 + (int)a9);
  *(unsigned char *)(a6 + *(void *)(v48 - 248)) = *(unsigned char *)(v123 + (BYTE1(v122) ^ 0x99)) ^ 0x72;
  uint64_t v124 = (uint64_t)*(&off_99820 + SHIDWORD(a8));
  *(unsigned char *)(a6 + *(void *)(v48 - 240)) = *(unsigned char *)(v124 + (BYTE2(v64) ^ 0xADLL)) ^ 0xC5;
  uint64_t v125 = (uint64_t)*(&off_99820 + (int)a8);
  *(unsigned char *)(a6 + *(void *)(v48 - 200)) = *(unsigned char *)(v125 + (v122 ^ 0xFCLL)) ^ 0xE;
  unsigned int v126 = v54 ^ HIDWORD(a7) ^ (v58 - ((2 * v58 + 26117364) & 0x3E6278C) + 79320640) ^ (v119 + 26696721) ^ (v118 + 2129186456);
  *(unsigned char *)(a6 + *(void *)(v48 - 216)) = *(unsigned char *)(v124 + (BYTE2(v126) ^ 0x8CLL)) ^ 0x47;
  unint64_t v127 = (char *)*(&off_99820 + v115 - 1897) - 4;
  *(unsigned char *)(a6 + *(void *)(v48 - 208)) = (v127[BYTE3(v122) ^ 0xDELL] - 62) ^ 0x1B;
  *(unsigned char *)(a6 + *(void *)(v48 - 232)) = ((*(unsigned char *)(v124 + (BYTE2(v122) ^ 0x15))
                                            + (*(unsigned char *)(v124 + (BYTE2(v122) ^ 0x15)) ^ 0xDA)
                                            + 1) ^ 0xFE)
                                          + *(unsigned char *)(v124 + (BYTE2(v122) ^ 0x15));
  uint64_t v128 = HIDWORD(a9) ^ v117;
  uint64_t v129 = v128 ^ (v80 + 2129186456) ^ (v116 - 2100870534) ^ (v72
                                                                                        - ((2 * v72 + 53393442) & 0x3E6278C)
                                                                                        - 2088079401);
  *(unsigned char *)(a6 + *(void *)(v48 - 224)) = *(unsigned char *)(v125 + (v129 ^ 5)) ^ 0xFC;
  *(unsigned char *)(a6 + *(void *)(v48 - 168)) = (v127[BYTE3(v64) ^ 0x4ELL] - 62) ^ 0xE6;
  *(unsigned char *)(a6 + *(void *)(v48 - 152)) = (v127[HIBYTE(v126) ^ 0x9CLL] - 62) ^ 0xB8;
  uint64_t v130 = *(void *)(v48 - 176);
  *(unsigned char *)(a6 + v130) = (v127[BYTE3(v129) ^ 0x67] - 62) ^ 0x91;
  *(unsigned char *)(a6 + *(void *)(v48 - 160)) = *(unsigned char *)(v125 + (v126 ^ 0xF2)) ^ 0xF6;
  *(unsigned char *)(a6 + *(void *)(v48 - 192)) = *(unsigned char *)(v123 + (BYTE1(v126) ^ 0x1ELL)) ^ 0xD1;
  *(unsigned char *)(a6 + *(void *)(v48 - 144)) = *(unsigned char *)(v123 + (BYTE1(v129) ^ 0x33)) ^ 0xC8;
  *(unsigned char *)(a6 + *(void *)(v48 - 184)) = *(unsigned char *)(v123 + (BYTE1(v64) ^ 0xBCLL)) ^ 6;
  *(unsigned char *)(a6 + *(void *)(v48 - 136)) = *(unsigned char *)(v125 + (v64 ^ 0x9FLL)) ^ 0xE;
  *(unsigned char *)(a6 + *(void *)(v48 - 128)) = *(unsigned char *)(v124 + (BYTE2(v129) ^ 0xDLL)) ^ 0x8E;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a44 + 8 * ((29 * (((v130 - 2120040451 - 2 * ((v130 + 16) & 0x1A2BFEF ^ *(_DWORD *)(v48 - 252) & 2)) ^ 0x81A2BFED) < HIDWORD(a13))) ^ (v115 - 615))))(184, v129, 197, v130, v128, 2194096762, v122, HIDWORD(a9), a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_2AE88(int a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  unsigned int v9 = ((*v7 & 0x7FFFFFFE | v7[623] & 0x80000000) >> ((v5 - 104) ^ 0x51)) ^ v6;
  v7[623] = v7[396] ^ a3 ^ *(_DWORD *)(a5 + 4 * (*v7 & 1)) ^ (v9 + a2 - (a1 & (2 * v9)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1678 * (LODWORD(STACK[0x43C]) > 0x26F)) ^ v5)))();
}

uint64_t sub_2AF00()
{
  uint64_t v4 = v0;
  unint64_t v5 = ((97 * (v1 ^ 0x18D)) ^ (unint64_t)(v2 + 410)) + v0;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((35 * (v5 - v4 + 1381440370 >= (((v1 + 278) | 0x50F) ^ 0x7A7uLL))) ^ v1)))();
}

uint64_t sub_2AF70@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((v2 + a2 + 1067) ^ (29 * (a1 == 0)))))();
}

uint64_t sub_2B090(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1322 * ((a7 + 1 + v7) < 0x20)) ^ a3)))();
}

uint64_t sub_2B178()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((*(void *)(v1 + 32) == 0x330904BA72E93EC0) | v0)))();
}

uint64_t sub_2B1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x510] = 0;
  LODWORD(STACK[0x51C]) = 1284426096;
  STACK[0x590] = 0;
  LODWORD(STACK[0x5FC]) = 1284426096;
  return (*(uint64_t (**)(void))(v65
                              + 8
                              * ((55
                                * ((((10 * (v64 ^ 0x35)) ^ 0x3E) & 0xFE) != ((((5 * (v64 ^ 0x35) - 3) | 9) ^ 0x1E) + *(unsigned char *)(a64 - 0x18CFECAB777DA4F8) - *(unsigned char *)*(&off_99820 + v64 - 218)))) ^ (5 * (v64 ^ 0x135)))))();
}

uint64_t sub_2B270()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 ^ (164
                                     * (((v1 << (((v0 + 60) | 0x60) ^ 0xEF)) & 0xFE8963B2 ^ 0x7E892232)
                                      + (v1 ^ 0x40106EC6)
                                      - 470061313 == 1665147096)))))();
}

void sub_2B2E8()
{
}

uint64_t sub_2B2F4()
{
  uint64_t v7 = 4 * (v2 - 1364770032);
  unsigned int v8 = *(_DWORD *)(v3 + 4 * (v2 - 1364770033));
  int v9 = (((v1 + 11) ^ (v8 >> 30)) - 4 * (v8 >> 31) - 10) ^ v8;
  int v10 = ((v1 + 1566083941 * v9 - ((-1162799414 * v9) & v0)) ^ *(_DWORD *)(v3 + v7)) - v2;
  *(_DWORD *)(v3 + v7) = v10 - ((2 * v10 - 1565427232) & v0) - 1470178266;
  uint64_t v11 = 1759421093 * ((v6 + 0x3CEE76D65605BD6 - 2 * ((v6 - 192) & 0x3CEE76D65605C96)) ^ 0x2D70263DD61DECC2);
  *(_DWORD *)(v6 - 176) = 2021362417 - v11 + v4;
  *(_DWORD *)(v6 - 172) = v4 - v11 + 519879878;
  *(void *)(v6 - 184) = (v2 - 2071481200) - v11;
  *(_DWORD *)(v6 - 192) = v11;
  *(_DWORD *)(v6 - 160) = v4 - v11 + 519880083;
  *(_DWORD *)(v6 - 152) = v4 - v11 + 519879958;
  *(void *)(v6 - 168) = v11 ^ 0xD5E0717FLL;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v4 ^ 0xDDE)))(v6 - 192);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v6 - 156)))(v12);
}

void sub_2B440()
{
}

uint64_t sub_2B59C@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a1 - 1916032015);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v4 + (v8 & 0xF)) ^ *(unsigned char *)((v8 & 0xF) + v6 + 2) ^ *(unsigned char *)((v8 & 0xF) + v5 + 4) ^ (119 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((221 * (a1 - 1 == v3)) ^ (a2 - 1925))))();
}

uint64_t sub_2B608(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * (((((((a3 - 626) | 0x24) - 336) | 0x1A0) - 421)
                                              * ((unint64_t)(a2 - v6 - v4) > 0x1F)) ^ ((a3 - 626) | 0x24))))(v3);
}

uint64_t sub_2B650(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v10 = a4 + v5 + v8 + 668;
  uint64_t v11 = v4 + v10;
  long long v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((27 * ((((v6 & 0xFFFFFFE0) == 32) ^ ((v7 ^ 0x5C) + 1)) & 1)) ^ (v7 + 1689052243))))();
}

void sub_2B6CC()
{
  LODWORD(STACK[0x378]) = 0;
  STACK[0x380] = 0;
  JUMPOUT(0x176F4);
}

uint64_t sub_2B718(int a1, int a2, int a3, uint64_t a4, int a5)
{
  int v10 = a5 + 1520;
  uint64_t v11 = (a5 + 551);
  uint64_t v12 = (a2 + a1 + a3);
  unint64_t v13 = v9 + v12 + ((a5 + 750) ^ 0x50DLL);
  uint64_t v14 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  uint64_t v15 = v14 - v12;
  unint64_t v16 = v6 + v15;
  uint64_t v17 = (v11 ^ 0x444) + v14;
  unint64_t v18 = v6 + v17;
  unint64_t v19 = v5 + v15;
  unint64_t v20 = v5 + v17;
  unint64_t v21 = v7 + v15;
  unint64_t v22 = v7 + v17;
  BOOL v24 = v18 > v9 && v16 < v13;
  if (v20 > v9 && v19 < v13) {
    BOOL v24 = 1;
  }
  int v27 = v22 > v9 && v21 < v13 || v24;
  return (*(uint64_t (**)(void))(v8 + 8 * ((76 * v27) ^ v10)))();
}

uint64_t sub_2B7A8()
{
  LODWORD(STACK[0x5CC]) = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((*(_DWORD *)(STACK[0x250] + 360) - 1102148614) > 0xFFFFFFFD)
                                * ((5 * (v0 ^ 0x305)) ^ 0x515)) ^ v0)))();
}

void sub_2B7F4()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 175)))();
  JUMPOUT(0x2B810);
}

uint64_t sub_2B828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((99
                                * (((a7 + (a6 ^ 0x77F) - 1616) & (a6 ^ 0x15A) ^ 0xAA2EDD76)
                                 + (v8 & (2 * (a7 + (a6 ^ 0x77F) - 1616)))
                                 + 1439769225 < 4)) ^ a6)))();
}

uint64_t sub_2B88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59)
{
  return (*(uint64_t (**)(void))(v59
                              + 8
                              * (a59 ^ (47
                                      * (((2 * (a25 - ((2 * a23) & 0xCE3B8CD6) + 339827712)) & 0x717B0DAE ^ 0x403B0C86)
                                       + ((a25 - ((2 * a23) & 0xCE3B8CD6) + 339827712) ^ 0xDFA040BC)
                                       + 2138537477 != 942998748)))))();
}

uint64_t sub_2B95C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((46 * (((((v3 ^ 0x2BB) + 139) ^ ((v2 + v0 + 2) < 0x7FFFFFFF)) & 1) == 0)) ^ (v3 + 956))))();
}

uint64_t sub_2B9B0()
{
  int v6 = v0 + 1;
  int v7 = (v0 - 650028457) & 0x26BEA17F;
  unint64_t v8 = STACK[0x420];
  int v9 = STACK[0x4A0];
  unsigned int v10 = ((LODWORD(STACK[0x4A0]) << (v7 ^ 0x6E)) + 802287416) & 0xEA303576;
  int v11 = 1224239923 * ((-1065362320 - ((v5 - 192) | 0xC07FDC70) + ((v5 - 192) | 0x3F80238F)) ^ 0xCD33DE58);
  *(void *)(v5 - 168) = STACK[0x338];
  *(void *)(v5 - 160) = v1;
  *(void *)(v5 - 192) = v8;
  *(_DWORD *)(v5 - 152) = v2 - v11 + 640618308;
  *(_DWORD *)(v5 - 180) = (v6 + 368399000) ^ v11;
  *(_DWORD *)(v5 - 176) = v9 - v11 - v10 + 218174039;
  *(void *)(v5 - 144) = v3;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v6 + 1033)))(v5 - 192);
  int v13 = *(_DWORD *)(v5 - 184);
  LODWORD(STACK[0x5B4]) = v13;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((2000
                                              * (v13 == (v7 ^ 0xFD)
                                                      - 1373544826
                                                      + ((v7 - 860865180) & 0x334FC77C)
                                                      - 1506)) ^ v7)))(v12);
}

uint64_t sub_2BAF8()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((v2 ^ 0x1B7) * (v0 == v1)) ^ v2)))(2282780948);
}

void sub_2BB3C()
{
  uint64_t v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x2BB54);
}

uint64_t sub_2BC08@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((a1 == v1) ^ (11 * (v2 ^ 0x6E))) & 1) * ((v2 - 941) ^ 0x2FC)) ^ v2)))();
}

uint64_t sub_2BC50(uint64_t a1)
{
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 487)))(a1, 4182676990) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 * (((v1 ^ 0xD7) - 336) ^ 0x559)) ^ v1)))();
}

void sub_2BC9C()
{
}

uint64_t sub_2BCA4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (((v1 != v2) * ((v3 ^ 0x4D7) - 1653)) ^ v3)))(a1, 71, 2456046688, 1838920607);
}

uint64_t sub_2BCF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v22
                                           + 8
                                           * ((69
                                             * (((a20 - 1284426096) ^ 0xDFDFFCFA72EFEB3FLL)
                                              + 0x2020030594EEA67FLL
                                              + (((unint64_t)(a20 - 1284426096) << (v20 ^ 0xBEu)) & 0xE5DFD67E) != v21)) ^ v20)))(v20 ^ 0x495u);
}

uint64_t sub_2BD9C@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  *(unsigned char *)(v7 + (v5 - 951018786)) = *(unsigned char *)(v4 + a4 + a3);
  return (*(uint64_t (**)(void))(v8 + 8 * ((v5 - 951018785 < (((v6 ^ 1) + a1) & a2 ^ 0x78u)) | v6 ^ 1)))();
}

uint64_t sub_2BDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, unsigned int a10, uint64_t a11, int a12)
{
  int v18 = (*(_DWORD *)(a1 + 16) ^ v16) + *(_DWORD *)(v12 - 0x7761D79CB8DF4D03) - 692724659;
  unsigned int v19 = 3804331
      * (((&a9 | 0x8C86442E) - &a9 + (&a9 & 0x7379BBD0)) ^ 0x7618B778);
  a11 = v12;
  a12 = v19 + v17 + 227;
  a9 = v19 + 1177624764;
  a10 = v19 + 262228376 + v18;
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v15 + 8 * (v17 + 1662)))(&a9);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (((*v14 == v13) * (v17 + 918)) ^ v17)))(v20);
}

uint64_t sub_2BEC0@<X0>(int a1@<W8>)
{
  unint64_t v4 = 1178560073
     * (((~(v3 - 168) | 0x312ACB43FB8FA2DCLL) + ((v3 - 168) | 0xCED534BC04705D23)) ^ 0xF36C37FC36665D62);
  *(void *)(v3 - 152) = v1 - v4;
  *(_DWORD *)(v3 - 132) = (a1 + 298737814) & 0x3FCEF196 ^ v4;
  *(void *)(v3 - 168) = v4 ^ 0x7EC20828;
  *(_DWORD *)(v3 - 160) = ((a1 + 298737814) ^ 0x1B) + v4;
  *(_DWORD *)(v3 - 156) = -1178560073 * (((~(v3 - 168) | 0xFB8FA2DC) + ((v3 - 168) | 0x4705D23)) ^ 0x36665D62);
  *(_DWORD *)(v3 - 144) = (a1 - 504207093) ^ v4;
  *(_DWORD *)(v3 - 136) = (a1 + 298737814) ^ v4;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 2142)))(v3 - 168);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 140)))(v5);
}

uint64_t sub_2BFAC()
{
  int v3 = v0 & 0x7535773F;
  int v4 = v0 & 0x7535773F ^ 0x418;
  int v5 = ((v0 & 0x7535773F) - 1130534458) & 0x436297FF;
  BOOL v7 = v1[1] == 0x5CF1D1600198EA10 || (*v1 | v1[5]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((v7 * ((v5 ^ 0xFFFFFED5) + 29 * v4)) ^ v3)))();
}

uint64_t sub_2C02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * ((15
                                * ((unint64_t)(&a25 + a13 + v25 + ((v26 + 2080448194) & 0x27DF ^ 0xFFFFF824)) < ((v26 + 88246924) & 0x5CB ^ 0x19BuLL))) ^ v26)))();
}

uint64_t sub_2C098()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((43 * (((((v3 - 1823194586) & 0x6CABBFC7) + v0) ^ v2) >= 0)) ^ (v3 - 1823194586) & 0x6CABBFC7u)))();
}

void sub_2C0F4()
{
}

void sub_2C128()
{
}

uint64_t sub_2C198(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((393
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 2) - 38)))
                                 + ((*(unsigned __int8 *)(a2 + 2) - 38) ^ (v4 + v3 - 142)) == v4)) ^ v3)))();
}

uint64_t sub_2C1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((v24 - 117) ^ (a22 - v22 - a4 - 0x1E6EF7153090DC2 < (unint64_t)(v24 - 29) - 1711)) & 1 | v24)))(v23);
}

uint64_t sub_2C228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v47 = 235795823 * ((2 * ((v46 - 192) & 0x8EBAC30) - (v46 - 192) - 149662769) ^ 0x63B91A96);
  *(_DWORD *)(v46 - 176) = 713989200 - v47;
  *(_DWORD *)(v46 - 172) = v47 + v44 + 62;
  unint64_t v48 = STACK[0x3D0];
  *(void *)(v46 - 160) = 0;
  *(void *)(v46 - 152) = v48;
  *(void *)(v46 - 136) = a44;
  *(void *)(v46 - 192) = 0;
  *(void *)(v46 - 184) = a42;
  *(void *)(v46 - 168) = a16;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v45 + 8 * (v44 + 911)))(v46 - 192);
  int v50 = *(_DWORD *)(v46 - 144);
  LODWORD(STACK[0x624]) = v50;
  return (*(uint64_t (**)(uint64_t))(v45 + 8 * (((v50 == -1373544826) * (v44 - 1068)) ^ v44)))(v49);
}

uint64_t sub_2C2EC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v3 + v1 + 3 * (v0 ^ 0x378u) - 1310 < 0x7FFFFFFF) * ((65 * (v0 ^ 0x2C7)) ^ 0x289)) ^ v0)))();
}

uint64_t sub_2C33C()
{
  int v4 = v2 + 1111084722 + ((v0 + 1412049100) & 0xABD5D3FF);
  int v6 = v4 > 89871324 || v4 < v3 - 2057613408 + 31 * (v0 ^ 0x50D);
  return (*(uint64_t (**)(void))(v1 + 8 * (((8 * v6) | (v6 << 6)) ^ v0)))();
}

uint64_t sub_2C3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W8>)
{
  if ((a6 - 845113408) <= 0x18 && ((1 << (a6 - 64)) & 0x1000581) != 0) {
    return sub_2C3E4(a1, a2, a3, a4, a5);
  }
  else {
    return sub_32038();
  }
}

uint64_t sub_2C3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((71
                                * ((v5 & 0xFFFFFFFFFFFFFFFLL) != ((v6 - v7 + 945) ^ 0xFFFFFFFFFFFFFD67)
                                                               + (v6 ^ (v7 + 214)))) ^ (a5 + v6 + 615))))();
}

uint64_t sub_2C43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  *(void *)(*(void *)(a17 + 96) + 504) = v42 + 1;
  *(_DWORD *)(*(void *)(a17 + 96) + 496) = a19 - 1;
  int v45 = 628203409 * ((2 * ((v44 - 152) & 0x2C413658) - (v44 - 152) - 742471261) ^ 0x5136C590);
  *(void *)(v44 - 136) = &STACK[0x843828D0CDF34E9];
  *(_DWORD *)(v44 - 152) = v45 + 1172345435;
  *(_DWORD *)(v44 - 144) = v45 - 290923570;
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(v43 + 17240))(v44 - 152);
  return (*(uint64_t (**)(uint64_t))(v43
                                            + 8
                                            * ((127
                                              * (a19
                                               + 1670725209
                                               + ((2 * a42) & 0x6C ^ 0xC)
                                               + (a42 & 0x3F ^ 0x4FDBF7F9u) < 0xFFFFFFC0)) ^ 0x63Du)))(v46);
}

uint64_t sub_2C614@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 8) + a4 + a5 + ((a2 - 1109940395) & (v7 + 1479))) = ((a3 ^ v8) >> v9)
                                                                                              - ((2 * ((a3 ^ v8) >> v9)) & 0xCA)
                                                                                              - 27;
  return (*(uint64_t (**)(void))(v5 + 8 * ((977 * (((a2 - 1109940395) ^ v7) + a4 == v6 + 1899)) ^ a2)))();
}

void sub_2C684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  int v37 = ((((2 * (v36 - 144)) | 0x9025B290) - (v36 - 144) - 1209194824) ^ 0x4845B35) * v34;
  *(_DWORD *)(v36 - 128) = v37 + v35 - 831;
  *(_DWORD *)(v36 - 144) = 774154736 - v37;
  *(void *)(v36 - 136) = &a32 + v33;
  (*(void (**)(uint64_t))(v32 + 8 * (v35 + 608)))(v36 - 144);
  JUMPOUT(0x61E4);
}

uint64_t sub_2C71C@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  uint64_t v10 = a1 + a3 + v7 + ((a2 + 884) | 0x40u) - 765 - 1093 + v9;
  uint64_t v11 = ((_BYTE)a1 + (_BYTE)a3 + (_BYTE)v7 + ((a2 + 116) | 0x40) + 3 - 69) & 0xF;
  unint64_t v12 = v11 + v6 - v10;
  uint64_t v13 = (v11 | v5) - v10;
  uint64_t v14 = (v11 | v4) - v10;
  BOOL v16 = (unint64_t)(v3 - v9) >= 0x10 && v12 >= 0x10 && (unint64_t)(v13 + 2) >= 0x10;
  unint64_t v17 = v14 + 1;
  int v19 = !v16 || v17 < 0x10;
  return (*(uint64_t (**)(void))(v8 + 8 * ((47 * v19) ^ a2)))();
}

uint64_t sub_2C798@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v11 = a1 ^ 0x70;
  unsigned int v12 = 1755732067
      * (((&a4 ^ 0xE69D8F21 | 0x727E95CD)
        - (&a4 ^ 0xE69D8F21)
        + ((&a4 ^ 0xE69D8F21) & 0x8D816A30)) ^ 0x4A25A737);
  a6 = ((a1 ^ 0x70) + 692) ^ v12;
  a7 = &STACK[0x5248BA885C210B08];
  a8 = v12 ^ 0x7DEEE1E2;
  a4 = &STACK[0x18DA4F3048EDB6D8];
  a5 = v10;
  uint64_t v13 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * ((a1 ^ 0x70) + 1291)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v10 - 0x7761D79CB8DF4CFBLL) == v8)
                                              * (((v11 - 886) | 0x4D1) ^ (v11 - 636776384) & 0x25F46F4F ^ 0x29F)) ^ v11)))(v13);
}

uint64_t sub_2C8B0@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W6>, uint64_t a4@<X8>)
{
  unsigned int v7 = a2 + v5 + ((a3 + 328411377) & 0xEC6CD53D) + (a1 ^ v4) + 575;
  unsigned int v8 = ((((a3 - 967863869) & 0x39B068FF) - 1411418542) & (2 * v7)) + (v7 ^ 0x55EFBB77) - 1337376072;
  unsigned int v9 = v6 - 1255120571;
  int v10 = (v9 < 0x638FE2F) ^ (v8 < 0x638FE2F);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < 0x638FE2F;
  }
  return (*(uint64_t (**)(void))(a4 + 8 * ((56 * v11) ^ a3)))();
}

void sub_2C970()
{
}

uint64_t sub_2C97C(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((788
                                * ((((*(unsigned __int8 *)(a2 + 8) - 1) << ((v4 - 29) ^ a3)) & v6)
                                 + ((*(unsigned __int8 *)(a2 + 8) - 1) ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_2C9D8@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a2 + 1 == v3 + 44) | (2 * (a2 + 1 == v3 + 44))) ^ a1)))();
}

uint64_t sub_2CA98@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, unsigned int a5@<W4>, int a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, int a9@<W8>)
{
  BOOL v13 = a5 < a1;
  *(unsigned char *)(a4 + (v9 + v11)) = *(unsigned char *)(a8 + (v10 + a2))
                                            - (a7 & (2 * *(unsigned char *)(a8 + (v10 + a2))))
                                            - 27;
  unsigned int v14 = ((a9 - 419) | 2) + a3 + v10;
  int v15 = v13 ^ (v14 < a1);
  BOOL v16 = v14 < a5;
  if (!v15) {
    BOOL v13 = v16;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v13 * a6) ^ a9)))();
}

uint64_t sub_2CB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, int a19)
{
  a17 = &STACK[0x2F7E69BD89C711D];
  a19 = v19
      - 460628867 * ((&a17 - 828698224 - 2 * ((unint64_t)&a17 & 0xCE9B1190)) ^ 0x820D93ED)
      - 1153;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v21 + 8 * (v19 ^ 0xE2C)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8 * (((a18 != v20) * ((v22 + (v19 ^ 0x4A1) - 727) ^ (v22 + 158))) ^ v19)))(v23);
}

uint64_t sub_2CBB4@<X0>(uint64_t a1@<X8>, int a2, int a3)
{
  *(_DWORD *)(a1 - 0x56530F603BC303ACLL) = a3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((*(void *)(v4 + 32) == 0x330904BA72E93EC0) | (v3 + 1474))))();
}

uint64_t sub_2CC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  uint64_t v50 = (v48 + v45);
  int v51 = *(_DWORD *)(&a33 + v50 + 72);
  *(unsigned char *)(a2 + v50) = v51 ^ 0x8F;
  *(unsigned char *)(a2 + (v50 + 1)) = v47 - 107 + (BYTE1(v51) ^ 0x73) - ((2 * (BYTE1(v51) ^ 0x73)) & 0xCA) - 10;
  *(unsigned char *)(a2 + (v50 + 2)) = (BYTE2(v51) ^ 0x2D) - ((2 * (BYTE2(v51) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a2 + (v50 + 3)) = (HIBYTE(v51) ^ 0x52) - ((2 * (HIBYTE(v51) ^ 0x52)) & 0xCA) - 27;
  if (v48 + 2132746472 < v46 != a45 + 1885258533 < v46) {
    BOOL v52 = a45 + 1885258533 < v46;
  }
  else {
    BOOL v52 = v48 + 2132746472 < (a45 + 1885258533);
  }
  return (*(uint64_t (**)(void))(v49 + 8 * ((53 * !v52) ^ v47)))();
}

uint64_t sub_2CCF0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1974 * (v1 <= v0 + 623)) ^ (LODWORD(STACK[0x3FC]) - 382))))();
}

void sub_2CD30()
{
}

uint64_t sub_2CD50(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8
                                                     * (int)(((((v2 ^ 0x21D) + 2027898454) & 0x8720B7B4) + 1099) ^ v2 ^ 0x21D)))(a1, 1071499190);
}

void sub_2CDD4()
{
  v0[31] = 0x51CA1D3C38A092EALL;
  v0[32] = v0 + 33;
  v0[65] = 0x51CA1D3C38A092EALL;
  v0[66] = v0 + 67;
  STACK[0x390] = (unint64_t)v0 + 0x67843F9A1244BCD3;
  v0[99] = 0x51CA1D3C38A092EALL;
  v0[100] = v0 + 101;
  STACK[0x398] = (unint64_t)v0 + 0x67843F9A1244BDE3;
  v0[133] = 0x51CA1D3C38A092EALL;
  v0[134] = v0 + 135;
  STACK[0x3A0] = (unint64_t)v0 + 0x67843F9A1244BEF3;
  v0[167] = 0x51CA1D3C38A092EALL;
  v0[168] = v0 + 169;
  STACK[0x3D8] = (unint64_t)v0 + 0x67843F9A1244C003;
  unint64_t v6 = STACK[0x4B0] + 4;
  int v7 = v1 << ((16 * (v3 ^ 0xD2)) ^ 0x51);
  *(void *)(v5 - 168) = (char *)v0 + 0x67843F9A1244BBC3;
  int v8 = 460628867 * ((v5 - 742779128 - 2 * ((v5 - 192) & 0xD3BA17C8)) ^ 0x9F2C95B5);
  int v9 = v3 - 320;
  *(_DWORD *)(v5 - 184) = v3 - 320 + v8;
  *(_DWORD *)(v5 - 176) = v8 + (v1 ^ 0x51DAB138) + 868023252 + (v7 & 0xFFF7DF7C ^ 0x5C429D0C);
  *(void *)(v5 - 192) = v6;
  uint64_t v10 = 8 * (v3 + 1676);
  STACK[0x388] = v10;
  (*(void (**)(uint64_t))(v4 + v10))(v5 - 192);
  uint64_t v11 = v6 + v2;
  int v12 = 460628867 * ((((2 * (v5 - 192)) | 0xF786B5D8) - (v5 - 192) + 71083284) ^ 0xB755D891);
  *(void *)(v5 - 192) = v11;
  *(void *)(v5 - 168) = STACK[0x390];
  *(_DWORD *)(v5 - 176) = v12 + (v1 ^ 0xD1DAB178) - 1279460460 + (v7 & 0xFFF7DFFC ^ 0x5C429D0C);
  *(_DWORD *)(v5 - 184) = v3 - 320 + v12;
  uint64_t v13 = 8 * (v3 ^ 0x9B4);
  STACK[0x390] = v13;
  (*(void (**)(uint64_t))(v4 + v13))(v5 - 192);
  uint64_t v14 = v11 + v2;
  int v15 = 460628867 * ((((v5 - 192) | 0xEF072E79) - ((v5 - 192) & 0xEF072E79)) ^ 0xA391AC04);
  *(void *)(v5 - 192) = v14;
  *(void *)(v5 - 168) = STACK[0x398];
  *(_DWORD *)(v5 - 176) = v15 + (v1 ^ 0x919FA170) - 201725028 + (v7 & 0x7F7DFFEC ^ 0x5C40BD0C);
  *(_DWORD *)(v5 - 184) = v3 - 320 + v15;
  unint64_t v16 = STACK[0x388];
  (*(void (**)(uint64_t))(v4 + STACK[0x388]))(v5 - 192);
  uint64_t v17 = v14 + v2;
  int v18 = 460628867 * (((v5 - 192) & 0xE3F88CC4 | ~((v5 - 192) | 0xE3F88CC4)) ^ 0x5091F146);
  *(void *)(v5 - 192) = v17;
  *(void *)(v5 - 168) = STACK[0x3A0];
  *(_DWORD *)(v5 - 176) = v18 + (v1 ^ 0x1999A110) + 2080369660 + (v7 & 0x6F71FF2C ^ 0x4C40BD0C);
  *(_DWORD *)(v5 - 184) = v9 + v18;
  (*(void (**)(uint64_t))(v4 + v16))(v5 - 192);
  int v19 = 460628867 * ((((v5 - 192) | 0x6C255846) - ((v5 - 192) & 0x6C255846)) ^ 0x20B3DA3B);
  *(void *)(v5 - 192) = v17 + v2;
  *(void *)(v5 - 168) = STACK[0x3D8];
  *(_DWORD *)(v5 - 176) = v19 + (v1 ^ 0x55DFA155) + 934931391 + (v7 & 0xF7FDFFA6 ^ 0x5440BD04);
  *(_DWORD *)(v5 - 184) = v9 + v19;
  (*(void (**)(uint64_t))(v4 + STACK[0x390]))(v5 - 192);
  JUMPOUT(0x1D4C0);
}

uint64_t sub_2D208(_DWORD *a1)
{
  unsigned int v2 = *a1 - 1734042137 * ((a1 & 0x8260E9F2 | ~(a1 | 0x8260E9F2)) ^ 0x2151D540);
  uint64_t result = (*(uint64_t (**)(char *, void (*)()))((char *)*(&off_99820 + (int)(v2 ^ 0x65081064))
                                                         + 8 * (int)(v2 ^ 0x65081894)
                                                         - 4))((char *)*(&off_99820 + (int)(v2 - 1695027416)) - 8, sub_1B1A0);
  int v4 = *(_DWORD *)*(&off_99820 + (int)(v2 ^ 0x6508108F));
  if (result) {
    int v4 = 1373504568;
  }
  a1[1] = v4;
  return result;
}

uint64_t sub_2D2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((a6 + ((v8 - 769654073) | 0xC0DA441) - 230) * (v6 == v7)) ^ v8)))();
}

void sub_2D31C(uint64_t a1)
{
  uint64_t v2 = (uint64_t)*(&off_99820
                + ((-19 * (dword_A39B0 ^ 0xED ^ qword_A39F8)) ^ byte_7AAD0[byte_77C70[(-19 * (dword_A39B0 ^ 0xED ^ qword_A39F8))] ^ 0xCB])
                - 12);
  uint64_t v3 = *(void *)(v2 - 4);
  int v4 = (unint64_t *)*(&off_99820
                           + ((-19 * (v3 ^ qword_A39F8 ^ 0xED)) ^ byte_7AAD0[byte_77C70[(-19 * (v3 ^ qword_A39F8 ^ 0xED))] ^ 0xCB])
                           - 58);
  unint64_t v5 = (unint64_t)&v9[*v4 ^ v3];
  uint64_t v6 = 1469428717 * v5 + 0x13BC45BED9160A13;
  unint64_t v7 = 1469428717 * (v5 ^ 0xEC43BA4126E9F5EDLL);
  *(void *)(v2 - 4) = v6;
  *int v4 = v7;
  LODWORD(v4) = 1469428717 * ((v7 - *(_DWORD *)(v2 - 4)) ^ 0x26E9F5ED);
  int v8 = (char *)*(&off_99820
               + ((-19 * (dword_A39B0 ^ 0xED ^ qword_A39F8)) ^ byte_80450[byte_7ABD0[(-19 * (dword_A39B0 ^ 0xED ^ qword_A39F8))] ^ 0x1E])
               + 148)
     - 4;
  (*(void (**)(char *, uint64_t (*)()))&v8[8
                                                   * (byte_7AAD4[(byte_77C7C[v4 - 12] ^ 0x33)
                                                                                - 4] ^ v4)
                                                   + 15216])((char *)*(&off_99820+ (byte_77F78[(byte_84240[v4] ^ 0x3D) - 8] ^ v4)- 47)- 4, sub_33208);
  __asm { BRAA            X10, X17 }
}

void sub_2D4F8()
{
}

uint64_t sub_2D518@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25)
{
  int v29 = v25 + 240;
  int v30 = (v25 + 240) ^ 0x4824F6D0;
  unsigned int v31 = (v26 + v25 + 240 - 1194) ^ 0xEAFA1517;
  BOOL v33 = a25 - v27 != v30 || a1 == v31;
  return (*(uint64_t (**)(void))(v28 + 8 * ((78 * v33) ^ v29)))();
}

void sub_2D578(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_2D5E0@<X0>(uint64_t a1@<X5>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (a3 - 853605374)) = *(unsigned char *)(a2 + (v5 - 158929244));
  return (*(uint64_t (**)(void))(v7 + 8 * (v3 ^ (4 * (v6 + v4 + 18 < ((2 * v3) ^ 0x1D6u))))))();
}

uint64_t sub_2D63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  STACK[0x278] = a7;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((1759 * (v7 == v9 + LODWORD(STACK[0x3FC]) - 1104 - 256)) ^ (LODWORD(STACK[0x3FC]) - 1013))))();
}

uint64_t sub_2D674()
{
  unsigned int v5 = ((v2 + 51) ^ 0x214)
     + (((v4 - v3) >> 4) & 0xFFFFEFE ^ 0xBFEB880)
     + (((v4 - v3) >> 5) ^ 0xFA00A33F)
     - 1033265096;
  int v6 = (v1 > 0x3D965F60) ^ (v5 < ((7 * ((v2 + 51) ^ 0x214)) ^ 0xC269A6C7));
  BOOL v7 = v5 < v1 - 1033264993;
  if (v6) {
    BOOL v7 = v1 > 0x3D965F60;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((1083 * v7) ^ (v2 + 51))))();
}

uint64_t sub_2D724@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 + v5 + a2 - 1) = v6;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 + v5 < (unint64_t)(v3 - 1304)) * a1) ^ v2)))();
}

uint64_t sub_2D754()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((952
                                * ((((v1 & 0x2638E773) - 1080) & v0) == ((((v1 & 0x2638E773) - 768) | 0x400) ^ 0x550))) ^ v1 & 0x2638E773u)))();
}

uint64_t sub_2D7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((1013 * (((4 * (a9 ^ 0x75B)) ^ (v24 - 1252) ^ (4 * (a9 ^ 0x75B) + 1130876293)) == -1373544826)) ^ (4 * (a9 ^ 0x75B)))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24);
}

void sub_2D804(uint64_t a1)
{
  int v1 = 1224239923 * (((a1 | 0xC16B5AED) - (a1 & 0xC16B5AED)) ^ 0x33D8A73A);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_2D8D0()
{
  return sub_2D8D8((v0 + 64));
}

uint64_t sub_2D8D8@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int8x16_t v10 = *(int8x16_t *)(v6 + (v5 + v2 + v3 + 16));
  *(int8x16_t *)(a1 + v3) = vaddq_s8(vsubq_s8(v10, vandq_s8(vaddq_s8(v10, v10), v9)), v8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v3 == 48) * v4) ^ (a2 + 808))))();
}

uint64_t sub_2D920(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (v6 + 510)))(a1, 0);
  if (result == 16)
  {
    int v3 = 1733248770;
    goto LABEL_7;
  }
  if (result == 12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v2 ^ 0xEF4)))(a1);
    goto LABEL_8;
  }
  if (result)
  {
    int v3 = -17347737;
    goto LABEL_7;
  }
  *int v4 = a1;
  int v3 = 469093697;
LABEL_8:
  *(_DWORD *)(v1 + 12) = 1275523731 * v3 + 2051912109;
  return result;
}

uint64_t sub_2D9B8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((17 * ((v1 + 7) ^ 0x6CF) - 787) ^ (v1 - 773)) * (v0 > 0x1F)) ^ (v1 + 7))))();
}

uint64_t sub_2D9F4@<X0>(int a1@<W2>, unsigned int a2@<W3>, int a3@<W4>, int a4@<W5>, char a5@<W6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v15 = (v10 + a1) & a2;
  uint64_t v16 = (v11 + a4);
  *(unsigned char *)(a6 + v16 + 4) = ((v16 & 0xF) * a5) ^ *(unsigned char *)(v12 + v16) ^ *(unsigned char *)(v7 + (v16 & 0xF)) ^ *(unsigned char *)(a7 + (v16 & 0xF)) ^ *(unsigned char *)((v16 & 0xF) + v8 + v15 - 1359) ^ v13;
  return (*(uint64_t (**)(void))(v14
                              + 8 * (int)(((v11 - 1 == (v15 ^ a3 ^ v9)) * (v15 - 896)) ^ (v15 + 423))))();
}

uint64_t sub_2DA74()
{
  *(_DWORD *)(v2 - 192) = 1225351577 * ((v2 - 1120227382 - 2 * ((v2 - 192) & 0xBD3AB08A)) ^ 0x9EA0689C)
                        + 426522076
                        + v0
                        + 795;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0x8C2)))(v2 - 192);
  LODWORD(STACK[0x2B0]) += v0 ^ 0x93;
  *(_DWORD *)(v2 - 192) = (v0 + 1077) ^ (1224239923
                                       * ((-2 - ((~(v2 - 192) | 0x2566DBC3) + ((v2 - 192) | 0xDA99243C))) ^ 0xD7D52614));
  *(unsigned char *)(v2 - 160) = (51 * ((-2 - ((~(v2 + 64) | 0xC3) + ((v2 + 64) | 0x3C))) ^ 0x14)) ^ 0x55;
  *(void *)(v2 - 168) = STACK[0x258];
  *(void *)(v2 - 184) = STACK[0x260];
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x8EC)))(v2 - 192);
  LODWORD(STACK[0x5B4]) = *(_DWORD *)(v2 - 176);
  LODWORD(STACK[0x2B4]) = 1318476601;
  return sub_2DB98(v3, 249, 1373504863);
}

uint64_t sub_2DB98()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((68 * (v0 ^ 0x7B) - 1747576947) & 0x6829E3FC) + 918) * (v1 == v3)) ^ v0)))();
}

void sub_2DBE4()
{
}

uint64_t sub_2DBEC(uint64_t result)
{
  uint64_t v1 = 1178560073 * (((result | 0x39CAC1B204E59057) - (result & 0x39CAC1B204E59057)) ^ 0x473C2F236F39017);
  unint64_t v2 = *(void *)(result + 16) + v1;
  unint64_t v3 = *(void *)result ^ v1;
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 >= v3;
  int v6 = !v4;
  if (((*(_DWORD *)(result + 12) + v1) & 1) == 0) {
    BOOL v5 = v6;
  }
  BOOL v4 = !v5;
  uint64_t v7 = 36;
  if (!v4) {
    uint64_t v7 = 32;
  }
  *(_DWORD *)(result + 28) = *(_DWORD *)(result + v7) ^ v1 ^ (*(_DWORD *)(result + 8) - v1);
  return result;
}

uint64_t sub_2DC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53)
{
  int v53 = *(_DWORD *)(a1 + 28) + 3804331 * ((((2 * a1) | 0x5B2BA828) - a1 - 764793876) ^ 0xD70B2742);
  unsigned int v54 = 628203409 * ((v56 & 0x191DCCAC | ~(v56 | 0x191DCCAC)) ^ 0x646A3F60);
  v56[0] = v53 + v54 + 1172345372;
  v56[2] = v54 - 290923570;
  uint64_t v57 = &STACK[0x843828D0CDF3549];
  (*(void (**)(_DWORD *))((char *)*(&off_99820 + v53 + 89) + 8 * v53 + 16732))(v56);
  return sub_267F8(110, 1610590544, 25, -1098794543, 202, 13, v53, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_2DF74@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 8 * (a1 + 942)))(*v4);
  _DWORD *v3 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 1102148612;
  *(_DWORD *)(v1 + 56) = 490784367;
  return result;
}

uint64_t sub_2DFD0(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 24) = a4;
  return result;
}

uint64_t sub_2DFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v14 - 120) = v11;
  *(void *)(v14 - 112) = a11;
  *(_DWORD *)(v14 - 104) = (v13 + 1074) ^ (1734042137
                                         * ((((v14 - 120) | 0x9B585179) + (~(v14 - 120) | 0x64A7AE86)) ^ 0xC7969235));
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 ^ 0x6FD)))(v14 - 120);
  return sub_2E03C(v15);
}

uint64_t sub_2E078()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((((v3 + 1968713411) ^ 0x92EDE7E2 ^ (v1 + 2259) ^ (v3 + 1968713411) & 0x8AA7CE76)
                                     * (v2 > 0x1F)) ^ v3)))();
}

uint64_t sub_2E0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v16 - 128) = a14;
  *(void *)(v16 - 120) = &STACK[0x67843F9A1244BAFB];
  *(_DWORD *)(v16 - 112) = (v15 + 935) ^ (1734042137
                                        * ((((v16 - 128) | 0x72BE3ED3) - ((v16 - 128) & 0x72BE3ED3)) ^ 0x2E70FD9E));
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x646)))(v16 - 128);
  *(void *)(v16 - 112) = a14;
  *(void *)(v16 - 120) = a13;
  *(_DWORD *)(v16 - 128) = (v15 + 647) ^ (1374699841
                                        * ((8117679 - ((v16 - 128) | 0x7BDDAF) + ((v16 - 128) | 0xFF842250)) ^ 0x92703A59));
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 ^ 0x98C)))(v16 - 128);
  BOOL v18 = *(_DWORD *)(v16 - 124) <= ((v15 - 271) | 0x261u) + 645999156;
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * (((4 * v18) | (8 * v18)) ^ v15)))(v17);
}

uint64_t sub_2E218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,unsigned int a50)
{
  int v53 = 3804331 * ((2 * ((v52 - 168) & 0x6A05AD98) - (v52 - 168) - 1778757019) ^ 0x6F64A133);
  *(_DWORD *)(v52 - 168) = v53 + v50 + 1355;
  *(_DWORD *)(v52 - 164) = v53 ^ a12;
  STACK[0x320] = a28;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v51 + 8 * (v50 + 2100)))(v52 - 168);
  uint64_t v55 = a50 & (v50 ^ 0xDLL);
  *(&a41 + (v55 ^ 0xF)) = 101;
  return (*(uint64_t (**)(uint64_t))(v51 + 8 * ((425 * ((v55 ^ 0xF) > 0x37)) ^ v50)))(v54);
}

uint64_t sub_2E32C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v18 = v15 + a9;
  if (v18 >= 0) {
    unsigned int v19 = v18;
  }
  else {
    unsigned int v19 = -v18;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (int)((((674 * (v16 ^ 0x516) + 51) ^ (v16 + 630763570) & 0xDA674FFD) * (v19 > 0x82)) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_2E384()
{
  int v4 = v1 + 152230860;
  BOOL v5 = v4 < ((v2 + 1014089749) & 0x438E375F) - 623053391;
  BOOL v6 = v3 + 152230860 < v4;
  if (v3 + 152230860 < -623052536 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((!v6 * (v2 - 987)) ^ v2)))();
}

uint64_t sub_2E404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (int)(((*(_DWORD *)(v12 + 72) == ((((v10 + 1603055971) & 0xA0734DF7) + 1946170123) | 0x8300002B) + a5) * ((((v10 + 1603055971) & 0xA0734DF7) + 504) ^ 0x42)) ^ (v10 + 1603055971) & 0xA0734DF7)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_2E474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,int a23)
{
  unsigned int v31 = &a23 + 6 * v24;
  v31[2] = v25;
  v31[3] = v29;
  *((void *)v31 + 2) = a18;
  v31[6] = a20;
  a23 = v23 + a9 - 133;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((1007 * ((a9 ^ 0x118u) + *(_DWORD *)(v28 + 48 * v27 + 32) + 220123653 < v30)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13);
}

uint64_t sub_2E4EC(unsigned int a1)
{
  int v6 = (v2 - 1233) | 0x234;
  BOOL v7 = v1 < a1;
  unsigned int v8 = v4 + v5 + 1077;
  int v9 = v7 ^ (v8 < ((4 * v6) ^ 0xCE0u) + v4);
  BOOL v10 = v8 < v1;
  if (!v9) {
    BOOL v7 = v10;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((121 * v7) ^ v6)))();
}

void sub_2E964(uint64_t a1@<X1>, int a2@<W8>)
{
  int v4 = a2 + 816;
  (*(void (**)(void, uint64_t, void))(v2 + 8 * (a2 + 2054)))(*(unsigned int *)STACK[0x2B8], a1, ((a2 + 816) ^ 0x97E8F431) + LODWORD(STACK[0x2D0]));
  *(_DWORD *)(v3 - 192) = 1225351577
                        * ((((v3 - 192) | 0x3CD09B98) - (v3 - 192) + ((v3 - 192) & 0xC32F6460)) ^ 0x1F4A438E)
                        + 426522076
                        + v4;
  (*(void (**)(uint64_t))(v2 + 8 * (v4 ^ 0xBFD)))(v3 - 192);
  JUMPOUT(0x2EA00);
}

uint64_t sub_2EA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 ^ a7) ^ (((v8 + 1165) ^ a8) + v10 == 32)) & 1 ^ v8)))();
}

uint64_t sub_2EA7C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((110
                                * ((((unint64_t)(v2 - a1) < 0x20) ^ ((a2 ^ 0x72) + 99)) & 1)) ^ a2)))();
}

uint64_t sub_2EAB8@<X0>(uint64_t a1@<X8>, int a2, uint64_t a3, int a4)
{
  unsigned int v8 = (((v6 + 144997783) & 0xF75B847F) - 550033997) & (1014742052 - v7);
  unsigned int v9 = 1178560073 * ((((2 * &a2) | 0x86FADB5C) - &a2 - 1132293550) ^ 0x716B6DEE);
  a4 = v9 - v4 - v8 + 232354547;
  a3 = v5;
  a2 = v6 - v9 + 657;
  uint64_t v10 = (*(uint64_t (**)(int *))(a1 + 8 * (v6 + 1653)))(&a2);
  return sub_2EB60(v10);
}

void sub_2EB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  STACK[0x3D8] = v63;
  *(_DWORD *)(STACK[0x648] + (((a63 & 0xF9D1CBEF ^ 0xF348DC57) + LODWORD(STACK[0x54C])) & 0xFFFFFFFC)) = v64;
  JUMPOUT(0x4400);
}

void sub_2EBD0()
{
}

uint64_t sub_2EC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(a10 - 0x571561323F812302) = -1678725293 - v14;
  int v20 = 460628867 * ((v19 + 584760077 - 2 * ((v19 - 136) & 0x22DABB95)) ^ 0x6E4C39E8);
  *(void *)(v19 - 128) = v18;
  *(_DWORD *)(v19 - 120) = v20 + v16 - 470;
  *(_DWORD *)(v19 - 136) = 774089200 - v20;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 ^ 0xCCB)))(v19 - 136);
  int v21 = 535753261 * (((~(v19 - 136) & 0x71E37D66) - (~(v19 - 136) | 0x71E37D67)) ^ 0x7B177348);
  *(void *)(v19 - 136) = v18;
  *(_DWORD *)(v19 - 128) = v21
                         + ((v17 << 6) & 0xE3D7A5C0)
                         + 1876934588
                         + ((v17 << (55 * (v16 ^ 0xA2) - 16)) ^ 0xF1EBD2ED);
  *(_DWORD *)(v19 - 124) = v21 + v16 - 18;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 963)))(v19 - 136);
  *(void *)(v19 - 128) = &STACK[0x67843F9A1244BAFB];
  *(void *)(v19 - 136) = a14;
  *(_DWORD *)(v19 - 120) = (v16 + 153) ^ (1734042137
                                        * ((((2 * (v19 - 136)) | 0x1BEBF396) - (v19 - 136) + 1913259573) ^ 0xD13B3A86));
  (*(void (**)(uint64_t))(v15 + 8 * (v16 ^ 0x354)))(v19 - 136);
  *(void *)(v19 - 128) = v18;
  *(void *)(v19 - 120) = a14;
  *(_DWORD *)(v19 - 136) = (v16 - 135) ^ (1374699841
                                        * (((((v19 - 136) ^ 0x60944128 | 0xF4B9EC4) ^ 0xFFFFFFFE)
                                          - ((v19 - 136) ^ 0x5099404 | 0xF0B4613B)) ^ 0xF79632DA));
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0xC9E)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((473 * (*(_DWORD *)(v19 - 132) > 0x26812D29u)) ^ v16)))(v22);
}

uint64_t sub_2EEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = v4 > ((3 * (v5 ^ (v5 + 107))) ^ 0xDCFE8394);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                       + 8
                                                                       * (((2 * v6) | (4 * v6)) ^ (v5 + 1174669493))))(a1, a2, a3, 1460018998);
}

uint64_t sub_2EF10()
{
  *(void *)(v5 - 136) = v0;
  *(void *)(v5 - 128) = v4;
  *(_DWORD *)(v5 - 120) = v2 + 1759421093 * ((v5 - 136) ^ 0xB37DB054) + 1465;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0xA32)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (((v3 == v2 + 1771410138) * (((2 * v2) ^ 0x5D0) + 1127)) ^ v2)))(v6);
}

void sub_2EF98()
{
}

uint64_t sub_2F024(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (int)(((((a3 + 1015033599) & 0xC37FCAF9) - 234) * (v3 != v4)) | a3)))();
}

uint64_t sub_2F070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((1465 * (((67 * (v10 ^ 0x19C) - v12) ^ 0xFEC93996) == -1373544826)) ^ (67 * (v10 ^ 0x19C)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_2F0D4(uint64_t a1, int a2)
{
  BOOL v5 = v2 < 0x7DE91BE;
  if (v5 == v3 - 0x3E76A940C7A3DD45 < (unint64_t)((a2 - 397099732) & 0x17AB463E) + 132025236) {
    BOOL v5 = v3 - 0x3E76A940C7A3DD45 < v2;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((v5 * (((a2 + 671720619) & 0xD7F65EBF) - 1509)) ^ a2)))();
}

uint64_t sub_2F170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3A6BC(a1, a2, a3, 1, 44, 2142080120, STACK[0x3A0], 2173439218, (__n128)0);
}

uint64_t sub_2F180@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a3 ^ 0x30u) < (v3 ^ 0x53Bu)) * (a1 + a2 + v3 - 1331 - 535)) ^ v3)))();
}

uint64_t sub_2F1B8()
{
  return (*(uint64_t (**)(void))(v3 + 8
                                   * (((((v0 == v1) ^ (v2 + 1)) & 1) * ((v2 - 616) ^ 0x510)) | v2)))();
}

uint64_t sub_2F1F4()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 738)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((238 * (STACK[0x458] != 0)) ^ (v0 + 279))))();
}

uint64_t sub_2F238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,_DWORD *a34)
{
  unsigned int v40 = (v34 + 419103165) | 0xA100F863;
  uint64_t v41 = (*(uint64_t (**)(uint64_t, void))(v36 + 8 * (v34 ^ 0xADC)))(a10, 0);
  unsigned int v42 = LODWORD(STACK[0x538]) + 1460018998 - ((2 * LODWORD(STACK[0x538])) & 0xAE0C3E6C);
  LODWORD(STACK[0x528]) = LODWORD(STACK[0x530])
                        + 1460018998
                        - ((LODWORD(STACK[0x530]) << (((v34 - 67) | 0x63) ^ (v35 - 1))) & 0xAE0C3E6C);
  LODWORD(STACK[0x524]) = v42;
  int v43 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (v34 + 1604)))(v41);
  LODWORD(STACK[0x52C]) = v43 + 1460018998 - ((2 * v43) & 0xAE0C3E6C);
  int v44 = (*(uint64_t (**)(void))(v36 + 8 * (v34 ^ 0xAC4)))();
  LODWORD(STACK[0x520]) = v44 + 1460018998 - ((2 * v44) & 0xAE0C3E6C);
  int v45 = (((*v38 >> 30) ^ 1) + 1460018998 + 2 * (((*v38 >> 30) ^ 1 | 0x7FFFFFF6) ^ (*v38 >> 30)) + 18) ^ *v38;
  unsigned int v46 = (*a34 ^ 0x57061F36) + ((1664525 * v45 + 1460018998 - ((3329050 * v45) & 0xAE0C3E6C)) ^ v38[1]);
  v38[1] = v46 + 1460018998 - ((2 * v46) & 0xAE0C3E6C);
  unint64_t v47 = 1759421093 * ((0x1CEA727676AB61F3 - (v37 | 0x1CEA727676AB61F3) + a33) ^ 0xCDAB4CD93A292E58);
  *(void *)(v39 - 136) = 1305396952 - v47;
  *(_DWORD *)(v39 - 144) = v47;
  int v48 = v40 - 1086025580 - v47;
  *(_DWORD *)(v39 - 112) = ((v40 - 1086025580) & 0x795C8CBE) - v47;
  *(_DWORD *)(v39 - 104) = v48 - 85;
  *(void *)(v39 - 120) = v47 ^ 0x4DCEC6D6;
  *(_DWORD *)(v39 - 128) = -1098935330 - v47 + v40;
  *(_DWORD *)(v39 - 124) = v48;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (int)(v40 + 1174670379)))(v39 - 144);
  return (*(uint64_t (**)(uint64_t))(v36 + 8 * *(int *)(v39 - 108)))(v49);
}

uint64_t sub_2F494(uint64_t result)
{
  return sub_3658C(result);
}

uint64_t sub_2F4D0@<X0>(int a1@<W1>, unsigned int a2@<W2>, int a3@<W4>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21)
{
  BOOL v29 = v21 < v22;
  *(&a21 + (v25 + a1)) = *(unsigned char *)(v26 + (a4 + v27))
                                     - ((*(unsigned __int8 *)(v26 + (a4 + v27)) << ((v23 - 64) ^ 0x2F)) & 0xCA)
                                     - 27;
  unsigned int v30 = a4 + 1 + a3;
  int v31 = v29 ^ (v30 < a2);
  BOOL v32 = v30 < v21;
  if (!v31) {
    BOOL v29 = v32;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((!v29 * v24) ^ v23)))();
}

void sub_2F54C()
{
}

uint64_t sub_2F560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((a11 - 1430261158 + v12 + 87 + 1221) < 0x7FFFFFFF) * (v12 - 285)) ^ v12)))();
}

uint64_t sub_2F5A4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v1 ^ 0x6AE) + 1665) ^ (211 * (v1 ^ 0x6AE)))
                                * ((v0 + v2 - 1841020831) > 7)) | v1)))();
}

void sub_2F5F0()
{
}

void sub_2F608()
{
  STACK[0x600] -= 32;
  JUMPOUT(0x2F654);
}

void sub_2F6C8()
{
}

void sub_2F6F8()
{
}

uint64_t sub_2F700()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((v0 - 45) ^ ((*(unsigned char *)(v2 - 0x7761D79CB8DF4CFFLL) & 1) == 0)) & 1)
                                     * ((v0 + 534191578) & 0xE028E7F5 ^ 0x7DC)) ^ v0)))();
}

uint64_t sub_2F75C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v2 - 20) ^ (*(void *)(v0 + 8) == 0x31FD77B69BC3E185)) & 1)
                                * ((v2 + 333) ^ 0x3C4)) ^ (v2 + 333))))();
}

uint64_t sub_2F7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5 = (v4 - 1444) | 0x120;
  *(unsigned char *)(a1 + (v3 - 1085811802) + 4) = (**(unsigned char **)(a2 + 8) ^ 0xF7)
                                                       + ((2 * **(unsigned char **)(a2 + 8)) & 0xEF)
                                                       + 112;
  unsigned int v6 = *(_DWORD *)(a2 + 4) - 1114302783;
  BOOL v7 = (v5 ^ 0xDBu) + 170122803 < v6;
  if (v6 < 0xA23E031) {
    BOOL v7 = 1;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((1179 * v7) ^ v5)))();
}

uint64_t sub_2F86C@<X0>(unsigned int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, int a9@<W8>)
{
  BOOL v14 = a3 < a1;
  char v15 = *(unsigned char *)(a8 + (v12 + v9 + 16));
  *(unsigned char *)(a6 + (a9 + v11)) = ((v10 + a4) & a5) + v15 - (a7 & (2 * v15)) - 77;
  unsigned int v16 = v9 + 1 + a2;
  int v17 = v14 ^ (v16 < a1);
  BOOL v18 = v16 < a3;
  if (!v17) {
    BOOL v14 = v18;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * (v10 ^ (8 * !v14))))();
}

uint64_t sub_2F8DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((55 * (a7 + ((a5 + 965688793) & 0xC670C44D ^ (a3 + 1077)) > 0xFFFFFFEF)) ^ a5)))();
}

void sub_2F924()
{
}

uint64_t sub_2F930@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (((*(_DWORD *)(a18 + 4 * (a1 + v20 + 969)) == v18)
                                * (((v19 - 944) | 0xA9) - 318)) ^ (v19 - 775))))();
}

uint64_t sub_2F978(uint64_t a1, uint64_t a2, int a3, int a4)
{
  *(unsigned char *)(*(void *)(v7 + 96) + 1568) = 0;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v7 + 72) == (((v4 + 922757761) | 0xC0000420) ^ a4))
                                * (v5 + a3 + v4 - 1279 - 139 - 361)) ^ (v4 - 1279))))();
}

uint64_t sub_2F9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  int v23 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * (v22 ^ ((v19 > 1) * v18)));
  return v23(*(_DWORD *)(*a17 + 4 * (v20 - 1091580574)) ^ v17, a2, a3, a4, v23, a6, a7, 1620552182, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_2F9E4(unint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned char *a19, uint64_t a20,int a21,uint64_t a22,unsigned char *a23,unsigned char *a24,_DWORD *a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  a23[3] = (HIBYTE(v34) ^ 0x6E) - 2 * ((HIBYTE(v34) ^ 0x6E) & 0x57 ^ HIBYTE(v34) & 1) + 86;
  a19[9] = BYTE5(v31) ^ (a26 + 16) ^ 0xE5;
  a19[15] = BYTE1(v34) ^ 0x9E;
  a24[8] = v34 ^ 0x58;
  a23[9] = (BYTE2(v34) ^ 0x82) - 2 * ((BYTE2(v34) ^ 0x82) & 0x57 ^ BYTE2(v34) & 1) + 86;
  a24[26] = BYTE4(v31) ^ 0x20;
  if ((v30 ^ 0xC42312DC2814049uLL) >= 0x8134422366A90F03) {
    a3 = (v30 ^ 0x49) - ((2 * (v30 ^ 0x49) - 6) & 0x88) - 63;
  }
  char v36 = a3 ^ 0xC4;
  if ((v30 ^ 0xC42312DC2814049uLL) >= 0x8134422366A90F03) {
    char v37 = 3;
  }
  else {
    char v37 = 0;
  }
  char v38 = v36 + v37;
  char v39 = *(unsigned char *)(a30 + 531 + (BYTE6(v31) ^ 0xDLL));
  a19[7] = HIBYTE(v31) ^ 0x5C;
  a24[27] = BYTE1(v30) ^ 0x40;
  a23[10] = (~(14 * (v39 ^ 0x9C)) | 0x53) - (v39 ^ 0x9C) + 8 * (v39 ^ 0x9C) + 87;
  a19[10] = v38;
  HIDWORD(v40) = *(unsigned __int8 *)(a30 + (((BYTE2(v30) ^ 0x81) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  LODWORD(v40) = (HIDWORD(v40) << 26) ^ (HIDWORD(v40) << 24);
  a24[10] = BYTE4(v30) ^ 0x2D;
  a23[14] = (BYTE3(v30) ^ 0xC2) - ((2 * (BYTE3(v30) ^ 0xC2)) & 0xAC) + 86;
  a23[20] = (v40 >> 25) ^ 0x4A;
  a23[4] = (BYTE6(v30) ^ 0x42) - ((2 * (BYTE6(v30) ^ 0x42)) & 0xAC) + 86;
  a23[16] = (BYTE5(v30) ^ 0x31) + (~(2 * (BYTE5(v30) ^ 0x31)) | 0x53) + 87;
  unsigned int v41 = *(unsigned __int8 *)(a30 + (((HIBYTE(v30) ^ 0xC) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a24[20] = a2 ^ 0x42;
  HIDWORD(v40) = v41;
  LODWORD(v40) = (v41 << 26) ^ (v41 << 24);
  a23[15] = (v40 >> 25) ^ 0x4A;
  unsigned int v42 = *(unsigned __int8 *)(a15 + (((a2 >> 1) & 0x80 | ((unsigned __int16)a2 >> 9)) ^ 0xE1));
  a24[17] = BYTE3(a2) ^ 0x48;
  a19[14] = BYTE4(a2) ^ 0xCC;
  *a23 = BYTE5(a2) - ((2 * BYTE5(a2)) & 0xAC) - 42;
  a24[21] = HIBYTE(a2) ^ 0x1F;
  a24[13] = BYTE2(a2) ^ 0x50;
  a24[3] = (v42 ^ 0x8A ^ (v42 >> 2) & 0x17) + 32;
  a19[12] = BYTE6(a2) ^ 6;
  char v43 = *(unsigned char *)(a30 + 531 + (a1 ^ 0x35) + 2 * (a1 & 0xD5 ^ 0x15) - 4 * (a1 & 0xD5 ^ 0x15) + 213) ^ 0x9C;
  a24[11] = BYTE2(a1) ^ 0xB6;
  a23[5] = 7 * v43 - ((14 * v43) & 0xAC) + 86;
  a23[2] = (BYTE3(a1) ^ 0xE4) - ((2 * (BYTE3(a1) ^ 0xE4)) & 0xAC) + 86;
  a24[25] = BYTE1(a1) ^ 0x76;
  unsigned int v44 = *(unsigned __int8 *)(a15 + (((a1 >> 25) & 0x80 | (a1 >> 33) & 0x7F) ^ 0xB1));
  a24[22] = BYTE5(a1) ^ 0xD3;
  a24[18] = HIBYTE(a1) ^ 0x50;
  a24[2] = BYTE1(v33) ^ 0x56;
  a23[1] = v33 ^ 6;
  a24[30] = BYTE3(v32) ^ 0x5F;
  a24[9] = BYTE2(v33) ^ 0xBE;
  a24[19] = (v44 ^ 0x8A ^ (v44 >> 2) & 0x17) + 32;
  a23[7] = (BYTE6(a1) ^ 0x2B) + (~(2 * (BYTE6(a1) ^ 0x2B)) | 0x53) + 87;
  unsigned int v45 = *(unsigned __int8 *)(a30 + (((BYTE4(v32) ^ 0xF6) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a24[24] = BYTE6(v32) ^ 0x81;
  a24[12] = BYTE5(v32) ^ 0xFD;
  HIDWORD(v40) = v45;
  LODWORD(v40) = (v45 << 26) ^ (v45 << 24);
  a24[1] = HIBYTE(v32) ^ 0x9D;
  a24[23] = (v40 >> 25) ^ 0x1C;
  *a25 = a21 - 1978387646;
  return sub_2FE28();
}

uint64_t sub_2FE64()
{
  BOOL v5 = v1 == 1321678224 || LODWORD(STACK[0x528]) - v2 != v0 + 1210380421 + ((v0 - 22119195) & 0x15182EF);
  return (*(uint64_t (**)(void))(v3 + 8 * ((2000 * v5) ^ (v0 + 711))))();
}

uint64_t sub_2FECC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W4>, int a4@<W5>, int a5@<W6>, int a6@<W7>, uint64_t a7@<X8>)
{
  unsigned int v9 = ((2 * (a6 + 1603)) & 0xFFF55B46) + ((a6 + 1603) ^ 0x7FFAADA3) - 2147134883;
  int v10 = ((*(unsigned __int8 *)(v8 + v9) ^ a2) << 24) | ((*(unsigned __int8 *)(v8 + v9 + 1) ^ a2) << 16) | ((*(unsigned __int8 *)(v8 + v9 + 2) ^ a2) << 8);
  int v11 = *(unsigned __int8 *)(v8 + v9 + 3) ^ a2;
  return (*(uint64_t (**)(uint64_t, void))(a7
                                                    + 8
                                                    * (((((((a3 - 422984778) & 0x1936369D) + 1073741676) & a4) == 0)
                                                      * ((a3 - 103) ^ 0x5D5)) ^ a3)))(a1, (v10 | v11) + v7 - 2 * ((v10 | v11) & a5 ^ v11 & 1u));
}

uint64_t sub_2FF94@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v67 = ((((2 * v64) | 0x2B2F5662) - v64 + 1785222351) ^ 0x13AE268) * v60;
  *(void *)(v66 - 176) = a59;
  *(void *)(v66 - 192) = v63;
  *(_DWORD *)(v66 - 168) = v67 + v61 + 593;
  *(_DWORD *)(v66 - 184) = a1 - v67;
  *(void *)(v66 - 160) = a60;
  (*(void (**)(uint64_t))(v65 + 8 * (v61 + 2066)))(v66 - 192);
  int v68 = *(_DWORD *)(v66 - 152);
  STACK[0x5A8] = STACK[0x3D8];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, __n128))(v65 + 8 * (int)(((v68 == v62) * (((8 * v61) ^ 0xFFFFF9E0) + ((8 * v61) ^ 0x720))) ^ v61)))(1219, 1189, 1373504863, 1, 44, 2682113404, STACK[0x278], 2173439218, (__n128)0);
}

uint64_t sub_30088(int a1)
{
  int v5 = ((((v1 ^ 0x177) * v2 - 1040) | a1) ^ 0x4BA0E9E1) + v3;
  BOOL v7 = v5 > 1242880782 || v5 < SLODWORD(STACK[0x3D8]);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1188 * v7) ^ v1)))();
}

void sub_300DC()
{
}

uint64_t sub_300E8(uint64_t a1, uint64_t a2)
{
  BOOL v9 = (v7 & (2 * (*(unsigned __int8 *)(a2 + 9) - 1))) + (v5 ^ (v6 - 142) ^ (*(unsigned __int8 *)(a2 + 9) - 1)) == v6
    && v2 + (v5 ^ (v3 + 142)) + 1806685755 < 0xC9;
  return (*(uint64_t (**)(void))(v4 + 8 * ((941 * v9) ^ v5)))();
}

uint64_t sub_30148@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((415 * (a2 + 1 != v3 + 48)) ^ a1)))();
}

uint64_t sub_30224@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 - 1473952188) & 0x57DABE6F ^ 0xFFFFFD6A) + ((v2 + 734) | 0x100))
                                     * (a1 - v1 == -344826002)) ^ v2)))();
}

uint64_t sub_30288()
{
  STACK[0x468] = v1 - 112;
  return v0();
}

uint64_t sub_302A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v12 = *(_DWORD *)(v11 - 220 + ((v9 + v7) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a2 + (v9 + v7)) = v12 ^ 0x8F;
  *(unsigned char *)(a2 + (v9 + v7 + 1)) = ((v8 - a6 - 116) ^ BYTE1(v12))
                                               - ((2 * ((v8 - a6 - 116) ^ BYTE1(v12))) & 0xCA)
                                               - 27;
  *(unsigned char *)(a2 + (v9 + v7 + 2)) = (BYTE2(v12) ^ 0x2D) - ((2 * (BYTE2(v12) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a2 + (v9 + v7 + 3)) = (HIBYTE(v12) ^ 0x52) - ((2 * (HIBYTE(v12) ^ 0x52)) & 0xCA) - 27;
  unsigned int v13 = *(_DWORD *)(v11 - 128) - 1985218026;
  BOOL v14 = v13 < v6;
  BOOL v15 = v9 + 1941107158 < v13;
  if (v9 + 1941107158 < v6 != v14) {
    BOOL v15 = v14;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (((8 * v15) | (32 * v15)) ^ v8)))();
}

void sub_30378()
{
}

uint64_t sub_30538@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((61 * (v1 - a1 >= ((272 * (((v2 - 210) | 4) ^ 0x448u)) ^ 0x570uLL))) ^ v2)))();
}

uint64_t sub_30580@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v12 = (v6 + v8);
  *(unsigned char *)(a1 + v12 + 36) = *(unsigned char *)(v10 + v12) ^ ((v12 & 0xF) * v9) ^ *(unsigned char *)(v2 + (v12 & 0xF)) ^ *(unsigned char *)((v12 & 0xF) + v3 + 1) ^ (v5 - 58) ^ *(unsigned char *)(a2 + (v12 & 0xF));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v6 - 1 != v4) * v7) ^ (v5 + 1803))))();
}

uint64_t sub_305F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((a8 - 842) | a5) + 2813) * (v9 == 0)) ^ a8)))();
}

uint64_t sub_30624(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                                  + 8 * (((*(_DWORD *)(v7 + 72) == a3 + 1284424883) * (((a3 - 97) ^ 0x1ED) - 1115)) ^ (a3 - 97))))(a1, a2, 4143985707, 3146710353, 1435407688, a6, 1284425797);
}

uint64_t sub_30690()
{
  BOOL v9 = v3 > 0x6177BBE7;
  *(unsigned char *)(v8 + (v5 - 703318618)) = *(unsigned char *)(*(void *)(v6 + 8 * (v2 - 393))
                                                             + (((_BYTE)v5 - 90) & 0xF)
                                                             - 4) ^ *(unsigned char *)(v0 + (v5 - 703318618)) ^ (23 * ((v5 - 90) & 0xF)) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v2 - 308)) + (((_BYTE)v5 - 90) & 0xF)) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v2 ^ 0x1FF)) + ((v5 - 703318618) & 0xFLL) - 3);
  if (v9 == v5 + 1956411839 < ((5 * (v2 ^ 0xD6)) ^ v1)) {
    BOOL v9 = v5 + 1956411839 < v4;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((1840 * v9) ^ v2)))();
}

uint64_t sub_30808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, int a12, int a13, unsigned int a14)
{
  unsigned int v17 = 1178560073 * (&a10 ^ 0x32160040);
  a10 = v15;
  a11 = &STACK[0x31FD77B69BC3E185];
  a13 = v17 + v14 + 58;
  a14 = -945054523 - v17;
  a12 = v17 ^ 0x294A23BF;
  uint64_t v18 = (*(uint64_t (**)(uint64_t *))(v16 + 8 * (v14 ^ 0x9FEu)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)(((*(_DWORD *)(v15 - 0x7761D79CB8DF4CFBLL) == -1373544826)
                                                   * (((v14 + 245) ^ 0xFFFFFFE2) + v14 + 245)) ^ v14)))(v18);
}

uint64_t sub_308CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * (int)(((((v3 + 1595619375) & 0xA0E4C3DB) + 1540)
                                                                     * (v2 == -1373544826)) ^ (v3 - 1013))))(a1, a2, 1373504863);
}

void sub_30918()
{
  LODWORD(STACK[0x404]) = v0;
  LODWORD(STACK[0x4A4]) = v1;
  LODWORD(STACK[0x418]) = v2;
  LODWORD(STACK[0x504]) = v3;
  LODWORD(STACK[0x54C]) = v4 + 64;
  JUMPOUT(0x4460);
}

uint64_t sub_3095C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12 + 8 * (((((v13 + 597) | 0x58) - 1088) * (a11 == v11 - 4)) ^ v13)))();
}

uint64_t sub_30990@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, unint64_t *a5, char a6, unsigned int a7, unint64_t *a8, unint64_t *a9, int a10, uint64_t a11)
{
  int v14 = v11 ^ 0x53A;
  uint64_t v15 = *v12;
  unsigned int v16 = 1374699841 * ((-2 - ((~&a4 | 0x67E19C01) + (&a4 | 0x981E63FE))) ^ 0xA158408);
  a7 = ((((v14 + 1005827921) ^ 0x3BF3BC69) - 83636177) ^ a1)
     - v16
     - 1619132439
     + ((a1 << ((v14 + 81) ^ 0xF7)) & 0xEB2EDDEE ^ 0x9285862);
  a6 = 65 * ((-2 - ((~&a4 | 1) + (&a4 | 0xFE))) ^ 8) - 49;
  a10 = v14 - v16 - 1691;
  a5 = &STACK[0x950CE2110AB3F42];
  a11 = v15;
  a8 = &STACK[0x567D362CA97960E0];
  a9 = &STACK[0x7F632B302E085251];
  uint64_t v17 = (*(uint64_t (**)(int *))(v13 + 8 * (v14 + 231)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((4020 * (a4 == -1373544826)) ^ v14)))(v17);
}

void sub_30AF0(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_30B38(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((((v5 + 558877469) & 0xDEB033F5) + 128) ^ ((v5 - 350) | 0x480)) * (v4 == a4)) ^ v5)))();
}

void sub_30B80(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(_DWORD *)(v18 - 104) = (a1 + 1336) ^ (((v18 - 1701629415 - 2 * ((v18 - 144) & 0x9A9332A9)) ^ 0x29EE82FD) * v17);
  *(void *)(v18 - 120) = a17;
  *(void *)(v18 - 112) = a17;
  *(void *)(v18 - 136) = a5;
  *(void *)(v18 - 128) = a15;
  *(void *)(v18 - 144) = a14;
  JUMPOUT(0x4878);
}

uint64_t sub_30BEC()
{
  return sub_30C14();
}

uint64_t sub_30C14@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  int v9 = (*(unsigned __int8 *)(v4 + a2) ^ v7) - (*(unsigned char *)(v2 + a2) + ((v3 - 62) | 0x40) - 102);
  return (*(uint64_t (**)(void))(v8 + 8 * ((((a1 & (2 * v9)) + (v9 ^ v5) == v5) * v6) ^ v3)))();
}

uint64_t sub_30C60(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v5 = v4 == ((((a3 - 1013391561) ^ 0xC398E700) + 354497804) ^ (a3 - 1013391561) & 0x3C671FFB);
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * v5) | (16 * v5)) ^ a3)))();
}

uint64_t sub_30CCC()
{
  if ((v0 - 845113408) > 0x18 || ((1 << (v0 - 64)) & 0x1000581) == 0) {
    JUMPOUT(0x1F2F4);
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((896 * ((v3 & 0xFFFFFFFFFFFFFFFuLL) - 1 < ((v4 + v1 + 569) ^ 0x2BDuLL))) ^ (v4 + v1 + 255))))();
}

uint64_t sub_30D40(uint64_t a1, int a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((13
                                * ((a3 ^ (a2 + v3 + 63 < v3
                                                                        + 214418082
                                                                        + ((a3 + 1409887215) | 0x8A248045))) & 1)) ^ a3)))();
}

uint64_t sub_30DAC(int a1, uint64_t a2)
{
  BOOL v7 = (v6 & 2) == ((v2 + v3) & v4 ^ v5);
  return (*(uint64_t (**)(void))(*(void *)(a2 + 8 * (v2 ^ a1)) - 4 + 8 * ((2 * v7) | (8 * v7) | v2)))();
}

uint64_t sub_30DEC()
{
  int v2 = v0 - 216;
  STACK[0x468] = STACK[0x468] + ((v2 + 834603819) & 0xCE40F7DB) - 1376;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 ^ 0x719) + 109) ^ v2)))();
}

uint64_t sub_30E38()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((LODWORD(STACK[0x3FC]) - 639) | (4
                                                                * (v0 >= (((LODWORD(STACK[0x3FC]) ^ 0x684) - 255) ^ 0xD5E073AA))))))();
}

uint64_t sub_30E70(uint64_t a1, double a2)
{
  *(double *)(v5 + a1) = a2;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (((v2 == a1) * v6) ^ v3)))(a1 + v4);
}

uint64_t sub_30E98()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((44
                                * ((((863 * (v2 ^ 0x800)) ^ (v1 + v0 + (((v2 ^ 0x800) + 458) ^ 0x8180B329) < 8)) & 1) == 0)) | v2)))();
}

void sub_30EFC()
{
}

uint64_t sub_30F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v74 = STACK[0x240];
  *(void *)(v74 + 1560) = *(void *)STACK[0x558];
  *(_DWORD *)(v74 + 1552) = *(_DWORD *)STACK[0x540];
  *(void *)(*(void *)(a70 + 96) + 488) = *(void *)(a70 + 8);
  int v75 = 35 * (v72 ^ 0x561);
  *(_DWORD *)(*(void *)(a70 + 96) + 480) = *(_DWORD *)a70;
  *(unsigned char *)(a72 + STACK[0x278]) = ((((v75 - 20) & 0x7C) - 98) ^ STACK[0x200]) * a71;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 8 * v75))(1219, 1189, a3, a4, a5, 2682113404);
}

uint64_t sub_30FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((1010 * (((v15 == 0) ^ v16) & 1)) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a8, a2, a10, a11, a12, a13, a14, a15, v18 + 0x345B219028409FF8);
}

uint64_t sub_310D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  char v14 = *(unsigned char *)(v12 + (v10 ^ (4 * v9)) + v11 + v7);
  *(unsigned char *)(a6 + v8) = v14 - (a7 & (2 * v14)) - 27;
  return (*(uint64_t (**)(void))(v13 + 8 * ((2 * (v8 != 63)) | (16 * (v8 != 63)) | v9)))();
}

void sub_3111C()
{
  *(_DWORD *)(v2 - 120) = v0;
  *(_DWORD *)(v2 - 116) = v1;
  *(_DWORD *)(v2 - 124) = v0 & 0xFFFFFFF8;
  JUMPOUT(0x31188);
}

void sub_31258(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  int v3 = *(_DWORD *)(a1 + 24) - 460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86);
  if (*(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7) - 1372200252 >= 0) {
    unsigned int v4 = *(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7) - 1372200252;
  }
  else {
    unsigned int v4 = 1372200252 - *(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7);
  }
  uint64_t v1 = *(void *)(a1 + 8);
  if (*(_DWORD *)(v1 - 0x67843F9A1244BAC7) - 1372200252 >= 0) {
    unsigned int v5 = *(_DWORD *)(v1 - 0x67843F9A1244BAC7) - 1372200252;
  }
  else {
    unsigned int v5 = 1372200252 - *(_DWORD *)(v1 - 0x67843F9A1244BAC7);
  }
  unsigned int v8 = v3 + 535753261 * ((((2 * &v8) | 0xAFB699A2) - &v8 - 1473989841) ^ 0x5D2F42FE) - 109;
  uint64_t v9 = v2;
  int v6 = (char *)*(&off_99820 + v3 - 1292) - 4;
  (*(void (**)(unsigned int *))&v6[8 * v3 + 5936])(&v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X14, X17 }
}

uint64_t sub_31410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((a5 - 244) | 0x604) - 1223) ^ a5 ^ 0x724)
                                * (*(_DWORD *)(v6 - 144) == *(_DWORD *)(v6 - 152))) ^ a5)))();
}

uint64_t sub_31454(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((91 * (((v3 == v4) ^ (7 * (a3 ^ 1))) & 1)) ^ a3)))();
}

uint64_t sub_3148C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((114 * (v0 != v1 + 226062238)) ^ v1)))();
}

uint64_t sub_314C4()
{
  return sub_314FC();
}

void sub_314FC(int a1@<W8>)
{
  *int v1 = a1;
}

uint64_t sub_3153C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((28
                                * (((v4 < ((38 * (a4 ^ 0x328)) ^ 0x12Au)) ^ (117 * (a4 ^ 0x2A))) & 1)) ^ a4)))();
}

uint64_t sub_31590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + v26 + 1) = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * ((61
                                * (((((((v27 - 597) | 0x240) ^ 0x26C) & v25) == 8) ^ (((v27 - 85) | 0x40) - 1)) & 1)) ^ ((v27 - 597) | 0x240))))();
}

uint64_t sub_31610(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((111 * (((((a4 - 639) ^ 0x235) - 645) & v4) == 0)) ^ a4)))();
}

uint64_t sub_31644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19
                                                                                         + 8
                                                                                         * (((*(_DWORD *)(a19 - 0x7761D79CB8DF4CFBLL) == (v20 ^ 0x415) - 1373544930)
                                                                                           * ((((v20 ^ 0x415)
                                                                                              - 1521085165) & 0x5AA9EEFD)
                                                                                            + 698)) ^ v20 ^ 0x415)))(a1, a2, a3, a4, a5, a6);
}

void sub_316B4()
{
}

uint64_t sub_316BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = a5 + v27 + v26;
  int v31 = v30 + 1762;
  if ((v30 + 1762) <= 0x40) {
    int v31 = 64;
  }
  BOOL v32 = !__CFADD__(v30 + 1761, v28 + v31);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((((v25 - 762) ^ 0x208) * v32) ^ v25)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_31718@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(v6 + (v2 + v4) + 20) = *(unsigned char *)(a1 + (v2 + v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((((a2 - 3) | 3) + 19) * (((a2 + 1289) ^ v3) + v2 == v5)) ^ (a2 + 1903))))();
}

uint64_t sub_31764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unint64_t v38 = STACK[0x280] + 2048;
  LODWORD(STACK[0x5F8]) = 2;
  STACK[0x580] = 0;
  LODWORD(STACK[0x470]) = 0;
  LODWORD(STACK[0x490]) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((((a8 + 477) ^ 0x5A6) * ((v36 & 2) == 0)) ^ a8)))(a1, a2, a3, a4, a5, v38, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_317B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((LODWORD(STACK[0x3A0]) - 588221694 != ((2 * (v7 ^ 0x340) - 1267) ^ 0xFF4CBF)) * a7) ^ (2 * (v7 ^ 0x340)))))();
}

void sub_31808(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_3184C()
{
}

uint64_t sub_318CC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 1099) | 0x89) ^ ((v1 + 482) | 2) ^ 0xBDD) * (v0 == 0)) ^ v1)))();
}

uint64_t sub_31908(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v10 = v5 + v4 + a4;
  if (v10 <= 0x40) {
    int v11 = 64;
  }
  else {
    int v11 = v10;
  }
  BOOL v12 = v7 + a3 + v8 + v6 - 664 + v11 <= ((v10 - 1) ^ v6 ^ 0xFFFFF87D);
  return (*(uint64_t (**)(void))(v9 + 8 * ((v12 | (32 * v12)) ^ v6)))();
}

uint64_t sub_3196C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 != v1 + v0 + 569949521) * (v0 ^ 0x817)) ^ v0)))();
}

uint64_t sub_319B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = ((v1 - 377125033) & 0x167A77DF) - a1 - 406;
  int8x16_t v5 = vrev64q_s8(*(int8x16_t *)(v2 + v4 - 15));
  int8x16_t v6 = vextq_s8(v5, v5, 8uLL);
  int8x16_t v7 = vrev64q_s8(*(int8x16_t *)(v2 + v4 - 31));
  int8x16_t v8 = vextq_s8(v7, v7, 8uLL);
  unint64_t v9 = STACK[0x290] + v4;
  v10.i64[0] = 0xCACACACACACACACALL;
  v10.i64[1] = 0xCACACACACACACACALL;
  v11.i64[0] = 0xE5E5E5E5E5E5E5E5;
  v11.i64[1] = 0xE5E5E5E5E5E5E5E5;
  int8x16_t v12 = vrev64q_s8(vaddq_s8(vsubq_s8(v6, vandq_s8(vaddq_s8(v6, v6), v10)), v11));
  *(int8x16_t *)(v9 - 15) = vextq_s8(v12, v12, 8uLL);
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v10)), v11));
  *(int8x16_t *)(v9 - 31) = vextq_s8(v13, v13, 8uLL);
  return (*(uint64_t (**)(void))(v3 + 8 * ((1801 * (a1 == 96)) ^ v1)))();
}

uint64_t sub_31A5C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((882
                                * ((((((v0 ^ 0x754) + 654) | 0x150) ^ 0xFFFFFAA0) & *(_DWORD *)STACK[0x3C8]) == (v0 ^ 0x2E8) + 1321676994)) ^ v0 ^ 0x754)))();
}

uint64_t sub_31AC0@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((193 * (v2 ^ 0x13D)) ^ a1) + v2 - v4 + 489) * (a2 == 24)) ^ v2)))();
}

void sub_31B00()
{
  uint64_t v4 = 4 * (v2 - 843764934);
  unsigned int v5 = 2111498075
     * ((*(_DWORD *)(*(void *)STACK[0x3D8] + (*(_DWORD *)STACK[0x3D0] & 0x5E35821C)) ^ (v3 + v4)) & 0x7FFFFFFF);
  int v6 = v5 ^ HIWORD(v5);
  uint64_t v7 = 4 * ((2111498075 * v6) >> ((v0 - 62) ^ 0xCC));
  *(_DWORD *)(v1 + v4) ^= *(_DWORD *)(v3 + v4) ^ *(_DWORD *)((char *)*(&off_99820 + (v0 ^ 0x262u)) + v7 - 4) ^ *(_DWORD *)((char *)*(&off_99820 + (v0 ^ 0x255u)) + v7 - 4) ^ *(_DWORD *)((char *)*(&off_99820 + (v0 ^ 0x23Au)) + v7 - 12) ^ (-413466624 * v6) ^ (2111498075 * v6) ^ (-2081955537 * ((2111498075 * v6) >> ((v0 - 62) ^ 0xCC)));
  JUMPOUT(0x31BECLL);
}

uint64_t sub_31C3C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((210
                                * (*(unsigned char *)((v2 | ((unint64_t)(v2 < ((v1 - 178) ^ (v0 + 141))) << 32))
                                            + v4
                                            - 1938056291) != 0)) ^ v1)))();
}

void sub_31C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, char a17)
{
  a16 = (v17 - 19) ^ (3804331
                    * (((&a16 | 0xB301206E) - &a16 + (&a16 & 0x4CFEDF90)) ^ 0x499FD338));
  a17 = 67 - -85 * (((&a16 | 0x6E) - &a16 + (&a16 & 0x90)) ^ 0x38);
  (*(void (**)(unsigned int *))(v18 + 8 * (v17 + 980)))(&a16);
  JUMPOUT(0xD804);
}

void sub_31D04(uint64_t a1)
{
  int v1 = 235795823 * (((a1 | 0xDF39865F) - a1 + (a1 & 0x20C679A0)) ^ 0x4B94CF06);
  int v2 = *(_DWORD *)(a1 + 24) - v1;
  int v3 = *(_DWORD *)(a1 + 8) + v1;
  BOOL v5 = (v3 & 0x30000000) != 0x20000000 && (v3 & 0x3F000000) != 251658240;
  __asm { BRAA            X11, X17 }
}

uint64_t sub_31DE4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  return sub_2C614(a1, 17 * (a3 ^ 0x5CDu), *(_DWORD *)(*v5 + 4 * (a2 - 549541838)), v4, a4);
}

uint64_t sub_31E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(*(void *)(v9 - 0x67843F9A1244BAC3) + 4 * (v5 + v7 + v6 + 263 - 822)) = a5;
  return (*(uint64_t (**)(void))(v8 + 8 * ((14 * (v7 + v5 >= 0)) ^ v6)))();
}

uint64_t sub_31E6C()
{
  *(_DWORD *)(v5 - 120) = v0 + 1759421093 * ((((v5 - 136) | 0xF2355271) - ((v5 - 136) & 0xF2355271)) ^ 0x4148E225) + 255;
  *(void *)(v5 - 136) = v4;
  *(void *)(v5 - 128) = v2;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 344)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((v3 == ((v0 + 682571495) & 0xD750C2F1) + 82659646)
                                              * (((v0 - 1767) | 0xC0) ^ 0x66)) ^ v0)))(v6);
}

uint64_t sub_31F24(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (((((v3 ^ 0x3EA) + 48) ^ 0x675) * (v1 == v2)) ^ v3)))(a1, 71, 2456046688, 1838920607);
}

void sub_31F68()
{
}

uint64_t sub_31F70()
{
  return sub_3815C();
}

uint64_t sub_31F7C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2
                                                                       + 8
                                                                       * ((((LODWORD(STACK[0x3FC]) ^ 0x6866A87F) == 1751559487)
                                                                         * (LODWORD(STACK[0x3FC]) - 896)) ^ (LODWORD(STACK[0x3FC]) + 423))))(a1, a2, 2083246018, 2211722588);
}

uint64_t sub_31FEC(uint64_t a1, uint64_t a2, int a3)
{
  STACK[0x338] = v3;
  LODWORD(STACK[0x5B4]) = a3 + 10;
  return sub_44CB4();
}

uint64_t sub_32004()
{
  LODWORD(STACK[0x5B4]) = v0 + 95;
  return sub_44CB4();
}

uint64_t sub_3201C()
{
  return sub_32038();
}

uint64_t sub_32038()
{
  return v0 ^ v1;
}

void sub_32078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 *a9)
{
  int v12 = (v11 - 83) ^ a9[3] ^ 0x3F;
  int v13 = ((*a9 ^ 0xE5) << 24) | ((a9[1] ^ 0xE5) << 16) | ((a9[2] ^ 0xE5) << 8) | v12;
  *(_DWORD *)(*(void *)(v9 + 8) - 0x18D17CD12703C5D3) = v13 + v10 - 2 * (v13 & 0x2E215E87 ^ v12 & 1);
  JUMPOUT(0x11284);
}

uint64_t sub_320F8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2311 * (((v1 + 1054) ^ a1) + v2 + ((v1 + 56728793) & 0xFC9E637D) < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_32148()
{
  unsigned int v5 = *(unsigned __int8 *)(v3 + 5) + ((v2 - 256) ^ 0xFFFFFEEC);
  return (*(uint64_t (**)(void))(v4 + 8 * ((489 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v2)))();
}

void sub_32188(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x843828D0CDF33EDLL) = (*(_DWORD *)(a1 - 0x843828D0CDF33EDLL) ^ 0xD2980FF2)
                                        - 761786382
                                        - ((2 * (*(_DWORD *)(a1 - 0x843828D0CDF33EDLL) ^ 0xD2980FF2) + 2) & 0xA5301FE4)
                                        + 1;
}

void sub_321D0()
{
}

void sub_321E0()
{
  *(_DWORD *)(v1 - 116) = v0;
  *(_DWORD *)(v1 - 120) = v0 & 0xFFFFFFF8;
  JUMPOUT(0x3224CLL);
}

uint64_t sub_3231C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_32374(0xDBFFFD1FFCBA957FLL, 0x1F9752AFELL, 0x75B1E6FBDFCD7F9CLL, (a4 + 1444), 25);
}

uint64_t sub_32374(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v18 = 4 * (v12 + v14 + v6 - 332);
  int v19 = v5 + v15 + (*(_DWORD *)(*v8 + v18) ^ v16);
  *(_DWORD *)(*v10 + v18) = v19 + v16 - (v13 & (2 * v19));
  int v20 = v14 + 1 + v7;
  BOOL v22 = v20 > a4 || v20 < v9;
  return (*(uint64_t (**)(void))(v17 + 8 * ((v22 * a5) | v11)))();
}

uint64_t sub_323E4()
{
  BOOL v3 = (v0 & 0x18) == (v1 ^ 0x317) - 1360;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((4 * ((v3 ^ (61 * (v1 ^ 0x48))) & 1)) & 0xEF | (16
                                                                                                 * ((v3 ^ (61 * (v1 ^ 0x648))) & 1))) ^ v1)))();
}

uint64_t sub_32430()
{
  return sub_19F50();
}

void sub_32440()
{
  int v5 = 535753261 * ((~((v4 - 120) | 0x58DFF578) + ((v4 - 120) & 0x58DFF578)) ^ 0xADD404A8);
  *(void *)(v4 - 120) = v0;
  *(_DWORD *)(v4 - 112) = v5 + (v2 ^ 0x2E5) + v3 + 998569068;
  *(_DWORD *)(v4 - 108) = v5 + v2 + 263;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 ^ 0xBEC)))(v4 - 120);
  JUMPOUT(0x324C4);
}

uint64_t sub_32564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  BOOL v36 = a20 > v29;
  unint64_t v37 = (*(_DWORD *)(v35 + a7) ^ v25) + HIDWORD(v31);
  *(_DWORD *)(v35 + 4 * a3) = v37 + ((v34 - 358) ^ a6 ^ (v25 + 839)) - (v27 & (2 * v37));
  *(_DWORD *)(a25 + a7) = HIDWORD(v37) | v25;
  LODWORD(v37) = v26 + v32 + 922;
  int v38 = v36 ^ ((int)v37 < a8);
  BOOL v39 = (int)v37 < v28;
  if (!v38) {
    BOOL v36 = v39;
  }
  return (*(uint64_t (**)(void))(v33 + 8 * (v34 ^ (v36 * v30))))();
}

uint64_t sub_325E4(_DWORD *a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_951B0
                             + ((37 * ((*a1 + *(_DWORD *)(a2 + 4) + 1924729399) > 0xC8)) | 0x1DAu)))();
}

void sub_3262C()
{
  *(_DWORD *)(v1 - 128) = v0 + 9;
  JUMPOUT(0x32718);
}

uint64_t sub_3278C@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v6 = (v5 - 155) ^ 0x741;
  int v7 = v3 + a2;
  int v8 = v3 + 1;
  *(_DWORD *)(*(void *)(v4 - 0x67843F9A1244BAC3) + 4 * (v7 + v6)) = a1;
  int v9 = v6 - 280;
  *(_DWORD *)(v4 - 0x67843F9A1244BAC7) = v8;
  int v10 = ((v6 - 280) ^ (a2 + 286)) + v8;
  if (v10 < 0) {
    int v10 = -v10;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((a2 + v9 + 104 + (v10 ^ 0xDFCF3DFD) + 1912266559 + ((2 * v10) & 0xBF9E7BFA) + 175) >> 31)
                                     * (v9 - 31)) ^ v9)))();
}

uint64_t sub_32854()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((238 * (STACK[0x458] != 0)) ^ (v0 + 279))))();
}

uint64_t sub_32888@<X0>(uint64_t a1@<X5>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = *(void *)(v10 + 8 * ((a3 - 688) ^ 0x9D));
  uint64_t v13 = *(void *)(v10 + 8 * ((a3 - 688) ^ 0x7C));
  uint64_t v14 = *(void *)(v10 + 8 * ((a3 - 688) ^ 0x80)) - 4;
  char v15 = *(unsigned char *)(v14 + (v9[14] ^ (((a3 + 7) & 0xFB) - 5)));
  char v16 = *(unsigned char *)(v14 + (v9[10] ^ 0xCBLL));
  uint64_t v17 = *(void *)(v10 + 8 * (a3 - 742)) - 12;
  unsigned int v18 = *(unsigned __int8 *)(v17 + (v9[1] ^ 0x1ALL));
  int v19 = (v18 >> 1) ^ (((((v18 ^ 0x12) + (v18 & 0xD5 ^ 0xEF) + 1) ^ v18 & 0xDF) & 0xF0) >> 4) ^ 0x6F;
  int v20 = ((v9[3] ^ 0xB8) + *(unsigned char *)(v12 + (v9[3] ^ 0x54)) - 104) | ((v18 ^ 0x17 ^ (v19 + (~(2 * v19) | 0x73) - 57)) << 16);
  int v21 = (((*(unsigned __int8 *)(v13 + (v9[8] ^ 0x65)) + (v9[8] ^ 0x34) - 93) ^ 0xF5) << 24) | (((v16 ^ (16 * v16)) ^ 0xF1) << 8) | ((v9[11] ^ 0x3E) + *(unsigned char *)(v12 + (v9[11] ^ 0xD2)) - 104);
  LOBYTE(v18) = *(unsigned char *)(v14 + (v9[6] ^ 0x2ELL));
  unsigned int v22 = *(unsigned char *)(v17 + (v9[13] ^ 0x5BLL)) ^ 0xC7;
  int v23 = ((v9[7] ^ 0x90) + *(unsigned char *)(v12 + (v9[7] ^ 0x7CLL)) - 104) | ((((v9[4] ^ 0x13)
                                                                                        + *(unsigned __int8 *)(v13 + (v9[4] ^ 0x42))
                                                                                        - 93) ^ v11) << 24) | (((v18 ^ (16 * v18)) ^ 0xED) << 8);
  unsigned int v24 = *(unsigned __int8 *)(v17 + (v9[13] ^ 0x5BLL)) ^ 0xFFFFFFC7 ^ (v22 >> 4) ^ (v22 >> 1);
  int v25 = (((v15 ^ (16 * v15)) ^ 0x3D) << 8) | ((v24 - ((2 * v24) & 0x2E) + 23) << 16);
  int v26 = v20 | (((*(unsigned __int8 *)(v13 + (*v9 ^ 0x81)) + (*v9 ^ 0xD0) - 93) ^ 0x3C) << 24);
  LOBYTE(v20) = *(unsigned char *)(v17 + (v9[5] ^ 0xEDLL));
  int v27 = ((v20 ^ 0xC7) >> 4) ^ ((v20 ^ 0xC7) >> 1);
  unsigned int v28 = v21 & 0xFF00FFFF | (((*(unsigned char *)(v17 + (v9[9] ^ 0x38)) ^ ((*(unsigned char *)(v17 + (v9[9] ^ 0x38)) ^ 0xC7) >> 4) ^ ((*(unsigned char *)(v17 + (v9[9] ^ 0x38)) ^ 0xC7) >> 1)) ^ 0x6C) << 16);
  unsigned int v29 = v26 & 0xFFFF00FF | (((*(unsigned char *)(v14 + (v9[2] ^ 0x22)) ^ (16
                                                                                   * *(unsigned char *)(v14 + (v9[2] ^ 0x22)))) ^ 0xC3) << 8);
  LODWORD(STACK[0x390]) = (v25 & 0xFFFFFF00 | ((((v9[12] ^ 0x13) + *(unsigned __int8 *)(v13 + (v9[12] ^ 0x42)) - 93) ^ v11) << 24) | (*(unsigned char *)(v12 + (v9[15] ^ 0x38)) + (v9[15] ^ 0xD4) - 104)) ^ 0x80472F42;
  LODWORD(STACK[0x350]) = v29 ^ 0x4848D46;
  LODWORD(STACK[0x28C]) = (v23 & 0xFF00FFFF | ((v20 ^ 0x6C ^ (v27
                                                                                              - ((2 * v27) & 8)
                                                                                              - 124)) << 16)) ^ 0x20D515C4;
  LODWORD(STACK[0x380]) = v28 ^ 0xFC04D3FA;
  return sub_38844((a3 - 2070936569) & 0x7B6FFFFB, 66, 19, v17, v12, a1, v13, a2, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_32890()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 - 1554) | v1) + 291) * LODWORD(STACK[0x388])) ^ ((v0 - 1554) | v1))))();
}

void sub_328F8()
{
}

uint64_t sub_32914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x278] = a7;
  *(void *)(v68 + 1516) = v65;
  *(void *)(v68 + 1524) = v65;
  *(_DWORD *)(v68 + 1532) = v66;
  *(void *)(v67 + 96) = v68;
  STACK[0x240] = v68;
  *(_DWORD *)(v68 + 476) = 141255584;
  unint64_t v69 = STACK[0x468];
  uint64_t v70 = (char *)&a10 + STACK[0x468] - 0x2CDB5D806DA9DF9DLL;
  STACK[0x350] = STACK[0x468];
  STACK[0x340] = (a9 + 139) + v69 + 251;
  STACK[0x3A0] = STACK[0x4E8];
  STACK[0x3C8] = (unint64_t)v70;
  STACK[0x248] = (unint64_t)(v70 + 392);
  a65 = v67;
  STACK[0x348] = v67;
  return sub_329A0(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_329A0@<X0>(int a1@<W8>)
{
  STACK[0x390] = *(void *)(v4 + 8 * a1);
  STACK[0x468] = STACK[0x340];
  LODWORD(STACK[0x4CC]) = 845113428;
  LODWORD(STACK[0x42C]) = 1284426096;
  STACK[0x570] = 0;
  LODWORD(STACK[0x528]) = -1800160278;
  *(_DWORD *)STACK[0x3C8] = 1321678224;
  LODWORD(STACK[0x388]) = v2 - 850385865;
  LODWORD(STACK[0x3D0]) = v2 + 1403143758;
  LODWORD(STACK[0x3D8]) = v2 - 1272754502;
  LODWORD(STACK[0x378]) = v2 + ((v1 + 189) ^ 0xD0681915);
  LODWORD(STACK[0x380]) = v2 + 1238727073;
  int v5 = *(uint64_t (**)(void))(v4 + 8576);
  LODWORD(STACK[0x398]) = v3;
  return v5();
}

uint64_t sub_32AA8@<X0>(unsigned int a1@<W8>)
{
  uint64_t v4 = a1;
  unint64_t v5 = v2 + a1 + (v1 ^ 0x5C8u) - 179;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((242 * (v5 - v4 + 1756633532 < (unint64_t)(v1 + 134) - 1530)) ^ v1)))();
}

uint64_t sub_32B0C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a6 = v8 + 460628867 * (((&a3 | 0x9DF19759) + (~&a3 | 0x620E68A6)) ^ 0xD1671525) + 1020;
  a3 = v7;
  a4 = a1;
  a5 = v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t *))(v6 + 8 * (v8 + 1765)))(&a3);
  return sub_32B68(v9);
}

uint64_t sub_32B94(uint64_t a1)
{
  int v1 = 1225351577 * ((-1431559688 - (a1 ^ 0x637B64C4 | 0xAAAC21F8) + (a1 ^ 0x637B64C4 | 0x5553DE07)) ^ 0x15B262D5);
  int v2 = *(_DWORD *)(a1 + 4) ^ v1;
  int v3 = *(_DWORD *)(a1 + 16) ^ v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x67843F9A1244BAC7);
  unsigned int v6 = v4 - 1372200252;
  BOOL v5 = v4 - 1372200252 < 0;
  unsigned int v7 = 1372200252 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_99820 + (v2 ^ 7)) + 8 * ((1430 * (v3 >> 5 < v7)) ^ v2) - 4))();
}

uint64_t sub_32CC4(uint64_t result)
{
  uint64_t v1 = 235795823 * ((((2 * result) | 0xAE1C50A9AAB8544) - result - 0x570E2854D55C2A2) ^ 0xDC0587BD9F88BFBLL);
  int v2 = *(_DWORD *)(result + 44) - v1;
  unint64_t v3 = *(void *)(result + 24) - v1;
  unint64_t v4 = *(void *)(result + 8) ^ v1;
  int v5 = *(_DWORD *)(result + 40) ^ v1;
  int v6 = *(_DWORD *)(result + 32) - v1;
  int v7 = *(_DWORD *)(result + 36) ^ v1;
  BOOL v8 = v3 > v4;
  BOOL v9 = v3 == v4;
  int v10 = v8;
  if (v6) {
    BOOL v9 = v10;
  }
  if (!v9) {
    int v2 = v5;
  }
  *(_DWORD *)uint64_t result = v7 ^ v2;
  return result;
}

void sub_32D60(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

void sub_32E14()
{
}

uint64_t sub_32F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v15 - 120) = v12;
  *(void *)(v15 - 112) = a12;
  *(_DWORD *)(v15 - 104) = (v14 + 924) ^ (1734042137
                                        * ((((2 * (v15 - 120)) | 0x4A156C80) - (v15 - 120) + 1526024640) ^ 0xF9C4750D));
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 + 1591)))(v15 - 120);
  return sub_32F7C(v16);
}

uint64_t sub_32FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, int32x4_t a33, int32x4_t a34, int32x4_t a35, int32x4_t a36, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16,uint64_t a17,uint64_t a18,uint64_t a19,uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v37 = *(unsigned __int8 *)(v36 - 124) ^ 0xCE;
  if (v37 == 1)
  {
    unsigned int v43 = *(_DWORD *)(v36 - 156);
    unsigned int v42 = *(_DWORD *)(v36 - 152);
    *(unsigned char *)(v36 - 164) = (a7 ^ (a7 + 43)) + ((8 * v42) ^ 0x78) - ((2 * ((8 * v42) ^ 0x78)) & 0xC0) - 16;
    *(unsigned char *)(v36 - 163) = ((v42 >> 5) ^ 0x6A) - ((2 * ((v42 >> 5) ^ 0x6A)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 162) = ((v42 >> 13) ^ 0x79) + ~(2 * (((v42 >> 13) ^ 0x79) & 0xE7 ^ (v42 >> 13) & 2)) - 26;
    *(unsigned char *)(v36 - 161) = ((v42 >> 21) ^ 0x71) - ((2 * ((v42 >> 21) ^ 0x71)) & 0xCA) - 27;
    HIDWORD(v44) = v43 ^ 0x12;
    LODWORD(v44) = v42 ^ 0xC0000000;
    *(unsigned char *)(v36 - 160) = (v44 >> 29) - ((2 * (v44 >> 29)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 159) = ((v43 >> 5) ^ 0x7F) - ((2 * ((v43 >> 5) ^ 0x7F)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 158) = ((v43 >> 13) ^ 0xC0) - 2 * (((v43 >> 13) ^ 0xC0) & 0xE7 ^ (v43 >> 13) & 2) - 27;
    unsigned int v41 = ((v43 >> 21) ^ 0xFFFFFF94) + ~(2 * (((v43 >> 21) ^ 0xFFFFFF94) & 0x67 ^ (v43 >> 21) & 2)) - 26;
    goto LABEL_5;
  }
  if (v37 == 2)
  {
    unsigned int v38 = *(_DWORD *)(v36 - 156);
    unsigned int v39 = *(_DWORD *)(v36 - 152);
    HIDWORD(v40) = v38 ^ 0x12;
    LODWORD(v40) = v39 ^ 0xC0000000;
    *(unsigned char *)(v36 - 164) = ((v38 >> 21) ^ 0x94) - ((2 * ((v38 >> 21) ^ 0x94)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 163) = ((v38 >> 13) ^ 0xC0) - ((2 * ((v38 >> 13) ^ 0xC0)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 162) = ((v38 >> 5) ^ 0x7F) - ((2 * ((v38 >> 5) ^ 0x7F)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 161) = (v40 >> 29) - ((2 * (v40 >> 29)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 160) = ((v39 >> 21) ^ 0x71) - 2 * (((v39 >> 21) ^ 0x71) & 0xE7 ^ (v39 >> 21) & 2) - 27;
    *(unsigned char *)(v36 - 159) = ((v39 >> 13) ^ 0x79) - ((2 * ((v39 >> 13) ^ 0x79)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 158) = ((v39 >> 5) ^ 0x6A) + (~(2 * ((v39 >> 5) ^ 0x6A)) | 0x35) - 26;
    unsigned int v41 = ((8 * v39) ^ 0x78) - (((8 * v39) ^ 0x78) >> 5 << 6) - 27;
LABEL_5:
    *(unsigned char *)(v36 - 157) = v41;
  }
  return sub_93CC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_33208()
{
  uint64_t v0 = (uint64_t)*(&off_99820
                + ((-19 * ((qword_A39F8 - dword_A39A8) ^ 0xED)) ^ byte_80450[byte_7ABD0[(-19 * ((qword_A39F8 - dword_A39A8) ^ 0xED))] ^ 0xD1])
                - 51);
  uint64_t v1 = *(void *)(v0 - 4);
  int v2 = (unint64_t *)*(&off_99820
                           + ((-19 * ((qword_A39F8 - v1) ^ 0xED)) ^ byte_7AAD0[byte_77C70[(-19 * ((qword_A39F8 - v1) ^ 0xED))] ^ 0x33])
                           - 160);
  unint64_t v3 = (unint64_t)&v7[v1 + *v2];
  unint64_t v4 = (1469428717 * v3) ^ 0xEC43BA4126E9F5EDLL;
  unint64_t v5 = 1469428717 * (v3 ^ 0xEC43BA4126E9F5EDLL);
  *(void *)(v0 - 4) = v4;
  *int v2 = v5;
  LOBYTE(v5) = -19 * (*(_DWORD *)(v0 - 4) ^ 0xED ^ v5);
  BOOL v8 = (char *)*(&off_99820 + (byte_7AAD4[(byte_77C7C[v5 - 12] ^ 0x69) - 4] ^ v5) - 56)
     - 4;
  unsigned int v9 = 1734 - 535753261 * (((&v8 | 0x1C15E18E) - (&v8 & 0x1C15E18E)) ^ 0x16E1EFA1);
  LOBYTE(v0) = -19 * (*(_DWORD *)(v0 - 4) ^ 0xED ^ *(_DWORD *)v2);
  return (*(uint64_t (**)(char **))((char *)*(&off_99820
                                                      + ((-19
                                                                                       * (dword_A39A8 ^ 0xED ^ qword_A39F8)) ^ byte_77E70[byte_84140[(-19 * (dword_A39A8 ^ 0xED ^ qword_A39F8))] ^ 0x7E])
                                                      + 76)
                                            + 8
                                            * (byte_7ACD0[byte_77D7C[v0 - 12] ^ 0xFA] ^ v0)
                                            + 15740))(&v8);
}

uint64_t sub_33448(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((*(_DWORD *)(v3 + 4 * v4) == a2) * ((3 * (v2 ^ 0x770)) ^ 0x6BF)) ^ v2)))();
}

uint64_t sub_3347C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8 * ((((v3 - 841) ^ (v3 - 845)) * ((v2 - 1372200252) * (v1 - 1372200252) >= 0)) ^ v3)))();
}

void sub_334B8(uint64_t a1)
{
  int v2 = (unint64_t *)*(&off_99820
                           + ((-19 * ((qword_A39F8 - dword_A3938) ^ 0xED)) ^ byte_80550[byte_7ADD0[(-19 * ((qword_A39F8 - dword_A3938) ^ 0xED))] ^ 0xA3])
                           - 83);
  unsigned __int8 v3 = -19 * (*v2 ^ qword_A39F8 ^ 0xED);
  unsigned int v4 = (unint64_t *)*(&off_99820
                           + (byte_7ACD0[byte_77D7C[v3 - 12] ^ 0xCE] ^ v3)
                           + 24);
  unint64_t v5 = (*v4 + *v2) ^ (unint64_t)&v9;
  unint64_t v6 = (1469428717 * v5) ^ 0xEC43BA4126E9F5EDLL;
  unint64_t v7 = 1469428717 * (v5 ^ 0xEC43BA4126E9F5EDLL);
  *int v2 = v6;
  *unsigned int v4 = v7;
  BOOL v8 = (char *)*(&off_99820
               + ((-19 * ((qword_A39F8 - dword_A3938) ^ 0xED)) ^ byte_7ACD0[byte_77D70[(-19 * ((qword_A39F8 - dword_A3938) ^ 0xED))] ^ 0xA3])
               + 71)
     - 4;
  (*(void (**)(char *, uint64_t (*)()))&v8[8
                                                   * (byte_77E74[(byte_8414C[(-19 * ((v7 + *(unsigned char *)v2) ^ 0xED))
                                                                                            - 12] ^ 0x7E)
                                                                                - 4] ^ (-19
                                                                                      * ((v7 + *(unsigned char *)v2) ^ 0xED)))
                                                   + 16608])((char *)*(&off_99820+ (byte_7AAD4[(byte_77C7C[(-19 * ((v7 + *(unsigned char *)v2) ^ 0xED)) - 12] ^ 0x69)- 4] ^ (-19 * ((v7 + *(unsigned char *)v2) ^ 0xED)))- 62)- 4, sub_33208);
  __asm { BRAA            X10, X17 }
}

void sub_336A0()
{
  STACK[0x520] = *(void *)(v1 + 8 * (v0 - 1322));
  JUMPOUT(0x24788);
}

uint64_t sub_336D4@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  LODWORD(STACK[0x3A0]) = v28;
  LODWORD(STACK[0x3C8]) = a1;
  if (v28 == 604952962)
  {
    int v33 = STACK[0x3FC];
    int v34 = 15;
  }
  else
  {
    int v33 = STACK[0x3FC];
    if (v28 != 604952958)
    {
      LODWORD(STACK[0x388]) = 0;
      LODWORD(STACK[0x390]) = 0;
      goto LABEL_7;
    }
    int v34 = 18;
  }
  LODWORD(STACK[0x390]) = v34;
  LODWORD(STACK[0x388]) = 1;
LABEL_7:
  int v35 = (v33 - 57) | 0x80;
  LODWORD(STACK[0x398]) = v33 - 1202;
  int v36 = 3804331 * ((((v32 - 192) | 0xA88BB7C0) - ((v32 - 192) & 0xA88BB7C0)) ^ 0x52154496);
  *(_DWORD *)(v32 - 160) = v33 - v36 + 202;
  *(_DWORD *)(v32 - 124) = v36 + v30 + 538555623;
  *(void *)(v32 - 192) = a2 + 0x67843F9A1244BDEBLL;
  *(void *)(v32 - 184) = 0;
  *(void *)(v32 - 176) = v29 + 1168;
  *(void *)(v32 - 168) = 0;
  *(void *)(v32 - 152) = a2 + 0x67843F9A1244BCDBLL;
  *(void *)(v32 - 144) = STACK[0x3D8];
  *(void *)(v32 - 136) = a28;
  (*(void (**)(uint64_t))(v31 + 8 * (v33 + 807)))(v32 - 192);
  return (*(uint64_t (**)(void))(v31
                                           + 8
                                           * (((*(_DWORD *)(v32 - 128) != -1373544826) * (v35 ^ 0x5C6)) ^ LODWORD(STACK[0x398]))))(LODWORD(STACK[0x3C8]));
}

uint64_t sub_3385C()
{
  unint64_t v5 = 1224239923
     * ((((v1 - 144) | 0x64C93076847FE56DLL) - (v1 - 144) + ((v1 - 144) & 0x9B36CF897B801A90)) ^ 0x4C93851F76CC18BALL);
  STACK[0x4F8] = 0x9E3A0C070732BCD8;
  uint64_t v2 = dword_A4544;
  *(_DWORD *)(v1 - 120) = v5 - 1501685844;
  *(_DWORD *)(v1 - 116) = -1224239923
                        * ((((v1 - 144) | 0x847FE56D) - (v1 - 144) + ((v1 - 144) & 0x7B801A90)) ^ 0x76CC18BA);
  *(_DWORD *)(v1 - 112) = v5 + 434468722;
  *(_DWORD *)(v1 - 108) = v5 + 434468686;
  *(_DWORD *)(v1 - 140) = v5 + 434468657;
  *(void *)(v1 - 136) = v5 ^ 0x5A748A2C;
  *(void *)(v1 - 128) = v2 ^ v5;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 17376))(v1 - 144);
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * *(int *)(v1 - 144)))(v3);
}

uint64_t sub_33AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  unsigned int v22 = ((v20 - 1716) ^ 0x2C9A20EC) + a19;
  BOOL v23 = v19 + a7 < v22;
  if (v22 < 0x7928EA63 != (v19 + a7) < 0x7928EA63) {
    BOOL v23 = v22 < 0x7928EA63;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8 * ((52 * !v23) ^ v20)))(2955151370, 2282780948);
}

void sub_33B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_33BC0@<X0>(int a1@<W8>)
{
  uint64_t v3 = *v6;
  int v4 = 235795823 * ((((2 * (v2 - 168)) | 0xEC2AD926) - (v2 - 168) + 166368109) ^ 0x62B825CA);
  *(void *)&v7[444] = v6[2];
  int v10 = &STACK[0x3AC75C5FABFFD031];
  BOOL v8 = v7;
  uint64_t v9 = v3;
  *(_DWORD *)(v2 - 132) = (a1 + 1986) ^ v4;
  *(_DWORD *)(v2 - 160) = v4 + 1488611281;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 ^ 0x8BC)))(v2 - 168);
  *((_DWORD *)v6 + 7) = *(_DWORD *)(v2 - 136);
  return result;
}

void sub_33CBC(_DWORD *a1@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(*(void *)(v3 + 24) - 0x6A4735A87A2643E5) = v1;
  *(_DWORD *)(v4 - 0xC9996988DE5192) = v2;
  *(_DWORD *)uint64_t v3 = *a1;
}

uint64_t sub_33D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1145 * (a7 + 1 == v8 + 64)) ^ a5)))();
}

uint64_t sub_33DFC(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  HIDWORD(v18) = a1 ^ a7;
  LODWORD(v18) = a1 ^ 0x55555555;
  int v19 = (v18 >> 27)
      + (v7 ^ (v10 + ((a2 - 991) | 0x440) - 1138))
      + ((v13 ^ v10) & (v9 ^ a6) | (v17 ^ v10) & (v9 ^ v10))
      + (*(_DWORD *)(v8 + 4 * (a5 + v15)) ^ v11);
  return (*(uint64_t (**)(void))(v14 + 8 * ((99 * (a5 + 1 == v16 + 4)) ^ a2)))(v19
                                                                                           - ((2 * v19 - 1257966798) & v12) - 1397756669);
}

uint64_t sub_33ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  int v14 = *(_DWORD *)(v13 - 220 + 4 * ((v11 + v8) >> ((v9 - a6) ^ (a7 - 2))) + 72);
  *(unsigned char *)(a4 + (v11 + v8 + 1)) = (BYTE2(v14) ^ 0x2D) - ((2 * (BYTE2(v14) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a4 + (v11 + v8)) = (HIBYTE(v14) ^ 0x52) - ((2 * (HIBYTE(v14) ^ 0x52)) & 0xCA) - 27;
  *(unsigned char *)(a4 + (v11 + v8 + 2)) = (BYTE1(v14) ^ 0x73) - ((2 * (BYTE1(v14) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a4 + (v11 + v8 + 3)) = v14 ^ 0x8F;
  unsigned int v15 = *(_DWORD *)(v13 - 128) - 1829297443;
  BOOL v16 = v15 < v7;
  BOOL v17 = v11 - 1113436450 < v15;
  if (v11 - 1113436450 < v7 != v16) {
    BOOL v17 = v16;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((v17 * v10) ^ v9)))();
}

uint64_t sub_33FA4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 16) == 0x56530F603BC303ACLL)
                                * ((2 * v0) ^ 0x274 ^ (4 * v0) ^ 0x88 ^ 0x66F)) ^ v0)))();
}

uint64_t sub_33FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  return sub_125E0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_34004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((2031 * (v6 + 1 == v7 + 16)) ^ a5)))();
}

uint64_t sub_34170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((a5 + v8 + 1269 < ((a8 + 897060140) ^ 0x35780A25u) - 2018)
                                     * (((a8 + 897060140) & 0xCA87F2FA) - 221)) ^ a8)))();
}

void sub_341C0()
{
}

uint64_t sub_341F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                         + 8
                                                                                         * ((((v3 - 1442109809) < 0x38)
                                                                                           * (v4 - 1118)) ^ (v4 - 1257))))(a1, a2, a3, 36533098, 2897210627, 3037000498);
}

uint64_t sub_3423C@<X0>(unint64_t a1@<X8>)
{
  STACK[0x4C0] = *(void *)(v2 + 8 * (LODWORD(STACK[0x3FC]) - 1359));
  return sub_25A74(-50331659, a1);
}

uint64_t sub_34258()
{
  STACK[0x250] = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1946
                                * ((((v0 ^ 0x39F) + 1293) ^ 0xB3712BDF) + LODWORD(STACK[0x548]) < 23 * (v0 ^ 0x39Fu)
                                                                                                - 3590)) ^ v0)))();
}

uint64_t sub_343B0()
{
  int v3 = (v1 - 642897240) & 0x2651D62A;
  if ((v3 ^ 0x2E35E6EE) + v2 < 0) {
    int v4 = v2;
  }
  else {
    int v4 = -1550566792 - v2;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((314 * ((int)(((v3 + 420) ^ 0xAE35E70D) + v4) >= 0)) ^ v3)))();
}

uint64_t sub_34458@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>)
{
  int v10 = (unsigned int *)(v8 + 4 * v3);
  uint64_t v11 = (a3 + 354) + v3 - 1372;
  int v12 = *(_DWORD *)(v8 + 4 * v11);
  unsigned int v13 = v5 ^ ((v12 & 0x7FFFFFFE | v4 & 0x80000000) >> 1);
  *int v10 = v10[397] ^ a2 ^ *(_DWORD *)(v9 - 152 + 4 * (v12 & 1)) ^ (v13 + a1 - (v7 & (2 * v13)));
  return (*(uint64_t (**)(void))(v6 + 8 * (((2 * (v11 == 227)) | ((v11 == 227) << 10)) ^ a3)))();
}

uint64_t sub_344CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, unint64_t *))(v67 + 1688))(a1, a2, a3, a4, a5, a6, 3230439687, 2367607715, a9, &a67, a11, &STACK[0x76DC35A7F08F6A9A]);
}

uint64_t sub_34624(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = -86;
  }
  else {
    char v2 = -88;
  }
  *(unsigned char *)(a1 + 88) = ((**(unsigned char **)(a2 + 8) != 0) ^ 0x5B) + v2;
  return 0;
}

void sub_3465C(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,_DWORD *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v28 = 4 * (v27 - 270049517);
  unsigned int v29 = 2111498075 * ((*(_DWORD *)(*a22 + (*a23 & (17 * (a1 ^ 0x20Eu) + 153215391))) ^ (a26 + v28)) & 0x7FFFFFFF);
  int v30 = v29 ^ HIWORD(v29);
  unsigned int v31 = 2111498075 * v30;
  *(_DWORD *)(a27 + v28) ^= *(_DWORD *)(a26 + v28) ^ *((_DWORD *)*(&off_99820 + (a1 ^ 0x2B0)) + HIBYTE(v31) - 3) ^ *((_DWORD *)*(&off_99820 + (a1 ^ 0x2B9)) + HIBYTE(v31) + 1) ^ *((_DWORD *)*(&off_99820 + a1 - 518) + HIBYTE(v31)) ^ (-413466624 * v30) ^ v31 ^ (-1109235783 * HIBYTE(v31));
  JUMPOUT(0x49BCLL);
}

uint64_t sub_3474C()
{
  int v3 = LODWORD(STACK[0x3FC]) - 1187;
  *(_DWORD *)(STACK[0x250] + 52) = ((((LODWORD(STACK[0x61C]) ^ v2) + (v0 ^ v2)) % 0x2710) ^ 0xFEFDFFDB)
                                 + 200981760
                                 + (((((LODWORD(STACK[0x61C]) ^ v2) + (v0 ^ v2)) % 0x2710) << ((LODWORD(STACK[0x3FC])
                                                                                              + 93) ^ 0xAC)) & 0x7FB6);
  int v4 = STACK[0x624];
  LODWORD(STACK[0x5CC]) = STACK[0x624];
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v4 == v2) << 6) | ((v4 == v2) << 10)) ^ v3)))();
}

uint64_t sub_347E4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 + 152) | 0x85) ^ 0x4CA) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_3481C@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((a2 + a1 + ((v3 - 114) | 0x60E) - 1566 - 67)
                                * (a3 + v4 + 63 >= (a3 + v4))) ^ v3)))();
}

uint64_t sub_34864(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1881
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 4) - 147)))
                                 + ((*(unsigned __int8 *)(a2 + 4) - 147) ^ v4) == ((v3 + 42146707) | 0x5114E150)
                                                                                + 1264036414)) ^ v3)))();
}

uint64_t sub_348C0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((8 * (v1 + 1 == v3 + 24)) | (32 * (v1 + 1 == v3 + 24))) ^ v0)))();
}

uint64_t sub_34984@<X0>(int a1@<W8>, double a2@<D0>)
{
  *(double *)(v5 + (v2 & 0x4C84CFFF)) = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 0) * v3) ^ a1)))();
}

void sub_349B8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 1224239923 * (((a1 | 0xDD953B90) - (a1 & 0xDD953B90)) ^ 0x2F26C647);
  __asm { BRAA            X14, X17 }
}

void sub_34AE8()
{
}

void sub_34B00()
{
  uint64_t v3 = *(void *)(v0 + 24);
  *(_DWORD *)(*(void *)(v0 + 8) - 0x1401A874B35F4D7BLL) = *v1;
  *(_DWORD *)(v3 - 0xD547898781B11C0) = *v2;
  *(_DWORD *)(v0 + 16) = -1373544826;
}

uint64_t sub_34B80@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

uint64_t sub_34B98@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  STACK[0x478] = a1 - a2;
  uint64_t v3 = (uint64_t (*)(void))STACK[0x520];
  STACK[0x468] = v2 - 112;
  return v3();
}

uint64_t sub_34BB4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(void *)(*(void *)(v2 + 8 * (v1 - 306)) - 4) == 0)
                                * (((v1 + 73) | 0x404) + 333)) ^ v1)))();
}

uint64_t sub_34BEC@<X0>(int a1@<W8>)
{
  BOOL v5 = *(_DWORD *)(v2 + 16) + a1 == (v1 ^ 0x2A8E9CB2) || (*(void *)(v2 + 56) | *(void *)(v2 + 32)) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 | (16 * (((v1 - 107) ^ v5) & 1)))))();
}

uint64_t sub_34C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_384BC(a1, a2, a3, a4, a5);
}

void sub_34C54()
{
}

void sub_34C9C()
{
}

uint64_t sub_34CA8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v3 + 48 * v5 + 36) == ((v4 + 17 * (v2 ^ 0x69E) - 1502) ^ (v2 + 2100238120) & 0x82D0E37B))
                                * a2) ^ v2)))();
}

void sub_34D04()
{
}

uint64_t sub_34D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 - a1 - ((29 * (a6 ^ 0x650u)) ^ 0x158uLL) < 0x20) * (a6 - 1410)) ^ a6)))();
}

uint64_t sub_34D5C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((224 * ((a3 + 1 + v4) > 0x3B)) ^ v3)))();
}

uint64_t sub_34E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_384BC(a1, a2, a3, a4, a5);
}

uint64_t sub_35058@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (a1 - 1838920608)) = *(unsigned char *)(a2 + (a1 - 1838920608));
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 - 1 == a3) * (((v4 - 301309511) & 0x11F59FFE) - 98)) ^ (v4 + 194))))();
}

void sub_350AC()
{
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1356));
  JUMPOUT(0x67B8);
}

uint64_t sub_350CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * (int)(((((v5 - 1062) ^ 0xFFFFFC7B)
                                                                                        + v5
                                                                                        + 14)
                                                                                       * (v4 == v3)) ^ v5)))(a1, a2, a3, 36533098, 2897210627);
}

void sub_3510C()
{
  if (v0 == 100576577) {
    int v1 = -1373544826;
  }
  else {
    int v1 = 1373504862;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

uint64_t sub_35170()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 40) + ((v4 - 1200) ^ 0x83C8D9B30161C2E9) + v0)
     - *(unsigned __int8 *)(v5 + ((v4 - 1200) ^ 0x83C8D9B30161C2E9) + v0);
  uint64_t v7 = v0 + 1;
  BOOL v9 = (v6 ^ 0x7ECF287A) - 860242 + ((2 * v6) & 0xFD9E50F4) == 2126645288 && v7 != v2 + 16;
  return (*(uint64_t (**)(void))(v3 + 8 * ((501 * v9) ^ v4)))();
}

uint64_t sub_351F8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*v2 == 0) * (v0 ^ 0xA0 ^ (v0 + 160) ^ 0x3D)) ^ v0)))();
}

uint64_t sub_35230()
{
  int v5 = 535753261 * ((666930412 - ((v4 - 120) | 0x27C08CEC) + ((v4 - 120) | 0xD83F7313)) ^ 0xD2CB7D3C);
  *(_DWORD *)(v4 - 112) = v5 + (v3 ^ 0x318) + v0 + 1540941954;
  *(_DWORD *)(v4 - 108) = v5 + v3 + 960;
  *(void *)(v4 - 120) = v1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 ^ 0x8AB)))(v4 - 120);
  return sub_352BC(v6);
}

uint64_t sub_352BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v28 - 112) = a21;
  *(void *)(v28 - 104) = a23;
  *(_DWORD *)(v28 - 120) = (v24 + 99) ^ (((v28 - 120 + v26 - 2 * ((v28 - 120) & v26)) ^ 0x191EE5E0) * v27);
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 ^ 0xBE8)))(v28 - 120);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((*(_DWORD *)(v28 - 116) > v25)
                                              * ((v24 - 1291591756) & 0x4CFC1FF6 ^ 0x352)) ^ v24)))(v29);
}

uint64_t sub_35354()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 756)))(200, 1616997413) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((v2 * (((v1 + 634708348) & 0xDA2B1FDF) + (v1 ^ 0xFFFFFF47))) ^ v1)))();
}

uint64_t sub_353BC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26)
{
  *(void *)(&a26 + a1 - 1076023950) = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((827 * ((v26 & 0x38) - v28 == -780)) ^ v27)))(v28 - 780);
}

uint64_t sub_35414@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((39 * (a1 + v2 - 460 - 2109733556 >= ((v2 + 1040781546) & 0xC1F6EE9B ^ (v1 + 305)))) ^ v2)))();
}

uint64_t sub_35474@<X0>(uint64_t a1@<X5>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22,uint64_t (*a23)(uint64_t))
{
  int v27 = (v23 - 1972685016) & 0x7594C7FE;
  *(unsigned char *)(a1 + (v27 ^ 0xCD1F0413) + a3) = *(unsigned char *)(a2 + (v24 - 158929243));
  int v28 = 3804331 * ((v26 - 168) ^ 0xFA9EF356);
  STACK[0x320] = a22;
  *(_DWORD *)(v26 - 168) = v28 + v27 + 1389;
  *(_DWORD *)(v26 - 164) = v28 ^ 0x4B7EE199;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v27 + 2134)))(v26 - 168);
  return a23(v29);
}

uint64_t sub_35518()
{
  return 4294925278;
}

void sub_35520()
{
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1345));
  JUMPOUT(0x25A6CLL);
}

uint64_t sub_3553C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 1755732067 * ((-2 - ((a1 | 0x71A11D05) + (~a1 | 0x8E5EE2FA))) ^ 0x50985F21);
  uint64_t v2 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v4 = v2;
  unsigned int v5 = v1
     + 1882359101
     - 1178560073
     * (((&v4 | 0xB9E09D61) - &v4 + (&v4 & 0x461F6298)) ^ 0x8BF69D21);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_99820 + (int)(v1 ^ 0x8FCD81B0)) + 8 * v1 + 0x381943984))(&v4);
}

uint64_t sub_35650(_DWORD *a1)
{
  unsigned int v1 = *a1 - 1225351577 * (((a1 | 0xD6503E34) - (a1 & 0xD6503E34)) ^ 0xF5CAE622);
  uint64_t v2 = *(void *)((char *)*(&off_99820 + (int)(v1 - 426522894)) - 4);
  unsigned int v4 = v1
     - 426522894
     - 1734042137 * ((&v4 & 0xE0962FD3 | ~(&v4 | 0xE0962FD3)) ^ 0x43A71361)
     + 955;
  uint64_t v5 = v2;
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_99820 + (int)(v1 ^ 0x196C3911))
                                                   + 8 * (int)(v1 ^ 0x196C312F)
                                                   - 4))(&v4);
}

uint64_t sub_3575C@<X0>(int a1@<W8>)
{
  int v7 = ((((v6 - 144) | 0x787CBED1) - (v6 - 144) + ((v6 - 144) & 0x87834128)) ^ 0x34EA3CAC) * v4;
  *(void *)(v6 - 144) = v5;
  *(_DWORD *)(v6 - 136) = v7 + a1 - 1029;
  *(_DWORD *)(v6 - 128) = v2 + v7 - 239126786 + a1 - 334;
  *(void *)(v6 - 120) = v1;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a1 ^ 0xCFFu)))(v6 - 144);
  return sub_357D8(v8);
}

uint64_t sub_357D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)(v21 - 144) = v19;
  *(void *)(v21 - 136) = a16;
  *(_DWORD *)(v21 - 128) = (v20 - 101) ^ (235795823
                                        * (((v21 - 144) & 0xEA18056 | ~((v21 - 144) | 0xEA18056)) ^ 0x65F336F0));
  (*(void (**)(uint64_t))(v18 + 8 * (v20 + 1312)))(v21 - 144);
  *(_DWORD *)(v21 - 120) = v20
                         + 1374699841 * ((((2 * (v21 - 144)) | 0x1FE71C14) - (v21 - 144) + 1879863798) ^ 0xE2079603)
                         + 257;
  *(void *)(v21 - 144) = v19;
  *(void *)(v21 - 112) = a16;
  *(void *)(v21 - 104) = a17;
  *(void *)(v21 - 136) = a18;
  *(void *)(v21 - 128) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v20 ^ 0xBF9)))(v21 - 144);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (((((a15 == 0) ^ (v20 + 1)) & 1)
                                              * ((11 * (v20 ^ 0x326)) ^ 0x4B0)) ^ v20)))(v22);
}

void sub_358F8(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 1178560073 * ((-693187448 - (a1 | 0xD6AECC88) + (a1 | 0x29513377)) ^ 0x1B473337);
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x67843F9A1244BAC7);
  uint64_t v5 = *(void *)(a1 + 8);
  unsigned int v4 = v1 + 535753261 * (((&v4 | 0xB0DB09EA) - (&v4 & 0xB0DB09EA)) ^ 0xBA2F07C5) + 174;
  uint64_t v3 = (char *)*(&off_99820 + v1 - 1009) - 4;
  (*(void (**)(unsigned int *))&v3[8 * (v1 ^ 0xC03)])(&v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_35A50@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(void, uint64_t, void))(v4 + 8 * (v3 ^ 0xF6C)))(**(unsigned int **)(a2 + 8 * (v3 ^ 0x744)), a1, *(_DWORD *)(v5 - 0x7761D79CB8DF4D0BLL) + (v3 ^ 0x308 ^ (v2 + 1820)));
  return sub_35A9C(v6);
}

uint64_t sub_35A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  unint64_t v13 = ((unint64_t)&a10 ^ 0x3E7FE9EFFD76FDFFLL)
      - 0x20B8848040240FFLL
      + ((2 * (void)&a10) & 0x7CFFD3DFFAEDFBF0);
  *(unsigned char *)(v11 - 0x7761D79CB8DF4CF4) = (v13 ^ 0xBA) * (v13 + 17);
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((910 * (641 * (v12 ^ 0x4E4) == 1954)) ^ v12)))(v11 - 0x7761D79CB8DF4D13);
}

uint64_t sub_35B58@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int8x16_t *a12)
{
  unint64_t v13 = (int8x16_t *)((char *)&STACK[0x670] + STACK[0x350] - 0x2CDB5D806DA9E60DLL);
  v13[-12] = veorq_s8(*a12, (int8x16_t)xmmword_84340);
  STACK[0x600] += ((a6 - 768) | 0x302u) ^ 0x3AALL;
  STACK[0x610] = a1;
  STACK[0x608] = a1;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12
                                                                                         + 8
                                                                                         * (a6 ^ (2
                                                                                                * (&v13[-12] != (int8x16_t *)a1)))))(a1, a2, a3, a4, a5);
}

uint64_t sub_35BDC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 448) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 7016))(0);
}

void sub_35C48()
{
}

uint64_t sub_35C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v31 = v28 + 1078493763;
  if ((v28 + 1078493763) <= 0x40) {
    int v31 = 64;
  }
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((248 * (-v27 - v26 + (((v29 - 301) | 0x1B8) ^ 0xBFB77A41) + v31 >= 373 * (v29 ^ 0x773u) - 731)) ^ v29)))(-v27, a2, 3136653436, a4, 1158313983, 4294966944, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_35CF8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + a1) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((((v4 & 0x38) == 8) * (((v3 + 964200645) & 0xC68773FF) - 464)) ^ v3)))();
}

uint64_t sub_35D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * ((255 * (((*((_DWORD *)&a22 + 6 * (v22 - 463788148)) + (int)a8) & 0xFFFFFFFFFFFFFFELL) == 2)) ^ v23)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

void sub_35E24(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 1225351577 * (((a1 | 0x5CD61F00) - (a1 | 0xA329E0FF) - 1557536513) ^ 0x7F4CC716);
  __asm { BRAA            X12, X17 }
}

uint64_t sub_35F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((1268 * (a8 + 1 == v10 + 48)) ^ v8)))();
}

uint64_t sub_35FEC@<X0>(int a1@<W4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27)
{
  *(&a27 + a2 - 1076023950) = -27;
  return (*(uint64_t (**)(void))(v28 + 8 * ((1490 * ((unint64_t)(a2 - 1076023949) < 0x38)) ^ (v27 + a1))))();
}

uint64_t sub_36030(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v13 = (v8 + a3);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(v6 + (v13 & 0xF)) ^ *(unsigned char *)(v4 + (v13 & 0xF)) ^ *(unsigned char *)((v13 & 0xF) + v5 + 2) ^ ((*(unsigned char *)(v11 + v13) | 0x65) + (*(unsigned char *)(v11 + v13) | 0x9A) - 107) ^ ((v13 & 0xF) * v9);
  return (*(uint64_t (**)(void))(v12 + 8 * (((v7 - 694 + v8 - 905 == v10) * a4) ^ v7)))();
}

uint64_t sub_360A4(int a1)
{
  int v6 = v1 + v2;
  if ((v6 - 14) > 0x40) {
    a1 = v6 - 14;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((467 * (14 - v6 < (v3 + v4 + a1 + 14))) ^ 0xF4u)))();
}

uint64_t sub_36108()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((7 * (((v0 - 406) | 0x144) ^ 0x150)) ^ 0x693) * (*(void *)(v1 + 8) == 0)) | v0)))();
}

uint64_t sub_3617C()
{
  unsigned int v9 = (v3 + 685) ^ (1374699841 * ((2 * (&v9 & 0x70180268) - &v9 - 1880621676) ^ 0xE213E59D));
  uint64_t v11 = &STACK[0x18D17CD12703C537];
  uint64_t v12 = v6;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 + 1378)))(&v9);
  unsigned int v9 = v3 + 1225351577 * ((2 * (&v9 & 0x28379F0) - &v9 + 2105312781) ^ 0x5EE65E1B) + 1315;
  uint64_t v11 = v6;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 + 1389)))(&v9);
  if (v10 == ((v3 - 154) ^ (v1 - 391))) {
    unsigned int v4 = v7;
  }
  else {
    unsigned int v4 = v10;
  }
  unsigned int v10 = v3 + ((2 * (&v9 & 0x4855FEB0) - &v9 - 1213595313) ^ 0xBD5E0F60) * v0 + 1244;
  uint64_t v11 = v6;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 + 1320)))(&v9);
  unsigned int v10 = v3 - 154 + (&v9 ^ 0xAF40E2F) * v0 + 1398;
  uint64_t v11 = v8;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 + 1320)))(&v9);
  return v4 ^ v1;
}

uint64_t sub_3633C@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 + v7)) = *(unsigned char *)(v6 + (a1 + v7));
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * (((a1 - 1 == v4) * ((a2 - 294937571) & 0x3DF4EBCC ^ (v5 + 2389))) ^ a2)))(0);
}

uint64_t sub_3638C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((240
                                * (*(_DWORD *)(v3 + 48 * (int)((((v1 + 1073750171) | 0x10E84110) ^ 0xDDF6B4B3) + v0)) != ((v1 - 1251) | 4) + 366686309)) ^ v1)))();
}

uint64_t sub_363FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(v6 - 1397079334 + v9 - 220 - 1) = -27;
  return (*(uint64_t (**)(void))(v8 + 8 * ((109 * ((unint64_t)(v6 - 1397079334) < 0x38)) ^ (a6 + v7 + 969))))();
}

uint64_t sub_36444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((107 * ((((v7 - 699) ^ (v6 == a6)) & 1) == 0)) ^ v7)))();
}

void sub_3647C(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7) == 1372200252
    || *(_DWORD *)(*(void *)(a1 + 16) - 0x67843F9A1244BAC7) == 1372200252;
  int v1 = *(_DWORD *)(a1 + 8) + 1178560073 * ((2 * (a1 & 0x476169A4) - a1 - 1197566373) ^ 0x8A88961B);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_3658C(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 8) - 0x216229CD9A8FA111) = v1;
  return result;
}

uint64_t sub_365A8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((29 * (a2 ^ 0x440)) ^ 0x36) * (v2 == v3)) ^ a2)))();
}

uint64_t sub_365F0@<X0>(uint64_t a1@<X6>, int a2@<W8>, __n128 a3@<Q0>)
{
  int v5 = (char *)&STACK[0x670] + a1 - 0x2CDB5D806DA9E60DLL;
  *(_DWORD *)int v5 = 890137121;
  *((void *)v5 + 1) = 0;
  *((_DWORD *)v5 + 4) = 487328828;
  *((_DWORD *)v5 + 6) = 1284426096;
  *((void *)v5 + 4) = 0;
  *((_DWORD *)v5 + 10) = 1284426096;
  STACK[0x530] = (unint64_t)(v5 + 40);
  *((void *)v5 + 6) = 0;
  STACK[0x5C0] = (unint64_t)(v5 + 48);
  *((_DWORD *)v5 + 14) = 1284426096;
  STACK[0x550] = (unint64_t)(v5 + 56);
  *((void *)v5 + 8) = 0;
  STACK[0x4D8] = (unint64_t)(v5 + 64);
  *((_DWORD *)v5 + 18) = 1284426096;
  STACK[0x540] = (unint64_t)(v5 + 72);
  *((void *)v5 + 10) = 0;
  STACK[0x558] = (unint64_t)(v5 + 80);
  v5[88] = 3;
  *(_DWORD *)uint64_t v3 = 890137121;
  *(__n128 *)(v3 + 4) = a3;
  *(_DWORD *)(v3 + 20) = 0;
  *(_DWORD *)(v3 + 24) = 1284426096;
  *(_DWORD *)(v3 + 28) = 1085811802;
  STACK[0x2C8] = v3 + 28;
  *(_DWORD *)(v3 + 232) = 1085811802;
  STACK[0x2C0] = v3 + 232;
  *(__n128 *)(v3 + 436) = a3;
  *(__n128 *)(v3 + 452) = a3;
  *(void *)(v3 + 468) = 0;
  *(void *)(v3 + 1128) = 0xE5E5E5E5E5E5E5E5;
  *(void *)(v3 + 1136) = 0xE5E5E5E5E5E5E5E5;
  *(void *)(v3 + 1152) = 0;
  *(void *)(v3 + 1160) = 0;
  *(void *)(v3 + 1144) = 3857049061;
  *(__n128 *)(v3 + 1168) = a3;
  *(__n128 *)(v3 + 1184) = a3;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((911 * ((16 * ((a2 + 101) ^ 0x42) + 41) & 1)) ^ (16
                                                                                                 * ((a2 - 667) ^ 0x242)))))();
}

uint64_t sub_3674C@<X0>(int a1@<W3>, int a2@<W8>)
{
  uint64_t v7 = 4 * (v2 - 648545234);
  unsigned int v8 = *(_DWORD *)(v5 + 4 * (v2 - 648545235));
  int v9 = (((v8 >> 30) ^ 1) + a1 - 4 * (v8 >> 31)) ^ v8;
  int v10 = ((a1 + 1566083941 * v9 - ((-1162799414 * v9) & 0xAE0C3E6C)) ^ *(_DWORD *)(v5 + v7)) - v2;
  *(_DWORD *)(v5 + v7) = v10 - ((2 * v10 + 1297090468) & 0xAE0C3E6C) + 2108564232;
  uint64_t v11 = 235795823 * ((v6 - 144) ^ 0x8B0BAFE94AD4959);
  LODWORD(v7) = v11 ^ (a2 - 498060096);
  *(void *)(v6 - 120) = v11 + 2574196984;
  *(void *)(v6 - 136) = (v2 + 1925651751) ^ (unint64_t)v11;
  *(_DWORD *)(v6 - 104) = v7 ^ 0x6E;
  *(_DWORD *)(v6 - 100) = a2 - 498060096 + v11;
  *(_DWORD *)(v6 - 112) = v11 + 1;
  *(_DWORD *)(v6 - 108) = v7 ^ 0x79;
  *(_DWORD *)(v6 - 128) = v11 + a2 - 1015666717;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a2 ^ v4)))(v6 - 144);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v6 - 144)))(v12);
}

uint64_t sub_3688C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  unsigned int v14 = 9 * (v8 ^ a8) + v11 - 206;
  BOOL v15 = v9 + v11 + 1 < v10;
  if (v10 < v9 != v14 > v12) {
    BOOL v15 = v10 < v9;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((v15 * a7) ^ v8)))();
}

uint64_t sub_36904()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ 0xD62)))();
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((((v1 + 1595619375) & 0xA0E4C3DB) + 1540) * (v0 == -1373544826)) ^ (v1 - 1013))))(v3);
}

uint64_t sub_36964()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1309 * (v3 + 1 == v2 + 44)) ^ v0)))();
}

uint64_t sub_36A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48)
{
  STACK[0x588] = *(void *)(v49 + 8 * (LODWORD(STACK[0x3FC]) - 1289));
  return sub_1720C(a1, 705, a4, a5, a6, a48 & 0x657B853D);
}

uint64_t sub_36A4C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unint64_t v4 = ((unint64_t)&STACK[0x4D0] ^ 0x5CD9FFBEE5FF48FELL)
     - 0x90300A000FFFFELL
     + ((2 * (void)&STACK[0x4D0]) & 0xB9B3FF7DCBFE91F0);
  unint64_t v5 = v2 - 1;
  STACK[0x4D0] = v5;
  *(unsigned char *)(a1 + v5) = (v4 ^ 0xBA) * (v4 + 17);
  return (*(uint64_t (**)(void))(v3 + 8 * (((STACK[0x4D0] == 0) * (((a2 - 1407) | 0x406) ^ 0x6AF)) ^ a2)))();
}

uint64_t sub_36AE0()
{
  return sub_36AEC();
}

uint64_t sub_36AEC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  *(void *)(a1 + a2 + v5 + v3) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((3984 * ((v2 ^ 0x7A7) + v3 == v4)) ^ v2)))();
}

void sub_36B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v26 - 120) = a24;
  *(void *)(v26 - 112) = a24;
  *(_DWORD *)(v26 - 104) = (v24 + 1007) ^ (((((v26 - 144) | 0xAC170150) - (v26 - 144) + ((v26 - 144) & 0x53E8FEA8)) ^ 0x1F6AB104)
                                         * v25);
  *(void *)(v26 - 144) = a21;
  *(void *)(v26 - 136) = a14;
  *(void *)(v26 - 128) = a22;
  JUMPOUT(0x4878);
}

uint64_t sub_36BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  int v57 = 3804331 * ((((v56 - 168) | 0x8871EB15) - (v56 - 168) + ((v56 - 168) & 0x778E14E8)) ^ 0x72EF1843);
  *(_DWORD *)(v56 - 168) = v57 + v55 + 1323;
  *(_DWORD *)(v56 - 164) = v57 ^ a12;
  *(void *)(v56 - 160) = a16;
  uint64_t v58 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (v55 + 2068)))(v56 - 168);
  unsigned int v59 = (v55 + 1350) ^ 0x597 ^ a54 & (v55 + 465342061) & 0xE443717F;
  *(&a45 + v59) = 101;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 8 * ((1802 * (v59 > 0x37)) ^ v55)))(v58, 4076963439, 107);
}

void sub_36CB8()
{
}

void sub_36CCC()
{
}

uint64_t sub_36D2C()
{
  BOOL v5 = *(_DWORD *)STACK[0x3C8] != ((v0 + 241) ^ 0x4EC737F3) || v1 != v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v5 * (v0 ^ 0x430)) ^ v0)))();
}

uint64_t sub_36D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, unsigned int a20,int a21,unint64_t *a22)
{
  int v25 = 1759421093 * ((&a17 - 1921443396 - 2 * ((unint64_t)&a17 & 0x8D7919BC)) ^ 0x3E04A9E8);
  a17 = 1036168093 - v25;
  a22 = &STACK[0x4CAF57822185BFB9];
  a19 = a12;
  a20 = v25 ^ 0xFE1BE9AC;
  a21 = v25 + v24 + 2138962633;
  uint64_t v26 = (*(uint64_t (**)(int *))(v23 + 8 * (v24 ^ 0xA83)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (((a18 == v22) * (((v24 - 195) | 0x480) - 1652)) | v24)))(v26);
}

uint64_t sub_36E54()
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * ((1623
                                             * ((((v3 - 733506901) & 0x2BB86AEE ^ 0x2FE) & v0) == (((v3 - 836) | 0x22) ^ 0x22A))) ^ (v3 - 920))))((v1 - v2));
}

uint64_t sub_36EB4@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32)
{
  unsigned int v38 = v33 ^ ((*v37 & 0x7FFFFFFE | v37[623] & 0x80000000) >> 1);
  v37[623] = v37[396] ^ a2 ^ *(_DWORD *)(v36 + 4 * (*v37 & 1)) ^ (v38
                                                                  + a1
                                                                  - ((v38 << (v35 + (a3 ^ (v32 + 0x80)) - 28)) & ((v32 + a3 - 896) ^ 0x17F7C20F)));
  return (*(uint64_t (**)(void))(v34 + 8 * ((27 * (a32 > 0x26F)) ^ a3)))();
}

uint64_t sub_36F40()
{
  BOOL v5 = v1 + 1353356880 > ((v0 - 418) | 0x1A4) + 1271011969 || v1 + 1353356880 < v3 - 876470234;
  return (*(uint64_t (**)(void))(v2 + 8 * ((859 * v5) ^ v0)))();
}

uint64_t sub_36F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  BOOL v17 = v14 + 526382439 < (a14 - 10741059);
  if ((a14 - 10741059) < 0x346A84DE != (v14 + 526382439) < 0x346A84DE) {
    BOOL v17 = (a14 - 10741059) < 0x346A84DE;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((227 * !v17) ^ v15)))();
}

void sub_37014()
{
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1326));
  JUMPOUT(0x67B8);
}

void sub_37040()
{
}

uint64_t sub_37070()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((642 * (v1 == (((v0 - 1360) | 0x24) ^ (v3 + 28)))) | (v0 - 1324))))();
}

void sub_370A8()
{
}

uint64_t sub_37128@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 != 463788147) ^ a1)))();
}

uint64_t sub_37160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (((a10 != v10) * (94 * (v12 ^ 0x4DA) - 235)) ^ v12)))();
}

void sub_371B4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8)
     + 1734042137 * (((a1 ^ 0xE6425DAD | 0xA65DFB69) - ((a1 ^ 0xE6425DAD) & 0xA65DFB69)) ^ 0x1CD16589);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_372B4()
{
  int v3 = (unsigned int *)STACK[0x2B8];
  (*(void (**)(void, unint64_t *, uint64_t))(v2 + 8 * (v0 + 638)))(*(unsigned int *)STACK[0x2B8], &STACK[0x538], 2048);
  uint64_t v4 = *(uint64_t (**)(void))(v2
                           + 8
                           * ((((*(unsigned int (**)(void, unint64_t *, void, uint64_t))(v2 + 8 * (v0 ^ 0xE83)))(*v3, &STACK[0x4B8], (LODWORD(STACK[0x548]) + v1), 1) == 0)* ((v0 ^ 0x355) - 1239)) ^ v0));
  return v4();
}

void sub_37354()
{
}

uint64_t sub_37360()
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((v1 + v3 < (((v0 - 609) | 0x621) ^ v2)) * (((v0 - 643) | 0x51) ^ 0x11)) ^ v0)))();
}

void sub_373A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 1374699841 * ((-2 - ((a1 | 0x5548FCDC) + (~a1 | 0xAAB70323))) ^ 0xC7431B2A);
  unsigned int v2 = *(unint64_t **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(unint64_t **)(a1 + 40);
  uint64_t v5 = *(void *)(v3 - 0x571561323F81230ALL);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = v5;
  uint64_t v11 = &STACK[0x67843F9A1244BAFB];
  uint64_t v7 = v3;
  int v8 = v2;
  unsigned int v12 = (1759421093
       * (((&v7 | 0xDFD3DF00) - &v7 + (&v7 & 0x202C20F8)) ^ 0x6CAE6F54)) ^ (v1 + 883);
  uint64_t v6 = (char *)*(&off_99820 + v1 - 951) - 4;
  (*(void (**)(uint64_t *))&v6[8 * (v1 ^ 0xC75)])(&v7);
  uint64_t v7 = *(void *)(v3 - 0x571561323F812312);
  int v8 = &STACK[0x67843F9A1244BAEB];
  LODWORD(v9) = (1734042137 * (((&v7 | 0xC811C25D) + (~&v7 | 0x37EE3DA2)) ^ 0x94DF0111)) ^ (v1 + 251);
  (*(void (**)(uint64_t *))&v6[8 * v1 + 7344])(&v7);
  HIDWORD(v7) = v1
              + 460628867 * ((((2 * &v7) | 0x49CA5D62) - &v7 + 1528484175) ^ 0xE873ACCC)
              - 770;
  int v8 = v4;
  (*(void (**)(uint64_t *))&v6[8 * v1 + 8712])(&v7);
  __asm { BRAA            X8, X17 }
}

void sub_37610()
{
}

uint64_t sub_37618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 136) = (v16 - 441) ^ (1374699841 * ((v18 + 1047381673 - 2 * ((v18 - 136) & 0x3E6DC731)) ^ 0x5399DF38));
  *(void *)(v18 - 128) = v17;
  *(void *)(v18 - 120) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 588)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 132) != (v16 ^ 0xD ^ (v14 - 1124)))
                                              * (((v16 - 1433) | 0x101) ^ 0x146)) ^ v16)))(v19);
}

uint64_t sub_376C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return sub_32564(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

void sub_376CC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  unsigned int v2 = (char *)*(&off_99820 + (v1 ^ 0x16D)) - 4;
  uint64_t v3 = *(void *)&v2[8
                    * ((((*(uint64_t (**)(uint64_t, uint64_t))&v2[8 * (v1 ^ 0x9AB)])(32, 0x101004023FF3BD5) == 0)
                      * (v1 + 521)) ^ v1)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_3777C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((57 * ((v2 + v1 - 2042093488) < 8)) ^ 0x798u)))();
}

void sub_377F0(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  a5 = (v7 + 1187) ^ (1734042137
                    * ((((2 * &a3) | 0x46E5AF94) - &a3 - 594728906) ^ 0x7FBC1487));
  a3 = v5;
  a4 = v6;
  (*(void (**)(uint64_t *))(a1 + 8 * (v7 ^ 0x742)))(&a3);
  sub_23724();
}

uint64_t sub_37854(uint64_t result)
{
  *(_DWORD *)(result + 4) = v1;
  return result;
}

uint64_t sub_37860@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(_DWORD *)(v1 + 4 * (a1 + v4 + 969)) == v2)
                                * (((v3 - 944) | 0xA9) - 318)) ^ (v3 - 775))))();
}

uint64_t sub_378A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  *(unsigned char *)(a6 + ((a3 + ((v8 - 1605) | v10) + 1165) & (a8 + a4))) = *(unsigned char *)(v9 + a2 + a1)
                                                                   + (a5 | ~(2 * *(unsigned char *)(v9 + a2 + a1)))
                                                                   - 26;
  return (*(uint64_t (**)(void))(v11 + 8 * ((((a4 + a8 + 1) > 0x3F) * a7) ^ v8)))();
}

uint64_t sub_37904(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 1428) = 604952958;
  return (*(uint64_t (**)(void))(v3
                              + 8 * (v2 | ((*(_DWORD *)(a2 + 4) == (((v2 ^ 0x5AC) + 1284426323) ^ (v2 + 1376))) << 9))))();
}

uint64_t sub_37954()
{
  return sub_37974();
}

uint64_t sub_37974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((*(_DWORD *)(v10 + 48 * (v11 + a8)) != 55835255) * (((v8 ^ 0x1E5) * v9) ^ a7)) | v8)))();
}

void sub_379BC()
{
  LODWORD(STACK[0x404]) = v0;
  LODWORD(STACK[0x418]) = v3;
  LODWORD(STACK[0x4A4]) = v1;
  LODWORD(STACK[0x504]) = v4;
  LODWORD(STACK[0x54C]) = v7 + 80;
  unint64_t v9 = STACK[0x638];
  int v10 = *(_DWORD *)(STACK[0x638] - 0x843828D0CDF33D5);
  LODWORD(STACK[0x41C]) = v2;
  *(_DWORD *)(v9 - 0x843828D0CDF33D5) = (v10 ^ v8)
                                        + (v2 ^ v8)
                                        + v8
                                        - ((((v10 ^ v8) + (v2 ^ v8)) << ((v5 ^ 0x33) - 79)) & v6);
  JUMPOUT(0x37A30);
}

uint64_t sub_37A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  unint64_t v46 = STACK[0x578];
  unsigned int v47 = (LODWORD(STACK[0x474]) ^ 0x7DEBEFEF) - 352936736 + ((LODWORD(STACK[0x474]) << ((v43 + 7) ^ 0xC4)) & 0xFBD7DFDE);
  int v48 = 1759421093 * ((((v45 - 192) | 0xAC34018A) - (v45 - 192) + ((v45 - 192) & 0x53CBFE70)) ^ 0x1F49B1DE);
  *(void *)(v45 - 136) = v40;
  *(unsigned char *)(v45 - 164) = -91 * ((((v45 + 64) | 0x8A) - (v45 + 64) + ((v45 + 64) & 0x70)) ^ 0xDE) - 53;
  *(void *)(v45 - 184) = v42;
  *(void *)(v45 - 176) = a39;
  *(_DWORD *)(v45 - 192) = (v43 - 1697) ^ v48;
  *(_DWORD *)(v45 - 144) = v47 ^ v48;
  *(void *)(v45 - 152) = v46;
  *(void *)(v45 - 160) = a40;
  *(_DWORD *)(v45 - 168) = v48 + 22736600 + v41;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v44 + 8 * ((v43 - 174) ^ 0xFB0)))(v45 - 192);
  int v50 = *(_DWORD *)(v45 - 188);
  LODWORD(STACK[0x5B4]) = v50;
  return (*(uint64_t (**)(uint64_t))(v44
                                            + 8 * ((110 * (v50 == ((8 * (v43 - 174)) ^ 0xAE216606))) | (v43 - 174))))(v49);
}

uint64_t sub_37B5C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 468) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 2624))(0);
}

void sub_37BB8(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_37BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (int)((((v6 + 1841017226) & 0x92444DC7 ^ 0x5CF) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_37C30(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * ((385 * (v2 != 63)) ^ v3)))(a1, a2, -726900810);
}

uint64_t sub_37C60()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((110 * (STACK[0x510] == 0)) ^ (v0 - 145))))();
}

uint64_t sub_37C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(_DWORD *)(v20 - 112) = v19 + 535753261 * ((((v20 - 136) | 0xBF7931F) - ((v20 - 136) & 0xBF7931F)) ^ 0x1039D30) - 769;
  *(void *)(v20 - 128) = v17;
  *(void *)(v20 - 120) = a11;
  *(void *)(v20 - 104) = v17;
  *(void *)(v20 - 136) = a15;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v19 + 76)))(v20 - 136);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((14
                                              * (((v15
                                                 + (((v16 - 1949362395) >> 1) ^ 0xFFBFEEFB)
                                                 + ((v16 - 1949362395) & (v19 - 8399439))
                                                 + 2) & a10) == 0)) ^ v19)))(v21);
}

void sub_37D78(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(void *)(a1 + 24)) {
    BOOL v2 = *(_DWORD *)(a1 + 20) - v1 == 1359518954;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

void sub_37E24(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 535753261 * (((a1 | 0xB23F3C90) - (a1 & 0xB23F3C90)) ^ 0xB8CB32BF);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_37F3C(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((11 * (a4 ^ 0x5E1)) ^ 0x47A) * (v4 == a1)) ^ a4)))();
}

uint64_t sub_37F8C()
{
  return sub_37F94();
}

uint64_t sub_37F94(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = (v4 ^ (v2 + 1404)) + v3 - 308584763;
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_37FDC@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *int v2 = a2;
  *(_DWORD *)(result + 4) = 1373504947;
  return result;
}

uint64_t sub_37FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((1397 * (a8 + 1 == v10 + 16)) ^ (a5 + 702))))(v8);
}

void sub_38104()
{
}

void sub_3810C()
{
}

uint64_t sub_38114()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((104 * (unk_A4CC0 == 0)) ^ v0)))();
}

void sub_38140()
{
}

uint64_t sub_3815C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, void *a18, uint64_t a19, uint64_t a20,int *a21)
{
  if (a1) {
    int v26 = 1517586988;
  }
  else {
    int v26 = a17 + 71769678 + *a21;
  }
  *a21 = v26;
  int v27 = (((v23 >> 11) ^ 0xAE0C3) + v21 - ((2 * ((v23 >> 11) ^ 0xAE0C3)) & 0xC3E6C)) ^ v23;
  unsigned int v28 = (((v27 << 7) & 0x9D2C5680 ^ v27) << 15) & 0xEFC60000 ^ (v27 << 7) & 0x9D2C5680 ^ v27;
  *(_DWORD *)(*a18 + v22) ^= v28 ^ (v28 >> 18);
  return (*(uint64_t (**)(void))(v24 + 8 * ((v25 - 1174667999) ^ (46 * (v22 > 0x1FB)))))();
}

uint64_t sub_38218()
{
  return 0;
}

void sub_38258(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(v9 - 140) = v8
                        + 473
                        + *(_DWORD *)(a8 + 32)
                        - a1
                        - ((2 * (*(_DWORD *)(a8 + 32) - a1) + 1244512914) & 0x77D21472)
                        + 1627383088;
  JUMPOUT(0x1D6DCLL);
}

uint64_t sub_38390@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((57 * (a2 + 1 != v4 + 48)) ^ a1)))(v2);
}

uint64_t sub_38450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_38468(a1, a2, a3, a4, (a5 + v6), 0, v5 & 0xFFFFFFE0, 461);
}

uint64_t sub_38468(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v14 = (v10 + a4 - a6 + 849);
  long long v15 = *(_OWORD *)(v9 + v14 - 15);
  long long v16 = *(_OWORD *)(v9 + v14 - 31);
  uint64_t v17 = v11 + v14;
  *(_OWORD *)(v17 - 15) = v15;
  *(_OWORD *)(v17 - 31) = v16;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((((a5 + 77) | a8) ^ v12) + a6 != a7) * v13) ^ (a5 + 1148))))();
}

void sub_384C4(char *a1)
{
  uint64_t v2 = (char *)&STACK[0x1920] + v1;
  *uint64_t v2 = *a1;
  *(void *)(v2 + 1) = *(void *)(a1 + 1);
  *(_DWORD *)(v2 + 9) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v2 + 13) = *(_WORD *)(a1 + 13);
  v2[15] = a1[15];
  uint64_t v3 = *((void *)a1 + 1);
  *((void *)v2 + 2) = *(void *)a1;
  *((void *)v2 + 3) = v3;
  JUMPOUT(0x38504);
}

uint64_t sub_38844(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  LODWORD(STACK[0x3D8]) = a1;
  unint64_t v67 = v61 & 0xFFFFFFF1 ^ 0x8C42E14F;
  STACK[0x398] = v67;
  int v68 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a18 + v67) ^ 0xD9));
  LODWORD(v328) = a1 ^ 0x753;
  unint64_t v69 = v61 & ((a1 ^ 0x753) - 221) ^ 0x8C42E147;
  STACK[0x2C0] = v69;
  uint64_t v70 = *(unsigned __int8 *)(a18 + v69);
  int v71 = v61;
  unsigned int v72 = (((v68 << (a1 + 121)) ^ 0xFFFFFFE0) - ((2 * ((v68 << (a1 + 121)) ^ 0xFFFFFFE0)) & 0x40) - 82) ^ v68;
  LOBYTE(v68) = *(unsigned char *)(a21 + (v70 ^ v66));
  char v73 = v70 ^ 0xB7;
  unint64_t v74 = v61 & 0xFFFFFFF0 ^ 0x8C42E14F;
  STACK[0x3A0] = v74;
  int v75 = *(unsigned __int8 *)(a18 + v74);
  unsigned __int8 v76 = (v68 + v73 - 93) ^ v63;
  if ((v75 & 0x20) != 0) {
    int v77 = -32;
  }
  else {
    int v77 = 32;
  }
  int v332 = *(unsigned __int8 *)(a22 + ((v77 + v75) ^ 0xDDLL)) + ((v77 + v75) ^ 0x31);
  unint64_t v78 = v61 & 0xFFFFFFF9 ^ 0x8C42E147;
  STACK[0x388] = v78;
  int v79 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a18 + v78) ^ 0x51));
  unint64_t v80 = v61 & 0xFFFFFFF3 ^ 0x8C42E14F;
  STACK[0x340] = v80;
  HIDWORD(v81) = v79 ^ (((16 * v79) ^ 0xFFFFFFE0) + (~(2 * ((16 * v79) ^ 0xFFFFFFE0)) | 0xFFFFFFBF) - 81) ^ 0x3F;
  LODWORD(v81) = BYTE4(v81) & 0xF8;
  unint64_t v82 = v61 ^ 0x8C42E147;
  STACK[0x278] = v82;
  unint64_t v83 = ((v81 >> 3) | ((unint64_t)v76 << 13)) ^ 0x58F620A6;
  int v84 = *(unsigned __int8 *)(a18 + v80) ^ v62;
  int v85 = (v83 >> 21) | (v83 << 11);
  int v330 = *(unsigned __int8 *)(a21 + v84 - 2 * (v84 & 0xAEu) + 174) - v84;
  uint64_t v86 = *(unsigned __int8 *)(a18 + v82);
  unint64_t v87 = v71 & 0xFFFFFFFC ^ 0x8C42E147;
  STACK[0x348] = v87;
  uint64_t v88 = *(unsigned __int8 *)(a18 + v87);
  int v89 = *(unsigned __int8 *)(a21 + (v86 ^ 0xD8)) + (v86 ^ 0x76) - 2 * (v86 ^ 0x76);
  int v90 = *(unsigned __int8 *)(a22 + (v88 ^ 0x57));
  unint64_t v91 = v71 & 0xFFFFFFF7 ^ 0x8C42E14F;
  STACK[0x378] = v91;
  int v92 = (v88 ^ 0xFFFFFFBB) + v90;
  LOBYTE(v79) = (*(unsigned char *)(a18 + v91) ^ 0xA7) + *(unsigned char *)(a21 + (*(unsigned __int8 *)(a18 + v91) ^ 0xF6));
  char v93 = v79 - ((2 * v79 + 70) & 0x4E);
  unint64_t v94 = v71 & 0xFFFFFFF8 ^ 0x8C42E147;
  STACK[0x2C8] = v94;
  LOBYTE(v88) = (*(unsigned char *)(a18 + v94) ^ 0xE9) + *(unsigned char *)(a22 + (*(unsigned __int8 *)(a18 + v94) ^ 5)) - 104;
  unint64_t v95 = v71 & 0xFFFFFFF2 ^ 0x8C42E14F;
  STACK[0x248] = v95;
  int v96 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(a18 + v95) ^ 0x12));
  uint64_t v334 = v71 & 0xFFFFFFFA ^ 0x8C42E147;
  char v97 = *(unsigned char *)(a19 + (*(unsigned __int8 *)(a18 + v334) ^ 0x9CLL));
  unsigned int v98 = v96 ^ ((((v96 ^ 0xC7) >> 3) & 4 ^ v96 & 0xA4 | ((v96 ^ 0xC7) >> 3) & 0xFB ^ (v96 ^ 0xFFFFFFC7) & 0x5A) >> 1);
  int v99 = ((v97 ^ 0xC7) >> 4) ^ ((v97 ^ 0xC7) >> 1);
  unint64_t v100 = v71 & 0xFFFFFFF6 ^ 0x8C42E14F;
  STACK[0x240] = v100;
  int v101 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(a18 + v100) ^ 0x76));
  int v102 = v88 | ((v97 ^ v66 ^ (v99 - ((2 * v99) & 8) - 124)) << 16);
  int v103 = (v101 ^ 0xC7) >> 3;
  char v104 = -103 - ((v101 & 8 | (16 * ((v101 & 8) != 0))) ^ 0x4F);
  if (((((v101 & 8 | (16 * (((v101 & 8) >> 3) & 1))) ^ 0x4F) + 17) & v103) == 0) {
    char v104 = ((v101 & 8 | (16 * ((v101 & 8) != 0))) ^ 0x4F) - 5;
  }
  int v105 = v71;
  unint64_t v106 = v71 & 0xFFFFFFF5 ^ 0x8C42E14F;
  STACK[0x220] = v106;
  uint64_t v335 = v71 & 0xFFFFFFF4 ^ 0x8C42E14F;
  int v107 = v101 ^ ((((v103 + v104 - 74) ^ (v101 ^ 0xC7) & 0xF7) & 0xFE) >> 1);
  v337[0] = v71;
  uint64_t v336 = v71 & 0xFFFFFFFE ^ 0x8C42E147;
  unsigned int v108 = *(unsigned char *)(a19 + (*(unsigned __int8 *)(a18 + v336) ^ 0xCFLL)) ^ 0xC7;
  unsigned int v109 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(a18 + v336) ^ 0xCFLL)) ^ 0xFFFFFFC7 ^ (v108 >> 4) ^ (v108 >> 1);
  char v110 = *(unsigned char *)(a20 + (*(unsigned __int8 *)(a18 + v106) ^ 0xFBLL));
  uint64_t v111 = *(void *)(v64 + 8 * (LODWORD(STACK[0x3D8]) ^ 0x7E4));
  unint64_t v327 = __PAIR64__(v72, v98);
  int v112 = *(_DWORD *)(v111 + 4 * (v98 ^ 0xF0));
  uint64_t v113 = *(void *)(v64 + 8 * (LODWORD(STACK[0x3D8]) ^ 0x79C));
  HIDWORD(v325) = (v110 ^ (16 * v110)) ^ 0xF7;
  int v114 = *(_DWORD *)(v113 + 4 * ((v110 ^ (16 * v110)) ^ 0x78u));
  HIDWORD(v115) = v114 ^ 0x4F44;
  LODWORD(v115) = v114 ^ 0xE9580000;
  LODWORD(v325) = v89 - 94;
  uint64_t v116 = *(void *)(v64 + 8 * (LODWORD(STACK[0x3D8]) ^ 0x736)) - 4;
  int v117 = (v115 >> 16) ^ *(_DWORD *)(v116 + 4 * ((v89 - 94) ^ 0xF9u)) ^ (16 * (v112 ^ 0x4CF32167)
                                                                                         + 1831686593
                                                                                         - ((32 * (v112 ^ 0x4CF32167)) & 0xDA5AA380));
  HIDWORD(v324) = v102 ^ v85;
  unsigned int v118 = v102 ^ v85 ^ 0xDD03A24B;
  uint64_t v119 = *(void *)(v64 + 8 * (LODWORD(STACK[0x3D8]) ^ 0x71A)) - 4;
  unsigned int v120 = *(_DWORD *)(v119 + 4 * (v118 ^ 0x33u)) ^ v112 ^ (v117 - 365221057 - ((2 * v117) & 0xD476567E));
  int v121 = *(_DWORD *)(v113 + 4 * (v72 ^ 0x71u));
  HIDWORD(v115) = v121 ^ 0x4F44;
  LODWORD(v115) = v121 ^ 0xE9580000;
  unint64_t v326 = __PAIR64__(v107, v109);
  int v122 = *(_DWORD *)(v111 + 4 * (v109 ^ 0xBFu)) ^ 0x4CF32167;
  int v123 = (v115 >> 16) ^ (16 * v122 + 1831686593 - ((32 * v122) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * HIBYTE(v118));
  HIDWORD(v323) = (*(unsigned char *)(a22 + (*(unsigned __int8 *)(a18 + v335) ^ 0x12))
                                  + (*(unsigned char *)(a18 + v335) ^ 0xFE)
                                  - 104);
  unsigned int v124 = *(_DWORD *)(v119 + 4 * (HIDWORD(v323) ^ 0xB9u)) ^ v122 ^ (v123 - 365221057 - ((2 * v123) & 0xD476567E));
  uint64_t v333 = v105 & 0xFFFFFFFD ^ 0x8C42E147;
  int v125 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a18 + v333) ^ 0x26)) ^ 0x16;
  int v126 = v125 ^ (16 * v125);
  int v127 = *(_DWORD *)(v111 + 4 * BYTE2(v118)) ^ 0x4CF32167;
  LODWORD(v324) = v126;
  int v128 = *(_DWORD *)(v113 + 4 * (v126 ^ 0xFBu));
  HIDWORD(v115) = v128 ^ 0x4F44;
  LODWORD(v115) = v128 ^ 0xE9580000;
  HIDWORD(v322) = (v93 - 54);
  int v129 = (v115 >> 16) ^ *(_DWORD *)(v116 + 4 * (HIDWORD(v322) ^ 0x40u)) ^ (16 * v127
                                                                           + 1831686593
                                                                           - ((32 * v127) & 0xDA5AA380));
  LODWORD(v323) = v332 - 104;
  unsigned int v130 = *(_DWORD *)(v119 + 4 * ((v332 - 104) ^ 0xEBu)) ^ v127 ^ (v129
                                                                                   - 365221057
                                                                                   - ((2 * v129) & 0xD476567E));
  int v131 = *(_DWORD *)(v113 + 4 * (BYTE1(v85) ^ 0x31u));
  HIDWORD(v115) = v131 ^ 0x4F44;
  LODWORD(v115) = v131 ^ 0xE9580000;
  int v132 = *(_DWORD *)(v111 + 4 * (v107 ^ 0xBBu)) ^ 0x4CF32167;
  LODWORD(v322) = v330 - 94;
  int v133 = (v115 >> 16) ^ *(_DWORD *)(v116 + 4 * ((v330 - 94) ^ 0xF7u)) ^ (16 * v132
                                                                                          + 1831686593
                                                                                          - ((32 * v132) & 0xDA5AA380));
  HIDWORD(a23) = v92 - 104;
  unsigned int v134 = *(_DWORD *)(v119 + 4 * ((v92 - 104) ^ 0x33u)) ^ v132 ^ (v133
                                                                                  - 365221057
                                                                                  - ((2 * v133) & 0xD476567E));
  int v135 = *(_DWORD *)(v113 + 4 * (BYTE1(v130) ^ 0xF4u));
  HIDWORD(v115) = v135 ^ 0x4F44;
  LODWORD(v115) = v135 ^ 0xE9580000;
  int v136 = *(_DWORD *)(v111 + 4 * (BYTE2(v134) ^ 0xBBu)) ^ 0x4CF32167;
  unsigned __int8 v137 = BYTE1(v124) ^ 0xAD;
  int v138 = *(_DWORD *)(v111 + 4 * (BYTE2(v120) ^ 0x1Fu));
  unsigned int v139 = v136 ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v120) ^ 0x1B)) ^ *(_DWORD *)(v119
                                                                            + 4 * (v124 ^ 0xDBu)) ^ (16 * v136 + 1831686593 - ((32 * v136) & 0xDA5AA380)) ^ (v115 >> 16);
  int v140 = *(_DWORD *)(v113 + 4 * ((unsigned __int16)(v134 ^ 0x22E) >> 8));
  HIDWORD(v115) = v140 ^ 0x4F44;
  LODWORD(v115) = v140 ^ 0xE9580000;
  int v141 = (16 * (v138 ^ 0x4CF32167) + 1831686593 - ((32 * (v138 ^ 0x4CF32167)) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * ((v124 ^ 0xF15ADDB) >> 24)) ^ (v115 >> 16);
  unsigned int v142 = *(_DWORD *)(v119 + 4 * (v130 ^ 0x80u)) ^ v138 ^ (v141 - 365221057 - ((2 * v141) & 0xD476567E));
  int v143 = *(_DWORD *)(v111 + 4 * (BYTE2(v124) ^ 0xD6u)) ^ 0x4CF32167;
  int v144 = *(_DWORD *)(v113 + 4 * (BYTE1(v120) ^ 0xC7u));
  unsigned int v145 = (16 * v143 + 1831686593 - ((32 * v143) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v130) ^ 0x19));
  HIDWORD(v115) = v144 ^ 0x4F44;
  LODWORD(v115) = v144 ^ 0xE9580000;
  unsigned int v146 = *(_DWORD *)(v119 + 4 * (v134 ^ 0x2Eu)) ^ v143 ^ (v115 >> 16) ^ (v145
                                                                                          - 365221057
                                                                                          - ((2 * v145) & 0xD476567E));
  int v147 = *(_DWORD *)(v111 + 4 * (BYTE2(v130) ^ 0x32u));
  int v148 = *(_DWORD *)(v113 + 4 * v137);
  HIDWORD(v115) = v148 ^ 0x4F44;
  LODWORD(v115) = v148 ^ 0xE9580000;
  int v149 = (v115 >> 16) ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v134) ^ 0xBD)) ^ (16 * (v147 ^ 0x4CF32167)
                                                                         + 1831686593
                                                                         - ((32 * (v147 ^ 0x4CF32167)) & 0xDA5AA380));
  unsigned int v150 = v147 ^ *(_DWORD *)(v119 + 4 * (v120 ^ 0xC7u)) ^ 0x3D3AF7A3 ^ (v149
                                                                                        - 365221057
                                                                                        - ((2 * v149) & 0xD476567E));
  unsigned int v151 = v150 - ((2 * v150) & 0x5F186BF6);
  LOBYTE(v149) = v151 + 123;
  unsigned int v152 = v151 - 917452165 - ((2 * v151 + 1595436022) & 0x33892900);
  int v153 = *(_DWORD *)(v111 + 4 * (BYTE2(v152) ^ 7u));
  BYTE2(v148) = BYTE2(v146) ^ 0xEB;
  int v154 = *(_DWORD *)(v113 + 4 * ((unsigned __int16)(v146 ^ 0xDFF9) >> 8));
  unsigned int v155 = (16 * (v153 ^ 0x4CF32167) + 1831686593 - ((32 * (v153 ^ 0x4CF32167)) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v139) ^ 0x7C)) ^ (((v154 ^ 0xE9584F44) >> (v139 & 0x10 ^ 0x10) >> (v139 & 0x10)) + ((v154 << 16) ^ 0x4F440000));
  unsigned int v156 = *(_DWORD *)(v119 + 4 * (v142 ^ 0xBEu)) ^ v153 ^ (v155 - 365221057 - ((2 * v155) & 0xD476567E));
  v139 ^= 0x9561FF1F;
  int v157 = *(_DWORD *)(v111 + 4 * BYTE2(v139)) ^ 0x4CF32167;
  int v158 = *(_DWORD *)(v113 + 4 * (BYTE1(v152) ^ 7u));
  HIDWORD(v115) = v158 ^ 0x4F44;
  LODWORD(v115) = v158 ^ 0xE9580000;
  int v159 = (16 * v157 + 1831686593 - ((32 * v157) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v142) ^ 7)) ^ (v115 >> 16);
  unsigned int v160 = *(_DWORD *)(v119 + 4 * (v146 ^ 0xF9u)) ^ v157 ^ (v159 - 365221057 - ((2 * v159) & 0xD476567E));
  int v161 = *(_DWORD *)(v116 + 4 * (HIBYTE(v146) ^ 5));
  HIDWORD(v115) = v161 ^ 0xC1C1C1C1;
  LODWORD(v115) = v161 ^ 0x6D2D5000;
  int v162 = *(_DWORD *)(v111 + 4 * (BYTE2(v142) ^ 0xC6u)) ^ 0x4CF32167;
  unsigned int v163 = (((v115 >> 10) ^ 0x25EB099C) << 10) ^ (16 * v162) ^ (((v115 >> 10) ^ 0x25EB099C) >> 22);
  int v164 = *(_DWORD *)(v113 + 4 * BYTE1(v139));
  HIDWORD(v115) = v164 ^ 0x4F44;
  LODWORD(v115) = v164 ^ 0xE9580000;
  int v165 = *(_DWORD *)(v119 + 4 * (v149 ^ 0xB3u)) ^ v162 ^ (v115 >> 16) ^ (v163
                                                                                          - 365221057
                                                                                          - ((2 * v163) & 0xD476567E));
  int v166 = *(_DWORD *)(v113 + 4 * (BYTE1(v142) ^ 0xECu));
  HIDWORD(v115) = v166 ^ 0x4F44;
  LODWORD(v115) = v166 ^ 0xE9580000;
  int v167 = *(_DWORD *)(v111 + 4 * BYTE2(v148)) ^ 0x4CF32167;
  int v168 = (v115 >> 16) ^ (16 * v167 + 1831686593 - ((32 * v167) & 0xDA5AA380)) ^ *(_DWORD *)(v116
                                                                                          + 4 * (HIBYTE(v152) ^ 0x70));
  unsigned int v169 = *(_DWORD *)(v119 + 4 * (v139 ^ 0x33u)) ^ v167 ^ (v168 - 365221057 - ((2 * v168) & 0xD476567E));
  int v170 = *(_DWORD *)(v111 + 4 * (BYTE2(v169) ^ 0x62u)) ^ 0x4CF32167;
  unsigned int v171 = (16 * v170 + 1831686593 - ((32 * v170) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v156) ^ 0x91));
  unsigned __int8 v172 = BYTE2(v165) ^ 0xF7;
  int v173 = *(_DWORD *)(v113 + 4 * ((unsigned __int16)(v165 ^ 0xE4A6) >> 8));
  HIDWORD(v115) = v173 ^ 0x4F44;
  LODWORD(v115) = v173 ^ 0xE9580000;
  unsigned int v174 = *(_DWORD *)(v119 + 4 * (v160 ^ 0x68u)) ^ v170 ^ (v115 >> 16) ^ (v171
                                                                                          - 365221057
                                                                                          - ((2 * v171) & 0xD476567E));
  int v175 = *(_DWORD *)(v111 + 4 * (BYTE2(v156) ^ 0xA8u)) ^ 0x4CF32167;
  int v176 = *(_DWORD *)(v113 + 4 * ((unsigned __int16)(v169 ^ 0x2957) >> 8));
  HIDWORD(v115) = v176 ^ 0x4F44;
  LODWORD(v115) = v176 ^ 0xE9580000;
  int v177 = (16 * v175 + 1831686593 - ((32 * v175) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v160) ^ 0xCE)) ^ (v115 >> 16);
  unsigned int v178 = *(_DWORD *)(v119 + 4 * (v165 ^ 0x15u)) ^ v175 ^ (v177 - 365221057 - ((2 * v177) & 0xD476567E));
  int v179 = *(_DWORD *)(v111 + 4 * (BYTE2(v160) ^ 0x60u)) ^ 0x4CF32167;
  int v180 = *(_DWORD *)(v113 + 4 * (BYTE1(v156) ^ 0xBAu));
  HIDWORD(v115) = v180 ^ 0x4F44;
  LODWORD(v115) = v180 ^ 0xE9580000;
  int v181 = (16 * v179 + 1831686593 - ((32 * v179) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * ((v165 ^ 0xF1F7E4A6) >> 24)) ^ (v115 >> 16);
  unsigned int v182 = *(_DWORD *)(v119 + 4 * (v169 ^ 0x57u)) ^ v179 ^ (v181 - 365221057 - ((2 * v181) & 0xD476567E));
  int v183 = BYTE1(v160) ^ 0xC;
  if ((v160 & 0x1000) != 0) {
    int v184 = -16;
  }
  else {
    int v184 = 16;
  }
  int v185 = *(_DWORD *)(v111 + 4 * v172) ^ 0x4CF32167;
  unsigned int v186 = *(_DWORD *)(v113 + 4 * ((v183 + v184) ^ 0x83u));
  unsigned int v187 = *(_DWORD *)(v116 + 4 * (HIBYTE(v169) ^ 0xA1)) ^ HIWORD(v186) ^ (v186 << 16) ^ (16 * v185
                                                                                        + 1831686593
                                                                                        - ((32 * v185) & 0xDA5AA380)) ^ 0x4F44E958;
  unsigned int v188 = *(_DWORD *)(v119 + 4 * (v156 ^ 4u)) ^ v185 ^ (v187 - 365221057 - ((2 * v187) & 0xD476567E));
  unsigned int v189 = v188 ^ 0xEFBC3B44;
  int v190 = *(_DWORD *)(v111 + 4 * ((v188 ^ 0xEFBC3B44) >> 16)) ^ 0x4CF32167;
  int v191 = *(_DWORD *)(v113 + 4 * ((unsigned __int16)(v182 ^ 0x8D48) >> 8));
  HIDWORD(v192) = v191 ^ 0x4F44;
  LODWORD(v192) = v191 ^ 0xE9580000;
  int v193 = (v192 >> 16) ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v174) ^ 0xCC)) ^ (16 * v190
                                                                         + 1831686593
                                                                         - ((32 * v190) & 0xDA5AA380));
  unsigned int v194 = *(_DWORD *)(v119 + 4 * (v178 ^ 0xA9u)) ^ v190 ^ (v193 - 365221057 - ((2 * v193) & 0xD476567E));
  LOWORD(v193) = v174 ^ 0xD583;
  int v195 = *(_DWORD *)(v111 + 4 * (((v174 ^ 0x255FD583) >> 16) ^ 0xC3u)) ^ 0x4CF32167;
  int v196 = *(_DWORD *)(v113 + 4 * ((unsigned __int16)(v188 ^ 0x3B44) >> 8));
  HIDWORD(v192) = v196 ^ 0x4F44;
  LODWORD(v192) = v196 ^ 0xE9580000;
  int v197 = (v192 >> 16) ^ *(_DWORD *)(v116 + 4 * HIBYTE(v178)) ^ (16 * v195 + 1831686593 - ((32 * v195) & 0xDA5AA380));
  unsigned int v198 = *(_DWORD *)(v119 + 4 * (v182 ^ 0x48u)) ^ v195 ^ (v197 - 365221057 - ((2 * v197) & 0xD476567E));
  int v199 = *(_DWORD *)(v111 + 4 * ((v178 ^ 0xE93411A9) >> 16)) ^ 0x4CF32167;
  int v200 = *(_DWORD *)(v113 + 4 * BYTE1(v193));
  HIDWORD(v192) = v200 ^ 0x4F44;
  LODWORD(v192) = v200 ^ 0xE9580000;
  int v201 = (16 * v199 + 1831686593 - ((32 * v199) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * ((v182 ^ 0x807D8D48) >> 24)) ^ (v192 >> 16);
  unsigned int v202 = *(_DWORD *)(v119 + 4 * (v188 ^ 0x77u)) ^ v199 ^ (v201 - 365221057 - ((2 * v201) & 0xD476567E));
  int v203 = *(_DWORD *)(v111 + 4 * (BYTE2(v182) ^ 0xBEu)) ^ 0x4CF32167;
  int v204 = *(_DWORD *)(v113 + 4 * (BYTE1(v178) ^ 0x82u));
  HIDWORD(v192) = v204 ^ 0x4F44;
  LODWORD(v192) = v204 ^ 0xE9580000;
  int v205 = (v192 >> 16) ^ *(_DWORD *)(v116 + 4 * HIBYTE(v189)) ^ (16 * v203 + 1831686593 - ((32 * v203) & 0xDA5AA380));
  unsigned int v206 = *(_DWORD *)(v119 + 4 * v193) ^ v203 ^ (v205 - 365221057 - ((2 * v205) & 0xD476567E));
  int v207 = *(_DWORD *)(v111 + 4 * ((v206 ^ 0x950DA39D) >> 16)) ^ 0x4CF32167;
  unsigned int v208 = (16 * v207 + 1831686593 - ((32 * v207) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * ((v194 ^ 0x11521BCA) >> 24));
  int v209 = *(_DWORD *)(v113 + 4 * (BYTE1(v202) ^ 0x89u));
  HIDWORD(v192) = v209 ^ 0x4F44;
  LODWORD(v192) = v209 ^ 0xE9580000;
  unsigned int v210 = v208 - 365221057 - ((2 * v208) & 0xD476567E);
  BYTE1(v208) = BYTE1(v198) ^ 0xD1;
  int v211 = *(_DWORD *)(v119 + 4 * (v198 ^ 0x88u)) ^ v207 ^ (v192 >> 16) ^ 0x71C9D6C4 ^ v210;
  int v212 = *(_DWORD *)(v111 + 4 * ((v194 ^ 0x11521BCA) >> 16));
  int v213 = *(_DWORD *)(v113 + 4 * (BYTE1(v206) ^ 0x30u));
  HIDWORD(v192) = v213 ^ 0x4F44;
  LODWORD(v192) = v213 ^ 0xE9580000;
  int v214 = v211 - ((2 * v211) & 0xB9B85FFE);
  int v215 = (16 * (v212 ^ 0x4CF32167) + 1831686593 - ((32 * (v212 ^ 0x4CF32167)) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v198) ^ 0xDF)) ^ (v192 >> 16);
  v202 ^= 0x7A851A70u;
  unsigned int v216 = *(_DWORD *)(v119 + 4 * (v202 ^ 0x33u)) ^ v212 ^ (v215 - 365221057 - ((2 * v215) & 0xD476567E));
  int v217 = *(_DWORD *)(v111 + 4 * (BYTE2(v198) ^ 0xA7u)) ^ 0x4CF32167;
  int v218 = *(_DWORD *)(v113 + 4 * (BYTE1(v194) ^ 0x88u));
  HIDWORD(v192) = v218 ^ 0x4F44;
  LODWORD(v192) = v218 ^ 0xE9580000;
  int v219 = (16 * v217 + 1831686593 - ((32 * v217) & 0xDA5AA380)) ^ *(_DWORD *)(v116
                                                                           + 4
                                                                           * ((HIBYTE(v202) ^ -HIBYTE(v202) ^ ((HIBYTE(v202) ^ 0xFFFFFF16) + 234))
                                                                            + 233)) ^ (v192 >> 16);
  unsigned int v220 = *(_DWORD *)(v119 + 4 * (v206 ^ 0x9Du)) ^ v217 ^ (v219 - 365221057 - ((2 * v219) & 0xD476567E));
  int v221 = *(_DWORD *)(v111 + 4 * BYTE2(v202));
  int v222 = *(_DWORD *)(v113 + 4 * BYTE1(v208));
  HIDWORD(v192) = v222 ^ 0x4F44;
  LODWORD(v192) = v222 ^ 0xE9580000;
  int v223 = (v192 >> 16) ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v206) ^ 0x7C)) ^ (16 * (v221 ^ 0x4CF32167)
                                                                         + 1831686593
                                                                         - ((32 * (v221 ^ 0x4CF32167)) & 0xDA5AA380));
  unsigned int v224 = *(_DWORD *)(v119 + 4 * (v194 ^ 0xF9u)) ^ v221 ^ (v223 - 365221057 - ((2 * v223) & 0xD476567E));
  int v225 = HIBYTE(v224) ^ 0x59;
  int v226 = *(_DWORD *)(v111 + 4 * (BYTE2(v224) ^ 0x74u));
  int v227 = *(_DWORD *)(v113 + 4 * ((unsigned __int16)(v220 ^ 0xDE69) >> 8));
  HIDWORD(v192) = v227 ^ 0x4F44;
  LODWORD(v192) = v227 ^ 0xE9580000;
  int v228 = (v192 >> 16) ^ *(_DWORD *)(v116 + 4 * (((v214 - 589549569) >> 24) ^ 0xB5)) ^ (16 * (v226 ^ 0x4CF32167) + 1831686593 - ((32 * (v226 ^ 0x4CF32167)) & 0xDA5AA380));
  int v229 = *(_DWORD *)(v113 + 4 * (BYTE1(v224) ^ 0x1Eu));
  HIDWORD(v192) = v229 ^ 0x4F44;
  LODWORD(v192) = v229 ^ 0xE9580000;
  unsigned int v230 = *(_DWORD *)(v119 + 4 * (v216 ^ 0xB4u)) ^ v226 ^ (v228 - 365221057 - ((2 * v228) & 0xD476567E));
  int v231 = *(_DWORD *)(v111 + 4 * (((v214 - 589549569) >> 16) ^ 0xB6u)) ^ 0x4CF32167;
  unsigned int v232 = v231 ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v216) ^ 0x91)) ^ *(_DWORD *)(v119
                                                                            + 4 * (v220 ^ 0x69u)) ^ ((v192 >> 16) - 365221057 - ((2 * (v192 >> 16)) & 0xD476567E)) ^ (16 * v231 + 1831686593 - ((32 * v231) & 0xDA5AA380));
  int v233 = *(_DWORD *)(v111 + 4 * (BYTE2(v216) ^ 9u)) ^ 0x4CF32167;
  int v234 = *(_DWORD *)(v113 + 4 * (((unsigned __int16)(v214 + 12287) >> 8) ^ 0x44u));
  HIDWORD(v192) = v234 ^ 0x4F44;
  LODWORD(v192) = v234 ^ 0xE9580000;
  int v235 = (16 * v233 + 1831686593 - ((32 * v233) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * ((v220 ^ 0x5FEEDE69) >> 24)) ^ (v192 >> 16);
  int v236 = *(_DWORD *)(v119
                   + 4
                   * ((((v224 ^ 0x28) + (v224 ^ 0xFFFFFFE4) + 1) ^ 0xFFFFFFFE)
                    + (v224 ^ 0x28))) ^ v233;
  int v237 = *(_DWORD *)(v111 + 4 * (BYTE2(v220) ^ 0x2Du)) ^ 0x4CF32167;
  int v238 = *(_DWORD *)(v113 + 4 * (BYTE1(v216) ^ 0xFEu));
  HIDWORD(v192) = v238 ^ 0x4F44;
  LODWORD(v192) = v238 ^ 0xE9580000;
  int v239 = (v192 >> 16) ^ (16 * v237 + 1831686593 - ((32 * v237) & 0xDA5AA380)) ^ *(_DWORD *)(v116
                                                                                          + 4
                                                                                          * (v225 & 0x90 ^ 0x86u ^ (~(2 * (v225 | 0x90)) + (v225 | 0x90))));
  unsigned int v240 = *(_DWORD *)(v119 + 4 * (-(char)v214 ^ 0x5Bu)) ^ v237 ^ (v239
                                                                                  - 365221057
                                                                                  - ((2 * v239) & 0xD476567E));
  LOBYTE(v237) = v240 ^ 0xB7;
  unsigned int v241 = v236 ^ (v235 - 365221057 - ((2 * v235) & 0xD476567E));
  int v242 = *(_DWORD *)(v111 + 4 * ((v240 ^ 0x59A5F4B7) >> 16)) ^ 0x4CF32167;
  int v243 = *(_DWORD *)(v113 + 4 * ((unsigned __int16)(v241 ^ 0x872B) >> 8));
  HIDWORD(v192) = v243 ^ 0x4F44;
  LODWORD(v192) = v243 ^ 0xE9580000;
  int v244 = (16 * v242 + 1831686593 - ((32 * v242) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v230) ^ 0x9E)) ^ (v192 >> 16);
  int v245 = *(_DWORD *)(v113 + 4 * (BYTE1(v240) ^ 0x67u));
  unsigned int v246 = *(_DWORD *)(v119 + 4 * (v232 ^ 0xEEu)) ^ v242 ^ (v244 - 365221057 - ((2 * v244) & 0xD476567E));
  HIDWORD(v192) = v245 ^ 0x4F44;
  LODWORD(v192) = v245 ^ 0xE9580000;
  int v247 = *(_DWORD *)(v111 + 4 * (BYTE2(v230) ^ 0xD6u)) ^ 0x4CF32167;
  int v248 = *(_DWORD *)(v113 + 4 * (BYTE1(v230) ^ 0x9Au));
  int v249 = v247 ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v232) ^ 0xD6)) ^ *(_DWORD *)(v119
                                                                            + 4 * (v241 ^ 0x18u)) ^ (16 * v247 + 1831686593 - ((32 * v247) & 0xDA5AA380)) ^ ((v192 >> 16) - 365221057 - ((2 * (v192 >> 16)) & 0xD476567E));
  HIDWORD(v192) = v248 ^ 0x4F44;
  LODWORD(v192) = v248 ^ 0xE9580000;
  int v250 = *(_DWORD *)(v111 + 4 * (BYTE2(v232) ^ 0x56u)) ^ 0x4CF32167;
  int v251 = *(_DWORD *)(v116 + 4 * ((v241 ^ 0x911B872B) >> 24)) ^ v250 ^ 0x6D41727E ^ (16 * v250
                                                                                    + 1831686593
                                                                                    - ((32 * v250) & 0xDA5AA380)) ^ (v192 >> 16);
  int v252 = *(_DWORD *)(v111 + 4 * (BYTE2(v241) ^ 0xD8u)) ^ 0x4CF32167;
  int v253 = *(_DWORD *)(v113 + 4 * (BYTE1(v232) ^ 0xE4u));
  HIDWORD(v192) = v253 ^ 0x4F44;
  LODWORD(v192) = v253 ^ 0xE9580000;
  int v254 = (v192 >> 16) ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v240) ^ 0xB0)) ^ (16 * v252
                                                                         + 1831686593
                                                                         - ((32 * v252) & 0xDA5AA380));
  unsigned int v255 = *(_DWORD *)(v119 + 4 * (v230 ^ 0xC1u)) ^ v252 ^ (v254 - 365221057 - ((2 * v254) & 0xD476567E));
  HIDWORD(v192) = *(_DWORD *)(v119 + 4 * v237) ^ 0xF6B38F85;
  LODWORD(v192) = HIDWORD(v192);
  int v256 = *(_DWORD *)(v111 + 4 * (BYTE2(v255) ^ 0x72u)) ^ 0x4CF32167;
  LODWORD(v192) = (v192 >> 21) ^ __ROR4__(v251, 21) ^ 0x549BF9D9;
  HIDWORD(v192) = v192;
  int v257 = v192 >> 11;
  int v258 = *(_DWORD *)(v113 + 4 * (BYTE1(v257) ^ 0xA0u));
  HIDWORD(v192) = v258 ^ 0x4F44;
  LODWORD(v192) = v258 ^ 0xE9580000;
  int v259 = (v192 >> 16) ^ *(_DWORD *)(v116 + 4 * ((v246 ^ 0xD4B73D47) >> 24)) ^ (16 * v256
                                                                               + 1831686593
                                                                               - ((32 * v256) & 0xDA5AA380));
  unsigned int v260 = *(_DWORD *)(v119 + 4 * (v249 ^ 0xEAu)) ^ v256 ^ (v259 - 365221057 - ((2 * v259) & 0xD476567E));
  int v261 = *(_DWORD *)(v111 + 4 * (BYTE2(v246) ^ 0x74u)) ^ 0x4CF32167;
  int v262 = *(_DWORD *)(v113 + 4 * (BYTE1(v255) ^ 0x66u));
  HIDWORD(v192) = v262 ^ 0x4F44;
  LODWORD(v192) = v262 ^ 0xE9580000;
  int v263 = v249 ^ 0x177CD9D9;
  int v264 = *(_DWORD *)(v116 + 4 * ((v249 ^ 0x177CD9D9u) >> 24)) ^ 0x6D41727E ^ v261 ^ (v192 >> 16) ^ (16 * v261 + 1831686593 - ((32 * v261) & 0xDA5AA380));
  int v265 = *(_DWORD *)(v119 + 4 * (v257 ^ 0xEFu));
  int v266 = v264 & 0x200 | 0x71429417;
  if ((v264 & 0x200 & (v265 ^ 0xEA3B2B3F)) != 0) {
    int v266 = -494589906 - v266;
  }
  unsigned int v267 = ((v265 ^ 0xF6B38F85) - 1900188695 + v266) ^ v264 & 0xFFFFFDFF;
  int v268 = *(_DWORD *)(v111 + 4 * BYTE2(v263)) ^ 0x4CF32167;
  int v269 = *(_DWORD *)(v113 + 4 * (BYTE1(v246) ^ 0xAEu));
  unsigned int v270 = (16 * v268 + 1831686593 - ((32 * v268) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * ((v257 ^ 0x1EA133EFu) >> 24));
  HIDWORD(v271) = v269 ^ 0x4F44;
  LODWORD(v271) = v269 ^ 0xE9580000;
  unsigned int v272 = *(_DWORD *)(v119 + 4 * (v255 ^ 0xDu)) ^ v268 ^ (v271 >> 16) ^ (v270
                                                                                         - 365221057
                                                                                         - ((2 * v270) & 0xD476567E));
  int v273 = *(_DWORD *)(v111 + 4 * (BYTE2(v257) ^ 0x62u)) ^ 0x4CF32167;
  int v274 = *(_DWORD *)(v113 + 4 * BYTE1(v263));
  HIDWORD(v271) = v274 ^ 0x4F44;
  LODWORD(v271) = v274 ^ 0xE9580000;
  int v275 = (16 * v273 + 1831686593 - ((32 * v273) & 0xDA5AA380)) ^ *(_DWORD *)(v116 + 4 * (HIBYTE(v255) ^ 0x32)) ^ (v271 >> 16);
  unsigned int v276 = *(_DWORD *)(v119 + 4 * (v246 ^ 0x74u)) ^ v273 ^ (v275 - 365221057 - ((2 * v275) & 0xD476567E));
  uint64_t v277 = (uint64_t)*(&off_99820 + LODWORD(STACK[0x3D8]) - 1761);
  unsigned __int8 v278 = v267 ^ 0x9F;
  v279 = (char *)*(&off_99820 + LODWORD(STACK[0x3D8]) - 1929) - 4;
  unsigned int v280 = *(_DWORD *)&v279[4 * (BYTE2(v260) ^ 0x99)] ^ 0x1A0994BC;
  v281 = (char *)*(&off_99820 + LODWORD(STACK[0x3D8]) - 1918) - 8;
  unsigned int v282 = ((v272 ^ 0x7B)
        + 1626187369
        + ((2 * (((v272 ^ 0x7B) + 112) & 0xFFFFFFFB ^ (v272 ^ 0xBC37B | 0x7FFFFFFC))) ^ 0xC1E02007)) ^ v280 ^ ((((v267 ^ 0xF137909F) >> 24) ^ 0x9FD52929) - 704447877 + *(_DWORD *)(v277 + 4 * (((v267 ^ 0xF137909F) >> 24) ^ 0xB4))) ^ (v280 >> 2) ^ *(_DWORD *)&v281[4 * (v272 ^ 0x79)] ^ (v280 >> 4);
  v283 = (char *)*(&off_99820 + (LODWORD(STACK[0x3D8]) ^ 0x70C)) - 8;
  unsigned int v284 = *(_DWORD *)&v283[4 * ((unsigned __int16)(v276 ^ 0x7C9C) >> 8)] ^ 0xF68CA1B0;
  int v285 = v284 ^ (1515496080 * v284);
  int v286 = *(_DWORD *)(v277 + 4 * (((v260 ^ 0x6792B6A6) >> 24) ^ 0xB4));
  LODWORD(v329) = *(_DWORD *)(v277 + 4 * (HIBYTE(v272) ^ 0xB4));
  HIDWORD(v329) = (v276 ^ 0x250E7C9C) >> 24;
  HIDWORD(v331) = *(_DWORD *)(v277 + 4 * (HIDWORD(v329) ^ 0xB4u));
  int v287 = *(_DWORD *)&v279[4 * (BYTE2(v276) ^ 5)];
  int v288 = *(_DWORD *)&v279[4 * ((v267 ^ 0xF137909F) >> 16)];
  LODWORD(v331) = *(_DWORD *)&v279[4 * ((v272 ^ 0xBC37B) >> 16)];
  int v289 = *(_DWORD *)&v283[4 * ((unsigned __int16)(v272 ^ 0xC37B) >> 8)];
  HIDWORD(v328) = *(_DWORD *)&v283[4 * ((unsigned __int16)(v260 ^ 0xB6A6) >> 8)];
  int v290 = *(_DWORD *)&v283[4 * (BYTE1(v267) ^ 0x5E)];
  LODWORD(v283) = *(_DWORD *)&v281[4 * (v267 ^ 0x9D)];
  int v291 = *(_DWORD *)&v281[4 * (v276 ^ 0x9E)];
  int v292 = *(_DWORD *)&v281[4 * (v260 ^ 0xA4)];
  unsigned int v293 = ((v282 ^ v285) + 550835652 - ((2 * (v282 ^ v285)) & 0x41AA2BD8) + 40) ^ LODWORD(STACK[0x28C]);
  uint64_t v294 = (uint64_t)*(&off_99820 + (LODWORD(STACK[0x3D8]) ^ 0x780));
  *(unsigned char *)(a17 + v334) = *(unsigned char *)(v294 + (((v293 ^ 0x5244C6B3) >> 16) ^ 0x5ELL)) ^ ((v293 ^ 0x5244C6B3) >> 16) ^ 0x8A ^ ((((v293 ^ 0x5244C6B3) >> 16) ^ 0x8A) - ((2 * (((v293 ^ 0x5244C6B3) >> 16) ^ 0x8A) - 18) & 0x99) + 67) ^ 0xB9;
  unsigned int v295 = v287 ^ 0x1A0994BC ^ ((((v260 ^ 0x6792B6A6) >> 24) ^ 0x9FD52929) - 704447877 + v286) ^ ((v287 ^ 0x1A0994BCu) >> 2) ^ ((v287 ^ 0x1A0994BCu) >> 4) ^ v289 ^ 0xF68CA1B0 ^ v283 ^ (1515496080 * (v289 ^ 0xF68CA1B0)) ^ (~((2 * v278 - 102555424) & 0xC1E023F0) + v278 + 1626187369);
  unsigned int v296 = (v295 + 75795782 - ((2 * v295) & 0x9091BFA) + 183) ^ LODWORD(STACK[0x350]);
  unsigned int v297 = v296 ^ 0x22A932A6;
  uint64_t v298 = (BYTE1(v297) | 0x88) ^ (v297 >> 8) & 0x88;
  v299 = (char *)*(&off_99820 + (LODWORD(STACK[0x3D8]) ^ 0x782)) - 4;
  *(unsigned char *)(a17 + v333) = (((unsigned __int16)(v296 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v296 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((v299[v298 ^ 0x14] ^ 0x8D) - ((2 * v299[v298 ^ 0x14]) & 0x20) - 112);
  v300 = (char *)*(&off_99820 + (LODWORD(STACK[0x3D8]) ^ 0x790)) - 12;
  LODWORD(v298) = v300[HIBYTE(v293) ^ 0xEFLL];
  HIDWORD(v271) = v298 ^ 0xD;
  LODWORD(v271) = ~v298 << 24;
  *(unsigned char *)(a17 + STACK[0x2C0]) = (v271 >> 29) ^ 0x83;
  int v301 = v288 ^ 0x1A0994BC ^ ((HIBYTE(v272) ^ 0x9FD52929) - 704447877 + v329) ^ ((v288 ^ 0x1A0994BCu) >> 2) ^ ((v288 ^ 0x1A0994BCu) >> 4);
  int v302 = v301 & 0x1000000 | 0xEED0C61;
  if ((v301 & 0x1000000 & ~v291) != 0) {
    int v302 = 500832450 - v302;
  }
  unsigned int v303 = v301 & 0xFEFFFFFF ^ (1515496080 * (HIDWORD(v328) ^ 0xF68CA1B0)) ^ ((((v276 ^ 0x9C)
                                                                            + 1626187369
                                                                            + ((2
                                                                              * (((v276 ^ 0x9C) + 112) & 0xFFFFFFFB ^ (v276 | 0x7FFFFFFC))) ^ 0xC1E02007)) ^ v291)
                                                                          - 250416225
                                                                          + v302);
  unsigned int v304 = HIDWORD(v328) ^ 0xF68CA1B0 ^ LODWORD(STACK[0x380]) ^ (v303 - 66792516 - ((2 * v303) & 0xF809A778));
  v305 = (char *)*(&off_99820 + (LODWORD(STACK[0x3D8]) ^ 0x726)) - 12;
  *(unsigned char *)(a17 + v335) = v305[BYTE4(v328) ^ 0xB0u ^ LOBYTE(STACK[0x380]) ^ (v303
                                                                                             - 68
                                                                                             - ((2 * v303) & 0x78)) ^ 0x28] ^ 0x3D;
  int v306 = v300[HIBYTE(v296) ^ 0xF9];
  HIDWORD(v307) = v306 ^ 0xD;
  LODWORD(v307) = ~v306 << 24;
  unint64_t v308 = STACK[0x278];
  *(unsigned char *)(a17 + STACK[0x278]) = (v307 >> 29) ^ 0xFB;
  *(unsigned char *)(a17 + v336) = BYTE2(v297) ^ 0x61 ^ ((BYTE2(v297) ^ 0x61) - ((2 * (BYTE2(v297) ^ 0x61) - 18) & 0x98) + 67) ^ 0xB8 ^ *(unsigned char *)(v294 + (BYTE2(v297) ^ 0xB5));
  unsigned int v309 = (HIDWORD(v329) ^ 0x9FD52929) - 704447877 + HIDWORD(v331);
  int v310 = v331 ^ 0x1A0994BC ^ ((v331 ^ 0x1A0994BC) >> 4) ^ ((v331 ^ 0x1A0994BC) >> 2);
  int v311 = v310 & 0x80000 | 0x36261C02;
  if ((v310 & 0x80000 & v309) != 0) {
    int v311 = 1816934404 - v311;
  }
  unsigned int v312 = v310 & 0xFFF7FFFF ^ (1515496080 * (v290 ^ 0xF68CA1B0)) ^ (v309 - 908467202 + v311);
  unsigned int v313 = v292 ^ ((v260 ^ 0xA6) + 2096205936) ^ (v312 - ((2 * v312) & 0xC7F82BF0) - 470018568);
  unsigned int v314 = v290 ^ LODWORD(STACK[0x390]) ^ (v313 - 2142818494 - ((2 * v313) & 0x8E5EE4) + 48);
  *(unsigned char *)(a17 + STACK[0x248]) = *(unsigned char *)(v294 + (BYTE2(v314) ^ 0x17) + ((v314 >> 15) & 0x1A8 ^ 0xFFFFFFD7) + 213) ^ BYTE2(v314) ^ ((BYTE2(v314) ^ 0x17) + (~(2 * (BYTE2(v314) ^ 0x17) - 18) | 0x67) + 68) ^ 0x91;
  int v315 = v300[HIBYTE(v314) ^ 0xCLL];
  HIDWORD(v316) = v315 ^ 0xD;
  LODWORD(v316) = ~v315 << 24;
  *(unsigned char *)(a17 + STACK[0x340]) = (v316 >> 29) ^ 0x50;
  *(unsigned char *)(a17 + STACK[0x240]) = ((v304 ^ 0xCFDDD967) >> 16) ^ 0x94 ^ ((((v304 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                                       - ((2 * (((v304 ^ 0xCFDDD967) >> 16) ^ 0x94) - 18) & 0x98)
                                                                       + 67) ^ *(unsigned char *)(v294
                                                                                        + (((v304 ^ 0xCFDDD967) >> 16) ^ 0x40)) ^ 0xC;
  unsigned int v317 = (((v314 ^ 0xA9B9339F) >> 4) & 0xF0 | ((unsigned __int16)(v314 ^ 0x339F) >> 12)) ^ 0xE6;
  *(unsigned char *)(a17 + STACK[0x398]) = v299[((v317 >> 4) & 0xFFFFFF0F | (16 * (v317 & 0xF))) ^ 0xAELL] ^ (((v317 >> 4) & 0xF | (16 * (v317 & 0xF))) + (~(2 * ((v317 >> 4) & 0xF | (16 * (v317 & 0xF)))) | 0xE5) - 114) ^ 0x2B;
  *(unsigned char *)(a17 + STACK[0x220]) = (((unsigned __int16)(v304 ^ 0xD967) >> 8)
                                  + (~((v304 ^ 0xCFDDD967) >> 7) | 0xE5)
                                  - 114) ^ 0xDB ^ v299[((unsigned __int16)(v304 ^ 0xD967) >> 8) ^ 0xA0];
  *(unsigned char *)(a17 + STACK[0x388]) = (((unsigned __int16)(v293 ^ 0xC6B3) >> 8) - (((v293 ^ 0x5244C6B3) >> 7) & 0x1A) - 115) ^ v299[((unsigned __int16)(v293 ^ 0xC6B3) >> 8) ^ 0x75] ^ 0x80;
  *(unsigned char *)(a17 + STACK[0x348]) = v305[v296 ^ 0x95] ^ 0x90;
  *(unsigned char *)(a17 + STACK[0x2C8]) = v305[v293 ^ 0x7FLL] ^ 1;
  int v318 = STACK[0x3D8];
  *(unsigned char *)(a17 + STACK[0x3A0]) = v305[v314 ^ 0x30] ^ 0xAE;
  int v319 = v300[HIBYTE(v304) ^ 0x49];
  HIDWORD(v316) = v319 ^ 0xD;
  LODWORD(v316) = ~v319 << 24;
  *(unsigned char *)(a17 + STACK[0x378]) = (v316 >> 29) ^ 0x2E;
  BOOL v320 = ((v308 - 1941773993 - 2 * ((v308 + 16) & 0xC42E14F ^ v337[0] & 8)) ^ 0x8C42E140) > 0x14F;
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t, char *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8 * (((2 * v320) | (16 * v320)) ^ v318)))(v305, ~(2 * (HIWORD(v314) ^ 0x17) - 18) | 0x67, 4136411568, 1626187369, v299, 152, 13, v308, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           v322,
           v323,
           v324,
           v325,
           v326,
           v327,
           v328,
           v329,
           v331,
           v333,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           v334,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

void sub_3A674()
{
}

void sub_3A6BC()
{
  if (v0) {
    int v2 = 1517586988;
  }
  else {
    int v2 = *v1 + 1;
  }
  *uint64_t v1 = v2;
  JUMPOUT(0x3A740);
}

uint64_t sub_3A838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * ((792 * (a11 + ((127 * (v56 ^ 0x30) - 1078495680) ^ a55 & 0x3F) + ((2 * a55) & 0x7C ^ 0x1Cu) < 0xFFFFFFC0)) ^ (v56 + 1004))))(a1, 4076963439, a3, &a46, a5, a6, 202, 13);
}

uint64_t sub_3A8D8(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((454
                                * ((((*(unsigned __int8 *)(v3 + 5) - 13) << (((a1 - 1) & 0xF7) - 117)) & v2)
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v1) == v1)) ^ a1)))();
}

uint64_t sub_3A930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((1613 * (v32 + v33 + ((v31 - 233) | 0x10u) < 4)) ^ v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_3A9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  *(void *)(&a33 + v34 - 1076023950) = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(void))(v36
                              + 8
                              * ((30 * ((((v35 - 146892532) & 0x8C166ED ^ 0xFFFFFFFFFFFFFB14) & v33) != 8)) ^ (v35 - 146892532) & 0x8C166EDu)))();
}

uint64_t sub_3AA74()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((14 * (v2 > 0x4DCEC945)) ^ (v0 - 1174668212))))();
}

void sub_3AAC4()
{
}

uint64_t sub_3AAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                                  + 8 * ((((unint64_t)(*(void *)(v5 + 8 * (v3 - 246)) - 8 - a1) < 0x20) * (((v3 ^ 0x1B5) * v4) ^ 0x1A2)) ^ v3)))(1055, 315, a3, 1027840042, 3267127282, 3981130497, 1245);
}

uint64_t sub_3AB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37)
{
  return (*(uint64_t (**)(void))(v39
                              + 8
                              * (v38 ^ (16 * ((LODWORD(STACK[0x52C]) ^ v37) != a37 - 659198276 + ((v38 - 693) | 0x440))))))();
}

uint64_t sub_3ABA0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1963
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ (v0 + (v2 ^ 0x300) - 287)) == v0)) ^ v2)))();
}

void sub_3ABE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, int a8, int a9)
{
  int v10 = v9 - (**(unsigned char **)(a2 + 8) == 0);
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 950047466;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 1372200252;
  *(void *)(*(void *)(a1 + 96) + 808) = *(void *)(a1 + 96) + 816;
  uint64_t v11 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v10);
  unsigned int v12 = 1734042137 * ((-394319217 - (&a5 | 0xE87F2A8F) + (&a5 | 0x1780D570)) ^ 0x4B4E163D);
  a5 = *(void *)(a1 + 96) + 0x67843F9A1244BDEBLL;
  a9 = v10 - v12 - 929929536;
  a6 = 1810 - v12;
  a7 = v11;
  (*(void (**)(uint64_t *))(a3 + 17472))(&a5);
  JUMPOUT(0x3AD00);
}

uint64_t sub_3AD2C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1955
                                * ((((*(unsigned __int8 *)(a2 + 7) - 100) << ((v2 + v4 + 114) ^ (v2 - 1))) & v6)
                                 + ((*(unsigned __int8 *)(a2 + 7) - 100) ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_3AD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v7 = *v4 + ((v5 + 864) ^ 0xFFFFF9A9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * ((2851
                                                                                  * (((2 * v7) & 0xDF36FEFA)
                                                                                   + (v7 ^ 0xEF9B7F7D) == -275021955)) ^ v5)))(a1, a2, a3, a4, 3727535591);
}

uint64_t sub_3ADE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * (((v17 - 1 >= ((v16 + 66) ^ 0x7FFFF9ADu)) * (((v16 + 66) | 0x81) ^ 0x682)) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_3AE30@<X0>(int a1@<W8>)
{
  int v4 = 6 * (a1 ^ 0x25E);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a1 ^ 0xA2B)))(v1 - 0x399DE98F08C0F0A4);
  STACK[0x468] -= 16;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (int)(((v2 != -1373544826)
                                                   * (((v4 ^ 0x4A0) + 1159416552) & 0xBAE4B55D ^ 0x54F)) ^ v4 ^ 0x4A0)))(v5);
}

uint64_t sub_3AECC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((a1 == ((v1 - 554713943) & 0xFF3DEFEF ^ 0x92A3649E))
                                              * (((v1 - 946701839) & 0x386D87DF) + 52)) ^ v1)))(4294925278);
}

uint64_t sub_3AF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  char v30 = *(unsigned char *)(v24 - 0x1B326768DCF9E3A8);
  int v31 = (v27 - 2020407862) & 0x786CFDCF;
  *(_DWORD *)(v29 - 116) = v31;
  uint64_t v32 = *(void *)(v28 + 8 * (v27 ^ 0xDA));
  *(_DWORD *)(v29 - 216) = v26;
  uint64_t v33 = v32 - 4;
  int v34 = v27;
  int v35 = (*(unsigned __int8 *)(v32 - 4 + (v30 ^ v31 ^ 0x92)) ^ 0x69) << 8;
  uint64_t v36 = *(void *)(v28 + 8 * (v34 ^ 0x81)) - 12;
  uint64_t v37 = *(void *)(v28 + 8 * (v34 ^ 0xCE)) - 4;
  int v38 = *(unsigned __int8 *)(v37 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E39DLL) ^ 0x49));
  HIDWORD(v39) = v38 ^ 2;
  LODWORD(v39) = (v38 ^ 0xFFFFFFBF) << 24;
  LOBYTE(v38) = v39 >> 26;
  int v40 = v35 | ((*(unsigned __int8 *)(v36 + (*v25 ^ 0xB1)) ^ 0x6B) << 24);
  uint64_t v41 = *(void *)(v28 + 8 * (v34 ^ 0xC8)) - 12;
  int v42 = *(unsigned __int8 *)(v36 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E39ELL) ^ 0xB8));
  int v43 = *(unsigned __int8 *)(v37 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E3A1) ^ 0x6BLL));
  HIDWORD(v39) = v43 ^ 2;
  LODWORD(v39) = (v43 ^ 0xFFFFFFBF) << 24;
  LOBYTE(v43) = *(unsigned char *)(v33 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E39CLL) ^ 0x2ELL));
  int v44 = ((v39 >> 26) ^ 0x53) << 16;
  int v45 = *(unsigned __int8 *)(v37 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E3A9) ^ 0x47));
  HIDWORD(v39) = v45 ^ 2;
  LODWORD(v39) = (v45 ^ 0xFFFFFFBF) << 24;
  unsigned int v46 = v40 & 0xFF00FF00 | (*(unsigned char *)(v41 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E3A7) ^ 0xECLL))
                                           - 98) ^ 9 | (((v39 >> 26) ^ 0x1E) << 16);
  LODWORD(v37) = *(unsigned __int8 *)(v37 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E3A5) ^ 0xCBLL));
  HIDWORD(v39) = v37 ^ 2;
  LODWORD(v39) = (v37 ^ 0xFFFFFFBF) << 24;
  int v47 = ((v38 ^ 0xFB) << 16) | ((v42 ^ 0xD3) << 24) | ((v43 ^ 0xAC) << 8);
  LOBYTE(v37) = *(unsigned char *)(v41 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E39FLL) ^ 0xB5));
  unsigned int v48 = ((*(unsigned char *)(v41 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E3A3) ^ 0xA9)) - 98) | ((*(unsigned __int8 *)(v33 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E3A4) ^ 0x30)) ^ 0x5C) << 8)) & 0xFF00FFFF | (((v39 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v36 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E3A6) ^ 0x35)) ^ 0xA4) << 24);
  int v49 = v44 | ((*(unsigned __int8 *)(v33 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E3A0) ^ 0x77)) ^ 0xA6) << 8) | ((*(unsigned __int8 *)(v36 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E3A2) ^ 0xBFLL)) ^ 0xBD) << 24);
  LOBYTE(v41) = *(unsigned char *)(v41 + (*(unsigned __int8 *)(v24 - 0x1B326768DCF9E39BLL) ^ 0x36)) - 98;
  uint64_t v50 = *(void *)(v28 + 8 * (v34 ^ 0xE5));
  uint64_t v51 = *(void *)(v28 + 8 * (v34 ^ 0x18)) - 8;
  LODWORD(v36) = *(_DWORD *)(v51 + 4 * (v38 ^ 0x61u)) ^ *(_DWORD *)(v50
                                                                                     + 4
                                                                                     * (v41 ^ 0xFDu));
  *(_DWORD *)(v29 - 160) = v34;
  uint64_t v52 = *(void *)(v28 + 8 * (int)(v34 & 0x9B782740)) - 4;
  LODWORD(v36) = ((v36 ^ 0xA4685225) - 2 * ((v36 ^ 0xA4685225) & 0x1C1AA03F ^ v36 & 2) + 471507005) ^ *(_DWORD *)(v52 + 4 * (v42 ^ 0x46u));
  int v53 = v36 - ((2 * v36) & 0x487B595C);
  uint64_t v54 = v43 ^ 0x94u;
  uint64_t v55 = *(void *)(v28 + 8 * (v34 ^ 0xE3));
  int v56 = *(_DWORD *)(v55 + 4 * v54) ^ v46 ^ (v53 - 1539461970);
  unsigned int v57 = (v47 & 0xFFFFFF00 | v41 ^ 0x2A)
      - 2 * ((v47 & 0xC945B00 | (v41 ^ 0x2A) & 0xDF) ^ (v41 ^ 0x2A) & 0x1C)
      - 1936434237;
  LOBYTE(v41) = (v37 - 98) ^ 0xA8;
  unsigned int v58 = v49 & 0xFFFFFF00 | v41;
  HIDWORD(v352) = v48;
  LODWORD(v37) = v56 ^ v48 ^ 0x4D;
  int v59 = v56 ^ v48;
  *(_DWORD *)(v29 - 184) = v59;
  *(_DWORD *)(v29 - 120) = v37 ^ v58;
  unsigned __int8 v245 = v37;
  int v60 = v37 ^ v58 ^ v57;
  int v270 = BYTE1(v60);
  int v277 = BYTE2(v60);
  int v61 = *(_DWORD *)(v55 + 4 * (BYTE1(v60) ^ 0xA1u)) ^ *(_DWORD *)(v51 + 4 * (BYTE2(v60) ^ 0x2Au));
  unsigned int v62 = v60 ^ 0x3663766A;
  int v292 = v60;
  int v63 = ((v61 ^ 0x3E51716A) - ((2 * (v61 ^ 0x3E51716A)) & 0x7C091FC2) + 1040486369) ^ *(_DWORD *)(v50
                                                                                                + 4
                                                                                                * (v60 ^ 0xEAu));
  unsigned int v283 = HIBYTE(v62);
  int v64 = v56 ^ *(_DWORD *)(v52 + 4 * (HIBYTE(v62) ^ 0x65)) ^ (v63 - ((2 * v63) & 0x3835407A) + 471507005);
  unsigned int v65 = (v59 ^ 0xBAF72DE4) - ((2 * (v59 ^ 0xBAF72DE4)) & 0x563D9664) - 1424045262;
  LODWORD(v352) = v58;
  *(_DWORD *)(v29 - 176) = v64;
  int v66 = v64 ^ 0xAB1ECB32 ^ (v58 - 2 * (v58 & 0x2B1ECB3B ^ v41 & 9) - 1424045262);
  LODWORD(v41) = v66 ^ v62;
  *(_DWORD *)(v29 - 124) = v66;
  int v298 = ((v66 ^ v62) >> 16);
  int v302 = ((unsigned __int16)(v66 ^ v62) >> 8);
  int v67 = *(_DWORD *)(v51 + 4 * (v298 ^ 0x2Eu)) ^ *(_DWORD *)(v55 + 4 * (v302 ^ 0x9Bu)) ^ 0x3E51716A;
  int v360 = (v66 ^ v62);
  unsigned int v68 = (v67 + 1040486369 + (~(2 * v67) | 0x83F6E03D) + 1) ^ *(_DWORD *)(v50 + 4 * (v360 ^ 0xD2u));
  int v69 = v66 ^ v62 ^ 0x25F0BE3D;
  *(_DWORD *)(v29 - 224) = BYTE3(v41);
  int v70 = (v68 - ((2 * v68) & 0x3835407A) + 471507005) ^ *(_DWORD *)(v52 + 4 * (BYTE3(v41) ^ 0x69));
  LODWORD(v41) = v70 ^ v37 ^ 0x4BAD85BE;
  int v322 = v70 ^ v37;
  int v71 = v41 ^ v66;
  *(_DWORD *)(v29 - 168) = v41 ^ v66;
  unsigned int v72 = ((v71 ^ 0xD12B8854) - ((2 * (v71 ^ 0xD12B8854)) & 0xA2AE3EE8) + 1364664180) ^ v69;
  unsigned int v73 = v72 ^ 0x9547167F;
  int v337 = ((v72 ^ 0x9547167F) >> 16);
  int v353 = ((unsigned __int16)(v72 ^ 0x167F) >> 8);
  int v74 = *(_DWORD *)(v51 + 4 * (v337 ^ 0x89u)) ^ *(_DWORD *)(v55 + 4 * (v353 ^ 0x3Au)) ^ 0x3E51716A;
  int v340 = (((v71 ^ 0x54) - ((2 * (v71 ^ 0x54)) & 0xE8) + 116) ^ v69);
  int v75 = (v74 - ((2 * v74) & 0x7C091FC2) + 1040486369) ^ *(_DWORD *)(v50 + 4 * (v340 ^ 0xE4u));
  *(_DWORD *)(v29 - 232) = HIBYTE(v73);
  int v76 = (v75 - ((2 * v75) & 0x3835407A) + 471507005) ^ *(_DWORD *)(v52 + 4 * (HIBYTE(v73) ^ 0x1D));
  unsigned int v304 = v70 ^ v64;
  int v77 = (v76 - ((2 * v76) & 0x22A941C4) - 1856724766) ^ v70 ^ v64;
  *(_DWORD *)(v29 - 128) = v77;
  unsigned int v78 = v77 ^ 0x9154A0E2 ^ v70 ^ v37;
  v77 ^= 0x9154A0E2;
  unsigned __int8 v371 = BYTE1(v77);
  unsigned int v364 = v78;
  unsigned int v79 = ((v78 ^ 0xFE25CD6D) - ((2 * (v78 ^ 0xFE25CD6D)) & 0xA2AE3EE8) + 1364664180) ^ v69;
  *(_DWORD *)(v29 - 240) = BYTE1(v79);
  int v80 = *(_DWORD *)(v55 + 4 * (BYTE1(v79) ^ 0x6Fu));
  *(_DWORD *)(v29 - 248) = BYTE2(v79);
  LODWORD(v37) = v80 ^ *(_DWORD *)(v51 + 4 * (BYTE2(v79) ^ 0xA8u)) ^ 0x3E51716A;
  unsigned int v368 = HIBYTE(v79);
  LODWORD(v37) = (v37 - ((2 * v37) & 0x3835407A) + 471507005) ^ *(_DWORD *)(v52 + 4 * (HIBYTE(v79) ^ 0x85));
  int v356 = v79;
  LODWORD(v37) = (v37 - ((2 * v37) & 0x7C091FC2) + 1040486369) ^ *(_DWORD *)(v50 + 4 * (v79 ^ 0x25u));
  unsigned int v362 = v78 ^ v41 ^ v66;
  int v81 = (v37 - ((2 * v37) & 0xE2B5502E) - 245716969) ^ v41 ^ v362;
  unsigned int v82 = (v37 - ((2 * v37) & 0xE2B5502E) - 245716969) ^ v41;
  unsigned int v240 = v82;
  *(_DWORD *)(v29 - 132) = v81;
  v81 ^= 0xDFA586D6;
  LOBYTE(v41) = v79 ^ v81;
  int v83 = v81;
  __int16 v232 = v81;
  unsigned int v366 = v79;
  unsigned int v84 = v79 ^ v81 ^ 0x19FAB981;
  unsigned int v275 = HIBYTE(v84);
  int v260 = BYTE2(v84);
  unsigned int v85 = *(_DWORD *)(v52 + 4 * (HIBYTE(v84) ^ 0x1D)) ^ *(_DWORD *)(v51 + 4 * (BYTE2(v84) ^ 0x89u)) ^ 0x86767DF9;
  int v264 = BYTE1(v84);
  int v86 = (v85 - ((2 * v85) & 0x487B595C) - 1539461970) ^ *(_DWORD *)(v55 + 4 * (BYTE1(v84) ^ 0x3Au));
  *(_DWORD *)(v29 - 192) = v77 ^ v37;
  int v348 = v41;
  LODWORD(v41) = v77 ^ v37 ^ *(_DWORD *)(v50 + 4 * (v41 ^ 0x1Au)) ^ (v86
                                                                                      - ((2 * v86) & 0x7C091FC2)
                                                                                      + 1040486369);
  unsigned __int8 v269 = BYTE2(v82) ^ 0x16;
  int v87 = v41 ^ v82 ^ 0x7C166C11;
  int v88 = v41;
  int v332 = v41;
  LODWORD(v41) = (v87 ^ v366) >> 24;
  *(_DWORD *)(v29 - 256) = v41;
  int v343 = (v87 ^ v366);
  int v89 = *(_DWORD *)(v52 + 4 * (v41 ^ 0x9B)) ^ *(_DWORD *)(v50 + 4 * (v343 ^ 0x31u)) ^ 0x221E2FDC;
  unsigned int v313 = ((v87 ^ v366) >> 8) ^ 0x86839A;
  int v317 = ((unsigned __int16)(v87 ^ v366) >> 8) ^ 0x9A;
  LODWORD(v54) = (v89 - ((2 * v89) & 0x487B595C) - 1539461970) ^ *(_DWORD *)(v55
                                                                           + 4
                                                                           * (((unsigned __int16)(v87 ^ v366) >> 8) ^ 0xA0u));
  int v90 = v87 ^ v366 ^ 0x59AD5C35;
  int v319 = ((v87 ^ v366) >> 16);
  LODWORD(v54) = (v54 - ((2 * v54) & 0x34D9BB88) - 1704141372) ^ *(_DWORD *)(v51 + 4 * (v319 ^ 0xAu));
  unsigned int v289 = (v54 - ((2 * v54) & 0xE1583C6C) - 257155530) ^ v88;
  int v286 = v289 ^ 0xD2F849C ^ v87;
  __int16 v272 = (v54 - ((2 * v54) & 0x3C6C) + 7734) ^ v88 ^ 0x849C;
  unsigned int v329 = v87 ^ v83;
  int v309 = v87;
  unsigned int v91 = v87 ^ v83 ^ 0xFBC2E1DD;
  *(_DWORD *)(v29 - 144) = v91;
  int v92 = ((v286 ^ 0x5A137D54) - ((2 * (v286 ^ 0x5A137D54)) & 0x66C9794E) + 862239911) ^ v91;
  *(_DWORD *)(v29 - 152) = v92;
  unsigned int v93 = ((v92 ^ 0x92923FE1) - ((2 * (v92 ^ 0x92923FE1)) & 0xBE5D8D3E) - 550582625) ^ v90 ^ 0x479AB031;
  int v347 = (((v92 ^ 0xE1) - ((2 * (v92 ^ 0xE1)) & 0x3E) - 97) ^ v90);
  int v358 = BYTE1(v93);
  LODWORD(v54) = *(_DWORD *)(v55 + 4 * (BYTE1(v93) ^ 0x3Au)) ^ *(_DWORD *)(v50 + 4 * (v347 ^ 0xAAu)) ^ 0x9A39234F;
  int v94 = BYTE2(v93);
  int v95 = (v54 - ((2 * v54) & 0x34D9BB88) - 1704141372) ^ *(_DWORD *)(v51 + 4 * (BYTE2(v93) ^ 0x89u));
  unsigned int v280 = HIBYTE(v93);
  int v96 = (v95 - ((2 * v95) & 0x3835407A) + 471507005) ^ *(_DWORD *)(v52 + 4 * (HIBYTE(v93) ^ 0x1D));
  unsigned int v97 = v96 ^ v87;
  unsigned int v98 = ((v96 ^ v87 ^ 0xA6C48CD5) - ((2 * (v96 ^ v87 ^ 0xA6C48CD5)) & 0xBE5D8D3E) - 550582625) ^ v90;
  unsigned int v99 = *(_DWORD *)(v52 + 4 * (HIBYTE(v98) ^ 5)) ^ *(_DWORD *)(v55 + 4 * (BYTE1(v98) ^ 0x6Fu)) ^ 0xB8270C93;
  int v100 = (v99 - ((2 * v99) & 0x7C091FC2) + 1040486369) ^ *(_DWORD *)(v50 + 4 * (v98 ^ 0x25u));
  int v101 = v289 ^ 0xD2F849C ^ v96;
  int v102 = v101 ^ *(_DWORD *)(v51 + 4 * (BYTE2(v98) ^ 0xA8u)) ^ (v100 - ((2 * v100) & 0x34D9BB88) - 1704141372);
  LOBYTE(v87) = v92 ^ 0xE1;
  int v103 = v92 ^ 0x150DE7E1 ^ v102;
  *(_DWORD *)(v29 - 200) = v103;
  int v349 = ((unsigned __int16)(v103 ^ v98) >> 8);
  unsigned int v104 = v65 ^ v64 ^ 0xAB1ECB32;
  unsigned int v237 = (v103 ^ v98) >> 24;
  LODWORD(v52) = *(_DWORD *)(v55 + 4 * (v349 ^ 0x44u)) ^ *(_DWORD *)(v52 + 4 * (v237 ^ 0x47)) ^ 0xB8270C93;
  int v250 = (v103 ^ v98);
  int v105 = (v52 - ((2 * v52) & 0x7C091FC2) + 1040486369) ^ *(_DWORD *)(v50 + 4 * (v250 ^ 0xD5u));
  int v230 = ((v103 ^ v98) >> 16);
  int v106 = (v105 - ((2 * v105) & 0x34D9BB88) - 1704141372) ^ *(_DWORD *)(v51 + 4 * (v230 ^ 0xCBu));
  *(_DWORD *)(v29 - 208) = v102;
  HIDWORD(v351) = v102 ^ 0x8E42B87A ^ (v106 - ((2 * v106) & 0x1D6B2BA6) + 246781395);
  int v233 = v102 ^ v97;
  LODWORD(v351) = v102 ^ v97 ^ 0x92D20C9 ^ (HIDWORD(v351) - ((2 * HIDWORD(v351)) & 0x5B1FDFBA) + 764407773);
  HIDWORD(v350) = v103 ^ 0x4018996 ^ v351;
  LODWORD(v350) = (HIDWORD(v350) - ((2 * HIDWORD(v350)) & 0xEE08736A) + 1996765621) ^ v103 ^ v98;
  int v107 = *(_DWORD *)(v29 - 160);
  unsigned int v108 = (char *)*(&off_99820 + (v107 ^ 0xD6)) - 12;
  unsigned int v109 = (((v101 ^ 0x1B9155BDu) >> 16)
        + 412234942
        + ((2 * ((v101 ^ 0x1B9155BDu) >> 16) + 88) & 0x122 ^ 0xFE7B6BFF)) ^ *(_DWORD *)&v108[4
                                                                                           * (((v101 ^ 0x1B9155BDu) >> 16) ^ 0x2D)];
  LODWORD(v51) = ((BYTE2(v98) ^ 0x89) + 412234942 + ((2 * (BYTE2(v98) ^ 0x89) + 88) & 0x122 ^ 0xFE7B6BFF)) ^ *(_DWORD *)&v108[4 * (BYTE2(v98) ^ 0xA4)];
  char v110 = (char *)*(&off_99820 + (v107 ^ 0xBB)) - 8;
  unsigned int v111 = (v109 - ((2 * v109) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v110[4 * (BYTE1(v101) ^ 0x47)];
  int v112 = (char *)*(&off_99820 + (v107 ^ 0xE0)) - 8;
  int v113 = (v51 - ((2 * v51) & 0xE1D7A238) + 1894502684) ^ *(_DWORD *)&v112[4 * (HIBYTE(v98) ^ 0xCC)];
  LODWORD(v51) = v92 ^ 0x150DE7E1 ^ v97;
  uint64_t v114 = (uint64_t)*(&off_99820 + (v107 & 0x36334875));
  int v115 = *(_DWORD *)(v114 + 4 * (v92 ^ 0xE1 ^ v97 ^ 0x53u));
  unsigned int v116 = 181304767 * v115 - ((362609534 * v115 + 504259772) & 0xE1D7A238);
  unsigned __int8 v225 = BYTE1(v51);
  unsigned int v117 = *(_DWORD *)&v108[4 * (BYTE2(v51) ^ 0xAA)] ^ *(_DWORD *)&v112[4 * (BYTE3(v51) ^ 0x3E)] ^ ((BYTE2(v51) ^ 0x87)
                                                                                                + 412234942
                                                                                                + ((2
                                                                                                  * (((BYTE2(v51) ^ 0x87) + 44) & 0x93 ^ (BYTE2(v51) ^ 0x46 | 0xFFFFFFFD))) ^ 0x1849405));
  int v118 = *(_DWORD *)(v114 + 4 * (v97 ^ 0x74u));
  unsigned int v119 = (181304767 * v118 - ((362609534 * v118 + 504259772) & 0x8CA253B2) - 715629513) ^ *(_DWORD *)&v110[4 * (BYTE1(v97) ^ 0x5A)];
  unsigned int v345 = v119 - ((2 * v119) & 0xE1D7A238);
  unsigned int v334 = (BYTE2(v97) ^ 0x4C) + 412234942 + ((2 * (BYTE2(v97) ^ 0x4C) + 88) & 0x122 ^ 0xFE7B6BFF);
  int v327 = v113 - ((2 * v113) & 0x8CA253B2);
  unsigned int v324 = (v117 ^ (v116 - 851078)) - ((2 * (v117 ^ (v116 - 851078))) & 0x8CA253B2);
  unsigned int v355 = (v111 - ((2 * v111) & 0xE1D7A238) + 1894502684) ^ *(_DWORD *)&v112[4 * ((v101 ^ 0x1B9155BDu) >> 24)] ^ (181304767 * *(_DWORD *)(v114 + 4 * (v101 ^ 0x7Du)) - 1895353762);
  LODWORD(v37) = *(_DWORD *)&v108[4 * (((v104 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v104 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                              + 412234942
                                                                                              + ((2
                                                                                                * (((((v104 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                                  + 44) & 0x93 ^ (((v104 ^ 0xE9B45E6C) >> 16) | 0xFFFFFFFD))) ^ 0x1849405));
  unsigned int v120 = *(_DWORD *)(v29 - 124) ^ 0x31676F78;
  unsigned int v121 = *(_DWORD *)&v108[4 * (BYTE2(v120) ^ 0x7B)] ^ ((BYTE2(v120) ^ 0x56)
                                                     + 412234942
                                                     + ((2 * (BYTE2(v120) ^ 0x56) + 88) & 0x122 ^ 0xFE7B6BFF));
  unsigned int v122 = (v121 - ((2 * v121) & 0xE1D7A238) + 1894502684) ^ *(_DWORD *)&v112[4 * HIBYTE(v120)];
  unsigned int v123 = *(_DWORD *)&v108[4 * (v298 ^ 0x34)] ^ ((v298 ^ 0x19)
                                              + 412234942
                                              + ((2 * (v298 ^ 0x19) + 88) & 0x122 ^ 0xFE7B6BFF));
  unsigned int v124 = (v123 - ((2 * v123) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v110[4 * (v302 ^ 5)];
  unsigned int v299 = v122 - ((2 * v122) & 0x8CA253B2);
  unsigned int v303 = v124 - ((2 * v124) & 0xE1D7A238);
  int v125 = *(_DWORD *)(v114 + 4 * (*(_DWORD *)(v29 - 176) ^ 0xDFu));
  unsigned int v126 = *(_DWORD *)(v29 - 176) ^ 0x5A18571F;
  unsigned int v127 = *(_DWORD *)&v112[4 * HIBYTE(v126)] ^ *(_DWORD *)&v108[4 * (BYTE2(v126) ^ 0xEC)] ^ ((BYTE2(v126) ^ 0xC1)
                                                                                          + 412234942
                                                                                          + ((2
                                                                                            * (((BYTE2(v126) ^ 0xC1) + 44) & 0x93 ^ (HIWORD(v126) | 0xFFFFFFFD))) ^ 0x1849405)) ^ (181304767 * v125 - ((362609534 * v125 + 504259772) & 0xE1D7A238) - 851078);
  unsigned int v296 = v127 - ((2 * v127) & 0x8CA253B2);
  int v128 = *(_DWORD *)&v112[4 * ((v104 ^ 0xE9B45E6C) >> 24)] ^ (v37 - ((2 * v37) & 0xE1D7A238) + 1894502684);
  int v294 = v128 - ((2 * v128) & 0x8CA253B2);
  __int16 v255 = v286 ^ 0x8EA4;
  LODWORD(v37) = v286 ^ 0x35C48CD5;
  unsigned int v129 = *(_DWORD *)&v108[4 * (v94 ^ 0xDE)] ^ ((v94 ^ 0xF3)
                                             + 412234942
                                             + ((2 * (((v94 ^ 0xF3) + 44) & 0x93 ^ (v94 ^ 0xF3 | 0xFFFFFFFD))) ^ 0x1849405));
  unsigned int v130 = *(_DWORD *)&v108[4 * (((v286 ^ 0x35C48CD5u) >> 16) ^ 0xFE)] ^ ((((v286 ^ 0x35C48CD5u) >> 16) ^ 0xD3)
                                                                                       + 412234942
                                                                                       + ((2
                                                                                         * (((v286 ^ 0x35C48CD5u) >> 16) ^ 0xD3)
                                                                                         + 88) & 0x122 ^ 0xFE7B6BFF));
  int v131 = *(_DWORD *)(v114 + 4 * (v87 ^ 0xC5u));
  unsigned int v132 = (v129 - ((2 * v129) & 0xE1D7A238) + 1894502684) ^ *(_DWORD *)&v112[4 * (v280 ^ 0x36)];
  unsigned int v133 = *(_DWORD *)&v108[4 * (BYTE2(v289) ^ 3)] ^ ((BYTE2(v289) ^ 0x2E)
                                                  + 412234942
                                                  + ((2 * (BYTE2(v289) ^ 0x2E) + 88) & 0x122 ^ 0xFE7B6BFF));
  LODWORD(v41) = (v133 - ((2 * v133) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v110[4 * (HIBYTE(v272) ^ 0x8B)];
  unsigned int v287 = HIBYTE(v289) ^ 0xE1;
  unsigned int v281 = v132 - ((2 * v132) & 0x8CA253B2);
  int v290 = v41 - ((2 * v41) & 0xE1D7A238);
  int v134 = *(_DWORD *)(v29 - 152) ^ 0x77923FE1;
  unsigned int v135 = *(_DWORD *)&v110[4 * (BYTE1(v134) ^ 0x20)] ^ ((BYTE2(v134) ^ 0xD7)
                                                     + 412234942
                                                     + ((2 * (BYTE2(v134) ^ 0xD7) + 88) & 0x122 ^ 0xFE7B6BFF)) ^ *(_DWORD *)&v108[4 * (BYTE2(v134) ^ 0xFA)] ^ (181304767 * v131 - ((362609534 * v131 + 504259772) & 0x8CA253B2) - 715629513);
  LODWORD(v54) = (v130 - ((2 * v130) & 0xE1D7A238) + 1894502684) ^ *(_DWORD *)&v112[4 * BYTE3(v37)] ^ (181304767 * *(_DWORD *)(v114 + 4 * (v255 ^ 0x99u)) - 1895353762);
  unsigned int v223 = v272 ^ 0xA3;
  int v258 = v54 - ((2 * v54) & 0x8CA253B2);
  unsigned int v273 = v135 - ((2 * v135) & 0xE1D7A238);
  LODWORD(v54) = v270 ^ 0xCB;
  int v136 = *(_DWORD *)(v29 - 120);
  unsigned int v243 = BYTE1(v136) ^ 0xF5;
  unsigned int v253 = v56 ^ 0x2BEAE26B;
  int v137 = *(_DWORD *)&v108[4 * (((v56 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v56 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                      + 412234941
                                                                                      - ((2
                                                                                        * (((v56 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                        + 25990232) & 0x1849522)) ^ (181304767 * *(_DWORD *)(v114 + 4 * (v56 ^ 0x1Eu)) - 1895353762);
  unsigned int v138 = (v137 - ((2 * v137) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v110[4 * (BYTE1(v56) ^ 8)];
  unsigned int v139 = *(_DWORD *)&v108[4 * (v277 ^ 0xB4)] ^ ((v277 ^ 0x99)
                                              + 412234942
                                              + ((2 * (v277 ^ 0x99) + 88) & 0x122 ^ 0xFE7B6BFF));
  LODWORD(v55) = *(_DWORD *)(v114 + 4 * (v245 ^ 0x55u));
  unsigned int v278 = v138 - ((2 * v138) & 0xE1D7A238);
  int v227 = BYTE2(v136);
  unsigned int v271 = (BYTE2(v136) ^ 0xA7) + 412234942 + ((2 * (BYTE2(v136) ^ 0xA7) + 88) & 0x122 ^ 0xFE7B6BFF);
  unsigned int v246 = v283 ^ 0x4B;
  unsigned int v140 = (v139 - ((2 * v139) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v110[4 * v54] ^ (181304767 * *(_DWORD *)(v114 + 4 * (v292 ^ 0x99u)) - 1895353762);
  unsigned int v141 = *(_DWORD *)(v29 - 184);
  unsigned int v284 = v140 - ((2 * v140) & 0xE1D7A238);
  int v142 = ((~(362609534 * v55 + 504259772) | 0x1E285DC7) + 181304767 * v55 - 851077) ^ ((BYTE2(v141) ^ 0xBA)
                                                                                     + 412234942
                                                                                     + ((2 * (BYTE2(v141) ^ 0xBA) + 88) & 0x122 ^ 0xFE7B6BFF)) ^ *(_DWORD *)&v112[4 * (HIBYTE(v141) ^ 0x2F)] ^ *(_DWORD *)&v108[4 * (BYTE2(v141) ^ 0x97)];
  int v228 = v142 - ((2 * v142) & 0x8CA253B2);
  int v143 = BYTE2(*(_DWORD *)(v29 - 132));
  unsigned int v144 = *(_DWORD *)&v108[4 * (v143 ^ 0xA8)] ^ ((v143 ^ 0x85)
                                              + 412234942
                                              + ((2 * (v143 ^ 0x85) + 88) & 0x122 ^ 0xFE7B6BFF));
  LODWORD(v51) = *(_DWORD *)(v29 - 192);
  unsigned int v145 = *(_DWORD *)&v108[4 * (BYTE2(v51) ^ 0x56)] ^ ((BYTE2(v51) ^ 0x7B)
                                                    + 412234942
                                                    + ((2 * (BYTE2(v51) ^ 0x7B) + 88) & 0x122 ^ 0xFE7B6BFF));
  LODWORD(v55) = v145 - ((2 * v145) & 0xE1D7A238);
  int v146 = *(_DWORD *)(v114 + 4 * (v240 ^ 0xFBu));
  unsigned int v147 = (v144 - ((2 * v144) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v110[4 * (HIBYTE(v232) ^ 0xF9)] ^ (181304767 * *(_DWORD *)(v114 + 4 * (v232 ^ 0xF2u)) - 1895353762);
  LODWORD(v37) = (181304767 * v146 - ((362609534 * v146 + 504259772) & 0x8CA253B2) - 715629513) ^ *(_DWORD *)&v110[4 * (BYTE1(v240) ^ 0xEF)];
  LODWORD(a22) = v147 - ((2 * v147) & 0xE1D7A238);
  LODWORD(v226) = v37 - ((2 * v37) & 0xE1D7A238);
  int v148 = (v55 + 1894502684) ^ *(_DWORD *)&v112[4 * (BYTE3(v51) ^ 0xD9)] ^ (181304767
                                                                         * *(_DWORD *)(v114
                                                                                     + 4
                                                                                     * (v51 ^ 0x79u))
                                                                         - 1895353762);
  LODWORD(v55) = *(_DWORD *)&v108[4 * (v260 ^ 0x86)] ^ ((v260 ^ 0xAB)
                                                      + 412234942
                                                      + ((2 * (((v260 ^ 0xAB) + 44) & 0x93 ^ (v260 ^ 0xAB | 0xFFFFFFFD))) ^ 0x1849405));
  LODWORD(v55) = (v55 - ((2 * v55) & 0xE1D7A238) + 1894502684) ^ *(_DWORD *)&v112[4 * v275];
  unsigned int v222 = v264 ^ 0xEE;
  int v265 = v55 - ((2 * v55) & 0x8CA253B2);
  int v261 = v148 - ((2 * v148) & 0x8CA253B2);
  unsigned int v293 = (v269 ^ 0x65) + 412234942 + ((2 * (v269 ^ 0x65) + 88) & 0x122 ^ 0xFE7B6BFF);
  unsigned int v149 = *(_DWORD *)&v108[4 * (v230 ^ 0x8B)] ^ ((v230 ^ 0xA6)
                                              + 412234942
                                              + ((2 * (v230 ^ 0xA6) + 88) & 0x122 ^ 0xFE7B6BFF));
  int v231 = BYTE2(*(_DWORD *)(v29 - 200));
  unsigned int v276 = (v231 ^ 0x8F) + 412234942 + ((2 * (v231 ^ 0x8F) + 88) & 0x122 ^ 0xFE7B6BFF);
  unsigned int v150 = v237 ^ 0x22;
  unsigned int v151 = *(_DWORD *)&v108[4 * (BYTE2(*(_DWORD *)(v29 - 208)) ^ 0xE8)] ^ ((BYTE2(*(_DWORD *)(v29 - 208)) ^ 0xC5)
                                                                                        + 412234942
                                                                                        + ((2
                                                                                          * (BYTE2(*(_DWORD *)(v29 - 208)) ^ 0xC5)
                                                                                          + 88) & 0x122 ^ 0xFE7B6BFF));
  unsigned int v152 = (181304767 * *(_DWORD *)(v114 + 4 * (*(_DWORD *)(v29 - 208) ^ 0xCAu)) - 1895353762) ^ *(_DWORD *)&v112[4 * (HIBYTE(*(_DWORD *)(v29 - 208)) ^ 0x8E)] ^ (v151 - ((2 * v151) & 0xE1D7A238) + 1894502684);
  LODWORD(v51) = (181304767 * *(_DWORD *)(v114 + 4 * (v233 ^ 0xDBu)) - 1895353762) ^ (((v233 ^ 0x44039AAAu) >> 16) + 412234941 - ((2 * ((v233 ^ 0x44039AAAu) >> 16) + 25990232) & 0x1849522)) ^ *(_DWORD *)&v108[4 * (((v233 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  unsigned int v238 = v152 - ((2 * v152) & 0x8CA253B2);
  int v153 = (v51 - ((2 * v51) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v110[4
                                                                        * (((unsigned __int16)(v102 ^ v97) >> 8) ^ 0xC0)];
  unsigned int v154 = *(_DWORD *)&v112[4 * v150] ^ (181304767 * *(_DWORD *)(v114 + 4 * (v250 ^ 0xFEu)) - 1895353762) ^ (v149 - ((2 * v149) & 0xE1D7A238) + 1894502684);
  int v251 = v153 - ((2 * v153) & 0xE1D7A238);
  unsigned int v234 = v154 - ((2 * v154) & 0x8CA253B2);
  int v155 = 181304767 * *(_DWORD *)(v114 + 4 * (v304 ^ 0xECu));
  unsigned int v156 = *(_DWORD *)&v108[4 * (v337 ^ 0x32)] ^ ((v337 ^ 0x1F)
                                              + 412234942
                                              + ((2 * (v337 ^ 0x1F) + 88) & 0x122 ^ 0xFE7B6BFF));
  LODWORD(v55) = 181304767 * *(_DWORD *)(v114 + 4 * (v322 ^ 0xE6u));
  unsigned int v157 = *(_DWORD *)&v112[4 * (HIBYTE(v304) ^ 0xCA)] ^ ((BYTE2(v304) ^ 0x2F)
                                                      + 412234942
                                                      + ((2 * (BYTE2(v304) ^ 0x2F) + 88) & 0x122 ^ 0xFE7B6BFF)) ^ *(_DWORD *)&v108[4 * (BYTE2(v304) ^ 2)] ^ (v155 - 2 * ((v155 + 252129886) & 0x70EBD11D ^ v155 & 1) - 851078);
  unsigned int v158 = (v156 - ((2 * v156) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v110[4 * (v353 ^ 0x8C)] ^ (181304767
                                                                                                * *(_DWORD *)(v114 + 4 * (v340 ^ 0xD9u))
                                                                                                - 1895353762);
  int v159 = *(_DWORD *)&v112[4 * ((v322 ^ 0x49A657C7u) >> 24)] ^ ((((v322 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                             + 412234942
                                                             + ((2
                                                               * (((v322 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                               + 88) & 0x122 ^ 0xFE7B6BFF)) ^ *(_DWORD *)&v108[4 * (((v322 ^ 0x49A657C7u) >> 16) ^ 0x18)] ^ (v55 - 2 * ((v55 + 252129886) & 0x70EBD11D ^ v55 & 1) - 851078);
  unsigned int v160 = *(_DWORD *)&v108[4 * (((*(_DWORD *)(v29 - 168) ^ 0xEFD69E2B) >> 16) ^ 0x2D)] ^ (((*(_DWORD *)(v29 - 168) ^ 0xEFD69E2B) >> 16) + 412234942 + ((2 * ((*(_DWORD *)(v29 - 168) ^ 0xEFD69E2B) >> 16) + 88) & 0x122 ^ 0xFE7B6BFF));
  unsigned int v354 = (v157 - ((2 * v157) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v110[4 * (BYTE1(v304) ^ 0x2E)];
  unsigned int v341 = v158 - ((2 * v158) & 0xE1D7A238);
  unsigned int v219 = BYTE1(v322) ^ 0xB9;
  unsigned int v161 = (v160 - ((2 * v160) & 0xE1D7A238) + 1894502684) ^ *(_DWORD *)&v112[4
                                                                          * ((*(_DWORD *)(v29 - 168) ^ 0xEFD69E2B) >> 24)] ^ (181304767 * *(_DWORD *)(v114 + 4 * (*(_DWORD *)(v29 - 168) ^ 0xBBu)) - 1895353762);
  int v338 = v159 - ((2 * v159) & 0x8CA253B2);
  unsigned int v305 = v161 - ((2 * v161) & 0x8CA253B2);
  unsigned int v162 = *(_DWORD *)&v108[4 * (v319 ^ 0xC1)] ^ ((v319 ^ 0xEC)
                                              + 412234942
                                              + ((2 * (v319 ^ 0xEC) + 88) & 0x122 ^ 0xFE7B6BFF));
  unsigned int v163 = (v162 - ((2 * v162) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v110[4
                                                                          * ((v317 - ((2 * v313) & 0x166) + 179) ^ 0x54)];
  unsigned int v164 = *(_DWORD *)(v29 - 144) ^ 0x12;
  int v165 = v163 ^ (181304767 * *(_DWORD *)(v114 + 4 * (v343 ^ 0xE2u)) - 1895353762);
  unsigned int v314 = BYTE1(v332) ^ 0x77;
  unsigned int v166 = (181304767 * *(_DWORD *)(v114 + 4 * v164)
        - ((362609534 * *(_DWORD *)(v114 + 4 * v164) + 504259772) & 0xE1D7A238)
        - 851078) ^ *(_DWORD *)&v112[4 * (HIBYTE(v329) ^ 0x4A)];
  unsigned int v344 = v165 - ((2 * v165) & 0xE1D7A238);
  unsigned int v217 = v166 - ((2 * v166) & 0x8CA253B2);
  unsigned int v318 = v309 ^ 0xEEA2BFA8;
  unsigned int v167 = *(_DWORD *)&v108[4 * (((v309 ^ 0xEEA2BFA8) >> 16) ^ 0x86)] ^ ((((v309 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                      + 412234942
                                                                                      + ((2
                                                                                        * (((v309 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                        + 88) & 0x122 ^ 0xFE7B6BFF));
  unsigned int v168 = (181304767 * *(_DWORD *)(v114 + 4 * (v309 ^ 0x68u)) - 1895353762) ^ *(_DWORD *)&v110[4 * (BYTE1(v309) ^ 0x55)] ^ (v167 - ((2 * v167) & 0x8CA253B2) + 1179724249);
  unsigned int v310 = v332 ^ 0x231B9DB5;
  int v169 = ((v332 ^ 0x231B9DB5u) >> 16);
  unsigned int v323 = (v169 ^ 0xC1) + 412234942 + ((2 * (v169 ^ 0xC1) + 88) & 0x122 ^ 0xFE7B6BFF);
  HIDWORD(v215) = v168 - ((2 * v168) & 0xE1D7A238);
  LODWORD(v54) = BYTE2(v329);
  unsigned int v320 = (BYTE2(v329) ^ 0xBE) + 412234942 + ((2 * (BYTE2(v329) ^ 0xBE) + 88) & 0x122 ^ 0xFE7B6BFF);
  LODWORD(v51) = *(_DWORD *)(v114 + 4 * v223);
  int v170 = *(_DWORD *)(v114 + 4 * (v332 ^ 0x75u));
  int v171 = *(_DWORD *)(v114 + 4 * (v356 ^ 0x74u));
  int v172 = *(_DWORD *)(v114 + 4 * (v364 ^ 0x2Au));
  int v336 = 181304767 * *(_DWORD *)(v114 + 4 * (v98 ^ 0x60u)) - 1895353762;
  int v357 = 181304767 * *(_DWORD *)(v114 + 4 * (v360 ^ 0xFBu)) - 1895353762;
  LODWORD(v224) = 181304767 * *(_DWORD *)(v114 + 4 * (*(_DWORD *)(v29 - 124) ^ 0xB8u)) - 1895353762;
  HIDWORD(a24) = 181304767 * *(_DWORD *)(v114 + 4 * (v104 ^ 0xACu)) - 1895353762;
  int v330 = 181304767 * *(_DWORD *)(v114 + 4 * (v347 ^ 0xF0u)) - 1895353762;
  int v361 = 181304767 * *(_DWORD *)(v114 + 4 * (*(_DWORD *)(v29 - 120) ^ 0x57u)) - 1895353762;
  HIDWORD(v216) = 181304767 * *(_DWORD *)(v114 + 4 * (v348 ^ 0xBCu)) - 1895353762;
  int v333 = 181304767 * *(_DWORD *)(v114 + 4 * (*(_DWORD *)(v29 - 200) ^ 0x78u)) - 1895353762;
  HIDWORD(v214) = 181304767 * v51 - 1895353762;
  LODWORD(v215) = 181304767 * v170 - 1895353762;
  LODWORD(v216) = 181304767 * *(_DWORD *)(v114 + 4 * (*(unsigned __int8 *)(v29 - 128) ^ 0xCFu)) - 1895353762;
  unsigned int v173 = (181304767 * v171 - ((362609534 * v171 + 504259772) & 0xE1D7A238) - 851078) ^ *(_DWORD *)&v112[4 * (v368 ^ 0x7B)];
  unsigned int v174 = v362;
  int v175 = *(_DWORD *)&v108[4 * (BYTE2(v362) ^ 0xF6)] ^ ((BYTE2(v362) ^ 0xDB)
                                                     + 412234941
                                                     - ((2 * (BYTE2(v362) ^ 0xDB) + 25990232) & 0x1849522)) ^ (181304767 * *(_DWORD *)(v114 + 4 * (v362 ^ 0x16u)) - 1895353762);
  unsigned int v176 = (v175 - ((2 * v175) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v110[4 * (BYTE1(v362) ^ 0x2C)];
  unsigned int v177 = *(_DWORD *)&v108[4 * (((*(_DWORD *)(v29 - 128) ^ 0xF66FF6u) >> 16) ^ 0x3C)] ^ ((((*(_DWORD *)(v29 - 128) ^ 0xF66FF6u) >> 16) ^ 0x11) + 412234942 + ((2 * (((*(_DWORD *)(v29 - 128) ^ 0xF66FF6u) >> 16) ^ 0x11) + 88) & 0x122 ^ 0xFE7B6BFF));
  LODWORD(v55) = ((BYTE2(v364) ^ 0x37) + 412234942 + ((2 * (BYTE2(v364) ^ 0x37) + 88) & 0x122 ^ 0xFE7B6BFF)) ^ *(_DWORD *)&v108[4 * (BYTE2(v364) ^ 0x1A)];
  HIDWORD(v220) = *(_DWORD *)&v108[4 * (BYTE2(v97) ^ 0x61)];
  int v369 = *(_DWORD *)&v108[4 * (v227 ^ 0x8A)];
  unsigned int v178 = v173 - ((2 * v173) & 0x8CA253B2);
  int v308 = *(_DWORD *)&v108[4 * (v269 ^ 0x48)];
  LODWORD(v221) = *(_DWORD *)&v108[4 * (v231 ^ 0xA2)];
  HIDWORD(v229) = *(_DWORD *)&v108[4 * (v169 ^ 0xEC)];
  BYTE1(v41) = BYTE1(v364);
  int v179 = (((181304767 * v172 - 1895353762) ^ v55)
        - ((2 * ((181304767 * v172 - 1895353762) ^ v55)) & 0xE1D7A238)
        + 1894502684) ^ *(_DWORD *)&v112[4 * (HIBYTE(v364) ^ 0xF9)];
  HIDWORD(v226) = *(_DWORD *)&v108[4 * (v54 ^ 0x93)];
  LODWORD(v51) = *(_DWORD *)(v29 - 248);
  *(_DWORD *)(v29 - 248) = *(_DWORD *)&v108[4 * (v51 ^ 0x1A)];
  LODWORD(v54) = ((v366 >> 15) & 0x58 ^ 0x48) + (v51 ^ 0x4C64A1B);
  int v367 = v54 + 332130962 + ((2 * v54) & 0x122 ^ 0xFE7B6BFF);
  LODWORD(v220) = *(_DWORD *)&v110[4 * (BYTE1(v98) ^ 0xB0)];
  int v312 = *(_DWORD *)&v110[4 * (v225 ^ 0x8E)];
  unsigned int v180 = v176 - ((2 * v176) & 0xE1D7A238);
  int v363 = *(_DWORD *)&v110[4 * (BYTE1(*(_DWORD *)(v29 - 124)) ^ 0x85)];
  HIDWORD(v224) = *(_DWORD *)&v110[4 * (BYTE1(*(_DWORD *)(v29 - 176)) ^ 0xBD)];
  *(_DWORD *)(v29 - 176) = *(_DWORD *)&v110[4 * (BYTE1(v104) ^ 0xB4)];
  int v249 = *(_DWORD *)&v110[4 * (v358 ^ 0x1A)];
  LODWORD(v214) = *(_DWORD *)&v110[4 * (HIBYTE(v255) ^ 0x14)];
  int v365 = *(_DWORD *)&v110[4 * v243];
  *(_DWORD *)(v29 - 184) = *(_DWORD *)&v110[4 * (BYTE1(*(_DWORD *)(v29 - 184)) ^ 0xD6)];
  int v359 = *(_DWORD *)&v110[4 * v222];
  int v256 = *(_DWORD *)&v110[4 * (BYTE1(*(_DWORD *)(v29 - 192)) ^ 0xD7)];
  unsigned int v181 = *(_DWORD *)(v29 - 200);
  HIDWORD(v213) = *(_DWORD *)&v110[4 * (BYTE1(v181) ^ 0x76)];
  int v182 = *(_DWORD *)&v110[4 * (BYTE1(*(_DWORD *)(v29 - 208)) ^ 0x16)];
  LODWORD(v213) = *(_DWORD *)&v110[4 * (v349 ^ 0xBE)];
  *(_DWORD *)(v29 - 192) = *(_DWORD *)&v110[4 * v219];
  *(_DWORD *)(v29 - 168) = *(_DWORD *)&v110[4 * (BYTE1(*(_DWORD *)(v29 - 168)) ^ 0x1E)];
  HIDWORD(v221) = *(_DWORD *)&v110[4 * v314];
  int v315 = *(_DWORD *)&v110[4 * (BYTE1(*(_DWORD *)(v29 - 144)) ^ 0x8F)];
  *(_DWORD *)(v29 - 144) = *(_DWORD *)&v110[4 * (*(_DWORD *)(v29 - 240) ^ 0x84)];
  int v244 = *(_DWORD *)&v110[4 * (BYTE1(v41) ^ 0x2E)];
  int v183 = *(_DWORD *)&v110[4 * (v371 ^ 0xC8)];
  HIDWORD(v218) = v327 + 1179724249;
  unsigned int v325 = v324 + 1179724249;
  *(_DWORD *)(v29 - 200) = v299 + 1179724249;
  unsigned int v370 = v296 + 1179724249;
  *(_DWORD *)(v29 - 208) = v294 + 1179724249;
  unsigned int v328 = v281 + 1179724249;
  HIDWORD(v212) = v258 + 1179724249;
  *(_DWORD *)(v29 - 240) = v228 + 1179724249;
  int v300 = v265 + 1179724249;
  LODWORD(v229) = v261 + 1179724249;
  LODWORD(v110) = v238 + 1179724249;
  LODWORD(v211) = v234 + 1179724249;
  int v282 = v338 + 1179724249;
  unsigned int v266 = v305 + 1179724249;
  unsigned int v306 = v217 + 1179724249;
  unsigned int v297 = v179 - ((2 * v179) & 0x8CA253B2) + 1179724249;
  HIDWORD(v211) = *(_DWORD *)&v112[4 * (HIBYTE(v97) ^ 0xB2)];
  int v262 = *(_DWORD *)&v112[4 * (*(_DWORD *)(v29 - 224) ^ 7)];
  LODWORD(v212) = *(_DWORD *)&v112[4 * v287];
  LODWORD(v218) = *(_DWORD *)&v112[4 * HIBYTE(*(_DWORD *)(v29 - 152))];
  unsigned int v184 = HIBYTE(v253);
  int v254 = *(_DWORD *)&v112[4 * (HIBYTE(*(_DWORD *)(v29 - 120)) ^ 0xB8)];
  *(_DWORD *)(v29 - 224) = *(_DWORD *)&v112[4 * v184];
  int v259 = *(_DWORD *)&v112[4 * v246];
  unsigned int v185 = v183 ^ (v177 - ((2 * v177) & 0x8CA253B2) + 1179724249);
  int v239 = *(_DWORD *)&v112[4 * (HIBYTE(*(_DWORD *)(v29 - 132)) ^ 0x89)];
  int v235 = *(_DWORD *)&v112[4 * (HIBYTE(v240) ^ 0xE8)];
  int v186 = *(_DWORD *)&v112[4 * (HIBYTE(v181) ^ 0xA6)];
  int v187 = *(_DWORD *)&v112[4 * ((v102 ^ v97 ^ 0x44039AAA) >> 24)];
  int v288 = *(_DWORD *)&v112[4 * (*(_DWORD *)(v29 - 232) ^ 0xAA)];
  int v188 = *(_DWORD *)&v112[4 * HIBYTE(v310)];
  *(_DWORD *)(v29 - 232) = *(_DWORD *)&v112[4 * (*(_DWORD *)(v29 - 256) ^ 0x38)];
  int v189 = *(_DWORD *)&v112[4 * HIBYTE(v318)];
  int v241 = *(_DWORD *)&v112[4 * (HIBYTE(v174) ^ 0x7B)];
  HIDWORD(a9) = *(_DWORD *)&v112[4 * HIBYTE(*(_DWORD *)(v29 - 128))];
  uint64_t v190 = v345 + 1894502684;
  unsigned int v247 = v303 + 1894502684;
  uint64_t v191 = (v290 + 1894502684);
  uint64_t v192 = v273 + 1894502684;
  *(_DWORD *)(v29 - 256) = v278 + 1894502684;
  unsigned int v267 = v284 + 1894502684;
  uint64_t v193 = (v251 + 1894502684);
  *(_DWORD *)(v29 - 152) = v341 + 1894502684;
  uint64_t v194 = v344 + 1894502684;
  uint64_t v195 = (HIDWORD(v215) + 1894502684);
  unsigned int v196 = v180 + 1894502684;
  uint64_t v197 = v185 - ((2 * v185) & 0xE1D7A238) + 1894502684;
  int v198 = v355 ^ v354 ^ 0x6285F181;
  LODWORD(v110) = v110 ^ v182 ^ v198;
  LODWORD(v114) = *(_DWORD *)(v29 - 160);
  int v199 = (char *)*(&off_99820 + (int)(v114 ^ 0xB7)) - 4;
  int v200 = (char *)*(&off_99820 + (int)v114 - 86) - 4;
  int v201 = (char *)*(&off_99820 + (int)(v114 ^ 0x99)) - 12;
  unsigned int v202 = (char *)*(&off_99820 + (int)(v114 ^ 0xC3)) - 4;
  unsigned int v203 = (v200[*(unsigned __int8 *)(v29 - 109) ^ 0x41] ^ 0x34) & 0xFF00FFFF | (((v201[*(unsigned __int8 *)(v29 - 111) ^ 0x40] + 89) ^ 0x5A) << 16) | ((v202[*(unsigned __int8 *)(v29 - 110) ^ 0xBBLL] ^ 0x95) << 8) | ((v199[*(unsigned __int8 *)(v29 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v29 - 112) - ((2 * *(unsigned __int8 *)(v29 - 112)) & 0x40) + 32) ^ 0x84) << 24);
  v346 = v202;
  unsigned int v204 = (v200[*(unsigned __int8 *)(v29 - 105) ^ 0xE4] ^ 2) & 0xFF00FFFF | ((v199[*(unsigned __int8 *)(v29 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v29 - 108) - ((2 * *(unsigned __int8 *)(v29 - 108)) & 0x40) + 32) ^ 0xFFFFFFE1) << 24) | (((v201[*(unsigned __int8 *)(v29 - 107) ^ 0x27] + 89) ^ 0x96) << 16) | ((v202[*(unsigned __int8 *)(v29 - 106) ^ 9] ^ 0x90) << 8);
  unsigned int v205 = (v200[*(unsigned __int8 *)(v29 - 101) ^ 0xF2] ^ 0xBB) & 0xFF00FFFF | ((v199[*(unsigned __int8 *)(v29 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v29 - 104) - ((2 * *(unsigned __int8 *)(v29 - 104)) & 0x40) + 32) ^ 0xE0) << 24) | ((v202[*(unsigned __int8 *)(v29 - 102) ^ 0xBELL] ^ 0x37) << 8) & 0xFF00FFFF | (((v201[*(unsigned __int8 *)(v29 - 103) ^ 0xE9] + 89) ^ 0x8A) << 16);
  unsigned int v206 = v110 ^ 0x2497E332;
  if ((v110 & 0x80) != 0) {
    int v207 = -128;
  }
  else {
    int v207 = 128;
  }
  uint64_t v208 = v207 + v206;
  *(_DWORD *)(v29 - 120) = (v200[*(unsigned __int8 *)(v29 - 97) ^ 0x74] ^ 0x93 | (((v201[*(unsigned __int8 *)(v29 - 99) ^ 0xF3] + 89) ^ 2) << 16) | ((v202[*(unsigned __int8 *)(v29 - 98) ^ 0x20] ^ 0x7F) << 8) | ((v199[*(unsigned __int8 *)(v29 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v29 - 100) - ((2 * *(unsigned __int8 *)(v29 - 100)) & 0x40) + 32) ^ 0x85) << 24)) ^ 0x3C2DB5C3;
  *(_DWORD *)(v29 - 124) = v203 ^ 0x7DDC3E62;
  *(_DWORD *)(v29 - 128) = v204 ^ 0x35732670;
  *(_DWORD *)(v29 - 132) = v205 ^ 0xCFFC024C;
  HIDWORD(v342) = v211 ^ v213;
  LODWORD(v342) = v186 ^ v276 ^ HIDWORD(v213) ^ v221 ^ v333;
  HIDWORD(v339) = v193 ^ v187;
  LODWORD(v339) = v336 ^ v220 ^ HIDWORD(v218);
  HIDWORD(v335) = v325 ^ v312;
  LODWORD(v335) = HIDWORD(v211) ^ v334 ^ HIDWORD(v220) ^ v190;
  HIDWORD(v331) = HIDWORD(v212) ^ v214;
  LODWORD(v331) = v328 ^ v249 ^ v330;
  HIDWORD(v326) = v191 ^ v212 ^ HIDWORD(v214);
  LODWORD(v326) = v192 ^ v218;
  HIDWORD(v321) = HIDWORD(v221) ^ v188 ^ v323 ^ HIDWORD(v229) ^ v215;
  LODWORD(v321) = v315 ^ v320 ^ HIDWORD(v226) ^ v306;
  HIDWORD(v316) = v195 ^ v189;
  LODWORD(v316) = v194 ^ *(_DWORD *)(v29 - 232);
  HIDWORD(v311) = v229 ^ v256;
  LODWORD(v311) = v235 ^ v293 ^ v308 ^ (v226 + 1894502684);
  HIDWORD(v307) = (a22 + 1894502684) ^ v239;
  LODWORD(v307) = HIDWORD(v216) ^ v359 ^ v300;
  HIDWORD(v301) = v216 ^ HIDWORD(a9) ^ v197;
  LODWORD(v301) = v297 ^ v244;
  HIDWORD(v295) = v196 ^ v241;
  LODWORD(v295) = *(_DWORD *)(v29 - 144) ^ v367 ^ *(_DWORD *)(v29 - 248) ^ (v178 + 1179724249);
  HIDWORD(v291) = *(_DWORD *)(v29 - 152) ^ v288;
  LODWORD(v291) = v282 ^ *(_DWORD *)(v29 - 192);
  HIDWORD(v285) = v266 ^ *(_DWORD *)(v29 - 168);
  LODWORD(v285) = v370 ^ HIDWORD(v224);
  HIDWORD(v279) = *(_DWORD *)(v29 - 200) ^ v363 ^ v224;
  LODWORD(v279) = HIDWORD(a24) ^ *(_DWORD *)(v29 - 176) ^ *(_DWORD *)(v29 - 208);
  HIDWORD(v274) = v357 ^ v262 ^ v247;
  LODWORD(v274) = *(_DWORD *)(v29 - 240) ^ *(_DWORD *)(v29 - 184);
  HIDWORD(v268) = v365 ^ v271 ^ v254 ^ v369 ^ v361;
  LODWORD(v268) = v267 ^ v259;
  HIDWORD(v263) = *(_DWORD *)(v29 - 256) ^ *(_DWORD *)(v29 - 224);
  LODWORD(v263) = *(_DWORD *)(v29 - 216) + 419467585;
  HIDWORD(v257) = v208 ^ v198;
  int v209 = *(_DWORD *)(v29 - 116);
  LODWORD(v257) = v209 ^ 0x4F9;
  HIDWORD(v252) = v209 ^ 0x450;
  LODWORD(v252) = v209 ^ 0x42F;
  HIDWORD(v248) = v209 ^ 0x4E0;
  LODWORD(v248) = v209 ^ 0x478;
  HIDWORD(v242) = v209 ^ 0x421;
  LODWORD(v242) = v209 ^ 0x45A;
  HIDWORD(v236) = v209 ^ 0x431;
  LODWORD(v236) = v209 ^ 0x4E6;
  HIDWORD(a24) = v209 ^ 0x424;
  return sub_3DA14(v197, v208, v193, v190, v192, v195, v191, v194, a9, v211, v212, v213, v214, v215, v216, v218, v220, v221, v224,
           v226,
           v229,
           a22,
           a23,
           a24,
           v236,
           v242,
           v248,
           v252,
           v257,
           v263,
           v268,
           v274,
           v279,
           v285,
           v291,
           v295,
           v301,
           v307,
           v311,
           v316,
           v321,
           v326,
           v331,
           v335,
           v339,
           v342,
           v346,
           v201,
           v200,
           v199,
           v350,
           v351,
           v352);
}

uint64_t sub_3DA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v65 = v61 & 0xFFFFFFF2 ^ 0xF4FAD41D;
  *(void *)(v63 - 168) = v65;
  int v66 = *(_DWORD *)(v63 - 116);
  unsigned __int8 v67 = *(unsigned char *)(a48 + (((*(unsigned char *)(v63 - 116) - 122) ^ *(unsigned char *)(v64 + v65)) ^ 0x38u)) + 89;
  uint64_t v68 = v61 & 0xFFFFFFFE ^ 0xF4FAD415;
  *(void *)(v63 - 144) = v68;
  uint64_t v69 = *(unsigned __int8 *)(v64 + v68) ^ 0x57;
  uint64_t v70 = v61 & 0xFFFFFFF5 ^ 0xF4FAD41F;
  *(void *)(v63 - 152) = v70;
  int v71 = ((*(unsigned char *)(a48 + v69) + 89) ^ 0xF6) << 16;
  int v72 = *(unsigned __int8 *)(a47 + (*(unsigned __int8 *)(v64 + v70) ^ 0xB6));
  uint64_t v73 = v61 & 0xFFFFFFFB ^ 0xF4FAD415;
  *(void *)(v63 - 176) = v73;
  uint64_t v74 = v61 & 0xFFFFFFF8 ^ 0xF4FAD417;
  LODWORD(v69) = *(unsigned __int8 *)(a50 + (*(unsigned __int8 *)(v64 + v73) ^ 0x9ALL)) ^ (*(unsigned __int8 *)(v64 + v73)
                                                                                         + (~(2
                                                                                            * *(unsigned __int8 *)(v64 + v73)) | 0xBF)
                                                                                         + 33);
  uint64_t v75 = *(unsigned __int8 *)(v64 + v74) ^ 0xD6;
  uint64_t v76 = v61 & 0xFFFFFFFD ^ 0xF4FAD417;
  *(void *)(v63 - 216) = v74;
  *(void *)(v63 - 208) = v76;
  LODWORD(v69) = *(unsigned __int8 *)(a49 + v75) ^ 0x51 | ((v69 ^ 0xFFFFFFCF) << 24);
  LODWORD(v75) = *(unsigned __int8 *)(a47 + *(unsigned __int8 *)(v64 + v76)) ^ 8;
  uint64_t v77 = v61 & 0xFFFFFFFC ^ 0xF4FAD417;
  *(void *)(v63 - 184) = v77;
  int v78 = v71 | (v75 << 8);
  LODWORD(v75) = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v64 + v77) ^ 0x74));
  uint64_t v79 = v61 & 0xFFFFFFF3 ^ 0xF4FAD41D;
  *(void *)(v63 - 160) = v79;
  int v80 = v78 | v75 ^ 0x93;
  LODWORD(v75) = *(unsigned __int8 *)(a50 + (*(unsigned __int8 *)(v64 + v79) ^ 0x6ELL)) ^ (*(unsigned __int8 *)(v64 + v79)
                                                                                         - ((2
                                                                                           * *(unsigned __int8 *)(v64 + v79)) & 0x40)
                                                                                         + 32) ^ 0x51;
  uint64_t v81 = v61 ^ 0xF4FAD415;
  *(void *)(v63 - 200) = v81;
  int v82 = ((v67 ^ 2) << 16) | (v75 << 24);
  uint64_t v83 = *(unsigned __int8 *)(v64 + v81);
  LODWORD(v81) = *(unsigned __int8 *)(a50 + (v83 ^ 0x15));
  uint64_t v84 = v61 & 0xFFFFFFF7 ^ 0xF4FAD41D;
  *(void *)(v63 - 248) = v84;
  LODWORD(v74) = v80 | ((v81 ^ (v83 - ((2 * v83) & 0x40) + 32) ^ 0xAE) << 24);
  unsigned int v85 = ((v72 ^ 0x1A) << 8) | ((*(unsigned __int8 *)(a50 + (*(unsigned __int8 *)(v64 + v84) ^ 0x46)) ^ (*(unsigned __int8 *)(v64 + v84) + (~(2 * *(unsigned __int8 *)(v64 + v84)) | 0xBF) + 33) ^ 0xFFFFFFE7) << 24);
  uint64_t v86 = v61 & 0xFFFFFFF1 ^ 0xF4FAD41F;
  *(void *)(v63 - 192) = v86;
  int v87 = *(unsigned __int8 *)(a47 + (*(unsigned __int8 *)(v64 + v86) ^ 0xD5)) ^ 0x80;
  uint64_t v88 = v61 & 0xFFFFFFFA ^ 0xF4FAD415;
  *(void *)(v63 - 224) = v88;
  int v89 = v82 | (v87 << 8);
  uint64_t v90 = v61 & 0xFFFFFFF4 ^ 0xF4FAD41F;
  *(void *)(v63 - 240) = v90;
  LOBYTE(v87) = (*(unsigned char *)(a48 + (*(unsigned __int8 *)(v64 + v88) ^ 0x9DLL)) + 89) ^ 0xF7;
  LODWORD(v81) = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v64 + v90) ^ 0xC2)) ^ 0xB6 | v85;
  uint64_t v91 = v61 & 0xFFFFFFF6 ^ 0xF4FAD41D;
  *(void *)(v63 - 256) = v91;
  uint64_t v248 = v61 & 0xFFFFFFF9 ^ 0xF4FAD417;
  LODWORD(v81) = v81 & 0xFF00FFFF | (((*(unsigned char *)(a48 + (*(unsigned __int8 *)(v64 + v91) ^ 0x3ELL)) + 89) ^ 0xDF) << 16);
  int v92 = *(unsigned __int8 *)(a47 + (*(unsigned __int8 *)(v64 + v248) ^ 0xA4));
  uint64_t v93 = v61 & 0xFFFFFFF0 ^ 0xF4FAD41F;
  *(void *)(v63 - 232) = v93;
  int v247 = v69 & 0xFF00FFFF | (v87 << 16) | ((v92 ^ 0xD0) << 8);
  int v94 = ((unsigned __int16)((v69 | (((unsigned __int16)v92 ^ 0xD0) << 8)) ^ a52) >> 8) ^ 0x4C;
  uint64_t v95 = *(void *)(v60 + 8 * a29);
  unsigned int v96 = *(_DWORD *)(v95 + 4 * (v94 ^ 0x6Du)) ^ (v94
                                                + v59
                                                - ((2 * (((v247 ^ a52) >> 8) ^ 0xB71C4C)) & 0x1F6));
  int v97 = v96 + 1808134091 - (v62 & (2 * v96));
  uint64_t v98 = *(void *)(v60 + 8 * (v66 - 944)) - 8;
  BYTE2(v85) = BYTE2(v74) ^ BYTE6(a52);
  LODWORD(v74) = v74 ^ HIDWORD(a52) ^ 0x730032AA;
  LODWORD(v88) = v97 ^ *(_DWORD *)(v98 + 4 * v74);
  int v246 = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v64 + v93) ^ 0x47)) ^ 0x93 | v89;
  unsigned int v99 = ((((unsigned __int16)(a51 ^ v246) >> 8) ^ 0x58)
       + v59
       + 1
       + ~(2 * (((unsigned __int16)(a51 ^ v246) >> 8) ^ 0x58 ^ ((a51 ^ v246) >> 8) & 4))) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(a51 ^ v246) >> 8) ^ 0x35u));
  int v100 = v88 + 711475531 - ((2 * v88) & 0x54D08296);
  uint64_t v101 = *(void *)(v60 + 8 * (v66 - 913)) - 4;
  int v102 = *(_DWORD *)(v101 + 4 * (((v81 ^ HIDWORD(a51)) >> 16) ^ 0x68u));
  HIDWORD(v104) = v102 ^ 0x463;
  LODWORD(v104) = v102 ^ 0xC790D000;
  int v103 = v104 >> 12;
  int v105 = *(_DWORD *)(v101 + 4 * BYTE2(v85));
  HIDWORD(v104) = v105 ^ 0x463;
  LODWORD(v104) = v105 ^ 0xC790D000;
  int v106 = (char *)*(&off_99820 + HIDWORD(a28)) - 4;
  int v107 = *(_DWORD *)&v106[4 * (((v247 ^ a52) >> 24) ^ 0xB7)] ^ (v104 >> 12);
  int v108 = *(_DWORD *)(v101 + 4 * (((a51 ^ v246) >> 16) ^ 0xF4u));
  HIDWORD(v104) = v108 ^ 0x463;
  LODWORD(v104) = v108 ^ 0xC790D000;
  int v109 = (v99 + 711475531 - ((2 * v99) & 0x54D08296)) ^ v107;
  int v110 = *(_DWORD *)(v98 + 4 * ((v247 ^ a52) ^ 0xFBu)) ^ ((unsigned __int16)(v81 ^ WORD2(a51)) >> 8) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v81 ^ WORD2(a51)) >> 8) ^ 0x23u)) ^ 0x63F7517E ^ (v104 >> 12);
  int v111 = v110 + 711475531 - ((2 * v110) & 0x54D08296);
  int v112 = *(_DWORD *)(v101 + 4 * (((v247 ^ a52) >> 16) ^ 0x1Cu));
  HIDWORD(v104) = v112 ^ 0x463;
  LODWORD(v104) = v112 ^ 0xC790D000;
  int v113 = *(_DWORD *)&v106[4 * (((v81 ^ HIDWORD(a51)) >> 24) ^ 0xF6)] ^ (BYTE1(v74)
                                                                                    + v59
                                                                                    - ((v74 >> 7) & 0x1F6)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v74) ^ 0x6Du)) ^ ((v104 >> 12) + 711475531 - ((2 * (v104 >> 12)) & 0x54D08296));
  int v114 = HIDWORD(a46) ^ v103 ^ *(_DWORD *)&v106[4 * (((a51 ^ v246) >> 24) ^ 0x21)] ^ v100;
  unsigned int v115 = a46 ^ *(_DWORD *)(v98 + 4 * ((a51 ^ v246) ^ 0xFAu)) ^ (v113 + 1808134091 - (v62 & (2 * v113)));
  unsigned int v116 = HIDWORD(a45) ^ *(_DWORD *)(v98 + 4 * ((v81 ^ BYTE4(a51)) ^ 0x5Fu)) ^ (v109
                                                                                                + 1808134091
                                                                                                - (v62 & (2 * v109)));
  unsigned int v117 = v114 ^ 0xF9388C2F;
  int v118 = *(_DWORD *)(v101 + 4 * ((v114 ^ 0xF9388C2F) >> 16));
  HIDWORD(v104) = v118 ^ 0x463;
  LODWORD(v104) = v118 ^ 0xC790D000;
  int v119 = v104 >> 12;
  int v120 = *(_DWORD *)(v101 + 4 * (BYTE2(v115) ^ 0xC2u));
  HIDWORD(v104) = v120 ^ 0x463;
  LODWORD(v104) = v120 ^ 0xC790D000;
  int v121 = v104 >> 12;
  unsigned int v122 = HIDWORD(a29) ^ *(_DWORD *)&v106[4 * BYTE3(v74)] ^ v111;
  LODWORD(v81) = *(_DWORD *)(v101 + 4 * (BYTE2(v116) ^ 0x66u));
  HIDWORD(v104) = v81 ^ 0x463;
  LODWORD(v104) = v81 ^ 0xC790D000;
  LODWORD(v81) = (v104 >> 12) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v122) ^ 5u)) ^ ((BYTE1(v122) ^ 0x68)
                                                                             + v59
                                                                             - 2
                                                                             * (BYTE1(v122) ^ 0x68 ^ (v122 >> 8) & 4));
  int v123 = (v119 + 1808134091 - (v62 & (2 * v119))) ^ *(_DWORD *)(v98 + 4 * (v116 ^ 0xB6u));
  LODWORD(v81) = (v81 + 1808134091 - (v62 & (2 * v81))) ^ *(_DWORD *)(v98 + 4 * (v114 ^ 0x61u));
  unsigned int v124 = (((unsigned __int16)(v114 ^ 0x8C2F) >> 8) + v59 - (((v114 ^ 0xF9388C2F) >> 7) & 0x1F6)) ^ 0xD678EAEF ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v114 ^ 0x8C2F) >> 8) ^ 0x6Du));
  unsigned int v125 = *(_DWORD *)&v106[4 * (HIBYTE(v116) ^ 0x43)] ^ 0x88721AF5;
  int v126 = v124 + v125 - 2 * (v124 & v125);
  int v127 = *(_DWORD *)(v101 + 4 * (BYTE2(v122) ^ 0xBDu));
  HIDWORD(v104) = v127 ^ 0x463;
  LODWORD(v104) = v127 ^ 0xC790D000;
  int v128 = *(_DWORD *)&v106[4 * HIBYTE(v117)] ^ (v121 + 711475531 - ((2 * v121) & 0x54D08296));
  int v129 = *(_DWORD *)&v106[4 * (HIBYTE(v122) ^ 0x42)];
  int v130 = (v128 + 1808134091 - (v62 & (2 * v128))) ^ *(_DWORD *)(v98 + 4 * (v122 ^ 0xABu));
  unsigned int v131 = v129 ^ a56 ^ *(_DWORD *)(v95 + 4 * (BYTE1(v115) ^ 0xEu)) ^ ((BYTE1(v115) ^ 0x63)
                                                                     + v59
                                                                     - ((2 * ((v115 >> 8) ^ 0xE3C263)) & 0x1F6)) ^ (v123 + 711475531 - ((2 * v123) & 0x54D08296));
  LOBYTE(v74) = BYTE1(v116) ^ 0x54;
  unsigned int v132 = a45 ^ *(_DWORD *)(v95 + 4 * (BYTE1(v116) ^ 0x39u)) ^ (v130 + v59 + 1 + ~((2 * v130) & 0x10657DF6));
  unsigned int v133 = a44 ^ *(_DWORD *)(v98 + 4 * (v115 ^ 0xADu)) ^ ((v126 ^ (v104 >> 12))
                                                                         + 1808134091
                                                                         - (v62 & (2 * (v126 ^ (v104 >> 12)))));
  int v134 = *(_DWORD *)(v101 + 4 * (BYTE2(v133) ^ 0x79u));
  int v135 = HIDWORD(a44) ^ *(_DWORD *)&v106[4 * (HIBYTE(v115) ^ 0xE3)] ^ (v81 + 711475531 - ((2 * v81) & 0x54D08296));
  HIDWORD(v104) = v134 ^ 0x463;
  LODWORD(v104) = v134 ^ 0xC790D000;
  BYTE1(v127) = BYTE1(v135) ^ 0x68;
  int v136 = ((v104 >> 12) + 711475531 - ((2 * (v104 >> 12)) & 0x54D08296)) ^ *(_DWORD *)&v106[4
                                                                                         * ((v135 ^ 0x2261685Eu) >> 24)];
  int v137 = ((BYTE1(v133) ^ 0xD0) + v59 - ((2 * ((v133 >> 8) ^ 0x679D0)) & 0x1F6)) ^ *(_DWORD *)(v95
                                                                                            + 4
                                                                                            * (BYTE1(v133) ^ 0xBDu));
  int v138 = (v137 + 1808134091 - (v62 & (2 * v137))) ^ *(_DWORD *)(v98 + 4 * (v131 ^ 0x76u));
  LODWORD(v81) = ((BYTE1(v132) ^ 0xEC) + v59 - ((2 * ((v132 >> 8) ^ 0xE5FEC)) & 0x1F6)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v132) ^ 0x81u));
  int v139 = *(_DWORD *)(v101 + 4 * (BYTE2(v132) ^ 0x5Fu));
  HIDWORD(v104) = v139 ^ 0x463;
  LODWORD(v104) = v139 ^ 0xC790D000;
  int v140 = v104 >> 12;
  HIDWORD(v104) = *(_DWORD *)(v98 + 4 * (v135 ^ 0x5Eu)) ^ 0x82D2C843;
  LODWORD(v104) = HIDWORD(v104);
  LODWORD(v81) = (v104 >> 28) ^ __ROR4__(*(_DWORD *)&v106[4 * (HIBYTE(v133) ^ 6)] ^ 0x7462B151 ^ (v81+ 711475531- ((2 * v81) & 0x54D08296)), 28);
  int v141 = (v140 + 711475531 - ((2 * v140) & 0x54D08296)) ^ *(_DWORD *)&v106[4 * (HIBYTE(v131) ^ 0xD2)];
  int v142 = *(_DWORD *)(v101 + 4 * (BYTE2(v135) ^ 0x1Bu));
  int v143 = (v141 + 1808134091 - (v62 & (2 * v141))) ^ *(_DWORD *)(v98 + 4 * (v133 ^ 0x4Cu));
  HIDWORD(v104) = v142 ^ 0x463;
  LODWORD(v104) = v142 ^ 0xC790D000;
  int v144 = v104 >> 12;
  int v145 = v136 + 1808134091 - (v62 & (2 * v136));
  int v146 = BYTE1(v131) ^ 0xC0;
  int v147 = v146 + v59 - ((2 * ((v131 >> 8) ^ 0xD2CCC0)) & 0x1F6);
  int v148 = *(_DWORD *)(v101 + 4 * (BYTE2(v131) ^ 0xCCu));
  HIDWORD(v104) = v148 ^ 0x463;
  LODWORD(v104) = v148 ^ 0xC790D000;
  int v149 = HIDWORD(a43) ^ (v104 >> 12) ^ __ROR4__(v81 ^ 0x78071371, 4);
  unsigned int v150 = a43 ^ *(_DWORD *)&v106[4 * (HIBYTE(v132) ^ 0xE)] ^ v144 ^ (v138 + 711475531 - ((2 * v138) & 0x54D08296));
  int v151 = BYTE1(v127);
  unsigned int v152 = HIDWORD(a42) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v127) ^ 0x6Du)) ^ (v143 + v59 - ((2 * v143) & 0x10657DF6));
  LODWORD(v74) = a42 ^ v147 ^ *(_DWORD *)(v98 + 4 * ((v132 ^ v74) ^ 0xCAu)) ^ *(_DWORD *)(v95 + 4 * (v146 ^ 0x6Du)) ^ v145;
  unsigned int v153 = v151 ^ 0x4552953C ^ v152;
  int v154 = *(_DWORD *)(v101 + 4 * BYTE2(v153));
  HIDWORD(v104) = v154 ^ 0x463;
  LODWORD(v104) = v154 ^ 0xC790D000;
  int v155 = v104 >> 12;
  BYTE1(v154) = BYTE1(v149) ^ 0xE7;
  int v156 = *(_DWORD *)(v101 + 4 * ((v149 ^ 0x99FEE750) >> 16));
  HIDWORD(v104) = v156 ^ 0x463;
  LODWORD(v104) = v156 ^ 0xC790D000;
  int v157 = BYTE1(v150) ^ 0x29;
  int v158 = v157 + v59 - ((2 * ((v150 >> 8) ^ 0xA73B29)) & 0x1F6);
  LODWORD(v93) = (BYTE1(v153) + v59 - ((v153 >> 7) & 0x1F6)) ^ *(_DWORD *)(v98 + 4 * (v150 ^ 0x72u)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v153) ^ 0x6Du)) ^ ((v104 >> 12) + 1808134091 - (v62 & (2 * (v104 >> 12))));
  int v159 = *(_DWORD *)(v101 + 4 * (BYTE2(v74) ^ 2u));
  HIDWORD(v104) = v159 ^ 0x463;
  LODWORD(v104) = v159 ^ 0xC790D000;
  int v160 = *(_DWORD *)&v106[4 * (HIBYTE(v150) ^ 0xA7)] ^ (v104 >> 12);
  int v161 = *(_DWORD *)(v101 + 4 * (BYTE2(v150) ^ 0x3Bu));
  HIDWORD(v104) = v161 ^ 0x463;
  LODWORD(v104) = v161 ^ 0xC790D000;
  int v162 = *(_DWORD *)(v98 + 4 * v153) ^ v160 ^ 0x41ADAE80;
  LODWORD(v81) = HIDWORD(a41) ^ ((BYTE1(v74) ^ 0xD9) + v59 - ((2 * ((v74 >> 8) ^ 0x9802D9)) & 0x1F6)) ^ *(_DWORD *)(v98 + 4 * (v149 ^ 0x1Eu)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v74) ^ 0xB4u)) ^ (v104 >> 12) ^ *(_DWORD *)&v106[4 * (HIBYTE(v152) ^ 0x61)];
  unsigned int v163 = a41 ^ *(_DWORD *)&v106[4 * (BYTE3(v74) ^ 0x98)] ^ (v93 + 711475531 - ((2 * v93) & 0x54D08296));
  unsigned int v164 = HIDWORD(a40) ^ v158 ^ *(_DWORD *)(v98 + 4 * (v74 ^ 0x3Du)) ^ *(_DWORD *)&v106[4 * ((v149 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)(v95 + 4 * (v157 ^ 0x6Du)) ^ v155;
  unsigned int v165 = a40 ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v149 ^ 0xE750) >> 8) ^ 0x6Du)) ^ (v162 + v59 - ((2 * v162) & 0x10657DF6));
  LODWORD(v93) = *(_DWORD *)(v101 + 4 * (BYTE2(v81) ^ 0xF1u));
  HIDWORD(v104) = v93 ^ 0x463;
  LODWORD(v104) = v93 ^ 0xC790D000;
  LODWORD(v93) = v104 >> 12;
  int v166 = *(_DWORD *)(v101 + 4 * (BYTE2(v164) ^ 0x45u));
  HIDWORD(v104) = v166 ^ 0x463;
  LODWORD(v104) = v166 ^ 0xC790D000;
  int v167 = BYTE1(v164) ^ 0x51;
  int v168 = v167 + v59 - ((2 * ((v164 >> 8) ^ 0x944551)) & 0x1F6);
  int v169 = *(_DWORD *)(v98 + 4 * ((v165 ^ BYTE1(v154)) ^ 0x41u)) ^ (((unsigned __int16)(v81 ^ 0xCEE5) >> 8)
                                                                                   + v59
                                                                                   - (((v81 ^ 0xE18BCEE5) >> 7) & 0x1F6)) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v81 ^ 0xCEE5) >> 8) ^ 0x6Du)) ^ ((v104 >> 12) + 1808134091 - (v62 & (2 * (v104 >> 12))));
  int v170 = v169 + 711475531 - ((2 * v169) & 0x54D08296);
  int v171 = *(_DWORD *)(v101 + 4 * (BYTE2(v165) ^ 0x81u));
  HIDWORD(v104) = v171 ^ 0x463;
  LODWORD(v104) = v171 ^ 0xC790D000;
  int v172 = ((v104 >> 12) + 711475531 - ((2 * (v104 >> 12)) & 0x54D08296)) ^ *(_DWORD *)&v106[4
                                                                                         * ((v81 ^ 0xE18BCEE5) >> 24)];
  int v173 = (v172 + 1808134091 - (v62 & (2 * v172))) ^ *(_DWORD *)(v98 + 4 * (v164 ^ 0x85u));
  unsigned int v174 = *(_DWORD *)(v101 + 4 * (BYTE2(v163) ^ 0xC6u));
  LODWORD(v93) = ((BYTE1(v165) ^ 0xA0) + v59 - 2 * (BYTE1(v165) ^ 0xA0 ^ (v165 >> 8) & 4)) ^ (v93
                                                                                            + 1808134091
                                                                                            - (v62 & (2 * v93))) ^ *(_DWORD *)(v98 + 4 * (v163 ^ 0xFCu)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v165) ^ 0xCDu));
  LODWORD(v104) = __ROR4__((v174 >> 12) ^ 0x261A42F, 17) ^ 0xEE910136;
  HIDWORD(v104) = v104;
  int v175 = (v104 >> 15) + (v174 << 20);
  LODWORD(v74) = HIDWORD(a39) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v163) ^ 0x75u)) ^ (v173 + v59 - ((2 * v173) & 0x10657DF6));
  unsigned int v176 = a39 ^ *(_DWORD *)&v106[4 * (HIBYTE(v164) ^ 0x94)] ^ (v93 + 711475531 - ((2 * v93) & 0x54D08296));
  int v177 = HIDWORD(a38) ^ *(_DWORD *)&v106[4 * (HIBYTE(v163) ^ 0x5A)] ^ v170;
  unsigned int v178 = a38 ^ v168 ^ *(_DWORD *)(v98 + 4 * (v81 ^ 0xE5u)) ^ *(_DWORD *)&v106[4
                                                                                               * (HIBYTE(v165) ^ 0x68)] ^ *(_DWORD *)(v95 + 4 * (v167 ^ 0x6Du)) ^ v175;
  LODWORD(v93) = ((BYTE1(v74) ^ 0x9D) + v59 - ((2 * ((v74 >> 8) ^ 0xC2489D)) & 0x1F6)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v74) ^ 0xF0u));
  unsigned int v179 = *(_DWORD *)(v101 + 4 * (BYTE2(v176) ^ 0x8Fu));
  LODWORD(v93) = *(_DWORD *)(v98 + 4 * (v178 ^ 0xAu)) ^ (v179 << 20) ^ (v179 >> 12) ^ 0x463C790D ^ (v93 + 1808134091 - (v62 & (2 * v93)));
  int v180 = *(_DWORD *)(v101 + 4 * ((v177 ^ 0xCFB8D782) >> 16));
  HIDWORD(v104) = v180 ^ 0x463;
  LODWORD(v104) = v180 ^ 0xC790D000;
  int v181 = ((v104 >> 12) + 1808134091 - (v62 & (2 * (v104 >> 12)))) ^ *(_DWORD *)(v98
                                                                              + 4
                                                                              * ((v74 ^ BYTE1(v163)) ^ 0x3Fu));
  int v182 = v93 + 711475531 - ((2 * v93) & 0x54D08296);
  LODWORD(v93) = v181 + 711475531 - ((2 * v181) & 0x54D08296);
  int v183 = *(_DWORD *)(v101 + 4 * (BYTE2(v74) ^ 0x48u));
  HIDWORD(v104) = v183 ^ 0x463;
  LODWORD(v104) = v183 ^ 0xC790D000;
  LODWORD(v81) = BYTE1(v176) ^ 0xD9;
  int v184 = v81 + v59 - ((2 * ((v176 >> 8) ^ 0xC78FD9)) & 0x1F6);
  int v185 = ((BYTE1(v178) ^ 0xCE) + v59 - ((2 * ((v178 >> 8) ^ 0x2116CE)) & 0x1F6)) ^ *(_DWORD *)(v98
                                                                                             + 4
                                                                                             * ((BYTE4(a38) ^ v106[4 * (HIBYTE(v163) ^ 0x5A)] ^ v170) ^ 0xCCu)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v178) ^ 0xA3u)) ^ ((v104 >> 12) + 1808134091 - (v62 & (2 * (v104 >> 12))));
  int v186 = *(_DWORD *)(v101 + 4 * (BYTE2(v178) ^ 0x16u));
  HIDWORD(v104) = v186 ^ 0x463;
  LODWORD(v104) = v186 ^ 0xC790D000;
  LODWORD(v74) = HIDWORD(a37) ^ (((unsigned __int16)(v177 ^ 0xD782) >> 8)
                               + v59
                               - (((v177 ^ 0xCFB8D782) >> 7) & 0x1F6)) ^ *(_DWORD *)(v98
                                                                                   + 4
                                                                                   * (v176 ^ 0x50u)) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v177 ^ 0xD782) >> 8) ^ 0x6Du)) ^ *(_DWORD *)&v106[4 * (BYTE3(v74) ^ 0xC2)] ^ (v104 >> 12);
  unsigned int v187 = a37 ^ *(_DWORD *)&v106[4 * (HIBYTE(v176) ^ 0xC7)] ^ (v185 + 711475531 - ((2 * v185) & 0x54D08296));
  unsigned int v188 = HIDWORD(a36) ^ *(_DWORD *)&v106[4 * ((v177 ^ 0xCFB8D782) >> 24)] ^ v182;
  unsigned int v189 = a36 ^ v184 ^ *(_DWORD *)(v95 + 4 * (v81 ^ 0x6D)) ^ *(_DWORD *)&v106[4 * (HIBYTE(v178) ^ 0x21)] ^ v93;
  LODWORD(v81) = *(_DWORD *)(v101 + 4 * (BYTE2(v187) ^ 0xE6u));
  HIDWORD(v104) = v81 ^ 0x463;
  LODWORD(v104) = v81 ^ 0xC790D000;
  LODWORD(v81) = v104 >> 12;
  unsigned int v190 = (((unsigned __int16)(v189 ^ 0xCCA2) >> 8) + v59 - (((v189 ^ 0x33C8CCA2) >> 7) & 0x1F6)) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v189 ^ 0xCCA2) >> 8) ^ 0x6Du));
  int v191 = *(_DWORD *)(v101 + 4 * (BYTE2(v188) ^ 0x1Cu));
  HIDWORD(v104) = v191 ^ 0x463;
  LODWORD(v104) = v191 ^ 0xC790D000;
  LODWORD(v93) = (v104 >> 12) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v187) ^ 0xD9u)) ^ ((BYTE1(v187) ^ 0xB4)
                                                                                + v59
                                                                                - ((2 * ((v187 >> 8) ^ 0x4FE6B4)) & 0x1F6));
  LODWORD(v93) = (v93 + 1808134091 - (v62 & (2 * v93))) ^ *(_DWORD *)(v98 + 4 * (v74 ^ 0x6Au));
  int v192 = (v190 + 1808134091 - (v62 & (2 * v190))) ^ *(_DWORD *)(v98 + 4 * (v188 ^ 0x3Au));
  int v193 = *(_DWORD *)(v98 + 4 * (v189 ^ 0xA2u)) ^ (((unsigned __int16)(v74 ^ 0xBA6A) >> 8)
                                                                   + v59
                                                                   - (((v74 ^ 0x589EBA6A) >> 7) & 0x1F6)) ^ *(_DWORD *)(v95 + 4 * (((unsigned __int16)(v74 ^ 0xBA6A) >> 8) ^ 0x6Du)) ^ (v81 + 1808134091 - (v62 & (2 * v81)));
  LODWORD(v81) = *(_DWORD *)(v98 + 4 * (v187 ^ 0x96u));
  HIDWORD(v104) = v81 ^ 0xBC5EFCB;
  LODWORD(v104) = v81 ^ 0x60000000;
  HIDWORD(v104) = (v104 >> 29) ^ 0x6615DA09;
  LODWORD(v104) = HIDWORD(v104);
  LODWORD(v81) = (v104 >> 3) + v59 - ((2 * (v104 >> 3)) & 0x10657DF6);
  int v194 = *(_DWORD *)(v101 + 4 * ((v74 ^ 0x589EBA6A) >> 16));
  HIDWORD(v104) = v194 ^ 0x463;
  LODWORD(v104) = v194 ^ 0xC790D000;
  int v195 = v104 >> 12;
  int v196 = *(_DWORD *)(v101 + 4 * ((v189 ^ 0x33C8CCA2) >> 16));
  HIDWORD(v104) = v196 ^ 0x463;
  LODWORD(v104) = v196 ^ 0xC790D000;
  unsigned int v197 = HIDWORD(a35) ^ *(_DWORD *)&v106[4 * (HIBYTE(v189) ^ 0x17)] ^ (v93 + 711475531 - ((2 * v93) & 0x54D08296));
  int v198 = BYTE1(v188);
  LODWORD(v93) = v81 ^ *(_DWORD *)(v95 + 4 * (BYTE1(v188) ^ 0xD1u)) ^ (v104 >> 12);
  LODWORD(v74) = *(_DWORD *)&v106[4 * (BYTE3(v74) ^ 0x7C)] ^ a55 ^ (v93 + 711475531 - ((2 * v93) & 0x54D08296));
  unsigned int v199 = a35 ^ *(_DWORD *)&v106[4 * (HIBYTE(v187) ^ 0x4F)] ^ v195 ^ (v192 + 711475531 - ((2 * v192) & 0x54D08296));
  unsigned int v200 = HIDWORD(a34) ^ *(_DWORD *)&v106[4 * (HIBYTE(v188) ^ 0x1B)] ^ (v193 + 711475531 - ((2 * v193) & 0x54D08296));
  LODWORD(v93) = *(_DWORD *)(v101 + 4 * (BYTE2(v200) ^ 0x7Eu));
  HIDWORD(v104) = v93 ^ 0x463;
  LODWORD(v104) = v93 ^ 0xC790D000;
  int v201 = v104 >> 12;
  LODWORD(v93) = *(_DWORD *)(v101 + 4 * (BYTE2(v199) ^ 1u));
  HIDWORD(v104) = v93 ^ 0x463;
  LODWORD(v104) = v93 ^ 0xC790D000;
  LODWORD(v93) = ((v104 >> 12) + 1808134091 - (v62 & (2 * (v104 >> 12)))) ^ *(_DWORD *)(v98
                                                                                      + 4
                                                                                      * (v197 ^ 0xC6u));
  int v202 = ((BYTE1(v197) ^ 0x71) + v59 - ((2 * ((v197 >> 8) ^ 0xF25B71)) & 0x1F6)) ^ *(_DWORD *)(v95
                                                                                             + 4
                                                                                             * (BYTE1(v197) ^ 0x1Cu));
  int v203 = *(_DWORD *)(v101 + 4 * (BYTE2(v197) ^ 0x5Bu));
  HIDWORD(v104) = v203 ^ 0x463;
  LODWORD(v104) = v203 ^ 0xC790D000;
  int v204 = v104 >> 12;
  int v205 = (v202 + 711475531 - ((2 * v202) & 0x54D08296)) ^ *(_DWORD *)&v106[4 * (HIBYTE(v199) ^ 0x1F)];
  unsigned int v206 = v198 ^ 0x73F4E0AF ^ v74;
  int v207 = *(_DWORD *)(v101 + 4 * BYTE2(v206));
  HIDWORD(v104) = v207 ^ 0x463;
  LODWORD(v104) = v207 ^ 0xC790D000;
  LODWORD(v81) = v104 >> 12;
  HIDWORD(v104) = v201 ^ ((BYTE1(v199) ^ 0x81) + v59 - 2 * (BYTE1(v199) ^ 0x81 ^ (v199 >> 8) & 4)) ^ 0xD678EAEF ^ *(_DWORD *)(v95 + 4 * (BYTE1(v199) ^ 0xECu));
  LODWORD(v104) = HIDWORD(v104);
  LODWORD(v104) = (v104 >> 11) ^ __ROR4__(*(_DWORD *)&v106[4 * (HIBYTE(v197) ^ 0xF2)] ^ 0x88721AF5, 11) ^ 0xD490839A;
  HIDWORD(v104) = v104;
  unsigned int v208 = a34 ^ *(_DWORD *)(v98 + 4 * (v199 ^ 0xB8u)) ^ ((BYTE1(v200) ^ 0xAA)
                                                                         + v59
                                                                         + 1
                                                                         + ~(2 * (BYTE1(v200) ^ 0xAA ^ (v200 >> 8) & 4))) ^ *(_DWORD *)&v106[4 * (BYTE3(v74) ^ 0x57)] ^ v204 ^ *(_DWORD *)(v95 + 4 * (BYTE1(v200) ^ 0xC7u));
  unsigned int v209 = HIDWORD(a33) ^ *(_DWORD *)&v106[4 * (HIBYTE(v200) ^ 0x96)] ^ (BYTE1(v206) + v59 - ((v206 >> 7) & 0x1F6)) ^ *(_DWORD *)(v95 + 4 * (BYTE1(v206) ^ 0x6Du)) ^ (v93 + 711475531 - ((2 * v93) & 0x54D08296));
  LODWORD(v93) = a33 ^ *(_DWORD *)(v98 + 4 * (v200 ^ 0x88u)) ^ v81 ^ (v205
                                                                                       + 1808134091
                                                                                       - (v62 & (2 * v205)));
  unsigned int v210 = HIDWORD(a32) ^ *(_DWORD *)(v98 + 4 * v206) ^ ((v104 >> 21)
                                                                        + 1808134091
                                                                        - (v62 & (2 * (v104 >> 21))));
  LODWORD(v74) = *(_DWORD *)(v101 + 4 * (BYTE2(v208) ^ 0x46u));
  HIDWORD(v104) = v74 ^ 0x463;
  LODWORD(v104) = v74 ^ 0xC790D000;
  LODWORD(v74) = v104 >> 12;
  int v211 = *(_DWORD *)(v95 + 4 * (BYTE1(v209) ^ 0x96u)) ^ ((BYTE1(v209) ^ 0xFB)
                                                         + v59
                                                         - ((2 * ((v209 >> 8) ^ 0x3EA2FB)) & 0x1F6));
  int v212 = (v211 + 1808134091 - (v62 & (2 * v211))) ^ *(_DWORD *)(v98 + 4 * (v93 ^ 0x75u));
  int v213 = *(_DWORD *)(v101 + 4 * (BYTE2(v209) ^ 0xA2u));
  HIDWORD(v104) = v213 ^ 0x463;
  LODWORD(v104) = v213 ^ 0xC790D000;
  int v214 = (((unsigned __int16)(v93 ^ 0xF075) >> 8)
        + v59
        - (((v93 ^ 0xB54AF075) >> 7) & 0x1F6)) ^ (v104 >> 12) ^ *(_DWORD *)(v95
                                                                                        + 4
                                                                                        * (((unsigned __int16)(v93 ^ 0xF075) >> 8) ^ 0x6Du));
  int v215 = (v214 + 711475531 - ((2 * v214) & 0x54D08296)) ^ *(_DWORD *)&v106[4 * (HIBYTE(v210) ^ 0xED)];
  LODWORD(v81) = *(_DWORD *)&v106[4 * (HIBYTE(v209) ^ 0x3E)];
  int v216 = *(_DWORD *)&v106[4 * (HIBYTE(v208) ^ 0x86)];
  v210 ^= 0xC9AF1D8F;
  int v217 = *(_DWORD *)(v98 + 4 * v210);
  int v218 = *(_DWORD *)(v98 + 4 * (v209 ^ 0x9Au));
  LODWORD(v98) = *(_DWORD *)(v98 + 4 * (v208 ^ 0xEFu));
  int v219 = BYTE1(v210);
  int v220 = BYTE1(v210) + v59 - ((v210 >> 7) & 0x1F6);
  unsigned int v221 = *(_DWORD *)(v101 + 4 * BYTE2(v210));
  int v222 = *(_DWORD *)(v101 + 4 * (BYTE2(v93) ^ 0x4Au));
  HIDWORD(v104) = v222 ^ 0x463;
  LODWORD(v104) = v222 ^ 0xC790D000;
  int v223 = (v208 >> 8) ^ 0x86466E;
  int v224 = *(_DWORD *)(v95 + 4 * (v223 ^ 0x6Du));
  LODWORD(v95) = a32 ^ v218 ^ v74 ^ *(_DWORD *)&v106[4 * (BYTE3(v93) ^ 0x91)] ^ v220 ^ *(_DWORD *)(v95
                                                                                                 + 4 * (v219 ^ 0x6Du));
  unsigned int v225 = HIDWORD(a31) ^ (v223 + v59 - ((2 * v223) & 0x1F6)) ^ v81 ^ v224 ^ v217 ^ (v104 >> 12);
  LODWORD(v101) = a31 ^ v98 ^ (v215 + 1808134091 - (v62 & (2 * v215)));
  LODWORD(v93) = HIDWORD(a30) ^ v216 ^ (v221 >> 12) ^ (v221 << 20);
  uint64_t v226 = (char *)*(&off_99820 + a28) - 12;
  int v227 = (char *)*(&off_99820 + HIDWORD(a27)) - 4;
  LODWORD(v98) = *(_DWORD *)&v227[4 * (BYTE1(v95) ^ 0xDF)];
  unsigned int v228 = v93 ^ (v212 + 711475531 - ((2 * v212) & 0x54D08296));
  LODWORD(v93) = *(_DWORD *)&v226[4 * (v101 ^ 7)] ^ *(_DWORD *)&v227[4 * (BYTE1(v228) ^ 0x5A)] ^ 0x1819B9BB;
  uint64_t v229 = *(unsigned int *)&v227[4 * ((unsigned __int16)(v101 ^ 0x6F07) >> 8)];
  uint64_t v230 = *(unsigned int *)&v227[4 * (BYTE1(v225) ^ 0x13)];
  int v231 = (char *)*(&off_99820 + HIDWORD(a26)) - 8;
  int v232 = *(_DWORD *)&v231[4 * (BYTE3(v101) ^ 0xEF)];
  LODWORD(v81) = *(_DWORD *)&v231[4 * (HIBYTE(v225) ^ 0x89)];
  int v233 = *(_DWORD *)&v231[4 * (HIBYTE(v228) ^ 0xDB)];
  LODWORD(v231) = *(_DWORD *)&v231[4 * (BYTE3(v95) ^ 0x70)];
  unsigned int v234 = (char *)*(&off_99820 + a27) - 8;
  int v235 = *(_DWORD *)&v234[4 * (BYTE2(v228) ^ 0x80)];
  int v236 = *(_DWORD *)&v234[4 * (BYTE2(v101) ^ 0x2A)];
  LODWORD(v101) = *(_DWORD *)&v234[4 * (BYTE2(v225) ^ 0x9D)];
  LODWORD(v93) = v81 ^ (v93 + 568772136 - ((2 * v93) & 0x43CD8C50));
  LODWORD(v106) = *(_DWORD *)&v226[4 * (v95 ^ 0x5C)];
  LODWORD(v93) = *(_DWORD *)&v234[4 * (BYTE2(v95) ^ 0x26)] ^ (v93 + 1379586126 - ((2 * v93) & 0xA475A09C));
  int v237 = *(_DWORD *)&v226[4 * (v225 ^ 0x62)];
  int v238 = *(_DWORD *)&v226[4 * (v228 ^ 0xD6)];
  LODWORD(v226) = *(_DWORD *)(v63 - 132) ^ a53 ^ (v93 - ((2 * v93) & 0x9AFD019C) + 1300136142);
  uint64_t v239 = (uint64_t)*(&off_99820 + a26);
  *(unsigned char *)(a57 + *(void *)(v63 - 248)) = *(unsigned char *)(v239 + ((v226 >> 24) ^ 0xD7)) ^ 0x3E;
  LODWORD(v93) = ((v229 ^ v235 ^ 0x3A9DDA60)
                + 568772136
                - 2 * ((v229 ^ v235 ^ 0x3A9DDA60) & 0x21E6C62E ^ (v229 ^ v235) & 6)) ^ v231;
  LODWORD(v93) = (v93 + 1891546005 - ((2 * v93) & 0xE17D672A)) ^ v237;
  LODWORD(v93) = *(_DWORD *)(v63 - 128) ^ HIDWORD(a53) ^ (v93 - ((2 * v93) & 0x6FE349E4) - 1208900366);
  unsigned int v240 = (char *)*(&off_99820 + HIDWORD(a25)) - 4;
  *(unsigned char *)(a57 + *(void *)(v63 - 216)) = (v240[v93 ^ 0xC7] + 112) ^ 0x5F;
  int v241 = (char *)*(&off_99820 + a25) - 8;
  LODWORD(v231) = v241[BYTE1(v93) ^ 0x13];
  HIDWORD(v104) = v231 ^ 0x2D;
  LODWORD(v104) = v231 << 24;
  *(unsigned char *)(a57 + v248) = (v104 >> 30) ^ 0x40;
  LODWORD(v231) = ((v106 ^ 0x228463DB ^ v236)
                 + 568772136
                 - ((2 * (v106 ^ 0x228463DB ^ v236)) & 0x43CD8C50)) ^ v233;
  LODWORD(v231) = (v231 - ((2 * v231) & 0xD14E145C) + 1755777582) ^ v230;
  LODWORD(v81) = *(_DWORD *)(v63 - 124) ^ HIDWORD(a54) ^ (v231 - ((2 * v231) & 0xFEBD79C0) - 10568480);
  LODWORD(v231) = v241[BYTE1(v81)];
  HIDWORD(v104) = v231 ^ 0x2D;
  LODWORD(v104) = v231 << 24;
  int v242 = v232 ^ v98;
  *(unsigned char *)(a57 + *(void *)(v63 - 208)) = (v104 >> 30) ^ 0x7E;
  unsigned int v243 = (char *)*(&off_99820 + HIDWORD(a24)) - 4;
  *(unsigned char *)(a57 + *(void *)(v63 - 256)) = v243[BYTE2(v226) ^ 0xFBLL] ^ 0xC7;
  LODWORD(v231) = ((v242 ^ 0x4941CC06) + 1379586126 - 2 * ((v242 ^ 0x4941CC06) & 0x523AD05E ^ v242 & 0x10)) ^ v101;
  LODWORD(v231) = (v231 + 1891546005 - ((2 * v231) & 0xE17D672A)) ^ v238;
  LODWORD(v231) = *(_DWORD *)(v63 - 120) ^ a54 ^ (v231 - ((2 * v231) & 0x7D5E6FC4) - 1095813150);
  *(unsigned char *)(a57 + *(void *)(v63 - 168)) = v243[BYTE2(v231) ^ 0xB8] ^ 0x14;
  *(unsigned char *)(a57 + *(void *)(v63 - 240)) = (v240[v226 ^ 0x1BLL] + 112) ^ 0x7D;
  *(unsigned char *)(a57 + *(void *)(v63 - 224)) = v243[BYTE2(v93) ^ 3] ^ 0x6A;
  *(unsigned char *)(a57 + *(void *)(v63 - 176)) = *(unsigned char *)(v239 + (BYTE3(v93) ^ 0x6DLL)) ^ 0xC6;
  LODWORD(v93) = v241[BYTE1(v226) ^ 0x92];
  HIDWORD(v104) = v93 ^ 0x2D;
  LODWORD(v104) = v93 << 24;
  *(unsigned char *)(a57 + *(void *)(v63 - 152)) = (v104 >> 30) ^ 0xD2;
  uint64_t v244 = *(void *)(v63 - 200);
  *(unsigned char *)(a57 + v244) = *(unsigned char *)(v239 + (BYTE3(v81) ^ 0x53)) ^ 0x2A;
  *(unsigned char *)(a57 + *(void *)(v63 - 184)) = (v240[v81 ^ 0x95] + 112) ^ 0xAF;
  *(unsigned char *)(a57 + *(void *)(v63 - 232)) = (v240[v231 ^ 0x64] + 112) ^ 0x27;
  *(unsigned char *)(a57 + *(void *)(v63 - 160)) = *(unsigned char *)(v239 + ((v231 >> 24) ^ 0x6ELL)) ^ 0xBC;
  LODWORD(v93) = v241[BYTE1(v231) ^ 0x1FLL];
  HIDWORD(v104) = v93 ^ 0x2D;
  LODWORD(v104) = v93 << 24;
  *(unsigned char *)(a57 + *(void *)(v63 - 192)) = (v104 >> 30) ^ 0x58;
  *(unsigned char *)(a57 + *(void *)(v63 - 144)) = v243[BYTE2(v81) ^ 0xC8] ^ 0x45;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a59 + 8 * ((1096 * (((v244 - 184888283 - 2 * ((v244 + 16) & 0x74FAD41D ^ v61 & 8)) ^ 0xF4FAD415) < a30)) ^ (*(_DWORD *)(v63 - 116) - 583))))(19, v230, 42, 568772136, 45, 3783092010, 1891546005, v229, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_3F67C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((59 * (((v0 == v1) ^ ((v3 & 0xDD) + 100)) & 1)) ^ v3 & 0x3BA953DDu)))();
}

void sub_3F6D4(uint64_t a1)
{
  int v1 = 3804331 * (((a1 | 0x841A70C4) - (a1 & 0x841A70C4)) ^ 0x7E848392);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x7761D79CB8DF4D07) + 1716538174;
  unsigned int v3 = *(_DWORD *)(a1 + 4) - v1 - 1758948323;
  int v4 = (v3 < 0xB758E828) ^ (v2 < 0xB758E828);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = v3 < 0xB758E828;
  }
  __asm { BRAA            X12, X17 }
}

void sub_3F7E8()
{
}

uint64_t sub_3F810@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int32x4_t *a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int32x4_t a50,int8x16_t a51)
{
  int8x16x4_t v78 = vld4q_s8(v51);
  int v52 = (LODWORD(STACK[0x3FC]) - 825307000) & 0x31312F77;
  v53.i64[0] = 0xE5E5E5E5E5E5E5E5;
  v53.i64[1] = 0xE5E5E5E5E5E5E5E5;
  uint8x16_t v54 = (uint8x16_t)veorq_s8(v78.val[0], v53);
  uint16x8_t v55 = vmovl_u8(*(uint8x8_t *)v54.i8);
  int8x16_t v56 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v55.i8);
  int8x16_t v57 = (int8x16_t)vmovl_high_u16(v55);
  uint16x8_t v58 = vmovl_high_u8(v54);
  int8x16_t v59 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v58.i8);
  int8x16_t v60 = (int8x16_t)vmovl_high_u16(v58);
  uint8x16_t v61 = (uint8x16_t)veorq_s8(v78.val[1], v53);
  uint16x8_t v62 = vmovl_high_u8(v61);
  uint16x8_t v63 = vmovl_u8(*(uint8x8_t *)v61.i8);
  uint8x16_t v64 = (uint8x16_t)veorq_s8(v78.val[2], v53);
  _Q21 = (int8x16_t)vmovl_high_u8(v64);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v64.i8);
  int8x16_t v67 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v72 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v78.val[0] = veorq_s8(v78.val[3], v53);
  v78.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v78.val[0]);
  v78.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v78.val[1]);
  v78.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v78.val[0].i8);
  v78.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v78.val[0]);
  v78.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v78.val[0].i8), 0x18uLL), v67), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v63.i8, 8uLL), v56));
  v78.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v78.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v63, 8uLL), v57));
  v78.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v78.val[1].i8), 0x18uLL), v72), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v62.i8, 8uLL), v59));
  v78.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v78.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v62, 8uLL), v60));
  int32x4_t v73 = (int32x4_t)veorq_s8(vandq_s8(v78.val[0], a51), (int8x16_t)(*(_OWORD *)&v56 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  int32x4_t v74 = (int32x4_t)veorq_s8(vandq_s8(v78.val[3], a51), (int8x16_t)(*(_OWORD *)&v57 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  int32x4_t v75 = (int32x4_t)veorq_s8(vandq_s8(v78.val[1], a51), (int8x16_t)(*(_OWORD *)&v59 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  int32x4_t v76 = (int32x4_t)veorq_s8(vandq_s8(v78.val[2], a51), (int8x16_t)(*(_OWORD *)&v60 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  a5[2] = vaddq_s32(vsubq_s32((int32x4_t)v78.val[1], vaddq_s32(v75, v75)), a50);
  a5[3] = vaddq_s32(vsubq_s32((int32x4_t)v78.val[2], vaddq_s32(v76, v76)), a50);
  *a5 = vaddq_s32(vsubq_s32((int32x4_t)v78.val[0], vaddq_s32(v73, v73)), a50);
  a5[1] = vaddq_s32(vsubq_s32((int32x4_t)v78.val[3], vaddq_s32(v74, v74)), a50);
  return sub_41650(v52, a1, a2, a3, a4, 213328488);
}

uint64_t sub_3F964()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((55 * (STACK[0x590] != 0)) ^ (v0 - 241))))();
}

uint64_t sub_3F98C()
{
  BOOL v7 = v0 == v5 + v1 - 1629 - 370 && v3 != v2;
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((v7 * ((v1 + 1632030719) & 0x9EB92CFF ^ 0x5A6)) ^ (v1 - 839))))();
}

uint64_t sub_3F9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3FA48(146, a2, a3, 1026, 0xED5210477EA1954DLL, 1042, 175, 1136);
}

uint64_t sub_3FA48(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, unint64_t a5)
{
  uint64_t v10 = ((((v7 - 877) | a4) - 976) ^ a5) + v8;
  return (*(uint64_t (**)(void))(v9
                              + 8 * ((13 * (*(unsigned __int8 *)(v5 + v10) == *(unsigned __int8 *)(v6 + v10))) | v7)))();
}

uint64_t sub_3FA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned int a27,uint64_t a28,unsigned int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  int v203 = a5 ^ 0x8AC;
  uint64_t v39 = ((v36 ^ 0x4D016D3688220B09)
       + v35
       - (((v36 ^ 0x4D016D3688220B09) & (v35 + 4) ^ v36 & 4) << ((a5 ^ 0x50) + 113 * (a5 ^ 0xB7u) - 54))) ^ v38;
  uint64_t v40 = __ROR8__(__ROR8__(a3 ^ a28, 12) ^ 0xA9F5355D327AAF0FLL, 52);
  uint64_t v41 = v40 ^ 0x322397601515A6F7;
  unint64_t v42 = ((v40 ^ 0x322397601515A6F7)
       + 0x53AFBFCC4DA6B3ECLL
       - ((2 * (v40 ^ 0x322397601515A6F7)) & 0xA75F7F989B4D67D8)) ^ a2;
  uint64_t v43 = v34 ^ v36 ^ 0x4D016D3688220B09;
  uint64_t v44 = v39 ^ 0x68040451F630332FLL;
  unint64_t v45 = v39 ^ 0x68040451F630332FLL ^ (v42 ^ 0xE4C1C31231B4037DLL) & (v40 ^ 0xCDDC689FEAEA5908);
  unint64_t v46 = v43 ^ 0x168207F618085D46 ^ (((v39 ^ 0x97FBFBAE09CFCCD0) & (v40 ^ 0x322397601515A6F7))
                                    - ((2 * ((v39 ^ 0x97FBFBAE09CFCCD0) & (v40 ^ 0x322397601515A6F7))) & 0x48C87F69E908D056)
                                    + 0x24643FB4F484682BLL);
  uint64_t v47 = v42 ^ 0x1B3E3CEDCE4BFC82;
  unint64_t v48 = v42 ^ 0xE4C1C31231B4037DLL ^ (v43 ^ 0x32E63842EC8C356DLL) & (v34 ^ 0xCD19C7BD1373CA92);
  *((void *)&v49 + 1) = v34 ^ 0x356D;
  *(void *)&long long v49 = v34 ^ 0x32E63842EC8C0000;
  unint64_t v50 = v47 & (v34 ^ 0x32E63842EC8C356DLL) ^ v41 ^ v45;
  unint64_t v51 = v44 & (v43 ^ 0xCD19C7BD1373CA92);
  unint64_t v52 = __ROR8__(__ROR8__(v45, 38) ^ __ROR8__(v46, 38) ^ 0xB8AB4977971512F1, 26);
  LODWORD(v41) = *(unsigned __int8 *)(a30 + ((((v50 >> 61) ^ 4) + 241) ^ 0x78));
  int v53 = 4 * (v41 ^ 0xFFFFFFDD) - 32 * ((v41 ^ 0xFFFFFFDD) >> 2) + 114;
  char v54 = (v41 ^ 0xDD) - ((2 * (v41 ^ 0xDD)) & 0xE4) + 114;
  char v55 = v41 ^ 0xE5;
  char v56 = v55 + (v54 ^ v53 ^ 0xC7) + 1;
  char v57 = v56 & 0x40;
  unint64_t v58 = v48 ^ __ROR8__((v49 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v51;
  unsigned __int8 v59 = (v53 ^ 0x8D) + 1;
  if ((v56 & 0x40 & v59) != 0) {
    char v60 = v59 - v57 - ((2 * (v59 - v57)) & 0xA6);
  }
  else {
    char v60 = v57 + v59 - 2 * ((v57 + v59) & 0x54 ^ v59 & 4);
  }
  char v61 = (v60 + 82) ^ ((v56 & 0xBF) - ((2 * v56) & 0x24) + 82);
  unsigned __int8 v62 = ((v61 - ((2 * v61) & 0xE4) + 114) ^ v53) + v55;
  *((void *)&v63 + 1) = ~v48;
  *(void *)&long long v63 = v48 ^ 0x92CFC162FD513142;
  unint64_t v64 = __ROR8__(v48, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v63 + 1) = v48 ^ 0xFEFC5E05630A97F5 ^ ((v63 >> 1)
                                                      - ((2 * (v63 >> 1)) & 0xD8673ECF3CB74D6CLL)
                                                      + 0x6C339F679E5BA6B6);
  *(void *)&long long v63 = *((void *)&v63 + 1) ^ (v48 << 58) ^ 0xC00000000000000;
  uint64_t v65 = v63 >> 51;
  uint64_t v66 = v50 ^ (v50 >> 39) ^ (8 * v50) ^ (((v62 >> 1) | (v62 << 7)) | (v50 << 25));
  uint64_t v67 = v66 ^ 0x4C294B688C20AA59;
  uint64_t v68 = v65 + (v64 ^ 0x8F8AC7F1FBA51795);
  unint64_t v69 = (v46 << 23) ^ 0xFBA827E079000000;
  unint64_t v70 = (((v52 << 45) ^ (v52 << 36)) & 0xFFFFFFF000000000 | (v52 >> 28)) ^ (v52 >> 19) ^ 0xD0A2B87327B31AB3;
  unint64_t v71 = v70 - ((2 * v70) & 0xE599BE14C1A37334) + 0x72CCDF0A60D1B99ALL;
  unint64_t v72 = v46 ^ (v46 >> 41) ^ (v46 >> 7) ^ (((v46 << 57) ^ 0xE400000000000000) - 0x7E4B34977306267ALL);
  uint64_t v73 = (v72 & 0x10000000000000 ^ 0x7F7DDFFFFBFFBDFCLL) + 2 * (v72 & 0x10000000000000);
  uint64_t v74 = v73 - 0x50005250333810D4;
  unint64_t v75 = v72 & 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v76 = v73 - 0x7F7DDFFFFBFFBDFCLL;
  uint64_t v77 = __ROR8__(v68 - 2 * (v65 & (v64 ^ 0x8F8AC7F1FBA51795)), 13);
  unint64_t v78 = v58 ^ (v58 >> 10) ^ (v58 << 47) ^ ((v58 >> 17) | (v58 << 54));
  unint64_t v79 = 0xAEFB6DAFC4C76B24 - v73;
  if ((v76 & v69) == 0) {
    unint64_t v79 = v74;
  }
  uint64_t v80 = (v69 - 0x2F7D8DAFC8C7AD28 + v79) ^ v75;
  uint64_t v81 = ((v80 ^ 0x37E39ED0324D1A66)
       - ((2 * (v80 ^ 0x37E39ED0324D1A66)) & 0x309F5E592C9828FALL)
       - 0x67B050D369B3EB83) ^ v78;
  uint64_t v82 = __ROR8__(__ROR8__(v81 ^ 0xAF279D1225267BC4, 23) ^ 0x6C4FE5A873E441B7, 41);
  unint64_t v83 = v67 ^ (v77 + 0x6A7061692F7B7EB4 - ((2 * v77) & 0xD4E0C2D25EF6FD68));
  unint64_t v84 = v71 ^ v52 ^ v80;
  unint64_t v85 = v82 & (v78 ^ 0x1CAE3FE19723B7B4) ^ v83;
  unint64_t v86 = (v84 ^ 0x8F5342434B8EAFEFLL | ~v82)
      + ((v82 + 0x3EA97B8D290965DCLL - ((2 * v82) & 0x7D52F71A5212CBB8)) ^ v84 ^ 0xB1FA39CE6287CA33)
      + 1;
  unint64_t v87 = (((v83 ^ 0xBEE74353B47A99EDLL) & (v66 ^ 0xD9A6D5FE5CA42B12))
       + 0x3EA97B8D290965DCLL
       - ((2 * ((v83 ^ 0xBEE74353B47A99EDLL) & (v66 ^ 0xD9A6D5FE5CA42B12))) & 0x7D52F71A5212CBB8)) ^ v84 ^ 0xB1FA39CE6287CA33;
  unint64_t v88 = v81 ^ (v84 ^ 0x70ACBDBCB4715010) & (v66 ^ 0x26592A01A35BD4EDLL);
  unint64_t v89 = ((v87 ^ (v83 ^ 0x4118BCAC4B856612) & (v78 ^ 0xE351C01E68DC484BLL))
       + 0x6A7061692F7B7EB4
       - ((2 * (v87 ^ (v83 ^ 0x4118BCAC4B856612) & (v78 ^ 0xE351C01E68DC484BLL))) & 0xD4E0C2D25EF6FD68)) ^ v67;
  unint64_t v90 = ((v85 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v78 ^ 0xE1DE6585B59498FDLL, 27);
  *((void *)&v92 + 1) = v87 ^ v88 ^ 0xFB539D5;
  *(void *)&long long v92 = v87 ^ v88 ^ 0xD76260C6F0000000;
  uint64_t v91 = v92 >> 28;
  unint64_t v93 = v86 ^ __ROR8__(v90 ^ (((v85 ^ 0xBEE74353B47A99EDLL) << 37)- (((v85 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)- 0x7643747485F20715), 37);
  *(void *)&long long v92 = __ROR8__(v87 ^ v88, 19);
  unint64_t v94 = (v91 ^ v92 ^ 0xA73ABAEC4C18DFF6)
      - ((2 * (v91 ^ v92 ^ 0xA73ABAEC4C18DFF6)) & 0x420F5BA30A4DD676)
      + 0x2107ADD18526EB3BLL;
  *((void *)&v92 + 1) = v89 ^ 0x1747C156E755AED6;
  *(void *)&long long v92 = v89 ^ 0x4000000000000000;
  uint64_t v95 = v89 ^ __ROR8__(v89, 39) ^ (v92 >> 61);
  uint64_t v96 = v95 & 0x7C09B5691D153F3ALL;
  uint64_t v97 = ((v88 >> 7) ^ (v88 >> 41) | (v88 << 57)) ^ (v88 << 23) ^ 0x2FDC4B32D0EB37BLL;
  unint64_t v98 = v97 - ((2 * v97) & 0x9BBF06AA17F354B0) - 0x32207CAAF40655A8;
  uint64_t v99 = v88 ^ 0x2CF9D09F74E9832BLL ^ v98;
  unint64_t v100 = v94 ^ v87 ^ v98;
  unint64_t v101 = v93 ^ (v93 << 47) ^ (v93 >> 10) ^ (v93 >> 17) ^ (v93 << 54);
  uint64_t v102 = (v99 & 0x100000000 ^ 0x7BFF76C3FD6F77BFLL) + 2 * (v99 & 0x100000000);
  uint64_t v103 = v102 - 0x388D1600100E4520;
  unint64_t v104 = v99 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v105 = ((v85 ^ 0xD1A234CC1D2559D7) >> 6) ^ (v85 >> 1) ^ (((v85 ^ 0xD1A234CC1D2559D7) << 58) | v85 ^ 0xD1A234CC1D2559D7) ^ ((((v85 ^ 0xD1A234CC1D2559D7) << 58) & (v85 ^ 0xD000000000000000) ^ ((v85 ^ 0xD1A234CC1D2559D7) << 63)) - 0x740EDEC08E4360DELL - ((2 * (((v85 ^ 0xD1A234CC1D2559D7) << 58) & (v85 ^ 0xD000000000000000))) & 0x1000000000000000)) ^ v95 ^ 0x71784B343A47BE76;
  uint64_t v106 = v105 ^ 0x68D11A660E92ACEBLL;
  uint64_t v107 = v102 - 0x7BFF76C3FD6F77BFLL;
  unint64_t v108 = 0xBF71D787EAD0AA5ELL - v102;
  if (((v101 ^ 0xBEE8B63400000000) & v107) == 0) {
    unint64_t v108 = v103;
  }
  unint64_t v109 = ((v101 ^ 0xBEE8B6349A795903) - 0x437260C3ED61329FLL + v108) ^ v104;
  *((void *)&v110 + 1) = v100 ^ 0xE7A51C5;
  *(void *)&long long v110 = v100 ^ 0xDA9C1D8800000000;
  unint64_t v111 = (v100 ^ 0xDA9C1D880E7A51C5) & ~v109;
  char v112 = v109 & 1;
  *(void *)&long long v110 = __ROR8__((v110 >> 33) ^ __ROR8__((v105 ^ 0x68D11A660E92ACEBLL) & (v95 ^ 0x57695F4B404DEABLL), 33) ^ 0xCF4F457632C10184, 31);
  uint64_t v113 = v109 & (v101 ^ 0x411749CB6586A6FCLL);
  unint64_t v114 = v109 ^ (((v100 ^ 0x2563E277F185AE3ALL) & (v95 ^ 0xFA896A0B4BFB2154))
               - ((2 * ((v100 ^ 0x2563E277F185AE3ALL) & (v95 ^ 0xFA896A0B4BFB2154))) & 0xBD49CBC872242CF2)
               - 0x215B1A1BC6EDE987);
  unint64_t v115 = v105 ^ 0x972EE599F16D5314;
  unint64_t v116 = v113 ^ v106;
  unint64_t v117 = (v101 ^ 0xBEE8B6349A795903) & v115;
  unint64_t v118 = v113 ^ v106 ^ v101 ^ (v111 - ((2 * v111) & 0x69DF733F277901C0) + 0x34EFB99F93BC80E0);
  unint64_t v119 = v110 ^ v95 ^ 0x71784B343A47BE76 ^ (v117 - 0x740EDEC08E4360DELL - ((2 * v117) & 0x17E2427EE3793E44));
  unint64_t v120 = (v113 ^ v106 ^ 0x7955EAEC4D48B80CuLL) >> v112 >> (v112 ^ 1u);
  uint64_t v121 = v119 ^ 0x4A0030B9C78B7E47 ^ (((v119 >> 61) ^ (v119 >> 39) ^ 0xAFF5F4)
                                      - ((2 * ((v119 >> 61) ^ (v119 >> 39) ^ 0xAFF5F4)) & 0x2AC4C2E)
                                      + 0x1DFACB88A7562617);
  uint64_t v122 = (((v119 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v119 << 25) ^ 0x62C1BAB0A0000000) ^ (v121
                                                                                                  - (v121 ^ (v119 << 25) ^ 0x62C1BAB0A0000000)))
        + v121) ^ (8 * v119);
  uint64_t v123 = ((v114 >> 41) | (v114 << 57)) ^ (v114 >> 7) ^ (((v114 << 23) ^ 0x7E34861EB6800000)
                                                      - ((2 * ((v114 << 23) ^ 0x7E34861EB6800000)) & 0x4E3F4EACF6000000)
                                                      + 0x271FA7567B568D78);
  uint64_t v124 = (v118 >> 10) ^ (v118 << 47) ^ (v118 >> 17) ^ (v118 << 54) ^ 0x598FA1532137D1BELL;
  uint64_t v125 = (v124 - ((2 * v124) & 0x35134ED236AC5FCLL) + 0x1A89A7691B562FELL) ^ v118;
  unint64_t v126 = v125 ^ 0x9D4439B5C840702BLL;
  unint64_t v127 = ((v114 ^ (unint64_t)v110) << 36) ^ ((v114 ^ (unint64_t)v110) << 45) ^ ((v114 ^ (unint64_t)v110) >> 19) ^ ((v114 ^ (unint64_t)v110) >> 28) ^ 0xC122535916D4ED0FLL;
  unint64_t v128 = v123 ^ v114 ^ v125;
  uint64_t v129 = v123 ^ v110 ^ (v127 - 0x42545C1395322E5 + (~(2 * v127) | 0x84A8B8272A645CBLL));
  unint64_t v130 = (((v116 << 58) ^ (v116 << 63)) & 0xFC00000000000000 | (v116 >> 6)) ^ v120;
  unint64_t v131 = v116 ^ 0xACC70349B339B5F4 ^ ((v130 ^ 0x31E557ABB13522E0)
                                      - 2 * ((v130 ^ 0x31E557ABB13522E0) & 0x5592E9A5FE710DFBLL ^ v130 & 3)
                                      - 0x2A6D165A018EF208);
  uint64_t v132 = v122 ^ 0x1FB350807E31C757 ^ (v131 - 0x5F9B76F48724FA29 - ((2 * v131) & 0x40C91216F1B60BAELL));
  uint64_t v133 = (v122 ^ 0x40282674F9153D7FLL) & v131;
  uint64_t v134 = ((v126 & ~v132) - 0x5F9B76F48724FA29 - ((2 * (v126 & ~v132)) & 0x40C91216F1B60BAELL)) ^ v122 ^ 0x1FB350807E31C757;
  unint64_t v135 = (v128 ^ 0x9998574222B4C193) & (v125 ^ 0x62BBC64A37BF8FD4) ^ v132;
  unint64_t v136 = (v133 - ((v133 + 0x17FAE2E70732F3CBLL - ((2 * v133) & 0x2FF5C5CE0E65E796)) ^ v129 ^ 0x3DDE119A994D85F6)) ^ ((v129 ^ 0xD5DB0C82618089C2) + 1);
  unint64_t v137 = ((v136 + 0x17FAE2E70732F3CBLL - ((2 * v136) & 0x2FF5C5CE0E65E796)) ^ v129 ^ 0x3DDE119A994D85F6) + v133;
  unint64_t v138 = v134 ^ v137;
  unint64_t v139 = (((2 * v128) ^ 0xCCCF517BBA967CD9) + (v128 ^ 0x9998574222B4C193)) & (v129 ^ 0x2A24F37D9E7F763DLL);
  unint64_t v140 = (((v122 ^ 0xBFD7D98B06EAC280) & (v129 ^ 0xD5DB0C82618089C2))
        - ((2 * ((v122 ^ 0xBFD7D98B06EAC280) & (v129 ^ 0xD5DB0C82618089C2))) & 0xF3A8169E0971E4AELL)
        - 0x62BF4B0FB470DA9) ^ v128;
  unint64_t v141 = v137 ^ v140;
  unint64_t v142 = v137 ^ v140 ^ 0x604C5C0D260C33C4;
  unint64_t v143 = (v134 ^ v137) >> 61;
  unint64_t v144 = v135 ^ v126 ^ v139;
  *((void *)&v110 + 1) = v138 ^ 0x1877DA25;
  *(void *)&long long v110 = v138 ^ 0x425764BB40000000;
  uint64_t v145 = v110 >> 30;
  *((void *)&v110 + 1) = v141 ^ 0x4C64E;
  *(void *)&long long v110 = v141 ^ 0xF7BAFBE8D0E00000;
  uint64_t v146 = (v138 << 25) ^ 0x76B0EFB44A000000;
  unint64_t v147 = v135 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v135 & 0x2011531CB0A0EE4 | (v135 << 58));
  unint64_t v148 = v145 ^ (v143 << 34) ^ 0x84F57132E3442245;
  uint64_t v149 = (v140 >> 41) ^ 0x845FA;
  uint64_t v150 = (v110 >> 19) ^ (v142 << 36) ^ (v142 >> 28) ^ 0x6E8F58A97F6A7E5FLL;
  unint64_t v151 = v141 ^ 0xF3D8E313B2F02E8DLL ^ (v150 - ((2 * v150) & 0x8C431F6C429D186) + 0x46218FB6214E8C3);
  unint64_t v152 = (((2 * ((v135 >> 1) ^ 0x3B6B979E40CC51D4)) & 0x90680C0C44E04462)
        - (((v135 >> 1) ^ 0x3B6B979E40CC51D4) & 0x5936C73633F8FA71)
        + 0x1102E1B1D18DDDC8) ^ ((v135 >> 1) ^ 0x3B6B979E40CC51D4) & 0x5936CF3633F8FA71;
  uint64_t v153 = __ROR8__(v148, 34);
  unint64_t v154 = v147 ^ (v135 << 63);
  *((void *)&v110 + 1) = v140 ^ 0x39;
  *(void *)&long long v110 = v140 ^ 0x108BF4DED5680E00;
  uint64_t v155 = v140 ^ 0xBCC6938F64D0E14DLL ^ ((v110 >> 7) - ((2 * (v110 >> 7)) & 0x589ACEA36371DEE8) - 0x53B298AE4E47108CLL);
  uint64_t v156 = (v153 ^ (v138 >> 39) ^ 0x84AEC9) + v146;
  uint64_t v157 = v153 & v146;
  uint64_t v158 = v155 & v149;
  uint64_t v159 = v155 + v149;
  uint64_t v160 = v156 - 2 * v157;
  uint64_t v161 = v152 ^ 0x3A67CCA7BB7CFE99 ^ (v154 + 0x2B6525166AF12351 - ((2 * v147) & 0x56CA4A2CD5E246A2));
  BOOL v162 = v96 == 0x7809200909112110;
  uint64_t v163 = v161 ^ 0x549ADAE9950EDCAELL;
  if (v162) {
    uint64_t v163 = v152 ^ 0x3A67CCA7BB7CFE99;
  }
  uint64_t v164 = v160 ^ (8 * v138);
  BOOL v162 = ((v152 ^ 0x1102E9B1D18DDDC8) & v154) == 0;
  uint64_t v165 = ((v154 + (v152 ^ 0xEEFD164E2E722237) + 1) ^ 0xFB5DBEFFB7FFFFFFLL)
       + 0x7DF67D6FFB4FFF80
       + ((2 * (v154 + (v152 ^ 0xEEFD164E2E722237) + 1)) & 0xF6BB7DFF6FFFFFFELL);
  if (v162) {
    uint64_t v165 = v161 + 2 * ((v163 ^ 0x2B6525166AF12351) & v147) + 0x79543C6FB34FFF7FLL;
  }
  uint64_t v166 = (v159 - 2 * v158) ^ (v140 << 23);
  *((void *)&v167 + 1) = v165 + 0x6ABC3904CB00081;
  *(void *)&long long v167 = v165 - 0x79543C6FB34FFF7FLL;
  unint64_t v168 = v144 ^ (v144 >> 10) ^ (v144 >> 17) ^ (v144 << 47) ^ (v144 << 54);
  uint64_t v169 = v166 ^ v168;
  unint64_t v170 = __ROR8__(__ROR8__(v135, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v167 >> 61), 3) ^ (v135 >> 6);
  unint64_t v171 = v164 ^ 0xAA6A2D4BA2838D66;
  *(void *)&long long v167 = __ROR8__(__ROR8__(v166, 57) ^ __ROR8__(v151, 57) ^ 0xCBA377C727C8673CLL, 7);
  unint64_t v172 = v170 ^ v164 ^ 0xAA6A2D4BA2838D66;
  uint64_t v173 = (v172 ^ 0x3CBE485844A65555) & (v168 ^ 0x5156C560131506D7);
  v172 ^= 0xC341B7A7BB59AAAALL;
  uint64_t v174 = v172 & (v164 ^ 0x5595D2B45D7C7299);
  unint64_t v175 = v172 ^ (v166 ^ 0x6F6AB4071C800000) & (v168 ^ 0xAEA93A9FECEAF928);
  *((void *)&v167 + 1) = v167 ^ 0x16FDF2E892CF90CELL;
  unint64_t v176 = v173 ^ v171;
  uint64_t v177 = v174 ^ v167 ^ 0x16FDF2E892CF90CELL;
  unint64_t v178 = (v167 ^ 0x16FDF2E892CF90CELL) & (v166 ^ v168 ^ 0xC1C38E98F06AF928);
  unint64_t v179 = (__ROR8__((v167 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v171 ^ v169;
  unint64_t v180 = v179 ^ v177;
  unint64_t v181 = v179 ^ v177 ^ 0x3E3C71670F9506D7;
  *((void *)&v167 + 1) = v179 ^ v177 ^ 0x3D2C8;
  *(void *)&long long v167 = v179 ^ v177 ^ 0x3700522414E00000;
  unint64_t v182 = ((v178 ^ v175) - ((2 * (v178 ^ v175)) & 0xA907146EF9E95540) - 0x2B7C75C8830B5560) ^ v168;
  uint64_t v183 = v176 ^ v177 ^ ((v176 ^ v177) >> 39) ^ (8 * (v176 ^ v177)) ^ ((v176 ^ v177) << 25) ^ ((v176 ^ v177) >> 61);
  unint64_t v184 = __ROR8__(__ROR8__(v175 ^ 0x616B258C5FF13C26, 27) ^ 0x61D86C4195FBD0F1, 37);
  uint64_t v185 = (v167 >> 19) ^ (v181 << 36) ^ (v181 >> 28) ^ 0xB76D41F000000000;
  uint64_t v186 = (v185 - ((2 * v185) & 0x23329275A4690EF0) + 0x1199493AD2348778) ^ v180;
  unint64_t v187 = v175 ^ 0x6DC4FB0BD4FFFF44 ^ ((v175 ^ 0x6DC4FB0BD4FFFF44) >> 1) ^ (v184 << 58);
  *((void *)&v167 + 1) = v179 ^ 0x3C888634586;
  *(void *)&long long v167 = v179 ^ 0xAE5D280000000000 ^ (((v179 << 57) ^ 0xC00000000000000)
                                                  - ((2 * ((v179 << 57) ^ 0xC00000000000000)) & 0x7800000000000000)
                                                  - 0x422B12867AA61534);
  uint64_t v188 = ((v183 ^ 0xABCF8FE7C463E5DLL) + v187 - 2 * ((v183 ^ 0xABCF8FE7C463E5DLL) & v187)) ^ ((v184 >> 6) | (v184 << 63));
  uint64_t v189 = __ROR8__(__ROR8__(v179, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0x392AA1EF68E296F6 ^ (v167 >> 42), 22);
  unint64_t v190 = v182 ^ (v182 >> 10) ^ (((v182 << 54) ^ (v182 << 47)) & 0xFFFF800000000000 | (v182 >> 17));
  BOOL v162 = v68 == 0;
  unint64_t v191 = v189 ^ 0xDD74CA3F78583B7ELL;
  if (v162) {
    unint64_t v191 = 0x228B35C087A7C481;
  }
  unint64_t v192 = v189 & 0xDD74CA3F78583B7ELL ^ __ROR8__(v179, 41) ^ v191 & v189 ^ 0x6E38FAC9F89EBFCBLL;
  unint64_t v193 = (v190 ^ 0x9326FC7D9E6557C1) & ~v188;
  uint64_t v194 = v186 ^ v192 ^ 0x26991B1E55156181;
  unint64_t v195 = v188 & (v183 ^ 0xF543070183B9C1A2);
  unint64_t v196 = v192 & (v190 ^ 0x6CD90382619AA83ELL) ^ v188;
  uint64_t v197 = v194 & ~((v192 - 0x7AFC2F0FDB41C319 - ((2 * v192) & 0xA07A1E0497C79CELL)) ^ v190 ^ 0x16252C8DBADB6B26);
  unint64_t v198 = ((v194 ^ v195 ^ v193) - ((2 * (v194 ^ v195 ^ v193)) & 0x25299ECB2C3B20C6) + 0x1294CF65961D9063) ^ v183;
  uint64_t v199 = v196 ^ v190 ^ 0x16252C8DBADB6B26 ^ (v197 - 0x7AFC2F0FDB41C319 - ((2 * v197) & 0xA07A1E0497C79CELL));
  BOOL v200 = a34 - 604603921 < a27;
  if (a29 > 0x1EDED817 != (a34 - 604603921) < 0xE12127E8) {
    BOOL v200 = a29 > 0x1EDED817;
  }
  *((void *)&v201 + 1) = v196 ^ v190 ^ 0xBADB6B26 ^ (v197
                                                                                 + 616447207
                                                                                 - ((2 * v197) & 0x497C79CE)) ^ 0x149E7;
  *(void *)&long long v201 = v199 ^ 0x29E1AB0124FE0000;
  return (*(uint64_t (**)(void, unint64_t, unint64_t))(v37 + 8 * (v203 ^ (44 * v200))))(v199 ^ __ROR8__(v199, 10) ^ (v201 >> 17), v196 ^ (v196 << 58) ^ ((v196 >> 1) ^ (v196 >> 6) | ((unint64_t)~v196 << 63)), v198 ^ (8 * v198) ^ (v198 << 25) ^ (v198 >> 39) ^ (v198 >> 61) ^ 0x6950EAABEA56688DLL);
}

uint64_t sub_412B4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((LODWORD(STACK[0x3C0]) * (v1 >= v0)) ^ (LODWORD(STACK[0x3FC]) - 382))))();
}

uint64_t sub_412E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((((*(unsigned char *)(v9 + 48 * (v10 + a8) + 40) & 8) == 0) ^ (v8 + 1)) & 1)
                                * a5) ^ v8)))();
}

void sub_41320()
{
}

void sub_4148C()
{
}

void sub_41538()
{
}

uint64_t sub_41540@<X0>(int a1@<W2>, int a2@<W8>)
{
  STACK[0x468] = v2 - 16;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((a1 != v4) * ((a2 + 1159416552) & 0xBAE4B55D ^ 0x54F)) ^ a2)))();
}

uint64_t sub_41598()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((11
                                * (((125 * (v2 ^ 0x5E4)) ^ 0xBCF39AF2) + v1 >= ((v2 + 975544777) & 0xC5DA595F) - 287)) | v2)))();
}

uint64_t sub_415FC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((37
                                * (LODWORD(STACK[0x400]) != (((((v7 + 143) | 0x400) - 1564) | a2) ^ 0x552) * a7
                                                          + 1284424252)) ^ ((v7 + 143) | 0x400))))();
}

uint64_t sub_41650(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((159 * ((a6 + 1 + v6) < 0x10)) ^ (a1 + 457))))();
}

uint64_t sub_41758()
{
  *(_DWORD *)(v2 - 192) = (v0 - 137) ^ (1224239923
                                      * ((-2 - ((~(v2 - 192) | 0xC3FDFBE7) + ((v2 - 192) | 0x3C020418))) ^ 0x314E0630));
  STACK[0x260] = (unint64_t)&STACK[0x1401A874B35F5227];
  *(void *)(v2 - 184) = &STACK[0x1401A874B35F5227];
  STACK[0x258] = (unint64_t)&STACK[0xD547898781B160C];
  *(void *)(v2 - 168) = &STACK[0xD547898781B160C];
  *(unsigned char *)(v2 - 160) = (51 * ((-2 - ((~(v2 + 64) | 0xE7) + ((v2 + 64) | 0x18))) ^ 0x30)) ^ 0x54;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * ((v0 - 1235) ^ 0x803)))(v2 - 192);
  int v4 = *(_DWORD *)(v2 - 176);
  LODWORD(STACK[0x5B4]) = v4;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((v4 == -1373544826) * ((((v0 - 1352) | 0x415) - 112) ^ 0x3C)) ^ (v0 - 1235))))(v3);
}

uint64_t sub_41850()
{
  int v4 = 1224239923
     * ((((v3 - 192) ^ 0xF57BD695 | 0xF4A25E77) - ((v3 - 192) ^ 0xF57BD695) + (((v3 - 192) ^ 0xF57BD695) & 0xB5DA188)) ^ 0xF36A7535);
  *(_DWORD *)(v3 - 192) = v4 + v1 + 1038;
  *(void *)(v3 - 184) = STACK[0x238];
  *(_DWORD *)(v3 - 160) = v4 + LODWORD(STACK[0x22C]);
  *(void *)(v3 - 168) = STACK[0x2A8];
  *(void *)(v3 - 152) = STACK[0x230];
  *(_DWORD *)(v3 - 176) = v0 - v4 - 908489177;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 ^ 0x8E4)))(v3 - 192);
  int v6 = *(_DWORD *)(v3 - 144);
  LODWORD(STACK[0x5B4]) = v6;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v6 == ((v1 - 1777130235) & 0x69ECDFDB) - 1373546186) * (v1 + 584)) ^ v1)))(v5);
}

uint64_t sub_4194C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1523
                                * (((v2 - 1776988671) & 0x69EAB577 ^ 0x554) + (5 * v1) == v0 - 1284426096)) ^ v2)))();
}

uint64_t sub_419A0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a1 + ((a2 + v2) & v3) - 265) & 0x7FFFFFFC) == v5) * (a2 + 1092)) ^ a2)))();
}

uint64_t sub_419D4@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((524 * (a2 == ((v4 + (a1 ^ (a1 - 650)) - 1281) ^ a1 ^ (a1 + 117)))) ^ (v2 + a1 + 717))))();
}

void sub_41A20()
{
}

void sub_41A28()
{
}

void sub_41A30(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x67843F9A1244BAC7);
  int v4 = v2 - 1372200252;
  BOOL v3 = v2 - 1372200252 < 0;
  int v5 = 1372200252 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = (*(_DWORD *)a1 - 235795823 * ((a1 - 590343418 - 2 * (a1 & 0xDCD01306)) ^ 0x487D5A5F)) ^ 0xA;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_41B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(_DWORD *)(v23 - 120) = (v19 + 184) ^ (((((v23 - 120) | 0xA95C0B48) - (v23 - 120) + ((v23 - 120) & 0x56A3F4B0)) ^ 0xC4A81341)
                                        * v22);
  *(void *)(v23 - 112) = v20;
  *(void *)(v23 - 104) = a19;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v19 ^ 0xB5D)))(v23 - 120);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((239
                                              * (*(_DWORD *)(v23 - 116) - 645999914 < ((v19 + 506822285) & 0xE1CA7EDF)
                                                                                    - 100571856)) ^ v19)))(v24);
}

void sub_41C2C()
{
  LODWORD(STACK[0x5B4]) = v0 - 135;
  JUMPOUT(0x815CLL);
}

uint64_t sub_41C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                                                 + 8
                                                                                                 * (((((13 * ((a7 | 0x202) ^ 0x298) - 1994) & v8) == 0) * ((55 * ((a7 | 0x202) ^ 0x210)) ^ 0x3D1)) ^ (a7 | 0x202))))(a1, a2, a3, a4, a5, a6, (v7 - a6));
}

void sub_41C98()
{
  STACK[0x398] = v0;
  int v3 = LODWORD(STACK[0x3FC]) + 184;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8 * SLODWORD(STACK[0x29C])))(STACK[0x2A0], 2965982036);
  int v4 = (*(uint64_t (**)(void))(v2 + 8 * SLODWORD(STACK[0x298])))();
  *int v1 = v4 + 1460018998 - ((v4 << (v3 ^ 9)) & 0xAE0C3E6C);
  JUMPOUT(0x41D10);
}

uint64_t sub_41D74@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v22 = ((v21 - 144) ^ 0x239AD816) * v20;
  *(void *)(v21 - 136) = a18;
  *(_DWORD *)(v21 - 140) = (v19 - 1586) ^ v22;
  *(_DWORD *)(v21 - 128) = a1 ^ v22;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v19 + 409)))(v21 - 144);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (((*(_DWORD *)(v21 - 144) != -1199810916) * (((v19 - 1740) | 0x1A0) ^ 0x78)) ^ v19)))(v23);
}

uint64_t sub_41DF0(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_951B0 + ((612 * (*(_DWORD *)(a2 + 4) == 1284426097)) | 0x402u)))();
}

void sub_41E2C(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((((2 * a1) | 0x97E9331C) - a1 + 873162354) ^ 0xA6008187));
  __asm { BRAA            X8, X17 }
}

void sub_41F00()
{
}

void sub_42330(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(_DWORD *)(v21 - 132) = (a18 ^ a2 ^ a1) + (v18 ^ v20) + v20 - (v19 & (2 * ((a18 ^ a2 ^ a1) + (v18 ^ v20))));
  JUMPOUT(0x42378);
}

uint64_t sub_42400(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,uint64_t a22,unsigned char *a23)
{
  int v26 = *(unsigned char **)(v25 + 96);
  v26[1167] = a23[19];
  v26[1166] = a23[18];
  v26[1165] = a23[17];
  v26[1164] = a23[16];
  v26[1163] = a23[15];
  v26[1162] = a23[14];
  v26[1161] = a23[13];
  v26[1160] = a23[12];
  v26[1159] = a23[11];
  v26[1158] = a23[10];
  v26[1157] = a23[9];
  v26[1156] = a23[8];
  v26[1155] = a23[7];
  v26[1154] = a23[6];
  v26[1153] = a23[5];
  v26[1152] = a23[4];
  v26[1151] = a23[3];
  v26[1150] = a23[2];
  v26[1149] = a23[1];
  v26[1148] = *a23;
  return (*(uint64_t (**)(void))(v24
                                           + 8
                                           * (((*(_DWORD *)(v25 + 72) != ((((((v23 ^ 0x22F) - 13) | 0x205) + 922747155) | 0xC000302B) ^ a4))
                                             * ((((((v23 ^ 0x22F) - 13) | 0x205) - 247397905) & 0xEBEFFEB) - 742)) ^ (((v23 ^ 0x22F) - 13) | 0x205))))(a21);
}

uint64_t sub_42534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v17 + 8 * (((a14 == v14 + v15 - 1561) * ((v16 + 137) ^ 0x70C)) | v16)))();
}

uint64_t sub_42568@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xC76u));
  return v3(v1);
}

void sub_4259C(uint64_t a1)
{
  int v1 = 460628867 * ((((2 * a1) | 0x69ED4642) - a1 - 888578849) ^ 0x7860215C);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_42634()
{
  unsigned int v5 = *(unsigned __int8 *)(v2 + 3) + ((v3 + 87) ^ 0xFFFFFD65);
  return (*(uint64_t (**)(void))(v4 + 8 * ((983 * (((v5 << ((7 * (v3 ^ 0xE1)) ^ 0x1E)) & v1) + (v5 ^ v0) != v0)) ^ v3)))();
}

void sub_42710()
{
  LODWORD(STACK[0x61C]) = v0;
  JUMPOUT(0x15F78);
}

void sub_4272C()
{
  *uint64_t v2 = -687464650;
  (*(void (**)(uint64_t))(v3 + 8 * (v0 + 2006)))(v1);
  JUMPOUT(0x42770);
}

void sub_428A8()
{
}

uint64_t sub_428C0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 732) | 0xA3) ^ (v2 - 572)) * (v0 == v1)) | v2)))();
}

void sub_428F0()
{
}

uint64_t sub_428F8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((896 * ((v2 & 0xFFFFFFFFFFFFFFFuLL) - 1 < ((v3 + v0 + 569) ^ 0x2BDuLL))) ^ (v3 + v0 + 255))))();
}

uint64_t sub_42934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(v8 + (v5 & a4)) = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 == 0) * a5) ^ v6)))();
}

uint64_t sub_42960@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 795));
  return v3(v1);
}

uint64_t sub_42990()
{
  STACK[0x240] = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((31 * ((v1 ^ 0x8D ^ (v0 == ((v1 - 1817) | 0x82) + 1441369917)) & 1)) ^ v1)))();
}

uint64_t sub_429F4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((63 * (v0 > ((v2 + 1174668986) ^ 0x996F207A))) ^ (v2 + 1174668986))))();
}

uint64_t sub_42A30()
{
  STACK[0x280] = v0;
  STACK[0x4F8] = 0;
  int v4 = 235795823 * ((2 * ((v3 - 192) & 0x54638408) - (v3 - 192) - 1415808016) ^ 0x3F3132A9);
  *(_DWORD *)(v3 - 184) = -1886077889 - v4;
  *(void *)(v3 - 176) = STACK[0x268];
  *(void *)(v3 - 160) = STACK[0x270];
  *(void *)(v3 - 192) = 0x6C39C41327E11828;
  *(_DWORD *)(v3 - 168) = v4 + v1 - 1042;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 + 431)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((*(_DWORD *)(v3 - 152) == 34 * (v1 ^ 0x699) - 1373546186)
                                                   * (((v1 + 116608334) & 0xF90CAFDC) - 876)) ^ v1)))(v5);
}

uint64_t sub_42B28(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  return (*(uint64_t (**)(void))(v34
                              + 8
                              * ((((unint64_t)(&a33
                                                    + (v33 + a3)
                                                    + (a19 ^ 0xFFFFFFFFFFFFFBC1 ^ ((a1 - 1902) | 0x432u))) > 0xF)
                                * ((a1 ^ 0x2BF) - 1470)) ^ a1)))();
}

uint64_t sub_42B7C@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v6 = *(_DWORD *)(v3 + 48 * a2 + 36);
  BOOL v8 = v6 - 350232683 > v2 - 376189484 && v6 - 350232683 < SLODWORD(STACK[0x3D0]);
  BOOL v9 = v6 != ((v2 - 500094964) & 0x1DCED7AD ^ (v4 + 1144)) && v8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v9 * a1) ^ (v2 + 721))))();
}

void sub_42BF8()
{
}

uint64_t sub_42C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((53 * (a7 + 1 == v9 + 64)) | v7)))();
}

uint64_t sub_42CF4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((4071 * (v1 + v2 + (((v0 - 1363) | 4) ^ (v0 - 2135210806)) < 0xC)) ^ v0)))();
}

uint64_t sub_42D44()
{
  int v5 = 628203409 * (((v4 - 120) & 0x866D5C19 | ~((v4 - 120) | 0x866D5C19)) ^ 0xFB1AAFD5);
  *(_DWORD *)(v4 - 120) = v5 + v3 + 1172344232;
  *(_DWORD *)(v4 - 112) = v5 + v0 - 1873283900;
  *(void *)(v4 - 104) = v4 + 0x843828D0CDF3351;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v3 + 952)))(v4 - 120);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8
                                                     * ((117
                                                       * (*v2
                                                        + 194279200
                                                        + ((2 * (*(_DWORD *)(v4 - 152) & 0x3F)) ^ 0x1E)
                                                        + (*(_DWORD *)(v4 - 152) & 0x3F ^ 0xBF5D1E70) < ((v3 - 1106) | 0x100u) - 417)) ^ v3)))(v6, 3941953673);
}

uint64_t sub_42EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * ((2479 * (a23 == ((v23 - 165) ^ 0x325F68A5))) ^ v23)))();
}

uint64_t sub_42EFC(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 == ((v2 - 415) ^ (a2 - 581))) * (((v2 - 2091754852) & 0x7CADA3BF) - 739)) ^ v2)))();
}

void sub_42F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  *uint64_t v32 = -687464650;
  (*(void (**)(uint64_t))(v31 + 8 * (v30 ^ 0x871)))(a30);
  JUMPOUT(0x42F98);
}

void sub_430B0()
{
}

uint64_t sub_430B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * ((51
                                * (a15
                                 + v18
                                 - 220
                                 + (unint64_t)(v15 + (((a3 - 1811109261) | 0x4A210166) ^ (v16 + 1))) < ((a3 + 1001) ^ 0x5E7uLL))) ^ a3)))();
}

void sub_43118(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x18D17CD12703C5D3) = v1 + 1;
  JUMPOUT(0x16F38);
}

uint64_t sub_43134@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W7>, uint64_t a6@<X8>)
{
  *(unsigned char *)(v8 + (v7 + a3)) = *(unsigned char *)(a6 + (v7 + a3));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 - 1 == a5) * ((v6 + a1) & a2 ^ a4)) ^ v6)))();
}

void sub_4316C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a6 + v7 + ((a3 - 233113019) & 0xDE4FFFFu) - 234) = v6;
  JUMPOUT(0xDD2CLL);
}

uint64_t sub_431A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v28 - 136) = a24;
  *(void *)(v28 - 128) = a21;
  *(void *)(v28 - 144) = a22;
  *(void *)(v28 - 112) = a24;
  *(_DWORD *)(v28 - 120) = v24
                         + 927
                         + 535753261 * ((((v28 - 144) | 0xEB75583B) - ((v28 - 144) & 0xEB75583B)) ^ 0xE1815614);
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0x934)))(v28 - 144);
  *(void *)(v28 - 112) = a24;
  *(void *)(v28 - 136) = a24;
  *(void *)(v28 - 128) = a21;
  *(void *)(v28 - 144) = a22;
  *(_DWORD *)(v28 - 120) = v24
                         + 927
                         + 535753261
                         * ((((v28 - 144) | 0x508DB2BF) - (v28 - 144) + ((v28 - 144) & 0xAF724D40)) ^ 0x5A79BC90);
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0x934)))(v28 - 144);
  *(_DWORD *)(v28 - 120) = v24
                         + 927
                         + 535753261 * ((~((v28 - 144) | 0x65709993) + ((v28 - 144) & 0x65709993)) ^ 0x907B6843);
  *(void *)(v28 - 136) = a24;
  *(void *)(v28 - 128) = a21;
  *(void *)(v28 - 112) = a24;
  *(void *)(v28 - 144) = a22;
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0x934)))(v28 - 144);
  int v29 = v26 - 584148100;
  int v30 = 1225351577 * ((v28 - 144) ^ 0x239AD816);
  *(_DWORD *)(v28 - 128) = (v29 + 1) ^ v30;
  int v31 = (v24 - 262) ^ v30;
  *(_DWORD *)(v28 - 140) = v31;
  *(void *)(v28 - 136) = v25;
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0x9CF)))(v28 - 144);
  BOOL v32 = *(_DWORD *)(v28 - 144) == -1199810916;
  *(_DWORD *)(v28 - 140) = v31;
  *(_DWORD *)(v28 - 128) = v29 ^ v30;
  *(void *)(v28 - 136) = v25;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v24 ^ 0x9CF)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * (v24 | (8 * v32))))(v33);
}

void sub_43398(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_43420@<X0>(int a1@<W8>, int a2, uint64_t a3, int a4)
{
  unsigned int v8 = (v6 + 169 * (v7 & 0x103A7F7D ^ 0x13A) + 1013503503) & 0xDF3729C2;
  int v9 = 1178560073 * ((&a2 - 575777417 - 2 * ((unint64_t)&a2 & 0xDDAE5577)) ^ 0xEFB85537);
  a3 = v5;
  a2 = (v7 & 0x103A7F7D) - v9 + 844;
  a4 = a1 + v9 - v8 - 1915747784;
  uint64_t v10 = (*(uint64_t (**)(int *))(v4 + 8 * (v7 & 0x103A7F7D ^ 0x950u)))(&a2);
  return sub_434CC(v10);
}

uint64_t sub_434F4@<X0>(int a1@<W3>, int a2@<W8>)
{
  if ((a2 - 845113408) <= 0x18 && ((a1 << (a2 - 64)) & 0x1000581) != 0) {
    return sub_43560();
  }
  else {
    return (*(uint64_t (**)(void))(v5
  }
                                + 8
                                * ((107 * ((*(_DWORD *)(v2 + v4 * (uint64_t)v3 + 40) & 8) == LODWORD(STACK[0x3FC]) - 1360)) ^ (LODWORD(STACK[0x3FC]) + 603))))();
}

uint64_t sub_43560()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((181
                                * (((((v0 - 1355) | 0x50A) ^ 0x50E) & *(_DWORD *)(v1 + v3 * (uint64_t)v2 + 40)) != 0)) ^ (v0 - 218))))();
}

uint64_t sub_435A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  int v26 = 535753261 * ((2 * ((v25 - 144) & 0x7D2F2A0) - (v25 - 144) + 2016218462) ^ 0x72D90371);
  *(_DWORD *)(v25 - 144) = v26 + v22 + 682;
  *(void *)(v25 - 120) = a9;
  *(void *)(v25 - 136) = v24;
  *(_DWORD *)(v25 - 128) = a22 - v26 + ((v22 + 357) ^ 0x46A901D2);
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v22 ^ 0xC71u)))(v25 - 144);
  return sub_4362C(v27);
}

void sub_4362C()
{
  *(_DWORD *)(v2 - 0x5CF1D1600198EA10) = v1;
  *(_DWORD *)(v0 + 48) = -1373544826;
}

uint64_t sub_436CC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((352
                                * (((((v1 ^ 0x5DA) + 1964334134) & 0x8AEAA1B2 ^ ((v1 ^ 0x5DA) - 678232906) & 0x286D07BF ^ 0x795) & v0) == 0)) ^ v1 ^ 0x5DA)))();
}

uint64_t sub_43738@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((833 * (a2 + 1 == v4 + 4)) ^ a1)))(v2);
}

uint64_t sub_43824()
{
  unsigned int v6 = *(unsigned __int8 *)(v4 + 7) + (v3 ^ 0xFFFFFEE0);
  return (*(uint64_t (**)(void))(v5 + 8 * ((336 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_43860()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((15 * (v0 - 1381440370 >= ((v1 - 1735152737) & 0x676C55AB ^ 0x1B2u))) ^ (v1 + 1094))))(229);
}

uint64_t sub_438C8()
{
  int v2 = v0 - 1149;
  int v3 = 617 * ((v0 - 1149) ^ 0x24E);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 493)))(16);
  uint64_t v5 = (unsigned char **)*(&off_99820 + v2 - 584);
  *(unsigned char **)((char *)v5 - 4) = (unsigned char *)v4;
  uint64_t v5 = (unsigned char **)((char *)v5 - 4);
  (*(void (**)(void))(v1 + 8 * (v2 ^ 0xAED)))();
  unsigned int v6 = (void *)(*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0xAFA)))(8);
  uint64_t v7 = (uint64_t)*(&off_99820 + (v2 ^ 0x2C5));
  *(void *)(v7 - 4) = v6;
  *unsigned int v6 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v8 = (uint64_t)*(&off_99820 + v2 - 457);
  *(_DWORD *)(v8 - 8) = 0;
  *(_DWORD *)*(&off_99820 + (v2 ^ 0x21E)) = 0;
  int v9 = *v5;
  uint64_t v10 = *(unsigned char **)(v7 - 4);
  v10[6] = 26;
  *int v9 = -77;
  _DWORD v10[4] = -34;
  uint64_t v11 = *(&off_99820 + (v2 ^ 0x2D2));
  v11[2] = 25;
  v11[9] = 54;
  *(unsigned char *)(v8 + 17) = 68;
  v11[14] = -18;
  v9[4] = 73;
  unsigned char v11[4] = 71;
  *(unsigned char *)(v8 + 16) = 83;
  *(unsigned char *)*(&off_99820 + (v2 ^ 0x2FE)) = -113;
  v9[1] = 80;
  *(unsigned char *)*(&off_99820 + v2 - 556) = 88;
  v11[13] = 121;
  *(unsigned char *)*(&off_99820 + (v2 & 0x3E247C8D)) = 1;
  v9[2] = -44;
  *(unsigned char *)*(&off_99820 + v2 - 523) = 51;
  v10[2] = 80;
  v9[6] = -11;
  *(unsigned char *)*(&off_99820 + v2 - 403) = 25;
  *(unsigned char *)*(&off_99820 + v2 - 432) = 39;
  v9[5] = -22;
  v9[3] = -15;
  v11[8] = 48;
  *(unsigned char *)(v8 + 2) = -52;
  v11[15] = -109;
  *(unsigned char *)*(&off_99820 + (v2 ^ 0x270)) = -109;
  v9[13] = 99;
  *(unsigned char *)*(&off_99820 + v2 - 568) = 119;
  v10[7] = -80;
  *uint64_t v10 = -122;
  unsigned char v9[8] = 34;
  v11[7] = -47;
  v9[11] = 54;
  *(unsigned char *)(v8 + 3) = 3;
  v10[1] = 73;
  v10[5] = -5;
  *(unsigned char *)(v8 - 12) = 23;
  *(unsigned char *)(v8 + 4) = -36;
  v10[3] = 59;
  unsigned int v12 = *v5;
  v12[10] = 45;
  v12[15] = -87;
  *uint64_t v11 = 114;
  v11[11] = -38;
  *(unsigned char *)(v8 + 13) = -92;
  v11[5] = -113;
  v11[10] = 118;
  *(unsigned char *)(v8 + 15) = 52;
  *(v11 - 4) = -89;
  int v13 = v11 - 4;
  *(_WORD *)(v8 - 2) = -3774;
  *(unsigned char *)(v8 + 10) = -121;
  *(unsigned char *)(v8 + 8) = 77;
  *(unsigned char *)(v8 + 14) = 113;
  v12[9] = 31;
  v11[16] = 89;
  v11[6] = -90;
  *(unsigned char *)(v8 - 4) = -85;
  v13[2] = 63;
  v11[1] = -113;
  *(unsigned char *)(v8 - 10) = 34;
  v11[12] = 91;
  v12[12] = -86;
  v13[3] = -92;
  v12[7] = -90;
  v12[14] = -33;
  *(unsigned char *)(v8 + 9) = -105;
  *(unsigned char *)(v8 - 9) = -98;
  v11[3] = 118;
  *(unsigned char *)(v8 + 12) = -119;
  *(unsigned char *)(v8 + 18) = 58;
  *(unsigned char *)uint64_t v8 = 73;
  *(unsigned char *)(v8 - 11) = -15;
  v13[1] = 30;
  *(unsigned char *)(v8 + 7) = 120;
  *(unsigned char *)(v8 + 1) = 69;
  *(_WORD *)(v8 + 5) = -4168;
  *(unsigned char *)(v8 - 3) = -105;
  *(unsigned char *)(v8 + 11) = 79;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * v3))(785727788);
}

void sub_441A4()
{
}

uint64_t sub_4420C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_44224(0, a2, a3, a4, a5, a5 & 0xFFFFFFE0);
}

uint64_t sub_44224@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W5>, int a4@<W6>, uint64_t a5@<X8>)
{
  uint64_t v11 = (a2 + v8 - a1);
  long long v12 = *(_OWORD *)(v7 + v11 - 15);
  long long v13 = *(_OWORD *)(v7 + v11 - 31);
  uint64_t v14 = a5 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v9 + a1 == a3) * v10) ^ (v6 + a4 - 1265))))();
}

uint64_t sub_4426C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1827
                                * (((v1 + ((v2 - 540) | 0x11C) - 287) & (2 * (*(unsigned __int8 *)(v3 + 8) - 11)))
                                 + ((*(unsigned __int8 *)(v3 + 8) - 11) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_442B4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0xFDAC9EBF)
                       + 526347645
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0xFF7F);
  return 0;
}

void sub_442EC()
{
}

uint64_t sub_442F4(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v8 = ((v4 + 295) ^ (a3 - 585)) + v5;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(v6 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 - 1 == a4) * a2) | (v4 - 296))))();
}

uint64_t sub_44330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((240 * (v7 == 24)) ^ a6)))();
}

uint64_t sub_44388@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v47 = (*(uint64_t (**)(void, void, uint64_t))(v45 + 8 * ((v43 ^ 0x745u) + 838)))(LODWORD(STACK[0x490]), (a1 + 1), a37);
  int v54 = ((2 * v47) & 0xFBB7FBD6) + (v47 ^ 0x7DDBFDEB);
  int v55 = STACK[0x3FC];
  if (v54 == 2111569387)
  {
    char v57 = (char *)&STACK[0x670] + v44 + ((16 * v55) ^ 0xD324A27F925647D3);
    STACK[0x5E0] = (unint64_t)v57;
    STACK[0x3C8] = (unint64_t)(v57 + 228);
    LODWORD(STACK[0x454]) = 713989200;
    STACK[0x468] = v44 + (v55 - 70) - 1482;
    STACK[0x4B0] = 0;
    LODWORD(STACK[0x4F4]) = 1284426096;
    STACK[0x3D0] = (unint64_t)v57;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8 * ((v55 - 230) ^ (16 * (v57 == (char *)-248)))))(v47, v48, 1373504863, v49, v50, v51, v52, v53);
  }
  else if (v54 == -1914962450)
  {
    LODWORD(STACK[0x5CC]) = 1373504958;
    return (*(uint64_t (**)(void))(v45
                                + 8
                                * (((STACK[0x580] != 0) * (((LODWORD(STACK[0x3FC]) - 1267) ^ 0x6D2) - 1469)) ^ (LODWORD(STACK[0x3FC]) + 527))))();
  }
  else
  {
    int v58 = STACK[0x3FC];
    int v59 = 1374699841 * ((((2 * (v46 - 192)) | 0x559CCA9A) - (v46 - 192) - 718169421) ^ 0x473A7D44);
    *(_DWORD *)(v46 - 176) = (v54 - ((2 * v54 + 71828522) & 0x5C42BD0C) + 809853083) ^ v59;
    *(_DWORD *)(v46 - 192) = (v58 - 627) ^ v59;
    *(void *)(v46 - 184) = a43;
    uint64_t v60 = (*(uint64_t (**)(uint64_t))(v45 + 8 * a35))(v46 - 192);
    return (*(uint64_t (**)(uint64_t))(v45
                                              + 8
                                              * (((STACK[0x580] != 0) * (((v58 - 1267) ^ 0x6D2) - 1469)) ^ (v58 + 527))))(v60);
  }
}

uint64_t sub_445D4(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 - 747) | 0x24) ^ 0x63) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_44604@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  *(_DWORD *)(*v8 + 4 * (a6 + v7 + 415)) = a5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((((a2 + 829 + a1) & a3) + 1051) ^ a4) * (v9 == 0)) ^ (a2 + 829))))();
}

void sub_4465C()
{
}

uint64_t sub_44664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v7 = (v3 - 1063364190) & 0x3F61A7BF;
  uint64_t v8 = *(void *)(v5 - 0x7761D79CB8DF4D13);
  int v9 = *(unsigned __int8 *)(v8 + (v4 - 277809776)) ^ 0xE5;
  int v10 = ((*(unsigned __int8 *)(v8 + ((551 * (v7 ^ 0x725)) ^ 0xEF70F3F8) + v4) ^ 0xE5) << 24) | ((*(unsigned __int8 *)(v8 + v4 - 277811378 + ((v7 - 1115662435) & 0x427FA77Cu)) ^ 0xE5) << 16) | ((*(unsigned __int8 *)(v8 + (v4 - 277809777)) ^ 0xE5) << 8) | v9;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((13
                                * (((v10 + v2 - 2 * (v10 & 0x2E215E87 ^ v9 & 1)) & 0xFFFFFF ^ 0x215E86)
                                 - (*(_DWORD *)(a1 + 32) ^ v6) != -2106532186)) ^ v7)))();
}

void sub_44770()
{
}

void sub_44778()
{
  STACK[0x538] = STACK[0x4B8];
  JUMPOUT(0x233ACLL);
}

uint64_t sub_44794()
{
  STACK[0x3A0] = STACK[0x570];
  LODWORD(STACK[0x528]) = -1800160278;
  return sub_1AF20();
}

uint64_t sub_447D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  a17 = v19 - 460628867 * (((&a15 | 0xB65DA74D) + (~&a15 | 0x49A258B2)) ^ 0xFACB2531) - 1109;
  a15 = &STACK[0x2F7E69BD89C7115];
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v19 + 528)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((3669
                                              * (a16 == ((v19 + 1501648981) & 0xA67EA779)
                                                      + ((v19 - v17 - 1578) ^ 0x357246FF))) ^ v19)))(v20);
}

void sub_448A0()
{
}

uint64_t sub_448E4@<X0>(unsigned int a1@<W8>, uint64_t a2)
{
  *(unsigned char *)(a2 + (v3 - 2122148335)) = *(unsigned char *)(v5 + (v3 - 2122148335))
                                                   - ((2 * *(unsigned char *)(v5 + (v3 - 2122148335))) & 0xCA)
                                                   - 27;
  unsigned int v7 = (v6 ^ 0xDB4C8125) + v3;
  int v8 = (v2 < a1) ^ (v7 < a1);
  BOOL v9 = v7 < v2;
  if (v8) {
    BOOL v9 = v2 < a1;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((v9 | (4 * v9)) ^ v6)))();
}

uint64_t sub_44958()
{
  BOOL v4 = v0 + 1343072158 < (int)(v2 + 1837686100);
  if (v2 > 0x127722AB != v0 + 1343072158 < (v1 ^ 0x356) - 309798465) {
    BOOL v4 = v2 > 0x127722AB;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 | (4 * v4)) ^ v1)))();
}

uint64_t sub_449E0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 ^ ((a1 - 1448) | 0x401) ^ 0x479u) < 8) * (((a1 - 1264) | 0x200) - 759)) ^ a1)))();
}

uint64_t sub_44A24(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v11 = (_DWORD *)(v8 + 4 * (v4 + v9));
  int v12 = *(v11 - 8) ^ *(v11 - 3);
  int v13 = v12 + v7 - ((v12 << ((2 * a4) ^ 0x7F)) & v5);
  int v14 = *(v11 - 16) ^ *(v11 - 14);
  HIDWORD(v15) = v14 ^ 0x2E215E86 ^ v13;
  LODWORD(v15) = v14 ^ ~v13;
  *uint64_t v11 = (v15 >> 31) + v7 - (v5 & (2 * (v15 >> 31)));
  return (*(uint64_t (**)(void))(v6 + 8 * ((1083 * (v4 + 1 == v10 + 80)) ^ (a4 + 266))))();
}

uint64_t sub_44AC0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((31
                                * ((((v4 - a3) ^ 0x6E48B22F) & (2 * (*(unsigned __int8 *)(a2 + 3) - 137)))
                                 + ((*(unsigned __int8 *)(a2 + 3) - 137) ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_44B08@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  int v8 = STACK[0x334];
  uint64_t v9 = (v3 + v4);
  int v10 = (-88 * (LODWORD(STACK[0x334]) ^ 0x4A) - 107) ^ *(unsigned __int8 *)(v2 + v9);
  int v11 = ((*(unsigned __int8 *)(v2 + (v9 + 2)) ^ v5) << 16) | ((*(unsigned __int8 *)(v2
                                                                                                + (v9 + 3)) ^ v5) << 24) | v10 | ((*(unsigned __int8 *)(v2 + (v9 + 1)) ^ v5) << 8);
  *(_DWORD *)(a2 + v9) = v11 + v7 - 2 * (v11 & (a1 + 17) ^ v10 & 0x11111111);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((2 * ((v3 + 4 + v4) > 0x3F)) | (4 * ((v3 + 4 + v4) > 0x3F))) ^ v8)))();
}

uint64_t sub_44BB0()
{
  *(_DWORD *)(v2 - 192) = 1225351577
                        * ((2 * (((v2 - 192) ^ 0xDBA188F) & 0x4A25CCB4) - ((v2 - 192) ^ 0xDBA188F) - 1243991221) ^ 0x9BFAF3D2)
                        + 426522076
                        + v0
                        + 830;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0x83F)))(v2 - 192);
  *(unsigned char *)(v2 - 160) = (51 * ((((2 * ((v2 + 64) ^ 0x5C)) | 0xB0) - ((v2 + 64) ^ 0x5C) + 40) ^ 0x53)) ^ 0x55;
  *(void *)(v2 - 184) = STACK[0x260];
  *(void *)(v2 - 168) = STACK[0x258];
  *(_DWORD *)(v2 - 192) = (v0 + 1112) ^ (1224239923
                                       * ((((2 * ((v2 - 192) ^ 0x62BB5C)) | 0x6FC4CFB0)
                                         - ((v2 - 192) ^ 0x62BB5C)
                                         + 1209899048) ^ 0x45332153));
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 2063)))(v2 - 192);
  STACK[0x338] = 0;
  LODWORD(STACK[0x2D0]) = 1746339940;
  return sub_44CB4(v3);
}

uint64_t sub_44CB4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((STACK[0x338] == 0) ^ (v0 + 45)) & 1)
                                     * (((v0 + 1103635055) & 0xBE37DBED) - 725)) ^ (v0 - 1235))))();
}

void sub_44D00()
{
}

uint64_t sub_44D10@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((((a1 + 671) ^ 0x49 ^ (5 * ((a1 + 1237) ^ 0x76C)))
                                              * (*(_DWORD *)(v17 - 116) == *(_DWORD *)(v17 - 120))) ^ (a1 + 1237))))(a16);
}

uint64_t sub_44D60()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v0 & 2) != ((v1 + 214) ^ 0x626)) * (((v1 - 698) ^ 0x658) - 1175)) ^ (v1 - 698))))();
}

uint64_t sub_44D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + v26 + a5) = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * ((896
                                              * ((((v27 + 43) ^ ((((v27 - 128) - 505) & v25) == 8)) & 1) == 0)) ^ (v27 - 128))))(8);
}

uint64_t sub_44E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (((((v36 - 414) | 0x21) ^ 0x78A) * ((a9 + 501) < 4)) ^ v36)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

void sub_44E40(int a1@<W8>)
{
  (*(void (**)(void, void, void, void, unint64_t *, unint64_t, void, unint64_t *))(v3 + 8 * (v1 + 1228)))(*v2, (a1 + 1), LODWORD(STACK[0x228]), v2[13] - 184073435, &STACK[0x660], STACK[0x338], LODWORD(STACK[0x2D0]) - 1746341300 + (v1 ^ 0x66Fu), &STACK[0x650]);
  JUMPOUT(0x18F14);
}

uint64_t sub_44EDC@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, uint64_t a5@<X8>)
{
  uint64_t v10 = (a3 + a2 + a1 + 1285) + a5;
  uint64_t v11 = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a1 + 5) & 0xF;
  unint64_t v12 = v11 + v7 - v10;
  unint64_t v13 = (v11 | v8) - v10;
  unint64_t v14 = (v11 | v6) - v10;
  BOOL v18 = (unint64_t)(v5 - a5) < 0x10 || v12 < 0x10 || v13 < 0x10 || v14 < 0x10;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((2 * a4) ^ 0x3E6 ^ (a4 + 276)) * v18) | a4)))();
}

uint64_t sub_44F50(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, int8x16_t a5, int32x4_t a6, int8x16_t a7, int8x16_t a8)
{
  a8.i64[0] = *(void *)(v13 + 4);
  a8.i32[2] = *(_DWORD *)(v13 + 12);
  int8x16_t v15 = vextq_s8(a1, a8, 0xCuLL);
  int8x16_t v16 = a8;
  v16.i32[3] = *(_DWORD *)(v13 + 16);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a3), vandq_s8(v15, a2)), 1uLL), a4);
  v18.i32[0] = *(_DWORD *)(v10 + 4 * (*(_DWORD *)(v13 + 4) & 1));
  v18.i32[1] = *(_DWORD *)(v10 + 4 * (*(_DWORD *)(v13 + 8) & 1));
  v18.i32[2] = *(_DWORD *)(v10 + 4 * (*(_DWORD *)(v13 + 12) & v11));
  v18.i32[3] = *(_DWORD *)(v10 + 4 * (v16.i8[12] & 1));
  *(int8x16_t *)uint64_t v13 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v13 - 908), v18), a7), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), a5)), a6));
  return (*(uint64_t (**)(void))(v14 + 8 * (((v9 == 4) * v12) ^ v8)))();
}

uint64_t sub_44F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(v25 - 104) = (v23 + 387) ^ (1734042137
                                        * ((((v25 - 120) | 0x4DF9F6BF) + (~(v25 - 120) | 0xB2060940)) ^ 0x113735F3));
  *(void *)(v25 - 120) = a23;
  *(void *)(v25 - 112) = a19;
  (*(void (**)(uint64_t))(v24 + 8 * (v23 + 1054)))(v25 - 120);
  *(_DWORD *)(v25 - 120) = (v23 + 99) ^ (1374699841
                                       * (((v25 - 120) & 0x5473D2EE | ~((v25 - 120) | 0x5473D2EE)) ^ 0xC6783518));
  *(void *)(v25 - 112) = a21;
  *(void *)(v25 - 104) = a23;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 + 1128)))(v25 - 120);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (int)(((*(_DWORD *)(v25 - 116) > 0x26812D29u)
                                                   * ((((v23 - 709) | 0xAC) ^ 0xFFFFFD00) + (v23 ^ 0xB5))) | v23)))(v26);
}

uint64_t sub_4508C(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(v8 + 1424) = 568327263;
  *(_DWORD *)(v8 + 1428) = 604952942;
  *(void *)(v8 + 1432) = v6;
  *(void *)(v8 + 1440) = v6;
  *(_DWORD *)(v8 + 1448) = v7;
  *(__n128 *)(v8 + 1452) = a1;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v5 - 1032) | 0x400) ^ (8 * (a5 & ~(((v5 - 1032) | 0x400) - 1143))))))();
}

void sub_450EC()
{
  int v2 = 1607986108 - v0;
  if (*v1 + 775283396 >= 0) {
    int v2 = v0 + 1607986366;
  }
  *int v1 = *v1 - 1607986237 + v2;
  JUMPOUT(0x4517CLL);
}

uint64_t sub_451D8(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v7 + v5) = *(void *)(v4 + v5);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 == 0) * v3) ^ a3)))();
}

uint64_t sub_45208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return sub_5B30(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_45228@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(_DWORD *)(v2 + 4 * (a1 + v4 + 1603)) == v1)
                                * (((v3 - 1058) | 4) ^ 0x3E9)) ^ (v3 - 1054))))();
}

uint64_t sub_4526C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (((v9 + v10 - 1719 + (v10 ^ (v9 - 1667)) + 1857602100) * (a9 != 0)) ^ v10)))();
}

uint64_t sub_452B0(uint64_t a1)
{
  return sub_19F38(a1);
}

void sub_452C4(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (1759421093 * ((a1 - 2 * (a1 & 0xF4FD5159) - 184725159) ^ 0x4780E10D));
  int v2 = *(_DWORD *)(a1 + 24) - 1759421093 * ((a1 - 2 * (a1 & 0xF4FD5159) - 184725159) ^ 0x4780E10D);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 40);
  int v5 = *(_DWORD *)(a1 + 48) ^ (1759421093 * ((a1 - 2 * (a1 & 0xF4FD5159) - 184725159) ^ 0x4780E10D));
  unsigned int v6 = 1224239923 * ((&v8 & 0x29B9FB8 | ~(&v8 | 0x29B9FB8)) ^ 0xFD79D90);
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v8 = v4;
  int v14 = v2 - v6 + 617881708;
  int v10 = v6 ^ (v1 + 368399892);
  unsigned int v11 = v5 - v6 - ((2 * v5 + 775612002) & 0xEA303576) + 204836332;
  uint64_t v12 = v4;
  uint64_t v13 = v3;
  uint64_t v7 = (char *)*(&off_99820 + v1 - 133) - 4;
  (*(void (**)(uint64_t *))&v7[8 * (v1 ^ 0x9BF)])(&v8);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_45450()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 - 584148100 < (v0 + 2147482715)) * (3 * (v0 ^ 0x34C) + 1109)) ^ v0)))();
}

uint64_t sub_454A8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, _DWORD *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v23 = 3804331 * ((-1066449781 - ((v22 - 136) | 0xC06F448B) + ((v22 - 136) | 0x3F90BB74)) ^ 0xC50E4822);
  int v26 = v20 - 1593;
  *(_DWORD *)(v22 - 120) = v23 + v20 - 1593 + 717;
  *(_DWORD *)(v22 - 136) = v23 + a1 - a14 + 1113871666;
  *(_DWORD *)(v22 - 132) = v23
                         + v20
                         - 1543
                         + ((((383 * ((v20 - 1593) ^ 0x1A)) ^ 0xEBA42E7E) + a1) & 0xFFFFFFF0)
                         + 540038096;
  *(void *)(v22 - 128) = a20;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v21 + 8 * ((v20 - 1593) ^ 0x898)))(v22 - 136);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((113 * (*a15 != -1373544826)) ^ v26)))(v24);
}

uint64_t sub_455B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, unsigned int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * (((*(_DWORD *)(*v8 + 4 * a7) != a5) * (8 * (a6 ^ a4) - 622)) ^ a6)))();
}

void sub_455F0()
{
}

uint64_t sub_45608(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((a4 & ~((v7 - 1204) ^ (*(_DWORD *)(v4 + 48 * v6 + 32) == v5))) * (v7 ^ 0x62E)) | v7)))();
}

uint64_t sub_45644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  *(void *)(*(void *)(v9 + 96) + 1544) = *(void *)(a2 + 8);
  *(_DWORD *)(*(void *)(v9 + 96) + 1536) = *(_DWORD *)(a2 + 4);
  return v8 ^ a8;
}

uint64_t sub_4569C()
{
  int v0 = (unint64_t *)*(&off_99820
                           + ((-19 * (dword_A4560 ^ 0xED ^ qword_A39F8)) ^ byte_80550[byte_7ADD0[(-19 * (dword_A4560 ^ 0xED ^ qword_A39F8))] ^ 0x35])
                           - 71);
  int v1 = *(&off_99820
       + (byte_80450[byte_7ABD0[(-19 * ((qword_A39F8 + *v0) ^ 0xED))] ^ 0xD1] ^ (-19 * ((qword_A39F8 + *v0) ^ 0xED)))
       - 145);
  unint64_t v2 = (*v1 - *v0) ^ (unint64_t)&v6;
  *int v0 = (1469428717 * v2) ^ 0xEC43BA4126E9F5EDLL;
  *int v1 = 1469428717 * (v2 ^ 0xEC43BA4126E9F5EDLL);
  unsigned int v8 = 1734 - 535753261 * (&v7 ^ 0xAF40E2F);
  int v7 = (char *)*(&off_99820
               + ((-19 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0xED)) ^ byte_80450[byte_7ABD0[(-19 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0xED))] ^ 0x1E])
               + 119)
     - 4;
  uint64_t v3 = (char *)*(&off_99820
               + ((-19 * (dword_A4560 ^ 0xED ^ qword_A39F8)) ^ byte_77E70[byte_84140[(-19 * (dword_A4560 ^ 0xED ^ qword_A39F8))] ^ 0xC3])
               - 88)
     - 4;
  (*(void (**)(char **))&v3[8
                                     * (byte_7ACD0[byte_77D70[(-19
                                                                                               * (*(_DWORD *)v0 ^ 0xED ^ *(_DWORD *)v1))] ^ 0xAF] ^ (-19 * (*(_DWORD *)v0 ^ 0xED ^ *(_DWORD *)v1)))
                                     + 16400])(&v7);
  int v7 = (char *)*(&off_99820
               + (byte_80550[byte_7ADD0[(-19 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xED))] ^ 0x35] ^ (-19 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xED)))
               - 34)
     - 4;
  unsigned int v8 = 1734 - 535753261 * (((&v7 | 0x307CB9A4) - (&v7 & 0x307CB9A4)) ^ 0x3A88B78B);
  (*(void (**)(char **))&v3[8
                                     * ((-19 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xED)) ^ byte_7ACD0[byte_77D70[(-19 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xED))] ^ 0xA3])
                                     + 17056])(&v7);
  unsigned int v4 = 3804331 * ((~&v7 & 0x2C427A4A | &v7 & 0xD3BD85B5) ^ 0xD6DC891C);
  BYTE4(v7) = 66 - v4;
  LODWORD(v7) = v4 ^ 0x4B4;
  return (*(uint64_t (**)(char **))&v3[8
                                               * ((-19 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xED)) ^ byte_80550[byte_7ADD0[(-19 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0xED))] ^ 0xA3])
                                               + 16400])(&v7);
}

void sub_45A44(uint64_t a1)
{
  int v2 = 1374699841 * (((a1 | 0xEA022A98) - (a1 & 0xEA022A98)) ^ 0x87F63291);
  int v3 = *(_DWORD *)(a1 + 40) + v2;
  unsigned int v5 = v3 + 460628867 * ((2 * (&v5 & 0x5CCA69C) - &v5 - 97298078) ^ 0xB6A5DB1F) - 231789056;
  unsigned int v4 = (char *)*(&off_99820 + v3 - 114) - 4;
  (*(void (**)(unsigned int *))&v4[8 * v3 + 15520])(&v5);
  __asm { BRAA            X2, X17 }
}

uint64_t sub_45BDC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((37 * (v2 ^ 0x15D)) ^ 0x84) * (v0 == v1)) ^ v2)))();
}

void sub_45C24()
{
}

void sub_45C30()
{
  uint64_t v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x45C94);
}

uint64_t sub_45D3C@<X0>(uint64_t a1@<X8>)
{
  return sub_45DAC(v1 - 0x67843F9A1244BAC3, a1 - 0x67843F9A1244BAC3, 0x357FADEEBDF6BAF7, 0x17BED75EELL, 0xCFFFFFFFFFDBDFEFLL, 670);
}

uint64_t sub_45DAC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v18 = 4 * (v16 + v13);
  int v19 = v6 + v8 + (*(_DWORD *)(*a1 + v18) ^ (v14 + v7 - 506));
  *(_DWORD *)(*a2 + v18) = v19 + v14 - (v17 & (2 * v19));
  int v20 = v9 + v16 + 507;
  BOOL v22 = v20 > v10 || v20 < v11;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v22 * a6) ^ v12)))();
}

uint64_t sub_45E20()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(v0 + 4 * (v2 + v5 - 1)) != v3) * ((v1 ^ 0x1D) - 446)) ^ v1)))();
}

uint64_t sub_45E58@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8
                                   * ((114 * (*(unsigned __int8 *)(v2 + (a1 + v3 - 1)) == 229)) ^ a2)))();
}

uint64_t sub_45EA0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((v1 ^ 0x23A ^ (82 * (v1 ^ 0x41A) + 1147))
                                * (*(_DWORD *)(v2 - 0x7761D79CB8DF4CFBLL) == -1373544826)) ^ v1)))();
}

uint64_t sub_45EFC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * (int)(((v3 < ((29 * ((4 * (a3 ^ 0x35D)) ^ 0x453)) ^ 0x11Fu))
                                                  * ((4 * (a3 ^ 0x35D) + 1455809316) & 0xA93A19FB ^ 0x14D)) ^ (4 * (a3 ^ 0x35D)))))(0);
}

void sub_45F60()
{
}

void sub_45F7C()
{
}

uint64_t sub_460D8()
{
  return sub_460E0();
}

uint64_t sub_460E0()
{
  int v6 = v0 - 336609732;
  int v7 = 3804331 * ((~(v2 | 0x4BF46FA) + (v2 & 0x4BF46FA)) ^ 0x1DE4A53);
  *(void *)(v5 - 184) = v3;
  *(_DWORD *)(v5 - 192) = v7 + v1 + 45;
  *(_DWORD *)(v5 - 188) = v6 ^ v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v1 ^ 0xD36)))(v5 - 192);
  return ((uint64_t (*)(uint64_t))STACK[0x4C0])(v8);
}

uint64_t sub_46164()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x7761D79CB8DF4D03)
     - ((((v0 - 988) ^ 0xDEE1E934) + 2 * *(_DWORD *)(v1 - 0x7761D79CB8DF4D03)) & 0xF12F46B6)
     - 402089752;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((91 * (((2 * v3) & 0xDB777F3E ^ 0xD1274636) + (v3 ^ 0x952C1CC4) - 2100224 == 1838920607)) ^ v0)))();
}

uint64_t sub_46200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18)
{
  int v22 = (v18 + v21 + 1010) | 0x254;
  int v23 = v18 + v21 + 1636;
  a17 = v21
      + 1734042137 * ((2 * (&a17 & 0x3FB13888) - &a17 + 1078904692) ^ 0x1C800439)
      + 1889702590;
  uint64_t v24 = (*(uint64_t (**)(unsigned int *))(v20 + 8 * (v18 + v21 + 2163)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((3730 * (a18 == (v22 ^ (v19 - 1430)))) ^ v23)))(v24);
}

void sub_462A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v29 = v24 ^ 0x6CC;
  *(void *)(v28 - 128) = v25;
  *(_DWORD *)(v28 - 120) = v29
                         + 535753261 * ((((v28 - 144) | 0x1A4A4193) - ((v28 - 144) & 0x1A4A4193)) ^ 0x10BE4FBC)
                         + 369;
  *(void *)(v28 - 112) = a24;
  *(void *)(v28 - 144) = v27;
  *(void *)(v28 - 136) = a24;
  (*(void (**)(uint64_t))(v26 + 8 * (v29 + 1214)))(v28 - 144);
  *(_DWORD *)(v28 - 104) = (v29 + 1007) ^ (1759421093
                                         * ((2 * ((v28 - 144) & 0x52F3DA10) - (v28 - 144) - 1391712791) ^ 0x1E7195BD));
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a24;
  *(void *)(v28 - 144) = a21;
  *(void *)(v28 - 136) = a17;
  *(void *)(v28 - 128) = v27;
  (*(void (**)(uint64_t))(v26 + 8 * (v29 ^ 0xBE9)))(v28 - 144);
  JUMPOUT(0x4890);
}

unsigned char *sub_46390(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_4647C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1228
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == v0 + ((v2 - 260) | 4) - 287)) ^ v2)))();
}

uint64_t sub_464C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  return sub_1CC44((const char *)&a40, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
           a27,
           a28,
           a29,
           a30,
           a5,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_464D4()
{
  LODWORD(STACK[0x2D0]) = STACK[0x4A0];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((30
                                * (((v0 - 1102148613 < ((((v1 + 425) ^ 0x11A) - 659) ^ 0x6Du)) ^ (37 * ((v1 - 87) ^ 0x1B))) & 1)) ^ (v1 + 425) ^ 0x11A)))();
}

uint64_t sub_46544@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  if (a2) {
    BOOL v8 = a6 == v6;
  }
  else {
    BOOL v8 = 1;
  }
  int v10 = !v8 && a3 != 0;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v10 * (((11 * (a1 ^ 0x7BF) - 287262792) & 0x111F4699) - 1530)) ^ a1)))();
}

uint64_t sub_465AC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                 + (v2 ^ (v0 - 1659) ^ (*(unsigned __int8 *)(v3 + 1) - 134)) == v0)
                                * (v2 - 1648)) ^ (v2 - 1289))))();
}

uint64_t sub_465F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, unsigned int a7, unint64_t a8)
{
  *(unsigned char *)(a1 + (v12 + v14)) = *(unsigned char *)(v8 + (((_BYTE)v12 + (_BYTE)v14) & 0xF)) ^ (*(unsigned char *)(v15 + (v12 + v14)) - 108) ^ *(unsigned char *)(v10 + (((_BYTE)v12 + (_BYTE)v14) & 0xF)) ^ (((v12 + v14) & 0xF) * v13) ^ *(unsigned char *)(v9 + (((_BYTE)v12 + (_BYTE)v14) & 0xF) + ((v11 + a6) & a7 ^ a8));
  return (*(uint64_t (**)(void))(v16 + 8 * ((((v12 + 1 + v14) > 0x14F) * a5) ^ v11)))();
}

void sub_4665C()
{
}

uint64_t sub_46668@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((118
                                * (a1 == ((v1 - 201591976) & 0x5CEC6F12)
                                       + ((v1 - v3 - 1055) ^ 0xFFFFFFFFFFFFFFE0))) ^ v1)))();
}

uint64_t sub_466B0@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + (v6 + v3)) = *(unsigned char *)(a1 + (v6 + v3));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 != v2) * v5) ^ v4)))();
}

id sub_46D6C(uint64_t a1)
{
  int v2 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "Books app was removed - removing assets", v4, 2u);
  }

  return [*(id *)(a1 + 32) _purgeContentForMediaType:2];
}

void sub_46E58(uint64_t a1)
{
  int v2 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "Music app was removed - cancelling sync session and removing assets", buf, 2u);
  }

  int v3 = +[ATSession sessionsWithSessionTypeIdentifier:ATSessionTypeDeviceSync];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v9 objects:v14 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v10;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v10 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        if (([v8 isCancelled] & 1) == 0
          && ([v8 isFinished] & 1) == 0)
        {
          [v8 cancel];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v9 objects:v14 count:16];
    }
    while (v5);
  }
  [*(id *)(a1 + 32) _purgeContentForMediaType:8];
}

void sub_47388(uint64_t a1, void *a2)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  id v3 = a2;
  id v4 = +[NSNumber numberWithUnsignedInt:v2];
  uint64_t v8 = v4;
  id v5 = +[NSArray arrayWithObjects:&v8 count:1];
  id v7 = 0;
  [v3 executeUpdate:@"DELETE FROM artwork WHERE artwork_token IN (SELECT artwork_token FROM artwork JOIN artwork_token USING (artwork_token) JOIN item ON artwork_token.entity_pid=item.item_pid WHERE item.media_type=?)" withParameters:v5 error:&v7];

  id v6 = v7;
}

void sub_47460(void *a1, uint64_t a2, void **a3)
{
  id v5 = (void *)a1[4];
  id v6 = +[NSNumber numberWithLongLong:a2];
  [v5 addObject:v6];

  id v7 = *a3;
  if (*a3)
  {
    long long v9 = (void *)a1[5];
    uint64_t v8 = (void *)a1[6];
    id v10 = v7;
    id v11 = [v8 mediaFolderPathByAppendingPathComponent:v10];
    [v9 addObject:v11];
  }
}

uint64_t sub_47520(uint64_t a1)
{
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id obj = *(id *)(a1 + 32);
  id v1 = [obj countByEnumeratingWithState:&v16 objects:v22 count:16];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = *(void *)v17;
    uint64_t v4 = ML3TrackPropertyLocationFileName;
    uint64_t v5 = ML3TrackPropertyBaseLocationID;
    uint64_t v6 = ML3EntityPropertyKeepLocal;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v17 != v3) {
          objc_enumerationMutation(obj);
        }
        id v8 = objc_msgSend(objc_alloc((Class)ML3Track), "initWithPersistentID:inLibrary:", objc_msgSend(*(id *)(*((void *)&v16 + 1) + 8 * (void)v7), "longLongValue"), *(void *)(a1 + 40));
        v20[0] = v4;
        v20[1] = v5;
        v21[0] = &stru_9B528;
        v21[1] = &off_9C9D8;
        v20[2] = v6;
        v21[2] = &off_9C9D8;
        long long v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:3];
        unsigned __int8 v10 = [v8 setValuesForPropertiesWithDictionary:v9];

        if ((v10 & 1) == 0)
        {
          id v11 = _ATLogCategorySyncBundle();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, "failed to clear properties of tracks no longer in the playlist", buf, 2u);
          }
        }
        id v7 = (char *)v7 + 1;
      }
      while (v2 != v7);
      id v2 = [obj countByEnumeratingWithState:&v16 objects:v22 count:16];
    }
    while (v2);
  }

  return 1;
}

void sub_478E8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 216) removeObject:*(void *)(a1 + 40)];
  id v8 = [*(id *)(a1 + 40) sessionTypeIdentifier];
  if ([v8 isEqualToString:ATSessionTypeDeviceSync])
  {
    id v2 = [*(id *)(a1 + 40) dataClass];
    unsigned int v3 = [v2 isEqualToString:@"Media"];

    if (v3 && *(unsigned char *)(*(void *)(a1 + 32) + 248))
    {
      uint64_t v4 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "Syncing again due to updated pinning settings", buf, 2u);
      }

      dispatch_time_t v5 = dispatch_time(0, 5000000000);
      uint64_t v6 = *(void *)(a1 + 32);
      id v7 = *(NSObject **)(v6 + 88);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_47A64;
      block[3] = &unk_9AF48;
      block[4] = v6;
      dispatch_after(v5, v7, block);
      *(unsigned char *)(*(void *)(a1 + 32) + 248) = 0;
    }
  }
  else
  {
  }
}

id sub_47A64(uint64_t a1)
{
  return [*(id *)(a1 + 32) _invokeHasChangesCallbackWithPriority:2];
}

void sub_47E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 224), 8);
  _Block_object_dispose((const void *)(v37 - 192), 8);
  _Block_object_dispose((const void *)(v37 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_47E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a3) {
    id v6 = [*(id *)a3 longLongValue];
  }
  else {
    id v6 = 0;
  }
  id v7 = *(void **)(a3 + 8);
  if (v7) {
    unint64_t v8 = (unint64_t)[v7 unsignedLongLongValue];
  }
  else {
    unint64_t v8 = 0;
  }
  long long v9 = *(void **)(a3 + 16);
  if (v9)
  {
    [v9 doubleValue];
    double v11 = v10;
  }
  else
  {
    double v11 = 0.0;
  }
  long long v12 = *(void **)(a3 + 24);
  if (v12) {
    unsigned int v13 = [v12 unsignedIntegerValue];
  }
  else {
    unsigned int v13 = 0;
  }
  int v14 = sub_6B9B8(v13);
  if (v8)
  {
    if (v6)
    {
LABEL_15:
      ++*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
      *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) += v8;
      id v15 = [*(id *)(a1 + 40) objectForKey:v14];
      if (!v15)
      {
        id v15 = objc_alloc_init((Class)ATDetailedRequestInfoForAssetType);
        if (v15) {
          [*(id *)(a1 + 40) setObject:v15 forKey:v14];
        }
      }
      [v15 updateBytesSynced:v8];
      goto LABEL_30;
    }
  }
  else
  {
    if ((v13 & 4) != 0)
    {
      unint64_t v8 = 52428800;
    }
    else if (v11 <= 0.0)
    {
      unint64_t v8 = 7340032;
    }
    else
    {
      unint64_t v8 = (unint64_t)(v11 * 35.8260224);
    }
    long long v16 = *(void **)(a1 + 32);
    long long v17 = +[NSNumber numberWithUnsignedLongLong:v8];
    long long v18 = +[NSString stringWithFormat:@"%lld", a2];
    [v16 setObject:v17 forKey:v18];

    long long v19 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218496;
      uint64_t v23 = a2;
      __int16 v24 = 1024;
      unsigned int v25 = v13;
      __int16 v26 = 2048;
      unint64_t v27 = v8;
      _os_log_impl(&dword_0, v19, OS_LOG_TYPE_DEFAULT, "Estimating the size of track %lld media_type %u to %llu", buf, 0x1Cu);
    }

    if (v6) {
      goto LABEL_15;
    }
  }
  ++*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) += v8;
  id v15 = [*(id *)(a1 + 48) objectForKey:v14];
  if (!v15)
  {
    id v15 = objc_alloc_init((Class)ATDetailedRequestInfoForAssetType);
    if (v15) {
      [*(id *)(a1 + 48) setObject:v15 forKey:v14];
    }
  }
LABEL_30:
  uint64_t v20 = +[NSNumber numberWithLongLong:a2];
  int v21 = [v20 stringValue];
  [v15 updateBytesToSync:v8 forItemIdentifier:v21];

  [v15 incrementAssetCountToSync];
}

void sub_483F8(uint64_t a1)
{
  Boolean keyExistsAndHasValidFormat = 0;
  if (CFPreferencesGetAppBooleanValue(@"MusicSoundCheckEnabledSetting", @"com.apple.mobileipod", &keyExistsAndHasValidFormat))
  {
    BOOL v2 = 1;
  }
  else
  {
    BOOL v2 = keyExistsAndHasValidFormat == 0;
  }
  uint64_t v3 = v2;
  unint64_t v4 = (unint64_t)CFPreferencesCopyAppValue(@"SortAlbums", @"com.apple.Music");
  dispatch_time_t v5 = *(void **)(*(void *)(a1 + 32) + 208);
  if (v5)
  {
    uint64_t v6 = [v5 objectForKey:@"MusicSortingPreference"];
    id v7 = [*(id *)(*(void *)(a1 + 32) + 208) objectForKey:@"SoundCheckEnabled"];
    if (!(v4 | v6) || v4 && v6 && ([(id)v4 isEqualToString:v6] & 1) != 0)
    {
      if (v3 == [v7 BOOLValue])
      {
        unint64_t v8 = _ATLogCategorySyncBundle();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 208);
          *(_DWORD *)buf = 138543362;
          uint64_t v21 = v9;
          _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "playlist settings %{public}@ have not changed", buf, 0xCu);
        }

LABEL_22:
        goto LABEL_23;
      }
    }
    else
    {
      [v7 BOOLValue];
    }
    double v11 = _ATLogCategorySyncBundle_Oversize();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      uint64_t v13 = *(void *)(v12 + 208);
      uint64_t v14 = *(void *)(v12 + 128);
      *(_DWORD *)buf = 138543618;
      uint64_t v21 = v13;
      __int16 v22 = 2114;
      uint64_t v23 = v14;
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, "cached playlist settings: %{public}@ different from updated playlist settings: %{public}@", buf, 0x16u);
    }

    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    goto LABEL_22;
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  uint64_t v6 = _ATLogCategorySyncBundle_Oversize();
  if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 128);
    *(_DWORD *)buf = 138543362;
    uint64_t v21 = v10;
    _os_log_impl(&dword_0, (os_log_t)v6, OS_LOG_TYPE_DEFAULT, "cached playlist settings is nil, nanoSettings: %{public}@", buf, 0xCu);
  }
LABEL_23:

  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    id v15 = +[NSNumber numberWithUnsignedChar:v3];
    long long v16 = +[NSMutableDictionary dictionaryWithObjectsAndKeys:@"SyncPlaylistID", &off_9C9F0, @"ShowAllMusic", v15, @"SoundCheckEnabled", &off_9C9D8, @"SyncLimitType", &off_9C9D8, @"SyncLimit", &off_9C9D8, @"SyncType", 0];

    if (v4) {
      [v16 setObject:v4 forKey:@"MusicSortingPreference"];
    }
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 208), v16);
    long long v17 = _ATLogCategorySyncBundle_Oversize();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = *(void *)(*(void *)(a1 + 32) + 208);
      *(_DWORD *)buf = 138543362;
      uint64_t v21 = v18;
      _os_log_impl(&dword_0, v17, OS_LOG_TYPE_DEFAULT, "cached playlist settings updated to: %{public}@", buf, 0xCu);
    }
  }
}

void sub_487F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  BOOL v2 = *(void **)(v1 + 208);
  *(void *)(v1 + 208) = 0;

  uint64_t v3 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unint64_t v4 = 0;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "Paired device changed - clearing cached playlist settings", v4, 2u);
  }
}

void sub_48E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_48E7C(uint64_t a1)
{
  sub_49124();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("NMSyncDefaults");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_A4AF8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    BOOL v2 = +[NSAssertionHandler currentHandler];
    uint64_t v3 = +[NSString stringWithUTF8String:"Class getNMSyncDefaultsClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MLSyncClient.m", 150, @"Unable to find class %s", "NMSyncDefaults");

    __break(1u);
  }
}

void sub_48F44(uint64_t a1)
{
  sub_49124();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("NMSMediaSettingsSynchronizer");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_A4B08 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    BOOL v2 = +[NSAssertionHandler currentHandler];
    uint64_t v3 = +[NSString stringWithUTF8String:"Class getNMSMediaSettingsSynchronizerClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MLSyncClient.m", 151, @"Unable to find class %s", "NMSMediaSettingsSynchronizer");

    __break(1u);
  }
}

void sub_4900C(uint64_t a1)
{
  sub_49124();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("NMSMusicRecommendationManager");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_A4B10 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    BOOL v2 = +[NSAssertionHandler currentHandler];
    uint64_t v3 = +[NSString stringWithUTF8String:"Class getNMSMusicRecommendationManagerClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MLSyncClient.m", 153, @"Unable to find class %s", "NMSMusicRecommendationManager");

    __break(1u);
  }
}

void *sub_490D4(uint64_t a1)
{
  BOOL v2 = sub_49124();
  uint64_t result = dlsym(v2, "NMSMediaPinningManagerDownloadInfoDidInvalidateNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_A4B18 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_49124()
{
  v4[0] = 0;
  if (!qword_A4B00)
  {
    v4[1] = _NSConcreteStackBlock;
    _DWORD v4[2] = (void *)3221225472;
    v4[3] = sub_492A0;
    v4[4] = &unk_9AE18;
    v4[5] = v4;
    long long v5 = off_9A768;
    uint64_t v6 = 0;
    qword_A4B00 = _sl_dlopen();
  }
  int v0 = (void *)qword_A4B00;
  if (!qword_A4B00)
  {
    int v0 = +[NSAssertionHandler currentHandler];
    uint64_t v3 = +[NSString stringWithUTF8String:"void *NanoMusicSyncLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"MLSyncClient.m", 146, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

id sub_49278(uint64_t a1, void *a2)
{
  return [a2 _handleDisplayValuesChangedNotification:0];
}

id sub_49284(uint64_t a1, void *a2)
{
  return [a2 _handleStoreFrontDidChange];
}

id sub_4928C(uint64_t a1, void *a2)
{
  return [a2 _handleAccountsDidChange];
}

id sub_49294(uint64_t a1, void *a2)
{
  return [a2 _handleSyncDefaultsSyncSettingsDidChangeNotification:0];
}

uint64_t sub_492A0()
{
  uint64_t result = _sl_dlopen();
  qword_A4B00 = result;
  return result;
}

void sub_49960(id a1, NSError *a2)
{
  BOOL v2 = a2;
  if (v2)
  {
    uint64_t v3 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138543362;
      long long v5 = v2;
      _os_log_impl(&dword_0, v3, OS_LOG_TYPE_ERROR, "failed to send response to music settings request. err=%{public}@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_49D48(id a1, NSError *a2)
{
  BOOL v2 = a2;
  if (v2)
  {
    uint64_t v3 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138543362;
      long long v5 = v2;
      _os_log_impl(&dword_0, v3, OS_LOG_TYPE_ERROR, "failed to send response to music settings request. err=%{public}@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_4A144(id a1, ATResponse *a2, NSError *a3)
{
  int v4 = a2;
  long long v5 = a3;
  if (v5)
  {
    uint64_t v6 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138543362;
      uint64_t v10 = v5;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_ERROR, "failed to send updated music settings. err=%{public}@", (uint8_t *)&v9, 0xCu);
    }
LABEL_7:

    goto LABEL_8;
  }
  id v7 = [(ATResponse *)v4 error];

  if (v7)
  {
    uint64_t v6 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      unint64_t v8 = [(ATResponse *)v4 error];
      int v9 = 138543362;
      uint64_t v10 = v8;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_ERROR, "failed to process music settings on peer. err=%{public}@", (uint8_t *)&v9, 0xCu);
    }
    goto LABEL_7;
  }
LABEL_8:
}

id sub_4A59C(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 32);
  if (v2[10])
  {
    [v2 _sendUpdatedSettings];
    BOOL v2 = *(void **)(a1 + 32);
  }
  if ([v2 _shouldCancelActiveSessionsForLegacyPairedDevices])
  {
    uint64_t v3 = *(void **)(a1 + 32);
    uint64_t v4 = ATSessionTypeDeviceSync;
    long long v5 = +[NSError errorWithDomain:@"ATError" code:27 userInfo:0];
    [v3 _cancelSyncSessionsWithSessionIdentifier:v4 groupingKey:@"ATDeviceSyncSessionAssetTaskGroupingKey" waitToFinish:0 withError:v5];
  }
  uint64_t v6 = *(void **)(a1 + 32);

  return [v6 _invokeHasChangesCallbackWithPriority:1];
}

void *sub_4A9A8(void *result)
{
  if (*(void *)(result[4] + 80))
  {
    uint64_t v1 = result;
    BOOL v2 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "got sync preferences changed notification", buf, 2u);
    }

    uint64_t result = [(id)v1[4] _rebuildCachedPlaylistSettings];
    if (result)
    {
      uint64_t v3 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v4 = 0;
        _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "syncing updated settings to paired device", v4, 2u);
      }

      return [(id)v1[4] _syncUpdatedSettingsToPairedDevice];
    }
  }
  return result;
}

void sub_4ACEC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_4AD04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  *a7 = 1;
  return result;
}

uint64_t sub_4AD1C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  *a6 = 1;
  return result;
}

uint64_t sub_4AD34(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned char *a8)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  *a8 = 1;
  return result;
}

uint64_t sub_4AD4C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  *a6 = 1;
  return result;
}

void sub_4B5C4(uint64_t a1)
{
  BOOL v2 = +[NSFileManager defaultManager];
  uint64_t v3 = [*(id *)(a1 + 32) path];
  uint64_t v4 = [v2 attributesOfItemAtPath:v3 error:0];
  id v5 = [v4 fileSize];

  uint64_t ImageSource = MSVImageUtilitiesCreateImageSource();
  if (!ImageSource) {
    goto LABEL_15;
  }
  id v7 = (const void *)ImageSource;
  unint64_t v8 = +[NSMutableData data];
  uint64_t DataImageDestination = MSVImageUtilitiesCreateDataImageDestination();
  if (!DataImageDestination) {
    goto LABEL_8;
  }
  uint64_t v10 = (void *)DataImageDestination;
  if (!MSVImageUtilitiesResizeSourceImageToJPEGDestination())
  {
    CFRelease(v10);
LABEL_8:
    CFRelease(v7);
    goto LABEL_9;
  }
  BOOL v11 = CGImageDestinationFinalize((CGImageDestinationRef)v10);
  CFRelease(v10);
  CFRelease(v7);
  if (!v11)
  {
LABEL_9:
    uint64_t v13 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v26 = v14;
      _os_log_impl(&dword_0, v13, OS_LOG_TYPE_DEFAULT, "failed to resize image at '%{public}@' - returning original.", buf, 0xCu);
    }

    goto LABEL_12;
  }
  if ([v8 length] < v5)
  {
    id v12 = v8;
    goto LABEL_13;
  }
LABEL_12:
  id v12 = +[NSData dataWithContentsOfURL:*(void *)(a1 + 32)];
LABEL_13:
  id v15 = v12;

  if (v15)
  {
    objc_msgSend(*(id *)(a1 + 40), "setTotalBytes:", objc_msgSend(v15, "length"));
    long long v16 = +[NSInputStream inputStreamWithData:v15];
    long long v17 = objc_msgSend(*(id *)(a1 + 32), "lastPathComponent", @"_AssetFileName");
    v23[1] = @"_AssetSize";
    v24[0] = v17;
    uint64_t v18 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 40) totalBytes]);
    v24[1] = v18;
    long long v19 = +[NSDictionary dictionaryWithObjects:v24 forKeys:v23 count:2];

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v20 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
  {
    uint64_t v21 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v26 = v21;
    _os_log_impl(&dword_0, v20, OS_LOG_TYPE_ERROR, "failed to load image data from %{public}@", buf, 0xCu);
  }

  uint64_t v22 = *(void *)(a1 + 48);
  id v15 = +[NSError errorWithDomain:@"ATError" code:0 userInfo:0];
  (*(void (**)(uint64_t, void *, void, void))(v22 + 16))(v22, v15, 0, 0);
LABEL_18:
}

void sub_4BE8C(uint64_t a1)
{
  BOOL v2 = [*(id *)(a1 + 32) variantOptions];
  uint64_t v3 = [v2 objectForKey:@"AssetParts"];
  uint64_t v4 = (int *)[v3 unsignedIntegerValue];

  if (v4 == &dword_4)
  {
    uint64_t v12 = *(void *)(a1 + 32);
    BOOL v11 = *(void **)(a1 + 40);
    uint64_t v13 = *(void *)(a1 + 48);
    [v11 getDataForGeniusAsset:v12 withCompletion:v13];
  }
  else if (v4 == (int *)((char *)&dword_0 + 2))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    unint64_t v8 = *(void **)(a1 + 40);
    uint64_t v10 = *(void *)(a1 + 48);
    [v8 getDataForArtworkAsset:v9 withCompletion:v10];
  }
  else if (v4 == (int *)((char *)&dword_0 + 1))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    id v5 = *(void **)(a1 + 40);
    uint64_t v7 = *(void *)(a1 + 48);
    [v5 getDataForTrackAsset:v6 withCompletion:v7];
  }
  else
  {
    uint64_t v14 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *(void *)(a1 + 32);
      int v18 = 138543362;
      uint64_t v19 = v15;
      _os_log_impl(&dword_0, v14, OS_LOG_TYPE_DEFAULT, "unsupported request for asset %{public}@", (uint8_t *)&v18, 0xCu);
    }

    uint64_t v16 = *(void *)(a1 + 48);
    long long v17 = +[NSError errorWithDomain:@"ATError" code:21 userInfo:0];
    (*(void (**)(uint64_t, void *, void, void))(v16 + 16))(v16, v17, 0, 0);
  }
}

void sub_4C3B0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6 || ([v5 error], uint64_t v7 = objc_claimAutoreleasedReturnValue(), v7, v7))
  {
    unint64_t v8 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      if (v6)
      {
        int v19 = 138543362;
        *(void *)uint64_t v20 = v6;
        _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "failed to get udpated status. err=%{public}@", (uint8_t *)&v19, 0xCu);
      }
      else
      {
        uint64_t v9 = [v5 error];
        int v19 = 138543362;
        *(void *)uint64_t v20 = v9;
        _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "failed to get udpated status. err=%{public}@", (uint8_t *)&v19, 0xCu);
      }
    }
  }
  else
  {
    uint64_t v10 = [v5 parameterForKey:@"TrackRemainingCount"];
    id v11 = [v10 unsignedIntegerValue];

    uint64_t v12 = [v5 parameterForKey:@"TrackCount"];
    unsigned int v13 = [v12 unsignedIntegerValue];

    uint64_t v14 = [v5 parameterForKey:@"UnknownSyncedPlaylistId"];
    if (v14)
    {
      uint64_t v15 = [v5 parameterForKey:@"UnknownSyncedPlaylistId"];
      unsigned int v16 = [v15 BOOLValue];
    }
    else
    {
      unsigned int v16 = 1;
    }

    long long v17 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      int v19 = 67109632;
      *(_DWORD *)uint64_t v20 = v11;
      *(_WORD *)&v20[4] = 1024;
      *(_DWORD *)&v20[6] = v13;
      __int16 v21 = 1024;
      unsigned int v22 = v16;
      _os_log_impl(&dword_0, v17, OS_LOG_TYPE_DEFAULT, "remainingaAssetsCount=%d, totalAssetCount=%d, syncedPlaylistKnownToGizmo=%d", (uint8_t *)&v19, 0x14u);
    }

    if (v16)
    {
      int v18 = *(void **)(a1 + 32);
      if (v11) {
        [v18 _resetLastSyncedVersionForSyncedPlaylist];
      }
      else {
        [v18 _updateSyncPlaylistToCurrentRevision];
      }
    }
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_4C610(id a1, ML3DatabaseConnection *a2)
{
  BOOL v2 = a2;
  uint64_t v3 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, "querying the database for fetchable artwork that's not downloaded for keep local tracks and collections", v6, 2u);
  }

  uint64_t v4 = [(ML3DatabaseConnection *)v2 executeQuery:@"SELECT entity_pid, fetchable_artwork_source_type FROM item LEFT OUTER JOIN best_artwork_token ON item.item_pid = best_artwork_token.entity_pid AND best_artwork_token.entity_type = ? WHERE item.keep_local = ? AND best_artwork_token.available_artwork_token = ? AND best_artwork_token.fetchable_artwork_token != ?" withParameters:&off_9CFE0];
  [v4 enumerateRowsWithBlock:&stru_9A510];
  id v5 = [(ML3DatabaseConnection *)v2 executeQuery:@"SELECT entity_pid, fetchable_artwork_source_type FROM container LEFT OUTER JOIN best_artwork_token ON container.container_pid = best_artwork_token.entity_pid AND best_artwork_token.entity_type = ? WHERE container.keep_local = ? AND best_artwork_token.available_artwork_token = ? AND best_artwork_token.fetchable_artwork_token != ?" withParameters:&off_9CFF8];

  [v5 enumerateRowsWithBlock:&stru_9A550];
}

void sub_4C6F0(id a1, ML3DatabaseRow *a2, NSError *a3, BOOL *a4)
{
  uint64_t v4 = a2;
  id v5 = [(ML3DatabaseRow *)v4 int64ForColumnIndex:0];
  id v6 = [(ML3DatabaseRow *)v4 int64ForColumnIndex:1];

  uint64_t v7 = +[MPCloudController sharedCloudController];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_4C7BC;
  v8[3] = &unk_9A530;
  v8[4] = v5;
  [v7 loadArtworkForEntityPersistentID:v5 entityType:1 artworkType:5 artworkSourceType:v6 completionHandler:v8];
}

void sub_4C7BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = _ATLogCategorySyncBundle();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v12 = 134218242;
      uint64_t v13 = v6;
      __int16 v14 = 2114;
      id v15 = v3;
      uint64_t v7 = "failed to load artwork for container pid: %lld error:%{public}@";
      unint64_t v8 = v5;
      os_log_type_t v9 = OS_LOG_TYPE_ERROR;
      uint32_t v10 = 22;
LABEL_6:
      _os_log_impl(&dword_0, v8, v9, v7, (uint8_t *)&v12, v10);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    int v12 = 134217984;
    uint64_t v13 = v11;
    uint64_t v7 = "successfully loaded artwork for container pid: %lld";
    unint64_t v8 = v5;
    os_log_type_t v9 = OS_LOG_TYPE_INFO;
    uint32_t v10 = 12;
    goto LABEL_6;
  }
}

void sub_4C8CC(id a1, ML3DatabaseRow *a2, NSError *a3, BOOL *a4)
{
  uint64_t v4 = a2;
  id v5 = [(ML3DatabaseRow *)v4 int64ForColumnIndex:0];
  id v6 = [(ML3DatabaseRow *)v4 int64ForColumnIndex:1];

  uint64_t v7 = +[MPCloudController sharedCloudController];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_4C998;
  v8[3] = &unk_9A530;
  v8[4] = v5;
  [v7 loadArtworkForEntityPersistentID:v5 entityType:0 artworkType:1 artworkSourceType:v6 completionHandler:v8];
}

void sub_4C998(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = _ATLogCategorySyncBundle();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v12 = 134218242;
      uint64_t v13 = v6;
      __int16 v14 = 2114;
      id v15 = v3;
      uint64_t v7 = "failed to load artwork for track pid: %lld error: %{public}@";
      unint64_t v8 = v5;
      os_log_type_t v9 = OS_LOG_TYPE_ERROR;
      uint32_t v10 = 22;
LABEL_6:
      _os_log_impl(&dword_0, v8, v9, v7, (uint8_t *)&v12, v10);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    int v12 = 134217984;
    uint64_t v13 = v11;
    uint64_t v7 = "successfully loaded artwork for track pid: %lld";
    unint64_t v8 = v5;
    os_log_type_t v9 = OS_LOG_TYPE_INFO;
    uint32_t v10 = 12;
    goto LABEL_6;
  }
}

void sub_4CBAC(uint64_t a1)
{
  BOOL v2 = [*(id *)(a1 + 32) _library];
  if (![*(id *)(*(void *)(a1 + 32) + 192) count]) {
    goto LABEL_55;
  }
  uint64_t v60 = a1;
  id v3 = *(id *)(*(void *)(a1 + 32) + 192);
  char v61 = v2;
  id v59 = v2;
  unint64_t v70 = +[ATAirlock sharedInstance];
  unint64_t v75 = +[NSMutableArray array];
  uint64_t v4 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v3 count]);
  uint64_t v77 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v3 count]);
  long long v91 = 0u;
  long long v92 = 0u;
  long long v93 = 0u;
  long long v94 = 0u;
  id obj = v3;
  id v82 = [obj countByEnumeratingWithState:&v91 objects:v104 count:16];
  char v5 = 0;
  if (!v82) {
    goto LABEL_47;
  }
  uint64_t v80 = MLDatabaseOperationAttributeDownloadedAssetPersistentIdKey;
  uint64_t v81 = *(void *)v92;
  uint64_t v79 = MLDatabaseOperationAttributeDownloadedAssetEntityTypeKey;
  uint64_t v73 = MLDatabaseOperationAttributeDownloadedAssetGeniusDataPathKey;
  uint64_t v72 = MLDatabaseOperationAttributeDownloadedAssetArtworkPathKey;
  uint64_t v71 = MLDatabaseOperationAttributeDownloadedAssetLyricsPathKey;
  uint64_t v63 = MLDatabaseOperationAttributeDownloadSourceContainerIDKey;
  uint64_t v64 = MLDatabaseOperationAttributeDownloadedAssetTrackPathKey;
  uint64_t v69 = MLDatabaseOperationAttributeDownloadedAssetProtectionTypeKey;
  uint64_t v62 = ML3TrackPropertyIsOTAPurchased;
  uint64_t v78 = MLDatabaseOperationAttributeDownloadedAssetTrackPropertiesKey;
  uint64_t v74 = v4;
LABEL_4:
  uint64_t v6 = 0;
  while (2)
  {
    if (*(void *)v92 != v81) {
      objc_enumerationMutation(obj);
    }
    uint64_t v7 = *(void **)(*((void *)&v91 + 1) + 8 * v6);
    unint64_t v8 = +[NSMutableDictionary dictionary];
    os_log_type_t v9 = +[NSMutableDictionary dictionary];
    uint32_t v10 = [v7 identifier];
    [v8 setObject:v10 forKey:v80];

    uint64_t v11 = [v7 assetType];
    uint64_t v12 = [v11 isEqualToString:@"Playlist"];

    uint64_t v13 = +[NSNumber numberWithInteger:v12];
    [v8 setObject:v13 forKey:v79];

    __int16 v14 = [v7 variantOptions];
    id v15 = [v14 objectForKey:@"AssetParts"];
    id v16 = [v15 unsignedIntegerValue];

    long long v17 = [v7 path];
    switch((unint64_t)v16)
    {
      case 1uLL:
        [v75 addObject:v7];
        int v18 = _ATLogCategoryAssetUtils();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138543362;
          uint64_t v96 = v17;
          _os_log_impl(&dword_0, v18, OS_LOG_TYPE_DEFAULT, "processing asset with path %{public}@", buf, 0xCu);
        }

        int v19 = +[NSFileManager defaultManager];
        if ([v19 fileExistsAtPath:v17])
        {
          uint64_t v20 = [v70 pathForDataclass:@"Media"];
          unsigned int v21 = [v17 hasPrefix:v20];

          if (v21)
          {
            unsigned int v22 = [v7 identifier];
            uint64_t v23 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"F%02d", (uint64_t)[v22 longLongValue] % 50);

            __int16 v24 = +[ML3MusicLibrary pathForResourceFileOrFolder:11];
            v103[0] = v24;
            uint64_t v68 = (void *)v23;
            v103[1] = v23;
            unsigned int v25 = +[NSArray arrayWithObjects:v103 count:2];
            uint64_t v26 = +[NSString pathWithComponents:v25];

            unint64_t v27 = [v7 path];
            uint64_t v28 = [v27 lastPathComponent];
            uint64_t v67 = +[NSString stringWithFormat:@"%@/%@", v26, v28];

            int v29 = (void *)v26;
            if ([v19 fileExistsAtPath:v26])
            {
              uint64_t v66 = (void *)v26;
              id v30 = 0;
LABEL_24:
              uint64_t v38 = (void *)v67;
              [v19 removeItemAtPath:v67 error:0];
              uint64_t v39 = [v7 path];
              id v89 = v30;
              unsigned __int8 v40 = [v19 moveItemAtPath:v39 toPath:v67 error:&v89];
              id v65 = v89;

              if (v40)
              {
                [v8 setObject:v67 forKey:v64];
                id v30 = v65;
                int v29 = v66;
              }
              else
              {
                uint64_t v41 = _ATLogCategoryAssetUtils();
                id v30 = v65;
                if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138543874;
                  uint64_t v96 = v7;
                  __int16 v97 = 2114;
                  uint64_t v98 = v67;
                  __int16 v99 = 2114;
                  id v100 = v65;
                  _os_log_impl(&dword_0, v41, OS_LOG_TYPE_DEFAULT, "failed to move asset %{public}@ to %{public}@. error=%{public}@", buf, 0x20u);
                }

                int v29 = v66;
              }
            }
            else
            {
              id v90 = 0;
              unsigned __int8 v37 = [v19 createDirectoryAtPath:v26 withIntermediateDirectories:1 attributes:0 error:&v90];
              id v30 = v90;
              if (v37)
              {
                uint64_t v66 = v29;
                goto LABEL_24;
              }
              unint64_t v42 = _ATLogCategoryAssetUtils();
              if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138543618;
                uint64_t v96 = v29;
                __int16 v97 = 2114;
                uint64_t v98 = (uint64_t)v30;
                _os_log_impl(&dword_0, v42, OS_LOG_TYPE_DEFAULT, "failed to create asset dir %{public}@. error=%{public}@", buf, 0x16u);
              }

              uint64_t v38 = (void *)v67;
            }
          }
          else
          {
            [v8 setObject:v17 forKey:v64];
          }
          int v43 = [v7 downloadSourceContainerId];
          id v44 = [v43 longLongValue];

          if (v44)
          {
            uint64_t v45 = [v7 downloadSourceContainerId];
            [v8 setObject:v45 forKey:v63];
          }
          int v36 = [v7 clientParams];
          if (qword_A4CA8 != -1) {
            dispatch_once(&qword_A4CA8, &stru_9AFE0);
          }
          v87[0] = _NSConcreteStackBlock;
          v87[1] = 3221225472;
          v87[2] = sub_6E9AC;
          v87[3] = &unk_9AF20;
          id v46 = v9;
          id v88 = v46;
          [v36 enumerateKeysAndObjectsUsingBlock:v87];
          if (v36)
          {
            uint64_t v47 = [v36 valueForKey:@"MLAssetProtectionType"];
            id v48 = [v47 integerValue];
          }
          else
          {
            id v48 = (id)(int)[v7 protectionType];
          }
          uint64_t v49 = +[NSNumber numberWithInteger:v48];
          [v8 setObject:v49 forKey:v69];

          if (v48 != (char *)&dword_0 + 2)
          {
            uint64_t v50 = [v7 storeInfo];
            uint64_t v51 = [v50 storeMediaResponseItem];

            if (v51) {
              [v46 setObject:&__kCFBooleanTrue forKey:v62];
            }
          }

          char v5 = 1;
          goto LABEL_44;
        }
        int v36 = _ATLogCategoryAssetUtils();
        if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138543362;
          uint64_t v96 = v17;
          _os_log_impl(&dword_0, v36, OS_LOG_TYPE_DEFAULT, "Failed to find asset at path %{public}@ - skipping", buf, 0xCu);
        }
LABEL_44:

        uint64_t v4 = v74;
LABEL_45:
        [v8 setObject:v9 forKey:v78];
        [v4 addObject:v8];

        if (v82 != (id)++v6) {
          continue;
        }
        id v82 = [obj countByEnumeratingWithState:&v91 objects:v104 count:16];
        if (v82) {
          goto LABEL_4;
        }
LABEL_47:

        v102[0] = v4;
        v101[0] = MLDatabaseOperationAttributeDownloadedAssetsListKey;
        v101[1] = MLDatabaseOperationAttributeTrackSourceKey;
        uint64_t v52 = +[NSNumber numberWithInt:3];
        v102[1] = v52;
        uint64_t v53 = +[NSDictionary dictionaryWithObjects:v102 forKeys:v101 count:2];

        sub_6D504(v53, v59);
        long long v83 = 0u;
        long long v84 = 0u;
        long long v85 = 0u;
        long long v86 = 0u;
        id v54 = v77;
        id v55 = [v54 countByEnumeratingWithState:&v83 objects:buf count:16];
        if (v55)
        {
          id v56 = v55;
          uint64_t v57 = *(void *)v84;
          do
          {
            for (i = 0; i != v56; i = (char *)i + 1)
            {
              if (*(void *)v84 != v57) {
                objc_enumerationMutation(v54);
              }
              unlink((const char *)[*(id *)(*((void *)&v83 + 1) + 8 * i) fileSystemRepresentation]);
            }
            id v56 = [v54 countByEnumeratingWithState:&v83 objects:buf count:16];
          }
          while (v56);
        }

        *(unsigned char *)(*(void *)(v60 + 32) + 120) = v5;
        [*(id *)(*(void *)(v60 + 32) + 192) removeAllObjects];
        [v59 notifyDisplayValuesPropertyDidChange];
        BOOL v2 = v61;
LABEL_55:

        return;
      case 2uLL:
        int v31 = v8;
        BOOL v32 = v17;
        uint64_t v33 = v72;
        goto LABEL_17;
      case 4uLL:
        int v31 = v8;
        BOOL v32 = v17;
        uint64_t v33 = v73;
        goto LABEL_17;
      case 8uLL:
        int v31 = v8;
        BOOL v32 = v17;
        uint64_t v33 = v71;
LABEL_17:
        [v31 setObject:v32 forKey:v33];
        [v77 addObject:v17];
        goto LABEL_45;
      default:
        uint64_t v34 = +[NSAssertionHandler currentHandler];
        uint64_t v35 = +[NSString stringWithUTF8String:"BOOL ImportFinishedAssets(NSArray<ATAsset *> *__strong, ML3MusicLibrary *__strong, BOOL *)"];
        objc_msgSend(v34, "handleFailureInFunction:file:lineNumber:description:", v35, @"AssetUtils.m", 627, @"unexpected asset part %lu", v16);

        goto LABEL_45;
    }
  }
}

id sub_4D880(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 192) addObject:*(void *)(a1 + 40)];
}

void sub_4DB98(uint64_t a1, void *a2)
{
  id v3 = [a2 executeQuery:@"SELECT artwork_token.artwork_token, sync_id, item_pid, media_type, title FROM item JOIN item_store USING (item_pid) JOIN item_extra USING (item_pid) JOIN artwork_token ON item_pid = entity_pid AND entity_type = ? LEFT OUTER JOIN artwork ON artwork_token.artwork_token = artwork.artwork_token WHERE item_store.sync_id != 0 AND artwork_token.artwork_source_type = ? AND artwork.artwork_token IS NULL GROUP BY artwork_token.artwork_token", &off_9CFC8 withParameters];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_4DF6C;
  v4[3] = &unk_9A418;
  long long v7 = *(_OWORD *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 64);
  id v5 = *(id *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 72);
  id v6 = *(id *)(a1 + 40);
  [v3 enumerateRowsWithBlock:v4];
}

void sub_4DC74(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, unsigned char *a5)
{
  id v9 = *a3;
  id v10 = a3[1];
  id v11 = +[ML3Container newWithPersistentID:a2 inLibrary:*(void *)(a1 + 32)];
  id v12 = [objc_alloc((Class)ML3ArtworkTokenSet) initWithEntity:v11 artworkType:5];
  uint64_t v13 = [v12 artworkTokenForSource:300];
  if (v13 && ([*(id *)(a1 + 32) isArtworkTokenAvailable:v13] & 1) == 0)
  {
    __int16 v14 = *(unint64_t **)(a1 + 64);
    unint64_t v15 = *v14 + *(void *)(a1 + 56);
    if (v15 <= *(void *)(a1 + 72))
    {
      *__int16 v14 = v15;
      id v16 = (char *)&v33 + 1;
      uint64_t quot = a2;
      do
      {
        lldiv_t v18 = lldiv(quot, 10);
        uint64_t quot = v18.quot;
        if (v18.rem >= 0) {
          LOBYTE(v19) = v18.rem;
        }
        else {
          uint64_t v19 = -v18.rem;
        }
        *(v16 - 2) = v19 + 48;
        uint64_t v20 = (const UInt8 *)(v16 - 2);
        --v16;
      }
      while (v18.quot);
      if (a2 < 0)
      {
        *(v16 - 2) = 45;
        uint64_t v20 = (const UInt8 *)(v16 - 2);
      }
      BOOL v32 = (__CFString *)CFStringCreateWithBytes(0, v20, (char *)&v33 - (char *)v20, 0x8000100u, 0);
      id v21 = [objc_alloc((Class)ATAsset) initWithIdentifier:v32 dataclass:@"Media" prettyName:v9];
      [v21 setAssetType:@"Playlist"];
      unsigned int v22 = +[NSNumber numberWithUnsignedInteger:2];
      uint64_t v23 = +[NSDictionary dictionaryWithObject:v22 forKey:@"AssetParts"];
      [v21 setVariantOptions:v23];

      id v24 = objc_alloc_init((Class)ATStoreInfo);
      unsigned int v25 = [v10 stringValue];
      [v24 setSyncID:v25];

      int v31 = v24;
      [v21 setStoreInfo:v24];
      uint64_t v26 = +[NSMutableDictionary dictionaryWithObject:&off_9C9A8 forKey:@"AssetParts"];
      unint64_t v27 = v26;
      uint64_t v28 = *(void *)(a1 + 40);
      if (v28)
      {
        [v26 setObject:v28 forKey:@"Dimensions"];
        int v29 = +[ICDeviceInfo currentDeviceInfo];
        unsigned int v30 = [v29 isWatch];

        if (v30) {
          [v27 setObject:&off_9D250 forKey:@"Quality"];
        }
      }
      [v21 setVariantOptions:v27];
      [*(id *)(a1 + 48) addObject:v21];
    }
    else
    {
      *a5 = 1;
    }
  }
}

void sub_4DF6C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  uint64_t v7 = (uint64_t)[v6 int64ForColumnIndex:1];
  uint64_t v8 = (uint64_t)[v6 int64ForColumnIndex:2];
  unsigned __int8 v9 = [v6 intForColumnIndex:3];
  uint64_t v10 = [v6 stringForColumnIndex:4];
  id v11 = (void *)v10;
  id v12 = &stru_9B528;
  if (v10) {
    id v12 = (__CFString *)v10;
  }
  uint64_t v13 = v12;

  __int16 v14 = (char *)&v35 + 1;
  uint64_t quot = v8;
  do
  {
    lldiv_t v16 = lldiv(quot, 10);
    uint64_t quot = v16.quot;
    if (v16.rem >= 0) {
      LOBYTE(v17) = v16.rem;
    }
    else {
      uint64_t v17 = -v16.rem;
    }
    *(v14 - 2) = v17 + 48;
    lldiv_t v18 = (const UInt8 *)(v14 - 2);
    --v14;
  }
  while (v16.quot);
  if (v8 < 0)
  {
    *(v14 - 2) = 45;
    lldiv_t v18 = (const UInt8 *)(v14 - 2);
  }
  uint64_t v19 = (__CFString *)CFStringCreateWithBytes(0, v18, (char *)&v35 - (char *)v18, 0x8000100u, 0);
  uint64_t v20 = *(unint64_t **)(a1 + 56);
  unint64_t v21 = *v20 + *(void *)(a1 + 48);
  if (v21 <= *(void *)(a1 + 64))
  {
    *uint64_t v20 = v21;
    id v22 = [objc_alloc((Class)ATAsset) initWithIdentifier:v19 dataclass:@"Media" prettyName:v13];
    id v23 = objc_alloc_init((Class)ATStoreInfo);
    id v24 = (char *)&v35 + 1;
    uint64_t v25 = v7;
    do
    {
      lldiv_t v26 = lldiv(v25, 10);
      uint64_t v25 = v26.quot;
      if (v26.rem >= 0) {
        LOBYTE(v27) = v26.rem;
      }
      else {
        uint64_t v27 = -v26.rem;
      }
      *(v24 - 2) = v27 + 48;
      uint64_t v28 = (const UInt8 *)(v24 - 2);
      --v24;
    }
    while (v26.quot);
    if (v7 < 0)
    {
      *(v24 - 2) = 45;
      uint64_t v28 = (const UInt8 *)(v24 - 2);
    }
    int v29 = (__CFString *)CFStringCreateWithBytes(0, v28, (char *)&v35 - (char *)v28, 0x8000100u, 0);
    [v23 setSyncID:v29];

    [v22 setStoreInfo:v23];
    unsigned int v30 = +[NSMutableDictionary dictionaryWithObject:&off_9C9A8 forKey:@"AssetParts"];
    int v31 = v30;
    if ((v9 & 0xC) != 0)
    {
      uint64_t v32 = *(void *)(a1 + 32);
      if (v32)
      {
        [v30 setObject:v32 forKey:@"Dimensions"];
        uint64_t v33 = +[ICDeviceInfo currentDeviceInfo];
        unsigned int v34 = [v33 isWatch];

        if (v34) {
          [v31 setObject:&off_9D250 forKey:@"Quality"];
        }
      }
    }
    [v22 setVariantOptions:v31];
    [v22 setPowerRequired:*(unsigned __int8 *)(a1 + 72)];
    [*(id *)(a1 + 40) addObject:v22];
  }
  else
  {
    *a4 = 1;
  }
}

void sub_4E290(id a1)
{
  CFNumberRef v1 = (const __CFNumber *)MGCopyAnswer();
  int valuePtr = 0;
  if (v1)
  {
    CFNumberRef v2 = v1;
    CFNumberGetValue(v1, kCFNumberSInt32Type, &valuePtr);
    CFRelease(v2);
    if (valuePtr >= 1)
    {
      double v3 = (double)valuePtr;
      uint64_t v4 = +[NSNumber numberWithDouble:(double)valuePtr];
      v9[0] = v4;
      id v5 = +[NSNumber numberWithDouble:v3];
      v9[1] = v5;
      uint64_t v6 = +[NSArray arrayWithObjects:v9 count:2];
      uint64_t v7 = (void *)qword_A4AD8;
      qword_A4AD8 = v6;
    }
  }
}

void sub_4EC78(uint64_t a1, uint64_t a2)
{
  CFNumberRef v2 = *(void **)(a1 + 32);
  id v3 = +[NSNumber numberWithLongLong:a2];
  [v2 addObject:v3];
}

uint64_t sub_4ECD8(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)ML3Container) initWithPersistentID:a2 inLibrary:*(void *)(a1 + 32)];
  if (v3) {
    [*(id *)(a1 + 40) addObject:v3];
  }

  return _objc_release_x1();
}

void sub_4ED48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  CFStringRef v7 = *(const __CFString **)a3;
  if (!*(void *)a3) {
    CFStringRef v7 = &stru_9B528;
  }
  uint64_t v108 = ML3TrackPropertyPodcastExternalGUID;
  CFStringRef v109 = v7;
  uint64_t v8 = &off_9C9D8;
  uint64_t v106 = ML3TrackPropertyStoreAccountID;
  if (*(void *)(a3 + 8)) {
    unsigned __int8 v9 = *(_UNKNOWN ***)(a3 + 8);
  }
  else {
    unsigned __int8 v9 = &off_9C9D8;
  }
  uint64_t v107 = v9;
  uint64_t v10 = *(_UNKNOWN ***)(a3 + 16);
  if (!v10) {
    uint64_t v10 = &off_9C9D8;
  }
  unint64_t v105 = v10;
  uint64_t v104 = ML3TrackPropertyStoreItemID;
  if (*(void *)(a3 + 24)) {
    CFStringRef v11 = *(const __CFString **)(a3 + 24);
  }
  else {
    CFStringRef v11 = &stru_9B528;
  }
  CFStringRef v103 = v11;
  uint64_t v102 = ML3TrackPropertyStoreFlavor;
  id v12 = *(_UNKNOWN ***)(a3 + 32);
  if (!v12) {
    id v12 = &off_9C9D8;
  }
  unint64_t v101 = v12;
  if (*(void *)(a3 + 40)) {
    uint64_t v13 = *(_UNKNOWN ***)(a3 + 40);
  }
  else {
    uint64_t v13 = &off_9C9D8;
  }
  id v100 = v13;
  __int16 v14 = *(_UNKNOWN ***)(a3 + 48);
  if (!v14) {
    __int16 v14 = &off_9C9D8;
  }
  __int16 v99 = v14;
  if (*(void *)(a3 + 56)) {
    unint64_t v15 = *(_UNKNOWN ***)(a3 + 56);
  }
  else {
    unint64_t v15 = &off_9C9D8;
  }
  uint64_t v98 = v15;
  lldiv_t v16 = *(_UNKNOWN ***)(a3 + 64);
  if (!v16) {
    lldiv_t v16 = &off_9C9D8;
  }
  __int16 v97 = v16;
  if (*(void *)(a3 + 72)) {
    uint64_t v17 = *(_UNKNOWN ***)(a3 + 72);
  }
  else {
    uint64_t v17 = &off_9C9D8;
  }
  uint64_t v96 = v17;
  CFStringRef v18 = *(const __CFString **)(a3 + 80);
  if (!v18) {
    CFStringRef v18 = &stru_9B528;
  }
  CFStringRef v95 = v18;
  if (*(void *)(a3 + 88)) {
    uint64_t v19 = *(_UNKNOWN ***)(a3 + 88);
  }
  else {
    uint64_t v19 = &off_9C9D8;
  }
  long long v94 = v19;
  uint64_t v20 = *(_UNKNOWN ***)(a3 + 96);
  if (!v20) {
    uint64_t v20 = &off_9C9D8;
  }
  long long v93 = v20;
  if (*(void *)(a3 + 104)) {
    CFStringRef v21 = *(const __CFString **)(a3 + 104);
  }
  else {
    CFStringRef v21 = &stru_9B528;
  }
  CFStringRef v92 = v21;
  id v22 = *(_UNKNOWN ***)(a3 + 112);
  if (!v22) {
    id v22 = &off_9C9D8;
  }
  id v89 = v22;
  if (*(void *)(a3 + 120)) {
    CFStringRef v23 = *(const __CFString **)(a3 + 120);
  }
  else {
    CFStringRef v23 = &stru_9B528;
  }
  CFStringRef v86 = v23;
  id v24 = *(_UNKNOWN ***)(a3 + 128);
  if (!v24) {
    id v24 = &off_9C9D8;
  }
  id v82 = v24;
  if (*(void *)(a3 + 136)) {
    uint64_t v25 = *(_UNKNOWN ***)(a3 + 136);
  }
  else {
    uint64_t v25 = &off_9C9D8;
  }
  uint64_t v80 = v25;
  if (*(void *)(a3 + 144)) {
    uint64_t v8 = *(_UNKNOWN ***)(a3 + 144);
  }
  uint64_t v76 = v8;
  uint64_t v91 = ML3TrackPropertyStoreMatchedStatus;
  if (*(void *)(a3 + 152)) {
    CFStringRef v26 = *(const __CFString **)(a3 + 152);
  }
  else {
    CFStringRef v26 = &stru_9B528;
  }
  uint64_t v88 = ML3TrackPropertyStoreRedownloadedStatus;
  uint64_t v85 = ML3TrackPropertyStoreSagaID;
  uint64_t v84 = ML3TrackPropertySyncID;
  uint64_t v83 = ML3TrackPropertyNeedsRestore;
  uint64_t v81 = ML3TrackPropertyIsRental;
  uint64_t v79 = ML3TrackPropertyTitle;
  uint64_t v78 = ML3TrackPropertyTotalSize;
  uint64_t v77 = ML3TrackPropertyStorePlaybackEndpointType;
  uint64_t v27 = ML3TrackPropertyStoreRedownloadParameters;
  uint64_t v28 = ML3TrackPropertySubscriptionStoreItemID;
  uint64_t v29 = ML3TrackPropertySyncRedownloadParams;
  uint64_t v30 = ML3TrackPropertyStoreCloudAssetAvailable;
  uint64_t v31 = ML3EntityPropertyKeepLocal;
  uint64_t v32 = ML3TrackPropertyTotalTime;
  uint64_t v33 = ML3TrackPropertyPurchaseHistoryRedownloadParameters;
  +[NSNumber numberWithUnsignedInt:*(unsigned int *)(a1 + 64)];
  CFStringRef v73 = v86;
  uint64_t v71 = v27;
  unsigned int v34 = v72 = v89;
  uint64_t v87 = v30;
  uint64_t v90 = v29;
  +[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", v108, v109, v108, v107, v106, v105, v104, v103, v102, v101, v91, v100, v88, v99, v85, v98, v84,
    v97,
    v83,
    v96,
    v81,
    v95,
    v79,
    v94,
    v78,
    v93,
    v77,
    v92,
    v71,
    v72,
    v28,
    v73,
    v29,
    v82,
    v30,
    v80,
    v31,
    v76,
    v32,
    v26,
    v33,
    v34,
    ML3TrackPropertyMediaType,
  uint64_t v35 = 0);

  unsigned int v36 = [*(id *)(a3 + 136) unsignedIntegerValue];
  unint64_t v37 = (unint64_t)[*(id *)(a3 + 88) unsignedLongLongValue];
  if (!v37)
  {
    [*(id *)(a3 + 144) doubleValue];
    if ((*(unsigned char *)(a1 + 64) & 4) != 0)
    {
      unint64_t v37 = 52428800;
    }
    else if (v38 <= 0.0)
    {
      unint64_t v37 = 7340032;
    }
    else
    {
      unint64_t v37 = (unint64_t)(v38 * 35.8260224);
    }
    uint64_t v39 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
    {
      int v40 = *(_DWORD *)(a1 + 64);
      *(_DWORD *)buf = 134218496;
      uint64_t v111 = a2;
      __int16 v112 = 1024;
      int v113 = v40;
      __int16 v114 = 2048;
      unint64_t v115 = v37;
      _os_log_impl(&dword_0, v39, OS_LOG_TYPE_DEFAULT, "Estimating the size of track %lld media_type %u to %llu", buf, 0x1Cu);
    }
  }
  if (**(void **)(a1 + 48) + v37 <= *(void *)(a1 + 56))
  {
    uint64_t v41 = (uint64_t)[*(id *)(a3 + 56) longLongValue];
    **(void **)(a1 + 48) += v37;
    unint64_t v42 = sub_6BA60(v35, a2, *(void **)(a1 + 32));
    int v43 = [v42 storeInfo];

    if (v43)
    {
      id v44 = (char *)&v115 + 5;
      uint64_t quot = v41;
      do
      {
        lldiv_t v46 = lldiv(quot, 10);
        uint64_t quot = v46.quot;
        if (v46.rem >= 0) {
          LOBYTE(v47) = v46.rem;
        }
        else {
          uint64_t v47 = -v46.rem;
        }
        *(v44 - 2) = v47 + 48;
        id v48 = (const UInt8 *)(v44 - 2);
        --v44;
      }
      while (v46.quot);
      if (v41 < 0)
      {
        *(v44 - 2) = 45;
        id v48 = (const UInt8 *)(v44 - 2);
      }
      uint64_t v49 = (__CFString *)CFStringCreateWithBytes(0, v48, (char *)&v115 + 4 - (char *)v48, 0x8000100u, 0);
      uint64_t v50 = [v42 storeInfo];
      [v50 setSyncID:v49];
    }
    else
    {
      uint64_t v49 = (__CFString *)objc_alloc_init((Class)ATStoreInfo);
      uint64_t v51 = (char *)&v115 + 5;
      uint64_t v52 = v41;
      do
      {
        lldiv_t v53 = lldiv(v52, 10);
        uint64_t v52 = v53.quot;
        if (v53.rem >= 0) {
          LOBYTE(v54) = v53.rem;
        }
        else {
          uint64_t v54 = -v53.rem;
        }
        *(v51 - 2) = v54 + 48;
        id v55 = (const UInt8 *)(v51 - 2);
        --v51;
      }
      while (v53.quot);
      if (v41 < 0)
      {
        *(v51 - 2) = 45;
        id v55 = (const UInt8 *)(v51 - 2);
      }
      id v56 = (__CFString *)CFStringCreateWithBytes(0, v55, (char *)&v115 + 4 - (char *)v55, 0x8000100u, 0);
      [(__CFString *)v49 setSyncID:v56];

      [v42 setStoreInfo:v49];
    }

    ICBundleIdentifierForSystemApplicationType();
    uint64_t v57 = (__CFString *)objc_claimAutoreleasedReturnValue();
    id v58 = [objc_alloc((Class)ICNetworkConstraints) initWithBundleIdentifier:v57];
    if (![v58 shouldAllowDataForCellularNetworkTypes]
      || !CFPreferencesGetAppBooleanValue(@"AllowsCellularDataDownloads", v57, 0))
    {
      [v42 setCanUseCellularData:0];
      [v42 setCanProxyUseCellularData:0];
      id v59 = +[ICEnvironmentMonitor sharedMonitor];
      unsigned __int8 v60 = objc_msgSend(v58, "shouldAllowDataForNetworkType:", objc_msgSend(v59, "lastKnownNetworkType"));

      if ((v60 & 1) == 0) {
        [v42 setBypassStore:1];
      }
    }
    [v42 setAllowDownloadOnConstrainedNetwork:v36 != 2];
    if (v36 == 2 || *(_DWORD *)(a1 + 64) != 8) {
      uint64_t v61 = 1;
    }
    else {
      uint64_t v61 = _os_feature_enabled_impl() ^ 1;
    }
    [v42 setPowerRequired:v61];
    [v42 setIsPrioritized:v36 != 2];
    if (!*(unsigned char *)(a1 + 68)) {
      goto LABEL_94;
    }
    uint64_t v62 = [v42 storeInfo];
    uint64_t v63 = [v62 sagaID];
    if ([v63 longLongValue])
    {
    }
    else
    {
      uint64_t v64 = [v42 storeInfo];
      id v65 = [v64 subscriptionID];
      id v66 = [v65 longLongValue];

      if (!v66)
      {
LABEL_94:
        [*(id *)(a1 + 40) addObject:v42];

        goto LABEL_95;
      }
    }
    uint64_t v67 = [v35 objectForKey:v87];
    unsigned __int8 v68 = [v67 BOOLValue];

    uint64_t v69 = [v35 objectForKey:v90];
    unsigned int v70 = [v69 isEqualToString:@"local"];

    if ((v68 & 1) == 0 && v70) {
      [v42 setBypassStore:1];
    }
    goto LABEL_94;
  }
  *a5 = 1;
LABEL_95:
}

void sub_4FB14(uint64_t a1)
{
  CFNumberRef v2 = +[ICEnvironmentMonitor sharedMonitor];
  id v3 = +[NSMutableArray array];
  id v4 = [v2 currentThermalLevel];
  unsigned int v5 = [v2 isCharging];
  [v2 currentBatteryLevel];
  uint64_t v7 = v6;
  uint64_t v8 = +[ICStorageManager sharedManager];
  id v9 = [v8 storageSpaceAvailable];
  unsigned int v10 = [v8 cachingEnabled];
  unint64_t v11 = sub_6EA98(v2);
  id v12 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67110656;
    unsigned int v19 = v5;
    __int16 v20 = 2048;
    id v21 = v4;
    __int16 v22 = 1024;
    unsigned int v23 = v10;
    __int16 v24 = 2048;
    id v25 = v9;
    __int16 v26 = 2048;
    uint64_t v27 = v7;
    __int16 v28 = 2048;
    unint64_t v29 = v11;
    __int16 v30 = 1024;
    BOOL v31 = (unint64_t)v4 < v11;
    _os_log_impl(&dword_0, v12, OS_LOG_TYPE_DEFAULT, "gathering assets to sync. deviceIsCharging=%d, currentThermalLevel=%llu, systemCachingEnabled=%d, freeSpaceRemaining=%lld, batteryLevel=%.2f, maxThermalPressureThreshold=%llu, acceptableThermalPressure=%{BOOL}u", buf, 0x3Cu);
  }

  uint64_t v13 = *(void **)(a1 + 40);
  if (v13)
  {
    __int16 v14 = *(NSObject **)(*(void *)(a1 + 32) + 112);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_4FD2C;
    v15[3] = &unk_9AAE0;
    id v17 = v13;
    id v16 = v3;
    dispatch_async(v14, v15);
  }
}

uint64_t sub_4FD2C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32));
}

void sub_4FE70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_4FE8C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = a2;
  uint64_t v6 = +[NSNumber numberWithLongLong:v4];
  id v17 = v6;
  uint64_t v7 = +[NSArray arrayWithObjects:&v17 count:1];
  uint64_t v8 = [v5 executeQuery:v3 withParameters:v7];

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_4FFD8;
  v12[3] = &unk_9A358;
  id v9 = *(id *)(a1 + 40);
  __int16 v16 = *(_WORD *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  id v13 = v9;
  uint64_t v14 = v10;
  uint64_t v15 = v11;
  [v8 enumerateRowsWithBlock:v12];
}

void sub_4FFD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [v3 intForColumnIndex:0];
  BOOL v5 = 1;
  unsigned int v6 = [v3 intForColumnIndex:1];
  signed int v7 = [v3 intForColumnIndex:2];
  unsigned int v8 = [v3 intForColumnIndex:3];
  unsigned int v9 = [v3 intForColumnIndex:4];
  unsigned int v10 = [v3 intForColumnIndex:5];

  if (v8 == 71)
  {
    char v11 = 0;
    BOOL v5 = *(unsigned char *)(a1 + 56) != 0;
  }
  else if (v8 == 205)
  {
    char v11 = [*(id *)(a1 + 32) containsObject:&off_9CA38] ^ 1;
    BOOL v5 = 1;
  }
  else
  {
    char v11 = 0;
  }
  char v12 = 0;
  if (!v4 && !v6 && !v9 && (v11 & 1) == 0 && v5)
  {
    if (*(unsigned char *)(a1 + 57)) {
      BOOL v13 = 1;
    }
    else {
      BOOL v13 = v10 == 0;
    }
    char v12 = v13;
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v12;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    uint64_t v14 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *(void *)(a1 + 48);
      int v16 = *(unsigned __int8 *)(a1 + 56);
      int v17 = 134220032;
      uint64_t v18 = v15;
      __int16 v19 = 1024;
      BOOL v20 = v4 != 0;
      __int16 v21 = 1024;
      BOOL v22 = v6 != 0;
      __int16 v23 = 1024;
      BOOL v24 = v9 != 0;
      __int16 v25 = 1024;
      unsigned int v26 = v8;
      __int16 v27 = 2048;
      uint64_t v28 = v7;
      __int16 v29 = 1024;
      BOOL v30 = v10 != 0;
      __int16 v31 = 1024;
      int v32 = v16;
      __int16 v33 = 1024;
      BOOL v34 = v5;
      _os_log_impl(&dword_0, v14, OS_LOG_TYPE_DEFAULT, "not syncing playlist pid=%lld. hidden=%d, isGenius=%d, isIgnorableITunesPlaylist=%d, distinguishedKind=%d, mediaType=%lx, isSubscribedCloudPlaylist=%d, pairedDeviceCanProcessStandaloneCollections=%{BOOL}u, syncFSP=%{BOOL}u", (uint8_t *)&v17, 0x40u);
    }
  }
}

void sub_502F8(id a1, BOOL a2, NSError *a3)
{
  unsigned int v4 = a3;
  if (!a2)
  {
    BOOL v5 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 138543362;
      signed int v7 = v4;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "Failed to cancel proto sync imports. err=%{public}@", (uint8_t *)&v6, 0xCu);
    }
  }
}

void sub_5045C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  int v6 = v5;
  if (a2)
  {
    signed int v7 = 0;
  }
  else
  {
    if (v5)
    {
      NSErrorUserInfoKey v9 = NSUnderlyingErrorKey;
      id v10 = v5;
      unsigned int v8 = +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];
    }
    else
    {
      unsigned int v8 = 0;
    }
    signed int v7 = +[NSError errorWithDomain:@"ATError" code:0 userInfo:v8];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_50C04(uint64_t a1)
{
  if (*(void *)(a1 + 32) != *(void *)(a1 + 40))
  {
    ICSiriPostDynamiteClientStateChangedNotification();
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFStringRef v2 = (const __CFString *)ICCloudClientIsAuthenticatedDidChangeNotification;
    CFNotificationCenterPostNotification(DarwinNotifyCenter, v2, 0, 0, 1u);
  }
}

void sub_5139C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  _Block_object_dispose((const void *)(v10 - 176), 8);
  objc_destroyWeak(location);
  _Block_object_dispose((const void *)(v10 - 240), 8);
  _Block_object_dispose((const void *)(v10 - 208), 8);
  _Unwind_Resume(a1);
}

id sub_51400(void *a1)
{
  [*(id *)(a1[4] + 64) addObject:a1[5]];
  [*(id *)(a1[4] + 64) addObject:a1[6]];
  [*(id *)(a1[4] + 64) addObject:a1[7]];
  CFStringRef v2 = *(void **)(a1[4] + 64);
  uint64_t v3 = a1[8];

  return [v2 addObject:v3];
}

void sub_51468(uint64_t a1, uint64_t a2)
{
}

void sub_51474(uint64_t a1)
{
}

void sub_5147C(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = _ATLogCategorySyncBundle();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v6 = objc_msgSend(v3, "msv_description");
      *(_DWORD *)buf = 138543362;
      uint64_t v15 = v6;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_ERROR, "finished reading incoming sync data. error=%{public}@", buf, 0xCu);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "finished reading incoming sync data.", buf, 2u);
  }

  signed int v7 = *(NSObject **)(*(void *)(a1 + 32) + 88);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_51A88;
  block[3] = &unk_9A208;
  id v8 = *(id *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 32);
  id v11 = v8;
  uint64_t v12 = v9;
  uint64_t v13 = *(void *)(a1 + 48);
  dispatch_async(v7, block);
}

uint64_t sub_515FC(uint64_t a1, float a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    unint64_t v5 = (unint64_t)(float)((float)v4 * a2);
    if (v4 == v5 || v5 % 0x64 == 0) {
      return (*(uint64_t (**)(void))(result + 16))();
    }
  }
  return result;
}

void sub_51658(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  [*(id *)(a1 + 32) closeFile];
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(NSObject **)(v9 + 88);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_519F0;
  block[3] = &unk_9A280;
  void block[4] = v9;
  id v24 = *(id *)(a1 + 32);
  id v11 = *(id *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 80);
  id v25 = v11;
  uint64_t v26 = v12;
  dispatch_async(v10, block);
  if (!v7 && (a2 & 1) == 0)
  {
    id v7 = +[NSError errorWithDomain:@"ATError" code:0 userInfo:0];
  }
  if (v8 && a2)
  {
    id v22 = 0;
    uint64_t v13 = +[NSPropertyListSerialization propertyListWithData:v8 options:0 format:0 error:&v22];
    id v14 = v22;
    if (v13)
    {
      uint64_t v15 = [v13 valueForKey:@"revisionBeforeImport"];
      *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) = [v15 longLongValue];

      int v16 = [v13 valueForKey:@"revisionAfterImport"];
      *(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) = [v16 longLongValue];
    }
    else
    {
      int v16 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        *(void *)uint64_t v28 = v14;
        _os_log_impl(&dword_0, v16, OS_LOG_TYPE_DEFAULT, "failed to decode import return data. err=%{public}@", buf, 0xCu);
      }
    }
  }
  int v17 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v18 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);
    uint64_t v19 = *(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24);
    *(_DWORD *)buf = 67109890;
    *(_DWORD *)uint64_t v28 = a2;
    *(_WORD *)&v28[4] = 2048;
    *(void *)&v28[6] = v18;
    __int16 v29 = 2048;
    uint64_t v30 = v19;
    __int16 v31 = 2114;
    id v32 = v7;
    _os_log_impl(&dword_0, v17, OS_LOG_TYPE_DEFAULT, "sync import complete. success=%d, revisionBeforeImport=%lld, revisionAfterImport=%lld, err=%{public}@", buf, 0x26u);
  }

  if (a2)
  {
    if (!*(_DWORD *)(a1 + 104))
    {
      [*(id *)(a1 + 40) _applyLibrarySettingsFromSyncParams:*(void *)(a1 + 56)];
      if (*(unsigned char *)(a1 + 108))
      {
        BOOL v20 = _ATLogCategorySyncBundle();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_0, v20, OS_LOG_TYPE_DEFAULT, "posting initial sync complete notification", buf, 2u);
        }

        DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
        CFNotificationCenterPostNotification(DarwinNotifyCenter, ICCloudClientInitialCloudLibraryImportCompletedNotification, 0, 0, 1u);
      }
    }
    if (*(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) != *(void *)(*(void *)(*(void *)(a1 + 88)
                                                                                              + 8)
                                                                                  + 24))
    {
      *(unsigned char *)(*(void *)(a1 + 40) + 120) = 1;
      [*(id *)(a1 + 64) notifyContentsDidChange];
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
}

void sub_519F0(void *a1)
{
  [*(id *)(a1[4] + 64) removeObject:a1[5]];
  [*(id *)(a1[4] + 64) removeObject:a1[6]];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1[7] + 8) + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained stop];
    [*(id *)(a1[4] + 64) removeObject:v3];
    objc_storeWeak((id *)(*(void *)(a1[7] + 8) + 40), 0);
    id WeakRetained = v3;
  }
}

uint64_t sub_51A88(uint64_t a1)
{
  [*(id *)(a1 + 32) closeFile];
  [*(id *)(*(void *)(a1 + 40) + 64) removeObject:*(void *)(a1 + 32)];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
  if (WeakRetained)
  {
    [*(id *)(*(void *)(a1 + 40) + 64) removeObject:WeakRetained];
    objc_storeWeak((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), 0);
  }

  return _objc_release_x1();
}

void sub_52834(_Unwind_Exception *a1)
{
}

uint64_t sub_52914(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_52924(uint64_t a1)
{
}

void sub_5292C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5, int a6, uint64_t a7, unsigned char *a8)
{
  ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  if (!a6)
  {
    if (a5 == 1)
    {
      if (*(unsigned char *)(a1 + 100)) {
        goto LABEL_35;
      }
      __int16 v23 = *(void **)(a1 + 32);
      id v24 = +[NSNumber numberWithLongLong:a2];
      LOBYTE(v23) = [v23 containsObject:v24];

      if ((v23 & 1) != 0 || !*(_DWORD *)(a1 + 96)) {
        goto LABEL_35;
      }
      id v25 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        int v40 = 134217984;
        uint64_t v41 = a2;
        _os_log_impl(&dword_0, v25, OS_LOG_TYPE_DEFAULT, "[update album artist] pid=%lld", (uint8_t *)&v40, 0xCu);
      }

      uint64_t v26 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) exportAlbumArtistUpdated:a2];
      uint64_t v27 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v28 = *(void **)(v27 + 40);
      *(void *)(v27 + 40) = v26;

      if (v26)
      {
        __int16 v29 = _ATLogCategorySyncBundle();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v30 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
          int v40 = 134218242;
          uint64_t v41 = a2;
          __int16 v42 = 2114;
          uint64_t v43 = v30;
          _os_log_impl(&dword_0, v29, OS_LOG_TYPE_DEFAULT, "failed to export album artist %lld. err=%{public}@", (uint8_t *)&v40, 0x16u);
        }

        if (a8) {
          *a8 = 1;
        }
      }
      __int16 v31 = *(void **)(a1 + 32);
    }
    else
    {
      if (!*(_DWORD *)(a1 + 96) || a3 || !a7) {
        goto LABEL_35;
      }
      id v32 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        int v40 = 134217984;
        uint64_t v41 = a2;
        _os_log_impl(&dword_0, v32, OS_LOG_TYPE_DEFAULT, "[add album artist] pid=%lld", (uint8_t *)&v40, 0xCu);
      }

      uint64_t v33 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) exportAlbumArtistAdded:a2];
      uint64_t v34 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v35 = *(void **)(v34 + 40);
      *(void *)(v34 + 40) = v33;

      if (v33)
      {
        unsigned int v36 = _ATLogCategorySyncBundle();
        if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v37 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
          int v40 = 134218242;
          uint64_t v41 = a2;
          __int16 v42 = 2114;
          uint64_t v43 = v37;
          _os_log_impl(&dword_0, v36, OS_LOG_TYPE_DEFAULT, "failed to export album artist %lld. err=%{public}@", (uint8_t *)&v40, 0x16u);
        }

        if (a8) {
          *a8 = 1;
        }
      }
      __int16 v31 = *(void **)(a1 + 32);
    }
    double v38 = +[NSNumber numberWithLongLong:a2];
    [v31 addObject:v38];

    goto LABEL_35;
  }
  if (*(_DWORD *)(a1 + 96) && !*(unsigned char *)(a1 + 100))
  {
    int v17 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      int v40 = 134217984;
      uint64_t v41 = a2;
      _os_log_impl(&dword_0, v17, OS_LOG_TYPE_DEFAULT, "[delete album artist] pid=%lld", (uint8_t *)&v40, 0xCu);
    }

    uint64_t v18 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) exportAlbumArtistDeleted:a2];
    uint64_t v19 = *(void *)(*(void *)(a1 + 56) + 8);
    BOOL v20 = *(void **)(v19 + 40);
    *(void *)(v19 + 40) = v18;

    if (v18)
    {
      __int16 v21 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v22 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
        int v40 = 134218242;
        uint64_t v41 = a2;
        __int16 v42 = 2114;
        uint64_t v43 = v22;
        _os_log_impl(&dword_0, v21, OS_LOG_TYPE_DEFAULT, "failed to export delete for album artist %lld. err=%{public}@", (uint8_t *)&v40, 0x16u);
      }

      if (a8) {
        *a8 = 1;
      }
    }
  }
LABEL_35:
  uint64_t v39 = ++*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  if (__ROR8__(0x1CAC083126E978D5 * v39, 2) < 0x83126E978D4FE0uLL || v39 == *(void *)(a1 + 80)) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  if (*(void *)(a1 + 88) <= a4 || *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)) {
    *a8 = 1;
  }
}

void sub_52E0C(uint64_t a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, unsigned char *a6)
{
  ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  if (a4 == 1 && *(_DWORD *)(a1 + 96) == 1 && !*(unsigned char *)(a1 + 100))
  {
    uint64_t v12 = *(void **)(a1 + 32);
    uint64_t v13 = +[NSNumber numberWithLongLong:a2];
    LOBYTE(v12) = [v12 containsObject:v13];

    if ((v12 & 1) == 0)
    {
      id v14 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        int v23 = 134217984;
        uint64_t v24 = a2;
        _os_log_impl(&dword_0, v14, OS_LOG_TYPE_DEFAULT, "[update album] pid=%lld", (uint8_t *)&v23, 0xCu);
      }

      uint64_t v15 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) exportAlbumUpdated:a2];
      uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8);
      int v17 = *(void **)(v16 + 40);
      *(void *)(v16 + 40) = v15;

      if (v15)
      {
        uint64_t v18 = _ATLogCategorySyncBundle();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v19 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
          int v23 = 134218242;
          uint64_t v24 = a2;
          __int16 v25 = 2114;
          uint64_t v26 = v19;
          _os_log_impl(&dword_0, v18, OS_LOG_TYPE_DEFAULT, "failed to export album update %lld. err=%{public}@", (uint8_t *)&v23, 0x16u);
        }

        if (a6) {
          *a6 = 1;
        }
      }
      BOOL v20 = *(void **)(a1 + 32);
      __int16 v21 = +[NSNumber numberWithLongLong:a2];
      [v20 addObject:v21];
    }
  }
  uint64_t v22 = ++*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  if (__ROR8__(0x1CAC083126E978D5 * v22, 2) < 0x83126E978D4FE0uLL || v22 == *(void *)(a1 + 80)) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  if (*(void *)(a1 + 88) <= a3 || *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)) {
    *a6 = 1;
  }
}

void sub_530B4(uint64_t a1, uint64_t a2, unint64_t a3, int a4, int a5, uint64_t a6, unsigned char *a7)
{
  if (*(void *)(a1 + 80) < a3) {
    goto LABEL_2;
  }
  if (a5)
  {
    if (*(_DWORD *)(a1 + 96) && !*(unsigned char *)(a1 + 100))
    {
      uint64_t v15 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134217984;
        uint64_t v51 = a2;
        _os_log_impl(&dword_0, v15, OS_LOG_TYPE_DEFAULT, "[delete track] pid=%lld", buf, 0xCu);
      }

      uint64_t v16 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) exportTrackDeleted:a2];
      uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v18 = *(void **)(v17 + 40);
      *(void *)(v17 + 40) = v16;

      if (v16)
      {
        uint64_t v19 = _ATLogCategorySyncBundle();
        if (!os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_18;
        }
        uint64_t v20 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
        *(_DWORD *)buf = 134218242;
        uint64_t v51 = a2;
        __int16 v52 = 2114;
        uint64_t v53 = v20;
        __int16 v21 = "failed to export delete for track %lld. err=%{public}@";
        goto LABEL_17;
      }
    }
    goto LABEL_2;
  }
  if (a4 != 1)
  {
    if (!*(_DWORD *)(a1 + 96)) {
      goto LABEL_2;
    }
    __int16 v31 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v51 = a2;
      _os_log_impl(&dword_0, v31, OS_LOG_TYPE_DEFAULT, "[add track] pid=%lld", buf, 0xCu);
    }

    uint64_t v32 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) exportTrackAdded:a2];
    uint64_t v33 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v34 = *(void **)(v33 + 40);
    *(void *)(v33 + 40) = v32;

    if (v32)
    {
      uint64_t v35 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v36 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
        *(_DWORD *)buf = 134218242;
        uint64_t v51 = a2;
        __int16 v52 = 2114;
        uint64_t v53 = v36;
        _os_log_impl(&dword_0, v35, OS_LOG_TYPE_DEFAULT, "failed to export track %lld. err=%{public}@", buf, 0x16u);
      }

      if (a7) {
        *a7 = 1;
      }
    }
    uint64_t v30 = *(void **)(a1 + 32);
LABEL_41:
    uint64_t v37 = +[NSNumber numberWithLongLong:a2];
    [v30 addObject:v37];

    goto LABEL_2;
  }
  if (*(unsigned char *)(a1 + 100)) {
    goto LABEL_2;
  }
  uint64_t v22 = *(void **)(a1 + 32);
  int v23 = +[NSNumber numberWithLongLong:a2];
  LOBYTE(v22) = [v22 containsObject:v23];

  if (v22) {
    goto LABEL_2;
  }
  if (*(_DWORD *)(a1 + 96) == 1)
  {
    uint64_t v24 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v51 = a2;
      _os_log_impl(&dword_0, v24, OS_LOG_TYPE_DEFAULT, "[add track] pid=%lld", buf, 0xCu);
    }

    uint64_t v25 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) exportTrackAdded:a2];
    uint64_t v26 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v27 = *(void **)(v26 + 40);
    *(void *)(v26 + 40) = v25;

    if (v25)
    {
      uint64_t v28 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v29 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
        *(_DWORD *)buf = 134218242;
        uint64_t v51 = a2;
        __int16 v52 = 2114;
        uint64_t v53 = v29;
        _os_log_impl(&dword_0, v28, OS_LOG_TYPE_DEFAULT, "failed to export track %lld. err=%{public}@", buf, 0x16u);
      }

      if (a7) {
        *a7 = 1;
      }
    }
    uint64_t v30 = *(void **)(a1 + 32);
    goto LABEL_41;
  }
  double v38 = *(void **)(a1 + 40);
  uint64_t v39 = +[NSNumber numberWithLongLong:a2];
  uint64_t v49 = v39;
  int v40 = +[NSArray arrayWithObjects:&v49 count:1];
  uint64_t v41 = [v38 executeQuery:@"SELECT sync_id FROM item_store WHERE item_pid=?" withParameters:v40];
  id v42 = [v41 int64ValueForFirstRowAndColumn];

  uint64_t v43 = _ATLogCategorySyncBundle();
  BOOL v44 = os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT);
  if (v42)
  {
    if (v44)
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v51 = a2;
      _os_log_impl(&dword_0, v43, OS_LOG_TYPE_DEFAULT, "[update track] pid=%lld", buf, 0xCu);
    }

    uint64_t v45 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) exportTrackUpdated:a2];
    uint64_t v46 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v47 = *(void **)(v46 + 40);
    *(void *)(v46 + 40) = v45;

    if (v45)
    {
      uint64_t v19 = _ATLogCategorySyncBundle();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
LABEL_18:

        if (a7) {
          *a7 = 1;
        }
        goto LABEL_2;
      }
      uint64_t v48 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
      *(_DWORD *)buf = 134218242;
      uint64_t v51 = a2;
      __int16 v52 = 2114;
      uint64_t v53 = v48;
      __int16 v21 = "failed to export track %lld. err=%{public}@";
LABEL_17:
      _os_log_impl(&dword_0, v19, OS_LOG_TYPE_DEFAULT, v21, buf, 0x16u);
      goto LABEL_18;
    }
  }
  else
  {
    if (v44)
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v51 = a2;
      _os_log_impl(&dword_0, v43, OS_LOG_TYPE_DEFAULT, "ignoring update track for pid=%lld as there is no sync_id", buf, 0xCu);
    }
  }
LABEL_2:
  uint64_t v14 = ++*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  if (__ROR8__(0x1CAC083126E978D5 * v14, 2) < 0x83126E978D4FE0uLL || v14 == *(void *)(a1 + 88)) {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  if (*(void *)(a1 + 80) <= a3 || *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)) {
    *a7 = 1;
  }
}

void sub_5370C(uint64_t a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, unsigned char *a6)
{
  if (*(void *)(a1 + 80) < a3) {
    goto LABEL_24;
  }
  if ([*(id *)(a1 + 32) _shouldSyncPlaylistWithPersistentId:a2 forSupportedMediaTypes:*(void *)(a1 + 40) includeNonLibraryContent:*(unsigned __int8 *)(a1 + 108) pairedDeviceCanProcessStandaloneCollections:*(unsigned __int8 *)(a1 + 109)])
  {
    if (a4)
    {
      if (*(_DWORD *)(a1 + 104) != 2 && *(void *)(a1 + 88))
      {
        uint64_t v12 = _ATLogCategorySyncBundle();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          int v29 = 134217984;
          uint64_t v30 = a2;
          _os_log_impl(&dword_0, v12, OS_LOG_TYPE_DEFAULT, "[delete playlist] pid=%lld", (uint8_t *)&v29, 0xCu);
        }

        uint64_t v13 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) exportPlaylistDeleted:a2];
        uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8);
        uint64_t v15 = *(void **)(v14 + 40);
        *(void *)(v14 + 40) = v13;

        if (v13)
        {
          uint64_t v16 = _ATLogCategorySyncBundle();
          if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_22;
          }
LABEL_10:
          uint64_t v17 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
          int v29 = 134218242;
          uint64_t v30 = a2;
          __int16 v31 = 2114;
          uint64_t v32 = v17;
          uint64_t v18 = "failed to export delete for playlist %lld. err=%{public}@";
          goto LABEL_21;
        }
      }
    }
    else
    {
      int v23 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      {
        int v29 = 134217984;
        uint64_t v30 = a2;
        _os_log_impl(&dword_0, v23, OS_LOG_TYPE_DEFAULT, "[add playlist] pid=%lld", (uint8_t *)&v29, 0xCu);
      }

      uint64_t v24 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) exportPlaylistAdded:a2];
      uint64_t v25 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v26 = *(void **)(v25 + 40);
      *(void *)(v25 + 40) = v24;

      if (v24)
      {
        uint64_t v16 = _ATLogCategorySyncBundle();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_22;
        }
        uint64_t v27 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
        int v29 = 134218242;
        uint64_t v30 = a2;
        __int16 v31 = 2114;
        uint64_t v32 = v27;
        uint64_t v18 = "failed to export playlist %lld. err=%{public}@";
LABEL_21:
        _os_log_impl(&dword_0, v16, OS_LOG_TYPE_DEFAULT, v18, (uint8_t *)&v29, 0x16u);
LABEL_22:

        if (a6) {
          *a6 = 1;
        }
      }
    }
  }
  else
  {
    uint64_t v19 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      int v29 = 134217984;
      uint64_t v30 = a2;
      _os_log_impl(&dword_0, v19, OS_LOG_TYPE_DEFAULT, "[delete playlist] pid=%lld", (uint8_t *)&v29, 0xCu);
    }

    uint64_t v20 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) exportPlaylistDeleted:a2];
    uint64_t v21 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v22 = *(void **)(v21 + 40);
    *(void *)(v21 + 40) = v20;

    if (v20)
    {
      uint64_t v16 = _ATLogCategorySyncBundle();
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_22;
      }
      goto LABEL_10;
    }
  }
LABEL_24:
  if (*(void *)(a1 + 80) < a3 || *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)) {
    *a6 = 1;
  }
  uint64_t v28 = ++*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  if (__ROR8__(0x1CAC083126E978D5 * v28, 2) < 0x83126E978D4FE0uLL || v28 == *(void *)(a1 + 96)) {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_541E8(uint64_t a1, void *a2)
{
  id v3 = [a2 executeQuery:@"SELECT DISTINCT account_id FROM item_store"];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  _DWORD v4[2] = sub_54290;
  v4[3] = &unk_9AF98;
  id v5 = *(id *)(a1 + 32);
  [v3 enumerateRowsWithBlock:v4];
}

void sub_54290(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 objectAtIndexedSubscript:0];
  if (v3)
  {
    unint64_t v4 = *(void **)(a1 + 32);
    id v5 = [v6 objectAtIndexedSubscript:0];
    [v4 addObject:v5];
  }
}

void sub_55654(uint64_t a1)
{
  id v3 = +[NSPropertyListSerialization dataWithPropertyList:*(void *)(a1 + 32) format:200 options:0 error:0];
  id v4 = objc_alloc((Class)ML3MutableDatabaseImport);
  id v5 = +[ML3MusicLibrary autoupdatingSharedLibraryPath];
  id v6 = [v4 initWithLibraryPath:v5 trackData:v3 playlistData:0];

  [v6 setResetSync:0];
  id v7 = objc_alloc_init((Class)ICCloudClient);
  id v8 = [v7 isAuthenticated];

  [v6 setSagaEnabled:v8];
  [v6 setSyncAnchor:*(void *)(a1 + 40)];
  uint64_t v9 = +[MLMediaLibraryService sharedMediaLibraryService];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_557D0;
  v10[3] = &unk_9A0F0;
  id v11 = *(id *)(a1 + 48);
  [v9 performImport:v6 fromSource:5 withProgressBlock:0 completionHandler:v10];
}

void sub_557D0(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109378;
    v7[1] = a2;
    __int16 v8 = 2114;
    id v9 = v5;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "metadataUpdate import complete. success=%d, err=%{public}@", (uint8_t *)v7, 0x12u);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_55BEC(uint64_t a1, uint64_t a2, id *a3)
{
  __int16 v6 = (unsigned __int16)[*a3 integerValue];
  if ([a3[4] BOOLValue])
  {
    id v7 = @"Music";
  }
  else
  {
    sub_6B9B8(v6);
    id v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  __int16 v8 = [*(id *)(a1 + 32) objectForKey:v7];
  if (!v8)
  {
    __int16 v8 = +[NSMutableDictionary dictionaryWithCapacity:2];
    [*(id *)(a1 + 32) setObject:v8 forKey:v7];
  }
  [a3[1] unsignedLongLongValue];
  uint64_t v9 = ATGetPhysicalSizeForLogicalSize();
  uint64_t v10 = [v8 objectForKey:@"_PhysicalSize"];
  id v11 = (char *)[v10 unsignedLongLongValue] + v9;

  uint64_t v12 = +[NSNumber numberWithUnsignedLongLong:v11];
  [v8 setObject:v12 forKey:@"_PhysicalSize"];

  if ([a3[2] BOOLValue])
  {
    uint64_t v13 = [v8 objectForKey:@"_PurgeableSize"];
    uint64_t v14 = (char *)[v13 unsignedLongLongValue] + v9;

    uint64_t v15 = +[NSNumber numberWithUnsignedLongLong:v14];
    uint64_t v16 = v8;
    uint64_t v17 = v15;
    CFStringRef v18 = @"_PurgeableSize";
  }
  else
  {
    uint64_t v19 = [v8 objectForKey:@"_Count"];
    uint64_t v20 = (char *)[v19 unsignedIntegerValue] + 1;

    uint64_t v15 = +[NSNumber numberWithUnsignedInteger:v20];
    uint64_t v16 = v8;
    uint64_t v17 = v15;
    CFStringRef v18 = @"_Count";
  }
  [v16 setObject:v17 forKey:v18];
}

void sub_55DD4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v9 = +[ML3PersistentIDsPredicate predicateWithPersistentIDs:v6 shouldContain:1];
  uint64_t v10 = +[ML3Track queryWithLibrary:*(void *)(a1 + 32) predicate:v9];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_55EE8;
  v12[3] = &unk_9A980;
  uint64_t v11 = *(void *)(a1 + 40);
  id v13 = *(id *)(a1 + 48);
  [v10 enumeratePersistentIDsAndProperties:v11 usingBlock:v12];
}

void sub_55EE8(uint64_t a1, uint64_t a2, id *a3)
{
  __int16 v5 = (unsigned __int16)[*a3 integerValue];
  if ([a3[4] BOOLValue])
  {
    CFStringRef v6 = @"Music";
  }
  else
  {
    sub_6B9B8(v5);
    CFStringRef v6 = (const __CFString *)objc_claimAutoreleasedReturnValue();
  }
  uint64_t v12 = (__CFString *)v6;
  id v7 = [*(id *)(a1 + 32) objectForKey:v6];
  [a3[1] unsignedLongLongValue];
  uint64_t v8 = ATGetPhysicalSizeForLogicalSize();
  uint64_t v9 = [v7 objectForKey:@"_PurgeableSize"];
  uint64_t v10 = (char *)[v9 unsignedLongLongValue] + v8;

  uint64_t v11 = +[NSNumber numberWithUnsignedLongLong:v10];
  [v7 setObject:v11 forKey:@"_PurgeableSize"];
}

void sub_5649C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 168), 8);
  _Unwind_Resume(a1);
}

void sub_564D8(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)sub_568A0());
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_56984;
  v5[3] = &unk_9A000;
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v7 = v3;
  uint64_t v8 = v4;
  id v6 = *(id *)(a1 + 32);
  [v2 getPathsForFilesWithClass:2 completionBlock:v5];
}

void sub_56590(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, unsigned char *a5)
{
  id v10 = [objc_alloc((Class)ML3Track) initWithPersistentID:a2 inLibrary:*(void *)(a1 + 32)];
  [*a3 BOOLValue];
  uint64_t v11 = [v10 absoluteFilePath];
  if ([v11 length] && objc_msgSend(*(id *)(a1 + 40), "fileExistsAtPath:", v11))
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    *a5 = *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) ^ 1;
  }
}

void sub_5667C(uint64_t a1, void *a2)
{
  id v3 = [a2 executeQuery:@"SELECT artwork_source_type, relative_path FROM artwork"];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_56750;
  v6[3] = &unk_9A078;
  id v7 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v4 = *(id *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  id v9 = v4;
  uint64_t v10 = v5;
  [v3 enumerateRowsWithBlock:v6];
}

void sub_56750(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v12 = a2;
  id v7 = a3;
  [v12 intForColumnIndex:0];
  id v9 = [v12 stringForColumnIndex:1];
  if ([v9 length])
  {
    uint64_t v10 = [*(id *)(a1 + 32) originalArtworkDirectory];
    uint64_t v11 = [v10 stringByAppendingPathComponent:v9];

    if ([*(id *)(a1 + 40) fileExistsAtPath:v11]) {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
  }
  *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) ^ 1;
}

id sub_568A0()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  int v0 = (void *)qword_A8000;
  uint64_t v7 = qword_A8000;
  if (!qword_A8000)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_56AA8;
    v3[3] = &unk_9AB58;
    v3[4] = &v4;
    sub_56AA8((uint64_t)v3);
    int v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_5696C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_56984(uint64_t a1, void *a2)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v3 = a2;
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
LABEL_3:
    uint64_t v7 = 0;
    while (1)
    {
      if (*(void *)v9 != v6) {
        objc_enumerationMutation(v3);
      }
      (*(void (**)(void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40));
      if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
        break;
      }
      if (v5 == (id)++v7)
      {
        id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
        if (v5) {
          goto LABEL_3;
        }
        break;
      }
    }
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_56AA8(uint64_t a1)
{
  sub_56B70();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("SSDownloadFileManifest");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_A8000 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = +[NSAssertionHandler currentHandler];
    id v3 = +[NSString stringWithUTF8String:"Class getSSDownloadFileManifestClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"MLSyncClient.m", 142, @"Unable to find class %s", "SSDownloadFileManifest");

    __break(1u);
  }
}

void *sub_56B70()
{
  v4[0] = 0;
  if (!qword_A4AE8)
  {
    v4[1] = _NSConcreteStackBlock;
    _DWORD v4[2] = (void *)3221225472;
    v4[3] = sub_56CC4;
    void v4[4] = &unk_9AE18;
    v4[5] = v4;
    long long v5 = off_9A750;
    uint64_t v6 = 0;
    qword_A4AE8 = _sl_dlopen();
  }
  int v0 = (void *)qword_A4AE8;
  if (!qword_A4AE8)
  {
    int v0 = +[NSAssertionHandler currentHandler];
    id v3 = +[NSString stringWithUTF8String:"void *StoreServicesLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"MLSyncClient.m", 141, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t sub_56CC4()
{
  uint64_t result = _sl_dlopen();
  qword_A4AE8 = result;
  return result;
}

void sub_56E4C(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)sub_568A0());
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_56F00;
  v3[3] = &unk_99FD8;
  id v4 = *(id *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  [v2 getPathsForFilesWithClass:2 completionBlock:v3];
}

intptr_t sub_56F00(uint64_t a1, uint64_t a2)
{
  if (a2) {
    [*(id *)(a1 + 32) addObjectsFromArray:a2];
  }
  id v3 = *(NSObject **)(a1 + 40);

  return dispatch_semaphore_signal(v3);
}

intptr_t sub_57450(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_57AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void sub_57AD4(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = +[NSNumber numberWithLongLong:a2];
  [v2 addObject:v3];
}

void sub_57B34(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = +[NSNumber numberWithLongLong:a2];
  LOBYTE(v6) = [v6 containsObject:v7];

  if ((v6 & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
    *a4 = 1;
  }
}

void sub_587DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a65, 8);
  _Unwind_Resume(a1);
}

void sub_58818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ([*(id *)(a3 + 104) longLongValue])
  {
    id quot = [*(id *)(a3 + 104) longLongValue];
    a2 = (uint64_t)quot;
    uint64_t v7 = (char *)&v15 + 1;
    do
    {
      lldiv_t v8 = lldiv((uint64_t)quot, 10);
      id quot = (id)v8.quot;
      if (v8.rem >= 0) {
        LOBYTE(v9) = v8.rem;
      }
      else {
        uint64_t v9 = -v8.rem;
      }
      *(v7 - 2) = v9 + 48;
      long long v10 = (const UInt8 *)(v7 - 2);
      --v7;
    }
    while (v8.quot);
  }
  else
  {
    uint64_t v7 = (char *)&v15 + 1;
    uint64_t v11 = a2;
    do
    {
      lldiv_t v12 = lldiv(v11, 10);
      uint64_t v11 = v12.quot;
      if (v12.rem >= 0) {
        LOBYTE(v13) = v12.rem;
      }
      else {
        uint64_t v13 = -v12.rem;
      }
      *(v7 - 2) = v13 + 48;
      long long v10 = (const UInt8 *)(v7 - 2);
      --v7;
    }
    while (v12.quot);
  }
  if (a2 < 0)
  {
    *(v7 - 2) = 45;
    long long v10 = (const UInt8 *)(v7 - 2);
  }
  uint64_t v14 = (id)CFStringCreateWithBytes(0, v10, (char *)&v15 - (char *)v10, 0x8000100u, 0);

  [*(id *)(a1 + 32) addObject:v14];
}

void sub_58940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ([*(id *)(a3 + 104) longLongValue])
  {
    id quot = [*(id *)(a3 + 104) longLongValue];
    unint64_t v7 = (unint64_t)quot;
    lldiv_t v8 = (char *)&v95 + 5;
    do
    {
      lldiv_t v9 = lldiv((uint64_t)quot, 10);
      id quot = (id)v9.quot;
      if (v9.rem >= 0) {
        LOBYTE(v10) = v9.rem;
      }
      else {
        uint64_t v10 = -v9.rem;
      }
      *(v8 - 2) = v10 + 48;
      uint64_t v11 = (const UInt8 *)(v8 - 2);
      --v8;
    }
    while (v9.quot);
    if ((v7 & 0x8000000000000000) != 0)
    {
      *(v8 - 2) = 45;
      uint64_t v11 = (const UInt8 *)(v8 - 2);
    }
    lldiv_t v12 = (char *)((char *)&v95 + 4 - (char *)v11);
  }
  else
  {
    uint64_t v13 = (char *)&v95 + 5;
    uint64_t v14 = a2;
    do
    {
      lldiv_t v15 = lldiv(v14, 10);
      uint64_t v14 = v15.quot;
      if (v15.rem >= 0) {
        LOBYTE(v16) = v15.rem;
      }
      else {
        uint64_t v16 = -v15.rem;
      }
      *(v13 - 2) = v16 + 48;
      uint64_t v11 = (const UInt8 *)(v13 - 2);
      --v13;
    }
    while (v15.quot);
    if (a2 < 0)
    {
      *(v13 - 2) = 45;
      uint64_t v11 = (const UInt8 *)(v13 - 2);
    }
    lldiv_t v12 = (char *)((char *)&v95 + 4 - (char *)v11);
  }
  uint64_t v17 = (id)CFStringCreateWithBytes(0, v11, (CFIndex)v12, 0x8000100u, 0);

  CFStringRef v18 = [*(id *)(*(void *)(a1 + 32) + 16) objectForKey:v17];
  if (!v18)
  {
    unsigned int v19 = [*(id *)(a3 + 16) unsignedIntValue];
    uint64_t v20 = (id *)(a1 + 40);
    id v21 = *(id *)(a1 + 40);
    if ([*(id *)(a3 + 120) intValue])
    {
      uint64_t v20 = (id *)(a1 + 48);
    }
    else if ((v19 & 8) == 0)
    {
      if ((v19 & 0x800) != 0)
      {
        uint64_t v20 = (id *)(a1 + 56);
      }
      else if ((v19 & 0x2000) != 0)
      {
        uint64_t v20 = (id *)(a1 + 64);
      }
      else if ((v19 & 0x200) != 0)
      {
        uint64_t v20 = (id *)(a1 + 72);
      }
      else if ((v19 & 4) != 0)
      {
        uint64_t v20 = (id *)(a1 + 80);
      }
      else if ((v19 & 0x1020) != 0)
      {
        uint64_t v20 = (id *)(a1 + 88);
      }
      else
      {
        if ((v19 & 2) == 0)
        {
          id v80 = v21;
          goto LABEL_33;
        }
        uint64_t v20 = (id *)(a1 + 96);
      }
    }
    id v22 = *v20;

    id v80 = v22;
LABEL_33:
    int v23 = *(__CFString **)(a3 + 128);
    if (!v23) {
      int v23 = &stru_9B528;
    }
    uint64_t v24 = v23;
    uint64_t v25 = (char *)&v95 + 5;
    uint64_t v26 = a2;
    do
    {
      lldiv_t v27 = lldiv(v26, 10);
      uint64_t v26 = v27.quot;
      if (v27.rem >= 0) {
        LOBYTE(v2_Block_object_dispose(&STACK[0x260], 8) = v27.rem;
      }
      else {
        uint64_t v28 = -v27.rem;
      }
      *(v25 - 2) = v28 + 48;
      int v29 = (const UInt8 *)(v25 - 2);
      --v25;
    }
    while (v27.quot);
    if (a2 < 0)
    {
      *(v25 - 2) = 45;
      int v29 = (const UInt8 *)(v25 - 2);
    }
    CFStringRef v73 = v17;
    uint64_t v30 = (__CFString *)CFStringCreateWithBytes(0, v29, (char *)&v95 + 4 - (char *)v29, 0x8000100u, 0);
    uint64_t v79 = v24;
    __int16 v31 = +[ATAsset downloadAssetWithIdentifier:v30 dataclass:@"Media" prettyName:v24];

    uint64_t v32 = sub_6B9B8(v19);
    [v31 setAssetType:v32];

    unint64_t v33 = (unint64_t)[*(id *)(a3 + 184) unsignedLongLongValue];
    if (!v33)
    {
      [*(id *)(a3 + 192) doubleValue];
      if ((v19 & 4) != 0)
      {
        unint64_t v33 = 52428800;
      }
      else if (v34 <= 0.0)
      {
        unint64_t v33 = 7340032;
      }
      else
      {
        unint64_t v33 = (unint64_t)(v34 * 35.8260224);
      }
      uint64_t v35 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134218496;
        uint64_t v91 = a2;
        __int16 v92 = 1024;
        unsigned int v93 = v19;
        __int16 v94 = 2048;
        unint64_t v95 = v33;
        _os_log_impl(&dword_0, v35, OS_LOG_TYPE_DEFAULT, "Estimating the size of track %lld media_type %u to %llu", buf, 0x1Cu);
      }
    }
    uint64_t v76 = a2;
    uint64_t v84 = a1;
    __int16 v72 = v19;
    [v31 setTotalBytes:v33];
    id v36 = *(id *)(a3 + 104);
    id v37 = *(id *)(a3 + 56);
    id v38 = *(id *)(a3 + 72);
    id v39 = *(id *)(a3 + 80);
    id v40 = *(id *)(a3 + 88);
    id v41 = *(id *)(a3 + 96);
    id v42 = *(id *)(a3 + 48);
    id v89 = *(id *)(a3 + 168);
    id v43 = *(id *)(a3 + 64);
    id v44 = *(id *)(a3 + 176);
    id v82 = v43;
    uint64_t v83 = v42;
    v45.i64[0] = (uint64_t)v43;
    uint64_t v87 = v38;
    uint64_t v88 = v36;
    v45.i64[1] = (uint64_t)v38;
    v46.i64[0] = (uint64_t)v42;
    v46.i64[1] = (uint64_t)v37;
    v47.i64[0] = (uint64_t)v41;
    v47.i64[1] = (uint64_t)v36;
    CFStringRef v86 = v39;
    v48.i64[0] = (uint64_t)v39;
    uint64_t v49 = v40;
    v48.i64[1] = (uint64_t)v40;
    uint64_t v78 = v37;
    unint64_t v75 = v44;
    if ((vmaxv_u8((uint8x8_t)vmovn_s16((int16x8_t)vmvnq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v46), (int32x4_t)vceqzq_s64(v45)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(v48), (int32x4_t)vceqzq_s64(v47)))))) & 1) != 0|| v89|| v44)
    {
      id v51 = v44;
      id v52 = objc_alloc_init((Class)ATStoreInfo);
      [v52 setDSID:v37];
      uint64_t v53 = [*(id *)(v84 + 104) accountCacheDatabase];
      uint64_t v54 = objc_msgSend(v53, "appleIDForDSID:", objc_msgSend(v37, "longLongValue"));
      [v52 setAppleID:v54];

      [v52 setFlavor:v87];
      if ([v89 integerValue] == (char *)&dword_0 + 3) {
        id v55 = v51;
      }
      else {
        id v55 = v82;
      }
      [v52 setAdamID:v55];
      uint64_t v50 = v41;
      [v52 setSagaID:v41];
      [v52 setMatchStatus:v86];
      [v52 setRedownloadStatus:v49];
      [v52 setPodcastEpisodeGUID:v42];
      id v56 = [v41 longLongValue];
      uint64_t v57 = 144;
      if (!v56) {
        uint64_t v57 = 136;
      }
      [v52 setRedownloadParams:*(void *)(a3 + v57)];
      id v58 = [v88 stringValue];
      [v52 setSyncID:v58];

      [v52 setEndpointType:v89];
      [v31 setStoreInfo:v52];
    }
    else
    {
      [v31 setBypassStore:1];
      uint64_t v50 = v41;
    }
    uint64_t v17 = v73;
    uint64_t v59 = !*(void *)a3
       || ![*(id *)a3 longLongValue]
       || [*(id *)a3 longLongValue] == stru_B8.segname;
    uint64_t v60 = v84;
    if (*(void *)(a3 + 104))
    {
      id v61 = [*(id *)(a3 + 160) longLongValue];
      if (v61 != [*(id *)(a3 + 152) longLongValue]) {
        v59 |= 8uLL;
      }
    }
    uint64_t v62 = v80;
    uint64_t v63 = [*(id *)(v84 + 112) objectForKey:v73];
    uint64_t v64 = v63;
    if (v63) {
      objc_msgSend(v31, "setStorePID:", objc_msgSend(v63, "persistentIdentifier"));
    }
    if ([*(id *)(a3 + 104) longLongValue] && !objc_msgSend(*(id *)(a3 + 96), "longLongValue"))
    {
      id v85 = +[ML3Track newWithPersistentID:v76 inLibrary:*(void *)(v84 + 104)];
      id v81 = [objc_alloc((Class)ML3ArtworkTokenSet) initWithEntity:v85 artworkType:1];
      id v65 = [v81 artworkTokenForSource:300];
      if (v65
        && ([*(id *)(v60 + 120) containsObject:v65] & 1) == 0
        && ([*(id *)(v60 + 104) isArtworkTokenAvailable:v65] & 1) == 0)
      {
        v59 |= 2uLL;
        [*(id *)(v60 + 120) addObject:v65];
      }
      if (!*(unsigned char *)(v60 + 152) && (v72 & 0x408) != 0)
      {
        id v66 = *(id *)(a3 + 24);
        if (v66)
        {
          id v77 = v66;
          if (([*(id *)(v60 + 128) containsObject:v66] & 1) == 0)
          {
            id v74 = *(id *)(a3 + 32);
            id v67 = *(id *)(a3 + 40);
            if (v67)
            {
              id v71 = v67;
              if (([v67 isEqual:v74] & 1) == 0)
              {
                v59 |= 4uLL;
                [*(id *)(v60 + 128) addObject:v77];
              }
              id v67 = v71;
            }
          }
          id v66 = v77;
        }
      }
    }
    objc_msgSend(v31, "setIsRestore:", objc_msgSend(*(id *)(a3 + 112), "BOOLValue"));
    if ([v31 isRestore])
    {
      [v31 setIsForeground:1];
      if ([*(id *)(v60 + 136) containsObject:v17])
      {
        unsigned __int8 v68 = _ATLogCategorySyncBundle();
        if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138543362;
          uint64_t v91 = (uint64_t)v31;
          _os_log_impl(&dword_0, v68, OS_LOG_TYPE_DEFAULT, "Marking for priority download: %{public}@", buf, 0xCu);
        }

        [v31 setIsPrioritized:1];
      }
    }
    if (v59)
    {
      if ((v59 & 1) != 0 && (v72 & 8) != 0) {
        ++*(void *)(*(void *)(*(void *)(v60 + 144) + 8) + 24);
      }
      uint64_t v69 = +[NSNumber numberWithUnsignedInteger:v59];
      unsigned int v70 = +[NSDictionary dictionaryWithObject:v69 forKey:@"AssetParts"];
      [v31 setVariantOptions:v70];

      [v62 addObject:v31];
    }

    CFStringRef v18 = 0;
  }
}

void sub_5923C(uint64_t a1, uint64_t a2, id *a3)
{
  id v6 = *a3;
  id v7 = a3[1];
  id v8 = +[ML3Container newWithPersistentID:a2 inLibrary:*(void *)(a1 + 32)];
  id v9 = [objc_alloc((Class)ML3ArtworkTokenSet) initWithEntity:v8 artworkType:5];
  uint64_t v10 = [v9 artworkTokenForSource:300];
  if (v10 && ([*(id *)(a1 + 32) isArtworkTokenAvailable:v10] & 1) == 0)
  {
    uint64_t v11 = (char *)&v22 + 1;
    uint64_t quot = a2;
    do
    {
      lldiv_t v13 = lldiv(quot, 10);
      uint64_t quot = v13.quot;
      if (v13.rem >= 0) {
        LOBYTE(v14) = v13.rem;
      }
      else {
        uint64_t v14 = -v13.rem;
      }
      *(v11 - 2) = v14 + 48;
      lldiv_t v15 = (const UInt8 *)(v11 - 2);
      --v11;
    }
    while (v13.quot);
    if (a2 < 0)
    {
      *(v11 - 2) = 45;
      lldiv_t v15 = (const UInt8 *)(v11 - 2);
    }
    uint64_t v16 = (__CFString *)CFStringCreateWithBytes(0, v15, (char *)&v22 - (char *)v15, 0x8000100u, 0);
    uint64_t v17 = +[ATAsset downloadAssetWithIdentifier:v16 dataclass:@"Media" prettyName:v6];

    [v17 setAssetType:@"Playlist"];
    CFStringRef v18 = +[NSNumber numberWithUnsignedInteger:2];
    unsigned int v19 = +[NSDictionary dictionaryWithObject:v18 forKey:@"AssetParts"];
    [v17 setVariantOptions:v19];

    id v20 = objc_alloc_init((Class)ATStoreInfo);
    id v21 = [v7 stringValue];
    [v20 setSyncID:v21];

    [v17 setStoreInfo:v20];
    [*(id *)(a1 + 40) addObject:v17];
  }
}

void sub_5970C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *sub_5972C(uint64_t a1)
{
  id v2 = sub_56B70();
  uint64_t result = dlsym(v2, "SSDownloadPropertyLibraryItemIdentifier");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_A4AF0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_59A50(uint64_t a1)
{
  id v2 = [objc_alloc((Class)sub_568A0()) initWithManifestType:0];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_59AF4;
  v3[3] = &unk_9AF48;
  id v4 = *(id *)(a1 + 32);
  [v2 rebuildManifestWithCompletionBlock:v3];
}

intptr_t sub_59AF4(uint64_t a1)
{
  id v2 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = +[NSFileManager defaultManager];
    id v4 = [v3 contentsOfDirectoryAtPath:@"/var/mobile/Media/Purchases" error:0];
    int v6 = 138543362;
    id v7 = v4;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "Manifest rebuilt from %{public}@", (uint8_t *)&v6, 0xCu);
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_5A574(uint64_t a1, void *a2)
{
  id v91 = a2;
  uint64_t v2 = ML3TrackPropertyMediaType;
  id v3 = +[NSNumber numberWithInteger:260];
  uint64_t v4 = +[ML3ComparisonPredicate predicateWithProperty:v2 value:v3 comparison:10];

  id v100 = +[ML3ComparisonPredicate predicateWithProperty:ML3TrackPropertyIsITunesU equalToInteger:1];
  __int16 v99 = +[ML3ComparisonPredicate predicateWithProperty:v2 value:&off_9C9A8 comparison:2];
  unint64_t v101 = (void *)v4;
  uint64_t v98 = +[ML3NegationPredicate predicateWithPredicate:v4];
  uint64_t v5 = ML3TrackPropertyStoreItemID;
  int v6 = +[NSNumber numberWithInt:0];
  uint64_t v7 = +[ML3ComparisonPredicate predicateWithProperty:v5 value:v6 comparison:2];

  uint64_t v8 = ML3TrackPropertyStoreAccountID;
  id v9 = +[NSNumber numberWithInt:0];
  uint64_t v10 = +[ML3ComparisonPredicate predicateWithProperty:v8 value:v9 comparison:2];

  uint64_t v11 = ML3TrackPropertyStoreSagaID;
  lldiv_t v12 = +[NSNumber numberWithInt:0];
  uint64_t v13 = +[ML3ComparisonPredicate predicateWithProperty:v11 value:v12 comparison:2];

  uint64_t v87 = +[ML3ComparisonPredicate predicateWithProperty:ML3TrackPropertyMatchRedownloadParameters value:&stru_9B528 comparison:2 caseInsensitive:1 treatNullAsString:&stru_9B528];
  uint64_t v88 = (void *)v13;
  v133[0] = v13;
  v133[1] = v87;
  uint64_t v14 = +[NSArray arrayWithObjects:v133 count:2];
  uint64_t v15 = +[ML3AllCompoundPredicate predicateMatchingPredicates:v14];

  uint64_t v16 = ML3TrackPropertySubscriptionStoreItemID;
  uint64_t v17 = +[NSNumber numberWithInt:0];
  uint64_t v18 = +[ML3ComparisonPredicate predicateWithProperty:v16 value:v17 comparison:2];

  unsigned int v93 = (void *)v7;
  v132[0] = v7;
  v132[1] = v10;
  uint64_t v90 = (void *)v10;
  unsigned int v19 = +[NSArray arrayWithObjects:v132 count:2];
  uint64_t v20 = +[ML3AllCompoundPredicate predicateMatchingPredicates:v19];

  uint64_t v84 = (void *)v20;
  id v85 = (void *)v18;
  v131[0] = v20;
  v131[1] = v15;
  CFStringRef v86 = (void *)v15;
  v131[2] = v18;
  id v21 = +[NSArray arrayWithObjects:v131 count:3];
  uint64_t v22 = +[ML3AnyCompoundPredicate predicateMatchingPredicates:v21];

  uint64_t v95 = ML3TrackPropertyBaseLocationID;
  uint64_t v23 = +[ML3ComparisonPredicate predicateWithProperty:value:comparison:](ML3ComparisonPredicate, "predicateWithProperty:value:comparison:");
  uint64_t v94 = ML3TrackPropertyNeedsRestore;
  uint64_t v24 = +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:](ML3ComparisonPredicate, "predicateWithProperty:equalToInt64:");
  unint64_t v130 = v100;
  uint64_t v25 = +[NSArray arrayWithObjects:&v130 count:1];
  uint64_t v26 = +[ML3AnyCompoundPredicate predicateMatchingPredicates:v25];

  v129[0] = v22;
  v129[1] = v99;
  v129[2] = v98;
  lldiv_t v27 = +[NSArray arrayWithObjects:v129 count:3];
  uint64_t v28 = +[ML3AllCompoundPredicate predicateMatchingPredicates:v27];

  if (_os_feature_enabled_impl())
  {
    v128[0] = v22;
    v128[1] = v98;
    int v29 = +[NSArray arrayWithObjects:v128 count:2];
    uint64_t v30 = +[ML3AllCompoundPredicate predicateMatchingPredicates:v29];

    uint64_t v28 = (void *)v30;
  }
  id v81 = v28;
  id v82 = (void *)v26;
  v127[0] = v28;
  v127[1] = v26;
  __int16 v31 = +[NSArray arrayWithObjects:v127 count:2];
  uint64_t v32 = +[ML3AnyCompoundPredicate predicateMatchingPredicates:v31];

  uint64_t v83 = (void *)v24;
  v126[0] = v24;
  v126[1] = v23;
  unint64_t v33 = +[NSArray arrayWithObjects:v126 count:2];
  uint64_t v34 = +[ML3AnyCompoundPredicate predicateMatchingPredicates:v33];

  uint64_t v79 = (void *)v34;
  id v80 = (void *)v32;
  v125[0] = v32;
  v125[1] = v34;
  uint64_t v35 = +[NSArray arrayWithObjects:v125 count:2];
  uint64_t v36 = +[ML3AllCompoundPredicate predicateMatchingPredicates:v35];

  __int16 v97 = +[ML3NegationPredicate predicateWithPredicate:v36];
  id v37 = +[NSFileManager defaultManager];
  id v38 = +[NSMutableArray array];
  uint64_t v78 = (void *)v36;
  id v39 = +[ML3Track unrestrictedAllItemsQueryWithlibrary:*(void *)(a1 + 32) predicate:v36 orderingTerms:0];
  uint64_t v96 = ML3TrackPropertyTitle;
  uint64_t v124 = ML3TrackPropertyTitle;
  id v40 = +[NSArray arrayWithObjects:&v124 count:1];
  v111[0] = _NSConcreteStackBlock;
  v111[1] = 3221225472;
  v111[2] = sub_5B2DC;
  v111[3] = &unk_99F10;
  id v112 = *(id *)(a1 + 32);
  id v41 = v37;
  id v113 = v41;
  id v42 = v38;
  id v114 = v42;
  [v39 enumeratePersistentIDsAndProperties:v40 usingBlock:v111];
  id v43 = _ATLogCategorySyncBundle();
  id v44 = v91;
  if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
  {
    id v45 = [v42 count];
    *(_DWORD *)buf = 134217984;
    id v123 = v45;
    _os_log_impl(&dword_0, v43, OS_LOG_TYPE_DEFAULT, "<Reconcile Restore> Found %lu tracks to restore", buf, 0xCu);
  }
  uint64_t v102 = (void *)v23;

  if ([v42 count])
  {
    v121[0] = v94;
    v121[1] = v95;
    v121[2] = ML3TrackPropertyLocationFileName;
    v121[3] = ML3TrackPropertyDownloadIdentifier;
    v121[4] = ML3TrackPropertyDateDownloaded;
    v121[5] = ML3TrackPropertyDownloadSourceContainerPid;
    v121[6] = ML3EntityPropertyKeepLocalStatus;
    v121[7] = ML3TrackPropertyHLSOfflinePlaybackKeys;
    int64x2_t v46 = +[NSArray arrayWithObjects:v121 count:8];
    v120[0] = &__kCFBooleanTrue;
    v120[1] = &off_9C9D8;
    v120[2] = &stru_9B528;
    v120[3] = &off_9C9D8;
    v120[4] = &off_9C9D8;
    v120[5] = &off_9C9D8;
    v120[6] = &off_9C9F0;
    int64x2_t v47 = +[NSNull null];
    v120[7] = v47;
    int64x2_t v48 = +[NSArray arrayWithObjects:v120 count:8];

    id v49 = [v48 count];
    if (v49 != [v46 count])
    {
      uint64_t v76 = +[NSAssertionHandler currentHandler];
      [v76 handleFailureInMethod:*(void *)(a1 + 48) object:*(void *)(a1 + 40) file:@"MLSyncClient.m" lineNumber:708 description:@"restore property mismatch"];
    }
    uint64_t v50 = [*(id *)(a1 + 40) _library];
    id v44 = v91;
    +[ML3Track setValues:v48 forProperties:v46 forEntityPersistentIDs:v42 inLibrary:v50 usingConnection:v91];
  }
  id v51 = +[NSMutableArray array];
  uint64_t v52 = *(void *)(a1 + 32);
  v119[0] = v101;
  v119[1] = v23;
  uint64_t v53 = +[NSArray arrayWithObjects:v119 count:2];
  uint64_t v54 = +[ML3AllCompoundPredicate predicateMatchingPredicates:v53];
  id v55 = +[ML3Track unrestrictedAllItemsQueryWithlibrary:v52 predicate:v54 orderingTerms:0];

  uint64_t v118 = v96;
  id v56 = +[NSArray arrayWithObjects:&v118 count:1];
  v107[0] = _NSConcreteStackBlock;
  v107[1] = 3221225472;
  v107[2] = sub_5B47C;
  v107[3] = &unk_99F10;
  id v108 = *(id *)(a1 + 32);
  id v57 = v41;
  id v109 = v57;
  id v58 = v51;
  id v110 = v58;
  [v55 enumeratePersistentIDsAndProperties:v56 usingBlock:v107];
  uint64_t v59 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
  {
    id v60 = [v58 count];
    *(_DWORD *)buf = 134217984;
    id v123 = v60;
    _os_log_impl(&dword_0, v59, OS_LOG_TYPE_DEFAULT, "<Reconcile Restore> Found %lu podcasts to update", buf, 0xCu);
  }

  if ([v58 count])
  {
    v117[0] = v94;
    v117[1] = ML3EntityPropertyKeepLocal;
    v117[2] = v95;
    v117[3] = ML3TrackPropertyLocationFileName;
    id v61 = +[NSArray arrayWithObjects:v117 count:4];
    +[ML3Track setValues:&off_9CF68 forProperties:v61 forEntityPersistentIDs:v58 inLibrary:*(void *)(a1 + 32) usingConnection:v44];
  }
  uint64_t v63 = +[NSMutableArray array];
  uint64_t v64 = *(void *)(a1 + 32);
  v116[0] = v97;
  v116[1] = v102;
  id v65 = +[NSArray arrayWithObjects:v116 count:2];
  id v66 = +[ML3AllCompoundPredicate predicateMatchingPredicates:v65];
  id v67 = +[ML3Track unrestrictedAllItemsQueryWithlibrary:v64 predicate:v66 orderingTerms:0];

  uint64_t v115 = v96;
  unsigned __int8 v68 = +[NSArray arrayWithObjects:&v115 count:1];
  v103[0] = _NSConcreteStackBlock;
  v103[1] = 3221225472;
  void v103[2] = sub_5B61C;
  v103[3] = &unk_99F10;
  id v104 = *(id *)(a1 + 32);
  id v69 = v57;
  id v105 = v69;
  id v70 = v63;
  id v106 = v70;
  [v67 enumeratePersistentIDsAndProperties:v68 usingBlock:v103];
  id v71 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
  {
    id v72 = [v70 count];
    *(_DWORD *)buf = 134217984;
    id v123 = v72;
    _os_log_impl(&dword_0, v71, OS_LOG_TYPE_DEFAULT, "<Reconcile Restore> Found %lu unrestorable tracks", buf, 0xCu);
  }

  if ([v70 count]) {
    +[ML3Track clearLocationFromLibrary:*(void *)(a1 + 32) persistentIDs:v70 usingConnection:v44];
  }
  [*(id *)(a1 + 40) _clearDatabasePropertiesForRestore:*(unsigned int *)(a1 + 56)];
  [*(id *)(a1 + 32) cleanupArtworkWithOptions:30 usingConnection:v44];

  if ((+[ML3MusicLibrary updateTrackIntegrityOnConnection:v44] & 1) == 0)
  {
    CFStringRef v73 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v73, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_0, v73, OS_LOG_TYPE_DEFAULT, "Failed to update track integrity", buf, 2u);
    }
  }
  uint64_t v74 = *(unsigned __int8 *)(a1 + 60);

  return v74;
}

void sub_5B2DC(uint64_t a1, uint64_t a2, __CFString **a3)
{
  uint64_t v5 = *a3;
  if (!*a3) {
    uint64_t v5 = &stru_9B528;
  }
  int v6 = v5;
  id v7 = +[ML3Track newWithPersistentID:a2 inLibrary:*(void *)(a1 + 32)];
  uint64_t v8 = [v7 absoluteFilePath];
  unsigned int v9 = [*(id *)(a1 + 40) fileExistsAtPath:v8];
  uint64_t v10 = _ATLogCategorySyncBundle();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
  if (v9)
  {
    if (v11)
    {
      int v13 = 134218242;
      uint64_t v14 = a2;
      __int16 v15 = 2114;
      uint64_t v16 = v6;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "<Reconcile Restore> Skipping track already restored. pid=%lld, '%{public}@'", (uint8_t *)&v13, 0x16u);
    }
  }
  else
  {
    if (v11)
    {
      int v13 = 134218242;
      uint64_t v14 = a2;
      __int16 v15 = 2114;
      uint64_t v16 = v6;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "<Reconcile Restore> Marking track as needing restore. pid=%lld, '%{public}@'", (uint8_t *)&v13, 0x16u);
    }

    lldiv_t v12 = *(void **)(a1 + 48);
    uint64_t v10 = +[NSNumber numberWithLongLong:a2];
    [v12 addObject:v10];
  }
}

void sub_5B47C(uint64_t a1, uint64_t a2, __CFString **a3)
{
  uint64_t v5 = *a3;
  if (!*a3) {
    uint64_t v5 = &stru_9B528;
  }
  int v6 = v5;
  id v7 = +[ML3Track newWithPersistentID:a2 inLibrary:*(void *)(a1 + 32)];
  uint64_t v8 = [v7 absoluteFilePath];
  unsigned int v9 = [*(id *)(a1 + 40) fileExistsAtPath:v8];
  uint64_t v10 = _ATLogCategorySyncBundle();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
  if (v9)
  {
    if (v11)
    {
      int v13 = 134218242;
      uint64_t v14 = a2;
      __int16 v15 = 2114;
      uint64_t v16 = v6;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "<Reconcile Restore> Skipping podcast already restored. pid=%lld, '%{public}@'", (uint8_t *)&v13, 0x16u);
    }
  }
  else
  {
    if (v11)
    {
      int v13 = 134218242;
      uint64_t v14 = a2;
      __int16 v15 = 2114;
      uint64_t v16 = v6;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "<Reconcile Restore> Marking podcast as needing restore. pid=%lld, '%{public}@'", (uint8_t *)&v13, 0x16u);
    }

    lldiv_t v12 = *(void **)(a1 + 48);
    uint64_t v10 = +[NSNumber numberWithLongLong:a2];
    [v12 addObject:v10];
  }
}

void sub_5B61C(uint64_t a1, uint64_t a2, __CFString **a3)
{
  int v6 = *a3;
  if (!*a3) {
    int v6 = &stru_9B528;
  }
  id v7 = v6;
  id v8 = +[ML3Track newWithPersistentID:a2 inLibrary:*(void *)(a1 + 32)];
  unsigned int v9 = [v8 absoluteFilePath];
  if ([*(id *)(a1 + 40) fileExistsAtPath:v9])
  {
    uint64_t v10 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 134218242;
      uint64_t v16 = a2;
      __int16 v17 = 2114;
      uint64_t v18 = v7;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "<Reconcile Restore> Skipping track already restored. pid=%lld, '%{public}@'", (uint8_t *)&v15, 0x16u);
    }
    BOOL v11 = v7;
  }
  else
  {
    lldiv_t v12 = *a3;
    if (!*a3) {
      lldiv_t v12 = &stru_9B528;
    }
    BOOL v11 = v12;

    int v13 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 134218242;
      uint64_t v16 = a2;
      __int16 v17 = 2114;
      uint64_t v18 = v11;
      _os_log_impl(&dword_0, v13, OS_LOG_TYPE_DEFAULT, "<Reconcile Restore> Clearing location properties for unrestorable track. pid=%lld, '%{public}@'", (uint8_t *)&v15, 0x16u);
    }

    uint64_t v14 = *(void **)(a1 + 48);
    uint64_t v10 = +[NSNumber numberWithLongLong:a2];
    [v14 addObject:v10];
  }
}

void sub_5C270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
}

void sub_5C2F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (!a4)
  {
    int v6 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v16 = a2;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "migrating container artwork token. container_pid=%lld", buf, 0xCu);
    }

    id v7 = [objc_alloc((Class)ML3Container) initWithPersistentID:a2 inLibrary:*(void *)(a1 + 32)];
    id v8 = [objc_alloc((Class)ML3ArtworkTokenSet) initWithEntity:v7 artworkType:5];
    unsigned int v9 = [v8 artworkTokenForSource:100];
    if (v9)
    {
      uint64_t v10 = *(void **)(a1 + 32);
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      v11[2] = sub_5C8E0;
      v11[3] = &unk_99E48;
      id v12 = v10;
      uint64_t v14 = a2;
      id v13 = v9;
      [v12 databaseConnectionAllowingWrites:1 withBlock:v11];
    }
  }
}

void sub_5C488(uint64_t a1)
{
  id v2 = objc_alloc((Class)ML3MutableDatabaseImport);
  id v3 = +[ML3MusicLibrary autoupdatingSharedLibraryPath];
  id v4 = [v2 initWithLibraryPath:v3 trackData:0 playlistData:0];

  [v4 setResetSync:*(_DWORD *)(a1 + 88) == 2];
  id v5 = objc_alloc_init((Class)ICCloudClient);
  id v6 = [v5 isAuthenticated];

  [v4 setSagaEnabled:v6];
  [v4 setSyncAnchor:*(void *)(a1 + 32)];
  id v7 = +[MLMediaLibraryService sharedMediaLibraryService];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_5C644;
  v13[3] = &unk_99E98;
  id v14 = *(id *)(a1 + 64);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_5C660;
  v9[3] = &unk_99EC0;
  long long v12 = *(_OWORD *)(a1 + 72);
  id v8 = *(void **)(a1 + 48);
  v9[4] = *(void *)(a1 + 40);
  id v10 = v8;
  id v11 = *(id *)(a1 + 56);
  [v7 performImport:v4 fromSource:5 withProgressBlock:v13 completionHandler:v9];
}

uint64_t sub_5C644(uint64_t a1, float a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(double))(result + 16))(a2);
  }
  return result;
}

void sub_5C660(uint64_t a1, int a2, void *a3, void *a4)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109378;
    LODWORD(v18[0]) = a2;
    WORD2(v18[0]) = 2114;
    *(void *)((char *)v18 + 6) = v8;
    _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "sync import complete. success=%d, err=%{public}@", buf, 0x12u);
  }

  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), a3);
  if (!v8 && a2)
  {
    id v16 = 0;
    id v11 = [objc_alloc((Class)NSKeyedUnarchiver) initForReadingFromData:v9 error:&v16];
    id v12 = v16;
    if (v11)
    {
      id v13 = [v11 decodePropertyListForKey:NSKeyedArchiveRootObjectKey];
      if (v13 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        id v14 = [v13 objectForKey:@"modified_playlist_pids"];
        if (v14) {
          [*(id *)(*(void *)(a1 + 32) + 200) addObjectsFromArray:v14];
        }
        [*(id *)(a1 + 40) notifyContentsDidChange];
      }
      else
      {
        id v14 = _ATLogCategorySyncBundle();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          int v15 = [v11 error];
          *(_DWORD *)buf = 138543362;
          v18[0] = v15;
          _os_log_impl(&dword_0, v14, OS_LOG_TYPE_DEFAULT, "Failed to unarchive import data. err=%{public}@", buf, 0xCu);
        }
      }
    }
    else
    {
      id v13 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        v18[0] = v12;
        _os_log_impl(&dword_0, v13, OS_LOG_TYPE_DEFAULT, "Failed to create unarchiver for import data. err=%{public}@", buf, 0xCu);
      }
    }
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_5C8E0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  id v5 = a2;
  [v3 removeArtworkTokenForEntityPersistentID:v4 entityType:1 artworkType:5 sourceType:100 usingConnection:v5];
  [*(id *)(a1 + 32) importArtworkTokenForEntityPersistentID:*(void *)(a1 + 48) entityType:1 artworkToken:*(void *)(a1 + 40) artworkType:5 sourceType:300 usingConnection:v5];
  [*(id *)(a1 + 32) updateBestArtworkTokenForEntityPersistentID:*(void *)(a1 + 48) entityType:1 artworkType:5 retrievalTime:1 preserveExistingAvailableToken:v5 usingConnection:0.0];
}

uint64_t sub_5D13C(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 32) = [*(id *)(a1 + 40) currentRevision];
  id v2 = [*(id *)(a1 + 40) valueForDatabaseProperty:@"MLSyncClientLastSyncedRevision"];
  id v3 = [v2 longLongValue];

  uint64_t v4 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 134217984;
    id v9 = v3;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "Saving out track metadata since revision %lld", (uint8_t *)&v8, 0xCu);
  }

  [*(id *)(a1 + 40) saveTrackMetadataSinceRevision:v3 withGrappaID:*(unsigned int *)(a1 + 48)];
  id v5 = _ATLogCategorySyncBundle();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v6)
    {
      int v8 = 134217984;
      id v9 = v3;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "Saving out playlist data since revision %lld", (uint8_t *)&v8, 0xCu);
    }

    [*(id *)(a1 + 40) savePlaylistsSinceRevision:v3 withGrappaID:*(unsigned int *)(a1 + 48)];
  }
  else
  {
    if (v6)
    {
      LOWORD(v_Block_object_dispose(&STACK[0x260], 8) = 0;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "Not saving out playlist data because this a first sync", (uint8_t *)&v8, 2u);
    }
  }
  return 1;
}

void sub_5D8C8(uint64_t a1, void *a2)
{
  if (a2) {
    [a2 _clearCachedPlaylistSettings];
  }
}

void sub_5D8D8(uint64_t a1, void *a2)
{
  if (a2) {
    [a2 _clearCachedPlaylistSettings];
  }
}

id sub_5E154(uint64_t a1)
{
  return [*(id *)(a1 + 32) initiateSyncOrKeepLocalSessionWithOptions:*(void *)(a1 + 40)];
}

void sub_5E22C(uint64_t a1)
{
  id v2 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "Finished all track assets - starting a keep local operation to update collections", v4, 2u);
  }

  v5[0] = @"MLSyncPolicyChangedObserverStartKeepLocalSessionEnqueueAssetsKey";
  v5[1] = @"MLSyncPolicyChangedObserverStartKeepLocalSessionForceNoDelayKey";
  v6[0] = &__kCFBooleanFalse;
  v6[1] = &__kCFBooleanTrue;
  id v3 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:2];
  [*(id *)(a1 + 32) _notifyPowerStateChangedInitiateSyncOrKeepLocalSessionWithOptions:v3];
}

void sub_5E3BC(uint64_t a1)
{
  double v2 = *(double *)(*(void *)(a1 + 32) + 48);
  [*(id *)(a1 + 40) currentBatteryLevel];
  double v4 = v3;
  id v5 = +[ICDeviceInfo currentDeviceInfo];
  unsigned int v6 = [v5 isWatch];

  if (v6 && v2 < 0.8 && v4 > 0.8)
  {
    id v7 = [*(id *)(a1 + 40) currentThermalLevel];
    unint64_t v8 = sub_6EA98(*(void **)(a1 + 40));
    id v9 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218752;
      double v15 = v2;
      __int16 v16 = 2048;
      double v17 = v4;
      __int16 v18 = 2048;
      id v19 = v7;
      __int16 v20 = 2048;
      unint64_t v21 = v8;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_DEFAULT, "device battery threshold changed. Battery Level (cached=%f, current=%f), Thermal Level (current=%llu, threshold=%llu)", buf, 0x2Au);
    }

    if ([*(id *)(a1 + 40) isCharging] && (unint64_t)v7 < v8)
    {
      id v10 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "initiating a sync/keep local now that battery level crossed threshold and device is on charger", buf, 2u);
      }

      v12[0] = @"MLSyncPolicyChangedObserverStartKeepLocalSessionEnqueueAssetsKey";
      v12[1] = @"MLSyncPolicyChangedObserverStartSyncSessionPriorityKey";
      v13[0] = &off_9CAB0;
      v13[1] = &off_9CAC8;
      id v11 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:2];
      [*(id *)(a1 + 32) _notifyPowerStateChangedInitiateSyncOrKeepLocalSessionWithOptions:v11];
    }
  }
  *(double *)(*(void *)(a1 + 32) + 4_Block_object_dispose(&STACK[0x260], 8) = v4;
}

void sub_5E640(uint64_t a1)
{
  unint64_t v2 = *(void *)(*(void *)(a1 + 32) + 40);
  id v3 = [*(id *)(a1 + 40) currentThermalLevel];
  unint64_t v4 = sub_6EA98(*(void **)(a1 + 40));
  id v5 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218496;
    unint64_t v17 = v2;
    __int16 v18 = 2048;
    id v19 = v3;
    __int16 v20 = 2048;
    unint64_t v21 = v4;
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "device thermal level changed. cached level=%llu, current level=%llu, maxThermalPressureThreshold=%llu", buf, 0x20u);
  }

  unsigned int v6 = +[ICDeviceInfo currentDeviceInfo];
  unsigned int v7 = [v6 isWatch];

  if (v7)
  {
    if (v2 < v4 && (unint64_t)v3 >= v4)
    {
      id v12 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_0, v12, OS_LOG_TYPE_DEFAULT, "Cancelling keep local downloads because the device is under thermal pressure", buf, 2u);
      }

      id v11 = +[NSError errorWithDomain:@"ATError" code:33 userInfo:0];
      id v13 = +[NSPredicate predicateWithFormat:@"dataclass=%@", @"Media"];
      [*(id *)(a1 + 32) _cancelDownloadsMatchingPredicate:v13 excludeActiveDownloads:1 error:v11];

      goto LABEL_18;
    }
    if (v2 >= v4 && (unint64_t)v3 < v4)
    {
      id v10 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "initiating sync/keep local now that thermal levels are acceptable and device is on charger", buf, 2u);
      }

      v14[0] = @"MLSyncPolicyChangedObserverStartKeepLocalSessionEnqueueAssetsKey";
      v14[1] = @"MLSyncPolicyChangedObserverStartSyncSessionPriorityKey";
      v15[0] = &off_9CAB0;
      v15[1] = &off_9CAC8;
      id v11 = +[NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:2];
      [*(id *)(a1 + 32) _notifyPowerStateChangedInitiateSyncOrKeepLocalSessionWithOptions:v11];
LABEL_18:
    }
  }
  *(void *)(*(void *)(a1 + 32) + 40) = v3;
}

void sub_5E948(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) isCharging];
  id v3 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    unsigned int v17 = v2;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "device power state has changed. hasPower=%{BOOL}u", buf, 8u);
  }

  unint64_t v4 = +[ICDeviceInfo currentDeviceInfo];
  unsigned int v5 = [v4 isWatch];

  if (v5)
  {
    if (v2)
    {
      unsigned int v6 = +[ICNanoPairedDeviceStatusMonitor sharedMonitor];
      unsigned __int8 v7 = [v6 isMediaSyncingSupported];

      if (v7)
      {
        CFStringRef v12 = @"MLSyncPolicyChangedObserverStartSyncSessionPriorityKey";
        id v13 = &off_9CAC8;
        unint64_t v8 = &v13;
        id v9 = &v12;
      }
      else
      {
        CFStringRef v14 = @"MLSyncPolicyChangedObserverStartKeepLocalSessionEnqueueAssetsKey";
        double v15 = &off_9CAB0;
        unint64_t v8 = &v15;
        id v9 = &v14;
      }
      id v10 = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v8, v9, 1, v12, v13, v14, v15);
      [*(id *)(a1 + 40) _notifyPowerStateChangedInitiateSyncOrKeepLocalSessionWithOptions:v10];
    }
    else
    {
      id v10 = +[NSError errorWithDomain:@"ATError" code:31 userInfo:0];
      id v11 = +[NSPredicate predicateWithFormat:@"powerRequired=1"];
      [*(id *)(a1 + 40) _cancelDownloadsMatchingPredicate:v11 excludeActiveDownloads:0 error:v10];
    }
  }
}

id sub_5EB88(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleNetworkConditionsOrCellularDataPolicyChanged];
}

void sub_5EE70(id a1, ICURLBag *a2, NSError *a3)
{
  unint64_t v4 = a3;
  if (v4)
  {
    unsigned int v5 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138543362;
      id v9 = v4;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_ERROR, "Failed to update minimum cellular quality threshold from the bag. err=%{public}@", (uint8_t *)&v8, 0xCu);
    }
  }
  else
  {
    unsigned int v5 = [(ICURLBag *)a2 numberForBagKey:ICURLBagKeyMinimumCellularQualityForMediaDownloads];
    unsigned int v6 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 138543362;
      id v9 = (NSError *)v5;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "Updating minimum cellular quality threshold from the bag to %{public}@", (uint8_t *)&v8, 0xCu);
    }

    unsigned __int8 v7 = +[ATUserDefaults sharedInstance];
    [v7 setMinimumNetworkLinkQualityForDownloads:v5];
  }
}

void sub_5EFBC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = a2;
  id v7 = a5;
  int v8 = [v7 objectForKeyedSubscript:@"isPlaceholder"];
  if (([v8 BOOLValue] & 1) == 0)
  {
    id v9 = [v7 objectForKeyedSubscript:@"bundleIDs"];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_5F0A0;
    v10[3] = &unk_9A7E8;
    id v11 = v6;
    [v9 enumerateObjectsUsingBlock:v10];
  }
}

char *sub_5F0A0(uint64_t a1)
{
  uint64_t result = (char *)ICSystemApplicationTypeForBundleIdentifier();
  if ((unint64_t)result <= 3 && result != (unsigned char *)&dword_0 + 1)
  {
    unint64_t v4 = result;
    unsigned int v5 = *(void **)(a1 + 32);
    return (char *)[v5 _notifyAppRemoved:v4];
  }
  return result;
}

id sub_5F0F8(uint64_t a1, void *a2)
{
  id v3 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned int v5 = 0;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "Got cellular data download setting changed notification", v5, 2u);
  }

  return [a2 _handleNetworkConditionsOrCellularDataPolicyChanged];
}

void sub_5F1C0(id a1)
{
  qword_A4B28 = [[MLSyncClientEnvironmentPolicyChangeHandler alloc] _init];

  _objc_release_x1();
}

void sub_5F5D8(id a1)
{
  qword_A4B38 = [[MLSyncClientKeepLocalEventHandlerWrapper alloc] _init];

  _objc_release_x1();
}

void sub_5F948(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

id sub_5F970(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 56) addObject:*(void *)(a1 + 40)];
}

void sub_5F97C(uint64_t a1)
{
  uint64_t v2 = _ATLogCategoryFramework();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(_DWORD *)(a1 + 48);
    *(_DWORD *)buf = 138543618;
    uint64_t v12 = v3;
    __int16 v13 = 1024;
    int v14 = v4;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "%{public}@ connection interrupted from pid: %i", buf, 0x12u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = *(NSObject **)(v7 + 16);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_5FB6C;
    v9[3] = &unk_9A930;
    v9[4] = v7;
    id v10 = WeakRetained;
    dispatch_barrier_async(v8, v9);
  }
}

void sub_5FAB4(uint64_t a1)
{
  uint64_t v2 = _ATLogCategoryFramework();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(_DWORD *)(a1 + 40);
    int v5 = 138543618;
    uint64_t v6 = v3;
    __int16 v7 = 1024;
    int v8 = v4;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "%{public}@ connection invalidated from pid: %i", (uint8_t *)&v5, 0x12u);
  }
}

id sub_5FB6C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 56) removeObject:*(void *)(a1 + 40)];
}

void sub_5FC40(uint64_t a1)
{
  id v1 = *(void **)(a1 + 40);
  if (v1)
  {
    uint64_t v2 = *(NSObject **)(*(void *)(a1 + 32) + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_5FCD4;
    block[3] = &unk_9A850;
    id v4 = v1;
    dispatch_async(v2, block);
  }
}

uint64_t sub_5FCD4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_5FEC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_5FEE4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_5FEF4(uint64_t a1)
{
}

void sub_5FEFC(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_60474(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_609B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(NSObject **)(v4 + 80);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_60A54;
  v7[3] = &unk_9A930;
  id v8 = v3;
  uint64_t v9 = v4;
  id v6 = v3;
  dispatch_async(v5, v7);
}

void sub_60A54(uint64_t a1)
{
  if (![*(id *)(a1 + 32) isInstalled]
    || ([*(id *)(a1 + 32) isRestore] & 1) == 0)
  {
    uint64_t v2 = [*(id *)(a1 + 32) error];
    if (!v2 || (ATIsPendingDownloadError() & 1) == 0) {
      sub_6C218(*(void **)(a1 + 32), *(void **)(*(void *)(a1 + 40) + 8), v2 == 0);
    }
  }
  id v3 = +[ATAssetLinkController sharedInstance];
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = +[NSArray arrayWithObjects:&v5 count:1];
  [v3 installCompleteForAssets:v4];
}

void sub_61018(void *a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1[4] + 56);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        __int16 v7 = objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * (void)v6), "remoteObjectProxyWithErrorHandler:", &stru_9A9F0, (void)v8);
        [v7 atcWillEnqueueDownloads:a1[5] cancelDownloads:a1[6]];

        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

uint64_t sub_61134(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) count])
  {
    id v4 = _ATLogCategorySyncBundle_Oversize();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = *(void **)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      uint64_t v75 = v5;
      __int16 v76 = 2114;
      id v77 = v6;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "%{public}@ Will remove keep-local for %{public}@", buf, 0x16u);
    }

    v73[0] = ML3EntityPropertyKeepLocal;
    v73[1] = ML3EntityPropertyKeepLocalStatus;
    v73[2] = ML3EntityPropertyKeepLocalStatusReason;
    __int16 v7 = +[NSArray arrayWithObjects:v73 count:3];
    +[ML3Track setValues:&off_9D0D0 forProperties:v7 forEntityPersistentIDs:*(void *)(a1 + 32) inLibrary:*(void *)(*(void *)(a1 + 40) + 8) usingConnection:v3];
  }
  id v8 = [*(id *)(a1 + 48) count];
  long long v9 = _ATLogCategorySyncBundle();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if (!v8)
  {
    if (!v10) {
      goto LABEL_18;
    }
    uint64_t v18 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138543362;
    uint64_t v75 = v18;
    id v19 = "%{public}@ No new keep-local assets to download";
    goto LABEL_17;
  }
  if (v10)
  {
    uint64_t v11 = *(void *)(a1 + 40);
    unsigned int v12 = [*(id *)(a1 + 48) count];
    *(_DWORD *)buf = 138543618;
    uint64_t v75 = v11;
    __int16 v76 = 1024;
    LODWORD(v77) = v12;
    _os_log_impl(&dword_0, v9, OS_LOG_TYPE_DEFAULT, "%{public}@ enqueing %d new keep-local assets", buf, 0x12u);
  }

  v72[0] = ML3EntityPropertyKeepLocalStatus;
  v72[1] = ML3EntityPropertyKeepLocalStatusReason;
  __int16 v13 = +[NSArray arrayWithObjects:v72 count:2];
  +[ML3Track setValues:&off_9D0E8 forProperties:v13 forEntityPersistentIDs:*(void *)(a1 + 56) inLibrary:*(void *)(*(void *)(a1 + 40) + 8) usingConnection:v3];

  sub_6DAD8(v3, *(void **)(*(void *)(a1 + 40) + 8));
  int v14 = +[ATAssetLinkController sharedInstance];
  [v14 enqueueAssets:*(void *)(a1 + 48)];

  double v15 = +[ICDeviceInfo currentDeviceInfo];
  if ([v15 isWatch])
  {
    __int16 v16 = +[ICEnvironmentMonitor sharedMonitor];
    unsigned int v17 = [v16 isCharging];

    if (!v17) {
      goto LABEL_15;
    }
  }
  else
  {
  }
  id v20 = objc_alloc((Class)ICCloudClient);
  unint64_t v21 = +[ICUserIdentity activeAccount];
  id v22 = [v20 initWithUserIdentity:v21];
  [v22 loadMissingArtwork];

LABEL_15:
  long long v9 = _ATLogCategorySyncBundle();
  if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
    goto LABEL_18;
  }
  uint64_t v23 = *(void *)(a1 + 40);
  *(_DWORD *)buf = 138543362;
  uint64_t v75 = v23;
  id v19 = "%{public}@ Enqueueing keep local assets";
LABEL_17:
  _os_log_impl(&dword_0, v9, OS_LOG_TYPE_DEFAULT, v19, buf, 0xCu);
LABEL_18:

  if ([*(id *)(a1 + 64) count])
  {
    uint64_t v54 = v3;
    uint64_t v24 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v25 = *(void *)(a1 + 40);
      id v26 = [*(id *)(a1 + 64) count];
      *(_DWORD *)buf = 138543618;
      uint64_t v75 = v25;
      __int16 v76 = 2048;
      id v77 = v26;
      _os_log_impl(&dword_0, v24, OS_LOG_TYPE_DEFAULT, "%{public}@ Adding %lu new pending downloads", buf, 0x16u);
    }

    uint64_t v62 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [*(id *)(a1 + 64) count]);
    id v61 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [*(id *)(a1 + 64) count]);
    long long v67 = 0u;
    long long v68 = 0u;
    long long v69 = 0u;
    long long v70 = 0u;
    uint64_t v59 = a1;
    id obj = *(id *)(a1 + 64);
    id v60 = [obj countByEnumeratingWithState:&v67 objects:v71 count:16];
    if (v60)
    {
      uint64_t v57 = ML3EntityPropertyKeepLocalStatus;
      uint64_t v58 = *(void *)v68;
      uint64_t v56 = ML3EntityPropertyKeepLocalStatusReason;
      do
      {
        for (i = 0; i != v60; i = (char *)i + 1)
        {
          if (*(void *)v68 != v58) {
            objc_enumerationMutation(obj);
          }
          uint64_t v28 = *(void **)(*((void *)&v67 + 1) + 8 * i);
          id v30 = objc_msgSend(*(id *)(v59 + 40), "_keepLocalStatusReasonForATAssetDownloadPauseReason:", objc_msgSend(v28, "downloadPauseReason"));
          if ([v28 isRetry]) {
            int v31 = 5;
          }
          else {
            int v31 = 4;
          }
          unsigned int v32 = [v28 isRetry];
          unint64_t v33 = +[NSNumber numberWithUnsignedInteger:v30];
          if (v32) {
            uint64_t v34 = v61;
          }
          else {
            uint64_t v34 = v62;
          }
          uint64_t v35 = [v34 objectForKey:v33];

          uint64_t v36 = *(void **)(v59 + 72);
          id v37 = [v28 identifier];
          id v38 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v37 longLongValue]);
          id v39 = [v36 objectForKey:v38];

          id v40 = [v39 objectForKey:v57];
          LODWORD(v37) = [v40 integerValue];

          id v41 = [v39 objectForKey:v56];
          id v42 = [v41 integerValue];

          if (v31 != v37 || v30 != v42)
          {
            if (v35)
            {
              id v44 = [v28 identifier];
              id v45 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v44 longLongValue]);
              [v35 addObject:v45];
            }
            else
            {
              int64x2_t v46 = [v28 identifier];
              int64x2_t v47 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v46 longLongValue]);
              uint64_t v35 = +[NSMutableSet setWithObject:v47];

              unsigned int v48 = [v28 isRetry];
              id v44 = +[NSNumber numberWithUnsignedInteger:v30];
              if (v48) {
                id v49 = v61;
              }
              else {
                id v49 = v62;
              }
              [v49 setObject:v35 forKey:v44];
            }
          }
        }
        id v60 = [obj countByEnumeratingWithState:&v67 objects:v71 count:16];
      }
      while (v60);
    }

    v65[0] = _NSConcreteStackBlock;
    v65[1] = 3221225472;
    v65[2] = sub_6191C;
    v65[3] = &unk_9AA40;
    v65[4] = *(void *)(v59 + 40);
    id v3 = v54;
    id v50 = v54;
    id v66 = v50;
    [v62 enumerateKeysAndObjectsUsingBlock:v65];
    v63[0] = _NSConcreteStackBlock;
    v63[1] = 3221225472;
    v63[2] = sub_61A44;
    v63[3] = &unk_9AA40;
    v63[4] = *(void *)(v59 + 40);
    id v51 = v50;
    id v64 = v51;
    [v61 enumerateKeysAndObjectsUsingBlock:v63];
    sub_6DAD8(v51, *(void **)(*(void *)(v59 + 40) + 8));
    uint64_t v52 = +[ATAssetLinkController sharedInstance];
    [v52 setPendingAssets:*(void *)(v59 + 64)];
  }
  return 1;
}

void sub_6191C(uint64_t a1, void *a2, void *a3)
{
  v11[0] = &off_9CB70;
  v11[1] = a2;
  id v5 = a3;
  id v6 = a2;
  __int16 v7 = +[NSArray arrayWithObjects:v11 count:2];
  v10[0] = ML3EntityPropertyKeepLocalStatus;
  v10[1] = ML3EntityPropertyKeepLocalStatusReason;
  id v8 = +[NSArray arrayWithObjects:v10 count:2];
  long long v9 = [v5 allObjects];

  +[ML3Track setValues:v7 forProperties:v8 forEntityPersistentIDs:v9 inLibrary:*(void *)(*(void *)(a1 + 32) + 8) usingConnection:*(void *)(a1 + 40)];
}

void sub_61A44(uint64_t a1, void *a2, void *a3)
{
  v11[0] = &off_9CB88;
  v11[1] = a2;
  id v5 = a3;
  id v6 = a2;
  __int16 v7 = +[NSArray arrayWithObjects:v11 count:2];
  v10[0] = ML3EntityPropertyKeepLocalStatus;
  v10[1] = ML3EntityPropertyKeepLocalStatusReason;
  id v8 = +[NSArray arrayWithObjects:v10 count:2];
  long long v9 = [v5 allObjects];

  +[ML3Track setValues:v7 forProperties:v8 forEntityPersistentIDs:v9 inLibrary:*(void *)(*(void *)(a1 + 32) + 8) usingConnection:*(void *)(a1 + 40)];
}

void sub_627E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose((const void *)(v59 - 208), 8);
  _Block_object_dispose(&a59, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_62864(void *a1, void *a2)
{
  id v4 = [a2 objectForKey:@"CACHE_DELETE_AMOUNT"];
  *(void *)(*(void *)(a1[5] + 8) + 24) = [v4 longLongValue];

  *(void *)(*(void *)(a1[6] + 8) + 24) += *(void *)(*(void *)(a1[5] + 8) + 24);
  id v5 = a1[4];

  return dispatch_semaphore_signal(v5);
}

void sub_628F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) > *(void *)(*(void *)(*(void *)(a1 + 88) + 8)
                                                                               + 24))
  {
    id v4 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      id v6 = [v3 shortDescription];
      int v28 = 138543618;
      uint64_t v29 = v5;
      __int16 v30 = 2114;
      int v31 = v6;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "%{public}@ Not enough free space for asset %{public}@ - will cancel download", (uint8_t *)&v28, 0x16u);
    }
    objc_msgSend(v3, "setDownloadPauseReason:", (unint64_t)objc_msgSend(v3, "downloadPauseReason") | 0x20);
  }
  if ([v3 powerRequired] && !*(unsigned char *)(a1 + 104))
  {
    objc_msgSend(v3, "setDownloadPauseReason:", (unint64_t)objc_msgSend(v3, "downloadPauseReason") | 0x10);
    __int16 v7 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      long long v9 = [v3 shortDescription];
      int v28 = 138543618;
      uint64_t v29 = v8;
      __int16 v30 = 2114;
      int v31 = v9;
      _os_log_impl(&dword_0, v7, OS_LOG_TYPE_DEFAULT, "%{public}@ Not enqueing asset %{public}@ because charging is required", (uint8_t *)&v28, 0x16u);
    }
  }
  if (([v3 allowDownloadOnConstrainedNetwork] & 1) == 0 && *(unsigned char *)(a1 + 105))
  {
    objc_msgSend(v3, "setDownloadPauseReason:", (unint64_t)objc_msgSend(v3, "downloadPauseReason") | 2);
    BOOL v10 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      unsigned int v12 = [v3 shortDescription];
      int v28 = 138543618;
      uint64_t v29 = v11;
      __int16 v30 = 2114;
      int v31 = v12;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "%{public}@ Not enqueing asset %{public}@ because the network is constrained", (uint8_t *)&v28, 0x16u);
    }
  }
  if (([v3 canUseCellularData] & 1) == 0 && *(unsigned char *)(a1 + 106))
  {
    objc_msgSend(v3, "setDownloadPauseReason:", (unint64_t)objc_msgSend(v3, "downloadPauseReason") | 4);
    __int16 v13 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = *(void *)(a1 + 32);
      double v15 = [v3 shortDescription];
      int v28 = 138543618;
      uint64_t v29 = v14;
      __int16 v30 = 2114;
      int v31 = v15;
      _os_log_impl(&dword_0, v13, OS_LOG_TYPE_DEFAULT, "%{public}@ Not enqueing asset %{public}@ because cellular data is not allowed", (uint8_t *)&v28, 0x16u);
    }
  }
  __int16 v16 = +[ICDeviceInfo currentDeviceInfo];
  if ([v16 isWatch])
  {
    int v17 = *(unsigned __int8 *)(a1 + 106);

    if (!v17
      || (unint64_t)[*(id *)(a1 + 40) currentNetworkLinkQuality] >= *(void *)(a1 + 96)
      && (([v3 isForeground] & 1) != 0
       || ([*(id *)(a1 + 40) isCurrentNetworkLinkHighQuality] & 1) != 0))
    {
      goto LABEL_26;
    }
    objc_msgSend(v3, "setDownloadPauseReason:", (unint64_t)objc_msgSend(v3, "downloadPauseReason") | 8);
    __int16 v16 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = *(void *)(a1 + 32);
      id v19 = [v3 shortDescription];
      int v28 = 138543618;
      uint64_t v29 = v18;
      __int16 v30 = 2114;
      int v31 = v19;
      _os_log_impl(&dword_0, v16, OS_LOG_TYPE_DEFAULT, "%{public}@ Not enqueing asset %{public}@ because the cellular connection quality is too low", (uint8_t *)&v28, 0x16u);
    }
  }

LABEL_26:
  if ([v3 downloadPauseReason])
  {
    [*(id *)(a1 + 48) addObject:v3];
  }
  else
  {
    id v20 = [v3 identifier];
    unint64_t v21 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v20 longLongValue]);

    id v22 = [*(id *)(a1 + 56) objectForKeyedSubscript:v21];
    [v3 setMediaItemDownloadInfo:v22];

    [*(id *)(a1 + 64) addObject:v3];
    uint64_t v23 = [v3 identifier];
    uint64_t v24 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v23 longLongValue]);

    uint64_t v25 = [*(id *)(a1 + 72) objectForKey:v24];
    id v26 = [v25 objectForKey:ML3TrackPropertyTotalSize];
    id v27 = [v26 unsignedLongLongValue];

    *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) += v27;
  }
}

void sub_633F0(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = +[NSNumber numberWithLongLong:a2];
  [v2 addObject:v3];
}

void sub_63450(uint64_t a1, uint64_t a2, id *a3)
{
  if ([*a3 integerValue] == (char *)&dword_0 + 1) {
    uint64_t v5 = *(void **)(a1 + 32);
  }
  else {
    uint64_t v5 = *(void **)(a1 + 40);
  }
  id v6 = +[NSNumber numberWithLongLong:a2];
  objc_msgSend(v5, "addObject:");
}

uint64_t sub_634D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = ML3EntityPropertyKeepLocalStatus;
  v35[0] = ML3EntityPropertyKeepLocalStatus;
  v35[1] = ML3EntityPropertyKeepLocalStatusReason;
  v35[2] = ML3EntityPropertyKeepLocalConstraints;
  uint64_t v5 = +[NSArray arrayWithObjects:v35 count:3];
  unsigned __int8 v6 = +[ML3Track setValues:&off_9D070 forProperties:v5 forEntityPersistentIDs:*(void *)(a1 + 32) inLibrary:*(void *)(*(void *)(a1 + 40) + 8) usingConnection:v3];

  if (v6)
  {
    __int16 v7 = +[NSMutableArray array];
    uint64_t v8 = +[ML3DatabaseStatementRenderer defaultRenderer];
    long long v9 = objc_msgSend(v8, "statementWithPrefix:inParameterCount:", @"SELECT DISTINCT(container_pid) FROM container JOIN container_item USING (container_pid) WHERE container.keep_local_status = 2 AND item_pid", objc_msgSend(*(id *)(a1 + 32), "count"));

    BOOL v10 = [v3 executeQuery:v9 withParameters:*(void *)(a1 + 32)];
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_63A7C;
    v29[3] = &unk_9AF98;
    uint64_t v11 = v7;
    __int16 v30 = v11;
    [v10 enumerateRowsWithBlock:v29];

    if ([v11 count]
      && (uint64_t v32 = v4,
          +[NSArray arrayWithObjects:&v32 count:1],
          unsigned int v12 = objc_claimAutoreleasedReturnValue(),
          unsigned __int8 v13 = +[ML3Container setValues:&off_9D088 forProperties:v12 forEntityPersistentIDs:v11 inLibrary:*(void *)(*(void *)(a1 + 40) + 8) usingConnection:v3], v12, (v13 & 1) == 0))
    {
      uint64_t v18 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        uint64_t v25 = *(void *)(a1 + 40);
        *(_DWORD *)buf = 138543362;
        uint64_t v34 = v25;
        _os_log_impl(&dword_0, v18, OS_LOG_TYPE_ERROR, "%{public}@ Failed to clear keep-local properties on parent containers of removed tracks", buf, 0xCu);
      }
      uint64_t v19 = 0;
    }
    else
    {
      uint64_t v14 = +[NSMutableArray array];
      double v15 = +[ML3DatabaseStatementRenderer defaultRenderer];
      __int16 v16 = objc_msgSend(v15, "statementWithPrefix:inParameterCount:", @"SELECT DISTINCT(album_pid) FROM item JOIN album USING (album_pid) WHERE album.keep_local_status = 2 AND item_pid", objc_msgSend(*(id *)(a1 + 32), "count"));

      int v17 = [v3 executeQuery:v16 withParameters:*(void *)(a1 + 32)];
      v27[0] = _NSConcreteStackBlock;
      v27[1] = 3221225472;
      v27[2] = sub_63AEC;
      v27[3] = &unk_9AF98;
      uint64_t v18 = v14;
      int v28 = v18;
      [v17 enumerateRowsWithBlock:v27];

      if ([v18 count])
      {
        uint64_t v31 = v4;
        uint64_t v19 = 1;
        id v20 = +[NSArray arrayWithObjects:&v31 count:1];
        unsigned __int8 v21 = +[ML3Album setValues:&off_9D0A0 forProperties:v20 forEntityPersistentIDs:v18 inLibrary:*(void *)(*(void *)(a1 + 40) + 8) usingConnection:v3];

        if ((v21 & 1) == 0)
        {
          id v22 = _ATLogCategorySyncBundle();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
          {
            uint64_t v23 = *(void *)(a1 + 40);
            *(_DWORD *)buf = 138543362;
            uint64_t v34 = v23;
            _os_log_impl(&dword_0, v22, OS_LOG_TYPE_ERROR, "%{public}@ Failed to clear keep-local properties on parent albums of removed tracks", buf, 0xCu);
          }

          uint64_t v19 = 0;
        }
      }
      else
      {
        uint64_t v19 = 1;
      }
    }
  }
  else
  {
    uint64_t v11 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      uint64_t v24 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138543362;
      uint64_t v34 = v24;
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_ERROR, "%{public}@ Failed to clear keep-local properties on removed tracks", buf, 0xCu);
    }
    uint64_t v19 = 0;
  }

  return v19;
}

void sub_63950(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = +[NSNumber numberWithLongLong:a2];
  [v2 addObject:v3];
}

id sub_639B0(uint64_t a1, void *a2)
{
  uint64_t v7 = ML3EntityPropertyKeepLocal;
  id v3 = a2;
  uint64_t v4 = +[NSArray arrayWithObjects:&v7 count:1];
  id v5 = +[ML3Track setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:](ML3Track, "setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:", &off_9D0B8, v4, *(void *)(a1 + 32), *(void *)(*(void *)(a1 + 40) + 8), v3, v7);

  return v5;
}

void sub_63A7C(uint64_t a1, void *a2)
{
  id v3 = [a2 int64ForColumnIndex:0];
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = +[NSNumber numberWithLongLong:v3];
  [v4 addObject:v5];
}

void sub_63AEC(uint64_t a1, void *a2)
{
  id v3 = [a2 int64ForColumnIndex:0];
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = +[NSNumber numberWithLongLong:v3];
  [v4 addObject:v5];
}

void sub_63BD0(uint64_t a1)
{
  id v2 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v11 = v3;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "%{public}@ got accounts changed notification - rescheduling keep-local tasks if needed", buf, 0xCu);
  }

  uint64_t v4 = +[ICUserIdentityStore defaultIdentityStore];
  id v5 = +[ICUserIdentity activeAccount];
  id v9 = 0;
  unsigned __int8 v6 = [v4 getPropertiesForUserIdentity:v5 error:&v9];
  id v7 = v9;

  uint64_t v8 = *(void **)(*(void *)(a1 + 32) + 32);
  if (v7 || !v6)
  {
    [v8 removeEvent:@"MLKeepLocalSessionPeriodicEvent"];
    [*(id *)(*(void *)(a1 + 32) + 32) removeEvent:@"MLKeepLocalSessionEvent"];
  }
  else
  {
    if (([v8 hasScheduledEvent:@"MLKeepLocalSessionPeriodicEvent"] & 1) == 0) {
      [*(id *)(*(void *)(a1 + 32) + 32) scheduleRecurringEvent:@"MLKeepLocalSessionPeriodicEvent" withInterval:0 afterDelay:86400.0 withUserData:86400.0];
    }
    if (([*(id *)(*(void *)(a1 + 32) + 32) hasScheduledEvent:@"MLKeepLocalSessionEvent"] & 1) == 0)objc_msgSend(*(id *)(*(void *)(a1 + 32) + 32), "scheduleEvent:afterDelay:withUserData:", @"MLKeepLocalSessionEvent", 0, 60.0); {
  }
    }
}

void sub_64220(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 56);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      unsigned __int8 v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * (void)v6), "remoteObjectProxyWithErrorHandler:", &stru_9A908, (void)v8);
        [v7 atcWillEnqueueDownloads:&__NSArray0__struct cancelDownloads:*(void *)(a1 + 40)];

        unsigned __int8 v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

id sub_64350(uint64_t a1, void *a2)
{
  v7[0] = ML3EntityPropertyKeepLocalStatus;
  v7[1] = ML3EntityPropertyKeepLocalStatusReason;
  id v3 = a2;
  id v4 = +[NSArray arrayWithObjects:v7 count:2];
  id v5 = +[ML3Track setValues:&off_9D058 forProperties:v4 forEntityPersistentIDs:*(void *)(a1 + 32) inLibrary:*(void *)(*(void *)(a1 + 40) + 8) usingConnection:v3];

  return v5;
}

void sub_644AC(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _canRunKeepLocalEvaluationByEnqueuingAssets:1])
  {
    id v2 = *(id *)(*(void *)(a1 + 32) + 8);
    if (*(int *)(a1 + 56) < 1)
    {
      [*(id *)(a1 + 32) _pruneActiveDownloads];
      if (*(void *)(a1 + 48) != 1 || *(_DWORD *)(a1 + 56) != -1) {
        goto LABEL_9;
      }
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      void v14[2] = sub_646A8;
      v14[3] = &unk_9A8A0;
      uint64_t v16 = *(void *)(a1 + 40);
      id v15 = v2;
      [v15 databaseConnectionAllowingWrites:1 withBlock:v14];
      id v12 = v15;
    }
    else
    {
      id v3 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        int v4 = *(unsigned __int8 *)(a1 + 60);
        uint64_t v5 = *(void *)(a1 + 32);
        uint64_t v6 = *(void *)(a1 + 40);
        uint64_t v7 = *(void *)(a1 + 48);
        int v8 = *(_DWORD *)(a1 + 56);
        *(_DWORD *)buf = 138544386;
        uint64_t v20 = v5;
        __int16 v21 = 1024;
        int v22 = v4;
        __int16 v23 = 2048;
        uint64_t v24 = v6;
        __int16 v25 = 1024;
        int v26 = v7;
        __int16 v27 = 1024;
        int v28 = v8;
        _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "%{public}@ starting a keep-local evaluation - background:%d, libraryItemIdentifier:%lld, entityType:%d, new keep local status:%d", buf, 0x28u);
      }

      long long v9 = [*(id *)(a1 + 32) runKeepLocalEvaluationForItem:*(void *)(a1 + 40) entityType:*(void *)(a1 + 48) newKeepLocalStatus:*(unsigned int *)(a1 + 56) musicLibrary:v2];
      long long v10 = *(void **)(a1 + 32);
      uint64_t v11 = *(unsigned __int8 *)(a1 + 60);
      id v17 = 0;
      id v18 = 0;
      [v10 _handleKeepLocalEvaluationOperationCompletedWithResult:v9 inBackground:v11 andGetEnqueuedDownloads:&v18 cancelledDownloads:&v17];
      id v12 = v18;
      id v13 = v17;
    }
LABEL_9:
  }
}

void sub_646A8(uint64_t a1, void *a2)
{
  uint64_t v8 = ML3ContainerPropertyDateDownloaded;
  id v3 = a2;
  int v4 = +[NSArray arrayWithObjects:&v8 count:1];
  uint64_t v5 = +[NSNumber numberWithLongLong:*(void *)(a1 + 40)];
  uint64_t v7 = v5;
  uint64_t v6 = +[NSArray arrayWithObjects:&v7 count:1];
  +[ML3Container setValues:&off_9D040 forProperties:v4 forEntityPersistentIDs:v6 inLibrary:*(void *)(a1 + 32) usingConnection:v3];
}

void sub_64848(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _canRunKeepLocalEvaluationByEnqueuingAssets:1])
  {
    id v2 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v18 = v3;
      _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "%{public}@ Updating database to download library onto the device", buf, 0xCu);
    }

    int v4 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v18 = v5;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "%{public}@ Starting keep local session to download library", buf, 0xCu);
    }

    uint64_t v6 = [*(id *)(a1 + 32) setKeepLocalForAllMusicItemsWithLibrary:*(void *)(*(void *)(a1 + 32) + 8)];
    uint64_t v7 = *(void **)(a1 + 32);
    id v15 = 0;
    id v16 = 0;
    [v7 _handleKeepLocalEvaluationOperationCompletedWithResult:v6 inBackground:0 andGetEnqueuedDownloads:&v16 cancelledDownloads:&v15];
    id v8 = v16;
    id v9 = v15;
    +[NSDate timeIntervalSinceReferenceDate];
    *(void *)(*(void *)(a1 + 32) + 24) = v10;
  }
  uint64_t v11 = *(void **)(a1 + 40);
  if (v11)
  {
    id v12 = *(NSObject **)(*(void *)(a1 + 32) + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_64A30;
    block[3] = &unk_9A850;
    id v14 = v11;
    dispatch_async(v12, block);
  }
}

uint64_t sub_64A30(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_64B00(uint64_t a1)
{
  if ([*(id *)(a1 + 32) _canRunKeepLocalEvaluationByEnqueuingAssets:*(unsigned __int8 *)(a1 + 48)])
  {
    +[NSDate timeIntervalSinceReferenceDate];
    uint64_t v2 = *(void *)(a1 + 32);
    double v4 = v3 - *(double *)(v2 + 24);
    if (!*(unsigned char *)(a1 + 49) || *(unsigned char *)(a1 + 50) || v4 >= 10.0)
    {
      id v9 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v10 = *(void *)(a1 + 32);
        int v11 = *(unsigned __int8 *)(a1 + 49);
        int v12 = *(unsigned __int8 *)(a1 + 48);
        int v13 = *(unsigned __int8 *)(a1 + 50);
        *(_DWORD *)buf = 138544386;
        uint64_t v32 = v10;
        __int16 v33 = 1024;
        *(_DWORD *)uint64_t v34 = v11;
        *(_WORD *)&v34[4] = 2048;
        *(double *)&v34[6] = v4;
        __int16 v35 = 1024;
        int v36 = v12;
        __int16 v37 = 1024;
        int v38 = v13;
        _os_log_impl(&dword_0, v9, OS_LOG_TYPE_DEFAULT, "%{public}@ starting a keep-local evaluation - background:%d, timeSinceLastSession:%f, enqueueAssets:%d, forceNoDelay:%d", buf, 0x28u);
      }

      [*(id *)(a1 + 32) _pruneActiveDownloads];
      id v14 = [*(id *)(a1 + 32) runDefaultKeepLocalEvaluationWithMusicLibrary:*(void *)(*(void *)(a1 + 32) + 8)];
      if (*(unsigned char *)(a1 + 48))
      {
        id v15 = *(void **)(a1 + 32);
        uint64_t v16 = *(unsigned __int8 *)(a1 + 49);
        id v27 = 0;
        id v28 = 0;
        [v15 _handleKeepLocalEvaluationOperationCompletedWithResult:v14 inBackground:v16 andGetEnqueuedDownloads:&v28 cancelledDownloads:&v27];
        uint64_t v6 = v28;
        id v17 = v27;
      }
      else
      {
        id v17 = 0;
        uint64_t v6 = 0;
      }
      +[NSDate timeIntervalSinceReferenceDate];
      *(void *)(*(void *)(a1 + 32) + 24) = v18;
    }
    else
    {
      unsigned __int8 v5 = [*(id *)(v2 + 32) hasScheduledEvent:@"MLKeepLocalSessionEvent"];
      uint64_t v6 = _ATLogCategorySyncBundle();
      BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
      if (v5)
      {
        if (v7)
        {
          uint64_t v8 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138543362;
          uint64_t v32 = v8;
          _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "%{public}@ not scheduling a keep-local evaluation because one is already scheduled", buf, 0xCu);
        }
      }
      else
      {
        if (v7)
        {
          uint64_t v21 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138543618;
          uint64_t v32 = v21;
          __int16 v33 = 2048;
          *(double *)uint64_t v34 = v4;
          _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "%{public}@ Deferring start of background keep-local evaluation. timeSinceLastSession=%f", buf, 0x16u);
        }

        v29[0] = @"isBackground";
        int v22 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 49)];
        v29[1] = @"enqueueAssets";
        v30[0] = v22;
        __int16 v23 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 48)];
        v30[1] = v23;
        uint64_t v6 = +[NSDictionary dictionaryWithObjects:v30 forKeys:v29 count:2];

        uint64_t v24 = +[ATEventScheduler sharedInstance];
        [v24 scheduleEvent:@"MLKeepLocalSessionEvent" afterDelay:v6 withUserData:10.0 - v4];
      }
    }
  }
  uint64_t v19 = *(void **)(a1 + 40);
  if (v19)
  {
    uint64_t v20 = *(NSObject **)(*(void *)(a1 + 32) + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_64E88;
    block[3] = &unk_9A850;
    id v26 = v19;
    dispatch_async(v20, block);
  }
}

uint64_t sub_64E88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_65270(uint64_t a1)
{
  return [*(id *)(a1 + 32) startKeepLocalSessionInBackground:1];
}

id sub_6527C(uint64_t a1, void *a2)
{
  return [a2 startKeepLocalSessionInBackground:0];
}

void sub_65444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_6545C(uint64_t a1)
{
  v6[0] = 0;
  if (!qword_A4B48)
  {
    v6[1] = _NSConcreteStackBlock;
    void v6[2] = (void *)3221225472;
    v6[3] = sub_65648;
    void v6[4] = &unk_9AE18;
    v6[5] = v6;
    long long v7 = off_9AB78;
    uint64_t v8 = 0;
    qword_A4B48 = _sl_dlopen();
  }
  if (!qword_A4B48)
  {
    double v3 = +[NSAssertionHandler currentHandler];
    double v4 = +[NSString stringWithUTF8String:"void *NanoMusicSyncLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"MLSyncKeepLocalEventHandler.m", 45, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("NMSyncDefaults");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    double v3 = +[NSAssertionHandler currentHandler];
    unsigned __int8 v5 = +[NSString stringWithUTF8String:"Class getNMSyncDefaultsClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"MLSyncKeepLocalEventHandler.m", 49, @"Unable to find class %s", "NMSyncDefaults");

LABEL_10:
    __break(1u);
  }
  qword_A4B40 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_65648()
{
  uint64_t result = _sl_dlopen();
  qword_A4B48 = result;
  return result;
}

void sub_65C40(id a1)
{
  qword_A4C80 = +[ML3ComparisonPredicate predicateWithProperty:ML3TrackPropertyIsInMyLibrary value:&off_9CBA0 comparison:2];

  _objc_release_x1();
}

void sub_65E10(id a1)
{
  v3[0] = objc_opt_class();
  v3[1] = objc_opt_class();
  v3[2] = objc_opt_class();
  v3[3] = objc_opt_class();
  void v3[4] = objc_opt_class();
  void v3[5] = objc_opt_class();
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:6];
  uint64_t v2 = (void *)qword_A4B70;
  qword_A4B70 = v1;
}

void sub_67108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v35 - 224), 8);
  _Unwind_Resume(a1);
}

void sub_67180(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 1;
  id v4 = +[ML3Track newWithPersistentID:a2 inLibrary:*(void *)(a1 + 32)];
  unsigned __int8 v5 = [v4 getValuesForProperties:*(void *)(a1 + 40)];
  id v6 = [v5 mutableCopy];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    long long v7 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 48) persistentID]);
    [v6 setObject:v7 forKeyedSubscript:ML3TrackPropertyDownloadSourceContainerPid];
  }
  uint64_t v8 = ML3EntityPropertyKeepLocalConstraints;
  id v9 = [v6 objectForKeyedSubscript:ML3EntityPropertyKeepLocalConstraints];
  unint64_t v10 = (unint64_t)[v9 longLongValue];

  int v11 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 104) | v10];
  [v6 setObject:v11 forKeyedSubscript:v8];

  id v12 = v6;
  if (([*(id *)(a1 + 56) _canDownloadTrackWithPersistentID:a2 andProperties:v12] & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = 1;
    goto LABEL_20;
  }
  unsigned int v13 = [*(id *)(a1 + 56) _isSupportedMediaTypeFromTrackProperties:v12];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    && [*(id *)(a1 + 56) _containerIsSmartLimited:*(void *)(a1 + 48)])
  {
    id v14 = [v12 objectForKey:ML3EntityPropertyKeepLocal];
    id v15 = [v14 integerValue];

    if (v15 != (id)-1) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) = 0;
    }
    uint64_t v16 = [*(id *)(a1 + 48) valueForProperty:ML3ContainerPropertyDistinguishedKind];
    if ([v16 intValue] == 71)
    {
      id v17 = [v12 objectForKey:ML3TrackPropertyIsPlayable];
      unsigned int v18 = [v17 BOOLValue];
    }
    else
    {
      unsigned int v18 = 0;
    }

    uint64_t v19 = [v12 objectForKey:ML3TrackPropertyIsInMyLibrary];
    unsigned int v20 = [v19 BOOLValue];

    uint64_t v21 = [v12 objectForKey:ML3TrackPropertyIsInTheCloud];
    int v22 = (char *)[v21 integerValue];

    if (v22 == (unsigned char *)&dword_0 + 1) {
      unsigned int v23 = v13;
    }
    else {
      unsigned int v23 = 0;
    }
    if (v23 == 1 && v20 | v18) {
      goto LABEL_19;
    }
  }
  else if (v13)
  {
LABEL_19:
    *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = 1;
    ++*(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24);
    [*(id *)(a1 + 56) _addTrackWithPersistentId:a2 andProperties:v12 withKeepLocalValue:*(unsigned int *)(a1 + 112) toResult:*(void *)(a1 + 64)];
  }
LABEL_20:
}

void sub_67954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_67978(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_67988(uint64_t a1)
{
}

void sub_67990(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  if (*(void *)(a1 + 56) == a2)
  {
    id v9 = +[MLSyncKeepLocalEventHandler _trackPropertiesToFetch];
    id v7 = +[ML3Track newWithPersistentID:a2 inLibrary:*(void *)(a1 + 32)];
    uint64_t v8 = [v7 getValuesForProperties:v9];
    [*(id *)(a1 + 40) _addTrackWithPersistentId:a2 andProperties:v8 withKeepLocalValue:1 toResult:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
    *a4 = 1;
  }
}

void sub_67F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_67F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = +[NSNumber numberWithLongLong:a2];
  [v2 addObject:v3];
}

uint64_t sub_67FF0(uint64_t a1, void *a2)
{
  uint64_t v7 = ML3EntityPropertyKeepLocal;
  id v3 = a2;
  id v4 = +[NSArray arrayWithObjects:&v7 count:1];
  unsigned __int8 v5 = objc_msgSend(*(id *)(a1 + 32), "allObjects", v7);
  +[ML3Track setValues:&off_9D190 forProperties:v4 forEntityPersistentIDs:v5 inLibrary:*(void *)(a1 + 40) usingConnection:v3];

  return 1;
}

void sub_680D4(uint64_t a1, void *a2)
{
  id v3 = [a2 longLongValue];
  id v5 = +[ML3Track newWithPersistentID:v3 inLibrary:*(void *)(a1 + 32)];
  id v4 = [v5 getValuesForProperties:*(void *)(a1 + 40)];
  [*(id *)(a1 + 48) _addTrackWithPersistentId:v3 andProperties:v4 withKeepLocalValue:1 toResult:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
}

void sub_68E84(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_68F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [*(id *)(a1 + 32) count]);
  if ([*(id *)(a1 + 32) count])
  {
    unint64_t v8 = 0;
    do
    {
      id v9 = [*(id *)(a1 + 32) objectAtIndexedSubscript:v8];
      [v7 setObject:*(void *)(a3 + 8 * v8) forKeyedSubscript:v9];

      ++v8;
    }
    while (v8 < (unint64_t)[*(id *)(a1 + 32) count]);
  }
  unint64_t v10 = [v7 objectForKey:ML3EntityPropertyKeepLocal];
  id v11 = [v10 integerValue];

  [*(id *)(a1 + 40) _addTrackWithPersistentId:a2 andProperties:v7 withKeepLocalValue:v11 toResult:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
}

void sub_69044(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = +[NSNumber numberWithLongLong:a2];
  [v2 addObject:v3];
}

id sub_690A4(uint64_t a1, void *a2)
{
  v7[0] = ML3EntityPropertyKeepLocalStatus;
  v7[1] = ML3EntityPropertyKeepLocalStatusReason;
  id v3 = a2;
  id v4 = +[NSArray arrayWithObjects:v7 count:2];
  id v5 = +[ML3Track setValues:&off_9D100 forProperties:v4 forEntityPersistentIDs:*(void *)(a1 + 32) inLibrary:*(void *)(a1 + 40) usingConnection:v3];

  return v5;
}

void sub_69178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [*(id *)(a1 + 32) count]);
  id v8 = [*(id *)(a1 + 64) newWithPersistentID:a2 inLibrary:*(void *)(a1 + 40)];
  if ([*(id *)(a1 + 32) count])
  {
    unint64_t v9 = 0;
    do
    {
      unint64_t v10 = [*(id *)(a1 + 32) objectAtIndexedSubscript:v9];
      [v7 setObject:*(void *)(a3 + 8 * v9) forKeyedSubscript:v10];

      ++v9;
    }
    while (v9 < (unint64_t)[*(id *)(a1 + 32) count]);
  }
  [*(id *)(a1 + 48) setObject:v7 forKeyedSubscript:v8];
  [*(id *)(a1 + 56) addObject:v8];
}

void sub_6927C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 executeQuery:@"SELECT DISTINCT(album_pid) FROM album WHERE album.keep_local=? AND album.keep_local_status!=? AND NOT EXISTS (SELECT 1 FROM item WHERE item.album_pid = album.album_pid AND base_location_id < ?)" withParameters:&off_9D118];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_699D0;
  v8[3] = &unk_9AF98;
  id v9 = *(id *)(a1 + 32);
  [v4 enumerateRowsWithBlock:v8];
  id v5 = [v3 executeQuery:@"SELECT DISTINCT(album_pid) FROM album WHERE album.keep_local=? AND album.keep_local_status=? AND EXISTS (SELECT 1 FROM item WHERE item.album_pid = album.album_pid AND base_location_id < ?)" withParameters:&off_9D130];

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_69A68;
  v6[3] = &unk_9AF98;
  id v7 = *(id *)(a1 + 40);
  [v5 enumerateRowsWithBlock:v6];
}

uint64_t sub_693C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) count])
  {
    id v4 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      uint64_t v16 = v5;
      __int16 v17 = 2114;
      uint64_t v18 = v6;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "%{public}@ Marking albums as complete because all tracks are downloaded locally: %{public}@", buf, 0x16u);
    }

    uint64_t v14 = ML3EntityPropertyKeepLocalStatus;
    id v7 = +[NSArray arrayWithObjects:&v14 count:1];
    +[ML3Album setValues:&off_9D148 forProperties:v7 forEntityPersistentIDs:*(void *)(a1 + 32) inLibrary:*(void *)(a1 + 48) usingConnection:v3];
  }
  if ([*(id *)(a1 + 56) count])
  {
    id v8 = _ATLogCategorySyncBundle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v10 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 138543618;
      uint64_t v16 = v9;
      __int16 v17 = 2114;
      uint64_t v18 = v10;
      _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "%{public}@ Marking albums as incomplete because some tracks are missing local assets: %{public}@", buf, 0x16u);
    }

    v13[0] = ML3EntityPropertyKeepLocalStatus;
    v13[1] = ML3EntityPropertyKeepLocalStatusReason;
    id v11 = +[NSArray arrayWithObjects:v13 count:2];
    +[ML3Album setValues:&off_9D160 forProperties:v11 forEntityPersistentIDs:*(void *)(a1 + 56) inLibrary:*(void *)(a1 + 48) usingConnection:v3];
  }
  return 1;
}

void sub_695C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = +[NSNumber numberWithLongLong:a2];
  [v2 addObject:v3];
}

id sub_69624(uint64_t a1, void *a2)
{
  v7[0] = ML3EntityPropertyKeepLocalStatus;
  v7[1] = ML3EntityPropertyKeepLocalStatusReason;
  id v3 = a2;
  id v4 = +[NSArray arrayWithObjects:v7 count:2];
  id v5 = +[ML3Track setValues:&off_9D178 forProperties:v4 forEntityPersistentIDs:*(void *)(a1 + 32) inLibrary:*(void *)(a1 + 40) usingConnection:v3];

  return v5;
}

id sub_696F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = ML3EntityPropertyKeepLocal;
  id v5 = +[ML3ComparisonPredicate predicateWithProperty:ML3EntityPropertyKeepLocal value:&off_9CBA0 comparison:3];
  uint64_t v6 = +[ML3Track unrestrictedAllItemsQueryWithlibrary:*(void *)(a1 + 32) predicate:v5 orderingTerms:0];
  unsigned __int8 v7 = [v6 hasEntities];

  id v8 = +[ML3Container queryWithLibrary:*(void *)(a1 + 32) predicate:v5];
  unsigned __int8 v9 = [v8 hasEntities];

  uint64_t v10 = +[ML3Album queryWithLibrary:*(void *)(a1 + 32) predicate:v5];
  unsigned __int8 v11 = [v10 hasEntities];

  if ((v7 & 1) == 0 && (v9 & 1) == 0 && (v11 & 1) == 0)
  {
    id v12 = +[ML3ComparisonPredicate predicateWithProperty:v4 value:&off_9CBA0 comparison:5];
    unsigned int v13 = +[ML3Track unrestrictedAllItemsQueryWithlibrary:*(void *)(a1 + 32) predicate:v12 orderingTerms:0];
    id v14 = [v13 hasEntities];

    id v15 = _ATLogCategorySyncBundle();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);
    if (v14)
    {
      if (v16)
      {
        uint64_t v17 = *(void *)(a1 + 40);
        int v23 = 138543362;
        uint64_t v24 = v17;
        _os_log_impl(&dword_0, v15, OS_LOG_TYPE_DEFAULT, "%{public}@ Clearing keep-local on disabled tracks as there are no more pinned entities", (uint8_t *)&v23, 0xCu);
      }

      if ([v3 executeUpdate:@"UPDATE item SET keep_local=0, keep_local_status=0,keep_local_status_reason=0"])
      {
        id v14 = &dword_0 + 1;
        goto LABEL_18;
      }
      id v15 = _ATLogCategorySyncBundle();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v21 = *(void *)(a1 + 40);
        int v23 = 138543362;
        uint64_t v24 = v21;
        unsigned int v20 = "%{public}@ Failed to clear keep-local disabled tracks - will try again later";
        goto LABEL_16;
      }
    }
    else if (v16)
    {
      uint64_t v19 = *(void *)(a1 + 40);
      int v23 = 138543362;
      uint64_t v24 = v19;
      unsigned int v20 = "%{public}@ Skipping keep-local reset as there were no tracks to clear";
LABEL_16:
      _os_log_impl(&dword_0, v15, OS_LOG_TYPE_DEFAULT, v20, (uint8_t *)&v23, 0xCu);
    }

    goto LABEL_18;
  }
  id v12 = _ATLogCategorySyncBundle();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v18 = *(void *)(a1 + 40);
    int v23 = 138543362;
    uint64_t v24 = v18;
    _os_log_impl(&dword_0, v12, OS_LOG_TYPE_DEFAULT, "%{public}@ Skipping keep-local reset as we found pinned entities", (uint8_t *)&v23, 0xCu);
  }
  id v14 = 0;
LABEL_18:

  return v14;
}

void sub_699D0(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  if (!v5)
  {
    unsigned __int8 v7 = *(void **)(a1 + 32);
    id v8 = [v9 numberForColumnIndex:0];
    [v7 addObject:v8];
  }
}

void sub_69A68(uint64_t a1, void *a2, uint64_t a3)
{
  if (!a3)
  {
    uint64_t v4 = *(void **)(a1 + 32);
    objc_msgSend(a2, "numberForColumnIndex:");
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    [v4 addObject:v5];
  }
}

void sub_69CE0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) keepLocalEnabledPredicate];
  uint64_t v3 = objc_msgSend(*(id *)(a1 + 32), "hasDownloadingStatusPredicate", v2);
  v9[1] = v3;
  uint64_t v4 = [*(id *)(a1 + 32) isDownloadablePredicate];
  id v5 = +[ML3NegationPredicate predicateWithPredicate:v4];
  void v9[2] = v5;
  uint64_t v6 = +[NSArray arrayWithObjects:v9 count:3];
  uint64_t v7 = +[ML3AllCompoundPredicate predicateMatchingPredicates:v6];
  id v8 = (void *)qword_A4C70;
  qword_A4C70 = v7;
}

void sub_69E48(id a1)
{
  qword_A4C60 = +[ML3ComparisonPredicate predicateWithProperty:ML3EntityPropertyKeepLocalStatus value:&off_9CC00 comparison:1];

  _objc_release_x1();
}

void sub_69EF4(id a1)
{
  qword_A4C50 = +[ML3ComparisonPredicate predicateWithProperty:ML3TrackPropertyIsStoreRedownloadable value:&off_9CC00 comparison:1];

  _objc_release_x1();
}

void sub_69FEC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) keepLocalCancelledPredicate];
  uint64_t v3 = [*(id *)(a1 + 32) keepLocalDisabledPredicate];
  v11[0] = v2;
  v11[1] = v3;
  uint64_t v4 = +[NSArray arrayWithObjects:v11 count:2];
  id v5 = +[ML3AnyCompoundPredicate predicateMatchingPredicates:v4];

  v10[0] = v5;
  uint64_t v6 = [*(id *)(a1 + 32) hasPendingDownloadPredicate];
  v10[1] = v6;
  uint64_t v7 = +[NSArray arrayWithObjects:v10 count:2];
  uint64_t v8 = +[ML3AllCompoundPredicate predicateMatchingPredicates:v7];
  id v9 = (void *)qword_A4C40;
  qword_A4C40 = v8;
}

void sub_6A1BC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) keepLocalDisabledPredicate];
  uint64_t v3 = objc_msgSend(*(id *)(a1 + 32), "hasTrackDataOrPendingDownloadPredicate", v2);
  v8[1] = v3;
  uint64_t v4 = [*(id *)(a1 + 32) isDownloadablePredicate];
  v8[2] = v4;
  id v5 = +[NSArray arrayWithObjects:v8 count:3];
  uint64_t v6 = +[ML3AllCompoundPredicate predicateMatchingPredicates:v5];
  uint64_t v7 = (void *)qword_A4C30;
  qword_A4C30 = v6;
}

void sub_6A350(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) hasTrackDataPredicate];
  v7[0] = v2;
  uint64_t v3 = [*(id *)(a1 + 32) hasPendingDownloadPredicate];
  v7[1] = v3;
  uint64_t v4 = +[NSArray arrayWithObjects:v7 count:2];
  uint64_t v5 = +[ML3AnyCompoundPredicate predicateMatchingPredicates:v4];
  uint64_t v6 = (void *)qword_A4C20;
  qword_A4C20 = v5;
}

void sub_6A478(id a1)
{
  uint64_t v1 = ML3EntityPropertyKeepLocalStatus;
  uint64_t v2 = +[ML3ComparisonPredicate predicateWithProperty:ML3EntityPropertyKeepLocalStatus value:&off_9CC00 comparison:1];
  uint64_t v3 = +[ML3ComparisonPredicate predicateWithProperty:value:comparison:](ML3ComparisonPredicate, "predicateWithProperty:value:comparison:", v1, &off_9CC60, 1, v2);
  v8[1] = v3;
  uint64_t v4 = +[ML3ComparisonPredicate predicateWithProperty:v1 value:&off_9CC78 comparison:1];
  v8[2] = v4;
  uint64_t v5 = +[NSArray arrayWithObjects:v8 count:3];
  uint64_t v6 = +[ML3AnyCompoundPredicate predicateMatchingPredicates:v5];
  uint64_t v7 = (void *)qword_A4C10;
  qword_A4C10 = v6;
}

void sub_6A740(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) keepLocalEnabledPredicate];
  v7[0] = v2;
  uint64_t v3 = [*(id *)(a1 + 32) missingTrackDataPredicate];
  v7[1] = v3;
  uint64_t v4 = +[NSArray arrayWithObjects:v7 count:2];
  uint64_t v5 = +[ML3AllCompoundPredicate predicateMatchingPredicates:v4];
  uint64_t v6 = (void *)qword_A4C00;
  qword_A4C00 = v5;
}

void sub_6A868(id a1)
{
  qword_A4BF0 = +[ML3ComparisonPredicate predicateWithProperty:ML3EntityPropertyKeepLocal value:&off_9CC48 comparison:1];

  _objc_release_x1();
}

void sub_6A960(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) hasTrackDataPredicate];
  uint64_t v2 = +[ML3ComparisonPredicate predicateWithProperty:value:comparison:](ML3ComparisonPredicate, "predicateWithProperty:value:comparison:", ML3EntityPropertyKeepLocal, &off_9CC00, 2, v1);
  v7[1] = v2;
  uint64_t v3 = +[ML3ComparisonPredicate predicateWithProperty:ML3TrackPropertyMediaType equalToInt64:8];
  void v7[2] = v3;
  uint64_t v4 = +[NSArray arrayWithObjects:v7 count:3];
  uint64_t v5 = +[ML3AllCompoundPredicate predicateMatchingPredicates:v4];
  uint64_t v6 = (void *)qword_A4BE0;
  qword_A4BE0 = v5;
}

void sub_6AAD0(id a1)
{
  qword_A4BD0 = +[ML3ComparisonPredicate predicateWithProperty:ML3EntityPropertyKeepLocal value:&off_9CBA0 comparison:6];

  _objc_release_x1();
}

void sub_6AB7C(id a1)
{
  qword_A4BC0 = +[ML3ComparisonPredicate predicateWithProperty:ML3EntityPropertyKeepLocal value:&off_9CC30 comparison:1];

  _objc_release_x1();
}

void sub_6AC28(id a1)
{
  qword_A4BB0 = +[ML3ComparisonPredicate predicateWithProperty:ML3EntityPropertyKeepLocal value:&off_9CBA0 comparison:4];

  _objc_release_x1();
}

void sub_6ACD4(id a1)
{
  qword_A4BA0 = +[ML3ComparisonPredicate predicateWithProperty:ML3EntityPropertyKeepLocal value:&off_9CBA0 comparison:3];

  _objc_release_x1();
}

void sub_6AD80(id a1)
{
  qword_A4B90 = +[ML3ComparisonPredicate predicateWithProperty:ML3TrackPropertyHasNonPurgeableAsset value:&off_9CC00 comparison:1];

  _objc_release_x1();
}

void sub_6AE2C(id a1)
{
  qword_A4B80 = +[ML3ComparisonPredicate predicateWithProperty:ML3TrackPropertyIsInTheCloud value:&off_9CC00 comparison:1];

  _objc_release_x1();
}

void sub_6AF58(id a1)
{
  v3[0] = ML3EntityPropertyKeepLocalStatus;
  v3[1] = ML3EntityPropertyKeepLocal;
  v3[2] = ML3EntityPropertyKeepLocalConstraints;
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:3];
  uint64_t v2 = (void *)qword_A4B60;
  qword_A4B60 = v1;
}

void sub_6B048(id a1)
{
  v3[0] = ML3EntityPropertyKeepLocal;
  v3[1] = ML3TrackPropertyIsInTheCloud;
  v3[2] = ML3TrackPropertyMediaType;
  void v3[3] = ML3TrackPropertyIsInMyLibrary;
  void v3[4] = ML3TrackPropertyNeedsRestore;
  void v3[5] = ML3TrackPropertyPodcastExternalGUID;
  void v3[6] = ML3TrackPropertyStoreAccountID;
  v3[7] = ML3TrackPropertyStoreItemID;
  v3[8] = ML3TrackPropertyStoreFlavor;
  v3[9] = ML3TrackPropertyStoreMatchedStatus;
  v3[10] = ML3TrackPropertyStoreRedownloadedStatus;
  v3[11] = ML3TrackPropertyStoreSagaID;
  v3[12] = ML3TrackPropertySyncID;
  v3[13] = ML3TrackPropertyIsRental;
  v3[14] = ML3TrackPropertyTitle;
  v3[15] = ML3TrackPropertyTotalSize;
  v3[16] = ML3TrackPropertyStoreCloudAssetAvailable;
  v3[17] = ML3TrackPropertySubscriptionStoreItemID;
  v3[18] = ML3EntityPropertyKeepLocalStatus;
  v3[19] = ML3TrackPropertyStoreRedownloadParameters;
  v3[20] = ML3TrackPropertyStorePlaybackEndpointType;
  v3[21] = ML3TrackPropertyIsMusicShow;
  v3[22] = ML3TrackPropertyTotalTime;
  v3[23] = ML3EntityPropertyKeepLocalConstraints;
  v3[24] = ML3TrackPropertyPurchaseHistoryRedownloadParameters;
  v3[25] = ML3EntityPropertyKeepLocalStatusReason;
  v3[26] = ML3TrackPropertyIsPlayable;
  v3[27] = ML3TrackPropertyIsStoreRedownloadable;
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:28];
  uint64_t v2 = (void *)qword_A4B50;
  qword_A4B50 = v1;
}

BOOL sub_6B248(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 domain];
  if (![v2 isEqualToString:@"ATError"]
    || [v1 code] == (char *)&dword_4 + 3
    || [v1 code] == &dword_8
    || [v1 code] == (char *)&dword_C + 2
    || [v1 code] == &dword_10
    || [v1 code] == (char *)&dword_8 + 1
    || [v1 code] == (char *)&dword_10 + 2
    || [v1 code] == &dword_4
    || [v1 code] == (char *)&dword_10 + 3
    || [v1 code] == &dword_14
    || [v1 code] == (char *)&dword_18 + 1
    || [v1 code] == (char *)&dword_18 + 3
    || [v1 code] == &dword_18
    || [v1 code] == (char *)&dword_1C + 3
    || [v1 code] == &stru_20
    || [v1 code] == (char *)&stru_20.cmd + 1
    || [v1 code] == (char *)&stru_20.cmd + 2
    || [v1 code] == (char *)&stru_20.cmd + 3)
  {
    uint64_t v3 = [v1 domain];
    if ([v3 isEqualToString:@"AVFoundationErrorDomain"])
    {
      BOOL v4 = 0;
    }
    else
    {
      uint64_t v5 = [v1 domain];
      if ([v5 isEqualToString:NSURLErrorDomain]) {
        BOOL v4 = [v1 code] != (id)-1100;
      }
      else {
        BOOL v4 = 1;
      }
    }
  }
  else
  {
    BOOL v4 = 0;
  }

  return v4;
}

void sub_6B428(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if (sub_6B248(v9))
  {
    unsigned __int8 v11 = _ATLogCategoryAssetUtils();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543874;
      *(void *)&uint8_t buf[4] = v7;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v10;
      *(_WORD *)&buf[22] = 2114;
      id v40 = v9;
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, "Asset (%{public}@) failed to %{public}@ (%{public}@); error recoverable, keeping track",
        buf,
        0x20u);
    }
LABEL_4:

    goto LABEL_24;
  }
  id v12 = [v7 variantOptions];
  unsigned int v13 = [v12 objectForKey:@"AssetParts"];
  unsigned __int8 v14 = [v13 unsignedIntegerValue];

  if ((v14 & 1) == 0)
  {
    unsigned __int8 v11 = _ATLogCategoryAssetUtils();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543874;
      *(void *)&uint8_t buf[4] = v7;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v10;
      *(_WORD *)&buf[22] = 2114;
      id v40 = v9;
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_ERROR, "Asset (%{public}@) failed to %{public}@ (%{public}@); error non-recoverable, but no file part, keeping track",
        buf,
        0x20u);
    }
    goto LABEL_4;
  }
  id v15 = [v7 identifier];
  id v16 = [v15 longLongValue];

  uint64_t v17 = [v7 storeInfo];
  uint64_t v18 = [v17 syncID];
  id v19 = [v18 longLongValue];

  if (!v19
    || (+[ML3ComparisonPredicate predicateWithProperty:equalToInt64:](ML3ComparisonPredicate, "predicateWithProperty:equalToInt64:", ML3TrackPropertySyncID, v19), unsigned int v20 = objc_claimAutoreleasedReturnValue(), +[ML3Track anyInLibrary:v8 predicate:v20 options:3], v21 = (id)objc_claimAutoreleasedReturnValue(), v20, !v21))
  {
    if (![v7 isRestore]) {
      goto LABEL_24;
    }
    id v21 = +[ML3Track newWithPersistentID:v16 inLibrary:v8];
    if (([v21 existsInLibrary] & 1) == 0)
    {

      goto LABEL_24;
    }
    if (!v21) {
      goto LABEL_24;
    }
  }
  if ([v7 isRestore]) {
    [v21 setValue:&__kCFBooleanFalse forProperty:ML3TrackPropertyNeedsRestore];
  }
  id v22 = v8;
  v35[0] = 0;
  v35[1] = v35;
  v35[2] = 0x2020000000;
  char v36 = 0;
  uint64_t v29 = 0;
  __int16 v30 = &v29;
  uint64_t v31 = 0x3032000000;
  uint64_t v32 = sub_6B930;
  __int16 v33 = sub_6B940;
  id v34 = 0;
  dispatch_semaphore_t v23 = dispatch_semaphore_create(0);
  uint64_t v24 = +[NSNumber numberWithLongLong:v16];
  id v44 = v24;
  __int16 v25 = +[NSArray arrayWithObjects:&v44 count:1];
  *(void *)buf = _NSConcreteStackBlock;
  *(void *)&uint8_t buf[8] = 3221225472;
  *(void *)&uint8_t buf[16] = sub_6B948;
  id v40 = &unk_9B008;
  id v42 = v35;
  id v43 = &v29;
  id v26 = v23;
  id v41 = v26;
  [v22 removeTracksWithPersistentIDs:v25 fromSource:3 withCompletionHandler:buf];

  dispatch_semaphore_wait(v26, 0xFFFFFFFFFFFFFFFFLL);
  if (v30[5])
  {
    id v27 = _ATLogCategoryAssetUtils();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
    {
      id v28 = objc_msgSend((id)v30[5], "msv_description");
      *(_DWORD *)__int16 v37 = 138543362;
      int v38 = v28;
      _os_log_impl(&dword_0, v27, OS_LOG_TYPE_ERROR, "RemoveTrackWithPersistenId finished. error=%{public}@", v37, 0xCu);
    }
  }
  else
  {
    id v27 = _ATLogCategoryAssetUtils();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int16 v37 = 0;
      _os_log_impl(&dword_0, v27, OS_LOG_TYPE_DEFAULT, "RemoveTrackWithPersistenId finished.", v37, 2u);
    }
  }

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(v35, 8);

LABEL_24:
}

void sub_6B8F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
}

uint64_t sub_6B930(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_6B940(uint64_t a1)
{
}

void sub_6B948(uint64_t a1, char a2, id obj)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), obj);
  id v5 = obj;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

CFStringRef sub_6B9B8(__int16 a1)
{
  if ((a1 & 0x20) != 0) {
    return @"iTunesU";
  }
  if ((a1 & 0x1000) != 0) {
    return @"iTunesUVideo";
  }
  if ((a1 & 2) != 0) {
    return @"Audiobook";
  }
  if ((a1 & 0x800) != 0) {
    return @"Movie";
  }
  if ((a1 & 0x2000) != 0) {
    return @"HomeVideo";
  }
  if ((a1 & 0x400) != 0) {
    return @"MusicVideo";
  }
  if ((a1 & 0x24) != 0) {
    return @"Podcast";
  }
  if ((a1 & 0x200) != 0) {
    return @"TVEpisode";
  }
  if ((a1 & 0x1100) != 0) {
    return @"VideoPodcast";
  }
  return @"Music";
}

id sub_6BA60(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  id v7 = 0;
  if (v5 && a2)
  {
    if (![v5 count])
    {
      id v7 = 0;
      goto LABEL_35;
    }
    id v43 = v6;
    int64x2_t v46 = +[NSString stringWithFormat:@"%lld", a2];
    id v7 = [objc_alloc((Class)ATAsset) initWithIdentifier:v46 dataclass:@"Media" prettyName:0];
    id v8 = +[NSNumber numberWithUnsignedInteger:1];
    id v9 = +[NSDictionary dictionaryWithObject:v8 forKey:@"AssetParts"];
    [v7 setVariantOptions:v9];

    uint64_t v53 = [v5 objectForKey:ML3TrackPropertyStoreSagaID];
    id v55 = [v5 objectForKey:ML3TrackPropertyStoreMatchedStatus];
    uint64_t v54 = [v5 objectForKey:ML3TrackPropertyStoreRedownloadedStatus];
    uint64_t v10 = [v5 objectForKey:ML3TrackPropertyTotalSize];
    unsigned __int8 v11 = [v5 objectForKey:ML3TrackPropertyMediaType];
    uint64_t v49 = [v5 objectForKey:ML3TrackPropertyStoreAccountID];
    uint64_t v12 = ML3TrackPropertySubscriptionStoreItemID;
    uint64_t v56 = [v5 objectForKey:ML3TrackPropertySubscriptionStoreItemID];
    uint64_t v58 = [v5 objectForKey:ML3TrackPropertyStoreRedownloadParameters];
    unsigned int v48 = [v5 objectForKey:ML3TrackPropertyPurchaseHistoryRedownloadParameters];
    unsigned int v13 = [v5 objectForKey:ML3TrackPropertyStorePlaybackEndpointType];
    if ([v13 integerValue] == (char *)&dword_0 + 3) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = ML3TrackPropertyStoreItemID;
    }
    uint64_t v47 = [v5 objectForKey:v14];
    uint64_t v52 = [v5 objectForKey:ML3TrackPropertyPodcastExternalGUID];
    uint64_t v57 = [v5 objectForKey:ML3TrackPropertyStoreFlavor];
    uint64_t v15 = [v5 objectForKey:ML3TrackPropertyTitle];
    id v16 = [v5 objectForKey:ML3TrackPropertyNeedsRestore];
    id v17 = [v16 BOOLValue];

    uint64_t v18 = [v5 objectForKey:ML3TrackPropertyIsRental];
    [v18 BOOLValue];

    id v51 = [v5 objectForKey:ML3TrackPropertySyncID];
    id v19 = +[ML3MusicLibrary autoupdatingSharedLibrary];
    unsigned int v20 = [v19 valueForDatabaseProperty:@"MLCloudAccountID"];
    id v21 = (void *)v10;
    id v50 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v20 longLongValue]);

    id v22 = [v5 objectForKey:ML3TrackPropertyDownloadSourceContainerPid];
    [v7 setIsRestore:v17];
    id v45 = (void *)v15;
    [v7 setPrettyName:v15];
    dispatch_semaphore_t v23 = sub_6B9B8((__int16)[v11 unsignedIntegerValue]);
    [v7 setAssetType:v23];

    if ([v21 longLongValue])
    {
      unint64_t v24 = (unint64_t)[v21 longLongValue];
      __int16 v25 = (void *)v49;
      id v26 = (void *)v47;
      id v27 = v13;
    }
    else
    {
      id v28 = [v5 objectForKey:ML3TrackPropertyTotalTime];
      [v28 doubleValue];
      double v30 = v29;

      __int16 v25 = (void *)v49;
      id v26 = (void *)v47;
      id v27 = v13;
      if (([v11 unsignedIntegerValue] & 4) == 0)
      {
        id v6 = v43;
        if (v30 <= 0.0) {
          unint64_t v24 = 7340032;
        }
        else {
          unint64_t v24 = (unint64_t)(v30 * 35.8260224);
        }
LABEL_15:
        [v7 setTotalBytes:v24];
        [v7 setDownloadSourceContainerId:v22];
        if (![v25 longLongValue]
          && ![v26 longLongValue]
          && ![v57 length]
          && (uint64_t)[v56 longLongValue] <= 0
          && (uint64_t)[v55 longLongValue] <= 0
          && (uint64_t)[v54 longLongValue] <= 0
          && (uint64_t)[v53 longLongValue] <= 0
          && ![v52 length])
        {
          goto LABEL_34;
        }
        id v44 = v22;
        uint64_t v31 = v11;
        uint64_t v32 = v21;
        id v33 = objc_alloc_init((Class)ATStoreInfo);
        [v7 setStoreInfo:v33];
        [v33 setDSID:v25];
        [v33 setCloudDSID:v50];
        [v33 setSagaID:v53];
        [v33 setAdamID:v26];
        id v34 = [v6 accountCacheDatabase];
        uint64_t v35 = objc_msgSend(v34, "appleIDForDSID:", objc_msgSend(v25, "longLongValue"));
        [v33 setAppleID:v35];

        [v33 setMatchStatus:v55];
        [v33 setRedownloadStatus:v54];
        [v33 setFlavor:v57];
        [v33 setPodcastEpisodeGUID:v52];
        [v33 setRedownloadParams:v58];
        [v33 setEndpointType:v27];
        [v33 setSubscriptionID:v56];
        if (v51)
        {
          char v36 = [v51 stringValue];
          [v33 setSyncID:v36];
        }
        __int16 v25 = (void *)v49;
        if (![v27 isEqualToNumber:&off_9CC90])
        {
LABEL_33:

          id v21 = v32;
          unsigned __int8 v11 = v31;
          id v22 = v44;
LABEL_34:

          goto LABEL_35;
        }
        if (v48)
        {
          [v33 setRedownloadParams:v48];
          __int16 v37 = _ATLogCategoryAssetUtils();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543874;
            id v60 = v58;
            __int16 v61 = 2114;
            uint64_t v62 = v48;
            __int16 v63 = 2114;
            id v64 = v7;
            int v38 = "Updating redownload params from %{public}@ to %{public}@ for %{public}@";
            id v39 = v37;
            os_log_type_t v40 = OS_LOG_TYPE_DEFAULT;
            uint32_t v41 = 32;
LABEL_31:
            _os_log_impl(&dword_0, v39, v40, v38, buf, v41);
          }
        }
        else
        {
          __int16 v37 = _ATLogCategoryAssetUtils();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138543618;
            id v60 = v7;
            __int16 v61 = 1024;
            LODWORD(v62) = 1;
            int v38 = "asset=%{public}@ has endpoint=%d with no matching redownload params";
            id v39 = v37;
            os_log_type_t v40 = OS_LOG_TYPE_ERROR;
            uint32_t v41 = 18;
            goto LABEL_31;
          }
        }
        id v26 = (void *)v47;

        goto LABEL_33;
      }
      unint64_t v24 = 52428800;
    }
    id v6 = v43;
    goto LABEL_15;
  }
LABEL_35:

  return v7;
}

void sub_6C218(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = [v5 variantOptions];
  id v8 = [v7 objectForKey:@"AssetParts"];
  id v9 = [v8 unsignedIntegerValue];

  uint64_t v10 = [v5 error];
  unsigned __int8 v11 = [v5 identifier];
  id v12 = [v11 longLongValue];

  if (a3)
  {
    unsigned int v13 = +[NSFileManager defaultManager];
    uint64_t v115 = +[ATAirlock sharedInstance];
    uint64_t v14 = _ATLogCategoryAssetUtils();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = [v5 path];
      *(_DWORD *)buf = 138543362;
      id v133 = v15;
      _os_log_impl(&dword_0, v14, OS_LOG_TYPE_DEFAULT, "processing asset with path %{public}@", buf, 0xCu);
    }
    unint64_t v116 = v6;

    id v16 = [v5 path];
    unint64_t v117 = v13;
    id v114 = v10;
    if ([v13 fileExistsAtPath:v16])
    {
      id v17 = [v5 path];
      uint64_t v18 = [v115 pathForDataclass:@"Media"];
      unsigned int v19 = [v17 hasPrefix:v18];

      if (v19)
      {
        unsigned int v20 = [v5 identifier];
        uint64_t v21 = (uint64_t)[v20 longLongValue] % 50;

        id v22 = [v5 path];
        dispatch_semaphore_t v23 = [v22 lastPathComponent];

        unint64_t v24 = +[NSString stringWithFormat:@"F%02d", v21];
        uint64_t v25 = +[ML3MusicLibrary pathForResourceFileOrFolder:11];
        v138[0] = v25;
        v138[1] = v24;
        id v26 = +[NSArray arrayWithObjects:v138 count:2];
        id v27 = +[NSString pathWithComponents:v26];

        id v28 = [v27 stringByAppendingPathComponent:v23];
        id v128 = 0;
        LOBYTE(v25) = [v13 createDirectoryAtPath:v27 withIntermediateDirectories:1 attributes:0 error:&v128];
        id v29 = v128;
        if ((v25 & 1) == 0)
        {
          id v33 = _ATLogCategoryAssetUtils();
          if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138543618;
            id v133 = v27;
            __int16 v134 = 2114;
            unint64_t v135 = (unint64_t)v29;
            _os_log_impl(&dword_0, v33, OS_LOG_TYPE_ERROR, "failed to create asset dir %{public}@. error=%{public}@", buf, 0x16u);
          }
          goto LABEL_96;
        }
        [v13 removeItemAtPath:v28 error:0];
        double v30 = [v5 path];
        id v127 = v29;
        unsigned __int8 v31 = [v13 moveItemAtPath:v30 toPath:v28 error:&v127];
        id v112 = v127;

        uint64_t v32 = _ATLogCategoryAssetUtils();
        id v33 = v32;
        if ((v31 & 1) == 0)
        {
          if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138543874;
            id v133 = v5;
            __int16 v134 = 2114;
            unint64_t v135 = (unint64_t)v28;
            __int16 v136 = 2114;
            id v29 = v112;
            uint64_t v137 = (uint64_t)v112;
            _os_log_impl(&dword_0, v33, OS_LOG_TYPE_ERROR, "failed to move asset %{public}@ to %{public}@. error=%{public}@", buf, 0x20u);
          }
          else
          {
            id v29 = v112;
          }
          unsigned int v13 = v117;
          goto LABEL_96;
        }
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138543362;
          id v133 = v28;
          _os_log_impl(&dword_0, v33, OS_LOG_TYPE_DEFAULT, "Moved completed asset to %{public}@", buf, 0xCu);
        }

        [v5 setPath:v28];
        goto LABEL_28;
      }
    }
    else
    {
    }
    uint64_t v40 = [v5 path];
    if (!v40
      || (uint32_t v41 = (void *)v40,
          [v5 path],
          id v42 = objc_claimAutoreleasedReturnValue(),
          unsigned __int8 v43 = [v13 fileExistsAtPath:v42],
          v42,
          v41,
          (v43 & 1) != 0))
    {
LABEL_29:
      uint64_t v47 = [v5 assetType];
      uint64_t v48 = [v47 isEqualToString:@"Playlist"];

      dispatch_semaphore_t v23 = +[NSMutableDictionary dictionary];
      unint64_t v24 = +[NSMutableDictionary dictionary];
      uint64_t v49 = +[NSNumber numberWithLongLong:v12];
      [v23 setObject:v49 forKey:MLDatabaseOperationAttributeDownloadedAssetPersistentIdKey];

      id v50 = +[NSNumber numberWithInteger:v48];
      [v23 setObject:v50 forKey:MLDatabaseOperationAttributeDownloadedAssetEntityTypeKey];

      if (v9)
      {
        if (qword_A4C90 != -1) {
          dispatch_once(&qword_A4C90, &stru_9AEF8);
        }
        uint64_t v59 = [v5 clientParams];
        v125[0] = _NSConcreteStackBlock;
        v125[1] = 3221225472;
        void v125[2] = sub_6D48C;
        v125[3] = &unk_9AF20;
        id v60 = v24;
        id v126 = v60;
        [v59 enumerateKeysAndObjectsUsingBlock:v125];
        __int16 v61 = [v5 path];

        if (v61)
        {
          uint64_t v62 = [v5 path];
          [v23 setObject:v62 forKey:MLDatabaseOperationAttributeDownloadedAssetTrackPathKey];
        }
        __int16 v63 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v5 protectionType]);
        [v23 setObject:v63 forKey:MLDatabaseOperationAttributeDownloadedAssetProtectionTypeKey];

        id v64 = [v5 downloadSourceContainerId];
        id v65 = [v64 longLongValue];

        if (v65)
        {
          id v66 = [v5 downloadSourceContainerId];
          [v23 setObject:v66 forKey:MLDatabaseOperationAttributeDownloadSourceContainerIDKey];
        }
        if ([v5 protectionType] != 2)
        {
          long long v67 = [v5 storeInfo];
          long long v68 = [v67 storeMediaResponseItem];

          if (v68) {
            [v60 setObject:&__kCFBooleanTrue forKey:ML3TrackPropertyIsOTAPurchased];
          }
        }

        if ((v9 & 2) == 0)
        {
LABEL_31:
          if ((v9 & 4) == 0) {
            goto LABEL_33;
          }
          goto LABEL_32;
        }
      }
      else if ((v9 & 2) == 0)
      {
        goto LABEL_31;
      }
      long long v69 = +[ATAirlock sharedInstance];
      long long v70 = [v5 storeInfo];
      id v71 = [v70 syncID];
      id v72 = [v69 artworkPathForDataclass:@"Media" artworkIdentifier:v71];

      [v23 setObject:v72 forKey:MLDatabaseOperationAttributeDownloadedAssetArtworkPathKey];
      if ((v9 & 4) == 0)
      {
LABEL_33:
        unsigned int v13 = v117;
        if ((v9 & 8) == 0) {
          goto LABEL_58;
        }
        if ([v5 lyricsEmbeddedInAsset])
        {
          id v55 = [v5 path];

          if (!v55) {
            goto LABEL_58;
          }
          uint64_t v56 = [v5 path];
          [v23 setObject:v56 forKey:MLDatabaseOperationAttributeDownloadedAssetTrackPathKey];

          uint64_t v57 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v5 protectionType]);
          uint64_t v58 = &MLDatabaseOperationAttributeDownloadedAssetProtectionTypeKey;
        }
        else
        {
          id v80 = +[ATAirlock sharedInstance];
          id v81 = [v5 storeInfo];
          id v82 = [v81 syncID];
          uint64_t v57 = [v80 lyricsPathForDataclass:@"Media" lyricsIdentifier:v82];

          unsigned int v13 = v117;
          uint64_t v58 = &MLDatabaseOperationAttributeDownloadedAssetLyricsPathKey;
        }
        [v23 setObject:v57 forKey:*v58];

LABEL_58:
        [v23 setObject:v24 forKey:MLDatabaseOperationAttributeDownloadedAssetTrackPropertiesKey];
        uint64_t v129 = v23;
        v130[0] = MLDatabaseOperationAttributeDownloadedAssetsListKey;
        uint64_t v83 = +[NSArray arrayWithObjects:&v129 count:1];
        v131[0] = v83;
        v130[1] = MLDatabaseOperationAttributeTrackSourceKey;
        uint64_t v84 = +[NSNumber numberWithInt:3];
        v131[1] = v84;
        id v27 = +[NSDictionary dictionaryWithObjects:v131 forKeys:v130 count:2];

        sub_6D504(v27, v116);
        if ((v9 & 2) != 0)
        {
          id v85 = +[ATAirlock sharedInstance];
          CFStringRef v86 = [v5 storeInfo];
          uint64_t v87 = [v86 syncID];
          uint64_t v88 = [v85 artworkPathForDataclass:@"Media" artworkIdentifier:v87];

          unsigned int v13 = v117;
          id v89 = v88;
          unlink((const char *)[v89 fileSystemRepresentation]);

          if ((v9 & 8) == 0)
          {
LABEL_60:
            if ((v9 & 1) == 0) {
              goto LABEL_98;
            }
LABEL_64:
            uint64_t v95 = [v5 storeInfo];
            uint64_t v96 = [v95 DSID];
            id v97 = [v96 unsignedLongLongValue];

            if (v97)
            {
              uint64_t v98 = +[ML3MusicLibrary autoupdatingSharedLibrary];
              id v28 = [v98 accountCacheDatabase];

              uint64_t v99 = [v28 appleIDForDSID:v97];
              if (v99)
              {
                id v29 = (id)v99;
LABEL_97:

                goto LABEL_98;
              }
              id v113 = v24;
              unint64_t v101 = +[ICUserIdentityStore defaultIdentityStore];
              uint64_t v102 = +[NSNumber numberWithUnsignedLongLong:v97];
              CFStringRef v103 = +[ICUserIdentity specificAccountWithDSID:v102];
              id v124 = 0;
              id v33 = [v101 getPropertiesForUserIdentity:v103 error:&v124];
              id v104 = v124;

              if (v104 || !v33)
              {
                id v105 = _ATLogCategoryAssetUtils();
                if (os_log_type_enabled(v105, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)buf = 134218242;
                  id v133 = v97;
                  __int16 v134 = 2114;
                  unint64_t v135 = (unint64_t)v114;
                  _os_log_impl(&dword_0, v105, OS_LOG_TYPE_ERROR, "Failed to get account properties for DSID %lld. err=%{public}@", buf, 0x16u);
                }
              }
              else
              {
                id v105 = [v33 username];
                if (v105)
                {
                  id v106 = [v33 alternateDSID];
                  unsigned __int8 v107 = [v28 setAppleID:v105 altDSID:v106 forDSID:v97];

                  if ((v107 & 1) == 0)
                  {
                    id v108 = _ATLogCategoryAssetUtils();
                    unsigned int v13 = v117;
                    if (os_log_type_enabled(v108, OS_LOG_TYPE_ERROR))
                    {
                      *(_DWORD *)buf = 134217984;
                      id v133 = v97;
                      _os_log_impl(&dword_0, v108, OS_LOG_TYPE_ERROR, "Failed to cache account properties for DSID %lld", buf, 0xCu);
                    }

                    goto LABEL_93;
                  }
                }
              }
              unsigned int v13 = v117;
LABEL_93:

              id v29 = 0;
              unint64_t v24 = v113;
LABEL_96:

              goto LABEL_97;
            }
LABEL_98:

            id v6 = v116;
            uint64_t v10 = v114;
LABEL_99:

            goto LABEL_107;
          }
        }
        else if ((v9 & 8) == 0)
        {
          goto LABEL_60;
        }
        uint64_t v90 = +[ATAirlock sharedInstance];
        id v91 = [v5 storeInfo];
        __int16 v92 = [v91 syncID];
        unsigned int v93 = [v90 lyricsPathForDataclass:@"Media" lyricsIdentifier:v92];

        unsigned int v13 = v117;
        id v94 = v93;
        unlink((const char *)[v94 fileSystemRepresentation]);

        if ((v9 & 1) == 0) {
          goto LABEL_98;
        }
        goto LABEL_64;
      }
LABEL_32:
      id v51 = +[ATAirlock sharedInstance];
      uint64_t v52 = [v5 storeInfo];
      uint64_t v53 = [v52 syncID];
      uint64_t v54 = [v51 geniusPathForDataclass:@"Media" geniusIdentifier:v53];

      [v23 setObject:v54 forKey:MLDatabaseOperationAttributeDownloadedAssetGeniusDataPathKey];
      goto LABEL_33;
    }
    [v115 processCompletedAsset:v5];
    id v44 = [v5 path];
    id v45 = _ATLogCategoryAssetUtils();
    if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
    {
      int64x2_t v46 = +[ML3MusicLibrary mediaFolderPath];
      *(_DWORD *)buf = 138543618;
      id v133 = v46;
      __int16 v134 = 2114;
      unint64_t v135 = (unint64_t)v44;
      _os_log_impl(&dword_0, v45, OS_LOG_TYPE_DEFAULT, "Prepending %{public}@ to %{public}@", buf, 0x16u);
    }
    dispatch_semaphore_t v23 = +[ML3MusicLibrary mediaFolderPathByAppendingPathComponent:v44];

    [v5 setPath:v23];
LABEL_28:

    goto LABEL_29;
  }
  if ([v5 isDownload])
  {
    if (sub_6B248(v10))
    {
      if (v9)
      {
        id v34 = _ATLogCategoryAssetUtils();
        if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138543618;
          id v133 = v5;
          __int16 v134 = 2114;
          unint64_t v135 = (unint64_t)v10;
          _os_log_impl(&dword_0, v34, OS_LOG_TYPE_DEFAULT, "Asset (%{public}@) failed to transfer (%{public}@); error recoverable, keeping track",
            buf,
            0x16u);
        }

        if ([v5 isRetry]) {
          unsigned int v35 = 5;
        }
        else {
          unsigned int v35 = 4;
        }
        char v36 = [v10 domain];
        unsigned int v37 = [v36 isEqualToString:@"ATError"];

        if (v37)
        {
          int v38 = (char *)[v10 code];
          switch((unint64_t)v38)
          {
            case 0x1FuLL:
              uint64_t v39 = 32;
              break;
            case 0x20uLL:
              goto LABEL_102;
            case 0x21uLL:
              uint64_t v39 = 64;
              break;
            case 0x22uLL:
              uint64_t v39 = 16;
              break;
            case 0x23uLL:
              uint64_t v39 = 4;
              break;
            default:
              if (v38 != (unsigned char *)&dword_C + 2) {
                goto LABEL_102;
              }
              uint64_t v39 = 1;
              break;
          }
        }
        else
        {
LABEL_102:
          unsigned int v35 = 5;
          uint64_t v39 = 8;
        }
        id v110 = _ATLogCategoryAssetUtils();
        if (os_log_type_enabled(v110, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138543874;
          id v133 = v5;
          __int16 v134 = 2048;
          unint64_t v135 = v35;
          __int16 v136 = 2048;
          uint64_t v137 = v39;
          _os_log_impl(&dword_0, v110, OS_LOG_TYPE_DEFAULT, "Updating status of track (%{public}@); status=%lu, statusReason=%lu",
            buf,
            0x20u);
        }

        v118[0] = _NSConcreteStackBlock;
        v118[1] = 3221225472;
        v118[2] = sub_6D69C;
        v118[3] = &unk_9AF70;
        unsigned int v123 = v35;
        uint64_t v121 = v39;
        id v122 = v12;
        id v119 = v5;
        id v120 = v6;
        [v120 databaseConnectionAllowingWrites:1 withBlock:v118];
      }
      goto LABEL_106;
    }
    CFStringRef v73 = [v5 storeInfo];
    uint64_t v74 = [v73 syncID];
    id v75 = [v74 longLongValue];

    __int16 v76 = [v5 storeInfo];
    id v77 = [v76 adamID];
    id v78 = [v77 longLongValue];

    if (!v75 || v78)
    {
      if (![v5 isRestore] || (v9 & 1) == 0)
      {
        if (v9)
        {
          id v109 = _ATLogCategoryAssetUtils();
          if (os_log_type_enabled(v109, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138543618;
            id v133 = v5;
            __int16 v134 = 2114;
            unint64_t v135 = (unint64_t)v10;
            _os_log_impl(&dword_0, v109, OS_LOG_TYPE_ERROR, "Asset download failed unrecoverably - marking as canceled. asset=%{public}@, err=%{public}@", buf, 0x16u);
          }

          sub_6D8D4((uint64_t)v12, v6);
        }
        goto LABEL_106;
      }
      id v100 = _ATLogCategoryAssetUtils();
      if (os_log_type_enabled(v100, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543618;
        id v133 = v5;
        __int16 v134 = 2114;
        unint64_t v135 = (unint64_t)v10;
        _os_log_impl(&dword_0, v100, OS_LOG_TYPE_ERROR, "Asset restore failed unrecoverably - removing needs restore. asset=%{public}@, err=%{public}@", buf, 0x16u);
      }

      if (+[ML3Track trackWithPersistentID:v12 existsInLibrary:v6])
      {
        uint64_t v79 = [objc_alloc((Class)ML3Track) initWithPersistentID:v12 inLibrary:v6];
        [v79 setValue:&__kCFBooleanFalse forProperty:ML3TrackPropertyNeedsRestore];
LABEL_75:
      }
    }
    else
    {
      if (!v9 || (v9 & 1) != 0)
      {
        sub_6B428(v5, v6, v10, @"transfer");
        goto LABEL_106;
      }
      if ([v5 isRestore])
      {
        uint64_t v79 = _ATLogCategoryAssetUtils();
        if (os_log_type_enabled(v79, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138543362;
          id v133 = v5;
          _os_log_impl(&dword_0, v79, OS_LOG_TYPE_ERROR, "Could not get artwork/genius data, but keeping asset track: %{public}@", buf, 0xCu);
        }
        goto LABEL_75;
      }
    }
LABEL_106:
    uint64_t v111 = [v5 path];

    if (v111) {
      goto LABEL_107;
    }
    unsigned int v13 = _ATLogCategoryAssetUtils();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      id v133 = v5;
      _os_log_impl(&dword_0, v13, OS_LOG_TYPE_ERROR, "Asset with no path: %{public}@", buf, 0xCu);
    }
    goto LABEL_99;
  }
LABEL_107:
}

void sub_6D48C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if ([(id)qword_A4C98 containsObject:v6]) {
    [*(id *)(a1 + 32) setObject:v5 forKey:v6];
  }
}

id sub_6D504(void *a1, void *a2)
{
  id v3 = a1;
  BOOL v4 = [a2 databasePath];
  id v5 = +[NSMutableDictionary dictionaryWithObject:v4 forKey:MLDatabaseOperationOptionDatabasePathKey];

  id v6 = +[MLMediaLibraryService sharedMediaLibraryService];
  id v13 = 0;
  id v7 = [v6 performDatabaseOperation:7 withAttributes:v3 options:v5 error:&v13];

  id v8 = v13;
  id v9 = _ATLogCategoryAssetUtils();
  uint64_t v10 = v9;
  if (v8)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      unsigned __int8 v11 = objc_msgSend(v8, "msv_description");
      *(_DWORD *)buf = 138543362;
      uint64_t v15 = v11;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_ERROR, "Finished import of downloaded assets. error=%{public}@", buf, 0xCu);
    }
  }
  else if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "Finished import of downloaded assets.", buf, 2u);
  }

  return v7;
}

void sub_6D69C(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 64)];
  v20[0] = v4;
  id v5 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 48)];
  v20[1] = v5;
  id v6 = +[NSNumber numberWithLongLong:*(void *)(a1 + 56)];
  v20[2] = v6;
  id v7 = +[NSArray arrayWithObjects:v20 count:3];
  id v15 = 0;
  unsigned __int8 v8 = [v3 executeUpdate:@"UPDATE item SET keep_local_status = ?, keep_local_status_reason = ? WHERE item_pid = ?", v7, &v15 withParameters error];
  id v9 = v15;

  if (v8)
  {
    sub_6DAD8(v3, *(void **)(a1 + 40));
  }
  else
  {
    uint64_t v10 = _ATLogCategoryAssetUtils();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      unsigned __int8 v11 = [*(id *)(a1 + 32) shortDescription];
      *(_DWORD *)buf = 138543618;
      id v17 = v11;
      __int16 v18 = 2114;
      id v19 = v9;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_ERROR, "failed to update keep_local_status on failed asset %{public}@. err=%{public}@", buf, 0x16u);
    }
  }
  if ((byte_A4CA0 & 1) == 0)
  {
    byte_A4CA0 = 1;
    dispatch_time_t v12 = dispatch_time(0, 1000000000);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_6E0D4;
    v13[3] = &unk_9AF48;
    id v14 = *(id *)(a1 + 40);
    dispatch_after(v12, (dispatch_queue_t)&_dispatch_main_q, v13);
  }
}

void sub_6D8D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = [v3 checkoutWriterConnection];
  if (v4)
  {
    id v5 = +[NSNumber numberWithLongLong:a1];
    dispatch_semaphore_t v23 = v5;
    id v6 = +[NSArray arrayWithObjects:&v23 count:1];
    id v12 = 0;
    unsigned int v7 = [v4 executeUpdate:@"update item set keep_local=-1, keep_local_status=-1 where item_pid=?", v6, &v12 withParameters error];
    id v8 = v12;

    id v9 = _ATLogCategoryAssetUtils();
    uint64_t v10 = v9;
    if (v8)
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        unsigned __int8 v11 = objc_msgSend(v8, "msv_description");
        *(_DWORD *)buf = 67110146;
        int v14 = -1;
        __int16 v15 = 1024;
        int v16 = -1;
        __int16 v17 = 2048;
        uint64_t v18 = a1;
        __int16 v19 = 1024;
        unsigned int v20 = v7;
        __int16 v21 = 2114;
        id v22 = v11;
        _os_log_impl(&dword_0, v10, OS_LOG_TYPE_ERROR, "Updated keep_local:%d, keep_lcoal_status:%d for track:%lld with status:%d error=%{public}@", buf, 0x28u);
      }
    }
    else if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109888;
      int v14 = -1;
      __int16 v15 = 1024;
      int v16 = -1;
      __int16 v17 = 2048;
      uint64_t v18 = a1;
      __int16 v19 = 1024;
      unsigned int v20 = v7;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "Updated keep_local:%d, keep_lcoal_status:%d for track:%lld with status:%d", buf, 0x1Eu);
    }

    [v3 checkInDatabaseConnection:v4];
  }
}

void sub_6DAD8(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = _ATLogCategoryAssetUtils();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "Updating containers' keep local status reason based on tracks' keep local status reason", buf, 2u);
  }

  *(void *)buf = 0;
  uint64_t v53 = buf;
  uint64_t v54 = 0x2020000000;
  char v55 = 1;
  id v6 = objc_alloc_init((Class)NSMutableDictionary);
  unsigned int v7 = [v3 executeQuery:@"SELECT DISTINCT item.keep_local_status_reason, container.container_pid FROM item JOIN container_item USING (item_pid) JOIN container USING (container_pid) WHERE (item.keep_local_status = ? AND container.keep_local > ? AND container.keep_local_status_reason != ?)", &off_9D1F0 withParameters];
  v50[0] = _NSConcreteStackBlock;
  v50[1] = 3221225472;
  v50[2] = sub_6E0F8;
  v50[3] = &unk_9AF98;
  id v8 = v6;
  id v51 = v8;
  [v7 enumerateRowsWithBlock:v50];

  v46[0] = _NSConcreteStackBlock;
  v46[1] = 3221225472;
  v46[2] = sub_6E170;
  v46[3] = &unk_9AFC0;
  uint64_t v49 = buf;
  id v9 = v4;
  id v47 = v9;
  id v10 = v3;
  id v48 = v10;
  [v8 enumerateKeysAndObjectsUsingBlock:v46];
  unsigned __int8 v11 = _ATLogCategoryAssetUtils_Oversize();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    id v12 = [v8 allKeys];
    *(_DWORD *)uint64_t v56 = 138543362;
    uint64_t v57 = v12;
    _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, "Cleared keep local status reason for container pids=%{public}@", v56, 0xCu);
  }
  [v8 removeAllObjects];
  id v13 = [v10 executeQuery:@"SELECT DISTINCT item.keep_local_status_reason, container_pid FROM item JOIN container_item USING (item_pid) JOIN container USING (container_pid) WHERE (item.keep_local_status = ? OR item.keep_local_status = ?) AND container.keep_local > ? AND (container.keep_local_status_reason & item.keep_local_status_reason != item.keep_local_status_reason)", &off_9D208 withParameters];
  v44[0] = _NSConcreteStackBlock;
  v44[1] = 3221225472;
  v44[2] = sub_6E2B4;
  v44[3] = &unk_9AF98;
  id v14 = v8;
  id v45 = v14;
  [v13 enumerateRowsWithBlock:v44];

  v40[0] = _NSConcreteStackBlock;
  v40[1] = 3221225472;
  v40[2] = sub_6E3D4;
  v40[3] = &unk_9AFC0;
  unsigned __int8 v43 = buf;
  id v15 = v9;
  id v41 = v15;
  id v16 = v10;
  id v42 = v16;
  [v14 enumerateKeysAndObjectsUsingBlock:v40];
  id v17 = objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v18 = [v16 executeQuery:@"SELECT item.keep_local_status_reason, album_pid FROM item JOIN album USING (album_pid) WHERE (item.keep_local_status = ? AND album.keep_local > ? AND album.keep_local_status_reason != ?)", &off_9D220 withParameters];
  v38[0] = _NSConcreteStackBlock;
  v38[1] = 3221225472;
  v38[2] = sub_6E518;
  v38[3] = &unk_9AF98;
  id v19 = v17;
  id v39 = v19;
  [v18 enumerateRowsWithBlock:v38];

  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472;
  v34[2] = sub_6E590;
  v34[3] = &unk_9AFC0;
  unsigned int v37 = buf;
  id v20 = v15;
  id v35 = v20;
  id v21 = v16;
  id v36 = v21;
  [v19 enumerateKeysAndObjectsUsingBlock:v34];
  id v22 = _ATLogCategoryAssetUtils_Oversize();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    dispatch_semaphore_t v23 = [v19 allKeys];
    *(_DWORD *)uint64_t v56 = 138543362;
    uint64_t v57 = v23;
    _os_log_impl(&dword_0, v22, OS_LOG_TYPE_DEFAULT, "Cleared keep local status reason for album pids=%{public}@", v56, 0xCu);
  }
  [v19 removeAllObjects];
  unint64_t v24 = [v21 executeQuery:@"SELECT item.keep_local_status_reason, album_pid FROM item JOIN album USING (album_pid) WHERE (item.keep_local_status = ? OR item.keep_local_status = ?) AND album.keep_local > ?", &off_9D238 withParameters];
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_6E6D4;
  v32[3] = &unk_9AF98;
  id v25 = v19;
  id v33 = v25;
  [v24 enumerateRowsWithBlock:v32];

  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472;
  v28[2] = sub_6E7F4;
  v28[3] = &unk_9AFC0;
  unsigned __int8 v31 = buf;
  id v26 = v20;
  id v29 = v26;
  id v27 = v21;
  id v30 = v27;
  [v25 enumerateKeysAndObjectsUsingBlock:v28];

  _Block_object_dispose(buf, 8);
}

void sub_6E090(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

id sub_6E0D4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) notifyNonContentsPropertyDidChange];
  byte_A4CA0 = 0;
  return result;
}

void sub_6E0F8(uint64_t a1, void *a2)
{
  id v3 = [a2 int64ForColumnIndex:1];
  id v4 = *(void **)(a1 + 32);
  id v5 = +[NSNumber numberWithLongLong:v3];
  [v4 setObject:&off_9CCD8 forKey:v5];
}

void sub_6E170(void *a1, void *a2, void *a3)
{
  v12[0] = a3;
  v12[1] = &off_9CCA8;
  id v5 = a3;
  id v6 = a2;
  unsigned int v7 = +[NSArray arrayWithObjects:v12 count:2];
  v11[0] = ML3EntityPropertyKeepLocalStatusReason;
  v11[1] = ML3EntityPropertyKeepLocalStatus;
  id v8 = +[NSArray arrayWithObjects:v11 count:2];
  id v10 = v6;
  id v9 = +[NSArray arrayWithObjects:&v10 count:1];
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) |= +[ML3Container setValues:v7 forProperties:v8 forEntityPersistentIDs:v9 inLibrary:a1[4] usingConnection:a1[5]];
}

void sub_6E2B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [v3 intForColumnIndex:0];
  id v5 = [v3 int64ForColumnIndex:1];

  id v6 = *(void **)(a1 + 32);
  unsigned int v7 = +[NSNumber numberWithLongLong:v5];
  id v8 = [v6 objectForKeyedSubscript:v7];
  unsigned int v9 = [v8 intValue];

  if ((v4 & ~v9) != 0)
  {
    id v12 = +[NSNumber numberWithInt:v9 | v4];
    id v10 = *(void **)(a1 + 32);
    unsigned __int8 v11 = +[NSNumber numberWithLongLong:v5];
    [v10 setObject:v12 forKeyedSubscript:v11];
  }
}

void sub_6E3D4(void *a1, void *a2, void *a3)
{
  v12[0] = a3;
  v12[1] = &off_9CCF0;
  id v5 = a3;
  id v6 = a2;
  unsigned int v7 = +[NSArray arrayWithObjects:v12 count:2];
  v11[0] = ML3EntityPropertyKeepLocalStatusReason;
  v11[1] = ML3EntityPropertyKeepLocalStatus;
  id v8 = +[NSArray arrayWithObjects:v11 count:2];
  id v10 = v6;
  unsigned int v9 = +[NSArray arrayWithObjects:&v10 count:1];
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) |= +[ML3Container setValues:v7 forProperties:v8 forEntityPersistentIDs:v9 inLibrary:a1[4] usingConnection:a1[5]];
}

void sub_6E518(uint64_t a1, void *a2)
{
  id v3 = [a2 int64ForColumnIndex:1];
  unsigned int v4 = *(void **)(a1 + 32);
  id v5 = +[NSNumber numberWithLongLong:v3];
  [v4 setObject:&off_9CCD8 forKey:v5];
}

void sub_6E590(void *a1, void *a2, void *a3)
{
  v12[0] = a3;
  v12[1] = &off_9CCA8;
  id v5 = a3;
  id v6 = a2;
  unsigned int v7 = +[NSArray arrayWithObjects:v12 count:2];
  v11[0] = ML3EntityPropertyKeepLocalStatusReason;
  v11[1] = ML3EntityPropertyKeepLocalStatus;
  id v8 = +[NSArray arrayWithObjects:v11 count:2];
  id v10 = v6;
  unsigned int v9 = +[NSArray arrayWithObjects:&v10 count:1];
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) |= +[ML3Album setValues:v7 forProperties:v8 forEntityPersistentIDs:v9 inLibrary:a1[4] usingConnection:a1[5]];
}

void sub_6E6D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [v3 intForColumnIndex:0];
  id v5 = [v3 int64ForColumnIndex:1];

  id v6 = *(void **)(a1 + 32);
  unsigned int v7 = +[NSNumber numberWithLongLong:v5];
  id v8 = [v6 objectForKeyedSubscript:v7];
  unsigned int v9 = [v8 intValue];

  if ((v4 & ~v9) != 0)
  {
    id v12 = +[NSNumber numberWithInt:v9 | v4];
    id v10 = *(void **)(a1 + 32);
    unsigned __int8 v11 = +[NSNumber numberWithLongLong:v5];
    [v10 setObject:v12 forKeyedSubscript:v11];
  }
}

void sub_6E7F4(void *a1, void *a2, void *a3)
{
  v12[0] = a3;
  v12[1] = &off_9CCF0;
  id v5 = a3;
  id v6 = a2;
  unsigned int v7 = +[NSArray arrayWithObjects:v12 count:2];
  v11[0] = ML3EntityPropertyKeepLocalStatusReason;
  v11[1] = ML3EntityPropertyKeepLocalStatus;
  id v8 = +[NSArray arrayWithObjects:v11 count:2];
  id v10 = v6;
  unsigned int v9 = +[NSArray arrayWithObjects:&v10 count:1];
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) |= +[ML3Album setValues:v7 forProperties:v8 forEntityPersistentIDs:v9 inLibrary:a1[4] usingConnection:a1[5]];
}

void sub_6E938(id a1)
{
  id v3 = +[ML3Track allProperties];
  uint64_t v1 = +[NSSet setWithArray:v3];
  uint64_t v2 = (void *)qword_A4C98;
  qword_A4C98 = v1;
}

void sub_6E9AC(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if ([(id)qword_A4CB0 containsObject:v6]) {
    [*(id *)(a1 + 32) setObject:v5 forKey:v6];
  }
}

void sub_6EA24(id a1)
{
  id v3 = +[ML3Track allProperties];
  uint64_t v1 = +[NSSet setWithArray:v3];
  uint64_t v2 = (void *)qword_A4CB0;
  qword_A4CB0 = v1;
}

uint64_t sub_6EA98(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[ICDeviceInfo currentDeviceInfo];
  if ([v2 isWatch])
  {
    [v1 currentBatteryLevel];
    if (v3 <= 0.8) {
      uint64_t v4 = 20;
    }
    else {
      uint64_t v4 = 30;
    }
  }
  else
  {
    uint64_t v4 = 30;
  }

  return v4;
}

id sub_6EB14(char a1)
{
  uint64_t v2 = +[ICEnvironmentMonitor sharedMonitor];
  double v3 = (char *)[v2 lastKnownNetworkType];
  if (ICEnvironmentNetworkTypeIsCellular())
  {
    uint64_t v4 = +[ICDeviceInfo currentDeviceInfo];
    unsigned int v5 = [v4 isWatch];

    if (v5)
    {
      id v6 = +[ATUserDefaults sharedInstance];
      unsigned int v7 = [v6 minimumNetworkLinkQualityForDownloads];

      id v8 = [v2 currentNetworkLinkQuality];
      unsigned int v9 = [v7 unsignedIntValue];

      if ((unint64_t)v8 < v9)
      {
        id v10 = 0;
        int v11 = 1;
        goto LABEL_8;
      }
    }
    id v10 = (id)sub_6EDBC(a1);
  }
  else
  {
    id v12 = ICBundleIdentifierForSystemApplicationType();
    id v13 = [objc_alloc((Class)ICNetworkConstraints) initWithBundleIdentifier:v12];
    id v10 = [v13 shouldAllowDataForNetworkType:v3];
  }
  int v11 = 0;
LABEL_8:
  id v14 = _ATLogCategoryAssetUtils();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = NSStringFromMLMediaType();
    id v16 = (void *)v15;
    id v17 = "not allowed";
    if (v10) {
      id v17 = "allowed";
    }
    CFStringRef v18 = @"Unknown";
    if ((uint64_t)v3 > 99)
    {
      if ((uint64_t)v3 > 1000)
      {
        if (v3 == &stru_3D8.segname[1])
        {
          CFStringRef v18 = @"Bridged WiFi";
        }
        else if (v3 == (char *)&stru_790.flags)
        {
          CFStringRef v18 = @"Wired Ethernet";
        }
        else if (v3 == (char *)&stru_B98.addr)
        {
          CFStringRef v18 = @"Other";
        }
        goto LABEL_14;
      }
      if (v3 != (char *)&stru_20.flags)
      {
        if (v3 == (char *)&stru_1A8.reserved3)
        {
          CFStringRef v18 = @"Bluetooth";
        }
        else if (v3 == stru_3D8.segname)
        {
          CFStringRef v18 = @"WiFi";
        }
        goto LABEL_14;
      }
    }
    else if ((unint64_t)(v3 - 1) >= 8)
    {
LABEL_14:
      int v20 = 138544386;
      uint64_t v21 = v15;
      __int16 v22 = 2080;
      dispatch_semaphore_t v23 = v17;
      __int16 v24 = 2048;
      id v25 = v3;
      __int16 v26 = 2114;
      CFStringRef v27 = v18;
      __int16 v28 = 1024;
      int v29 = v11;
      _os_log_impl(&dword_0, v14, OS_LOG_TYPE_DEFAULT, "Downloads for media type %{public}@ are %s on the current network: networkType:%ld (%{public}@), isCurrentNetworkLinkQualityTooLow=%{BOOL}u", (uint8_t *)&v20, 0x30u);

      goto LABEL_15;
    }
    CFStringRef v18 = @"Cellular";
    goto LABEL_14;
  }
LABEL_15:

  return v10;
}

BOOL sub_6EDBC(char a1)
{
  if ((a1 & 4) != 0) {
    int v1 = 3;
  }
  else {
    int v1 = a1 & 2;
  }
  uint64_t v2 = +[ICDeviceInfo currentDeviceInfo];
  if (![v2 isWatch])
  {

    goto LABEL_8;
  }
  if (v1)
  {
    BOOL v3 = 0;
LABEL_12:

    goto LABEL_13;
  }
  char v11 = _os_feature_enabled_impl();

  if (v11)
  {
LABEL_8:
    uint64_t v2 = ICBundleIdentifierForSystemApplicationType();
    id v4 = [objc_alloc((Class)ICNetworkConstraints) initWithBundleIdentifier:v2];
    id v5 = [v4 shouldAllowDataForCellularNetworkTypes];
    BOOL v3 = (BOOL)v5;
    if (!v1 && v5) {
      BOOL v3 = CFPreferencesGetAppBooleanValue(@"AllowsCellularDataDownloads", @"com.apple.Music", 0) != 0;
    }

    goto LABEL_12;
  }
  BOOL v3 = 0;
LABEL_13:
  id v6 = _ATLogCategoryAssetUtils();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = NSStringFromMLMediaType();
    id v8 = (void *)v7;
    unsigned int v9 = "not allowed";
    if (v3) {
      unsigned int v9 = "allowed";
    }
    int v12 = 138543618;
    uint64_t v13 = v7;
    __int16 v14 = 2080;
    uint64_t v15 = v9;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "Downloads for media type %{public}@ are %s on cellular data", (uint8_t *)&v12, 0x16u);
  }
  return v3;
}

uint64_t ATGetPhysicalSizeForLogicalSize()
{
  return _ATGetPhysicalSizeForLogicalSize();
}

uint64_t ATIsPendingDownloadError()
{
  return _ATIsPendingDownloadError();
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void)
{
  return _CFNotificationCenterGetDistributedCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return _CFNumberGetValue(number, theType, valuePtr);
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return _CFPreferencesCopyAppValue(key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation)
{
  return _CFStringCreateWithBytes(alloc, bytes, numBytes, encoding, isExternalRepresentation);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return _CGImageDestinationFinalize(idst);
}

uint64_t CacheDeletePurgeSpaceWithInfo()
{
  return _CacheDeletePurgeSpaceWithInfo();
}

uint64_t ICBundleIdentifierForSystemApplicationType()
{
  return _ICBundleIdentifierForSystemApplicationType();
}

uint64_t ICEnvironmentNetworkLinkQualityDescription()
{
  return _ICEnvironmentNetworkLinkQualityDescription();
}

uint64_t ICEnvironmentNetworkTypeIsCellular()
{
  return _ICEnvironmentNetworkTypeIsCellular();
}

uint64_t ICSiriPostDynamiteClientStateChangedNotification()
{
  return _ICSiriPostDynamiteClientStateChangedNotification();
}

uint64_t ICSystemApplicationIsInstalled()
{
  return _ICSystemApplicationIsInstalled();
}

uint64_t ICSystemApplicationTypeForBundleIdentifier()
{
  return _ICSystemApplicationTypeForBundleIdentifier();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t ML3CreateIntegerUUID()
{
  return _ML3CreateIntegerUUID();
}

uint64_t ML3DeleteAssetsAtPaths()
{
  return _ML3DeleteAssetsAtPaths();
}

uint64_t MSVCopySystemBuildVersion()
{
  return _MSVCopySystemBuildVersion();
}

uint64_t MSVDeviceIsWatch()
{
  return _MSVDeviceIsWatch();
}

uint64_t MSVImageUtilitiesCreateDataImageDestination()
{
  return _MSVImageUtilitiesCreateDataImageDestination();
}

uint64_t MSVImageUtilitiesCreateImageSource()
{
  return _MSVImageUtilitiesCreateImageSource();
}

uint64_t MSVImageUtilitiesResizeSourceImageToJPEGDestination()
{
  return _MSVImageUtilitiesResizeSourceImageToJPEGDestination();
}

uint64_t NRWatchOSVersionForRemoteDevice()
{
  return _NRWatchOSVersionForRemoteDevice();
}

uint64_t NSStringFromMLMediaType()
{
  return _NSStringFromMLMediaType();
}

uint64_t _ATLogCategoryAssetUtils()
{
  return __ATLogCategoryAssetUtils();
}

uint64_t _ATLogCategoryAssetUtils_Oversize()
{
  return __ATLogCategoryAssetUtils_Oversize();
}

uint64_t _ATLogCategoryDeviceSync()
{
  return __ATLogCategoryDeviceSync();
}

uint64_t _ATLogCategoryFramework()
{
  return __ATLogCategoryFramework();
}

uint64_t _ATLogCategorySyncBundle()
{
  return __ATLogCategorySyncBundle();
}

uint64_t _ATLogCategorySyncBundle_Oversize()
{
  return __ATLogCategorySyncBundle_Oversize();
}

uint64_t _ATLogCategoryXPC()
{
  return __ATLogCategoryXPC();
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

int *__error(void)
{
  return ___error();
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_barrier_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

char *dlerror(void)
{
  return _dlerror();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

void free(void *a1)
{
}

lldiv_t lldiv(uint64_t a1, uint64_t a2)
{
  lldiv_t v4 = _lldiv(a1, a2);
  uint64_t rem = v4.rem;
  uint64_t quot = v4.quot;
  result.uint64_t rem = rem;
  result.uint64_t quot = quot;
  return result;
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return _mach_msg(msg, option, send_size, rcv_size, rcv_name, timeout, notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
}

mach_port_t mig_get_reply_port(void)
{
  return _mig_get_reply_port();
}

void mig_put_reply_port(mach_port_t reply_port)
{
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return _notify_register_check(name, out_token);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return _notify_set_state(token, state64);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

void objc_moveWeak(id *to, id *from)
{
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_unfair_recursive_lock_lock_with_options()
{
  return _os_unfair_recursive_lock_lock_with_options();
}

uint64_t os_unfair_recursive_lock_unlock()
{
  return _os_unfair_recursive_lock_unlock();
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

int unlink(const char *a1)
{
  return _unlink(a1);
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return _voucher_mach_msg_set(msg);
}

id objc_msgSend_DSID(void *a1, const char *a2, ...)
{
  return [a1 DSID];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return [a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return [a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return [a1 UUIDString];
}

id objc_msgSend__DSIDsForAssets(void *a1, const char *a2, ...)
{
  return [a1 _DSIDsForAssets];
}

id objc_msgSend__collectionPropertiesToFetch(void *a1, const char *a2, ...)
{
  return [a1 _collectionPropertiesToFetch];
}

id objc_msgSend__getPlaylistSyncSettings(void *a1, const char *a2, ...)
{
  return [a1 _getPlaylistSyncSettings];
}

id objc_msgSend__handleNetworkConditionsOrCellularDataPolicyChanged(void *a1, const char *a2, ...)
{
  return [a1 _handleNetworkConditionsOrCellularDataPolicyChanged];
}

id objc_msgSend__hasRelevantChangesToSync(void *a1, const char *a2, ...)
{
  return [a1 _hasRelevantChangesToSync];
}

id objc_msgSend__inMyLibraryPredicate(void *a1, const char *a2, ...)
{
  return [a1 _inMyLibraryPredicate];
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return [a1 _init];
}

id objc_msgSend__library(void *a1, const char *a2, ...)
{
  return [a1 _library];
}

id objc_msgSend__migrateSyncSettings(void *a1, const char *a2, ...)
{
  return [a1 _migrateSyncSettings];
}

id objc_msgSend__observers(void *a1, const char *a2, ...)
{
  return [a1 _observers];
}

id objc_msgSend__processCompletedAssets(void *a1, const char *a2, ...)
{
  return [a1 _processCompletedAssets];
}

id objc_msgSend__processUploadTrackOperations(void *a1, const char *a2, ...)
{
  return [a1 _processUploadTrackOperations];
}

id objc_msgSend__pruneActiveDownloads(void *a1, const char *a2, ...)
{
  return [a1 _pruneActiveDownloads];
}

id objc_msgSend__rebuildCachedPlaylistSettings(void *a1, const char *a2, ...)
{
  return [a1 _rebuildCachedPlaylistSettings];
}

id objc_msgSend__resetLastSyncedVersionForSyncedPlaylist(void *a1, const char *a2, ...)
{
  return [a1 _resetLastSyncedVersionForSyncedPlaylist];
}

id objc_msgSend__searchableKeepLocalCollectionClasses(void *a1, const char *a2, ...)
{
  return [a1 _searchableKeepLocalCollectionClasses];
}

id objc_msgSend__sendUpdatedSettings(void *a1, const char *a2, ...)
{
  return [a1 _sendUpdatedSettings];
}

id objc_msgSend__setAutoEnableCloudLibrary(void *a1, const char *a2, ...)
{
  return [a1 _setAutoEnableCloudLibrary];
}

id objc_msgSend__setPreExistingStoreAccountIds(void *a1, const char *a2, ...)
{
  return [a1 _setPreExistingStoreAccountIds];
}

id objc_msgSend__shouldCancelActiveSessionsForLegacyPairedDevices(void *a1, const char *a2, ...)
{
  return [a1 _shouldCancelActiveSessionsForLegacyPairedDevices];
}

id objc_msgSend__songArtworkSizeVariant(void *a1, const char *a2, ...)
{
  return [a1 _songArtworkSizeVariant];
}

id objc_msgSend__syncPlaylistToCurrentRevision(void *a1, const char *a2, ...)
{
  return [a1 _syncPlaylistToCurrentRevision];
}

id objc_msgSend__syncPlistFiles(void *a1, const char *a2, ...)
{
  return [a1 _syncPlistFiles];
}

id objc_msgSend__syncUpdatedSettingsToPairedDevice(void *a1, const char *a2, ...)
{
  return [a1 _syncUpdatedSettingsToPairedDevice];
}

id objc_msgSend__syncedPlaylistIdInMediaLibrary(void *a1, const char *a2, ...)
{
  return [a1 _syncedPlaylistIdInMediaLibrary];
}

id objc_msgSend__trackPropertiesToFetch(void *a1, const char *a2, ...)
{
  return [a1 _trackPropertiesToFetch];
}

id objc_msgSend__updateSyncPlaylistToCurrentRevision(void *a1, const char *a2, ...)
{
  return [a1 _updateSyncPlaylistToCurrentRevision];
}

id objc_msgSend__validatePlaylistSettings(void *a1, const char *a2, ...)
{
  return [a1 _validatePlaylistSettings];
}

id objc_msgSend__verifySyncPlistFiles(void *a1, const char *a2, ...)
{
  return [a1 _verifySyncPlistFiles];
}

id objc_msgSend_absoluteFilePath(void *a1, const char *a2, ...)
{
  return [a1 absoluteFilePath];
}

id objc_msgSend_accountCacheDatabase(void *a1, const char *a2, ...)
{
  return [a1 accountCacheDatabase];
}

id objc_msgSend_activeAccount(void *a1, const char *a2, ...)
{
  return [a1 activeAccount];
}

id objc_msgSend_adamID(void *a1, const char *a2, ...)
{
  return [a1 adamID];
}

id objc_msgSend_albumsByAlbumArtistDefaultOrderingTerms(void *a1, const char *a2, ...)
{
  return [a1 albumsByAlbumArtistDefaultOrderingTerms];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return [a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return [a1 allObjects];
}

id objc_msgSend_allProperties(void *a1, const char *a2, ...)
{
  return [a1 allProperties];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return [a1 allValues];
}

id objc_msgSend_allowDownloadOnConstrainedNetwork(void *a1, const char *a2, ...)
{
  return [a1 allowDownloadOnConstrainedNetwork];
}

id objc_msgSend_alternateDSID(void *a1, const char *a2, ...)
{
  return [a1 alternateDSID];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return [a1 applicationState];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return [a1 array];
}

id objc_msgSend_assetSyncLimit(void *a1, const char *a2, ...)
{
  return [a1 assetSyncLimit];
}

id objc_msgSend_assetSyncLimitType(void *a1, const char *a2, ...)
{
  return [a1 assetSyncLimitType];
}

id objc_msgSend_assetSyncPlaylistPersistentID(void *a1, const char *a2, ...)
{
  return [a1 assetSyncPlaylistPersistentID];
}

id objc_msgSend_assetSyncType(void *a1, const char *a2, ...)
{
  return [a1 assetSyncType];
}

id objc_msgSend_assetType(void *a1, const char *a2, ...)
{
  return [a1 assetType];
}

id objc_msgSend_automaticDownloads(void *a1, const char *a2, ...)
{
  return [a1 automaticDownloads];
}

id objc_msgSend_autoupdatingSharedLibrary(void *a1, const char *a2, ...)
{
  return [a1 autoupdatingSharedLibrary];
}

id objc_msgSend_autoupdatingSharedLibraryPath(void *a1, const char *a2, ...)
{
  return [a1 autoupdatingSharedLibraryPath];
}

id objc_msgSend_availableArtworkToken(void *a1, const char *a2, ...)
{
  return [a1 availableArtworkToken];
}

id objc_msgSend_beginObservingUpdates(void *a1, const char *a2, ...)
{
  return [a1 beginObservingUpdates];
}

id objc_msgSend_beginTransaction(void *a1, const char *a2, ...)
{
  return [a1 beginTransaction];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return [a1 BOOLValue];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return [a1 bundleIdentifier];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return [a1 bytes];
}

id objc_msgSend_cachingEnabled(void *a1, const char *a2, ...)
{
  return [a1 cachingEnabled];
}

id objc_msgSend_canUseCellularData(void *a1, const char *a2, ...)
{
  return [a1 canUseCellularData];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return [a1 cancel];
}

id objc_msgSend_checkoutReaderConnection(void *a1, const char *a2, ...)
{
  return [a1 checkoutReaderConnection];
}

id objc_msgSend_checkoutWriterConnection(void *a1, const char *a2, ...)
{
  return [a1 checkoutWriterConnection];
}

id objc_msgSend_clearJaliscoAccountID(void *a1, const char *a2, ...)
{
  return [a1 clearJaliscoAccountID];
}

id objc_msgSend_clearSagaClientFeaturesVersion(void *a1, const char *a2, ...)
{
  return [a1 clearSagaClientFeaturesVersion];
}

id objc_msgSend_clearSagaCloudAccountID(void *a1, const char *a2, ...)
{
  return [a1 clearSagaCloudAccountID];
}

id objc_msgSend_clearSagaCloudFavoriteSongAddToLibraryBehavior(void *a1, const char *a2, ...)
{
  return [a1 clearSagaCloudFavoriteSongAddToLibraryBehavior];
}

id objc_msgSend_clearSagaLastUpdatedClientBuildVersion(void *a1, const char *a2, ...)
{
  return [a1 clearSagaLastUpdatedClientBuildVersion];
}

id objc_msgSend_clientParams(void *a1, const char *a2, ...)
{
  return [a1 clientParams];
}

id objc_msgSend_closeFile(void *a1, const char *a2, ...)
{
  return [a1 closeFile];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return [a1 code];
}

id objc_msgSend_command(void *a1, const char *a2, ...)
{
  return [a1 command];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return [a1 copy];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return [a1 count];
}

id objc_msgSend_countOfEntities(void *a1, const char *a2, ...)
{
  return [a1 countOfEntities];
}

id objc_msgSend_currentBatteryLevel(void *a1, const char *a2, ...)
{
  return [a1 currentBatteryLevel];
}

id objc_msgSend_currentDeviceInfo(void *a1, const char *a2, ...)
{
  return [a1 currentDeviceInfo];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return [a1 currentHandler];
}

id objc_msgSend_currentNetworkLinkQuality(void *a1, const char *a2, ...)
{
  return [a1 currentNetworkLinkQuality];
}

id objc_msgSend_currentRevision(void *a1, const char *a2, ...)
{
  return [a1 currentRevision];
}

id objc_msgSend_currentThermalLevel(void *a1, const char *a2, ...)
{
  return [a1 currentThermalLevel];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return [a1 data];
}

id objc_msgSend_dataClass(void *a1, const char *a2, ...)
{
  return [a1 dataClass];
}

id objc_msgSend_databasePath(void *a1, const char *a2, ...)
{
  return [a1 databasePath];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return [a1 date];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return [a1 defaultCenter];
}

id objc_msgSend_defaultIdentityStore(void *a1, const char *a2, ...)
{
  return [a1 defaultIdentityStore];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return [a1 defaultManager];
}

id objc_msgSend_defaultMediaLibrary(void *a1, const char *a2, ...)
{
  return [a1 defaultMediaLibrary];
}

id objc_msgSend_defaultRenderer(void *a1, const char *a2, ...)
{
  return [a1 defaultRenderer];
}

id objc_msgSend_deleteFromLibrary(void *a1, const char *a2, ...)
{
  return [a1 deleteFromLibrary];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return [a1 dictionary];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return [a1 domain];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return [a1 doubleValue];
}

id objc_msgSend_downloadPauseReason(void *a1, const char *a2, ...)
{
  return [a1 downloadPauseReason];
}

id objc_msgSend_downloadSourceContainerId(void *a1, const char *a2, ...)
{
  return [a1 downloadSourceContainerId];
}

id objc_msgSend_downloads(void *a1, const char *a2, ...)
{
  return [a1 downloads];
}

id objc_msgSend_end(void *a1, const char *a2, ...)
{
  return [a1 end];
}

id objc_msgSend_endTransaction(void *a1, const char *a2, ...)
{
  return [a1 endTransaction];
}

id objc_msgSend_endpointInfo(void *a1, const char *a2, ...)
{
  return [a1 endpointInfo];
}

id objc_msgSend_endpointType(void *a1, const char *a2, ...)
{
  return [a1 endpointType];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return [a1 error];
}

id objc_msgSend_existsInLibrary(void *a1, const char *a2, ...)
{
  return [a1 existsInLibrary];
}

id objc_msgSend_fileHandleForReading(void *a1, const char *a2, ...)
{
  return [a1 fileHandleForReading];
}

id objc_msgSend_fileHandleForWriting(void *a1, const char *a2, ...)
{
  return [a1 fileHandleForWriting];
}

id objc_msgSend_fileSize(void *a1, const char *a2, ...)
{
  return [a1 fileSize];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return [a1 fileSystemRepresentation];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return [a1 floatValue];
}

id objc_msgSend_getActivePairedDevice(void *a1, const char *a2, ...)
{
  return [a1 getActivePairedDevice];
}

id objc_msgSend_getCurrentInstallDisposition(void *a1, const char *a2, ...)
{
  return [a1 getCurrentInstallDisposition];
}

id objc_msgSend_hasDownloadingStatusPredicate(void *a1, const char *a2, ...)
{
  return [a1 hasDownloadingStatusPredicate];
}

id objc_msgSend_hasEntities(void *a1, const char *a2, ...)
{
  return [a1 hasEntities];
}

id objc_msgSend_hasPendingDownloadPredicate(void *a1, const char *a2, ...)
{
  return [a1 hasPendingDownloadPredicate];
}

id objc_msgSend_hasTrackDataOrPendingDownloadPredicate(void *a1, const char *a2, ...)
{
  return [a1 hasTrackDataOrPendingDownloadPredicate];
}

id objc_msgSend_hasTrackDataPredicate(void *a1, const char *a2, ...)
{
  return [a1 hasTrackDataPredicate];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return [a1 identifier];
}

id objc_msgSend_incrementAssetCountToSync(void *a1, const char *a2, ...)
{
  return [a1 incrementAssetCountToSync];
}

id objc_msgSend_int64ValueForFirstRowAndColumn(void *a1, const char *a2, ...)
{
  return [a1 int64ValueForFirstRowAndColumn];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return [a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return [a1 integerValue];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return [a1 invalidate];
}

id objc_msgSend_isAuthenticated(void *a1, const char *a2, ...)
{
  return [a1 isAuthenticated];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return [a1 isCancelled];
}

id objc_msgSend_isCharging(void *a1, const char *a2, ...)
{
  return [a1 isCharging];
}

id objc_msgSend_isCurrentNetworkLinkHighQuality(void *a1, const char *a2, ...)
{
  return [a1 isCurrentNetworkLinkHighQuality];
}

id objc_msgSend_isDeviceSetupComplete(void *a1, const char *a2, ...)
{
  return [a1 isDeviceSetupComplete];
}

id objc_msgSend_isDownload(void *a1, const char *a2, ...)
{
  return [a1 isDownload];
}

id objc_msgSend_isDownloadablePredicate(void *a1, const char *a2, ...)
{
  return [a1 isDownloadablePredicate];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return [a1 isEnabled];
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return [a1 isFinished];
}

id objc_msgSend_isForeground(void *a1, const char *a2, ...)
{
  return [a1 isForeground];
}

id objc_msgSend_isInitialized(void *a1, const char *a2, ...)
{
  return [a1 isInitialized];
}

id objc_msgSend_isInstalled(void *a1, const char *a2, ...)
{
  return [a1 isInstalled];
}

id objc_msgSend_isMediaSyncingSupported(void *a1, const char *a2, ...)
{
  return [a1 isMediaSyncingSupported];
}

id objc_msgSend_isNetworkConstrained(void *a1, const char *a2, ...)
{
  return [a1 isNetworkConstrained];
}

id objc_msgSend_isRestore(void *a1, const char *a2, ...)
{
  return [a1 isRestore];
}

id objc_msgSend_isRetry(void *a1, const char *a2, ...)
{
  return [a1 isRetry];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return [a1 isValid];
}

id objc_msgSend_isWatch(void *a1, const char *a2, ...)
{
  return [a1 isWatch];
}

id objc_msgSend_jaliscoAccountID(void *a1, const char *a2, ...)
{
  return [a1 jaliscoAccountID];
}

id objc_msgSend_jaliscoOnDiskDatabaseRevision(void *a1, const char *a2, ...)
{
  return [a1 jaliscoOnDiskDatabaseRevision];
}

id objc_msgSend_keepLocalAndDownloadingButNotDownloadablePredicate(void *a1, const char *a2, ...)
{
  return [a1 keepLocalAndDownloadingButNotDownloadablePredicate];
}

id objc_msgSend_keepLocalAndMissingTrackDataPredicate(void *a1, const char *a2, ...)
{
  return [a1 keepLocalAndMissingTrackDataPredicate];
}

id objc_msgSend_keepLocalCancelledOrDisabledAndIsDownloadingOrPausedPredicate(void *a1, const char *a2, ...)
{
  return [a1 keepLocalCancelledOrDisabledAndIsDownloadingOrPausedPredicate];
}

id objc_msgSend_keepLocalCancelledPredicate(void *a1, const char *a2, ...)
{
  return [a1 keepLocalCancelledPredicate];
}

id objc_msgSend_keepLocalDisabledAndHasTrackDataOrDownloadAndIsRedownloadablePredicate(void *a1, const char *a2, ...)
{
  return [a1 keepLocalDisabledAndHasTrackDataOrDownloadAndIsRedownloadablePredicate];
}

id objc_msgSend_keepLocalDisabledPredicate(void *a1, const char *a2, ...)
{
  return [a1 keepLocalDisabledPredicate];
}

id objc_msgSend_keepLocalEnabledPredicate(void *a1, const char *a2, ...)
{
  return [a1 keepLocalEnabledPredicate];
}

id objc_msgSend_keepLocalEventHandler(void *a1, const char *a2, ...)
{
  return [a1 keepLocalEventHandler];
}

id objc_msgSend_lastFullySentAssetSyncPlaylistPersistentID(void *a1, const char *a2, ...)
{
  return [a1 lastFullySentAssetSyncPlaylistPersistentID];
}

id objc_msgSend_lastFullySentAssetSyncPlaylistVersion(void *a1, const char *a2, ...)
{
  return [a1 lastFullySentAssetSyncPlaylistVersion];
}

id objc_msgSend_lastKnownNetworkType(void *a1, const char *a2, ...)
{
  return [a1 lastKnownNetworkType];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return [a1 lastPathComponent];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return [a1 length];
}

id objc_msgSend_libraryUID(void *a1, const char *a2, ...)
{
  return [a1 libraryUID];
}

id objc_msgSend_limitingProperty(void *a1, const char *a2, ...)
{
  return [a1 limitingProperty];
}

id objc_msgSend_loadMissingArtwork(void *a1, const char *a2, ...)
{
  return [a1 loadMissingArtwork];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return [a1 longLongValue];
}

id objc_msgSend_lyricsEmbeddedInAsset(void *a1, const char *a2, ...)
{
  return [a1 lyricsEmbeddedInAsset];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return [a1 mainBundle];
}

id objc_msgSend_manualDownloads(void *a1, const char *a2, ...)
{
  return [a1 manualDownloads];
}

id objc_msgSend_mediaFolderPath(void *a1, const char *a2, ...)
{
  return [a1 mediaFolderPath];
}

id objc_msgSend_minimumNetworkLinkQualityForDownloads(void *a1, const char *a2, ...)
{
  return [a1 minimumNetworkLinkQualityForDownloads];
}

id objc_msgSend_missingTrackDataPredicate(void *a1, const char *a2, ...)
{
  return [a1 missingTrackDataPredicate];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return [a1 mutableCopy];
}

id objc_msgSend_networkType(void *a1, const char *a2, ...)
{
  return [a1 networkType];
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return [a1 nextObject];
}

id objc_msgSend_notifyContentsDidChange(void *a1, const char *a2, ...)
{
  return [a1 notifyContentsDidChange];
}

id objc_msgSend_notifyDisplayValuesPropertyDidChange(void *a1, const char *a2, ...)
{
  return [a1 notifyDisplayValuesPropertyDidChange];
}

id objc_msgSend_notifyNonContentsPropertyDidChange(void *a1, const char *a2, ...)
{
  return [a1 notifyNonContentsPropertyDidChange];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return [a1 null];
}

id objc_msgSend_originalArtworkDirectory(void *a1, const char *a2, ...)
{
  return [a1 originalArtworkDirectory];
}

id objc_msgSend_originalFileURL(void *a1, const char *a2, ...)
{
  return [a1 originalFileURL];
}

id objc_msgSend_parameters(void *a1, const char *a2, ...)
{
  return [a1 parameters];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return [a1 path];
}

id objc_msgSend_persistentID(void *a1, const char *a2, ...)
{
  return [a1 persistentID];
}

id objc_msgSend_persistentIdentifier(void *a1, const char *a2, ...)
{
  return [a1 persistentIdentifier];
}

id objc_msgSend_powerRequired(void *a1, const char *a2, ...)
{
  return [a1 powerRequired];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return [a1 processIdentifier];
}

id objc_msgSend_protectionType(void *a1, const char *a2, ...)
{
  return [a1 protectionType];
}

id objc_msgSend_reconnectToDatabase(void *a1, const char *a2, ...)
{
  return [a1 reconnectToDatabase];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return [a1 removeAllObjects];
}

id objc_msgSend_removeTombstonesForDeletedItems(void *a1, const char *a2, ...)
{
  return [a1 removeTombstonesForDeletedItems];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return [a1 resume];
}

id objc_msgSend_revisionTrackingCode(void *a1, const char *a2, ...)
{
  return [a1 revisionTrackingCode];
}

id objc_msgSend_sagaAccountID(void *a1, const char *a2, ...)
{
  return [a1 sagaAccountID];
}

id objc_msgSend_sagaClientFeaturesVersion(void *a1, const char *a2, ...)
{
  return [a1 sagaClientFeaturesVersion];
}

id objc_msgSend_sagaCloudFavoriteSongAddToLibraryBehavior(void *a1, const char *a2, ...)
{
  return [a1 sagaCloudFavoriteSongAddToLibraryBehavior];
}

id objc_msgSend_sagaDatabaseUserVersion(void *a1, const char *a2, ...)
{
  return [a1 sagaDatabaseUserVersion];
}

id objc_msgSend_sagaID(void *a1, const char *a2, ...)
{
  return [a1 sagaID];
}

id objc_msgSend_sagaOnDiskDatabaseRevision(void *a1, const char *a2, ...)
{
  return [a1 sagaOnDiskDatabaseRevision];
}

id objc_msgSend_sessionTypeIdentifier(void *a1, const char *a2, ...)
{
  return [a1 sessionTypeIdentifier];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return [a1 set];
}

id objc_msgSend_sharedBagProvider(void *a1, const char *a2, ...)
{
  return [a1 sharedBagProvider];
}

id objc_msgSend_sharedCloudController(void *a1, const char *a2, ...)
{
  return [a1 sharedCloudController];
}

id objc_msgSend_sharedDefaults(void *a1, const char *a2, ...)
{
  return [a1 sharedDefaults];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return [a1 sharedInstance];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return [a1 sharedManager];
}

id objc_msgSend_sharedMediaLibraryService(void *a1, const char *a2, ...)
{
  return [a1 sharedMediaLibraryService];
}

id objc_msgSend_sharedMonitor(void *a1, const char *a2, ...)
{
  return [a1 sharedMonitor];
}

id objc_msgSend_sharedSynchronizer(void *a1, const char *a2, ...)
{
  return [a1 sharedSynchronizer];
}

id objc_msgSend_shortDescription(void *a1, const char *a2, ...)
{
  return [a1 shortDescription];
}

id objc_msgSend_shouldAllowDataForCellularNetworkTypes(void *a1, const char *a2, ...)
{
  return [a1 shouldAllowDataForCellularNetworkTypes];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return [a1 start];
}

id objc_msgSend_startKeepLocalHandler(void *a1, const char *a2, ...)
{
  return [a1 startKeepLocalHandler];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return [a1 stop];
}

id objc_msgSend_stopKeepLocalHandler(void *a1, const char *a2, ...)
{
  return [a1 stopKeepLocalHandler];
}

id objc_msgSend_storageSpaceAvailable(void *a1, const char *a2, ...)
{
  return [a1 storageSpaceAvailable];
}

id objc_msgSend_storeInfo(void *a1, const char *a2, ...)
{
  return [a1 storeInfo];
}

id objc_msgSend_storeMediaResponseItem(void *a1, const char *a2, ...)
{
  return [a1 storeMediaResponseItem];
}

id objc_msgSend_storefrontIdentifier(void *a1, const char *a2, ...)
{
  return [a1 storefrontIdentifier];
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return [a1 stringValue];
}

id objc_msgSend_subscriptionID(void *a1, const char *a2, ...)
{
  return [a1 subscriptionID];
}

id objc_msgSend_syncID(void *a1, const char *a2, ...)
{
  return [a1 syncID];
}

id objc_msgSend_syncLibraryID(void *a1, const char *a2, ...)
{
  return [a1 syncLibraryID];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_totalBytes(void *a1, const char *a2, ...)
{
  return [a1 totalBytes];
}

id objc_msgSend_totalSizeOfAutomaticDownloads(void *a1, const char *a2, ...)
{
  return [a1 totalSizeOfAutomaticDownloads];
}

id objc_msgSend_totalSizeOfManualDownloads(void *a1, const char *a2, ...)
{
  return [a1 totalSizeOfManualDownloads];
}

id objc_msgSend_trackForeignPersistentID(void *a1, const char *a2, ...)
{
  return [a1 trackForeignPersistentID];
}

id objc_msgSend_trackProperties(void *a1, const char *a2, ...)
{
  return [a1 trackProperties];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedIntegerValue];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedLongLongValue];
}

id objc_msgSend_unsignedLongValue(void *a1, const char *a2, ...)
{
  return [a1 unsignedLongValue];
}

id objc_msgSend_updateTrackIntegrity(void *a1, const char *a2, ...)
{
  return [a1 updateTrackIntegrity];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return [a1 userInfo];
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return [a1 username];
}

id objc_msgSend_variantOptions(void *a1, const char *a2, ...)
{
  return [a1 variantOptions];
}

id objc_msgSend_waitToFinish(void *a1, const char *a2, ...)
{
  return [a1 waitToFinish];
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return [a1 weakObjectsHashTable];
}