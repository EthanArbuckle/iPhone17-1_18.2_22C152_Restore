uint64_t ProResSWDecoderRegister()
{
  BOOL v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int v4;
  CFDictionaryRef v5;
  IcpUtility *MatchingService;
  NSObject *v7;
  const char *v8;
  uint8_t *v9;
  uint8_t v10[15];
  Boolean keyExistsAndHasValidFormat;
  __int16 v12;
  uint8_t buf[2];

  v0 = 1;
  v1 = MGGetProductType();
  if (v1 > 2236272847)
  {
    if (v1 > 3196158496)
    {
      if (v1 > 3636345304)
      {
        if (v1 == 3636345305 || v1 == 3801472101) {
          goto LABEL_33;
        }
        v2 = 3863625342;
      }
      else
      {
        if (v1 == 3196158497 || v1 == 3540156652) {
          goto LABEL_33;
        }
        v2 = 3599094683;
      }
    }
    else if (v1 > 2644487443)
    {
      if (v1 == 2644487444 || v1 == 3054476161) {
        goto LABEL_33;
      }
      v2 = 3101941570;
    }
    else
    {
      if (v1 == 2236272848 || v1 == 2458172802) {
        goto LABEL_33;
      }
      v2 = 2628394914;
    }
  }
  else if (v1 > 1373516432)
  {
    if (v1 > 2001966016)
    {
      if (v1 == 2001966017 || v1 == 2023824667) {
        goto LABEL_33;
      }
      v2 = 2103978418;
    }
    else
    {
      if (v1 == 1373516433 || v1 == 1834147427) {
        goto LABEL_33;
      }
      v2 = 1868379043;
    }
  }
  else if (v1 > 851437780)
  {
    if (v1 == 851437781 || v1 == 1293446025) {
      goto LABEL_33;
    }
    v2 = 1353145733;
  }
  else
  {
    if (v1 == 341800273 || v1 == 574536383) {
      goto LABEL_33;
    }
    v2 = 746003606;
  }
  if (v1 != v2)
  {
    v5 = IOServiceMatching("AppleProResHW");
    if (v5)
    {
      MatchingService = (IcpUtility *)IOServiceGetMatchingService(*MEMORY[0x263F0EC88], v5);
      if (MatchingService)
      {
        IOObjectRelease((io_object_t)MatchingService);
        goto LABEL_33;
      }
      if ((int)IcpUtility::logLevel(MatchingService) < 1
        || !os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_DEFAULT))
      {
        goto LABEL_52;
      }
      *(_WORD *)buf = 0;
      v7 = &_os_log_internal;
      v8 = "IOServiceGetMatchingService failed";
      v9 = buf;
    }
    else
    {
      if ((int)IcpUtility::logLevel(0) < 1 || !os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_DEFAULT))
      {
LABEL_52:
        if (!MGGetSInt32Answer()) {
          v0 = isTupaiH17A();
        }
        goto LABEL_33;
      }
      v12 = 0;
      v7 = &_os_log_internal;
      v8 = "IOServiceMatching failed";
      v9 = (uint8_t *)&v12;
    }
    _os_log_impl(&dword_262C88000, v7, OS_LOG_TYPE_DEFAULT, v8, v9, 2u);
    goto LABEL_52;
  }
LABEL_33:
  keyExistsAndHasValidFormat = 0;
  result = CFPreferencesGetAppBooleanValue(@"enableProResSWDecoder", @"com.apple.coremedia", &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    v4 = result;
  }
  else {
    v4 = v0;
  }
  if (v4)
  {
    if ((int)IcpUtility::logLevel((IcpUtility *)result) >= 1
      && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_262C88000, &_os_log_internal, OS_LOG_TYPE_DEFAULT, "Registering ProRes SW Decoder...", v10, 2u);
    }
    VTRegisterVideoDecoderWithInfo();
    VTRegisterVideoDecoderWithInfo();
    VTRegisterVideoDecoderWithInfo();
    VTRegisterVideoDecoderWithInfo();
    VTRegisterVideoDecoderWithInfo();
    VTRegisterVideoDecoderWithInfo();
    VTRegisterVideoDecoderWithInfo();
    return VTRegisterVideoDecoderWithInfo();
  }
  return result;
}

uint64_t IcpUtility::logLevel(IcpUtility *this)
{
  if (IcpUtility::logLevel(void)::pred != -1) {
    dispatch_once(&IcpUtility::logLevel(void)::pred, &__block_literal_global_4);
  }
  return IcpUtility::logLevel(void)::s_logLevel;
}

CFIndex ___ZN10IcpUtility8logLevelEv_block_invoke()
{
  Boolean keyExistsAndHasValidFormat = 0;
  CFIndex result = CFPreferencesGetAppIntegerValue(@"IcpLogLevel", (CFStringRef)*MEMORY[0x263EFFE60], &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    IcpUtility::logLevel(void)::s_logLevel = result;
  }
  return result;
}

void PreFaultedCVPixelBufferPool::PreFaultedCVPixelBufferPool(PreFaultedCVPixelBufferPool *this, __CVPixelBufferPool *a2, uint64_t a3)
{
  *(void *)this = a2;
  *((void *)this + 1) = a3;
  *((_WORD *)this + 8) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  if (!a2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Null CVPixelBufferPoolRef");
    goto LABEL_23;
  }
  if (!a3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Pool capacity must be greater than 0");
LABEL_23:
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_2655BBBC0, MEMORY[0x263F8C080]);
  }
  if (qword_26A9962F8 == -1)
  {
    if (_MergedGlobals_0) {
      goto LABEL_5;
    }
LABEL_20:
    v22 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x263E5FAE0](v22, "Unable to determine virtual memory page size");
    __cxa_throw(v22, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
  }
  dispatch_once(&qword_26A9962F8, &__block_literal_global_9);
  if (!_MergedGlobals_0) {
    goto LABEL_20;
  }
LABEL_5:
  int v4 = pthread_mutex_init((pthread_mutex_t *)((char *)this + 48), 0);
  int v5 = pthread_cond_init((pthread_cond_t *)((char *)this + 112), 0);
  if (v4 | v5)
  {
    if (!v5) {
      pthread_cond_destroy((pthread_cond_t *)((char *)this + 112));
    }
    if (!v4) {
      pthread_mutex_destroy((pthread_mutex_t *)((char *)this + 48));
    }
    v24 = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x263E5FAE0](v24, "Unable to initialize mutex/condition variable");
    __cxa_throw(v24, MEMORY[0x263F8C1F0], MEMORY[0x263F8C070]);
  }
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 48));
  CVPixelBufferPoolRetain(*(CVPixelBufferPoolRef *)this);
  unint64_t v6 = *((void *)this + 1);
  v7 = (unsigned char *)*((void *)this + 3);
  if (v6 > (uint64_t)(*((void *)this + 5) - (void)v7) >> 3)
  {
    if (v6 >> 61) {
      std::vector<__CVBuffer *>::__throw_length_error[abi:ne180100]();
    }
    v8 = (unsigned char *)*((void *)this + 4);
    v9 = (char *)operator new(8 * v6);
    uint64_t v10 = v8 - v7;
    v11 = &v9[(v8 - v7) & 0xFFFFFFFFFFFFFFF8];
    v12 = v11;
    if (v8 == v7) {
      goto LABEL_16;
    }
    if ((unint64_t)(v10 - 8) >= 0x58)
    {
      v12 = &v9[(v8 - v7) & 0xFFFFFFFFFFFFFFF8];
      if ((unint64_t)(v8 - &v9[v10 & 0xFFFFFFFFFFFFFFF8]) >= 0x20)
      {
        uint64_t v13 = v10 >> 3;
        unint64_t v14 = ((unint64_t)(v10 - 8) >> 3) + 1;
        uint64_t v15 = 8 * (v14 & 0x3FFFFFFFFFFFFFFCLL);
        v16 = &v8[-v15];
        v12 = &v11[-v15];
        v17 = &v9[8 * v13 - 16];
        v18 = (long long *)(v8 - 16);
        uint64_t v19 = v14 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v20 = *v18;
          *((_OWORD *)v17 - 1) = *(v18 - 1);
          *(_OWORD *)v17 = v20;
          v17 -= 32;
          v18 -= 2;
          v19 -= 4;
        }
        while (v19);
        v8 = v16;
        if (v14 == (v14 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_16:
          *((void *)this + 3) = v12;
          *((void *)this + 4) = v11;
          *((void *)this + 5) = &v9[8 * v6];
          if (v7) {
            operator delete(v7);
          }
          goto LABEL_18;
        }
      }
    }
    else
    {
      v12 = &v9[(v8 - v7) & 0xFFFFFFFFFFFFFFF8];
    }
    do
    {
      uint64_t v21 = *((void *)v8 - 1);
      v8 -= 8;
      *((void *)v12 - 1) = v21;
      v12 -= 8;
    }
    while (v8 != v7);
    goto LABEL_16;
  }
LABEL_18:
  *((void *)this + 20) = dispatch_queue_create((const char *)PreFaultedCVPixelBufferPool::fillQueueName, 0);
  *((unsigned char *)this + 16) = 1;
  pthread_mutex_unlock((pthread_mutex_t *)((char *)this + 48));
  dispatch_async_f(*((dispatch_queue_t *)this + 20), this, (dispatch_function_t)PreFaultedCVPixelBufferPool::fillPool);
}

void sub_262C8A144(_Unwind_Exception *a1)
{
  __cxa_free_exception(v3);
  int v5 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 32) = v5;
    operator delete(v5);
  }
  _Unwind_Resume(a1);
}

uint64_t PreFaultedCVPixelBufferPool::fillPool(PreFaultedCVPixelBufferPool *this, void *a2)
{
  v3 = (pthread_mutex_t *)((char *)this + 48);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 48));
  v40 = (char **)((char *)this + 24);
  while (*((void *)this + 1) > (unint64_t)((uint64_t)(*((void *)this + 4) - *((void *)this + 3)) >> 3))
  {
    if (*((unsigned char *)this + 17)) {
      break;
    }
    pthread_mutex_unlock(v3);
    CVPixelBufferRef pixelBufferOut = 0;
    CVReturn v5 = CVPixelBufferPoolCreatePixelBuffer(0, *(CVPixelBufferPoolRef *)this, &pixelBufferOut);
    if (v5) {
      BOOL v6 = 1;
    }
    else {
      BOOL v6 = pixelBufferOut == 0;
    }
    if (v6)
    {
LABEL_27:
      if (!v5) {
        goto LABEL_30;
      }
      v8 = pixelBufferOut;
    }
    else
    {
      CVReturn v7 = CVPixelBufferLockBaseAddress(pixelBufferOut, 0);
      v8 = pixelBufferOut;
      if (!v7)
      {
        int PlaneCount = CVPixelBufferGetPlaneCount(pixelBufferOut);
        int v10 = PlaneCount;
        size_t v11 = 0;
        if (PlaneCount <= 1) {
          uint64_t v12 = 1;
        }
        else {
          uint64_t v12 = PlaneCount;
        }
        while (1)
        {
          if (v10)
          {
            BaseAddressOfPlane = CVPixelBufferGetBaseAddressOfPlane(pixelBufferOut, v11);
            size_t HeightOfPlane = CVPixelBufferGetHeightOfPlane(pixelBufferOut, v11);
            size_t v15 = CVPixelBufferGetBytesPerRowOfPlane(pixelBufferOut, v11) * HeightOfPlane;
            if (qword_26A9962F8 == -1) {
              goto LABEL_18;
            }
          }
          else
          {
            BaseAddressOfPlane = CVPixelBufferGetBaseAddress(pixelBufferOut);
            size_t Height = CVPixelBufferGetHeight(pixelBufferOut);
            size_t v15 = CVPixelBufferGetBytesPerRow(pixelBufferOut) * Height;
            if (qword_26A9962F8 == -1)
            {
LABEL_18:
              unint64_t v16 = _MergedGlobals_0;
              if (_MergedGlobals_0) {
                goto LABEL_19;
              }
              goto LABEL_15;
            }
          }
          dispatch_once(&qword_26A9962F8, &__block_literal_global_9);
          unint64_t v16 = _MergedGlobals_0;
          if (_MergedGlobals_0)
          {
LABEL_19:
            if (!__CFADD__(v16, v15 - 1))
            {
              v17 = BaseAddressOfPlane;
              unint64_t v18 = (v16 + v15 - 1) / v16;
              do
              {
                unsigned char *v17 = 0;
                v17 += v16;
                --v18;
              }
              while (v18);
            }
            BaseAddressOfPlane[v15 - 1] = 0;
          }
LABEL_15:
          if (++v11 == v12)
          {
            CVReturn v5 = CVPixelBufferUnlockBaseAddress(pixelBufferOut, 0);
            goto LABEL_27;
          }
        }
      }
    }
    CVPixelBufferRelease(v8);
    CVPixelBufferRef pixelBufferOut = 0;
LABEL_30:
    pthread_mutex_lock(v3);
    uint64_t v21 = (char *)*((void *)this + 4);
    unint64_t v20 = *((void *)this + 5);
    if ((unint64_t)v21 >= v20)
    {
      v22 = *v40;
      uint64_t v23 = v21 - *v40;
      uint64_t v24 = v23 >> 3;
      unint64_t v25 = (v23 >> 3) + 1;
      if (v25 >> 61) {
        std::vector<__CVBuffer *>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v26 = v20 - (void)v22;
      if (v26 >> 2 > v25) {
        unint64_t v25 = v26 >> 2;
      }
      if ((unint64_t)v26 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v27 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v27 = v25;
      }
      if (v27)
      {
        if (v27 >> 61) {
          std::__throw_bad_array_new_length[abi:ne180100]();
        }
        v28 = operator new(8 * v27);
        v29 = (CVPixelBufferRef *)&v28[8 * v24];
        CVPixelBufferRef *v29 = pixelBufferOut;
        uint64_t v4 = (uint64_t)(v29 + 1);
        if (v21 == v22) {
          goto LABEL_49;
        }
LABEL_42:
        unint64_t v30 = v21 - 8 - v22;
        if (v30 < 0x58) {
          goto LABEL_56;
        }
        if ((unint64_t)(v21 - &v28[v23]) < 0x20) {
          goto LABEL_56;
        }
        uint64_t v31 = (v30 >> 3) + 1;
        uint64_t v32 = 8 * (v31 & 0x3FFFFFFFFFFFFFFCLL);
        v33 = &v21[-v32];
        v29 = (CVPixelBufferRef *)((char *)v29 - v32);
        v34 = &v28[8 * v24 - 16];
        v35 = v21 - 16;
        uint64_t v36 = v31 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v37 = *(_OWORD *)v35;
          *(v34 - 1) = *((_OWORD *)v35 - 1);
          _OWORD *v34 = v37;
          v34 -= 2;
          v35 -= 32;
          v36 -= 4;
        }
        while (v36);
        uint64_t v21 = v33;
        if (v31 != (v31 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_56:
          do
          {
            v38 = (__CVBuffer *)*((void *)v21 - 1);
            v21 -= 8;
            *--v29 = v38;
          }
          while (v21 != v22);
        }
        uint64_t v21 = *v40;
      }
      else
      {
        v28 = 0;
        v29 = (CVPixelBufferRef *)(8 * v24);
        *(void *)(8 * v24) = pixelBufferOut;
        uint64_t v4 = 8 * v24 + 8;
        if (v21 != v22) {
          goto LABEL_42;
        }
      }
LABEL_49:
      *((void *)this + 3) = v29;
      *((void *)this + 4) = v4;
      *((void *)this + 5) = &v28[8 * v27];
      if (v21) {
        operator delete(v21);
      }
      goto LABEL_4;
    }
    *(void *)uint64_t v21 = pixelBufferOut;
    uint64_t v4 = (uint64_t)(v21 + 8);
LABEL_4:
    *((void *)this + 4) = v4;
    pthread_cond_signal((pthread_cond_t *)((char *)this + 112));
  }
  *((unsigned char *)this + 16) = 0;
  return pthread_mutex_unlock(v3);
}

void PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(PreFaultedCVPixelBufferPool *this)
{
  v2 = (pthread_mutex_t *)((char *)this + 48);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 48));
  *((unsigned char *)this + 17) = 1;
  pthread_mutex_unlock(v2);
  dispatch_sync(*((dispatch_queue_t *)this + 20), &__block_literal_global);
  pthread_mutex_lock(v2);
  uint64_t v3 = *((void *)this + 4);
  if (v3 != *((void *)this + 3))
  {
    do
    {
      CVPixelBufferRelease(*(CVPixelBufferRef *)(v3 - 8));
      uint64_t v4 = *((void *)this + 3);
      uint64_t v3 = *((void *)this + 4) - 8;
      *((void *)this + 4) = v3;
    }
    while (v3 != v4);
  }
  pthread_mutex_unlock(v2);
  dispatch_release(*((dispatch_object_t *)this + 20));
  CVPixelBufferPoolRelease(*(CVPixelBufferPoolRef *)this);
  pthread_cond_destroy((pthread_cond_t *)((char *)this + 112));
  pthread_mutex_destroy(v2);
  CVReturn v5 = (void *)*((void *)this + 3);
  if (v5)
  {
    *((void *)this + 4) = v5;
    operator delete(v5);
  }
}

void __clang_call_terminate(void *a1)
{
}

uint64_t PreFaultedCVPixelBufferPool::newCVPixelBuffer(PreFaultedCVPixelBufferPool *this)
{
  v2 = (pthread_mutex_t *)((char *)this + 48);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 48));
  uint64_t v4 = *((void *)this + 3);
  for (uint64_t i = *((void *)this + 4); i == v4; uint64_t i = *((void *)this + 4))
  {
    pthread_cond_wait((pthread_cond_t *)((char *)this + 112), v2);
    uint64_t v4 = *((void *)this + 3);
  }
  uint64_t v7 = *(void *)(i - 8);
  uint64_t v5 = i - 8;
  uint64_t v6 = v7;
  *((void *)this + 4) = v5;
  if (*((unsigned char *)this + 16) || *((void *)this + 1) <= (unint64_t)((v5 - v4) >> 3))
  {
    pthread_mutex_unlock(v2);
    return v6;
  }
  else
  {
    *((unsigned char *)this + 16) = 1;
    pthread_mutex_unlock(v2);
    dispatch_async_f(*((dispatch_queue_t *)this + 20), this, (dispatch_function_t)PreFaultedCVPixelBufferPool::fillPool);
    return v6;
  }
}

BOOL PreFaultedCVPixelBufferPool::setCapacity(PreFaultedCVPixelBufferPool *this, unint64_t a2)
{
  if (!a2) {
    return a2 != 0;
  }
  uint64_t v4 = (pthread_mutex_t *)((char *)this + 48);
  pthread_mutex_lock((pthread_mutex_t *)((char *)this + 48));
  uint64_t v5 = (unsigned char *)*((void *)this + 3);
  *((void *)this + 1) = a2;
  if (a2 > (uint64_t)(*((void *)this + 5) - (void)v5) >> 3)
  {
    if (a2 >> 61) {
      std::vector<__CVBuffer *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v6 = (unsigned char *)*((void *)this + 4);
    uint64_t v7 = (char *)operator new(8 * a2);
    uint64_t v8 = v6 - v5;
    v9 = &v7[(v6 - v5) & 0xFFFFFFFFFFFFFFF8];
    int v10 = v9;
    if (v6 == v5) {
      goto LABEL_12;
    }
    if ((unint64_t)(v8 - 8) >= 0x58)
    {
      int v10 = &v7[(v6 - v5) & 0xFFFFFFFFFFFFFFF8];
      if (v6 - v7 - (v8 & 0xFFFFFFFFFFFFFFF8) >= 0x20)
      {
        uint64_t v11 = v8 >> 3;
        unint64_t v12 = ((unint64_t)(v8 - 8) >> 3) + 1;
        uint64_t v13 = 8 * (v12 & 0x3FFFFFFFFFFFFFFCLL);
        unint64_t v14 = &v6[-v13];
        int v10 = &v9[-v13];
        size_t v15 = &v7[8 * v11 - 16];
        unint64_t v16 = (long long *)(v6 - 16);
        uint64_t v17 = v12 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v18 = *v16;
          *((_OWORD *)v15 - 1) = *(v16 - 1);
          *(_OWORD *)size_t v15 = v18;
          v15 -= 32;
          v16 -= 2;
          v17 -= 4;
        }
        while (v17);
        uint64_t v6 = v14;
        if (v12 == (v12 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_12:
          *((void *)this + 3) = v10;
          *((void *)this + 4) = v9;
          *((void *)this + 5) = &v7[8 * a2];
          if (v5) {
            operator delete(v5);
          }
          goto LABEL_14;
        }
      }
    }
    else
    {
      int v10 = &v7[(v6 - v5) & 0xFFFFFFFFFFFFFFF8];
    }
    do
    {
      uint64_t v19 = *((void *)v6 - 1);
      v6 -= 8;
      *((void *)v10 - 1) = v19;
      v10 -= 8;
    }
    while (v6 != v5);
    goto LABEL_12;
  }
LABEL_14:
  if (*((unsigned char *)this + 16)
    || *((void *)this + 1) <= (unint64_t)((uint64_t)(*((void *)this + 4) - *((void *)this + 3)) >> 3))
  {
    pthread_mutex_unlock(v4);
  }
  else
  {
    *((unsigned char *)this + 16) = 1;
    pthread_mutex_unlock(v4);
    dispatch_async_f(*((dispatch_queue_t *)this + 20), this, (dispatch_function_t)PreFaultedCVPixelBufferPool::fillPool);
  }
  return a2 != 0;
}

uint64_t ___ZL13getVMPageSizev_block_invoke()
{
  int v3 = 0;
  size_t v2 = 4;
  uint64_t result = sysctlbyname("hw.pagesize", &v3, &v2, 0, 0);
  if (!result && v2 == 4 && v3 >= 1) {
    _MergedGlobals_0 = v3;
  }
  return result;
}

void std::vector<__CVBuffer *>::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_2655BBBB0, MEMORY[0x263F8C060]);
}

void sub_262C8A8D4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x263F8C208], MEMORY[0x263F8C090]);
}

void MemoryBufferCache::MemoryBufferCache(MemoryBufferCache *this, int a2)
{
  dispatch_semaphore_t v3 = 0;
  *(void *)this = &unk_270E0FC20;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (a2) {
    dispatch_semaphore_t v3 = dispatch_semaphore_create(1);
  }
  *((void *)this + 4) = v3;
}

void MemoryBufferCache::~MemoryBufferCache(MemoryBufferCache *this)
{
  *(void *)this = &unk_270E0FC20;
  size_t v2 = *((void *)this + 4);
  if (v2) {
    dispatch_release(v2);
  }
  uint64_t v4 = (void *)*((void *)this + 1);
  dispatch_semaphore_t v3 = (void *)*((void *)this + 2);
  if (v4 == v3)
  {
    if (!v4) {
      return;
    }
    goto LABEL_5;
  }
  do
  {
    if (*v4)
    {
      MEMORY[0x263E5FB20](*v4, 0x1000C8077774924);
      dispatch_semaphore_t v3 = (void *)*((void *)this + 2);
    }
    v4 += 2;
  }
  while (v4 != v3);
  uint64_t v4 = (void *)*((void *)this + 1);
  if (v4)
  {
LABEL_5:
    *((void *)this + 2) = v4;
    operator delete(v4);
  }
}

{
  NSObject *v2;
  void *v3;
  void *v4;
  uint64_t vars8;

  *(void *)this = &unk_270E0FC20;
  size_t v2 = *((void *)this + 4);
  if (v2) {
    dispatch_release(v2);
  }
  uint64_t v4 = (void *)*((void *)this + 1);
  dispatch_semaphore_t v3 = (void *)*((void *)this + 2);
  if (v4 == v3)
  {
    if (!v4) {
      goto LABEL_6;
    }
  }
  else
  {
    do
    {
      if (*v4)
      {
        MEMORY[0x263E5FB20](*v4, 0x1000C8077774924);
        dispatch_semaphore_t v3 = (void *)*((void *)this + 2);
      }
      v4 += 2;
    }
    while (v4 != v3);
    uint64_t v4 = (void *)*((void *)this + 1);
    if (!v4)
    {
LABEL_6:
      JUMPOUT(0x263E5FB40);
    }
  }
  *((void *)this + 2) = v4;
  operator delete(v4);
  goto LABEL_6;
}

uint64_t MemoryBufferCache::obtainMemoryBuffer(MemoryBufferCache *this, int a2)
{
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);
  }
  for (uint64_t i = (uint64_t *)*((void *)this + 1); ; i += 2)
  {
    if (i == *((uint64_t **)this + 2)) {
      goto LABEL_9;
    }
    if (*((_DWORD *)i + 2) >= a2 && *((unsigned char *)i + 12)) {
      break;
    }
  }
  *((unsigned char *)i + 12) = 0;
  uint64_t v6 = *i;
  if (!*i) {
LABEL_9:
  }
    operator new[]();
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    dispatch_semaphore_signal(v7);
  }
  return v6;
}

NSObject *MemoryBufferCache::returnMemoryBuffer(MemoryBufferCache *this, unsigned __int8 *a2)
{
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);
  }
  uint64_t v5 = *((void *)this + 1);
  uint64_t v6 = *((void *)this + 2);
  if (v5 == v6)
  {
LABEL_6:
    uint64_t result = *((void *)this + 4);
    if (!result) {
      return result;
    }
    goto LABEL_7;
  }
  while (*(unsigned __int8 **)v5 != a2)
  {
    v5 += 16;
    if (v5 == v6) {
      goto LABEL_6;
    }
  }
  *(unsigned char *)(v5 + 12) = 1;
  uint64_t result = *((void *)this + 4);
  if (result)
  {
LABEL_7:
    return dispatch_semaphore_signal(result);
  }
  return result;
}

void SharedDataBuffer::SharedDataBuffer(SharedDataBuffer *this)
{
  *(void *)this = 0;
}

void SharedDataBuffer::~SharedDataBuffer(const void **this)
{
  uint64_t v1 = *this;
  if (v1) {
    CFRelease(v1);
  }
}

void SharedDataBuffer::reset(const void **this)
{
  size_t v2 = *this;
  if (v2) {
    CFRelease(v2);
  }
  *this = 0;
}

void *SharedDataBuffer::allocateBackingBytes(void *size)
{
  if (size) {
    return CFAllocatorAllocate((CFAllocatorRef)*MEMORY[0x263EFFB08], (CFIndex)size, 0);
  }
  return size;
}

void SharedDataBuffer::reset(const void **this, UInt8 *bytes, CFIndex length)
{
  uint64_t v6 = *this;
  if (v6) {
    CFRelease(v6);
  }
  *this = 0;
  if (bytes)
  {
    CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    if (!length
      || (CFDataRef v8 = CFDataCreateWithBytesNoCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], bytes, length, (CFAllocatorRef)*MEMORY[0x263EFFB08]), (*this = v8) == 0))
    {
      CFAllocatorDeallocate(v7, bytes);
    }
  }
}

void SharedDataBuffer::SharedDataBuffer(SharedDataBuffer *this, CFDataRef *a2)
{
  *(void *)this = 0;
  CFDataRef v3 = *a2;
  if (*a2)
  {
    if (CFDataGetBytePtr(*a2) && CFDataGetLength(v3))
    {
      CFRetain(v3);
      uint64_t v4 = *(const void **)this;
      if (!*(void *)this) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    CFDataRef v3 = 0;
    uint64_t v4 = *(const void **)this;
    if (*(void *)this) {
LABEL_7:
    }
      CFRelease(v4);
  }
LABEL_8:
  *(void *)this = v3;
}

uint64_t SharedDataBuffer::getCFData(SharedDataBuffer *this)
{
  return *(void *)this;
}

BOOL isTupaiH17A(void)
{
  int v11 = 0;
  size_t v10 = 4;
  v0 = (IcpUtility *)sysctlbyname("hw.cpufamily", &v11, &v10, 0, 0);
  if (v0)
  {
    if ((int)IcpUtility::logLevel(v0) >= 1)
    {
      BOOL v1 = os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_DEFAULT);
      BOOL result = 0;
      if (!v1) {
        return result;
      }
      *(_WORD *)buf = 0;
      CFDataRef v3 = &_os_log_internal;
      uint64_t v4 = "Failed to get cpufamily";
      uint64_t v5 = buf;
      goto LABEL_5;
    }
    return 0;
  }
  if (v11 != 541402832) {
    return 0;
  }
  *(_DWORD *)buf = 0;
  size_t v10 = 4;
  uint64_t v6 = (IcpUtility *)sysctlbyname("hw.cpusubfamily", buf, &v10, 0, 0);
  if (!v6) {
    return *(_DWORD *)buf == 6;
  }
  if ((int)IcpUtility::logLevel(v6) < 1) {
    return 0;
  }
  BOOL v7 = os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_DEFAULT);
  BOOL result = 0;
  if (v7)
  {
    __int16 v8 = 0;
    CFDataRef v3 = &_os_log_internal;
    uint64_t v4 = "Failed to get cpusubfamily";
    uint64_t v5 = (uint8_t *)&v8;
LABEL_5:
    _os_log_impl(&dword_262C88000, v3, OS_LOG_TYPE_DEFAULT, v4, v5, 2u);
    return 0;
  }
  return result;
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::createInstance(uint64_t a1, uint64_t a2, void *a3)
{
  if (!a3) {
    return 4294954394;
  }
  if (enabledSignpostCategories()) {
    kdebug_trace();
  }
  VTVideoDecoderGetClassID();
  uint64_t v4 = CMDerivedObjectCreate();
  if (!v4) {
    uint64_t v4 = 4294954389;
  }
  *a3 = 0;
  if (enabledSignpostCategories()) {
    kdebug_trace();
  }
  return v4;
}

void sub_262C8B16C(_Unwind_Exception *a1)
{
  MEMORY[0x263E5FB40](v1, 0x10E1C401568E3E4);
  _Unwind_Resume(a1);
}

uint64_t VideoCodecBase<IcpVideoDecoder>::Invalidate()
{
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (DerivedStorage)
  {
    uint64_t v1 = *DerivedStorage;
    if ((enabledSignpostCategories() & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    (*(void (**)(uint64_t))(*(void *)v1 + 48))(v1);
    kdebug_trace();
    goto LABEL_7;
  }
  uint64_t v1 = 0;
  if (enabledSignpostCategories()) {
    goto LABEL_6;
  }
LABEL_3:
  if (!v1)
  {
    uint64_t v2 = 4294954390;
    if ((enabledSignpostCategories() & 1) == 0) {
      return v2;
    }
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 16))(v1);
  if (enabledSignpostCategories())
  {
LABEL_8:
    (*(void (**)(uint64_t))(*(void *)v1 + 48))(v1);
    kdebug_trace();
  }
  return v2;
}

uint64_t VideoCodecBase<IcpVideoDecoder>::Finalize()
{
  DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v1 = DerivedStorage;
  if (DerivedStorage)
  {
    uint64_t v2 = *DerivedStorage;
    if ((enabledSignpostCategories() & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((enabledSignpostCategories() & 1) == 0)
    {
LABEL_3:
      if (!v2) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 48))(v2);
  kdebug_trace();
LABEL_7:
  (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  *uint64_t v1 = 0;
LABEL_8:
  uint64_t result = enabledSignpostCategories();
  if (result)
  {
    return kdebug_trace();
  }
  return result;
}

CFStringRef VideoCodecBase<IcpVideoDecoder>::CopyDebugDescription(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, @"<%s %p>", IcpVideoDecoder::kClassName, a1);
}

uint64_t VideoCodecBase<IcpVideoDecoder>::CopyProperty()
{
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (!DerivedStorage) {
    return 4294954390;
  }
  uint64_t v1 = *DerivedStorage;
  if (!v1) {
    return 4294954390;
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 32);

  return v2();
}

uint64_t VideoCodecBase<IcpVideoDecoder>::SetProperty()
{
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (!DerivedStorage) {
    return 4294954390;
  }
  uint64_t v1 = *DerivedStorage;
  if (!v1) {
    return 4294954390;
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 40);

  return v2();
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::StartSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 4294954394;
  if (!a1 || !a2 || !a3) {
    return v3;
  }
  VTVideoDecoderGetCMBaseObject();
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (!DerivedStorage)
  {
    uint64_t v7 = 0;
    if ((enabledSignpostCategories() & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v7 = *DerivedStorage;
  if (enabledSignpostCategories()) {
LABEL_6:
  }
    kdebug_trace();
LABEL_7:
  if (!v7)
  {
    uint64_t v3 = 4294954390;
    if ((enabledSignpostCategories() & 1) == 0) {
      return v3;
    }
    goto LABEL_9;
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v7 + 56))(v7, a2, a3);
  if (enabledSignpostCategories()) {
LABEL_9:
  }
    kdebug_trace();
  return v3;
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::DecodeFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = 4294954394;
  if (!a1 || !a2 || !a3) {
    return v5;
  }
  VTVideoDecoderGetCMBaseObject();
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (!DerivedStorage)
  {
    uint64_t v11 = 0;
    if ((enabledSignpostCategories() & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v11 = *DerivedStorage;
  if ((enabledSignpostCategories() & 2) != 0) {
LABEL_6:
  }
    kdebug_trace();
LABEL_7:
  if (!v11)
  {
    uint64_t v5 = 4294954390;
    if ((enabledSignpostCategories() & 2) == 0) {
      return v5;
    }
    goto LABEL_9;
  }
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v11 + 64))(v11, a2, a3, a4, a5);
  if ((enabledSignpostCategories() & 2) != 0) {
LABEL_9:
  }
    kdebug_trace();
  return v5;
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::CopySupportedPropertyDictionary(uint64_t a1, void *a2)
{
  uint64_t result = 4294954394;
  if (a1 && a2)
  {
    VTVideoDecoderGetCMBaseObject();
    DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
    if (DerivedStorage && (uint64_t v6 = *DerivedStorage) != 0)
    {
      uint64_t v7 = *(const void **)(v6 + 24);
      if (v7)
      {
        CFRetain(v7);
        uint64_t result = 0;
        *a2 = *(void *)(v6 + 24);
      }
      else
      {
        return 4294954392;
      }
    }
    else
    {
      return 4294954390;
    }
  }
  return result;
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::CanAcceptFormatDescription(uint64_t a1, uint64_t a2)
{
  uint64_t result = 1;
  if (a1)
  {
    if (a2)
    {
      VTVideoDecoderGetCMBaseObject();
      uint64_t result = CMBaseObjectGetDerivedStorage();
      if (result)
      {
        uint64_t result = *(void *)result;
        if (result) {
          return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 72))(result, a2);
        }
      }
    }
  }
  return result;
}

void IcpVideoDecoder::IcpVideoDecoder(IcpVideoDecoder *this, int a2)
{
  uint64_t v2 = VideoDecoderBase<IcpVideoDecoder>::VideoDecoderBase((uint64_t)this, a2);
  *(void *)uint64_t v2 = &unk_270E0FD28;
  *(void *)(v2 + 80) = 0;
  *(_DWORD *)(v2 + 88) = 1;
  *(void *)(v2 + 100) = 0;
  *(void *)(v2 + 92) = 0;
  *(_DWORD *)(v2 + 108) = 0;
  operator new();
}

void sub_262C8B97C(_Unwind_Exception *a1)
{
  MEMORY[0x263E5FB40](v2, 0xA1C40987D6AD5);
  VideoDecoderBase<IcpVideoDecoder>::~VideoDecoderBase(v1);
  _Unwind_Resume(a1);
}

void sub_262C8B9A8(_Unwind_Exception *a1)
{
  VideoDecoderBase<IcpVideoDecoder>::~VideoDecoderBase(v1);
  _Unwind_Resume(a1);
}

void sub_262C8B9BC(_Unwind_Exception *a1)
{
  VideoDecoderBase<IcpVideoDecoder>::~VideoDecoderBase(v1);
  _Unwind_Resume(a1);
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::VideoDecoderBase(uint64_t a1, int a2)
{
  *(void *)a1 = &unk_270E0FF28;
  *(unsigned char *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 12) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  CFAllocatorRef v3 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  uint64_t v4 = (const CFDictionaryKeyCallBacks *)MEMORY[0x263EFFF88];
  uint64_t v5 = (const CFDictionaryValueCallBacks *)MEMORY[0x263EFFF90];
  *(void *)(a1 + 24) = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  *(void *)(a1 + 32) = 0;
  *(void *)a1 = &unk_270E0FE98;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(void *)(a1 + 72) = dispatch_queue_create("PixelBufferPoolDeletion", 0);
  CFDictionaryRef v6 = CFDictionaryCreate(v3, 0, 0, 0, v4, v5);
  if (v6)
  {
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), (const void *)*MEMORY[0x263F1E768], v6);
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), (const void *)*MEMORY[0x263F1E780], v6);
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), (const void *)*MEMORY[0x263F1E6F0], v6);
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), (const void *)*MEMORY[0x263F1E790], v6);
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), (const void *)*MEMORY[0x263F1E788], v6);
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), (const void *)*MEMORY[0x263F1E748], v6);
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), @"DecoderPrefaultedCVPixelBufferPoolCapacity", v6);
    CFRelease(v6);
  }
  return a1;
}

void sub_262C8BB64(_Unwind_Exception *a1)
{
  VideoCodecBase<IcpVideoDecoder>::~VideoCodecBase(v1);
  _Unwind_Resume(a1);
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::~VideoDecoderBase(uint64_t a1)
{
  *(void *)a1 = &unk_270E0FE98;
  uint64_t v2 = *(NSObject **)(a1 + 72);
  if (v2)
  {
    dispatch_sync(v2, &__block_literal_global_54);
    dispatch_release(*(dispatch_object_t *)(a1 + 72));
  }
  CFAllocatorRef v3 = *(PreFaultedCVPixelBufferPool **)(a1 + 64);
  if (v3)
  {
    PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(v3);
    MEMORY[0x263E5FB40]();
  }
  uint64_t v4 = *(const void **)(a1 + 40);
  if (v4) {
    CFRelease(v4);
  }
  *(void *)a1 = &unk_270E0FF28;
  uint64_t v5 = *(const void **)(a1 + 16);
  if (v5) {
    CFRelease(v5);
  }
  CFDictionaryRef v6 = *(const void **)(a1 + 24);
  if (v6) {
    CFRelease(v6);
  }
  return a1;
}

void IcpVideoDecoder::~IcpVideoDecoder(IcpVideoDecoder *this)
{
  *(void *)this = &unk_270E0FD28;
  uint64_t v2 = *((void *)this + 19);
  if (v2) {
    dispatch_sync(v2, &__block_literal_global_0);
  }
  CFAllocatorRef v3 = *((void *)this + 20);
  if (v3) {
    dispatch_sync(v3, &__block_literal_global_11);
  }
  uint64_t v4 = (FrameDecoder *)*((void *)this + 10);
  if (v4)
  {
    FrameDecoder::~FrameDecoder(v4);
    MEMORY[0x263E5FB40]();
  }
  uint64_t v5 = *((void *)this + 17);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  CFDictionaryRef v6 = *((void *)this + 18);
  if (v6) {
    dispatch_release(v6);
  }
  uint64_t v7 = *((void *)this + 19);
  if (v7) {
    dispatch_release(v7);
  }
  __int16 v8 = *((void *)this + 20);
  if (v8) {
    dispatch_release(v8);
  }

  VideoDecoderBase<IcpVideoDecoder>::~VideoDecoderBase((uint64_t)this);
}

{
  uint64_t vars8;

  IcpVideoDecoder::~IcpVideoDecoder(this);

  JUMPOUT(0x263E5FB40);
}

uint64_t IcpVideoDecoder::startSession(uint64_t a1, uint64_t a2, CFTypeRef cf)
{
  uint64_t v60 = *MEMORY[0x263EF8340];
  *(void *)(a1 + 32) = a2;
  uint64_t v5 = *(const void **)(a1 + 16);
  if (v5) {
    CFRelease(v5);
  }
  *(void *)(a1 + 16) = cf;
  if (cf)
  {
    CFRetain(cf);
    CFDictionaryRef v6 = *(const opaqueCMFormatDescription **)(a1 + 16);
  }
  else
  {
    CFDictionaryRef v6 = 0;
  }
  CMVideoDimensions Dimensions = CMVideoFormatDescriptionGetDimensions(v6);
  int32_t width = Dimensions.width;
  *(CMVideoDimensions *)(a1 + 52) = Dimensions;
  *(CMVideoDimensions *)(a1 + 92) = Dimensions;
  CFDictionaryRef DestinationPixelBufferAttributes = (const __CFDictionary *)VTDecoderSessionGetDestinationPixelBufferAttributes();
  *(void *)(a1 + 104) = 0;
  if (!DestinationPixelBufferAttributes) {
    goto LABEL_71;
  }
  CFDictionaryRef v10 = DestinationPixelBufferAttributes;
  uint64_t v11 = (const void *)*MEMORY[0x263F04240];
  unint64_t v12 = (int *)(a1 + 100);
  if (*MEMORY[0x263F04240])
  {
    int v13 = *v12;
    number[0] = 0;
    if (CFDictionaryGetValueIfPresent(DestinationPixelBufferAttributes, v11, (const void **)number))
    {
      if (!CFNumberGetValue(number[0], kCFNumberIntType, (void *)(a1 + 100))) {
        int *v12 = v13;
      }
    }
  }
  CFNumberRef Value = (const __CFNumber *)CFDictionaryGetValue(v10, (const void *)*MEMORY[0x263F04180]);
  CFNumberRef v15 = Value;
  int v16 = 4 * width;
  int v17 = *v12;
  if ((width > 1440 || v16 != 3 * v17) && (width > 1280 || 3 * width != 2 * v17))
  {
    if (!Value) {
      goto LABEL_71;
    }
    CFTypeID v29 = CFGetTypeID(Value);
    if (v29 != CFNumberGetTypeID()) {
      goto LABEL_71;
    }
    LODWORD(number[0]) = 0;
    int v30 = CFNumberGetValue(v15, kCFNumberSInt32Type, number);
    uint64_t v25 = 0;
    if (!v30) {
      goto LABEL_72;
    }
    if (SLODWORD(number[0]) > 2033463351)
    {
      if (LODWORD(number[0]) != 2033463606)
      {
        int v31 = 2033463352;
LABEL_119:
        if (LODWORD(number[0]) != v31) {
          goto LABEL_72;
        }
      }
    }
    else if (LODWORD(number[0]) != 846624121)
    {
      int v31 = 1983000886;
      goto LABEL_119;
    }
    uint64_t v25 = LODWORD(number[0]);
    goto LABEL_72;
  }
  if (Value)
  {
    CFTypeID v18 = CFGetTypeID(Value);
    if (v18 == CFNumberGetTypeID())
    {
      LODWORD(number[0]) = 0;
      if (CFNumberGetValue(v15, kCFNumberSInt32Type, number))
      {
        unsigned int v19 = number[0];
        int v20 = 3 * *v12;
        if (v16 != v20 && 3 * width != 2 * *v12)
        {
          uint64_t v21 = 0;
          goto LABEL_114;
        }
        uint64_t v21 = 0;
        if (SLODWORD(number[0]) <= 1916022839)
        {
          if (SLODWORD(number[0]) > 1111970368)
          {
            if (LODWORD(number[0]) != 1111970369)
            {
              if (LODWORD(number[0]) != 1647719521) {
                goto LABEL_114;
              }
              BOOL v22 = v16 == v20;
              uint64_t v21 = scale_horizontal_2to3_4444_16bBE;
              uint64_t v23 = scale_horizontal_3to4_4444_16bBE;
LABEL_112:
              if (v22) {
                uint64_t v21 = v23;
              }
              goto LABEL_114;
            }
          }
          else if (LODWORD(number[0]) != 32)
          {
            if (LODWORD(number[0]) != 846624121) {
              goto LABEL_114;
            }
            BOOL v22 = v16 == v20;
            uint64_t v21 = scale_horizontal_2to3_2vuy;
            uint64_t v23 = scale_horizontal_3to4_2vuy;
            goto LABEL_112;
          }
        }
        else
        {
          if (SLODWORD(number[0]) > 1983131703)
          {
            if (LODWORD(number[0]) != 1983131704 && LODWORD(number[0]) != 2033463352)
            {
              if (LODWORD(number[0]) == 2033463606)
              {
                BOOL v22 = v16 == v20;
                uint64_t v21 = scale_horizontal_2to3_4444_16bLE;
                uint64_t v23 = scale_horizontal_3to4_4444_16bLE;
                goto LABEL_112;
              }
LABEL_114:
              *(void *)(a1 + 104) = v21;
              if (v21) {
                uint64_t v25 = v19;
              }
              else {
                uint64_t v25 = 0;
              }
              goto LABEL_72;
            }
            goto LABEL_111;
          }
          if (LODWORD(number[0]) != 1916022840)
          {
            if (LODWORD(number[0]) != 1983000886) {
              goto LABEL_114;
            }
            BOOL v22 = v16 == v20;
            uint64_t v21 = scale_horizontal_2to3_v216;
            uint64_t v23 = scale_horizontal_3to4_v216;
            goto LABEL_112;
          }
        }
LABEL_111:
        BOOL v22 = v16 == v20;
        uint64_t v21 = scale_horizontal_2to3_4444_8b;
        uint64_t v23 = scale_horizontal_3to4_4444_8b;
        goto LABEL_112;
      }
LABEL_71:
      uint64_t v25 = 0;
      goto LABEL_72;
    }
    CFTypeID v32 = CFGetTypeID(v15);
    if (v32 != CFArrayGetTypeID()) {
      goto LABEL_71;
    }
    int Count = CFArrayGetCount(v15);
    CFArrayRef v34 = (const __CFArray *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1);
    int v35 = CFArrayGetCount(v34);
    if (v35 < 1) {
      goto LABEL_71;
    }
    CFIndex v36 = 0;
    uint64_t v37 = v35;
    int v38 = 3 * width;
    while (1)
    {
      CFNumberRef ValueAtIndex = (const __CFNumber *)CFArrayGetValueAtIndex(v34, v36);
      LODWORD(number[0]) = 0;
      if (!CFNumberGetValue(ValueAtIndex, kCFNumberSInt32Type, number)) {
        goto LABEL_43;
      }
      int v40 = 3 * *v12;
      if (v16 != v40 && v38 != 2 * *v12)
      {
LABEL_42:
        *(void *)(a1 + 104) = 0;
        goto LABEL_43;
      }
      if (SLODWORD(number[0]) <= 1916022839)
      {
        if (SLODWORD(number[0]) > 1111970368)
        {
          if (LODWORD(number[0]) == 1111970369) {
            goto LABEL_66;
          }
          if (LODWORD(number[0]) != 1647719521) {
            goto LABEL_42;
          }
          BOOL v42 = v16 == v40;
          v43 = scale_horizontal_2to3_4444_16bBE;
          v44 = scale_horizontal_3to4_4444_16bBE;
        }
        else
        {
          if (LODWORD(number[0]) == 32) {
            goto LABEL_66;
          }
          if (LODWORD(number[0]) != 846624121) {
            goto LABEL_42;
          }
          BOOL v42 = v16 == v40;
          v43 = scale_horizontal_2to3_2vuy;
          v44 = scale_horizontal_3to4_2vuy;
        }
      }
      else if (SLODWORD(number[0]) <= 1983131703)
      {
        if (LODWORD(number[0]) == 1916022840) {
          goto LABEL_66;
        }
        if (LODWORD(number[0]) != 1983000886) {
          goto LABEL_42;
        }
        BOOL v42 = v16 == v40;
        v43 = scale_horizontal_2to3_v216;
        v44 = scale_horizontal_3to4_v216;
      }
      else
      {
        if (LODWORD(number[0]) == 1983131704 || LODWORD(number[0]) == 2033463352)
        {
LABEL_66:
          BOOL v42 = v16 == v40;
          v43 = scale_horizontal_2to3_4444_8b;
          v44 = scale_horizontal_3to4_4444_8b;
          goto LABEL_67;
        }
        if (LODWORD(number[0]) != 2033463606) {
          goto LABEL_42;
        }
        BOOL v42 = v16 == v40;
        v43 = scale_horizontal_2to3_4444_16bLE;
        v44 = scale_horizontal_3to4_4444_16bLE;
      }
LABEL_67:
      if (v42) {
        v43 = v44;
      }
      *(void *)(a1 + 104) = v43;
      v61.location = 0;
      v61.length = Count;
      if (CFArrayContainsValue(v15, v61, ValueAtIndex))
      {
        uint64_t v25 = LODWORD(number[0]);
        goto LABEL_72;
      }
LABEL_43:
      if (v37 == ++v36) {
        goto LABEL_71;
      }
    }
  }
  BOOL v24 = codecTypeIs444(*(_DWORD *)(a1 + 12));
  if (v24) {
    uint64_t v25 = 2033463606;
  }
  else {
    uint64_t v25 = 1983000886;
  }
  int v26 = *(_DWORD *)(a1 + 100);
  if (v16 == 3 * v26 || 3 * width == 2 * v26)
  {
    if (v24)
    {
      unint64_t v27 = scale_horizontal_2to3_4444_16bLE;
      v28 = scale_horizontal_3to4_4444_16bLE;
    }
    else
    {
      unint64_t v27 = scale_horizontal_2to3_v216;
      v28 = scale_horizontal_3to4_v216;
    }
    if (v16 == 3 * v26) {
      unint64_t v27 = v28;
    }
    *(void *)(a1 + 104) = v27;
  }
  else
  {
    *(void *)(a1 + 104) = 0;
  }
LABEL_72:
  *(unsigned char *)(a1 + 120) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 124) = 0xFFFFFFFF00000000;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)a1 + 88))(a1, v25)) {
    return 4294954392;
  }
  CVPixelBufferRef pixelBufferOut = 0;
  PixelBufferPool = (__CVPixelBufferPool *)VTDecoderSessionGetPixelBufferPool();
  uint64_t result = CVPixelBufferPoolCreatePixelBuffer(0, PixelBufferPool, &pixelBufferOut);
  if (!result)
  {
    *(_DWORD *)(a1 + 48) = CVPixelBufferGetPixelFormatType(pixelBufferOut);
    if (pixelBufferOut) {
      CVPixelBufferRelease(pixelBufferOut);
    }
    v47 = *(const void **)(a1 + 40);
    if (v47) {
      CFRelease(v47);
    }
    SuggestedQualityOfServiceTiers = IcpVideoDecoder::createSuggestedQualityOfServiceTiers((IcpVideoDecoder *)*(unsigned int *)(a1 + 48), *(_DWORD *)(a1 + 92), *(_DWORD *)(a1 + 96));
    *(void *)(a1 + 40) = SuggestedQualityOfServiceTiers;
    if (!*(void *)(a1 + 80)) {
      operator new();
    }
    if ((int)IcpUtility::logLevel(SuggestedQualityOfServiceTiers) >= 1
      && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v49 = *(_DWORD *)(a1 + 48);
      if (v49 == 32)
      {
        strcpy((char *)number, "32(ARGB)");
        char v50 = 8;
      }
      else
      {
        LODWORD(number[0]) = bswap32(v49);
        BYTE4(number[0]) = 0;
        char v50 = 4;
      }
      char v54 = v50;
      *(_DWORD *)buf = 134218242;
      uint64_t v57 = a1;
      __int16 v58 = 2080;
      v59 = number;
      _os_log_impl(&dword_262C88000, &_os_log_internal, OS_LOG_TYPE_DEFAULT, "IcpVideoDecoder[%p]: Pixel buffer format is '%s'\n", buf, 0x16u);
      if (v54 < 0) {
        operator delete(number[0]);
      }
    }
    if (maxConcurrentJobs(void)::s_predicate != -1) {
      dispatch_once(&maxConcurrentJobs(void)::s_predicate, &__block_literal_global_17);
    }
    *(void *)(a1 + 144) = dispatch_semaphore_create(maxConcurrentJobs(void)::s_maxConcurrentJobs);
    *(void *)(a1 + 152) = dispatch_queue_create("PRDecode1", 0);
    dispatch_queue_t v51 = dispatch_queue_create("PRDecode2", 0);
    *(void *)(a1 + 160) = v51;
    if (!*(void *)(a1 + 144)) {
      return 4294954392;
    }
    dispatch_queue_t v52 = v51;
    uint64_t result = 4294954392;
    if (*(void *)(a1 + 152))
    {
      if (v52)
      {
        uint64_t result = 0;
        *(unsigned char *)(a1 + 8) = 1;
      }
    }
  }
  return result;
}

void sub_262C8C624(_Unwind_Exception *a1, int a2)
{
  MEMORY[0x263E5FB40](v2, 0x1020C4014CBC42BLL);
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x262C8C2A8);
  }
  _Unwind_Resume(a1);
}

CFArrayRef IcpVideoDecoder::createSuggestedQualityOfServiceTiers(IcpVideoDecoder *this, int a2, int a3)
{
  int v5 = (int)this;
  uint64_t v20 = *MEMORY[0x263EF8340];
  *(_OWORD *)unsigned int v19 = 0u;
  *(_OWORD *)CFTypeID v18 = 0u;
  *(_OWORD *)int v17 = 0u;
  CFTypeRef cf = VideoDecoderBase<IcpVideoDecoder>::createSuggestedQualityOfServiceTier(a2, a3);
  CFIndex v6 = 1;
  if (v5 <= 1983000885)
  {
    if (v5 != 846624121 && v5 != 1916022840) {
      goto LABEL_27;
    }
  }
  else if (v5 != 1983000886 && v5 != 2033463606 && v5 != 2033463352)
  {
    goto LABEL_27;
  }
  if (a2 >= 0) {
    int v7 = a2;
  }
  else {
    int v7 = a2 + 1;
  }
  if (a2 >= 0) {
    int v8 = a2;
  }
  else {
    int v8 = a2 + 3;
  }
  if (a2 >= 0) {
    int v9 = a2;
  }
  else {
    int v9 = a2 + 7;
  }
  if (a3 >= 0) {
    int v10 = a3;
  }
  else {
    int v10 = a3 + 1;
  }
  int v11 = v10 >> 1;
  if (a3 >= 0) {
    int v12 = a3;
  }
  else {
    int v12 = a3 + 3;
  }
  if (a3 >= 0) {
    int v13 = a3;
  }
  else {
    int v13 = a3 + 7;
  }
  v17[0] = VideoDecoderBase<IcpVideoDecoder>::createSuggestedQualityOfServiceTier(a2, v11);
  v17[1] = VideoDecoderBase<IcpVideoDecoder>::createSuggestedQualityOfServiceTier(v7 >> 1, v11);
  v18[0] = VideoDecoderBase<IcpVideoDecoder>::createSuggestedQualityOfServiceTier(v7 >> 1, v12 >> 2);
  v18[1] = VideoDecoderBase<IcpVideoDecoder>::createSuggestedQualityOfServiceTier(v8 >> 2, v12 >> 2);
  v19[0] = VideoDecoderBase<IcpVideoDecoder>::createSuggestedQualityOfServiceTier(v8 >> 2, v13 >> 3);
  v19[1] = VideoDecoderBase<IcpVideoDecoder>::createSuggestedQualityOfServiceTier(v9 >> 3, v13 >> 3);
  CFIndex v6 = 7;
LABEL_27:
  CFArrayRef v14 = CFArrayCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], &cf, v6, MEMORY[0x263EFFF70]);
  if (cf) {
    CFRelease(cf);
  }
  if (v17[0]) {
    CFRelease(v17[0]);
  }
  if (v17[1]) {
    CFRelease(v17[1]);
  }
  if (v18[0]) {
    CFRelease(v18[0]);
  }
  if (v18[1]) {
    CFRelease(v18[1]);
  }
  if (v19[0]) {
    CFRelease(v19[0]);
  }
  if (v19[1]) {
    CFRelease(v19[1]);
  }
  return v14;
}

uint64_t IcpVideoDecoder::decodeFrame(uint64_t a1, uint64_t a2, opaqueCMSampleBuffer *a3, char a4, int *a5)
{
  if (!*(unsigned char *)(a1 + 8)) {
    return 4294954393;
  }
  uint64_t v7 = a1;
  unsigned int v8 = *(_DWORD *)(a1 + 88);
  BOOL v9 = v8 > 5;
  int v10 = (1 << v8) & 0x3A;
  if (v9 || v10 == 0)
  {
    int v24 = *(_DWORD *)(a1 + 48);
    if (v24 <= 1983000885)
    {
      if (v24 == 846624121 || v24 == 1916022840) {
        goto LABEL_6;
      }
    }
    else if (v24 == 1983000886 || v24 == 2033463352 || v24 == 2033463606)
    {
      goto LABEL_6;
    }
    CVPixelBufferRef v77 = 0;
    uint64_t v12 = 4294954394;
    goto LABEL_12;
  }
LABEL_6:
  CVPixelBufferRef v77 = 0;
  if (VideoDecoderBase<IcpVideoDecoder>::newCVPixelBufferFromPool(a1, &v77) || !v77)
  {
    CVPixelBufferRelease(v77);
    CVPixelBufferRef v77 = 0;
    uint64_t v12 = 4294954392;
    goto LABEL_12;
  }
  if (!CVPixelBufferLockBaseAddress(v77, 0))
  {
    LOBYTE(v25) = 0;
    *(_DWORD *)((char *)v76 + 3) = 0;
    v76[0] = 0;
    uint64_t v53 = *(void *)(v7 + 104);
    uint64_t v26 = 100;
    if (!v53) {
      uint64_t v26 = 52;
    }
    int v28 = *(_DWORD *)(v7 + 88);
    int v27 = *(_DWORD *)(v7 + 92);
    int v29 = v27 + 15;
    BOOL v9 = v27 < -15;
    int v30 = v27 + 30;
    if (v9) {
      int v31 = v30;
    }
    else {
      int v31 = v29;
    }
    int v14 = *(_DWORD *)(v7 + 48);
    if ((v28 - 6) <= 5) {
      int v25 = dword_262CDE44C[v28 - 6];
    }
    LODWORD(v52) = *(_DWORD *)(v7 + v26);
    HIDWORD(v52) = *(_DWORD *)(v7 + 56);
    int NumBytesPerPixelData = PixelBuffer::getNumBytesPerPixelData(v14);
    if (v14 != 1983000880)
    {
      int v33 = ((int)(v31 & 0xFFFFFFF0) >> v25) * NumBytesPerPixelData;
      if (CVPixelBufferGetBytesPerRow(v77) < v33)
      {
        int BytesPerRowOfPlane = v33;
        BaseAddressOfPlane = (void *)MemoryBufferCache::obtainMemoryBuffer(*(MemoryBufferCache **)(v7 + 136), *(_DWORD *)(v7 + 56) * v33);
        int v48 = 0;
        unsigned int v49 = 0;
        int v45 = 0;
        v46 = 0;
        uint64_t v12 = 0;
        char v47 = 1;
        if (!BaseAddressOfPlane) {
          goto LABEL_61;
        }
LABEL_58:
        dispatch_queue_t v51 = BaseAddressOfPlane;
        if (!v12)
        {
          if (a3)
          {
            if (CMSampleBufferGetNumSamples(a3) == 1)
            {
              size_t SampleSize = CMSampleBufferGetSampleSize(a3, 0);
              DataBuffer = CMSampleBufferGetDataBuffer(a3);
              if (SampleSize)
              {
                BOOL v42 = DataBuffer;
                if (CMBlockBufferGetDataLength(DataBuffer) >= SampleSize)
                {
                  v73 = 0;
                  uint64_t v74 = 0;
                  dataPointerOut = 0;
                  lengthAtOffsetOut[0] = 0;
                  if (!CMBlockBufferGetDataPointer(v42, 0, lengthAtOffsetOut, 0, &dataPointerOut)) {
                    operator new();
                  }
                }
              }
            }
          }
          uint64_t v12 = 4294954387;
        }
        goto LABEL_13;
      }
    }
    if (CVPixelBufferIsPlanar(v77))
    {
      uint64_t v35 = v7;
      BaseAddressOfPlane = CVPixelBufferGetBaseAddressOfPlane(v77, 0);
      int BytesPerRowOfPlane = CVPixelBufferGetBytesPerRowOfPlane(v77, 0);
      CFIndex v36 = CVPixelBufferGetBaseAddressOfPlane(v77, 1uLL);
      int v48 = CVPixelBufferGetBytesPerRowOfPlane(v77, 1uLL);
      unsigned int v49 = v36;
      if (v36) {
        uint64_t v37 = 0;
      }
      else {
        uint64_t v37 = 4294954392;
      }
      if (CVPixelBufferGetPlaneCount(v77) >= 3)
      {
        int v38 = CVPixelBufferGetBaseAddressOfPlane(v77, 2uLL);
        int v45 = CVPixelBufferGetBytesPerRowOfPlane(v77, 2uLL);
        v46 = v38;
        char v47 = 0;
        if (v38) {
          uint64_t v12 = v37;
        }
        else {
          uint64_t v12 = 4294954392;
        }
        uint64_t v7 = v35;
        if (!BaseAddressOfPlane) {
          goto LABEL_61;
        }
        goto LABEL_58;
      }
      char v47 = 0;
      int v45 = 0;
      v46 = 0;
      uint64_t v12 = v37;
      uint64_t v7 = v35;
      if (BaseAddressOfPlane) {
        goto LABEL_58;
      }
    }
    else
    {
      BaseAddressOfPlane = CVPixelBufferGetBaseAddress(v77);
      int BytesPerRow = CVPixelBufferGetBytesPerRow(v77);
      char v47 = 0;
      int v48 = 0;
      unsigned int v49 = 0;
      int v45 = 0;
      v46 = 0;
      uint64_t v12 = 0;
      int BytesPerRowOfPlane = BytesPerRow;
      if (BaseAddressOfPlane) {
        goto LABEL_58;
      }
    }
LABEL_61:
    dispatch_queue_t v51 = 0;
    uint64_t v12 = 4294954392;
    goto LABEL_13;
  }
  CVPixelBufferRelease(v77);
  CVPixelBufferRef v77 = 0;
  uint64_t v12 = 4294954385;
LABEL_12:
  dispatch_queue_t v51 = 0;
  uint64_t v52 = 0;
  char v47 = 0;
  uint64_t v53 = 0;
  int v14 = 0;
  int v45 = 0;
  v46 = 0;
  int v48 = 0;
  unsigned int v49 = 0;
  int BytesPerRowOfPlane = 0;
  *(_DWORD *)((char *)v76 + 3) = 0;
  v76[0] = 0;
LABEL_13:
  int v15 = a4 & 1;
  if (a4)
  {
    if (a3)
    {
      uint64_t v20 = v12;
      CFRetain(a3);
      uint64_t v12 = v20;
    }
    int v17 = a3;
    if (allowAsyncCallback(void)::s_predicate != -1)
    {
      uint64_t v43 = v12;
      dispatch_once(&allowAsyncCallback(void)::s_predicate, &__block_literal_global_23);
      uint64_t v12 = v43;
    }
    int v16 = (void (*)(uint64_t, void *))MEMORY[0x263EF8838];
    if (allowAsyncCallback(void)::s_allowAsyncCallback) {
      uint64_t v19 = MEMORY[0x263EF8838];
    }
    else {
      uint64_t v19 = MEMORY[0x263EF8868];
    }
    int v18 = 1;
  }
  else
  {
    int v16 = (void (*)(uint64_t, void *))MEMORY[0x263EF8868];
    int v17 = a3;
    int v18 = 0;
    uint64_t v19 = MEMORY[0x263EF8868];
  }
  int v21 = *(_DWORD *)(v7 + 88);
  uint64_t v72 = 0;
  v73 = &v72;
  uint64_t v74 = 0x2000000000;
  uint64_t v22 = v12;
  int v75 = v12;
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(v7 + 144), 0xFFFFFFFFFFFFFFFFLL);
  uint64_t v23 = *(void *)(v7 + 152);
  v55[0] = MEMORY[0x263EF8330];
  v55[1] = 0x40000000;
  v55[2] = ___ZN15IcpVideoDecoder11decodeFrameEP25OpaqueVTVideoDecoderFrameP20opaqueCMSampleBufferjPj_block_invoke;
  v55[3] = &unk_2655BBD70;
  v55[4] = &v72;
  v55[5] = v7;
  v55[6] = 0;
  v55[7] = v51;
  v55[8] = v49;
  v55[9] = v46;
  int v56 = BytesPerRowOfPlane;
  int v57 = v48;
  int v58 = v45;
  int v59 = v14;
  uint64_t v60 = v52;
  char v61 = 0;
  *(_DWORD *)v62 = v76[0];
  *(_DWORD *)&v62[3] = *(_DWORD *)((char *)v76 + 3);
  uint64_t v63 = v53;
  CVPixelBufferRef v64 = v77;
  char v70 = v15;
  uint64_t v65 = v19;
  v66 = v17;
  char v71 = v47;
  uint64_t v67 = a2;
  int v68 = v21;
  int v69 = v18;
  v16(v23, v55);
  if (!v15) {
    uint64_t v22 = *((unsigned int *)v73 + 6);
  }
  if (a5) {
    *a5 = v18;
  }
  _Block_object_dispose(&v72, 8);
  return v22;
}

void sub_262C8CEA8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::newCVPixelBufferFromPool(uint64_t a1, CVPixelBufferRef *a2)
{
  if ((enabledSignpostCategories() & 2) != 0) {
    kdebug_trace();
  }
  uint64_t v4 = *(PreFaultedCVPixelBufferPool **)(a1 + 64);
  if (v4)
  {
    uint64_t PixelBuffer = 0;
    *a2 = (CVPixelBufferRef)PreFaultedCVPixelBufferPool::newCVPixelBuffer(v4);
    if ((enabledSignpostCategories() & 2) == 0) {
      return PixelBuffer;
    }
  }
  else
  {
    PixelBufferPool = (__CVPixelBufferPool *)VTDecoderSessionGetPixelBufferPool();
    uint64_t PixelBuffer = CVPixelBufferPoolCreatePixelBuffer(0, PixelBufferPool, a2);
    if ((enabledSignpostCategories() & 2) == 0) {
      return PixelBuffer;
    }
  }
  if (!PixelBuffer)
  {
    if (*a2)
    {
      CVPixelBufferGetWidth(*a2);
      if (*a2)
      {
        CVPixelBufferGetHeight(*a2);
        if (*a2) {
          CVPixelBufferGetPixelFormatType(*a2);
        }
      }
    }
  }
  kdebug_trace();
  return PixelBuffer;
}

uint64_t ___ZN15IcpVideoDecoder11decodeFrameEP25OpaqueVTVideoDecoderFrameP20opaqueCMSampleBufferjPj_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (!*(_DWORD *)(*(void *)(v2 + 8) + 24))
  {
    BOOL v25 = 0;
    if ((enabledSignpostCategories() & 0x100) != 0) {
      kdebug_trace();
    }
    int v4 = FrameDecoder::decode(*(void *)(v3 + 80), *(void **)(a1 + 48), a1 + 56, *(_DWORD *)(a1 + 152), 0, &v25);
    if ((enabledSignpostCategories() & 0x100) != 0) {
      kdebug_trace();
    }
    if (v4 < 0)
    {
      if (v4 == -2) {
        int v5 = -12909;
      }
      else {
        int v5 = -12911;
      }
      if (v4 == -3) {
        int v5 = -12902;
      }
      *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v5;
    }
    uint64_t v2 = *(void *)(a1 + 32);
    if (*(_DWORD *)(*(void *)(v2 + 8) + 24)) {
      BOOL v6 = 1;
    }
    else {
      BOOL v6 = !v25;
    }
    if (!v6)
    {
      CVBufferSetAttachment(*(CVBufferRef *)(a1 + 120), @"kCMSampleBufferAlphaIsFullyOpaque", (CFTypeRef)*MEMORY[0x263EFFB40], kCVAttachmentMode_ShouldPropagate);
      uint64_t v2 = *(void *)(a1 + 32);
    }
  }
  uint64_t v7 = *(void *)(v3 + 160);
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 0x40000000;
  v16[2] = ___ZN15IcpVideoDecoder11decodeFrameEP25OpaqueVTVideoDecoderFrameP20opaqueCMSampleBufferjPj_block_invoke_2;
  v16[3] = &unk_2655BBD48;
  uint64_t v8 = *(void *)(a1 + 48);
  char v23 = *(unsigned char *)(a1 + 160);
  BOOL v9 = *(uint64_t (**)(uint64_t, void *))(a1 + 128);
  uint64_t v10 = *(void *)(a1 + 136);
  uint64_t v11 = *(void *)(a1 + 144);
  v16[6] = v8;
  v16[7] = v10;
  v16[4] = v2;
  v16[5] = v3;
  v16[8] = *(void *)(a1 + 120);
  long long v12 = *(_OWORD *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 72);
  long long v14 = *(_OWORD *)(a1 + 104);
  long long v19 = *(_OWORD *)(a1 + 88);
  long long v20 = v14;
  long long v17 = v12;
  long long v18 = v13;
  char v24 = *(unsigned char *)(a1 + 161);
  uint64_t v21 = v11;
  int v22 = *(_DWORD *)(a1 + 156);
  return v9(v7, v16);
}

intptr_t ___ZN15IcpVideoDecoder11decodeFrameEP25OpaqueVTVideoDecoderFrameP20opaqueCMSampleBufferjPj_block_invoke_2(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2)
  {
    do
    {
      uint64_t v4 = *(void *)(v2 + 16);
      MEMORY[0x263E5FB40]();
      uint64_t v2 = v4;
    }
    while (v4);
  }
  if (*(unsigned char *)(a1 + 148))
  {
    int v5 = *(const void **)(a1 + 56);
    if (v5) {
      CFRelease(v5);
    }
  }
  if (!*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    if (qword_26A996348 == -1)
    {
      if (!_MergedGlobals_58) {
        goto LABEL_20;
      }
    }
    else
    {
      dispatch_once(&qword_26A996348, &__block_literal_global_29);
      if (!_MergedGlobals_58) {
        goto LABEL_20;
      }
    }
    if (CVPixelBufferIsPlanar(*(CVPixelBufferRef *)(a1 + 64)))
    {
      int v6 = *(_DWORD *)(a1 + 116);
      int v7 = (v6 >> 1) - 8;
      if (v6 <= 16) {
        int v7 = 0;
      }
      if (v6 >= 16) {
        int v6 = 16;
      }
      memset((void *)(*(void *)(a1 + 80) + v7 * *(_DWORD *)(a1 + 100)), 128, v6 * *(_DWORD *)(a1 + 100));
    }
    int v8 = *(_DWORD *)(a1 + 116);
    int v9 = (v8 >> 1) - 8;
    if (v8 <= 16) {
      int v9 = 0;
    }
    if (v8 >= 16) {
      int v8 = 16;
    }
    memset((void *)(*(void *)(a1 + 72) + v9 * *(_DWORD *)(a1 + 96)), 128, v8 * *(_DWORD *)(a1 + 96));
  }
LABEL_20:
  if (*(unsigned char *)(a1 + 149))
  {
    uint64_t v29 = v3;
    if (!*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
    {
      long long v14 = *(char **)(a1 + 72);
      if (CVPixelBufferIsPlanar(*(CVPixelBufferRef *)(a1 + 64)))
      {
        int PlaneCount = CVPixelBufferGetPlaneCount(*(CVPixelBufferRef *)(a1 + 64));
        if (PlaneCount >= 1)
        {
          size_t v16 = 0;
          uint64_t v17 = PlaneCount;
          do
          {
            BaseAddressOfPlane = (char *)CVPixelBufferGetBaseAddressOfPlane(*(CVPixelBufferRef *)(a1 + 64), v16);
            size_t BytesPerRowOfPlane = CVPixelBufferGetBytesPerRowOfPlane(*(CVPixelBufferRef *)(a1 + 64), v16);
            if (v16) {
              uint64_t v20 = 100;
            }
            else {
              uint64_t v20 = 96;
            }
            if (*(int *)(a1 + 116) >= 1)
            {
              size_t v21 = BytesPerRowOfPlane;
              int v22 = 0;
              uint64_t v23 = *(int *)(a1 + v20);
              do
              {
                memcpy(BaseAddressOfPlane, v14, v21);
                v14 += v23;
                BaseAddressOfPlane += v21;
                ++v22;
              }
              while (v22 < *(_DWORD *)(a1 + 116));
            }
            ++v16;
          }
          while (v16 != v17);
        }
      }
      else
      {
        BaseAddress = (char *)CVPixelBufferGetBaseAddress(*(CVPixelBufferRef *)(a1 + 64));
        size_t BytesPerRow = CVPixelBufferGetBytesPerRow(*(CVPixelBufferRef *)(a1 + 64));
        if (*(int *)(a1 + 116) >= 1)
        {
          size_t v26 = BytesPerRow;
          int v27 = 0;
          uint64_t v28 = *(int *)(a1 + 96);
          do
          {
            memcpy(BaseAddress, v14, v26);
            v14 += v28;
            BaseAddress += v26;
            ++v27;
          }
          while (v27 < *(_DWORD *)(a1 + 116));
        }
      }
    }
    uint64_t v10 = *(unsigned __int8 **)(a1 + 72);
    uint64_t v3 = v29;
    if (v10) {
      MemoryBufferCache::returnMemoryBuffer(*(MemoryBufferCache **)(v29 + 136), v10);
    }
  }
  uint64_t v11 = *(__CVBuffer **)(a1 + 64);
  if (v11) {
    CVPixelBufferUnlockBaseAddress(v11, 0);
  }
  VTDecoderSessionEmitDecodedFrame();
  CVPixelBufferRelease(*(CVPixelBufferRef *)(a1 + 64));
  long long v12 = *(NSObject **)(v3 + 144);

  return dispatch_semaphore_signal(v12);
}

uint64_t IcpVideoDecoder::invalidate(IcpVideoDecoder *this)
{
  uint64_t v2 = *((void *)this + 19);
  if (v2) {
    dispatch_sync(v2, &__block_literal_global_0);
  }
  uint64_t v3 = *((void *)this + 20);
  if (v3) {
    dispatch_sync(v3, &__block_literal_global_11);
  }
  *((unsigned char *)this + 8) = 0;
  return 0;
}

uint64_t VideoCodecBase<IcpVideoDecoder>::invalidate(uint64_t a1)
{
  *(unsigned char *)(a1 + 8) = 0;
  return 0;
}

uint64_t IcpVideoDecoder::copyProperty(IcpVideoDecoder *this, CFTypeRef cf1, const __CFAllocator *a3, __CFDictionary **a4)
{
  uint64_t v4 = 4294954394;
  if (!cf1 || !a4) {
    return v4;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E798]))
  {
    uint64_t v13 = 0;
    long long v14 = &v13;
    uint64_t v15 = 0x2000000000;
    int v16 = 0;
    int v9 = *((void *)this + 19);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = ___ZN15IcpVideoDecoder12copyPropertyEPK10__CFStringPK13__CFAllocatorPv_block_invoke;
    block[3] = &unk_2655BBD98;
    block[4] = &v13;
    block[5] = this;
    dispatch_sync(v9, block);
    int valuePtr = *((_DWORD *)v14 + 6);
    CFNumberRef v10 = CFNumberCreate(a3, kCFNumberSInt32Type, &valuePtr);
    *a4 = v10;
    if (v10) {
      uint64_t v4 = 0;
    }
    else {
      uint64_t v4 = 4294954392;
    }
    _Block_object_dispose(&v13, 8);
    return v4;
  }

  return VideoDecoderBase<IcpVideoDecoder>::copyProperty((uint64_t)this, cf1, a3, a4);
}

void sub_262C8D614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ___ZN15IcpVideoDecoder12copyPropertyEPK10__CFStringPK13__CFAllocatorPv_block_invoke(uint64_t a1)
{
  uint64_t result = FrameDecoder::getNumThreads(*(FrameDecoder **)(*(void *)(a1 + 40) + 80));
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::copyProperty(uint64_t a1, CFTypeRef cf1, const __CFAllocator *a3, __CFDictionary **a4)
{
  uint64_t result = 4294954394;
  if (cf1 && a4)
  {
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E768]))
    {
      Mutable = CFDictionaryCreateMutable(a3, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (Mutable)
      {
        int valuePtr = *(_DWORD *)(a1 + 52);
        CFNumberRef v10 = CFNumberCreate(a3, kCFNumberIntType, &valuePtr);
        if (v10)
        {
          CFNumberRef v11 = v10;
          CFDictionaryAddValue(Mutable, (const void *)*MEMORY[0x263F1E810], v10);
          CFRelease(v11);
        }
        int v19 = *(_DWORD *)(a1 + 56);
        CFNumberRef v12 = CFNumberCreate(a3, kCFNumberIntType, &v19);
        if (v12)
        {
          CFNumberRef v13 = v12;
          CFDictionaryAddValue(Mutable, (const void *)*MEMORY[0x263F1E808], v12);
          CFRelease(v13);
        }
        uint64_t result = 0;
        *a4 = Mutable;
      }
      else
      {
        uint64_t result = 4294954385;
        *a4 = 0;
      }
    }
    else
    {
      if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E780]))
      {
        CFArrayRef v14 = *(const __CFArray **)(a1 + 40);
        if (v14) {
          CFArrayRef Copy = CFArrayCreateCopy(a3, v14);
        }
        else {
          CFArrayRef Copy = 0;
        }
      }
      else if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E790]) {
             || CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E788])
      }
             || CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E748]))
      {
        CFArrayRef Copy = (CFArrayRef)(*(uint64_t (**)(uint64_t, const __CFAllocator *, CFTypeRef))(*(void *)a1 + 120))(a1, a3, cf1);
      }
      else
      {
        if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E6F0]))
        {
          uint64_t result = 0;
          *a4 = (__CFDictionary *)*MEMORY[0x263EFFB38];
          return result;
        }
        if (!CFEqual(cf1, @"DecoderPrefaultedCVPixelBufferPoolCapacity")) {
          return 4294954396;
        }
        uint64_t v16 = *(void *)(a1 + 64);
        if (v16) {
          LODWORD(v16) = *(_DWORD *)(v16 + 8);
        }
        int v17 = v16;
        CFArrayRef Copy = CFNumberCreate(a3, kCFNumberSInt32Type, &v17);
      }
      *a4 = Copy;
      if (Copy) {
        return 0;
      }
      else {
        return 4294954385;
      }
    }
  }
  return result;
}

uint64_t IcpVideoDecoder::setProperty(IcpVideoDecoder *this, CFTypeRef cf1, const void *a3)
{
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E718]))
  {
    if (a3)
    {
      if (CFEqual(a3, (CFTypeRef)*MEMORY[0x263F1E7C8]))
      {
        int v6 = *((_DWORD *)this + 24);
        *((_DWORD *)this + 13) = *((_DWORD *)this + 23);
        int v7 = 1;
LABEL_30:
        *((_DWORD *)this + 14) = v6;
        *((_DWORD *)this + 22) = v7;
        uint64_t v18 = *((unsigned int *)this + 12);
        int v19 = *(uint64_t (**)(IcpVideoDecoder *, uint64_t))(*(void *)this + 88);
        return v19(this, v18);
      }
      if (CFEqual(a3, (CFTypeRef)*MEMORY[0x263F1E7E0]))
      {
        int v12 = *((_DWORD *)this + 24);
        *((_DWORD *)this + 13) = *((_DWORD *)this + 23);
        int v13 = v12 + 2;
        if (v12 >= -1) {
          int v13 = v12 + 1;
        }
        int v6 = v13 >> 1;
        int v7 = 3;
        goto LABEL_30;
      }
      if (CFEqual(a3, (CFTypeRef)*MEMORY[0x263F1E7D0]))
      {
        int v14 = *((_DWORD *)this + 24);
        *((_DWORD *)this + 13) = *((_DWORD *)this + 23);
        if (v14 >= 0) {
          int v15 = v14;
        }
        else {
          int v15 = v14 + 1;
        }
        int v6 = v15 >> 1;
        int v7 = 4;
        goto LABEL_30;
      }
      if (CFEqual(a3, (CFTypeRef)*MEMORY[0x263F1E7D8]))
      {
        int v16 = *((_DWORD *)this + 24);
        *((_DWORD *)this + 13) = *((_DWORD *)this + 23);
        if (v16 >= 0) {
          int v17 = v16;
        }
        else {
          int v17 = v16 + 1;
        }
        int v6 = v17 >> 1;
        int v7 = 5;
        goto LABEL_30;
      }
    }
    return 4294954394;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E798]))
  {
    uint64_t v23 = 0;
    char v24 = &v23;
    uint64_t v25 = 0x2000000000;
    int v26 = 0;
    int valuePtr = 0;
    if (a3
      && (CFTypeID v8 = CFGetTypeID(a3), v8 == CFNumberGetTypeID())
      && CFNumberGetValue((CFNumberRef)a3, kCFNumberSInt32Type, &valuePtr)
      && valuePtr >= 1)
    {
      int v9 = *((void *)this + 19);
      block[0] = MEMORY[0x263EF8330];
      block[1] = 0x40000000;
      block[2] = ___ZN15IcpVideoDecoder11setPropertyEPK10__CFStringPKv_block_invoke;
      block[3] = &unk_2655BBDC0;
      int v21 = valuePtr;
      block[4] = &v23;
      block[5] = this;
      dispatch_sync(v9, block);
      uint64_t v10 = *((unsigned int *)v24 + 6);
    }
    else
    {
      uint64_t v10 = 4294954394;
      *((_DWORD *)v24 + 6) = -12902;
    }
    _Block_object_dispose(&v23, 8);
    return v10;
  }
  else
  {
    return VideoDecoderBase<IcpVideoDecoder>::setProperty((PreFaultedCVPixelBufferPool **)this, cf1, (const __CFDictionary *)a3);
  }
}

void sub_262C8DBB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ___ZN15IcpVideoDecoder11setPropertyEPK10__CFStringPKv_block_invoke(uint64_t a1)
{
  uint64_t result = FrameDecoder::getNumThreads(*(FrameDecoder **)(*(void *)(a1 + 40) + 80));
  if (*(_DWORD *)(a1 + 48) != result) {
    operator new();
  }
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
  return result;
}

void sub_262C8DC98(_Unwind_Exception *a1, int a2)
{
  MEMORY[0x263E5FB40](v3, 0x1020C4014CBC42BLL);
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    *(_DWORD *)(*(void *)(*(void *)(v2 + 32) + 8) + 24) = -12904;
    __cxa_end_catch();
    if (!*(_DWORD *)(*(void *)(*(void *)(v2 + 32) + 8) + 24)) {
      JUMPOUT(0x262C8DC60);
    }
    JUMPOUT(0x262C8DC08);
  }
  _Unwind_Resume(a1);
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::setProperty(PreFaultedCVPixelBufferPool **a1, CFTypeRef cf1, const __CFDictionary *a3)
{
  uint64_t v3 = 4294954394;
  if (!cf1 || !a3) {
    return v3;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E768]))
  {
    int v7 = (const void *)*MEMORY[0x263F1E810];
    if (*MEMORY[0x263F1E810])
    {
      int v8 = *((_DWORD *)a1 + 13);
      value = 0;
      if (CFDictionaryGetValueIfPresent(a3, v7, (const void **)&value))
      {
        if (!CFNumberGetValue((CFNumberRef)value, kCFNumberIntType, (char *)a1 + 52)) {
          *((_DWORD *)a1 + 13) = v8;
        }
      }
    }
    int v9 = (const void *)*MEMORY[0x263F1E808];
    if (*MEMORY[0x263F1E808])
    {
      int v10 = *((_DWORD *)a1 + 14);
      value = 0;
      if (CFDictionaryGetValueIfPresent(a3, v9, (const void **)&value))
      {
        if (!CFNumberGetValue((CFNumberRef)value, kCFNumberIntType, a1 + 7)) {
          *((_DWORD *)a1 + 14) = v10;
        }
      }
    }
    (*((void (**)(PreFaultedCVPixelBufferPool **))*a1 + 10))(a1);
    return (*((uint64_t (**)(PreFaultedCVPixelBufferPool **, void))*a1 + 11))(a1, *((unsigned int *)a1 + 12));
  }
  if (CFEqual(cf1, @"DecoderPrefaultedCVPixelBufferPoolCapacity"))
  {
    LODWORD(value) = 0;
    CFTypeID v12 = CFGetTypeID(a3);
    if (v12 != CFNumberGetTypeID() || !CFNumberGetValue(a3, kCFNumberSInt32Type, &value)) {
      return 4294954394;
    }
    if ((int)value >= 1)
    {
      int v13 = a1[8];
      if (!v13)
      {
        if (enabledSignpostCategories()) {
          kdebug_trace();
        }
        operator new();
      }
      if (*((void *)v13 + 1) == value) {
        return 0;
      }
      if (PreFaultedCVPixelBufferPool::setCapacity(v13, value))
      {
        if (enabledSignpostCategories()) {
          kdebug_trace();
        }
        return 0;
      }
      return 4294954394;
    }
    if (value) {
      return 4294954394;
    }
    uint64_t v3 = (uint64_t)a1[8];
    if (v3)
    {
      a1[8] = 0;
      if (enabledSignpostCategories()) {
        kdebug_trace();
      }
      int v14 = a1[9];
      if (v14)
      {
        v16[0] = MEMORY[0x263EF8330];
        v16[1] = 0x40000000;
        v16[2] = ___ZN16VideoDecoderBaseI15IcpVideoDecoderE11setPropertyEPK10__CFStringPKv_block_invoke;
        v16[3] = &__block_descriptor_tmp_55;
        v16[4] = v3;
        dispatch_async(v14, v16);
      }
      else
      {
        PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool((PreFaultedCVPixelBufferPool *)v3);
        MEMORY[0x263E5FB40]();
      }
      return 0;
    }
    return v3;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E780])
    || CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E790])
    || CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E788]))
  {
    return 4294954395;
  }
  uint64_t v3 = 4294954395;
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E748])) {
    return v3;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E6F0])) {
    return 4294954395;
  }
  else {
    return 4294954396;
  }
}

void sub_262C8E118(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(exception_object);
    __cxa_end_catch();
    if (enabledSignpostCategories()) {
      JUMPOUT(0x262C8DFC8);
    }
    JUMPOUT(0x262C8DE2CLL);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *IcpVideoDecoder::updateDecodingDimensions(_DWORD *this)
{
  int v1 = this[13];
  if (v1 <= 0)
  {
    int v1 = this[23];
    int v2 = this[14];
    if (v2 > 0)
    {
LABEL_3:
      int v3 = this[12];
      if (v3 > 1983000885) {
        goto LABEL_4;
      }
LABEL_20:
      if (v3 != 846624121 && v3 != 1916022840) {
        goto LABEL_24;
      }
      goto LABEL_12;
    }
  }
  else
  {
    int v2 = this[14];
    if (v2 > 0) {
      goto LABEL_3;
    }
  }
  int v2 = this[24];
  int v3 = this[12];
  if (v3 <= 1983000885) {
    goto LABEL_20;
  }
LABEL_4:
  if (v3 != 1983000886 && v3 != 2033463606 && v3 != 2033463352)
  {
LABEL_24:
    this[22] = 1;
    int v10 = this[24];
    this[13] = this[23];
    this[14] = v10;
    return this;
  }
LABEL_12:
  int v6 = this[23];
  if (v6 >= 8 * v1)
  {
    int v7 = this[24];
    if (v7 >= 8 * v2)
    {
      this[22] = 11;
      int v12 = v6 / 8;
LABEL_36:
      this[13] = v12;
      this[14] = v7 / 8;
      return this;
    }
  }
  if (v6 < 4 * v1) {
    goto LABEL_15;
  }
  int v7 = this[24];
  if (v7 >= 8 * v2)
  {
    this[22] = 10;
    int v12 = v6 / 4;
    goto LABEL_36;
  }
  if (v7 >= 4 * v2)
  {
    this[22] = 9;
    int v11 = v6 / 4;
LABEL_40:
    this[13] = v11;
    this[14] = v7 / 4;
    return this;
  }
LABEL_15:
  if (v6 < 2 * v1) {
    goto LABEL_16;
  }
  int v7 = this[24];
  if (v7 >= 4 * v2)
  {
    this[22] = 8;
    int v11 = v6 / 2;
    goto LABEL_40;
  }
  if (v7 < 2 * v2)
  {
LABEL_16:
    if (v1 <= v6)
    {
      int v15 = this[24];
      if (v15 >= 2 * v2)
      {
        this[22] = 2;
        this[13] = v6;
        if (v15 >= 0) {
          int v16 = v15;
        }
        else {
          int v16 = v15 + 1;
        }
        this[14] = v16 >> 1;
      }
      else
      {
        this[22] = 1;
        this[13] = v6;
        this[14] = v15;
      }
    }
    else
    {
      int v8 = this[24];
      this[22] = 1;
      this[13] = v6;
      this[14] = v8;
    }
    return this;
  }
  this[22] = 6;
  int v13 = v6;
  if (v7 >= 0) {
    int v14 = v7;
  }
  else {
    int v14 = v7 + 1;
  }
  this[13] = v13 / 2;
  this[14] = v14 >> 1;
  return this;
}

uint64_t IcpVideoDecoder::createPixelBufferPool(IcpVideoDecoder *this, int a2)
{
  int valuePtr = a2;
  uint64_t v3 = 100;
  if (!*((void *)this + 13)) {
    uint64_t v3 = 52;
  }
  int v4 = *(_DWORD *)((char *)this + v3);
  int v5 = *((_DWORD *)this + 14);
  int v6 = (CFAllocatorRef *)MEMORY[0x263EFFB08];
  if (a2 && (CFNumberRef v7 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr)) != 0)
  {
    CFNumberRef v8 = v7;
    int v9 = 1;
    CFNumberRef v10 = v7;
  }
  else
  {
    CFNumberRef v10 = (CFNumberRef)(*(uint64_t (**)(IcpVideoDecoder *))(*(void *)this + 96))(this);
    int v9 = 0;
    CFNumberRef v8 = 0;
  }
  int v11 = *((_DWORD *)this + 23) & 0xF;
  BOOL v12 = v11 != 0;
  BOOL v13 = valuePtr != 1983000880;
  int v14 = 16 - v11;
  BOOL v15 = v12 && v13;
  if (v12 && v13) {
    int v16 = 16 - v11;
  }
  else {
    int v16 = 0;
  }
  if (v4 == *((_DWORD *)this + 28))
  {
    char v17 = v9 ^ 1;
    if (v5 != *((_DWORD *)this + 29)) {
      char v17 = 1;
    }
    if ((v17 & 1) == 0 && *((unsigned char *)this + 120) && valuePtr == *((_DWORD *)this + 31) && v16 == *((_DWORD *)this + 32))
    {
      uint64_t v18 = 0;
      if (!v9) {
        return v18;
      }
      goto LABEL_30;
    }
  }
  int v29 = v16;
  CFAllocatorRef v19 = *v6;
  Mutable = CFDictionaryCreateMutable(*v6, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    uint64_t v18 = 4294954392;
    if (!v9) {
      return v18;
    }
    goto LABEL_30;
  }
  int v21 = Mutable;
  CFDictionaryAddValue(Mutable, (const void *)*MEMORY[0x263F04180], v10);
  int v31 = v4;
  CFNumberRef v22 = CFNumberCreate(v19, kCFNumberIntType, &v31);
  if (v22)
  {
    CFNumberRef v23 = v22;
    CFDictionaryAddValue(v21, (const void *)*MEMORY[0x263F04240], v22);
    CFRelease(v23);
  }
  int v31 = v5;
  CFNumberRef v24 = CFNumberCreate(v19, kCFNumberIntType, &v31);
  if (v24)
  {
    CFNumberRef v25 = v24;
    CFDictionaryAddValue(v21, (const void *)*MEMORY[0x263F04118], v24);
    CFRelease(v25);
  }
  if (v15)
  {
    int v31 = v14;
    CFNumberRef v26 = CFNumberCreate(v19, kCFNumberIntType, &v31);
    if (v26)
    {
      CFNumberRef v27 = v26;
      CFDictionaryAddValue(v21, (const void *)*MEMORY[0x263F040F8], v26);
      CFRelease(v27);
    }
  }
  uint64_t v18 = VTDecoderSessionSetPixelBufferAttributes();
  if (!v18)
  {
    *((_DWORD *)this + 28) = v4;
    *((_DWORD *)this + 29) = v5;
    *((unsigned char *)this + 120) = v9;
    *((_DWORD *)this + 31) = valuePtr;
    *((_DWORD *)this + 32) = v29;
    uint64_t v18 = VideoDecoderBase<IcpVideoDecoder>::replaceLocalPixelBufferPool((uint64_t)this);
  }
  CFRelease(v21);
  if (v9) {
LABEL_30:
  }
    CFRelease(v8);
  return v18;
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::replaceLocalPixelBufferPool(uint64_t a1)
{
  if (*(void *)(a1 + 64))
  {
    if (enabledSignpostCategories()) {
      kdebug_trace();
    }
    int v2 = *(PreFaultedCVPixelBufferPool **)(a1 + 64);
    uint64_t v3 = *(NSObject **)(a1 + 72);
    *(void *)(a1 + 64) = 0;
    if (v3)
    {
      block[0] = MEMORY[0x263EF8330];
      block[1] = 0x40000000;
      block[2] = ___ZN16VideoDecoderBaseI15IcpVideoDecoderE27replaceLocalPixelBufferPoolEv_block_invoke;
      block[3] = &__block_descriptor_tmp_56;
      block[4] = v2;
      dispatch_async(v3, block);
    }
    else if (v2)
    {
      PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(v2);
      MEMORY[0x263E5FB40]();
    }
    operator new();
  }
  return 0;
}

void sub_262C8E770(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(exception_object);
    __cxa_end_catch();
    if ((enabledSignpostCategories() & 1) == 0) {
      JUMPOUT(0x262C8E754);
    }
    JUMPOUT(0x262C8E734);
  }
  _Unwind_Resume(exception_object);
}

CFDictionaryRef VideoDecoderBase<IcpVideoDecoder>::createSuggestedQualityOfServiceTier(int a1, int a2)
{
  keys[2] = *(void **)MEMORY[0x263EF8340];
  int v13 = a2;
  int valuePtr = a1;
  int v2 = (void *)*MEMORY[0x263F1E808];
  keys[0] = *(void **)MEMORY[0x263F1E810];
  keys[1] = v2;
  CFAllocatorRef v3 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  int v4 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
  values = v4;
  CFNumberRef v5 = CFNumberCreate(v3, kCFNumberSInt32Type, &v13);
  CFTypeRef cf = v5;
  CFTypeRef v12 = 0;
  if (v4) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    CFDictionaryRef v7 = 0;
    if (v4) {
LABEL_9:
    }
      CFRelease(v4);
  }
  else
  {
    CFDictionaryRef v8 = CFDictionaryCreate(v3, (const void **)keys, (const void **)&values, 2, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    CFDictionaryRef v7 = v8;
    CFTypeRef v12 = v8;
    int v4 = values;
    if (values) {
      goto LABEL_9;
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  int v11 = (const void *)*MEMORY[0x263F1E768];
  if (!v7) {
    return 0;
  }
  CFDictionaryRef v9 = CFDictionaryCreate(v3, &v11, &v12, 1, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  CFRelease(v12);
  return v9;
}

void *IcpVideoDecoder::pixelFormatsOrderedByQuality(IcpVideoDecoder *this)
{
  if (codecTypeIs444(*((_DWORD *)this + 3)))
  {
    if (qword_26A996318 == -1) {
      return (void *)qword_26A9961A8;
    }
    int v2 = &qword_26A996318;
    CFAllocatorRef v3 = &_MergedGlobals;
  }
  else
  {
    if (qword_26A996320 == -1) {
      return (void *)qword_26A9961C0;
    }
    int v2 = &qword_26A996320;
    CFAllocatorRef v3 = &off_26A9961B0;
  }
  dispatch_once_f(v2, v3, (dispatch_function_t)CreatePixelFormatArray::function);
  return v3[2];
}

void CreatePixelFormatArray::function(CreatePixelFormatArray *this, void *a2)
{
}

void *IcpVideoDecoder::pixelFormatsOrderedByPerformance(IcpVideoDecoder *this)
{
  if (codecTypeIs444(*((_DWORD *)this + 3)))
  {
    if (qword_26A996328 == -1) {
      return (void *)qword_26A9961D8;
    }
    int v2 = &qword_26A996328;
    CFAllocatorRef v3 = &off_26A9961C8;
  }
  else
  {
    if (qword_26A996330 == -1) {
      return (void *)qword_26A9961F0;
    }
    int v2 = &qword_26A996330;
    CFAllocatorRef v3 = &off_26A9961E0;
  }
  dispatch_once_f(v2, v3, (dispatch_function_t)CreatePixelFormatArray::function);
  return v3[2];
}

void *IcpVideoDecoder::pixelFormatsWithReducedResolutionSupport(IcpVideoDecoder *this)
{
  if (codecTypeIs444(*((_DWORD *)this + 3)))
  {
    if (qword_26A996338 == -1) {
      return (void *)qword_26A996208;
    }
    int v2 = &qword_26A996338;
    CFAllocatorRef v3 = &off_26A9961F8;
  }
  else
  {
    if (qword_26A996340 == -1) {
      return (void *)qword_26A996220;
    }
    int v2 = &qword_26A996340;
    CFAllocatorRef v3 = &off_26A996210;
  }
  dispatch_once_f(v2, v3, (dispatch_function_t)CreatePixelFormatArray::function);
  return v3[2];
}

void VideoDecoderBase<IcpVideoDecoder>::finalize(void *a1)
{
  int v2 = (const void *)a1[2];
  if (v2)
  {
    CFRelease(v2);
    a1[2] = 0;
  }
  CFAllocatorRef v3 = (PreFaultedCVPixelBufferPool *)a1[8];
  int v4 = a1[9];
  a1[8] = 0;
  if (v4)
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = ___ZN16VideoDecoderBaseI15IcpVideoDecoderE8finalizeEv_block_invoke;
    block[3] = &__block_descriptor_tmp_57;
    block[4] = v3;
    dispatch_async(v4, block);
LABEL_5:
    a1[4] = 0;
    return;
  }
  if (!v3) {
    goto LABEL_5;
  }
  PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(v3);
  MEMORY[0x263E5FB40]();
  a1[4] = 0;
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::operation()
{
  return 0;
}

uint64_t VideoDecoderBase<IcpVideoDecoder>::canAcceptFormatDescription()
{
  return 1;
}

CFArrayRef VideoDecoderBase<IcpVideoDecoder>::copyPixelFormatArray(uint64_t a1, const __CFAllocator *a2, CFTypeRef cf1)
{
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E790]))
  {
    CFArrayRef v6 = (const __CFArray *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1);
  }
  else if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E788]))
  {
    CFArrayRef v6 = (const __CFArray *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 104))(a1);
  }
  else
  {
    if (!CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E748])) {
      return 0;
    }
    CFArrayRef v6 = (const __CFArray *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 112))(a1);
  }

  return CFArrayCreateCopy(a2, v6);
}

CFIndex ___ZL17maxConcurrentJobsv_block_invoke()
{
  Boolean keyExistsAndHasValidFormat = 0;
  CFIndex result = CFPreferencesGetAppIntegerValue(@"MaxConcurrentJobsInProRes", (CFStringRef)*MEMORY[0x263EFFE60], &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    maxConcurrentJobs(void)::s_maxConcurrentJobs = result;
  }
  return result;
}

uint64_t PixelBuffer::getNumBytesPerPixelData(int a1)
{
  if (a1 <= 1953903153)
  {
    if (a1 > 1848848433)
    {
      if (a1 <= 1932812658)
      {
        if (a1 > 1916022839)
        {
          if (a1 != 1916022840)
          {
            if (a1 == 1916036716) {
              return 16;
            }
            return 0;
          }
          return 4;
        }
        if (a1 == 1848848434) {
          return 4;
        }
        int v2 = 1915892016;
        goto LABEL_56;
      }
      if (a1 > 1937126451)
      {
        if (a1 == 1937126452) {
          return 0x400000002;
        }
        if (a1 != 1949589875) {
          return 0;
        }
      }
      else if (a1 != 1932812659)
      {
        if (a1 == 1937125938) {
          return 0x200000002;
        }
        return 0;
      }
      return 0x400000002;
    }
    if (a1 <= 1378955370)
    {
      if (a1 == 32) {
        return 4;
      }
      if (a1 != 846624121)
      {
        int v2 = 1111970369;
        goto LABEL_56;
      }
      return 2;
    }
    if (a1 <= 1647719541)
    {
      if (a1 == 1378955371) {
        return 4;
      }
      int v4 = 1647719521;
LABEL_49:
      if (a1 != v4) {
        return 0;
      }
      return 8;
    }
    if (a1 == 1647719542) {
      return 8;
    }
    int v2 = 1815294002;
  }
  else
  {
    if (a1 <= 2016686641)
    {
      if (a1 <= 1983000885)
      {
        if (a1 <= 1966223669)
        {
          if (a1 != 1953903154)
          {
            int v1 = 1953903668;
            goto LABEL_16;
          }
          return 0x200000002;
        }
        if (a1 != 1966223670)
        {
          if (a1 == 1983000880) {
            return 8;
          }
          return 0;
        }
        return 4;
      }
      if (a1 <= 1999778101)
      {
        if (a1 == 1983000886) {
          return 4;
        }
        int v2 = 1983131704;
        goto LABEL_56;
      }
      if (a1 == 1999778102) {
        return 4;
      }
      int v4 = 1999909174;
      goto LABEL_49;
    }
    if (a1 <= 2033463605)
    {
      if (a1 <= 2016698738)
      {
        if (a1 != 2016686642)
        {
          int v1 = 2016687156;
LABEL_16:
          if (a1 == v1) {
            return 0x400000002;
          }
          return 0;
        }
        return 0x200000002;
      }
      if (a1 != 2016698739)
      {
        int v2 = 2033463352;
        goto LABEL_56;
      }
      return 0x400000002;
    }
    if (a1 <= 2050109749)
    {
      if (a1 == 2033463606) {
        return 8;
      }
      if (a1 != 2037741171) {
        return 0;
      }
      return 2;
    }
    if (a1 == 2050240822) {
      return 8;
    }
    int v2 = 2050109750;
  }
LABEL_56:
  if (a1 == v2) {
    return 4;
  }
  return 0;
}

uint64_t ___ZL18allowAsyncCallbackv_block_invoke()
{
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t result = CFPreferencesGetAppBooleanValue(@"AllowAsyncCallbackInProRes", (CFStringRef)*MEMORY[0x263EFFE60], &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    allowAsyncCallback(void)::s_allowAsyncCallback = result != 0;
  }
  return result;
}

uint64_t ___ZL10drawStripev_block_invoke()
{
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t result = CFPreferencesGetAppBooleanValue(@"DrawStripeInProRes", (CFStringRef)*MEMORY[0x263EFFE60], &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    _MergedGlobals_58 = result != 0;
  }
  return result;
}

void *VideoCodecBase<IcpVideoDecoder>::~VideoCodecBase(void *a1)
{
  *a1 = &unk_270E0FF28;
  int v2 = (const void *)a1[2];
  if (v2) {
    CFRelease(v2);
  }
  CFAllocatorRef v3 = (const void *)a1[3];
  if (v3) {
    CFRelease(v3);
  }
  return a1;
}

void VideoCodecBase<IcpVideoDecoder>::finalize(uint64_t a1)
{
  int v2 = *(const void **)(a1 + 16);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(a1 + 16) = 0;
  }
}

uint64_t VideoCodecBase<IcpVideoDecoder>::copyProperty()
{
  return 4294954396;
}

uint64_t VideoCodecBase<IcpVideoDecoder>::setProperty()
{
  return 4294954396;
}

PreFaultedCVPixelBufferPool *___ZN16VideoDecoderBaseI15IcpVideoDecoderE11setPropertyEPK10__CFStringPKv_block_invoke(uint64_t a1)
{
  uint64_t result = *(PreFaultedCVPixelBufferPool **)(a1 + 32);
  if (result)
  {
    PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(result);
    JUMPOUT(0x263E5FB40);
  }
  return result;
}

PreFaultedCVPixelBufferPool *___ZN16VideoDecoderBaseI15IcpVideoDecoderE27replaceLocalPixelBufferPoolEv_block_invoke(uint64_t a1)
{
  uint64_t result = *(PreFaultedCVPixelBufferPool **)(a1 + 32);
  if (result)
  {
    PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(result);
    JUMPOUT(0x263E5FB40);
  }
  return result;
}

PreFaultedCVPixelBufferPool *___ZN16VideoDecoderBaseI15IcpVideoDecoderE8finalizeEv_block_invoke(uint64_t a1)
{
  uint64_t result = *(PreFaultedCVPixelBufferPool **)(a1 + 32);
  if (result)
  {
    PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(result);
    JUMPOUT(0x263E5FB40);
  }
  return result;
}

uint64_t VideoDecoderBase<PRRVideoDecoder>::createInstance(uint64_t a1, uint64_t a2, void *a3)
{
  if (!a3) {
    return 4294954394;
  }
  if (enabledSignpostCategories()) {
    kdebug_trace();
  }
  VTVideoDecoderGetClassID();
  uint64_t v4 = CMDerivedObjectCreate();
  if (!v4) {
    uint64_t v4 = 4294954389;
  }
  *a3 = 0;
  if (enabledSignpostCategories()) {
    kdebug_trace();
  }
  return v4;
}

void sub_262C8F564(_Unwind_Exception *a1)
{
  MEMORY[0x263E5FB40](v1, 0x10E1C40A2948A7BLL);
  _Unwind_Resume(a1);
}

uint64_t VideoCodecBase<PRRVideoDecoder>::Invalidate()
{
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (DerivedStorage)
  {
    uint64_t v1 = *DerivedStorage;
    if ((enabledSignpostCategories() & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    (*(void (**)(uint64_t))(*(void *)v1 + 48))(v1);
    kdebug_trace();
    goto LABEL_7;
  }
  uint64_t v1 = 0;
  if (enabledSignpostCategories()) {
    goto LABEL_6;
  }
LABEL_3:
  if (!v1)
  {
    uint64_t v2 = 4294954390;
    if ((enabledSignpostCategories() & 1) == 0) {
      return v2;
    }
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 16))(v1);
  if (enabledSignpostCategories())
  {
LABEL_8:
    (*(void (**)(uint64_t))(*(void *)v1 + 48))(v1);
    kdebug_trace();
  }
  return v2;
}

uint64_t VideoCodecBase<PRRVideoDecoder>::Finalize()
{
  DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
  uint64_t v1 = DerivedStorage;
  if (DerivedStorage)
  {
    uint64_t v2 = *DerivedStorage;
    if ((enabledSignpostCategories() & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((enabledSignpostCategories() & 1) == 0)
    {
LABEL_3:
      if (!v2) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 48))(v2);
  kdebug_trace();
LABEL_7:
  (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  *uint64_t v1 = 0;
LABEL_8:
  uint64_t result = enabledSignpostCategories();
  if (result)
  {
    return kdebug_trace();
  }
  return result;
}

CFStringRef VideoCodecBase<PRRVideoDecoder>::CopyDebugDescription(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, @"<%s %p>", PRRVideoDecoder::kClassName, a1);
}

uint64_t VideoCodecBase<PRRVideoDecoder>::CopyProperty()
{
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (!DerivedStorage) {
    return 4294954390;
  }
  uint64_t v1 = *DerivedStorage;
  if (!v1) {
    return 4294954390;
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 32);

  return v2();
}

uint64_t VideoCodecBase<PRRVideoDecoder>::SetProperty()
{
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (!DerivedStorage) {
    return 4294954390;
  }
  uint64_t v1 = *DerivedStorage;
  if (!v1) {
    return 4294954390;
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 40);

  return v2();
}

uint64_t VideoDecoderBase<PRRVideoDecoder>::StartSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 4294954394;
  if (!a1 || !a2 || !a3) {
    return v3;
  }
  VTVideoDecoderGetCMBaseObject();
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (!DerivedStorage)
  {
    uint64_t v7 = 0;
    if ((enabledSignpostCategories() & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v7 = *DerivedStorage;
  if (enabledSignpostCategories()) {
LABEL_6:
  }
    kdebug_trace();
LABEL_7:
  if (!v7)
  {
    uint64_t v3 = 4294954390;
    if ((enabledSignpostCategories() & 1) == 0) {
      return v3;
    }
    goto LABEL_9;
  }
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v7 + 56))(v7, a2, a3);
  if (enabledSignpostCategories()) {
LABEL_9:
  }
    kdebug_trace();
  return v3;
}

uint64_t VideoDecoderBase<PRRVideoDecoder>::DecodeFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = 4294954394;
  if (!a1 || !a2 || !a3) {
    return v5;
  }
  VTVideoDecoderGetCMBaseObject();
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (!DerivedStorage)
  {
    uint64_t v11 = 0;
    if ((enabledSignpostCategories() & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v11 = *DerivedStorage;
  if ((enabledSignpostCategories() & 2) != 0) {
LABEL_6:
  }
    kdebug_trace();
LABEL_7:
  if (!v11)
  {
    uint64_t v5 = 4294954390;
    if ((enabledSignpostCategories() & 2) == 0) {
      return v5;
    }
    goto LABEL_9;
  }
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v11 + 64))(v11, a2, a3, a4, a5);
  if ((enabledSignpostCategories() & 2) != 0) {
LABEL_9:
  }
    kdebug_trace();
  return v5;
}

uint64_t VideoDecoderBase<PRRVideoDecoder>::CopySupportedPropertyDictionary(uint64_t a1, void *a2)
{
  uint64_t result = 4294954394;
  if (a1 && a2)
  {
    VTVideoDecoderGetCMBaseObject();
    DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
    if (DerivedStorage && (uint64_t v6 = *DerivedStorage) != 0)
    {
      uint64_t v7 = *(const void **)(v6 + 24);
      if (v7)
      {
        CFRetain(v7);
        uint64_t result = 0;
        *a2 = *(void *)(v6 + 24);
      }
      else
      {
        return 4294954392;
      }
    }
    else
    {
      return 4294954390;
    }
  }
  return result;
}

uint64_t VideoDecoderBase<PRRVideoDecoder>::CanAcceptFormatDescription(uint64_t a1, uint64_t a2)
{
  uint64_t result = 1;
  if (a1)
  {
    if (a2)
    {
      VTVideoDecoderGetCMBaseObject();
      uint64_t result = CMBaseObjectGetDerivedStorage();
      if (result)
      {
        uint64_t result = *(void *)result;
        if (result) {
          return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 72))(result, a2);
        }
      }
    }
  }
  return result;
}

void PRRVideoDecoder::PRRVideoDecoder(PRRVideoDecoder *this, int a2)
{
  uint64_t v2 = VideoDecoderBase<PRRVideoDecoder>::VideoDecoderBase((uint64_t)this, a2);
  *(void *)uint64_t v2 = &unk_270E10068;
  *(void *)(v2 + 80) = 0;
  *(unsigned char *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = 0;
  *(_DWORD *)(v2 + 92) = 0;
  operator new();
}

void sub_262C8FD74(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  MEMORY[0x263E5FB40](v3, 0xA1C40987D6AD5);
  VideoDecoderBase<PRRVideoDecoder>::~VideoDecoderBase(v1);
  _Unwind_Resume(a1);
}

void sub_262C8FDA4(_Unwind_Exception *a1)
{
  VideoDecoderBase<PRRVideoDecoder>::~VideoDecoderBase(v1);
  _Unwind_Resume(a1);
}

void sub_262C8FDB8(_Unwind_Exception *a1)
{
  VideoDecoderBase<PRRVideoDecoder>::~VideoDecoderBase(v1);
  _Unwind_Resume(a1);
}

uint64_t VideoDecoderBase<PRRVideoDecoder>::VideoDecoderBase(uint64_t a1, int a2)
{
  *(void *)a1 = &unk_270E10320;
  *(unsigned char *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 12) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  CFAllocatorRef v3 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  uint64_t v4 = (const CFDictionaryKeyCallBacks *)MEMORY[0x263EFFF88];
  uint64_t v5 = (const CFDictionaryValueCallBacks *)MEMORY[0x263EFFF90];
  *(void *)(a1 + 24) = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  *(void *)(a1 + 32) = 0;
  *(void *)a1 = &unk_270E10290;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(void *)(a1 + 72) = dispatch_queue_create("PixelBufferPoolDeletion", 0);
  CFDictionaryRef v6 = CFDictionaryCreate(v3, 0, 0, 0, v4, v5);
  if (v6)
  {
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), (const void *)*MEMORY[0x263F1E768], v6);
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), (const void *)*MEMORY[0x263F1E780], v6);
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), (const void *)*MEMORY[0x263F1E6F0], v6);
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), (const void *)*MEMORY[0x263F1E790], v6);
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), (const void *)*MEMORY[0x263F1E788], v6);
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), (const void *)*MEMORY[0x263F1E748], v6);
    CFDictionaryAddValue(*(CFMutableDictionaryRef *)(a1 + 24), @"DecoderPrefaultedCVPixelBufferPoolCapacity", v6);
    CFRelease(v6);
  }
  return a1;
}

void sub_262C8FF60(_Unwind_Exception *a1)
{
  VideoCodecBase<PRRVideoDecoder>::~VideoCodecBase(v1);
  _Unwind_Resume(a1);
}

uint64_t VideoDecoderBase<PRRVideoDecoder>::~VideoDecoderBase(uint64_t a1)
{
  *(void *)a1 = &unk_270E10290;
  uint64_t v2 = *(NSObject **)(a1 + 72);
  if (v2)
  {
    dispatch_sync(v2, &__block_literal_global_100);
    dispatch_release(*(dispatch_object_t *)(a1 + 72));
  }
  CFAllocatorRef v3 = *(PreFaultedCVPixelBufferPool **)(a1 + 64);
  if (v3)
  {
    PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(v3);
    MEMORY[0x263E5FB40]();
  }
  uint64_t v4 = *(const void **)(a1 + 40);
  if (v4) {
    CFRelease(v4);
  }
  *(void *)a1 = &unk_270E10320;
  uint64_t v5 = *(const void **)(a1 + 16);
  if (v5) {
    CFRelease(v5);
  }
  CFDictionaryRef v6 = *(const void **)(a1 + 24);
  if (v6) {
    CFRelease(v6);
  }
  return a1;
}

void PRRVideoDecoder::~PRRVideoDecoder(PRRVideoDecoder *this)
{
  *(void *)this = &unk_270E10068;
  uint64_t v2 = *((void *)this + 19);
  if (v2) {
    dispatch_sync(v2, &__block_literal_global_1);
  }
  CFAllocatorRef v3 = *((void *)this + 20);
  if (v3) {
    dispatch_sync(v3, &__block_literal_global_11_0);
  }
  uint64_t v4 = *((void *)this + 21);
  if (v4) {
    dispatch_sync(v4, &__block_literal_global_14);
  }
  uint64_t v5 = (FrameDecoder *)*((void *)this + 10);
  if (v5)
  {
    FrameDecoder::~FrameDecoder(v5);
    MEMORY[0x263E5FB40]();
  }
  uint64_t v6 = *((void *)this + 16);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *((void *)this + 18);
  if (v7) {
    dispatch_release(v7);
  }
  CFDictionaryRef v8 = *((void *)this + 19);
  if (v8) {
    dispatch_release(v8);
  }
  CFDictionaryRef v9 = *((void *)this + 20);
  if (v9) {
    dispatch_release(v9);
  }
  CFNumberRef v10 = *((void *)this + 21);
  if (v10) {
    dispatch_release(v10);
  }
  uint64_t v11 = *((void *)this + 22);
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }

  VideoDecoderBase<PRRVideoDecoder>::~VideoDecoderBase((uint64_t)this);
}

{
  uint64_t vars8;

  PRRVideoDecoder::~PRRVideoDecoder(this);

  JUMPOUT(0x263E5FB40);
}

uint64_t PRRVideoDecoder::startSession(uint64_t a1, uint64_t a2, CFTypeRef cf)
{
  *(void *)(a1 + 32) = a2;
  uint64_t v5 = *(const void **)(a1 + 16);
  if (v5) {
    CFRelease(v5);
  }
  *(void *)(a1 + 16) = cf;
  if (cf)
  {
    CFRetain(cf);
    uint64_t v6 = *(const opaqueCMFormatDescription **)(a1 + 16);
  }
  else
  {
    uint64_t v6 = 0;
  }
  CMVideoDimensions Dimensions = CMVideoFormatDescriptionGetDimensions(v6);
  *(CMVideoDimensions *)(a1 + 52) = Dimensions;
  *(CMVideoDimensions *)(a1 + 96) = Dimensions;
  CFDictionaryRef DestinationPixelBufferAttributes = (const __CFDictionary *)VTDecoderSessionGetDestinationPixelBufferAttributes();
  CFNumberRef Value = (const __CFNumber *)CFDictionaryGetValue(DestinationPixelBufferAttributes, (const void *)*MEMORY[0x263F04180]);
  if (Value && (CFNumberRef v10 = Value, v11 = CFGetTypeID(Value), v11 == CFNumberGetTypeID()))
  {
    int valuePtr = 0;
    int v12 = CFNumberGetValue(v10, kCFNumberSInt32Type, &valuePtr);
    if (valuePtr != 1651521076 || v12 == 0) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = 1651521076;
    }
  }
  else
  {
    uint64_t v14 = 0;
  }
  *(unsigned char *)(a1 + 112) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 116) = 0xFFFFFFFF00000000;
  *(unsigned char *)(a1 + 124) = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)a1 + 88))(a1, v14)) {
    return 4294954392;
  }
  CVPixelBufferRef pixelBuffer = 0;
  PixelBufferPool = (__CVPixelBufferPool *)VTDecoderSessionGetPixelBufferPool();
  if (CVPixelBufferPoolCreatePixelBuffer(0, PixelBufferPool, &pixelBuffer) || !pixelBuffer)
  {
    CVPixelBufferRelease(pixelBuffer);
    return 4294954392;
  }
  *(_DWORD *)(a1 + 48) = CVPixelBufferGetPixelFormatType(pixelBuffer);
  CFRelease(pixelBuffer);
  char v17 = *(const void **)(a1 + 40);
  if (v17) {
    CFRelease(v17);
  }
  *(void *)(a1 + 40) = PRRVideoDecoder::createSuggestedQualityOfServiceTiers((PRRVideoDecoder *)*(unsigned int *)(a1 + 48), *(_DWORD *)(a1 + 96), *(_DWORD *)(a1 + 100));
  if (!*(void *)(a1 + 80)) {
    operator new();
  }
  int v18 = *(_DWORD *)(a1 + 48);
  BOOL v19 = v18 == 1380411457 || v18 == 1380410945;
  char v20 = v19;
  *(unsigned char *)(a1 + 136) = v20;
  if (v19) {
    intptr_t v21 = 3;
  }
  else {
    intptr_t v21 = 2;
  }
  *(void *)(a1 + 144) = dispatch_semaphore_create(v21);
  *(void *)(a1 + 152) = dispatch_queue_create("PRRDecode1", 0);
  dispatch_queue_t v22 = dispatch_queue_create("PRRDecode2", 0);
  *(void *)(a1 + 160) = v22;
  if (!*(void *)(a1 + 144)) {
    return 4294954392;
  }
  dispatch_queue_t v23 = v22;
  uint64_t result = 4294954392;
  if (*(void *)(a1 + 152) && v23 && (!*(unsigned char *)(a1 + 136) || *(void *)(a1 + 168)))
  {
    uint64_t result = 0;
    *(unsigned char *)(a1 + 8) = 1;
  }
  return result;
}

uint64_t sub_262C90410(_Unwind_Exception *a1, int a2)
{
  MEMORY[0x263E5FB40](v2, 0x1020C40E6F2F0EDLL);
  if (a2 != 1) {
    _Unwind_Resume(a1);
  }
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  return 4294954392;
}

CFArrayRef PRRVideoDecoder::createSuggestedQualityOfServiceTiers(PRRVideoDecoder *this, int a2, int a3)
{
  int v5 = (int)this;
  uint64_t v18 = *MEMORY[0x263EF8340];
  CFTypeRef cf = 0;
  CFTypeRef SuggestedQualityOfServiceTier = 0;
  CFTypeRef v17 = 0;
  values = VideoDecoderBase<IcpVideoDecoder>::createSuggestedQualityOfServiceTier(a2, a3);
  if (v5 == 1380410945 || v5 == 1651521076 || v5 == 1380411457)
  {
    if (a3 >= 0) {
      int v6 = a3;
    }
    else {
      int v6 = a3 + 1;
    }
    if (a3 >= 0) {
      int v7 = a3;
    }
    else {
      int v7 = a3 + 3;
    }
    int v8 = a3 + (a3 < 0 ? 7 : 0);
    if (a2 >= 0) {
      int v9 = a2;
    }
    else {
      int v9 = a2 + 1;
    }
    if (a2 >= 0) {
      int v10 = a2;
    }
    else {
      int v10 = a2 + 3;
    }
    CFTypeRef cf = VideoDecoderBase<IcpVideoDecoder>::createSuggestedQualityOfServiceTier(v9 >> 1, v6 >> 1);
    CFTypeRef SuggestedQualityOfServiceTier = VideoDecoderBase<IcpVideoDecoder>::createSuggestedQualityOfServiceTier(v10 >> 2, v7 >> 2);
    CFTypeRef v17 = VideoDecoderBase<IcpVideoDecoder>::createSuggestedQualityOfServiceTier(a2 / 8, v8 >> 3);
    CFIndex v11 = 4;
  }
  else
  {
    CFIndex v11 = 1;
  }
  CFArrayRef v12 = CFArrayCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const void **)&values, v11, MEMORY[0x263EFFF70]);
  if (values) {
    CFRelease(values);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (SuggestedQualityOfServiceTier) {
    CFRelease(SuggestedQualityOfServiceTier);
  }
  if (v17) {
    CFRelease(v17);
  }
  return v12;
}

uint64_t PRRVideoDecoder::decodeFrame(uint64_t a1, const void *a2, opaqueCMSampleBuffer *a3, char a4, int *a5)
{
  if (!*(unsigned char *)(a1 + 8)) {
    return 4294954393;
  }
  CVPixelBufferRef v114 = 0;
  int v9 = VideoDecoderBase<IcpVideoDecoder>::newCVPixelBufferFromPool(a1, &v114);
  int v10 = v114;
  CVPixelBufferRef v77 = a5;
  v81 = a2;
  if (v9 || !v114)
  {
    CVPixelBufferRelease(v114);
    int BytesPerRow = 0;
    char v14 = 0;
    BOOL v16 = 0;
    CVPixelBufferRef v114 = 0;
    uint64_t v15 = 4294954392;
LABEL_11:
    int v80 = -1;
    goto LABEL_12;
  }
  if (*(unsigned char *)(a1 + 136)) {
    goto LABEL_5;
  }
  CVReturn v37 = CVPixelBufferLockBaseAddress(v114, 0);
  int v10 = v114;
  if (v37)
  {
    CVPixelBufferRelease(v114);
    int BytesPerRow = 0;
    char v14 = 0;
    BOOL v16 = 0;
    CVPixelBufferRef v114 = 0;
    uint64_t v15 = 4294954385;
    goto LABEL_11;
  }
  if (!v114)
  {
    int BytesPerRow = 0;
    char v14 = 0;
    uint64_t v15 = 0;
    BOOL v16 = 1;
    goto LABEL_11;
  }
LABEL_5:
  int PlaneCount = CVPixelBufferGetPlaneCount(v10);
  unsigned int v12 = PlaneCount;
  if (PlaneCount)
  {
    int v80 = PlaneCount;
    if (PlaneCount < 1)
    {
      int BytesPerRow = 0;
      char v14 = 0;
      uint64_t v15 = 0;
      BOOL v16 = 1;
    }
    else
    {
      int BytesPerRowOfPlane = CVPixelBufferGetBytesPerRowOfPlane(v114, 0);
      if (v12 == 1)
      {
        char v14 = 0;
        uint64_t v15 = 0;
        BOOL v16 = 1;
        int BytesPerRow = BytesPerRowOfPlane;
      }
      else
      {
        int v59 = BytesPerRowOfPlane;
        uint64_t v60 = BytesPerRowOfPlane;
        size_t v61 = 1;
        do
        {
          size_t v62 = CVPixelBufferGetBytesPerRowOfPlane(v114, v61);
          BOOL v16 = v62 == v60;
          ++v61;
        }
        while (v62 == v60 && v61 < v12);
        char v14 = 0;
        if (v62 == v60) {
          uint64_t v15 = 0;
        }
        else {
          uint64_t v15 = 4294954385;
        }
        int BytesPerRow = v59;
      }
    }
  }
  else
  {
    int v80 = 0;
    uint64_t v15 = 0;
    char v14 = 1;
    int BytesPerRow = CVPixelBufferGetBytesPerRow(v114);
    BOOL v16 = 1;
  }
LABEL_12:
  if (*(unsigned char *)(a1 + 136))
  {
    if (*(_DWORD *)(a1 + 92))
    {
      int v19 = 1651521076;
    }
    else
    {
      if (qword_26A996380 != -1) {
        dispatch_once(&qword_26A996380, &__block_literal_global_17_0);
      }
      if (_MergedGlobals_1) {
        int v19 = 1647392369;
      }
      else {
        int v19 = 1651519798;
      }
    }
  }
  else
  {
    int v19 = *(_DWORD *)(a1 + 48);
  }
  *(_OWORD *)&v109[12] = 0u;
  if (v19 == 1647392369) {
    uint64_t v20 = 4;
  }
  else {
    uint64_t v20 = 1;
  }
  uint64_t v83 = v20;
  long long v108 = 0uLL;
  *(_OWORD *)v109 = 0uLL;
  long long v107 = 0uLL;
  *(void *)&v109[28] = 4;
  *(_DWORD *)&v109[36] = 0xFFFF;
  __asm { FMOV            V0.2S, #1.0 }
  *(void *)&v109[40] = _D0;
  *(void *)&long long v112 = 0x421000003F800000;
  long long v110 = xmmword_262CDE500;
  long long v111 = unk_262CDE510;
  *((void *)&v112 + 1) = 0x2D00000000;
  SharedDataBuffer::SharedDataBuffer((SharedDataBuffer *)&v113);
  int v79 = BytesPerRow;
  v82 = a3;
  if (!v16)
  {
    char v78 = 0;
    uint64_t v32 = v15;
    int v33 = (const void *)MEMORY[0x263EF8868];
    if (a4) {
      goto LABEL_80;
    }
    goto LABEL_39;
  }
  int v25 = 0;
  int v26 = *(_DWORD *)(a1 + 96);
  int v27 = v26 + 15;
  BOOL v40 = v26 < -15;
  int v28 = v26 + 30;
  if (!v40) {
    int v28 = v27;
  }
  if (v19 == 1647392369) {
    int v29 = 2;
  }
  else {
    int v29 = 1;
  }
  int v30 = v28 >> 4;
  if (v19 == 1647392369) {
    char v31 = 3;
  }
  else {
    char v31 = 4;
  }
  if (v19 <= 1647392368)
  {
    if (v19 == 1380410945)
    {
      int v25 = 16;
      goto LABEL_49;
    }
    if (v19 != 1380411457) {
      goto LABEL_49;
    }
LABEL_42:
    int v25 = 8;
    goto LABEL_49;
  }
  if (v19 == 1647392369 || v19 == 1651519798)
  {
    int v25 = 2;
    goto LABEL_49;
  }
  if (v19 == 1651521076) {
    goto LABEL_42;
  }
LABEL_49:
  int v38 = *(_DWORD *)(a1 + 52);
  int v39 = v25 * (v30 << v31 >> *(_DWORD *)(a1 + 92));
  if (*(unsigned char *)(a1 + 136)) {
    BOOL v40 = 1;
  }
  else {
    BOOL v40 = BytesPerRow < v39;
  }
  char v41 = v40;
  int v42 = *(_DWORD *)(a1 + 56) / v29;
  char v78 = v41;
  if (v40)
  {
    int v43 = *(_DWORD *)(a1 + 52);
    v44 = a3;
    int v45 = &v107;
    uint64_t v46 = v83;
    do
    {
      *(void *)int v45 = MemoryBufferCache::obtainMemoryBuffer(*(MemoryBufferCache **)(a1 + 128), v39 * v42);
      int v45 = (long long *)((char *)v45 + 8);
      --v46;
    }
    while (v46);
    a3 = v44;
    int v38 = v43;
  }
  else
  {
    if (v14)
    {
      char v47 = (void **)&v107;
      uint64_t v48 = v83;
      do
      {
        *v47++ = CVPixelBufferGetBaseAddress(v114);
        --v48;
      }
      while (v48);
    }
    else
    {
      for (size_t i = 0; i != v83; ++i)
        *((void *)&v107 + i) = CVPixelBufferGetBaseAddressOfPlane(v114, i);
    }
    int v39 = BytesPerRow;
  }
  *(_DWORD *)v109 = v39;
  *(_DWORD *)&v109[4] = v19;
  *(void *)&v109[8] = *(void *)(a1 + 52);
  *(_DWORD *)&v109[16] = v38 / v29;
  *(_DWORD *)&v109[20] = v42;
  BOOL v50 = (void)v107 != 0;
  if ((void)v107)
  {
    if (v19 == 1647392369)
    {
      BOOL v50 = *((void *)&v107 + 1) != 0;
      if (*((void *)&v107 + 1))
      {
        BOOL v50 = (void)v108 != 0;
        if ((void)v108) {
          BOOL v50 = *((void *)&v108 + 1) != 0;
        }
      }
    }
  }
  if (!v50)
  {
    uint64_t v32 = 4294954392;
    int v33 = (const void *)MEMORY[0x263EF8868];
    if (a4) {
      goto LABEL_80;
    }
    goto LABEL_39;
  }
  if (!a3) {
    goto LABEL_77;
  }
  if (CMSampleBufferGetNumSamples(a3) != 1) {
    goto LABEL_77;
  }
  size_t SampleSize = CMSampleBufferGetSampleSize(a3, 0);
  DataBuffer = CMSampleBufferGetDataBuffer(a3);
  if (!SampleSize) {
    goto LABEL_77;
  }
  uint64_t v53 = DataBuffer;
  if (CMBlockBufferGetDataLength(DataBuffer) < SampleSize) {
    goto LABEL_77;
  }
  size_t v64 = 0;
  __p = 0;
  p_p = 0;
  unint64_t v105 = 0;
  while (1)
  {
    dataPointerOut = 0;
    lengthAtOffsetOut[0] = 0;
    if (CMBlockBufferGetDataPointer(v53, v64, lengthAtOffsetOut, 0, &dataPointerOut)) {
      break;
    }
    uint64_t v65 = dataPointerOut;
    if (lengthAtOffsetOut[0] >= SampleSize) {
      size_t v66 = SampleSize;
    }
    else {
      size_t v66 = lengthAtOffsetOut[0];
    }
    uint64_t v67 = p_p;
    if ((unint64_t)p_p < v105)
    {
      void *p_p = dataPointerOut;
      v67[1] = v66;
      p_p = v67 + 2;
      SampleSize -= v66;
      if (!SampleSize) {
        goto LABEL_126;
      }
      goto LABEL_104;
    }
    int v68 = __p;
    uint64_t v69 = ((char *)p_p - (unsigned char *)__p) >> 4;
    unint64_t v70 = v69 + 1;
    if ((unint64_t)(v69 + 1) >> 60) {
      std::vector<__CVBuffer *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v71 = v105 - (void)__p;
    if ((uint64_t)(v105 - (void)__p) >> 3 > v70) {
      unint64_t v70 = v71 >> 3;
    }
    if ((unint64_t)v71 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v72 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v72 = v70;
    }
    if (!v72)
    {
      v73 = 0;
      uint64_t v74 = (char **)(16 * v69);
      *uint64_t v74 = dataPointerOut;
      v74[1] = (char *)v66;
      int v75 = (char **)(16 * v69);
      if (v67 == v68) {
        goto LABEL_123;
      }
      do
      {
LABEL_121:
        *((_OWORD *)v75 - 1) = *((_OWORD *)v67 - 1);
        v75 -= 2;
        v67 -= 2;
      }
      while (v67 != v68);
      uint64_t v67 = __p;
      goto LABEL_123;
    }
    if (v72 >> 60) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    v73 = (char *)operator new(16 * v72);
    uint64_t v74 = (char **)&v73[16 * v69];
    *uint64_t v74 = v65;
    v74[1] = (char *)v66;
    int v75 = v74;
    if (v67 != v68) {
      goto LABEL_121;
    }
LABEL_123:
    v76 = v74 + 2;
    __p = v75;
    p_p = v74 + 2;
    unint64_t v105 = (unint64_t)&v73[16 * v72];
    if (v67) {
      operator delete(v67);
    }
    p_p = v76;
    SampleSize -= v66;
    a3 = v82;
    if (!SampleSize) {
LABEL_126:
    }
      operator new();
LABEL_104:
    v64 += v66;
  }
  if (__p)
  {
    p_p = __p;
    operator delete(__p);
  }
LABEL_77:
  uint64_t v32 = 4294954387;
  int v33 = (const void *)MEMORY[0x263EF8868];
  if ((a4 & 1) == 0)
  {
LABEL_39:
    CFArrayRef v34 = v33;
    char v35 = a4;
    int v36 = 0;
    goto LABEL_84;
  }
LABEL_80:
  if (a3)
  {
    char v35 = a4;
    CFArrayRef v34 = (const void *)MEMORY[0x263EF8838];
    CFRetain(a3);
  }
  else
  {
    CFArrayRef v34 = (const void *)MEMORY[0x263EF8838];
    char v35 = a4;
  }
  int v36 = 1;
LABEL_84:
  int v54 = *(_DWORD *)(a1 + 92);
  char v55 = *(unsigned char *)(a1 + 88);
  __p = 0;
  p_p = &__p;
  unint64_t v105 = 0x2000000000;
  uint64_t v18 = v32;
  int v106 = v32;
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(a1 + 144), 0xFFFFFFFFFFFFFFFFLL);
  uint64_t v56 = *(void *)(a1 + 152);
  v85[0] = MEMORY[0x263EF8330];
  v85[1] = 1174405120;
  v85[2] = ___ZN15PRRVideoDecoder11decodeFrameEP25OpaqueVTVideoDecoderFrameP20opaqueCMSampleBufferjPj_block_invoke;
  v85[3] = &unk_270E10130;
  v85[5] = a1;
  long long v90 = *(_OWORD *)&v109[32];
  long long v91 = v110;
  long long v92 = v111;
  long long v93 = v112;
  long long v86 = v107;
  long long v87 = v108;
  long long v88 = *(_OWORD *)v109;
  long long v89 = *(_OWORD *)&v109[16];
  SharedDataBuffer::SharedDataBuffer((SharedDataBuffer *)v94, (CFDataRef *)&v113);
  int v57 = v35 & 1;
  v85[4] = &__p;
  v94[1] = 0;
  v94[2] = v34;
  char v100 = v55;
  char v101 = v57;
  int v95 = v54;
  int v96 = v83;
  char v102 = v78;
  int v97 = v80;
  int v98 = v79;
  v94[3] = v82;
  v94[4] = v114;
  v94[5] = v81;
  int v99 = v36;
  ((void (*)(uint64_t, void *))v34)(v56, v85);
  if (!v57) {
    uint64_t v18 = *((unsigned int *)p_p + 6);
  }
  if (v77) {
    *CVPixelBufferRef v77 = v36;
  }
  SharedDataBuffer::~SharedDataBuffer(v94);
  _Block_object_dispose(&__p, 8);
  SharedDataBuffer::~SharedDataBuffer(&v113);
  return v18;
}

void sub_262C90E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, const void **a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *__p,uint64_t a50)
{
  MEMORY[0x263E5FB40](v50, 0x1070C40DB7B3284);
  if (__p)
  {
    operator delete(__p);
    SharedDataBuffer::~SharedDataBuffer(a16);
    _Unwind_Resume(a1);
  }
  SharedDataBuffer::~SharedDataBuffer(a16);
  _Unwind_Resume(a1);
}

void ___ZN15PRRVideoDecoder11decodeFrameEP25OpaqueVTVideoDecoderFrameP20opaqueCMSampleBufferjPj_block_invoke(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  long long v3 = *(_OWORD *)(a1 + 128);
  long long v38 = *(_OWORD *)(a1 + 112);
  long long v39 = v3;
  long long v4 = *(_OWORD *)(a1 + 160);
  long long v40 = *(_OWORD *)(a1 + 144);
  long long v41 = v4;
  long long v5 = *(_OWORD *)(a1 + 64);
  long long v34 = *(_OWORD *)(a1 + 48);
  long long v35 = v5;
  long long v6 = *(_OWORD *)(a1 + 96);
  long long v36 = *(_OWORD *)(a1 + 80);
  long long v37 = v6;
  SharedDataBuffer::SharedDataBuffer((SharedDataBuffer *)v42, (CFDataRef *)(a1 + 176));
  if (!*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    if ((enabledSignpostCategories() & 0x10000) != 0) {
      kdebug_trace();
    }
    uint64_t v7 = *(void *)(v2 + 80);
    int v8 = *(int8x16_t **)(a1 + 184);
    int8x16_t v9 = v8[1];
    v33[0] = *v8;
    v33[1] = v9;
    int v10 = PRRFrameDecoder::decode(v7, v33, (uint64_t)&v34, *(unsigned int *)(a1 + 224), *(unsigned __int8 *)(a1 + 244));
    if ((enabledSignpostCategories() & 0x10000) != 0) {
      kdebug_trace();
    }
    if (v10 < 0)
    {
      if (v10 == -2) {
        int v11 = -12909;
      }
      else {
        int v11 = -12911;
      }
      if (v10 == -3) {
        int v11 = -12902;
      }
      *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v11;
    }
  }
  uint64_t v12 = *(void *)(v2 + 160);
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 1174405120;
  CFTypeRef v18[2] = ___ZN15PRRVideoDecoder11decodeFrameEP25OpaqueVTVideoDecoderFrameP20opaqueCMSampleBufferjPj_block_invoke_2;
  v18[3] = &unk_270E100F8;
  uint64_t v13 = *(void *)(a1 + 184);
  char v14 = *(void (**)(uint64_t, void *))(a1 + 192);
  char v31 = *(unsigned char *)(a1 + 245);
  uint64_t v15 = *(void *)(a1 + 200);
  v18[6] = v13;
  v18[7] = v15;
  v18[4] = *(void *)(a1 + 32);
  v18[5] = v2;
  long long v21 = v36;
  long long v22 = v37;
  long long v19 = v34;
  long long v20 = v35;
  long long v25 = v40;
  long long v26 = v41;
  long long v23 = v38;
  long long v24 = v39;
  SharedDataBuffer::SharedDataBuffer((SharedDataBuffer *)&v27, (CFDataRef *)v42);
  char v32 = *(unsigned char *)(a1 + 246);
  long long v16 = *(_OWORD *)(a1 + 208);
  *(void *)&long long v17 = vrev64q_s32(*(int32x4_t *)(a1 + 224)).u64[0];
  *((void *)&v17 + 1) = *(void *)(a1 + 232);
  long long v29 = v17;
  long long v28 = v16;
  int v30 = *(_DWORD *)(a1 + 240);
  v14(v12, v18);
  SharedDataBuffer::~SharedDataBuffer(&v27);
  SharedDataBuffer::~SharedDataBuffer(v42);
}

void sub_262C910F4(_Unwind_Exception *a1)
{
  SharedDataBuffer::~SharedDataBuffer(v2);
  SharedDataBuffer::~SharedDataBuffer(v1);
  _Unwind_Resume(a1);
}

void sub_262C91110(_Unwind_Exception *a1)
{
  SharedDataBuffer::~SharedDataBuffer(v1);
  _Unwind_Resume(a1);
}

void sub_262C91124(_Unwind_Exception *a1)
{
  SharedDataBuffer::~SharedDataBuffer(v1);
  _Unwind_Resume(a1);
}

void ___ZN15PRRVideoDecoder11decodeFrameEP25OpaqueVTVideoDecoderFrameP20opaqueCMSampleBufferjPj_block_invoke_2(uint64_t a1)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v2 = *(Bytestream **)(a1 + 48);
  if (v2)
  {
    Bytestream::destroy(v2);
    uint64_t v4 = *(void *)(a1 + 48);
    if (v4) {
      MEMORY[0x263E5FB40](v4, 0x1070C40DB7B3284);
    }
  }
  if (*(unsigned char *)(a1 + 236))
  {
    long long v5 = *(const void **)(a1 + 56);
    if (v5) {
      CFRelease(v5);
    }
  }
  if (!*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    if (qword_26A996388 == -1)
    {
      if (!byte_26A996379) {
        goto LABEL_8;
      }
    }
    else
    {
      dispatch_once(&qword_26A996388, &__block_literal_global_27);
      if (!byte_26A996379) {
        goto LABEL_8;
      }
    }
    if (*(int *)(a1 + 216) >= 1)
    {
      uint64_t v27 = 0;
      int v28 = *(_DWORD *)(a1 + 116);
      int v29 = (v28 >> 1) - 8;
      BOOL v30 = v28 <= 16;
      if (v28 >= 16) {
        int v28 = 16;
      }
      if (v30) {
        int v29 = 0;
      }
      int v31 = *(_DWORD *)(a1 + 96);
      uint64_t v32 = v29 * v31;
      size_t v33 = v28 * v31;
      do
        memset((void *)(*(void *)(a1 + 64 + 8 * v27++) + v32), 128, v33);
      while (v27 < *(int *)(a1 + 216));
    }
  }
LABEL_8:
  if (*(unsigned char *)(v3 + 136)) {
    return;
  }
  if (!*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    int v6 = *(_DWORD *)(a1 + 220);
    uint64_t v7 = *(__CVBuffer **)(a1 + 200);
    *(_DWORD *)int valuePtr = *(_DWORD *)(a1 + 124);
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFNumberRef v9 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
    if (v9)
    {
      CVBufferSetAttachment(v7, @"ProResRAW_BayerPattern", v9, kCVAttachmentMode_ShouldPropagate);
      CFRelease(v9);
    }
    *(_DWORD *)int valuePtr = *(_DWORD *)(a1 + 128);
    CFNumberRef v10 = CFNumberCreate(v8, kCFNumberSInt32Type, valuePtr);
    if (v10)
    {
      CVBufferSetAttachment(v7, @"ProResRAW_BlackLevel", v10, kCVAttachmentMode_ShouldPropagate);
      CFRelease(v10);
    }
    *(_DWORD *)int valuePtr = *(_DWORD *)(a1 + 132);
    CFNumberRef v11 = CFNumberCreate(v8, kCFNumberSInt32Type, valuePtr);
    if (v11)
    {
      CVBufferSetAttachment(v7, @"ProResRAW_WhiteLevel", v11, kCVAttachmentMode_ShouldPropagate);
      CFRelease(v11);
    }
    *(_DWORD *)int valuePtr = *(_DWORD *)(a1 + 136);
    CFNumberRef v12 = CFNumberCreate(v8, kCFNumberFloat32Type, valuePtr);
    if (v12)
    {
      CVBufferSetAttachment(v7, @"ProResRAW_WhiteBalanceRedFactor", v12, kCVAttachmentMode_ShouldPropagate);
      CFRelease(v12);
    }
    *(_DWORD *)int valuePtr = *(_DWORD *)(a1 + 140);
    CFNumberRef v13 = CFNumberCreate(v8, kCFNumberFloat32Type, valuePtr);
    if (v13)
    {
      CVBufferSetAttachment(v7, @"ProResRAW_WhiteBalanceBlueFactor", v13, kCVAttachmentMode_ShouldPropagate);
      CFRelease(v13);
    }
    long long v14 = *(_OWORD *)(a1 + 160);
    *(_OWORD *)int valuePtr = *(_OWORD *)(a1 + 144);
    *(_OWORD *)&valuePtr[16] = v14;
    int v50 = *(_DWORD *)(a1 + 176);
    CFDataRef v15 = CFDataCreate(v8, valuePtr, 36);
    if (v15)
    {
      CVBufferSetAttachment(v7, @"ProResRAW_ColorMatrix", v15, kCVAttachmentMode_ShouldPropagate);
      CFRelease(v15);
    }
    *(_DWORD *)int valuePtr = *(_DWORD *)(a1 + 180);
    CFNumberRef v16 = CFNumberCreate(v8, kCFNumberFloat32Type, valuePtr);
    if (v16)
    {
      CVBufferSetAttachment(v7, @"ProResRAW_GainFactor", v16, kCVAttachmentMode_ShouldPropagate);
      CFRelease(v16);
    }
    *(_DWORD *)int valuePtr = *(_DWORD *)(a1 + 184);
    CFNumberRef v17 = CFNumberCreate(v8, kCFNumberSInt32Type, valuePtr);
    if (v17)
    {
      CVBufferSetAttachment(v7, @"ProResRAW_WhiteBalanceCCT", v17, kCVAttachmentMode_ShouldPropagate);
      CFRelease(v17);
    }
    *(_DWORD *)int valuePtr = *(_DWORD *)(a1 + 188);
    CFNumberRef v18 = CFNumberCreate(v8, kCFNumberSInt32Type, valuePtr);
    if (v18)
    {
      CVBufferSetAttachment(v7, @"ProResRAW_LargestDCQSS", v18, kCVAttachmentMode_ShouldPropagate);
      CFRelease(v18);
    }
    if ((v6 - 1) <= 2)
    {
      getSenselSitingOffsets(*(_DWORD *)(a1 + 124), v6, (float *)valuePtr);
      CFDataRef v21 = CFDataCreate(v8, valuePtr, 32);
      if (v21)
      {
        CVBufferSetAttachment(v7, @"ProResRAW_SenselSitingOffsets", v21, kCVAttachmentMode_ShouldPropagate);
        CFRelease(v21);
      }
    }
    *(float *)v19.i32 = (float)(1 << v6);
    v20.i32[0] = *(_DWORD *)(a1 + 120);
    *(float32x4_t *)int valuePtr = vdivq_f32(vcvtq_f32_u32(vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(v20))), (float32x4_t)vdupq_lane_s32(v19, 0));
    CFDataRef v22 = CFDataCreate(v8, valuePtr, 16);
    if (v22)
    {
      CVBufferSetAttachment(v7, @"ProResRAW_RecommendedCrop", v22, kCVAttachmentMode_ShouldPropagate);
      CFRelease(v22);
    }
    CFData = (const void *)SharedDataBuffer::getCFData((SharedDataBuffer *)(a1 + 192));
    if (CFData) {
      CVBufferSetAttachment(v7, @"ProResRAW_MetadataExtension", CFData, kCVAttachmentMode_ShouldPropagate);
    }
  }
  if (*(unsigned char *)(a1 + 237))
  {
    LODWORD(v24) = *(_DWORD *)(a1 + 216);
    if (!*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
    {
      if ((int)v24 < 1) {
        goto LABEL_63;
      }
      int64_t v34 = 0;
      do
      {
        long long v35 = *(char **)(a1 + 64 + 8 * v34);
        long long v36 = *(__CVBuffer **)(a1 + 200);
        if (*(_DWORD *)(a1 + 224)) {
          BaseAddressOfPlane = (char *)CVPixelBufferGetBaseAddressOfPlane(v36, v34);
        }
        else {
          BaseAddressOfPlane = (char *)CVPixelBufferGetBaseAddress(v36);
        }
        long long v38 = BaseAddressOfPlane;
        if (*(int *)(a1 + 116) >= 1)
        {
          int v39 = 0;
          LODWORD(v40) = *(_DWORD *)(a1 + 228);
          do
          {
            memcpy(v38, v35, (int)v40);
            v35 += *(int *)(a1 + 96);
            uint64_t v40 = *(int *)(a1 + 228);
            v38 += v40;
            ++v39;
          }
          while (v39 < *(_DWORD *)(a1 + 116));
        }
        ++v34;
        int64_t v24 = *(int *)(a1 + 216);
      }
      while (v34 < v24);
    }
    if ((int)v24 >= 1)
    {
      uint64_t v25 = 0;
      do
      {
        long long v26 = *(unsigned __int8 **)(a1 + 64 + 8 * v25);
        if (v26)
        {
          MemoryBufferCache::returnMemoryBuffer(*(MemoryBufferCache **)(v3 + 128), v26);
          LODWORD(v24) = *(_DWORD *)(a1 + 216);
        }
        ++v25;
      }
      while (v25 < (int)v24);
    }
  }
LABEL_63:
  long long v41 = *(__CVBuffer **)(a1 + 200);
  if (v41)
  {
    CVPixelBufferUnlockBaseAddress(v41, 0);
    int v42 = *(__CVBuffer **)(a1 + 200);
  }
  else
  {
    int v42 = 0;
  }
  if (qword_26A996390 == -1)
  {
    if (byte_26A99637A) {
      goto LABEL_68;
    }
  }
  else
  {
    dispatch_once(&qword_26A996390, &__block_literal_global_69);
    if (byte_26A99637A)
    {
LABEL_68:
      if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_DEFAULT))
      {
        OSType PixelFormatType = CVPixelBufferGetPixelFormatType(v42);
        if (PixelFormatType == 32)
        {
          strcpy((char *)__p, "32(ARGB)");
          char v44 = 8;
        }
        else
        {
          LODWORD(__p[0]) = bswap32(PixelFormatType);
          BYTE4(__p[0]) = 0;
          char v44 = 4;
        }
        char v48 = v44;
        size_t Width = CVPixelBufferGetWidth(v42);
        size_t Height = CVPixelBufferGetHeight(v42);
        *(_DWORD *)int valuePtr = 136315650;
        *(void *)&valuePtr[4] = __p;
        *(_WORD *)&valuePtr[12] = 2048;
        *(void *)&valuePtr[14] = Width;
        *(_WORD *)&valuePtr[22] = 2048;
        *(void *)&valuePtr[24] = Height;
        _os_log_impl(&dword_262C88000, &_os_log_internal, OS_LOG_TYPE_DEFAULT, "PRRVideoDecoder: Emitting a buffer to VTDecoderSession: %s %ldx%ld\n", valuePtr, 0x20u);
        if (v48 < 0) {
          operator delete(__p[0]);
        }
      }
    }
  }
  VTDecoderSessionEmitDecodedFrame();
  CVPixelBufferRelease(v42);
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(v3 + 144));
}

void sub_262C91834(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

__n128 __copy_helper_block_e8_64c20_ZTS14PRRPixelBuffer(_OWORD *a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 64);
  long long v3 = *(_OWORD *)(a2 + 80);
  long long v4 = *(_OWORD *)(a2 + 112);
  a1[6] = *(_OWORD *)(a2 + 96);
  a1[7] = v4;
  a1[4] = v2;
  a1[5] = v3;
  long long v5 = *(_OWORD *)(a2 + 128);
  long long v6 = *(_OWORD *)(a2 + 144);
  long long v7 = *(_OWORD *)(a2 + 176);
  a1[10] = *(_OWORD *)(a2 + 160);
  a1[11] = v7;
  a1[8] = v5;
  a1[9] = v6;
  SharedDataBuffer::SharedDataBuffer((SharedDataBuffer *)(a1 + 12), (CFDataRef *)(a2 + 192));
  return result;
}

void __destroy_helper_block_e8_64c20_ZTS14PRRPixelBuffer(uint64_t a1)
{
}

__n128 __copy_helper_block_e8_48c20_ZTS14PRRPixelBuffer(_OWORD *a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 48);
  long long v3 = *(_OWORD *)(a2 + 64);
  long long v4 = *(_OWORD *)(a2 + 96);
  a1[5] = *(_OWORD *)(a2 + 80);
  a1[6] = v4;
  a1[3] = v2;
  a1[4] = v3;
  long long v5 = *(_OWORD *)(a2 + 112);
  long long v6 = *(_OWORD *)(a2 + 128);
  long long v7 = *(_OWORD *)(a2 + 160);
  a1[9] = *(_OWORD *)(a2 + 144);
  a1[10] = v7;
  a1[7] = v5;
  a1[8] = v6;
  SharedDataBuffer::SharedDataBuffer((SharedDataBuffer *)(a1 + 11), (CFDataRef *)(a2 + 176));
  return result;
}

void __destroy_helper_block_e8_48c20_ZTS14PRRPixelBuffer(uint64_t a1)
{
}

uint64_t PRRVideoDecoder::invalidate(PRRVideoDecoder *this)
{
  long long v2 = *((void *)this + 19);
  if (v2) {
    dispatch_sync(v2, &__block_literal_global_1);
  }
  long long v3 = *((void *)this + 20);
  if (v3) {
    dispatch_sync(v3, &__block_literal_global_11_0);
  }
  long long v4 = *((void *)this + 21);
  if (v4) {
    dispatch_sync(v4, &__block_literal_global_14);
  }
  *((unsigned char *)this + 8) = 0;
  return 0;
}

uint64_t VideoCodecBase<PRRVideoDecoder>::invalidate(uint64_t a1)
{
  *(unsigned char *)(a1 + 8) = 0;
  return 0;
}

uint64_t PRRVideoDecoder::copyProperty(PRRVideoDecoder *this, CFTypeRef cf1, const __CFAllocator *a3, __CFDictionary **a4)
{
  uint64_t v4 = 4294954394;
  if (!cf1 || !a4) {
    return v4;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E798]))
  {
    uint64_t v13 = 0;
    long long v14 = &v13;
    uint64_t v15 = 0x2000000000;
    int v16 = 0;
    CFNumberRef v9 = *((void *)this + 19);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = ___ZN15PRRVideoDecoder12copyPropertyEPK10__CFStringPK13__CFAllocatorPv_block_invoke;
    block[3] = &unk_2655BBF08;
    block[4] = &v13;
    void block[5] = this;
    dispatch_sync(v9, block);
    int valuePtr = *((_DWORD *)v14 + 6);
    CFNumberRef v10 = CFNumberCreate(a3, kCFNumberSInt32Type, &valuePtr);
    *a4 = v10;
    if (v10) {
      uint64_t v4 = 0;
    }
    else {
      uint64_t v4 = 4294954392;
    }
    _Block_object_dispose(&v13, 8);
    return v4;
  }

  return VideoDecoderBase<PRRVideoDecoder>::copyProperty((uint64_t)this, cf1, a3, a4);
}

void sub_262C91A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ___ZN15PRRVideoDecoder12copyPropertyEPK10__CFStringPK13__CFAllocatorPv_block_invoke(uint64_t a1)
{
  uint64_t result = FrameDecoder::getNumThreads(*(FrameDecoder **)(*(void *)(a1 + 40) + 80));
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

uint64_t VideoDecoderBase<PRRVideoDecoder>::copyProperty(uint64_t a1, CFTypeRef cf1, const __CFAllocator *a3, __CFDictionary **a4)
{
  uint64_t result = 4294954394;
  if (cf1 && a4)
  {
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E768]))
    {
      Mutable = CFDictionaryCreateMutable(a3, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (Mutable)
      {
        int valuePtr = *(_DWORD *)(a1 + 52);
        CFNumberRef v10 = CFNumberCreate(a3, kCFNumberIntType, &valuePtr);
        if (v10)
        {
          CFNumberRef v11 = v10;
          CFDictionaryAddValue(Mutable, (const void *)*MEMORY[0x263F1E810], v10);
          CFRelease(v11);
        }
        int v19 = *(_DWORD *)(a1 + 56);
        CFNumberRef v12 = CFNumberCreate(a3, kCFNumberIntType, &v19);
        if (v12)
        {
          CFNumberRef v13 = v12;
          CFDictionaryAddValue(Mutable, (const void *)*MEMORY[0x263F1E808], v12);
          CFRelease(v13);
        }
        uint64_t result = 0;
        *a4 = Mutable;
      }
      else
      {
        uint64_t result = 4294954385;
        *a4 = 0;
      }
    }
    else
    {
      if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E780]))
      {
        CFArrayRef v14 = *(const __CFArray **)(a1 + 40);
        if (v14) {
          CFArrayRef Copy = CFArrayCreateCopy(a3, v14);
        }
        else {
          CFArrayRef Copy = 0;
        }
      }
      else if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E790]) {
             || CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E788])
      }
             || CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E748]))
      {
        CFArrayRef Copy = (CFArrayRef)(*(uint64_t (**)(uint64_t, const __CFAllocator *, CFTypeRef))(*(void *)a1 + 120))(a1, a3, cf1);
      }
      else
      {
        if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E6F0]))
        {
          uint64_t result = 0;
          *a4 = (__CFDictionary *)*MEMORY[0x263EFFB38];
          return result;
        }
        if (!CFEqual(cf1, @"DecoderPrefaultedCVPixelBufferPoolCapacity")) {
          return 4294954396;
        }
        uint64_t v16 = *(void *)(a1 + 64);
        if (v16) {
          LODWORD(v16) = *(_DWORD *)(v16 + 8);
        }
        int v17 = v16;
        CFArrayRef Copy = CFNumberCreate(a3, kCFNumberSInt32Type, &v17);
      }
      *a4 = Copy;
      if (Copy) {
        return 0;
      }
      else {
        return 4294954385;
      }
    }
  }
  return result;
}

uint64_t PRRVideoDecoder::setProperty(PRRVideoDecoder *this, CFTypeRef cf1, const void *a3)
{
  if (CFEqual(cf1, @"kVTCodecPropertyKey_DecodeInformationOnly"))
  {
    CFTypeID v6 = CFGetTypeID(a3);
    if (v6 == CFBooleanGetTypeID())
    {
      *((unsigned char *)this + 88) = CFBooleanGetValue((CFBooleanRef)a3) != 0;
      return 0;
    }
    else
    {
      return 4294954394;
    }
  }
  else if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E798]))
  {
    uint64_t v14 = 0;
    uint64_t v15 = &v14;
    uint64_t v16 = 0x2000000000;
    int v17 = 0;
    int valuePtr = 0;
    if (a3
      && (CFTypeID v8 = CFGetTypeID(a3), v8 == CFNumberGetTypeID())
      && CFNumberGetValue((CFNumberRef)a3, kCFNumberSInt32Type, &valuePtr)
      && valuePtr >= 1)
    {
      CFNumberRef v9 = *((void *)this + 19);
      block[0] = MEMORY[0x263EF8330];
      block[1] = 0x40000000;
      block[2] = ___ZN15PRRVideoDecoder11setPropertyEPK10__CFStringPKv_block_invoke;
      block[3] = &unk_2655BBF30;
      int v12 = valuePtr;
      block[4] = &v14;
      void block[5] = this;
      dispatch_sync(v9, block);
      uint64_t v10 = *((unsigned int *)v15 + 6);
    }
    else
    {
      uint64_t v10 = 4294954394;
      *((_DWORD *)v15 + 6) = -12902;
    }
    _Block_object_dispose(&v14, 8);
    return v10;
  }
  else
  {
    return VideoDecoderBase<PRRVideoDecoder>::setProperty((PreFaultedCVPixelBufferPool **)this, cf1, (const __CFDictionary *)a3);
  }
}

void sub_262C91F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ___ZN15PRRVideoDecoder11setPropertyEPK10__CFStringPKv_block_invoke(uint64_t a1)
{
  uint64_t result = FrameDecoder::getNumThreads(*(FrameDecoder **)(*(void *)(a1 + 40) + 80));
  if (*(_DWORD *)(a1 + 48) != result) {
    operator new();
  }
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
  return result;
}

void sub_262C92028(_Unwind_Exception *a1, int a2)
{
  MEMORY[0x263E5FB40](v3, 0x1020C40E6F2F0EDLL);
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    *(_DWORD *)(*(void *)(*(void *)(v2 + 32) + 8) + 24) = -12904;
    __cxa_end_catch();
    if (!*(_DWORD *)(*(void *)(*(void *)(v2 + 32) + 8) + 24)) {
      JUMPOUT(0x262C91FF0);
    }
    JUMPOUT(0x262C91F98);
  }
  _Unwind_Resume(a1);
}

uint64_t VideoDecoderBase<PRRVideoDecoder>::setProperty(PreFaultedCVPixelBufferPool **a1, CFTypeRef cf1, const __CFDictionary *a3)
{
  uint64_t v3 = 4294954394;
  if (!cf1 || !a3) {
    return v3;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E768]))
  {
    long long v7 = (const void *)*MEMORY[0x263F1E810];
    if (*MEMORY[0x263F1E810])
    {
      int v8 = *((_DWORD *)a1 + 13);
      value = 0;
      if (CFDictionaryGetValueIfPresent(a3, v7, (const void **)&value))
      {
        if (!CFNumberGetValue((CFNumberRef)value, kCFNumberIntType, (char *)a1 + 52)) {
          *((_DWORD *)a1 + 13) = v8;
        }
      }
    }
    CFNumberRef v9 = (const void *)*MEMORY[0x263F1E808];
    if (*MEMORY[0x263F1E808])
    {
      int v10 = *((_DWORD *)a1 + 14);
      value = 0;
      if (CFDictionaryGetValueIfPresent(a3, v9, (const void **)&value))
      {
        if (!CFNumberGetValue((CFNumberRef)value, kCFNumberIntType, a1 + 7)) {
          *((_DWORD *)a1 + 14) = v10;
        }
      }
    }
    (*((void (**)(PreFaultedCVPixelBufferPool **))*a1 + 10))(a1);
    return (*((uint64_t (**)(PreFaultedCVPixelBufferPool **, void))*a1 + 11))(a1, *((unsigned int *)a1 + 12));
  }
  if (CFEqual(cf1, @"DecoderPrefaultedCVPixelBufferPoolCapacity"))
  {
    LODWORD(value) = 0;
    CFTypeID v12 = CFGetTypeID(a3);
    if (v12 != CFNumberGetTypeID() || !CFNumberGetValue(a3, kCFNumberSInt32Type, &value)) {
      return 4294954394;
    }
    if ((int)value >= 1)
    {
      CFNumberRef v13 = a1[8];
      if (!v13)
      {
        if (enabledSignpostCategories()) {
          kdebug_trace();
        }
        operator new();
      }
      if (*((void *)v13 + 1) == value) {
        return 0;
      }
      if (PreFaultedCVPixelBufferPool::setCapacity(v13, value))
      {
        if (enabledSignpostCategories()) {
          kdebug_trace();
        }
        return 0;
      }
      return 4294954394;
    }
    if (value) {
      return 4294954394;
    }
    uint64_t v3 = (uint64_t)a1[8];
    if (v3)
    {
      a1[8] = 0;
      if (enabledSignpostCategories()) {
        kdebug_trace();
      }
      uint64_t v14 = a1[9];
      if (v14)
      {
        v16[0] = MEMORY[0x263EF8330];
        v16[1] = 0x40000000;
        v16[2] = ___ZN16VideoDecoderBaseI15PRRVideoDecoderE11setPropertyEPK10__CFStringPKv_block_invoke;
        v16[3] = &__block_descriptor_tmp_101;
        v16[4] = v3;
        dispatch_async(v14, v16);
      }
      else
      {
        PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool((PreFaultedCVPixelBufferPool *)v3);
        MEMORY[0x263E5FB40]();
      }
      return 0;
    }
    return v3;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E780])
    || CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E790])
    || CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E788]))
  {
    return 4294954395;
  }
  uint64_t v3 = 4294954395;
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E748])) {
    return v3;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E6F0])) {
    return 4294954395;
  }
  else {
    return 4294954396;
  }
}

void sub_262C924A8(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(exception_object);
    __cxa_end_catch();
    if (enabledSignpostCategories()) {
      JUMPOUT(0x262C92358);
    }
    JUMPOUT(0x262C921BCLL);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *PRRVideoDecoder::updateDecodingDimensions(_DWORD *this)
{
  int v1 = this[13];
  if (v1 > 0)
  {
    int v2 = this[14];
    if (v2 > 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  int v1 = this[24];
  int v2 = this[14];
  if (v2 <= 0) {
LABEL_3:
  }
    int v2 = this[25];
LABEL_4:
  int v3 = this[12];
  if (v3 == 1380410945 || v3 == 1651521076 || v3 == 1380411457)
  {
    int v6 = this[24];
    if (v6 >= 8 * v1 && (int v7 = this[25], v7 >= 8 * v2))
    {
      this[23] = 3;
      this[13] = v6 / 8;
      this[14] = v7 / 8;
    }
    else if (v6 >= 4 * v1 && (int v8 = this[25], v8 >= 4 * v2))
    {
      this[23] = 2;
      this[13] = v6 / 4;
      this[14] = v8 / 4;
    }
    else if (v6 >= 2 * v1)
    {
      int v11 = this[25];
      if (v11 >= 2 * v2)
      {
        this[23] = 1;
        int v12 = v6;
        if (v11 >= 0) {
          int v13 = v11;
        }
        else {
          int v13 = v11 + 1;
        }
        this[13] = v12 / 2;
        this[14] = v13 >> 1;
      }
      else
      {
        this[23] = 0;
        this[13] = v6;
        this[14] = v11;
      }
    }
    else
    {
      int v9 = this[25];
      this[23] = 0;
      this[13] = v6;
      this[14] = v9;
    }
  }
  else
  {
    this[23] = 0;
    int v10 = this[25];
    this[13] = this[24];
    this[14] = v10;
  }
  return this;
}

uint64_t PRRVideoDecoder::createPixelBufferPool(PRRVideoDecoder *this, int a2)
{
  int v3 = *((_DWORD *)this + 13);
  int v31 = *((_DWORD *)this + 14);
  int valuePtr = a2;
  uint64_t v4 = (CFAllocatorRef *)MEMORY[0x263EFFB08];
  if (a2 && (CFNumberRef v5 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr)) != 0)
  {
    CFNumberRef v6 = v5;
    int v7 = 1;
    CFNumberRef v8 = v5;
  }
  else
  {
    CFNumberRef v8 = (CFNumberRef)(*(uint64_t (**)(PRRVideoDecoder *))(*(void *)this + 128))(this);
    int v7 = 0;
    CFNumberRef v6 = 0;
  }
  BOOL v9 = (*((_DWORD *)this + 24) & 0xF) != 0;
  BOOL v10 = valuePtr != 1983000880;
  int v11 = 16 - (*((_DWORD *)this + 24) & 0xF);
  BOOL v12 = v9 && v10;
  if (v9 && v10) {
    int v13 = 16 - (*((_DWORD *)this + 24) & 0xF);
  }
  else {
    int v13 = 0;
  }
  int v30 = v13;
  if (useIOSurface(void)::s_predicate == -1)
  {
    if (useIOSurface(void)::s_useIOSurface) {
      goto LABEL_10;
    }
  }
  else
  {
    dispatch_once(&useIOSurface(void)::s_predicate, &__block_literal_global_75);
    if (useIOSurface(void)::s_useIOSurface)
    {
LABEL_10:
      CFDictionaryRef v14 = CFDictionaryCreate(*v4, 0, 0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      int v15 = v14 != 0;
      if (v3 != *((_DWORD *)this + 26)) {
        goto LABEL_23;
      }
      goto LABEL_14;
    }
  }
  CFDictionaryRef v14 = 0;
  int v15 = 0;
  if (v3 != *((_DWORD *)this + 26)) {
    goto LABEL_23;
  }
LABEL_14:
  char v16 = v7 ^ 1;
  if (v31 != *((_DWORD *)this + 27)) {
    char v16 = 1;
  }
  if ((v16 & 1) == 0
    && *((unsigned char *)this + 112)
    && valuePtr == *((_DWORD *)this + 29)
    && v30 == *((_DWORD *)this + 30)
    && *((unsigned __int8 *)this + 124) == v15)
  {
    uint64_t v17 = 0;
    if (!v14) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
LABEL_23:
  char v29 = v15;
  CFAllocatorRef v18 = *v4;
  Mutable = CFDictionaryCreateMutable(*v4, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    uint64_t v17 = 0xFFFFFFFFLL;
    if (!v14) {
      goto LABEL_42;
    }
LABEL_41:
    CFRelease(v14);
    goto LABEL_42;
  }
  uint8x8_t v20 = Mutable;
  CFDictionaryAddValue(Mutable, (const void *)*MEMORY[0x263F04180], v8);
  int v33 = v3;
  CFNumberRef v21 = CFNumberCreate(v18, kCFNumberIntType, &v33);
  if (v21)
  {
    CFNumberRef v22 = v21;
    CFDictionaryAddValue(v20, (const void *)*MEMORY[0x263F04240], v21);
    CFRelease(v22);
  }
  int v33 = v31;
  CFNumberRef v23 = CFNumberCreate(v18, kCFNumberIntType, &v33);
  if (v23)
  {
    CFNumberRef v24 = v23;
    CFDictionaryAddValue(v20, (const void *)*MEMORY[0x263F04118], v23);
    CFRelease(v24);
  }
  if (v12)
  {
    int v33 = v11;
    CFNumberRef v25 = CFNumberCreate(v18, kCFNumberIntType, &v33);
    if (v25)
    {
      CFNumberRef v26 = v25;
      CFDictionaryAddValue(v20, (const void *)*MEMORY[0x263F040F8], v25);
      CFRelease(v26);
    }
  }
  if (v14) {
    CFDictionaryAddValue(v20, (const void *)*MEMORY[0x263F04130], v14);
  }
  if (VTDecoderSessionSetPixelBufferAttributes())
  {
    uint64_t v17 = 0xFFFFFFFFLL;
  }
  else
  {
    int v27 = valuePtr;
    *((_DWORD *)this + 26) = v3;
    *((_DWORD *)this + 27) = v31;
    *((unsigned char *)this + 112) = v7;
    *((_DWORD *)this + 29) = v27;
    *((_DWORD *)this + 30) = v30;
    *((unsigned char *)this + 124) = v29;
    if (VideoDecoderBase<PRRVideoDecoder>::replaceLocalPixelBufferPool((uint64_t)this)) {
      uint64_t v17 = 0xFFFFFFFFLL;
    }
    else {
      uint64_t v17 = 0;
    }
  }
  CFRelease(v20);
  if (v14) {
    goto LABEL_41;
  }
LABEL_42:
  if (v7) {
    CFRelease(v6);
  }
  return v17;
}

uint64_t VideoDecoderBase<PRRVideoDecoder>::replaceLocalPixelBufferPool(uint64_t a1)
{
  if (*(void *)(a1 + 64))
  {
    if (enabledSignpostCategories()) {
      kdebug_trace();
    }
    int v2 = *(PreFaultedCVPixelBufferPool **)(a1 + 64);
    int v3 = *(NSObject **)(a1 + 72);
    *(void *)(a1 + 64) = 0;
    if (v3)
    {
      block[0] = MEMORY[0x263EF8330];
      block[1] = 0x40000000;
      block[2] = ___ZN16VideoDecoderBaseI15PRRVideoDecoderE27replaceLocalPixelBufferPoolEv_block_invoke;
      block[3] = &__block_descriptor_tmp_102;
      block[4] = v2;
      dispatch_async(v3, block);
    }
    else if (v2)
    {
      PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(v2);
      MEMORY[0x263E5FB40]();
    }
    operator new();
  }
  return 0;
}

void sub_262C92B04(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    __cxa_begin_catch(exception_object);
    __cxa_end_catch();
    if ((enabledSignpostCategories() & 1) == 0) {
      JUMPOUT(0x262C92AE8);
    }
    JUMPOUT(0x262C92AC8);
  }
  _Unwind_Resume(exception_object);
}

uint64_t PRRVideoDecoder::allPixelFormatsOrderedByPreference(PRRVideoDecoder *this)
{
  if (PRRVideoDecoder::allPixelFormatsOrderedByPreference(void)::pred != -1) {
    dispatch_once_f(&PRRVideoDecoder::allPixelFormatsOrderedByPreference(void)::pred, &PRRVideoDecoder::allPixelFormatsOrderedByPreference(void)::sCreatePixelFormatArrayByQuality, (dispatch_function_t)CreatePixelFormatArray::function);
  }
  return qword_26A996240;
}

uint64_t PRRVideoDecoder::pixelFormatsOrderedByQuality(PRRVideoDecoder *this)
{
  if (PRRVideoDecoder::pixelFormatsOrderedByQuality(void)::pred != -1) {
    dispatch_once_f(&PRRVideoDecoder::pixelFormatsOrderedByQuality(void)::pred, &PRRVideoDecoder::pixelFormatsOrderedByQuality(void)::sCreatePixelFormatArrayByQuality, (dispatch_function_t)CreatePixelFormatArray::function);
  }
  return qword_26A996258;
}

uint64_t PRRVideoDecoder::pixelFormatsOrderedByPerformance(PRRVideoDecoder *this)
{
  if (PRRVideoDecoder::pixelFormatsOrderedByPerformance(void)::pred != -1) {
    dispatch_once_f(&PRRVideoDecoder::pixelFormatsOrderedByPerformance(void)::pred, &PRRVideoDecoder::pixelFormatsOrderedByPerformance(void)::sCreatePixelFormatArrayByPerformance, (dispatch_function_t)CreatePixelFormatArray::function);
  }
  return qword_26A996270;
}

uint64_t PRRVideoDecoder::pixelFormatsWithReducedResolutionSupport(PRRVideoDecoder *this)
{
  if (PRRVideoDecoder::pixelFormatsWithReducedResolutionSupport(void)::pred != -1) {
    dispatch_once_f(&PRRVideoDecoder::pixelFormatsWithReducedResolutionSupport(void)::pred, &PRRVideoDecoder::pixelFormatsWithReducedResolutionSupport(void)::sCreatePixelFormatArrayLowResSupport, (dispatch_function_t)CreatePixelFormatArray::function);
  }
  return qword_26A996288;
}

void VideoDecoderBase<PRRVideoDecoder>::finalize(void *a1)
{
  int v2 = (const void *)a1[2];
  if (v2)
  {
    CFRelease(v2);
    a1[2] = 0;
  }
  int v3 = (PreFaultedCVPixelBufferPool *)a1[8];
  uint64_t v4 = a1[9];
  a1[8] = 0;
  if (v4)
  {
    block[0] = MEMORY[0x263EF8330];
    block[1] = 0x40000000;
    block[2] = ___ZN16VideoDecoderBaseI15PRRVideoDecoderE8finalizeEv_block_invoke;
    block[3] = &__block_descriptor_tmp_103;
    block[4] = v3;
    dispatch_async(v4, block);
LABEL_5:
    a1[4] = 0;
    return;
  }
  if (!v3) {
    goto LABEL_5;
  }
  PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(v3);
  MEMORY[0x263E5FB40]();
  a1[4] = 0;
}

uint64_t VideoDecoderBase<PRRVideoDecoder>::operation()
{
  return 0;
}

uint64_t VideoDecoderBase<PRRVideoDecoder>::canAcceptFormatDescription()
{
  return 1;
}

CFArrayRef VideoDecoderBase<PRRVideoDecoder>::copyPixelFormatArray(uint64_t a1, const __CFAllocator *a2, CFTypeRef cf1)
{
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E790]))
  {
    CFArrayRef v6 = (const __CFArray *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1);
  }
  else if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E788]))
  {
    CFArrayRef v6 = (const __CFArray *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 104))(a1);
  }
  else
  {
    if (!CFEqual(cf1, (CFTypeRef)*MEMORY[0x263F1E748])) {
      return 0;
    }
    CFArrayRef v6 = (const __CFArray *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 112))(a1);
  }

  return CFArrayCreateCopy(a2, v6);
}

void ___ZL23intermediatePixelFormatv_block_invoke()
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  Boolean keyExistsAndHasValidFormat = 0;
  AppIntegerCFNumberRef Value = CFPreferencesGetAppIntegerValue(@"IntermediatePixelFormatInProResRAW", (CFStringRef)*MEMORY[0x263EFFE60], &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat)
  {
    uint64_t v1 = AppIntegerValue;
    _MergedGlobals_1 = AppIntegerValue == 1;
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_DEFAULT))
    {
      if (v1 == 1) {
        unsigned int v2 = 1647392369;
      }
      else {
        unsigned int v2 = 1651519798;
      }
      LODWORD(__p) = bswap32(v2);
      BYTE4(__p) = 0;
      char v4 = 4;
      *(_DWORD *)buf = 136315138;
      p_p = &__p;
      _os_log_impl(&dword_262C88000, &_os_log_internal, OS_LOG_TYPE_DEFAULT, "PRRVideoDecoder: Setting intermediate format to: %s\n", buf, 0xCu);
      if (v4 < 0) {
        operator delete(__p);
      }
    }
  }
}

uint64_t ___ZL10drawStripev_block_invoke_0()
{
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t result = CFPreferencesGetAppBooleanValue(@"DrawStripeInProResRAW", (CFStringRef)*MEMORY[0x263EFFE60], &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    byte_26A996379 = result != 0;
  }
  return result;
}

uint64_t ___ZL13enableLoggingv_block_invoke()
{
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t result = CFPreferencesGetAppBooleanValue(@"EnableLoggingInProResRAW", (CFStringRef)*MEMORY[0x263EFFE60], &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    byte_26A99637A = result != 0;
  }
  return result;
}

uint64_t ___ZL12useIOSurfacev_block_invoke()
{
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t result = CFPreferencesGetAppBooleanValue(@"UseIOSurfaceInProResRAW", (CFStringRef)*MEMORY[0x263EFFE60], &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    useIOSurface(void)::s_useIOSurface = result != 0;
  }
  return result;
}

void *VideoCodecBase<PRRVideoDecoder>::~VideoCodecBase(void *a1)
{
  *a1 = &unk_270E10320;
  unsigned int v2 = (const void *)a1[2];
  if (v2) {
    CFRelease(v2);
  }
  int v3 = (const void *)a1[3];
  if (v3) {
    CFRelease(v3);
  }
  return a1;
}

void VideoCodecBase<PRRVideoDecoder>::finalize(uint64_t a1)
{
  unsigned int v2 = *(const void **)(a1 + 16);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(a1 + 16) = 0;
  }
}

uint64_t VideoCodecBase<PRRVideoDecoder>::copyProperty()
{
  return 4294954396;
}

uint64_t VideoCodecBase<PRRVideoDecoder>::setProperty()
{
  return 4294954396;
}

PreFaultedCVPixelBufferPool *___ZN16VideoDecoderBaseI15PRRVideoDecoderE11setPropertyEPK10__CFStringPKv_block_invoke(uint64_t a1)
{
  uint64_t result = *(PreFaultedCVPixelBufferPool **)(a1 + 32);
  if (result)
  {
    PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(result);
    JUMPOUT(0x263E5FB40);
  }
  return result;
}

PreFaultedCVPixelBufferPool *___ZN16VideoDecoderBaseI15PRRVideoDecoderE27replaceLocalPixelBufferPoolEv_block_invoke(uint64_t a1)
{
  uint64_t result = *(PreFaultedCVPixelBufferPool **)(a1 + 32);
  if (result)
  {
    PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(result);
    JUMPOUT(0x263E5FB40);
  }
  return result;
}

PreFaultedCVPixelBufferPool *___ZN16VideoDecoderBaseI15PRRVideoDecoderE8finalizeEv_block_invoke(uint64_t a1)
{
  uint64_t result = *(PreFaultedCVPixelBufferPool **)(a1 + 32);
  if (result)
  {
    PreFaultedCVPixelBufferPool::~PreFaultedCVPixelBufferPool(result);
    JUMPOUT(0x263E5FB40);
  }
  return result;
}

uint64_t BitstreamReader::initialize(uint64_t this, const unsigned __int8 *a2, unsigned int a3)
{
  if (a3 > 3)
  {
    unsigned int v5 = *(_DWORD *)a2;
    a2 += 4;
    unsigned int v4 = a3 - 4;
    *(_DWORD *)(this + 40) = 0;
    *(void *)(this + 4) = bswap32(v5);
    if ((a2 & 3) == 0) {
      goto LABEL_12;
    }
  }
  else if (a3)
  {
    int v3 = *a2 << 24;
    if (a3 != 1)
    {
      v3 |= a2[1] << 16;
      if (a3 != 2) {
        v3 |= a2[2] << 8;
      }
    }
    unsigned int v4 = 0;
    a2 += a3;
    *(_DWORD *)(this + 40) = 32 - 8 * a3;
    *(_DWORD *)(this + 4) = v3;
    *(_DWORD *)(this + 8) = 0;
    if ((a2 & 3) == 0) {
      goto LABEL_12;
    }
  }
  else
  {
    unsigned int v4 = 0;
    *(_DWORD *)(this + 40) = 32;
    *(_DWORD *)(this + 4) = 0;
    *(_DWORD *)(this + 8) = 0;
    if ((a2 & 3) == 0)
    {
LABEL_12:
      int v8 = 0;
      goto LABEL_21;
    }
  }
  int v6 = a2 & 3;
  uint64_t v7 = (4 - v6);
  if (v7 > v4) {
    goto LABEL_12;
  }
  if (a3 <= 4) {
    int v9 = 4;
  }
  else {
    int v9 = a3;
  }
  int v10 = v9 + v6;
  int v8 = *a2 << 24;
  if (v6 != 3)
  {
    v8 |= a2[1] << 16;
    if (v6 != 2)
    {
      v8 |= a2[2] << 8;
      if (v6 != 1) {
        v8 |= a2[3];
      }
    }
  }
  a2 += v7;
  unsigned int v4 = v10 - 8;
  *(_DWORD *)(this + 8) = 32 - 8 * v6;
LABEL_21:
  *(_DWORD *)this = v8;
  *(void *)(this + 16) = a2;
  *(void *)(this + 24) = &a2[v4 & 0xFFFFFFFC];
  *(void *)(this + 32) = &a2[v4];
  return this;
}

double DiscreteCosineTransform::idct_2x1(DiscreteCosineTransform *this, __int16 *a2, __int16 *a3, __int16 *a4, const __int16 *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9963A0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v40 = this;
    int v30 = a2;
    long long v35 = a4;
    char v25 = (char)a3;
    int v15 = __cxa_guard_acquire(&qword_26A9963A0);
    a2 = (__int16 *)v30;
    a4 = v35;
    LOBYTE(a3) = v25;
    int v16 = v15;
    this = v40;
    if (v16)
    {
      _MergedGlobals_2 = 0x3FEF6297CFF75CB0;
      __cxa_guard_release(&qword_26A9963A0);
      this = v40;
      a2 = (__int16 *)v30;
      a4 = v35;
      LOBYTE(a3) = v25;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9963B0, memory_order_acquire) & 1) == 0)
  {
    long long v41 = this;
    int v31 = a2;
    long long v36 = a4;
    char v26 = (char)a3;
    int v17 = __cxa_guard_acquire(&qword_26A9963B0);
    a2 = (__int16 *)v31;
    a4 = v36;
    LOBYTE(a3) = v26;
    int v18 = v17;
    this = v41;
    if (v18)
    {
      qword_26A9963A8 = 0x3FEA9B66290EA1A3;
      __cxa_guard_release(&qword_26A9963B0);
      this = v41;
      a2 = (__int16 *)v31;
      a4 = v36;
      LOBYTE(a3) = v26;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9963C0, memory_order_acquire) & 1) == 0)
  {
    int v42 = this;
    uint64_t v32 = a2;
    long long v37 = a4;
    char v27 = (char)a3;
    int v19 = __cxa_guard_acquire(&qword_26A9963C0);
    a2 = (__int16 *)v32;
    a4 = v37;
    LOBYTE(a3) = v27;
    int v20 = v19;
    this = v42;
    if (v20)
    {
      qword_26A9963B8 = 0x3FE6A09E667F3BCDLL;
      __cxa_guard_release(&qword_26A9963C0);
      this = v42;
      a2 = (__int16 *)v32;
      a4 = v37;
      LOBYTE(a3) = v27;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9963D0, memory_order_acquire) & 1) == 0)
  {
    int v43 = this;
    int v33 = a2;
    long long v38 = a4;
    char v28 = (char)a3;
    int v21 = __cxa_guard_acquire(&qword_26A9963D0);
    a2 = (__int16 *)v33;
    a4 = v38;
    LOBYTE(a3) = v28;
    int v22 = v21;
    this = v43;
    if (v22)
    {
      qword_26A9963C8 = 0x3FE1C73B39AE68C9;
      __cxa_guard_release(&qword_26A9963D0);
      this = v43;
      a2 = (__int16 *)v33;
      a4 = v38;
      LOBYTE(a3) = v28;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9963E0, memory_order_acquire) & 1) == 0)
  {
    char v44 = this;
    int64_t v34 = a2;
    int v39 = a4;
    char v29 = (char)a3;
    int v23 = __cxa_guard_acquire(&qword_26A9963E0);
    a2 = (__int16 *)v34;
    a4 = v39;
    LOBYTE(a3) = v29;
    int v24 = v23;
    this = v44;
    if (v24)
    {
      qword_26A9963D8 = 0x3FC8F8B83C69A60CLL;
      __cxa_guard_release(&qword_26A9963E0);
      this = v44;
      a2 = (__int16 *)v34;
      a4 = v39;
      LOBYTE(a3) = v29;
    }
  }
  double v5 = *(double *)&qword_26A9963B8
     + *(double *)&qword_26A9963B8
     + *(double *)&qword_26A9963B8
     + *(double *)&qword_26A9963B8;
  double v6 = v5 * (double)((*a4 * *(__int16 *)this) >> 1);
  double v7 = v6 + v6;
  double v8 = v5 * (double)((a4[1] * *((__int16 *)this + 1)) >> 1);
  double v9 = v8 + v8;
  double v10 = *(double *)&_MergedGlobals_2
      + *(double *)&qword_26A9963A8
      + *(double *)&qword_26A9963C8
      + *(double *)&qword_26A9963D8;
  double v11 = v10 * v9 + v5 * v7;
  double v12 = v5 * v7 - v10 * v9;
  double v13 = (double)(1 << (char)a3) * 0.00000381469727;
  *a2 = (int)rint(v13 * v11);
  double result = rint(v13 * v12);
  a2[1] = (int)result;
  return result;
}

double DiscreteCosineTransform::idct_1x2(DiscreteCosineTransform *this, __int16 *a2, __int16 *a3, __int16 *a4, const __int16 *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9963F0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v40 = this;
    int v30 = a2;
    long long v35 = a4;
    char v25 = (char)a3;
    int v15 = __cxa_guard_acquire(&qword_26A9963F0);
    a2 = (__int16 *)v30;
    a4 = v35;
    LOBYTE(a3) = v25;
    int v16 = v15;
    this = v40;
    if (v16)
    {
      qword_26A9963E8 = 0x3FEF6297CFF75CB0;
      __cxa_guard_release(&qword_26A9963F0);
      this = v40;
      a2 = (__int16 *)v30;
      a4 = v35;
      LOBYTE(a3) = v25;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996400, memory_order_acquire) & 1) == 0)
  {
    long long v41 = this;
    int v31 = a2;
    long long v36 = a4;
    char v26 = (char)a3;
    int v17 = __cxa_guard_acquire(&qword_26A996400);
    a2 = (__int16 *)v31;
    a4 = v36;
    LOBYTE(a3) = v26;
    int v18 = v17;
    this = v41;
    if (v18)
    {
      qword_26A9963F8 = 0x3FEA9B66290EA1A3;
      __cxa_guard_release(&qword_26A996400);
      this = v41;
      a2 = (__int16 *)v31;
      a4 = v36;
      LOBYTE(a3) = v26;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996410, memory_order_acquire) & 1) == 0)
  {
    int v42 = this;
    uint64_t v32 = a2;
    long long v37 = a4;
    char v27 = (char)a3;
    int v19 = __cxa_guard_acquire(&qword_26A996410);
    a2 = (__int16 *)v32;
    a4 = v37;
    LOBYTE(a3) = v27;
    int v20 = v19;
    this = v42;
    if (v20)
    {
      qword_26A996408 = 0x3FE6A09E667F3BCDLL;
      __cxa_guard_release(&qword_26A996410);
      this = v42;
      a2 = (__int16 *)v32;
      a4 = v37;
      LOBYTE(a3) = v27;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996420, memory_order_acquire) & 1) == 0)
  {
    int v43 = this;
    int v33 = a2;
    long long v38 = a4;
    char v28 = (char)a3;
    int v21 = __cxa_guard_acquire(&qword_26A996420);
    a2 = (__int16 *)v33;
    a4 = v38;
    LOBYTE(a3) = v28;
    int v22 = v21;
    this = v43;
    if (v22)
    {
      qword_26A996418 = 0x3FE1C73B39AE68C9;
      __cxa_guard_release(&qword_26A996420);
      this = v43;
      a2 = (__int16 *)v33;
      a4 = v38;
      LOBYTE(a3) = v28;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996430, memory_order_acquire) & 1) == 0)
  {
    char v44 = this;
    int64_t v34 = a2;
    int v39 = a4;
    char v29 = (char)a3;
    int v23 = __cxa_guard_acquire(&qword_26A996430);
    a2 = (__int16 *)v34;
    a4 = v39;
    LOBYTE(a3) = v29;
    int v24 = v23;
    this = v44;
    if (v24)
    {
      qword_26A996428 = 0x3FC8F8B83C69A60CLL;
      __cxa_guard_release(&qword_26A996430);
      this = v44;
      a2 = (__int16 *)v34;
      a4 = v39;
      LOBYTE(a3) = v29;
    }
  }
  double v5 = (double)((*a4 * *(__int16 *)this) >> 1);
  double v6 = (double)((a4[8] * *((__int16 *)this + 1)) >> 1);
  double v7 = *(double *)&qword_26A996408
     + *(double *)&qword_26A996408
     + *(double *)&qword_26A996408
     + *(double *)&qword_26A996408;
  double v8 = *(double *)&qword_26A9963E8
     + *(double *)&qword_26A9963F8
     + *(double *)&qword_26A996418
     + *(double *)&qword_26A996428;
  double v9 = v8 * v6 + v7 * v5;
  double v10 = v7 * v5 - v8 * v6;
  double v11 = v7 * v9 + v7 * v9;
  double v12 = v7 * v10 + v7 * v10;
  double v13 = (double)(1 << (char)a3) * 0.00000381469727;
  *a2 = (int)rint(v13 * v11);
  double result = rint(v13 * v12);
  a2[1] = (int)result;
  return result;
}

double DiscreteCosineTransform::idct_1x1(DiscreteCosineTransform *this, __int16 *a2, __int16 *a3, __int16 *a4, const __int16 *a5)
{
  double result = rint((double)(1 << (char)a3) * 32.0 * 0.00000190734863 * (double)((*a4 * *(__int16 *)this) >> 1));
  *a2 = (int)result;
  return result;
}

int16x8_t *DiscreteCosineTransform::idct_8x8(int16x8_t *this, int16x8_t *a2, __int16 *a3, int16x8_t *a4, const __int16 *a5)
{
  int16x8_t v6 = this[2];
  int16x8_t v5 = this[3];
  int16x8_t v8 = this[4];
  int16x8_t v7 = this[5];
  int16x8_t v10 = this[6];
  int16x8_t v9 = this[7];
  int16x8_t v11 = this[1];
  uint16x8_t v12 = (uint16x8_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)v6, (int8x16_t)v11), vorrq_s8((int8x16_t)v5, (int8x16_t)v8)), vorrq_s8(vorrq_s8((int8x16_t)v7, (int8x16_t)v10), (int8x16_t)v9));
  v12.i16[0] = vmaxvq_u16(v12);
  int8x16_t v13 = (int8x16_t)vshrq_n_s16(vmulq_s16(*a4, *this), 1uLL);
  if (v12.i32[0])
  {
    int16x8_t v144 = vmulq_s16(a4[4], v8);
    int16x8_t v145 = vmulq_s16(a4[5], v7);
    int16x8_t v149 = vmulq_s16(a4[7], v9);
    int16x8_t v150 = vmulq_s16(a4[6], v10);
    int8x16_t v14 = vqtbl1q_s8(v13, (int8x16_t)xmmword_262CDE5C0);
    int8x16_t v15 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[1], v11), 1uLL), (int8x16_t)xmmword_262CDE5C0);
    int8x16_t v16 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v14.i8, 0);
    int32x4_t v17 = (int32x4_t)vqtbl1q_s8(v14, (int8x16_t)xmmword_262CDE5D0);
    int8x16_t v18 = (int8x16_t)vdupq_laneq_s32(v17, 2);
    int8x16_t v19 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v15.i8, 0);
    int32x4_t v20 = (int32x4_t)vqtbl1q_s8(v15, (int8x16_t)xmmword_262CDE5D0);
    int8x16_t v21 = (int8x16_t)vdupq_laneq_s32(v20, 2);
    int8x16_t v22 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v14.i8, 1);
    int8x16_t v23 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v15.i8, 1);
    int32x4_t v24 = vdupq_laneq_s32(v17, 3);
    int8x16_t v25 = (int8x16_t)vdupq_laneq_s32(v20, 3);
    v26.i64[0] = 0x200000002000;
    v26.i64[1] = 0x200000002000;
    int32x4_t v27 = vaddq_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v16.i8, (int16x4_t)0x22A34000539F4000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL), (int16x4_t)0xAC614000DD5D4000)), v26), vpaddq_s32(vmull_s16(*(int16x4_t *)v18.i8, (int16x4_t)0xAC61C00022A34000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL), (int16x4_t)0xDD5D4000539FC000)));
    int32x4_t v28 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v24.i8, (int16x4_t)0xCDB7A73B11A83249), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v24, (int8x16_t)v24, 8uLL), (int16x4_t)0xA73B4B424B4211A8)), vpaddq_s32(vmull_s16(*(int16x4_t *)v22.i8, (int16x4_t)0xEE584B424B4258C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v22, v22, 8uLL), (int16x4_t)0xCDB711A8A73B3249)));
    int32x4_t v29 = vaddq_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v19.i8, (int16x4_t)0x300B58C573FC58C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v19, v19, 8uLL), (int16x4_t)0x8C0458C5CFF558C5)), vdupq_n_s32(0x5AACu)), vpaddq_s32(vmull_s16(*(int16x4_t *)v21.i8, (int16x4_t)0x8C04A73B300B58C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v21, v21, 8uLL), (int16x4_t)0xCFF558C573FCA73BLL)));
    int32x4_t v30 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v25.i8, (int16x4_t)0xBA4184DF187E45BFLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL), (int16x4_t)0x84DF68626862187ELL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v23.i8, (int16x4_t)0xE782686268627B21), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v23, v23, 8uLL), (int16x4_t)0xBA41187E84DF45BFLL)));
    int8x16_t v147 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vshrq_n_s32(vaddq_s32(v28, v27), 0xEuLL)), vshrq_n_s32(vsubq_s32(v27, v28), 0xEuLL));
    int16x4_t v148 = vqmovn_s32(vshrq_n_s32(vaddq_s32(v30, v29), 0xEuLL));
    int8x16_t v146 = (int8x16_t)vqmovn_high_s32(v148, vshrq_n_s32(vsubq_s32(v29, v30), 0xEuLL));
    int8x16_t v31 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[2], v6), 1uLL), (int8x16_t)xmmword_262CDE5C0);
    int8x16_t v32 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v31.i8, 0);
    int32x4_t v33 = vpaddq_s32(vmull_s16(*(int16x4_t *)v32.i8, (int16x4_t)0x2D41539F6D41539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v32, v32, 8uLL), (int16x4_t)0x92BF539FD2BF539FLL));
    int32x4_t v34 = (int32x4_t)vqtbl1q_s8(v31, (int8x16_t)xmmword_262CDE5D0);
    int8x16_t v35 = (int8x16_t)vdupq_laneq_s32(v34, 2);
    int32x4_t v36 = vpaddq_s32(vmull_s16(*(int16x4_t *)v35.i8, (int16x4_t)0x92BFAC612D41539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v35, v35, 8uLL), (int16x4_t)0xD2BF539F6D41AC61));
    int8x16_t v37 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[3], v5), 1uLL), (int8x16_t)xmmword_262CDE5C0);
    int8x16_t v38 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v37.i8, 0);
    int32x4_t v39 = vpaddq_s32(vmull_s16(*(int16x4_t *)v38.i8, (int16x4_t)0x28BA4B4262544B42), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL), (int16x4_t)0x9DAC4B42D7464B42));
    int32x4_t v40 = (int32x4_t)vqtbl1q_s8(v37, (int8x16_t)xmmword_262CDE5D0);
    int8x16_t v41 = (int8x16_t)vdupq_laneq_s32(v40, 2);
    int8x16_t v42 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v31.i8, 1);
    int32x4_t v43 = vpaddq_s32(vmull_s16(*(int16x4_t *)v42.i8, (int16x4_t)0xE8EE6254625473FCLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v42, v42, 8uLL), (int16x4_t)0xBE4D17128C0441B3));
    int8x16_t v44 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v37.i8, 1);
    int8x16_t v45 = (int8x16_t)vdupq_laneq_s32(v34, 3);
    int8x16_t v46 = (int8x16_t)vdupq_laneq_s32(v40, 3);
    int32x4_t v47 = vpaddq_s32(vmull_s16(*(int16x4_t *)v45.i8, (int16x4_t)0xBE4D8C04171241B3), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v45, v45, 8uLL), (int16x4_t)0x8C04625462541712));
    int32x4_t v48 = vaddq_s32(vaddq_s32(v33, vdupq_n_s32(0x46A1u)), v36);
    int32x4_t v49 = vaddq_s32(v47, v43);
    int32x4_t v50 = vaddq_s32(vaddq_s32(v39, vdupq_n_s32(0x3543u)), vpaddq_s32(vmull_s16(*(int16x4_t *)v41.i8, (int16x4_t)0x9DACB4BE28BA4B42), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v41, v41, 8uLL), (int16x4_t)0xD7464B426254B4BELL)));
    int32x4_t v51 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v46.i8, (int16x4_t)0xC4DF979E14C33B21), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v46, v46, 8uLL), (int16x4_t)0x979E587E587E14C3)), vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0xEB3D587E587E6862), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v44, v44, 8uLL), (int16x4_t)0xC4DF14C3979E3B21)));
    *(int16x4_t *)v36.i8 = vqmovn_s32(vshrq_n_s32(vaddq_s32(v49, v48), 0xEuLL));
    int8x16_t v52 = (int8x16_t)vqmovn_high_s32(*(int16x4_t *)v36.i8, vshrq_n_s32(vsubq_s32(v48, v49), 0xEuLL));
    int16x4_t v53 = vqmovn_s32(vshrq_n_s32(vaddq_s32(v51, v50), 0xEuLL));
    int8x16_t v54 = (int8x16_t)vqmovn_high_s32(v53, vshrq_n_s32(vsubq_s32(v50, v51), 0xEuLL));
    int8x16_t v55 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(v144, 1uLL), (int8x16_t)xmmword_262CDE5C0);
    int8x16_t v56 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v55.i8, 0);
    int32x4_t v57 = (int32x4_t)vqtbl1q_s8(v55, (int8x16_t)xmmword_262CDE5D0);
    int8x16_t v58 = (int8x16_t)vdupq_laneq_s32(v57, 2);
    int8x16_t v59 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(v145, 1uLL), (int8x16_t)xmmword_262CDE5C0);
    int8x16_t v60 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v59.i8, 0);
    int32x4_t v61 = vmull_s16(*(int16x4_t *)v60.i8, (int16x4_t)0x28BA4B4262544B42);
    int32x4_t v62 = vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL), (int16x4_t)0x9DAC4B42D7464B42);
    int32x4_t v63 = (int32x4_t)vqtbl1q_s8(v59, (int8x16_t)xmmword_262CDE5D0);
    int8x16_t v64 = (int8x16_t)vdupq_laneq_s32(v63, 2);
    int8x16_t v65 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v55.i8, 1);
    int8x16_t v66 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v59.i8, 1);
    int8x16_t v67 = (int8x16_t)vdupq_laneq_s32(v57, 3);
    int8x16_t v68 = (int8x16_t)vdupq_laneq_s32(v63, 3);
    v24.i64[0] = 0x200000002000;
    v24.i64[1] = 0x200000002000;
    int32x4_t v69 = vaddq_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v56.i8, (int16x4_t)0x22A34000539F4000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v56, v56, 8uLL), (int16x4_t)0xAC614000DD5D4000)), v24), vpaddq_s32(vmull_s16(*(int16x4_t *)v58.i8, (int16x4_t)0xAC61C00022A34000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL), (int16x4_t)0xDD5D4000539FC000)));
    int32x4_t v70 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v67.i8, (int16x4_t)0xCDB7A73B11A83249), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL), (int16x4_t)0xA73B4B424B4211A8)), vpaddq_s32(vmull_s16(*(int16x4_t *)v65.i8, (int16x4_t)0xEE584B424B4258C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL), (int16x4_t)0xCDB711A8A73B3249)));
    int32x4_t v71 = vaddq_s32(vaddq_s32(vpaddq_s32(v61, v62), vdupq_n_s32(0xE35u)), vpaddq_s32(vmull_s16(*(int16x4_t *)v64.i8, (int16x4_t)0x9DACB4BE28BA4B42), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL), (int16x4_t)0xD7464B426254B4BELL)));
    int32x4_t v72 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v68.i8, (int16x4_t)0xC4DF979E14C33B21), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v68, v68, 8uLL), (int16x4_t)0x979E587E587E14C3)), vpaddq_s32(vmull_s16(*(int16x4_t *)v66.i8, (int16x4_t)0xEB3D587E587E6862), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL), (int16x4_t)0xC4DF14C3979E3B21)));
    int8x16_t v73 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vshrq_n_s32(vaddq_s32(v70, v69), 0xEuLL)), vshrq_n_s32(vsubq_s32(v69, v70), 0xEuLL));
    int32x4_t v74 = vsubq_s32(v71, v72);
    *(int16x4_t *)v71.i8 = vqmovn_s32(vshrq_n_s32(vaddq_s32(v72, v71), 0xEuLL));
    int8x16_t v75 = (int8x16_t)vqmovn_high_s32(*(int16x4_t *)v71.i8, vshrq_n_s32(v74, 0xEuLL));
    int8x16_t v76 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(v150, 1uLL), (int8x16_t)xmmword_262CDE5C0);
    int8x16_t v77 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(v149, 1uLL), (int8x16_t)xmmword_262CDE5C0);
    int8x16_t v78 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v76.i8, 0);
    int32x4_t v79 = (int32x4_t)vqtbl1q_s8(v76, (int8x16_t)xmmword_262CDE5D0);
    int8x16_t v80 = (int8x16_t)vdupq_laneq_s32(v79, 2);
    int8x16_t v81 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v77.i8, 0);
    int32x4_t v82 = (int32x4_t)vqtbl1q_s8(v77, (int8x16_t)xmmword_262CDE5D0);
    int8x16_t v83 = (int8x16_t)vdupq_laneq_s32(v82, 2);
    int8x16_t v84 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v76.i8, 1);
    int8x16_t v85 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v77.i8, 1);
    int8x16_t v86 = (int8x16_t)vdupq_laneq_s32(v79, 3);
    int8x16_t v87 = (int8x16_t)vdupq_laneq_s32(v82, 3);
    v34.i64[0] = 0x100000001000;
    v34.i64[1] = 0x100000001000;
    int32x4_t v88 = vaddq_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0x2D41539F6D41539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)0x92BF539FD2BF539FLL)), v34), vpaddq_s32(vmull_s16(*(int16x4_t *)v80.i8, (int16x4_t)0x92BFAC612D41539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL), (int16x4_t)0xD2BF539F6D41AC61)));
    int32x4_t v89 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v86.i8, (int16x4_t)0xBE4D8C04171241B3), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v86, v86, 8uLL), (int16x4_t)0x8C04625462541712)), vpaddq_s32(vmull_s16(*(int16x4_t *)v84.i8, (int16x4_t)0xE8EE6254625473FCLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v84, v84, 8uLL), (int16x4_t)0xBE4D17128C0441B3)));
    int32x4_t v90 = vaddq_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v81.i8, (int16x4_t)0x300B58C573FC58C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL), (int16x4_t)0x8C0458C5CFF558C5)), vdupq_n_s32(0xBACu)), vpaddq_s32(vmull_s16(*(int16x4_t *)v83.i8, (int16x4_t)0x8C04A73B300B58C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v83, v83, 8uLL), (int16x4_t)0xCFF558C573FCA73BLL)));
    int16x8_t v91 = vdupq_n_s16(0xAB0Eu);
    int32x4_t v92 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v87.i8, (int16x4_t)0xBA4184DF187E45BFLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL), (int16x4_t)0x84DF68626862187ELL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v85.i8, (int16x4_t)0xE782686268627B21), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v85, v85, 8uLL), (int16x4_t)0xBA41187E84DF45BFLL)));
    int32x4_t v93 = vsubq_s32(v88, v89);
    *(int16x4_t *)v89.i8 = vqmovn_s32(vshrq_n_s32(vaddq_s32(v89, v88), 0xEuLL));
    int32x4_t v94 = vsubq_s32(v90, v92);
    *(int16x4_t *)v92.i8 = vqmovn_s32(vshrq_n_s32(vaddq_s32(v92, v90), 0xEuLL));
    int16x8_t v95 = (int16x8_t)vqtbl1q_s8(v147, (int8x16_t)xmmword_262CDE5B0);
    int16x8_t v96 = (int16x8_t)vqtbl1q_s8(v146, (int8x16_t)xmmword_262CDE5B0);
    int16x8_t v97 = (int16x8_t)vqtbl1q_s8(v52, (int8x16_t)xmmword_262CDE5B0);
    int16x8_t v98 = (int16x8_t)vqtbl1q_s8(v54, (int8x16_t)xmmword_262CDE5B0);
    int16x8_t v99 = (int16x8_t)vqtbl1q_s8(v73, (int8x16_t)xmmword_262CDE5B0);
    int16x8_t v100 = (int16x8_t)vqtbl1q_s8(v75, (int8x16_t)xmmword_262CDE5B0);
    int16x8_t v101 = (int16x8_t)vqtbl1q_s8((int8x16_t)vqmovn_high_s32(*(int16x4_t *)v89.i8, vshrq_n_s32(v93, 0xEuLL)), (int8x16_t)xmmword_262CDE5B0);
    int16x8_t v102 = (int16x8_t)vqtbl1q_s8((int8x16_t)vqmovn_high_s32(*(int16x4_t *)v92.i8, vshrq_n_s32(v94, 0xEuLL)), (int8x16_t)xmmword_262CDE5B0);
    int16x8_t v103 = vqaddq_s16(vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v91.i8, *(int16x4_t *)v71.i8), (int16x8_t)vmull_high_s16(v91, v100)), v100), v98);
    int16x8_t v104 = vdupq_n_s16(0x32ECu);
    int16x8_t v105 = vqsubq_s16(v100, vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v91.i8, v53), (int16x8_t)vmull_high_s16(v91, v98)), v98));
    int16x8_t v106 = vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v92.i8, *(int16x4_t *)v104.i8), (int16x8_t)vmull_high_s16(v102, v104)), v96);
    int16x8_t v107 = vqsubq_s16(vuzp2q_s16((int16x8_t)vmull_s16(v148, *(int16x4_t *)v104.i8), (int16x8_t)vmull_high_s16(v96, v104)), v102);
    int16x8_t v108 = vqsubq_s16(v107, v105);
    int16x8_t v109 = vqsubq_s16(v106, v103);
    int16x8_t v110 = vqaddq_s16(v107, v105);
    int16x8_t v111 = vqaddq_s16(v106, v103);
    int16x8_t v112 = vqaddq_s16(v109, v108);
    int16x8_t v113 = vdupq_n_s16(0xB505u);
    int16x8_t v114 = vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v112.i8, *(int16x4_t *)v113.i8), (int16x8_t)vmull_high_s16(v112, v113)), v112);
    int16x8_t v115 = vqsubq_s16(v109, v108);
    int16x8_t v116 = vdupq_n_s16(0x6A0Au);
    int16x8_t v117 = vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v115.i8, *(int16x4_t *)v113.i8), (int16x8_t)vmull_high_s16(v115, v113)), v115);
    int16x8_t v118 = vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v89.i8, *(int16x4_t *)v116.i8), (int16x8_t)vmull_high_s16(v101, v116)), v97);
    int16x8_t v119 = vqsubq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v36.i8, *(int16x4_t *)v116.i8), (int16x8_t)vmull_high_s16(v97, v116)), v101);
    v101.i64[0] = 0x1000100010001;
    v101.i64[1] = 0x1000100010001;
    int16x8_t v120 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vshrq_n_u16(vshlq_u16((uint16x8_t)v101, (uint16x8_t)(14 - a3)), 1uLL), 0);
    v96.i64[0] = 0x1000000010000;
    v96.i64[1] = 0x1000000010000;
    int16x8_t v121 = vqsubq_s16(v120, v96);
    v97.i64[0] = 0x100000001;
    v97.i64[1] = 0x100000001;
    int16x8_t v122 = vqsubq_s16(v120, v97);
    int16x8_t v123 = vqaddq_s16(v95, v99);
    int16x8_t v124 = vqsubq_s16(v95, v99);
    int16x8_t v125 = vqaddq_s16(v123, v118);
    int16x8_t v126 = vqsubq_s16(v123, v118);
    int16x8_t v127 = vqaddq_s16(v124, v119);
    int16x8_t v128 = vqsubq_s16(v124, v119);
    int16x8_t v129 = vnegq_s16(vdupq_lane_s16((int16x4_t)(14 - a3), 0));
    *a2 = vshlq_s16(vqaddq_s16(vqaddq_s16(v125, v111), v121), v129);
    a2[1] = vshlq_s16(vqaddq_s16(vqaddq_s16(v127, v114), v122), v129);
    a2[2] = vshlq_s16(vqaddq_s16(vqaddq_s16(v128, v117), v121), v129);
    a2[3] = vshlq_s16(vqaddq_s16(vqaddq_s16(v126, v110), v122), v129);
    a2[4] = vshlq_s16(vqaddq_s16(vqsubq_s16(v126, v110), v121), v129);
    a2[5] = vshlq_s16(vqaddq_s16(vqsubq_s16(v128, v117), v122), v129);
    int16x8_t v130 = vshlq_s16(vqaddq_s16(vqsubq_s16(v125, v111), v122), v129);
    a2[6] = vshlq_s16(vqaddq_s16(vqsubq_s16(v127, v114), v121), v129);
  }
  else
  {
    int8x16_t v131 = vqtbl1q_s8(v13, (int8x16_t)xmmword_262CDE5C0);
    int8x16_t v132 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v131.i8, 0);
    int32x4_t v133 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v132.i8, (int16x4_t)0x22A34000539F4000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v132, v132, 8uLL), (int16x4_t)0xAC614000DD5D4000)), vdupq_n_s32(1 << (27 - (_BYTE)a3)));
    int8x16_t v134 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v131.i8, 1);
    int32x4_t v135 = (int32x4_t)vqtbl1q_s8(v131, (int8x16_t)xmmword_262CDE5D0);
    int8x16_t v136 = (int8x16_t)vdupq_laneq_s32(v135, 2);
    int8x16_t v137 = (int8x16_t)vdupq_laneq_s32(v135, 3);
    int32x4_t v138 = vaddq_s32(v133, vpaddq_s32(vmull_s16(*(int16x4_t *)v136.i8, (int16x4_t)0xAC61C00022A34000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v136, v136, 8uLL), (int16x4_t)0xDD5D4000539FC000)));
    int32x4_t v139 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v137.i8, (int16x4_t)0xCDB7A73B11A83249), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v137, v137, 8uLL), (int16x4_t)0xA73B4B424B4211A8)), vpaddq_s32(vmull_s16(*(int16x4_t *)v134.i8, (int16x4_t)0xEE584B424B4258C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v134, v134, 8uLL), (int16x4_t)0xCDB711A8A73B3249)));
    int32x4_t v140 = vsubq_s32(v138, v139);
    int32x4_t v141 = vaddq_s32(v139, v138);
    int8x16_t v142 = (int8x16_t)vrev64q_s32(v140);
    int32x4_t v143 = vnegq_s32(vdupq_n_s32(28 - (int)a3));
    int16x8_t v130 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(v141, v143)), vshlq_s32((int32x4_t)vextq_s8(v142, v142, 8uLL), v143));
    *a2 = v130;
    a2[1] = v130;
    a2[2] = v130;
    a2[3] = v130;
    a2[4] = v130;
    a2[5] = v130;
    a2[6] = v130;
  }
  a2[7] = v130;
  return this;
}

int16x8_t DiscreteCosineTransform::idct_8x4(int16x8_t *this, int16x8_t *a2, __int16 *a3, int16x8_t *a4, const __int16 *a5)
{
  int8x16_t v5 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(*a4, *this), 1uLL), (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v6 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v5.i8, 0);
  int8x16_t v7 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[1], this[1]), 1uLL), (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v8 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v7.i8, 0);
  int32x4_t v9 = (int32x4_t)vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v10 = (int8x16_t)vdupq_laneq_s32(v9, 2);
  int8x16_t v11 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v5.i8, 1);
  int32x4_t v12 = vpaddq_s32(vmull_s16(*(int16x4_t *)v11.i8, (int16x4_t)0xEE584B424B4258C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL), (int16x4_t)0xCDB711A8A73B3249));
  int8x16_t v13 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v7.i8, 1);
  int32x4_t v14 = (int32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v15 = (int8x16_t)vdupq_laneq_s32(v14, 2);
  int32x4_t v16 = vpaddq_s32(vmull_s16(*(int16x4_t *)v15.i8, (int16x4_t)0xAC61C00022A34000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL), (int16x4_t)0xDD5D4000539FC000));
  int8x16_t v17 = (int8x16_t)vdupq_laneq_s32(v14, 3);
  int8x16_t v18 = (int8x16_t)vdupq_laneq_s32(v9, 3);
  int32x4_t v19 = vaddq_s32(v16, vpaddq_s32(vmull_s16(*(int16x4_t *)v6.i8, (int16x4_t)0x22A34000539F4000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL), (int16x4_t)0xAC614000DD5D4000)));
  int32x4_t v20 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v17.i8, (int16x4_t)0xCDB7A73B11A83249), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL), (int16x4_t)0xA73B4B424B4211A8)), v12);
  int32x4_t v21 = vaddq_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v8.i8, (int16x4_t)0x2D41539F6D41539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL), (int16x4_t)0x92BF539FD2BF539FLL)), vdupq_n_s32(0x46A1u)), vpaddq_s32(vmull_s16(*(int16x4_t *)v10.i8, (int16x4_t)0x92BFAC612D41539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL), (int16x4_t)0xD2BF539F6D41AC61)));
  int32x4_t v22 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v18.i8, (int16x4_t)0xBE4D8C04171241B3), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL), (int16x4_t)0x8C04625462541712)), vpaddq_s32(vmull_s16(*(int16x4_t *)v13.i8, (int16x4_t)0xE8EE6254625473FCLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL), (int16x4_t)0xBE4D17128C0441B3)));
  int16x8_t v23 = (int16x8_t)vqtbl1q_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vshrq_n_s32(vaddq_s32(v20, v19), 0xEuLL)), vshrq_n_s32(vsubq_s32(v19, v20), 0xEuLL)), (int8x16_t)xmmword_262CDE5B0);
  int32x4_t v24 = vsubq_s32(v21, v22);
  int32x4_t v25 = vaddq_s32(v22, v21);
  int32x4_t v26 = vshrq_n_s32(v24, 0xEuLL);
  *(int16x4_t *)v25.i8 = vqmovn_s32(vshrq_n_s32(v25, 0xEuLL));
  int16x8_t v27 = vdupq_n_s16(0x6A0Au);
  int16x8_t v28 = (int16x8_t)vqtbl1q_s8((int8x16_t)vqmovn_high_s32(*(int16x4_t *)v25.i8, v26), (int8x16_t)xmmword_262CDE5B0);
  int8x16_t v29 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[2], this[2]), 1uLL), (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v30 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[3], this[3]), 1uLL), (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v31 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v29.i8, 0);
  int32x4_t v32 = (int32x4_t)vqtbl1q_s8(v29, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v33 = (int8x16_t)vdupq_laneq_s32(v32, 2);
  v34.i64[0] = 0x200000002000;
  v34.i64[1] = 0x200000002000;
  int8x16_t v35 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v30.i8, 0);
  int32x4_t v36 = (int32x4_t)vqtbl1q_s8(v30, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v37 = (int8x16_t)vdupq_laneq_s32(v36, 2);
  v38.i64[0] = 0x100000001000;
  v38.i64[1] = 0x100000001000;
  int8x16_t v39 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v29.i8, 1);
  int8x16_t v40 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v30.i8, 1);
  int8x16_t v41 = (int8x16_t)vdupq_laneq_s32(v32, 3);
  int8x16_t v42 = (int8x16_t)vdupq_laneq_s32(v36, 3);
  int32x4_t v43 = vaddq_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v31.i8, (int16x4_t)0x22A34000539F4000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v31, v31, 8uLL), (int16x4_t)0xAC614000DD5D4000)), v34), vpaddq_s32(vmull_s16(*(int16x4_t *)v33.i8, (int16x4_t)0xAC61C00022A34000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v33, v33, 8uLL), (int16x4_t)0xDD5D4000539FC000)));
  int32x4_t v44 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v41.i8, (int16x4_t)0xCDB7A73B11A83249), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v41, v41, 8uLL), (int16x4_t)0xA73B4B424B4211A8)), vpaddq_s32(vmull_s16(*(int16x4_t *)v39.i8, (int16x4_t)0xEE584B424B4258C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v39, v39, 8uLL), (int16x4_t)0xCDB711A8A73B3249)));
  int32x4_t v45 = vaddq_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v35.i8, (int16x4_t)0x2D41539F6D41539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v35, v35, 8uLL), (int16x4_t)0x92BF539FD2BF539FLL)), v38), vpaddq_s32(vmull_s16(*(int16x4_t *)v37.i8, (int16x4_t)0x92BFAC612D41539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v37, v37, 8uLL), (int16x4_t)0xD2BF539F6D41AC61)));
  int32x4_t v46 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v42.i8, (int16x4_t)0xBE4D8C04171241B3), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v42, v42, 8uLL), (int16x4_t)0x8C04625462541712)), vpaddq_s32(vmull_s16(*(int16x4_t *)v40.i8, (int16x4_t)0xE8EE6254625473FCLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v40, v40, 8uLL), (int16x4_t)0xBE4D17128C0441B3)));
  int16x8_t v47 = (int16x8_t)vqtbl1q_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vshrq_n_s32(vaddq_s32(v44, v43), 0xEuLL)), vshrq_n_s32(vsubq_s32(v43, v44), 0xEuLL)), (int8x16_t)xmmword_262CDE5B0);
  int32x4_t v48 = vsubq_s32(v45, v46);
  *(int16x4_t *)v46.i8 = vqmovn_s32(vshrq_n_s32(vaddq_s32(v46, v45), 0xEuLL));
  int16x8_t v49 = (int16x8_t)vmull_s16(*(int16x4_t *)v46.i8, *(int16x4_t *)v27.i8);
  int16x8_t v50 = (int16x8_t)vqtbl1q_s8((int8x16_t)vqmovn_high_s32(*(int16x4_t *)v46.i8, vshrq_n_s32(v48, 0xEuLL)), (int8x16_t)xmmword_262CDE5B0);
  v33.i64[0] = 0x1000100010001;
  v33.i64[1] = 0x1000100010001;
  int16x8_t v51 = vqaddq_s16(v23, vdupq_lane_s16((int16x4_t)*(_OWORD *)&vshrq_n_u16(vshlq_u16((uint16x8_t)v33, (uint16x8_t)(14 - a3)), 1uLL), 0));
  int16x8_t v52 = vqaddq_s16(v51, v47);
  int16x8_t v53 = vqsubq_s16(v51, v47);
  int16x8_t v54 = vqaddq_s16(vuzp2q_s16(v49, (int16x8_t)vmull_high_s16(v50, v27)), v28);
  int16x8_t v55 = vqsubq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v27.i8), (int16x8_t)vmull_high_s16(v28, v27)), v50);
  int16x8_t v56 = vnegq_s16(vdupq_lane_s16((int16x4_t)(14 - a3), 0));
  int16x8_t v57 = vshlq_s16(vqaddq_s16(v53, v55), v56);
  int16x8_t result = vshlq_s16(vqsubq_s16(v53, v55), v56);
  *a2 = vshlq_s16(vqaddq_s16(v52, v54), v56);
  a2[1] = v57;
  a2[2] = result;
  a2[3] = vshlq_s16(vqsubq_s16(v52, v54), v56);
  return result;
}

int64x2_t DiscreteCosineTransform::idct_4x8(int16x8_t *this, int64x2_t *a2, __int16 *a3, int64x2_t *a4, const __int16 *a5)
{
  int8x16_t v5 = (int8x16_t)vshrq_n_s16(vmulq_s16(*this, (int16x8_t)vzip1q_s64(*a4, a4[1])), 1uLL);
  int8x16_t v6 = (int8x16_t)vshrq_n_s16(vmulq_s16(this[1], (int16x8_t)vzip1q_s64(a4[2], a4[3])), 1uLL);
  int8x16_t v7 = (int8x16_t)vshrq_n_s16(vmulq_s16(this[2], (int16x8_t)vzip1q_s64(a4[4], a4[5])), 1uLL);
  int8x16_t v8 = (int8x16_t)vshrq_n_s16(vmulq_s16(this[3], (int16x8_t)vzip1q_s64(a4[6], a4[7])), 1uLL);
  int8x16_t v9 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE5E0);
  int8x16_t v10 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE5F0);
  int32x4_t v11 = vpaddq_s32(vmull_s16(vuzp1_s16(*(int16x4_t *)v5.i8, *(int16x4_t *)v5.i8), (int16x4_t)0xC000400040004000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL), (int16x4_t)0xA73B58C558C558C5));
  int32x4_t v12 = vpaddq_s32(vmull_s16(vuzp2_s16(*(int16x4_t *)v5.i8, *(int16x4_t *)v5.i8), (int16x4_t)0xAC6122A322A3539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL), (int16x4_t)0x8C04300B300B73FCLL));
  int32x4_t v13 = vaddq_s32(v11, (int32x4_t)xmmword_262CDE600);
  int32x4_t v14 = (int32x4_t)vqtbl1q_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vshrq_n_s32(vaddq_s32(v12, v13), 0xEuLL)), vshrq_n_s32(vsubq_s32(v13, v12), 0xEuLL)), (int8x16_t)xmmword_262CDE610);
  int16x8_t v15 = (int16x8_t)vuzp1q_s32(v14, v14);
  int16x8_t v16 = (int16x8_t)vuzp2q_s32(v14, v14);
  int8x16_t v17 = vqtbl1q_s8(v6, (int8x16_t)xmmword_262CDE5E0);
  int8x16_t v18 = vqtbl1q_s8(v6, (int8x16_t)xmmword_262CDE5F0);
  int32x4_t v19 = vpaddq_s32(vmull_s16(vuzp1_s16(*(int16x4_t *)v6.i8, *(int16x4_t *)v6.i8), (int16x4_t)0xAC61539F539F539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL), (int16x4_t)0xB4BE4B424B424B42));
  int32x4_t v20 = vpaddq_s32(vmull_s16(vuzp2_s16(*(int16x4_t *)v6.i8, *(int16x4_t *)v6.i8), (int16x4_t)0x92BF2D412D416D41), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL), (int16x4_t)0x9DAC28BA28BA6254));
  int32x4_t v21 = vaddq_s32(v19, (int32x4_t)xmmword_262CDE620);
  int32x4_t v22 = (int32x4_t)vqtbl1q_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vshrq_n_s32(vaddq_s32(v20, v21), 0xEuLL)), vshrq_n_s32(vsubq_s32(v21, v20), 0xEuLL)), (int8x16_t)xmmword_262CDE610);
  int16x8_t v23 = (int16x8_t)vuzp1q_s32(v22, v22);
  int16x8_t v24 = (int16x8_t)vuzp2q_s32(v22, v22);
  int8x16_t v25 = vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE5E0);
  int8x16_t v26 = vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE5F0);
  int32x4_t v27 = vpaddq_s32(vmull_s16(vuzp1_s16(*(int16x4_t *)v7.i8, *(int16x4_t *)v7.i8), (int16x4_t)0xC000400040004000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL), (int16x4_t)0xB4BE4B424B424B42));
  int32x4_t v28 = vpaddq_s32(vmull_s16(vuzp2_s16(*(int16x4_t *)v7.i8, *(int16x4_t *)v7.i8), (int16x4_t)0xAC6122A322A3539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v26, v26, 8uLL), (int16x4_t)0x9DAC28BA28BA6254));
  int32x4_t v29 = vaddq_s32(v27, (int32x4_t)xmmword_262CDE630);
  int32x4_t v30 = (int32x4_t)vqtbl1q_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vshrq_n_s32(vaddq_s32(v28, v29), 0xEuLL)), vshrq_n_s32(vsubq_s32(v29, v28), 0xEuLL)), (int8x16_t)xmmword_262CDE610);
  int16x8_t v31 = (int16x8_t)vuzp1q_s32(v30, v30);
  int16x8_t v32 = (int16x8_t)vuzp2q_s32(v30, v30);
  int8x16_t v33 = vqtbl1q_s8(v8, (int8x16_t)xmmword_262CDE5E0);
  int8x16_t v34 = vqtbl1q_s8(v8, (int8x16_t)xmmword_262CDE5F0);
  int32x4_t v35 = vpaddq_s32(vmull_s16(vuzp1_s16(*(int16x4_t *)v8.i8, *(int16x4_t *)v8.i8), (int16x4_t)0xAC61539F539F539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v33, v33, 8uLL), (int16x4_t)0xA73B58C558C558C5));
  int32x4_t v36 = vpaddq_s32(vmull_s16(vuzp2_s16(*(int16x4_t *)v8.i8, *(int16x4_t *)v8.i8), (int16x4_t)0x92BF2D412D416D41), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v34, v34, 8uLL), (int16x4_t)0x8C04300B300B73FCLL));
  int32x4_t v37 = vaddq_s32(v35, (int32x4_t)xmmword_262CDE640);
  int32x4_t v38 = (int32x4_t)vqtbl1q_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vshrq_n_s32(vaddq_s32(v36, v37), 0xEuLL)), vshrq_n_s32(vsubq_s32(v37, v36), 0xEuLL)), (int8x16_t)xmmword_262CDE610);
  int16x8_t v39 = (int16x8_t)vuzp1q_s32(v38, v38);
  int16x8_t v40 = (int16x8_t)vuzp2q_s32(v38, v38);
  int16x8_t v41 = vdupq_n_s16(0xAB0Eu);
  int16x8_t v42 = vqaddq_s16(vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v41.i8, *(int16x4_t *)v32.i8), (int16x8_t)vmull_high_s16(v41, v32)), v32), v24);
  int16x8_t v43 = vqsubq_s16(v32, vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v41.i8, *(int16x4_t *)v24.i8), (int16x8_t)vmull_high_s16(v41, v24)), v24));
  int16x8_t v44 = vdupq_n_s16(0x32ECu);
  int16x8_t v45 = vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v40.i8, *(int16x4_t *)v44.i8), (int16x8_t)vmull_high_s16(v40, v44)), v16);
  int16x8_t v46 = vqsubq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v16.i8, *(int16x4_t *)v44.i8), (int16x8_t)vmull_high_s16(v16, v44)), v40);
  int16x8_t v47 = vqsubq_s16(v46, v43);
  int16x8_t v48 = vqsubq_s16(v45, v42);
  int16x8_t v49 = vqaddq_s16(v46, v43);
  int16x8_t v50 = vqaddq_s16(v45, v42);
  int16x8_t v51 = vqaddq_s16(v48, v47);
  int16x8_t v52 = vdupq_n_s16(0xB505u);
  int16x8_t v53 = vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v51.i8, *(int16x4_t *)v52.i8), (int16x8_t)vmull_high_s16(v51, v52)), v51);
  int16x8_t v54 = vqsubq_s16(v48, v47);
  int16x8_t v55 = vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v54.i8, *(int16x4_t *)v52.i8), (int16x8_t)vmull_high_s16(v54, v52)), v54);
  int16x8_t v56 = vdupq_n_s16(0x6A0Au);
  int16x8_t v57 = vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v39.i8, *(int16x4_t *)v56.i8), (int16x8_t)vmull_high_s16(v39, v56)), v23);
  int16x8_t v58 = vqsubq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v23.i8, *(int16x4_t *)v56.i8), (int16x8_t)vmull_high_s16(v23, v56)), v39);
  v39.i64[0] = 0x1000100010001;
  v39.i64[1] = 0x1000100010001;
  int16x8_t v59 = vdupq_lane_s16((int16x4_t)*(_OWORD *)&vshrq_n_u16(vshlq_u16((uint16x8_t)v39, (uint16x8_t)(14 - a3)), 1uLL), 0);
  v56.i64[0] = 0x1000000010000;
  v56.i64[1] = 0x1000000010000;
  int16x8_t v60 = vqsubq_s16(v59, v56);
  v32.i64[0] = 0x100000001;
  v32.i64[1] = 0x100000001;
  int16x8_t v61 = vqsubq_s16(v59, v32);
  int16x8_t v62 = vqaddq_s16(v15, v31);
  int16x8_t v63 = vqsubq_s16(v15, v31);
  int16x8_t v64 = vqaddq_s16(v62, v57);
  int16x8_t v65 = vqsubq_s16(v62, v57);
  int16x8_t v66 = vqaddq_s16(v63, v58);
  int16x8_t v67 = vqsubq_s16(v63, v58);
  int16x8_t v68 = vnegq_s16(vdupq_lane_s16((int16x4_t)(14 - a3), 0));
  *a2 = vzip1q_s64((int64x2_t)vshlq_s16(vqaddq_s16(vqaddq_s16(v64, v50), v60), v68), (int64x2_t)vshlq_s16(vqaddq_s16(vqaddq_s16(v66, v53), v61), v68));
  a2[1] = vzip1q_s64((int64x2_t)vshlq_s16(vqaddq_s16(vqaddq_s16(v67, v55), v60), v68), (int64x2_t)vshlq_s16(vqaddq_s16(vqaddq_s16(v65, v49), v61), v68));
  int64x2_t result = vzip1q_s64((int64x2_t)vshlq_s16(vqaddq_s16(vqsubq_s16(v65, v49), v60), v68), (int64x2_t)vshlq_s16(vqaddq_s16(vqsubq_s16(v67, v55), v61), v68));
  a2[2] = result;
  a2[3] = vzip1q_s64((int64x2_t)vshlq_s16(vqaddq_s16(vqsubq_s16(v66, v53), v60), v68), (int64x2_t)vshlq_s16(vqaddq_s16(vqsubq_s16(v64, v50), v61), v68));
  return result;
}

int64x2_t DiscreteCosineTransform::idct_4x4(int16x8_t *this, int64x2_t *a2, __int16 *a3, int64x2_t *a4, const __int16 *a5)
{
  int8x16_t v5 = (int8x16_t)vshrq_n_s16(vmulq_s16(*this, (int16x8_t)vzip1q_s64(*a4, a4[1])), 1uLL);
  int8x16_t v6 = (int8x16_t)vshrq_n_s16(vmulq_s16(this[1], (int16x8_t)vzip1q_s64(a4[2], a4[3])), 1uLL);
  int8x16_t v7 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE5E0);
  int8x16_t v8 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE5F0);
  int32x4_t v9 = vpaddq_s32(vmull_s16(vuzp1_s16(*(int16x4_t *)v5.i8, *(int16x4_t *)v5.i8), (int16x4_t)0xC000400040004000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL), (int16x4_t)0xAC61539F539F539FLL));
  int32x4_t v10 = vpaddq_s32(vmull_s16(vuzp2_s16(*(int16x4_t *)v5.i8, *(int16x4_t *)v5.i8), (int16x4_t)0xAC6122A322A3539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL), (int16x4_t)0x92BF2D412D416D41));
  int32x4_t v11 = vaddq_s32(v9, (int32x4_t)xmmword_262CDE650);
  int32x4_t v12 = (int32x4_t)vqtbl1q_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vshrq_n_s32(vaddq_s32(v10, v11), 0xEuLL)), vshrq_n_s32(vsubq_s32(v11, v10), 0xEuLL)), (int8x16_t)xmmword_262CDE610);
  int16x8_t v13 = (int16x8_t)vuzp1q_s32(v12, v12);
  int16x8_t v14 = (int16x8_t)vuzp2q_s32(v12, v12);
  int8x16_t v15 = vqtbl1q_s8(v6, (int8x16_t)xmmword_262CDE5E0);
  int8x16_t v16 = vqtbl1q_s8(v6, (int8x16_t)xmmword_262CDE5F0);
  int32x4_t v17 = vpaddq_s32(vmull_s16(vuzp1_s16(*(int16x4_t *)v6.i8, *(int16x4_t *)v6.i8), (int16x4_t)0xC000400040004000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL), (int16x4_t)0xAC61539F539F539FLL));
  int32x4_t v18 = vpaddq_s32(vmull_s16(vuzp2_s16(*(int16x4_t *)v6.i8, *(int16x4_t *)v6.i8), (int16x4_t)0xAC6122A322A3539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL), (int16x4_t)0x92BF2D412D416D41));
  int32x4_t v19 = vaddq_s32(v17, (int32x4_t)xmmword_262CDE660);
  int32x4_t v20 = (int32x4_t)vqtbl1q_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vshrq_n_s32(vaddq_s32(v18, v19), 0xEuLL)), vshrq_n_s32(vsubq_s32(v19, v18), 0xEuLL)), (int8x16_t)xmmword_262CDE610);
  int16x8_t v21 = (int16x8_t)vuzp1q_s32(v20, v20);
  v16.i64[0] = 0x1000100010001;
  v16.i64[1] = 0x1000100010001;
  int16x8_t v22 = (int16x8_t)vuzp2q_s32(v20, v20);
  int16x8_t v23 = vqaddq_s16(v13, vdupq_lane_s16((int16x4_t)*(_OWORD *)&vshrq_n_u16(vshlq_u16((uint16x8_t)v16, (uint16x8_t)(14 - a3)), 1uLL), 0));
  int16x8_t v24 = vqaddq_s16(v23, v21);
  int16x8_t v25 = vdupq_n_s16(0x6A0Au);
  int16x8_t v26 = vqsubq_s16(v23, v21);
  int16x8_t v27 = vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v22.i8, *(int16x4_t *)v25.i8), (int16x8_t)vmull_high_s16(v22, v25)), v14);
  int16x8_t v28 = vqsubq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v14.i8, *(int16x4_t *)v25.i8), (int16x8_t)vmull_high_s16(v14, v25)), v22);
  int16x8_t v29 = vnegq_s16(vdupq_lane_s16((int16x4_t)(14 - a3), 0));
  int64x2_t v30 = (int64x2_t)vshlq_s16(vqaddq_s16(v26, v28), v29);
  int64x2_t result = vzip1q_s64((int64x2_t)vshlq_s16(vqsubq_s16(v26, v28), v29), (int64x2_t)vshlq_s16(vqsubq_s16(v24, v27), v29));
  *a2 = vzip1q_s64((int64x2_t)vshlq_s16(vqaddq_s16(v24, v27), v29), v30);
  a2[1] = result;
  return result;
}

int32x4_t DiscreteCosineTransform::idct_4x2(int16x8_t *this, int16x8_t *a2, __int16 *a3, int64x2_t *a4, const __int16 *a5)
{
  int8x16_t v5 = (int8x16_t)vshrq_n_s16(vmulq_s16(*this, (int16x8_t)vzip1q_s64(*a4, a4[1])), 1uLL);
  int8x16_t v6 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE5E0);
  int8x16_t v7 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE5F0);
  int32x4_t v8 = vpaddq_s32(vmull_s16(vuzp1_s16(*(int16x4_t *)v5.i8, *(int16x4_t *)v5.i8), (int16x4_t)0xC000400040004000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL), (int16x4_t)0xC000400040004000));
  int32x4_t v9 = vpaddq_s32(vmull_s16(vuzp2_s16(*(int16x4_t *)v5.i8, *(int16x4_t *)v5.i8), (int16x4_t)0xAC6122A322A3539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL), (int16x4_t)0xAC6122A322A3539FLL));
  int32x4_t v10 = vaddq_s32(v9, v8);
  int32x4_t v11 = vrev64q_s32(vsubq_s32(v8, v9));
  v12.i64[0] = v10.i64[0];
  v12.i64[1] = v11.i64[0];
  int32x4_t v13 = vaddq_s32(vdupq_n_s32((1 << (28 - (_BYTE)a3)) >> 1), v12);
  v11.i64[0] = v10.i64[1];
  int32x4_t v14 = vaddq_s32(v13, v11);
  int32x4_t v15 = vsubq_s32(v13, v11);
  int32x4_t v16 = vnegq_s32(vdupq_n_s32(28 - (int)a3));
  int32x4_t result = vshlq_s32(v15, v16);
  *a2 = vqmovn_high_s32(vqmovn_s32(vshlq_s32(v14, v16)), result);
  return result;
}

int64x2_t DiscreteCosineTransform::idct_2x4(int16x8_t *this, int64x2_t *a2, __int16 *a3, int32x4_t *a4, const __int16 *a5)
{
  int32x4_t v5 = (int32x4_t)vshrq_n_s16(vmulq_s16(*this, (int16x8_t)vzip1q_s64((int64x2_t)vzip1q_s32(*a4, a4[1]), (int64x2_t)vzip1q_s32(a4[2], a4[3]))), 1uLL);
  int8x16_t v6 = (int8x16_t)vzip1q_s32(v5, v5);
  int8x16_t v7 = (int8x16_t)vzip2q_s32(v5, v5);
  *(int16x4_t *)v6.i8 = vqmovn_s32(vshrq_n_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v6.i8, (int16x4_t)0xC000400040004000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL), (int16x4_t)0xAC61539F539F539FLL)), (int32x4_t)xmmword_262CDE650), 0xEuLL));
  int16x8_t v8 = (int16x8_t)vdupq_lane_s64(v6.i64[0], 0);
  *(int16x4_t *)v7.i8 = vqmovn_s32(vshrq_n_s32(vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v7.i8, (int16x4_t)0xC000400040004000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL), (int16x4_t)0xAC61539F539F539FLL)), (int32x4_t)xmmword_262CDE660), 0xEuLL));
  int16x8_t v9 = (int16x8_t)vdupq_lane_s64(v7.i64[0], 0);
  int16x8_t v10 = v9;
  v10.i32[0] = v9.i32[1];
  v11.i64[0] = 0x1000100010001;
  v11.i64[1] = 0x1000100010001;
  int16x8_t v12 = vqaddq_s16(v8, vdupq_lane_s16((int16x4_t)*(_OWORD *)&vshrq_n_u16(vshlq_u16(v11, (uint16x8_t)(14 - a3)), 1uLL), 0));
  int16x8_t v13 = vqaddq_s16(v12, v9);
  v8.i32[0] = v8.i32[1];
  int16x4_t v14 = vdup_n_s16(0x6A0Au);
  int16x8_t v15 = vqsubq_s16(v12, v9);
  int16x8_t v16 = vqaddq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v10.i8, v14), (int16x8_t)vmull_s16(*(int16x4_t *)v7.i8, v14)), v8);
  int16x8_t v17 = vqsubq_s16(vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v8.i8, v14), (int16x8_t)vmull_s16(*(int16x4_t *)v6.i8, v14)), v10);
  int16x8_t v18 = vnegq_s16(vdupq_lane_s16((int16x4_t)(14 - a3), 0));
  int64x2_t result = vzip1q_s64((int64x2_t)vzip1q_s32((int32x4_t)vshlq_s16(vqaddq_s16(v13, v16), v18), (int32x4_t)vshlq_s16(vqaddq_s16(v15, v17), v18)), (int64x2_t)vzip1q_s32((int32x4_t)vshlq_s16(vqsubq_s16(v15, v17), v18), (int32x4_t)vshlq_s16(vqsubq_s16(v13, v16), v18)));
  *a2 = result;
  return result;
}

int16x4_t DiscreteCosineTransform::idct_2x2(DiscreteCosineTransform *this, int16x4_t *a2, __int16 *a3, uint64_t a4, const __int16 *a5)
{
  int16x8_t v5 = *(int16x8_t *)(a4 + 16);
  int16x8_t v6 = (int16x8_t)vzip1q_s32(*(int32x4_t *)a4, (int32x4_t)v5);
  v5.i64[0] = *(void *)this;
  int32x4_t v7 = (int32x4_t)vshrq_n_s16(vmulq_s16(v5, v6), 1uLL);
  int8x16_t v8 = (int8x16_t)vzip1q_s32(v7, v7);
  int32x4_t v9 = vpaddq_s32(vmull_s16(*(int16x4_t *)v8.i8, (int16x4_t)0xF000100010001000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL), (int16x4_t)0xF000100010001000));
  v5.i64[0] = vdupq_laneq_s64((int64x2_t)v9, 1).u64[0];
  v9.i64[0] = vaddq_s32(v9, vdupq_n_s32((1 << (26 - (_BYTE)a3)) >> 1)).u64[0];
  int32x2_t v10 = vsub_s32(*(int32x2_t *)v9.i8, *(int32x2_t *)v5.i8);
  *(int32x2_t *)v9.i8 = vadd_s32(*(int32x2_t *)v9.i8, *(int32x2_t *)v5.i8);
  v9.u64[1] = (unint64_t)v10;
  int16x4_t result = vqmovn_s32(vshlq_s32(v9, vnegq_s32(vdupq_n_s32(26 - (int)a3))));
  *a2 = result;
  return result;
}

int16x8_t DiscreteCosineTransform::idct_8x8_AVX(int16x8_t *this, int16x8_t *a2, __int16 *a3, int16x8_t *a4, const __int16 *a5)
{
  int8x16_t v5 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(*a4, *this), 1uLL), (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v6 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[1], this[1]), 1uLL), (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v7 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v5.i8, 0);
  int8x16_t v8 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v6.i8, 0);
  int8x16_t v9 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v5.i8, 1);
  int8x16_t v10 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v6.i8, 1);
  int32x4_t v11 = (int32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE5D0);
  int32x4_t v12 = (int32x4_t)vqtbl1q_s8(v6, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v13 = (int8x16_t)vdupq_laneq_s32(v11, 2);
  int8x16_t v14 = (int8x16_t)vdupq_laneq_s32(v12, 2);
  int8x16_t v15 = (int8x16_t)vdupq_laneq_s32(v11, 3);
  int8x16_t v16 = (int8x16_t)vdupq_laneq_s32(v12, 3);
  int32x4_t v17 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v13.i8, (int16x4_t)0xAC61C00022A34000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL), (int16x4_t)0xDD5D4000539FC000)), vpaddq_s32(vmull_s16(*(int16x4_t *)v7.i8, (int16x4_t)0x22A34000539F4000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL), (int16x4_t)0xAC614000DD5D4000)));
  int32x4_t v18 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v15.i8, (int16x4_t)0xCDB7A73B11A83249), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL), (int16x4_t)0xA73B4B424B4211A8)), vpaddq_s32(vmull_s16(*(int16x4_t *)v9.i8, (int16x4_t)0xEE584B424B4258C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v9, v9, 8uLL), (int16x4_t)0xCDB711A8A73B3249)));
  int32x4_t v19 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v14.i8, (int16x4_t)0x8C04A73B300B58C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL), (int16x4_t)0xCFF558C573FCA73BLL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v8.i8, (int16x4_t)0x300B58C573FC58C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL), (int16x4_t)0x8C0458C5CFF558C5)));
  int32x4_t v20 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v16.i8, (int16x4_t)0xBA4184DF187E45BFLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL), (int16x4_t)0x84DF68626862187ELL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v10.i8, (int16x4_t)0xE782686268627B21), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL), (int16x4_t)0xBA41187E84DF45BFLL)));
  int32x4_t v183 = vaddq_s32(v18, v17);
  int32x4_t v184 = vsubq_s32(v17, v18);
  int32x4_t v181 = vsubq_s32(v19, v20);
  int32x4_t v182 = vaddq_s32(v20, v19);
  int8x16_t v21 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[2], this[2]), 1uLL), (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v22 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[3], this[3]), 1uLL), (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v23 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v21.i8, 0);
  int32x4_t v24 = vpaddq_s32(vmull_s16(*(int16x4_t *)v23.i8, (int16x4_t)0x2D41539F6D41539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v23, v23, 8uLL), (int16x4_t)0x92BF539FD2BF539FLL));
  int8x16_t v25 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v22.i8, 0);
  int32x4_t v26 = vpaddq_s32(vmull_s16(*(int16x4_t *)v25.i8, (int16x4_t)0x28BA4B4262544B42), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL), (int16x4_t)0x9DAC4B42D7464B42));
  int8x16_t v27 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v21.i8, 1);
  int32x4_t v28 = vpaddq_s32(vmull_s16(*(int16x4_t *)v27.i8, (int16x4_t)0xE8EE6254625473FCLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v27, v27, 8uLL), (int16x4_t)0xBE4D17128C0441B3));
  int8x16_t v29 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v22.i8, 1);
  int32x4_t v30 = vpaddq_s32(vmull_s16(*(int16x4_t *)v29.i8, (int16x4_t)0xEB3D587E587E6862), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v29, v29, 8uLL), (int16x4_t)0xC4DF14C3979E3B21));
  int32x4_t v31 = (int32x4_t)vqtbl1q_s8(v21, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v32 = (int8x16_t)vdupq_laneq_s32(v31, 2);
  int32x4_t v33 = vpaddq_s32(vmull_s16(*(int16x4_t *)v32.i8, (int16x4_t)0x92BFAC612D41539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v32, v32, 8uLL), (int16x4_t)0xD2BF539F6D41AC61));
  int32x4_t v34 = (int32x4_t)vqtbl1q_s8(v22, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v35 = (int8x16_t)vdupq_laneq_s32(v34, 2);
  int32x4_t v36 = vpaddq_s32(vmull_s16(*(int16x4_t *)v35.i8, (int16x4_t)0x9DACB4BE28BA4B42), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v35, v35, 8uLL), (int16x4_t)0xD7464B426254B4BELL));
  int8x16_t v37 = (int8x16_t)vdupq_laneq_s32(v31, 3);
  int8x16_t v38 = (int8x16_t)vdupq_laneq_s32(v34, 3);
  int32x4_t v39 = vaddq_s32(v33, v24);
  int32x4_t v40 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v37.i8, (int16x4_t)0xBE4D8C04171241B3), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v37, v37, 8uLL), (int16x4_t)0x8C04625462541712)), v28);
  int32x4_t v41 = vaddq_s32(v36, v26);
  int32x4_t v42 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v38.i8, (int16x4_t)0xC4DF979E14C33B21), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL), (int16x4_t)0x979E587E587E14C3)), v30);
  int32x4_t v43 = vsubq_s32(v39, v40);
  int32x4_t v44 = vaddq_s32(v40, v39);
  int32x4_t v45 = vsubq_s32(v41, v42);
  int32x4_t v46 = vaddq_s32(v42, v41);
  int8x16_t v47 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[4], this[4]), 1uLL), (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v48 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v47.i8, 0);
  int8x16_t v49 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[5], this[5]), 1uLL), (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v50 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v49.i8, 0);
  int8x16_t v51 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v47.i8, 1);
  int8x16_t v52 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v49.i8, 1);
  int32x4_t v53 = vpaddq_s32(vmull_s16(*(int16x4_t *)v52.i8, (int16x4_t)0xEB3D587E587E6862), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL), (int16x4_t)0xC4DF14C3979E3B21));
  int32x4_t v54 = (int32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v55 = (int8x16_t)vdupq_laneq_s32(v54, 2);
  int32x4_t v56 = (int32x4_t)vqtbl1q_s8(v49, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v57 = (int8x16_t)vdupq_laneq_s32(v56, 2);
  int8x16_t v58 = (int8x16_t)vdupq_laneq_s32(v54, 3);
  int8x16_t v59 = (int8x16_t)vdupq_laneq_s32(v56, 3);
  int32x4_t v60 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v55.i8, (int16x4_t)0xAC61C00022A34000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v55, v55, 8uLL), (int16x4_t)0xDD5D4000539FC000)), vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0x22A34000539F4000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)0xAC614000DD5D4000)));
  int32x4_t v61 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v58.i8, (int16x4_t)0xCDB7A73B11A83249), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL), (int16x4_t)0xA73B4B424B4211A8)), vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0xEE584B424B4258C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)0xCDB711A8A73B3249)));
  int32x4_t v62 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v57.i8, (int16x4_t)0x9DACB4BE28BA4B42), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v57, v57, 8uLL), (int16x4_t)0xD7464B426254B4BELL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0x28BA4B4262544B42), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)0x9DAC4B42D7464B42)));
  int32x4_t v63 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v59.i8, (int16x4_t)0xC4DF979E14C33B21), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL), (int16x4_t)0x979E587E587E14C3)), v53);
  int32x4_t v64 = vsubq_s32(v60, v61);
  int32x4_t v65 = vaddq_s32(v61, v60);
  int32x4_t v66 = vsubq_s32(v62, v63);
  int32x4_t v67 = vaddq_s32(v63, v62);
  int8x16_t v68 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[6], this[6]), 1uLL), (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v69 = vqtbl1q_s8((int8x16_t)vshrq_n_s16(vmulq_s16(a4[7], this[7]), 1uLL), (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v70 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v68.i8, 0);
  int8x16_t v71 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v69.i8, 0);
  int8x16_t v72 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v68.i8, 1);
  int8x16_t v73 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v69.i8, 1);
  int32x4_t v74 = (int32x4_t)vqtbl1q_s8(v68, (int8x16_t)xmmword_262CDE5D0);
  int32x4_t v75 = (int32x4_t)vqtbl1q_s8(v69, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v76 = (int8x16_t)vdupq_laneq_s32(v74, 2);
  int8x16_t v77 = (int8x16_t)vdupq_laneq_s32(v75, 2);
  int8x16_t v78 = (int8x16_t)vdupq_laneq_s32(v74, 3);
  int32x4_t v79 = vpaddq_s32(vmull_s16(*(int16x4_t *)v78.i8, (int16x4_t)0xBE4D8C04171241B3), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v78, v78, 8uLL), (int16x4_t)0x8C04625462541712));
  int8x16_t v80 = (int8x16_t)vdupq_laneq_s32(v75, 3);
  int32x4_t v81 = vmull_s16(*(int16x4_t *)v80.i8, (int16x4_t)0xBA4184DF187E45BFLL);
  int32x4_t v82 = vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL), (int16x4_t)0x84DF68626862187ELL);
  int8x16_t v83 = (int8x16_t)vrev64q_s32(v181);
  float32x4_t v84 = vcvtq_f32_s32((int32x4_t)vextq_s8(v83, v83, 8uLL));
  int8x16_t v85 = (int8x16_t)vrev64q_s32(v43);
  int8x16_t v86 = (int8x16_t)vrev64q_s32(v45);
  int32x4_t v87 = (int32x4_t)vextq_s8(v86, v86, 8uLL);
  float32x4_t v88 = vcvtq_f32_s32((int32x4_t)vextq_s8(v85, v85, 8uLL));
  float32x4_t v89 = vcvtq_f32_s32(v44);
  int8x16_t v90 = (int8x16_t)vrev64q_s32(v66);
  float32x4_t v91 = vcvtq_f32_s32(v67);
  float32x4_t v92 = vcvtq_f32_s32((int32x4_t)vextq_s8(v90, v90, 8uLL));
  int32x4_t v93 = vpaddq_s32(v81, v82);
  int32x4_t v94 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v76.i8, (int16x4_t)0x92BFAC612D41539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL), (int16x4_t)0xD2BF539F6D41AC61)), vpaddq_s32(vmull_s16(*(int16x4_t *)v70.i8, (int16x4_t)0x2D41539F6D41539FLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v70, v70, 8uLL), (int16x4_t)0x92BF539FD2BF539FLL)));
  int32x4_t v95 = vaddq_s32(v79, vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0xE8EE6254625473FCLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v72, v72, 8uLL), (int16x4_t)0xBE4D17128C0441B3)));
  int32x4_t v96 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v77.i8, (int16x4_t)0x8C04A73B300B58C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL), (int16x4_t)0xCFF558C573FCA73BLL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v71.i8, (int16x4_t)0x300B58C573FC58C5), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v71, v71, 8uLL), (int16x4_t)0x8C0458C5CFF558C5)));
  int32x4_t v97 = vaddq_s32(v93, vpaddq_s32(vmull_s16(*(int16x4_t *)v73.i8, (int16x4_t)0xE782686268627B21), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v73, v73, 8uLL), (int16x4_t)0xBA41187E84DF45BFLL)));
  int32x4_t v98 = vsubq_s32(v94, v95);
  int32x4_t v99 = vaddq_s32(v95, v94);
  int8x16_t v100 = (int8x16_t)vrev64q_s32(v98);
  int32x4_t v101 = (int32x4_t)vextq_s8(v100, v100, 8uLL);
  int32x4_t v102 = vsubq_s32(v96, v97);
  int32x4_t v103 = vaddq_s32(v97, v96);
  int8x16_t v104 = (int8x16_t)vrev64q_s32(v102);
  int32x4_t v105 = (int32x4_t)vextq_s8(v104, v104, 8uLL);
  float32x4_t v106 = vcvtq_f32_s32(v99);
  float32x4_t v107 = vcvtq_f32_s32(v101);
  float32x4_t v108 = vcvtq_f32_s32(v103);
  *(float *)v103.i32 = (float)(1 << (char)a3) * 0.0000000037253;
  *(float *)v99.i32 = (float)((1 << (char)a3) + 1) * 0.5;
  float32x4_t v109 = vmulq_n_f32(v92, *(float *)v103.i32);
  float32x4_t v110 = vmulq_n_f32(v91, *(float *)v103.i32);
  float32x4_t v111 = vmulq_n_f32(vcvtq_f32_s32(v46), *(float *)v103.i32);
  float32x4_t v112 = vmulq_n_f32(vcvtq_f32_s32(v87), *(float *)v103.i32);
  float32x4_t v113 = (float32x4_t)vdupq_n_s32(0x3F2B0DC1u);
  float32x4_t v114 = vaddq_f32(v112, vmulq_f32(v109, v113));
  float32x4_t v115 = vaddq_f32(v111, vmulq_f32(v110, v113));
  float32x4_t v116 = vsubq_f32(v109, vmulq_f32(v112, v113));
  float32x4_t v117 = vsubq_f32(v110, vmulq_f32(v111, v113));
  float32x4_t v118 = vmulq_n_f32(vcvtq_f32_s32(v105), *(float *)v103.i32);
  float32x4_t v119 = vmulq_n_f32(v108, *(float *)v103.i32);
  float32x4_t v120 = vmulq_n_f32(vcvtq_f32_s32(v182), *(float *)v103.i32);
  float32x4_t v121 = vmulq_n_f32(v84, *(float *)v103.i32);
  float32x4_t v122 = (float32x4_t)vdupq_n_s32(0x3E4BAFAFu);
  float32x4_t v123 = vaddq_f32(v121, vmulq_f32(v118, v122));
  float32x4_t v124 = vaddq_f32(v120, vmulq_f32(v119, v122));
  float32x4_t v125 = vsubq_f32(vmulq_f32(v121, v122), v118);
  float32x4_t v126 = vsubq_f32(vmulq_f32(v120, v122), v119);
  float32x4_t v127 = vsubq_f32(v126, v117);
  float32x4_t v128 = vsubq_f32(v125, v116);
  float32x4_t v129 = vsubq_f32(v124, v115);
  float32x4_t v130 = vaddq_f32(v117, v126);
  float32x4_t v131 = vsubq_f32(v123, v114);
  float32x4_t v132 = vaddq_f32(v116, v125);
  float32x4_t v133 = vaddq_f32(v115, v124);
  float32x4_t v134 = vaddq_f32(v114, v123);
  float32x4_t v135 = (float32x4_t)vdupq_n_s32(0x3F3504F3u);
  float32x4_t v136 = vmulq_f32(vaddq_f32(v127, v129), v135);
  float32x4_t v137 = vmulq_f32(vaddq_f32(v128, v131), v135);
  float32x4_t v138 = vmulq_f32(vsubq_f32(v129, v127), v135);
  float32x4_t v139 = vmulq_f32(vsubq_f32(v131, v128), v135);
  float32x4_t v140 = vmulq_n_f32(v107, *(float *)v103.i32);
  float32x4_t v141 = vmulq_n_f32(v106, *(float *)v103.i32);
  float32x4_t v142 = vmulq_n_f32(v89, *(float *)v103.i32);
  float32x4_t v143 = vmulq_n_f32(v88, *(float *)v103.i32);
  float32x4_t v144 = (float32x4_t)vdupq_n_s32(0x3ED413CDu);
  float32x4_t v145 = vaddq_f32(v143, vmulq_f32(v140, v144));
  float32x4_t v146 = vaddq_f32(v142, vmulq_f32(v141, v144));
  float32x4_t v147 = vsubq_f32(vmulq_f32(v143, v144), v140);
  float32x4_t v148 = vsubq_f32(vmulq_f32(v142, v144), v141);
  int8x16_t v149 = (int8x16_t)vrev64q_s32(v184);
  float32x4_t v150 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v99.i8, 0);
  float32x4_t v151 = vaddq_f32(v150, vmulq_n_f32(vcvtq_f32_s32(v183), *(float *)v103.i32));
  float32x4_t v152 = vaddq_f32(v150, vmulq_n_f32(vcvtq_f32_s32((int32x4_t)vextq_s8(v149, v149, 8uLL)), *(float *)v103.i32));
  int8x16_t v153 = (int8x16_t)vrev64q_s32(v64);
  float32x4_t v154 = vmulq_n_f32(vcvtq_f32_s32(v65), *(float *)v103.i32);
  float32x4_t v155 = vmulq_n_f32(vcvtq_f32_s32((int32x4_t)vextq_s8(v153, v153, 8uLL)), *(float *)v103.i32);
  float32x4_t v156 = vaddq_f32(v152, v155);
  float32x4_t v157 = vsubq_f32(v152, v155);
  float32x4_t v158 = vaddq_f32(v151, v154);
  float32x4_t v159 = vsubq_f32(v151, v154);
  float32x4_t v160 = vaddq_f32(v158, v146);
  float32x4_t v161 = vsubq_f32(v158, v146);
  float32x4_t v162 = vaddq_f32(v156, v145);
  float32x4_t v163 = vsubq_f32(v156, v145);
  float32x4_t v164 = vaddq_f32(v159, v148);
  float32x4_t v165 = vsubq_f32(v159, v148);
  float32x4_t v166 = vaddq_f32(v157, v147);
  float32x4_t v167 = vsubq_f32(v157, v147);
  float32x4_t v168 = vaddq_f32(v163, v132);
  float32x4_t v169 = vsubq_f32(v163, v132);
  float32x4_t v170 = vaddq_f32(v161, v130);
  float32x4_t v171 = vsubq_f32(v161, v130);
  float32x4_t v172 = vaddq_f32(v167, v139);
  float32x4_t v173 = vsubq_f32(v167, v139);
  float32x4_t v174 = vaddq_f32(v165, v138);
  float32x4_t v175 = vsubq_f32(v165, v138);
  float32x4_t v176 = vaddq_f32(v166, v137);
  int16x8_t v177 = vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(v175)), vcvtq_s32_f32(v173));
  int16x8_t v178 = vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vsubq_f32(v164, v136))), vcvtq_s32_f32(vsubq_f32(v166, v137)));
  int16x8_t v179 = vdupq_n_s16(1 << ((_BYTE)a3 - 1));
  *a2 = vsubq_s16(vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32(v160, v133))), vcvtq_s32_f32(vaddq_f32(v162, v134))), v179);
  a2[1] = vsubq_s16(vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vaddq_f32(v164, v136))), vcvtq_s32_f32(v176)), v179);
  a2[2] = vsubq_s16(vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(v174)), vcvtq_s32_f32(v172)), v179);
  a2[3] = vsubq_s16(vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(v170)), vcvtq_s32_f32(v168)), v179);
  a2[4] = vsubq_s16(vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(v171)), vcvtq_s32_f32(v169)), v179);
  a2[5] = vsubq_s16(v177, v179);
  int16x8_t result = vsubq_s16(vqmovn_high_s32(vqmovn_s32(vcvtq_s32_f32(vsubq_f32(v160, v133))), vcvtq_s32_f32(vsubq_f32(v162, v134))), v179);
  a2[6] = vsubq_s16(v178, v179);
  a2[7] = result;
  return result;
}

unint64_t Frame::Header::decode(uint64_t a1, void *a2)
{
  unint64_t v2 = 4;
  int v3 = a2;
  while (1)
  {
    unint64_t v4 = v3[1];
    BOOL v5 = v2 >= v4;
    unint64_t v6 = v2 - v4;
    if (!v5) {
      break;
    }
    int v3 = (void *)v3[2];
    unint64_t v2 = v6;
    if (!v3) {
      goto LABEL_18;
    }
  }
  if (*(unsigned char *)(*v3 + v2) == 1)
  {
    unint64_t v7 = 5;
    int8x16_t v8 = a2;
    while (1)
    {
      unint64_t v9 = v8[1];
      BOOL v5 = v7 >= v9;
      unint64_t v10 = v7 - v9;
      if (!v5) {
        break;
      }
      int8x16_t v8 = (void *)v8[2];
      unint64_t v7 = v10;
      if (!v8) {
        goto LABEL_18;
      }
    }
    if (*(unsigned char *)(*v8 + v7) == 18)
    {
      unint64_t v11 = 5;
      int32x4_t v12 = a2;
      while (1)
      {
        unint64_t v13 = v12[1];
        BOOL v5 = v11 >= v13;
        unint64_t v14 = v11 - v13;
        if (!v5) {
          break;
        }
        int32x4_t v12 = (void *)v12[2];
        unint64_t v11 = v14;
        if (!v12) {
          goto LABEL_123;
        }
      }
      LODWORD(v12) = *(unsigned __int8 *)(*v12 + v11);
LABEL_123:
      uint64_t v98 = (v12 + 6);
      *(_DWORD *)a1 = v98;
      unint64_t v99 = 6;
      int8x16_t v100 = a2;
      while (1)
      {
        unint64_t v101 = v100[1];
        BOOL v5 = v99 >= v101;
        unint64_t v102 = v99 - v101;
        if (!v5) {
          break;
        }
        int8x16_t v100 = (void *)v100[2];
        unint64_t v99 = v102;
        if (!v100) {
          goto LABEL_127;
        }
      }
      LODWORD(v100) = *(unsigned __int8 *)(*v100 + v99) << 8;
LABEL_127:
      unint64_t v103 = 7;
      int8x16_t v104 = a2;
      while (1)
      {
        unint64_t v105 = v104[1];
        BOOL v5 = v103 >= v105;
        unint64_t v106 = v103 - v105;
        if (!v5) {
          break;
        }
        int8x16_t v104 = (void *)v104[2];
        unint64_t v103 = v106;
        if (!v104) {
          goto LABEL_131;
        }
      }
      LODWORD(v104) = *(unsigned __int8 *)(*v104 + v103);
LABEL_131:
      *(_DWORD *)(a1 + 4) = v100 | v104;
      unint64_t v107 = 8;
      float32x4_t v108 = a2;
      while (1)
      {
        unint64_t v109 = v108[1];
        BOOL v5 = v107 >= v109;
        unint64_t v110 = v107 - v109;
        if (!v5) {
          break;
        }
        float32x4_t v108 = (void *)v108[2];
        unint64_t v107 = v110;
        if (!v108) {
          goto LABEL_135;
        }
      }
      LODWORD(v108) = *(unsigned __int8 *)(*v108 + v107) << 8;
LABEL_135:
      unint64_t v111 = 9;
      float32x4_t v112 = a2;
      while (1)
      {
        unint64_t v113 = v112[1];
        BOOL v5 = v111 >= v113;
        unint64_t v114 = v111 - v113;
        if (!v5) {
          break;
        }
        float32x4_t v112 = (void *)v112[2];
        unint64_t v111 = v114;
        if (!v112) {
          goto LABEL_139;
        }
      }
      LODWORD(v112) = *(unsigned __int8 *)(*v112 + v111);
LABEL_139:
      *(_DWORD *)(a1 + 8) = v112 | v108;
      unint64_t v115 = 16;
      float32x4_t v116 = a2;
      while (1)
      {
        unint64_t v117 = v116[1];
        BOOL v5 = v115 >= v117;
        unint64_t v118 = v115 - v117;
        if (!v5) {
          break;
        }
        float32x4_t v116 = (void *)v116[2];
        unint64_t v115 = v118;
        if (!v116) {
          goto LABEL_154;
        }
      }
      if (*(unsigned __int8 *)(*v116 + v115) >= 0x40u)
      {
        unint64_t v119 = 16;
        float32x4_t v120 = a2;
        while (1)
        {
          unint64_t v121 = v120[1];
          BOOL v5 = v119 >= v121;
          unint64_t v122 = v119 - v121;
          if (!v5) {
            break;
          }
          float32x4_t v120 = (void *)v120[2];
          unint64_t v119 = v122;
          if (!v120) {
            goto LABEL_153;
          }
        }
        if ((*(unsigned char *)(*v120 + v119) & 0xF) == 0xE)
        {
          LODWORD(v116) = 2;
          goto LABEL_154;
        }
LABEL_153:
        LODWORD(v116) = 1;
      }
      else
      {
        LODWORD(v116) = 0;
      }
LABEL_154:
      *(_DWORD *)(a1 + 16) = v116;
      unint64_t v123 = 17;
      float32x4_t v124 = a2;
      while (1)
      {
        unint64_t v125 = v124[1];
        BOOL v5 = v123 >= v125;
        unint64_t v126 = v123 - v125;
        if (!v5) {
          break;
        }
        float32x4_t v124 = (void *)v124[2];
        unint64_t v123 = v126;
        if (!v124) {
          goto LABEL_158;
        }
      }
      LODWORD(v124) = *(unsigned __int8 *)(*v124 + v123) >> 6;
LABEL_158:
      *(_DWORD *)(a1 + 12) = v124;
      unint64_t v127 = 18;
      float32x4_t v128 = a2;
      while (1)
      {
        unint64_t v129 = v128[1];
        BOOL v5 = v127 >= v129;
        unint64_t v130 = v127 - v129;
        if (!v5) {
          break;
        }
        float32x4_t v128 = (void *)v128[2];
        unint64_t v127 = v130;
        if (!v128) {
          goto LABEL_162;
        }
      }
      LODWORD(v128) = *(unsigned __int8 *)(*v128 + v127);
LABEL_162:
      *(_DWORD *)(a1 + 28) = v128;
      unint64_t v131 = 19;
      float32x4_t v132 = a2;
      while (1)
      {
        unint64_t v133 = v132[1];
        BOOL v5 = v131 >= v133;
        unint64_t v134 = v131 - v133;
        if (!v5) {
          break;
        }
        float32x4_t v132 = (void *)v132[2];
        unint64_t v131 = v134;
        if (!v132) {
          goto LABEL_166;
        }
      }
      LODWORD(v132) = *(unsigned __int8 *)(*v132 + v131);
LABEL_166:
      *(_DWORD *)(a1 + 32) = v132;
      unint64_t v135 = 20;
      do
      {
        unint64_t v136 = a2[1];
        BOOL v5 = v135 >= v136;
        unint64_t v137 = v135 - v136;
        if (!v5)
        {
          *(_DWORD *)(a1 + 36) = *(unsigned __int8 *)(*a2 + v135);
          *(_DWORD *)(a1 + 44) = 0;
          *(_WORD *)(a1 + 48) = 0;
          return v98;
        }
        a2 = (void *)a2[2];
        unint64_t v135 = v137;
      }
      while (a2);
      *(_DWORD *)(a1 + 36) = 0;
      *(_DWORD *)(a1 + 44) = 0;
      *(_WORD *)(a1 + 48) = 0;
      return v98;
    }
  }
LABEL_18:
  unint64_t v15 = 0;
  unint64_t v16 = (unint64_t)a2;
  while (1)
  {
    unint64_t v17 = *(void *)(v16 + 8);
    BOOL v5 = v15 >= v17;
    unint64_t v18 = v15 - v17;
    if (!v5) {
      break;
    }
    unint64_t v16 = *(void *)(v16 + 16);
    unint64_t v15 = v18;
    if (!v16) {
      goto LABEL_22;
    }
  }
  LODWORD(v16) = *(unsigned __int8 *)(*(void *)v16 + v15);
LABEL_22:
  LODWORD(v16) = v16 << 8;
  unint64_t v19 = 1;
  int32x4_t v20 = a2;
  do
  {
    unint64_t v21 = v20[1];
    BOOL v5 = v19 >= v21;
    unint64_t v22 = v19 - v21;
    if (!v5)
    {
      unint64_t v16 = v16 | *(unsigned __int8 *)(*v20 + v19);
      *(_DWORD *)a1 = v16;
      if (v16 < 0x14) {
        return 0;
      }
      goto LABEL_30;
    }
    int32x4_t v20 = (void *)v20[2];
    unint64_t v19 = v22;
  }
  while (v20);
  unint64_t v16 = v16;
  *(_DWORD *)a1 = v16;
  if (v16 < 0x14) {
    return 0;
  }
LABEL_30:
  unint64_t v24 = 3;
  int8x16_t v25 = a2;
  while (1)
  {
    unint64_t v26 = v25[1];
    BOOL v5 = v24 >= v26;
    unint64_t v27 = v24 - v26;
    if (!v5) {
      break;
    }
    int8x16_t v25 = (void *)v25[2];
    unint64_t v24 = v27;
    if (!v25) {
      goto LABEL_37;
    }
  }
  if (*(unsigned __int8 *)(*v25 + v24) > 1u) {
    return 0;
  }
LABEL_37:
  unint64_t v28 = 8;
  int8x16_t v29 = a2;
  while (1)
  {
    unint64_t v30 = v29[1];
    BOOL v5 = v28 >= v30;
    unint64_t v31 = v28 - v30;
    if (!v5) {
      break;
    }
    int8x16_t v29 = (void *)v29[2];
    unint64_t v28 = v31;
    if (!v29) {
      goto LABEL_41;
    }
  }
  LODWORD(v29) = *(unsigned __int8 *)(*v29 + v28);
LABEL_41:
  int v32 = v29 << 8;
  unint64_t v33 = 9;
  int32x4_t v34 = a2;
  while (1)
  {
    unint64_t v35 = v34[1];
    BOOL v5 = v33 >= v35;
    unint64_t v36 = v33 - v35;
    if (!v5) {
      break;
    }
    int32x4_t v34 = (void *)v34[2];
    unint64_t v33 = v36;
    if (!v34) {
      goto LABEL_45;
    }
  }
  LODWORD(v34) = *(unsigned __int8 *)(*v34 + v33);
LABEL_45:
  *(_DWORD *)(a1 + 4) = v32 | v34;
  unint64_t v37 = 10;
  int8x16_t v38 = a2;
  while (1)
  {
    unint64_t v39 = v38[1];
    BOOL v5 = v37 >= v39;
    unint64_t v40 = v37 - v39;
    if (!v5) {
      break;
    }
    int8x16_t v38 = (void *)v38[2];
    unint64_t v37 = v40;
    if (!v38) {
      goto LABEL_49;
    }
  }
  LODWORD(v38) = *(unsigned __int8 *)(*v38 + v37);
LABEL_49:
  int v41 = v38 << 8;
  unint64_t v42 = 11;
  int32x4_t v43 = a2;
  while (1)
  {
    unint64_t v44 = v43[1];
    BOOL v5 = v42 >= v44;
    unint64_t v45 = v42 - v44;
    if (!v5) {
      break;
    }
    int32x4_t v43 = (void *)v43[2];
    unint64_t v42 = v45;
    if (!v43) {
      goto LABEL_53;
    }
  }
  LODWORD(v43) = *(unsigned __int8 *)(*v43 + v42);
LABEL_53:
  *(_DWORD *)(a1 + 8) = v41 | v43;
  unint64_t v46 = 12;
  int8x16_t v47 = a2;
  while (1)
  {
    unint64_t v48 = v47[1];
    BOOL v5 = v46 >= v48;
    unint64_t v49 = v46 - v48;
    if (!v5) {
      break;
    }
    int8x16_t v47 = (void *)v47[2];
    unint64_t v46 = v49;
    if (!v47) {
      goto LABEL_57;
    }
  }
  LODWORD(v47) = *(unsigned __int8 *)(*v47 + v46);
LABEL_57:
  *(_DWORD *)(a1 + 12) = v47 >> 6;
  unint64_t v50 = 12;
  int8x16_t v51 = a2;
  while (1)
  {
    unint64_t v52 = v51[1];
    BOOL v5 = v50 >= v52;
    unint64_t v53 = v50 - v52;
    if (!v5) {
      break;
    }
    int8x16_t v51 = (void *)v51[2];
    unint64_t v50 = v53;
    if (!v51) {
      goto LABEL_61;
    }
  }
  LODWORD(v51) = *(unsigned __int8 *)(*v51 + v50);
LABEL_61:
  *(_DWORD *)(a1 + 16) = (v51 >> 2) & 3;
  unint64_t v54 = 14;
  int8x16_t v55 = a2;
  while (1)
  {
    unint64_t v56 = v55[1];
    BOOL v5 = v54 >= v56;
    unint64_t v57 = v54 - v56;
    if (!v5) {
      break;
    }
    int8x16_t v55 = (void *)v55[2];
    unint64_t v54 = v57;
    if (!v55) {
      goto LABEL_65;
    }
  }
  LODWORD(v55) = *(unsigned __int8 *)(*v55 + v54);
LABEL_65:
  *(_DWORD *)(a1 + 28) = v55;
  unint64_t v58 = 15;
  int8x16_t v59 = a2;
  while (1)
  {
    unint64_t v60 = v59[1];
    BOOL v5 = v58 >= v60;
    unint64_t v61 = v58 - v60;
    if (!v5) {
      break;
    }
    int8x16_t v59 = (void *)v59[2];
    unint64_t v58 = v61;
    if (!v59) {
      goto LABEL_69;
    }
  }
  LODWORD(v59) = *(unsigned __int8 *)(*v59 + v58);
LABEL_69:
  *(_DWORD *)(a1 + 32) = v59;
  unint64_t v62 = 16;
  int32x4_t v63 = a2;
  while (1)
  {
    unint64_t v64 = v63[1];
    BOOL v5 = v62 >= v64;
    unint64_t v65 = v62 - v64;
    if (!v5) {
      break;
    }
    int32x4_t v63 = (void *)v63[2];
    unint64_t v62 = v65;
    if (!v63) {
      goto LABEL_73;
    }
  }
  LODWORD(v63) = *(unsigned __int8 *)(*v63 + v62);
LABEL_73:
  *(_DWORD *)(a1 + 36) = v63;
  unint64_t v66 = 17;
  uint64_t v67 = (uint64_t)a2;
  while (1)
  {
    unint64_t v68 = *(void *)(v67 + 8);
    BOOL v5 = v66 >= v68;
    unint64_t v69 = v66 - v68;
    if (!v5) {
      break;
    }
    uint64_t v67 = *(void *)(v67 + 16);
    unint64_t v66 = v69;
    if (!v67) {
      goto LABEL_81;
    }
  }
  uint64_t v67 = (*(unsigned __int8 *)(*(void *)v67 + v66) >> 4) - 1;
  if (v67 > 0xE) {
    LODWORD(v67) = 0;
  }
  else {
    LODWORD(v67) = *(_DWORD *)&aYuv2012v612v80[4 * v67];
  }
LABEL_81:
  *(_DWORD *)(a1 + 40) = v67;
  unint64_t v70 = 17;
  int8x16_t v71 = a2;
  while (1)
  {
    unint64_t v72 = v71[1];
    BOOL v5 = v70 >= v72;
    unint64_t v73 = v70 - v72;
    if (!v5) {
      break;
    }
    int8x16_t v71 = (void *)v71[2];
    unint64_t v70 = v73;
    if (!v71) {
      goto LABEL_85;
    }
  }
  LODWORD(v71) = *(unsigned char *)(*v71 + v70) & 0xF;
LABEL_85:
  *(_DWORD *)(a1 + 44) = v71;
  unint64_t v74 = 19;
  int32x4_t v75 = a2;
  do
  {
    unint64_t v76 = v75[1];
    BOOL v5 = v74 >= v76;
    unint64_t v77 = v74 - v76;
    if (!v5)
    {
      int v78 = (*(unsigned __int8 *)(*v75 + v74) >> 1) & 1;
      goto LABEL_90;
    }
    int32x4_t v75 = (void *)v75[2];
    unint64_t v74 = v77;
  }
  while (v75);
  int v78 = 0;
LABEL_90:
  *(unsigned char *)(a1 + 48) = v78;
  unint64_t v79 = 19;
  int8x16_t v80 = a2;
  do
  {
    unint64_t v81 = v80[1];
    BOOL v5 = v79 >= v81;
    unint64_t v82 = v79 - v81;
    if (!v5)
    {
      LODWORD(v80) = *(unsigned char *)(*v80 + v79) & 1;
      *(unsigned char *)(a1 + 49) = (_BYTE)v80;
      unint64_t v84 = a2[1];
      int8x16_t v83 = (void *)a2[2];
      unint64_t v85 = 20;
      if (v84 > 0x14) {
        goto LABEL_99;
      }
LABEL_97:
      while (v83)
      {
        a2 = v83;
        v85 -= v84;
        unint64_t v84 = v83[1];
        int8x16_t v83 = (void *)v83[2];
        if (v85 < v84) {
          goto LABEL_99;
        }
      }
      long long v138 = (unint64_t)&SegmentedBuffer::nullSegment;
      float32x4_t v139 = 0;
      if (!v78) {
        goto LABEL_113;
      }
      goto LABEL_102;
    }
    int8x16_t v80 = (void *)v80[2];
    unint64_t v79 = v82;
  }
  while (v80);
  *(unsigned char *)(a1 + 49) = 0;
  unint64_t v84 = a2[1];
  int8x16_t v83 = (void *)a2[2];
  unint64_t v85 = 20;
  if (v84 <= 0x14) {
    goto LABEL_97;
  }
LABEL_99:
  *(void *)&long long v138 = *a2 + v85;
  *((void *)&v138 + 1) = v84 - v85;
  float32x4_t v139 = v83;
  if (!v78)
  {
LABEL_113:
    if (!v80) {
      return v16;
    }
    goto LABEL_114;
  }
LABEL_102:
  for (unint64_t i = 0; i != 64; ++i)
  {
    int32x4_t v87 = &v138;
    unint64_t v88 = i;
    while (1)
    {
      unint64_t v89 = *((void *)v87 + 1);
      BOOL v5 = v88 >= v89;
      unint64_t v90 = v88 - v89;
      if (!v5) {
        break;
      }
      int32x4_t v87 = (long long *)*((void *)v87 + 2);
      unint64_t v88 = v90;
      if (!v87) {
        goto LABEL_103;
      }
    }
    LOBYTE(v87) = *(unsigned char *)(*(void *)v87 + v88);
LABEL_103:
    *(unsigned char *)(a1 + i + 64) = (_BYTE)v87;
  }
  uint64_t v91 = *((void *)&v138 + 1);
  unint64_t v92 = 64;
  if (*((void *)&v138 + 1) > 0x40uLL)
  {
LABEL_112:
    *(void *)&long long v138 = v138 + v92;
    *((void *)&v138 + 1) = v91 - v92;
    goto LABEL_113;
  }
  while (v139)
  {
    v92 -= v91;
    long long v138 = *(_OWORD *)v139;
    float32x4_t v139 = (void *)v139[2];
    uint64_t v91 = *((void *)&v138 + 1);
    if (v92 < *((void *)&v138 + 1)) {
      goto LABEL_112;
    }
  }
  *(void *)&long long v138 = &SegmentedBuffer::nullSegment;
  *((void *)&v138 + 1) = 0;
  float32x4_t v139 = 0;
  if (v80)
  {
LABEL_114:
    for (unint64_t j = 0; j != 64; ++j)
    {
      int32x4_t v94 = &v138;
      unint64_t v95 = j;
      while (1)
      {
        unint64_t v96 = *((void *)v94 + 1);
        BOOL v5 = v95 >= v96;
        unint64_t v97 = v95 - v96;
        if (!v5) {
          break;
        }
        int32x4_t v94 = (long long *)*((void *)v94 + 2);
        unint64_t v95 = v97;
        if (!v94) {
          goto LABEL_115;
        }
      }
      LOBYTE(v94) = *(unsigned char *)(*(void *)v94 + v95);
LABEL_115:
      *(unsigned char *)(a1 + j + 128) = (_BYTE)v94;
    }
  }
  return v16;
}

void FrameDecoder::FrameDecoder(FrameDecoder *this, int NumProcessors, void (*a3)(void))
{
  *((void *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  if (NumProcessors <= 0) {
    NumProcessors = IcpUtility::getNumProcessors(this);
  }
  unint64_t v4 = (IcpUtility *)ThreadPool<DecoderWorker,DecoderJob,void>::create(NumProcessors, 0);
  *((void *)this + 6) = v4;
  if (!v4)
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    unint64_t v6 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v6, MEMORY[0x263F8C218], MEMORY[0x263F8C170]);
  }
  *((unsigned char *)this + 56) = IcpUtility::isAVXAvailable(v4);
}

void sub_262C95F74(_Unwind_Exception *a1)
{
  int v3 = *(void **)(v1 + 24);
  if (v3)
  {
    *(void *)(v1 + 32) = v3;
    operator delete(v3);
  }
  FrameDecoder::FrameDecoder(v1);
  _Unwind_Resume(a1);
}

unint64_t ThreadPool<DecoderWorker,DecoderJob,void>::create(int a1, uint64_t a2)
{
  if (a1 < 1) {
    return 0;
  }
  {
    uint64_t v13 = 64;
    size_t v12 = 8;
    int v8 = sysctlbyname("hw.cachelinesize", &v13, &v12, 0, 0);
    BOOL v9 = v12 == 8 && v8 == 0;
    uint64_t v10 = v13;
    if (!v9) {
      uint64_t v10 = 0;
    }
    ThreadPool<DecoderWorker,DecoderJob,void>::getBlockSize(void)::cacheLineSize = v10;
  }
  {
    uint64_t v11 = ThreadPool<DecoderWorker,DecoderJob,void>::getBlockSize(void)::cacheLineSize;
    if (!ThreadPool<DecoderWorker,DecoderJob,void>::getBlockSize(void)::cacheLineSize) {
      uint64_t v11 = 256;
    }
    ThreadPool<DecoderWorker,DecoderJob,void>::getBlockSize(void)::blockSize = v11;
  }
  uint64_t v4 = ThreadPool<DecoderWorker,DecoderJob,void>::getBlockSize(void)::blockSize;
  BOOL v5 = malloc_type_malloc(((v4 + 47) & -v4) + v4, 0x1E83A129uLL);
  if (!v5) {
    return 0;
  }
  unint64_t v6 = ((unint64_t)v5 + v4) & -v4;
  *(void *)(v6 - 8) = v5;
  if (v6)
  {
    *(_DWORD *)unint64_t v6 = a1;
    *(void *)(v6 + 8) = dispatch_get_global_queue(0, 0);
    *(void *)(v6 + 16) = dispatch_group_create();
    atomic_store(0, (unsigned int *)(v6 + 24));
    *(_DWORD *)(v6 + 28) = 0;
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 40) = a2;
  }
  return v6;
}

void sub_262C96118(_Unwind_Exception *a1)
{
}

void FrameDecoder::~FrameDecoder(FrameDecoder *this)
{
  uint64_t v2 = *((void *)this + 6);
  if (v2)
  {
    dispatch_release(*(dispatch_object_t *)(v2 + 16));
    free(*(void **)(v2 - 8));
  }
  int v3 = (void *)*((void *)this + 3);
  if (v3)
  {
    *((void *)this + 4) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void **)this;
  if (*(void *)this)
  {
    *((void *)this + 1) = v4;
    operator delete(v4);
  }
}

uint64_t FrameDecoder::decode(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5, BOOL *a6)
{
  uint64_t v10 = a2;
  unint64_t v12 = 0;
  v167[8] = *MEMORY[0x263EF8340];
  uint64_t v13 = a2;
  do
  {
    unint64_t v14 = v13[1];
    BOOL v15 = v12 >= v14;
    unint64_t v16 = v12 - v14;
    if (!v15)
    {
      int v17 = *(unsigned __int8 *)(*v13 + v12);
      goto LABEL_6;
    }
    uint64_t v13 = (void *)v13[2];
    unint64_t v12 = v16;
  }
  while (v13);
  int v17 = 0;
LABEL_6:
  int v18 = v17 << 24;
  unint64_t v19 = 1;
  int32x4_t v20 = a2;
  while (1)
  {
    unint64_t v21 = v20[1];
    BOOL v15 = v19 >= v21;
    unint64_t v22 = v19 - v21;
    if (!v15) {
      break;
    }
    int32x4_t v20 = (void *)v20[2];
    unint64_t v19 = v22;
    if (!v20) {
      goto LABEL_10;
    }
  }
  LODWORD(v20) = *(unsigned __int8 *)(*v20 + v19);
LABEL_10:
  int v23 = v18 | (v20 << 16);
  unint64_t v24 = 2;
  int8x16_t v25 = a2;
  while (1)
  {
    unint64_t v26 = v25[1];
    BOOL v15 = v24 >= v26;
    unint64_t v27 = v24 - v26;
    if (!v15) {
      break;
    }
    int8x16_t v25 = (void *)v25[2];
    unint64_t v24 = v27;
    if (!v25) {
      goto LABEL_14;
    }
  }
  LODWORD(v25) = *(unsigned __int8 *)(*v25 + v24);
LABEL_14:
  int v28 = v23 | (v25 << 8);
  unint64_t v29 = 3;
  unint64_t v30 = a2;
  do
  {
    unint64_t v31 = v30[1];
    BOOL v15 = v29 >= v31;
    unint64_t v32 = v29 - v31;
    if (!v15)
    {
      unsigned int v33 = *(unsigned __int8 *)(*v30 + v29);
      goto LABEL_19;
    }
    unint64_t v30 = (void *)v30[2];
    unint64_t v29 = v32;
  }
  while (v30);
  unsigned int v33 = 0;
LABEL_19:
  unint64_t v34 = 0;
  uint64_t v35 = v28 | v33;
  unint64_t v36 = a2;
  do
  {
    uint64_t v37 = v36[1];
    unint64_t v36 = (void *)v36[2];
    v34 += v37;
  }
  while (v36);
  uint64_t result = 4294967294;
  if ((int)v35 >= 21 && v34 >= (int)v35)
  {
    unint64_t v39 = 4;
    unint64_t v40 = a2;
    while (1)
    {
      unint64_t v41 = v40[1];
      BOOL v15 = v39 >= v41;
      unint64_t v42 = v39 - v41;
      if (!v15) {
        break;
      }
      unint64_t v40 = (void *)v40[2];
      unint64_t v39 = v42;
      if (!v40) {
        goto LABEL_40;
      }
    }
    if (*(unsigned char *)(*v40 + v39) != 1) {
      goto LABEL_40;
    }
    unint64_t v43 = 5;
    unint64_t v44 = a2;
    while (1)
    {
      unint64_t v45 = v44[1];
      BOOL v15 = v43 >= v45;
      unint64_t v46 = v43 - v45;
      if (!v15) {
        break;
      }
      unint64_t v44 = (void *)v44[2];
      unint64_t v43 = v46;
      if (!v44) {
        goto LABEL_40;
      }
    }
    if (*(unsigned char *)(*v44 + v43) == 18)
    {
      uint64_t v47 = 0;
      unint64_t v49 = a2[1];
      unint64_t v48 = (void *)a2[2];
      if (!v49)
      {
LABEL_36:
        unint64_t v50 = v47;
        while (v48)
        {
          int8x16_t v51 = v48;
          v50 -= v49;
          unint64_t v49 = v48[1];
          unint64_t v48 = (void *)v48[2];
          if (v50 < v49) {
            goto LABEL_42;
          }
        }
        long long v148 = (unint64_t)&SegmentedBuffer::nullSegment;
        *(void *)int8x16_t v149 = 0;
        int v52 = Frame::Header::decode((uint64_t)v157, &v148);
        if (!v52) {
          return 4294967294;
        }
LABEL_45:
        if ((a4 - 1) <= 0xA)
        {
          uint64_t v126 = a1;
          unsigned int v53 = *(_DWORD *)&aArgb203na46bk0[4 * a4 + 28];
          if (*(void *)(a3 + 56)) {
            int v54 = 4 * (v158 >> v53) / 3;
          }
          else {
            int v54 = v158 >> v53;
          }
          if (*(_DWORD *)(a3 + 40) < v54) {
            return 4294967292;
          }
          if (*(_DWORD *)(a3 + 44) < v159 >> dword_262CE30E8[a4 - 1]) {
            return 4294967292;
          }
          int v55 = v52;
          int v124 = dword_262CE30E8[a4 - 1];
          unint64_t v125 = a6;
          int v56 = *(_DWORD *)(a3 + 24);
          int v57 = v54 * PixelBuffer::getNumBytesPerPixelData(*(_DWORD *)(a3 + 36));
          PixelBuffer::getNumBytesPerPixelData(*(_DWORD *)(a3 + 36));
          if (v56 < v57 / v58) {
            return 4294967292;
          }
          if ((v158 & 0xF) != 0)
          {
            int v59 = *(_DWORD *)(a3 + 36);
            if (v59 != 1983000880)
            {
              int v60 = v158 + 30;
              if (v158 >= -15) {
                int v60 = v158 + 15;
              }
              int v61 = (int)(v60 & 0xFFFFFFF0) >> v53;
              int NumBytesPerPixelData = PixelBuffer::getNumBytesPerPixelData(v59);
              PixelBuffer::getNumBytesPerPixelData(*(_DWORD *)(a3 + 36));
              if (*(_DWORD *)(a3 + 24) < (v63 + v61 * NumBytesPerPixelData - 1) / v63) {
                return 4294967292;
              }
            }
          }
          int v64 = v55 + v47;
          *((void *)&v148 + 1) = 0;
          *(void *)int8x16_t v149 = 0;
          *(void *)&long long v148 = &SegmentedBuffer::nullSegment;
          unint64_t v65 = v64;
          unint64_t v67 = v10[1];
          unint64_t v66 = (void *)v10[2];
          if (v67 <= v64)
          {
            int8x16_t v71 = &SegmentedBuffer::nullSegment;
            int v69 = v124;
            unint64_t v70 = v125;
            while (v66)
            {
              unint64_t v68 = v66;
              v65 -= v67;
              unint64_t v67 = v66[1];
              unint64_t v66 = (void *)v66[2];
              if (v65 < v67) {
                goto LABEL_63;
              }
            }
            unint64_t v72 = 0;
          }
          else
          {
            unint64_t v68 = v10;
            int v69 = v124;
            unint64_t v70 = v125;
LABEL_63:
            int8x16_t v71 = (void *)(*v68 + v65);
            unint64_t v72 = v67 - v65;
          }
          *(void *)&long long v148 = v71;
          *((void *)&v148 + 1) = v72;
          *(void *)int8x16_t v149 = v66;
          *(_OWORD *)&v149[8] = *(_OWORD *)a3;
          *(void *)&long long v150 = *(void *)(a3 + 24);
          *(void *)&v149[24] = *(void *)(a3 + 16);
          int v73 = *(_DWORD *)(a3 + 44);
          DWORD2(v150) = *(_DWORD *)(a3 + 32);
          HIDWORD(v150) = v73;
          LODWORD(v151[0]) = v158;
          LODWORD(v151[1]) = v53;
          BOOL v75 = a4 != 1 && v161 != 0;
          HIDWORD(v151[1]) = v69 - v75;
          LODWORD(v152) = v160;
          if (v160 == 3) {
            int v76 = 12;
          }
          else {
            int v76 = 8;
          }
          DWORD1(v152) = v76;
          *((void *)&v152 + 1) = Macroblock::getScanTable(v161, v53);
          if (a4 == 7) {
            unsigned int v77 = 16;
          }
          else {
            unsigned int v77 = 64;
          }
          LODWORD(v153) = v77 >> (BYTE4(v151[1]) + LOBYTE(v151[1]));
          AlphaDecoder::AlphaDecoder(v146, v163, *(unsigned int *)(a3 + 36), a5);
          *((void *)&v153 + 1) = v146;
          PixelWriter::PixelWriter(v143, a3, v160, LODWORD(v151[1]), HIDWORD(v151[1]), v147 != 0);
          if (!v145) {
            return 0xFFFFFFFFLL;
          }
          int v78 = v144;
          *(void *)&long long v154 = DiscreteCosineTransform::getIDCTRoutine((DiscreteCosineTransform *)LODWORD(v151[1]), HIDWORD(v151[1]), *(unsigned __int8 *)(v126 + 56));
          DWORD2(v154) = DiscreteCosineTransform::getIDCTOutputBitDepth(v78);
          *(void *)&long long v155 = v143;
          DWORD2(v155) = v162;
          if (v162 > 9 || ((1 << v162) & 0x242) == 0)
          {
            if (v159 > 719) {
              int v79 = 1;
            }
            else {
              int v79 = 6;
            }
            DWORD2(v155) = v79;
          }
          if (v164) {
            int8x16_t v80 = &v166;
          }
          else {
            int8x16_t v80 = (uint64_t *)&Macroblock::DefaultQuantizationMatrix;
          }
          unint64_t v81 = v167;
          if (!v165) {
            unint64_t v81 = v80;
          }
          *(void *)&long long v156 = v80;
          *((void *)&v156 + 1) = v81;
          int v82 = v161;
          if ((v161 - 1) < 2)
          {
            switch(a4)
            {
              case 1:
                uint64_t v85 = (int)v150;
                uint64_t v86 = SDWORD1(v150);
                LODWORD(v150) = 2 * v150;
                DWORD1(v150) *= 2;
                uint64_t v87 = SDWORD2(v150);
                DWORD2(v150) *= 2;
                long long v139 = v153;
                long long v140 = v154;
                long long v141 = v155;
                long long v142 = v156;
                long long v135 = *(_OWORD *)&v149[16];
                long long v136 = v150;
                long long v137 = *(_OWORD *)v151;
                long long v138 = v152;
                long long v133 = v148;
                long long v134 = *(_OWORD *)v149;
                if (v159 + 1 >= 0) {
                  int v88 = v159 + 1;
                }
                else {
                  int v88 = v159 + 2;
                }
                int v89 = v88 >> 1;
                int v90 = *(_DWORD *)(a3 + 44);
                int v91 = v90 + 2;
                if (v90 + 1 >= 0) {
                  int v91 = v90 + 1;
                }
                HIDWORD(v151[0]) = v89;
                HIDWORD(v150) = v91 >> 1;
                DWORD1(v137) = v159 / 2;
                if (v90 >= 0) {
                  int v92 = v90;
                }
                else {
                  int v92 = v90 + 1;
                }
                HIDWORD(v136) = v92 >> 1;
                uint64_t v93 = *((void *)&v135 + 1) + v87;
                *((void *)&v134 + 1) += v85;
                *(void *)&long long v135 = v135 + v86;
                if (v161 == 2) {
                  int32x4_t v94 = &v148;
                }
                else {
                  int32x4_t v94 = &v133;
                }
                if (v161 == 2) {
                  unint64_t v95 = &v133;
                }
                else {
                  unint64_t v95 = &v148;
                }
                *((void *)&v135 + 1) = v93;
                unint64_t v96 = (int)(Picture::getCodedSize(v95) + v64);
                unint64_t v98 = v10[1];
                unint64_t v97 = (void *)v10[2];
                if (v98 > v96)
                {
LABEL_120:
                  unint64_t v99 = (void *)(*v10 + v96);
                  unint64_t v100 = v98 - v96;
                }
                else
                {
                  unint64_t v99 = &SegmentedBuffer::nullSegment;
                  while (v97)
                  {
                    uint64_t v10 = v97;
                    v96 -= v98;
                    unint64_t v98 = v97[1];
                    unint64_t v97 = (void *)v97[2];
                    if (v96 < v98) {
                      goto LABEL_120;
                    }
                  }
                  unint64_t v100 = 0;
                }
                *(void *)int32x4_t v94 = v99;
                unint64_t v109 = &v133;
                if (v82 == 2) {
                  unint64_t v109 = &v148;
                }
                *((void *)v109 + 1) = v100;
                *((void *)v109 + 2) = v97;
                PictureDecoder::PictureDecoder(v130, v95);
                PictureDecoder::PictureDecoder(v127, v94);
                int v110 = v131;
                int v111 = v129;
                if (v131) {
                  BOOL v112 = v132 == 0;
                }
                else {
                  BOOL v112 = 1;
                }
                if (!v112 && v128 != 0 && v129 != 0)
                {
                  int v115 = v132;
                  uint64_t v84 = v126;
                  std::vector<DecoderJob>::resize(v126, v128 + v131);
                  std::vector<SliceDecodeParams>::resize(v126 + 24, v111 + v115);
                  PictureDecoder::addJobsToQueue(v130, *(void *)v84, *(void *)(v84 + 24));
                  uint64_t v116 = *(void *)v126 + 48 * v110;
                  uint64_t v117 = *(void *)(v126 + 24) + 96 * v115;
                  unint64_t v70 = v125;
                  unint64_t v118 = (int *)v127;
                  goto LABEL_161;
                }
                return 4294967294;
              case 4:
                HIDWORD(v151[0]) = v159 / 2;
                uint64_t v84 = v126;
                if (v161 != 1) {
                  goto LABEL_152;
                }
                break;
              case 3:
                if (v159 >= -1) {
                  int v83 = v159 + 1;
                }
                else {
                  int v83 = v159 + 2;
                }
                HIDWORD(v151[0]) = v83 >> 1;
                uint64_t v84 = v126;
                if (v161 == 1) {
                  goto LABEL_152;
                }
                break;
              default:
                if (v161 == 1)
                {
                  if (v159 >= -1) {
                    int v108 = v159 + 1;
                  }
                  else {
                    int v108 = v159 + 2;
                  }
                }
                else
                {
                  int v108 = v159 + (v159 < 0);
                }
                HIDWORD(v151[0]) = v108 >> 1;
                uint64_t v84 = v126;
                goto LABEL_152;
            }
            unint64_t v103 = (int)(Picture::getCodedSize(&v148) + v64);
            unint64_t v105 = v10[1];
            int8x16_t v104 = (void *)v10[2];
            if (v105 > v103)
            {
LABEL_129:
              unint64_t v106 = (void *)(*v10 + v103);
              unint64_t v107 = v105 - v103;
            }
            else
            {
              unint64_t v106 = &SegmentedBuffer::nullSegment;
              while (v104)
              {
                uint64_t v10 = v104;
                v103 -= v105;
                unint64_t v105 = v104[1];
                int8x16_t v104 = (void *)v104[2];
                if (v103 < v105) {
                  goto LABEL_129;
                }
              }
              unint64_t v107 = 0;
            }
            *(void *)&long long v148 = v106;
            *((void *)&v148 + 1) = v107;
            *(void *)int8x16_t v149 = v104;
LABEL_152:
            PictureDecoder::PictureDecoder(&v133, &v148);
            unint64_t v101 = (int)v134;
            if (v134) {
              BOOL v119 = HIDWORD(v134) == 0;
            }
            else {
              BOOL v119 = 1;
            }
            if (!v119)
            {
              unint64_t v102 = SHIDWORD(v134);
              goto LABEL_160;
            }
            return 4294967294;
          }
          if (!v161 && (a4 - 3) >= 3)
          {
            HIDWORD(v151[0]) = v159;
            PictureDecoder::PictureDecoder(&v133, &v148);
            unint64_t v101 = (int)v134;
            if (v134 && HIDWORD(v134))
            {
              unint64_t v102 = SHIDWORD(v134);
              uint64_t v84 = v126;
LABEL_160:
              std::vector<DecoderJob>::resize(v84, v101);
              std::vector<SliceDecodeParams>::resize(v84 + 24, v102);
              uint64_t v116 = *(void *)v84;
              uint64_t v117 = *(void *)(v84 + 24);
              unint64_t v118 = (int *)&v133;
LABEL_161:
              PictureDecoder::addJobsToQueue(v118, v116, v117);
              ThreadPool<DecoderWorker,DecoderJob,void>::runJobs(*(void **)(v84 + 48), *(void *)v84, -1431655765 * ((*(void *)(v84 + 8) - *(void *)v84) >> 4));
              if (v70)
              {
                if (v163)
                {
                  if (a4 == 1 || !v161)
                  {
                    uint64_t v120 = *(void *)(v84 + 8);
                    if (*(void *)v84 == v120)
                    {
                      *unint64_t v70 = 1;
                    }
                    else
                    {
                      uint64_t v121 = *(void *)v84 + 48;
                      do
                      {
                        BOOL v122 = *(unsigned char *)(v121 - 8) != 0;
                        if (*(unsigned char *)(v121 - 8)) {
                          BOOL v123 = v121 == v120;
                        }
                        else {
                          BOOL v123 = 1;
                        }
                        v121 += 48;
                      }
                      while (!v123);
                      *unint64_t v70 = v122;
                    }
                  }
                  else
                  {
                    *unint64_t v70 = 0;
                  }
                }
                else
                {
                  *unint64_t v70 = 1;
                }
              }
              return v35;
            }
            return 4294967294;
          }
        }
        return 4294967293;
      }
    }
    else
    {
LABEL_40:
      uint64_t v47 = 8;
      unint64_t v49 = a2[1];
      unint64_t v48 = (void *)a2[2];
      if (v49 <= 8) {
        goto LABEL_36;
      }
    }
    int8x16_t v51 = a2;
    unint64_t v50 = v47;
LABEL_42:
    *(void *)&long long v148 = *v51 + v50;
    *((void *)&v148 + 1) = v49 - v50;
    *(void *)int8x16_t v149 = v48;
    int v52 = Frame::Header::decode((uint64_t)v157, &v148);
    if (!v52) {
      return 4294967294;
    }
    goto LABEL_45;
  }
  return result;
}

uint64_t (*DiscreteCosineTransform::getIDCTRoutine(DiscreteCosineTransform *this, unsigned int a2, int a3))(DiscreteCosineTransform *__hidden this, const __int16 *, __int16 *, int, const __int16 *)
{
  switch((int)this)
  {
    case 0:
      if (a2 == 1)
      {
        uint64_t result = (uint64_t (*)(DiscreteCosineTransform *__hidden, const __int16 *, __int16 *, int, const __int16 *))DiscreteCosineTransform::idct_8x4;
      }
      else
      {
        if (a2) {
          goto LABEL_11;
        }
        if (a3) {
          uint64_t result = (uint64_t (*)(DiscreteCosineTransform *__hidden, const __int16 *, __int16 *, int, const __int16 *))DiscreteCosineTransform::idct_8x8_AVX;
        }
        else {
          uint64_t result = (uint64_t (*)(DiscreteCosineTransform *__hidden, const __int16 *, __int16 *, int, const __int16 *))DiscreteCosineTransform::idct_8x8;
        }
      }
      break;
    case 1:
      if (a2 >= 3) {
        goto LABEL_11;
      }
      uint64_t result = off_270E10378[a2];
      break;
    case 2:
      if (a2 - 1 >= 3) {
        goto LABEL_11;
      }
      uint64_t result = off_270E10390[a2 - 1];
      break;
    case 3:
      if (a2 == 3) {
        uint64_t v4 = DiscreteCosineTransform::idct_1x1;
      }
      else {
        uint64_t v4 = 0;
      }
      if (a2 == 2) {
        uint64_t result = (uint64_t (*)(DiscreteCosineTransform *__hidden, const __int16 *, __int16 *, int, const __int16 *))DiscreteCosineTransform::idct_1x2;
      }
      else {
        uint64_t result = (uint64_t (*)(DiscreteCosineTransform *__hidden, const __int16 *, __int16 *, int, const __int16 *))v4;
      }
      break;
    default:
LABEL_11:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t DiscreteCosineTransform::getIDCTOutputBitDepth(int a1)
{
  uint64_t result = 0;
  if (a1 <= 1916036715)
  {
    if (a1 > 1647719541)
    {
      if (a1 > 1848848433)
      {
        if (a1 == 1848848434 || a1 == 1915892016) {
          return 13;
        }
        int v3 = 1916022840;
        goto LABEL_27;
      }
      if (a1 == 1647719542) {
        return 13;
      }
      int v4 = 1815294002;
    }
    else
    {
      if (a1 <= 1111970368)
      {
        if (a1 == 32) {
          return 13;
        }
        int v3 = 846624121;
        goto LABEL_27;
      }
      if (a1 == 1111970369 || a1 == 1378955371) {
        return 13;
      }
      int v4 = 1647719521;
    }
    if (a1 != v4) {
      return result;
    }
    return 13;
  }
  if (a1 <= 1999778101)
  {
    if (a1 <= 1983000879)
    {
      if (a1 != 1916036716)
      {
        if (a1 != 1966223670) {
          return result;
        }
        return 10;
      }
      return 13;
    }
    if (a1 == 1983000880) {
      return 10;
    }
    if (a1 == 1983000886) {
      return 13;
    }
    int v3 = 1983131704;
LABEL_27:
    if (a1 == v3) {
      return 8;
    }
    return result;
  }
  if (a1 <= 2033463605)
  {
    if (a1 != 1999778102 && a1 != 1999909174)
    {
      int v3 = 2033463352;
      goto LABEL_27;
    }
    return 10;
  }
  if (a1 == 2033463606) {
    return 13;
  }
  if (a1 == 2050109750 || a1 == 2050240822) {
    return 12;
  }
  return result;
}

void std::vector<DecoderJob>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 4);
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    std::vector<DecoderJob>::__append((char **)a1, v4);
  }
  else if (!v3)
  {
    *(void *)(a1 + 8) = *(void *)a1 + 48 * a2;
  }
}

void std::vector<SliceDecodeParams>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 5);
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    std::vector<SliceDecodeParams>::__append((void **)a1, v4);
  }
  else if (!v3)
  {
    *(void *)(a1 + 8) = *(void *)a1 + 96 * a2;
  }
}

intptr_t ThreadPool<DecoderWorker,DecoderJob,void>::runJobs(void *context, uint64_t a2, int a3)
{
  atomic_store(0, (unsigned int *)context + 6);
  *((_DWORD *)context + 7) = a3;
  *((void *)context + 4) = a2;
  if (*(int *)context >= 1)
  {
    int v4 = 0;
    do
    {
      dispatch_group_async_f(*((dispatch_group_t *)context + 2), *((dispatch_queue_t *)context + 1), context, (dispatch_function_t)ThreadPool<DecoderWorker,DecoderJob,void>::dispatch_routine);
      ++v4;
    }
    while (v4 < *(_DWORD *)context);
  }
  BOOL v5 = *((void *)context + 2);

  return dispatch_group_wait(v5, 0xFFFFFFFFFFFFFFFFLL);
}

uint64_t FrameDecoder::getNumThreads(FrameDecoder *this)
{
  return **((unsigned int **)this + 6);
}

void std::vector<DecoderJob>::__append(char **a1, unint64_t a2)
{
  BOOL v5 = a1[1];
  int v4 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 4) >= a2)
  {
    if (a2)
    {
      size_t v12 = 48 * ((48 * a2 - 48) / 0x30) + 48;
      bzero(a1[1], v12);
      v5 += v12;
    }
    a1[1] = v5;
  }
  else
  {
    unint64_t v6 = *a1;
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 4);
    unint64_t v8 = v7 + a2;
    if (v7 + a2 > 0x555555555555555) {
      std::vector<__CVBuffer *>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v6) >> 4);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x2AAAAAAAAAAAAAALL) {
      unint64_t v10 = 0x555555555555555;
    }
    else {
      unint64_t v10 = v8;
    }
    if (v10)
    {
      if (v10 > 0x555555555555555) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v11 = (char *)operator new(48 * v10);
    }
    else
    {
      uint64_t v11 = 0;
    }
    uint64_t v13 = &v11[48 * v7];
    unint64_t v14 = &v11[48 * v10];
    size_t v15 = 48 * ((48 * a2 - 48) / 0x30) + 48;
    bzero(v13, v15);
    unint64_t v16 = &v13[v15];
    if (v5 != v6)
    {
      do
      {
        long long v17 = *((_OWORD *)v5 - 3);
        long long v18 = *((_OWORD *)v5 - 1);
        *((_OWORD *)v13 - 2) = *((_OWORD *)v5 - 2);
        *((_OWORD *)v13 - 1) = v18;
        *((_OWORD *)v13 - 3) = v17;
        v13 -= 48;
        v5 -= 48;
      }
      while (v5 != v6);
      BOOL v5 = *a1;
    }
    *a1 = v13;
    a1[1] = v16;
    a1[2] = v14;
    if (v5)
    {
      operator delete(v5);
    }
  }
}

void std::vector<SliceDecodeParams>::__append(void **a1, unint64_t a2)
{
  int v4 = (char *)a1[1];
  BOOL v5 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v5 - v4) >> 5) >= a2)
  {
    if (a2)
    {
      uint64_t v11 = &v4[96 * a2];
      uint64_t v12 = 96 * a2;
      do
      {
        *((void *)v4 + 11) = 0;
        *(_OWORD *)(v4 + 72) = 0uLL;
        *(_OWORD *)(v4 + 56) = 0uLL;
        *(_OWORD *)(v4 + 40) = 0uLL;
        *(_OWORD *)(v4 + 24) = 0uLL;
        *((void *)v4 + 1) = 0;
        *((void *)v4 + 2) = 0;
        *(void *)int v4 = &SegmentedBuffer::nullSegment;
        v4 += 96;
        v12 -= 96;
      }
      while (v12);
      int v4 = v11;
    }
    a1[1] = v4;
  }
  else
  {
    unint64_t v6 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a1) >> 5);
    unint64_t v7 = v6 + a2;
    if (v6 + a2 > 0x2AAAAAAAAAAAAAALL) {
      std::vector<__CVBuffer *>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (unsigned char *)*a1) >> 5);
    if (2 * v8 > v7) {
      unint64_t v7 = 2 * v8;
    }
    if (v8 >= 0x155555555555555) {
      unint64_t v9 = 0x2AAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v9 = v7;
    }
    if (v9)
    {
      if (v9 > 0x2AAAAAAAAAAAAAALL) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      unint64_t v10 = (char *)operator new(96 * v9);
    }
    else
    {
      unint64_t v10 = 0;
    }
    uint64_t v13 = &v10[96 * v6];
    uint64_t v14 = 96 * a2;
    size_t v15 = &v13[96 * a2];
    unint64_t v16 = v13;
    do
    {
      *((void *)v16 + 11) = 0;
      *(_OWORD *)(v16 + 72) = 0uLL;
      *(_OWORD *)(v16 + 56) = 0uLL;
      *(_OWORD *)(v16 + 40) = 0uLL;
      *(_OWORD *)(v16 + 24) = 0uLL;
      *((void *)v16 + 1) = 0;
      *((void *)v16 + 2) = 0;
      *(void *)unint64_t v16 = &SegmentedBuffer::nullSegment;
      v16 += 96;
      v14 -= 96;
    }
    while (v14);
    long long v17 = &v10[96 * v9];
    unint64_t v19 = (char *)*a1;
    long long v18 = (char *)a1[1];
    if (v18 != *a1)
    {
      do
      {
        long long v20 = *((_OWORD *)v18 - 5);
        *((_OWORD *)v13 - 6) = *((_OWORD *)v18 - 6);
        *((_OWORD *)v13 - 5) = v20;
        long long v21 = *((_OWORD *)v18 - 4);
        long long v22 = *((_OWORD *)v18 - 3);
        long long v23 = *((_OWORD *)v18 - 1);
        *((_OWORD *)v13 - 2) = *((_OWORD *)v18 - 2);
        *((_OWORD *)v13 - 1) = v23;
        *((_OWORD *)v13 - 4) = v21;
        *((_OWORD *)v13 - 3) = v22;
        v13 -= 96;
        v18 -= 96;
      }
      while (v18 != v19);
      long long v18 = (char *)*a1;
    }
    *a1 = v13;
    a1[1] = v15;
    a1[2] = v17;
    if (v18)
    {
      operator delete(v18);
    }
  }
}

void *ThreadPool<DecoderWorker,DecoderJob,void>::dispatch_routine(uint64_t a1)
{
  {
    uint64_t v10 = 64;
    size_t v9 = 8;
    int v5 = sysctlbyname("hw.cachelinesize", &v10, &v9, 0, 0);
    BOOL v6 = v9 == 8 && v5 == 0;
    uint64_t v7 = v10;
    if (!v6) {
      uint64_t v7 = 0;
    }
    ThreadPool<DecoderWorker,DecoderJob,void>::getBlockSize(void)::cacheLineSize = v7;
  }
  {
    uint64_t v8 = ThreadPool<DecoderWorker,DecoderJob,void>::getBlockSize(void)::cacheLineSize;
    if (!ThreadPool<DecoderWorker,DecoderJob,void>::getBlockSize(void)::cacheLineSize) {
      uint64_t v8 = 256;
    }
    ThreadPool<DecoderWorker,DecoderJob,void>::getBlockSize(void)::blockSize = v8;
  }
  uint64_t v2 = ThreadPool<DecoderWorker,DecoderJob,void>::getBlockSize(void)::blockSize;
  uint64_t result = malloc_type_malloc(((v2 + 39) & -v2) + v2, 0x1E83A129uLL);
  if (result)
  {
    int v4 = (DecoderWorker *)(((unint64_t)result + v2) & -v2);
    *((void *)v4 - 1) = result;
    if (v4) {
      DecoderWorker::DecoderWorker(v4, *(const void **)(a1 + 40));
    }
  }
  return result;
}

void sub_262C97458(_Unwind_Exception *a1)
{
}

void FrameDecoder::FrameDecoder(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
}

BOOL codecTypeIs444(int a1)
{
  return (a1 & 0xFFFFFFEF) == 1634743400;
}

void DecoderWorker::DecoderWorker(DecoderWorker *this, const void *a2)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  operator new();
}

void sub_262C974F0(_Unwind_Exception *a1)
{
  MEMORY[0x263E5FB40](v1, 0x1000C40347C77FBLL);
  _Unwind_Resume(a1);
}

void DecoderWorker::~DecoderWorker(void **this)
{
  free(*this);
  free(this[2]);
  uint64_t v2 = this[4];
  if (v2) {
    MEMORY[0x263E5FB40](v2, 0x1000C40347C77FBLL);
  }
}

uint64_t DecoderWorker::runJob(uint64_t result, uint64_t *a2, double a3, double a4, int8x16_t a5, int8x16_t a6, int32x4_t a7, int16x8_t a8, double a9, float32x4_t a10)
{
  int v10 = *(_DWORD *)(*a2 + 32);
  if (v10)
  {
    uint64_t v12 = result;
    uint64_t v13 = *(void *)(*a2 + 88);
    uint64_t v14 = *(void *)(v13 + 128);
    int v15 = *(_DWORD *)(v14 + 20);
    if (*(unsigned char *)(v14 + 13))
    {
      unint64_t v16 = a2 + 2;
      int v17 = *(_DWORD *)(v13 + 48);
    }
    else
    {
      int v17 = *((_DWORD *)a2 + 3) * v15;
      *(_DWORD *)(result + 12) = v17;
      unint64_t v16 = (uint64_t *)result;
      if (*(_DWORD *)(result + 8) < v17)
      {
        free(*(void **)result);
        *(void *)uint64_t v12 = 0;
        long long v18 = malloc_type_malloc(16 * *(int *)(v12 + 12), 0x88443A3FuLL);
        if (!v18) {
          goto LABEL_73;
        }
        *(void *)uint64_t v12 = v18;
        int v17 = *(_DWORD *)(v12 + 12);
        *(_DWORD *)(v12 + 8) = v17;
        unint64_t v16 = (uint64_t *)v12;
      }
    }
    uint64_t v19 = *v16;
    if ((*v16 & 0xF) == 0 && (v15 & 0xF) == 0)
    {
      uint64_t v21 = *(void *)(v13 + 128);
      long long v22 = (uint64_t *)(v21 + 24);
      if ((v17 & 0xF) == 0) {
        long long v22 = (uint64_t *)(v21 + 32);
      }
      uint64_t v23 = *((unsigned int *)a2 + 2);
      if ((int)v23 < 1)
      {
LABEL_18:
        uint64_t v27 = *(void *)(v13 + 104);
        uint64_t v28 = 16 * *(int *)(v27 + 4);
        uint64_t v29 = *(void *)(v27 + 8);
        uint64_t v30 = *(void *)(v13 + 40);
        if (v29)
        {
          if (v30)
          {
            if ((int)v23 >= 1)
            {
              uint64_t v31 = a2[4];
              int v32 = *(_DWORD *)(v13 + 56);
              unsigned int v33 = (_DWORD *)(*a2 + 80);
              uint64_t v34 = v23;
              do
              {
                *((void *)v33 - 1) = v31;
                _DWORD *v33 = v32;
                v31 += (int)*(v33 - 13) * (uint64_t)(int)v28;
                v33 += 24;
                --v34;
              }
              while (v34);
              goto LABEL_66;
            }
LABEL_45:
            *(_DWORD *)(*(void *)(v12 + 32) + 256) = 0;
            goto LABEL_70;
          }
          int v38 = *(unsigned __int8 *)(v21 + 13);
          if (v38)
          {
            int v39 = 8 * v28;
            *(_DWORD *)(v12 + 28) = 8 * v28;
            if (*(_DWORD *)(v12 + 24) < 8 * (int)v28) {
              goto LABEL_30;
            }
          }
          else
          {
            int v39 = *((_DWORD *)a2 + 3) * v28;
            *(_DWORD *)(v12 + 28) = v39;
            if (*(_DWORD *)(v12 + 24) < v39)
            {
LABEL_30:
              free(*(void **)(v12 + 16));
              *(void *)(v12 + 16) = 0;
              unint64_t v40 = malloc_type_malloc(16 * *(int *)(v12 + 28), 0x88443A3FuLL);
              if (v40)
              {
                *(void *)(v12 + 16) = v40;
                int v39 = *(_DWORD *)(v12 + 28);
                *(_DWORD *)(v12 + 24) = v39;
                uint64_t v23 = *((unsigned int *)a2 + 2);
                BOOL v41 = (int)v23 < 1;
                if (!*(unsigned char *)(*(void *)(v13 + 128) + 13))
                {
LABEL_32:
                  if (v41) {
                    goto LABEL_45;
                  }
                  uint64_t v42 = *(void *)(v12 + 16);
                  unint64_t v43 = (_DWORD *)(*a2 + 80);
                  uint64_t v44 = v23;
                  do
                  {
                    *((void *)v43 - 1) = v42;
                    *unint64_t v43 = v39;
                    v42 += (int)*(v43 - 13) * v28;
                    v43 += 24;
                    --v44;
                  }
                  while (v44);
LABEL_66:
                  *(_DWORD *)(*(void *)(v12 + 32) + 256) = 0;
                  if ((int)v23 >= 1)
                  {
                    uint64_t v71 = 0;
                    uint64_t v72 = 0;
                    int v73 = 1;
                    do
                    {
                      v73 &= SliceDecoder::decode();
                      ++v72;
                      v71 += 96;
                    }
                    while (v72 < *((int *)a2 + 2));
                    goto LABEL_71;
                  }
LABEL_70:
                  LOBYTE(v73) = 1;
LABEL_71:
                  *((unsigned char *)a2 + 40) = v73;
                  return PixelWriter::processMBRow(*(void *)(v13 + 128), *(unsigned __int8 **)v12, *(unsigned int *)(v12 + 12), *(unsigned __int8 **)(v12 + 16), *(unsigned int *)(v12 + 28), a2[2], *(unsigned int *)(v13 + 48), (unsigned __int8 *)a2[3], a3, a4, a5, a6, a7, a8, a9, a10, *(_DWORD *)(v13 + 52), *(int *)(v13 + 64) >> *(_DWORD *)(v13 + 72), v10,
                           *(_DWORD *)(v13 + 136),
                           *(_DWORD *)(v13 + 72) == 0);
                }
LABEL_42:
                if (v41) {
                  goto LABEL_45;
                }
                uint64_t v47 = *(void *)(v12 + 16);
                uint64_t v48 = *a2;
                if (v23 == 1)
                {
                  uint64_t v49 = 0;
                }
                else
                {
                  uint64_t v49 = v23 & 0xFFFFFFFE;
                  unint64_t v62 = (_DWORD *)(v48 + 176);
                  uint64_t v63 = v49;
                  do
                  {
                    *((void *)v62 - 13) = v47;
                    *((void *)v62 - 1) = v47;
                    int v64 = *(v62 - 13) * v28;
                    *(v62 - 24) = *(v62 - 37) * v28;
                    *unint64_t v62 = v64;
                    v62 += 48;
                    v63 -= 2;
                  }
                  while (v63);
                  if (v49 == v23) {
                    goto LABEL_66;
                  }
                }
                unint64_t v65 = (_DWORD *)(v48 + 96 * v49 + 80);
                uint64_t v66 = v23 - v49;
                do
                {
                  *((void *)v65 - 1) = v47;
                  *unint64_t v65 = *(v65 - 13) * v28;
                  v65 += 24;
                  --v66;
                }
                while (v66);
                goto LABEL_66;
              }
LABEL_73:
              exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
              BOOL v75 = std::bad_alloc::bad_alloc(exception);
              __cxa_throw(v75, MEMORY[0x263F8C218], MEMORY[0x263F8C170]);
            }
          }
          uint64_t v23 = *((unsigned int *)a2 + 2);
          BOOL v41 = (int)v23 < 1;
          if (!v38) {
            goto LABEL_32;
          }
          goto LABEL_42;
        }
        if (!v30)
        {
          if ((int)v23 < 1) {
            goto LABEL_45;
          }
          uint64_t v45 = *a2;
          if (v23 == 1)
          {
            uint64_t v46 = 0;
          }
          else
          {
            uint64_t v46 = v23 & 0xFFFFFFFE;
            unint64_t v67 = (_DWORD *)(v45 + 176);
            uint64_t v68 = v46;
            do
            {
              *((void *)v67 - 13) = 0;
              *((void *)v67 - 1) = 0;
              *(v67 - 24) = 0;
              *unint64_t v67 = 0;
              v67 += 48;
              v68 -= 2;
            }
            while (v68);
            if (v46 == v23) {
              goto LABEL_66;
            }
          }
          int v69 = (_DWORD *)(v45 + 96 * v46 + 80);
          uint64_t v70 = v23 - v46;
          do
          {
            *((void *)v69 - 1) = 0;
            *int v69 = 0;
            v69 += 24;
            --v70;
          }
          while (v70);
          goto LABEL_66;
        }
        if ((int)v23 < 1)
        {
          int v37 = 0;
          goto LABEL_51;
        }
        uint64_t v35 = *a2;
        if (v23 == 1)
        {
          uint64_t v36 = 0;
          int v37 = 0;
        }
        else
        {
          int v50 = 0;
          int v51 = 0;
          uint64_t v36 = v23 & 0xFFFFFFFE;
          int v52 = (int *)(v35 + 124);
          uint64_t v53 = v36;
          do
          {
            int v54 = *(v52 - 24);
            int v55 = *v52;
            v52 += 48;
            v50 += v54;
            v51 += v55;
            v53 -= 2;
          }
          while (v53);
          int v37 = v51 + v50;
          if (v36 == v23)
          {
LABEL_51:
            if (v10 >= 1)
            {
              int v59 = (char *)a2[4];
              size_t v60 = ((int)v28 >> *(_DWORD *)(v13 + 72)) * v37;
              int v61 = v10;
              do
              {
                memset(v59, 255, v60);
                v59 += *(int *)(v13 + 56);
                --v61;
              }
              while (v61);
              LODWORD(v23) = *((_DWORD *)a2 + 2);
            }
            goto LABEL_66;
          }
        }
        int v56 = (int *)(v35 + 96 * v36 + 28);
        uint64_t v57 = v23 - v36;
        do
        {
          int v58 = *v56;
          v56 += 24;
          v37 += v58;
          --v57;
        }
        while (v57);
        goto LABEL_51;
      }
    }
    else
    {
      uint64_t v21 = *(void *)(v13 + 128);
      long long v22 = (uint64_t *)(v21 + 24);
      uint64_t v23 = *((unsigned int *)a2 + 2);
      if ((int)v23 < 1) {
        goto LABEL_18;
      }
    }
    uint64_t v24 = *v22;
    uint64_t v25 = *a2 + 40;
    uint64_t v26 = v23;
    do
    {
      *(void *)uint64_t v25 = v24;
      *(void *)(v25 + 8) = v19;
      *(_DWORD *)(v25 + 24) = v17;
      v19 += *(int *)(v25 - 12) * (uint64_t)v15;
      v25 += 96;
      --v26;
    }
    while (v26);
    goto LABEL_18;
  }
  return result;
}

uint64_t calculateNumberOfSlicesPerMBRow(unsigned int a1, char a2)
{
  return calculateNumberOfSlicesPerMBRow(unsigned int,unsigned int)::numOneBits[a1 & ~(-1 << a2)] + (a1 >> a2);
}

uint64_t IcpUtility::getNumProcessors(IcpUtility *this)
{
  kern_return_t v3;
  unsigned int v4;
  integer_t host_info_out;
  int v6;
  mach_msg_type_number_t host_info_outCnt;

  if (qword_26A996440 == -1)
  {
    uint64_t result = _MergedGlobals_3;
    if (_MergedGlobals_3 > 0) {
      return result;
    }
  }
  else
  {
    dispatch_once(&qword_26A996440, &__block_literal_global_2);
    uint64_t result = _MergedGlobals_3;
    if (_MergedGlobals_3 > 0) {
      return result;
    }
  }
  host_info_outCnt = 12;
  host_t v2 = MEMORY[0x263E5FD40]();
  BOOL v3 = host_info(v2, 1, &host_info_out, &host_info_outCnt);
  int v4 = v6;
  if (v6 <= 1) {
    int v4 = 1;
  }
  if (v3) {
    return 1;
  }
  else {
    return v4;
  }
}

CFIndex ___ZN10IcpUtility16getNumProcessorsEv_block_invoke()
{
  Boolean keyExistsAndHasValidFormat = 0;
  CFIndex result = CFPreferencesGetAppIntegerValue(@"numCoresForProRes", (CFStringRef)*MEMORY[0x263EFFE60], &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat) {
    int v1 = result;
  }
  else {
    int v1 = 0;
  }
  _MergedGlobals_3 = v1;
  return result;
}

uint64_t IcpUtility::isAVXAvailable(IcpUtility *this)
{
  return 1;
}

uint64_t Macroblock::getScanTable(int a1, unsigned int a2)
{
  if ((a1 - 1) >= 2)
  {
    if (!a1 && a2 < 4) {
      return (uint64_t)*(&off_2655BC0F0 + (int)a2);
    }
  }
  else if (a2 <= 3)
  {
    return (uint64_t)*(&off_2655BC110 + (int)a2);
  }
  return 0;
}

uint64_t enabledSignpostCategories()
{
  if (qword_26A996450 != -1) {
    dispatch_once(&qword_26A996450, &__block_literal_global_3);
  }
  return _MergedGlobals_4;
}

CFIndex __enabledSignpostCategories_block_invoke()
{
  Boolean keyExistsAndHasValidFormat = 0;
  CFStringRef v0 = (const __CFString *)*MEMORY[0x263EFFE60];
  AppIntegerCFNumberRef Value = CFPreferencesGetAppIntegerValue(@"VideoToolboxCodecSignpostLevel", (CFStringRef)*MEMORY[0x263EFFE60], &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat)
  {
    if ((AppIntegerValue & 0x8000000000000000) == 0)
    {
      int v2 = _MergedGlobals_4;
      _MergedGlobals_4 |= 1u;
      if (AppIntegerValue) {
        _MergedGlobals_4 = v2 | 3;
      }
    }
  }
  Boolean keyExistsAndHasValidFormat = 0;
  CFIndex v3 = CFPreferencesGetAppIntegerValue(@"ProResCoreCodecSignpostLevel", v0, &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      int v4 = _MergedGlobals_4;
      _MergedGlobals_4 |= 0x100u;
      if (v3) {
        _MergedGlobals_4 = v4 | 0x1000100;
      }
    }
  }
  Boolean keyExistsAndHasValidFormat = 0;
  CFIndex result = CFPreferencesGetAppIntegerValue(@"ProResRAWCoreCodecSignpostLevel", v0, &keyExistsAndHasValidFormat);
  if (keyExistsAndHasValidFormat && (result & 0x8000000000000000) == 0)
  {
    int v6 = _MergedGlobals_4;
    _MergedGlobals_4 |= 0x10000u;
    if (result) {
      _MergedGlobals_4 = v6 | 0x1010000;
    }
  }
  return result;
}

uint64_t Picture::getCodedSize(void *a1)
{
  unint64_t v1 = 1;
  int v2 = a1;
  while (1)
  {
    unint64_t v3 = v2[1];
    BOOL v4 = v1 >= v3;
    unint64_t v5 = v1 - v3;
    if (!v4) {
      break;
    }
    int v2 = (void *)v2[2];
    unint64_t v1 = v5;
    if (!v2) {
      goto LABEL_5;
    }
  }
  LODWORD(v2) = *(unsigned __int8 *)(*v2 + v1) << 24;
LABEL_5:
  unint64_t v6 = 2;
  uint64_t v7 = a1;
  while (1)
  {
    unint64_t v8 = v7[1];
    BOOL v4 = v6 >= v8;
    unint64_t v9 = v6 - v8;
    if (!v4) {
      break;
    }
    uint64_t v7 = (void *)v7[2];
    unint64_t v6 = v9;
    if (!v7) {
      goto LABEL_9;
    }
  }
  LODWORD(v7) = *(unsigned __int8 *)(*v7 + v6) << 16;
LABEL_9:
  unint64_t v10 = 3;
  uint64_t v11 = a1;
  while (1)
  {
    unint64_t v12 = v11[1];
    BOOL v4 = v10 >= v12;
    unint64_t v13 = v10 - v12;
    if (!v4) {
      break;
    }
    uint64_t v11 = (void *)v11[2];
    unint64_t v10 = v13;
    if (!v11) {
      goto LABEL_13;
    }
  }
  LODWORD(v11) = *(unsigned __int8 *)(*v11 + v10) << 8;
LABEL_13:
  unint64_t v14 = 4;
  do
  {
    unint64_t v15 = a1[1];
    BOOL v4 = v14 >= v15;
    unint64_t v16 = v14 - v15;
    if (!v4) {
      return v7 | v2 | v11 | *(unsigned __int8 *)(*a1 + v14);
    }
    a1 = (void *)a1[2];
    unint64_t v14 = v16;
  }
  while (a1);
  return v7 | v2 | v11;
}

void *PictureDecoder::PictureDecoder(void *result, uint64_t a2)
{
  int v2 = result;
  uint64_t v3 = 0;
  *CFIndex result = a2;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  uint64_t v4 = a2;
  do
  {
    uint64_t v5 = *(void *)(v4 + 8);
    uint64_t v4 = *(void *)(v4 + 16);
    v3 += v5;
  }
  while (v4);
  if (v3)
  {
    unint64_t v6 = 0;
    uint64_t v7 = (void *)a2;
    while (1)
    {
      unint64_t v8 = v7[1];
      BOOL v9 = v6 >= v8;
      unint64_t v10 = v6 - v8;
      if (!v9) {
        break;
      }
      uint64_t v7 = (void *)v7[2];
      unint64_t v6 = v10;
      if (!v7) {
        return result;
      }
    }
    unint64_t v11 = *(unsigned __int8 *)(*v7 + v6);
    if (v11 >= 0x40)
    {
      unint64_t v12 = 0;
      unint64_t v13 = v11 >> 3;
      uint64_t v14 = a2;
      do
      {
        uint64_t v15 = *(void *)(v14 + 8);
        uint64_t v14 = *(void *)(v14 + 16);
        v12 += v15;
      }
      while (v14);
      if (v12 >= v13)
      {
        unint64_t v16 = 7;
        int v17 = (void *)a2;
        while (1)
        {
          unint64_t v18 = v17[1];
          BOOL v9 = v16 >= v18;
          unint64_t v19 = v16 - v18;
          if (!v9) {
            break;
          }
          int v17 = (void *)v17[2];
          unint64_t v16 = v19;
          if (!v17) {
            goto LABEL_17;
          }
        }
        LODWORD(v17) = (*(unsigned __int8 *)(*v17 + v16) >> 4) & 3;
LABEL_17:
        int v20 = *(_DWORD *)(a2 + 64);
        int v21 = *(_DWORD *)(a2 + 68);
        int v23 = v20 + 15;
        BOOL v22 = v20 < -15;
        int v24 = v20 + 30;
        if (!v22) {
          int v24 = v23;
        }
        unsigned int v25 = v24 >> 4;
        int v26 = v21 + 15;
        BOOL v22 = v21 < -15;
        int v27 = v21 + 30;
        if (v22) {
          int v26 = v27;
        }
        int v28 = v26 >> 4;
        int v29 = 1 << (char)v17;
        int v30 = calculateNumberOfSlicesPerMBRow(v25, (char)v17);
        v2[2] = v13;
        v2[3] = v25;
        v2[4] = v28;
        v2[5] = v29;
        v2[6] = v30;
        v2[7] = v28 * v30;
        return v2;
      }
    }
  }
  return result;
}

int *PictureDecoder::addJobsToQueue(int *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)result;
  unint64_t v4 = result[2];
  unint64_t v6 = *(void *)(*(void *)result + 8);
  uint64_t v5 = *(void **)(*(void *)result + 16);
  if (v6 <= v4)
  {
    while (v5)
    {
      uint64_t v7 = v5;
      v4 -= v6;
      unint64_t v6 = v5[1];
      uint64_t v5 = (void *)v5[2];
      if (v4 < v6) {
        goto LABEL_5;
      }
    }
    unint64_t v9 = 0;
    long long v50 = (unint64_t)&SegmentedBuffer::nullSegment;
    int v51 = 0;
    unint64_t v10 = 2 * result[7];
LABEL_9:
    unint64_t v11 = (char *)&SegmentedBuffer::nullSegment;
    while (v5)
    {
      uint64_t v14 = v5;
      v10 -= v9;
      unint64_t v9 = v5[1];
      uint64_t v5 = (void *)v5[2];
      if (v10 < v9)
      {
        unint64_t v11 = (char *)(*v14 + v10);
        unint64_t v12 = v9 - v10;
        unint64_t v13 = v12;
        if (v5) {
          goto LABEL_13;
        }
        goto LABEL_15;
      }
    }
    unint64_t v12 = 0;
    LODWORD(v13) = 0;
    int v16 = result[4];
    if (v16 >= 1) {
      goto LABEL_16;
    }
    return result;
  }
  uint64_t v7 = *(void **)result;
LABEL_5:
  unint64_t v8 = *v7 + v4;
  unint64_t v9 = v6 - v4;
  *(void *)&long long v50 = v8;
  *((void *)&v50 + 1) = v9;
  int v51 = v5;
  unint64_t v10 = 2 * result[7];
  if (v9 <= v10) {
    goto LABEL_9;
  }
  unint64_t v11 = (char *)(v8 + v10);
  unint64_t v12 = v9 - v10;
  unint64_t v13 = v12;
  if (v5)
  {
LABEL_13:
    uint64_t v15 = v5;
    do
    {
      v13 += v15[1];
      uint64_t v15 = (void *)v15[2];
    }
    while (v15);
  }
LABEL_15:
  int v16 = result[4];
  if (v16 >= 1)
  {
LABEL_16:
    int v17 = 0;
    char v18 = *(_DWORD *)(v3 + 76);
    signed int v19 = 0x10u >> v18;
    signed int v20 = *(_DWORD *)(v3 + 60);
    int v21 = *(int *)(v3 + 68) >> v18;
    uint64_t v22 = *(void *)(v3 + 32);
    uint64_t v23 = *(void *)(v3 + 40);
    uint64_t v24 = *(void *)(v3 + 24);
    int v25 = result[3];
    int v27 = result[5];
    int v26 = result[6];
    while (1)
    {
      *(void *)a2 = a3;
      *(_DWORD *)(a2 + 8) = v26;
      *(_DWORD *)(a2 + 12) = v25;
      *(void *)(a2 + 16) = v24;
      *(void *)(a2 + 24) = v22;
      *(void *)(a2 + 32) = v23;
      if (v21 >= v19) {
        signed int v28 = v19;
      }
      else {
        signed int v28 = v21;
      }
      if (v28 >= v20) {
        signed int v28 = v20;
      }
      if (v25 >= 1) {
        break;
      }
LABEL_57:
      if (v23) {
        v23 += *(int *)(v3 + 56) * (uint64_t)v28;
      }
      v24 += *(int *)(v3 + 48) * (uint64_t)v28;
      v22 += *(int *)(v3 + 52) * (uint64_t)v28;
      v21 -= v28;
      v20 -= v28;
      a2 += 48;
      if (++v17 == v16) {
        return result;
      }
    }
    int v29 = v25;
    int v30 = v27;
    while (1)
    {
      while (v29 < v30)
      {
        if (v30 >= 0) {
          int v31 = v30;
        }
        else {
          int v31 = v30 + 1;
        }
        int v30 = v31 >> 1;
      }
      unint64_t v32 = 0;
      *(_DWORD *)(a3 + 28) = v30;
      *(_DWORD *)(a3 + 32) = v28;
      unsigned int v33 = &v50;
      do
      {
        unint64_t v34 = *((void *)v33 + 1);
        BOOL v35 = v32 >= v34;
        unint64_t v36 = v32 - v34;
        if (!v35)
        {
          int v37 = *(unsigned __int8 *)(*(void *)v33 + v32);
          goto LABEL_35;
        }
        unsigned int v33 = (long long *)*((void *)v33 + 2);
        unint64_t v32 = v36;
      }
      while (v33);
      int v37 = 0;
LABEL_35:
      int v38 = v37 << 8;
      int v39 = &v50;
      unint64_t v40 = 1;
      while (1)
      {
        unint64_t v41 = *((void *)v39 + 1);
        BOOL v35 = v40 >= v41;
        unint64_t v42 = v40 - v41;
        if (!v35) {
          break;
        }
        int v39 = (long long *)*((void *)v39 + 2);
        unint64_t v40 = v42;
        if (!v39) {
          goto LABEL_39;
        }
      }
      LODWORD(v39) = *(unsigned __int8 *)(*(void *)v39 + v40);
LABEL_39:
      int v43 = v38 | v39;
      if (v43 >= (int)v13) {
        LODWORD(v44) = v13;
      }
      else {
        LODWORD(v44) = v43;
      }
      *(void *)a3 = v11;
      *(void *)(a3 + 8) = v12;
      *(void *)(a3 + 16) = v5;
      *(_DWORD *)(a3 + 24) = v44;
      uint64_t v3 = *(void *)result;
      *(void *)(a3 + 88) = *(void *)result;
      unint64_t v44 = (int)v44;
      unint64_t v45 = v44;
      if (v12 <= (int)v44)
      {
        if (!v5)
        {
LABEL_46:
          unint64_t v12 = 0;
          unint64_t v11 = (char *)&SegmentedBuffer::nullSegment;
          uint64_t v47 = *((void *)&v50 + 1);
          unint64_t v48 = 2;
          if (*((void *)&v50 + 1) <= 2uLL) {
            goto LABEL_50;
          }
          goto LABEL_52;
        }
        while (1)
        {
          v45 -= v12;
          unint64_t v12 = v5[1];
          uint64_t v46 = v5[2];
          if (v45 < v12) {
            break;
          }
          uint64_t v5 = (void *)v5[2];
          if (!v46) {
            goto LABEL_46;
          }
        }
        unint64_t v11 = (char *)*v5;
        uint64_t v5 = (void *)v5[2];
      }
      v11 += v45;
      v12 -= v45;
      uint64_t v47 = *((void *)&v50 + 1);
      unint64_t v48 = 2;
      if (*((void *)&v50 + 1) > 2uLL)
      {
LABEL_52:
        *(void *)&long long v50 = v50 + v48;
        *((void *)&v50 + 1) = v47 - v48;
        a3 += 96;
        LODWORD(v13) = v13 - v44;
        BOOL v49 = __OFSUB__(v29, v30);
        v29 -= v30;
        if ((v29 < 0) ^ v49 | (v29 == 0)) {
          goto LABEL_57;
        }
      }
      else
      {
LABEL_50:
        while (v51)
        {
          v48 -= v47;
          long long v50 = *(_OWORD *)v51;
          int v51 = (void *)v51[2];
          uint64_t v47 = *((void *)&v50 + 1);
          if (v48 < *((void *)&v50 + 1)) {
            goto LABEL_52;
          }
        }
        *(void *)&long long v50 = &SegmentedBuffer::nullSegment;
        *((void *)&v50 + 1) = 0;
        int v51 = 0;
        a3 += 96;
        LODWORD(v13) = v13 - v44;
        BOOL v49 = __OFSUB__(v29, v30);
        v29 -= v30;
        if ((v29 < 0) ^ v49 | (v29 == 0)) {
          goto LABEL_57;
        }
      }
    }
  }
  return result;
}

void SliceDecoder::SliceDecoder(SliceDecoder *this)
{
  *((_DWORD *)this + 64) = 0;
}

uint64_t SliceDecoder::decode()
{
  CFStringRef v0 = (int16x8_t *)MEMORY[0x270FA5388]();
  int v2 = v0;
  unint64_t v3 = 0;
  uint64_t v129 = *MEMORY[0x263EF8340];
  uint64_t v117 = v1;
  uint64_t v4 = *((void *)v1 + 11);
  int v5 = *(_DWORD *)(v4 + 76) + *(_DWORD *)(v4 + 72);
  char v6 = 6 - v5;
  int v7 = 1 << (6 - (*(unsigned char *)(v4 + 76) + *(unsigned char *)(v4 + 72)));
  int v8 = *((_DWORD *)v1 + 7);
  int v9 = 4 * v8;
  uint64_t v121 = &v128[(4 * v8) << (6 - (*(unsigned char *)(v4 + 76) + *(unsigned char *)(v4 + 72)))];
  long long v126 = *v1;
  uint64_t v127 = *((void *)v1 + 2);
  unint64_t v10 = &v126;
  while (1)
  {
    unint64_t v11 = *((void *)v10 + 1);
    BOOL v55 = v3 >= v11;
    unint64_t v12 = v3 - v11;
    if (!v55) {
      break;
    }
    unint64_t v10 = (long long *)*((void *)v10 + 2);
    unint64_t v3 = v12;
    if (!v10)
    {
      unsigned int v13 = 0;
      int v14 = *((_DWORD *)v1 + 6);
      if (v14 <= 0) {
        return 0;
      }
      goto LABEL_11;
    }
  }
  unsigned __int8 v15 = *(unsigned char *)(*(void *)v10 + v3);
  int v16 = v15;
  int v17 = v15 >> 3;
  if (v16 == 127) {
    unsigned int v13 = 8;
  }
  else {
    unsigned int v13 = v17;
  }
  int v14 = *((_DWORD *)v1 + 6);
  if ((int)v13 >= v14) {
    return 0;
  }
LABEL_11:
  char v18 = &v126;
  unint64_t v19 = 1;
  while (1)
  {
    unint64_t v20 = *((void *)v18 + 1);
    BOOL v55 = v19 >= v20;
    unint64_t v21 = v19 - v20;
    if (!v55) {
      break;
    }
    char v18 = (long long *)*((void *)v18 + 2);
    unint64_t v19 = v21;
    if (!v18) {
      goto LABEL_15;
    }
  }
  LODWORD(v18) = *(unsigned __int8 *)(*(void *)v18 + v19);
LABEL_15:
  if ((int)v18 <= 1) {
    LODWORD(v18) = 1;
  }
  if (v18 >= 0xE0) {
    LODWORD(v18) = 224;
  }
  if (v18 >= 0x81) {
    LODWORD(v18) = 4 * v18 - 384;
  }
  int v22 = **(_DWORD **)(v4 + 104);
  uint64_t v23 = &v126;
  unint64_t v24 = 2;
  while (1)
  {
    unint64_t v25 = *((void *)v23 + 1);
    BOOL v55 = v24 >= v25;
    unint64_t v26 = v24 - v25;
    if (!v55) {
      break;
    }
    uint64_t v23 = (long long *)*((void *)v23 + 2);
    unint64_t v24 = v26;
    if (!v23) {
      goto LABEL_25;
    }
  }
  LODWORD(v23) = *(unsigned __int8 *)(*(void *)v23 + v24) << 8;
LABEL_25:
  int v27 = &v126;
  unint64_t v28 = 3;
  while (1)
  {
    unint64_t v29 = *((void *)v27 + 1);
    BOOL v55 = v28 >= v29;
    unint64_t v30 = v28 - v29;
    if (!v55) {
      break;
    }
    int v27 = (long long *)*((void *)v27 + 2);
    unint64_t v28 = v30;
    if (!v27) {
      goto LABEL_29;
    }
  }
  LODWORD(v27) = *(unsigned __int8 *)(*(void *)v27 + v28);
LABEL_29:
  unint64_t v31 = v27 | v23;
  unint64_t v32 = &v126;
  unint64_t v33 = 4;
  while (1)
  {
    unint64_t v34 = *((void *)v32 + 1);
    BOOL v55 = v33 >= v34;
    unint64_t v35 = v33 - v34;
    if (!v55) {
      break;
    }
    unint64_t v32 = (long long *)*((void *)v32 + 2);
    unint64_t v33 = v35;
    if (!v32) {
      goto LABEL_33;
    }
  }
  LODWORD(v32) = *(unsigned __int8 *)(*(void *)v32 + v33) << 8;
LABEL_33:
  unint64_t v36 = &v126;
  unint64_t v37 = 5;
  while (1)
  {
    unint64_t v38 = *((void *)v36 + 1);
    BOOL v55 = v37 >= v38;
    unint64_t v39 = v37 - v38;
    if (!v55) {
      break;
    }
    unint64_t v36 = (long long *)*((void *)v36 + 2);
    unint64_t v37 = v39;
    if (!v36)
    {
      unint64_t v40 = v32;
      if (v22) {
        goto LABEL_38;
      }
LABEL_44:
      int v45 = v13 + v31 + v40;
      signed int v46 = v14 - v45;
      if (v14 - v45 < 0) {
        return 0;
      }
      goto LABEL_53;
    }
  }
  unint64_t v40 = *(unsigned __int8 *)(*(void *)v36 + v37) | v32;
  if (!v22) {
    goto LABEL_44;
  }
LABEL_38:
  unint64_t v41 = &v126;
  unint64_t v42 = 6;
  while (1)
  {
    unint64_t v43 = *((void *)v41 + 1);
    BOOL v55 = v42 >= v43;
    unint64_t v44 = v42 - v43;
    if (!v55) {
      break;
    }
    unint64_t v41 = (long long *)*((void *)v41 + 2);
    unint64_t v42 = v44;
    if (!v41) {
      goto LABEL_46;
    }
  }
  LODWORD(v41) = *(unsigned __int8 *)(*(void *)v41 + v42) << 8;
LABEL_46:
  uint64_t v47 = &v126;
  unint64_t v48 = 7;
  do
  {
    unint64_t v49 = *((void *)v47 + 1);
    BOOL v55 = v48 >= v49;
    unint64_t v50 = v48 - v49;
    if (!v55)
    {
      signed int v46 = *(unsigned __int8 *)(*(void *)v47 + v48) | v41;
      int v45 = v13 + v31 + v40;
      if (v46 < 0) {
        return 0;
      }
      goto LABEL_53;
    }
    uint64_t v47 = (long long *)*((void *)v47 + 2);
    unint64_t v48 = v50;
  }
  while (v47);
  signed int v46 = (int)v41;
  int v45 = v13 + v31 + v40;
  if (v46 < 0) {
    return 0;
  }
LABEL_53:
  unsigned int v51 = v14 - v45 - v46;
  if ((v51 & 0x80000000) != 0 || !v13) {
    return 0;
  }
  if (v18 != v0[16].i32[0])
  {
    unint64_t v53 = *(void *)(v4 + 144);
    unint64_t v52 = *(void *)(v4 + 152);
    int v54 = v0 + 16;
    BOOL v55 = v52 + 64 <= (unint64_t)v0 || v52 >= (unint64_t)v54;
    int v56 = !v55;
    BOOL v57 = v53 < (unint64_t)v54 && v53 + 64 > (unint64_t)v0;
    if (v57 || v56)
    {
      for (uint64_t i = 0; i != 64; ++i)
      {
        int v83 = &v0->i16[i];
        *int v83 = (_WORD)v18 * *(unsigned __int8 *)(v53 + i);
        v83[64] = (_WORD)v18 * *(unsigned __int8 *)(v52 + i);
      }
    }
    else
    {
      int32x4_t v58 = vdupq_n_s32(v18);
      uint16x8_t v59 = vmovl_u8(*(uint8x8_t *)v53);
      uint16x8_t v60 = vmovl_high_u8(*(uint8x16_t *)v53);
      int16x8_t *v0 = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v59.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v59)));
      v0[1] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v60.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v60)));
      uint16x8_t v61 = vmovl_u8(*(uint8x8_t *)v52);
      uint16x8_t v62 = vmovl_high_u8(*(uint8x16_t *)v52);
      v0[8] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v61.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v61)));
      v0[9] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v62.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v62)));
      uint8x16_t v63 = *(uint8x16_t *)(v53 + 16);
      uint16x8_t v64 = vmovl_u8(*(uint8x8_t *)v63.i8);
      uint16x8_t v65 = vmovl_high_u8(v63);
      v0[2] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v64.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v64)));
      v0[3] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v65.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v65)));
      uint8x16_t v66 = *(uint8x16_t *)(v52 + 16);
      uint16x8_t v67 = vmovl_u8(*(uint8x8_t *)v66.i8);
      uint16x8_t v68 = vmovl_high_u8(v66);
      v0[10] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v67.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v67)));
      v0[11] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v68.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v68)));
      uint8x16_t v69 = *(uint8x16_t *)(v53 + 32);
      uint16x8_t v70 = vmovl_u8(*(uint8x8_t *)v69.i8);
      uint16x8_t v71 = vmovl_high_u8(v69);
      v0[4] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v70.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v70)));
      v0[5] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v71.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v71)));
      uint8x16_t v72 = *(uint8x16_t *)(v52 + 32);
      uint16x8_t v73 = vmovl_u8(*(uint8x8_t *)v72.i8);
      uint16x8_t v74 = vmovl_high_u8(v72);
      v0[12] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v73.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v73)));
      v0[13] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v74.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v74)));
      uint8x16_t v75 = *(uint8x16_t *)(v53 + 48);
      uint16x8_t v76 = vmovl_u8(*(uint8x8_t *)v75.i8);
      uint16x8_t v77 = vmovl_high_u8(v75);
      v0[6] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v76.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v76)));
      v0[7] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v77.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v77)));
      uint8x16_t v78 = *(uint8x16_t *)(v52 + 48);
      uint16x8_t v79 = vmovl_u8(*(uint8x8_t *)v78.i8);
      uint16x8_t v80 = vmovl_high_u8(v78);
      v0[14] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v79.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v79)));
      v0[15] = vuzp1q_s16((int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_u16(*(uint16x4_t *)v80.i8)), (int16x8_t)vmulq_s32(v58, (int32x4_t)vmovl_high_u16(v80)));
    }
    v0[16].i32[0] = (int)v18;
  }
  unsigned int v112 = v51;
  int v118 = (*(_DWORD *)(v4 + 84) - 4) * v8 + ((*(_DWORD *)(v4 + 84) - 4) * v8 < 0);
  bzero(v128, 2 * (int)(((v118 & 0xFFFFFFFE) + v9) << v6));
  long long v122 = *v117;
  int v124 = (long long *)*((void *)v117 + 2);
  unint64_t v84 = v13;
  unint64_t v85 = *((void *)v117 + 1);
  uint64_t v120 = v2;
  if (v85 > v13)
  {
LABEL_75:
    uint64_t v86 = (const unsigned __int8 *)(v122 + v84);
    unint64_t v87 = v85 - v84;
    *(void *)&long long v122 = v122 + v84;
    int v114 = v7;
    if (v85 - v84 < v31) {
      goto LABEL_78;
    }
  }
  else
  {
    while (v124)
    {
      v84 -= v85;
      long long v122 = *v124;
      int v124 = (long long *)*((void *)v124 + 2);
      unint64_t v85 = *((void *)&v122 + 1);
      if (v84 < *((void *)&v122 + 1)) {
        goto LABEL_75;
      }
    }
    unint64_t v87 = 0;
    uint64_t v86 = (const unsigned __int8 *)&SegmentedBuffer::nullSegment;
    *(void *)&long long v122 = &SegmentedBuffer::nullSegment;
    int v124 = 0;
    int v114 = v7;
    if (v31) {
LABEL_78:
    }
      operator new[]();
  }
  BitstreamReader::initialize((uint64_t)v125, v86, v31);
  VLD_RLD((uint64_t)v125, v128, __clz(v9) ^ 0x1F, *(_DWORD *)(v4 + 96), v6, *(const signed __int8 **)(v4 + 88));
  if (v86 && v86 != (const unsigned __int8 *)v122) {
    MEMORY[0x263E5FB20](v86, 0x1000C8077774924);
  }
  if (v87 > v31)
  {
LABEL_85:
    int v88 = (const unsigned __int8 *)(v122 + v31);
    unint64_t v89 = v87 - v31;
    *(void *)&long long v122 = v122 + v31;
    if (v89 < v40) {
      goto LABEL_88;
    }
  }
  else
  {
    while (v124)
    {
      v31 -= v87;
      long long v122 = *v124;
      int v124 = (long long *)*((void *)v124 + 2);
      unint64_t v87 = *((void *)&v122 + 1);
      if (v31 < *((void *)&v122 + 1)) {
        goto LABEL_85;
      }
    }
    unint64_t v89 = 0;
    int v88 = (const unsigned __int8 *)&SegmentedBuffer::nullSegment;
    *(void *)&long long v122 = &SegmentedBuffer::nullSegment;
    int v124 = 0;
    if (v40) {
LABEL_88:
    }
      operator new[]();
  }
  BitstreamReader::initialize((uint64_t)v125, v88, v40);
  unsigned int v90 = __clz(v118 >> 1) ^ 0x1F;
  char v91 = 7 - v5;
  VLD_RLD((uint64_t)v125, v121, v90, *(_DWORD *)(v4 + 96), 7 - v5, *(const signed __int8 **)(v4 + 88));
  if (v88 && v88 != (const unsigned __int8 *)v122) {
    MEMORY[0x263E5FB20](v88, 0x1000C8077774924);
  }
  if (v89 > v40)
  {
    signed int v92 = v46;
LABEL_97:
    uint64_t v93 = (const unsigned __int8 *)(v122 + v40);
    unint64_t v94 = v89 - v40;
    *(void *)&long long v122 = v122 + v40;
    signed int v46 = v92;
    unint64_t v95 = v92;
    if (v89 - v40 >= v92) {
      goto LABEL_101;
    }
LABEL_100:
    operator new[]();
  }
  signed int v92 = v46;
  while (v124)
  {
    v40 -= v89;
    long long v122 = *v124;
    int v124 = (long long *)*((void *)v124 + 2);
    unint64_t v89 = *((void *)&v122 + 1);
    if (v40 < *((void *)&v122 + 1)) {
      goto LABEL_97;
    }
  }
  unint64_t v94 = 0;
  uint64_t v93 = (const unsigned __int8 *)&SegmentedBuffer::nullSegment;
  *(void *)&long long v122 = &SegmentedBuffer::nullSegment;
  int v124 = 0;
  unint64_t v95 = v46;
  if (v46) {
    goto LABEL_100;
  }
LABEL_101:
  BitstreamReader::initialize((uint64_t)v125, v93, v46);
  VLD_RLD((uint64_t)v125, &v121[v114], v90, *(_DWORD *)(v4 + 96), v91, *(const signed __int8 **)(v4 + 88));
  if (v93 && v93 != (const unsigned __int8 *)v122) {
    MEMORY[0x263E5FB20](v93, 0x1000C8077774924);
  }
  uint64_t v119 = *((void *)v117 + 9);
  if (v119)
  {
    if (v94 <= v95)
    {
      signed int v96 = v112;
      while (v124)
      {
        v95 -= v94;
        long long v122 = *v124;
        int v124 = (long long *)*((void *)v124 + 2);
        unint64_t v94 = *((void *)&v122 + 1);
        if (v95 < *((void *)&v122 + 1)) {
          goto LABEL_111;
        }
      }
      unint64_t v97 = (const unsigned __int8 *)&SegmentedBuffer::nullSegment;
      BOOL v123 = (const unsigned __int8 *)&SegmentedBuffer::nullSegment;
      if (!v112) {
        goto LABEL_115;
      }
    }
    else
    {
      signed int v96 = v112;
LABEL_111:
      unint64_t v97 = (const unsigned __int8 *)(v122 + v95);
      BOOL v123 = (const unsigned __int8 *)(v122 + v95);
      if (v94 - v95 >= v96)
      {
LABEL_115:
        BitstreamReader::initialize((uint64_t)v125, v97, v112);
        uint64_t v98 = *(void *)(v4 + 104);
        uint64_t v99 = *(int *)(v98 + 4);
        unsigned int v113 = (*(uint64_t (**)(unsigned char *, uint64_t, void, void, void))(v98 + 8))(v125, v119, *((unsigned int *)v117 + 20), (16 * *((_DWORD *)v117 + 7)), (*((_DWORD *)v117 + 8) << *(_DWORD *)(v4 + 76)));
        uint64_t v116 = 16 * v99;
        if (v97 && v97 != v123) {
          MEMORY[0x263E5FB20](v97, 0x1000C8077774924);
        }
        goto LABEL_118;
      }
    }
    operator new[]();
  }
  unsigned int v113 = **(_DWORD **)(v4 + 104) == 0;
  uint64_t v116 = 0;
LABEL_118:
  if (*((int *)v117 + 7) >= 1)
  {
    int v100 = 0;
    uint64_t v101 = v114;
    uint64_t v115 = *(int *)(*(void *)(v4 + 128) + 20);
    uint64_t v102 = *((void *)v117 + 6);
    uint64_t v103 = 2 * v101;
    int8x16_t v104 = v128;
    unint64_t v105 = (char *)&v126;
    do
    {
      (*(void (**)(__int16 *, char *, void, int16x8_t *))(v4 + 112))(v104, v105, *(unsigned int *)(v4 + 120), v120);
      unint64_t v106 = &v104[(unint64_t)v103 / 2];
      (*(void (**)(__int16 *, char *, void, int16x8_t *))(v4 + 112))(v106, &v105[v103], *(unsigned int *)(v4 + 120), v120);
      unint64_t v107 = &v106[(unint64_t)v103 / 2];
      (*(void (**)(__int16 *, char *, void, int16x8_t *))(v4 + 112))(v107, &v105[v103 + v103], *(unsigned int *)(v4 + 120), v120);
      int v108 = &v107[(unint64_t)v103 / 2];
      (*(void (**)(__int16 *, char *, void, int16x8_t *))(v4 + 112))(v108, &v105[v103 + v103 + v103], *(unsigned int *)(v4 + 120), v120);
      unint64_t v109 = &v105[v103 + v103 + v103 + v103];
      if (*(int *)(v4 + 84) >= 5)
      {
        uint64_t v110 = 0;
        int v111 = 4;
        do
        {
          (*(void (**)(char *, char *, void, int16x8_t *))(v4 + 112))((char *)v121 + v110, &v109[v110], *(unsigned int *)(v4 + 120), v120 + 8);
          ++v111;
          v110 += v103;
        }
        while (v111 < *(_DWORD *)(v4 + 84));
        v109 += v110;
        uint64_t v121 = (__int16 *)((char *)v121 + v110);
      }
      (*((void (**)(uint64_t, char *, void, void, uint64_t, void, void))v117 + 5))(v102, v105, *((unsigned int *)v117 + 16), *((unsigned int *)v117 + 8), v119, *((unsigned int *)v117 + 20), *(unsigned int *)(v4 + 136));
      int8x16_t v104 = &v108[(unint64_t)v103 / 2];
      v102 += v115;
      v119 += v116;
      ++v100;
      unint64_t v105 = v109;
    }
    while (v100 < *((_DWORD *)v117 + 7));
  }
  return v113;
}

uint64_t VLD_RLD(uint64_t result, __int16 *a2, int a3, int a4, char a5, const signed __int8 *a6)
{
  uint64_t v8 = HIDWORD(*(void *)result);
  if (!v8) {
    return result;
  }
  int v9 = *(unsigned int **)(result + 16);
  int v10 = *(_DWORD *)(result + 8);
  unsigned int v11 = RiceExpComboCodeCatalog[EntropyCode::firstDcCodeBook];
  unsigned int v12 = v11 & 3;
  unsigned int v13 = v11 >> 5;
  unsigned int v14 = __clz(v8);
  if (v14 <= v12)
  {
    unsigned int v17 = v14 + 1;
    if (v11 >= 0x20)
    {
      unsigned int v18 = v8 << v17;
      v17 += v13;
      unsigned int v14 = (v18 >> -(char)v13) + (v14 << v13);
    }
  }
  else
  {
    int v15 = (v11 >> 2) & 7;
    int v16 = v15 + 2 * (v14 - (v12 + 1)) + 1;
    unsigned int v14 = ((v12 + 1) << v13) + (-1 << v15) + (v8 >> ((v12 ^ 0x1F) - (v15 + 2 * (v14 - (v12 + 1)) + 1)));
    unsigned int v17 = v16 + v12 + 1;
  }
  int v19 = -(v14 & 1) ^ (v14 >> 1);
  unint64_t v20 = *(void *)result << v17;
  unint64_t v21 = *(void *)(result + 24);
  int v22 = operator delete[];
  int v23 = v10 - v17;
  if ((int)(v10 - v17) < 0)
  {
    char v84 = v17 - v10;
    if ((unint64_t)v9 < v21)
    {
      unsigned int v85 = *v9++;
      unsigned int v86 = bswap32(v85);
      goto LABEL_66;
    }
    unint64_t v87 = *(unsigned __int8 **)(result + 32);
    if (v9 >= (unsigned int *)v87)
    {
      unsigned int v86 = 0;
      goto LABEL_66;
    }
    unint64_t v88 = v87 - (unsigned __int8 *)v9;
    if ((unint64_t)(v87 - (unsigned __int8 *)v9) < 8)
    {
      unsigned int v86 = 0;
      unsigned int v89 = 32;
      unsigned int v90 = *(unsigned __int8 **)(result + 16);
      goto LABEL_63;
    }
    if (v88 >= 0x20)
    {
      unint64_t v91 = v88 & 0xFFFFFFFFFFFFFFE0;
      unsigned int v89 = 32 - 8 * (v88 & 0xFFFFFFE0);
      int32x4_t v92 = (int32x4_t)xmmword_262CDE530;
      int32x4_t v93 = (int32x4_t)xmmword_262CDE540;
      int32x4_t v94 = (int32x4_t)xmmword_262CDE550;
      int32x4_t v95 = (int32x4_t)xmmword_262CDE560;
      signed int v96 = (int8x16_t *)(v9 + 4);
      int8x16_t v97 = 0uLL;
      v98.i64[0] = 0x700000007;
      v98.i64[1] = 0x700000007;
      v99.i64[0] = 0x8700000087;
      v99.i64[1] = 0x8700000087;
      v100.i64[0] = 0xFFFFFF00FFFFFF00;
      v100.i64[1] = 0xFFFFFF00FFFFFF00;
      unint64_t v101 = v88 & 0xFFFFFFFFFFFFFFE0;
      int8x16_t v102 = 0uLL;
      int8x16_t v103 = 0uLL;
      int8x16_t v6 = 0uLL;
      int8x16_t v104 = 0uLL;
      int8x16_t v105 = 0uLL;
      v7.i64[1] = 0xFFFFFF0BFFFFFF0ALL;
      int8x16_t v106 = 0uLL;
      int8x16_t v107 = 0uLL;
      do
      {
        int8x16_t v108 = v96[-1];
        int8x16_t v109 = *v96;
        v96 += 2;
        int8x16_t v102 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v108, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v94, v98)), v102);
        int8x16_t v97 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v108, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v95, v98)), v97);
        int8x16_t v103 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v108, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v93, v98)), v103);
        int8x16_t v6 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v108, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v92, v98)), v6);
        int8x16_t v105 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v109, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v94, v99)), v105);
        int8x16_t v104 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v109, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v95, v99)), v104);
        int8x16_t v106 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v109, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v93, v99)), v106);
        int8x16_t v107 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v109, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v92, v99)), v107);
        int32x4_t v95 = vaddq_s32(v95, v100);
        int32x4_t v94 = vaddq_s32(v94, v100);
        int32x4_t v93 = vaddq_s32(v93, v100);
        int32x4_t v92 = vaddq_s32(v92, v100);
        v101 -= 32;
      }
      while (v101);
      int8x16_t v110 = vorrq_s8(vorrq_s8(vorrq_s8(v104, v97), vorrq_s8(v106, v103)), vorrq_s8(vorrq_s8(v105, v102), vorrq_s8(v107, v6)));
      *(int8x8_t *)v110.i8 = vorr_s8(*(int8x8_t *)v110.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL));
      unsigned int v86 = v110.i32[0] | v110.i32[1];
      if (v88 == v91) {
        goto LABEL_65;
      }
      if ((v88 & 0x18) == 0)
      {
        unsigned int v90 = (unsigned __int8 *)v9 + v91;
LABEL_63:
        unsigned int v123 = v89 - 8;
        do
        {
          int v124 = *v90++;
          v86 |= v124 << v123;
          v123 -= 8;
        }
        while (v90 != v87);
LABEL_65:
        int v9 = *(unsigned int **)(result + 32);
        int v22 = operator delete[];
LABEL_66:
        v20 |= (unint64_t)v86 << v84;
        v23 += 32;
        *a2 = v19;
        if (a3) {
          goto LABEL_8;
        }
        goto LABEL_67;
      }
    }
    else
    {
      unsigned int v86 = 0;
      unint64_t v91 = 0;
      unsigned int v89 = 32;
    }
    int32x4_t v111 = vdupq_n_s32(v89);
    unsigned int v89 = 32 - 8 * (v88 & 0xFFFFFFF8);
    unsigned int v90 = (unsigned __int8 *)v9 + (v88 & 0xFFFFFFFFFFFFFFF8);
    int32x4_t v112 = vaddq_s32(v111, (int32x4_t)xmmword_262CDE540);
    int32x4_t v113 = vaddq_s32(v111, (int32x4_t)xmmword_262CDE550);
    int8x16_t v114 = 0uLL;
    int8x16_t v115 = (int8x16_t)v86;
    uint64_t v116 = (uint64_t *)((char *)v9 + v91);
    unint64_t v117 = v91 - (v88 & 0xFFFFFFFFFFFFFFF8);
    v118.i64[0] = 0x700000007;
    v118.i64[1] = 0x700000007;
    v119.i64[0] = 0x3F0000003FLL;
    v119.i64[1] = 0x3F0000003FLL;
    do
    {
      uint64_t v120 = *v116++;
      v6.i64[0] = v120;
      uint32x4_t v121 = (uint32x4_t)vqtbl1q_s8(v6, (int8x16_t)xmmword_262CDE570);
      int8x16_t v6 = vqtbl1q_s8(v6, (int8x16_t)xmmword_262CDE580);
      int8x16_t v114 = vorrq_s8((int8x16_t)vshlq_u32(v121, (uint32x4_t)vaddq_s32(v112, v118)), v114);
      int8x16_t v115 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v6, (uint32x4_t)vaddq_s32(v113, v118)), v115);
      int32x4_t v113 = vaddq_s32(v113, v119);
      int32x4_t v112 = vaddq_s32(v112, v119);
      v117 += 8;
    }
    while (v117);
    int8x16_t v122 = vorrq_s8(v115, v114);
    *(int8x8_t *)v122.i8 = vorr_s8(*(int8x8_t *)v122.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v122, v122, 8uLL));
    unsigned int v86 = v122.i32[0] | v122.i32[1];
    if (v88 == (v88 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_65;
    }
    goto LABEL_63;
  }
  *a2 = v19;
  if (a3)
  {
LABEL_8:
    int32x4_t v24 = (int32x4_t)xmmword_262CDE540;
    int32x4_t v25 = (int32x4_t)xmmword_262CDE550;
    v26.i64[0] = 0x700000007;
    v26.i64[1] = 0x700000007;
    int8x16_t v27 = *((int8x16_t *)v22 + 87);
    v28.i64[0] = 0x3F0000003FLL;
    v28.i64[1] = 0x3F0000003FLL;
    int32x4_t v29 = (int32x4_t)xmmword_262CDE530;
    long long v30 = xmmword_262CDE560;
    v31.i64[0] = 0x8700000087;
    v31.i64[1] = 0x8700000087;
    v32.i64[0] = 0xFFFFFF00FFFFFF00;
    v32.i64[1] = 0xFFFFFF00FFFFFF00;
    unint64_t v33 = a2;
    unsigned int v34 = 3;
    int v35 = 1;
    while (1)
    {
      if (!HIDWORD(v20)) {
        return result;
      }
      unsigned int v38 = (__int16)v34;
      if ((v34 & 0x8000u) != 0) {
        unsigned int v38 = -(__int16)v34;
      }
      if (v38 >= 3) {
        unsigned int v38 = 3;
      }
      unsigned int v39 = RiceExpComboCodeCatalog[EntropyCode::levelDifferenceCodeBook[v38]];
      unsigned int v40 = v39 & 3;
      unsigned int v41 = v39 >> 5;
      unsigned int v42 = __clz(HIDWORD(v20));
      if (v42 <= v40)
      {
        unsigned int v45 = v42 + 1;
        if (v39 >= 0x20)
        {
          unsigned int v46 = HIDWORD(v20) << v45;
          v45 += v41;
          unsigned int v42 = (v46 >> -(char)v41) + (v42 << v41);
        }
      }
      else
      {
        int v43 = (v39 >> 2) & 7;
        int v44 = v43 + 2 * (v42 - (v40 + 1)) + 1;
        unsigned int v42 = ((v40 + 1) << v41) + (-1 << v43) + (HIDWORD(v20) >> ((v40 ^ 0x1F) - (v43 + 2 * (v42 - (v40 + 1)) + 1)));
        unsigned int v45 = v44 + v40 + 1;
      }
      int v47 = (v34 >> 15) & 1;
      unsigned int v48 = v47 ? -v42 : v42;
      v20 <<= v45;
      v23 -= v45;
      if (v23 < 0) {
        break;
      }
LABEL_11:
      v33 += (1 << a5);
      unsigned int v34 = (-(v42 & 1) ^ (v48 >> 1)) + (v42 & v47);
      v19 += v34;
      __int16 *v33 = v19;
      if (++v35 >> a3) {
        goto LABEL_68;
      }
    }
    if ((unint64_t)v9 < v21)
    {
      unsigned int v36 = *v9++;
      unsigned int v37 = bswap32(v36);
    }
    else
    {
      unint64_t v49 = *(unsigned __int8 **)(result + 32);
      if (v9 >= (unsigned int *)v49)
      {
        unsigned int v37 = 0;
      }
      else
      {
        unint64_t v50 = v49 - (unsigned __int8 *)v9;
        if ((unint64_t)(v49 - (unsigned __int8 *)v9) < 8)
        {
          unsigned int v37 = 0;
          unsigned int v51 = 32;
          unint64_t v52 = v9;
          goto LABEL_43;
        }
        if (v50 < 0x20)
        {
          unsigned int v37 = 0;
          unint64_t v53 = 0;
          unsigned int v51 = 32;
          goto LABEL_38;
        }
        unint64_t v53 = v50 & 0xFFFFFFFFFFFFFFE0;
        int v54 = (int8x16_t *)(v9 + 4);
        int8x16_t v55 = 0uLL;
        int8x16_t v56 = 0uLL;
        unint64_t v57 = v50 & 0xFFFFFFFFFFFFFFE0;
        long long v58 = v30;
        int32x4_t v59 = (int32x4_t)v30;
        int32x4_t v241 = v25;
        int32x4_t v60 = v24;
        int32x4_t v61 = v29;
        int8x16_t v62 = 0uLL;
        int8x16_t v7 = 0uLL;
        int8x16_t v63 = 0uLL;
        unsigned int v51 = 32 - 8 * (v50 & 0xFFFFFFE0);
        int8x16_t v64 = 0uLL;
        int8x16_t v65 = 0uLL;
        int8x16_t v66 = 0uLL;
        do
        {
          int8x16_t v67 = v54[-1];
          int8x16_t v68 = *v54;
          v54 += 2;
          int8x16_t v56 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v67, v27), (uint32x4_t)vaddq_s32(v25, v26)), v56);
          int8x16_t v55 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v67, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v59, v26)), v55);
          int8x16_t v62 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v67, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v24, v26)), v62);
          int8x16_t v7 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v67, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v29, v26)), v7);
          int8x16_t v64 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v68, v27), (uint32x4_t)vaddq_s32(v25, v31)), v64);
          int8x16_t v63 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v68, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v59, v31)), v63);
          int8x16_t v65 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v68, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v24, v31)), v65);
          int8x16_t v66 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v68, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v29, v31)), v66);
          int32x4_t v59 = vaddq_s32(v59, v32);
          int32x4_t v25 = vaddq_s32(v25, v32);
          int32x4_t v24 = vaddq_s32(v24, v32);
          int32x4_t v29 = vaddq_s32(v29, v32);
          v57 -= 32;
        }
        while (v57);
        int8x16_t v69 = vorrq_s8(vorrq_s8(vorrq_s8(v63, v55), vorrq_s8(v65, v62)), vorrq_s8(vorrq_s8(v64, v56), vorrq_s8(v66, v7)));
        int8x8_t v70 = vorr_s8(*(int8x8_t *)v69.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v69, v69, 8uLL));
        unsigned int v37 = v70.i32[0] | v70.i32[1];
        if (v50 != v53)
        {
          if ((v50 & 0x18) == 0)
          {
            unint64_t v52 = (unsigned int *)((char *)v9 + v53);
            int32x4_t v29 = v61;
            long long v30 = v58;
            int32x4_t v24 = v60;
            int32x4_t v25 = v241;
LABEL_43:
            unsigned int v82 = v51 - 8;
            do
            {
              int v83 = *(unsigned __int8 *)v52;
              unint64_t v52 = (unsigned int *)((char *)v52 + 1);
              v37 |= v83 << v82;
              v82 -= 8;
            }
            while (v52 != (unsigned int *)v49);
LABEL_45:
            int v9 = *(unsigned int **)(result + 32);
            goto LABEL_10;
          }
          int32x4_t v29 = v61;
          long long v30 = v58;
          int32x4_t v24 = v60;
          int32x4_t v25 = v241;
LABEL_38:
          int32x4_t v71 = vdupq_n_s32(v51);
          unsigned int v51 = 32 - 8 * (v50 & 0xFFFFFFF8);
          unint64_t v52 = (unsigned int *)((char *)v9 + (v50 & 0xFFFFFFFFFFFFFFF8));
          int32x4_t v72 = vaddq_s32(v71, v24);
          int32x4_t v73 = vaddq_s32(v71, v25);
          int8x16_t v74 = 0uLL;
          int8x16_t v75 = (int8x16_t)v37;
          uint16x8_t v76 = (uint64_t *)((char *)v9 + v53);
          unint64_t v77 = v53 - (v50 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            uint64_t v78 = *v76++;
            v7.i64[0] = v78;
            uint32x4_t v79 = (uint32x4_t)vqtbl1q_s8(v7, v27);
            int8x16_t v7 = vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE580);
            int8x16_t v74 = vorrq_s8((int8x16_t)vshlq_u32(v79, (uint32x4_t)vaddq_s32(v72, v26)), v74);
            int8x16_t v75 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v7, (uint32x4_t)vaddq_s32(v73, v26)), v75);
            int32x4_t v73 = vaddq_s32(v73, v28);
            int32x4_t v72 = vaddq_s32(v72, v28);
            v77 += 8;
          }
          while (v77);
          int8x16_t v80 = vorrq_s8(v75, v74);
          int8x8_t v81 = vorr_s8(*(int8x8_t *)v80.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL));
          unsigned int v37 = v81.i32[0] | v81.i32[1];
          if (v50 == (v50 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_45;
          }
          goto LABEL_43;
        }
        int v9 = *(unsigned int **)(result + 32);
        int32x4_t v29 = v61;
        long long v30 = v58;
        int32x4_t v24 = v60;
        int32x4_t v25 = v241;
      }
    }
LABEL_10:
    v20 |= (unint64_t)v37 << -(char)v23;
    v23 += 32;
    goto LABEL_11;
  }
LABEL_67:
  int v35 = 1;
LABEL_68:
  unint64_t v125 = HIDWORD(v20);
  if (HIDWORD(v20))
  {
    unsigned int v126 = a4 << a3;
    unsigned int v127 = 4u;
    int v128 = 2u;
    int32x4_t v129 = (int32x4_t)xmmword_262CDE540;
    int32x4_t v130 = (int32x4_t)xmmword_262CDE550;
    v131.i64[0] = 0x700000007;
    v131.i64[1] = 0x700000007;
    v132.i64[0] = 0x3F0000003FLL;
    v132.i64[1] = 0x3F0000003FLL;
    int32x4_t v133 = (int32x4_t)xmmword_262CDE530;
    long long v134 = xmmword_262CDE560;
    v135.i64[0] = 0x8700000087;
    v135.i64[1] = 0x8700000087;
    v136.i64[0] = 0xFFFFFF00FFFFFF00;
    v136.i64[1] = 0xFFFFFF00FFFFFF00;
    do
    {
      uint64_t v137 = EntropyCode::levelCodeBook[v128];
      long long v138 = (unsigned __int16 *)((char *)&RiceExpComboCodeVLDPairTables
                                + 40960 * EntropyCode::runCodeBook[v127]
                                + 4096 * v137
                                + 4 * (v20 >> 54));
      int v139 = *v138;
      if (*v138)
      {
        unsigned int v127 = *((unsigned __int8 *)v138 + 2);
        int v128 = *((unsigned __int8 *)v138 + 3) + 1;
        int v140 = (v128 ^ ((int)(v125 << v139) >> 31)) - ((int)(v125 << v139) >> 31);
        v20 <<= v139 + 1;
        v23 -= v139 + 1;
        if (v23 < 0) {
          goto LABEL_113;
        }
        goto LABEL_72;
      }
      unsigned int v142 = RiceExpComboCodeCatalog[EntropyCode::runCodeBook[v127]];
      unsigned int v143 = v142 & 3;
      unsigned int v144 = v142 >> 5;
      unsigned int v127 = __clz(v125);
      if (v127 <= v143)
      {
        unsigned int v149 = v127 + 1;
        if (v142 >= 0x20)
        {
          unsigned int v151 = v125 << v149;
          unsigned int v152 = v144 + v149;
          unsigned int v127 = (v151 >> -(char)v144) + (v127 << v144);
          unint64_t v147 = v20 << v152;
          int v148 = v23 - v152;
          if (v148 >= 0)
          {
LABEL_79:
            unint64_t v150 = HIDWORD(v147);
            if (!HIDWORD(v147)) {
              return result;
            }
            goto LABEL_105;
          }
        }
        else
        {
          unint64_t v147 = v20 << v149;
          int v148 = v23 - v149;
          if (v148 >= 0) {
            goto LABEL_79;
          }
        }
      }
      else
      {
        int v145 = (v142 >> 2) & 7;
        int v146 = v145 + 2 * (v127 - (v143 + 1)) + 1;
        unsigned int v127 = ((v143 + 1) << v144)
             + (-1 << v145)
             + (v125 >> ((v143 ^ 0x1F) - (v145 + 2 * (v127 - (v143 + 1)) + 1)));
        unint64_t v147 = v20 << (v146 + v143 + 1);
        int v148 = v23 - (v146 + v143 + 1);
        if (v148 >= 0) {
          goto LABEL_79;
        }
      }
      if ((unint64_t)v9 < v21)
      {
        unsigned int v153 = *v9++;
        unsigned int v154 = bswap32(v153);
        goto LABEL_104;
      }
      long long v155 = *(unsigned __int8 **)(result + 32);
      if (v9 >= (unsigned int *)v155)
      {
        unsigned int v154 = 0;
        goto LABEL_104;
      }
      unint64_t v156 = v155 - (unsigned __int8 *)v9;
      if ((unint64_t)(v155 - (unsigned __int8 *)v9) >= 8)
      {
        if (v156 < 0x20)
        {
          unsigned int v154 = 0;
          uint64_t v159 = 0;
          unsigned int v157 = 32;
LABEL_96:
          int32x4_t v177 = vdupq_n_s32(v157);
          unsigned int v157 = 32 - 8 * (v156 & 0xFFFFFFF8);
          int v158 = (unsigned int *)((char *)v9 + (v156 & 0xFFFFFFFFFFFFFFF8));
          int32x4_t v178 = vaddq_s32(v177, v129);
          int32x4_t v179 = vaddq_s32(v177, v130);
          int8x16_t v180 = 0uLL;
          int8x16_t v181 = (int8x16_t)v154;
          int32x4_t v182 = (uint64_t *)((char *)v9 + v159);
          uint64_t v183 = v159 - (v156 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            uint64_t v184 = *v182++;
            v7.i64[0] = v184;
            uint32x4_t v185 = (uint32x4_t)vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE570);
            int8x16_t v7 = vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE580);
            int8x16_t v180 = vorrq_s8((int8x16_t)vshlq_u32(v185, (uint32x4_t)vaddq_s32(v178, v131)), v180);
            int8x16_t v181 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v7, (uint32x4_t)vaddq_s32(v179, v131)), v181);
            int32x4_t v179 = vaddq_s32(v179, v132);
            int32x4_t v178 = vaddq_s32(v178, v132);
            v183 += 8;
          }
          while (v183);
          int8x16_t v186 = vorrq_s8(v181, v180);
          int8x8_t v187 = vorr_s8(*(int8x8_t *)v186.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v186, v186, 8uLL));
          unsigned int v154 = v187.i32[0] | v187.i32[1];
          if (v156 == (v156 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_103;
          }
          goto LABEL_101;
        }
        uint64_t v159 = v156 & 0xFFFFFFFFFFFFFFE0;
        unsigned int v160 = (int8x16_t *)(v9 + 4);
        int8x16_t v161 = 0uLL;
        int8x16_t v162 = 0uLL;
        unint64_t v163 = v156 & 0xFFFFFFFFFFFFFFE0;
        long long v164 = v134;
        int32x4_t v165 = (int32x4_t)v134;
        int32x4_t v242 = v130;
        int32x4_t v166 = v129;
        int32x4_t v167 = v133;
        int8x16_t v168 = 0uLL;
        int8x16_t v7 = 0uLL;
        int8x16_t v169 = 0uLL;
        unsigned int v157 = 32 - 8 * (v156 & 0xFFFFFFE0);
        int8x16_t v170 = 0uLL;
        int8x16_t v171 = 0uLL;
        int8x16_t v172 = 0uLL;
        do
        {
          int8x16_t v173 = v160[-1];
          int8x16_t v174 = *v160;
          v160 += 2;
          int8x16_t v162 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v173, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v130, v131)), v162);
          int8x16_t v161 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v173, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v165, v131)), v161);
          int8x16_t v168 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v173, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v129, v131)), v168);
          int8x16_t v7 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v173, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v133, v131)), v7);
          int8x16_t v170 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v174, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v130, v135)), v170);
          int8x16_t v169 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v174, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v165, v135)), v169);
          int8x16_t v171 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v174, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v129, v135)), v171);
          int8x16_t v172 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v174, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v133, v135)), v172);
          int32x4_t v165 = vaddq_s32(v165, v136);
          int32x4_t v130 = vaddq_s32(v130, v136);
          int32x4_t v129 = vaddq_s32(v129, v136);
          int32x4_t v133 = vaddq_s32(v133, v136);
          v163 -= 32;
        }
        while (v163);
        int8x16_t v175 = vorrq_s8(vorrq_s8(vorrq_s8(v169, v161), vorrq_s8(v171, v168)), vorrq_s8(vorrq_s8(v170, v162), vorrq_s8(v172, v7)));
        int8x8_t v176 = vorr_s8(*(int8x8_t *)v175.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v175, v175, 8uLL));
        unsigned int v154 = v176.i32[0] | v176.i32[1];
        if (v156 == v159)
        {
          int v9 = *(unsigned int **)(result + 32);
          int32x4_t v133 = v167;
          long long v134 = v164;
          int32x4_t v129 = v166;
          int32x4_t v130 = v242;
          goto LABEL_104;
        }
        int32x4_t v129 = v166;
        if ((v156 & 0x18) != 0)
        {
          int32x4_t v133 = v167;
          long long v134 = v164;
          int32x4_t v130 = v242;
          goto LABEL_96;
        }
        int v158 = (unsigned int *)((char *)v9 + v159);
        int32x4_t v133 = v167;
        long long v134 = v164;
        int32x4_t v130 = v242;
      }
      else
      {
        unsigned int v154 = 0;
        unsigned int v157 = 32;
        int v158 = v9;
      }
LABEL_101:
      unsigned int v188 = v157 - 8;
      do
      {
        int v189 = *(unsigned __int8 *)v158;
        int v158 = (unsigned int *)((char *)v158 + 1);
        v154 |= v189 << v188;
        v188 -= 8;
      }
      while (v158 != (unsigned int *)v155);
LABEL_103:
      int v9 = *(unsigned int **)(result + 32);
LABEL_104:
      v147 |= (unint64_t)v154 << -(char)v148;
      v148 += 32;
      unint64_t v150 = HIDWORD(v147);
      if (!HIDWORD(v147)) {
        return result;
      }
LABEL_105:
      unsigned int v190 = RiceExpComboCodeCatalog[v137];
      unsigned int v191 = v190 & 3;
      unsigned int v192 = v190 >> 5;
      unsigned int v193 = __clz(v150);
      int v194 = (v190 >> 2) & 7;
      int v195 = v194 + 2 * (v193 - (v191 + 1)) + 1;
      unsigned int v196 = ((v191 + 1) << (RiceExpComboCodeCatalog[v137] >> 5))
           + (-1 << v194)
           + (v150 >> ((v190 & 3 ^ 0x1F) - v195));
      BOOL v197 = v190 >= 0x20;
      int v198 = (v190 >> 5) + v193 + 1;
      int v199 = (v150 << (v193 + 1) >> -(char)v192) + (v193 << v192);
      if (!v197)
      {
        int v198 = v193 + 1;
        int v199 = v193;
      }
      if (v193 <= v191)
      {
        unsigned int v200 = v199;
      }
      else
      {
        int v198 = v195 + v191 + 1;
        unsigned int v200 = v196;
      }
      if (v127 > 0x7DF) {
        return result;
      }
      int v128 = v200 + 1;
      if ((int)(v200 + 1) >= 0x4000) {
        return result;
      }
      int v140 = (((int)(v150 << v198) >> 31) ^ v128) - ((int)(v150 << v198) >> 31);
      unint64_t v20 = v147 << (v198 + 1);
      int v23 = v148 - (v198 + 1);
      if (v23 < 0)
      {
LABEL_113:
        if ((unint64_t)v9 < v21)
        {
          unsigned int v201 = *v9++;
          unsigned int v202 = bswap32(v201);
          goto LABEL_135;
        }
        v203 = *(unsigned __int8 **)(result + 32);
        if (v9 >= (unsigned int *)v203)
        {
          unsigned int v202 = 0;
        }
        else
        {
          unint64_t v204 = v203 - (unsigned __int8 *)v9;
          if ((unint64_t)(v203 - (unsigned __int8 *)v9) < 8)
          {
            unsigned int v202 = 0;
            unsigned int v205 = 32;
            v206 = v9;
            goto LABEL_132;
          }
          if (v204 < 0x20)
          {
            unsigned int v202 = 0;
            unint64_t v207 = 0;
            unsigned int v205 = 32;
            goto LABEL_127;
          }
          int32x4_t v243 = v130;
          int32x4_t v208 = v129;
          long long v209 = v134;
          int32x4_t v210 = v133;
          unint64_t v207 = v204 & 0xFFFFFFFFFFFFFFE0;
          unsigned int v205 = 32 - 8 * (v204 & 0xFFFFFFE0);
          int32x4_t v211 = (int32x4_t)xmmword_262CDE530;
          int32x4_t v212 = (int32x4_t)xmmword_262CDE540;
          int32x4_t v213 = (int32x4_t)xmmword_262CDE550;
          int8x16_t v214 = 0uLL;
          int8x16_t v7 = 0uLL;
          int32x4_t v215 = (int32x4_t)xmmword_262CDE560;
          v216 = (int8x16_t *)(v9 + 4);
          unint64_t v217 = v204 & 0xFFFFFFFFFFFFFFE0;
          int8x16_t v218 = 0uLL;
          int8x16_t v219 = 0uLL;
          int8x16_t v220 = 0uLL;
          int8x16_t v221 = 0uLL;
          int8x16_t v222 = 0uLL;
          int8x16_t v223 = 0uLL;
          do
          {
            int8x16_t v224 = v216[-1];
            int8x16_t v225 = *v216;
            v216 += 2;
            int8x16_t v7 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v224, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v213, v131)), v7);
            int8x16_t v214 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v224, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v215, v131)), v214);
            int8x16_t v218 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v224, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v212, v131)), v218);
            int8x16_t v219 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v224, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v211, v131)), v219);
            int8x16_t v221 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v225, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v213, v135)), v221);
            int8x16_t v220 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v225, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v215, v135)), v220);
            int8x16_t v222 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v225, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v212, v135)), v222);
            int8x16_t v223 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v225, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v211, v135)), v223);
            int32x4_t v215 = vaddq_s32(v215, v136);
            int32x4_t v213 = vaddq_s32(v213, v136);
            int32x4_t v212 = vaddq_s32(v212, v136);
            int32x4_t v211 = vaddq_s32(v211, v136);
            v217 -= 32;
          }
          while (v217);
          int8x16_t v226 = vorrq_s8(vorrq_s8(vorrq_s8(v220, v214), vorrq_s8(v222, v218)), vorrq_s8(vorrq_s8(v221, v7), vorrq_s8(v223, v219)));
          int8x8_t v227 = vorr_s8(*(int8x8_t *)v226.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v226, v226, 8uLL));
          unsigned int v202 = v227.i32[0] | v227.i32[1];
          if (v204 == v207)
          {
            int v9 = *(unsigned int **)(result + 32);
            int32x4_t v133 = v210;
            long long v134 = v209;
            int32x4_t v129 = v208;
            int32x4_t v130 = v243;
          }
          else
          {
            if ((v204 & 0x18) == 0)
            {
              v206 = (unsigned int *)((char *)v9 + v207);
              int32x4_t v133 = v210;
              long long v134 = v209;
              int32x4_t v129 = v208;
              int32x4_t v130 = v243;
              goto LABEL_132;
            }
            int32x4_t v133 = v210;
            long long v134 = v209;
            int32x4_t v129 = v208;
            int32x4_t v130 = v243;
LABEL_127:
            int32x4_t v228 = vdupq_n_s32(v205);
            unsigned int v205 = 32 - 8 * (v204 & 0xFFFFFFF8);
            v206 = (unsigned int *)((char *)v9 + (v204 & 0xFFFFFFFFFFFFFFF8));
            int32x4_t v229 = vaddq_s32(v228, v129);
            int32x4_t v230 = vaddq_s32(v228, v130);
            int8x16_t v231 = 0uLL;
            int8x16_t v232 = (int8x16_t)v202;
            v233 = (uint64_t *)((char *)v9 + v207);
            unint64_t v234 = v207 - (v204 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint64_t v235 = *v233++;
              v7.i64[0] = v235;
              uint32x4_t v236 = (uint32x4_t)vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE570);
              int8x16_t v7 = vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE580);
              int8x16_t v231 = vorrq_s8((int8x16_t)vshlq_u32(v236, (uint32x4_t)vaddq_s32(v229, v131)), v231);
              int8x16_t v232 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v7, (uint32x4_t)vaddq_s32(v230, v131)), v232);
              int32x4_t v230 = vaddq_s32(v230, v132);
              int32x4_t v229 = vaddq_s32(v229, v132);
              v234 += 8;
            }
            while (v234);
            int8x16_t v237 = vorrq_s8(v232, v231);
            int8x8_t v238 = vorr_s8(*(int8x8_t *)v237.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v237, v237, 8uLL));
            unsigned int v202 = v238.i32[0] | v238.i32[1];
            if (v204 != (v204 & 0xFFFFFFFFFFFFFFF8))
            {
LABEL_132:
              unsigned int v239 = v205 - 8;
              do
              {
                int v240 = *(unsigned __int8 *)v206;
                v206 = (unsigned int *)((char *)v206 + 1);
                v202 |= v240 << v239;
                v239 -= 8;
              }
              while (v206 != (unsigned int *)v203);
            }
            int v9 = *(unsigned int **)(result + 32);
          }
        }
LABEL_135:
        v20 |= (unint64_t)v202 << -(char)v23;
        v23 += 32;
        unint64_t v141 = v127 + v35;
        if (v141 >= v126) {
          return result;
        }
        goto LABEL_136;
      }
LABEL_72:
      unint64_t v141 = v127 + v35;
      if (v141 >= v126) {
        return result;
      }
LABEL_136:
      a2[((v141 & ~(-1 << a3)) << a5) + a6[v141 >> a3]] = v140;
      int v35 = v141 + 1;
      unint64_t v125 = HIDWORD(v20);
    }
    while (HIDWORD(v20));
  }
  return result;
}

uint64_t convertY416ToX444(uint64_t result, int a2, unsigned __int8 *a3, int a4, unsigned __int8 *a5, int a6, int a7, int a8, BOOL a9, unsigned __int16 a10)
{
  if (a8 >= 1)
  {
    if (a7 >= 1) {
      int v10 = a7 - 1;
    }
    else {
      int v10 = a7 + 14;
    }
    if (a7 < 1)
    {
      if ((a7 & 0xF) == 0 && a9)
      {
        uint64_t v26 = a8;
        int8x16_t v27 = a5 + 62;
        do
        {
          *(_DWORD *)(v27 - 2) = *(_DWORD *)(v27 - 6);
          v27 += a6;
          --v26;
        }
        while (v26);
      }
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = a2;
      uint64_t v13 = a4;
      uint64_t v14 = a6;
      uint64_t v15 = a8;
      do
      {
        int v16 = 0;
        unsigned int v17 = (int32x4_t *)(result + v11 * v12);
        unsigned int v18 = (int16x8_t *)&a3[v11 * v13];
        int v19 = (int32x4_t *)&a5[v11 * v14];
        do
        {
          int32x4_t v20 = *v17;
          int32x4_t v21 = v17[1];
          int32x4_t v22 = v17[2];
          int32x4_t v23 = v17[3];
          *v18++ = vuzp2q_s16((int16x8_t)vuzp1q_s32(*v17, v21), (int16x8_t)vuzp1q_s32(v22, v23));
          *int v19 = vuzp2q_s32(v20, v21);
          v19[1] = vuzp2q_s32(v22, v23);
          v19 += 2;
          v16 += 8;
          v17 += 4;
        }
        while (v16 < a7);
        if (a9)
        {
          int32x4_t v24 = &a5[v11 * v14 + 56];
          int v25 = (v10 >> 4) + 1;
          if (a7 >= 17)
          {
            do
            {
              *((_WORD *)v24 + 2) = a10 & ((*(unsigned __int16 *)v24 + *((unsigned __int16 *)v24 + 4) + 1) >> 1);
              *((_WORD *)v24 + 3) = a10 & ((*((unsigned __int16 *)v24 + 1)
                                          + *((unsigned __int16 *)v24 + 5)
                                          + 1) >> 1);
              v24 += 64;
              --v25;
            }
            while (v25 > 1);
          }
          if ((a7 & 0xF) == 0) {
            *((_DWORD *)v24 + 1) = *(_DWORD *)v24;
          }
        }
        ++v11;
      }
      while (v11 != v15);
    }
  }
  return result;
}

uint64_t convertV216ToX422(uint64_t result, int a2, unsigned __int8 *a3, int a4, unsigned __int8 *a5, int a6, int a7, int a8)
{
  if (a8 >= 1 && a7 >= 1)
  {
    for (uint64_t i = 0; i != a8; ++i)
    {
      int v9 = 0;
      int v10 = (int16x8_t *)(result + i * a2);
      uint64_t v11 = (int16x8_t *)&a3[i * a4];
      uint64_t v12 = (int16x8_t *)&a5[i * a6];
      do
      {
        int16x8_t v13 = *v10;
        int16x8_t v14 = v10[1];
        v10 += 2;
        *v12++ = vuzp1q_s16(v13, v14);
        *v11++ = vuzp2q_s16(v13, v14);
        v9 += 8;
      }
      while (v9 < a7);
    }
  }
  return result;
}

unint64_t *convertV216ToV210(unint64_t *result, int a2, __n128 *a3, int a4, int a5, int a6, double a7, double a8, int8x16_t a9, int8x16_t a10, int32x4_t a11, int16x8_t a12)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  long long v24 = xmmword_262D47390;
  uint64_t v25 = 0x10008000100080;
  if (a4 >= 16 * ((a5 + 5) / 6) && a6 >= 1)
  {
    for (int i = 0; i != a6; ++i)
    {
      int v14 = a5;
      uint64_t v15 = a3;
      for (unint64_t j = result; ; j += 3)
      {
        uint64_t v22 = v14;
        if (v14 >= 6) {
          goto LABEL_9;
        }
        if (v14 < 1) {
          break;
        }
        uint64_t v23 = 0;
        do
        {
          *((_DWORD *)&v24 + v23) = *((_DWORD *)j + v23);
          ++v23;
        }
        while (v22 != v23);
        unint64_t j = (unint64_t *)&v24;
LABEL_9:
        a9.i64[0] = *j;
        a10.i64[0] = *(unint64_t *)((char *)j + 4);
        a11.i64[0] = *(unint64_t *)((char *)j + 10);
        a12.i64[0] = j[2];
        int32x4_t v17 = (int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8(a9, (int8x16_t)xmmword_262D47380), (int16x8_t)a10);
        int32x4_t v18 = (int32x4_t)vzip1q_s16((int16x8_t)a11, a12);
        int16x8_t v19 = (int16x8_t)vzip1q_s32(v17, v18);
        int16x8_t v20 = (int16x8_t)vzip2q_s32(v17, v18);
        uint32x4_t v21 = (uint32x4_t)vzip2q_s16(v19, (int16x8_t)0);
        a11 = vshlq_n_s32((int32x4_t)vzip1q_s16(v20, (int16x8_t)0), 4uLL);
        a10 = vorrq_s8((int8x16_t)vshrq_n_u32(v21, 6uLL), (int8x16_t)a11);
        a9 = vorrq_s8(a10, (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v20, (int16x8_t)0), 0xEuLL));
        *v15++ = (__n128)a9;
        int v14 = v22 - 6;
      }
      CFIndex result = (unint64_t *)((char *)result + a2);
      a3 = (__n128 *)((char *)a3 + a4);
    }
  }
  return result;
}

uint64_t AlphaDecoder::AlphaDecoder(uint64_t result, int a2, int a3, char a4)
{
  *(_DWORD *)CFIndex result = a2;
  *(_DWORD *)(result + 4) = 0;
  *(void *)(result + 8) = 0;
  if ((a4 & 1) == 0)
  {
    if (a3 > 1932812658)
    {
      if (a3 > 2016698738)
      {
        if (a3 != 2016698739 && a3 != 2033463606)
        {
          if (a3 != 2033463352) {
            return result;
          }
          goto LABEL_24;
        }
      }
      else if (a3 != 1932812659 && a3 != 1949589875)
      {
        if (a3 != 1983131704) {
          return result;
        }
        *(_DWORD *)(result + 4) = 1;
        uint64_t v4 = decodeIntAlpha<8,unsigned char,true>;
        if (a2 != 1)
        {
          if (a2 != 2) {
            return result;
          }
          uint64_t v4 = decodeIntAlpha<16,unsigned char,true>;
        }
LABEL_30:
        *(void *)(result + 8) = v4;
        return result;
      }
    }
    else
    {
      if (a3 <= 1647719541)
      {
        if (a3 != 32 && a3 != 1111970369)
        {
          if (a3 != 1647719521) {
            return result;
          }
          goto LABEL_27;
        }
        goto LABEL_24;
      }
      if (a3 != 1647719542)
      {
        if (a3 != 1916022840)
        {
          if (a3 != 1916036716) {
            return result;
          }
          *(_DWORD *)(result + 4) = 4;
          uint64_t v4 = decodeIntAlpha<8,float,false>;
          if (a2 != 1)
          {
            if (a2 != 2) {
              return result;
            }
            uint64_t v4 = decodeIntAlpha<16,float,false>;
          }
          goto LABEL_30;
        }
LABEL_24:
        *(_DWORD *)(result + 4) = 1;
        uint64_t v4 = decodeIntAlpha<8,unsigned char,false>;
        if (a2 != 1)
        {
          if (a2 != 2) {
            return result;
          }
          uint64_t v4 = decodeIntAlpha<16,unsigned char,false>;
        }
        goto LABEL_30;
      }
    }
LABEL_27:
    *(_DWORD *)(result + 4) = 2;
    uint64_t v4 = decodeIntAlpha<8,unsigned short,false>;
    if (a2 != 1)
    {
      if (a2 != 2) {
        return result;
      }
      uint64_t v4 = decodeIntAlpha<16,unsigned short,false>;
    }
    goto LABEL_30;
  }
  return result;
}

BOOL decodeIntAlpha<8,unsigned char,false>(uint64_t *a1, int64x2_t *a2, unsigned int a3, int a4, int a5)
{
  if (a3 == a4) {
    int v6 = 1;
  }
  else {
    int v6 = a5;
  }
  if (a3 == a4) {
    int v7 = a5;
  }
  else {
    int v7 = 1;
  }
  unsigned int v8 = v7 * a4;
  unint64_t v9 = *a1;
  int v10 = *((_DWORD *)a1 + 2);
  uint64_t v12 = (unsigned int *)a1[2];
  unint64_t v11 = a1[3];
  unsigned int v13 = -1;
  int v14 = 255;
  v15.i64[0] = 0x700000007;
  v15.i64[1] = 0x700000007;
  v16.i64[0] = 0x3F0000003FLL;
  v16.i64[1] = 0x3F0000003FLL;
  v17.i64[0] = 0x8700000087;
  v17.i64[1] = 0x8700000087;
  v18.i64[0] = 0xFFFFFF00FFFFFF00;
  v18.i64[1] = 0xFFFFFF00FFFFFF00;
  while (2)
  {
    unsigned int v19 = v8;
    int16x8_t v20 = a2;
LABEL_9:
    uint32x4_t v21 = a2;
    do
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        int v24 = 9;
        unsigned int v25 = (SHIDWORD(v9) >> 23) + v13;
        unsigned int v13 = ((SHIDWORD(v9) >> 23) + v13);
        v14 &= v13;
        unsigned int v26 = HIDWORD(v9) << 9;
        if (((HIDWORD(v9) << 9) & 0x80000000) == 0)
        {
LABEL_37:
          if (v26 >> 27) {
            int v62 = 5;
          }
          else {
            int v62 = 16;
          }
          v9 <<= v62 + v24;
          v10 -= v62 + v24;
          if (v10 < 0)
          {
            if ((unint64_t)v12 < v11)
            {
              unsigned int v63 = *v12++;
              unsigned int v64 = bswap32(v63);
              goto LABEL_62;
            }
            int8x16_t v65 = (unsigned __int8 *)a1[4];
            if (v12 >= (unsigned int *)v65)
            {
              unsigned int v64 = 0;
            }
            else
            {
              unint64_t v66 = v65 - (unsigned __int8 *)v12;
              if ((unint64_t)(v65 - (unsigned __int8 *)v12) < 8)
              {
                unsigned int v64 = 0;
                unsigned int v67 = 32;
                int8x16_t v68 = v12;
                goto LABEL_59;
              }
              if (v66 < 0x20)
              {
                unsigned int v64 = 0;
                unint64_t v69 = 0;
                unsigned int v67 = 32;
                goto LABEL_54;
              }
              unint64_t v69 = v66 & 0xFFFFFFFFFFFFFFE0;
              int8x8_t v70 = (int8x16_t *)(v12 + 4);
              int8x16_t v71 = 0uLL;
              int8x16_t v72 = 0uLL;
              unint64_t v73 = v66 & 0xFFFFFFFFFFFFFFE0;
              int32x4_t v74 = (int32x4_t)xmmword_262CDE560;
              int32x4_t v75 = (int32x4_t)xmmword_262CDE550;
              int32x4_t v76 = (int32x4_t)xmmword_262CDE540;
              int32x4_t v77 = (int32x4_t)xmmword_262CDE530;
              int8x16_t v78 = 0uLL;
              int8x16_t v5 = 0uLL;
              int8x16_t v79 = 0uLL;
              unsigned int v67 = 32 - 8 * (v66 & 0xFFFFFFE0);
              int8x16_t v80 = 0uLL;
              int8x16_t v81 = 0uLL;
              int8x16_t v82 = 0uLL;
              do
              {
                int8x16_t v83 = v70[-1];
                int8x16_t v84 = *v70;
                v70 += 2;
                int8x16_t v72 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v83, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v75, v15)), v72);
                int8x16_t v71 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v83, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v74, v15)), v71);
                int8x16_t v78 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v83, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v76, v15)), v78);
                int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v83, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v77, v15)), v5);
                int8x16_t v80 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v75, v17)), v80);
                int8x16_t v79 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v74, v17)), v79);
                int8x16_t v81 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v76, v17)), v81);
                int8x16_t v82 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v77, v17)), v82);
                int32x4_t v74 = vaddq_s32(v74, v18);
                int32x4_t v75 = vaddq_s32(v75, v18);
                int32x4_t v76 = vaddq_s32(v76, v18);
                int32x4_t v77 = vaddq_s32(v77, v18);
                v73 -= 32;
              }
              while (v73);
              int8x16_t v85 = vorrq_s8(vorrq_s8(vorrq_s8(v79, v71), vorrq_s8(v81, v78)), vorrq_s8(vorrq_s8(v80, v72), vorrq_s8(v82, v5)));
              *(int8x8_t *)v85.i8 = vorr_s8(*(int8x8_t *)v85.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v85, v85, 8uLL));
              unsigned int v64 = v85.i32[0] | v85.i32[1];
              if (v66 == v69)
              {
                uint64_t v12 = (unsigned int *)a1[4];
              }
              else
              {
                if ((v66 & 0x18) == 0)
                {
                  int8x16_t v68 = (unsigned int *)((char *)v12 + v69);
                  goto LABEL_59;
                }
LABEL_54:
                int32x4_t v86 = vdupq_n_s32(v67);
                unsigned int v67 = 32 - 8 * (v66 & 0xFFFFFFF8);
                int8x16_t v68 = (unsigned int *)((char *)v12 + (v66 & 0xFFFFFFFFFFFFFFF8));
                int32x4_t v87 = vaddq_s32(v86, (int32x4_t)xmmword_262CDE540);
                int32x4_t v88 = vaddq_s32(v86, (int32x4_t)xmmword_262CDE550);
                int8x16_t v89 = 0uLL;
                int8x16_t v90 = (int8x16_t)v64;
                unint64_t v91 = (uint64_t *)((char *)v12 + v69);
                unint64_t v92 = v69 - (v66 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  uint64_t v93 = *v91++;
                  v5.i64[0] = v93;
                  uint32x4_t v94 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
                  int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
                  int8x16_t v89 = vorrq_s8((int8x16_t)vshlq_u32(v94, (uint32x4_t)vaddq_s32(v87, v15)), v89);
                  int8x16_t v90 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v88, v15)), v90);
                  int32x4_t v88 = vaddq_s32(v88, v16);
                  int32x4_t v87 = vaddq_s32(v87, v16);
                  v92 += 8;
                }
                while (v92);
                int8x16_t v95 = vorrq_s8(v90, v89);
                *(int8x8_t *)v95.i8 = vorr_s8(*(int8x8_t *)v95.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v95, v95, 8uLL));
                unsigned int v64 = v95.i32[0] | v95.i32[1];
                if (v66 != (v66 & 0xFFFFFFFFFFFFFFF8))
                {
LABEL_59:
                  unsigned int v96 = v67 - 8;
                  do
                  {
                    int v97 = *(unsigned __int8 *)v68;
                    int8x16_t v68 = (unsigned int *)((char *)v68 + 1);
                    v64 |= v97 << v96;
                    v96 -= 8;
                  }
                  while (v68 != (unsigned int *)v65);
                }
                uint64_t v12 = (unsigned int *)a1[4];
              }
            }
LABEL_62:
            v9 |= (unint64_t)v64 << -(char)v10;
            v10 += 32;
          }
          unsigned int v98 = (v26 >> -(char)v62) + 1;
          uint64_t v99 = vqtbl1q_s8(vzip1q_s8((int8x16_t)v13, (int8x16_t)v13), (int8x16_t)xmmword_262D473B0).u64[0];
          if (v98 < v19) {
            goto LABEL_83;
          }
          int64x2_t v100 = vdupq_lane_s64(v99, 0);
          while (2)
          {
            if (v19 < 8)
            {
              unint64_t v101 = v21;
              goto LABEL_73;
            }
            unsigned int v102 = v19 >> 3;
            uint64_t v103 = (v19 >> 3) - 1;
            if (v103 < 3)
            {
              unint64_t v101 = v21;
              goto LABEL_72;
            }
            uint64_t v104 = v103 + 1;
            uint64_t v105 = (v103 + 1) & 0x1FFFFFFFCLL;
            unint64_t v101 = (int64x2_t *)((char *)v21 + 8 * v105);
            v102 -= v105;
            int8x16_t v106 = v21 + 1;
            uint64_t v107 = v105;
            do
            {
              v106[-1] = v100;
              *int8x16_t v106 = v100;
              v106 += 2;
              v107 -= 4;
            }
            while (v107);
            if (v104 != v105)
            {
              do
              {
LABEL_72:
                v101->i64[0] = v99;
                unint64_t v101 = (int64x2_t *)((char *)v101 + 8);
                --v102;
              }
              while (v102);
            }
LABEL_73:
            if ((v19 & 4) != 0)
            {
              v101->i32[0] = v99;
              unint64_t v101 = (int64x2_t *)((char *)v101 + 4);
              if ((v19 & 2) != 0) {
                goto LABEL_79;
              }
LABEL_75:
              if ((v19 & 1) == 0) {
                goto LABEL_76;
              }
LABEL_80:
              v101->i8[0] = v25;
              if (!--v6) {
                return v14 == 255;
              }
            }
            else
            {
              if ((v19 & 2) == 0) {
                goto LABEL_75;
              }
LABEL_79:
              v101->i8[0] = v25;
              v101->i8[1] = v25;
              unint64_t v101 = (int64x2_t *)((char *)v101 + 2);
              if (v19) {
                goto LABEL_80;
              }
LABEL_76:
              if (!--v6) {
                return v14 == 255;
              }
            }
            v98 -= v19;
            int16x8_t v20 = (int64x2_t *)((char *)v20 + a3);
            unsigned int v19 = v8;
            uint32x4_t v21 = v20;
            if (v98 < v8)
            {
              uint32x4_t v21 = v20;
              unsigned int v19 = v8;
LABEL_83:
              if (v98 < 8)
              {
                a2 = v21;
                goto LABEL_91;
              }
              unsigned int v108 = v98 >> 3;
              uint64_t v109 = (v98 >> 3) - 1;
              if (v109 < 3)
              {
                a2 = v21;
                goto LABEL_90;
              }
              uint64_t v110 = v109 + 1;
              a2 = (int64x2_t *)((char *)v21 + 8 * (v110 & 0x1FFFFFFFCLL));
              v108 -= v110 & 0xFFFFFFFC;
              int64x2_t v111 = vdupq_lane_s64(v99, 0);
              int32x4_t v112 = v21 + 1;
              uint64_t v113 = v110 & 0x1FFFFFFFCLL;
              do
              {
                v112[-1] = v111;
                *int32x4_t v112 = v111;
                v112 += 2;
                v113 -= 4;
              }
              while (v113);
              if (v110 != (v110 & 0x1FFFFFFFCLL))
              {
                do
                {
LABEL_90:
                  a2->i64[0] = v99;
                  a2 = (int64x2_t *)((char *)a2 + 8);
                  --v108;
                }
                while (v108);
              }
LABEL_91:
              if ((v98 & 4) != 0)
              {
                a2->i32[0] = v99;
                a2 = (int64x2_t *)((char *)a2 + 4);
                if ((v98 & 2) != 0) {
                  goto LABEL_96;
                }
LABEL_93:
                v19 -= v98;
                if (v98)
                {
LABEL_97:
                  a2->i8[0] = v25;
                  a2 = (int64x2_t *)((char *)a2 + 1);
                }
              }
              else
              {
                if ((v98 & 2) == 0) {
                  goto LABEL_93;
                }
LABEL_96:
                a2->i8[0] = v25;
                a2->i8[1] = v25;
                a2 = (int64x2_t *)((char *)a2 + 2);
                v19 -= v98;
                if (v98) {
                  goto LABEL_97;
                }
              }
              goto LABEL_9;
            }
            continue;
          }
        }
      }
      else
      {
        int v24 = 5;
        LOBYTE(v25) = smallAlphaDiffVLDTable_8b[v9 >> 59] + v13;
        unsigned int v13 = v25;
        int v14 = v25 & v14;
        unsigned int v26 = 32 * HIDWORD(v9);
        if (((32 * HIDWORD(v9)) & 0x80000000) == 0) {
          goto LABEL_37;
        }
      }
      v9 <<= v24 + 1;
      v10 -= v24 + 1;
      if (v10 < 0)
      {
        if ((unint64_t)v12 < v11)
        {
          unsigned int v22 = *v12++;
          unsigned int v23 = bswap32(v22);
        }
        else
        {
          int8x16_t v27 = (unsigned __int8 *)a1[4];
          if (v12 < (unsigned int *)v27)
          {
            unint64_t v28 = v27 - (unsigned __int8 *)v12;
            if ((unint64_t)(v27 - (unsigned __int8 *)v12) < 8)
            {
              unsigned int v23 = 0;
              unsigned int v29 = 32;
              long long v30 = v12;
              goto LABEL_34;
            }
            if (v28 >= 0x20)
            {
              unint64_t v31 = v28 & 0xFFFFFFFFFFFFFFE0;
              unsigned int v29 = 32 - 8 * (v28 & 0xFFFFFFE0);
              int32x4_t v32 = (int32x4_t)xmmword_262CDE530;
              int32x4_t v33 = (int32x4_t)xmmword_262CDE540;
              int32x4_t v34 = (int32x4_t)xmmword_262CDE550;
              int8x16_t v35 = 0uLL;
              int8x16_t v5 = 0uLL;
              int32x4_t v36 = (int32x4_t)xmmword_262CDE560;
              unsigned int v37 = (int8x16_t *)(v12 + 4);
              unint64_t v38 = v28 & 0xFFFFFFFFFFFFFFE0;
              int8x16_t v39 = 0uLL;
              int8x16_t v40 = 0uLL;
              int8x16_t v41 = 0uLL;
              int8x16_t v42 = 0uLL;
              int8x16_t v43 = 0uLL;
              int8x16_t v44 = 0uLL;
              do
              {
                int8x16_t v45 = v37[-1];
                int8x16_t v46 = *v37;
                v37 += 2;
                int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v45, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v34, v15)), v5);
                int8x16_t v35 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v45, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v36, v15)), v35);
                int8x16_t v39 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v45, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v33, v15)), v39);
                int8x16_t v40 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v45, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v32, v15)), v40);
                int8x16_t v42 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v46, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v34, v17)), v42);
                int8x16_t v41 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v46, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v36, v17)), v41);
                int8x16_t v43 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v46, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v33, v17)), v43);
                int8x16_t v44 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v46, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v32, v17)), v44);
                int32x4_t v36 = vaddq_s32(v36, v18);
                int32x4_t v34 = vaddq_s32(v34, v18);
                int32x4_t v33 = vaddq_s32(v33, v18);
                int32x4_t v32 = vaddq_s32(v32, v18);
                v38 -= 32;
              }
              while (v38);
              int8x16_t v47 = vorrq_s8(vorrq_s8(vorrq_s8(v41, v35), vorrq_s8(v43, v39)), vorrq_s8(vorrq_s8(v42, v5), vorrq_s8(v44, v40)));
              int8x8_t v48 = vorr_s8(*(int8x8_t *)v47.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL));
              unsigned int v23 = v48.i32[0] | v48.i32[1];
              if (v28 == v31) {
                goto LABEL_36;
              }
              if ((v28 & 0x18) == 0)
              {
                long long v30 = (unsigned int *)((char *)v12 + v31);
LABEL_34:
                unsigned int v60 = v29 - 8;
                do
                {
                  int v61 = *(unsigned __int8 *)v30;
                  long long v30 = (unsigned int *)((char *)v30 + 1);
                  v23 |= v61 << v60;
                  v60 -= 8;
                }
                while (v30 != (unsigned int *)v27);
LABEL_36:
                uint64_t v12 = (unsigned int *)a1[4];
                goto LABEL_11;
              }
            }
            else
            {
              unsigned int v23 = 0;
              unint64_t v31 = 0;
              unsigned int v29 = 32;
            }
            int32x4_t v49 = vdupq_n_s32(v29);
            unsigned int v29 = 32 - 8 * (v28 & 0xFFFFFFF8);
            long long v30 = (unsigned int *)((char *)v12 + (v28 & 0xFFFFFFFFFFFFFFF8));
            int32x4_t v50 = vaddq_s32(v49, (int32x4_t)xmmword_262CDE540);
            int32x4_t v51 = vaddq_s32(v49, (int32x4_t)xmmword_262CDE550);
            int8x16_t v52 = 0uLL;
            int8x16_t v53 = (int8x16_t)v23;
            int v54 = (uint64_t *)((char *)v12 + v31);
            unint64_t v55 = v31 - (v28 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint64_t v56 = *v54++;
              v5.i64[0] = v56;
              uint32x4_t v57 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
              int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
              int8x16_t v52 = vorrq_s8((int8x16_t)vshlq_u32(v57, (uint32x4_t)vaddq_s32(v50, v15)), v52);
              int8x16_t v53 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v51, v15)), v53);
              int32x4_t v51 = vaddq_s32(v51, v16);
              int32x4_t v50 = vaddq_s32(v50, v16);
              v55 += 8;
            }
            while (v55);
            int8x16_t v58 = vorrq_s8(v53, v52);
            int8x8_t v59 = vorr_s8(*(int8x8_t *)v58.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL));
            unsigned int v23 = v59.i32[0] | v59.i32[1];
            if (v28 == (v28 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_36;
            }
            goto LABEL_34;
          }
          unsigned int v23 = 0;
        }
LABEL_11:
        v9 |= (unint64_t)v23 << -(char)v10;
        v10 += 32;
      }
      v21->i8[0] = v25;
      uint32x4_t v21 = (int64x2_t *)((char *)v21 + 1);
      --v19;
    }
    while (v19);
    if (--v6)
    {
      a2 = (int64x2_t *)((char *)v20 + a3);
      continue;
    }
    return v14 == 255;
  }
}

BOOL decodeIntAlpha<16,unsigned char,false>(uint64_t *a1, int64x2_t *a2, unsigned int a3, int a4, int a5)
{
  if (a3 == a4) {
    int v6 = 1;
  }
  else {
    int v6 = a5;
  }
  if (a3 == a4) {
    int v7 = a5;
  }
  else {
    int v7 = 1;
  }
  unsigned int v8 = v7 * a4;
  unint64_t v9 = *a1;
  int v10 = *((_DWORD *)a1 + 2);
  uint64_t v12 = (unsigned int *)a1[2];
  unint64_t v11 = a1[3];
  LOWORD(v13) = -1;
  int v14 = 0xFFFF;
  v15.i64[0] = 0x700000007;
  v15.i64[1] = 0x700000007;
  v16.i64[0] = 0x3F0000003FLL;
  v16.i64[1] = 0x3F0000003FLL;
  v17.i64[0] = 0x8700000087;
  v17.i64[1] = 0x8700000087;
  v18.i64[0] = 0xFFFFFF00FFFFFF00;
  v18.i64[1] = 0xFFFFFF00FFFFFF00;
  while (2)
  {
    unsigned int v19 = v8;
    int16x8_t v20 = a2;
LABEL_9:
    uint32x4_t v21 = a2;
    do
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        int v24 = SHIDWORD(v9) >> 15;
        int v25 = 17;
      }
      else
      {
        LOWORD(v24) = smallAlphaDiffVLDTable_16b[HIBYTE(v9)];
        int v25 = 8;
      }
      int v13 = (unsigned __int16)(v24 + v13);
      v14 &= v13;
      unsigned int v26 = (65281 * v13 + 0x800000) >> 24;
      LODWORD(v27) = HIDWORD(v9) << v25;
      if (((HIDWORD(v9) << v25) & 0x80000000) == 0)
      {
        if (v27 >> 27) {
          int v62 = 5;
        }
        else {
          int v62 = 16;
        }
        int v63 = v62 + v25;
        if ((v62 + v25) < 0x21)
        {
LABEL_64:
          v9 <<= v63;
          v10 -= v63;
          if (v10 >= 0)
          {
LABEL_86:
            unsigned int v137 = (v27 >> -(char)v62) + 1;
            uint64_t v138 = vqtbl1q_s8(vzip1q_s8((int8x16_t)v26, (int8x16_t)v26), (int8x16_t)xmmword_262D473B0).u64[0];
            if (v137 < v19) {
              goto LABEL_106;
            }
            int64x2_t v139 = vdupq_lane_s64(v138, 0);
            while (1)
            {
              if (v19 < 8)
              {
                int v140 = v21;
                goto LABEL_96;
              }
              unsigned int v141 = v19 >> 3;
              uint64_t v142 = (v19 >> 3) - 1;
              if (v142 < 3) {
                break;
              }
              uint64_t v143 = v142 + 1;
              uint64_t v144 = (v142 + 1) & 0x1FFFFFFFCLL;
              int v140 = (int64x2_t *)((char *)v21 + 8 * v144);
              v141 -= v144;
              int v145 = v21 + 1;
              uint64_t v146 = v144;
              do
              {
                v145[-1] = v139;
                *int v145 = v139;
                v145 += 2;
                v146 -= 4;
              }
              while (v146);
              if (v143 != v144) {
                goto LABEL_95;
              }
LABEL_96:
              if ((v19 & 4) != 0)
              {
                v140->i32[0] = v138;
                int v140 = (int64x2_t *)((char *)v140 + 4);
                if ((v19 & 2) == 0)
                {
LABEL_98:
                  if (v19) {
                    goto LABEL_103;
                  }
                  goto LABEL_99;
                }
              }
              else if ((v19 & 2) == 0)
              {
                goto LABEL_98;
              }
              v140->i8[0] = v26;
              v140->i8[1] = v26;
              int v140 = (int64x2_t *)((char *)v140 + 2);
              if (v19)
              {
LABEL_103:
                v140->i8[0] = v26;
                if (!--v6) {
                  return v14 == 0xFFFF;
                }
                goto LABEL_104;
              }
LABEL_99:
              if (!--v6) {
                return v14 == 0xFFFF;
              }
LABEL_104:
              v137 -= v19;
              int16x8_t v20 = (int64x2_t *)((char *)v20 + a3);
              unsigned int v19 = v8;
              uint32x4_t v21 = v20;
              if (v137 < v8)
              {
                uint32x4_t v21 = v20;
                unsigned int v19 = v8;
LABEL_106:
                if (v137 < 8)
                {
                  a2 = v21;
                  goto LABEL_114;
                }
                unsigned int v147 = v137 >> 3;
                uint64_t v148 = (v137 >> 3) - 1;
                if (v148 < 3)
                {
                  a2 = v21;
                  goto LABEL_113;
                }
                uint64_t v149 = v148 + 1;
                a2 = (int64x2_t *)((char *)v21 + 8 * (v149 & 0x1FFFFFFFCLL));
                v147 -= v149 & 0xFFFFFFFC;
                int64x2_t v150 = vdupq_lane_s64(v138, 0);
                unsigned int v151 = v21 + 1;
                uint64_t v152 = v149 & 0x1FFFFFFFCLL;
                do
                {
                  v151[-1] = v150;
                  *unsigned int v151 = v150;
                  v151 += 2;
                  v152 -= 4;
                }
                while (v152);
                if (v149 != (v149 & 0x1FFFFFFFCLL))
                {
                  do
                  {
LABEL_113:
                    a2->i64[0] = v138;
                    a2 = (int64x2_t *)((char *)a2 + 8);
                    --v147;
                  }
                  while (v147);
                }
LABEL_114:
                if ((v137 & 4) != 0)
                {
                  a2->i32[0] = v138;
                  a2 = (int64x2_t *)((char *)a2 + 4);
                  if ((v137 & 2) != 0) {
                    goto LABEL_119;
                  }
LABEL_116:
                  v19 -= v137;
                  if (v137)
                  {
LABEL_120:
                    a2->i8[0] = v26;
                    a2 = (int64x2_t *)((char *)a2 + 1);
                  }
                }
                else
                {
                  if ((v137 & 2) == 0) {
                    goto LABEL_116;
                  }
LABEL_119:
                  a2->i8[0] = v26;
                  a2->i8[1] = v26;
                  a2 = (int64x2_t *)((char *)a2 + 2);
                  v19 -= v137;
                  if (v137) {
                    goto LABEL_120;
                  }
                }
                goto LABEL_9;
              }
            }
            int v140 = v21;
            do
            {
LABEL_95:
              v140->i64[0] = v138;
              int v140 = (int64x2_t *)((char *)v140 + 8);
              --v141;
            }
            while (v141);
            goto LABEL_96;
          }
          if ((unint64_t)v12 < v11)
          {
            unsigned int v101 = *v12++;
            unsigned int v102 = bswap32(v101);
LABEL_85:
            v9 |= (unint64_t)v102 << -(char)v10;
            v10 += 32;
            goto LABEL_86;
          }
          unint64_t v103 = a1[4];
          if ((unint64_t)v12 >= v103)
          {
            unsigned int v102 = 0;
            goto LABEL_85;
          }
          unint64_t v104 = v103 - (void)v12;
          if (v103 - (unint64_t)v12 < 8)
          {
            unsigned int v102 = 0;
            unsigned int v105 = 32;
            int8x16_t v106 = v12;
            goto LABEL_82;
          }
          if (v104 >= 0x20)
          {
            unint64_t v107 = v104 & 0xFFFFFFFFFFFFFFE0;
            unsigned int v105 = 32 - 8 * (v104 & 0xFFFFFFE0);
            int32x4_t v108 = (int32x4_t)xmmword_262CDE530;
            int32x4_t v109 = (int32x4_t)xmmword_262CDE540;
            int32x4_t v110 = (int32x4_t)xmmword_262CDE550;
            int8x16_t v111 = 0uLL;
            int8x16_t v5 = 0uLL;
            int32x4_t v112 = (int32x4_t)xmmword_262CDE560;
            uint64_t v113 = (int8x16_t *)(v12 + 4);
            unint64_t v114 = v104 & 0xFFFFFFFFFFFFFFE0;
            int8x16_t v115 = 0uLL;
            int8x16_t v116 = 0uLL;
            int8x16_t v117 = 0uLL;
            int8x16_t v118 = 0uLL;
            int8x16_t v119 = 0uLL;
            int8x16_t v120 = 0uLL;
            do
            {
              int8x16_t v121 = v113[-1];
              int8x16_t v122 = *v113;
              v113 += 2;
              int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v121, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v110, v15)), v5);
              int8x16_t v111 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v121, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v112, v15)), v111);
              int8x16_t v115 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v121, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v109, v15)), v115);
              int8x16_t v116 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v121, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v108, v15)), v116);
              int8x16_t v118 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v122, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v110, v17)), v118);
              int8x16_t v117 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v122, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v112, v17)), v117);
              int8x16_t v119 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v122, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v109, v17)), v119);
              int8x16_t v120 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v122, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v108, v17)), v120);
              int32x4_t v112 = vaddq_s32(v112, v18);
              int32x4_t v110 = vaddq_s32(v110, v18);
              int32x4_t v109 = vaddq_s32(v109, v18);
              int32x4_t v108 = vaddq_s32(v108, v18);
              v114 -= 32;
            }
            while (v114);
            int8x16_t v123 = vorrq_s8(vorrq_s8(vorrq_s8(v117, v111), vorrq_s8(v119, v115)), vorrq_s8(vorrq_s8(v118, v5), vorrq_s8(v120, v116)));
            *(int8x8_t *)v123.i8 = vorr_s8(*(int8x8_t *)v123.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v123, v123, 8uLL));
            unsigned int v102 = v123.i32[0] | v123.i32[1];
            if (v104 == v107) {
              goto LABEL_84;
            }
            if ((v104 & 0x18) == 0)
            {
              int8x16_t v106 = (unsigned int *)((char *)v12 + v107);
LABEL_82:
              unsigned int v135 = v105 - 8;
              do
              {
                int v136 = *(unsigned __int8 *)v106;
                int8x16_t v106 = (unsigned int *)((char *)v106 + 1);
                v102 |= v136 << v135;
                v135 -= 8;
              }
              while (v106 != (unsigned int *)a1[4]);
LABEL_84:
              uint64_t v12 = (unsigned int *)a1[4];
              goto LABEL_85;
            }
          }
          else
          {
            unsigned int v102 = 0;
            unint64_t v107 = 0;
            unsigned int v105 = 32;
          }
          int32x4_t v124 = vdupq_n_s32(v105);
          unsigned int v105 = 32 - 8 * (v104 & 0xFFFFFFF8);
          int8x16_t v106 = (unsigned int *)((char *)v12 + (v104 & 0xFFFFFFFFFFFFFFF8));
          int32x4_t v125 = vaddq_s32(v124, (int32x4_t)xmmword_262CDE540);
          int32x4_t v126 = vaddq_s32(v124, (int32x4_t)xmmword_262CDE550);
          int8x16_t v127 = 0uLL;
          int8x16_t v128 = (int8x16_t)v102;
          int32x4_t v129 = (uint64_t *)((char *)v12 + v107);
          unint64_t v130 = v107 - (v104 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            uint64_t v131 = *v129++;
            v5.i64[0] = v131;
            uint32x4_t v132 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
            int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
            int8x16_t v127 = vorrq_s8((int8x16_t)vshlq_u32(v132, (uint32x4_t)vaddq_s32(v125, v15)), v127);
            int8x16_t v128 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v126, v15)), v128);
            int32x4_t v126 = vaddq_s32(v126, v16);
            int32x4_t v125 = vaddq_s32(v125, v16);
            v130 += 8;
          }
          while (v130);
          int8x16_t v133 = vorrq_s8(v128, v127);
          int8x8_t v134 = vorr_s8(*(int8x8_t *)v133.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v133, v133, 8uLL));
          unsigned int v102 = v134.i32[0] | v134.i32[1];
          if (v104 == (v104 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_84;
          }
          goto LABEL_82;
        }
        v9 <<= v25;
        v10 -= v25;
        if (v10 >= 0)
        {
LABEL_63:
          unint64_t v27 = HIDWORD(v9);
          int v63 = v62;
          goto LABEL_64;
        }
        if ((unint64_t)v12 < v11)
        {
          unsigned int v64 = *v12++;
          unsigned int v65 = bswap32(v64);
LABEL_62:
          v9 |= (unint64_t)v65 << -(char)v10;
          v10 += 32;
          goto LABEL_63;
        }
        unint64_t v66 = (unsigned __int8 *)a1[4];
        if (v12 >= (unsigned int *)v66)
        {
          unsigned int v65 = 0;
          goto LABEL_62;
        }
        unint64_t v67 = v66 - (unsigned __int8 *)v12;
        if ((unint64_t)(v66 - (unsigned __int8 *)v12) < 8)
        {
          unsigned int v65 = 0;
          unsigned int v68 = 32;
          unint64_t v69 = v12;
          goto LABEL_59;
        }
        if (v67 >= 0x20)
        {
          unint64_t v70 = v67 & 0xFFFFFFFFFFFFFFE0;
          int8x16_t v71 = (int8x16_t *)(v12 + 4);
          int8x16_t v72 = 0uLL;
          int8x16_t v73 = 0uLL;
          unint64_t v74 = v67 & 0xFFFFFFFFFFFFFFE0;
          int32x4_t v75 = (int32x4_t)xmmword_262CDE560;
          int32x4_t v76 = (int32x4_t)xmmword_262CDE550;
          int32x4_t v77 = (int32x4_t)xmmword_262CDE540;
          int32x4_t v78 = (int32x4_t)xmmword_262CDE530;
          int8x16_t v79 = 0uLL;
          int8x16_t v5 = 0uLL;
          int8x16_t v80 = 0uLL;
          unsigned int v68 = 32 - 8 * (v67 & 0xFFFFFFE0);
          int8x16_t v81 = 0uLL;
          int8x16_t v82 = 0uLL;
          int8x16_t v83 = 0uLL;
          do
          {
            int8x16_t v84 = v71[-1];
            int8x16_t v85 = *v71;
            v71 += 2;
            int8x16_t v73 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v76, v15)), v73);
            int8x16_t v72 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v75, v15)), v72);
            int8x16_t v79 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v77, v15)), v79);
            int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v78, v15)), v5);
            int8x16_t v81 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v76, v17)), v81);
            int8x16_t v80 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v75, v17)), v80);
            int8x16_t v82 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v77, v17)), v82);
            int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v78, v17)), v83);
            int32x4_t v75 = vaddq_s32(v75, v18);
            int32x4_t v76 = vaddq_s32(v76, v18);
            int32x4_t v77 = vaddq_s32(v77, v18);
            int32x4_t v78 = vaddq_s32(v78, v18);
            v74 -= 32;
          }
          while (v74);
          int8x16_t v86 = vorrq_s8(vorrq_s8(vorrq_s8(v80, v72), vorrq_s8(v82, v79)), vorrq_s8(vorrq_s8(v81, v73), vorrq_s8(v83, v5)));
          int8x8_t v87 = vorr_s8(*(int8x8_t *)v86.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v86, v86, 8uLL));
          unsigned int v65 = v87.i32[0] | v87.i32[1];
          if (v67 == v70) {
            goto LABEL_61;
          }
          if ((v67 & 0x18) == 0)
          {
            unint64_t v69 = (unsigned int *)((char *)v12 + v70);
LABEL_59:
            unsigned int v99 = v68 - 8;
            do
            {
              int v100 = *(unsigned __int8 *)v69;
              unint64_t v69 = (unsigned int *)((char *)v69 + 1);
              v65 |= v100 << v99;
              v99 -= 8;
            }
            while (v69 != (unsigned int *)v66);
LABEL_61:
            uint64_t v12 = (unsigned int *)a1[4];
            goto LABEL_62;
          }
        }
        else
        {
          unsigned int v65 = 0;
          unint64_t v70 = 0;
          unsigned int v68 = 32;
        }
        int32x4_t v88 = vdupq_n_s32(v68);
        unsigned int v68 = 32 - 8 * (v67 & 0xFFFFFFF8);
        unint64_t v69 = (unsigned int *)((char *)v12 + (v67 & 0xFFFFFFFFFFFFFFF8));
        int32x4_t v89 = vaddq_s32(v88, (int32x4_t)xmmword_262CDE540);
        int32x4_t v90 = vaddq_s32(v88, (int32x4_t)xmmword_262CDE550);
        int8x16_t v91 = 0uLL;
        int8x16_t v92 = (int8x16_t)v65;
        uint64_t v93 = (uint64_t *)((char *)v12 + v70);
        unint64_t v94 = v70 - (v67 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint64_t v95 = *v93++;
          v5.i64[0] = v95;
          uint32x4_t v96 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
          int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
          int8x16_t v91 = vorrq_s8((int8x16_t)vshlq_u32(v96, (uint32x4_t)vaddq_s32(v89, v15)), v91);
          int8x16_t v92 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v90, v15)), v92);
          int32x4_t v90 = vaddq_s32(v90, v16);
          int32x4_t v89 = vaddq_s32(v89, v16);
          v94 += 8;
        }
        while (v94);
        int8x16_t v97 = vorrq_s8(v92, v91);
        int8x8_t v98 = vorr_s8(*(int8x8_t *)v97.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v97, v97, 8uLL));
        unsigned int v65 = v98.i32[0] | v98.i32[1];
        if (v67 == (v67 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_61;
        }
        goto LABEL_59;
      }
      int v28 = v25 + 1;
      v9 <<= v28;
      v10 -= v28;
      if (v10 < 0)
      {
        if ((unint64_t)v12 < v11)
        {
          unsigned int v22 = *v12++;
          unsigned int v23 = bswap32(v22);
        }
        else
        {
          unsigned int v29 = (unsigned __int8 *)a1[4];
          if (v12 >= (unsigned int *)v29)
          {
            unsigned int v23 = 0;
          }
          else
          {
            unint64_t v30 = v29 - (unsigned __int8 *)v12;
            if ((unint64_t)(v29 - (unsigned __int8 *)v12) < 8)
            {
              unsigned int v23 = 0;
              unsigned int v31 = 32;
              int32x4_t v32 = v12;
              goto LABEL_34;
            }
            if (v30 >= 0x20)
            {
              unint64_t v33 = v30 & 0xFFFFFFFFFFFFFFE0;
              unsigned int v31 = 32 - 8 * (v30 & 0xFFFFFFE0);
              int32x4_t v34 = (int32x4_t)xmmword_262CDE530;
              int32x4_t v35 = (int32x4_t)xmmword_262CDE540;
              int32x4_t v36 = (int32x4_t)xmmword_262CDE550;
              int8x16_t v37 = 0uLL;
              int8x16_t v5 = 0uLL;
              int32x4_t v38 = (int32x4_t)xmmword_262CDE560;
              int8x16_t v39 = (int8x16_t *)(v12 + 4);
              unint64_t v40 = v30 & 0xFFFFFFFFFFFFFFE0;
              int8x16_t v41 = 0uLL;
              int8x16_t v42 = 0uLL;
              int8x16_t v43 = 0uLL;
              int8x16_t v44 = 0uLL;
              int8x16_t v45 = 0uLL;
              int8x16_t v46 = 0uLL;
              do
              {
                int8x16_t v47 = v39[-1];
                int8x16_t v48 = *v39;
                v39 += 2;
                int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v36, v15)), v5);
                int8x16_t v37 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v38, v15)), v37);
                int8x16_t v41 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v35, v15)), v41);
                int8x16_t v42 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v34, v15)), v42);
                int8x16_t v44 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v36, v17)), v44);
                int8x16_t v43 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v38, v17)), v43);
                int8x16_t v45 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v35, v17)), v45);
                int8x16_t v46 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v34, v17)), v46);
                int32x4_t v38 = vaddq_s32(v38, v18);
                int32x4_t v36 = vaddq_s32(v36, v18);
                int32x4_t v35 = vaddq_s32(v35, v18);
                int32x4_t v34 = vaddq_s32(v34, v18);
                v40 -= 32;
              }
              while (v40);
              int8x16_t v49 = vorrq_s8(vorrq_s8(vorrq_s8(v43, v37), vorrq_s8(v45, v41)), vorrq_s8(vorrq_s8(v44, v5), vorrq_s8(v46, v42)));
              *(int8x8_t *)v49.i8 = vorr_s8(*(int8x8_t *)v49.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL));
              unsigned int v23 = v49.i32[0] | v49.i32[1];
              if (v30 != v33)
              {
                if ((v30 & 0x18) == 0)
                {
                  int32x4_t v32 = (unsigned int *)((char *)v12 + v33);
                  goto LABEL_34;
                }
                goto LABEL_29;
              }
            }
            else
            {
              unsigned int v23 = 0;
              unint64_t v33 = 0;
              unsigned int v31 = 32;
LABEL_29:
              int32x4_t v50 = vdupq_n_s32(v31);
              unsigned int v31 = 32 - 8 * (v30 & 0xFFFFFFF8);
              int32x4_t v32 = (unsigned int *)((char *)v12 + (v30 & 0xFFFFFFFFFFFFFFF8));
              int32x4_t v51 = vaddq_s32(v50, (int32x4_t)xmmword_262CDE540);
              int32x4_t v52 = vaddq_s32(v50, (int32x4_t)xmmword_262CDE550);
              int8x16_t v53 = 0uLL;
              int8x16_t v54 = (int8x16_t)v23;
              unint64_t v55 = (uint64_t *)((char *)v12 + v33);
              unint64_t v56 = v33 - (v30 & 0xFFFFFFFFFFFFFFF8);
              do
              {
                uint64_t v57 = *v55++;
                v5.i64[0] = v57;
                uint32x4_t v58 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
                int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
                int8x16_t v53 = vorrq_s8((int8x16_t)vshlq_u32(v58, (uint32x4_t)vaddq_s32(v51, v15)), v53);
                int8x16_t v54 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v52, v15)), v54);
                int32x4_t v52 = vaddq_s32(v52, v16);
                int32x4_t v51 = vaddq_s32(v51, v16);
                v56 += 8;
              }
              while (v56);
              int8x16_t v59 = vorrq_s8(v54, v53);
              *(int8x8_t *)v59.i8 = vorr_s8(*(int8x8_t *)v59.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL));
              unsigned int v23 = v59.i32[0] | v59.i32[1];
              if (v30 != (v30 & 0xFFFFFFFFFFFFFFF8))
              {
LABEL_34:
                unsigned int v60 = v31 - 8;
                do
                {
                  int v61 = *(unsigned __int8 *)v32;
                  int32x4_t v32 = (unsigned int *)((char *)v32 + 1);
                  v23 |= v61 << v60;
                  v60 -= 8;
                }
                while (v32 != (unsigned int *)v29);
              }
            }
            uint64_t v12 = (unsigned int *)a1[4];
          }
        }
        v9 |= (unint64_t)v23 << -(char)v10;
        v10 += 32;
      }
      v21->i8[0] = v26;
      uint32x4_t v21 = (int64x2_t *)((char *)v21 + 1);
      --v19;
    }
    while (v19);
    if (--v6)
    {
      a2 = (int64x2_t *)((char *)v20 + a3);
      continue;
    }
    return v14 == 0xFFFF;
  }
}

BOOL decodeIntAlpha<8,unsigned char,true>(uint64_t *a1, int64x2_t *a2, unsigned int a3, int a4, int a5)
{
  if (a3 == a4) {
    int v6 = 1;
  }
  else {
    int v6 = a5;
  }
  if (a3 == a4) {
    int v7 = a5;
  }
  else {
    int v7 = 1;
  }
  unsigned int v8 = v7 * a4;
  unint64_t v9 = *a1;
  int v10 = *((_DWORD *)a1 + 2);
  uint64_t v12 = (unsigned int *)a1[2];
  unint64_t v11 = a1[3];
  LOBYTE(v13) = -1;
  int v14 = 255;
  v15.i64[0] = 0x700000007;
  v15.i64[1] = 0x700000007;
  v16.i64[0] = 0x3F0000003FLL;
  v16.i64[1] = 0x3F0000003FLL;
  v17.i64[0] = 0x8700000087;
  v17.i64[1] = 0x8700000087;
  v18.i64[0] = 0xFFFFFF00FFFFFF00;
  v18.i64[1] = 0xFFFFFF00FFFFFF00;
  while (2)
  {
    unsigned int v19 = v8;
    int16x8_t v20 = a2;
LABEL_9:
    uint32x4_t v21 = a2;
    do
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        int v24 = 9;
        uint64_t v13 = ((SHIDWORD(v9) >> 23) + v13);
        v14 &= v13;
        unsigned int v25 = convertToV408[v13];
        unsigned int v26 = HIDWORD(v9) << 9;
        if (((HIDWORD(v9) << 9) & 0x80000000) == 0)
        {
LABEL_37:
          if (v26 >> 27) {
            int v60 = 5;
          }
          else {
            int v60 = 16;
          }
          v9 <<= v60 + v24;
          v10 -= v60 + v24;
          if (v10 < 0)
          {
            if ((unint64_t)v12 < v11)
            {
              unsigned int v61 = *v12++;
              unsigned int v62 = bswap32(v61);
              goto LABEL_61;
            }
            int v63 = (unsigned __int8 *)a1[4];
            if (v12 >= (unsigned int *)v63)
            {
              unsigned int v62 = 0;
            }
            else
            {
              unint64_t v64 = v63 - (unsigned __int8 *)v12;
              if ((unint64_t)(v63 - (unsigned __int8 *)v12) < 8)
              {
                unsigned int v62 = 0;
                unsigned int v65 = 32;
                unint64_t v66 = v12;
                goto LABEL_58;
              }
              if (v64 >= 0x20)
              {
                unint64_t v67 = v64 & 0xFFFFFFFFFFFFFFE0;
                unsigned int v68 = (int8x16_t *)(v12 + 4);
                int8x16_t v69 = 0uLL;
                int8x16_t v70 = 0uLL;
                unint64_t v71 = v64 & 0xFFFFFFFFFFFFFFE0;
                int32x4_t v72 = (int32x4_t)xmmword_262CDE560;
                int32x4_t v73 = (int32x4_t)xmmword_262CDE550;
                int32x4_t v74 = (int32x4_t)xmmword_262CDE540;
                int32x4_t v75 = (int32x4_t)xmmword_262CDE530;
                int8x16_t v76 = 0uLL;
                int8x16_t v5 = 0uLL;
                int8x16_t v77 = 0uLL;
                unsigned int v65 = 32 - 8 * (v64 & 0xFFFFFFE0);
                int8x16_t v78 = 0uLL;
                int8x16_t v79 = 0uLL;
                int8x16_t v80 = 0uLL;
                do
                {
                  int8x16_t v81 = v68[-1];
                  int8x16_t v82 = *v68;
                  v68 += 2;
                  int8x16_t v70 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v81, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v73, v15)), v70);
                  int8x16_t v69 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v81, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v72, v15)), v69);
                  int8x16_t v76 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v81, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v74, v15)), v76);
                  int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v81, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v75, v15)), v5);
                  int8x16_t v78 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v82, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v73, v17)), v78);
                  int8x16_t v77 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v82, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v72, v17)), v77);
                  int8x16_t v79 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v82, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v74, v17)), v79);
                  int8x16_t v80 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v82, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v75, v17)), v80);
                  int32x4_t v72 = vaddq_s32(v72, v18);
                  int32x4_t v73 = vaddq_s32(v73, v18);
                  int32x4_t v74 = vaddq_s32(v74, v18);
                  int32x4_t v75 = vaddq_s32(v75, v18);
                  v71 -= 32;
                }
                while (v71);
                int8x16_t v83 = vorrq_s8(vorrq_s8(vorrq_s8(v77, v69), vorrq_s8(v79, v76)), vorrq_s8(vorrq_s8(v78, v70), vorrq_s8(v80, v5)));
                *(int8x8_t *)v83.i8 = vorr_s8(*(int8x8_t *)v83.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v83, v83, 8uLL));
                unsigned int v62 = v83.i32[0] | v83.i32[1];
                if (v64 != v67)
                {
                  if ((v64 & 0x18) == 0)
                  {
                    unint64_t v66 = (unsigned int *)((char *)v12 + v67);
                    goto LABEL_58;
                  }
                  goto LABEL_53;
                }
              }
              else
              {
                unsigned int v62 = 0;
                unint64_t v67 = 0;
                unsigned int v65 = 32;
LABEL_53:
                int32x4_t v84 = vdupq_n_s32(v65);
                unsigned int v65 = 32 - 8 * (v64 & 0xFFFFFFF8);
                unint64_t v66 = (unsigned int *)((char *)v12 + (v64 & 0xFFFFFFFFFFFFFFF8));
                int32x4_t v85 = vaddq_s32(v84, (int32x4_t)xmmword_262CDE540);
                int32x4_t v86 = vaddq_s32(v84, (int32x4_t)xmmword_262CDE550);
                int8x16_t v87 = 0uLL;
                int8x16_t v88 = (int8x16_t)v62;
                int32x4_t v89 = (uint64_t *)((char *)v12 + v67);
                unint64_t v90 = v67 - (v64 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  uint64_t v91 = *v89++;
                  v5.i64[0] = v91;
                  uint32x4_t v92 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
                  int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
                  int8x16_t v87 = vorrq_s8((int8x16_t)vshlq_u32(v92, (uint32x4_t)vaddq_s32(v85, v15)), v87);
                  int8x16_t v88 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v86, v15)), v88);
                  int32x4_t v86 = vaddq_s32(v86, v16);
                  int32x4_t v85 = vaddq_s32(v85, v16);
                  v90 += 8;
                }
                while (v90);
                int8x16_t v93 = vorrq_s8(v88, v87);
                int8x8_t v94 = vorr_s8(*(int8x8_t *)v93.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v93, v93, 8uLL));
                unsigned int v62 = v94.i32[0] | v94.i32[1];
                if (v64 != (v64 & 0xFFFFFFFFFFFFFFF8))
                {
LABEL_58:
                  unsigned int v95 = v65 - 8;
                  do
                  {
                    int v96 = *(unsigned __int8 *)v66;
                    unint64_t v66 = (unsigned int *)((char *)v66 + 1);
                    v62 |= v96 << v95;
                    v95 -= 8;
                  }
                  while (v66 != (unsigned int *)v63);
                }
              }
              uint64_t v12 = (unsigned int *)a1[4];
            }
LABEL_61:
            v9 |= (unint64_t)v62 << -(char)v10;
            v10 += 32;
          }
          unsigned int v97 = (v26 >> -(char)v60) + 1;
          uint64_t v98 = vqtbl1q_s8(vzip1q_s8((int8x16_t)v25, (int8x16_t)v25), (int8x16_t)xmmword_262D473B0).u64[0];
          if (v97 < v19) {
            goto LABEL_82;
          }
          int64x2_t v99 = vdupq_lane_s64(v98, 0);
          while (2)
          {
            if (v19 < 8)
            {
              int v100 = v21;
              goto LABEL_72;
            }
            unsigned int v101 = v19 >> 3;
            uint64_t v102 = (v19 >> 3) - 1;
            if (v102 < 3)
            {
              int v100 = v21;
              goto LABEL_71;
            }
            uint64_t v103 = v102 + 1;
            uint64_t v104 = (v102 + 1) & 0x1FFFFFFFCLL;
            int v100 = (int64x2_t *)((char *)v21 + 8 * v104);
            v101 -= v104;
            unsigned int v105 = v21 + 1;
            uint64_t v106 = v104;
            do
            {
              v105[-1] = v99;
              *unsigned int v105 = v99;
              v105 += 2;
              v106 -= 4;
            }
            while (v106);
            if (v103 != v104)
            {
              do
              {
LABEL_71:
                v100->i64[0] = v98;
                int v100 = (int64x2_t *)((char *)v100 + 8);
                --v101;
              }
              while (v101);
            }
LABEL_72:
            if ((v19 & 4) != 0)
            {
              v100->i32[0] = v98;
              int v100 = (int64x2_t *)((char *)v100 + 4);
              if ((v19 & 2) != 0) {
                goto LABEL_78;
              }
LABEL_74:
              if ((v19 & 1) == 0) {
                goto LABEL_75;
              }
LABEL_79:
              v100->i8[0] = v25;
              if (!--v6) {
                return v14 == 255;
              }
            }
            else
            {
              if ((v19 & 2) == 0) {
                goto LABEL_74;
              }
LABEL_78:
              v100->i8[0] = v25;
              v100->i8[1] = v25;
              int v100 = (int64x2_t *)((char *)v100 + 2);
              if (v19) {
                goto LABEL_79;
              }
LABEL_75:
              if (!--v6) {
                return v14 == 255;
              }
            }
            v97 -= v19;
            int16x8_t v20 = (int64x2_t *)((char *)v20 + a3);
            unsigned int v19 = v8;
            uint32x4_t v21 = v20;
            if (v97 < v8)
            {
              uint32x4_t v21 = v20;
              unsigned int v19 = v8;
LABEL_82:
              if (v97 < 8)
              {
                a2 = v21;
                goto LABEL_90;
              }
              unsigned int v107 = v97 >> 3;
              uint64_t v108 = (v97 >> 3) - 1;
              if (v108 < 3)
              {
                a2 = v21;
                goto LABEL_89;
              }
              uint64_t v109 = v108 + 1;
              a2 = (int64x2_t *)((char *)v21 + 8 * (v109 & 0x1FFFFFFFCLL));
              v107 -= v109 & 0xFFFFFFFC;
              int64x2_t v110 = vdupq_lane_s64(v98, 0);
              int8x16_t v111 = v21 + 1;
              uint64_t v112 = v109 & 0x1FFFFFFFCLL;
              do
              {
                v111[-1] = v110;
                *int8x16_t v111 = v110;
                v111 += 2;
                v112 -= 4;
              }
              while (v112);
              if (v109 != (v109 & 0x1FFFFFFFCLL))
              {
                do
                {
LABEL_89:
                  a2->i64[0] = v98;
                  a2 = (int64x2_t *)((char *)a2 + 8);
                  --v107;
                }
                while (v107);
              }
LABEL_90:
              if ((v97 & 4) != 0)
              {
                a2->i32[0] = v98;
                a2 = (int64x2_t *)((char *)a2 + 4);
                if ((v97 & 2) != 0) {
                  goto LABEL_95;
                }
LABEL_92:
                v19 -= v97;
                if (v97)
                {
LABEL_96:
                  a2->i8[0] = v25;
                  a2 = (int64x2_t *)((char *)a2 + 1);
                }
              }
              else
              {
                if ((v97 & 2) == 0) {
                  goto LABEL_92;
                }
LABEL_95:
                a2->i8[0] = v25;
                a2->i8[1] = v25;
                a2 = (int64x2_t *)((char *)a2 + 2);
                v19 -= v97;
                if (v97) {
                  goto LABEL_96;
                }
              }
              goto LABEL_9;
            }
            continue;
          }
        }
      }
      else
      {
        int v24 = 5;
        uint64_t v13 = (smallAlphaDiffVLDTable_8b[v9 >> 59] + v13);
        v14 &= v13;
        unsigned int v25 = convertToV408[v13];
        unsigned int v26 = 32 * HIDWORD(v9);
        if (((32 * HIDWORD(v9)) & 0x80000000) == 0) {
          goto LABEL_37;
        }
      }
      v9 <<= v24 + 1;
      v10 -= v24 + 1;
      if (v10 < 0)
      {
        if ((unint64_t)v12 < v11)
        {
          unsigned int v22 = *v12++;
          unsigned int v23 = bswap32(v22);
        }
        else
        {
          unint64_t v27 = (unsigned __int8 *)a1[4];
          if (v12 < (unsigned int *)v27)
          {
            unint64_t v28 = v27 - (unsigned __int8 *)v12;
            if ((unint64_t)(v27 - (unsigned __int8 *)v12) < 8)
            {
              unsigned int v23 = 0;
              unsigned int v29 = 32;
              unint64_t v30 = v12;
              goto LABEL_34;
            }
            if (v28 >= 0x20)
            {
              unint64_t v31 = v28 & 0xFFFFFFFFFFFFFFE0;
              unsigned int v29 = 32 - 8 * (v28 & 0xFFFFFFE0);
              int32x4_t v32 = (int32x4_t)xmmword_262CDE530;
              int32x4_t v33 = (int32x4_t)xmmword_262CDE540;
              int32x4_t v34 = (int32x4_t)xmmword_262CDE550;
              int8x16_t v35 = 0uLL;
              int8x16_t v5 = 0uLL;
              int32x4_t v36 = (int32x4_t)xmmword_262CDE560;
              int8x16_t v37 = (int8x16_t *)(v12 + 4);
              unint64_t v38 = v28 & 0xFFFFFFFFFFFFFFE0;
              int8x16_t v39 = 0uLL;
              int8x16_t v40 = 0uLL;
              int8x16_t v41 = 0uLL;
              int8x16_t v42 = 0uLL;
              int8x16_t v43 = 0uLL;
              int8x16_t v44 = 0uLL;
              do
              {
                int8x16_t v45 = v37[-1];
                int8x16_t v46 = *v37;
                v37 += 2;
                int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v45, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v34, v15)), v5);
                int8x16_t v35 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v45, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v36, v15)), v35);
                int8x16_t v39 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v45, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v33, v15)), v39);
                int8x16_t v40 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v45, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v32, v15)), v40);
                int8x16_t v42 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v46, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v34, v17)), v42);
                int8x16_t v41 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v46, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v36, v17)), v41);
                int8x16_t v43 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v46, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v33, v17)), v43);
                int8x16_t v44 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v46, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v32, v17)), v44);
                int32x4_t v36 = vaddq_s32(v36, v18);
                int32x4_t v34 = vaddq_s32(v34, v18);
                int32x4_t v33 = vaddq_s32(v33, v18);
                int32x4_t v32 = vaddq_s32(v32, v18);
                v38 -= 32;
              }
              while (v38);
              int8x16_t v47 = vorrq_s8(vorrq_s8(vorrq_s8(v41, v35), vorrq_s8(v43, v39)), vorrq_s8(vorrq_s8(v42, v5), vorrq_s8(v44, v40)));
              *(int8x8_t *)v47.i8 = vorr_s8(*(int8x8_t *)v47.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v47, v47, 8uLL));
              unsigned int v23 = v47.i32[0] | v47.i32[1];
              if (v28 == v31) {
                goto LABEL_36;
              }
              if ((v28 & 0x18) == 0)
              {
                unint64_t v30 = (unsigned int *)((char *)v12 + v31);
LABEL_34:
                unsigned int v58 = v29 - 8;
                do
                {
                  int v59 = *(unsigned __int8 *)v30;
                  unint64_t v30 = (unsigned int *)((char *)v30 + 1);
                  v23 |= v59 << v58;
                  v58 -= 8;
                }
                while (v30 != (unsigned int *)v27);
LABEL_36:
                uint64_t v12 = (unsigned int *)a1[4];
                goto LABEL_11;
              }
            }
            else
            {
              unsigned int v23 = 0;
              unint64_t v31 = 0;
              unsigned int v29 = 32;
            }
            int32x4_t v48 = vdupq_n_s32(v29);
            unsigned int v29 = 32 - 8 * (v28 & 0xFFFFFFF8);
            unint64_t v30 = (unsigned int *)((char *)v12 + (v28 & 0xFFFFFFFFFFFFFFF8));
            int32x4_t v49 = vaddq_s32(v48, (int32x4_t)xmmword_262CDE540);
            int32x4_t v50 = vaddq_s32(v48, (int32x4_t)xmmword_262CDE550);
            int8x16_t v51 = 0uLL;
            int8x16_t v52 = (int8x16_t)v23;
            int8x16_t v53 = (uint64_t *)((char *)v12 + v31);
            unint64_t v54 = v31 - (v28 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint64_t v55 = *v53++;
              v5.i64[0] = v55;
              uint32x4_t v56 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
              int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
              int8x16_t v51 = vorrq_s8((int8x16_t)vshlq_u32(v56, (uint32x4_t)vaddq_s32(v49, v15)), v51);
              int8x16_t v52 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v50, v15)), v52);
              int32x4_t v50 = vaddq_s32(v50, v16);
              int32x4_t v49 = vaddq_s32(v49, v16);
              v54 += 8;
            }
            while (v54);
            int8x16_t v57 = vorrq_s8(v52, v51);
            *(int8x8_t *)v57.i8 = vorr_s8(*(int8x8_t *)v57.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v57, v57, 8uLL));
            unsigned int v23 = v57.i32[0] | v57.i32[1];
            if (v28 == (v28 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_36;
            }
            goto LABEL_34;
          }
          unsigned int v23 = 0;
        }
LABEL_11:
        v9 |= (unint64_t)v23 << -(char)v10;
        v10 += 32;
      }
      v21->i8[0] = v25;
      uint32x4_t v21 = (int64x2_t *)((char *)v21 + 1);
      --v19;
    }
    while (v19);
    if (--v6)
    {
      a2 = (int64x2_t *)((char *)v20 + a3);
      continue;
    }
    return v14 == 255;
  }
}

BOOL decodeIntAlpha<16,unsigned char,true>(uint64_t *a1, int64x2_t *a2, unsigned int a3, int a4, int a5)
{
  if (a3 == a4) {
    int v6 = 1;
  }
  else {
    int v6 = a5;
  }
  if (a3 == a4) {
    int v7 = a5;
  }
  else {
    int v7 = 1;
  }
  unsigned int v8 = v7 * a4;
  unint64_t v9 = *a1;
  int v10 = *((_DWORD *)a1 + 2);
  uint64_t v12 = (unsigned int *)a1[2];
  unint64_t v11 = a1[3];
  LOWORD(v13) = -1;
  int v14 = 0xFFFF;
  v15.i64[0] = 0x700000007;
  v15.i64[1] = 0x700000007;
  v16.i64[0] = 0x3F0000003FLL;
  v16.i64[1] = 0x3F0000003FLL;
  v17.i64[0] = 0x8700000087;
  v17.i64[1] = 0x8700000087;
  v18.i64[0] = 0xFFFFFF00FFFFFF00;
  v18.i64[1] = 0xFFFFFF00FFFFFF00;
  while (2)
  {
    unsigned int v19 = v8;
    int16x8_t v20 = a2;
LABEL_9:
    uint32x4_t v21 = a2;
    do
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        int v24 = SHIDWORD(v9) >> 15;
        int v25 = 17;
      }
      else
      {
        LOWORD(v24) = smallAlphaDiffVLDTable_16b[HIBYTE(v9)];
        int v25 = 8;
      }
      int v13 = (unsigned __int16)(v24 + v13);
      v14 &= v13;
      unsigned int v26 = ((56065 * v13 + 0x800000) >> 24) + 16;
      LODWORD(v27) = HIDWORD(v9) << v25;
      if (((HIDWORD(v9) << v25) & 0x80000000) == 0)
      {
        if (v27 >> 27) {
          int v62 = 5;
        }
        else {
          int v62 = 16;
        }
        int v63 = v62 + v25;
        if ((v62 + v25) < 0x21)
        {
LABEL_64:
          v9 <<= v63;
          v10 -= v63;
          if (v10 >= 0)
          {
LABEL_86:
            unsigned int v137 = (v27 >> -(char)v62) + 1;
            uint64_t v138 = vqtbl1q_s8(vzip1q_s8((int8x16_t)v26, (int8x16_t)v26), (int8x16_t)xmmword_262D473B0).u64[0];
            if (v137 < v19) {
              goto LABEL_106;
            }
            int64x2_t v139 = vdupq_lane_s64(v138, 0);
            while (1)
            {
              if (v19 < 8)
              {
                int v140 = v21;
                goto LABEL_96;
              }
              unsigned int v141 = v19 >> 3;
              uint64_t v142 = (v19 >> 3) - 1;
              if (v142 < 3) {
                break;
              }
              uint64_t v143 = v142 + 1;
              uint64_t v144 = (v142 + 1) & 0x1FFFFFFFCLL;
              int v140 = (int64x2_t *)((char *)v21 + 8 * v144);
              v141 -= v144;
              int v145 = v21 + 1;
              uint64_t v146 = v144;
              do
              {
                v145[-1] = v139;
                *int v145 = v139;
                v145 += 2;
                v146 -= 4;
              }
              while (v146);
              if (v143 != v144) {
                goto LABEL_95;
              }
LABEL_96:
              if ((v19 & 4) != 0)
              {
                v140->i32[0] = v138;
                int v140 = (int64x2_t *)((char *)v140 + 4);
                if ((v19 & 2) == 0)
                {
LABEL_98:
                  if (v19) {
                    goto LABEL_103;
                  }
                  goto LABEL_99;
                }
              }
              else if ((v19 & 2) == 0)
              {
                goto LABEL_98;
              }
              v140->i8[0] = v26;
              v140->i8[1] = v26;
              int v140 = (int64x2_t *)((char *)v140 + 2);
              if (v19)
              {
LABEL_103:
                v140->i8[0] = v26;
                if (!--v6) {
                  return v14 == 0xFFFF;
                }
                goto LABEL_104;
              }
LABEL_99:
              if (!--v6) {
                return v14 == 0xFFFF;
              }
LABEL_104:
              v137 -= v19;
              int16x8_t v20 = (int64x2_t *)((char *)v20 + a3);
              unsigned int v19 = v8;
              uint32x4_t v21 = v20;
              if (v137 < v8)
              {
                uint32x4_t v21 = v20;
                unsigned int v19 = v8;
LABEL_106:
                if (v137 < 8)
                {
                  a2 = v21;
                  goto LABEL_114;
                }
                unsigned int v147 = v137 >> 3;
                uint64_t v148 = (v137 >> 3) - 1;
                if (v148 < 3)
                {
                  a2 = v21;
                  goto LABEL_113;
                }
                uint64_t v149 = v148 + 1;
                a2 = (int64x2_t *)((char *)v21 + 8 * (v149 & 0x1FFFFFFFCLL));
                v147 -= v149 & 0xFFFFFFFC;
                int64x2_t v150 = vdupq_lane_s64(v138, 0);
                unsigned int v151 = v21 + 1;
                uint64_t v152 = v149 & 0x1FFFFFFFCLL;
                do
                {
                  v151[-1] = v150;
                  *unsigned int v151 = v150;
                  v151 += 2;
                  v152 -= 4;
                }
                while (v152);
                if (v149 != (v149 & 0x1FFFFFFFCLL))
                {
                  do
                  {
LABEL_113:
                    a2->i64[0] = v138;
                    a2 = (int64x2_t *)((char *)a2 + 8);
                    --v147;
                  }
                  while (v147);
                }
LABEL_114:
                if ((v137 & 4) != 0)
                {
                  a2->i32[0] = v138;
                  a2 = (int64x2_t *)((char *)a2 + 4);
                  if ((v137 & 2) != 0) {
                    goto LABEL_119;
                  }
LABEL_116:
                  v19 -= v137;
                  if (v137)
                  {
LABEL_120:
                    a2->i8[0] = v26;
                    a2 = (int64x2_t *)((char *)a2 + 1);
                  }
                }
                else
                {
                  if ((v137 & 2) == 0) {
                    goto LABEL_116;
                  }
LABEL_119:
                  a2->i8[0] = v26;
                  a2->i8[1] = v26;
                  a2 = (int64x2_t *)((char *)a2 + 2);
                  v19 -= v137;
                  if (v137) {
                    goto LABEL_120;
                  }
                }
                goto LABEL_9;
              }
            }
            int v140 = v21;
            do
            {
LABEL_95:
              v140->i64[0] = v138;
              int v140 = (int64x2_t *)((char *)v140 + 8);
              --v141;
            }
            while (v141);
            goto LABEL_96;
          }
          if ((unint64_t)v12 < v11)
          {
            unsigned int v101 = *v12++;
            unsigned int v102 = bswap32(v101);
LABEL_85:
            v9 |= (unint64_t)v102 << -(char)v10;
            v10 += 32;
            goto LABEL_86;
          }
          unint64_t v103 = a1[4];
          if ((unint64_t)v12 >= v103)
          {
            unsigned int v102 = 0;
            goto LABEL_85;
          }
          unint64_t v104 = v103 - (void)v12;
          if (v103 - (unint64_t)v12 < 8)
          {
            unsigned int v102 = 0;
            unsigned int v105 = 32;
            uint64_t v106 = v12;
            goto LABEL_82;
          }
          if (v104 >= 0x20)
          {
            unint64_t v107 = v104 & 0xFFFFFFFFFFFFFFE0;
            unsigned int v105 = 32 - 8 * (v104 & 0xFFFFFFE0);
            int32x4_t v108 = (int32x4_t)xmmword_262CDE530;
            int32x4_t v109 = (int32x4_t)xmmword_262CDE540;
            int32x4_t v110 = (int32x4_t)xmmword_262CDE550;
            int8x16_t v111 = 0uLL;
            int8x16_t v5 = 0uLL;
            int32x4_t v112 = (int32x4_t)xmmword_262CDE560;
            uint64_t v113 = (int8x16_t *)(v12 + 4);
            unint64_t v114 = v104 & 0xFFFFFFFFFFFFFFE0;
            int8x16_t v115 = 0uLL;
            int8x16_t v116 = 0uLL;
            int8x16_t v117 = 0uLL;
            int8x16_t v118 = 0uLL;
            int8x16_t v119 = 0uLL;
            int8x16_t v120 = 0uLL;
            do
            {
              int8x16_t v121 = v113[-1];
              int8x16_t v122 = *v113;
              v113 += 2;
              int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v121, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v110, v15)), v5);
              int8x16_t v111 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v121, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v112, v15)), v111);
              int8x16_t v115 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v121, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v109, v15)), v115);
              int8x16_t v116 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v121, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v108, v15)), v116);
              int8x16_t v118 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v122, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v110, v17)), v118);
              int8x16_t v117 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v122, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v112, v17)), v117);
              int8x16_t v119 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v122, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v109, v17)), v119);
              int8x16_t v120 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v122, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v108, v17)), v120);
              int32x4_t v112 = vaddq_s32(v112, v18);
              int32x4_t v110 = vaddq_s32(v110, v18);
              int32x4_t v109 = vaddq_s32(v109, v18);
              int32x4_t v108 = vaddq_s32(v108, v18);
              v114 -= 32;
            }
            while (v114);
            int8x16_t v123 = vorrq_s8(vorrq_s8(vorrq_s8(v117, v111), vorrq_s8(v119, v115)), vorrq_s8(vorrq_s8(v118, v5), vorrq_s8(v120, v116)));
            *(int8x8_t *)v123.i8 = vorr_s8(*(int8x8_t *)v123.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v123, v123, 8uLL));
            unsigned int v102 = v123.i32[0] | v123.i32[1];
            if (v104 == v107) {
              goto LABEL_84;
            }
            if ((v104 & 0x18) == 0)
            {
              uint64_t v106 = (unsigned int *)((char *)v12 + v107);
LABEL_82:
              unsigned int v135 = v105 - 8;
              do
              {
                int v136 = *(unsigned __int8 *)v106;
                uint64_t v106 = (unsigned int *)((char *)v106 + 1);
                v102 |= v136 << v135;
                v135 -= 8;
              }
              while (v106 != (unsigned int *)a1[4]);
LABEL_84:
              uint64_t v12 = (unsigned int *)a1[4];
              goto LABEL_85;
            }
          }
          else
          {
            unsigned int v102 = 0;
            unint64_t v107 = 0;
            unsigned int v105 = 32;
          }
          int32x4_t v124 = vdupq_n_s32(v105);
          unsigned int v105 = 32 - 8 * (v104 & 0xFFFFFFF8);
          uint64_t v106 = (unsigned int *)((char *)v12 + (v104 & 0xFFFFFFFFFFFFFFF8));
          int32x4_t v125 = vaddq_s32(v124, (int32x4_t)xmmword_262CDE540);
          int32x4_t v126 = vaddq_s32(v124, (int32x4_t)xmmword_262CDE550);
          int8x16_t v127 = 0uLL;
          int8x16_t v128 = (int8x16_t)v102;
          int32x4_t v129 = (uint64_t *)((char *)v12 + v107);
          unint64_t v130 = v107 - (v104 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            uint64_t v131 = *v129++;
            v5.i64[0] = v131;
            uint32x4_t v132 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
            int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
            int8x16_t v127 = vorrq_s8((int8x16_t)vshlq_u32(v132, (uint32x4_t)vaddq_s32(v125, v15)), v127);
            int8x16_t v128 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v126, v15)), v128);
            int32x4_t v126 = vaddq_s32(v126, v16);
            int32x4_t v125 = vaddq_s32(v125, v16);
            v130 += 8;
          }
          while (v130);
          int8x16_t v133 = vorrq_s8(v128, v127);
          int8x8_t v134 = vorr_s8(*(int8x8_t *)v133.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v133, v133, 8uLL));
          unsigned int v102 = v134.i32[0] | v134.i32[1];
          if (v104 == (v104 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_84;
          }
          goto LABEL_82;
        }
        v9 <<= v25;
        v10 -= v25;
        if (v10 >= 0)
        {
LABEL_63:
          unint64_t v27 = HIDWORD(v9);
          int v63 = v62;
          goto LABEL_64;
        }
        if ((unint64_t)v12 < v11)
        {
          unsigned int v64 = *v12++;
          unsigned int v65 = bswap32(v64);
LABEL_62:
          v9 |= (unint64_t)v65 << -(char)v10;
          v10 += 32;
          goto LABEL_63;
        }
        unint64_t v66 = (unsigned __int8 *)a1[4];
        if (v12 >= (unsigned int *)v66)
        {
          unsigned int v65 = 0;
          goto LABEL_62;
        }
        unint64_t v67 = v66 - (unsigned __int8 *)v12;
        if ((unint64_t)(v66 - (unsigned __int8 *)v12) < 8)
        {
          unsigned int v65 = 0;
          unsigned int v68 = 32;
          int8x16_t v69 = v12;
          goto LABEL_59;
        }
        if (v67 >= 0x20)
        {
          unint64_t v70 = v67 & 0xFFFFFFFFFFFFFFE0;
          unint64_t v71 = (int8x16_t *)(v12 + 4);
          int8x16_t v72 = 0uLL;
          int8x16_t v73 = 0uLL;
          unint64_t v74 = v67 & 0xFFFFFFFFFFFFFFE0;
          int32x4_t v75 = (int32x4_t)xmmword_262CDE560;
          int32x4_t v76 = (int32x4_t)xmmword_262CDE550;
          int32x4_t v77 = (int32x4_t)xmmword_262CDE540;
          int32x4_t v78 = (int32x4_t)xmmword_262CDE530;
          int8x16_t v79 = 0uLL;
          int8x16_t v5 = 0uLL;
          int8x16_t v80 = 0uLL;
          unsigned int v68 = 32 - 8 * (v67 & 0xFFFFFFE0);
          int8x16_t v81 = 0uLL;
          int8x16_t v82 = 0uLL;
          int8x16_t v83 = 0uLL;
          do
          {
            int8x16_t v84 = v71[-1];
            int8x16_t v85 = *v71;
            v71 += 2;
            int8x16_t v73 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v76, v15)), v73);
            int8x16_t v72 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v75, v15)), v72);
            int8x16_t v79 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v77, v15)), v79);
            int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v78, v15)), v5);
            int8x16_t v81 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v76, v17)), v81);
            int8x16_t v80 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v75, v17)), v80);
            int8x16_t v82 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v77, v17)), v82);
            int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v78, v17)), v83);
            int32x4_t v75 = vaddq_s32(v75, v18);
            int32x4_t v76 = vaddq_s32(v76, v18);
            int32x4_t v77 = vaddq_s32(v77, v18);
            int32x4_t v78 = vaddq_s32(v78, v18);
            v74 -= 32;
          }
          while (v74);
          int8x16_t v86 = vorrq_s8(vorrq_s8(vorrq_s8(v80, v72), vorrq_s8(v82, v79)), vorrq_s8(vorrq_s8(v81, v73), vorrq_s8(v83, v5)));
          int8x8_t v87 = vorr_s8(*(int8x8_t *)v86.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v86, v86, 8uLL));
          unsigned int v65 = v87.i32[0] | v87.i32[1];
          if (v67 == v70) {
            goto LABEL_61;
          }
          if ((v67 & 0x18) == 0)
          {
            int8x16_t v69 = (unsigned int *)((char *)v12 + v70);
LABEL_59:
            unsigned int v99 = v68 - 8;
            do
            {
              int v100 = *(unsigned __int8 *)v69;
              int8x16_t v69 = (unsigned int *)((char *)v69 + 1);
              v65 |= v100 << v99;
              v99 -= 8;
            }
            while (v69 != (unsigned int *)v66);
LABEL_61:
            uint64_t v12 = (unsigned int *)a1[4];
            goto LABEL_62;
          }
        }
        else
        {
          unsigned int v65 = 0;
          unint64_t v70 = 0;
          unsigned int v68 = 32;
        }
        int32x4_t v88 = vdupq_n_s32(v68);
        unsigned int v68 = 32 - 8 * (v67 & 0xFFFFFFF8);
        int8x16_t v69 = (unsigned int *)((char *)v12 + (v67 & 0xFFFFFFFFFFFFFFF8));
        int32x4_t v89 = vaddq_s32(v88, (int32x4_t)xmmword_262CDE540);
        int32x4_t v90 = vaddq_s32(v88, (int32x4_t)xmmword_262CDE550);
        int8x16_t v91 = 0uLL;
        int8x16_t v92 = (int8x16_t)v65;
        int8x16_t v93 = (uint64_t *)((char *)v12 + v70);
        unint64_t v94 = v70 - (v67 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint64_t v95 = *v93++;
          v5.i64[0] = v95;
          uint32x4_t v96 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
          int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
          int8x16_t v91 = vorrq_s8((int8x16_t)vshlq_u32(v96, (uint32x4_t)vaddq_s32(v89, v15)), v91);
          int8x16_t v92 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v90, v15)), v92);
          int32x4_t v90 = vaddq_s32(v90, v16);
          int32x4_t v89 = vaddq_s32(v89, v16);
          v94 += 8;
        }
        while (v94);
        int8x16_t v97 = vorrq_s8(v92, v91);
        int8x8_t v98 = vorr_s8(*(int8x8_t *)v97.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v97, v97, 8uLL));
        unsigned int v65 = v98.i32[0] | v98.i32[1];
        if (v67 == (v67 & 0xFFFFFFFFFFFFFFF8)) {
          goto LABEL_61;
        }
        goto LABEL_59;
      }
      int v28 = v25 + 1;
      v9 <<= v28;
      v10 -= v28;
      if (v10 < 0)
      {
        if ((unint64_t)v12 < v11)
        {
          unsigned int v22 = *v12++;
          unsigned int v23 = bswap32(v22);
        }
        else
        {
          unsigned int v29 = (unsigned __int8 *)a1[4];
          if (v12 >= (unsigned int *)v29)
          {
            unsigned int v23 = 0;
          }
          else
          {
            unint64_t v30 = v29 - (unsigned __int8 *)v12;
            if ((unint64_t)(v29 - (unsigned __int8 *)v12) < 8)
            {
              unsigned int v23 = 0;
              unsigned int v31 = 32;
              int32x4_t v32 = v12;
              goto LABEL_34;
            }
            if (v30 >= 0x20)
            {
              unint64_t v33 = v30 & 0xFFFFFFFFFFFFFFE0;
              unsigned int v31 = 32 - 8 * (v30 & 0xFFFFFFE0);
              int32x4_t v34 = (int32x4_t)xmmword_262CDE530;
              int32x4_t v35 = (int32x4_t)xmmword_262CDE540;
              int32x4_t v36 = (int32x4_t)xmmword_262CDE550;
              int8x16_t v37 = 0uLL;
              int8x16_t v5 = 0uLL;
              int32x4_t v38 = (int32x4_t)xmmword_262CDE560;
              int8x16_t v39 = (int8x16_t *)(v12 + 4);
              unint64_t v40 = v30 & 0xFFFFFFFFFFFFFFE0;
              int8x16_t v41 = 0uLL;
              int8x16_t v42 = 0uLL;
              int8x16_t v43 = 0uLL;
              int8x16_t v44 = 0uLL;
              int8x16_t v45 = 0uLL;
              int8x16_t v46 = 0uLL;
              do
              {
                int8x16_t v47 = v39[-1];
                int8x16_t v48 = *v39;
                v39 += 2;
                int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v36, v15)), v5);
                int8x16_t v37 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v38, v15)), v37);
                int8x16_t v41 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v35, v15)), v41);
                int8x16_t v42 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v34, v15)), v42);
                int8x16_t v44 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v36, v17)), v44);
                int8x16_t v43 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v38, v17)), v43);
                int8x16_t v45 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v35, v17)), v45);
                int8x16_t v46 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v34, v17)), v46);
                int32x4_t v38 = vaddq_s32(v38, v18);
                int32x4_t v36 = vaddq_s32(v36, v18);
                int32x4_t v35 = vaddq_s32(v35, v18);
                int32x4_t v34 = vaddq_s32(v34, v18);
                v40 -= 32;
              }
              while (v40);
              int8x16_t v49 = vorrq_s8(vorrq_s8(vorrq_s8(v43, v37), vorrq_s8(v45, v41)), vorrq_s8(vorrq_s8(v44, v5), vorrq_s8(v46, v42)));
              *(int8x8_t *)v49.i8 = vorr_s8(*(int8x8_t *)v49.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL));
              unsigned int v23 = v49.i32[0] | v49.i32[1];
              if (v30 != v33)
              {
                if ((v30 & 0x18) == 0)
                {
                  int32x4_t v32 = (unsigned int *)((char *)v12 + v33);
                  goto LABEL_34;
                }
                goto LABEL_29;
              }
            }
            else
            {
              unsigned int v23 = 0;
              unint64_t v33 = 0;
              unsigned int v31 = 32;
LABEL_29:
              int32x4_t v50 = vdupq_n_s32(v31);
              unsigned int v31 = 32 - 8 * (v30 & 0xFFFFFFF8);
              int32x4_t v32 = (unsigned int *)((char *)v12 + (v30 & 0xFFFFFFFFFFFFFFF8));
              int32x4_t v51 = vaddq_s32(v50, (int32x4_t)xmmword_262CDE540);
              int32x4_t v52 = vaddq_s32(v50, (int32x4_t)xmmword_262CDE550);
              int8x16_t v53 = 0uLL;
              int8x16_t v54 = (int8x16_t)v23;
              uint64_t v55 = (uint64_t *)((char *)v12 + v33);
              unint64_t v56 = v33 - (v30 & 0xFFFFFFFFFFFFFFF8);
              do
              {
                uint64_t v57 = *v55++;
                v5.i64[0] = v57;
                uint32x4_t v58 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
                int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
                int8x16_t v53 = vorrq_s8((int8x16_t)vshlq_u32(v58, (uint32x4_t)vaddq_s32(v51, v15)), v53);
                int8x16_t v54 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v52, v15)), v54);
                int32x4_t v52 = vaddq_s32(v52, v16);
                int32x4_t v51 = vaddq_s32(v51, v16);
                v56 += 8;
              }
              while (v56);
              int8x16_t v59 = vorrq_s8(v54, v53);
              *(int8x8_t *)v59.i8 = vorr_s8(*(int8x8_t *)v59.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v59, v59, 8uLL));
              unsigned int v23 = v59.i32[0] | v59.i32[1];
              if (v30 != (v30 & 0xFFFFFFFFFFFFFFF8))
              {
LABEL_34:
                unsigned int v60 = v31 - 8;
                do
                {
                  int v61 = *(unsigned __int8 *)v32;
                  int32x4_t v32 = (unsigned int *)((char *)v32 + 1);
                  v23 |= v61 << v60;
                  v60 -= 8;
                }
                while (v32 != (unsigned int *)v29);
              }
            }
            uint64_t v12 = (unsigned int *)a1[4];
          }
        }
        v9 |= (unint64_t)v23 << -(char)v10;
        v10 += 32;
      }
      v21->i8[0] = v26;
      uint32x4_t v21 = (int64x2_t *)((char *)v21 + 1);
      --v19;
    }
    while (v19);
    if (--v6)
    {
      a2 = (int64x2_t *)((char *)v20 + a3);
      continue;
    }
    return v14 == 0xFFFF;
  }
}

BOOL decodeIntAlpha<8,unsigned short,false>(uint64_t *a1, int64x2_t *a2, unsigned int a3, unsigned int a4, int a5)
{
  uint64_t v6 = 2 * a4;
  BOOL v7 = v6 == a3;
  if (v6 == a3) {
    int v8 = 1;
  }
  else {
    int v8 = a5;
  }
  if (v7) {
    int v9 = a5;
  }
  else {
    int v9 = 1;
  }
  unsigned int v10 = v9 * a4;
  unint64_t v11 = *a1;
  int v12 = *((_DWORD *)a1 + 2);
  int v14 = (unsigned int *)a1[2];
  unint64_t v13 = a1[3];
  LOBYTE(v15) = -1;
  int v16 = 255;
  v17.i64[0] = 0x700000007;
  v17.i64[1] = 0x700000007;
  v18.i64[0] = 0x3F0000003FLL;
  v18.i64[1] = 0x3F0000003FLL;
  v19.i64[0] = 0x8700000087;
  v19.i64[1] = 0x8700000087;
  v20.i64[0] = 0xFFFFFF00FFFFFF00;
  v20.i64[1] = 0xFFFFFF00FFFFFF00;
  while (2)
  {
    unsigned int v21 = v10;
    unsigned int v22 = a2;
LABEL_9:
    unsigned int v23 = a2;
    do
    {
      if ((v11 & 0x8000000000000000) != 0)
      {
        int v26 = 9;
        int v15 = ((SHIDWORD(v11) >> 23) + v15);
        v16 &= v15;
        unsigned int v27 = v15 | (v15 << 8);
        unsigned int v28 = HIDWORD(v11) << 9;
        if (((HIDWORD(v11) << 9) & 0x80000000) == 0)
        {
LABEL_37:
          if (v28 >> 27) {
            int v64 = 5;
          }
          else {
            int v64 = 16;
          }
          v11 <<= v64 + v26;
          v12 -= v64 + v26;
          if (v12 < 0)
          {
            if ((unint64_t)v14 < v13)
            {
              unsigned int v65 = *v14++;
              unsigned int v66 = bswap32(v65);
              goto LABEL_62;
            }
            unint64_t v67 = (unsigned __int8 *)a1[4];
            if (v14 >= (unsigned int *)v67)
            {
              unsigned int v66 = 0;
            }
            else
            {
              unint64_t v68 = v67 - (unsigned __int8 *)v14;
              if ((unint64_t)(v67 - (unsigned __int8 *)v14) < 8)
              {
                unsigned int v66 = 0;
                unsigned int v69 = 32;
                unint64_t v70 = v14;
                goto LABEL_59;
              }
              if (v68 < 0x20)
              {
                unsigned int v66 = 0;
                unint64_t v71 = 0;
                unsigned int v69 = 32;
                goto LABEL_54;
              }
              unint64_t v71 = v68 & 0xFFFFFFFFFFFFFFE0;
              int8x16_t v72 = (int8x16_t *)(v14 + 4);
              int8x16_t v73 = 0uLL;
              int8x16_t v74 = 0uLL;
              unint64_t v75 = v68 & 0xFFFFFFFFFFFFFFE0;
              int32x4_t v76 = (int32x4_t)xmmword_262CDE560;
              int32x4_t v77 = (int32x4_t)xmmword_262CDE550;
              int32x4_t v78 = (int32x4_t)xmmword_262CDE540;
              int32x4_t v79 = (int32x4_t)xmmword_262CDE530;
              int8x16_t v80 = 0uLL;
              int8x16_t v5 = 0uLL;
              int8x16_t v81 = 0uLL;
              unsigned int v69 = 32 - 8 * (v68 & 0xFFFFFFE0);
              int8x16_t v82 = 0uLL;
              int8x16_t v83 = 0uLL;
              int8x16_t v84 = 0uLL;
              do
              {
                int8x16_t v85 = v72[-1];
                int8x16_t v86 = *v72;
                v72 += 2;
                int8x16_t v74 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v77, v17)), v74);
                int8x16_t v73 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v76, v17)), v73);
                int8x16_t v80 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v78, v17)), v80);
                int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v85, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v79, v17)), v5);
                int8x16_t v82 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v86, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v77, v19)), v82);
                int8x16_t v81 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v86, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v76, v19)), v81);
                int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v86, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v78, v19)), v83);
                int8x16_t v84 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v86, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v79, v19)), v84);
                int32x4_t v76 = vaddq_s32(v76, v20);
                int32x4_t v77 = vaddq_s32(v77, v20);
                int32x4_t v78 = vaddq_s32(v78, v20);
                int32x4_t v79 = vaddq_s32(v79, v20);
                v75 -= 32;
              }
              while (v75);
              int8x16_t v87 = vorrq_s8(vorrq_s8(vorrq_s8(v81, v73), vorrq_s8(v83, v80)), vorrq_s8(vorrq_s8(v82, v74), vorrq_s8(v84, v5)));
              *(int8x8_t *)v87.i8 = vorr_s8(*(int8x8_t *)v87.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL));
              unsigned int v66 = v87.i32[0] | v87.i32[1];
              if (v68 == v71)
              {
                int v14 = (unsigned int *)a1[4];
              }
              else
              {
                if ((v68 & 0x18) == 0)
                {
                  unint64_t v70 = (unsigned int *)((char *)v14 + v71);
                  goto LABEL_59;
                }
LABEL_54:
                int32x4_t v88 = vdupq_n_s32(v69);
                unsigned int v69 = 32 - 8 * (v68 & 0xFFFFFFF8);
                unint64_t v70 = (unsigned int *)((char *)v14 + (v68 & 0xFFFFFFFFFFFFFFF8));
                int32x4_t v89 = vaddq_s32(v88, (int32x4_t)xmmword_262CDE540);
                int32x4_t v90 = vaddq_s32(v88, (int32x4_t)xmmword_262CDE550);
                int8x16_t v91 = 0uLL;
                int8x16_t v92 = (int8x16_t)v66;
                int8x16_t v93 = (uint64_t *)((char *)v14 + v71);
                unint64_t v94 = v71 - (v68 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  uint64_t v95 = *v93++;
                  v5.i64[0] = v95;
                  uint32x4_t v96 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
                  int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
                  int8x16_t v91 = vorrq_s8((int8x16_t)vshlq_u32(v96, (uint32x4_t)vaddq_s32(v89, v17)), v91);
                  int8x16_t v92 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v90, v17)), v92);
                  int32x4_t v90 = vaddq_s32(v90, v18);
                  int32x4_t v89 = vaddq_s32(v89, v18);
                  v94 += 8;
                }
                while (v94);
                int8x16_t v97 = vorrq_s8(v92, v91);
                *(int8x8_t *)v97.i8 = vorr_s8(*(int8x8_t *)v97.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v97, v97, 8uLL));
                unsigned int v66 = v97.i32[0] | v97.i32[1];
                if (v68 != (v68 & 0xFFFFFFFFFFFFFFF8))
                {
LABEL_59:
                  unsigned int v98 = v69 - 8;
                  do
                  {
                    int v99 = *(unsigned __int8 *)v70;
                    unint64_t v70 = (unsigned int *)((char *)v70 + 1);
                    v66 |= v99 << v98;
                    v98 -= 8;
                  }
                  while (v70 != (unsigned int *)v67);
                }
                int v14 = (unsigned int *)a1[4];
              }
            }
LABEL_62:
            v11 |= (unint64_t)v66 << -(char)v12;
            v12 += 32;
          }
          unsigned int v100 = (v28 >> -(char)v64) + 1;
          uint64_t v101 = vqtbl1q_s8((int8x16_t)v27, (int8x16_t)xmmword_262D473B0).u64[0];
          if (v100 < v21) {
            goto LABEL_83;
          }
          int64x2_t v102 = vdupq_lane_s64(v101, 0);
          while (2)
          {
            if (v21 < 8)
            {
              i64 = (uint64_t *)v23;
              goto LABEL_73;
            }
            unsigned int v104 = v21 >> 3;
            uint64_t v105 = (v21 >> 3) - 1;
            if (v105 < 3)
            {
              i64 = (uint64_t *)v23;
              goto LABEL_72;
            }
            uint64_t v106 = v105 + 1;
            uint64_t v107 = (v105 + 1) & 0x1FFFFFFFCLL;
            i64 = v23[v107].i64;
            v104 -= v107;
            int32x4_t v108 = v23 + 2;
            uint64_t v109 = v107;
            do
            {
              v108[-2] = v102;
              v108[-1] = v102;
              *int32x4_t v108 = v102;
              v108[1] = v102;
              v108 += 4;
              v109 -= 4;
            }
            while (v109);
            if (v106 != v107)
            {
              do
              {
LABEL_72:
                uint64_t *i64 = v101;
                i64[1] = v101;
                i64 += 2;
                --v104;
              }
              while (v104);
            }
LABEL_73:
            if ((v21 & 4) != 0)
            {
              *i64++ = v101;
              if ((v21 & 2) != 0) {
                goto LABEL_79;
              }
LABEL_75:
              if ((v21 & 1) == 0) {
                goto LABEL_76;
              }
LABEL_80:
              *(_WORD *)i64 = v27;
              if (!--v8) {
                return v16 == 255;
              }
            }
            else
            {
              if ((v21 & 2) == 0) {
                goto LABEL_75;
              }
LABEL_79:
              *(_DWORD *)i64 = v101;
              i64 = (uint64_t *)((char *)i64 + 4);
              if (v21) {
                goto LABEL_80;
              }
LABEL_76:
              if (!--v8) {
                return v16 == 255;
              }
            }
            v100 -= v21;
            unsigned int v22 = (int64x2_t *)((char *)v22 + a3);
            unsigned int v21 = v10;
            unsigned int v23 = v22;
            if (v100 < v10)
            {
              unsigned int v23 = v22;
              unsigned int v21 = v10;
LABEL_83:
              if (v100 < 8)
              {
                a2 = v23;
                goto LABEL_92;
              }
              unsigned int v110 = v100 >> 3;
              uint64_t v111 = (v100 >> 3) - 1;
              if (v111 < 3)
              {
                a2 = v23;
                goto LABEL_90;
              }
              uint64_t v112 = v111 + 1;
              a2 = &v23[v112 & 0x1FFFFFFFCLL];
              v110 -= v112 & 0xFFFFFFFC;
              int64x2_t v113 = vdupq_lane_s64(v101, 0);
              unint64_t v114 = v23 + 2;
              uint64_t v115 = v112 & 0x1FFFFFFFCLL;
              do
              {
                v114[-2] = v113;
                v114[-1] = v113;
                *unint64_t v114 = v113;
                v114[1] = v113;
                v114 += 4;
                v115 -= 4;
              }
              while (v115);
              if (v112 != (v112 & 0x1FFFFFFFCLL))
              {
LABEL_90:
                int64x2_t v116 = vdupq_lane_s64(v101, 0);
                do
                {
                  *a2++ = v116;
                  --v110;
                }
                while (v110);
              }
LABEL_92:
              if ((v100 & 4) != 0)
              {
                a2->i64[0] = v101;
                a2 = (int64x2_t *)((char *)a2 + 8);
                if ((v100 & 2) != 0) {
                  goto LABEL_97;
                }
LABEL_94:
                v21 -= v100;
                if (v100)
                {
LABEL_98:
                  a2->i16[0] = v27;
                  a2 = (int64x2_t *)((char *)a2 + 2);
                }
              }
              else
              {
                if ((v100 & 2) == 0) {
                  goto LABEL_94;
                }
LABEL_97:
                a2->i32[0] = v101;
                a2 = (int64x2_t *)((char *)a2 + 4);
                v21 -= v100;
                if (v100) {
                  goto LABEL_98;
                }
              }
              goto LABEL_9;
            }
            continue;
          }
        }
      }
      else
      {
        int v26 = 5;
        int v15 = (smallAlphaDiffVLDTable_8b[v11 >> 59] + v15);
        v16 &= v15;
        unsigned int v27 = v15 | (v15 << 8);
        unsigned int v28 = 32 * HIDWORD(v11);
        if (((32 * HIDWORD(v11)) & 0x80000000) == 0) {
          goto LABEL_37;
        }
      }
      v11 <<= v26 + 1;
      v12 -= v26 + 1;
      if (v12 < 0)
      {
        if ((unint64_t)v14 < v13)
        {
          unsigned int v24 = *v14++;
          unsigned int v25 = bswap32(v24);
        }
        else
        {
          unsigned int v29 = (unsigned __int8 *)a1[4];
          if (v14 < (unsigned int *)v29)
          {
            unint64_t v30 = v29 - (unsigned __int8 *)v14;
            if ((unint64_t)(v29 - (unsigned __int8 *)v14) < 8)
            {
              unsigned int v25 = 0;
              unsigned int v31 = 32;
              int32x4_t v32 = v14;
              goto LABEL_34;
            }
            if (v30 >= 0x20)
            {
              unint64_t v33 = v30 & 0xFFFFFFFFFFFFFFE0;
              unsigned int v31 = 32 - 8 * (v30 & 0xFFFFFFE0);
              int32x4_t v34 = (int32x4_t)xmmword_262CDE530;
              int32x4_t v35 = (int32x4_t)xmmword_262CDE540;
              int32x4_t v36 = (int32x4_t)xmmword_262CDE550;
              int8x16_t v37 = 0uLL;
              int8x16_t v5 = 0uLL;
              int32x4_t v38 = (int32x4_t)xmmword_262CDE560;
              int8x16_t v39 = (int8x16_t *)(v14 + 4);
              unint64_t v40 = v30 & 0xFFFFFFFFFFFFFFE0;
              int8x16_t v41 = 0uLL;
              int8x16_t v42 = 0uLL;
              int8x16_t v43 = 0uLL;
              int8x16_t v44 = 0uLL;
              int8x16_t v45 = 0uLL;
              int8x16_t v46 = 0uLL;
              do
              {
                int8x16_t v47 = v39[-1];
                int8x16_t v48 = *v39;
                v39 += 2;
                int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v36, v17)), v5);
                int8x16_t v37 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v38, v17)), v37);
                int8x16_t v41 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v35, v17)), v41);
                int8x16_t v42 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v47, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v34, v17)), v42);
                int8x16_t v44 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v36, v19)), v44);
                int8x16_t v43 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v38, v19)), v43);
                int8x16_t v45 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v35, v19)), v45);
                int8x16_t v46 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v34, v19)), v46);
                int32x4_t v38 = vaddq_s32(v38, v20);
                int32x4_t v36 = vaddq_s32(v36, v20);
                int32x4_t v35 = vaddq_s32(v35, v20);
                int32x4_t v34 = vaddq_s32(v34, v20);
                v40 -= 32;
              }
              while (v40);
              int8x16_t v49 = vorrq_s8(vorrq_s8(vorrq_s8(v43, v37), vorrq_s8(v45, v41)), vorrq_s8(vorrq_s8(v44, v5), vorrq_s8(v46, v42)));
              int8x8_t v50 = vorr_s8(*(int8x8_t *)v49.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL));
              unsigned int v25 = v50.i32[0] | v50.i32[1];
              if (v30 == v33) {
                goto LABEL_36;
              }
              if ((v30 & 0x18) == 0)
              {
                int32x4_t v32 = (unsigned int *)((char *)v14 + v33);
LABEL_34:
                unsigned int v62 = v31 - 8;
                do
                {
                  int v63 = *(unsigned __int8 *)v32;
                  int32x4_t v32 = (unsigned int *)((char *)v32 + 1);
                  v25 |= v63 << v62;
                  v62 -= 8;
                }
                while (v32 != (unsigned int *)v29);
LABEL_36:
                int v14 = (unsigned int *)a1[4];
                goto LABEL_11;
              }
            }
            else
            {
              unsigned int v25 = 0;
              unint64_t v33 = 0;
              unsigned int v31 = 32;
            }
            int32x4_t v51 = vdupq_n_s32(v31);
            unsigned int v31 = 32 - 8 * (v30 & 0xFFFFFFF8);
            int32x4_t v32 = (unsigned int *)((char *)v14 + (v30 & 0xFFFFFFFFFFFFFFF8));
            int32x4_t v52 = vaddq_s32(v51, (int32x4_t)xmmword_262CDE540);
            int32x4_t v53 = vaddq_s32(v51, (int32x4_t)xmmword_262CDE550);
            int8x16_t v54 = 0uLL;
            int8x16_t v55 = (int8x16_t)v25;
            unint64_t v56 = (uint64_t *)((char *)v14 + v33);
            unint64_t v57 = v33 - (v30 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint64_t v58 = *v56++;
              v5.i64[0] = v58;
              uint32x4_t v59 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
              int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
              int8x16_t v54 = vorrq_s8((int8x16_t)vshlq_u32(v59, (uint32x4_t)vaddq_s32(v52, v17)), v54);
              int8x16_t v55 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v53, v17)), v55);
              int32x4_t v53 = vaddq_s32(v53, v18);
              int32x4_t v52 = vaddq_s32(v52, v18);
              v57 += 8;
            }
            while (v57);
            int8x16_t v60 = vorrq_s8(v55, v54);
            int8x8_t v61 = vorr_s8(*(int8x8_t *)v60.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL));
            unsigned int v25 = v61.i32[0] | v61.i32[1];
            if (v30 == (v30 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_36;
            }
            goto LABEL_34;
          }
          unsigned int v25 = 0;
        }
LABEL_11:
        v11 |= (unint64_t)v25 << -(char)v12;
        v12 += 32;
      }
      v23->i16[0] = v27;
      unsigned int v23 = (int64x2_t *)((char *)v23 + 2);
      --v21;
    }
    while (v21);
    if (--v8)
    {
      a2 = (int64x2_t *)((char *)v22 + a3);
      continue;
    }
    return v16 == 255;
  }
}

BOOL decodeIntAlpha<16,unsigned short,false>(uint64_t *a1, int64x2_t *a2, unsigned int a3, unsigned int a4, int a5)
{
  uint64_t v6 = 2 * a4;
  BOOL v7 = v6 == a3;
  if (v6 == a3) {
    int v8 = 1;
  }
  else {
    int v8 = a5;
  }
  if (v7) {
    int v9 = a5;
  }
  else {
    int v9 = 1;
  }
  unsigned int v10 = v9 * a4;
  unint64_t v11 = *a1;
  int v12 = *((_DWORD *)a1 + 2);
  int v14 = (unsigned int *)a1[2];
  unint64_t v13 = a1[3];
  LOWORD(v15) = -1;
  LOWORD(v16) = -1;
  v17.i64[0] = 0x700000007;
  v17.i64[1] = 0x700000007;
  v18.i64[0] = 0x3F0000003FLL;
  v18.i64[1] = 0x3F0000003FLL;
  v19.i64[0] = 0x8700000087;
  v19.i64[1] = 0x8700000087;
  v20.i64[0] = 0xFFFFFF00FFFFFF00;
  v20.i64[1] = 0xFFFFFF00FFFFFF00;
  while (2)
  {
    unsigned int v21 = v10;
    unsigned int v22 = a2;
LABEL_9:
    unsigned int v23 = a2;
    do
    {
      if ((v11 & 0x8000000000000000) != 0)
      {
        int v26 = 17;
        unsigned __int16 v27 = (SHIDWORD(v11) >> 15) + v15;
        unsigned int v15 = v27;
        int v16 = (unsigned __int16)(v27 & v16);
        LODWORD(v28) = HIDWORD(v11) << 17;
        if (((HIDWORD(v11) << 17) & 0x80000000) == 0)
        {
LABEL_37:
          if (v28 >> 27) {
            int v65 = 5;
          }
          else {
            int v65 = 16;
          }
          int v66 = v65 + v26;
          if ((v65 + v26) >= 0x21)
          {
            v11 <<= v26;
            v12 -= v26;
            if (v12 < 0)
            {
              if ((unint64_t)v14 < v13)
              {
                unsigned int v67 = *v14++;
                unsigned int v68 = bswap32(v67);
                goto LABEL_62;
              }
              unsigned int v69 = (unsigned __int8 *)a1[4];
              if (v14 >= (unsigned int *)v69)
              {
                unsigned int v68 = 0;
              }
              else
              {
                unint64_t v70 = v69 - (unsigned __int8 *)v14;
                if ((unint64_t)(v69 - (unsigned __int8 *)v14) < 8)
                {
                  unsigned int v68 = 0;
                  unsigned int v71 = 32;
                  int8x16_t v72 = v14;
                  goto LABEL_59;
                }
                if (v70 >= 0x20)
                {
                  unint64_t v73 = v70 & 0xFFFFFFFFFFFFFFE0;
                  int8x16_t v74 = (int8x16_t *)(v14 + 4);
                  int8x16_t v75 = 0uLL;
                  int8x16_t v76 = 0uLL;
                  unint64_t v77 = v70 & 0xFFFFFFFFFFFFFFE0;
                  int32x4_t v78 = (int32x4_t)xmmword_262CDE560;
                  int32x4_t v79 = (int32x4_t)xmmword_262CDE550;
                  int32x4_t v80 = (int32x4_t)xmmword_262CDE540;
                  int32x4_t v81 = (int32x4_t)xmmword_262CDE530;
                  int8x16_t v82 = 0uLL;
                  int8x16_t v5 = 0uLL;
                  int8x16_t v83 = 0uLL;
                  unsigned int v71 = 32 - 8 * (v70 & 0xFFFFFFE0);
                  int8x16_t v84 = 0uLL;
                  int8x16_t v85 = 0uLL;
                  int8x16_t v86 = 0uLL;
                  do
                  {
                    int8x16_t v87 = v74[-1];
                    int8x16_t v88 = *v74;
                    v74 += 2;
                    int8x16_t v76 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v87, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v79, v17)), v76);
                    int8x16_t v75 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v87, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v78, v17)), v75);
                    int8x16_t v82 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v87, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v80, v17)), v82);
                    int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v87, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v81, v17)), v5);
                    int8x16_t v84 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v88, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v79, v19)), v84);
                    int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v88, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v78, v19)), v83);
                    int8x16_t v85 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v88, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v80, v19)), v85);
                    int8x16_t v86 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v88, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v81, v19)), v86);
                    int32x4_t v78 = vaddq_s32(v78, v20);
                    int32x4_t v79 = vaddq_s32(v79, v20);
                    int32x4_t v80 = vaddq_s32(v80, v20);
                    int32x4_t v81 = vaddq_s32(v81, v20);
                    v77 -= 32;
                  }
                  while (v77);
                  int8x16_t v89 = vorrq_s8(vorrq_s8(vorrq_s8(v83, v75), vorrq_s8(v85, v82)), vorrq_s8(vorrq_s8(v84, v76), vorrq_s8(v86, v5)));
                  int8x8_t v90 = vorr_s8(*(int8x8_t *)v89.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL));
                  unsigned int v68 = v90.i32[0] | v90.i32[1];
                  if (v70 != v73)
                  {
                    if ((v70 & 0x18) == 0)
                    {
                      int8x16_t v72 = (unsigned int *)((char *)v14 + v73);
                      goto LABEL_59;
                    }
                    goto LABEL_54;
                  }
                }
                else
                {
                  unsigned int v68 = 0;
                  unint64_t v73 = 0;
                  unsigned int v71 = 32;
LABEL_54:
                  int32x4_t v91 = vdupq_n_s32(v71);
                  unsigned int v71 = 32 - 8 * (v70 & 0xFFFFFFF8);
                  int8x16_t v72 = (unsigned int *)((char *)v14 + (v70 & 0xFFFFFFFFFFFFFFF8));
                  int32x4_t v92 = vaddq_s32(v91, (int32x4_t)xmmword_262CDE540);
                  int32x4_t v93 = vaddq_s32(v91, (int32x4_t)xmmword_262CDE550);
                  int8x16_t v94 = 0uLL;
                  int8x16_t v95 = (int8x16_t)v68;
                  uint32x4_t v96 = (uint64_t *)((char *)v14 + v73);
                  unint64_t v97 = v73 - (v70 & 0xFFFFFFFFFFFFFFF8);
                  do
                  {
                    uint64_t v98 = *v96++;
                    v5.i64[0] = v98;
                    uint32x4_t v99 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
                    int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
                    int8x16_t v94 = vorrq_s8((int8x16_t)vshlq_u32(v99, (uint32x4_t)vaddq_s32(v92, v17)), v94);
                    int8x16_t v95 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v93, v17)), v95);
                    int32x4_t v93 = vaddq_s32(v93, v18);
                    int32x4_t v92 = vaddq_s32(v92, v18);
                    v97 += 8;
                  }
                  while (v97);
                  int8x16_t v100 = vorrq_s8(v95, v94);
                  int8x8_t v101 = vorr_s8(*(int8x8_t *)v100.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v100, v100, 8uLL));
                  unsigned int v68 = v101.i32[0] | v101.i32[1];
                  if (v70 != (v70 & 0xFFFFFFFFFFFFFFF8))
                  {
LABEL_59:
                    unsigned int v102 = v71 - 8;
                    do
                    {
                      int v103 = *(unsigned __int8 *)v72;
                      int8x16_t v72 = (unsigned int *)((char *)v72 + 1);
                      v68 |= v103 << v102;
                      v102 -= 8;
                    }
                    while (v72 != (unsigned int *)v69);
                  }
                }
                int v14 = (unsigned int *)a1[4];
              }
LABEL_62:
              v11 |= (unint64_t)v68 << -(char)v12;
              v12 += 32;
            }
            unint64_t v28 = HIDWORD(v11);
            int v66 = v65;
          }
          v11 <<= v66;
          v12 -= v66;
          if (v12 < 0)
          {
            if ((unint64_t)v14 < v13)
            {
              unsigned int v104 = *v14++;
              unsigned int v105 = bswap32(v104);
              goto LABEL_86;
            }
            unint64_t v106 = a1[4];
            if ((unint64_t)v14 >= v106)
            {
              unsigned int v105 = 0;
            }
            else
            {
              unint64_t v107 = v106 - (void)v14;
              if (v106 - (unint64_t)v14 < 8)
              {
                unsigned int v105 = 0;
                unsigned int v108 = 32;
                uint64_t v109 = v14;
                goto LABEL_83;
              }
              if (v107 < 0x20)
              {
                unsigned int v105 = 0;
                unint64_t v110 = 0;
                unsigned int v108 = 32;
                goto LABEL_78;
              }
              unint64_t v110 = v107 & 0xFFFFFFFFFFFFFFE0;
              unsigned int v108 = 32 - 8 * (v107 & 0xFFFFFFE0);
              int32x4_t v111 = (int32x4_t)xmmword_262CDE530;
              int32x4_t v112 = (int32x4_t)xmmword_262CDE540;
              int32x4_t v113 = (int32x4_t)xmmword_262CDE550;
              int8x16_t v114 = 0uLL;
              int8x16_t v5 = 0uLL;
              int32x4_t v115 = (int32x4_t)xmmword_262CDE560;
              int64x2_t v116 = (int8x16_t *)(v14 + 4);
              unint64_t v117 = v107 & 0xFFFFFFFFFFFFFFE0;
              int8x16_t v118 = 0uLL;
              int8x16_t v119 = 0uLL;
              int8x16_t v120 = 0uLL;
              int8x16_t v121 = 0uLL;
              int8x16_t v122 = 0uLL;
              int8x16_t v123 = 0uLL;
              do
              {
                int8x16_t v124 = v116[-1];
                int8x16_t v125 = *v116;
                v116 += 2;
                int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v124, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v113, v17)), v5);
                int8x16_t v114 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v124, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v115, v17)), v114);
                int8x16_t v118 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v124, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v112, v17)), v118);
                int8x16_t v119 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v124, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v111, v17)), v119);
                int8x16_t v121 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v125, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v113, v19)), v121);
                int8x16_t v120 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v125, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v115, v19)), v120);
                int8x16_t v122 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v125, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v112, v19)), v122);
                int8x16_t v123 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v125, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v111, v19)), v123);
                int32x4_t v115 = vaddq_s32(v115, v20);
                int32x4_t v113 = vaddq_s32(v113, v20);
                int32x4_t v112 = vaddq_s32(v112, v20);
                int32x4_t v111 = vaddq_s32(v111, v20);
                v117 -= 32;
              }
              while (v117);
              int8x16_t v126 = vorrq_s8(vorrq_s8(vorrq_s8(v120, v114), vorrq_s8(v122, v118)), vorrq_s8(vorrq_s8(v121, v5), vorrq_s8(v123, v119)));
              *(int8x8_t *)v126.i8 = vorr_s8(*(int8x8_t *)v126.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v126, v126, 8uLL));
              unsigned int v105 = v126.i32[0] | v126.i32[1];
              if (v107 == v110)
              {
                int v14 = (unsigned int *)a1[4];
              }
              else
              {
                if ((v107 & 0x18) == 0)
                {
                  uint64_t v109 = (unsigned int *)((char *)v14 + v110);
                  goto LABEL_83;
                }
LABEL_78:
                int32x4_t v127 = vdupq_n_s32(v108);
                unsigned int v108 = 32 - 8 * (v107 & 0xFFFFFFF8);
                uint64_t v109 = (unsigned int *)((char *)v14 + (v107 & 0xFFFFFFFFFFFFFFF8));
                int32x4_t v128 = vaddq_s32(v127, (int32x4_t)xmmword_262CDE540);
                int32x4_t v129 = vaddq_s32(v127, (int32x4_t)xmmword_262CDE550);
                int8x16_t v130 = 0uLL;
                int8x16_t v131 = (int8x16_t)v105;
                uint32x4_t v132 = (uint64_t *)((char *)v14 + v110);
                unint64_t v133 = v110 - (v107 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  uint64_t v134 = *v132++;
                  v5.i64[0] = v134;
                  uint32x4_t v135 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
                  int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
                  int8x16_t v130 = vorrq_s8((int8x16_t)vshlq_u32(v135, (uint32x4_t)vaddq_s32(v128, v17)), v130);
                  int8x16_t v131 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v129, v17)), v131);
                  int32x4_t v129 = vaddq_s32(v129, v18);
                  int32x4_t v128 = vaddq_s32(v128, v18);
                  v133 += 8;
                }
                while (v133);
                int8x16_t v136 = vorrq_s8(v131, v130);
                *(int8x8_t *)v136.i8 = vorr_s8(*(int8x8_t *)v136.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v136, v136, 8uLL));
                unsigned int v105 = v136.i32[0] | v136.i32[1];
                if (v107 != (v107 & 0xFFFFFFFFFFFFFFF8))
                {
LABEL_83:
                  unsigned int v137 = v108 - 8;
                  do
                  {
                    int v138 = *(unsigned __int8 *)v109;
                    uint64_t v109 = (unsigned int *)((char *)v109 + 1);
                    v105 |= v138 << v137;
                    v137 -= 8;
                  }
                  while (v109 != (unsigned int *)a1[4]);
                }
                int v14 = (unsigned int *)a1[4];
              }
            }
LABEL_86:
            v11 |= (unint64_t)v105 << -(char)v12;
            v12 += 32;
          }
          unsigned int v139 = (v28 >> -(char)v65) + 1;
          uint64_t v140 = vqtbl1q_s8((int8x16_t)v15, (int8x16_t)xmmword_262D473B0).u64[0];
          if (v139 < v21) {
            goto LABEL_107;
          }
          int64x2_t v141 = vdupq_lane_s64(v140, 0);
          while (2)
          {
            if (v21 < 8)
            {
              i64 = (uint64_t *)v23;
              goto LABEL_97;
            }
            unsigned int v143 = v21 >> 3;
            uint64_t v144 = (v21 >> 3) - 1;
            if (v144 < 3)
            {
              i64 = (uint64_t *)v23;
              goto LABEL_96;
            }
            uint64_t v145 = v144 + 1;
            uint64_t v146 = (v144 + 1) & 0x1FFFFFFFCLL;
            i64 = v23[v146].i64;
            v143 -= v146;
            unsigned int v147 = v23 + 2;
            uint64_t v148 = v146;
            do
            {
              v147[-2] = v141;
              v147[-1] = v141;
              *unsigned int v147 = v141;
              v147[1] = v141;
              v147 += 4;
              v148 -= 4;
            }
            while (v148);
            if (v145 != v146)
            {
              do
              {
LABEL_96:
                uint64_t *i64 = v140;
                i64[1] = v140;
                i64 += 2;
                --v143;
              }
              while (v143);
            }
LABEL_97:
            if ((v21 & 4) != 0)
            {
              *i64++ = v140;
              if ((v21 & 2) != 0) {
                goto LABEL_103;
              }
LABEL_99:
              if ((v21 & 1) == 0) {
                goto LABEL_100;
              }
LABEL_104:
              *(_WORD *)i64 = v27;
              if (!--v8) {
                return v16 == 0xFFFF;
              }
            }
            else
            {
              if ((v21 & 2) == 0) {
                goto LABEL_99;
              }
LABEL_103:
              *(_DWORD *)i64 = v140;
              i64 = (uint64_t *)((char *)i64 + 4);
              if (v21) {
                goto LABEL_104;
              }
LABEL_100:
              if (!--v8) {
                return v16 == 0xFFFF;
              }
            }
            v139 -= v21;
            unsigned int v22 = (int64x2_t *)((char *)v22 + a3);
            unsigned int v21 = v10;
            unsigned int v23 = v22;
            if (v139 < v10)
            {
              unsigned int v23 = v22;
              unsigned int v21 = v10;
LABEL_107:
              if (v139 < 8)
              {
                a2 = v23;
                goto LABEL_116;
              }
              unsigned int v149 = v139 >> 3;
              uint64_t v150 = (v139 >> 3) - 1;
              if (v150 < 3)
              {
                a2 = v23;
                goto LABEL_114;
              }
              uint64_t v151 = v150 + 1;
              a2 = &v23[v151 & 0x1FFFFFFFCLL];
              v149 -= v151 & 0xFFFFFFFC;
              int64x2_t v152 = vdupq_lane_s64(v140, 0);
              unsigned int v153 = v23 + 2;
              uint64_t v154 = v151 & 0x1FFFFFFFCLL;
              do
              {
                v153[-2] = v152;
                v153[-1] = v152;
                *unsigned int v153 = v152;
                v153[1] = v152;
                v153 += 4;
                v154 -= 4;
              }
              while (v154);
              if (v151 != (v151 & 0x1FFFFFFFCLL))
              {
LABEL_114:
                int64x2_t v155 = vdupq_lane_s64(v140, 0);
                do
                {
                  *a2++ = v155;
                  --v149;
                }
                while (v149);
              }
LABEL_116:
              if ((v139 & 4) != 0)
              {
                a2->i64[0] = v140;
                a2 = (int64x2_t *)((char *)a2 + 8);
                if ((v139 & 2) != 0) {
                  goto LABEL_121;
                }
LABEL_118:
                v21 -= v139;
                if (v139)
                {
LABEL_122:
                  a2->i16[0] = v27;
                  a2 = (int64x2_t *)((char *)a2 + 2);
                }
              }
              else
              {
                if ((v139 & 2) == 0) {
                  goto LABEL_118;
                }
LABEL_121:
                a2->i32[0] = v140;
                a2 = (int64x2_t *)((char *)a2 + 4);
                v21 -= v139;
                if (v139) {
                  goto LABEL_122;
                }
              }
              goto LABEL_9;
            }
            continue;
          }
        }
      }
      else
      {
        int v26 = 8;
        unsigned __int16 v27 = smallAlphaDiffVLDTable_16b[HIBYTE(v11)] + (_WORD)v15;
        unsigned int v15 = v27;
        int v16 = (unsigned __int16)(v27 & v16);
        LODWORD(v28) = HIDWORD(v11) << 8;
        if (((HIDWORD(v11) << 8) & 0x80000000) == 0) {
          goto LABEL_37;
        }
      }
      int v29 = v26 + 1;
      v11 <<= v29;
      v12 -= v29;
      if (v12 < 0)
      {
        if ((unint64_t)v14 < v13)
        {
          unsigned int v24 = *v14++;
          unsigned int v25 = bswap32(v24);
        }
        else
        {
          unint64_t v30 = (unsigned __int8 *)a1[4];
          if (v14 < (unsigned int *)v30)
          {
            unint64_t v31 = v30 - (unsigned __int8 *)v14;
            if ((unint64_t)(v30 - (unsigned __int8 *)v14) < 8)
            {
              unsigned int v25 = 0;
              unsigned int v32 = 32;
              unint64_t v33 = v14;
              goto LABEL_34;
            }
            if (v31 >= 0x20)
            {
              unint64_t v34 = v31 & 0xFFFFFFFFFFFFFFE0;
              unsigned int v32 = 32 - 8 * (v31 & 0xFFFFFFE0);
              int32x4_t v35 = (int32x4_t)xmmword_262CDE530;
              int32x4_t v36 = (int32x4_t)xmmword_262CDE540;
              int32x4_t v37 = (int32x4_t)xmmword_262CDE550;
              int8x16_t v38 = 0uLL;
              int8x16_t v5 = 0uLL;
              int32x4_t v39 = (int32x4_t)xmmword_262CDE560;
              unint64_t v40 = (int8x16_t *)(v14 + 4);
              unint64_t v41 = v31 & 0xFFFFFFFFFFFFFFE0;
              int8x16_t v42 = 0uLL;
              int8x16_t v43 = 0uLL;
              int8x16_t v44 = 0uLL;
              int8x16_t v45 = 0uLL;
              int8x16_t v46 = 0uLL;
              int8x16_t v47 = 0uLL;
              do
              {
                int8x16_t v48 = v40[-1];
                int8x16_t v49 = *v40;
                v40 += 2;
                int8x16_t v5 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v37, v17)), v5);
                int8x16_t v38 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v39, v17)), v38);
                int8x16_t v42 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v36, v17)), v42);
                int8x16_t v43 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v48, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v35, v17)), v43);
                int8x16_t v45 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v49, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v37, v19)), v45);
                int8x16_t v44 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v49, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v39, v19)), v44);
                int8x16_t v46 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v49, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v36, v19)), v46);
                int8x16_t v47 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v49, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v35, v19)), v47);
                int32x4_t v39 = vaddq_s32(v39, v20);
                int32x4_t v37 = vaddq_s32(v37, v20);
                int32x4_t v36 = vaddq_s32(v36, v20);
                int32x4_t v35 = vaddq_s32(v35, v20);
                v41 -= 32;
              }
              while (v41);
              int8x16_t v50 = vorrq_s8(vorrq_s8(vorrq_s8(v44, v38), vorrq_s8(v46, v42)), vorrq_s8(vorrq_s8(v45, v5), vorrq_s8(v47, v43)));
              int8x8_t v51 = vorr_s8(*(int8x8_t *)v50.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL));
              unsigned int v25 = v51.i32[0] | v51.i32[1];
              if (v31 == v34) {
                goto LABEL_36;
              }
              if ((v31 & 0x18) == 0)
              {
                unint64_t v33 = (unsigned int *)((char *)v14 + v34);
LABEL_34:
                unsigned int v63 = v32 - 8;
                do
                {
                  int v64 = *(unsigned __int8 *)v33;
                  unint64_t v33 = (unsigned int *)((char *)v33 + 1);
                  v25 |= v64 << v63;
                  v63 -= 8;
                }
                while (v33 != (unsigned int *)v30);
LABEL_36:
                int v14 = (unsigned int *)a1[4];
                goto LABEL_11;
              }
            }
            else
            {
              unsigned int v25 = 0;
              unint64_t v34 = 0;
              unsigned int v32 = 32;
            }
            int32x4_t v52 = vdupq_n_s32(v32);
            unsigned int v32 = 32 - 8 * (v31 & 0xFFFFFFF8);
            unint64_t v33 = (unsigned int *)((char *)v14 + (v31 & 0xFFFFFFFFFFFFFFF8));
            int32x4_t v53 = vaddq_s32(v52, (int32x4_t)xmmword_262CDE540);
            int32x4_t v54 = vaddq_s32(v52, (int32x4_t)xmmword_262CDE550);
            int8x16_t v55 = 0uLL;
            int8x16_t v56 = (int8x16_t)v25;
            unint64_t v57 = (uint64_t *)((char *)v14 + v34);
            unint64_t v58 = v34 - (v31 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint64_t v59 = *v57++;
              v5.i64[0] = v59;
              uint32x4_t v60 = (uint32x4_t)vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE570);
              int8x16_t v5 = vqtbl1q_s8(v5, (int8x16_t)xmmword_262CDE580);
              int8x16_t v55 = vorrq_s8((int8x16_t)vshlq_u32(v60, (uint32x4_t)vaddq_s32(v53, v17)), v55);
              int8x16_t v56 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v54, v17)), v56);
              int32x4_t v54 = vaddq_s32(v54, v18);
              int32x4_t v53 = vaddq_s32(v53, v18);
              v58 += 8;
            }
            while (v58);
            int8x16_t v61 = vorrq_s8(v56, v55);
            int8x8_t v62 = vorr_s8(*(int8x8_t *)v61.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v61, v61, 8uLL));
            unsigned int v25 = v62.i32[0] | v62.i32[1];
            if (v31 == (v31 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_36;
            }
            goto LABEL_34;
          }
          unsigned int v25 = 0;
        }
LABEL_11:
        v11 |= (unint64_t)v25 << -(char)v12;
        v12 += 32;
      }
      v23->i16[0] = v27;
      unsigned int v23 = (int64x2_t *)((char *)v23 + 2);
      --v21;
    }
    while (v21);
    if (--v8)
    {
      a2 = (int64x2_t *)((char *)v22 + a3);
      continue;
    }
    return v16 == 0xFFFF;
  }
}

BOOL decodeIntAlpha<8,float,false>(uint64_t *a1, int32x2_t *a2, unsigned int a3, unsigned int a4, int a5)
{
  uint64_t v6 = a3;
  uint64_t v7 = 4 * a4;
  BOOL v8 = v7 == a3;
  if (v7 == a3) {
    int v9 = 1;
  }
  else {
    int v9 = a5;
  }
  if (v8) {
    int v10 = a5;
  }
  else {
    int v10 = 1;
  }
  unsigned int v11 = v10 * a4;
  unint64_t v12 = *a1;
  int v13 = *((_DWORD *)a1 + 2);
  unsigned int v15 = (unsigned int *)a1[2];
  unint64_t v14 = a1[3];
  LOBYTE(v16) = -1;
  int v17 = 255;
  v18.i64[0] = 0x700000007;
  v18.i64[1] = 0x700000007;
  v19.i64[0] = 0x3F0000003FLL;
  v19.i64[1] = 0x3F0000003FLL;
  v20.i64[0] = 0x8700000087;
  v20.i64[1] = 0x8700000087;
  v21.i64[0] = 0xFFFFFF00FFFFFF00;
  v21.i64[1] = 0xFFFFFF00FFFFFF00;
  while (2)
  {
    unsigned int v22 = v11;
    unsigned int v23 = a2;
    do
    {
      while (1)
      {
        if ((v12 & 0x8000000000000000) != 0)
        {
          int v26 = SHIDWORD(v12) >> 23;
          int v27 = 9;
        }
        else
        {
          LOBYTE(v26) = smallAlphaDiffVLDTable_8b[v12 >> 59];
          int v27 = 5;
        }
        int v16 = (v26 + v16);
        v17 &= v16;
        double v28 = (double)v16 * 0.00392156863;
        *(float *)&double v28 = v28;
        unsigned int v29 = HIDWORD(v12) << v27;
        if (((HIDWORD(v12) << v27) & 0x80000000) != 0) {
          break;
        }
        if (v29 >> 27) {
          int v35 = 5;
        }
        else {
          int v35 = 16;
        }
        v12 <<= v35 + v27;
        v13 -= v35 + v27;
        if (v13 >= 0)
        {
          unsigned int v36 = (v29 >> -(char)v35) + 1;
          if (v36 >= v22) {
            goto LABEL_64;
          }
          goto LABEL_29;
        }
        if ((unint64_t)v15 < v14)
        {
          unsigned int v65 = *v15++;
          unsigned int v66 = bswap32(v65);
          goto LABEL_63;
        }
        unsigned int v67 = (unsigned __int8 *)a1[4];
        if (v15 >= (unsigned int *)v67)
        {
          unsigned int v66 = 0;
          goto LABEL_63;
        }
        unint64_t v68 = v67 - (unsigned __int8 *)v15;
        if ((unint64_t)(v67 - (unsigned __int8 *)v15) >= 8)
        {
          if (v68 < 0x20)
          {
            unsigned int v66 = 0;
            uint64_t v73 = 0;
            unsigned int v69 = 32;
LABEL_55:
            int32x4_t v91 = vdupq_n_s32(v69);
            unsigned int v69 = 32 - 8 * (v68 & 0xFFFFFFF8);
            unint64_t v70 = (unsigned int *)((char *)v15 + (v68 & 0xFFFFFFFFFFFFFFF8));
            int32x4_t v92 = vaddq_s32(v91, (int32x4_t)xmmword_262CDE540);
            int32x4_t v93 = vaddq_s32(v91, (int32x4_t)xmmword_262CDE550);
            int8x16_t v94 = 0uLL;
            int8x16_t v95 = (int8x16_t)v66;
            uint32x4_t v96 = (uint64_t *)((char *)v15 + v73);
            uint64_t v97 = v73 - (v68 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint64_t v98 = *v96++;
              v5.i64[0] = v98;
              uint32x4_t v99 = (uint32x4_t)vqtbl1q_s8((int8x16_t)v5, (int8x16_t)xmmword_262CDE570);
              int32x4_t v5 = (int32x4_t)vqtbl1q_s8((int8x16_t)v5, (int8x16_t)xmmword_262CDE580);
              int8x16_t v94 = vorrq_s8((int8x16_t)vshlq_u32(v99, (uint32x4_t)vaddq_s32(v92, v18)), v94);
              int8x16_t v95 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v93, v18)), v95);
              int32x4_t v93 = vaddq_s32(v93, v19);
              int32x4_t v92 = vaddq_s32(v92, v19);
              v97 += 8;
            }
            while (v97);
            int8x16_t v100 = vorrq_s8(v95, v94);
            int8x8_t v101 = vorr_s8(*(int8x8_t *)v100.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v100, v100, 8uLL));
            unsigned int v66 = v101.i32[0] | v101.i32[1];
            if (v68 == (v68 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_62;
            }
            goto LABEL_60;
          }
          uint64_t v73 = v68 & 0xFFFFFFFFFFFFFFE0;
          int8x16_t v74 = (int8x16_t *)(v15 + 4);
          int8x16_t v75 = 0uLL;
          int8x16_t v76 = 0uLL;
          unint64_t v77 = v68 & 0xFFFFFFFFFFFFFFE0;
          int32x4_t v5 = (int32x4_t)xmmword_262CDE560;
          int32x4_t v78 = (int32x4_t)xmmword_262CDE530;
          int32x4_t v79 = (int32x4_t)xmmword_262CDE550;
          int32x4_t v80 = (int32x4_t)xmmword_262CDE540;
          int8x16_t v81 = 0uLL;
          int8x16_t v82 = 0uLL;
          int8x16_t v83 = 0uLL;
          unsigned int v69 = 32 - 8 * (v68 & 0xFFFFFFE0);
          int8x16_t v84 = 0uLL;
          int8x16_t v85 = 0uLL;
          int8x16_t v86 = 0uLL;
          do
          {
            int8x16_t v87 = v74[-1];
            int8x16_t v88 = *v74;
            v74 += 2;
            int8x16_t v76 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v87, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v79, v18)), v76);
            int8x16_t v75 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v87, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v5, v18)), v75);
            int8x16_t v81 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v87, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v80, v18)), v81);
            int8x16_t v82 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v87, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v78, v18)), v82);
            int8x16_t v84 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v88, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v79, v20)), v84);
            int8x16_t v83 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v88, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v5, v20)), v83);
            int8x16_t v85 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v88, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v80, v20)), v85);
            int8x16_t v86 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v88, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v78, v20)), v86);
            int32x4_t v5 = vaddq_s32(v5, v21);
            int32x4_t v79 = vaddq_s32(v79, v21);
            int32x4_t v80 = vaddq_s32(v80, v21);
            int32x4_t v78 = vaddq_s32(v78, v21);
            v77 -= 32;
          }
          while (v77);
          int8x16_t v89 = vorrq_s8(vorrq_s8(vorrq_s8(v83, v75), vorrq_s8(v85, v81)), vorrq_s8(vorrq_s8(v84, v76), vorrq_s8(v86, v82)));
          int8x8_t v90 = vorr_s8(*(int8x8_t *)v89.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL));
          unsigned int v66 = v90.i32[0] | v90.i32[1];
          if (v68 == v73) {
            goto LABEL_62;
          }
          if ((v68 & 0x18) != 0) {
            goto LABEL_55;
          }
          unint64_t v70 = (unsigned int *)((char *)v15 + v73);
        }
        else
        {
          unsigned int v66 = 0;
          unsigned int v69 = 32;
          unint64_t v70 = v15;
        }
LABEL_60:
        unsigned int v102 = v69 - 8;
        do
        {
          int v103 = *(unsigned __int8 *)v70;
          unint64_t v70 = (unsigned int *)((char *)v70 + 1);
          v66 |= v103 << v102;
          v102 -= 8;
        }
        while (v70 != (unsigned int *)v67);
LABEL_62:
        unsigned int v15 = (unsigned int *)a1[4];
LABEL_63:
        v12 |= (unint64_t)v66 << -(char)v13;
        v13 += 32;
        unsigned int v36 = (v29 >> -(char)v35) + 1;
        if (v36 >= v22)
        {
LABEL_64:
          int32x2_t v104 = vdup_lane_s32(*(int32x2_t *)&v28, 0);
          while (1)
          {
            if (v22 >= 8)
            {
              unsigned int v105 = v22 >> 3;
              do
              {
                *a2 = v104;
                a2[1] = v104;
                a2[2] = v104;
                a2[3] = v104;
                a2 += 4;
                --v105;
              }
              while (v105);
            }
            if ((v22 & 4) != 0)
            {
              *a2 = v104;
              a2[1] = v104;
              a2 += 2;
              if ((v22 & 2) == 0)
              {
LABEL_70:
                if (v22) {
                  goto LABEL_75;
                }
                goto LABEL_71;
              }
            }
            else if ((v22 & 2) == 0)
            {
              goto LABEL_70;
            }
            *a2++ = v104;
            if (v22)
            {
LABEL_75:
              a2->i32[0] = LODWORD(v28);
              if (!--v9) {
                return v17 == 255;
              }
              goto LABEL_76;
            }
LABEL_71:
            if (!--v9) {
              return v17 == 255;
            }
LABEL_76:
            v36 -= v22;
            unsigned int v23 = (int32x2_t *)((char *)v23 + v6);
            unsigned int v22 = v11;
            a2 = v23;
            if (v36 < v11)
            {
              a2 = v23;
              unsigned int v22 = v11;
              if (v36 >= 8) {
                goto LABEL_78;
              }
              goto LABEL_80;
            }
          }
        }
LABEL_29:
        if (v36 >= 8)
        {
LABEL_78:
          unsigned int v106 = v36 >> 3;
          int32x2_t v107 = vdup_lane_s32(*(int32x2_t *)&v28, 0);
          do
          {
            *a2 = v107;
            a2[1] = v107;
            a2[2] = v107;
            a2[3] = v107;
            a2 += 4;
            --v106;
          }
          while (v106);
        }
LABEL_80:
        if ((v36 & 4) != 0)
        {
          int32x2_t v108 = vdup_lane_s32(*(int32x2_t *)&v28, 0);
          *a2 = v108;
          a2[1] = v108;
          a2 += 2;
          if ((v36 & 2) == 0) {
            goto LABEL_82;
          }
LABEL_85:
          *a2++ = vdup_lane_s32(*(int32x2_t *)&v28, 0);
          v22 -= v36;
          if (v36) {
            goto LABEL_86;
          }
        }
        else
        {
          if ((v36 & 2) != 0) {
            goto LABEL_85;
          }
LABEL_82:
          v22 -= v36;
          if (v36)
          {
LABEL_86:
            a2->i32[0] = LODWORD(v28);
            a2 = (int32x2_t *)((char *)a2 + 4);
          }
        }
      }
      v12 <<= v27 + 1;
      v13 -= v27 + 1;
      if (v13 < 0)
      {
        if ((unint64_t)v15 < v14)
        {
          unsigned int v24 = *v15++;
          unsigned int v25 = bswap32(v24);
        }
        else
        {
          unint64_t v30 = (unsigned __int8 *)a1[4];
          if (v15 < (unsigned int *)v30)
          {
            unint64_t v31 = v30 - (unsigned __int8 *)v15;
            if ((unint64_t)(v30 - (unsigned __int8 *)v15) < 8)
            {
              unsigned int v25 = 0;
              unsigned int v32 = 32;
              unint64_t v33 = v15;
              goto LABEL_45;
            }
            if (v31 >= 0x20)
            {
              unint64_t v34 = v31 & 0xFFFFFFFFFFFFFFE0;
              unsigned int v32 = 32 - 8 * (v31 & 0xFFFFFFE0);
              int32x4_t v37 = (int32x4_t)xmmword_262CDE530;
              int32x4_t v38 = (int32x4_t)xmmword_262CDE540;
              int32x4_t v39 = (int32x4_t)xmmword_262CDE550;
              int8x16_t v40 = 0uLL;
              int8x16_t v41 = 0uLL;
              int32x4_t v42 = (int32x4_t)xmmword_262CDE560;
              int8x16_t v43 = (int8x16_t *)(v15 + 4);
              unint64_t v44 = v31 & 0xFFFFFFFFFFFFFFE0;
              int32x4_t v5 = 0uLL;
              int8x16_t v45 = 0uLL;
              int8x16_t v46 = 0uLL;
              int8x16_t v47 = 0uLL;
              int8x16_t v48 = 0uLL;
              int8x16_t v49 = 0uLL;
              do
              {
                int8x16_t v50 = v43[-1];
                int8x16_t v51 = *v43;
                v43 += 2;
                int8x16_t v41 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v50, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v39, v18)), v41);
                int8x16_t v40 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v50, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v42, v18)), v40);
                int32x4_t v5 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v50, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v38, v18)), (int8x16_t)v5);
                int8x16_t v45 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v50, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v37, v18)), v45);
                int8x16_t v47 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v51, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v39, v20)), v47);
                int8x16_t v46 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v51, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v42, v20)), v46);
                int8x16_t v48 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v51, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v38, v20)), v48);
                int8x16_t v49 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v51, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v37, v20)), v49);
                int32x4_t v42 = vaddq_s32(v42, v21);
                int32x4_t v39 = vaddq_s32(v39, v21);
                int32x4_t v38 = vaddq_s32(v38, v21);
                int32x4_t v37 = vaddq_s32(v37, v21);
                v44 -= 32;
              }
              while (v44);
              int8x16_t v52 = vorrq_s8(vorrq_s8(vorrq_s8(v46, v40), vorrq_s8(v48, (int8x16_t)v5)), vorrq_s8(vorrq_s8(v47, v41), vorrq_s8(v49, v45)));
              int8x8_t v53 = vorr_s8(*(int8x8_t *)v52.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL));
              unsigned int v25 = v53.i32[0] | v53.i32[1];
              if (v31 == v34) {
                goto LABEL_47;
              }
              if ((v31 & 0x18) == 0)
              {
                unint64_t v33 = (unsigned int *)((char *)v15 + v34);
LABEL_45:
                unsigned int v71 = v32 - 8;
                do
                {
                  int v72 = *(unsigned __int8 *)v33;
                  unint64_t v33 = (unsigned int *)((char *)v33 + 1);
                  v25 |= v72 << v71;
                  v71 -= 8;
                }
                while (v33 != (unsigned int *)v30);
LABEL_47:
                unsigned int v15 = (unsigned int *)a1[4];
                goto LABEL_10;
              }
            }
            else
            {
              unsigned int v25 = 0;
              unint64_t v34 = 0;
              unsigned int v32 = 32;
            }
            int32x4_t v54 = vdupq_n_s32(v32);
            unsigned int v32 = 32 - 8 * (v31 & 0xFFFFFFF8);
            unint64_t v33 = (unsigned int *)((char *)v15 + (v31 & 0xFFFFFFFFFFFFFFF8));
            int32x4_t v55 = vaddq_s32(v54, (int32x4_t)xmmword_262CDE540);
            int32x4_t v56 = vaddq_s32(v54, (int32x4_t)xmmword_262CDE550);
            int8x16_t v57 = 0uLL;
            int8x16_t v58 = (int8x16_t)v25;
            uint64_t v59 = (uint64_t *)((char *)v15 + v34);
            unint64_t v60 = v34 - (v31 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint64_t v61 = *v59++;
              v5.i64[0] = v61;
              uint32x4_t v62 = (uint32x4_t)vqtbl1q_s8((int8x16_t)v5, (int8x16_t)xmmword_262CDE570);
              int32x4_t v5 = (int32x4_t)vqtbl1q_s8((int8x16_t)v5, (int8x16_t)xmmword_262CDE580);
              int8x16_t v57 = vorrq_s8((int8x16_t)vshlq_u32(v62, (uint32x4_t)vaddq_s32(v55, v18)), v57);
              int8x16_t v58 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v56, v18)), v58);
              int32x4_t v56 = vaddq_s32(v56, v19);
              int32x4_t v55 = vaddq_s32(v55, v19);
              v60 += 8;
            }
            while (v60);
            int8x16_t v63 = vorrq_s8(v58, v57);
            int8x8_t v64 = vorr_s8(*(int8x8_t *)v63.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v63, v63, 8uLL));
            unsigned int v25 = v64.i32[0] | v64.i32[1];
            if (v31 == (v31 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_47;
            }
            goto LABEL_45;
          }
          unsigned int v25 = 0;
        }
LABEL_10:
        v12 |= (unint64_t)v25 << -(char)v13;
        v13 += 32;
      }
      a2->i32[0] = LODWORD(v28);
      a2 = (int32x2_t *)((char *)a2 + 4);
      --v22;
    }
    while (v22);
    if (--v9)
    {
      a2 = (int32x2_t *)((char *)v23 + v6);
      continue;
    }
    return v17 == 255;
  }
}

BOOL decodeIntAlpha<16,float,false>(uint64_t a1, int32x2_t *a2, unsigned int a3, unsigned int a4, int a5)
{
  uint64_t v6 = a3;
  uint64_t v7 = 4 * a4;
  BOOL v8 = v7 == a3;
  if (v7 == a3) {
    int v9 = 1;
  }
  else {
    int v9 = a5;
  }
  if (v8) {
    int v10 = a5;
  }
  else {
    int v10 = 1;
  }
  unsigned int v11 = v10 * a4;
  unint64_t v12 = *(void *)a1;
  int v13 = *(_DWORD *)(a1 + 8);
  unsigned int v15 = *(unsigned int **)(a1 + 16);
  unint64_t v14 = *(void *)(a1 + 24);
  LOWORD(v16) = -1;
  int v17 = 0xFFFF;
  v18.i64[0] = 0x700000007;
  v18.i64[1] = 0x700000007;
  v19.i64[0] = 0x3F0000003FLL;
  v19.i64[1] = 0x3F0000003FLL;
  v20.i64[0] = 0x8700000087;
  v20.i64[1] = 0x8700000087;
  v21.i64[0] = 0xFFFFFF00FFFFFF00;
  v21.i64[1] = 0xFFFFFF00FFFFFF00;
  while (2)
  {
    unsigned int v22 = v11;
    unsigned int v23 = a2;
    do
    {
      while (1)
      {
        if ((v12 & 0x8000000000000000) != 0)
        {
          int v26 = SHIDWORD(v12) >> 15;
          int v27 = 17;
        }
        else
        {
          LOWORD(v26) = smallAlphaDiffVLDTable_16b[HIBYTE(v12)];
          int v27 = 8;
        }
        int v16 = (unsigned __int16)(v26 + v16);
        v17 &= v16;
        double v28 = (double)v16 * 0.0000152590219;
        *(float *)&double v28 = v28;
        LODWORD(v29) = HIDWORD(v12) << v27;
        if (((HIDWORD(v12) << v27) & 0x80000000) != 0) {
          break;
        }
        if (v29 >> 27) {
          int v36 = 5;
        }
        else {
          int v36 = 16;
        }
        int v37 = v36 + v27;
        if ((v36 + v27) < 0x21)
        {
          v12 <<= v37;
          v13 -= v37;
          if (v13 >= 0) {
            goto LABEL_29;
          }
          goto LABEL_69;
        }
        unint64_t v67 = v12 << v27;
        int v68 = v13 - v27;
        if (v68 >= 0)
        {
          unint64_t v29 = HIDWORD(v67);
          unint64_t v12 = v67 << v36;
          int v13 = v68 - v36;
          if (v13 >= 0) {
            goto LABEL_29;
          }
          goto LABEL_69;
        }
        if ((unint64_t)v15 < v14)
        {
          unsigned int v69 = *v15++;
          unsigned int v70 = bswap32(v69);
          goto LABEL_68;
        }
        uint64_t v73 = *(unsigned __int8 **)(a1 + 32);
        if (v15 >= (unsigned int *)v73)
        {
          unsigned int v70 = 0;
          goto LABEL_68;
        }
        unint64_t v74 = v73 - (unsigned __int8 *)v15;
        if ((unint64_t)(v73 - (unsigned __int8 *)v15) >= 8)
        {
          if (v74 < 0x20)
          {
            unsigned int v70 = 0;
            uint64_t v77 = 0;
            unsigned int v75 = 32;
LABEL_60:
            int32x4_t v95 = vdupq_n_s32(v75);
            unsigned int v75 = 32 - 8 * (v74 & 0xFFFFFFF8);
            int8x16_t v76 = (unsigned int *)((char *)v15 + (v74 & 0xFFFFFFFFFFFFFFF8));
            int32x4_t v96 = vaddq_s32(v95, (int32x4_t)xmmword_262CDE540);
            int32x4_t v97 = vaddq_s32(v95, (int32x4_t)xmmword_262CDE550);
            int8x16_t v98 = 0uLL;
            int8x16_t v99 = (int8x16_t)v70;
            int8x16_t v100 = (uint64_t *)((char *)v15 + v77);
            uint64_t v101 = v77 - (v74 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint64_t v102 = *v100++;
              v5.i64[0] = v102;
              uint32x4_t v103 = (uint32x4_t)vqtbl1q_s8((int8x16_t)v5, (int8x16_t)xmmword_262CDE570);
              int32x4_t v5 = (int32x4_t)vqtbl1q_s8((int8x16_t)v5, (int8x16_t)xmmword_262CDE580);
              int8x16_t v98 = vorrq_s8((int8x16_t)vshlq_u32(v103, (uint32x4_t)vaddq_s32(v96, v18)), v98);
              int8x16_t v99 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v97, v18)), v99);
              int32x4_t v97 = vaddq_s32(v97, v19);
              int32x4_t v96 = vaddq_s32(v96, v19);
              v101 += 8;
            }
            while (v101);
            int8x16_t v104 = vorrq_s8(v99, v98);
            int8x8_t v105 = vorr_s8(*(int8x8_t *)v104.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v104, v104, 8uLL));
            unsigned int v70 = v105.i32[0] | v105.i32[1];
            if (v74 == (v74 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_67;
            }
            goto LABEL_65;
          }
          uint64_t v77 = v74 & 0xFFFFFFFFFFFFFFE0;
          int32x4_t v78 = (int8x16_t *)(v15 + 4);
          int8x16_t v79 = 0uLL;
          int8x16_t v80 = 0uLL;
          unint64_t v81 = v74 & 0xFFFFFFFFFFFFFFE0;
          int32x4_t v5 = (int32x4_t)xmmword_262CDE560;
          int32x4_t v82 = (int32x4_t)xmmword_262CDE530;
          int32x4_t v83 = (int32x4_t)xmmword_262CDE550;
          int32x4_t v84 = (int32x4_t)xmmword_262CDE540;
          int8x16_t v85 = 0uLL;
          int8x16_t v86 = 0uLL;
          int8x16_t v87 = 0uLL;
          unsigned int v75 = 32 - 8 * (v74 & 0xFFFFFFE0);
          int8x16_t v88 = 0uLL;
          int8x16_t v89 = 0uLL;
          int8x16_t v90 = 0uLL;
          do
          {
            int8x16_t v91 = v78[-1];
            int8x16_t v92 = *v78;
            v78 += 2;
            int8x16_t v80 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v91, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v83, v18)), v80);
            int8x16_t v79 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v91, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v5, v18)), v79);
            int8x16_t v85 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v91, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v84, v18)), v85);
            int8x16_t v86 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v91, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v82, v18)), v86);
            int8x16_t v88 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v92, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v83, v20)), v88);
            int8x16_t v87 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v92, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v5, v20)), v87);
            int8x16_t v89 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v92, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v84, v20)), v89);
            int8x16_t v90 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v92, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v82, v20)), v90);
            int32x4_t v5 = vaddq_s32(v5, v21);
            int32x4_t v83 = vaddq_s32(v83, v21);
            int32x4_t v84 = vaddq_s32(v84, v21);
            int32x4_t v82 = vaddq_s32(v82, v21);
            v81 -= 32;
          }
          while (v81);
          int8x16_t v93 = vorrq_s8(vorrq_s8(vorrq_s8(v87, v79), vorrq_s8(v89, v85)), vorrq_s8(vorrq_s8(v88, v80), vorrq_s8(v90, v86)));
          int8x8_t v94 = vorr_s8(*(int8x8_t *)v93.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v93, v93, 8uLL));
          unsigned int v70 = v94.i32[0] | v94.i32[1];
          if (v74 == v77)
          {
            unsigned int v15 = *(unsigned int **)(a1 + 32);
            goto LABEL_68;
          }
          if ((v74 & 0x18) != 0) {
            goto LABEL_60;
          }
          int8x16_t v76 = (unsigned int *)((char *)v15 + v77);
        }
        else
        {
          unsigned int v70 = 0;
          unsigned int v75 = 32;
          int8x16_t v76 = v15;
        }
LABEL_65:
        unsigned int v106 = v75 - 8;
        do
        {
          int v107 = *(unsigned __int8 *)v76;
          int8x16_t v76 = (unsigned int *)((char *)v76 + 1);
          v70 |= v107 << v106;
          v106 -= 8;
        }
        while (v76 != (unsigned int *)v73);
LABEL_67:
        unsigned int v15 = *(unsigned int **)(a1 + 32);
LABEL_68:
        unint64_t v108 = ((unint64_t)v70 << -(char)v68) | v67;
        unint64_t v29 = HIDWORD(v108);
        unint64_t v12 = v108 << v36;
        int v13 = v68 + 32 - v36;
        if (v13 >= 0)
        {
LABEL_29:
          unsigned int v38 = (v29 >> -(char)v36) + 1;
          if (v38 >= v22) {
            goto LABEL_90;
          }
          goto LABEL_30;
        }
LABEL_69:
        if ((unint64_t)v15 < v14)
        {
          unsigned int v109 = *v15++;
          unsigned int v110 = bswap32(v109);
          goto LABEL_89;
        }
        int32x4_t v111 = *(unsigned __int8 **)(a1 + 32);
        if (v15 >= (unsigned int *)v111)
        {
          unsigned int v110 = 0;
          goto LABEL_89;
        }
        unint64_t v112 = v111 - (unsigned __int8 *)v15;
        if ((unint64_t)(v111 - (unsigned __int8 *)v15) >= 8)
        {
          if (v112 < 0x20)
          {
            unsigned int v110 = 0;
            uint64_t v115 = 0;
            unsigned int v113 = 32;
LABEL_81:
            int32x4_t v133 = vdupq_n_s32(v113);
            unsigned int v113 = 32 - 8 * (v112 & 0xFFFFFFF8);
            int8x16_t v114 = (unsigned int *)((char *)v15 + (v112 & 0xFFFFFFFFFFFFFFF8));
            int32x4_t v134 = vaddq_s32(v133, (int32x4_t)xmmword_262CDE540);
            int32x4_t v135 = vaddq_s32(v133, (int32x4_t)xmmword_262CDE550);
            int8x16_t v136 = 0uLL;
            int8x16_t v137 = (int8x16_t)v110;
            int v138 = (uint64_t *)((char *)v15 + v115);
            uint64_t v139 = v115 - (v112 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint64_t v140 = *v138++;
              v5.i64[0] = v140;
              uint32x4_t v141 = (uint32x4_t)vqtbl1q_s8((int8x16_t)v5, (int8x16_t)xmmword_262CDE570);
              int32x4_t v5 = (int32x4_t)vqtbl1q_s8((int8x16_t)v5, (int8x16_t)xmmword_262CDE580);
              int8x16_t v136 = vorrq_s8((int8x16_t)vshlq_u32(v141, (uint32x4_t)vaddq_s32(v134, v18)), v136);
              int8x16_t v137 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v135, v18)), v137);
              int32x4_t v135 = vaddq_s32(v135, v19);
              int32x4_t v134 = vaddq_s32(v134, v19);
              v139 += 8;
            }
            while (v139);
            int8x16_t v142 = vorrq_s8(v137, v136);
            int8x8_t v143 = vorr_s8(*(int8x8_t *)v142.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v142, v142, 8uLL));
            unsigned int v110 = v143.i32[0] | v143.i32[1];
            if (v112 == (v112 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_88;
            }
            goto LABEL_86;
          }
          uint64_t v115 = v112 & 0xFFFFFFFFFFFFFFE0;
          unsigned int v113 = 32 - 8 * (v112 & 0xFFFFFFE0);
          int32x4_t v116 = (int32x4_t)xmmword_262CDE530;
          int32x4_t v117 = (int32x4_t)xmmword_262CDE540;
          int32x4_t v118 = (int32x4_t)xmmword_262CDE550;
          int8x16_t v119 = 0uLL;
          int8x16_t v120 = 0uLL;
          int32x4_t v121 = (int32x4_t)xmmword_262CDE560;
          int8x16_t v122 = (int8x16_t *)(v15 + 4);
          unint64_t v123 = v112 & 0xFFFFFFFFFFFFFFE0;
          int32x4_t v5 = 0uLL;
          int8x16_t v124 = 0uLL;
          int8x16_t v125 = 0uLL;
          int8x16_t v126 = 0uLL;
          int8x16_t v127 = 0uLL;
          int8x16_t v128 = 0uLL;
          do
          {
            int8x16_t v129 = v122[-1];
            int8x16_t v130 = *v122;
            v122 += 2;
            int8x16_t v120 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v129, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v118, v18)), v120);
            int8x16_t v119 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v129, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v121, v18)), v119);
            int32x4_t v5 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v129, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v117, v18)), (int8x16_t)v5);
            int8x16_t v124 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v129, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v116, v18)), v124);
            int8x16_t v126 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v130, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v118, v20)), v126);
            int8x16_t v125 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v130, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v121, v20)), v125);
            int8x16_t v127 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v130, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v117, v20)), v127);
            int8x16_t v128 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v130, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v116, v20)), v128);
            int32x4_t v121 = vaddq_s32(v121, v21);
            int32x4_t v118 = vaddq_s32(v118, v21);
            int32x4_t v117 = vaddq_s32(v117, v21);
            int32x4_t v116 = vaddq_s32(v116, v21);
            v123 -= 32;
          }
          while (v123);
          int8x16_t v131 = vorrq_s8(vorrq_s8(vorrq_s8(v125, v119), vorrq_s8(v127, (int8x16_t)v5)), vorrq_s8(vorrq_s8(v126, v120), vorrq_s8(v128, v124)));
          int8x8_t v132 = vorr_s8(*(int8x8_t *)v131.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v131, v131, 8uLL));
          unsigned int v110 = v132.i32[0] | v132.i32[1];
          if (v112 == v115) {
            goto LABEL_88;
          }
          if ((v112 & 0x18) != 0) {
            goto LABEL_81;
          }
          int8x16_t v114 = (unsigned int *)((char *)v15 + v115);
        }
        else
        {
          unsigned int v110 = 0;
          unsigned int v113 = 32;
          int8x16_t v114 = v15;
        }
LABEL_86:
        unsigned int v144 = v113 - 8;
        do
        {
          int v145 = *(unsigned __int8 *)v114;
          int8x16_t v114 = (unsigned int *)((char *)v114 + 1);
          v110 |= v145 << v144;
          v144 -= 8;
        }
        while (v114 != (unsigned int *)v111);
LABEL_88:
        unsigned int v15 = *(unsigned int **)(a1 + 32);
LABEL_89:
        v12 |= (unint64_t)v110 << -(char)v13;
        v13 += 32;
        unsigned int v38 = (v29 >> -(char)v36) + 1;
        if (v38 >= v22)
        {
LABEL_90:
          int32x2_t v146 = vdup_lane_s32(*(int32x2_t *)&v28, 0);
          while (1)
          {
            if (v22 >= 8)
            {
              unsigned int v147 = v22 >> 3;
              do
              {
                *a2 = v146;
                a2[1] = v146;
                a2[2] = v146;
                a2[3] = v146;
                a2 += 4;
                --v147;
              }
              while (v147);
            }
            if ((v22 & 4) != 0)
            {
              *a2 = v146;
              a2[1] = v146;
              a2 += 2;
              if ((v22 & 2) == 0)
              {
LABEL_96:
                if (v22) {
                  goto LABEL_101;
                }
                goto LABEL_97;
              }
            }
            else if ((v22 & 2) == 0)
            {
              goto LABEL_96;
            }
            *a2++ = v146;
            if (v22)
            {
LABEL_101:
              a2->i32[0] = LODWORD(v28);
              if (!--v9) {
                return v17 == 0xFFFF;
              }
              goto LABEL_102;
            }
LABEL_97:
            if (!--v9) {
              return v17 == 0xFFFF;
            }
LABEL_102:
            v38 -= v22;
            unsigned int v23 = (int32x2_t *)((char *)v23 + v6);
            unsigned int v22 = v11;
            a2 = v23;
            if (v38 < v11)
            {
              a2 = v23;
              unsigned int v22 = v11;
              if (v38 >= 8) {
                goto LABEL_104;
              }
              goto LABEL_106;
            }
          }
        }
LABEL_30:
        if (v38 >= 8)
        {
LABEL_104:
          unsigned int v148 = v38 >> 3;
          int32x2_t v149 = vdup_lane_s32(*(int32x2_t *)&v28, 0);
          do
          {
            *a2 = v149;
            a2[1] = v149;
            a2[2] = v149;
            a2[3] = v149;
            a2 += 4;
            --v148;
          }
          while (v148);
        }
LABEL_106:
        if ((v38 & 4) != 0)
        {
          int32x2_t v150 = vdup_lane_s32(*(int32x2_t *)&v28, 0);
          *a2 = v150;
          a2[1] = v150;
          a2 += 2;
          if ((v38 & 2) == 0) {
            goto LABEL_108;
          }
LABEL_111:
          *a2++ = vdup_lane_s32(*(int32x2_t *)&v28, 0);
          v22 -= v38;
          if (v38) {
            goto LABEL_112;
          }
        }
        else
        {
          if ((v38 & 2) != 0) {
            goto LABEL_111;
          }
LABEL_108:
          v22 -= v38;
          if (v38)
          {
LABEL_112:
            a2->i32[0] = LODWORD(v28);
            a2 = (int32x2_t *)((char *)a2 + 4);
          }
        }
      }
      int v30 = v27 + 1;
      v12 <<= v30;
      v13 -= v30;
      if (v13 < 0)
      {
        if ((unint64_t)v15 < v14)
        {
          unsigned int v24 = *v15++;
          unsigned int v25 = bswap32(v24);
        }
        else
        {
          unint64_t v31 = *(unsigned __int8 **)(a1 + 32);
          if (v15 < (unsigned int *)v31)
          {
            unint64_t v32 = v31 - (unsigned __int8 *)v15;
            if ((unint64_t)(v31 - (unsigned __int8 *)v15) < 8)
            {
              unsigned int v25 = 0;
              unsigned int v33 = 32;
              unint64_t v34 = v15;
              goto LABEL_46;
            }
            if (v32 >= 0x20)
            {
              unint64_t v35 = v32 & 0xFFFFFFFFFFFFFFE0;
              unsigned int v33 = 32 - 8 * (v32 & 0xFFFFFFE0);
              int32x4_t v39 = (int32x4_t)xmmword_262CDE530;
              int32x4_t v40 = (int32x4_t)xmmword_262CDE540;
              int32x4_t v41 = (int32x4_t)xmmword_262CDE550;
              int8x16_t v42 = 0uLL;
              int8x16_t v43 = 0uLL;
              int32x4_t v44 = (int32x4_t)xmmword_262CDE560;
              int8x16_t v45 = (int8x16_t *)(v15 + 4);
              unint64_t v46 = v32 & 0xFFFFFFFFFFFFFFE0;
              int32x4_t v5 = 0uLL;
              int8x16_t v47 = 0uLL;
              int8x16_t v48 = 0uLL;
              int8x16_t v49 = 0uLL;
              int8x16_t v50 = 0uLL;
              int8x16_t v51 = 0uLL;
              do
              {
                int8x16_t v52 = v45[-1];
                int8x16_t v53 = *v45;
                v45 += 2;
                int8x16_t v43 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v52, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v41, v18)), v43);
                int8x16_t v42 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v52, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v44, v18)), v42);
                int32x4_t v5 = (int32x4_t)vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v52, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v40, v18)), (int8x16_t)v5);
                int8x16_t v47 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v52, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v39, v18)), v47);
                int8x16_t v49 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v53, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v41, v20)), v49);
                int8x16_t v48 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v53, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v44, v20)), v48);
                int8x16_t v50 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v53, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v40, v20)), v50);
                int8x16_t v51 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v53, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v39, v20)), v51);
                int32x4_t v44 = vaddq_s32(v44, v21);
                int32x4_t v41 = vaddq_s32(v41, v21);
                int32x4_t v40 = vaddq_s32(v40, v21);
                int32x4_t v39 = vaddq_s32(v39, v21);
                v46 -= 32;
              }
              while (v46);
              int8x16_t v54 = vorrq_s8(vorrq_s8(vorrq_s8(v48, v42), vorrq_s8(v50, (int8x16_t)v5)), vorrq_s8(vorrq_s8(v49, v43), vorrq_s8(v51, v47)));
              int8x8_t v55 = vorr_s8(*(int8x8_t *)v54.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v54, v54, 8uLL));
              unsigned int v25 = v55.i32[0] | v55.i32[1];
              if (v32 == v35) {
                goto LABEL_48;
              }
              if ((v32 & 0x18) == 0)
              {
                unint64_t v34 = (unsigned int *)((char *)v15 + v35);
LABEL_46:
                unsigned int v71 = v33 - 8;
                do
                {
                  int v72 = *(unsigned __int8 *)v34;
                  unint64_t v34 = (unsigned int *)((char *)v34 + 1);
                  v25 |= v72 << v71;
                  v71 -= 8;
                }
                while (v34 != (unsigned int *)v31);
LABEL_48:
                unsigned int v15 = *(unsigned int **)(a1 + 32);
                goto LABEL_10;
              }
            }
            else
            {
              unsigned int v25 = 0;
              unint64_t v35 = 0;
              unsigned int v33 = 32;
            }
            int32x4_t v56 = vdupq_n_s32(v33);
            unsigned int v33 = 32 - 8 * (v32 & 0xFFFFFFF8);
            unint64_t v34 = (unsigned int *)((char *)v15 + (v32 & 0xFFFFFFFFFFFFFFF8));
            int32x4_t v57 = vaddq_s32(v56, (int32x4_t)xmmword_262CDE540);
            int32x4_t v58 = vaddq_s32(v56, (int32x4_t)xmmword_262CDE550);
            int8x16_t v59 = 0uLL;
            int8x16_t v60 = (int8x16_t)v25;
            uint64_t v61 = (uint64_t *)((char *)v15 + v35);
            unint64_t v62 = v35 - (v32 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              uint64_t v63 = *v61++;
              v5.i64[0] = v63;
              uint32x4_t v64 = (uint32x4_t)vqtbl1q_s8((int8x16_t)v5, (int8x16_t)xmmword_262CDE570);
              int32x4_t v5 = (int32x4_t)vqtbl1q_s8((int8x16_t)v5, (int8x16_t)xmmword_262CDE580);
              int8x16_t v59 = vorrq_s8((int8x16_t)vshlq_u32(v64, (uint32x4_t)vaddq_s32(v57, v18)), v59);
              int8x16_t v60 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v5, (uint32x4_t)vaddq_s32(v58, v18)), v60);
              int32x4_t v58 = vaddq_s32(v58, v19);
              int32x4_t v57 = vaddq_s32(v57, v19);
              v62 += 8;
            }
            while (v62);
            int8x16_t v65 = vorrq_s8(v60, v59);
            int8x8_t v66 = vorr_s8(*(int8x8_t *)v65.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL));
            unsigned int v25 = v66.i32[0] | v66.i32[1];
            if (v32 == (v32 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_48;
            }
            goto LABEL_46;
          }
          unsigned int v25 = 0;
        }
LABEL_10:
        v12 |= (unint64_t)v25 << -(char)v13;
        v13 += 32;
      }
      a2->i32[0] = LODWORD(v28);
      a2 = (int32x2_t *)((char *)a2 + 4);
      --v22;
    }
    while (v22);
    if (--v9)
    {
      a2 = (int32x2_t *)((char *)v23 + v6);
      continue;
    }
    return v17 == 0xFFFF;
  }
}

uint64_t PixelWriter::PixelWriter(uint64_t a1, uint64_t a2, int a3, int a4, unsigned int a5, int a6)
{
  int v6 = a6;
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = a3;
  *(unsigned char *)(a1 + 12) = a6;
  *(unsigned char *)(a1 + 13) = 1;
  int v11 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 20) = 0;
  unint64_t v12 = (_DWORD *)(a1 + 20);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 28) = 0;
  if (v11 > 1953903667)
  {
    int v13 = 1999778102;
    if (v11 <= 2016686641)
    {
      if (v11 == 1953903668) {
        goto LABEL_21;
      }
      if (v11 == 1983000880) {
        goto LABEL_24;
      }
    }
    else
    {
      if (v11 == 2016698739 || v11 == 2016687156)
      {
        int v6 = 0;
        int v13 = 1999909174;
        goto LABEL_24;
      }
      if (v11 == 2016686642)
      {
        int v13 = 1966223670;
        goto LABEL_24;
      }
    }
    goto LABEL_70;
  }
  if (v11 <= 1937126451)
  {
    if (v11 == 1932812659) {
      goto LABEL_20;
    }
    if (v11 == 1937125938)
    {
      int v13 = 1983000886;
      goto LABEL_24;
    }
LABEL_70:
    if (a3 != 2) {
      goto LABEL_25;
    }
    if (v11 <= 1647719520)
    {
      if (v11 == 32 || v11 == 1111970369) {
        goto LABEL_210;
      }
      int v20 = 1378955371;
    }
    else if (v11 > 1848848433)
    {
      if (v11 == 1915892016) {
        goto LABEL_210;
      }
      int v20 = 1848848434;
    }
    else
    {
      if (v11 == 1647719521) {
        goto LABEL_210;
      }
      int v20 = 1815294002;
    }
    if (v11 != v20)
    {
LABEL_211:
      _DWORD *v12 = (0x10u >> a4) * PixelBuffer::getNumBytesPerPixelData(v11);
      goto LABEL_27;
    }
LABEL_210:
    int v11 = 1983000886;
    *(unsigned char *)(a1 + 13) = 0;
    *(_DWORD *)(a1 + 16) = 1983000886;
    goto LABEL_211;
  }
  if (v11 == 1937126452)
  {
LABEL_20:
    int v6 = 0;
    int v13 = 2033463606;
    goto LABEL_24;
  }
  if (v11 == 1949589875)
  {
LABEL_21:
    int v6 = 0;
    int v13 = 2050240822;
    goto LABEL_24;
  }
  if (v11 != 1953903154) {
    goto LABEL_70;
  }
  int v13 = 2050109750;
LABEL_24:
  *(unsigned char *)(a1 + 13) = 0;
  *(_DWORD *)(a1 + 16) = v13;
  int v11 = v13;
LABEL_25:
  _DWORD *v12 = (0x10u >> a4) * PixelBuffer::getNumBytesPerPixelData(v11);
  if (a3 == 3)
  {
    int v19 = *(_DWORD *)(a1 + 16);
    int v16 = (uint64_t (*)())from_444_to_v216_10bits_A<8,8,(AlphaOutputMethod)0,true>;
    int v17 = (uint64_t (*)())from_444_to_v216_10bits_A<8,8,(AlphaOutputMethod)0,false>;
    if (v19 <= 1966223669)
    {
      if (v19 <= 1647719520)
      {
        if (v19 <= 1111970368)
        {
          if (v19 == 32)
          {
            if (v6) {
              int32x4_t v18 = (uint64_t (*)())from_444_to_32ARGB<8,8,(AlphaOutputMethod)1,false>;
            }
            else {
              int32x4_t v18 = (uint64_t (*)())from_444_to_32ARGB<8,8,(AlphaOutputMethod)2,false>;
            }
            int v16 = (uint64_t (*)())from_444_to_32ARGB<8,8,(AlphaOutputMethod)2,true>;
            if (v6) {
              int v16 = (uint64_t (*)())from_444_to_32ARGB<8,8,(AlphaOutputMethod)1,true>;
            }
            goto LABEL_337;
          }
          if (v19 == 846624121)
          {
            switch(a4)
            {
              case 0:
                int v16 = (uint64_t (*)())from_444_to_2vuy<8,8,(AlphaOutputMethod)0,true>;
                int v17 = (uint64_t (*)())from_444_to_2vuy<8,8,(AlphaOutputMethod)0,false>;
                if (!a5) {
                  goto LABEL_122;
                }
                if (a5 == 1)
                {
                  int v16 = (uint64_t (*)())from_444_to_2vuy<8,4,(AlphaOutputMethod)0,true>;
                  int32x4_t v18 = (uint64_t (*)())from_444_to_2vuy<8,4,(AlphaOutputMethod)0,false>;
                  goto LABEL_337;
                }
                break;
              case 1:
                if (a5 < 3)
                {
                  uint64_t v21 = (int)a5;
                  int32x4_t v18 = off_270E10708[v21];
                  unsigned int v22 = off_270E10720;
                  goto LABEL_336;
                }
                break;
              case 2:
                if (a5 - 1 < 3)
                {
                  uint64_t v21 = (int)(a5 - 1);
                  int32x4_t v18 = off_270E10738[v21];
                  unsigned int v22 = off_270E10750;
                  goto LABEL_336;
                }
                break;
              case 3:
                int v16 = (uint64_t (*)())from_444_to_2vuy<1,2,(AlphaOutputMethod)0,true>;
                int v17 = (uint64_t (*)())from_444_to_2vuy<1,2,(AlphaOutputMethod)0,false>;
                if (a5 == 2) {
                  goto LABEL_122;
                }
                if (a5 == 3)
                {
                  int v16 = (uint64_t (*)())from_444_to_2vuy<1,1,(AlphaOutputMethod)0,true>;
                  int32x4_t v18 = (uint64_t (*)())from_444_to_2vuy<1,1,(AlphaOutputMethod)0,false>;
                  goto LABEL_337;
                }
                break;
              default:
                return a1;
            }
          }
          return a1;
        }
        if (v19 == 1111970369)
        {
          if (v6) {
            int32x4_t v18 = (uint64_t (*)())from_444_to_32BGRA<8,8,(AlphaOutputMethod)1,false>;
          }
          else {
            int32x4_t v18 = (uint64_t (*)())from_444_to_32BGRA<8,8,(AlphaOutputMethod)2,false>;
          }
          int v16 = (uint64_t (*)())from_444_to_32BGRA<8,8,(AlphaOutputMethod)2,true>;
          if (v6) {
            int v16 = (uint64_t (*)())from_444_to_32BGRA<8,8,(AlphaOutputMethod)1,true>;
          }
          goto LABEL_337;
        }
        if (v19 != 1378955371) {
          return a1;
        }
        int v16 = (uint64_t (*)())from_444_to_R10k<8,8,(AlphaOutputMethod)0,true>;
        int32x4_t v18 = (uint64_t (*)())from_444_to_R10k<8,8,(AlphaOutputMethod)0,false>;
      }
      else if (v19 <= 1915892015)
      {
        if (v19 == 1647719521)
        {
          if (v6) {
            int32x4_t v18 = (uint64_t (*)())from_444_to_b64a<8,8,(AlphaOutputMethod)1,false>;
          }
          else {
            int32x4_t v18 = (uint64_t (*)())from_444_to_b64a<8,8,(AlphaOutputMethod)2,false>;
          }
          int v16 = (uint64_t (*)())from_444_to_b64a<8,8,(AlphaOutputMethod)2,true>;
          if (v6) {
            int v16 = (uint64_t (*)())from_444_to_b64a<8,8,(AlphaOutputMethod)1,true>;
          }
          goto LABEL_337;
        }
        if (v19 != 1848848434) {
          return a1;
        }
        int v16 = (uint64_t (*)())from_444_to_n302<8,8,(AlphaOutputMethod)0,true>;
        int32x4_t v18 = (uint64_t (*)())from_444_to_n302<8,8,(AlphaOutputMethod)0,false>;
      }
      else
      {
        if (v19 != 1915892016)
        {
          if (v19 == 1916022840)
          {
            if (v6)
            {
              switch(a4)
              {
                case 0:
                  int v16 = (uint64_t (*)())from_444_to_r408<8,8,(AlphaOutputMethod)1,true>;
                  int v17 = (uint64_t (*)())from_444_to_r408<8,8,(AlphaOutputMethod)1,false>;
                  if (!a5) {
                    goto LABEL_122;
                  }
                  if (a5 == 1)
                  {
                    int v16 = (uint64_t (*)())from_444_to_r408<8,4,(AlphaOutputMethod)1,true>;
                    int32x4_t v18 = (uint64_t (*)())from_444_to_r408<8,4,(AlphaOutputMethod)1,false>;
                    goto LABEL_337;
                  }
                  break;
                case 1:
                  if (a5 < 3)
                  {
                    uint64_t v21 = (int)a5;
                    int32x4_t v18 = off_270E10828[v21];
                    unsigned int v22 = off_270E10840;
                    goto LABEL_336;
                  }
                  break;
                case 2:
                  if (a5 - 1 < 3)
                  {
                    uint64_t v21 = (int)(a5 - 1);
                    int32x4_t v18 = off_270E10858[v21];
                    unsigned int v22 = off_270E10870;
                    goto LABEL_336;
                  }
                  break;
                case 3:
                  int v16 = (uint64_t (*)())from_444_to_r408<1,2,(AlphaOutputMethod)1,true>;
                  int v17 = (uint64_t (*)())from_444_to_r408<1,2,(AlphaOutputMethod)1,false>;
                  if (a5 == 2) {
                    goto LABEL_122;
                  }
                  if (a5 == 3)
                  {
                    int v16 = (uint64_t (*)())from_444_to_r408<1,1,(AlphaOutputMethod)1,true>;
                    int32x4_t v18 = (uint64_t (*)())from_444_to_r408<1,1,(AlphaOutputMethod)1,false>;
                    goto LABEL_337;
                  }
                  break;
                default:
                  return a1;
              }
            }
            else
            {
              switch(a4)
              {
                case 0:
                  int v16 = (uint64_t (*)())from_444_to_r408<8,8,(AlphaOutputMethod)2,true>;
                  int v17 = (uint64_t (*)())from_444_to_r408<8,8,(AlphaOutputMethod)2,false>;
                  if (!a5) {
                    goto LABEL_122;
                  }
                  if (a5 == 1)
                  {
                    int v16 = (uint64_t (*)())from_444_to_r408<8,4,(AlphaOutputMethod)2,true>;
                    int32x4_t v18 = (uint64_t (*)())from_444_to_r408<8,4,(AlphaOutputMethod)2,false>;
                    goto LABEL_337;
                  }
                  break;
                case 1:
                  if (a5 < 3)
                  {
                    uint64_t v21 = (int)a5;
                    int32x4_t v18 = off_270E10888[v21];
                    unsigned int v22 = off_270E108A0;
                    goto LABEL_336;
                  }
                  break;
                case 2:
                  if (a5 - 1 < 3)
                  {
                    uint64_t v21 = (int)(a5 - 1);
                    int32x4_t v18 = off_270E108B8[v21];
                    unsigned int v22 = off_270E108D0;
                    goto LABEL_336;
                  }
                  break;
                case 3:
                  int v16 = (uint64_t (*)())from_444_to_r408<1,2,(AlphaOutputMethod)2,true>;
                  int v17 = (uint64_t (*)())from_444_to_r408<1,2,(AlphaOutputMethod)2,false>;
                  if (a5 == 2) {
                    goto LABEL_122;
                  }
                  if (a5 == 3)
                  {
                    int v16 = (uint64_t (*)())from_444_to_r408<1,1,(AlphaOutputMethod)2,true>;
                    int32x4_t v18 = (uint64_t (*)())from_444_to_r408<1,1,(AlphaOutputMethod)2,false>;
                    goto LABEL_337;
                  }
                  break;
                default:
                  return a1;
              }
            }
          }
          else if (v19 == 1916036716)
          {
            if (v6) {
              int32x4_t v18 = (uint64_t (*)())from_444_to_r4fl<8,8,(AlphaOutputMethod)1,false>;
            }
            else {
              int32x4_t v18 = (uint64_t (*)())from_444_to_r4fl<8,8,(AlphaOutputMethod)2,false>;
            }
            int v16 = (uint64_t (*)())from_444_to_r4fl<8,8,(AlphaOutputMethod)2,true>;
            if (v6) {
              int v16 = (uint64_t (*)())from_444_to_r4fl<8,8,(AlphaOutputMethod)1,true>;
            }
            goto LABEL_337;
          }
          return a1;
        }
        int v16 = (uint64_t (*)())from_444_to_r210<8,8,(AlphaOutputMethod)0,true>;
        int32x4_t v18 = (uint64_t (*)())from_444_to_r210<8,8,(AlphaOutputMethod)0,false>;
      }
      goto LABEL_337;
    }
    if (v19 > 1999909173)
    {
      if (v19 <= 2033463605)
      {
        if (v19 == 1999909174)
        {
          if (v6) {
            int32x4_t v18 = (uint64_t (*)())from_444_to_y416_10bits<8,8,(AlphaOutputMethod)1,false>;
          }
          else {
            int32x4_t v18 = (uint64_t (*)())from_444_to_y416_10bits<8,8,(AlphaOutputMethod)2,false>;
          }
          int v16 = (uint64_t (*)())from_444_to_y416_10bits<8,8,(AlphaOutputMethod)2,true>;
          if (v6) {
            int v16 = (uint64_t (*)())from_444_to_y416_10bits<8,8,(AlphaOutputMethod)1,true>;
          }
          goto LABEL_337;
        }
        if (v19 == 2033463352)
        {
          if (v6)
          {
            switch(a4)
            {
              case 0:
                int v16 = (uint64_t (*)())from_444_to_y408<8,8,(AlphaOutputMethod)1,true>;
                int v17 = (uint64_t (*)())from_444_to_y408<8,8,(AlphaOutputMethod)1,false>;
                if (!a5) {
                  goto LABEL_122;
                }
                if (a5 == 1)
                {
                  int v16 = (uint64_t (*)())from_444_to_y408<8,4,(AlphaOutputMethod)1,true>;
                  int32x4_t v18 = (uint64_t (*)())from_444_to_y408<8,4,(AlphaOutputMethod)1,false>;
                  goto LABEL_337;
                }
                break;
              case 1:
                if (a5 < 3)
                {
                  uint64_t v21 = (int)a5;
                  int32x4_t v18 = off_270E10768[v21];
                  unsigned int v22 = off_270E10780;
                  goto LABEL_336;
                }
                break;
              case 2:
                if (a5 - 1 < 3)
                {
                  uint64_t v21 = (int)(a5 - 1);
                  int32x4_t v18 = off_270E10798[v21];
                  unsigned int v22 = off_270E107B0;
                  goto LABEL_336;
                }
                break;
              case 3:
                int v16 = (uint64_t (*)())from_444_to_y408<1,2,(AlphaOutputMethod)1,true>;
                int v17 = (uint64_t (*)())from_444_to_y408<1,2,(AlphaOutputMethod)1,false>;
                if (a5 == 2) {
                  goto LABEL_122;
                }
                if (a5 == 3)
                {
                  int v16 = (uint64_t (*)())from_444_to_y408<1,1,(AlphaOutputMethod)1,true>;
                  int32x4_t v18 = (uint64_t (*)())from_444_to_y408<1,1,(AlphaOutputMethod)1,false>;
                  goto LABEL_337;
                }
                break;
              default:
                return a1;
            }
          }
          else
          {
            switch(a4)
            {
              case 0:
                int v16 = (uint64_t (*)())from_444_to_y408<8,8,(AlphaOutputMethod)2,true>;
                int v17 = (uint64_t (*)())from_444_to_y408<8,8,(AlphaOutputMethod)2,false>;
                if (!a5) {
                  goto LABEL_122;
                }
                if (a5 == 1)
                {
                  int v16 = (uint64_t (*)())from_444_to_y408<8,4,(AlphaOutputMethod)2,true>;
                  int32x4_t v18 = (uint64_t (*)())from_444_to_y408<8,4,(AlphaOutputMethod)2,false>;
                  goto LABEL_337;
                }
                break;
              case 1:
                if (a5 < 3)
                {
                  uint64_t v21 = (int)a5;
                  int32x4_t v18 = off_270E107C8[v21];
                  unsigned int v22 = off_270E107E0;
                  goto LABEL_336;
                }
                break;
              case 2:
                if (a5 - 1 < 3)
                {
                  uint64_t v21 = (int)(a5 - 1);
                  int32x4_t v18 = off_270E107F8[v21];
                  unsigned int v22 = off_270E10810;
                  goto LABEL_336;
                }
                break;
              case 3:
                int v16 = (uint64_t (*)())from_444_to_y408<1,2,(AlphaOutputMethod)2,true>;
                int v17 = (uint64_t (*)())from_444_to_y408<1,2,(AlphaOutputMethod)2,false>;
                if (a5 == 2) {
                  goto LABEL_122;
                }
                if (a5 == 3)
                {
                  int v16 = (uint64_t (*)())from_444_to_y408<1,1,(AlphaOutputMethod)2,true>;
                  int32x4_t v18 = (uint64_t (*)())from_444_to_y408<1,1,(AlphaOutputMethod)2,false>;
                  goto LABEL_337;
                }
                break;
              default:
                return a1;
            }
          }
        }
        return a1;
      }
      if (v19 == 2033463606)
      {
        if (v6)
        {
          switch(a4)
          {
            case 0:
              int v16 = (uint64_t (*)())from_444_to_y416<8,8,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>;
              int v17 = (uint64_t (*)())from_444_to_y416<8,8,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>;
              if (!a5) {
                goto LABEL_122;
              }
              if (a5 == 1)
              {
                int v16 = (uint64_t (*)())from_444_to_y416<8,4,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>;
                int32x4_t v18 = (uint64_t (*)())from_444_to_y416<8,4,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>;
                goto LABEL_337;
              }
              break;
            case 1:
              if (a5 < 3)
              {
                uint64_t v21 = (int)a5;
                int32x4_t v18 = off_270E10948[v21];
                unsigned int v22 = off_270E10960;
                goto LABEL_336;
              }
              break;
            case 2:
              if (a5 - 1 < 3)
              {
                uint64_t v21 = (int)(a5 - 1);
                int32x4_t v18 = off_270E10978[v21];
                unsigned int v22 = off_270E10990;
                goto LABEL_336;
              }
              break;
            case 3:
              int v16 = (uint64_t (*)())from_444_to_y416<1,2,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>;
              int v17 = (uint64_t (*)())from_444_to_y416<1,2,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>;
              if (a5 == 2) {
                goto LABEL_122;
              }
              if (a5 == 3)
              {
                int v16 = (uint64_t (*)())from_444_to_y416<1,1,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>;
                int32x4_t v18 = (uint64_t (*)())from_444_to_y416<1,1,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>;
                goto LABEL_337;
              }
              break;
            default:
              return a1;
          }
        }
        else
        {
          switch(a4)
          {
            case 0:
              int v16 = (uint64_t (*)())from_444_to_y416<8,8,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>;
              int v17 = (uint64_t (*)())from_444_to_y416<8,8,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>;
              if (!a5) {
                goto LABEL_122;
              }
              if (a5 == 1)
              {
                int v16 = (uint64_t (*)())from_444_to_y416<8,4,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>;
                int32x4_t v18 = (uint64_t (*)())from_444_to_y416<8,4,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>;
                goto LABEL_337;
              }
              break;
            case 1:
              if (a5 < 3)
              {
                uint64_t v21 = (int)a5;
                int32x4_t v18 = off_270E109A8[v21];
                unsigned int v22 = off_270E109C0;
                goto LABEL_336;
              }
              break;
            case 2:
              if (a5 - 1 < 3)
              {
                uint64_t v21 = (int)(a5 - 1);
                int32x4_t v18 = off_270E109D8[v21];
                unsigned int v22 = off_270E109F0;
                goto LABEL_336;
              }
              break;
            case 3:
              int v16 = (uint64_t (*)())from_444_to_y416<1,2,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>;
              int v17 = (uint64_t (*)())from_444_to_y416<1,2,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>;
              if (a5 == 2) {
                goto LABEL_122;
              }
              if (a5 == 3)
              {
                int v16 = (uint64_t (*)())from_444_to_y416<1,1,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>;
                int32x4_t v18 = (uint64_t (*)())from_444_to_y416<1,1,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>;
                goto LABEL_337;
              }
              break;
            default:
              return a1;
          }
        }
        return a1;
      }
      if (v19 != 2050109750)
      {
        if (v19 == 2050240822)
        {
          if (v6) {
            int32x4_t v18 = (uint64_t (*)())from_444_to_y416_12bits<8,8,(AlphaOutputMethod)1,false>;
          }
          else {
            int32x4_t v18 = (uint64_t (*)())from_444_to_y416_12bits<8,8,(AlphaOutputMethod)2,false>;
          }
          int v16 = (uint64_t (*)())from_444_to_y416_12bits<8,8,(AlphaOutputMethod)2,true>;
          if (v6) {
            int v16 = (uint64_t (*)())from_444_to_y416_12bits<8,8,(AlphaOutputMethod)1,true>;
          }
          goto LABEL_337;
        }
        return a1;
      }
      int v16 = (uint64_t (*)())from_444_to_v216_12bits<8,8,(AlphaOutputMethod)0,true>;
      int32x4_t v18 = (uint64_t (*)())from_444_to_v216_12bits<8,8,(AlphaOutputMethod)0,false>;
      goto LABEL_337;
    }
    if (v19 <= 1983131703)
    {
      if (v19 != 1966223670)
      {
        if (v19 == 1983000886)
        {
          switch(a4)
          {
            case 0:
              int v16 = (uint64_t (*)())from_444_to_v216<8,8,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>;
              int v17 = (uint64_t (*)())from_444_to_v216<8,8,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>;
              if (!a5) {
                goto LABEL_122;
              }
              if (a5 == 1)
              {
                int v16 = (uint64_t (*)())from_444_to_v216<8,4,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>;
                int32x4_t v18 = (uint64_t (*)())from_444_to_v216<8,4,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>;
                goto LABEL_337;
              }
              break;
            case 1:
              if (a5 < 3)
              {
                uint64_t v21 = (int)a5;
                int32x4_t v18 = off_270E108E8[v21];
                unsigned int v22 = off_270E10900;
                goto LABEL_336;
              }
              break;
            case 2:
              if (a5 - 1 < 3)
              {
                uint64_t v21 = (int)(a5 - 1);
                int32x4_t v18 = off_270E10918[v21];
                unsigned int v22 = off_270E10930;
LABEL_336:
                int v16 = v22[v21];
                goto LABEL_337;
              }
              break;
            case 3:
              int v16 = (uint64_t (*)())from_444_to_v216<1,2,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>;
              int v17 = (uint64_t (*)())from_444_to_v216<1,2,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>;
              if (a5 == 2) {
                goto LABEL_122;
              }
              if (a5 == 3)
              {
                int v16 = (uint64_t (*)())from_444_to_v216<1,1,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>;
                int32x4_t v18 = (uint64_t (*)())from_444_to_v216<1,1,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>;
                goto LABEL_337;
              }
              break;
            default:
              return a1;
          }
        }
        return a1;
      }
      int v16 = (uint64_t (*)())from_444_to_v216_10bits_B<8,8,(AlphaOutputMethod)0,true>;
      int32x4_t v18 = (uint64_t (*)())from_444_to_v216_10bits_B<8,8,(AlphaOutputMethod)0,false>;
      goto LABEL_337;
    }
    if (v19 == 1983131704)
    {
      if (v6) {
        int32x4_t v18 = (uint64_t (*)())from_444_to_v408<8,8,(AlphaOutputMethod)1,false>;
      }
      else {
        int32x4_t v18 = (uint64_t (*)())from_444_to_v408<8,8,(AlphaOutputMethod)2,false>;
      }
      int v16 = (uint64_t (*)())from_444_to_v408<8,8,(AlphaOutputMethod)2,true>;
      if (v6) {
        int v16 = (uint64_t (*)())from_444_to_v408<8,8,(AlphaOutputMethod)1,true>;
      }
      goto LABEL_337;
    }
    if (v19 != 1999778102) {
      return a1;
    }
    goto LABEL_122;
  }
  if (a3 != 2) {
    return a1;
  }
LABEL_27:
  int v15 = *(_DWORD *)(a1 + 16);
  int v16 = (uint64_t (*)())from_422_to_v216_10bits_A<8,8,(AlphaOutputMethod)0,true>;
  int v17 = (uint64_t (*)())from_422_to_v216_10bits_A<8,8,(AlphaOutputMethod)0,false>;
  if (v15 > 1999778101)
  {
    if (v15 > 2033463605)
    {
      if (v15 == 2033463606)
      {
        if (v6)
        {
          switch(a4)
          {
            case 0:
              int v16 = (uint64_t (*)())from_422_to_y416<8,8,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>;
              int v17 = (uint64_t (*)())from_422_to_y416<8,8,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>;
              if (!a5) {
                goto LABEL_122;
              }
              if (a5 == 1)
              {
                int v16 = (uint64_t (*)())from_422_to_y416<8,4,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>;
                int32x4_t v18 = (uint64_t (*)())from_422_to_y416<8,4,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>;
                goto LABEL_337;
              }
              break;
            case 1:
              if (a5 < 3)
              {
                uint64_t v21 = (int)a5;
                int32x4_t v18 = off_270E10648[v21];
                unsigned int v22 = off_270E10660;
                goto LABEL_336;
              }
              break;
            case 2:
              if (a5 - 1 < 3)
              {
                uint64_t v21 = (int)(a5 - 1);
                int32x4_t v18 = off_270E10678[v21];
                unsigned int v22 = off_270E10690;
                goto LABEL_336;
              }
              break;
            case 3:
              int v16 = (uint64_t (*)())from_422_to_y416<1,2,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>;
              int v17 = (uint64_t (*)())from_422_to_y416<1,2,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>;
              if (a5 == 2) {
                goto LABEL_122;
              }
              if (a5 == 3)
              {
                int v16 = (uint64_t (*)())from_422_to_y416<1,1,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>;
                int32x4_t v18 = (uint64_t (*)())from_422_to_y416<1,1,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>;
                goto LABEL_337;
              }
              break;
            default:
              return a1;
          }
        }
        else
        {
          switch(a4)
          {
            case 0:
              int v16 = (uint64_t (*)())from_422_to_y416<8,8,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>;
              int v17 = (uint64_t (*)())from_422_to_y416<8,8,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>;
              if (!a5) {
                goto LABEL_122;
              }
              if (a5 == 1)
              {
                int v16 = (uint64_t (*)())from_422_to_y416<8,4,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>;
                int32x4_t v18 = (uint64_t (*)())from_422_to_y416<8,4,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>;
                goto LABEL_337;
              }
              break;
            case 1:
              if (a5 < 3)
              {
                uint64_t v21 = (int)a5;
                int32x4_t v18 = off_270E106A8[v21];
                unsigned int v22 = off_270E106C0;
                goto LABEL_336;
              }
              break;
            case 2:
              if (a5 - 1 < 3)
              {
                uint64_t v21 = (int)(a5 - 1);
                int32x4_t v18 = off_270E106D8[v21];
                unsigned int v22 = off_270E106F0;
                goto LABEL_336;
              }
              break;
            case 3:
              int v16 = (uint64_t (*)())from_422_to_y416<1,2,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>;
              int v17 = (uint64_t (*)())from_422_to_y416<1,2,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>;
              if (a5 == 2) {
                goto LABEL_122;
              }
              if (a5 == 3)
              {
                int v16 = (uint64_t (*)())from_422_to_y416<1,1,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>;
                int32x4_t v18 = (uint64_t (*)())from_422_to_y416<1,1,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>;
                goto LABEL_337;
              }
              break;
            default:
              return a1;
          }
        }
        return a1;
      }
      if (v15 != 2050109750)
      {
        if (v15 == 2050240822)
        {
          if (v6) {
            int32x4_t v18 = (uint64_t (*)())from_422_to_y416_12bits<8,8,(AlphaOutputMethod)1,false>;
          }
          else {
            int32x4_t v18 = (uint64_t (*)())from_422_to_y416_12bits<8,8,(AlphaOutputMethod)2,false>;
          }
          int v16 = (uint64_t (*)())from_422_to_y416_12bits<8,8,(AlphaOutputMethod)2,true>;
          if (v6) {
            int v16 = (uint64_t (*)())from_422_to_y416_12bits<8,8,(AlphaOutputMethod)1,true>;
          }
          goto LABEL_337;
        }
        return a1;
      }
      int v16 = (uint64_t (*)())from_422_to_v216_12bits<8,8,(AlphaOutputMethod)0,true>;
      int32x4_t v18 = (uint64_t (*)())from_422_to_v216_12bits<8,8,(AlphaOutputMethod)0,false>;
      goto LABEL_337;
    }
    if (v15 != 1999778102)
    {
      if (v15 == 1999909174)
      {
        if (v6) {
          int32x4_t v18 = (uint64_t (*)())from_422_to_y416_10bits<8,8,(AlphaOutputMethod)1,false>;
        }
        else {
          int32x4_t v18 = (uint64_t (*)())from_422_to_y416_10bits<8,8,(AlphaOutputMethod)2,false>;
        }
        int v16 = (uint64_t (*)())from_422_to_y416_10bits<8,8,(AlphaOutputMethod)2,true>;
        if (v6) {
          int v16 = (uint64_t (*)())from_422_to_y416_10bits<8,8,(AlphaOutputMethod)1,true>;
        }
        goto LABEL_337;
      }
      if (v15 == 2033463352)
      {
        if (v6)
        {
          switch(a4)
          {
            case 0:
              int v16 = (uint64_t (*)())from_422_to_y408<8,8,(AlphaOutputMethod)1,true>;
              int v17 = (uint64_t (*)())from_422_to_y408<8,8,(AlphaOutputMethod)1,false>;
              if (!a5) {
                goto LABEL_122;
              }
              if (a5 == 1)
              {
                int v16 = (uint64_t (*)())from_422_to_y408<8,4,(AlphaOutputMethod)1,true>;
                int32x4_t v18 = (uint64_t (*)())from_422_to_y408<8,4,(AlphaOutputMethod)1,false>;
                goto LABEL_337;
              }
              break;
            case 1:
              if (a5 < 3)
              {
                uint64_t v21 = (int)a5;
                int32x4_t v18 = off_270E10468[v21];
                unsigned int v22 = off_270E10480;
                goto LABEL_336;
              }
              break;
            case 2:
              if (a5 - 1 < 3)
              {
                uint64_t v21 = (int)(a5 - 1);
                int32x4_t v18 = off_270E10498[v21];
                unsigned int v22 = off_270E104B0;
                goto LABEL_336;
              }
              break;
            case 3:
              int v16 = (uint64_t (*)())from_422_to_y408<1,2,(AlphaOutputMethod)1,true>;
              int v17 = (uint64_t (*)())from_422_to_y408<1,2,(AlphaOutputMethod)1,false>;
              if (a5 == 2) {
                goto LABEL_122;
              }
              if (a5 == 3)
              {
                int v16 = (uint64_t (*)())from_422_to_y408<1,1,(AlphaOutputMethod)1,true>;
                int32x4_t v18 = (uint64_t (*)())from_422_to_y408<1,1,(AlphaOutputMethod)1,false>;
                goto LABEL_337;
              }
              break;
            default:
              return a1;
          }
        }
        else
        {
          switch(a4)
          {
            case 0:
              int v16 = (uint64_t (*)())from_422_to_y408<8,8,(AlphaOutputMethod)2,true>;
              int v17 = (uint64_t (*)())from_422_to_y408<8,8,(AlphaOutputMethod)2,false>;
              if (!a5) {
                goto LABEL_122;
              }
              if (a5 == 1)
              {
                int v16 = (uint64_t (*)())from_422_to_y408<8,4,(AlphaOutputMethod)2,true>;
                int32x4_t v18 = (uint64_t (*)())from_422_to_y408<8,4,(AlphaOutputMethod)2,false>;
                goto LABEL_337;
              }
              break;
            case 1:
              if (a5 < 3)
              {
                uint64_t v21 = (int)a5;
                int32x4_t v18 = off_270E104C8[v21];
                unsigned int v22 = off_270E104E0;
                goto LABEL_336;
              }
              break;
            case 2:
              if (a5 - 1 < 3)
              {
                uint64_t v21 = (int)(a5 - 1);
                int32x4_t v18 = off_270E104F8[v21];
                unsigned int v22 = off_270E10510;
                goto LABEL_336;
              }
              break;
            case 3:
              int v16 = (uint64_t (*)())from_422_to_y408<1,2,(AlphaOutputMethod)2,true>;
              int v17 = (uint64_t (*)())from_422_to_y408<1,2,(AlphaOutputMethod)2,false>;
              if (a5 == 2) {
                goto LABEL_122;
              }
              if (a5 == 3)
              {
                int v16 = (uint64_t (*)())from_422_to_y408<1,1,(AlphaOutputMethod)2,true>;
                int32x4_t v18 = (uint64_t (*)())from_422_to_y408<1,1,(AlphaOutputMethod)2,false>;
                goto LABEL_337;
              }
              break;
            default:
              return a1;
          }
        }
      }
      return a1;
    }
LABEL_122:
    int32x4_t v18 = v17;
    goto LABEL_337;
  }
  if (v15 > 1966223669)
  {
    if (v15 != 1966223670)
    {
      if (v15 == 1983000886)
      {
        switch(a4)
        {
          case 0:
            int v16 = (uint64_t (*)())from_422_to_v216<8,8,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>;
            int v17 = (uint64_t (*)())from_422_to_v216<8,8,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>;
            if (!a5) {
              goto LABEL_122;
            }
            if (a5 == 1)
            {
              int v16 = (uint64_t (*)())from_422_to_v216<8,4,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>;
              int32x4_t v18 = (uint64_t (*)())from_422_to_v216<8,4,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>;
              goto LABEL_337;
            }
            break;
          case 1:
            if (a5 < 3)
            {
              uint64_t v21 = (int)a5;
              int32x4_t v18 = off_270E105E8[v21];
              unsigned int v22 = off_270E10600;
              goto LABEL_336;
            }
            break;
          case 2:
            if (a5 - 1 < 3)
            {
              uint64_t v21 = (int)(a5 - 1);
              int32x4_t v18 = off_270E10618[v21];
              unsigned int v22 = off_270E10630;
              goto LABEL_336;
            }
            break;
          case 3:
            int v16 = (uint64_t (*)())from_422_to_v216<1,2,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>;
            int v17 = (uint64_t (*)())from_422_to_v216<1,2,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>;
            if (a5 == 2) {
              goto LABEL_122;
            }
            if (a5 == 3)
            {
              int v16 = (uint64_t (*)())from_422_to_v216<1,1,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>;
              int32x4_t v18 = (uint64_t (*)())from_422_to_v216<1,1,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>;
              goto LABEL_337;
            }
            break;
          default:
            return a1;
        }
      }
      else if (v15 == 1983131704)
      {
        if (v6) {
          int32x4_t v18 = (uint64_t (*)())from_422_to_v408<8,8,(AlphaOutputMethod)1,false>;
        }
        else {
          int32x4_t v18 = (uint64_t (*)())from_422_to_v408<8,8,(AlphaOutputMethod)2,false>;
        }
        int v16 = (uint64_t (*)())from_422_to_v408<8,8,(AlphaOutputMethod)2,true>;
        if (v6) {
          int v16 = (uint64_t (*)())from_422_to_v408<8,8,(AlphaOutputMethod)1,true>;
        }
        goto LABEL_337;
      }
      return a1;
    }
    int v16 = (uint64_t (*)())from_422_to_v216_10bits_B<8,8,(AlphaOutputMethod)0,true>;
    int32x4_t v18 = (uint64_t (*)())from_422_to_v216_10bits_B<8,8,(AlphaOutputMethod)0,false>;
LABEL_337:
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v16;
    return a1;
  }
  switch(v15)
  {
    case 846624121:
      switch(a4)
      {
        case 0:
          int v16 = (uint64_t (*)())from_422_to_2vuy<8,8,(AlphaOutputMethod)0,true>;
          int v17 = (uint64_t (*)())from_422_to_2vuy<8,8,(AlphaOutputMethod)0,false>;
          if (!a5) {
            goto LABEL_122;
          }
          if (a5 == 1)
          {
            int v16 = (uint64_t (*)())from_422_to_2vuy<8,4,(AlphaOutputMethod)0,true>;
            int32x4_t v18 = (uint64_t (*)())from_422_to_2vuy<8,4,(AlphaOutputMethod)0,false>;
            goto LABEL_337;
          }
          break;
        case 1:
          if (a5 < 3)
          {
            uint64_t v21 = (int)a5;
            int32x4_t v18 = off_270E10408[v21];
            unsigned int v22 = off_270E10420;
            goto LABEL_336;
          }
          break;
        case 2:
          if (a5 - 1 < 3)
          {
            uint64_t v21 = (int)(a5 - 1);
            int32x4_t v18 = off_270E10438[v21];
            unsigned int v22 = off_270E10450;
            goto LABEL_336;
          }
          break;
        case 3:
          int v16 = (uint64_t (*)())from_422_to_2vuy<1,2,(AlphaOutputMethod)0,true>;
          int v17 = (uint64_t (*)())from_422_to_2vuy<1,2,(AlphaOutputMethod)0,false>;
          if (a5 == 2) {
            goto LABEL_122;
          }
          if (a5 == 3)
          {
            int v16 = (uint64_t (*)())from_422_to_2vuy<1,1,(AlphaOutputMethod)0,true>;
            int32x4_t v18 = (uint64_t (*)())from_422_to_2vuy<1,1,(AlphaOutputMethod)0,false>;
            goto LABEL_337;
          }
          break;
        default:
          return a1;
      }
      break;
    case 1916022840:
      if (v6)
      {
        switch(a4)
        {
          case 0:
            int v16 = (uint64_t (*)())from_422_to_r408<8,8,(AlphaOutputMethod)1,true>;
            int v17 = (uint64_t (*)())from_422_to_r408<8,8,(AlphaOutputMethod)1,false>;
            if (!a5) {
              goto LABEL_122;
            }
            if (a5 == 1)
            {
              int v16 = (uint64_t (*)())from_422_to_r408<8,4,(AlphaOutputMethod)1,true>;
              int v17 = (uint64_t (*)())from_422_to_r408<8,4,(AlphaOutputMethod)1,false>;
              goto LABEL_122;
            }
            break;
          case 1:
            if (a5 < 3)
            {
              uint64_t v21 = (int)a5;
              int32x4_t v18 = off_270E10528[v21];
              unsigned int v22 = off_270E10540;
              goto LABEL_336;
            }
            break;
          case 2:
            if (a5 - 1 < 3)
            {
              uint64_t v21 = (int)(a5 - 1);
              int32x4_t v18 = off_270E10558[v21];
              unsigned int v22 = off_270E10570;
              goto LABEL_336;
            }
            break;
          case 3:
            int v16 = (uint64_t (*)())from_422_to_r408<1,2,(AlphaOutputMethod)1,true>;
            int v17 = (uint64_t (*)())from_422_to_r408<1,2,(AlphaOutputMethod)1,false>;
            if (a5 == 2) {
              goto LABEL_122;
            }
            if (a5 == 3)
            {
              int v16 = (uint64_t (*)())from_422_to_r408<1,1,(AlphaOutputMethod)1,true>;
              int32x4_t v18 = (uint64_t (*)())from_422_to_r408<1,1,(AlphaOutputMethod)1,false>;
              goto LABEL_337;
            }
            break;
          default:
            return a1;
        }
      }
      else
      {
        switch(a4)
        {
          case 0:
            int v16 = (uint64_t (*)())from_422_to_r408<8,8,(AlphaOutputMethod)2,true>;
            int v17 = (uint64_t (*)())from_422_to_r408<8,8,(AlphaOutputMethod)2,false>;
            if (!a5) {
              goto LABEL_122;
            }
            if (a5 == 1)
            {
              int v16 = (uint64_t (*)())from_422_to_r408<8,4,(AlphaOutputMethod)2,true>;
              int32x4_t v18 = (uint64_t (*)())from_422_to_r408<8,4,(AlphaOutputMethod)2,false>;
              goto LABEL_337;
            }
            break;
          case 1:
            if (a5 < 3)
            {
              uint64_t v21 = (int)a5;
              int32x4_t v18 = off_270E10588[v21];
              unsigned int v22 = off_270E105A0;
              goto LABEL_336;
            }
            break;
          case 2:
            if (a5 - 1 < 3)
            {
              uint64_t v21 = (int)(a5 - 1);
              int32x4_t v18 = off_270E105B8[v21];
              unsigned int v22 = off_270E105D0;
              goto LABEL_336;
            }
            break;
          case 3:
            int v16 = (uint64_t (*)())from_422_to_r408<1,2,(AlphaOutputMethod)2,true>;
            int v17 = (uint64_t (*)())from_422_to_r408<1,2,(AlphaOutputMethod)2,false>;
            if (a5 == 2) {
              goto LABEL_122;
            }
            if (a5 == 3)
            {
              int v16 = (uint64_t (*)())from_422_to_r408<1,1,(AlphaOutputMethod)2,true>;
              int32x4_t v18 = (uint64_t (*)())from_422_to_r408<1,1,(AlphaOutputMethod)2,false>;
              goto LABEL_337;
            }
            break;
          default:
            return a1;
        }
      }
      break;
    case 1916036716:
      if (v6) {
        int32x4_t v18 = (uint64_t (*)())from_422_to_r4fl<8,8,(AlphaOutputMethod)1,false>;
      }
      else {
        int32x4_t v18 = (uint64_t (*)())from_422_to_r4fl<8,8,(AlphaOutputMethod)2,false>;
      }
      int v16 = (uint64_t (*)())from_422_to_r4fl<8,8,(AlphaOutputMethod)2,true>;
      if (v6) {
        int v16 = (uint64_t (*)())from_422_to_r4fl<8,8,(AlphaOutputMethod)1,true>;
      }
      goto LABEL_337;
  }
  return a1;
}

int8x16_t *from_422_to_2vuy<8,8,(AlphaOutputMethod)0,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int v20 = a2 + 8;
    uint64_t v21 = a2 + 32;
    unsigned int v22 = a2 + 40;
    int v24 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int v9 = (char *)result;
  do
  {
    int v10 = a2 + 1;
    int v11 = &result->i8[8 * a3];
    int64x2_t v12 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v6);
    int8x16_t v13 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6), v7), v8);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v12, (int8x16_t)vdupq_laneq_s64(v12, 1)), v7), v8);
    vst2_s8(v9, *(int8x8x2_t *)((char *)&v13 - 8));
    v9 += a3;
    result[1] = vzip2q_s8(v14, v13);
    CFIndex result = (int8x16_t *)v9;
    int64x2_t v15 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v6);
    int8x16_t v16 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6), v7), v8);
    int8x16_t v17 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v15, (int8x16_t)vdupq_laneq_s64(v15, 1)), v7), v8);
    vst2_s8(v11, *(int8x8x2_t *)((char *)&v16 - 8));
    v11 += 16;
    *(int8x16_t *)int v11 = vzip2q_s8(v17, v16);
    int v18 = v5 - 1;
    int v19 = v5 - 16;
    --v5;
    ++a2;
  }
  while (v19 > 1);
  int v20 = v10 + 8;
  uint64_t v21 = v10 + 32;
  unsigned int v22 = v10 + 40;
  if (a4 <= 8) {
    int v23 = 8;
  }
  else {
    int v23 = a4;
  }
  int v24 = v18 - v23;
  a2 = v10;
  if (v24 >= 1)
  {
LABEL_13:
    unsigned int v25 = result + 1;
    unsigned int v26 = v24 + 1;
    v27.i64[0] = 0x8080808080808080;
    v27.i64[1] = 0x8080808080808080;
    v28.i64[0] = 0x101010101010101;
    v28.i64[1] = 0x101010101010101;
    v29.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v29.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    do
    {
      int16x8_t v30 = *a2++;
      int16x8_t v31 = v30;
      i8 = v25[-1].i8;
      int16x8_t v33 = *v20++;
      int8x16_t v34 = vqmovn_high_s16(vqmovn_s16(v31), v33);
      int16x8_t v35 = *v21++;
      int16x8_t v36 = v35;
      int16x8_t v37 = *v22++;
      int64x2_t v38 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v36), v37), v27);
      int8x16_t v39 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v34, v27), v28), v29);
      int8x16_t v40 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v38, (int8x16_t)vdupq_laneq_s64(v38, 1)), v28), v29);
      vst2_s8(i8, *(int8x8x2_t *)((char *)&v39 - 8));
      *unsigned int v25 = vzip2q_s8(v40, v39);
      unsigned int v25 = (int8x16_t *)((char *)v25 + a3);
      --v26;
    }
    while (v26 > 1);
  }
  return result;
}

int8x16_t *from_422_to_2vuy<8,8,(AlphaOutputMethod)0,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int v20 = a2 + 8;
    uint64_t v21 = a2 + 32;
    unsigned int v22 = a2 + 40;
    int v24 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int v9 = (char *)result;
  do
  {
    int v10 = a2 + 1;
    int v11 = &result->i8[8 * a3];
    int64x2_t v12 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v6);
    int8x16_t v13 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6), v7), v8);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v12, (int8x16_t)vdupq_laneq_s64(v12, 1)), v7), v8);
    vst2_s8(v9, *(int8x8x2_t *)((char *)&v13 - 8));
    v9 += a3;
    result[1] = vzip2q_s8(v14, v13);
    CFIndex result = (int8x16_t *)v9;
    int64x2_t v15 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v6);
    int8x16_t v16 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6), v7), v8);
    int8x16_t v17 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v15, (int8x16_t)vdupq_laneq_s64(v15, 1)), v7), v8);
    vst2_s8(v11, *(int8x8x2_t *)((char *)&v16 - 8));
    v11 += 16;
    *(int8x16_t *)int v11 = vzip2q_s8(v17, v16);
    int v18 = v5 - 1;
    int v19 = v5 - 16;
    --v5;
    ++a2;
  }
  while (v19 > 1);
  int v20 = v10 + 8;
  uint64_t v21 = v10 + 32;
  unsigned int v22 = v10 + 40;
  if (a4 <= 8) {
    int v23 = 8;
  }
  else {
    int v23 = a4;
  }
  int v24 = v18 - v23;
  a2 = v10;
  if (v24 >= 1)
  {
LABEL_13:
    unsigned int v25 = result + 1;
    unsigned int v26 = v24 + 1;
    v27.i64[0] = 0x8080808080808080;
    v27.i64[1] = 0x8080808080808080;
    v28.i64[0] = 0x101010101010101;
    v28.i64[1] = 0x101010101010101;
    v29.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v29.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    do
    {
      int16x8_t v30 = *a2++;
      int16x8_t v31 = v30;
      i8 = v25[-1].i8;
      int16x8_t v33 = *v20++;
      int8x16_t v34 = vqmovn_high_s16(vqmovn_s16(v31), v33);
      int16x8_t v35 = *v21++;
      int16x8_t v36 = v35;
      int16x8_t v37 = *v22++;
      int64x2_t v38 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v36), v37), v27);
      int8x16_t v39 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v34, v27), v28), v29);
      int8x16_t v40 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v38, (int8x16_t)vdupq_laneq_s64(v38, 1)), v28), v29);
      vst2_s8(i8, *(int8x8x2_t *)((char *)&v39 - 8));
      *unsigned int v25 = vzip2q_s8(v40, v39);
      unsigned int v25 = (int8x16_t *)((char *)v25 + a3);
      --v26;
    }
    while (v26 > 1);
  }
  return result;
}

int8x16_t *from_422_to_2vuy<8,4,(AlphaOutputMethod)0,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 4) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 4;
  }
  if (!v4)
  {
    int v20 = a2 + 4;
    uint64_t v21 = a2 + 16;
    unsigned int v22 = a2 + 20;
    int v24 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 4;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int v9 = (char *)result;
  do
  {
    int v10 = a2 + 1;
    int v11 = &result->i8[4 * a3];
    int64x2_t v12 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), v6);
    int8x16_t v13 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v6), v7), v8);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v12, (int8x16_t)vdupq_laneq_s64(v12, 1)), v7), v8);
    vst2_s8(v9, *(int8x8x2_t *)((char *)&v13 - 8));
    v9 += a3;
    result[1] = vzip2q_s8(v14, v13);
    CFIndex result = (int8x16_t *)v9;
    int64x2_t v15 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), v6);
    int8x16_t v16 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v6), v7), v8);
    int8x16_t v17 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v15, (int8x16_t)vdupq_laneq_s64(v15, 1)), v7), v8);
    vst2_s8(v11, *(int8x8x2_t *)((char *)&v16 - 8));
    v11 += 16;
    *(int8x16_t *)int v11 = vzip2q_s8(v17, v16);
    int v18 = v5 - 1;
    int v19 = v5 - 8;
    --v5;
    ++a2;
  }
  while (v19 > 1);
  int v20 = v10 + 4;
  uint64_t v21 = v10 + 16;
  unsigned int v22 = v10 + 20;
  if (a4 <= 4) {
    int v23 = 4;
  }
  else {
    int v23 = a4;
  }
  int v24 = v18 - v23;
  a2 = v10;
  if (v24 >= 1)
  {
LABEL_13:
    unsigned int v25 = result + 1;
    unsigned int v26 = v24 + 1;
    v27.i64[0] = 0x8080808080808080;
    v27.i64[1] = 0x8080808080808080;
    v28.i64[0] = 0x101010101010101;
    v28.i64[1] = 0x101010101010101;
    v29.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v29.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    do
    {
      int16x8_t v30 = *a2++;
      int16x8_t v31 = v30;
      i8 = v25[-1].i8;
      int16x8_t v33 = *v20++;
      int8x16_t v34 = vqmovn_high_s16(vqmovn_s16(v31), v33);
      int16x8_t v35 = *v21++;
      int16x8_t v36 = v35;
      int16x8_t v37 = *v22++;
      int64x2_t v38 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v36), v37), v27);
      int8x16_t v39 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v34, v27), v28), v29);
      int8x16_t v40 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v38, (int8x16_t)vdupq_laneq_s64(v38, 1)), v28), v29);
      vst2_s8(i8, *(int8x8x2_t *)((char *)&v39 - 8));
      *unsigned int v25 = vzip2q_s8(v40, v39);
      unsigned int v25 = (int8x16_t *)((char *)v25 + a3);
      --v26;
    }
    while (v26 > 1);
  }
  return result;
}

int8x16_t *from_422_to_2vuy<8,4,(AlphaOutputMethod)0,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 4) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 4;
  }
  if (!v4)
  {
    int v20 = a2 + 4;
    uint64_t v21 = a2 + 16;
    unsigned int v22 = a2 + 20;
    int v24 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 4;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int v9 = (char *)result;
  do
  {
    int v10 = a2 + 1;
    int v11 = &result->i8[4 * a3];
    int64x2_t v12 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), v6);
    int8x16_t v13 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v6), v7), v8);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v12, (int8x16_t)vdupq_laneq_s64(v12, 1)), v7), v8);
    vst2_s8(v9, *(int8x8x2_t *)((char *)&v13 - 8));
    v9 += a3;
    result[1] = vzip2q_s8(v14, v13);
    CFIndex result = (int8x16_t *)v9;
    int64x2_t v15 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), v6);
    int8x16_t v16 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v6), v7), v8);
    int8x16_t v17 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v15, (int8x16_t)vdupq_laneq_s64(v15, 1)), v7), v8);
    vst2_s8(v11, *(int8x8x2_t *)((char *)&v16 - 8));
    v11 += 16;
    *(int8x16_t *)int v11 = vzip2q_s8(v17, v16);
    int v18 = v5 - 1;
    int v19 = v5 - 8;
    --v5;
    ++a2;
  }
  while (v19 > 1);
  int v20 = v10 + 4;
  uint64_t v21 = v10 + 16;
  unsigned int v22 = v10 + 20;
  if (a4 <= 4) {
    int v23 = 4;
  }
  else {
    int v23 = a4;
  }
  int v24 = v18 - v23;
  a2 = v10;
  if (v24 >= 1)
  {
LABEL_13:
    unsigned int v25 = result + 1;
    unsigned int v26 = v24 + 1;
    v27.i64[0] = 0x8080808080808080;
    v27.i64[1] = 0x8080808080808080;
    v28.i64[0] = 0x101010101010101;
    v28.i64[1] = 0x101010101010101;
    v29.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v29.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    do
    {
      int16x8_t v30 = *a2++;
      int16x8_t v31 = v30;
      i8 = v25[-1].i8;
      int16x8_t v33 = *v20++;
      int8x16_t v34 = vqmovn_high_s16(vqmovn_s16(v31), v33);
      int16x8_t v35 = *v21++;
      int16x8_t v36 = v35;
      int16x8_t v37 = *v22++;
      int64x2_t v38 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v36), v37), v27);
      int8x16_t v39 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v34, v27), v28), v29);
      int8x16_t v40 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v38, (int8x16_t)vdupq_laneq_s64(v38, 1)), v28), v29);
      vst2_s8(i8, *(int8x8x2_t *)((char *)&v39 - 8));
      *unsigned int v25 = vzip2q_s8(v40, v39);
      unsigned int v25 = (int8x16_t *)((char *)v25 + a3);
      --v26;
    }
    while (v26 > 1);
  }
  return result;
}

double from_422_to_2vuy<4,8,(AlphaOutputMethod)0,false>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = 8 * a3;
  if (a4 <= 8) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 8;
  }
  if (v7 < 2)
  {
    unsigned int v25 = a2 + 4;
    unsigned int v26 = a2 + 8;
    int8x16_t v27 = a2 + 12;
    uint8x16_t v28 = a2 + 16;
    uint8x16_t v29 = a2 + 20;
    int16x8_t v30 = a2 + 24;
    int16x8_t v31 = a2 + 28;
    unint64_t v32 = &a1[v6];
    int v34 = a4 - v7;
    if (!a4) {
      return *(double *)a5.i64;
    }
LABEL_13:
    if (v7 >= 1)
    {
      a5 = vqmovn_high_s16(vqmovn_s16(*v26), *v27);
      v35.i64[0] = 0x8080808080808080;
      v35.i64[1] = 0x8080808080808080;
      int64x2_t v36 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v30), *v31), v35);
      v56.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)*(_OWORD *)&vzip1q_s8((int8x16_t)v36, (int8x16_t)vdupq_laneq_s64(v36, 1)), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
      *(uint8x8_t *)a5.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a5, vrev64q_s32((int32x4_t)a5)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
      v56.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a5.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
      vst2_s8(v32, v56);
    }
    if (v34 <= 1)
    {
      int8x16_t v40 = a1;
      if (v34 != 1) {
        return *(double *)a5.i64;
      }
    }
    else
    {
      a5.i16[0] = -32640;
      a5.i8[2] = 0x80;
      a5.i8[3] = 0x80;
      a5.i8[4] = 0x80;
      a5.i8[5] = 0x80;
      a5.i8[6] = 0x80;
      a5.i8[7] = 0x80;
      a5.i8[8] = 0x80;
      a5.i8[9] = 0x80;
      a5.i8[10] = 0x80;
      a5.i8[11] = 0x80;
      a5.i8[12] = 0x80;
      a5.i8[13] = 0x80;
      a5.i8[14] = 0x80;
      a5.i8[15] = 0x80;
      v38.i64[0] = 0x101010101010101;
      v38.i64[1] = 0x101010101010101;
      v39.i64[0] = 0xFEFEFEFEFEFEFEFELL;
      v39.i64[1] = 0xFEFEFEFEFEFEFEFELL;
      int8x16_t v40 = a1;
      do
      {
        int16x8_t v41 = *a2++;
        int16x8_t v42 = v41;
        int16x8_t v43 = *v25++;
        int32x4_t v44 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(v42), v43);
        int16x8_t v45 = *v28++;
        int16x8_t v46 = v45;
        int16x8_t v47 = *v29++;
        int64x2_t v48 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v46), v47), a5);
        int8x16_t v49 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v44, vrev64q_s32(v44)), a5), v38), v39);
        int8x16_t v50 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v48, (int8x16_t)vdupq_laneq_s64(v48, 1)), v38), v39);
        vst2_s8(v40, *(int8x8x2_t *)((char *)&v49 - 8));
        uint64_t v37 = 2 * v5;
        v40 += v37;
        *(int8x16_t *)&a1[v5] = vzip2q_s8(v50, v49);
        int v51 = v34 - 2;
        a1 = v40;
        BOOL v52 = v34 > 3;
        v34 -= 2;
      }
      while (v52);
      if (v51 != 1) {
        return *(double *)a5.i64;
      }
    }
    a5 = vqmovn_high_s16(vqmovn_s16(*a2), *v25);
    v53.i64[0] = 0x8080808080808080;
    v53.i64[1] = 0x8080808080808080;
    int64x2_t v54 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v28), *v29), v53);
    v57.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)*(_OWORD *)&vzip1q_s8((int8x16_t)v54, (int8x16_t)vdupq_laneq_s64(v54, 1)), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    *(uint8x8_t *)a5.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a5, vrev64q_s32((int32x4_t)a5)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
    v57.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a5.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    vst2_s8(v40, v57);
    return *(double *)a5.i64;
  }
  a5.i16[0] = -32640;
  a5.i8[2] = 0x80;
  a5.i8[3] = 0x80;
  a5.i8[4] = 0x80;
  a5.i8[5] = 0x80;
  a5.i8[6] = 0x80;
  a5.i8[7] = 0x80;
  a5.i8[8] = 0x80;
  a5.i8[9] = 0x80;
  a5.i8[10] = 0x80;
  a5.i8[11] = 0x80;
  a5.i8[12] = 0x80;
  a5.i8[13] = 0x80;
  a5.i8[14] = 0x80;
  a5.i8[15] = 0x80;
  v9.i64[0] = 0x101010101010101;
  v9.i64[1] = 0x101010101010101;
  v10.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v10.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int v11 = a4;
  do
  {
    int64x2_t v12 = a2 + 1;
    int32x4_t v13 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[4]);
    int64x2_t v14 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), a5);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v13, vrev64q_s32(v13)), a5), v9), v10);
    int8x16_t v16 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v14, (int8x16_t)vdupq_laneq_s64(v14, 1)), v9), v10);
    int8x16_t v17 = a1;
    vst2_s8(v17, *(int8x8x2_t *)((char *)&v15 - 8));
    uint64_t v8 = 9 * a3;
    int v18 = (int8x16_t *)&v17[v8];
    *(int8x16_t *)&a1[a3] = vzip2q_s8(v16, v15);
    int v19 = &a1[v6];
    a1 += 2 * a3;
    int32x4_t v20 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]);
    int64x2_t v21 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), a5);
    int8x16_t v22 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v20, vrev64q_s32(v20)), a5), v9), v10);
    int8x16_t v23 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v21, (int8x16_t)vdupq_laneq_s64(v21, 1)), v9), v10);
    vst2_s8(v19, *(int8x8x2_t *)((char *)&v22 - 8));
    int8x16_t *v18 = vzip2q_s8(v23, v22);
    int v24 = v11 - 2;
    LODWORD(v18) = v11 - 8;
    v11 -= 2;
    ++a2;
  }
  while (v18 > 3);
  unsigned int v25 = v12 + 4;
  unsigned int v26 = v12 + 8;
  int8x16_t v27 = v12 + 12;
  uint8x16_t v28 = v12 + 16;
  uint8x16_t v29 = v12 + 20;
  int16x8_t v30 = v12 + 24;
  int16x8_t v31 = v12 + 28;
  unint64_t v32 = &a1[v6];
  int v7 = v24 - 8;
  if (a4 <= 8) {
    int v33 = 8;
  }
  else {
    int v33 = a4;
  }
  int v34 = v24 - v33 + 8;
  a2 = v12;
  if (v34 + v7) {
    goto LABEL_13;
  }
  return *(double *)a5.i64;
}

double from_422_to_2vuy<4,8,(AlphaOutputMethod)0,true>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = 8 * a3;
  if (a4 <= 8) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 8;
  }
  if (v7 < 2)
  {
    unsigned int v25 = a2 + 4;
    unsigned int v26 = a2 + 8;
    int8x16_t v27 = a2 + 12;
    uint8x16_t v28 = a2 + 16;
    uint8x16_t v29 = a2 + 20;
    int16x8_t v30 = a2 + 24;
    int16x8_t v31 = a2 + 28;
    unint64_t v32 = &a1[v6];
    int v34 = a4 - v7;
    if (!a4) {
      return *(double *)a5.i64;
    }
LABEL_13:
    if (v7 >= 1)
    {
      a5 = vqmovn_high_s16(vqmovn_s16(*v26), *v27);
      v35.i64[0] = 0x8080808080808080;
      v35.i64[1] = 0x8080808080808080;
      int64x2_t v36 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v30), *v31), v35);
      v56.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)*(_OWORD *)&vzip1q_s8((int8x16_t)v36, (int8x16_t)vdupq_laneq_s64(v36, 1)), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
      *(uint8x8_t *)a5.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a5, vrev64q_s32((int32x4_t)a5)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
      v56.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a5.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
      vst2_s8(v32, v56);
    }
    if (v34 <= 1)
    {
      int8x16_t v40 = a1;
      if (v34 != 1) {
        return *(double *)a5.i64;
      }
    }
    else
    {
      a5.i16[0] = -32640;
      a5.i8[2] = 0x80;
      a5.i8[3] = 0x80;
      a5.i8[4] = 0x80;
      a5.i8[5] = 0x80;
      a5.i8[6] = 0x80;
      a5.i8[7] = 0x80;
      a5.i8[8] = 0x80;
      a5.i8[9] = 0x80;
      a5.i8[10] = 0x80;
      a5.i8[11] = 0x80;
      a5.i8[12] = 0x80;
      a5.i8[13] = 0x80;
      a5.i8[14] = 0x80;
      a5.i8[15] = 0x80;
      v38.i64[0] = 0x101010101010101;
      v38.i64[1] = 0x101010101010101;
      v39.i64[0] = 0xFEFEFEFEFEFEFEFELL;
      v39.i64[1] = 0xFEFEFEFEFEFEFEFELL;
      int8x16_t v40 = a1;
      do
      {
        int16x8_t v41 = *a2++;
        int16x8_t v42 = v41;
        int16x8_t v43 = *v25++;
        int32x4_t v44 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(v42), v43);
        int16x8_t v45 = *v28++;
        int16x8_t v46 = v45;
        int16x8_t v47 = *v29++;
        int64x2_t v48 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v46), v47), a5);
        int8x16_t v49 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v44, vrev64q_s32(v44)), a5), v38), v39);
        int8x16_t v50 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v48, (int8x16_t)vdupq_laneq_s64(v48, 1)), v38), v39);
        vst2_s8(v40, *(int8x8x2_t *)((char *)&v49 - 8));
        uint64_t v37 = 2 * v5;
        v40 += v37;
        *(int8x16_t *)&a1[v5] = vzip2q_s8(v50, v49);
        int v51 = v34 - 2;
        a1 = v40;
        BOOL v52 = v34 > 3;
        v34 -= 2;
      }
      while (v52);
      if (v51 != 1) {
        return *(double *)a5.i64;
      }
    }
    a5 = vqmovn_high_s16(vqmovn_s16(*a2), *v25);
    v53.i64[0] = 0x8080808080808080;
    v53.i64[1] = 0x8080808080808080;
    int64x2_t v54 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v28), *v29), v53);
    v57.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)*(_OWORD *)&vzip1q_s8((int8x16_t)v54, (int8x16_t)vdupq_laneq_s64(v54, 1)), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    *(uint8x8_t *)a5.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a5, vrev64q_s32((int32x4_t)a5)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
    v57.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a5.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    vst2_s8(v40, v57);
    return *(double *)a5.i64;
  }
  a5.i16[0] = -32640;
  a5.i8[2] = 0x80;
  a5.i8[3] = 0x80;
  a5.i8[4] = 0x80;
  a5.i8[5] = 0x80;
  a5.i8[6] = 0x80;
  a5.i8[7] = 0x80;
  a5.i8[8] = 0x80;
  a5.i8[9] = 0x80;
  a5.i8[10] = 0x80;
  a5.i8[11] = 0x80;
  a5.i8[12] = 0x80;
  a5.i8[13] = 0x80;
  a5.i8[14] = 0x80;
  a5.i8[15] = 0x80;
  v9.i64[0] = 0x101010101010101;
  v9.i64[1] = 0x101010101010101;
  v10.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v10.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int v11 = a4;
  do
  {
    int64x2_t v12 = a2 + 1;
    int32x4_t v13 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[4]);
    int64x2_t v14 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), a5);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v13, vrev64q_s32(v13)), a5), v9), v10);
    int8x16_t v16 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v14, (int8x16_t)vdupq_laneq_s64(v14, 1)), v9), v10);
    int8x16_t v17 = a1;
    vst2_s8(v17, *(int8x8x2_t *)((char *)&v15 - 8));
    uint64_t v8 = 9 * a3;
    int v18 = (int8x16_t *)&v17[v8];
    *(int8x16_t *)&a1[a3] = vzip2q_s8(v16, v15);
    int v19 = &a1[v6];
    a1 += 2 * a3;
    int32x4_t v20 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]);
    int64x2_t v21 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), a5);
    int8x16_t v22 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v20, vrev64q_s32(v20)), a5), v9), v10);
    int8x16_t v23 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v21, (int8x16_t)vdupq_laneq_s64(v21, 1)), v9), v10);
    vst2_s8(v19, *(int8x8x2_t *)((char *)&v22 - 8));
    int8x16_t *v18 = vzip2q_s8(v23, v22);
    int v24 = v11 - 2;
    LODWORD(v18) = v11 - 8;
    v11 -= 2;
    ++a2;
  }
  while (v18 > 3);
  unsigned int v25 = v12 + 4;
  unsigned int v26 = v12 + 8;
  int8x16_t v27 = v12 + 12;
  uint8x16_t v28 = v12 + 16;
  uint8x16_t v29 = v12 + 20;
  int16x8_t v30 = v12 + 24;
  int16x8_t v31 = v12 + 28;
  unint64_t v32 = &a1[v6];
  int v7 = v24 - 8;
  if (a4 <= 8) {
    int v33 = 8;
  }
  else {
    int v33 = a4;
  }
  int v34 = v24 - v33 + 8;
  a2 = v12;
  if (v34 + v7) {
    goto LABEL_13;
  }
  return *(double *)a5.i64;
}

double from_422_to_2vuy<4,4,(AlphaOutputMethod)0,false>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = 4 * a3;
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (v7 < 2)
  {
    unsigned int v25 = a2 + 2;
    unsigned int v26 = a2 + 4;
    int8x16_t v27 = a2 + 6;
    uint8x16_t v28 = a2 + 8;
    uint8x16_t v29 = a2 + 10;
    int16x8_t v30 = a2 + 12;
    int16x8_t v31 = a2 + 14;
    unint64_t v32 = &a1[v6];
    int v34 = a4 - v7;
    if (!a4) {
      return *(double *)a5.i64;
    }
LABEL_13:
    if (v7 >= 1)
    {
      a5 = vqmovn_high_s16(vqmovn_s16(*v26), *v27);
      v35.i64[0] = 0x8080808080808080;
      v35.i64[1] = 0x8080808080808080;
      int64x2_t v36 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v30), *v31), v35);
      v56.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)*(_OWORD *)&vzip1q_s8((int8x16_t)v36, (int8x16_t)vdupq_laneq_s64(v36, 1)), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
      *(uint8x8_t *)a5.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a5, vrev64q_s32((int32x4_t)a5)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
      v56.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a5.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
      vst2_s8(v32, v56);
    }
    if (v34 <= 1)
    {
      int8x16_t v40 = a1;
      if (v34 != 1) {
        return *(double *)a5.i64;
      }
    }
    else
    {
      a5.i16[0] = -32640;
      a5.i8[2] = 0x80;
      a5.i8[3] = 0x80;
      a5.i8[4] = 0x80;
      a5.i8[5] = 0x80;
      a5.i8[6] = 0x80;
      a5.i8[7] = 0x80;
      a5.i8[8] = 0x80;
      a5.i8[9] = 0x80;
      a5.i8[10] = 0x80;
      a5.i8[11] = 0x80;
      a5.i8[12] = 0x80;
      a5.i8[13] = 0x80;
      a5.i8[14] = 0x80;
      a5.i8[15] = 0x80;
      v38.i64[0] = 0x101010101010101;
      v38.i64[1] = 0x101010101010101;
      v39.i64[0] = 0xFEFEFEFEFEFEFEFELL;
      v39.i64[1] = 0xFEFEFEFEFEFEFEFELL;
      int8x16_t v40 = a1;
      do
      {
        int16x8_t v41 = *a2++;
        int16x8_t v42 = v41;
        int16x8_t v43 = *v25++;
        int32x4_t v44 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(v42), v43);
        int16x8_t v45 = *v28++;
        int16x8_t v46 = v45;
        int16x8_t v47 = *v29++;
        int64x2_t v48 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v46), v47), a5);
        int8x16_t v49 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v44, vrev64q_s32(v44)), a5), v38), v39);
        int8x16_t v50 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v48, (int8x16_t)vdupq_laneq_s64(v48, 1)), v38), v39);
        vst2_s8(v40, *(int8x8x2_t *)((char *)&v49 - 8));
        uint64_t v37 = 2 * v5;
        v40 += v37;
        *(int8x16_t *)&a1[v5] = vzip2q_s8(v50, v49);
        int v51 = v34 - 2;
        a1 = v40;
        BOOL v52 = v34 > 3;
        v34 -= 2;
      }
      while (v52);
      if (v51 != 1) {
        return *(double *)a5.i64;
      }
    }
    a5 = vqmovn_high_s16(vqmovn_s16(*a2), *v25);
    v53.i64[0] = 0x8080808080808080;
    v53.i64[1] = 0x8080808080808080;
    int64x2_t v54 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v28), *v29), v53);
    v57.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)*(_OWORD *)&vzip1q_s8((int8x16_t)v54, (int8x16_t)vdupq_laneq_s64(v54, 1)), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    *(uint8x8_t *)a5.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a5, vrev64q_s32((int32x4_t)a5)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
    v57.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a5.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    vst2_s8(v40, v57);
    return *(double *)a5.i64;
  }
  a5.i16[0] = -32640;
  a5.i8[2] = 0x80;
  a5.i8[3] = 0x80;
  a5.i8[4] = 0x80;
  a5.i8[5] = 0x80;
  a5.i8[6] = 0x80;
  a5.i8[7] = 0x80;
  a5.i8[8] = 0x80;
  a5.i8[9] = 0x80;
  a5.i8[10] = 0x80;
  a5.i8[11] = 0x80;
  a5.i8[12] = 0x80;
  a5.i8[13] = 0x80;
  a5.i8[14] = 0x80;
  a5.i8[15] = 0x80;
  v9.i64[0] = 0x101010101010101;
  v9.i64[1] = 0x101010101010101;
  v10.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v10.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int v11 = a4;
  do
  {
    int64x2_t v12 = a2 + 1;
    int32x4_t v13 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[2]);
    int64x2_t v14 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[10]), a5);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v13, vrev64q_s32(v13)), a5), v9), v10);
    int8x16_t v16 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v14, (int8x16_t)vdupq_laneq_s64(v14, 1)), v9), v10);
    int8x16_t v17 = a1;
    vst2_s8(v17, *(int8x8x2_t *)((char *)&v15 - 8));
    uint64_t v8 = 5 * a3;
    int v18 = (int8x16_t *)&v17[v8];
    *(int8x16_t *)&a1[a3] = vzip2q_s8(v16, v15);
    int v19 = &a1[v6];
    a1 += 2 * a3;
    int32x4_t v20 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[4]), a2[6]);
    int64x2_t v21 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[12]), a2[14]), a5);
    int8x16_t v22 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v20, vrev64q_s32(v20)), a5), v9), v10);
    int8x16_t v23 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v21, (int8x16_t)vdupq_laneq_s64(v21, 1)), v9), v10);
    vst2_s8(v19, *(int8x8x2_t *)((char *)&v22 - 8));
    int8x16_t *v18 = vzip2q_s8(v23, v22);
    int v24 = v11 - 2;
    LODWORD(v18) = v11 - 4;
    v11 -= 2;
    ++a2;
  }
  while (v18 > 3);
  unsigned int v25 = v12 + 2;
  unsigned int v26 = v12 + 4;
  int8x16_t v27 = v12 + 6;
  uint8x16_t v28 = v12 + 8;
  uint8x16_t v29 = v12 + 10;
  int16x8_t v30 = v12 + 12;
  int16x8_t v31 = v12 + 14;
  unint64_t v32 = &a1[v6];
  int v7 = v24 - 4;
  if (a4 <= 4) {
    int v33 = 4;
  }
  else {
    int v33 = a4;
  }
  int v34 = v24 - v33 + 4;
  a2 = v12;
  if (v34 + v7) {
    goto LABEL_13;
  }
  return *(double *)a5.i64;
}

double from_422_to_2vuy<4,4,(AlphaOutputMethod)0,true>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = 4 * a3;
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (v7 < 2)
  {
    unsigned int v25 = a2 + 2;
    unsigned int v26 = a2 + 4;
    int8x16_t v27 = a2 + 6;
    uint8x16_t v28 = a2 + 8;
    uint8x16_t v29 = a2 + 10;
    int16x8_t v30 = a2 + 12;
    int16x8_t v31 = a2 + 14;
    unint64_t v32 = &a1[v6];
    int v34 = a4 - v7;
    if (!a4) {
      return *(double *)a5.i64;
    }
LABEL_13:
    if (v7 >= 1)
    {
      a5 = vqmovn_high_s16(vqmovn_s16(*v26), *v27);
      v35.i64[0] = 0x8080808080808080;
      v35.i64[1] = 0x8080808080808080;
      int64x2_t v36 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v30), *v31), v35);
      v56.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)*(_OWORD *)&vzip1q_s8((int8x16_t)v36, (int8x16_t)vdupq_laneq_s64(v36, 1)), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
      *(uint8x8_t *)a5.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a5, vrev64q_s32((int32x4_t)a5)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
      v56.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a5.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
      vst2_s8(v32, v56);
    }
    if (v34 <= 1)
    {
      int8x16_t v40 = a1;
      if (v34 != 1) {
        return *(double *)a5.i64;
      }
    }
    else
    {
      a5.i16[0] = -32640;
      a5.i8[2] = 0x80;
      a5.i8[3] = 0x80;
      a5.i8[4] = 0x80;
      a5.i8[5] = 0x80;
      a5.i8[6] = 0x80;
      a5.i8[7] = 0x80;
      a5.i8[8] = 0x80;
      a5.i8[9] = 0x80;
      a5.i8[10] = 0x80;
      a5.i8[11] = 0x80;
      a5.i8[12] = 0x80;
      a5.i8[13] = 0x80;
      a5.i8[14] = 0x80;
      a5.i8[15] = 0x80;
      v38.i64[0] = 0x101010101010101;
      v38.i64[1] = 0x101010101010101;
      v39.i64[0] = 0xFEFEFEFEFEFEFEFELL;
      v39.i64[1] = 0xFEFEFEFEFEFEFEFELL;
      int8x16_t v40 = a1;
      do
      {
        int16x8_t v41 = *a2++;
        int16x8_t v42 = v41;
        int16x8_t v43 = *v25++;
        int32x4_t v44 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(v42), v43);
        int16x8_t v45 = *v28++;
        int16x8_t v46 = v45;
        int16x8_t v47 = *v29++;
        int64x2_t v48 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v46), v47), a5);
        int8x16_t v49 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v44, vrev64q_s32(v44)), a5), v38), v39);
        int8x16_t v50 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v48, (int8x16_t)vdupq_laneq_s64(v48, 1)), v38), v39);
        vst2_s8(v40, *(int8x8x2_t *)((char *)&v49 - 8));
        uint64_t v37 = 2 * v5;
        v40 += v37;
        *(int8x16_t *)&a1[v5] = vzip2q_s8(v50, v49);
        int v51 = v34 - 2;
        a1 = v40;
        BOOL v52 = v34 > 3;
        v34 -= 2;
      }
      while (v52);
      if (v51 != 1) {
        return *(double *)a5.i64;
      }
    }
    a5 = vqmovn_high_s16(vqmovn_s16(*a2), *v25);
    v53.i64[0] = 0x8080808080808080;
    v53.i64[1] = 0x8080808080808080;
    int64x2_t v54 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v28), *v29), v53);
    v57.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)*(_OWORD *)&vzip1q_s8((int8x16_t)v54, (int8x16_t)vdupq_laneq_s64(v54, 1)), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    *(uint8x8_t *)a5.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a5, vrev64q_s32((int32x4_t)a5)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
    v57.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a5.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    vst2_s8(v40, v57);
    return *(double *)a5.i64;
  }
  a5.i16[0] = -32640;
  a5.i8[2] = 0x80;
  a5.i8[3] = 0x80;
  a5.i8[4] = 0x80;
  a5.i8[5] = 0x80;
  a5.i8[6] = 0x80;
  a5.i8[7] = 0x80;
  a5.i8[8] = 0x80;
  a5.i8[9] = 0x80;
  a5.i8[10] = 0x80;
  a5.i8[11] = 0x80;
  a5.i8[12] = 0x80;
  a5.i8[13] = 0x80;
  a5.i8[14] = 0x80;
  a5.i8[15] = 0x80;
  v9.i64[0] = 0x101010101010101;
  v9.i64[1] = 0x101010101010101;
  v10.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v10.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int v11 = a4;
  do
  {
    int64x2_t v12 = a2 + 1;
    int32x4_t v13 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[2]);
    int64x2_t v14 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[10]), a5);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v13, vrev64q_s32(v13)), a5), v9), v10);
    int8x16_t v16 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v14, (int8x16_t)vdupq_laneq_s64(v14, 1)), v9), v10);
    int8x16_t v17 = a1;
    vst2_s8(v17, *(int8x8x2_t *)((char *)&v15 - 8));
    uint64_t v8 = 5 * a3;
    int v18 = (int8x16_t *)&v17[v8];
    *(int8x16_t *)&a1[a3] = vzip2q_s8(v16, v15);
    int v19 = &a1[v6];
    a1 += 2 * a3;
    int32x4_t v20 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[4]), a2[6]);
    int64x2_t v21 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[12]), a2[14]), a5);
    int8x16_t v22 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v20, vrev64q_s32(v20)), a5), v9), v10);
    int8x16_t v23 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v21, (int8x16_t)vdupq_laneq_s64(v21, 1)), v9), v10);
    vst2_s8(v19, *(int8x8x2_t *)((char *)&v22 - 8));
    int8x16_t *v18 = vzip2q_s8(v23, v22);
    int v24 = v11 - 2;
    LODWORD(v18) = v11 - 4;
    v11 -= 2;
    ++a2;
  }
  while (v18 > 3);
  unsigned int v25 = v12 + 2;
  unsigned int v26 = v12 + 4;
  int8x16_t v27 = v12 + 6;
  uint8x16_t v28 = v12 + 8;
  uint8x16_t v29 = v12 + 10;
  int16x8_t v30 = v12 + 12;
  int16x8_t v31 = v12 + 14;
  unint64_t v32 = &a1[v6];
  int v7 = v24 - 4;
  if (a4 <= 4) {
    int v33 = 4;
  }
  else {
    int v33 = a4;
  }
  int v34 = v24 - v33 + 4;
  a2 = v12;
  if (v34 + v7) {
    goto LABEL_13;
  }
  return *(double *)a5.i64;
}

double from_422_to_2vuy<4,2,(AlphaOutputMethod)0,false>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = 2 * a3;
  if (a4 <= 2) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 2;
  }
  if (v7 < 2)
  {
    unsigned int v25 = a2 + 1;
    unsigned int v26 = a2 + 2;
    int8x16_t v27 = a2 + 3;
    uint8x16_t v28 = a2 + 4;
    uint8x16_t v29 = a2 + 5;
    int16x8_t v30 = a2 + 6;
    int16x8_t v31 = a2 + 7;
    unint64_t v32 = &a1[v6];
    int v34 = a4 - v7;
    if (!a4) {
      return *(double *)a5.i64;
    }
LABEL_13:
    if (v7 >= 1)
    {
      a5 = vqmovn_high_s16(vqmovn_s16(*v26), *v27);
      v35.i64[0] = 0x8080808080808080;
      v35.i64[1] = 0x8080808080808080;
      int64x2_t v36 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v30), *v31), v35);
      v55.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)*(_OWORD *)&vzip1q_s8((int8x16_t)v36, (int8x16_t)vdupq_laneq_s64(v36, 1)), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
      *(uint8x8_t *)a5.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a5, vrev64q_s32((int32x4_t)a5)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
      v55.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a5.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
      vst2_s8(v32, v55);
    }
    if (v34 <= 1)
    {
      uint8x16_t v39 = a1;
      if (v34 != 1) {
        return *(double *)a5.i64;
      }
    }
    else
    {
      a5.i16[0] = -32640;
      a5.i8[2] = 0x80;
      a5.i8[3] = 0x80;
      a5.i8[4] = 0x80;
      a5.i8[5] = 0x80;
      a5.i8[6] = 0x80;
      a5.i8[7] = 0x80;
      a5.i8[8] = 0x80;
      a5.i8[9] = 0x80;
      a5.i8[10] = 0x80;
      a5.i8[11] = 0x80;
      a5.i8[12] = 0x80;
      a5.i8[13] = 0x80;
      a5.i8[14] = 0x80;
      a5.i8[15] = 0x80;
      v37.i64[0] = 0x101010101010101;
      v37.i64[1] = 0x101010101010101;
      v38.i64[0] = 0xFEFEFEFEFEFEFEFELL;
      v38.i64[1] = 0xFEFEFEFEFEFEFEFELL;
      uint8x16_t v39 = a1;
      do
      {
        int16x8_t v40 = *a2++;
        int16x8_t v41 = v40;
        int16x8_t v42 = *v25++;
        int32x4_t v43 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(v41), v42);
        int16x8_t v44 = *v28++;
        int16x8_t v45 = v44;
        int16x8_t v46 = *v29++;
        int64x2_t v47 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v45), v46), a5);
        int8x16_t v48 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v43, vrev64q_s32(v43)), a5), v37), v38);
        int8x16_t v49 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v47, (int8x16_t)vdupq_laneq_s64(v47, 1)), v37), v38);
        vst2_s8(v39, *(int8x8x2_t *)((char *)&v48 - 8));
        v39 += v6;
        *(int8x16_t *)&a1[v5] = vzip2q_s8(v49, v48);
        int v50 = v34 - 2;
        a1 = v39;
        BOOL v51 = v34 > 3;
        v34 -= 2;
      }
      while (v51);
      if (v50 != 1) {
        return *(double *)a5.i64;
      }
    }
    a5 = vqmovn_high_s16(vqmovn_s16(*a2), *v25);
    v52.i64[0] = 0x8080808080808080;
    v52.i64[1] = 0x8080808080808080;
    int64x2_t v53 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v28), *v29), v52);
    v56.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)*(_OWORD *)&vzip1q_s8((int8x16_t)v53, (int8x16_t)vdupq_laneq_s64(v53, 1)), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    *(uint8x8_t *)a5.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a5, vrev64q_s32((int32x4_t)a5)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
    v56.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a5.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    vst2_s8(v39, v56);
    return *(double *)a5.i64;
  }
  a5.i16[0] = -32640;
  a5.i8[2] = 0x80;
  a5.i8[3] = 0x80;
  a5.i8[4] = 0x80;
  a5.i8[5] = 0x80;
  a5.i8[6] = 0x80;
  a5.i8[7] = 0x80;
  a5.i8[8] = 0x80;
  a5.i8[9] = 0x80;
  a5.i8[10] = 0x80;
  a5.i8[11] = 0x80;
  a5.i8[12] = 0x80;
  a5.i8[13] = 0x80;
  a5.i8[14] = 0x80;
  a5.i8[15] = 0x80;
  v9.i64[0] = 0x101010101010101;
  v9.i64[1] = 0x101010101010101;
  v10.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v10.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  unsigned int v11 = a4;
  int64x2_t v12 = a2;
  do
  {
    int16x8_t v13 = v12[1];
    ++v12;
    int32x4_t v14 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), v13);
    int8x16_t v15 = (int8x16_t)vuzp1q_s32(v14, vrev64q_s32(v14));
    int64x2_t v16 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), a5);
    int8x16_t v17 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v15, a5), v9), v10);
    int8x16_t v18 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v16, (int8x16_t)vdupq_laneq_s64(v16, 1)), v9), v10);
    int v19 = a1;
    vst2_s8(v19, *(int8x8x2_t *)((char *)&v17 - 8));
    uint64_t v8 = 3 * a3;
    int32x4_t v20 = (int8x16_t *)&v19[v8];
    *(int8x16_t *)&a1[a3] = vzip2q_s8(v18, v17);
    a1 += v6;
    int32x4_t v21 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[2]), a2[3]);
    int64x2_t v22 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), a5);
    int8x16_t v23 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v21, vrev64q_s32(v21)), a5), v9), v10);
    int8x16_t v24 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v22, (int8x16_t)vdupq_laneq_s64(v22, 1)), v9), v10);
    vst2_s8(a1, *(int8x8x2_t *)((char *)&v23 - 8));
    *int32x4_t v20 = vzip2q_s8(v24, v23);
    v11 -= 2;
    a2 = v12;
  }
  while (v11 > 3);
  unsigned int v25 = v12 + 1;
  unsigned int v26 = v12 + 2;
  int8x16_t v27 = v12 + 3;
  uint8x16_t v28 = v12 + 4;
  uint8x16_t v29 = v12 + 5;
  int16x8_t v30 = v12 + 6;
  int16x8_t v31 = v12 + 7;
  unint64_t v32 = &a1[v6];
  int v7 = v11 - 2;
  if (a4 <= 2) {
    int v33 = 2;
  }
  else {
    int v33 = a4;
  }
  int v34 = v11 - v33 + 2;
  a2 = v12;
  if (v34 + v7) {
    goto LABEL_13;
  }
  return *(double *)a5.i64;
}

double from_422_to_2vuy<4,2,(AlphaOutputMethod)0,true>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = 2 * a3;
  if (a4 <= 2) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 2;
  }
  if (v7 < 2)
  {
    unsigned int v25 = a2 + 1;
    unsigned int v26 = a2 + 2;
    int8x16_t v27 = a2 + 3;
    uint8x16_t v28 = a2 + 4;
    uint8x16_t v29 = a2 + 5;
    int16x8_t v30 = a2 + 6;
    int16x8_t v31 = a2 + 7;
    unint64_t v32 = &a1[v6];
    int v34 = a4 - v7;
    if (!a4) {
      return *(double *)a5.i64;
    }
LABEL_13:
    if (v7 >= 1)
    {
      a5 = vqmovn_high_s16(vqmovn_s16(*v26), *v27);
      v35.i64[0] = 0x8080808080808080;
      v35.i64[1] = 0x8080808080808080;
      int64x2_t v36 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v30), *v31), v35);
      v55.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)*(_OWORD *)&vzip1q_s8((int8x16_t)v36, (int8x16_t)vdupq_laneq_s64(v36, 1)), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
      *(uint8x8_t *)a5.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a5, vrev64q_s32((int32x4_t)a5)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
      v55.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a5.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
      vst2_s8(v32, v55);
    }
    if (v34 <= 1)
    {
      uint8x16_t v39 = a1;
      if (v34 != 1) {
        return *(double *)a5.i64;
      }
    }
    else
    {
      a5.i16[0] = -32640;
      a5.i8[2] = 0x80;
      a5.i8[3] = 0x80;
      a5.i8[4] = 0x80;
      a5.i8[5] = 0x80;
      a5.i8[6] = 0x80;
      a5.i8[7] = 0x80;
      a5.i8[8] = 0x80;
      a5.i8[9] = 0x80;
      a5.i8[10] = 0x80;
      a5.i8[11] = 0x80;
      a5.i8[12] = 0x80;
      a5.i8[13] = 0x80;
      a5.i8[14] = 0x80;
      a5.i8[15] = 0x80;
      v37.i64[0] = 0x101010101010101;
      v37.i64[1] = 0x101010101010101;
      v38.i64[0] = 0xFEFEFEFEFEFEFEFELL;
      v38.i64[1] = 0xFEFEFEFEFEFEFEFELL;
      uint8x16_t v39 = a1;
      do
      {
        int16x8_t v40 = *a2++;
        int16x8_t v41 = v40;
        int16x8_t v42 = *v25++;
        int32x4_t v43 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(v41), v42);
        int16x8_t v44 = *v28++;
        int16x8_t v45 = v44;
        int16x8_t v46 = *v29++;
        int64x2_t v47 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v45), v46), a5);
        int8x16_t v48 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v43, vrev64q_s32(v43)), a5), v37), v38);
        int8x16_t v49 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v47, (int8x16_t)vdupq_laneq_s64(v47, 1)), v37), v38);
        vst2_s8(v39, *(int8x8x2_t *)((char *)&v48 - 8));
        v39 += v6;
        *(int8x16_t *)&a1[v5] = vzip2q_s8(v49, v48);
        int v50 = v34 - 2;
        a1 = v39;
        BOOL v51 = v34 > 3;
        v34 -= 2;
      }
      while (v51);
      if (v50 != 1) {
        return *(double *)a5.i64;
      }
    }
    a5 = vqmovn_high_s16(vqmovn_s16(*a2), *v25);
    v52.i64[0] = 0x8080808080808080;
    v52.i64[1] = 0x8080808080808080;
    int64x2_t v53 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v28), *v29), v52);
    v56.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)*(_OWORD *)&vzip1q_s8((int8x16_t)v53, (int8x16_t)vdupq_laneq_s64(v53, 1)), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    *(uint8x8_t *)a5.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a5, vrev64q_s32((int32x4_t)a5)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
    v56.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a5.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    vst2_s8(v39, v56);
    return *(double *)a5.i64;
  }
  a5.i16[0] = -32640;
  a5.i8[2] = 0x80;
  a5.i8[3] = 0x80;
  a5.i8[4] = 0x80;
  a5.i8[5] = 0x80;
  a5.i8[6] = 0x80;
  a5.i8[7] = 0x80;
  a5.i8[8] = 0x80;
  a5.i8[9] = 0x80;
  a5.i8[10] = 0x80;
  a5.i8[11] = 0x80;
  a5.i8[12] = 0x80;
  a5.i8[13] = 0x80;
  a5.i8[14] = 0x80;
  a5.i8[15] = 0x80;
  v9.i64[0] = 0x101010101010101;
  v9.i64[1] = 0x101010101010101;
  v10.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v10.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  unsigned int v11 = a4;
  int64x2_t v12 = a2;
  do
  {
    int16x8_t v13 = v12[1];
    ++v12;
    int32x4_t v14 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), v13);
    int8x16_t v15 = (int8x16_t)vuzp1q_s32(v14, vrev64q_s32(v14));
    int64x2_t v16 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), a5);
    int8x16_t v17 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v15, a5), v9), v10);
    int8x16_t v18 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v16, (int8x16_t)vdupq_laneq_s64(v16, 1)), v9), v10);
    int v19 = a1;
    vst2_s8(v19, *(int8x8x2_t *)((char *)&v17 - 8));
    uint64_t v8 = 3 * a3;
    int32x4_t v20 = (int8x16_t *)&v19[v8];
    *(int8x16_t *)&a1[a3] = vzip2q_s8(v18, v17);
    a1 += v6;
    int32x4_t v21 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[2]), a2[3]);
    int64x2_t v22 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), a5);
    int8x16_t v23 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v21, vrev64q_s32(v21)), a5), v9), v10);
    int8x16_t v24 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v22, (int8x16_t)vdupq_laneq_s64(v22, 1)), v9), v10);
    vst2_s8(a1, *(int8x8x2_t *)((char *)&v23 - 8));
    *int32x4_t v20 = vzip2q_s8(v24, v23);
    v11 -= 2;
    a2 = v12;
  }
  while (v11 > 3);
  unsigned int v25 = v12 + 1;
  unsigned int v26 = v12 + 2;
  int8x16_t v27 = v12 + 3;
  uint8x16_t v28 = v12 + 4;
  uint8x16_t v29 = v12 + 5;
  int16x8_t v30 = v12 + 6;
  int16x8_t v31 = v12 + 7;
  unint64_t v32 = &a1[v6];
  int v7 = v11 - 2;
  if (a4 <= 2) {
    int v33 = 2;
  }
  else {
    int v33 = a4;
  }
  int v34 = v11 - v33 + 2;
  a2 = v12;
  if (v34 + v7) {
    goto LABEL_13;
  }
  return *(double *)a5.i64;
}

void *from_422_to_2vuy<2,4,(AlphaOutputMethod)0,false>(void *result, int16x8_t *a2, int a3, int a4)
{
  int v4 = (void *)((char *)result + 4 * a3);
  if (a4 == 8)
  {
    int16x8_t v5 = *a2;
    int16x8_t v6 = a2[1];
    *(int8x8_t *)v5.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v6.i8 = vqmovn_s16(v6);
    int8x16_t v7 = (int8x16_t)vzip1q_s16(v5, v6);
    v8.i64[0] = 0x8080808080808080;
    v8.i64[1] = 0x8080808080808080;
    int64x2_t v9 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v8);
    v10.i64[0] = 0x101010101010101;
    v10.i64[1] = 0x101010101010101;
    v11.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v11.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int8x16_t v12 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v7, v8), v10), v11);
    int8x16_t v13 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v9, (int8x16_t)vdupq_laneq_s64(v9, 1)), v10), v11);
    int8x16_t v14 = vzip1q_s8(v13, v12);
    *CFIndex result = v14.i64[0];
    *(void *)((char *)result + a3) = v14.i64[1];
    int8x16_t v15 = (void *)((char *)result + 2 * a3);
    int8x16_t v16 = vzip2q_s8(v13, v12);
    *int8x16_t v15 = v16.i64[0];
    *(void *)((char *)v15 + a3) = v16.i64[1];
    int16x8_t v17 = a2[2];
    int16x8_t v18 = a2[3];
    *(int8x8_t *)v17.i8 = vqmovn_s16(v17);
    *(int8x8_t *)v18.i8 = vqmovn_s16(v18);
    int64x2_t v19 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), v8);
    int8x16_t v20 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v17, v18), v8), v10), v11);
    int8x16_t v21 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v19, (int8x16_t)vdupq_laneq_s64(v19, 1)), v10), v11);
    int8x16_t v22 = vzip1q_s8(v21, v20);
    *int v4 = v22.i64[0];
    *(void *)((char *)v4 + a3) = v22.i64[1];
    int v4 = (void *)((char *)v4 + 2 * a3);
    int8x16_t v23 = vzip2q_s8(v21, v20);
LABEL_3:
    *int v4 = v23.i64[0];
    *(void *)((char *)v4 + a3) = v23.i64[1];
    return result;
  }
  if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v43 = *a2;
      int16x8_t v44 = a2[1];
      *(int8x8_t *)v43.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v44.i8 = vqmovn_s16(v44);
      int8x16_t v45 = (int8x16_t)vzip1q_s16(v43, v44);
      v46.i64[0] = 0x8080808080808080;
      v46.i64[1] = 0x8080808080808080;
      int64x2_t v47 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v46);
      uint8x16_t v48 = (uint8x16_t)vzip1q_s8((int8x16_t)v47, (int8x16_t)vdupq_laneq_s64(v47, 1));
      uint8x16_t v49 = (uint8x16_t)veorq_s8(v45, v46);
      v46.i64[0] = 0x101010101010101;
      v46.i64[1] = 0x101010101010101;
      v50.i64[0] = 0xFEFEFEFEFEFEFEFELL;
      v50.i64[1] = 0xFEFEFEFEFEFEFEFELL;
      int8x16_t v51 = (int8x16_t)vminq_u8(vmaxq_u8(v49, (uint8x16_t)v46), v50);
      int8x16_t v52 = (int8x16_t)vminq_u8(vmaxq_u8(v48, (uint8x16_t)v46), v50);
      int8x16_t v53 = vzip1q_s8(v52, v51);
      if (a4 < 3)
      {
        *CFIndex result = v53.i64[0];
        if (a4 == 2) {
          *(void *)((char *)result + a3) = v53.i64[1];
        }
      }
      else
      {
        *CFIndex result = v53.i64[0];
        *(void *)((char *)result + a3) = v53.i64[1];
        int v4 = (void *)((char *)result + 2 * a3);
        int8x16_t v23 = vzip2q_s8(v52, v51);
        if (a4 != 3) {
          goto LABEL_3;
        }
        *int v4 = v23.i64[0];
      }
    }
  }
  else
  {
    int16x8_t v24 = *a2;
    int16x8_t v25 = a2[1];
    *(int8x8_t *)v24.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v25.i8 = vqmovn_s16(v25);
    v26.i64[0] = 0x8080808080808080;
    v26.i64[1] = 0x8080808080808080;
    int64x2_t v27 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v26);
    int8x16_t v28 = (int8x16_t)vzip1q_s16(v24, v25);
    uint8x16_t v29 = (uint8x16_t)vzip1q_s8((int8x16_t)v27, (int8x16_t)vdupq_laneq_s64(v27, 1));
    v27.i64[0] = 0x101010101010101;
    v27.i64[1] = 0x101010101010101;
    v30.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v30.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int8x16_t v31 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v28, v26), (uint8x16_t)v27), v30);
    int8x16_t v32 = (int8x16_t)vminq_u8(vmaxq_u8(v29, (uint8x16_t)v27), v30);
    int8x16_t v33 = vzip1q_s8(v32, v31);
    *CFIndex result = v33.i64[0];
    *(void *)((char *)result + a3) = v33.i64[1];
    int v34 = (void *)((char *)result + 2 * a3);
    int8x16_t v35 = vzip2q_s8(v32, v31);
    void *v34 = v35.i64[0];
    *(void *)((char *)v34 + a3) = v35.i64[1];
    int16x8_t v36 = a2[2];
    int16x8_t v37 = a2[3];
    *(int8x8_t *)v36.i8 = vqmovn_s16(v36);
    *(int8x8_t *)v37.i8 = vqmovn_s16(v37);
    int8x16_t v38 = (int8x16_t)vzip1q_s16(v36, v37);
    int64x2_t v39 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), v26);
    uint8x16_t v40 = (uint8x16_t)vzip1q_s8((int8x16_t)v39, (int8x16_t)vdupq_laneq_s64(v39, 1));
    int8x16_t v41 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v38, v26), (uint8x16_t)v27), v30);
    int8x16_t v42 = (int8x16_t)vminq_u8(vmaxq_u8(v40, (uint8x16_t)v27), v30);
    int8x16_t v23 = vzip1q_s8(v42, v41);
    if (a4 < 7)
    {
      if (a4 == 6) {
        goto LABEL_3;
      }
      *int v4 = v23.i64[0];
    }
    else
    {
      *int v4 = v23.i64[0];
      *(void *)((char *)v4 + a3) = v23.i64[1];
      int v4 = (void *)((char *)v4 + 2 * a3);
      int8x16_t v23 = vzip2q_s8(v42, v41);
      if (a4 != 7) {
        goto LABEL_3;
      }
      *int v4 = v23.i64[0];
    }
  }
  return result;
}

void *from_422_to_2vuy<2,4,(AlphaOutputMethod)0,true>(void *result, int16x8_t *a2, int a3, int a4)
{
  int v4 = (void *)((char *)result + 4 * a3);
  if (a4 == 8)
  {
    int16x8_t v5 = *a2;
    int16x8_t v6 = a2[1];
    *(int8x8_t *)v5.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v6.i8 = vqmovn_s16(v6);
    int8x16_t v7 = (int8x16_t)vzip1q_s16(v5, v6);
    v8.i64[0] = 0x8080808080808080;
    v8.i64[1] = 0x8080808080808080;
    int64x2_t v9 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v8);
    v10.i64[0] = 0x101010101010101;
    v10.i64[1] = 0x101010101010101;
    v11.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v11.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int8x16_t v12 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v7, v8), v10), v11);
    int8x16_t v13 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v9, (int8x16_t)vdupq_laneq_s64(v9, 1)), v10), v11);
    int8x16_t v14 = vzip1q_s8(v13, v12);
    *CFIndex result = v14.i64[0];
    *(void *)((char *)result + a3) = v14.i64[1];
    int8x16_t v15 = (void *)((char *)result + 2 * a3);
    int8x16_t v16 = vzip2q_s8(v13, v12);
    *int8x16_t v15 = v16.i64[0];
    *(void *)((char *)v15 + a3) = v16.i64[1];
    int16x8_t v17 = a2[2];
    int16x8_t v18 = a2[3];
    *(int8x8_t *)v17.i8 = vqmovn_s16(v17);
    *(int8x8_t *)v18.i8 = vqmovn_s16(v18);
    int64x2_t v19 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), v8);
    int8x16_t v20 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v17, v18), v8), v10), v11);
    int8x16_t v21 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)vzip1q_s8((int8x16_t)v19, (int8x16_t)vdupq_laneq_s64(v19, 1)), v10), v11);
    int8x16_t v22 = vzip1q_s8(v21, v20);
    *int v4 = v22.i64[0];
    *(void *)((char *)v4 + a3) = v22.i64[1];
    int v4 = (void *)((char *)v4 + 2 * a3);
    int8x16_t v23 = vzip2q_s8(v21, v20);
LABEL_3:
    *int v4 = v23.i64[0];
    *(void *)((char *)v4 + a3) = v23.i64[1];
    return result;
  }
  if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v43 = *a2;
      int16x8_t v44 = a2[1];
      *(int8x8_t *)v43.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v44.i8 = vqmovn_s16(v44);
      int8x16_t v45 = (int8x16_t)vzip1q_s16(v43, v44);
      v46.i64[0] = 0x8080808080808080;
      v46.i64[1] = 0x8080808080808080;
      int64x2_t v47 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v46);
      uint8x16_t v48 = (uint8x16_t)vzip1q_s8((int8x16_t)v47, (int8x16_t)vdupq_laneq_s64(v47, 1));
      uint8x16_t v49 = (uint8x16_t)veorq_s8(v45, v46);
      v46.i64[0] = 0x101010101010101;
      v46.i64[1] = 0x101010101010101;
      v50.i64[0] = 0xFEFEFEFEFEFEFEFELL;
      v50.i64[1] = 0xFEFEFEFEFEFEFEFELL;
      int8x16_t v51 = (int8x16_t)vminq_u8(vmaxq_u8(v49, (uint8x16_t)v46), v50);
      int8x16_t v52 = (int8x16_t)vminq_u8(vmaxq_u8(v48, (uint8x16_t)v46), v50);
      int8x16_t v53 = vzip1q_s8(v52, v51);
      if (a4 < 3)
      {
        *CFIndex result = v53.i64[0];
        if (a4 == 2) {
          *(void *)((char *)result + a3) = v53.i64[1];
        }
      }
      else
      {
        *CFIndex result = v53.i64[0];
        *(void *)((char *)result + a3) = v53.i64[1];
        int v4 = (void *)((char *)result + 2 * a3);
        int8x16_t v23 = vzip2q_s8(v52, v51);
        if (a4 != 3) {
          goto LABEL_3;
        }
        *int v4 = v23.i64[0];
      }
    }
  }
  else
  {
    int16x8_t v24 = *a2;
    int16x8_t v25 = a2[1];
    *(int8x8_t *)v24.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v25.i8 = vqmovn_s16(v25);
    v26.i64[0] = 0x8080808080808080;
    v26.i64[1] = 0x8080808080808080;
    int64x2_t v27 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v26);
    int8x16_t v28 = (int8x16_t)vzip1q_s16(v24, v25);
    uint8x16_t v29 = (uint8x16_t)vzip1q_s8((int8x16_t)v27, (int8x16_t)vdupq_laneq_s64(v27, 1));
    v27.i64[0] = 0x101010101010101;
    v27.i64[1] = 0x101010101010101;
    v30.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v30.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int8x16_t v31 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v28, v26), (uint8x16_t)v27), v30);
    int8x16_t v32 = (int8x16_t)vminq_u8(vmaxq_u8(v29, (uint8x16_t)v27), v30);
    int8x16_t v33 = vzip1q_s8(v32, v31);
    *CFIndex result = v33.i64[0];
    *(void *)((char *)result + a3) = v33.i64[1];
    int v34 = (void *)((char *)result + 2 * a3);
    int8x16_t v35 = vzip2q_s8(v32, v31);
    void *v34 = v35.i64[0];
    *(void *)((char *)v34 + a3) = v35.i64[1];
    int16x8_t v36 = a2[2];
    int16x8_t v37 = a2[3];
    *(int8x8_t *)v36.i8 = vqmovn_s16(v36);
    *(int8x8_t *)v37.i8 = vqmovn_s16(v37);
    int8x16_t v38 = (int8x16_t)vzip1q_s16(v36, v37);
    int64x2_t v39 = (int64x2_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), v26);
    uint8x16_t v40 = (uint8x16_t)vzip1q_s8((int8x16_t)v39, (int8x16_t)vdupq_laneq_s64(v39, 1));
    int8x16_t v41 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v38, v26), (uint8x16_t)v27), v30);
    int8x16_t v42 = (int8x16_t)vminq_u8(vmaxq_u8(v40, (uint8x16_t)v27), v30);
    int8x16_t v23 = vzip1q_s8(v42, v41);
    if (a4 < 7)
    {
      if (a4 == 6) {
        goto LABEL_3;
      }
      *int v4 = v23.i64[0];
    }
    else
    {
      *int v4 = v23.i64[0];
      *(void *)((char *)v4 + a3) = v23.i64[1];
      int v4 = (void *)((char *)v4 + 2 * a3);
      int8x16_t v23 = vzip2q_s8(v42, v41);
      if (a4 != 7) {
        goto LABEL_3;
      }
      *int v4 = v23.i64[0];
    }
  }
  return result;
}

double from_422_to_2vuy<2,2,(AlphaOutputMethod)0,false>(void *a1, uint64_t a2, int a3, int a4, double a5, double a6, double a7, int8x16_t a8)
{
  int32x4_t v8 = (int32x4_t)vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16))));
  v9.i64[0] = 0x8080808080808080;
  v9.i64[1] = 0x8080808080808080;
  int32x4_t v10 = (int32x4_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48)), v9);
  *(int32x2_t *)a8.i8 = vmovn_s64((int64x2_t)v10);
  uint8x16_t v11 = (uint8x16_t)vzip1q_s8(a8, (int8x16_t)vuzp2q_s32(v10, v8));
  uint8x16_t v12 = (uint8x16_t)veorq_s8((int8x16_t)v8, v9);
  v9.i64[0] = 0x101010101010101;
  v9.i64[1] = 0x101010101010101;
  v13.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v13.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8(v12, (uint8x16_t)v9), v13);
  int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8(v11, (uint8x16_t)v9), v13);
  if (a4 == 4)
  {
    int8x16_t v16 = vzip1q_s8(v15, v14);
    *a1 = v16.i64[0];
    *(void *)((char *)a1 + a3) = v16.i64[1];
    int16x8_t v17 = (void *)((char *)a1 + 2 * a3);
    int8x16_t v14 = vzip2q_s8(v15, v14);
    void *v17 = v14.i64[0];
    *(void *)((char *)v17 + a3) = v14.i64[1];
  }
  else if (a4 < 2)
  {
    if (a4 == 1)
    {
      v14.i64[0] = vzip1q_s8(v15, v14).u64[0];
      *a1 = v14.i64[0];
    }
  }
  else
  {
    int8x16_t v18 = vzip1q_s8(v15, v14);
    *a1 = v18.i64[0];
    *(void *)((char *)a1 + a3) = v18.i64[1];
    if (a4 == 3)
    {
      v14.i64[0] = vzip2q_s8(v15, v14).u64[0];
      *(void *)((char *)a1 + 2 * a3) = v14.i64[0];
    }
  }
  return *(double *)v14.i64;
}

double from_422_to_2vuy<2,2,(AlphaOutputMethod)0,true>(void *a1, uint64_t a2, int a3, int a4, double a5, double a6, double a7, int8x16_t a8)
{
  int32x4_t v8 = (int32x4_t)vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16))));
  v9.i64[0] = 0x8080808080808080;
  v9.i64[1] = 0x8080808080808080;
  int32x4_t v10 = (int32x4_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48)), v9);
  *(int32x2_t *)a8.i8 = vmovn_s64((int64x2_t)v10);
  uint8x16_t v11 = (uint8x16_t)vzip1q_s8(a8, (int8x16_t)vuzp2q_s32(v10, v8));
  uint8x16_t v12 = (uint8x16_t)veorq_s8((int8x16_t)v8, v9);
  v9.i64[0] = 0x101010101010101;
  v9.i64[1] = 0x101010101010101;
  v13.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v13.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8(v12, (uint8x16_t)v9), v13);
  int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8(v11, (uint8x16_t)v9), v13);
  if (a4 == 4)
  {
    int8x16_t v16 = vzip1q_s8(v15, v14);
    *a1 = v16.i64[0];
    *(void *)((char *)a1 + a3) = v16.i64[1];
    int16x8_t v17 = (void *)((char *)a1 + 2 * a3);
    int8x16_t v14 = vzip2q_s8(v15, v14);
    void *v17 = v14.i64[0];
    *(void *)((char *)v17 + a3) = v14.i64[1];
  }
  else if (a4 < 2)
  {
    if (a4 == 1)
    {
      v14.i64[0] = vzip1q_s8(v15, v14).u64[0];
      *a1 = v14.i64[0];
    }
  }
  else
  {
    int8x16_t v18 = vzip1q_s8(v15, v14);
    *a1 = v18.i64[0];
    *(void *)((char *)a1 + a3) = v18.i64[1];
    if (a4 == 3)
    {
      v14.i64[0] = vzip2q_s8(v15, v14).u64[0];
      *(void *)((char *)a1 + 2 * a3) = v14.i64[0];
    }
  }
  return *(double *)v14.i64;
}

_DWORD *from_422_to_2vuy<2,1,(AlphaOutputMethod)0,false>(_DWORD *a1, unsigned __int16 *a2, int a3, int a4, double a5, double a6, double a7, int16x8_t a8)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)846624121,(AlphaOutputMethod)0>(a1, a2, a3, a4, 2u, 1, a5, a6, a7, a8);
}

_DWORD *from_422_to_2vuy<2,1,(AlphaOutputMethod)0,true>(_DWORD *a1, unsigned __int16 *a2, int a3, int a4, double a5, double a6, double a7, int16x8_t a8)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)846624121,(AlphaOutputMethod)0>(a1, a2, a3, a4, 2u, 1, a5, a6, a7, a8);
}

double from_422_to_2vuy<1,2,(AlphaOutputMethod)0,false>(_DWORD *a1, __int16 *a2, int a3, int a4, int16x8_t a5, double a6, double a7, int16x8_t a8)
{
  int32x4_t v8 = a2 + 10;
  int8x16_t v9 = a2 + 2;
  if (a4 > 0)
  {
    v10.i16[0] = a2[8];
    v10.i16[1] = *a2;
    v10.i16[2] = *v8;
    v10.i16[3] = *v9;
    a5.i32[0] = 8257662;
    a5.i16[2] = 126;
    a5.i16[3] = 126;
    *(int8x8_t *)a8.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v10, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
    *a1 = vmovn_s16(a8).u32[0];
    int32x4_t v8 = a2 + 11;
    a1 = (_DWORD *)((char *)a1 + a3);
    int8x16_t v9 = a2 + 3;
    if (a4 != 1)
    {
      v11.i16[0] = a2[9];
      v11.i16[1] = a2[1];
      v11.i16[2] = *v8;
      v11.i16[3] = *v9;
      *(int8x8_t *)a5.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v11, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
      *(int8x8_t *)a5.i8 = vmovn_s16(a5);
      *a1 = a5.i32[0];
      int32x4_t v8 = a2 + 12;
      a1 = (_DWORD *)((char *)a1 + a3);
      int8x16_t v9 = a2 + 4;
    }
  }
  if (a4 <= 2) {
    int v12 = 2;
  }
  else {
    int v12 = a4;
  }
  int v13 = v12 - 2;
  if (v13)
  {
    v14.i16[0] = *v8;
    v14.i16[1] = *v9;
    v14.i16[2] = v8[2];
    v14.i16[3] = v9[2];
    a5.i32[0] = 8257662;
    a5.i16[2] = 126;
    a5.i16[3] = 126;
    *(int8x8_t *)a8.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v14, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
    *a1 = vmovn_s16(a8).u32[0];
    if (v13 != 1)
    {
      v15.i16[0] = v8[1];
      v15.i16[1] = v9[1];
      v15.i16[2] = v8[3];
      v15.i16[3] = v9[3];
      *(int8x8_t *)a5.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v15, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
      *(int8x8_t *)a5.i8 = vmovn_s16(a5);
      *(_DWORD *)((char *)a1 + a3) = a5.i32[0];
    }
  }
  return *(double *)a5.i64;
}

double from_422_to_2vuy<1,2,(AlphaOutputMethod)0,true>(_DWORD *a1, __int16 *a2, int a3, int a4, int16x8_t a5, double a6, double a7, int16x8_t a8)
{
  int32x4_t v8 = a2 + 10;
  int8x16_t v9 = a2 + 2;
  if (a4 > 0)
  {
    v10.i16[0] = a2[8];
    v10.i16[1] = *a2;
    v10.i16[2] = *v8;
    v10.i16[3] = *v9;
    a5.i32[0] = 8257662;
    a5.i16[2] = 126;
    a5.i16[3] = 126;
    *(int8x8_t *)a8.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v10, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
    *a1 = vmovn_s16(a8).u32[0];
    int32x4_t v8 = a2 + 11;
    a1 = (_DWORD *)((char *)a1 + a3);
    int8x16_t v9 = a2 + 3;
    if (a4 != 1)
    {
      v11.i16[0] = a2[9];
      v11.i16[1] = a2[1];
      v11.i16[2] = *v8;
      v11.i16[3] = *v9;
      *(int8x8_t *)a5.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v11, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
      *(int8x8_t *)a5.i8 = vmovn_s16(a5);
      *a1 = a5.i32[0];
      int32x4_t v8 = a2 + 12;
      a1 = (_DWORD *)((char *)a1 + a3);
      int8x16_t v9 = a2 + 4;
    }
  }
  if (a4 <= 2) {
    int v12 = 2;
  }
  else {
    int v12 = a4;
  }
  int v13 = v12 - 2;
  if (v13)
  {
    v14.i16[0] = *v8;
    v14.i16[1] = *v9;
    v14.i16[2] = v8[2];
    v14.i16[3] = v9[2];
    a5.i32[0] = 8257662;
    a5.i16[2] = 126;
    a5.i16[3] = 126;
    *(int8x8_t *)a8.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v14, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
    *a1 = vmovn_s16(a8).u32[0];
    if (v13 != 1)
    {
      v15.i16[0] = v8[1];
      v15.i16[1] = v9[1];
      v15.i16[2] = v8[3];
      v15.i16[3] = v9[3];
      *(int8x8_t *)a5.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v15, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
      *(int8x8_t *)a5.i8 = vmovn_s16(a5);
      *(_DWORD *)((char *)a1 + a3) = a5.i32[0];
    }
  }
  return *(double *)a5.i64;
}

double from_422_to_2vuy<1,1,(AlphaOutputMethod)0,false>(_DWORD *a1, __int16 *a2, int a3, int a4, int16x8_t a5, double a6, double a7, int16x8_t a8)
{
  if (a4 >= 1)
  {
    v8.i16[0] = a2[4];
    v8.i16[1] = *a2;
    v8.i16[2] = a2[5];
    v8.i16[3] = a2[1];
    a5.i32[0] = 8257662;
    a5.i16[2] = 126;
    a5.i16[3] = 126;
    *(int8x8_t *)a8.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v8, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
    *a1 = vmovn_s16(a8).u32[0];
    if (a4 != 1)
    {
      v9.i16[0] = a2[6];
      v9.i16[1] = a2[2];
      v9.i16[2] = a2[7];
      v9.i16[3] = a2[3];
      *(int8x8_t *)a5.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v9, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
      *(int8x8_t *)a5.i8 = vmovn_s16(a5);
      *(_DWORD *)((char *)a1 + a3) = a5.i32[0];
    }
  }
  return *(double *)a5.i64;
}

double from_422_to_2vuy<1,1,(AlphaOutputMethod)0,true>(_DWORD *a1, __int16 *a2, int a3, int a4, int16x8_t a5, double a6, double a7, int16x8_t a8)
{
  if (a4 >= 1)
  {
    v8.i16[0] = a2[4];
    v8.i16[1] = *a2;
    v8.i16[2] = a2[5];
    v8.i16[3] = a2[1];
    a5.i32[0] = 8257662;
    a5.i16[2] = 126;
    a5.i16[3] = 126;
    *(int8x8_t *)a8.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v8, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
    *a1 = vmovn_s16(a8).u32[0];
    if (a4 != 1)
    {
      v9.i16[0] = a2[6];
      v9.i16[1] = a2[2];
      v9.i16[2] = a2[7];
      v9.i16[3] = a2[3];
      *(int8x8_t *)a5.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v9, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
      *(int8x8_t *)a5.i8 = vmovn_s16(a5);
      *(_DWORD *)((char *)a1 + a3) = a5.i32[0];
    }
  }
  return *(double *)a5.i64;
}

int16x8_t *from_422_to_y408<8,8,(AlphaOutputMethod)1,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int8x16_t v33 = a2 + 8;
    int v34 = a2 + 32;
    int8x16_t v35 = a2 + 40;
    int v37 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  int16x4_t v9 = (__int16 *)result;
  do
  {
    int16x4_t v10 = a2 + 1;
    int16x4_t v11 = (int16x8_t *)((char *)result + 8 * a3);
    int8x16_t v12 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v8);
    int8x16_t v13 = vzip1q_s8(v12, v12);
    int8x16_t v14 = vzip2q_s8(v12, v12);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v8);
    int16x4x2_t v16 = (int16x4x2_t)vzip1q_s8(*a5, v15);
    int16x4x2_t v17 = (int16x4x2_t)vzip2q_s8(*a5, v15);
    int16x8_t v18 = (int16x8_t)vzip1q_s8(v13, v14);
    int16x8_t v19 = (int16x8_t)vzip2q_s8(v13, v14);
    vst2_s16(v9, v16);
    int16x4_t v9 = (__int16 *)((char *)v9 + a3);
    result[1] = vzip2q_s16((int16x8_t)v16, v18);
    i16 = result[2].i16;
    vst2_s16(i16, v17);
    result[3] = vzip2q_s16((int16x8_t)v17, v19);
    CFIndex result = (int16x8_t *)v9;
    int8x16_t v21 = *(int8x16_t *)((char *)a5 + 8 * a6);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v22 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v8);
    int8x16_t v23 = vzip1q_s8(v22, v22);
    int8x16_t v24 = vzip2q_s8(v22, v22);
    int8x16_t v25 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v8);
    int16x4x2_t v26 = (int16x4x2_t)vzip1q_s8(v21, v25);
    int16x4x2_t v27 = (int16x4x2_t)vzip2q_s8(v21, v25);
    int16x8_t v28 = (int16x8_t)vzip1q_s8(v23, v24);
    int16x8_t v29 = (int16x8_t)vzip2q_s8(v23, v24);
    uint8x16_t v30 = (__int16 *)v11;
    vst2_s16(v30, v26);
    v30 += 8;
    *(int16x8_t *)uint8x16_t v30 = vzip2q_s16((int16x8_t)v26, v28);
    int8x16_t v31 = v11[2].i16;
    vst2_s16(v31, v27);
    v11[3] = vzip2q_s16((int16x8_t)v27, v29);
    int v32 = v7 - 1;
    LODWORD(v31) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v31 > 1);
  int8x16_t v33 = v10 + 8;
  int v34 = v10 + 32;
  int8x16_t v35 = v10 + 40;
  if (a4 <= 8) {
    int v36 = 8;
  }
  else {
    int v36 = a4;
  }
  int v37 = v32 - v36;
  a2 = v10;
  if (v32 - v36 >= 1)
  {
LABEL_13:
    int8x16_t v38 = result + 2;
    unsigned int v39 = v37 + 1;
    v40.i64[0] = 0x8080808080808080;
    v40.i64[1] = 0x8080808080808080;
    int8x16_t v41 = result[2].i16;
    do
    {
      int16x8_t v42 = *a2++;
      int16x8_t v43 = v42;
      int16x8_t v44 = v38[-2].i16;
      int16x8_t v45 = *v33++;
      int8x16_t v46 = vqmovn_high_s16(vqmovn_s16(v43), v45);
      int16x8_t v47 = *v34++;
      int16x8_t v48 = v47;
      int16x8_t v49 = *v35++;
      int8x16_t v50 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v48), v49), v40);
      int8x16_t v51 = vzip1q_s8(v50, v50);
      int8x16_t v52 = vzip2q_s8(v50, v50);
      int8x16_t v53 = veorq_s8(v46, v40);
      int16x4x2_t v54 = (int16x4x2_t)vzip1q_s8(*a5, v53);
      int16x4x2_t v55 = (int16x4x2_t)vzip2q_s8(*a5, v53);
      int16x8_t v56 = (int16x8_t)vzip1q_s8(v51, v52);
      vst2_s16(v44, v54);
      int16x8_t v57 = (int16x8_t)vzip2q_s8(v51, v52);
      v38[-1] = vzip2q_s16((int16x8_t)v54, v56);
      vst2_s16(v41, v55);
      int8x16_t v41 = (__int16 *)((char *)v41 + a3);
      v38[1] = vzip2q_s16((int16x8_t)v55, v57);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v39;
      int8x16_t v38 = (int16x8_t *)v41;
    }
    while (v39 > 1);
  }
  return result;
}

int16x8_t *from_422_to_y408<8,8,(AlphaOutputMethod)1,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int8x16_t v33 = a2 + 8;
    int v34 = a2 + 32;
    int8x16_t v35 = a2 + 40;
    int v37 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  int16x4_t v9 = (__int16 *)result;
  do
  {
    int16x4_t v10 = a2 + 1;
    int16x4_t v11 = (int16x8_t *)((char *)result + 8 * a3);
    int8x16_t v12 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v8);
    int8x16_t v13 = vzip1q_s8(v12, v12);
    int8x16_t v14 = vzip2q_s8(v12, v12);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v8);
    int16x4x2_t v16 = (int16x4x2_t)vzip1q_s8(*a5, v15);
    int16x4x2_t v17 = (int16x4x2_t)vzip2q_s8(*a5, v15);
    int16x8_t v18 = (int16x8_t)vzip1q_s8(v13, v14);
    int16x8_t v19 = (int16x8_t)vzip2q_s8(v13, v14);
    vst2_s16(v9, v16);
    int16x4_t v9 = (__int16 *)((char *)v9 + a3);
    result[1] = vzip2q_s16((int16x8_t)v16, v18);
    i16 = result[2].i16;
    vst2_s16(i16, v17);
    result[3] = vzip2q_s16((int16x8_t)v17, v19);
    CFIndex result = (int16x8_t *)v9;
    int8x16_t v21 = *(int8x16_t *)((char *)a5 + 8 * a6);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v22 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v8);
    int8x16_t v23 = vzip1q_s8(v22, v22);
    int8x16_t v24 = vzip2q_s8(v22, v22);
    int8x16_t v25 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v8);
    int16x4x2_t v26 = (int16x4x2_t)vzip1q_s8(v21, v25);
    int16x4x2_t v27 = (int16x4x2_t)vzip2q_s8(v21, v25);
    int16x8_t v28 = (int16x8_t)vzip1q_s8(v23, v24);
    int16x8_t v29 = (int16x8_t)vzip2q_s8(v23, v24);
    uint8x16_t v30 = (__int16 *)v11;
    vst2_s16(v30, v26);
    v30 += 8;
    *(int16x8_t *)uint8x16_t v30 = vzip2q_s16((int16x8_t)v26, v28);
    int8x16_t v31 = v11[2].i16;
    vst2_s16(v31, v27);
    v11[3] = vzip2q_s16((int16x8_t)v27, v29);
    int v32 = v7 - 1;
    LODWORD(v31) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v31 > 1);
  int8x16_t v33 = v10 + 8;
  int v34 = v10 + 32;
  int8x16_t v35 = v10 + 40;
  if (a4 <= 8) {
    int v36 = 8;
  }
  else {
    int v36 = a4;
  }
  int v37 = v32 - v36;
  a2 = v10;
  if (v32 - v36 >= 1)
  {
LABEL_13:
    int8x16_t v38 = result + 2;
    unsigned int v39 = v37 + 1;
    v40.i64[0] = 0x8080808080808080;
    v40.i64[1] = 0x8080808080808080;
    int8x16_t v41 = result[2].i16;
    do
    {
      int16x8_t v42 = *a2++;
      int16x8_t v43 = v42;
      int16x8_t v44 = v38[-2].i16;
      int16x8_t v45 = *v33++;
      int8x16_t v46 = vqmovn_high_s16(vqmovn_s16(v43), v45);
      int16x8_t v47 = *v34++;
      int16x8_t v48 = v47;
      int16x8_t v49 = *v35++;
      int8x16_t v50 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v48), v49), v40);
      int8x16_t v51 = vzip1q_s8(v50, v50);
      int8x16_t v52 = vzip2q_s8(v50, v50);
      int8x16_t v53 = veorq_s8(v46, v40);
      int16x4x2_t v54 = (int16x4x2_t)vzip1q_s8(*a5, v53);
      int16x4x2_t v55 = (int16x4x2_t)vzip2q_s8(*a5, v53);
      int16x8_t v56 = (int16x8_t)vzip1q_s8(v51, v52);
      vst2_s16(v44, v54);
      int16x8_t v57 = (int16x8_t)vzip2q_s8(v51, v52);
      v38[-1] = vzip2q_s16((int16x8_t)v54, v56);
      vst2_s16(v41, v55);
      int8x16_t v41 = (__int16 *)((char *)v41 + a3);
      v38[1] = vzip2q_s16((int16x8_t)v55, v57);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v39;
      int8x16_t v38 = (int16x8_t *)v41;
    }
    while (v39 > 1);
  }
  return result;
}

int16x8_t *from_422_to_y408<8,4,(AlphaOutputMethod)1,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (2 * a6);
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (!v7)
  {
    int v34 = a2 + 4;
    int8x16_t v35 = a2 + 16;
    int v36 = a2 + 20;
    int v38 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v8 = a4 + 4;
  v9.i64[0] = 0x8080808080808080;
  v9.i64[1] = 0x8080808080808080;
  int16x4_t v10 = (__int16 *)result;
  do
  {
    int16x4_t v11 = a2 + 1;
    int8x16_t v12 = (int16x8_t *)((char *)result + 4 * a3);
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), v9);
    int8x16_t v14 = vzip1q_s8(v13, v13);
    int8x16_t v15 = vzip2q_s8(v13, v13);
    int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v9);
    int16x4x2_t v17 = (int16x4x2_t)vzip1q_s8(*a5, v16);
    int16x4x2_t v18 = (int16x4x2_t)vzip2q_s8(*a5, v16);
    int16x8_t v19 = (int16x8_t)vzip1q_s8(v14, v15);
    int16x8_t v20 = (int16x8_t)vzip2q_s8(v14, v15);
    vst2_s16(v10, v17);
    int16x4_t v10 = (__int16 *)((char *)v10 + a3);
    result[1] = vzip2q_s16((int16x8_t)v17, v19);
    i16 = result[2].i16;
    vst2_s16(i16, v18);
    result[3] = vzip2q_s16((int16x8_t)v18, v20);
    CFIndex result = (int16x8_t *)v10;
    int8x16_t v22 = *(int8x16_t *)((char *)a5 + (8 * a6));
    a5 = (int8x16_t *)((char *)a5 + v6);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), v9);
    int8x16_t v24 = vzip1q_s8(v23, v23);
    int8x16_t v25 = vzip2q_s8(v23, v23);
    int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v9);
    int16x4x2_t v27 = (int16x4x2_t)vzip1q_s8(v22, v26);
    int16x4x2_t v28 = (int16x4x2_t)vzip2q_s8(v22, v26);
    int16x8_t v29 = (int16x8_t)vzip1q_s8(v24, v25);
    int16x8_t v30 = (int16x8_t)vzip2q_s8(v24, v25);
    int8x16_t v31 = (__int16 *)v12;
    vst2_s16(v31, v27);
    v31 += 8;
    *(int16x8_t *)int8x16_t v31 = vzip2q_s16((int16x8_t)v27, v29);
    int v32 = v12[2].i16;
    vst2_s16(v32, v28);
    v12[3] = vzip2q_s16((int16x8_t)v28, v30);
    int v33 = v8 - 1;
    LODWORD(v32) = v8 - 8;
    --v8;
    ++a2;
  }
  while ((int)v32 > 1);
  int v34 = v11 + 4;
  int8x16_t v35 = v11 + 16;
  int v36 = v11 + 20;
  if (a4 <= 4) {
    int v37 = 4;
  }
  else {
    int v37 = a4;
  }
  int v38 = v33 - v37;
  a2 = v11;
  if (v38 >= 1)
  {
LABEL_13:
    unsigned int v39 = result + 2;
    unsigned int v40 = v38 + 1;
    v41.i64[0] = 0x8080808080808080;
    v41.i64[1] = 0x8080808080808080;
    int16x8_t v42 = result[2].i16;
    do
    {
      int16x8_t v43 = *a2++;
      int16x8_t v44 = v43;
      int16x8_t v45 = v39[-2].i16;
      int16x8_t v46 = *v34++;
      int8x16_t v47 = vqmovn_high_s16(vqmovn_s16(v44), v46);
      int16x8_t v48 = *v35++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v36++;
      int8x16_t v51 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v49), v50), v41);
      int8x16_t v52 = vzip1q_s8(v51, v51);
      int8x16_t v53 = vzip2q_s8(v51, v51);
      int8x16_t v54 = veorq_s8(v47, v41);
      int16x4x2_t v55 = (int16x4x2_t)vzip1q_s8(*a5, v54);
      int16x4x2_t v56 = (int16x4x2_t)vzip2q_s8(*a5, v54);
      int16x8_t v57 = (int16x8_t)vzip1q_s8(v52, v53);
      vst2_s16(v45, v55);
      int16x8_t v58 = (int16x8_t)vzip2q_s8(v52, v53);
      v39[-1] = vzip2q_s16((int16x8_t)v55, v57);
      vst2_s16(v42, v56);
      int16x8_t v42 = (__int16 *)((char *)v42 + a3);
      v39[1] = vzip2q_s16((int16x8_t)v56, v58);
      a5 = (int8x16_t *)((char *)a5 + v6);
      --v40;
      unsigned int v39 = (int16x8_t *)v42;
    }
    while (v40 > 1);
  }
  return result;
}

int16x8_t *from_422_to_y408<8,4,(AlphaOutputMethod)1,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (2 * a6);
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (!v7)
  {
    int v34 = a2 + 4;
    int8x16_t v35 = a2 + 16;
    int v36 = a2 + 20;
    int v38 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v8 = a4 + 4;
  v9.i64[0] = 0x8080808080808080;
  v9.i64[1] = 0x8080808080808080;
  int16x4_t v10 = (__int16 *)result;
  do
  {
    int16x4_t v11 = a2 + 1;
    int8x16_t v12 = (int16x8_t *)((char *)result + 4 * a3);
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), v9);
    int8x16_t v14 = vzip1q_s8(v13, v13);
    int8x16_t v15 = vzip2q_s8(v13, v13);
    int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v9);
    int16x4x2_t v17 = (int16x4x2_t)vzip1q_s8(*a5, v16);
    int16x4x2_t v18 = (int16x4x2_t)vzip2q_s8(*a5, v16);
    int16x8_t v19 = (int16x8_t)vzip1q_s8(v14, v15);
    int16x8_t v20 = (int16x8_t)vzip2q_s8(v14, v15);
    vst2_s16(v10, v17);
    int16x4_t v10 = (__int16 *)((char *)v10 + a3);
    result[1] = vzip2q_s16((int16x8_t)v17, v19);
    i16 = result[2].i16;
    vst2_s16(i16, v18);
    result[3] = vzip2q_s16((int16x8_t)v18, v20);
    CFIndex result = (int16x8_t *)v10;
    int8x16_t v22 = *(int8x16_t *)((char *)a5 + (8 * a6));
    a5 = (int8x16_t *)((char *)a5 + v6);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), v9);
    int8x16_t v24 = vzip1q_s8(v23, v23);
    int8x16_t v25 = vzip2q_s8(v23, v23);
    int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v9);
    int16x4x2_t v27 = (int16x4x2_t)vzip1q_s8(v22, v26);
    int16x4x2_t v28 = (int16x4x2_t)vzip2q_s8(v22, v26);
    int16x8_t v29 = (int16x8_t)vzip1q_s8(v24, v25);
    int16x8_t v30 = (int16x8_t)vzip2q_s8(v24, v25);
    int8x16_t v31 = (__int16 *)v12;
    vst2_s16(v31, v27);
    v31 += 8;
    *(int16x8_t *)int8x16_t v31 = vzip2q_s16((int16x8_t)v27, v29);
    int v32 = v12[2].i16;
    vst2_s16(v32, v28);
    v12[3] = vzip2q_s16((int16x8_t)v28, v30);
    int v33 = v8 - 1;
    LODWORD(v32) = v8 - 8;
    --v8;
    ++a2;
  }
  while ((int)v32 > 1);
  int v34 = v11 + 4;
  int8x16_t v35 = v11 + 16;
  int v36 = v11 + 20;
  if (a4 <= 4) {
    int v37 = 4;
  }
  else {
    int v37 = a4;
  }
  int v38 = v33 - v37;
  a2 = v11;
  if (v38 >= 1)
  {
LABEL_13:
    unsigned int v39 = result + 2;
    unsigned int v40 = v38 + 1;
    v41.i64[0] = 0x8080808080808080;
    v41.i64[1] = 0x8080808080808080;
    int16x8_t v42 = result[2].i16;
    do
    {
      int16x8_t v43 = *a2++;
      int16x8_t v44 = v43;
      int16x8_t v45 = v39[-2].i16;
      int16x8_t v46 = *v34++;
      int8x16_t v47 = vqmovn_high_s16(vqmovn_s16(v44), v46);
      int16x8_t v48 = *v35++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v36++;
      int8x16_t v51 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v49), v50), v41);
      int8x16_t v52 = vzip1q_s8(v51, v51);
      int8x16_t v53 = vzip2q_s8(v51, v51);
      int8x16_t v54 = veorq_s8(v47, v41);
      int16x4x2_t v55 = (int16x4x2_t)vzip1q_s8(*a5, v54);
      int16x4x2_t v56 = (int16x4x2_t)vzip2q_s8(*a5, v54);
      int16x8_t v57 = (int16x8_t)vzip1q_s8(v52, v53);
      vst2_s16(v45, v55);
      int16x8_t v58 = (int16x8_t)vzip2q_s8(v52, v53);
      v39[-1] = vzip2q_s16((int16x8_t)v55, v57);
      vst2_s16(v42, v56);
      int16x8_t v42 = (__int16 *)((char *)v42 + a3);
      v39[1] = vzip2q_s16((int16x8_t)v56, v58);
      a5 = (int8x16_t *)((char *)a5 + v6);
      --v40;
      unsigned int v39 = (int16x8_t *)v42;
    }
    while (v40 > 1);
  }
  return result;
}

double from_422_to_y408<4,8,(AlphaOutputMethod)1,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, int8x16_t a7)
{
  *(void *)&double result = from_422_to_y408_r408_4xH<false,(AlphaOutputMethod)1,false>(a1, a2, a3, a4, a5, a6, 8u, a7).u64[0];
  return result;
}

double from_422_to_y408<4,8,(AlphaOutputMethod)1,true>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, int8x16_t a7)
{
  *(void *)&double result = from_422_to_y408_r408_4xH<false,(AlphaOutputMethod)1,false>(a1, a2, a3, a4, a5, a6, 8u, a7).u64[0];
  return result;
}

double from_422_to_y408<4,4,(AlphaOutputMethod)1,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, int8x16_t a7)
{
  *(void *)&double result = from_422_to_y408_r408_4xH<false,(AlphaOutputMethod)1,false>(a1, a2, a3, a4, a5, a6, 4u, a7).u64[0];
  return result;
}

double from_422_to_y408<4,4,(AlphaOutputMethod)1,true>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, int8x16_t a7)
{
  *(void *)&double result = from_422_to_y408_r408_4xH<false,(AlphaOutputMethod)1,false>(a1, a2, a3, a4, a5, a6, 4u, a7).u64[0];
  return result;
}

double from_422_to_y408<4,2,(AlphaOutputMethod)1,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, int8x16_t a7)
{
  *(void *)&double result = from_422_to_y408_r408_4xH<false,(AlphaOutputMethod)1,false>(a1, a2, a3, a4, a5, a6, 2u, a7).u64[0];
  return result;
}

double from_422_to_y408<4,2,(AlphaOutputMethod)1,true>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, int8x16_t a7)
{
  *(void *)&double result = from_422_to_y408_r408_4xH<false,(AlphaOutputMethod)1,false>(a1, a2, a3, a4, a5, a6, 2u, a7).u64[0];
  return result;
}

int16x8_t from_422_to_y408<2,4,(AlphaOutputMethod)1,false>(__int16 *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6, int16x8_t result)
{
  int v7 = &a1[2 * a3];
  int v8 = (int8x16_t *)((char *)a5 + (8 * a6));
  uint64_t v9 = (2 * a6);
  if (a4 == 8)
  {
    int16x8_t v10 = *a2;
    int16x8_t v11 = a2[1];
    *(int8x8_t *)v10.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v11.i8 = vqmovn_s16(v11);
    int8x16_t v12 = (int8x16_t)vzip1q_s16(v10, v11);
    v10.i64[0] = 0x8080808080808080;
    v10.i64[1] = 0x8080808080808080;
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), (int8x16_t)v10);
    int8x16_t v14 = vzip1q_s8(v13, v13);
    int8x16_t v15 = vzip2q_s8(v13, v13);
    v13.i64[0] = 0xFF000000FFLL;
    v13.i64[1] = 0xFF000000FFLL;
    int8x16_t v16 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v13)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v13))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v13)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v13)));
    int8x16_t v17 = veorq_s8(v12, (int8x16_t)v10);
    int16x4x2_t v18 = (int16x4x2_t)vzip1q_s8(v16, v17);
    int16x4x2_t v19 = (int16x4x2_t)vzip2q_s8(v16, v17);
    int16x8_t v20 = (int16x8_t)vzip1q_s8(v14, v15);
    int16x8_t v21 = (int16x8_t)vzip2q_s8(v14, v15);
    vst2_s16(a1, v18);
    int8x16_t v22 = (int16x8_t *)((char *)a1 + a3);
    int16x8_t *v22 = vzip2q_s16((int16x8_t)v18, v20);
    int8x16_t v23 = (__int16 *)((char *)v22->i16 + a3);
    vst2_s16(v23, v19);
    int8x16_t v24 = (int16x8_t *)((char *)v23 + a3);
    int16x8_t *v24 = vzip2q_s16((int16x8_t)v19, v21);
    int16x8_t v25 = a2[2];
    int16x8_t v26 = a2[3];
    *(int8x8_t *)v25.i8 = vqmovn_s16(v25);
    *(int8x8_t *)v26.i8 = vqmovn_s16(v26);
    int8x16_t v27 = (int8x16_t)vzip1q_s16(v25, v26);
    int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), (int8x16_t)v10);
    int8x16_t v29 = vzip1q_s8(v28, v28);
    int8x16_t v30 = vzip2q_s8(v28, v28);
    int8x16_t v31 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, v13)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), v13))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), v13)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), v13)));
    int8x16_t v32 = veorq_s8(v27, (int8x16_t)v10);
    int16x4x2_t v33 = (int16x4x2_t)vzip1q_s8(v31, v32);
    int16x4x2_t v34 = (int16x4x2_t)vzip2q_s8(v31, v32);
    int16x8_t v35 = (int16x8_t)vzip1q_s8(v29, v30);
    int16x8_t v36 = (int16x8_t)vzip2q_s8(v29, v30);
    vst2_s16(v7, v33);
    int v37 = (int16x8_t *)((char *)v7 + a3);
    *int v37 = vzip2q_s16((int16x8_t)v33, v35);
    int v38 = (__int16 *)((char *)v37->i16 + a3);
    vst2_s16(v38, v34);
    unsigned int v39 = (int16x8_t *)((char *)v38 + a3);
    double result = vzip2q_s16((int16x8_t)v34, v36);
    *unsigned int v39 = result;
    return result;
  }
  if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v66 = *a2;
      int16x8_t v67 = a2[1];
      *(int8x8_t *)v66.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v67.i8 = vqmovn_s16(v67);
      int8x16_t v68 = (int8x16_t)vzip1q_s16(v66, v67);
      v69.i64[0] = 0x8080808080808080;
      v69.i64[1] = 0x8080808080808080;
      int8x16_t v70 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v69);
      double result = (int16x8_t)vzip1q_s8(v70, v70);
      int8x16_t v71 = vzip2q_s8(v70, v70);
      v72.i64[0] = 0xFF000000FFLL;
      v72.i64[1] = 0xFF000000FFLL;
      int8x16_t v73 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v72)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v72))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v72)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v72)));
      int8x16_t v74 = veorq_s8(v68, v69);
      int16x4x2_t v75 = (int16x4x2_t)vzip1q_s8(v73, v74);
      int16x8_t v76 = (int16x8_t)vzip1q_s8((int8x16_t)result, v71);
      vst2_s16(a1, v75);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          double result = vzip2q_s16((int16x8_t)v75, v76);
          *(int16x8_t *)((char *)a1 + a3) = result;
        }
      }
      else
      {
        int16x8_t v63 = (int16x8_t)vzip2q_s8((int8x16_t)result, v71);
        double result = (int16x8_t)vzip2q_s8(v73, v74);
        *(int16x8_t *)((char *)a1 + a3) = vzip2q_s16((int16x8_t)v75, v76);
        int v7 = (__int16 *)((char *)a1 + a3 + a3);
        vst2_s16(v7, (int16x4x2_t)result);
        if (a4 == 4)
        {
LABEL_11:
          double result = vzip2q_s16(result, v63);
          *(int16x8_t *)((char *)v7 + a3) = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v40 = *a2;
    int16x8_t v41 = a2[1];
    *(int8x8_t *)v40.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v41.i8 = vqmovn_s16(v41);
    int8x16_t v42 = (int8x16_t)vzip1q_s16(v40, v41);
    v40.i64[0] = 0x8080808080808080;
    v40.i64[1] = 0x8080808080808080;
    int8x16_t v43 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), (int8x16_t)v40);
    int8x16_t v44 = vzip1q_s8(v43, v43);
    int8x16_t v45 = vzip2q_s8(v43, v43);
    v43.i64[0] = 0xFF000000FFLL;
    v43.i64[1] = 0xFF000000FFLL;
    int8x16_t v46 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v43)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v43))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v43)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v43)));
    int8x16_t v47 = veorq_s8(v42, (int8x16_t)v40);
    int16x4x2_t v48 = (int16x4x2_t)vzip1q_s8(v46, v47);
    int16x4x2_t v49 = (int16x4x2_t)vzip2q_s8(v46, v47);
    int16x8_t v50 = (int16x8_t)vzip1q_s8(v44, v45);
    int16x8_t v51 = (int16x8_t)vzip2q_s8(v44, v45);
    vst2_s16(a1, v48);
    int8x16_t v52 = (int16x8_t *)((char *)a1 + a3);
    *int8x16_t v52 = vzip2q_s16((int16x8_t)v48, v50);
    int8x16_t v53 = (__int16 *)((char *)v52->i16 + a3);
    vst2_s16(v53, v49);
    int8x16_t v54 = (int16x8_t *)((char *)v53 + a3);
    *int8x16_t v54 = vzip2q_s16((int16x8_t)v49, v51);
    int16x8_t v55 = a2[2];
    int16x8_t v56 = a2[3];
    *(int8x8_t *)v55.i8 = vqmovn_s16(v55);
    *(int8x8_t *)v56.i8 = vqmovn_s16(v56);
    int8x16_t v57 = (int8x16_t)vzip1q_s16(v55, v56);
    int8x16_t v58 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), (int8x16_t)v40);
    int8x16_t v59 = vzip1q_s8(v58, v58);
    int8x16_t v60 = vzip2q_s8(v58, v58);
    int8x16_t v61 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, v43)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), v43))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), v43)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), v43)));
    int8x16_t v62 = veorq_s8(v57, (int8x16_t)v40);
    double result = (int16x8_t)vzip1q_s8(v61, v62);
    int16x8_t v63 = (int16x8_t)vzip1q_s8(v59, v60);
    vst2_s16(v7, (int16x4x2_t)result);
    if (a4 >= 7)
    {
      v77.val[1] = (int16x4_t)vzip2q_s8(v59, v60).u64[0];
      v77.val[0] = (int16x4_t)vzip2q_s8(v61, v62).u64[0];
      uint32x4_t v64 = (int16x8_t *)((char *)v7 + a3);
      double result = vzip2q_s16(result, v63);
      *uint32x4_t v64 = result;
      int8x16_t v65 = (__int16 *)((char *)v64->i16 + a3);
      vst2_s16(v65, v77);
      return result;
    }
    if (a4 == 6) {
      goto LABEL_11;
    }
  }
  return result;
}

int16x8_t from_422_to_y408<2,4,(AlphaOutputMethod)1,true>(__int16 *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6, int16x8_t result)
{
  int v7 = &a1[2 * a3];
  int v8 = (int8x16_t *)((char *)a5 + (8 * a6));
  uint64_t v9 = (2 * a6);
  if (a4 == 8)
  {
    int16x8_t v10 = *a2;
    int16x8_t v11 = a2[1];
    *(int8x8_t *)v10.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v11.i8 = vqmovn_s16(v11);
    int8x16_t v12 = (int8x16_t)vzip1q_s16(v10, v11);
    v10.i64[0] = 0x8080808080808080;
    v10.i64[1] = 0x8080808080808080;
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), (int8x16_t)v10);
    int8x16_t v14 = vzip1q_s8(v13, v13);
    int8x16_t v15 = vzip2q_s8(v13, v13);
    v13.i64[0] = 0xFF000000FFLL;
    v13.i64[1] = 0xFF000000FFLL;
    int8x16_t v16 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v13)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v13))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v13)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v13)));
    int8x16_t v17 = veorq_s8(v12, (int8x16_t)v10);
    int16x4x2_t v18 = (int16x4x2_t)vzip1q_s8(v16, v17);
    int16x4x2_t v19 = (int16x4x2_t)vzip2q_s8(v16, v17);
    int16x8_t v20 = (int16x8_t)vzip1q_s8(v14, v15);
    int16x8_t v21 = (int16x8_t)vzip2q_s8(v14, v15);
    vst2_s16(a1, v18);
    int8x16_t v22 = (int16x8_t *)((char *)a1 + a3);
    int16x8_t *v22 = vzip2q_s16((int16x8_t)v18, v20);
    int8x16_t v23 = (__int16 *)((char *)v22->i16 + a3);
    vst2_s16(v23, v19);
    int8x16_t v24 = (int16x8_t *)((char *)v23 + a3);
    int16x8_t *v24 = vzip2q_s16((int16x8_t)v19, v21);
    int16x8_t v25 = a2[2];
    int16x8_t v26 = a2[3];
    *(int8x8_t *)v25.i8 = vqmovn_s16(v25);
    *(int8x8_t *)v26.i8 = vqmovn_s16(v26);
    int8x16_t v27 = (int8x16_t)vzip1q_s16(v25, v26);
    int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), (int8x16_t)v10);
    int8x16_t v29 = vzip1q_s8(v28, v28);
    int8x16_t v30 = vzip2q_s8(v28, v28);
    int8x16_t v31 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, v13)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), v13))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), v13)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), v13)));
    int8x16_t v32 = veorq_s8(v27, (int8x16_t)v10);
    int16x4x2_t v33 = (int16x4x2_t)vzip1q_s8(v31, v32);
    int16x4x2_t v34 = (int16x4x2_t)vzip2q_s8(v31, v32);
    int16x8_t v35 = (int16x8_t)vzip1q_s8(v29, v30);
    int16x8_t v36 = (int16x8_t)vzip2q_s8(v29, v30);
    vst2_s16(v7, v33);
    int v37 = (int16x8_t *)((char *)v7 + a3);
    *int v37 = vzip2q_s16((int16x8_t)v33, v35);
    int v38 = (__int16 *)((char *)v37->i16 + a3);
    vst2_s16(v38, v34);
    unsigned int v39 = (int16x8_t *)((char *)v38 + a3);
    double result = vzip2q_s16((int16x8_t)v34, v36);
    *unsigned int v39 = result;
    return result;
  }
  if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v66 = *a2;
      int16x8_t v67 = a2[1];
      *(int8x8_t *)v66.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v67.i8 = vqmovn_s16(v67);
      int8x16_t v68 = (int8x16_t)vzip1q_s16(v66, v67);
      v69.i64[0] = 0x8080808080808080;
      v69.i64[1] = 0x8080808080808080;
      int8x16_t v70 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v69);
      double result = (int16x8_t)vzip1q_s8(v70, v70);
      int8x16_t v71 = vzip2q_s8(v70, v70);
      v72.i64[0] = 0xFF000000FFLL;
      v72.i64[1] = 0xFF000000FFLL;
      int8x16_t v73 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v72)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v72))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v72)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v72)));
      int8x16_t v74 = veorq_s8(v68, v69);
      int16x4x2_t v75 = (int16x4x2_t)vzip1q_s8(v73, v74);
      int16x8_t v76 = (int16x8_t)vzip1q_s8((int8x16_t)result, v71);
      vst2_s16(a1, v75);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          double result = vzip2q_s16((int16x8_t)v75, v76);
          *(int16x8_t *)((char *)a1 + a3) = result;
        }
      }
      else
      {
        int16x8_t v63 = (int16x8_t)vzip2q_s8((int8x16_t)result, v71);
        double result = (int16x8_t)vzip2q_s8(v73, v74);
        *(int16x8_t *)((char *)a1 + a3) = vzip2q_s16((int16x8_t)v75, v76);
        int v7 = (__int16 *)((char *)a1 + a3 + a3);
        vst2_s16(v7, (int16x4x2_t)result);
        if (a4 == 4)
        {
LABEL_11:
          double result = vzip2q_s16(result, v63);
          *(int16x8_t *)((char *)v7 + a3) = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v40 = *a2;
    int16x8_t v41 = a2[1];
    *(int8x8_t *)v40.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v41.i8 = vqmovn_s16(v41);
    int8x16_t v42 = (int8x16_t)vzip1q_s16(v40, v41);
    v40.i64[0] = 0x8080808080808080;
    v40.i64[1] = 0x8080808080808080;
    int8x16_t v43 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), (int8x16_t)v40);
    int8x16_t v44 = vzip1q_s8(v43, v43);
    int8x16_t v45 = vzip2q_s8(v43, v43);
    v43.i64[0] = 0xFF000000FFLL;
    v43.i64[1] = 0xFF000000FFLL;
    int8x16_t v46 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v43)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v43))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v43)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v43)));
    int8x16_t v47 = veorq_s8(v42, (int8x16_t)v40);
    int16x4x2_t v48 = (int16x4x2_t)vzip1q_s8(v46, v47);
    int16x4x2_t v49 = (int16x4x2_t)vzip2q_s8(v46, v47);
    int16x8_t v50 = (int16x8_t)vzip1q_s8(v44, v45);
    int16x8_t v51 = (int16x8_t)vzip2q_s8(v44, v45);
    vst2_s16(a1, v48);
    int8x16_t v52 = (int16x8_t *)((char *)a1 + a3);
    *int8x16_t v52 = vzip2q_s16((int16x8_t)v48, v50);
    int8x16_t v53 = (__int16 *)((char *)v52->i16 + a3);
    vst2_s16(v53, v49);
    int8x16_t v54 = (int16x8_t *)((char *)v53 + a3);
    *int8x16_t v54 = vzip2q_s16((int16x8_t)v49, v51);
    int16x8_t v55 = a2[2];
    int16x8_t v56 = a2[3];
    *(int8x8_t *)v55.i8 = vqmovn_s16(v55);
    *(int8x8_t *)v56.i8 = vqmovn_s16(v56);
    int8x16_t v57 = (int8x16_t)vzip1q_s16(v55, v56);
    int8x16_t v58 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), (int8x16_t)v40);
    int8x16_t v59 = vzip1q_s8(v58, v58);
    int8x16_t v60 = vzip2q_s8(v58, v58);
    int8x16_t v61 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, v43)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), v43))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), v43)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), v43)));
    int8x16_t v62 = veorq_s8(v57, (int8x16_t)v40);
    double result = (int16x8_t)vzip1q_s8(v61, v62);
    int16x8_t v63 = (int16x8_t)vzip1q_s8(v59, v60);
    vst2_s16(v7, (int16x4x2_t)result);
    if (a4 >= 7)
    {
      v77.val[1] = (int16x4_t)vzip2q_s8(v59, v60).u64[0];
      v77.val[0] = (int16x4_t)vzip2q_s8(v61, v62).u64[0];
      uint32x4_t v64 = (int16x8_t *)((char *)v7 + a3);
      double result = vzip2q_s16(result, v63);
      *uint32x4_t v64 = result;
      int8x16_t v65 = (__int16 *)((char *)v64->i16 + a3);
      vst2_s16(v65, v77);
      return result;
    }
    if (a4 == 6) {
      goto LABEL_11;
    }
  }
  return result;
}

void from_422_to_y408<2,2,(AlphaOutputMethod)1,false>(__int16 *a1, uint64_t a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (4 * a6);
  v7.i64[0] = 0x8080808080808080;
  v7.i64[1] = 0x8080808080808080;
  int32x4_t v8 = (int32x4_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48)), v7);
  int8x16_t v9 = (int8x16_t)vuzp1q_s32(v8, vrev64q_s32(v8));
  int8x16_t v10 = vzip1q_s8(v9, v9);
  int8x16_t v11 = vzip2q_s8(v9, v9);
  v12.i64[0] = 0xFF000000FFLL;
  v12.i64[1] = 0xFF000000FFLL;
  int8x16_t v13 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v12)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6), v12))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6), v12)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6 + v6), v12)));
  int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v7);
  int16x4x2_t v15 = (int16x4x2_t)vzip1q_s8(v13, v14);
  int16x4x2_t v16 = (int16x4x2_t)vzip2q_s8(v13, v14);
  int16x8_t v17 = (int16x8_t)vzip1q_s8(v10, v11);
  int16x8_t v18 = (int16x8_t)vzip2q_s8(v10, v11);
  if (a4 == 4)
  {
    uint64_t v19 = a3;
    vst2_s16(a1, v15);
    int16x8_t v20 = (int16x8_t *)((char *)a1 + v19);
    *int16x8_t v20 = vzip2q_s16((int16x8_t)v15, v17);
    int16x8_t v21 = (__int16 *)((char *)v20->i16 + a3);
    vst2_s16(v21, v16);
    int8x16_t v22 = (int16x8_t *)((char *)v21 + v19);
    int16x8_t *v22 = vzip2q_s16((int16x8_t)v16, v18);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v15);
    }
  }
  else
  {
    uint64_t v23 = a3;
    vst2_s16(a1, v15);
    int8x16_t v24 = (int16x8_t *)((char *)a1 + v23);
    int16x8_t *v24 = vzip2q_s16((int16x8_t)v15, v17);
    if (a4 == 3)
    {
      int16x8_t v25 = (__int16 *)((char *)v24->i16 + a3);
      vst2_s16(v25, v16);
    }
  }
}

void from_422_to_y408<2,2,(AlphaOutputMethod)1,true>(__int16 *a1, uint64_t a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (4 * a6);
  v7.i64[0] = 0x8080808080808080;
  v7.i64[1] = 0x8080808080808080;
  int32x4_t v8 = (int32x4_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48)), v7);
  int8x16_t v9 = (int8x16_t)vuzp1q_s32(v8, vrev64q_s32(v8));
  int8x16_t v10 = vzip1q_s8(v9, v9);
  int8x16_t v11 = vzip2q_s8(v9, v9);
  v12.i64[0] = 0xFF000000FFLL;
  v12.i64[1] = 0xFF000000FFLL;
  int8x16_t v13 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v12)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6), v12))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6), v12)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6 + v6), v12)));
  int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v7);
  int16x4x2_t v15 = (int16x4x2_t)vzip1q_s8(v13, v14);
  int16x4x2_t v16 = (int16x4x2_t)vzip2q_s8(v13, v14);
  int16x8_t v17 = (int16x8_t)vzip1q_s8(v10, v11);
  int16x8_t v18 = (int16x8_t)vzip2q_s8(v10, v11);
  if (a4 == 4)
  {
    uint64_t v19 = a3;
    vst2_s16(a1, v15);
    int16x8_t v20 = (int16x8_t *)((char *)a1 + v19);
    *int16x8_t v20 = vzip2q_s16((int16x8_t)v15, v17);
    int16x8_t v21 = (__int16 *)((char *)v20->i16 + a3);
    vst2_s16(v21, v16);
    int8x16_t v22 = (int16x8_t *)((char *)v21 + v19);
    int16x8_t *v22 = vzip2q_s16((int16x8_t)v16, v18);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v15);
    }
  }
  else
  {
    uint64_t v23 = a3;
    vst2_s16(a1, v15);
    int8x16_t v24 = (int16x8_t *)((char *)a1 + v23);
    int16x8_t *v24 = vzip2q_s16((int16x8_t)v15, v17);
    if (a4 == 3)
    {
      int16x8_t v25 = (__int16 *)((char *)v24->i16 + a3);
      vst2_s16(v25, v16);
    }
  }
}

unsigned char *from_422_to_y408<2,1,(AlphaOutputMethod)1,false>(unsigned char *a1, __int16 *a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 1);
}

unsigned char *from_422_to_y408<2,1,(AlphaOutputMethod)1,true>(unsigned char *a1, __int16 *a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 1);
}

unsigned char *from_422_to_y408<1,2,(AlphaOutputMethod)1,false>(unsigned char *a1, __int16 *a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 2);
}

unsigned char *from_422_to_y408<1,2,(AlphaOutputMethod)1,true>(unsigned char *a1, __int16 *a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 2);
}

unsigned char *from_422_to_y408<1,1,(AlphaOutputMethod)1,false>(unsigned char *a1, __int16 *a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 1);
}

unsigned char *from_422_to_y408<1,1,(AlphaOutputMethod)1,true>(unsigned char *a1, __int16 *a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 1);
}

int16x8_t *from_422_to_y408<8,8,(AlphaOutputMethod)2,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int8x16_t v31 = a2 + 8;
    int8x16_t v32 = a2 + 32;
    int16x4x2_t v33 = a2 + 40;
    int v35 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = -1;
  v7.i64[1] = -1;
  int32x4_t v8 = (__int16 *)result;
  do
  {
    int8x16_t v9 = a2 + 1;
    int8x16_t v10 = (int16x8_t *)((char *)result + 8 * a3);
    int8x16_t v11 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v6);
    int8x16_t v12 = vzip1q_s8(v11, v11);
    int8x16_t v13 = vzip2q_s8(v11, v11);
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6);
    int16x4x2_t v15 = (int16x4x2_t)vzip1q_s8(v7, v14);
    int16x8_t v16 = (int16x8_t)vzip1q_s8(v12, v13);
    vst2_s16(v8, v15);
    int32x4_t v8 = (__int16 *)((char *)v8 + a3);
    int16x4x2_t v17 = (int16x4x2_t)vzip2q_s8(v7, v14);
    int16x8_t v18 = (int16x8_t)vzip2q_s8(v12, v13);
    i16 = result[2].i16;
    vst2_s16(i16, v17);
    result[1] = vzip2q_s16((int16x8_t)v15, v16);
    result[3] = vzip2q_s16((int16x8_t)v17, v18);
    double result = (int16x8_t *)v8;
    int8x16_t v20 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v6);
    int8x16_t v21 = vzip1q_s8(v20, v20);
    int8x16_t v22 = vzip2q_s8(v20, v20);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6);
    int16x4x2_t v24 = (int16x4x2_t)vzip1q_s8(v7, v23);
    int16x4x2_t v25 = (int16x4x2_t)vzip2q_s8(v7, v23);
    int16x8_t v26 = (int16x8_t)vzip1q_s8(v21, v22);
    int16x8_t v27 = (int16x8_t)vzip2q_s8(v21, v22);
    int8x16_t v28 = (__int16 *)v10;
    vst2_s16(v28, v24);
    v28 += 8;
    *(int16x8_t *)int8x16_t v28 = vzip2q_s16((int16x8_t)v24, v26);
    int8x16_t v29 = v10[2].i16;
    vst2_s16(v29, v25);
    v10[3] = vzip2q_s16((int16x8_t)v25, v27);
    int v30 = v5 - 1;
    LODWORD(v29) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v29 > 1);
  int8x16_t v31 = v9 + 8;
  int8x16_t v32 = v9 + 32;
  int16x4x2_t v33 = v9 + 40;
  if (a4 <= 8) {
    int v34 = 8;
  }
  else {
    int v34 = a4;
  }
  int v35 = v30 - v34;
  a2 = v9;
  if (v35 >= 1)
  {
LABEL_13:
    int16x8_t v36 = result + 2;
    unsigned int v37 = v35 + 1;
    v38.i64[0] = 0x8080808080808080;
    v38.i64[1] = 0x8080808080808080;
    v39.i64[0] = -1;
    v39.i64[1] = -1;
    int16x8_t v40 = result[2].i16;
    do
    {
      int16x8_t v41 = *a2++;
      int16x8_t v42 = v41;
      int16x8_t v43 = *v31++;
      int16x8_t v44 = v43;
      int8x16_t v45 = v36[-2].i16;
      int16x8_t v46 = *v32++;
      int16x8_t v47 = v46;
      int16x8_t v48 = *v33++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v42), v44);
      int8x16_t v50 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v47), v48), v38);
      int8x16_t v51 = vzip1q_s8(v50, v50);
      int8x16_t v52 = vzip2q_s8(v50, v50);
      int8x16_t v53 = veorq_s8(v49, v38);
      int16x4x2_t v54 = (int16x4x2_t)vzip1q_s8(v39, v53);
      int16x4x2_t v55 = (int16x4x2_t)vzip2q_s8(v39, v53);
      int16x8_t v56 = (int16x8_t)vzip1q_s8(v51, v52);
      vst2_s16(v45, v54);
      int16x8_t v57 = (int16x8_t)vzip2q_s8(v51, v52);
      v36[-1] = vzip2q_s16((int16x8_t)v54, v56);
      vst2_s16(v40, v55);
      int16x8_t v40 = (__int16 *)((char *)v40 + a3);
      v36[1] = vzip2q_s16((int16x8_t)v55, v57);
      --v37;
      int16x8_t v36 = (int16x8_t *)v40;
    }
    while (v37 > 1);
  }
  return result;
}

int16x8_t *from_422_to_y408<8,8,(AlphaOutputMethod)2,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int8x16_t v31 = a2 + 8;
    int8x16_t v32 = a2 + 32;
    int16x4x2_t v33 = a2 + 40;
    int v35 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = -1;
  v7.i64[1] = -1;
  int32x4_t v8 = (__int16 *)result;
  do
  {
    int8x16_t v9 = a2 + 1;
    int8x16_t v10 = (int16x8_t *)((char *)result + 8 * a3);
    int8x16_t v11 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v6);
    int8x16_t v12 = vzip1q_s8(v11, v11);
    int8x16_t v13 = vzip2q_s8(v11, v11);
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6);
    int16x4x2_t v15 = (int16x4x2_t)vzip1q_s8(v7, v14);
    int16x8_t v16 = (int16x8_t)vzip1q_s8(v12, v13);
    vst2_s16(v8, v15);
    int32x4_t v8 = (__int16 *)((char *)v8 + a3);
    int16x4x2_t v17 = (int16x4x2_t)vzip2q_s8(v7, v14);
    int16x8_t v18 = (int16x8_t)vzip2q_s8(v12, v13);
    i16 = result[2].i16;
    vst2_s16(i16, v17);
    result[1] = vzip2q_s16((int16x8_t)v15, v16);
    result[3] = vzip2q_s16((int16x8_t)v17, v18);
    double result = (int16x8_t *)v8;
    int8x16_t v20 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v6);
    int8x16_t v21 = vzip1q_s8(v20, v20);
    int8x16_t v22 = vzip2q_s8(v20, v20);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6);
    int16x4x2_t v24 = (int16x4x2_t)vzip1q_s8(v7, v23);
    int16x4x2_t v25 = (int16x4x2_t)vzip2q_s8(v7, v23);
    int16x8_t v26 = (int16x8_t)vzip1q_s8(v21, v22);
    int16x8_t v27 = (int16x8_t)vzip2q_s8(v21, v22);
    int8x16_t v28 = (__int16 *)v10;
    vst2_s16(v28, v24);
    v28 += 8;
    *(int16x8_t *)int8x16_t v28 = vzip2q_s16((int16x8_t)v24, v26);
    int8x16_t v29 = v10[2].i16;
    vst2_s16(v29, v25);
    v10[3] = vzip2q_s16((int16x8_t)v25, v27);
    int v30 = v5 - 1;
    LODWORD(v29) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v29 > 1);
  int8x16_t v31 = v9 + 8;
  int8x16_t v32 = v9 + 32;
  int16x4x2_t v33 = v9 + 40;
  if (a4 <= 8) {
    int v34 = 8;
  }
  else {
    int v34 = a4;
  }
  int v35 = v30 - v34;
  a2 = v9;
  if (v35 >= 1)
  {
LABEL_13:
    int16x8_t v36 = result + 2;
    unsigned int v37 = v35 + 1;
    v38.i64[0] = 0x8080808080808080;
    v38.i64[1] = 0x8080808080808080;
    v39.i64[0] = -1;
    v39.i64[1] = -1;
    int16x8_t v40 = result[2].i16;
    do
    {
      int16x8_t v41 = *a2++;
      int16x8_t v42 = v41;
      int16x8_t v43 = *v31++;
      int16x8_t v44 = v43;
      int8x16_t v45 = v36[-2].i16;
      int16x8_t v46 = *v32++;
      int16x8_t v47 = v46;
      int16x8_t v48 = *v33++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v42), v44);
      int8x16_t v50 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v47), v48), v38);
      int8x16_t v51 = vzip1q_s8(v50, v50);
      int8x16_t v52 = vzip2q_s8(v50, v50);
      int8x16_t v53 = veorq_s8(v49, v38);
      int16x4x2_t v54 = (int16x4x2_t)vzip1q_s8(v39, v53);
      int16x4x2_t v55 = (int16x4x2_t)vzip2q_s8(v39, v53);
      int16x8_t v56 = (int16x8_t)vzip1q_s8(v51, v52);
      vst2_s16(v45, v54);
      int16x8_t v57 = (int16x8_t)vzip2q_s8(v51, v52);
      v36[-1] = vzip2q_s16((int16x8_t)v54, v56);
      vst2_s16(v40, v55);
      int16x8_t v40 = (__int16 *)((char *)v40 + a3);
      v36[1] = vzip2q_s16((int16x8_t)v55, v57);
      --v37;
      int16x8_t v36 = (int16x8_t *)v40;
    }
    while (v37 > 1);
  }
  return result;
}

int16x8_t *from_422_to_y408<8,4,(AlphaOutputMethod)2,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 4) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 4;
  }
  if (!v4)
  {
    int8x16_t v31 = a2 + 4;
    int8x16_t v32 = a2 + 16;
    int16x4x2_t v33 = a2 + 20;
    int v35 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 4;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = -1;
  v7.i64[1] = -1;
  int32x4_t v8 = (__int16 *)result;
  do
  {
    int8x16_t v9 = a2 + 1;
    int8x16_t v10 = (int16x8_t *)((char *)result + 4 * a3);
    int8x16_t v11 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), v6);
    int8x16_t v12 = vzip1q_s8(v11, v11);
    int8x16_t v13 = vzip2q_s8(v11, v11);
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v6);
    int16x4x2_t v15 = (int16x4x2_t)vzip1q_s8(v7, v14);
    int16x8_t v16 = (int16x8_t)vzip1q_s8(v12, v13);
    vst2_s16(v8, v15);
    int32x4_t v8 = (__int16 *)((char *)v8 + a3);
    int16x4x2_t v17 = (int16x4x2_t)vzip2q_s8(v7, v14);
    int16x8_t v18 = (int16x8_t)vzip2q_s8(v12, v13);
    i16 = result[2].i16;
    vst2_s16(i16, v17);
    result[1] = vzip2q_s16((int16x8_t)v15, v16);
    result[3] = vzip2q_s16((int16x8_t)v17, v18);
    double result = (int16x8_t *)v8;
    int8x16_t v20 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), v6);
    int8x16_t v21 = vzip1q_s8(v20, v20);
    int8x16_t v22 = vzip2q_s8(v20, v20);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v6);
    int16x4x2_t v24 = (int16x4x2_t)vzip1q_s8(v7, v23);
    int16x4x2_t v25 = (int16x4x2_t)vzip2q_s8(v7, v23);
    int16x8_t v26 = (int16x8_t)vzip1q_s8(v21, v22);
    int16x8_t v27 = (int16x8_t)vzip2q_s8(v21, v22);
    int8x16_t v28 = (__int16 *)v10;
    vst2_s16(v28, v24);
    v28 += 8;
    *(int16x8_t *)int8x16_t v28 = vzip2q_s16((int16x8_t)v24, v26);
    int8x16_t v29 = v10[2].i16;
    vst2_s16(v29, v25);
    v10[3] = vzip2q_s16((int16x8_t)v25, v27);
    int v30 = v5 - 1;
    LODWORD(v29) = v5 - 8;
    --v5;
    ++a2;
  }
  while ((int)v29 > 1);
  int8x16_t v31 = v9 + 4;
  int8x16_t v32 = v9 + 16;
  int16x4x2_t v33 = v9 + 20;
  if (a4 <= 4) {
    int v34 = 4;
  }
  else {
    int v34 = a4;
  }
  int v35 = v30 - v34;
  a2 = v9;
  if (v35 >= 1)
  {
LABEL_13:
    int16x8_t v36 = result + 2;
    unsigned int v37 = v35 + 1;
    v38.i64[0] = 0x8080808080808080;
    v38.i64[1] = 0x8080808080808080;
    v39.i64[0] = -1;
    v39.i64[1] = -1;
    int16x8_t v40 = result[2].i16;
    do
    {
      int16x8_t v41 = *a2++;
      int16x8_t v42 = v41;
      int16x8_t v43 = *v31++;
      int16x8_t v44 = v43;
      int8x16_t v45 = v36[-2].i16;
      int16x8_t v46 = *v32++;
      int16x8_t v47 = v46;
      int16x8_t v48 = *v33++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v42), v44);
      int8x16_t v50 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v47), v48), v38);
      int8x16_t v51 = vzip1q_s8(v50, v50);
      int8x16_t v52 = vzip2q_s8(v50, v50);
      int8x16_t v53 = veorq_s8(v49, v38);
      int16x4x2_t v54 = (int16x4x2_t)vzip1q_s8(v39, v53);
      int16x4x2_t v55 = (int16x4x2_t)vzip2q_s8(v39, v53);
      int16x8_t v56 = (int16x8_t)vzip1q_s8(v51, v52);
      vst2_s16(v45, v54);
      int16x8_t v57 = (int16x8_t)vzip2q_s8(v51, v52);
      v36[-1] = vzip2q_s16((int16x8_t)v54, v56);
      vst2_s16(v40, v55);
      int16x8_t v40 = (__int16 *)((char *)v40 + a3);
      v36[1] = vzip2q_s16((int16x8_t)v55, v57);
      --v37;
      int16x8_t v36 = (int16x8_t *)v40;
    }
    while (v37 > 1);
  }
  return result;
}

int16x8_t *from_422_to_y408<8,4,(AlphaOutputMethod)2,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 4) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 4;
  }
  if (!v4)
  {
    int8x16_t v31 = a2 + 4;
    int8x16_t v32 = a2 + 16;
    int16x4x2_t v33 = a2 + 20;
    int v35 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 4;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = -1;
  v7.i64[1] = -1;
  int32x4_t v8 = (__int16 *)result;
  do
  {
    int8x16_t v9 = a2 + 1;
    int8x16_t v10 = (int16x8_t *)((char *)result + 4 * a3);
    int8x16_t v11 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), v6);
    int8x16_t v12 = vzip1q_s8(v11, v11);
    int8x16_t v13 = vzip2q_s8(v11, v11);
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v6);
    int16x4x2_t v15 = (int16x4x2_t)vzip1q_s8(v7, v14);
    int16x8_t v16 = (int16x8_t)vzip1q_s8(v12, v13);
    vst2_s16(v8, v15);
    int32x4_t v8 = (__int16 *)((char *)v8 + a3);
    int16x4x2_t v17 = (int16x4x2_t)vzip2q_s8(v7, v14);
    int16x8_t v18 = (int16x8_t)vzip2q_s8(v12, v13);
    i16 = result[2].i16;
    vst2_s16(i16, v17);
    result[1] = vzip2q_s16((int16x8_t)v15, v16);
    result[3] = vzip2q_s16((int16x8_t)v17, v18);
    double result = (int16x8_t *)v8;
    int8x16_t v20 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), v6);
    int8x16_t v21 = vzip1q_s8(v20, v20);
    int8x16_t v22 = vzip2q_s8(v20, v20);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v6);
    int16x4x2_t v24 = (int16x4x2_t)vzip1q_s8(v7, v23);
    int16x4x2_t v25 = (int16x4x2_t)vzip2q_s8(v7, v23);
    int16x8_t v26 = (int16x8_t)vzip1q_s8(v21, v22);
    int16x8_t v27 = (int16x8_t)vzip2q_s8(v21, v22);
    int8x16_t v28 = (__int16 *)v10;
    vst2_s16(v28, v24);
    v28 += 8;
    *(int16x8_t *)int8x16_t v28 = vzip2q_s16((int16x8_t)v24, v26);
    int8x16_t v29 = v10[2].i16;
    vst2_s16(v29, v25);
    v10[3] = vzip2q_s16((int16x8_t)v25, v27);
    int v30 = v5 - 1;
    LODWORD(v29) = v5 - 8;
    --v5;
    ++a2;
  }
  while ((int)v29 > 1);
  int8x16_t v31 = v9 + 4;
  int8x16_t v32 = v9 + 16;
  int16x4x2_t v33 = v9 + 20;
  if (a4 <= 4) {
    int v34 = 4;
  }
  else {
    int v34 = a4;
  }
  int v35 = v30 - v34;
  a2 = v9;
  if (v35 >= 1)
  {
LABEL_13:
    int16x8_t v36 = result + 2;
    unsigned int v37 = v35 + 1;
    v38.i64[0] = 0x8080808080808080;
    v38.i64[1] = 0x8080808080808080;
    v39.i64[0] = -1;
    v39.i64[1] = -1;
    int16x8_t v40 = result[2].i16;
    do
    {
      int16x8_t v41 = *a2++;
      int16x8_t v42 = v41;
      int16x8_t v43 = *v31++;
      int16x8_t v44 = v43;
      int8x16_t v45 = v36[-2].i16;
      int16x8_t v46 = *v32++;
      int16x8_t v47 = v46;
      int16x8_t v48 = *v33++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v42), v44);
      int8x16_t v50 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v47), v48), v38);
      int8x16_t v51 = vzip1q_s8(v50, v50);
      int8x16_t v52 = vzip2q_s8(v50, v50);
      int8x16_t v53 = veorq_s8(v49, v38);
      int16x4x2_t v54 = (int16x4x2_t)vzip1q_s8(v39, v53);
      int16x4x2_t v55 = (int16x4x2_t)vzip2q_s8(v39, v53);
      int16x8_t v56 = (int16x8_t)vzip1q_s8(v51, v52);
      vst2_s16(v45, v54);
      int16x8_t v57 = (int16x8_t)vzip2q_s8(v51, v52);
      v36[-1] = vzip2q_s16((int16x8_t)v54, v56);
      vst2_s16(v40, v55);
      int16x8_t v40 = (__int16 *)((char *)v40 + a3);
      v36[1] = vzip2q_s16((int16x8_t)v55, v57);
      --v37;
      int16x8_t v36 = (int16x8_t *)v40;
    }
    while (v37 > 1);
  }
  return result;
}

int8x16_t from_422_to_y408<4,8,(AlphaOutputMethod)2,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = a3;
  uint64_t v6 = 4 * a3;
  if (a4 <= 8) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 8;
  }
  if (v7 < 2)
  {
    int v35 = a2 + 4;
    int16x8_t v36 = a2 + 8;
    unsigned int v37 = a2 + 12;
    int8x16_t v38 = a2 + 16;
    int8x16_t v39 = a2 + 20;
    int16x8_t v40 = a2 + 24;
    int16x8_t v41 = a2 + 28;
    int16x8_t v44 = &a1->i16[v6];
    int v43 = a4 - v7;
    if (!a4) {
      return result;
    }
  }
  else
  {
    int v8 = a4 + 8;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v10.i64[0] = -1;
    v10.i64[1] = -1;
    do
    {
      int8x16_t v11 = a2 + 1;
      int8x16_t v12 = &a1->i16[v6];
      int32x4_t v13 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[4]);
      int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), result);
      int8x16_t v15 = vzip1q_s8(v14, v14);
      int8x16_t v16 = vzip2q_s8(v14, v14);
      int8x16_t v17 = veorq_s8((int8x16_t)vuzp1q_s32(v13, vrev64q_s32(v13)), result);
      int16x4x2_t v18 = (int16x4x2_t)vzip1q_s8(v10, v17);
      int16x8_t v19 = (int16x8_t)vzip1q_s8(v15, v16);
      int8x16_t v20 = (__int16 *)a1;
      vst2_s16(v20, v18);
      uint64_t v9 = 9 * a3;
      int8x16_t v21 = (__int16 *)((char *)v20 + v9);
      a1[1] = vzip2q_s16((int16x8_t)v18, v19);
      int16x4x2_t v22 = (int16x4x2_t)vzip2q_s8(v10, v17);
      int16x8_t v23 = (int16x8_t)vzip2q_s8(v15, v16);
      int16x4x2_t v24 = (__int16 *)((char *)a1->i16 + a3);
      vst2_s16(v24, v22);
      v24 += 8;
      *(int16x8_t *)int16x4x2_t v24 = vzip2q_s16((int16x8_t)v22, v23);
      a1 = (int16x8_t *)((char *)a1 + 2 * a3);
      int32x4_t v25 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]);
      int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), result);
      int8x16_t v27 = vzip1q_s8(v26, v26);
      int8x16_t v28 = vzip2q_s8(v26, v26);
      int8x16_t v29 = veorq_s8((int8x16_t)vuzp1q_s32(v25, vrev64q_s32(v25)), result);
      int16x4x2_t v30 = (int16x4x2_t)vzip1q_s8(v10, v29);
      int16x8_t v31 = (int16x8_t)vzip1q_s8(v27, v28);
      vst2_s16(v12, v30);
      v12 += 8;
      *(int16x8_t *)int8x16_t v12 = vzip2q_s16((int16x8_t)v30, v31);
      int16x4x2_t v32 = (int16x4x2_t)vzip2q_s8(v10, v29);
      int16x8_t v33 = (int16x8_t)vzip2q_s8(v27, v28);
      vst2_s16(v21, v32);
      v21 += 8;
      *(int16x8_t *)int8x16_t v21 = vzip2q_s16((int16x8_t)v32, v33);
      int v34 = v8 - 2;
      LODWORD(v12) = v8 - 16;
      v8 -= 2;
      ++a2;
    }
    while (v12 > 3);
    int v35 = v11 + 4;
    int16x8_t v36 = v11 + 8;
    unsigned int v37 = v11 + 12;
    int8x16_t v38 = v11 + 16;
    int8x16_t v39 = v11 + 20;
    int16x8_t v40 = v11 + 24;
    int16x8_t v41 = v11 + 28;
    if (a4 <= 8) {
      int v42 = 8;
    }
    else {
      int v42 = a4;
    }
    int v43 = v34 - v42;
    int v7 = v34 - 16;
    int16x8_t v44 = &a1->i16[v6];
    a2 = v11;
    if (!(v43 + v7)) {
      return result;
    }
  }
  if (v7 >= 1)
  {
    int64x2_t v45 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*v36), *v37);
    *(int32x2_t *)v45.i8 = vmovn_s64(v45);
    v46.i64[0] = 0x8080808080808080;
    v46.i64[1] = 0x8080808080808080;
    int8x16_t v47 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v40), *v41), v46);
    int8x16_t v48 = veorq_s8((int8x16_t)v45, v46);
    v46.i64[0] = -1;
    v46.i64[1] = -1;
    int16x4x2_t v49 = (int16x4x2_t)vzip1q_s8(v46, v48);
    int16x8_t v50 = (int16x8_t)vzip1q_s8(vzip1q_s8(v47, v47), vzip2q_s8(v47, v47));
    vst2_s16(v44, v49);
    int8x16_t v51 = (int16x8_t *)(v44 + 8);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v49, v50);
    *int8x16_t v51 = (int16x8_t)result;
  }
  if (v43 > 1)
  {
    uint64_t v52 = 0;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v54.i64[0] = -1;
    v54.i64[1] = -1;
    int16x4x2_t v55 = (__int16 *)a1;
    do
    {
      unsigned int v56 = v43;
      int32x4_t v57 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v52]), v35[v52]);
      int8x16_t v58 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v38[v52]), v39[v52]), result);
      int8x16_t v59 = vzip1q_s8(v58, v58);
      int8x16_t v60 = vzip2q_s8(v58, v58);
      int8x16_t v61 = veorq_s8((int8x16_t)vuzp1q_s32(v57, vrev64q_s32(v57)), result);
      int16x4x2_t v62 = (int16x4x2_t)vzip1q_s8(v54, v61);
      int16x8_t v63 = (int16x8_t)vzip1q_s8(v59, v60);
      vst2_s16(v55, v62);
      uint64_t v53 = 2 * v5;
      int16x4x2_t v55 = (__int16 *)((char *)v55 + v53);
      a1[1] = vzip2q_s16((int16x8_t)v62, v63);
      int16x4x2_t v64 = (int16x4x2_t)vzip2q_s8(v54, v61);
      int16x8_t v65 = (int16x8_t)vzip2q_s8(v59, v60);
      int16x8_t v66 = (__int16 *)((char *)a1->i16 + v5);
      vst2_s16(v66, v64);
      v66 += 8;
      *(int16x8_t *)int16x8_t v66 = vzip2q_s16((int16x8_t)v64, v65);
      a1 = (int16x8_t *)v55;
      int v43 = v56 - 2;
      ++v52;
    }
    while (v56 > 3);
    a2 = (int16x8_t *)((char *)a2 + v52 * 16);
    int v35 = (int16x8_t *)((char *)v35 + v52 * 16);
    int8x16_t v38 = (int16x8_t *)((char *)v38 + v52 * 16);
    int8x16_t v39 = (int16x8_t *)((char *)v39 + v52 * 16);
  }
  if (v43 == 1)
  {
    int64x2_t v67 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*a2), *v35);
    *(int32x2_t *)v67.i8 = vmovn_s64(v67);
    v68.i64[0] = 0x8080808080808080;
    v68.i64[1] = 0x8080808080808080;
    int8x16_t v69 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v38), *v39), v68);
    int8x16_t v70 = veorq_s8((int8x16_t)v67, v68);
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    int16x4x2_t v71 = (int16x4x2_t)vzip1q_s8(v68, v70);
    int16x8_t v72 = (int16x8_t)vzip1q_s8(vzip1q_s8(v69, v69), vzip2q_s8(v69, v69));
    vst2_s16(a1->i16, v71);
    int8x16_t v73 = a1 + 1;
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v71, v72);
    int16x8_t *v73 = (int16x8_t)result;
  }
  return result;
}

int8x16_t from_422_to_y408<4,8,(AlphaOutputMethod)2,true>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = a3;
  uint64_t v6 = 4 * a3;
  if (a4 <= 8) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 8;
  }
  if (v7 < 2)
  {
    int v35 = a2 + 4;
    int16x8_t v36 = a2 + 8;
    unsigned int v37 = a2 + 12;
    int8x16_t v38 = a2 + 16;
    int8x16_t v39 = a2 + 20;
    int16x8_t v40 = a2 + 24;
    int16x8_t v41 = a2 + 28;
    int16x8_t v44 = &a1->i16[v6];
    int v43 = a4 - v7;
    if (!a4) {
      return result;
    }
  }
  else
  {
    int v8 = a4 + 8;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v10.i64[0] = -1;
    v10.i64[1] = -1;
    do
    {
      int8x16_t v11 = a2 + 1;
      int8x16_t v12 = &a1->i16[v6];
      int32x4_t v13 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[4]);
      int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), result);
      int8x16_t v15 = vzip1q_s8(v14, v14);
      int8x16_t v16 = vzip2q_s8(v14, v14);
      int8x16_t v17 = veorq_s8((int8x16_t)vuzp1q_s32(v13, vrev64q_s32(v13)), result);
      int16x4x2_t v18 = (int16x4x2_t)vzip1q_s8(v10, v17);
      int16x8_t v19 = (int16x8_t)vzip1q_s8(v15, v16);
      int8x16_t v20 = (__int16 *)a1;
      vst2_s16(v20, v18);
      uint64_t v9 = 9 * a3;
      int8x16_t v21 = (__int16 *)((char *)v20 + v9);
      a1[1] = vzip2q_s16((int16x8_t)v18, v19);
      int16x4x2_t v22 = (int16x4x2_t)vzip2q_s8(v10, v17);
      int16x8_t v23 = (int16x8_t)vzip2q_s8(v15, v16);
      int16x4x2_t v24 = (__int16 *)((char *)a1->i16 + a3);
      vst2_s16(v24, v22);
      v24 += 8;
      *(int16x8_t *)int16x4x2_t v24 = vzip2q_s16((int16x8_t)v22, v23);
      a1 = (int16x8_t *)((char *)a1 + 2 * a3);
      int32x4_t v25 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]);
      int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), result);
      int8x16_t v27 = vzip1q_s8(v26, v26);
      int8x16_t v28 = vzip2q_s8(v26, v26);
      int8x16_t v29 = veorq_s8((int8x16_t)vuzp1q_s32(v25, vrev64q_s32(v25)), result);
      int16x4x2_t v30 = (int16x4x2_t)vzip1q_s8(v10, v29);
      int16x8_t v31 = (int16x8_t)vzip1q_s8(v27, v28);
      vst2_s16(v12, v30);
      v12 += 8;
      *(int16x8_t *)int8x16_t v12 = vzip2q_s16((int16x8_t)v30, v31);
      int16x4x2_t v32 = (int16x4x2_t)vzip2q_s8(v10, v29);
      int16x8_t v33 = (int16x8_t)vzip2q_s8(v27, v28);
      vst2_s16(v21, v32);
      v21 += 8;
      *(int16x8_t *)int8x16_t v21 = vzip2q_s16((int16x8_t)v32, v33);
      int v34 = v8 - 2;
      LODWORD(v12) = v8 - 16;
      v8 -= 2;
      ++a2;
    }
    while (v12 > 3);
    int v35 = v11 + 4;
    int16x8_t v36 = v11 + 8;
    unsigned int v37 = v11 + 12;
    int8x16_t v38 = v11 + 16;
    int8x16_t v39 = v11 + 20;
    int16x8_t v40 = v11 + 24;
    int16x8_t v41 = v11 + 28;
    if (a4 <= 8) {
      int v42 = 8;
    }
    else {
      int v42 = a4;
    }
    int v43 = v34 - v42;
    int v7 = v34 - 16;
    int16x8_t v44 = &a1->i16[v6];
    a2 = v11;
    if (!(v43 + v7)) {
      return result;
    }
  }
  if (v7 >= 1)
  {
    int64x2_t v45 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*v36), *v37);
    *(int32x2_t *)v45.i8 = vmovn_s64(v45);
    v46.i64[0] = 0x8080808080808080;
    v46.i64[1] = 0x8080808080808080;
    int8x16_t v47 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v40), *v41), v46);
    int8x16_t v48 = veorq_s8((int8x16_t)v45, v46);
    v46.i64[0] = -1;
    v46.i64[1] = -1;
    int16x4x2_t v49 = (int16x4x2_t)vzip1q_s8(v46, v48);
    int16x8_t v50 = (int16x8_t)vzip1q_s8(vzip1q_s8(v47, v47), vzip2q_s8(v47, v47));
    vst2_s16(v44, v49);
    int8x16_t v51 = (int16x8_t *)(v44 + 8);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v49, v50);
    *int8x16_t v51 = (int16x8_t)result;
  }
  if (v43 > 1)
  {
    uint64_t v52 = 0;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v54.i64[0] = -1;
    v54.i64[1] = -1;
    int16x4x2_t v55 = (__int16 *)a1;
    do
    {
      unsigned int v56 = v43;
      int32x4_t v57 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v52]), v35[v52]);
      int8x16_t v58 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v38[v52]), v39[v52]), result);
      int8x16_t v59 = vzip1q_s8(v58, v58);
      int8x16_t v60 = vzip2q_s8(v58, v58);
      int8x16_t v61 = veorq_s8((int8x16_t)vuzp1q_s32(v57, vrev64q_s32(v57)), result);
      int16x4x2_t v62 = (int16x4x2_t)vzip1q_s8(v54, v61);
      int16x8_t v63 = (int16x8_t)vzip1q_s8(v59, v60);
      vst2_s16(v55, v62);
      uint64_t v53 = 2 * v5;
      int16x4x2_t v55 = (__int16 *)((char *)v55 + v53);
      a1[1] = vzip2q_s16((int16x8_t)v62, v63);
      int16x4x2_t v64 = (int16x4x2_t)vzip2q_s8(v54, v61);
      int16x8_t v65 = (int16x8_t)vzip2q_s8(v59, v60);
      int16x8_t v66 = (__int16 *)((char *)a1->i16 + v5);
      vst2_s16(v66, v64);
      v66 += 8;
      *(int16x8_t *)int16x8_t v66 = vzip2q_s16((int16x8_t)v64, v65);
      a1 = (int16x8_t *)v55;
      int v43 = v56 - 2;
      ++v52;
    }
    while (v56 > 3);
    a2 = (int16x8_t *)((char *)a2 + v52 * 16);
    int v35 = (int16x8_t *)((char *)v35 + v52 * 16);
    int8x16_t v38 = (int16x8_t *)((char *)v38 + v52 * 16);
    int8x16_t v39 = (int16x8_t *)((char *)v39 + v52 * 16);
  }
  if (v43 == 1)
  {
    int64x2_t v67 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*a2), *v35);
    *(int32x2_t *)v67.i8 = vmovn_s64(v67);
    v68.i64[0] = 0x8080808080808080;
    v68.i64[1] = 0x8080808080808080;
    int8x16_t v69 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v38), *v39), v68);
    int8x16_t v70 = veorq_s8((int8x16_t)v67, v68);
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    int16x4x2_t v71 = (int16x4x2_t)vzip1q_s8(v68, v70);
    int16x8_t v72 = (int16x8_t)vzip1q_s8(vzip1q_s8(v69, v69), vzip2q_s8(v69, v69));
    vst2_s16(a1->i16, v71);
    int8x16_t v73 = a1 + 1;
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v71, v72);
    int16x8_t *v73 = (int16x8_t)result;
  }
  return result;
}

int8x16_t from_422_to_y408<4,4,(AlphaOutputMethod)2,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = a3;
  uint64_t v6 = 2 * a3;
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (v7 < 2)
  {
    int v35 = a2 + 2;
    int16x8_t v36 = a2 + 4;
    unsigned int v37 = a2 + 6;
    int8x16_t v38 = a2 + 8;
    int8x16_t v39 = a2 + 10;
    int16x8_t v40 = a2 + 12;
    int16x8_t v41 = a2 + 14;
    int16x8_t v44 = &a1->i16[v6];
    int v43 = a4 - v7;
    if (!a4) {
      return result;
    }
  }
  else
  {
    int v8 = a4 + 4;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v10.i64[0] = -1;
    v10.i64[1] = -1;
    do
    {
      int8x16_t v11 = a2 + 1;
      int8x16_t v12 = &a1->i16[v6];
      int32x4_t v13 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[2]);
      int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[10]), result);
      int8x16_t v15 = vzip1q_s8(v14, v14);
      int8x16_t v16 = vzip2q_s8(v14, v14);
      int8x16_t v17 = veorq_s8((int8x16_t)vuzp1q_s32(v13, vrev64q_s32(v13)), result);
      int16x4x2_t v18 = (int16x4x2_t)vzip1q_s8(v10, v17);
      int16x8_t v19 = (int16x8_t)vzip1q_s8(v15, v16);
      int8x16_t v20 = (__int16 *)a1;
      vst2_s16(v20, v18);
      uint64_t v9 = 5 * a3;
      int8x16_t v21 = (__int16 *)((char *)v20 + v9);
      a1[1] = vzip2q_s16((int16x8_t)v18, v19);
      int16x4x2_t v22 = (int16x4x2_t)vzip2q_s8(v10, v17);
      int16x8_t v23 = (int16x8_t)vzip2q_s8(v15, v16);
      int16x4x2_t v24 = (__int16 *)((char *)a1->i16 + a3);
      vst2_s16(v24, v22);
      v24 += 8;
      *(int16x8_t *)int16x4x2_t v24 = vzip2q_s16((int16x8_t)v22, v23);
      a1 = (int16x8_t *)((char *)a1 + 2 * a3);
      int32x4_t v25 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[4]), a2[6]);
      int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[12]), a2[14]), result);
      int8x16_t v27 = vzip1q_s8(v26, v26);
      int8x16_t v28 = vzip2q_s8(v26, v26);
      int8x16_t v29 = veorq_s8((int8x16_t)vuzp1q_s32(v25, vrev64q_s32(v25)), result);
      int16x4x2_t v30 = (int16x4x2_t)vzip1q_s8(v10, v29);
      int16x8_t v31 = (int16x8_t)vzip1q_s8(v27, v28);
      vst2_s16(v12, v30);
      v12 += 8;
      *(int16x8_t *)int8x16_t v12 = vzip2q_s16((int16x8_t)v30, v31);
      int16x4x2_t v32 = (int16x4x2_t)vzip2q_s8(v10, v29);
      int16x8_t v33 = (int16x8_t)vzip2q_s8(v27, v28);
      vst2_s16(v21, v32);
      v21 += 8;
      *(int16x8_t *)int8x16_t v21 = vzip2q_s16((int16x8_t)v32, v33);
      int v34 = v8 - 2;
      LODWORD(v12) = v8 - 8;
      v8 -= 2;
      ++a2;
    }
    while (v12 > 3);
    int v35 = v11 + 2;
    int16x8_t v36 = v11 + 4;
    unsigned int v37 = v11 + 6;
    int8x16_t v38 = v11 + 8;
    int8x16_t v39 = v11 + 10;
    int16x8_t v40 = v11 + 12;
    int16x8_t v41 = v11 + 14;
    if (a4 <= 4) {
      int v42 = 4;
    }
    else {
      int v42 = a4;
    }
    int v43 = v34 - v42;
    int v7 = v34 - 8;
    int16x8_t v44 = &a1->i16[v6];
    a2 = v11;
    if (!(v43 + v7)) {
      return result;
    }
  }
  if (v7 >= 1)
  {
    int64x2_t v45 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*v36), *v37);
    *(int32x2_t *)v45.i8 = vmovn_s64(v45);
    v46.i64[0] = 0x8080808080808080;
    v46.i64[1] = 0x8080808080808080;
    int8x16_t v47 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v40), *v41), v46);
    int8x16_t v48 = veorq_s8((int8x16_t)v45, v46);
    v46.i64[0] = -1;
    v46.i64[1] = -1;
    int16x4x2_t v49 = (int16x4x2_t)vzip1q_s8(v46, v48);
    int16x8_t v50 = (int16x8_t)vzip1q_s8(vzip1q_s8(v47, v47), vzip2q_s8(v47, v47));
    vst2_s16(v44, v49);
    int8x16_t v51 = (int16x8_t *)(v44 + 8);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v49, v50);
    *int8x16_t v51 = (int16x8_t)result;
  }
  if (v43 > 1)
  {
    uint64_t v52 = 0;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v54.i64[0] = -1;
    v54.i64[1] = -1;
    int16x4x2_t v55 = (__int16 *)a1;
    do
    {
      unsigned int v56 = v43;
      int32x4_t v57 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v52]), v35[v52]);
      int8x16_t v58 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v38[v52]), v39[v52]), result);
      int8x16_t v59 = vzip1q_s8(v58, v58);
      int8x16_t v60 = vzip2q_s8(v58, v58);
      int8x16_t v61 = veorq_s8((int8x16_t)vuzp1q_s32(v57, vrev64q_s32(v57)), result);
      int16x4x2_t v62 = (int16x4x2_t)vzip1q_s8(v54, v61);
      int16x8_t v63 = (int16x8_t)vzip1q_s8(v59, v60);
      vst2_s16(v55, v62);
      uint64_t v53 = 2 * v5;
      int16x4x2_t v55 = (__int16 *)((char *)v55 + v53);
      a1[1] = vzip2q_s16((int16x8_t)v62, v63);
      int16x4x2_t v64 = (int16x4x2_t)vzip2q_s8(v54, v61);
      int16x8_t v65 = (int16x8_t)vzip2q_s8(v59, v60);
      int16x8_t v66 = (__int16 *)((char *)a1->i16 + v5);
      vst2_s16(v66, v64);
      v66 += 8;
      *(int16x8_t *)int16x8_t v66 = vzip2q_s16((int16x8_t)v64, v65);
      a1 = (int16x8_t *)v55;
      int v43 = v56 - 2;
      ++v52;
    }
    while (v56 > 3);
    a2 = (int16x8_t *)((char *)a2 + v52 * 16);
    int v35 = (int16x8_t *)((char *)v35 + v52 * 16);
    int8x16_t v38 = (int16x8_t *)((char *)v38 + v52 * 16);
    int8x16_t v39 = (int16x8_t *)((char *)v39 + v52 * 16);
  }
  if (v43 == 1)
  {
    int64x2_t v67 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*a2), *v35);
    *(int32x2_t *)v67.i8 = vmovn_s64(v67);
    v68.i64[0] = 0x8080808080808080;
    v68.i64[1] = 0x8080808080808080;
    int8x16_t v69 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v38), *v39), v68);
    int8x16_t v70 = veorq_s8((int8x16_t)v67, v68);
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    int16x4x2_t v71 = (int16x4x2_t)vzip1q_s8(v68, v70);
    int16x8_t v72 = (int16x8_t)vzip1q_s8(vzip1q_s8(v69, v69), vzip2q_s8(v69, v69));
    vst2_s16(a1->i16, v71);
    int8x16_t v73 = a1 + 1;
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v71, v72);
    int16x8_t *v73 = (int16x8_t)result;
  }
  return result;
}

int8x16_t from_422_to_y408<4,4,(AlphaOutputMethod)2,true>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = a3;
  uint64_t v6 = 2 * a3;
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (v7 < 2)
  {
    int v35 = a2 + 2;
    int16x8_t v36 = a2 + 4;
    unsigned int v37 = a2 + 6;
    int8x16_t v38 = a2 + 8;
    int8x16_t v39 = a2 + 10;
    int16x8_t v40 = a2 + 12;
    int16x8_t v41 = a2 + 14;
    int16x8_t v44 = &a1->i16[v6];
    int v43 = a4 - v7;
    if (!a4) {
      return result;
    }
  }
  else
  {
    int v8 = a4 + 4;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v10.i64[0] = -1;
    v10.i64[1] = -1;
    do
    {
      int8x16_t v11 = a2 + 1;
      int8x16_t v12 = &a1->i16[v6];
      int32x4_t v13 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[2]);
      int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[10]), result);
      int8x16_t v15 = vzip1q_s8(v14, v14);
      int8x16_t v16 = vzip2q_s8(v14, v14);
      int8x16_t v17 = veorq_s8((int8x16_t)vuzp1q_s32(v13, vrev64q_s32(v13)), result);
      int16x4x2_t v18 = (int16x4x2_t)vzip1q_s8(v10, v17);
      int16x8_t v19 = (int16x8_t)vzip1q_s8(v15, v16);
      int8x16_t v20 = (__int16 *)a1;
      vst2_s16(v20, v18);
      uint64_t v9 = 5 * a3;
      int8x16_t v21 = (__int16 *)((char *)v20 + v9);
      a1[1] = vzip2q_s16((int16x8_t)v18, v19);
      int16x4x2_t v22 = (int16x4x2_t)vzip2q_s8(v10, v17);
      int16x8_t v23 = (int16x8_t)vzip2q_s8(v15, v16);
      int16x4x2_t v24 = (__int16 *)((char *)a1->i16 + a3);
      vst2_s16(v24, v22);
      v24 += 8;
      *(int16x8_t *)int16x4x2_t v24 = vzip2q_s16((int16x8_t)v22, v23);
      a1 = (int16x8_t *)((char *)a1 + 2 * a3);
      int32x4_t v25 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[4]), a2[6]);
      int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[12]), a2[14]), result);
      int8x16_t v27 = vzip1q_s8(v26, v26);
      int8x16_t v28 = vzip2q_s8(v26, v26);
      int8x16_t v29 = veorq_s8((int8x16_t)vuzp1q_s32(v25, vrev64q_s32(v25)), result);
      int16x4x2_t v30 = (int16x4x2_t)vzip1q_s8(v10, v29);
      int16x8_t v31 = (int16x8_t)vzip1q_s8(v27, v28);
      vst2_s16(v12, v30);
      v12 += 8;
      *(int16x8_t *)int8x16_t v12 = vzip2q_s16((int16x8_t)v30, v31);
      int16x4x2_t v32 = (int16x4x2_t)vzip2q_s8(v10, v29);
      int16x8_t v33 = (int16x8_t)vzip2q_s8(v27, v28);
      vst2_s16(v21, v32);
      v21 += 8;
      *(int16x8_t *)int8x16_t v21 = vzip2q_s16((int16x8_t)v32, v33);
      int v34 = v8 - 2;
      LODWORD(v12) = v8 - 8;
      v8 -= 2;
      ++a2;
    }
    while (v12 > 3);
    int v35 = v11 + 2;
    int16x8_t v36 = v11 + 4;
    unsigned int v37 = v11 + 6;
    int8x16_t v38 = v11 + 8;
    int8x16_t v39 = v11 + 10;
    int16x8_t v40 = v11 + 12;
    int16x8_t v41 = v11 + 14;
    if (a4 <= 4) {
      int v42 = 4;
    }
    else {
      int v42 = a4;
    }
    int v43 = v34 - v42;
    int v7 = v34 - 8;
    int16x8_t v44 = &a1->i16[v6];
    a2 = v11;
    if (!(v43 + v7)) {
      return result;
    }
  }
  if (v7 >= 1)
  {
    int64x2_t v45 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*v36), *v37);
    *(int32x2_t *)v45.i8 = vmovn_s64(v45);
    v46.i64[0] = 0x8080808080808080;
    v46.i64[1] = 0x8080808080808080;
    int8x16_t v47 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v40), *v41), v46);
    int8x16_t v48 = veorq_s8((int8x16_t)v45, v46);
    v46.i64[0] = -1;
    v46.i64[1] = -1;
    int16x4x2_t v49 = (int16x4x2_t)vzip1q_s8(v46, v48);
    int16x8_t v50 = (int16x8_t)vzip1q_s8(vzip1q_s8(v47, v47), vzip2q_s8(v47, v47));
    vst2_s16(v44, v49);
    int8x16_t v51 = (int16x8_t *)(v44 + 8);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v49, v50);
    *int8x16_t v51 = (int16x8_t)result;
  }
  if (v43 > 1)
  {
    uint64_t v52 = 0;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v54.i64[0] = -1;
    v54.i64[1] = -1;
    int16x4x2_t v55 = (__int16 *)a1;
    do
    {
      unsigned int v56 = v43;
      int32x4_t v57 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v52]), v35[v52]);
      int8x16_t v58 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v38[v52]), v39[v52]), result);
      int8x16_t v59 = vzip1q_s8(v58, v58);
      int8x16_t v60 = vzip2q_s8(v58, v58);
      int8x16_t v61 = veorq_s8((int8x16_t)vuzp1q_s32(v57, vrev64q_s32(v57)), result);
      int16x4x2_t v62 = (int16x4x2_t)vzip1q_s8(v54, v61);
      int16x8_t v63 = (int16x8_t)vzip1q_s8(v59, v60);
      vst2_s16(v55, v62);
      uint64_t v53 = 2 * v5;
      int16x4x2_t v55 = (__int16 *)((char *)v55 + v53);
      a1[1] = vzip2q_s16((int16x8_t)v62, v63);
      int16x4x2_t v64 = (int16x4x2_t)vzip2q_s8(v54, v61);
      int16x8_t v65 = (int16x8_t)vzip2q_s8(v59, v60);
      int16x8_t v66 = (__int16 *)((char *)a1->i16 + v5);
      vst2_s16(v66, v64);
      v66 += 8;
      *(int16x8_t *)int16x8_t v66 = vzip2q_s16((int16x8_t)v64, v65);
      a1 = (int16x8_t *)v55;
      int v43 = v56 - 2;
      ++v52;
    }
    while (v56 > 3);
    a2 = (int16x8_t *)((char *)a2 + v52 * 16);
    int v35 = (int16x8_t *)((char *)v35 + v52 * 16);
    int8x16_t v38 = (int16x8_t *)((char *)v38 + v52 * 16);
    int8x16_t v39 = (int16x8_t *)((char *)v39 + v52 * 16);
  }
  if (v43 == 1)
  {
    int64x2_t v67 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*a2), *v35);
    *(int32x2_t *)v67.i8 = vmovn_s64(v67);
    v68.i64[0] = 0x8080808080808080;
    v68.i64[1] = 0x8080808080808080;
    int8x16_t v69 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v38), *v39), v68);
    int8x16_t v70 = veorq_s8((int8x16_t)v67, v68);
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    int16x4x2_t v71 = (int16x4x2_t)vzip1q_s8(v68, v70);
    int16x8_t v72 = (int16x8_t)vzip1q_s8(vzip1q_s8(v69, v69), vzip2q_s8(v69, v69));
    vst2_s16(a1->i16, v71);
    int8x16_t v73 = a1 + 1;
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v71, v72);
    int16x8_t *v73 = (int16x8_t)result;
  }
  return result;
}

int8x16_t from_422_to_y408<4,2,(AlphaOutputMethod)2,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = a3;
  uint64_t v6 = a3;
  if (a4 <= 2) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 2;
  }
  if (v7 < 2)
  {
    int v35 = a2 + 1;
    int16x8_t v36 = a2 + 2;
    unsigned int v37 = a2 + 3;
    int8x16_t v38 = a2 + 4;
    int8x16_t v39 = a2 + 5;
    int16x8_t v40 = a2 + 6;
    int16x8_t v41 = a2 + 7;
    int16x8_t v44 = &a1->i16[v6];
    int v43 = a4 - v7;
    if (!a4) {
      return result;
    }
  }
  else
  {
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v9.i64[0] = -1;
    v9.i64[1] = -1;
    unsigned int v10 = a4;
    int8x16_t v11 = a2;
    do
    {
      int16x8_t v12 = v11[1];
      ++v11;
      int32x4_t v13 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), v12);
      int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), result);
      int8x16_t v15 = vzip1q_s8(v14, v14);
      int8x16_t v16 = vzip2q_s8(v14, v14);
      int8x16_t v17 = veorq_s8((int8x16_t)vuzp1q_s32(v13, vrev64q_s32(v13)), result);
      int16x4x2_t v18 = (int16x4x2_t)vzip1q_s8(v9, v17);
      int16x8_t v19 = (int16x8_t)vzip1q_s8(v15, v16);
      int8x16_t v20 = (__int16 *)a1;
      vst2_s16(v20, v18);
      uint64_t v8 = 3 * a3;
      int8x16_t v21 = (__int16 *)((char *)v20 + v8);
      a1[1] = vzip2q_s16((int16x8_t)v18, v19);
      int16x4x2_t v22 = (int16x4x2_t)vzip2q_s8(v9, v17);
      int16x8_t v23 = (int16x8_t)vzip2q_s8(v15, v16);
      int16x4x2_t v24 = (__int16 *)((char *)a1->i16 + a3);
      vst2_s16(v24, v22);
      v24 += 8;
      a1 = (int16x8_t *)((char *)a1 + v6 * 2);
      *(int16x8_t *)int16x4x2_t v24 = vzip2q_s16((int16x8_t)v22, v23);
      int32x4_t v25 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[2]), a2[3]);
      int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), result);
      int8x16_t v27 = vzip1q_s8(v26, v26);
      int8x16_t v28 = vzip2q_s8(v26, v26);
      int8x16_t v29 = veorq_s8((int8x16_t)vuzp1q_s32(v25, vrev64q_s32(v25)), result);
      int16x4x2_t v30 = (int16x4x2_t)vzip1q_s8(v9, v29);
      int16x8_t v31 = (int16x8_t)vzip1q_s8(v27, v28);
      int16x4x2_t v32 = (__int16 *)a1;
      vst2_s16(v32, v30);
      v32 += 8;
      *(int16x8_t *)int16x4x2_t v32 = vzip2q_s16((int16x8_t)v30, v31);
      int16x4x2_t v33 = (int16x4x2_t)vzip2q_s8(v9, v29);
      int16x8_t v34 = (int16x8_t)vzip2q_s8(v27, v28);
      vst2_s16(v21, v33);
      v21 += 8;
      *(int16x8_t *)int8x16_t v21 = vzip2q_s16((int16x8_t)v33, v34);
      v10 -= 2;
      a2 = v11;
    }
    while (v10 > 3);
    int v35 = v11 + 1;
    int16x8_t v36 = v11 + 2;
    unsigned int v37 = v11 + 3;
    int8x16_t v38 = v11 + 4;
    int8x16_t v39 = v11 + 5;
    int16x8_t v40 = v11 + 6;
    int16x8_t v41 = v11 + 7;
    if (a4 <= 2) {
      int v42 = 2;
    }
    else {
      int v42 = a4;
    }
    int v43 = v10 - v42 + 2;
    int v7 = v10 - 2;
    int16x8_t v44 = &a1->i16[v6];
    a2 = v11;
    if (!(v43 + v7)) {
      return result;
    }
  }
  if (v7 >= 1)
  {
    int64x2_t v45 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*v36), *v37);
    *(int32x2_t *)v45.i8 = vmovn_s64(v45);
    v46.i64[0] = 0x8080808080808080;
    v46.i64[1] = 0x8080808080808080;
    int8x16_t v47 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v40), *v41), v46);
    int8x16_t v48 = veorq_s8((int8x16_t)v45, v46);
    v46.i64[0] = -1;
    v46.i64[1] = -1;
    int16x4x2_t v49 = (int16x4x2_t)vzip1q_s8(v46, v48);
    int16x8_t v50 = (int16x8_t)vzip1q_s8(vzip1q_s8(v47, v47), vzip2q_s8(v47, v47));
    vst2_s16(v44, v49);
    int8x16_t v51 = (int16x8_t *)(v44 + 8);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v49, v50);
    *int8x16_t v51 = (int16x8_t)result;
  }
  if (v43 > 1)
  {
    uint64_t v52 = 0;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v53.i64[0] = -1;
    v53.i64[1] = -1;
    int8x16_t v54 = (__int16 *)a1;
    do
    {
      unsigned int v55 = v43;
      int32x4_t v56 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v52]), v35[v52]);
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v38[v52]), v39[v52]), result);
      int8x16_t v58 = vzip1q_s8(v57, v57);
      int8x16_t v59 = vzip2q_s8(v57, v57);
      int8x16_t v60 = veorq_s8((int8x16_t)vuzp1q_s32(v56, vrev64q_s32(v56)), result);
      int16x4x2_t v61 = (int16x4x2_t)vzip1q_s8(v53, v60);
      int16x8_t v62 = (int16x8_t)vzip1q_s8(v58, v59);
      vst2_s16(v54, v61);
      int8x16_t v54 = (__int16 *)((char *)v54 + v6 * 2);
      a1[1] = vzip2q_s16((int16x8_t)v61, v62);
      int16x4x2_t v63 = (int16x4x2_t)vzip2q_s8(v53, v60);
      int16x8_t v64 = (int16x8_t)vzip2q_s8(v58, v59);
      int16x8_t v65 = (__int16 *)((char *)a1->i16 + v5);
      vst2_s16(v65, v63);
      v65 += 8;
      *(int16x8_t *)int16x8_t v65 = vzip2q_s16((int16x8_t)v63, v64);
      a1 = (int16x8_t *)v54;
      int v43 = v55 - 2;
      ++v52;
    }
    while (v55 > 3);
    a2 = (int16x8_t *)((char *)a2 + v52 * 16);
    int v35 = (int16x8_t *)((char *)v35 + v52 * 16);
    int8x16_t v38 = (int16x8_t *)((char *)v38 + v52 * 16);
    int8x16_t v39 = (int16x8_t *)((char *)v39 + v52 * 16);
  }
  if (v43 == 1)
  {
    int64x2_t v66 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*a2), *v35);
    *(int32x2_t *)v66.i8 = vmovn_s64(v66);
    v67.i64[0] = 0x8080808080808080;
    v67.i64[1] = 0x8080808080808080;
    int8x16_t v68 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v38), *v39), v67);
    int8x16_t v69 = veorq_s8((int8x16_t)v66, v67);
    v67.i64[0] = -1;
    v67.i64[1] = -1;
    int16x4x2_t v70 = (int16x4x2_t)vzip1q_s8(v67, v69);
    int16x8_t v71 = (int16x8_t)vzip1q_s8(vzip1q_s8(v68, v68), vzip2q_s8(v68, v68));
    vst2_s16(a1->i16, v70);
    int16x8_t v72 = a1 + 1;
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v70, v71);
    *int16x8_t v72 = (int16x8_t)result;
  }
  return result;
}

int8x16_t from_422_to_y408<4,2,(AlphaOutputMethod)2,true>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = a3;
  uint64_t v6 = a3;
  if (a4 <= 2) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 2;
  }
  if (v7 < 2)
  {
    int v35 = a2 + 1;
    int16x8_t v36 = a2 + 2;
    unsigned int v37 = a2 + 3;
    int8x16_t v38 = a2 + 4;
    int8x16_t v39 = a2 + 5;
    int16x8_t v40 = a2 + 6;
    int16x8_t v41 = a2 + 7;
    int16x8_t v44 = &a1->i16[v6];
    int v43 = a4 - v7;
    if (!a4) {
      return result;
    }
  }
  else
  {
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v9.i64[0] = -1;
    v9.i64[1] = -1;
    unsigned int v10 = a4;
    int8x16_t v11 = a2;
    do
    {
      int16x8_t v12 = v11[1];
      ++v11;
      int32x4_t v13 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), v12);
      int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), result);
      int8x16_t v15 = vzip1q_s8(v14, v14);
      int8x16_t v16 = vzip2q_s8(v14, v14);
      int8x16_t v17 = veorq_s8((int8x16_t)vuzp1q_s32(v13, vrev64q_s32(v13)), result);
      int16x4x2_t v18 = (int16x4x2_t)vzip1q_s8(v9, v17);
      int16x8_t v19 = (int16x8_t)vzip1q_s8(v15, v16);
      int8x16_t v20 = (__int16 *)a1;
      vst2_s16(v20, v18);
      uint64_t v8 = 3 * a3;
      int8x16_t v21 = (__int16 *)((char *)v20 + v8);
      a1[1] = vzip2q_s16((int16x8_t)v18, v19);
      int16x4x2_t v22 = (int16x4x2_t)vzip2q_s8(v9, v17);
      int16x8_t v23 = (int16x8_t)vzip2q_s8(v15, v16);
      int16x4x2_t v24 = (__int16 *)((char *)a1->i16 + a3);
      vst2_s16(v24, v22);
      v24 += 8;
      a1 = (int16x8_t *)((char *)a1 + v6 * 2);
      *(int16x8_t *)int16x4x2_t v24 = vzip2q_s16((int16x8_t)v22, v23);
      int32x4_t v25 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[2]), a2[3]);
      int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), result);
      int8x16_t v27 = vzip1q_s8(v26, v26);
      int8x16_t v28 = vzip2q_s8(v26, v26);
      int8x16_t v29 = veorq_s8((int8x16_t)vuzp1q_s32(v25, vrev64q_s32(v25)), result);
      int16x4x2_t v30 = (int16x4x2_t)vzip1q_s8(v9, v29);
      int16x8_t v31 = (int16x8_t)vzip1q_s8(v27, v28);
      int16x4x2_t v32 = (__int16 *)a1;
      vst2_s16(v32, v30);
      v32 += 8;
      *(int16x8_t *)int16x4x2_t v32 = vzip2q_s16((int16x8_t)v30, v31);
      int16x4x2_t v33 = (int16x4x2_t)vzip2q_s8(v9, v29);
      int16x8_t v34 = (int16x8_t)vzip2q_s8(v27, v28);
      vst2_s16(v21, v33);
      v21 += 8;
      *(int16x8_t *)int8x16_t v21 = vzip2q_s16((int16x8_t)v33, v34);
      v10 -= 2;
      a2 = v11;
    }
    while (v10 > 3);
    int v35 = v11 + 1;
    int16x8_t v36 = v11 + 2;
    unsigned int v37 = v11 + 3;
    int8x16_t v38 = v11 + 4;
    int8x16_t v39 = v11 + 5;
    int16x8_t v40 = v11 + 6;
    int16x8_t v41 = v11 + 7;
    if (a4 <= 2) {
      int v42 = 2;
    }
    else {
      int v42 = a4;
    }
    int v43 = v10 - v42 + 2;
    int v7 = v10 - 2;
    int16x8_t v44 = &a1->i16[v6];
    a2 = v11;
    if (!(v43 + v7)) {
      return result;
    }
  }
  if (v7 >= 1)
  {
    int64x2_t v45 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*v36), *v37);
    *(int32x2_t *)v45.i8 = vmovn_s64(v45);
    v46.i64[0] = 0x8080808080808080;
    v46.i64[1] = 0x8080808080808080;
    int8x16_t v47 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v40), *v41), v46);
    int8x16_t v48 = veorq_s8((int8x16_t)v45, v46);
    v46.i64[0] = -1;
    v46.i64[1] = -1;
    int16x4x2_t v49 = (int16x4x2_t)vzip1q_s8(v46, v48);
    int16x8_t v50 = (int16x8_t)vzip1q_s8(vzip1q_s8(v47, v47), vzip2q_s8(v47, v47));
    vst2_s16(v44, v49);
    int8x16_t v51 = (int16x8_t *)(v44 + 8);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v49, v50);
    *int8x16_t v51 = (int16x8_t)result;
  }
  if (v43 > 1)
  {
    uint64_t v52 = 0;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v53.i64[0] = -1;
    v53.i64[1] = -1;
    int8x16_t v54 = (__int16 *)a1;
    do
    {
      unsigned int v55 = v43;
      int32x4_t v56 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v52]), v35[v52]);
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v38[v52]), v39[v52]), result);
      int8x16_t v58 = vzip1q_s8(v57, v57);
      int8x16_t v59 = vzip2q_s8(v57, v57);
      int8x16_t v60 = veorq_s8((int8x16_t)vuzp1q_s32(v56, vrev64q_s32(v56)), result);
      int16x4x2_t v61 = (int16x4x2_t)vzip1q_s8(v53, v60);
      int16x8_t v62 = (int16x8_t)vzip1q_s8(v58, v59);
      vst2_s16(v54, v61);
      int8x16_t v54 = (__int16 *)((char *)v54 + v6 * 2);
      a1[1] = vzip2q_s16((int16x8_t)v61, v62);
      int16x4x2_t v63 = (int16x4x2_t)vzip2q_s8(v53, v60);
      int16x8_t v64 = (int16x8_t)vzip2q_s8(v58, v59);
      int16x8_t v65 = (__int16 *)((char *)a1->i16 + v5);
      vst2_s16(v65, v63);
      v65 += 8;
      *(int16x8_t *)int16x8_t v65 = vzip2q_s16((int16x8_t)v63, v64);
      a1 = (int16x8_t *)v54;
      int v43 = v55 - 2;
      ++v52;
    }
    while (v55 > 3);
    a2 = (int16x8_t *)((char *)a2 + v52 * 16);
    int v35 = (int16x8_t *)((char *)v35 + v52 * 16);
    int8x16_t v38 = (int16x8_t *)((char *)v38 + v52 * 16);
    int8x16_t v39 = (int16x8_t *)((char *)v39 + v52 * 16);
  }
  if (v43 == 1)
  {
    int64x2_t v66 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*a2), *v35);
    *(int32x2_t *)v66.i8 = vmovn_s64(v66);
    v67.i64[0] = 0x8080808080808080;
    v67.i64[1] = 0x8080808080808080;
    int8x16_t v68 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v38), *v39), v67);
    int8x16_t v69 = veorq_s8((int8x16_t)v66, v67);
    v67.i64[0] = -1;
    v67.i64[1] = -1;
    int16x4x2_t v70 = (int16x4x2_t)vzip1q_s8(v67, v69);
    int16x8_t v71 = (int16x8_t)vzip1q_s8(vzip1q_s8(v68, v68), vzip2q_s8(v68, v68));
    vst2_s16(a1->i16, v70);
    int16x8_t v72 = a1 + 1;
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v70, v71);
    *int16x8_t v72 = (int16x8_t)result;
  }
  return result;
}

int16x8_t from_422_to_y408<2,4,(AlphaOutputMethod)2,false>(__int16 *a1, int16x8_t *a2, int a3, int a4, int16x8_t result)
{
  uint64_t v5 = &a1[2 * a3];
  if (a4 == 8)
  {
    int16x8_t v6 = *a2;
    int16x8_t v7 = a2[1];
    *(int8x8_t *)v6.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v7.i8 = vqmovn_s16(v7);
    int8x16_t v8 = (int8x16_t)vzip1q_s16(v6, v7);
    v9.i64[0] = 0x8080808080808080;
    v9.i64[1] = 0x8080808080808080;
    int8x16_t v10 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v9);
    int8x16_t v11 = vzip1q_s8(v10, v10);
    int8x16_t v12 = vzip2q_s8(v10, v10);
    int8x16_t v13 = veorq_s8(v8, v9);
    v14.i64[0] = -1;
    v14.i64[1] = -1;
    int16x4x2_t v15 = (int16x4x2_t)vzip1q_s8(v14, v13);
    int16x4x2_t v16 = (int16x4x2_t)vzip2q_s8(v14, v13);
    int16x8_t v17 = (int16x8_t)vzip1q_s8(v11, v12);
    int16x8_t v18 = (int16x8_t)vzip2q_s8(v11, v12);
    vst2_s16(a1, v15);
    int16x8_t v19 = (int16x8_t *)((char *)a1 + a3);
    *int16x8_t v19 = vzip2q_s16((int16x8_t)v15, v17);
    int8x16_t v20 = (__int16 *)((char *)v19->i16 + a3);
    vst2_s16(v20, v16);
    int8x16_t v21 = (int16x8_t *)((char *)v20 + a3);
    *int8x16_t v21 = vzip2q_s16((int16x8_t)v16, v18);
    int16x8_t v22 = a2[2];
    int16x8_t v23 = a2[3];
    *(int8x8_t *)v22.i8 = vqmovn_s16(v22);
    *(int8x8_t *)v23.i8 = vqmovn_s16(v23);
    int8x16_t v24 = (int8x16_t)vzip1q_s16(v22, v23);
    int8x16_t v25 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), v9);
    int8x16_t v26 = vzip1q_s8(v25, v25);
    int8x16_t v27 = vzip2q_s8(v25, v25);
    int8x16_t v28 = veorq_s8(v24, v9);
    int16x4x2_t v29 = (int16x4x2_t)vzip1q_s8(v14, v28);
    int16x4x2_t v30 = (int16x4x2_t)vzip2q_s8(v14, v28);
    int16x8_t v31 = (int16x8_t)vzip1q_s8(v26, v27);
    int16x8_t v32 = (int16x8_t)vzip2q_s8(v26, v27);
    vst2_s16(v5, v29);
    int16x4x2_t v33 = (int16x8_t *)((char *)v5 + a3);
    int16x8_t *v33 = vzip2q_s16((int16x8_t)v29, v31);
    int16x8_t v34 = (__int16 *)((char *)v33->i16 + a3);
    vst2_s16(v34, v30);
    int v35 = (int16x8_t *)((char *)v34 + a3);
    double result = vzip2q_s16((int16x8_t)v30, v32);
    int16x8_t *v35 = result;
  }
  else if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v62 = *a2;
      int16x8_t v63 = a2[1];
      *(int8x8_t *)v62.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v63.i8 = vqmovn_s16(v63);
      int8x16_t v64 = (int8x16_t)vzip1q_s16(v62, v63);
      v65.i64[0] = 0x8080808080808080;
      v65.i64[1] = 0x8080808080808080;
      int8x16_t v66 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v65);
      int8x16_t v67 = vzip1q_s8(v66, v66);
      int8x16_t v68 = vzip2q_s8(v66, v66);
      int8x16_t v69 = veorq_s8(v64, v65);
      v70.i64[0] = -1;
      v70.i64[1] = -1;
      double result = (int16x8_t)vzip1q_s8(v70, v69);
      int16x8_t v71 = (int16x8_t)vzip1q_s8(v67, v68);
      vst2_s16(a1, (int16x4x2_t)result);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          double result = vzip2q_s16(result, v71);
          *(int16x8_t *)((char *)a1 + a3) = result;
        }
      }
      else
      {
        int16x8_t v72 = (int16x8_t)vzip2q_s8(v67, v68);
        int16x4x2_t v73 = (int16x4x2_t)vzip2q_s8(v70, v69);
        double result = vzip2q_s16(result, v71);
        *(int16x8_t *)((char *)a1 + a3) = result;
        int8x16_t v74 = (__int16 *)((char *)a1 + a3 + a3);
        vst2_s16(v74, v73);
        if (a4 == 4)
        {
          double result = vzip2q_s16((int16x8_t)v73, v72);
          *(int16x8_t *)((char *)v74 + a3) = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v36 = *a2;
    int16x8_t v37 = a2[1];
    *(int8x8_t *)v36.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v37.i8 = vqmovn_s16(v37);
    int8x16_t v38 = (int8x16_t)vzip1q_s16(v36, v37);
    v39.i64[0] = 0x8080808080808080;
    v39.i64[1] = 0x8080808080808080;
    int8x16_t v40 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v39);
    int8x16_t v41 = vzip1q_s8(v40, v40);
    int8x16_t v42 = vzip2q_s8(v40, v40);
    int8x16_t v43 = veorq_s8(v38, v39);
    result.i64[0] = -1;
    result.i64[1] = -1;
    int16x4x2_t v44 = (int16x4x2_t)vzip1q_s8((int8x16_t)result, v43);
    int16x4x2_t v45 = (int16x4x2_t)vzip2q_s8((int8x16_t)result, v43);
    int16x8_t v46 = (int16x8_t)vzip1q_s8(v41, v42);
    int16x8_t v47 = (int16x8_t)vzip2q_s8(v41, v42);
    vst2_s16(a1, v44);
    int8x16_t v48 = (int16x8_t *)((char *)a1 + a3);
    *int8x16_t v48 = vzip2q_s16((int16x8_t)v44, v46);
    int16x4x2_t v49 = (__int16 *)((char *)v48->i16 + a3);
    vst2_s16(v49, v45);
    int16x8_t v50 = (int16x8_t *)((char *)v49 + a3);
    *int16x8_t v50 = vzip2q_s16((int16x8_t)v45, v47);
    int16x8_t v51 = a2[2];
    int16x8_t v52 = a2[3];
    *(int8x8_t *)v51.i8 = vqmovn_s16(v51);
    *(int8x8_t *)v52.i8 = vqmovn_s16(v52);
    int8x16_t v53 = (int8x16_t)vzip1q_s16(v51, v52);
    int8x16_t v54 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), v39);
    int8x16_t v55 = vzip1q_s8(v54, v54);
    int8x16_t v56 = vzip2q_s8(v54, v54);
    int8x16_t v57 = veorq_s8(v53, v39);
    int16x4x2_t v58 = (int16x4x2_t)vzip1q_s8((int8x16_t)result, v57);
    int16x8_t v59 = (int16x8_t)vzip1q_s8(v55, v56);
    vst2_s16(v5, v58);
    if (a4 < 7)
    {
      if (a4 == 6)
      {
        double result = vzip2q_s16((int16x8_t)v58, v59);
        *(int16x8_t *)((char *)v5 + a3) = result;
      }
    }
    else
    {
      v75.val[1] = (int16x4_t)vzip2q_s8(v55, v56).u64[0];
      v75.val[0] = (int16x4_t)vzip2q_s8((int8x16_t)result, v57).u64[0];
      int8x16_t v60 = (int16x8_t *)((char *)v5 + a3);
      double result = vzip2q_s16((int16x8_t)v58, v59);
      *int8x16_t v60 = result;
      int16x4x2_t v61 = (__int16 *)((char *)v60->i16 + a3);
      vst2_s16(v61, v75);
    }
  }
  return result;
}

int16x8_t from_422_to_y408<2,4,(AlphaOutputMethod)2,true>(__int16 *a1, int16x8_t *a2, int a3, int a4, int16x8_t result)
{
  uint64_t v5 = &a1[2 * a3];
  if (a4 == 8)
  {
    int16x8_t v6 = *a2;
    int16x8_t v7 = a2[1];
    *(int8x8_t *)v6.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v7.i8 = vqmovn_s16(v7);
    int8x16_t v8 = (int8x16_t)vzip1q_s16(v6, v7);
    v9.i64[0] = 0x8080808080808080;
    v9.i64[1] = 0x8080808080808080;
    int8x16_t v10 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v9);
    int8x16_t v11 = vzip1q_s8(v10, v10);
    int8x16_t v12 = vzip2q_s8(v10, v10);
    int8x16_t v13 = veorq_s8(v8, v9);
    v14.i64[0] = -1;
    v14.i64[1] = -1;
    int16x4x2_t v15 = (int16x4x2_t)vzip1q_s8(v14, v13);
    int16x4x2_t v16 = (int16x4x2_t)vzip2q_s8(v14, v13);
    int16x8_t v17 = (int16x8_t)vzip1q_s8(v11, v12);
    int16x8_t v18 = (int16x8_t)vzip2q_s8(v11, v12);
    vst2_s16(a1, v15);
    int16x8_t v19 = (int16x8_t *)((char *)a1 + a3);
    *int16x8_t v19 = vzip2q_s16((int16x8_t)v15, v17);
    int8x16_t v20 = (__int16 *)((char *)v19->i16 + a3);
    vst2_s16(v20, v16);
    int8x16_t v21 = (int16x8_t *)((char *)v20 + a3);
    *int8x16_t v21 = vzip2q_s16((int16x8_t)v16, v18);
    int16x8_t v22 = a2[2];
    int16x8_t v23 = a2[3];
    *(int8x8_t *)v22.i8 = vqmovn_s16(v22);
    *(int8x8_t *)v23.i8 = vqmovn_s16(v23);
    int8x16_t v24 = (int8x16_t)vzip1q_s16(v22, v23);
    int8x16_t v25 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), v9);
    int8x16_t v26 = vzip1q_s8(v25, v25);
    int8x16_t v27 = vzip2q_s8(v25, v25);
    int8x16_t v28 = veorq_s8(v24, v9);
    int16x4x2_t v29 = (int16x4x2_t)vzip1q_s8(v14, v28);
    int16x4x2_t v30 = (int16x4x2_t)vzip2q_s8(v14, v28);
    int16x8_t v31 = (int16x8_t)vzip1q_s8(v26, v27);
    int16x8_t v32 = (int16x8_t)vzip2q_s8(v26, v27);
    vst2_s16(v5, v29);
    int16x4x2_t v33 = (int16x8_t *)((char *)v5 + a3);
    int16x8_t *v33 = vzip2q_s16((int16x8_t)v29, v31);
    int16x8_t v34 = (__int16 *)((char *)v33->i16 + a3);
    vst2_s16(v34, v30);
    int v35 = (int16x8_t *)((char *)v34 + a3);
    double result = vzip2q_s16((int16x8_t)v30, v32);
    int16x8_t *v35 = result;
  }
  else if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v62 = *a2;
      int16x8_t v63 = a2[1];
      *(int8x8_t *)v62.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v63.i8 = vqmovn_s16(v63);
      int8x16_t v64 = (int8x16_t)vzip1q_s16(v62, v63);
      v65.i64[0] = 0x8080808080808080;
      v65.i64[1] = 0x8080808080808080;
      int8x16_t v66 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v65);
      int8x16_t v67 = vzip1q_s8(v66, v66);
      int8x16_t v68 = vzip2q_s8(v66, v66);
      int8x16_t v69 = veorq_s8(v64, v65);
      v70.i64[0] = -1;
      v70.i64[1] = -1;
      double result = (int16x8_t)vzip1q_s8(v70, v69);
      int16x8_t v71 = (int16x8_t)vzip1q_s8(v67, v68);
      vst2_s16(a1, (int16x4x2_t)result);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          double result = vzip2q_s16(result, v71);
          *(int16x8_t *)((char *)a1 + a3) = result;
        }
      }
      else
      {
        int16x8_t v72 = (int16x8_t)vzip2q_s8(v67, v68);
        int16x4x2_t v73 = (int16x4x2_t)vzip2q_s8(v70, v69);
        double result = vzip2q_s16(result, v71);
        *(int16x8_t *)((char *)a1 + a3) = result;
        int8x16_t v74 = (__int16 *)((char *)a1 + a3 + a3);
        vst2_s16(v74, v73);
        if (a4 == 4)
        {
          double result = vzip2q_s16((int16x8_t)v73, v72);
          *(int16x8_t *)((char *)v74 + a3) = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v36 = *a2;
    int16x8_t v37 = a2[1];
    *(int8x8_t *)v36.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v37.i8 = vqmovn_s16(v37);
    int8x16_t v38 = (int8x16_t)vzip1q_s16(v36, v37);
    v39.i64[0] = 0x8080808080808080;
    v39.i64[1] = 0x8080808080808080;
    int8x16_t v40 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v39);
    int8x16_t v41 = vzip1q_s8(v40, v40);
    int8x16_t v42 = vzip2q_s8(v40, v40);
    int8x16_t v43 = veorq_s8(v38, v39);
    result.i64[0] = -1;
    result.i64[1] = -1;
    int16x4x2_t v44 = (int16x4x2_t)vzip1q_s8((int8x16_t)result, v43);
    int16x4x2_t v45 = (int16x4x2_t)vzip2q_s8((int8x16_t)result, v43);
    int16x8_t v46 = (int16x8_t)vzip1q_s8(v41, v42);
    int16x8_t v47 = (int16x8_t)vzip2q_s8(v41, v42);
    vst2_s16(a1, v44);
    int8x16_t v48 = (int16x8_t *)((char *)a1 + a3);
    *int8x16_t v48 = vzip2q_s16((int16x8_t)v44, v46);
    int16x4x2_t v49 = (__int16 *)((char *)v48->i16 + a3);
    vst2_s16(v49, v45);
    int16x8_t v50 = (int16x8_t *)((char *)v49 + a3);
    *int16x8_t v50 = vzip2q_s16((int16x8_t)v45, v47);
    int16x8_t v51 = a2[2];
    int16x8_t v52 = a2[3];
    *(int8x8_t *)v51.i8 = vqmovn_s16(v51);
    *(int8x8_t *)v52.i8 = vqmovn_s16(v52);
    int8x16_t v53 = (int8x16_t)vzip1q_s16(v51, v52);
    int8x16_t v54 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), v39);
    int8x16_t v55 = vzip1q_s8(v54, v54);
    int8x16_t v56 = vzip2q_s8(v54, v54);
    int8x16_t v57 = veorq_s8(v53, v39);
    int16x4x2_t v58 = (int16x4x2_t)vzip1q_s8((int8x16_t)result, v57);
    int16x8_t v59 = (int16x8_t)vzip1q_s8(v55, v56);
    vst2_s16(v5, v58);
    if (a4 < 7)
    {
      if (a4 == 6)
      {
        double result = vzip2q_s16((int16x8_t)v58, v59);
        *(int16x8_t *)((char *)v5 + a3) = result;
      }
    }
    else
    {
      v75.val[1] = (int16x4_t)vzip2q_s8(v55, v56).u64[0];
      v75.val[0] = (int16x4_t)vzip2q_s8((int8x16_t)result, v57).u64[0];
      int8x16_t v60 = (int16x8_t *)((char *)v5 + a3);
      double result = vzip2q_s16((int16x8_t)v58, v59);
      *int8x16_t v60 = result;
      int16x4x2_t v61 = (__int16 *)((char *)v60->i16 + a3);
      vst2_s16(v61, v75);
    }
  }
  return result;
}

void from_422_to_y408<2,2,(AlphaOutputMethod)2,false>(__int16 *a1, uint64_t a2, int a3, int a4)
{
  v4.i64[0] = 0x8080808080808080;
  v4.i64[1] = 0x8080808080808080;
  int32x4_t v5 = (int32x4_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48)), v4);
  int8x16_t v6 = (int8x16_t)vuzp1q_s32(v5, vrev64q_s32(v5));
  int8x16_t v7 = vzip1q_s8(v6, v6);
  int8x16_t v8 = vzip2q_s8(v6, v6);
  int8x16_t v9 = veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v4);
  v6.i64[0] = -1;
  v6.i64[1] = -1;
  int16x4x2_t v10 = (int16x4x2_t)vzip1q_s8(v6, v9);
  int16x4x2_t v11 = (int16x4x2_t)vzip2q_s8(v6, v9);
  int16x8_t v12 = (int16x8_t)vzip1q_s8(v7, v8);
  int16x8_t v13 = (int16x8_t)vzip2q_s8(v7, v8);
  if (a4 == 4)
  {
    uint64_t v14 = a3;
    vst2_s16(a1, v10);
    int16x4x2_t v15 = (int16x8_t *)((char *)a1 + v14);
    *int16x4x2_t v15 = vzip2q_s16((int16x8_t)v10, v12);
    int16x4x2_t v16 = (__int16 *)((char *)v15->i16 + a3);
    vst2_s16(v16, v11);
    int16x8_t v17 = (int16x8_t *)((char *)v16 + v14);
    int16x8_t *v17 = vzip2q_s16((int16x8_t)v11, v13);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v10);
    }
  }
  else
  {
    uint64_t v18 = a3;
    vst2_s16(a1, v10);
    int16x8_t v19 = (int16x8_t *)((char *)a1 + v18);
    *int16x8_t v19 = vzip2q_s16((int16x8_t)v10, v12);
    if (a4 == 3)
    {
      int8x16_t v20 = (__int16 *)((char *)v19->i16 + a3);
      vst2_s16(v20, v11);
    }
  }
}

void from_422_to_y408<2,2,(AlphaOutputMethod)2,true>(__int16 *a1, uint64_t a2, int a3, int a4)
{
  v4.i64[0] = 0x8080808080808080;
  v4.i64[1] = 0x8080808080808080;
  int32x4_t v5 = (int32x4_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48)), v4);
  int8x16_t v6 = (int8x16_t)vuzp1q_s32(v5, vrev64q_s32(v5));
  int8x16_t v7 = vzip1q_s8(v6, v6);
  int8x16_t v8 = vzip2q_s8(v6, v6);
  int8x16_t v9 = veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v4);
  v6.i64[0] = -1;
  v6.i64[1] = -1;
  int16x4x2_t v10 = (int16x4x2_t)vzip1q_s8(v6, v9);
  int16x4x2_t v11 = (int16x4x2_t)vzip2q_s8(v6, v9);
  int16x8_t v12 = (int16x8_t)vzip1q_s8(v7, v8);
  int16x8_t v13 = (int16x8_t)vzip2q_s8(v7, v8);
  if (a4 == 4)
  {
    uint64_t v14 = a3;
    vst2_s16(a1, v10);
    int16x4x2_t v15 = (int16x8_t *)((char *)a1 + v14);
    *int16x4x2_t v15 = vzip2q_s16((int16x8_t)v10, v12);
    int16x4x2_t v16 = (__int16 *)((char *)v15->i16 + a3);
    vst2_s16(v16, v11);
    int16x8_t v17 = (int16x8_t *)((char *)v16 + v14);
    int16x8_t *v17 = vzip2q_s16((int16x8_t)v11, v13);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v10);
    }
  }
  else
  {
    uint64_t v18 = a3;
    vst2_s16(a1, v10);
    int16x8_t v19 = (int16x8_t *)((char *)a1 + v18);
    *int16x8_t v19 = vzip2q_s16((int16x8_t)v10, v12);
    if (a4 == 3)
    {
      int8x16_t v20 = (__int16 *)((char *)v19->i16 + a3);
      vst2_s16(v20, v11);
    }
  }
}

unsigned char *from_422_to_y408<2,1,(AlphaOutputMethod)2,false>(unsigned char *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2, 1);
}

unsigned char *from_422_to_y408<2,1,(AlphaOutputMethod)2,true>(unsigned char *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2, 1);
}

unsigned char *from_422_to_y408<1,2,(AlphaOutputMethod)2,false>(unsigned char *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1, 2);
}

unsigned char *from_422_to_y408<1,2,(AlphaOutputMethod)2,true>(unsigned char *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1, 2);
}

unsigned char *from_422_to_y408<1,1,(AlphaOutputMethod)2,false>(unsigned char *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1, 1);
}

unsigned char *from_422_to_y408<1,1,(AlphaOutputMethod)2,true>(unsigned char *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1, 1);
}

int16x8_t *from_422_to_r408<8,8,(AlphaOutputMethod)1,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v34 = a2 + 8;
    int v35 = a2 + 32;
    int16x8_t v36 = a2 + 40;
    int v38 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  v9.i64[0] = 0x1010101010101010;
  v9.i64[1] = 0x1010101010101010;
  int16x4x2_t v10 = (__int16 *)result;
  do
  {
    int16x4x2_t v11 = a2 + 1;
    int16x8_t v12 = (int16x8_t *)((char *)result + 8 * a3);
    int8x16_t v13 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v8), v9);
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v8);
    int8x16_t v15 = vzip1q_s8(v14, v14);
    int8x16_t v16 = vzip2q_s8(v14, v14);
    int16x4x2_t v17 = (int16x4x2_t)vzip1q_s8(*a5, v13);
    int16x4x2_t v18 = (int16x4x2_t)vzip2q_s8(*a5, v13);
    int16x8_t v19 = (int16x8_t)vzip1q_s8(v15, v16);
    int16x8_t v20 = (int16x8_t)vzip2q_s8(v15, v16);
    vst2_s16(v10, v17);
    int16x4x2_t v10 = (__int16 *)((char *)v10 + a3);
    result[1] = vzip2q_s16((int16x8_t)v17, v19);
    i16 = result[2].i16;
    vst2_s16(i16, v18);
    result[3] = vzip2q_s16((int16x8_t)v18, v20);
    double result = (int16x8_t *)v10;
    int8x16_t v22 = *(int8x16_t *)((char *)a5 + 8 * a6);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v23 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v8), v9);
    int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v8);
    int8x16_t v25 = vzip1q_s8(v24, v24);
    int8x16_t v26 = vzip2q_s8(v24, v24);
    int16x4x2_t v27 = (int16x4x2_t)vzip1q_s8(v22, v23);
    int16x4x2_t v28 = (int16x4x2_t)vzip2q_s8(v22, v23);
    int16x8_t v29 = (int16x8_t)vzip1q_s8(v25, v26);
    int16x8_t v30 = (int16x8_t)vzip2q_s8(v25, v26);
    int16x8_t v31 = (__int16 *)v12;
    vst2_s16(v31, v27);
    v31 += 8;
    *(int16x8_t *)int16x8_t v31 = vzip2q_s16((int16x8_t)v27, v29);
    int16x8_t v32 = v12[2].i16;
    vst2_s16(v32, v28);
    v12[3] = vzip2q_s16((int16x8_t)v28, v30);
    int v33 = v7 - 1;
    LODWORD(v32) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v32 > 1);
  int16x8_t v34 = v11 + 8;
  int v35 = v11 + 32;
  int16x8_t v36 = v11 + 40;
  if (a4 <= 8) {
    int v37 = 8;
  }
  else {
    int v37 = a4;
  }
  int v38 = v33 - v37;
  a2 = v11;
  if (v33 - v37 >= 1)
  {
LABEL_13:
    int8x16_t v39 = result + 2;
    unsigned int v40 = v38 + 1;
    v41.i64[0] = 0x8080808080808080;
    v41.i64[1] = 0x8080808080808080;
    v42.i64[0] = 0x1010101010101010;
    v42.i64[1] = 0x1010101010101010;
    int8x16_t v43 = result[2].i16;
    do
    {
      int16x8_t v44 = *a2++;
      int16x8_t v45 = v44;
      int16x8_t v46 = v39[-2].i16;
      int16x8_t v47 = *v34++;
      int8x16_t v48 = vqmovn_high_s16(vqmovn_s16(v45), v47);
      int16x8_t v49 = *v35++;
      int16x8_t v50 = v49;
      int16x8_t v51 = *v36++;
      int8x16_t v52 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v48, v41), v42);
      int8x16_t v53 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v50), v51), v41);
      int8x16_t v54 = vzip1q_s8(v53, v53);
      int8x16_t v55 = vzip2q_s8(v53, v53);
      int16x4x2_t v56 = (int16x4x2_t)vzip1q_s8(*a5, v52);
      int16x4x2_t v57 = (int16x4x2_t)vzip2q_s8(*a5, v52);
      int16x8_t v58 = (int16x8_t)vzip1q_s8(v54, v55);
      vst2_s16(v46, v56);
      int16x8_t v59 = (int16x8_t)vzip2q_s8(v54, v55);
      v39[-1] = vzip2q_s16((int16x8_t)v56, v58);
      vst2_s16(v43, v57);
      int8x16_t v43 = (__int16 *)((char *)v43 + a3);
      v39[1] = vzip2q_s16((int16x8_t)v57, v59);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v40;
      int8x16_t v39 = (int16x8_t *)v43;
    }
    while (v40 > 1);
  }
  return result;
}

int16x8_t *from_422_to_r408<8,8,(AlphaOutputMethod)1,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v34 = a2 + 8;
    int v35 = a2 + 32;
    int16x8_t v36 = a2 + 40;
    int v38 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  v9.i64[0] = 0x1010101010101010;
  v9.i64[1] = 0x1010101010101010;
  int16x4x2_t v10 = (__int16 *)result;
  do
  {
    int16x4x2_t v11 = a2 + 1;
    int16x8_t v12 = (int16x8_t *)((char *)result + 8 * a3);
    int8x16_t v13 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v8), v9);
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v8);
    int8x16_t v15 = vzip1q_s8(v14, v14);
    int8x16_t v16 = vzip2q_s8(v14, v14);
    int16x4x2_t v17 = (int16x4x2_t)vzip1q_s8(*a5, v13);
    int16x4x2_t v18 = (int16x4x2_t)vzip2q_s8(*a5, v13);
    int16x8_t v19 = (int16x8_t)vzip1q_s8(v15, v16);
    int16x8_t v20 = (int16x8_t)vzip2q_s8(v15, v16);
    vst2_s16(v10, v17);
    int16x4x2_t v10 = (__int16 *)((char *)v10 + a3);
    result[1] = vzip2q_s16((int16x8_t)v17, v19);
    i16 = result[2].i16;
    vst2_s16(i16, v18);
    result[3] = vzip2q_s16((int16x8_t)v18, v20);
    double result = (int16x8_t *)v10;
    int8x16_t v22 = *(int8x16_t *)((char *)a5 + 8 * a6);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v23 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v8), v9);
    int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v8);
    int8x16_t v25 = vzip1q_s8(v24, v24);
    int8x16_t v26 = vzip2q_s8(v24, v24);
    int16x4x2_t v27 = (int16x4x2_t)vzip1q_s8(v22, v23);
    int16x4x2_t v28 = (int16x4x2_t)vzip2q_s8(v22, v23);
    int16x8_t v29 = (int16x8_t)vzip1q_s8(v25, v26);
    int16x8_t v30 = (int16x8_t)vzip2q_s8(v25, v26);
    int16x8_t v31 = (__int16 *)v12;
    vst2_s16(v31, v27);
    v31 += 8;
    *(int16x8_t *)int16x8_t v31 = vzip2q_s16((int16x8_t)v27, v29);
    int16x8_t v32 = v12[2].i16;
    vst2_s16(v32, v28);
    v12[3] = vzip2q_s16((int16x8_t)v28, v30);
    int v33 = v7 - 1;
    LODWORD(v32) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v32 > 1);
  int16x8_t v34 = v11 + 8;
  int v35 = v11 + 32;
  int16x8_t v36 = v11 + 40;
  if (a4 <= 8) {
    int v37 = 8;
  }
  else {
    int v37 = a4;
  }
  int v38 = v33 - v37;
  a2 = v11;
  if (v33 - v37 >= 1)
  {
LABEL_13:
    int8x16_t v39 = result + 2;
    unsigned int v40 = v38 + 1;
    v41.i64[0] = 0x8080808080808080;
    v41.i64[1] = 0x8080808080808080;
    v42.i64[0] = 0x1010101010101010;
    v42.i64[1] = 0x1010101010101010;
    int8x16_t v43 = result[2].i16;
    do
    {
      int16x8_t v44 = *a2++;
      int16x8_t v45 = v44;
      int16x8_t v46 = v39[-2].i16;
      int16x8_t v47 = *v34++;
      int8x16_t v48 = vqmovn_high_s16(vqmovn_s16(v45), v47);
      int16x8_t v49 = *v35++;
      int16x8_t v50 = v49;
      int16x8_t v51 = *v36++;
      int8x16_t v52 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v48, v41), v42);
      int8x16_t v53 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v50), v51), v41);
      int8x16_t v54 = vzip1q_s8(v53, v53);
      int8x16_t v55 = vzip2q_s8(v53, v53);
      int16x4x2_t v56 = (int16x4x2_t)vzip1q_s8(*a5, v52);
      int16x4x2_t v57 = (int16x4x2_t)vzip2q_s8(*a5, v52);
      int16x8_t v58 = (int16x8_t)vzip1q_s8(v54, v55);
      vst2_s16(v46, v56);
      int16x8_t v59 = (int16x8_t)vzip2q_s8(v54, v55);
      v39[-1] = vzip2q_s16((int16x8_t)v56, v58);
      vst2_s16(v43, v57);
      int8x16_t v43 = (__int16 *)((char *)v43 + a3);
      v39[1] = vzip2q_s16((int16x8_t)v57, v59);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v40;
      int8x16_t v39 = (int16x8_t *)v43;
    }
    while (v40 > 1);
  }
  return result;
}

int16x8_t *from_422_to_r408<8,4,(AlphaOutputMethod)1,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (2 * a6);
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (!v7)
  {
    int v35 = a2 + 4;
    int16x8_t v36 = a2 + 16;
    int v37 = a2 + 20;
    int v39 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v8 = a4 + 4;
  v9.i64[0] = 0x8080808080808080;
  v9.i64[1] = 0x8080808080808080;
  v10.i64[0] = 0x1010101010101010;
  v10.i64[1] = 0x1010101010101010;
  int16x4x2_t v11 = (__int16 *)result;
  do
  {
    int16x8_t v12 = a2 + 1;
    int8x16_t v13 = (int16x8_t *)((char *)result + 4 * a3);
    int8x16_t v14 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v9), v10);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), v9);
    int8x16_t v16 = vzip1q_s8(v15, v15);
    int8x16_t v17 = vzip2q_s8(v15, v15);
    int16x4x2_t v18 = (int16x4x2_t)vzip1q_s8(*a5, v14);
    int16x4x2_t v19 = (int16x4x2_t)vzip2q_s8(*a5, v14);
    int16x8_t v20 = (int16x8_t)vzip1q_s8(v16, v17);
    int16x8_t v21 = (int16x8_t)vzip2q_s8(v16, v17);
    vst2_s16(v11, v18);
    int16x4x2_t v11 = (__int16 *)((char *)v11 + a3);
    result[1] = vzip2q_s16((int16x8_t)v18, v20);
    i16 = result[2].i16;
    vst2_s16(i16, v19);
    result[3] = vzip2q_s16((int16x8_t)v19, v21);
    double result = (int16x8_t *)v11;
    int8x16_t v23 = *(int8x16_t *)((char *)a5 + (8 * a6));
    a5 = (int8x16_t *)((char *)a5 + v6);
    int8x16_t v24 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v9), v10);
    int8x16_t v25 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), v9);
    int8x16_t v26 = vzip1q_s8(v25, v25);
    int8x16_t v27 = vzip2q_s8(v25, v25);
    int16x4x2_t v28 = (int16x4x2_t)vzip1q_s8(v23, v24);
    int16x4x2_t v29 = (int16x4x2_t)vzip2q_s8(v23, v24);
    int16x8_t v30 = (int16x8_t)vzip1q_s8(v26, v27);
    int16x8_t v31 = (int16x8_t)vzip2q_s8(v26, v27);
    int16x8_t v32 = (__int16 *)v13;
    vst2_s16(v32, v28);
    v32 += 8;
    *(int16x8_t *)int16x8_t v32 = vzip2q_s16((int16x8_t)v28, v30);
    int v33 = v13[2].i16;
    vst2_s16(v33, v29);
    v13[3] = vzip2q_s16((int16x8_t)v29, v31);
    int v34 = v8 - 1;
    LODWORD(v33) = v8 - 8;
    --v8;
    ++a2;
  }
  while ((int)v33 > 1);
  int v35 = v12 + 4;
  int16x8_t v36 = v12 + 16;
  int v37 = v12 + 20;
  if (a4 <= 4) {
    int v38 = 4;
  }
  else {
    int v38 = a4;
  }
  int v39 = v34 - v38;
  a2 = v12;
  if (v39 >= 1)
  {
LABEL_13:
    unsigned int v40 = result + 2;
    unsigned int v41 = v39 + 1;
    v42.i64[0] = 0x8080808080808080;
    v42.i64[1] = 0x8080808080808080;
    v43.i64[0] = 0x1010101010101010;
    v43.i64[1] = 0x1010101010101010;
    int16x8_t v44 = result[2].i16;
    do
    {
      int16x8_t v45 = *a2++;
      int16x8_t v46 = v45;
      int16x8_t v47 = v40[-2].i16;
      int16x8_t v48 = *v35++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v46), v48);
      int16x8_t v50 = *v36++;
      int16x8_t v51 = v50;
      int16x8_t v52 = *v37++;
      int8x16_t v53 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v49, v42), v43);
      int8x16_t v54 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v51), v52), v42);
      int8x16_t v55 = vzip1q_s8(v54, v54);
      int8x16_t v56 = vzip2q_s8(v54, v54);
      int16x4x2_t v57 = (int16x4x2_t)vzip1q_s8(*a5, v53);
      int16x4x2_t v58 = (int16x4x2_t)vzip2q_s8(*a5, v53);
      int16x8_t v59 = (int16x8_t)vzip1q_s8(v55, v56);
      vst2_s16(v47, v57);
      int16x8_t v60 = (int16x8_t)vzip2q_s8(v55, v56);
      v40[-1] = vzip2q_s16((int16x8_t)v57, v59);
      vst2_s16(v44, v58);
      int16x8_t v44 = (__int16 *)((char *)v44 + a3);
      v40[1] = vzip2q_s16((int16x8_t)v58, v60);
      a5 = (int8x16_t *)((char *)a5 + v6);
      --v41;
      unsigned int v40 = (int16x8_t *)v44;
    }
    while (v41 > 1);
  }
  return result;
}

int16x8_t *from_422_to_r408<8,4,(AlphaOutputMethod)1,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (2 * a6);
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (!v7)
  {
    int v35 = a2 + 4;
    int16x8_t v36 = a2 + 16;
    int v37 = a2 + 20;
    int v39 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v8 = a4 + 4;
  v9.i64[0] = 0x8080808080808080;
  v9.i64[1] = 0x8080808080808080;
  v10.i64[0] = 0x1010101010101010;
  v10.i64[1] = 0x1010101010101010;
  int16x4x2_t v11 = (__int16 *)result;
  do
  {
    int16x8_t v12 = a2 + 1;
    int8x16_t v13 = (int16x8_t *)((char *)result + 4 * a3);
    int8x16_t v14 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v9), v10);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), v9);
    int8x16_t v16 = vzip1q_s8(v15, v15);
    int8x16_t v17 = vzip2q_s8(v15, v15);
    int16x4x2_t v18 = (int16x4x2_t)vzip1q_s8(*a5, v14);
    int16x4x2_t v19 = (int16x4x2_t)vzip2q_s8(*a5, v14);
    int16x8_t v20 = (int16x8_t)vzip1q_s8(v16, v17);
    int16x8_t v21 = (int16x8_t)vzip2q_s8(v16, v17);
    vst2_s16(v11, v18);
    int16x4x2_t v11 = (__int16 *)((char *)v11 + a3);
    result[1] = vzip2q_s16((int16x8_t)v18, v20);
    i16 = result[2].i16;
    vst2_s16(i16, v19);
    result[3] = vzip2q_s16((int16x8_t)v19, v21);
    double result = (int16x8_t *)v11;
    int8x16_t v23 = *(int8x16_t *)((char *)a5 + (8 * a6));
    a5 = (int8x16_t *)((char *)a5 + v6);
    int8x16_t v24 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v9), v10);
    int8x16_t v25 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), v9);
    int8x16_t v26 = vzip1q_s8(v25, v25);
    int8x16_t v27 = vzip2q_s8(v25, v25);
    int16x4x2_t v28 = (int16x4x2_t)vzip1q_s8(v23, v24);
    int16x4x2_t v29 = (int16x4x2_t)vzip2q_s8(v23, v24);
    int16x8_t v30 = (int16x8_t)vzip1q_s8(v26, v27);
    int16x8_t v31 = (int16x8_t)vzip2q_s8(v26, v27);
    int16x8_t v32 = (__int16 *)v13;
    vst2_s16(v32, v28);
    v32 += 8;
    *(int16x8_t *)int16x8_t v32 = vzip2q_s16((int16x8_t)v28, v30);
    int v33 = v13[2].i16;
    vst2_s16(v33, v29);
    v13[3] = vzip2q_s16((int16x8_t)v29, v31);
    int v34 = v8 - 1;
    LODWORD(v33) = v8 - 8;
    --v8;
    ++a2;
  }
  while ((int)v33 > 1);
  int v35 = v12 + 4;
  int16x8_t v36 = v12 + 16;
  int v37 = v12 + 20;
  if (a4 <= 4) {
    int v38 = 4;
  }
  else {
    int v38 = a4;
  }
  int v39 = v34 - v38;
  a2 = v12;
  if (v39 >= 1)
  {
LABEL_13:
    unsigned int v40 = result + 2;
    unsigned int v41 = v39 + 1;
    v42.i64[0] = 0x8080808080808080;
    v42.i64[1] = 0x8080808080808080;
    v43.i64[0] = 0x1010101010101010;
    v43.i64[1] = 0x1010101010101010;
    int16x8_t v44 = result[2].i16;
    do
    {
      int16x8_t v45 = *a2++;
      int16x8_t v46 = v45;
      int16x8_t v47 = v40[-2].i16;
      int16x8_t v48 = *v35++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v46), v48);
      int16x8_t v50 = *v36++;
      int16x8_t v51 = v50;
      int16x8_t v52 = *v37++;
      int8x16_t v53 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v49, v42), v43);
      int8x16_t v54 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v51), v52), v42);
      int8x16_t v55 = vzip1q_s8(v54, v54);
      int8x16_t v56 = vzip2q_s8(v54, v54);
      int16x4x2_t v57 = (int16x4x2_t)vzip1q_s8(*a5, v53);
      int16x4x2_t v58 = (int16x4x2_t)vzip2q_s8(*a5, v53);
      int16x8_t v59 = (int16x8_t)vzip1q_s8(v55, v56);
      vst2_s16(v47, v57);
      int16x8_t v60 = (int16x8_t)vzip2q_s8(v55, v56);
      v40[-1] = vzip2q_s16((int16x8_t)v57, v59);
      vst2_s16(v44, v58);
      int16x8_t v44 = (__int16 *)((char *)v44 + a3);
      v40[1] = vzip2q_s16((int16x8_t)v58, v60);
      a5 = (int8x16_t *)((char *)a5 + v6);
      --v41;
      unsigned int v40 = (int16x8_t *)v44;
    }
    while (v41 > 1);
  }
  return result;
}

double from_422_to_r408<4,8,(AlphaOutputMethod)1,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, int8x16_t a7)
{
  *(void *)&double result = from_422_to_y408_r408_4xH<true,(AlphaOutputMethod)1,false>(a1, a2, a3, a4, a5, a6, 8u, a7).u64[0];
  return result;
}

double from_422_to_r408<4,8,(AlphaOutputMethod)1,true>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, int8x16_t a7)
{
  *(void *)&double result = from_422_to_y408_r408_4xH<true,(AlphaOutputMethod)1,false>(a1, a2, a3, a4, a5, a6, 8u, a7).u64[0];
  return result;
}

double from_422_to_r408<4,4,(AlphaOutputMethod)1,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, int8x16_t a7)
{
  *(void *)&double result = from_422_to_y408_r408_4xH<true,(AlphaOutputMethod)1,false>(a1, a2, a3, a4, a5, a6, 4u, a7).u64[0];
  return result;
}

double from_422_to_r408<4,4,(AlphaOutputMethod)1,true>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, int8x16_t a7)
{
  *(void *)&double result = from_422_to_y408_r408_4xH<true,(AlphaOutputMethod)1,false>(a1, a2, a3, a4, a5, a6, 4u, a7).u64[0];
  return result;
}

double from_422_to_r408<4,2,(AlphaOutputMethod)1,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, int8x16_t a7)
{
  *(void *)&double result = from_422_to_y408_r408_4xH<true,(AlphaOutputMethod)1,false>(a1, a2, a3, a4, a5, a6, 2u, a7).u64[0];
  return result;
}

double from_422_to_r408<4,2,(AlphaOutputMethod)1,true>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, int8x16_t a7)
{
  *(void *)&double result = from_422_to_y408_r408_4xH<true,(AlphaOutputMethod)1,false>(a1, a2, a3, a4, a5, a6, 2u, a7).u64[0];
  return result;
}

int8x16_t from_422_to_r408<2,4,(AlphaOutputMethod)1,false>(__int16 *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6, int8x16_t result)
{
  int v7 = &a1[2 * a3];
  int v8 = (int8x16_t *)((char *)a5 + (8 * a6));
  uint64_t v9 = (2 * a6);
  if (a4 == 8)
  {
    int16x8_t v10 = *a2;
    int16x8_t v11 = a2[1];
    *(int8x8_t *)v10.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v11.i8 = vqmovn_s16(v11);
    int8x16_t v12 = (int8x16_t)vzip1q_s16(v10, v11);
    v11.i64[0] = 0x8080808080808080;
    v11.i64[1] = 0x8080808080808080;
    v13.i64[0] = 0x1010101010101010;
    v13.i64[1] = 0x1010101010101010;
    int8x16_t v14 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v12, (int8x16_t)v11), v13);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), (int8x16_t)v11);
    int8x16_t v16 = vzip1q_s8(v15, v15);
    int8x16_t v17 = vzip2q_s8(v15, v15);
    v15.i64[0] = 0xFF000000FFLL;
    v15.i64[1] = 0xFF000000FFLL;
    int8x16_t v18 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v15)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v15))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v15)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v15)));
    int16x4x2_t v19 = (int16x4x2_t)vzip1q_s8(v18, v14);
    int16x4x2_t v20 = (int16x4x2_t)vzip2q_s8(v18, v14);
    int16x8_t v21 = (int16x8_t)vzip1q_s8(v16, v17);
    int16x8_t v22 = (int16x8_t)vzip2q_s8(v16, v17);
    vst2_s16(a1, v19);
    int8x16_t v23 = (int16x8_t *)((char *)a1 + a3);
    *int8x16_t v23 = vzip2q_s16((int16x8_t)v19, v21);
    int8x16_t v24 = (__int16 *)((char *)v23->i16 + a3);
    vst2_s16(v24, v20);
    int8x16_t v25 = (int16x8_t *)((char *)v24 + a3);
    *int8x16_t v25 = vzip2q_s16((int16x8_t)v20, v22);
    int16x8_t v26 = a2[2];
    int16x8_t v27 = a2[3];
    *(int8x8_t *)v26.i8 = vqmovn_s16(v26);
    *(int8x8_t *)v27.i8 = vqmovn_s16(v27);
    int8x16_t v28 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v26, v27), (int8x16_t)v11), v13);
    int8x16_t v29 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), (int8x16_t)v11);
    int8x16_t v30 = vzip1q_s8(v29, v29);
    int8x16_t v31 = vzip2q_s8(v29, v29);
    int8x16_t v32 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, v15)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), v15))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), v15)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), v15)));
    int16x4x2_t v33 = (int16x4x2_t)vzip1q_s8(v32, v28);
    int16x4x2_t v34 = (int16x4x2_t)vzip2q_s8(v32, v28);
    int16x8_t v35 = (int16x8_t)vzip1q_s8(v30, v31);
    int16x8_t v36 = (int16x8_t)vzip2q_s8(v30, v31);
    vst2_s16(v7, v33);
    int v37 = (int16x8_t *)((char *)v7 + a3);
    *int v37 = vzip2q_s16((int16x8_t)v33, v35);
    int v38 = (__int16 *)((char *)v37->i16 + a3);
    vst2_s16(v38, v34);
    int v39 = (int16x8_t *)((char *)v38 + a3);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v34, v36);
    *int v39 = (int16x8_t)result;
  }
  else if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v66 = *a2;
      int16x8_t v67 = a2[1];
      *(int8x8_t *)v66.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v67.i8 = vqmovn_s16(v67);
      v68.i64[0] = 0x8080808080808080;
      v68.i64[1] = 0x8080808080808080;
      v69.i64[0] = 0x1010101010101010;
      v69.i64[1] = 0x1010101010101010;
      double result = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v66, v67), v68), v69);
      int8x16_t v70 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v68);
      int8x16_t v71 = vzip1q_s8(v70, v70);
      int8x16_t v72 = vzip2q_s8(v70, v70);
      v73.i64[0] = 0xFF000000FFLL;
      v73.i64[1] = 0xFF000000FFLL;
      int8x16_t v74 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v73)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v73))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v73)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v73)));
      int16x4x2_t v75 = (int16x4x2_t)vzip1q_s8(v74, result);
      int16x8_t v76 = (int16x8_t)vzip1q_s8(v71, v72);
      vst2_s16(a1, v75);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          double result = (int8x16_t)vzip2q_s16((int16x8_t)v75, v76);
          *(int8x16_t *)((char *)a1 + a3) = result;
        }
      }
      else
      {
        int16x8_t v77 = (int16x8_t)vzip2q_s8(v71, v72);
        int16x4x2_t v78 = (int16x4x2_t)vzip2q_s8(v74, result);
        double result = (int8x16_t)vzip2q_s16((int16x8_t)v75, v76);
        *(int8x16_t *)((char *)a1 + a3) = result;
        int8x16_t v79 = (__int16 *)((char *)a1 + a3 + a3);
        vst2_s16(v79, v78);
        if (a4 == 4)
        {
          double result = (int8x16_t)vzip2q_s16((int16x8_t)v78, v77);
          *(int8x16_t *)((char *)v79 + a3) = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v40 = *a2;
    int16x8_t v41 = a2[1];
    *(int8x8_t *)v40.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v41.i8 = vqmovn_s16(v41);
    int8x16_t v42 = (int8x16_t)vzip1q_s16(v40, v41);
    v41.i64[0] = 0x8080808080808080;
    v41.i64[1] = 0x8080808080808080;
    v43.i64[0] = 0x1010101010101010;
    v43.i64[1] = 0x1010101010101010;
    int8x16_t v44 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v42, (int8x16_t)v41), v43);
    int8x16_t v45 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), (int8x16_t)v41);
    int8x16_t v46 = vzip1q_s8(v45, v45);
    int8x16_t v47 = vzip2q_s8(v45, v45);
    v45.i64[0] = 0xFF000000FFLL;
    v45.i64[1] = 0xFF000000FFLL;
    int8x16_t v48 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v45)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v45))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v45)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v45)));
    int16x4x2_t v49 = (int16x4x2_t)vzip1q_s8(v48, v44);
    int16x4x2_t v50 = (int16x4x2_t)vzip2q_s8(v48, v44);
    int16x8_t v51 = (int16x8_t)vzip1q_s8(v46, v47);
    int16x8_t v52 = (int16x8_t)vzip2q_s8(v46, v47);
    vst2_s16(a1, v49);
    int8x16_t v53 = (int16x8_t *)((char *)a1 + a3);
    *int8x16_t v53 = vzip2q_s16((int16x8_t)v49, v51);
    int8x16_t v54 = (__int16 *)((char *)v53->i16 + a3);
    vst2_s16(v54, v50);
    int8x16_t v55 = (int16x8_t *)((char *)v54 + a3);
    *int8x16_t v55 = vzip2q_s16((int16x8_t)v50, v52);
    int16x8_t v56 = a2[2];
    int16x8_t v57 = a2[3];
    *(int8x8_t *)v56.i8 = vqmovn_s16(v56);
    *(int8x8_t *)v57.i8 = vqmovn_s16(v57);
    int8x16_t v58 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v56, v57), (int8x16_t)v41), v43);
    int8x16_t v59 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), (int8x16_t)v41);
    int8x16_t v60 = vzip1q_s8(v59, v59);
    int8x16_t v61 = vzip2q_s8(v59, v59);
    double result = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, v45)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), v45))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), v45)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), v45)));
    int16x4x2_t v62 = (int16x4x2_t)vzip1q_s8(result, v58);
    int16x8_t v63 = (int16x8_t)vzip1q_s8(v60, v61);
    vst2_s16(v7, v62);
    if (a4 < 7)
    {
      if (a4 == 6)
      {
        double result = (int8x16_t)vzip2q_s16((int16x8_t)v62, v63);
        *(int8x16_t *)((char *)v7 + a3) = result;
      }
    }
    else
    {
      v80.val[1] = (int16x4_t)vzip2q_s8(v60, v61).u64[0];
      v80.val[0] = (int16x4_t)vzip2q_s8(result, v58).u64[0];
      int8x16_t v64 = (int16x8_t *)((char *)v7 + a3);
      double result = (int8x16_t)vzip2q_s16((int16x8_t)v62, v63);
      *int8x16_t v64 = (int16x8_t)result;
      int8x16_t v65 = (__int16 *)((char *)v64->i16 + a3);
      vst2_s16(v65, v80);
    }
  }
  return result;
}

int8x16_t from_422_to_r408<2,4,(AlphaOutputMethod)1,true>(__int16 *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6, int8x16_t result)
{
  int v7 = &a1[2 * a3];
  int v8 = (int8x16_t *)((char *)a5 + (8 * a6));
  uint64_t v9 = (2 * a6);
  if (a4 == 8)
  {
    int16x8_t v10 = *a2;
    int16x8_t v11 = a2[1];
    *(int8x8_t *)v10.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v11.i8 = vqmovn_s16(v11);
    int8x16_t v12 = (int8x16_t)vzip1q_s16(v10, v11);
    v11.i64[0] = 0x8080808080808080;
    v11.i64[1] = 0x8080808080808080;
    v13.i64[0] = 0x1010101010101010;
    v13.i64[1] = 0x1010101010101010;
    int8x16_t v14 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v12, (int8x16_t)v11), v13);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), (int8x16_t)v11);
    int8x16_t v16 = vzip1q_s8(v15, v15);
    int8x16_t v17 = vzip2q_s8(v15, v15);
    v15.i64[0] = 0xFF000000FFLL;
    v15.i64[1] = 0xFF000000FFLL;
    int8x16_t v18 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v15)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v15))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v15)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v15)));
    int16x4x2_t v19 = (int16x4x2_t)vzip1q_s8(v18, v14);
    int16x4x2_t v20 = (int16x4x2_t)vzip2q_s8(v18, v14);
    int16x8_t v21 = (int16x8_t)vzip1q_s8(v16, v17);
    int16x8_t v22 = (int16x8_t)vzip2q_s8(v16, v17);
    vst2_s16(a1, v19);
    int8x16_t v23 = (int16x8_t *)((char *)a1 + a3);
    *int8x16_t v23 = vzip2q_s16((int16x8_t)v19, v21);
    int8x16_t v24 = (__int16 *)((char *)v23->i16 + a3);
    vst2_s16(v24, v20);
    int8x16_t v25 = (int16x8_t *)((char *)v24 + a3);
    *int8x16_t v25 = vzip2q_s16((int16x8_t)v20, v22);
    int16x8_t v26 = a2[2];
    int16x8_t v27 = a2[3];
    *(int8x8_t *)v26.i8 = vqmovn_s16(v26);
    *(int8x8_t *)v27.i8 = vqmovn_s16(v27);
    int8x16_t v28 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v26, v27), (int8x16_t)v11), v13);
    int8x16_t v29 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), (int8x16_t)v11);
    int8x16_t v30 = vzip1q_s8(v29, v29);
    int8x16_t v31 = vzip2q_s8(v29, v29);
    int8x16_t v32 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, v15)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), v15))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), v15)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), v15)));
    int16x4x2_t v33 = (int16x4x2_t)vzip1q_s8(v32, v28);
    int16x4x2_t v34 = (int16x4x2_t)vzip2q_s8(v32, v28);
    int16x8_t v35 = (int16x8_t)vzip1q_s8(v30, v31);
    int16x8_t v36 = (int16x8_t)vzip2q_s8(v30, v31);
    vst2_s16(v7, v33);
    int v37 = (int16x8_t *)((char *)v7 + a3);
    *int v37 = vzip2q_s16((int16x8_t)v33, v35);
    int v38 = (__int16 *)((char *)v37->i16 + a3);
    vst2_s16(v38, v34);
    int v39 = (int16x8_t *)((char *)v38 + a3);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v34, v36);
    *int v39 = (int16x8_t)result;
  }
  else if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v66 = *a2;
      int16x8_t v67 = a2[1];
      *(int8x8_t *)v66.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v67.i8 = vqmovn_s16(v67);
      v68.i64[0] = 0x8080808080808080;
      v68.i64[1] = 0x8080808080808080;
      v69.i64[0] = 0x1010101010101010;
      v69.i64[1] = 0x1010101010101010;
      double result = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v66, v67), v68), v69);
      int8x16_t v70 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v68);
      int8x16_t v71 = vzip1q_s8(v70, v70);
      int8x16_t v72 = vzip2q_s8(v70, v70);
      v73.i64[0] = 0xFF000000FFLL;
      v73.i64[1] = 0xFF000000FFLL;
      int8x16_t v74 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v73)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v73))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v73)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v73)));
      int16x4x2_t v75 = (int16x4x2_t)vzip1q_s8(v74, result);
      int16x8_t v76 = (int16x8_t)vzip1q_s8(v71, v72);
      vst2_s16(a1, v75);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          double result = (int8x16_t)vzip2q_s16((int16x8_t)v75, v76);
          *(int8x16_t *)((char *)a1 + a3) = result;
        }
      }
      else
      {
        int16x8_t v77 = (int16x8_t)vzip2q_s8(v71, v72);
        int16x4x2_t v78 = (int16x4x2_t)vzip2q_s8(v74, result);
        double result = (int8x16_t)vzip2q_s16((int16x8_t)v75, v76);
        *(int8x16_t *)((char *)a1 + a3) = result;
        int8x16_t v79 = (__int16 *)((char *)a1 + a3 + a3);
        vst2_s16(v79, v78);
        if (a4 == 4)
        {
          double result = (int8x16_t)vzip2q_s16((int16x8_t)v78, v77);
          *(int8x16_t *)((char *)v79 + a3) = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v40 = *a2;
    int16x8_t v41 = a2[1];
    *(int8x8_t *)v40.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v41.i8 = vqmovn_s16(v41);
    int8x16_t v42 = (int8x16_t)vzip1q_s16(v40, v41);
    v41.i64[0] = 0x8080808080808080;
    v41.i64[1] = 0x8080808080808080;
    v43.i64[0] = 0x1010101010101010;
    v43.i64[1] = 0x1010101010101010;
    int8x16_t v44 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v42, (int8x16_t)v41), v43);
    int8x16_t v45 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), (int8x16_t)v41);
    int8x16_t v46 = vzip1q_s8(v45, v45);
    int8x16_t v47 = vzip2q_s8(v45, v45);
    v45.i64[0] = 0xFF000000FFLL;
    v45.i64[1] = 0xFF000000FFLL;
    int8x16_t v48 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v45)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v45))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v45)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v45)));
    int16x4x2_t v49 = (int16x4x2_t)vzip1q_s8(v48, v44);
    int16x4x2_t v50 = (int16x4x2_t)vzip2q_s8(v48, v44);
    int16x8_t v51 = (int16x8_t)vzip1q_s8(v46, v47);
    int16x8_t v52 = (int16x8_t)vzip2q_s8(v46, v47);
    vst2_s16(a1, v49);
    int8x16_t v53 = (int16x8_t *)((char *)a1 + a3);
    *int8x16_t v53 = vzip2q_s16((int16x8_t)v49, v51);
    int8x16_t v54 = (__int16 *)((char *)v53->i16 + a3);
    vst2_s16(v54, v50);
    int8x16_t v55 = (int16x8_t *)((char *)v54 + a3);
    *int8x16_t v55 = vzip2q_s16((int16x8_t)v50, v52);
    int16x8_t v56 = a2[2];
    int16x8_t v57 = a2[3];
    *(int8x8_t *)v56.i8 = vqmovn_s16(v56);
    *(int8x8_t *)v57.i8 = vqmovn_s16(v57);
    int8x16_t v58 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v56, v57), (int8x16_t)v41), v43);
    int8x16_t v59 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), (int8x16_t)v41);
    int8x16_t v60 = vzip1q_s8(v59, v59);
    int8x16_t v61 = vzip2q_s8(v59, v59);
    double result = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, v45)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), v45))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), v45)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), v45)));
    int16x4x2_t v62 = (int16x4x2_t)vzip1q_s8(result, v58);
    int16x8_t v63 = (int16x8_t)vzip1q_s8(v60, v61);
    vst2_s16(v7, v62);
    if (a4 < 7)
    {
      if (a4 == 6)
      {
        double result = (int8x16_t)vzip2q_s16((int16x8_t)v62, v63);
        *(int8x16_t *)((char *)v7 + a3) = result;
      }
    }
    else
    {
      v80.val[1] = (int16x4_t)vzip2q_s8(v60, v61).u64[0];
      v80.val[0] = (int16x4_t)vzip2q_s8(result, v58).u64[0];
      int8x16_t v64 = (int16x8_t *)((char *)v7 + a3);
      double result = (int8x16_t)vzip2q_s16((int16x8_t)v62, v63);
      *int8x16_t v64 = (int16x8_t)result;
      int8x16_t v65 = (__int16 *)((char *)v64->i16 + a3);
      vst2_s16(v65, v80);
    }
  }
  return result;
}

void from_422_to_r408<2,2,(AlphaOutputMethod)1,false>(__int16 *a1, uint64_t a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (4 * a6);
  v7.i64[0] = 0x8080808080808080;
  v7.i64[1] = 0x8080808080808080;
  v8.i64[0] = 0x1010101010101010;
  v8.i64[1] = 0x1010101010101010;
  int8x16_t v9 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v7), v8);
  int32x4_t v10 = (int32x4_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48)), v7);
  int8x16_t v11 = (int8x16_t)vuzp1q_s32(v10, vrev64q_s32(v10));
  int8x16_t v12 = vzip1q_s8(v11, v11);
  int8x16_t v13 = vzip2q_s8(v11, v11);
  v14.i64[0] = 0xFF000000FFLL;
  v14.i64[1] = 0xFF000000FFLL;
  int8x16_t v15 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v14)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6), v14))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6), v14)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6 + v6), v14)));
  int16x4x2_t v16 = (int16x4x2_t)vzip1q_s8(v15, v9);
  int16x4x2_t v17 = (int16x4x2_t)vzip2q_s8(v15, v9);
  int16x8_t v18 = (int16x8_t)vzip1q_s8(v12, v13);
  int16x8_t v19 = (int16x8_t)vzip2q_s8(v12, v13);
  if (a4 == 4)
  {
    uint64_t v20 = a3;
    vst2_s16(a1, v16);
    int16x8_t v21 = (int16x8_t *)((char *)a1 + v20);
    *int16x8_t v21 = vzip2q_s16((int16x8_t)v16, v18);
    int16x8_t v22 = (__int16 *)((char *)v21->i16 + a3);
    vst2_s16(v22, v17);
    int8x16_t v23 = (int16x8_t *)((char *)v22 + v20);
    *int8x16_t v23 = vzip2q_s16((int16x8_t)v17, v19);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v16);
    }
  }
  else
  {
    uint64_t v24 = a3;
    vst2_s16(a1, v16);
    int8x16_t v25 = (int16x8_t *)((char *)a1 + v24);
    *int8x16_t v25 = vzip2q_s16((int16x8_t)v16, v18);
    if (a4 == 3)
    {
      int16x8_t v26 = (__int16 *)((char *)v25->i16 + a3);
      vst2_s16(v26, v17);
    }
  }
}

void from_422_to_r408<2,2,(AlphaOutputMethod)1,true>(__int16 *a1, uint64_t a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (4 * a6);
  v7.i64[0] = 0x8080808080808080;
  v7.i64[1] = 0x8080808080808080;
  v8.i64[0] = 0x1010101010101010;
  v8.i64[1] = 0x1010101010101010;
  int8x16_t v9 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v7), v8);
  int32x4_t v10 = (int32x4_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48)), v7);
  int8x16_t v11 = (int8x16_t)vuzp1q_s32(v10, vrev64q_s32(v10));
  int8x16_t v12 = vzip1q_s8(v11, v11);
  int8x16_t v13 = vzip2q_s8(v11, v11);
  v14.i64[0] = 0xFF000000FFLL;
  v14.i64[1] = 0xFF000000FFLL;
  int8x16_t v15 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v14)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6), v14))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6), v14)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6 + v6), v14)));
  int16x4x2_t v16 = (int16x4x2_t)vzip1q_s8(v15, v9);
  int16x4x2_t v17 = (int16x4x2_t)vzip2q_s8(v15, v9);
  int16x8_t v18 = (int16x8_t)vzip1q_s8(v12, v13);
  int16x8_t v19 = (int16x8_t)vzip2q_s8(v12, v13);
  if (a4 == 4)
  {
    uint64_t v20 = a3;
    vst2_s16(a1, v16);
    int16x8_t v21 = (int16x8_t *)((char *)a1 + v20);
    *int16x8_t v21 = vzip2q_s16((int16x8_t)v16, v18);
    int16x8_t v22 = (__int16 *)((char *)v21->i16 + a3);
    vst2_s16(v22, v17);
    int8x16_t v23 = (int16x8_t *)((char *)v22 + v20);
    *int8x16_t v23 = vzip2q_s16((int16x8_t)v17, v19);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v16);
    }
  }
  else
  {
    uint64_t v24 = a3;
    vst2_s16(a1, v16);
    int8x16_t v25 = (int16x8_t *)((char *)a1 + v24);
    *int8x16_t v25 = vzip2q_s16((int16x8_t)v16, v18);
    if (a4 == 3)
    {
      int16x8_t v26 = (__int16 *)((char *)v25->i16 + a3);
      vst2_s16(v26, v17);
    }
  }
}

unsigned char *from_422_to_r408<2,1,(AlphaOutputMethod)1,false>(unsigned char *a1, __int16 *a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 1);
}

unsigned char *from_422_to_r408<2,1,(AlphaOutputMethod)1,true>(unsigned char *a1, __int16 *a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 1);
}

unsigned char *from_422_to_r408<1,2,(AlphaOutputMethod)1,false>(unsigned char *a1, __int16 *a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 2);
}

unsigned char *from_422_to_r408<1,2,(AlphaOutputMethod)1,true>(unsigned char *a1, __int16 *a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 2);
}

unsigned char *from_422_to_r408<1,1,(AlphaOutputMethod)1,false>(unsigned char *a1, __int16 *a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 1);
}

unsigned char *from_422_to_r408<1,1,(AlphaOutputMethod)1,true>(unsigned char *a1, __int16 *a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 1);
}

int16x8_t *from_422_to_r408<8,8,(AlphaOutputMethod)2,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int8x16_t v32 = a2 + 8;
    int16x4x2_t v33 = a2 + 32;
    int16x4x2_t v34 = a2 + 40;
    int v36 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x1010101010101010;
  v7.i64[1] = 0x1010101010101010;
  v8.i64[0] = -1;
  v8.i64[1] = -1;
  int8x16_t v9 = (__int16 *)result;
  do
  {
    int32x4_t v10 = a2 + 1;
    int8x16_t v11 = (int16x8_t *)((char *)result + 8 * a3);
    int8x16_t v12 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6), v7);
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v6);
    int8x16_t v14 = vzip1q_s8(v13, v13);
    int8x16_t v15 = vzip2q_s8(v13, v13);
    int16x4x2_t v16 = (int16x4x2_t)vzip1q_s8(v8, v12);
    int16x4x2_t v17 = (int16x4x2_t)vzip2q_s8(v8, v12);
    int16x8_t v18 = (int16x8_t)vzip1q_s8(v14, v15);
    vst2_s16(v9, v16);
    int8x16_t v9 = (__int16 *)((char *)v9 + a3);
    int16x8_t v19 = (int16x8_t)vzip2q_s8(v14, v15);
    result[1] = vzip2q_s16((int16x8_t)v16, v18);
    i16 = result[2].i16;
    vst2_s16(i16, v17);
    result[3] = vzip2q_s16((int16x8_t)v17, v19);
    double result = (int16x8_t *)v9;
    int8x16_t v21 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6), v7);
    int8x16_t v22 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v6);
    int8x16_t v23 = vzip1q_s8(v22, v22);
    int8x16_t v24 = vzip2q_s8(v22, v22);
    int16x4x2_t v25 = (int16x4x2_t)vzip1q_s8(v8, v21);
    int16x4x2_t v26 = (int16x4x2_t)vzip2q_s8(v8, v21);
    int16x8_t v27 = (int16x8_t)vzip1q_s8(v23, v24);
    int16x8_t v28 = (int16x8_t)vzip2q_s8(v23, v24);
    int8x16_t v29 = (__int16 *)v11;
    vst2_s16(v29, v25);
    v29 += 8;
    *(int16x8_t *)int8x16_t v29 = vzip2q_s16((int16x8_t)v25, v27);
    int8x16_t v30 = v11[2].i16;
    vst2_s16(v30, v26);
    v11[3] = vzip2q_s16((int16x8_t)v26, v28);
    int v31 = v5 - 1;
    LODWORD(v30) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v30 > 1);
  int8x16_t v32 = v10 + 8;
  int16x4x2_t v33 = v10 + 32;
  int16x4x2_t v34 = v10 + 40;
  if (a4 <= 8) {
    int v35 = 8;
  }
  else {
    int v35 = a4;
  }
  int v36 = v31 - v35;
  a2 = v10;
  if (v36 >= 1)
  {
LABEL_13:
    int v37 = result + 2;
    unsigned int v38 = v36 + 1;
    v39.i64[0] = 0x8080808080808080;
    v39.i64[1] = 0x8080808080808080;
    v40.i64[0] = 0x1010101010101010;
    v40.i64[1] = 0x1010101010101010;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = result[2].i16;
    do
    {
      int16x8_t v43 = *a2++;
      int16x8_t v44 = v43;
      int8x16_t v45 = v37[-2].i16;
      int16x8_t v46 = *v32++;
      int8x16_t v47 = vqmovn_high_s16(vqmovn_s16(v44), v46);
      int16x8_t v48 = *v33++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v34++;
      int8x16_t v51 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v47, v39), v40);
      int8x16_t v52 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v49), v50), v39);
      int8x16_t v53 = vzip1q_s8(v52, v52);
      int8x16_t v54 = vzip2q_s8(v52, v52);
      int16x4x2_t v55 = (int16x4x2_t)vzip1q_s8(v41, v51);
      int16x4x2_t v56 = (int16x4x2_t)vzip2q_s8(v41, v51);
      int16x8_t v57 = (int16x8_t)vzip1q_s8(v53, v54);
      vst2_s16(v45, v55);
      int16x8_t v58 = (int16x8_t)vzip2q_s8(v53, v54);
      v37[-1] = vzip2q_s16((int16x8_t)v55, v57);
      vst2_s16(v42, v56);
      int8x16_t v42 = (__int16 *)((char *)v42 + a3);
      v37[1] = vzip2q_s16((int16x8_t)v56, v58);
      --v38;
      int v37 = (int16x8_t *)v42;
    }
    while (v38 > 1);
  }
  return result;
}

int16x8_t *from_422_to_r408<8,8,(AlphaOutputMethod)2,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int8x16_t v32 = a2 + 8;
    int16x4x2_t v33 = a2 + 32;
    int16x4x2_t v34 = a2 + 40;
    int v36 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x1010101010101010;
  v7.i64[1] = 0x1010101010101010;
  v8.i64[0] = -1;
  v8.i64[1] = -1;
  int8x16_t v9 = (__int16 *)result;
  do
  {
    int32x4_t v10 = a2 + 1;
    int8x16_t v11 = (int16x8_t *)((char *)result + 8 * a3);
    int8x16_t v12 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6), v7);
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v6);
    int8x16_t v14 = vzip1q_s8(v13, v13);
    int8x16_t v15 = vzip2q_s8(v13, v13);
    int16x4x2_t v16 = (int16x4x2_t)vzip1q_s8(v8, v12);
    int16x4x2_t v17 = (int16x4x2_t)vzip2q_s8(v8, v12);
    int16x8_t v18 = (int16x8_t)vzip1q_s8(v14, v15);
    vst2_s16(v9, v16);
    int8x16_t v9 = (__int16 *)((char *)v9 + a3);
    int16x8_t v19 = (int16x8_t)vzip2q_s8(v14, v15);
    result[1] = vzip2q_s16((int16x8_t)v16, v18);
    i16 = result[2].i16;
    vst2_s16(i16, v17);
    result[3] = vzip2q_s16((int16x8_t)v17, v19);
    double result = (int16x8_t *)v9;
    int8x16_t v21 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6), v7);
    int8x16_t v22 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v6);
    int8x16_t v23 = vzip1q_s8(v22, v22);
    int8x16_t v24 = vzip2q_s8(v22, v22);
    int16x4x2_t v25 = (int16x4x2_t)vzip1q_s8(v8, v21);
    int16x4x2_t v26 = (int16x4x2_t)vzip2q_s8(v8, v21);
    int16x8_t v27 = (int16x8_t)vzip1q_s8(v23, v24);
    int16x8_t v28 = (int16x8_t)vzip2q_s8(v23, v24);
    int8x16_t v29 = (__int16 *)v11;
    vst2_s16(v29, v25);
    v29 += 8;
    *(int16x8_t *)int8x16_t v29 = vzip2q_s16((int16x8_t)v25, v27);
    int8x16_t v30 = v11[2].i16;
    vst2_s16(v30, v26);
    v11[3] = vzip2q_s16((int16x8_t)v26, v28);
    int v31 = v5 - 1;
    LODWORD(v30) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v30 > 1);
  int8x16_t v32 = v10 + 8;
  int16x4x2_t v33 = v10 + 32;
  int16x4x2_t v34 = v10 + 40;
  if (a4 <= 8) {
    int v35 = 8;
  }
  else {
    int v35 = a4;
  }
  int v36 = v31 - v35;
  a2 = v10;
  if (v36 >= 1)
  {
LABEL_13:
    int v37 = result + 2;
    unsigned int v38 = v36 + 1;
    v39.i64[0] = 0x8080808080808080;
    v39.i64[1] = 0x8080808080808080;
    v40.i64[0] = 0x1010101010101010;
    v40.i64[1] = 0x1010101010101010;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = result[2].i16;
    do
    {
      int16x8_t v43 = *a2++;
      int16x8_t v44 = v43;
      int8x16_t v45 = v37[-2].i16;
      int16x8_t v46 = *v32++;
      int8x16_t v47 = vqmovn_high_s16(vqmovn_s16(v44), v46);
      int16x8_t v48 = *v33++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v34++;
      int8x16_t v51 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v47, v39), v40);
      int8x16_t v52 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v49), v50), v39);
      int8x16_t v53 = vzip1q_s8(v52, v52);
      int8x16_t v54 = vzip2q_s8(v52, v52);
      int16x4x2_t v55 = (int16x4x2_t)vzip1q_s8(v41, v51);
      int16x4x2_t v56 = (int16x4x2_t)vzip2q_s8(v41, v51);
      int16x8_t v57 = (int16x8_t)vzip1q_s8(v53, v54);
      vst2_s16(v45, v55);
      int16x8_t v58 = (int16x8_t)vzip2q_s8(v53, v54);
      v37[-1] = vzip2q_s16((int16x8_t)v55, v57);
      vst2_s16(v42, v56);
      int8x16_t v42 = (__int16 *)((char *)v42 + a3);
      v37[1] = vzip2q_s16((int16x8_t)v56, v58);
      --v38;
      int v37 = (int16x8_t *)v42;
    }
    while (v38 > 1);
  }
  return result;
}

int16x8_t *from_422_to_r408<8,4,(AlphaOutputMethod)2,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 4) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 4;
  }
  if (!v4)
  {
    int8x16_t v32 = a2 + 4;
    int16x4x2_t v33 = a2 + 16;
    int16x4x2_t v34 = a2 + 20;
    int v36 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 4;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x1010101010101010;
  v7.i64[1] = 0x1010101010101010;
  v8.i64[0] = -1;
  v8.i64[1] = -1;
  int8x16_t v9 = (__int16 *)result;
  do
  {
    int32x4_t v10 = a2 + 1;
    int8x16_t v11 = (int16x8_t *)((char *)result + 4 * a3);
    int8x16_t v12 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v6), v7);
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), v6);
    int8x16_t v14 = vzip1q_s8(v13, v13);
    int8x16_t v15 = vzip2q_s8(v13, v13);
    int16x4x2_t v16 = (int16x4x2_t)vzip1q_s8(v8, v12);
    int16x4x2_t v17 = (int16x4x2_t)vzip2q_s8(v8, v12);
    int16x8_t v18 = (int16x8_t)vzip1q_s8(v14, v15);
    vst2_s16(v9, v16);
    int8x16_t v9 = (__int16 *)((char *)v9 + a3);
    int16x8_t v19 = (int16x8_t)vzip2q_s8(v14, v15);
    result[1] = vzip2q_s16((int16x8_t)v16, v18);
    i16 = result[2].i16;
    vst2_s16(i16, v17);
    result[3] = vzip2q_s16((int16x8_t)v17, v19);
    double result = (int16x8_t *)v9;
    int8x16_t v21 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v6), v7);
    int8x16_t v22 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), v6);
    int8x16_t v23 = vzip1q_s8(v22, v22);
    int8x16_t v24 = vzip2q_s8(v22, v22);
    int16x4x2_t v25 = (int16x4x2_t)vzip1q_s8(v8, v21);
    int16x4x2_t v26 = (int16x4x2_t)vzip2q_s8(v8, v21);
    int16x8_t v27 = (int16x8_t)vzip1q_s8(v23, v24);
    int16x8_t v28 = (int16x8_t)vzip2q_s8(v23, v24);
    int8x16_t v29 = (__int16 *)v11;
    vst2_s16(v29, v25);
    v29 += 8;
    *(int16x8_t *)int8x16_t v29 = vzip2q_s16((int16x8_t)v25, v27);
    int8x16_t v30 = v11[2].i16;
    vst2_s16(v30, v26);
    v11[3] = vzip2q_s16((int16x8_t)v26, v28);
    int v31 = v5 - 1;
    LODWORD(v30) = v5 - 8;
    --v5;
    ++a2;
  }
  while ((int)v30 > 1);
  int8x16_t v32 = v10 + 4;
  int16x4x2_t v33 = v10 + 16;
  int16x4x2_t v34 = v10 + 20;
  if (a4 <= 4) {
    int v35 = 4;
  }
  else {
    int v35 = a4;
  }
  int v36 = v31 - v35;
  a2 = v10;
  if (v36 >= 1)
  {
LABEL_13:
    int v37 = result + 2;
    unsigned int v38 = v36 + 1;
    v39.i64[0] = 0x8080808080808080;
    v39.i64[1] = 0x8080808080808080;
    v40.i64[0] = 0x1010101010101010;
    v40.i64[1] = 0x1010101010101010;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = result[2].i16;
    do
    {
      int16x8_t v43 = *a2++;
      int16x8_t v44 = v43;
      int8x16_t v45 = v37[-2].i16;
      int16x8_t v46 = *v32++;
      int8x16_t v47 = vqmovn_high_s16(vqmovn_s16(v44), v46);
      int16x8_t v48 = *v33++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v34++;
      int8x16_t v51 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v47, v39), v40);
      int8x16_t v52 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v49), v50), v39);
      int8x16_t v53 = vzip1q_s8(v52, v52);
      int8x16_t v54 = vzip2q_s8(v52, v52);
      int16x4x2_t v55 = (int16x4x2_t)vzip1q_s8(v41, v51);
      int16x4x2_t v56 = (int16x4x2_t)vzip2q_s8(v41, v51);
      int16x8_t v57 = (int16x8_t)vzip1q_s8(v53, v54);
      vst2_s16(v45, v55);
      int16x8_t v58 = (int16x8_t)vzip2q_s8(v53, v54);
      v37[-1] = vzip2q_s16((int16x8_t)v55, v57);
      vst2_s16(v42, v56);
      int8x16_t v42 = (__int16 *)((char *)v42 + a3);
      v37[1] = vzip2q_s16((int16x8_t)v56, v58);
      --v38;
      int v37 = (int16x8_t *)v42;
    }
    while (v38 > 1);
  }
  return result;
}

int16x8_t *from_422_to_r408<8,4,(AlphaOutputMethod)2,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 4) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 4;
  }
  if (!v4)
  {
    int8x16_t v32 = a2 + 4;
    int16x4x2_t v33 = a2 + 16;
    int16x4x2_t v34 = a2 + 20;
    int v36 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 4;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x1010101010101010;
  v7.i64[1] = 0x1010101010101010;
  v8.i64[0] = -1;
  v8.i64[1] = -1;
  int8x16_t v9 = (__int16 *)result;
  do
  {
    int32x4_t v10 = a2 + 1;
    int8x16_t v11 = (int16x8_t *)((char *)result + 4 * a3);
    int8x16_t v12 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v6), v7);
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), v6);
    int8x16_t v14 = vzip1q_s8(v13, v13);
    int8x16_t v15 = vzip2q_s8(v13, v13);
    int16x4x2_t v16 = (int16x4x2_t)vzip1q_s8(v8, v12);
    int16x4x2_t v17 = (int16x4x2_t)vzip2q_s8(v8, v12);
    int16x8_t v18 = (int16x8_t)vzip1q_s8(v14, v15);
    vst2_s16(v9, v16);
    int8x16_t v9 = (__int16 *)((char *)v9 + a3);
    int16x8_t v19 = (int16x8_t)vzip2q_s8(v14, v15);
    result[1] = vzip2q_s16((int16x8_t)v16, v18);
    i16 = result[2].i16;
    vst2_s16(i16, v17);
    result[3] = vzip2q_s16((int16x8_t)v17, v19);
    double result = (int16x8_t *)v9;
    int8x16_t v21 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v6), v7);
    int8x16_t v22 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), v6);
    int8x16_t v23 = vzip1q_s8(v22, v22);
    int8x16_t v24 = vzip2q_s8(v22, v22);
    int16x4x2_t v25 = (int16x4x2_t)vzip1q_s8(v8, v21);
    int16x4x2_t v26 = (int16x4x2_t)vzip2q_s8(v8, v21);
    int16x8_t v27 = (int16x8_t)vzip1q_s8(v23, v24);
    int16x8_t v28 = (int16x8_t)vzip2q_s8(v23, v24);
    int8x16_t v29 = (__int16 *)v11;
    vst2_s16(v29, v25);
    v29 += 8;
    *(int16x8_t *)int8x16_t v29 = vzip2q_s16((int16x8_t)v25, v27);
    int8x16_t v30 = v11[2].i16;
    vst2_s16(v30, v26);
    v11[3] = vzip2q_s16((int16x8_t)v26, v28);
    int v31 = v5 - 1;
    LODWORD(v30) = v5 - 8;
    --v5;
    ++a2;
  }
  while ((int)v30 > 1);
  int8x16_t v32 = v10 + 4;
  int16x4x2_t v33 = v10 + 16;
  int16x4x2_t v34 = v10 + 20;
  if (a4 <= 4) {
    int v35 = 4;
  }
  else {
    int v35 = a4;
  }
  int v36 = v31 - v35;
  a2 = v10;
  if (v36 >= 1)
  {
LABEL_13:
    int v37 = result + 2;
    unsigned int v38 = v36 + 1;
    v39.i64[0] = 0x8080808080808080;
    v39.i64[1] = 0x8080808080808080;
    v40.i64[0] = 0x1010101010101010;
    v40.i64[1] = 0x1010101010101010;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = result[2].i16;
    do
    {
      int16x8_t v43 = *a2++;
      int16x8_t v44 = v43;
      int8x16_t v45 = v37[-2].i16;
      int16x8_t v46 = *v32++;
      int8x16_t v47 = vqmovn_high_s16(vqmovn_s16(v44), v46);
      int16x8_t v48 = *v33++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v34++;
      int8x16_t v51 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v47, v39), v40);
      int8x16_t v52 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v49), v50), v39);
      int8x16_t v53 = vzip1q_s8(v52, v52);
      int8x16_t v54 = vzip2q_s8(v52, v52);
      int16x4x2_t v55 = (int16x4x2_t)vzip1q_s8(v41, v51);
      int16x4x2_t v56 = (int16x4x2_t)vzip2q_s8(v41, v51);
      int16x8_t v57 = (int16x8_t)vzip1q_s8(v53, v54);
      vst2_s16(v45, v55);
      int16x8_t v58 = (int16x8_t)vzip2q_s8(v53, v54);
      v37[-1] = vzip2q_s16((int16x8_t)v55, v57);
      vst2_s16(v42, v56);
      int8x16_t v42 = (__int16 *)((char *)v42 + a3);
      v37[1] = vzip2q_s16((int16x8_t)v56, v58);
      --v38;
      int v37 = (int16x8_t *)v42;
    }
    while (v38 > 1);
  }
  return result;
}

int8x16_t from_422_to_r408<4,8,(AlphaOutputMethod)2,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = a3;
  uint64_t v6 = 4 * a3;
  if (a4 <= 8) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 8;
  }
  if (v7 < 2)
  {
    int v36 = a2 + 4;
    int v37 = a2 + 8;
    unsigned int v38 = a2 + 12;
    int8x16_t v39 = a2 + 16;
    uint8x16_t v40 = a2 + 20;
    int8x16_t v41 = a2 + 24;
    int8x16_t v42 = a2 + 28;
    int8x16_t v45 = &a1->i16[v6];
    int v44 = a4 - v7;
    if (!a4) {
      return result;
    }
  }
  else
  {
    int v8 = a4 + 8;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v10.i64[0] = 0x1010101010101010;
    v10.i64[1] = 0x1010101010101010;
    v11.i64[0] = -1;
    v11.i64[1] = -1;
    do
    {
      int8x16_t v12 = a2 + 1;
      int8x16_t v13 = &a1->i16[v6];
      int32x4_t v14 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[4]);
      int8x16_t v15 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v14, vrev64q_s32(v14)), result), v10);
      int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), result);
      int8x16_t v17 = vzip1q_s8(v16, v16);
      int8x16_t v18 = vzip2q_s8(v16, v16);
      int16x4x2_t v19 = (int16x4x2_t)vzip1q_s8(v11, v15);
      int16x8_t v20 = (int16x8_t)vzip1q_s8(v17, v18);
      int8x16_t v21 = (__int16 *)a1;
      vst2_s16(v21, v19);
      uint64_t v9 = 9 * a3;
      int8x16_t v22 = (__int16 *)((char *)v21 + v9);
      a1[1] = vzip2q_s16((int16x8_t)v19, v20);
      int16x4x2_t v23 = (int16x4x2_t)vzip2q_s8(v11, v15);
      int16x8_t v24 = (int16x8_t)vzip2q_s8(v17, v18);
      int16x4x2_t v25 = (__int16 *)((char *)a1->i16 + a3);
      vst2_s16(v25, v23);
      v25 += 8;
      *(int16x8_t *)int16x4x2_t v25 = vzip2q_s16((int16x8_t)v23, v24);
      a1 = (int16x8_t *)((char *)a1 + 2 * a3);
      int32x4_t v26 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]);
      int8x16_t v27 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v26, vrev64q_s32(v26)), result), v10);
      int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), result);
      int8x16_t v29 = vzip1q_s8(v28, v28);
      int8x16_t v30 = vzip2q_s8(v28, v28);
      int16x4x2_t v31 = (int16x4x2_t)vzip1q_s8(v11, v27);
      int16x8_t v32 = (int16x8_t)vzip1q_s8(v29, v30);
      vst2_s16(v13, v31);
      v13 += 8;
      *(int16x8_t *)int8x16_t v13 = vzip2q_s16((int16x8_t)v31, v32);
      int16x4x2_t v33 = (int16x4x2_t)vzip2q_s8(v11, v27);
      int16x8_t v34 = (int16x8_t)vzip2q_s8(v29, v30);
      vst2_s16(v22, v33);
      v22 += 8;
      *(int16x8_t *)int8x16_t v22 = vzip2q_s16((int16x8_t)v33, v34);
      int v35 = v8 - 2;
      LODWORD(v13) = v8 - 16;
      v8 -= 2;
      ++a2;
    }
    while (v13 > 3);
    int v36 = v12 + 4;
    int v37 = v12 + 8;
    unsigned int v38 = v12 + 12;
    int8x16_t v39 = v12 + 16;
    uint8x16_t v40 = v12 + 20;
    int8x16_t v41 = v12 + 24;
    int8x16_t v42 = v12 + 28;
    if (a4 <= 8) {
      int v43 = 8;
    }
    else {
      int v43 = a4;
    }
    int v44 = v35 - v43;
    int v7 = v35 - 16;
    int8x16_t v45 = &a1->i16[v6];
    a2 = v12;
    if (!(v44 + v7)) {
      return result;
    }
  }
  if (v7 >= 1)
  {
    int32x4_t v46 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*v37), *v38);
    v47.i64[0] = 0x8080808080808080;
    v47.i64[1] = 0x8080808080808080;
    v48.i64[0] = 0x1010101010101010;
    v48.i64[1] = 0x1010101010101010;
    int8x16_t v49 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v46, vrev64q_s32(v46)), v47), v48);
    int8x16_t v50 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v41), *v42), v47);
    v48.i64[0] = -1;
    v48.i64[1] = -1;
    int16x4x2_t v51 = (int16x4x2_t)vzip1q_s8((int8x16_t)v48, v49);
    int16x8_t v52 = (int16x8_t)vzip1q_s8(vzip1q_s8(v50, v50), vzip2q_s8(v50, v50));
    vst2_s16(v45, v51);
    int8x16_t v53 = (int16x8_t *)(v45 + 8);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v51, v52);
    *int8x16_t v53 = (int16x8_t)result;
  }
  if (v44 > 1)
  {
    uint64_t v54 = 0;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v56.i64[0] = 0x1010101010101010;
    v56.i64[1] = 0x1010101010101010;
    v57.i64[0] = -1;
    v57.i64[1] = -1;
    int16x8_t v58 = (__int16 *)a1;
    do
    {
      unsigned int v59 = v44;
      int32x4_t v60 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v54]), v36[v54]);
      int8x16_t v61 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v60, vrev64q_s32(v60)), result), v56);
      int8x16_t v62 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v39[v54]), v40[v54]), result);
      int8x16_t v63 = vzip1q_s8(v62, v62);
      int8x16_t v64 = vzip2q_s8(v62, v62);
      int16x4x2_t v65 = (int16x4x2_t)vzip1q_s8(v57, v61);
      int16x8_t v66 = (int16x8_t)vzip1q_s8(v63, v64);
      vst2_s16(v58, v65);
      uint64_t v55 = 2 * v5;
      int16x8_t v58 = (__int16 *)((char *)v58 + v55);
      a1[1] = vzip2q_s16((int16x8_t)v65, v66);
      int16x4x2_t v67 = (int16x4x2_t)vzip2q_s8(v57, v61);
      int16x8_t v68 = (int16x8_t)vzip2q_s8(v63, v64);
      uint8x16_t v69 = (__int16 *)((char *)a1->i16 + v5);
      vst2_s16(v69, v67);
      v69 += 8;
      *(int16x8_t *)uint8x16_t v69 = vzip2q_s16((int16x8_t)v67, v68);
      a1 = (int16x8_t *)v58;
      int v44 = v59 - 2;
      ++v54;
    }
    while (v59 > 3);
    a2 = (int16x8_t *)((char *)a2 + v54 * 16);
    int v36 = (int16x8_t *)((char *)v36 + v54 * 16);
    int8x16_t v39 = (int16x8_t *)((char *)v39 + v54 * 16);
    uint8x16_t v40 = (int16x8_t *)((char *)v40 + v54 * 16);
  }
  if (v44 == 1)
  {
    int32x4_t v70 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), *v36);
    v71.i64[0] = 0x8080808080808080;
    v71.i64[1] = 0x8080808080808080;
    v72.i64[0] = 0x1010101010101010;
    v72.i64[1] = 0x1010101010101010;
    int8x16_t v73 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v70, vrev64q_s32(v70)), v71), v72);
    int8x16_t v74 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v39), *v40), v71);
    v72.i64[0] = -1;
    v72.i64[1] = -1;
    int16x4x2_t v75 = (int16x4x2_t)vzip1q_s8((int8x16_t)v72, v73);
    int16x8_t v76 = (int16x8_t)vzip1q_s8(vzip1q_s8(v74, v74), vzip2q_s8(v74, v74));
    vst2_s16(a1->i16, v75);
    int16x8_t v77 = a1 + 1;
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v75, v76);
    *int16x8_t v77 = (int16x8_t)result;
  }
  return result;
}

int8x16_t from_422_to_r408<4,8,(AlphaOutputMethod)2,true>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = a3;
  uint64_t v6 = 4 * a3;
  if (a4 <= 8) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 8;
  }
  if (v7 < 2)
  {
    int v36 = a2 + 4;
    int v37 = a2 + 8;
    unsigned int v38 = a2 + 12;
    int8x16_t v39 = a2 + 16;
    uint8x16_t v40 = a2 + 20;
    int8x16_t v41 = a2 + 24;
    int8x16_t v42 = a2 + 28;
    int8x16_t v45 = &a1->i16[v6];
    int v44 = a4 - v7;
    if (!a4) {
      return result;
    }
  }
  else
  {
    int v8 = a4 + 8;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v10.i64[0] = 0x1010101010101010;
    v10.i64[1] = 0x1010101010101010;
    v11.i64[0] = -1;
    v11.i64[1] = -1;
    do
    {
      int8x16_t v12 = a2 + 1;
      int8x16_t v13 = &a1->i16[v6];
      int32x4_t v14 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[4]);
      int8x16_t v15 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v14, vrev64q_s32(v14)), result), v10);
      int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[20]), result);
      int8x16_t v17 = vzip1q_s8(v16, v16);
      int8x16_t v18 = vzip2q_s8(v16, v16);
      int16x4x2_t v19 = (int16x4x2_t)vzip1q_s8(v11, v15);
      int16x8_t v20 = (int16x8_t)vzip1q_s8(v17, v18);
      int8x16_t v21 = (__int16 *)a1;
      vst2_s16(v21, v19);
      uint64_t v9 = 9 * a3;
      int8x16_t v22 = (__int16 *)((char *)v21 + v9);
      a1[1] = vzip2q_s16((int16x8_t)v19, v20);
      int16x4x2_t v23 = (int16x4x2_t)vzip2q_s8(v11, v15);
      int16x8_t v24 = (int16x8_t)vzip2q_s8(v17, v18);
      int16x4x2_t v25 = (__int16 *)((char *)a1->i16 + a3);
      vst2_s16(v25, v23);
      v25 += 8;
      *(int16x8_t *)int16x4x2_t v25 = vzip2q_s16((int16x8_t)v23, v24);
      a1 = (int16x8_t *)((char *)a1 + 2 * a3);
      int32x4_t v26 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]);
      int8x16_t v27 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v26, vrev64q_s32(v26)), result), v10);
      int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[28]), result);
      int8x16_t v29 = vzip1q_s8(v28, v28);
      int8x16_t v30 = vzip2q_s8(v28, v28);
      int16x4x2_t v31 = (int16x4x2_t)vzip1q_s8(v11, v27);
      int16x8_t v32 = (int16x8_t)vzip1q_s8(v29, v30);
      vst2_s16(v13, v31);
      v13 += 8;
      *(int16x8_t *)int8x16_t v13 = vzip2q_s16((int16x8_t)v31, v32);
      int16x4x2_t v33 = (int16x4x2_t)vzip2q_s8(v11, v27);
      int16x8_t v34 = (int16x8_t)vzip2q_s8(v29, v30);
      vst2_s16(v22, v33);
      v22 += 8;
      *(int16x8_t *)int8x16_t v22 = vzip2q_s16((int16x8_t)v33, v34);
      int v35 = v8 - 2;
      LODWORD(v13) = v8 - 16;
      v8 -= 2;
      ++a2;
    }
    while (v13 > 3);
    int v36 = v12 + 4;
    int v37 = v12 + 8;
    unsigned int v38 = v12 + 12;
    int8x16_t v39 = v12 + 16;
    uint8x16_t v40 = v12 + 20;
    int8x16_t v41 = v12 + 24;
    int8x16_t v42 = v12 + 28;
    if (a4 <= 8) {
      int v43 = 8;
    }
    else {
      int v43 = a4;
    }
    int v44 = v35 - v43;
    int v7 = v35 - 16;
    int8x16_t v45 = &a1->i16[v6];
    a2 = v12;
    if (!(v44 + v7)) {
      return result;
    }
  }
  if (v7 >= 1)
  {
    int32x4_t v46 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*v37), *v38);
    v47.i64[0] = 0x8080808080808080;
    v47.i64[1] = 0x8080808080808080;
    v48.i64[0] = 0x1010101010101010;
    v48.i64[1] = 0x1010101010101010;
    int8x16_t v49 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v46, vrev64q_s32(v46)), v47), v48);
    int8x16_t v50 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v41), *v42), v47);
    v48.i64[0] = -1;
    v48.i64[1] = -1;
    int16x4x2_t v51 = (int16x4x2_t)vzip1q_s8((int8x16_t)v48, v49);
    int16x8_t v52 = (int16x8_t)vzip1q_s8(vzip1q_s8(v50, v50), vzip2q_s8(v50, v50));
    vst2_s16(v45, v51);
    int8x16_t v53 = (int16x8_t *)(v45 + 8);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v51, v52);
    *int8x16_t v53 = (int16x8_t)result;
  }
  if (v44 > 1)
  {
    uint64_t v54 = 0;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v56.i64[0] = 0x1010101010101010;
    v56.i64[1] = 0x1010101010101010;
    v57.i64[0] = -1;
    v57.i64[1] = -1;
    int16x8_t v58 = (__int16 *)a1;
    do
    {
      unsigned int v59 = v44;
      int32x4_t v60 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v54]), v36[v54]);
      int8x16_t v61 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v60, vrev64q_s32(v60)), result), v56);
      int8x16_t v62 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v39[v54]), v40[v54]), result);
      int8x16_t v63 = vzip1q_s8(v62, v62);
      int8x16_t v64 = vzip2q_s8(v62, v62);
      int16x4x2_t v65 = (int16x4x2_t)vzip1q_s8(v57, v61);
      int16x8_t v66 = (int16x8_t)vzip1q_s8(v63, v64);
      vst2_s16(v58, v65);
      uint64_t v55 = 2 * v5;
      int16x8_t v58 = (__int16 *)((char *)v58 + v55);
      a1[1] = vzip2q_s16((int16x8_t)v65, v66);
      int16x4x2_t v67 = (int16x4x2_t)vzip2q_s8(v57, v61);
      int16x8_t v68 = (int16x8_t)vzip2q_s8(v63, v64);
      uint8x16_t v69 = (__int16 *)((char *)a1->i16 + v5);
      vst2_s16(v69, v67);
      v69 += 8;
      *(int16x8_t *)uint8x16_t v69 = vzip2q_s16((int16x8_t)v67, v68);
      a1 = (int16x8_t *)v58;
      int v44 = v59 - 2;
      ++v54;
    }
    while (v59 > 3);
    a2 = (int16x8_t *)((char *)a2 + v54 * 16);
    int v36 = (int16x8_t *)((char *)v36 + v54 * 16);
    int8x16_t v39 = (int16x8_t *)((char *)v39 + v54 * 16);
    uint8x16_t v40 = (int16x8_t *)((char *)v40 + v54 * 16);
  }
  if (v44 == 1)
  {
    int32x4_t v70 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), *v36);
    v71.i64[0] = 0x8080808080808080;
    v71.i64[1] = 0x8080808080808080;
    v72.i64[0] = 0x1010101010101010;
    v72.i64[1] = 0x1010101010101010;
    int8x16_t v73 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v70, vrev64q_s32(v70)), v71), v72);
    int8x16_t v74 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v39), *v40), v71);
    v72.i64[0] = -1;
    v72.i64[1] = -1;
    int16x4x2_t v75 = (int16x4x2_t)vzip1q_s8((int8x16_t)v72, v73);
    int16x8_t v76 = (int16x8_t)vzip1q_s8(vzip1q_s8(v74, v74), vzip2q_s8(v74, v74));
    vst2_s16(a1->i16, v75);
    int16x8_t v77 = a1 + 1;
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v75, v76);
    *int16x8_t v77 = (int16x8_t)result;
  }
  return result;
}

int8x16_t from_422_to_r408<4,4,(AlphaOutputMethod)2,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = a3;
  uint64_t v6 = 2 * a3;
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (v7 < 2)
  {
    int v36 = a2 + 2;
    int v37 = a2 + 4;
    unsigned int v38 = a2 + 6;
    int8x16_t v39 = a2 + 8;
    uint8x16_t v40 = a2 + 10;
    int8x16_t v41 = a2 + 12;
    int8x16_t v42 = a2 + 14;
    int8x16_t v45 = &a1->i16[v6];
    int v44 = a4 - v7;
    if (!a4) {
      return result;
    }
  }
  else
  {
    int v8 = a4 + 4;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v10.i64[0] = 0x1010101010101010;
    v10.i64[1] = 0x1010101010101010;
    v11.i64[0] = -1;
    v11.i64[1] = -1;
    do
    {
      int8x16_t v12 = a2 + 1;
      int8x16_t v13 = &a1->i16[v6];
      int32x4_t v14 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[2]);
      int8x16_t v15 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v14, vrev64q_s32(v14)), result), v10);
      int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[10]), result);
      int8x16_t v17 = vzip1q_s8(v16, v16);
      int8x16_t v18 = vzip2q_s8(v16, v16);
      int16x4x2_t v19 = (int16x4x2_t)vzip1q_s8(v11, v15);
      int16x8_t v20 = (int16x8_t)vzip1q_s8(v17, v18);
      int8x16_t v21 = (__int16 *)a1;
      vst2_s16(v21, v19);
      uint64_t v9 = 5 * a3;
      int8x16_t v22 = (__int16 *)((char *)v21 + v9);
      a1[1] = vzip2q_s16((int16x8_t)v19, v20);
      int16x4x2_t v23 = (int16x4x2_t)vzip2q_s8(v11, v15);
      int16x8_t v24 = (int16x8_t)vzip2q_s8(v17, v18);
      int16x4x2_t v25 = (__int16 *)((char *)a1->i16 + a3);
      vst2_s16(v25, v23);
      v25 += 8;
      *(int16x8_t *)int16x4x2_t v25 = vzip2q_s16((int16x8_t)v23, v24);
      a1 = (int16x8_t *)((char *)a1 + 2 * a3);
      int32x4_t v26 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[4]), a2[6]);
      int8x16_t v27 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v26, vrev64q_s32(v26)), result), v10);
      int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[12]), a2[14]), result);
      int8x16_t v29 = vzip1q_s8(v28, v28);
      int8x16_t v30 = vzip2q_s8(v28, v28);
      int16x4x2_t v31 = (int16x4x2_t)vzip1q_s8(v11, v27);
      int16x8_t v32 = (int16x8_t)vzip1q_s8(v29, v30);
      vst2_s16(v13, v31);
      v13 += 8;
      *(int16x8_t *)int8x16_t v13 = vzip2q_s16((int16x8_t)v31, v32);
      int16x4x2_t v33 = (int16x4x2_t)vzip2q_s8(v11, v27);
      int16x8_t v34 = (int16x8_t)vzip2q_s8(v29, v30);
      vst2_s16(v22, v33);
      v22 += 8;
      *(int16x8_t *)int8x16_t v22 = vzip2q_s16((int16x8_t)v33, v34);
      int v35 = v8 - 2;
      LODWORD(v13) = v8 - 8;
      v8 -= 2;
      ++a2;
    }
    while (v13 > 3);
    int v36 = v12 + 2;
    int v37 = v12 + 4;
    unsigned int v38 = v12 + 6;
    int8x16_t v39 = v12 + 8;
    uint8x16_t v40 = v12 + 10;
    int8x16_t v41 = v12 + 12;
    int8x16_t v42 = v12 + 14;
    if (a4 <= 4) {
      int v43 = 4;
    }
    else {
      int v43 = a4;
    }
    int v44 = v35 - v43;
    int v7 = v35 - 8;
    int8x16_t v45 = &a1->i16[v6];
    a2 = v12;
    if (!(v44 + v7)) {
      return result;
    }
  }
  if (v7 >= 1)
  {
    int32x4_t v46 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*v37), *v38);
    v47.i64[0] = 0x8080808080808080;
    v47.i64[1] = 0x8080808080808080;
    v48.i64[0] = 0x1010101010101010;
    v48.i64[1] = 0x1010101010101010;
    int8x16_t v49 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v46, vrev64q_s32(v46)), v47), v48);
    int8x16_t v50 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v41), *v42), v47);
    v48.i64[0] = -1;
    v48.i64[1] = -1;
    int16x4x2_t v51 = (int16x4x2_t)vzip1q_s8((int8x16_t)v48, v49);
    int16x8_t v52 = (int16x8_t)vzip1q_s8(vzip1q_s8(v50, v50), vzip2q_s8(v50, v50));
    vst2_s16(v45, v51);
    int8x16_t v53 = (int16x8_t *)(v45 + 8);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v51, v52);
    *int8x16_t v53 = (int16x8_t)result;
  }
  if (v44 > 1)
  {
    uint64_t v54 = 0;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v56.i64[0] = 0x1010101010101010;
    v56.i64[1] = 0x1010101010101010;
    v57.i64[0] = -1;
    v57.i64[1] = -1;
    int16x8_t v58 = (__int16 *)a1;
    do
    {
      unsigned int v59 = v44;
      int32x4_t v60 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v54]), v36[v54]);
      int8x16_t v61 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v60, vrev64q_s32(v60)), result), v56);
      int8x16_t v62 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v39[v54]), v40[v54]), result);
      int8x16_t v63 = vzip1q_s8(v62, v62);
      int8x16_t v64 = vzip2q_s8(v62, v62);
      int16x4x2_t v65 = (int16x4x2_t)vzip1q_s8(v57, v61);
      int16x8_t v66 = (int16x8_t)vzip1q_s8(v63, v64);
      vst2_s16(v58, v65);
      uint64_t v55 = 2 * v5;
      int16x8_t v58 = (__int16 *)((char *)v58 + v55);
      a1[1] = vzip2q_s16((int16x8_t)v65, v66);
      int16x4x2_t v67 = (int16x4x2_t)vzip2q_s8(v57, v61);
      int16x8_t v68 = (int16x8_t)vzip2q_s8(v63, v64);
      uint8x16_t v69 = (__int16 *)((char *)a1->i16 + v5);
      vst2_s16(v69, v67);
      v69 += 8;
      *(int16x8_t *)uint8x16_t v69 = vzip2q_s16((int16x8_t)v67, v68);
      a1 = (int16x8_t *)v58;
      int v44 = v59 - 2;
      ++v54;
    }
    while (v59 > 3);
    a2 = (int16x8_t *)((char *)a2 + v54 * 16);
    int v36 = (int16x8_t *)((char *)v36 + v54 * 16);
    int8x16_t v39 = (int16x8_t *)((char *)v39 + v54 * 16);
    uint8x16_t v40 = (int16x8_t *)((char *)v40 + v54 * 16);
  }
  if (v44 == 1)
  {
    int32x4_t v70 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), *v36);
    v71.i64[0] = 0x8080808080808080;
    v71.i64[1] = 0x8080808080808080;
    v72.i64[0] = 0x1010101010101010;
    v72.i64[1] = 0x1010101010101010;
    int8x16_t v73 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v70, vrev64q_s32(v70)), v71), v72);
    int8x16_t v74 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v39), *v40), v71);
    v72.i64[0] = -1;
    v72.i64[1] = -1;
    int16x4x2_t v75 = (int16x4x2_t)vzip1q_s8((int8x16_t)v72, v73);
    int16x8_t v76 = (int16x8_t)vzip1q_s8(vzip1q_s8(v74, v74), vzip2q_s8(v74, v74));
    vst2_s16(a1->i16, v75);
    int16x8_t v77 = a1 + 1;
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v75, v76);
    *int16x8_t v77 = (int16x8_t)result;
  }
  return result;
}

int8x16_t from_422_to_r408<4,4,(AlphaOutputMethod)2,true>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = a3;
  uint64_t v6 = 2 * a3;
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (v7 < 2)
  {
    int v36 = a2 + 2;
    int v37 = a2 + 4;
    unsigned int v38 = a2 + 6;
    int8x16_t v39 = a2 + 8;
    uint8x16_t v40 = a2 + 10;
    int8x16_t v41 = a2 + 12;
    int8x16_t v42 = a2 + 14;
    int8x16_t v45 = &a1->i16[v6];
    int v44 = a4 - v7;
    if (!a4) {
      return result;
    }
  }
  else
  {
    int v8 = a4 + 4;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v10.i64[0] = 0x1010101010101010;
    v10.i64[1] = 0x1010101010101010;
    v11.i64[0] = -1;
    v11.i64[1] = -1;
    do
    {
      int8x16_t v12 = a2 + 1;
      int8x16_t v13 = &a1->i16[v6];
      int32x4_t v14 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[2]);
      int8x16_t v15 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v14, vrev64q_s32(v14)), result), v10);
      int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[10]), result);
      int8x16_t v17 = vzip1q_s8(v16, v16);
      int8x16_t v18 = vzip2q_s8(v16, v16);
      int16x4x2_t v19 = (int16x4x2_t)vzip1q_s8(v11, v15);
      int16x8_t v20 = (int16x8_t)vzip1q_s8(v17, v18);
      int8x16_t v21 = (__int16 *)a1;
      vst2_s16(v21, v19);
      uint64_t v9 = 5 * a3;
      int8x16_t v22 = (__int16 *)((char *)v21 + v9);
      a1[1] = vzip2q_s16((int16x8_t)v19, v20);
      int16x4x2_t v23 = (int16x4x2_t)vzip2q_s8(v11, v15);
      int16x8_t v24 = (int16x8_t)vzip2q_s8(v17, v18);
      int16x4x2_t v25 = (__int16 *)((char *)a1->i16 + a3);
      vst2_s16(v25, v23);
      v25 += 8;
      *(int16x8_t *)int16x4x2_t v25 = vzip2q_s16((int16x8_t)v23, v24);
      a1 = (int16x8_t *)((char *)a1 + 2 * a3);
      int32x4_t v26 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[4]), a2[6]);
      int8x16_t v27 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v26, vrev64q_s32(v26)), result), v10);
      int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[12]), a2[14]), result);
      int8x16_t v29 = vzip1q_s8(v28, v28);
      int8x16_t v30 = vzip2q_s8(v28, v28);
      int16x4x2_t v31 = (int16x4x2_t)vzip1q_s8(v11, v27);
      int16x8_t v32 = (int16x8_t)vzip1q_s8(v29, v30);
      vst2_s16(v13, v31);
      v13 += 8;
      *(int16x8_t *)int8x16_t v13 = vzip2q_s16((int16x8_t)v31, v32);
      int16x4x2_t v33 = (int16x4x2_t)vzip2q_s8(v11, v27);
      int16x8_t v34 = (int16x8_t)vzip2q_s8(v29, v30);
      vst2_s16(v22, v33);
      v22 += 8;
      *(int16x8_t *)int8x16_t v22 = vzip2q_s16((int16x8_t)v33, v34);
      int v35 = v8 - 2;
      LODWORD(v13) = v8 - 8;
      v8 -= 2;
      ++a2;
    }
    while (v13 > 3);
    int v36 = v12 + 2;
    int v37 = v12 + 4;
    unsigned int v38 = v12 + 6;
    int8x16_t v39 = v12 + 8;
    uint8x16_t v40 = v12 + 10;
    int8x16_t v41 = v12 + 12;
    int8x16_t v42 = v12 + 14;
    if (a4 <= 4) {
      int v43 = 4;
    }
    else {
      int v43 = a4;
    }
    int v44 = v35 - v43;
    int v7 = v35 - 8;
    int8x16_t v45 = &a1->i16[v6];
    a2 = v12;
    if (!(v44 + v7)) {
      return result;
    }
  }
  if (v7 >= 1)
  {
    int32x4_t v46 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*v37), *v38);
    v47.i64[0] = 0x8080808080808080;
    v47.i64[1] = 0x8080808080808080;
    v48.i64[0] = 0x1010101010101010;
    v48.i64[1] = 0x1010101010101010;
    int8x16_t v49 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v46, vrev64q_s32(v46)), v47), v48);
    int8x16_t v50 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v41), *v42), v47);
    v48.i64[0] = -1;
    v48.i64[1] = -1;
    int16x4x2_t v51 = (int16x4x2_t)vzip1q_s8((int8x16_t)v48, v49);
    int16x8_t v52 = (int16x8_t)vzip1q_s8(vzip1q_s8(v50, v50), vzip2q_s8(v50, v50));
    vst2_s16(v45, v51);
    int8x16_t v53 = (int16x8_t *)(v45 + 8);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v51, v52);
    *int8x16_t v53 = (int16x8_t)result;
  }
  if (v44 > 1)
  {
    uint64_t v54 = 0;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v56.i64[0] = 0x1010101010101010;
    v56.i64[1] = 0x1010101010101010;
    v57.i64[0] = -1;
    v57.i64[1] = -1;
    int16x8_t v58 = (__int16 *)a1;
    do
    {
      unsigned int v59 = v44;
      int32x4_t v60 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v54]), v36[v54]);
      int8x16_t v61 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v60, vrev64q_s32(v60)), result), v56);
      int8x16_t v62 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v39[v54]), v40[v54]), result);
      int8x16_t v63 = vzip1q_s8(v62, v62);
      int8x16_t v64 = vzip2q_s8(v62, v62);
      int16x4x2_t v65 = (int16x4x2_t)vzip1q_s8(v57, v61);
      int16x8_t v66 = (int16x8_t)vzip1q_s8(v63, v64);
      vst2_s16(v58, v65);
      uint64_t v55 = 2 * v5;
      int16x8_t v58 = (__int16 *)((char *)v58 + v55);
      a1[1] = vzip2q_s16((int16x8_t)v65, v66);
      int16x4x2_t v67 = (int16x4x2_t)vzip2q_s8(v57, v61);
      int16x8_t v68 = (int16x8_t)vzip2q_s8(v63, v64);
      uint8x16_t v69 = (__int16 *)((char *)a1->i16 + v5);
      vst2_s16(v69, v67);
      v69 += 8;
      *(int16x8_t *)uint8x16_t v69 = vzip2q_s16((int16x8_t)v67, v68);
      a1 = (int16x8_t *)v58;
      int v44 = v59 - 2;
      ++v54;
    }
    while (v59 > 3);
    a2 = (int16x8_t *)((char *)a2 + v54 * 16);
    int v36 = (int16x8_t *)((char *)v36 + v54 * 16);
    int8x16_t v39 = (int16x8_t *)((char *)v39 + v54 * 16);
    uint8x16_t v40 = (int16x8_t *)((char *)v40 + v54 * 16);
  }
  if (v44 == 1)
  {
    int32x4_t v70 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), *v36);
    v71.i64[0] = 0x8080808080808080;
    v71.i64[1] = 0x8080808080808080;
    v72.i64[0] = 0x1010101010101010;
    v72.i64[1] = 0x1010101010101010;
    int8x16_t v73 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v70, vrev64q_s32(v70)), v71), v72);
    int8x16_t v74 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v39), *v40), v71);
    v72.i64[0] = -1;
    v72.i64[1] = -1;
    int16x4x2_t v75 = (int16x4x2_t)vzip1q_s8((int8x16_t)v72, v73);
    int16x8_t v76 = (int16x8_t)vzip1q_s8(vzip1q_s8(v74, v74), vzip2q_s8(v74, v74));
    vst2_s16(a1->i16, v75);
    int16x8_t v77 = a1 + 1;
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v75, v76);
    *int16x8_t v77 = (int16x8_t)result;
  }
  return result;
}

int8x16_t from_422_to_r408<4,2,(AlphaOutputMethod)2,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = a3;
  uint64_t v6 = a3;
  if (a4 <= 2) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 2;
  }
  if (v7 < 2)
  {
    int v36 = a2 + 1;
    int v37 = a2 + 2;
    unsigned int v38 = a2 + 3;
    int8x16_t v39 = a2 + 4;
    uint8x16_t v40 = a2 + 5;
    int8x16_t v41 = a2 + 6;
    int8x16_t v42 = a2 + 7;
    int8x16_t v45 = &a1->i16[v6];
    int v44 = a4 - v7;
    if (!a4) {
      return result;
    }
  }
  else
  {
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v9.i64[0] = 0x1010101010101010;
    v9.i64[1] = 0x1010101010101010;
    v10.i64[0] = -1;
    v10.i64[1] = -1;
    unsigned int v11 = a4;
    int8x16_t v12 = a2;
    do
    {
      int16x8_t v13 = v12[1];
      ++v12;
      int32x4_t v14 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), v13);
      int8x16_t v15 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v14, vrev64q_s32(v14)), result), v9);
      int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), result);
      int8x16_t v17 = vzip1q_s8(v16, v16);
      int8x16_t v18 = vzip2q_s8(v16, v16);
      int16x4x2_t v19 = (int16x4x2_t)vzip1q_s8(v10, v15);
      int16x8_t v20 = (int16x8_t)vzip1q_s8(v17, v18);
      int8x16_t v21 = (__int16 *)a1;
      vst2_s16(v21, v19);
      uint64_t v8 = 3 * a3;
      int8x16_t v22 = (__int16 *)((char *)v21 + v8);
      a1[1] = vzip2q_s16((int16x8_t)v19, v20);
      int16x4x2_t v23 = (__int16 *)((char *)a1->i16 + a3);
      a1 = (int16x8_t *)((char *)a1 + v6 * 2);
      int16x4x2_t v24 = (int16x4x2_t)vzip2q_s8(v10, v15);
      int16x8_t v25 = (int16x8_t)vzip2q_s8(v17, v18);
      vst2_s16(v23, v24);
      v23 += 8;
      *(int16x8_t *)int16x4x2_t v23 = vzip2q_s16((int16x8_t)v24, v25);
      int32x4_t v26 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[2]), a2[3]);
      int8x16_t v27 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v26, vrev64q_s32(v26)), result), v9);
      int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), result);
      int8x16_t v29 = vzip1q_s8(v28, v28);
      int8x16_t v30 = vzip2q_s8(v28, v28);
      int16x4x2_t v31 = (int16x4x2_t)vzip1q_s8(v10, v27);
      int16x8_t v32 = (int16x8_t)vzip1q_s8(v29, v30);
      int16x4x2_t v33 = (__int16 *)a1;
      vst2_s16(v33, v31);
      v33 += 8;
      *(int16x8_t *)int16x4x2_t v33 = vzip2q_s16((int16x8_t)v31, v32);
      int16x4x2_t v34 = (int16x4x2_t)vzip2q_s8(v10, v27);
      int16x8_t v35 = (int16x8_t)vzip2q_s8(v29, v30);
      vst2_s16(v22, v34);
      v22 += 8;
      *(int16x8_t *)int8x16_t v22 = vzip2q_s16((int16x8_t)v34, v35);
      v11 -= 2;
      a2 = v12;
    }
    while (v11 > 3);
    int v36 = v12 + 1;
    int v37 = v12 + 2;
    unsigned int v38 = v12 + 3;
    int8x16_t v39 = v12 + 4;
    uint8x16_t v40 = v12 + 5;
    int8x16_t v41 = v12 + 6;
    int8x16_t v42 = v12 + 7;
    if (a4 <= 2) {
      int v43 = 2;
    }
    else {
      int v43 = a4;
    }
    int v44 = v11 - v43 + 2;
    int v7 = v11 - 2;
    int8x16_t v45 = &a1->i16[v6];
    a2 = v12;
    if (!(v44 + v7)) {
      return result;
    }
  }
  if (v7 >= 1)
  {
    int32x4_t v46 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*v37), *v38);
    v47.i64[0] = 0x8080808080808080;
    v47.i64[1] = 0x8080808080808080;
    v48.i64[0] = 0x1010101010101010;
    v48.i64[1] = 0x1010101010101010;
    int8x16_t v49 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v46, vrev64q_s32(v46)), v47), v48);
    int8x16_t v50 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v41), *v42), v47);
    v48.i64[0] = -1;
    v48.i64[1] = -1;
    int16x4x2_t v51 = (int16x4x2_t)vzip1q_s8((int8x16_t)v48, v49);
    int16x8_t v52 = (int16x8_t)vzip1q_s8(vzip1q_s8(v50, v50), vzip2q_s8(v50, v50));
    vst2_s16(v45, v51);
    int8x16_t v53 = (int16x8_t *)(v45 + 8);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v51, v52);
    *int8x16_t v53 = (int16x8_t)result;
  }
  if (v44 > 1)
  {
    uint64_t v54 = 0;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v55.i64[0] = 0x1010101010101010;
    v55.i64[1] = 0x1010101010101010;
    v56.i64[0] = -1;
    v56.i64[1] = -1;
    int8x16_t v57 = (__int16 *)a1;
    do
    {
      unsigned int v58 = v44;
      int32x4_t v59 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v54]), v36[v54]);
      int8x16_t v60 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v59, vrev64q_s32(v59)), result), v55);
      int8x16_t v61 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v39[v54]), v40[v54]), result);
      int8x16_t v62 = vzip1q_s8(v61, v61);
      int8x16_t v63 = vzip2q_s8(v61, v61);
      int16x4x2_t v64 = (int16x4x2_t)vzip1q_s8(v56, v60);
      int16x8_t v65 = (int16x8_t)vzip1q_s8(v62, v63);
      vst2_s16(v57, v64);
      int8x16_t v57 = (__int16 *)((char *)v57 + v6 * 2);
      a1[1] = vzip2q_s16((int16x8_t)v64, v65);
      int16x4x2_t v66 = (int16x4x2_t)vzip2q_s8(v56, v60);
      int16x8_t v67 = (int16x8_t)vzip2q_s8(v62, v63);
      int16x8_t v68 = (__int16 *)((char *)a1->i16 + v5);
      vst2_s16(v68, v66);
      v68 += 8;
      *(int16x8_t *)int16x8_t v68 = vzip2q_s16((int16x8_t)v66, v67);
      a1 = (int16x8_t *)v57;
      int v44 = v58 - 2;
      ++v54;
    }
    while (v58 > 3);
    a2 = (int16x8_t *)((char *)a2 + v54 * 16);
    int v36 = (int16x8_t *)((char *)v36 + v54 * 16);
    int8x16_t v39 = (int16x8_t *)((char *)v39 + v54 * 16);
    uint8x16_t v40 = (int16x8_t *)((char *)v40 + v54 * 16);
  }
  if (v44 == 1)
  {
    int32x4_t v69 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), *v36);
    v70.i64[0] = 0x8080808080808080;
    v70.i64[1] = 0x8080808080808080;
    v71.i64[0] = 0x1010101010101010;
    v71.i64[1] = 0x1010101010101010;
    int8x16_t v72 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v69, vrev64q_s32(v69)), v70), v71);
    int8x16_t v73 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v39), *v40), v70);
    v71.i64[0] = -1;
    v71.i64[1] = -1;
    int16x4x2_t v74 = (int16x4x2_t)vzip1q_s8((int8x16_t)v71, v72);
    int16x8_t v75 = (int16x8_t)vzip1q_s8(vzip1q_s8(v73, v73), vzip2q_s8(v73, v73));
    vst2_s16(a1->i16, v74);
    int16x8_t v76 = a1 + 1;
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v74, v75);
    int16x8_t *v76 = (int16x8_t)result;
  }
  return result;
}

int8x16_t from_422_to_r408<4,2,(AlphaOutputMethod)2,true>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = a3;
  uint64_t v6 = a3;
  if (a4 <= 2) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 2;
  }
  if (v7 < 2)
  {
    int v36 = a2 + 1;
    int v37 = a2 + 2;
    unsigned int v38 = a2 + 3;
    int8x16_t v39 = a2 + 4;
    uint8x16_t v40 = a2 + 5;
    int8x16_t v41 = a2 + 6;
    int8x16_t v42 = a2 + 7;
    int8x16_t v45 = &a1->i16[v6];
    int v44 = a4 - v7;
    if (!a4) {
      return result;
    }
  }
  else
  {
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v9.i64[0] = 0x1010101010101010;
    v9.i64[1] = 0x1010101010101010;
    v10.i64[0] = -1;
    v10.i64[1] = -1;
    unsigned int v11 = a4;
    int8x16_t v12 = a2;
    do
    {
      int16x8_t v13 = v12[1];
      ++v12;
      int32x4_t v14 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), v13);
      int8x16_t v15 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v14, vrev64q_s32(v14)), result), v9);
      int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), result);
      int8x16_t v17 = vzip1q_s8(v16, v16);
      int8x16_t v18 = vzip2q_s8(v16, v16);
      int16x4x2_t v19 = (int16x4x2_t)vzip1q_s8(v10, v15);
      int16x8_t v20 = (int16x8_t)vzip1q_s8(v17, v18);
      int8x16_t v21 = (__int16 *)a1;
      vst2_s16(v21, v19);
      uint64_t v8 = 3 * a3;
      int8x16_t v22 = (__int16 *)((char *)v21 + v8);
      a1[1] = vzip2q_s16((int16x8_t)v19, v20);
      int16x4x2_t v23 = (__int16 *)((char *)a1->i16 + a3);
      a1 = (int16x8_t *)((char *)a1 + v6 * 2);
      int16x4x2_t v24 = (int16x4x2_t)vzip2q_s8(v10, v15);
      int16x8_t v25 = (int16x8_t)vzip2q_s8(v17, v18);
      vst2_s16(v23, v24);
      v23 += 8;
      *(int16x8_t *)int16x4x2_t v23 = vzip2q_s16((int16x8_t)v24, v25);
      int32x4_t v26 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[2]), a2[3]);
      int8x16_t v27 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v26, vrev64q_s32(v26)), result), v9);
      int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), result);
      int8x16_t v29 = vzip1q_s8(v28, v28);
      int8x16_t v30 = vzip2q_s8(v28, v28);
      int16x4x2_t v31 = (int16x4x2_t)vzip1q_s8(v10, v27);
      int16x8_t v32 = (int16x8_t)vzip1q_s8(v29, v30);
      int16x4x2_t v33 = (__int16 *)a1;
      vst2_s16(v33, v31);
      v33 += 8;
      *(int16x8_t *)int16x4x2_t v33 = vzip2q_s16((int16x8_t)v31, v32);
      int16x4x2_t v34 = (int16x4x2_t)vzip2q_s8(v10, v27);
      int16x8_t v35 = (int16x8_t)vzip2q_s8(v29, v30);
      vst2_s16(v22, v34);
      v22 += 8;
      *(int16x8_t *)int8x16_t v22 = vzip2q_s16((int16x8_t)v34, v35);
      v11 -= 2;
      a2 = v12;
    }
    while (v11 > 3);
    int v36 = v12 + 1;
    int v37 = v12 + 2;
    unsigned int v38 = v12 + 3;
    int8x16_t v39 = v12 + 4;
    uint8x16_t v40 = v12 + 5;
    int8x16_t v41 = v12 + 6;
    int8x16_t v42 = v12 + 7;
    if (a4 <= 2) {
      int v43 = 2;
    }
    else {
      int v43 = a4;
    }
    int v44 = v11 - v43 + 2;
    int v7 = v11 - 2;
    int8x16_t v45 = &a1->i16[v6];
    a2 = v12;
    if (!(v44 + v7)) {
      return result;
    }
  }
  if (v7 >= 1)
  {
    int32x4_t v46 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*v37), *v38);
    v47.i64[0] = 0x8080808080808080;
    v47.i64[1] = 0x8080808080808080;
    v48.i64[0] = 0x1010101010101010;
    v48.i64[1] = 0x1010101010101010;
    int8x16_t v49 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v46, vrev64q_s32(v46)), v47), v48);
    int8x16_t v50 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v41), *v42), v47);
    v48.i64[0] = -1;
    v48.i64[1] = -1;
    int16x4x2_t v51 = (int16x4x2_t)vzip1q_s8((int8x16_t)v48, v49);
    int16x8_t v52 = (int16x8_t)vzip1q_s8(vzip1q_s8(v50, v50), vzip2q_s8(v50, v50));
    vst2_s16(v45, v51);
    int8x16_t v53 = (int16x8_t *)(v45 + 8);
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v51, v52);
    *int8x16_t v53 = (int16x8_t)result;
  }
  if (v44 > 1)
  {
    uint64_t v54 = 0;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v55.i64[0] = 0x1010101010101010;
    v55.i64[1] = 0x1010101010101010;
    v56.i64[0] = -1;
    v56.i64[1] = -1;
    int8x16_t v57 = (__int16 *)a1;
    do
    {
      unsigned int v58 = v44;
      int32x4_t v59 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v54]), v36[v54]);
      int8x16_t v60 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v59, vrev64q_s32(v59)), result), v55);
      int8x16_t v61 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v39[v54]), v40[v54]), result);
      int8x16_t v62 = vzip1q_s8(v61, v61);
      int8x16_t v63 = vzip2q_s8(v61, v61);
      int16x4x2_t v64 = (int16x4x2_t)vzip1q_s8(v56, v60);
      int16x8_t v65 = (int16x8_t)vzip1q_s8(v62, v63);
      vst2_s16(v57, v64);
      int8x16_t v57 = (__int16 *)((char *)v57 + v6 * 2);
      a1[1] = vzip2q_s16((int16x8_t)v64, v65);
      int16x4x2_t v66 = (int16x4x2_t)vzip2q_s8(v56, v60);
      int16x8_t v67 = (int16x8_t)vzip2q_s8(v62, v63);
      int16x8_t v68 = (__int16 *)((char *)a1->i16 + v5);
      vst2_s16(v68, v66);
      v68 += 8;
      *(int16x8_t *)int16x8_t v68 = vzip2q_s16((int16x8_t)v66, v67);
      a1 = (int16x8_t *)v57;
      int v44 = v58 - 2;
      ++v54;
    }
    while (v58 > 3);
    a2 = (int16x8_t *)((char *)a2 + v54 * 16);
    int v36 = (int16x8_t *)((char *)v36 + v54 * 16);
    int8x16_t v39 = (int16x8_t *)((char *)v39 + v54 * 16);
    uint8x16_t v40 = (int16x8_t *)((char *)v40 + v54 * 16);
  }
  if (v44 == 1)
  {
    int32x4_t v69 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), *v36);
    v70.i64[0] = 0x8080808080808080;
    v70.i64[1] = 0x8080808080808080;
    v71.i64[0] = 0x1010101010101010;
    v71.i64[1] = 0x1010101010101010;
    int8x16_t v72 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v69, vrev64q_s32(v69)), v70), v71);
    int8x16_t v73 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v39), *v40), v70);
    v71.i64[0] = -1;
    v71.i64[1] = -1;
    int16x4x2_t v74 = (int16x4x2_t)vzip1q_s8((int8x16_t)v71, v72);
    int16x8_t v75 = (int16x8_t)vzip1q_s8(vzip1q_s8(v73, v73), vzip2q_s8(v73, v73));
    vst2_s16(a1->i16, v74);
    int16x8_t v76 = a1 + 1;
    double result = (int8x16_t)vzip2q_s16((int16x8_t)v74, v75);
    int16x8_t *v76 = (int16x8_t)result;
  }
  return result;
}

int16x8_t from_422_to_r408<2,4,(AlphaOutputMethod)2,false>(__int16 *a1, int16x8_t *a2, int a3, int a4, int16x8_t result)
{
  uint64_t v5 = &a1[2 * a3];
  if (a4 == 8)
  {
    int16x8_t v6 = *a2;
    int16x8_t v7 = a2[1];
    *(int8x8_t *)v6.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v7.i8 = vqmovn_s16(v7);
    v8.i64[0] = 0x8080808080808080;
    v8.i64[1] = 0x8080808080808080;
    v9.i64[0] = 0x1010101010101010;
    v9.i64[1] = 0x1010101010101010;
    int8x16_t v10 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v6, v7), v8), v9);
    int8x16_t v11 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v8);
    int8x16_t v12 = vzip1q_s8(v11, v11);
    int8x16_t v13 = vzip2q_s8(v11, v11);
    v14.i64[0] = -1;
    v14.i64[1] = -1;
    int16x4x2_t v15 = (int16x4x2_t)vzip1q_s8(v14, v10);
    int16x4x2_t v16 = (int16x4x2_t)vzip2q_s8(v14, v10);
    int16x8_t v17 = (int16x8_t)vzip1q_s8(v12, v13);
    int16x8_t v18 = (int16x8_t)vzip2q_s8(v12, v13);
    vst2_s16(a1, v15);
    int16x4x2_t v19 = (int16x8_t *)((char *)a1 + a3);
    *int16x4x2_t v19 = vzip2q_s16((int16x8_t)v15, v17);
    int16x8_t v20 = (__int16 *)((char *)v19->i16 + a3);
    vst2_s16(v20, v16);
    int8x16_t v21 = (int16x8_t *)((char *)v20 + a3);
    *int8x16_t v21 = vzip2q_s16((int16x8_t)v16, v18);
    int16x8_t v22 = a2[2];
    int16x8_t v23 = a2[3];
    *(int8x8_t *)v22.i8 = vqmovn_s16(v22);
    *(int8x8_t *)v23.i8 = vqmovn_s16(v23);
    int8x16_t v24 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v22, v23), v8), v9);
    int8x16_t v25 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), v8);
    int8x16_t v26 = vzip1q_s8(v25, v25);
    int8x16_t v27 = vzip2q_s8(v25, v25);
    int16x4x2_t v28 = (int16x4x2_t)vzip1q_s8(v14, v24);
    int16x4x2_t v29 = (int16x4x2_t)vzip2q_s8(v14, v24);
    int16x8_t v30 = (int16x8_t)vzip1q_s8(v26, v27);
    int16x8_t v31 = (int16x8_t)vzip2q_s8(v26, v27);
    vst2_s16(v5, v28);
    int16x8_t v32 = (int16x8_t *)((char *)v5 + a3);
    *int16x8_t v32 = vzip2q_s16((int16x8_t)v28, v30);
    int16x4x2_t v33 = (__int16 *)((char *)v32->i16 + a3);
    vst2_s16(v33, v29);
    int16x4x2_t v34 = (int16x8_t *)((char *)v33 + a3);
    double result = vzip2q_s16((int16x8_t)v29, v31);
    int16x8_t *v34 = result;
  }
  else if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v60 = *a2;
      int16x8_t v61 = a2[1];
      *(int8x8_t *)v60.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v61.i8 = vqmovn_s16(v61);
      v62.i64[0] = 0x8080808080808080;
      v62.i64[1] = 0x8080808080808080;
      v63.i64[0] = 0x1010101010101010;
      v63.i64[1] = 0x1010101010101010;
      int8x16_t v64 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v60, v61), v62), v63);
      int8x16_t v65 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v62);
      int8x16_t v66 = vzip1q_s8(v65, v65);
      int8x16_t v67 = vzip2q_s8(v65, v65);
      v68.i64[0] = -1;
      v68.i64[1] = -1;
      double result = (int16x8_t)vzip1q_s8(v68, v64);
      int16x8_t v69 = (int16x8_t)vzip1q_s8(v66, v67);
      vst2_s16(a1, (int16x4x2_t)result);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          double result = vzip2q_s16(result, v69);
          *(int16x8_t *)((char *)a1 + a3) = result;
        }
      }
      else
      {
        int16x8_t v70 = (int16x8_t)vzip2q_s8(v66, v67);
        int16x4x2_t v71 = (int16x4x2_t)vzip2q_s8(v68, v64);
        double result = vzip2q_s16(result, v69);
        *(int16x8_t *)((char *)a1 + a3) = result;
        int8x16_t v72 = (__int16 *)((char *)a1 + a3 + a3);
        vst2_s16(v72, v71);
        if (a4 == 4)
        {
          double result = vzip2q_s16((int16x8_t)v71, v70);
          *(int16x8_t *)((char *)v72 + a3) = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v35 = *a2;
    int16x8_t v36 = a2[1];
    *(int8x8_t *)v35.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v36.i8 = vqmovn_s16(v36);
    v37.i64[0] = 0x8080808080808080;
    v37.i64[1] = 0x8080808080808080;
    v38.i64[0] = 0x1010101010101010;
    v38.i64[1] = 0x1010101010101010;
    int8x16_t v39 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v35, v36), v37), v38);
    int8x16_t v40 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v37);
    int8x16_t v41 = vzip1q_s8(v40, v40);
    int8x16_t v42 = vzip2q_s8(v40, v40);
    result.i64[0] = -1;
    result.i64[1] = -1;
    int16x4x2_t v43 = (int16x4x2_t)vzip1q_s8((int8x16_t)result, v39);
    int16x4x2_t v44 = (int16x4x2_t)vzip2q_s8((int8x16_t)result, v39);
    int16x8_t v45 = (int16x8_t)vzip1q_s8(v41, v42);
    int16x8_t v46 = (int16x8_t)vzip2q_s8(v41, v42);
    vst2_s16(a1, v43);
    int8x16_t v47 = (int16x8_t *)((char *)a1 + a3);
    int16x8_t *v47 = vzip2q_s16((int16x8_t)v43, v45);
    uint8x16_t v48 = (__int16 *)((char *)v47->i16 + a3);
    vst2_s16(v48, v44);
    int8x16_t v49 = (int16x8_t *)((char *)v48 + a3);
    *int8x16_t v49 = vzip2q_s16((int16x8_t)v44, v46);
    int16x8_t v50 = a2[2];
    int16x8_t v51 = a2[3];
    *(int8x8_t *)v50.i8 = vqmovn_s16(v50);
    *(int8x8_t *)v51.i8 = vqmovn_s16(v51);
    int8x16_t v52 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v50, v51), v37), v38);
    int8x16_t v53 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), v37);
    int8x16_t v54 = vzip1q_s8(v53, v53);
    int8x16_t v55 = vzip2q_s8(v53, v53);
    int16x4x2_t v56 = (int16x4x2_t)vzip1q_s8((int8x16_t)result, v52);
    int16x8_t v57 = (int16x8_t)vzip1q_s8(v54, v55);
    vst2_s16(v5, v56);
    if (a4 < 7)
    {
      if (a4 == 6)
      {
        double result = vzip2q_s16((int16x8_t)v56, v57);
        *(int16x8_t *)((char *)v5 + a3) = result;
      }
    }
    else
    {
      v73.val[1] = (int16x4_t)vzip2q_s8(v54, v55).u64[0];
      v73.val[0] = (int16x4_t)vzip2q_s8((int8x16_t)result, v52).u64[0];
      unsigned int v58 = (int16x8_t *)((char *)v5 + a3);
      double result = vzip2q_s16((int16x8_t)v56, v57);
      *unsigned int v58 = result;
      int32x4_t v59 = (__int16 *)((char *)v58->i16 + a3);
      vst2_s16(v59, v73);
    }
  }
  return result;
}

int16x8_t from_422_to_r408<2,4,(AlphaOutputMethod)2,true>(__int16 *a1, int16x8_t *a2, int a3, int a4, int16x8_t result)
{
  uint64_t v5 = &a1[2 * a3];
  if (a4 == 8)
  {
    int16x8_t v6 = *a2;
    int16x8_t v7 = a2[1];
    *(int8x8_t *)v6.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v7.i8 = vqmovn_s16(v7);
    v8.i64[0] = 0x8080808080808080;
    v8.i64[1] = 0x8080808080808080;
    v9.i64[0] = 0x1010101010101010;
    v9.i64[1] = 0x1010101010101010;
    int8x16_t v10 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v6, v7), v8), v9);
    int8x16_t v11 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v8);
    int8x16_t v12 = vzip1q_s8(v11, v11);
    int8x16_t v13 = vzip2q_s8(v11, v11);
    v14.i64[0] = -1;
    v14.i64[1] = -1;
    int16x4x2_t v15 = (int16x4x2_t)vzip1q_s8(v14, v10);
    int16x4x2_t v16 = (int16x4x2_t)vzip2q_s8(v14, v10);
    int16x8_t v17 = (int16x8_t)vzip1q_s8(v12, v13);
    int16x8_t v18 = (int16x8_t)vzip2q_s8(v12, v13);
    vst2_s16(a1, v15);
    int16x4x2_t v19 = (int16x8_t *)((char *)a1 + a3);
    *int16x4x2_t v19 = vzip2q_s16((int16x8_t)v15, v17);
    int16x8_t v20 = (__int16 *)((char *)v19->i16 + a3);
    vst2_s16(v20, v16);
    int8x16_t v21 = (int16x8_t *)((char *)v20 + a3);
    *int8x16_t v21 = vzip2q_s16((int16x8_t)v16, v18);
    int16x8_t v22 = a2[2];
    int16x8_t v23 = a2[3];
    *(int8x8_t *)v22.i8 = vqmovn_s16(v22);
    *(int8x8_t *)v23.i8 = vqmovn_s16(v23);
    int8x16_t v24 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v22, v23), v8), v9);
    int8x16_t v25 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), v8);
    int8x16_t v26 = vzip1q_s8(v25, v25);
    int8x16_t v27 = vzip2q_s8(v25, v25);
    int16x4x2_t v28 = (int16x4x2_t)vzip1q_s8(v14, v24);
    int16x4x2_t v29 = (int16x4x2_t)vzip2q_s8(v14, v24);
    int16x8_t v30 = (int16x8_t)vzip1q_s8(v26, v27);
    int16x8_t v31 = (int16x8_t)vzip2q_s8(v26, v27);
    vst2_s16(v5, v28);
    int16x8_t v32 = (int16x8_t *)((char *)v5 + a3);
    *int16x8_t v32 = vzip2q_s16((int16x8_t)v28, v30);
    int16x4x2_t v33 = (__int16 *)((char *)v32->i16 + a3);
    vst2_s16(v33, v29);
    int16x4x2_t v34 = (int16x8_t *)((char *)v33 + a3);
    double result = vzip2q_s16((int16x8_t)v29, v31);
    int16x8_t *v34 = result;
  }
  else if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v60 = *a2;
      int16x8_t v61 = a2[1];
      *(int8x8_t *)v60.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v61.i8 = vqmovn_s16(v61);
      v62.i64[0] = 0x8080808080808080;
      v62.i64[1] = 0x8080808080808080;
      v63.i64[0] = 0x1010101010101010;
      v63.i64[1] = 0x1010101010101010;
      int8x16_t v64 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v60, v61), v62), v63);
      int8x16_t v65 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v62);
      int8x16_t v66 = vzip1q_s8(v65, v65);
      int8x16_t v67 = vzip2q_s8(v65, v65);
      v68.i64[0] = -1;
      v68.i64[1] = -1;
      double result = (int16x8_t)vzip1q_s8(v68, v64);
      int16x8_t v69 = (int16x8_t)vzip1q_s8(v66, v67);
      vst2_s16(a1, (int16x4x2_t)result);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          double result = vzip2q_s16(result, v69);
          *(int16x8_t *)((char *)a1 + a3) = result;
        }
      }
      else
      {
        int16x8_t v70 = (int16x8_t)vzip2q_s8(v66, v67);
        int16x4x2_t v71 = (int16x4x2_t)vzip2q_s8(v68, v64);
        double result = vzip2q_s16(result, v69);
        *(int16x8_t *)((char *)a1 + a3) = result;
        int8x16_t v72 = (__int16 *)((char *)a1 + a3 + a3);
        vst2_s16(v72, v71);
        if (a4 == 4)
        {
          double result = vzip2q_s16((int16x8_t)v71, v70);
          *(int16x8_t *)((char *)v72 + a3) = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v35 = *a2;
    int16x8_t v36 = a2[1];
    *(int8x8_t *)v35.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v36.i8 = vqmovn_s16(v36);
    v37.i64[0] = 0x8080808080808080;
    v37.i64[1] = 0x8080808080808080;
    v38.i64[0] = 0x1010101010101010;
    v38.i64[1] = 0x1010101010101010;
    int8x16_t v39 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v35, v36), v37), v38);
    int8x16_t v40 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[5]), v37);
    int8x16_t v41 = vzip1q_s8(v40, v40);
    int8x16_t v42 = vzip2q_s8(v40, v40);
    result.i64[0] = -1;
    result.i64[1] = -1;
    int16x4x2_t v43 = (int16x4x2_t)vzip1q_s8((int8x16_t)result, v39);
    int16x4x2_t v44 = (int16x4x2_t)vzip2q_s8((int8x16_t)result, v39);
    int16x8_t v45 = (int16x8_t)vzip1q_s8(v41, v42);
    int16x8_t v46 = (int16x8_t)vzip2q_s8(v41, v42);
    vst2_s16(a1, v43);
    int8x16_t v47 = (int16x8_t *)((char *)a1 + a3);
    int16x8_t *v47 = vzip2q_s16((int16x8_t)v43, v45);
    uint8x16_t v48 = (__int16 *)((char *)v47->i16 + a3);
    vst2_s16(v48, v44);
    int8x16_t v49 = (int16x8_t *)((char *)v48 + a3);
    *int8x16_t v49 = vzip2q_s16((int16x8_t)v44, v46);
    int16x8_t v50 = a2[2];
    int16x8_t v51 = a2[3];
    *(int8x8_t *)v50.i8 = vqmovn_s16(v50);
    *(int8x8_t *)v51.i8 = vqmovn_s16(v51);
    int8x16_t v52 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v50, v51), v37), v38);
    int8x16_t v53 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[7]), v37);
    int8x16_t v54 = vzip1q_s8(v53, v53);
    int8x16_t v55 = vzip2q_s8(v53, v53);
    int16x4x2_t v56 = (int16x4x2_t)vzip1q_s8((int8x16_t)result, v52);
    int16x8_t v57 = (int16x8_t)vzip1q_s8(v54, v55);
    vst2_s16(v5, v56);
    if (a4 < 7)
    {
      if (a4 == 6)
      {
        double result = vzip2q_s16((int16x8_t)v56, v57);
        *(int16x8_t *)((char *)v5 + a3) = result;
      }
    }
    else
    {
      v73.val[1] = (int16x4_t)vzip2q_s8(v54, v55).u64[0];
      v73.val[0] = (int16x4_t)vzip2q_s8((int8x16_t)result, v52).u64[0];
      unsigned int v58 = (int16x8_t *)((char *)v5 + a3);
      double result = vzip2q_s16((int16x8_t)v56, v57);
      *unsigned int v58 = result;
      int32x4_t v59 = (__int16 *)((char *)v58->i16 + a3);
      vst2_s16(v59, v73);
    }
  }
  return result;
}

void from_422_to_r408<2,2,(AlphaOutputMethod)2,false>(__int16 *a1, uint64_t a2, int a3, int a4)
{
  v4.i64[0] = 0x8080808080808080;
  v4.i64[1] = 0x8080808080808080;
  v5.i64[0] = 0x1010101010101010;
  v5.i64[1] = 0x1010101010101010;
  int8x16_t v6 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v4), v5);
  int32x4_t v7 = (int32x4_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48)), v4);
  int8x16_t v8 = (int8x16_t)vuzp1q_s32(v7, vrev64q_s32(v7));
  int8x16_t v9 = vzip1q_s8(v8, v8);
  int8x16_t v10 = vzip2q_s8(v8, v8);
  v8.i64[0] = -1;
  v8.i64[1] = -1;
  int16x4x2_t v11 = (int16x4x2_t)vzip1q_s8(v8, v6);
  int16x4x2_t v12 = (int16x4x2_t)vzip2q_s8(v8, v6);
  int16x8_t v13 = (int16x8_t)vzip1q_s8(v9, v10);
  int16x8_t v14 = (int16x8_t)vzip2q_s8(v9, v10);
  if (a4 == 4)
  {
    uint64_t v15 = a3;
    vst2_s16(a1, v11);
    int16x4x2_t v16 = (int16x8_t *)((char *)a1 + v15);
    int16x8_t *v16 = vzip2q_s16((int16x8_t)v11, v13);
    int16x8_t v17 = (__int16 *)((char *)v16->i16 + a3);
    vst2_s16(v17, v12);
    int16x8_t v18 = (int16x8_t *)((char *)v17 + v15);
    int16x8_t *v18 = vzip2q_s16((int16x8_t)v12, v14);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v11);
    }
  }
  else
  {
    uint64_t v19 = a3;
    vst2_s16(a1, v11);
    int16x8_t v20 = (int16x8_t *)((char *)a1 + v19);
    *int16x8_t v20 = vzip2q_s16((int16x8_t)v11, v13);
    if (a4 == 3)
    {
      int8x16_t v21 = (__int16 *)((char *)v20->i16 + a3);
      vst2_s16(v21, v12);
    }
  }
}

void from_422_to_r408<2,2,(AlphaOutputMethod)2,true>(__int16 *a1, uint64_t a2, int a3, int a4)
{
  v4.i64[0] = 0x8080808080808080;
  v4.i64[1] = 0x8080808080808080;
  v5.i64[0] = 0x1010101010101010;
  v5.i64[1] = 0x1010101010101010;
  int8x16_t v6 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v4), v5);
  int32x4_t v7 = (int32x4_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48)), v4);
  int8x16_t v8 = (int8x16_t)vuzp1q_s32(v7, vrev64q_s32(v7));
  int8x16_t v9 = vzip1q_s8(v8, v8);
  int8x16_t v10 = vzip2q_s8(v8, v8);
  v8.i64[0] = -1;
  v8.i64[1] = -1;
  int16x4x2_t v11 = (int16x4x2_t)vzip1q_s8(v8, v6);
  int16x4x2_t v12 = (int16x4x2_t)vzip2q_s8(v8, v6);
  int16x8_t v13 = (int16x8_t)vzip1q_s8(v9, v10);
  int16x8_t v14 = (int16x8_t)vzip2q_s8(v9, v10);
  if (a4 == 4)
  {
    uint64_t v15 = a3;
    vst2_s16(a1, v11);
    int16x4x2_t v16 = (int16x8_t *)((char *)a1 + v15);
    int16x8_t *v16 = vzip2q_s16((int16x8_t)v11, v13);
    int16x8_t v17 = (__int16 *)((char *)v16->i16 + a3);
    vst2_s16(v17, v12);
    int16x8_t v18 = (int16x8_t *)((char *)v17 + v15);
    int16x8_t *v18 = vzip2q_s16((int16x8_t)v12, v14);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v11);
    }
  }
  else
  {
    uint64_t v19 = a3;
    vst2_s16(a1, v11);
    int16x8_t v20 = (int16x8_t *)((char *)a1 + v19);
    *int16x8_t v20 = vzip2q_s16((int16x8_t)v11, v13);
    if (a4 == 3)
    {
      int8x16_t v21 = (__int16 *)((char *)v20->i16 + a3);
      vst2_s16(v21, v12);
    }
  }
}

unsigned char *from_422_to_r408<2,1,(AlphaOutputMethod)2,false>(unsigned char *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2, 1);
}

unsigned char *from_422_to_r408<2,1,(AlphaOutputMethod)2,true>(unsigned char *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2, 1);
}

unsigned char *from_422_to_r408<1,2,(AlphaOutputMethod)2,false>(unsigned char *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1, 2);
}

unsigned char *from_422_to_r408<1,2,(AlphaOutputMethod)2,true>(unsigned char *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1, 2);
}

unsigned char *from_422_to_r408<1,1,(AlphaOutputMethod)2,false>(unsigned char *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1, 1);
}

unsigned char *from_422_to_r408<1,1,(AlphaOutputMethod)2,true>(unsigned char *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1, 1);
}

int8x16_t *from_422_to_v408<8,8,(AlphaOutputMethod)1,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v35 = a2 + 8;
    int16x8_t v36 = a2 + 32;
    int8x16_t v37 = a2 + 40;
    int v39 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  v9.i64[0] = 0x101010101010101;
  v9.i64[1] = 0x101010101010101;
  v10.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v10.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int16x4x2_t v11 = (char *)result;
  do
  {
    int16x4x2_t v12 = a2 + 1;
    int16x8_t v13 = (int8x16_t *)((char *)result + 8 * a3);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v8), v9), v10);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v8), v9), v10);
    int8x16_t v16 = vzip1q_s8(v15, v15);
    int8x16_t v17 = vzip2q_s8(v15, v15);
    int8x16_t v18 = vzip1q_s8(v14, *a5);
    int8x16_t v19 = vzip2q_s8(v14, *a5);
    int8x16_t v20 = vzip1q_s8(v16, v17);
    vst2_s8(v11, *(int8x8x2_t *)((char *)&v18 - 8));
    v11 += a3;
    int8x16_t v21 = vzip2q_s8(v16, v17);
    result[1] = vzip2q_s8(v20, v18);
    i8 = result[2].i8;
    vst2_s8(i8, *(int8x8x2_t *)((char *)&v19 - 8));
    result[3] = vzip2q_s8(v21, v19);
    double result = (int8x16_t *)v11;
    int8x16_t v23 = *(int8x16_t *)((char *)a5 + 8 * a6);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v24 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v8), v9), v10);
    int8x16_t v25 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v8), v9), v10);
    int8x16_t v26 = vzip1q_s8(v25, v25);
    int8x16_t v27 = vzip2q_s8(v25, v25);
    int8x16_t v28 = vzip1q_s8(v24, v23);
    int8x16_t v29 = vzip2q_s8(v24, v23);
    int8x16_t v30 = vzip1q_s8(v26, v27);
    int8x16_t v31 = vzip2q_s8(v26, v27);
    int16x8_t v32 = (char *)v13;
    vst2_s8(v32, *(int8x8x2_t *)((char *)&v28 - 8));
    v32 += 16;
    *(int8x16_t *)int16x8_t v32 = vzip2q_s8(v30, v28);
    int16x4x2_t v33 = v13[2].i8;
    vst2_s8(v33, *(int8x8x2_t *)((char *)&v29 - 8));
    v13[3] = vzip2q_s8(v31, v29);
    int v34 = v7 - 1;
    LODWORD(v33) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v33 > 1);
  int16x8_t v35 = v12 + 8;
  int16x8_t v36 = v12 + 32;
  int8x16_t v37 = v12 + 40;
  if (a4 <= 8) {
    int v38 = 8;
  }
  else {
    int v38 = a4;
  }
  int v39 = v34 - v38;
  a2 = v12;
  if (v34 - v38 >= 1)
  {
LABEL_13:
    int8x16_t v40 = result + 2;
    unsigned int v41 = v39 + 1;
    v42.i64[0] = 0x8080808080808080;
    v42.i64[1] = 0x8080808080808080;
    v43.i64[0] = 0x101010101010101;
    v43.i64[1] = 0x101010101010101;
    v44.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v44.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int16x8_t v45 = result[2].i8;
    do
    {
      int16x8_t v46 = *a2++;
      int16x8_t v47 = v46;
      uint8x16_t v48 = v40[-2].i8;
      int16x8_t v49 = *v35++;
      int8x16_t v50 = vqmovn_high_s16(vqmovn_s16(v47), v49);
      int16x8_t v51 = *v36++;
      int16x8_t v52 = v51;
      int16x8_t v53 = *v37++;
      int8x16_t v54 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v50, v42), v43), v44);
      int8x16_t v55 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v52), v53), v42), v43), v44);
      int8x16_t v56 = vzip1q_s8(v55, v55);
      int8x16_t v57 = vzip2q_s8(v55, v55);
      int8x16_t v58 = vzip1q_s8(v54, *a5);
      int8x16_t v59 = vzip2q_s8(v54, *a5);
      int8x16_t v60 = vzip1q_s8(v56, v57);
      vst2_s8(v48, *(int8x8x2_t *)((char *)&v58 - 8));
      int8x16_t v61 = vzip2q_s8(v56, v57);
      v40[-1] = vzip2q_s8(v60, v58);
      vst2_s8(v45, *(int8x8x2_t *)((char *)&v59 - 8));
      v45 += a3;
      v40[1] = vzip2q_s8(v61, v59);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v41;
      int8x16_t v40 = (int8x16_t *)v45;
    }
    while (v41 > 1);
  }
  return result;
}

int8x16_t *from_422_to_v408<8,8,(AlphaOutputMethod)1,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v35 = a2 + 8;
    int16x8_t v36 = a2 + 32;
    int8x16_t v37 = a2 + 40;
    int v39 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  v9.i64[0] = 0x101010101010101;
  v9.i64[1] = 0x101010101010101;
  v10.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v10.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int16x4x2_t v11 = (char *)result;
  do
  {
    int16x4x2_t v12 = a2 + 1;
    int16x8_t v13 = (int8x16_t *)((char *)result + 8 * a3);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v8), v9), v10);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v8), v9), v10);
    int8x16_t v16 = vzip1q_s8(v15, v15);
    int8x16_t v17 = vzip2q_s8(v15, v15);
    int8x16_t v18 = vzip1q_s8(v14, *a5);
    int8x16_t v19 = vzip2q_s8(v14, *a5);
    int8x16_t v20 = vzip1q_s8(v16, v17);
    vst2_s8(v11, *(int8x8x2_t *)((char *)&v18 - 8));
    v11 += a3;
    int8x16_t v21 = vzip2q_s8(v16, v17);
    result[1] = vzip2q_s8(v20, v18);
    i8 = result[2].i8;
    vst2_s8(i8, *(int8x8x2_t *)((char *)&v19 - 8));
    result[3] = vzip2q_s8(v21, v19);
    double result = (int8x16_t *)v11;
    int8x16_t v23 = *(int8x16_t *)((char *)a5 + 8 * a6);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v24 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v8), v9), v10);
    int8x16_t v25 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v8), v9), v10);
    int8x16_t v26 = vzip1q_s8(v25, v25);
    int8x16_t v27 = vzip2q_s8(v25, v25);
    int8x16_t v28 = vzip1q_s8(v24, v23);
    int8x16_t v29 = vzip2q_s8(v24, v23);
    int8x16_t v30 = vzip1q_s8(v26, v27);
    int8x16_t v31 = vzip2q_s8(v26, v27);
    int16x8_t v32 = (char *)v13;
    vst2_s8(v32, *(int8x8x2_t *)((char *)&v28 - 8));
    v32 += 16;
    *(int8x16_t *)int16x8_t v32 = vzip2q_s8(v30, v28);
    int16x4x2_t v33 = v13[2].i8;
    vst2_s8(v33, *(int8x8x2_t *)((char *)&v29 - 8));
    v13[3] = vzip2q_s8(v31, v29);
    int v34 = v7 - 1;
    LODWORD(v33) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v33 > 1);
  int16x8_t v35 = v12 + 8;
  int16x8_t v36 = v12 + 32;
  int8x16_t v37 = v12 + 40;
  if (a4 <= 8) {
    int v38 = 8;
  }
  else {
    int v38 = a4;
  }
  int v39 = v34 - v38;
  a2 = v12;
  if (v34 - v38 >= 1)
  {
LABEL_13:
    int8x16_t v40 = result + 2;
    unsigned int v41 = v39 + 1;
    v42.i64[0] = 0x8080808080808080;
    v42.i64[1] = 0x8080808080808080;
    v43.i64[0] = 0x101010101010101;
    v43.i64[1] = 0x101010101010101;
    v44.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v44.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int16x8_t v45 = result[2].i8;
    do
    {
      int16x8_t v46 = *a2++;
      int16x8_t v47 = v46;
      uint8x16_t v48 = v40[-2].i8;
      int16x8_t v49 = *v35++;
      int8x16_t v50 = vqmovn_high_s16(vqmovn_s16(v47), v49);
      int16x8_t v51 = *v36++;
      int16x8_t v52 = v51;
      int16x8_t v53 = *v37++;
      int8x16_t v54 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v50, v42), v43), v44);
      int8x16_t v55 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v52), v53), v42), v43), v44);
      int8x16_t v56 = vzip1q_s8(v55, v55);
      int8x16_t v57 = vzip2q_s8(v55, v55);
      int8x16_t v58 = vzip1q_s8(v54, *a5);
      int8x16_t v59 = vzip2q_s8(v54, *a5);
      int8x16_t v60 = vzip1q_s8(v56, v57);
      vst2_s8(v48, *(int8x8x2_t *)((char *)&v58 - 8));
      int8x16_t v61 = vzip2q_s8(v56, v57);
      v40[-1] = vzip2q_s8(v60, v58);
      vst2_s8(v45, *(int8x8x2_t *)((char *)&v59 - 8));
      v45 += a3;
      v40[1] = vzip2q_s8(v61, v59);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v41;
      int8x16_t v40 = (int8x16_t *)v45;
    }
    while (v41 > 1);
  }
  return result;
}

int8x16_t *from_422_to_v408<8,8,(AlphaOutputMethod)2,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int16x4x2_t v33 = a2 + 8;
    int v34 = a2 + 32;
    int16x8_t v35 = a2 + 40;
    int v37 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  v9.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v9.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  uint8x16_t v10 = (char *)result;
  do
  {
    int16x4x2_t v11 = a2 + 1;
    int16x4x2_t v12 = (int8x16_t *)((char *)result + 8 * a3);
    int8x16_t v13 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6), v7), v8);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v6), v7), v8);
    int8x16_t v15 = vzip1q_s8(v14, v14);
    int8x16_t v16 = vzip2q_s8(v14, v14);
    int8x16_t v17 = vzip1q_s8(v13, v9);
    int8x16_t v18 = vzip2q_s8(v13, v9);
    int8x16_t v19 = vzip1q_s8(v15, v16);
    int8x16_t v20 = vzip2q_s8(v15, v16);
    vst2_s8(v10, *(int8x8x2_t *)((char *)&v17 - 8));
    v10 += a3;
    result[1] = vzip2q_s8(v19, v17);
    i8 = result[2].i8;
    vst2_s8(i8, *(int8x8x2_t *)((char *)&v18 - 8));
    result[3] = vzip2q_s8(v20, v18);
    double result = (int8x16_t *)v10;
    int8x16_t v22 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6), v7), v8);
    int8x16_t v23 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v6), v7), v8);
    int8x16_t v24 = vzip1q_s8(v23, v23);
    int8x16_t v25 = vzip2q_s8(v23, v23);
    int8x16_t v26 = vzip1q_s8(v22, v9);
    int8x16_t v27 = vzip2q_s8(v22, v9);
    int8x16_t v28 = vzip1q_s8(v24, v25);
    int8x16_t v29 = vzip2q_s8(v24, v25);
    int8x16_t v30 = (char *)v12;
    vst2_s8(v30, *(int8x8x2_t *)((char *)&v26 - 8));
    v30 += 16;
    *(int8x16_t *)int8x16_t v30 = vzip2q_s8(v28, v26);
    int8x16_t v31 = v12[2].i8;
    vst2_s8(v31, *(int8x8x2_t *)((char *)&v27 - 8));
    v12[3] = vzip2q_s8(v29, v27);
    int v32 = v5 - 1;
    LODWORD(v31) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v31 > 1);
  int16x4x2_t v33 = v11 + 8;
  int v34 = v11 + 32;
  int16x8_t v35 = v11 + 40;
  if (a4 <= 8) {
    int v36 = 8;
  }
  else {
    int v36 = a4;
  }
  int v37 = v32 - v36;
  a2 = v11;
  if (v37 >= 1)
  {
LABEL_13:
    int v38 = result + 2;
    unsigned int v39 = v37 + 1;
    v40.i64[0] = 0x8080808080808080;
    v40.i64[1] = 0x8080808080808080;
    v41.i64[0] = 0x101010101010101;
    v41.i64[1] = 0x101010101010101;
    v42.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v42.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    v43.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
    v43.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
    uint8x16_t v44 = result[2].i8;
    do
    {
      int16x8_t v45 = *a2++;
      int16x8_t v46 = v45;
      int16x8_t v47 = v38[-2].i8;
      int16x8_t v48 = *v33++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v34++;
      int16x8_t v51 = v50;
      int16x8_t v52 = *v35++;
      int8x16_t v53 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v46), v49), v40), v41), v42);
      int8x16_t v54 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v51), v52), v40), v41), v42);
      int8x16_t v55 = vzip1q_s8(v54, v54);
      int8x16_t v56 = vzip2q_s8(v54, v54);
      int8x16_t v57 = vzip1q_s8(v53, v43);
      int8x16_t v58 = vzip2q_s8(v53, v43);
      int8x16_t v59 = vzip1q_s8(v55, v56);
      vst2_s8(v47, *(int8x8x2_t *)((char *)&v57 - 8));
      int8x16_t v60 = vzip2q_s8(v55, v56);
      v38[-1] = vzip2q_s8(v59, v57);
      vst2_s8(v44, *(int8x8x2_t *)((char *)&v58 - 8));
      v44 += a3;
      v38[1] = vzip2q_s8(v60, v58);
      --v39;
      int v38 = (int8x16_t *)v44;
    }
    while (v39 > 1);
  }
  return result;
}

int8x16_t *from_422_to_v408<8,8,(AlphaOutputMethod)2,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int16x4x2_t v33 = a2 + 8;
    int v34 = a2 + 32;
    int16x8_t v35 = a2 + 40;
    int v37 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  v9.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v9.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  uint8x16_t v10 = (char *)result;
  do
  {
    int16x4x2_t v11 = a2 + 1;
    int16x4x2_t v12 = (int8x16_t *)((char *)result + 8 * a3);
    int8x16_t v13 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6), v7), v8);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[40]), v6), v7), v8);
    int8x16_t v15 = vzip1q_s8(v14, v14);
    int8x16_t v16 = vzip2q_s8(v14, v14);
    int8x16_t v17 = vzip1q_s8(v13, v9);
    int8x16_t v18 = vzip2q_s8(v13, v9);
    int8x16_t v19 = vzip1q_s8(v15, v16);
    int8x16_t v20 = vzip2q_s8(v15, v16);
    vst2_s8(v10, *(int8x8x2_t *)((char *)&v17 - 8));
    v10 += a3;
    result[1] = vzip2q_s8(v19, v17);
    i8 = result[2].i8;
    vst2_s8(i8, *(int8x8x2_t *)((char *)&v18 - 8));
    result[3] = vzip2q_s8(v20, v18);
    double result = (int8x16_t *)v10;
    int8x16_t v22 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6), v7), v8);
    int8x16_t v23 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[56]), v6), v7), v8);
    int8x16_t v24 = vzip1q_s8(v23, v23);
    int8x16_t v25 = vzip2q_s8(v23, v23);
    int8x16_t v26 = vzip1q_s8(v22, v9);
    int8x16_t v27 = vzip2q_s8(v22, v9);
    int8x16_t v28 = vzip1q_s8(v24, v25);
    int8x16_t v29 = vzip2q_s8(v24, v25);
    int8x16_t v30 = (char *)v12;
    vst2_s8(v30, *(int8x8x2_t *)((char *)&v26 - 8));
    v30 += 16;
    *(int8x16_t *)int8x16_t v30 = vzip2q_s8(v28, v26);
    int8x16_t v31 = v12[2].i8;
    vst2_s8(v31, *(int8x8x2_t *)((char *)&v27 - 8));
    v12[3] = vzip2q_s8(v29, v27);
    int v32 = v5 - 1;
    LODWORD(v31) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v31 > 1);
  int16x4x2_t v33 = v11 + 8;
  int v34 = v11 + 32;
  int16x8_t v35 = v11 + 40;
  if (a4 <= 8) {
    int v36 = 8;
  }
  else {
    int v36 = a4;
  }
  int v37 = v32 - v36;
  a2 = v11;
  if (v37 >= 1)
  {
LABEL_13:
    int v38 = result + 2;
    unsigned int v39 = v37 + 1;
    v40.i64[0] = 0x8080808080808080;
    v40.i64[1] = 0x8080808080808080;
    v41.i64[0] = 0x101010101010101;
    v41.i64[1] = 0x101010101010101;
    v42.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v42.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    v43.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
    v43.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
    uint8x16_t v44 = result[2].i8;
    do
    {
      int16x8_t v45 = *a2++;
      int16x8_t v46 = v45;
      int16x8_t v47 = v38[-2].i8;
      int16x8_t v48 = *v33++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v34++;
      int16x8_t v51 = v50;
      int16x8_t v52 = *v35++;
      int8x16_t v53 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v46), v49), v40), v41), v42);
      int8x16_t v54 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v51), v52), v40), v41), v42);
      int8x16_t v55 = vzip1q_s8(v54, v54);
      int8x16_t v56 = vzip2q_s8(v54, v54);
      int8x16_t v57 = vzip1q_s8(v53, v43);
      int8x16_t v58 = vzip2q_s8(v53, v43);
      int8x16_t v59 = vzip1q_s8(v55, v56);
      vst2_s8(v47, *(int8x8x2_t *)((char *)&v57 - 8));
      int8x16_t v60 = vzip2q_s8(v55, v56);
      v38[-1] = vzip2q_s8(v59, v57);
      vst2_s8(v44, *(int8x8x2_t *)((char *)&v58 - 8));
      v44 += a3;
      v38[1] = vzip2q_s8(v60, v58);
      --v39;
      int v38 = (int8x16_t *)v44;
    }
    while (v39 > 1);
  }
  return result;
}

int16x8_t *from_422_to_v216_10bits_A<8,8,(AlphaOutputMethod)0,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&_MergedGlobals_5, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v50 = result;
    int v51 = a3;
    int16x8_t v52 = a2;
    int v53 = a4;
    int v54 = __cxa_guard_acquire(&_MergedGlobals_5);
    a4 = v53;
    a2 = v52;
    a3 = v51;
    int v55 = v54;
    double result = v50;
    if (v55)
    {
      *(void *)&long long v56 = 0xFE00FE00FE00FE00;
      *((void *)&v56 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A9967E0 = v56;
      __cxa_guard_release(&_MergedGlobals_5);
      a4 = v53;
      a2 = v52;
      a3 = v51;
      double result = v50;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996468, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v57 = result;
    int v58 = a3;
    int8x16_t v59 = a2;
    int v60 = a4;
    int v61 = __cxa_guard_acquire(&qword_26A996468);
    a4 = v60;
    a2 = v59;
    a3 = v58;
    int v62 = v61;
    double result = v57;
    if (v62)
    {
      *(void *)&long long v63 = 0xFE00FE00FE00FE00;
      *((void *)&v63 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A9967F0 = v63;
      __cxa_guard_release(&qword_26A996468);
      a4 = v60;
      a2 = v59;
      a3 = v58;
      double result = v57;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996470, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v64 = result;
    int v65 = a3;
    int8x16_t v66 = a2;
    int v67 = a4;
    int v68 = __cxa_guard_acquire(&qword_26A996470);
    a4 = v67;
    a2 = v66;
    a3 = v65;
    int v69 = v68;
    double result = v64;
    if (v69)
    {
      xmmword_26A996800 = (__int128)vdupq_n_s16(0xFE04u);
      __cxa_guard_release(&qword_26A996470);
      a4 = v67;
      a2 = v66;
      a3 = v65;
      double result = v64;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996478, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v70 = result;
    int v71 = a3;
    int8x16_t v72 = a2;
    int v73 = a4;
    int v74 = __cxa_guard_acquire(&qword_26A996478);
    a4 = v73;
    a2 = v72;
    a3 = v71;
    int v75 = v74;
    double result = v70;
    if (v75)
    {
      xmmword_26A996810 = (__int128)vdupq_n_s16(0x1FBu);
      __cxa_guard_release(&qword_26A996478);
      a4 = v73;
      a2 = v72;
      a3 = v71;
      double result = v70;
    }
  }
  int16x8_t v4 = (int16x8_t)xmmword_26A996800;
  int16x8_t v5 = (int16x8_t)xmmword_26A996810;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int v32 = a2 + 8;
    int16x4x2_t v33 = a2 + 32;
    int v34 = a2 + 40;
    int v31 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_17;
  }
  uint8x16_t v7 = a2 + 56;
  int v8 = a4 + 8;
  v9.i64[0] = 0x8000800080008000;
  v9.i64[1] = 0x8000800080008000;
  uint8x16_t v10 = (__int16 *)result;
  do
  {
    int16x4x2_t v11 = (int16x8_t *)((char *)result + 8 * a3);
    int16x8_t v12 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-56], v4), v5), 6uLL), v9);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-48], v4), v5), 6uLL), v9);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-24], v4), v5), 6uLL), v9);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-16], v4), v5), 6uLL), v9);
    int16x8_t v16 = vzip1q_s16(v14, v15);
    vst2_s16(v10, *(int16x4x2_t *)((char *)&v12 - 8));
    uint8x16_t v10 = (__int16 *)((char *)v10 + a3);
    int16x8_t v17 = vzip2q_s16(v14, v15);
    result[1] = vzip2q_s16(v16, v12);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v13 - 8));
    result[3] = vzip2q_s16(v17, v13);
    double result = (int16x8_t *)v10;
    int16x8_t v19 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-40], v4), v5), 6uLL), v9);
    int16x8_t v20 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-32], v4), v5), 6uLL), v9);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-8], v4), v5), 6uLL), v9);
    int8x16_t v22 = v7 + 1;
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*v7, v4), v5), 6uLL), v9);
    int16x8_t v24 = vzip1q_s16(v21, v23);
    int16x8_t v25 = vzip2q_s16(v21, v23);
    int8x16_t v26 = (__int16 *)v11;
    vst2_s16(v26, *(int16x4x2_t *)((char *)&v19 - 8));
    v26 += 8;
    *(int16x8_t *)int8x16_t v26 = vzip2q_s16(v24, v19);
    int8x16_t v27 = v11[2].i16;
    vst2_s16(v27, *(int16x4x2_t *)((char *)&v20 - 8));
    v11[3] = vzip2q_s16(v25, v20);
    int v28 = v8 - 1;
    int v29 = v8 - 16;
    --v8;
    uint8x16_t v7 = v22;
  }
  while (v29 > 1);
  if (a4 <= 8) {
    int v30 = 8;
  }
  else {
    int v30 = a4;
  }
  int v31 = v28 - v30;
  a2 = v22 - 56;
  int v32 = v22 - 48;
  int16x4x2_t v33 = v22 - 24;
  int v34 = v22 - 16;
  if (v31 >= 1)
  {
LABEL_17:
    unsigned int v35 = v31 + 1;
    int v36 = result + 2;
    v37.i64[0] = 0x8000800080008000;
    v37.i64[1] = 0x8000800080008000;
    int v38 = result[2].i16;
    do
    {
      unsigned int v39 = v36[-2].i16;
      int16x8_t v40 = *a2++;
      int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v40, v4), v5), 6uLL), v37);
      int16x8_t v42 = *v32++;
      int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v42, v4), v5), 6uLL), v37);
      int16x8_t v44 = *v33++;
      int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v44, v4), v5), 6uLL), v37);
      int16x8_t v46 = *v34++;
      int16x8_t v47 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v46, v4), v5), 6uLL), v37);
      int16x8_t v48 = vzip1q_s16(v45, v47);
      vst2_s16(v39, *(int16x4x2_t *)((char *)&v41 - 8));
      int16x8_t v49 = vzip2q_s16(v45, v47);
      v36[-1] = vzip2q_s16(v48, v41);
      vst2_s16(v38, *(int16x4x2_t *)((char *)&v43 - 8));
      int v38 = (__int16 *)((char *)v38 + a3);
      v36[1] = vzip2q_s16(v49, v43);
      --v35;
      int v36 = (int16x8_t *)v38;
    }
    while (v35 > 1);
  }
  return result;
}

int16x8_t *from_422_to_v216_10bits_A<8,8,(AlphaOutputMethod)0,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996480, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v50 = result;
    int v51 = a3;
    int16x8_t v52 = a2;
    int v53 = a4;
    int v54 = __cxa_guard_acquire(&qword_26A996480);
    a4 = v53;
    a2 = v52;
    a3 = v51;
    int v55 = v54;
    double result = v50;
    if (v55)
    {
      *(void *)&long long v56 = 0xFE00FE00FE00FE00;
      *((void *)&v56 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996820 = v56;
      __cxa_guard_release(&qword_26A996480);
      a4 = v53;
      a2 = v52;
      a3 = v51;
      double result = v50;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996488, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v57 = result;
    int v58 = a3;
    int8x16_t v59 = a2;
    int v60 = a4;
    int v61 = __cxa_guard_acquire(&qword_26A996488);
    a4 = v60;
    a2 = v59;
    a3 = v58;
    int v62 = v61;
    double result = v57;
    if (v62)
    {
      *(void *)&long long v63 = 0xFE00FE00FE00FE00;
      *((void *)&v63 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996830 = v63;
      __cxa_guard_release(&qword_26A996488);
      a4 = v60;
      a2 = v59;
      a3 = v58;
      double result = v57;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996490, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v64 = result;
    int v65 = a3;
    int8x16_t v66 = a2;
    int v67 = a4;
    int v68 = __cxa_guard_acquire(&qword_26A996490);
    a4 = v67;
    a2 = v66;
    a3 = v65;
    int v69 = v68;
    double result = v64;
    if (v69)
    {
      xmmword_26A996840 = (__int128)vdupq_n_s16(0xFE04u);
      __cxa_guard_release(&qword_26A996490);
      a4 = v67;
      a2 = v66;
      a3 = v65;
      double result = v64;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996498, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v70 = result;
    int v71 = a3;
    int8x16_t v72 = a2;
    int v73 = a4;
    int v74 = __cxa_guard_acquire(&qword_26A996498);
    a4 = v73;
    a2 = v72;
    a3 = v71;
    int v75 = v74;
    double result = v70;
    if (v75)
    {
      xmmword_26A996850 = (__int128)vdupq_n_s16(0x1FBu);
      __cxa_guard_release(&qword_26A996498);
      a4 = v73;
      a2 = v72;
      a3 = v71;
      double result = v70;
    }
  }
  int16x8_t v4 = (int16x8_t)xmmword_26A996840;
  int16x8_t v5 = (int16x8_t)xmmword_26A996850;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int v32 = a2 + 8;
    int16x4x2_t v33 = a2 + 32;
    int v34 = a2 + 40;
    int v31 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_17;
  }
  uint8x16_t v7 = a2 + 56;
  int v8 = a4 + 8;
  v9.i64[0] = 0x8000800080008000;
  v9.i64[1] = 0x8000800080008000;
  uint8x16_t v10 = (__int16 *)result;
  do
  {
    int16x4x2_t v11 = (int16x8_t *)((char *)result + 8 * a3);
    int16x8_t v12 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-56], v4), v5), 6uLL), v9);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-48], v4), v5), 6uLL), v9);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-24], v4), v5), 6uLL), v9);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-16], v4), v5), 6uLL), v9);
    int16x8_t v16 = vzip1q_s16(v14, v15);
    vst2_s16(v10, *(int16x4x2_t *)((char *)&v12 - 8));
    uint8x16_t v10 = (__int16 *)((char *)v10 + a3);
    int16x8_t v17 = vzip2q_s16(v14, v15);
    result[1] = vzip2q_s16(v16, v12);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v13 - 8));
    result[3] = vzip2q_s16(v17, v13);
    double result = (int16x8_t *)v10;
    int16x8_t v19 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-40], v4), v5), 6uLL), v9);
    int16x8_t v20 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-32], v4), v5), 6uLL), v9);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-8], v4), v5), 6uLL), v9);
    int8x16_t v22 = v7 + 1;
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*v7, v4), v5), 6uLL), v9);
    int16x8_t v24 = vzip1q_s16(v21, v23);
    int16x8_t v25 = vzip2q_s16(v21, v23);
    int8x16_t v26 = (__int16 *)v11;
    vst2_s16(v26, *(int16x4x2_t *)((char *)&v19 - 8));
    v26 += 8;
    *(int16x8_t *)int8x16_t v26 = vzip2q_s16(v24, v19);
    int8x16_t v27 = v11[2].i16;
    vst2_s16(v27, *(int16x4x2_t *)((char *)&v20 - 8));
    v11[3] = vzip2q_s16(v25, v20);
    int v28 = v8 - 1;
    int v29 = v8 - 16;
    --v8;
    uint8x16_t v7 = v22;
  }
  while (v29 > 1);
  if (a4 <= 8) {
    int v30 = 8;
  }
  else {
    int v30 = a4;
  }
  int v31 = v28 - v30;
  a2 = v22 - 56;
  int v32 = v22 - 48;
  int16x4x2_t v33 = v22 - 24;
  int v34 = v22 - 16;
  if (v31 >= 1)
  {
LABEL_17:
    unsigned int v35 = v31 + 1;
    int v36 = result + 2;
    v37.i64[0] = 0x8000800080008000;
    v37.i64[1] = 0x8000800080008000;
    int v38 = result[2].i16;
    do
    {
      unsigned int v39 = v36[-2].i16;
      int16x8_t v40 = *a2++;
      int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v40, v4), v5), 6uLL), v37);
      int16x8_t v42 = *v32++;
      int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v42, v4), v5), 6uLL), v37);
      int16x8_t v44 = *v33++;
      int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v44, v4), v5), 6uLL), v37);
      int16x8_t v46 = *v34++;
      int16x8_t v47 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v46, v4), v5), 6uLL), v37);
      int16x8_t v48 = vzip1q_s16(v45, v47);
      vst2_s16(v39, *(int16x4x2_t *)((char *)&v41 - 8));
      int16x8_t v49 = vzip2q_s16(v45, v47);
      v36[-1] = vzip2q_s16(v48, v41);
      vst2_s16(v38, *(int16x4x2_t *)((char *)&v43 - 8));
      int v38 = (__int16 *)((char *)v38 + a3);
      v36[1] = vzip2q_s16(v49, v43);
      --v35;
      int v36 = (int16x8_t *)v38;
    }
    while (v35 > 1);
  }
  return result;
}

int16x8_t *from_422_to_v216_10bits_B<8,8,(AlphaOutputMethod)0,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9964A0, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v50 = result;
    int v51 = a3;
    int16x8_t v52 = a2;
    int v53 = a4;
    int v54 = __cxa_guard_acquire(&qword_26A9964A0);
    a4 = v53;
    a2 = v52;
    a3 = v51;
    int v55 = v54;
    double result = v50;
    if (v55)
    {
      *(void *)&long long v56 = 0xFE00FE00FE00FE00;
      *((void *)&v56 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996860 = v56;
      __cxa_guard_release(&qword_26A9964A0);
      a4 = v53;
      a2 = v52;
      a3 = v51;
      double result = v50;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9964A8, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v57 = result;
    int v58 = a3;
    int8x16_t v59 = a2;
    int v60 = a4;
    int v61 = __cxa_guard_acquire(&qword_26A9964A8);
    a4 = v60;
    a2 = v59;
    a3 = v58;
    int v62 = v61;
    double result = v57;
    if (v62)
    {
      *(void *)&long long v63 = 0xFE00FE00FE00FE00;
      *((void *)&v63 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996870 = v63;
      __cxa_guard_release(&qword_26A9964A8);
      a4 = v60;
      a2 = v59;
      a3 = v58;
      double result = v57;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9964B0, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v64 = result;
    int v65 = a3;
    int8x16_t v66 = a2;
    int v67 = a4;
    int v68 = __cxa_guard_acquire(&qword_26A9964B0);
    a4 = v67;
    a2 = v66;
    a3 = v65;
    int v69 = v68;
    double result = v64;
    if (v69)
    {
      xmmword_26A996880 = (__int128)vdupq_n_s16(0xFE04u);
      __cxa_guard_release(&qword_26A9964B0);
      a4 = v67;
      a2 = v66;
      a3 = v65;
      double result = v64;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9964B8, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v70 = result;
    int v71 = a3;
    int8x16_t v72 = a2;
    int v73 = a4;
    int v74 = __cxa_guard_acquire(&qword_26A9964B8);
    a4 = v73;
    a2 = v72;
    a3 = v71;
    int v75 = v74;
    double result = v70;
    if (v75)
    {
      xmmword_26A996890 = (__int128)vdupq_n_s16(0x1FBu);
      __cxa_guard_release(&qword_26A9964B8);
      a4 = v73;
      a2 = v72;
      a3 = v71;
      double result = v70;
    }
  }
  int16x8_t v4 = (int16x8_t)xmmword_26A996860;
  int16x8_t v5 = (int16x8_t)xmmword_26A996870;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int v32 = a2 + 8;
    int16x4x2_t v33 = a2 + 32;
    int v34 = a2 + 40;
    int v31 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_17;
  }
  uint8x16_t v7 = a2 + 56;
  int v8 = a4 + 8;
  v9.i64[0] = 0x8000800080008000;
  v9.i64[1] = 0x8000800080008000;
  uint8x16_t v10 = (__int16 *)result;
  do
  {
    int16x4x2_t v11 = (int16x8_t *)((char *)result + 8 * a3);
    int16x8_t v12 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-56], v4), v5), 6uLL), v9);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-48], v4), v5), 6uLL), v9);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-24], v4), v5), 6uLL), v9);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-16], v4), v5), 6uLL), v9);
    int16x8_t v16 = vzip1q_s16(v14, v15);
    vst2_s16(v10, *(int16x4x2_t *)((char *)&v12 - 8));
    uint8x16_t v10 = (__int16 *)((char *)v10 + a3);
    int16x8_t v17 = vzip2q_s16(v14, v15);
    result[1] = vzip2q_s16(v16, v12);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v13 - 8));
    result[3] = vzip2q_s16(v17, v13);
    double result = (int16x8_t *)v10;
    int16x8_t v19 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-40], v4), v5), 6uLL), v9);
    int16x8_t v20 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-32], v4), v5), 6uLL), v9);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-8], v4), v5), 6uLL), v9);
    int8x16_t v22 = v7 + 1;
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*v7, v4), v5), 6uLL), v9);
    int16x8_t v24 = vzip1q_s16(v21, v23);
    int16x8_t v25 = vzip2q_s16(v21, v23);
    int8x16_t v26 = (__int16 *)v11;
    vst2_s16(v26, *(int16x4x2_t *)((char *)&v19 - 8));
    v26 += 8;
    *(int16x8_t *)int8x16_t v26 = vzip2q_s16(v24, v19);
    int8x16_t v27 = v11[2].i16;
    vst2_s16(v27, *(int16x4x2_t *)((char *)&v20 - 8));
    v11[3] = vzip2q_s16(v25, v20);
    int v28 = v8 - 1;
    int v29 = v8 - 16;
    --v8;
    uint8x16_t v7 = v22;
  }
  while (v29 > 1);
  if (a4 <= 8) {
    int v30 = 8;
  }
  else {
    int v30 = a4;
  }
  int v31 = v28 - v30;
  a2 = v22 - 56;
  int v32 = v22 - 48;
  int16x4x2_t v33 = v22 - 24;
  int v34 = v22 - 16;
  if (v31 >= 1)
  {
LABEL_17:
    unsigned int v35 = v31 + 1;
    int v36 = result + 2;
    v37.i64[0] = 0x8000800080008000;
    v37.i64[1] = 0x8000800080008000;
    int v38 = result[2].i16;
    do
    {
      unsigned int v39 = v36[-2].i16;
      int16x8_t v40 = *a2++;
      int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v40, v4), v5), 6uLL), v37);
      int16x8_t v42 = *v32++;
      int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v42, v4), v5), 6uLL), v37);
      int16x8_t v44 = *v33++;
      int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v44, v4), v5), 6uLL), v37);
      int16x8_t v46 = *v34++;
      int16x8_t v47 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v46, v4), v5), 6uLL), v37);
      int16x8_t v48 = vzip1q_s16(v45, v47);
      vst2_s16(v39, *(int16x4x2_t *)((char *)&v41 - 8));
      int16x8_t v49 = vzip2q_s16(v45, v47);
      v36[-1] = vzip2q_s16(v48, v41);
      vst2_s16(v38, *(int16x4x2_t *)((char *)&v43 - 8));
      int v38 = (__int16 *)((char *)v38 + a3);
      v36[1] = vzip2q_s16(v49, v43);
      --v35;
      int v36 = (int16x8_t *)v38;
    }
    while (v35 > 1);
  }
  return result;
}

int16x8_t *from_422_to_v216_10bits_B<8,8,(AlphaOutputMethod)0,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9964C0, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v50 = result;
    int v51 = a3;
    int16x8_t v52 = a2;
    int v53 = a4;
    int v54 = __cxa_guard_acquire(&qword_26A9964C0);
    a4 = v53;
    a2 = v52;
    a3 = v51;
    int v55 = v54;
    double result = v50;
    if (v55)
    {
      *(void *)&long long v56 = 0xFE00FE00FE00FE00;
      *((void *)&v56 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A9968A0 = v56;
      __cxa_guard_release(&qword_26A9964C0);
      a4 = v53;
      a2 = v52;
      a3 = v51;
      double result = v50;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9964C8, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v57 = result;
    int v58 = a3;
    int8x16_t v59 = a2;
    int v60 = a4;
    int v61 = __cxa_guard_acquire(&qword_26A9964C8);
    a4 = v60;
    a2 = v59;
    a3 = v58;
    int v62 = v61;
    double result = v57;
    if (v62)
    {
      *(void *)&long long v63 = 0xFE00FE00FE00FE00;
      *((void *)&v63 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A9968B0 = v63;
      __cxa_guard_release(&qword_26A9964C8);
      a4 = v60;
      a2 = v59;
      a3 = v58;
      double result = v57;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9964D0, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v64 = result;
    int v65 = a3;
    int8x16_t v66 = a2;
    int v67 = a4;
    int v68 = __cxa_guard_acquire(&qword_26A9964D0);
    a4 = v67;
    a2 = v66;
    a3 = v65;
    int v69 = v68;
    double result = v64;
    if (v69)
    {
      xmmword_26A9968C0 = (__int128)vdupq_n_s16(0xFE04u);
      __cxa_guard_release(&qword_26A9964D0);
      a4 = v67;
      a2 = v66;
      a3 = v65;
      double result = v64;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9964D8, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v70 = result;
    int v71 = a3;
    int8x16_t v72 = a2;
    int v73 = a4;
    int v74 = __cxa_guard_acquire(&qword_26A9964D8);
    a4 = v73;
    a2 = v72;
    a3 = v71;
    int v75 = v74;
    double result = v70;
    if (v75)
    {
      xmmword_26A9968D0 = (__int128)vdupq_n_s16(0x1FBu);
      __cxa_guard_release(&qword_26A9964D8);
      a4 = v73;
      a2 = v72;
      a3 = v71;
      double result = v70;
    }
  }
  int16x8_t v4 = (int16x8_t)xmmword_26A9968A0;
  int16x8_t v5 = (int16x8_t)xmmword_26A9968B0;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int v32 = a2 + 8;
    int16x4x2_t v33 = a2 + 32;
    int v34 = a2 + 40;
    int v31 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_17;
  }
  uint8x16_t v7 = a2 + 56;
  int v8 = a4 + 8;
  v9.i64[0] = 0x8000800080008000;
  v9.i64[1] = 0x8000800080008000;
  uint8x16_t v10 = (__int16 *)result;
  do
  {
    int16x4x2_t v11 = (int16x8_t *)((char *)result + 8 * a3);
    int16x8_t v12 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-56], v4), v5), 6uLL), v9);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-48], v4), v5), 6uLL), v9);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-24], v4), v5), 6uLL), v9);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-16], v4), v5), 6uLL), v9);
    int16x8_t v16 = vzip1q_s16(v14, v15);
    vst2_s16(v10, *(int16x4x2_t *)((char *)&v12 - 8));
    uint8x16_t v10 = (__int16 *)((char *)v10 + a3);
    int16x8_t v17 = vzip2q_s16(v14, v15);
    result[1] = vzip2q_s16(v16, v12);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v13 - 8));
    result[3] = vzip2q_s16(v17, v13);
    double result = (int16x8_t *)v10;
    int16x8_t v19 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-40], v4), v5), 6uLL), v9);
    int16x8_t v20 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-32], v4), v5), 6uLL), v9);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-8], v4), v5), 6uLL), v9);
    int8x16_t v22 = v7 + 1;
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*v7, v4), v5), 6uLL), v9);
    int16x8_t v24 = vzip1q_s16(v21, v23);
    int16x8_t v25 = vzip2q_s16(v21, v23);
    int8x16_t v26 = (__int16 *)v11;
    vst2_s16(v26, *(int16x4x2_t *)((char *)&v19 - 8));
    v26 += 8;
    *(int16x8_t *)int8x16_t v26 = vzip2q_s16(v24, v19);
    int8x16_t v27 = v11[2].i16;
    vst2_s16(v27, *(int16x4x2_t *)((char *)&v20 - 8));
    v11[3] = vzip2q_s16(v25, v20);
    int v28 = v8 - 1;
    int v29 = v8 - 16;
    --v8;
    uint8x16_t v7 = v22;
  }
  while (v29 > 1);
  if (a4 <= 8) {
    int v30 = 8;
  }
  else {
    int v30 = a4;
  }
  int v31 = v28 - v30;
  a2 = v22 - 56;
  int v32 = v22 - 48;
  int16x4x2_t v33 = v22 - 24;
  int v34 = v22 - 16;
  if (v31 >= 1)
  {
LABEL_17:
    unsigned int v35 = v31 + 1;
    int v36 = result + 2;
    v37.i64[0] = 0x8000800080008000;
    v37.i64[1] = 0x8000800080008000;
    int v38 = result[2].i16;
    do
    {
      unsigned int v39 = v36[-2].i16;
      int16x8_t v40 = *a2++;
      int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v40, v4), v5), 6uLL), v37);
      int16x8_t v42 = *v32++;
      int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v42, v4), v5), 6uLL), v37);
      int16x8_t v44 = *v33++;
      int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v44, v4), v5), 6uLL), v37);
      int16x8_t v46 = *v34++;
      int16x8_t v47 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v46, v4), v5), 6uLL), v37);
      int16x8_t v48 = vzip1q_s16(v45, v47);
      vst2_s16(v39, *(int16x4x2_t *)((char *)&v41 - 8));
      int16x8_t v49 = vzip2q_s16(v45, v47);
      v36[-1] = vzip2q_s16(v48, v41);
      vst2_s16(v38, *(int16x4x2_t *)((char *)&v43 - 8));
      int v38 = (__int16 *)((char *)v38 + a3);
      v36[1] = vzip2q_s16(v49, v43);
      --v35;
      int v36 = (int16x8_t *)v38;
    }
    while (v35 > 1);
  }
  return result;
}

int16x8_t *from_422_to_v216_12bits<8,8,(AlphaOutputMethod)0,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9964E0, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v50 = result;
    int v51 = a3;
    int16x8_t v52 = a2;
    int v53 = a4;
    int v54 = __cxa_guard_acquire(&qword_26A9964E0);
    a4 = v53;
    a2 = v52;
    a3 = v51;
    int v55 = v54;
    double result = v50;
    if (v55)
    {
      *(void *)&long long v56 = 0xF800F800F800F800;
      *((void *)&v56 + 1) = 0xF800F800F800F800;
      xmmword_26A9968E0 = v56;
      __cxa_guard_release(&qword_26A9964E0);
      a4 = v53;
      a2 = v52;
      a3 = v51;
      double result = v50;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9964E8, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v57 = result;
    int v58 = a3;
    int8x16_t v59 = a2;
    int v60 = a4;
    int v61 = __cxa_guard_acquire(&qword_26A9964E8);
    a4 = v60;
    a2 = v59;
    a3 = v58;
    int v62 = v61;
    double result = v57;
    if (v62)
    {
      *(void *)&long long v63 = 0xF800F800F800F800;
      *((void *)&v63 + 1) = 0xF800F800F800F800;
      xmmword_26A9968F0 = v63;
      __cxa_guard_release(&qword_26A9964E8);
      a4 = v60;
      a2 = v59;
      a3 = v58;
      double result = v57;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9964F0, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v64 = result;
    int v65 = a3;
    int8x16_t v66 = a2;
    int v67 = a4;
    int v68 = __cxa_guard_acquire(&qword_26A9964F0);
    a4 = v67;
    a2 = v66;
    a3 = v65;
    int v69 = v68;
    double result = v64;
    if (v69)
    {
      xmmword_26A996900 = (__int128)vdupq_n_s16(0xF810u);
      __cxa_guard_release(&qword_26A9964F0);
      a4 = v67;
      a2 = v66;
      a3 = v65;
      double result = v64;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9964F8, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v70 = result;
    int v71 = a3;
    int8x16_t v72 = a2;
    int v73 = a4;
    int v74 = __cxa_guard_acquire(&qword_26A9964F8);
    a4 = v73;
    a2 = v72;
    a3 = v71;
    int v75 = v74;
    double result = v70;
    if (v75)
    {
      xmmword_26A996910 = (__int128)vdupq_n_s16(0x7EFu);
      __cxa_guard_release(&qword_26A9964F8);
      a4 = v73;
      a2 = v72;
      a3 = v71;
      double result = v70;
    }
  }
  int16x8_t v4 = (int16x8_t)xmmword_26A9968E0;
  int16x8_t v5 = (int16x8_t)xmmword_26A9968F0;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int v32 = a2 + 8;
    int16x4x2_t v33 = a2 + 32;
    int v34 = a2 + 40;
    int v31 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_17;
  }
  uint8x16_t v7 = a2 + 56;
  int v8 = a4 + 8;
  v9.i64[0] = 0x8000800080008000;
  v9.i64[1] = 0x8000800080008000;
  uint8x16_t v10 = (__int16 *)result;
  do
  {
    int16x4x2_t v11 = (int16x8_t *)((char *)result + 8 * a3);
    int16x8_t v12 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-56], v4), v5), 4uLL), v9);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-48], v4), v5), 4uLL), v9);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-24], v4), v5), 4uLL), v9);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-16], v4), v5), 4uLL), v9);
    int16x8_t v16 = vzip1q_s16(v14, v15);
    vst2_s16(v10, *(int16x4x2_t *)((char *)&v12 - 8));
    uint8x16_t v10 = (__int16 *)((char *)v10 + a3);
    int16x8_t v17 = vzip2q_s16(v14, v15);
    result[1] = vzip2q_s16(v16, v12);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v13 - 8));
    result[3] = vzip2q_s16(v17, v13);
    double result = (int16x8_t *)v10;
    int16x8_t v19 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-40], v4), v5), 4uLL), v9);
    int16x8_t v20 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-32], v4), v5), 4uLL), v9);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-8], v4), v5), 4uLL), v9);
    int8x16_t v22 = v7 + 1;
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*v7, v4), v5), 4uLL), v9);
    int16x8_t v24 = vzip1q_s16(v21, v23);
    int16x8_t v25 = vzip2q_s16(v21, v23);
    int8x16_t v26 = (__int16 *)v11;
    vst2_s16(v26, *(int16x4x2_t *)((char *)&v19 - 8));
    v26 += 8;
    *(int16x8_t *)int8x16_t v26 = vzip2q_s16(v24, v19);
    int8x16_t v27 = v11[2].i16;
    vst2_s16(v27, *(int16x4x2_t *)((char *)&v20 - 8));
    v11[3] = vzip2q_s16(v25, v20);
    int v28 = v8 - 1;
    int v29 = v8 - 16;
    --v8;
    uint8x16_t v7 = v22;
  }
  while (v29 > 1);
  if (a4 <= 8) {
    int v30 = 8;
  }
  else {
    int v30 = a4;
  }
  int v31 = v28 - v30;
  a2 = v22 - 56;
  int v32 = v22 - 48;
  int16x4x2_t v33 = v22 - 24;
  int v34 = v22 - 16;
  if (v31 >= 1)
  {
LABEL_17:
    unsigned int v35 = v31 + 1;
    int v36 = result + 2;
    v37.i64[0] = 0x8000800080008000;
    v37.i64[1] = 0x8000800080008000;
    int v38 = result[2].i16;
    do
    {
      unsigned int v39 = v36[-2].i16;
      int16x8_t v40 = *a2++;
      int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v40, v4), v5), 4uLL), v37);
      int16x8_t v42 = *v32++;
      int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v42, v4), v5), 4uLL), v37);
      int16x8_t v44 = *v33++;
      int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v44, v4), v5), 4uLL), v37);
      int16x8_t v46 = *v34++;
      int16x8_t v47 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v46, v4), v5), 4uLL), v37);
      int16x8_t v48 = vzip1q_s16(v45, v47);
      vst2_s16(v39, *(int16x4x2_t *)((char *)&v41 - 8));
      int16x8_t v49 = vzip2q_s16(v45, v47);
      v36[-1] = vzip2q_s16(v48, v41);
      vst2_s16(v38, *(int16x4x2_t *)((char *)&v43 - 8));
      int v38 = (__int16 *)((char *)v38 + a3);
      v36[1] = vzip2q_s16(v49, v43);
      --v35;
      int v36 = (int16x8_t *)v38;
    }
    while (v35 > 1);
  }
  return result;
}

int16x8_t *from_422_to_v216_12bits<8,8,(AlphaOutputMethod)0,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996500, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v50 = result;
    int v51 = a3;
    int16x8_t v52 = a2;
    int v53 = a4;
    int v54 = __cxa_guard_acquire(&qword_26A996500);
    a4 = v53;
    a2 = v52;
    a3 = v51;
    int v55 = v54;
    double result = v50;
    if (v55)
    {
      *(void *)&long long v56 = 0xF800F800F800F800;
      *((void *)&v56 + 1) = 0xF800F800F800F800;
      xmmword_26A996920 = v56;
      __cxa_guard_release(&qword_26A996500);
      a4 = v53;
      a2 = v52;
      a3 = v51;
      double result = v50;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996508, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v57 = result;
    int v58 = a3;
    int8x16_t v59 = a2;
    int v60 = a4;
    int v61 = __cxa_guard_acquire(&qword_26A996508);
    a4 = v60;
    a2 = v59;
    a3 = v58;
    int v62 = v61;
    double result = v57;
    if (v62)
    {
      *(void *)&long long v63 = 0xF800F800F800F800;
      *((void *)&v63 + 1) = 0xF800F800F800F800;
      xmmword_26A996930 = v63;
      __cxa_guard_release(&qword_26A996508);
      a4 = v60;
      a2 = v59;
      a3 = v58;
      double result = v57;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996510, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v64 = result;
    int v65 = a3;
    int8x16_t v66 = a2;
    int v67 = a4;
    int v68 = __cxa_guard_acquire(&qword_26A996510);
    a4 = v67;
    a2 = v66;
    a3 = v65;
    int v69 = v68;
    double result = v64;
    if (v69)
    {
      xmmword_26A996940 = (__int128)vdupq_n_s16(0xF810u);
      __cxa_guard_release(&qword_26A996510);
      a4 = v67;
      a2 = v66;
      a3 = v65;
      double result = v64;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996518, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v70 = result;
    int v71 = a3;
    int8x16_t v72 = a2;
    int v73 = a4;
    int v74 = __cxa_guard_acquire(&qword_26A996518);
    a4 = v73;
    a2 = v72;
    a3 = v71;
    int v75 = v74;
    double result = v70;
    if (v75)
    {
      xmmword_26A996950 = (__int128)vdupq_n_s16(0x7EFu);
      __cxa_guard_release(&qword_26A996518);
      a4 = v73;
      a2 = v72;
      a3 = v71;
      double result = v70;
    }
  }
  int16x8_t v4 = (int16x8_t)xmmword_26A996920;
  int16x8_t v5 = (int16x8_t)xmmword_26A996930;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int v32 = a2 + 8;
    int16x4x2_t v33 = a2 + 32;
    int v34 = a2 + 40;
    int v31 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_17;
  }
  uint8x16_t v7 = a2 + 56;
  int v8 = a4 + 8;
  v9.i64[0] = 0x8000800080008000;
  v9.i64[1] = 0x8000800080008000;
  uint8x16_t v10 = (__int16 *)result;
  do
  {
    int16x4x2_t v11 = (int16x8_t *)((char *)result + 8 * a3);
    int16x8_t v12 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-56], v4), v5), 4uLL), v9);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-48], v4), v5), 4uLL), v9);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-24], v4), v5), 4uLL), v9);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-16], v4), v5), 4uLL), v9);
    int16x8_t v16 = vzip1q_s16(v14, v15);
    vst2_s16(v10, *(int16x4x2_t *)((char *)&v12 - 8));
    uint8x16_t v10 = (__int16 *)((char *)v10 + a3);
    int16x8_t v17 = vzip2q_s16(v14, v15);
    result[1] = vzip2q_s16(v16, v12);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v13 - 8));
    result[3] = vzip2q_s16(v17, v13);
    double result = (int16x8_t *)v10;
    int16x8_t v19 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-40], v4), v5), 4uLL), v9);
    int16x8_t v20 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-32], v4), v5), 4uLL), v9);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v7[-8], v4), v5), 4uLL), v9);
    int8x16_t v22 = v7 + 1;
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*v7, v4), v5), 4uLL), v9);
    int16x8_t v24 = vzip1q_s16(v21, v23);
    int16x8_t v25 = vzip2q_s16(v21, v23);
    int8x16_t v26 = (__int16 *)v11;
    vst2_s16(v26, *(int16x4x2_t *)((char *)&v19 - 8));
    v26 += 8;
    *(int16x8_t *)int8x16_t v26 = vzip2q_s16(v24, v19);
    int8x16_t v27 = v11[2].i16;
    vst2_s16(v27, *(int16x4x2_t *)((char *)&v20 - 8));
    v11[3] = vzip2q_s16(v25, v20);
    int v28 = v8 - 1;
    int v29 = v8 - 16;
    --v8;
    uint8x16_t v7 = v22;
  }
  while (v29 > 1);
  if (a4 <= 8) {
    int v30 = 8;
  }
  else {
    int v30 = a4;
  }
  int v31 = v28 - v30;
  a2 = v22 - 56;
  int v32 = v22 - 48;
  int16x4x2_t v33 = v22 - 24;
  int v34 = v22 - 16;
  if (v31 >= 1)
  {
LABEL_17:
    unsigned int v35 = v31 + 1;
    int v36 = result + 2;
    v37.i64[0] = 0x8000800080008000;
    v37.i64[1] = 0x8000800080008000;
    int v38 = result[2].i16;
    do
    {
      unsigned int v39 = v36[-2].i16;
      int16x8_t v40 = *a2++;
      int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v40, v4), v5), 4uLL), v37);
      int16x8_t v42 = *v32++;
      int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v42, v4), v5), 4uLL), v37);
      int16x8_t v44 = *v33++;
      int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v44, v4), v5), 4uLL), v37);
      int16x8_t v46 = *v34++;
      int16x8_t v47 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v46, v4), v5), 4uLL), v37);
      int16x8_t v48 = vzip1q_s16(v45, v47);
      vst2_s16(v39, *(int16x4x2_t *)((char *)&v41 - 8));
      int16x8_t v49 = vzip2q_s16(v45, v47);
      v36[-1] = vzip2q_s16(v48, v41);
      vst2_s16(v38, *(int16x4x2_t *)((char *)&v43 - 8));
      int v38 = (__int16 *)((char *)v38 + a3);
      v36[1] = vzip2q_s16(v49, v43);
      --v35;
      int v36 = (int16x8_t *)v38;
    }
    while (v35 > 1);
  }
  return result;
}

int16x8_t *from_422_to_v216<8,8,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int16x8_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_422_to_v216_8xH<(PixelFormat)1983000886,false,(PixelOutputStoreType)0>(a1, a2, a3, a4, 8u);
}

int16x8_t *from_422_to_v216<8,8,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int16x8_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_422_to_v216_8xH<(PixelFormat)1983000886,true,(PixelOutputStoreType)0>(a1, a2, a3, a4, 8u);
}

int16x8_t *from_422_to_v216<8,4,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int16x8_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_422_to_v216_8xH<(PixelFormat)1983000886,false,(PixelOutputStoreType)0>(a1, a2, a3, a4, 4u);
}

int16x8_t *from_422_to_v216<8,4,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int16x8_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_422_to_v216_8xH<(PixelFormat)1983000886,true,(PixelOutputStoreType)0>(a1, a2, a3, a4, 4u);
}

int8x8_t *from_422_to_v216<4,8,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *result, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = 0;
  int v5 = a4 & ~(a4 >> 31);
  while (1)
  {
    int v6 = (__int16 *)(a2 + v4);
    if (!v5) {
      break;
    }
    v7.i16[0] = v6[128];
    v7.i16[1] = *v6;
    v7.i16[2] = v6[160];
    v7.i16[3] = v6[1];
    *double result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[129];
    v7.i16[1] = v6[2];
    v7.i16[2] = v6[161];
    v7.i16[3] = v6[3];
    result[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[130];
    v7.i16[1] = v6[32];
    v7.i16[2] = v6[162];
    v7.i16[3] = v6[33];
    result[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[131];
    v7.i16[1] = v6[34];
    v7.i16[2] = v6[163];
    v7.i16[3] = v6[35];
    result[3] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    double result = (int8x8_t *)((char *)result + a3);
    v4 += 8;
    --v5;
    if (v4 == 64)
    {
      uint64_t v8 = a2 + v4;
      int8x16_t v9 = (__int16 *)(v8 + 320);
      uint8x16_t v10 = (__int16 *)(v8 + 64);
      goto LABEL_6;
    }
  }
  int8x16_t v9 = v6 + 160;
  uint8x16_t v10 = v6 + 32;
LABEL_6:
  uint64_t v11 = 0;
  int16x8_t v12 = v9 + 32;
  int16x8_t v13 = v10 + 32;
  if (a4 <= 8) {
    int v14 = 8;
  }
  else {
    int v14 = a4;
  }
  int v15 = v14 - 8;
  int16x8_t v16 = (int16x4_t *)&result[2];
  do
  {
    if (!v15) {
      break;
    }
    v17.i16[0] = v12[v11 - 32];
    v17.i16[1] = v12[v11];
    v17.i32[1] = *(_DWORD *)&v13[v11 - 32];
    int16x4_t v18 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v16[-2] = vuzp1_s16(v18, vrev32_s16(v18));
    v17.i16[0] = v12[v11 - 31];
    v17.i16[1] = v12[v11 + 1];
    v17.i32[1] = *(_DWORD *)&v13[v11 - 30];
    int16x4_t v19 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t v20 = vuzp1_s16(v19, vrev32_s16(v19));
    v16[-1] = v20;
    v20.i16[2] = v13[v11 + 1];
    double result = (int8x8_t *)v20.u32[1];
    v17.i16[0] = v12[v11 - 30];
    v17.i16[1] = v12[v11 + 2];
    v17.i16[2] = v13[v11];
    v17.i16[3] = v20.i16[2];
    int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t *v16 = vuzp1_s16(v21, vrev32_s16(v21));
    v17.i16[0] = v12[v11 - 29];
    v17.i16[1] = v12[v11 + 3];
    v17.i32[1] = *(_DWORD *)&v13[v11 + 2];
    int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v16[1] = vuzp1_s16(v22, vrev32_s16(v22));
    v11 += 4;
    --v15;
    int16x8_t v16 = (int16x4_t *)((char *)v16 + a3);
  }
  while ((v11 * 2) != 64);
  return result;
}

int8x8_t *from_422_to_v216<4,8,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *result, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = 0;
  int v5 = a4 & ~(a4 >> 31);
  while (1)
  {
    int v6 = (__int16 *)(a2 + v4);
    if (!v5) {
      break;
    }
    v7.i16[0] = v6[128];
    v7.i16[1] = *v6;
    v7.i16[2] = v6[160];
    v7.i16[3] = v6[1];
    *double result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[129];
    v7.i16[1] = v6[2];
    v7.i16[2] = v6[161];
    v7.i16[3] = v6[3];
    result[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[130];
    v7.i16[1] = v6[32];
    v7.i16[2] = v6[162];
    v7.i16[3] = v6[33];
    result[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[131];
    v7.i16[1] = v6[34];
    v7.i16[2] = v6[163];
    v7.i16[3] = v6[35];
    result[3] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    double result = (int8x8_t *)((char *)result + a3);
    v4 += 8;
    --v5;
    if (v4 == 64)
    {
      uint64_t v8 = a2 + v4;
      int8x16_t v9 = (__int16 *)(v8 + 320);
      uint8x16_t v10 = (__int16 *)(v8 + 64);
      goto LABEL_6;
    }
  }
  int8x16_t v9 = v6 + 160;
  uint8x16_t v10 = v6 + 32;
LABEL_6:
  uint64_t v11 = 0;
  int16x8_t v12 = v9 + 32;
  int16x8_t v13 = v10 + 32;
  if (a4 <= 8) {
    int v14 = 8;
  }
  else {
    int v14 = a4;
  }
  int v15 = v14 - 8;
  int16x8_t v16 = (int16x4_t *)&result[2];
  do
  {
    if (!v15) {
      break;
    }
    v17.i16[0] = v12[v11 - 32];
    v17.i16[1] = v12[v11];
    v17.i32[1] = *(_DWORD *)&v13[v11 - 32];
    int16x4_t v18 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v16[-2] = vuzp1_s16(v18, vrev32_s16(v18));
    v17.i16[0] = v12[v11 - 31];
    v17.i16[1] = v12[v11 + 1];
    v17.i32[1] = *(_DWORD *)&v13[v11 - 30];
    int16x4_t v19 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t v20 = vuzp1_s16(v19, vrev32_s16(v19));
    v16[-1] = v20;
    v20.i16[2] = v13[v11 + 1];
    double result = (int8x8_t *)v20.u32[1];
    v17.i16[0] = v12[v11 - 30];
    v17.i16[1] = v12[v11 + 2];
    v17.i16[2] = v13[v11];
    v17.i16[3] = v20.i16[2];
    int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t *v16 = vuzp1_s16(v21, vrev32_s16(v21));
    v17.i16[0] = v12[v11 - 29];
    v17.i16[1] = v12[v11 + 3];
    v17.i32[1] = *(_DWORD *)&v13[v11 + 2];
    int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v16[1] = vuzp1_s16(v22, vrev32_s16(v22));
    v11 += 4;
    --v15;
    int16x8_t v16 = (int16x4_t *)((char *)v16 + a3);
  }
  while ((v11 * 2) != 64);
  return result;
}

int8x8_t *from_422_to_v216<4,4,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *result, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = 0;
  int v5 = a4 & ~(a4 >> 31);
  while (1)
  {
    int v6 = (__int16 *)(a2 + v4);
    if (!v5) {
      break;
    }
    v7.i16[0] = v6[64];
    v7.i16[1] = *v6;
    v7.i16[2] = v6[80];
    v7.i16[3] = v6[1];
    *double result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[65];
    v7.i16[1] = v6[2];
    v7.i16[2] = v6[81];
    v7.i16[3] = v6[3];
    result[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[66];
    v7.i16[1] = v6[16];
    v7.i16[2] = v6[82];
    v7.i16[3] = v6[17];
    result[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[67];
    v7.i16[1] = v6[18];
    v7.i16[2] = v6[83];
    v7.i16[3] = v6[19];
    result[3] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    double result = (int8x8_t *)((char *)result + a3);
    v4 += 8;
    --v5;
    if (v4 == 32)
    {
      uint64_t v8 = a2 + v4;
      int8x16_t v9 = (__int16 *)(v8 + 160);
      uint8x16_t v10 = (__int16 *)(v8 + 32);
      goto LABEL_6;
    }
  }
  int8x16_t v9 = v6 + 80;
  uint8x16_t v10 = v6 + 16;
LABEL_6:
  uint64_t v11 = 0;
  int16x8_t v12 = v9 + 16;
  int16x8_t v13 = v10 + 16;
  if (a4 <= 4) {
    int v14 = 4;
  }
  else {
    int v14 = a4;
  }
  int v15 = v14 - 4;
  int16x8_t v16 = (int16x4_t *)&result[2];
  do
  {
    if (!v15) {
      break;
    }
    v17.i16[0] = v12[v11 - 16];
    v17.i16[1] = v12[v11];
    v17.i32[1] = *(_DWORD *)&v13[v11 - 16];
    int16x4_t v18 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v16[-2] = vuzp1_s16(v18, vrev32_s16(v18));
    v17.i16[0] = v12[v11 - 15];
    v17.i16[1] = v12[v11 + 1];
    v17.i32[1] = *(_DWORD *)&v13[v11 - 14];
    int16x4_t v19 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t v20 = vuzp1_s16(v19, vrev32_s16(v19));
    v16[-1] = v20;
    v20.i16[2] = v13[v11 + 1];
    double result = (int8x8_t *)v20.u32[1];
    v17.i16[0] = v12[v11 - 14];
    v17.i16[1] = v12[v11 + 2];
    v17.i16[2] = v13[v11];
    v17.i16[3] = v20.i16[2];
    int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t *v16 = vuzp1_s16(v21, vrev32_s16(v21));
    v17.i16[0] = v12[v11 - 13];
    v17.i16[1] = v12[v11 + 3];
    v17.i32[1] = *(_DWORD *)&v13[v11 + 2];
    int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v16[1] = vuzp1_s16(v22, vrev32_s16(v22));
    v11 += 4;
    --v15;
    int16x8_t v16 = (int16x4_t *)((char *)v16 + a3);
  }
  while ((v11 * 2) != 32);
  return result;
}

int8x8_t *from_422_to_v216<4,4,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *result, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = 0;
  int v5 = a4 & ~(a4 >> 31);
  while (1)
  {
    int v6 = (__int16 *)(a2 + v4);
    if (!v5) {
      break;
    }
    v7.i16[0] = v6[64];
    v7.i16[1] = *v6;
    v7.i16[2] = v6[80];
    v7.i16[3] = v6[1];
    *double result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[65];
    v7.i16[1] = v6[2];
    v7.i16[2] = v6[81];
    v7.i16[3] = v6[3];
    result[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[66];
    v7.i16[1] = v6[16];
    v7.i16[2] = v6[82];
    v7.i16[3] = v6[17];
    result[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[67];
    v7.i16[1] = v6[18];
    v7.i16[2] = v6[83];
    v7.i16[3] = v6[19];
    result[3] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    double result = (int8x8_t *)((char *)result + a3);
    v4 += 8;
    --v5;
    if (v4 == 32)
    {
      uint64_t v8 = a2 + v4;
      int8x16_t v9 = (__int16 *)(v8 + 160);
      uint8x16_t v10 = (__int16 *)(v8 + 32);
      goto LABEL_6;
    }
  }
  int8x16_t v9 = v6 + 80;
  uint8x16_t v10 = v6 + 16;
LABEL_6:
  uint64_t v11 = 0;
  int16x8_t v12 = v9 + 16;
  int16x8_t v13 = v10 + 16;
  if (a4 <= 4) {
    int v14 = 4;
  }
  else {
    int v14 = a4;
  }
  int v15 = v14 - 4;
  int16x8_t v16 = (int16x4_t *)&result[2];
  do
  {
    if (!v15) {
      break;
    }
    v17.i16[0] = v12[v11 - 16];
    v17.i16[1] = v12[v11];
    v17.i32[1] = *(_DWORD *)&v13[v11 - 16];
    int16x4_t v18 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v16[-2] = vuzp1_s16(v18, vrev32_s16(v18));
    v17.i16[0] = v12[v11 - 15];
    v17.i16[1] = v12[v11 + 1];
    v17.i32[1] = *(_DWORD *)&v13[v11 - 14];
    int16x4_t v19 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t v20 = vuzp1_s16(v19, vrev32_s16(v19));
    v16[-1] = v20;
    v20.i16[2] = v13[v11 + 1];
    double result = (int8x8_t *)v20.u32[1];
    v17.i16[0] = v12[v11 - 14];
    v17.i16[1] = v12[v11 + 2];
    v17.i16[2] = v13[v11];
    v17.i16[3] = v20.i16[2];
    int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t *v16 = vuzp1_s16(v21, vrev32_s16(v21));
    v17.i16[0] = v12[v11 - 13];
    v17.i16[1] = v12[v11 + 3];
    v17.i32[1] = *(_DWORD *)&v13[v11 + 2];
    int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v16[1] = vuzp1_s16(v22, vrev32_s16(v22));
    v11 += 4;
    --v15;
    int16x8_t v16 = (int16x4_t *)((char *)v16 + a3);
  }
  while ((v11 * 2) != 32);
  return result;
}

int8x8_t from_422_to_v216<4,2,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  uint64_t v4 = a2 + 40;
  int v5 = a2 + 8;
  if (a4 > 0)
  {
    v6.i16[0] = a2[32];
    v6.i16[1] = *a2;
    v6.i16[2] = *v4;
    v6.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v8.i16[0] = a2[33];
    v8.i16[1] = a2[2];
    v8.i16[2] = a2[41];
    v8.i16[3] = a2[3];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v8.i16[0] = a2[34];
    v8.i16[1] = *v5;
    v8.i16[2] = a2[42];
    v8.i16[3] = a2[9];
    a1[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v8.i16[0] = a2[35];
    v8.i16[1] = a2[10];
    v8.i16[2] = a2[43];
    v8.i16[3] = a2[11];
    a1[3] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    uint64_t v4 = a2 + 44;
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v5 = a2 + 12;
    if (a4 != 1)
    {
      v9.i16[0] = a2[36];
      v9.i16[1] = a2[4];
      v9.i16[2] = *v4;
      v9.i16[3] = a2[5];
      *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v9.i16[0] = a2[37];
      v9.i16[1] = a2[6];
      v9.i16[2] = a2[45];
      v9.i16[3] = a2[7];
      a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v9.i16[0] = a2[38];
      v9.i16[1] = *v5;
      v9.i16[2] = a2[46];
      v9.i16[3] = a2[13];
      a1[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v9.i16[0] = a2[39];
      v9.i16[1] = a2[14];
      v9.i16[2] = a2[47];
      v9.i16[3] = a2[15];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      a1[3] = result;
      uint64_t v4 = a2 + 48;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v5 = a2 + 16;
    }
  }
  if (a4 <= 2) {
    int v10 = 2;
  }
  else {
    int v10 = a4;
  }
  int v11 = v10 - 2;
  if (v11)
  {
    v12.i16[0] = *v4;
    v12.i16[1] = v4[8];
    v12.i32[1] = *(_DWORD *)v5;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    int16x4_t v13 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v12, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    *a1 = (int8x8_t)vuzp1_s16(v13, vrev32_s16(v13));
    v14.i16[0] = v4[1];
    v14.i16[1] = v4[9];
    v14.i32[1] = *((_DWORD *)v5 + 1);
    int16x4_t v15 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v14, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[1] = (int8x8_t)vuzp1_s16(v15, vrev32_s16(v15));
    v14.i16[0] = v4[2];
    v14.i16[1] = v4[10];
    v14.i32[1] = *((_DWORD *)v5 + 4);
    int16x4_t v16 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v14, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[2] = (int8x8_t)vuzp1_s16(v16, vrev32_s16(v16));
    v14.i16[0] = v4[3];
    v14.i16[1] = v4[11];
    v14.i32[1] = *((_DWORD *)v5 + 5);
    int16x4_t v17 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v14, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[3] = (int8x8_t)vuzp1_s16(v17, vrev32_s16(v17));
    if (v11 != 1)
    {
      int16x4_t v18 = (int16x4_t *)((char *)a1 + a3);
      v19.i16[0] = v4[4];
      v19.i16[1] = v4[12];
      v19.i32[1] = *((_DWORD *)v5 + 2);
      int16x4_t v20 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v19, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int16x4_t *v18 = vuzp1_s16(v20, vrev32_s16(v20));
      v19.i16[0] = v4[5];
      v19.i16[1] = v4[13];
      v19.i32[1] = *((_DWORD *)v5 + 3);
      int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v19, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v18[1] = vuzp1_s16(v21, vrev32_s16(v21));
      v19.i16[0] = v4[6];
      v19.i16[1] = v4[14];
      v19.i32[1] = *((_DWORD *)v5 + 6);
      int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v19, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      CFTypeRef v18[2] = vuzp1_s16(v22, vrev32_s16(v22));
      v19.i16[0] = v4[7];
      v19.i16[1] = v4[15];
      v19.i32[1] = *((_DWORD *)v5 + 7);
      int16x4_t v23 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v19, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int8x8_t result = (int8x8_t)vuzp1_s16(v23, vrev32_s16(v23));
      v18[3] = (int16x4_t)result;
    }
  }
  return result;
}

int8x8_t from_422_to_v216<4,2,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  uint64_t v4 = a2 + 40;
  int v5 = a2 + 8;
  if (a4 > 0)
  {
    v6.i16[0] = a2[32];
    v6.i16[1] = *a2;
    v6.i16[2] = *v4;
    v6.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v8.i16[0] = a2[33];
    v8.i16[1] = a2[2];
    v8.i16[2] = a2[41];
    v8.i16[3] = a2[3];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v8.i16[0] = a2[34];
    v8.i16[1] = *v5;
    v8.i16[2] = a2[42];
    v8.i16[3] = a2[9];
    a1[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v8.i16[0] = a2[35];
    v8.i16[1] = a2[10];
    v8.i16[2] = a2[43];
    v8.i16[3] = a2[11];
    a1[3] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    uint64_t v4 = a2 + 44;
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v5 = a2 + 12;
    if (a4 != 1)
    {
      v9.i16[0] = a2[36];
      v9.i16[1] = a2[4];
      v9.i16[2] = *v4;
      v9.i16[3] = a2[5];
      *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v9.i16[0] = a2[37];
      v9.i16[1] = a2[6];
      v9.i16[2] = a2[45];
      v9.i16[3] = a2[7];
      a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v9.i16[0] = a2[38];
      v9.i16[1] = *v5;
      v9.i16[2] = a2[46];
      v9.i16[3] = a2[13];
      a1[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v9.i16[0] = a2[39];
      v9.i16[1] = a2[14];
      v9.i16[2] = a2[47];
      v9.i16[3] = a2[15];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      a1[3] = result;
      uint64_t v4 = a2 + 48;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v5 = a2 + 16;
    }
  }
  if (a4 <= 2) {
    int v10 = 2;
  }
  else {
    int v10 = a4;
  }
  int v11 = v10 - 2;
  if (v11)
  {
    v12.i16[0] = *v4;
    v12.i16[1] = v4[8];
    v12.i32[1] = *(_DWORD *)v5;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    int16x4_t v13 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v12, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    *a1 = (int8x8_t)vuzp1_s16(v13, vrev32_s16(v13));
    v14.i16[0] = v4[1];
    v14.i16[1] = v4[9];
    v14.i32[1] = *((_DWORD *)v5 + 1);
    int16x4_t v15 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v14, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[1] = (int8x8_t)vuzp1_s16(v15, vrev32_s16(v15));
    v14.i16[0] = v4[2];
    v14.i16[1] = v4[10];
    v14.i32[1] = *((_DWORD *)v5 + 4);
    int16x4_t v16 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v14, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[2] = (int8x8_t)vuzp1_s16(v16, vrev32_s16(v16));
    v14.i16[0] = v4[3];
    v14.i16[1] = v4[11];
    v14.i32[1] = *((_DWORD *)v5 + 5);
    int16x4_t v17 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v14, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[3] = (int8x8_t)vuzp1_s16(v17, vrev32_s16(v17));
    if (v11 != 1)
    {
      int16x4_t v18 = (int16x4_t *)((char *)a1 + a3);
      v19.i16[0] = v4[4];
      v19.i16[1] = v4[12];
      v19.i32[1] = *((_DWORD *)v5 + 2);
      int16x4_t v20 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v19, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int16x4_t *v18 = vuzp1_s16(v20, vrev32_s16(v20));
      v19.i16[0] = v4[5];
      v19.i16[1] = v4[13];
      v19.i32[1] = *((_DWORD *)v5 + 3);
      int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v19, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v18[1] = vuzp1_s16(v21, vrev32_s16(v21));
      v19.i16[0] = v4[6];
      v19.i16[1] = v4[14];
      v19.i32[1] = *((_DWORD *)v5 + 6);
      int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v19, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      CFTypeRef v18[2] = vuzp1_s16(v22, vrev32_s16(v22));
      v19.i16[0] = v4[7];
      v19.i16[1] = v4[15];
      v19.i32[1] = *((_DWORD *)v5 + 7);
      int16x4_t v23 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v19, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int8x8_t result = (int8x8_t)vuzp1_s16(v23, vrev32_s16(v23));
      v18[3] = (int16x4_t)result;
    }
  }
  return result;
}

int8x8_t from_422_to_v216<2,4,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  uint64_t v4 = a2 + 40;
  int v5 = a2 + 8;
  if (a4 > 0)
  {
    int v6 = a4 & ~(a4 >> 31);
    v7.i16[0] = a2[32];
    v7.i16[1] = *a2;
    v7.i16[2] = *v4;
    v7.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v9.i16[0] = a2[33];
    v9.i16[1] = *v5;
    v9.i16[2] = a2[41];
    v9.i16[3] = a2[9];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    uint64_t v4 = a2 + 42;
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v5 = a2 + 10;
    if (v6 != 1)
    {
      v10.i16[0] = a2[34];
      v10.i16[1] = a2[2];
      v10.i16[2] = *v4;
      v10.i16[3] = a2[3];
      *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v10.i16[0] = a2[35];
      v10.i16[1] = *v5;
      v10.i16[2] = a2[43];
      v10.i16[3] = a2[11];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      a1[1] = result;
      uint64_t v4 = a2 + 44;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v5 = a2 + 12;
      if (v6 != 2)
      {
        v11.i16[0] = a2[36];
        v11.i16[1] = a2[4];
        v11.i16[2] = *v4;
        v11.i16[3] = a2[5];
        int8x8_t result = (int8x8_t)0xF000F000F000F000;
        *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v11, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        v12.i16[0] = a2[37];
        v12.i16[1] = *v5;
        v12.i16[2] = a2[45];
        v12.i16[3] = a2[13];
        a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v12, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        uint64_t v4 = a2 + 46;
        a1 = (int8x8_t *)((char *)a1 + a3);
        int v5 = a2 + 14;
        if (v6 != 3)
        {
          v13.i16[0] = a2[38];
          v13.i16[1] = a2[6];
          v13.i16[2] = *v4;
          v13.i16[3] = a2[7];
          *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v13, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          v13.i16[0] = a2[39];
          v13.i16[1] = *v5;
          v13.i16[2] = a2[47];
          v13.i16[3] = a2[15];
          int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v13, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          a1[1] = result;
          uint64_t v4 = a2 + 48;
          a1 = (int8x8_t *)((char *)a1 + a3);
          int v5 = a2 + 16;
        }
      }
    }
  }
  if (a4 <= 4) {
    int v14 = 4;
  }
  else {
    int v14 = a4;
  }
  int v15 = v14 - 4;
  if (v15)
  {
    v16.i16[0] = *v4;
    v16.i16[1] = v4[8];
    v16.i32[1] = *(_DWORD *)v5;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    int16x4_t v17 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v16, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    *a1 = (int8x8_t)vuzp1_s16(v17, vrev32_s16(v17));
    v18.i16[0] = v4[1];
    v18.i16[1] = v4[9];
    v18.i32[1] = *((_DWORD *)v5 + 4);
    int16x4_t v19 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[1] = (int8x8_t)vuzp1_s16(v19, vrev32_s16(v19));
    if (v15 != 1)
    {
      int16x4_t v20 = (int16x4_t *)((char *)a1 + a3);
      v21.i16[0] = v4[2];
      v21.i16[1] = v4[10];
      v21.i32[1] = *((_DWORD *)v5 + 1);
      int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v21, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *int16x4_t v20 = vuzp1_s16(v22, vrev32_s16(v22));
      v21.i16[0] = v4[3];
      v21.i16[1] = v4[11];
      v21.i32[1] = *((_DWORD *)v5 + 5);
      int16x4_t v23 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v21, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int8x8_t result = (int8x8_t)vuzp1_s16(v23, vrev32_s16(v23));
      v20[1] = (int16x4_t)result;
      if (v15 != 2)
      {
        int16x8_t v24 = (int16x4_t *)((char *)v20 + a3);
        v25.i16[0] = v4[4];
        v25.i16[1] = v4[12];
        v25.i32[1] = *((_DWORD *)v5 + 2);
        int8x8_t result = (int8x8_t)0xF000F000F000F000;
        int16x4_t v26 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v25, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        int16x4_t *v24 = vuzp1_s16(v26, vrev32_s16(v26));
        v27.i16[0] = v4[5];
        v27.i16[1] = v4[13];
        v27.i32[1] = *((_DWORD *)v5 + 6);
        int16x4_t v28 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v27, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        v24[1] = vuzp1_s16(v28, vrev32_s16(v28));
        if (v15 != 3)
        {
          int v29 = (int16x4_t *)((char *)v24 + a3);
          v30.i16[0] = v4[6];
          v30.i16[1] = v4[14];
          v30.i32[1] = *((_DWORD *)v5 + 3);
          int16x4_t v31 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v30, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          int16x4_t *v29 = vuzp1_s16(v31, vrev32_s16(v31));
          v30.i16[0] = v4[7];
          v30.i16[1] = v4[15];
          v30.i32[1] = *((_DWORD *)v5 + 7);
          int16x4_t v32 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v30, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          int8x8_t result = (int8x8_t)vuzp1_s16(v32, vrev32_s16(v32));
          v29[1] = (int16x4_t)result;
        }
      }
    }
  }
  return result;
}

int8x8_t from_422_to_v216<2,4,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  uint64_t v4 = a2 + 40;
  int v5 = a2 + 8;
  if (a4 > 0)
  {
    int v6 = a4 & ~(a4 >> 31);
    v7.i16[0] = a2[32];
    v7.i16[1] = *a2;
    v7.i16[2] = *v4;
    v7.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v9.i16[0] = a2[33];
    v9.i16[1] = *v5;
    v9.i16[2] = a2[41];
    v9.i16[3] = a2[9];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    uint64_t v4 = a2 + 42;
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v5 = a2 + 10;
    if (v6 != 1)
    {
      v10.i16[0] = a2[34];
      v10.i16[1] = a2[2];
      v10.i16[2] = *v4;
      v10.i16[3] = a2[3];
      *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v10.i16[0] = a2[35];
      v10.i16[1] = *v5;
      v10.i16[2] = a2[43];
      v10.i16[3] = a2[11];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      a1[1] = result;
      uint64_t v4 = a2 + 44;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v5 = a2 + 12;
      if (v6 != 2)
      {
        v11.i16[0] = a2[36];
        v11.i16[1] = a2[4];
        v11.i16[2] = *v4;
        v11.i16[3] = a2[5];
        int8x8_t result = (int8x8_t)0xF000F000F000F000;
        *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v11, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        v12.i16[0] = a2[37];
        v12.i16[1] = *v5;
        v12.i16[2] = a2[45];
        v12.i16[3] = a2[13];
        a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v12, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        uint64_t v4 = a2 + 46;
        a1 = (int8x8_t *)((char *)a1 + a3);
        int v5 = a2 + 14;
        if (v6 != 3)
        {
          v13.i16[0] = a2[38];
          v13.i16[1] = a2[6];
          v13.i16[2] = *v4;
          v13.i16[3] = a2[7];
          *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v13, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          v13.i16[0] = a2[39];
          v13.i16[1] = *v5;
          v13.i16[2] = a2[47];
          v13.i16[3] = a2[15];
          int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v13, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          a1[1] = result;
          uint64_t v4 = a2 + 48;
          a1 = (int8x8_t *)((char *)a1 + a3);
          int v5 = a2 + 16;
        }
      }
    }
  }
  if (a4 <= 4) {
    int v14 = 4;
  }
  else {
    int v14 = a4;
  }
  int v15 = v14 - 4;
  if (v15)
  {
    v16.i16[0] = *v4;
    v16.i16[1] = v4[8];
    v16.i32[1] = *(_DWORD *)v5;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    int16x4_t v17 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v16, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    *a1 = (int8x8_t)vuzp1_s16(v17, vrev32_s16(v17));
    v18.i16[0] = v4[1];
    v18.i16[1] = v4[9];
    v18.i32[1] = *((_DWORD *)v5 + 4);
    int16x4_t v19 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[1] = (int8x8_t)vuzp1_s16(v19, vrev32_s16(v19));
    if (v15 != 1)
    {
      int16x4_t v20 = (int16x4_t *)((char *)a1 + a3);
      v21.i16[0] = v4[2];
      v21.i16[1] = v4[10];
      v21.i32[1] = *((_DWORD *)v5 + 1);
      int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v21, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *int16x4_t v20 = vuzp1_s16(v22, vrev32_s16(v22));
      v21.i16[0] = v4[3];
      v21.i16[1] = v4[11];
      v21.i32[1] = *((_DWORD *)v5 + 5);
      int16x4_t v23 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v21, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int8x8_t result = (int8x8_t)vuzp1_s16(v23, vrev32_s16(v23));
      v20[1] = (int16x4_t)result;
      if (v15 != 2)
      {
        int16x8_t v24 = (int16x4_t *)((char *)v20 + a3);
        v25.i16[0] = v4[4];
        v25.i16[1] = v4[12];
        v25.i32[1] = *((_DWORD *)v5 + 2);
        int8x8_t result = (int8x8_t)0xF000F000F000F000;
        int16x4_t v26 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v25, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        int16x4_t *v24 = vuzp1_s16(v26, vrev32_s16(v26));
        v27.i16[0] = v4[5];
        v27.i16[1] = v4[13];
        v27.i32[1] = *((_DWORD *)v5 + 6);
        int16x4_t v28 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v27, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        v24[1] = vuzp1_s16(v28, vrev32_s16(v28));
        if (v15 != 3)
        {
          int v29 = (int16x4_t *)((char *)v24 + a3);
          v30.i16[0] = v4[6];
          v30.i16[1] = v4[14];
          v30.i32[1] = *((_DWORD *)v5 + 3);
          int16x4_t v31 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v30, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          int16x4_t *v29 = vuzp1_s16(v31, vrev32_s16(v31));
          v30.i16[0] = v4[7];
          v30.i16[1] = v4[15];
          v30.i32[1] = *((_DWORD *)v5 + 7);
          int16x4_t v32 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v30, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          int8x8_t result = (int8x8_t)vuzp1_s16(v32, vrev32_s16(v32));
          v29[1] = (int16x4_t)result;
        }
      }
    }
  }
  return result;
}

int8x8_t from_422_to_v216<2,2,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  uint64_t v4 = a2 + 20;
  int v5 = a2 + 4;
  if (a4 > 0)
  {
    v6.i16[0] = a2[16];
    v6.i16[1] = *a2;
    v6.i16[2] = *v4;
    v6.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v8.i16[0] = a2[17];
    v8.i16[1] = *v5;
    v8.i16[2] = a2[21];
    v8.i16[3] = a2[5];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    uint64_t v4 = a2 + 22;
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v5 = a2 + 6;
    if (a4 != 1)
    {
      v9.i16[0] = a2[18];
      v9.i16[1] = a2[2];
      v9.i16[2] = *v4;
      v9.i16[3] = a2[3];
      *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v9.i16[0] = a2[19];
      v9.i16[1] = *v5;
      v9.i16[2] = a2[23];
      v9.i16[3] = a2[7];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      a1[1] = result;
      uint64_t v4 = a2 + 24;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v5 = a2 + 8;
    }
  }
  if (a4 <= 2) {
    int v10 = 2;
  }
  else {
    int v10 = a4;
  }
  int v11 = v10 - 2;
  if (v11)
  {
    v12.i16[0] = *v4;
    v12.i16[1] = v4[4];
    v12.i32[1] = *(_DWORD *)v5;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    int16x4_t v13 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v12, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    *a1 = (int8x8_t)vuzp1_s16(v13, vrev32_s16(v13));
    v14.i16[0] = v4[1];
    v14.i16[1] = v4[5];
    v14.i32[1] = *((_DWORD *)v5 + 2);
    int16x4_t v15 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v14, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[1] = (int8x8_t)vuzp1_s16(v15, vrev32_s16(v15));
    if (v11 != 1)
    {
      int16x4_t v16 = (int16x4_t *)((char *)a1 + a3);
      v17.i16[0] = v4[2];
      v17.i16[1] = v4[6];
      v17.i32[1] = *((_DWORD *)v5 + 1);
      int16x4_t v18 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int16x4_t *v16 = vuzp1_s16(v18, vrev32_s16(v18));
      v17.i16[0] = v4[3];
      v17.i16[1] = v4[7];
      v17.i32[1] = *((_DWORD *)v5 + 3);
      int16x4_t v19 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int8x8_t result = (int8x8_t)vuzp1_s16(v19, vrev32_s16(v19));
      v16[1] = (int16x4_t)result;
    }
  }
  return result;
}

int8x8_t from_422_to_v216<2,2,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  uint64_t v4 = a2 + 20;
  int v5 = a2 + 4;
  if (a4 > 0)
  {
    v6.i16[0] = a2[16];
    v6.i16[1] = *a2;
    v6.i16[2] = *v4;
    v6.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v8.i16[0] = a2[17];
    v8.i16[1] = *v5;
    v8.i16[2] = a2[21];
    v8.i16[3] = a2[5];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    uint64_t v4 = a2 + 22;
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v5 = a2 + 6;
    if (a4 != 1)
    {
      v9.i16[0] = a2[18];
      v9.i16[1] = a2[2];
      v9.i16[2] = *v4;
      v9.i16[3] = a2[3];
      *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v9.i16[0] = a2[19];
      v9.i16[1] = *v5;
      v9.i16[2] = a2[23];
      v9.i16[3] = a2[7];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      a1[1] = result;
      uint64_t v4 = a2 + 24;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v5 = a2 + 8;
    }
  }
  if (a4 <= 2) {
    int v10 = 2;
  }
  else {
    int v10 = a4;
  }
  int v11 = v10 - 2;
  if (v11)
  {
    v12.i16[0] = *v4;
    v12.i16[1] = v4[4];
    v12.i32[1] = *(_DWORD *)v5;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    int16x4_t v13 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v12, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    *a1 = (int8x8_t)vuzp1_s16(v13, vrev32_s16(v13));
    v14.i16[0] = v4[1];
    v14.i16[1] = v4[5];
    v14.i32[1] = *((_DWORD *)v5 + 2);
    int16x4_t v15 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v14, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[1] = (int8x8_t)vuzp1_s16(v15, vrev32_s16(v15));
    if (v11 != 1)
    {
      int16x4_t v16 = (int16x4_t *)((char *)a1 + a3);
      v17.i16[0] = v4[2];
      v17.i16[1] = v4[6];
      v17.i32[1] = *((_DWORD *)v5 + 1);
      int16x4_t v18 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int16x4_t *v16 = vuzp1_s16(v18, vrev32_s16(v18));
      v17.i16[0] = v4[3];
      v17.i16[1] = v4[7];
      v17.i32[1] = *((_DWORD *)v5 + 3);
      int16x4_t v19 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int8x8_t result = (int8x8_t)vuzp1_s16(v19, vrev32_s16(v19));
      v16[1] = (int16x4_t)result;
    }
  }
  return result;
}

int8x8_t from_422_to_v216<2,1,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  if (a4 >= 1)
  {
    v4.i16[0] = a2[8];
    v4.i16[1] = *a2;
    v4.i16[2] = a2[10];
    v4.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v4, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v6.i16[0] = a2[9];
    v6.i16[1] = a2[2];
    v6.i16[2] = a2[11];
    v6.i16[3] = a2[3];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    if (a4 != 1)
    {
      int16x4_t v7 = (int8x8_t *)((char *)a1 + a3);
      v8.i16[0] = a2[12];
      v8.i16[1] = a2[4];
      v8.i16[2] = a2[14];
      v8.i16[3] = a2[5];
      int8x8_t *v7 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v8.i16[0] = a2[13];
      v8.i16[1] = a2[6];
      v8.i16[2] = a2[15];
      v8.i16[3] = a2[7];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v7[1] = result;
    }
  }
  return result;
}

int8x8_t from_422_to_v216<2,1,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  if (a4 >= 1)
  {
    v4.i16[0] = a2[8];
    v4.i16[1] = *a2;
    v4.i16[2] = a2[10];
    v4.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v4, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v6.i16[0] = a2[9];
    v6.i16[1] = a2[2];
    v6.i16[2] = a2[11];
    v6.i16[3] = a2[3];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    if (a4 != 1)
    {
      int16x4_t v7 = (int8x8_t *)((char *)a1 + a3);
      v8.i16[0] = a2[12];
      v8.i16[1] = a2[4];
      v8.i16[2] = a2[14];
      v8.i16[3] = a2[5];
      int8x8_t *v7 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v8.i16[0] = a2[13];
      v8.i16[1] = a2[6];
      v8.i16[2] = a2[15];
      v8.i16[3] = a2[7];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v7[1] = result;
    }
  }
  return result;
}

int8x8_t from_422_to_v216<1,2,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  if (a4 > 0)
  {
    v4.i16[0] = a2[8];
    v4.i16[1] = *a2;
    v4.i16[2] = a2[10];
    v4.i16[3] = a2[2];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v4, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t v6 = (int8x8_t *)((char *)a1 + a3);
    if (a4 != 1)
    {
      v7.i16[0] = a2[9];
      v7.i16[1] = a2[1];
      v7.i16[2] = a2[11];
      v7.i16[3] = a2[3];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *int16x4_t v6 = result;
      int16x4_t v8 = (int8x8_t *)((char *)v6 + a3);
      if (a4 <= 2) {
        int v9 = 2;
      }
      else {
        int v9 = a4;
      }
      int v10 = v9 - 2;
      if (v10)
      {
        v11.i16[0] = a2[12];
        v11.i16[1] = a2[4];
        v11.i16[2] = a2[14];
        v11.i16[3] = a2[6];
        int8x8_t result = (int8x8_t)0xF000F000F000F000;
        int8x8_t *v8 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v11, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        if (v10 != 1)
        {
          v12.i16[0] = a2[13];
          v12.i16[1] = a2[5];
          v12.i16[2] = a2[15];
          v12.i16[3] = a2[7];
          int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v12, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          *(int8x8_t *)((char *)v8 + a3) = result;
        }
      }
    }
  }
  return result;
}

int8x8_t from_422_to_v216<1,2,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  if (a4 > 0)
  {
    v4.i16[0] = a2[8];
    v4.i16[1] = *a2;
    v4.i16[2] = a2[10];
    v4.i16[3] = a2[2];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v4, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t v6 = (int8x8_t *)((char *)a1 + a3);
    if (a4 != 1)
    {
      v7.i16[0] = a2[9];
      v7.i16[1] = a2[1];
      v7.i16[2] = a2[11];
      v7.i16[3] = a2[3];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *int16x4_t v6 = result;
      int16x4_t v8 = (int8x8_t *)((char *)v6 + a3);
      if (a4 <= 2) {
        int v9 = 2;
      }
      else {
        int v9 = a4;
      }
      int v10 = v9 - 2;
      if (v10)
      {
        v11.i16[0] = a2[12];
        v11.i16[1] = a2[4];
        v11.i16[2] = a2[14];
        v11.i16[3] = a2[6];
        int8x8_t result = (int8x8_t)0xF000F000F000F000;
        int8x8_t *v8 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v11, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        if (v10 != 1)
        {
          v12.i16[0] = a2[13];
          v12.i16[1] = a2[5];
          v12.i16[2] = a2[15];
          v12.i16[3] = a2[7];
          int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v12, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          *(int8x8_t *)((char *)v8 + a3) = result;
        }
      }
    }
  }
  return result;
}

int8x8_t from_422_to_v216<1,1,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  if (a4 >= 1)
  {
    v4.i16[0] = a2[4];
    v4.i16[1] = *a2;
    v4.i16[2] = a2[5];
    v4.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v4, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    if (a4 != 1)
    {
      v6.i16[0] = a2[6];
      v6.i16[1] = a2[2];
      v6.i16[2] = a2[7];
      v6.i16[3] = a2[3];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *(int8x8_t *)((char *)a1 + a3) = result;
    }
  }
  return result;
}

int8x8_t from_422_to_v216<1,1,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  if (a4 >= 1)
  {
    v4.i16[0] = a2[4];
    v4.i16[1] = *a2;
    v4.i16[2] = a2[5];
    v4.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v4, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    if (a4 != 1)
    {
      v6.i16[0] = a2[6];
      v6.i16[1] = a2[2];
      v6.i16[2] = a2[7];
      v6.i16[3] = a2[3];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *(int8x8_t *)((char *)a1 + a3) = result;
    }
  }
  return result;
}

int32x4_t *from_422_to_y416_10bits<8,8,(AlphaOutputMethod)1,false>(int32x4_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996560, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v100 = result;
    uint64_t v101 = a5;
    unsigned int v102 = a6;
    int v103 = a3;
    int8x16_t v104 = a2;
    int v105 = a4;
    int v106 = __cxa_guard_acquire(&qword_26A996560);
    a4 = v105;
    a2 = v104;
    a3 = v103;
    a6 = v102;
    a5 = v101;
    int v107 = v106;
    int8x8_t result = v100;
    if (v107)
    {
      *(void *)&long long v108 = 0xFE00FE00FE00FE00;
      *((void *)&v108 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A9969E0 = v108;
      __cxa_guard_release(&qword_26A996560);
      a4 = v105;
      int8x8_t result = v100;
      a2 = v104;
      a3 = v103;
      a6 = v102;
      a5 = v101;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996568, memory_order_acquire) & 1) == 0)
  {
    unsigned int v109 = result;
    unsigned int v110 = a5;
    unsigned int v111 = a6;
    int v112 = a3;
    unsigned int v113 = a2;
    int v114 = a4;
    int v115 = __cxa_guard_acquire(&qword_26A996568);
    a4 = v114;
    a2 = v113;
    a3 = v112;
    a6 = v111;
    a5 = v110;
    int v116 = v115;
    int8x8_t result = v109;
    if (v116)
    {
      *(void *)&long long v117 = 0xFE00FE00FE00FE00;
      *((void *)&v117 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A9969F0 = v117;
      __cxa_guard_release(&qword_26A996568);
      a4 = v114;
      int8x8_t result = v109;
      a2 = v113;
      a3 = v112;
      a6 = v111;
      a5 = v110;
    }
  }
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int8x16_t v64 = a2 + 8;
    int v65 = a2 + 32;
    int8x16_t v66 = a2 + 40;
    int v63 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  int16x8_t v7 = (int16x8_t)xmmword_26A9969E0;
  int16x8_t v8 = (int16x8_t)xmmword_26A9969F0;
  int v9 = a4 + 8;
  v10.i64[0] = 0x8000800080008000;
  v10.i64[1] = 0x8000800080008000;
  int16x4_t v11 = (float *)result;
  do
  {
    int16x4_t v12 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v7), v8), 6uLL), v10);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v7), v8), 6uLL), v10);
    unsigned long long v15 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v13, (int8x16_t)0, 2uLL), (uint16x8_t)v13) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v16 = vzip1q_s16(v13, (int16x8_t)v15);
    unsigned long long v17 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v14, (int8x16_t)0, 2uLL), (uint16x8_t)v14) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v18 = vzip1q_s16(v14, (int16x8_t)v17);
    int16x8_t v19 = vzip2q_s16(v13, (int16x8_t)v15);
    int16x8_t v20 = vzip2q_s16(v14, (int16x8_t)v17);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v7), v8), 6uLL), v10);
    float32x2x2_t v22 = (float32x2x2_t)vzip1q_s16(*a5, v21);
    float32x2x2_t v23 = (float32x2x2_t)vzip2q_s16(*a5, v21);
    int32x4_t v24 = (int32x4_t)vzip1q_s16(v16, v18);
    int32x4_t v25 = (int32x4_t)vzip2q_s16(v16, v18);
    vst2_f32(v11, v22);
    int16x4_t v11 = (float *)((char *)v11 + a3);
    result[1] = vzip2q_s32((int32x4_t)v22, v24);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v23);
    result[3] = vzip2q_s32((int32x4_t)v23, v25);
    int16x8_t v27 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v7), v8), 6uLL), v10);
    int16x8_t v28 = a5[1];
    float32x2x2_t v29 = (float32x2x2_t)vzip1q_s16(v28, v27);
    float32x2x2_t v30 = (float32x2x2_t)vzip2q_s16(v28, v27);
    int32x4_t v31 = (int32x4_t)vzip1q_s16(v19, v20);
    int32x4_t v32 = (int32x4_t)vzip2q_s16(v19, v20);
    int16x4x2_t v33 = (float *)result[4].i32;
    vst2_f32(v33, v29);
    int v34 = (float *)result[6].i32;
    vst2_f32(v34, v30);
    result[5] = vzip2q_s32((int32x4_t)v29, v31);
    result[7] = vzip2q_s32((int32x4_t)v30, v32);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v7), v8), 6uLL), v10);
    int16x8_t v36 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v7), v8), 6uLL), v10);
    unsigned long long v37 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v35, (int8x16_t)0, 2uLL), (uint16x8_t)v35) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v38 = vzip1q_s16(v35, (int16x8_t)v37);
    unsigned long long v39 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v36, (int8x16_t)0, 2uLL), (uint16x8_t)v36) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v40 = vzip1q_s16(v36, (int16x8_t)v39);
    int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v7), v8), 6uLL), v10);
    int16x8_t v42 = *(int16x8_t *)((char *)a5 + 8 * a6);
    float32x2x2_t v43 = (float32x2x2_t)vzip1q_s16(v42, v41);
    float32x2x2_t v44 = (float32x2x2_t)vzip2q_s16(v42, v41);
    int32x4_t v45 = (int32x4_t)vzip1q_s16(v38, v40);
    int32x4_t v46 = (int32x4_t)vzip2q_s16(v38, v40);
    int16x8_t v47 = &result->i8[8 * a3];
    vst2_f32((float *)v47, v43);
    int16x8_t v48 = (int32x4_t *)(v47 + 16);
    *int16x8_t v48 = vzip2q_s32((int32x4_t)v43, v45);
    int16x8_t v49 = (float *)(v47 + 32);
    vst2_f32(v49, v44);
    *((int32x4_t *)v47 + 3) = vzip2q_s32((int32x4_t)v44, v46);
    int16x8_t v50 = a2[24];
    ++a2;
    int8x8_t result = (int32x4_t *)v11;
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v51 = vzip2q_s16(v35, (int16x8_t)v37);
    int16x8_t v52 = vzip2q_s16(v36, (int16x8_t)v39);
    int16x8_t v53 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v50, v7), v8), 6uLL), v10);
    float32x2x2_t v54 = (float32x2x2_t)vzip1q_s16(*v12, v53);
    float32x2x2_t v55 = (float32x2x2_t)vzip2q_s16(*v12, v53);
    int32x4_t v56 = (int32x4_t)vzip1q_s16(v51, v52);
    int8x16_t v57 = (float *)(v47 + 64);
    vst2_f32(v57, v54);
    int32x4_t v58 = (int32x4_t)vzip2q_s16(v51, v52);
    *((int32x4_t *)v47 + 5) = vzip2q_s32((int32x4_t)v54, v56);
    int8x16_t v59 = (float *)(v47 + 96);
    vst2_f32(v59, v55);
    *((int32x4_t *)v47 + 7) = vzip2q_s32((int32x4_t)v55, v58);
    int v60 = v9 - 1;
    int v61 = v9 - 16;
    --v9;
  }
  while (v61 > 1);
  if (a4 <= 8) {
    int v62 = 8;
  }
  else {
    int v62 = a4;
  }
  int v63 = v60 - v62;
  int8x16_t v64 = a2 + 8;
  int v65 = a2 + 32;
  int8x16_t v66 = a2 + 40;
  if (v63 >= 1)
  {
LABEL_15:
    int16x8_t v67 = (int16x8_t)xmmword_26A9969E0;
    int16x8_t v68 = (int16x8_t)xmmword_26A9969F0;
    unsigned int v69 = v63 + 1;
    int16x8_t v70 = a5 + 1;
    int v71 = result + 4;
    v72.i64[0] = 0x8000800080008000;
    v72.i64[1] = 0x8000800080008000;
    int v73 = (float *)result[4].i32;
    do
    {
      int16x8_t v74 = *v65++;
      int16x8_t v75 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v74, v67), v68), 6uLL), v72);
      int16x8_t v76 = *v66++;
      int16x8_t v77 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v76, v67), v68), 6uLL), v72);
      unsigned long long v78 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v75, (int8x16_t)0, 2uLL), (uint16x8_t)v75) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
      int16x8_t v79 = vzip1q_s16(v75, (int16x8_t)v78);
      unsigned long long v80 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v77, (int8x16_t)0, 2uLL), (uint16x8_t)v77) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
      int16x8_t v81 = vzip1q_s16(v77, (int16x8_t)v80);
      int16x8_t v82 = *a2++;
      int16x8_t v83 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v82, v67), v68), 6uLL), v72);
      int16x8_t v84 = v70[-1];
      float32x2x2_t v85 = (float32x2x2_t)vzip1q_s16(v84, v83);
      float32x2x2_t v86 = (float32x2x2_t)vzip2q_s16(v84, v83);
      int32x4_t v87 = (int32x4_t)vzip1q_s16(v79, v81);
      int32x4_t v88 = (int32x4_t)vzip2q_s16(v79, v81);
      int8x16_t v89 = (float *)v71[-4].i32;
      int16x8_t v90 = vzip2q_s16(v75, (int16x8_t)v78);
      vst2_f32(v89, v85);
      v71[-3] = vzip2q_s32((int32x4_t)v85, v87);
      int8x16_t v91 = (float *)v71[-2].i32;
      vst2_f32(v91, v86);
      v71[-1] = vzip2q_s32((int32x4_t)v86, v88);
      int16x8_t v92 = *v64++;
      int16x8_t v93 = vzip2q_s16(v77, (int16x8_t)v80);
      int16x8_t v94 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v92, v67), v68), 6uLL), v72);
      float32x2x2_t v95 = (float32x2x2_t)vzip1q_s16(*v70, v94);
      float32x2x2_t v96 = (float32x2x2_t)vzip2q_s16(*v70, v94);
      int32x4_t v97 = (int32x4_t)vzip1q_s16(v90, v93);
      vst2_f32(v73, v95);
      int v73 = (float *)((char *)v73 + a3);
      int32x4_t v98 = (int32x4_t)vzip2q_s16(v90, v93);
      v71[1] = vzip2q_s32((int32x4_t)v95, v97);
      int8x16_t v99 = (float *)v71[2].i32;
      vst2_f32(v99, v96);
      v71[3] = vzip2q_s32((int32x4_t)v96, v98);
      --v69;
      int16x8_t v70 = (int16x8_t *)((char *)v70 + a6);
      int v71 = (int32x4_t *)v73;
    }
    while (v69 > 1);
  }
  return result;
}

int32x4_t *from_422_to_y416_10bits<8,8,(AlphaOutputMethod)1,true>(int32x4_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996570, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v100 = result;
    uint64_t v101 = a5;
    unsigned int v102 = a6;
    int v103 = a3;
    int8x16_t v104 = a2;
    int v105 = a4;
    int v106 = __cxa_guard_acquire(&qword_26A996570);
    a4 = v105;
    a2 = v104;
    a3 = v103;
    a6 = v102;
    a5 = v101;
    int v107 = v106;
    int8x8_t result = v100;
    if (v107)
    {
      *(void *)&long long v108 = 0xFE00FE00FE00FE00;
      *((void *)&v108 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996A00 = v108;
      __cxa_guard_release(&qword_26A996570);
      a4 = v105;
      int8x8_t result = v100;
      a2 = v104;
      a3 = v103;
      a6 = v102;
      a5 = v101;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996578, memory_order_acquire) & 1) == 0)
  {
    unsigned int v109 = result;
    unsigned int v110 = a5;
    unsigned int v111 = a6;
    int v112 = a3;
    unsigned int v113 = a2;
    int v114 = a4;
    int v115 = __cxa_guard_acquire(&qword_26A996578);
    a4 = v114;
    a2 = v113;
    a3 = v112;
    a6 = v111;
    a5 = v110;
    int v116 = v115;
    int8x8_t result = v109;
    if (v116)
    {
      *(void *)&long long v117 = 0xFE00FE00FE00FE00;
      *((void *)&v117 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996A10 = v117;
      __cxa_guard_release(&qword_26A996578);
      a4 = v114;
      int8x8_t result = v109;
      a2 = v113;
      a3 = v112;
      a6 = v111;
      a5 = v110;
    }
  }
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int8x16_t v64 = a2 + 8;
    int v65 = a2 + 32;
    int8x16_t v66 = a2 + 40;
    int v63 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  int16x8_t v7 = (int16x8_t)xmmword_26A996A00;
  int16x8_t v8 = (int16x8_t)xmmword_26A996A10;
  int v9 = a4 + 8;
  v10.i64[0] = 0x8000800080008000;
  v10.i64[1] = 0x8000800080008000;
  int16x4_t v11 = (float *)result;
  do
  {
    int16x4_t v12 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v7), v8), 6uLL), v10);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v7), v8), 6uLL), v10);
    unsigned long long v15 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v13, (int8x16_t)0, 2uLL), (uint16x8_t)v13) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v16 = vzip1q_s16(v13, (int16x8_t)v15);
    unsigned long long v17 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v14, (int8x16_t)0, 2uLL), (uint16x8_t)v14) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v18 = vzip1q_s16(v14, (int16x8_t)v17);
    int16x8_t v19 = vzip2q_s16(v13, (int16x8_t)v15);
    int16x8_t v20 = vzip2q_s16(v14, (int16x8_t)v17);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v7), v8), 6uLL), v10);
    float32x2x2_t v22 = (float32x2x2_t)vzip1q_s16(*a5, v21);
    float32x2x2_t v23 = (float32x2x2_t)vzip2q_s16(*a5, v21);
    int32x4_t v24 = (int32x4_t)vzip1q_s16(v16, v18);
    int32x4_t v25 = (int32x4_t)vzip2q_s16(v16, v18);
    vst2_f32(v11, v22);
    int16x4_t v11 = (float *)((char *)v11 + a3);
    result[1] = vzip2q_s32((int32x4_t)v22, v24);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v23);
    result[3] = vzip2q_s32((int32x4_t)v23, v25);
    int16x8_t v27 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v7), v8), 6uLL), v10);
    int16x8_t v28 = a5[1];
    float32x2x2_t v29 = (float32x2x2_t)vzip1q_s16(v28, v27);
    float32x2x2_t v30 = (float32x2x2_t)vzip2q_s16(v28, v27);
    int32x4_t v31 = (int32x4_t)vzip1q_s16(v19, v20);
    int32x4_t v32 = (int32x4_t)vzip2q_s16(v19, v20);
    int16x4x2_t v33 = (float *)result[4].i32;
    vst2_f32(v33, v29);
    int v34 = (float *)result[6].i32;
    vst2_f32(v34, v30);
    result[5] = vzip2q_s32((int32x4_t)v29, v31);
    result[7] = vzip2q_s32((int32x4_t)v30, v32);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v7), v8), 6uLL), v10);
    int16x8_t v36 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v7), v8), 6uLL), v10);
    unsigned long long v37 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v35, (int8x16_t)0, 2uLL), (uint16x8_t)v35) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v38 = vzip1q_s16(v35, (int16x8_t)v37);
    unsigned long long v39 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v36, (int8x16_t)0, 2uLL), (uint16x8_t)v36) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v40 = vzip1q_s16(v36, (int16x8_t)v39);
    int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v7), v8), 6uLL), v10);
    int16x8_t v42 = *(int16x8_t *)((char *)a5 + 8 * a6);
    float32x2x2_t v43 = (float32x2x2_t)vzip1q_s16(v42, v41);
    float32x2x2_t v44 = (float32x2x2_t)vzip2q_s16(v42, v41);
    int32x4_t v45 = (int32x4_t)vzip1q_s16(v38, v40);
    int32x4_t v46 = (int32x4_t)vzip2q_s16(v38, v40);
    int16x8_t v47 = &result->i8[8 * a3];
    vst2_f32((float *)v47, v43);
    int16x8_t v48 = (int32x4_t *)(v47 + 16);
    *int16x8_t v48 = vzip2q_s32((int32x4_t)v43, v45);
    int16x8_t v49 = (float *)(v47 + 32);
    vst2_f32(v49, v44);
    *((int32x4_t *)v47 + 3) = vzip2q_s32((int32x4_t)v44, v46);
    int16x8_t v50 = a2[24];
    ++a2;
    int8x8_t result = (int32x4_t *)v11;
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v51 = vzip2q_s16(v35, (int16x8_t)v37);
    int16x8_t v52 = vzip2q_s16(v36, (int16x8_t)v39);
    int16x8_t v53 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v50, v7), v8), 6uLL), v10);
    float32x2x2_t v54 = (float32x2x2_t)vzip1q_s16(*v12, v53);
    float32x2x2_t v55 = (float32x2x2_t)vzip2q_s16(*v12, v53);
    int32x4_t v56 = (int32x4_t)vzip1q_s16(v51, v52);
    int8x16_t v57 = (float *)(v47 + 64);
    vst2_f32(v57, v54);
    int32x4_t v58 = (int32x4_t)vzip2q_s16(v51, v52);
    *((int32x4_t *)v47 + 5) = vzip2q_s32((int32x4_t)v54, v56);
    int8x16_t v59 = (float *)(v47 + 96);
    vst2_f32(v59, v55);
    *((int32x4_t *)v47 + 7) = vzip2q_s32((int32x4_t)v55, v58);
    int v60 = v9 - 1;
    int v61 = v9 - 16;
    --v9;
  }
  while (v61 > 1);
  if (a4 <= 8) {
    int v62 = 8;
  }
  else {
    int v62 = a4;
  }
  int v63 = v60 - v62;
  int8x16_t v64 = a2 + 8;
  int v65 = a2 + 32;
  int8x16_t v66 = a2 + 40;
  if (v63 >= 1)
  {
LABEL_15:
    int16x8_t v67 = (int16x8_t)xmmword_26A996A00;
    int16x8_t v68 = (int16x8_t)xmmword_26A996A10;
    unsigned int v69 = v63 + 1;
    int16x8_t v70 = a5 + 1;
    int v71 = result + 4;
    v72.i64[0] = 0x8000800080008000;
    v72.i64[1] = 0x8000800080008000;
    int v73 = (float *)result[4].i32;
    do
    {
      int16x8_t v74 = *v65++;
      int16x8_t v75 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v74, v67), v68), 6uLL), v72);
      int16x8_t v76 = *v66++;
      int16x8_t v77 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v76, v67), v68), 6uLL), v72);
      unsigned long long v78 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v75, (int8x16_t)0, 2uLL), (uint16x8_t)v75) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
      int16x8_t v79 = vzip1q_s16(v75, (int16x8_t)v78);
      unsigned long long v80 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v77, (int8x16_t)0, 2uLL), (uint16x8_t)v77) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
      int16x8_t v81 = vzip1q_s16(v77, (int16x8_t)v80);
      int16x8_t v82 = *a2++;
      int16x8_t v83 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v82, v67), v68), 6uLL), v72);
      int16x8_t v84 = v70[-1];
      float32x2x2_t v85 = (float32x2x2_t)vzip1q_s16(v84, v83);
      float32x2x2_t v86 = (float32x2x2_t)vzip2q_s16(v84, v83);
      int32x4_t v87 = (int32x4_t)vzip1q_s16(v79, v81);
      int32x4_t v88 = (int32x4_t)vzip2q_s16(v79, v81);
      int8x16_t v89 = (float *)v71[-4].i32;
      int16x8_t v90 = vzip2q_s16(v75, (int16x8_t)v78);
      vst2_f32(v89, v85);
      v71[-3] = vzip2q_s32((int32x4_t)v85, v87);
      int8x16_t v91 = (float *)v71[-2].i32;
      vst2_f32(v91, v86);
      v71[-1] = vzip2q_s32((int32x4_t)v86, v88);
      int16x8_t v92 = *v64++;
      int16x8_t v93 = vzip2q_s16(v77, (int16x8_t)v80);
      int16x8_t v94 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v92, v67), v68), 6uLL), v72);
      float32x2x2_t v95 = (float32x2x2_t)vzip1q_s16(*v70, v94);
      float32x2x2_t v96 = (float32x2x2_t)vzip2q_s16(*v70, v94);
      int32x4_t v97 = (int32x4_t)vzip1q_s16(v90, v93);
      vst2_f32(v73, v95);
      int v73 = (float *)((char *)v73 + a3);
      int32x4_t v98 = (int32x4_t)vzip2q_s16(v90, v93);
      v71[1] = vzip2q_s32((int32x4_t)v95, v97);
      int8x16_t v99 = (float *)v71[2].i32;
      vst2_f32(v99, v96);
      v71[3] = vzip2q_s32((int32x4_t)v96, v98);
      --v69;
      int16x8_t v70 = (int16x8_t *)((char *)v70 + a6);
      int v71 = (int32x4_t *)v73;
    }
    while (v69 > 1);
  }
  return result;
}

int32x4_t *from_422_to_y416_10bits<8,8,(AlphaOutputMethod)2,false>(int32x4_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996580, memory_order_acquire) & 1) == 0)
  {
    float32x2x2_t v95 = result;
    int v96 = a3;
    int32x4_t v97 = a2;
    int v98 = a4;
    int v99 = __cxa_guard_acquire(&qword_26A996580);
    a4 = v98;
    a2 = v97;
    a3 = v96;
    int v100 = v99;
    int8x8_t result = v95;
    if (v100)
    {
      *(void *)&long long v101 = 0xFE00FE00FE00FE00;
      *((void *)&v101 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996A20 = v101;
      __cxa_guard_release(&qword_26A996580);
      int8x8_t result = v95;
      a4 = v98;
      a2 = v97;
      a3 = v96;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996588, memory_order_acquire) & 1) == 0)
  {
    unsigned int v102 = result;
    int v103 = a3;
    int8x16_t v104 = a2;
    int v105 = a4;
    int v106 = __cxa_guard_acquire(&qword_26A996588);
    a4 = v105;
    a2 = v104;
    a3 = v103;
    int v107 = v106;
    int8x8_t result = v102;
    if (v107)
    {
      *(void *)&long long v108 = 0xFE00FE00FE00FE00;
      *((void *)&v108 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996A30 = v108;
      __cxa_guard_release(&qword_26A996588);
      int8x8_t result = v102;
      a4 = v105;
      a2 = v104;
      a3 = v103;
    }
  }
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int v60 = a2 + 8;
    int v61 = a2 + 32;
    int v62 = a2 + 40;
    int v59 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  uint64_t v5 = 2 * a3;
  int16x8_t v6 = (int16x8_t)xmmword_26A996A20;
  int16x8_t v7 = (int16x8_t)xmmword_26A996A30;
  int v8 = a4 + 8;
  v9.i64[0] = 0x8000800080008000;
  v9.i64[1] = 0x8000800080008000;
  v10.i64[0] = -1;
  v10.i64[1] = -1;
  int16x4_t v11 = (float *)result;
  do
  {
    int16x4_t v12 = (int32x4_t *)((char *)result + v5 * 4);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v6), v7), 6uLL), v9);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v6), v7), 6uLL), v9);
    unsigned long long v15 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v13, (int8x16_t)0, 2uLL), (uint16x8_t)v13) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v16 = vzip1q_s16(v13, (int16x8_t)v15);
    unsigned long long v17 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v14, (int8x16_t)0, 2uLL), (uint16x8_t)v14) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v18 = vzip1q_s16(v14, (int16x8_t)v17);
    int16x8_t v19 = vzip2q_s16(v13, (int16x8_t)v15);
    int16x8_t v20 = vzip2q_s16(v14, (int16x8_t)v17);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v6), v7), 6uLL), v9);
    float32x2x2_t v22 = (float32x2x2_t)vzip1q_s16(v10, v21);
    float32x2x2_t v23 = (float32x2x2_t)vzip2q_s16(v10, v21);
    int32x4_t v24 = (int32x4_t)vzip1q_s16(v16, v18);
    int32x4_t v25 = (int32x4_t)vzip2q_s16(v16, v18);
    vst2_f32(v11, v22);
    int16x4_t v11 = (float *)((char *)v11 + a3);
    result[1] = vzip2q_s32((int32x4_t)v22, v24);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v23);
    result[3] = vzip2q_s32((int32x4_t)v23, v25);
    int16x8_t v27 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v6), v7), 6uLL), v9);
    float32x2x2_t v28 = (float32x2x2_t)vzip1q_s16(v10, v27);
    float32x2x2_t v29 = (float32x2x2_t)vzip2q_s16(v10, v27);
    int32x4_t v30 = (int32x4_t)vzip1q_s16(v19, v20);
    int32x4_t v31 = (int32x4_t)vzip2q_s16(v19, v20);
    int32x4_t v32 = (float *)result[4].i32;
    vst2_f32(v32, v28);
    result[5] = vzip2q_s32((int32x4_t)v28, v30);
    int16x4x2_t v33 = (float *)result[6].i32;
    vst2_f32(v33, v29);
    result[7] = vzip2q_s32((int32x4_t)v29, v31);
    int16x8_t v34 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v6), v7), 6uLL), v9);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v6), v7), 6uLL), v9);
    unsigned long long v36 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v34, (int8x16_t)0, 2uLL), (uint16x8_t)v34) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v37 = vzip1q_s16(v34, (int16x8_t)v36);
    unsigned long long v38 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v35, (int8x16_t)0, 2uLL), (uint16x8_t)v35) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v39 = vzip1q_s16(v35, (int16x8_t)v38);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v6), v7), 6uLL), v9);
    float32x2x2_t v41 = (float32x2x2_t)vzip1q_s16(v10, v40);
    int32x4_t v42 = (int32x4_t)vzip1q_s16(v37, v39);
    float32x2x2_t v43 = (float *)&result->i32[v5];
    vst2_f32(v43, v41);
    v43 += 4;
    float32x2x2_t v44 = (float32x2x2_t)vzip2q_s16(v10, v40);
    int32x4_t v45 = (int32x4_t)vzip2q_s16(v37, v39);
    int32x4_t v46 = (float *)&result[2].i32[v5];
    vst2_f32(v46, v44);
    *(int32x4_t *)float32x2x2_t v43 = vzip2q_s32((int32x4_t)v41, v42);
    v12[3] = vzip2q_s32((int32x4_t)v44, v45);
    int16x8_t v47 = a2[24];
    ++a2;
    int8x8_t result = (int32x4_t *)v11;
    int16x8_t v48 = vzip2q_s16(v34, (int16x8_t)v36);
    int16x8_t v49 = vzip2q_s16(v35, (int16x8_t)v38);
    int16x8_t v50 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v47, v6), v7), 6uLL), v9);
    float32x2x2_t v51 = (float32x2x2_t)vzip1q_s16(v10, v50);
    float32x2x2_t v52 = (float32x2x2_t)vzip2q_s16(v10, v50);
    int32x4_t v53 = (int32x4_t)vzip1q_s16(v48, v49);
    float32x2x2_t v54 = (float *)v12[4].i32;
    vst2_f32(v54, v51);
    int32x4_t v55 = (int32x4_t)vzip2q_s16(v48, v49);
    v12[5] = vzip2q_s32((int32x4_t)v51, v53);
    int32x4_t v56 = (float *)v12[6].i32;
    vst2_f32(v56, v52);
    v12[7] = vzip2q_s32((int32x4_t)v52, v55);
    int v57 = v8 - 1;
    LODWORD(v56) = v8 - 16;
    --v8;
  }
  while ((int)v56 > 1);
  if (a4 <= 8) {
    int v58 = 8;
  }
  else {
    int v58 = a4;
  }
  int v59 = v57 - v58;
  int v60 = a2 + 8;
  int v61 = a2 + 32;
  int v62 = a2 + 40;
  if (v59 >= 1)
  {
LABEL_15:
    int16x8_t v63 = (int16x8_t)xmmword_26A996A20;
    int16x8_t v64 = (int16x8_t)xmmword_26A996A30;
    unsigned int v65 = v59 + 1;
    int8x16_t v66 = result + 4;
    v67.i64[0] = 0x8000800080008000;
    v67.i64[1] = 0x8000800080008000;
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    unsigned int v69 = (float *)result[4].i32;
    do
    {
      int16x8_t v70 = *v61++;
      int v71 = (float *)v66[-4].i32;
      int16x8_t v72 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v63), v64), 6uLL), v67);
      int16x8_t v73 = *v62++;
      int16x8_t v74 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v73, v63), v64), 6uLL), v67);
      unsigned long long v75 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL), (uint16x8_t)v72) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
      int16x8_t v76 = vzip1q_s16(v72, (int16x8_t)v75);
      unsigned long long v77 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v74, (int8x16_t)0, 2uLL), (uint16x8_t)v74) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
      int16x8_t v78 = vzip1q_s16(v74, (int16x8_t)v77);
      int16x8_t v79 = vzip2q_s16(v72, (int16x8_t)v75);
      int16x8_t v80 = vzip2q_s16(v74, (int16x8_t)v77);
      int16x8_t v81 = *a2++;
      int16x8_t v82 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v81, v63), v64), 6uLL), v67);
      float32x2x2_t v83 = (float32x2x2_t)vzip1q_s16(v68, v82);
      float32x2x2_t v84 = (float32x2x2_t)vzip2q_s16(v68, v82);
      int32x4_t v85 = (int32x4_t)vzip1q_s16(v76, v78);
      int32x4_t v86 = (int32x4_t)vzip2q_s16(v76, v78);
      vst2_f32(v71, v83);
      v66[-3] = vzip2q_s32((int32x4_t)v83, v85);
      int32x4_t v87 = (float *)v66[-2].i32;
      vst2_f32(v87, v84);
      v66[-1] = vzip2q_s32((int32x4_t)v84, v86);
      int16x8_t v88 = *v60++;
      int16x8_t v89 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v88, v63), v64), 6uLL), v67);
      float32x2x2_t v90 = (float32x2x2_t)vzip1q_s16(v68, v89);
      int32x4_t v91 = (int32x4_t)vzip1q_s16(v79, v80);
      vst2_f32(v69, v90);
      unsigned int v69 = (float *)((char *)v69 + a3);
      float32x2x2_t v92 = (float32x2x2_t)vzip2q_s16(v68, v89);
      int32x4_t v93 = (int32x4_t)vzip2q_s16(v79, v80);
      int16x8_t v94 = (float *)v66[2].i32;
      vst2_f32(v94, v92);
      v66[1] = vzip2q_s32((int32x4_t)v90, v91);
      v66[3] = vzip2q_s32((int32x4_t)v92, v93);
      --v65;
      int8x16_t v66 = (int32x4_t *)v69;
    }
    while (v65 > 1);
  }
  return result;
}

int32x4_t *from_422_to_y416_10bits<8,8,(AlphaOutputMethod)2,true>(int32x4_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996590, memory_order_acquire) & 1) == 0)
  {
    float32x2x2_t v95 = result;
    int v96 = a3;
    int32x4_t v97 = a2;
    int v98 = a4;
    int v99 = __cxa_guard_acquire(&qword_26A996590);
    a4 = v98;
    a2 = v97;
    a3 = v96;
    int v100 = v99;
    int8x8_t result = v95;
    if (v100)
    {
      *(void *)&long long v101 = 0xFE00FE00FE00FE00;
      *((void *)&v101 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996A40 = v101;
      __cxa_guard_release(&qword_26A996590);
      int8x8_t result = v95;
      a4 = v98;
      a2 = v97;
      a3 = v96;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996598, memory_order_acquire) & 1) == 0)
  {
    unsigned int v102 = result;
    int v103 = a3;
    int8x16_t v104 = a2;
    int v105 = a4;
    int v106 = __cxa_guard_acquire(&qword_26A996598);
    a4 = v105;
    a2 = v104;
    a3 = v103;
    int v107 = v106;
    int8x8_t result = v102;
    if (v107)
    {
      *(void *)&long long v108 = 0xFE00FE00FE00FE00;
      *((void *)&v108 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996A50 = v108;
      __cxa_guard_release(&qword_26A996598);
      int8x8_t result = v102;
      a4 = v105;
      a2 = v104;
      a3 = v103;
    }
  }
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int v60 = a2 + 8;
    int v61 = a2 + 32;
    int v62 = a2 + 40;
    int v59 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  uint64_t v5 = 2 * a3;
  int16x8_t v6 = (int16x8_t)xmmword_26A996A40;
  int16x8_t v7 = (int16x8_t)xmmword_26A996A50;
  int v8 = a4 + 8;
  v9.i64[0] = 0x8000800080008000;
  v9.i64[1] = 0x8000800080008000;
  v10.i64[0] = -1;
  v10.i64[1] = -1;
  int16x4_t v11 = (float *)result;
  do
  {
    int16x4_t v12 = (int32x4_t *)((char *)result + v5 * 4);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v6), v7), 6uLL), v9);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v6), v7), 6uLL), v9);
    unsigned long long v15 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v13, (int8x16_t)0, 2uLL), (uint16x8_t)v13) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v16 = vzip1q_s16(v13, (int16x8_t)v15);
    unsigned long long v17 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v14, (int8x16_t)0, 2uLL), (uint16x8_t)v14) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v18 = vzip1q_s16(v14, (int16x8_t)v17);
    int16x8_t v19 = vzip2q_s16(v13, (int16x8_t)v15);
    int16x8_t v20 = vzip2q_s16(v14, (int16x8_t)v17);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v6), v7), 6uLL), v9);
    float32x2x2_t v22 = (float32x2x2_t)vzip1q_s16(v10, v21);
    float32x2x2_t v23 = (float32x2x2_t)vzip2q_s16(v10, v21);
    int32x4_t v24 = (int32x4_t)vzip1q_s16(v16, v18);
    int32x4_t v25 = (int32x4_t)vzip2q_s16(v16, v18);
    vst2_f32(v11, v22);
    int16x4_t v11 = (float *)((char *)v11 + a3);
    result[1] = vzip2q_s32((int32x4_t)v22, v24);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v23);
    result[3] = vzip2q_s32((int32x4_t)v23, v25);
    int16x8_t v27 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v6), v7), 6uLL), v9);
    float32x2x2_t v28 = (float32x2x2_t)vzip1q_s16(v10, v27);
    float32x2x2_t v29 = (float32x2x2_t)vzip2q_s16(v10, v27);
    int32x4_t v30 = (int32x4_t)vzip1q_s16(v19, v20);
    int32x4_t v31 = (int32x4_t)vzip2q_s16(v19, v20);
    int32x4_t v32 = (float *)result[4].i32;
    vst2_f32(v32, v28);
    result[5] = vzip2q_s32((int32x4_t)v28, v30);
    int16x4x2_t v33 = (float *)result[6].i32;
    vst2_f32(v33, v29);
    result[7] = vzip2q_s32((int32x4_t)v29, v31);
    int16x8_t v34 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v6), v7), 6uLL), v9);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v6), v7), 6uLL), v9);
    unsigned long long v36 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v34, (int8x16_t)0, 2uLL), (uint16x8_t)v34) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v37 = vzip1q_s16(v34, (int16x8_t)v36);
    unsigned long long v38 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v35, (int8x16_t)0, 2uLL), (uint16x8_t)v35) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
    int16x8_t v39 = vzip1q_s16(v35, (int16x8_t)v38);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v6), v7), 6uLL), v9);
    float32x2x2_t v41 = (float32x2x2_t)vzip1q_s16(v10, v40);
    int32x4_t v42 = (int32x4_t)vzip1q_s16(v37, v39);
    float32x2x2_t v43 = (float *)&result->i32[v5];
    vst2_f32(v43, v41);
    v43 += 4;
    float32x2x2_t v44 = (float32x2x2_t)vzip2q_s16(v10, v40);
    int32x4_t v45 = (int32x4_t)vzip2q_s16(v37, v39);
    int32x4_t v46 = (float *)&result[2].i32[v5];
    vst2_f32(v46, v44);
    *(int32x4_t *)float32x2x2_t v43 = vzip2q_s32((int32x4_t)v41, v42);
    v12[3] = vzip2q_s32((int32x4_t)v44, v45);
    int16x8_t v47 = a2[24];
    ++a2;
    int8x8_t result = (int32x4_t *)v11;
    int16x8_t v48 = vzip2q_s16(v34, (int16x8_t)v36);
    int16x8_t v49 = vzip2q_s16(v35, (int16x8_t)v38);
    int16x8_t v50 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v47, v6), v7), 6uLL), v9);
    float32x2x2_t v51 = (float32x2x2_t)vzip1q_s16(v10, v50);
    float32x2x2_t v52 = (float32x2x2_t)vzip2q_s16(v10, v50);
    int32x4_t v53 = (int32x4_t)vzip1q_s16(v48, v49);
    float32x2x2_t v54 = (float *)v12[4].i32;
    vst2_f32(v54, v51);
    int32x4_t v55 = (int32x4_t)vzip2q_s16(v48, v49);
    v12[5] = vzip2q_s32((int32x4_t)v51, v53);
    int32x4_t v56 = (float *)v12[6].i32;
    vst2_f32(v56, v52);
    v12[7] = vzip2q_s32((int32x4_t)v52, v55);
    int v57 = v8 - 1;
    LODWORD(v56) = v8 - 16;
    --v8;
  }
  while ((int)v56 > 1);
  if (a4 <= 8) {
    int v58 = 8;
  }
  else {
    int v58 = a4;
  }
  int v59 = v57 - v58;
  int v60 = a2 + 8;
  int v61 = a2 + 32;
  int v62 = a2 + 40;
  if (v59 >= 1)
  {
LABEL_15:
    int16x8_t v63 = (int16x8_t)xmmword_26A996A40;
    int16x8_t v64 = (int16x8_t)xmmword_26A996A50;
    unsigned int v65 = v59 + 1;
    int8x16_t v66 = result + 4;
    v67.i64[0] = 0x8000800080008000;
    v67.i64[1] = 0x8000800080008000;
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    unsigned int v69 = (float *)result[4].i32;
    do
    {
      int16x8_t v70 = *v61++;
      int v71 = (float *)v66[-4].i32;
      int16x8_t v72 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v63), v64), 6uLL), v67);
      int16x8_t v73 = *v62++;
      int16x8_t v74 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v73, v63), v64), 6uLL), v67);
      unsigned long long v75 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL), (uint16x8_t)v72) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
      int16x8_t v76 = vzip1q_s16(v72, (int16x8_t)v75);
      unsigned long long v77 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v74, (int8x16_t)0, 2uLL), (uint16x8_t)v74) & __PAIR128__(0xFFC0FFC0FFC0FFC0, 0xFFC0FFC0FFC0FFC0);
      int16x8_t v78 = vzip1q_s16(v74, (int16x8_t)v77);
      int16x8_t v79 = vzip2q_s16(v72, (int16x8_t)v75);
      int16x8_t v80 = vzip2q_s16(v74, (int16x8_t)v77);
      int16x8_t v81 = *a2++;
      int16x8_t v82 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v81, v63), v64), 6uLL), v67);
      float32x2x2_t v83 = (float32x2x2_t)vzip1q_s16(v68, v82);
      float32x2x2_t v84 = (float32x2x2_t)vzip2q_s16(v68, v82);
      int32x4_t v85 = (int32x4_t)vzip1q_s16(v76, v78);
      int32x4_t v86 = (int32x4_t)vzip2q_s16(v76, v78);
      vst2_f32(v71, v83);
      v66[-3] = vzip2q_s32((int32x4_t)v83, v85);
      int32x4_t v87 = (float *)v66[-2].i32;
      vst2_f32(v87, v84);
      v66[-1] = vzip2q_s32((int32x4_t)v84, v86);
      int16x8_t v88 = *v60++;
      int16x8_t v89 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v88, v63), v64), 6uLL), v67);
      float32x2x2_t v90 = (float32x2x2_t)vzip1q_s16(v68, v89);
      int32x4_t v91 = (int32x4_t)vzip1q_s16(v79, v80);
      vst2_f32(v69, v90);
      unsigned int v69 = (float *)((char *)v69 + a3);
      float32x2x2_t v92 = (float32x2x2_t)vzip2q_s16(v68, v89);
      int32x4_t v93 = (int32x4_t)vzip2q_s16(v79, v80);
      int16x8_t v94 = (float *)v66[2].i32;
      vst2_f32(v94, v92);
      v66[1] = vzip2q_s32((int32x4_t)v90, v91);
      v66[3] = vzip2q_s32((int32x4_t)v92, v93);
      --v65;
      int8x16_t v66 = (int32x4_t *)v69;
    }
    while (v65 > 1);
  }
  return result;
}

int32x4_t *from_422_to_y416_12bits<8,8,(AlphaOutputMethod)1,false>(int32x4_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9965A0, memory_order_acquire) & 1) == 0)
  {
    int v100 = result;
    long long v101 = a5;
    unsigned int v102 = a6;
    int v103 = a3;
    int8x16_t v104 = a2;
    int v105 = a4;
    int v106 = __cxa_guard_acquire(&qword_26A9965A0);
    a4 = v105;
    a2 = v104;
    a3 = v103;
    a6 = v102;
    a5 = v101;
    int v107 = v106;
    int8x8_t result = v100;
    if (v107)
    {
      *(void *)&long long v108 = 0xF800F800F800F800;
      *((void *)&v108 + 1) = 0xF800F800F800F800;
      xmmword_26A996A60 = v108;
      __cxa_guard_release(&qword_26A9965A0);
      a4 = v105;
      int8x8_t result = v100;
      a2 = v104;
      a3 = v103;
      a6 = v102;
      a5 = v101;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9965A8, memory_order_acquire) & 1) == 0)
  {
    unsigned int v109 = result;
    unsigned int v110 = a5;
    unsigned int v111 = a6;
    int v112 = a3;
    unsigned int v113 = a2;
    int v114 = a4;
    int v115 = __cxa_guard_acquire(&qword_26A9965A8);
    a4 = v114;
    a2 = v113;
    a3 = v112;
    a6 = v111;
    a5 = v110;
    int v116 = v115;
    int8x8_t result = v109;
    if (v116)
    {
      *(void *)&long long v117 = 0xF800F800F800F800;
      *((void *)&v117 + 1) = 0xF800F800F800F800;
      xmmword_26A996A70 = v117;
      __cxa_guard_release(&qword_26A9965A8);
      a4 = v114;
      int8x8_t result = v109;
      a2 = v113;
      a3 = v112;
      a6 = v111;
      a5 = v110;
    }
  }
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v64 = a2 + 8;
    unsigned int v65 = a2 + 32;
    int8x16_t v66 = a2 + 40;
    int v63 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  int16x8_t v7 = (int16x8_t)xmmword_26A996A60;
  int16x8_t v8 = (int16x8_t)xmmword_26A996A70;
  int v9 = a4 + 8;
  v10.i64[0] = 0x8000800080008000;
  v10.i64[1] = 0x8000800080008000;
  int16x4_t v11 = (float *)result;
  do
  {
    int16x4_t v12 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v7), v8), 4uLL), v10);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v7), v8), 4uLL), v10);
    unsigned long long v15 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v13, (int8x16_t)0, 2uLL), (uint16x8_t)v13) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v16 = vzip1q_s16(v13, (int16x8_t)v15);
    unsigned long long v17 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v14, (int8x16_t)0, 2uLL), (uint16x8_t)v14) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v18 = vzip1q_s16(v14, (int16x8_t)v17);
    int16x8_t v19 = vzip2q_s16(v13, (int16x8_t)v15);
    int16x8_t v20 = vzip2q_s16(v14, (int16x8_t)v17);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v7), v8), 4uLL), v10);
    float32x2x2_t v22 = (float32x2x2_t)vzip1q_s16(*a5, v21);
    float32x2x2_t v23 = (float32x2x2_t)vzip2q_s16(*a5, v21);
    int32x4_t v24 = (int32x4_t)vzip1q_s16(v16, v18);
    int32x4_t v25 = (int32x4_t)vzip2q_s16(v16, v18);
    vst2_f32(v11, v22);
    int16x4_t v11 = (float *)((char *)v11 + a3);
    result[1] = vzip2q_s32((int32x4_t)v22, v24);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v23);
    result[3] = vzip2q_s32((int32x4_t)v23, v25);
    int16x8_t v27 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v7), v8), 4uLL), v10);
    int16x8_t v28 = a5[1];
    float32x2x2_t v29 = (float32x2x2_t)vzip1q_s16(v28, v27);
    float32x2x2_t v30 = (float32x2x2_t)vzip2q_s16(v28, v27);
    int32x4_t v31 = (int32x4_t)vzip1q_s16(v19, v20);
    int32x4_t v32 = (int32x4_t)vzip2q_s16(v19, v20);
    int16x4x2_t v33 = (float *)result[4].i32;
    vst2_f32(v33, v29);
    int16x8_t v34 = (float *)result[6].i32;
    vst2_f32(v34, v30);
    result[5] = vzip2q_s32((int32x4_t)v29, v31);
    result[7] = vzip2q_s32((int32x4_t)v30, v32);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v7), v8), 4uLL), v10);
    int16x8_t v36 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v7), v8), 4uLL), v10);
    unsigned long long v37 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v35, (int8x16_t)0, 2uLL), (uint16x8_t)v35) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v38 = vzip1q_s16(v35, (int16x8_t)v37);
    unsigned long long v39 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v36, (int8x16_t)0, 2uLL), (uint16x8_t)v36) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v40 = vzip1q_s16(v36, (int16x8_t)v39);
    int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v7), v8), 4uLL), v10);
    int16x8_t v42 = *(int16x8_t *)((char *)a5 + 8 * a6);
    float32x2x2_t v43 = (float32x2x2_t)vzip1q_s16(v42, v41);
    float32x2x2_t v44 = (float32x2x2_t)vzip2q_s16(v42, v41);
    int32x4_t v45 = (int32x4_t)vzip1q_s16(v38, v40);
    int32x4_t v46 = (int32x4_t)vzip2q_s16(v38, v40);
    int16x8_t v47 = &result->i8[8 * a3];
    vst2_f32((float *)v47, v43);
    int16x8_t v48 = (int32x4_t *)(v47 + 16);
    *int16x8_t v48 = vzip2q_s32((int32x4_t)v43, v45);
    int16x8_t v49 = (float *)(v47 + 32);
    vst2_f32(v49, v44);
    *((int32x4_t *)v47 + 3) = vzip2q_s32((int32x4_t)v44, v46);
    int16x8_t v50 = a2[24];
    ++a2;
    int8x8_t result = (int32x4_t *)v11;
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v51 = vzip2q_s16(v35, (int16x8_t)v37);
    int16x8_t v52 = vzip2q_s16(v36, (int16x8_t)v39);
    int16x8_t v53 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v50, v7), v8), 4uLL), v10);
    float32x2x2_t v54 = (float32x2x2_t)vzip1q_s16(*v12, v53);
    float32x2x2_t v55 = (float32x2x2_t)vzip2q_s16(*v12, v53);
    int32x4_t v56 = (int32x4_t)vzip1q_s16(v51, v52);
    int v57 = (float *)(v47 + 64);
    vst2_f32(v57, v54);
    int32x4_t v58 = (int32x4_t)vzip2q_s16(v51, v52);
    *((int32x4_t *)v47 + 5) = vzip2q_s32((int32x4_t)v54, v56);
    int v59 = (float *)(v47 + 96);
    vst2_f32(v59, v55);
    *((int32x4_t *)v47 + 7) = vzip2q_s32((int32x4_t)v55, v58);
    int v60 = v9 - 1;
    int v61 = v9 - 16;
    --v9;
  }
  while (v61 > 1);
  if (a4 <= 8) {
    int v62 = 8;
  }
  else {
    int v62 = a4;
  }
  int v63 = v60 - v62;
  int16x8_t v64 = a2 + 8;
  unsigned int v65 = a2 + 32;
  int8x16_t v66 = a2 + 40;
  if (v63 >= 1)
  {
LABEL_15:
    int16x8_t v67 = (int16x8_t)xmmword_26A996A60;
    int16x8_t v68 = (int16x8_t)xmmword_26A996A70;
    unsigned int v69 = v63 + 1;
    int16x8_t v70 = a5 + 1;
    int v71 = result + 4;
    v72.i64[0] = 0x8000800080008000;
    v72.i64[1] = 0x8000800080008000;
    int16x8_t v73 = (float *)result[4].i32;
    do
    {
      int16x8_t v74 = *v65++;
      int16x8_t v75 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v74, v67), v68), 4uLL), v72);
      int16x8_t v76 = *v66++;
      int16x8_t v77 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v76, v67), v68), 4uLL), v72);
      unsigned long long v78 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v75, (int8x16_t)0, 2uLL), (uint16x8_t)v75) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
      int16x8_t v79 = vzip1q_s16(v75, (int16x8_t)v78);
      unsigned long long v80 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v77, (int8x16_t)0, 2uLL), (uint16x8_t)v77) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
      int16x8_t v81 = vzip1q_s16(v77, (int16x8_t)v80);
      int16x8_t v82 = *a2++;
      int16x8_t v83 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v82, v67), v68), 4uLL), v72);
      int16x8_t v84 = v70[-1];
      float32x2x2_t v85 = (float32x2x2_t)vzip1q_s16(v84, v83);
      float32x2x2_t v86 = (float32x2x2_t)vzip2q_s16(v84, v83);
      int32x4_t v87 = (int32x4_t)vzip1q_s16(v79, v81);
      int32x4_t v88 = (int32x4_t)vzip2q_s16(v79, v81);
      int16x8_t v89 = (float *)v71[-4].i32;
      int16x8_t v90 = vzip2q_s16(v75, (int16x8_t)v78);
      vst2_f32(v89, v85);
      v71[-3] = vzip2q_s32((int32x4_t)v85, v87);
      int32x4_t v91 = (float *)v71[-2].i32;
      vst2_f32(v91, v86);
      v71[-1] = vzip2q_s32((int32x4_t)v86, v88);
      int16x8_t v92 = *v64++;
      int16x8_t v93 = vzip2q_s16(v77, (int16x8_t)v80);
      int16x8_t v94 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v92, v67), v68), 4uLL), v72);
      float32x2x2_t v95 = (float32x2x2_t)vzip1q_s16(*v70, v94);
      float32x2x2_t v96 = (float32x2x2_t)vzip2q_s16(*v70, v94);
      int32x4_t v97 = (int32x4_t)vzip1q_s16(v90, v93);
      vst2_f32(v73, v95);
      int16x8_t v73 = (float *)((char *)v73 + a3);
      int32x4_t v98 = (int32x4_t)vzip2q_s16(v90, v93);
      v71[1] = vzip2q_s32((int32x4_t)v95, v97);
      int v99 = (float *)v71[2].i32;
      vst2_f32(v99, v96);
      v71[3] = vzip2q_s32((int32x4_t)v96, v98);
      --v69;
      int16x8_t v70 = (int16x8_t *)((char *)v70 + a6);
      int v71 = (int32x4_t *)v73;
    }
    while (v69 > 1);
  }
  return result;
}

int32x4_t *from_422_to_y416_12bits<8,8,(AlphaOutputMethod)1,true>(int32x4_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9965B0, memory_order_acquire) & 1) == 0)
  {
    int v100 = result;
    long long v101 = a5;
    unsigned int v102 = a6;
    int v103 = a3;
    int8x16_t v104 = a2;
    int v105 = a4;
    int v106 = __cxa_guard_acquire(&qword_26A9965B0);
    a4 = v105;
    a2 = v104;
    a3 = v103;
    a6 = v102;
    a5 = v101;
    int v107 = v106;
    int8x8_t result = v100;
    if (v107)
    {
      *(void *)&long long v108 = 0xF800F800F800F800;
      *((void *)&v108 + 1) = 0xF800F800F800F800;
      xmmword_26A996A80 = v108;
      __cxa_guard_release(&qword_26A9965B0);
      a4 = v105;
      int8x8_t result = v100;
      a2 = v104;
      a3 = v103;
      a6 = v102;
      a5 = v101;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9965B8, memory_order_acquire) & 1) == 0)
  {
    unsigned int v109 = result;
    unsigned int v110 = a5;
    unsigned int v111 = a6;
    int v112 = a3;
    unsigned int v113 = a2;
    int v114 = a4;
    int v115 = __cxa_guard_acquire(&qword_26A9965B8);
    a4 = v114;
    a2 = v113;
    a3 = v112;
    a6 = v111;
    a5 = v110;
    int v116 = v115;
    int8x8_t result = v109;
    if (v116)
    {
      *(void *)&long long v117 = 0xF800F800F800F800;
      *((void *)&v117 + 1) = 0xF800F800F800F800;
      xmmword_26A996A90 = v117;
      __cxa_guard_release(&qword_26A9965B8);
      a4 = v114;
      int8x8_t result = v109;
      a2 = v113;
      a3 = v112;
      a6 = v111;
      a5 = v110;
    }
  }
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v64 = a2 + 8;
    unsigned int v65 = a2 + 32;
    int8x16_t v66 = a2 + 40;
    int v63 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  int16x8_t v7 = (int16x8_t)xmmword_26A996A80;
  int16x8_t v8 = (int16x8_t)xmmword_26A996A90;
  int v9 = a4 + 8;
  v10.i64[0] = 0x8000800080008000;
  v10.i64[1] = 0x8000800080008000;
  int16x4_t v11 = (float *)result;
  do
  {
    int16x4_t v12 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v7), v8), 4uLL), v10);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v7), v8), 4uLL), v10);
    unsigned long long v15 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v13, (int8x16_t)0, 2uLL), (uint16x8_t)v13) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v16 = vzip1q_s16(v13, (int16x8_t)v15);
    unsigned long long v17 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v14, (int8x16_t)0, 2uLL), (uint16x8_t)v14) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v18 = vzip1q_s16(v14, (int16x8_t)v17);
    int16x8_t v19 = vzip2q_s16(v13, (int16x8_t)v15);
    int16x8_t v20 = vzip2q_s16(v14, (int16x8_t)v17);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v7), v8), 4uLL), v10);
    float32x2x2_t v22 = (float32x2x2_t)vzip1q_s16(*a5, v21);
    float32x2x2_t v23 = (float32x2x2_t)vzip2q_s16(*a5, v21);
    int32x4_t v24 = (int32x4_t)vzip1q_s16(v16, v18);
    int32x4_t v25 = (int32x4_t)vzip2q_s16(v16, v18);
    vst2_f32(v11, v22);
    int16x4_t v11 = (float *)((char *)v11 + a3);
    result[1] = vzip2q_s32((int32x4_t)v22, v24);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v23);
    result[3] = vzip2q_s32((int32x4_t)v23, v25);
    int16x8_t v27 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v7), v8), 4uLL), v10);
    int16x8_t v28 = a5[1];
    float32x2x2_t v29 = (float32x2x2_t)vzip1q_s16(v28, v27);
    float32x2x2_t v30 = (float32x2x2_t)vzip2q_s16(v28, v27);
    int32x4_t v31 = (int32x4_t)vzip1q_s16(v19, v20);
    int32x4_t v32 = (int32x4_t)vzip2q_s16(v19, v20);
    int16x4x2_t v33 = (float *)result[4].i32;
    vst2_f32(v33, v29);
    int16x8_t v34 = (float *)result[6].i32;
    vst2_f32(v34, v30);
    result[5] = vzip2q_s32((int32x4_t)v29, v31);
    result[7] = vzip2q_s32((int32x4_t)v30, v32);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v7), v8), 4uLL), v10);
    int16x8_t v36 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v7), v8), 4uLL), v10);
    unsigned long long v37 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v35, (int8x16_t)0, 2uLL), (uint16x8_t)v35) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v38 = vzip1q_s16(v35, (int16x8_t)v37);
    unsigned long long v39 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v36, (int8x16_t)0, 2uLL), (uint16x8_t)v36) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v40 = vzip1q_s16(v36, (int16x8_t)v39);
    int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v7), v8), 4uLL), v10);
    int16x8_t v42 = *(int16x8_t *)((char *)a5 + 8 * a6);
    float32x2x2_t v43 = (float32x2x2_t)vzip1q_s16(v42, v41);
    float32x2x2_t v44 = (float32x2x2_t)vzip2q_s16(v42, v41);
    int32x4_t v45 = (int32x4_t)vzip1q_s16(v38, v40);
    int32x4_t v46 = (int32x4_t)vzip2q_s16(v38, v40);
    int16x8_t v47 = &result->i8[8 * a3];
    vst2_f32((float *)v47, v43);
    int16x8_t v48 = (int32x4_t *)(v47 + 16);
    *int16x8_t v48 = vzip2q_s32((int32x4_t)v43, v45);
    int16x8_t v49 = (float *)(v47 + 32);
    vst2_f32(v49, v44);
    *((int32x4_t *)v47 + 3) = vzip2q_s32((int32x4_t)v44, v46);
    int16x8_t v50 = a2[24];
    ++a2;
    int8x8_t result = (int32x4_t *)v11;
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v51 = vzip2q_s16(v35, (int16x8_t)v37);
    int16x8_t v52 = vzip2q_s16(v36, (int16x8_t)v39);
    int16x8_t v53 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v50, v7), v8), 4uLL), v10);
    float32x2x2_t v54 = (float32x2x2_t)vzip1q_s16(*v12, v53);
    float32x2x2_t v55 = (float32x2x2_t)vzip2q_s16(*v12, v53);
    int32x4_t v56 = (int32x4_t)vzip1q_s16(v51, v52);
    int v57 = (float *)(v47 + 64);
    vst2_f32(v57, v54);
    int32x4_t v58 = (int32x4_t)vzip2q_s16(v51, v52);
    *((int32x4_t *)v47 + 5) = vzip2q_s32((int32x4_t)v54, v56);
    int v59 = (float *)(v47 + 96);
    vst2_f32(v59, v55);
    *((int32x4_t *)v47 + 7) = vzip2q_s32((int32x4_t)v55, v58);
    int v60 = v9 - 1;
    int v61 = v9 - 16;
    --v9;
  }
  while (v61 > 1);
  if (a4 <= 8) {
    int v62 = 8;
  }
  else {
    int v62 = a4;
  }
  int v63 = v60 - v62;
  int16x8_t v64 = a2 + 8;
  unsigned int v65 = a2 + 32;
  int8x16_t v66 = a2 + 40;
  if (v63 >= 1)
  {
LABEL_15:
    int16x8_t v67 = (int16x8_t)xmmword_26A996A80;
    int16x8_t v68 = (int16x8_t)xmmword_26A996A90;
    unsigned int v69 = v63 + 1;
    int16x8_t v70 = a5 + 1;
    int v71 = result + 4;
    v72.i64[0] = 0x8000800080008000;
    v72.i64[1] = 0x8000800080008000;
    int16x8_t v73 = (float *)result[4].i32;
    do
    {
      int16x8_t v74 = *v65++;
      int16x8_t v75 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v74, v67), v68), 4uLL), v72);
      int16x8_t v76 = *v66++;
      int16x8_t v77 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v76, v67), v68), 4uLL), v72);
      unsigned long long v78 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v75, (int8x16_t)0, 2uLL), (uint16x8_t)v75) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
      int16x8_t v79 = vzip1q_s16(v75, (int16x8_t)v78);
      unsigned long long v80 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v77, (int8x16_t)0, 2uLL), (uint16x8_t)v77) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
      int16x8_t v81 = vzip1q_s16(v77, (int16x8_t)v80);
      int16x8_t v82 = *a2++;
      int16x8_t v83 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v82, v67), v68), 4uLL), v72);
      int16x8_t v84 = v70[-1];
      float32x2x2_t v85 = (float32x2x2_t)vzip1q_s16(v84, v83);
      float32x2x2_t v86 = (float32x2x2_t)vzip2q_s16(v84, v83);
      int32x4_t v87 = (int32x4_t)vzip1q_s16(v79, v81);
      int32x4_t v88 = (int32x4_t)vzip2q_s16(v79, v81);
      int16x8_t v89 = (float *)v71[-4].i32;
      int16x8_t v90 = vzip2q_s16(v75, (int16x8_t)v78);
      vst2_f32(v89, v85);
      v71[-3] = vzip2q_s32((int32x4_t)v85, v87);
      int32x4_t v91 = (float *)v71[-2].i32;
      vst2_f32(v91, v86);
      v71[-1] = vzip2q_s32((int32x4_t)v86, v88);
      int16x8_t v92 = *v64++;
      int16x8_t v93 = vzip2q_s16(v77, (int16x8_t)v80);
      int16x8_t v94 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v92, v67), v68), 4uLL), v72);
      float32x2x2_t v95 = (float32x2x2_t)vzip1q_s16(*v70, v94);
      float32x2x2_t v96 = (float32x2x2_t)vzip2q_s16(*v70, v94);
      int32x4_t v97 = (int32x4_t)vzip1q_s16(v90, v93);
      vst2_f32(v73, v95);
      int16x8_t v73 = (float *)((char *)v73 + a3);
      int32x4_t v98 = (int32x4_t)vzip2q_s16(v90, v93);
      v71[1] = vzip2q_s32((int32x4_t)v95, v97);
      int v99 = (float *)v71[2].i32;
      vst2_f32(v99, v96);
      v71[3] = vzip2q_s32((int32x4_t)v96, v98);
      --v69;
      int16x8_t v70 = (int16x8_t *)((char *)v70 + a6);
      int v71 = (int32x4_t *)v73;
    }
    while (v69 > 1);
  }
  return result;
}

int32x4_t *from_422_to_y416_12bits<8,8,(AlphaOutputMethod)2,false>(int32x4_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9965C0, memory_order_acquire) & 1) == 0)
  {
    float32x2x2_t v95 = result;
    int v96 = a3;
    int32x4_t v97 = a2;
    int v98 = a4;
    int v99 = __cxa_guard_acquire(&qword_26A9965C0);
    a4 = v98;
    a2 = v97;
    a3 = v96;
    int v100 = v99;
    int8x8_t result = v95;
    if (v100)
    {
      *(void *)&long long v101 = 0xF800F800F800F800;
      *((void *)&v101 + 1) = 0xF800F800F800F800;
      xmmword_26A996AA0 = v101;
      __cxa_guard_release(&qword_26A9965C0);
      int8x8_t result = v95;
      a4 = v98;
      a2 = v97;
      a3 = v96;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9965C8, memory_order_acquire) & 1) == 0)
  {
    unsigned int v102 = result;
    int v103 = a3;
    int8x16_t v104 = a2;
    int v105 = a4;
    int v106 = __cxa_guard_acquire(&qword_26A9965C8);
    a4 = v105;
    a2 = v104;
    a3 = v103;
    int v107 = v106;
    int8x8_t result = v102;
    if (v107)
    {
      *(void *)&long long v108 = 0xF800F800F800F800;
      *((void *)&v108 + 1) = 0xF800F800F800F800;
      xmmword_26A996AB0 = v108;
      __cxa_guard_release(&qword_26A9965C8);
      int8x8_t result = v102;
      a4 = v105;
      a2 = v104;
      a3 = v103;
    }
  }
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int v60 = a2 + 8;
    int v61 = a2 + 32;
    int v62 = a2 + 40;
    int v59 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  uint64_t v5 = 2 * a3;
  int16x8_t v6 = (int16x8_t)xmmword_26A996AA0;
  int16x8_t v7 = (int16x8_t)xmmword_26A996AB0;
  int v8 = a4 + 8;
  v9.i64[0] = 0x8000800080008000;
  v9.i64[1] = 0x8000800080008000;
  v10.i64[0] = -1;
  v10.i64[1] = -1;
  int16x4_t v11 = (float *)result;
  do
  {
    int16x4_t v12 = (int32x4_t *)((char *)result + v5 * 4);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v6), v7), 4uLL), v9);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v6), v7), 4uLL), v9);
    unsigned long long v15 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v13, (int8x16_t)0, 2uLL), (uint16x8_t)v13) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v16 = vzip1q_s16(v13, (int16x8_t)v15);
    unsigned long long v17 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v14, (int8x16_t)0, 2uLL), (uint16x8_t)v14) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v18 = vzip1q_s16(v14, (int16x8_t)v17);
    int16x8_t v19 = vzip2q_s16(v13, (int16x8_t)v15);
    int16x8_t v20 = vzip2q_s16(v14, (int16x8_t)v17);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v6), v7), 4uLL), v9);
    float32x2x2_t v22 = (float32x2x2_t)vzip1q_s16(v10, v21);
    float32x2x2_t v23 = (float32x2x2_t)vzip2q_s16(v10, v21);
    int32x4_t v24 = (int32x4_t)vzip1q_s16(v16, v18);
    int32x4_t v25 = (int32x4_t)vzip2q_s16(v16, v18);
    vst2_f32(v11, v22);
    int16x4_t v11 = (float *)((char *)v11 + a3);
    result[1] = vzip2q_s32((int32x4_t)v22, v24);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v23);
    result[3] = vzip2q_s32((int32x4_t)v23, v25);
    int16x8_t v27 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v6), v7), 4uLL), v9);
    float32x2x2_t v28 = (float32x2x2_t)vzip1q_s16(v10, v27);
    float32x2x2_t v29 = (float32x2x2_t)vzip2q_s16(v10, v27);
    int32x4_t v30 = (int32x4_t)vzip1q_s16(v19, v20);
    int32x4_t v31 = (int32x4_t)vzip2q_s16(v19, v20);
    int32x4_t v32 = (float *)result[4].i32;
    vst2_f32(v32, v28);
    result[5] = vzip2q_s32((int32x4_t)v28, v30);
    int16x4x2_t v33 = (float *)result[6].i32;
    vst2_f32(v33, v29);
    result[7] = vzip2q_s32((int32x4_t)v29, v31);
    int16x8_t v34 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v6), v7), 4uLL), v9);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v6), v7), 4uLL), v9);
    unsigned long long v36 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v34, (int8x16_t)0, 2uLL), (uint16x8_t)v34) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v37 = vzip1q_s16(v34, (int16x8_t)v36);
    unsigned long long v38 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v35, (int8x16_t)0, 2uLL), (uint16x8_t)v35) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v39 = vzip1q_s16(v35, (int16x8_t)v38);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v6), v7), 4uLL), v9);
    float32x2x2_t v41 = (float32x2x2_t)vzip1q_s16(v10, v40);
    int32x4_t v42 = (int32x4_t)vzip1q_s16(v37, v39);
    float32x2x2_t v43 = (float *)&result->i32[v5];
    vst2_f32(v43, v41);
    v43 += 4;
    float32x2x2_t v44 = (float32x2x2_t)vzip2q_s16(v10, v40);
    int32x4_t v45 = (int32x4_t)vzip2q_s16(v37, v39);
    int32x4_t v46 = (float *)&result[2].i32[v5];
    vst2_f32(v46, v44);
    *(int32x4_t *)float32x2x2_t v43 = vzip2q_s32((int32x4_t)v41, v42);
    v12[3] = vzip2q_s32((int32x4_t)v44, v45);
    int16x8_t v47 = a2[24];
    ++a2;
    int8x8_t result = (int32x4_t *)v11;
    int16x8_t v48 = vzip2q_s16(v34, (int16x8_t)v36);
    int16x8_t v49 = vzip2q_s16(v35, (int16x8_t)v38);
    int16x8_t v50 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v47, v6), v7), 4uLL), v9);
    float32x2x2_t v51 = (float32x2x2_t)vzip1q_s16(v10, v50);
    float32x2x2_t v52 = (float32x2x2_t)vzip2q_s16(v10, v50);
    int32x4_t v53 = (int32x4_t)vzip1q_s16(v48, v49);
    float32x2x2_t v54 = (float *)v12[4].i32;
    vst2_f32(v54, v51);
    int32x4_t v55 = (int32x4_t)vzip2q_s16(v48, v49);
    v12[5] = vzip2q_s32((int32x4_t)v51, v53);
    int32x4_t v56 = (float *)v12[6].i32;
    vst2_f32(v56, v52);
    v12[7] = vzip2q_s32((int32x4_t)v52, v55);
    int v57 = v8 - 1;
    LODWORD(v56) = v8 - 16;
    --v8;
  }
  while ((int)v56 > 1);
  if (a4 <= 8) {
    int v58 = 8;
  }
  else {
    int v58 = a4;
  }
  int v59 = v57 - v58;
  int v60 = a2 + 8;
  int v61 = a2 + 32;
  int v62 = a2 + 40;
  if (v59 >= 1)
  {
LABEL_15:
    int16x8_t v63 = (int16x8_t)xmmword_26A996AA0;
    int16x8_t v64 = (int16x8_t)xmmword_26A996AB0;
    unsigned int v65 = v59 + 1;
    int8x16_t v66 = result + 4;
    v67.i64[0] = 0x8000800080008000;
    v67.i64[1] = 0x8000800080008000;
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    unsigned int v69 = (float *)result[4].i32;
    do
    {
      int16x8_t v70 = *v61++;
      int v71 = (float *)v66[-4].i32;
      int16x8_t v72 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v63), v64), 4uLL), v67);
      int16x8_t v73 = *v62++;
      int16x8_t v74 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v73, v63), v64), 4uLL), v67);
      unsigned long long v75 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL), (uint16x8_t)v72) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
      int16x8_t v76 = vzip1q_s16(v72, (int16x8_t)v75);
      unsigned long long v77 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v74, (int8x16_t)0, 2uLL), (uint16x8_t)v74) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
      int16x8_t v78 = vzip1q_s16(v74, (int16x8_t)v77);
      int16x8_t v79 = vzip2q_s16(v72, (int16x8_t)v75);
      int16x8_t v80 = vzip2q_s16(v74, (int16x8_t)v77);
      int16x8_t v81 = *a2++;
      int16x8_t v82 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v81, v63), v64), 4uLL), v67);
      float32x2x2_t v83 = (float32x2x2_t)vzip1q_s16(v68, v82);
      float32x2x2_t v84 = (float32x2x2_t)vzip2q_s16(v68, v82);
      int32x4_t v85 = (int32x4_t)vzip1q_s16(v76, v78);
      int32x4_t v86 = (int32x4_t)vzip2q_s16(v76, v78);
      vst2_f32(v71, v83);
      v66[-3] = vzip2q_s32((int32x4_t)v83, v85);
      int32x4_t v87 = (float *)v66[-2].i32;
      vst2_f32(v87, v84);
      v66[-1] = vzip2q_s32((int32x4_t)v84, v86);
      int16x8_t v88 = *v60++;
      int16x8_t v89 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v88, v63), v64), 4uLL), v67);
      float32x2x2_t v90 = (float32x2x2_t)vzip1q_s16(v68, v89);
      int32x4_t v91 = (int32x4_t)vzip1q_s16(v79, v80);
      vst2_f32(v69, v90);
      unsigned int v69 = (float *)((char *)v69 + a3);
      float32x2x2_t v92 = (float32x2x2_t)vzip2q_s16(v68, v89);
      int32x4_t v93 = (int32x4_t)vzip2q_s16(v79, v80);
      int16x8_t v94 = (float *)v66[2].i32;
      vst2_f32(v94, v92);
      v66[1] = vzip2q_s32((int32x4_t)v90, v91);
      v66[3] = vzip2q_s32((int32x4_t)v92, v93);
      --v65;
      int8x16_t v66 = (int32x4_t *)v69;
    }
    while (v65 > 1);
  }
  return result;
}

int32x4_t *from_422_to_y416_12bits<8,8,(AlphaOutputMethod)2,true>(int32x4_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9965D0, memory_order_acquire) & 1) == 0)
  {
    float32x2x2_t v95 = result;
    int v96 = a3;
    int32x4_t v97 = a2;
    int v98 = a4;
    int v99 = __cxa_guard_acquire(&qword_26A9965D0);
    a4 = v98;
    a2 = v97;
    a3 = v96;
    int v100 = v99;
    int8x8_t result = v95;
    if (v100)
    {
      *(void *)&long long v101 = 0xF800F800F800F800;
      *((void *)&v101 + 1) = 0xF800F800F800F800;
      xmmword_26A996AC0 = v101;
      __cxa_guard_release(&qword_26A9965D0);
      int8x8_t result = v95;
      a4 = v98;
      a2 = v97;
      a3 = v96;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9965D8, memory_order_acquire) & 1) == 0)
  {
    unsigned int v102 = result;
    int v103 = a3;
    int8x16_t v104 = a2;
    int v105 = a4;
    int v106 = __cxa_guard_acquire(&qword_26A9965D8);
    a4 = v105;
    a2 = v104;
    a3 = v103;
    int v107 = v106;
    int8x8_t result = v102;
    if (v107)
    {
      *(void *)&long long v108 = 0xF800F800F800F800;
      *((void *)&v108 + 1) = 0xF800F800F800F800;
      xmmword_26A996AD0 = v108;
      __cxa_guard_release(&qword_26A9965D8);
      int8x8_t result = v102;
      a4 = v105;
      a2 = v104;
      a3 = v103;
    }
  }
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int v60 = a2 + 8;
    int v61 = a2 + 32;
    int v62 = a2 + 40;
    int v59 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  uint64_t v5 = 2 * a3;
  int16x8_t v6 = (int16x8_t)xmmword_26A996AC0;
  int16x8_t v7 = (int16x8_t)xmmword_26A996AD0;
  int v8 = a4 + 8;
  v9.i64[0] = 0x8000800080008000;
  v9.i64[1] = 0x8000800080008000;
  v10.i64[0] = -1;
  v10.i64[1] = -1;
  int16x4_t v11 = (float *)result;
  do
  {
    int16x4_t v12 = (int32x4_t *)((char *)result + v5 * 4);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v6), v7), 4uLL), v9);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v6), v7), 4uLL), v9);
    unsigned long long v15 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v13, (int8x16_t)0, 2uLL), (uint16x8_t)v13) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v16 = vzip1q_s16(v13, (int16x8_t)v15);
    unsigned long long v17 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v14, (int8x16_t)0, 2uLL), (uint16x8_t)v14) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v18 = vzip1q_s16(v14, (int16x8_t)v17);
    int16x8_t v19 = vzip2q_s16(v13, (int16x8_t)v15);
    int16x8_t v20 = vzip2q_s16(v14, (int16x8_t)v17);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v6), v7), 4uLL), v9);
    float32x2x2_t v22 = (float32x2x2_t)vzip1q_s16(v10, v21);
    float32x2x2_t v23 = (float32x2x2_t)vzip2q_s16(v10, v21);
    int32x4_t v24 = (int32x4_t)vzip1q_s16(v16, v18);
    int32x4_t v25 = (int32x4_t)vzip2q_s16(v16, v18);
    vst2_f32(v11, v22);
    int16x4_t v11 = (float *)((char *)v11 + a3);
    result[1] = vzip2q_s32((int32x4_t)v22, v24);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v23);
    result[3] = vzip2q_s32((int32x4_t)v23, v25);
    int16x8_t v27 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v6), v7), 4uLL), v9);
    float32x2x2_t v28 = (float32x2x2_t)vzip1q_s16(v10, v27);
    float32x2x2_t v29 = (float32x2x2_t)vzip2q_s16(v10, v27);
    int32x4_t v30 = (int32x4_t)vzip1q_s16(v19, v20);
    int32x4_t v31 = (int32x4_t)vzip2q_s16(v19, v20);
    int32x4_t v32 = (float *)result[4].i32;
    vst2_f32(v32, v28);
    result[5] = vzip2q_s32((int32x4_t)v28, v30);
    int16x4x2_t v33 = (float *)result[6].i32;
    vst2_f32(v33, v29);
    result[7] = vzip2q_s32((int32x4_t)v29, v31);
    int16x8_t v34 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v6), v7), 4uLL), v9);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v6), v7), 4uLL), v9);
    unsigned long long v36 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v34, (int8x16_t)0, 2uLL), (uint16x8_t)v34) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v37 = vzip1q_s16(v34, (int16x8_t)v36);
    unsigned long long v38 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v35, (int8x16_t)0, 2uLL), (uint16x8_t)v35) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
    int16x8_t v39 = vzip1q_s16(v35, (int16x8_t)v38);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v6), v7), 4uLL), v9);
    float32x2x2_t v41 = (float32x2x2_t)vzip1q_s16(v10, v40);
    int32x4_t v42 = (int32x4_t)vzip1q_s16(v37, v39);
    float32x2x2_t v43 = (float *)&result->i32[v5];
    vst2_f32(v43, v41);
    v43 += 4;
    float32x2x2_t v44 = (float32x2x2_t)vzip2q_s16(v10, v40);
    int32x4_t v45 = (int32x4_t)vzip2q_s16(v37, v39);
    int32x4_t v46 = (float *)&result[2].i32[v5];
    vst2_f32(v46, v44);
    *(int32x4_t *)float32x2x2_t v43 = vzip2q_s32((int32x4_t)v41, v42);
    v12[3] = vzip2q_s32((int32x4_t)v44, v45);
    int16x8_t v47 = a2[24];
    ++a2;
    int8x8_t result = (int32x4_t *)v11;
    int16x8_t v48 = vzip2q_s16(v34, (int16x8_t)v36);
    int16x8_t v49 = vzip2q_s16(v35, (int16x8_t)v38);
    int16x8_t v50 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v47, v6), v7), 4uLL), v9);
    float32x2x2_t v51 = (float32x2x2_t)vzip1q_s16(v10, v50);
    float32x2x2_t v52 = (float32x2x2_t)vzip2q_s16(v10, v50);
    int32x4_t v53 = (int32x4_t)vzip1q_s16(v48, v49);
    float32x2x2_t v54 = (float *)v12[4].i32;
    vst2_f32(v54, v51);
    int32x4_t v55 = (int32x4_t)vzip2q_s16(v48, v49);
    v12[5] = vzip2q_s32((int32x4_t)v51, v53);
    int32x4_t v56 = (float *)v12[6].i32;
    vst2_f32(v56, v52);
    v12[7] = vzip2q_s32((int32x4_t)v52, v55);
    int v57 = v8 - 1;
    LODWORD(v56) = v8 - 16;
    --v8;
  }
  while ((int)v56 > 1);
  if (a4 <= 8) {
    int v58 = 8;
  }
  else {
    int v58 = a4;
  }
  int v59 = v57 - v58;
  int v60 = a2 + 8;
  int v61 = a2 + 32;
  int v62 = a2 + 40;
  if (v59 >= 1)
  {
LABEL_15:
    int16x8_t v63 = (int16x8_t)xmmword_26A996AC0;
    int16x8_t v64 = (int16x8_t)xmmword_26A996AD0;
    unsigned int v65 = v59 + 1;
    int8x16_t v66 = result + 4;
    v67.i64[0] = 0x8000800080008000;
    v67.i64[1] = 0x8000800080008000;
    v68.i64[0] = -1;
    v68.i64[1] = -1;
    unsigned int v69 = (float *)result[4].i32;
    do
    {
      int16x8_t v70 = *v61++;
      int v71 = (float *)v66[-4].i32;
      int16x8_t v72 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v63), v64), 4uLL), v67);
      int16x8_t v73 = *v62++;
      int16x8_t v74 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v73, v63), v64), 4uLL), v67);
      unsigned long long v75 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v72, (int8x16_t)0, 2uLL), (uint16x8_t)v72) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
      int16x8_t v76 = vzip1q_s16(v72, (int16x8_t)v75);
      unsigned long long v77 = *(_OWORD *)&vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v74, (int8x16_t)0, 2uLL), (uint16x8_t)v74) & __PAIR128__(0xFFF0FFF0FFF0FFF0, 0xFFF0FFF0FFF0FFF0);
      int16x8_t v78 = vzip1q_s16(v74, (int16x8_t)v77);
      int16x8_t v79 = vzip2q_s16(v72, (int16x8_t)v75);
      int16x8_t v80 = vzip2q_s16(v74, (int16x8_t)v77);
      int16x8_t v81 = *a2++;
      int16x8_t v82 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v81, v63), v64), 4uLL), v67);
      float32x2x2_t v83 = (float32x2x2_t)vzip1q_s16(v68, v82);
      float32x2x2_t v84 = (float32x2x2_t)vzip2q_s16(v68, v82);
      int32x4_t v85 = (int32x4_t)vzip1q_s16(v76, v78);
      int32x4_t v86 = (int32x4_t)vzip2q_s16(v76, v78);
      vst2_f32(v71, v83);
      v66[-3] = vzip2q_s32((int32x4_t)v83, v85);
      int32x4_t v87 = (float *)v66[-2].i32;
      vst2_f32(v87, v84);
      v66[-1] = vzip2q_s32((int32x4_t)v84, v86);
      int16x8_t v88 = *v60++;
      int16x8_t v89 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v88, v63), v64), 4uLL), v67);
      float32x2x2_t v90 = (float32x2x2_t)vzip1q_s16(v68, v89);
      int32x4_t v91 = (int32x4_t)vzip1q_s16(v79, v80);
      vst2_f32(v69, v90);
      unsigned int v69 = (float *)((char *)v69 + a3);
      float32x2x2_t v92 = (float32x2x2_t)vzip2q_s16(v68, v89);
      int32x4_t v93 = (int32x4_t)vzip2q_s16(v79, v80);
      int16x8_t v94 = (float *)v66[2].i32;
      vst2_f32(v94, v92);
      v66[1] = vzip2q_s32((int32x4_t)v90, v91);
      v66[3] = vzip2q_s32((int32x4_t)v92, v93);
      --v65;
      int8x16_t v66 = (int32x4_t *)v69;
    }
    while (v65 > 1);
  }
  return result;
}

int32x4_t *from_422_to_y416<8,8,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  return from_422_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(a1, a2, a3, a4, a5, a6, 8u);
}

int32x4_t *from_422_to_y416<8,8,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  return from_422_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(a1, a2, a3, a4, a5, a6, 8u);
}

int32x4_t *from_422_to_y416<8,4,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  return from_422_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(a1, a2, a3, a4, a5, a6, 4u);
}

int32x4_t *from_422_to_y416<8,4,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  return from_422_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(a1, a2, a3, a4, a5, a6, 4u);
}

_WORD *from_422_to_y416<4,8,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 4, 8);
}

_WORD *from_422_to_y416<4,8,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 4, 8);
}

_WORD *from_422_to_y416<4,4,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 4, 4);
}

_WORD *from_422_to_y416<4,4,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 4, 4);
}

_WORD *from_422_to_y416<4,2,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 4, 2);
}

_WORD *from_422_to_y416<4,2,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 4, 2);
}

_WORD *from_422_to_y416<2,4,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 4);
}

_WORD *from_422_to_y416<2,4,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 4);
}

_WORD *from_422_to_y416<2,2,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 2);
}

_WORD *from_422_to_y416<2,2,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 2);
}

_WORD *from_422_to_y416<2,1,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 1);
}

_WORD *from_422_to_y416<2,1,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 1);
}

_WORD *from_422_to_y416<1,2,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 2);
}

_WORD *from_422_to_y416<1,2,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 2);
}

_WORD *from_422_to_y416<1,1,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 1);
}

_WORD *from_422_to_y416<1,1,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 1);
}

int32x4_t *from_422_to_y416<8,8,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_422_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(a1, a2, a3, a4, 8u);
}

int32x4_t *from_422_to_y416<8,8,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_422_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(a1, a2, a3, a4, 8u);
}

int32x4_t *from_422_to_y416<8,4,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_422_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(a1, a2, a3, a4, 4u);
}

int32x4_t *from_422_to_y416<8,4,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_422_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(a1, a2, a3, a4, 4u);
}

_WORD *from_422_to_y416<4,8,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 4, 8);
}

_WORD *from_422_to_y416<4,8,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 4, 8);
}

_WORD *from_422_to_y416<4,4,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 4, 4);
}

_WORD *from_422_to_y416<4,4,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 4, 4);
}

_WORD *from_422_to_y416<4,2,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 4, 2);
}

_WORD *from_422_to_y416<4,2,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 4, 2);
}

_WORD *from_422_to_y416<2,4,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2, 4);
}

_WORD *from_422_to_y416<2,4,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2, 4);
}

_WORD *from_422_to_y416<2,2,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2, 2);
}

_WORD *from_422_to_y416<2,2,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2, 2);
}

_WORD *from_422_to_y416<2,1,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2, 1);
}

_WORD *from_422_to_y416<2,1,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2, 1);
}

_WORD *from_422_to_y416<1,2,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1, 2);
}

_WORD *from_422_to_y416<1,2,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1, 2);
}

_WORD *from_422_to_y416<1,1,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1, 1);
}

_WORD *from_422_to_y416<1,1,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(_WORD *a1, __int16 *a2, int a3, int a4)
{
  return from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1, 1);
}

uint64_t from_422_to_r4fl<8,8,(AlphaOutputMethod)1,false>(uint64_t result, int16x8_t *a2, int a3, int a4, int32x4_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int v96 = a2 + 8;
    int32x4_t v97 = a2 + 32;
    int v98 = a2 + 40;
    int v100 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0xF000F000F000F000;
  v8.i64[1] = 0xF000F000F000F000;
  int16x8_t v9 = vdupq_n_s16(0xFE0u);
  v10.i64[0] = 0xE000E000E000E00;
  v10.i64[1] = 0xE000E000E000E00;
  v11.i64[0] = 0x1000100010001000;
  v11.i64[1] = 0x1000100010001000;
  float32x4_t v12 = (float32x4_t)vdupq_n_s32(0x39008081u);
  do
  {
    int16x8_t v13 = (int32x4_t *)((char *)a5 + 8 * a6);
    int16x8_t v14 = vaddq_s16(vminq_s16(vmaxq_s16(*a2, v8), v9), v10);
    int16x8_t v15 = vaddq_s16(vminq_s16(vmaxq_s16(a2[8], v8), v9), v10);
    int16x8_t v16 = vaddq_s16(vminq_s16(vmaxq_s16(a2[32], v8), v9), v11);
    int16x8_t v17 = vaddq_s16(vminq_s16(vmaxq_s16(a2[40], v8), v9), v11);
    int16x8_t v18 = vzip1q_s16(v16, v17);
    int16x8_t v19 = vcltzq_s16(v14);
    int32x4_t v20 = (int32x4_t)vzip1q_s16(v14, v19);
    int32x4_t v21 = (int32x4_t)vzip2q_s16(v18, (int16x8_t)0);
    float32x4_t v22 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v14, v19));
    int64x2_t v23 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v18, (int16x8_t)0)), v12);
    int64x2_t v24 = (int64x2_t)vmulq_f32(vcvtq_f32_s32(v21), v12);
    int32x4_t v25 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v20), v12);
    int8x16_t v26 = (int8x16_t)vzip1q_s32(*a5, v25);
    int64x2_t v27 = (int64x2_t)vzip2q_s32(*a5, v25);
    int8x16_t v28 = vextq_s8(v26, (int8x16_t)v23, 8uLL);
    int32x4_t v29 = (int32x4_t)vmulq_f32(v22, v12);
    v26.i64[1] = v23.i64[0];
    int64x2_t v30 = vzip2q_s64(v27, v23);
    v27.i64[1] = v23.i64[1];
    *(int8x16_t *)int8x8_t result = v26;
    *(int8x16_t *)(result + 16) = v28;
    *(int64x2_t *)(result + 32) = v27;
    *(int64x2_t *)(result + 48) = v30;
    int32x4_t v31 = a5[1];
    int8x16_t v32 = (int8x16_t)vzip1q_s32(v31, v29);
    int16x8_t v33 = vzip2q_s16(v16, v17);
    int64x2_t v34 = (int64x2_t)vzip2q_s32(v31, v29);
    int8x16_t v35 = vextq_s8(v32, (int8x16_t)v24, 8uLL);
    int64x2_t v36 = vzip2q_s64(v34, v24);
    v34.i64[1] = v24.i64[1];
    v32.i64[1] = v24.i64[0];
    *(int64x2_t *)(result + 96) = v34;
    *(int64x2_t *)(result + 112) = v36;
    *(int8x16_t *)(result + 64) = v32;
    *(int8x16_t *)(result + 80) = v35;
    int16x8_t v37 = vcltzq_s16(v15);
    int32x4_t v38 = (int32x4_t)vzip1q_s16(v15, v37);
    int32x4_t v39 = (int32x4_t)vzip2q_s16(v15, v37);
    int32x4_t v40 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v33, (int16x8_t)0)), v12);
    float32x4_t v41 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v33, (int16x8_t)0)), v12);
    int32x4_t v42 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v38), v12);
    int32x4_t v43 = a5[2];
    int8x16_t v44 = (int8x16_t)vzip1q_s32(v43, v42);
    int64x2_t v45 = (int64x2_t)vzip2q_s32(v43, v42);
    int8x16_t v46 = vextq_s8(v44, (int8x16_t)v40, 8uLL);
    int32x4_t v47 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v39), v12);
    v44.i64[1] = v40.i64[0];
    int64x2_t v48 = vzip2q_s64(v45, (int64x2_t)v40);
    v45.i64[1] = v40.i64[1];
    *(int8x16_t *)(result + 128) = v44;
    *(int8x16_t *)(result + 144) = v46;
    *(int64x2_t *)(result + 160) = v45;
    *(int64x2_t *)(result + 176) = v48;
    int32x4_t v49 = a5[3];
    int8x16_t v50 = (int8x16_t)vzip1q_s32(v49, v47);
    int8x16_t v51 = vextq_s8(v50, (int8x16_t)v41, 8uLL);
    v50.i64[1] = v41.i64[0];
    v48.i64[0] = vextq_s8((int8x16_t)v23, (int8x16_t)v23, 8uLL).u64[0];
    int64x2_t v52 = (int64x2_t)vzip2q_s32(v49, v47);
    *(float32x2_t *)(result + 24) = vmul_f32(vadd_f32(*(float32x2_t *)v23.i8, *(float32x2_t *)v48.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)(result + 56) = vmul_f32(vadd_f32(*(float32x2_t *)v48.i8, *(float32x2_t *)v24.i8), (float32x2_t)0x3F0000003F000000);
    int64x2_t v53 = vzip2q_s64(v52, (int64x2_t)v41);
    v49.i64[0] = vextq_s8((int8x16_t)v24, (int8x16_t)v24, 8uLL).u64[0];
    *(float32x2_t *)(result + 88) = vmul_f32(vadd_f32(*(float32x2_t *)v24.i8, *(float32x2_t *)v49.i8), (float32x2_t)0x3F0000003F000000);
    v52.i64[1] = v41.i64[1];
    *(float32x2_t *)(result + 120) = vmul_f32(vadd_f32(*(float32x2_t *)v49.i8, *(float32x2_t *)v40.i8), (float32x2_t)0x3F0000003F000000);
    v24.i32[0] = *(_DWORD *)(result + 172);
    *(int64x2_t *)(result + 224) = v52;
    *(int64x2_t *)(result + 240) = v53;
    v53.i32[0] = vextq_s8((int8x16_t)v40, (int8x16_t)v40, 8uLL).u32[0];
    v53.i32[1] = v24.i32[0];
    *(int8x16_t *)(result + 192) = v50;
    *(int8x16_t *)(result + 208) = v51;
    *(float32x2_t *)(result + 152) = vmul_f32(vadd_f32(*(float32x2_t *)v40.i8, *(float32x2_t *)v53.i8), (float32x2_t)0x3F0000003F000000);
    *(float *)(result + 184) = 0.5 * vaddq_f32((float32x4_t)vdupq_laneq_s32(v40, 2), v41).f32[0];
    v53.i32[0] = *(_DWORD *)(result + 204);
    v52.i64[0] = *(void *)(result + 232);
    *(float *)(result + 188) = (float)(*(float *)v24.i32 + *(float *)v53.i32) * 0.5;
    v41.i32[1] = v53.i32[0];
    *(float32x2_t *)(result + 216) = vmul_f32(vadd_f32(*(float32x2_t *)v41.f32, *(float32x2_t *)v52.i8), (float32x2_t)0x3F0000003F000000);
    uint64_t v54 = result + 8 * a3;
    int32x4_t v55 = a2 + 1;
    result += a3;
    a5 = (int32x4_t *)((char *)a5 + a6);
    int16x8_t v56 = vaddq_s16(vminq_s16(vmaxq_s16(a2[16], v8), v9), v10);
    int16x8_t v57 = vaddq_s16(vminq_s16(vmaxq_s16(a2[24], v8), v9), v10);
    int16x8_t v58 = vaddq_s16(vminq_s16(vmaxq_s16(a2[48], v8), v9), v11);
    int16x8_t v59 = vaddq_s16(vminq_s16(vmaxq_s16(a2[56], v8), v9), v11);
    int16x8_t v60 = vzip1q_s16(v58, v59);
    int16x8_t v61 = vzip2q_s16(v58, v59);
    int16x8_t v62 = vcltzq_s16(v56);
    float32x4_t v63 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v56, v62));
    int32x4_t v64 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v56, v62)), v12);
    int64x2_t v65 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v60, (int16x8_t)0)), v12);
    float32x4_t v66 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v60, (int16x8_t)0));
    int8x16_t v67 = (int8x16_t)vzip1q_s32(*v13, v64);
    int64x2_t v68 = (int64x2_t)vzip2q_s32(*v13, v64);
    int64x2_t v69 = (int64x2_t)vmulq_f32(v66, v12);
    int8x16_t v70 = vextq_s8(v67, (int8x16_t)v65, 8uLL);
    v67.i64[1] = v65.i64[0];
    *(int8x16_t *)uint64_t v54 = v67;
    *(int8x16_t *)(v54 + 16) = v70;
    int64x2_t v71 = vzip2q_s64(v68, v65);
    v68.i64[1] = v65.i64[1];
    *(int64x2_t *)(v54 + 32) = v68;
    *(int64x2_t *)(v54 + 48) = v71;
    int32x4_t v72 = (int32x4_t)vmulq_f32(v63, v12);
    int32x4_t v73 = v13[1];
    int8x16_t v74 = (int8x16_t)vzip1q_s32(v73, v72);
    int8x16_t v75 = vextq_s8(v74, (int8x16_t)v69, 8uLL);
    v74.i64[1] = v69.i64[0];
    int64x2_t v76 = (int64x2_t)vzip2q_s32(v73, v72);
    int64x2_t v77 = vzip2q_s64(v76, v69);
    v76.i64[1] = v69.i64[1];
    *(int8x16_t *)(v54 + 64) = v74;
    *(int8x16_t *)(v54 + 80) = v75;
    *(int64x2_t *)(v54 + 96) = v76;
    *(int64x2_t *)(v54 + 112) = v77;
    int16x8_t v78 = vcltzq_s16(v57);
    int32x4_t v79 = (int32x4_t)vzip1q_s16(v57, v78);
    int32x4_t v80 = (int32x4_t)vzip2q_s16(v57, v78);
    int32x4_t v81 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v79), v12);
    int32x4_t v82 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v80), v12);
    int32x4_t v83 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v61, (int16x8_t)0)), v12);
    int32x4_t v84 = v13[2];
    int8x16_t v85 = (int8x16_t)vzip1q_s32(v84, v81);
    int64x2_t v86 = (int64x2_t)vzip2q_s32(v84, v81);
    int8x16_t v87 = vextq_s8(v85, (int8x16_t)v83, 8uLL);
    v85.i64[1] = v83.i64[0];
    int64x2_t v88 = vzip2q_s64(v86, (int64x2_t)v83);
    *(int8x16_t *)(v54 + 128) = v85;
    *(int8x16_t *)(v54 + 144) = v87;
    v86.i64[1] = v83.i64[1];
    *(int64x2_t *)(v54 + 160) = v86;
    *(int64x2_t *)(v54 + 176) = v88;
    int32x4_t v89 = v13[3];
    float32x4_t v90 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v61, (int16x8_t)0)), v12);
    int8x16_t v91 = (int8x16_t)vzip1q_s32(v89, v82);
    int8x16_t v92 = vextq_s8(v91, (int8x16_t)v90, 8uLL);
    v91.i64[1] = v90.i64[0];
    int64x2_t v93 = (int64x2_t)vzip2q_s32(v89, v82);
    v89.i64[0] = vextq_s8((int8x16_t)v65, (int8x16_t)v65, 8uLL).u64[0];
    *(float32x2_t *)(v54 + 24) = vmul_f32(vadd_f32(*(float32x2_t *)v65.i8, *(float32x2_t *)v89.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)v65.i8 = vadd_f32(*(float32x2_t *)v89.i8, *(float32x2_t *)v69.i8);
    int64x2_t v94 = vzip2q_s64(v93, (int64x2_t)v90);
    *(float32x2_t *)(v54 + 56) = vmul_f32(*(float32x2_t *)v65.i8, (float32x2_t)0x3F0000003F000000);
    v65.i64[0] = vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL).u64[0];
    v93.i64[1] = v90.i64[1];
    *(float32x2_t *)(v54 + 88) = vmul_f32(vadd_f32(*(float32x2_t *)v69.i8, *(float32x2_t *)v65.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)v69.i8 = vmul_f32(vadd_f32(*(float32x2_t *)v65.i8, *(float32x2_t *)v83.i8), (float32x2_t)0x3F0000003F000000);
    *(int64x2_t *)(v54 + 224) = v93;
    *(int64x2_t *)(v54 + 240) = v94;
    v65.i32[0] = *(_DWORD *)(v54 + 172);
    v93.i32[0] = vextq_s8((int8x16_t)v83, (int8x16_t)v83, 8uLL).u32[0];
    v93.i32[1] = v65.i32[0];
    *(int8x16_t *)(v54 + 192) = v91;
    *(int8x16_t *)(v54 + 208) = v92;
    *(void *)(v54 + 120) = v69.i64[0];
    *(float32x2_t *)(v54 + 152) = vmul_f32(vadd_f32(*(float32x2_t *)v83.i8, *(float32x2_t *)v93.i8), (float32x2_t)0x3F0000003F000000);
    *(float *)(v54 + 184) = 0.5 * vaddq_f32((float32x4_t)vdupq_laneq_s32(v83, 2), v90).f32[0];
    v90.i32[1] = *(_DWORD *)(v54 + 204);
    *(float32x2_t *)v69.i8 = vmul_f32(vadd_f32(*(float32x2_t *)v90.f32, *(float32x2_t *)(v54 + 232)), (float32x2_t)0x3F0000003F000000);
    *(float *)(v54 + 188) = (float)(*(float *)v65.i32 + v90.f32[1]) * 0.5;
    *(void *)(v54 + 216) = v69.i64[0];
    int v95 = v7 - 1;
    LODWORD(v54) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v54 > 1);
  int v96 = v55 + 8;
  int32x4_t v97 = v55 + 32;
  int v98 = v55 + 40;
  if (a4 <= 8) {
    int v99 = 8;
  }
  else {
    int v99 = a4;
  }
  int v100 = v95 - v99;
  a2 = v55;
  if (v100 >= 1)
  {
LABEL_13:
    unsigned int v101 = v100 + 1;
    unsigned int v102 = a5 + 2;
    uint64_t v103 = result + 120;
    v104.i64[0] = 0xF000F000F000F000;
    v104.i64[1] = 0xF000F000F000F000;
    int16x8_t v105 = vdupq_n_s16(0xFE0u);
    v106.i64[0] = 0xE000E000E000E00;
    v106.i64[1] = 0xE000E000E000E00;
    v107.i64[0] = 0x1000100010001000;
    v107.i64[1] = 0x1000100010001000;
    float32x4_t v108 = (float32x4_t)vdupq_n_s32(0x39008081u);
    do
    {
      int16x8_t v109 = *a2++;
      int16x8_t v110 = vmaxq_s16(v109, v104);
      int16x8_t v111 = *v96++;
      int16x8_t v112 = vminq_s16(vmaxq_s16(v111, v104), v105);
      int16x8_t v113 = *v97++;
      int16x8_t v114 = vminq_s16(vmaxq_s16(v113, v104), v105);
      int16x8_t v115 = *v98++;
      int16x8_t v116 = vaddq_s16(vminq_s16(v110, v105), v106);
      int16x8_t v117 = vaddq_s16(v112, v106);
      int16x8_t v118 = vaddq_s16(v114, v107);
      int16x8_t v119 = vaddq_s16(vminq_s16(vmaxq_s16(v115, v104), v105), v107);
      int16x8_t v120 = vzip1q_s16(v118, v119);
      int16x8_t v121 = vcltzq_s16(v116);
      int32x4_t v122 = (int32x4_t)vzip1q_s16(v116, v121);
      int32x4_t v123 = (int32x4_t)vzip2q_s16(v116, v121);
      int32x4_t v124 = (int32x4_t)vzip1q_s16(v120, (int16x8_t)0);
      int32x4_t v125 = (int32x4_t)vzip2q_s16(v120, (int16x8_t)0);
      float32x4_t v126 = vcvtq_f32_s32(v122);
      float32x4_t v127 = vcvtq_f32_s32(v123);
      float32x4_t v128 = vcvtq_f32_s32(v124);
      int32x4_t v129 = (int32x4_t)vmulq_f32(v126, v108);
      int64x2_t v130 = (int64x2_t)vmulq_f32(v128, v108);
      float32x4_t v131 = vcvtq_f32_s32(v125);
      int32x4_t v132 = v102[-2];
      int8x16_t v133 = (int8x16_t)vzip1q_s32(v132, v129);
      int64x2_t v134 = (int64x2_t)vzip2q_s32(v132, v129);
      int64x2_t v135 = (int64x2_t)vmulq_f32(v131, v108);
      int8x16_t v136 = vextq_s8(v133, (int8x16_t)v130, 8uLL);
      v133.i64[1] = v130.i64[0];
      *(int8x16_t *)(v103 - 104) = v136;
      *(int8x16_t *)(v103 - 120) = v133;
      int64x2_t v137 = vzip2q_s64(v134, v130);
      v134.i64[1] = v130.i64[1];
      *(int64x2_t *)(v103 - 88) = v134;
      *(int64x2_t *)(v103 - 72) = v137;
      int32x4_t v138 = (int32x4_t)vmulq_f32(v127, v108);
      int32x4_t v139 = v102[-1];
      int8x16_t v140 = (int8x16_t)vzip1q_s32(v139, v138);
      int64x2_t v141 = (int64x2_t)vzip2q_s32(v139, v138);
      int8x16_t v142 = vextq_s8(v140, (int8x16_t)v135, 8uLL);
      int16x8_t v143 = vzip2q_s16(v118, v119);
      v140.i64[1] = v135.i64[0];
      int64x2_t v144 = vzip2q_s64(v141, v135);
      v141.i64[1] = v135.i64[1];
      *(int8x16_t *)(v103 - 56) = v140;
      *(int8x16_t *)(v103 - 40) = v142;
      *(int64x2_t *)(v103 - 24) = v141;
      *(int64x2_t *)(v103 - 8) = v144;
      int16x8_t v145 = vcltzq_s16(v117);
      int32x4_t v146 = (int32x4_t)vzip1q_s16(v117, v145);
      int32x4_t v147 = (int32x4_t)vzip2q_s16(v117, v145);
      int32x4_t v148 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v146), v108);
      int32x4_t v149 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v143, (int16x8_t)0)), v108);
      int8x16_t v150 = (int8x16_t)vzip1q_s32(*v102, v148);
      int64x2_t v151 = (int64x2_t)vzip2q_s32(*v102, v148);
      float32x4_t v152 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v143, (int16x8_t)0)), v108);
      int8x16_t v153 = vextq_s8(v150, (int8x16_t)v149, 8uLL);
      v150.i64[1] = v149.i64[0];
      *(int8x16_t *)(v103 + 24) = v153;
      *(int8x16_t *)(v103 + 8) = v150;
      int64x2_t v154 = vzip2q_s64(v151, (int64x2_t)v149);
      v151.i64[1] = v149.i64[1];
      *(int64x2_t *)(v103 + 40) = v151;
      *(int64x2_t *)(v103 + 56) = v154;
      int32x4_t v155 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v147), v108);
      int32x4_t v156 = v102[1];
      int8x16_t v157 = (int8x16_t)vzip1q_s32(v156, v155);
      int8x16_t v158 = vextq_s8(v157, (int8x16_t)v152, 8uLL);
      v157.i64[1] = v152.i64[0];
      int64x2_t v159 = (int64x2_t)vzip2q_s32(v156, v155);
      int64x2_t v160 = vzip2q_s64(v159, (int64x2_t)v152);
      v159.i64[1] = v152.i64[1];
      v133.i64[0] = vextq_s8((int8x16_t)v130, (int8x16_t)v130, 8uLL).u64[0];
      *(int8x16_t *)(v103 + 88) = v158;
      *(float32x2_t *)(v103 - 96) = vmul_f32(vadd_f32(*(float32x2_t *)v130.i8, *(float32x2_t *)v133.i8), (float32x2_t)0x3F0000003F000000);
      *(int64x2_t *)(v103 + 120) = v160;
      *(float32x2_t *)(v103 - 64) = vmul_f32(vadd_f32(*(float32x2_t *)v133.i8, *(float32x2_t *)v135.i8), (float32x2_t)0x3F0000003F000000);
      v130.i64[0] = vextq_s8((int8x16_t)v135, (int8x16_t)v135, 8uLL).u64[0];
      *(float32x2_t *)(v103 - 32) = vmul_f32(vadd_f32(*(float32x2_t *)v135.i8, *(float32x2_t *)v130.i8), (float32x2_t)0x3F0000003F000000);
      *(int64x2_t *)(v103 + 104) = v159;
      *(float32x2_t *)uint64_t v103 = vmul_f32(vadd_f32(*(float32x2_t *)v130.i8, *(float32x2_t *)v149.i8), (float32x2_t)0x3F0000003F000000);
      v135.i32[0] = *(_DWORD *)(v103 + 52);
      v130.i32[0] = vextq_s8((int8x16_t)v149, (int8x16_t)v149, 8uLL).u32[0];
      *(int8x16_t *)(v103 + 72) = v157;
      v130.i32[1] = v135.i32[0];
      *(float32x2_t *)(v103 + 32) = vmul_f32(vadd_f32(*(float32x2_t *)v149.i8, *(float32x2_t *)v130.i8), (float32x2_t)0x3F0000003F000000);
      *(float *)v130.i32 = vaddq_f32((float32x4_t)vdupq_laneq_s32(v149, 2), v152).f32[0];
      v159.i32[0] = *(_DWORD *)(v103 + 84);
      v152.i32[1] = v159.i32[0];
      *(float32x2_t *)v152.f32 = vadd_f32(*(float32x2_t *)v152.f32, *(float32x2_t *)(v103 + 112));
      *(float *)(v103 + 64) = 0.5 * *(float *)v130.i32;
      *(float *)(v103 + 68) = (float)(*(float *)v135.i32 + *(float *)v159.i32) * 0.5;
      *(float32x2_t *)(v103 + 96) = vmul_f32(*(float32x2_t *)v152.f32, (float32x2_t)0x3F0000003F000000);
      --v101;
      unsigned int v102 = (int32x4_t *)((char *)v102 + a6);
      v103 += a3;
    }
    while (v101 > 1);
  }
  return result;
}

uint64_t from_422_to_r4fl<8,8,(AlphaOutputMethod)1,true>(uint64_t result, int16x8_t *a2, int a3, int a4, int32x4_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int v96 = a2 + 8;
    int32x4_t v97 = a2 + 32;
    int v98 = a2 + 40;
    int v100 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0xF000F000F000F000;
  v8.i64[1] = 0xF000F000F000F000;
  int16x8_t v9 = vdupq_n_s16(0xFE0u);
  v10.i64[0] = 0xE000E000E000E00;
  v10.i64[1] = 0xE000E000E000E00;
  v11.i64[0] = 0x1000100010001000;
  v11.i64[1] = 0x1000100010001000;
  float32x4_t v12 = (float32x4_t)vdupq_n_s32(0x39008081u);
  do
  {
    int16x8_t v13 = (int32x4_t *)((char *)a5 + 8 * a6);
    int16x8_t v14 = vaddq_s16(vminq_s16(vmaxq_s16(*a2, v8), v9), v10);
    int16x8_t v15 = vaddq_s16(vminq_s16(vmaxq_s16(a2[8], v8), v9), v10);
    int16x8_t v16 = vaddq_s16(vminq_s16(vmaxq_s16(a2[32], v8), v9), v11);
    int16x8_t v17 = vaddq_s16(vminq_s16(vmaxq_s16(a2[40], v8), v9), v11);
    int16x8_t v18 = vzip1q_s16(v16, v17);
    int16x8_t v19 = vcltzq_s16(v14);
    int32x4_t v20 = (int32x4_t)vzip1q_s16(v14, v19);
    int32x4_t v21 = (int32x4_t)vzip2q_s16(v18, (int16x8_t)0);
    float32x4_t v22 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v14, v19));
    int64x2_t v23 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v18, (int16x8_t)0)), v12);
    int64x2_t v24 = (int64x2_t)vmulq_f32(vcvtq_f32_s32(v21), v12);
    int32x4_t v25 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v20), v12);
    int8x16_t v26 = (int8x16_t)vzip1q_s32(*a5, v25);
    int64x2_t v27 = (int64x2_t)vzip2q_s32(*a5, v25);
    int8x16_t v28 = vextq_s8(v26, (int8x16_t)v23, 8uLL);
    int32x4_t v29 = (int32x4_t)vmulq_f32(v22, v12);
    v26.i64[1] = v23.i64[0];
    int64x2_t v30 = vzip2q_s64(v27, v23);
    v27.i64[1] = v23.i64[1];
    *(int8x16_t *)int8x8_t result = v26;
    *(int8x16_t *)(result + 16) = v28;
    *(int64x2_t *)(result + 32) = v27;
    *(int64x2_t *)(result + 48) = v30;
    int32x4_t v31 = a5[1];
    int8x16_t v32 = (int8x16_t)vzip1q_s32(v31, v29);
    int16x8_t v33 = vzip2q_s16(v16, v17);
    int64x2_t v34 = (int64x2_t)vzip2q_s32(v31, v29);
    int8x16_t v35 = vextq_s8(v32, (int8x16_t)v24, 8uLL);
    int64x2_t v36 = vzip2q_s64(v34, v24);
    v34.i64[1] = v24.i64[1];
    v32.i64[1] = v24.i64[0];
    *(int64x2_t *)(result + 96) = v34;
    *(int64x2_t *)(result + 112) = v36;
    *(int8x16_t *)(result + 64) = v32;
    *(int8x16_t *)(result + 80) = v35;
    int16x8_t v37 = vcltzq_s16(v15);
    int32x4_t v38 = (int32x4_t)vzip1q_s16(v15, v37);
    int32x4_t v39 = (int32x4_t)vzip2q_s16(v15, v37);
    int32x4_t v40 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v33, (int16x8_t)0)), v12);
    float32x4_t v41 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v33, (int16x8_t)0)), v12);
    int32x4_t v42 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v38), v12);
    int32x4_t v43 = a5[2];
    int8x16_t v44 = (int8x16_t)vzip1q_s32(v43, v42);
    int64x2_t v45 = (int64x2_t)vzip2q_s32(v43, v42);
    int8x16_t v46 = vextq_s8(v44, (int8x16_t)v40, 8uLL);
    int32x4_t v47 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v39), v12);
    v44.i64[1] = v40.i64[0];
    int64x2_t v48 = vzip2q_s64(v45, (int64x2_t)v40);
    v45.i64[1] = v40.i64[1];
    *(int8x16_t *)(result + 128) = v44;
    *(int8x16_t *)(result + 144) = v46;
    *(int64x2_t *)(result + 160) = v45;
    *(int64x2_t *)(result + 176) = v48;
    int32x4_t v49 = a5[3];
    int8x16_t v50 = (int8x16_t)vzip1q_s32(v49, v47);
    int8x16_t v51 = vextq_s8(v50, (int8x16_t)v41, 8uLL);
    v50.i64[1] = v41.i64[0];
    v48.i64[0] = vextq_s8((int8x16_t)v23, (int8x16_t)v23, 8uLL).u64[0];
    int64x2_t v52 = (int64x2_t)vzip2q_s32(v49, v47);
    *(float32x2_t *)(result + 24) = vmul_f32(vadd_f32(*(float32x2_t *)v23.i8, *(float32x2_t *)v48.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)(result + 56) = vmul_f32(vadd_f32(*(float32x2_t *)v48.i8, *(float32x2_t *)v24.i8), (float32x2_t)0x3F0000003F000000);
    int64x2_t v53 = vzip2q_s64(v52, (int64x2_t)v41);
    v49.i64[0] = vextq_s8((int8x16_t)v24, (int8x16_t)v24, 8uLL).u64[0];
    *(float32x2_t *)(result + 88) = vmul_f32(vadd_f32(*(float32x2_t *)v24.i8, *(float32x2_t *)v49.i8), (float32x2_t)0x3F0000003F000000);
    v52.i64[1] = v41.i64[1];
    *(float32x2_t *)(result + 120) = vmul_f32(vadd_f32(*(float32x2_t *)v49.i8, *(float32x2_t *)v40.i8), (float32x2_t)0x3F0000003F000000);
    v24.i32[0] = *(_DWORD *)(result + 172);
    *(int64x2_t *)(result + 224) = v52;
    *(int64x2_t *)(result + 240) = v53;
    v53.i32[0] = vextq_s8((int8x16_t)v40, (int8x16_t)v40, 8uLL).u32[0];
    v53.i32[1] = v24.i32[0];
    *(int8x16_t *)(result + 192) = v50;
    *(int8x16_t *)(result + 208) = v51;
    *(float32x2_t *)(result + 152) = vmul_f32(vadd_f32(*(float32x2_t *)v40.i8, *(float32x2_t *)v53.i8), (float32x2_t)0x3F0000003F000000);
    *(float *)(result + 184) = 0.5 * vaddq_f32((float32x4_t)vdupq_laneq_s32(v40, 2), v41).f32[0];
    v53.i32[0] = *(_DWORD *)(result + 204);
    v52.i64[0] = *(void *)(result + 232);
    *(float *)(result + 188) = (float)(*(float *)v24.i32 + *(float *)v53.i32) * 0.5;
    v41.i32[1] = v53.i32[0];
    *(float32x2_t *)(result + 216) = vmul_f32(vadd_f32(*(float32x2_t *)v41.f32, *(float32x2_t *)v52.i8), (float32x2_t)0x3F0000003F000000);
    uint64_t v54 = result + 8 * a3;
    int32x4_t v55 = a2 + 1;
    result += a3;
    a5 = (int32x4_t *)((char *)a5 + a6);
    int16x8_t v56 = vaddq_s16(vminq_s16(vmaxq_s16(a2[16], v8), v9), v10);
    int16x8_t v57 = vaddq_s16(vminq_s16(vmaxq_s16(a2[24], v8), v9), v10);
    int16x8_t v58 = vaddq_s16(vminq_s16(vmaxq_s16(a2[48], v8), v9), v11);
    int16x8_t v59 = vaddq_s16(vminq_s16(vmaxq_s16(a2[56], v8), v9), v11);
    int16x8_t v60 = vzip1q_s16(v58, v59);
    int16x8_t v61 = vzip2q_s16(v58, v59);
    int16x8_t v62 = vcltzq_s16(v56);
    float32x4_t v63 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v56, v62));
    int32x4_t v64 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v56, v62)), v12);
    int64x2_t v65 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v60, (int16x8_t)0)), v12);
    float32x4_t v66 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v60, (int16x8_t)0));
    int8x16_t v67 = (int8x16_t)vzip1q_s32(*v13, v64);
    int64x2_t v68 = (int64x2_t)vzip2q_s32(*v13, v64);
    int64x2_t v69 = (int64x2_t)vmulq_f32(v66, v12);
    int8x16_t v70 = vextq_s8(v67, (int8x16_t)v65, 8uLL);
    v67.i64[1] = v65.i64[0];
    *(int8x16_t *)uint64_t v54 = v67;
    *(int8x16_t *)(v54 + 16) = v70;
    int64x2_t v71 = vzip2q_s64(v68, v65);
    v68.i64[1] = v65.i64[1];
    *(int64x2_t *)(v54 + 32) = v68;
    *(int64x2_t *)(v54 + 48) = v71;
    int32x4_t v72 = (int32x4_t)vmulq_f32(v63, v12);
    int32x4_t v73 = v13[1];
    int8x16_t v74 = (int8x16_t)vzip1q_s32(v73, v72);
    int8x16_t v75 = vextq_s8(v74, (int8x16_t)v69, 8uLL);
    v74.i64[1] = v69.i64[0];
    int64x2_t v76 = (int64x2_t)vzip2q_s32(v73, v72);
    int64x2_t v77 = vzip2q_s64(v76, v69);
    v76.i64[1] = v69.i64[1];
    *(int8x16_t *)(v54 + 64) = v74;
    *(int8x16_t *)(v54 + 80) = v75;
    *(int64x2_t *)(v54 + 96) = v76;
    *(int64x2_t *)(v54 + 112) = v77;
    int16x8_t v78 = vcltzq_s16(v57);
    int32x4_t v79 = (int32x4_t)vzip1q_s16(v57, v78);
    int32x4_t v80 = (int32x4_t)vzip2q_s16(v57, v78);
    int32x4_t v81 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v79), v12);
    int32x4_t v82 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v80), v12);
    int32x4_t v83 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v61, (int16x8_t)0)), v12);
    int32x4_t v84 = v13[2];
    int8x16_t v85 = (int8x16_t)vzip1q_s32(v84, v81);
    int64x2_t v86 = (int64x2_t)vzip2q_s32(v84, v81);
    int8x16_t v87 = vextq_s8(v85, (int8x16_t)v83, 8uLL);
    v85.i64[1] = v83.i64[0];
    int64x2_t v88 = vzip2q_s64(v86, (int64x2_t)v83);
    *(int8x16_t *)(v54 + 128) = v85;
    *(int8x16_t *)(v54 + 144) = v87;
    v86.i64[1] = v83.i64[1];
    *(int64x2_t *)(v54 + 160) = v86;
    *(int64x2_t *)(v54 + 176) = v88;
    int32x4_t v89 = v13[3];
    float32x4_t v90 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v61, (int16x8_t)0)), v12);
    int8x16_t v91 = (int8x16_t)vzip1q_s32(v89, v82);
    int8x16_t v92 = vextq_s8(v91, (int8x16_t)v90, 8uLL);
    v91.i64[1] = v90.i64[0];
    int64x2_t v93 = (int64x2_t)vzip2q_s32(v89, v82);
    v89.i64[0] = vextq_s8((int8x16_t)v65, (int8x16_t)v65, 8uLL).u64[0];
    *(float32x2_t *)(v54 + 24) = vmul_f32(vadd_f32(*(float32x2_t *)v65.i8, *(float32x2_t *)v89.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)v65.i8 = vadd_f32(*(float32x2_t *)v89.i8, *(float32x2_t *)v69.i8);
    int64x2_t v94 = vzip2q_s64(v93, (int64x2_t)v90);
    *(float32x2_t *)(v54 + 56) = vmul_f32(*(float32x2_t *)v65.i8, (float32x2_t)0x3F0000003F000000);
    v65.i64[0] = vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL).u64[0];
    v93.i64[1] = v90.i64[1];
    *(float32x2_t *)(v54 + 88) = vmul_f32(vadd_f32(*(float32x2_t *)v69.i8, *(float32x2_t *)v65.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)v69.i8 = vmul_f32(vadd_f32(*(float32x2_t *)v65.i8, *(float32x2_t *)v83.i8), (float32x2_t)0x3F0000003F000000);
    *(int64x2_t *)(v54 + 224) = v93;
    *(int64x2_t *)(v54 + 240) = v94;
    v65.i32[0] = *(_DWORD *)(v54 + 172);
    v93.i32[0] = vextq_s8((int8x16_t)v83, (int8x16_t)v83, 8uLL).u32[0];
    v93.i32[1] = v65.i32[0];
    *(int8x16_t *)(v54 + 192) = v91;
    *(int8x16_t *)(v54 + 208) = v92;
    *(void *)(v54 + 120) = v69.i64[0];
    *(float32x2_t *)(v54 + 152) = vmul_f32(vadd_f32(*(float32x2_t *)v83.i8, *(float32x2_t *)v93.i8), (float32x2_t)0x3F0000003F000000);
    *(float *)(v54 + 184) = 0.5 * vaddq_f32((float32x4_t)vdupq_laneq_s32(v83, 2), v90).f32[0];
    v90.i32[1] = *(_DWORD *)(v54 + 204);
    *(float32x2_t *)v69.i8 = vmul_f32(vadd_f32(*(float32x2_t *)v90.f32, *(float32x2_t *)(v54 + 232)), (float32x2_t)0x3F0000003F000000);
    *(float *)(v54 + 188) = (float)(*(float *)v65.i32 + v90.f32[1]) * 0.5;
    *(void *)(v54 + 216) = v69.i64[0];
    int v95 = v7 - 1;
    LODWORD(v54) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v54 > 1);
  int v96 = v55 + 8;
  int32x4_t v97 = v55 + 32;
  int v98 = v55 + 40;
  if (a4 <= 8) {
    int v99 = 8;
  }
  else {
    int v99 = a4;
  }
  int v100 = v95 - v99;
  a2 = v55;
  if (v100 >= 1)
  {
LABEL_13:
    unsigned int v101 = v100 + 1;
    unsigned int v102 = a5 + 2;
    uint64_t v103 = result + 120;
    v104.i64[0] = 0xF000F000F000F000;
    v104.i64[1] = 0xF000F000F000F000;
    int16x8_t v105 = vdupq_n_s16(0xFE0u);
    v106.i64[0] = 0xE000E000E000E00;
    v106.i64[1] = 0xE000E000E000E00;
    v107.i64[0] = 0x1000100010001000;
    v107.i64[1] = 0x1000100010001000;
    float32x4_t v108 = (float32x4_t)vdupq_n_s32(0x39008081u);
    do
    {
      int16x8_t v109 = *a2++;
      int16x8_t v110 = vmaxq_s16(v109, v104);
      int16x8_t v111 = *v96++;
      int16x8_t v112 = vminq_s16(vmaxq_s16(v111, v104), v105);
      int16x8_t v113 = *v97++;
      int16x8_t v114 = vminq_s16(vmaxq_s16(v113, v104), v105);
      int16x8_t v115 = *v98++;
      int16x8_t v116 = vaddq_s16(vminq_s16(v110, v105), v106);
      int16x8_t v117 = vaddq_s16(v112, v106);
      int16x8_t v118 = vaddq_s16(v114, v107);
      int16x8_t v119 = vaddq_s16(vminq_s16(vmaxq_s16(v115, v104), v105), v107);
      int16x8_t v120 = vzip1q_s16(v118, v119);
      int16x8_t v121 = vcltzq_s16(v116);
      int32x4_t v122 = (int32x4_t)vzip1q_s16(v116, v121);
      int32x4_t v123 = (int32x4_t)vzip2q_s16(v116, v121);
      int32x4_t v124 = (int32x4_t)vzip1q_s16(v120, (int16x8_t)0);
      int32x4_t v125 = (int32x4_t)vzip2q_s16(v120, (int16x8_t)0);
      float32x4_t v126 = vcvtq_f32_s32(v122);
      float32x4_t v127 = vcvtq_f32_s32(v123);
      float32x4_t v128 = vcvtq_f32_s32(v124);
      int32x4_t v129 = (int32x4_t)vmulq_f32(v126, v108);
      int64x2_t v130 = (int64x2_t)vmulq_f32(v128, v108);
      float32x4_t v131 = vcvtq_f32_s32(v125);
      int32x4_t v132 = v102[-2];
      int8x16_t v133 = (int8x16_t)vzip1q_s32(v132, v129);
      int64x2_t v134 = (int64x2_t)vzip2q_s32(v132, v129);
      int64x2_t v135 = (int64x2_t)vmulq_f32(v131, v108);
      int8x16_t v136 = vextq_s8(v133, (int8x16_t)v130, 8uLL);
      v133.i64[1] = v130.i64[0];
      *(int8x16_t *)(v103 - 104) = v136;
      *(int8x16_t *)(v103 - 120) = v133;
      int64x2_t v137 = vzip2q_s64(v134, v130);
      v134.i64[1] = v130.i64[1];
      *(int64x2_t *)(v103 - 88) = v134;
      *(int64x2_t *)(v103 - 72) = v137;
      int32x4_t v138 = (int32x4_t)vmulq_f32(v127, v108);
      int32x4_t v139 = v102[-1];
      int8x16_t v140 = (int8x16_t)vzip1q_s32(v139, v138);
      int64x2_t v141 = (int64x2_t)vzip2q_s32(v139, v138);
      int8x16_t v142 = vextq_s8(v140, (int8x16_t)v135, 8uLL);
      int16x8_t v143 = vzip2q_s16(v118, v119);
      v140.i64[1] = v135.i64[0];
      int64x2_t v144 = vzip2q_s64(v141, v135);
      v141.i64[1] = v135.i64[1];
      *(int8x16_t *)(v103 - 56) = v140;
      *(int8x16_t *)(v103 - 40) = v142;
      *(int64x2_t *)(v103 - 24) = v141;
      *(int64x2_t *)(v103 - 8) = v144;
      int16x8_t v145 = vcltzq_s16(v117);
      int32x4_t v146 = (int32x4_t)vzip1q_s16(v117, v145);
      int32x4_t v147 = (int32x4_t)vzip2q_s16(v117, v145);
      int32x4_t v148 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v146), v108);
      int32x4_t v149 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v143, (int16x8_t)0)), v108);
      int8x16_t v150 = (int8x16_t)vzip1q_s32(*v102, v148);
      int64x2_t v151 = (int64x2_t)vzip2q_s32(*v102, v148);
      float32x4_t v152 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v143, (int16x8_t)0)), v108);
      int8x16_t v153 = vextq_s8(v150, (int8x16_t)v149, 8uLL);
      v150.i64[1] = v149.i64[0];
      *(int8x16_t *)(v103 + 24) = v153;
      *(int8x16_t *)(v103 + 8) = v150;
      int64x2_t v154 = vzip2q_s64(v151, (int64x2_t)v149);
      v151.i64[1] = v149.i64[1];
      *(int64x2_t *)(v103 + 40) = v151;
      *(int64x2_t *)(v103 + 56) = v154;
      int32x4_t v155 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v147), v108);
      int32x4_t v156 = v102[1];
      int8x16_t v157 = (int8x16_t)vzip1q_s32(v156, v155);
      int8x16_t v158 = vextq_s8(v157, (int8x16_t)v152, 8uLL);
      v157.i64[1] = v152.i64[0];
      int64x2_t v159 = (int64x2_t)vzip2q_s32(v156, v155);
      int64x2_t v160 = vzip2q_s64(v159, (int64x2_t)v152);
      v159.i64[1] = v152.i64[1];
      v133.i64[0] = vextq_s8((int8x16_t)v130, (int8x16_t)v130, 8uLL).u64[0];
      *(int8x16_t *)(v103 + 88) = v158;
      *(float32x2_t *)(v103 - 96) = vmul_f32(vadd_f32(*(float32x2_t *)v130.i8, *(float32x2_t *)v133.i8), (float32x2_t)0x3F0000003F000000);
      *(int64x2_t *)(v103 + 120) = v160;
      *(float32x2_t *)(v103 - 64) = vmul_f32(vadd_f32(*(float32x2_t *)v133.i8, *(float32x2_t *)v135.i8), (float32x2_t)0x3F0000003F000000);
      v130.i64[0] = vextq_s8((int8x16_t)v135, (int8x16_t)v135, 8uLL).u64[0];
      *(float32x2_t *)(v103 - 32) = vmul_f32(vadd_f32(*(float32x2_t *)v135.i8, *(float32x2_t *)v130.i8), (float32x2_t)0x3F0000003F000000);
      *(int64x2_t *)(v103 + 104) = v159;
      *(float32x2_t *)uint64_t v103 = vmul_f32(vadd_f32(*(float32x2_t *)v130.i8, *(float32x2_t *)v149.i8), (float32x2_t)0x3F0000003F000000);
      v135.i32[0] = *(_DWORD *)(v103 + 52);
      v130.i32[0] = vextq_s8((int8x16_t)v149, (int8x16_t)v149, 8uLL).u32[0];
      *(int8x16_t *)(v103 + 72) = v157;
      v130.i32[1] = v135.i32[0];
      *(float32x2_t *)(v103 + 32) = vmul_f32(vadd_f32(*(float32x2_t *)v149.i8, *(float32x2_t *)v130.i8), (float32x2_t)0x3F0000003F000000);
      *(float *)v130.i32 = vaddq_f32((float32x4_t)vdupq_laneq_s32(v149, 2), v152).f32[0];
      v159.i32[0] = *(_DWORD *)(v103 + 84);
      v152.i32[1] = v159.i32[0];
      *(float32x2_t *)v152.f32 = vadd_f32(*(float32x2_t *)v152.f32, *(float32x2_t *)(v103 + 112));
      *(float *)(v103 + 64) = 0.5 * *(float *)v130.i32;
      *(float *)(v103 + 68) = (float)(*(float *)v135.i32 + *(float *)v159.i32) * 0.5;
      *(float32x2_t *)(v103 + 96) = vmul_f32(*(float32x2_t *)v152.f32, (float32x2_t)0x3F0000003F000000);
      --v101;
      unsigned int v102 = (int32x4_t *)((char *)v102 + a6);
      v103 += a3;
    }
    while (v101 > 1);
  }
  return result;
}

uint64_t from_422_to_r4fl<8,8,(AlphaOutputMethod)2,false>(uint64_t result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  __asm { FMOV            V0.4S, #1.0 }
  if (!v4)
  {
    int8x16_t v87 = a2 + 8;
    int64x2_t v88 = a2 + 32;
    int32x4_t v89 = a2 + 40;
    int v91 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  uint64_t v10 = 8 * a3;
  int v11 = a4 + 8;
  v12.i64[0] = 0xF000F000F000F000;
  v12.i64[1] = 0xF000F000F000F000;
  int16x8_t v13 = vdupq_n_s16(0xFE0u);
  v14.i64[0] = 0xE000E000E000E00;
  v14.i64[1] = 0xE000E000E000E00;
  v15.i64[0] = 0x1000100010001000;
  v15.i64[1] = 0x1000100010001000;
  float32x4_t v16 = (float32x4_t)vdupq_n_s32(0x39008081u);
  do
  {
    int16x8_t v17 = vaddq_s16(vminq_s16(vmaxq_s16(*a2, v12), v13), v14);
    int16x8_t v18 = vaddq_s16(vminq_s16(vmaxq_s16(a2[8], v12), v13), v14);
    int16x8_t v19 = vaddq_s16(vminq_s16(vmaxq_s16(a2[32], v12), v13), v15);
    int16x8_t v20 = vaddq_s16(vminq_s16(vmaxq_s16(a2[40], v12), v13), v15);
    int16x8_t v21 = vzip1q_s16(v19, v20);
    int16x8_t v22 = vzip2q_s16(v19, v20);
    int16x8_t v23 = vcltzq_s16(v17);
    int32x4_t v24 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v17, v23)), v16);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v17, v23));
    int64x2_t v26 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v21, (int16x8_t)0)), v16);
    int64x2_t v27 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v21, (int16x8_t)0)), v16);
    int32x4_t v28 = (int32x4_t)vmulq_f32(v25, v16);
    int8x16_t v29 = (int8x16_t)vzip1q_s32(_Q0, v24);
    int64x2_t v30 = (int64x2_t)vzip2q_s32(_Q0, v24);
    int8x16_t v31 = vextq_s8(v29, (int8x16_t)v26, 8uLL);
    int64x2_t v32 = vzip2q_s64(v30, v26);
    v30.i64[1] = v26.i64[1];
    int8x16_t v33 = (int8x16_t)vzip1q_s32(_Q0, v28);
    int64x2_t v34 = (int64x2_t)vzip2q_s32(_Q0, v28);
    int8x16_t v35 = vextq_s8(v33, (int8x16_t)v27, 8uLL);
    int64x2_t v36 = vzip2q_s64(v34, v27);
    int16x8_t v37 = vcltzq_s16(v18);
    v34.i64[1] = v27.i64[1];
    int32x4_t v38 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v18, v37)), v16);
    v29.i64[1] = v26.i64[0];
    int32x4_t v39 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v18, v37)), v16);
    int32x4_t v40 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v22, (int16x8_t)0)), v16);
    v33.i64[1] = v27.i64[0];
    float32x4_t v41 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v22, (int16x8_t)0)), v16);
    int8x16_t v42 = (int8x16_t)vzip1q_s32(_Q0, v38);
    int64x2_t v43 = (int64x2_t)vzip2q_s32(_Q0, v38);
    int8x16_t v44 = vextq_s8(v42, (int8x16_t)v40, 8uLL);
    *(int64x2_t *)(result + 32) = v30;
    *(int64x2_t *)(result + 48) = v32;
    v42.i64[1] = v40.i64[0];
    int64x2_t v45 = vzip2q_s64(v43, (int64x2_t)v40);
    *(int64x2_t *)(result + 96) = v34;
    *(int64x2_t *)(result + 112) = v36;
    v43.i64[1] = v40.i64[1];
    *(int8x16_t *)(result + 144) = v44;
    *(int64x2_t *)(result + 160) = v43;
    int8x16_t v46 = (int8x16_t)vzip1q_s32(_Q0, v39);
    *(int8x16_t *)int8x8_t result = v29;
    *(int8x16_t *)(result + 16) = v31;
    int8x16_t v47 = vextq_s8(v46, (int8x16_t)v41, 8uLL);
    v46.i64[1] = v41.i64[0];
    *(int8x16_t *)(result + 64) = v33;
    *(int8x16_t *)(result + 80) = v35;
    int64x2_t v48 = (int64x2_t)vzip2q_s32(_Q0, v39);
    int64x2_t v49 = vzip2q_s64(v48, (int64x2_t)v41);
    v48.i64[1] = v41.i64[1];
    *(int8x16_t *)(result + 128) = v42;
    *(int64x2_t *)(result + 176) = v45;
    *(int8x16_t *)(result + 192) = v46;
    *(int64x2_t *)(result + 224) = v48;
    *(int64x2_t *)(result + 240) = v49;
    v48.i64[0] = vextq_s8((int8x16_t)v26, (int8x16_t)v26, 8uLL).u64[0];
    *(int8x16_t *)(result + 208) = v47;
    *(float32x2_t *)(result + 56) = vmul_f32(vadd_f32(*(float32x2_t *)v48.i8, *(float32x2_t *)v27.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)(result + 24) = vmul_f32(vadd_f32(*(float32x2_t *)v26.i8, *(float32x2_t *)v48.i8), (float32x2_t)0x3F0000003F000000);
    v26.i64[0] = vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL).u64[0];
    *(float32x2_t *)(result + 88) = vmul_f32(vadd_f32(*(float32x2_t *)v27.i8, *(float32x2_t *)v26.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)(result + 120) = vmul_f32(vadd_f32(*(float32x2_t *)v26.i8, *(float32x2_t *)v40.i8), (float32x2_t)0x3F0000003F000000);
    v26.i32[0] = vextq_s8((int8x16_t)v40, (int8x16_t)v40, 8uLL).u32[0];
    v26.i32[1] = *(_DWORD *)(result + 172);
    v48.i32[0] = *(_DWORD *)(result + 204);
    *(float *)(result + 184) = 0.5 * vaddq_f32((float32x4_t)vdupq_laneq_s32(v40, 2), v41).f32[0];
    *(float *)(result + 188) = (float)(*(float *)&v26.i32[1] + *(float *)v48.i32) * 0.5;
    v27.i64[0] = *(void *)(result + 232);
    *(float32x2_t *)(result + 152) = vmul_f32(vadd_f32(*(float32x2_t *)v40.i8, *(float32x2_t *)v26.i8), (float32x2_t)0x3F0000003F000000);
    v41.i32[1] = v48.i32[0];
    *(float32x2_t *)(result + 216) = vmul_f32(vadd_f32(*(float32x2_t *)v41.f32, *(float32x2_t *)v27.i8), (float32x2_t)0x3F0000003F000000);
    uint64_t v50 = result + v10;
    int16x8_t v51 = vaddq_s16(vminq_s16(vmaxq_s16(a2[16], v12), v13), v14);
    int16x8_t v52 = vaddq_s16(vminq_s16(vmaxq_s16(a2[24], v12), v13), v14);
    int16x8_t v53 = vaddq_s16(vminq_s16(vmaxq_s16(a2[48], v12), v13), v15);
    int16x8_t v54 = vaddq_s16(vminq_s16(vmaxq_s16(a2[56], v12), v13), v15);
    int16x8_t v55 = vzip1q_s16(v53, v54);
    int16x8_t v56 = vzip2q_s16(v53, v54);
    int16x8_t v57 = vcltzq_s16(v51);
    int32x4_t v58 = (int32x4_t)vzip1q_s16(v51, v57);
    int32x4_t v59 = (int32x4_t)vzip2q_s16(v51, v57);
    int32x4_t v60 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v58), v16);
    int64x2_t v61 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v55, (int16x8_t)0)), v16);
    int32x4_t v62 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v59), v16);
    int64x2_t v63 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v55, (int16x8_t)0)), v16);
    int8x16_t v64 = (int8x16_t)vzip1q_s32(_Q0, v60);
    int64x2_t v65 = (int64x2_t)vzip2q_s32(_Q0, v60);
    int8x16_t v66 = vextq_s8(v64, (int8x16_t)v61, 8uLL);
    int64x2_t v67 = vzip2q_s64(v65, v61);
    v65.i64[1] = v61.i64[1];
    int8x16_t v68 = (int8x16_t)vzip1q_s32(_Q0, v62);
    int64x2_t v69 = (int64x2_t)vzip2q_s32(_Q0, v62);
    int8x16_t v70 = vextq_s8(v68, (int8x16_t)v63, 8uLL);
    int64x2_t v71 = vzip2q_s64(v69, v63);
    v69.i64[1] = v63.i64[1];
    int16x8_t v72 = vcltzq_s16(v52);
    v64.i64[1] = v61.i64[0];
    v68.i64[1] = v63.i64[0];
    int32x4_t v73 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v52, v72)), v16);
    int32x4_t v74 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v52, v72)), v16);
    *(int64x2_t *)(v50 + 32) = v65;
    *(int64x2_t *)(v50 + 48) = v67;
    int32x4_t v75 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v56, (int16x8_t)0)), v16);
    float32x4_t v76 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v56, (int16x8_t)0)), v16);
    *(int64x2_t *)(v50 + 96) = v69;
    *(int64x2_t *)(v50 + 112) = v71;
    int8x16_t v77 = (int8x16_t)vzip1q_s32(_Q0, v73);
    int64x2_t v78 = (int64x2_t)vzip2q_s32(_Q0, v73);
    int64x2_t v79 = vzip2q_s64(v78, (int64x2_t)v75);
    v78.i64[1] = v75.i64[1];
    *(int64x2_t *)(v50 + 160) = v78;
    *(int64x2_t *)(v50 + 176) = v79;
    int8x16_t v80 = vextq_s8(v77, (int8x16_t)v75, 8uLL);
    v77.i64[1] = v75.i64[0];
    *(int8x16_t *)uint64_t v50 = v64;
    *(int8x16_t *)(v50 + 16) = v66;
    int8x16_t v81 = (int8x16_t)vzip1q_s32(_Q0, v74);
    int64x2_t v82 = (int64x2_t)vzip2q_s32(_Q0, v74);
    int8x16_t v83 = vextq_s8(v81, (int8x16_t)v76, 8uLL);
    *(int8x16_t *)(v50 + 64) = v68;
    *(int8x16_t *)(v50 + 80) = v70;
    v81.i64[1] = v76.i64[0];
    int64x2_t v84 = vzip2q_s64(v82, (int64x2_t)v76);
    *(int8x16_t *)(v50 + 128) = v77;
    *(int8x16_t *)(v50 + 144) = v80;
    v82.i64[1] = v76.i64[1];
    *(int64x2_t *)(v50 + 224) = v82;
    *(int64x2_t *)(v50 + 240) = v84;
    *(int8x16_t *)(v50 + 192) = v81;
    *(int8x16_t *)(v50 + 208) = v83;
    v81.i64[0] = vextq_s8((int8x16_t)v61, (int8x16_t)v61, 8uLL).u64[0];
    *(float32x2_t *)(v50 + 24) = vmul_f32(vadd_f32(*(float32x2_t *)v61.i8, *(float32x2_t *)v81.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)(v50 + 56) = vmul_f32(vadd_f32(*(float32x2_t *)v81.i8, *(float32x2_t *)v63.i8), (float32x2_t)0x3F0000003F000000);
    v61.i64[0] = vextq_s8((int8x16_t)v63, (int8x16_t)v63, 8uLL).u64[0];
    *(float32x2_t *)(v50 + 88) = vmul_f32(vadd_f32(*(float32x2_t *)v63.i8, *(float32x2_t *)v61.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)(v50 + 120) = vmul_f32(vadd_f32(*(float32x2_t *)v61.i8, *(float32x2_t *)v75.i8), (float32x2_t)0x3F0000003F000000);
    v61.i32[0] = vextq_s8((int8x16_t)v75, (int8x16_t)v75, 8uLL).u32[0];
    v61.i32[1] = *(_DWORD *)(result + v10 + 172);
    v82.i32[0] = *(_DWORD *)(result + v10 + 204);
    *(float *)(v50 + 184) = 0.5 * vaddq_f32((float32x4_t)vdupq_laneq_s32(v75, 2), v76).f32[0];
    *(float *)(v50 + 188) = (float)(*(float *)&v61.i32[1] + *(float *)v82.i32) * 0.5;
    *(float32x2_t *)(v50 + 152) = vmul_f32(vadd_f32(*(float32x2_t *)v75.i8, *(float32x2_t *)v61.i8), (float32x2_t)0x3F0000003F000000);
    v76.i32[1] = v82.i32[0];
    *(float32x2_t *)(v50 + 216) = vmul_f32(vadd_f32(*(float32x2_t *)v76.f32, *(float32x2_t *)(result + v10 + 232)), (float32x2_t)0x3F0000003F000000);
    ++a2;
    result += a3;
    int v85 = v11 - 1;
    int v86 = v11 - 16;
    --v11;
  }
  while (v86 > 1);
  int8x16_t v87 = a2 + 8;
  int64x2_t v88 = a2 + 32;
  int32x4_t v89 = a2 + 40;
  if (a4 <= 8) {
    int v90 = 8;
  }
  else {
    int v90 = a4;
  }
  int v91 = v85 - v90;
  if (v91 >= 1)
  {
LABEL_13:
    unsigned int v92 = v91 + 1;
    uint64_t v93 = result + 120;
    v94.i64[0] = 0xF000F000F000F000;
    v94.i64[1] = 0xF000F000F000F000;
    int16x8_t v95 = vdupq_n_s16(0xFE0u);
    v96.i64[0] = 0xE000E000E000E00;
    v96.i64[1] = 0xE000E000E000E00;
    v97.i64[0] = 0x1000100010001000;
    v97.i64[1] = 0x1000100010001000;
    float32x4_t v98 = (float32x4_t)vdupq_n_s32(0x39008081u);
    do
    {
      int16x8_t v99 = *a2++;
      int16x8_t v100 = vmaxq_s16(v99, v94);
      int16x8_t v101 = *v87++;
      int16x8_t v102 = vmaxq_s16(v101, v94);
      int16x8_t v103 = *v88++;
      int16x8_t v104 = vmaxq_s16(v103, v94);
      int16x8_t v105 = *v89++;
      int16x8_t v106 = vaddq_s16(vminq_s16(v100, v95), v96);
      int16x8_t v107 = vaddq_s16(vminq_s16(v102, v95), v96);
      int16x8_t v108 = vaddq_s16(vminq_s16(v104, v95), v97);
      int16x8_t v109 = vaddq_s16(vminq_s16(vmaxq_s16(v105, v94), v95), v97);
      int16x8_t v110 = vzip1q_s16(v108, v109);
      int16x8_t v111 = vzip2q_s16(v108, v109);
      int16x8_t v112 = vcltzq_s16(v106);
      int32x4_t v113 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v106, v112)), v98);
      int32x4_t v114 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v106, v112)), v98);
      int64x2_t v115 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v110, (int16x8_t)0)), v98);
      float32x4_t v116 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v110, (int16x8_t)0));
      int8x16_t v117 = (int8x16_t)vzip1q_s32(_Q0, v113);
      int64x2_t v118 = (int64x2_t)vzip2q_s32(_Q0, v113);
      int8x16_t v119 = vextq_s8(v117, (int8x16_t)v115, 8uLL);
      v113.i64[0] = v117.i64[0];
      int64x2_t v120 = vzip2q_s64(v118, v115);
      v118.i64[1] = v115.i64[1];
      v113.i64[1] = v115.i64[0];
      int64x2_t v121 = (int64x2_t)vmulq_f32(v116, v98);
      int8x16_t v122 = (int8x16_t)vzip1q_s32(_Q0, v114);
      int64x2_t v123 = (int64x2_t)vzip2q_s32(_Q0, v114);
      int16x8_t v124 = vcltzq_s16(v107);
      *(int8x16_t *)(v93 - 104) = v119;
      int32x4_t v125 = (int32x4_t)vzip1q_s16(v107, v124);
      int32x4_t v126 = (int32x4_t)vzip2q_s16(v107, v124);
      int64x2_t v127 = vzip2q_s64(v123, v121);
      v123.i64[1] = v121.i64[1];
      *(int64x2_t *)(v93 - 72) = v120;
      int32x4_t v128 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v125), v98);
      *(int8x16_t *)(v93 - 40) = vextq_s8(v122, (int8x16_t)v121, 8uLL);
      int32x4_t v129 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v126), v98);
      int32x4_t v130 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v111, (int16x8_t)0)), v98);
      float32x4_t v131 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v111, (int16x8_t)0)), v98);
      *(int64x2_t *)(v93 - 8) = v127;
      int8x16_t v132 = (int8x16_t)vzip1q_s32(_Q0, v128);
      int64x2_t v133 = (int64x2_t)vzip2q_s32(_Q0, v128);
      *(int8x16_t *)(v93 + 24) = vextq_s8(v132, (int8x16_t)v130, 8uLL);
      int64x2_t v134 = vzip2q_s64(v133, (int64x2_t)v130);
      *(int64x2_t *)(v93 - 88) = v118;
      v133.i64[1] = v130.i64[1];
      *(int64x2_t *)(v93 + 56) = v134;
      int8x16_t v135 = (int8x16_t)vzip1q_s32(_Q0, v129);
      int64x2_t v136 = (int64x2_t)vzip2q_s32(_Q0, v129);
      *(int64x2_t *)(v93 - 24) = v123;
      *(int8x16_t *)(v93 + 88) = vextq_s8(v135, (int8x16_t)v131, 8uLL);
      int64x2_t v137 = vzip2q_s64(v136, (int64x2_t)v131);
      v136.i64[1] = v131.i64[1];
      *(int64x2_t *)(v93 + 40) = v133;
      *(int64x2_t *)(v93 + 104) = v136;
      v122.i64[1] = v121.i64[0];
      *(int32x4_t *)(v93 - 120) = v113;
      v132.i64[1] = v130.i64[0];
      v135.i64[1] = v131.i64[0];
      *(int8x16_t *)(v93 - 56) = v122;
      *(int64x2_t *)(v93 + 120) = v137;
      v113.i64[0] = vextq_s8((int8x16_t)v115, (int8x16_t)v115, 8uLL).u64[0];
      *(float32x2_t *)(v93 - 96) = vmul_f32(vadd_f32(*(float32x2_t *)v115.i8, *(float32x2_t *)v113.i8), (float32x2_t)0x3F0000003F000000);
      *(int8x16_t *)(v93 + 8) = v132;
      *(float32x2_t *)(v93 - 64) = vmul_f32(vadd_f32(*(float32x2_t *)v113.i8, *(float32x2_t *)v121.i8), (float32x2_t)0x3F0000003F000000);
      v115.i64[0] = vextq_s8((int8x16_t)v121, (int8x16_t)v121, 8uLL).u64[0];
      *(int8x16_t *)(v93 + 72) = v135;
      *(float32x2_t *)(v93 - 32) = vmul_f32(vadd_f32(*(float32x2_t *)v121.i8, *(float32x2_t *)v115.i8), (float32x2_t)0x3F0000003F000000);
      *(float32x2_t *)uint64_t v93 = vmul_f32(vadd_f32(*(float32x2_t *)v115.i8, *(float32x2_t *)v130.i8), (float32x2_t)0x3F0000003F000000);
      v121.i32[0] = vextq_s8((int8x16_t)v130, (int8x16_t)v130, 8uLL).u32[0];
      v121.i32[1] = *(_DWORD *)(v93 + 52);
      *(float32x2_t *)v121.i8 = vadd_f32(*(float32x2_t *)v130.i8, *(float32x2_t *)v121.i8);
      *(float *)v113.i32 = vaddq_f32((float32x4_t)vdupq_laneq_s32(v130, 2), v131).f32[0];
      v130.i32[0] = *(_DWORD *)(v93 + 84);
      *(float *)v115.i32 = (float)(*(float *)(v93 + 52) + *(float *)v130.i32) * 0.5;
      *(float *)(v93 + 64) = 0.5 * *(float *)v113.i32;
      *(_DWORD *)(v93 + 68) = v115.i32[0];
      v115.i64[0] = *(void *)(v93 + 112);
      v131.i32[1] = v130.i32[0];
      *(float32x2_t *)(v93 + 32) = vmul_f32(*(float32x2_t *)v121.i8, (float32x2_t)0x3F0000003F000000);
      *(float32x2_t *)(v93 + 96) = vmul_f32(vadd_f32(*(float32x2_t *)v131.f32, *(float32x2_t *)v115.i8), (float32x2_t)0x3F0000003F000000);
      --v92;
      v93 += a3;
    }
    while (v92 > 1);
  }
  return result;
}

uint64_t from_422_to_r4fl<8,8,(AlphaOutputMethod)2,true>(uint64_t result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  __asm { FMOV            V0.4S, #1.0 }
  if (!v4)
  {
    int8x16_t v87 = a2 + 8;
    int64x2_t v88 = a2 + 32;
    int32x4_t v89 = a2 + 40;
    int v91 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  uint64_t v10 = 8 * a3;
  int v11 = a4 + 8;
  v12.i64[0] = 0xF000F000F000F000;
  v12.i64[1] = 0xF000F000F000F000;
  int16x8_t v13 = vdupq_n_s16(0xFE0u);
  v14.i64[0] = 0xE000E000E000E00;
  v14.i64[1] = 0xE000E000E000E00;
  v15.i64[0] = 0x1000100010001000;
  v15.i64[1] = 0x1000100010001000;
  float32x4_t v16 = (float32x4_t)vdupq_n_s32(0x39008081u);
  do
  {
    int16x8_t v17 = vaddq_s16(vminq_s16(vmaxq_s16(*a2, v12), v13), v14);
    int16x8_t v18 = vaddq_s16(vminq_s16(vmaxq_s16(a2[8], v12), v13), v14);
    int16x8_t v19 = vaddq_s16(vminq_s16(vmaxq_s16(a2[32], v12), v13), v15);
    int16x8_t v20 = vaddq_s16(vminq_s16(vmaxq_s16(a2[40], v12), v13), v15);
    int16x8_t v21 = vzip1q_s16(v19, v20);
    int16x8_t v22 = vzip2q_s16(v19, v20);
    int16x8_t v23 = vcltzq_s16(v17);
    int32x4_t v24 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v17, v23)), v16);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v17, v23));
    int64x2_t v26 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v21, (int16x8_t)0)), v16);
    int64x2_t v27 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v21, (int16x8_t)0)), v16);
    int32x4_t v28 = (int32x4_t)vmulq_f32(v25, v16);
    int8x16_t v29 = (int8x16_t)vzip1q_s32(_Q0, v24);
    int64x2_t v30 = (int64x2_t)vzip2q_s32(_Q0, v24);
    int8x16_t v31 = vextq_s8(v29, (int8x16_t)v26, 8uLL);
    int64x2_t v32 = vzip2q_s64(v30, v26);
    v30.i64[1] = v26.i64[1];
    int8x16_t v33 = (int8x16_t)vzip1q_s32(_Q0, v28);
    int64x2_t v34 = (int64x2_t)vzip2q_s32(_Q0, v28);
    int8x16_t v35 = vextq_s8(v33, (int8x16_t)v27, 8uLL);
    int64x2_t v36 = vzip2q_s64(v34, v27);
    int16x8_t v37 = vcltzq_s16(v18);
    v34.i64[1] = v27.i64[1];
    int32x4_t v38 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v18, v37)), v16);
    v29.i64[1] = v26.i64[0];
    int32x4_t v39 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v18, v37)), v16);
    int32x4_t v40 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v22, (int16x8_t)0)), v16);
    v33.i64[1] = v27.i64[0];
    float32x4_t v41 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v22, (int16x8_t)0)), v16);
    int8x16_t v42 = (int8x16_t)vzip1q_s32(_Q0, v38);
    int64x2_t v43 = (int64x2_t)vzip2q_s32(_Q0, v38);
    int8x16_t v44 = vextq_s8(v42, (int8x16_t)v40, 8uLL);
    *(int64x2_t *)(result + 32) = v30;
    *(int64x2_t *)(result + 48) = v32;
    v42.i64[1] = v40.i64[0];
    int64x2_t v45 = vzip2q_s64(v43, (int64x2_t)v40);
    *(int64x2_t *)(result + 96) = v34;
    *(int64x2_t *)(result + 112) = v36;
    v43.i64[1] = v40.i64[1];
    *(int8x16_t *)(result + 144) = v44;
    *(int64x2_t *)(result + 160) = v43;
    int8x16_t v46 = (int8x16_t)vzip1q_s32(_Q0, v39);
    *(int8x16_t *)int8x8_t result = v29;
    *(int8x16_t *)(result + 16) = v31;
    int8x16_t v47 = vextq_s8(v46, (int8x16_t)v41, 8uLL);
    v46.i64[1] = v41.i64[0];
    *(int8x16_t *)(result + 64) = v33;
    *(int8x16_t *)(result + 80) = v35;
    int64x2_t v48 = (int64x2_t)vzip2q_s32(_Q0, v39);
    int64x2_t v49 = vzip2q_s64(v48, (int64x2_t)v41);
    v48.i64[1] = v41.i64[1];
    *(int8x16_t *)(result + 128) = v42;
    *(int64x2_t *)(result + 176) = v45;
    *(int8x16_t *)(result + 192) = v46;
    *(int64x2_t *)(result + 224) = v48;
    *(int64x2_t *)(result + 240) = v49;
    v48.i64[0] = vextq_s8((int8x16_t)v26, (int8x16_t)v26, 8uLL).u64[0];
    *(int8x16_t *)(result + 208) = v47;
    *(float32x2_t *)(result + 56) = vmul_f32(vadd_f32(*(float32x2_t *)v48.i8, *(float32x2_t *)v27.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)(result + 24) = vmul_f32(vadd_f32(*(float32x2_t *)v26.i8, *(float32x2_t *)v48.i8), (float32x2_t)0x3F0000003F000000);
    v26.i64[0] = vextq_s8((int8x16_t)v27, (int8x16_t)v27, 8uLL).u64[0];
    *(float32x2_t *)(result + 88) = vmul_f32(vadd_f32(*(float32x2_t *)v27.i8, *(float32x2_t *)v26.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)(result + 120) = vmul_f32(vadd_f32(*(float32x2_t *)v26.i8, *(float32x2_t *)v40.i8), (float32x2_t)0x3F0000003F000000);
    v26.i32[0] = vextq_s8((int8x16_t)v40, (int8x16_t)v40, 8uLL).u32[0];
    v26.i32[1] = *(_DWORD *)(result + 172);
    v48.i32[0] = *(_DWORD *)(result + 204);
    *(float *)(result + 184) = 0.5 * vaddq_f32((float32x4_t)vdupq_laneq_s32(v40, 2), v41).f32[0];
    *(float *)(result + 188) = (float)(*(float *)&v26.i32[1] + *(float *)v48.i32) * 0.5;
    v27.i64[0] = *(void *)(result + 232);
    *(float32x2_t *)(result + 152) = vmul_f32(vadd_f32(*(float32x2_t *)v40.i8, *(float32x2_t *)v26.i8), (float32x2_t)0x3F0000003F000000);
    v41.i32[1] = v48.i32[0];
    *(float32x2_t *)(result + 216) = vmul_f32(vadd_f32(*(float32x2_t *)v41.f32, *(float32x2_t *)v27.i8), (float32x2_t)0x3F0000003F000000);
    uint64_t v50 = result + v10;
    int16x8_t v51 = vaddq_s16(vminq_s16(vmaxq_s16(a2[16], v12), v13), v14);
    int16x8_t v52 = vaddq_s16(vminq_s16(vmaxq_s16(a2[24], v12), v13), v14);
    int16x8_t v53 = vaddq_s16(vminq_s16(vmaxq_s16(a2[48], v12), v13), v15);
    int16x8_t v54 = vaddq_s16(vminq_s16(vmaxq_s16(a2[56], v12), v13), v15);
    int16x8_t v55 = vzip1q_s16(v53, v54);
    int16x8_t v56 = vzip2q_s16(v53, v54);
    int16x8_t v57 = vcltzq_s16(v51);
    int32x4_t v58 = (int32x4_t)vzip1q_s16(v51, v57);
    int32x4_t v59 = (int32x4_t)vzip2q_s16(v51, v57);
    int32x4_t v60 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v58), v16);
    int64x2_t v61 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v55, (int16x8_t)0)), v16);
    int32x4_t v62 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v59), v16);
    int64x2_t v63 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v55, (int16x8_t)0)), v16);
    int8x16_t v64 = (int8x16_t)vzip1q_s32(_Q0, v60);
    int64x2_t v65 = (int64x2_t)vzip2q_s32(_Q0, v60);
    int8x16_t v66 = vextq_s8(v64, (int8x16_t)v61, 8uLL);
    int64x2_t v67 = vzip2q_s64(v65, v61);
    v65.i64[1] = v61.i64[1];
    int8x16_t v68 = (int8x16_t)vzip1q_s32(_Q0, v62);
    int64x2_t v69 = (int64x2_t)vzip2q_s32(_Q0, v62);
    int8x16_t v70 = vextq_s8(v68, (int8x16_t)v63, 8uLL);
    int64x2_t v71 = vzip2q_s64(v69, v63);
    v69.i64[1] = v63.i64[1];
    int16x8_t v72 = vcltzq_s16(v52);
    v64.i64[1] = v61.i64[0];
    v68.i64[1] = v63.i64[0];
    int32x4_t v73 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v52, v72)), v16);
    int32x4_t v74 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v52, v72)), v16);
    *(int64x2_t *)(v50 + 32) = v65;
    *(int64x2_t *)(v50 + 48) = v67;
    int32x4_t v75 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v56, (int16x8_t)0)), v16);
    float32x4_t v76 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v56, (int16x8_t)0)), v16);
    *(int64x2_t *)(v50 + 96) = v69;
    *(int64x2_t *)(v50 + 112) = v71;
    int8x16_t v77 = (int8x16_t)vzip1q_s32(_Q0, v73);
    int64x2_t v78 = (int64x2_t)vzip2q_s32(_Q0, v73);
    int64x2_t v79 = vzip2q_s64(v78, (int64x2_t)v75);
    v78.i64[1] = v75.i64[1];
    *(int64x2_t *)(v50 + 160) = v78;
    *(int64x2_t *)(v50 + 176) = v79;
    int8x16_t v80 = vextq_s8(v77, (int8x16_t)v75, 8uLL);
    v77.i64[1] = v75.i64[0];
    *(int8x16_t *)uint64_t v50 = v64;
    *(int8x16_t *)(v50 + 16) = v66;
    int8x16_t v81 = (int8x16_t)vzip1q_s32(_Q0, v74);
    int64x2_t v82 = (int64x2_t)vzip2q_s32(_Q0, v74);
    int8x16_t v83 = vextq_s8(v81, (int8x16_t)v76, 8uLL);
    *(int8x16_t *)(v50 + 64) = v68;
    *(int8x16_t *)(v50 + 80) = v70;
    v81.i64[1] = v76.i64[0];
    int64x2_t v84 = vzip2q_s64(v82, (int64x2_t)v76);
    *(int8x16_t *)(v50 + 128) = v77;
    *(int8x16_t *)(v50 + 144) = v80;
    v82.i64[1] = v76.i64[1];
    *(int64x2_t *)(v50 + 224) = v82;
    *(int64x2_t *)(v50 + 240) = v84;
    *(int8x16_t *)(v50 + 192) = v81;
    *(int8x16_t *)(v50 + 208) = v83;
    v81.i64[0] = vextq_s8((int8x16_t)v61, (int8x16_t)v61, 8uLL).u64[0];
    *(float32x2_t *)(v50 + 24) = vmul_f32(vadd_f32(*(float32x2_t *)v61.i8, *(float32x2_t *)v81.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)(v50 + 56) = vmul_f32(vadd_f32(*(float32x2_t *)v81.i8, *(float32x2_t *)v63.i8), (float32x2_t)0x3F0000003F000000);
    v61.i64[0] = vextq_s8((int8x16_t)v63, (int8x16_t)v63, 8uLL).u64[0];
    *(float32x2_t *)(v50 + 88) = vmul_f32(vadd_f32(*(float32x2_t *)v63.i8, *(float32x2_t *)v61.i8), (float32x2_t)0x3F0000003F000000);
    *(float32x2_t *)(v50 + 120) = vmul_f32(vadd_f32(*(float32x2_t *)v61.i8, *(float32x2_t *)v75.i8), (float32x2_t)0x3F0000003F000000);
    v61.i32[0] = vextq_s8((int8x16_t)v75, (int8x16_t)v75, 8uLL).u32[0];
    v61.i32[1] = *(_DWORD *)(result + v10 + 172);
    v82.i32[0] = *(_DWORD *)(result + v10 + 204);
    *(float *)(v50 + 184) = 0.5 * vaddq_f32((float32x4_t)vdupq_laneq_s32(v75, 2), v76).f32[0];
    *(float *)(v50 + 188) = (float)(*(float *)&v61.i32[1] + *(float *)v82.i32) * 0.5;
    *(float32x2_t *)(v50 + 152) = vmul_f32(vadd_f32(*(float32x2_t *)v75.i8, *(float32x2_t *)v61.i8), (float32x2_t)0x3F0000003F000000);
    v76.i32[1] = v82.i32[0];
    *(float32x2_t *)(v50 + 216) = vmul_f32(vadd_f32(*(float32x2_t *)v76.f32, *(float32x2_t *)(result + v10 + 232)), (float32x2_t)0x3F0000003F000000);
    ++a2;
    result += a3;
    int v85 = v11 - 1;
    int v86 = v11 - 16;
    --v11;
  }
  while (v86 > 1);
  int8x16_t v87 = a2 + 8;
  int64x2_t v88 = a2 + 32;
  int32x4_t v89 = a2 + 40;
  if (a4 <= 8) {
    int v90 = 8;
  }
  else {
    int v90 = a4;
  }
  int v91 = v85 - v90;
  if (v91 >= 1)
  {
LABEL_13:
    unsigned int v92 = v91 + 1;
    uint64_t v93 = result + 120;
    v94.i64[0] = 0xF000F000F000F000;
    v94.i64[1] = 0xF000F000F000F000;
    int16x8_t v95 = vdupq_n_s16(0xFE0u);
    v96.i64[0] = 0xE000E000E000E00;
    v96.i64[1] = 0xE000E000E000E00;
    v97.i64[0] = 0x1000100010001000;
    v97.i64[1] = 0x1000100010001000;
    float32x4_t v98 = (float32x4_t)vdupq_n_s32(0x39008081u);
    do
    {
      int16x8_t v99 = *a2++;
      int16x8_t v100 = vmaxq_s16(v99, v94);
      int16x8_t v101 = *v87++;
      int16x8_t v102 = vmaxq_s16(v101, v94);
      int16x8_t v103 = *v88++;
      int16x8_t v104 = vmaxq_s16(v103, v94);
      int16x8_t v105 = *v89++;
      int16x8_t v106 = vaddq_s16(vminq_s16(v100, v95), v96);
      int16x8_t v107 = vaddq_s16(vminq_s16(v102, v95), v96);
      int16x8_t v108 = vaddq_s16(vminq_s16(v104, v95), v97);
      int16x8_t v109 = vaddq_s16(vminq_s16(vmaxq_s16(v105, v94), v95), v97);
      int16x8_t v110 = vzip1q_s16(v108, v109);
      int16x8_t v111 = vzip2q_s16(v108, v109);
      int16x8_t v112 = vcltzq_s16(v106);
      int32x4_t v113 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v106, v112)), v98);
      int32x4_t v114 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v106, v112)), v98);
      int64x2_t v115 = (int64x2_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v110, (int16x8_t)0)), v98);
      float32x4_t v116 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v110, (int16x8_t)0));
      int8x16_t v117 = (int8x16_t)vzip1q_s32(_Q0, v113);
      int64x2_t v118 = (int64x2_t)vzip2q_s32(_Q0, v113);
      int8x16_t v119 = vextq_s8(v117, (int8x16_t)v115, 8uLL);
      v113.i64[0] = v117.i64[0];
      int64x2_t v120 = vzip2q_s64(v118, v115);
      v118.i64[1] = v115.i64[1];
      v113.i64[1] = v115.i64[0];
      int64x2_t v121 = (int64x2_t)vmulq_f32(v116, v98);
      int8x16_t v122 = (int8x16_t)vzip1q_s32(_Q0, v114);
      int64x2_t v123 = (int64x2_t)vzip2q_s32(_Q0, v114);
      int16x8_t v124 = vcltzq_s16(v107);
      *(int8x16_t *)(v93 - 104) = v119;
      int32x4_t v125 = (int32x4_t)vzip1q_s16(v107, v124);
      int32x4_t v126 = (int32x4_t)vzip2q_s16(v107, v124);
      int64x2_t v127 = vzip2q_s64(v123, v121);
      v123.i64[1] = v121.i64[1];
      *(int64x2_t *)(v93 - 72) = v120;
      int32x4_t v128 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v125), v98);
      *(int8x16_t *)(v93 - 40) = vextq_s8(v122, (int8x16_t)v121, 8uLL);
      int32x4_t v129 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v126), v98);
      int32x4_t v130 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v111, (int16x8_t)0)), v98);
      float32x4_t v131 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v111, (int16x8_t)0)), v98);
      *(int64x2_t *)(v93 - 8) = v127;
      int8x16_t v132 = (int8x16_t)vzip1q_s32(_Q0, v128);
      int64x2_t v133 = (int64x2_t)vzip2q_s32(_Q0, v128);
      *(int8x16_t *)(v93 + 24) = vextq_s8(v132, (int8x16_t)v130, 8uLL);
      int64x2_t v134 = vzip2q_s64(v133, (int64x2_t)v130);
      *(int64x2_t *)(v93 - 88) = v118;
      v133.i64[1] = v130.i64[1];
      *(int64x2_t *)(v93 + 56) = v134;
      int8x16_t v135 = (int8x16_t)vzip1q_s32(_Q0, v129);
      int64x2_t v136 = (int64x2_t)vzip2q_s32(_Q0, v129);
      *(int64x2_t *)(v93 - 24) = v123;
      *(int8x16_t *)(v93 + 88) = vextq_s8(v135, (int8x16_t)v131, 8uLL);
      int64x2_t v137 = vzip2q_s64(v136, (int64x2_t)v131);
      v136.i64[1] = v131.i64[1];
      *(int64x2_t *)(v93 + 40) = v133;
      *(int64x2_t *)(v93 + 104) = v136;
      v122.i64[1] = v121.i64[0];
      *(int32x4_t *)(v93 - 120) = v113;
      v132.i64[1] = v130.i64[0];
      v135.i64[1] = v131.i64[0];
      *(int8x16_t *)(v93 - 56) = v122;
      *(int64x2_t *)(v93 + 120) = v137;
      v113.i64[0] = vextq_s8((int8x16_t)v115, (int8x16_t)v115, 8uLL).u64[0];
      *(float32x2_t *)(v93 - 96) = vmul_f32(vadd_f32(*(float32x2_t *)v115.i8, *(float32x2_t *)v113.i8), (float32x2_t)0x3F0000003F000000);
      *(int8x16_t *)(v93 + 8) = v132;
      *(float32x2_t *)(v93 - 64) = vmul_f32(vadd_f32(*(float32x2_t *)v113.i8, *(float32x2_t *)v121.i8), (float32x2_t)0x3F0000003F000000);
      v115.i64[0] = vextq_s8((int8x16_t)v121, (int8x16_t)v121, 8uLL).u64[0];
      *(int8x16_t *)(v93 + 72) = v135;
      *(float32x2_t *)(v93 - 32) = vmul_f32(vadd_f32(*(float32x2_t *)v121.i8, *(float32x2_t *)v115.i8), (float32x2_t)0x3F0000003F000000);
      *(float32x2_t *)uint64_t v93 = vmul_f32(vadd_f32(*(float32x2_t *)v115.i8, *(float32x2_t *)v130.i8), (float32x2_t)0x3F0000003F000000);
      v121.i32[0] = vextq_s8((int8x16_t)v130, (int8x16_t)v130, 8uLL).u32[0];
      v121.i32[1] = *(_DWORD *)(v93 + 52);
      *(float32x2_t *)v121.i8 = vadd_f32(*(float32x2_t *)v130.i8, *(float32x2_t *)v121.i8);
      *(float *)v113.i32 = vaddq_f32((float32x4_t)vdupq_laneq_s32(v130, 2), v131).f32[0];
      v130.i32[0] = *(_DWORD *)(v93 + 84);
      *(float *)v115.i32 = (float)(*(float *)(v93 + 52) + *(float *)v130.i32) * 0.5;
      *(float *)(v93 + 64) = 0.5 * *(float *)v113.i32;
      *(_DWORD *)(v93 + 68) = v115.i32[0];
      v115.i64[0] = *(void *)(v93 + 112);
      v131.i32[1] = v130.i32[0];
      *(float32x2_t *)(v93 + 32) = vmul_f32(*(float32x2_t *)v121.i8, (float32x2_t)0x3F0000003F000000);
      *(float32x2_t *)(v93 + 96) = vmul_f32(vadd_f32(*(float32x2_t *)v131.f32, *(float32x2_t *)v115.i8), (float32x2_t)0x3F0000003F000000);
      --v92;
      v93 += a3;
    }
    while (v92 > 1);
  }
  return result;
}

int8x16_t *from_444_to_2vuy<8,8,(AlphaOutputMethod)0,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int16x8_t v21 = a2 + 8;
    int16x8_t v22 = a2 + 32;
    int16x8_t v23 = a2 + 40;
    int32x4_t v24 = a2 + 64;
    float32x4_t v25 = a2 + 72;
    int v27 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int16x8_t v9 = (char *)result;
  do
  {
    uint64_t v10 = a2 + 1;
    int v11 = &result->i8[8 * a3];
    unsigned long long v12 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v12 = vqmovun_s16((int16x8_t)v12);
    unsigned long long v13 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v13 = vqmovun_s16((int16x8_t)v13);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6), v7), v8);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vzip1q_s8((int8x16_t)v12, (int8x16_t)v13), v6), v7), v8);
    vst2_s8(v9, *(int8x8x2_t *)((char *)&v14 - 8));
    v9 += a3;
    result[1] = vzip2q_s8(v15, v14);
    int8x8_t result = (int8x16_t *)v9;
    unsigned long long v16 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v16 = vqmovun_s16((int16x8_t)v16);
    unsigned long long v17 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v17 = vqmovun_s16((int16x8_t)v17);
    int8x16_t v18 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6), v7), v8);
    int8x16_t v19 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vzip1q_s8((int8x16_t)v16, (int8x16_t)v17), v6), v7), v8);
    vst2_s8(v11, *(int8x8x2_t *)((char *)&v18 - 8));
    v11 += 16;
    *(int8x16_t *)int v11 = vzip2q_s8(v19, v18);
    int v20 = v5 - 1;
    LODWORD(v11) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v11 > 1);
  int16x8_t v21 = v10 + 8;
  int16x8_t v22 = v10 + 32;
  int16x8_t v23 = v10 + 40;
  int32x4_t v24 = v10 + 64;
  float32x4_t v25 = v10 + 72;
  if (a4 <= 8) {
    int v26 = 8;
  }
  else {
    int v26 = a4;
  }
  int v27 = v20 - v26;
  a2 = v10;
  if (v27 >= 1)
  {
LABEL_13:
    unsigned int v28 = v27 + 1;
    int8x16_t v29 = result + 1;
    v30.i64[0] = 0x8080808080808080;
    v30.i64[1] = 0x8080808080808080;
    v31.i64[0] = 0x101010101010101;
    v31.i64[1] = 0x101010101010101;
    v32.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v32.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    do
    {
      int16x8_t v33 = *a2++;
      int16x8_t v34 = v33;
      i8 = v29[-1].i8;
      int16x8_t v36 = *v21++;
      int16x8_t v37 = v36;
      int16x8_t v38 = *v22++;
      int16x8_t v39 = v38;
      int8x16_t v40 = vqmovn_high_s16(vqmovn_s16(v34), v37);
      int16x8_t v41 = *v24++;
      int16x8_t v42 = v41;
      int16x8_t v43 = *v23++;
      int16x8_t v44 = v43;
      int8x16_t v45 = vqmovn_high_s16(vqmovn_s16(v39), v42);
      int16x8_t v46 = *v25++;
      v42.i64[1] = v46.i64[1];
      unsigned long long v47 = *(_OWORD *)&v45 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
      *(int8x8_t *)v42.i8 = vqmovun_s16((int16x8_t)v47);
      *(int8x8_t *)&unsigned long long v47 = vqmovun_s16((int16x8_t)(*(_OWORD *)&vqmovn_high_s16(vqmovn_s16(v44), v46) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)));
      int8x16_t v48 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v40, v30), v31), v32);
      int8x16_t v49 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vzip1q_s8((int8x16_t)v42, (int8x16_t)v47), v30), v31), v32);
      vst2_s8(i8, *(int8x8x2_t *)((char *)&v48 - 8));
      int8x16_t *v29 = vzip2q_s8(v49, v48);
      --v28;
      int8x16_t v29 = (int8x16_t *)((char *)v29 + a3);
    }
    while (v28 > 1);
  }
  return result;
}

int8x16_t *from_444_to_2vuy<8,8,(AlphaOutputMethod)0,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int16x8_t v21 = a2 + 8;
    int16x8_t v22 = a2 + 32;
    int16x8_t v23 = a2 + 40;
    int32x4_t v24 = a2 + 64;
    float32x4_t v25 = a2 + 72;
    int v27 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int16x8_t v9 = (char *)result;
  do
  {
    uint64_t v10 = a2 + 1;
    int v11 = &result->i8[8 * a3];
    unsigned long long v12 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v12 = vqmovun_s16((int16x8_t)v12);
    unsigned long long v13 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v13 = vqmovun_s16((int16x8_t)v13);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6), v7), v8);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vzip1q_s8((int8x16_t)v12, (int8x16_t)v13), v6), v7), v8);
    vst2_s8(v9, *(int8x8x2_t *)((char *)&v14 - 8));
    v9 += a3;
    result[1] = vzip2q_s8(v15, v14);
    int8x8_t result = (int8x16_t *)v9;
    unsigned long long v16 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v16 = vqmovun_s16((int16x8_t)v16);
    unsigned long long v17 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v17 = vqmovun_s16((int16x8_t)v17);
    int8x16_t v18 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6), v7), v8);
    int8x16_t v19 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vzip1q_s8((int8x16_t)v16, (int8x16_t)v17), v6), v7), v8);
    vst2_s8(v11, *(int8x8x2_t *)((char *)&v18 - 8));
    v11 += 16;
    *(int8x16_t *)int v11 = vzip2q_s8(v19, v18);
    int v20 = v5 - 1;
    LODWORD(v11) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v11 > 1);
  int16x8_t v21 = v10 + 8;
  int16x8_t v22 = v10 + 32;
  int16x8_t v23 = v10 + 40;
  int32x4_t v24 = v10 + 64;
  float32x4_t v25 = v10 + 72;
  if (a4 <= 8) {
    int v26 = 8;
  }
  else {
    int v26 = a4;
  }
  int v27 = v20 - v26;
  a2 = v10;
  if (v27 >= 1)
  {
LABEL_13:
    unsigned int v28 = v27 + 1;
    int8x16_t v29 = result + 1;
    v30.i64[0] = 0x8080808080808080;
    v30.i64[1] = 0x8080808080808080;
    v31.i64[0] = 0x101010101010101;
    v31.i64[1] = 0x101010101010101;
    v32.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v32.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    do
    {
      int16x8_t v33 = *a2++;
      int16x8_t v34 = v33;
      i8 = v29[-1].i8;
      int16x8_t v36 = *v21++;
      int16x8_t v37 = v36;
      int16x8_t v38 = *v22++;
      int16x8_t v39 = v38;
      int8x16_t v40 = vqmovn_high_s16(vqmovn_s16(v34), v37);
      int16x8_t v41 = *v24++;
      int16x8_t v42 = v41;
      int16x8_t v43 = *v23++;
      int16x8_t v44 = v43;
      int8x16_t v45 = vqmovn_high_s16(vqmovn_s16(v39), v42);
      int16x8_t v46 = *v25++;
      v42.i64[1] = v46.i64[1];
      unsigned long long v47 = *(_OWORD *)&v45 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
      *(int8x8_t *)v42.i8 = vqmovun_s16((int16x8_t)v47);
      *(int8x8_t *)&unsigned long long v47 = vqmovun_s16((int16x8_t)(*(_OWORD *)&vqmovn_high_s16(vqmovn_s16(v44), v46) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)));
      int8x16_t v48 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v40, v30), v31), v32);
      int8x16_t v49 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vzip1q_s8((int8x16_t)v42, (int8x16_t)v47), v30), v31), v32);
      vst2_s8(i8, *(int8x8x2_t *)((char *)&v48 - 8));
      int8x16_t *v29 = vzip2q_s8(v49, v48);
      --v28;
      int8x16_t v29 = (int8x16_t *)((char *)v29 + a3);
    }
    while (v28 > 1);
  }
  return result;
}

int8x16_t *from_444_to_2vuy<8,4,(AlphaOutputMethod)0,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 4) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 4;
  }
  if (!v4)
  {
    int16x8_t v21 = a2 + 4;
    int16x8_t v22 = a2 + 16;
    int16x8_t v23 = a2 + 20;
    int32x4_t v24 = a2 + 32;
    float32x4_t v25 = a2 + 36;
    int v27 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 4;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int16x8_t v9 = (char *)result;
  do
  {
    uint64_t v10 = a2 + 1;
    int v11 = &result->i8[4 * a3];
    unsigned long long v12 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[16]), a2[32]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v12 = vqmovun_s16((int16x8_t)v12);
    unsigned long long v13 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[20]), a2[36]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v13 = vqmovun_s16((int16x8_t)v13);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v6), v7), v8);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vzip1q_s8((int8x16_t)v12, (int8x16_t)v13), v6), v7), v8);
    vst2_s8(v9, *(int8x8x2_t *)((char *)&v14 - 8));
    v9 += a3;
    result[1] = vzip2q_s8(v15, v14);
    int8x8_t result = (int8x16_t *)v9;
    unsigned long long v16 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[24]), a2[40]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v16 = vqmovun_s16((int16x8_t)v16);
    unsigned long long v17 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[28]), a2[44]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v17 = vqmovun_s16((int16x8_t)v17);
    int8x16_t v18 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v6), v7), v8);
    int8x16_t v19 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vzip1q_s8((int8x16_t)v16, (int8x16_t)v17), v6), v7), v8);
    vst2_s8(v11, *(int8x8x2_t *)((char *)&v18 - 8));
    v11 += 16;
    *(int8x16_t *)int v11 = vzip2q_s8(v19, v18);
    int v20 = v5 - 1;
    LODWORD(v11) = v5 - 8;
    --v5;
    ++a2;
  }
  while ((int)v11 > 1);
  int16x8_t v21 = v10 + 4;
  int16x8_t v22 = v10 + 16;
  int16x8_t v23 = v10 + 20;
  int32x4_t v24 = v10 + 32;
  float32x4_t v25 = v10 + 36;
  if (a4 <= 4) {
    int v26 = 4;
  }
  else {
    int v26 = a4;
  }
  int v27 = v20 - v26;
  a2 = v10;
  if (v27 >= 1)
  {
LABEL_13:
    unsigned int v28 = v27 + 1;
    int8x16_t v29 = result + 1;
    v30.i64[0] = 0x8080808080808080;
    v30.i64[1] = 0x8080808080808080;
    v31.i64[0] = 0x101010101010101;
    v31.i64[1] = 0x101010101010101;
    v32.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v32.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    do
    {
      int16x8_t v33 = *a2++;
      int16x8_t v34 = v33;
      i8 = v29[-1].i8;
      int16x8_t v36 = *v21++;
      int16x8_t v37 = v36;
      int16x8_t v38 = *v22++;
      int16x8_t v39 = v38;
      int8x16_t v40 = vqmovn_high_s16(vqmovn_s16(v34), v37);
      int16x8_t v41 = *v24++;
      int16x8_t v42 = v41;
      int16x8_t v43 = *v23++;
      int16x8_t v44 = v43;
      int8x16_t v45 = vqmovn_high_s16(vqmovn_s16(v39), v42);
      int16x8_t v46 = *v25++;
      v42.i64[1] = v46.i64[1];
      unsigned long long v47 = *(_OWORD *)&v45 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
      *(int8x8_t *)v42.i8 = vqmovun_s16((int16x8_t)v47);
      *(int8x8_t *)&unsigned long long v47 = vqmovun_s16((int16x8_t)(*(_OWORD *)&vqmovn_high_s16(vqmovn_s16(v44), v46) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)));
      int8x16_t v48 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v40, v30), v31), v32);
      int8x16_t v49 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vzip1q_s8((int8x16_t)v42, (int8x16_t)v47), v30), v31), v32);
      vst2_s8(i8, *(int8x8x2_t *)((char *)&v48 - 8));
      int8x16_t *v29 = vzip2q_s8(v49, v48);
      --v28;
      int8x16_t v29 = (int8x16_t *)((char *)v29 + a3);
    }
    while (v28 > 1);
  }
  return result;
}

int8x16_t *from_444_to_2vuy<8,4,(AlphaOutputMethod)0,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 4) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 4;
  }
  if (!v4)
  {
    int16x8_t v21 = a2 + 4;
    int16x8_t v22 = a2 + 16;
    int16x8_t v23 = a2 + 20;
    int32x4_t v24 = a2 + 32;
    float32x4_t v25 = a2 + 36;
    int v27 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 4;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int16x8_t v9 = (char *)result;
  do
  {
    uint64_t v10 = a2 + 1;
    int v11 = &result->i8[4 * a3];
    unsigned long long v12 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[16]), a2[32]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v12 = vqmovun_s16((int16x8_t)v12);
    unsigned long long v13 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[20]), a2[36]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v13 = vqmovun_s16((int16x8_t)v13);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v6), v7), v8);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vzip1q_s8((int8x16_t)v12, (int8x16_t)v13), v6), v7), v8);
    vst2_s8(v9, *(int8x8x2_t *)((char *)&v14 - 8));
    v9 += a3;
    result[1] = vzip2q_s8(v15, v14);
    int8x8_t result = (int8x16_t *)v9;
    unsigned long long v16 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[24]), a2[40]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v16 = vqmovun_s16((int16x8_t)v16);
    unsigned long long v17 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[28]), a2[44]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v17 = vqmovun_s16((int16x8_t)v17);
    int8x16_t v18 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v6), v7), v8);
    int8x16_t v19 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vzip1q_s8((int8x16_t)v16, (int8x16_t)v17), v6), v7), v8);
    vst2_s8(v11, *(int8x8x2_t *)((char *)&v18 - 8));
    v11 += 16;
    *(int8x16_t *)int v11 = vzip2q_s8(v19, v18);
    int v20 = v5 - 1;
    LODWORD(v11) = v5 - 8;
    --v5;
    ++a2;
  }
  while ((int)v11 > 1);
  int16x8_t v21 = v10 + 4;
  int16x8_t v22 = v10 + 16;
  int16x8_t v23 = v10 + 20;
  int32x4_t v24 = v10 + 32;
  float32x4_t v25 = v10 + 36;
  if (a4 <= 4) {
    int v26 = 4;
  }
  else {
    int v26 = a4;
  }
  int v27 = v20 - v26;
  a2 = v10;
  if (v27 >= 1)
  {
LABEL_13:
    unsigned int v28 = v27 + 1;
    int8x16_t v29 = result + 1;
    v30.i64[0] = 0x8080808080808080;
    v30.i64[1] = 0x8080808080808080;
    v31.i64[0] = 0x101010101010101;
    v31.i64[1] = 0x101010101010101;
    v32.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v32.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    do
    {
      int16x8_t v33 = *a2++;
      int16x8_t v34 = v33;
      i8 = v29[-1].i8;
      int16x8_t v36 = *v21++;
      int16x8_t v37 = v36;
      int16x8_t v38 = *v22++;
      int16x8_t v39 = v38;
      int8x16_t v40 = vqmovn_high_s16(vqmovn_s16(v34), v37);
      int16x8_t v41 = *v24++;
      int16x8_t v42 = v41;
      int16x8_t v43 = *v23++;
      int16x8_t v44 = v43;
      int8x16_t v45 = vqmovn_high_s16(vqmovn_s16(v39), v42);
      int16x8_t v46 = *v25++;
      v42.i64[1] = v46.i64[1];
      unsigned long long v47 = *(_OWORD *)&v45 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
      *(int8x8_t *)v42.i8 = vqmovun_s16((int16x8_t)v47);
      *(int8x8_t *)&unsigned long long v47 = vqmovun_s16((int16x8_t)(*(_OWORD *)&vqmovn_high_s16(vqmovn_s16(v44), v46) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)));
      int8x16_t v48 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v40, v30), v31), v32);
      int8x16_t v49 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vzip1q_s8((int8x16_t)v42, (int8x16_t)v47), v30), v31), v32);
      vst2_s8(i8, *(int8x8x2_t *)((char *)&v48 - 8));
      int8x16_t *v29 = vzip2q_s8(v49, v48);
      --v28;
      int8x16_t v29 = (int8x16_t *)((char *)v29 + a3);
    }
    while (v28 > 1);
  }
  return result;
}

double from_444_to_2vuy<4,8,(AlphaOutputMethod)0,false>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t a5)
{
  return from_444_to_2vuy_4xH<false>(a1, a2, a3, a4, 8u, a5);
}

double from_444_to_2vuy<4,8,(AlphaOutputMethod)0,true>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t a5)
{
  return from_444_to_2vuy_4xH<false>(a1, a2, a3, a4, 8u, a5);
}

double from_444_to_2vuy<4,4,(AlphaOutputMethod)0,false>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t a5)
{
  return from_444_to_2vuy_4xH<false>(a1, a2, a3, a4, 4u, a5);
}

double from_444_to_2vuy<4,4,(AlphaOutputMethod)0,true>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t a5)
{
  return from_444_to_2vuy_4xH<false>(a1, a2, a3, a4, 4u, a5);
}

double from_444_to_2vuy<4,2,(AlphaOutputMethod)0,false>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t a5)
{
  return from_444_to_2vuy_4xH<false>(a1, a2, a3, a4, 2u, a5);
}

double from_444_to_2vuy<4,2,(AlphaOutputMethod)0,true>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t a5)
{
  return from_444_to_2vuy_4xH<false>(a1, a2, a3, a4, 2u, a5);
}

void *from_444_to_2vuy<2,4,(AlphaOutputMethod)0,false>(void *result, int16x8_t *a2, int a3, int a4)
{
  int v4 = (void *)((char *)result + 4 * a3);
  if (a4 == 8)
  {
    int16x8_t v5 = *a2;
    int16x8_t v6 = a2[1];
    *(int8x8_t *)v5.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v6.i8 = vqmovn_s16(v6);
    int8x16_t v7 = (int8x16_t)vzip1q_s16(v5, v6);
    unsigned long long v8 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[4]), a2[8]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)v6.i8 = vqmovun_s16((int16x8_t)v8);
    *(int8x8_t *)&unsigned long long v8 = vqmovun_s16((int16x8_t)(*(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[5]), a2[9]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)));
    int16x8_t v9 = (int16x8_t)vzip1q_s8((int8x16_t)v6, (int8x16_t)v8);
    *(void *)&unsigned long long v8 = 0x8080808080808080;
    *((void *)&v8 + 1) = 0x8080808080808080;
    v10.i64[0] = 0x101010101010101;
    v10.i64[1] = 0x101010101010101;
    v11.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v11.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int8x16_t v12 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v7, (int8x16_t)v8), v10), v11);
    int8x16_t v13 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v9, (int16x8_t)vdupq_laneq_s64((int64x2_t)v9, 1)), (int8x16_t)v8), v10), v11);
    int8x16_t v14 = vzip1q_s8(v13, v12);
    *int8x8_t result = v14.i64[0];
    *(void *)((char *)result + a3) = v14.i64[1];
    int8x16_t v15 = (void *)((char *)result + 2 * a3);
    int8x16_t v16 = vzip2q_s8(v13, v12);
    *int8x16_t v15 = v16.i64[0];
    *(void *)((char *)v15 + a3) = v16.i64[1];
    int16x8_t v17 = a2[2];
    int16x8_t v18 = a2[3];
    *(int8x8_t *)v17.i8 = vqmovn_s16(v17);
    *(int8x8_t *)v18.i8 = vqmovn_s16(v18);
    unsigned long long v19 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[6]), a2[10]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v19 = vqmovun_s16((int16x8_t)v19);
    unsigned long long v20 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[7]), a2[11]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v20 = vqmovun_s16((int16x8_t)v20);
    int16x8_t v21 = (int16x8_t)vzip1q_s8((int8x16_t)v19, (int8x16_t)v20);
    int8x16_t v22 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v17, v18), (int8x16_t)v8), v10), v11);
    int8x16_t v23 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v21, (int16x8_t)vdupq_laneq_s64((int64x2_t)v21, 1)), (int8x16_t)v8), v10), v11);
    int8x16_t v24 = vzip1q_s8(v23, v22);
    *int v4 = v24.i64[0];
    *(void *)((char *)v4 + a3) = v24.i64[1];
    int v4 = (void *)((char *)v4 + 2 * a3);
    int8x16_t v25 = vzip2q_s8(v23, v22);
LABEL_3:
    *int v4 = v25.i64[0];
    *(void *)((char *)v4 + a3) = v25.i64[1];
    return result;
  }
  if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v45 = *a2;
      int16x8_t v46 = a2[1];
      *(int8x8_t *)v45.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v46.i8 = vqmovn_s16(v46);
      unsigned long long v47 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[4]), a2[8]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
      *(int8x8_t *)&unsigned long long v47 = vqmovun_s16((int16x8_t)v47);
      unsigned long long v48 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[5]), a2[9]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
      *(int8x8_t *)&unsigned long long v48 = vqmovun_s16((int16x8_t)v48);
      int16x8_t v49 = (int16x8_t)vzip1q_s8((int8x16_t)v47, (int8x16_t)v48);
      v50.i64[0] = 0x8080808080808080;
      v50.i64[1] = 0x8080808080808080;
      uint8x16_t v51 = (uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v45, v46), v50);
      v45.i64[0] = 0x101010101010101;
      v45.i64[1] = 0x101010101010101;
      v46.i64[0] = 0xFEFEFEFEFEFEFEFELL;
      v46.i64[1] = 0xFEFEFEFEFEFEFEFELL;
      int8x16_t v52 = (int8x16_t)vminq_u8(vmaxq_u8(v51, (uint8x16_t)v45), (uint8x16_t)v46);
      int8x16_t v53 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v49, (int16x8_t)vdupq_laneq_s64((int64x2_t)v49, 1)), v50), (uint8x16_t)v45), (uint8x16_t)v46);
      int8x16_t v54 = vzip1q_s8(v53, v52);
      if (a4 < 3)
      {
        *int8x8_t result = v54.i64[0];
        if (a4 == 2) {
          *(void *)((char *)result + a3) = v54.i64[1];
        }
      }
      else
      {
        *int8x8_t result = v54.i64[0];
        *(void *)((char *)result + a3) = v54.i64[1];
        int v4 = (void *)((char *)result + 2 * a3);
        int8x16_t v25 = vzip2q_s8(v53, v52);
        if (a4 != 3) {
          goto LABEL_3;
        }
        *int v4 = v25.i64[0];
      }
    }
  }
  else
  {
    int16x8_t v26 = *a2;
    int16x8_t v27 = a2[1];
    *(int8x8_t *)v26.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v27.i8 = vqmovn_s16(v27);
    int8x16_t v28 = (int8x16_t)vzip1q_s16(v26, v27);
    unsigned long long v29 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[4]), a2[8]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)v27.i8 = vqmovun_s16((int16x8_t)v29);
    *(int8x8_t *)&unsigned long long v29 = vqmovun_s16((int16x8_t)(*(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[5]), a2[9]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)));
    int16x8_t v30 = (int16x8_t)vzip1q_s8((int8x16_t)v27, (int8x16_t)v29);
    *(void *)&unsigned long long v29 = 0x8080808080808080;
    *((void *)&v29 + 1) = 0x8080808080808080;
    v31.i64[0] = 0x101010101010101;
    v31.i64[1] = 0x101010101010101;
    v32.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v32.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int8x16_t v33 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v28, (int8x16_t)v29), v31), v32);
    int8x16_t v34 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v30, (int16x8_t)vdupq_laneq_s64((int64x2_t)v30, 1)), (int8x16_t)v29), v31), v32);
    int8x16_t v35 = vzip1q_s8(v34, v33);
    *int8x8_t result = v35.i64[0];
    *(void *)((char *)result + a3) = v35.i64[1];
    int16x8_t v36 = (void *)((char *)result + 2 * a3);
    int8x16_t v37 = vzip2q_s8(v34, v33);
    *int16x8_t v36 = v37.i64[0];
    *(void *)((char *)v36 + a3) = v37.i64[1];
    int16x8_t v38 = a2[2];
    int16x8_t v39 = a2[3];
    *(int8x8_t *)v38.i8 = vqmovn_s16(v38);
    *(int8x8_t *)v39.i8 = vqmovn_s16(v39);
    unsigned long long v40 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[6]), a2[10]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v40 = vqmovun_s16((int16x8_t)v40);
    unsigned long long v41 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[7]), a2[11]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v41 = vqmovun_s16((int16x8_t)v41);
    int16x8_t v42 = (int16x8_t)vzip1q_s8((int8x16_t)v40, (int8x16_t)v41);
    int8x16_t v43 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v38, v39), (int8x16_t)v29), v31), v32);
    int8x16_t v44 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v42, (int16x8_t)vdupq_laneq_s64((int64x2_t)v42, 1)), (int8x16_t)v29), v31), v32);
    int8x16_t v25 = vzip1q_s8(v44, v43);
    if (a4 < 7)
    {
      if (a4 == 6) {
        goto LABEL_3;
      }
      *int v4 = v25.i64[0];
    }
    else
    {
      *int v4 = v25.i64[0];
      *(void *)((char *)v4 + a3) = v25.i64[1];
      int v4 = (void *)((char *)v4 + 2 * a3);
      int8x16_t v25 = vzip2q_s8(v44, v43);
      if (a4 != 7) {
        goto LABEL_3;
      }
      *int v4 = v25.i64[0];
    }
  }
  return result;
}

void *from_444_to_2vuy<2,4,(AlphaOutputMethod)0,true>(void *result, int16x8_t *a2, int a3, int a4)
{
  int v4 = (void *)((char *)result + 4 * a3);
  if (a4 == 8)
  {
    int16x8_t v5 = *a2;
    int16x8_t v6 = a2[1];
    *(int8x8_t *)v5.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v6.i8 = vqmovn_s16(v6);
    int8x16_t v7 = (int8x16_t)vzip1q_s16(v5, v6);
    unsigned long long v8 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[4]), a2[8]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)v6.i8 = vqmovun_s16((int16x8_t)v8);
    *(int8x8_t *)&unsigned long long v8 = vqmovun_s16((int16x8_t)(*(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[5]), a2[9]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)));
    int16x8_t v9 = (int16x8_t)vzip1q_s8((int8x16_t)v6, (int8x16_t)v8);
    *(void *)&unsigned long long v8 = 0x8080808080808080;
    *((void *)&v8 + 1) = 0x8080808080808080;
    v10.i64[0] = 0x101010101010101;
    v10.i64[1] = 0x101010101010101;
    v11.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v11.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int8x16_t v12 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v7, (int8x16_t)v8), v10), v11);
    int8x16_t v13 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v9, (int16x8_t)vdupq_laneq_s64((int64x2_t)v9, 1)), (int8x16_t)v8), v10), v11);
    int8x16_t v14 = vzip1q_s8(v13, v12);
    *int8x8_t result = v14.i64[0];
    *(void *)((char *)result + a3) = v14.i64[1];
    int8x16_t v15 = (void *)((char *)result + 2 * a3);
    int8x16_t v16 = vzip2q_s8(v13, v12);
    *int8x16_t v15 = v16.i64[0];
    *(void *)((char *)v15 + a3) = v16.i64[1];
    int16x8_t v17 = a2[2];
    int16x8_t v18 = a2[3];
    *(int8x8_t *)v17.i8 = vqmovn_s16(v17);
    *(int8x8_t *)v18.i8 = vqmovn_s16(v18);
    unsigned long long v19 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[6]), a2[10]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v19 = vqmovun_s16((int16x8_t)v19);
    unsigned long long v20 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[7]), a2[11]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v20 = vqmovun_s16((int16x8_t)v20);
    int16x8_t v21 = (int16x8_t)vzip1q_s8((int8x16_t)v19, (int8x16_t)v20);
    int8x16_t v22 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v17, v18), (int8x16_t)v8), v10), v11);
    int8x16_t v23 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v21, (int16x8_t)vdupq_laneq_s64((int64x2_t)v21, 1)), (int8x16_t)v8), v10), v11);
    int8x16_t v24 = vzip1q_s8(v23, v22);
    *int v4 = v24.i64[0];
    *(void *)((char *)v4 + a3) = v24.i64[1];
    int v4 = (void *)((char *)v4 + 2 * a3);
    int8x16_t v25 = vzip2q_s8(v23, v22);
LABEL_3:
    *int v4 = v25.i64[0];
    *(void *)((char *)v4 + a3) = v25.i64[1];
    return result;
  }
  if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v45 = *a2;
      int16x8_t v46 = a2[1];
      *(int8x8_t *)v45.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v46.i8 = vqmovn_s16(v46);
      unsigned long long v47 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[4]), a2[8]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
      *(int8x8_t *)&unsigned long long v47 = vqmovun_s16((int16x8_t)v47);
      unsigned long long v48 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[5]), a2[9]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
      *(int8x8_t *)&unsigned long long v48 = vqmovun_s16((int16x8_t)v48);
      int16x8_t v49 = (int16x8_t)vzip1q_s8((int8x16_t)v47, (int8x16_t)v48);
      v50.i64[0] = 0x8080808080808080;
      v50.i64[1] = 0x8080808080808080;
      uint8x16_t v51 = (uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v45, v46), v50);
      v45.i64[0] = 0x101010101010101;
      v45.i64[1] = 0x101010101010101;
      v46.i64[0] = 0xFEFEFEFEFEFEFEFELL;
      v46.i64[1] = 0xFEFEFEFEFEFEFEFELL;
      int8x16_t v52 = (int8x16_t)vminq_u8(vmaxq_u8(v51, (uint8x16_t)v45), (uint8x16_t)v46);
      int8x16_t v53 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v49, (int16x8_t)vdupq_laneq_s64((int64x2_t)v49, 1)), v50), (uint8x16_t)v45), (uint8x16_t)v46);
      int8x16_t v54 = vzip1q_s8(v53, v52);
      if (a4 < 3)
      {
        *int8x8_t result = v54.i64[0];
        if (a4 == 2) {
          *(void *)((char *)result + a3) = v54.i64[1];
        }
      }
      else
      {
        *int8x8_t result = v54.i64[0];
        *(void *)((char *)result + a3) = v54.i64[1];
        int v4 = (void *)((char *)result + 2 * a3);
        int8x16_t v25 = vzip2q_s8(v53, v52);
        if (a4 != 3) {
          goto LABEL_3;
        }
        *int v4 = v25.i64[0];
      }
    }
  }
  else
  {
    int16x8_t v26 = *a2;
    int16x8_t v27 = a2[1];
    *(int8x8_t *)v26.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v27.i8 = vqmovn_s16(v27);
    int8x16_t v28 = (int8x16_t)vzip1q_s16(v26, v27);
    unsigned long long v29 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[4]), a2[8]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)v27.i8 = vqmovun_s16((int16x8_t)v29);
    *(int8x8_t *)&unsigned long long v29 = vqmovun_s16((int16x8_t)(*(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[5]), a2[9]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)));
    int16x8_t v30 = (int16x8_t)vzip1q_s8((int8x16_t)v27, (int8x16_t)v29);
    *(void *)&unsigned long long v29 = 0x8080808080808080;
    *((void *)&v29 + 1) = 0x8080808080808080;
    v31.i64[0] = 0x101010101010101;
    v31.i64[1] = 0x101010101010101;
    v32.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v32.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int8x16_t v33 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v28, (int8x16_t)v29), v31), v32);
    int8x16_t v34 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v30, (int16x8_t)vdupq_laneq_s64((int64x2_t)v30, 1)), (int8x16_t)v29), v31), v32);
    int8x16_t v35 = vzip1q_s8(v34, v33);
    *int8x8_t result = v35.i64[0];
    *(void *)((char *)result + a3) = v35.i64[1];
    int16x8_t v36 = (void *)((char *)result + 2 * a3);
    int8x16_t v37 = vzip2q_s8(v34, v33);
    *int16x8_t v36 = v37.i64[0];
    *(void *)((char *)v36 + a3) = v37.i64[1];
    int16x8_t v38 = a2[2];
    int16x8_t v39 = a2[3];
    *(int8x8_t *)v38.i8 = vqmovn_s16(v38);
    *(int8x8_t *)v39.i8 = vqmovn_s16(v39);
    unsigned long long v40 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[6]), a2[10]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v40 = vqmovun_s16((int16x8_t)v40);
    unsigned long long v41 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[7]), a2[11]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v41 = vqmovun_s16((int16x8_t)v41);
    int16x8_t v42 = (int16x8_t)vzip1q_s8((int8x16_t)v40, (int8x16_t)v41);
    int8x16_t v43 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v38, v39), (int8x16_t)v29), v31), v32);
    int8x16_t v44 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v42, (int16x8_t)vdupq_laneq_s64((int64x2_t)v42, 1)), (int8x16_t)v29), v31), v32);
    int8x16_t v25 = vzip1q_s8(v44, v43);
    if (a4 < 7)
    {
      if (a4 == 6) {
        goto LABEL_3;
      }
      *int v4 = v25.i64[0];
    }
    else
    {
      *int v4 = v25.i64[0];
      *(void *)((char *)v4 + a3) = v25.i64[1];
      int v4 = (void *)((char *)v4 + 2 * a3);
      int8x16_t v25 = vzip2q_s8(v44, v43);
      if (a4 != 7) {
        goto LABEL_3;
      }
      *int v4 = v25.i64[0];
    }
  }
  return result;
}

double from_444_to_2vuy<2,2,(AlphaOutputMethod)0,false>(void *a1, int32x4_t *a2, int a3, int a4)
{
  unsigned long long v4 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(a2[2], vrev64q_s32(a2[2]))), (int16x8_t)vuzp1q_s32(a2[3], vrev64q_s32(a2[3]))) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
  *(int8x8_t *)&unsigned long long v4 = vqmovun_s16((int16x8_t)v4);
  unsigned long long v5 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(a2[4], vrev64q_s32(a2[4]))), (int16x8_t)vuzp1q_s32(a2[5], vrev64q_s32(a2[5]))) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
  *(int8x8_t *)&unsigned long long v5 = vqmovun_s16((int16x8_t)v5);
  int8x16_t v6 = (int8x16_t)vzip1q_s16((int16x8_t)v4, (int16x8_t)v5);
  *(void *)&unsigned long long v5 = 0x8080808080808080;
  *((void *)&v5 + 1) = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int8x16_t v9 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*a2, vrev64q_s32(*a2))), (int16x8_t)vuzp1q_s32(a2[1], vrev64q_s32(a2[1]))), (int8x16_t)v5), v7), v8);
  int8x16_t v10 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v6, (int8x16_t)v5), v7), v8);
  if (a4 == 4)
  {
    int8x16_t v11 = vzip1q_s8(v10, v9);
    *a1 = v11.i64[0];
    *(void *)((char *)a1 + a3) = v11.i64[1];
    int8x16_t v12 = (void *)((char *)a1 + 2 * a3);
    int8x16_t v9 = vzip2q_s8(v10, v9);
    void *v12 = v9.i64[0];
    *(void *)((char *)v12 + a3) = v9.i64[1];
  }
  else if (a4 < 2)
  {
    if (a4 == 1)
    {
      v9.i64[0] = vzip1q_s8(v10, v9).u64[0];
      *a1 = v9.i64[0];
    }
  }
  else
  {
    int8x16_t v13 = vzip1q_s8(v10, v9);
    *a1 = v13.i64[0];
    *(void *)((char *)a1 + a3) = v13.i64[1];
    if (a4 == 3)
    {
      v9.i64[0] = vzip2q_s8(v10, v9).u64[0];
      *(void *)((char *)a1 + 2 * a3) = v9.i64[0];
    }
  }
  return *(double *)v9.i64;
}

double from_444_to_2vuy<2,2,(AlphaOutputMethod)0,true>(void *a1, int32x4_t *a2, int a3, int a4)
{
  unsigned long long v4 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(a2[2], vrev64q_s32(a2[2]))), (int16x8_t)vuzp1q_s32(a2[3], vrev64q_s32(a2[3]))) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
  *(int8x8_t *)&unsigned long long v4 = vqmovun_s16((int16x8_t)v4);
  unsigned long long v5 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(a2[4], vrev64q_s32(a2[4]))), (int16x8_t)vuzp1q_s32(a2[5], vrev64q_s32(a2[5]))) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
  *(int8x8_t *)&unsigned long long v5 = vqmovun_s16((int16x8_t)v5);
  int8x16_t v6 = (int8x16_t)vzip1q_s16((int16x8_t)v4, (int16x8_t)v5);
  *(void *)&unsigned long long v5 = 0x8080808080808080;
  *((void *)&v5 + 1) = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int8x16_t v9 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*a2, vrev64q_s32(*a2))), (int16x8_t)vuzp1q_s32(a2[1], vrev64q_s32(a2[1]))), (int8x16_t)v5), v7), v8);
  int8x16_t v10 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v6, (int8x16_t)v5), v7), v8);
  if (a4 == 4)
  {
    int8x16_t v11 = vzip1q_s8(v10, v9);
    *a1 = v11.i64[0];
    *(void *)((char *)a1 + a3) = v11.i64[1];
    int8x16_t v12 = (void *)((char *)a1 + 2 * a3);
    int8x16_t v9 = vzip2q_s8(v10, v9);
    void *v12 = v9.i64[0];
    *(void *)((char *)v12 + a3) = v9.i64[1];
  }
  else if (a4 < 2)
  {
    if (a4 == 1)
    {
      v9.i64[0] = vzip1q_s8(v10, v9).u64[0];
      *a1 = v9.i64[0];
    }
  }
  else
  {
    int8x16_t v13 = vzip1q_s8(v10, v9);
    *a1 = v13.i64[0];
    *(void *)((char *)a1 + a3) = v13.i64[1];
    if (a4 == 3)
    {
      v9.i64[0] = vzip2q_s8(v10, v9).u64[0];
      *(void *)((char *)a1 + 2 * a3) = v9.i64[0];
    }
  }
  return *(double *)v9.i64;
}

_DWORD *from_444_to_2vuy<2,1,(AlphaOutputMethod)0,false>(_DWORD *a1, unsigned __int16 *a2, int a3, int a4, double a5, double a6, double a7, int16x8_t a8)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)846624121,(AlphaOutputMethod)0>(a1, a2, a3, a4, 2u, 1, a5, a6, a7, a8);
}

_DWORD *from_444_to_2vuy<2,1,(AlphaOutputMethod)0,true>(_DWORD *a1, unsigned __int16 *a2, int a3, int a4, double a5, double a6, double a7, int16x8_t a8)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)846624121,(AlphaOutputMethod)0>(a1, a2, a3, a4, 2u, 1, a5, a6, a7, a8);
}

double from_444_to_2vuy<1,2,(AlphaOutputMethod)0,false>(_DWORD *a1, __int16 *a2, int a3, int a4, int16x8_t a5, double a6, double a7, int16x8_t a8)
{
  uint8x16_t v8 = a2 + 10;
  int8x16_t v9 = a2 + 2;
  if (a4 > 0)
  {
    v10.i16[0] = a2[8];
    v10.i16[1] = *a2;
    v10.i16[2] = *v8;
    v10.i16[3] = *v9;
    a5.i32[0] = 8257662;
    a5.i16[2] = 126;
    a5.i16[3] = 126;
    *(int8x8_t *)a8.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v10, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
    *a1 = vmovn_s16(a8).u32[0];
    a1 = (_DWORD *)((char *)a1 + a3);
    int8x16_t v9 = a2 + 3;
    uint8x16_t v8 = a2 + 11;
    if (a4 != 1)
    {
      v11.i16[0] = a2[9];
      v11.i16[1] = a2[1];
      v11.i16[2] = *v8;
      v11.i16[3] = *v9;
      *(int8x8_t *)a5.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v11, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
      *(int8x8_t *)a5.i8 = vmovn_s16(a5);
      *a1 = a5.i32[0];
      a1 = (_DWORD *)((char *)a1 + a3);
      int8x16_t v9 = a2 + 4;
      uint8x16_t v8 = a2 + 12;
    }
  }
  if (a4 <= 2) {
    int v12 = 2;
  }
  else {
    int v12 = a4;
  }
  int v13 = v12 - 2;
  if (v13)
  {
    v14.i16[0] = *v8;
    v14.i16[1] = *v9;
    v14.i16[2] = v8[2];
    v14.i16[3] = v9[2];
    a5.i32[0] = 8257662;
    a5.i16[2] = 126;
    a5.i16[3] = 126;
    *(int8x8_t *)a8.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v14, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
    *a1 = vmovn_s16(a8).u32[0];
    if (v13 != 1)
    {
      v15.i16[0] = v8[1];
      v15.i16[1] = v9[1];
      v15.i16[2] = v8[3];
      v15.i16[3] = v9[3];
      *(int8x8_t *)a5.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v15, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
      *(int8x8_t *)a5.i8 = vmovn_s16(a5);
      *(_DWORD *)((char *)a1 + a3) = a5.i32[0];
    }
  }
  return *(double *)a5.i64;
}

double from_444_to_2vuy<1,2,(AlphaOutputMethod)0,true>(_DWORD *a1, __int16 *a2, int a3, int a4, int16x8_t a5, double a6, double a7, int16x8_t a8)
{
  uint8x16_t v8 = a2 + 10;
  int8x16_t v9 = a2 + 2;
  if (a4 > 0)
  {
    v10.i16[0] = a2[8];
    v10.i16[1] = *a2;
    v10.i16[2] = *v8;
    v10.i16[3] = *v9;
    a5.i32[0] = 8257662;
    a5.i16[2] = 126;
    a5.i16[3] = 126;
    *(int8x8_t *)a8.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v10, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
    *a1 = vmovn_s16(a8).u32[0];
    a1 = (_DWORD *)((char *)a1 + a3);
    int8x16_t v9 = a2 + 3;
    uint8x16_t v8 = a2 + 11;
    if (a4 != 1)
    {
      v11.i16[0] = a2[9];
      v11.i16[1] = a2[1];
      v11.i16[2] = *v8;
      v11.i16[3] = *v9;
      *(int8x8_t *)a5.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v11, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
      *(int8x8_t *)a5.i8 = vmovn_s16(a5);
      *a1 = a5.i32[0];
      a1 = (_DWORD *)((char *)a1 + a3);
      int8x16_t v9 = a2 + 4;
      uint8x16_t v8 = a2 + 12;
    }
  }
  if (a4 <= 2) {
    int v12 = 2;
  }
  else {
    int v12 = a4;
  }
  int v13 = v12 - 2;
  if (v13)
  {
    v14.i16[0] = *v8;
    v14.i16[1] = *v9;
    v14.i16[2] = v8[2];
    v14.i16[3] = v9[2];
    a5.i32[0] = 8257662;
    a5.i16[2] = 126;
    a5.i16[3] = 126;
    *(int8x8_t *)a8.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v14, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
    *a1 = vmovn_s16(a8).u32[0];
    if (v13 != 1)
    {
      v15.i16[0] = v8[1];
      v15.i16[1] = v9[1];
      v15.i16[2] = v8[3];
      v15.i16[3] = v9[3];
      *(int8x8_t *)a5.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v15, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
      *(int8x8_t *)a5.i8 = vmovn_s16(a5);
      *(_DWORD *)((char *)a1 + a3) = a5.i32[0];
    }
  }
  return *(double *)a5.i64;
}

double from_444_to_2vuy<1,1,(AlphaOutputMethod)0,false>(_DWORD *a1, __int16 *a2, int a3, int a4, int16x8_t a5, double a6, double a7, int16x8_t a8)
{
  if (a4 >= 1)
  {
    v8.i16[0] = a2[4];
    v8.i16[1] = *a2;
    v8.i16[2] = a2[5];
    v8.i16[3] = a2[1];
    a5.i32[0] = 8257662;
    a5.i16[2] = 126;
    a5.i16[3] = 126;
    *(int8x8_t *)a8.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v8, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
    *a1 = vmovn_s16(a8).u32[0];
    if (a4 != 1)
    {
      v9.i16[0] = a2[6];
      v9.i16[1] = a2[2];
      v9.i16[2] = a2[7];
      v9.i16[3] = a2[3];
      *(int8x8_t *)a5.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v9, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
      *(int8x8_t *)a5.i8 = vmovn_s16(a5);
      *(_DWORD *)((char *)a1 + a3) = a5.i32[0];
    }
  }
  return *(double *)a5.i64;
}

double from_444_to_2vuy<1,1,(AlphaOutputMethod)0,true>(_DWORD *a1, __int16 *a2, int a3, int a4, int16x8_t a5, double a6, double a7, int16x8_t a8)
{
  if (a4 >= 1)
  {
    v8.i16[0] = a2[4];
    v8.i16[1] = *a2;
    v8.i16[2] = a2[5];
    v8.i16[3] = a2[1];
    a5.i32[0] = 8257662;
    a5.i16[2] = 126;
    a5.i16[3] = 126;
    *(int8x8_t *)a8.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v8, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
    *a1 = vmovn_s16(a8).u32[0];
    if (a4 != 1)
    {
      v9.i16[0] = a2[6];
      v9.i16[1] = a2[2];
      v9.i16[2] = a2[7];
      v9.i16[3] = a2[3];
      *(int8x8_t *)a5.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(v9, *(int16x4_t *)a5.i8), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
      *(int8x8_t *)a5.i8 = vmovn_s16(a5);
      *(_DWORD *)((char *)a1 + a3) = a5.i32[0];
    }
  }
  return *(double *)a5.i64;
}

void from_444_to_y408<8,8,(AlphaOutputMethod)1,false>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    uint8x16_t v32 = a2 + 8;
    int8x16_t v33 = a2 + 32;
    int8x16_t v34 = a2 + 40;
    int8x16_t v35 = a2 + 64;
    int16x8_t v36 = a2 + 72;
    int v38 = a4;
    if (a4 < 1) {
      return;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  int16x4_t v9 = (char *)a1;
  do
  {
    int16x4_t v10 = a2 + 1;
    int16x4_t v11 = (int8x16_t *)((char *)a1 + 8 * a3);
    int8x16_t v12 = *a5;
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]), v8);
    int8x16_t v14 = vzip1q_s8(*a5, v13);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v8);
    int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]), v8);
    int8x16_t v17 = vzip1q_s8(v15, v16);
    vst2_s8(v9, (int8x8x2_t)v14);
    v9 += a3;
    int8x16_t v18 = vzip2q_s8(v12, v13);
    int8x16_t v19 = vzip2q_s8(v15, v16);
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v18);
    a1[1] = vzip2q_s8(v14, v17);
    a1[3] = vzip2q_s8(v18, v19);
    a1 = (int8x16_t *)v9;
    int8x16_t v21 = *(int8x16_t *)((char *)a5 + 8 * a6);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v22 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]), v8);
    int8x16_t v23 = vzip1q_s8(v21, v22);
    int8x16_t v24 = vzip2q_s8(v21, v22);
    int8x16_t v25 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v8);
    int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]), v8);
    int8x16_t v27 = vzip1q_s8(v25, v26);
    int8x16_t v28 = vzip2q_s8(v25, v26);
    unsigned long long v29 = (char *)v11;
    vst2_s8(v29, (int8x8x2_t)v23);
    v29 += 16;
    *(int8x16_t *)unsigned long long v29 = vzip2q_s8(v23, v27);
    int16x8_t v30 = v11[2].i8;
    vst2_s8(v30, (int8x8x2_t)v24);
    v11[3] = vzip2q_s8(v24, v28);
    int v31 = v7 - 1;
    LODWORD(v30) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v30 > 1);
  uint8x16_t v32 = v10 + 8;
  int8x16_t v33 = v10 + 32;
  int8x16_t v34 = v10 + 40;
  int8x16_t v35 = v10 + 64;
  int16x8_t v36 = v10 + 72;
  if (a4 <= 8) {
    int v37 = 8;
  }
  else {
    int v37 = a4;
  }
  int v38 = v31 - v37;
  a2 = v10;
  if (v38 >= 1)
  {
LABEL_13:
    int16x8_t v39 = a1 + 2;
    unsigned int v40 = v38 + 1;
    v41.i64[0] = 0x8080808080808080;
    v41.i64[1] = 0x8080808080808080;
    int16x8_t v42 = a1[2].i8;
    do
    {
      int16x8_t v43 = *a2++;
      int16x8_t v44 = v43;
      int16x8_t v45 = *v32++;
      int16x8_t v46 = v45;
      unsigned long long v47 = v39[-2].i8;
      int16x8_t v48 = *v33++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v35++;
      int16x8_t v51 = v50;
      int8x16_t v52 = vqmovn_high_s16(vqmovn_s16(v44), v46);
      *(int8x8_t *)v46.i8 = vqmovn_s16(v49);
      int16x8_t v53 = *v34++;
      int16x8_t v54 = v53;
      int16x8_t v55 = *v36++;
      int8x16_t v56 = veorq_s8(vqmovn_high_s16(*(int8x8_t *)v46.i8, v51), v41);
      int8x16_t v57 = vzip1q_s8(*a5, v56);
      int8x16_t v58 = vzip2q_s8(*a5, v56);
      int8x16_t v59 = veorq_s8(v52, v41);
      int8x16_t v60 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v54), v55), v41);
      int8x16_t v61 = vzip1q_s8(v59, v60);
      vst2_s8(v47, (int8x8x2_t)v57);
      int8x16_t v62 = vzip2q_s8(v59, v60);
      v39[-1] = vzip2q_s8(v57, v61);
      vst2_s8(v42, (int8x8x2_t)v58);
      v42 += a3;
      v39[1] = vzip2q_s8(v58, v62);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v40;
      int16x8_t v39 = (int8x16_t *)v42;
    }
    while (v40 > 1);
  }
}

void from_444_to_y408<8,8,(AlphaOutputMethod)1,true>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    uint8x16_t v32 = a2 + 8;
    int8x16_t v33 = a2 + 32;
    int8x16_t v34 = a2 + 40;
    int8x16_t v35 = a2 + 64;
    int16x8_t v36 = a2 + 72;
    int v38 = a4;
    if (a4 < 1) {
      return;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  int16x4_t v9 = (char *)a1;
  do
  {
    int16x4_t v10 = a2 + 1;
    int16x4_t v11 = (int8x16_t *)((char *)a1 + 8 * a3);
    int8x16_t v12 = *a5;
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]), v8);
    int8x16_t v14 = vzip1q_s8(*a5, v13);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v8);
    int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]), v8);
    int8x16_t v17 = vzip1q_s8(v15, v16);
    vst2_s8(v9, (int8x8x2_t)v14);
    v9 += a3;
    int8x16_t v18 = vzip2q_s8(v12, v13);
    int8x16_t v19 = vzip2q_s8(v15, v16);
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v18);
    a1[1] = vzip2q_s8(v14, v17);
    a1[3] = vzip2q_s8(v18, v19);
    a1 = (int8x16_t *)v9;
    int8x16_t v21 = *(int8x16_t *)((char *)a5 + 8 * a6);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v22 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]), v8);
    int8x16_t v23 = vzip1q_s8(v21, v22);
    int8x16_t v24 = vzip2q_s8(v21, v22);
    int8x16_t v25 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v8);
    int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]), v8);
    int8x16_t v27 = vzip1q_s8(v25, v26);
    int8x16_t v28 = vzip2q_s8(v25, v26);
    unsigned long long v29 = (char *)v11;
    vst2_s8(v29, (int8x8x2_t)v23);
    v29 += 16;
    *(int8x16_t *)unsigned long long v29 = vzip2q_s8(v23, v27);
    int16x8_t v30 = v11[2].i8;
    vst2_s8(v30, (int8x8x2_t)v24);
    v11[3] = vzip2q_s8(v24, v28);
    int v31 = v7 - 1;
    LODWORD(v30) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v30 > 1);
  uint8x16_t v32 = v10 + 8;
  int8x16_t v33 = v10 + 32;
  int8x16_t v34 = v10 + 40;
  int8x16_t v35 = v10 + 64;
  int16x8_t v36 = v10 + 72;
  if (a4 <= 8) {
    int v37 = 8;
  }
  else {
    int v37 = a4;
  }
  int v38 = v31 - v37;
  a2 = v10;
  if (v38 >= 1)
  {
LABEL_13:
    int16x8_t v39 = a1 + 2;
    unsigned int v40 = v38 + 1;
    v41.i64[0] = 0x8080808080808080;
    v41.i64[1] = 0x8080808080808080;
    int16x8_t v42 = a1[2].i8;
    do
    {
      int16x8_t v43 = *a2++;
      int16x8_t v44 = v43;
      int16x8_t v45 = *v32++;
      int16x8_t v46 = v45;
      unsigned long long v47 = v39[-2].i8;
      int16x8_t v48 = *v33++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v35++;
      int16x8_t v51 = v50;
      int8x16_t v52 = vqmovn_high_s16(vqmovn_s16(v44), v46);
      *(int8x8_t *)v46.i8 = vqmovn_s16(v49);
      int16x8_t v53 = *v34++;
      int16x8_t v54 = v53;
      int16x8_t v55 = *v36++;
      int8x16_t v56 = veorq_s8(vqmovn_high_s16(*(int8x8_t *)v46.i8, v51), v41);
      int8x16_t v57 = vzip1q_s8(*a5, v56);
      int8x16_t v58 = vzip2q_s8(*a5, v56);
      int8x16_t v59 = veorq_s8(v52, v41);
      int8x16_t v60 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v54), v55), v41);
      int8x16_t v61 = vzip1q_s8(v59, v60);
      vst2_s8(v47, (int8x8x2_t)v57);
      int8x16_t v62 = vzip2q_s8(v59, v60);
      v39[-1] = vzip2q_s8(v57, v61);
      vst2_s8(v42, (int8x8x2_t)v58);
      v42 += a3;
      v39[1] = vzip2q_s8(v58, v62);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v40;
      int16x8_t v39 = (int8x16_t *)v42;
    }
    while (v40 > 1);
  }
}

void from_444_to_y408<8,4,(AlphaOutputMethod)1,false>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (2 * a6);
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (!v7)
  {
    int8x16_t v33 = a2 + 4;
    int8x16_t v34 = a2 + 16;
    int8x16_t v35 = a2 + 20;
    int16x8_t v36 = a2 + 32;
    int v37 = a2 + 36;
    int v39 = a4;
    if (a4 < 1) {
      return;
    }
    goto LABEL_13;
  }
  int v8 = a4 + 4;
  v9.i64[0] = 0x8080808080808080;
  v9.i64[1] = 0x8080808080808080;
  int16x4_t v10 = (char *)a1;
  do
  {
    int16x4_t v11 = a2 + 1;
    int8x16_t v12 = (int8x16_t *)((char *)a1 + 4 * a3);
    int8x16_t v13 = *a5;
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[32]), v9);
    int8x16_t v15 = vzip1q_s8(*a5, v14);
    int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v9);
    int8x16_t v17 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[20]), a2[36]), v9);
    int8x16_t v18 = vzip1q_s8(v16, v17);
    vst2_s8(v10, (int8x8x2_t)v15);
    v10 += a3;
    int8x16_t v19 = vzip2q_s8(v13, v14);
    int8x16_t v20 = vzip2q_s8(v16, v17);
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v19);
    a1[1] = vzip2q_s8(v15, v18);
    a1[3] = vzip2q_s8(v19, v20);
    a1 = (int8x16_t *)v10;
    int8x16_t v22 = *(int8x16_t *)((char *)a5 + (8 * a6));
    a5 = (int8x16_t *)((char *)a5 + v6);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[40]), v9);
    int8x16_t v24 = vzip1q_s8(v22, v23);
    int8x16_t v25 = vzip2q_s8(v22, v23);
    int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v9);
    int8x16_t v27 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[28]), a2[44]), v9);
    int8x16_t v28 = vzip1q_s8(v26, v27);
    int8x16_t v29 = vzip2q_s8(v26, v27);
    int16x8_t v30 = (char *)v12;
    vst2_s8(v30, (int8x8x2_t)v24);
    v30 += 16;
    *(int8x16_t *)int16x8_t v30 = vzip2q_s8(v24, v28);
    int v31 = v12[2].i8;
    vst2_s8(v31, (int8x8x2_t)v25);
    v12[3] = vzip2q_s8(v25, v29);
    int v32 = v8 - 1;
    LODWORD(v31) = v8 - 8;
    --v8;
    ++a2;
  }
  while ((int)v31 > 1);
  int8x16_t v33 = v11 + 4;
  int8x16_t v34 = v11 + 16;
  int8x16_t v35 = v11 + 20;
  int16x8_t v36 = v11 + 32;
  int v37 = v11 + 36;
  if (a4 <= 4) {
    int v38 = 4;
  }
  else {
    int v38 = a4;
  }
  int v39 = v32 - v38;
  a2 = v11;
  if (v39 >= 1)
  {
LABEL_13:
    unsigned int v40 = a1 + 2;
    unsigned int v41 = v39 + 1;
    v42.i64[0] = 0x8080808080808080;
    v42.i64[1] = 0x8080808080808080;
    int16x8_t v43 = a1[2].i8;
    do
    {
      int16x8_t v44 = *a2++;
      int16x8_t v45 = v44;
      int16x8_t v46 = *v33++;
      int16x8_t v47 = v46;
      int16x8_t v48 = v40[-2].i8;
      int16x8_t v49 = *v34++;
      int16x8_t v50 = v49;
      int16x8_t v51 = *v36++;
      int16x8_t v52 = v51;
      int8x16_t v53 = vqmovn_high_s16(vqmovn_s16(v45), v47);
      *(int8x8_t *)v47.i8 = vqmovn_s16(v50);
      int16x8_t v54 = *v35++;
      int16x8_t v55 = v54;
      int16x8_t v56 = *v37++;
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(*(int8x8_t *)v47.i8, v52), v42);
      int8x16_t v58 = vzip1q_s8(*a5, v57);
      int8x16_t v59 = vzip2q_s8(*a5, v57);
      int8x16_t v60 = veorq_s8(v53, v42);
      int8x16_t v61 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v55), v56), v42);
      int8x16_t v62 = vzip1q_s8(v60, v61);
      vst2_s8(v48, (int8x8x2_t)v58);
      int8x16_t v63 = vzip2q_s8(v60, v61);
      v40[-1] = vzip2q_s8(v58, v62);
      vst2_s8(v43, (int8x8x2_t)v59);
      v43 += a3;
      v40[1] = vzip2q_s8(v59, v63);
      a5 = (int8x16_t *)((char *)a5 + v6);
      --v41;
      unsigned int v40 = (int8x16_t *)v43;
    }
    while (v41 > 1);
  }
}

void from_444_to_y408<8,4,(AlphaOutputMethod)1,true>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (2 * a6);
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (!v7)
  {
    int8x16_t v33 = a2 + 4;
    int8x16_t v34 = a2 + 16;
    int8x16_t v35 = a2 + 20;
    int16x8_t v36 = a2 + 32;
    int v37 = a2 + 36;
    int v39 = a4;
    if (a4 < 1) {
      return;
    }
    goto LABEL_13;
  }
  int v8 = a4 + 4;
  v9.i64[0] = 0x8080808080808080;
  v9.i64[1] = 0x8080808080808080;
  int16x4_t v10 = (char *)a1;
  do
  {
    int16x4_t v11 = a2 + 1;
    int8x16_t v12 = (int8x16_t *)((char *)a1 + 4 * a3);
    int8x16_t v13 = *a5;
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[32]), v9);
    int8x16_t v15 = vzip1q_s8(*a5, v14);
    int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v9);
    int8x16_t v17 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[20]), a2[36]), v9);
    int8x16_t v18 = vzip1q_s8(v16, v17);
    vst2_s8(v10, (int8x8x2_t)v15);
    v10 += a3;
    int8x16_t v19 = vzip2q_s8(v13, v14);
    int8x16_t v20 = vzip2q_s8(v16, v17);
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v19);
    a1[1] = vzip2q_s8(v15, v18);
    a1[3] = vzip2q_s8(v19, v20);
    a1 = (int8x16_t *)v10;
    int8x16_t v22 = *(int8x16_t *)((char *)a5 + (8 * a6));
    a5 = (int8x16_t *)((char *)a5 + v6);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[40]), v9);
    int8x16_t v24 = vzip1q_s8(v22, v23);
    int8x16_t v25 = vzip2q_s8(v22, v23);
    int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v9);
    int8x16_t v27 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[28]), a2[44]), v9);
    int8x16_t v28 = vzip1q_s8(v26, v27);
    int8x16_t v29 = vzip2q_s8(v26, v27);
    int16x8_t v30 = (char *)v12;
    vst2_s8(v30, (int8x8x2_t)v24);
    v30 += 16;
    *(int8x16_t *)int16x8_t v30 = vzip2q_s8(v24, v28);
    int v31 = v12[2].i8;
    vst2_s8(v31, (int8x8x2_t)v25);
    v12[3] = vzip2q_s8(v25, v29);
    int v32 = v8 - 1;
    LODWORD(v31) = v8 - 8;
    --v8;
    ++a2;
  }
  while ((int)v31 > 1);
  int8x16_t v33 = v11 + 4;
  int8x16_t v34 = v11 + 16;
  int8x16_t v35 = v11 + 20;
  int16x8_t v36 = v11 + 32;
  int v37 = v11 + 36;
  if (a4 <= 4) {
    int v38 = 4;
  }
  else {
    int v38 = a4;
  }
  int v39 = v32 - v38;
  a2 = v11;
  if (v39 >= 1)
  {
LABEL_13:
    unsigned int v40 = a1 + 2;
    unsigned int v41 = v39 + 1;
    v42.i64[0] = 0x8080808080808080;
    v42.i64[1] = 0x8080808080808080;
    int16x8_t v43 = a1[2].i8;
    do
    {
      int16x8_t v44 = *a2++;
      int16x8_t v45 = v44;
      int16x8_t v46 = *v33++;
      int16x8_t v47 = v46;
      int16x8_t v48 = v40[-2].i8;
      int16x8_t v49 = *v34++;
      int16x8_t v50 = v49;
      int16x8_t v51 = *v36++;
      int16x8_t v52 = v51;
      int8x16_t v53 = vqmovn_high_s16(vqmovn_s16(v45), v47);
      *(int8x8_t *)v47.i8 = vqmovn_s16(v50);
      int16x8_t v54 = *v35++;
      int16x8_t v55 = v54;
      int16x8_t v56 = *v37++;
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(*(int8x8_t *)v47.i8, v52), v42);
      int8x16_t v58 = vzip1q_s8(*a5, v57);
      int8x16_t v59 = vzip2q_s8(*a5, v57);
      int8x16_t v60 = veorq_s8(v53, v42);
      int8x16_t v61 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v55), v56), v42);
      int8x16_t v62 = vzip1q_s8(v60, v61);
      vst2_s8(v48, (int8x8x2_t)v58);
      int8x16_t v63 = vzip2q_s8(v60, v61);
      v40[-1] = vzip2q_s8(v58, v62);
      vst2_s8(v43, (int8x8x2_t)v59);
      v43 += a3;
      v40[1] = vzip2q_s8(v59, v63);
      a5 = (int8x16_t *)((char *)a5 + v6);
      --v41;
      unsigned int v40 = (int8x16_t *)v43;
    }
    while (v41 > 1);
  }
}

void from_444_to_y408<4,8,(AlphaOutputMethod)1,false>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6)
{
}

void from_444_to_y408<4,8,(AlphaOutputMethod)1,true>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6)
{
}

void from_444_to_y408<4,4,(AlphaOutputMethod)1,false>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6)
{
}

void from_444_to_y408<4,4,(AlphaOutputMethod)1,true>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6)
{
}

void from_444_to_y408<4,2,(AlphaOutputMethod)1,false>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6)
{
}

void from_444_to_y408<4,2,(AlphaOutputMethod)1,true>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6)
{
}

int8x16_t from_444_to_y408<2,4,(AlphaOutputMethod)1,false>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6, int8x16_t result)
{
  int v7 = &a1[4 * a3];
  int v8 = (int8x16_t *)((char *)a5 + (8 * a6));
  uint64_t v9 = (2 * a6);
  if (a4 == 8)
  {
    int16x8_t v10 = *a2;
    int16x8_t v11 = a2[1];
    *(int8x8_t *)v10.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v11.i8 = vqmovn_s16(v11);
    int16x8_t v12 = a2[4];
    int16x8_t v13 = a2[5];
    *(int8x8_t *)v12.i8 = vqmovn_s16(v12);
    int16x8_t v14 = a2[8];
    int16x8_t v15 = a2[9];
    *(int8x8_t *)v14.i8 = vqmovn_s16(v14);
    *(int8x8_t *)v13.i8 = vqmovn_s16(v13);
    *(int8x8_t *)v15.i8 = vqmovn_s16(v15);
    int8x16_t v16 = (int8x16_t)vzip1q_s16(v10, v11);
    int8x16_t v17 = (int8x16_t)vzip1q_s16(v13, v15);
    v10.i64[0] = 0xFF000000FFLL;
    v10.i64[1] = 0xFF000000FFLL;
    int8x16_t v18 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, (int8x16_t)v10)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), (int8x16_t)v10))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), (int8x16_t)v10)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), (int8x16_t)v10)));
    v11.i64[0] = 0x8080808080808080;
    v11.i64[1] = 0x8080808080808080;
    int8x16_t v19 = veorq_s8((int8x16_t)vzip1q_s16(v12, v14), (int8x16_t)v11);
    int8x16_t v20 = vzip1q_s8(v18, v19);
    int8x16_t v21 = vzip2q_s8(v18, v19);
    int8x16_t v22 = veorq_s8(v16, (int8x16_t)v11);
    int8x16_t v23 = veorq_s8(v17, (int8x16_t)v11);
    int8x16_t v24 = vzip1q_s8(v22, v23);
    int8x16_t v25 = vzip2q_s8(v22, v23);
    vst2_s8(a1, (int8x8x2_t)v20);
    int8x16_t v26 = (int8x16_t *)&a1[a3];
    *int8x16_t v26 = vzip2q_s8(v20, v24);
    int8x16_t v27 = &v26->i8[a3];
    vst2_s8(v27, (int8x8x2_t)v21);
    int8x16_t v28 = (int8x16_t *)&v27[a3];
    int8x16_t *v28 = vzip2q_s8(v21, v25);
    int16x8_t v29 = a2[2];
    int16x8_t v30 = a2[3];
    *(int8x8_t *)v29.i8 = vqmovn_s16(v29);
    *(int8x8_t *)v30.i8 = vqmovn_s16(v30);
    int16x8_t v31 = a2[6];
    int16x8_t v32 = a2[7];
    *(int8x8_t *)v31.i8 = vqmovn_s16(v31);
    int16x8_t v33 = a2[10];
    int16x8_t v34 = a2[11];
    *(int8x8_t *)v33.i8 = vqmovn_s16(v33);
    *(int8x8_t *)v32.i8 = vqmovn_s16(v32);
    *(int8x8_t *)v34.i8 = vqmovn_s16(v34);
    int8x16_t v35 = (int8x16_t)vzip1q_s16(v29, v30);
    int8x16_t v36 = (int8x16_t)vzip1q_s16(v31, v33);
    int8x16_t v37 = (int8x16_t)vzip1q_s16(v32, v34);
    int8x16_t v38 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, (int8x16_t)v10)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), (int8x16_t)v10))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), (int8x16_t)v10)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), (int8x16_t)v10)));
    int8x16_t v39 = veorq_s8(v36, (int8x16_t)v11);
    int8x16_t v40 = vzip1q_s8(v38, v39);
    int8x16_t v41 = vzip2q_s8(v38, v39);
    int8x16_t v42 = veorq_s8(v35, (int8x16_t)v11);
    int8x16_t v43 = veorq_s8(v37, (int8x16_t)v11);
    int8x16_t v44 = vzip1q_s8(v42, v43);
    int8x16_t v45 = vzip2q_s8(v42, v43);
    vst2_s8(v7, (int8x8x2_t)v40);
    int16x8_t v46 = (int8x16_t *)&v7[a3];
    int8x16_t *v46 = vzip2q_s8(v40, v44);
    int16x8_t v47 = &v46->i8[a3];
    vst2_s8(v47, (int8x8x2_t)v41);
    int16x8_t v48 = (int8x16_t *)&v47[a3];
    int8x8_t result = vzip2q_s8(v41, v45);
    *int16x8_t v48 = result;
    return result;
  }
  if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v84 = *a2;
      int16x8_t v85 = a2[1];
      *(int8x8_t *)v84.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v85.i8 = vqmovn_s16(v85);
      int16x8_t v86 = a2[4];
      int16x8_t v87 = a2[5];
      *(int8x8_t *)v86.i8 = vqmovn_s16(v86);
      int16x8_t v88 = a2[8];
      int16x8_t v89 = a2[9];
      *(int8x8_t *)v88.i8 = vqmovn_s16(v88);
      *(int8x8_t *)v87.i8 = vqmovn_s16(v87);
      *(int8x8_t *)v89.i8 = vqmovn_s16(v89);
      int8x16_t v90 = (int8x16_t)vzip1q_s16(v84, v85);
      int8x16_t v91 = (int8x16_t)vzip1q_s16(v86, v88);
      int8x16_t v92 = (int8x16_t)vzip1q_s16(v87, v89);
      v93.i64[0] = 0xFF000000FFLL;
      v93.i64[1] = 0xFF000000FFLL;
      int8x16_t v94 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v93)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v93))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v93)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v93)));
      v93.i64[0] = 0x8080808080808080;
      v93.i64[1] = 0x8080808080808080;
      int8x16_t v95 = veorq_s8(v91, v93);
      int8x8_t result = vzip1q_s8(v94, v95);
      int8x16_t v96 = veorq_s8(v90, v93);
      int8x16_t v97 = veorq_s8(v92, v93);
      int8x16_t v98 = vzip1q_s8(v96, v97);
      vst2_s8(a1, (int8x8x2_t)result);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          int8x8_t result = vzip2q_s8(result, v98);
          *(int8x16_t *)&a1[a3] = result;
        }
      }
      else
      {
        int8x16_t v78 = vzip2q_s8(v94, v95);
        int8x16_t v81 = vzip2q_s8(v96, v97);
        int8x8_t result = vzip2q_s8(result, v98);
        *(int8x16_t *)&a1[a3] = result;
        int v7 = &a1[a3 + a3];
        vst2_s8(v7, (int8x8x2_t)v78);
        if (a4 == 4)
        {
LABEL_11:
          int8x8_t result = vzip2q_s8(v78, v81);
          *(int8x16_t *)&v7[a3] = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v49 = *a2;
    int16x8_t v50 = a2[1];
    *(int8x8_t *)v49.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v50.i8 = vqmovn_s16(v50);
    int16x8_t v51 = a2[4];
    int16x8_t v52 = a2[5];
    *(int8x8_t *)v51.i8 = vqmovn_s16(v51);
    int16x8_t v53 = a2[8];
    int16x8_t v54 = a2[9];
    *(int8x8_t *)v53.i8 = vqmovn_s16(v53);
    *(int8x8_t *)v52.i8 = vqmovn_s16(v52);
    *(int8x8_t *)v54.i8 = vqmovn_s16(v54);
    int8x16_t v55 = (int8x16_t)vzip1q_s16(v49, v50);
    int8x16_t v56 = (int8x16_t)vzip1q_s16(v52, v54);
    v49.i64[0] = 0xFF000000FFLL;
    v49.i64[1] = 0xFF000000FFLL;
    int8x16_t v57 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, (int8x16_t)v49)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), (int8x16_t)v49))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), (int8x16_t)v49)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), (int8x16_t)v49)));
    v50.i64[0] = 0x8080808080808080;
    v50.i64[1] = 0x8080808080808080;
    int8x16_t v58 = veorq_s8((int8x16_t)vzip1q_s16(v51, v53), (int8x16_t)v50);
    int8x16_t v59 = vzip1q_s8(v57, v58);
    int8x16_t v60 = vzip2q_s8(v57, v58);
    int8x16_t v61 = veorq_s8(v55, (int8x16_t)v50);
    int8x16_t v62 = veorq_s8(v56, (int8x16_t)v50);
    int8x16_t v63 = vzip1q_s8(v61, v62);
    int8x16_t v64 = vzip2q_s8(v61, v62);
    vst2_s8(a1, (int8x8x2_t)v59);
    int64x2_t v65 = (int8x16_t *)&a1[a3];
    *int64x2_t v65 = vzip2q_s8(v59, v63);
    int8x16_t v66 = &v65->i8[a3];
    vst2_s8(v66, (int8x8x2_t)v60);
    int64x2_t v67 = (int8x16_t *)&v66[a3];
    *int64x2_t v67 = vzip2q_s8(v60, v64);
    int16x8_t v68 = a2[2];
    int16x8_t v69 = a2[3];
    *(int8x8_t *)v68.i8 = vqmovn_s16(v68);
    *(int8x8_t *)v69.i8 = vqmovn_s16(v69);
    int16x8_t v70 = a2[6];
    int16x8_t v71 = a2[7];
    *(int8x8_t *)v70.i8 = vqmovn_s16(v70);
    int16x8_t v72 = a2[10];
    int16x8_t v73 = a2[11];
    *(int8x8_t *)v72.i8 = vqmovn_s16(v72);
    *(int8x8_t *)v71.i8 = vqmovn_s16(v71);
    *(int8x8_t *)v73.i8 = vqmovn_s16(v73);
    int8x16_t v74 = (int8x16_t)vzip1q_s16(v68, v69);
    int8x16_t v75 = (int8x16_t)vzip1q_s16(v70, v72);
    int8x16_t v76 = (int8x16_t)vzip1q_s16(v71, v73);
    int8x8_t result = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, (int8x16_t)v49)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), (int8x16_t)v49))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), (int8x16_t)v49)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), (int8x16_t)v49)));
    int8x16_t v77 = veorq_s8(v75, (int8x16_t)v50);
    int8x16_t v78 = vzip1q_s8(result, v77);
    int8x16_t v79 = veorq_s8(v74, (int8x16_t)v50);
    int8x16_t v80 = veorq_s8(v76, (int8x16_t)v50);
    int8x16_t v81 = vzip1q_s8(v79, v80);
    vst2_s8(v7, (int8x8x2_t)v78);
    if (a4 >= 7)
    {
      v99.val[1] = (int8x8_t)vzip2q_s8(v79, v80).u64[0];
      v99.val[0] = (int8x8_t)vzip2q_s8(result, v77).u64[0];
      int64x2_t v82 = (int8x16_t *)&v7[a3];
      int8x8_t result = vzip2q_s8(v78, v81);
      int8x16_t *v82 = result;
      int8x16_t v83 = &v82->i8[a3];
      vst2_s8(v83, v99);
      return result;
    }
    if (a4 == 6) {
      goto LABEL_11;
    }
  }
  return result;
}

int8x16_t from_444_to_y408<2,4,(AlphaOutputMethod)1,true>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6, int8x16_t result)
{
  int v7 = &a1[4 * a3];
  int v8 = (int8x16_t *)((char *)a5 + (8 * a6));
  uint64_t v9 = (2 * a6);
  if (a4 == 8)
  {
    int16x8_t v10 = *a2;
    int16x8_t v11 = a2[1];
    *(int8x8_t *)v10.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v11.i8 = vqmovn_s16(v11);
    int16x8_t v12 = a2[4];
    int16x8_t v13 = a2[5];
    *(int8x8_t *)v12.i8 = vqmovn_s16(v12);
    int16x8_t v14 = a2[8];
    int16x8_t v15 = a2[9];
    *(int8x8_t *)v14.i8 = vqmovn_s16(v14);
    *(int8x8_t *)v13.i8 = vqmovn_s16(v13);
    *(int8x8_t *)v15.i8 = vqmovn_s16(v15);
    int8x16_t v16 = (int8x16_t)vzip1q_s16(v10, v11);
    int8x16_t v17 = (int8x16_t)vzip1q_s16(v13, v15);
    v10.i64[0] = 0xFF000000FFLL;
    v10.i64[1] = 0xFF000000FFLL;
    int8x16_t v18 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, (int8x16_t)v10)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), (int8x16_t)v10))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), (int8x16_t)v10)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), (int8x16_t)v10)));
    v11.i64[0] = 0x8080808080808080;
    v11.i64[1] = 0x8080808080808080;
    int8x16_t v19 = veorq_s8((int8x16_t)vzip1q_s16(v12, v14), (int8x16_t)v11);
    int8x16_t v20 = vzip1q_s8(v18, v19);
    int8x16_t v21 = vzip2q_s8(v18, v19);
    int8x16_t v22 = veorq_s8(v16, (int8x16_t)v11);
    int8x16_t v23 = veorq_s8(v17, (int8x16_t)v11);
    int8x16_t v24 = vzip1q_s8(v22, v23);
    int8x16_t v25 = vzip2q_s8(v22, v23);
    vst2_s8(a1, (int8x8x2_t)v20);
    int8x16_t v26 = (int8x16_t *)&a1[a3];
    *int8x16_t v26 = vzip2q_s8(v20, v24);
    int8x16_t v27 = &v26->i8[a3];
    vst2_s8(v27, (int8x8x2_t)v21);
    int8x16_t v28 = (int8x16_t *)&v27[a3];
    int8x16_t *v28 = vzip2q_s8(v21, v25);
    int16x8_t v29 = a2[2];
    int16x8_t v30 = a2[3];
    *(int8x8_t *)v29.i8 = vqmovn_s16(v29);
    *(int8x8_t *)v30.i8 = vqmovn_s16(v30);
    int16x8_t v31 = a2[6];
    int16x8_t v32 = a2[7];
    *(int8x8_t *)v31.i8 = vqmovn_s16(v31);
    int16x8_t v33 = a2[10];
    int16x8_t v34 = a2[11];
    *(int8x8_t *)v33.i8 = vqmovn_s16(v33);
    *(int8x8_t *)v32.i8 = vqmovn_s16(v32);
    *(int8x8_t *)v34.i8 = vqmovn_s16(v34);
    int8x16_t v35 = (int8x16_t)vzip1q_s16(v29, v30);
    int8x16_t v36 = (int8x16_t)vzip1q_s16(v31, v33);
    int8x16_t v37 = (int8x16_t)vzip1q_s16(v32, v34);
    int8x16_t v38 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, (int8x16_t)v10)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), (int8x16_t)v10))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), (int8x16_t)v10)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), (int8x16_t)v10)));
    int8x16_t v39 = veorq_s8(v36, (int8x16_t)v11);
    int8x16_t v40 = vzip1q_s8(v38, v39);
    int8x16_t v41 = vzip2q_s8(v38, v39);
    int8x16_t v42 = veorq_s8(v35, (int8x16_t)v11);
    int8x16_t v43 = veorq_s8(v37, (int8x16_t)v11);
    int8x16_t v44 = vzip1q_s8(v42, v43);
    int8x16_t v45 = vzip2q_s8(v42, v43);
    vst2_s8(v7, (int8x8x2_t)v40);
    int16x8_t v46 = (int8x16_t *)&v7[a3];
    int8x16_t *v46 = vzip2q_s8(v40, v44);
    int16x8_t v47 = &v46->i8[a3];
    vst2_s8(v47, (int8x8x2_t)v41);
    int16x8_t v48 = (int8x16_t *)&v47[a3];
    int8x8_t result = vzip2q_s8(v41, v45);
    *int16x8_t v48 = result;
    return result;
  }
  if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v84 = *a2;
      int16x8_t v85 = a2[1];
      *(int8x8_t *)v84.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v85.i8 = vqmovn_s16(v85);
      int16x8_t v86 = a2[4];
      int16x8_t v87 = a2[5];
      *(int8x8_t *)v86.i8 = vqmovn_s16(v86);
      int16x8_t v88 = a2[8];
      int16x8_t v89 = a2[9];
      *(int8x8_t *)v88.i8 = vqmovn_s16(v88);
      *(int8x8_t *)v87.i8 = vqmovn_s16(v87);
      *(int8x8_t *)v89.i8 = vqmovn_s16(v89);
      int8x16_t v90 = (int8x16_t)vzip1q_s16(v84, v85);
      int8x16_t v91 = (int8x16_t)vzip1q_s16(v86, v88);
      int8x16_t v92 = (int8x16_t)vzip1q_s16(v87, v89);
      v93.i64[0] = 0xFF000000FFLL;
      v93.i64[1] = 0xFF000000FFLL;
      int8x16_t v94 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v93)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v93))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v93)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v93)));
      v93.i64[0] = 0x8080808080808080;
      v93.i64[1] = 0x8080808080808080;
      int8x16_t v95 = veorq_s8(v91, v93);
      int8x8_t result = vzip1q_s8(v94, v95);
      int8x16_t v96 = veorq_s8(v90, v93);
      int8x16_t v97 = veorq_s8(v92, v93);
      int8x16_t v98 = vzip1q_s8(v96, v97);
      vst2_s8(a1, (int8x8x2_t)result);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          int8x8_t result = vzip2q_s8(result, v98);
          *(int8x16_t *)&a1[a3] = result;
        }
      }
      else
      {
        int8x16_t v78 = vzip2q_s8(v94, v95);
        int8x16_t v81 = vzip2q_s8(v96, v97);
        int8x8_t result = vzip2q_s8(result, v98);
        *(int8x16_t *)&a1[a3] = result;
        int v7 = &a1[a3 + a3];
        vst2_s8(v7, (int8x8x2_t)v78);
        if (a4 == 4)
        {
LABEL_11:
          int8x8_t result = vzip2q_s8(v78, v81);
          *(int8x16_t *)&v7[a3] = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v49 = *a2;
    int16x8_t v50 = a2[1];
    *(int8x8_t *)v49.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v50.i8 = vqmovn_s16(v50);
    int16x8_t v51 = a2[4];
    int16x8_t v52 = a2[5];
    *(int8x8_t *)v51.i8 = vqmovn_s16(v51);
    int16x8_t v53 = a2[8];
    int16x8_t v54 = a2[9];
    *(int8x8_t *)v53.i8 = vqmovn_s16(v53);
    *(int8x8_t *)v52.i8 = vqmovn_s16(v52);
    *(int8x8_t *)v54.i8 = vqmovn_s16(v54);
    int8x16_t v55 = (int8x16_t)vzip1q_s16(v49, v50);
    int8x16_t v56 = (int8x16_t)vzip1q_s16(v52, v54);
    v49.i64[0] = 0xFF000000FFLL;
    v49.i64[1] = 0xFF000000FFLL;
    int8x16_t v57 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, (int8x16_t)v49)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), (int8x16_t)v49))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), (int8x16_t)v49)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), (int8x16_t)v49)));
    v50.i64[0] = 0x8080808080808080;
    v50.i64[1] = 0x8080808080808080;
    int8x16_t v58 = veorq_s8((int8x16_t)vzip1q_s16(v51, v53), (int8x16_t)v50);
    int8x16_t v59 = vzip1q_s8(v57, v58);
    int8x16_t v60 = vzip2q_s8(v57, v58);
    int8x16_t v61 = veorq_s8(v55, (int8x16_t)v50);
    int8x16_t v62 = veorq_s8(v56, (int8x16_t)v50);
    int8x16_t v63 = vzip1q_s8(v61, v62);
    int8x16_t v64 = vzip2q_s8(v61, v62);
    vst2_s8(a1, (int8x8x2_t)v59);
    int64x2_t v65 = (int8x16_t *)&a1[a3];
    *int64x2_t v65 = vzip2q_s8(v59, v63);
    int8x16_t v66 = &v65->i8[a3];
    vst2_s8(v66, (int8x8x2_t)v60);
    int64x2_t v67 = (int8x16_t *)&v66[a3];
    *int64x2_t v67 = vzip2q_s8(v60, v64);
    int16x8_t v68 = a2[2];
    int16x8_t v69 = a2[3];
    *(int8x8_t *)v68.i8 = vqmovn_s16(v68);
    *(int8x8_t *)v69.i8 = vqmovn_s16(v69);
    int16x8_t v70 = a2[6];
    int16x8_t v71 = a2[7];
    *(int8x8_t *)v70.i8 = vqmovn_s16(v70);
    int16x8_t v72 = a2[10];
    int16x8_t v73 = a2[11];
    *(int8x8_t *)v72.i8 = vqmovn_s16(v72);
    *(int8x8_t *)v71.i8 = vqmovn_s16(v71);
    *(int8x8_t *)v73.i8 = vqmovn_s16(v73);
    int8x16_t v74 = (int8x16_t)vzip1q_s16(v68, v69);
    int8x16_t v75 = (int8x16_t)vzip1q_s16(v70, v72);
    int8x16_t v76 = (int8x16_t)vzip1q_s16(v71, v73);
    int8x8_t result = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, (int8x16_t)v49)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), (int8x16_t)v49))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), (int8x16_t)v49)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), (int8x16_t)v49)));
    int8x16_t v77 = veorq_s8(v75, (int8x16_t)v50);
    int8x16_t v78 = vzip1q_s8(result, v77);
    int8x16_t v79 = veorq_s8(v74, (int8x16_t)v50);
    int8x16_t v80 = veorq_s8(v76, (int8x16_t)v50);
    int8x16_t v81 = vzip1q_s8(v79, v80);
    vst2_s8(v7, (int8x8x2_t)v78);
    if (a4 >= 7)
    {
      v99.val[1] = (int8x8_t)vzip2q_s8(v79, v80).u64[0];
      v99.val[0] = (int8x8_t)vzip2q_s8(result, v77).u64[0];
      int64x2_t v82 = (int8x16_t *)&v7[a3];
      int8x8_t result = vzip2q_s8(v78, v81);
      int8x16_t *v82 = result;
      int8x16_t v83 = &v82->i8[a3];
      vst2_s8(v83, v99);
      return result;
    }
    if (a4 == 6) {
      goto LABEL_11;
    }
  }
  return result;
}

void from_444_to_y408<2,2,(AlphaOutputMethod)1,false>(__int16 *a1, uint64_t a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (4 * a6);
  v7.i64[0] = 0xFF000000FFLL;
  v7.i64[1] = 0xFF000000FFLL;
  int8x16_t v8 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v7)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6), v7))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6), v7)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6 + v6), v7)));
  v9.i64[0] = 0x8080808080808080;
  v9.i64[1] = 0x8080808080808080;
  int8x16_t v10 = veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v9);
  int16x4x2_t v11 = (int16x4x2_t)vzip1q_s8(v8, v10);
  int16x4x2_t v12 = (int16x4x2_t)vzip2q_s8(v8, v10);
  int16x8_t v13 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48));
  int16x8_t v14 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 64)), *(int16x8_t *)(a2 + 80));
  int64x2_t v15 = (int64x2_t)vzip1q_s16(v13, v14);
  int64x2_t v16 = (int64x2_t)vzip2q_s16(v13, v14);
  int16x8_t v17 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v15, (int8x16_t)vdupq_laneq_s64(v15, 1)), v9);
  int16x8_t v18 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v16, (int8x16_t)vdupq_laneq_s64(v16, 1)), v9);
  if (a4 == 4)
  {
    uint64_t v19 = a3;
    vst2_s16(a1, v11);
    int8x16_t v20 = (int16x8_t *)((char *)a1 + v19);
    *int8x16_t v20 = vzip2q_s16((int16x8_t)v11, v17);
    int8x16_t v21 = (__int16 *)((char *)v20->i16 + a3);
    vst2_s16(v21, v12);
    int8x16_t v22 = (int16x8_t *)((char *)v21 + v19);
    int16x8_t *v22 = vzip2q_s16((int16x8_t)v12, v18);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v11);
    }
  }
  else
  {
    uint64_t v23 = a3;
    vst2_s16(a1, v11);
    int8x16_t v24 = (int16x8_t *)((char *)a1 + v23);
    int16x8_t *v24 = vzip2q_s16((int16x8_t)v11, v17);
    if (a4 == 3)
    {
      int8x16_t v25 = (__int16 *)((char *)v24->i16 + a3);
      vst2_s16(v25, v12);
    }
  }
}

void from_444_to_y408<2,2,(AlphaOutputMethod)1,true>(__int16 *a1, uint64_t a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (4 * a6);
  v7.i64[0] = 0xFF000000FFLL;
  v7.i64[1] = 0xFF000000FFLL;
  int8x16_t v8 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v7)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6), v7))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6), v7)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6 + v6), v7)));
  v9.i64[0] = 0x8080808080808080;
  v9.i64[1] = 0x8080808080808080;
  int8x16_t v10 = veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v9);
  int16x4x2_t v11 = (int16x4x2_t)vzip1q_s8(v8, v10);
  int16x4x2_t v12 = (int16x4x2_t)vzip2q_s8(v8, v10);
  int16x8_t v13 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48));
  int16x8_t v14 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 64)), *(int16x8_t *)(a2 + 80));
  int64x2_t v15 = (int64x2_t)vzip1q_s16(v13, v14);
  int64x2_t v16 = (int64x2_t)vzip2q_s16(v13, v14);
  int16x8_t v17 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v15, (int8x16_t)vdupq_laneq_s64(v15, 1)), v9);
  int16x8_t v18 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v16, (int8x16_t)vdupq_laneq_s64(v16, 1)), v9);
  if (a4 == 4)
  {
    uint64_t v19 = a3;
    vst2_s16(a1, v11);
    int8x16_t v20 = (int16x8_t *)((char *)a1 + v19);
    *int8x16_t v20 = vzip2q_s16((int16x8_t)v11, v17);
    int8x16_t v21 = (__int16 *)((char *)v20->i16 + a3);
    vst2_s16(v21, v12);
    int8x16_t v22 = (int16x8_t *)((char *)v21 + v19);
    int16x8_t *v22 = vzip2q_s16((int16x8_t)v12, v18);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v11);
    }
  }
  else
  {
    uint64_t v23 = a3;
    vst2_s16(a1, v11);
    int8x16_t v24 = (int16x8_t *)((char *)a1 + v23);
    int16x8_t *v24 = vzip2q_s16((int16x8_t)v11, v17);
    if (a4 == 3)
    {
      int8x16_t v25 = (__int16 *)((char *)v24->i16 + a3);
      vst2_s16(v25, v12);
    }
  }
}

unsigned char *from_444_to_y408<2,1,(AlphaOutputMethod)1,false>(unsigned char *a1, uint64_t a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 1);
}

unsigned char *from_444_to_y408<2,1,(AlphaOutputMethod)1,true>(unsigned char *a1, uint64_t a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 1);
}

unsigned char *from_444_to_y408<1,2,(AlphaOutputMethod)1,false>(unsigned char *a1, uint64_t a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 2);
}

unsigned char *from_444_to_y408<1,2,(AlphaOutputMethod)1,true>(unsigned char *a1, uint64_t a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 2);
}

unsigned char *from_444_to_y408<1,1,(AlphaOutputMethod)1,false>(unsigned char *a1, uint64_t a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 1);
}

unsigned char *from_444_to_y408<1,1,(AlphaOutputMethod)1,true>(unsigned char *a1, uint64_t a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 1);
}

int8x16_t *from_444_to_y408<8,8,(AlphaOutputMethod)2,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int16x8_t v29 = a2 + 8;
    int16x8_t v30 = a2 + 32;
    int16x8_t v31 = a2 + 40;
    int16x8_t v32 = a2 + 64;
    int16x8_t v33 = a2 + 72;
    int v35 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = -1;
  v7.i64[1] = -1;
  int8x16_t v8 = (char *)result;
  do
  {
    int8x16_t v9 = a2 + 1;
    int8x16_t v10 = (int8x16_t *)((char *)result + 8 * a3);
    int8x16_t v11 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]), v6);
    int8x16_t v12 = vzip1q_s8(v7, v11);
    int8x16_t v13 = vzip2q_s8(v7, v11);
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]), v6);
    int8x16_t v16 = vzip1q_s8(v14, v15);
    int8x16_t v17 = vzip2q_s8(v14, v15);
    vst2_s8(v8, (int8x8x2_t)v12);
    v8 += a3;
    result[1] = vzip2q_s8(v12, v16);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v13);
    result[3] = vzip2q_s8(v13, v17);
    int8x8_t result = (int8x16_t *)v8;
    int8x16_t v19 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]), v6);
    int8x16_t v20 = vzip1q_s8(v7, v19);
    int8x16_t v21 = vzip2q_s8(v7, v19);
    int8x16_t v22 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]), v6);
    int8x16_t v24 = vzip1q_s8(v22, v23);
    int8x16_t v25 = vzip2q_s8(v22, v23);
    int8x16_t v26 = (char *)v10;
    vst2_s8(v26, (int8x8x2_t)v20);
    v26 += 16;
    *(int8x16_t *)int8x16_t v26 = vzip2q_s8(v20, v24);
    int8x16_t v27 = v10[2].i8;
    vst2_s8(v27, (int8x8x2_t)v21);
    v10[3] = vzip2q_s8(v21, v25);
    int v28 = v5 - 1;
    LODWORD(v10) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v10 > 1);
  int16x8_t v29 = v9 + 8;
  int16x8_t v30 = v9 + 32;
  int16x8_t v31 = v9 + 40;
  int16x8_t v32 = v9 + 64;
  int16x8_t v33 = v9 + 72;
  if (a4 <= 8) {
    int v34 = 8;
  }
  else {
    int v34 = a4;
  }
  int v35 = v28 - v34;
  a2 = v9;
  if (v35 >= 1)
  {
LABEL_13:
    int8x16_t v36 = result + 2;
    unsigned int v37 = v35 + 1;
    v38.i64[0] = 0x8080808080808080;
    v38.i64[1] = 0x8080808080808080;
    v39.i64[0] = -1;
    v39.i64[1] = -1;
    int8x16_t v40 = result[2].i8;
    do
    {
      int16x8_t v41 = *a2++;
      int16x8_t v42 = v41;
      int8x16_t v43 = v36[-2].i8;
      int16x8_t v44 = *v29++;
      int8x16_t v45 = vqmovn_high_s16(vqmovn_s16(v42), v44);
      int16x8_t v46 = *v30++;
      int16x8_t v47 = v46;
      int16x8_t v48 = *v32++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v47), v48);
      int16x8_t v50 = *v31++;
      int16x8_t v51 = v50;
      int16x8_t v52 = *v33++;
      int8x16_t v53 = veorq_s8(v49, v38);
      int8x16_t v54 = vzip1q_s8(v39, v53);
      int8x16_t v55 = vzip2q_s8(v39, v53);
      int8x16_t v56 = veorq_s8(v45, v38);
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v51), v52), v38);
      int8x16_t v58 = vzip1q_s8(v56, v57);
      vst2_s8(v43, (int8x8x2_t)v54);
      int8x16_t v59 = vzip2q_s8(v56, v57);
      v36[-1] = vzip2q_s8(v54, v58);
      vst2_s8(v40, (int8x8x2_t)v55);
      v40 += a3;
      v36[1] = vzip2q_s8(v55, v59);
      --v37;
      int8x16_t v36 = (int8x16_t *)v40;
    }
    while (v37 > 1);
  }
  return result;
}

int8x16_t *from_444_to_y408<8,8,(AlphaOutputMethod)2,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int16x8_t v29 = a2 + 8;
    int16x8_t v30 = a2 + 32;
    int16x8_t v31 = a2 + 40;
    int16x8_t v32 = a2 + 64;
    int16x8_t v33 = a2 + 72;
    int v35 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = -1;
  v7.i64[1] = -1;
  int8x16_t v8 = (char *)result;
  do
  {
    int8x16_t v9 = a2 + 1;
    int8x16_t v10 = (int8x16_t *)((char *)result + 8 * a3);
    int8x16_t v11 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]), v6);
    int8x16_t v12 = vzip1q_s8(v7, v11);
    int8x16_t v13 = vzip2q_s8(v7, v11);
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]), v6);
    int8x16_t v16 = vzip1q_s8(v14, v15);
    int8x16_t v17 = vzip2q_s8(v14, v15);
    vst2_s8(v8, (int8x8x2_t)v12);
    v8 += a3;
    result[1] = vzip2q_s8(v12, v16);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v13);
    result[3] = vzip2q_s8(v13, v17);
    int8x8_t result = (int8x16_t *)v8;
    int8x16_t v19 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]), v6);
    int8x16_t v20 = vzip1q_s8(v7, v19);
    int8x16_t v21 = vzip2q_s8(v7, v19);
    int8x16_t v22 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]), v6);
    int8x16_t v24 = vzip1q_s8(v22, v23);
    int8x16_t v25 = vzip2q_s8(v22, v23);
    int8x16_t v26 = (char *)v10;
    vst2_s8(v26, (int8x8x2_t)v20);
    v26 += 16;
    *(int8x16_t *)int8x16_t v26 = vzip2q_s8(v20, v24);
    int8x16_t v27 = v10[2].i8;
    vst2_s8(v27, (int8x8x2_t)v21);
    v10[3] = vzip2q_s8(v21, v25);
    int v28 = v5 - 1;
    LODWORD(v10) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v10 > 1);
  int16x8_t v29 = v9 + 8;
  int16x8_t v30 = v9 + 32;
  int16x8_t v31 = v9 + 40;
  int16x8_t v32 = v9 + 64;
  int16x8_t v33 = v9 + 72;
  if (a4 <= 8) {
    int v34 = 8;
  }
  else {
    int v34 = a4;
  }
  int v35 = v28 - v34;
  a2 = v9;
  if (v35 >= 1)
  {
LABEL_13:
    int8x16_t v36 = result + 2;
    unsigned int v37 = v35 + 1;
    v38.i64[0] = 0x8080808080808080;
    v38.i64[1] = 0x8080808080808080;
    v39.i64[0] = -1;
    v39.i64[1] = -1;
    int8x16_t v40 = result[2].i8;
    do
    {
      int16x8_t v41 = *a2++;
      int16x8_t v42 = v41;
      int8x16_t v43 = v36[-2].i8;
      int16x8_t v44 = *v29++;
      int8x16_t v45 = vqmovn_high_s16(vqmovn_s16(v42), v44);
      int16x8_t v46 = *v30++;
      int16x8_t v47 = v46;
      int16x8_t v48 = *v32++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v47), v48);
      int16x8_t v50 = *v31++;
      int16x8_t v51 = v50;
      int16x8_t v52 = *v33++;
      int8x16_t v53 = veorq_s8(v49, v38);
      int8x16_t v54 = vzip1q_s8(v39, v53);
      int8x16_t v55 = vzip2q_s8(v39, v53);
      int8x16_t v56 = veorq_s8(v45, v38);
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v51), v52), v38);
      int8x16_t v58 = vzip1q_s8(v56, v57);
      vst2_s8(v43, (int8x8x2_t)v54);
      int8x16_t v59 = vzip2q_s8(v56, v57);
      v36[-1] = vzip2q_s8(v54, v58);
      vst2_s8(v40, (int8x8x2_t)v55);
      v40 += a3;
      v36[1] = vzip2q_s8(v55, v59);
      --v37;
      int8x16_t v36 = (int8x16_t *)v40;
    }
    while (v37 > 1);
  }
  return result;
}

int8x16_t *from_444_to_y408<8,4,(AlphaOutputMethod)2,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 4) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 4;
  }
  if (!v4)
  {
    int16x8_t v29 = a2 + 4;
    int16x8_t v30 = a2 + 16;
    int16x8_t v31 = a2 + 20;
    int16x8_t v32 = a2 + 32;
    int16x8_t v33 = a2 + 36;
    int v35 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 4;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = -1;
  v7.i64[1] = -1;
  int8x16_t v8 = (char *)result;
  do
  {
    int8x16_t v9 = a2 + 1;
    int8x16_t v10 = (int8x16_t *)((char *)result + 4 * a3);
    int8x16_t v11 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[32]), v6);
    int8x16_t v12 = vzip1q_s8(v7, v11);
    int8x16_t v13 = vzip2q_s8(v7, v11);
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v6);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[20]), a2[36]), v6);
    int8x16_t v16 = vzip1q_s8(v14, v15);
    int8x16_t v17 = vzip2q_s8(v14, v15);
    vst2_s8(v8, (int8x8x2_t)v12);
    v8 += a3;
    result[1] = vzip2q_s8(v12, v16);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v13);
    result[3] = vzip2q_s8(v13, v17);
    int8x8_t result = (int8x16_t *)v8;
    int8x16_t v19 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[40]), v6);
    int8x16_t v20 = vzip1q_s8(v7, v19);
    int8x16_t v21 = vzip2q_s8(v7, v19);
    int8x16_t v22 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v6);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[28]), a2[44]), v6);
    int8x16_t v24 = vzip1q_s8(v22, v23);
    int8x16_t v25 = vzip2q_s8(v22, v23);
    int8x16_t v26 = (char *)v10;
    vst2_s8(v26, (int8x8x2_t)v20);
    v26 += 16;
    *(int8x16_t *)int8x16_t v26 = vzip2q_s8(v20, v24);
    int8x16_t v27 = v10[2].i8;
    vst2_s8(v27, (int8x8x2_t)v21);
    v10[3] = vzip2q_s8(v21, v25);
    int v28 = v5 - 1;
    LODWORD(v10) = v5 - 8;
    --v5;
    ++a2;
  }
  while ((int)v10 > 1);
  int16x8_t v29 = v9 + 4;
  int16x8_t v30 = v9 + 16;
  int16x8_t v31 = v9 + 20;
  int16x8_t v32 = v9 + 32;
  int16x8_t v33 = v9 + 36;
  if (a4 <= 4) {
    int v34 = 4;
  }
  else {
    int v34 = a4;
  }
  int v35 = v28 - v34;
  a2 = v9;
  if (v35 >= 1)
  {
LABEL_13:
    int8x16_t v36 = result + 2;
    unsigned int v37 = v35 + 1;
    v38.i64[0] = 0x8080808080808080;
    v38.i64[1] = 0x8080808080808080;
    v39.i64[0] = -1;
    v39.i64[1] = -1;
    int8x16_t v40 = result[2].i8;
    do
    {
      int16x8_t v41 = *a2++;
      int16x8_t v42 = v41;
      int8x16_t v43 = v36[-2].i8;
      int16x8_t v44 = *v29++;
      int8x16_t v45 = vqmovn_high_s16(vqmovn_s16(v42), v44);
      int16x8_t v46 = *v30++;
      int16x8_t v47 = v46;
      int16x8_t v48 = *v32++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v47), v48);
      int16x8_t v50 = *v31++;
      int16x8_t v51 = v50;
      int16x8_t v52 = *v33++;
      int8x16_t v53 = veorq_s8(v49, v38);
      int8x16_t v54 = vzip1q_s8(v39, v53);
      int8x16_t v55 = vzip2q_s8(v39, v53);
      int8x16_t v56 = veorq_s8(v45, v38);
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v51), v52), v38);
      int8x16_t v58 = vzip1q_s8(v56, v57);
      vst2_s8(v43, (int8x8x2_t)v54);
      int8x16_t v59 = vzip2q_s8(v56, v57);
      v36[-1] = vzip2q_s8(v54, v58);
      vst2_s8(v40, (int8x8x2_t)v55);
      v40 += a3;
      v36[1] = vzip2q_s8(v55, v59);
      --v37;
      int8x16_t v36 = (int8x16_t *)v40;
    }
    while (v37 > 1);
  }
  return result;
}

int8x16_t *from_444_to_y408<8,4,(AlphaOutputMethod)2,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 4) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 4;
  }
  if (!v4)
  {
    int16x8_t v29 = a2 + 4;
    int16x8_t v30 = a2 + 16;
    int16x8_t v31 = a2 + 20;
    int16x8_t v32 = a2 + 32;
    int16x8_t v33 = a2 + 36;
    int v35 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 4;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = -1;
  v7.i64[1] = -1;
  int8x16_t v8 = (char *)result;
  do
  {
    int8x16_t v9 = a2 + 1;
    int8x16_t v10 = (int8x16_t *)((char *)result + 4 * a3);
    int8x16_t v11 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[32]), v6);
    int8x16_t v12 = vzip1q_s8(v7, v11);
    int8x16_t v13 = vzip2q_s8(v7, v11);
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v6);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[20]), a2[36]), v6);
    int8x16_t v16 = vzip1q_s8(v14, v15);
    int8x16_t v17 = vzip2q_s8(v14, v15);
    vst2_s8(v8, (int8x8x2_t)v12);
    v8 += a3;
    result[1] = vzip2q_s8(v12, v16);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v13);
    result[3] = vzip2q_s8(v13, v17);
    int8x8_t result = (int8x16_t *)v8;
    int8x16_t v19 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[40]), v6);
    int8x16_t v20 = vzip1q_s8(v7, v19);
    int8x16_t v21 = vzip2q_s8(v7, v19);
    int8x16_t v22 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v6);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[28]), a2[44]), v6);
    int8x16_t v24 = vzip1q_s8(v22, v23);
    int8x16_t v25 = vzip2q_s8(v22, v23);
    int8x16_t v26 = (char *)v10;
    vst2_s8(v26, (int8x8x2_t)v20);
    v26 += 16;
    *(int8x16_t *)int8x16_t v26 = vzip2q_s8(v20, v24);
    int8x16_t v27 = v10[2].i8;
    vst2_s8(v27, (int8x8x2_t)v21);
    v10[3] = vzip2q_s8(v21, v25);
    int v28 = v5 - 1;
    LODWORD(v10) = v5 - 8;
    --v5;
    ++a2;
  }
  while ((int)v10 > 1);
  int16x8_t v29 = v9 + 4;
  int16x8_t v30 = v9 + 16;
  int16x8_t v31 = v9 + 20;
  int16x8_t v32 = v9 + 32;
  int16x8_t v33 = v9 + 36;
  if (a4 <= 4) {
    int v34 = 4;
  }
  else {
    int v34 = a4;
  }
  int v35 = v28 - v34;
  a2 = v9;
  if (v35 >= 1)
  {
LABEL_13:
    int8x16_t v36 = result + 2;
    unsigned int v37 = v35 + 1;
    v38.i64[0] = 0x8080808080808080;
    v38.i64[1] = 0x8080808080808080;
    v39.i64[0] = -1;
    v39.i64[1] = -1;
    int8x16_t v40 = result[2].i8;
    do
    {
      int16x8_t v41 = *a2++;
      int16x8_t v42 = v41;
      int8x16_t v43 = v36[-2].i8;
      int16x8_t v44 = *v29++;
      int8x16_t v45 = vqmovn_high_s16(vqmovn_s16(v42), v44);
      int16x8_t v46 = *v30++;
      int16x8_t v47 = v46;
      int16x8_t v48 = *v32++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v47), v48);
      int16x8_t v50 = *v31++;
      int16x8_t v51 = v50;
      int16x8_t v52 = *v33++;
      int8x16_t v53 = veorq_s8(v49, v38);
      int8x16_t v54 = vzip1q_s8(v39, v53);
      int8x16_t v55 = vzip2q_s8(v39, v53);
      int8x16_t v56 = veorq_s8(v45, v38);
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v51), v52), v38);
      int8x16_t v58 = vzip1q_s8(v56, v57);
      vst2_s8(v43, (int8x8x2_t)v54);
      int8x16_t v59 = vzip2q_s8(v56, v57);
      v36[-1] = vzip2q_s8(v54, v58);
      vst2_s8(v40, (int8x8x2_t)v55);
      v40 += a3;
      v36[1] = vzip2q_s8(v55, v59);
      --v37;
      int8x16_t v36 = (int8x16_t *)v40;
    }
    while (v37 > 1);
  }
  return result;
}

void from_444_to_y408<4,8,(AlphaOutputMethod)2,false>(char *a1, int16x8_t *a2, int a3, int a4)
{
  uint64_t v4 = a3;
  uint64_t v5 = 8 * a3;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (v6 < 2)
  {
    int16x8_t v32 = (int8x8_t *)&a2[4];
    int16x8_t v33 = a2 + 8;
    int v34 = (int8x8_t *)&a2[12];
    int v35 = a2 + 16;
    int8x16_t v36 = a2 + 20;
    unsigned int v37 = a2 + 24;
    int8x16_t v38 = a2 + 28;
    int8x16_t v39 = (int8x8_t *)&a2[32];
    int8x16_t v40 = (int8x8_t *)&a2[36];
    int16x8_t v41 = (int8x8_t *)&a2[40];
    int16x8_t v42 = (int8x8_t *)&a2[44];
    int8x16_t v45 = &a1[v5];
    int v44 = a4 - v6;
    if (!a4) {
      return;
    }
  }
  else
  {
    int v7 = a4 + 8;
    v9.i64[0] = 0x8080808080808080;
    v9.i64[1] = 0x8080808080808080;
    v10.i64[0] = -1;
    v10.i64[1] = -1;
    do
    {
      int8x16_t v11 = a2 + 1;
      int8x16_t v12 = &a1[v5];
      int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[32]), v9);
      int8x16_t v14 = vzip1q_s8(v10, v13);
      int8x16_t v15 = vzip2q_s8(v10, v13);
      int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v9);
      int8x16_t v17 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[20]), a2[36]), v9);
      int8x16_t v18 = vzip1q_s8(v16, v17);
      int8x16_t v19 = vzip2q_s8(v16, v17);
      int8x16_t v20 = a1;
      vst2_s8(v20, (int8x8x2_t)v14);
      uint64_t v8 = 9 * a3;
      int8x16_t v21 = (int8x16_t *)&v20[v8];
      int8x16_t v22 = a1 + 16;
      vst2_s8(v22, (int8x8x2_t)v15);
      int8x16_t v23 = (int8x16_t *)&a1[a3];
      *int8x16_t v23 = vzip2q_s8(v14, v18);
      v23[1] = vzip2q_s8(v15, v19);
      a1 += 2 * a3;
      int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[40]), v9);
      int8x16_t v25 = vzip1q_s8(v10, v24);
      int8x16_t v26 = vzip2q_s8(v10, v24);
      int8x16_t v27 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v9);
      int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[28]), a2[44]), v9);
      int8x16_t v29 = vzip1q_s8(v27, v28);
      vst2_s8(v12, (int8x8x2_t)v25);
      v12 += 16;
      int8x16_t v30 = vzip2q_s8(v27, v28);
      vst2_s8(v12, (int8x8x2_t)v26);
      *int8x16_t v21 = vzip2q_s8(v25, v29);
      v21[1] = vzip2q_s8(v26, v30);
      int v31 = v7 - 2;
      LODWORD(v12) = v7 - 16;
      v7 -= 2;
      ++a2;
    }
    while (v12 > 3);
    int16x8_t v32 = (int8x8_t *)&v11[4];
    int16x8_t v33 = v11 + 8;
    int v34 = (int8x8_t *)&v11[12];
    int v35 = v11 + 16;
    int8x16_t v36 = v11 + 20;
    unsigned int v37 = v11 + 24;
    int8x16_t v38 = v11 + 28;
    int8x16_t v39 = (int8x8_t *)&v11[32];
    int8x16_t v40 = (int8x8_t *)&v11[36];
    int16x8_t v41 = (int8x8_t *)&v11[40];
    int16x8_t v42 = (int8x8_t *)&v11[44];
    if (a4 <= 8) {
      int v43 = 8;
    }
    else {
      int v43 = a4;
    }
    int v44 = v31 - v43;
    int v6 = v31 - 16;
    int8x16_t v45 = &a1[v5];
    a2 = v11;
    if (!(v44 + v6)) {
      return;
    }
  }
  if (v6 >= 1)
  {
    v46.i64[0] = 0x8080808080808080;
    v46.i64[1] = 0x8080808080808080;
    v47.i64[0] = -1;
    v47.i64[1] = -1;
    v69.val[0] = (int8x8_t)vzip2q_s8(v47, veorq_s8(vqmovn_high_s16(*v41, *(int16x8_t *)v41->i8), v46)).u64[0];
    v69.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v34, *(int16x8_t *)v34->i8), v46), veorq_s8(vqmovn_high_s16(*v42, *(int16x8_t *)v42->i8), v46)).u64[0];
    v67.val[0] = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v37), (int8x8_t)0x8080808080808080));
    v67.val[1] = vzip1_s8(veor_s8(vqmovn_s16(*v33), (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v38), (int8x8_t)0x8080808080808080));
    vst2_s8(v45, v67);
    int16x8_t v48 = v45 + 16;
    vst2_s8(v48, v69);
  }
  if (v44 > 1)
  {
    unint64_t v49 = 0;
    v51.i64[0] = 0x8080808080808080;
    v51.i64[1] = 0x8080808080808080;
    v52.i64[0] = -1;
    v52.i64[1] = -1;
    int8x16_t v53 = a1;
    do
    {
      unsigned int v54 = v44;
      int8x16_t v55 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v35[v49 / 0x10]), *(int16x8_t *)v39[v49 / 8].i8), v51);
      int8x16_t v56 = vzip1q_s8(v52, v55);
      int8x16_t v57 = vzip2q_s8(v52, v55);
      int8x16_t v58 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v49 / 0x10]), *(int16x8_t *)v32[v49 / 8].i8), v51);
      int8x16_t v59 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v36[v49 / 0x10]), *(int16x8_t *)v40[v49 / 8].i8), v51);
      int8x16_t v60 = vzip1q_s8(v58, v59);
      int8x16_t v61 = vzip2q_s8(v58, v59);
      vst2_s8(v53, (int8x8x2_t)v56);
      uint64_t v50 = 2 * v4;
      v53 += v50;
      int8x16_t v62 = a1 + 16;
      vst2_s8(v62, (int8x8x2_t)v57);
      int8x16_t v63 = (int8x16_t *)&a1[v4];
      *int8x16_t v63 = vzip2q_s8(v56, v60);
      v63[1] = vzip2q_s8(v57, v61);
      a1 = v53;
      int v44 = v54 - 2;
      v49 += 16;
    }
    while (v54 > 3);
    a2 = (int16x8_t *)((char *)a2 + v49);
    int16x8_t v32 = (int8x8_t *)((char *)v32 + v49);
    int v35 = (int16x8_t *)((char *)v35 + v49);
    int8x16_t v36 = (int16x8_t *)((char *)v36 + v49);
    int8x16_t v39 = (int8x8_t *)((char *)v39 + v49);
    int8x16_t v40 = (int8x8_t *)((char *)v40 + v49);
  }
  if (v44 == 1)
  {
    v64.i64[0] = 0x8080808080808080;
    v64.i64[1] = 0x8080808080808080;
    v65.i64[0] = -1;
    v65.i64[1] = -1;
    v70.val[0] = (int8x8_t)vzip2q_s8(v65, veorq_s8(vqmovn_high_s16(*v39, *(int16x8_t *)v39->i8), v64)).u64[0];
    v70.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v32, *(int16x8_t *)v32->i8), v64), veorq_s8(vqmovn_high_s16(*v40, *(int16x8_t *)v40->i8), v64)).u64[0];
    v68.val[0] = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v35), (int8x8_t)0x8080808080808080));
    v68.val[1] = vzip1_s8(veor_s8(vqmovn_s16(*a2), (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v36), (int8x8_t)0x8080808080808080));
    vst2_s8(a1, v68);
    int8x16_t v66 = a1 + 16;
    vst2_s8(v66, v70);
  }
}

void from_444_to_y408<4,8,(AlphaOutputMethod)2,true>(char *a1, int16x8_t *a2, int a3, int a4)
{
  uint64_t v4 = a3;
  uint64_t v5 = 8 * a3;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (v6 < 2)
  {
    int16x8_t v32 = (int8x8_t *)&a2[4];
    int16x8_t v33 = a2 + 8;
    int v34 = (int8x8_t *)&a2[12];
    int v35 = a2 + 16;
    int8x16_t v36 = a2 + 20;
    unsigned int v37 = a2 + 24;
    int8x16_t v38 = a2 + 28;
    int8x16_t v39 = (int8x8_t *)&a2[32];
    int8x16_t v40 = (int8x8_t *)&a2[36];
    int16x8_t v41 = (int8x8_t *)&a2[40];
    int16x8_t v42 = (int8x8_t *)&a2[44];
    int8x16_t v45 = &a1[v5];
    int v44 = a4 - v6;
    if (!a4) {
      return;
    }
  }
  else
  {
    int v7 = a4 + 8;
    v9.i64[0] = 0x8080808080808080;
    v9.i64[1] = 0x8080808080808080;
    v10.i64[0] = -1;
    v10.i64[1] = -1;
    do
    {
      int8x16_t v11 = a2 + 1;
      int8x16_t v12 = &a1[v5];
      int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[32]), v9);
      int8x16_t v14 = vzip1q_s8(v10, v13);
      int8x16_t v15 = vzip2q_s8(v10, v13);
      int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v9);
      int8x16_t v17 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[20]), a2[36]), v9);
      int8x16_t v18 = vzip1q_s8(v16, v17);
      int8x16_t v19 = vzip2q_s8(v16, v17);
      int8x16_t v20 = a1;
      vst2_s8(v20, (int8x8x2_t)v14);
      uint64_t v8 = 9 * a3;
      int8x16_t v21 = (int8x16_t *)&v20[v8];
      int8x16_t v22 = a1 + 16;
      vst2_s8(v22, (int8x8x2_t)v15);
      int8x16_t v23 = (int8x16_t *)&a1[a3];
      *int8x16_t v23 = vzip2q_s8(v14, v18);
      v23[1] = vzip2q_s8(v15, v19);
      a1 += 2 * a3;
      int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[40]), v9);
      int8x16_t v25 = vzip1q_s8(v10, v24);
      int8x16_t v26 = vzip2q_s8(v10, v24);
      int8x16_t v27 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v9);
      int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[28]), a2[44]), v9);
      int8x16_t v29 = vzip1q_s8(v27, v28);
      vst2_s8(v12, (int8x8x2_t)v25);
      v12 += 16;
      int8x16_t v30 = vzip2q_s8(v27, v28);
      vst2_s8(v12, (int8x8x2_t)v26);
      *int8x16_t v21 = vzip2q_s8(v25, v29);
      v21[1] = vzip2q_s8(v26, v30);
      int v31 = v7 - 2;
      LODWORD(v12) = v7 - 16;
      v7 -= 2;
      ++a2;
    }
    while (v12 > 3);
    int16x8_t v32 = (int8x8_t *)&v11[4];
    int16x8_t v33 = v11 + 8;
    int v34 = (int8x8_t *)&v11[12];
    int v35 = v11 + 16;
    int8x16_t v36 = v11 + 20;
    unsigned int v37 = v11 + 24;
    int8x16_t v38 = v11 + 28;
    int8x16_t v39 = (int8x8_t *)&v11[32];
    int8x16_t v40 = (int8x8_t *)&v11[36];
    int16x8_t v41 = (int8x8_t *)&v11[40];
    int16x8_t v42 = (int8x8_t *)&v11[44];
    if (a4 <= 8) {
      int v43 = 8;
    }
    else {
      int v43 = a4;
    }
    int v44 = v31 - v43;
    int v6 = v31 - 16;
    int8x16_t v45 = &a1[v5];
    a2 = v11;
    if (!(v44 + v6)) {
      return;
    }
  }
  if (v6 >= 1)
  {
    v46.i64[0] = 0x8080808080808080;
    v46.i64[1] = 0x8080808080808080;
    v47.i64[0] = -1;
    v47.i64[1] = -1;
    v69.val[0] = (int8x8_t)vzip2q_s8(v47, veorq_s8(vqmovn_high_s16(*v41, *(int16x8_t *)v41->i8), v46)).u64[0];
    v69.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v34, *(int16x8_t *)v34->i8), v46), veorq_s8(vqmovn_high_s16(*v42, *(int16x8_t *)v42->i8), v46)).u64[0];
    v67.val[0] = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v37), (int8x8_t)0x8080808080808080));
    v67.val[1] = vzip1_s8(veor_s8(vqmovn_s16(*v33), (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v38), (int8x8_t)0x8080808080808080));
    vst2_s8(v45, v67);
    int16x8_t v48 = v45 + 16;
    vst2_s8(v48, v69);
  }
  if (v44 > 1)
  {
    unint64_t v49 = 0;
    v51.i64[0] = 0x8080808080808080;
    v51.i64[1] = 0x8080808080808080;
    v52.i64[0] = -1;
    v52.i64[1] = -1;
    int8x16_t v53 = a1;
    do
    {
      unsigned int v54 = v44;
      int8x16_t v55 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v35[v49 / 0x10]), *(int16x8_t *)v39[v49 / 8].i8), v51);
      int8x16_t v56 = vzip1q_s8(v52, v55);
      int8x16_t v57 = vzip2q_s8(v52, v55);
      int8x16_t v58 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v49 / 0x10]), *(int16x8_t *)v32[v49 / 8].i8), v51);
      int8x16_t v59 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v36[v49 / 0x10]), *(int16x8_t *)v40[v49 / 8].i8), v51);
      int8x16_t v60 = vzip1q_s8(v58, v59);
      int8x16_t v61 = vzip2q_s8(v58, v59);
      vst2_s8(v53, (int8x8x2_t)v56);
      uint64_t v50 = 2 * v4;
      v53 += v50;
      int8x16_t v62 = a1 + 16;
      vst2_s8(v62, (int8x8x2_t)v57);
      int8x16_t v63 = (int8x16_t *)&a1[v4];
      *int8x16_t v63 = vzip2q_s8(v56, v60);
      v63[1] = vzip2q_s8(v57, v61);
      a1 = v53;
      int v44 = v54 - 2;
      v49 += 16;
    }
    while (v54 > 3);
    a2 = (int16x8_t *)((char *)a2 + v49);
    int16x8_t v32 = (int8x8_t *)((char *)v32 + v49);
    int v35 = (int16x8_t *)((char *)v35 + v49);
    int8x16_t v36 = (int16x8_t *)((char *)v36 + v49);
    int8x16_t v39 = (int8x8_t *)((char *)v39 + v49);
    int8x16_t v40 = (int8x8_t *)((char *)v40 + v49);
  }
  if (v44 == 1)
  {
    v64.i64[0] = 0x8080808080808080;
    v64.i64[1] = 0x8080808080808080;
    v65.i64[0] = -1;
    v65.i64[1] = -1;
    v70.val[0] = (int8x8_t)vzip2q_s8(v65, veorq_s8(vqmovn_high_s16(*v39, *(int16x8_t *)v39->i8), v64)).u64[0];
    v70.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v32, *(int16x8_t *)v32->i8), v64), veorq_s8(vqmovn_high_s16(*v40, *(int16x8_t *)v40->i8), v64)).u64[0];
    v68.val[0] = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v35), (int8x8_t)0x8080808080808080));
    v68.val[1] = vzip1_s8(veor_s8(vqmovn_s16(*a2), (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v36), (int8x8_t)0x8080808080808080));
    vst2_s8(a1, v68);
    int8x16_t v66 = a1 + 16;
    vst2_s8(v66, v70);
  }
}

void from_444_to_y408<4,4,(AlphaOutputMethod)2,false>(char *a1, int16x8_t *a2, int a3, int a4)
{
  uint64_t v4 = a3;
  uint64_t v5 = 4 * a3;
  if (a4 <= 4) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 4;
  }
  if (v6 < 2)
  {
    int16x8_t v32 = (int8x8_t *)&a2[2];
    int16x8_t v33 = a2 + 4;
    int v34 = (int8x8_t *)&a2[6];
    int v35 = a2 + 8;
    int8x16_t v36 = a2 + 10;
    unsigned int v37 = a2 + 12;
    int8x16_t v38 = a2 + 14;
    int8x16_t v39 = (int8x8_t *)&a2[16];
    int8x16_t v40 = (int8x8_t *)&a2[18];
    int16x8_t v41 = (int8x8_t *)&a2[20];
    int16x8_t v42 = (int8x8_t *)&a2[22];
    int8x16_t v45 = &a1[v5];
    int v44 = a4 - v6;
    if (!a4) {
      return;
    }
  }
  else
  {
    int v7 = a4 + 4;
    v9.i64[0] = 0x8080808080808080;
    v9.i64[1] = 0x8080808080808080;
    v10.i64[0] = -1;
    v10.i64[1] = -1;
    do
    {
      int8x16_t v11 = a2 + 1;
      int8x16_t v12 = &a1[v5];
      int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[16]), v9);
      int8x16_t v14 = vzip1q_s8(v10, v13);
      int8x16_t v15 = vzip2q_s8(v10, v13);
      int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[2]), v9);
      int8x16_t v17 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[10]), a2[18]), v9);
      int8x16_t v18 = vzip1q_s8(v16, v17);
      int8x16_t v19 = vzip2q_s8(v16, v17);
      int8x16_t v20 = a1;
      vst2_s8(v20, (int8x8x2_t)v14);
      uint64_t v8 = 5 * a3;
      int8x16_t v21 = (int8x16_t *)&v20[v8];
      int8x16_t v22 = a1 + 16;
      vst2_s8(v22, (int8x8x2_t)v15);
      int8x16_t v23 = (int8x16_t *)&a1[a3];
      *int8x16_t v23 = vzip2q_s8(v14, v18);
      v23[1] = vzip2q_s8(v15, v19);
      a1 += 2 * a3;
      int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[12]), a2[20]), v9);
      int8x16_t v25 = vzip1q_s8(v10, v24);
      int8x16_t v26 = vzip2q_s8(v10, v24);
      int8x16_t v27 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[6]), v9);
      int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[14]), a2[22]), v9);
      int8x16_t v29 = vzip1q_s8(v27, v28);
      vst2_s8(v12, (int8x8x2_t)v25);
      v12 += 16;
      int8x16_t v30 = vzip2q_s8(v27, v28);
      vst2_s8(v12, (int8x8x2_t)v26);
      *int8x16_t v21 = vzip2q_s8(v25, v29);
      v21[1] = vzip2q_s8(v26, v30);
      int v31 = v7 - 2;
      LODWORD(v12) = v7 - 8;
      v7 -= 2;
      ++a2;
    }
    while (v12 > 3);
    int16x8_t v32 = (int8x8_t *)&v11[2];
    int16x8_t v33 = v11 + 4;
    int v34 = (int8x8_t *)&v11[6];
    int v35 = v11 + 8;
    int8x16_t v36 = v11 + 10;
    unsigned int v37 = v11 + 12;
    int8x16_t v38 = v11 + 14;
    int8x16_t v39 = (int8x8_t *)&v11[16];
    int8x16_t v40 = (int8x8_t *)&v11[18];
    int16x8_t v41 = (int8x8_t *)&v11[20];
    int16x8_t v42 = (int8x8_t *)&v11[22];
    if (a4 <= 4) {
      int v43 = 4;
    }
    else {
      int v43 = a4;
    }
    int v44 = v31 - v43;
    int v6 = v31 - 8;
    int8x16_t v45 = &a1[v5];
    a2 = v11;
    if (!(v44 + v6)) {
      return;
    }
  }
  if (v6 >= 1)
  {
    v46.i64[0] = 0x8080808080808080;
    v46.i64[1] = 0x8080808080808080;
    v47.i64[0] = -1;
    v47.i64[1] = -1;
    v69.val[0] = (int8x8_t)vzip2q_s8(v47, veorq_s8(vqmovn_high_s16(*v41, *(int16x8_t *)v41->i8), v46)).u64[0];
    v69.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v34, *(int16x8_t *)v34->i8), v46), veorq_s8(vqmovn_high_s16(*v42, *(int16x8_t *)v42->i8), v46)).u64[0];
    v67.val[0] = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v37), (int8x8_t)0x8080808080808080));
    v67.val[1] = vzip1_s8(veor_s8(vqmovn_s16(*v33), (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v38), (int8x8_t)0x8080808080808080));
    vst2_s8(v45, v67);
    int16x8_t v48 = v45 + 16;
    vst2_s8(v48, v69);
  }
  if (v44 > 1)
  {
    unint64_t v49 = 0;
    v51.i64[0] = 0x8080808080808080;
    v51.i64[1] = 0x8080808080808080;
    v52.i64[0] = -1;
    v52.i64[1] = -1;
    int8x16_t v53 = a1;
    do
    {
      unsigned int v54 = v44;
      int8x16_t v55 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v35[v49 / 0x10]), *(int16x8_t *)v39[v49 / 8].i8), v51);
      int8x16_t v56 = vzip1q_s8(v52, v55);
      int8x16_t v57 = vzip2q_s8(v52, v55);
      int8x16_t v58 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v49 / 0x10]), *(int16x8_t *)v32[v49 / 8].i8), v51);
      int8x16_t v59 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v36[v49 / 0x10]), *(int16x8_t *)v40[v49 / 8].i8), v51);
      int8x16_t v60 = vzip1q_s8(v58, v59);
      int8x16_t v61 = vzip2q_s8(v58, v59);
      vst2_s8(v53, (int8x8x2_t)v56);
      uint64_t v50 = 2 * v4;
      v53 += v50;
      int8x16_t v62 = a1 + 16;
      vst2_s8(v62, (int8x8x2_t)v57);
      int8x16_t v63 = (int8x16_t *)&a1[v4];
      *int8x16_t v63 = vzip2q_s8(v56, v60);
      v63[1] = vzip2q_s8(v57, v61);
      a1 = v53;
      int v44 = v54 - 2;
      v49 += 16;
    }
    while (v54 > 3);
    a2 = (int16x8_t *)((char *)a2 + v49);
    int16x8_t v32 = (int8x8_t *)((char *)v32 + v49);
    int v35 = (int16x8_t *)((char *)v35 + v49);
    int8x16_t v36 = (int16x8_t *)((char *)v36 + v49);
    int8x16_t v39 = (int8x8_t *)((char *)v39 + v49);
    int8x16_t v40 = (int8x8_t *)((char *)v40 + v49);
  }
  if (v44 == 1)
  {
    v64.i64[0] = 0x8080808080808080;
    v64.i64[1] = 0x8080808080808080;
    v65.i64[0] = -1;
    v65.i64[1] = -1;
    v70.val[0] = (int8x8_t)vzip2q_s8(v65, veorq_s8(vqmovn_high_s16(*v39, *(int16x8_t *)v39->i8), v64)).u64[0];
    v70.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v32, *(int16x8_t *)v32->i8), v64), veorq_s8(vqmovn_high_s16(*v40, *(int16x8_t *)v40->i8), v64)).u64[0];
    v68.val[0] = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v35), (int8x8_t)0x8080808080808080));
    v68.val[1] = vzip1_s8(veor_s8(vqmovn_s16(*a2), (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v36), (int8x8_t)0x8080808080808080));
    vst2_s8(a1, v68);
    int8x16_t v66 = a1 + 16;
    vst2_s8(v66, v70);
  }
}

void from_444_to_y408<4,4,(AlphaOutputMethod)2,true>(char *a1, int16x8_t *a2, int a3, int a4)
{
  uint64_t v4 = a3;
  uint64_t v5 = 4 * a3;
  if (a4 <= 4) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 4;
  }
  if (v6 < 2)
  {
    int16x8_t v32 = (int8x8_t *)&a2[2];
    int16x8_t v33 = a2 + 4;
    int v34 = (int8x8_t *)&a2[6];
    int v35 = a2 + 8;
    int8x16_t v36 = a2 + 10;
    unsigned int v37 = a2 + 12;
    int8x16_t v38 = a2 + 14;
    int8x16_t v39 = (int8x8_t *)&a2[16];
    int8x16_t v40 = (int8x8_t *)&a2[18];
    int16x8_t v41 = (int8x8_t *)&a2[20];
    int16x8_t v42 = (int8x8_t *)&a2[22];
    int8x16_t v45 = &a1[v5];
    int v44 = a4 - v6;
    if (!a4) {
      return;
    }
  }
  else
  {
    int v7 = a4 + 4;
    v9.i64[0] = 0x8080808080808080;
    v9.i64[1] = 0x8080808080808080;
    v10.i64[0] = -1;
    v10.i64[1] = -1;
    do
    {
      int8x16_t v11 = a2 + 1;
      int8x16_t v12 = &a1[v5];
      int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[16]), v9);
      int8x16_t v14 = vzip1q_s8(v10, v13);
      int8x16_t v15 = vzip2q_s8(v10, v13);
      int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[2]), v9);
      int8x16_t v17 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[10]), a2[18]), v9);
      int8x16_t v18 = vzip1q_s8(v16, v17);
      int8x16_t v19 = vzip2q_s8(v16, v17);
      int8x16_t v20 = a1;
      vst2_s8(v20, (int8x8x2_t)v14);
      uint64_t v8 = 5 * a3;
      int8x16_t v21 = (int8x16_t *)&v20[v8];
      int8x16_t v22 = a1 + 16;
      vst2_s8(v22, (int8x8x2_t)v15);
      int8x16_t v23 = (int8x16_t *)&a1[a3];
      *int8x16_t v23 = vzip2q_s8(v14, v18);
      v23[1] = vzip2q_s8(v15, v19);
      a1 += 2 * a3;
      int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[12]), a2[20]), v9);
      int8x16_t v25 = vzip1q_s8(v10, v24);
      int8x16_t v26 = vzip2q_s8(v10, v24);
      int8x16_t v27 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[6]), v9);
      int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[14]), a2[22]), v9);
      int8x16_t v29 = vzip1q_s8(v27, v28);
      vst2_s8(v12, (int8x8x2_t)v25);
      v12 += 16;
      int8x16_t v30 = vzip2q_s8(v27, v28);
      vst2_s8(v12, (int8x8x2_t)v26);
      *int8x16_t v21 = vzip2q_s8(v25, v29);
      v21[1] = vzip2q_s8(v26, v30);
      int v31 = v7 - 2;
      LODWORD(v12) = v7 - 8;
      v7 -= 2;
      ++a2;
    }
    while (v12 > 3);
    int16x8_t v32 = (int8x8_t *)&v11[2];
    int16x8_t v33 = v11 + 4;
    int v34 = (int8x8_t *)&v11[6];
    int v35 = v11 + 8;
    int8x16_t v36 = v11 + 10;
    unsigned int v37 = v11 + 12;
    int8x16_t v38 = v11 + 14;
    int8x16_t v39 = (int8x8_t *)&v11[16];
    int8x16_t v40 = (int8x8_t *)&v11[18];
    int16x8_t v41 = (int8x8_t *)&v11[20];
    int16x8_t v42 = (int8x8_t *)&v11[22];
    if (a4 <= 4) {
      int v43 = 4;
    }
    else {
      int v43 = a4;
    }
    int v44 = v31 - v43;
    int v6 = v31 - 8;
    int8x16_t v45 = &a1[v5];
    a2 = v11;
    if (!(v44 + v6)) {
      return;
    }
  }
  if (v6 >= 1)
  {
    v46.i64[0] = 0x8080808080808080;
    v46.i64[1] = 0x8080808080808080;
    v47.i64[0] = -1;
    v47.i64[1] = -1;
    v69.val[0] = (int8x8_t)vzip2q_s8(v47, veorq_s8(vqmovn_high_s16(*v41, *(int16x8_t *)v41->i8), v46)).u64[0];
    v69.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v34, *(int16x8_t *)v34->i8), v46), veorq_s8(vqmovn_high_s16(*v42, *(int16x8_t *)v42->i8), v46)).u64[0];
    v67.val[0] = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v37), (int8x8_t)0x8080808080808080));
    v67.val[1] = vzip1_s8(veor_s8(vqmovn_s16(*v33), (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v38), (int8x8_t)0x8080808080808080));
    vst2_s8(v45, v67);
    int16x8_t v48 = v45 + 16;
    vst2_s8(v48, v69);
  }
  if (v44 > 1)
  {
    unint64_t v49 = 0;
    v51.i64[0] = 0x8080808080808080;
    v51.i64[1] = 0x8080808080808080;
    v52.i64[0] = -1;
    v52.i64[1] = -1;
    int8x16_t v53 = a1;
    do
    {
      unsigned int v54 = v44;
      int8x16_t v55 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v35[v49 / 0x10]), *(int16x8_t *)v39[v49 / 8].i8), v51);
      int8x16_t v56 = vzip1q_s8(v52, v55);
      int8x16_t v57 = vzip2q_s8(v52, v55);
      int8x16_t v58 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v49 / 0x10]), *(int16x8_t *)v32[v49 / 8].i8), v51);
      int8x16_t v59 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v36[v49 / 0x10]), *(int16x8_t *)v40[v49 / 8].i8), v51);
      int8x16_t v60 = vzip1q_s8(v58, v59);
      int8x16_t v61 = vzip2q_s8(v58, v59);
      vst2_s8(v53, (int8x8x2_t)v56);
      uint64_t v50 = 2 * v4;
      v53 += v50;
      int8x16_t v62 = a1 + 16;
      vst2_s8(v62, (int8x8x2_t)v57);
      int8x16_t v63 = (int8x16_t *)&a1[v4];
      *int8x16_t v63 = vzip2q_s8(v56, v60);
      v63[1] = vzip2q_s8(v57, v61);
      a1 = v53;
      int v44 = v54 - 2;
      v49 += 16;
    }
    while (v54 > 3);
    a2 = (int16x8_t *)((char *)a2 + v49);
    int16x8_t v32 = (int8x8_t *)((char *)v32 + v49);
    int v35 = (int16x8_t *)((char *)v35 + v49);
    int8x16_t v36 = (int16x8_t *)((char *)v36 + v49);
    int8x16_t v39 = (int8x8_t *)((char *)v39 + v49);
    int8x16_t v40 = (int8x8_t *)((char *)v40 + v49);
  }
  if (v44 == 1)
  {
    v64.i64[0] = 0x8080808080808080;
    v64.i64[1] = 0x8080808080808080;
    v65.i64[0] = -1;
    v65.i64[1] = -1;
    v70.val[0] = (int8x8_t)vzip2q_s8(v65, veorq_s8(vqmovn_high_s16(*v39, *(int16x8_t *)v39->i8), v64)).u64[0];
    v70.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v32, *(int16x8_t *)v32->i8), v64), veorq_s8(vqmovn_high_s16(*v40, *(int16x8_t *)v40->i8), v64)).u64[0];
    v68.val[0] = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v35), (int8x8_t)0x8080808080808080));
    v68.val[1] = vzip1_s8(veor_s8(vqmovn_s16(*a2), (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v36), (int8x8_t)0x8080808080808080));
    vst2_s8(a1, v68);
    int8x16_t v66 = a1 + 16;
    vst2_s8(v66, v70);
  }
}

void from_444_to_y408<4,2,(AlphaOutputMethod)2,false>(char *a1, int16x8_t *a2, int a3, int a4)
{
  uint64_t v4 = a3;
  uint64_t v5 = 2 * a3;
  if (a4 <= 2) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 2;
  }
  if (v6 < 2)
  {
    int16x8_t v32 = (int8x8_t *)&a2[1];
    int16x8_t v33 = a2 + 2;
    int v34 = (int8x8_t *)&a2[3];
    int v35 = a2 + 4;
    int8x16_t v36 = a2 + 5;
    unsigned int v37 = a2 + 6;
    int8x16_t v38 = a2 + 7;
    int8x16_t v39 = (int8x8_t *)&a2[8];
    int8x16_t v40 = (int8x8_t *)&a2[9];
    int16x8_t v41 = (int8x8_t *)&a2[10];
    int16x8_t v42 = (int8x8_t *)&a2[11];
    int8x16_t v45 = &a1[v5];
    int v44 = a4 - v6;
    if (!a4) {
      return;
    }
  }
  else
  {
    v8.i64[0] = 0x8080808080808080;
    v8.i64[1] = 0x8080808080808080;
    v9.i64[0] = -1;
    v9.i64[1] = -1;
    unsigned int v10 = a4;
    int8x16_t v11 = a2;
    do
    {
      int16x8_t v12 = v11[1];
      ++v11;
      int8x16_t v13 = a1;
      int8x16_t v14 = a1 + 16;
      int8x16_t v15 = (int8x16_t *)&a1[a3];
      a1 += v5;
      int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[8]), v8);
      int8x16_t v17 = vzip1q_s8(v9, v16);
      int8x16_t v18 = vzip2q_s8(v9, v16);
      int8x16_t v19 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), v12), v8);
      int8x16_t v20 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[5]), a2[9]), v8);
      int8x16_t v21 = vzip1q_s8(v19, v20);
      int8x16_t v22 = vzip2q_s8(v19, v20);
      vst2_s8(v13, (int8x8x2_t)v17);
      uint64_t v7 = 3 * a3;
      int8x16_t v23 = (int8x16_t *)&v13[v7];
      vst2_s8(v14, (int8x8x2_t)v18);
      *int8x16_t v15 = vzip2q_s8(v17, v21);
      v15[1] = vzip2q_s8(v18, v22);
      int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[10]), v8);
      int8x16_t v25 = vzip1q_s8(v9, v24);
      int8x16_t v26 = vzip2q_s8(v9, v24);
      int8x16_t v27 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[2]), a2[3]), v8);
      int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[7]), a2[11]), v8);
      int8x16_t v29 = vzip1q_s8(v27, v28);
      int8x16_t v30 = vzip2q_s8(v27, v28);
      int v31 = a1;
      vst2_s8(v31, (int8x8x2_t)v25);
      v31 += 16;
      vst2_s8(v31, (int8x8x2_t)v26);
      *int8x16_t v23 = vzip2q_s8(v25, v29);
      v23[1] = vzip2q_s8(v26, v30);
      v10 -= 2;
      a2 = v11;
    }
    while (v10 > 3);
    int16x8_t v32 = (int8x8_t *)&v11[1];
    int16x8_t v33 = v11 + 2;
    int v34 = (int8x8_t *)&v11[3];
    int v35 = v11 + 4;
    int8x16_t v36 = v11 + 5;
    unsigned int v37 = v11 + 6;
    int8x16_t v38 = v11 + 7;
    int8x16_t v39 = (int8x8_t *)&v11[8];
    int8x16_t v40 = (int8x8_t *)&v11[9];
    int16x8_t v41 = (int8x8_t *)&v11[10];
    int16x8_t v42 = (int8x8_t *)&v11[11];
    if (a4 <= 2) {
      int v43 = 2;
    }
    else {
      int v43 = a4;
    }
    int v44 = v10 - v43 + 2;
    int v6 = v10 - 2;
    int8x16_t v45 = &a1[v5];
    a2 = v11;
    if (!(v44 + v6)) {
      return;
    }
  }
  if (v6 >= 1)
  {
    v46.i64[0] = 0x8080808080808080;
    v46.i64[1] = 0x8080808080808080;
    v47.i64[0] = -1;
    v47.i64[1] = -1;
    v68.val[0] = (int8x8_t)vzip2q_s8(v47, veorq_s8(vqmovn_high_s16(*v41, *(int16x8_t *)v41->i8), v46)).u64[0];
    v68.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v34, *(int16x8_t *)v34->i8), v46), veorq_s8(vqmovn_high_s16(*v42, *(int16x8_t *)v42->i8), v46)).u64[0];
    v66.val[0] = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v37), (int8x8_t)0x8080808080808080));
    v66.val[1] = vzip1_s8(veor_s8(vqmovn_s16(*v33), (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v38), (int8x8_t)0x8080808080808080));
    vst2_s8(v45, v66);
    int16x8_t v48 = v45 + 16;
    vst2_s8(v48, v68);
  }
  if (v44 > 1)
  {
    unint64_t v49 = 0;
    v50.i64[0] = 0x8080808080808080;
    v50.i64[1] = 0x8080808080808080;
    v51.i64[0] = -1;
    v51.i64[1] = -1;
    int8x16_t v52 = a1;
    do
    {
      unsigned int v53 = v44;
      int8x16_t v54 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v35[v49 / 0x10]), *(int16x8_t *)v39[v49 / 8].i8), v50);
      int8x16_t v55 = vzip1q_s8(v51, v54);
      int8x16_t v56 = vzip2q_s8(v51, v54);
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v49 / 0x10]), *(int16x8_t *)v32[v49 / 8].i8), v50);
      int8x16_t v58 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v36[v49 / 0x10]), *(int16x8_t *)v40[v49 / 8].i8), v50);
      int8x16_t v59 = vzip1q_s8(v57, v58);
      int8x16_t v60 = vzip2q_s8(v57, v58);
      vst2_s8(v52, (int8x8x2_t)v55);
      v52 += v5;
      int8x16_t v61 = a1 + 16;
      vst2_s8(v61, (int8x8x2_t)v56);
      int8x16_t v62 = (int8x16_t *)&a1[v4];
      *int8x16_t v62 = vzip2q_s8(v55, v59);
      v62[1] = vzip2q_s8(v56, v60);
      a1 = v52;
      int v44 = v53 - 2;
      v49 += 16;
    }
    while (v53 > 3);
    a2 = (int16x8_t *)((char *)a2 + v49);
    int16x8_t v32 = (int8x8_t *)((char *)v32 + v49);
    int v35 = (int16x8_t *)((char *)v35 + v49);
    int8x16_t v36 = (int16x8_t *)((char *)v36 + v49);
    int8x16_t v39 = (int8x8_t *)((char *)v39 + v49);
    int8x16_t v40 = (int8x8_t *)((char *)v40 + v49);
  }
  if (v44 == 1)
  {
    v63.i64[0] = 0x8080808080808080;
    v63.i64[1] = 0x8080808080808080;
    v64.i64[0] = -1;
    v64.i64[1] = -1;
    v69.val[0] = (int8x8_t)vzip2q_s8(v64, veorq_s8(vqmovn_high_s16(*v39, *(int16x8_t *)v39->i8), v63)).u64[0];
    v69.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v32, *(int16x8_t *)v32->i8), v63), veorq_s8(vqmovn_high_s16(*v40, *(int16x8_t *)v40->i8), v63)).u64[0];
    v67.val[0] = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v35), (int8x8_t)0x8080808080808080));
    v67.val[1] = vzip1_s8(veor_s8(vqmovn_s16(*a2), (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v36), (int8x8_t)0x8080808080808080));
    vst2_s8(a1, v67);
    int8x16_t v65 = a1 + 16;
    vst2_s8(v65, v69);
  }
}

void from_444_to_y408<4,2,(AlphaOutputMethod)2,true>(char *a1, int16x8_t *a2, int a3, int a4)
{
  uint64_t v4 = a3;
  uint64_t v5 = 2 * a3;
  if (a4 <= 2) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 2;
  }
  if (v6 < 2)
  {
    int16x8_t v32 = (int8x8_t *)&a2[1];
    int16x8_t v33 = a2 + 2;
    int v34 = (int8x8_t *)&a2[3];
    int v35 = a2 + 4;
    int8x16_t v36 = a2 + 5;
    unsigned int v37 = a2 + 6;
    int8x16_t v38 = a2 + 7;
    int8x16_t v39 = (int8x8_t *)&a2[8];
    int8x16_t v40 = (int8x8_t *)&a2[9];
    int16x8_t v41 = (int8x8_t *)&a2[10];
    int16x8_t v42 = (int8x8_t *)&a2[11];
    int8x16_t v45 = &a1[v5];
    int v44 = a4 - v6;
    if (!a4) {
      return;
    }
  }
  else
  {
    v8.i64[0] = 0x8080808080808080;
    v8.i64[1] = 0x8080808080808080;
    v9.i64[0] = -1;
    v9.i64[1] = -1;
    unsigned int v10 = a4;
    int8x16_t v11 = a2;
    do
    {
      int16x8_t v12 = v11[1];
      ++v11;
      int8x16_t v13 = a1;
      int8x16_t v14 = a1 + 16;
      int8x16_t v15 = (int8x16_t *)&a1[a3];
      a1 += v5;
      int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[4]), a2[8]), v8);
      int8x16_t v17 = vzip1q_s8(v9, v16);
      int8x16_t v18 = vzip2q_s8(v9, v16);
      int8x16_t v19 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), v12), v8);
      int8x16_t v20 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[5]), a2[9]), v8);
      int8x16_t v21 = vzip1q_s8(v19, v20);
      int8x16_t v22 = vzip2q_s8(v19, v20);
      vst2_s8(v13, (int8x8x2_t)v17);
      uint64_t v7 = 3 * a3;
      int8x16_t v23 = (int8x16_t *)&v13[v7];
      vst2_s8(v14, (int8x8x2_t)v18);
      *int8x16_t v15 = vzip2q_s8(v17, v21);
      v15[1] = vzip2q_s8(v18, v22);
      int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[6]), a2[10]), v8);
      int8x16_t v25 = vzip1q_s8(v9, v24);
      int8x16_t v26 = vzip2q_s8(v9, v24);
      int8x16_t v27 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[2]), a2[3]), v8);
      int8x16_t v28 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[7]), a2[11]), v8);
      int8x16_t v29 = vzip1q_s8(v27, v28);
      int8x16_t v30 = vzip2q_s8(v27, v28);
      int v31 = a1;
      vst2_s8(v31, (int8x8x2_t)v25);
      v31 += 16;
      vst2_s8(v31, (int8x8x2_t)v26);
      *int8x16_t v23 = vzip2q_s8(v25, v29);
      v23[1] = vzip2q_s8(v26, v30);
      v10 -= 2;
      a2 = v11;
    }
    while (v10 > 3);
    int16x8_t v32 = (int8x8_t *)&v11[1];
    int16x8_t v33 = v11 + 2;
    int v34 = (int8x8_t *)&v11[3];
    int v35 = v11 + 4;
    int8x16_t v36 = v11 + 5;
    unsigned int v37 = v11 + 6;
    int8x16_t v38 = v11 + 7;
    int8x16_t v39 = (int8x8_t *)&v11[8];
    int8x16_t v40 = (int8x8_t *)&v11[9];
    int16x8_t v41 = (int8x8_t *)&v11[10];
    int16x8_t v42 = (int8x8_t *)&v11[11];
    if (a4 <= 2) {
      int v43 = 2;
    }
    else {
      int v43 = a4;
    }
    int v44 = v10 - v43 + 2;
    int v6 = v10 - 2;
    int8x16_t v45 = &a1[v5];
    a2 = v11;
    if (!(v44 + v6)) {
      return;
    }
  }
  if (v6 >= 1)
  {
    v46.i64[0] = 0x8080808080808080;
    v46.i64[1] = 0x8080808080808080;
    v47.i64[0] = -1;
    v47.i64[1] = -1;
    v68.val[0] = (int8x8_t)vzip2q_s8(v47, veorq_s8(vqmovn_high_s16(*v41, *(int16x8_t *)v41->i8), v46)).u64[0];
    v68.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v34, *(int16x8_t *)v34->i8), v46), veorq_s8(vqmovn_high_s16(*v42, *(int16x8_t *)v42->i8), v46)).u64[0];
    v66.val[0] = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v37), (int8x8_t)0x8080808080808080));
    v66.val[1] = vzip1_s8(veor_s8(vqmovn_s16(*v33), (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v38), (int8x8_t)0x8080808080808080));
    vst2_s8(v45, v66);
    int16x8_t v48 = v45 + 16;
    vst2_s8(v48, v68);
  }
  if (v44 > 1)
  {
    unint64_t v49 = 0;
    v50.i64[0] = 0x8080808080808080;
    v50.i64[1] = 0x8080808080808080;
    v51.i64[0] = -1;
    v51.i64[1] = -1;
    int8x16_t v52 = a1;
    do
    {
      unsigned int v53 = v44;
      int8x16_t v54 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v35[v49 / 0x10]), *(int16x8_t *)v39[v49 / 8].i8), v50);
      int8x16_t v55 = vzip1q_s8(v51, v54);
      int8x16_t v56 = vzip2q_s8(v51, v54);
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v49 / 0x10]), *(int16x8_t *)v32[v49 / 8].i8), v50);
      int8x16_t v58 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v36[v49 / 0x10]), *(int16x8_t *)v40[v49 / 8].i8), v50);
      int8x16_t v59 = vzip1q_s8(v57, v58);
      int8x16_t v60 = vzip2q_s8(v57, v58);
      vst2_s8(v52, (int8x8x2_t)v55);
      v52 += v5;
      int8x16_t v61 = a1 + 16;
      vst2_s8(v61, (int8x8x2_t)v56);
      int8x16_t v62 = (int8x16_t *)&a1[v4];
      *int8x16_t v62 = vzip2q_s8(v55, v59);
      v62[1] = vzip2q_s8(v56, v60);
      a1 = v52;
      int v44 = v53 - 2;
      v49 += 16;
    }
    while (v53 > 3);
    a2 = (int16x8_t *)((char *)a2 + v49);
    int16x8_t v32 = (int8x8_t *)((char *)v32 + v49);
    int v35 = (int16x8_t *)((char *)v35 + v49);
    int8x16_t v36 = (int16x8_t *)((char *)v36 + v49);
    int8x16_t v39 = (int8x8_t *)((char *)v39 + v49);
    int8x16_t v40 = (int8x8_t *)((char *)v40 + v49);
  }
  if (v44 == 1)
  {
    v63.i64[0] = 0x8080808080808080;
    v63.i64[1] = 0x8080808080808080;
    v64.i64[0] = -1;
    v64.i64[1] = -1;
    v69.val[0] = (int8x8_t)vzip2q_s8(v64, veorq_s8(vqmovn_high_s16(*v39, *(int16x8_t *)v39->i8), v63)).u64[0];
    v69.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v32, *(int16x8_t *)v32->i8), v63), veorq_s8(vqmovn_high_s16(*v40, *(int16x8_t *)v40->i8), v63)).u64[0];
    v67.val[0] = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v35), (int8x8_t)0x8080808080808080));
    v67.val[1] = vzip1_s8(veor_s8(vqmovn_s16(*a2), (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v36), (int8x8_t)0x8080808080808080));
    vst2_s8(a1, v67);
    int8x16_t v65 = a1 + 16;
    vst2_s8(v65, v69);
  }
}

int8x16_t from_444_to_y408<2,4,(AlphaOutputMethod)2,false>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = &a1[4 * a3];
  if (a4 == 8)
  {
    int16x8_t v6 = *a2;
    int16x8_t v7 = a2[1];
    *(int8x8_t *)v6.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v7.i8 = vqmovn_s16(v7);
    int16x8_t v8 = a2[4];
    int16x8_t v9 = a2[5];
    *(int8x8_t *)v8.i8 = vqmovn_s16(v8);
    int16x8_t v10 = a2[8];
    int16x8_t v11 = a2[9];
    *(int8x8_t *)v10.i8 = vqmovn_s16(v10);
    *(int8x8_t *)v9.i8 = vqmovn_s16(v9);
    *(int8x8_t *)v11.i8 = vqmovn_s16(v11);
    int8x16_t v12 = (int8x16_t)vzip1q_s16(v6, v7);
    int8x16_t v13 = (int8x16_t)vzip1q_s16(v8, v10);
    int8x16_t v14 = (int8x16_t)vzip1q_s16(v9, v11);
    v9.i64[0] = 0x8080808080808080;
    v9.i64[1] = 0x8080808080808080;
    int8x16_t v15 = veorq_s8(v13, (int8x16_t)v9);
    v10.i64[0] = -1;
    v10.i64[1] = -1;
    int8x16_t v16 = vzip1q_s8((int8x16_t)v10, v15);
    int8x16_t v17 = vzip2q_s8((int8x16_t)v10, v15);
    int8x16_t v18 = veorq_s8(v12, (int8x16_t)v9);
    int8x16_t v19 = veorq_s8(v14, (int8x16_t)v9);
    int8x16_t v20 = vzip1q_s8(v18, v19);
    int8x16_t v21 = vzip2q_s8(v18, v19);
    vst2_s8(a1, (int8x8x2_t)v16);
    int8x16_t v22 = (int8x16_t *)&a1[a3];
    int8x16_t *v22 = vzip2q_s8(v16, v20);
    int8x16_t v23 = &v22->i8[a3];
    vst2_s8(v23, (int8x8x2_t)v17);
    int8x16_t v24 = (int8x16_t *)&v23[a3];
    int8x16_t *v24 = vzip2q_s8(v17, v21);
    int16x8_t v25 = a2[2];
    int16x8_t v26 = a2[3];
    *(int8x8_t *)v25.i8 = vqmovn_s16(v25);
    *(int8x8_t *)v26.i8 = vqmovn_s16(v26);
    int16x8_t v27 = a2[6];
    int16x8_t v28 = a2[7];
    *(int8x8_t *)v27.i8 = vqmovn_s16(v27);
    int16x8_t v29 = a2[10];
    int16x8_t v30 = a2[11];
    *(int8x8_t *)v29.i8 = vqmovn_s16(v29);
    *(int8x8_t *)v28.i8 = vqmovn_s16(v28);
    *(int8x8_t *)v30.i8 = vqmovn_s16(v30);
    int8x16_t v31 = (int8x16_t)vzip1q_s16(v25, v26);
    int8x16_t v32 = (int8x16_t)vzip1q_s16(v27, v29);
    int8x16_t v33 = (int8x16_t)vzip1q_s16(v28, v30);
    int8x16_t v34 = veorq_s8(v32, (int8x16_t)v9);
    int8x16_t v35 = vzip1q_s8((int8x16_t)v10, v34);
    int8x16_t v36 = vzip2q_s8((int8x16_t)v10, v34);
    int8x16_t v37 = veorq_s8(v31, (int8x16_t)v9);
    int8x16_t v38 = veorq_s8(v33, (int8x16_t)v9);
    int8x16_t v39 = vzip1q_s8(v37, v38);
    int8x16_t v40 = vzip2q_s8(v37, v38);
    vst2_s8(v5, (int8x8x2_t)v35);
    int16x8_t v41 = (int8x16_t *)&v5[a3];
    *int16x8_t v41 = vzip2q_s8(v35, v39);
    int16x8_t v42 = &v41->i8[a3];
    vst2_s8(v42, (int8x8x2_t)v36);
    int v43 = (int8x16_t *)&v42[a3];
    int8x8_t result = vzip2q_s8(v36, v40);
    *int v43 = result;
  }
  else if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v79 = *a2;
      int16x8_t v80 = a2[1];
      *(int8x8_t *)v79.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v80.i8 = vqmovn_s16(v80);
      int16x8_t v81 = a2[4];
      int16x8_t v82 = a2[5];
      *(int8x8_t *)v81.i8 = vqmovn_s16(v81);
      int16x8_t v83 = a2[8];
      int16x8_t v84 = a2[9];
      *(int8x8_t *)v83.i8 = vqmovn_s16(v83);
      *(int8x8_t *)v82.i8 = vqmovn_s16(v82);
      *(int8x8_t *)v84.i8 = vqmovn_s16(v84);
      int8x16_t v85 = (int8x16_t)vzip1q_s16(v79, v80);
      int8x16_t v86 = (int8x16_t)vzip1q_s16(v82, v84);
      v87.i64[0] = 0x8080808080808080;
      v87.i64[1] = 0x8080808080808080;
      int8x16_t v88 = veorq_s8((int8x16_t)vzip1q_s16(v81, v83), v87);
      v89.i64[0] = -1;
      v89.i64[1] = -1;
      int8x8_t result = vzip1q_s8(v89, v88);
      int8x16_t v90 = veorq_s8(v85, v87);
      int8x16_t v91 = veorq_s8(v86, v87);
      int8x16_t v92 = vzip1q_s8(v90, v91);
      vst2_s8(a1, (int8x8x2_t)result);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          int8x8_t result = vzip2q_s8(result, v92);
          *(int8x16_t *)&a1[a3] = result;
        }
      }
      else
      {
        int8x16_t v93 = vzip2q_s8(v89, v88);
        int8x16_t v94 = vzip2q_s8(v90, v91);
        int8x8_t result = vzip2q_s8(result, v92);
        *(int8x16_t *)&a1[a3] = result;
        int8x16_t v95 = &a1[a3 + a3];
        vst2_s8(v95, (int8x8x2_t)v93);
        if (a4 == 4)
        {
          int8x8_t result = vzip2q_s8(v93, v94);
          *(int8x16_t *)&v95[a3] = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v44 = *a2;
    int16x8_t v45 = a2[1];
    *(int8x8_t *)v44.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v45.i8 = vqmovn_s16(v45);
    int16x8_t v46 = a2[4];
    int16x8_t v47 = a2[5];
    *(int8x8_t *)v46.i8 = vqmovn_s16(v46);
    int16x8_t v48 = a2[8];
    int16x8_t v49 = a2[9];
    *(int8x8_t *)v48.i8 = vqmovn_s16(v48);
    *(int8x8_t *)v47.i8 = vqmovn_s16(v47);
    *(int8x8_t *)v49.i8 = vqmovn_s16(v49);
    int8x16_t v50 = (int8x16_t)vzip1q_s16(v44, v45);
    int8x16_t v51 = (int8x16_t)vzip1q_s16(v46, v48);
    int8x16_t v52 = (int8x16_t)vzip1q_s16(v47, v49);
    v49.i64[0] = 0x8080808080808080;
    v49.i64[1] = 0x8080808080808080;
    int8x16_t v53 = veorq_s8(v51, (int8x16_t)v49);
    result.i64[0] = -1;
    result.i64[1] = -1;
    int8x16_t v54 = vzip1q_s8(result, v53);
    int8x16_t v55 = vzip2q_s8(result, v53);
    int8x16_t v56 = veorq_s8(v50, (int8x16_t)v49);
    int8x16_t v57 = veorq_s8(v52, (int8x16_t)v49);
    int8x16_t v58 = vzip1q_s8(v56, v57);
    int8x16_t v59 = vzip2q_s8(v56, v57);
    vst2_s8(a1, (int8x8x2_t)v54);
    int8x16_t v60 = (int8x16_t *)&a1[a3];
    *int8x16_t v60 = vzip2q_s8(v54, v58);
    int8x16_t v61 = &v60->i8[a3];
    vst2_s8(v61, (int8x8x2_t)v55);
    int8x16_t v62 = (int8x16_t *)&v61[a3];
    *int8x16_t v62 = vzip2q_s8(v55, v59);
    int16x8_t v63 = a2[2];
    int16x8_t v64 = a2[3];
    *(int8x8_t *)v63.i8 = vqmovn_s16(v63);
    *(int8x8_t *)v64.i8 = vqmovn_s16(v64);
    int16x8_t v65 = a2[6];
    int16x8_t v66 = a2[7];
    *(int8x8_t *)v65.i8 = vqmovn_s16(v65);
    int16x8_t v67 = a2[10];
    int16x8_t v68 = a2[11];
    *(int8x8_t *)v67.i8 = vqmovn_s16(v67);
    *(int8x8_t *)v66.i8 = vqmovn_s16(v66);
    *(int8x8_t *)v68.i8 = vqmovn_s16(v68);
    int8x16_t v69 = (int8x16_t)vzip1q_s16(v63, v64);
    int8x16_t v70 = (int8x16_t)vzip1q_s16(v65, v67);
    int8x16_t v71 = (int8x16_t)vzip1q_s16(v66, v68);
    int8x16_t v72 = veorq_s8(v70, (int8x16_t)v49);
    int8x16_t v73 = vzip1q_s8(result, v72);
    int8x16_t v74 = veorq_s8(v69, (int8x16_t)v49);
    int8x16_t v75 = veorq_s8(v71, (int8x16_t)v49);
    int8x16_t v76 = vzip1q_s8(v74, v75);
    vst2_s8(v5, (int8x8x2_t)v73);
    if (a4 < 7)
    {
      if (a4 == 6)
      {
        int8x8_t result = vzip2q_s8(v73, v76);
        *(int8x16_t *)&v5[a3] = result;
      }
    }
    else
    {
      v96.val[1] = (int8x8_t)vzip2q_s8(v74, v75).u64[0];
      v96.val[0] = (int8x8_t)vzip2q_s8(result, v72).u64[0];
      int8x16_t v77 = (int8x16_t *)&v5[a3];
      int8x8_t result = vzip2q_s8(v73, v76);
      *int8x16_t v77 = result;
      int8x16_t v78 = &v77->i8[a3];
      vst2_s8(v78, v96);
    }
  }
  return result;
}

int8x16_t from_444_to_y408<2,4,(AlphaOutputMethod)2,true>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  uint64_t v5 = &a1[4 * a3];
  if (a4 == 8)
  {
    int16x8_t v6 = *a2;
    int16x8_t v7 = a2[1];
    *(int8x8_t *)v6.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v7.i8 = vqmovn_s16(v7);
    int16x8_t v8 = a2[4];
    int16x8_t v9 = a2[5];
    *(int8x8_t *)v8.i8 = vqmovn_s16(v8);
    int16x8_t v10 = a2[8];
    int16x8_t v11 = a2[9];
    *(int8x8_t *)v10.i8 = vqmovn_s16(v10);
    *(int8x8_t *)v9.i8 = vqmovn_s16(v9);
    *(int8x8_t *)v11.i8 = vqmovn_s16(v11);
    int8x16_t v12 = (int8x16_t)vzip1q_s16(v6, v7);
    int8x16_t v13 = (int8x16_t)vzip1q_s16(v8, v10);
    int8x16_t v14 = (int8x16_t)vzip1q_s16(v9, v11);
    v9.i64[0] = 0x8080808080808080;
    v9.i64[1] = 0x8080808080808080;
    int8x16_t v15 = veorq_s8(v13, (int8x16_t)v9);
    v10.i64[0] = -1;
    v10.i64[1] = -1;
    int8x16_t v16 = vzip1q_s8((int8x16_t)v10, v15);
    int8x16_t v17 = vzip2q_s8((int8x16_t)v10, v15);
    int8x16_t v18 = veorq_s8(v12, (int8x16_t)v9);
    int8x16_t v19 = veorq_s8(v14, (int8x16_t)v9);
    int8x16_t v20 = vzip1q_s8(v18, v19);
    int8x16_t v21 = vzip2q_s8(v18, v19);
    vst2_s8(a1, (int8x8x2_t)v16);
    int8x16_t v22 = (int8x16_t *)&a1[a3];
    int8x16_t *v22 = vzip2q_s8(v16, v20);
    int8x16_t v23 = &v22->i8[a3];
    vst2_s8(v23, (int8x8x2_t)v17);
    int8x16_t v24 = (int8x16_t *)&v23[a3];
    int8x16_t *v24 = vzip2q_s8(v17, v21);
    int16x8_t v25 = a2[2];
    int16x8_t v26 = a2[3];
    *(int8x8_t *)v25.i8 = vqmovn_s16(v25);
    *(int8x8_t *)v26.i8 = vqmovn_s16(v26);
    int16x8_t v27 = a2[6];
    int16x8_t v28 = a2[7];
    *(int8x8_t *)v27.i8 = vqmovn_s16(v27);
    int16x8_t v29 = a2[10];
    int16x8_t v30 = a2[11];
    *(int8x8_t *)v29.i8 = vqmovn_s16(v29);
    *(int8x8_t *)v28.i8 = vqmovn_s16(v28);
    *(int8x8_t *)v30.i8 = vqmovn_s16(v30);
    int8x16_t v31 = (int8x16_t)vzip1q_s16(v25, v26);
    int8x16_t v32 = (int8x16_t)vzip1q_s16(v27, v29);
    int8x16_t v33 = (int8x16_t)vzip1q_s16(v28, v30);
    int8x16_t v34 = veorq_s8(v32, (int8x16_t)v9);
    int8x16_t v35 = vzip1q_s8((int8x16_t)v10, v34);
    int8x16_t v36 = vzip2q_s8((int8x16_t)v10, v34);
    int8x16_t v37 = veorq_s8(v31, (int8x16_t)v9);
    int8x16_t v38 = veorq_s8(v33, (int8x16_t)v9);
    int8x16_t v39 = vzip1q_s8(v37, v38);
    int8x16_t v40 = vzip2q_s8(v37, v38);
    vst2_s8(v5, (int8x8x2_t)v35);
    int16x8_t v41 = (int8x16_t *)&v5[a3];
    *int16x8_t v41 = vzip2q_s8(v35, v39);
    int16x8_t v42 = &v41->i8[a3];
    vst2_s8(v42, (int8x8x2_t)v36);
    int v43 = (int8x16_t *)&v42[a3];
    int8x8_t result = vzip2q_s8(v36, v40);
    *int v43 = result;
  }
  else if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v79 = *a2;
      int16x8_t v80 = a2[1];
      *(int8x8_t *)v79.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v80.i8 = vqmovn_s16(v80);
      int16x8_t v81 = a2[4];
      int16x8_t v82 = a2[5];
      *(int8x8_t *)v81.i8 = vqmovn_s16(v81);
      int16x8_t v83 = a2[8];
      int16x8_t v84 = a2[9];
      *(int8x8_t *)v83.i8 = vqmovn_s16(v83);
      *(int8x8_t *)v82.i8 = vqmovn_s16(v82);
      *(int8x8_t *)v84.i8 = vqmovn_s16(v84);
      int8x16_t v85 = (int8x16_t)vzip1q_s16(v79, v80);
      int8x16_t v86 = (int8x16_t)vzip1q_s16(v82, v84);
      v87.i64[0] = 0x8080808080808080;
      v87.i64[1] = 0x8080808080808080;
      int8x16_t v88 = veorq_s8((int8x16_t)vzip1q_s16(v81, v83), v87);
      v89.i64[0] = -1;
      v89.i64[1] = -1;
      int8x8_t result = vzip1q_s8(v89, v88);
      int8x16_t v90 = veorq_s8(v85, v87);
      int8x16_t v91 = veorq_s8(v86, v87);
      int8x16_t v92 = vzip1q_s8(v90, v91);
      vst2_s8(a1, (int8x8x2_t)result);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          int8x8_t result = vzip2q_s8(result, v92);
          *(int8x16_t *)&a1[a3] = result;
        }
      }
      else
      {
        int8x16_t v93 = vzip2q_s8(v89, v88);
        int8x16_t v94 = vzip2q_s8(v90, v91);
        int8x8_t result = vzip2q_s8(result, v92);
        *(int8x16_t *)&a1[a3] = result;
        int8x16_t v95 = &a1[a3 + a3];
        vst2_s8(v95, (int8x8x2_t)v93);
        if (a4 == 4)
        {
          int8x8_t result = vzip2q_s8(v93, v94);
          *(int8x16_t *)&v95[a3] = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v44 = *a2;
    int16x8_t v45 = a2[1];
    *(int8x8_t *)v44.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v45.i8 = vqmovn_s16(v45);
    int16x8_t v46 = a2[4];
    int16x8_t v47 = a2[5];
    *(int8x8_t *)v46.i8 = vqmovn_s16(v46);
    int16x8_t v48 = a2[8];
    int16x8_t v49 = a2[9];
    *(int8x8_t *)v48.i8 = vqmovn_s16(v48);
    *(int8x8_t *)v47.i8 = vqmovn_s16(v47);
    *(int8x8_t *)v49.i8 = vqmovn_s16(v49);
    int8x16_t v50 = (int8x16_t)vzip1q_s16(v44, v45);
    int8x16_t v51 = (int8x16_t)vzip1q_s16(v46, v48);
    int8x16_t v52 = (int8x16_t)vzip1q_s16(v47, v49);
    v49.i64[0] = 0x8080808080808080;
    v49.i64[1] = 0x8080808080808080;
    int8x16_t v53 = veorq_s8(v51, (int8x16_t)v49);
    result.i64[0] = -1;
    result.i64[1] = -1;
    int8x16_t v54 = vzip1q_s8(result, v53);
    int8x16_t v55 = vzip2q_s8(result, v53);
    int8x16_t v56 = veorq_s8(v50, (int8x16_t)v49);
    int8x16_t v57 = veorq_s8(v52, (int8x16_t)v49);
    int8x16_t v58 = vzip1q_s8(v56, v57);
    int8x16_t v59 = vzip2q_s8(v56, v57);
    vst2_s8(a1, (int8x8x2_t)v54);
    int8x16_t v60 = (int8x16_t *)&a1[a3];
    *int8x16_t v60 = vzip2q_s8(v54, v58);
    int8x16_t v61 = &v60->i8[a3];
    vst2_s8(v61, (int8x8x2_t)v55);
    int8x16_t v62 = (int8x16_t *)&v61[a3];
    *int8x16_t v62 = vzip2q_s8(v55, v59);
    int16x8_t v63 = a2[2];
    int16x8_t v64 = a2[3];
    *(int8x8_t *)v63.i8 = vqmovn_s16(v63);
    *(int8x8_t *)v64.i8 = vqmovn_s16(v64);
    int16x8_t v65 = a2[6];
    int16x8_t v66 = a2[7];
    *(int8x8_t *)v65.i8 = vqmovn_s16(v65);
    int16x8_t v67 = a2[10];
    int16x8_t v68 = a2[11];
    *(int8x8_t *)v67.i8 = vqmovn_s16(v67);
    *(int8x8_t *)v66.i8 = vqmovn_s16(v66);
    *(int8x8_t *)v68.i8 = vqmovn_s16(v68);
    int8x16_t v69 = (int8x16_t)vzip1q_s16(v63, v64);
    int8x16_t v70 = (int8x16_t)vzip1q_s16(v65, v67);
    int8x16_t v71 = (int8x16_t)vzip1q_s16(v66, v68);
    int8x16_t v72 = veorq_s8(v70, (int8x16_t)v49);
    int8x16_t v73 = vzip1q_s8(result, v72);
    int8x16_t v74 = veorq_s8(v69, (int8x16_t)v49);
    int8x16_t v75 = veorq_s8(v71, (int8x16_t)v49);
    int8x16_t v76 = vzip1q_s8(v74, v75);
    vst2_s8(v5, (int8x8x2_t)v73);
    if (a4 < 7)
    {
      if (a4 == 6)
      {
        int8x8_t result = vzip2q_s8(v73, v76);
        *(int8x16_t *)&v5[a3] = result;
      }
    }
    else
    {
      v96.val[1] = (int8x8_t)vzip2q_s8(v74, v75).u64[0];
      v96.val[0] = (int8x8_t)vzip2q_s8(result, v72).u64[0];
      int8x16_t v77 = (int8x16_t *)&v5[a3];
      int8x8_t result = vzip2q_s8(v73, v76);
      *int8x16_t v77 = result;
      int8x16_t v78 = &v77->i8[a3];
      vst2_s8(v78, v96);
    }
  }
  return result;
}

void from_444_to_y408<2,2,(AlphaOutputMethod)2,false>(__int16 *a1, uint64_t a2, int a3, int a4)
{
  v4.i64[0] = 0x8080808080808080;
  v4.i64[1] = 0x8080808080808080;
  int8x16_t v5 = veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v4);
  v6.i64[0] = -1;
  v6.i64[1] = -1;
  int16x4x2_t v7 = (int16x4x2_t)vzip1q_s8(v6, v5);
  int16x4x2_t v8 = (int16x4x2_t)vzip2q_s8(v6, v5);
  int16x8_t v9 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48));
  int16x8_t v10 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 64)), *(int16x8_t *)(a2 + 80));
  int64x2_t v11 = (int64x2_t)vzip1q_s16(v9, v10);
  int64x2_t v12 = (int64x2_t)vzip2q_s16(v9, v10);
  int16x8_t v13 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v11, (int8x16_t)vdupq_laneq_s64(v11, 1)), v4);
  int16x8_t v14 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v12, (int8x16_t)vdupq_laneq_s64(v12, 1)), v4);
  if (a4 == 4)
  {
    uint64_t v15 = a3;
    vst2_s16(a1, v7);
    int8x16_t v16 = (int16x8_t *)((char *)a1 + v15);
    int16x8_t *v16 = vzip2q_s16((int16x8_t)v7, v13);
    int8x16_t v17 = (__int16 *)((char *)v16->i16 + a3);
    vst2_s16(v17, v8);
    int8x16_t v18 = (int16x8_t *)((char *)v17 + v15);
    int16x8_t *v18 = vzip2q_s16((int16x8_t)v8, v14);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v7);
    }
  }
  else
  {
    uint64_t v19 = a3;
    vst2_s16(a1, v7);
    int8x16_t v20 = (int16x8_t *)((char *)a1 + v19);
    *int8x16_t v20 = vzip2q_s16((int16x8_t)v7, v13);
    if (a4 == 3)
    {
      int8x16_t v21 = (__int16 *)((char *)v20->i16 + a3);
      vst2_s16(v21, v8);
    }
  }
}

void from_444_to_y408<2,2,(AlphaOutputMethod)2,true>(__int16 *a1, uint64_t a2, int a3, int a4)
{
  v4.i64[0] = 0x8080808080808080;
  v4.i64[1] = 0x8080808080808080;
  int8x16_t v5 = veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v4);
  v6.i64[0] = -1;
  v6.i64[1] = -1;
  int16x4x2_t v7 = (int16x4x2_t)vzip1q_s8(v6, v5);
  int16x4x2_t v8 = (int16x4x2_t)vzip2q_s8(v6, v5);
  int16x8_t v9 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48));
  int16x8_t v10 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 64)), *(int16x8_t *)(a2 + 80));
  int64x2_t v11 = (int64x2_t)vzip1q_s16(v9, v10);
  int64x2_t v12 = (int64x2_t)vzip2q_s16(v9, v10);
  int16x8_t v13 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v11, (int8x16_t)vdupq_laneq_s64(v11, 1)), v4);
  int16x8_t v14 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v12, (int8x16_t)vdupq_laneq_s64(v12, 1)), v4);
  if (a4 == 4)
  {
    uint64_t v15 = a3;
    vst2_s16(a1, v7);
    int8x16_t v16 = (int16x8_t *)((char *)a1 + v15);
    int16x8_t *v16 = vzip2q_s16((int16x8_t)v7, v13);
    int8x16_t v17 = (__int16 *)((char *)v16->i16 + a3);
    vst2_s16(v17, v8);
    int8x16_t v18 = (int16x8_t *)((char *)v17 + v15);
    int16x8_t *v18 = vzip2q_s16((int16x8_t)v8, v14);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v7);
    }
  }
  else
  {
    uint64_t v19 = a3;
    vst2_s16(a1, v7);
    int8x16_t v20 = (int16x8_t *)((char *)a1 + v19);
    *int8x16_t v20 = vzip2q_s16((int16x8_t)v7, v13);
    if (a4 == 3)
    {
      int8x16_t v21 = (__int16 *)((char *)v20->i16 + a3);
      vst2_s16(v21, v8);
    }
  }
}

__int8 *from_444_to_y408<2,1,(AlphaOutputMethod)2,false>(__int8 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2u, 1);
}

__int8 *from_444_to_y408<2,1,(AlphaOutputMethod)2,true>(__int8 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2u, 1);
}

__int8 *from_444_to_y408<1,2,(AlphaOutputMethod)2,false>(__int8 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1u, 2);
}

__int8 *from_444_to_y408<1,2,(AlphaOutputMethod)2,true>(__int8 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1u, 2);
}

__int8 *from_444_to_y408<1,1,(AlphaOutputMethod)2,false>(__int8 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1u, 1);
}

__int8 *from_444_to_y408<1,1,(AlphaOutputMethod)2,true>(__int8 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1u, 1);
}

void from_444_to_r408<8,8,(AlphaOutputMethod)1,false>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int8x16_t v32 = a2 + 8;
    int8x16_t v33 = a2 + 32;
    int8x16_t v34 = a2 + 40;
    int8x16_t v35 = a2 + 64;
    int8x16_t v36 = a2 + 72;
    int v38 = a4;
    if (a4 < 1) {
      return;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  v9.i64[0] = 0x1010101010101010;
  v9.i64[1] = 0x1010101010101010;
  int16x8_t v10 = (char *)a1;
  do
  {
    int64x2_t v11 = a2 + 1;
    int64x2_t v12 = (int8x16_t *)((char *)a1 + 8 * a3);
    int8x16_t v13 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v8), v9);
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]), v8);
    int8x16_t v15 = vzip1q_s8(*a5, v14);
    int8x16_t v16 = vzip2q_s8(*a5, v14);
    int8x16_t v17 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]), v8);
    int8x16_t v18 = vzip1q_s8(v13, v17);
    vst2_s8(v10, (int8x8x2_t)v15);
    v10 += a3;
    int8x16_t v19 = vzip2q_s8(v13, v17);
    a1[1] = vzip2q_s8(v15, v18);
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v16);
    a1[3] = vzip2q_s8(v16, v19);
    a1 = (int8x16_t *)v10;
    int8x16_t v21 = *(int8x16_t *)((char *)a5 + 8 * a6);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v22 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v8), v9);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]), v8);
    int8x16_t v24 = vzip1q_s8(v21, v23);
    int8x16_t v25 = vzip2q_s8(v21, v23);
    int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]), v8);
    int8x16_t v27 = vzip1q_s8(v22, v26);
    int8x16_t v28 = vzip2q_s8(v22, v26);
    int16x8_t v29 = (char *)v12;
    vst2_s8(v29, (int8x8x2_t)v24);
    v29 += 16;
    *(int8x16_t *)int16x8_t v29 = vzip2q_s8(v24, v27);
    int16x8_t v30 = v12[2].i8;
    vst2_s8(v30, (int8x8x2_t)v25);
    v12[3] = vzip2q_s8(v25, v28);
    int v31 = v7 - 1;
    LODWORD(v30) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v30 > 1);
  int8x16_t v32 = v11 + 8;
  int8x16_t v33 = v11 + 32;
  int8x16_t v34 = v11 + 40;
  int8x16_t v35 = v11 + 64;
  int8x16_t v36 = v11 + 72;
  if (a4 <= 8) {
    int v37 = 8;
  }
  else {
    int v37 = a4;
  }
  int v38 = v31 - v37;
  a2 = v11;
  if (v38 >= 1)
  {
LABEL_13:
    int8x16_t v39 = a1 + 2;
    unsigned int v40 = v38 + 1;
    v41.i64[0] = 0x8080808080808080;
    v41.i64[1] = 0x8080808080808080;
    v42.i64[0] = 0x1010101010101010;
    v42.i64[1] = 0x1010101010101010;
    int v43 = a1[2].i8;
    do
    {
      int16x8_t v44 = *a2++;
      int16x8_t v45 = v44;
      int16x8_t v46 = v39[-2].i8;
      int16x8_t v47 = *v32++;
      int8x16_t v48 = vqmovn_high_s16(vqmovn_s16(v45), v47);
      int16x8_t v49 = *v33++;
      int16x8_t v50 = v49;
      int16x8_t v51 = *v35++;
      int8x16_t v52 = vqmovn_high_s16(vqmovn_s16(v50), v51);
      int16x8_t v53 = *v34++;
      int16x8_t v54 = v53;
      int16x8_t v55 = *v36++;
      int8x16_t v56 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v48, v41), v42);
      int8x16_t v57 = veorq_s8(v52, v41);
      int8x16_t v58 = vzip1q_s8(*a5, v57);
      int8x16_t v59 = vzip2q_s8(*a5, v57);
      int8x16_t v60 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v54), v55), v41);
      int8x16_t v61 = vzip1q_s8(v56, v60);
      vst2_s8(v46, (int8x8x2_t)v58);
      int8x16_t v62 = vzip2q_s8(v56, v60);
      v39[-1] = vzip2q_s8(v58, v61);
      vst2_s8(v43, (int8x8x2_t)v59);
      v43 += a3;
      v39[1] = vzip2q_s8(v59, v62);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v40;
      int8x16_t v39 = (int8x16_t *)v43;
    }
    while (v40 > 1);
  }
}

void from_444_to_r408<8,8,(AlphaOutputMethod)1,true>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int8x16_t v32 = a2 + 8;
    int8x16_t v33 = a2 + 32;
    int8x16_t v34 = a2 + 40;
    int8x16_t v35 = a2 + 64;
    int8x16_t v36 = a2 + 72;
    int v38 = a4;
    if (a4 < 1) {
      return;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  v9.i64[0] = 0x1010101010101010;
  v9.i64[1] = 0x1010101010101010;
  int16x8_t v10 = (char *)a1;
  do
  {
    int64x2_t v11 = a2 + 1;
    int64x2_t v12 = (int8x16_t *)((char *)a1 + 8 * a3);
    int8x16_t v13 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v8), v9);
    int8x16_t v14 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]), v8);
    int8x16_t v15 = vzip1q_s8(*a5, v14);
    int8x16_t v16 = vzip2q_s8(*a5, v14);
    int8x16_t v17 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]), v8);
    int8x16_t v18 = vzip1q_s8(v13, v17);
    vst2_s8(v10, (int8x8x2_t)v15);
    v10 += a3;
    int8x16_t v19 = vzip2q_s8(v13, v17);
    a1[1] = vzip2q_s8(v15, v18);
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v16);
    a1[3] = vzip2q_s8(v16, v19);
    a1 = (int8x16_t *)v10;
    int8x16_t v21 = *(int8x16_t *)((char *)a5 + 8 * a6);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v22 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v8), v9);
    int8x16_t v23 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]), v8);
    int8x16_t v24 = vzip1q_s8(v21, v23);
    int8x16_t v25 = vzip2q_s8(v21, v23);
    int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]), v8);
    int8x16_t v27 = vzip1q_s8(v22, v26);
    int8x16_t v28 = vzip2q_s8(v22, v26);
    int16x8_t v29 = (char *)v12;
    vst2_s8(v29, (int8x8x2_t)v24);
    v29 += 16;
    *(int8x16_t *)int16x8_t v29 = vzip2q_s8(v24, v27);
    int16x8_t v30 = v12[2].i8;
    vst2_s8(v30, (int8x8x2_t)v25);
    v12[3] = vzip2q_s8(v25, v28);
    int v31 = v7 - 1;
    LODWORD(v30) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v30 > 1);
  int8x16_t v32 = v11 + 8;
  int8x16_t v33 = v11 + 32;
  int8x16_t v34 = v11 + 40;
  int8x16_t v35 = v11 + 64;
  int8x16_t v36 = v11 + 72;
  if (a4 <= 8) {
    int v37 = 8;
  }
  else {
    int v37 = a4;
  }
  int v38 = v31 - v37;
  a2 = v11;
  if (v38 >= 1)
  {
LABEL_13:
    int8x16_t v39 = a1 + 2;
    unsigned int v40 = v38 + 1;
    v41.i64[0] = 0x8080808080808080;
    v41.i64[1] = 0x8080808080808080;
    v42.i64[0] = 0x1010101010101010;
    v42.i64[1] = 0x1010101010101010;
    int v43 = a1[2].i8;
    do
    {
      int16x8_t v44 = *a2++;
      int16x8_t v45 = v44;
      int16x8_t v46 = v39[-2].i8;
      int16x8_t v47 = *v32++;
      int8x16_t v48 = vqmovn_high_s16(vqmovn_s16(v45), v47);
      int16x8_t v49 = *v33++;
      int16x8_t v50 = v49;
      int16x8_t v51 = *v35++;
      int8x16_t v52 = vqmovn_high_s16(vqmovn_s16(v50), v51);
      int16x8_t v53 = *v34++;
      int16x8_t v54 = v53;
      int16x8_t v55 = *v36++;
      int8x16_t v56 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v48, v41), v42);
      int8x16_t v57 = veorq_s8(v52, v41);
      int8x16_t v58 = vzip1q_s8(*a5, v57);
      int8x16_t v59 = vzip2q_s8(*a5, v57);
      int8x16_t v60 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v54), v55), v41);
      int8x16_t v61 = vzip1q_s8(v56, v60);
      vst2_s8(v46, (int8x8x2_t)v58);
      int8x16_t v62 = vzip2q_s8(v56, v60);
      v39[-1] = vzip2q_s8(v58, v61);
      vst2_s8(v43, (int8x8x2_t)v59);
      v43 += a3;
      v39[1] = vzip2q_s8(v59, v62);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v40;
      int8x16_t v39 = (int8x16_t *)v43;
    }
    while (v40 > 1);
  }
}

void from_444_to_r408<8,4,(AlphaOutputMethod)1,false>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (2 * a6);
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (!v7)
  {
    int8x16_t v33 = a2 + 4;
    int8x16_t v34 = a2 + 16;
    int8x16_t v35 = a2 + 20;
    int8x16_t v36 = a2 + 32;
    int v37 = a2 + 36;
    int v39 = a4;
    if (a4 < 1) {
      return;
    }
    goto LABEL_13;
  }
  int v8 = a4 + 4;
  v9.i64[0] = 0x8080808080808080;
  v9.i64[1] = 0x8080808080808080;
  v10.i64[0] = 0x1010101010101010;
  v10.i64[1] = 0x1010101010101010;
  int64x2_t v11 = (char *)a1;
  do
  {
    int64x2_t v12 = a2 + 1;
    int8x16_t v13 = (int8x16_t *)((char *)a1 + 4 * a3);
    int8x16_t v14 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v9), v10);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[32]), v9);
    int8x16_t v16 = vzip1q_s8(*a5, v15);
    int8x16_t v17 = vzip2q_s8(*a5, v15);
    int8x16_t v18 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[20]), a2[36]), v9);
    int8x16_t v19 = vzip1q_s8(v14, v18);
    vst2_s8(v11, (int8x8x2_t)v16);
    v11 += a3;
    int8x16_t v20 = vzip2q_s8(v14, v18);
    a1[1] = vzip2q_s8(v16, v19);
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v17);
    a1[3] = vzip2q_s8(v17, v20);
    a1 = (int8x16_t *)v11;
    int8x16_t v22 = *(int8x16_t *)((char *)a5 + (8 * a6));
    a5 = (int8x16_t *)((char *)a5 + v6);
    int8x16_t v23 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v9), v10);
    int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[40]), v9);
    int8x16_t v25 = vzip1q_s8(v22, v24);
    int8x16_t v26 = vzip2q_s8(v22, v24);
    int8x16_t v27 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[28]), a2[44]), v9);
    int8x16_t v28 = vzip1q_s8(v23, v27);
    int8x16_t v29 = vzip2q_s8(v23, v27);
    int16x8_t v30 = (char *)v13;
    vst2_s8(v30, (int8x8x2_t)v25);
    v30 += 16;
    *(int8x16_t *)int16x8_t v30 = vzip2q_s8(v25, v28);
    int v31 = v13[2].i8;
    vst2_s8(v31, (int8x8x2_t)v26);
    v13[3] = vzip2q_s8(v26, v29);
    int v32 = v8 - 1;
    LODWORD(v31) = v8 - 8;
    --v8;
    ++a2;
  }
  while ((int)v31 > 1);
  int8x16_t v33 = v12 + 4;
  int8x16_t v34 = v12 + 16;
  int8x16_t v35 = v12 + 20;
  int8x16_t v36 = v12 + 32;
  int v37 = v12 + 36;
  if (a4 <= 4) {
    int v38 = 4;
  }
  else {
    int v38 = a4;
  }
  int v39 = v32 - v38;
  a2 = v12;
  if (v39 >= 1)
  {
LABEL_13:
    unsigned int v40 = a1 + 2;
    unsigned int v41 = v39 + 1;
    v42.i64[0] = 0x8080808080808080;
    v42.i64[1] = 0x8080808080808080;
    v43.i64[0] = 0x1010101010101010;
    v43.i64[1] = 0x1010101010101010;
    int16x8_t v44 = a1[2].i8;
    do
    {
      int16x8_t v45 = *a2++;
      int16x8_t v46 = v45;
      int16x8_t v47 = v40[-2].i8;
      int16x8_t v48 = *v33++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v46), v48);
      int16x8_t v50 = *v34++;
      int16x8_t v51 = v50;
      int16x8_t v52 = *v36++;
      int8x16_t v53 = vqmovn_high_s16(vqmovn_s16(v51), v52);
      int16x8_t v54 = *v35++;
      int16x8_t v55 = v54;
      int16x8_t v56 = *v37++;
      int8x16_t v57 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v49, v42), v43);
      int8x16_t v58 = veorq_s8(v53, v42);
      int8x16_t v59 = vzip1q_s8(*a5, v58);
      int8x16_t v60 = vzip2q_s8(*a5, v58);
      int8x16_t v61 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v55), v56), v42);
      int8x16_t v62 = vzip1q_s8(v57, v61);
      vst2_s8(v47, (int8x8x2_t)v59);
      int8x16_t v63 = vzip2q_s8(v57, v61);
      v40[-1] = vzip2q_s8(v59, v62);
      vst2_s8(v44, (int8x8x2_t)v60);
      v44 += a3;
      v40[1] = vzip2q_s8(v60, v63);
      a5 = (int8x16_t *)((char *)a5 + v6);
      --v41;
      unsigned int v40 = (int8x16_t *)v44;
    }
    while (v41 > 1);
  }
}

void from_444_to_r408<8,4,(AlphaOutputMethod)1,true>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (2 * a6);
  if (a4 <= 4) {
    int v7 = 0;
  }
  else {
    int v7 = a4 - 4;
  }
  if (!v7)
  {
    int8x16_t v33 = a2 + 4;
    int8x16_t v34 = a2 + 16;
    int8x16_t v35 = a2 + 20;
    int8x16_t v36 = a2 + 32;
    int v37 = a2 + 36;
    int v39 = a4;
    if (a4 < 1) {
      return;
    }
    goto LABEL_13;
  }
  int v8 = a4 + 4;
  v9.i64[0] = 0x8080808080808080;
  v9.i64[1] = 0x8080808080808080;
  v10.i64[0] = 0x1010101010101010;
  v10.i64[1] = 0x1010101010101010;
  int64x2_t v11 = (char *)a1;
  do
  {
    int64x2_t v12 = a2 + 1;
    int8x16_t v13 = (int8x16_t *)((char *)a1 + 4 * a3);
    int8x16_t v14 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v9), v10);
    int8x16_t v15 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[32]), v9);
    int8x16_t v16 = vzip1q_s8(*a5, v15);
    int8x16_t v17 = vzip2q_s8(*a5, v15);
    int8x16_t v18 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[20]), a2[36]), v9);
    int8x16_t v19 = vzip1q_s8(v14, v18);
    vst2_s8(v11, (int8x8x2_t)v16);
    v11 += a3;
    int8x16_t v20 = vzip2q_s8(v14, v18);
    a1[1] = vzip2q_s8(v16, v19);
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v17);
    a1[3] = vzip2q_s8(v17, v20);
    a1 = (int8x16_t *)v11;
    int8x16_t v22 = *(int8x16_t *)((char *)a5 + (8 * a6));
    a5 = (int8x16_t *)((char *)a5 + v6);
    int8x16_t v23 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v9), v10);
    int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[40]), v9);
    int8x16_t v25 = vzip1q_s8(v22, v24);
    int8x16_t v26 = vzip2q_s8(v22, v24);
    int8x16_t v27 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[28]), a2[44]), v9);
    int8x16_t v28 = vzip1q_s8(v23, v27);
    int8x16_t v29 = vzip2q_s8(v23, v27);
    int16x8_t v30 = (char *)v13;
    vst2_s8(v30, (int8x8x2_t)v25);
    v30 += 16;
    *(int8x16_t *)int16x8_t v30 = vzip2q_s8(v25, v28);
    int v31 = v13[2].i8;
    vst2_s8(v31, (int8x8x2_t)v26);
    v13[3] = vzip2q_s8(v26, v29);
    int v32 = v8 - 1;
    LODWORD(v31) = v8 - 8;
    --v8;
    ++a2;
  }
  while ((int)v31 > 1);
  int8x16_t v33 = v12 + 4;
  int8x16_t v34 = v12 + 16;
  int8x16_t v35 = v12 + 20;
  int8x16_t v36 = v12 + 32;
  int v37 = v12 + 36;
  if (a4 <= 4) {
    int v38 = 4;
  }
  else {
    int v38 = a4;
  }
  int v39 = v32 - v38;
  a2 = v12;
  if (v39 >= 1)
  {
LABEL_13:
    unsigned int v40 = a1 + 2;
    unsigned int v41 = v39 + 1;
    v42.i64[0] = 0x8080808080808080;
    v42.i64[1] = 0x8080808080808080;
    v43.i64[0] = 0x1010101010101010;
    v43.i64[1] = 0x1010101010101010;
    int16x8_t v44 = a1[2].i8;
    do
    {
      int16x8_t v45 = *a2++;
      int16x8_t v46 = v45;
      int16x8_t v47 = v40[-2].i8;
      int16x8_t v48 = *v33++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v46), v48);
      int16x8_t v50 = *v34++;
      int16x8_t v51 = v50;
      int16x8_t v52 = *v36++;
      int8x16_t v53 = vqmovn_high_s16(vqmovn_s16(v51), v52);
      int16x8_t v54 = *v35++;
      int16x8_t v55 = v54;
      int16x8_t v56 = *v37++;
      int8x16_t v57 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v49, v42), v43);
      int8x16_t v58 = veorq_s8(v53, v42);
      int8x16_t v59 = vzip1q_s8(*a5, v58);
      int8x16_t v60 = vzip2q_s8(*a5, v58);
      int8x16_t v61 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v55), v56), v42);
      int8x16_t v62 = vzip1q_s8(v57, v61);
      vst2_s8(v47, (int8x8x2_t)v59);
      int8x16_t v63 = vzip2q_s8(v57, v61);
      v40[-1] = vzip2q_s8(v59, v62);
      vst2_s8(v44, (int8x8x2_t)v60);
      v44 += a3;
      v40[1] = vzip2q_s8(v60, v63);
      a5 = (int8x16_t *)((char *)a5 + v6);
      --v41;
      unsigned int v40 = (int8x16_t *)v44;
    }
    while (v41 > 1);
  }
}

void from_444_to_r408<4,8,(AlphaOutputMethod)1,false>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6)
{
}

void from_444_to_r408<4,8,(AlphaOutputMethod)1,true>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6)
{
}

void from_444_to_r408<4,4,(AlphaOutputMethod)1,false>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6)
{
}

void from_444_to_r408<4,4,(AlphaOutputMethod)1,true>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6)
{
}

void from_444_to_r408<4,2,(AlphaOutputMethod)1,false>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6)
{
}

void from_444_to_r408<4,2,(AlphaOutputMethod)1,true>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6)
{
}

int8x16_t from_444_to_r408<2,4,(AlphaOutputMethod)1,false>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6, int8x16_t result)
{
  int v7 = &a1[4 * a3];
  int v8 = (int8x16_t *)((char *)a5 + (8 * a6));
  uint64_t v9 = (2 * a6);
  if (a4 == 8)
  {
    int16x8_t v10 = *a2;
    int16x8_t v11 = a2[1];
    *(int8x8_t *)v10.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v11.i8 = vqmovn_s16(v11);
    int16x8_t v12 = a2[4];
    int16x8_t v13 = a2[5];
    *(int8x8_t *)v12.i8 = vqmovn_s16(v12);
    int16x8_t v14 = a2[8];
    int16x8_t v15 = a2[9];
    *(int8x8_t *)v14.i8 = vqmovn_s16(v14);
    *(int8x8_t *)v13.i8 = vqmovn_s16(v13);
    *(int8x8_t *)v15.i8 = vqmovn_s16(v15);
    int8x16_t v16 = (int8x16_t)vzip1q_s16(v10, v11);
    int8x16_t v17 = (int8x16_t)vzip1q_s16(v12, v14);
    int8x16_t v18 = (int8x16_t)vzip1q_s16(v13, v15);
    v10.i64[0] = 0x8080808080808080;
    v10.i64[1] = 0x8080808080808080;
    v12.i64[0] = 0x1010101010101010;
    v12.i64[1] = 0x1010101010101010;
    int8x16_t v19 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v16, (int8x16_t)v10), (uint8x16_t)v12);
    v16.i64[0] = 0xFF000000FFLL;
    v16.i64[1] = 0xFF000000FFLL;
    int8x16_t v20 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v16)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v16))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v16)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v16)));
    int8x16_t v21 = veorq_s8(v17, (int8x16_t)v10);
    int8x16_t v22 = vzip1q_s8(v20, v21);
    int8x16_t v23 = vzip2q_s8(v20, v21);
    int8x16_t v24 = veorq_s8(v18, (int8x16_t)v10);
    int8x16_t v25 = vzip1q_s8(v19, v24);
    int8x16_t v26 = vzip2q_s8(v19, v24);
    vst2_s8(a1, (int8x8x2_t)v22);
    int8x16_t v27 = (int8x16_t *)&a1[a3];
    *int8x16_t v27 = vzip2q_s8(v22, v25);
    int8x16_t v28 = &v27->i8[a3];
    vst2_s8(v28, (int8x8x2_t)v23);
    int8x16_t v29 = (int8x16_t *)&v28[a3];
    int8x16_t *v29 = vzip2q_s8(v23, v26);
    int16x8_t v30 = a2[2];
    int16x8_t v31 = a2[3];
    *(int8x8_t *)v30.i8 = vqmovn_s16(v30);
    *(int8x8_t *)v31.i8 = vqmovn_s16(v31);
    int16x8_t v32 = a2[6];
    int16x8_t v33 = a2[7];
    *(int8x8_t *)v32.i8 = vqmovn_s16(v32);
    int16x8_t v34 = a2[10];
    int16x8_t v35 = a2[11];
    *(int8x8_t *)v34.i8 = vqmovn_s16(v34);
    *(int8x8_t *)v33.i8 = vqmovn_s16(v33);
    *(int8x8_t *)v35.i8 = vqmovn_s16(v35);
    int8x16_t v36 = (int8x16_t)vzip1q_s16(v30, v31);
    int8x16_t v37 = (int8x16_t)vzip1q_s16(v32, v34);
    int8x16_t v38 = (int8x16_t)vzip1q_s16(v33, v35);
    int8x16_t v39 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v36, (int8x16_t)v10), (uint8x16_t)v12);
    int8x16_t v40 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, v16)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), v16))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), v16)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), v16)));
    int8x16_t v41 = veorq_s8(v37, (int8x16_t)v10);
    int8x16_t v42 = vzip1q_s8(v40, v41);
    int8x16_t v43 = vzip2q_s8(v40, v41);
    int8x16_t v44 = veorq_s8(v38, (int8x16_t)v10);
    int8x16_t v45 = vzip1q_s8(v39, v44);
    int8x16_t v46 = vzip2q_s8(v39, v44);
    vst2_s8(v7, (int8x8x2_t)v42);
    int16x8_t v47 = (int8x16_t *)&v7[a3];
    int8x16_t *v47 = vzip2q_s8(v42, v45);
    int16x8_t v48 = &v47->i8[a3];
    vst2_s8(v48, (int8x8x2_t)v43);
    int8x16_t v49 = (int8x16_t *)&v48[a3];
    int8x8_t result = vzip2q_s8(v43, v46);
    *int8x16_t v49 = result;
    return result;
  }
  if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v83 = *a2;
      int16x8_t v84 = a2[1];
      *(int8x8_t *)v83.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v84.i8 = vqmovn_s16(v84);
      int16x8_t v85 = a2[4];
      int16x8_t v86 = a2[5];
      *(int8x8_t *)v85.i8 = vqmovn_s16(v85);
      int16x8_t v87 = a2[8];
      int16x8_t v88 = a2[9];
      *(int8x8_t *)v87.i8 = vqmovn_s16(v87);
      *(int8x8_t *)v86.i8 = vqmovn_s16(v86);
      *(int8x8_t *)v88.i8 = vqmovn_s16(v88);
      int8x16_t v89 = (int8x16_t)vzip1q_s16(v83, v84);
      int8x16_t v90 = (int8x16_t)vzip1q_s16(v85, v87);
      int8x16_t v91 = (int8x16_t)vzip1q_s16(v86, v88);
      v92.i64[0] = 0x8080808080808080;
      v92.i64[1] = 0x8080808080808080;
      v85.i64[0] = 0x1010101010101010;
      v85.i64[1] = 0x1010101010101010;
      int8x8_t result = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v89, v92), (uint8x16_t)v85);
      v93.i64[0] = 0xFF000000FFLL;
      v93.i64[1] = 0xFF000000FFLL;
      int8x16_t v94 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v93)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v93))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v93)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v93)));
      int8x16_t v95 = veorq_s8(v90, v92);
      int8x16_t v96 = vzip1q_s8(v94, v95);
      int8x16_t v97 = veorq_s8(v91, v92);
      int8x16_t v98 = vzip1q_s8(result, v97);
      vst2_s8(a1, (int8x8x2_t)v96);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          int8x8_t result = vzip2q_s8(v96, v98);
          *(int8x16_t *)&a1[a3] = result;
        }
      }
      else
      {
        int8x16_t v79 = vzip2q_s8(v94, v95);
        int8x16_t v80 = vzip2q_s8(result, v97);
        int8x8_t result = vzip2q_s8(v96, v98);
        *(int8x16_t *)&a1[a3] = result;
        int v7 = &a1[a3 + a3];
        vst2_s8(v7, (int8x8x2_t)v79);
        if (a4 == 4)
        {
LABEL_11:
          int8x8_t result = vzip2q_s8(v79, v80);
          *(int8x16_t *)&v7[a3] = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v50 = *a2;
    int16x8_t v51 = a2[1];
    *(int8x8_t *)v50.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v51.i8 = vqmovn_s16(v51);
    int16x8_t v52 = a2[4];
    int16x8_t v53 = a2[5];
    *(int8x8_t *)v52.i8 = vqmovn_s16(v52);
    int16x8_t v54 = a2[8];
    int16x8_t v55 = a2[9];
    *(int8x8_t *)v54.i8 = vqmovn_s16(v54);
    *(int8x8_t *)v53.i8 = vqmovn_s16(v53);
    *(int8x8_t *)v55.i8 = vqmovn_s16(v55);
    int8x16_t v56 = (int8x16_t)vzip1q_s16(v50, v51);
    int8x16_t v57 = (int8x16_t)vzip1q_s16(v52, v54);
    int8x16_t v58 = (int8x16_t)vzip1q_s16(v53, v55);
    v50.i64[0] = 0x8080808080808080;
    v50.i64[1] = 0x8080808080808080;
    v52.i64[0] = 0x1010101010101010;
    v52.i64[1] = 0x1010101010101010;
    int8x16_t v59 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v56, (int8x16_t)v50), (uint8x16_t)v52);
    v56.i64[0] = 0xFF000000FFLL;
    v56.i64[1] = 0xFF000000FFLL;
    int8x16_t v60 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v56)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v56))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v56)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v56)));
    int8x16_t v61 = veorq_s8(v57, (int8x16_t)v50);
    int8x16_t v62 = vzip1q_s8(v60, v61);
    int8x16_t v63 = vzip2q_s8(v60, v61);
    int8x16_t v64 = veorq_s8(v58, (int8x16_t)v50);
    int8x16_t v65 = vzip1q_s8(v59, v64);
    int8x16_t v66 = vzip2q_s8(v59, v64);
    vst2_s8(a1, (int8x8x2_t)v62);
    int16x8_t v67 = (int8x16_t *)&a1[a3];
    *int16x8_t v67 = vzip2q_s8(v62, v65);
    int16x8_t v68 = &v67->i8[a3];
    vst2_s8(v68, (int8x8x2_t)v63);
    int8x16_t v69 = (int8x16_t *)&v68[a3];
    *int8x16_t v69 = vzip2q_s8(v63, v66);
    int16x8_t v70 = a2[2];
    int16x8_t v71 = a2[3];
    *(int8x8_t *)v70.i8 = vqmovn_s16(v70);
    *(int8x8_t *)v71.i8 = vqmovn_s16(v71);
    int16x8_t v72 = a2[6];
    int16x8_t v73 = a2[7];
    *(int8x8_t *)v72.i8 = vqmovn_s16(v72);
    int16x8_t v74 = a2[10];
    int16x8_t v75 = a2[11];
    *(int8x8_t *)v74.i8 = vqmovn_s16(v74);
    *(int8x8_t *)v73.i8 = vqmovn_s16(v73);
    *(int8x8_t *)v75.i8 = vqmovn_s16(v75);
    int8x16_t v76 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v70, v71), (int8x16_t)v50), (uint8x16_t)v52);
    int8x16_t v77 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, v56)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), v56))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), v56)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), v56)));
    int8x16_t v78 = veorq_s8((int8x16_t)vzip1q_s16(v72, v74), (int8x16_t)v50);
    int8x16_t v79 = vzip1q_s8(v77, v78);
    int8x8_t result = veorq_s8((int8x16_t)vzip1q_s16(v73, v75), (int8x16_t)v50);
    int8x16_t v80 = vzip1q_s8(v76, result);
    vst2_s8(v7, (int8x8x2_t)v79);
    if (a4 >= 7)
    {
      v99.val[1] = (int8x8_t)vzip2q_s8(v76, result).u64[0];
      v99.val[0] = (int8x8_t)vzip2q_s8(v77, v78).u64[0];
      int16x8_t v81 = (int8x16_t *)&v7[a3];
      int8x8_t result = vzip2q_s8(v79, v80);
      int8x16_t *v81 = result;
      int16x8_t v82 = &v81->i8[a3];
      vst2_s8(v82, v99);
      return result;
    }
    if (a4 == 6) {
      goto LABEL_11;
    }
  }
  return result;
}

int8x16_t from_444_to_r408<2,4,(AlphaOutputMethod)1,true>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, int a6, int8x16_t result)
{
  int v7 = &a1[4 * a3];
  int v8 = (int8x16_t *)((char *)a5 + (8 * a6));
  uint64_t v9 = (2 * a6);
  if (a4 == 8)
  {
    int16x8_t v10 = *a2;
    int16x8_t v11 = a2[1];
    *(int8x8_t *)v10.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v11.i8 = vqmovn_s16(v11);
    int16x8_t v12 = a2[4];
    int16x8_t v13 = a2[5];
    *(int8x8_t *)v12.i8 = vqmovn_s16(v12);
    int16x8_t v14 = a2[8];
    int16x8_t v15 = a2[9];
    *(int8x8_t *)v14.i8 = vqmovn_s16(v14);
    *(int8x8_t *)v13.i8 = vqmovn_s16(v13);
    *(int8x8_t *)v15.i8 = vqmovn_s16(v15);
    int8x16_t v16 = (int8x16_t)vzip1q_s16(v10, v11);
    int8x16_t v17 = (int8x16_t)vzip1q_s16(v12, v14);
    int8x16_t v18 = (int8x16_t)vzip1q_s16(v13, v15);
    v10.i64[0] = 0x8080808080808080;
    v10.i64[1] = 0x8080808080808080;
    v12.i64[0] = 0x1010101010101010;
    v12.i64[1] = 0x1010101010101010;
    int8x16_t v19 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v16, (int8x16_t)v10), (uint8x16_t)v12);
    v16.i64[0] = 0xFF000000FFLL;
    v16.i64[1] = 0xFF000000FFLL;
    int8x16_t v20 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v16)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v16))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v16)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v16)));
    int8x16_t v21 = veorq_s8(v17, (int8x16_t)v10);
    int8x16_t v22 = vzip1q_s8(v20, v21);
    int8x16_t v23 = vzip2q_s8(v20, v21);
    int8x16_t v24 = veorq_s8(v18, (int8x16_t)v10);
    int8x16_t v25 = vzip1q_s8(v19, v24);
    int8x16_t v26 = vzip2q_s8(v19, v24);
    vst2_s8(a1, (int8x8x2_t)v22);
    int8x16_t v27 = (int8x16_t *)&a1[a3];
    *int8x16_t v27 = vzip2q_s8(v22, v25);
    int8x16_t v28 = &v27->i8[a3];
    vst2_s8(v28, (int8x8x2_t)v23);
    int8x16_t v29 = (int8x16_t *)&v28[a3];
    int8x16_t *v29 = vzip2q_s8(v23, v26);
    int16x8_t v30 = a2[2];
    int16x8_t v31 = a2[3];
    *(int8x8_t *)v30.i8 = vqmovn_s16(v30);
    *(int8x8_t *)v31.i8 = vqmovn_s16(v31);
    int16x8_t v32 = a2[6];
    int16x8_t v33 = a2[7];
    *(int8x8_t *)v32.i8 = vqmovn_s16(v32);
    int16x8_t v34 = a2[10];
    int16x8_t v35 = a2[11];
    *(int8x8_t *)v34.i8 = vqmovn_s16(v34);
    *(int8x8_t *)v33.i8 = vqmovn_s16(v33);
    *(int8x8_t *)v35.i8 = vqmovn_s16(v35);
    int8x16_t v36 = (int8x16_t)vzip1q_s16(v30, v31);
    int8x16_t v37 = (int8x16_t)vzip1q_s16(v32, v34);
    int8x16_t v38 = (int8x16_t)vzip1q_s16(v33, v35);
    int8x16_t v39 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v36, (int8x16_t)v10), (uint8x16_t)v12);
    int8x16_t v40 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, v16)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), v16))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), v16)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), v16)));
    int8x16_t v41 = veorq_s8(v37, (int8x16_t)v10);
    int8x16_t v42 = vzip1q_s8(v40, v41);
    int8x16_t v43 = vzip2q_s8(v40, v41);
    int8x16_t v44 = veorq_s8(v38, (int8x16_t)v10);
    int8x16_t v45 = vzip1q_s8(v39, v44);
    int8x16_t v46 = vzip2q_s8(v39, v44);
    vst2_s8(v7, (int8x8x2_t)v42);
    int16x8_t v47 = (int8x16_t *)&v7[a3];
    int8x16_t *v47 = vzip2q_s8(v42, v45);
    int16x8_t v48 = &v47->i8[a3];
    vst2_s8(v48, (int8x8x2_t)v43);
    int8x16_t v49 = (int8x16_t *)&v48[a3];
    int8x8_t result = vzip2q_s8(v43, v46);
    *int8x16_t v49 = result;
    return result;
  }
  if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v83 = *a2;
      int16x8_t v84 = a2[1];
      *(int8x8_t *)v83.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v84.i8 = vqmovn_s16(v84);
      int16x8_t v85 = a2[4];
      int16x8_t v86 = a2[5];
      *(int8x8_t *)v85.i8 = vqmovn_s16(v85);
      int16x8_t v87 = a2[8];
      int16x8_t v88 = a2[9];
      *(int8x8_t *)v87.i8 = vqmovn_s16(v87);
      *(int8x8_t *)v86.i8 = vqmovn_s16(v86);
      *(int8x8_t *)v88.i8 = vqmovn_s16(v88);
      int8x16_t v89 = (int8x16_t)vzip1q_s16(v83, v84);
      int8x16_t v90 = (int8x16_t)vzip1q_s16(v85, v87);
      int8x16_t v91 = (int8x16_t)vzip1q_s16(v86, v88);
      v92.i64[0] = 0x8080808080808080;
      v92.i64[1] = 0x8080808080808080;
      v85.i64[0] = 0x1010101010101010;
      v85.i64[1] = 0x1010101010101010;
      int8x8_t result = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v89, v92), (uint8x16_t)v85);
      v93.i64[0] = 0xFF000000FFLL;
      v93.i64[1] = 0xFF000000FFLL;
      int8x16_t v94 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v93)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v93))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v93)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v93)));
      int8x16_t v95 = veorq_s8(v90, v92);
      int8x16_t v96 = vzip1q_s8(v94, v95);
      int8x16_t v97 = veorq_s8(v91, v92);
      int8x16_t v98 = vzip1q_s8(result, v97);
      vst2_s8(a1, (int8x8x2_t)v96);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          int8x8_t result = vzip2q_s8(v96, v98);
          *(int8x16_t *)&a1[a3] = result;
        }
      }
      else
      {
        int8x16_t v79 = vzip2q_s8(v94, v95);
        int8x16_t v80 = vzip2q_s8(result, v97);
        int8x8_t result = vzip2q_s8(v96, v98);
        *(int8x16_t *)&a1[a3] = result;
        int v7 = &a1[a3 + a3];
        vst2_s8(v7, (int8x8x2_t)v79);
        if (a4 == 4)
        {
LABEL_11:
          int8x8_t result = vzip2q_s8(v79, v80);
          *(int8x16_t *)&v7[a3] = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v50 = *a2;
    int16x8_t v51 = a2[1];
    *(int8x8_t *)v50.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v51.i8 = vqmovn_s16(v51);
    int16x8_t v52 = a2[4];
    int16x8_t v53 = a2[5];
    *(int8x8_t *)v52.i8 = vqmovn_s16(v52);
    int16x8_t v54 = a2[8];
    int16x8_t v55 = a2[9];
    *(int8x8_t *)v54.i8 = vqmovn_s16(v54);
    *(int8x8_t *)v53.i8 = vqmovn_s16(v53);
    *(int8x8_t *)v55.i8 = vqmovn_s16(v55);
    int8x16_t v56 = (int8x16_t)vzip1q_s16(v50, v51);
    int8x16_t v57 = (int8x16_t)vzip1q_s16(v52, v54);
    int8x16_t v58 = (int8x16_t)vzip1q_s16(v53, v55);
    v50.i64[0] = 0x8080808080808080;
    v50.i64[1] = 0x8080808080808080;
    v52.i64[0] = 0x1010101010101010;
    v52.i64[1] = 0x1010101010101010;
    int8x16_t v59 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v56, (int8x16_t)v50), (uint8x16_t)v52);
    v56.i64[0] = 0xFF000000FFLL;
    v56.i64[1] = 0xFF000000FFLL;
    int8x16_t v60 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v56)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9), v56))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9), v56)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v9 + v9 + v9), v56)));
    int8x16_t v61 = veorq_s8(v57, (int8x16_t)v50);
    int8x16_t v62 = vzip1q_s8(v60, v61);
    int8x16_t v63 = vzip2q_s8(v60, v61);
    int8x16_t v64 = veorq_s8(v58, (int8x16_t)v50);
    int8x16_t v65 = vzip1q_s8(v59, v64);
    int8x16_t v66 = vzip2q_s8(v59, v64);
    vst2_s8(a1, (int8x8x2_t)v62);
    int16x8_t v67 = (int8x16_t *)&a1[a3];
    *int16x8_t v67 = vzip2q_s8(v62, v65);
    int16x8_t v68 = &v67->i8[a3];
    vst2_s8(v68, (int8x8x2_t)v63);
    int8x16_t v69 = (int8x16_t *)&v68[a3];
    *int8x16_t v69 = vzip2q_s8(v63, v66);
    int16x8_t v70 = a2[2];
    int16x8_t v71 = a2[3];
    *(int8x8_t *)v70.i8 = vqmovn_s16(v70);
    *(int8x8_t *)v71.i8 = vqmovn_s16(v71);
    int16x8_t v72 = a2[6];
    int16x8_t v73 = a2[7];
    *(int8x8_t *)v72.i8 = vqmovn_s16(v72);
    int16x8_t v74 = a2[10];
    int16x8_t v75 = a2[11];
    *(int8x8_t *)v74.i8 = vqmovn_s16(v74);
    *(int8x8_t *)v73.i8 = vqmovn_s16(v73);
    *(int8x8_t *)v75.i8 = vqmovn_s16(v75);
    int8x16_t v76 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v70, v71), (int8x16_t)v50), (uint8x16_t)v52);
    int8x16_t v77 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*v8, v56)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9), v56))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9), v56)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)v8 + v9 + v9 + v9), v56)));
    int8x16_t v78 = veorq_s8((int8x16_t)vzip1q_s16(v72, v74), (int8x16_t)v50);
    int8x16_t v79 = vzip1q_s8(v77, v78);
    int8x8_t result = veorq_s8((int8x16_t)vzip1q_s16(v73, v75), (int8x16_t)v50);
    int8x16_t v80 = vzip1q_s8(v76, result);
    vst2_s8(v7, (int8x8x2_t)v79);
    if (a4 >= 7)
    {
      v99.val[1] = (int8x8_t)vzip2q_s8(v76, result).u64[0];
      v99.val[0] = (int8x8_t)vzip2q_s8(v77, v78).u64[0];
      int16x8_t v81 = (int8x16_t *)&v7[a3];
      int8x8_t result = vzip2q_s8(v79, v80);
      int8x16_t *v81 = result;
      int16x8_t v82 = &v81->i8[a3];
      vst2_s8(v82, v99);
      return result;
    }
    if (a4 == 6) {
      goto LABEL_11;
    }
  }
  return result;
}

void from_444_to_r408<2,2,(AlphaOutputMethod)1,false>(__int16 *a1, uint64_t a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (4 * a6);
  v7.i64[0] = 0x8080808080808080;
  v7.i64[1] = 0x8080808080808080;
  v8.i64[0] = 0x1010101010101010;
  v8.i64[1] = 0x1010101010101010;
  int8x16_t v9 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v7), v8);
  v10.i64[0] = 0xFF000000FFLL;
  v10.i64[1] = 0xFF000000FFLL;
  int8x16_t v11 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v10)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6), v10))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6), v10)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6 + v6), v10)));
  int16x4x2_t v12 = (int16x4x2_t)vzip1q_s8(v11, v9);
  int16x4x2_t v13 = (int16x4x2_t)vzip2q_s8(v11, v9);
  int16x8_t v14 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48));
  int16x8_t v15 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 64)), *(int16x8_t *)(a2 + 80));
  int64x2_t v16 = (int64x2_t)vzip1q_s16(v14, v15);
  int64x2_t v17 = (int64x2_t)vzip2q_s16(v14, v15);
  int16x8_t v18 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v16, (int8x16_t)vdupq_laneq_s64(v16, 1)), v7);
  int16x8_t v19 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v17, (int8x16_t)vdupq_laneq_s64(v17, 1)), v7);
  if (a4 == 4)
  {
    uint64_t v20 = a3;
    vst2_s16(a1, v12);
    int8x16_t v21 = (int16x8_t *)((char *)a1 + v20);
    *int8x16_t v21 = vzip2q_s16((int16x8_t)v12, v18);
    int8x16_t v22 = (__int16 *)((char *)v21->i16 + a3);
    vst2_s16(v22, v13);
    int8x16_t v23 = (int16x8_t *)((char *)v22 + v20);
    *int8x16_t v23 = vzip2q_s16((int16x8_t)v13, v19);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v12);
    }
  }
  else
  {
    uint64_t v24 = a3;
    vst2_s16(a1, v12);
    int8x16_t v25 = (int16x8_t *)((char *)a1 + v24);
    *int8x16_t v25 = vzip2q_s16((int16x8_t)v12, v18);
    if (a4 == 3)
    {
      int8x16_t v26 = (__int16 *)((char *)v25->i16 + a3);
      vst2_s16(v26, v13);
    }
  }
}

void from_444_to_r408<2,2,(AlphaOutputMethod)1,true>(__int16 *a1, uint64_t a2, int a3, int a4, int8x16_t *a5, int a6)
{
  uint64_t v6 = (4 * a6);
  v7.i64[0] = 0x8080808080808080;
  v7.i64[1] = 0x8080808080808080;
  v8.i64[0] = 0x1010101010101010;
  v8.i64[1] = 0x1010101010101010;
  int8x16_t v9 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v7), v8);
  v10.i64[0] = 0xFF000000FFLL;
  v10.i64[1] = 0xFF000000FFLL;
  int8x16_t v11 = vqmovun_high_s16(vqmovun_s16(vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*a5, v10)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6), v10))), vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6), v10)), (int32x4_t)vandq_s8(*(int8x16_t *)((char *)a5 + v6 + v6 + v6), v10)));
  int16x4x2_t v12 = (int16x4x2_t)vzip1q_s8(v11, v9);
  int16x4x2_t v13 = (int16x4x2_t)vzip2q_s8(v11, v9);
  int16x8_t v14 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48));
  int16x8_t v15 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 64)), *(int16x8_t *)(a2 + 80));
  int64x2_t v16 = (int64x2_t)vzip1q_s16(v14, v15);
  int64x2_t v17 = (int64x2_t)vzip2q_s16(v14, v15);
  int16x8_t v18 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v16, (int8x16_t)vdupq_laneq_s64(v16, 1)), v7);
  int16x8_t v19 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v17, (int8x16_t)vdupq_laneq_s64(v17, 1)), v7);
  if (a4 == 4)
  {
    uint64_t v20 = a3;
    vst2_s16(a1, v12);
    int8x16_t v21 = (int16x8_t *)((char *)a1 + v20);
    *int8x16_t v21 = vzip2q_s16((int16x8_t)v12, v18);
    int8x16_t v22 = (__int16 *)((char *)v21->i16 + a3);
    vst2_s16(v22, v13);
    int8x16_t v23 = (int16x8_t *)((char *)v22 + v20);
    *int8x16_t v23 = vzip2q_s16((int16x8_t)v13, v19);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v12);
    }
  }
  else
  {
    uint64_t v24 = a3;
    vst2_s16(a1, v12);
    int8x16_t v25 = (int16x8_t *)((char *)a1 + v24);
    *int8x16_t v25 = vzip2q_s16((int16x8_t)v12, v18);
    if (a4 == 3)
    {
      int8x16_t v26 = (__int16 *)((char *)v25->i16 + a3);
      vst2_s16(v26, v13);
    }
  }
}

unsigned char *from_444_to_r408<2,1,(AlphaOutputMethod)1,false>(unsigned char *a1, uint64_t a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 1);
}

unsigned char *from_444_to_r408<2,1,(AlphaOutputMethod)1,true>(unsigned char *a1, uint64_t a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 1);
}

unsigned char *from_444_to_r408<1,2,(AlphaOutputMethod)1,false>(unsigned char *a1, uint64_t a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 2);
}

unsigned char *from_444_to_r408<1,2,(AlphaOutputMethod)1,true>(unsigned char *a1, uint64_t a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 2);
}

unsigned char *from_444_to_r408<1,1,(AlphaOutputMethod)1,false>(unsigned char *a1, uint64_t a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 1);
}

unsigned char *from_444_to_r408<1,1,(AlphaOutputMethod)1,true>(unsigned char *a1, uint64_t a2, int a3, int a4, unsigned char *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 1);
}

int8x16_t *from_444_to_r408<8,8,(AlphaOutputMethod)2,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int16x8_t v30 = a2 + 8;
    int16x8_t v31 = a2 + 32;
    int16x8_t v32 = a2 + 40;
    int16x8_t v33 = a2 + 64;
    int16x8_t v34 = a2 + 72;
    int v36 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x1010101010101010;
  v7.i64[1] = 0x1010101010101010;
  v8.i64[0] = -1;
  v8.i64[1] = -1;
  int8x16_t v9 = (char *)result;
  do
  {
    int8x16_t v10 = a2 + 1;
    int8x16_t v11 = (int8x16_t *)((char *)result + 8 * a3);
    int8x16_t v12 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6), v7);
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]), v6);
    int8x16_t v14 = vzip1q_s8(v8, v13);
    int8x16_t v15 = vzip2q_s8(v8, v13);
    int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]), v6);
    int8x16_t v17 = vzip1q_s8(v12, v16);
    int8x16_t v18 = vzip2q_s8(v12, v16);
    vst2_s8(v9, (int8x8x2_t)v14);
    v9 += a3;
    result[1] = vzip2q_s8(v14, v17);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v15);
    result[3] = vzip2q_s8(v15, v18);
    int8x8_t result = (int8x16_t *)v9;
    int8x16_t v20 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6), v7);
    int8x16_t v21 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]), v6);
    int8x16_t v22 = vzip1q_s8(v8, v21);
    int8x16_t v23 = vzip2q_s8(v8, v21);
    int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]), v6);
    int8x16_t v25 = vzip1q_s8(v20, v24);
    int8x16_t v26 = vzip2q_s8(v20, v24);
    int8x16_t v27 = (char *)v11;
    vst2_s8(v27, (int8x8x2_t)v22);
    v27 += 16;
    *(int8x16_t *)int8x16_t v27 = vzip2q_s8(v22, v25);
    int8x16_t v28 = v11[2].i8;
    vst2_s8(v28, (int8x8x2_t)v23);
    v11[3] = vzip2q_s8(v23, v26);
    int v29 = v5 - 1;
    LODWORD(v11) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v11 > 1);
  int16x8_t v30 = v10 + 8;
  int16x8_t v31 = v10 + 32;
  int16x8_t v32 = v10 + 40;
  int16x8_t v33 = v10 + 64;
  int16x8_t v34 = v10 + 72;
  if (a4 <= 8) {
    int v35 = 8;
  }
  else {
    int v35 = a4;
  }
  int v36 = v29 - v35;
  a2 = v10;
  if (v36 >= 1)
  {
LABEL_13:
    int8x16_t v37 = result + 2;
    unsigned int v38 = v36 + 1;
    v39.i64[0] = 0x8080808080808080;
    v39.i64[1] = 0x8080808080808080;
    v40.i64[0] = 0x1010101010101010;
    v40.i64[1] = 0x1010101010101010;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = result[2].i8;
    do
    {
      int16x8_t v43 = *a2++;
      int16x8_t v44 = v43;
      int16x8_t v45 = *v30++;
      int16x8_t v46 = v45;
      int16x8_t v47 = v37[-2].i8;
      int16x8_t v48 = *v31++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v33++;
      int16x8_t v51 = v50;
      int8x16_t v52 = vqmovn_high_s16(vqmovn_s16(v44), v46);
      *(int8x8_t *)v46.i8 = vqmovn_s16(v49);
      int16x8_t v53 = *v32++;
      int16x8_t v54 = v53;
      int16x8_t v55 = *v34++;
      int8x16_t v56 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v52, v39), v40);
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(*(int8x8_t *)v46.i8, v51), v39);
      int8x16_t v58 = vzip1q_s8(v41, v57);
      int8x16_t v59 = vzip2q_s8(v41, v57);
      int8x16_t v60 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v54), v55), v39);
      int8x16_t v61 = vzip1q_s8(v56, v60);
      vst2_s8(v47, (int8x8x2_t)v58);
      int8x16_t v62 = vzip2q_s8(v56, v60);
      v37[-1] = vzip2q_s8(v58, v61);
      vst2_s8(v42, (int8x8x2_t)v59);
      v42 += a3;
      v37[1] = vzip2q_s8(v59, v62);
      --v38;
      int8x16_t v37 = (int8x16_t *)v42;
    }
    while (v38 > 1);
  }
  return result;
}

int8x16_t *from_444_to_r408<8,8,(AlphaOutputMethod)2,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int16x8_t v30 = a2 + 8;
    int16x8_t v31 = a2 + 32;
    int16x8_t v32 = a2 + 40;
    int16x8_t v33 = a2 + 64;
    int16x8_t v34 = a2 + 72;
    int v36 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x1010101010101010;
  v7.i64[1] = 0x1010101010101010;
  v8.i64[0] = -1;
  v8.i64[1] = -1;
  int8x16_t v9 = (char *)result;
  do
  {
    int8x16_t v10 = a2 + 1;
    int8x16_t v11 = (int8x16_t *)((char *)result + 8 * a3);
    int8x16_t v12 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6), v7);
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]), v6);
    int8x16_t v14 = vzip1q_s8(v8, v13);
    int8x16_t v15 = vzip2q_s8(v8, v13);
    int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]), v6);
    int8x16_t v17 = vzip1q_s8(v12, v16);
    int8x16_t v18 = vzip2q_s8(v12, v16);
    vst2_s8(v9, (int8x8x2_t)v14);
    v9 += a3;
    result[1] = vzip2q_s8(v14, v17);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v15);
    result[3] = vzip2q_s8(v15, v18);
    int8x8_t result = (int8x16_t *)v9;
    int8x16_t v20 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6), v7);
    int8x16_t v21 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]), v6);
    int8x16_t v22 = vzip1q_s8(v8, v21);
    int8x16_t v23 = vzip2q_s8(v8, v21);
    int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]), v6);
    int8x16_t v25 = vzip1q_s8(v20, v24);
    int8x16_t v26 = vzip2q_s8(v20, v24);
    int8x16_t v27 = (char *)v11;
    vst2_s8(v27, (int8x8x2_t)v22);
    v27 += 16;
    *(int8x16_t *)int8x16_t v27 = vzip2q_s8(v22, v25);
    int8x16_t v28 = v11[2].i8;
    vst2_s8(v28, (int8x8x2_t)v23);
    v11[3] = vzip2q_s8(v23, v26);
    int v29 = v5 - 1;
    LODWORD(v11) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v11 > 1);
  int16x8_t v30 = v10 + 8;
  int16x8_t v31 = v10 + 32;
  int16x8_t v32 = v10 + 40;
  int16x8_t v33 = v10 + 64;
  int16x8_t v34 = v10 + 72;
  if (a4 <= 8) {
    int v35 = 8;
  }
  else {
    int v35 = a4;
  }
  int v36 = v29 - v35;
  a2 = v10;
  if (v36 >= 1)
  {
LABEL_13:
    int8x16_t v37 = result + 2;
    unsigned int v38 = v36 + 1;
    v39.i64[0] = 0x8080808080808080;
    v39.i64[1] = 0x8080808080808080;
    v40.i64[0] = 0x1010101010101010;
    v40.i64[1] = 0x1010101010101010;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = result[2].i8;
    do
    {
      int16x8_t v43 = *a2++;
      int16x8_t v44 = v43;
      int16x8_t v45 = *v30++;
      int16x8_t v46 = v45;
      int16x8_t v47 = v37[-2].i8;
      int16x8_t v48 = *v31++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v33++;
      int16x8_t v51 = v50;
      int8x16_t v52 = vqmovn_high_s16(vqmovn_s16(v44), v46);
      *(int8x8_t *)v46.i8 = vqmovn_s16(v49);
      int16x8_t v53 = *v32++;
      int16x8_t v54 = v53;
      int16x8_t v55 = *v34++;
      int8x16_t v56 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v52, v39), v40);
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(*(int8x8_t *)v46.i8, v51), v39);
      int8x16_t v58 = vzip1q_s8(v41, v57);
      int8x16_t v59 = vzip2q_s8(v41, v57);
      int8x16_t v60 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v54), v55), v39);
      int8x16_t v61 = vzip1q_s8(v56, v60);
      vst2_s8(v47, (int8x8x2_t)v58);
      int8x16_t v62 = vzip2q_s8(v56, v60);
      v37[-1] = vzip2q_s8(v58, v61);
      vst2_s8(v42, (int8x8x2_t)v59);
      v42 += a3;
      v37[1] = vzip2q_s8(v59, v62);
      --v38;
      int8x16_t v37 = (int8x16_t *)v42;
    }
    while (v38 > 1);
  }
  return result;
}

int8x16_t *from_444_to_r408<8,4,(AlphaOutputMethod)2,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 4) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 4;
  }
  if (!v4)
  {
    int16x8_t v30 = a2 + 4;
    int16x8_t v31 = a2 + 16;
    int16x8_t v32 = a2 + 20;
    int16x8_t v33 = a2 + 32;
    int16x8_t v34 = a2 + 36;
    int v36 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 4;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x1010101010101010;
  v7.i64[1] = 0x1010101010101010;
  v8.i64[0] = -1;
  v8.i64[1] = -1;
  int8x16_t v9 = (char *)result;
  do
  {
    int8x16_t v10 = a2 + 1;
    int8x16_t v11 = (int8x16_t *)((char *)result + 4 * a3);
    int8x16_t v12 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v6), v7);
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[32]), v6);
    int8x16_t v14 = vzip1q_s8(v8, v13);
    int8x16_t v15 = vzip2q_s8(v8, v13);
    int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[20]), a2[36]), v6);
    int8x16_t v17 = vzip1q_s8(v12, v16);
    int8x16_t v18 = vzip2q_s8(v12, v16);
    vst2_s8(v9, (int8x8x2_t)v14);
    v9 += a3;
    result[1] = vzip2q_s8(v14, v17);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v15);
    result[3] = vzip2q_s8(v15, v18);
    int8x8_t result = (int8x16_t *)v9;
    int8x16_t v20 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v6), v7);
    int8x16_t v21 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[40]), v6);
    int8x16_t v22 = vzip1q_s8(v8, v21);
    int8x16_t v23 = vzip2q_s8(v8, v21);
    int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[28]), a2[44]), v6);
    int8x16_t v25 = vzip1q_s8(v20, v24);
    int8x16_t v26 = vzip2q_s8(v20, v24);
    int8x16_t v27 = (char *)v11;
    vst2_s8(v27, (int8x8x2_t)v22);
    v27 += 16;
    *(int8x16_t *)int8x16_t v27 = vzip2q_s8(v22, v25);
    int8x16_t v28 = v11[2].i8;
    vst2_s8(v28, (int8x8x2_t)v23);
    v11[3] = vzip2q_s8(v23, v26);
    int v29 = v5 - 1;
    LODWORD(v11) = v5 - 8;
    --v5;
    ++a2;
  }
  while ((int)v11 > 1);
  int16x8_t v30 = v10 + 4;
  int16x8_t v31 = v10 + 16;
  int16x8_t v32 = v10 + 20;
  int16x8_t v33 = v10 + 32;
  int16x8_t v34 = v10 + 36;
  if (a4 <= 4) {
    int v35 = 4;
  }
  else {
    int v35 = a4;
  }
  int v36 = v29 - v35;
  a2 = v10;
  if (v36 >= 1)
  {
LABEL_13:
    int8x16_t v37 = result + 2;
    unsigned int v38 = v36 + 1;
    v39.i64[0] = 0x8080808080808080;
    v39.i64[1] = 0x8080808080808080;
    v40.i64[0] = 0x1010101010101010;
    v40.i64[1] = 0x1010101010101010;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = result[2].i8;
    do
    {
      int16x8_t v43 = *a2++;
      int16x8_t v44 = v43;
      int16x8_t v45 = *v30++;
      int16x8_t v46 = v45;
      int16x8_t v47 = v37[-2].i8;
      int16x8_t v48 = *v31++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v33++;
      int16x8_t v51 = v50;
      int8x16_t v52 = vqmovn_high_s16(vqmovn_s16(v44), v46);
      *(int8x8_t *)v46.i8 = vqmovn_s16(v49);
      int16x8_t v53 = *v32++;
      int16x8_t v54 = v53;
      int16x8_t v55 = *v34++;
      int8x16_t v56 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v52, v39), v40);
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(*(int8x8_t *)v46.i8, v51), v39);
      int8x16_t v58 = vzip1q_s8(v41, v57);
      int8x16_t v59 = vzip2q_s8(v41, v57);
      int8x16_t v60 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v54), v55), v39);
      int8x16_t v61 = vzip1q_s8(v56, v60);
      vst2_s8(v47, (int8x8x2_t)v58);
      int8x16_t v62 = vzip2q_s8(v56, v60);
      v37[-1] = vzip2q_s8(v58, v61);
      vst2_s8(v42, (int8x8x2_t)v59);
      v42 += a3;
      v37[1] = vzip2q_s8(v59, v62);
      --v38;
      int8x16_t v37 = (int8x16_t *)v42;
    }
    while (v38 > 1);
  }
  return result;
}

int8x16_t *from_444_to_r408<8,4,(AlphaOutputMethod)2,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 4) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 4;
  }
  if (!v4)
  {
    int16x8_t v30 = a2 + 4;
    int16x8_t v31 = a2 + 16;
    int16x8_t v32 = a2 + 20;
    int16x8_t v33 = a2 + 32;
    int16x8_t v34 = a2 + 36;
    int v36 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 4;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x1010101010101010;
  v7.i64[1] = 0x1010101010101010;
  v8.i64[0] = -1;
  v8.i64[1] = -1;
  int8x16_t v9 = (char *)result;
  do
  {
    int8x16_t v10 = a2 + 1;
    int8x16_t v11 = (int8x16_t *)((char *)result + 4 * a3);
    int8x16_t v12 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[4]), v6), v7);
    int8x16_t v13 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[32]), v6);
    int8x16_t v14 = vzip1q_s8(v8, v13);
    int8x16_t v15 = vzip2q_s8(v8, v13);
    int8x16_t v16 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[20]), a2[36]), v6);
    int8x16_t v17 = vzip1q_s8(v12, v16);
    int8x16_t v18 = vzip2q_s8(v12, v16);
    vst2_s8(v9, (int8x8x2_t)v14);
    v9 += a3;
    result[1] = vzip2q_s8(v14, v17);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v15);
    result[3] = vzip2q_s8(v15, v18);
    int8x8_t result = (int8x16_t *)v9;
    int8x16_t v20 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[8]), a2[12]), v6), v7);
    int8x16_t v21 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[24]), a2[40]), v6);
    int8x16_t v22 = vzip1q_s8(v8, v21);
    int8x16_t v23 = vzip2q_s8(v8, v21);
    int8x16_t v24 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[28]), a2[44]), v6);
    int8x16_t v25 = vzip1q_s8(v20, v24);
    int8x16_t v26 = vzip2q_s8(v20, v24);
    int8x16_t v27 = (char *)v11;
    vst2_s8(v27, (int8x8x2_t)v22);
    v27 += 16;
    *(int8x16_t *)int8x16_t v27 = vzip2q_s8(v22, v25);
    int8x16_t v28 = v11[2].i8;
    vst2_s8(v28, (int8x8x2_t)v23);
    v11[3] = vzip2q_s8(v23, v26);
    int v29 = v5 - 1;
    LODWORD(v11) = v5 - 8;
    --v5;
    ++a2;
  }
  while ((int)v11 > 1);
  int16x8_t v30 = v10 + 4;
  int16x8_t v31 = v10 + 16;
  int16x8_t v32 = v10 + 20;
  int16x8_t v33 = v10 + 32;
  int16x8_t v34 = v10 + 36;
  if (a4 <= 4) {
    int v35 = 4;
  }
  else {
    int v35 = a4;
  }
  int v36 = v29 - v35;
  a2 = v10;
  if (v36 >= 1)
  {
LABEL_13:
    int8x16_t v37 = result + 2;
    unsigned int v38 = v36 + 1;
    v39.i64[0] = 0x8080808080808080;
    v39.i64[1] = 0x8080808080808080;
    v40.i64[0] = 0x1010101010101010;
    v40.i64[1] = 0x1010101010101010;
    v41.i64[0] = -1;
    v41.i64[1] = -1;
    int8x16_t v42 = result[2].i8;
    do
    {
      int16x8_t v43 = *a2++;
      int16x8_t v44 = v43;
      int16x8_t v45 = *v30++;
      int16x8_t v46 = v45;
      int16x8_t v47 = v37[-2].i8;
      int16x8_t v48 = *v31++;
      int16x8_t v49 = v48;
      int16x8_t v50 = *v33++;
      int16x8_t v51 = v50;
      int8x16_t v52 = vqmovn_high_s16(vqmovn_s16(v44), v46);
      *(int8x8_t *)v46.i8 = vqmovn_s16(v49);
      int16x8_t v53 = *v32++;
      int16x8_t v54 = v53;
      int16x8_t v55 = *v34++;
      int8x16_t v56 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v52, v39), v40);
      int8x16_t v57 = veorq_s8(vqmovn_high_s16(*(int8x8_t *)v46.i8, v51), v39);
      int8x16_t v58 = vzip1q_s8(v41, v57);
      int8x16_t v59 = vzip2q_s8(v41, v57);
      int8x16_t v60 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v54), v55), v39);
      int8x16_t v61 = vzip1q_s8(v56, v60);
      vst2_s8(v47, (int8x8x2_t)v58);
      int8x16_t v62 = vzip2q_s8(v56, v60);
      v37[-1] = vzip2q_s8(v58, v61);
      vst2_s8(v42, (int8x8x2_t)v59);
      v42 += a3;
      v37[1] = vzip2q_s8(v59, v62);
      --v38;
      int8x16_t v37 = (int8x16_t *)v42;
    }
    while (v38 > 1);
  }
  return result;
}

void from_444_to_r408<4,8,(AlphaOutputMethod)2,false>(char *a1, int16x8_t *a2, int a3, int a4)
{
}

void from_444_to_r408<4,8,(AlphaOutputMethod)2,true>(char *a1, int16x8_t *a2, int a3, int a4)
{
}

void from_444_to_r408<4,4,(AlphaOutputMethod)2,false>(char *a1, int16x8_t *a2, int a3, int a4)
{
}

void from_444_to_r408<4,4,(AlphaOutputMethod)2,true>(char *a1, int16x8_t *a2, int a3, int a4)
{
}

void from_444_to_r408<4,2,(AlphaOutputMethod)2,false>(char *a1, int16x8_t *a2, int a3, int a4)
{
}

void from_444_to_r408<4,2,(AlphaOutputMethod)2,true>(char *a1, int16x8_t *a2, int a3, int a4)
{
}

int8x16_t from_444_to_r408<2,4,(AlphaOutputMethod)2,false>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  int v5 = &a1[4 * a3];
  if (a4 == 8)
  {
    int16x8_t v6 = *a2;
    int16x8_t v7 = a2[1];
    *(int8x8_t *)v6.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v7.i8 = vqmovn_s16(v7);
    int16x8_t v8 = a2[4];
    int16x8_t v9 = a2[5];
    *(int8x8_t *)v8.i8 = vqmovn_s16(v8);
    int16x8_t v10 = a2[8];
    int16x8_t v11 = a2[9];
    *(int8x8_t *)v10.i8 = vqmovn_s16(v10);
    *(int8x8_t *)v9.i8 = vqmovn_s16(v9);
    *(int8x8_t *)v11.i8 = vqmovn_s16(v11);
    int8x16_t v12 = (int8x16_t)vzip1q_s16(v6, v7);
    int8x16_t v13 = (int8x16_t)vzip1q_s16(v8, v10);
    int8x16_t v14 = (int8x16_t)vzip1q_s16(v9, v11);
    v9.i64[0] = 0x8080808080808080;
    v9.i64[1] = 0x8080808080808080;
    v10.i64[0] = 0x1010101010101010;
    v10.i64[1] = 0x1010101010101010;
    int8x16_t v15 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v12, (int8x16_t)v9), (uint8x16_t)v10);
    int8x16_t v16 = veorq_s8(v13, (int8x16_t)v9);
    v11.i64[0] = -1;
    v11.i64[1] = -1;
    int8x16_t v17 = vzip1q_s8((int8x16_t)v11, v16);
    int8x16_t v18 = vzip2q_s8((int8x16_t)v11, v16);
    int8x16_t v19 = veorq_s8(v14, (int8x16_t)v9);
    int8x16_t v20 = vzip1q_s8(v15, v19);
    int8x16_t v21 = vzip2q_s8(v15, v19);
    vst2_s8(a1, (int8x8x2_t)v17);
    int8x16_t v22 = (int8x16_t *)&a1[a3];
    int8x16_t *v22 = vzip2q_s8(v17, v20);
    int8x16_t v23 = &v22->i8[a3];
    vst2_s8(v23, (int8x8x2_t)v18);
    int8x16_t v24 = (int8x16_t *)&v23[a3];
    int8x16_t *v24 = vzip2q_s8(v18, v21);
    int16x8_t v25 = a2[2];
    int16x8_t v26 = a2[3];
    *(int8x8_t *)v25.i8 = vqmovn_s16(v25);
    *(int8x8_t *)v26.i8 = vqmovn_s16(v26);
    int16x8_t v27 = a2[6];
    int16x8_t v28 = a2[7];
    *(int8x8_t *)v27.i8 = vqmovn_s16(v27);
    int16x8_t v29 = a2[10];
    int16x8_t v30 = a2[11];
    *(int8x8_t *)v29.i8 = vqmovn_s16(v29);
    *(int8x8_t *)v28.i8 = vqmovn_s16(v28);
    *(int8x8_t *)v30.i8 = vqmovn_s16(v30);
    int8x16_t v31 = (int8x16_t)vzip1q_s16(v25, v26);
    int8x16_t v32 = (int8x16_t)vzip1q_s16(v27, v29);
    int8x16_t v33 = (int8x16_t)vzip1q_s16(v28, v30);
    int8x16_t v34 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v31, (int8x16_t)v9), (uint8x16_t)v10);
    int8x16_t v35 = veorq_s8(v32, (int8x16_t)v9);
    int8x16_t v36 = vzip1q_s8((int8x16_t)v11, v35);
    int8x16_t v37 = vzip2q_s8((int8x16_t)v11, v35);
    int8x16_t v38 = veorq_s8(v33, (int8x16_t)v9);
    int8x16_t v39 = vzip1q_s8(v34, v38);
    int8x16_t v40 = vzip2q_s8(v34, v38);
    vst2_s8(v5, (int8x8x2_t)v36);
    int8x16_t v41 = (int8x16_t *)&v5[a3];
    *int8x16_t v41 = vzip2q_s8(v36, v39);
    int8x16_t v42 = &v41->i8[a3];
    vst2_s8(v42, (int8x8x2_t)v37);
    int16x8_t v43 = (int8x16_t *)&v42[a3];
    int8x8_t result = vzip2q_s8(v37, v40);
    *int16x8_t v43 = result;
  }
  else if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v76 = *a2;
      int16x8_t v77 = a2[1];
      *(int8x8_t *)v76.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v77.i8 = vqmovn_s16(v77);
      int16x8_t v78 = a2[4];
      int16x8_t v79 = a2[5];
      *(int8x8_t *)v78.i8 = vqmovn_s16(v78);
      int16x8_t v80 = a2[8];
      int16x8_t v81 = a2[9];
      *(int8x8_t *)v80.i8 = vqmovn_s16(v80);
      *(int8x8_t *)v79.i8 = vqmovn_s16(v79);
      *(int8x8_t *)v81.i8 = vqmovn_s16(v81);
      int8x16_t v82 = (int8x16_t)vzip1q_s16(v76, v77);
      int8x16_t v83 = (int8x16_t)vzip1q_s16(v78, v80);
      int8x16_t v84 = (int8x16_t)vzip1q_s16(v79, v81);
      v85.i64[0] = 0x8080808080808080;
      v85.i64[1] = 0x8080808080808080;
      v78.i64[0] = 0x1010101010101010;
      v78.i64[1] = 0x1010101010101010;
      int8x16_t v86 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v82, v85), (uint8x16_t)v78);
      int8x16_t v87 = veorq_s8(v83, v85);
      v88.i64[0] = -1;
      v88.i64[1] = -1;
      int8x8_t result = vzip1q_s8(v88, v87);
      int8x16_t v89 = veorq_s8(v84, v85);
      int8x16_t v90 = vzip1q_s8(v86, v89);
      vst2_s8(a1, (int8x8x2_t)result);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          int8x8_t result = vzip2q_s8(result, v90);
          *(int8x16_t *)&a1[a3] = result;
        }
      }
      else
      {
        int8x16_t v91 = vzip2q_s8(v88, v87);
        int8x16_t v92 = vzip2q_s8(v86, v89);
        int8x8_t result = vzip2q_s8(result, v90);
        *(int8x16_t *)&a1[a3] = result;
        int8x16_t v93 = &a1[a3 + a3];
        vst2_s8(v93, (int8x8x2_t)v91);
        if (a4 == 4)
        {
          int8x8_t result = vzip2q_s8(v91, v92);
          *(int8x16_t *)&v93[a3] = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v44 = *a2;
    int16x8_t v45 = a2[1];
    *(int8x8_t *)v44.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v45.i8 = vqmovn_s16(v45);
    int16x8_t v46 = a2[4];
    int16x8_t v47 = a2[5];
    *(int8x8_t *)v46.i8 = vqmovn_s16(v46);
    int16x8_t v48 = a2[8];
    int16x8_t v49 = a2[9];
    *(int8x8_t *)v48.i8 = vqmovn_s16(v48);
    *(int8x8_t *)v47.i8 = vqmovn_s16(v47);
    *(int8x8_t *)v49.i8 = vqmovn_s16(v49);
    int8x16_t v50 = (int8x16_t)vzip1q_s16(v44, v45);
    int8x16_t v51 = (int8x16_t)vzip1q_s16(v46, v48);
    int8x16_t v52 = (int8x16_t)vzip1q_s16(v47, v49);
    v49.i64[0] = 0x8080808080808080;
    v49.i64[1] = 0x8080808080808080;
    v47.i64[0] = 0x1010101010101010;
    v47.i64[1] = 0x1010101010101010;
    int8x16_t v53 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v50, (int8x16_t)v49), (uint8x16_t)v47);
    int8x16_t v54 = veorq_s8(v51, (int8x16_t)v49);
    result.i64[0] = -1;
    result.i64[1] = -1;
    int8x16_t v55 = vzip1q_s8(result, v54);
    int8x16_t v56 = vzip2q_s8(result, v54);
    int8x16_t v57 = veorq_s8(v52, (int8x16_t)v49);
    int8x16_t v58 = vzip1q_s8(v53, v57);
    int8x16_t v59 = vzip2q_s8(v53, v57);
    vst2_s8(a1, (int8x8x2_t)v55);
    int8x16_t v60 = (int8x16_t *)&a1[a3];
    *int8x16_t v60 = vzip2q_s8(v55, v58);
    int8x16_t v61 = &v60->i8[a3];
    vst2_s8(v61, (int8x8x2_t)v56);
    int8x16_t v62 = (int8x16_t *)&v61[a3];
    *int8x16_t v62 = vzip2q_s8(v56, v59);
    int16x8_t v63 = a2[2];
    int16x8_t v64 = a2[3];
    *(int8x8_t *)v63.i8 = vqmovn_s16(v63);
    *(int8x8_t *)v64.i8 = vqmovn_s16(v64);
    int16x8_t v65 = a2[6];
    int16x8_t v66 = a2[7];
    *(int8x8_t *)v65.i8 = vqmovn_s16(v65);
    int16x8_t v67 = a2[10];
    int16x8_t v68 = a2[11];
    *(int8x8_t *)v67.i8 = vqmovn_s16(v67);
    *(int8x8_t *)v66.i8 = vqmovn_s16(v66);
    *(int8x8_t *)v68.i8 = vqmovn_s16(v68);
    int8x16_t v69 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v63, v64), (int8x16_t)v49), (uint8x16_t)v47);
    int8x16_t v70 = veorq_s8((int8x16_t)vzip1q_s16(v65, v67), (int8x16_t)v49);
    int8x16_t v71 = vzip1q_s8(result, v70);
    int8x16_t v72 = veorq_s8((int8x16_t)vzip1q_s16(v66, v68), (int8x16_t)v49);
    int8x16_t v73 = vzip1q_s8(v69, v72);
    vst2_s8(v5, (int8x8x2_t)v71);
    if (a4 < 7)
    {
      if (a4 == 6)
      {
        int8x8_t result = vzip2q_s8(v71, v73);
        *(int8x16_t *)&v5[a3] = result;
      }
    }
    else
    {
      v94.val[1] = (int8x8_t)vzip2q_s8(v69, v72).u64[0];
      v94.val[0] = (int8x8_t)vzip2q_s8(result, v70).u64[0];
      int16x8_t v74 = (int8x16_t *)&v5[a3];
      int8x8_t result = vzip2q_s8(v71, v73);
      *int16x8_t v74 = result;
      int16x8_t v75 = &v74->i8[a3];
      vst2_s8(v75, v94);
    }
  }
  return result;
}

int8x16_t from_444_to_r408<2,4,(AlphaOutputMethod)2,true>(char *a1, int16x8_t *a2, int a3, int a4, int8x16_t result)
{
  int v5 = &a1[4 * a3];
  if (a4 == 8)
  {
    int16x8_t v6 = *a2;
    int16x8_t v7 = a2[1];
    *(int8x8_t *)v6.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v7.i8 = vqmovn_s16(v7);
    int16x8_t v8 = a2[4];
    int16x8_t v9 = a2[5];
    *(int8x8_t *)v8.i8 = vqmovn_s16(v8);
    int16x8_t v10 = a2[8];
    int16x8_t v11 = a2[9];
    *(int8x8_t *)v10.i8 = vqmovn_s16(v10);
    *(int8x8_t *)v9.i8 = vqmovn_s16(v9);
    *(int8x8_t *)v11.i8 = vqmovn_s16(v11);
    int8x16_t v12 = (int8x16_t)vzip1q_s16(v6, v7);
    int8x16_t v13 = (int8x16_t)vzip1q_s16(v8, v10);
    int8x16_t v14 = (int8x16_t)vzip1q_s16(v9, v11);
    v9.i64[0] = 0x8080808080808080;
    v9.i64[1] = 0x8080808080808080;
    v10.i64[0] = 0x1010101010101010;
    v10.i64[1] = 0x1010101010101010;
    int8x16_t v15 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v12, (int8x16_t)v9), (uint8x16_t)v10);
    int8x16_t v16 = veorq_s8(v13, (int8x16_t)v9);
    v11.i64[0] = -1;
    v11.i64[1] = -1;
    int8x16_t v17 = vzip1q_s8((int8x16_t)v11, v16);
    int8x16_t v18 = vzip2q_s8((int8x16_t)v11, v16);
    int8x16_t v19 = veorq_s8(v14, (int8x16_t)v9);
    int8x16_t v20 = vzip1q_s8(v15, v19);
    int8x16_t v21 = vzip2q_s8(v15, v19);
    vst2_s8(a1, (int8x8x2_t)v17);
    int8x16_t v22 = (int8x16_t *)&a1[a3];
    int8x16_t *v22 = vzip2q_s8(v17, v20);
    int8x16_t v23 = &v22->i8[a3];
    vst2_s8(v23, (int8x8x2_t)v18);
    int8x16_t v24 = (int8x16_t *)&v23[a3];
    int8x16_t *v24 = vzip2q_s8(v18, v21);
    int16x8_t v25 = a2[2];
    int16x8_t v26 = a2[3];
    *(int8x8_t *)v25.i8 = vqmovn_s16(v25);
    *(int8x8_t *)v26.i8 = vqmovn_s16(v26);
    int16x8_t v27 = a2[6];
    int16x8_t v28 = a2[7];
    *(int8x8_t *)v27.i8 = vqmovn_s16(v27);
    int16x8_t v29 = a2[10];
    int16x8_t v30 = a2[11];
    *(int8x8_t *)v29.i8 = vqmovn_s16(v29);
    *(int8x8_t *)v28.i8 = vqmovn_s16(v28);
    *(int8x8_t *)v30.i8 = vqmovn_s16(v30);
    int8x16_t v31 = (int8x16_t)vzip1q_s16(v25, v26);
    int8x16_t v32 = (int8x16_t)vzip1q_s16(v27, v29);
    int8x16_t v33 = (int8x16_t)vzip1q_s16(v28, v30);
    int8x16_t v34 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v31, (int8x16_t)v9), (uint8x16_t)v10);
    int8x16_t v35 = veorq_s8(v32, (int8x16_t)v9);
    int8x16_t v36 = vzip1q_s8((int8x16_t)v11, v35);
    int8x16_t v37 = vzip2q_s8((int8x16_t)v11, v35);
    int8x16_t v38 = veorq_s8(v33, (int8x16_t)v9);
    int8x16_t v39 = vzip1q_s8(v34, v38);
    int8x16_t v40 = vzip2q_s8(v34, v38);
    vst2_s8(v5, (int8x8x2_t)v36);
    int8x16_t v41 = (int8x16_t *)&v5[a3];
    *int8x16_t v41 = vzip2q_s8(v36, v39);
    int8x16_t v42 = &v41->i8[a3];
    vst2_s8(v42, (int8x8x2_t)v37);
    int16x8_t v43 = (int8x16_t *)&v42[a3];
    int8x8_t result = vzip2q_s8(v37, v40);
    *int16x8_t v43 = result;
  }
  else if (a4 < 5)
  {
    if (a4 >= 1)
    {
      int16x8_t v76 = *a2;
      int16x8_t v77 = a2[1];
      *(int8x8_t *)v76.i8 = vqmovn_s16(*a2);
      *(int8x8_t *)v77.i8 = vqmovn_s16(v77);
      int16x8_t v78 = a2[4];
      int16x8_t v79 = a2[5];
      *(int8x8_t *)v78.i8 = vqmovn_s16(v78);
      int16x8_t v80 = a2[8];
      int16x8_t v81 = a2[9];
      *(int8x8_t *)v80.i8 = vqmovn_s16(v80);
      *(int8x8_t *)v79.i8 = vqmovn_s16(v79);
      *(int8x8_t *)v81.i8 = vqmovn_s16(v81);
      int8x16_t v82 = (int8x16_t)vzip1q_s16(v76, v77);
      int8x16_t v83 = (int8x16_t)vzip1q_s16(v78, v80);
      int8x16_t v84 = (int8x16_t)vzip1q_s16(v79, v81);
      v85.i64[0] = 0x8080808080808080;
      v85.i64[1] = 0x8080808080808080;
      v78.i64[0] = 0x1010101010101010;
      v78.i64[1] = 0x1010101010101010;
      int8x16_t v86 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v82, v85), (uint8x16_t)v78);
      int8x16_t v87 = veorq_s8(v83, v85);
      v88.i64[0] = -1;
      v88.i64[1] = -1;
      int8x8_t result = vzip1q_s8(v88, v87);
      int8x16_t v89 = veorq_s8(v84, v85);
      int8x16_t v90 = vzip1q_s8(v86, v89);
      vst2_s8(a1, (int8x8x2_t)result);
      if (a4 < 3)
      {
        if (a4 == 2)
        {
          int8x8_t result = vzip2q_s8(result, v90);
          *(int8x16_t *)&a1[a3] = result;
        }
      }
      else
      {
        int8x16_t v91 = vzip2q_s8(v88, v87);
        int8x16_t v92 = vzip2q_s8(v86, v89);
        int8x8_t result = vzip2q_s8(result, v90);
        *(int8x16_t *)&a1[a3] = result;
        int8x16_t v93 = &a1[a3 + a3];
        vst2_s8(v93, (int8x8x2_t)v91);
        if (a4 == 4)
        {
          int8x8_t result = vzip2q_s8(v91, v92);
          *(int8x16_t *)&v93[a3] = result;
        }
      }
    }
  }
  else
  {
    int16x8_t v44 = *a2;
    int16x8_t v45 = a2[1];
    *(int8x8_t *)v44.i8 = vqmovn_s16(*a2);
    *(int8x8_t *)v45.i8 = vqmovn_s16(v45);
    int16x8_t v46 = a2[4];
    int16x8_t v47 = a2[5];
    *(int8x8_t *)v46.i8 = vqmovn_s16(v46);
    int16x8_t v48 = a2[8];
    int16x8_t v49 = a2[9];
    *(int8x8_t *)v48.i8 = vqmovn_s16(v48);
    *(int8x8_t *)v47.i8 = vqmovn_s16(v47);
    *(int8x8_t *)v49.i8 = vqmovn_s16(v49);
    int8x16_t v50 = (int8x16_t)vzip1q_s16(v44, v45);
    int8x16_t v51 = (int8x16_t)vzip1q_s16(v46, v48);
    int8x16_t v52 = (int8x16_t)vzip1q_s16(v47, v49);
    v49.i64[0] = 0x8080808080808080;
    v49.i64[1] = 0x8080808080808080;
    v47.i64[0] = 0x1010101010101010;
    v47.i64[1] = 0x1010101010101010;
    int8x16_t v53 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v50, (int8x16_t)v49), (uint8x16_t)v47);
    int8x16_t v54 = veorq_s8(v51, (int8x16_t)v49);
    result.i64[0] = -1;
    result.i64[1] = -1;
    int8x16_t v55 = vzip1q_s8(result, v54);
    int8x16_t v56 = vzip2q_s8(result, v54);
    int8x16_t v57 = veorq_s8(v52, (int8x16_t)v49);
    int8x16_t v58 = vzip1q_s8(v53, v57);
    int8x16_t v59 = vzip2q_s8(v53, v57);
    vst2_s8(a1, (int8x8x2_t)v55);
    int8x16_t v60 = (int8x16_t *)&a1[a3];
    *int8x16_t v60 = vzip2q_s8(v55, v58);
    int8x16_t v61 = &v60->i8[a3];
    vst2_s8(v61, (int8x8x2_t)v56);
    int8x16_t v62 = (int8x16_t *)&v61[a3];
    *int8x16_t v62 = vzip2q_s8(v56, v59);
    int16x8_t v63 = a2[2];
    int16x8_t v64 = a2[3];
    *(int8x8_t *)v63.i8 = vqmovn_s16(v63);
    *(int8x8_t *)v64.i8 = vqmovn_s16(v64);
    int16x8_t v65 = a2[6];
    int16x8_t v66 = a2[7];
    *(int8x8_t *)v65.i8 = vqmovn_s16(v65);
    int16x8_t v67 = a2[10];
    int16x8_t v68 = a2[11];
    *(int8x8_t *)v67.i8 = vqmovn_s16(v67);
    *(int8x8_t *)v66.i8 = vqmovn_s16(v66);
    *(int8x8_t *)v68.i8 = vqmovn_s16(v68);
    int8x16_t v69 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vzip1q_s16(v63, v64), (int8x16_t)v49), (uint8x16_t)v47);
    int8x16_t v70 = veorq_s8((int8x16_t)vzip1q_s16(v65, v67), (int8x16_t)v49);
    int8x16_t v71 = vzip1q_s8(result, v70);
    int8x16_t v72 = veorq_s8((int8x16_t)vzip1q_s16(v66, v68), (int8x16_t)v49);
    int8x16_t v73 = vzip1q_s8(v69, v72);
    vst2_s8(v5, (int8x8x2_t)v71);
    if (a4 < 7)
    {
      if (a4 == 6)
      {
        int8x8_t result = vzip2q_s8(v71, v73);
        *(int8x16_t *)&v5[a3] = result;
      }
    }
    else
    {
      v94.val[1] = (int8x8_t)vzip2q_s8(v69, v72).u64[0];
      v94.val[0] = (int8x8_t)vzip2q_s8(result, v70).u64[0];
      int16x8_t v74 = (int8x16_t *)&v5[a3];
      int8x8_t result = vzip2q_s8(v71, v73);
      *int16x8_t v74 = result;
      int16x8_t v75 = &v74->i8[a3];
      vst2_s8(v75, v94);
    }
  }
  return result;
}

void from_444_to_r408<2,2,(AlphaOutputMethod)2,false>(__int16 *a1, uint64_t a2, int a3, int a4)
{
  v4.i64[0] = 0x8080808080808080;
  v4.i64[1] = 0x8080808080808080;
  v5.i64[0] = 0x1010101010101010;
  v5.i64[1] = 0x1010101010101010;
  int8x16_t v6 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v4), v5);
  v5.i64[0] = -1;
  v5.i64[1] = -1;
  int16x4x2_t v7 = (int16x4x2_t)vzip1q_s8((int8x16_t)v5, v6);
  int16x4x2_t v8 = (int16x4x2_t)vzip2q_s8((int8x16_t)v5, v6);
  int16x8_t v9 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48));
  int16x8_t v10 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 64)), *(int16x8_t *)(a2 + 80));
  int64x2_t v11 = (int64x2_t)vzip1q_s16(v9, v10);
  int64x2_t v12 = (int64x2_t)vzip2q_s16(v9, v10);
  int16x8_t v13 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v11, (int8x16_t)vdupq_laneq_s64(v11, 1)), v4);
  int16x8_t v14 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v12, (int8x16_t)vdupq_laneq_s64(v12, 1)), v4);
  if (a4 == 4)
  {
    uint64_t v15 = a3;
    vst2_s16(a1, v7);
    int8x16_t v16 = (int16x8_t *)((char *)a1 + v15);
    int16x8_t *v16 = vzip2q_s16((int16x8_t)v7, v13);
    int8x16_t v17 = (__int16 *)((char *)v16->i16 + a3);
    vst2_s16(v17, v8);
    int8x16_t v18 = (int16x8_t *)((char *)v17 + v15);
    int16x8_t *v18 = vzip2q_s16((int16x8_t)v8, v14);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v7);
    }
  }
  else
  {
    uint64_t v19 = a3;
    vst2_s16(a1, v7);
    int8x16_t v20 = (int16x8_t *)((char *)a1 + v19);
    *int8x16_t v20 = vzip2q_s16((int16x8_t)v7, v13);
    if (a4 == 3)
    {
      int8x16_t v21 = (__int16 *)((char *)v20->i16 + a3);
      vst2_s16(v21, v8);
    }
  }
}

void from_444_to_r408<2,2,(AlphaOutputMethod)2,true>(__int16 *a1, uint64_t a2, int a3, int a4)
{
  v4.i64[0] = 0x8080808080808080;
  v4.i64[1] = 0x8080808080808080;
  v5.i64[0] = 0x1010101010101010;
  v5.i64[1] = 0x1010101010101010;
  int8x16_t v6 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16((int16x8_t)vuzp1q_s32(*(int32x4_t *)a2, vrev64q_s32(*(int32x4_t *)a2))), (int16x8_t)vuzp1q_s32(*(int32x4_t *)(a2 + 16), vrev64q_s32(*(int32x4_t *)(a2 + 16)))), v4), v5);
  v5.i64[0] = -1;
  v5.i64[1] = -1;
  int16x4x2_t v7 = (int16x4x2_t)vzip1q_s8((int8x16_t)v5, v6);
  int16x4x2_t v8 = (int16x4x2_t)vzip2q_s8((int8x16_t)v5, v6);
  int16x8_t v9 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 32)), *(int16x8_t *)(a2 + 48));
  int16x8_t v10 = (int16x8_t)vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)(a2 + 64)), *(int16x8_t *)(a2 + 80));
  int64x2_t v11 = (int64x2_t)vzip1q_s16(v9, v10);
  int64x2_t v12 = (int64x2_t)vzip2q_s16(v9, v10);
  int16x8_t v13 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v11, (int8x16_t)vdupq_laneq_s64(v11, 1)), v4);
  int16x8_t v14 = (int16x8_t)veorq_s8(vzip1q_s8((int8x16_t)v12, (int8x16_t)vdupq_laneq_s64(v12, 1)), v4);
  if (a4 == 4)
  {
    uint64_t v15 = a3;
    vst2_s16(a1, v7);
    int8x16_t v16 = (int16x8_t *)((char *)a1 + v15);
    int16x8_t *v16 = vzip2q_s16((int16x8_t)v7, v13);
    int8x16_t v17 = (__int16 *)((char *)v16->i16 + a3);
    vst2_s16(v17, v8);
    int8x16_t v18 = (int16x8_t *)((char *)v17 + v15);
    int16x8_t *v18 = vzip2q_s16((int16x8_t)v8, v14);
  }
  else if (a4 < 2)
  {
    if (a4 == 1) {
      vst2_s16(a1, v7);
    }
  }
  else
  {
    uint64_t v19 = a3;
    vst2_s16(a1, v7);
    int8x16_t v20 = (int16x8_t *)((char *)a1 + v19);
    *int8x16_t v20 = vzip2q_s16((int16x8_t)v7, v13);
    if (a4 == 3)
    {
      int8x16_t v21 = (__int16 *)((char *)v20->i16 + a3);
      vst2_s16(v21, v8);
    }
  }
}

__int8 *from_444_to_r408<2,1,(AlphaOutputMethod)2,false>(__int8 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2u, 1);
}

__int8 *from_444_to_r408<2,1,(AlphaOutputMethod)2,true>(__int8 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2u, 1);
}

__int8 *from_444_to_r408<1,2,(AlphaOutputMethod)2,false>(__int8 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1u, 2);
}

__int8 *from_444_to_r408<1,2,(AlphaOutputMethod)2,true>(__int8 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1u, 2);
}

__int8 *from_444_to_r408<1,1,(AlphaOutputMethod)2,false>(__int8 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1u, 1);
}

__int8 *from_444_to_r408<1,1,(AlphaOutputMethod)2,true>(__int8 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1u, 1);
}

void from_444_to_v408<8,8,(AlphaOutputMethod)1,false>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int8x16_t v34 = a2 + 8;
    int8x16_t v35 = a2 + 32;
    int8x16_t v36 = a2 + 40;
    int8x16_t v37 = a2 + 64;
    int8x16_t v38 = a2 + 72;
    int v40 = a4;
    if (a4 < 1) {
      return;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  v9.i64[0] = 0x101010101010101;
  v9.i64[1] = 0x101010101010101;
  v10.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v10.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int64x2_t v11 = (char *)a1;
  do
  {
    int64x2_t v12 = a2 + 1;
    int16x8_t v13 = (int8x16_t *)((char *)a1 + 8 * a3);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v8), v9), v10);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]), v8), v9), v10);
    int8x16_t v16 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]), v8), v9), v10);
    int8x16_t v17 = vzip1q_s8(v15, v16);
    int8x16_t v18 = *a5;
    int8x16_t v19 = vzip1q_s8(v14, *a5);
    vst2_s8(v11, (int8x8x2_t)v17);
    v11 += a3;
    int8x16_t v20 = vzip2q_s8(v15, v16);
    int8x16_t v21 = vzip2q_s8(v14, v18);
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v20);
    a1[1] = vzip2q_s8(v17, v19);
    a1[3] = vzip2q_s8(v20, v21);
    a1 = (int8x16_t *)v11;
    int8x16_t v23 = *(int8x16_t *)((char *)a5 + 8 * a6);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v24 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v8), v9), v10);
    int8x16_t v25 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]), v8), v9), v10);
    int8x16_t v26 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]), v8), v9), v10);
    int8x16_t v27 = vzip1q_s8(v25, v26);
    int8x16_t v28 = vzip2q_s8(v25, v26);
    int8x16_t v29 = vzip1q_s8(v24, v23);
    int8x16_t v30 = vzip2q_s8(v24, v23);
    int8x16_t v31 = (char *)v13;
    vst2_s8(v31, (int8x8x2_t)v27);
    v31 += 16;
    *(int8x16_t *)int8x16_t v31 = vzip2q_s8(v27, v29);
    int8x16_t v32 = v13[2].i8;
    vst2_s8(v32, (int8x8x2_t)v28);
    v13[3] = vzip2q_s8(v28, v30);
    int v33 = v7 - 1;
    LODWORD(v32) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v32 > 1);
  int8x16_t v34 = v12 + 8;
  int8x16_t v35 = v12 + 32;
  int8x16_t v36 = v12 + 40;
  int8x16_t v37 = v12 + 64;
  int8x16_t v38 = v12 + 72;
  if (a4 <= 8) {
    int v39 = 8;
  }
  else {
    int v39 = a4;
  }
  int v40 = v33 - v39;
  a2 = v12;
  if (v40 >= 1)
  {
LABEL_13:
    int8x16_t v41 = a1 + 2;
    unsigned int v42 = v40 + 1;
    v43.i64[0] = 0x8080808080808080;
    v43.i64[1] = 0x8080808080808080;
    v44.i64[0] = 0x101010101010101;
    v44.i64[1] = 0x101010101010101;
    v45.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v45.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int16x8_t v46 = a1[2].i8;
    do
    {
      int16x8_t v47 = *a2++;
      int16x8_t v48 = v47;
      int16x8_t v49 = *v34++;
      int16x8_t v50 = v49;
      int8x16_t v51 = v41[-2].i8;
      int16x8_t v52 = *v35++;
      int16x8_t v53 = v52;
      int16x8_t v54 = *v37++;
      int16x8_t v55 = v54;
      int8x16_t v56 = vqmovn_high_s16(vqmovn_s16(v48), v50);
      *(int8x8_t *)v50.i8 = vqmovn_s16(v53);
      int16x8_t v57 = *v36++;
      int16x8_t v58 = v57;
      int16x8_t v59 = *v38++;
      int8x16_t v60 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v56, v43), v44), v45);
      int8x16_t v61 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(*(int8x8_t *)v50.i8, v55), v43), v44), v45);
      int8x16_t v62 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v58), v59), v43), v44), v45);
      int8x16_t v63 = vzip1q_s8(v61, v62);
      int8x16_t v64 = vzip2q_s8(v61, v62);
      int8x16_t v65 = *a5;
      int8x16_t v66 = vzip1q_s8(v60, *a5);
      vst2_s8(v51, (int8x8x2_t)v63);
      int8x16_t v67 = vzip2q_s8(v60, v65);
      v41[-1] = vzip2q_s8(v63, v66);
      vst2_s8(v46, (int8x8x2_t)v64);
      v46 += a3;
      v41[1] = vzip2q_s8(v64, v67);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v42;
      int8x16_t v41 = (int8x16_t *)v46;
    }
    while (v42 > 1);
  }
}

void from_444_to_v408<8,8,(AlphaOutputMethod)1,true>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int8x16_t v34 = a2 + 8;
    int8x16_t v35 = a2 + 32;
    int8x16_t v36 = a2 + 40;
    int8x16_t v37 = a2 + 64;
    int8x16_t v38 = a2 + 72;
    int v40 = a4;
    if (a4 < 1) {
      return;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8080808080808080;
  v8.i64[1] = 0x8080808080808080;
  v9.i64[0] = 0x101010101010101;
  v9.i64[1] = 0x101010101010101;
  v10.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v10.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  int64x2_t v11 = (char *)a1;
  do
  {
    int64x2_t v12 = a2 + 1;
    int16x8_t v13 = (int8x16_t *)((char *)a1 + 8 * a3);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v8), v9), v10);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]), v8), v9), v10);
    int8x16_t v16 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]), v8), v9), v10);
    int8x16_t v17 = vzip1q_s8(v15, v16);
    int8x16_t v18 = *a5;
    int8x16_t v19 = vzip1q_s8(v14, *a5);
    vst2_s8(v11, (int8x8x2_t)v17);
    v11 += a3;
    int8x16_t v20 = vzip2q_s8(v15, v16);
    int8x16_t v21 = vzip2q_s8(v14, v18);
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v20);
    a1[1] = vzip2q_s8(v17, v19);
    a1[3] = vzip2q_s8(v20, v21);
    a1 = (int8x16_t *)v11;
    int8x16_t v23 = *(int8x16_t *)((char *)a5 + 8 * a6);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v24 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v8), v9), v10);
    int8x16_t v25 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]), v8), v9), v10);
    int8x16_t v26 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]), v8), v9), v10);
    int8x16_t v27 = vzip1q_s8(v25, v26);
    int8x16_t v28 = vzip2q_s8(v25, v26);
    int8x16_t v29 = vzip1q_s8(v24, v23);
    int8x16_t v30 = vzip2q_s8(v24, v23);
    int8x16_t v31 = (char *)v13;
    vst2_s8(v31, (int8x8x2_t)v27);
    v31 += 16;
    *(int8x16_t *)int8x16_t v31 = vzip2q_s8(v27, v29);
    int8x16_t v32 = v13[2].i8;
    vst2_s8(v32, (int8x8x2_t)v28);
    v13[3] = vzip2q_s8(v28, v30);
    int v33 = v7 - 1;
    LODWORD(v32) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v32 > 1);
  int8x16_t v34 = v12 + 8;
  int8x16_t v35 = v12 + 32;
  int8x16_t v36 = v12 + 40;
  int8x16_t v37 = v12 + 64;
  int8x16_t v38 = v12 + 72;
  if (a4 <= 8) {
    int v39 = 8;
  }
  else {
    int v39 = a4;
  }
  int v40 = v33 - v39;
  a2 = v12;
  if (v40 >= 1)
  {
LABEL_13:
    int8x16_t v41 = a1 + 2;
    unsigned int v42 = v40 + 1;
    v43.i64[0] = 0x8080808080808080;
    v43.i64[1] = 0x8080808080808080;
    v44.i64[0] = 0x101010101010101;
    v44.i64[1] = 0x101010101010101;
    v45.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v45.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int16x8_t v46 = a1[2].i8;
    do
    {
      int16x8_t v47 = *a2++;
      int16x8_t v48 = v47;
      int16x8_t v49 = *v34++;
      int16x8_t v50 = v49;
      int8x16_t v51 = v41[-2].i8;
      int16x8_t v52 = *v35++;
      int16x8_t v53 = v52;
      int16x8_t v54 = *v37++;
      int16x8_t v55 = v54;
      int8x16_t v56 = vqmovn_high_s16(vqmovn_s16(v48), v50);
      *(int8x8_t *)v50.i8 = vqmovn_s16(v53);
      int16x8_t v57 = *v36++;
      int16x8_t v58 = v57;
      int16x8_t v59 = *v38++;
      int8x16_t v60 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v56, v43), v44), v45);
      int8x16_t v61 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(*(int8x8_t *)v50.i8, v55), v43), v44), v45);
      int8x16_t v62 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v58), v59), v43), v44), v45);
      int8x16_t v63 = vzip1q_s8(v61, v62);
      int8x16_t v64 = vzip2q_s8(v61, v62);
      int8x16_t v65 = *a5;
      int8x16_t v66 = vzip1q_s8(v60, *a5);
      vst2_s8(v51, (int8x8x2_t)v63);
      int8x16_t v67 = vzip2q_s8(v60, v65);
      v41[-1] = vzip2q_s8(v63, v66);
      vst2_s8(v46, (int8x8x2_t)v64);
      v46 += a3;
      v41[1] = vzip2q_s8(v64, v67);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v42;
      int8x16_t v41 = (int8x16_t *)v46;
    }
    while (v42 > 1);
  }
}

int8x16_t *from_444_to_v408<8,8,(AlphaOutputMethod)2,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int8x16_t v31 = a2 + 8;
    int8x16_t v32 = a2 + 32;
    int v33 = a2 + 40;
    int8x16_t v34 = a2 + 64;
    int8x16_t v35 = a2 + 72;
    int v37 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  v9.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v9.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  uint8x16_t v10 = (char *)result;
  do
  {
    int64x2_t v11 = a2 + 1;
    int64x2_t v12 = (int8x16_t *)((char *)result + 8 * a3);
    int8x16_t v13 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6), v7), v8);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]), v6), v7), v8);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]), v6), v7), v8);
    int8x16_t v16 = vzip1q_s8(v14, v15);
    int8x16_t v17 = vzip2q_s8(v14, v15);
    int8x16_t v18 = vzip1q_s8(v13, v9);
    int8x16_t v19 = vzip2q_s8(v13, v9);
    vst2_s8(v10, (int8x8x2_t)v16);
    v10 += a3;
    result[1] = vzip2q_s8(v16, v18);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v17);
    result[3] = vzip2q_s8(v17, v19);
    int8x8_t result = (int8x16_t *)v10;
    int8x16_t v21 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6), v7), v8);
    int8x16_t v22 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]), v6), v7), v8);
    int8x16_t v23 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]), v6), v7), v8);
    int8x16_t v24 = vzip1q_s8(v22, v23);
    int8x16_t v25 = vzip2q_s8(v22, v23);
    int8x16_t v26 = vzip1q_s8(v21, v9);
    int8x16_t v27 = vzip2q_s8(v21, v9);
    int8x16_t v28 = (char *)v12;
    vst2_s8(v28, (int8x8x2_t)v24);
    v28 += 16;
    *(int8x16_t *)int8x16_t v28 = vzip2q_s8(v24, v26);
    int8x16_t v29 = v12[2].i8;
    vst2_s8(v29, (int8x8x2_t)v25);
    v12[3] = vzip2q_s8(v25, v27);
    int v30 = v5 - 1;
    LODWORD(v12) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v12 > 1);
  int8x16_t v31 = v11 + 8;
  int8x16_t v32 = v11 + 32;
  int v33 = v11 + 40;
  int8x16_t v34 = v11 + 64;
  int8x16_t v35 = v11 + 72;
  if (a4 <= 8) {
    int v36 = 8;
  }
  else {
    int v36 = a4;
  }
  int v37 = v30 - v36;
  a2 = v11;
  if (v37 >= 1)
  {
LABEL_13:
    int8x16_t v38 = result + 2;
    unsigned int v39 = v37 + 1;
    v40.i64[0] = 0x8080808080808080;
    v40.i64[1] = 0x8080808080808080;
    v41.i64[0] = 0x101010101010101;
    v41.i64[1] = 0x101010101010101;
    v42.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v42.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    v43.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
    v43.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
    uint8x16_t v44 = result[2].i8;
    do
    {
      int16x8_t v45 = *a2++;
      int16x8_t v46 = v45;
      int16x8_t v47 = v38[-2].i8;
      int16x8_t v48 = *v31++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v46), v48);
      int16x8_t v50 = *v32++;
      int16x8_t v51 = v50;
      int16x8_t v52 = *v34++;
      int8x16_t v53 = vqmovn_high_s16(vqmovn_s16(v51), v52);
      int16x8_t v54 = *v33++;
      int16x8_t v55 = v54;
      int16x8_t v56 = *v35++;
      int8x16_t v57 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v49, v40), v41), v42);
      int8x16_t v58 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v53, v40), v41), v42);
      int8x16_t v59 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v55), v56), v40), v41), v42);
      int8x16_t v60 = vzip1q_s8(v58, v59);
      int8x16_t v61 = vzip2q_s8(v58, v59);
      int8x16_t v62 = vzip1q_s8(v57, v43);
      vst2_s8(v47, (int8x8x2_t)v60);
      int8x16_t v63 = vzip2q_s8(v57, v43);
      v38[-1] = vzip2q_s8(v60, v62);
      vst2_s8(v44, (int8x8x2_t)v61);
      v44 += a3;
      v38[1] = vzip2q_s8(v61, v63);
      --v39;
      int8x16_t v38 = (int8x16_t *)v44;
    }
    while (v39 > 1);
  }
  return result;
}

int8x16_t *from_444_to_v408<8,8,(AlphaOutputMethod)2,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int8x16_t v31 = a2 + 8;
    int8x16_t v32 = a2 + 32;
    int v33 = a2 + 40;
    int8x16_t v34 = a2 + 64;
    int8x16_t v35 = a2 + 72;
    int v37 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v5 = a4 + 8;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7.i64[0] = 0x101010101010101;
  v7.i64[1] = 0x101010101010101;
  v8.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v8.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  v9.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v9.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  uint8x16_t v10 = (char *)result;
  do
  {
    int64x2_t v11 = a2 + 1;
    int64x2_t v12 = (int8x16_t *)((char *)result + 8 * a3);
    int8x16_t v13 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[8]), v6), v7), v8);
    int8x16_t v14 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[32]), a2[64]), v6), v7), v8);
    int8x16_t v15 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[40]), a2[72]), v6), v7), v8);
    int8x16_t v16 = vzip1q_s8(v14, v15);
    int8x16_t v17 = vzip2q_s8(v14, v15);
    int8x16_t v18 = vzip1q_s8(v13, v9);
    int8x16_t v19 = vzip2q_s8(v13, v9);
    vst2_s8(v10, (int8x8x2_t)v16);
    v10 += a3;
    result[1] = vzip2q_s8(v16, v18);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v17);
    result[3] = vzip2q_s8(v17, v19);
    int8x8_t result = (int8x16_t *)v10;
    int8x16_t v21 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[16]), a2[24]), v6), v7), v8);
    int8x16_t v22 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[48]), a2[80]), v6), v7), v8);
    int8x16_t v23 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[56]), a2[88]), v6), v7), v8);
    int8x16_t v24 = vzip1q_s8(v22, v23);
    int8x16_t v25 = vzip2q_s8(v22, v23);
    int8x16_t v26 = vzip1q_s8(v21, v9);
    int8x16_t v27 = vzip2q_s8(v21, v9);
    int8x16_t v28 = (char *)v12;
    vst2_s8(v28, (int8x8x2_t)v24);
    v28 += 16;
    *(int8x16_t *)int8x16_t v28 = vzip2q_s8(v24, v26);
    int8x16_t v29 = v12[2].i8;
    vst2_s8(v29, (int8x8x2_t)v25);
    v12[3] = vzip2q_s8(v25, v27);
    int v30 = v5 - 1;
    LODWORD(v12) = v5 - 16;
    --v5;
    ++a2;
  }
  while ((int)v12 > 1);
  int8x16_t v31 = v11 + 8;
  int8x16_t v32 = v11 + 32;
  int v33 = v11 + 40;
  int8x16_t v34 = v11 + 64;
  int8x16_t v35 = v11 + 72;
  if (a4 <= 8) {
    int v36 = 8;
  }
  else {
    int v36 = a4;
  }
  int v37 = v30 - v36;
  a2 = v11;
  if (v37 >= 1)
  {
LABEL_13:
    int8x16_t v38 = result + 2;
    unsigned int v39 = v37 + 1;
    v40.i64[0] = 0x8080808080808080;
    v40.i64[1] = 0x8080808080808080;
    v41.i64[0] = 0x101010101010101;
    v41.i64[1] = 0x101010101010101;
    v42.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v42.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    v43.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
    v43.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
    uint8x16_t v44 = result[2].i8;
    do
    {
      int16x8_t v45 = *a2++;
      int16x8_t v46 = v45;
      int16x8_t v47 = v38[-2].i8;
      int16x8_t v48 = *v31++;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v46), v48);
      int16x8_t v50 = *v32++;
      int16x8_t v51 = v50;
      int16x8_t v52 = *v34++;
      int8x16_t v53 = vqmovn_high_s16(vqmovn_s16(v51), v52);
      int16x8_t v54 = *v33++;
      int16x8_t v55 = v54;
      int16x8_t v56 = *v35++;
      int8x16_t v57 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v49, v40), v41), v42);
      int8x16_t v58 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(v53, v40), v41), v42);
      int8x16_t v59 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(v55), v56), v40), v41), v42);
      int8x16_t v60 = vzip1q_s8(v58, v59);
      int8x16_t v61 = vzip2q_s8(v58, v59);
      int8x16_t v62 = vzip1q_s8(v57, v43);
      vst2_s8(v47, (int8x8x2_t)v60);
      int8x16_t v63 = vzip2q_s8(v57, v43);
      v38[-1] = vzip2q_s8(v60, v62);
      vst2_s8(v44, (int8x8x2_t)v61);
      v44 += a3;
      v38[1] = vzip2q_s8(v61, v63);
      --v39;
      int8x16_t v38 = (int8x16_t *)v44;
    }
    while (v39 > 1);
  }
  return result;
}

int16x8_t *from_444_to_v216_10bits_A<8,8,(AlphaOutputMethod)0,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996620, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v74 = result;
    int16x8_t v75 = a2;
    int v76 = a3;
    int v77 = a4;
    int v78 = __cxa_guard_acquire(&qword_26A996620);
    a4 = v77;
    a3 = v76;
    a2 = v75;
    int v79 = v78;
    int8x8_t result = v74;
    if (v79)
    {
      *(void *)&long long v80 = 0xFE00FE00FE00FE00;
      *((void *)&v80 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996B60 = v80;
      __cxa_guard_release(&qword_26A996620);
      a4 = v77;
      int8x8_t result = v74;
      a3 = v76;
      a2 = v75;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996628, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v81 = result;
    int8x16_t v82 = a2;
    int v83 = a3;
    int v84 = a4;
    int v85 = __cxa_guard_acquire(&qword_26A996628);
    a4 = v84;
    a3 = v83;
    a2 = v82;
    int v86 = v85;
    int8x8_t result = v81;
    if (v86)
    {
      *(void *)&long long v87 = 0xFE00FE00FE00FE00;
      *((void *)&v87 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996B70 = v87;
      __cxa_guard_release(&qword_26A996628);
      a4 = v84;
      int8x8_t result = v81;
      a3 = v83;
      a2 = v82;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996630, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v88 = result;
    int8x16_t v89 = a2;
    int v90 = a3;
    int v91 = a4;
    int v92 = __cxa_guard_acquire(&qword_26A996630);
    a4 = v91;
    a3 = v90;
    a2 = v89;
    int v93 = v92;
    int8x8_t result = v88;
    if (v93)
    {
      xmmword_26A996B80 = (__int128)vdupq_n_s16(0xFE04u);
      __cxa_guard_release(&qword_26A996630);
      a4 = v91;
      int8x8_t result = v88;
      a3 = v90;
      a2 = v89;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996638, memory_order_acquire) & 1) == 0)
  {
    int8x8x2_t v94 = result;
    int8x16_t v95 = a2;
    int v96 = a3;
    int v97 = a4;
    int v98 = __cxa_guard_acquire(&qword_26A996638);
    a4 = v97;
    a3 = v96;
    a2 = v95;
    int v99 = v98;
    int8x8_t result = v94;
    if (v99)
    {
      xmmword_26A996B90 = (__int128)vdupq_n_s16(0x1FBu);
      __cxa_guard_release(&qword_26A996638);
      a4 = v97;
      int8x8_t result = v94;
      a3 = v96;
      a2 = v95;
    }
  }
  int16x8_t v4 = (int16x8_t)xmmword_26A996B80;
  int16x8_t v5 = (int16x8_t)xmmword_26A996B90;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v47 = a2 + 8;
    int16x8_t v48 = a2 + 32;
    int8x16_t v49 = a2 + 40;
    int16x8_t v51 = a2 + 64;
    int16x8_t v50 = a2 + 72;
    int v46 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_17;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8000800080008000;
  v8.i64[1] = 0x8000800080008000;
  int8x16_t v9 = (__int16 *)result;
  do
  {
    uint8x16_t v10 = (int16x8_t *)((char *)result + 8 * a3);
    int16x8_t v11 = a2[32];
    int16x8_t v12 = a2[40];
    int64x2_t v13 = (int64x2_t)vtrn1q_s16(v11, v12);
    int64x2_t v14 = (int64x2_t)vzip2q_s16(v11, v12);
    *(int32x2_t *)v14.i8 = vmovn_s64(v14);
    int16x8_t v15 = (int16x8_t)vzip1q_s64(v13, v14);
    int16x8_t v16 = a2[64];
    int16x8_t v17 = a2[72];
    int64x2_t v18 = (int64x2_t)vtrn1q_s16(v16, v17);
    int64x2_t v19 = (int64x2_t)vzip2q_s16(v16, v17);
    *(int32x2_t *)v19.i8 = vmovn_s64(v19);
    int16x8_t v20 = (int16x8_t)vzip1q_s64(v18, v19);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v4), v5), 6uLL), v8);
    int16x8_t v22 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v4), v5), 6uLL), v8);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v15, v4), v5), 6uLL), v8);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v20, v4), v5), 6uLL), v8);
    vst2_s16(v9, *(int16x4x2_t *)((char *)&v21 - 8));
    int8x16_t v9 = (__int16 *)((char *)v9 + a3);
    result[1] = vzip2q_s16(v23, v21);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v22 - 8));
    result[3] = vzip2q_s16(v24, v22);
    int16x8_t v26 = a2[48];
    int16x8_t v27 = a2[56];
    int64x2_t v28 = (int64x2_t)vtrn1q_s16(v26, v27);
    int64x2_t v29 = (int64x2_t)vzip2q_s16(v26, v27);
    int16x8_t v30 = a2[80];
    int16x8_t v31 = a2[88];
    int16x8_t v32 = a2[16];
    int16x8_t v33 = a2[24];
    ++a2;
    int8x8_t result = (int16x8_t *)v9;
    *(int32x2_t *)v29.i8 = vmovn_s64(v29);
    int16x8_t v34 = (int16x8_t)vzip1q_s64(v28, v29);
    int64x2_t v35 = (int64x2_t)vtrn1q_s16(v30, v31);
    int64x2_t v36 = (int64x2_t)vzip2q_s16(v30, v31);
    *(int32x2_t *)v36.i8 = vmovn_s64(v36);
    int16x8_t v37 = (int16x8_t)vzip1q_s64(v35, v36);
    int16x8_t v38 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v32, v4), v5), 6uLL), v8);
    int16x8_t v39 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v33, v4), v5), 6uLL), v8);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v34, v4), v5), 6uLL), v8);
    uint8x16_t v41 = (__int16 *)v10;
    vst2_s16(v41, *(int16x4x2_t *)((char *)&v38 - 8));
    v41 += 8;
    int16x8_t v42 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v37, v4), v5), 6uLL), v8);
    *(int16x8_t *)uint8x16_t v41 = vzip2q_s16(v40, v38);
    int8x16_t v43 = v10[2].i16;
    vst2_s16(v43, *(int16x4x2_t *)((char *)&v39 - 8));
    v10[3] = vzip2q_s16(v42, v39);
    int v44 = v7 - 1;
    LODWORD(v43) = v7 - 16;
    --v7;
  }
  while ((int)v43 > 1);
  if (a4 <= 8) {
    int v45 = 8;
  }
  else {
    int v45 = a4;
  }
  int v46 = v44 - v45;
  int16x8_t v47 = a2 + 8;
  int16x8_t v48 = a2 + 32;
  int8x16_t v49 = a2 + 40;
  int16x8_t v50 = a2 + 72;
  int16x8_t v51 = a2 + 64;
  if (v46 >= 1)
  {
LABEL_17:
    int16x8_t v52 = result + 2;
    unsigned int v53 = v46 + 1;
    v54.i64[0] = 0x8000800080008000;
    v54.i64[1] = 0x8000800080008000;
    int16x8_t v55 = result[2].i16;
    do
    {
      int16x8_t v56 = *v48++;
      int16x8_t v57 = v56;
      int8x16_t v58 = v52[-2].i16;
      int16x8_t v59 = *v49++;
      int64x2_t v60 = (int64x2_t)vtrn1q_s16(v57, v59);
      int64x2_t v61 = (int64x2_t)vzip2q_s16(v57, v59);
      *(int32x2_t *)v61.i8 = vmovn_s64(v61);
      int16x8_t v62 = *v51++;
      int16x8_t v63 = v62;
      int16x8_t v64 = *v50++;
      int64x2_t v65 = (int64x2_t)vtrn1q_s16(v63, v64);
      int64x2_t v66 = (int64x2_t)vzip2q_s16(v63, v64);
      *(int32x2_t *)v66.i8 = vmovn_s64(v66);
      int16x8_t v67 = (int16x8_t)vzip1q_s64(v65, v66);
      int16x8_t v68 = *a2++;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v68, v4), v5), 6uLL), v54);
      int16x8_t v70 = *v47++;
      int16x8_t v71 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v4), v5), 6uLL), v54);
      int16x8_t v72 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16((int16x8_t)vzip1q_s64(v60, v61), v4), v5), 6uLL), v54);
      vst2_s16(v58, *(int16x4x2_t *)((char *)&v69 - 8));
      int16x8_t v73 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v67, v4), v5), 6uLL), v54);
      v52[-1] = vzip2q_s16(v72, v69);
      vst2_s16(v55, *(int16x4x2_t *)((char *)&v71 - 8));
      int16x8_t v55 = (__int16 *)((char *)v55 + a3);
      v52[1] = vzip2q_s16(v73, v71);
      --v53;
      int16x8_t v52 = (int16x8_t *)v55;
    }
    while (v53 > 1);
  }
  return result;
}

int16x8_t *from_444_to_v216_10bits_A<8,8,(AlphaOutputMethod)0,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996640, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v74 = result;
    int16x8_t v75 = a2;
    int v76 = a3;
    int v77 = a4;
    int v78 = __cxa_guard_acquire(&qword_26A996640);
    a4 = v77;
    a3 = v76;
    a2 = v75;
    int v79 = v78;
    int8x8_t result = v74;
    if (v79)
    {
      *(void *)&long long v80 = 0xFE00FE00FE00FE00;
      *((void *)&v80 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996BA0 = v80;
      __cxa_guard_release(&qword_26A996640);
      a4 = v77;
      int8x8_t result = v74;
      a3 = v76;
      a2 = v75;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996648, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v81 = result;
    int8x16_t v82 = a2;
    int v83 = a3;
    int v84 = a4;
    int v85 = __cxa_guard_acquire(&qword_26A996648);
    a4 = v84;
    a3 = v83;
    a2 = v82;
    int v86 = v85;
    int8x8_t result = v81;
    if (v86)
    {
      *(void *)&long long v87 = 0xFE00FE00FE00FE00;
      *((void *)&v87 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996BB0 = v87;
      __cxa_guard_release(&qword_26A996648);
      a4 = v84;
      int8x8_t result = v81;
      a3 = v83;
      a2 = v82;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996650, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v88 = result;
    int8x16_t v89 = a2;
    int v90 = a3;
    int v91 = a4;
    int v92 = __cxa_guard_acquire(&qword_26A996650);
    a4 = v91;
    a3 = v90;
    a2 = v89;
    int v93 = v92;
    int8x8_t result = v88;
    if (v93)
    {
      xmmword_26A996BC0 = (__int128)vdupq_n_s16(0xFE04u);
      __cxa_guard_release(&qword_26A996650);
      a4 = v91;
      int8x8_t result = v88;
      a3 = v90;
      a2 = v89;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996658, memory_order_acquire) & 1) == 0)
  {
    int8x8x2_t v94 = result;
    int8x16_t v95 = a2;
    int v96 = a3;
    int v97 = a4;
    int v98 = __cxa_guard_acquire(&qword_26A996658);
    a4 = v97;
    a3 = v96;
    a2 = v95;
    int v99 = v98;
    int8x8_t result = v94;
    if (v99)
    {
      xmmword_26A996BD0 = (__int128)vdupq_n_s16(0x1FBu);
      __cxa_guard_release(&qword_26A996658);
      a4 = v97;
      int8x8_t result = v94;
      a3 = v96;
      a2 = v95;
    }
  }
  int16x8_t v4 = (int16x8_t)xmmword_26A996BC0;
  int16x8_t v5 = (int16x8_t)xmmword_26A996BD0;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v47 = a2 + 8;
    int16x8_t v48 = a2 + 32;
    int8x16_t v49 = a2 + 40;
    int16x8_t v51 = a2 + 64;
    int16x8_t v50 = a2 + 72;
    int v46 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_17;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8000800080008000;
  v8.i64[1] = 0x8000800080008000;
  int8x16_t v9 = (__int16 *)result;
  do
  {
    uint8x16_t v10 = (int16x8_t *)((char *)result + 8 * a3);
    int16x8_t v11 = a2[32];
    int16x8_t v12 = a2[40];
    int64x2_t v13 = (int64x2_t)vtrn1q_s16(v11, v12);
    int64x2_t v14 = (int64x2_t)vzip2q_s16(v11, v12);
    *(int32x2_t *)v14.i8 = vmovn_s64(v14);
    int16x8_t v15 = (int16x8_t)vzip1q_s64(v13, v14);
    int16x8_t v16 = a2[64];
    int16x8_t v17 = a2[72];
    int64x2_t v18 = (int64x2_t)vtrn1q_s16(v16, v17);
    int64x2_t v19 = (int64x2_t)vzip2q_s16(v16, v17);
    *(int32x2_t *)v19.i8 = vmovn_s64(v19);
    int16x8_t v20 = (int16x8_t)vzip1q_s64(v18, v19);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v4), v5), 6uLL), v8);
    int16x8_t v22 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v4), v5), 6uLL), v8);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v15, v4), v5), 6uLL), v8);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v20, v4), v5), 6uLL), v8);
    vst2_s16(v9, *(int16x4x2_t *)((char *)&v21 - 8));
    int8x16_t v9 = (__int16 *)((char *)v9 + a3);
    result[1] = vzip2q_s16(v23, v21);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v22 - 8));
    result[3] = vzip2q_s16(v24, v22);
    int16x8_t v26 = a2[48];
    int16x8_t v27 = a2[56];
    int64x2_t v28 = (int64x2_t)vtrn1q_s16(v26, v27);
    int64x2_t v29 = (int64x2_t)vzip2q_s16(v26, v27);
    int16x8_t v30 = a2[80];
    int16x8_t v31 = a2[88];
    int16x8_t v32 = a2[16];
    int16x8_t v33 = a2[24];
    ++a2;
    int8x8_t result = (int16x8_t *)v9;
    *(int32x2_t *)v29.i8 = vmovn_s64(v29);
    int16x8_t v34 = (int16x8_t)vzip1q_s64(v28, v29);
    int64x2_t v35 = (int64x2_t)vtrn1q_s16(v30, v31);
    int64x2_t v36 = (int64x2_t)vzip2q_s16(v30, v31);
    *(int32x2_t *)v36.i8 = vmovn_s64(v36);
    int16x8_t v37 = (int16x8_t)vzip1q_s64(v35, v36);
    int16x8_t v38 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v32, v4), v5), 6uLL), v8);
    int16x8_t v39 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v33, v4), v5), 6uLL), v8);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v34, v4), v5), 6uLL), v8);
    uint8x16_t v41 = (__int16 *)v10;
    vst2_s16(v41, *(int16x4x2_t *)((char *)&v38 - 8));
    v41 += 8;
    int16x8_t v42 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v37, v4), v5), 6uLL), v8);
    *(int16x8_t *)uint8x16_t v41 = vzip2q_s16(v40, v38);
    int8x16_t v43 = v10[2].i16;
    vst2_s16(v43, *(int16x4x2_t *)((char *)&v39 - 8));
    v10[3] = vzip2q_s16(v42, v39);
    int v44 = v7 - 1;
    LODWORD(v43) = v7 - 16;
    --v7;
  }
  while ((int)v43 > 1);
  if (a4 <= 8) {
    int v45 = 8;
  }
  else {
    int v45 = a4;
  }
  int v46 = v44 - v45;
  int16x8_t v47 = a2 + 8;
  int16x8_t v48 = a2 + 32;
  int8x16_t v49 = a2 + 40;
  int16x8_t v50 = a2 + 72;
  int16x8_t v51 = a2 + 64;
  if (v46 >= 1)
  {
LABEL_17:
    int16x8_t v52 = result + 2;
    unsigned int v53 = v46 + 1;
    v54.i64[0] = 0x8000800080008000;
    v54.i64[1] = 0x8000800080008000;
    int16x8_t v55 = result[2].i16;
    do
    {
      int16x8_t v56 = *v48++;
      int16x8_t v57 = v56;
      int8x16_t v58 = v52[-2].i16;
      int16x8_t v59 = *v49++;
      int64x2_t v60 = (int64x2_t)vtrn1q_s16(v57, v59);
      int64x2_t v61 = (int64x2_t)vzip2q_s16(v57, v59);
      *(int32x2_t *)v61.i8 = vmovn_s64(v61);
      int16x8_t v62 = *v51++;
      int16x8_t v63 = v62;
      int16x8_t v64 = *v50++;
      int64x2_t v65 = (int64x2_t)vtrn1q_s16(v63, v64);
      int64x2_t v66 = (int64x2_t)vzip2q_s16(v63, v64);
      *(int32x2_t *)v66.i8 = vmovn_s64(v66);
      int16x8_t v67 = (int16x8_t)vzip1q_s64(v65, v66);
      int16x8_t v68 = *a2++;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v68, v4), v5), 6uLL), v54);
      int16x8_t v70 = *v47++;
      int16x8_t v71 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v4), v5), 6uLL), v54);
      int16x8_t v72 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16((int16x8_t)vzip1q_s64(v60, v61), v4), v5), 6uLL), v54);
      vst2_s16(v58, *(int16x4x2_t *)((char *)&v69 - 8));
      int16x8_t v73 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v67, v4), v5), 6uLL), v54);
      v52[-1] = vzip2q_s16(v72, v69);
      vst2_s16(v55, *(int16x4x2_t *)((char *)&v71 - 8));
      int16x8_t v55 = (__int16 *)((char *)v55 + a3);
      v52[1] = vzip2q_s16(v73, v71);
      --v53;
      int16x8_t v52 = (int16x8_t *)v55;
    }
    while (v53 > 1);
  }
  return result;
}

int16x8_t *from_444_to_v216_10bits_B<8,8,(AlphaOutputMethod)0,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996660, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v74 = result;
    int16x8_t v75 = a2;
    int v76 = a3;
    int v77 = a4;
    int v78 = __cxa_guard_acquire(&qword_26A996660);
    a4 = v77;
    a3 = v76;
    a2 = v75;
    int v79 = v78;
    int8x8_t result = v74;
    if (v79)
    {
      *(void *)&long long v80 = 0xFE00FE00FE00FE00;
      *((void *)&v80 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996BE0 = v80;
      __cxa_guard_release(&qword_26A996660);
      a4 = v77;
      int8x8_t result = v74;
      a3 = v76;
      a2 = v75;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996668, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v81 = result;
    int8x16_t v82 = a2;
    int v83 = a3;
    int v84 = a4;
    int v85 = __cxa_guard_acquire(&qword_26A996668);
    a4 = v84;
    a3 = v83;
    a2 = v82;
    int v86 = v85;
    int8x8_t result = v81;
    if (v86)
    {
      *(void *)&long long v87 = 0xFE00FE00FE00FE00;
      *((void *)&v87 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996BF0 = v87;
      __cxa_guard_release(&qword_26A996668);
      a4 = v84;
      int8x8_t result = v81;
      a3 = v83;
      a2 = v82;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996670, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v88 = result;
    int8x16_t v89 = a2;
    int v90 = a3;
    int v91 = a4;
    int v92 = __cxa_guard_acquire(&qword_26A996670);
    a4 = v91;
    a3 = v90;
    a2 = v89;
    int v93 = v92;
    int8x8_t result = v88;
    if (v93)
    {
      xmmword_26A996C00 = (__int128)vdupq_n_s16(0xFE04u);
      __cxa_guard_release(&qword_26A996670);
      a4 = v91;
      int8x8_t result = v88;
      a3 = v90;
      a2 = v89;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996678, memory_order_acquire) & 1) == 0)
  {
    int8x8x2_t v94 = result;
    int8x16_t v95 = a2;
    int v96 = a3;
    int v97 = a4;
    int v98 = __cxa_guard_acquire(&qword_26A996678);
    a4 = v97;
    a3 = v96;
    a2 = v95;
    int v99 = v98;
    int8x8_t result = v94;
    if (v99)
    {
      xmmword_26A996C10 = (__int128)vdupq_n_s16(0x1FBu);
      __cxa_guard_release(&qword_26A996678);
      a4 = v97;
      int8x8_t result = v94;
      a3 = v96;
      a2 = v95;
    }
  }
  int16x8_t v4 = (int16x8_t)xmmword_26A996BE0;
  int16x8_t v5 = (int16x8_t)xmmword_26A996BF0;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v47 = a2 + 8;
    int16x8_t v48 = a2 + 32;
    int8x16_t v49 = a2 + 40;
    int16x8_t v51 = a2 + 64;
    int16x8_t v50 = a2 + 72;
    int v46 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_17;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8000800080008000;
  v8.i64[1] = 0x8000800080008000;
  int8x16_t v9 = (__int16 *)result;
  do
  {
    uint8x16_t v10 = (int16x8_t *)((char *)result + 8 * a3);
    int16x8_t v11 = a2[32];
    int16x8_t v12 = a2[40];
    int64x2_t v13 = (int64x2_t)vtrn1q_s16(v11, v12);
    int64x2_t v14 = (int64x2_t)vzip2q_s16(v11, v12);
    *(int32x2_t *)v14.i8 = vmovn_s64(v14);
    int16x8_t v15 = (int16x8_t)vzip1q_s64(v13, v14);
    int16x8_t v16 = a2[64];
    int16x8_t v17 = a2[72];
    int64x2_t v18 = (int64x2_t)vtrn1q_s16(v16, v17);
    int64x2_t v19 = (int64x2_t)vzip2q_s16(v16, v17);
    *(int32x2_t *)v19.i8 = vmovn_s64(v19);
    int16x8_t v20 = (int16x8_t)vzip1q_s64(v18, v19);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v4), v5), 6uLL), v8);
    int16x8_t v22 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v4), v5), 6uLL), v8);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v15, v4), v5), 6uLL), v8);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v20, v4), v5), 6uLL), v8);
    vst2_s16(v9, *(int16x4x2_t *)((char *)&v21 - 8));
    int8x16_t v9 = (__int16 *)((char *)v9 + a3);
    result[1] = vzip2q_s16(v23, v21);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v22 - 8));
    result[3] = vzip2q_s16(v24, v22);
    int16x8_t v26 = a2[48];
    int16x8_t v27 = a2[56];
    int64x2_t v28 = (int64x2_t)vtrn1q_s16(v26, v27);
    int64x2_t v29 = (int64x2_t)vzip2q_s16(v26, v27);
    int16x8_t v30 = a2[80];
    int16x8_t v31 = a2[88];
    int16x8_t v32 = a2[16];
    int16x8_t v33 = a2[24];
    ++a2;
    int8x8_t result = (int16x8_t *)v9;
    *(int32x2_t *)v29.i8 = vmovn_s64(v29);
    int16x8_t v34 = (int16x8_t)vzip1q_s64(v28, v29);
    int64x2_t v35 = (int64x2_t)vtrn1q_s16(v30, v31);
    int64x2_t v36 = (int64x2_t)vzip2q_s16(v30, v31);
    *(int32x2_t *)v36.i8 = vmovn_s64(v36);
    int16x8_t v37 = (int16x8_t)vzip1q_s64(v35, v36);
    int16x8_t v38 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v32, v4), v5), 6uLL), v8);
    int16x8_t v39 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v33, v4), v5), 6uLL), v8);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v34, v4), v5), 6uLL), v8);
    uint8x16_t v41 = (__int16 *)v10;
    vst2_s16(v41, *(int16x4x2_t *)((char *)&v38 - 8));
    v41 += 8;
    int16x8_t v42 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v37, v4), v5), 6uLL), v8);
    *(int16x8_t *)uint8x16_t v41 = vzip2q_s16(v40, v38);
    int8x16_t v43 = v10[2].i16;
    vst2_s16(v43, *(int16x4x2_t *)((char *)&v39 - 8));
    v10[3] = vzip2q_s16(v42, v39);
    int v44 = v7 - 1;
    LODWORD(v43) = v7 - 16;
    --v7;
  }
  while ((int)v43 > 1);
  if (a4 <= 8) {
    int v45 = 8;
  }
  else {
    int v45 = a4;
  }
  int v46 = v44 - v45;
  int16x8_t v47 = a2 + 8;
  int16x8_t v48 = a2 + 32;
  int8x16_t v49 = a2 + 40;
  int16x8_t v50 = a2 + 72;
  int16x8_t v51 = a2 + 64;
  if (v46 >= 1)
  {
LABEL_17:
    int16x8_t v52 = result + 2;
    unsigned int v53 = v46 + 1;
    v54.i64[0] = 0x8000800080008000;
    v54.i64[1] = 0x8000800080008000;
    int16x8_t v55 = result[2].i16;
    do
    {
      int16x8_t v56 = *v48++;
      int16x8_t v57 = v56;
      int8x16_t v58 = v52[-2].i16;
      int16x8_t v59 = *v49++;
      int64x2_t v60 = (int64x2_t)vtrn1q_s16(v57, v59);
      int64x2_t v61 = (int64x2_t)vzip2q_s16(v57, v59);
      *(int32x2_t *)v61.i8 = vmovn_s64(v61);
      int16x8_t v62 = *v51++;
      int16x8_t v63 = v62;
      int16x8_t v64 = *v50++;
      int64x2_t v65 = (int64x2_t)vtrn1q_s16(v63, v64);
      int64x2_t v66 = (int64x2_t)vzip2q_s16(v63, v64);
      *(int32x2_t *)v66.i8 = vmovn_s64(v66);
      int16x8_t v67 = (int16x8_t)vzip1q_s64(v65, v66);
      int16x8_t v68 = *a2++;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v68, v4), v5), 6uLL), v54);
      int16x8_t v70 = *v47++;
      int16x8_t v71 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v4), v5), 6uLL), v54);
      int16x8_t v72 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16((int16x8_t)vzip1q_s64(v60, v61), v4), v5), 6uLL), v54);
      vst2_s16(v58, *(int16x4x2_t *)((char *)&v69 - 8));
      int16x8_t v73 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v67, v4), v5), 6uLL), v54);
      v52[-1] = vzip2q_s16(v72, v69);
      vst2_s16(v55, *(int16x4x2_t *)((char *)&v71 - 8));
      int16x8_t v55 = (__int16 *)((char *)v55 + a3);
      v52[1] = vzip2q_s16(v73, v71);
      --v53;
      int16x8_t v52 = (int16x8_t *)v55;
    }
    while (v53 > 1);
  }
  return result;
}

int16x8_t *from_444_to_v216_10bits_B<8,8,(AlphaOutputMethod)0,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996680, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v74 = result;
    int16x8_t v75 = a2;
    int v76 = a3;
    int v77 = a4;
    int v78 = __cxa_guard_acquire(&qword_26A996680);
    a4 = v77;
    a3 = v76;
    a2 = v75;
    int v79 = v78;
    int8x8_t result = v74;
    if (v79)
    {
      *(void *)&long long v80 = 0xFE00FE00FE00FE00;
      *((void *)&v80 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996C20 = v80;
      __cxa_guard_release(&qword_26A996680);
      a4 = v77;
      int8x8_t result = v74;
      a3 = v76;
      a2 = v75;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996688, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v81 = result;
    int8x16_t v82 = a2;
    int v83 = a3;
    int v84 = a4;
    int v85 = __cxa_guard_acquire(&qword_26A996688);
    a4 = v84;
    a3 = v83;
    a2 = v82;
    int v86 = v85;
    int8x8_t result = v81;
    if (v86)
    {
      *(void *)&long long v87 = 0xFE00FE00FE00FE00;
      *((void *)&v87 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996C30 = v87;
      __cxa_guard_release(&qword_26A996688);
      a4 = v84;
      int8x8_t result = v81;
      a3 = v83;
      a2 = v82;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996690, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v88 = result;
    int8x16_t v89 = a2;
    int v90 = a3;
    int v91 = a4;
    int v92 = __cxa_guard_acquire(&qword_26A996690);
    a4 = v91;
    a3 = v90;
    a2 = v89;
    int v93 = v92;
    int8x8_t result = v88;
    if (v93)
    {
      xmmword_26A996C40 = (__int128)vdupq_n_s16(0xFE04u);
      __cxa_guard_release(&qword_26A996690);
      a4 = v91;
      int8x8_t result = v88;
      a3 = v90;
      a2 = v89;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996698, memory_order_acquire) & 1) == 0)
  {
    int8x8x2_t v94 = result;
    int8x16_t v95 = a2;
    int v96 = a3;
    int v97 = a4;
    int v98 = __cxa_guard_acquire(&qword_26A996698);
    a4 = v97;
    a3 = v96;
    a2 = v95;
    int v99 = v98;
    int8x8_t result = v94;
    if (v99)
    {
      xmmword_26A996C50 = (__int128)vdupq_n_s16(0x1FBu);
      __cxa_guard_release(&qword_26A996698);
      a4 = v97;
      int8x8_t result = v94;
      a3 = v96;
      a2 = v95;
    }
  }
  int16x8_t v4 = (int16x8_t)xmmword_26A996C20;
  int16x8_t v5 = (int16x8_t)xmmword_26A996C30;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v47 = a2 + 8;
    int16x8_t v48 = a2 + 32;
    int8x16_t v49 = a2 + 40;
    int16x8_t v51 = a2 + 64;
    int16x8_t v50 = a2 + 72;
    int v46 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_17;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8000800080008000;
  v8.i64[1] = 0x8000800080008000;
  int8x16_t v9 = (__int16 *)result;
  do
  {
    uint8x16_t v10 = (int16x8_t *)((char *)result + 8 * a3);
    int16x8_t v11 = a2[32];
    int16x8_t v12 = a2[40];
    int64x2_t v13 = (int64x2_t)vtrn1q_s16(v11, v12);
    int64x2_t v14 = (int64x2_t)vzip2q_s16(v11, v12);
    *(int32x2_t *)v14.i8 = vmovn_s64(v14);
    int16x8_t v15 = (int16x8_t)vzip1q_s64(v13, v14);
    int16x8_t v16 = a2[64];
    int16x8_t v17 = a2[72];
    int64x2_t v18 = (int64x2_t)vtrn1q_s16(v16, v17);
    int64x2_t v19 = (int64x2_t)vzip2q_s16(v16, v17);
    *(int32x2_t *)v19.i8 = vmovn_s64(v19);
    int16x8_t v20 = (int16x8_t)vzip1q_s64(v18, v19);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v4), v5), 6uLL), v8);
    int16x8_t v22 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v4), v5), 6uLL), v8);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v15, v4), v5), 6uLL), v8);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v20, v4), v5), 6uLL), v8);
    vst2_s16(v9, *(int16x4x2_t *)((char *)&v21 - 8));
    int8x16_t v9 = (__int16 *)((char *)v9 + a3);
    result[1] = vzip2q_s16(v23, v21);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v22 - 8));
    result[3] = vzip2q_s16(v24, v22);
    int16x8_t v26 = a2[48];
    int16x8_t v27 = a2[56];
    int64x2_t v28 = (int64x2_t)vtrn1q_s16(v26, v27);
    int64x2_t v29 = (int64x2_t)vzip2q_s16(v26, v27);
    int16x8_t v30 = a2[80];
    int16x8_t v31 = a2[88];
    int16x8_t v32 = a2[16];
    int16x8_t v33 = a2[24];
    ++a2;
    int8x8_t result = (int16x8_t *)v9;
    *(int32x2_t *)v29.i8 = vmovn_s64(v29);
    int16x8_t v34 = (int16x8_t)vzip1q_s64(v28, v29);
    int64x2_t v35 = (int64x2_t)vtrn1q_s16(v30, v31);
    int64x2_t v36 = (int64x2_t)vzip2q_s16(v30, v31);
    *(int32x2_t *)v36.i8 = vmovn_s64(v36);
    int16x8_t v37 = (int16x8_t)vzip1q_s64(v35, v36);
    int16x8_t v38 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v32, v4), v5), 6uLL), v8);
    int16x8_t v39 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v33, v4), v5), 6uLL), v8);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v34, v4), v5), 6uLL), v8);
    uint8x16_t v41 = (__int16 *)v10;
    vst2_s16(v41, *(int16x4x2_t *)((char *)&v38 - 8));
    v41 += 8;
    int16x8_t v42 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v37, v4), v5), 6uLL), v8);
    *(int16x8_t *)uint8x16_t v41 = vzip2q_s16(v40, v38);
    int8x16_t v43 = v10[2].i16;
    vst2_s16(v43, *(int16x4x2_t *)((char *)&v39 - 8));
    v10[3] = vzip2q_s16(v42, v39);
    int v44 = v7 - 1;
    LODWORD(v43) = v7 - 16;
    --v7;
  }
  while ((int)v43 > 1);
  if (a4 <= 8) {
    int v45 = 8;
  }
  else {
    int v45 = a4;
  }
  int v46 = v44 - v45;
  int16x8_t v47 = a2 + 8;
  int16x8_t v48 = a2 + 32;
  int8x16_t v49 = a2 + 40;
  int16x8_t v50 = a2 + 72;
  int16x8_t v51 = a2 + 64;
  if (v46 >= 1)
  {
LABEL_17:
    int16x8_t v52 = result + 2;
    unsigned int v53 = v46 + 1;
    v54.i64[0] = 0x8000800080008000;
    v54.i64[1] = 0x8000800080008000;
    int16x8_t v55 = result[2].i16;
    do
    {
      int16x8_t v56 = *v48++;
      int16x8_t v57 = v56;
      int8x16_t v58 = v52[-2].i16;
      int16x8_t v59 = *v49++;
      int64x2_t v60 = (int64x2_t)vtrn1q_s16(v57, v59);
      int64x2_t v61 = (int64x2_t)vzip2q_s16(v57, v59);
      *(int32x2_t *)v61.i8 = vmovn_s64(v61);
      int16x8_t v62 = *v51++;
      int16x8_t v63 = v62;
      int16x8_t v64 = *v50++;
      int64x2_t v65 = (int64x2_t)vtrn1q_s16(v63, v64);
      int64x2_t v66 = (int64x2_t)vzip2q_s16(v63, v64);
      *(int32x2_t *)v66.i8 = vmovn_s64(v66);
      int16x8_t v67 = (int16x8_t)vzip1q_s64(v65, v66);
      int16x8_t v68 = *a2++;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v68, v4), v5), 6uLL), v54);
      int16x8_t v70 = *v47++;
      int16x8_t v71 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v4), v5), 6uLL), v54);
      int16x8_t v72 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16((int16x8_t)vzip1q_s64(v60, v61), v4), v5), 6uLL), v54);
      vst2_s16(v58, *(int16x4x2_t *)((char *)&v69 - 8));
      int16x8_t v73 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v67, v4), v5), 6uLL), v54);
      v52[-1] = vzip2q_s16(v72, v69);
      vst2_s16(v55, *(int16x4x2_t *)((char *)&v71 - 8));
      int16x8_t v55 = (__int16 *)((char *)v55 + a3);
      v52[1] = vzip2q_s16(v73, v71);
      --v53;
      int16x8_t v52 = (int16x8_t *)v55;
    }
    while (v53 > 1);
  }
  return result;
}

int16x8_t *from_444_to_v216_12bits<8,8,(AlphaOutputMethod)0,false>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9966A0, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v74 = result;
    int16x8_t v75 = a2;
    int v76 = a3;
    int v77 = a4;
    int v78 = __cxa_guard_acquire(&qword_26A9966A0);
    a4 = v77;
    a3 = v76;
    a2 = v75;
    int v79 = v78;
    int8x8_t result = v74;
    if (v79)
    {
      *(void *)&long long v80 = 0xF800F800F800F800;
      *((void *)&v80 + 1) = 0xF800F800F800F800;
      xmmword_26A996C60 = v80;
      __cxa_guard_release(&qword_26A9966A0);
      a4 = v77;
      int8x8_t result = v74;
      a3 = v76;
      a2 = v75;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9966A8, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v81 = result;
    int8x16_t v82 = a2;
    int v83 = a3;
    int v84 = a4;
    int v85 = __cxa_guard_acquire(&qword_26A9966A8);
    a4 = v84;
    a3 = v83;
    a2 = v82;
    int v86 = v85;
    int8x8_t result = v81;
    if (v86)
    {
      *(void *)&long long v87 = 0xF800F800F800F800;
      *((void *)&v87 + 1) = 0xF800F800F800F800;
      xmmword_26A996C70 = v87;
      __cxa_guard_release(&qword_26A9966A8);
      a4 = v84;
      int8x8_t result = v81;
      a3 = v83;
      a2 = v82;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9966B0, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v88 = result;
    int8x16_t v89 = a2;
    int v90 = a3;
    int v91 = a4;
    int v92 = __cxa_guard_acquire(&qword_26A9966B0);
    a4 = v91;
    a3 = v90;
    a2 = v89;
    int v93 = v92;
    int8x8_t result = v88;
    if (v93)
    {
      xmmword_26A996C80 = (__int128)vdupq_n_s16(0xF810u);
      __cxa_guard_release(&qword_26A9966B0);
      a4 = v91;
      int8x8_t result = v88;
      a3 = v90;
      a2 = v89;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9966B8, memory_order_acquire) & 1) == 0)
  {
    int8x8x2_t v94 = result;
    int8x16_t v95 = a2;
    int v96 = a3;
    int v97 = a4;
    int v98 = __cxa_guard_acquire(&qword_26A9966B8);
    a4 = v97;
    a3 = v96;
    a2 = v95;
    int v99 = v98;
    int8x8_t result = v94;
    if (v99)
    {
      xmmword_26A996C90 = (__int128)vdupq_n_s16(0x7EFu);
      __cxa_guard_release(&qword_26A9966B8);
      a4 = v97;
      int8x8_t result = v94;
      a3 = v96;
      a2 = v95;
    }
  }
  int16x8_t v4 = (int16x8_t)xmmword_26A996C60;
  int16x8_t v5 = (int16x8_t)xmmword_26A996C70;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v47 = a2 + 8;
    int16x8_t v48 = a2 + 32;
    int8x16_t v49 = a2 + 40;
    int16x8_t v51 = a2 + 64;
    int16x8_t v50 = a2 + 72;
    int v46 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_17;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8000800080008000;
  v8.i64[1] = 0x8000800080008000;
  int8x16_t v9 = (__int16 *)result;
  do
  {
    uint8x16_t v10 = (int16x8_t *)((char *)result + 8 * a3);
    int16x8_t v11 = a2[32];
    int16x8_t v12 = a2[40];
    int64x2_t v13 = (int64x2_t)vtrn1q_s16(v11, v12);
    int64x2_t v14 = (int64x2_t)vzip2q_s16(v11, v12);
    *(int32x2_t *)v14.i8 = vmovn_s64(v14);
    int16x8_t v15 = (int16x8_t)vzip1q_s64(v13, v14);
    int16x8_t v16 = a2[64];
    int16x8_t v17 = a2[72];
    int64x2_t v18 = (int64x2_t)vtrn1q_s16(v16, v17);
    int64x2_t v19 = (int64x2_t)vzip2q_s16(v16, v17);
    *(int32x2_t *)v19.i8 = vmovn_s64(v19);
    int16x8_t v20 = (int16x8_t)vzip1q_s64(v18, v19);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v4), v5), 4uLL), v8);
    int16x8_t v22 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v4), v5), 4uLL), v8);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v15, v4), v5), 4uLL), v8);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v20, v4), v5), 4uLL), v8);
    vst2_s16(v9, *(int16x4x2_t *)((char *)&v21 - 8));
    int8x16_t v9 = (__int16 *)((char *)v9 + a3);
    result[1] = vzip2q_s16(v23, v21);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v22 - 8));
    result[3] = vzip2q_s16(v24, v22);
    int16x8_t v26 = a2[48];
    int16x8_t v27 = a2[56];
    int64x2_t v28 = (int64x2_t)vtrn1q_s16(v26, v27);
    int64x2_t v29 = (int64x2_t)vzip2q_s16(v26, v27);
    int16x8_t v30 = a2[80];
    int16x8_t v31 = a2[88];
    int16x8_t v32 = a2[16];
    int16x8_t v33 = a2[24];
    ++a2;
    int8x8_t result = (int16x8_t *)v9;
    *(int32x2_t *)v29.i8 = vmovn_s64(v29);
    int16x8_t v34 = (int16x8_t)vzip1q_s64(v28, v29);
    int64x2_t v35 = (int64x2_t)vtrn1q_s16(v30, v31);
    int64x2_t v36 = (int64x2_t)vzip2q_s16(v30, v31);
    *(int32x2_t *)v36.i8 = vmovn_s64(v36);
    int16x8_t v37 = (int16x8_t)vzip1q_s64(v35, v36);
    int16x8_t v38 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v32, v4), v5), 4uLL), v8);
    int16x8_t v39 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v33, v4), v5), 4uLL), v8);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v34, v4), v5), 4uLL), v8);
    uint8x16_t v41 = (__int16 *)v10;
    vst2_s16(v41, *(int16x4x2_t *)((char *)&v38 - 8));
    v41 += 8;
    int16x8_t v42 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v37, v4), v5), 4uLL), v8);
    *(int16x8_t *)uint8x16_t v41 = vzip2q_s16(v40, v38);
    int8x16_t v43 = v10[2].i16;
    vst2_s16(v43, *(int16x4x2_t *)((char *)&v39 - 8));
    v10[3] = vzip2q_s16(v42, v39);
    int v44 = v7 - 1;
    LODWORD(v43) = v7 - 16;
    --v7;
  }
  while ((int)v43 > 1);
  if (a4 <= 8) {
    int v45 = 8;
  }
  else {
    int v45 = a4;
  }
  int v46 = v44 - v45;
  int16x8_t v47 = a2 + 8;
  int16x8_t v48 = a2 + 32;
  int8x16_t v49 = a2 + 40;
  int16x8_t v50 = a2 + 72;
  int16x8_t v51 = a2 + 64;
  if (v46 >= 1)
  {
LABEL_17:
    int16x8_t v52 = result + 2;
    unsigned int v53 = v46 + 1;
    v54.i64[0] = 0x8000800080008000;
    v54.i64[1] = 0x8000800080008000;
    int16x8_t v55 = result[2].i16;
    do
    {
      int16x8_t v56 = *v48++;
      int16x8_t v57 = v56;
      int8x16_t v58 = v52[-2].i16;
      int16x8_t v59 = *v49++;
      int64x2_t v60 = (int64x2_t)vtrn1q_s16(v57, v59);
      int64x2_t v61 = (int64x2_t)vzip2q_s16(v57, v59);
      *(int32x2_t *)v61.i8 = vmovn_s64(v61);
      int16x8_t v62 = *v51++;
      int16x8_t v63 = v62;
      int16x8_t v64 = *v50++;
      int64x2_t v65 = (int64x2_t)vtrn1q_s16(v63, v64);
      int64x2_t v66 = (int64x2_t)vzip2q_s16(v63, v64);
      *(int32x2_t *)v66.i8 = vmovn_s64(v66);
      int16x8_t v67 = (int16x8_t)vzip1q_s64(v65, v66);
      int16x8_t v68 = *a2++;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v68, v4), v5), 4uLL), v54);
      int16x8_t v70 = *v47++;
      int16x8_t v71 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v4), v5), 4uLL), v54);
      int16x8_t v72 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16((int16x8_t)vzip1q_s64(v60, v61), v4), v5), 4uLL), v54);
      vst2_s16(v58, *(int16x4x2_t *)((char *)&v69 - 8));
      int16x8_t v73 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v67, v4), v5), 4uLL), v54);
      v52[-1] = vzip2q_s16(v72, v69);
      vst2_s16(v55, *(int16x4x2_t *)((char *)&v71 - 8));
      int16x8_t v55 = (__int16 *)((char *)v55 + a3);
      v52[1] = vzip2q_s16(v73, v71);
      --v53;
      int16x8_t v52 = (int16x8_t *)v55;
    }
    while (v53 > 1);
  }
  return result;
}

int16x8_t *from_444_to_v216_12bits<8,8,(AlphaOutputMethod)0,true>(int16x8_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9966C0, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v74 = result;
    int16x8_t v75 = a2;
    int v76 = a3;
    int v77 = a4;
    int v78 = __cxa_guard_acquire(&qword_26A9966C0);
    a4 = v77;
    a3 = v76;
    a2 = v75;
    int v79 = v78;
    int8x8_t result = v74;
    if (v79)
    {
      *(void *)&long long v80 = 0xF800F800F800F800;
      *((void *)&v80 + 1) = 0xF800F800F800F800;
      xmmword_26A996CA0 = v80;
      __cxa_guard_release(&qword_26A9966C0);
      a4 = v77;
      int8x8_t result = v74;
      a3 = v76;
      a2 = v75;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9966C8, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v81 = result;
    int8x16_t v82 = a2;
    int v83 = a3;
    int v84 = a4;
    int v85 = __cxa_guard_acquire(&qword_26A9966C8);
    a4 = v84;
    a3 = v83;
    a2 = v82;
    int v86 = v85;
    int8x8_t result = v81;
    if (v86)
    {
      *(void *)&long long v87 = 0xF800F800F800F800;
      *((void *)&v87 + 1) = 0xF800F800F800F800;
      xmmword_26A996CB0 = v87;
      __cxa_guard_release(&qword_26A9966C8);
      a4 = v84;
      int8x8_t result = v81;
      a3 = v83;
      a2 = v82;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9966D0, memory_order_acquire) & 1) == 0)
  {
    int8x16_t v88 = result;
    int8x16_t v89 = a2;
    int v90 = a3;
    int v91 = a4;
    int v92 = __cxa_guard_acquire(&qword_26A9966D0);
    a4 = v91;
    a3 = v90;
    a2 = v89;
    int v93 = v92;
    int8x8_t result = v88;
    if (v93)
    {
      xmmword_26A996CC0 = (__int128)vdupq_n_s16(0xF810u);
      __cxa_guard_release(&qword_26A9966D0);
      a4 = v91;
      int8x8_t result = v88;
      a3 = v90;
      a2 = v89;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9966D8, memory_order_acquire) & 1) == 0)
  {
    int8x8x2_t v94 = result;
    int8x16_t v95 = a2;
    int v96 = a3;
    int v97 = a4;
    int v98 = __cxa_guard_acquire(&qword_26A9966D8);
    a4 = v97;
    a3 = v96;
    a2 = v95;
    int v99 = v98;
    int8x8_t result = v94;
    if (v99)
    {
      xmmword_26A996CD0 = (__int128)vdupq_n_s16(0x7EFu);
      __cxa_guard_release(&qword_26A9966D8);
      a4 = v97;
      int8x8_t result = v94;
      a3 = v96;
      a2 = v95;
    }
  }
  int16x8_t v4 = (int16x8_t)xmmword_26A996CA0;
  int16x8_t v5 = (int16x8_t)xmmword_26A996CB0;
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v47 = a2 + 8;
    int16x8_t v48 = a2 + 32;
    int8x16_t v49 = a2 + 40;
    int16x8_t v51 = a2 + 64;
    int16x8_t v50 = a2 + 72;
    int v46 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_17;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0x8000800080008000;
  v8.i64[1] = 0x8000800080008000;
  int8x16_t v9 = (__int16 *)result;
  do
  {
    uint8x16_t v10 = (int16x8_t *)((char *)result + 8 * a3);
    int16x8_t v11 = a2[32];
    int16x8_t v12 = a2[40];
    int64x2_t v13 = (int64x2_t)vtrn1q_s16(v11, v12);
    int64x2_t v14 = (int64x2_t)vzip2q_s16(v11, v12);
    *(int32x2_t *)v14.i8 = vmovn_s64(v14);
    int16x8_t v15 = (int16x8_t)vzip1q_s64(v13, v14);
    int16x8_t v16 = a2[64];
    int16x8_t v17 = a2[72];
    int64x2_t v18 = (int64x2_t)vtrn1q_s16(v16, v17);
    int64x2_t v19 = (int64x2_t)vzip2q_s16(v16, v17);
    *(int32x2_t *)v19.i8 = vmovn_s64(v19);
    int16x8_t v20 = (int16x8_t)vzip1q_s64(v18, v19);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v4), v5), 4uLL), v8);
    int16x8_t v22 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v4), v5), 4uLL), v8);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v15, v4), v5), 4uLL), v8);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v20, v4), v5), 4uLL), v8);
    vst2_s16(v9, *(int16x4x2_t *)((char *)&v21 - 8));
    int8x16_t v9 = (__int16 *)((char *)v9 + a3);
    result[1] = vzip2q_s16(v23, v21);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v22 - 8));
    result[3] = vzip2q_s16(v24, v22);
    int16x8_t v26 = a2[48];
    int16x8_t v27 = a2[56];
    int64x2_t v28 = (int64x2_t)vtrn1q_s16(v26, v27);
    int64x2_t v29 = (int64x2_t)vzip2q_s16(v26, v27);
    int16x8_t v30 = a2[80];
    int16x8_t v31 = a2[88];
    int16x8_t v32 = a2[16];
    int16x8_t v33 = a2[24];
    ++a2;
    int8x8_t result = (int16x8_t *)v9;
    *(int32x2_t *)v29.i8 = vmovn_s64(v29);
    int16x8_t v34 = (int16x8_t)vzip1q_s64(v28, v29);
    int64x2_t v35 = (int64x2_t)vtrn1q_s16(v30, v31);
    int64x2_t v36 = (int64x2_t)vzip2q_s16(v30, v31);
    *(int32x2_t *)v36.i8 = vmovn_s64(v36);
    int16x8_t v37 = (int16x8_t)vzip1q_s64(v35, v36);
    int16x8_t v38 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v32, v4), v5), 4uLL), v8);
    int16x8_t v39 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v33, v4), v5), 4uLL), v8);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v34, v4), v5), 4uLL), v8);
    uint8x16_t v41 = (__int16 *)v10;
    vst2_s16(v41, *(int16x4x2_t *)((char *)&v38 - 8));
    v41 += 8;
    int16x8_t v42 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v37, v4), v5), 4uLL), v8);
    *(int16x8_t *)uint8x16_t v41 = vzip2q_s16(v40, v38);
    int8x16_t v43 = v10[2].i16;
    vst2_s16(v43, *(int16x4x2_t *)((char *)&v39 - 8));
    v10[3] = vzip2q_s16(v42, v39);
    int v44 = v7 - 1;
    LODWORD(v43) = v7 - 16;
    --v7;
  }
  while ((int)v43 > 1);
  if (a4 <= 8) {
    int v45 = 8;
  }
  else {
    int v45 = a4;
  }
  int v46 = v44 - v45;
  int16x8_t v47 = a2 + 8;
  int16x8_t v48 = a2 + 32;
  int8x16_t v49 = a2 + 40;
  int16x8_t v50 = a2 + 72;
  int16x8_t v51 = a2 + 64;
  if (v46 >= 1)
  {
LABEL_17:
    int16x8_t v52 = result + 2;
    unsigned int v53 = v46 + 1;
    v54.i64[0] = 0x8000800080008000;
    v54.i64[1] = 0x8000800080008000;
    int16x8_t v55 = result[2].i16;
    do
    {
      int16x8_t v56 = *v48++;
      int16x8_t v57 = v56;
      int8x16_t v58 = v52[-2].i16;
      int16x8_t v59 = *v49++;
      int64x2_t v60 = (int64x2_t)vtrn1q_s16(v57, v59);
      int64x2_t v61 = (int64x2_t)vzip2q_s16(v57, v59);
      *(int32x2_t *)v61.i8 = vmovn_s64(v61);
      int16x8_t v62 = *v51++;
      int16x8_t v63 = v62;
      int16x8_t v64 = *v50++;
      int64x2_t v65 = (int64x2_t)vtrn1q_s16(v63, v64);
      int64x2_t v66 = (int64x2_t)vzip2q_s16(v63, v64);
      *(int32x2_t *)v66.i8 = vmovn_s64(v66);
      int16x8_t v67 = (int16x8_t)vzip1q_s64(v65, v66);
      int16x8_t v68 = *a2++;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v68, v4), v5), 4uLL), v54);
      int16x8_t v70 = *v47++;
      int16x8_t v71 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v4), v5), 4uLL), v54);
      int16x8_t v72 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16((int16x8_t)vzip1q_s64(v60, v61), v4), v5), 4uLL), v54);
      vst2_s16(v58, *(int16x4x2_t *)((char *)&v69 - 8));
      int16x8_t v73 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v67, v4), v5), 4uLL), v54);
      v52[-1] = vzip2q_s16(v72, v69);
      vst2_s16(v55, *(int16x4x2_t *)((char *)&v71 - 8));
      int16x8_t v55 = (__int16 *)((char *)v55 + a3);
      v52[1] = vzip2q_s16(v73, v71);
      --v53;
      int16x8_t v52 = (int16x8_t *)v55;
    }
    while (v53 > 1);
  }
  return result;
}

int16x8_t *from_444_to_v216<8,8,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int16x8_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_v216_8xH<(PixelFormat)1983000886,false,(PixelOutputStoreType)0>(a1, a2, a3, a4, 8u);
}

int16x8_t *from_444_to_v216<8,8,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int16x8_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_v216_8xH<(PixelFormat)1983000886,true,(PixelOutputStoreType)0>(a1, a2, a3, a4, 8u);
}

int16x8_t *from_444_to_v216<8,4,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int16x8_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_v216_8xH<(PixelFormat)1983000886,false,(PixelOutputStoreType)0>(a1, a2, a3, a4, 4u);
}

int16x8_t *from_444_to_v216<8,4,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int16x8_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_v216_8xH<(PixelFormat)1983000886,true,(PixelOutputStoreType)0>(a1, a2, a3, a4, 4u);
}

int8x8_t *from_444_to_v216<4,8,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *result, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = 0;
  int v5 = a4 & ~(a4 >> 31);
  while (1)
  {
    int v6 = (__int16 *)(a2 + v4);
    if (!v5) {
      break;
    }
    v7.i16[0] = v6[128];
    v7.i16[1] = *v6;
    v7.i16[2] = v6[160];
    v7.i16[3] = v6[1];
    *int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[130];
    v7.i16[1] = v6[2];
    v7.i16[2] = v6[162];
    v7.i16[3] = v6[3];
    result[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[256];
    v7.i16[1] = v6[32];
    v7.i16[2] = v6[288];
    v7.i16[3] = v6[33];
    result[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[258];
    v7.i16[1] = v6[34];
    v7.i16[2] = v6[290];
    v7.i16[3] = v6[35];
    result[3] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int8x8_t result = (int8x8_t *)((char *)result + a3);
    v4 += 8;
    --v5;
    if (v4 == 64)
    {
      uint64_t v8 = a2 + v4;
      uint64_t v9 = a2 + v4 + 576;
      uint8x16_t v10 = (__int16 *)(v8 + 64);
      int16x8_t v11 = (__int16 *)(v8 + 320);
      goto LABEL_6;
    }
  }
  uint64_t v9 = (uint64_t)(v6 + 288);
  uint8x16_t v10 = v6 + 32;
  int16x8_t v11 = v6 + 160;
LABEL_6:
  uint64_t v12 = 0;
  int64x2_t v13 = v11 + 32;
  int64x2_t v14 = v10 + 32;
  if (a4 <= 8) {
    int v15 = 8;
  }
  else {
    int v15 = a4;
  }
  int v16 = v15 - 8;
  int16x8_t v17 = (int16x4_t *)&result[2];
  do
  {
    if (!v16) {
      break;
    }
    v18.i16[0] = v13[v12 - 32];
    v18.i16[1] = v13[v12];
    v18.i32[1] = *(_DWORD *)&v14[v12 - 32];
    int16x4_t v19 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v17[-2] = vuzp1_s16(v19, vrev32_s16(v19));
    v18.i16[0] = v13[v12 - 30];
    v18.i16[1] = v13[v12 + 2];
    v18.i32[1] = *(_DWORD *)&v14[v12 - 30];
    int16x4_t v20 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v17[-1] = vuzp1_s16(v20, vrev32_s16(v20));
    v18.i16[0] = *(_WORD *)(v9 + v12 * 2);
    v18.i16[1] = *(_WORD *)(v9 + v12 * 2 + 64);
    v18.i32[1] = *(_DWORD *)&v14[v12];
    int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t *v17 = vuzp1_s16(v21, vrev32_s16(v21));
    int8x8_t result = (int8x8_t *)(v9 + v12 * 2 + 68);
    v18.i16[0] = *(_WORD *)(v9 + v12 * 2 + 4);
    v18.i16[1] = result->i16[0];
    v18.i32[1] = *(_DWORD *)&v14[v12 + 2];
    int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v17[1] = vuzp1_s16(v22, vrev32_s16(v22));
    v12 += 4;
    --v16;
    int16x8_t v17 = (int16x4_t *)((char *)v17 + a3);
  }
  while ((v12 * 2) != 64);
  return result;
}

int8x8_t *from_444_to_v216<4,8,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *result, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = 0;
  int v5 = a4 & ~(a4 >> 31);
  while (1)
  {
    int v6 = (__int16 *)(a2 + v4);
    if (!v5) {
      break;
    }
    v7.i16[0] = v6[128];
    v7.i16[1] = *v6;
    v7.i16[2] = v6[160];
    v7.i16[3] = v6[1];
    *int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[130];
    v7.i16[1] = v6[2];
    v7.i16[2] = v6[162];
    v7.i16[3] = v6[3];
    result[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[256];
    v7.i16[1] = v6[32];
    v7.i16[2] = v6[288];
    v7.i16[3] = v6[33];
    result[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[258];
    v7.i16[1] = v6[34];
    v7.i16[2] = v6[290];
    v7.i16[3] = v6[35];
    result[3] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int8x8_t result = (int8x8_t *)((char *)result + a3);
    v4 += 8;
    --v5;
    if (v4 == 64)
    {
      uint64_t v8 = a2 + v4;
      uint64_t v9 = a2 + v4 + 576;
      uint8x16_t v10 = (__int16 *)(v8 + 64);
      int16x8_t v11 = (__int16 *)(v8 + 320);
      goto LABEL_6;
    }
  }
  uint64_t v9 = (uint64_t)(v6 + 288);
  uint8x16_t v10 = v6 + 32;
  int16x8_t v11 = v6 + 160;
LABEL_6:
  uint64_t v12 = 0;
  int64x2_t v13 = v11 + 32;
  int64x2_t v14 = v10 + 32;
  if (a4 <= 8) {
    int v15 = 8;
  }
  else {
    int v15 = a4;
  }
  int v16 = v15 - 8;
  int16x8_t v17 = (int16x4_t *)&result[2];
  do
  {
    if (!v16) {
      break;
    }
    v18.i16[0] = v13[v12 - 32];
    v18.i16[1] = v13[v12];
    v18.i32[1] = *(_DWORD *)&v14[v12 - 32];
    int16x4_t v19 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v17[-2] = vuzp1_s16(v19, vrev32_s16(v19));
    v18.i16[0] = v13[v12 - 30];
    v18.i16[1] = v13[v12 + 2];
    v18.i32[1] = *(_DWORD *)&v14[v12 - 30];
    int16x4_t v20 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v17[-1] = vuzp1_s16(v20, vrev32_s16(v20));
    v18.i16[0] = *(_WORD *)(v9 + v12 * 2);
    v18.i16[1] = *(_WORD *)(v9 + v12 * 2 + 64);
    v18.i32[1] = *(_DWORD *)&v14[v12];
    int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t *v17 = vuzp1_s16(v21, vrev32_s16(v21));
    int8x8_t result = (int8x8_t *)(v9 + v12 * 2 + 68);
    v18.i16[0] = *(_WORD *)(v9 + v12 * 2 + 4);
    v18.i16[1] = result->i16[0];
    v18.i32[1] = *(_DWORD *)&v14[v12 + 2];
    int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v17[1] = vuzp1_s16(v22, vrev32_s16(v22));
    v12 += 4;
    --v16;
    int16x8_t v17 = (int16x4_t *)((char *)v17 + a3);
  }
  while ((v12 * 2) != 64);
  return result;
}

int8x8_t *from_444_to_v216<4,4,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *result, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = 0;
  int v5 = a4 & ~(a4 >> 31);
  while (1)
  {
    int v6 = (__int16 *)(a2 + v4);
    if (!v5) {
      break;
    }
    v7.i16[0] = v6[64];
    v7.i16[1] = *v6;
    v7.i16[2] = v6[80];
    v7.i16[3] = v6[1];
    *int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[66];
    v7.i16[1] = v6[2];
    v7.i16[2] = v6[82];
    v7.i16[3] = v6[3];
    result[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[128];
    v7.i16[1] = v6[16];
    v7.i16[2] = v6[144];
    v7.i16[3] = v6[17];
    result[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[130];
    v7.i16[1] = v6[18];
    v7.i16[2] = v6[146];
    v7.i16[3] = v6[19];
    result[3] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int8x8_t result = (int8x8_t *)((char *)result + a3);
    v4 += 8;
    --v5;
    if (v4 == 32)
    {
      uint64_t v8 = a2 + v4;
      uint64_t v9 = a2 + v4 + 288;
      uint8x16_t v10 = (__int16 *)(v8 + 32);
      int16x8_t v11 = (__int16 *)(v8 + 160);
      goto LABEL_6;
    }
  }
  uint64_t v9 = (uint64_t)(v6 + 144);
  uint8x16_t v10 = v6 + 16;
  int16x8_t v11 = v6 + 80;
LABEL_6:
  uint64_t v12 = 0;
  int64x2_t v13 = v11 + 16;
  int64x2_t v14 = v10 + 16;
  if (a4 <= 4) {
    int v15 = 4;
  }
  else {
    int v15 = a4;
  }
  int v16 = v15 - 4;
  int16x8_t v17 = (int16x4_t *)&result[2];
  do
  {
    if (!v16) {
      break;
    }
    v18.i16[0] = v13[v12 - 16];
    v18.i16[1] = v13[v12];
    v18.i32[1] = *(_DWORD *)&v14[v12 - 16];
    int16x4_t v19 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v17[-2] = vuzp1_s16(v19, vrev32_s16(v19));
    v18.i16[0] = v13[v12 - 14];
    v18.i16[1] = v13[v12 + 2];
    v18.i32[1] = *(_DWORD *)&v14[v12 - 14];
    int16x4_t v20 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v17[-1] = vuzp1_s16(v20, vrev32_s16(v20));
    v18.i16[0] = *(_WORD *)(v9 + v12 * 2);
    v18.i16[1] = *(_WORD *)(v9 + v12 * 2 + 32);
    v18.i32[1] = *(_DWORD *)&v14[v12];
    int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t *v17 = vuzp1_s16(v21, vrev32_s16(v21));
    int8x8_t result = (int8x8_t *)(v9 + v12 * 2 + 36);
    v18.i16[0] = *(_WORD *)(v9 + v12 * 2 + 4);
    v18.i16[1] = result->i16[0];
    v18.i32[1] = *(_DWORD *)&v14[v12 + 2];
    int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v17[1] = vuzp1_s16(v22, vrev32_s16(v22));
    v12 += 4;
    --v16;
    int16x8_t v17 = (int16x4_t *)((char *)v17 + a3);
  }
  while ((v12 * 2) != 32);
  return result;
}

int8x8_t *from_444_to_v216<4,4,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *result, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = 0;
  int v5 = a4 & ~(a4 >> 31);
  while (1)
  {
    int v6 = (__int16 *)(a2 + v4);
    if (!v5) {
      break;
    }
    v7.i16[0] = v6[64];
    v7.i16[1] = *v6;
    v7.i16[2] = v6[80];
    v7.i16[3] = v6[1];
    *int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[66];
    v7.i16[1] = v6[2];
    v7.i16[2] = v6[82];
    v7.i16[3] = v6[3];
    result[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[128];
    v7.i16[1] = v6[16];
    v7.i16[2] = v6[144];
    v7.i16[3] = v6[17];
    result[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v7.i16[0] = v6[130];
    v7.i16[1] = v6[18];
    v7.i16[2] = v6[146];
    v7.i16[3] = v6[19];
    result[3] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int8x8_t result = (int8x8_t *)((char *)result + a3);
    v4 += 8;
    --v5;
    if (v4 == 32)
    {
      uint64_t v8 = a2 + v4;
      uint64_t v9 = a2 + v4 + 288;
      uint8x16_t v10 = (__int16 *)(v8 + 32);
      int16x8_t v11 = (__int16 *)(v8 + 160);
      goto LABEL_6;
    }
  }
  uint64_t v9 = (uint64_t)(v6 + 144);
  uint8x16_t v10 = v6 + 16;
  int16x8_t v11 = v6 + 80;
LABEL_6:
  uint64_t v12 = 0;
  int64x2_t v13 = v11 + 16;
  int64x2_t v14 = v10 + 16;
  if (a4 <= 4) {
    int v15 = 4;
  }
  else {
    int v15 = a4;
  }
  int v16 = v15 - 4;
  int16x8_t v17 = (int16x4_t *)&result[2];
  do
  {
    if (!v16) {
      break;
    }
    v18.i16[0] = v13[v12 - 16];
    v18.i16[1] = v13[v12];
    v18.i32[1] = *(_DWORD *)&v14[v12 - 16];
    int16x4_t v19 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v17[-2] = vuzp1_s16(v19, vrev32_s16(v19));
    v18.i16[0] = v13[v12 - 14];
    v18.i16[1] = v13[v12 + 2];
    v18.i32[1] = *(_DWORD *)&v14[v12 - 14];
    int16x4_t v20 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v17[-1] = vuzp1_s16(v20, vrev32_s16(v20));
    v18.i16[0] = *(_WORD *)(v9 + v12 * 2);
    v18.i16[1] = *(_WORD *)(v9 + v12 * 2 + 32);
    v18.i32[1] = *(_DWORD *)&v14[v12];
    int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    int16x4_t *v17 = vuzp1_s16(v21, vrev32_s16(v21));
    int8x8_t result = (int8x8_t *)(v9 + v12 * 2 + 36);
    v18.i16[0] = *(_WORD *)(v9 + v12 * 2 + 4);
    v18.i16[1] = result->i16[0];
    v18.i32[1] = *(_DWORD *)&v14[v12 + 2];
    int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v18, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v17[1] = vuzp1_s16(v22, vrev32_s16(v22));
    v12 += 4;
    --v16;
    int16x8_t v17 = (int16x4_t *)((char *)v17 + a3);
  }
  while ((v12 * 2) != 32);
  return result;
}

int8x8_t from_444_to_v216<4,2,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  uint64_t v4 = a2 + 40;
  int v5 = a2 + 72;
  int v6 = a2 + 8;
  if (a4 > 0)
  {
    v7.i16[0] = a2[32];
    v7.i16[1] = *a2;
    v7.i16[2] = *v4;
    v7.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v9.i16[0] = a2[34];
    v9.i16[1] = a2[2];
    v9.i16[2] = a2[42];
    v9.i16[3] = a2[3];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v9.i16[0] = a2[64];
    v9.i16[1] = *v6;
    v9.i16[2] = *v5;
    v9.i16[3] = a2[9];
    a1[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v9.i16[0] = a2[66];
    v9.i16[1] = a2[10];
    v9.i16[2] = a2[74];
    v9.i16[3] = a2[11];
    a1[3] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v6 = a2 + 12;
    uint64_t v4 = a2 + 44;
    int v5 = a2 + 76;
    if (a4 != 1)
    {
      v10.i16[0] = a2[36];
      v10.i16[1] = a2[4];
      v10.i16[2] = *v4;
      v10.i16[3] = a2[5];
      *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v10.i16[0] = a2[38];
      v10.i16[1] = a2[6];
      v10.i16[2] = a2[46];
      v10.i16[3] = a2[7];
      a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v10.i16[0] = a2[68];
      v10.i16[1] = *v6;
      v10.i16[2] = *v5;
      v10.i16[3] = a2[13];
      a1[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v10.i16[0] = a2[70];
      v10.i16[1] = a2[14];
      v10.i16[2] = a2[78];
      v10.i16[3] = a2[15];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      a1[3] = result;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v6 = a2 + 16;
      uint64_t v4 = a2 + 48;
      int v5 = a2 + 80;
    }
  }
  if (a4 <= 2) {
    int v11 = 2;
  }
  else {
    int v11 = a4;
  }
  int v12 = v11 - 2;
  if (v12)
  {
    v13.i16[0] = *v4;
    v13.i16[1] = v4[8];
    v13.i32[1] = *(_DWORD *)v6;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    int16x4_t v14 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v13, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    *a1 = (int8x8_t)vuzp1_s16(v14, vrev32_s16(v14));
    v15.i16[0] = v4[2];
    v15.i16[1] = v4[10];
    v15.i32[1] = *((_DWORD *)v6 + 1);
    int16x4_t v16 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v15, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[1] = (int8x8_t)vuzp1_s16(v16, vrev32_s16(v16));
    v15.i16[0] = *v5;
    v15.i16[1] = v5[8];
    v15.i32[1] = *((_DWORD *)v6 + 4);
    int16x4_t v17 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v15, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[2] = (int8x8_t)vuzp1_s16(v17, vrev32_s16(v17));
    v15.i16[0] = v5[2];
    v15.i16[1] = v5[10];
    v15.i32[1] = *((_DWORD *)v6 + 5);
    int16x4_t v18 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v15, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[3] = (int8x8_t)vuzp1_s16(v18, vrev32_s16(v18));
    if (v12 != 1)
    {
      int16x4_t v19 = (int16x4_t *)((char *)a1 + a3);
      v20.i16[0] = v4[4];
      v20.i16[1] = v4[12];
      v20.i32[1] = *((_DWORD *)v6 + 2);
      int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v20, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *int16x4_t v19 = vuzp1_s16(v21, vrev32_s16(v21));
      v20.i16[0] = v4[6];
      v20.i16[1] = v4[14];
      v20.i32[1] = *((_DWORD *)v6 + 3);
      int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v20, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v19[1] = vuzp1_s16(v22, vrev32_s16(v22));
      v21.i16[0] = v5[4];
      v21.i16[1] = v5[12];
      v21.i32[1] = *((_DWORD *)v6 + 6);
      int16x4_t v23 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v21, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      CFTypeRef v19[2] = vuzp1_s16(v23, vrev32_s16(v23));
      v22.i16[0] = v5[6];
      v22.i16[1] = v5[14];
      v22.i32[1] = *((_DWORD *)v6 + 7);
      int16x4_t v24 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v22, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int8x8_t result = (int8x8_t)vuzp1_s16(v24, vrev32_s16(v24));
      v19[3] = (int16x4_t)result;
    }
  }
  return result;
}

int8x8_t from_444_to_v216<4,2,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  uint64_t v4 = a2 + 40;
  int v5 = a2 + 72;
  int v6 = a2 + 8;
  if (a4 > 0)
  {
    v7.i16[0] = a2[32];
    v7.i16[1] = *a2;
    v7.i16[2] = *v4;
    v7.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v9.i16[0] = a2[34];
    v9.i16[1] = a2[2];
    v9.i16[2] = a2[42];
    v9.i16[3] = a2[3];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v9.i16[0] = a2[64];
    v9.i16[1] = *v6;
    v9.i16[2] = *v5;
    v9.i16[3] = a2[9];
    a1[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v9.i16[0] = a2[66];
    v9.i16[1] = a2[10];
    v9.i16[2] = a2[74];
    v9.i16[3] = a2[11];
    a1[3] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v6 = a2 + 12;
    uint64_t v4 = a2 + 44;
    int v5 = a2 + 76;
    if (a4 != 1)
    {
      v10.i16[0] = a2[36];
      v10.i16[1] = a2[4];
      v10.i16[2] = *v4;
      v10.i16[3] = a2[5];
      *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v10.i16[0] = a2[38];
      v10.i16[1] = a2[6];
      v10.i16[2] = a2[46];
      v10.i16[3] = a2[7];
      a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v10.i16[0] = a2[68];
      v10.i16[1] = *v6;
      v10.i16[2] = *v5;
      v10.i16[3] = a2[13];
      a1[2] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v10.i16[0] = a2[70];
      v10.i16[1] = a2[14];
      v10.i16[2] = a2[78];
      v10.i16[3] = a2[15];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      a1[3] = result;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v6 = a2 + 16;
      uint64_t v4 = a2 + 48;
      int v5 = a2 + 80;
    }
  }
  if (a4 <= 2) {
    int v11 = 2;
  }
  else {
    int v11 = a4;
  }
  int v12 = v11 - 2;
  if (v12)
  {
    v13.i16[0] = *v4;
    v13.i16[1] = v4[8];
    v13.i32[1] = *(_DWORD *)v6;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    int16x4_t v14 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v13, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    *a1 = (int8x8_t)vuzp1_s16(v14, vrev32_s16(v14));
    v15.i16[0] = v4[2];
    v15.i16[1] = v4[10];
    v15.i32[1] = *((_DWORD *)v6 + 1);
    int16x4_t v16 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v15, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[1] = (int8x8_t)vuzp1_s16(v16, vrev32_s16(v16));
    v15.i16[0] = *v5;
    v15.i16[1] = v5[8];
    v15.i32[1] = *((_DWORD *)v6 + 4);
    int16x4_t v17 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v15, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[2] = (int8x8_t)vuzp1_s16(v17, vrev32_s16(v17));
    v15.i16[0] = v5[2];
    v15.i16[1] = v5[10];
    v15.i32[1] = *((_DWORD *)v6 + 5);
    int16x4_t v18 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v15, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[3] = (int8x8_t)vuzp1_s16(v18, vrev32_s16(v18));
    if (v12 != 1)
    {
      int16x4_t v19 = (int16x4_t *)((char *)a1 + a3);
      v20.i16[0] = v4[4];
      v20.i16[1] = v4[12];
      v20.i32[1] = *((_DWORD *)v6 + 2);
      int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v20, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *int16x4_t v19 = vuzp1_s16(v21, vrev32_s16(v21));
      v20.i16[0] = v4[6];
      v20.i16[1] = v4[14];
      v20.i32[1] = *((_DWORD *)v6 + 3);
      int16x4_t v22 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v20, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v19[1] = vuzp1_s16(v22, vrev32_s16(v22));
      v21.i16[0] = v5[4];
      v21.i16[1] = v5[12];
      v21.i32[1] = *((_DWORD *)v6 + 6);
      int16x4_t v23 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v21, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      CFTypeRef v19[2] = vuzp1_s16(v23, vrev32_s16(v23));
      v22.i16[0] = v5[6];
      v22.i16[1] = v5[14];
      v22.i32[1] = *((_DWORD *)v6 + 7);
      int16x4_t v24 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v22, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int8x8_t result = (int8x8_t)vuzp1_s16(v24, vrev32_s16(v24));
      v19[3] = (int16x4_t)result;
    }
  }
  return result;
}

int8x8_t from_444_to_v216<2,4,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  uint64_t v4 = a2 + 40;
  int v5 = a2 + 72;
  int v6 = a2 + 8;
  if (a4 > 0)
  {
    int v7 = a4 & ~(a4 >> 31);
    v8.i16[0] = a2[32];
    v8.i16[1] = *a2;
    v8.i16[2] = *v4;
    v8.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v10.i16[0] = a2[64];
    v10.i16[1] = *v6;
    v10.i16[2] = *v5;
    v10.i16[3] = a2[9];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v6 = a2 + 10;
    uint64_t v4 = a2 + 42;
    int v5 = a2 + 74;
    if (v7 != 1)
    {
      v11.i16[0] = a2[34];
      v11.i16[1] = a2[2];
      v11.i16[2] = *v4;
      v11.i16[3] = a2[3];
      *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v11, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v11.i16[0] = a2[66];
      v11.i16[1] = *v6;
      v11.i16[2] = *v5;
      v11.i16[3] = a2[11];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v11, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      a1[1] = result;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v6 = a2 + 12;
      uint64_t v4 = a2 + 44;
      int v5 = a2 + 76;
      if (v7 != 2)
      {
        v12.i16[0] = a2[36];
        v12.i16[1] = a2[4];
        v12.i16[2] = *v4;
        v12.i16[3] = a2[5];
        int8x8_t result = (int8x8_t)0xF000F000F000F000;
        *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v12, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        v13.i16[0] = a2[68];
        v13.i16[1] = *v6;
        v13.i16[2] = *v5;
        v13.i16[3] = a2[13];
        a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v13, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        a1 = (int8x8_t *)((char *)a1 + a3);
        int v6 = a2 + 14;
        uint64_t v4 = a2 + 46;
        int v5 = a2 + 78;
        if (v7 != 3)
        {
          v14.i16[0] = a2[38];
          v14.i16[1] = a2[6];
          v14.i16[2] = *v4;
          v14.i16[3] = a2[7];
          *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v14, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          v14.i16[0] = a2[70];
          v14.i16[1] = *v6;
          v14.i16[2] = *v5;
          v14.i16[3] = a2[15];
          int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v14, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          a1[1] = result;
          a1 = (int8x8_t *)((char *)a1 + a3);
          int v6 = a2 + 16;
          uint64_t v4 = a2 + 48;
          int v5 = a2 + 80;
        }
      }
    }
  }
  if (a4 <= 4) {
    int v15 = 4;
  }
  else {
    int v15 = a4;
  }
  int v16 = v15 - 4;
  if (v16)
  {
    v17.i16[0] = *v4;
    v17.i16[1] = v4[8];
    v17.i32[1] = *(_DWORD *)v6;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    int16x4_t v18 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    *a1 = (int8x8_t)vuzp1_s16(v18, vrev32_s16(v18));
    v19.i16[0] = *v5;
    v19.i16[1] = v5[8];
    v19.i32[1] = *((_DWORD *)v6 + 4);
    int16x4_t v20 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v19, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[1] = (int8x8_t)vuzp1_s16(v20, vrev32_s16(v20));
    if (v16 != 1)
    {
      int16x4_t v21 = (int16x4_t *)((char *)a1 + a3);
      v22.i16[0] = v4[2];
      v22.i16[1] = v4[10];
      v22.i32[1] = *((_DWORD *)v6 + 1);
      int16x4_t v23 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v22, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *int16x4_t v21 = vuzp1_s16(v23, vrev32_s16(v23));
      v22.i16[0] = v5[2];
      v22.i16[1] = v5[10];
      v22.i32[1] = *((_DWORD *)v6 + 5);
      int16x4_t v24 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v22, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int8x8_t result = (int8x8_t)vuzp1_s16(v24, vrev32_s16(v24));
      v21[1] = (int16x4_t)result;
      if (v16 != 2)
      {
        int8x16_t v25 = (int16x4_t *)((char *)v21 + a3);
        v26.i16[0] = v4[4];
        v26.i16[1] = v4[12];
        v26.i32[1] = *((_DWORD *)v6 + 2);
        int8x8_t result = (int8x8_t)0xF000F000F000F000;
        int16x4_t v27 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v26, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        *int8x16_t v25 = vuzp1_s16(v27, vrev32_s16(v27));
        v28.i16[0] = v5[4];
        v28.i16[1] = v5[12];
        v28.i32[1] = *((_DWORD *)v6 + 6);
        int16x4_t v29 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v28, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        v25[1] = vuzp1_s16(v29, vrev32_s16(v29));
        if (v16 != 3)
        {
          v30.i16[0] = v4[6];
          v30.i16[1] = v4[14];
          v30.i32[1] = *((_DWORD *)v6 + 3);
          int16x4_t v31 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v30, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          int16x8_t v32 = (int16x4_t *)((char *)v25 + a3);
          *int16x8_t v32 = vuzp1_s16(v31, vrev32_s16(v31));
          v33.i16[0] = v5[6];
          v33.i16[1] = v5[14];
          v33.i32[1] = *((_DWORD *)v6 + 7);
          int16x4_t v34 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v33, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          int8x8_t result = (int8x8_t)vuzp1_s16(v34, vrev32_s16(v34));
          v32[1] = (int16x4_t)result;
        }
      }
    }
  }
  return result;
}

int8x8_t from_444_to_v216<2,4,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  uint64_t v4 = a2 + 40;
  int v5 = a2 + 72;
  int v6 = a2 + 8;
  if (a4 > 0)
  {
    int v7 = a4 & ~(a4 >> 31);
    v8.i16[0] = a2[32];
    v8.i16[1] = *a2;
    v8.i16[2] = *v4;
    v8.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v10.i16[0] = a2[64];
    v10.i16[1] = *v6;
    v10.i16[2] = *v5;
    v10.i16[3] = a2[9];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v6 = a2 + 10;
    uint64_t v4 = a2 + 42;
    int v5 = a2 + 74;
    if (v7 != 1)
    {
      v11.i16[0] = a2[34];
      v11.i16[1] = a2[2];
      v11.i16[2] = *v4;
      v11.i16[3] = a2[3];
      *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v11, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v11.i16[0] = a2[66];
      v11.i16[1] = *v6;
      v11.i16[2] = *v5;
      v11.i16[3] = a2[11];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v11, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      a1[1] = result;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v6 = a2 + 12;
      uint64_t v4 = a2 + 44;
      int v5 = a2 + 76;
      if (v7 != 2)
      {
        v12.i16[0] = a2[36];
        v12.i16[1] = a2[4];
        v12.i16[2] = *v4;
        v12.i16[3] = a2[5];
        int8x8_t result = (int8x8_t)0xF000F000F000F000;
        *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v12, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        v13.i16[0] = a2[68];
        v13.i16[1] = *v6;
        v13.i16[2] = *v5;
        v13.i16[3] = a2[13];
        a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v13, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        a1 = (int8x8_t *)((char *)a1 + a3);
        int v6 = a2 + 14;
        uint64_t v4 = a2 + 46;
        int v5 = a2 + 78;
        if (v7 != 3)
        {
          v14.i16[0] = a2[38];
          v14.i16[1] = a2[6];
          v14.i16[2] = *v4;
          v14.i16[3] = a2[7];
          *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v14, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          v14.i16[0] = a2[70];
          v14.i16[1] = *v6;
          v14.i16[2] = *v5;
          v14.i16[3] = a2[15];
          int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v14, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          a1[1] = result;
          a1 = (int8x8_t *)((char *)a1 + a3);
          int v6 = a2 + 16;
          uint64_t v4 = a2 + 48;
          int v5 = a2 + 80;
        }
      }
    }
  }
  if (a4 <= 4) {
    int v15 = 4;
  }
  else {
    int v15 = a4;
  }
  int v16 = v15 - 4;
  if (v16)
  {
    v17.i16[0] = *v4;
    v17.i16[1] = v4[8];
    v17.i32[1] = *(_DWORD *)v6;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    int16x4_t v18 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    *a1 = (int8x8_t)vuzp1_s16(v18, vrev32_s16(v18));
    v19.i16[0] = *v5;
    v19.i16[1] = v5[8];
    v19.i32[1] = *((_DWORD *)v6 + 4);
    int16x4_t v20 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v19, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[1] = (int8x8_t)vuzp1_s16(v20, vrev32_s16(v20));
    if (v16 != 1)
    {
      int16x4_t v21 = (int16x4_t *)((char *)a1 + a3);
      v22.i16[0] = v4[2];
      v22.i16[1] = v4[10];
      v22.i32[1] = *((_DWORD *)v6 + 1);
      int16x4_t v23 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v22, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *int16x4_t v21 = vuzp1_s16(v23, vrev32_s16(v23));
      v22.i16[0] = v5[2];
      v22.i16[1] = v5[10];
      v22.i32[1] = *((_DWORD *)v6 + 5);
      int16x4_t v24 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v22, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int8x8_t result = (int8x8_t)vuzp1_s16(v24, vrev32_s16(v24));
      v21[1] = (int16x4_t)result;
      if (v16 != 2)
      {
        int8x16_t v25 = (int16x4_t *)((char *)v21 + a3);
        v26.i16[0] = v4[4];
        v26.i16[1] = v4[12];
        v26.i32[1] = *((_DWORD *)v6 + 2);
        int8x8_t result = (int8x8_t)0xF000F000F000F000;
        int16x4_t v27 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v26, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        *int8x16_t v25 = vuzp1_s16(v27, vrev32_s16(v27));
        v28.i16[0] = v5[4];
        v28.i16[1] = v5[12];
        v28.i32[1] = *((_DWORD *)v6 + 6);
        int16x4_t v29 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v28, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
        v25[1] = vuzp1_s16(v29, vrev32_s16(v29));
        if (v16 != 3)
        {
          v30.i16[0] = v4[6];
          v30.i16[1] = v4[14];
          v30.i32[1] = *((_DWORD *)v6 + 3);
          int16x4_t v31 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v30, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          int16x8_t v32 = (int16x4_t *)((char *)v25 + a3);
          *int16x8_t v32 = vuzp1_s16(v31, vrev32_s16(v31));
          v33.i16[0] = v5[6];
          v33.i16[1] = v5[14];
          v33.i32[1] = *((_DWORD *)v6 + 7);
          int16x4_t v34 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v33, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
          int8x8_t result = (int8x8_t)vuzp1_s16(v34, vrev32_s16(v34));
          v32[1] = (int16x4_t)result;
        }
      }
    }
  }
  return result;
}

int8x8_t from_444_to_v216<2,2,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  uint64_t v4 = a2 + 20;
  int v5 = a2 + 36;
  int v6 = a2 + 4;
  if (a4 > 0)
  {
    v7.i16[0] = a2[16];
    v7.i16[1] = *a2;
    v7.i16[2] = *v4;
    v7.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v9.i16[0] = a2[32];
    v9.i16[1] = *v6;
    v9.i16[2] = *v5;
    v9.i16[3] = a2[5];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v6 = a2 + 6;
    uint64_t v4 = a2 + 22;
    int v5 = a2 + 38;
    if (a4 != 1)
    {
      v10.i16[0] = a2[18];
      v10.i16[1] = a2[2];
      v10.i16[2] = *v4;
      v10.i16[3] = a2[3];
      *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v10.i16[0] = a2[34];
      v10.i16[1] = *v6;
      v10.i16[2] = *v5;
      v10.i16[3] = a2[7];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      a1[1] = result;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v6 = a2 + 8;
      uint64_t v4 = a2 + 24;
      int v5 = a2 + 40;
    }
  }
  if (a4 <= 2) {
    int v11 = 2;
  }
  else {
    int v11 = a4;
  }
  int v12 = v11 - 2;
  if (v12)
  {
    v13.i16[0] = *v4;
    v13.i16[1] = v4[4];
    v13.i32[1] = *(_DWORD *)v6;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    int16x4_t v14 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v13, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    *a1 = (int8x8_t)vuzp1_s16(v14, vrev32_s16(v14));
    v15.i16[0] = *v5;
    v15.i16[1] = v5[4];
    v15.i32[1] = *((_DWORD *)v6 + 2);
    int16x4_t v16 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v15, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[1] = (int8x8_t)vuzp1_s16(v16, vrev32_s16(v16));
    if (v12 != 1)
    {
      v17.i16[0] = v4[2];
      v17.i16[1] = v4[6];
      v17.i32[1] = *((_DWORD *)v6 + 1);
      int16x4_t v18 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int16x4_t v19 = (int16x4_t *)((char *)a1 + a3);
      *int16x4_t v19 = vuzp1_s16(v18, vrev32_s16(v18));
      v20.i16[0] = v5[2];
      v20.i16[1] = v5[6];
      v20.i32[1] = *((_DWORD *)v6 + 3);
      int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v20, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int8x8_t result = (int8x8_t)vuzp1_s16(v21, vrev32_s16(v21));
      v19[1] = (int16x4_t)result;
    }
  }
  return result;
}

int8x8_t from_444_to_v216<2,2,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  uint64_t v4 = a2 + 20;
  int v5 = a2 + 36;
  int v6 = a2 + 4;
  if (a4 > 0)
  {
    v7.i16[0] = a2[16];
    v7.i16[1] = *a2;
    v7.i16[2] = *v4;
    v7.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v7, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v9.i16[0] = a2[32];
    v9.i16[1] = *v6;
    v9.i16[2] = *v5;
    v9.i16[3] = a2[5];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v9, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v6 = a2 + 6;
    uint64_t v4 = a2 + 22;
    int v5 = a2 + 38;
    if (a4 != 1)
    {
      v10.i16[0] = a2[18];
      v10.i16[1] = a2[2];
      v10.i16[2] = *v4;
      v10.i16[3] = a2[3];
      *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v10.i16[0] = a2[34];
      v10.i16[1] = *v6;
      v10.i16[2] = *v5;
      v10.i16[3] = a2[7];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v10, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      a1[1] = result;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v6 = a2 + 8;
      uint64_t v4 = a2 + 24;
      int v5 = a2 + 40;
    }
  }
  if (a4 <= 2) {
    int v11 = 2;
  }
  else {
    int v11 = a4;
  }
  int v12 = v11 - 2;
  if (v12)
  {
    v13.i16[0] = *v4;
    v13.i16[1] = v4[4];
    v13.i32[1] = *(_DWORD *)v6;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    int16x4_t v14 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v13, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    *a1 = (int8x8_t)vuzp1_s16(v14, vrev32_s16(v14));
    v15.i16[0] = *v5;
    v15.i16[1] = v5[4];
    v15.i32[1] = *((_DWORD *)v6 + 2);
    int16x4_t v16 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v15, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1[1] = (int8x8_t)vuzp1_s16(v16, vrev32_s16(v16));
    if (v12 != 1)
    {
      v17.i16[0] = v4[2];
      v17.i16[1] = v4[6];
      v17.i32[1] = *((_DWORD *)v6 + 1);
      int16x4_t v18 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v17, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int16x4_t v19 = (int16x4_t *)((char *)a1 + a3);
      *int16x4_t v19 = vuzp1_s16(v18, vrev32_s16(v18));
      v20.i16[0] = v5[2];
      v20.i16[1] = v5[6];
      v20.i32[1] = *((_DWORD *)v6 + 3);
      int16x4_t v21 = (int16x4_t)veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v20, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      int8x8_t result = (int8x8_t)vuzp1_s16(v21, vrev32_s16(v21));
      v19[1] = (int16x4_t)result;
    }
  }
  return result;
}

int8x8_t from_444_to_v216<2,1,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  if (a4 >= 1)
  {
    v4.i16[0] = a2[8];
    v4.i16[1] = *a2;
    v4.i16[2] = a2[10];
    v4.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v4, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v6.i16[0] = a2[16];
    v6.i16[1] = a2[2];
    v6.i16[2] = a2[18];
    v6.i16[3] = a2[3];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    if (a4 != 1)
    {
      int16x4_t v7 = (int8x8_t *)((char *)a1 + a3);
      v8.i16[0] = a2[12];
      v8.i16[1] = a2[4];
      v8.i16[2] = a2[14];
      v8.i16[3] = a2[5];
      int8x8_t *v7 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v8.i16[0] = a2[20];
      v8.i16[1] = a2[6];
      v8.i16[2] = a2[22];
      v8.i16[3] = a2[7];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v7[1] = result;
    }
  }
  return result;
}

int8x8_t from_444_to_v216<2,1,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  if (a4 >= 1)
  {
    v4.i16[0] = a2[8];
    v4.i16[1] = *a2;
    v4.i16[2] = a2[10];
    v4.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v4, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    v6.i16[0] = a2[16];
    v6.i16[1] = a2[2];
    v6.i16[2] = a2[18];
    v6.i16[3] = a2[3];
    a1[1] = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    if (a4 != 1)
    {
      int16x4_t v7 = (int8x8_t *)((char *)a1 + a3);
      v8.i16[0] = a2[12];
      v8.i16[1] = a2[4];
      v8.i16[2] = a2[14];
      v8.i16[3] = a2[5];
      int8x8_t *v7 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v8.i16[0] = a2[20];
      v8.i16[1] = a2[6];
      v8.i16[2] = a2[22];
      v8.i16[3] = a2[7];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      v7[1] = result;
    }
  }
  return result;
}

int8x8_t from_444_to_v216<1,2,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  int16x4_t v4 = a2 + 10;
  int v5 = a2 + 2;
  if (a4 > 0)
  {
    v6.i16[0] = a2[8];
    v6.i16[1] = *a2;
    v6.i16[2] = *v4;
    v6.i16[3] = *v5;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v5 = a2 + 3;
    int16x4_t v4 = a2 + 11;
    if (a4 != 1)
    {
      v8.i16[0] = a2[9];
      v8.i16[1] = a2[1];
      v8.i16[2] = *v4;
      v8.i16[3] = *v5;
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *a1 = result;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v5 = a2 + 4;
      int16x4_t v4 = a2 + 12;
    }
  }
  if (a4 <= 2) {
    int v9 = 2;
  }
  else {
    int v9 = a4;
  }
  int v10 = v9 - 2;
  if (v10)
  {
    v11.i16[0] = *v4;
    v11.i16[1] = *v5;
    v11.i16[2] = v4[2];
    v11.i16[3] = v5[2];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v11, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    if (v10 != 1)
    {
      v12.i16[0] = v4[1];
      v12.i16[1] = v5[1];
      v12.i16[2] = v4[3];
      v12.i16[3] = v5[3];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v12, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *(int8x8_t *)((char *)a1 + a3) = result;
    }
  }
  return result;
}

int8x8_t from_444_to_v216<1,2,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  int16x4_t v4 = a2 + 10;
  int v5 = a2 + 2;
  if (a4 > 0)
  {
    v6.i16[0] = a2[8];
    v6.i16[1] = *a2;
    v6.i16[2] = *v4;
    v6.i16[3] = *v5;
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    a1 = (int8x8_t *)((char *)a1 + a3);
    int v5 = a2 + 3;
    int16x4_t v4 = a2 + 11;
    if (a4 != 1)
    {
      v8.i16[0] = a2[9];
      v8.i16[1] = a2[1];
      v8.i16[2] = *v4;
      v8.i16[3] = *v5;
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v8, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *a1 = result;
      a1 = (int8x8_t *)((char *)a1 + a3);
      int v5 = a2 + 4;
      int16x4_t v4 = a2 + 12;
    }
  }
  if (a4 <= 2) {
    int v9 = 2;
  }
  else {
    int v9 = a4;
  }
  int v10 = v9 - 2;
  if (v10)
  {
    v11.i16[0] = *v4;
    v11.i16[1] = *v5;
    v11.i16[2] = v4[2];
    v11.i16[3] = v5[2];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v11, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    if (v10 != 1)
    {
      v12.i16[0] = v4[1];
      v12.i16[1] = v5[1];
      v12.i16[2] = v4[3];
      v12.i16[3] = v5[3];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v12, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *(int8x8_t *)((char *)a1 + a3) = result;
    }
  }
  return result;
}

int8x8_t from_444_to_v216<1,1,(AlphaOutputMethod)0,false,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  if (a4 >= 1)
  {
    v4.i16[0] = a2[4];
    v4.i16[1] = *a2;
    v4.i16[2] = a2[5];
    v4.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v4, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    if (a4 != 1)
    {
      v6.i16[0] = a2[6];
      v6.i16[1] = a2[2];
      v6.i16[2] = a2[7];
      v6.i16[3] = a2[3];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *(int8x8_t *)((char *)a1 + a3) = result;
    }
  }
  return result;
}

int8x8_t from_444_to_v216<1,1,(AlphaOutputMethod)0,true,(PixelOutputStoreType)0>(int8x8_t *a1, __int16 *a2, int a3, int a4)
{
  if (a4 >= 1)
  {
    v4.i16[0] = a2[4];
    v4.i16[1] = *a2;
    v4.i16[2] = a2[5];
    v4.i16[3] = a2[1];
    int8x8_t result = (int8x8_t)0xF000F000F000F000;
    *a1 = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v4, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
    if (a4 != 1)
    {
      v6.i16[0] = a2[6];
      v6.i16[1] = a2[2];
      v6.i16[2] = a2[7];
      v6.i16[3] = a2[3];
      int8x8_t result = veor_s8((int8x8_t)vshl_n_s16(vmax_s16(vmin_s16(v6, (int16x4_t)0xF000F000F000F000), (int16x4_t)0xF000F000F000F000), 3uLL), (int8x8_t)0x8000800080008000);
      *(int8x8_t *)((char *)a1 + a3) = result;
    }
  }
  return result;
}

int32x4_t *from_444_to_y416_10bits<8,8,(AlphaOutputMethod)1,false>(int32x4_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996720, memory_order_acquire) & 1) == 0)
  {
    int v93 = result;
    int8x8x2_t v94 = a2;
    int8x16_t v95 = a5;
    unsigned int v96 = a6;
    int v97 = a3;
    int v98 = a4;
    int v99 = __cxa_guard_acquire(&qword_26A996720);
    a4 = v98;
    a3 = v97;
    a6 = v96;
    a5 = v95;
    a2 = v94;
    int v100 = v99;
    int8x8_t result = v93;
    if (v100)
    {
      *(void *)&long long v101 = 0xFE00FE00FE00FE00;
      *((void *)&v101 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996D60 = v101;
      __cxa_guard_release(&qword_26A996720);
      a4 = v98;
      a3 = v97;
      int8x8_t result = v93;
      a6 = v96;
      a5 = v95;
      a2 = v94;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996728, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v102 = result;
    int16x8_t v103 = a2;
    int16x8_t v104 = a5;
    unsigned int v105 = a6;
    int v106 = a3;
    int v107 = a4;
    int v108 = __cxa_guard_acquire(&qword_26A996728);
    a4 = v107;
    a3 = v106;
    a6 = v105;
    a5 = v104;
    a2 = v103;
    int v109 = v108;
    int8x8_t result = v102;
    if (v109)
    {
      *(void *)&long long v110 = 0xFE00FE00FE00FE00;
      *((void *)&v110 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996D70 = v110;
      __cxa_guard_release(&qword_26A996728);
      a4 = v107;
      a3 = v106;
      int8x8_t result = v102;
      a6 = v105;
      a5 = v104;
      a2 = v103;
    }
  }
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    unsigned int v53 = a2 + 8;
    int8x16_t v54 = a2 + 32;
    int16x8_t v55 = a2 + 40;
    int16x8_t v56 = a2 + 64;
    int16x8_t v57 = a2 + 72;
    int v59 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  int16x8_t v7 = (int16x8_t)xmmword_26A996D60;
  int16x8_t v8 = (int16x8_t)xmmword_26A996D70;
  int v9 = a4 + 8;
  v10.i64[0] = 0x8000800080008000;
  v10.i64[1] = 0x8000800080008000;
  int16x4_t v11 = (float *)result;
  do
  {
    int16x4_t v12 = a2 + 1;
    int16x4_t v13 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x4_t v14 = (int32x4_t *)((char *)result + 8 * a3);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v7), v8), 6uLL), v10);
    int16x8_t v16 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v7), v8), 6uLL), v10);
    int16x8_t v17 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v7), v8), 6uLL), v10);
    float32x2x2_t v18 = (float32x2x2_t)vzip1q_s16(*a5, v15);
    float32x2x2_t v19 = (float32x2x2_t)vzip2q_s16(*a5, v15);
    int32x4_t v20 = (int32x4_t)vzip1q_s16(v16, v17);
    int32x4_t v21 = (int32x4_t)vzip2q_s16(v16, v17);
    vst2_f32(v11, v18);
    int16x4_t v11 = (float *)((char *)v11 + a3);
    result[1] = vzip2q_s32((int32x4_t)v18, v20);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v19);
    result[3] = vzip2q_s32((int32x4_t)v19, v21);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v7), v8), 6uLL), v10);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[64], v7), v8), 6uLL), v10);
    int16x8_t v25 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[72], v7), v8), 6uLL), v10);
    int16x8_t v26 = a5[1];
    float32x2x2_t v27 = (float32x2x2_t)vzip1q_s16(v26, v23);
    float32x2x2_t v28 = (float32x2x2_t)vzip2q_s16(v26, v23);
    int32x4_t v29 = (int32x4_t)vzip1q_s16(v24, v25);
    int32x4_t v30 = (int32x4_t)vzip2q_s16(v24, v25);
    int16x4_t v31 = (float *)result[4].i32;
    vst2_f32(v31, v27);
    result[5] = vzip2q_s32((int32x4_t)v27, v29);
    int16x8_t v32 = (float *)result[6].i32;
    vst2_f32(v32, v28);
    result[7] = vzip2q_s32((int32x4_t)v28, v30);
    int8x8_t result = (int32x4_t *)v11;
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v33 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v7), v8), 6uLL), v10);
    int16x8_t v34 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v7), v8), 6uLL), v10);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v7), v8), 6uLL), v10);
    int16x8_t v36 = v13[-1];
    float32x2x2_t v37 = (float32x2x2_t)vzip1q_s16(v36, v33);
    float32x2x2_t v38 = (float32x2x2_t)vzip2q_s16(v36, v33);
    int32x4_t v39 = (int32x4_t)vzip1q_s16(v34, v35);
    int32x4_t v40 = (int32x4_t)vzip2q_s16(v34, v35);
    uint8x16_t v41 = (float *)v14;
    vst2_f32(v41, v37);
    v41 += 4;
    *(int32x4_t *)uint8x16_t v41 = vzip2q_s32((int32x4_t)v37, v39);
    int16x8_t v42 = (float *)v14[2].i32;
    vst2_f32(v42, v38);
    v14[3] = vzip2q_s32((int32x4_t)v38, v40);
    int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[24], v7), v8), 6uLL), v10);
    int16x8_t v44 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[80], v7), v8), 6uLL), v10);
    int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[88], v7), v8), 6uLL), v10);
    float32x2x2_t v46 = (float32x2x2_t)vzip1q_s16(*v13, v43);
    float32x2x2_t v47 = (float32x2x2_t)vzip2q_s16(*v13, v43);
    int32x4_t v48 = (int32x4_t)vzip1q_s16(v44, v45);
    int32x4_t v49 = (int32x4_t)vzip2q_s16(v44, v45);
    int16x8_t v50 = (float *)v14[4].i32;
    vst2_f32(v50, v46);
    v14[5] = vzip2q_s32((int32x4_t)v46, v48);
    int16x8_t v51 = (float *)v14[6].i32;
    vst2_f32(v51, v47);
    v14[7] = vzip2q_s32((int32x4_t)v47, v49);
    int v52 = v9 - 1;
    LODWORD(v51) = v9 - 16;
    --v9;
    ++a2;
  }
  while ((int)v51 > 1);
  unsigned int v53 = v12 + 8;
  int8x16_t v54 = v12 + 32;
  int16x8_t v55 = v12 + 40;
  int16x8_t v56 = v12 + 64;
  int16x8_t v57 = v12 + 72;
  if (a4 <= 8) {
    int v58 = 8;
  }
  else {
    int v58 = a4;
  }
  int v59 = v52 - v58;
  a2 = v12;
  if (v59 >= 1)
  {
LABEL_15:
    int16x8_t v60 = (int16x8_t)xmmword_26A996D60;
    int16x8_t v61 = (int16x8_t)xmmword_26A996D70;
    uint64_t v62 = a3;
    unsigned int v63 = v59 + 1;
    int16x8_t v64 = a5 + 1;
    result += 4;
    v65.i64[0] = 0x8000800080008000;
    v65.i64[1] = 0x8000800080008000;
    int64x2_t v66 = (float *)result;
    do
    {
      int16x8_t v67 = *a2++;
      int16x8_t v68 = (float *)result[-4].i32;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v67, v60), v61), 6uLL), v65);
      int16x8_t v70 = *v54++;
      int16x8_t v71 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v60), v61), 6uLL), v65);
      int16x8_t v72 = *v55++;
      int16x8_t v73 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v72, v60), v61), 6uLL), v65);
      int16x8_t v74 = v64[-1];
      float32x2x2_t v75 = (float32x2x2_t)vzip1q_s16(v74, v69);
      float32x2x2_t v76 = (float32x2x2_t)vzip2q_s16(v74, v69);
      int32x4_t v77 = (int32x4_t)vzip1q_s16(v71, v73);
      int32x4_t v78 = (int32x4_t)vzip2q_s16(v71, v73);
      vst2_f32(v68, v75);
      result[-3] = vzip2q_s32((int32x4_t)v75, v77);
      int v79 = (float *)result[-2].i32;
      vst2_f32(v79, v76);
      result[-1] = vzip2q_s32((int32x4_t)v76, v78);
      int16x8_t v80 = *v53++;
      int8x16_t v81 = (int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v80, v60), v61), 6uLL);
      int16x8_t v82 = *v56++;
      int16x8_t v83 = (int16x8_t)veorq_s8(v81, v65);
      int8x16_t v84 = (int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v82, v60), v61), 6uLL);
      int16x8_t v85 = *v57++;
      int16x8_t v86 = (int16x8_t)veorq_s8(v84, v65);
      int16x8_t v87 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v85, v60), v61), 6uLL), v65);
      float32x2x2_t v88 = (float32x2x2_t)vzip1q_s16(*v64, v83);
      float32x2x2_t v89 = (float32x2x2_t)vzip2q_s16(*v64, v83);
      int32x4_t v90 = (int32x4_t)vzip1q_s16(v86, v87);
      vst2_f32(v66, v88);
      int64x2_t v66 = (float *)((char *)v66 + v62);
      int32x4_t v91 = (int32x4_t)vzip2q_s16(v86, v87);
      result[1] = vzip2q_s32((int32x4_t)v88, v90);
      int v92 = (float *)result[2].i32;
      vst2_f32(v92, v89);
      result[3] = vzip2q_s32((int32x4_t)v89, v91);
      --v63;
      int16x8_t v64 = (int16x8_t *)((char *)v64 + a6);
      int8x8_t result = (int32x4_t *)v66;
    }
    while (v63 > 1);
  }
  return result;
}

int32x4_t *from_444_to_y416_10bits<8,8,(AlphaOutputMethod)1,true>(int32x4_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996730, memory_order_acquire) & 1) == 0)
  {
    int v93 = result;
    int8x8x2_t v94 = a2;
    int8x16_t v95 = a5;
    unsigned int v96 = a6;
    int v97 = a3;
    int v98 = a4;
    int v99 = __cxa_guard_acquire(&qword_26A996730);
    a4 = v98;
    a3 = v97;
    a6 = v96;
    a5 = v95;
    a2 = v94;
    int v100 = v99;
    int8x8_t result = v93;
    if (v100)
    {
      *(void *)&long long v101 = 0xFE00FE00FE00FE00;
      *((void *)&v101 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996D80 = v101;
      __cxa_guard_release(&qword_26A996730);
      a4 = v98;
      a3 = v97;
      int8x8_t result = v93;
      a6 = v96;
      a5 = v95;
      a2 = v94;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996738, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v102 = result;
    int16x8_t v103 = a2;
    int16x8_t v104 = a5;
    unsigned int v105 = a6;
    int v106 = a3;
    int v107 = a4;
    int v108 = __cxa_guard_acquire(&qword_26A996738);
    a4 = v107;
    a3 = v106;
    a6 = v105;
    a5 = v104;
    a2 = v103;
    int v109 = v108;
    int8x8_t result = v102;
    if (v109)
    {
      *(void *)&long long v110 = 0xFE00FE00FE00FE00;
      *((void *)&v110 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996D90 = v110;
      __cxa_guard_release(&qword_26A996738);
      a4 = v107;
      a3 = v106;
      int8x8_t result = v102;
      a6 = v105;
      a5 = v104;
      a2 = v103;
    }
  }
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    unsigned int v53 = a2 + 8;
    int8x16_t v54 = a2 + 32;
    int16x8_t v55 = a2 + 40;
    int16x8_t v56 = a2 + 64;
    int16x8_t v57 = a2 + 72;
    int v59 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  int16x8_t v7 = (int16x8_t)xmmword_26A996D80;
  int16x8_t v8 = (int16x8_t)xmmword_26A996D90;
  int v9 = a4 + 8;
  v10.i64[0] = 0x8000800080008000;
  v10.i64[1] = 0x8000800080008000;
  int16x4_t v11 = (float *)result;
  do
  {
    int16x4_t v12 = a2 + 1;
    int16x4_t v13 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x4_t v14 = (int32x4_t *)((char *)result + 8 * a3);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v7), v8), 6uLL), v10);
    int16x8_t v16 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v7), v8), 6uLL), v10);
    int16x8_t v17 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v7), v8), 6uLL), v10);
    float32x2x2_t v18 = (float32x2x2_t)vzip1q_s16(*a5, v15);
    float32x2x2_t v19 = (float32x2x2_t)vzip2q_s16(*a5, v15);
    int32x4_t v20 = (int32x4_t)vzip1q_s16(v16, v17);
    int32x4_t v21 = (int32x4_t)vzip2q_s16(v16, v17);
    vst2_f32(v11, v18);
    int16x4_t v11 = (float *)((char *)v11 + a3);
    result[1] = vzip2q_s32((int32x4_t)v18, v20);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v19);
    result[3] = vzip2q_s32((int32x4_t)v19, v21);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v7), v8), 6uLL), v10);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[64], v7), v8), 6uLL), v10);
    int16x8_t v25 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[72], v7), v8), 6uLL), v10);
    int16x8_t v26 = a5[1];
    float32x2x2_t v27 = (float32x2x2_t)vzip1q_s16(v26, v23);
    float32x2x2_t v28 = (float32x2x2_t)vzip2q_s16(v26, v23);
    int32x4_t v29 = (int32x4_t)vzip1q_s16(v24, v25);
    int32x4_t v30 = (int32x4_t)vzip2q_s16(v24, v25);
    int16x4_t v31 = (float *)result[4].i32;
    vst2_f32(v31, v27);
    result[5] = vzip2q_s32((int32x4_t)v27, v29);
    int16x8_t v32 = (float *)result[6].i32;
    vst2_f32(v32, v28);
    result[7] = vzip2q_s32((int32x4_t)v28, v30);
    int8x8_t result = (int32x4_t *)v11;
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v33 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v7), v8), 6uLL), v10);
    int16x8_t v34 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v7), v8), 6uLL), v10);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v7), v8), 6uLL), v10);
    int16x8_t v36 = v13[-1];
    float32x2x2_t v37 = (float32x2x2_t)vzip1q_s16(v36, v33);
    float32x2x2_t v38 = (float32x2x2_t)vzip2q_s16(v36, v33);
    int32x4_t v39 = (int32x4_t)vzip1q_s16(v34, v35);
    int32x4_t v40 = (int32x4_t)vzip2q_s16(v34, v35);
    uint8x16_t v41 = (float *)v14;
    vst2_f32(v41, v37);
    v41 += 4;
    *(int32x4_t *)uint8x16_t v41 = vzip2q_s32((int32x4_t)v37, v39);
    int16x8_t v42 = (float *)v14[2].i32;
    vst2_f32(v42, v38);
    v14[3] = vzip2q_s32((int32x4_t)v38, v40);
    int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[24], v7), v8), 6uLL), v10);
    int16x8_t v44 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[80], v7), v8), 6uLL), v10);
    int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[88], v7), v8), 6uLL), v10);
    float32x2x2_t v46 = (float32x2x2_t)vzip1q_s16(*v13, v43);
    float32x2x2_t v47 = (float32x2x2_t)vzip2q_s16(*v13, v43);
    int32x4_t v48 = (int32x4_t)vzip1q_s16(v44, v45);
    int32x4_t v49 = (int32x4_t)vzip2q_s16(v44, v45);
    int16x8_t v50 = (float *)v14[4].i32;
    vst2_f32(v50, v46);
    v14[5] = vzip2q_s32((int32x4_t)v46, v48);
    int16x8_t v51 = (float *)v14[6].i32;
    vst2_f32(v51, v47);
    v14[7] = vzip2q_s32((int32x4_t)v47, v49);
    int v52 = v9 - 1;
    LODWORD(v51) = v9 - 16;
    --v9;
    ++a2;
  }
  while ((int)v51 > 1);
  unsigned int v53 = v12 + 8;
  int8x16_t v54 = v12 + 32;
  int16x8_t v55 = v12 + 40;
  int16x8_t v56 = v12 + 64;
  int16x8_t v57 = v12 + 72;
  if (a4 <= 8) {
    int v58 = 8;
  }
  else {
    int v58 = a4;
  }
  int v59 = v52 - v58;
  a2 = v12;
  if (v59 >= 1)
  {
LABEL_15:
    int16x8_t v60 = (int16x8_t)xmmword_26A996D80;
    int16x8_t v61 = (int16x8_t)xmmword_26A996D90;
    uint64_t v62 = a3;
    unsigned int v63 = v59 + 1;
    int16x8_t v64 = a5 + 1;
    result += 4;
    v65.i64[0] = 0x8000800080008000;
    v65.i64[1] = 0x8000800080008000;
    int64x2_t v66 = (float *)result;
    do
    {
      int16x8_t v67 = *a2++;
      int16x8_t v68 = (float *)result[-4].i32;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v67, v60), v61), 6uLL), v65);
      int16x8_t v70 = *v54++;
      int16x8_t v71 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v60), v61), 6uLL), v65);
      int16x8_t v72 = *v55++;
      int16x8_t v73 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v72, v60), v61), 6uLL), v65);
      int16x8_t v74 = v64[-1];
      float32x2x2_t v75 = (float32x2x2_t)vzip1q_s16(v74, v69);
      float32x2x2_t v76 = (float32x2x2_t)vzip2q_s16(v74, v69);
      int32x4_t v77 = (int32x4_t)vzip1q_s16(v71, v73);
      int32x4_t v78 = (int32x4_t)vzip2q_s16(v71, v73);
      vst2_f32(v68, v75);
      result[-3] = vzip2q_s32((int32x4_t)v75, v77);
      int v79 = (float *)result[-2].i32;
      vst2_f32(v79, v76);
      result[-1] = vzip2q_s32((int32x4_t)v76, v78);
      int16x8_t v80 = *v53++;
      int8x16_t v81 = (int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v80, v60), v61), 6uLL);
      int16x8_t v82 = *v56++;
      int16x8_t v83 = (int16x8_t)veorq_s8(v81, v65);
      int8x16_t v84 = (int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v82, v60), v61), 6uLL);
      int16x8_t v85 = *v57++;
      int16x8_t v86 = (int16x8_t)veorq_s8(v84, v65);
      int16x8_t v87 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v85, v60), v61), 6uLL), v65);
      float32x2x2_t v88 = (float32x2x2_t)vzip1q_s16(*v64, v83);
      float32x2x2_t v89 = (float32x2x2_t)vzip2q_s16(*v64, v83);
      int32x4_t v90 = (int32x4_t)vzip1q_s16(v86, v87);
      vst2_f32(v66, v88);
      int64x2_t v66 = (float *)((char *)v66 + v62);
      int32x4_t v91 = (int32x4_t)vzip2q_s16(v86, v87);
      result[1] = vzip2q_s32((int32x4_t)v88, v90);
      int v92 = (float *)result[2].i32;
      vst2_f32(v92, v89);
      result[3] = vzip2q_s32((int32x4_t)v89, v91);
      --v63;
      int16x8_t v64 = (int16x8_t *)((char *)v64 + a6);
      int8x8_t result = (int32x4_t *)v66;
    }
    while (v63 > 1);
  }
  return result;
}

int32x4_t *from_444_to_y416_10bits<8,8,(AlphaOutputMethod)2,false>(int32x4_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996740, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v86 = result;
    int16x8_t v87 = a2;
    int v88 = a3;
    int v89 = a4;
    int v90 = __cxa_guard_acquire(&qword_26A996740);
    a4 = v89;
    a3 = v88;
    a2 = v87;
    int v91 = v90;
    int8x8_t result = v86;
    if (v91)
    {
      *(void *)&long long v92 = 0xFE00FE00FE00FE00;
      *((void *)&v92 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996DA0 = v92;
      __cxa_guard_release(&qword_26A996740);
      a4 = v89;
      a3 = v88;
      int8x8_t result = v86;
      a2 = v87;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996748, memory_order_acquire) & 1) == 0)
  {
    int v93 = result;
    int8x8x2_t v94 = a2;
    int v95 = a3;
    int v96 = a4;
    int v97 = __cxa_guard_acquire(&qword_26A996748);
    a4 = v96;
    a3 = v95;
    a2 = v94;
    int v98 = v97;
    int8x8_t result = v93;
    if (v98)
    {
      *(void *)&long long v99 = 0xFE00FE00FE00FE00;
      *((void *)&v99 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996DB0 = v99;
      __cxa_guard_release(&qword_26A996748);
      a4 = v96;
      a3 = v95;
      int8x8_t result = v93;
      a2 = v94;
    }
  }
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int32x4_t v49 = a2 + 8;
    int16x8_t v50 = a2 + 32;
    int16x8_t v51 = a2 + 40;
    int v52 = a2 + 64;
    unsigned int v53 = a2 + 72;
    int v55 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  int16x8_t v5 = (int16x8_t)xmmword_26A996DA0;
  int16x8_t v6 = (int16x8_t)xmmword_26A996DB0;
  int v7 = a4 + 8;
  v8.i64[0] = 0x8000800080008000;
  v8.i64[1] = 0x8000800080008000;
  v9.i64[0] = -1;
  v9.i64[1] = -1;
  int8x16_t v10 = (float *)result;
  do
  {
    int16x4_t v11 = a2 + 1;
    int16x4_t v12 = (int32x4_t *)((char *)result + 8 * a3);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v5), v6), 6uLL), v8);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v5), v6), 6uLL), v8);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v5), v6), 6uLL), v8);
    float32x2x2_t v16 = (float32x2x2_t)vzip1q_s16(v9, v13);
    float32x2x2_t v17 = (float32x2x2_t)vzip2q_s16(v9, v13);
    int32x4_t v18 = (int32x4_t)vzip1q_s16(v14, v15);
    vst2_f32(v10, v16);
    int8x16_t v10 = (float *)((char *)v10 + a3);
    int32x4_t v19 = (int32x4_t)vzip2q_s16(v14, v15);
    result[1] = vzip2q_s32((int32x4_t)v16, v18);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v17);
    result[3] = vzip2q_s32((int32x4_t)v17, v19);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v5), v6), 6uLL), v8);
    int16x8_t v22 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[64], v5), v6), 6uLL), v8);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[72], v5), v6), 6uLL), v8);
    float32x2x2_t v24 = (float32x2x2_t)vzip1q_s16(v9, v21);
    float32x2x2_t v25 = (float32x2x2_t)vzip2q_s16(v9, v21);
    int32x4_t v26 = (int32x4_t)vzip1q_s16(v22, v23);
    int32x4_t v27 = (int32x4_t)vzip2q_s16(v22, v23);
    float32x2x2_t v28 = (float *)result[4].i32;
    vst2_f32(v28, v24);
    result[5] = vzip2q_s32((int32x4_t)v24, v26);
    int32x4_t v29 = (float *)result[6].i32;
    vst2_f32(v29, v25);
    result[7] = vzip2q_s32((int32x4_t)v25, v27);
    int8x8_t result = (int32x4_t *)v10;
    int16x8_t v30 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v5), v6), 6uLL), v8);
    int16x8_t v31 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v5), v6), 6uLL), v8);
    int16x8_t v32 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v5), v6), 6uLL), v8);
    float32x2x2_t v33 = (float32x2x2_t)vzip1q_s16(v9, v30);
    float32x2x2_t v34 = (float32x2x2_t)vzip2q_s16(v9, v30);
    int32x4_t v35 = (int32x4_t)vzip1q_s16(v31, v32);
    int16x8_t v36 = (float *)v12;
    vst2_f32(v36, v33);
    v36 += 4;
    int32x4_t v37 = (int32x4_t)vzip2q_s16(v31, v32);
    *(int32x4_t *)int16x8_t v36 = vzip2q_s32((int32x4_t)v33, v35);
    float32x2x2_t v38 = (float *)v12[2].i32;
    vst2_f32(v38, v34);
    v12[3] = vzip2q_s32((int32x4_t)v34, v37);
    int16x8_t v39 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[24], v5), v6), 6uLL), v8);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[80], v5), v6), 6uLL), v8);
    int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[88], v5), v6), 6uLL), v8);
    float32x2x2_t v42 = (float32x2x2_t)vzip1q_s16(v9, v39);
    float32x2x2_t v43 = (float32x2x2_t)vzip2q_s16(v9, v39);
    int32x4_t v44 = (int32x4_t)vzip1q_s16(v40, v41);
    int32x4_t v45 = (int32x4_t)vzip2q_s16(v40, v41);
    float32x2x2_t v46 = (float *)v12[4].i32;
    vst2_f32(v46, v42);
    v12[5] = vzip2q_s32((int32x4_t)v42, v44);
    float32x2x2_t v47 = (float *)v12[6].i32;
    vst2_f32(v47, v43);
    v12[7] = vzip2q_s32((int32x4_t)v43, v45);
    int v48 = v7 - 1;
    LODWORD(v12) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v12 > 1);
  int32x4_t v49 = v11 + 8;
  int16x8_t v50 = v11 + 32;
  int16x8_t v51 = v11 + 40;
  int v52 = v11 + 64;
  unsigned int v53 = v11 + 72;
  if (a4 <= 8) {
    int v54 = 8;
  }
  else {
    int v54 = a4;
  }
  int v55 = v48 - v54;
  a2 = v11;
  if (v55 >= 1)
  {
LABEL_15:
    int16x8_t v56 = (int16x8_t)xmmword_26A996DA0;
    int16x8_t v57 = (int16x8_t)xmmword_26A996DB0;
    unsigned int v58 = v55 + 1;
    int v59 = result + 4;
    v60.i64[0] = 0x8000800080008000;
    v60.i64[1] = 0x8000800080008000;
    v61.i64[0] = -1;
    v61.i64[1] = -1;
    uint64_t v62 = (float *)result[4].i32;
    do
    {
      int16x8_t v63 = *a2++;
      int16x8_t v64 = (float *)v59[-4].i32;
      int16x8_t v65 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v63, v56), v57), 6uLL), v60);
      int16x8_t v66 = *v50++;
      int16x8_t v67 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v66, v56), v57), 6uLL), v60);
      int16x8_t v68 = *v51++;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v68, v56), v57), 6uLL), v60);
      float32x2x2_t v70 = (float32x2x2_t)vzip1q_s16(v61, v65);
      float32x2x2_t v71 = (float32x2x2_t)vzip2q_s16(v61, v65);
      int32x4_t v72 = (int32x4_t)vzip1q_s16(v67, v69);
      int32x4_t v73 = (int32x4_t)vzip2q_s16(v67, v69);
      vst2_f32(v64, v70);
      v59[-3] = vzip2q_s32((int32x4_t)v70, v72);
      int16x8_t v74 = (float *)v59[-2].i32;
      vst2_f32(v74, v71);
      v59[-1] = vzip2q_s32((int32x4_t)v71, v73);
      int16x8_t v75 = *v49++;
      int16x8_t v76 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v75, v56), v57), 6uLL), v60);
      int16x8_t v77 = *v52++;
      int16x8_t v78 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v77, v56), v57), 6uLL), v60);
      int16x8_t v79 = *v53++;
      int16x8_t v80 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v79, v56), v57), 6uLL), v60);
      float32x2x2_t v81 = (float32x2x2_t)vzip1q_s16(v61, v76);
      int32x4_t v82 = (int32x4_t)vzip1q_s16(v78, v80);
      vst2_f32(v62, v81);
      uint64_t v62 = (float *)((char *)v62 + a3);
      float32x2x2_t v83 = (float32x2x2_t)vzip2q_s16(v61, v76);
      int32x4_t v84 = (int32x4_t)vzip2q_s16(v78, v80);
      int16x8_t v85 = (float *)v59[2].i32;
      vst2_f32(v85, v83);
      v59[1] = vzip2q_s32((int32x4_t)v81, v82);
      v59[3] = vzip2q_s32((int32x4_t)v83, v84);
      --v58;
      int v59 = (int32x4_t *)v62;
    }
    while (v58 > 1);
  }
  return result;
}

int32x4_t *from_444_to_y416_10bits<8,8,(AlphaOutputMethod)2,true>(int32x4_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996750, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v86 = result;
    int16x8_t v87 = a2;
    int v88 = a3;
    int v89 = a4;
    int v90 = __cxa_guard_acquire(&qword_26A996750);
    a4 = v89;
    a3 = v88;
    a2 = v87;
    int v91 = v90;
    int8x8_t result = v86;
    if (v91)
    {
      *(void *)&long long v92 = 0xFE00FE00FE00FE00;
      *((void *)&v92 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996DC0 = v92;
      __cxa_guard_release(&qword_26A996750);
      a4 = v89;
      a3 = v88;
      int8x8_t result = v86;
      a2 = v87;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996758, memory_order_acquire) & 1) == 0)
  {
    int v93 = result;
    int8x8x2_t v94 = a2;
    int v95 = a3;
    int v96 = a4;
    int v97 = __cxa_guard_acquire(&qword_26A996758);
    a4 = v96;
    a3 = v95;
    a2 = v94;
    int v98 = v97;
    int8x8_t result = v93;
    if (v98)
    {
      *(void *)&long long v99 = 0xFE00FE00FE00FE00;
      *((void *)&v99 + 1) = 0xFE00FE00FE00FE00;
      xmmword_26A996DD0 = v99;
      __cxa_guard_release(&qword_26A996758);
      a4 = v96;
      a3 = v95;
      int8x8_t result = v93;
      a2 = v94;
    }
  }
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int32x4_t v49 = a2 + 8;
    int16x8_t v50 = a2 + 32;
    int16x8_t v51 = a2 + 40;
    int v52 = a2 + 64;
    unsigned int v53 = a2 + 72;
    int v55 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  int16x8_t v5 = (int16x8_t)xmmword_26A996DC0;
  int16x8_t v6 = (int16x8_t)xmmword_26A996DD0;
  int v7 = a4 + 8;
  v8.i64[0] = 0x8000800080008000;
  v8.i64[1] = 0x8000800080008000;
  v9.i64[0] = -1;
  v9.i64[1] = -1;
  int8x16_t v10 = (float *)result;
  do
  {
    int16x4_t v11 = a2 + 1;
    int16x4_t v12 = (int32x4_t *)((char *)result + 8 * a3);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v5), v6), 6uLL), v8);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v5), v6), 6uLL), v8);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v5), v6), 6uLL), v8);
    float32x2x2_t v16 = (float32x2x2_t)vzip1q_s16(v9, v13);
    float32x2x2_t v17 = (float32x2x2_t)vzip2q_s16(v9, v13);
    int32x4_t v18 = (int32x4_t)vzip1q_s16(v14, v15);
    vst2_f32(v10, v16);
    int8x16_t v10 = (float *)((char *)v10 + a3);
    int32x4_t v19 = (int32x4_t)vzip2q_s16(v14, v15);
    result[1] = vzip2q_s32((int32x4_t)v16, v18);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v17);
    result[3] = vzip2q_s32((int32x4_t)v17, v19);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v5), v6), 6uLL), v8);
    int16x8_t v22 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[64], v5), v6), 6uLL), v8);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[72], v5), v6), 6uLL), v8);
    float32x2x2_t v24 = (float32x2x2_t)vzip1q_s16(v9, v21);
    float32x2x2_t v25 = (float32x2x2_t)vzip2q_s16(v9, v21);
    int32x4_t v26 = (int32x4_t)vzip1q_s16(v22, v23);
    int32x4_t v27 = (int32x4_t)vzip2q_s16(v22, v23);
    float32x2x2_t v28 = (float *)result[4].i32;
    vst2_f32(v28, v24);
    result[5] = vzip2q_s32((int32x4_t)v24, v26);
    int32x4_t v29 = (float *)result[6].i32;
    vst2_f32(v29, v25);
    result[7] = vzip2q_s32((int32x4_t)v25, v27);
    int8x8_t result = (int32x4_t *)v10;
    int16x8_t v30 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v5), v6), 6uLL), v8);
    int16x8_t v31 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v5), v6), 6uLL), v8);
    int16x8_t v32 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v5), v6), 6uLL), v8);
    float32x2x2_t v33 = (float32x2x2_t)vzip1q_s16(v9, v30);
    float32x2x2_t v34 = (float32x2x2_t)vzip2q_s16(v9, v30);
    int32x4_t v35 = (int32x4_t)vzip1q_s16(v31, v32);
    int16x8_t v36 = (float *)v12;
    vst2_f32(v36, v33);
    v36 += 4;
    int32x4_t v37 = (int32x4_t)vzip2q_s16(v31, v32);
    *(int32x4_t *)int16x8_t v36 = vzip2q_s32((int32x4_t)v33, v35);
    float32x2x2_t v38 = (float *)v12[2].i32;
    vst2_f32(v38, v34);
    v12[3] = vzip2q_s32((int32x4_t)v34, v37);
    int16x8_t v39 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[24], v5), v6), 6uLL), v8);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[80], v5), v6), 6uLL), v8);
    int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[88], v5), v6), 6uLL), v8);
    float32x2x2_t v42 = (float32x2x2_t)vzip1q_s16(v9, v39);
    float32x2x2_t v43 = (float32x2x2_t)vzip2q_s16(v9, v39);
    int32x4_t v44 = (int32x4_t)vzip1q_s16(v40, v41);
    int32x4_t v45 = (int32x4_t)vzip2q_s16(v40, v41);
    float32x2x2_t v46 = (float *)v12[4].i32;
    vst2_f32(v46, v42);
    v12[5] = vzip2q_s32((int32x4_t)v42, v44);
    float32x2x2_t v47 = (float *)v12[6].i32;
    vst2_f32(v47, v43);
    v12[7] = vzip2q_s32((int32x4_t)v43, v45);
    int v48 = v7 - 1;
    LODWORD(v12) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v12 > 1);
  int32x4_t v49 = v11 + 8;
  int16x8_t v50 = v11 + 32;
  int16x8_t v51 = v11 + 40;
  int v52 = v11 + 64;
  unsigned int v53 = v11 + 72;
  if (a4 <= 8) {
    int v54 = 8;
  }
  else {
    int v54 = a4;
  }
  int v55 = v48 - v54;
  a2 = v11;
  if (v55 >= 1)
  {
LABEL_15:
    int16x8_t v56 = (int16x8_t)xmmword_26A996DC0;
    int16x8_t v57 = (int16x8_t)xmmword_26A996DD0;
    unsigned int v58 = v55 + 1;
    int v59 = result + 4;
    v60.i64[0] = 0x8000800080008000;
    v60.i64[1] = 0x8000800080008000;
    v61.i64[0] = -1;
    v61.i64[1] = -1;
    uint64_t v62 = (float *)result[4].i32;
    do
    {
      int16x8_t v63 = *a2++;
      int16x8_t v64 = (float *)v59[-4].i32;
      int16x8_t v65 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v63, v56), v57), 6uLL), v60);
      int16x8_t v66 = *v50++;
      int16x8_t v67 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v66, v56), v57), 6uLL), v60);
      int16x8_t v68 = *v51++;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v68, v56), v57), 6uLL), v60);
      float32x2x2_t v70 = (float32x2x2_t)vzip1q_s16(v61, v65);
      float32x2x2_t v71 = (float32x2x2_t)vzip2q_s16(v61, v65);
      int32x4_t v72 = (int32x4_t)vzip1q_s16(v67, v69);
      int32x4_t v73 = (int32x4_t)vzip2q_s16(v67, v69);
      vst2_f32(v64, v70);
      v59[-3] = vzip2q_s32((int32x4_t)v70, v72);
      int16x8_t v74 = (float *)v59[-2].i32;
      vst2_f32(v74, v71);
      v59[-1] = vzip2q_s32((int32x4_t)v71, v73);
      int16x8_t v75 = *v49++;
      int16x8_t v76 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v75, v56), v57), 6uLL), v60);
      int16x8_t v77 = *v52++;
      int16x8_t v78 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v77, v56), v57), 6uLL), v60);
      int16x8_t v79 = *v53++;
      int16x8_t v80 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v79, v56), v57), 6uLL), v60);
      float32x2x2_t v81 = (float32x2x2_t)vzip1q_s16(v61, v76);
      int32x4_t v82 = (int32x4_t)vzip1q_s16(v78, v80);
      vst2_f32(v62, v81);
      uint64_t v62 = (float *)((char *)v62 + a3);
      float32x2x2_t v83 = (float32x2x2_t)vzip2q_s16(v61, v76);
      int32x4_t v84 = (int32x4_t)vzip2q_s16(v78, v80);
      int16x8_t v85 = (float *)v59[2].i32;
      vst2_f32(v85, v83);
      v59[1] = vzip2q_s32((int32x4_t)v81, v82);
      v59[3] = vzip2q_s32((int32x4_t)v83, v84);
      --v58;
      int v59 = (int32x4_t *)v62;
    }
    while (v58 > 1);
  }
  return result;
}

int32x4_t *from_444_to_y416_12bits<8,8,(AlphaOutputMethod)1,false>(int32x4_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996760, memory_order_acquire) & 1) == 0)
  {
    int v93 = result;
    int8x8x2_t v94 = a2;
    int v95 = a5;
    unsigned int v96 = a6;
    int v97 = a3;
    int v98 = a4;
    int v99 = __cxa_guard_acquire(&qword_26A996760);
    a4 = v98;
    a3 = v97;
    a6 = v96;
    a5 = v95;
    a2 = v94;
    int v100 = v99;
    int8x8_t result = v93;
    if (v100)
    {
      *(void *)&long long v101 = 0xF800F800F800F800;
      *((void *)&v101 + 1) = 0xF800F800F800F800;
      xmmword_26A996DE0 = v101;
      __cxa_guard_release(&qword_26A996760);
      a4 = v98;
      a3 = v97;
      int8x8_t result = v93;
      a6 = v96;
      a5 = v95;
      a2 = v94;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996768, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v102 = result;
    int16x8_t v103 = a2;
    int16x8_t v104 = a5;
    unsigned int v105 = a6;
    int v106 = a3;
    int v107 = a4;
    int v108 = __cxa_guard_acquire(&qword_26A996768);
    a4 = v107;
    a3 = v106;
    a6 = v105;
    a5 = v104;
    a2 = v103;
    int v109 = v108;
    int8x8_t result = v102;
    if (v109)
    {
      *(void *)&long long v110 = 0xF800F800F800F800;
      *((void *)&v110 + 1) = 0xF800F800F800F800;
      xmmword_26A996DF0 = v110;
      __cxa_guard_release(&qword_26A996768);
      a4 = v107;
      a3 = v106;
      int8x8_t result = v102;
      a6 = v105;
      a5 = v104;
      a2 = v103;
    }
  }
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    unsigned int v53 = a2 + 8;
    int v54 = a2 + 32;
    int v55 = a2 + 40;
    int16x8_t v56 = a2 + 64;
    int16x8_t v57 = a2 + 72;
    int v59 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  int16x8_t v7 = (int16x8_t)xmmword_26A996DE0;
  int16x8_t v8 = (int16x8_t)xmmword_26A996DF0;
  int v9 = a4 + 8;
  v10.i64[0] = 0x8000800080008000;
  v10.i64[1] = 0x8000800080008000;
  int16x4_t v11 = (float *)result;
  do
  {
    int16x4_t v12 = a2 + 1;
    int16x8_t v13 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x8_t v14 = (int32x4_t *)((char *)result + 8 * a3);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v7), v8), 4uLL), v10);
    int16x8_t v16 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v7), v8), 4uLL), v10);
    int16x8_t v17 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v7), v8), 4uLL), v10);
    float32x2x2_t v18 = (float32x2x2_t)vzip1q_s16(*a5, v15);
    float32x2x2_t v19 = (float32x2x2_t)vzip2q_s16(*a5, v15);
    int32x4_t v20 = (int32x4_t)vzip1q_s16(v16, v17);
    int32x4_t v21 = (int32x4_t)vzip2q_s16(v16, v17);
    vst2_f32(v11, v18);
    int16x4_t v11 = (float *)((char *)v11 + a3);
    result[1] = vzip2q_s32((int32x4_t)v18, v20);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v19);
    result[3] = vzip2q_s32((int32x4_t)v19, v21);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v7), v8), 4uLL), v10);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[64], v7), v8), 4uLL), v10);
    int16x8_t v25 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[72], v7), v8), 4uLL), v10);
    int16x8_t v26 = a5[1];
    float32x2x2_t v27 = (float32x2x2_t)vzip1q_s16(v26, v23);
    float32x2x2_t v28 = (float32x2x2_t)vzip2q_s16(v26, v23);
    int32x4_t v29 = (int32x4_t)vzip1q_s16(v24, v25);
    int32x4_t v30 = (int32x4_t)vzip2q_s16(v24, v25);
    int16x8_t v31 = (float *)result[4].i32;
    vst2_f32(v31, v27);
    result[5] = vzip2q_s32((int32x4_t)v27, v29);
    int16x8_t v32 = (float *)result[6].i32;
    vst2_f32(v32, v28);
    result[7] = vzip2q_s32((int32x4_t)v28, v30);
    int8x8_t result = (int32x4_t *)v11;
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v33 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v7), v8), 4uLL), v10);
    int16x8_t v34 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v7), v8), 4uLL), v10);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v7), v8), 4uLL), v10);
    int16x8_t v36 = v13[-1];
    float32x2x2_t v37 = (float32x2x2_t)vzip1q_s16(v36, v33);
    float32x2x2_t v38 = (float32x2x2_t)vzip2q_s16(v36, v33);
    int32x4_t v39 = (int32x4_t)vzip1q_s16(v34, v35);
    int32x4_t v40 = (int32x4_t)vzip2q_s16(v34, v35);
    int16x8_t v41 = (float *)v14;
    vst2_f32(v41, v37);
    v41 += 4;
    *(int32x4_t *)int16x8_t v41 = vzip2q_s32((int32x4_t)v37, v39);
    float32x2x2_t v42 = (float *)v14[2].i32;
    vst2_f32(v42, v38);
    v14[3] = vzip2q_s32((int32x4_t)v38, v40);
    int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[24], v7), v8), 4uLL), v10);
    int16x8_t v44 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[80], v7), v8), 4uLL), v10);
    int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[88], v7), v8), 4uLL), v10);
    float32x2x2_t v46 = (float32x2x2_t)vzip1q_s16(*v13, v43);
    float32x2x2_t v47 = (float32x2x2_t)vzip2q_s16(*v13, v43);
    int32x4_t v48 = (int32x4_t)vzip1q_s16(v44, v45);
    int32x4_t v49 = (int32x4_t)vzip2q_s16(v44, v45);
    int16x8_t v50 = (float *)v14[4].i32;
    vst2_f32(v50, v46);
    v14[5] = vzip2q_s32((int32x4_t)v46, v48);
    int16x8_t v51 = (float *)v14[6].i32;
    vst2_f32(v51, v47);
    v14[7] = vzip2q_s32((int32x4_t)v47, v49);
    int v52 = v9 - 1;
    LODWORD(v51) = v9 - 16;
    --v9;
    ++a2;
  }
  while ((int)v51 > 1);
  unsigned int v53 = v12 + 8;
  int v54 = v12 + 32;
  int v55 = v12 + 40;
  int16x8_t v56 = v12 + 64;
  int16x8_t v57 = v12 + 72;
  if (a4 <= 8) {
    int v58 = 8;
  }
  else {
    int v58 = a4;
  }
  int v59 = v52 - v58;
  a2 = v12;
  if (v59 >= 1)
  {
LABEL_15:
    int16x8_t v60 = (int16x8_t)xmmword_26A996DE0;
    int16x8_t v61 = (int16x8_t)xmmword_26A996DF0;
    uint64_t v62 = a3;
    unsigned int v63 = v59 + 1;
    int16x8_t v64 = a5 + 1;
    result += 4;
    v65.i64[0] = 0x8000800080008000;
    v65.i64[1] = 0x8000800080008000;
    int16x8_t v66 = (float *)result;
    do
    {
      int16x8_t v67 = *a2++;
      int16x8_t v68 = (float *)result[-4].i32;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v67, v60), v61), 4uLL), v65);
      int16x8_t v70 = *v54++;
      int16x8_t v71 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v60), v61), 4uLL), v65);
      int16x8_t v72 = *v55++;
      int16x8_t v73 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v72, v60), v61), 4uLL), v65);
      int16x8_t v74 = v64[-1];
      float32x2x2_t v75 = (float32x2x2_t)vzip1q_s16(v74, v69);
      float32x2x2_t v76 = (float32x2x2_t)vzip2q_s16(v74, v69);
      int32x4_t v77 = (int32x4_t)vzip1q_s16(v71, v73);
      int32x4_t v78 = (int32x4_t)vzip2q_s16(v71, v73);
      vst2_f32(v68, v75);
      result[-3] = vzip2q_s32((int32x4_t)v75, v77);
      int16x8_t v79 = (float *)result[-2].i32;
      vst2_f32(v79, v76);
      result[-1] = vzip2q_s32((int32x4_t)v76, v78);
      int16x8_t v80 = *v53++;
      int8x16_t v81 = (int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v80, v60), v61), 4uLL);
      int16x8_t v82 = *v56++;
      int16x8_t v83 = (int16x8_t)veorq_s8(v81, v65);
      int8x16_t v84 = (int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v82, v60), v61), 4uLL);
      int16x8_t v85 = *v57++;
      int16x8_t v86 = (int16x8_t)veorq_s8(v84, v65);
      int16x8_t v87 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v85, v60), v61), 4uLL), v65);
      float32x2x2_t v88 = (float32x2x2_t)vzip1q_s16(*v64, v83);
      float32x2x2_t v89 = (float32x2x2_t)vzip2q_s16(*v64, v83);
      int32x4_t v90 = (int32x4_t)vzip1q_s16(v86, v87);
      vst2_f32(v66, v88);
      int16x8_t v66 = (float *)((char *)v66 + v62);
      int32x4_t v91 = (int32x4_t)vzip2q_s16(v86, v87);
      result[1] = vzip2q_s32((int32x4_t)v88, v90);
      long long v92 = (float *)result[2].i32;
      vst2_f32(v92, v89);
      result[3] = vzip2q_s32((int32x4_t)v89, v91);
      --v63;
      int16x8_t v64 = (int16x8_t *)((char *)v64 + a6);
      int8x8_t result = (int32x4_t *)v66;
    }
    while (v63 > 1);
  }
  return result;
}

int32x4_t *from_444_to_y416_12bits<8,8,(AlphaOutputMethod)1,true>(int32x4_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996770, memory_order_acquire) & 1) == 0)
  {
    int v93 = result;
    int8x8x2_t v94 = a2;
    int v95 = a5;
    unsigned int v96 = a6;
    int v97 = a3;
    int v98 = a4;
    int v99 = __cxa_guard_acquire(&qword_26A996770);
    a4 = v98;
    a3 = v97;
    a6 = v96;
    a5 = v95;
    a2 = v94;
    int v100 = v99;
    int8x8_t result = v93;
    if (v100)
    {
      *(void *)&long long v101 = 0xF800F800F800F800;
      *((void *)&v101 + 1) = 0xF800F800F800F800;
      xmmword_26A996E00 = v101;
      __cxa_guard_release(&qword_26A996770);
      a4 = v98;
      a3 = v97;
      int8x8_t result = v93;
      a6 = v96;
      a5 = v95;
      a2 = v94;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996778, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v102 = result;
    int16x8_t v103 = a2;
    int16x8_t v104 = a5;
    unsigned int v105 = a6;
    int v106 = a3;
    int v107 = a4;
    int v108 = __cxa_guard_acquire(&qword_26A996778);
    a4 = v107;
    a3 = v106;
    a6 = v105;
    a5 = v104;
    a2 = v103;
    int v109 = v108;
    int8x8_t result = v102;
    if (v109)
    {
      *(void *)&long long v110 = 0xF800F800F800F800;
      *((void *)&v110 + 1) = 0xF800F800F800F800;
      xmmword_26A996E10 = v110;
      __cxa_guard_release(&qword_26A996778);
      a4 = v107;
      a3 = v106;
      int8x8_t result = v102;
      a6 = v105;
      a5 = v104;
      a2 = v103;
    }
  }
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    unsigned int v53 = a2 + 8;
    int v54 = a2 + 32;
    int v55 = a2 + 40;
    int16x8_t v56 = a2 + 64;
    int16x8_t v57 = a2 + 72;
    int v59 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  int16x8_t v7 = (int16x8_t)xmmword_26A996E00;
  int16x8_t v8 = (int16x8_t)xmmword_26A996E10;
  int v9 = a4 + 8;
  v10.i64[0] = 0x8000800080008000;
  v10.i64[1] = 0x8000800080008000;
  int16x4_t v11 = (float *)result;
  do
  {
    int16x4_t v12 = a2 + 1;
    int16x8_t v13 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x8_t v14 = (int32x4_t *)((char *)result + 8 * a3);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v7), v8), 4uLL), v10);
    int16x8_t v16 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v7), v8), 4uLL), v10);
    int16x8_t v17 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v7), v8), 4uLL), v10);
    float32x2x2_t v18 = (float32x2x2_t)vzip1q_s16(*a5, v15);
    float32x2x2_t v19 = (float32x2x2_t)vzip2q_s16(*a5, v15);
    int32x4_t v20 = (int32x4_t)vzip1q_s16(v16, v17);
    int32x4_t v21 = (int32x4_t)vzip2q_s16(v16, v17);
    vst2_f32(v11, v18);
    int16x4_t v11 = (float *)((char *)v11 + a3);
    result[1] = vzip2q_s32((int32x4_t)v18, v20);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v19);
    result[3] = vzip2q_s32((int32x4_t)v19, v21);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v7), v8), 4uLL), v10);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[64], v7), v8), 4uLL), v10);
    int16x8_t v25 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[72], v7), v8), 4uLL), v10);
    int16x8_t v26 = a5[1];
    float32x2x2_t v27 = (float32x2x2_t)vzip1q_s16(v26, v23);
    float32x2x2_t v28 = (float32x2x2_t)vzip2q_s16(v26, v23);
    int32x4_t v29 = (int32x4_t)vzip1q_s16(v24, v25);
    int32x4_t v30 = (int32x4_t)vzip2q_s16(v24, v25);
    int16x8_t v31 = (float *)result[4].i32;
    vst2_f32(v31, v27);
    result[5] = vzip2q_s32((int32x4_t)v27, v29);
    int16x8_t v32 = (float *)result[6].i32;
    vst2_f32(v32, v28);
    result[7] = vzip2q_s32((int32x4_t)v28, v30);
    int8x8_t result = (int32x4_t *)v11;
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v33 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v7), v8), 4uLL), v10);
    int16x8_t v34 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v7), v8), 4uLL), v10);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v7), v8), 4uLL), v10);
    int16x8_t v36 = v13[-1];
    float32x2x2_t v37 = (float32x2x2_t)vzip1q_s16(v36, v33);
    float32x2x2_t v38 = (float32x2x2_t)vzip2q_s16(v36, v33);
    int32x4_t v39 = (int32x4_t)vzip1q_s16(v34, v35);
    int32x4_t v40 = (int32x4_t)vzip2q_s16(v34, v35);
    int16x8_t v41 = (float *)v14;
    vst2_f32(v41, v37);
    v41 += 4;
    *(int32x4_t *)int16x8_t v41 = vzip2q_s32((int32x4_t)v37, v39);
    float32x2x2_t v42 = (float *)v14[2].i32;
    vst2_f32(v42, v38);
    v14[3] = vzip2q_s32((int32x4_t)v38, v40);
    int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[24], v7), v8), 4uLL), v10);
    int16x8_t v44 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[80], v7), v8), 4uLL), v10);
    int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[88], v7), v8), 4uLL), v10);
    float32x2x2_t v46 = (float32x2x2_t)vzip1q_s16(*v13, v43);
    float32x2x2_t v47 = (float32x2x2_t)vzip2q_s16(*v13, v43);
    int32x4_t v48 = (int32x4_t)vzip1q_s16(v44, v45);
    int32x4_t v49 = (int32x4_t)vzip2q_s16(v44, v45);
    int16x8_t v50 = (float *)v14[4].i32;
    vst2_f32(v50, v46);
    v14[5] = vzip2q_s32((int32x4_t)v46, v48);
    int16x8_t v51 = (float *)v14[6].i32;
    vst2_f32(v51, v47);
    v14[7] = vzip2q_s32((int32x4_t)v47, v49);
    int v52 = v9 - 1;
    LODWORD(v51) = v9 - 16;
    --v9;
    ++a2;
  }
  while ((int)v51 > 1);
  unsigned int v53 = v12 + 8;
  int v54 = v12 + 32;
  int v55 = v12 + 40;
  int16x8_t v56 = v12 + 64;
  int16x8_t v57 = v12 + 72;
  if (a4 <= 8) {
    int v58 = 8;
  }
  else {
    int v58 = a4;
  }
  int v59 = v52 - v58;
  a2 = v12;
  if (v59 >= 1)
  {
LABEL_15:
    int16x8_t v60 = (int16x8_t)xmmword_26A996E00;
    int16x8_t v61 = (int16x8_t)xmmword_26A996E10;
    uint64_t v62 = a3;
    unsigned int v63 = v59 + 1;
    int16x8_t v64 = a5 + 1;
    result += 4;
    v65.i64[0] = 0x8000800080008000;
    v65.i64[1] = 0x8000800080008000;
    int16x8_t v66 = (float *)result;
    do
    {
      int16x8_t v67 = *a2++;
      int16x8_t v68 = (float *)result[-4].i32;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v67, v60), v61), 4uLL), v65);
      int16x8_t v70 = *v54++;
      int16x8_t v71 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v70, v60), v61), 4uLL), v65);
      int16x8_t v72 = *v55++;
      int16x8_t v73 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v72, v60), v61), 4uLL), v65);
      int16x8_t v74 = v64[-1];
      float32x2x2_t v75 = (float32x2x2_t)vzip1q_s16(v74, v69);
      float32x2x2_t v76 = (float32x2x2_t)vzip2q_s16(v74, v69);
      int32x4_t v77 = (int32x4_t)vzip1q_s16(v71, v73);
      int32x4_t v78 = (int32x4_t)vzip2q_s16(v71, v73);
      vst2_f32(v68, v75);
      result[-3] = vzip2q_s32((int32x4_t)v75, v77);
      int16x8_t v79 = (float *)result[-2].i32;
      vst2_f32(v79, v76);
      result[-1] = vzip2q_s32((int32x4_t)v76, v78);
      int16x8_t v80 = *v53++;
      int8x16_t v81 = (int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v80, v60), v61), 4uLL);
      int16x8_t v82 = *v56++;
      int16x8_t v83 = (int16x8_t)veorq_s8(v81, v65);
      int8x16_t v84 = (int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v82, v60), v61), 4uLL);
      int16x8_t v85 = *v57++;
      int16x8_t v86 = (int16x8_t)veorq_s8(v84, v65);
      int16x8_t v87 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v85, v60), v61), 4uLL), v65);
      float32x2x2_t v88 = (float32x2x2_t)vzip1q_s16(*v64, v83);
      float32x2x2_t v89 = (float32x2x2_t)vzip2q_s16(*v64, v83);
      int32x4_t v90 = (int32x4_t)vzip1q_s16(v86, v87);
      vst2_f32(v66, v88);
      int16x8_t v66 = (float *)((char *)v66 + v62);
      int32x4_t v91 = (int32x4_t)vzip2q_s16(v86, v87);
      result[1] = vzip2q_s32((int32x4_t)v88, v90);
      long long v92 = (float *)result[2].i32;
      vst2_f32(v92, v89);
      result[3] = vzip2q_s32((int32x4_t)v89, v91);
      --v63;
      int16x8_t v64 = (int16x8_t *)((char *)v64 + a6);
      int8x8_t result = (int32x4_t *)v66;
    }
    while (v63 > 1);
  }
  return result;
}

int32x4_t *from_444_to_y416_12bits<8,8,(AlphaOutputMethod)2,false>(int32x4_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996780, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v86 = result;
    int16x8_t v87 = a2;
    int v88 = a3;
    int v89 = a4;
    int v90 = __cxa_guard_acquire(&qword_26A996780);
    a4 = v89;
    a3 = v88;
    a2 = v87;
    int v91 = v90;
    int8x8_t result = v86;
    if (v91)
    {
      *(void *)&long long v92 = 0xF800F800F800F800;
      *((void *)&v92 + 1) = 0xF800F800F800F800;
      xmmword_26A996E20 = v92;
      __cxa_guard_release(&qword_26A996780);
      a4 = v89;
      a3 = v88;
      int8x8_t result = v86;
      a2 = v87;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996788, memory_order_acquire) & 1) == 0)
  {
    int v93 = result;
    int8x8x2_t v94 = a2;
    int v95 = a3;
    int v96 = a4;
    int v97 = __cxa_guard_acquire(&qword_26A996788);
    a4 = v96;
    a3 = v95;
    a2 = v94;
    int v98 = v97;
    int8x8_t result = v93;
    if (v98)
    {
      *(void *)&long long v99 = 0xF800F800F800F800;
      *((void *)&v99 + 1) = 0xF800F800F800F800;
      xmmword_26A996E30 = v99;
      __cxa_guard_release(&qword_26A996788);
      a4 = v96;
      a3 = v95;
      int8x8_t result = v93;
      a2 = v94;
    }
  }
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int32x4_t v49 = a2 + 8;
    int16x8_t v50 = a2 + 32;
    int16x8_t v51 = a2 + 40;
    int v52 = a2 + 64;
    unsigned int v53 = a2 + 72;
    int v55 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  int16x8_t v5 = (int16x8_t)xmmword_26A996E20;
  int16x8_t v6 = (int16x8_t)xmmword_26A996E30;
  int v7 = a4 + 8;
  v8.i64[0] = 0x8000800080008000;
  v8.i64[1] = 0x8000800080008000;
  v9.i64[0] = -1;
  v9.i64[1] = -1;
  int8x16_t v10 = (float *)result;
  do
  {
    int16x4_t v11 = a2 + 1;
    int16x4_t v12 = (int32x4_t *)((char *)result + 8 * a3);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v5), v6), 4uLL), v8);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v5), v6), 4uLL), v8);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v5), v6), 4uLL), v8);
    float32x2x2_t v16 = (float32x2x2_t)vzip1q_s16(v9, v13);
    float32x2x2_t v17 = (float32x2x2_t)vzip2q_s16(v9, v13);
    int32x4_t v18 = (int32x4_t)vzip1q_s16(v14, v15);
    vst2_f32(v10, v16);
    int8x16_t v10 = (float *)((char *)v10 + a3);
    int32x4_t v19 = (int32x4_t)vzip2q_s16(v14, v15);
    result[1] = vzip2q_s32((int32x4_t)v16, v18);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v17);
    result[3] = vzip2q_s32((int32x4_t)v17, v19);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v5), v6), 4uLL), v8);
    int16x8_t v22 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[64], v5), v6), 4uLL), v8);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[72], v5), v6), 4uLL), v8);
    float32x2x2_t v24 = (float32x2x2_t)vzip1q_s16(v9, v21);
    float32x2x2_t v25 = (float32x2x2_t)vzip2q_s16(v9, v21);
    int32x4_t v26 = (int32x4_t)vzip1q_s16(v22, v23);
    int32x4_t v27 = (int32x4_t)vzip2q_s16(v22, v23);
    float32x2x2_t v28 = (float *)result[4].i32;
    vst2_f32(v28, v24);
    result[5] = vzip2q_s32((int32x4_t)v24, v26);
    int32x4_t v29 = (float *)result[6].i32;
    vst2_f32(v29, v25);
    result[7] = vzip2q_s32((int32x4_t)v25, v27);
    int8x8_t result = (int32x4_t *)v10;
    int16x8_t v30 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v5), v6), 4uLL), v8);
    int16x8_t v31 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v5), v6), 4uLL), v8);
    int16x8_t v32 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v5), v6), 4uLL), v8);
    float32x2x2_t v33 = (float32x2x2_t)vzip1q_s16(v9, v30);
    float32x2x2_t v34 = (float32x2x2_t)vzip2q_s16(v9, v30);
    int32x4_t v35 = (int32x4_t)vzip1q_s16(v31, v32);
    int16x8_t v36 = (float *)v12;
    vst2_f32(v36, v33);
    v36 += 4;
    int32x4_t v37 = (int32x4_t)vzip2q_s16(v31, v32);
    *(int32x4_t *)int16x8_t v36 = vzip2q_s32((int32x4_t)v33, v35);
    float32x2x2_t v38 = (float *)v12[2].i32;
    vst2_f32(v38, v34);
    v12[3] = vzip2q_s32((int32x4_t)v34, v37);
    int16x8_t v39 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[24], v5), v6), 4uLL), v8);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[80], v5), v6), 4uLL), v8);
    int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[88], v5), v6), 4uLL), v8);
    float32x2x2_t v42 = (float32x2x2_t)vzip1q_s16(v9, v39);
    float32x2x2_t v43 = (float32x2x2_t)vzip2q_s16(v9, v39);
    int32x4_t v44 = (int32x4_t)vzip1q_s16(v40, v41);
    int32x4_t v45 = (int32x4_t)vzip2q_s16(v40, v41);
    float32x2x2_t v46 = (float *)v12[4].i32;
    vst2_f32(v46, v42);
    v12[5] = vzip2q_s32((int32x4_t)v42, v44);
    float32x2x2_t v47 = (float *)v12[6].i32;
    vst2_f32(v47, v43);
    v12[7] = vzip2q_s32((int32x4_t)v43, v45);
    int v48 = v7 - 1;
    LODWORD(v12) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v12 > 1);
  int32x4_t v49 = v11 + 8;
  int16x8_t v50 = v11 + 32;
  int16x8_t v51 = v11 + 40;
  int v52 = v11 + 64;
  unsigned int v53 = v11 + 72;
  if (a4 <= 8) {
    int v54 = 8;
  }
  else {
    int v54 = a4;
  }
  int v55 = v48 - v54;
  a2 = v11;
  if (v55 >= 1)
  {
LABEL_15:
    int16x8_t v56 = (int16x8_t)xmmword_26A996E20;
    int16x8_t v57 = (int16x8_t)xmmword_26A996E30;
    unsigned int v58 = v55 + 1;
    int v59 = result + 4;
    v60.i64[0] = 0x8000800080008000;
    v60.i64[1] = 0x8000800080008000;
    v61.i64[0] = -1;
    v61.i64[1] = -1;
    uint64_t v62 = (float *)result[4].i32;
    do
    {
      int16x8_t v63 = *a2++;
      int16x8_t v64 = (float *)v59[-4].i32;
      int16x8_t v65 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v63, v56), v57), 4uLL), v60);
      int16x8_t v66 = *v50++;
      int16x8_t v67 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v66, v56), v57), 4uLL), v60);
      int16x8_t v68 = *v51++;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v68, v56), v57), 4uLL), v60);
      float32x2x2_t v70 = (float32x2x2_t)vzip1q_s16(v61, v65);
      float32x2x2_t v71 = (float32x2x2_t)vzip2q_s16(v61, v65);
      int32x4_t v72 = (int32x4_t)vzip1q_s16(v67, v69);
      int32x4_t v73 = (int32x4_t)vzip2q_s16(v67, v69);
      vst2_f32(v64, v70);
      v59[-3] = vzip2q_s32((int32x4_t)v70, v72);
      int16x8_t v74 = (float *)v59[-2].i32;
      vst2_f32(v74, v71);
      v59[-1] = vzip2q_s32((int32x4_t)v71, v73);
      int16x8_t v75 = *v49++;
      int16x8_t v76 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v75, v56), v57), 4uLL), v60);
      int16x8_t v77 = *v52++;
      int16x8_t v78 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v77, v56), v57), 4uLL), v60);
      int16x8_t v79 = *v53++;
      int16x8_t v80 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v79, v56), v57), 4uLL), v60);
      float32x2x2_t v81 = (float32x2x2_t)vzip1q_s16(v61, v76);
      int32x4_t v82 = (int32x4_t)vzip1q_s16(v78, v80);
      vst2_f32(v62, v81);
      uint64_t v62 = (float *)((char *)v62 + a3);
      float32x2x2_t v83 = (float32x2x2_t)vzip2q_s16(v61, v76);
      int32x4_t v84 = (int32x4_t)vzip2q_s16(v78, v80);
      int16x8_t v85 = (float *)v59[2].i32;
      vst2_f32(v85, v83);
      v59[1] = vzip2q_s32((int32x4_t)v81, v82);
      v59[3] = vzip2q_s32((int32x4_t)v83, v84);
      --v58;
      int v59 = (int32x4_t *)v62;
    }
    while (v58 > 1);
  }
  return result;
}

int32x4_t *from_444_to_y416_12bits<8,8,(AlphaOutputMethod)2,true>(int32x4_t *result, int16x8_t *a2, int a3, int a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996790, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v86 = result;
    int16x8_t v87 = a2;
    int v88 = a3;
    int v89 = a4;
    int v90 = __cxa_guard_acquire(&qword_26A996790);
    a4 = v89;
    a3 = v88;
    a2 = v87;
    int v91 = v90;
    int8x8_t result = v86;
    if (v91)
    {
      *(void *)&long long v92 = 0xF800F800F800F800;
      *((void *)&v92 + 1) = 0xF800F800F800F800;
      xmmword_26A996E40 = v92;
      __cxa_guard_release(&qword_26A996790);
      a4 = v89;
      a3 = v88;
      int8x8_t result = v86;
      a2 = v87;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996798, memory_order_acquire) & 1) == 0)
  {
    int v93 = result;
    int8x8x2_t v94 = a2;
    int v95 = a3;
    int v96 = a4;
    int v97 = __cxa_guard_acquire(&qword_26A996798);
    a4 = v96;
    a3 = v95;
    a2 = v94;
    int v98 = v97;
    int8x8_t result = v93;
    if (v98)
    {
      *(void *)&long long v99 = 0xF800F800F800F800;
      *((void *)&v99 + 1) = 0xF800F800F800F800;
      xmmword_26A996E50 = v99;
      __cxa_guard_release(&qword_26A996798);
      a4 = v96;
      a3 = v95;
      int8x8_t result = v93;
      a2 = v94;
    }
  }
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  if (!v4)
  {
    int32x4_t v49 = a2 + 8;
    int16x8_t v50 = a2 + 32;
    int16x8_t v51 = a2 + 40;
    int v52 = a2 + 64;
    unsigned int v53 = a2 + 72;
    int v55 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_15;
  }
  int16x8_t v5 = (int16x8_t)xmmword_26A996E40;
  int16x8_t v6 = (int16x8_t)xmmword_26A996E50;
  int v7 = a4 + 8;
  v8.i64[0] = 0x8000800080008000;
  v8.i64[1] = 0x8000800080008000;
  v9.i64[0] = -1;
  v9.i64[1] = -1;
  int8x16_t v10 = (float *)result;
  do
  {
    int16x4_t v11 = a2 + 1;
    int16x4_t v12 = (int32x4_t *)((char *)result + 8 * a3);
    int16x8_t v13 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v5), v6), 4uLL), v8);
    int16x8_t v14 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[32], v5), v6), 4uLL), v8);
    int16x8_t v15 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[40], v5), v6), 4uLL), v8);
    float32x2x2_t v16 = (float32x2x2_t)vzip1q_s16(v9, v13);
    float32x2x2_t v17 = (float32x2x2_t)vzip2q_s16(v9, v13);
    int32x4_t v18 = (int32x4_t)vzip1q_s16(v14, v15);
    vst2_f32(v10, v16);
    int8x16_t v10 = (float *)((char *)v10 + a3);
    int32x4_t v19 = (int32x4_t)vzip2q_s16(v14, v15);
    result[1] = vzip2q_s32((int32x4_t)v16, v18);
    i32 = (float *)result[2].i32;
    vst2_f32(i32, v17);
    result[3] = vzip2q_s32((int32x4_t)v17, v19);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[8], v5), v6), 4uLL), v8);
    int16x8_t v22 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[64], v5), v6), 4uLL), v8);
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[72], v5), v6), 4uLL), v8);
    float32x2x2_t v24 = (float32x2x2_t)vzip1q_s16(v9, v21);
    float32x2x2_t v25 = (float32x2x2_t)vzip2q_s16(v9, v21);
    int32x4_t v26 = (int32x4_t)vzip1q_s16(v22, v23);
    int32x4_t v27 = (int32x4_t)vzip2q_s16(v22, v23);
    float32x2x2_t v28 = (float *)result[4].i32;
    vst2_f32(v28, v24);
    result[5] = vzip2q_s32((int32x4_t)v24, v26);
    int32x4_t v29 = (float *)result[6].i32;
    vst2_f32(v29, v25);
    result[7] = vzip2q_s32((int32x4_t)v25, v27);
    int8x8_t result = (int32x4_t *)v10;
    int16x8_t v30 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[16], v5), v6), 4uLL), v8);
    int16x8_t v31 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[48], v5), v6), 4uLL), v8);
    int16x8_t v32 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[56], v5), v6), 4uLL), v8);
    float32x2x2_t v33 = (float32x2x2_t)vzip1q_s16(v9, v30);
    float32x2x2_t v34 = (float32x2x2_t)vzip2q_s16(v9, v30);
    int32x4_t v35 = (int32x4_t)vzip1q_s16(v31, v32);
    int16x8_t v36 = (float *)v12;
    vst2_f32(v36, v33);
    v36 += 4;
    int32x4_t v37 = (int32x4_t)vzip2q_s16(v31, v32);
    *(int32x4_t *)int16x8_t v36 = vzip2q_s32((int32x4_t)v33, v35);
    float32x2x2_t v38 = (float *)v12[2].i32;
    vst2_f32(v38, v34);
    v12[3] = vzip2q_s32((int32x4_t)v34, v37);
    int16x8_t v39 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[24], v5), v6), 4uLL), v8);
    int16x8_t v40 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[80], v5), v6), 4uLL), v8);
    int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[88], v5), v6), 4uLL), v8);
    float32x2x2_t v42 = (float32x2x2_t)vzip1q_s16(v9, v39);
    float32x2x2_t v43 = (float32x2x2_t)vzip2q_s16(v9, v39);
    int32x4_t v44 = (int32x4_t)vzip1q_s16(v40, v41);
    int32x4_t v45 = (int32x4_t)vzip2q_s16(v40, v41);
    float32x2x2_t v46 = (float *)v12[4].i32;
    vst2_f32(v46, v42);
    v12[5] = vzip2q_s32((int32x4_t)v42, v44);
    float32x2x2_t v47 = (float *)v12[6].i32;
    vst2_f32(v47, v43);
    v12[7] = vzip2q_s32((int32x4_t)v43, v45);
    int v48 = v7 - 1;
    LODWORD(v12) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v12 > 1);
  int32x4_t v49 = v11 + 8;
  int16x8_t v50 = v11 + 32;
  int16x8_t v51 = v11 + 40;
  int v52 = v11 + 64;
  unsigned int v53 = v11 + 72;
  if (a4 <= 8) {
    int v54 = 8;
  }
  else {
    int v54 = a4;
  }
  int v55 = v48 - v54;
  a2 = v11;
  if (v55 >= 1)
  {
LABEL_15:
    int16x8_t v56 = (int16x8_t)xmmword_26A996E40;
    int16x8_t v57 = (int16x8_t)xmmword_26A996E50;
    unsigned int v58 = v55 + 1;
    int v59 = result + 4;
    v60.i64[0] = 0x8000800080008000;
    v60.i64[1] = 0x8000800080008000;
    v61.i64[0] = -1;
    v61.i64[1] = -1;
    uint64_t v62 = (float *)result[4].i32;
    do
    {
      int16x8_t v63 = *a2++;
      int16x8_t v64 = (float *)v59[-4].i32;
      int16x8_t v65 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v63, v56), v57), 4uLL), v60);
      int16x8_t v66 = *v50++;
      int16x8_t v67 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v66, v56), v57), 4uLL), v60);
      int16x8_t v68 = *v51++;
      int16x8_t v69 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v68, v56), v57), 4uLL), v60);
      float32x2x2_t v70 = (float32x2x2_t)vzip1q_s16(v61, v65);
      float32x2x2_t v71 = (float32x2x2_t)vzip2q_s16(v61, v65);
      int32x4_t v72 = (int32x4_t)vzip1q_s16(v67, v69);
      int32x4_t v73 = (int32x4_t)vzip2q_s16(v67, v69);
      vst2_f32(v64, v70);
      v59[-3] = vzip2q_s32((int32x4_t)v70, v72);
      int16x8_t v74 = (float *)v59[-2].i32;
      vst2_f32(v74, v71);
      v59[-1] = vzip2q_s32((int32x4_t)v71, v73);
      int16x8_t v75 = *v49++;
      int16x8_t v76 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v75, v56), v57), 4uLL), v60);
      int16x8_t v77 = *v52++;
      int16x8_t v78 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v77, v56), v57), 4uLL), v60);
      int16x8_t v79 = *v53++;
      int16x8_t v80 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v79, v56), v57), 4uLL), v60);
      float32x2x2_t v81 = (float32x2x2_t)vzip1q_s16(v61, v76);
      int32x4_t v82 = (int32x4_t)vzip1q_s16(v78, v80);
      vst2_f32(v62, v81);
      uint64_t v62 = (float *)((char *)v62 + a3);
      float32x2x2_t v83 = (float32x2x2_t)vzip2q_s16(v61, v76);
      int32x4_t v84 = (int32x4_t)vzip2q_s16(v78, v80);
      int16x8_t v85 = (float *)v59[2].i32;
      vst2_f32(v85, v83);
      v59[1] = vzip2q_s32((int32x4_t)v81, v82);
      v59[3] = vzip2q_s32((int32x4_t)v83, v84);
      --v58;
      int v59 = (int32x4_t *)v62;
    }
    while (v58 > 1);
  }
  return result;
}

int32x4_t *from_444_to_y416<8,8,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  return from_444_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(a1, a2, a3, a4, a5, a6, 8u);
}

int32x4_t *from_444_to_y416<8,8,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  return from_444_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(a1, a2, a3, a4, a5, a6, 8u);
}

int32x4_t *from_444_to_y416<8,4,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  return from_444_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(a1, a2, a3, a4, a5, a6, 4u);
}

int32x4_t *from_444_to_y416<8,4,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6)
{
  return from_444_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(a1, a2, a3, a4, a5, a6, 4u);
}

_WORD *from_444_to_y416<4,8,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 4, 8);
}

_WORD *from_444_to_y416<4,8,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 4, 8);
}

_WORD *from_444_to_y416<4,4,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 4, 4);
}

_WORD *from_444_to_y416<4,4,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 4, 4);
}

_WORD *from_444_to_y416<4,2,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 4, 2);
}

_WORD *from_444_to_y416<4,2,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 4, 2);
}

_WORD *from_444_to_y416<2,4,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 4);
}

_WORD *from_444_to_y416<2,4,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 4);
}

_WORD *from_444_to_y416<2,2,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 2);
}

_WORD *from_444_to_y416<2,2,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 2);
}

_WORD *from_444_to_y416<2,1,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 1);
}

_WORD *from_444_to_y416<2,1,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 2, 1);
}

_WORD *from_444_to_y416<1,2,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 2);
}

_WORD *from_444_to_y416<1,2,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 2);
}

_WORD *from_444_to_y416<1,1,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 1);
}

_WORD *from_444_to_y416<1,1,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(_WORD *a1, uint64_t a2, int a3, int a4, _WORD *a5, int a6)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(a1, a2, a3, a4, a5, a6, 1, 1);
}

int32x4_t *from_444_to_y416<8,8,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(a1, a2, a3, a4, 8u);
}

int32x4_t *from_444_to_y416<8,8,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(a1, a2, a3, a4, 8u);
}

int32x4_t *from_444_to_y416<8,4,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(a1, a2, a3, a4, 4u);
}

int32x4_t *from_444_to_y416<8,4,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(int32x4_t *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(a1, a2, a3, a4, 4u);
}

__int16 *from_444_to_y416<4,8,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 4u, 8);
}

__int16 *from_444_to_y416<4,8,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 4u, 8);
}

__int16 *from_444_to_y416<4,4,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 4u, 4);
}

__int16 *from_444_to_y416<4,4,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 4u, 4);
}

__int16 *from_444_to_y416<4,2,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 4u, 2);
}

__int16 *from_444_to_y416<4,2,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 4u, 2);
}

__int16 *from_444_to_y416<2,4,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2u, 4);
}

__int16 *from_444_to_y416<2,4,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2u, 4);
}

__int16 *from_444_to_y416<2,2,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2u, 2);
}

__int16 *from_444_to_y416<2,2,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2u, 2);
}

__int16 *from_444_to_y416<2,1,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2u, 1);
}

__int16 *from_444_to_y416<2,1,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 2u, 1);
}

__int16 *from_444_to_y416<1,2,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1u, 2);
}

__int16 *from_444_to_y416<1,2,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1u, 2);
}

__int16 *from_444_to_y416<1,1,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1u, 1);
}

__int16 *from_444_to_y416<1,1,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(__int16 *a1, int16x8_t *a2, int a3, int a4)
{
  return from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(a1, a2, a3, a4, 1u, 1);
}

uint64_t from_444_to_r4fl<8,8,(AlphaOutputMethod)1,false>(uint64_t result, int16x8_t *a2, int a3, int a4, int32x4_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v111 = a2 + 8;
    int16x8_t v112 = a2 + 32;
    int32x4_t v113 = a2 + 40;
    int32x4_t v114 = a2 + 64;
    int64x2_t v115 = a2 + 72;
    int v117 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0xF000F000F000F000;
  v8.i64[1] = 0xF000F000F000F000;
  int16x8_t v9 = vdupq_n_s16(0xFE0u);
  v10.i64[0] = 0xE000E000E000E00;
  v10.i64[1] = 0xE000E000E000E00;
  v11.i64[0] = 0x1000100010001000;
  v11.i64[1] = 0x1000100010001000;
  float32x4_t v12 = (float32x4_t)vdupq_n_s32(0x39008081u);
  do
  {
    int16x8_t v13 = a2 + 1;
    int16x8_t v14 = vaddq_s16(vminq_s16(vmaxq_s16(*a2, v8), v9), v10);
    int16x8_t v15 = (int32x4_t *)((char *)a5 + 8 * a6);
    int16x8_t v16 = vaddq_s16(vminq_s16(vmaxq_s16(a2[32], v8), v9), v11);
    int16x8_t v17 = vaddq_s16(vminq_s16(vmaxq_s16(a2[40], v8), v9), v11);
    int16x8_t v18 = vcltzq_s16(v14);
    int32x4_t v19 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v14, v18)), v12);
    int32x4_t v20 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v16, (int16x8_t)0)), v12);
    int32x4_t v21 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v16, (int16x8_t)0)), v12);
    int32x4_t v22 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v14, v18)), v12);
    int32x4_t v23 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v17, (int16x8_t)0)), v12);
    int32x4_t v24 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v17, (int16x8_t)0)), v12);
    int32x4_t v25 = a5[1];
    int64x2_t v26 = (int64x2_t)vzip1q_s32(*a5, v19);
    int64x2_t v27 = (int64x2_t)vzip2q_s32(*a5, v19);
    int64x2_t v28 = (int64x2_t)vzip1q_s32(v20, v23);
    int64x2_t v29 = (int64x2_t)vzip2q_s32(v20, v23);
    int64x2_t v30 = (int64x2_t)vzip1q_s32(v25, v22);
    int64x2_t v31 = (int64x2_t)vzip1q_s32(v21, v24);
    int64x2_t v32 = (int64x2_t)vzip2q_s32(v25, v22);
    int64x2_t v33 = (int64x2_t)vzip2q_s32(v21, v24);
    int64x2_t v34 = vzip2q_s64(v26, v28);
    v26.i64[1] = v28.i64[0];
    *(int64x2_t *)int8x8_t result = v26;
    *(int64x2_t *)(result + 16) = v34;
    int64x2_t v35 = vzip2q_s64(v27, v29);
    v27.i64[1] = v29.i64[0];
    *(int64x2_t *)(result + 32) = v27;
    *(int64x2_t *)(result + 48) = v35;
    int64x2_t v36 = vzip2q_s64(v30, v31);
    v30.i64[1] = v31.i64[0];
    *(int64x2_t *)(result + 64) = v30;
    *(int64x2_t *)(result + 80) = v36;
    int64x2_t v37 = vzip2q_s64(v32, v33);
    v32.i64[1] = v33.i64[0];
    *(int64x2_t *)(result + 96) = v32;
    *(int64x2_t *)(result + 112) = v37;
    int16x8_t v38 = vaddq_s16(vminq_s16(vmaxq_s16(a2[8], v8), v9), v10);
    int16x8_t v39 = (int64x2_t *)(result + 8 * a3);
    int16x8_t v40 = vaddq_s16(vminq_s16(vmaxq_s16(a2[64], v8), v9), v11);
    int16x8_t v41 = vaddq_s16(vminq_s16(vmaxq_s16(a2[72], v8), v9), v11);
    int16x8_t v42 = vcltzq_s16(v38);
    int32x4_t v43 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v38, v42)), v12);
    int32x4_t v44 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v40, (int16x8_t)0)), v12);
    int32x4_t v45 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v40, (int16x8_t)0)), v12);
    int32x4_t v46 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v38, v42)), v12);
    int32x4_t v47 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v41, (int16x8_t)0)), v12);
    int32x4_t v48 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v41, (int16x8_t)0)), v12);
    int32x4_t v49 = a5[2];
    int32x4_t v50 = a5[3];
    int64x2_t v51 = (int64x2_t)vzip1q_s32(v49, v43);
    int64x2_t v52 = (int64x2_t)vzip2q_s32(v49, v43);
    int64x2_t v53 = (int64x2_t)vzip1q_s32(v44, v47);
    int64x2_t v54 = (int64x2_t)vzip2q_s32(v44, v47);
    int64x2_t v55 = (int64x2_t)vzip1q_s32(v50, v46);
    int64x2_t v56 = (int64x2_t)vzip1q_s32(v45, v48);
    int64x2_t v57 = (int64x2_t)vzip2q_s32(v50, v46);
    int64x2_t v58 = (int64x2_t)vzip2q_s32(v45, v48);
    int64x2_t v59 = vzip2q_s64(v51, v53);
    v51.i64[1] = v53.i64[0];
    *(int64x2_t *)(result + 128) = v51;
    *(int64x2_t *)(result + 144) = v59;
    int64x2_t v60 = vzip2q_s64(v52, v54);
    v52.i64[1] = v54.i64[0];
    *(int64x2_t *)(result + 160) = v52;
    *(int64x2_t *)(result + 176) = v60;
    int64x2_t v61 = vzip2q_s64(v55, v56);
    v55.i64[1] = v56.i64[0];
    *(int64x2_t *)(result + 192) = v55;
    *(int64x2_t *)(result + 208) = v61;
    int64x2_t v62 = vzip2q_s64(v57, v58);
    v57.i64[1] = v58.i64[0];
    *(int64x2_t *)(result + 224) = v57;
    *(int64x2_t *)(result + 240) = v62;
    int16x8_t v63 = vaddq_s16(vminq_s16(vmaxq_s16(a2[16], v8), v9), v10);
    a5 = (int32x4_t *)((char *)a5 + a6);
    int16x8_t v64 = vaddq_s16(vminq_s16(vmaxq_s16(a2[48], v8), v9), v11);
    int16x8_t v65 = vaddq_s16(vminq_s16(vmaxq_s16(a2[56], v8), v9), v11);
    int16x8_t v66 = vcltzq_s16(v63);
    int32x4_t v67 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v63, v66)), v12);
    int32x4_t v68 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v64, (int16x8_t)0)), v12);
    int32x4_t v69 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v64, (int16x8_t)0)), v12);
    int32x4_t v70 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v63, v66)), v12);
    int32x4_t v71 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v65, (int16x8_t)0)), v12);
    int32x4_t v72 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v65, (int16x8_t)0)), v12);
    int32x4_t v73 = v15[1];
    int64x2_t v74 = (int64x2_t)vzip1q_s32(*v15, v67);
    int64x2_t v75 = (int64x2_t)vzip2q_s32(*v15, v67);
    int64x2_t v76 = (int64x2_t)vzip1q_s32(v68, v71);
    int64x2_t v77 = (int64x2_t)vzip2q_s32(v68, v71);
    int64x2_t v78 = (int64x2_t)vzip1q_s32(v73, v70);
    int64x2_t v79 = (int64x2_t)vzip1q_s32(v69, v72);
    int64x2_t v80 = (int64x2_t)vzip2q_s32(v73, v70);
    int64x2_t v81 = (int64x2_t)vzip2q_s32(v69, v72);
    int64x2_t v82 = vzip2q_s64(v74, v76);
    v74.i64[1] = v76.i64[0];
    *int16x8_t v39 = v74;
    v39[1] = v82;
    int64x2_t v83 = vzip2q_s64(v75, v77);
    v75.i64[1] = v77.i64[0];
    v39[2] = v75;
    v39[3] = v83;
    int64x2_t v84 = vzip2q_s64(v78, v79);
    v78.i64[1] = v79.i64[0];
    v39[4] = v78;
    v39[5] = v84;
    int64x2_t v85 = vzip2q_s64(v80, v81);
    v80.i64[1] = v81.i64[0];
    v39[6] = v80;
    v39[7] = v85;
    int16x8_t v86 = vaddq_s16(vminq_s16(vmaxq_s16(a2[24], v8), v9), v10);
    result += a3;
    int16x8_t v87 = vaddq_s16(vminq_s16(vmaxq_s16(a2[80], v8), v9), v11);
    int16x8_t v88 = vaddq_s16(vminq_s16(vmaxq_s16(a2[88], v8), v9), v11);
    int16x8_t v89 = vcltzq_s16(v86);
    int32x4_t v90 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v86, v89)), v12);
    int32x4_t v91 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v87, (int16x8_t)0)), v12);
    int32x4_t v92 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v87, (int16x8_t)0)), v12);
    int32x4_t v93 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v86, v89)), v12);
    int32x4_t v94 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v88, (int16x8_t)0)), v12);
    int32x4_t v95 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v88, (int16x8_t)0)), v12);
    int32x4_t v96 = v15[2];
    int32x4_t v97 = v15[3];
    int64x2_t v98 = (int64x2_t)vzip1q_s32(v96, v90);
    int64x2_t v99 = (int64x2_t)vzip2q_s32(v96, v90);
    int64x2_t v100 = (int64x2_t)vzip1q_s32(v91, v94);
    int64x2_t v101 = (int64x2_t)vzip2q_s32(v91, v94);
    int64x2_t v102 = (int64x2_t)vzip1q_s32(v97, v93);
    int64x2_t v103 = (int64x2_t)vzip1q_s32(v92, v95);
    int64x2_t v104 = (int64x2_t)vzip2q_s32(v97, v93);
    int64x2_t v105 = (int64x2_t)vzip2q_s32(v92, v95);
    int64x2_t v106 = vzip2q_s64(v98, v100);
    v98.i64[1] = v100.i64[0];
    v39[8] = v98;
    v39[9] = v106;
    int64x2_t v107 = vzip2q_s64(v99, v101);
    v99.i64[1] = v101.i64[0];
    v39[10] = v99;
    v39[11] = v107;
    int64x2_t v108 = vzip2q_s64(v102, v103);
    v102.i64[1] = v103.i64[0];
    v39[12] = v102;
    v39[13] = v108;
    int64x2_t v109 = vzip2q_s64(v104, v105);
    v104.i64[1] = v105.i64[0];
    v39[14] = v104;
    v39[15] = v109;
    int v110 = v7 - 1;
    LODWORD(v39) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v39 > 1);
  int16x8_t v111 = v13 + 8;
  int16x8_t v112 = v13 + 32;
  int32x4_t v113 = v13 + 40;
  int32x4_t v114 = v13 + 64;
  int64x2_t v115 = v13 + 72;
  if (a4 <= 8) {
    int v116 = 8;
  }
  else {
    int v116 = a4;
  }
  int v117 = v110 - v116;
  a2 = v13;
  if (v117 >= 1)
  {
LABEL_13:
    unsigned int v118 = v117 + 1;
    int8x16_t v119 = a5 + 2;
    int64x2_t v120 = (int64x2_t *)(result + 128);
    v121.i64[0] = 0xF000F000F000F000;
    v121.i64[1] = 0xF000F000F000F000;
    int16x8_t v122 = vdupq_n_s16(0xFE0u);
    v123.i64[0] = 0xE000E000E000E00;
    v123.i64[1] = 0xE000E000E000E00;
    v124.i64[0] = 0x1000100010001000;
    v124.i64[1] = 0x1000100010001000;
    int8x8_t result = 956334209;
    float32x4_t v125 = (float32x4_t)vdupq_n_s32(0x39008081u);
    do
    {
      int16x8_t v126 = *a2++;
      int16x8_t v127 = vminq_s16(vmaxq_s16(v126, v121), v122);
      int16x8_t v128 = *v112++;
      int16x8_t v129 = vminq_s16(vmaxq_s16(v128, v121), v122);
      int16x8_t v130 = *v113++;
      int16x8_t v131 = vaddq_s16(v127, v123);
      int16x8_t v132 = vaddq_s16(v129, v124);
      int16x8_t v133 = vaddq_s16(vminq_s16(vmaxq_s16(v130, v121), v122), v124);
      int16x8_t v134 = vcltzq_s16(v131);
      int32x4_t v135 = (int32x4_t)vzip1q_s16(v131, v134);
      int32x4_t v136 = (int32x4_t)vzip2q_s16(v131, v134);
      int32x4_t v137 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v135), v125);
      int32x4_t v138 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v132, (int16x8_t)0)), v125);
      int32x4_t v139 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v132, (int16x8_t)0)), v125);
      int32x4_t v140 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v133, (int16x8_t)0)), v125);
      int32x4_t v141 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v136), v125);
      int32x4_t v142 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v133, (int16x8_t)0)), v125);
      int32x4_t v143 = v119[-2];
      int32x4_t v144 = v119[-1];
      int64x2_t v145 = (int64x2_t)vzip1q_s32(v143, v137);
      int64x2_t v146 = (int64x2_t)vzip2q_s32(v143, v137);
      int64x2_t v147 = (int64x2_t)vzip1q_s32(v138, v140);
      int64x2_t v148 = (int64x2_t)vzip2q_s32(v138, v140);
      int64x2_t v149 = (int64x2_t)vzip1q_s32(v139, v142);
      int64x2_t v150 = (int64x2_t)vzip2q_s32(v139, v142);
      int64x2_t v151 = (int64x2_t)vzip1q_s32(v144, v141);
      int64x2_t v152 = (int64x2_t)vzip2q_s32(v144, v141);
      int64x2_t v153 = vzip2q_s64(v145, v147);
      v145.i64[1] = v147.i64[0];
      v120[-8] = v145;
      v120[-7] = v153;
      int64x2_t v154 = vzip2q_s64(v146, v148);
      v146.i64[1] = v148.i64[0];
      v120[-6] = v146;
      v120[-5] = v154;
      int64x2_t v155 = vzip2q_s64(v151, v149);
      v151.i64[1] = v149.i64[0];
      v120[-4] = v151;
      v120[-3] = v155;
      int64x2_t v156 = vzip2q_s64(v152, v150);
      v152.i64[1] = v150.i64[0];
      v120[-2] = v152;
      v120[-1] = v156;
      int16x8_t v157 = *v111++;
      int16x8_t v158 = vmaxq_s16(v157, v121);
      int16x8_t v159 = *v114++;
      int16x8_t v160 = vminq_s16(vmaxq_s16(v159, v121), v122);
      int16x8_t v161 = *v115++;
      int16x8_t v162 = vaddq_s16(vminq_s16(v158, v122), v123);
      int16x8_t v163 = vaddq_s16(v160, v124);
      int16x8_t v164 = vaddq_s16(vminq_s16(vmaxq_s16(v161, v121), v122), v124);
      int16x8_t v165 = vcltzq_s16(v162);
      int32x4_t v166 = (int32x4_t)vzip1q_s16(v162, v165);
      int32x4_t v167 = (int32x4_t)vzip2q_s16(v162, v165);
      int32x4_t v168 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v163, (int16x8_t)0)), v125);
      int32x4_t v169 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v163, (int16x8_t)0)), v125);
      int32x4_t v170 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v166), v125);
      int32x4_t v171 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v164, (int16x8_t)0)), v125);
      int32x4_t v172 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v164, (int16x8_t)0)), v125);
      int32x4_t v173 = v119[1];
      int32x4_t v174 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v167), v125);
      int64x2_t v175 = (int64x2_t)vzip1q_s32(*v119, v170);
      int64x2_t v176 = (int64x2_t)vzip2q_s32(*v119, v170);
      int64x2_t v177 = (int64x2_t)vzip1q_s32(v168, v171);
      int64x2_t v178 = (int64x2_t)vzip2q_s32(v168, v171);
      int64x2_t v179 = (int64x2_t)vzip1q_s32(v173, v174);
      int64x2_t v180 = (int64x2_t)vzip2q_s32(v173, v174);
      int64x2_t v181 = (int64x2_t)vzip1q_s32(v169, v172);
      int64x2_t v182 = (int64x2_t)vzip2q_s32(v169, v172);
      int64x2_t v183 = vzip2q_s64(v175, v177);
      v175.i64[1] = v177.i64[0];
      int64x2_t v184 = vzip2q_s64(v176, v178);
      v176.i64[1] = v178.i64[0];
      *int64x2_t v120 = v175;
      v120[1] = v183;
      int64x2_t v185 = vzip2q_s64(v179, v181);
      v179.i64[1] = v181.i64[0];
      v120[2] = v176;
      v120[3] = v184;
      int64x2_t v186 = vzip2q_s64(v180, v182);
      v180.i64[1] = v182.i64[0];
      v120[4] = v179;
      v120[5] = v185;
      v120[6] = v180;
      v120[7] = v186;
      --v118;
      int8x16_t v119 = (int32x4_t *)((char *)v119 + a6);
      int64x2_t v120 = (int64x2_t *)((char *)v120 + a3);
    }
    while (v118 > 1);
  }
  return result;
}

uint64_t from_444_to_r4fl<8,8,(AlphaOutputMethod)1,true>(uint64_t result, int16x8_t *a2, int a3, int a4, int32x4_t *a5, unsigned int a6)
{
  if (a4 <= 8) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - 8;
  }
  if (!v6)
  {
    int16x8_t v111 = a2 + 8;
    int16x8_t v112 = a2 + 32;
    int32x4_t v113 = a2 + 40;
    int32x4_t v114 = a2 + 64;
    int64x2_t v115 = a2 + 72;
    int v117 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v7 = a4 + 8;
  v8.i64[0] = 0xF000F000F000F000;
  v8.i64[1] = 0xF000F000F000F000;
  int16x8_t v9 = vdupq_n_s16(0xFE0u);
  v10.i64[0] = 0xE000E000E000E00;
  v10.i64[1] = 0xE000E000E000E00;
  v11.i64[0] = 0x1000100010001000;
  v11.i64[1] = 0x1000100010001000;
  float32x4_t v12 = (float32x4_t)vdupq_n_s32(0x39008081u);
  do
  {
    int16x8_t v13 = a2 + 1;
    int16x8_t v14 = vaddq_s16(vminq_s16(vmaxq_s16(*a2, v8), v9), v10);
    int16x8_t v15 = (int32x4_t *)((char *)a5 + 8 * a6);
    int16x8_t v16 = vaddq_s16(vminq_s16(vmaxq_s16(a2[32], v8), v9), v11);
    int16x8_t v17 = vaddq_s16(vminq_s16(vmaxq_s16(a2[40], v8), v9), v11);
    int16x8_t v18 = vcltzq_s16(v14);
    int32x4_t v19 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v14, v18)), v12);
    int32x4_t v20 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v16, (int16x8_t)0)), v12);
    int32x4_t v21 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v16, (int16x8_t)0)), v12);
    int32x4_t v22 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v14, v18)), v12);
    int32x4_t v23 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v17, (int16x8_t)0)), v12);
    int32x4_t v24 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v17, (int16x8_t)0)), v12);
    int32x4_t v25 = a5[1];
    int64x2_t v26 = (int64x2_t)vzip1q_s32(*a5, v19);
    int64x2_t v27 = (int64x2_t)vzip2q_s32(*a5, v19);
    int64x2_t v28 = (int64x2_t)vzip1q_s32(v20, v23);
    int64x2_t v29 = (int64x2_t)vzip2q_s32(v20, v23);
    int64x2_t v30 = (int64x2_t)vzip1q_s32(v25, v22);
    int64x2_t v31 = (int64x2_t)vzip1q_s32(v21, v24);
    int64x2_t v32 = (int64x2_t)vzip2q_s32(v25, v22);
    int64x2_t v33 = (int64x2_t)vzip2q_s32(v21, v24);
    int64x2_t v34 = vzip2q_s64(v26, v28);
    v26.i64[1] = v28.i64[0];
    *(int64x2_t *)int8x8_t result = v26;
    *(int64x2_t *)(result + 16) = v34;
    int64x2_t v35 = vzip2q_s64(v27, v29);
    v27.i64[1] = v29.i64[0];
    *(int64x2_t *)(result + 32) = v27;
    *(int64x2_t *)(result + 48) = v35;
    int64x2_t v36 = vzip2q_s64(v30, v31);
    v30.i64[1] = v31.i64[0];
    *(int64x2_t *)(result + 64) = v30;
    *(int64x2_t *)(result + 80) = v36;
    int64x2_t v37 = vzip2q_s64(v32, v33);
    v32.i64[1] = v33.i64[0];
    *(int64x2_t *)(result + 96) = v32;
    *(int64x2_t *)(result + 112) = v37;
    int16x8_t v38 = vaddq_s16(vminq_s16(vmaxq_s16(a2[8], v8), v9), v10);
    int16x8_t v39 = (int64x2_t *)(result + 8 * a3);
    int16x8_t v40 = vaddq_s16(vminq_s16(vmaxq_s16(a2[64], v8), v9), v11);
    int16x8_t v41 = vaddq_s16(vminq_s16(vmaxq_s16(a2[72], v8), v9), v11);
    int16x8_t v42 = vcltzq_s16(v38);
    int32x4_t v43 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v38, v42)), v12);
    int32x4_t v44 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v40, (int16x8_t)0)), v12);
    int32x4_t v45 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v40, (int16x8_t)0)), v12);
    int32x4_t v46 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v38, v42)), v12);
    int32x4_t v47 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v41, (int16x8_t)0)), v12);
    int32x4_t v48 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v41, (int16x8_t)0)), v12);
    int32x4_t v49 = a5[2];
    int32x4_t v50 = a5[3];
    int64x2_t v51 = (int64x2_t)vzip1q_s32(v49, v43);
    int64x2_t v52 = (int64x2_t)vzip2q_s32(v49, v43);
    int64x2_t v53 = (int64x2_t)vzip1q_s32(v44, v47);
    int64x2_t v54 = (int64x2_t)vzip2q_s32(v44, v47);
    int64x2_t v55 = (int64x2_t)vzip1q_s32(v50, v46);
    int64x2_t v56 = (int64x2_t)vzip1q_s32(v45, v48);
    int64x2_t v57 = (int64x2_t)vzip2q_s32(v50, v46);
    int64x2_t v58 = (int64x2_t)vzip2q_s32(v45, v48);
    int64x2_t v59 = vzip2q_s64(v51, v53);
    v51.i64[1] = v53.i64[0];
    *(int64x2_t *)(result + 128) = v51;
    *(int64x2_t *)(result + 144) = v59;
    int64x2_t v60 = vzip2q_s64(v52, v54);
    v52.i64[1] = v54.i64[0];
    *(int64x2_t *)(result + 160) = v52;
    *(int64x2_t *)(result + 176) = v60;
    int64x2_t v61 = vzip2q_s64(v55, v56);
    v55.i64[1] = v56.i64[0];
    *(int64x2_t *)(result + 192) = v55;
    *(int64x2_t *)(result + 208) = v61;
    int64x2_t v62 = vzip2q_s64(v57, v58);
    v57.i64[1] = v58.i64[0];
    *(int64x2_t *)(result + 224) = v57;
    *(int64x2_t *)(result + 240) = v62;
    int16x8_t v63 = vaddq_s16(vminq_s16(vmaxq_s16(a2[16], v8), v9), v10);
    a5 = (int32x4_t *)((char *)a5 + a6);
    int16x8_t v64 = vaddq_s16(vminq_s16(vmaxq_s16(a2[48], v8), v9), v11);
    int16x8_t v65 = vaddq_s16(vminq_s16(vmaxq_s16(a2[56], v8), v9), v11);
    int16x8_t v66 = vcltzq_s16(v63);
    int32x4_t v67 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v63, v66)), v12);
    int32x4_t v68 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v64, (int16x8_t)0)), v12);
    int32x4_t v69 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v64, (int16x8_t)0)), v12);
    int32x4_t v70 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v63, v66)), v12);
    int32x4_t v71 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v65, (int16x8_t)0)), v12);
    int32x4_t v72 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v65, (int16x8_t)0)), v12);
    int32x4_t v73 = v15[1];
    int64x2_t v74 = (int64x2_t)vzip1q_s32(*v15, v67);
    int64x2_t v75 = (int64x2_t)vzip2q_s32(*v15, v67);
    int64x2_t v76 = (int64x2_t)vzip1q_s32(v68, v71);
    int64x2_t v77 = (int64x2_t)vzip2q_s32(v68, v71);
    int64x2_t v78 = (int64x2_t)vzip1q_s32(v73, v70);
    int64x2_t v79 = (int64x2_t)vzip1q_s32(v69, v72);
    int64x2_t v80 = (int64x2_t)vzip2q_s32(v73, v70);
    int64x2_t v81 = (int64x2_t)vzip2q_s32(v69, v72);
    int64x2_t v82 = vzip2q_s64(v74, v76);
    v74.i64[1] = v76.i64[0];
    *int16x8_t v39 = v74;
    v39[1] = v82;
    int64x2_t v83 = vzip2q_s64(v75, v77);
    v75.i64[1] = v77.i64[0];
    v39[2] = v75;
    v39[3] = v83;
    int64x2_t v84 = vzip2q_s64(v78, v79);
    v78.i64[1] = v79.i64[0];
    v39[4] = v78;
    v39[5] = v84;
    int64x2_t v85 = vzip2q_s64(v80, v81);
    v80.i64[1] = v81.i64[0];
    v39[6] = v80;
    v39[7] = v85;
    int16x8_t v86 = vaddq_s16(vminq_s16(vmaxq_s16(a2[24], v8), v9), v10);
    result += a3;
    int16x8_t v87 = vaddq_s16(vminq_s16(vmaxq_s16(a2[80], v8), v9), v11);
    int16x8_t v88 = vaddq_s16(vminq_s16(vmaxq_s16(a2[88], v8), v9), v11);
    int16x8_t v89 = vcltzq_s16(v86);
    int32x4_t v90 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v86, v89)), v12);
    int32x4_t v91 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v87, (int16x8_t)0)), v12);
    int32x4_t v92 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v87, (int16x8_t)0)), v12);
    int32x4_t v93 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v86, v89)), v12);
    int32x4_t v94 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v88, (int16x8_t)0)), v12);
    int32x4_t v95 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v88, (int16x8_t)0)), v12);
    int32x4_t v96 = v15[2];
    int32x4_t v97 = v15[3];
    int64x2_t v98 = (int64x2_t)vzip1q_s32(v96, v90);
    int64x2_t v99 = (int64x2_t)vzip2q_s32(v96, v90);
    int64x2_t v100 = (int64x2_t)vzip1q_s32(v91, v94);
    int64x2_t v101 = (int64x2_t)vzip2q_s32(v91, v94);
    int64x2_t v102 = (int64x2_t)vzip1q_s32(v97, v93);
    int64x2_t v103 = (int64x2_t)vzip1q_s32(v92, v95);
    int64x2_t v104 = (int64x2_t)vzip2q_s32(v97, v93);
    int64x2_t v105 = (int64x2_t)vzip2q_s32(v92, v95);
    int64x2_t v106 = vzip2q_s64(v98, v100);
    v98.i64[1] = v100.i64[0];
    v39[8] = v98;
    v39[9] = v106;
    int64x2_t v107 = vzip2q_s64(v99, v101);
    v99.i64[1] = v101.i64[0];
    v39[10] = v99;
    v39[11] = v107;
    int64x2_t v108 = vzip2q_s64(v102, v103);
    v102.i64[1] = v103.i64[0];
    v39[12] = v102;
    v39[13] = v108;
    int64x2_t v109 = vzip2q_s64(v104, v105);
    v104.i64[1] = v105.i64[0];
    v39[14] = v104;
    v39[15] = v109;
    int v110 = v7 - 1;
    LODWORD(v39) = v7 - 16;
    --v7;
    ++a2;
  }
  while ((int)v39 > 1);
  int16x8_t v111 = v13 + 8;
  int16x8_t v112 = v13 + 32;
  int32x4_t v113 = v13 + 40;
  int32x4_t v114 = v13 + 64;
  int64x2_t v115 = v13 + 72;
  if (a4 <= 8) {
    int v116 = 8;
  }
  else {
    int v116 = a4;
  }
  int v117 = v110 - v116;
  a2 = v13;
  if (v117 >= 1)
  {
LABEL_13:
    unsigned int v118 = v117 + 1;
    int8x16_t v119 = a5 + 2;
    int64x2_t v120 = (int64x2_t *)(result + 128);
    v121.i64[0] = 0xF000F000F000F000;
    v121.i64[1] = 0xF000F000F000F000;
    int16x8_t v122 = vdupq_n_s16(0xFE0u);
    v123.i64[0] = 0xE000E000E000E00;
    v123.i64[1] = 0xE000E000E000E00;
    v124.i64[0] = 0x1000100010001000;
    v124.i64[1] = 0x1000100010001000;
    int8x8_t result = 956334209;
    float32x4_t v125 = (float32x4_t)vdupq_n_s32(0x39008081u);
    do
    {
      int16x8_t v126 = *a2++;
      int16x8_t v127 = vminq_s16(vmaxq_s16(v126, v121), v122);
      int16x8_t v128 = *v112++;
      int16x8_t v129 = vminq_s16(vmaxq_s16(v128, v121), v122);
      int16x8_t v130 = *v113++;
      int16x8_t v131 = vaddq_s16(v127, v123);
      int16x8_t v132 = vaddq_s16(v129, v124);
      int16x8_t v133 = vaddq_s16(vminq_s16(vmaxq_s16(v130, v121), v122), v124);
      int16x8_t v134 = vcltzq_s16(v131);
      int32x4_t v135 = (int32x4_t)vzip1q_s16(v131, v134);
      int32x4_t v136 = (int32x4_t)vzip2q_s16(v131, v134);
      int32x4_t v137 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v135), v125);
      int32x4_t v138 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v132, (int16x8_t)0)), v125);
      int32x4_t v139 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v132, (int16x8_t)0)), v125);
      int32x4_t v140 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v133, (int16x8_t)0)), v125);
      int32x4_t v141 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v136), v125);
      int32x4_t v142 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v133, (int16x8_t)0)), v125);
      int32x4_t v143 = v119[-2];
      int32x4_t v144 = v119[-1];
      int64x2_t v145 = (int64x2_t)vzip1q_s32(v143, v137);
      int64x2_t v146 = (int64x2_t)vzip2q_s32(v143, v137);
      int64x2_t v147 = (int64x2_t)vzip1q_s32(v138, v140);
      int64x2_t v148 = (int64x2_t)vzip2q_s32(v138, v140);
      int64x2_t v149 = (int64x2_t)vzip1q_s32(v139, v142);
      int64x2_t v150 = (int64x2_t)vzip2q_s32(v139, v142);
      int64x2_t v151 = (int64x2_t)vzip1q_s32(v144, v141);
      int64x2_t v152 = (int64x2_t)vzip2q_s32(v144, v141);
      int64x2_t v153 = vzip2q_s64(v145, v147);
      v145.i64[1] = v147.i64[0];
      v120[-8] = v145;
      v120[-7] = v153;
      int64x2_t v154 = vzip2q_s64(v146, v148);
      v146.i64[1] = v148.i64[0];
      v120[-6] = v146;
      v120[-5] = v154;
      int64x2_t v155 = vzip2q_s64(v151, v149);
      v151.i64[1] = v149.i64[0];
      v120[-4] = v151;
      v120[-3] = v155;
      int64x2_t v156 = vzip2q_s64(v152, v150);
      v152.i64[1] = v150.i64[0];
      v120[-2] = v152;
      v120[-1] = v156;
      int16x8_t v157 = *v111++;
      int16x8_t v158 = vmaxq_s16(v157, v121);
      int16x8_t v159 = *v114++;
      int16x8_t v160 = vminq_s16(vmaxq_s16(v159, v121), v122);
      int16x8_t v161 = *v115++;
      int16x8_t v162 = vaddq_s16(vminq_s16(v158, v122), v123);
      int16x8_t v163 = vaddq_s16(v160, v124);
      int16x8_t v164 = vaddq_s16(vminq_s16(vmaxq_s16(v161, v121), v122), v124);
      int16x8_t v165 = vcltzq_s16(v162);
      int32x4_t v166 = (int32x4_t)vzip1q_s16(v162, v165);
      int32x4_t v167 = (int32x4_t)vzip2q_s16(v162, v165);
      int32x4_t v168 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v163, (int16x8_t)0)), v125);
      int32x4_t v169 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v163, (int16x8_t)0)), v125);
      int32x4_t v170 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v166), v125);
      int32x4_t v171 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v164, (int16x8_t)0)), v125);
      int32x4_t v172 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v164, (int16x8_t)0)), v125);
      int32x4_t v173 = v119[1];
      int32x4_t v174 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v167), v125);
      int64x2_t v175 = (int64x2_t)vzip1q_s32(*v119, v170);
      int64x2_t v176 = (int64x2_t)vzip2q_s32(*v119, v170);
      int64x2_t v177 = (int64x2_t)vzip1q_s32(v168, v171);
      int64x2_t v178 = (int64x2_t)vzip2q_s32(v168, v171);
      int64x2_t v179 = (int64x2_t)vzip1q_s32(v173, v174);
      int64x2_t v180 = (int64x2_t)vzip2q_s32(v173, v174);
      int64x2_t v181 = (int64x2_t)vzip1q_s32(v169, v172);
      int64x2_t v182 = (int64x2_t)vzip2q_s32(v169, v172);
      int64x2_t v183 = vzip2q_s64(v175, v177);
      v175.i64[1] = v177.i64[0];
      int64x2_t v184 = vzip2q_s64(v176, v178);
      v176.i64[1] = v178.i64[0];
      *int64x2_t v120 = v175;
      v120[1] = v183;
      int64x2_t v185 = vzip2q_s64(v179, v181);
      v179.i64[1] = v181.i64[0];
      v120[2] = v176;
      v120[3] = v184;
      int64x2_t v186 = vzip2q_s64(v180, v182);
      v180.i64[1] = v182.i64[0];
      v120[4] = v179;
      v120[5] = v185;
      v120[6] = v180;
      v120[7] = v186;
      --v118;
      int8x16_t v119 = (int32x4_t *)((char *)v119 + a6);
      int64x2_t v120 = (int64x2_t *)((char *)v120 + a3);
    }
    while (v118 > 1);
  }
  return result;
}

int64x2_t *from_444_to_r4fl<8,8,(AlphaOutputMethod)2,false>(int64x2_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  __asm { FMOV            V0.4S, #1.0 }
  if (!v4)
  {
    int32x4_t v113 = a2 + 8;
    int32x4_t v114 = a2 + 32;
    int64x2_t v115 = a2 + 40;
    int v116 = a2 + 64;
    int v117 = a2 + 72;
    int v119 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v10 = a4 + 8;
  v11.i64[0] = 0xF000F000F000F000;
  v11.i64[1] = 0xF000F000F000F000;
  int16x8_t v12 = vdupq_n_s16(0xFE0u);
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  v14.i64[0] = 0x1000100010001000;
  v14.i64[1] = 0x1000100010001000;
  float32x4_t v15 = (float32x4_t)vdupq_n_s32(0x39008081u);
  do
  {
    int16x8_t v16 = vaddq_s16(vminq_s16(vmaxq_s16(*a2, v11), v12), v13);
    int16x8_t v17 = vaddq_s16(vminq_s16(vmaxq_s16(a2[32], v11), v12), v14);
    int16x8_t v18 = vaddq_s16(vminq_s16(vmaxq_s16(a2[40], v11), v12), v14);
    int16x8_t v19 = vcltzq_s16(v16);
    int32x4_t v20 = (int32x4_t)vzip1q_s16(v16, v19);
    int32x4_t v21 = (int32x4_t)vzip2q_s16(v16, v19);
    int32x4_t v22 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v20), v15);
    int32x4_t v23 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v17, (int16x8_t)0)), v15);
    int32x4_t v24 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v21), v15);
    int32x4_t v25 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v17, (int16x8_t)0)), v15);
    int32x4_t v26 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v18, (int16x8_t)0)), v15);
    int32x4_t v27 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v18, (int16x8_t)0)), v15);
    int64x2_t v28 = (int64x2_t)vzip1q_s32(_Q0, v22);
    int64x2_t v29 = (int64x2_t)vzip2q_s32(_Q0, v22);
    int64x2_t v30 = (int64x2_t)vzip1q_s32(v23, v26);
    int64x2_t v31 = (int64x2_t)vzip2q_s32(v23, v26);
    int64x2_t v32 = (int64x2_t)vzip1q_s32(_Q0, v24);
    int64x2_t v33 = (int64x2_t)vzip1q_s32(v25, v27);
    int64x2_t v34 = (int64x2_t)vzip2q_s32(_Q0, v24);
    int64x2_t v35 = (int64x2_t)vzip2q_s32(v25, v27);
    int64x2_t v36 = vzip2q_s64(v28, v30);
    v28.i64[1] = v30.i64[0];
    *int8x8_t result = v28;
    result[1] = v36;
    int64x2_t v37 = vzip2q_s64(v29, v31);
    v29.i64[1] = v31.i64[0];
    result[2] = v29;
    result[3] = v37;
    int64x2_t v38 = vzip2q_s64(v32, v33);
    v32.i64[1] = v33.i64[0];
    result[4] = v32;
    result[5] = v38;
    int64x2_t v39 = vzip2q_s64(v34, v35);
    v34.i64[1] = v35.i64[0];
    result[6] = v34;
    result[7] = v39;
    int16x8_t v40 = vaddq_s16(vminq_s16(vmaxq_s16(a2[8], v11), v12), v13);
    int16x8_t v41 = a2 + 1;
    int16x8_t v42 = vaddq_s16(vminq_s16(vmaxq_s16(a2[64], v11), v12), v14);
    int16x8_t v43 = vaddq_s16(vminq_s16(vmaxq_s16(a2[72], v11), v12), v14);
    int16x8_t v44 = vcltzq_s16(v40);
    int32x4_t v45 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v40, v44)), v15);
    int32x4_t v46 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v42, (int16x8_t)0)), v15);
    int32x4_t v47 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v42, (int16x8_t)0)), v15);
    int32x4_t v48 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v40, v44)), v15);
    int32x4_t v49 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v43, (int16x8_t)0)), v15);
    int32x4_t v50 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v43, (int16x8_t)0)), v15);
    int64x2_t v51 = (int64x2_t)vzip1q_s32(_Q0, v45);
    int64x2_t v52 = (int64x2_t)vzip1q_s32(v46, v49);
    int64x2_t v53 = (int64x2_t)vzip2q_s32(_Q0, v45);
    int64x2_t v54 = (int64x2_t)vzip2q_s32(v46, v49);
    int64x2_t v55 = (int64x2_t)vzip1q_s32(_Q0, v48);
    int64x2_t v56 = (int64x2_t)vzip2q_s32(_Q0, v48);
    int64x2_t v57 = (int64x2_t)vzip1q_s32(v47, v50);
    int64x2_t v58 = (int64x2_t)vzip2q_s32(v47, v50);
    int64x2_t v59 = vzip2q_s64(v51, v52);
    v51.i64[1] = v52.i64[0];
    int64x2_t v60 = vzip2q_s64(v53, v54);
    result[8] = v51;
    result[9] = v59;
    v53.i64[1] = v54.i64[0];
    int64x2_t v61 = vzip2q_s64(v55, v57);
    result[10] = v53;
    result[11] = v60;
    v55.i64[1] = v57.i64[0];
    int64x2_t v62 = vzip2q_s64(v56, v58);
    result[12] = v55;
    result[13] = v61;
    v56.i64[1] = v58.i64[0];
    result[14] = v56;
    result[15] = v62;
    int16x8_t v63 = (int64x2_t *)((char *)result + 8 * a3);
    int8x8_t result = (int64x2_t *)((char *)result + a3);
    int16x8_t v64 = vaddq_s16(vminq_s16(vmaxq_s16(a2[16], v11), v12), v13);
    int16x8_t v65 = vaddq_s16(vminq_s16(vmaxq_s16(a2[48], v11), v12), v14);
    int16x8_t v66 = vaddq_s16(vminq_s16(vmaxq_s16(a2[56], v11), v12), v14);
    int16x8_t v67 = vcltzq_s16(v64);
    int32x4_t v68 = (int32x4_t)vzip1q_s16(v64, v67);
    int32x4_t v69 = (int32x4_t)vzip2q_s16(v64, v67);
    int32x4_t v70 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v68), v15);
    int32x4_t v71 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v65, (int16x8_t)0)), v15);
    int32x4_t v72 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v65, (int16x8_t)0)), v15);
    int32x4_t v73 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v66, (int16x8_t)0)), v15);
    int32x4_t v74 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v69), v15);
    int32x4_t v75 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v66, (int16x8_t)0)), v15);
    int64x2_t v76 = (int64x2_t)vzip1q_s32(_Q0, v70);
    int64x2_t v77 = (int64x2_t)vzip1q_s32(v71, v73);
    int64x2_t v78 = (int64x2_t)vzip2q_s32(v71, v73);
    int64x2_t v79 = (int64x2_t)vzip2q_s32(_Q0, v70);
    int64x2_t v80 = (int64x2_t)vzip1q_s32(_Q0, v74);
    int64x2_t v81 = (int64x2_t)vzip2q_s32(_Q0, v74);
    int64x2_t v82 = (int64x2_t)vzip1q_s32(v72, v75);
    int64x2_t v83 = (int64x2_t)vzip2q_s32(v72, v75);
    int64x2_t v84 = vzip2q_s64(v76, v77);
    v76.i64[1] = v77.i64[0];
    int64x2_t v85 = vzip2q_s64(v79, v78);
    *int16x8_t v63 = v76;
    v63[1] = v84;
    v79.i64[1] = v78.i64[0];
    int64x2_t v86 = vzip2q_s64(v80, v82);
    v63[2] = v79;
    v63[3] = v85;
    v80.i64[1] = v82.i64[0];
    int64x2_t v87 = vzip2q_s64(v81, v83);
    v63[4] = v80;
    v63[5] = v86;
    v81.i64[1] = v83.i64[0];
    v63[6] = v81;
    v63[7] = v87;
    int16x8_t v88 = vaddq_s16(vminq_s16(vmaxq_s16(a2[24], v11), v12), v13);
    int16x8_t v89 = vaddq_s16(vminq_s16(vmaxq_s16(a2[80], v11), v12), v14);
    int16x8_t v90 = vaddq_s16(vminq_s16(vmaxq_s16(a2[88], v11), v12), v14);
    int16x8_t v91 = vcltzq_s16(v88);
    int32x4_t v92 = (int32x4_t)vzip1q_s16(v88, v91);
    int32x4_t v93 = (int32x4_t)vzip2q_s16(v88, v91);
    int32x4_t v94 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v92), v15);
    int32x4_t v95 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v89, (int16x8_t)0)), v15);
    int32x4_t v96 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v93), v15);
    int32x4_t v97 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v89, (int16x8_t)0)), v15);
    int32x4_t v98 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v90, (int16x8_t)0)), v15);
    int32x4_t v99 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v90, (int16x8_t)0)), v15);
    int64x2_t v100 = (int64x2_t)vzip1q_s32(_Q0, v94);
    int64x2_t v101 = (int64x2_t)vzip2q_s32(_Q0, v94);
    int64x2_t v102 = (int64x2_t)vzip1q_s32(v95, v98);
    int64x2_t v103 = (int64x2_t)vzip2q_s32(v95, v98);
    int64x2_t v104 = (int64x2_t)vzip1q_s32(_Q0, v96);
    int64x2_t v105 = (int64x2_t)vzip1q_s32(v97, v99);
    int64x2_t v106 = (int64x2_t)vzip2q_s32(_Q0, v96);
    int64x2_t v107 = (int64x2_t)vzip2q_s32(v97, v99);
    int64x2_t v108 = vzip2q_s64(v100, v102);
    v100.i64[1] = v102.i64[0];
    v63[8] = v100;
    v63[9] = v108;
    int64x2_t v109 = vzip2q_s64(v101, v103);
    v101.i64[1] = v103.i64[0];
    v63[10] = v101;
    v63[11] = v109;
    int64x2_t v110 = vzip2q_s64(v104, v105);
    v104.i64[1] = v105.i64[0];
    v63[12] = v104;
    v63[13] = v110;
    int64x2_t v111 = vzip2q_s64(v106, v107);
    v106.i64[1] = v107.i64[0];
    v63[14] = v106;
    v63[15] = v111;
    int v112 = v10 - 1;
    LODWORD(v63) = v10 - 16;
    --v10;
    ++a2;
  }
  while ((int)v63 > 1);
  int32x4_t v113 = v41 + 8;
  int32x4_t v114 = v41 + 32;
  int64x2_t v115 = v41 + 40;
  int v116 = v41 + 64;
  int v117 = v41 + 72;
  if (a4 <= 8) {
    int v118 = 8;
  }
  else {
    int v118 = a4;
  }
  int v119 = v112 - v118;
  a2 = v41;
  if (v119 >= 1)
  {
LABEL_13:
    unsigned int v120 = v119 + 1;
    int16x8_t v121 = result + 8;
    v122.i64[0] = 0xF000F000F000F000;
    v122.i64[1] = 0xF000F000F000F000;
    int16x8_t v123 = vdupq_n_s16(0xFE0u);
    v124.i64[0] = 0xE000E000E000E00;
    v124.i64[1] = 0xE000E000E000E00;
    v125.i64[0] = 0x1000100010001000;
    v125.i64[1] = 0x1000100010001000;
    float32x4_t v126 = (float32x4_t)vdupq_n_s32(0x39008081u);
    do
    {
      int16x8_t v127 = *a2++;
      int16x8_t v128 = vmaxq_s16(v127, v122);
      int16x8_t v129 = *v114++;
      int16x8_t v130 = vmaxq_s16(v129, v122);
      int16x8_t v131 = *v115++;
      int16x8_t v132 = vaddq_s16(vminq_s16(v128, v123), v124);
      int16x8_t v133 = vaddq_s16(vminq_s16(v130, v123), v125);
      int16x8_t v134 = vaddq_s16(vminq_s16(vmaxq_s16(v131, v122), v123), v125);
      int16x8_t v135 = vcltzq_s16(v132);
      int32x4_t v136 = (int32x4_t)vzip1q_s16(v132, v135);
      int32x4_t v137 = (int32x4_t)vzip2q_s16(v132, v135);
      float32x4_t v138 = vcvtq_f32_s32(v136);
      int32x4_t v139 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v133, (int16x8_t)0)), v126);
      int32x4_t v140 = (int32x4_t)vmulq_f32(v138, v126);
      int32x4_t v141 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v133, (int16x8_t)0)), v126);
      int32x4_t v142 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v134, (int16x8_t)0)), v126);
      int32x4_t v143 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v137), v126);
      int32x4_t v144 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v134, (int16x8_t)0)), v126);
      int64x2_t v145 = (int64x2_t)vzip1q_s32(_Q0, v140);
      int64x2_t v146 = (int64x2_t)vzip2q_s32(_Q0, v140);
      int64x2_t v147 = (int64x2_t)vzip1q_s32(v139, v142);
      int64x2_t v148 = (int64x2_t)vzip2q_s32(v139, v142);
      int64x2_t v149 = (int64x2_t)vzip1q_s32(_Q0, v143);
      int64x2_t v150 = (int64x2_t)vzip2q_s32(_Q0, v143);
      int64x2_t v151 = (int64x2_t)vzip1q_s32(v141, v144);
      int64x2_t v152 = vzip2q_s64(v145, v147);
      v145.i64[1] = v147.i64[0];
      int64x2_t v153 = (int64x2_t)vzip2q_s32(v141, v144);
      int64x2_t v154 = vzip2q_s64(v146, v148);
      v146.i64[1] = v148.i64[0];
      v121[-8] = v145;
      v121[-7] = v152;
      int64x2_t v155 = vzip2q_s64(v149, v151);
      v149.i64[1] = v151.i64[0];
      v121[-6] = v146;
      v121[-5] = v154;
      int64x2_t v156 = vzip2q_s64(v150, v153);
      v150.i64[1] = v153.i64[0];
      v121[-4] = v149;
      v121[-3] = v155;
      v121[-2] = v150;
      v121[-1] = v156;
      int16x8_t v157 = *v113++;
      int16x8_t v158 = vmaxq_s16(v157, v122);
      int16x8_t v159 = *v116++;
      int16x8_t v160 = vmaxq_s16(v159, v122);
      int16x8_t v161 = *v117++;
      int16x8_t v162 = vaddq_s16(vminq_s16(v158, v123), v124);
      int16x8_t v163 = vaddq_s16(vminq_s16(v160, v123), v125);
      int16x8_t v164 = vaddq_s16(vminq_s16(vmaxq_s16(v161, v122), v123), v125);
      int16x8_t v165 = vcltzq_s16(v162);
      int32x4_t v166 = (int32x4_t)vzip1q_s16(v162, v165);
      int32x4_t v167 = (int32x4_t)vzip2q_s16(v162, v165);
      float32x4_t v168 = vcvtq_f32_s32(v166);
      int32x4_t v169 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v163, (int16x8_t)0)), v126);
      int32x4_t v170 = (int32x4_t)vmulq_f32(v168, v126);
      int32x4_t v171 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v163, (int16x8_t)0)), v126);
      int32x4_t v172 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v164, (int16x8_t)0)), v126);
      int32x4_t v173 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v167), v126);
      int32x4_t v174 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v164, (int16x8_t)0)), v126);
      int64x2_t v175 = (int64x2_t)vzip1q_s32(_Q0, v170);
      int64x2_t v176 = (int64x2_t)vzip2q_s32(_Q0, v170);
      int64x2_t v177 = (int64x2_t)vzip1q_s32(v169, v172);
      int64x2_t v178 = (int64x2_t)vzip2q_s32(v169, v172);
      int64x2_t v179 = (int64x2_t)vzip1q_s32(_Q0, v173);
      int64x2_t v180 = (int64x2_t)vzip2q_s32(_Q0, v173);
      int64x2_t v181 = (int64x2_t)vzip1q_s32(v171, v174);
      int64x2_t v182 = vzip2q_s64(v175, v177);
      v175.i64[1] = v177.i64[0];
      int64x2_t v183 = (int64x2_t)vzip2q_s32(v171, v174);
      int64x2_t v184 = vzip2q_s64(v176, v178);
      v176.i64[1] = v178.i64[0];
      *int16x8_t v121 = v175;
      v121[1] = v182;
      int64x2_t v185 = vzip2q_s64(v179, v181);
      v179.i64[1] = v181.i64[0];
      v121[2] = v176;
      v121[3] = v184;
      int64x2_t v186 = vzip2q_s64(v180, v183);
      v180.i64[1] = v183.i64[0];
      v121[4] = v179;
      v121[5] = v185;
      v121[6] = v180;
      v121[7] = v186;
      --v120;
      int16x8_t v121 = (int64x2_t *)((char *)v121 + a3);
    }
    while (v120 > 1);
  }
  return result;
}

int64x2_t *from_444_to_r4fl<8,8,(AlphaOutputMethod)2,true>(int64x2_t *result, int16x8_t *a2, int a3, int a4)
{
  if (a4 <= 8) {
    int v4 = 0;
  }
  else {
    int v4 = a4 - 8;
  }
  __asm { FMOV            V0.4S, #1.0 }
  if (!v4)
  {
    int32x4_t v113 = a2 + 8;
    int32x4_t v114 = a2 + 32;
    int64x2_t v115 = a2 + 40;
    int v116 = a2 + 64;
    int v117 = a2 + 72;
    int v119 = a4;
    if (a4 < 1) {
      return result;
    }
    goto LABEL_13;
  }
  int v10 = a4 + 8;
  v11.i64[0] = 0xF000F000F000F000;
  v11.i64[1] = 0xF000F000F000F000;
  int16x8_t v12 = vdupq_n_s16(0xFE0u);
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  v14.i64[0] = 0x1000100010001000;
  v14.i64[1] = 0x1000100010001000;
  float32x4_t v15 = (float32x4_t)vdupq_n_s32(0x39008081u);
  do
  {
    int16x8_t v16 = vaddq_s16(vminq_s16(vmaxq_s16(*a2, v11), v12), v13);
    int16x8_t v17 = vaddq_s16(vminq_s16(vmaxq_s16(a2[32], v11), v12), v14);
    int16x8_t v18 = vaddq_s16(vminq_s16(vmaxq_s16(a2[40], v11), v12), v14);
    int16x8_t v19 = vcltzq_s16(v16);
    int32x4_t v20 = (int32x4_t)vzip1q_s16(v16, v19);
    int32x4_t v21 = (int32x4_t)vzip2q_s16(v16, v19);
    int32x4_t v22 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v20), v15);
    int32x4_t v23 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v17, (int16x8_t)0)), v15);
    int32x4_t v24 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v21), v15);
    int32x4_t v25 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v17, (int16x8_t)0)), v15);
    int32x4_t v26 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v18, (int16x8_t)0)), v15);
    int32x4_t v27 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v18, (int16x8_t)0)), v15);
    int64x2_t v28 = (int64x2_t)vzip1q_s32(_Q0, v22);
    int64x2_t v29 = (int64x2_t)vzip2q_s32(_Q0, v22);
    int64x2_t v30 = (int64x2_t)vzip1q_s32(v23, v26);
    int64x2_t v31 = (int64x2_t)vzip2q_s32(v23, v26);
    int64x2_t v32 = (int64x2_t)vzip1q_s32(_Q0, v24);
    int64x2_t v33 = (int64x2_t)vzip1q_s32(v25, v27);
    int64x2_t v34 = (int64x2_t)vzip2q_s32(_Q0, v24);
    int64x2_t v35 = (int64x2_t)vzip2q_s32(v25, v27);
    int64x2_t v36 = vzip2q_s64(v28, v30);
    v28.i64[1] = v30.i64[0];
    *int8x8_t result = v28;
    result[1] = v36;
    int64x2_t v37 = vzip2q_s64(v29, v31);
    v29.i64[1] = v31.i64[0];
    result[2] = v29;
    result[3] = v37;
    int64x2_t v38 = vzip2q_s64(v32, v33);
    v32.i64[1] = v33.i64[0];
    result[4] = v32;
    result[5] = v38;
    int64x2_t v39 = vzip2q_s64(v34, v35);
    v34.i64[1] = v35.i64[0];
    result[6] = v34;
    result[7] = v39;
    int16x8_t v40 = vaddq_s16(vminq_s16(vmaxq_s16(a2[8], v11), v12), v13);
    int16x8_t v41 = a2 + 1;
    int16x8_t v42 = vaddq_s16(vminq_s16(vmaxq_s16(a2[64], v11), v12), v14);
    int16x8_t v43 = vaddq_s16(vminq_s16(vmaxq_s16(a2[72], v11), v12), v14);
    int16x8_t v44 = vcltzq_s16(v40);
    int32x4_t v45 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v40, v44)), v15);
    int32x4_t v46 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v42, (int16x8_t)0)), v15);
    int32x4_t v47 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v42, (int16x8_t)0)), v15);
    int32x4_t v48 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v40, v44)), v15);
    int32x4_t v49 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v43, (int16x8_t)0)), v15);
    int32x4_t v50 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v43, (int16x8_t)0)), v15);
    int64x2_t v51 = (int64x2_t)vzip1q_s32(_Q0, v45);
    int64x2_t v52 = (int64x2_t)vzip1q_s32(v46, v49);
    int64x2_t v53 = (int64x2_t)vzip2q_s32(_Q0, v45);
    int64x2_t v54 = (int64x2_t)vzip2q_s32(v46, v49);
    int64x2_t v55 = (int64x2_t)vzip1q_s32(_Q0, v48);
    int64x2_t v56 = (int64x2_t)vzip2q_s32(_Q0, v48);
    int64x2_t v57 = (int64x2_t)vzip1q_s32(v47, v50);
    int64x2_t v58 = (int64x2_t)vzip2q_s32(v47, v50);
    int64x2_t v59 = vzip2q_s64(v51, v52);
    v51.i64[1] = v52.i64[0];
    int64x2_t v60 = vzip2q_s64(v53, v54);
    result[8] = v51;
    result[9] = v59;
    v53.i64[1] = v54.i64[0];
    int64x2_t v61 = vzip2q_s64(v55, v57);
    result[10] = v53;
    result[11] = v60;
    v55.i64[1] = v57.i64[0];
    int64x2_t v62 = vzip2q_s64(v56, v58);
    result[12] = v55;
    result[13] = v61;
    v56.i64[1] = v58.i64[0];
    result[14] = v56;
    result[15] = v62;
    int16x8_t v63 = (int64x2_t *)((char *)result + 8 * a3);
    int8x8_t result = (int64x2_t *)((char *)result + a3);
    int16x8_t v64 = vaddq_s16(vminq_s16(vmaxq_s16(a2[16], v11), v12), v13);
    int16x8_t v65 = vaddq_s16(vminq_s16(vmaxq_s16(a2[48], v11), v12), v14);
    int16x8_t v66 = vaddq_s16(vminq_s16(vmaxq_s16(a2[56], v11), v12), v14);
    int16x8_t v67 = vcltzq_s16(v64);
    int32x4_t v68 = (int32x4_t)vzip1q_s16(v64, v67);
    int32x4_t v69 = (int32x4_t)vzip2q_s16(v64, v67);
    int32x4_t v70 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v68), v15);
    int32x4_t v71 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v65, (int16x8_t)0)), v15);
    int32x4_t v72 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v65, (int16x8_t)0)), v15);
    int32x4_t v73 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v66, (int16x8_t)0)), v15);
    int32x4_t v74 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v69), v15);
    int32x4_t v75 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v66, (int16x8_t)0)), v15);
    int64x2_t v76 = (int64x2_t)vzip1q_s32(_Q0, v70);
    int64x2_t v77 = (int64x2_t)vzip1q_s32(v71, v73);
    int64x2_t v78 = (int64x2_t)vzip2q_s32(v71, v73);
    int64x2_t v79 = (int64x2_t)vzip2q_s32(_Q0, v70);
    int64x2_t v80 = (int64x2_t)vzip1q_s32(_Q0, v74);
    int64x2_t v81 = (int64x2_t)vzip2q_s32(_Q0, v74);
    int64x2_t v82 = (int64x2_t)vzip1q_s32(v72, v75);
    int64x2_t v83 = (int64x2_t)vzip2q_s32(v72, v75);
    int64x2_t v84 = vzip2q_s64(v76, v77);
    v76.i64[1] = v77.i64[0];
    int64x2_t v85 = vzip2q_s64(v79, v78);
    *int16x8_t v63 = v76;
    v63[1] = v84;
    v79.i64[1] = v78.i64[0];
    int64x2_t v86 = vzip2q_s64(v80, v82);
    v63[2] = v79;
    v63[3] = v85;
    v80.i64[1] = v82.i64[0];
    int64x2_t v87 = vzip2q_s64(v81, v83);
    v63[4] = v80;
    v63[5] = v86;
    v81.i64[1] = v83.i64[0];
    v63[6] = v81;
    v63[7] = v87;
    int16x8_t v88 = vaddq_s16(vminq_s16(vmaxq_s16(a2[24], v11), v12), v13);
    int16x8_t v89 = vaddq_s16(vminq_s16(vmaxq_s16(a2[80], v11), v12), v14);
    int16x8_t v90 = vaddq_s16(vminq_s16(vmaxq_s16(a2[88], v11), v12), v14);
    int16x8_t v91 = vcltzq_s16(v88);
    int32x4_t v92 = (int32x4_t)vzip1q_s16(v88, v91);
    int32x4_t v93 = (int32x4_t)vzip2q_s16(v88, v91);
    int32x4_t v94 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v92), v15);
    int32x4_t v95 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v89, (int16x8_t)0)), v15);
    int32x4_t v96 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v93), v15);
    int32x4_t v97 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v89, (int16x8_t)0)), v15);
    int32x4_t v98 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v90, (int16x8_t)0)), v15);
    int32x4_t v99 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v90, (int16x8_t)0)), v15);
    int64x2_t v100 = (int64x2_t)vzip1q_s32(_Q0, v94);
    int64x2_t v101 = (int64x2_t)vzip2q_s32(_Q0, v94);
    int64x2_t v102 = (int64x2_t)vzip1q_s32(v95, v98);
    int64x2_t v103 = (int64x2_t)vzip2q_s32(v95, v98);
    int64x2_t v104 = (int64x2_t)vzip1q_s32(_Q0, v96);
    int64x2_t v105 = (int64x2_t)vzip1q_s32(v97, v99);
    int64x2_t v106 = (int64x2_t)vzip2q_s32(_Q0, v96);
    int64x2_t v107 = (int64x2_t)vzip2q_s32(v97, v99);
    int64x2_t v108 = vzip2q_s64(v100, v102);
    v100.i64[1] = v102.i64[0];
    v63[8] = v100;
    v63[9] = v108;
    int64x2_t v109 = vzip2q_s64(v101, v103);
    v101.i64[1] = v103.i64[0];
    v63[10] = v101;
    v63[11] = v109;
    int64x2_t v110 = vzip2q_s64(v104, v105);
    v104.i64[1] = v105.i64[0];
    v63[12] = v104;
    v63[13] = v110;
    int64x2_t v111 = vzip2q_s64(v106, v107);
    v106.i64[1] = v107.i64[0];
    v63[14] = v106;
    v63[15] = v111;
    int v112 = v10 - 1;
    LODWORD(v63) = v10 - 16;
    --v10;
    ++a2;
  }
  while ((int)v63 > 1);
  int32x4_t v113 = v41 + 8;
  int32x4_t v114 = v41 + 32;
  int64x2_t v115 = v41 + 40;
  int v116 = v41 + 64;
  int v117 = v41 + 72;
  if (a4 <= 8) {
    int v118 = 8;
  }
  else {
    int v118 = a4;
  }
  int v119 = v112 - v118;
  a2 = v41;
  if (v119 >= 1)
  {
LABEL_13:
    unsigned int v120 = v119 + 1;
    int16x8_t v121 = result + 8;
    v122.i64[0] = 0xF000F000F000F000;
    v122.i64[1] = 0xF000F000F000F000;
    int16x8_t v123 = vdupq_n_s16(0xFE0u);
    v124.i64[0] = 0xE000E000E000E00;
    v124.i64[1] = 0xE000E000E000E00;
    v125.i64[0] = 0x1000100010001000;
    v125.i64[1] = 0x1000100010001000;
    float32x4_t v126 = (float32x4_t)vdupq_n_s32(0x39008081u);
    do
    {
      int16x8_t v127 = *a2++;
      int16x8_t v128 = vmaxq_s16(v127, v122);
      int16x8_t v129 = *v114++;
      int16x8_t v130 = vmaxq_s16(v129, v122);
      int16x8_t v131 = *v115++;
      int16x8_t v132 = vaddq_s16(vminq_s16(v128, v123), v124);
      int16x8_t v133 = vaddq_s16(vminq_s16(v130, v123), v125);
      int16x8_t v134 = vaddq_s16(vminq_s16(vmaxq_s16(v131, v122), v123), v125);
      int16x8_t v135 = vcltzq_s16(v132);
      int32x4_t v136 = (int32x4_t)vzip1q_s16(v132, v135);
      int32x4_t v137 = (int32x4_t)vzip2q_s16(v132, v135);
      float32x4_t v138 = vcvtq_f32_s32(v136);
      int32x4_t v139 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v133, (int16x8_t)0)), v126);
      int32x4_t v140 = (int32x4_t)vmulq_f32(v138, v126);
      int32x4_t v141 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v133, (int16x8_t)0)), v126);
      int32x4_t v142 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v134, (int16x8_t)0)), v126);
      int32x4_t v143 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v137), v126);
      int32x4_t v144 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v134, (int16x8_t)0)), v126);
      int64x2_t v145 = (int64x2_t)vzip1q_s32(_Q0, v140);
      int64x2_t v146 = (int64x2_t)vzip2q_s32(_Q0, v140);
      int64x2_t v147 = (int64x2_t)vzip1q_s32(v139, v142);
      int64x2_t v148 = (int64x2_t)vzip2q_s32(v139, v142);
      int64x2_t v149 = (int64x2_t)vzip1q_s32(_Q0, v143);
      int64x2_t v150 = (int64x2_t)vzip2q_s32(_Q0, v143);
      int64x2_t v151 = (int64x2_t)vzip1q_s32(v141, v144);
      int64x2_t v152 = vzip2q_s64(v145, v147);
      v145.i64[1] = v147.i64[0];
      int64x2_t v153 = (int64x2_t)vzip2q_s32(v141, v144);
      int64x2_t v154 = vzip2q_s64(v146, v148);
      v146.i64[1] = v148.i64[0];
      v121[-8] = v145;
      v121[-7] = v152;
      int64x2_t v155 = vzip2q_s64(v149, v151);
      v149.i64[1] = v151.i64[0];
      v121[-6] = v146;
      v121[-5] = v154;
      int64x2_t v156 = vzip2q_s64(v150, v153);
      v150.i64[1] = v153.i64[0];
      v121[-4] = v149;
      v121[-3] = v155;
      v121[-2] = v150;
      v121[-1] = v156;
      int16x8_t v157 = *v113++;
      int16x8_t v158 = vmaxq_s16(v157, v122);
      int16x8_t v159 = *v116++;
      int16x8_t v160 = vmaxq_s16(v159, v122);
      int16x8_t v161 = *v117++;
      int16x8_t v162 = vaddq_s16(vminq_s16(v158, v123), v124);
      int16x8_t v163 = vaddq_s16(vminq_s16(v160, v123), v125);
      int16x8_t v164 = vaddq_s16(vminq_s16(vmaxq_s16(v161, v122), v123), v125);
      int16x8_t v165 = vcltzq_s16(v162);
      int32x4_t v166 = (int32x4_t)vzip1q_s16(v162, v165);
      int32x4_t v167 = (int32x4_t)vzip2q_s16(v162, v165);
      float32x4_t v168 = vcvtq_f32_s32(v166);
      int32x4_t v169 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v163, (int16x8_t)0)), v126);
      int32x4_t v170 = (int32x4_t)vmulq_f32(v168, v126);
      int32x4_t v171 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v163, (int16x8_t)0)), v126);
      int32x4_t v172 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip1q_s16(v164, (int16x8_t)0)), v126);
      int32x4_t v173 = (int32x4_t)vmulq_f32(vcvtq_f32_s32(v167), v126);
      int32x4_t v174 = (int32x4_t)vmulq_f32(vcvtq_f32_s32((int32x4_t)vzip2q_s16(v164, (int16x8_t)0)), v126);
      int64x2_t v175 = (int64x2_t)vzip1q_s32(_Q0, v170);
      int64x2_t v176 = (int64x2_t)vzip2q_s32(_Q0, v170);
      int64x2_t v177 = (int64x2_t)vzip1q_s32(v169, v172);
      int64x2_t v178 = (int64x2_t)vzip2q_s32(v169, v172);
      int64x2_t v179 = (int64x2_t)vzip1q_s32(_Q0, v173);
      int64x2_t v180 = (int64x2_t)vzip2q_s32(_Q0, v173);
      int64x2_t v181 = (int64x2_t)vzip1q_s32(v171, v174);
      int64x2_t v182 = vzip2q_s64(v175, v177);
      v175.i64[1] = v177.i64[0];
      int64x2_t v183 = (int64x2_t)vzip2q_s32(v171, v174);
      int64x2_t v184 = vzip2q_s64(v176, v178);
      v176.i64[1] = v178.i64[0];
      *int16x8_t v121 = v175;
      v121[1] = v182;
      int64x2_t v185 = vzip2q_s64(v179, v181);
      v179.i64[1] = v181.i64[0];
      v121[2] = v176;
      v121[3] = v184;
      int64x2_t v186 = vzip2q_s64(v180, v183);
      v180.i64[1] = v183.i64[0];
      v121[4] = v179;
      v121[5] = v185;
      v121[6] = v180;
      v121[7] = v186;
      --v120;
      int16x8_t v121 = (int64x2_t *)((char *)v121 + a3);
    }
    while (v120 > 1);
  }
  return result;
}

void from_444_to_32ARGB<8,8,(AlphaOutputMethod)1,false>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D65788Au);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBC886CBF);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBDA5DD8);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D873197u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int16x8_t v131 = a2 + 8;
    int16x8_t v132 = a2 + 32;
    int16x8_t v133 = a2 + 40;
    int16x8_t v134 = a2 + 64;
    int16x8_t v135 = a2 + 72;
    int v137 = a4 - v11;
    if (a4 - v11 < 1) {
      return;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D4C4A9Bu);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCD01EA6);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBC489511);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D811A55u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D56DECBu);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCA68235);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBBFD26A);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D8912CCu);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
  float32x4_t v15 = (char *)a1;
  do
  {
    int16x8_t v16 = (int8x16_t *)((char *)a1 + 8 * a3);
    int64x2_t v17 = *(int64x2_t *)a5;
    int16x8_t v18 = vaddq_s16(*a2, v13);
    int16x8_t v19 = a2[32];
    int16x8_t v20 = a2[40];
    int16x8_t v21 = vcltzq_s16(v18);
    int32x4_t v22 = (int32x4_t)vzip1q_s16(v18, v21);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v18, v21);
    int16x8_t v24 = vcltzq_s16(v19);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v19, v24));
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v19, v24));
    int16x8_t v27 = vcltzq_s16(v20);
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v20, v27));
    float32x4_t v29 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v20, v27));
    float32x4_t v30 = vmulq_f32(vcvtq_f32_s32(v22), v14);
    float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v7, v28));
    float32x4_t v32 = vaddq_f32(v30, vmulq_f32(v9, v25));
    float32x4_t v33 = vaddq_f32(v30, vmulq_f32(v10, v25));
    float32x4_t v34 = vmulq_f32(vcvtq_f32_s32(v23), v14);
    float32x4_t v35 = vaddq_f32(v32, vmulq_f32(v8, v28));
    float32x4_t v36 = vaddq_f32(v34, vmulq_f32(v7, v29));
    float32x4_t v37 = vaddq_f32(vaddq_f32(v34, vmulq_f32(v9, v26)), vmulq_f32(v8, v29));
    float32x4_t v38 = vaddq_f32(v34, vmulq_f32(v10, v26));
    int16x8_t v39 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), vcvtnq_s32_f32(v36));
    int32x4_t v40 = vcvtnq_s32_f32(v38);
    int16x8_t v41 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v35)), vcvtnq_s32_f32(v37));
    int16x8_t v42 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v33)), v40);
    *(int8x8_t *)v40.i8 = vqmovun_s16(v39);
    *(int8x8_t *)v39.i8 = vqmovun_s16(v41);
    *(int8x8_t *)v42.i8 = vqmovun_s16(v42);
    int16x8_t v43 = a2 + 1;
    int8x16_t v44 = vzip1q_s8(*a5, (int8x16_t)v39);
    int8x16_t v45 = vzip1q_s8((int8x16_t)v40, (int8x16_t)v42);
    vst2_s8(v15, (int8x8x2_t)v44);
    v15 += a3;
    a1[1] = vzip2q_s8(v44, v45);
    int16x8_t v46 = vaddq_s16(a2[8], v13);
    int16x8_t v47 = a2[64];
    int16x8_t v48 = a2[72];
    int16x8_t v49 = vcltzq_s16(v46);
    int32x4_t v50 = (int32x4_t)vzip1q_s16(v46, v49);
    int32x4_t v51 = (int32x4_t)vzip2q_s16(v46, v49);
    int16x8_t v52 = vcltzq_s16(v47);
    float32x4_t v53 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v47, v52));
    float32x4_t v54 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v47, v52));
    int16x8_t v55 = vcltzq_s16(v48);
    float32x4_t v56 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v48, v55));
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v48, v55));
    float32x4_t v58 = vmulq_f32(vcvtq_f32_s32(v50), v14);
    float32x4_t v59 = vaddq_f32(v58, vmulq_f32(v7, v56));
    float32x4_t v60 = vaddq_f32(v58, vmulq_f32(v9, v53));
    float32x4_t v61 = vaddq_f32(v58, vmulq_f32(v10, v53));
    float32x4_t v62 = vmulq_f32(vcvtq_f32_s32(v51), v14);
    float32x4_t v63 = vaddq_f32(v62, vmulq_f32(v7, v57));
    float32x4_t v64 = vaddq_f32(vaddq_f32(v62, vmulq_f32(v9, v54)), vmulq_f32(v8, v57));
    float32x4_t v65 = vaddq_f32(v62, vmulq_f32(v10, v54));
    int16x8_t v66 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v59)), vcvtnq_s32_f32(v63));
    int16x8_t v67 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v60, vmulq_f32(v8, v56)))), vcvtnq_s32_f32(v64));
    int32x4_t v68 = vcvtnq_s32_f32(v65);
    int16x8_t v69 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v61)), v68);
    *(int8x8_t *)v68.i8 = vqmovun_s16(v66);
    *(int8x8_t *)v66.i8 = vqmovun_s16(v67);
    *(int8x8_t *)v69.i8 = vqmovun_s16(v69);
    int8x16_t v70 = vzip1q_s8((int8x16_t)vdupq_laneq_s64(v17, 1), (int8x16_t)v66);
    int8x16_t v71 = vzip1q_s8((int8x16_t)v68, (int8x16_t)v69);
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v70);
    a1[3] = vzip2q_s8(v70, v71);
    int64x2_t v73 = *(int64x2_t *)((char *)a5 + 8 * a6);
    int16x8_t v74 = vaddq_s16(a2[16], v13);
    int16x8_t v75 = a2[48];
    int16x8_t v76 = a2[56];
    int16x8_t v77 = vcltzq_s16(v74);
    int32x4_t v78 = (int32x4_t)vzip1q_s16(v74, v77);
    int32x4_t v79 = (int32x4_t)vzip2q_s16(v74, v77);
    float32x4_t v80 = vcvtq_f32_s32(v78);
    int16x8_t v81 = vcltzq_s16(v75);
    float32x4_t v82 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v75, v81));
    float32x4_t v83 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v75, v81));
    int16x8_t v84 = vcltzq_s16(v76);
    float32x4_t v85 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v76, v84));
    float32x4_t v86 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v76, v84));
    float32x4_t v87 = vmulq_f32(v80, v14);
    float32x4_t v88 = vaddq_f32(v87, vmulq_f32(v9, v82));
    float32x4_t v89 = vaddq_f32(v87, vmulq_f32(v7, v85));
    float32x4_t v90 = vaddq_f32(v87, vmulq_f32(v10, v82));
    float32x4_t v91 = vmulq_f32(vcvtq_f32_s32(v79), v14);
    float32x4_t v92 = vaddq_f32(v91, vmulq_f32(v7, v86));
    float32x4_t v93 = vaddq_f32(vaddq_f32(v91, vmulq_f32(v9, v83)), vmulq_f32(v8, v86));
    float32x4_t v94 = vaddq_f32(v91, vmulq_f32(v10, v83));
    int16x8_t v95 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v89)), vcvtnq_s32_f32(v92));
    int16x8_t v96 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v88, vmulq_f32(v8, v85)))), vcvtnq_s32_f32(v93));
    int32x4_t v97 = vcvtnq_s32_f32(v94);
    int16x8_t v98 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v90)), v97);
    a1 = (int8x16_t *)v15;
    *(int8x8_t *)v97.i8 = vqmovun_s16(v95);
    *(int8x8_t *)v95.i8 = vqmovun_s16(v96);
    *(int8x8_t *)v98.i8 = vqmovun_s16(v98);
    int8x16_t v99 = vzip1q_s8((int8x16_t)v73, (int8x16_t)v95);
    int8x16_t v100 = vzip1q_s8((int8x16_t)v97, (int8x16_t)v98);
    int64x2_t v101 = (char *)v16;
    vst2_s8(v101, (int8x8x2_t)v99);
    v101 += 16;
    *(int8x16_t *)int64x2_t v101 = vzip2q_s8(v99, v100);
    int16x8_t v102 = vaddq_s16(a2[24], v13);
    int16x8_t v103 = a2[80];
    int16x8_t v104 = a2[88];
    int16x8_t v105 = vcltzq_s16(v102);
    int32x4_t v106 = (int32x4_t)vzip1q_s16(v102, v105);
    int32x4_t v107 = (int32x4_t)vzip2q_s16(v102, v105);
    int16x8_t v108 = vcltzq_s16(v103);
    float32x4_t v109 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v103, v108));
    float32x4_t v110 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v103, v108));
    int16x8_t v111 = vcltzq_s16(v104);
    float32x4_t v112 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v104, v111));
    float32x4_t v113 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v104, v111));
    float32x4_t v114 = vmulq_f32(vcvtq_f32_s32(v106), v14);
    float32x4_t v115 = vaddq_f32(v114, vmulq_f32(v7, v112));
    float32x4_t v116 = vaddq_f32(v114, vmulq_f32(v9, v109));
    float32x4_t v117 = vaddq_f32(v114, vmulq_f32(v10, v109));
    float32x4_t v118 = vmulq_f32(vcvtq_f32_s32(v107), v14);
    float32x4_t v119 = vaddq_f32(v116, vmulq_f32(v8, v112));
    float32x4_t v120 = vaddq_f32(v118, vmulq_f32(v7, v113));
    float32x4_t v121 = vaddq_f32(vaddq_f32(v118, vmulq_f32(v9, v110)), vmulq_f32(v8, v113));
    float32x4_t v122 = vaddq_f32(v118, vmulq_f32(v10, v110));
    int16x8_t v123 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v115)), vcvtnq_s32_f32(v120));
    int32x4_t v124 = vcvtnq_s32_f32(v122);
    int16x8_t v125 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v119)), vcvtnq_s32_f32(v121));
    int16x8_t v126 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v117)), v124);
    *(int8x8_t *)v124.i8 = vqmovun_s16(v123);
    *(int8x8_t *)v123.i8 = vqmovun_s16(v125);
    *(int8x8_t *)v126.i8 = vqmovun_s16(v126);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v127 = vzip1q_s8((int8x16_t)vdupq_laneq_s64(v73, 1), (int8x16_t)v123);
    int8x16_t v128 = vzip1q_s8((int8x16_t)v124, (int8x16_t)v126);
    int16x8_t v129 = v16[2].i8;
    vst2_s8(v129, (int8x8x2_t)v127);
    v16[3] = vzip2q_s8(v127, v128);
    int v130 = v12 - 1;
    LODWORD(v129) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v129 > 1);
  int16x8_t v131 = v43 + 8;
  int16x8_t v132 = v43 + 32;
  int16x8_t v133 = v43 + 40;
  int16x8_t v134 = v43 + 64;
  int16x8_t v135 = v43 + 72;
  if (a4 <= 8) {
    int v136 = 8;
  }
  else {
    int v136 = a4;
  }
  int v137 = v130 - v136;
  a2 = v43;
  if (v130 - v136 >= 1)
  {
LABEL_24:
    float32x4_t v138 = a1 + 2;
    unsigned int v139 = v137 + 1;
    v140.i64[0] = 0xE000E000E000E00;
    v140.i64[1] = 0xE000E000E000E00;
    float32x4_t v141 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
    int32x4_t v142 = a1[2].i8;
    do
    {
      int16x8_t v143 = *a2++;
      int16x8_t v144 = v143;
      int16x8_t v145 = *v132++;
      int16x8_t v146 = v145;
      int16x8_t v147 = vaddq_s16(v144, v140);
      int16x8_t v148 = *v133++;
      int16x8_t v149 = vcltzq_s16(v147);
      int32x4_t v150 = (int32x4_t)vzip1q_s16(v147, v149);
      int32x4_t v151 = (int32x4_t)vzip2q_s16(v147, v149);
      float32x4_t v152 = vcvtq_f32_s32(v150);
      int16x8_t v153 = vcltzq_s16(v146);
      float32x4_t v154 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v146, v153));
      float32x4_t v155 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v146, v153));
      int16x8_t v156 = vcltzq_s16(v148);
      float32x4_t v157 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v148, v156));
      float32x4_t v158 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v148, v156));
      float32x4_t v159 = vmulq_f32(v152, v141);
      float32x4_t v160 = vaddq_f32(v159, vmulq_f32(v9, v154));
      float32x4_t v161 = vaddq_f32(v159, vmulq_f32(v7, v157));
      float32x4_t v162 = vaddq_f32(v159, vmulq_f32(v10, v154));
      float32x4_t v163 = vmulq_f32(vcvtq_f32_s32(v151), v141);
      float32x4_t v164 = vaddq_f32(v163, vmulq_f32(v7, v158));
      float32x4_t v165 = vaddq_f32(vaddq_f32(v163, vmulq_f32(v9, v155)), vmulq_f32(v8, v158));
      float32x4_t v166 = vaddq_f32(v163, vmulq_f32(v10, v155));
      int16x8_t v167 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v161)), vcvtnq_s32_f32(v164));
      int16x8_t v168 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v160, vmulq_f32(v8, v157)))), vcvtnq_s32_f32(v165));
      int16x8_t v169 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v162)), vcvtnq_s32_f32(v166));
      int64x2_t v170 = *(int64x2_t *)a5;
      *(int8x8_t *)v167.i8 = vqmovun_s16(v167);
      *(int8x8_t *)v162.f32 = vqmovun_s16(v168);
      *(int8x8_t *)v169.i8 = vqmovun_s16(v169);
      int8x16_t v171 = vzip1q_s8(*a5, (int8x16_t)v162);
      int8x16_t v172 = vzip1q_s8((int8x16_t)v167, (int8x16_t)v169);
      int32x4_t v173 = v138[-2].i8;
      vst2_s8(v173, (int8x8x2_t)v171);
      v138[-1] = vzip2q_s8(v171, v172);
      int16x8_t v174 = *v131++;
      int16x8_t v175 = v174;
      int16x8_t v176 = *v134++;
      int16x8_t v177 = v176;
      int16x8_t v178 = *v135++;
      int16x8_t v179 = vaddq_s16(v175, v140);
      int16x8_t v180 = vcltzq_s16(v179);
      int32x4_t v181 = (int32x4_t)vzip1q_s16(v179, v180);
      int32x4_t v182 = (int32x4_t)vzip2q_s16(v179, v180);
      int16x8_t v183 = vcltzq_s16(v177);
      float32x4_t v184 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v177, v183));
      float32x4_t v185 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v177, v183));
      int16x8_t v186 = vcltzq_s16(v178);
      float32x4_t v187 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v178, v186));
      float32x4_t v188 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v178, v186));
      float32x4_t v189 = vmulq_f32(vcvtq_f32_s32(v181), v141);
      float32x4_t v190 = vaddq_f32(v189, vmulq_f32(v7, v187));
      float32x4_t v191 = vaddq_f32(v189, vmulq_f32(v9, v184));
      float32x4_t v192 = vaddq_f32(v189, vmulq_f32(v10, v184));
      float32x4_t v193 = vmulq_f32(vcvtq_f32_s32(v182), v141);
      float32x4_t v194 = vaddq_f32(v193, vmulq_f32(v7, v188));
      float32x4_t v195 = vaddq_f32(vaddq_f32(v193, vmulq_f32(v9, v185)), vmulq_f32(v8, v188));
      float32x4_t v196 = vaddq_f32(v193, vmulq_f32(v10, v185));
      int16x8_t v197 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v190)), vcvtnq_s32_f32(v194));
      int16x8_t v198 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v191, vmulq_f32(v8, v187)))), vcvtnq_s32_f32(v195));
      int32x4_t v199 = vcvtnq_s32_f32(v196);
      int16x8_t v200 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v192)), v199);
      *(int8x8_t *)v199.i8 = vqmovun_s16(v197);
      *(int8x8_t *)v197.i8 = vqmovun_s16(v198);
      *(int8x8_t *)v200.i8 = vqmovun_s16(v200);
      int8x16_t v201 = vzip1q_s8((int8x16_t)vdupq_laneq_s64(v170, 1), (int8x16_t)v197);
      int8x16_t v202 = vzip1q_s8((int8x16_t)v199, (int8x16_t)v200);
      vst2_s8(v142, (int8x8x2_t)v201);
      v142 += a3;
      v138[1] = vzip2q_s8(v201, v202);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v139;
      float32x4_t v138 = (int8x16_t *)v142;
    }
    while (v139 > 1);
  }
}

void from_444_to_32ARGB<8,8,(AlphaOutputMethod)1,true>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D65788Au);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBC886CBF);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBDA5DD8);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D873197u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int16x8_t v131 = a2 + 8;
    int16x8_t v132 = a2 + 32;
    int16x8_t v133 = a2 + 40;
    int16x8_t v134 = a2 + 64;
    int16x8_t v135 = a2 + 72;
    int v137 = a4 - v11;
    if (a4 - v11 < 1) {
      return;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D4C4A9Bu);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCD01EA6);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBC489511);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D811A55u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D56DECBu);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCA68235);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBBFD26A);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D8912CCu);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
  float32x4_t v15 = (char *)a1;
  do
  {
    int16x8_t v16 = (int8x16_t *)((char *)a1 + 8 * a3);
    int64x2_t v17 = *(int64x2_t *)a5;
    int16x8_t v18 = vaddq_s16(*a2, v13);
    int16x8_t v19 = a2[32];
    int16x8_t v20 = a2[40];
    int16x8_t v21 = vcltzq_s16(v18);
    int32x4_t v22 = (int32x4_t)vzip1q_s16(v18, v21);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v18, v21);
    int16x8_t v24 = vcltzq_s16(v19);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v19, v24));
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v19, v24));
    int16x8_t v27 = vcltzq_s16(v20);
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v20, v27));
    float32x4_t v29 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v20, v27));
    float32x4_t v30 = vmulq_f32(vcvtq_f32_s32(v22), v14);
    float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v7, v28));
    float32x4_t v32 = vaddq_f32(v30, vmulq_f32(v9, v25));
    float32x4_t v33 = vaddq_f32(v30, vmulq_f32(v10, v25));
    float32x4_t v34 = vmulq_f32(vcvtq_f32_s32(v23), v14);
    float32x4_t v35 = vaddq_f32(v32, vmulq_f32(v8, v28));
    float32x4_t v36 = vaddq_f32(v34, vmulq_f32(v7, v29));
    float32x4_t v37 = vaddq_f32(vaddq_f32(v34, vmulq_f32(v9, v26)), vmulq_f32(v8, v29));
    float32x4_t v38 = vaddq_f32(v34, vmulq_f32(v10, v26));
    int16x8_t v39 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), vcvtnq_s32_f32(v36));
    int32x4_t v40 = vcvtnq_s32_f32(v38);
    int16x8_t v41 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v35)), vcvtnq_s32_f32(v37));
    int16x8_t v42 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v33)), v40);
    *(int8x8_t *)v40.i8 = vqmovun_s16(v39);
    *(int8x8_t *)v39.i8 = vqmovun_s16(v41);
    *(int8x8_t *)v42.i8 = vqmovun_s16(v42);
    int16x8_t v43 = a2 + 1;
    int8x16_t v44 = vzip1q_s8(*a5, (int8x16_t)v39);
    int8x16_t v45 = vzip1q_s8((int8x16_t)v40, (int8x16_t)v42);
    vst2_s8(v15, (int8x8x2_t)v44);
    v15 += a3;
    a1[1] = vzip2q_s8(v44, v45);
    int16x8_t v46 = vaddq_s16(a2[8], v13);
    int16x8_t v47 = a2[64];
    int16x8_t v48 = a2[72];
    int16x8_t v49 = vcltzq_s16(v46);
    int32x4_t v50 = (int32x4_t)vzip1q_s16(v46, v49);
    int32x4_t v51 = (int32x4_t)vzip2q_s16(v46, v49);
    int16x8_t v52 = vcltzq_s16(v47);
    float32x4_t v53 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v47, v52));
    float32x4_t v54 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v47, v52));
    int16x8_t v55 = vcltzq_s16(v48);
    float32x4_t v56 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v48, v55));
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v48, v55));
    float32x4_t v58 = vmulq_f32(vcvtq_f32_s32(v50), v14);
    float32x4_t v59 = vaddq_f32(v58, vmulq_f32(v7, v56));
    float32x4_t v60 = vaddq_f32(v58, vmulq_f32(v9, v53));
    float32x4_t v61 = vaddq_f32(v58, vmulq_f32(v10, v53));
    float32x4_t v62 = vmulq_f32(vcvtq_f32_s32(v51), v14);
    float32x4_t v63 = vaddq_f32(v62, vmulq_f32(v7, v57));
    float32x4_t v64 = vaddq_f32(vaddq_f32(v62, vmulq_f32(v9, v54)), vmulq_f32(v8, v57));
    float32x4_t v65 = vaddq_f32(v62, vmulq_f32(v10, v54));
    int16x8_t v66 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v59)), vcvtnq_s32_f32(v63));
    int16x8_t v67 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v60, vmulq_f32(v8, v56)))), vcvtnq_s32_f32(v64));
    int32x4_t v68 = vcvtnq_s32_f32(v65);
    int16x8_t v69 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v61)), v68);
    *(int8x8_t *)v68.i8 = vqmovun_s16(v66);
    *(int8x8_t *)v66.i8 = vqmovun_s16(v67);
    *(int8x8_t *)v69.i8 = vqmovun_s16(v69);
    int8x16_t v70 = vzip1q_s8((int8x16_t)vdupq_laneq_s64(v17, 1), (int8x16_t)v66);
    int8x16_t v71 = vzip1q_s8((int8x16_t)v68, (int8x16_t)v69);
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v70);
    a1[3] = vzip2q_s8(v70, v71);
    int64x2_t v73 = *(int64x2_t *)((char *)a5 + 8 * a6);
    int16x8_t v74 = vaddq_s16(a2[16], v13);
    int16x8_t v75 = a2[48];
    int16x8_t v76 = a2[56];
    int16x8_t v77 = vcltzq_s16(v74);
    int32x4_t v78 = (int32x4_t)vzip1q_s16(v74, v77);
    int32x4_t v79 = (int32x4_t)vzip2q_s16(v74, v77);
    float32x4_t v80 = vcvtq_f32_s32(v78);
    int16x8_t v81 = vcltzq_s16(v75);
    float32x4_t v82 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v75, v81));
    float32x4_t v83 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v75, v81));
    int16x8_t v84 = vcltzq_s16(v76);
    float32x4_t v85 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v76, v84));
    float32x4_t v86 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v76, v84));
    float32x4_t v87 = vmulq_f32(v80, v14);
    float32x4_t v88 = vaddq_f32(v87, vmulq_f32(v9, v82));
    float32x4_t v89 = vaddq_f32(v87, vmulq_f32(v7, v85));
    float32x4_t v90 = vaddq_f32(v87, vmulq_f32(v10, v82));
    float32x4_t v91 = vmulq_f32(vcvtq_f32_s32(v79), v14);
    float32x4_t v92 = vaddq_f32(v91, vmulq_f32(v7, v86));
    float32x4_t v93 = vaddq_f32(vaddq_f32(v91, vmulq_f32(v9, v83)), vmulq_f32(v8, v86));
    float32x4_t v94 = vaddq_f32(v91, vmulq_f32(v10, v83));
    int16x8_t v95 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v89)), vcvtnq_s32_f32(v92));
    int16x8_t v96 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v88, vmulq_f32(v8, v85)))), vcvtnq_s32_f32(v93));
    int32x4_t v97 = vcvtnq_s32_f32(v94);
    int16x8_t v98 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v90)), v97);
    a1 = (int8x16_t *)v15;
    *(int8x8_t *)v97.i8 = vqmovun_s16(v95);
    *(int8x8_t *)v95.i8 = vqmovun_s16(v96);
    *(int8x8_t *)v98.i8 = vqmovun_s16(v98);
    int8x16_t v99 = vzip1q_s8((int8x16_t)v73, (int8x16_t)v95);
    int8x16_t v100 = vzip1q_s8((int8x16_t)v97, (int8x16_t)v98);
    int64x2_t v101 = (char *)v16;
    vst2_s8(v101, (int8x8x2_t)v99);
    v101 += 16;
    *(int8x16_t *)int64x2_t v101 = vzip2q_s8(v99, v100);
    int16x8_t v102 = vaddq_s16(a2[24], v13);
    int16x8_t v103 = a2[80];
    int16x8_t v104 = a2[88];
    int16x8_t v105 = vcltzq_s16(v102);
    int32x4_t v106 = (int32x4_t)vzip1q_s16(v102, v105);
    int32x4_t v107 = (int32x4_t)vzip2q_s16(v102, v105);
    int16x8_t v108 = vcltzq_s16(v103);
    float32x4_t v109 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v103, v108));
    float32x4_t v110 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v103, v108));
    int16x8_t v111 = vcltzq_s16(v104);
    float32x4_t v112 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v104, v111));
    float32x4_t v113 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v104, v111));
    float32x4_t v114 = vmulq_f32(vcvtq_f32_s32(v106), v14);
    float32x4_t v115 = vaddq_f32(v114, vmulq_f32(v7, v112));
    float32x4_t v116 = vaddq_f32(v114, vmulq_f32(v9, v109));
    float32x4_t v117 = vaddq_f32(v114, vmulq_f32(v10, v109));
    float32x4_t v118 = vmulq_f32(vcvtq_f32_s32(v107), v14);
    float32x4_t v119 = vaddq_f32(v116, vmulq_f32(v8, v112));
    float32x4_t v120 = vaddq_f32(v118, vmulq_f32(v7, v113));
    float32x4_t v121 = vaddq_f32(vaddq_f32(v118, vmulq_f32(v9, v110)), vmulq_f32(v8, v113));
    float32x4_t v122 = vaddq_f32(v118, vmulq_f32(v10, v110));
    int16x8_t v123 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v115)), vcvtnq_s32_f32(v120));
    int32x4_t v124 = vcvtnq_s32_f32(v122);
    int16x8_t v125 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v119)), vcvtnq_s32_f32(v121));
    int16x8_t v126 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v117)), v124);
    *(int8x8_t *)v124.i8 = vqmovun_s16(v123);
    *(int8x8_t *)v123.i8 = vqmovun_s16(v125);
    *(int8x8_t *)v126.i8 = vqmovun_s16(v126);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v127 = vzip1q_s8((int8x16_t)vdupq_laneq_s64(v73, 1), (int8x16_t)v123);
    int8x16_t v128 = vzip1q_s8((int8x16_t)v124, (int8x16_t)v126);
    int16x8_t v129 = v16[2].i8;
    vst2_s8(v129, (int8x8x2_t)v127);
    v16[3] = vzip2q_s8(v127, v128);
    int v130 = v12 - 1;
    LODWORD(v129) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v129 > 1);
  int16x8_t v131 = v43 + 8;
  int16x8_t v132 = v43 + 32;
  int16x8_t v133 = v43 + 40;
  int16x8_t v134 = v43 + 64;
  int16x8_t v135 = v43 + 72;
  if (a4 <= 8) {
    int v136 = 8;
  }
  else {
    int v136 = a4;
  }
  int v137 = v130 - v136;
  a2 = v43;
  if (v130 - v136 >= 1)
  {
LABEL_24:
    float32x4_t v138 = a1 + 2;
    unsigned int v139 = v137 + 1;
    v140.i64[0] = 0xE000E000E000E00;
    v140.i64[1] = 0xE000E000E000E00;
    float32x4_t v141 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
    int32x4_t v142 = a1[2].i8;
    do
    {
      int16x8_t v143 = *a2++;
      int16x8_t v144 = v143;
      int16x8_t v145 = *v132++;
      int16x8_t v146 = v145;
      int16x8_t v147 = vaddq_s16(v144, v140);
      int16x8_t v148 = *v133++;
      int16x8_t v149 = vcltzq_s16(v147);
      int32x4_t v150 = (int32x4_t)vzip1q_s16(v147, v149);
      int32x4_t v151 = (int32x4_t)vzip2q_s16(v147, v149);
      float32x4_t v152 = vcvtq_f32_s32(v150);
      int16x8_t v153 = vcltzq_s16(v146);
      float32x4_t v154 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v146, v153));
      float32x4_t v155 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v146, v153));
      int16x8_t v156 = vcltzq_s16(v148);
      float32x4_t v157 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v148, v156));
      float32x4_t v158 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v148, v156));
      float32x4_t v159 = vmulq_f32(v152, v141);
      float32x4_t v160 = vaddq_f32(v159, vmulq_f32(v9, v154));
      float32x4_t v161 = vaddq_f32(v159, vmulq_f32(v7, v157));
      float32x4_t v162 = vaddq_f32(v159, vmulq_f32(v10, v154));
      float32x4_t v163 = vmulq_f32(vcvtq_f32_s32(v151), v141);
      float32x4_t v164 = vaddq_f32(v163, vmulq_f32(v7, v158));
      float32x4_t v165 = vaddq_f32(vaddq_f32(v163, vmulq_f32(v9, v155)), vmulq_f32(v8, v158));
      float32x4_t v166 = vaddq_f32(v163, vmulq_f32(v10, v155));
      int16x8_t v167 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v161)), vcvtnq_s32_f32(v164));
      int16x8_t v168 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v160, vmulq_f32(v8, v157)))), vcvtnq_s32_f32(v165));
      int16x8_t v169 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v162)), vcvtnq_s32_f32(v166));
      int64x2_t v170 = *(int64x2_t *)a5;
      *(int8x8_t *)v167.i8 = vqmovun_s16(v167);
      *(int8x8_t *)v162.f32 = vqmovun_s16(v168);
      *(int8x8_t *)v169.i8 = vqmovun_s16(v169);
      int8x16_t v171 = vzip1q_s8(*a5, (int8x16_t)v162);
      int8x16_t v172 = vzip1q_s8((int8x16_t)v167, (int8x16_t)v169);
      int32x4_t v173 = v138[-2].i8;
      vst2_s8(v173, (int8x8x2_t)v171);
      v138[-1] = vzip2q_s8(v171, v172);
      int16x8_t v174 = *v131++;
      int16x8_t v175 = v174;
      int16x8_t v176 = *v134++;
      int16x8_t v177 = v176;
      int16x8_t v178 = *v135++;
      int16x8_t v179 = vaddq_s16(v175, v140);
      int16x8_t v180 = vcltzq_s16(v179);
      int32x4_t v181 = (int32x4_t)vzip1q_s16(v179, v180);
      int32x4_t v182 = (int32x4_t)vzip2q_s16(v179, v180);
      int16x8_t v183 = vcltzq_s16(v177);
      float32x4_t v184 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v177, v183));
      float32x4_t v185 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v177, v183));
      int16x8_t v186 = vcltzq_s16(v178);
      float32x4_t v187 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v178, v186));
      float32x4_t v188 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v178, v186));
      float32x4_t v189 = vmulq_f32(vcvtq_f32_s32(v181), v141);
      float32x4_t v190 = vaddq_f32(v189, vmulq_f32(v7, v187));
      float32x4_t v191 = vaddq_f32(v189, vmulq_f32(v9, v184));
      float32x4_t v192 = vaddq_f32(v189, vmulq_f32(v10, v184));
      float32x4_t v193 = vmulq_f32(vcvtq_f32_s32(v182), v141);
      float32x4_t v194 = vaddq_f32(v193, vmulq_f32(v7, v188));
      float32x4_t v195 = vaddq_f32(vaddq_f32(v193, vmulq_f32(v9, v185)), vmulq_f32(v8, v188));
      float32x4_t v196 = vaddq_f32(v193, vmulq_f32(v10, v185));
      int16x8_t v197 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v190)), vcvtnq_s32_f32(v194));
      int16x8_t v198 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v191, vmulq_f32(v8, v187)))), vcvtnq_s32_f32(v195));
      int32x4_t v199 = vcvtnq_s32_f32(v196);
      int16x8_t v200 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v192)), v199);
      *(int8x8_t *)v199.i8 = vqmovun_s16(v197);
      *(int8x8_t *)v197.i8 = vqmovun_s16(v198);
      *(int8x8_t *)v200.i8 = vqmovun_s16(v200);
      int8x16_t v201 = vzip1q_s8((int8x16_t)vdupq_laneq_s64(v170, 1), (int8x16_t)v197);
      int8x16_t v202 = vzip1q_s8((int8x16_t)v199, (int8x16_t)v200);
      vst2_s8(v142, (int8x8x2_t)v201);
      v142 += a3;
      v138[1] = vzip2q_s8(v201, v202);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v139;
      float32x4_t v138 = (int8x16_t *)v142;
    }
    while (v139 > 1);
  }
}

int8x16_t *from_444_to_32ARGB<8,8,(AlphaOutputMethod)2,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D65788Au);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBC886CBF);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBDA5DD8);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D873197u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int16x8_t v135 = a2 + 8;
    int v136 = a2 + 32;
    int v137 = a2 + 40;
    float32x4_t v138 = a2 + 64;
    unsigned int v139 = a2 + 72;
    int v141 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D4C4A9Bu);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCD01EA6);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBC489511);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D811A55u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D56DECBu);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCA68235);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBBFD26A);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D8912CCu);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  uint64_t v12 = 8 * a3;
  int v13 = a4 + 8;
  v14.i64[0] = 0xE000E000E000E00;
  v14.i64[1] = 0xE000E000E000E00;
  float32x4_t v15 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
  v16.i64[0] = -1;
  v16.i64[1] = -1;
  int64x2_t v17 = (char *)result;
  do
  {
    int16x8_t v18 = vaddq_s16(*a2, v14);
    int16x8_t v19 = a2[32];
    int16x8_t v20 = a2[40];
    int16x8_t v21 = vcltzq_s16(v18);
    int32x4_t v22 = (int32x4_t)vzip1q_s16(v18, v21);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v18, v21);
    int16x8_t v24 = vcltzq_s16(v19);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v19, v24));
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v19, v24));
    int16x8_t v27 = vcltzq_s16(v20);
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v20, v27));
    float32x4_t v29 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v20, v27));
    float32x4_t v30 = vmulq_f32(vcvtq_f32_s32(v22), v15);
    float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v7, v28));
    float32x4_t v32 = vaddq_f32(v30, vmulq_f32(v9, v25));
    float32x4_t v33 = vaddq_f32(v30, vmulq_f32(v10, v25));
    float32x4_t v34 = vmulq_f32(vcvtq_f32_s32(v23), v15);
    float32x4_t v35 = vaddq_f32(v32, vmulq_f32(v8, v28));
    float32x4_t v36 = vaddq_f32(v34, vmulq_f32(v7, v29));
    float32x4_t v37 = vaddq_f32(vaddq_f32(v34, vmulq_f32(v9, v26)), vmulq_f32(v8, v29));
    float32x4_t v38 = vaddq_f32(v34, vmulq_f32(v10, v26));
    int16x8_t v39 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), vcvtnq_s32_f32(v36));
    int32x4_t v40 = vcvtnq_s32_f32(v38);
    int16x8_t v41 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v35)), vcvtnq_s32_f32(v37));
    int16x8_t v42 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v33)), v40);
    *(int8x8_t *)v40.i8 = vqmovun_s16(v39);
    *(int8x8_t *)v39.i8 = vqmovun_s16(v41);
    *(int8x8_t *)v42.i8 = vqmovun_s16(v42);
    int8x16_t v43 = vzip1q_s8(v16, (int8x16_t)v39);
    int8x16_t v44 = vzip1q_s8((int8x16_t)v40, (int8x16_t)v42);
    vst2_s8(v17, (int8x8x2_t)v43);
    v17 += a3;
    result[1] = vzip2q_s8(v43, v44);
    int16x8_t v45 = vaddq_s16(a2[8], v14);
    int16x8_t v46 = a2[64];
    int16x8_t v47 = a2[72];
    int16x8_t v48 = vcltzq_s16(v45);
    int32x4_t v49 = (int32x4_t)vzip1q_s16(v45, v48);
    int32x4_t v50 = (int32x4_t)vzip2q_s16(v45, v48);
    int16x8_t v51 = vcltzq_s16(v46);
    float32x4_t v52 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v46, v51));
    int32x4_t v53 = (int32x4_t)vzip2q_s16(v46, v51);
    float32x4_t v54 = vcvtq_f32_s32(v49);
    float32x4_t v55 = vcvtq_f32_s32(v53);
    int16x8_t v56 = vcltzq_s16(v47);
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v47, v56));
    float32x4_t v58 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v47, v56));
    float32x4_t v59 = vmulq_f32(v54, v15);
    float32x4_t v60 = vaddq_f32(v59, vmulq_f32(v9, v52));
    float32x4_t v61 = vaddq_f32(v59, vmulq_f32(v7, v57));
    float32x4_t v62 = vaddq_f32(v59, vmulq_f32(v10, v52));
    float32x4_t v63 = vmulq_f32(vcvtq_f32_s32(v50), v15);
    float32x4_t v64 = vaddq_f32(v60, vmulq_f32(v8, v57));
    float32x4_t v65 = vaddq_f32(v63, vmulq_f32(v7, v58));
    float32x4_t v66 = vaddq_f32(v63, vmulq_f32(v9, v55));
    float32x4_t v67 = vaddq_f32(v63, vmulq_f32(v10, v55));
    int16x8_t v68 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v61)), vcvtnq_s32_f32(v65));
    int32x4_t v69 = vcvtnq_s32_f32(vaddq_f32(v66, vmulq_f32(v8, v58)));
    int32x4_t v70 = vcvtnq_s32_f32(v67);
    int16x8_t v71 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v62)), v70);
    *(int8x8_t *)v70.i8 = vqmovun_s16(v68);
    *(int8x8_t *)v68.i8 = vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v64)), v69));
    *(int8x8_t *)v69.i8 = vqmovun_s16(v71);
    int8x16_t v72 = vzip1q_s8(v16, (int8x16_t)v68);
    int8x16_t v73 = vzip1q_s8((int8x16_t)v70, (int8x16_t)v69);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v72);
    result[3] = vzip2q_s8(v72, v73);
    int16x8_t v75 = vaddq_s16(a2[16], v14);
    int16x8_t v76 = a2[48];
    int16x8_t v77 = a2[56];
    int16x8_t v78 = vcltzq_s16(v75);
    int32x4_t v79 = (int32x4_t)vzip1q_s16(v75, v78);
    int32x4_t v80 = (int32x4_t)vzip2q_s16(v75, v78);
    int16x8_t v81 = vcltzq_s16(v76);
    float32x4_t v82 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v76, v81));
    float32x4_t v83 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v76, v81));
    float32x4_t v84 = vcvtq_f32_s32(v79);
    int16x8_t v85 = vcltzq_s16(v77);
    float32x4_t v86 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v77, v85));
    float32x4_t v87 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v77, v85));
    float32x4_t v88 = vmulq_f32(v84, v15);
    float32x4_t v89 = vaddq_f32(v88, vmulq_f32(v9, v82));
    float32x4_t v90 = vaddq_f32(v88, vmulq_f32(v7, v86));
    float32x4_t v91 = vaddq_f32(v88, vmulq_f32(v10, v82));
    float32x4_t v92 = vmulq_f32(vcvtq_f32_s32(v80), v15);
    float32x4_t v93 = vaddq_f32(v92, vmulq_f32(v7, v87));
    float32x4_t v94 = vaddq_f32(v89, vmulq_f32(v8, v86));
    float32x4_t v95 = vaddq_f32(v92, vmulq_f32(v9, v83));
    float32x4_t v96 = vaddq_f32(v92, vmulq_f32(v10, v83));
    int32x4_t v97 = vcvtnq_s32_f32(vaddq_f32(v95, vmulq_f32(v8, v87)));
    int16x8_t v98 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v90)), vcvtnq_s32_f32(v93));
    int32x4_t v99 = vcvtnq_s32_f32(v96);
    int16x8_t v100 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v91)), v99);
    *(int8x8_t *)v99.i8 = vqmovun_s16(v98);
    *(int8x8_t *)v97.i8 = vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v94)), v97));
    *(int8x8_t *)v98.i8 = vqmovun_s16(v100);
    int8x16_t v101 = vzip1q_s8(v16, (int8x16_t)v97);
    int8x16_t v102 = vzip1q_s8((int8x16_t)v99, (int8x16_t)v98);
    int16x8_t v103 = (int8x16_t *)((char *)result + v12);
    int16x8_t v104 = &result->i8[v12];
    vst2_s8(v104, (int8x8x2_t)v101);
    v104 += 16;
    int16x8_t v105 = a2 + 1;
    *(int8x16_t *)int16x8_t v104 = vzip2q_s8(v101, v102);
    int16x8_t v106 = vaddq_s16(a2[24], v14);
    int16x8_t v107 = a2[80];
    int16x8_t v108 = a2[88];
    int16x8_t v109 = vcltzq_s16(v106);
    int32x4_t v110 = (int32x4_t)vzip1q_s16(v106, v109);
    int32x4_t v111 = (int32x4_t)vzip2q_s16(v106, v109);
    int16x8_t v112 = vcltzq_s16(v107);
    float32x4_t v113 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v107, v112));
    float32x4_t v114 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v107, v112));
    int16x8_t v115 = vcltzq_s16(v108);
    float32x4_t v116 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v108, v115));
    float32x4_t v117 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v108, v115));
    float32x4_t v118 = vmulq_f32(vcvtq_f32_s32(v110), v15);
    float32x4_t v119 = vaddq_f32(v118, vmulq_f32(v7, v116));
    float32x4_t v120 = vaddq_f32(v118, vmulq_f32(v9, v113));
    float32x4_t v121 = vaddq_f32(v118, vmulq_f32(v10, v113));
    float32x4_t v122 = vmulq_f32(vcvtq_f32_s32(v111), v15);
    float32x4_t v123 = vaddq_f32(v120, vmulq_f32(v8, v116));
    float32x4_t v124 = vaddq_f32(v122, vmulq_f32(v7, v117));
    float32x4_t v125 = vaddq_f32(vaddq_f32(v122, vmulq_f32(v9, v114)), vmulq_f32(v8, v117));
    float32x4_t v126 = vaddq_f32(v122, vmulq_f32(v10, v114));
    int16x8_t v127 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v119)), vcvtnq_s32_f32(v124));
    int32x4_t v128 = vcvtnq_s32_f32(v126);
    int16x8_t v129 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v123)), vcvtnq_s32_f32(v125));
    int16x8_t v130 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v121)), v128);
    *(int8x8_t *)v128.i8 = vqmovun_s16(v127);
    *(int8x8_t *)v127.i8 = vqmovun_s16(v129);
    *(int8x8_t *)v130.i8 = vqmovun_s16(v130);
    int8x8_t result = (int8x16_t *)v17;
    int8x16_t v131 = vzip1q_s8(v16, (int8x16_t)v127);
    int8x16_t v132 = vzip1q_s8((int8x16_t)v128, (int8x16_t)v130);
    int16x8_t v133 = v103[2].i8;
    vst2_s8(v133, (int8x8x2_t)v131);
    v103[3] = vzip2q_s8(v131, v132);
    int v134 = v13 - 1;
    LODWORD(v103) = v13 - 16;
    --v13;
    ++a2;
  }
  while ((int)v103 > 1);
  int16x8_t v135 = v105 + 8;
  int v136 = v105 + 32;
  int v137 = v105 + 40;
  float32x4_t v138 = v105 + 64;
  unsigned int v139 = v105 + 72;
  if (a4 <= 8) {
    int v140 = 8;
  }
  else {
    int v140 = a4;
  }
  int v141 = v134 - v140;
  a2 = v105;
  if (v141 >= 1)
  {
LABEL_24:
    int32x4_t v142 = result + 2;
    unsigned int v143 = v141 + 1;
    v144.i64[0] = 0xE000E000E000E00;
    v144.i64[1] = 0xE000E000E000E00;
    float32x4_t v145 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
    v146.i64[0] = -1;
    v146.i64[1] = -1;
    int16x8_t v147 = result[2].i8;
    do
    {
      int16x8_t v148 = *a2++;
      int16x8_t v149 = vaddq_s16(v148, v144);
      int16x8_t v150 = *v136++;
      int16x8_t v151 = v150;
      int16x8_t v152 = *v137++;
      int16x8_t v153 = vcltzq_s16(v149);
      int32x4_t v154 = (int32x4_t)vzip1q_s16(v149, v153);
      int32x4_t v155 = (int32x4_t)vzip2q_s16(v149, v153);
      int16x8_t v156 = vcltzq_s16(v151);
      float32x4_t v157 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v151, v156));
      float32x4_t v158 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v151, v156));
      int16x8_t v159 = vcltzq_s16(v152);
      float32x4_t v160 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v152, v159));
      float32x4_t v161 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v152, v159));
      float32x4_t v162 = vmulq_f32(vcvtq_f32_s32(v154), v145);
      float32x4_t v163 = vaddq_f32(v162, vmulq_f32(v7, v160));
      float32x4_t v164 = vaddq_f32(v162, vmulq_f32(v9, v157));
      float32x4_t v165 = vaddq_f32(v162, vmulq_f32(v10, v157));
      float32x4_t v166 = vmulq_f32(vcvtq_f32_s32(v155), v145);
      float32x4_t v167 = vaddq_f32(v164, vmulq_f32(v8, v160));
      float32x4_t v168 = vaddq_f32(v166, vmulq_f32(v7, v161));
      float32x4_t v169 = vaddq_f32(vaddq_f32(v166, vmulq_f32(v9, v158)), vmulq_f32(v8, v161));
      float32x4_t v170 = vaddq_f32(v166, vmulq_f32(v10, v158));
      int16x8_t v171 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v163)), vcvtnq_s32_f32(v168));
      int32x4_t v172 = vcvtnq_s32_f32(v170);
      int16x8_t v173 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v167)), vcvtnq_s32_f32(v169));
      int16x8_t v174 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v165)), v172);
      *(int8x8_t *)v172.i8 = vqmovun_s16(v171);
      *(int8x8_t *)v171.i8 = vqmovun_s16(v173);
      *(int8x8_t *)v174.i8 = vqmovun_s16(v174);
      int16x8_t v175 = v142[-2].i8;
      int8x16_t v176 = vzip1q_s8(v146, (int8x16_t)v171);
      int8x16_t v177 = vzip1q_s8((int8x16_t)v172, (int8x16_t)v174);
      vst2_s8(v175, (int8x8x2_t)v176);
      v142[-1] = vzip2q_s8(v176, v177);
      int16x8_t v178 = *v135++;
      int16x8_t v179 = v178;
      int16x8_t v180 = *v138++;
      int16x8_t v181 = v180;
      int16x8_t v182 = *v139++;
      int16x8_t v183 = vaddq_s16(v179, v144);
      int16x8_t v184 = vcltzq_s16(v183);
      int32x4_t v185 = (int32x4_t)vzip1q_s16(v183, v184);
      int32x4_t v186 = (int32x4_t)vzip2q_s16(v183, v184);
      int16x8_t v187 = vcltzq_s16(v181);
      float32x4_t v188 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v181, v187));
      float32x4_t v189 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v181, v187));
      int16x8_t v190 = vcltzq_s16(v182);
      float32x4_t v191 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v182, v190));
      float32x4_t v192 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v182, v190));
      float32x4_t v193 = vmulq_f32(vcvtq_f32_s32(v185), v145);
      float32x4_t v194 = vaddq_f32(v193, vmulq_f32(v7, v191));
      float32x4_t v195 = vaddq_f32(v193, vmulq_f32(v9, v188));
      float32x4_t v196 = vaddq_f32(v193, vmulq_f32(v10, v188));
      float32x4_t v197 = vmulq_f32(vcvtq_f32_s32(v186), v145);
      float32x4_t v198 = vaddq_f32(v197, vmulq_f32(v7, v192));
      float32x4_t v199 = vaddq_f32(vaddq_f32(v197, vmulq_f32(v9, v189)), vmulq_f32(v8, v192));
      float32x4_t v200 = vaddq_f32(v197, vmulq_f32(v10, v189));
      int16x8_t v201 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v194)), vcvtnq_s32_f32(v198));
      int16x8_t v202 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v195, vmulq_f32(v8, v191)))), vcvtnq_s32_f32(v199));
      int32x4_t v203 = vcvtnq_s32_f32(v200);
      int16x8_t v204 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v196)), v203);
      *(int8x8_t *)v203.i8 = vqmovun_s16(v201);
      *(int8x8_t *)v201.i8 = vqmovun_s16(v202);
      *(int8x8_t *)v204.i8 = vqmovun_s16(v204);
      int8x16_t v205 = vzip1q_s8(v146, (int8x16_t)v201);
      int8x16_t v206 = vzip1q_s8((int8x16_t)v203, (int8x16_t)v204);
      vst2_s8(v147, (int8x8x2_t)v205);
      v147 += a3;
      v142[1] = vzip2q_s8(v205, v206);
      --v143;
      int32x4_t v142 = (int8x16_t *)v147;
    }
    while (v143 > 1);
  }
  return result;
}

int8x16_t *from_444_to_32ARGB<8,8,(AlphaOutputMethod)2,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D65788Au);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBC886CBF);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBDA5DD8);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D873197u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int16x8_t v135 = a2 + 8;
    int v136 = a2 + 32;
    int v137 = a2 + 40;
    float32x4_t v138 = a2 + 64;
    unsigned int v139 = a2 + 72;
    int v141 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D4C4A9Bu);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCD01EA6);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBC489511);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D811A55u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D56DECBu);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCA68235);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBBFD26A);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D8912CCu);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  uint64_t v12 = 8 * a3;
  int v13 = a4 + 8;
  v14.i64[0] = 0xE000E000E000E00;
  v14.i64[1] = 0xE000E000E000E00;
  float32x4_t v15 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
  v16.i64[0] = -1;
  v16.i64[1] = -1;
  int64x2_t v17 = (char *)result;
  do
  {
    int16x8_t v18 = vaddq_s16(*a2, v14);
    int16x8_t v19 = a2[32];
    int16x8_t v20 = a2[40];
    int16x8_t v21 = vcltzq_s16(v18);
    int32x4_t v22 = (int32x4_t)vzip1q_s16(v18, v21);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v18, v21);
    int16x8_t v24 = vcltzq_s16(v19);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v19, v24));
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v19, v24));
    int16x8_t v27 = vcltzq_s16(v20);
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v20, v27));
    float32x4_t v29 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v20, v27));
    float32x4_t v30 = vmulq_f32(vcvtq_f32_s32(v22), v15);
    float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v7, v28));
    float32x4_t v32 = vaddq_f32(v30, vmulq_f32(v9, v25));
    float32x4_t v33 = vaddq_f32(v30, vmulq_f32(v10, v25));
    float32x4_t v34 = vmulq_f32(vcvtq_f32_s32(v23), v15);
    float32x4_t v35 = vaddq_f32(v32, vmulq_f32(v8, v28));
    float32x4_t v36 = vaddq_f32(v34, vmulq_f32(v7, v29));
    float32x4_t v37 = vaddq_f32(vaddq_f32(v34, vmulq_f32(v9, v26)), vmulq_f32(v8, v29));
    float32x4_t v38 = vaddq_f32(v34, vmulq_f32(v10, v26));
    int16x8_t v39 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), vcvtnq_s32_f32(v36));
    int32x4_t v40 = vcvtnq_s32_f32(v38);
    int16x8_t v41 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v35)), vcvtnq_s32_f32(v37));
    int16x8_t v42 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v33)), v40);
    *(int8x8_t *)v40.i8 = vqmovun_s16(v39);
    *(int8x8_t *)v39.i8 = vqmovun_s16(v41);
    *(int8x8_t *)v42.i8 = vqmovun_s16(v42);
    int8x16_t v43 = vzip1q_s8(v16, (int8x16_t)v39);
    int8x16_t v44 = vzip1q_s8((int8x16_t)v40, (int8x16_t)v42);
    vst2_s8(v17, (int8x8x2_t)v43);
    v17 += a3;
    result[1] = vzip2q_s8(v43, v44);
    int16x8_t v45 = vaddq_s16(a2[8], v14);
    int16x8_t v46 = a2[64];
    int16x8_t v47 = a2[72];
    int16x8_t v48 = vcltzq_s16(v45);
    int32x4_t v49 = (int32x4_t)vzip1q_s16(v45, v48);
    int32x4_t v50 = (int32x4_t)vzip2q_s16(v45, v48);
    int16x8_t v51 = vcltzq_s16(v46);
    float32x4_t v52 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v46, v51));
    int32x4_t v53 = (int32x4_t)vzip2q_s16(v46, v51);
    float32x4_t v54 = vcvtq_f32_s32(v49);
    float32x4_t v55 = vcvtq_f32_s32(v53);
    int16x8_t v56 = vcltzq_s16(v47);
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v47, v56));
    float32x4_t v58 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v47, v56));
    float32x4_t v59 = vmulq_f32(v54, v15);
    float32x4_t v60 = vaddq_f32(v59, vmulq_f32(v9, v52));
    float32x4_t v61 = vaddq_f32(v59, vmulq_f32(v7, v57));
    float32x4_t v62 = vaddq_f32(v59, vmulq_f32(v10, v52));
    float32x4_t v63 = vmulq_f32(vcvtq_f32_s32(v50), v15);
    float32x4_t v64 = vaddq_f32(v60, vmulq_f32(v8, v57));
    float32x4_t v65 = vaddq_f32(v63, vmulq_f32(v7, v58));
    float32x4_t v66 = vaddq_f32(v63, vmulq_f32(v9, v55));
    float32x4_t v67 = vaddq_f32(v63, vmulq_f32(v10, v55));
    int16x8_t v68 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v61)), vcvtnq_s32_f32(v65));
    int32x4_t v69 = vcvtnq_s32_f32(vaddq_f32(v66, vmulq_f32(v8, v58)));
    int32x4_t v70 = vcvtnq_s32_f32(v67);
    int16x8_t v71 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v62)), v70);
    *(int8x8_t *)v70.i8 = vqmovun_s16(v68);
    *(int8x8_t *)v68.i8 = vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v64)), v69));
    *(int8x8_t *)v69.i8 = vqmovun_s16(v71);
    int8x16_t v72 = vzip1q_s8(v16, (int8x16_t)v68);
    int8x16_t v73 = vzip1q_s8((int8x16_t)v70, (int8x16_t)v69);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v72);
    result[3] = vzip2q_s8(v72, v73);
    int16x8_t v75 = vaddq_s16(a2[16], v14);
    int16x8_t v76 = a2[48];
    int16x8_t v77 = a2[56];
    int16x8_t v78 = vcltzq_s16(v75);
    int32x4_t v79 = (int32x4_t)vzip1q_s16(v75, v78);
    int32x4_t v80 = (int32x4_t)vzip2q_s16(v75, v78);
    int16x8_t v81 = vcltzq_s16(v76);
    float32x4_t v82 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v76, v81));
    float32x4_t v83 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v76, v81));
    float32x4_t v84 = vcvtq_f32_s32(v79);
    int16x8_t v85 = vcltzq_s16(v77);
    float32x4_t v86 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v77, v85));
    float32x4_t v87 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v77, v85));
    float32x4_t v88 = vmulq_f32(v84, v15);
    float32x4_t v89 = vaddq_f32(v88, vmulq_f32(v9, v82));
    float32x4_t v90 = vaddq_f32(v88, vmulq_f32(v7, v86));
    float32x4_t v91 = vaddq_f32(v88, vmulq_f32(v10, v82));
    float32x4_t v92 = vmulq_f32(vcvtq_f32_s32(v80), v15);
    float32x4_t v93 = vaddq_f32(v92, vmulq_f32(v7, v87));
    float32x4_t v94 = vaddq_f32(v89, vmulq_f32(v8, v86));
    float32x4_t v95 = vaddq_f32(v92, vmulq_f32(v9, v83));
    float32x4_t v96 = vaddq_f32(v92, vmulq_f32(v10, v83));
    int32x4_t v97 = vcvtnq_s32_f32(vaddq_f32(v95, vmulq_f32(v8, v87)));
    int16x8_t v98 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v90)), vcvtnq_s32_f32(v93));
    int32x4_t v99 = vcvtnq_s32_f32(v96);
    int16x8_t v100 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v91)), v99);
    *(int8x8_t *)v99.i8 = vqmovun_s16(v98);
    *(int8x8_t *)v97.i8 = vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v94)), v97));
    *(int8x8_t *)v98.i8 = vqmovun_s16(v100);
    int8x16_t v101 = vzip1q_s8(v16, (int8x16_t)v97);
    int8x16_t v102 = vzip1q_s8((int8x16_t)v99, (int8x16_t)v98);
    int16x8_t v103 = (int8x16_t *)((char *)result + v12);
    int16x8_t v104 = &result->i8[v12];
    vst2_s8(v104, (int8x8x2_t)v101);
    v104 += 16;
    int16x8_t v105 = a2 + 1;
    *(int8x16_t *)int16x8_t v104 = vzip2q_s8(v101, v102);
    int16x8_t v106 = vaddq_s16(a2[24], v14);
    int16x8_t v107 = a2[80];
    int16x8_t v108 = a2[88];
    int16x8_t v109 = vcltzq_s16(v106);
    int32x4_t v110 = (int32x4_t)vzip1q_s16(v106, v109);
    int32x4_t v111 = (int32x4_t)vzip2q_s16(v106, v109);
    int16x8_t v112 = vcltzq_s16(v107);
    float32x4_t v113 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v107, v112));
    float32x4_t v114 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v107, v112));
    int16x8_t v115 = vcltzq_s16(v108);
    float32x4_t v116 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v108, v115));
    float32x4_t v117 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v108, v115));
    float32x4_t v118 = vmulq_f32(vcvtq_f32_s32(v110), v15);
    float32x4_t v119 = vaddq_f32(v118, vmulq_f32(v7, v116));
    float32x4_t v120 = vaddq_f32(v118, vmulq_f32(v9, v113));
    float32x4_t v121 = vaddq_f32(v118, vmulq_f32(v10, v113));
    float32x4_t v122 = vmulq_f32(vcvtq_f32_s32(v111), v15);
    float32x4_t v123 = vaddq_f32(v120, vmulq_f32(v8, v116));
    float32x4_t v124 = vaddq_f32(v122, vmulq_f32(v7, v117));
    float32x4_t v125 = vaddq_f32(vaddq_f32(v122, vmulq_f32(v9, v114)), vmulq_f32(v8, v117));
    float32x4_t v126 = vaddq_f32(v122, vmulq_f32(v10, v114));
    int16x8_t v127 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v119)), vcvtnq_s32_f32(v124));
    int32x4_t v128 = vcvtnq_s32_f32(v126);
    int16x8_t v129 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v123)), vcvtnq_s32_f32(v125));
    int16x8_t v130 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v121)), v128);
    *(int8x8_t *)v128.i8 = vqmovun_s16(v127);
    *(int8x8_t *)v127.i8 = vqmovun_s16(v129);
    *(int8x8_t *)v130.i8 = vqmovun_s16(v130);
    int8x8_t result = (int8x16_t *)v17;
    int8x16_t v131 = vzip1q_s8(v16, (int8x16_t)v127);
    int8x16_t v132 = vzip1q_s8((int8x16_t)v128, (int8x16_t)v130);
    int16x8_t v133 = v103[2].i8;
    vst2_s8(v133, (int8x8x2_t)v131);
    v103[3] = vzip2q_s8(v131, v132);
    int v134 = v13 - 1;
    LODWORD(v103) = v13 - 16;
    --v13;
    ++a2;
  }
  while ((int)v103 > 1);
  int16x8_t v135 = v105 + 8;
  int v136 = v105 + 32;
  int v137 = v105 + 40;
  float32x4_t v138 = v105 + 64;
  unsigned int v139 = v105 + 72;
  if (a4 <= 8) {
    int v140 = 8;
  }
  else {
    int v140 = a4;
  }
  int v141 = v134 - v140;
  a2 = v105;
  if (v141 >= 1)
  {
LABEL_24:
    int32x4_t v142 = result + 2;
    unsigned int v143 = v141 + 1;
    v144.i64[0] = 0xE000E000E000E00;
    v144.i64[1] = 0xE000E000E000E00;
    float32x4_t v145 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
    v146.i64[0] = -1;
    v146.i64[1] = -1;
    int16x8_t v147 = result[2].i8;
    do
    {
      int16x8_t v148 = *a2++;
      int16x8_t v149 = vaddq_s16(v148, v144);
      int16x8_t v150 = *v136++;
      int16x8_t v151 = v150;
      int16x8_t v152 = *v137++;
      int16x8_t v153 = vcltzq_s16(v149);
      int32x4_t v154 = (int32x4_t)vzip1q_s16(v149, v153);
      int32x4_t v155 = (int32x4_t)vzip2q_s16(v149, v153);
      int16x8_t v156 = vcltzq_s16(v151);
      float32x4_t v157 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v151, v156));
      float32x4_t v158 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v151, v156));
      int16x8_t v159 = vcltzq_s16(v152);
      float32x4_t v160 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v152, v159));
      float32x4_t v161 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v152, v159));
      float32x4_t v162 = vmulq_f32(vcvtq_f32_s32(v154), v145);
      float32x4_t v163 = vaddq_f32(v162, vmulq_f32(v7, v160));
      float32x4_t v164 = vaddq_f32(v162, vmulq_f32(v9, v157));
      float32x4_t v165 = vaddq_f32(v162, vmulq_f32(v10, v157));
      float32x4_t v166 = vmulq_f32(vcvtq_f32_s32(v155), v145);
      float32x4_t v167 = vaddq_f32(v164, vmulq_f32(v8, v160));
      float32x4_t v168 = vaddq_f32(v166, vmulq_f32(v7, v161));
      float32x4_t v169 = vaddq_f32(vaddq_f32(v166, vmulq_f32(v9, v158)), vmulq_f32(v8, v161));
      float32x4_t v170 = vaddq_f32(v166, vmulq_f32(v10, v158));
      int16x8_t v171 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v163)), vcvtnq_s32_f32(v168));
      int32x4_t v172 = vcvtnq_s32_f32(v170);
      int16x8_t v173 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v167)), vcvtnq_s32_f32(v169));
      int16x8_t v174 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v165)), v172);
      *(int8x8_t *)v172.i8 = vqmovun_s16(v171);
      *(int8x8_t *)v171.i8 = vqmovun_s16(v173);
      *(int8x8_t *)v174.i8 = vqmovun_s16(v174);
      int16x8_t v175 = v142[-2].i8;
      int8x16_t v176 = vzip1q_s8(v146, (int8x16_t)v171);
      int8x16_t v177 = vzip1q_s8((int8x16_t)v172, (int8x16_t)v174);
      vst2_s8(v175, (int8x8x2_t)v176);
      v142[-1] = vzip2q_s8(v176, v177);
      int16x8_t v178 = *v135++;
      int16x8_t v179 = v178;
      int16x8_t v180 = *v138++;
      int16x8_t v181 = v180;
      int16x8_t v182 = *v139++;
      int16x8_t v183 = vaddq_s16(v179, v144);
      int16x8_t v184 = vcltzq_s16(v183);
      int32x4_t v185 = (int32x4_t)vzip1q_s16(v183, v184);
      int32x4_t v186 = (int32x4_t)vzip2q_s16(v183, v184);
      int16x8_t v187 = vcltzq_s16(v181);
      float32x4_t v188 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v181, v187));
      float32x4_t v189 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v181, v187));
      int16x8_t v190 = vcltzq_s16(v182);
      float32x4_t v191 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v182, v190));
      float32x4_t v192 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v182, v190));
      float32x4_t v193 = vmulq_f32(vcvtq_f32_s32(v185), v145);
      float32x4_t v194 = vaddq_f32(v193, vmulq_f32(v7, v191));
      float32x4_t v195 = vaddq_f32(v193, vmulq_f32(v9, v188));
      float32x4_t v196 = vaddq_f32(v193, vmulq_f32(v10, v188));
      float32x4_t v197 = vmulq_f32(vcvtq_f32_s32(v186), v145);
      float32x4_t v198 = vaddq_f32(v197, vmulq_f32(v7, v192));
      float32x4_t v199 = vaddq_f32(vaddq_f32(v197, vmulq_f32(v9, v189)), vmulq_f32(v8, v192));
      float32x4_t v200 = vaddq_f32(v197, vmulq_f32(v10, v189));
      int16x8_t v201 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v194)), vcvtnq_s32_f32(v198));
      int16x8_t v202 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v195, vmulq_f32(v8, v191)))), vcvtnq_s32_f32(v199));
      int32x4_t v203 = vcvtnq_s32_f32(v200);
      int16x8_t v204 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v196)), v203);
      *(int8x8_t *)v203.i8 = vqmovun_s16(v201);
      *(int8x8_t *)v201.i8 = vqmovun_s16(v202);
      *(int8x8_t *)v204.i8 = vqmovun_s16(v204);
      int8x16_t v205 = vzip1q_s8(v146, (int8x16_t)v201);
      int8x16_t v206 = vzip1q_s8((int8x16_t)v203, (int8x16_t)v204);
      vst2_s8(v147, (int8x8x2_t)v205);
      v147 += a3;
      v142[1] = vzip2q_s8(v205, v206);
      --v143;
      int32x4_t v142 = (int8x16_t *)v147;
    }
    while (v143 > 1);
  }
  return result;
}

void from_444_to_32BGRA<8,8,(AlphaOutputMethod)1,false>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D65788Au);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBC886CBF);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBDA5DD8);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D873197u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int8x16_t v131 = a2 + 8;
    int8x16_t v132 = a2 + 32;
    int16x8_t v133 = a2 + 40;
    int v134 = a2 + 64;
    int16x8_t v135 = a2 + 72;
    int v137 = a4 - v11;
    if (a4 - v11 < 1) {
      return;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D4C4A9Bu);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCD01EA6);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBC489511);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D811A55u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D56DECBu);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCA68235);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBBFD26A);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D8912CCu);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
  float32x4_t v15 = (char *)a1;
  do
  {
    int8x16_t v16 = (int8x16_t *)((char *)a1 + 8 * a3);
    int64x2_t v17 = *(int64x2_t *)a5;
    int16x8_t v18 = vaddq_s16(*a2, v13);
    int16x8_t v19 = a2[32];
    int16x8_t v20 = a2[40];
    int16x8_t v21 = vcltzq_s16(v18);
    int32x4_t v22 = (int32x4_t)vzip1q_s16(v18, v21);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v18, v21);
    int16x8_t v24 = vcltzq_s16(v19);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v19, v24));
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v19, v24));
    int16x8_t v27 = vcltzq_s16(v20);
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v20, v27));
    float32x4_t v29 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v20, v27));
    float32x4_t v30 = vmulq_f32(vcvtq_f32_s32(v22), v14);
    float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v7, v28));
    float32x4_t v32 = vaddq_f32(v30, vmulq_f32(v9, v25));
    float32x4_t v33 = vaddq_f32(v30, vmulq_f32(v10, v25));
    float32x4_t v34 = vmulq_f32(vcvtq_f32_s32(v23), v14);
    float32x4_t v35 = vaddq_f32(v32, vmulq_f32(v8, v28));
    float32x4_t v36 = vaddq_f32(v34, vmulq_f32(v7, v29));
    float32x4_t v37 = vaddq_f32(vaddq_f32(v34, vmulq_f32(v9, v26)), vmulq_f32(v8, v29));
    float32x4_t v38 = vaddq_f32(v34, vmulq_f32(v10, v26));
    int16x8_t v39 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), vcvtnq_s32_f32(v36));
    int32x4_t v40 = vcvtnq_s32_f32(v38);
    int16x8_t v41 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v35)), vcvtnq_s32_f32(v37));
    int16x8_t v42 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v33)), v40);
    *(int8x8_t *)v40.i8 = vqmovun_s16(v39);
    *(int8x8_t *)v39.i8 = vqmovun_s16(v41);
    *(int8x8_t *)v42.i8 = vqmovun_s16(v42);
    int8x16_t v43 = a2 + 1;
    int8x16_t v44 = vzip1q_s8((int8x16_t)v42, (int8x16_t)v40);
    int8x16_t v45 = vzip1q_s8((int8x16_t)v39, *a5);
    vst2_s8(v15, (int8x8x2_t)v44);
    v15 += a3;
    a1[1] = vzip2q_s8(v44, v45);
    int16x8_t v46 = vaddq_s16(a2[8], v13);
    int16x8_t v47 = a2[64];
    int16x8_t v48 = a2[72];
    int16x8_t v49 = vcltzq_s16(v46);
    int32x4_t v50 = (int32x4_t)vzip1q_s16(v46, v49);
    int32x4_t v51 = (int32x4_t)vzip2q_s16(v46, v49);
    int16x8_t v52 = vcltzq_s16(v47);
    float32x4_t v53 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v47, v52));
    float32x4_t v54 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v47, v52));
    int16x8_t v55 = vcltzq_s16(v48);
    float32x4_t v56 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v48, v55));
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v48, v55));
    float32x4_t v58 = vmulq_f32(vcvtq_f32_s32(v50), v14);
    float32x4_t v59 = vaddq_f32(v58, vmulq_f32(v7, v56));
    float32x4_t v60 = vaddq_f32(v58, vmulq_f32(v9, v53));
    float32x4_t v61 = vaddq_f32(v58, vmulq_f32(v10, v53));
    float32x4_t v62 = vmulq_f32(vcvtq_f32_s32(v51), v14);
    float32x4_t v63 = vaddq_f32(v62, vmulq_f32(v7, v57));
    float32x4_t v64 = vaddq_f32(vaddq_f32(v62, vmulq_f32(v9, v54)), vmulq_f32(v8, v57));
    float32x4_t v65 = vaddq_f32(v62, vmulq_f32(v10, v54));
    int16x8_t v66 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v59)), vcvtnq_s32_f32(v63));
    int16x8_t v67 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v60, vmulq_f32(v8, v56)))), vcvtnq_s32_f32(v64));
    int32x4_t v68 = vcvtnq_s32_f32(v65);
    int16x8_t v69 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v61)), v68);
    *(int8x8_t *)v68.i8 = vqmovun_s16(v66);
    *(int8x8_t *)v66.i8 = vqmovun_s16(v67);
    *(int8x8_t *)v69.i8 = vqmovun_s16(v69);
    int8x16_t v70 = vzip1q_s8((int8x16_t)v69, (int8x16_t)v68);
    int8x16_t v71 = vzip1q_s8((int8x16_t)v66, (int8x16_t)vdupq_laneq_s64(v17, 1));
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v70);
    a1[3] = vzip2q_s8(v70, v71);
    int64x2_t v73 = *(int64x2_t *)((char *)a5 + 8 * a6);
    int16x8_t v74 = vaddq_s16(a2[16], v13);
    int16x8_t v75 = a2[48];
    int16x8_t v76 = a2[56];
    int16x8_t v77 = vcltzq_s16(v74);
    int32x4_t v78 = (int32x4_t)vzip1q_s16(v74, v77);
    int32x4_t v79 = (int32x4_t)vzip2q_s16(v74, v77);
    float32x4_t v80 = vcvtq_f32_s32(v78);
    int16x8_t v81 = vcltzq_s16(v75);
    float32x4_t v82 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v75, v81));
    float32x4_t v83 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v75, v81));
    int16x8_t v84 = vcltzq_s16(v76);
    float32x4_t v85 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v76, v84));
    float32x4_t v86 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v76, v84));
    float32x4_t v87 = vmulq_f32(v80, v14);
    float32x4_t v88 = vaddq_f32(v87, vmulq_f32(v9, v82));
    float32x4_t v89 = vaddq_f32(v87, vmulq_f32(v7, v85));
    float32x4_t v90 = vaddq_f32(v87, vmulq_f32(v10, v82));
    float32x4_t v91 = vmulq_f32(vcvtq_f32_s32(v79), v14);
    float32x4_t v92 = vaddq_f32(v91, vmulq_f32(v7, v86));
    float32x4_t v93 = vaddq_f32(vaddq_f32(v91, vmulq_f32(v9, v83)), vmulq_f32(v8, v86));
    float32x4_t v94 = vaddq_f32(v91, vmulq_f32(v10, v83));
    int16x8_t v95 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v89)), vcvtnq_s32_f32(v92));
    int16x8_t v96 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v88, vmulq_f32(v8, v85)))), vcvtnq_s32_f32(v93));
    int32x4_t v97 = vcvtnq_s32_f32(v94);
    int16x8_t v98 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v90)), v97);
    a1 = (int8x16_t *)v15;
    *(int8x8_t *)v97.i8 = vqmovun_s16(v95);
    *(int8x8_t *)v95.i8 = vqmovun_s16(v96);
    *(int8x8_t *)v98.i8 = vqmovun_s16(v98);
    int8x16_t v99 = vzip1q_s8((int8x16_t)v98, (int8x16_t)v97);
    int8x16_t v100 = vzip1q_s8((int8x16_t)v95, (int8x16_t)v73);
    int8x16_t v101 = (char *)v16;
    vst2_s8(v101, (int8x8x2_t)v99);
    v101 += 16;
    *(int8x16_t *)int8x16_t v101 = vzip2q_s8(v99, v100);
    int16x8_t v102 = vaddq_s16(a2[24], v13);
    int16x8_t v103 = a2[80];
    int16x8_t v104 = a2[88];
    int16x8_t v105 = vcltzq_s16(v102);
    int32x4_t v106 = (int32x4_t)vzip1q_s16(v102, v105);
    int32x4_t v107 = (int32x4_t)vzip2q_s16(v102, v105);
    int16x8_t v108 = vcltzq_s16(v103);
    float32x4_t v109 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v103, v108));
    float32x4_t v110 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v103, v108));
    int16x8_t v111 = vcltzq_s16(v104);
    float32x4_t v112 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v104, v111));
    float32x4_t v113 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v104, v111));
    float32x4_t v114 = vmulq_f32(vcvtq_f32_s32(v106), v14);
    float32x4_t v115 = vaddq_f32(v114, vmulq_f32(v7, v112));
    float32x4_t v116 = vaddq_f32(v114, vmulq_f32(v9, v109));
    float32x4_t v117 = vaddq_f32(v114, vmulq_f32(v10, v109));
    float32x4_t v118 = vmulq_f32(vcvtq_f32_s32(v107), v14);
    float32x4_t v119 = vaddq_f32(v116, vmulq_f32(v8, v112));
    float32x4_t v120 = vaddq_f32(v118, vmulq_f32(v7, v113));
    float32x4_t v121 = vaddq_f32(vaddq_f32(v118, vmulq_f32(v9, v110)), vmulq_f32(v8, v113));
    float32x4_t v122 = vaddq_f32(v118, vmulq_f32(v10, v110));
    int16x8_t v123 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v115)), vcvtnq_s32_f32(v120));
    int32x4_t v124 = vcvtnq_s32_f32(v122);
    int16x8_t v125 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v119)), vcvtnq_s32_f32(v121));
    int16x8_t v126 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v117)), v124);
    *(int8x8_t *)v124.i8 = vqmovun_s16(v123);
    *(int8x8_t *)v123.i8 = vqmovun_s16(v125);
    *(int8x8_t *)v126.i8 = vqmovun_s16(v126);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v127 = vzip1q_s8((int8x16_t)v126, (int8x16_t)v124);
    int8x16_t v128 = vzip1q_s8((int8x16_t)v123, (int8x16_t)vdupq_laneq_s64(v73, 1));
    int16x8_t v129 = v16[2].i8;
    vst2_s8(v129, (int8x8x2_t)v127);
    v16[3] = vzip2q_s8(v127, v128);
    int v130 = v12 - 1;
    LODWORD(v129) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v129 > 1);
  int8x16_t v131 = v43 + 8;
  int8x16_t v132 = v43 + 32;
  int16x8_t v133 = v43 + 40;
  int v134 = v43 + 64;
  int16x8_t v135 = v43 + 72;
  if (a4 <= 8) {
    int v136 = 8;
  }
  else {
    int v136 = a4;
  }
  int v137 = v130 - v136;
  a2 = v43;
  if (v130 - v136 >= 1)
  {
LABEL_24:
    float32x4_t v138 = a1 + 2;
    unsigned int v139 = v137 + 1;
    v140.i64[0] = 0xE000E000E000E00;
    v140.i64[1] = 0xE000E000E000E00;
    float32x4_t v141 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
    int32x4_t v142 = a1[2].i8;
    do
    {
      int16x8_t v143 = *a2++;
      int16x8_t v144 = v143;
      int16x8_t v145 = *v132++;
      int16x8_t v146 = v145;
      int16x8_t v147 = vaddq_s16(v144, v140);
      int16x8_t v148 = *v133++;
      int16x8_t v149 = vcltzq_s16(v147);
      int32x4_t v150 = (int32x4_t)vzip1q_s16(v147, v149);
      int32x4_t v151 = (int32x4_t)vzip2q_s16(v147, v149);
      float32x4_t v152 = vcvtq_f32_s32(v150);
      int16x8_t v153 = vcltzq_s16(v146);
      float32x4_t v154 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v146, v153));
      float32x4_t v155 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v146, v153));
      int16x8_t v156 = vcltzq_s16(v148);
      float32x4_t v157 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v148, v156));
      float32x4_t v158 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v148, v156));
      float32x4_t v159 = vmulq_f32(v152, v141);
      float32x4_t v160 = vaddq_f32(v159, vmulq_f32(v9, v154));
      float32x4_t v161 = vaddq_f32(v159, vmulq_f32(v7, v157));
      float32x4_t v162 = vaddq_f32(v159, vmulq_f32(v10, v154));
      float32x4_t v163 = vmulq_f32(vcvtq_f32_s32(v151), v141);
      float32x4_t v164 = vaddq_f32(v163, vmulq_f32(v7, v158));
      float32x4_t v165 = vaddq_f32(vaddq_f32(v163, vmulq_f32(v9, v155)), vmulq_f32(v8, v158));
      float32x4_t v166 = vaddq_f32(v163, vmulq_f32(v10, v155));
      int16x8_t v167 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v161)), vcvtnq_s32_f32(v164));
      int16x8_t v168 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v160, vmulq_f32(v8, v157)))), vcvtnq_s32_f32(v165));
      int16x8_t v169 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v162)), vcvtnq_s32_f32(v166));
      int64x2_t v170 = *(int64x2_t *)a5;
      *(int8x8_t *)v167.i8 = vqmovun_s16(v167);
      *(int8x8_t *)v162.f32 = vqmovun_s16(v168);
      *(int8x8_t *)v169.i8 = vqmovun_s16(v169);
      int8x16_t v171 = vzip1q_s8((int8x16_t)v169, (int8x16_t)v167);
      int8x16_t v172 = vzip1q_s8((int8x16_t)v162, *a5);
      int16x8_t v173 = v138[-2].i8;
      vst2_s8(v173, (int8x8x2_t)v171);
      v138[-1] = vzip2q_s8(v171, v172);
      int16x8_t v174 = *v131++;
      int16x8_t v175 = v174;
      int16x8_t v176 = *v134++;
      int16x8_t v177 = v176;
      int16x8_t v178 = *v135++;
      int16x8_t v179 = vaddq_s16(v175, v140);
      int16x8_t v180 = vcltzq_s16(v179);
      int32x4_t v181 = (int32x4_t)vzip1q_s16(v179, v180);
      int32x4_t v182 = (int32x4_t)vzip2q_s16(v179, v180);
      int16x8_t v183 = vcltzq_s16(v177);
      float32x4_t v184 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v177, v183));
      float32x4_t v185 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v177, v183));
      int16x8_t v186 = vcltzq_s16(v178);
      float32x4_t v187 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v178, v186));
      float32x4_t v188 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v178, v186));
      float32x4_t v189 = vmulq_f32(vcvtq_f32_s32(v181), v141);
      float32x4_t v190 = vaddq_f32(v189, vmulq_f32(v7, v187));
      float32x4_t v191 = vaddq_f32(v189, vmulq_f32(v9, v184));
      float32x4_t v192 = vaddq_f32(v189, vmulq_f32(v10, v184));
      float32x4_t v193 = vmulq_f32(vcvtq_f32_s32(v182), v141);
      float32x4_t v194 = vaddq_f32(v193, vmulq_f32(v7, v188));
      float32x4_t v195 = vaddq_f32(vaddq_f32(v193, vmulq_f32(v9, v185)), vmulq_f32(v8, v188));
      float32x4_t v196 = vaddq_f32(v193, vmulq_f32(v10, v185));
      int16x8_t v197 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v190)), vcvtnq_s32_f32(v194));
      int16x8_t v198 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v191, vmulq_f32(v8, v187)))), vcvtnq_s32_f32(v195));
      int32x4_t v199 = vcvtnq_s32_f32(v196);
      int16x8_t v200 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v192)), v199);
      *(int8x8_t *)v199.i8 = vqmovun_s16(v197);
      *(int8x8_t *)v197.i8 = vqmovun_s16(v198);
      *(int8x8_t *)v200.i8 = vqmovun_s16(v200);
      int8x16_t v201 = vzip1q_s8((int8x16_t)v200, (int8x16_t)v199);
      int8x16_t v202 = vzip1q_s8((int8x16_t)v197, (int8x16_t)vdupq_laneq_s64(v170, 1));
      vst2_s8(v142, (int8x8x2_t)v201);
      v142 += a3;
      v138[1] = vzip2q_s8(v201, v202);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v139;
      float32x4_t v138 = (int8x16_t *)v142;
    }
    while (v139 > 1);
  }
}

void from_444_to_32BGRA<8,8,(AlphaOutputMethod)1,true>(int8x16_t *a1, int16x8_t *a2, int a3, int a4, int8x16_t *a5, unsigned int a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D65788Au);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBC886CBF);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBDA5DD8);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D873197u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int8x16_t v131 = a2 + 8;
    int8x16_t v132 = a2 + 32;
    int16x8_t v133 = a2 + 40;
    int v134 = a2 + 64;
    int16x8_t v135 = a2 + 72;
    int v137 = a4 - v11;
    if (a4 - v11 < 1) {
      return;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D4C4A9Bu);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCD01EA6);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBC489511);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D811A55u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D56DECBu);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCA68235);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBBFD26A);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D8912CCu);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
  float32x4_t v15 = (char *)a1;
  do
  {
    int8x16_t v16 = (int8x16_t *)((char *)a1 + 8 * a3);
    int64x2_t v17 = *(int64x2_t *)a5;
    int16x8_t v18 = vaddq_s16(*a2, v13);
    int16x8_t v19 = a2[32];
    int16x8_t v20 = a2[40];
    int16x8_t v21 = vcltzq_s16(v18);
    int32x4_t v22 = (int32x4_t)vzip1q_s16(v18, v21);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v18, v21);
    int16x8_t v24 = vcltzq_s16(v19);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v19, v24));
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v19, v24));
    int16x8_t v27 = vcltzq_s16(v20);
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v20, v27));
    float32x4_t v29 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v20, v27));
    float32x4_t v30 = vmulq_f32(vcvtq_f32_s32(v22), v14);
    float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v7, v28));
    float32x4_t v32 = vaddq_f32(v30, vmulq_f32(v9, v25));
    float32x4_t v33 = vaddq_f32(v30, vmulq_f32(v10, v25));
    float32x4_t v34 = vmulq_f32(vcvtq_f32_s32(v23), v14);
    float32x4_t v35 = vaddq_f32(v32, vmulq_f32(v8, v28));
    float32x4_t v36 = vaddq_f32(v34, vmulq_f32(v7, v29));
    float32x4_t v37 = vaddq_f32(vaddq_f32(v34, vmulq_f32(v9, v26)), vmulq_f32(v8, v29));
    float32x4_t v38 = vaddq_f32(v34, vmulq_f32(v10, v26));
    int16x8_t v39 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), vcvtnq_s32_f32(v36));
    int32x4_t v40 = vcvtnq_s32_f32(v38);
    int16x8_t v41 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v35)), vcvtnq_s32_f32(v37));
    int16x8_t v42 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v33)), v40);
    *(int8x8_t *)v40.i8 = vqmovun_s16(v39);
    *(int8x8_t *)v39.i8 = vqmovun_s16(v41);
    *(int8x8_t *)v42.i8 = vqmovun_s16(v42);
    int8x16_t v43 = a2 + 1;
    int8x16_t v44 = vzip1q_s8((int8x16_t)v42, (int8x16_t)v40);
    int8x16_t v45 = vzip1q_s8((int8x16_t)v39, *a5);
    vst2_s8(v15, (int8x8x2_t)v44);
    v15 += a3;
    a1[1] = vzip2q_s8(v44, v45);
    int16x8_t v46 = vaddq_s16(a2[8], v13);
    int16x8_t v47 = a2[64];
    int16x8_t v48 = a2[72];
    int16x8_t v49 = vcltzq_s16(v46);
    int32x4_t v50 = (int32x4_t)vzip1q_s16(v46, v49);
    int32x4_t v51 = (int32x4_t)vzip2q_s16(v46, v49);
    int16x8_t v52 = vcltzq_s16(v47);
    float32x4_t v53 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v47, v52));
    float32x4_t v54 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v47, v52));
    int16x8_t v55 = vcltzq_s16(v48);
    float32x4_t v56 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v48, v55));
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v48, v55));
    float32x4_t v58 = vmulq_f32(vcvtq_f32_s32(v50), v14);
    float32x4_t v59 = vaddq_f32(v58, vmulq_f32(v7, v56));
    float32x4_t v60 = vaddq_f32(v58, vmulq_f32(v9, v53));
    float32x4_t v61 = vaddq_f32(v58, vmulq_f32(v10, v53));
    float32x4_t v62 = vmulq_f32(vcvtq_f32_s32(v51), v14);
    float32x4_t v63 = vaddq_f32(v62, vmulq_f32(v7, v57));
    float32x4_t v64 = vaddq_f32(vaddq_f32(v62, vmulq_f32(v9, v54)), vmulq_f32(v8, v57));
    float32x4_t v65 = vaddq_f32(v62, vmulq_f32(v10, v54));
    int16x8_t v66 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v59)), vcvtnq_s32_f32(v63));
    int16x8_t v67 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v60, vmulq_f32(v8, v56)))), vcvtnq_s32_f32(v64));
    int32x4_t v68 = vcvtnq_s32_f32(v65);
    int16x8_t v69 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v61)), v68);
    *(int8x8_t *)v68.i8 = vqmovun_s16(v66);
    *(int8x8_t *)v66.i8 = vqmovun_s16(v67);
    *(int8x8_t *)v69.i8 = vqmovun_s16(v69);
    int8x16_t v70 = vzip1q_s8((int8x16_t)v69, (int8x16_t)v68);
    int8x16_t v71 = vzip1q_s8((int8x16_t)v66, (int8x16_t)vdupq_laneq_s64(v17, 1));
    i8 = a1[2].i8;
    vst2_s8(i8, (int8x8x2_t)v70);
    a1[3] = vzip2q_s8(v70, v71);
    int64x2_t v73 = *(int64x2_t *)((char *)a5 + 8 * a6);
    int16x8_t v74 = vaddq_s16(a2[16], v13);
    int16x8_t v75 = a2[48];
    int16x8_t v76 = a2[56];
    int16x8_t v77 = vcltzq_s16(v74);
    int32x4_t v78 = (int32x4_t)vzip1q_s16(v74, v77);
    int32x4_t v79 = (int32x4_t)vzip2q_s16(v74, v77);
    float32x4_t v80 = vcvtq_f32_s32(v78);
    int16x8_t v81 = vcltzq_s16(v75);
    float32x4_t v82 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v75, v81));
    float32x4_t v83 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v75, v81));
    int16x8_t v84 = vcltzq_s16(v76);
    float32x4_t v85 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v76, v84));
    float32x4_t v86 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v76, v84));
    float32x4_t v87 = vmulq_f32(v80, v14);
    float32x4_t v88 = vaddq_f32(v87, vmulq_f32(v9, v82));
    float32x4_t v89 = vaddq_f32(v87, vmulq_f32(v7, v85));
    float32x4_t v90 = vaddq_f32(v87, vmulq_f32(v10, v82));
    float32x4_t v91 = vmulq_f32(vcvtq_f32_s32(v79), v14);
    float32x4_t v92 = vaddq_f32(v91, vmulq_f32(v7, v86));
    float32x4_t v93 = vaddq_f32(vaddq_f32(v91, vmulq_f32(v9, v83)), vmulq_f32(v8, v86));
    float32x4_t v94 = vaddq_f32(v91, vmulq_f32(v10, v83));
    int16x8_t v95 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v89)), vcvtnq_s32_f32(v92));
    int16x8_t v96 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v88, vmulq_f32(v8, v85)))), vcvtnq_s32_f32(v93));
    int32x4_t v97 = vcvtnq_s32_f32(v94);
    int16x8_t v98 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v90)), v97);
    a1 = (int8x16_t *)v15;
    *(int8x8_t *)v97.i8 = vqmovun_s16(v95);
    *(int8x8_t *)v95.i8 = vqmovun_s16(v96);
    *(int8x8_t *)v98.i8 = vqmovun_s16(v98);
    int8x16_t v99 = vzip1q_s8((int8x16_t)v98, (int8x16_t)v97);
    int8x16_t v100 = vzip1q_s8((int8x16_t)v95, (int8x16_t)v73);
    int8x16_t v101 = (char *)v16;
    vst2_s8(v101, (int8x8x2_t)v99);
    v101 += 16;
    *(int8x16_t *)int8x16_t v101 = vzip2q_s8(v99, v100);
    int16x8_t v102 = vaddq_s16(a2[24], v13);
    int16x8_t v103 = a2[80];
    int16x8_t v104 = a2[88];
    int16x8_t v105 = vcltzq_s16(v102);
    int32x4_t v106 = (int32x4_t)vzip1q_s16(v102, v105);
    int32x4_t v107 = (int32x4_t)vzip2q_s16(v102, v105);
    int16x8_t v108 = vcltzq_s16(v103);
    float32x4_t v109 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v103, v108));
    float32x4_t v110 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v103, v108));
    int16x8_t v111 = vcltzq_s16(v104);
    float32x4_t v112 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v104, v111));
    float32x4_t v113 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v104, v111));
    float32x4_t v114 = vmulq_f32(vcvtq_f32_s32(v106), v14);
    float32x4_t v115 = vaddq_f32(v114, vmulq_f32(v7, v112));
    float32x4_t v116 = vaddq_f32(v114, vmulq_f32(v9, v109));
    float32x4_t v117 = vaddq_f32(v114, vmulq_f32(v10, v109));
    float32x4_t v118 = vmulq_f32(vcvtq_f32_s32(v107), v14);
    float32x4_t v119 = vaddq_f32(v116, vmulq_f32(v8, v112));
    float32x4_t v120 = vaddq_f32(v118, vmulq_f32(v7, v113));
    float32x4_t v121 = vaddq_f32(vaddq_f32(v118, vmulq_f32(v9, v110)), vmulq_f32(v8, v113));
    float32x4_t v122 = vaddq_f32(v118, vmulq_f32(v10, v110));
    int16x8_t v123 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v115)), vcvtnq_s32_f32(v120));
    int32x4_t v124 = vcvtnq_s32_f32(v122);
    int16x8_t v125 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v119)), vcvtnq_s32_f32(v121));
    int16x8_t v126 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v117)), v124);
    *(int8x8_t *)v124.i8 = vqmovun_s16(v123);
    *(int8x8_t *)v123.i8 = vqmovun_s16(v125);
    *(int8x8_t *)v126.i8 = vqmovun_s16(v126);
    a5 = (int8x16_t *)((char *)a5 + a6);
    int8x16_t v127 = vzip1q_s8((int8x16_t)v126, (int8x16_t)v124);
    int8x16_t v128 = vzip1q_s8((int8x16_t)v123, (int8x16_t)vdupq_laneq_s64(v73, 1));
    int16x8_t v129 = v16[2].i8;
    vst2_s8(v129, (int8x8x2_t)v127);
    v16[3] = vzip2q_s8(v127, v128);
    int v130 = v12 - 1;
    LODWORD(v129) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v129 > 1);
  int8x16_t v131 = v43 + 8;
  int8x16_t v132 = v43 + 32;
  int16x8_t v133 = v43 + 40;
  int v134 = v43 + 64;
  int16x8_t v135 = v43 + 72;
  if (a4 <= 8) {
    int v136 = 8;
  }
  else {
    int v136 = a4;
  }
  int v137 = v130 - v136;
  a2 = v43;
  if (v130 - v136 >= 1)
  {
LABEL_24:
    float32x4_t v138 = a1 + 2;
    unsigned int v139 = v137 + 1;
    v140.i64[0] = 0xE000E000E000E00;
    v140.i64[1] = 0xE000E000E000E00;
    float32x4_t v141 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
    int32x4_t v142 = a1[2].i8;
    do
    {
      int16x8_t v143 = *a2++;
      int16x8_t v144 = v143;
      int16x8_t v145 = *v132++;
      int16x8_t v146 = v145;
      int16x8_t v147 = vaddq_s16(v144, v140);
      int16x8_t v148 = *v133++;
      int16x8_t v149 = vcltzq_s16(v147);
      int32x4_t v150 = (int32x4_t)vzip1q_s16(v147, v149);
      int32x4_t v151 = (int32x4_t)vzip2q_s16(v147, v149);
      float32x4_t v152 = vcvtq_f32_s32(v150);
      int16x8_t v153 = vcltzq_s16(v146);
      float32x4_t v154 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v146, v153));
      float32x4_t v155 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v146, v153));
      int16x8_t v156 = vcltzq_s16(v148);
      float32x4_t v157 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v148, v156));
      float32x4_t v158 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v148, v156));
      float32x4_t v159 = vmulq_f32(v152, v141);
      float32x4_t v160 = vaddq_f32(v159, vmulq_f32(v9, v154));
      float32x4_t v161 = vaddq_f32(v159, vmulq_f32(v7, v157));
      float32x4_t v162 = vaddq_f32(v159, vmulq_f32(v10, v154));
      float32x4_t v163 = vmulq_f32(vcvtq_f32_s32(v151), v141);
      float32x4_t v164 = vaddq_f32(v163, vmulq_f32(v7, v158));
      float32x4_t v165 = vaddq_f32(vaddq_f32(v163, vmulq_f32(v9, v155)), vmulq_f32(v8, v158));
      float32x4_t v166 = vaddq_f32(v163, vmulq_f32(v10, v155));
      int16x8_t v167 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v161)), vcvtnq_s32_f32(v164));
      int16x8_t v168 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v160, vmulq_f32(v8, v157)))), vcvtnq_s32_f32(v165));
      int16x8_t v169 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v162)), vcvtnq_s32_f32(v166));
      int64x2_t v170 = *(int64x2_t *)a5;
      *(int8x8_t *)v167.i8 = vqmovun_s16(v167);
      *(int8x8_t *)v162.f32 = vqmovun_s16(v168);
      *(int8x8_t *)v169.i8 = vqmovun_s16(v169);
      int8x16_t v171 = vzip1q_s8((int8x16_t)v169, (int8x16_t)v167);
      int8x16_t v172 = vzip1q_s8((int8x16_t)v162, *a5);
      int16x8_t v173 = v138[-2].i8;
      vst2_s8(v173, (int8x8x2_t)v171);
      v138[-1] = vzip2q_s8(v171, v172);
      int16x8_t v174 = *v131++;
      int16x8_t v175 = v174;
      int16x8_t v176 = *v134++;
      int16x8_t v177 = v176;
      int16x8_t v178 = *v135++;
      int16x8_t v179 = vaddq_s16(v175, v140);
      int16x8_t v180 = vcltzq_s16(v179);
      int32x4_t v181 = (int32x4_t)vzip1q_s16(v179, v180);
      int32x4_t v182 = (int32x4_t)vzip2q_s16(v179, v180);
      int16x8_t v183 = vcltzq_s16(v177);
      float32x4_t v184 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v177, v183));
      float32x4_t v185 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v177, v183));
      int16x8_t v186 = vcltzq_s16(v178);
      float32x4_t v187 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v178, v186));
      float32x4_t v188 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v178, v186));
      float32x4_t v189 = vmulq_f32(vcvtq_f32_s32(v181), v141);
      float32x4_t v190 = vaddq_f32(v189, vmulq_f32(v7, v187));
      float32x4_t v191 = vaddq_f32(v189, vmulq_f32(v9, v184));
      float32x4_t v192 = vaddq_f32(v189, vmulq_f32(v10, v184));
      float32x4_t v193 = vmulq_f32(vcvtq_f32_s32(v182), v141);
      float32x4_t v194 = vaddq_f32(v193, vmulq_f32(v7, v188));
      float32x4_t v195 = vaddq_f32(vaddq_f32(v193, vmulq_f32(v9, v185)), vmulq_f32(v8, v188));
      float32x4_t v196 = vaddq_f32(v193, vmulq_f32(v10, v185));
      int16x8_t v197 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v190)), vcvtnq_s32_f32(v194));
      int16x8_t v198 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v191, vmulq_f32(v8, v187)))), vcvtnq_s32_f32(v195));
      int32x4_t v199 = vcvtnq_s32_f32(v196);
      int16x8_t v200 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v192)), v199);
      *(int8x8_t *)v199.i8 = vqmovun_s16(v197);
      *(int8x8_t *)v197.i8 = vqmovun_s16(v198);
      *(int8x8_t *)v200.i8 = vqmovun_s16(v200);
      int8x16_t v201 = vzip1q_s8((int8x16_t)v200, (int8x16_t)v199);
      int8x16_t v202 = vzip1q_s8((int8x16_t)v197, (int8x16_t)vdupq_laneq_s64(v170, 1));
      vst2_s8(v142, (int8x8x2_t)v201);
      v142 += a3;
      v138[1] = vzip2q_s8(v201, v202);
      a5 = (int8x16_t *)((char *)a5 + a6);
      --v139;
      float32x4_t v138 = (int8x16_t *)v142;
    }
    while (v139 > 1);
  }
}

int8x16_t *from_444_to_32BGRA<8,8,(AlphaOutputMethod)2,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D65788Au);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBC886CBF);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBDA5DD8);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D873197u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int16x8_t v135 = a2 + 8;
    int v136 = a2 + 32;
    int v137 = a2 + 40;
    float32x4_t v138 = a2 + 64;
    unsigned int v139 = a2 + 72;
    int v141 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D4C4A9Bu);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCD01EA6);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBC489511);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D811A55u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D56DECBu);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCA68235);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBBFD26A);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D8912CCu);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  uint64_t v12 = 8 * a3;
  int v13 = a4 + 8;
  v14.i64[0] = 0xE000E000E000E00;
  v14.i64[1] = 0xE000E000E000E00;
  float32x4_t v15 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
  v16.i64[0] = -1;
  v16.i64[1] = -1;
  int64x2_t v17 = (char *)result;
  do
  {
    int16x8_t v18 = vaddq_s16(*a2, v14);
    int16x8_t v19 = a2[32];
    int16x8_t v20 = a2[40];
    int16x8_t v21 = vcltzq_s16(v18);
    int32x4_t v22 = (int32x4_t)vzip1q_s16(v18, v21);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v18, v21);
    int16x8_t v24 = vcltzq_s16(v19);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v19, v24));
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v19, v24));
    int16x8_t v27 = vcltzq_s16(v20);
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v20, v27));
    float32x4_t v29 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v20, v27));
    float32x4_t v30 = vmulq_f32(vcvtq_f32_s32(v22), v15);
    float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v7, v28));
    float32x4_t v32 = vaddq_f32(v30, vmulq_f32(v9, v25));
    float32x4_t v33 = vaddq_f32(v30, vmulq_f32(v10, v25));
    float32x4_t v34 = vmulq_f32(vcvtq_f32_s32(v23), v15);
    float32x4_t v35 = vaddq_f32(v32, vmulq_f32(v8, v28));
    float32x4_t v36 = vaddq_f32(v34, vmulq_f32(v7, v29));
    float32x4_t v37 = vaddq_f32(vaddq_f32(v34, vmulq_f32(v9, v26)), vmulq_f32(v8, v29));
    float32x4_t v38 = vaddq_f32(v34, vmulq_f32(v10, v26));
    int16x8_t v39 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), vcvtnq_s32_f32(v36));
    int32x4_t v40 = vcvtnq_s32_f32(v38);
    int16x8_t v41 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v35)), vcvtnq_s32_f32(v37));
    int16x8_t v42 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v33)), v40);
    *(int8x8_t *)v40.i8 = vqmovun_s16(v39);
    *(int8x8_t *)v39.i8 = vqmovun_s16(v41);
    *(int8x8_t *)v42.i8 = vqmovun_s16(v42);
    int8x16_t v43 = vzip1q_s8((int8x16_t)v42, (int8x16_t)v40);
    int8x16_t v44 = vzip1q_s8((int8x16_t)v39, v16);
    vst2_s8(v17, (int8x8x2_t)v43);
    v17 += a3;
    result[1] = vzip2q_s8(v43, v44);
    int16x8_t v45 = vaddq_s16(a2[8], v14);
    int16x8_t v46 = a2[64];
    int16x8_t v47 = a2[72];
    int16x8_t v48 = vcltzq_s16(v45);
    int32x4_t v49 = (int32x4_t)vzip1q_s16(v45, v48);
    int32x4_t v50 = (int32x4_t)vzip2q_s16(v45, v48);
    int16x8_t v51 = vcltzq_s16(v46);
    float32x4_t v52 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v46, v51));
    int32x4_t v53 = (int32x4_t)vzip2q_s16(v46, v51);
    float32x4_t v54 = vcvtq_f32_s32(v49);
    float32x4_t v55 = vcvtq_f32_s32(v53);
    int16x8_t v56 = vcltzq_s16(v47);
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v47, v56));
    float32x4_t v58 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v47, v56));
    float32x4_t v59 = vmulq_f32(v54, v15);
    float32x4_t v60 = vaddq_f32(v59, vmulq_f32(v9, v52));
    float32x4_t v61 = vaddq_f32(v59, vmulq_f32(v7, v57));
    float32x4_t v62 = vaddq_f32(v59, vmulq_f32(v10, v52));
    float32x4_t v63 = vmulq_f32(vcvtq_f32_s32(v50), v15);
    float32x4_t v64 = vaddq_f32(v60, vmulq_f32(v8, v57));
    float32x4_t v65 = vaddq_f32(v63, vmulq_f32(v7, v58));
    float32x4_t v66 = vaddq_f32(v63, vmulq_f32(v9, v55));
    float32x4_t v67 = vaddq_f32(v63, vmulq_f32(v10, v55));
    int16x8_t v68 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v61)), vcvtnq_s32_f32(v65));
    int32x4_t v69 = vcvtnq_s32_f32(vaddq_f32(v66, vmulq_f32(v8, v58)));
    int32x4_t v70 = vcvtnq_s32_f32(v67);
    int16x8_t v71 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v62)), v70);
    *(int8x8_t *)v70.i8 = vqmovun_s16(v68);
    *(int8x8_t *)v68.i8 = vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v64)), v69));
    *(int8x8_t *)v69.i8 = vqmovun_s16(v71);
    int8x16_t v72 = vzip1q_s8((int8x16_t)v69, (int8x16_t)v70);
    int8x16_t v73 = vzip1q_s8((int8x16_t)v68, v16);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v72);
    result[3] = vzip2q_s8(v72, v73);
    int16x8_t v75 = vaddq_s16(a2[16], v14);
    int16x8_t v76 = a2[48];
    int16x8_t v77 = a2[56];
    int16x8_t v78 = vcltzq_s16(v75);
    int32x4_t v79 = (int32x4_t)vzip1q_s16(v75, v78);
    int32x4_t v80 = (int32x4_t)vzip2q_s16(v75, v78);
    int16x8_t v81 = vcltzq_s16(v76);
    float32x4_t v82 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v76, v81));
    float32x4_t v83 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v76, v81));
    float32x4_t v84 = vcvtq_f32_s32(v79);
    int16x8_t v85 = vcltzq_s16(v77);
    float32x4_t v86 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v77, v85));
    float32x4_t v87 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v77, v85));
    float32x4_t v88 = vmulq_f32(v84, v15);
    float32x4_t v89 = vaddq_f32(v88, vmulq_f32(v9, v82));
    float32x4_t v90 = vaddq_f32(v88, vmulq_f32(v7, v86));
    float32x4_t v91 = vaddq_f32(v88, vmulq_f32(v10, v82));
    float32x4_t v92 = vmulq_f32(vcvtq_f32_s32(v80), v15);
    float32x4_t v93 = vaddq_f32(v92, vmulq_f32(v7, v87));
    float32x4_t v94 = vaddq_f32(v89, vmulq_f32(v8, v86));
    float32x4_t v95 = vaddq_f32(v92, vmulq_f32(v9, v83));
    float32x4_t v96 = vaddq_f32(v92, vmulq_f32(v10, v83));
    int32x4_t v97 = vcvtnq_s32_f32(vaddq_f32(v95, vmulq_f32(v8, v87)));
    int16x8_t v98 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v90)), vcvtnq_s32_f32(v93));
    int32x4_t v99 = vcvtnq_s32_f32(v96);
    int16x8_t v100 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v91)), v99);
    *(int8x8_t *)v99.i8 = vqmovun_s16(v98);
    *(int8x8_t *)v97.i8 = vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v94)), v97));
    *(int8x8_t *)v98.i8 = vqmovun_s16(v100);
    int8x16_t v101 = vzip1q_s8((int8x16_t)v98, (int8x16_t)v99);
    int8x16_t v102 = vzip1q_s8((int8x16_t)v97, v16);
    int16x8_t v103 = (int8x16_t *)((char *)result + v12);
    int16x8_t v104 = &result->i8[v12];
    vst2_s8(v104, (int8x8x2_t)v101);
    v104 += 16;
    int16x8_t v105 = a2 + 1;
    *(int8x16_t *)int16x8_t v104 = vzip2q_s8(v101, v102);
    int16x8_t v106 = vaddq_s16(a2[24], v14);
    int16x8_t v107 = a2[80];
    int16x8_t v108 = a2[88];
    int16x8_t v109 = vcltzq_s16(v106);
    int32x4_t v110 = (int32x4_t)vzip1q_s16(v106, v109);
    int32x4_t v111 = (int32x4_t)vzip2q_s16(v106, v109);
    int16x8_t v112 = vcltzq_s16(v107);
    float32x4_t v113 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v107, v112));
    float32x4_t v114 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v107, v112));
    int16x8_t v115 = vcltzq_s16(v108);
    float32x4_t v116 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v108, v115));
    float32x4_t v117 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v108, v115));
    float32x4_t v118 = vmulq_f32(vcvtq_f32_s32(v110), v15);
    float32x4_t v119 = vaddq_f32(v118, vmulq_f32(v7, v116));
    float32x4_t v120 = vaddq_f32(v118, vmulq_f32(v9, v113));
    float32x4_t v121 = vaddq_f32(v118, vmulq_f32(v10, v113));
    float32x4_t v122 = vmulq_f32(vcvtq_f32_s32(v111), v15);
    float32x4_t v123 = vaddq_f32(v120, vmulq_f32(v8, v116));
    float32x4_t v124 = vaddq_f32(v122, vmulq_f32(v7, v117));
    float32x4_t v125 = vaddq_f32(vaddq_f32(v122, vmulq_f32(v9, v114)), vmulq_f32(v8, v117));
    float32x4_t v126 = vaddq_f32(v122, vmulq_f32(v10, v114));
    int16x8_t v127 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v119)), vcvtnq_s32_f32(v124));
    int32x4_t v128 = vcvtnq_s32_f32(v126);
    int16x8_t v129 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v123)), vcvtnq_s32_f32(v125));
    int16x8_t v130 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v121)), v128);
    *(int8x8_t *)v128.i8 = vqmovun_s16(v127);
    *(int8x8_t *)v127.i8 = vqmovun_s16(v129);
    *(int8x8_t *)v130.i8 = vqmovun_s16(v130);
    int8x8_t result = (int8x16_t *)v17;
    int8x16_t v131 = vzip1q_s8((int8x16_t)v130, (int8x16_t)v128);
    int8x16_t v132 = vzip1q_s8((int8x16_t)v127, v16);
    int16x8_t v133 = v103[2].i8;
    vst2_s8(v133, (int8x8x2_t)v131);
    v103[3] = vzip2q_s8(v131, v132);
    int v134 = v13 - 1;
    LODWORD(v103) = v13 - 16;
    --v13;
    ++a2;
  }
  while ((int)v103 > 1);
  int16x8_t v135 = v105 + 8;
  int v136 = v105 + 32;
  int v137 = v105 + 40;
  float32x4_t v138 = v105 + 64;
  unsigned int v139 = v105 + 72;
  if (a4 <= 8) {
    int v140 = 8;
  }
  else {
    int v140 = a4;
  }
  int v141 = v134 - v140;
  a2 = v105;
  if (v141 >= 1)
  {
LABEL_24:
    int32x4_t v142 = result + 2;
    unsigned int v143 = v141 + 1;
    v144.i64[0] = 0xE000E000E000E00;
    v144.i64[1] = 0xE000E000E000E00;
    float32x4_t v145 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
    v146.i64[0] = -1;
    v146.i64[1] = -1;
    int16x8_t v147 = result[2].i8;
    do
    {
      int16x8_t v148 = *a2++;
      int16x8_t v149 = vaddq_s16(v148, v144);
      int16x8_t v150 = *v136++;
      int16x8_t v151 = v150;
      int16x8_t v152 = *v137++;
      int16x8_t v153 = vcltzq_s16(v149);
      int32x4_t v154 = (int32x4_t)vzip1q_s16(v149, v153);
      int32x4_t v155 = (int32x4_t)vzip2q_s16(v149, v153);
      int16x8_t v156 = vcltzq_s16(v151);
      float32x4_t v157 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v151, v156));
      float32x4_t v158 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v151, v156));
      int16x8_t v159 = vcltzq_s16(v152);
      float32x4_t v160 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v152, v159));
      float32x4_t v161 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v152, v159));
      float32x4_t v162 = vmulq_f32(vcvtq_f32_s32(v154), v145);
      float32x4_t v163 = vaddq_f32(v162, vmulq_f32(v7, v160));
      float32x4_t v164 = vaddq_f32(v162, vmulq_f32(v9, v157));
      float32x4_t v165 = vaddq_f32(v162, vmulq_f32(v10, v157));
      float32x4_t v166 = vmulq_f32(vcvtq_f32_s32(v155), v145);
      float32x4_t v167 = vaddq_f32(v164, vmulq_f32(v8, v160));
      float32x4_t v168 = vaddq_f32(v166, vmulq_f32(v7, v161));
      float32x4_t v169 = vaddq_f32(vaddq_f32(v166, vmulq_f32(v9, v158)), vmulq_f32(v8, v161));
      float32x4_t v170 = vaddq_f32(v166, vmulq_f32(v10, v158));
      int16x8_t v171 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v163)), vcvtnq_s32_f32(v168));
      int32x4_t v172 = vcvtnq_s32_f32(v170);
      int16x8_t v173 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v167)), vcvtnq_s32_f32(v169));
      int16x8_t v174 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v165)), v172);
      *(int8x8_t *)v172.i8 = vqmovun_s16(v171);
      *(int8x8_t *)v171.i8 = vqmovun_s16(v173);
      *(int8x8_t *)v174.i8 = vqmovun_s16(v174);
      int16x8_t v175 = v142[-2].i8;
      int8x16_t v176 = vzip1q_s8((int8x16_t)v174, (int8x16_t)v172);
      int8x16_t v177 = vzip1q_s8((int8x16_t)v171, v146);
      vst2_s8(v175, (int8x8x2_t)v176);
      v142[-1] = vzip2q_s8(v176, v177);
      int16x8_t v178 = *v135++;
      int16x8_t v179 = v178;
      int16x8_t v180 = *v138++;
      int16x8_t v181 = v180;
      int16x8_t v182 = *v139++;
      int16x8_t v183 = vaddq_s16(v179, v144);
      int16x8_t v184 = vcltzq_s16(v183);
      int32x4_t v185 = (int32x4_t)vzip1q_s16(v183, v184);
      int32x4_t v186 = (int32x4_t)vzip2q_s16(v183, v184);
      int16x8_t v187 = vcltzq_s16(v181);
      float32x4_t v188 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v181, v187));
      float32x4_t v189 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v181, v187));
      int16x8_t v190 = vcltzq_s16(v182);
      float32x4_t v191 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v182, v190));
      float32x4_t v192 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v182, v190));
      float32x4_t v193 = vmulq_f32(vcvtq_f32_s32(v185), v145);
      float32x4_t v194 = vaddq_f32(v193, vmulq_f32(v7, v191));
      float32x4_t v195 = vaddq_f32(v193, vmulq_f32(v9, v188));
      float32x4_t v196 = vaddq_f32(v193, vmulq_f32(v10, v188));
      float32x4_t v197 = vmulq_f32(vcvtq_f32_s32(v186), v145);
      float32x4_t v198 = vaddq_f32(v197, vmulq_f32(v7, v192));
      float32x4_t v199 = vaddq_f32(vaddq_f32(v197, vmulq_f32(v9, v189)), vmulq_f32(v8, v192));
      float32x4_t v200 = vaddq_f32(v197, vmulq_f32(v10, v189));
      int16x8_t v201 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v194)), vcvtnq_s32_f32(v198));
      int16x8_t v202 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v195, vmulq_f32(v8, v191)))), vcvtnq_s32_f32(v199));
      int32x4_t v203 = vcvtnq_s32_f32(v200);
      int16x8_t v204 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v196)), v203);
      *(int8x8_t *)v203.i8 = vqmovun_s16(v201);
      *(int8x8_t *)v201.i8 = vqmovun_s16(v202);
      *(int8x8_t *)v204.i8 = vqmovun_s16(v204);
      int8x16_t v205 = vzip1q_s8((int8x16_t)v204, (int8x16_t)v203);
      int8x16_t v206 = vzip1q_s8((int8x16_t)v201, v146);
      vst2_s8(v147, (int8x8x2_t)v205);
      v147 += a3;
      v142[1] = vzip2q_s8(v205, v206);
      --v143;
      int32x4_t v142 = (int8x16_t *)v147;
    }
    while (v143 > 1);
  }
  return result;
}

int8x16_t *from_444_to_32BGRA<8,8,(AlphaOutputMethod)2,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D65788Au);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBC886CBF);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBDA5DD8);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D873197u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int16x8_t v135 = a2 + 8;
    int v136 = a2 + 32;
    int v137 = a2 + 40;
    float32x4_t v138 = a2 + 64;
    unsigned int v139 = a2 + 72;
    int v141 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D4C4A9Bu);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCD01EA6);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBC489511);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D811A55u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3D56DECBu);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBCA68235);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBBBFD26A);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3D8912CCu);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  uint64_t v12 = 8 * a3;
  int v13 = a4 + 8;
  v14.i64[0] = 0xE000E000E000E00;
  v14.i64[1] = 0xE000E000E000E00;
  float32x4_t v15 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
  v16.i64[0] = -1;
  v16.i64[1] = -1;
  int64x2_t v17 = (char *)result;
  do
  {
    int16x8_t v18 = vaddq_s16(*a2, v14);
    int16x8_t v19 = a2[32];
    int16x8_t v20 = a2[40];
    int16x8_t v21 = vcltzq_s16(v18);
    int32x4_t v22 = (int32x4_t)vzip1q_s16(v18, v21);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v18, v21);
    int16x8_t v24 = vcltzq_s16(v19);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v19, v24));
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v19, v24));
    int16x8_t v27 = vcltzq_s16(v20);
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v20, v27));
    float32x4_t v29 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v20, v27));
    float32x4_t v30 = vmulq_f32(vcvtq_f32_s32(v22), v15);
    float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v7, v28));
    float32x4_t v32 = vaddq_f32(v30, vmulq_f32(v9, v25));
    float32x4_t v33 = vaddq_f32(v30, vmulq_f32(v10, v25));
    float32x4_t v34 = vmulq_f32(vcvtq_f32_s32(v23), v15);
    float32x4_t v35 = vaddq_f32(v32, vmulq_f32(v8, v28));
    float32x4_t v36 = vaddq_f32(v34, vmulq_f32(v7, v29));
    float32x4_t v37 = vaddq_f32(vaddq_f32(v34, vmulq_f32(v9, v26)), vmulq_f32(v8, v29));
    float32x4_t v38 = vaddq_f32(v34, vmulq_f32(v10, v26));
    int16x8_t v39 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), vcvtnq_s32_f32(v36));
    int32x4_t v40 = vcvtnq_s32_f32(v38);
    int16x8_t v41 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v35)), vcvtnq_s32_f32(v37));
    int16x8_t v42 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v33)), v40);
    *(int8x8_t *)v40.i8 = vqmovun_s16(v39);
    *(int8x8_t *)v39.i8 = vqmovun_s16(v41);
    *(int8x8_t *)v42.i8 = vqmovun_s16(v42);
    int8x16_t v43 = vzip1q_s8((int8x16_t)v42, (int8x16_t)v40);
    int8x16_t v44 = vzip1q_s8((int8x16_t)v39, v16);
    vst2_s8(v17, (int8x8x2_t)v43);
    v17 += a3;
    result[1] = vzip2q_s8(v43, v44);
    int16x8_t v45 = vaddq_s16(a2[8], v14);
    int16x8_t v46 = a2[64];
    int16x8_t v47 = a2[72];
    int16x8_t v48 = vcltzq_s16(v45);
    int32x4_t v49 = (int32x4_t)vzip1q_s16(v45, v48);
    int32x4_t v50 = (int32x4_t)vzip2q_s16(v45, v48);
    int16x8_t v51 = vcltzq_s16(v46);
    float32x4_t v52 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v46, v51));
    int32x4_t v53 = (int32x4_t)vzip2q_s16(v46, v51);
    float32x4_t v54 = vcvtq_f32_s32(v49);
    float32x4_t v55 = vcvtq_f32_s32(v53);
    int16x8_t v56 = vcltzq_s16(v47);
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v47, v56));
    float32x4_t v58 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v47, v56));
    float32x4_t v59 = vmulq_f32(v54, v15);
    float32x4_t v60 = vaddq_f32(v59, vmulq_f32(v9, v52));
    float32x4_t v61 = vaddq_f32(v59, vmulq_f32(v7, v57));
    float32x4_t v62 = vaddq_f32(v59, vmulq_f32(v10, v52));
    float32x4_t v63 = vmulq_f32(vcvtq_f32_s32(v50), v15);
    float32x4_t v64 = vaddq_f32(v60, vmulq_f32(v8, v57));
    float32x4_t v65 = vaddq_f32(v63, vmulq_f32(v7, v58));
    float32x4_t v66 = vaddq_f32(v63, vmulq_f32(v9, v55));
    float32x4_t v67 = vaddq_f32(v63, vmulq_f32(v10, v55));
    int16x8_t v68 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v61)), vcvtnq_s32_f32(v65));
    int32x4_t v69 = vcvtnq_s32_f32(vaddq_f32(v66, vmulq_f32(v8, v58)));
    int32x4_t v70 = vcvtnq_s32_f32(v67);
    int16x8_t v71 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v62)), v70);
    *(int8x8_t *)v70.i8 = vqmovun_s16(v68);
    *(int8x8_t *)v68.i8 = vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v64)), v69));
    *(int8x8_t *)v69.i8 = vqmovun_s16(v71);
    int8x16_t v72 = vzip1q_s8((int8x16_t)v69, (int8x16_t)v70);
    int8x16_t v73 = vzip1q_s8((int8x16_t)v68, v16);
    i8 = result[2].i8;
    vst2_s8(i8, (int8x8x2_t)v72);
    result[3] = vzip2q_s8(v72, v73);
    int16x8_t v75 = vaddq_s16(a2[16], v14);
    int16x8_t v76 = a2[48];
    int16x8_t v77 = a2[56];
    int16x8_t v78 = vcltzq_s16(v75);
    int32x4_t v79 = (int32x4_t)vzip1q_s16(v75, v78);
    int32x4_t v80 = (int32x4_t)vzip2q_s16(v75, v78);
    int16x8_t v81 = vcltzq_s16(v76);
    float32x4_t v82 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v76, v81));
    float32x4_t v83 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v76, v81));
    float32x4_t v84 = vcvtq_f32_s32(v79);
    int16x8_t v85 = vcltzq_s16(v77);
    float32x4_t v86 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v77, v85));
    float32x4_t v87 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v77, v85));
    float32x4_t v88 = vmulq_f32(v84, v15);
    float32x4_t v89 = vaddq_f32(v88, vmulq_f32(v9, v82));
    float32x4_t v90 = vaddq_f32(v88, vmulq_f32(v7, v86));
    float32x4_t v91 = vaddq_f32(v88, vmulq_f32(v10, v82));
    float32x4_t v92 = vmulq_f32(vcvtq_f32_s32(v80), v15);
    float32x4_t v93 = vaddq_f32(v92, vmulq_f32(v7, v87));
    float32x4_t v94 = vaddq_f32(v89, vmulq_f32(v8, v86));
    float32x4_t v95 = vaddq_f32(v92, vmulq_f32(v9, v83));
    float32x4_t v96 = vaddq_f32(v92, vmulq_f32(v10, v83));
    int32x4_t v97 = vcvtnq_s32_f32(vaddq_f32(v95, vmulq_f32(v8, v87)));
    int16x8_t v98 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v90)), vcvtnq_s32_f32(v93));
    int32x4_t v99 = vcvtnq_s32_f32(v96);
    int16x8_t v100 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v91)), v99);
    *(int8x8_t *)v99.i8 = vqmovun_s16(v98);
    *(int8x8_t *)v97.i8 = vqmovun_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v94)), v97));
    *(int8x8_t *)v98.i8 = vqmovun_s16(v100);
    int8x16_t v101 = vzip1q_s8((int8x16_t)v98, (int8x16_t)v99);
    int8x16_t v102 = vzip1q_s8((int8x16_t)v97, v16);
    int16x8_t v103 = (int8x16_t *)((char *)result + v12);
    int16x8_t v104 = &result->i8[v12];
    vst2_s8(v104, (int8x8x2_t)v101);
    v104 += 16;
    int16x8_t v105 = a2 + 1;
    *(int8x16_t *)int16x8_t v104 = vzip2q_s8(v101, v102);
    int16x8_t v106 = vaddq_s16(a2[24], v14);
    int16x8_t v107 = a2[80];
    int16x8_t v108 = a2[88];
    int16x8_t v109 = vcltzq_s16(v106);
    int32x4_t v110 = (int32x4_t)vzip1q_s16(v106, v109);
    int32x4_t v111 = (int32x4_t)vzip2q_s16(v106, v109);
    int16x8_t v112 = vcltzq_s16(v107);
    float32x4_t v113 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v107, v112));
    float32x4_t v114 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v107, v112));
    int16x8_t v115 = vcltzq_s16(v108);
    float32x4_t v116 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v108, v115));
    float32x4_t v117 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v108, v115));
    float32x4_t v118 = vmulq_f32(vcvtq_f32_s32(v110), v15);
    float32x4_t v119 = vaddq_f32(v118, vmulq_f32(v7, v116));
    float32x4_t v120 = vaddq_f32(v118, vmulq_f32(v9, v113));
    float32x4_t v121 = vaddq_f32(v118, vmulq_f32(v10, v113));
    float32x4_t v122 = vmulq_f32(vcvtq_f32_s32(v111), v15);
    float32x4_t v123 = vaddq_f32(v120, vmulq_f32(v8, v116));
    float32x4_t v124 = vaddq_f32(v122, vmulq_f32(v7, v117));
    float32x4_t v125 = vaddq_f32(vaddq_f32(v122, vmulq_f32(v9, v114)), vmulq_f32(v8, v117));
    float32x4_t v126 = vaddq_f32(v122, vmulq_f32(v10, v114));
    int16x8_t v127 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v119)), vcvtnq_s32_f32(v124));
    int32x4_t v128 = vcvtnq_s32_f32(v126);
    int16x8_t v129 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v123)), vcvtnq_s32_f32(v125));
    int16x8_t v130 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v121)), v128);
    *(int8x8_t *)v128.i8 = vqmovun_s16(v127);
    *(int8x8_t *)v127.i8 = vqmovun_s16(v129);
    *(int8x8_t *)v130.i8 = vqmovun_s16(v130);
    int8x8_t result = (int8x16_t *)v17;
    int8x16_t v131 = vzip1q_s8((int8x16_t)v130, (int8x16_t)v128);
    int8x16_t v132 = vzip1q_s8((int8x16_t)v127, v16);
    int16x8_t v133 = v103[2].i8;
    vst2_s8(v133, (int8x8x2_t)v131);
    v103[3] = vzip2q_s8(v131, v132);
    int v134 = v13 - 1;
    LODWORD(v103) = v13 - 16;
    --v13;
    ++a2;
  }
  while ((int)v103 > 1);
  int16x8_t v135 = v105 + 8;
  int v136 = v105 + 32;
  int v137 = v105 + 40;
  float32x4_t v138 = v105 + 64;
  unsigned int v139 = v105 + 72;
  if (a4 <= 8) {
    int v140 = 8;
  }
  else {
    int v140 = a4;
  }
  int v141 = v134 - v140;
  a2 = v105;
  if (v141 >= 1)
  {
LABEL_24:
    int32x4_t v142 = result + 2;
    unsigned int v143 = v141 + 1;
    v144.i64[0] = 0xE000E000E000E00;
    v144.i64[1] = 0xE000E000E000E00;
    float32x4_t v145 = (float32x4_t)vdupq_n_s32(0x3D150A85u);
    v146.i64[0] = -1;
    v146.i64[1] = -1;
    int16x8_t v147 = result[2].i8;
    do
    {
      int16x8_t v148 = *a2++;
      int16x8_t v149 = vaddq_s16(v148, v144);
      int16x8_t v150 = *v136++;
      int16x8_t v151 = v150;
      int16x8_t v152 = *v137++;
      int16x8_t v153 = vcltzq_s16(v149);
      int32x4_t v154 = (int32x4_t)vzip1q_s16(v149, v153);
      int32x4_t v155 = (int32x4_t)vzip2q_s16(v149, v153);
      int16x8_t v156 = vcltzq_s16(v151);
      float32x4_t v157 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v151, v156));
      float32x4_t v158 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v151, v156));
      int16x8_t v159 = vcltzq_s16(v152);
      float32x4_t v160 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v152, v159));
      float32x4_t v161 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v152, v159));
      float32x4_t v162 = vmulq_f32(vcvtq_f32_s32(v154), v145);
      float32x4_t v163 = vaddq_f32(v162, vmulq_f32(v7, v160));
      float32x4_t v164 = vaddq_f32(v162, vmulq_f32(v9, v157));
      float32x4_t v165 = vaddq_f32(v162, vmulq_f32(v10, v157));
      float32x4_t v166 = vmulq_f32(vcvtq_f32_s32(v155), v145);
      float32x4_t v167 = vaddq_f32(v164, vmulq_f32(v8, v160));
      float32x4_t v168 = vaddq_f32(v166, vmulq_f32(v7, v161));
      float32x4_t v169 = vaddq_f32(vaddq_f32(v166, vmulq_f32(v9, v158)), vmulq_f32(v8, v161));
      float32x4_t v170 = vaddq_f32(v166, vmulq_f32(v10, v158));
      int16x8_t v171 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v163)), vcvtnq_s32_f32(v168));
      int32x4_t v172 = vcvtnq_s32_f32(v170);
      int16x8_t v173 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v167)), vcvtnq_s32_f32(v169));
      int16x8_t v174 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v165)), v172);
      *(int8x8_t *)v172.i8 = vqmovun_s16(v171);
      *(int8x8_t *)v171.i8 = vqmovun_s16(v173);
      *(int8x8_t *)v174.i8 = vqmovun_s16(v174);
      int16x8_t v175 = v142[-2].i8;
      int8x16_t v176 = vzip1q_s8((int8x16_t)v174, (int8x16_t)v172);
      int8x16_t v177 = vzip1q_s8((int8x16_t)v171, v146);
      vst2_s8(v175, (int8x8x2_t)v176);
      v142[-1] = vzip2q_s8(v176, v177);
      int16x8_t v178 = *v135++;
      int16x8_t v179 = v178;
      int16x8_t v180 = *v138++;
      int16x8_t v181 = v180;
      int16x8_t v182 = *v139++;
      int16x8_t v183 = vaddq_s16(v179, v144);
      int16x8_t v184 = vcltzq_s16(v183);
      int32x4_t v185 = (int32x4_t)vzip1q_s16(v183, v184);
      int32x4_t v186 = (int32x4_t)vzip2q_s16(v183, v184);
      int16x8_t v187 = vcltzq_s16(v181);
      float32x4_t v188 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v181, v187));
      float32x4_t v189 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v181, v187));
      int16x8_t v190 = vcltzq_s16(v182);
      float32x4_t v191 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v182, v190));
      float32x4_t v192 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v182, v190));
      float32x4_t v193 = vmulq_f32(vcvtq_f32_s32(v185), v145);
      float32x4_t v194 = vaddq_f32(v193, vmulq_f32(v7, v191));
      float32x4_t v195 = vaddq_f32(v193, vmulq_f32(v9, v188));
      float32x4_t v196 = vaddq_f32(v193, vmulq_f32(v10, v188));
      float32x4_t v197 = vmulq_f32(vcvtq_f32_s32(v186), v145);
      float32x4_t v198 = vaddq_f32(v197, vmulq_f32(v7, v192));
      float32x4_t v199 = vaddq_f32(vaddq_f32(v197, vmulq_f32(v9, v189)), vmulq_f32(v8, v192));
      float32x4_t v200 = vaddq_f32(v197, vmulq_f32(v10, v189));
      int16x8_t v201 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v194)), vcvtnq_s32_f32(v198));
      int16x8_t v202 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v195, vmulq_f32(v8, v191)))), vcvtnq_s32_f32(v199));
      int32x4_t v203 = vcvtnq_s32_f32(v200);
      int16x8_t v204 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v196)), v203);
      *(int8x8_t *)v203.i8 = vqmovun_s16(v201);
      *(int8x8_t *)v201.i8 = vqmovun_s16(v202);
      *(int8x8_t *)v204.i8 = vqmovun_s16(v204);
      int8x16_t v205 = vzip1q_s8((int8x16_t)v204, (int8x16_t)v203);
      int8x16_t v206 = vzip1q_s8((int8x16_t)v201, v146);
      vst2_s8(v147, (int8x8x2_t)v205);
      v147 += a3;
      v142[1] = vzip2q_s8(v205, v206);
      --v143;
      int32x4_t v142 = (int8x16_t *)v147;
    }
    while (v143 > 1);
  }
  return result;
}

int8x16_t *from_444_to_n302<8,8,(AlphaOutputMethod)0,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E662551u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBD88D377);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBCDB0243);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E879762u);
    int v11 = a4 - 8;
    if (a4 <= 8) {
      int v11 = 0;
    }
    if (v11) {
      goto LABEL_10;
    }
LABEL_20:
    float32x4_t v121 = a2 + 8;
    float32x4_t v122 = a2 + 32;
    float32x4_t v123 = a2 + 40;
    float32x4_t v124 = a2 + 64;
    float32x4_t v125 = a2 + 72;
    int v127 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_21;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E4CE46Du);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBDD0BB5A);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBD492C18);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E817B8Au);
    int v11 = a4 - 8;
    if (a4 <= 8) {
      int v11 = 0;
    }
    if (v11) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E578094u);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBDA6FF94);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBCC062D8);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E897A02u);
  int v11 = a4 - 8;
  if (a4 <= 8) {
    int v11 = 0;
  }
  if (!v11) {
    goto LABEL_20;
  }
LABEL_10:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x3E157ABDu);
  v15.i64[0] = 0xFC00FC00FC00FC00;
  v15.i64[1] = 0xFC00FC00FC00FC00;
  do
  {
    int8x16_t v16 = a2 + 1;
    int16x8_t v17 = vaddq_s16(*a2, v13);
    int16x8_t v18 = a2[32];
    int16x8_t v19 = a2[40];
    int16x8_t v20 = (int8x16_t *)((char *)result + 8 * a3);
    int16x8_t v21 = vcltzq_s16(v17);
    int32x4_t v22 = (int32x4_t)vzip1q_s16(v17, v21);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v17, v21);
    int16x8_t v24 = vcltzq_s16(v18);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v18, v24));
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v18, v24));
    int16x8_t v27 = vcltzq_s16(v19);
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v19, v27));
    float32x4_t v29 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v19, v27));
    float32x4_t v30 = vmulq_f32(vcvtq_f32_s32(v22), v14);
    float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v7, v28));
    float32x4_t v32 = vaddq_f32(v30, vmulq_f32(v9, v25));
    float32x4_t v33 = vmulq_f32(vcvtq_f32_s32(v23), v14);
    float32x4_t v34 = vaddq_f32(v30, vmulq_f32(v10, v25));
    float32x4_t v35 = vaddq_f32(v33, vmulq_f32(v7, v29));
    float32x4_t v36 = vaddq_f32(vaddq_f32(v33, vmulq_f32(v9, v26)), vmulq_f32(v8, v29));
    float32x4_t v37 = vaddq_f32(v33, vmulq_f32(v10, v26));
    int16x8_t v38 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), vcvtnq_s32_f32(v35));
    int16x8_t v39 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v32, vmulq_f32(v8, v28)))), vcvtnq_s32_f32(v36));
    int16x8_t v40 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v34)), vcvtnq_s32_f32(v37));
    int16x8_t v41 = vminq_s16(vmaxq_s16(v38, (int16x8_t)0), v15);
    int16x8_t v42 = vminq_s16(vmaxq_s16(v39, (int16x8_t)0), v15);
    int16x8_t v43 = vminq_s16(vmaxq_s16(v40, (int16x8_t)0), v15);
    *int8x8_t result = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v42, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v41, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v43, (int16x8_t)0), 2uLL)));
    result[1] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v42, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v41, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v43, (int16x8_t)0), 2uLL)));
    int16x8_t v44 = a2[64];
    int16x8_t v45 = vaddq_s16(a2[8], v13);
    int16x8_t v46 = a2[72];
    int16x8_t v47 = vcltzq_s16(v45);
    int32x4_t v48 = (int32x4_t)vzip1q_s16(v45, v47);
    int32x4_t v49 = (int32x4_t)vzip2q_s16(v45, v47);
    int16x8_t v50 = vcltzq_s16(v44);
    float32x4_t v51 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v44, v50));
    float32x4_t v52 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v44, v50));
    int16x8_t v53 = vcltzq_s16(v46);
    float32x4_t v54 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v46, v53));
    float32x4_t v55 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v46, v53));
    float32x4_t v56 = vmulq_f32(vcvtq_f32_s32(v48), v14);
    float32x4_t v57 = vaddq_f32(v56, vmulq_f32(v7, v54));
    float32x4_t v58 = vaddq_f32(v56, vmulq_f32(v9, v51));
    float32x4_t v59 = vaddq_f32(v56, vmulq_f32(v10, v51));
    float32x4_t v60 = vmulq_f32(vcvtq_f32_s32(v49), v14);
    float32x4_t v61 = vaddq_f32(v60, vmulq_f32(v7, v55));
    float32x4_t v62 = vaddq_f32(vaddq_f32(v60, vmulq_f32(v9, v52)), vmulq_f32(v8, v55));
    float32x4_t v63 = vaddq_f32(v60, vmulq_f32(v10, v52));
    int16x8_t v64 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v57)), vcvtnq_s32_f32(v61));
    int16x8_t v65 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v58, vmulq_f32(v8, v54)))), vcvtnq_s32_f32(v62));
    int16x8_t v66 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v59)), vcvtnq_s32_f32(v63));
    int16x8_t v67 = vminq_s16(vmaxq_s16(v64, (int16x8_t)0), v15);
    int16x8_t v68 = vminq_s16(vmaxq_s16(v65, (int16x8_t)0), v15);
    int16x8_t v69 = vminq_s16(vmaxq_s16(v66, (int16x8_t)0), v15);
    result[2] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v68, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v67, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v69, (int16x8_t)0), 2uLL)));
    result[3] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v68, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v67, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v69, (int16x8_t)0), 2uLL)));
    int16x8_t v70 = vaddq_s16(a2[16], v13);
    int16x8_t v71 = a2[48];
    int16x8_t v72 = a2[56];
    int16x8_t v73 = vcltzq_s16(v70);
    int32x4_t v74 = (int32x4_t)vzip1q_s16(v70, v73);
    int32x4_t v75 = (int32x4_t)vzip2q_s16(v70, v73);
    float32x4_t v76 = vcvtq_f32_s32(v74);
    int16x8_t v77 = vcltzq_s16(v71);
    float32x4_t v78 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v71, v77));
    float32x4_t v79 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v71, v77));
    int16x8_t v80 = vcltzq_s16(v72);
    float32x4_t v81 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v72, v80));
    float32x4_t v82 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v72, v80));
    float32x4_t v83 = vmulq_f32(v76, v14);
    float32x4_t v84 = vaddq_f32(v83, vmulq_f32(v9, v78));
    float32x4_t v85 = vaddq_f32(v83, vmulq_f32(v7, v81));
    float32x4_t v86 = vaddq_f32(v83, vmulq_f32(v10, v78));
    float32x4_t v87 = vmulq_f32(vcvtq_f32_s32(v75), v14);
    float32x4_t v88 = vaddq_f32(v87, vmulq_f32(v7, v82));
    float32x4_t v89 = vaddq_f32(vaddq_f32(v87, vmulq_f32(v9, v79)), vmulq_f32(v8, v82));
    float32x4_t v90 = vaddq_f32(v87, vmulq_f32(v10, v79));
    int16x8_t v91 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v85)), vcvtnq_s32_f32(v88));
    int16x8_t v92 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v84, vmulq_f32(v8, v81)))), vcvtnq_s32_f32(v89));
    int16x8_t v93 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v86)), vcvtnq_s32_f32(v90));
    int16x8_t v94 = vminq_s16(vmaxq_s16(v91, (int16x8_t)0), v15);
    int16x8_t v95 = vminq_s16(vmaxq_s16(v92, (int16x8_t)0), v15);
    int16x8_t v96 = vminq_s16(vmaxq_s16(v93, (int16x8_t)0), v15);
    *int16x8_t v20 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v95, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v94, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v96, (int16x8_t)0), 2uLL)));
    v20[1] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v95, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v94, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v96, (int16x8_t)0), 2uLL)));
    int8x8_t result = (int8x16_t *)((char *)result + a3);
    int16x8_t v97 = vaddq_s16(a2[24], v13);
    int16x8_t v98 = a2[80];
    int16x8_t v99 = a2[88];
    int16x8_t v100 = vcltzq_s16(v97);
    int32x4_t v101 = (int32x4_t)vzip1q_s16(v97, v100);
    int32x4_t v102 = (int32x4_t)vzip2q_s16(v97, v100);
    int16x8_t v103 = vcltzq_s16(v98);
    float32x4_t v104 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v98, v103));
    int32x4_t v105 = (int32x4_t)vzip2q_s16(v98, v103);
    float32x4_t v106 = vcvtq_f32_s32(v101);
    float32x4_t v107 = vcvtq_f32_s32(v105);
    int16x8_t v108 = vcltzq_s16(v99);
    float32x4_t v109 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v99, v108));
    float32x4_t v110 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v99, v108));
    float32x4_t v111 = vmulq_f32(v106, v14);
    float32x4_t v112 = vaddq_f32(v111, vmulq_f32(v7, v109));
    float32x4_t v113 = vmulq_f32(vcvtq_f32_s32(v102), v14);
    float32x4_t v114 = vaddq_f32(vaddq_f32(v111, vmulq_f32(v9, v104)), vmulq_f32(v8, v109));
    float32x4_t v115 = vaddq_f32(v113, vmulq_f32(v9, v107));
    int16x8_t v116 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v111, vmulq_f32(v10, v104)))), vcvtnq_s32_f32(vaddq_f32(v113, vmulq_f32(v10, v107))));
    int16x8_t v117 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v112)), vcvtnq_s32_f32(vaddq_f32(v113, vmulq_f32(v7, v110)))), (int16x8_t)0), v15);
    int16x8_t v118 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v114)), vcvtnq_s32_f32(vaddq_f32(v115, vmulq_f32(v8, v110)))), (int16x8_t)0), v15);
    int16x8_t v119 = vminq_s16(vmaxq_s16(v116, (int16x8_t)0), v15);
    v20[2] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v118, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v117, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v119, (int16x8_t)0), 2uLL)));
    v20[3] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v118, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v117, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v119, (int16x8_t)0), 2uLL)));
    int v120 = v12 - 1;
    LODWORD(v20) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v20 > 1);
  float32x4_t v121 = v16 + 8;
  float32x4_t v122 = v16 + 32;
  float32x4_t v123 = v16 + 40;
  float32x4_t v124 = v16 + 64;
  float32x4_t v125 = v16 + 72;
  if (a4 <= 8) {
    int v126 = 8;
  }
  else {
    int v126 = a4;
  }
  int v127 = v120 - v126;
  a2 = v16;
  if (v127 >= 1)
  {
LABEL_21:
    int32x4_t v128 = result + 2;
    unsigned int v129 = v127 + 1;
    v130.i64[0] = 0xE000E000E000E00;
    v130.i64[1] = 0xE000E000E000E00;
    float32x4_t v131 = (float32x4_t)vdupq_n_s32(0x3E157ABDu);
    v132.i64[0] = 0xFC00FC00FC00FC00;
    v132.i64[1] = 0xFC00FC00FC00FC00;
    do
    {
      int16x8_t v133 = *a2++;
      int16x8_t v134 = v133;
      int16x8_t v135 = *v122++;
      int16x8_t v136 = v135;
      int16x8_t v137 = *v123++;
      int16x8_t v138 = vaddq_s16(v134, v130);
      int16x8_t v139 = vcltzq_s16(v138);
      int32x4_t v140 = (int32x4_t)vzip1q_s16(v138, v139);
      int32x4_t v141 = (int32x4_t)vzip2q_s16(v138, v139);
      int16x8_t v142 = vcltzq_s16(v136);
      float32x4_t v143 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v136, v142));
      float32x4_t v144 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v136, v142));
      int16x8_t v145 = vcltzq_s16(v137);
      float32x4_t v146 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v137, v145));
      float32x4_t v147 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v137, v145));
      float32x4_t v148 = vmulq_f32(vcvtq_f32_s32(v140), v131);
      float32x4_t v149 = vaddq_f32(v148, vmulq_f32(v7, v146));
      float32x4_t v150 = vaddq_f32(v148, vmulq_f32(v9, v143));
      float32x4_t v151 = vaddq_f32(v148, vmulq_f32(v10, v143));
      float32x4_t v152 = vmulq_f32(vcvtq_f32_s32(v141), v131);
      float32x4_t v153 = vaddq_f32(v152, vmulq_f32(v7, v147));
      float32x4_t v154 = vaddq_f32(vaddq_f32(v152, vmulq_f32(v9, v144)), vmulq_f32(v8, v147));
      float32x4_t v155 = vaddq_f32(v152, vmulq_f32(v10, v144));
      int16x8_t v156 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v149)), vcvtnq_s32_f32(v153));
      int16x8_t v157 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v150, vmulq_f32(v8, v146)))), vcvtnq_s32_f32(v154));
      int16x8_t v158 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v151)), vcvtnq_s32_f32(v155));
      int16x8_t v159 = vminq_s16(vmaxq_s16(v156, (int16x8_t)0), v132);
      int16x8_t v160 = vminq_s16(vmaxq_s16(v157, (int16x8_t)0), v132);
      int16x8_t v161 = vminq_s16(vmaxq_s16(v158, (int16x8_t)0), v132);
      v128[-2] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v160, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v159, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v161, (int16x8_t)0), 2uLL)));
      v128[-1] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v160, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v159, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v161, (int16x8_t)0), 2uLL)));
      int16x8_t v162 = *v121++;
      int16x8_t v163 = v162;
      int16x8_t v164 = *v124++;
      int16x8_t v165 = v164;
      int16x8_t v166 = *v125++;
      int16x8_t v167 = vaddq_s16(v163, v130);
      int16x8_t v168 = vcltzq_s16(v167);
      int32x4_t v169 = (int32x4_t)vzip1q_s16(v167, v168);
      int32x4_t v170 = (int32x4_t)vzip2q_s16(v167, v168);
      int16x8_t v171 = vcltzq_s16(v165);
      float32x4_t v172 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v165, v171));
      float32x4_t v173 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v165, v171));
      int16x8_t v174 = vcltzq_s16(v166);
      float32x4_t v175 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v166, v174));
      float32x4_t v176 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v166, v174));
      float32x4_t v177 = vmulq_f32(vcvtq_f32_s32(v169), v131);
      float32x4_t v178 = vaddq_f32(v177, vmulq_f32(v7, v175));
      float32x4_t v179 = vaddq_f32(v177, vmulq_f32(v9, v172));
      float32x4_t v180 = vmulq_f32(vcvtq_f32_s32(v170), v131);
      float32x4_t v181 = vaddq_f32(v177, vmulq_f32(v10, v172));
      float32x4_t v182 = vaddq_f32(v180, vmulq_f32(v7, v176));
      float32x4_t v183 = vaddq_f32(vaddq_f32(v180, vmulq_f32(v9, v173)), vmulq_f32(v8, v176));
      float32x4_t v184 = vaddq_f32(v180, vmulq_f32(v10, v173));
      int16x8_t v185 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v178)), vcvtnq_s32_f32(v182));
      int16x8_t v186 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v179, vmulq_f32(v8, v175)))), vcvtnq_s32_f32(v183));
      int16x8_t v187 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v181)), vcvtnq_s32_f32(v184));
      int16x8_t v188 = vminq_s16(vmaxq_s16(v185, (int16x8_t)0), v132);
      int16x8_t v189 = vminq_s16(vmaxq_s16(v186, (int16x8_t)0), v132);
      int16x8_t v190 = vminq_s16(vmaxq_s16(v187, (int16x8_t)0), v132);
      *int32x4_t v128 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v189, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v188, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v190, (int16x8_t)0), 2uLL)));
      v128[1] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v189, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v188, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v190, (int16x8_t)0), 2uLL)));
      int32x4_t v128 = (int8x16_t *)((char *)v128 + a3);
      --v129;
    }
    while (v129 > 1);
  }
  return result;
}

int8x16_t *from_444_to_n302<8,8,(AlphaOutputMethod)0,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E662551u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBD88D377);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBCDB0243);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E879762u);
    int v11 = a4 - 8;
    if (a4 <= 8) {
      int v11 = 0;
    }
    if (v11) {
      goto LABEL_10;
    }
LABEL_20:
    float32x4_t v121 = a2 + 8;
    float32x4_t v122 = a2 + 32;
    float32x4_t v123 = a2 + 40;
    float32x4_t v124 = a2 + 64;
    float32x4_t v125 = a2 + 72;
    int v127 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_21;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E4CE46Du);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBDD0BB5A);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBD492C18);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E817B8Au);
    int v11 = a4 - 8;
    if (a4 <= 8) {
      int v11 = 0;
    }
    if (v11) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E578094u);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBDA6FF94);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBCC062D8);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E897A02u);
  int v11 = a4 - 8;
  if (a4 <= 8) {
    int v11 = 0;
  }
  if (!v11) {
    goto LABEL_20;
  }
LABEL_10:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x3E157ABDu);
  v15.i64[0] = 0xFC00FC00FC00FC00;
  v15.i64[1] = 0xFC00FC00FC00FC00;
  do
  {
    int8x16_t v16 = a2 + 1;
    int16x8_t v17 = vaddq_s16(*a2, v13);
    int16x8_t v18 = a2[32];
    int16x8_t v19 = a2[40];
    int16x8_t v20 = (int8x16_t *)((char *)result + 8 * a3);
    int16x8_t v21 = vcltzq_s16(v17);
    int32x4_t v22 = (int32x4_t)vzip1q_s16(v17, v21);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v17, v21);
    int16x8_t v24 = vcltzq_s16(v18);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v18, v24));
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v18, v24));
    int16x8_t v27 = vcltzq_s16(v19);
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v19, v27));
    float32x4_t v29 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v19, v27));
    float32x4_t v30 = vmulq_f32(vcvtq_f32_s32(v22), v14);
    float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v7, v28));
    float32x4_t v32 = vaddq_f32(v30, vmulq_f32(v9, v25));
    float32x4_t v33 = vmulq_f32(vcvtq_f32_s32(v23), v14);
    float32x4_t v34 = vaddq_f32(v30, vmulq_f32(v10, v25));
    float32x4_t v35 = vaddq_f32(v33, vmulq_f32(v7, v29));
    float32x4_t v36 = vaddq_f32(vaddq_f32(v33, vmulq_f32(v9, v26)), vmulq_f32(v8, v29));
    float32x4_t v37 = vaddq_f32(v33, vmulq_f32(v10, v26));
    int16x8_t v38 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), vcvtnq_s32_f32(v35));
    int16x8_t v39 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v32, vmulq_f32(v8, v28)))), vcvtnq_s32_f32(v36));
    int16x8_t v40 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v34)), vcvtnq_s32_f32(v37));
    int16x8_t v41 = vminq_s16(vmaxq_s16(v38, (int16x8_t)0), v15);
    int16x8_t v42 = vminq_s16(vmaxq_s16(v39, (int16x8_t)0), v15);
    int16x8_t v43 = vminq_s16(vmaxq_s16(v40, (int16x8_t)0), v15);
    *int8x8_t result = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v42, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v41, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v43, (int16x8_t)0), 2uLL)));
    result[1] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v42, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v41, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v43, (int16x8_t)0), 2uLL)));
    int16x8_t v44 = a2[64];
    int16x8_t v45 = vaddq_s16(a2[8], v13);
    int16x8_t v46 = a2[72];
    int16x8_t v47 = vcltzq_s16(v45);
    int32x4_t v48 = (int32x4_t)vzip1q_s16(v45, v47);
    int32x4_t v49 = (int32x4_t)vzip2q_s16(v45, v47);
    int16x8_t v50 = vcltzq_s16(v44);
    float32x4_t v51 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v44, v50));
    float32x4_t v52 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v44, v50));
    int16x8_t v53 = vcltzq_s16(v46);
    float32x4_t v54 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v46, v53));
    float32x4_t v55 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v46, v53));
    float32x4_t v56 = vmulq_f32(vcvtq_f32_s32(v48), v14);
    float32x4_t v57 = vaddq_f32(v56, vmulq_f32(v7, v54));
    float32x4_t v58 = vaddq_f32(v56, vmulq_f32(v9, v51));
    float32x4_t v59 = vaddq_f32(v56, vmulq_f32(v10, v51));
    float32x4_t v60 = vmulq_f32(vcvtq_f32_s32(v49), v14);
    float32x4_t v61 = vaddq_f32(v60, vmulq_f32(v7, v55));
    float32x4_t v62 = vaddq_f32(vaddq_f32(v60, vmulq_f32(v9, v52)), vmulq_f32(v8, v55));
    float32x4_t v63 = vaddq_f32(v60, vmulq_f32(v10, v52));
    int16x8_t v64 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v57)), vcvtnq_s32_f32(v61));
    int16x8_t v65 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v58, vmulq_f32(v8, v54)))), vcvtnq_s32_f32(v62));
    int16x8_t v66 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v59)), vcvtnq_s32_f32(v63));
    int16x8_t v67 = vminq_s16(vmaxq_s16(v64, (int16x8_t)0), v15);
    int16x8_t v68 = vminq_s16(vmaxq_s16(v65, (int16x8_t)0), v15);
    int16x8_t v69 = vminq_s16(vmaxq_s16(v66, (int16x8_t)0), v15);
    result[2] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v68, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v67, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v69, (int16x8_t)0), 2uLL)));
    result[3] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v68, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v67, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v69, (int16x8_t)0), 2uLL)));
    int16x8_t v70 = vaddq_s16(a2[16], v13);
    int16x8_t v71 = a2[48];
    int16x8_t v72 = a2[56];
    int16x8_t v73 = vcltzq_s16(v70);
    int32x4_t v74 = (int32x4_t)vzip1q_s16(v70, v73);
    int32x4_t v75 = (int32x4_t)vzip2q_s16(v70, v73);
    float32x4_t v76 = vcvtq_f32_s32(v74);
    int16x8_t v77 = vcltzq_s16(v71);
    float32x4_t v78 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v71, v77));
    float32x4_t v79 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v71, v77));
    int16x8_t v80 = vcltzq_s16(v72);
    float32x4_t v81 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v72, v80));
    float32x4_t v82 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v72, v80));
    float32x4_t v83 = vmulq_f32(v76, v14);
    float32x4_t v84 = vaddq_f32(v83, vmulq_f32(v9, v78));
    float32x4_t v85 = vaddq_f32(v83, vmulq_f32(v7, v81));
    float32x4_t v86 = vaddq_f32(v83, vmulq_f32(v10, v78));
    float32x4_t v87 = vmulq_f32(vcvtq_f32_s32(v75), v14);
    float32x4_t v88 = vaddq_f32(v87, vmulq_f32(v7, v82));
    float32x4_t v89 = vaddq_f32(vaddq_f32(v87, vmulq_f32(v9, v79)), vmulq_f32(v8, v82));
    float32x4_t v90 = vaddq_f32(v87, vmulq_f32(v10, v79));
    int16x8_t v91 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v85)), vcvtnq_s32_f32(v88));
    int16x8_t v92 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v84, vmulq_f32(v8, v81)))), vcvtnq_s32_f32(v89));
    int16x8_t v93 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v86)), vcvtnq_s32_f32(v90));
    int16x8_t v94 = vminq_s16(vmaxq_s16(v91, (int16x8_t)0), v15);
    int16x8_t v95 = vminq_s16(vmaxq_s16(v92, (int16x8_t)0), v15);
    int16x8_t v96 = vminq_s16(vmaxq_s16(v93, (int16x8_t)0), v15);
    *int16x8_t v20 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v95, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v94, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v96, (int16x8_t)0), 2uLL)));
    v20[1] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v95, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v94, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v96, (int16x8_t)0), 2uLL)));
    int8x8_t result = (int8x16_t *)((char *)result + a3);
    int16x8_t v97 = vaddq_s16(a2[24], v13);
    int16x8_t v98 = a2[80];
    int16x8_t v99 = a2[88];
    int16x8_t v100 = vcltzq_s16(v97);
    int32x4_t v101 = (int32x4_t)vzip1q_s16(v97, v100);
    int32x4_t v102 = (int32x4_t)vzip2q_s16(v97, v100);
    int16x8_t v103 = vcltzq_s16(v98);
    float32x4_t v104 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v98, v103));
    int32x4_t v105 = (int32x4_t)vzip2q_s16(v98, v103);
    float32x4_t v106 = vcvtq_f32_s32(v101);
    float32x4_t v107 = vcvtq_f32_s32(v105);
    int16x8_t v108 = vcltzq_s16(v99);
    float32x4_t v109 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v99, v108));
    float32x4_t v110 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v99, v108));
    float32x4_t v111 = vmulq_f32(v106, v14);
    float32x4_t v112 = vaddq_f32(v111, vmulq_f32(v7, v109));
    float32x4_t v113 = vmulq_f32(vcvtq_f32_s32(v102), v14);
    float32x4_t v114 = vaddq_f32(vaddq_f32(v111, vmulq_f32(v9, v104)), vmulq_f32(v8, v109));
    float32x4_t v115 = vaddq_f32(v113, vmulq_f32(v9, v107));
    int16x8_t v116 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v111, vmulq_f32(v10, v104)))), vcvtnq_s32_f32(vaddq_f32(v113, vmulq_f32(v10, v107))));
    int16x8_t v117 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v112)), vcvtnq_s32_f32(vaddq_f32(v113, vmulq_f32(v7, v110)))), (int16x8_t)0), v15);
    int16x8_t v118 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v114)), vcvtnq_s32_f32(vaddq_f32(v115, vmulq_f32(v8, v110)))), (int16x8_t)0), v15);
    int16x8_t v119 = vminq_s16(vmaxq_s16(v116, (int16x8_t)0), v15);
    v20[2] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v118, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v117, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v119, (int16x8_t)0), 2uLL)));
    v20[3] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v118, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v117, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v119, (int16x8_t)0), 2uLL)));
    int v120 = v12 - 1;
    LODWORD(v20) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v20 > 1);
  float32x4_t v121 = v16 + 8;
  float32x4_t v122 = v16 + 32;
  float32x4_t v123 = v16 + 40;
  float32x4_t v124 = v16 + 64;
  float32x4_t v125 = v16 + 72;
  if (a4 <= 8) {
    int v126 = 8;
  }
  else {
    int v126 = a4;
  }
  int v127 = v120 - v126;
  a2 = v16;
  if (v127 >= 1)
  {
LABEL_21:
    int32x4_t v128 = result + 2;
    unsigned int v129 = v127 + 1;
    v130.i64[0] = 0xE000E000E000E00;
    v130.i64[1] = 0xE000E000E000E00;
    float32x4_t v131 = (float32x4_t)vdupq_n_s32(0x3E157ABDu);
    v132.i64[0] = 0xFC00FC00FC00FC00;
    v132.i64[1] = 0xFC00FC00FC00FC00;
    do
    {
      int16x8_t v133 = *a2++;
      int16x8_t v134 = v133;
      int16x8_t v135 = *v122++;
      int16x8_t v136 = v135;
      int16x8_t v137 = *v123++;
      int16x8_t v138 = vaddq_s16(v134, v130);
      int16x8_t v139 = vcltzq_s16(v138);
      int32x4_t v140 = (int32x4_t)vzip1q_s16(v138, v139);
      int32x4_t v141 = (int32x4_t)vzip2q_s16(v138, v139);
      int16x8_t v142 = vcltzq_s16(v136);
      float32x4_t v143 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v136, v142));
      float32x4_t v144 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v136, v142));
      int16x8_t v145 = vcltzq_s16(v137);
      float32x4_t v146 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v137, v145));
      float32x4_t v147 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v137, v145));
      float32x4_t v148 = vmulq_f32(vcvtq_f32_s32(v140), v131);
      float32x4_t v149 = vaddq_f32(v148, vmulq_f32(v7, v146));
      float32x4_t v150 = vaddq_f32(v148, vmulq_f32(v9, v143));
      float32x4_t v151 = vaddq_f32(v148, vmulq_f32(v10, v143));
      float32x4_t v152 = vmulq_f32(vcvtq_f32_s32(v141), v131);
      float32x4_t v153 = vaddq_f32(v152, vmulq_f32(v7, v147));
      float32x4_t v154 = vaddq_f32(vaddq_f32(v152, vmulq_f32(v9, v144)), vmulq_f32(v8, v147));
      float32x4_t v155 = vaddq_f32(v152, vmulq_f32(v10, v144));
      int16x8_t v156 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v149)), vcvtnq_s32_f32(v153));
      int16x8_t v157 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v150, vmulq_f32(v8, v146)))), vcvtnq_s32_f32(v154));
      int16x8_t v158 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v151)), vcvtnq_s32_f32(v155));
      int16x8_t v159 = vminq_s16(vmaxq_s16(v156, (int16x8_t)0), v132);
      int16x8_t v160 = vminq_s16(vmaxq_s16(v157, (int16x8_t)0), v132);
      int16x8_t v161 = vminq_s16(vmaxq_s16(v158, (int16x8_t)0), v132);
      v128[-2] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v160, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v159, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v161, (int16x8_t)0), 2uLL)));
      v128[-1] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v160, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v159, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v161, (int16x8_t)0), 2uLL)));
      int16x8_t v162 = *v121++;
      int16x8_t v163 = v162;
      int16x8_t v164 = *v124++;
      int16x8_t v165 = v164;
      int16x8_t v166 = *v125++;
      int16x8_t v167 = vaddq_s16(v163, v130);
      int16x8_t v168 = vcltzq_s16(v167);
      int32x4_t v169 = (int32x4_t)vzip1q_s16(v167, v168);
      int32x4_t v170 = (int32x4_t)vzip2q_s16(v167, v168);
      int16x8_t v171 = vcltzq_s16(v165);
      float32x4_t v172 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v165, v171));
      float32x4_t v173 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v165, v171));
      int16x8_t v174 = vcltzq_s16(v166);
      float32x4_t v175 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v166, v174));
      float32x4_t v176 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v166, v174));
      float32x4_t v177 = vmulq_f32(vcvtq_f32_s32(v169), v131);
      float32x4_t v178 = vaddq_f32(v177, vmulq_f32(v7, v175));
      float32x4_t v179 = vaddq_f32(v177, vmulq_f32(v9, v172));
      float32x4_t v180 = vmulq_f32(vcvtq_f32_s32(v170), v131);
      float32x4_t v181 = vaddq_f32(v177, vmulq_f32(v10, v172));
      float32x4_t v182 = vaddq_f32(v180, vmulq_f32(v7, v176));
      float32x4_t v183 = vaddq_f32(vaddq_f32(v180, vmulq_f32(v9, v173)), vmulq_f32(v8, v176));
      float32x4_t v184 = vaddq_f32(v180, vmulq_f32(v10, v173));
      int16x8_t v185 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v178)), vcvtnq_s32_f32(v182));
      int16x8_t v186 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v179, vmulq_f32(v8, v175)))), vcvtnq_s32_f32(v183));
      int16x8_t v187 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v181)), vcvtnq_s32_f32(v184));
      int16x8_t v188 = vminq_s16(vmaxq_s16(v185, (int16x8_t)0), v132);
      int16x8_t v189 = vminq_s16(vmaxq_s16(v186, (int16x8_t)0), v132);
      int16x8_t v190 = vminq_s16(vmaxq_s16(v187, (int16x8_t)0), v132);
      *int32x4_t v128 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v189, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v188, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v190, (int16x8_t)0), 2uLL)));
      v128[1] = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v189, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v188, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v190, (int16x8_t)0), 2uLL)));
      int32x4_t v128 = (int8x16_t *)((char *)v128 + a3);
      --v129;
    }
    while (v129 > 1);
  }
  return result;
}

int8x16_t *from_444_to_R10k<8,8,(AlphaOutputMethod)0,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E662551u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBD88D377);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBCDB0243);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E879762u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int16x8_t v138 = a2 + 8;
    int16x8_t v139 = a2 + 32;
    int32x4_t v140 = a2 + 40;
    int32x4_t v141 = a2 + 64;
    int16x8_t v142 = a2 + 72;
    int v144 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E4CE46Du);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBDD0BB5A);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBD492C18);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E817B8Au);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E578094u);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBDA6FF94);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBCC062D8);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E897A02u);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x3E157ABDu);
  v15.i64[0] = 0xFC00FC00FC00FC00;
  v15.i64[1] = 0xFC00FC00FC00FC00;
  do
  {
    int16x8_t v16 = vaddq_s16(*a2, v13);
    int16x8_t v17 = a2[32];
    int16x8_t v18 = a2[40];
    int16x8_t v19 = vcltzq_s16(v16);
    int32x4_t v20 = (int32x4_t)vzip1q_s16(v16, v19);
    int32x4_t v21 = (int32x4_t)vzip2q_s16(v16, v19);
    float32x4_t v22 = vcvtq_f32_s32(v20);
    int16x8_t v23 = vcltzq_s16(v17);
    float32x4_t v24 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v17, v23));
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v17, v23));
    int16x8_t v26 = vcltzq_s16(v18);
    float32x4_t v27 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v18, v26));
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v18, v26));
    float32x4_t v29 = vmulq_f32(v22, v14);
    float32x4_t v30 = vaddq_f32(v29, vmulq_f32(v9, v24));
    float32x4_t v31 = vaddq_f32(v29, vmulq_f32(v7, v27));
    float32x4_t v32 = vaddq_f32(v29, vmulq_f32(v10, v24));
    float32x4_t v33 = vmulq_f32(vcvtq_f32_s32(v21), v14);
    float32x4_t v34 = vaddq_f32(v33, vmulq_f32(v7, v28));
    float32x4_t v35 = vaddq_f32(vaddq_f32(v33, vmulq_f32(v9, v25)), vmulq_f32(v8, v28));
    float32x4_t v36 = vaddq_f32(v33, vmulq_f32(v10, v25));
    int16x8_t v37 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), vcvtnq_s32_f32(v34));
    int16x8_t v38 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v30, vmulq_f32(v8, v27)))), vcvtnq_s32_f32(v35));
    int16x8_t v39 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v32)), vcvtnq_s32_f32(v36));
    int16x8_t v40 = vminq_s16(vmaxq_s16(v37, (int16x8_t)0), v15);
    int16x8_t v41 = vminq_s16(vmaxq_s16(v38, (int16x8_t)0), v15);
    int16x8_t v42 = vminq_s16(vmaxq_s16(v39, (int16x8_t)0), v15);
    int8x16_t v43 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v40, (int16x8_t)v7), 0x16uLL);
    int8x16_t v44 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v41, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v40, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v42, (int16x8_t)0), 2uLL)));
    int32x4_t v45 = (int32x4_t)vrev16q_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v41, (int16x8_t)0), 0xCuLL), vorrq_s8(v43, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v42, (int16x8_t)0), 2uLL))));
    int32x4_t v46 = (int32x4_t)vrev16q_s8(v44);
    *int8x8_t result = vorrq_s8((int8x16_t)vshlq_n_s32(v45, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v45, 0x10uLL));
    result[1] = vorrq_s8((int8x16_t)vshlq_n_s32(v46, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v46, 0x10uLL));
    int16x8_t v47 = vaddq_s16(a2[8], v13);
    int16x8_t v48 = a2[64];
    int16x8_t v49 = a2[72];
    int16x8_t v50 = a2 + 1;
    int16x8_t v51 = vcltzq_s16(v47);
    int32x4_t v52 = (int32x4_t)vzip1q_s16(v47, v51);
    int32x4_t v53 = (int32x4_t)vzip2q_s16(v47, v51);
    int16x8_t v54 = vcltzq_s16(v48);
    float32x4_t v55 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v48, v54));
    float32x4_t v56 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v48, v54));
    int16x8_t v57 = vcltzq_s16(v49);
    float32x4_t v58 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v49, v57));
    float32x4_t v59 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v49, v57));
    float32x4_t v60 = vmulq_f32(vcvtq_f32_s32(v52), v14);
    float32x4_t v61 = vaddq_f32(v60, vmulq_f32(v7, v58));
    float32x4_t v62 = vaddq_f32(v60, vmulq_f32(v9, v55));
    float32x4_t v63 = vmulq_f32(vcvtq_f32_s32(v53), v14);
    float32x4_t v64 = vaddq_f32(v60, vmulq_f32(v10, v55));
    float32x4_t v65 = vaddq_f32(v63, vmulq_f32(v7, v59));
    float32x4_t v66 = vaddq_f32(vaddq_f32(v63, vmulq_f32(v9, v56)), vmulq_f32(v8, v59));
    float32x4_t v67 = vaddq_f32(v63, vmulq_f32(v10, v56));
    int16x8_t v68 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v61)), vcvtnq_s32_f32(v65));
    int16x8_t v69 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v62, vmulq_f32(v8, v58)))), vcvtnq_s32_f32(v66));
    int16x8_t v70 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v64)), vcvtnq_s32_f32(v67));
    int16x8_t v71 = vminq_s16(vmaxq_s16(v68, (int16x8_t)0), v15);
    int16x8_t v72 = vminq_s16(vmaxq_s16(v69, (int16x8_t)0), v15);
    int16x8_t v73 = vminq_s16(vmaxq_s16(v70, (int16x8_t)0), v15);
    int8x16_t v74 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v71, (int16x8_t)v7), 0x16uLL);
    int8x16_t v75 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v72, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v71, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v73, (int16x8_t)0), 2uLL)));
    int32x4_t v76 = (int32x4_t)vrev16q_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v72, (int16x8_t)0), 0xCuLL), vorrq_s8(v74, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v73, (int16x8_t)0), 2uLL))));
    int32x4_t v77 = (int32x4_t)vrev16q_s8(v75);
    result[2] = vorrq_s8((int8x16_t)vshlq_n_s32(v76, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v76, 0x10uLL));
    result[3] = vorrq_s8((int8x16_t)vshlq_n_s32(v77, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v77, 0x10uLL));
    float32x4_t v78 = (int8x16_t *)((char *)result + 8 * a3);
    int16x8_t v79 = vaddq_s16(a2[16], v13);
    int16x8_t v80 = a2[48];
    int16x8_t v81 = a2[56];
    int16x8_t v82 = vcltzq_s16(v79);
    int32x4_t v83 = (int32x4_t)vzip1q_s16(v79, v82);
    int32x4_t v84 = (int32x4_t)vzip2q_s16(v79, v82);
    int16x8_t v85 = vcltzq_s16(v80);
    float32x4_t v86 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v80, v85));
    int32x4_t v87 = (int32x4_t)vzip2q_s16(v80, v85);
    float32x4_t v88 = vcvtq_f32_s32(v83);
    float32x4_t v89 = vcvtq_f32_s32(v87);
    int16x8_t v90 = vcltzq_s16(v81);
    float32x4_t v91 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v81, v90));
    float32x4_t v92 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v81, v90));
    float32x4_t v93 = vmulq_f32(v88, v14);
    float32x4_t v94 = vaddq_f32(v93, vmulq_f32(v7, v91));
    float32x4_t v95 = vmulq_f32(vcvtq_f32_s32(v84), v14);
    float32x4_t v96 = vaddq_f32(vaddq_f32(v93, vmulq_f32(v9, v86)), vmulq_f32(v8, v91));
    float32x4_t v97 = vaddq_f32(v95, vmulq_f32(v9, v89));
    int16x8_t v98 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v93, vmulq_f32(v10, v86)))), vcvtnq_s32_f32(vaddq_f32(v95, vmulq_f32(v10, v89))));
    int16x8_t v99 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v94)), vcvtnq_s32_f32(vaddq_f32(v95, vmulq_f32(v7, v92)))), (int16x8_t)0), v15);
    int16x8_t v100 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v96)), vcvtnq_s32_f32(vaddq_f32(v97, vmulq_f32(v8, v92)))), (int16x8_t)0), v15);
    int16x8_t v101 = vminq_s16(vmaxq_s16(v98, (int16x8_t)0), v15);
    int8x16_t v102 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v99, (int16x8_t)v7), 0x16uLL);
    int8x16_t v103 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v100, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v99, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v101, (int16x8_t)0), 2uLL)));
    int8x8_t result = (int8x16_t *)((char *)result + a3);
    int32x4_t v104 = (int32x4_t)vrev16q_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v100, (int16x8_t)0), 0xCuLL), vorrq_s8(v102, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v101, (int16x8_t)0), 2uLL))));
    int32x4_t v105 = (int32x4_t)vrev16q_s8(v103);
    *float32x4_t v78 = vorrq_s8((int8x16_t)vshlq_n_s32(v104, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v104, 0x10uLL));
    v78[1] = vorrq_s8((int8x16_t)vshlq_n_s32(v105, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v105, 0x10uLL));
    int16x8_t v106 = vaddq_s16(a2[24], v13);
    int16x8_t v107 = a2[80];
    int16x8_t v108 = a2[88];
    int16x8_t v109 = vcltzq_s16(v106);
    int32x4_t v110 = (int32x4_t)vzip1q_s16(v106, v109);
    int32x4_t v111 = (int32x4_t)vzip2q_s16(v106, v109);
    float32x4_t v112 = vcvtq_f32_s32(v110);
    int16x8_t v113 = vcltzq_s16(v107);
    float32x4_t v114 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v107, v113));
    float32x4_t v115 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v107, v113));
    int16x8_t v116 = vcltzq_s16(v108);
    float32x4_t v117 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v108, v116));
    float32x4_t v118 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v108, v116));
    float32x4_t v119 = vmulq_f32(v112, v14);
    float32x4_t v120 = vaddq_f32(v119, vmulq_f32(v9, v114));
    float32x4_t v121 = vaddq_f32(v119, vmulq_f32(v7, v117));
    float32x4_t v122 = vaddq_f32(v119, vmulq_f32(v10, v114));
    float32x4_t v123 = vmulq_f32(vcvtq_f32_s32(v111), v14);
    float32x4_t v124 = vaddq_f32(v123, vmulq_f32(v7, v118));
    float32x4_t v125 = vaddq_f32(vaddq_f32(v123, vmulq_f32(v9, v115)), vmulq_f32(v8, v118));
    float32x4_t v126 = vaddq_f32(v123, vmulq_f32(v10, v115));
    int16x8_t v127 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v121)), vcvtnq_s32_f32(v124));
    int16x8_t v128 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v120, vmulq_f32(v8, v117)))), vcvtnq_s32_f32(v125));
    int16x8_t v129 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v122)), vcvtnq_s32_f32(v126));
    int16x8_t v130 = vminq_s16(vmaxq_s16(v127, (int16x8_t)0), v15);
    int16x8_t v131 = vminq_s16(vmaxq_s16(v128, (int16x8_t)0), v15);
    int16x8_t v132 = vminq_s16(vmaxq_s16(v129, (int16x8_t)0), v15);
    int8x16_t v133 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v130, (int16x8_t)v7), 0x16uLL);
    int8x16_t v134 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v131, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v130, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v132, (int16x8_t)0), 2uLL)));
    int32x4_t v135 = (int32x4_t)vrev16q_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v131, (int16x8_t)0), 0xCuLL), vorrq_s8(v133, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v132, (int16x8_t)0), 2uLL))));
    int32x4_t v136 = (int32x4_t)vrev16q_s8(v134);
    v78[2] = vorrq_s8((int8x16_t)vshlq_n_s32(v135, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v135, 0x10uLL));
    v78[3] = vorrq_s8((int8x16_t)vshlq_n_s32(v136, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v136, 0x10uLL));
    int v137 = v12 - 1;
    LODWORD(v78) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v78 > 1);
  int16x8_t v138 = v50 + 8;
  int16x8_t v139 = v50 + 32;
  int32x4_t v140 = v50 + 40;
  int32x4_t v141 = v50 + 64;
  int16x8_t v142 = v50 + 72;
  if (a4 <= 8) {
    int v143 = 8;
  }
  else {
    int v143 = a4;
  }
  int v144 = v137 - v143;
  a2 = v50;
  if (v144 >= 1)
  {
LABEL_24:
    int16x8_t v145 = result + 2;
    unsigned int v146 = v144 + 1;
    v147.i64[0] = 0xE000E000E000E00;
    v147.i64[1] = 0xE000E000E000E00;
    float32x4_t v148 = (float32x4_t)vdupq_n_s32(0x3E157ABDu);
    v149.i64[0] = 0xFC00FC00FC00FC00;
    v149.i64[1] = 0xFC00FC00FC00FC00;
    do
    {
      int16x8_t v150 = *a2++;
      int16x8_t v151 = vaddq_s16(v150, v147);
      int16x8_t v152 = *v139++;
      int16x8_t v153 = v152;
      int16x8_t v154 = *v140++;
      int16x8_t v155 = vcltzq_s16(v151);
      int32x4_t v156 = (int32x4_t)vzip1q_s16(v151, v155);
      int32x4_t v157 = (int32x4_t)vzip2q_s16(v151, v155);
      int16x8_t v158 = vcltzq_s16(v153);
      float32x4_t v159 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v153, v158));
      int32x4_t v160 = (int32x4_t)vzip2q_s16(v153, v158);
      float32x4_t v161 = vcvtq_f32_s32(v156);
      float32x4_t v162 = vcvtq_f32_s32(v160);
      int16x8_t v163 = vcltzq_s16(v154);
      float32x4_t v164 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v154, v163));
      float32x4_t v165 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v154, v163));
      float32x4_t v166 = vmulq_f32(v161, v148);
      float32x4_t v167 = vaddq_f32(v166, vmulq_f32(v7, v164));
      float32x4_t v168 = vmulq_f32(vcvtq_f32_s32(v157), v148);
      float32x4_t v169 = vaddq_f32(vaddq_f32(v166, vmulq_f32(v9, v159)), vmulq_f32(v8, v164));
      float32x4_t v170 = vaddq_f32(v168, vmulq_f32(v9, v162));
      int16x8_t v171 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v166, vmulq_f32(v10, v159)))), vcvtnq_s32_f32(vaddq_f32(v168, vmulq_f32(v10, v162))));
      int16x8_t v172 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v167)), vcvtnq_s32_f32(vaddq_f32(v168, vmulq_f32(v7, v165)))), (int16x8_t)0), v149);
      int16x8_t v173 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v169)), vcvtnq_s32_f32(vaddq_f32(v170, vmulq_f32(v8, v165)))), (int16x8_t)0), v149);
      int16x8_t v174 = vminq_s16(vmaxq_s16(v171, (int16x8_t)0), v149);
      int8x16_t v175 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v172, (int16x8_t)v7), 0x16uLL);
      int8x16_t v176 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v173, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v172, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v174, (int16x8_t)0), 2uLL)));
      int32x4_t v177 = (int32x4_t)vrev16q_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v173, (int16x8_t)0), 0xCuLL), vorrq_s8(v175, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v174, (int16x8_t)0), 2uLL))));
      int32x4_t v178 = (int32x4_t)vrev16q_s8(v176);
      v145[-2] = vorrq_s8((int8x16_t)vshlq_n_s32(v177, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v177, 0x10uLL));
      v145[-1] = vorrq_s8((int8x16_t)vshlq_n_s32(v178, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v178, 0x10uLL));
      int16x8_t v179 = *v138++;
      int16x8_t v180 = vaddq_s16(v179, v147);
      int16x8_t v181 = *v141++;
      int16x8_t v182 = v181;
      int16x8_t v183 = *v142++;
      int16x8_t v184 = vcltzq_s16(v180);
      int32x4_t v185 = (int32x4_t)vzip1q_s16(v180, v184);
      int32x4_t v186 = (int32x4_t)vzip2q_s16(v180, v184);
      int16x8_t v187 = vcltzq_s16(v182);
      float32x4_t v188 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v182, v187));
      int32x4_t v189 = (int32x4_t)vzip2q_s16(v182, v187);
      float32x4_t v190 = vcvtq_f32_s32(v185);
      float32x4_t v191 = vcvtq_f32_s32(v189);
      int16x8_t v192 = vcltzq_s16(v183);
      float32x4_t v193 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v183, v192));
      float32x4_t v194 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v183, v192));
      float32x4_t v195 = vmulq_f32(v190, v148);
      float32x4_t v196 = vaddq_f32(v195, vmulq_f32(v7, v193));
      float32x4_t v197 = vmulq_f32(vcvtq_f32_s32(v186), v148);
      float32x4_t v198 = vaddq_f32(vaddq_f32(v195, vmulq_f32(v9, v188)), vmulq_f32(v8, v193));
      float32x4_t v199 = vaddq_f32(v197, vmulq_f32(v9, v191));
      int16x8_t v200 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v195, vmulq_f32(v10, v188)))), vcvtnq_s32_f32(vaddq_f32(v197, vmulq_f32(v10, v191))));
      int16x8_t v201 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v196)), vcvtnq_s32_f32(vaddq_f32(v197, vmulq_f32(v7, v194)))), (int16x8_t)0), v149);
      int16x8_t v202 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v198)), vcvtnq_s32_f32(vaddq_f32(v199, vmulq_f32(v8, v194)))), (int16x8_t)0), v149);
      int16x8_t v203 = vminq_s16(vmaxq_s16(v200, (int16x8_t)0), v149);
      int8x16_t v204 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v201, (int16x8_t)v7), 0x16uLL);
      int8x16_t v205 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v202, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v201, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v203, (int16x8_t)0), 2uLL)));
      int32x4_t v206 = (int32x4_t)vrev16q_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v202, (int16x8_t)0), 0xCuLL), vorrq_s8(v204, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v203, (int16x8_t)0), 2uLL))));
      int32x4_t v207 = (int32x4_t)vrev16q_s8(v205);
      *int16x8_t v145 = vorrq_s8((int8x16_t)vshlq_n_s32(v206, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v206, 0x10uLL));
      v145[1] = vorrq_s8((int8x16_t)vshlq_n_s32(v207, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v207, 0x10uLL));
      int16x8_t v145 = (int8x16_t *)((char *)v145 + a3);
      --v146;
    }
    while (v146 > 1);
  }
  return result;
}

int8x16_t *from_444_to_R10k<8,8,(AlphaOutputMethod)0,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E662551u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBD88D377);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBCDB0243);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E879762u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int16x8_t v138 = a2 + 8;
    int16x8_t v139 = a2 + 32;
    int32x4_t v140 = a2 + 40;
    int32x4_t v141 = a2 + 64;
    int16x8_t v142 = a2 + 72;
    int v144 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E4CE46Du);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBDD0BB5A);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBD492C18);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E817B8Au);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E578094u);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBDA6FF94);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBCC062D8);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E897A02u);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x3E157ABDu);
  v15.i64[0] = 0xFC00FC00FC00FC00;
  v15.i64[1] = 0xFC00FC00FC00FC00;
  do
  {
    int16x8_t v16 = vaddq_s16(*a2, v13);
    int16x8_t v17 = a2[32];
    int16x8_t v18 = a2[40];
    int16x8_t v19 = vcltzq_s16(v16);
    int32x4_t v20 = (int32x4_t)vzip1q_s16(v16, v19);
    int32x4_t v21 = (int32x4_t)vzip2q_s16(v16, v19);
    float32x4_t v22 = vcvtq_f32_s32(v20);
    int16x8_t v23 = vcltzq_s16(v17);
    float32x4_t v24 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v17, v23));
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v17, v23));
    int16x8_t v26 = vcltzq_s16(v18);
    float32x4_t v27 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v18, v26));
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v18, v26));
    float32x4_t v29 = vmulq_f32(v22, v14);
    float32x4_t v30 = vaddq_f32(v29, vmulq_f32(v9, v24));
    float32x4_t v31 = vaddq_f32(v29, vmulq_f32(v7, v27));
    float32x4_t v32 = vaddq_f32(v29, vmulq_f32(v10, v24));
    float32x4_t v33 = vmulq_f32(vcvtq_f32_s32(v21), v14);
    float32x4_t v34 = vaddq_f32(v33, vmulq_f32(v7, v28));
    float32x4_t v35 = vaddq_f32(vaddq_f32(v33, vmulq_f32(v9, v25)), vmulq_f32(v8, v28));
    float32x4_t v36 = vaddq_f32(v33, vmulq_f32(v10, v25));
    int16x8_t v37 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), vcvtnq_s32_f32(v34));
    int16x8_t v38 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v30, vmulq_f32(v8, v27)))), vcvtnq_s32_f32(v35));
    int16x8_t v39 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v32)), vcvtnq_s32_f32(v36));
    int16x8_t v40 = vminq_s16(vmaxq_s16(v37, (int16x8_t)0), v15);
    int16x8_t v41 = vminq_s16(vmaxq_s16(v38, (int16x8_t)0), v15);
    int16x8_t v42 = vminq_s16(vmaxq_s16(v39, (int16x8_t)0), v15);
    int8x16_t v43 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v40, (int16x8_t)v7), 0x16uLL);
    int8x16_t v44 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v41, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v40, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v42, (int16x8_t)0), 2uLL)));
    int32x4_t v45 = (int32x4_t)vrev16q_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v41, (int16x8_t)0), 0xCuLL), vorrq_s8(v43, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v42, (int16x8_t)0), 2uLL))));
    int32x4_t v46 = (int32x4_t)vrev16q_s8(v44);
    *int8x8_t result = vorrq_s8((int8x16_t)vshlq_n_s32(v45, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v45, 0x10uLL));
    result[1] = vorrq_s8((int8x16_t)vshlq_n_s32(v46, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v46, 0x10uLL));
    int16x8_t v47 = vaddq_s16(a2[8], v13);
    int16x8_t v48 = a2[64];
    int16x8_t v49 = a2[72];
    int16x8_t v50 = a2 + 1;
    int16x8_t v51 = vcltzq_s16(v47);
    int32x4_t v52 = (int32x4_t)vzip1q_s16(v47, v51);
    int32x4_t v53 = (int32x4_t)vzip2q_s16(v47, v51);
    int16x8_t v54 = vcltzq_s16(v48);
    float32x4_t v55 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v48, v54));
    float32x4_t v56 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v48, v54));
    int16x8_t v57 = vcltzq_s16(v49);
    float32x4_t v58 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v49, v57));
    float32x4_t v59 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v49, v57));
    float32x4_t v60 = vmulq_f32(vcvtq_f32_s32(v52), v14);
    float32x4_t v61 = vaddq_f32(v60, vmulq_f32(v7, v58));
    float32x4_t v62 = vaddq_f32(v60, vmulq_f32(v9, v55));
    float32x4_t v63 = vmulq_f32(vcvtq_f32_s32(v53), v14);
    float32x4_t v64 = vaddq_f32(v60, vmulq_f32(v10, v55));
    float32x4_t v65 = vaddq_f32(v63, vmulq_f32(v7, v59));
    float32x4_t v66 = vaddq_f32(vaddq_f32(v63, vmulq_f32(v9, v56)), vmulq_f32(v8, v59));
    float32x4_t v67 = vaddq_f32(v63, vmulq_f32(v10, v56));
    int16x8_t v68 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v61)), vcvtnq_s32_f32(v65));
    int16x8_t v69 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v62, vmulq_f32(v8, v58)))), vcvtnq_s32_f32(v66));
    int16x8_t v70 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v64)), vcvtnq_s32_f32(v67));
    int16x8_t v71 = vminq_s16(vmaxq_s16(v68, (int16x8_t)0), v15);
    int16x8_t v72 = vminq_s16(vmaxq_s16(v69, (int16x8_t)0), v15);
    int16x8_t v73 = vminq_s16(vmaxq_s16(v70, (int16x8_t)0), v15);
    int8x16_t v74 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v71, (int16x8_t)v7), 0x16uLL);
    int8x16_t v75 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v72, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v71, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v73, (int16x8_t)0), 2uLL)));
    int32x4_t v76 = (int32x4_t)vrev16q_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v72, (int16x8_t)0), 0xCuLL), vorrq_s8(v74, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v73, (int16x8_t)0), 2uLL))));
    int32x4_t v77 = (int32x4_t)vrev16q_s8(v75);
    result[2] = vorrq_s8((int8x16_t)vshlq_n_s32(v76, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v76, 0x10uLL));
    result[3] = vorrq_s8((int8x16_t)vshlq_n_s32(v77, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v77, 0x10uLL));
    float32x4_t v78 = (int8x16_t *)((char *)result + 8 * a3);
    int16x8_t v79 = vaddq_s16(a2[16], v13);
    int16x8_t v80 = a2[48];
    int16x8_t v81 = a2[56];
    int16x8_t v82 = vcltzq_s16(v79);
    int32x4_t v83 = (int32x4_t)vzip1q_s16(v79, v82);
    int32x4_t v84 = (int32x4_t)vzip2q_s16(v79, v82);
    int16x8_t v85 = vcltzq_s16(v80);
    float32x4_t v86 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v80, v85));
    int32x4_t v87 = (int32x4_t)vzip2q_s16(v80, v85);
    float32x4_t v88 = vcvtq_f32_s32(v83);
    float32x4_t v89 = vcvtq_f32_s32(v87);
    int16x8_t v90 = vcltzq_s16(v81);
    float32x4_t v91 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v81, v90));
    float32x4_t v92 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v81, v90));
    float32x4_t v93 = vmulq_f32(v88, v14);
    float32x4_t v94 = vaddq_f32(v93, vmulq_f32(v7, v91));
    float32x4_t v95 = vmulq_f32(vcvtq_f32_s32(v84), v14);
    float32x4_t v96 = vaddq_f32(vaddq_f32(v93, vmulq_f32(v9, v86)), vmulq_f32(v8, v91));
    float32x4_t v97 = vaddq_f32(v95, vmulq_f32(v9, v89));
    int16x8_t v98 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v93, vmulq_f32(v10, v86)))), vcvtnq_s32_f32(vaddq_f32(v95, vmulq_f32(v10, v89))));
    int16x8_t v99 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v94)), vcvtnq_s32_f32(vaddq_f32(v95, vmulq_f32(v7, v92)))), (int16x8_t)0), v15);
    int16x8_t v100 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v96)), vcvtnq_s32_f32(vaddq_f32(v97, vmulq_f32(v8, v92)))), (int16x8_t)0), v15);
    int16x8_t v101 = vminq_s16(vmaxq_s16(v98, (int16x8_t)0), v15);
    int8x16_t v102 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v99, (int16x8_t)v7), 0x16uLL);
    int8x16_t v103 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v100, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v99, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v101, (int16x8_t)0), 2uLL)));
    int8x8_t result = (int8x16_t *)((char *)result + a3);
    int32x4_t v104 = (int32x4_t)vrev16q_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v100, (int16x8_t)0), 0xCuLL), vorrq_s8(v102, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v101, (int16x8_t)0), 2uLL))));
    int32x4_t v105 = (int32x4_t)vrev16q_s8(v103);
    *float32x4_t v78 = vorrq_s8((int8x16_t)vshlq_n_s32(v104, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v104, 0x10uLL));
    v78[1] = vorrq_s8((int8x16_t)vshlq_n_s32(v105, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v105, 0x10uLL));
    int16x8_t v106 = vaddq_s16(a2[24], v13);
    int16x8_t v107 = a2[80];
    int16x8_t v108 = a2[88];
    int16x8_t v109 = vcltzq_s16(v106);
    int32x4_t v110 = (int32x4_t)vzip1q_s16(v106, v109);
    int32x4_t v111 = (int32x4_t)vzip2q_s16(v106, v109);
    float32x4_t v112 = vcvtq_f32_s32(v110);
    int16x8_t v113 = vcltzq_s16(v107);
    float32x4_t v114 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v107, v113));
    float32x4_t v115 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v107, v113));
    int16x8_t v116 = vcltzq_s16(v108);
    float32x4_t v117 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v108, v116));
    float32x4_t v118 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v108, v116));
    float32x4_t v119 = vmulq_f32(v112, v14);
    float32x4_t v120 = vaddq_f32(v119, vmulq_f32(v9, v114));
    float32x4_t v121 = vaddq_f32(v119, vmulq_f32(v7, v117));
    float32x4_t v122 = vaddq_f32(v119, vmulq_f32(v10, v114));
    float32x4_t v123 = vmulq_f32(vcvtq_f32_s32(v111), v14);
    float32x4_t v124 = vaddq_f32(v123, vmulq_f32(v7, v118));
    float32x4_t v125 = vaddq_f32(vaddq_f32(v123, vmulq_f32(v9, v115)), vmulq_f32(v8, v118));
    float32x4_t v126 = vaddq_f32(v123, vmulq_f32(v10, v115));
    int16x8_t v127 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v121)), vcvtnq_s32_f32(v124));
    int16x8_t v128 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v120, vmulq_f32(v8, v117)))), vcvtnq_s32_f32(v125));
    int16x8_t v129 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v122)), vcvtnq_s32_f32(v126));
    int16x8_t v130 = vminq_s16(vmaxq_s16(v127, (int16x8_t)0), v15);
    int16x8_t v131 = vminq_s16(vmaxq_s16(v128, (int16x8_t)0), v15);
    int16x8_t v132 = vminq_s16(vmaxq_s16(v129, (int16x8_t)0), v15);
    int8x16_t v133 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v130, (int16x8_t)v7), 0x16uLL);
    int8x16_t v134 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v131, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v130, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v132, (int16x8_t)0), 2uLL)));
    int32x4_t v135 = (int32x4_t)vrev16q_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v131, (int16x8_t)0), 0xCuLL), vorrq_s8(v133, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v132, (int16x8_t)0), 2uLL))));
    int32x4_t v136 = (int32x4_t)vrev16q_s8(v134);
    v78[2] = vorrq_s8((int8x16_t)vshlq_n_s32(v135, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v135, 0x10uLL));
    v78[3] = vorrq_s8((int8x16_t)vshlq_n_s32(v136, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v136, 0x10uLL));
    int v137 = v12 - 1;
    LODWORD(v78) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v78 > 1);
  int16x8_t v138 = v50 + 8;
  int16x8_t v139 = v50 + 32;
  int32x4_t v140 = v50 + 40;
  int32x4_t v141 = v50 + 64;
  int16x8_t v142 = v50 + 72;
  if (a4 <= 8) {
    int v143 = 8;
  }
  else {
    int v143 = a4;
  }
  int v144 = v137 - v143;
  a2 = v50;
  if (v144 >= 1)
  {
LABEL_24:
    int16x8_t v145 = result + 2;
    unsigned int v146 = v144 + 1;
    v147.i64[0] = 0xE000E000E000E00;
    v147.i64[1] = 0xE000E000E000E00;
    float32x4_t v148 = (float32x4_t)vdupq_n_s32(0x3E157ABDu);
    v149.i64[0] = 0xFC00FC00FC00FC00;
    v149.i64[1] = 0xFC00FC00FC00FC00;
    do
    {
      int16x8_t v150 = *a2++;
      int16x8_t v151 = vaddq_s16(v150, v147);
      int16x8_t v152 = *v139++;
      int16x8_t v153 = v152;
      int16x8_t v154 = *v140++;
      int16x8_t v155 = vcltzq_s16(v151);
      int32x4_t v156 = (int32x4_t)vzip1q_s16(v151, v155);
      int32x4_t v157 = (int32x4_t)vzip2q_s16(v151, v155);
      int16x8_t v158 = vcltzq_s16(v153);
      float32x4_t v159 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v153, v158));
      int32x4_t v160 = (int32x4_t)vzip2q_s16(v153, v158);
      float32x4_t v161 = vcvtq_f32_s32(v156);
      float32x4_t v162 = vcvtq_f32_s32(v160);
      int16x8_t v163 = vcltzq_s16(v154);
      float32x4_t v164 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v154, v163));
      float32x4_t v165 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v154, v163));
      float32x4_t v166 = vmulq_f32(v161, v148);
      float32x4_t v167 = vaddq_f32(v166, vmulq_f32(v7, v164));
      float32x4_t v168 = vmulq_f32(vcvtq_f32_s32(v157), v148);
      float32x4_t v169 = vaddq_f32(vaddq_f32(v166, vmulq_f32(v9, v159)), vmulq_f32(v8, v164));
      float32x4_t v170 = vaddq_f32(v168, vmulq_f32(v9, v162));
      int16x8_t v171 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v166, vmulq_f32(v10, v159)))), vcvtnq_s32_f32(vaddq_f32(v168, vmulq_f32(v10, v162))));
      int16x8_t v172 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v167)), vcvtnq_s32_f32(vaddq_f32(v168, vmulq_f32(v7, v165)))), (int16x8_t)0), v149);
      int16x8_t v173 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v169)), vcvtnq_s32_f32(vaddq_f32(v170, vmulq_f32(v8, v165)))), (int16x8_t)0), v149);
      int16x8_t v174 = vminq_s16(vmaxq_s16(v171, (int16x8_t)0), v149);
      int8x16_t v175 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v172, (int16x8_t)v7), 0x16uLL);
      int8x16_t v176 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v173, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v172, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v174, (int16x8_t)0), 2uLL)));
      int32x4_t v177 = (int32x4_t)vrev16q_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v173, (int16x8_t)0), 0xCuLL), vorrq_s8(v175, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v174, (int16x8_t)0), 2uLL))));
      int32x4_t v178 = (int32x4_t)vrev16q_s8(v176);
      v145[-2] = vorrq_s8((int8x16_t)vshlq_n_s32(v177, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v177, 0x10uLL));
      v145[-1] = vorrq_s8((int8x16_t)vshlq_n_s32(v178, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v178, 0x10uLL));
      int16x8_t v179 = *v138++;
      int16x8_t v180 = vaddq_s16(v179, v147);
      int16x8_t v181 = *v141++;
      int16x8_t v182 = v181;
      int16x8_t v183 = *v142++;
      int16x8_t v184 = vcltzq_s16(v180);
      int32x4_t v185 = (int32x4_t)vzip1q_s16(v180, v184);
      int32x4_t v186 = (int32x4_t)vzip2q_s16(v180, v184);
      int16x8_t v187 = vcltzq_s16(v182);
      float32x4_t v188 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v182, v187));
      int32x4_t v189 = (int32x4_t)vzip2q_s16(v182, v187);
      float32x4_t v190 = vcvtq_f32_s32(v185);
      float32x4_t v191 = vcvtq_f32_s32(v189);
      int16x8_t v192 = vcltzq_s16(v183);
      float32x4_t v193 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v183, v192));
      float32x4_t v194 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v183, v192));
      float32x4_t v195 = vmulq_f32(v190, v148);
      float32x4_t v196 = vaddq_f32(v195, vmulq_f32(v7, v193));
      float32x4_t v197 = vmulq_f32(vcvtq_f32_s32(v186), v148);
      float32x4_t v198 = vaddq_f32(vaddq_f32(v195, vmulq_f32(v9, v188)), vmulq_f32(v8, v193));
      float32x4_t v199 = vaddq_f32(v197, vmulq_f32(v9, v191));
      int16x8_t v200 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v195, vmulq_f32(v10, v188)))), vcvtnq_s32_f32(vaddq_f32(v197, vmulq_f32(v10, v191))));
      int16x8_t v201 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v196)), vcvtnq_s32_f32(vaddq_f32(v197, vmulq_f32(v7, v194)))), (int16x8_t)0), v149);
      int16x8_t v202 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v198)), vcvtnq_s32_f32(vaddq_f32(v199, vmulq_f32(v8, v194)))), (int16x8_t)0), v149);
      int16x8_t v203 = vminq_s16(vmaxq_s16(v200, (int16x8_t)0), v149);
      int8x16_t v204 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v201, (int16x8_t)v7), 0x16uLL);
      int8x16_t v205 = vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v202, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v201, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v203, (int16x8_t)0), 2uLL)));
      int32x4_t v206 = (int32x4_t)vrev16q_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v202, (int16x8_t)0), 0xCuLL), vorrq_s8(v204, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v203, (int16x8_t)0), 2uLL))));
      int32x4_t v207 = (int32x4_t)vrev16q_s8(v205);
      *int16x8_t v145 = vorrq_s8((int8x16_t)vshlq_n_s32(v206, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v206, 0x10uLL));
      v145[1] = vorrq_s8((int8x16_t)vshlq_n_s32(v207, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v207, 0x10uLL));
      int16x8_t v145 = (int8x16_t *)((char *)v145 + a3);
      --v146;
    }
    while (v146 > 1);
  }
  return result;
}

int8x16_t *from_444_to_r210<8,8,(AlphaOutputMethod)0,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E662551u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBD88D377);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBCDB0243);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E879762u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int16x8_t v139 = a2 + 8;
    int32x4_t v140 = a2 + 32;
    int32x4_t v141 = a2 + 40;
    int16x8_t v142 = a2 + 64;
    int v143 = a2 + 72;
    int v145 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E4CE46Du);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBDD0BB5A);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBD492C18);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E817B8Au);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E578094u);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBDA6FF94);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBCC062D8);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E897A02u);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x3E157ABDu);
  v15.i64[0] = 0xFC00FC00FC00FC00;
  v15.i64[1] = 0xFC00FC00FC00FC00;
  do
  {
    int16x8_t v16 = a2[32];
    int16x8_t v17 = a2[40];
    int16x8_t v18 = vaddq_s16(*a2, v13);
    int16x8_t v19 = vcltzq_s16(v18);
    int32x4_t v20 = (int32x4_t)vzip1q_s16(v18, v19);
    int32x4_t v21 = (int32x4_t)vzip2q_s16(v18, v19);
    int16x8_t v22 = vcltzq_s16(v16);
    float32x4_t v23 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v16, v22));
    float32x4_t v24 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v16, v22));
    int16x8_t v25 = vcltzq_s16(v17);
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v17, v25));
    float32x4_t v27 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v17, v25));
    float32x4_t v28 = vmulq_f32(vcvtq_f32_s32(v20), v14);
    float32x4_t v29 = vaddq_f32(v28, vmulq_f32(v7, v26));
    float32x4_t v30 = vaddq_f32(v28, vmulq_f32(v9, v23));
    float32x4_t v31 = vmulq_f32(vcvtq_f32_s32(v21), v14);
    float32x4_t v32 = vaddq_f32(v28, vmulq_f32(v10, v23));
    float32x4_t v33 = vaddq_f32(v31, vmulq_f32(v7, v27));
    float32x4_t v34 = vaddq_f32(vaddq_f32(v31, vmulq_f32(v9, v24)), vmulq_f32(v8, v27));
    float32x4_t v35 = vaddq_f32(v31, vmulq_f32(v10, v24));
    int16x8_t v36 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v29)), vcvtnq_s32_f32(v33));
    int16x8_t v37 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v30, vmulq_f32(v8, v26)))), vcvtnq_s32_f32(v34));
    int16x8_t v38 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v32)), vcvtnq_s32_f32(v35));
    int16x8_t v39 = vminq_s16(vmaxq_s16(v36, (int16x8_t)0), v15);
    int16x8_t v40 = vminq_s16(vmaxq_s16(v37, (int16x8_t)0), v15);
    int16x8_t v41 = vminq_s16(vmaxq_s16(v38, (int16x8_t)0), v15);
    int8x16_t v42 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v39, (int16x8_t)v7), 0x16uLL);
    uint32x4_t v43 = (uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v40, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v39, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v41, (int16x8_t)0), 2uLL)));
    int32x4_t v44 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v40, (int16x8_t)0), 0xCuLL), vorrq_s8(v42, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v41, (int16x8_t)0), 2uLL))), 2uLL));
    int32x4_t v45 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32(v43, 2uLL));
    *int8x8_t result = vorrq_s8((int8x16_t)vshlq_n_s32(v44, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v44, 0x10uLL));
    result[1] = vorrq_s8((int8x16_t)vshlq_n_s32(v45, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v45, 0x10uLL));
    int16x8_t v46 = vaddq_s16(a2[8], v13);
    int16x8_t v47 = a2[64];
    int16x8_t v48 = a2[72];
    int16x8_t v49 = a2 + 1;
    int16x8_t v50 = vcltzq_s16(v46);
    int32x4_t v51 = (int32x4_t)vzip1q_s16(v46, v50);
    int32x4_t v52 = (int32x4_t)vzip2q_s16(v46, v50);
    int16x8_t v53 = vcltzq_s16(v47);
    float32x4_t v54 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v47, v53));
    float32x4_t v55 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v47, v53));
    int16x8_t v56 = vcltzq_s16(v48);
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v48, v56));
    float32x4_t v58 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v48, v56));
    float32x4_t v59 = vmulq_f32(vcvtq_f32_s32(v51), v14);
    float32x4_t v60 = vaddq_f32(v59, vmulq_f32(v7, v57));
    float32x4_t v61 = vaddq_f32(v59, vmulq_f32(v9, v54));
    float32x4_t v62 = vmulq_f32(vcvtq_f32_s32(v52), v14);
    float32x4_t v63 = vaddq_f32(v59, vmulq_f32(v10, v54));
    float32x4_t v64 = vaddq_f32(v62, vmulq_f32(v7, v58));
    float32x4_t v65 = vaddq_f32(vaddq_f32(v62, vmulq_f32(v9, v55)), vmulq_f32(v8, v58));
    float32x4_t v66 = vaddq_f32(v62, vmulq_f32(v10, v55));
    int16x8_t v67 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v60)), vcvtnq_s32_f32(v64));
    int16x8_t v68 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v61, vmulq_f32(v8, v57)))), vcvtnq_s32_f32(v65));
    int16x8_t v69 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v63)), vcvtnq_s32_f32(v66));
    int16x8_t v70 = vminq_s16(vmaxq_s16(v67, (int16x8_t)0), v15);
    int16x8_t v71 = vminq_s16(vmaxq_s16(v68, (int16x8_t)0), v15);
    int16x8_t v72 = vminq_s16(vmaxq_s16(v69, (int16x8_t)0), v15);
    int8x16_t v73 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v70, (int16x8_t)v7), 0x16uLL);
    uint32x4_t v74 = (uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v71, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v70, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v72, (int16x8_t)0), 2uLL)));
    int32x4_t v75 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v71, (int16x8_t)0), 0xCuLL), vorrq_s8(v73, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v72, (int16x8_t)0), 2uLL))), 2uLL));
    int32x4_t v76 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32(v74, 2uLL));
    result[2] = vorrq_s8((int8x16_t)vshlq_n_s32(v75, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v75, 0x10uLL));
    result[3] = vorrq_s8((int8x16_t)vshlq_n_s32(v76, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v76, 0x10uLL));
    int16x8_t v77 = vaddq_s16(a2[16], v13);
    int16x8_t v78 = a2[48];
    int16x8_t v79 = a2[56];
    int16x8_t v80 = (int8x16_t *)((char *)result + 8 * a3);
    int16x8_t v81 = vcltzq_s16(v77);
    int32x4_t v82 = (int32x4_t)vzip1q_s16(v77, v81);
    int32x4_t v83 = (int32x4_t)vzip2q_s16(v77, v81);
    int16x8_t v84 = vcltzq_s16(v78);
    float32x4_t v85 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v78, v84));
    float32x4_t v86 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v78, v84));
    int16x8_t v87 = vcltzq_s16(v79);
    float32x4_t v88 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v79, v87));
    float32x4_t v89 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v79, v87));
    float32x4_t v90 = vmulq_f32(vcvtq_f32_s32(v82), v14);
    float32x4_t v91 = vaddq_f32(v90, vmulq_f32(v7, v88));
    float32x4_t v92 = vaddq_f32(v90, vmulq_f32(v9, v85));
    float32x4_t v93 = vmulq_f32(vcvtq_f32_s32(v83), v14);
    float32x4_t v94 = vaddq_f32(v90, vmulq_f32(v10, v85));
    float32x4_t v95 = vaddq_f32(v93, vmulq_f32(v7, v89));
    float32x4_t v96 = vaddq_f32(vaddq_f32(v93, vmulq_f32(v9, v86)), vmulq_f32(v8, v89));
    float32x4_t v97 = vaddq_f32(v93, vmulq_f32(v10, v86));
    int16x8_t v98 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v91)), vcvtnq_s32_f32(v95));
    int16x8_t v99 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v92, vmulq_f32(v8, v88)))), vcvtnq_s32_f32(v96));
    int16x8_t v100 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v94)), vcvtnq_s32_f32(v97));
    int16x8_t v101 = vminq_s16(vmaxq_s16(v98, (int16x8_t)0), v15);
    int16x8_t v102 = vminq_s16(vmaxq_s16(v99, (int16x8_t)0), v15);
    int16x8_t v103 = vminq_s16(vmaxq_s16(v100, (int16x8_t)0), v15);
    int8x16_t v104 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v101, (int16x8_t)v7), 0x16uLL);
    uint32x4_t v105 = (uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v102, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v101, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v103, (int16x8_t)0), 2uLL)));
    int32x4_t v106 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v102, (int16x8_t)0), 0xCuLL), vorrq_s8(v104, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v103, (int16x8_t)0), 2uLL))), 2uLL));
    int32x4_t v107 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32(v105, 2uLL));
    *int16x8_t v80 = vorrq_s8((int8x16_t)vshlq_n_s32(v106, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v106, 0x10uLL));
    v80[1] = vorrq_s8((int8x16_t)vshlq_n_s32(v107, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v107, 0x10uLL));
    int16x8_t v108 = vaddq_s16(a2[24], v13);
    int16x8_t v109 = a2[80];
    int16x8_t v110 = a2[88];
    int8x8_t result = (int8x16_t *)((char *)result + a3);
    int16x8_t v111 = vcltzq_s16(v108);
    int32x4_t v112 = (int32x4_t)vzip1q_s16(v108, v111);
    int32x4_t v113 = (int32x4_t)vzip2q_s16(v108, v111);
    int16x8_t v114 = vcltzq_s16(v109);
    float32x4_t v115 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v109, v114));
    float32x4_t v116 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v109, v114));
    int16x8_t v117 = vcltzq_s16(v110);
    float32x4_t v118 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v110, v117));
    float32x4_t v119 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v110, v117));
    float32x4_t v120 = vmulq_f32(vcvtq_f32_s32(v112), v14);
    float32x4_t v121 = vaddq_f32(v120, vmulq_f32(v7, v118));
    float32x4_t v122 = vaddq_f32(v120, vmulq_f32(v9, v115));
    float32x4_t v123 = vmulq_f32(vcvtq_f32_s32(v113), v14);
    float32x4_t v124 = vaddq_f32(v120, vmulq_f32(v10, v115));
    float32x4_t v125 = vaddq_f32(v123, vmulq_f32(v7, v119));
    float32x4_t v126 = vaddq_f32(vaddq_f32(v123, vmulq_f32(v9, v116)), vmulq_f32(v8, v119));
    float32x4_t v127 = vaddq_f32(v123, vmulq_f32(v10, v116));
    int16x8_t v128 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v121)), vcvtnq_s32_f32(v125));
    int16x8_t v129 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v122, vmulq_f32(v8, v118)))), vcvtnq_s32_f32(v126));
    int16x8_t v130 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v124)), vcvtnq_s32_f32(v127));
    int16x8_t v131 = vminq_s16(vmaxq_s16(v128, (int16x8_t)0), v15);
    int16x8_t v132 = vminq_s16(vmaxq_s16(v129, (int16x8_t)0), v15);
    int16x8_t v133 = vminq_s16(vmaxq_s16(v130, (int16x8_t)0), v15);
    int8x16_t v134 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v131, (int16x8_t)v7), 0x16uLL);
    uint32x4_t v135 = (uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v132, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v131, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v133, (int16x8_t)0), 2uLL)));
    int32x4_t v136 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v132, (int16x8_t)0), 0xCuLL), vorrq_s8(v134, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v133, (int16x8_t)0), 2uLL))), 2uLL));
    int32x4_t v137 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32(v135, 2uLL));
    v80[2] = vorrq_s8((int8x16_t)vshlq_n_s32(v136, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v136, 0x10uLL));
    v80[3] = vorrq_s8((int8x16_t)vshlq_n_s32(v137, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v137, 0x10uLL));
    int v138 = v12 - 1;
    LODWORD(v80) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v80 > 1);
  int16x8_t v139 = v49 + 8;
  int32x4_t v140 = v49 + 32;
  int32x4_t v141 = v49 + 40;
  int16x8_t v142 = v49 + 64;
  int v143 = v49 + 72;
  if (a4 <= 8) {
    int v144 = 8;
  }
  else {
    int v144 = a4;
  }
  int v145 = v138 - v144;
  a2 = v49;
  if (v145 >= 1)
  {
LABEL_24:
    unsigned int v146 = result + 2;
    unsigned int v147 = v145 + 1;
    v148.i64[0] = 0xE000E000E000E00;
    v148.i64[1] = 0xE000E000E000E00;
    float32x4_t v149 = (float32x4_t)vdupq_n_s32(0x3E157ABDu);
    v150.i64[0] = 0xFC00FC00FC00FC00;
    v150.i64[1] = 0xFC00FC00FC00FC00;
    do
    {
      int16x8_t v151 = *a2++;
      int16x8_t v152 = v151;
      int16x8_t v153 = *v140++;
      int16x8_t v154 = v153;
      int16x8_t v155 = *v141++;
      int16x8_t v156 = vaddq_s16(v152, v148);
      int16x8_t v157 = vcltzq_s16(v156);
      int32x4_t v158 = (int32x4_t)vzip1q_s16(v156, v157);
      int32x4_t v159 = (int32x4_t)vzip2q_s16(v156, v157);
      int16x8_t v160 = vcltzq_s16(v154);
      float32x4_t v161 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v154, v160));
      float32x4_t v162 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v154, v160));
      int16x8_t v163 = vcltzq_s16(v155);
      float32x4_t v164 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v155, v163));
      float32x4_t v165 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v155, v163));
      float32x4_t v166 = vmulq_f32(vcvtq_f32_s32(v158), v149);
      float32x4_t v167 = vaddq_f32(v166, vmulq_f32(v7, v164));
      float32x4_t v168 = vaddq_f32(v166, vmulq_f32(v9, v161));
      float32x4_t v169 = vmulq_f32(vcvtq_f32_s32(v159), v149);
      float32x4_t v170 = vaddq_f32(v166, vmulq_f32(v10, v161));
      float32x4_t v171 = vaddq_f32(v169, vmulq_f32(v7, v165));
      float32x4_t v172 = vaddq_f32(vaddq_f32(v169, vmulq_f32(v9, v162)), vmulq_f32(v8, v165));
      float32x4_t v173 = vaddq_f32(v169, vmulq_f32(v10, v162));
      int16x8_t v174 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v167)), vcvtnq_s32_f32(v171));
      int16x8_t v175 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v168, vmulq_f32(v8, v164)))), vcvtnq_s32_f32(v172));
      int16x8_t v176 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v170)), vcvtnq_s32_f32(v173));
      int16x8_t v177 = vminq_s16(vmaxq_s16(v174, (int16x8_t)0), v150);
      int16x8_t v178 = vminq_s16(vmaxq_s16(v175, (int16x8_t)0), v150);
      int16x8_t v179 = vminq_s16(vmaxq_s16(v176, (int16x8_t)0), v150);
      int8x16_t v180 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v177, (int16x8_t)v7), 0x16uLL);
      uint32x4_t v181 = (uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v178, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v177, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v179, (int16x8_t)0), 2uLL)));
      int32x4_t v182 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v178, (int16x8_t)0), 0xCuLL), vorrq_s8(v180, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v179, (int16x8_t)0), 2uLL))), 2uLL));
      int32x4_t v183 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32(v181, 2uLL));
      v146[-2] = vorrq_s8((int8x16_t)vshlq_n_s32(v182, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v182, 0x10uLL));
      v146[-1] = vorrq_s8((int8x16_t)vshlq_n_s32(v183, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v183, 0x10uLL));
      int16x8_t v184 = *v139++;
      int16x8_t v185 = v184;
      int16x8_t v186 = *v142++;
      int16x8_t v187 = v186;
      int16x8_t v188 = vaddq_s16(v185, v148);
      int16x8_t v189 = *v143++;
      int16x8_t v190 = vcltzq_s16(v188);
      int32x4_t v191 = (int32x4_t)vzip1q_s16(v188, v190);
      int32x4_t v192 = (int32x4_t)vzip2q_s16(v188, v190);
      float32x4_t v193 = vcvtq_f32_s32(v191);
      int16x8_t v194 = vcltzq_s16(v187);
      float32x4_t v195 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v187, v194));
      float32x4_t v196 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v187, v194));
      int16x8_t v197 = vcltzq_s16(v189);
      float32x4_t v198 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v189, v197));
      float32x4_t v199 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v189, v197));
      float32x4_t v200 = vmulq_f32(v193, v149);
      float32x4_t v201 = vaddq_f32(v200, vmulq_f32(v9, v195));
      float32x4_t v202 = vaddq_f32(v200, vmulq_f32(v7, v198));
      float32x4_t v203 = vaddq_f32(v200, vmulq_f32(v10, v195));
      float32x4_t v204 = vmulq_f32(vcvtq_f32_s32(v192), v149);
      float32x4_t v205 = vaddq_f32(v204, vmulq_f32(v7, v199));
      float32x4_t v206 = vaddq_f32(vaddq_f32(v204, vmulq_f32(v9, v196)), vmulq_f32(v8, v199));
      float32x4_t v207 = vaddq_f32(v204, vmulq_f32(v10, v196));
      int16x8_t v208 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v202)), vcvtnq_s32_f32(v205));
      int16x8_t v209 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v201, vmulq_f32(v8, v198)))), vcvtnq_s32_f32(v206));
      int16x8_t v210 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v203)), vcvtnq_s32_f32(v207));
      int16x8_t v211 = vminq_s16(vmaxq_s16(v208, (int16x8_t)0), v150);
      int16x8_t v212 = vminq_s16(vmaxq_s16(v209, (int16x8_t)0), v150);
      int16x8_t v213 = vminq_s16(vmaxq_s16(v210, (int16x8_t)0), v150);
      int8x16_t v214 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v211, (int16x8_t)v7), 0x16uLL);
      uint32x4_t v215 = (uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v212, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v211, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v213, (int16x8_t)0), 2uLL)));
      int32x4_t v216 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v212, (int16x8_t)0), 0xCuLL), vorrq_s8(v214, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v213, (int16x8_t)0), 2uLL))), 2uLL));
      int32x4_t v217 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32(v215, 2uLL));
      *unsigned int v146 = vorrq_s8((int8x16_t)vshlq_n_s32(v216, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v216, 0x10uLL));
      v146[1] = vorrq_s8((int8x16_t)vshlq_n_s32(v217, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v217, 0x10uLL));
      unsigned int v146 = (int8x16_t *)((char *)v146 + a3);
      --v147;
    }
    while (v147 > 1);
  }
  return result;
}

int8x16_t *from_444_to_r210<8,8,(AlphaOutputMethod)0,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E662551u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBD88D377);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBCDB0243);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E879762u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int16x8_t v139 = a2 + 8;
    int32x4_t v140 = a2 + 32;
    int32x4_t v141 = a2 + 40;
    int16x8_t v142 = a2 + 64;
    int v143 = a2 + 72;
    int v145 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E4CE46Du);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBDD0BB5A);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBD492C18);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E817B8Au);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x3E578094u);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xBDA6FF94);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBCC062D8);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x3E897A02u);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x3E157ABDu);
  v15.i64[0] = 0xFC00FC00FC00FC00;
  v15.i64[1] = 0xFC00FC00FC00FC00;
  do
  {
    int16x8_t v16 = a2[32];
    int16x8_t v17 = a2[40];
    int16x8_t v18 = vaddq_s16(*a2, v13);
    int16x8_t v19 = vcltzq_s16(v18);
    int32x4_t v20 = (int32x4_t)vzip1q_s16(v18, v19);
    int32x4_t v21 = (int32x4_t)vzip2q_s16(v18, v19);
    int16x8_t v22 = vcltzq_s16(v16);
    float32x4_t v23 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v16, v22));
    float32x4_t v24 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v16, v22));
    int16x8_t v25 = vcltzq_s16(v17);
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v17, v25));
    float32x4_t v27 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v17, v25));
    float32x4_t v28 = vmulq_f32(vcvtq_f32_s32(v20), v14);
    float32x4_t v29 = vaddq_f32(v28, vmulq_f32(v7, v26));
    float32x4_t v30 = vaddq_f32(v28, vmulq_f32(v9, v23));
    float32x4_t v31 = vmulq_f32(vcvtq_f32_s32(v21), v14);
    float32x4_t v32 = vaddq_f32(v28, vmulq_f32(v10, v23));
    float32x4_t v33 = vaddq_f32(v31, vmulq_f32(v7, v27));
    float32x4_t v34 = vaddq_f32(vaddq_f32(v31, vmulq_f32(v9, v24)), vmulq_f32(v8, v27));
    float32x4_t v35 = vaddq_f32(v31, vmulq_f32(v10, v24));
    int16x8_t v36 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v29)), vcvtnq_s32_f32(v33));
    int16x8_t v37 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v30, vmulq_f32(v8, v26)))), vcvtnq_s32_f32(v34));
    int16x8_t v38 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v32)), vcvtnq_s32_f32(v35));
    int16x8_t v39 = vminq_s16(vmaxq_s16(v36, (int16x8_t)0), v15);
    int16x8_t v40 = vminq_s16(vmaxq_s16(v37, (int16x8_t)0), v15);
    int16x8_t v41 = vminq_s16(vmaxq_s16(v38, (int16x8_t)0), v15);
    int8x16_t v42 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v39, (int16x8_t)v7), 0x16uLL);
    uint32x4_t v43 = (uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v40, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v39, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v41, (int16x8_t)0), 2uLL)));
    int32x4_t v44 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v40, (int16x8_t)0), 0xCuLL), vorrq_s8(v42, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v41, (int16x8_t)0), 2uLL))), 2uLL));
    int32x4_t v45 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32(v43, 2uLL));
    *int8x8_t result = vorrq_s8((int8x16_t)vshlq_n_s32(v44, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v44, 0x10uLL));
    result[1] = vorrq_s8((int8x16_t)vshlq_n_s32(v45, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v45, 0x10uLL));
    int16x8_t v46 = vaddq_s16(a2[8], v13);
    int16x8_t v47 = a2[64];
    int16x8_t v48 = a2[72];
    int16x8_t v49 = a2 + 1;
    int16x8_t v50 = vcltzq_s16(v46);
    int32x4_t v51 = (int32x4_t)vzip1q_s16(v46, v50);
    int32x4_t v52 = (int32x4_t)vzip2q_s16(v46, v50);
    int16x8_t v53 = vcltzq_s16(v47);
    float32x4_t v54 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v47, v53));
    float32x4_t v55 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v47, v53));
    int16x8_t v56 = vcltzq_s16(v48);
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v48, v56));
    float32x4_t v58 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v48, v56));
    float32x4_t v59 = vmulq_f32(vcvtq_f32_s32(v51), v14);
    float32x4_t v60 = vaddq_f32(v59, vmulq_f32(v7, v57));
    float32x4_t v61 = vaddq_f32(v59, vmulq_f32(v9, v54));
    float32x4_t v62 = vmulq_f32(vcvtq_f32_s32(v52), v14);
    float32x4_t v63 = vaddq_f32(v59, vmulq_f32(v10, v54));
    float32x4_t v64 = vaddq_f32(v62, vmulq_f32(v7, v58));
    float32x4_t v65 = vaddq_f32(vaddq_f32(v62, vmulq_f32(v9, v55)), vmulq_f32(v8, v58));
    float32x4_t v66 = vaddq_f32(v62, vmulq_f32(v10, v55));
    int16x8_t v67 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v60)), vcvtnq_s32_f32(v64));
    int16x8_t v68 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v61, vmulq_f32(v8, v57)))), vcvtnq_s32_f32(v65));
    int16x8_t v69 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v63)), vcvtnq_s32_f32(v66));
    int16x8_t v70 = vminq_s16(vmaxq_s16(v67, (int16x8_t)0), v15);
    int16x8_t v71 = vminq_s16(vmaxq_s16(v68, (int16x8_t)0), v15);
    int16x8_t v72 = vminq_s16(vmaxq_s16(v69, (int16x8_t)0), v15);
    int8x16_t v73 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v70, (int16x8_t)v7), 0x16uLL);
    uint32x4_t v74 = (uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v71, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v70, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v72, (int16x8_t)0), 2uLL)));
    int32x4_t v75 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v71, (int16x8_t)0), 0xCuLL), vorrq_s8(v73, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v72, (int16x8_t)0), 2uLL))), 2uLL));
    int32x4_t v76 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32(v74, 2uLL));
    result[2] = vorrq_s8((int8x16_t)vshlq_n_s32(v75, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v75, 0x10uLL));
    result[3] = vorrq_s8((int8x16_t)vshlq_n_s32(v76, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v76, 0x10uLL));
    int16x8_t v77 = vaddq_s16(a2[16], v13);
    int16x8_t v78 = a2[48];
    int16x8_t v79 = a2[56];
    int16x8_t v80 = (int8x16_t *)((char *)result + 8 * a3);
    int16x8_t v81 = vcltzq_s16(v77);
    int32x4_t v82 = (int32x4_t)vzip1q_s16(v77, v81);
    int32x4_t v83 = (int32x4_t)vzip2q_s16(v77, v81);
    int16x8_t v84 = vcltzq_s16(v78);
    float32x4_t v85 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v78, v84));
    float32x4_t v86 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v78, v84));
    int16x8_t v87 = vcltzq_s16(v79);
    float32x4_t v88 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v79, v87));
    float32x4_t v89 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v79, v87));
    float32x4_t v90 = vmulq_f32(vcvtq_f32_s32(v82), v14);
    float32x4_t v91 = vaddq_f32(v90, vmulq_f32(v7, v88));
    float32x4_t v92 = vaddq_f32(v90, vmulq_f32(v9, v85));
    float32x4_t v93 = vmulq_f32(vcvtq_f32_s32(v83), v14);
    float32x4_t v94 = vaddq_f32(v90, vmulq_f32(v10, v85));
    float32x4_t v95 = vaddq_f32(v93, vmulq_f32(v7, v89));
    float32x4_t v96 = vaddq_f32(vaddq_f32(v93, vmulq_f32(v9, v86)), vmulq_f32(v8, v89));
    float32x4_t v97 = vaddq_f32(v93, vmulq_f32(v10, v86));
    int16x8_t v98 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v91)), vcvtnq_s32_f32(v95));
    int16x8_t v99 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v92, vmulq_f32(v8, v88)))), vcvtnq_s32_f32(v96));
    int16x8_t v100 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v94)), vcvtnq_s32_f32(v97));
    int16x8_t v101 = vminq_s16(vmaxq_s16(v98, (int16x8_t)0), v15);
    int16x8_t v102 = vminq_s16(vmaxq_s16(v99, (int16x8_t)0), v15);
    int16x8_t v103 = vminq_s16(vmaxq_s16(v100, (int16x8_t)0), v15);
    int8x16_t v104 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v101, (int16x8_t)v7), 0x16uLL);
    uint32x4_t v105 = (uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v102, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v101, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v103, (int16x8_t)0), 2uLL)));
    int32x4_t v106 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v102, (int16x8_t)0), 0xCuLL), vorrq_s8(v104, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v103, (int16x8_t)0), 2uLL))), 2uLL));
    int32x4_t v107 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32(v105, 2uLL));
    *int16x8_t v80 = vorrq_s8((int8x16_t)vshlq_n_s32(v106, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v106, 0x10uLL));
    v80[1] = vorrq_s8((int8x16_t)vshlq_n_s32(v107, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v107, 0x10uLL));
    int16x8_t v108 = vaddq_s16(a2[24], v13);
    int16x8_t v109 = a2[80];
    int16x8_t v110 = a2[88];
    int8x8_t result = (int8x16_t *)((char *)result + a3);
    int16x8_t v111 = vcltzq_s16(v108);
    int32x4_t v112 = (int32x4_t)vzip1q_s16(v108, v111);
    int32x4_t v113 = (int32x4_t)vzip2q_s16(v108, v111);
    int16x8_t v114 = vcltzq_s16(v109);
    float32x4_t v115 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v109, v114));
    float32x4_t v116 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v109, v114));
    int16x8_t v117 = vcltzq_s16(v110);
    float32x4_t v118 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v110, v117));
    float32x4_t v119 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v110, v117));
    float32x4_t v120 = vmulq_f32(vcvtq_f32_s32(v112), v14);
    float32x4_t v121 = vaddq_f32(v120, vmulq_f32(v7, v118));
    float32x4_t v122 = vaddq_f32(v120, vmulq_f32(v9, v115));
    float32x4_t v123 = vmulq_f32(vcvtq_f32_s32(v113), v14);
    float32x4_t v124 = vaddq_f32(v120, vmulq_f32(v10, v115));
    float32x4_t v125 = vaddq_f32(v123, vmulq_f32(v7, v119));
    float32x4_t v126 = vaddq_f32(vaddq_f32(v123, vmulq_f32(v9, v116)), vmulq_f32(v8, v119));
    float32x4_t v127 = vaddq_f32(v123, vmulq_f32(v10, v116));
    int16x8_t v128 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v121)), vcvtnq_s32_f32(v125));
    int16x8_t v129 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v122, vmulq_f32(v8, v118)))), vcvtnq_s32_f32(v126));
    int16x8_t v130 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v124)), vcvtnq_s32_f32(v127));
    int16x8_t v131 = vminq_s16(vmaxq_s16(v128, (int16x8_t)0), v15);
    int16x8_t v132 = vminq_s16(vmaxq_s16(v129, (int16x8_t)0), v15);
    int16x8_t v133 = vminq_s16(vmaxq_s16(v130, (int16x8_t)0), v15);
    int8x16_t v134 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v131, (int16x8_t)v7), 0x16uLL);
    uint32x4_t v135 = (uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v132, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v131, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v133, (int16x8_t)0), 2uLL)));
    int32x4_t v136 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v132, (int16x8_t)0), 0xCuLL), vorrq_s8(v134, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v133, (int16x8_t)0), 2uLL))), 2uLL));
    int32x4_t v137 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32(v135, 2uLL));
    v80[2] = vorrq_s8((int8x16_t)vshlq_n_s32(v136, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v136, 0x10uLL));
    v80[3] = vorrq_s8((int8x16_t)vshlq_n_s32(v137, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v137, 0x10uLL));
    int v138 = v12 - 1;
    LODWORD(v80) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v80 > 1);
  int16x8_t v139 = v49 + 8;
  int32x4_t v140 = v49 + 32;
  int32x4_t v141 = v49 + 40;
  int16x8_t v142 = v49 + 64;
  int v143 = v49 + 72;
  if (a4 <= 8) {
    int v144 = 8;
  }
  else {
    int v144 = a4;
  }
  int v145 = v138 - v144;
  a2 = v49;
  if (v145 >= 1)
  {
LABEL_24:
    unsigned int v146 = result + 2;
    unsigned int v147 = v145 + 1;
    v148.i64[0] = 0xE000E000E000E00;
    v148.i64[1] = 0xE000E000E000E00;
    float32x4_t v149 = (float32x4_t)vdupq_n_s32(0x3E157ABDu);
    v150.i64[0] = 0xFC00FC00FC00FC00;
    v150.i64[1] = 0xFC00FC00FC00FC00;
    do
    {
      int16x8_t v151 = *a2++;
      int16x8_t v152 = v151;
      int16x8_t v153 = *v140++;
      int16x8_t v154 = v153;
      int16x8_t v155 = *v141++;
      int16x8_t v156 = vaddq_s16(v152, v148);
      int16x8_t v157 = vcltzq_s16(v156);
      int32x4_t v158 = (int32x4_t)vzip1q_s16(v156, v157);
      int32x4_t v159 = (int32x4_t)vzip2q_s16(v156, v157);
      int16x8_t v160 = vcltzq_s16(v154);
      float32x4_t v161 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v154, v160));
      float32x4_t v162 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v154, v160));
      int16x8_t v163 = vcltzq_s16(v155);
      float32x4_t v164 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v155, v163));
      float32x4_t v165 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v155, v163));
      float32x4_t v166 = vmulq_f32(vcvtq_f32_s32(v158), v149);
      float32x4_t v167 = vaddq_f32(v166, vmulq_f32(v7, v164));
      float32x4_t v168 = vaddq_f32(v166, vmulq_f32(v9, v161));
      float32x4_t v169 = vmulq_f32(vcvtq_f32_s32(v159), v149);
      float32x4_t v170 = vaddq_f32(v166, vmulq_f32(v10, v161));
      float32x4_t v171 = vaddq_f32(v169, vmulq_f32(v7, v165));
      float32x4_t v172 = vaddq_f32(vaddq_f32(v169, vmulq_f32(v9, v162)), vmulq_f32(v8, v165));
      float32x4_t v173 = vaddq_f32(v169, vmulq_f32(v10, v162));
      int16x8_t v174 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v167)), vcvtnq_s32_f32(v171));
      int16x8_t v175 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v168, vmulq_f32(v8, v164)))), vcvtnq_s32_f32(v172));
      int16x8_t v176 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v170)), vcvtnq_s32_f32(v173));
      int16x8_t v177 = vminq_s16(vmaxq_s16(v174, (int16x8_t)0), v150);
      int16x8_t v178 = vminq_s16(vmaxq_s16(v175, (int16x8_t)0), v150);
      int16x8_t v179 = vminq_s16(vmaxq_s16(v176, (int16x8_t)0), v150);
      int8x16_t v180 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v177, (int16x8_t)v7), 0x16uLL);
      uint32x4_t v181 = (uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v178, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v177, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v179, (int16x8_t)0), 2uLL)));
      int32x4_t v182 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v178, (int16x8_t)0), 0xCuLL), vorrq_s8(v180, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v179, (int16x8_t)0), 2uLL))), 2uLL));
      int32x4_t v183 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32(v181, 2uLL));
      v146[-2] = vorrq_s8((int8x16_t)vshlq_n_s32(v182, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v182, 0x10uLL));
      v146[-1] = vorrq_s8((int8x16_t)vshlq_n_s32(v183, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v183, 0x10uLL));
      int16x8_t v184 = *v139++;
      int16x8_t v185 = v184;
      int16x8_t v186 = *v142++;
      int16x8_t v187 = v186;
      int16x8_t v188 = vaddq_s16(v185, v148);
      int16x8_t v189 = *v143++;
      int16x8_t v190 = vcltzq_s16(v188);
      int32x4_t v191 = (int32x4_t)vzip1q_s16(v188, v190);
      int32x4_t v192 = (int32x4_t)vzip2q_s16(v188, v190);
      float32x4_t v193 = vcvtq_f32_s32(v191);
      int16x8_t v194 = vcltzq_s16(v187);
      float32x4_t v195 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v187, v194));
      float32x4_t v196 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v187, v194));
      int16x8_t v197 = vcltzq_s16(v189);
      float32x4_t v198 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v189, v197));
      float32x4_t v199 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v189, v197));
      float32x4_t v200 = vmulq_f32(v193, v149);
      float32x4_t v201 = vaddq_f32(v200, vmulq_f32(v9, v195));
      float32x4_t v202 = vaddq_f32(v200, vmulq_f32(v7, v198));
      float32x4_t v203 = vaddq_f32(v200, vmulq_f32(v10, v195));
      float32x4_t v204 = vmulq_f32(vcvtq_f32_s32(v192), v149);
      float32x4_t v205 = vaddq_f32(v204, vmulq_f32(v7, v199));
      float32x4_t v206 = vaddq_f32(vaddq_f32(v204, vmulq_f32(v9, v196)), vmulq_f32(v8, v199));
      float32x4_t v207 = vaddq_f32(v204, vmulq_f32(v10, v196));
      int16x8_t v208 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v202)), vcvtnq_s32_f32(v205));
      int16x8_t v209 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(vaddq_f32(v201, vmulq_f32(v8, v198)))), vcvtnq_s32_f32(v206));
      int16x8_t v210 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v203)), vcvtnq_s32_f32(v207));
      int16x8_t v211 = vminq_s16(vmaxq_s16(v208, (int16x8_t)0), v150);
      int16x8_t v212 = vminq_s16(vmaxq_s16(v209, (int16x8_t)0), v150);
      int16x8_t v213 = vminq_s16(vmaxq_s16(v210, (int16x8_t)0), v150);
      int8x16_t v214 = (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v211, (int16x8_t)v7), 0x16uLL);
      uint32x4_t v215 = (uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v212, (int16x8_t)0), 0xCuLL), vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v211, (int16x8_t)v7), 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v213, (int16x8_t)0), 2uLL)));
      int32x4_t v216 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v212, (int16x8_t)0), 0xCuLL), vorrq_s8(v214, (int8x16_t)vshlq_n_s32((int32x4_t)vzip1q_s16(v213, (int16x8_t)0), 2uLL))), 2uLL));
      int32x4_t v217 = (int32x4_t)vrev16q_s8((int8x16_t)vshrq_n_u32(v215, 2uLL));
      *unsigned int v146 = vorrq_s8((int8x16_t)vshlq_n_s32(v216, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v216, 0x10uLL));
      v146[1] = vorrq_s8((int8x16_t)vshlq_n_s32(v217, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v217, 0x10uLL));
      unsigned int v146 = (int8x16_t *)((char *)v146 + a3);
      --v147;
    }
    while (v147 > 1);
  }
  return result;
}

int8x16_t *from_444_to_b64a<8,8,(AlphaOutputMethod)1,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x41665E03u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xC088F52C);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBFDB3836);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x4187B8C9u);
    int v11 = a4 - 8;
    if (a4 <= 8) {
      int v11 = 0;
    }
    if (v11) {
      goto LABEL_10;
    }
LABEL_20:
    int v143 = a2 + 8;
    int v144 = a2 + 32;
    int v145 = a2 + 40;
    unsigned int v146 = a2 + 64;
    unsigned int v147 = a2 + 72;
    int v149 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_21;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x414D16E6u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xC0D0EEC4);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xC0495DA6);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x41819B6Fu);
    int v11 = a4 - 8;
    if (a4 <= 8) {
      int v11 = 0;
    }
    if (v11) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x4157B5AAu);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xC0A728B7);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBFC0923C);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x41899BDFu);
  int v11 = a4 - 8;
  if (a4 <= 8) {
    int v11 = 0;
  }
  if (!v11) {
    goto LABEL_20;
  }
LABEL_10:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x41159F90u);
  v15.i64[0] = 0x7F0000007FLL;
  v15.i64[1] = 0x7F0000007FLL;
  v16.i64[0] = 0x8000800080008000;
  v16.i64[1] = 0x8000800080008000;
  do
  {
    int16x8_t v17 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x8_t v18 = (int8x16_t *)((char *)result + 8 * a3);
    int16x8_t v19 = a2 + 1;
    int16x8_t v20 = vaddq_s16(*a2, v13);
    int16x8_t v21 = a2[32];
    int16x8_t v22 = a2[40];
    int16x8_t v23 = vcltzq_s16(v20);
    int32x4_t v24 = (int32x4_t)vzip1q_s16(v20, v23);
    int32x4_t v25 = (int32x4_t)vzip2q_s16(v20, v23);
    int16x8_t v26 = vcltzq_s16(v21);
    float32x4_t v27 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v21, v26));
    int32x4_t v28 = (int32x4_t)vzip2q_s16(v21, v26);
    float32x4_t v29 = vcvtq_f32_s32(v24);
    float32x4_t v30 = vcvtq_f32_s32(v28);
    int16x8_t v31 = vcltzq_s16(v22);
    float32x4_t v32 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v22, v31));
    float32x4_t v33 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v22, v31));
    float32x4_t v34 = vmulq_f32(v29, v14);
    float32x4_t v35 = vaddq_f32(v34, vmulq_f32(v9, v27));
    float32x4_t v36 = vaddq_f32(v34, vmulq_f32(v7, v32));
    float32x4_t v37 = vaddq_f32(v34, vmulq_f32(v10, v27));
    float32x4_t v38 = vmulq_f32(vcvtq_f32_s32(v25), v14);
    float32x4_t v39 = vaddq_f32(v38, vmulq_f32(v7, v33));
    int8x16_t v40 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v37), v15)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v38, vmulq_f32(v10, v30))), v15));
    int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v35, vmulq_f32(v8, v32))), v15)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(vaddq_f32(v38, vmulq_f32(v9, v30)), vmulq_f32(v8, v33))), v15)), v16);
    int16x8_t v42 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v36), v15)), vaddq_s32(vcvtnq_s32_f32(v39), v15)), v16);
    int16x8_t v43 = (int16x8_t)veorq_s8(v40, v16);
    int16x8_t v44 = vzip1q_s16(v42, v43);
    int16x8_t v45 = vzip1q_s16(*a5, v41);
    int16x8_t v46 = vzip2q_s16(*a5, v41);
    int16x8_t v47 = vzip2q_s16(v42, v43);
    *int8x8_t result = vrev16q_s8((int8x16_t)vzip1q_s16(v45, v44));
    result[1] = vrev16q_s8((int8x16_t)vzip2q_s16(v45, v44));
    result[2] = vrev16q_s8((int8x16_t)vzip1q_s16(v46, v47));
    result[3] = vrev16q_s8((int8x16_t)vzip2q_s16(v46, v47));
    int16x8_t v48 = vaddq_s16(a2[8], v13);
    int16x8_t v49 = a2[64];
    int16x8_t v50 = a5[1];
    int16x8_t v51 = a2[72];
    int16x8_t v52 = vcltzq_s16(v48);
    int32x4_t v53 = (int32x4_t)vzip1q_s16(v48, v52);
    int32x4_t v54 = (int32x4_t)vzip2q_s16(v48, v52);
    int16x8_t v55 = vcltzq_s16(v49);
    float32x4_t v56 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v49, v55));
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v49, v55));
    int16x8_t v58 = vcltzq_s16(v51);
    float32x4_t v59 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v51, v58));
    float32x4_t v60 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v51, v58));
    float32x4_t v61 = vmulq_f32(vcvtq_f32_s32(v53), v14);
    float32x4_t v62 = vaddq_f32(v61, vmulq_f32(v7, v59));
    float32x4_t v63 = vaddq_f32(v61, vmulq_f32(v9, v56));
    float32x4_t v64 = vaddq_f32(v61, vmulq_f32(v10, v56));
    float32x4_t v65 = vmulq_f32(vcvtq_f32_s32(v54), v14);
    float32x4_t v66 = vaddq_f32(v65, vmulq_f32(v7, v60));
    float32x4_t v67 = vaddq_f32(vaddq_f32(v65, vmulq_f32(v9, v57)), vmulq_f32(v8, v60));
    float32x4_t v68 = vaddq_f32(v65, vmulq_f32(v10, v57));
    int8x16_t v69 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v62), v15)), vaddq_s32(vcvtnq_s32_f32(v66), v15));
    int8x16_t v70 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v63, vmulq_f32(v8, v59))), v15)), vaddq_s32(vcvtnq_s32_f32(v67), v15));
    int8x16_t v71 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v64), v15)), vaddq_s32(vcvtnq_s32_f32(v68), v15));
    int16x8_t v72 = (int16x8_t)veorq_s8(v70, v16);
    int16x8_t v73 = vzip1q_s16(v50, v72);
    int16x8_t v74 = (int16x8_t)veorq_s8(v69, v16);
    int16x8_t v75 = (int16x8_t)veorq_s8(v71, v16);
    int16x8_t v76 = vzip1q_s16(v74, v75);
    int16x8_t v77 = vzip2q_s16(v50, v72);
    int16x8_t v78 = vzip2q_s16(v74, v75);
    result[4] = vrev16q_s8((int8x16_t)vzip1q_s16(v73, v76));
    result[5] = vrev16q_s8((int8x16_t)vzip2q_s16(v73, v76));
    result[6] = vrev16q_s8((int8x16_t)vzip1q_s16(v77, v78));
    result[7] = vrev16q_s8((int8x16_t)vzip2q_s16(v77, v78));
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v79 = v17[-1];
    int16x8_t v80 = vaddq_s16(a2[16], v13);
    int16x8_t v81 = a2[48];
    int16x8_t v82 = a2[56];
    int16x8_t v83 = vcltzq_s16(v80);
    int32x4_t v84 = (int32x4_t)vzip1q_s16(v80, v83);
    int32x4_t v85 = (int32x4_t)vzip2q_s16(v80, v83);
    int16x8_t v86 = vcltzq_s16(v81);
    float32x4_t v87 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v81, v86));
    float32x4_t v88 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v81, v86));
    int16x8_t v89 = vcltzq_s16(v82);
    float32x4_t v90 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v82, v89));
    float32x4_t v91 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v82, v89));
    float32x4_t v92 = vmulq_f32(vcvtq_f32_s32(v84), v14);
    float32x4_t v93 = vaddq_f32(v92, vmulq_f32(v7, v90));
    float32x4_t v94 = vaddq_f32(v92, vmulq_f32(v9, v87));
    float32x4_t v95 = vaddq_f32(v92, vmulq_f32(v10, v87));
    float32x4_t v96 = vmulq_f32(vcvtq_f32_s32(v85), v14);
    float32x4_t v97 = vaddq_f32(v94, vmulq_f32(v8, v90));
    float32x4_t v98 = vaddq_f32(v96, vmulq_f32(v7, v91));
    float32x4_t v99 = vaddq_f32(vaddq_f32(v96, vmulq_f32(v9, v88)), vmulq_f32(v8, v91));
    float32x4_t v100 = vaddq_f32(v96, vmulq_f32(v10, v88));
    int8x16_t v101 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v93), v15)), vaddq_s32(vcvtnq_s32_f32(v98), v15));
    int8x16_t v102 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v97), v15)), vaddq_s32(vcvtnq_s32_f32(v99), v15));
    int8x16_t v103 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v95), v15)), vaddq_s32(vcvtnq_s32_f32(v100), v15));
    int16x8_t v104 = (int16x8_t)veorq_s8(v102, v16);
    int16x8_t v105 = (int16x8_t)veorq_s8(v101, v16);
    int16x8_t v106 = (int16x8_t)veorq_s8(v103, v16);
    int16x8_t v107 = vzip1q_s16(v79, v104);
    int16x8_t v108 = vzip1q_s16(v105, v106);
    int16x8_t v109 = vzip2q_s16(v79, v104);
    int16x8_t v110 = vzip2q_s16(v105, v106);
    int8x16_t *v18 = vrev16q_s8((int8x16_t)vzip1q_s16(v107, v108));
    v18[1] = vrev16q_s8((int8x16_t)vzip2q_s16(v107, v108));
    CFTypeRef v18[2] = vrev16q_s8((int8x16_t)vzip1q_s16(v109, v110));
    v18[3] = vrev16q_s8((int8x16_t)vzip2q_s16(v109, v110));
    int16x8_t v111 = vaddq_s16(a2[24], v13);
    int16x8_t v112 = a2[80];
    int16x8_t v113 = a2[88];
    int16x8_t v114 = vcltzq_s16(v111);
    int32x4_t v115 = (int32x4_t)vzip1q_s16(v111, v114);
    int32x4_t v116 = (int32x4_t)vzip2q_s16(v111, v114);
    float32x4_t v117 = vcvtq_f32_s32(v115);
    int16x8_t v118 = vcltzq_s16(v112);
    float32x4_t v119 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v112, v118));
    float32x4_t v120 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v112, v118));
    int16x8_t v121 = vcltzq_s16(v113);
    float32x4_t v122 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v113, v121));
    float32x4_t v123 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v113, v121));
    float32x4_t v124 = vmulq_f32(v117, v14);
    float32x4_t v125 = vaddq_f32(v124, vmulq_f32(v9, v119));
    float32x4_t v126 = vaddq_f32(v124, vmulq_f32(v7, v122));
    float32x4_t v127 = vaddq_f32(v124, vmulq_f32(v10, v119));
    float32x4_t v128 = vmulq_f32(vcvtq_f32_s32(v116), v14);
    float32x4_t v129 = vaddq_f32(v128, vmulq_f32(v7, v123));
    float32x4_t v130 = vaddq_f32(vaddq_f32(v128, vmulq_f32(v9, v120)), vmulq_f32(v8, v123));
    float32x4_t v131 = vaddq_f32(v128, vmulq_f32(v10, v120));
    int8x16_t v132 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v126), v15)), vaddq_s32(vcvtnq_s32_f32(v129), v15));
    int8x16_t v133 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v125, vmulq_f32(v8, v122))), v15)), vaddq_s32(vcvtnq_s32_f32(v130), v15));
    int8x16_t v134 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v127), v15)), vaddq_s32(vcvtnq_s32_f32(v131), v15));
    int8x8_t result = (int8x16_t *)((char *)result + a3);
    int16x8_t v135 = (int16x8_t)veorq_s8(v133, v16);
    int16x8_t v136 = vzip1q_s16(*v17, v135);
    int16x8_t v137 = (int16x8_t)veorq_s8(v132, v16);
    int16x8_t v138 = (int16x8_t)veorq_s8(v134, v16);
    int16x8_t v139 = vzip1q_s16(v137, v138);
    int16x8_t v140 = vzip2q_s16(*v17, v135);
    int16x8_t v141 = vzip2q_s16(v137, v138);
    v18[4] = vrev16q_s8((int8x16_t)vzip1q_s16(v136, v139));
    v18[5] = vrev16q_s8((int8x16_t)vzip2q_s16(v136, v139));
    v18[6] = vrev16q_s8((int8x16_t)vzip1q_s16(v140, v141));
    v18[7] = vrev16q_s8((int8x16_t)vzip2q_s16(v140, v141));
    int v142 = v12 - 1;
    LODWORD(v17) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v17 > 1);
  int v143 = v19 + 8;
  int v144 = v19 + 32;
  int v145 = v19 + 40;
  unsigned int v146 = v19 + 64;
  unsigned int v147 = v19 + 72;
  if (a4 <= 8) {
    int v148 = 8;
  }
  else {
    int v148 = a4;
  }
  int v149 = v142 - v148;
  a2 = v19;
  if (v149 >= 1)
  {
LABEL_21:
    unsigned int v150 = v149 + 1;
    int16x8_t v151 = a5 + 1;
    int16x8_t v152 = result + 4;
    v153.i64[0] = 0xE000E000E000E00;
    v153.i64[1] = 0xE000E000E000E00;
    int8x8_t result = (int8x16_t *)1091936144;
    float32x4_t v154 = (float32x4_t)vdupq_n_s32(0x41159F90u);
    v155.i64[0] = 0x7F0000007FLL;
    v155.i64[1] = 0x7F0000007FLL;
    v156.i64[0] = 0x8000800080008000;
    v156.i64[1] = 0x8000800080008000;
    do
    {
      int16x8_t v157 = v151[-1];
      int16x8_t v158 = *a2++;
      int16x8_t v159 = vaddq_s16(v158, v153);
      int16x8_t v160 = *v144++;
      int16x8_t v161 = v160;
      int16x8_t v162 = *v145++;
      int16x8_t v163 = vcltzq_s16(v159);
      int32x4_t v164 = (int32x4_t)vzip1q_s16(v159, v163);
      int32x4_t v165 = (int32x4_t)vzip2q_s16(v159, v163);
      int16x8_t v166 = vcltzq_s16(v161);
      float32x4_t v167 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v161, v166));
      int32x4_t v168 = (int32x4_t)vzip2q_s16(v161, v166);
      float32x4_t v169 = vcvtq_f32_s32(v164);
      float32x4_t v170 = vcvtq_f32_s32(v168);
      int16x8_t v171 = vcltzq_s16(v162);
      float32x4_t v172 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v162, v171));
      float32x4_t v173 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v162, v171));
      float32x4_t v174 = vmulq_f32(v169, v154);
      float32x4_t v175 = vaddq_f32(v174, vmulq_f32(v9, v167));
      float32x4_t v176 = vaddq_f32(v174, vmulq_f32(v7, v172));
      float32x4_t v177 = vaddq_f32(v174, vmulq_f32(v10, v167));
      float32x4_t v178 = vmulq_f32(vcvtq_f32_s32(v165), v154);
      float32x4_t v179 = vaddq_f32(v178, vmulq_f32(v7, v173));
      int8x16_t v180 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v177), v155)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v178, vmulq_f32(v10, v170))), v155));
      int16x8_t v181 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v175, vmulq_f32(v8, v172))), v155)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(vaddq_f32(v178, vmulq_f32(v9, v170)), vmulq_f32(v8, v173))), v155)), v156);
      int16x8_t v182 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v176), v155)), vaddq_s32(vcvtnq_s32_f32(v179), v155)), v156);
      int16x8_t v183 = (int16x8_t)veorq_s8(v180, v156);
      int16x8_t v184 = vzip1q_s16(v182, v183);
      int16x8_t v185 = vzip1q_s16(v157, v181);
      int16x8_t v186 = vzip2q_s16(v157, v181);
      int16x8_t v187 = vzip2q_s16(v182, v183);
      v152[-4] = vrev16q_s8((int8x16_t)vzip1q_s16(v185, v184));
      v152[-3] = vrev16q_s8((int8x16_t)vzip2q_s16(v185, v184));
      v152[-2] = vrev16q_s8((int8x16_t)vzip1q_s16(v186, v187));
      v152[-1] = vrev16q_s8((int8x16_t)vzip2q_s16(v186, v187));
      int16x8_t v188 = *v143++;
      int16x8_t v189 = vaddq_s16(v188, v153);
      int16x8_t v190 = *v146++;
      int16x8_t v191 = v190;
      int16x8_t v192 = *v147++;
      int16x8_t v193 = vcltzq_s16(v189);
      int32x4_t v194 = (int32x4_t)vzip1q_s16(v189, v193);
      int32x4_t v195 = (int32x4_t)vzip2q_s16(v189, v193);
      int16x8_t v196 = vcltzq_s16(v191);
      float32x4_t v197 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v191, v196));
      int32x4_t v198 = (int32x4_t)vzip2q_s16(v191, v196);
      float32x4_t v199 = vcvtq_f32_s32(v194);
      float32x4_t v200 = vcvtq_f32_s32(v198);
      int16x8_t v201 = vcltzq_s16(v192);
      float32x4_t v202 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v192, v201));
      float32x4_t v203 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v192, v201));
      float32x4_t v204 = vmulq_f32(v199, v154);
      float32x4_t v205 = vaddq_f32(v204, vmulq_f32(v9, v197));
      float32x4_t v206 = vaddq_f32(v204, vmulq_f32(v7, v202));
      float32x4_t v207 = vaddq_f32(v204, vmulq_f32(v10, v197));
      float32x4_t v208 = vmulq_f32(vcvtq_f32_s32(v195), v154);
      float32x4_t v209 = vaddq_f32(v208, vmulq_f32(v7, v203));
      int8x16_t v210 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v207), v155)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v208, vmulq_f32(v10, v200))), v155));
      int16x8_t v211 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v205, vmulq_f32(v8, v202))), v155)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(vaddq_f32(v208, vmulq_f32(v9, v200)), vmulq_f32(v8, v203))), v155)), v156);
      int16x8_t v212 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v206), v155)), vaddq_s32(vcvtnq_s32_f32(v209), v155)), v156);
      int16x8_t v213 = (int16x8_t)veorq_s8(v210, v156);
      int16x8_t v214 = vzip1q_s16(v212, v213);
      int16x8_t v215 = vzip1q_s16(*v151, v211);
      int16x8_t v216 = vzip2q_s16(*v151, v211);
      int16x8_t v217 = vzip2q_s16(v212, v213);
      *int16x8_t v152 = vrev16q_s8((int8x16_t)vzip1q_s16(v215, v214));
      v152[1] = vrev16q_s8((int8x16_t)vzip2q_s16(v215, v214));
      v152[2] = vrev16q_s8((int8x16_t)vzip1q_s16(v216, v217));
      v152[3] = vrev16q_s8((int8x16_t)vzip2q_s16(v216, v217));
      --v150;
      int16x8_t v151 = (int16x8_t *)((char *)v151 + a6);
      int16x8_t v152 = (int8x16_t *)((char *)v152 + a3);
    }
    while (v150 > 1);
  }
  return result;
}

int8x16_t *from_444_to_b64a<8,8,(AlphaOutputMethod)1,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x41665E03u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xC088F52C);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBFDB3836);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x4187B8C9u);
    int v11 = a4 - 8;
    if (a4 <= 8) {
      int v11 = 0;
    }
    if (v11) {
      goto LABEL_10;
    }
LABEL_20:
    int v143 = a2 + 8;
    int v144 = a2 + 32;
    int v145 = a2 + 40;
    unsigned int v146 = a2 + 64;
    unsigned int v147 = a2 + 72;
    int v149 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_21;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x414D16E6u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xC0D0EEC4);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xC0495DA6);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x41819B6Fu);
    int v11 = a4 - 8;
    if (a4 <= 8) {
      int v11 = 0;
    }
    if (v11) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x4157B5AAu);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xC0A728B7);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBFC0923C);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x41899BDFu);
  int v11 = a4 - 8;
  if (a4 <= 8) {
    int v11 = 0;
  }
  if (!v11) {
    goto LABEL_20;
  }
LABEL_10:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x41159F90u);
  v15.i64[0] = 0x7F0000007FLL;
  v15.i64[1] = 0x7F0000007FLL;
  v16.i64[0] = 0x8000800080008000;
  v16.i64[1] = 0x8000800080008000;
  do
  {
    int16x8_t v17 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x8_t v18 = (int8x16_t *)((char *)result + 8 * a3);
    int16x8_t v19 = a2 + 1;
    int16x8_t v20 = vaddq_s16(*a2, v13);
    int16x8_t v21 = a2[32];
    int16x8_t v22 = a2[40];
    int16x8_t v23 = vcltzq_s16(v20);
    int32x4_t v24 = (int32x4_t)vzip1q_s16(v20, v23);
    int32x4_t v25 = (int32x4_t)vzip2q_s16(v20, v23);
    int16x8_t v26 = vcltzq_s16(v21);
    float32x4_t v27 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v21, v26));
    int32x4_t v28 = (int32x4_t)vzip2q_s16(v21, v26);
    float32x4_t v29 = vcvtq_f32_s32(v24);
    float32x4_t v30 = vcvtq_f32_s32(v28);
    int16x8_t v31 = vcltzq_s16(v22);
    float32x4_t v32 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v22, v31));
    float32x4_t v33 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v22, v31));
    float32x4_t v34 = vmulq_f32(v29, v14);
    float32x4_t v35 = vaddq_f32(v34, vmulq_f32(v9, v27));
    float32x4_t v36 = vaddq_f32(v34, vmulq_f32(v7, v32));
    float32x4_t v37 = vaddq_f32(v34, vmulq_f32(v10, v27));
    float32x4_t v38 = vmulq_f32(vcvtq_f32_s32(v25), v14);
    float32x4_t v39 = vaddq_f32(v38, vmulq_f32(v7, v33));
    int8x16_t v40 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v37), v15)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v38, vmulq_f32(v10, v30))), v15));
    int16x8_t v41 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v35, vmulq_f32(v8, v32))), v15)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(vaddq_f32(v38, vmulq_f32(v9, v30)), vmulq_f32(v8, v33))), v15)), v16);
    int16x8_t v42 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v36), v15)), vaddq_s32(vcvtnq_s32_f32(v39), v15)), v16);
    int16x8_t v43 = (int16x8_t)veorq_s8(v40, v16);
    int16x8_t v44 = vzip1q_s16(v42, v43);
    int16x8_t v45 = vzip1q_s16(*a5, v41);
    int16x8_t v46 = vzip2q_s16(*a5, v41);
    int16x8_t v47 = vzip2q_s16(v42, v43);
    *int8x8_t result = vrev16q_s8((int8x16_t)vzip1q_s16(v45, v44));
    result[1] = vrev16q_s8((int8x16_t)vzip2q_s16(v45, v44));
    result[2] = vrev16q_s8((int8x16_t)vzip1q_s16(v46, v47));
    result[3] = vrev16q_s8((int8x16_t)vzip2q_s16(v46, v47));
    int16x8_t v48 = vaddq_s16(a2[8], v13);
    int16x8_t v49 = a2[64];
    int16x8_t v50 = a5[1];
    int16x8_t v51 = a2[72];
    int16x8_t v52 = vcltzq_s16(v48);
    int32x4_t v53 = (int32x4_t)vzip1q_s16(v48, v52);
    int32x4_t v54 = (int32x4_t)vzip2q_s16(v48, v52);
    int16x8_t v55 = vcltzq_s16(v49);
    float32x4_t v56 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v49, v55));
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v49, v55));
    int16x8_t v58 = vcltzq_s16(v51);
    float32x4_t v59 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v51, v58));
    float32x4_t v60 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v51, v58));
    float32x4_t v61 = vmulq_f32(vcvtq_f32_s32(v53), v14);
    float32x4_t v62 = vaddq_f32(v61, vmulq_f32(v7, v59));
    float32x4_t v63 = vaddq_f32(v61, vmulq_f32(v9, v56));
    float32x4_t v64 = vaddq_f32(v61, vmulq_f32(v10, v56));
    float32x4_t v65 = vmulq_f32(vcvtq_f32_s32(v54), v14);
    float32x4_t v66 = vaddq_f32(v65, vmulq_f32(v7, v60));
    float32x4_t v67 = vaddq_f32(vaddq_f32(v65, vmulq_f32(v9, v57)), vmulq_f32(v8, v60));
    float32x4_t v68 = vaddq_f32(v65, vmulq_f32(v10, v57));
    int8x16_t v69 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v62), v15)), vaddq_s32(vcvtnq_s32_f32(v66), v15));
    int8x16_t v70 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v63, vmulq_f32(v8, v59))), v15)), vaddq_s32(vcvtnq_s32_f32(v67), v15));
    int8x16_t v71 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v64), v15)), vaddq_s32(vcvtnq_s32_f32(v68), v15));
    int16x8_t v72 = (int16x8_t)veorq_s8(v70, v16);
    int16x8_t v73 = vzip1q_s16(v50, v72);
    int16x8_t v74 = (int16x8_t)veorq_s8(v69, v16);
    int16x8_t v75 = (int16x8_t)veorq_s8(v71, v16);
    int16x8_t v76 = vzip1q_s16(v74, v75);
    int16x8_t v77 = vzip2q_s16(v50, v72);
    int16x8_t v78 = vzip2q_s16(v74, v75);
    result[4] = vrev16q_s8((int8x16_t)vzip1q_s16(v73, v76));
    result[5] = vrev16q_s8((int8x16_t)vzip2q_s16(v73, v76));
    result[6] = vrev16q_s8((int8x16_t)vzip1q_s16(v77, v78));
    result[7] = vrev16q_s8((int8x16_t)vzip2q_s16(v77, v78));
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v79 = v17[-1];
    int16x8_t v80 = vaddq_s16(a2[16], v13);
    int16x8_t v81 = a2[48];
    int16x8_t v82 = a2[56];
    int16x8_t v83 = vcltzq_s16(v80);
    int32x4_t v84 = (int32x4_t)vzip1q_s16(v80, v83);
    int32x4_t v85 = (int32x4_t)vzip2q_s16(v80, v83);
    int16x8_t v86 = vcltzq_s16(v81);
    float32x4_t v87 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v81, v86));
    float32x4_t v88 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v81, v86));
    int16x8_t v89 = vcltzq_s16(v82);
    float32x4_t v90 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v82, v89));
    float32x4_t v91 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v82, v89));
    float32x4_t v92 = vmulq_f32(vcvtq_f32_s32(v84), v14);
    float32x4_t v93 = vaddq_f32(v92, vmulq_f32(v7, v90));
    float32x4_t v94 = vaddq_f32(v92, vmulq_f32(v9, v87));
    float32x4_t v95 = vaddq_f32(v92, vmulq_f32(v10, v87));
    float32x4_t v96 = vmulq_f32(vcvtq_f32_s32(v85), v14);
    float32x4_t v97 = vaddq_f32(v94, vmulq_f32(v8, v90));
    float32x4_t v98 = vaddq_f32(v96, vmulq_f32(v7, v91));
    float32x4_t v99 = vaddq_f32(vaddq_f32(v96, vmulq_f32(v9, v88)), vmulq_f32(v8, v91));
    float32x4_t v100 = vaddq_f32(v96, vmulq_f32(v10, v88));
    int8x16_t v101 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v93), v15)), vaddq_s32(vcvtnq_s32_f32(v98), v15));
    int8x16_t v102 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v97), v15)), vaddq_s32(vcvtnq_s32_f32(v99), v15));
    int8x16_t v103 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v95), v15)), vaddq_s32(vcvtnq_s32_f32(v100), v15));
    int16x8_t v104 = (int16x8_t)veorq_s8(v102, v16);
    int16x8_t v105 = (int16x8_t)veorq_s8(v101, v16);
    int16x8_t v106 = (int16x8_t)veorq_s8(v103, v16);
    int16x8_t v107 = vzip1q_s16(v79, v104);
    int16x8_t v108 = vzip1q_s16(v105, v106);
    int16x8_t v109 = vzip2q_s16(v79, v104);
    int16x8_t v110 = vzip2q_s16(v105, v106);
    int8x16_t *v18 = vrev16q_s8((int8x16_t)vzip1q_s16(v107, v108));
    v18[1] = vrev16q_s8((int8x16_t)vzip2q_s16(v107, v108));
    CFTypeRef v18[2] = vrev16q_s8((int8x16_t)vzip1q_s16(v109, v110));
    v18[3] = vrev16q_s8((int8x16_t)vzip2q_s16(v109, v110));
    int16x8_t v111 = vaddq_s16(a2[24], v13);
    int16x8_t v112 = a2[80];
    int16x8_t v113 = a2[88];
    int16x8_t v114 = vcltzq_s16(v111);
    int32x4_t v115 = (int32x4_t)vzip1q_s16(v111, v114);
    int32x4_t v116 = (int32x4_t)vzip2q_s16(v111, v114);
    float32x4_t v117 = vcvtq_f32_s32(v115);
    int16x8_t v118 = vcltzq_s16(v112);
    float32x4_t v119 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v112, v118));
    float32x4_t v120 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v112, v118));
    int16x8_t v121 = vcltzq_s16(v113);
    float32x4_t v122 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v113, v121));
    float32x4_t v123 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v113, v121));
    float32x4_t v124 = vmulq_f32(v117, v14);
    float32x4_t v125 = vaddq_f32(v124, vmulq_f32(v9, v119));
    float32x4_t v126 = vaddq_f32(v124, vmulq_f32(v7, v122));
    float32x4_t v127 = vaddq_f32(v124, vmulq_f32(v10, v119));
    float32x4_t v128 = vmulq_f32(vcvtq_f32_s32(v116), v14);
    float32x4_t v129 = vaddq_f32(v128, vmulq_f32(v7, v123));
    float32x4_t v130 = vaddq_f32(vaddq_f32(v128, vmulq_f32(v9, v120)), vmulq_f32(v8, v123));
    float32x4_t v131 = vaddq_f32(v128, vmulq_f32(v10, v120));
    int8x16_t v132 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v126), v15)), vaddq_s32(vcvtnq_s32_f32(v129), v15));
    int8x16_t v133 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v125, vmulq_f32(v8, v122))), v15)), vaddq_s32(vcvtnq_s32_f32(v130), v15));
    int8x16_t v134 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v127), v15)), vaddq_s32(vcvtnq_s32_f32(v131), v15));
    int8x8_t result = (int8x16_t *)((char *)result + a3);
    int16x8_t v135 = (int16x8_t)veorq_s8(v133, v16);
    int16x8_t v136 = vzip1q_s16(*v17, v135);
    int16x8_t v137 = (int16x8_t)veorq_s8(v132, v16);
    int16x8_t v138 = (int16x8_t)veorq_s8(v134, v16);
    int16x8_t v139 = vzip1q_s16(v137, v138);
    int16x8_t v140 = vzip2q_s16(*v17, v135);
    int16x8_t v141 = vzip2q_s16(v137, v138);
    v18[4] = vrev16q_s8((int8x16_t)vzip1q_s16(v136, v139));
    v18[5] = vrev16q_s8((int8x16_t)vzip2q_s16(v136, v139));
    v18[6] = vrev16q_s8((int8x16_t)vzip1q_s16(v140, v141));
    v18[7] = vrev16q_s8((int8x16_t)vzip2q_s16(v140, v141));
    int v142 = v12 - 1;
    LODWORD(v17) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v17 > 1);
  int v143 = v19 + 8;
  int v144 = v19 + 32;
  int v145 = v19 + 40;
  unsigned int v146 = v19 + 64;
  unsigned int v147 = v19 + 72;
  if (a4 <= 8) {
    int v148 = 8;
  }
  else {
    int v148 = a4;
  }
  int v149 = v142 - v148;
  a2 = v19;
  if (v149 >= 1)
  {
LABEL_21:
    unsigned int v150 = v149 + 1;
    int16x8_t v151 = a5 + 1;
    int16x8_t v152 = result + 4;
    v153.i64[0] = 0xE000E000E000E00;
    v153.i64[1] = 0xE000E000E000E00;
    int8x8_t result = (int8x16_t *)1091936144;
    float32x4_t v154 = (float32x4_t)vdupq_n_s32(0x41159F90u);
    v155.i64[0] = 0x7F0000007FLL;
    v155.i64[1] = 0x7F0000007FLL;
    v156.i64[0] = 0x8000800080008000;
    v156.i64[1] = 0x8000800080008000;
    do
    {
      int16x8_t v157 = v151[-1];
      int16x8_t v158 = *a2++;
      int16x8_t v159 = vaddq_s16(v158, v153);
      int16x8_t v160 = *v144++;
      int16x8_t v161 = v160;
      int16x8_t v162 = *v145++;
      int16x8_t v163 = vcltzq_s16(v159);
      int32x4_t v164 = (int32x4_t)vzip1q_s16(v159, v163);
      int32x4_t v165 = (int32x4_t)vzip2q_s16(v159, v163);
      int16x8_t v166 = vcltzq_s16(v161);
      float32x4_t v167 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v161, v166));
      int32x4_t v168 = (int32x4_t)vzip2q_s16(v161, v166);
      float32x4_t v169 = vcvtq_f32_s32(v164);
      float32x4_t v170 = vcvtq_f32_s32(v168);
      int16x8_t v171 = vcltzq_s16(v162);
      float32x4_t v172 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v162, v171));
      float32x4_t v173 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v162, v171));
      float32x4_t v174 = vmulq_f32(v169, v154);
      float32x4_t v175 = vaddq_f32(v174, vmulq_f32(v9, v167));
      float32x4_t v176 = vaddq_f32(v174, vmulq_f32(v7, v172));
      float32x4_t v177 = vaddq_f32(v174, vmulq_f32(v10, v167));
      float32x4_t v178 = vmulq_f32(vcvtq_f32_s32(v165), v154);
      float32x4_t v179 = vaddq_f32(v178, vmulq_f32(v7, v173));
      int8x16_t v180 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v177), v155)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v178, vmulq_f32(v10, v170))), v155));
      int16x8_t v181 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v175, vmulq_f32(v8, v172))), v155)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(vaddq_f32(v178, vmulq_f32(v9, v170)), vmulq_f32(v8, v173))), v155)), v156);
      int16x8_t v182 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v176), v155)), vaddq_s32(vcvtnq_s32_f32(v179), v155)), v156);
      int16x8_t v183 = (int16x8_t)veorq_s8(v180, v156);
      int16x8_t v184 = vzip1q_s16(v182, v183);
      int16x8_t v185 = vzip1q_s16(v157, v181);
      int16x8_t v186 = vzip2q_s16(v157, v181);
      int16x8_t v187 = vzip2q_s16(v182, v183);
      v152[-4] = vrev16q_s8((int8x16_t)vzip1q_s16(v185, v184));
      v152[-3] = vrev16q_s8((int8x16_t)vzip2q_s16(v185, v184));
      v152[-2] = vrev16q_s8((int8x16_t)vzip1q_s16(v186, v187));
      v152[-1] = vrev16q_s8((int8x16_t)vzip2q_s16(v186, v187));
      int16x8_t v188 = *v143++;
      int16x8_t v189 = vaddq_s16(v188, v153);
      int16x8_t v190 = *v146++;
      int16x8_t v191 = v190;
      int16x8_t v192 = *v147++;
      int16x8_t v193 = vcltzq_s16(v189);
      int32x4_t v194 = (int32x4_t)vzip1q_s16(v189, v193);
      int32x4_t v195 = (int32x4_t)vzip2q_s16(v189, v193);
      int16x8_t v196 = vcltzq_s16(v191);
      float32x4_t v197 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v191, v196));
      int32x4_t v198 = (int32x4_t)vzip2q_s16(v191, v196);
      float32x4_t v199 = vcvtq_f32_s32(v194);
      float32x4_t v200 = vcvtq_f32_s32(v198);
      int16x8_t v201 = vcltzq_s16(v192);
      float32x4_t v202 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v192, v201));
      float32x4_t v203 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v192, v201));
      float32x4_t v204 = vmulq_f32(v199, v154);
      float32x4_t v205 = vaddq_f32(v204, vmulq_f32(v9, v197));
      float32x4_t v206 = vaddq_f32(v204, vmulq_f32(v7, v202));
      float32x4_t v207 = vaddq_f32(v204, vmulq_f32(v10, v197));
      float32x4_t v208 = vmulq_f32(vcvtq_f32_s32(v195), v154);
      float32x4_t v209 = vaddq_f32(v208, vmulq_f32(v7, v203));
      int8x16_t v210 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v207), v155)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v208, vmulq_f32(v10, v200))), v155));
      int16x8_t v211 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v205, vmulq_f32(v8, v202))), v155)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(vaddq_f32(v208, vmulq_f32(v9, v200)), vmulq_f32(v8, v203))), v155)), v156);
      int16x8_t v212 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v206), v155)), vaddq_s32(vcvtnq_s32_f32(v209), v155)), v156);
      int16x8_t v213 = (int16x8_t)veorq_s8(v210, v156);
      int16x8_t v214 = vzip1q_s16(v212, v213);
      int16x8_t v215 = vzip1q_s16(*v151, v211);
      int16x8_t v216 = vzip2q_s16(*v151, v211);
      int16x8_t v217 = vzip2q_s16(v212, v213);
      *int16x8_t v152 = vrev16q_s8((int8x16_t)vzip1q_s16(v215, v214));
      v152[1] = vrev16q_s8((int8x16_t)vzip2q_s16(v215, v214));
      v152[2] = vrev16q_s8((int8x16_t)vzip1q_s16(v216, v217));
      v152[3] = vrev16q_s8((int8x16_t)vzip2q_s16(v216, v217));
      --v150;
      int16x8_t v151 = (int16x8_t *)((char *)v151 + a6);
      int16x8_t v152 = (int8x16_t *)((char *)v152 + a3);
    }
    while (v150 > 1);
  }
  return result;
}

int8x16_t *from_444_to_b64a<8,8,(AlphaOutputMethod)2,false>(int8x16_t *result, int16x8_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x41665E03u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xC088F52C);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBFDB3836);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x4187B8C9u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int v145 = a2 + 8;
    unsigned int v146 = a2 + 32;
    unsigned int v147 = a2 + 40;
    int v148 = a2 + 64;
    int v149 = a2 + 72;
    int v151 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x414D16E6u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xC0D0EEC4);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xC0495DA6);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x41819B6Fu);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x4157B5AAu);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xC0A728B7);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBFC0923C);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x41899BDFu);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x41159F90u);
  v15.i64[0] = 0x7F0000007FLL;
  v15.i64[1] = 0x7F0000007FLL;
  v16.i64[0] = 0x8000800080008000;
  v16.i64[1] = 0x8000800080008000;
  v17.i64[0] = -1;
  v17.i64[1] = -1;
  do
  {
    int16x8_t v18 = vaddq_s16(*a2, v13);
    int16x8_t v19 = a2[32];
    int16x8_t v20 = a2[40];
    int16x8_t v21 = vcltzq_s16(v18);
    int32x4_t v22 = (int32x4_t)vzip1q_s16(v18, v21);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v18, v21);
    int16x8_t v24 = vcltzq_s16(v19);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v19, v24));
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v19, v24));
    int16x8_t v27 = vcltzq_s16(v20);
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v20, v27));
    float32x4_t v29 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v20, v27));
    float32x4_t v30 = vmulq_f32(vcvtq_f32_s32(v22), v14);
    float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v7, v28));
    float32x4_t v32 = vaddq_f32(v30, vmulq_f32(v9, v25));
    float32x4_t v33 = vaddq_f32(v30, vmulq_f32(v10, v25));
    float32x4_t v34 = vaddq_f32(v32, vmulq_f32(v8, v28));
    float32x4_t v35 = vmulq_f32(vcvtq_f32_s32(v23), v14);
    float32x4_t v36 = vaddq_f32(v35, vmulq_f32(v7, v29));
    float32x4_t v37 = vaddq_f32(vaddq_f32(v35, vmulq_f32(v9, v26)), vmulq_f32(v8, v29));
    float32x4_t v38 = vaddq_f32(v35, vmulq_f32(v10, v26));
    int8x16_t v39 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v31), v15)), vaddq_s32(vcvtnq_s32_f32(v36), v15));
    int8x16_t v40 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v34), v15)), vaddq_s32(vcvtnq_s32_f32(v37), v15));
    int8x16_t v41 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v33), v15)), vaddq_s32(vcvtnq_s32_f32(v38), v15));
    int16x8_t v42 = (int16x8_t)veorq_s8(v40, v16);
    int16x8_t v43 = (int16x8_t)veorq_s8(v39, v16);
    int16x8_t v44 = vzip1q_s16(v17, v42);
    int16x8_t v45 = (int16x8_t)veorq_s8(v41, v16);
    int16x8_t v46 = vzip1q_s16(v43, v45);
    int16x8_t v47 = vzip2q_s16(v17, v42);
    int16x8_t v48 = vzip2q_s16(v43, v45);
    *int8x8_t result = vrev16q_s8((int8x16_t)vzip1q_s16(v44, v46));
    result[1] = vrev16q_s8((int8x16_t)vzip2q_s16(v44, v46));
    result[2] = vrev16q_s8((int8x16_t)vzip1q_s16(v47, v48));
    result[3] = vrev16q_s8((int8x16_t)vzip2q_s16(v47, v48));
    int16x8_t v49 = vaddq_s16(a2[8], v13);
    int16x8_t v50 = a2[64];
    int16x8_t v51 = a2[72];
    int16x8_t v52 = vcltzq_s16(v49);
    int32x4_t v53 = (int32x4_t)vzip1q_s16(v49, v52);
    int32x4_t v54 = (int32x4_t)vzip2q_s16(v49, v52);
    float32x4_t v55 = vcvtq_f32_s32(v53);
    int16x8_t v56 = vcltzq_s16(v50);
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v50, v56));
    float32x4_t v58 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v50, v56));
    int16x8_t v59 = vcltzq_s16(v51);
    float32x4_t v60 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v51, v59));
    float32x4_t v61 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v51, v59));
    float32x4_t v62 = vmulq_f32(v55, v14);
    float32x4_t v63 = vaddq_f32(v62, vmulq_f32(v9, v57));
    float32x4_t v64 = vaddq_f32(v62, vmulq_f32(v7, v60));
    float32x4_t v65 = vaddq_f32(v62, vmulq_f32(v10, v57));
    float32x4_t v66 = vmulq_f32(vcvtq_f32_s32(v54), v14);
    float32x4_t v67 = vaddq_f32(v66, vmulq_f32(v7, v61));
    float32x4_t v68 = vaddq_f32(vaddq_f32(v66, vmulq_f32(v9, v58)), vmulq_f32(v8, v61));
    float32x4_t v69 = vaddq_f32(v66, vmulq_f32(v10, v58));
    int8x16_t v70 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v64), v15)), vaddq_s32(vcvtnq_s32_f32(v67), v15));
    int8x16_t v71 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v63, vmulq_f32(v8, v60))), v15)), vaddq_s32(vcvtnq_s32_f32(v68), v15));
    int8x16_t v72 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v65), v15)), vaddq_s32(vcvtnq_s32_f32(v69), v15));
    int16x8_t v73 = (int8x16_t *)((char *)result + 8 * a3);
    int16x8_t v74 = (int16x8_t)veorq_s8(v71, v16);
    int16x8_t v75 = vzip1q_s16(v17, v74);
    int16x8_t v76 = (int16x8_t)veorq_s8(v70, v16);
    int16x8_t v77 = (int16x8_t)veorq_s8(v72, v16);
    int16x8_t v78 = vzip1q_s16(v76, v77);
    int16x8_t v79 = vzip2q_s16(v17, v74);
    int16x8_t v80 = vzip2q_s16(v76, v77);
    result[4] = vrev16q_s8((int8x16_t)vzip1q_s16(v75, v78));
    result[5] = vrev16q_s8((int8x16_t)vzip2q_s16(v75, v78));
    result[6] = vrev16q_s8((int8x16_t)vzip1q_s16(v79, v80));
    result[7] = vrev16q_s8((int8x16_t)vzip2q_s16(v79, v80));
    int16x8_t v81 = vaddq_s16(a2[16], v13);
    int16x8_t v82 = a2[48];
    int16x8_t v83 = a2[56];
    int16x8_t v84 = vcltzq_s16(v81);
    int32x4_t v85 = (int32x4_t)vzip1q_s16(v81, v84);
    int32x4_t v86 = (int32x4_t)vzip2q_s16(v81, v84);
    int16x8_t v87 = vcltzq_s16(v82);
    float32x4_t v88 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v82, v87));
    float32x4_t v89 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v82, v87));
    int16x8_t v90 = vcltzq_s16(v83);
    float32x4_t v91 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v83, v90));
    float32x4_t v92 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v83, v90));
    float32x4_t v93 = vmulq_f32(vcvtq_f32_s32(v85), v14);
    float32x4_t v94 = vaddq_f32(v93, vmulq_f32(v7, v91));
    float32x4_t v95 = vaddq_f32(v93, vmulq_f32(v9, v88));
    float32x4_t v96 = vaddq_f32(v93, vmulq_f32(v10, v88));
    float32x4_t v97 = vmulq_f32(vcvtq_f32_s32(v86), v14);
    float32x4_t v98 = vaddq_f32(v95, vmulq_f32(v8, v91));
    float32x4_t v99 = vaddq_f32(v97, vmulq_f32(v7, v92));
    float32x4_t v100 = vaddq_f32(vaddq_f32(v97, vmulq_f32(v9, v89)), vmulq_f32(v8, v92));
    float32x4_t v101 = vaddq_f32(v97, vmulq_f32(v10, v89));
    int8x16_t v102 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v94), v15)), vaddq_s32(vcvtnq_s32_f32(v99), v15));
    int8x16_t v103 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v98), v15)), vaddq_s32(vcvtnq_s32_f32(v100), v15));
    int8x16_t v104 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v96), v15)), vaddq_s32(vcvtnq_s32_f32(v101), v15));
    int16x8_t v105 = (int16x8_t)veorq_s8(v103, v16);
    int16x8_t v106 = (int16x8_t)veorq_s8(v102, v16);
    int16x8_t v107 = (int16x8_t)veorq_s8(v104, v16);
    int16x8_t v108 = vzip1q_s16(v17, v105);
    int16x8_t v109 = vzip1q_s16(v106, v107);
    int16x8_t v110 = vzip2q_s16(v17, v105);
    int16x8_t v111 = vzip2q_s16(v106, v107);
    int16x8_t v112 = a2 + 1;
    int8x16_t *v73 = vrev16q_s8((int8x16_t)vzip1q_s16(v108, v109));
    v73[1] = vrev16q_s8((int8x16_t)vzip2q_s16(v108, v109));
    v73[2] = vrev16q_s8((int8x16_t)vzip1q_s16(v110, v111));
    v73[3] = vrev16q_s8((int8x16_t)vzip2q_s16(v110, v111));
    int16x8_t v113 = vaddq_s16(a2[24], v13);
    int16x8_t v114 = a2[80];
    int16x8_t v115 = a2[88];
    int16x8_t v116 = vcltzq_s16(v113);
    int32x4_t v117 = (int32x4_t)vzip1q_s16(v113, v116);
    int32x4_t v118 = (int32x4_t)vzip2q_s16(v113, v116);
    float32x4_t v119 = vcvtq_f32_s32(v117);
    int16x8_t v120 = vcltzq_s16(v114);
    float32x4_t v121 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v114, v120));
    float32x4_t v122 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v114, v120));
    int16x8_t v123 = vcltzq_s16(v115);
    float32x4_t v124 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v115, v123));
    float32x4_t v125 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v115, v123));
    float32x4_t v126 = vmulq_f32(v119, v14);
    float32x4_t v127 = vaddq_f32(v126, vmulq_f32(v9, v121));
    float32x4_t v128 = vaddq_f32(v126, vmulq_f32(v7, v124));
    float32x4_t v129 = vaddq_f32(v126, vmulq_f32(v10, v121));
    float32x4_t v130 = vmulq_f32(vcvtq_f32_s32(v118), v14);
    float32x4_t v131 = vaddq_f32(v130, vmulq_f32(v7, v125));
    float32x4_t v132 = vaddq_f32(vaddq_f32(v130, vmulq_f32(v9, v122)), vmulq_f32(v8, v125));
    float32x4_t v133 = vaddq_f32(v130, vmulq_f32(v10, v122));
    int8x16_t v134 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v128), v15)), vaddq_s32(vcvtnq_s32_f32(v131), v15));
    int8x16_t v135 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v127, vmulq_f32(v8, v124))), v15)), vaddq_s32(vcvtnq_s32_f32(v132), v15));
    int8x16_t v136 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v129), v15)), vaddq_s32(vcvtnq_s32_f32(v133), v15));
    int8x8_t result = (int8x16_t *)((char *)result + a3);
    int16x8_t v137 = (int16x8_t)veorq_s8(v135, v16);
    int16x8_t v138 = vzip1q_s16(v17, v137);
    int16x8_t v139 = (int16x8_t)veorq_s8(v134, v16);
    int16x8_t v140 = (int16x8_t)veorq_s8(v136, v16);
    int16x8_t v141 = vzip1q_s16(v139, v140);
    int16x8_t v142 = vzip2q_s16(v17, v137);
    int16x8_t v143 = vzip2q_s16(v139, v140);
    v73[4] = vrev16q_s8((int8x16_t)vzip1q_s16(v138, v141));
    v73[5] = vrev16q_s8((int8x16_t)vzip2q_s16(v138, v141));
    v73[6] = vrev16q_s8((int8x16_t)vzip1q_s16(v142, v143));
    v73[7] = vrev16q_s8((int8x16_t)vzip2q_s16(v142, v143));
    int v144 = v12 - 1;
    LODWORD(v73) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v73 > 1);
  int v145 = v112 + 8;
  unsigned int v146 = v112 + 32;
  unsigned int v147 = v112 + 40;
  int v148 = v112 + 64;
  int v149 = v112 + 72;
  if (a4 <= 8) {
    int v150 = 8;
  }
  else {
    int v150 = a4;
  }
  int v151 = v144 - v150;
  a2 = v112;
  if (v151 >= 1)
  {
LABEL_24:
    unsigned int v152 = v151 + 1;
    int16x8_t v153 = result + 4;
    v154.i64[0] = 0xE000E000E000E00;
    v154.i64[1] = 0xE000E000E000E00;
    float32x4_t v155 = (float32x4_t)vdupq_n_s32(0x41159F90u);
    v156.i64[0] = 0x7F0000007FLL;
    v156.i64[1] = 0x7F0000007FLL;
    v157.i64[0] = 0x8000800080008000;
    v157.i64[1] = 0x8000800080008000;
    v158.i64[0] = -1;
    v158.i64[1] = -1;
    do
    {
      int16x8_t v159 = *a2++;
      int16x8_t v160 = vaddq_s16(v159, v154);
      int16x8_t v161 = *v146++;
      int16x8_t v162 = v161;
      int16x8_t v163 = *v147++;
      int16x8_t v164 = vcltzq_s16(v160);
      int32x4_t v165 = (int32x4_t)vzip1q_s16(v160, v164);
      int32x4_t v166 = (int32x4_t)vzip2q_s16(v160, v164);
      int16x8_t v167 = vcltzq_s16(v162);
      float32x4_t v168 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v162, v167));
      float32x4_t v169 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v162, v167));
      int16x8_t v170 = vcltzq_s16(v163);
      float32x4_t v171 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v163, v170));
      float32x4_t v172 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v163, v170));
      float32x4_t v173 = vmulq_f32(vcvtq_f32_s32(v165), v155);
      float32x4_t v174 = vaddq_f32(v173, vmulq_f32(v7, v171));
      float32x4_t v175 = vaddq_f32(v173, vmulq_f32(v9, v168));
      float32x4_t v176 = vaddq_f32(v173, vmulq_f32(v10, v168));
      float32x4_t v177 = vaddq_f32(v175, vmulq_f32(v8, v171));
      float32x4_t v178 = vmulq_f32(vcvtq_f32_s32(v166), v155);
      float32x4_t v179 = vaddq_f32(v178, vmulq_f32(v7, v172));
      float32x4_t v180 = vaddq_f32(vaddq_f32(v178, vmulq_f32(v9, v169)), vmulq_f32(v8, v172));
      float32x4_t v181 = vaddq_f32(v178, vmulq_f32(v10, v169));
      int8x16_t v182 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v174), v156)), vaddq_s32(vcvtnq_s32_f32(v179), v156));
      int8x16_t v183 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v177), v156)), vaddq_s32(vcvtnq_s32_f32(v180), v156));
      int8x16_t v184 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v176), v156)), vaddq_s32(vcvtnq_s32_f32(v181), v156));
      int16x8_t v185 = (int16x8_t)veorq_s8(v183, v157);
      int16x8_t v186 = (int16x8_t)veorq_s8(v182, v157);
      int16x8_t v187 = vzip1q_s16(v158, v185);
      int16x8_t v188 = (int16x8_t)veorq_s8(v184, v157);
      int16x8_t v189 = vzip1q_s16(v186, v188);
      int16x8_t v190 = vzip2q_s16(v158, v185);
      int16x8_t v191 = vzip2q_s16(v186, v188);
      v153[-4] = vrev16q_s8((int8x16_t)vzip1q_s16(v187, v189));
      v153[-3] = vrev16q_s8((int8x16_t)vzip2q_s16(v187, v189));
      v153[-2] = vrev16q_s8((int8x16_t)vzip1q_s16(v190, v191));
      v153[-1] = vrev16q_s8((int8x16_t)vzip2q_s16(v190, v191));
      int16x8_t v192 = *v145++;
      int16x8_t v193 = vaddq_s16(v192, v154);
      int16x8_t v194 = *v148++;
      int16x8_t v195 = v194;
      int16x8_t v196 = *v149++;
      int16x8_t v197 = vcltzq_s16(v193);
      int32x4_t v198 = (int32x4_t)vzip1q_s16(v193, v197);
      int32x4_t v199 = (int32x4_t)vzip2q_s16(v193, v197);
      int16x8_t v200 = vcltzq_s16(v195);
      float32x4_t v201 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v195, v200));
      float32x4_t v202 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v195, v200));
      int16x8_t v203 = vcltzq_s16(v196);
      float32x4_t v204 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v196, v203));
      float32x4_t v205 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v196, v203));
      float32x4_t v206 = vmulq_f32(vcvtq_f32_s32(v198), v155);
      float32x4_t v207 = vaddq_f32(v206, vmulq_f32(v7, v204));
      float32x4_t v208 = vaddq_f32(v206, vmulq_f32(v9, v201));
      float32x4_t v209 = vaddq_f32(v206, vmulq_f32(v10, v201));
      float32x4_t v210 = vmulq_f32(vcvtq_f32_s32(v199), v155);
      float32x4_t v211 = vaddq_f32(v208, vmulq_f32(v8, v204));
      float32x4_t v212 = vaddq_f32(v210, vmulq_f32(v7, v205));
      float32x4_t v213 = vaddq_f32(vaddq_f32(v210, vmulq_f32(v9, v202)), vmulq_f32(v8, v205));
      float32x4_t v214 = vaddq_f32(v210, vmulq_f32(v10, v202));
      int8x16_t v215 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v207), v156)), vaddq_s32(vcvtnq_s32_f32(v212), v156));
      int8x16_t v216 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v211), v156)), vaddq_s32(vcvtnq_s32_f32(v213), v156));
      int8x16_t v217 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v209), v156)), vaddq_s32(vcvtnq_s32_f32(v214), v156));
      int16x8_t v218 = (int16x8_t)veorq_s8(v216, v157);
      int16x8_t v219 = (int16x8_t)veorq_s8(v215, v157);
      int16x8_t v220 = (int16x8_t)veorq_s8(v217, v157);
      int16x8_t v221 = vzip1q_s16(v158, v218);
      int16x8_t v222 = vzip1q_s16(v219, v220);
      int16x8_t v223 = vzip2q_s16(v158, v218);
      int16x8_t v224 = vzip2q_s16(v219, v220);
      *int16x8_t v153 = vrev16q_s8((int8x16_t)vzip1q_s16(v221, v222));
      v153[1] = vrev16q_s8((int8x16_t)vzip2q_s16(v221, v222));
      v153[2] = vrev16q_s8((int8x16_t)vzip1q_s16(v223, v224));
      v153[3] = vrev16q_s8((int8x16_t)vzip2q_s16(v223, v224));
      --v152;
      int16x8_t v153 = (int8x16_t *)((char *)v153 + a3);
    }
    while (v152 > 1);
  }
  return result;
}

int8x16_t *from_444_to_b64a<8,8,(AlphaOutputMethod)2,true>(int8x16_t *result, int16x8_t *a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  if (a7 == 1)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x41665E03u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xC088F52C);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBFDB3836);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x4187B8C9u);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
LABEL_23:
    int v145 = a2 + 8;
    unsigned int v146 = a2 + 32;
    unsigned int v147 = a2 + 40;
    int v148 = a2 + 64;
    int v149 = a2 + 72;
    int v151 = a4 - v11;
    if (a4 - v11 < 1) {
      return result;
    }
    goto LABEL_24;
  }
  if (a7 != 9)
  {
    float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x414D16E6u);
    float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xC0D0EEC4);
    float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xC0495DA6);
    float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x41819B6Fu);
    if (a4 <= 8) {
      int v11 = 0;
    }
    else {
      int v11 = a4 - 8;
    }
    if (v11) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
  float32x4_t v7 = (float32x4_t)vdupq_n_s32(0x4157B5AAu);
  float32x4_t v8 = (float32x4_t)vdupq_n_s32(0xC0A728B7);
  float32x4_t v9 = (float32x4_t)vdupq_n_s32(0xBFC0923C);
  float32x4_t v10 = (float32x4_t)vdupq_n_s32(0x41899BDFu);
  if (a4 <= 8) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - 8;
  }
  if (!v11) {
    goto LABEL_23;
  }
LABEL_12:
  int v12 = a4 + 8;
  v13.i64[0] = 0xE000E000E000E00;
  v13.i64[1] = 0xE000E000E000E00;
  float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x41159F90u);
  v15.i64[0] = 0x7F0000007FLL;
  v15.i64[1] = 0x7F0000007FLL;
  v16.i64[0] = 0x8000800080008000;
  v16.i64[1] = 0x8000800080008000;
  v17.i64[0] = -1;
  v17.i64[1] = -1;
  do
  {
    int16x8_t v18 = vaddq_s16(*a2, v13);
    int16x8_t v19 = a2[32];
    int16x8_t v20 = a2[40];
    int16x8_t v21 = vcltzq_s16(v18);
    int32x4_t v22 = (int32x4_t)vzip1q_s16(v18, v21);
    int32x4_t v23 = (int32x4_t)vzip2q_s16(v18, v21);
    int16x8_t v24 = vcltzq_s16(v19);
    float32x4_t v25 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v19, v24));
    float32x4_t v26 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v19, v24));
    int16x8_t v27 = vcltzq_s16(v20);
    float32x4_t v28 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v20, v27));
    float32x4_t v29 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v20, v27));
    float32x4_t v30 = vmulq_f32(vcvtq_f32_s32(v22), v14);
    float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v7, v28));
    float32x4_t v32 = vaddq_f32(v30, vmulq_f32(v9, v25));
    float32x4_t v33 = vaddq_f32(v30, vmulq_f32(v10, v25));
    float32x4_t v34 = vaddq_f32(v32, vmulq_f32(v8, v28));
    float32x4_t v35 = vmulq_f32(vcvtq_f32_s32(v23), v14);
    float32x4_t v36 = vaddq_f32(v35, vmulq_f32(v7, v29));
    float32x4_t v37 = vaddq_f32(vaddq_f32(v35, vmulq_f32(v9, v26)), vmulq_f32(v8, v29));
    float32x4_t v38 = vaddq_f32(v35, vmulq_f32(v10, v26));
    int8x16_t v39 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v31), v15)), vaddq_s32(vcvtnq_s32_f32(v36), v15));
    int8x16_t v40 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v34), v15)), vaddq_s32(vcvtnq_s32_f32(v37), v15));
    int8x16_t v41 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v33), v15)), vaddq_s32(vcvtnq_s32_f32(v38), v15));
    int16x8_t v42 = (int16x8_t)veorq_s8(v40, v16);
    int16x8_t v43 = (int16x8_t)veorq_s8(v39, v16);
    int16x8_t v44 = vzip1q_s16(v17, v42);
    int16x8_t v45 = (int16x8_t)veorq_s8(v41, v16);
    int16x8_t v46 = vzip1q_s16(v43, v45);
    int16x8_t v47 = vzip2q_s16(v17, v42);
    int16x8_t v48 = vzip2q_s16(v43, v45);
    *int8x8_t result = vrev16q_s8((int8x16_t)vzip1q_s16(v44, v46));
    result[1] = vrev16q_s8((int8x16_t)vzip2q_s16(v44, v46));
    result[2] = vrev16q_s8((int8x16_t)vzip1q_s16(v47, v48));
    result[3] = vrev16q_s8((int8x16_t)vzip2q_s16(v47, v48));
    int16x8_t v49 = vaddq_s16(a2[8], v13);
    int16x8_t v50 = a2[64];
    int16x8_t v51 = a2[72];
    int16x8_t v52 = vcltzq_s16(v49);
    int32x4_t v53 = (int32x4_t)vzip1q_s16(v49, v52);
    int32x4_t v54 = (int32x4_t)vzip2q_s16(v49, v52);
    float32x4_t v55 = vcvtq_f32_s32(v53);
    int16x8_t v56 = vcltzq_s16(v50);
    float32x4_t v57 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v50, v56));
    float32x4_t v58 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v50, v56));
    int16x8_t v59 = vcltzq_s16(v51);
    float32x4_t v60 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v51, v59));
    float32x4_t v61 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v51, v59));
    float32x4_t v62 = vmulq_f32(v55, v14);
    float32x4_t v63 = vaddq_f32(v62, vmulq_f32(v9, v57));
    float32x4_t v64 = vaddq_f32(v62, vmulq_f32(v7, v60));
    float32x4_t v65 = vaddq_f32(v62, vmulq_f32(v10, v57));
    float32x4_t v66 = vmulq_f32(vcvtq_f32_s32(v54), v14);
    float32x4_t v67 = vaddq_f32(v66, vmulq_f32(v7, v61));
    float32x4_t v68 = vaddq_f32(vaddq_f32(v66, vmulq_f32(v9, v58)), vmulq_f32(v8, v61));
    float32x4_t v69 = vaddq_f32(v66, vmulq_f32(v10, v58));
    int8x16_t v70 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v64), v15)), vaddq_s32(vcvtnq_s32_f32(v67), v15));
    int8x16_t v71 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v63, vmulq_f32(v8, v60))), v15)), vaddq_s32(vcvtnq_s32_f32(v68), v15));
    int8x16_t v72 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v65), v15)), vaddq_s32(vcvtnq_s32_f32(v69), v15));
    int16x8_t v73 = (int8x16_t *)((char *)result + 8 * a3);
    int16x8_t v74 = (int16x8_t)veorq_s8(v71, v16);
    int16x8_t v75 = vzip1q_s16(v17, v74);
    int16x8_t v76 = (int16x8_t)veorq_s8(v70, v16);
    int16x8_t v77 = (int16x8_t)veorq_s8(v72, v16);
    int16x8_t v78 = vzip1q_s16(v76, v77);
    int16x8_t v79 = vzip2q_s16(v17, v74);
    int16x8_t v80 = vzip2q_s16(v76, v77);
    result[4] = vrev16q_s8((int8x16_t)vzip1q_s16(v75, v78));
    result[5] = vrev16q_s8((int8x16_t)vzip2q_s16(v75, v78));
    result[6] = vrev16q_s8((int8x16_t)vzip1q_s16(v79, v80));
    result[7] = vrev16q_s8((int8x16_t)vzip2q_s16(v79, v80));
    int16x8_t v81 = vaddq_s16(a2[16], v13);
    int16x8_t v82 = a2[48];
    int16x8_t v83 = a2[56];
    int16x8_t v84 = vcltzq_s16(v81);
    int32x4_t v85 = (int32x4_t)vzip1q_s16(v81, v84);
    int32x4_t v86 = (int32x4_t)vzip2q_s16(v81, v84);
    int16x8_t v87 = vcltzq_s16(v82);
    float32x4_t v88 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v82, v87));
    float32x4_t v89 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v82, v87));
    int16x8_t v90 = vcltzq_s16(v83);
    float32x4_t v91 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v83, v90));
    float32x4_t v92 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v83, v90));
    float32x4_t v93 = vmulq_f32(vcvtq_f32_s32(v85), v14);
    float32x4_t v94 = vaddq_f32(v93, vmulq_f32(v7, v91));
    float32x4_t v95 = vaddq_f32(v93, vmulq_f32(v9, v88));
    float32x4_t v96 = vaddq_f32(v93, vmulq_f32(v10, v88));
    float32x4_t v97 = vmulq_f32(vcvtq_f32_s32(v86), v14);
    float32x4_t v98 = vaddq_f32(v95, vmulq_f32(v8, v91));
    float32x4_t v99 = vaddq_f32(v97, vmulq_f32(v7, v92));
    float32x4_t v100 = vaddq_f32(vaddq_f32(v97, vmulq_f32(v9, v89)), vmulq_f32(v8, v92));
    float32x4_t v101 = vaddq_f32(v97, vmulq_f32(v10, v89));
    int8x16_t v102 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v94), v15)), vaddq_s32(vcvtnq_s32_f32(v99), v15));
    int8x16_t v103 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v98), v15)), vaddq_s32(vcvtnq_s32_f32(v100), v15));
    int8x16_t v104 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v96), v15)), vaddq_s32(vcvtnq_s32_f32(v101), v15));
    int16x8_t v105 = (int16x8_t)veorq_s8(v103, v16);
    int16x8_t v106 = (int16x8_t)veorq_s8(v102, v16);
    int16x8_t v107 = (int16x8_t)veorq_s8(v104, v16);
    int16x8_t v108 = vzip1q_s16(v17, v105);
    int16x8_t v109 = vzip1q_s16(v106, v107);
    int16x8_t v110 = vzip2q_s16(v17, v105);
    int16x8_t v111 = vzip2q_s16(v106, v107);
    int16x8_t v112 = a2 + 1;
    int8x16_t *v73 = vrev16q_s8((int8x16_t)vzip1q_s16(v108, v109));
    v73[1] = vrev16q_s8((int8x16_t)vzip2q_s16(v108, v109));
    v73[2] = vrev16q_s8((int8x16_t)vzip1q_s16(v110, v111));
    v73[3] = vrev16q_s8((int8x16_t)vzip2q_s16(v110, v111));
    int16x8_t v113 = vaddq_s16(a2[24], v13);
    int16x8_t v114 = a2[80];
    int16x8_t v115 = a2[88];
    int16x8_t v116 = vcltzq_s16(v113);
    int32x4_t v117 = (int32x4_t)vzip1q_s16(v113, v116);
    int32x4_t v118 = (int32x4_t)vzip2q_s16(v113, v116);
    float32x4_t v119 = vcvtq_f32_s32(v117);
    int16x8_t v120 = vcltzq_s16(v114);
    float32x4_t v121 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v114, v120));
    float32x4_t v122 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v114, v120));
    int16x8_t v123 = vcltzq_s16(v115);
    float32x4_t v124 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v115, v123));
    float32x4_t v125 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v115, v123));
    float32x4_t v126 = vmulq_f32(v119, v14);
    float32x4_t v127 = vaddq_f32(v126, vmulq_f32(v9, v121));
    float32x4_t v128 = vaddq_f32(v126, vmulq_f32(v7, v124));
    float32x4_t v129 = vaddq_f32(v126, vmulq_f32(v10, v121));
    float32x4_t v130 = vmulq_f32(vcvtq_f32_s32(v118), v14);
    float32x4_t v131 = vaddq_f32(v130, vmulq_f32(v7, v125));
    float32x4_t v132 = vaddq_f32(vaddq_f32(v130, vmulq_f32(v9, v122)), vmulq_f32(v8, v125));
    float32x4_t v133 = vaddq_f32(v130, vmulq_f32(v10, v122));
    int8x16_t v134 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v128), v15)), vaddq_s32(vcvtnq_s32_f32(v131), v15));
    int8x16_t v135 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v127, vmulq_f32(v8, v124))), v15)), vaddq_s32(vcvtnq_s32_f32(v132), v15));
    int8x16_t v136 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v129), v15)), vaddq_s32(vcvtnq_s32_f32(v133), v15));
    int8x8_t result = (int8x16_t *)((char *)result + a3);
    int16x8_t v137 = (int16x8_t)veorq_s8(v135, v16);
    int16x8_t v138 = vzip1q_s16(v17, v137);
    int16x8_t v139 = (int16x8_t)veorq_s8(v134, v16);
    int16x8_t v140 = (int16x8_t)veorq_s8(v136, v16);
    int16x8_t v141 = vzip1q_s16(v139, v140);
    int16x8_t v142 = vzip2q_s16(v17, v137);
    int16x8_t v143 = vzip2q_s16(v139, v140);
    v73[4] = vrev16q_s8((int8x16_t)vzip1q_s16(v138, v141));
    v73[5] = vrev16q_s8((int8x16_t)vzip2q_s16(v138, v141));
    v73[6] = vrev16q_s8((int8x16_t)vzip1q_s16(v142, v143));
    v73[7] = vrev16q_s8((int8x16_t)vzip2q_s16(v142, v143));
    int v144 = v12 - 1;
    LODWORD(v73) = v12 - 16;
    --v12;
    ++a2;
  }
  while ((int)v73 > 1);
  int v145 = v112 + 8;
  unsigned int v146 = v112 + 32;
  unsigned int v147 = v112 + 40;
  int v148 = v112 + 64;
  int v149 = v112 + 72;
  if (a4 <= 8) {
    int v150 = 8;
  }
  else {
    int v150 = a4;
  }
  int v151 = v144 - v150;
  a2 = v112;
  if (v151 >= 1)
  {
LABEL_24:
    unsigned int v152 = v151 + 1;
    int16x8_t v153 = result + 4;
    v154.i64[0] = 0xE000E000E000E00;
    v154.i64[1] = 0xE000E000E000E00;
    float32x4_t v155 = (float32x4_t)vdupq_n_s32(0x41159F90u);
    v156.i64[0] = 0x7F0000007FLL;
    v156.i64[1] = 0x7F0000007FLL;
    v157.i64[0] = 0x8000800080008000;
    v157.i64[1] = 0x8000800080008000;
    v158.i64[0] = -1;
    v158.i64[1] = -1;
    do
    {
      int16x8_t v159 = *a2++;
      int16x8_t v160 = vaddq_s16(v159, v154);
      int16x8_t v161 = *v146++;
      int16x8_t v162 = v161;
      int16x8_t v163 = *v147++;
      int16x8_t v164 = vcltzq_s16(v160);
      int32x4_t v165 = (int32x4_t)vzip1q_s16(v160, v164);
      int32x4_t v166 = (int32x4_t)vzip2q_s16(v160, v164);
      int16x8_t v167 = vcltzq_s16(v162);
      float32x4_t v168 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v162, v167));
      float32x4_t v169 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v162, v167));
      int16x8_t v170 = vcltzq_s16(v163);
      float32x4_t v171 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v163, v170));
      float32x4_t v172 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v163, v170));
      float32x4_t v173 = vmulq_f32(vcvtq_f32_s32(v165), v155);
      float32x4_t v174 = vaddq_f32(v173, vmulq_f32(v7, v171));
      float32x4_t v175 = vaddq_f32(v173, vmulq_f32(v9, v168));
      float32x4_t v176 = vaddq_f32(v173, vmulq_f32(v10, v168));
      float32x4_t v177 = vaddq_f32(v175, vmulq_f32(v8, v171));
      float32x4_t v178 = vmulq_f32(vcvtq_f32_s32(v166), v155);
      float32x4_t v179 = vaddq_f32(v178, vmulq_f32(v7, v172));
      float32x4_t v180 = vaddq_f32(vaddq_f32(v178, vmulq_f32(v9, v169)), vmulq_f32(v8, v172));
      float32x4_t v181 = vaddq_f32(v178, vmulq_f32(v10, v169));
      int8x16_t v182 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v174), v156)), vaddq_s32(vcvtnq_s32_f32(v179), v156));
      int8x16_t v183 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v177), v156)), vaddq_s32(vcvtnq_s32_f32(v180), v156));
      int8x16_t v184 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v176), v156)), vaddq_s32(vcvtnq_s32_f32(v181), v156));
      int16x8_t v185 = (int16x8_t)veorq_s8(v183, v157);
      int16x8_t v186 = (int16x8_t)veorq_s8(v182, v157);
      int16x8_t v187 = vzip1q_s16(v158, v185);
      int16x8_t v188 = (int16x8_t)veorq_s8(v184, v157);
      int16x8_t v189 = vzip1q_s16(v186, v188);
      int16x8_t v190 = vzip2q_s16(v158, v185);
      int16x8_t v191 = vzip2q_s16(v186, v188);
      v153[-4] = vrev16q_s8((int8x16_t)vzip1q_s16(v187, v189));
      v153[-3] = vrev16q_s8((int8x16_t)vzip2q_s16(v187, v189));
      v153[-2] = vrev16q_s8((int8x16_t)vzip1q_s16(v190, v191));
      v153[-1] = vrev16q_s8((int8x16_t)vzip2q_s16(v190, v191));
      int16x8_t v192 = *v145++;
      int16x8_t v193 = vaddq_s16(v192, v154);
      int16x8_t v194 = *v148++;
      int16x8_t v195 = v194;
      int16x8_t v196 = *v149++;
      int16x8_t v197 = vcltzq_s16(v193);
      int32x4_t v198 = (int32x4_t)vzip1q_s16(v193, v197);
      int32x4_t v199 = (int32x4_t)vzip2q_s16(v193, v197);
      int16x8_t v200 = vcltzq_s16(v195);
      float32x4_t v201 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v195, v200));
      float32x4_t v202 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v195, v200));
      int16x8_t v203 = vcltzq_s16(v196);
      float32x4_t v204 = vcvtq_f32_s32((int32x4_t)vzip1q_s16(v196, v203));
      float32x4_t v205 = vcvtq_f32_s32((int32x4_t)vzip2q_s16(v196, v203));
      float32x4_t v206 = vmulq_f32(vcvtq_f32_s32(v198), v155);
      float32x4_t v207 = vaddq_f32(v206, vmulq_f32(v7, v204));
      float32x4_t v208 = vaddq_f32(v206, vmulq_f32(v9, v201));
      float32x4_t v209 = vaddq_f32(v206, vmulq_f32(v10, v201));
      float32x4_t v210 = vmulq_f32(vcvtq_f32_s32(v199), v155);
      float32x4_t v211 = vaddq_f32(v208, vmulq_f32(v8, v204));
      float32x4_t v212 = vaddq_f32(v210, vmulq_f32(v7, v205));
      float32x4_t v213 = vaddq_f32(vaddq_f32(v210, vmulq_f32(v9, v202)), vmulq_f32(v8, v205));
      float32x4_t v214 = vaddq_f32(v210, vmulq_f32(v10, v202));
      int8x16_t v215 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v207), v156)), vaddq_s32(vcvtnq_s32_f32(v212), v156));
      int8x16_t v216 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v211), v156)), vaddq_s32(vcvtnq_s32_f32(v213), v156));
      int8x16_t v217 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v209), v156)), vaddq_s32(vcvtnq_s32_f32(v214), v156));
      int16x8_t v218 = (int16x8_t)veorq_s8(v216, v157);
      int16x8_t v219 = (int16x8_t)veorq_s8(v215, v157);
      int16x8_t v220 = (int16x8_t)veorq_s8(v217, v157);
      int16x8_t v221 = vzip1q_s16(v158, v218);
      int16x8_t v222 = vzip1q_s16(v219, v220);
      int16x8_t v223 = vzip2q_s16(v158, v218);
      int16x8_t v224 = vzip2q_s16(v219, v220);
      *int16x8_t v153 = vrev16q_s8((int8x16_t)vzip1q_s16(v221, v222));
      v153[1] = vrev16q_s8((int8x16_t)vzip2q_s16(v221, v222));
      v153[2] = vrev16q_s8((int8x16_t)vzip1q_s16(v223, v224));
      v153[3] = vrev16q_s8((int8x16_t)vzip2q_s16(v223, v224));
      --v152;
      int16x8_t v153 = (int8x16_t *)((char *)v153 + a3);
    }
    while (v152 > 1);
  }
  return result;
}

uint64_t PixelWriter::processMBRow(uint64_t this, unsigned __int8 *a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, unint64_t a6, uint64_t a7, unsigned __int8 *a8, double a9, double a10, int8x16_t a11, int8x16_t a12, int32x4_t a13, int16x8_t a14, double a15, float32x4_t a16, unsigned int a17, int a18, int a19, unsigned int a20,BOOL a21)
{
  int v22 = a7;
  int32x4_t v23 = (__n128 *)a6;
  int16x8_t v24 = (_DWORD *)this;
  uint64_t v114 = *MEMORY[0x263EF8340];
  int v25 = *(_DWORD *)(*(void *)this + 36);
  if (*(unsigned char *)(this + 13)) {
    goto LABEL_2;
  }
  a6 = a17;
  if (v25 > 1937126451)
  {
    if (v25 > 1983000879)
    {
      if (v25 <= 2016687155)
      {
        if (v25 == 1983000880)
        {
          this = (uint64_t)convertV216ToV210((unint64_t *)a2, a3, v23, a7, a18, a19, a9, a10, a11, a12, a13, a14);
          goto LABEL_2;
        }
        int v39 = 2016686642;
LABEL_61:
        if (v25 != v39) {
          goto LABEL_2;
        }
LABEL_62:
        this = convertV216ToX422((uint64_t)a2, a3, (unsigned __int8 *)v23, v22, a8, a17, a18, a19);
        goto LABEL_2;
      }
      if (v25 != 2016687156 && v25 != 2016698739) {
        goto LABEL_2;
      }
      unsigned __int16 v45 = -64;
    }
    else
    {
      if (v25 > 1953903153)
      {
        if (v25 == 1953903154) {
          goto LABEL_62;
        }
        int v35 = 1953903668;
      }
      else
      {
        if (v25 == 1937126452)
        {
LABEL_69:
          unsigned __int16 v45 = -1;
          goto LABEL_70;
        }
        int v35 = 1949589875;
      }
      if (v25 != v35) {
        goto LABEL_2;
      }
      unsigned __int16 v45 = -16;
    }
LABEL_70:
    this = convertY416ToX444((uint64_t)a2, a3, (unsigned __int8 *)v23, v22, a8, a17, a18, a19, *(_DWORD *)(this + 8) == 2, v45);
    goto LABEL_2;
  }
  a7 = a20;
  if (v25 <= 1848848433)
  {
    if (v25 > 1378955370)
    {
      if (v25 == 1378955371)
      {
        if (a18 < 1) {
          goto LABEL_2;
        }
        if (a20 == 1)
        {
          float32x4_t v51 = (float32x4_t)xmmword_262D47610;
          float32x4_t v52 = (float32x4_t)xmmword_262D47620;
        }
        else if (a20 == 9)
        {
          float32x4_t v51 = (float32x4_t)xmmword_262D47630;
          float32x4_t v52 = (float32x4_t)xmmword_262D47640;
        }
        else
        {
          float32x4_t v51 = (float32x4_t)xmmword_262D47650;
          float32x4_t v52 = (float32x4_t)xmmword_262D47660;
        }
        if (a19 < 1) {
          goto LABEL_2;
        }
        int v90 = 0;
        float32x4_t v91 = (float32x4_t)vdupq_n_s32(0x3C957ABDu);
        v92.i64[0] = 0xFC00FC00FC00FC00;
        v92.i64[1] = 0xFC00FC00FC00FC00;
        float32x4_t v93 = v23;
LABEL_129:
        float32x4_t v94 = 0;
        a16.i64[0] = *(void *)a2;
        a16 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)a16, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
        int v95 = a18;
        float32x4_t v96 = v93;
        float32x4_t v97 = a2;
        while (1)
        {
          if (v95 < 3)
          {
            if (v94)
            {
              if (v95 == 1) {
                v94->n128_u32[0] = v113;
              }
              a2 += (int)a3;
              float32x4_t v93 = (__n128 *)((char *)v93 + v22);
              if (++v90 == a19) {
                goto LABEL_2;
              }
              goto LABEL_129;
            }
            uint64_t v107 = *(void *)v97;
            float32x4_t v94 = v96;
            if (v95 == 1) {
              float32x4_t v96 = (__n128 *)&v113;
            }
            v95 += 2;
            float32x4_t v97 = (unsigned __int8 *)&v106;
          }
          uint64_t v98 = *((void *)v97 + 1);
          v97 += 8;
          v21.i64[0] = v98;
          float32x4_t v21 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v21, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
          float32x4_t v99 = (float32x4_t)vzip2q_s32((int32x4_t)a16, (int32x4_t)vaddq_f32(a16, v21));
          float32x4_t v100 = (float32x4_t)vdupq_lane_s64(vmulq_f32(a16, v91).i64[0], 0);
          float32x4_t v101 = vaddq_f32(v100, vmulq_f32(v51, v99));
          float32x4_t v102 = vmulq_f32(v52, v99);
          int16x8_t v103 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v101)), vcvtnq_s32_f32(vaddq_f32(v100, vaddq_f32(v102, (float32x4_t)vdupq_laneq_s64((int64x2_t)v102, 1))))), (int16x8_t)0), v92);
          int32x4_t v104 = (int32x4_t)vzip1q_s16(v103, (int16x8_t)0);
          int32x4_t v105 = (int32x4_t)vrev16q_s8(vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32(v104, 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v103, (int16x8_t)0), 0xCuLL)), (int8x16_t)vdupq_laneq_s64((int64x2_t)vshlq_n_s32(v104, 2uLL), 1)));
          v96->n128_u64[0] = vorrq_s8((int8x16_t)vshlq_n_s32(v105, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v105, 0x10uLL)).u64[0];
          float32x4_t v96 = (__n128 *)((char *)v96 + 8);
          v95 -= 2;
          a16 = v21;
        }
      }
      if (v25 == 1647719521)
      {
        if (*(unsigned char *)(this + 12)) {
          this = (uint64_t)from_v216_to_ARGB<(PixelFormat)1647719521,(AlphaOutputMethod)1>((uint64_t *)a2, a3, (int *)a4, a5, (int8x16_t *)v23, v22, a18, a19, a20);
        }
        else {
          this = (uint64_t)from_v216_to_ARGB<(PixelFormat)1647719521,(AlphaOutputMethod)2>((uint64_t *)a2, a3, (int8x16_t *)v23, v22, a18, a19, a20);
        }
      }
    }
    else if (v25 == 32)
    {
      if (*(unsigned char *)(this + 12)) {
        this = (uint64_t)from_v216_to_ARGB<(PixelFormat)32,(AlphaOutputMethod)1>((unint64_t *)a2, a3, a4, a5, (int8x8_t *)v23, v22, a18, a19, a9, a10, *(double *)a11.i64, *(double *)a12.i64, *(double *)a13.i64, *(double *)a14.i64, a15, a16, a20);
      }
      else {
        this = (uint64_t)from_v216_to_ARGB<(PixelFormat)32,(AlphaOutputMethod)2>((uint64_t *)a2, a3, (int8x8_t *)v23, v22, a18, a19, a20);
      }
    }
    else if (v25 == 1111970369)
    {
      if (*(unsigned char *)(this + 12)) {
        this = (uint64_t)from_v216_to_ARGB<(PixelFormat)1111970369,(AlphaOutputMethod)1>((unint64_t *)a2, a3, a4, a5, (int8x8_t *)v23, v22, a18, a19, a9, a10, *(double *)a11.i64, *(double *)a12.i64, *(double *)a13.i64, *(double *)a14.i64, a15, a16, a20);
      }
      else {
        this = (uint64_t)from_v216_to_ARGB<(PixelFormat)1111970369,(AlphaOutputMethod)2>((uint64_t *)a2, a3, (int8x8_t *)v23, v22, a18, a19, a20);
      }
    }
    goto LABEL_2;
  }
  if (v25 > 1932812658)
  {
    if (v25 != 1932812659)
    {
      int v39 = 1937125938;
      goto LABEL_61;
    }
    goto LABEL_69;
  }
  if (v25 != 1848848434)
  {
    if (v25 != 1915892016 || a18 < 1) {
      goto LABEL_2;
    }
    if (a20 == 1)
    {
      float32x4_t v37 = (float32x4_t)xmmword_262D47610;
      float32x4_t v38 = (float32x4_t)xmmword_262D47620;
    }
    else if (a20 == 9)
    {
      float32x4_t v37 = (float32x4_t)xmmword_262D47630;
      float32x4_t v38 = (float32x4_t)xmmword_262D47640;
    }
    else
    {
      float32x4_t v37 = (float32x4_t)xmmword_262D47650;
      float32x4_t v38 = (float32x4_t)xmmword_262D47660;
    }
    if (a19 < 1) {
      goto LABEL_2;
    }
    int v59 = 0;
    float32x4_t v60 = (float32x4_t)vdupq_n_s32(0x3C957ABDu);
    v61.i64[0] = 0xFC00FC00FC00FC00;
    v61.i64[1] = 0xFC00FC00FC00FC00;
    float32x4_t v62 = v23;
LABEL_101:
    float32x4_t v63 = 0;
    a16.i64[0] = *(void *)a2;
    a16 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)a16, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
    int v64 = a18;
    float32x4_t v65 = v62;
    float32x4_t v66 = a2;
    while (1)
    {
      if (v64 < 3)
      {
        if (v63)
        {
          if (v64 == 1) {
            v63->n128_u32[0] = v113;
          }
          a2 += (int)a3;
          float32x4_t v62 = (__n128 *)((char *)v62 + v22);
          if (++v59 == a19) {
            goto LABEL_2;
          }
          goto LABEL_101;
        }
        uint64_t v107 = *(void *)v66;
        float32x4_t v63 = v65;
        if (v64 == 1) {
          float32x4_t v65 = (__n128 *)&v113;
        }
        v64 += 2;
        float32x4_t v66 = (unsigned __int8 *)&v106;
      }
      uint64_t v67 = *((void *)v66 + 1);
      v66 += 8;
      v21.i64[0] = v67;
      float32x4_t v21 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v21, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
      float32x4_t v68 = (float32x4_t)vzip2q_s32((int32x4_t)a16, (int32x4_t)vaddq_f32(a16, v21));
      float32x4_t v69 = (float32x4_t)vdupq_lane_s64(vmulq_f32(a16, v60).i64[0], 0);
      float32x4_t v70 = vaddq_f32(v69, vmulq_f32(v37, v68));
      float32x4_t v71 = vmulq_f32(v38, v68);
      int16x8_t v72 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v70)), vcvtnq_s32_f32(vaddq_f32(v69, vaddq_f32(v71, (float32x4_t)vdupq_laneq_s64((int64x2_t)v71, 1))))), (int16x8_t)0), v61);
      int32x4_t v73 = (int32x4_t)vzip1q_s16(v72, (int16x8_t)0);
      int32x4_t v74 = (int32x4_t)vrev16q_s8(vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32(v73, 0x14uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v72, (int16x8_t)0), 0xAuLL)), (int8x16_t)vdupq_laneq_s64((int64x2_t)v73, 1)));
      v65->n128_u64[0] = vorrq_s8((int8x16_t)vshlq_n_s32(v74, 0x10uLL), (int8x16_t)vshrq_n_u32((uint32x4_t)v74, 0x10uLL)).u64[0];
      float32x4_t v65 = (__n128 *)((char *)v65 + 8);
      v64 -= 2;
      a16 = v21;
    }
  }
  if (a18 >= 1)
  {
    if (a20 == 1)
    {
      float32x4_t v49 = (float32x4_t)xmmword_262D47610;
      float32x4_t v50 = (float32x4_t)xmmword_262D47620;
    }
    else if (a20 == 9)
    {
      float32x4_t v49 = (float32x4_t)xmmword_262D47630;
      float32x4_t v50 = (float32x4_t)xmmword_262D47640;
    }
    else
    {
      float32x4_t v49 = (float32x4_t)xmmword_262D47650;
      float32x4_t v50 = (float32x4_t)xmmword_262D47660;
    }
    if (a19 >= 1)
    {
      int v75 = 0;
      float32x4_t v76 = (float32x4_t)vdupq_n_s32(0x3C957ABDu);
      v77.i64[0] = 0xFC00FC00FC00FC00;
      v77.i64[1] = 0xFC00FC00FC00FC00;
      int16x8_t v78 = v23;
      do
      {
        int16x8_t v79 = 0;
        a16.i64[0] = *(void *)a2;
        a16 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)a16, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
        int v80 = a18;
        int16x8_t v81 = v78;
        int16x8_t v82 = a2;
        while (1)
        {
          if (v80 >= 3) {
            goto LABEL_119;
          }
          if (v79) {
            break;
          }
          uint64_t v107 = *(void *)v82;
          int16x8_t v79 = v81;
          if (v80 == 1) {
            int16x8_t v81 = (__n128 *)&v113;
          }
          v80 += 2;
          int16x8_t v82 = (unsigned __int8 *)&v106;
LABEL_119:
          uint64_t v83 = *((void *)v82 + 1);
          v82 += 8;
          v21.i64[0] = v83;
          float32x4_t v21 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v21, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
          float32x4_t v84 = (float32x4_t)vzip2q_s32((int32x4_t)a16, (int32x4_t)vaddq_f32(a16, v21));
          float32x4_t v85 = (float32x4_t)vdupq_lane_s64(vmulq_f32(a16, v76).i64[0], 0);
          float32x4_t v86 = vaddq_f32(v85, vmulq_f32(v49, v84));
          float32x4_t v87 = vmulq_f32(v50, v84);
          int16x8_t v88 = vminq_s16(vmaxq_s16(vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v86)), vcvtnq_s32_f32(vaddq_f32(v85, vaddq_f32(v87, (float32x4_t)vdupq_laneq_s64((int64x2_t)v87, 1))))), (int16x8_t)0), v77);
          int32x4_t v89 = (int32x4_t)vzip1q_s16(v88, (int16x8_t)0);
          v81->n128_u64[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32(v89, 0x16uLL), (int8x16_t)vshlq_n_s32((int32x4_t)vzip2q_s16(v88, (int16x8_t)0), 0xCuLL)), (int8x16_t)vdupq_laneq_s64((int64x2_t)vshlq_n_s32(v89, 2uLL), 1)).u64[0];
          int16x8_t v81 = (__n128 *)((char *)v81 + 8);
          v80 -= 2;
          a16 = v21;
        }
        if (v80 == 1) {
          v79->n128_u32[0] = v113;
        }
        a2 += (int)a3;
        int16x8_t v78 = (__n128 *)((char *)v78 + v22);
        ++v75;
      }
      while (v75 != a19);
    }
  }
LABEL_2:
  if (a21 && v24[2] == 2)
  {
    if (v25 == 1916036716)
    {
      if (a19 >= 1)
      {
        int v40 = a18 + 14;
        if (a18 >= 1) {
          int v40 = a18 - 1;
        }
        if (a18 >= 17)
        {
          int v41 = 0;
          int16x8_t v42 = (float32x2_t *)&v23[16].n128_i8[8];
          do
          {
            int16x8_t v43 = v42;
            int v44 = (v40 >> 4) + 1;
            do
            {
              v43[-2] = vmul_f32(vadd_f32(v43[-4], *v43), (float32x2_t)0x3F0000003F000000);
              --v44;
              v43 += 32;
            }
            while (v44 > 1);
            ++v41;
            int16x8_t v42 = (float32x2_t *)((char *)v42 + v22);
          }
          while (v41 != a19);
        }
      }
    }
    else if (v25 == 2033463606 && a19 >= 1)
    {
      if (a18 >= 1) {
        int v27 = a18 - 1;
      }
      else {
        int v27 = a18 + 14;
      }
      int v28 = a18 & 0xF;
      if (a18 < 17)
      {
        if ((a18 & 0xF) == 0)
        {
          int16x8_t v47 = &v23[7].n128_i8[14];
          int v48 = a19;
          do
          {
            *(_DWORD *)(v47 - 2) = *(_DWORD *)(v47 - 10);
            v47 += v22;
            --v48;
          }
          while (v48);
        }
      }
      else
      {
        int v29 = v27 >> 4;
        if ((a18 & 0xF) != 0)
        {
          int v30 = 0;
          int v31 = v29 + 1;
          float32x4_t v32 = &v23[8].n128_u16[3];
          do
          {
            float32x4_t v33 = v32;
            int v34 = v31;
            do
            {
              *(v33 - 5) = (*(v33 - 9) + *(v33 - 1) + 1) >> 1;
              *(v33 - 4) = (*(v33 - 8) + *v33 + 1) >> 1;
              --v34;
              v33 += 64;
            }
            while (v34 > 1);
            ++v30;
            float32x4_t v32 = (unsigned __int16 *)((char *)v32 + v22);
          }
          while (v30 != a19);
        }
        else
        {
          int v53 = v29 + 1;
          int32x4_t v54 = &v23[7].n128_u16[2];
          do
          {
            float32x4_t v55 = v54;
            int v56 = v53;
            do
            {
              v55[4] = (*v55 + v55[8] + 1) >> 1;
              v55[5] = (v55[1] + v55[9] + 1) >> 1;
              --v56;
              v55 += 64;
            }
            while (v56 > 1);
            *((_DWORD *)v55 + 2) = *(_DWORD *)v55;
            ++v28;
            int32x4_t v54 = (unsigned __int16 *)((char *)v54 + v22);
          }
          while (v28 != a19);
        }
      }
    }
  }
  uint64_t v57 = *(void *)v24;
  float32x4_t v58 = *(uint64_t (**)(__n128 **, unsigned __int8 *, uint64_t, unsigned __int8 *, uint64_t, unint64_t, uint64_t, unsigned __int8 *))(*(void *)v24 + 56);
  if (v58)
  {
    int16x8_t v106 = v23;
    LODWORD(v107) = a18;
    uint64_t v108 = v22;
    int16x8_t v109 = v23;
    uint64_t v111 = v22;
    int v110 = *(_DWORD *)(v57 + 40);
    int v112 = a19;
    return v58(&v106, a2, a3, a4, a5, a6, a7, a8);
  }
  return this;
}

unint64_t *from_v216_to_ARGB<(PixelFormat)32,(AlphaOutputMethod)1>(unint64_t *result, int a2, unsigned __int8 *a3, int a4, int8x8_t *a5, int a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, float32x4_t a16, int a17)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  if (a7 >= 1)
  {
    if (a17 != 1)
    {
      if (a17 == 9)
      {
        float32x4_t v18 = (float32x4_t)xmmword_262D476B0;
        float32x4_t v19 = (float32x4_t)xmmword_262D476C0;
        if (a8 < 1) {
          return result;
        }
      }
      else
      {
        float32x4_t v18 = (float32x4_t)xmmword_262D476D0;
        float32x4_t v19 = (float32x4_t)xmmword_262D476E0;
        if (a8 < 1) {
          return result;
        }
      }
      goto LABEL_9;
    }
    float32x4_t v18 = (float32x4_t)xmmword_262D47690;
    float32x4_t v19 = (float32x4_t)xmmword_262D476A0;
    if (a8 >= 1)
    {
LABEL_9:
      int v20 = 0;
      float32x4_t v21 = (float32x4_t)vdupq_n_s32(0x3B950A85u);
      do
      {
        int v22 = 0;
        int v35 = 0;
        a16.i64[0] = *result;
        a16 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)a16, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
        int v23 = a7;
        int16x8_t v24 = a5;
        int v25 = a3;
        float32x4_t v26 = result;
        while (1)
        {
          if (v23 >= 3) {
            goto LABEL_14;
          }
          if (v22) {
            break;
          }
          unint64_t v38 = *v26;
          if (v23 == 1)
          {
            int v35 = *v25;
            int v25 = (unsigned __int8 *)&v35;
            int v27 = (int8x8_t *)&v36;
          }
          else
          {
            int v27 = v24;
          }
          v23 += 2;
          float32x4_t v26 = (unint64_t *)&v37;
          int v22 = v24;
          int16x8_t v24 = v27;
LABEL_14:
          uint64_t v28 = v26[1];
          ++v26;
          v17.i64[0] = v28;
          float32x4_t v17 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v17, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
          float32x4_t v29 = (float32x4_t)vzip2q_s32((int32x4_t)a16, (int32x4_t)vaddq_f32(a16, v17));
          float32x4_t v30 = (float32x4_t)vdupq_lane_s64(vmulq_f32(a16, v21).i64[0], 0);
          float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v18, v29));
          float32x4_t v32 = vmulq_f32(v19, v29);
          int32x4_t v33 = vcvtnq_s32_f32(vaddq_f32(v30, vaddq_f32(v32, (float32x4_t)vdupq_laneq_s64((int64x2_t)v32, 1))));
          int16x8_t v34 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), v33);
          LODWORD(v28) = *(unsigned __int16 *)v25;
          v25 += 2;
          v33.i32[0] = v28;
          *v24++ = vqmovun_s16(vzip1q_s16(vzip2q_s16((int16x8_t)vdupq_lane_s64(vzip1q_s8((int8x16_t)v33, (int8x16_t)0).i64[0], 0), v34), (int16x8_t)vqtbl1q_s8((int8x16_t)v34, (int8x16_t)xmmword_262D476F0)));
          v23 -= 2;
          a16 = v17;
        }
        if (v23 == 1) {
          v22->i32[0] = v36;
        }
        int8x8_t result = (unint64_t *)((char *)result + a2);
        a5 = (int8x8_t *)((char *)a5 + a6);
        a3 += a4;
        ++v20;
      }
      while (v20 != a8);
    }
  }
  return result;
}

uint64_t *from_v216_to_ARGB<(PixelFormat)32,(AlphaOutputMethod)2>(uint64_t *result, int a2, int8x8_t *a3, int a4, int a5, int a6, int a7)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  if (a5 >= 1)
  {
    if (a7 != 1)
    {
      if (a7 == 9)
      {
        float32x4_t v9 = (float32x4_t)xmmword_262D476B0;
        float32x4_t v10 = (float32x4_t)xmmword_262D476C0;
        if (a6 < 1) {
          return result;
        }
      }
      else
      {
        float32x4_t v9 = (float32x4_t)xmmword_262D476D0;
        float32x4_t v10 = (float32x4_t)xmmword_262D476E0;
        if (a6 < 1) {
          return result;
        }
      }
      goto LABEL_9;
    }
    float32x4_t v9 = (float32x4_t)xmmword_262D47690;
    float32x4_t v10 = (float32x4_t)xmmword_262D476A0;
    if (a6 >= 1)
    {
LABEL_9:
      int v11 = 0;
      float32x4_t v12 = (float32x4_t)vdupq_n_s32(0x3B950A85u);
      v13.i64[0] = 0xFF00FF00FF00FFLL;
      v13.i64[1] = 0xFF00FF00FF00FFLL;
      do
      {
        float32x4_t v14 = 0;
        v7.i64[0] = *result;
        float32x4_t v7 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v7, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
        int v15 = a5;
        int8x16_t v16 = a3;
        float32x4_t v17 = result;
        while (1)
        {
          if (v15 >= 3) {
            goto LABEL_12;
          }
          if (v14) {
            break;
          }
          uint64_t v26 = *v17;
          float32x4_t v14 = v16;
          if (v15 == 1) {
            int8x16_t v16 = (int8x8_t *)&v24;
          }
          v15 += 2;
          float32x4_t v17 = (uint64_t *)&v25;
LABEL_12:
          uint64_t v18 = v17[1];
          ++v17;
          v8.i64[0] = v18;
          float32x4_t v8 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
          float32x4_t v19 = (float32x4_t)vzip2q_s32((int32x4_t)v7, (int32x4_t)vaddq_f32(v7, v8));
          float32x4_t v20 = (float32x4_t)vdupq_lane_s64(vmulq_f32(v7, v12).i64[0], 0);
          float32x4_t v21 = vaddq_f32(v20, vmulq_f32(v9, v19));
          float32x4_t v22 = vmulq_f32(v10, v19);
          int16x8_t v23 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v21)), vcvtnq_s32_f32(vaddq_f32(v20, vaddq_f32(v22, (float32x4_t)vdupq_laneq_s64((int64x2_t)v22, 1)))));
          *v16++ = vqmovun_s16(vzip1q_s16(vzip2q_s16(v13, v23), (int16x8_t)vqtbl1q_s8((int8x16_t)v23, (int8x16_t)xmmword_262D476F0)));
          v15 -= 2;
          float32x4_t v7 = v8;
        }
        if (v15 == 1) {
          v14->i32[0] = v24;
        }
        int8x8_t result = (uint64_t *)((char *)result + a2);
        a3 = (int8x8_t *)((char *)a3 + a4);
        ++v11;
      }
      while (v11 != a6);
    }
  }
  return result;
}

unint64_t *from_v216_to_ARGB<(PixelFormat)1111970369,(AlphaOutputMethod)1>(unint64_t *result, int a2, unsigned __int8 *a3, int a4, int8x8_t *a5, int a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, float32x4_t a16, int a17)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  if (a7 >= 1)
  {
    if (a17 != 1)
    {
      if (a17 == 9)
      {
        float32x4_t v18 = (float32x4_t)xmmword_262D476B0;
        float32x4_t v19 = (float32x4_t)xmmword_262D476C0;
        if (a8 < 1) {
          return result;
        }
      }
      else
      {
        float32x4_t v18 = (float32x4_t)xmmword_262D476D0;
        float32x4_t v19 = (float32x4_t)xmmword_262D476E0;
        if (a8 < 1) {
          return result;
        }
      }
      goto LABEL_9;
    }
    float32x4_t v18 = (float32x4_t)xmmword_262D47690;
    float32x4_t v19 = (float32x4_t)xmmword_262D476A0;
    if (a8 >= 1)
    {
LABEL_9:
      int v20 = 0;
      float32x4_t v21 = (float32x4_t)vdupq_n_s32(0x3B950A85u);
      do
      {
        float32x4_t v22 = 0;
        int v35 = 0;
        a16.i64[0] = *result;
        a16 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)a16, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
        int v23 = a7;
        __int32 v24 = a5;
        char v25 = a3;
        uint64_t v26 = result;
        while (1)
        {
          if (v23 >= 3) {
            goto LABEL_14;
          }
          if (v22) {
            break;
          }
          unint64_t v38 = *v26;
          if (v23 == 1)
          {
            int v35 = *v25;
            char v25 = (unsigned __int8 *)&v35;
            uint64_t v27 = (int8x8_t *)&v36;
          }
          else
          {
            uint64_t v27 = v24;
          }
          v23 += 2;
          uint64_t v26 = (unint64_t *)&v37;
          float32x4_t v22 = v24;
          __int32 v24 = v27;
LABEL_14:
          uint64_t v28 = v26[1];
          ++v26;
          v17.i64[0] = v28;
          float32x4_t v17 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v17, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
          float32x4_t v29 = (float32x4_t)vzip2q_s32((int32x4_t)a16, (int32x4_t)vaddq_f32(a16, v17));
          float32x4_t v30 = (float32x4_t)vdupq_lane_s64(vmulq_f32(a16, v21).i64[0], 0);
          float32x4_t v31 = vaddq_f32(v30, vmulq_f32(v18, v29));
          float32x4_t v32 = vmulq_f32(v19, v29);
          int32x4_t v33 = vcvtnq_s32_f32(vaddq_f32(v30, vaddq_f32(v32, (float32x4_t)vdupq_laneq_s64((int64x2_t)v32, 1))));
          int16x8_t v34 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v31)), v33);
          LODWORD(v28) = *(unsigned __int16 *)v25;
          v25 += 2;
          v33.i32[0] = v28;
          *v24++ = vqmovun_s16(vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v34, (int8x16_t)xmmword_262D47600), vzip2q_s16(v34, (int16x8_t)vdupq_lane_s64(vzip1q_s8((int8x16_t)v33, (int8x16_t)0).i64[0], 0))));
          v23 -= 2;
          a16 = v17;
        }
        if (v23 == 1) {
          v22->i32[0] = v36;
        }
        int8x8_t result = (unint64_t *)((char *)result + a2);
        a5 = (int8x8_t *)((char *)a5 + a6);
        a3 += a4;
        ++v20;
      }
      while (v20 != a8);
    }
  }
  return result;
}

uint64_t *from_v216_to_ARGB<(PixelFormat)1111970369,(AlphaOutputMethod)2>(uint64_t *result, int a2, int8x8_t *a3, int a4, int a5, int a6, int a7)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  if (a5 >= 1)
  {
    if (a7 != 1)
    {
      if (a7 == 9)
      {
        float32x4_t v9 = (float32x4_t)xmmword_262D476B0;
        float32x4_t v10 = (float32x4_t)xmmword_262D476C0;
        if (a6 < 1) {
          return result;
        }
      }
      else
      {
        float32x4_t v9 = (float32x4_t)xmmword_262D476D0;
        float32x4_t v10 = (float32x4_t)xmmword_262D476E0;
        if (a6 < 1) {
          return result;
        }
      }
      goto LABEL_9;
    }
    float32x4_t v9 = (float32x4_t)xmmword_262D47690;
    float32x4_t v10 = (float32x4_t)xmmword_262D476A0;
    if (a6 >= 1)
    {
LABEL_9:
      int v11 = 0;
      float32x4_t v12 = (float32x4_t)vdupq_n_s32(0x3B950A85u);
      v13.i64[0] = 0xFF00FF00FF00FFLL;
      v13.i64[1] = 0xFF00FF00FF00FFLL;
      do
      {
        float32x4_t v14 = 0;
        v7.i64[0] = *result;
        float32x4_t v7 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v7, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
        int v15 = a5;
        int8x16_t v16 = a3;
        float32x4_t v17 = result;
        while (1)
        {
          if (v15 >= 3) {
            goto LABEL_12;
          }
          if (v14) {
            break;
          }
          uint64_t v26 = *v17;
          float32x4_t v14 = v16;
          if (v15 == 1) {
            int8x16_t v16 = (int8x8_t *)&v24;
          }
          v15 += 2;
          float32x4_t v17 = (uint64_t *)&v25;
LABEL_12:
          uint64_t v18 = v17[1];
          ++v17;
          v8.i64[0] = v18;
          float32x4_t v8 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
          float32x4_t v19 = (float32x4_t)vzip2q_s32((int32x4_t)v7, (int32x4_t)vaddq_f32(v7, v8));
          float32x4_t v20 = (float32x4_t)vdupq_lane_s64(vmulq_f32(v7, v12).i64[0], 0);
          float32x4_t v21 = vaddq_f32(v20, vmulq_f32(v9, v19));
          float32x4_t v22 = vmulq_f32(v10, v19);
          int16x8_t v23 = vqmovn_high_s32(vqmovn_s32(vcvtnq_s32_f32(v21)), vcvtnq_s32_f32(vaddq_f32(v20, vaddq_f32(v22, (float32x4_t)vdupq_laneq_s64((int64x2_t)v22, 1)))));
          *v16++ = vqmovun_s16(vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v23, (int8x16_t)xmmword_262D47600), vzip2q_s16(v23, v13)));
          v15 -= 2;
          float32x4_t v7 = v8;
        }
        if (v15 == 1) {
          v14->i32[0] = v24;
        }
        int8x8_t result = (uint64_t *)((char *)result + a2);
        a3 = (int8x8_t *)((char *)a3 + a4);
        ++v11;
      }
      while (v11 != a6);
    }
  }
  return result;
}

uint64_t *from_v216_to_ARGB<(PixelFormat)1647719521,(AlphaOutputMethod)1>(uint64_t *result, int a2, int *a3, int a4, int8x16_t *a5, int a6, int a7, int a8, int a9)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  if (a7 >= 1)
  {
    if (a9 != 1)
    {
      if (a9 == 9)
      {
        float32x4_t v11 = (float32x4_t)xmmword_262D47720;
        float32x4_t v12 = (float32x4_t)xmmword_262D47730;
        if (a8 < 1) {
          return result;
        }
      }
      else
      {
        float32x4_t v11 = (float32x4_t)xmmword_262D47740;
        float32x4_t v12 = (float32x4_t)xmmword_262D47750;
        if (a8 < 1) {
          return result;
        }
      }
      goto LABEL_9;
    }
    float32x4_t v11 = (float32x4_t)xmmword_262D47700;
    float32x4_t v12 = (float32x4_t)xmmword_262D47710;
    if (a8 >= 1)
    {
LABEL_9:
      int v13 = 0;
      float32x4_t v14 = (float32x4_t)vdupq_n_s32(0x3F959F90u);
      v15.i64[0] = 0x7F0000007FLL;
      v15.i64[1] = 0x7F0000007FLL;
      v16.i64[0] = 0x8000800080008000;
      v16.i64[1] = 0x8000800080008000;
      do
      {
        float32x4_t v17 = 0;
        int v31 = 0;
        v9.i64[0] = *result;
        float32x4_t v9 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v9, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
        int v18 = a7;
        float32x4_t v19 = a5;
        float32x4_t v20 = a3;
        float32x4_t v21 = result;
        while (1)
        {
          if (v18 >= 3) {
            goto LABEL_14;
          }
          if (v17) {
            break;
          }
          uint64_t v34 = *v21;
          if (v18 == 1)
          {
            int v31 = *(unsigned __int16 *)v20;
            float32x4_t v20 = &v31;
            float32x4_t v22 = (int8x16_t *)&v32;
          }
          else
          {
            float32x4_t v22 = v19;
          }
          v18 += 2;
          float32x4_t v21 = (uint64_t *)&v33;
          float32x4_t v17 = (uint64_t *)v19;
          float32x4_t v19 = v22;
LABEL_14:
          uint64_t v23 = v21[1];
          ++v21;
          v10.i64[0] = v23;
          float32x4_t v10 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v10, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
          float32x4_t v24 = (float32x4_t)vzip2q_s32((int32x4_t)v9, (int32x4_t)vaddq_f32(v9, v10));
          float32x4_t v25 = (float32x4_t)vdupq_lane_s64(vmulq_f32(v9, v14).i64[0], 0);
          float32x4_t v26 = vaddq_f32(v25, vmulq_f32(v11, v24));
          float32x4_t v27 = vmulq_f32(v12, v24);
          int32x4_t v28 = vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v25, vaddq_f32(v27, (float32x4_t)vdupq_laneq_s64((int64x2_t)v27, 1)))), v15);
          int8x16_t v29 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(v26), v15)), v28);
          LODWORD(v23) = *v20++;
          v28.i32[0] = v23;
          int16x8_t v30 = (int16x8_t)veorq_s8(v29, v16);
          *v19++ = vrev16q_s8((int8x16_t)vzip1q_s16(vzip2q_s16((int16x8_t)vdupq_lane_s64(v28.i64[0], 0), v30), (int16x8_t)vqtbl1q_s8((int8x16_t)v30, (int8x16_t)xmmword_262D476F0)));
          v18 -= 2;
          float32x4_t v9 = v10;
        }
        if (v18 == 1) {
          uint64_t *v17 = v32;
        }
        int8x8_t result = (uint64_t *)((char *)result + a2);
        a5 = (int8x16_t *)((char *)a5 + a6);
        a3 = (int *)((char *)a3 + a4);
        ++v13;
      }
      while (v13 != a8);
    }
  }
  return result;
}

uint64_t *from_v216_to_ARGB<(PixelFormat)1647719521,(AlphaOutputMethod)2>(uint64_t *result, int a2, int8x16_t *a3, int a4, int a5, int a6, int a7)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  if (a5 >= 1)
  {
    if (a7 != 1)
    {
      if (a7 == 9)
      {
        float32x4_t v9 = (float32x4_t)xmmword_262D47720;
        float32x4_t v10 = (float32x4_t)xmmword_262D47730;
        if (a6 < 1) {
          return result;
        }
      }
      else
      {
        float32x4_t v9 = (float32x4_t)xmmword_262D47740;
        float32x4_t v10 = (float32x4_t)xmmword_262D47750;
        if (a6 < 1) {
          return result;
        }
      }
      goto LABEL_9;
    }
    float32x4_t v9 = (float32x4_t)xmmword_262D47700;
    float32x4_t v10 = (float32x4_t)xmmword_262D47710;
    if (a6 >= 1)
    {
LABEL_9:
      int v11 = 0;
      float32x4_t v12 = (float32x4_t)vdupq_n_s32(0x3F959F90u);
      v13.i64[0] = 0x7F0000007FLL;
      v13.i64[1] = 0x7F0000007FLL;
      v14.i64[0] = 0x8000800080008000;
      v14.i64[1] = 0x8000800080008000;
      v15.i64[0] = -1;
      v15.i64[1] = -1;
      do
      {
        int8x16_t v16 = 0;
        v7.i64[0] = *result;
        float32x4_t v7 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v7, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
        int v17 = a5;
        int v18 = a3;
        float32x4_t v19 = result;
        while (1)
        {
          if (v17 >= 3) {
            goto LABEL_12;
          }
          if (v16) {
            break;
          }
          uint64_t v28 = *v19;
          int8x16_t v16 = (uint64_t *)v18;
          if (v17 == 1) {
            int v18 = (int8x16_t *)&v26;
          }
          v17 += 2;
          float32x4_t v19 = (uint64_t *)&v27;
LABEL_12:
          uint64_t v20 = v19[1];
          ++v19;
          v8.i64[0] = v20;
          float32x4_t v8 = vcvtq_f32_s32(vaddq_s32((int32x4_t)vzip1q_s16((int16x8_t)vqtbl1q_s8((int8x16_t)v8, (int8x16_t)xmmword_262D47670), (int16x8_t)0), (int32x4_t)xmmword_262D47680));
          float32x4_t v21 = (float32x4_t)vzip2q_s32((int32x4_t)v7, (int32x4_t)vaddq_f32(v7, v8));
          float32x4_t v22 = (float32x4_t)vdupq_lane_s64(vmulq_f32(v7, v12).i64[0], 0);
          float32x4_t v23 = vmulq_f32(v9, v21);
          float32x4_t v24 = vmulq_f32(v10, v21);
          int16x8_t v25 = (int16x8_t)veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v22, v23)), v13)), vaddq_s32(vcvtnq_s32_f32(vaddq_f32(v22, vaddq_f32(v24, (float32x4_t)vdupq_laneq_s64((int64x2_t)v24, 1)))), v13)), v14);
          *v18++ = vrev16q_s8((int8x16_t)vzip1q_s16(vzip2q_s16(v15, v25), (int16x8_t)vqtbl1q_s8((int8x16_t)v25, (int8x16_t)xmmword_262D476F0)));
          v17 -= 2;
          float32x4_t v7 = v8;
        }
        if (v17 == 1) {
          uint64_t *v16 = v26;
        }
        int8x8_t result = (uint64_t *)((char *)result + a2);
        a3 = (int8x16_t *)((char *)a3 + a4);
        ++v11;
      }
      while (v11 != a6);
    }
  }
  return result;
}

_DWORD *from_422_to_AYUV_UYVY_WxH<(PixelFormat)846624121,(AlphaOutputMethod)0>(_DWORD *result, unsigned __int16 *a2, int a3, int a4, unsigned int a5, int a6, double a7, double a8, double a9, int16x8_t a10)
{
  if (a5 == 1) {
    int v10 = 1;
  }
  else {
    int v10 = 2;
  }
  if (a6 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a6 * a5;
    uint64_t v13 = (4 * v12);
    uint64_t v14 = v12;
    int v15 = a4 & ~(a4 >> 31);
    if (a5 == 1)
    {
      uint64_t v16 = 0;
      uint64_t v17 = v13;
      uint64_t v18 = v17 * 2 + v14 * 2;
      uint64_t v19 = v14 * 2;
      int v20 = a6;
      do
      {
        if (!v15) {
          break;
        }
        a10.i16[0] = a2[v17];
        a10.i16[1] = a2[v16];
        a10.i16[2] = *(unsigned __int16 *)((char *)a2 + v18);
        a10.i16[3] = *(unsigned __int16 *)((char *)a2 + v19);
        *(int8x8_t *)a10.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(*(int16x4_t *)a10.i8, (int16x4_t)0x7E007E007E007ELL), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
        *int8x8_t result = vmovn_s16(a10).u32[0];
        int8x8_t result = (_DWORD *)((char *)result + a3);
        --v15;
        v18 += 2;
        ++v17;
        v19 += 2;
        ++v16;
        --v20;
      }
      while (v20);
      float32x4_t v21 = (unsigned __int16 *)((char *)a2 + v18);
      float32x4_t v22 = (unsigned __int16 *)((char *)a2 + v19);
      if (a6 <= a4) {
        int v23 = a4;
      }
      else {
        int v23 = a6;
      }
      int v24 = v23 - a6;
      do
      {
        if (!v24) {
          break;
        }
        int16x8_t v25 = &v22[v14];
        a10.i16[0] = *v21;
        a10.i16[1] = *v22++;
        a10.i16[2] = v21[v14];
        a10.i16[3] = *v25;
        *(int8x8_t *)a10.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(*(int16x4_t *)a10.i8, (int16x4_t)0x7E007E007E007ELL), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
        *int8x8_t result = vmovn_s16(a10).u32[0];
        ++v21;
        int8x8_t result = (_DWORD *)((char *)result + a3);
        --v24;
        --a6;
      }
      while (a6);
    }
    else
    {
      int v26 = 0;
      char v27 = &a2[v13];
      uint64_t v28 = &v27[v14];
      uint64_t v29 = &a2[v14];
      uint64_t v30 = 2 * a5;
      do
      {
        if (v26 == v15) {
          break;
        }
        unsigned __int16 v31 = *v27++;
        a10.i16[0] = v31;
        a10.i16[1] = *a2;
        a10.i16[2] = *v28++;
        a10.i16[3] = a2[1];
        *(int8x8_t *)a10.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(*(int16x4_t *)a10.i8, (int16x4_t)0x7E007E007E007ELL), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
        *int8x8_t result = vmovn_s16(a10).u32[0];
        uint64_t v32 = 1;
        int v33 = v10 - 1;
        do
        {
          unsigned __int16 v34 = *v27++;
          a10.i16[0] = v34;
          a10.i16[1] = *v29;
          a10.i16[2] = *v28++;
          a10.i16[3] = v29[1];
          *(int8x8_t *)a10.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(*(int16x4_t *)a10.i8, (int16x4_t)0x7E007E007E007ELL), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
          result[v32++] = vmovn_s16(a10).u32[0];
          --v33;
        }
        while (v33);
        int8x8_t result = (_DWORD *)((char *)result + v11);
        a2 = (unsigned __int16 *)((char *)a2 + v30);
        uint64_t v29 = (unsigned __int16 *)((char *)v29 + v30);
        ++v26;
      }
      while (v26 != a6);
      int v35 = 0;
      __int32 v36 = &v28[v14];
      char v37 = &v29[v14];
      if (a6 <= a4) {
        int v38 = a4;
      }
      else {
        int v38 = a6;
      }
      int v39 = v38 - a6;
      do
      {
        if (v35 == v39) {
          break;
        }
        unsigned __int16 v40 = *v28++;
        a10.i16[0] = v40;
        a10.i16[1] = *v29;
        a10.i16[2] = *v36++;
        a10.i16[3] = v29[1];
        *(int8x8_t *)a10.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(*(int16x4_t *)a10.i8, (int16x4_t)0x7E007E007E007ELL), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
        *int8x8_t result = vmovn_s16(a10).u32[0];
        uint64_t v41 = 1;
        do
        {
          unsigned __int16 v42 = *v28++;
          a10.i16[0] = v42;
          a10.i16[1] = *v37;
          a10.i16[2] = *v36++;
          a10.i16[3] = v37[1];
          *(int8x8_t *)a10.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(*(int16x4_t *)a10.i8, (int16x4_t)0x7E007E007E007ELL), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
          result[v41++] = vmovn_s16(a10).u32[0];
        }
        while (v10 != v41);
        int8x8_t result = (_DWORD *)((char *)result + v11);
        uint64_t v29 = (unsigned __int16 *)((char *)v29 + v30);
        char v37 = (unsigned __int16 *)((char *)v37 + v30);
        ++v35;
      }
      while (v35 != a6);
    }
  }
  return result;
}

int8x16_t from_422_to_y408_r408_4xH<false,(AlphaOutputMethod)1,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, unsigned int a7, int8x16_t result)
{
  uint64_t v8 = a7 >> 1;
  uint64_t v9 = (4 * v8);
  uint64_t v10 = (6 * v8);
  uint64_t v11 = a5 + (8 * a6);
  uint64_t v12 = 8 / a7 * a6;
  int v13 = a4 - a7;
  if (a4 <= (int)a7) {
    int v14 = 0;
  }
  else {
    int v14 = a4 - a7;
  }
  int v15 = a4 - v14;
  if (v14 < 2)
  {
    uint64_t v64 = a7 >> 1;
    int v56 = &a2[v64];
    float32x4_t v63 = &a2[a7 & 0xFFFFFFFE];
    uint64_t v57 = &v63[v64];
    float32x4_t v58 = &a2[v9];
    int v59 = &v58[v64];
    float32x4_t v60 = &a2[v10];
    int16x8_t v61 = &v60[v64];
    float32x4_t v62 = (__int16 *)((char *)a1->i16 + (int)a7 * (uint64_t)a3);
    if (!(v15 + v14)) {
      return result;
    }
  }
  else
  {
    uint64_t v16 = (int)a7 * (uint64_t)a3;
    uint64_t v17 = (2 * v12);
    uint64_t v18 = v8;
    uint64_t v19 = v9;
    uint64_t v20 = v10;
    uint64_t v21 = 16 * v8 + 16 * v10;
    uint64_t v22 = a3 + 16;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    int v14 = v13;
    do
    {
      int32x4_t v24 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[v8]);
      int8x16_t v25 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v19]), a2[v8 + v19]), result);
      int8x16_t v26 = vzip1q_s8(v25, v25);
      int8x16_t v27 = vzip2q_s8(v25, v25);
      v28.i16[0] = *(_OWORD *)a5;
      v28.i16[1] = BYTE2(*(_OWORD *)a5);
      v28.i16[2] = BYTE4(*(void *)a5);
      v28.i16[3] = BYTE6(*(void *)a5);
      v28.i16[4] = *(void *)(a5 + 8);
      v28.i16[5] = BYTE2(*(void *)(a5 + 8));
      v28.i16[6] = BYTE12(*(_OWORD *)a5);
      v28.i16[7] = BYTE14(*(_OWORD *)a5);
      v29.i16[0] = *(_OWORD *)(a5 + v12);
      v29.i16[1] = BYTE2(*(_OWORD *)(a5 + v12));
      v29.i16[2] = BYTE4(*(void *)(a5 + v12));
      v29.i16[3] = BYTE6(*(void *)(a5 + v12));
      v29.i16[4] = *(void *)(a5 + v12 + 8);
      v29.i16[5] = BYTE2(*(void *)(a5 + v12 + 8));
      v29.i16[6] = BYTE12(*(_OWORD *)(a5 + v12));
      v29.i16[7] = BYTE14(*(_OWORD *)(a5 + v12));
      int8x16_t v30 = vqmovun_high_s16(vqmovun_s16(v28), v29);
      int8x16_t v31 = veorq_s8((int8x16_t)vuzp1q_s32(v24, vrev64q_s32(v24)), result);
      int16x4x2_t v32 = (int16x4x2_t)vzip1q_s8(v30, v31);
      int16x8_t v33 = (int16x8_t)vzip1q_s8(v26, v27);
      unsigned __int16 v34 = (__int16 *)a1;
      vst2_s16(v34, v32);
      uint64_t v23 = v22 + v16;
      int v35 = (int16x8_t *)((char *)v34 + v23);
      a1[1] = vzip2q_s16((int16x8_t)v32, v33);
      int16x4x2_t v36 = (int16x4x2_t)vzip2q_s8(v30, v31);
      int16x8_t v37 = (int16x8_t)vzip2q_s8(v26, v27);
      int v38 = (__int16 *)((char *)a1->i16 + a3);
      vst2_s16(v38, v36);
      *(int16x8_t *)((char *)a1 + v22) = vzip2q_s16((int16x8_t)v36, v37);
      int16x8_t v39 = a2[2 * v8];
      int16x8_t v40 = a2[3 * v8];
      int16x8_t v41 = a2[v20];
      unsigned int v42 = v14;
      int16x8_t v43 = *(int16x8_t *)((char *)a2++ + v21);
      int v44 = (__int16 *)((char *)a1->i16 + v16);
      a1 = (int16x8_t *)((char *)a1 + 2 * a3);
      v15 -= 2;
      int32x4_t v45 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(v39), v40);
      int8x16_t v46 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v41), v43), result);
      int8x16_t v47 = vzip1q_s8(v46, v46);
      int8x16_t v48 = vzip2q_s8(v46, v46);
      v37.i16[0] = *(_OWORD *)v11;
      v37.i16[1] = BYTE2(*(_OWORD *)v11);
      v37.i16[2] = BYTE4(*(void *)v11);
      v37.i16[3] = BYTE6(*(void *)v11);
      v37.i16[4] = *(void *)(v11 + 8);
      v37.i16[5] = BYTE2(*(void *)(v11 + 8));
      v37.i16[6] = BYTE12(*(_OWORD *)v11);
      v37.i16[7] = BYTE14(*(_OWORD *)v11);
      v43.i16[0] = *(_OWORD *)(v11 + v12);
      v43.i16[1] = BYTE2(*(_OWORD *)(v11 + v12));
      v43.i16[2] = BYTE4(*(void *)(v11 + v12));
      v43.i16[3] = BYTE6(*(void *)(v11 + v12));
      v43.i16[4] = *(void *)(v11 + v12 + 8);
      v43.i16[5] = BYTE2(*(void *)(v11 + v12 + 8));
      v43.i16[6] = BYTE12(*(_OWORD *)(v11 + v12));
      v43.i16[7] = BYTE14(*(_OWORD *)(v11 + v12));
      int8x16_t v49 = vqmovun_high_s16(vqmovun_s16(v37), v43);
      int8x16_t v50 = veorq_s8((int8x16_t)vuzp1q_s32(v45, vrev64q_s32(v45)), result);
      int16x4x2_t v51 = (int16x4x2_t)vzip1q_s8(v49, v50);
      int16x8_t v52 = (int16x8_t)vzip1q_s8(v47, v48);
      vst2_s16(v44, v51);
      v44 += 8;
      *(int16x8_t *)int v44 = vzip2q_s16((int16x8_t)v51, v52);
      int16x4x2_t v53 = (int16x4x2_t)vzip2q_s8(v49, v50);
      int16x8_t v54 = (int16x8_t)vzip2q_s8(v47, v48);
      i16 = v35[-1].i16;
      vst2_s16(i16, v53);
      a5 += v17;
      int16x8_t *v35 = vzip2q_s16((int16x8_t)v53, v54);
      int v14 = v42 - 2;
      v11 += v17;
    }
    while (v42 > 3);
    int v56 = &a2[v18];
    uint64_t v57 = &a2[3 * v8];
    float32x4_t v58 = &a2[v19];
    int v59 = &a2[v18 + v19];
    float32x4_t v60 = &a2[v20];
    int16x8_t v61 = &a2[v18 + v20];
    float32x4_t v62 = (__int16 *)((char *)a1->i16 + v16);
    float32x4_t v63 = &a2[2 * v8];
    if (!(v15 + v14)) {
      return result;
    }
  }
  if (v14 >= 1)
  {
    int64x2_t v65 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*v63), *v57);
    *(int32x2_t *)v65.i8 = vmovn_s64(v65);
    v66.i64[0] = 0x8080808080808080;
    v66.i64[1] = 0x8080808080808080;
    int8x16_t v67 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v60), *v61), v66);
    v68.i16[0] = *(_OWORD *)v11;
    v68.i16[1] = BYTE2(*(_OWORD *)v11);
    v68.i16[2] = BYTE4(*(void *)v11);
    v68.i16[3] = BYTE6(*(void *)v11);
    v68.i16[4] = *(void *)(v11 + 8);
    v68.i16[5] = BYTE2(*(void *)(v11 + 8));
    v68.i16[6] = BYTE12(*(_OWORD *)v11);
    v68.i16[7] = BYTE14(*(_OWORD *)v11);
    *(int8x8_t *)v68.i8 = vqmovun_s16(v68);
    int16x4x2_t v69 = (int16x4x2_t)vzip1q_s8((int8x16_t)v68, veorq_s8((int8x16_t)v65, v66));
    int16x8_t v70 = (int16x8_t)vzip1q_s8(vzip1q_s8(v67, v67), vzip2q_s8(v67, v67));
    vst2_s16(v62, v69);
    float32x4_t v71 = (int16x8_t *)(v62 + 8);
    int8x8_t result = (int8x16_t)vzip2q_s16((int16x8_t)v69, v70);
    *float32x4_t v71 = (int16x8_t)result;
  }
  if (v15 > 1)
  {
    uint64_t v72 = 0;
    uint64_t v73 = 2 * a3;
    uint64_t v74 = a3 + 16;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    int v75 = (__int16 *)a1;
    do
    {
      unsigned int v76 = v15;
      int32x4_t v77 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v72]), v56[v72]);
      int8x16_t v78 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v58[v72]), v59[v72]), result);
      int8x16_t v79 = vzip1q_s8(v78, v78);
      int8x16_t v80 = vzip2q_s8(v78, v78);
      v81.i16[0] = *(_OWORD *)a5;
      v81.i16[1] = BYTE2(*(_OWORD *)a5);
      v81.i16[2] = BYTE4(*(void *)a5);
      v81.i16[3] = BYTE6(*(void *)a5);
      v81.i16[4] = *(void *)(a5 + 8);
      v81.i16[5] = BYTE2(*(void *)(a5 + 8));
      v81.i16[6] = BYTE12(*(_OWORD *)a5);
      v81.i16[7] = BYTE14(*(_OWORD *)a5);
      v82.i16[0] = *(_OWORD *)(a5 + v12);
      v82.i16[1] = BYTE2(*(_OWORD *)(a5 + v12));
      v82.i16[2] = BYTE4(*(void *)(a5 + v12));
      v82.i16[3] = BYTE6(*(void *)(a5 + v12));
      v82.i16[4] = *(void *)(a5 + v12 + 8);
      v82.i16[5] = BYTE2(*(void *)(a5 + v12 + 8));
      v82.i16[6] = BYTE12(*(_OWORD *)(a5 + v12));
      v82.i16[7] = BYTE14(*(_OWORD *)(a5 + v12));
      int8x16_t v83 = vqmovun_high_s16(vqmovun_s16(v81), v82);
      int8x16_t v84 = veorq_s8((int8x16_t)vuzp1q_s32(v77, vrev64q_s32(v77)), result);
      int16x4x2_t v85 = (int16x4x2_t)vzip1q_s8(v83, v84);
      int16x8_t v86 = (int16x8_t)vzip1q_s8(v79, v80);
      vst2_s16(v75, v85);
      int v75 = (__int16 *)((char *)v75 + v73);
      a1[1] = vzip2q_s16((int16x8_t)v85, v86);
      int16x4x2_t v87 = (int16x4x2_t)vzip2q_s8(v83, v84);
      int16x8_t v88 = (int16x8_t)vzip2q_s8(v79, v80);
      int32x4_t v89 = (int16x8_t *)((char *)a1 + v74);
      int v90 = (__int16 *)((char *)a1[-1].i16 + v74);
      vst2_s16(v90, v87);
      a1 = (int16x8_t *)v75;
      *int32x4_t v89 = vzip2q_s16((int16x8_t)v87, v88);
      int v15 = v76 - 2;
      a5 += (2 * v12);
      ++v72;
    }
    while (v76 > 3);
    a2 = (int16x8_t *)((char *)a2 + v72 * 16);
    int v56 = (int16x8_t *)((char *)v56 + v72 * 16);
    float32x4_t v58 = (int16x8_t *)((char *)v58 + v72 * 16);
    int v59 = (int16x8_t *)((char *)v59 + v72 * 16);
  }
  if (v15 == 1)
  {
    int64x2_t v91 = (int64x2_t)vqmovn_high_s16(vqmovn_s16(*a2), *v56);
    *(int32x2_t *)v91.i8 = vmovn_s64(v91);
    v92.i64[0] = 0x8080808080808080;
    v92.i64[1] = 0x8080808080808080;
    int8x16_t v93 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v58), *v59), v92);
    v94.i16[0] = *(_OWORD *)a5;
    v94.i16[1] = BYTE2(*(_OWORD *)a5);
    v94.i16[2] = BYTE4(*(void *)a5);
    v94.i16[3] = BYTE6(*(void *)a5);
    v94.i16[4] = *(void *)(a5 + 8);
    v94.i16[5] = BYTE2(*(void *)(a5 + 8));
    v94.i16[6] = BYTE12(*(_OWORD *)a5);
    v94.i16[7] = BYTE14(*(_OWORD *)a5);
    *(int8x8_t *)v94.i8 = vqmovun_s16(v94);
    int16x4x2_t v95 = (int16x4x2_t)vzip1q_s8((int8x16_t)v94, veorq_s8((int8x16_t)v91, v92));
    int16x8_t v96 = (int16x8_t)vzip1q_s8(vzip1q_s8(v93, v93), vzip2q_s8(v93, v93));
    vst2_s16(a1->i16, v95);
    float32x4_t v97 = a1 + 1;
    int8x8_t result = (int8x16_t)vzip2q_s16((int16x8_t)v95, v96);
    *float32x4_t v97 = (int16x8_t)result;
  }
  return result;
}

unsigned char *from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(unsigned char *result, __int16 *a2, int a3, int a4, unsigned char *a5, int a6, int a7, int a8)
{
  if (a8 >= 1 && a7 >= 1)
  {
    int v8 = 0;
    uint64_t v9 = (a8 * a7);
    uint64_t v10 = 8u / a8 * a6;
    uint64_t v11 = &a2[(4 * v9)];
    uint64_t v12 = v9;
    int v13 = &v11[v9];
    int v14 = &a2[v12];
    uint64_t v15 = 2 * a7;
    uint64_t v16 = 8u / a7;
    do
    {
      if (v8 == (a4 & ~(a4 >> 31))) {
        break;
      }
      if (a7 == 1)
      {
        uint64_t v17 = result + 4;
        int v18 = *a2;
        int v19 = *v11;
        int v20 = *v13;
        *int8x8_t result = *a5;
        if (v18 >= 127) {
          int v21 = 127;
        }
        else {
          int v21 = v18;
        }
        if (v21 <= -128) {
          LOBYTE(v21) = 0x80;
        }
        result[1] = v21 ^ 0x80;
        if (v19 >= 127) {
          int v22 = 127;
        }
        else {
          int v22 = v19;
        }
        if (v22 <= -128) {
          LOBYTE(v22) = 0x80;
        }
        result[2] = v22 ^ 0x80;
        if (v20 >= 127) {
          int v23 = 127;
        }
        else {
          int v23 = v20;
        }
        if (v23 <= -128) {
          LOBYTE(v23) = 0x80;
        }
        result[3] = v23 ^ 0x80;
        int32x4_t v24 = &a5[v16];
      }
      else
      {
        uint64_t v25 = 0;
        int32x4_t v24 = a5;
        uint64_t v17 = result;
        do
        {
          int v26 = a2[v25];
          int v27 = *v11;
          int v28 = *v13;
          unsigned char *v17 = *v24;
          if (v26 >= 127) {
            int v26 = 127;
          }
          if (v26 <= -128) {
            LOBYTE(v26) = 0x80;
          }
          v17[1] = v26 ^ 0x80;
          if (v27 >= 127) {
            int v29 = 127;
          }
          else {
            int v29 = v27;
          }
          if (v29 <= -128) {
            LOBYTE(v29) = 0x80;
          }
          CFTypeRef v17[2] = v29 ^ 0x80;
          if (v28 >= 127) {
            int v30 = 127;
          }
          else {
            int v30 = v28;
          }
          if (v30 <= -128) {
            LOBYTE(v30) = 0x80;
          }
          v17[3] = v30 ^ 0x80;
          v17 += 4;
          v24 += v16;
          uint64_t v31 = 2 * (v25 & 1);
          uint64_t v11 = (__int16 *)((char *)v11 + v31);
          int v13 = (__int16 *)((char *)v13 + v31);
          ++v25;
        }
        while (a7 != v25);
      }
      uint64_t v32 = 0;
      do
      {
        int v33 = v14[v32];
        int v34 = *v11;
        int v35 = *v13;
        unsigned char *v17 = *v24;
        if (v33 >= 127) {
          int v36 = 127;
        }
        else {
          int v36 = v33;
        }
        if (v36 <= -128) {
          LOBYTE(v36) = 0x80;
        }
        v17[1] = v36 ^ 0x80;
        if (v34 >= 127) {
          int v37 = 127;
        }
        else {
          int v37 = v34;
        }
        if (v37 <= -128) {
          LOBYTE(v37) = 0x80;
        }
        CFTypeRef v17[2] = v37 ^ 0x80;
        if (v35 >= 127) {
          int v38 = 127;
        }
        else {
          int v38 = v35;
        }
        if (v38 <= -128) {
          LOBYTE(v38) = 0x80;
        }
        v17[3] = v38 ^ 0x80;
        v24 += v16;
        uint64_t v39 = 2 * ((a7 == 1) | (v32 & 1));
        uint64_t v11 = (__int16 *)((char *)v11 + v39);
        int v13 = (__int16 *)((char *)v13 + v39);
        ++v32;
        v17 += 4;
      }
      while (a7 != v32);
      result += a3;
      a5 += v10;
      a2 = (__int16 *)((char *)a2 + v15);
      int v14 = (__int16 *)((char *)v14 + v15);
      ++v8;
    }
    while (v8 != a8);
    int v40 = 0;
    int16x8_t v41 = &v13[v12];
    unsigned int v42 = &v14[v12];
    if (a8 <= a4) {
      int v43 = a4;
    }
    else {
      int v43 = a8;
    }
    int v44 = v43 - a8;
    do
    {
      if (v40 == v44) {
        break;
      }
      if (a7 == 1)
      {
        int32x4_t v45 = result + 4;
        int v46 = *v14;
        int v47 = *v13;
        int v48 = *v41;
        *int8x8_t result = *a5;
        if (v46 >= 127) {
          int v49 = 127;
        }
        else {
          int v49 = v46;
        }
        if (v49 <= -128) {
          LOBYTE(v49) = 0x80;
        }
        result[1] = v49 ^ 0x80;
        if (v47 >= 127) {
          int v50 = 127;
        }
        else {
          int v50 = v47;
        }
        if (v50 <= -128) {
          LOBYTE(v50) = 0x80;
        }
        result[2] = v50 ^ 0x80;
        if (v48 >= 127) {
          int v51 = 127;
        }
        else {
          int v51 = v48;
        }
        if (v51 <= -128) {
          LOBYTE(v51) = 0x80;
        }
        result[3] = v51 ^ 0x80;
        int16x8_t v52 = &a5[v16];
      }
      else
      {
        uint64_t v53 = 0;
        int16x8_t v52 = a5;
        int32x4_t v45 = result;
        do
        {
          int v54 = v14[v53];
          int v55 = *v13;
          int v56 = *v41;
          *int32x4_t v45 = *v52;
          if (v54 >= 127) {
            int v54 = 127;
          }
          if (v54 <= -128) {
            LOBYTE(v54) = 0x80;
          }
          v45[1] = v54 ^ 0x80;
          if (v55 >= 127) {
            int v57 = 127;
          }
          else {
            int v57 = v55;
          }
          if (v57 <= -128) {
            LOBYTE(v57) = 0x80;
          }
          v45[2] = v57 ^ 0x80;
          if (v56 >= 127) {
            int v58 = 127;
          }
          else {
            int v58 = v56;
          }
          if (v58 <= -128) {
            LOBYTE(v58) = 0x80;
          }
          v45[3] = v58 ^ 0x80;
          v45 += 4;
          v52 += v16;
          uint64_t v59 = 2 * (v53 & 1);
          int v13 = (__int16 *)((char *)v13 + v59);
          int16x8_t v41 = (__int16 *)((char *)v41 + v59);
          ++v53;
        }
        while (a7 != v53);
      }
      uint64_t v60 = 0;
      do
      {
        int v61 = v42[v60];
        int v62 = *v13;
        int v63 = *v41;
        *int32x4_t v45 = *v52;
        if (v61 >= 127) {
          int v64 = 127;
        }
        else {
          int v64 = v61;
        }
        if (v64 <= -128) {
          LOBYTE(v64) = 0x80;
        }
        v45[1] = v64 ^ 0x80;
        if (v62 >= 127) {
          int v65 = 127;
        }
        else {
          int v65 = v62;
        }
        if (v65 <= -128) {
          LOBYTE(v65) = 0x80;
        }
        v45[2] = v65 ^ 0x80;
        if (v63 >= 127) {
          int v66 = 127;
        }
        else {
          int v66 = v63;
        }
        if (v66 <= -128) {
          LOBYTE(v66) = 0x80;
        }
        v45[3] = v66 ^ 0x80;
        v52 += v16;
        uint64_t v67 = 2 * ((a7 == 1) | (v60 & 1));
        int v13 = (__int16 *)((char *)v13 + v67);
        int16x8_t v41 = (__int16 *)((char *)v41 + v67);
        ++v60;
        v45 += 4;
      }
      while (a7 != v60);
      result += a3;
      a5 += v10;
      int v14 = (__int16 *)((char *)v14 + v15);
      ++v40;
      unsigned int v42 = (__int16 *)((char *)v42 + v15);
    }
    while (v40 != a8);
  }
  return result;
}

unsigned char *from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(unsigned char *result, __int16 *a2, int a3, int a4, int a5, int a6)
{
  if (a6 >= 1 && a5 >= 1)
  {
    int v6 = 0;
    uint64_t v7 = (a6 * a5);
    int v8 = &a2[(4 * v7)];
    uint64_t v9 = v7;
    uint64_t v10 = &v8[v7];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = 2 * a5;
    do
    {
      if (v6 == (a4 & ~(a4 >> 31))) {
        break;
      }
      if (a5 == 1)
      {
        int v13 = *a2;
        int v14 = *v8;
        int v15 = *v10;
        *int8x8_t result = -1;
        if (v13 >= 127) {
          int v13 = 127;
        }
        if (v13 <= -128) {
          LOBYTE(v13) = 0x80;
        }
        result[1] = v13 ^ 0x80;
        if (v14 >= 127) {
          int v16 = 127;
        }
        else {
          int v16 = v14;
        }
        if (v16 <= -128) {
          LOBYTE(v16) = 0x80;
        }
        result[2] = v16 ^ 0x80;
        if (v15 >= 127) {
          int v17 = 127;
        }
        else {
          int v17 = v15;
        }
        if (v17 <= -128) {
          LOBYTE(v17) = 0x80;
        }
        result[3] = v17 ^ 0x80;
        int v18 = result + 4;
      }
      else
      {
        uint64_t v19 = 0;
        int v18 = result;
        do
        {
          int v20 = a2[v19];
          int v21 = *v8;
          int v22 = *v10;
          unsigned char *v18 = -1;
          if (v20 >= 127) {
            int v20 = 127;
          }
          if (v20 <= -128) {
            LOBYTE(v20) = 0x80;
          }
          v18[1] = v20 ^ 0x80;
          if (v21 >= 127) {
            int v23 = 127;
          }
          else {
            int v23 = v21;
          }
          if (v23 <= -128) {
            LOBYTE(v23) = 0x80;
          }
          CFTypeRef v18[2] = v23 ^ 0x80;
          if (v22 >= 127) {
            int v24 = 127;
          }
          else {
            int v24 = v22;
          }
          if (v24 <= -128) {
            LOBYTE(v24) = 0x80;
          }
          v18[3] = v24 ^ 0x80;
          v18 += 4;
          uint64_t v25 = 2 * (v19 & 1);
          int v8 = (__int16 *)((char *)v8 + v25);
          uint64_t v10 = (__int16 *)((char *)v10 + v25);
          ++v19;
        }
        while (a5 != v19);
      }
      uint64_t v26 = 0;
      do
      {
        int v27 = v11[v26];
        int v28 = *v8;
        int v29 = *v10;
        unsigned char *v18 = -1;
        if (v27 >= 127) {
          int v27 = 127;
        }
        if (v27 <= -128) {
          LOBYTE(v27) = 0x80;
        }
        v18[1] = v27 ^ 0x80;
        if (v28 >= 127) {
          int v30 = 127;
        }
        else {
          int v30 = v28;
        }
        if (v30 <= -128) {
          LOBYTE(v30) = 0x80;
        }
        CFTypeRef v18[2] = v30 ^ 0x80;
        if (v29 >= 127) {
          int v31 = 127;
        }
        else {
          int v31 = v29;
        }
        if (v31 <= -128) {
          LOBYTE(v31) = 0x80;
        }
        v18[3] = v31 ^ 0x80;
        uint64_t v32 = 2 * ((a5 == 1) | (v26 & 1));
        int v8 = (__int16 *)((char *)v8 + v32);
        uint64_t v10 = (__int16 *)((char *)v10 + v32);
        ++v26;
        v18 += 4;
      }
      while (a5 != v26);
      result += a3;
      a2 = (__int16 *)((char *)a2 + v12);
      uint64_t v11 = (__int16 *)((char *)v11 + v12);
      ++v6;
    }
    while (v6 != a6);
    int v33 = 0;
    int v34 = &v10[v9];
    int v35 = &v11[v9];
    if (a6 <= a4) {
      int v36 = a4;
    }
    else {
      int v36 = a6;
    }
    int v37 = v36 - a6;
    do
    {
      if (v33 == v37) {
        break;
      }
      if (a5 == 1)
      {
        int v38 = *v11;
        int v39 = *v10;
        int v40 = *v34;
        *int8x8_t result = -1;
        if (v38 >= 127) {
          int v38 = 127;
        }
        if (v38 <= -128) {
          LOBYTE(v38) = 0x80;
        }
        result[1] = v38 ^ 0x80;
        if (v39 >= 127) {
          int v41 = 127;
        }
        else {
          int v41 = v39;
        }
        if (v41 <= -128) {
          LOBYTE(v41) = 0x80;
        }
        result[2] = v41 ^ 0x80;
        if (v40 >= 127) {
          int v42 = 127;
        }
        else {
          int v42 = v40;
        }
        if (v42 <= -128) {
          LOBYTE(v42) = 0x80;
        }
        result[3] = v42 ^ 0x80;
        int v43 = result + 4;
      }
      else
      {
        uint64_t v44 = 0;
        int v43 = result;
        do
        {
          int v45 = v11[v44];
          int v46 = *v10;
          int v47 = *v34;
          *int v43 = -1;
          if (v45 >= 127) {
            int v45 = 127;
          }
          if (v45 <= -128) {
            LOBYTE(v45) = 0x80;
          }
          v43[1] = v45 ^ 0x80;
          if (v46 >= 127) {
            int v48 = 127;
          }
          else {
            int v48 = v46;
          }
          if (v48 <= -128) {
            LOBYTE(v48) = 0x80;
          }
          v43[2] = v48 ^ 0x80;
          if (v47 >= 127) {
            int v49 = 127;
          }
          else {
            int v49 = v47;
          }
          if (v49 <= -128) {
            LOBYTE(v49) = 0x80;
          }
          v43[3] = v49 ^ 0x80;
          v43 += 4;
          uint64_t v50 = 2 * (v44 & 1);
          uint64_t v10 = (__int16 *)((char *)v10 + v50);
          int v34 = (__int16 *)((char *)v34 + v50);
          ++v44;
        }
        while (a5 != v44);
      }
      uint64_t v51 = 0;
      do
      {
        int v52 = v35[v51];
        int v53 = *v10;
        int v54 = *v34;
        *int v43 = -1;
        if (v52 >= 127) {
          int v52 = 127;
        }
        if (v52 <= -128) {
          LOBYTE(v52) = 0x80;
        }
        v43[1] = v52 ^ 0x80;
        if (v53 >= 127) {
          int v55 = 127;
        }
        else {
          int v55 = v53;
        }
        if (v55 <= -128) {
          LOBYTE(v55) = 0x80;
        }
        v43[2] = v55 ^ 0x80;
        if (v54 >= 127) {
          int v56 = 127;
        }
        else {
          int v56 = v54;
        }
        if (v56 <= -128) {
          LOBYTE(v56) = 0x80;
        }
        v43[3] = v56 ^ 0x80;
        uint64_t v57 = 2 * ((a5 == 1) | (v51 & 1));
        uint64_t v10 = (__int16 *)((char *)v10 + v57);
        int v34 = (__int16 *)((char *)v34 + v57);
        ++v51;
        v43 += 4;
      }
      while (a5 != v51);
      result += a3;
      uint64_t v11 = (__int16 *)((char *)v11 + v12);
      ++v33;
      int v35 = (__int16 *)((char *)v35 + v12);
    }
    while (v33 != a6);
  }
  return result;
}

int8x16_t from_422_to_y408_r408_4xH<true,(AlphaOutputMethod)1,false>(int16x8_t *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, unsigned int a7, int8x16_t result)
{
  uint64_t v8 = a7 >> 1;
  uint64_t v9 = (4 * v8);
  uint64_t v10 = (6 * v8);
  uint64_t v11 = a5 + (8 * a6);
  uint64_t v12 = 8 / a7 * a6;
  int v13 = a4 - a7;
  if (a4 <= (int)a7) {
    int v14 = 0;
  }
  else {
    int v14 = a4 - a7;
  }
  int v15 = a4 - v14;
  if (v14 < 2)
  {
    uint64_t v65 = a7 >> 1;
    uint64_t v57 = &a2[v65];
    int v64 = &a2[a7 & 0xFFFFFFFE];
    int v58 = &v64[v65];
    uint64_t v59 = &a2[v9];
    uint64_t v60 = &v59[v65];
    int v61 = &a2[v10];
    int v62 = &v61[v65];
    int v63 = (__int16 *)((char *)a1->i16 + (int)a7 * (uint64_t)a3);
    if (!a4) {
      return result;
    }
  }
  else
  {
    uint64_t v16 = (int)a7 * (uint64_t)a3;
    uint64_t v17 = (2 * v12);
    uint64_t v18 = v8;
    uint64_t v19 = v9;
    uint64_t v20 = v10;
    uint64_t v21 = 16 * v8 + 16 * v10;
    uint64_t v22 = a3 + 16;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v24.i64[0] = 0x1010101010101010;
    v24.i64[1] = 0x1010101010101010;
    int v14 = v13;
    do
    {
      int32x4_t v25 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[v8]);
      int8x16_t v26 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v25, vrev64q_s32(v25)), result), v24);
      int8x16_t v27 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v19]), a2[v8 + v19]), result);
      int8x16_t v28 = vzip1q_s8(v27, v27);
      int8x16_t v29 = vzip2q_s8(v27, v27);
      v30.i16[0] = *(_OWORD *)a5;
      v30.i16[1] = BYTE2(*(_OWORD *)a5);
      v30.i16[2] = BYTE4(*(void *)a5);
      v30.i16[3] = BYTE6(*(void *)a5);
      v30.i16[4] = *(void *)(a5 + 8);
      v30.i16[5] = BYTE2(*(void *)(a5 + 8));
      v30.i16[6] = BYTE12(*(_OWORD *)a5);
      v30.i16[7] = BYTE14(*(_OWORD *)a5);
      v31.i16[0] = *(_OWORD *)(a5 + v12);
      v31.i16[1] = BYTE2(*(_OWORD *)(a5 + v12));
      v31.i16[2] = BYTE4(*(void *)(a5 + v12));
      v31.i16[3] = BYTE6(*(void *)(a5 + v12));
      v31.i16[4] = *(void *)(a5 + v12 + 8);
      v31.i16[5] = BYTE2(*(void *)(a5 + v12 + 8));
      v31.i16[6] = BYTE12(*(_OWORD *)(a5 + v12));
      v31.i16[7] = BYTE14(*(_OWORD *)(a5 + v12));
      int8x16_t v32 = vqmovun_high_s16(vqmovun_s16(v30), v31);
      int16x4x2_t v33 = (int16x4x2_t)vzip1q_s8(v32, v26);
      int16x8_t v34 = (int16x8_t)vzip1q_s8(v28, v29);
      int v35 = (__int16 *)a1;
      vst2_s16(v35, v33);
      uint64_t v23 = v22 + v16;
      int v36 = (int16x8_t *)((char *)v35 + v23);
      unsigned int v37 = v14;
      a1[1] = vzip2q_s16((int16x8_t)v33, v34);
      int16x4x2_t v38 = (int16x4x2_t)vzip2q_s8(v32, v26);
      int16x8_t v39 = (int16x8_t)vzip2q_s8(v28, v29);
      int v40 = (__int16 *)((char *)a1->i16 + a3);
      vst2_s16(v40, v38);
      *(int16x8_t *)((char *)a1 + v22) = vzip2q_s16((int16x8_t)v38, v39);
      int16x8_t v41 = a2[2 * v8];
      int16x8_t v42 = a2[3 * v8];
      int16x8_t v43 = a2[v20];
      int16x8_t v44 = *(int16x8_t *)((char *)a2++ + v21);
      int v45 = (__int16 *)((char *)a1->i16 + v16);
      a1 = (int16x8_t *)((char *)a1 + 2 * a3);
      v15 -= 2;
      int32x4_t v46 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(v41), v42);
      int8x16_t v47 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v46, vrev64q_s32(v46)), result), v24);
      int8x16_t v48 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v43), v44), result);
      int8x16_t v49 = vzip1q_s8(v48, v48);
      int8x16_t v50 = vzip2q_s8(v48, v48);
      v44.i16[0] = *(_OWORD *)v11;
      v44.i16[1] = BYTE2(*(_OWORD *)v11);
      v44.i16[2] = BYTE4(*(void *)v11);
      v44.i16[3] = BYTE6(*(void *)v11);
      v44.i16[4] = *(void *)(v11 + 8);
      v44.i16[5] = BYTE2(*(void *)(v11 + 8));
      v44.i16[6] = BYTE12(*(_OWORD *)v11);
      v44.i16[7] = BYTE14(*(_OWORD *)v11);
      v39.i16[0] = *(_OWORD *)(v11 + v12);
      v39.i16[1] = BYTE2(*(_OWORD *)(v11 + v12));
      v39.i16[2] = BYTE4(*(void *)(v11 + v12));
      v39.i16[3] = BYTE6(*(void *)(v11 + v12));
      v39.i16[4] = *(void *)(v11 + v12 + 8);
      v39.i16[5] = BYTE2(*(void *)(v11 + v12 + 8));
      v39.i16[6] = BYTE12(*(_OWORD *)(v11 + v12));
      v39.i16[7] = BYTE14(*(_OWORD *)(v11 + v12));
      int8x16_t v51 = vqmovun_high_s16(vqmovun_s16(v44), v39);
      int16x4x2_t v52 = (int16x4x2_t)vzip1q_s8(v51, v47);
      int16x8_t v53 = (int16x8_t)vzip1q_s8(v49, v50);
      vst2_s16(v45, v52);
      v45 += 8;
      *(int16x8_t *)int v45 = vzip2q_s16((int16x8_t)v52, v53);
      int16x4x2_t v54 = (int16x4x2_t)vzip2q_s8(v51, v47);
      int16x8_t v55 = (int16x8_t)vzip2q_s8(v49, v50);
      i16 = v36[-1].i16;
      vst2_s16(i16, v54);
      a5 += v17;
      *int v36 = vzip2q_s16((int16x8_t)v54, v55);
      int v14 = v37 - 2;
      v11 += v17;
    }
    while (v37 > 3);
    uint64_t v57 = &a2[v18];
    int v58 = &a2[3 * v8];
    uint64_t v59 = &a2[v19];
    uint64_t v60 = &a2[v18 + v19];
    int v61 = &a2[v20];
    int v62 = &a2[v18 + v20];
    int v63 = (__int16 *)((char *)a1->i16 + v16);
    int v64 = &a2[2 * v8];
    if (!(v15 + v14)) {
      return result;
    }
  }
  if (v14 >= 1)
  {
    int32x4_t v66 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*v64), *v58);
    v67.i64[0] = 0x8080808080808080;
    v67.i64[1] = 0x8080808080808080;
    v68.i64[0] = 0x1010101010101010;
    v68.i64[1] = 0x1010101010101010;
    int8x16_t v69 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v66, vrev64q_s32(v66)), v67), v68);
    int8x16_t v70 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v61), *v62), v67);
    v68.i16[0] = *(_OWORD *)v11;
    v68.i16[1] = BYTE2(*(_OWORD *)v11);
    v68.i16[2] = BYTE4(*(void *)v11);
    v68.i16[3] = BYTE6(*(void *)v11);
    v68.i16[4] = *(void *)(v11 + 8);
    v68.i16[5] = BYTE2(*(void *)(v11 + 8));
    v68.i16[6] = BYTE12(*(_OWORD *)v11);
    v68.i16[7] = BYTE14(*(_OWORD *)v11);
    *(int8x8_t *)v68.i8 = vqmovun_s16((int16x8_t)v68);
    int16x4x2_t v71 = (int16x4x2_t)vzip1q_s8((int8x16_t)v68, v69);
    int16x8_t v72 = (int16x8_t)vzip1q_s8(vzip1q_s8(v70, v70), vzip2q_s8(v70, v70));
    vst2_s16(v63, v71);
    uint64_t v73 = (int16x8_t *)(v63 + 8);
    int8x8_t result = (int8x16_t)vzip2q_s16((int16x8_t)v71, v72);
    int16x8_t *v73 = (int16x8_t)result;
  }
  if (v15 > 1)
  {
    uint64_t v74 = 0;
    uint64_t v75 = 2 * a3;
    uint64_t v76 = a3 + 16;
    result.i16[0] = -32640;
    result.i8[2] = 0x80;
    result.i8[3] = 0x80;
    result.i8[4] = 0x80;
    result.i8[5] = 0x80;
    result.i8[6] = 0x80;
    result.i8[7] = 0x80;
    result.i8[8] = 0x80;
    result.i8[9] = 0x80;
    result.i8[10] = 0x80;
    result.i8[11] = 0x80;
    result.i8[12] = 0x80;
    result.i8[13] = 0x80;
    result.i8[14] = 0x80;
    result.i8[15] = 0x80;
    v77.i64[0] = 0x1010101010101010;
    v77.i64[1] = 0x1010101010101010;
    int8x16_t v78 = (__int16 *)a1;
    do
    {
      unsigned int v79 = v15;
      int32x4_t v80 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v74]), v57[v74]);
      int8x16_t v81 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v80, vrev64q_s32(v80)), result), v77);
      int8x16_t v82 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v59[v74]), v60[v74]), result);
      int8x16_t v83 = vzip1q_s8(v82, v82);
      int8x16_t v84 = vzip2q_s8(v82, v82);
      v85.i16[0] = *(_OWORD *)a5;
      v85.i16[1] = BYTE2(*(_OWORD *)a5);
      v85.i16[2] = BYTE4(*(void *)a5);
      v85.i16[3] = BYTE6(*(void *)a5);
      v85.i16[4] = *(void *)(a5 + 8);
      v85.i16[5] = BYTE2(*(void *)(a5 + 8));
      v85.i16[6] = BYTE12(*(_OWORD *)a5);
      v85.i16[7] = BYTE14(*(_OWORD *)a5);
      v86.i16[0] = *(_OWORD *)(a5 + v12);
      v86.i16[1] = BYTE2(*(_OWORD *)(a5 + v12));
      v86.i16[2] = BYTE4(*(void *)(a5 + v12));
      v86.i16[3] = BYTE6(*(void *)(a5 + v12));
      v86.i16[4] = *(void *)(a5 + v12 + 8);
      v86.i16[5] = BYTE2(*(void *)(a5 + v12 + 8));
      v86.i16[6] = BYTE12(*(_OWORD *)(a5 + v12));
      v86.i16[7] = BYTE14(*(_OWORD *)(a5 + v12));
      int8x16_t v87 = vqmovun_high_s16(vqmovun_s16(v85), v86);
      int16x4x2_t v88 = (int16x4x2_t)vzip1q_s8(v87, v81);
      int16x8_t v89 = (int16x8_t)vzip1q_s8(v83, v84);
      vst2_s16(v78, v88);
      int8x16_t v78 = (__int16 *)((char *)v78 + v75);
      a1[1] = vzip2q_s16((int16x8_t)v88, v89);
      int16x4x2_t v90 = (int16x4x2_t)vzip2q_s8(v87, v81);
      int16x8_t v91 = (int16x8_t)vzip2q_s8(v83, v84);
      int8x16_t v92 = (int16x8_t *)((char *)a1 + v76);
      int8x16_t v93 = (__int16 *)((char *)a1[-1].i16 + v76);
      vst2_s16(v93, v90);
      a1 = (int16x8_t *)v78;
      *int8x16_t v92 = vzip2q_s16((int16x8_t)v90, v91);
      int v15 = v79 - 2;
      a5 += (2 * v12);
      ++v74;
    }
    while (v79 > 3);
    a2 = (int16x8_t *)((char *)a2 + v74 * 16);
    uint64_t v57 = (int16x8_t *)((char *)v57 + v74 * 16);
    uint64_t v59 = (int16x8_t *)((char *)v59 + v74 * 16);
    uint64_t v60 = (int16x8_t *)((char *)v60 + v74 * 16);
  }
  if (v15 == 1)
  {
    int32x4_t v94 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), *v57);
    v95.i64[0] = 0x8080808080808080;
    v95.i64[1] = 0x8080808080808080;
    v96.i64[0] = 0x1010101010101010;
    v96.i64[1] = 0x1010101010101010;
    int8x16_t v97 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v94, vrev64q_s32(v94)), v95), v96);
    int8x16_t v98 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v59), *v60), v95);
    v96.i16[0] = *(_OWORD *)a5;
    v96.i16[1] = BYTE2(*(_OWORD *)a5);
    v96.i16[2] = BYTE4(*(void *)a5);
    v96.i16[3] = BYTE6(*(void *)a5);
    v96.i16[4] = *(void *)(a5 + 8);
    v96.i16[5] = BYTE2(*(void *)(a5 + 8));
    v96.i16[6] = BYTE12(*(_OWORD *)a5);
    v96.i16[7] = BYTE14(*(_OWORD *)a5);
    *(int8x8_t *)v96.i8 = vqmovun_s16((int16x8_t)v96);
    int16x4x2_t v99 = (int16x4x2_t)vzip1q_s8((int8x16_t)v96, v97);
    int16x8_t v100 = (int16x8_t)vzip1q_s8(vzip1q_s8(v98, v98), vzip2q_s8(v98, v98));
    vst2_s16(a1->i16, v99);
    float32x4_t v101 = a1 + 1;
    int8x8_t result = (int8x16_t)vzip2q_s16((int16x8_t)v99, v100);
    *float32x4_t v101 = (int16x8_t)result;
  }
  return result;
}

unsigned char *from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(unsigned char *result, __int16 *a2, int a3, int a4, unsigned char *a5, int a6, int a7, int a8)
{
  if (a8 >= 1 && a7 >= 1)
  {
    int v8 = 0;
    uint64_t v9 = (a8 * a7);
    uint64_t v10 = 8u / a8 * a6;
    uint64_t v11 = &a2[(4 * v9)];
    uint64_t v12 = v9;
    int v13 = &v11[v9];
    int v14 = &a2[v12];
    uint64_t v15 = 2 * a7;
    uint64_t v16 = 8u / a7;
    do
    {
      if (v8 == (a4 & ~(a4 >> 31))) {
        break;
      }
      if (a7 == 1)
      {
        uint64_t v17 = result + 4;
        int v18 = *a2;
        int v19 = *v11;
        int v20 = *v13;
        *int8x8_t result = *a5;
        char v21 = v18 + 112;
        if (v18 > 127) {
          char v21 = -17;
        }
        if (v18 < -112) {
          char v21 = 0;
        }
        result[1] = v21;
        if (v19 >= 127) {
          int v22 = 127;
        }
        else {
          int v22 = v19;
        }
        if (v22 <= -128) {
          LOBYTE(v22) = 0x80;
        }
        result[2] = v22 ^ 0x80;
        if (v20 >= 127) {
          int v23 = 127;
        }
        else {
          int v23 = v20;
        }
        if (v23 <= -128) {
          LOBYTE(v23) = 0x80;
        }
        result[3] = v23 ^ 0x80;
        uint8x16_t v24 = &a5[v16];
      }
      else
      {
        uint64_t v25 = 0;
        uint8x16_t v24 = a5;
        uint64_t v17 = result;
        do
        {
          int v26 = a2[v25];
          int v27 = *v11;
          int v28 = *v13;
          unsigned char *v17 = *v24;
          char v29 = v26 + 112;
          if (v26 > 127) {
            char v29 = -17;
          }
          if (v26 >= -112) {
            char v30 = v29;
          }
          else {
            char v30 = 0;
          }
          v17[1] = v30;
          if (v27 >= 127) {
            int v31 = 127;
          }
          else {
            int v31 = v27;
          }
          if (v31 <= -128) {
            LOBYTE(v31) = 0x80;
          }
          CFTypeRef v17[2] = v31 ^ 0x80;
          if (v28 >= 127) {
            int v32 = 127;
          }
          else {
            int v32 = v28;
          }
          if (v32 <= -128) {
            LOBYTE(v32) = 0x80;
          }
          v17[3] = v32 ^ 0x80;
          v17 += 4;
          v24 += v16;
          uint64_t v33 = 2 * (v25 & 1);
          uint64_t v11 = (__int16 *)((char *)v11 + v33);
          int v13 = (__int16 *)((char *)v13 + v33);
          ++v25;
        }
        while (a7 != v25);
      }
      uint64_t v34 = 0;
      do
      {
        int v35 = v14[v34];
        int v36 = *v11;
        int v37 = *v13;
        unsigned char *v17 = *v24;
        char v38 = v35 + 112;
        if (v35 > 127) {
          char v38 = -17;
        }
        if (v35 < -112) {
          char v38 = 0;
        }
        v17[1] = v38;
        if (v36 >= 127) {
          int v39 = 127;
        }
        else {
          int v39 = v36;
        }
        if (v39 <= -128) {
          LOBYTE(v39) = 0x80;
        }
        CFTypeRef v17[2] = v39 ^ 0x80;
        if (v37 >= 127) {
          int v40 = 127;
        }
        else {
          int v40 = v37;
        }
        if (v40 <= -128) {
          LOBYTE(v40) = 0x80;
        }
        v17[3] = v40 ^ 0x80;
        v24 += v16;
        uint64_t v41 = 2 * ((a7 == 1) | (v34 & 1));
        uint64_t v11 = (__int16 *)((char *)v11 + v41);
        int v13 = (__int16 *)((char *)v13 + v41);
        ++v34;
        v17 += 4;
      }
      while (a7 != v34);
      result += a3;
      a5 += v10;
      a2 = (__int16 *)((char *)a2 + v15);
      int v14 = (__int16 *)((char *)v14 + v15);
      ++v8;
    }
    while (v8 != a8);
    int v42 = 0;
    int16x8_t v43 = &v13[v12];
    int16x8_t v44 = &v14[v12];
    if (a8 <= a4) {
      int v45 = a4;
    }
    else {
      int v45 = a8;
    }
    int v46 = v45 - a8;
    do
    {
      if (v42 == v46) {
        break;
      }
      if (a7 == 1)
      {
        int8x16_t v47 = result + 4;
        int v48 = *v14;
        int v49 = *v13;
        int v50 = *v43;
        *int8x8_t result = *a5;
        char v51 = v48 + 112;
        if (v48 > 127) {
          char v51 = -17;
        }
        if (v48 < -112) {
          char v51 = 0;
        }
        result[1] = v51;
        if (v49 >= 127) {
          int v52 = 127;
        }
        else {
          int v52 = v49;
        }
        if (v52 <= -128) {
          LOBYTE(v52) = 0x80;
        }
        result[2] = v52 ^ 0x80;
        if (v50 >= 127) {
          int v53 = 127;
        }
        else {
          int v53 = v50;
        }
        if (v53 <= -128) {
          LOBYTE(v53) = 0x80;
        }
        result[3] = v53 ^ 0x80;
        int16x4x2_t v54 = &a5[v16];
      }
      else
      {
        uint64_t v55 = 0;
        int16x4x2_t v54 = a5;
        int8x16_t v47 = result;
        do
        {
          int v56 = v14[v55];
          int v57 = *v13;
          int v58 = *v43;
          unsigned char *v47 = *v54;
          char v59 = v56 + 112;
          if (v56 > 127) {
            char v59 = -17;
          }
          if (v56 >= -112) {
            char v60 = v59;
          }
          else {
            char v60 = 0;
          }
          v47[1] = v60;
          if (v57 >= 127) {
            int v61 = 127;
          }
          else {
            int v61 = v57;
          }
          if (v61 <= -128) {
            LOBYTE(v61) = 0x80;
          }
          v47[2] = v61 ^ 0x80;
          if (v58 >= 127) {
            int v62 = 127;
          }
          else {
            int v62 = v58;
          }
          if (v62 <= -128) {
            LOBYTE(v62) = 0x80;
          }
          v47[3] = v62 ^ 0x80;
          v47 += 4;
          v54 += v16;
          uint64_t v63 = 2 * (v55 & 1);
          int v13 = (__int16 *)((char *)v13 + v63);
          int16x8_t v43 = (__int16 *)((char *)v43 + v63);
          ++v55;
        }
        while (a7 != v55);
      }
      uint64_t v64 = 0;
      do
      {
        int v65 = v44[v64];
        int v66 = *v13;
        int v67 = *v43;
        unsigned char *v47 = *v54;
        char v68 = v65 + 112;
        if (v65 > 127) {
          char v68 = -17;
        }
        if (v65 < -112) {
          char v68 = 0;
        }
        v47[1] = v68;
        if (v66 >= 127) {
          int v69 = 127;
        }
        else {
          int v69 = v66;
        }
        if (v69 <= -128) {
          LOBYTE(v69) = 0x80;
        }
        v47[2] = v69 ^ 0x80;
        if (v67 >= 127) {
          int v70 = 127;
        }
        else {
          int v70 = v67;
        }
        if (v70 <= -128) {
          LOBYTE(v70) = 0x80;
        }
        v47[3] = v70 ^ 0x80;
        v54 += v16;
        uint64_t v71 = 2 * ((a7 == 1) | (v64 & 1));
        int v13 = (__int16 *)((char *)v13 + v71);
        int16x8_t v43 = (__int16 *)((char *)v43 + v71);
        ++v64;
        v47 += 4;
      }
      while (a7 != v64);
      result += a3;
      a5 += v10;
      int v14 = (__int16 *)((char *)v14 + v15);
      ++v42;
      int16x8_t v44 = (__int16 *)((char *)v44 + v15);
    }
    while (v42 != a8);
  }
  return result;
}

unsigned char *from_422_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(unsigned char *result, __int16 *a2, int a3, int a4, int a5, int a6)
{
  if (a6 >= 1 && a5 >= 1)
  {
    int v6 = 0;
    uint64_t v7 = (a6 * a5);
    int v8 = &a2[(4 * v7)];
    uint64_t v9 = v7;
    uint64_t v10 = &v8[v7];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = 2 * a5;
    do
    {
      if (v6 == (a4 & ~(a4 >> 31))) {
        break;
      }
      if (a5 == 1)
      {
        int v13 = *a2;
        int v14 = *v8;
        int v15 = *v10;
        *int8x8_t result = -1;
        char v16 = v13 + 112;
        if (v13 > 127) {
          char v16 = -17;
        }
        if (v13 >= -112) {
          char v17 = v16;
        }
        else {
          char v17 = 0;
        }
        result[1] = v17;
        if (v14 >= 127) {
          int v18 = 127;
        }
        else {
          int v18 = v14;
        }
        if (v18 <= -128) {
          LOBYTE(v18) = 0x80;
        }
        result[2] = v18 ^ 0x80;
        if (v15 >= 127) {
          int v19 = 127;
        }
        else {
          int v19 = v15;
        }
        if (v19 <= -128) {
          LOBYTE(v19) = 0x80;
        }
        result[3] = v19 ^ 0x80;
        int v20 = result + 4;
      }
      else
      {
        uint64_t v21 = 0;
        int v20 = result;
        do
        {
          int v22 = a2[v21];
          int v23 = *v8;
          int v24 = *v10;
          *int v20 = -1;
          char v25 = v22 + 112;
          if (v22 > 127) {
            char v25 = -17;
          }
          if (v22 >= -112) {
            char v26 = v25;
          }
          else {
            char v26 = 0;
          }
          v20[1] = v26;
          if (v23 >= 127) {
            int v27 = 127;
          }
          else {
            int v27 = v23;
          }
          if (v27 <= -128) {
            LOBYTE(v27) = 0x80;
          }
          v20[2] = v27 ^ 0x80;
          if (v24 >= 127) {
            int v28 = 127;
          }
          else {
            int v28 = v24;
          }
          if (v28 <= -128) {
            LOBYTE(v28) = 0x80;
          }
          v20[3] = v28 ^ 0x80;
          v20 += 4;
          uint64_t v29 = 2 * (v21 & 1);
          int v8 = (__int16 *)((char *)v8 + v29);
          uint64_t v10 = (__int16 *)((char *)v10 + v29);
          ++v21;
        }
        while (a5 != v21);
      }
      uint64_t v30 = 0;
      do
      {
        int v31 = v11[v30];
        int v32 = *v8;
        int v33 = *v10;
        *int v20 = -1;
        char v34 = v31 + 112;
        if (v31 > 127) {
          char v34 = -17;
        }
        if (v31 >= -112) {
          char v35 = v34;
        }
        else {
          char v35 = 0;
        }
        v20[1] = v35;
        if (v32 >= 127) {
          int v36 = 127;
        }
        else {
          int v36 = v32;
        }
        if (v36 <= -128) {
          LOBYTE(v36) = 0x80;
        }
        v20[2] = v36 ^ 0x80;
        if (v33 >= 127) {
          int v37 = 127;
        }
        else {
          int v37 = v33;
        }
        if (v37 <= -128) {
          LOBYTE(v37) = 0x80;
        }
        v20[3] = v37 ^ 0x80;
        uint64_t v38 = 2 * ((a5 == 1) | (v30 & 1));
        int v8 = (__int16 *)((char *)v8 + v38);
        uint64_t v10 = (__int16 *)((char *)v10 + v38);
        ++v30;
        v20 += 4;
      }
      while (a5 != v30);
      result += a3;
      a2 = (__int16 *)((char *)a2 + v12);
      uint64_t v11 = (__int16 *)((char *)v11 + v12);
      ++v6;
    }
    while (v6 != a6);
    int v39 = 0;
    int v40 = &v10[v9];
    uint64_t v41 = &v11[v9];
    if (a6 <= a4) {
      int v42 = a4;
    }
    else {
      int v42 = a6;
    }
    int v43 = v42 - a6;
    do
    {
      if (v39 == v43) {
        break;
      }
      if (a5 == 1)
      {
        int v44 = *v11;
        int v45 = *v10;
        int v46 = *v40;
        *int8x8_t result = -1;
        char v47 = v44 + 112;
        if (v44 > 127) {
          char v47 = -17;
        }
        if (v44 >= -112) {
          char v48 = v47;
        }
        else {
          char v48 = 0;
        }
        result[1] = v48;
        if (v45 >= 127) {
          int v49 = 127;
        }
        else {
          int v49 = v45;
        }
        if (v49 <= -128) {
          LOBYTE(v49) = 0x80;
        }
        result[2] = v49 ^ 0x80;
        if (v46 >= 127) {
          int v50 = 127;
        }
        else {
          int v50 = v46;
        }
        if (v50 <= -128) {
          LOBYTE(v50) = 0x80;
        }
        result[3] = v50 ^ 0x80;
        char v51 = result + 4;
      }
      else
      {
        uint64_t v52 = 0;
        char v51 = result;
        do
        {
          int v53 = v11[v52];
          int v54 = *v10;
          int v55 = *v40;
          *char v51 = -1;
          char v56 = v53 + 112;
          if (v53 > 127) {
            char v56 = -17;
          }
          if (v53 >= -112) {
            char v57 = v56;
          }
          else {
            char v57 = 0;
          }
          v51[1] = v57;
          if (v54 >= 127) {
            int v58 = 127;
          }
          else {
            int v58 = v54;
          }
          if (v58 <= -128) {
            LOBYTE(v58) = 0x80;
          }
          v51[2] = v58 ^ 0x80;
          if (v55 >= 127) {
            int v59 = 127;
          }
          else {
            int v59 = v55;
          }
          if (v59 <= -128) {
            LOBYTE(v59) = 0x80;
          }
          v51[3] = v59 ^ 0x80;
          v51 += 4;
          uint64_t v60 = 2 * (v52 & 1);
          uint64_t v10 = (__int16 *)((char *)v10 + v60);
          int v40 = (__int16 *)((char *)v40 + v60);
          ++v52;
        }
        while (a5 != v52);
      }
      uint64_t v61 = 0;
      do
      {
        int v62 = v41[v61];
        int v63 = *v10;
        int v64 = *v40;
        *char v51 = -1;
        char v65 = v62 + 112;
        if (v62 > 127) {
          char v65 = -17;
        }
        if (v62 >= -112) {
          char v66 = v65;
        }
        else {
          char v66 = 0;
        }
        v51[1] = v66;
        if (v63 >= 127) {
          int v67 = 127;
        }
        else {
          int v67 = v63;
        }
        if (v67 <= -128) {
          LOBYTE(v67) = 0x80;
        }
        v51[2] = v67 ^ 0x80;
        if (v64 >= 127) {
          int v68 = 127;
        }
        else {
          int v68 = v64;
        }
        if (v68 <= -128) {
          LOBYTE(v68) = 0x80;
        }
        v51[3] = v68 ^ 0x80;
        uint64_t v69 = 2 * ((a5 == 1) | (v61 & 1));
        uint64_t v10 = (__int16 *)((char *)v10 + v69);
        int v40 = (__int16 *)((char *)v40 + v69);
        ++v61;
        v51 += 4;
      }
      while (a5 != v61);
      result += a3;
      uint64_t v11 = (__int16 *)((char *)v11 + v12);
      ++v39;
      uint64_t v41 = (__int16 *)((char *)v41 + v12);
    }
    while (v39 != a6);
  }
  return result;
}

int16x8_t *from_422_to_v216_8xH<(PixelFormat)1983000886,false,(PixelOutputStoreType)0>(int16x8_t *result, int16x8_t *a2, int a3, int a4, unsigned int a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996520, memory_order_acquire) & 1) == 0)
  {
    char v57 = result;
    int v58 = a2;
    int v59 = a3;
    unsigned int v60 = a5;
    int v61 = a4;
    int v62 = __cxa_guard_acquire(&qword_26A996520);
    a4 = v61;
    a5 = v60;
    a3 = v59;
    a2 = v58;
    int v63 = v62;
    int8x8_t result = v57;
    if (v63)
    {
      *(void *)&long long v64 = 0xF000F000F000F000;
      *((void *)&v64 + 1) = 0xF000F000F000F000;
      xmmword_26A996960 = v64;
      __cxa_guard_release(&qword_26A996520);
      a4 = v61;
      a5 = v60;
      a3 = v59;
      int8x8_t result = v57;
      a2 = v58;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996528, memory_order_acquire) & 1) == 0)
  {
    char v65 = result;
    char v66 = a2;
    int v67 = a3;
    unsigned int v68 = a5;
    int v69 = a4;
    int v70 = __cxa_guard_acquire(&qword_26A996528);
    a4 = v69;
    a5 = v68;
    a3 = v67;
    a2 = v66;
    int v71 = v70;
    int8x8_t result = v65;
    if (v71)
    {
      *(void *)&long long v72 = 0xF000F000F000F000;
      *((void *)&v72 + 1) = 0xF000F000F000F000;
      xmmword_26A996970 = v72;
      __cxa_guard_release(&qword_26A996528);
      a4 = v69;
      a5 = v68;
      a3 = v67;
      int8x8_t result = v65;
      a2 = v66;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996530, memory_order_acquire) & 1) == 0)
  {
    uint64_t v73 = result;
    uint64_t v74 = a2;
    int v75 = a3;
    unsigned int v76 = a5;
    int v77 = a4;
    int v78 = __cxa_guard_acquire(&qword_26A996530);
    a4 = v77;
    a5 = v76;
    a3 = v75;
    a2 = v74;
    int v79 = v78;
    int8x8_t result = v73;
    if (v79)
    {
      xmmword_26A996980 = (__int128)vdupq_n_s16(0xF020u);
      __cxa_guard_release(&qword_26A996530);
      a4 = v77;
      a5 = v76;
      a3 = v75;
      int8x8_t result = v73;
      a2 = v74;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996538, memory_order_acquire) & 1) == 0)
  {
    int32x4_t v80 = result;
    int8x16_t v81 = a2;
    int v82 = a3;
    unsigned int v83 = a5;
    int v84 = a4;
    int v85 = __cxa_guard_acquire(&qword_26A996538);
    a4 = v84;
    a5 = v83;
    a3 = v82;
    a2 = v81;
    int v86 = v85;
    int8x8_t result = v80;
    if (v86)
    {
      xmmword_26A996990 = (__int128)vdupq_n_s16(0xFDFu);
      __cxa_guard_release(&qword_26A996538);
      a4 = v84;
      a5 = v83;
      a3 = v82;
      int8x8_t result = v80;
      a2 = v81;
    }
  }
  int16x8_t v5 = (int16x8_t)xmmword_26A996960;
  int16x8_t v6 = (int16x8_t)xmmword_26A996970;
  uint64_t v7 = 4 * a5;
  if (a4 <= (int)a5) {
    int v8 = 0;
  }
  else {
    int v8 = a4 - a5;
  }
  int v9 = a4 - v8;
  if (v8 < 1)
  {
    uint64_t v41 = a5;
    uint64_t v38 = &a2[v41];
    int v40 = &a2[v7];
    int v39 = &v40[v41];
    if (v9 < 1) {
      return result;
    }
    goto LABEL_14;
  }
  uint64_t v10 = (int)a5 * (uint64_t)a3;
  int v11 = a4 - a5 + 1;
  uint64_t v12 = a5;
  uint64_t v13 = 2 * a5;
  uint64_t v14 = 6 * a5;
  uint64_t v15 = v7;
  v16.i64[0] = 0x8000800080008000;
  v16.i64[1] = 0x8000800080008000;
  char v17 = (__int16 *)result;
  do
  {
    int16x8_t v18 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v5), v6), 3uLL), v16);
    int16x8_t v19 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v12], v5), v6), 3uLL), v16);
    int16x8_t v20 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v15], v5), v6), 3uLL), v16);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v12 + v15], v5), v6), 3uLL), v16);
    int16x8_t v22 = vzip1q_s16(v20, v21);
    int16x8_t v23 = vzip2q_s16(v20, v21);
    vst2_s16(v17, *(int16x4x2_t *)((char *)&v18 - 8));
    char v17 = (__int16 *)((char *)v17 + a3);
    result[1] = vzip2q_s16(v22, v18);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v19 - 8));
    result[3] = vzip2q_s16(v23, v19);
    int16x8_t v25 = a2[v13];
    int16x8_t v26 = a2[v12 + v13];
    int16x8_t v27 = a2[v14];
    int16x8_t v28 = a2[v12 + v14];
    ++a2;
    uint64_t v29 = (int16x8_t *)((char *)result + v10);
    int8x8_t result = (int16x8_t *)v17;
    --v9;
    int16x8_t v30 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v25, v5), v6), 3uLL), v16);
    int16x8_t v31 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v26, v5), v6), 3uLL), v16);
    int16x8_t v32 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v27, v5), v6), 3uLL), v16);
    int16x8_t v33 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v28, v5), v6), 3uLL), v16);
    int16x8_t v34 = vzip1q_s16(v32, v33);
    int16x8_t v35 = vzip2q_s16(v32, v33);
    int v36 = (__int16 *)v29;
    vst2_s16(v36, *(int16x4x2_t *)((char *)&v30 - 8));
    v36 += 8;
    *(int16x8_t *)int v36 = vzip2q_s16(v34, v30);
    int v37 = v29[2].i16;
    vst2_s16(v37, *(int16x4x2_t *)((char *)&v31 - 8));
    v29[3] = vzip2q_s16(v35, v31);
    --v11;
  }
  while (v11 > 1);
  uint64_t v38 = &a2[v12];
  int v39 = &a2[v12 + v15];
  int v40 = &a2[v15];
  if (v9 >= 1)
  {
LABEL_14:
    unsigned int v42 = v9 + 1;
    int v43 = result + 2;
    v44.i64[0] = 0x8000800080008000;
    v44.i64[1] = 0x8000800080008000;
    int v45 = result[2].i16;
    do
    {
      int v46 = v43[-2].i16;
      int16x8_t v47 = *a2++;
      int16x8_t v48 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v47, v5), v6), 3uLL), v44);
      int16x8_t v49 = *v38++;
      int16x8_t v50 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v49, v5), v6), 3uLL), v44);
      int16x8_t v51 = *v40++;
      int16x8_t v52 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v51, v5), v6), 3uLL), v44);
      int16x8_t v53 = *v39++;
      int16x8_t v54 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v53, v5), v6), 3uLL), v44);
      int16x8_t v55 = vzip1q_s16(v52, v54);
      vst2_s16(v46, *(int16x4x2_t *)((char *)&v48 - 8));
      int16x8_t v56 = vzip2q_s16(v52, v54);
      v43[-1] = vzip2q_s16(v55, v48);
      vst2_s16(v45, *(int16x4x2_t *)((char *)&v50 - 8));
      int v45 = (__int16 *)((char *)v45 + a3);
      v43[1] = vzip2q_s16(v56, v50);
      --v42;
      int v43 = (int16x8_t *)v45;
    }
    while (v42 > 1);
  }
  return result;
}

int16x8_t *from_422_to_v216_8xH<(PixelFormat)1983000886,true,(PixelOutputStoreType)0>(int16x8_t *result, int16x8_t *a2, int a3, int a4, unsigned int a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996540, memory_order_acquire) & 1) == 0)
  {
    char v57 = result;
    int v58 = a2;
    int v59 = a3;
    unsigned int v60 = a5;
    int v61 = a4;
    int v62 = __cxa_guard_acquire(&qword_26A996540);
    a4 = v61;
    a5 = v60;
    a3 = v59;
    a2 = v58;
    int v63 = v62;
    int8x8_t result = v57;
    if (v63)
    {
      *(void *)&long long v64 = 0xF000F000F000F000;
      *((void *)&v64 + 1) = 0xF000F000F000F000;
      xmmword_26A9969A0 = v64;
      __cxa_guard_release(&qword_26A996540);
      a4 = v61;
      a5 = v60;
      a3 = v59;
      int8x8_t result = v57;
      a2 = v58;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996548, memory_order_acquire) & 1) == 0)
  {
    char v65 = result;
    char v66 = a2;
    int v67 = a3;
    unsigned int v68 = a5;
    int v69 = a4;
    int v70 = __cxa_guard_acquire(&qword_26A996548);
    a4 = v69;
    a5 = v68;
    a3 = v67;
    a2 = v66;
    int v71 = v70;
    int8x8_t result = v65;
    if (v71)
    {
      *(void *)&long long v72 = 0xF000F000F000F000;
      *((void *)&v72 + 1) = 0xF000F000F000F000;
      xmmword_26A9969B0 = v72;
      __cxa_guard_release(&qword_26A996548);
      a4 = v69;
      a5 = v68;
      a3 = v67;
      int8x8_t result = v65;
      a2 = v66;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996550, memory_order_acquire) & 1) == 0)
  {
    uint64_t v73 = result;
    uint64_t v74 = a2;
    int v75 = a3;
    unsigned int v76 = a5;
    int v77 = a4;
    int v78 = __cxa_guard_acquire(&qword_26A996550);
    a4 = v77;
    a5 = v76;
    a3 = v75;
    a2 = v74;
    int v79 = v78;
    int8x8_t result = v73;
    if (v79)
    {
      xmmword_26A9969C0 = (__int128)vdupq_n_s16(0xF020u);
      __cxa_guard_release(&qword_26A996550);
      a4 = v77;
      a5 = v76;
      a3 = v75;
      int8x8_t result = v73;
      a2 = v74;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996558, memory_order_acquire) & 1) == 0)
  {
    int32x4_t v80 = result;
    int8x16_t v81 = a2;
    int v82 = a3;
    unsigned int v83 = a5;
    int v84 = a4;
    int v85 = __cxa_guard_acquire(&qword_26A996558);
    a4 = v84;
    a5 = v83;
    a3 = v82;
    a2 = v81;
    int v86 = v85;
    int8x8_t result = v80;
    if (v86)
    {
      xmmword_26A9969D0 = (__int128)vdupq_n_s16(0xFDFu);
      __cxa_guard_release(&qword_26A996558);
      a4 = v84;
      a5 = v83;
      a3 = v82;
      int8x8_t result = v80;
      a2 = v81;
    }
  }
  int16x8_t v5 = (int16x8_t)xmmword_26A9969A0;
  int16x8_t v6 = (int16x8_t)xmmword_26A9969B0;
  uint64_t v7 = 4 * a5;
  if (a4 <= (int)a5) {
    int v8 = 0;
  }
  else {
    int v8 = a4 - a5;
  }
  int v9 = a4 - v8;
  if (v8 < 1)
  {
    uint64_t v41 = a5;
    uint64_t v38 = &a2[v41];
    int v40 = &a2[v7];
    int v39 = &v40[v41];
    if (v9 < 1) {
      return result;
    }
    goto LABEL_14;
  }
  uint64_t v10 = (int)a5 * (uint64_t)a3;
  int v11 = a4 - a5 + 1;
  uint64_t v12 = a5;
  uint64_t v13 = 2 * a5;
  uint64_t v14 = 6 * a5;
  uint64_t v15 = v7;
  v16.i64[0] = 0x8000800080008000;
  v16.i64[1] = 0x8000800080008000;
  char v17 = (__int16 *)result;
  do
  {
    int16x8_t v18 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v5), v6), 3uLL), v16);
    int16x8_t v19 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v12], v5), v6), 3uLL), v16);
    int16x8_t v20 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v15], v5), v6), 3uLL), v16);
    int16x8_t v21 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v12 + v15], v5), v6), 3uLL), v16);
    int16x8_t v22 = vzip1q_s16(v20, v21);
    int16x8_t v23 = vzip2q_s16(v20, v21);
    vst2_s16(v17, *(int16x4x2_t *)((char *)&v18 - 8));
    char v17 = (__int16 *)((char *)v17 + a3);
    result[1] = vzip2q_s16(v22, v18);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v19 - 8));
    result[3] = vzip2q_s16(v23, v19);
    int16x8_t v25 = a2[v13];
    int16x8_t v26 = a2[v12 + v13];
    int16x8_t v27 = a2[v14];
    int16x8_t v28 = a2[v12 + v14];
    ++a2;
    uint64_t v29 = (int16x8_t *)((char *)result + v10);
    int8x8_t result = (int16x8_t *)v17;
    --v9;
    int16x8_t v30 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v25, v5), v6), 3uLL), v16);
    int16x8_t v31 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v26, v5), v6), 3uLL), v16);
    int16x8_t v32 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v27, v5), v6), 3uLL), v16);
    int16x8_t v33 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v28, v5), v6), 3uLL), v16);
    int16x8_t v34 = vzip1q_s16(v32, v33);
    int16x8_t v35 = vzip2q_s16(v32, v33);
    int v36 = (__int16 *)v29;
    vst2_s16(v36, *(int16x4x2_t *)((char *)&v30 - 8));
    v36 += 8;
    *(int16x8_t *)int v36 = vzip2q_s16(v34, v30);
    int v37 = v29[2].i16;
    vst2_s16(v37, *(int16x4x2_t *)((char *)&v31 - 8));
    v29[3] = vzip2q_s16(v35, v31);
    --v11;
  }
  while (v11 > 1);
  uint64_t v38 = &a2[v12];
  int v39 = &a2[v12 + v15];
  int v40 = &a2[v15];
  if (v9 >= 1)
  {
LABEL_14:
    unsigned int v42 = v9 + 1;
    int v43 = result + 2;
    v44.i64[0] = 0x8000800080008000;
    v44.i64[1] = 0x8000800080008000;
    int v45 = result[2].i16;
    do
    {
      int v46 = v43[-2].i16;
      int16x8_t v47 = *a2++;
      int16x8_t v48 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v47, v5), v6), 3uLL), v44);
      int16x8_t v49 = *v38++;
      int16x8_t v50 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v49, v5), v6), 3uLL), v44);
      int16x8_t v51 = *v40++;
      int16x8_t v52 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v51, v5), v6), 3uLL), v44);
      int16x8_t v53 = *v39++;
      int16x8_t v54 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v53, v5), v6), 3uLL), v44);
      int16x8_t v55 = vzip1q_s16(v52, v54);
      vst2_s16(v46, *(int16x4x2_t *)((char *)&v48 - 8));
      int16x8_t v56 = vzip2q_s16(v52, v54);
      v43[-1] = vzip2q_s16(v55, v48);
      vst2_s16(v45, *(int16x4x2_t *)((char *)&v50 - 8));
      int v45 = (__int16 *)((char *)v45 + a3);
      v43[1] = vzip2q_s16(v56, v50);
      --v42;
      int v43 = (int16x8_t *)v45;
    }
    while (v42 > 1);
  }
  return result;
}

int32x4_t *from_422_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(int32x4_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6, unsigned int a7)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9965E0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v107 = result;
    uint64_t v108 = a5;
    unsigned int v109 = a6;
    int v110 = a3;
    uint64_t v111 = a2;
    unsigned int v112 = a7;
    int v113 = a4;
    int v114 = __cxa_guard_acquire(&qword_26A9965E0);
    a4 = v113;
    a7 = v112;
    a2 = v111;
    a3 = v110;
    a6 = v109;
    a5 = v108;
    int v115 = v114;
    int8x8_t result = v107;
    if (v115)
    {
      *(void *)&long long v116 = 0xF000F000F000F000;
      *((void *)&v116 + 1) = 0xF000F000F000F000;
      xmmword_26A996AE0 = v116;
      __cxa_guard_release(&qword_26A9965E0);
      a4 = v113;
      a7 = v112;
      int8x8_t result = v107;
      a2 = v111;
      a3 = v110;
      a6 = v109;
      a5 = v108;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9965E8, memory_order_acquire) & 1) == 0)
  {
    int32x4_t v117 = result;
    int32x4_t v118 = a5;
    unsigned int v119 = a6;
    int v120 = a3;
    float32x4_t v121 = a2;
    unsigned int v122 = a7;
    int v123 = a4;
    int v124 = __cxa_guard_acquire(&qword_26A9965E8);
    a4 = v123;
    a7 = v122;
    a2 = v121;
    a3 = v120;
    a6 = v119;
    a5 = v118;
    int v125 = v124;
    int8x8_t result = v117;
    if (v125)
    {
      *(void *)&long long v126 = 0xF000F000F000F000;
      *((void *)&v126 + 1) = 0xF000F000F000F000;
      xmmword_26A996AF0 = v126;
      __cxa_guard_release(&qword_26A9965E8);
      a4 = v123;
      a7 = v122;
      int8x8_t result = v117;
      a2 = v121;
      a3 = v120;
      a6 = v119;
      a5 = v118;
    }
  }
  uint64_t v7 = 4 * a7;
  if (a4 <= (int)a7) {
    int v8 = 0;
  }
  else {
    int v8 = a4 - a7;
  }
  int v9 = a4 - v8;
  if (v8 < 1)
  {
    uint64_t v73 = a7;
    int v70 = &a2[v73];
    int v71 = &a2[v7];
    long long v72 = &v71[v73];
    if (v9 < 1) {
      return result;
    }
    goto LABEL_12;
  }
  uint64_t v10 = (int)a7 * (uint64_t)a3;
  uint64_t v11 = a7;
  uint64_t v12 = 2 * a7;
  uint64_t v13 = v7;
  int16x8_t v14 = (int16x8_t)xmmword_26A996AE0;
  int16x8_t v15 = (int16x8_t)xmmword_26A996AF0;
  uint64_t v16 = 6 * a7;
  char v17 = result + 4;
  int v18 = a4 - a7 + 1;
  v19.i64[0] = 0x8000800080008000;
  v19.i64[1] = 0x8000800080008000;
  i32 = (float *)result[4].i32;
  do
  {
    int16x8_t v21 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x8_t v22 = (float *)v17[-4].i32;
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13], v14), v15), 3uLL), v19);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v11 + v13], v14), v15), 3uLL), v19);
    int16x8_t v25 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)0, 2uLL), (uint16x8_t)v23);
    int16x8_t v26 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v24, (int8x16_t)0, 2uLL), (uint16x8_t)v24);
    int16x8_t v27 = vzip1q_s16(v23, v25);
    int16x8_t v28 = vzip1q_s16(v24, v26);
    int16x8_t v29 = vzip2q_s16(v23, v25);
    int16x8_t v30 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v14), v15), 3uLL), v19);
    float32x2x2_t v31 = (float32x2x2_t)vzip1q_s16(*a5, v30);
    float32x2x2_t v32 = (float32x2x2_t)vzip2q_s16(*a5, v30);
    int32x4_t v33 = (int32x4_t)vzip1q_s16(v27, v28);
    int32x4_t v34 = (int32x4_t)vzip2q_s16(v27, v28);
    vst2_f32(v22, v31);
    v17[-3] = vzip2q_s32((int32x4_t)v31, v33);
    int16x8_t v35 = (float *)v17[-2].i32;
    vst2_f32(v35, v32);
    v17[-1] = vzip2q_s32((int32x4_t)v32, v34);
    int16x8_t v36 = vzip2q_s16(v24, v26);
    int16x8_t v37 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v11], v14), v15), 3uLL), v19);
    int16x8_t v38 = a5[1];
    float32x2x2_t v39 = (float32x2x2_t)vzip1q_s16(v38, v37);
    float32x2x2_t v40 = (float32x2x2_t)vzip2q_s16(v38, v37);
    int32x4_t v41 = (int32x4_t)vzip1q_s16(v29, v36);
    vst2_f32(i32, v39);
    i32 = (float *)((char *)i32 + a3);
    int32x4_t v42 = (int32x4_t)vzip2q_s16(v29, v36);
    v17[1] = vzip2q_s32((int32x4_t)v39, v41);
    int v43 = (float *)v17[2].i32;
    vst2_f32(v43, v40);
    v17[3] = vzip2q_s32((int32x4_t)v40, v42);
    int16x8_t v44 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v16], v14), v15), 3uLL), v19);
    int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v11 + v16], v14), v15), 3uLL), v19);
    int16x8_t v46 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL), (uint16x8_t)v44);
    int16x8_t v47 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v45, (int8x16_t)0, 2uLL), (uint16x8_t)v45);
    int16x8_t v48 = vzip1q_s16(v44, v46);
    int16x8_t v49 = vzip1q_s16(v45, v47);
    int16x8_t v50 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v12], v14), v15), 3uLL), v19);
    int16x8_t v51 = *(int16x8_t *)((char *)a5 + 8 * a6);
    float32x2x2_t v52 = (float32x2x2_t)vzip1q_s16(v51, v50);
    float32x2x2_t v53 = (float32x2x2_t)vzip2q_s16(v51, v50);
    int32x4_t v54 = (int32x4_t)vzip1q_s16(v48, v49);
    int32x4_t v55 = (int32x4_t)vzip2q_s16(v48, v49);
    int16x8_t v56 = (int32x4_t *)((char *)v17 + v10);
    char v57 = (float *)v56[-4].i32;
    vst2_f32(v57, v52);
    v56[-3] = vzip2q_s32((int32x4_t)v52, v54);
    int v58 = (float *)v56[-2].i32;
    vst2_f32(v58, v53);
    v56[-1] = vzip2q_s32((int32x4_t)v53, v55);
    int16x8_t v59 = a2[v11 + v12];
    ++a2;
    --v9;
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v60 = vzip2q_s16(v44, v46);
    int16x8_t v61 = vzip2q_s16(v45, v47);
    int16x8_t v62 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v59, v14), v15), 3uLL), v19);
    int16x8_t v63 = *v21;
    float32x2x2_t v64 = (float32x2x2_t)vzip1q_s16(*v21, v62);
    int32x4_t v65 = (int32x4_t)vzip1q_s16(v60, v61);
    char v66 = (float *)v56;
    vst2_f32(v66, v64);
    v66 += 4;
    float32x2x2_t v67 = (float32x2x2_t)vzip2q_s16(v63, v62);
    int32x4_t v68 = (int32x4_t)vzip2q_s16(v60, v61);
    int v69 = (float *)v56[2].i32;
    vst2_f32(v69, v67);
    *(int32x4_t *)char v66 = vzip2q_s32((int32x4_t)v64, v65);
    v56[3] = vzip2q_s32((int32x4_t)v67, v68);
    --v18;
    char v17 = (int32x4_t *)i32;
  }
  while (v18 > 1);
  int v70 = &a2[v11];
  int v71 = &a2[v13];
  long long v72 = &a2[v11 + v13];
  int8x8_t result = (int32x4_t *)(i32 - 16);
  if (v9 >= 1)
  {
LABEL_12:
    int16x8_t v74 = (int16x8_t)xmmword_26A996AE0;
    int16x8_t v75 = (int16x8_t)xmmword_26A996AF0;
    unsigned int v76 = v9 + 1;
    int v77 = a5 + 1;
    int v78 = result + 4;
    v79.i64[0] = 0x8000800080008000;
    v79.i64[1] = 0x8000800080008000;
    int32x4_t v80 = (float *)result[4].i32;
    do
    {
      int16x8_t v81 = *v71++;
      int16x8_t v82 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v81, v74), v75), 3uLL), v79);
      int16x8_t v83 = *v72++;
      int16x8_t v84 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v83, v74), v75), 3uLL), v79);
      int16x8_t v85 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v82, (int8x16_t)0, 2uLL), (uint16x8_t)v82);
      int16x8_t v86 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v84, (int8x16_t)0, 2uLL), (uint16x8_t)v84);
      int16x8_t v87 = vzip1q_s16(v82, v85);
      int16x8_t v88 = vzip1q_s16(v84, v86);
      int16x8_t v89 = *a2++;
      int16x8_t v90 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v89, v74), v75), 3uLL), v79);
      int16x8_t v91 = v77[-1];
      float32x2x2_t v92 = (float32x2x2_t)vzip1q_s16(v91, v90);
      float32x2x2_t v93 = (float32x2x2_t)vzip2q_s16(v91, v90);
      int32x4_t v94 = (int32x4_t)vzip1q_s16(v87, v88);
      int32x4_t v95 = (int32x4_t)vzip2q_s16(v87, v88);
      uint8x16_t v96 = (float *)v78[-4].i32;
      int16x8_t v97 = vzip2q_s16(v82, v85);
      vst2_f32(v96, v92);
      v78[-3] = vzip2q_s32((int32x4_t)v92, v94);
      int8x16_t v98 = (float *)v78[-2].i32;
      vst2_f32(v98, v93);
      v78[-1] = vzip2q_s32((int32x4_t)v93, v95);
      int16x8_t v99 = *v70++;
      int16x8_t v100 = vzip2q_s16(v84, v86);
      int16x8_t v101 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v99, v74), v75), 3uLL), v79);
      float32x2x2_t v102 = (float32x2x2_t)vzip1q_s16(*v77, v101);
      float32x2x2_t v103 = (float32x2x2_t)vzip2q_s16(*v77, v101);
      int32x4_t v104 = (int32x4_t)vzip1q_s16(v97, v100);
      vst2_f32(v80, v102);
      int32x4_t v80 = (float *)((char *)v80 + a3);
      int32x4_t v105 = (int32x4_t)vzip2q_s16(v97, v100);
      v78[1] = vzip2q_s32((int32x4_t)v102, v104);
      int16x8_t v106 = (float *)v78[2].i32;
      vst2_f32(v106, v103);
      v78[3] = vzip2q_s32((int32x4_t)v103, v105);
      --v76;
      int v77 = (int16x8_t *)((char *)v77 + a6);
      int v78 = (int32x4_t *)v80;
    }
    while (v76 > 1);
  }
  return result;
}

int32x4_t *from_422_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(int32x4_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6, unsigned int a7)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9965F0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v107 = result;
    uint64_t v108 = a5;
    unsigned int v109 = a6;
    int v110 = a3;
    uint64_t v111 = a2;
    unsigned int v112 = a7;
    int v113 = a4;
    int v114 = __cxa_guard_acquire(&qword_26A9965F0);
    a4 = v113;
    a7 = v112;
    a2 = v111;
    a3 = v110;
    a6 = v109;
    a5 = v108;
    int v115 = v114;
    int8x8_t result = v107;
    if (v115)
    {
      *(void *)&long long v116 = 0xF000F000F000F000;
      *((void *)&v116 + 1) = 0xF000F000F000F000;
      xmmword_26A996B00 = v116;
      __cxa_guard_release(&qword_26A9965F0);
      a4 = v113;
      a7 = v112;
      int8x8_t result = v107;
      a2 = v111;
      a3 = v110;
      a6 = v109;
      a5 = v108;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9965F8, memory_order_acquire) & 1) == 0)
  {
    int32x4_t v117 = result;
    int32x4_t v118 = a5;
    unsigned int v119 = a6;
    int v120 = a3;
    float32x4_t v121 = a2;
    unsigned int v122 = a7;
    int v123 = a4;
    int v124 = __cxa_guard_acquire(&qword_26A9965F8);
    a4 = v123;
    a7 = v122;
    a2 = v121;
    a3 = v120;
    a6 = v119;
    a5 = v118;
    int v125 = v124;
    int8x8_t result = v117;
    if (v125)
    {
      *(void *)&long long v126 = 0xF000F000F000F000;
      *((void *)&v126 + 1) = 0xF000F000F000F000;
      xmmword_26A996B10 = v126;
      __cxa_guard_release(&qword_26A9965F8);
      a4 = v123;
      a7 = v122;
      int8x8_t result = v117;
      a2 = v121;
      a3 = v120;
      a6 = v119;
      a5 = v118;
    }
  }
  uint64_t v7 = 4 * a7;
  if (a4 <= (int)a7) {
    int v8 = 0;
  }
  else {
    int v8 = a4 - a7;
  }
  int v9 = a4 - v8;
  if (v8 < 1)
  {
    uint64_t v73 = a7;
    int v70 = &a2[v73];
    int v71 = &a2[v7];
    long long v72 = &v71[v73];
    if (v9 < 1) {
      return result;
    }
    goto LABEL_12;
  }
  uint64_t v10 = (int)a7 * (uint64_t)a3;
  uint64_t v11 = a7;
  uint64_t v12 = 2 * a7;
  uint64_t v13 = v7;
  int16x8_t v14 = (int16x8_t)xmmword_26A996B00;
  int16x8_t v15 = (int16x8_t)xmmword_26A996B10;
  uint64_t v16 = 6 * a7;
  char v17 = result + 4;
  int v18 = a4 - a7 + 1;
  v19.i64[0] = 0x8000800080008000;
  v19.i64[1] = 0x8000800080008000;
  i32 = (float *)result[4].i32;
  do
  {
    int16x8_t v21 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x8_t v22 = (float *)v17[-4].i32;
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13], v14), v15), 3uLL), v19);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v11 + v13], v14), v15), 3uLL), v19);
    int16x8_t v25 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)0, 2uLL), (uint16x8_t)v23);
    int16x8_t v26 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v24, (int8x16_t)0, 2uLL), (uint16x8_t)v24);
    int16x8_t v27 = vzip1q_s16(v23, v25);
    int16x8_t v28 = vzip1q_s16(v24, v26);
    int16x8_t v29 = vzip2q_s16(v23, v25);
    int16x8_t v30 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v14), v15), 3uLL), v19);
    float32x2x2_t v31 = (float32x2x2_t)vzip1q_s16(*a5, v30);
    float32x2x2_t v32 = (float32x2x2_t)vzip2q_s16(*a5, v30);
    int32x4_t v33 = (int32x4_t)vzip1q_s16(v27, v28);
    int32x4_t v34 = (int32x4_t)vzip2q_s16(v27, v28);
    vst2_f32(v22, v31);
    v17[-3] = vzip2q_s32((int32x4_t)v31, v33);
    int16x8_t v35 = (float *)v17[-2].i32;
    vst2_f32(v35, v32);
    v17[-1] = vzip2q_s32((int32x4_t)v32, v34);
    int16x8_t v36 = vzip2q_s16(v24, v26);
    int16x8_t v37 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v11], v14), v15), 3uLL), v19);
    int16x8_t v38 = a5[1];
    float32x2x2_t v39 = (float32x2x2_t)vzip1q_s16(v38, v37);
    float32x2x2_t v40 = (float32x2x2_t)vzip2q_s16(v38, v37);
    int32x4_t v41 = (int32x4_t)vzip1q_s16(v29, v36);
    vst2_f32(i32, v39);
    i32 = (float *)((char *)i32 + a3);
    int32x4_t v42 = (int32x4_t)vzip2q_s16(v29, v36);
    v17[1] = vzip2q_s32((int32x4_t)v39, v41);
    int v43 = (float *)v17[2].i32;
    vst2_f32(v43, v40);
    v17[3] = vzip2q_s32((int32x4_t)v40, v42);
    int16x8_t v44 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v16], v14), v15), 3uLL), v19);
    int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v11 + v16], v14), v15), 3uLL), v19);
    int16x8_t v46 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL), (uint16x8_t)v44);
    int16x8_t v47 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v45, (int8x16_t)0, 2uLL), (uint16x8_t)v45);
    int16x8_t v48 = vzip1q_s16(v44, v46);
    int16x8_t v49 = vzip1q_s16(v45, v47);
    int16x8_t v50 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v12], v14), v15), 3uLL), v19);
    int16x8_t v51 = *(int16x8_t *)((char *)a5 + 8 * a6);
    float32x2x2_t v52 = (float32x2x2_t)vzip1q_s16(v51, v50);
    float32x2x2_t v53 = (float32x2x2_t)vzip2q_s16(v51, v50);
    int32x4_t v54 = (int32x4_t)vzip1q_s16(v48, v49);
    int32x4_t v55 = (int32x4_t)vzip2q_s16(v48, v49);
    int16x8_t v56 = (int32x4_t *)((char *)v17 + v10);
    char v57 = (float *)v56[-4].i32;
    vst2_f32(v57, v52);
    v56[-3] = vzip2q_s32((int32x4_t)v52, v54);
    int v58 = (float *)v56[-2].i32;
    vst2_f32(v58, v53);
    v56[-1] = vzip2q_s32((int32x4_t)v53, v55);
    int16x8_t v59 = a2[v11 + v12];
    ++a2;
    --v9;
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v60 = vzip2q_s16(v44, v46);
    int16x8_t v61 = vzip2q_s16(v45, v47);
    int16x8_t v62 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v59, v14), v15), 3uLL), v19);
    int16x8_t v63 = *v21;
    float32x2x2_t v64 = (float32x2x2_t)vzip1q_s16(*v21, v62);
    int32x4_t v65 = (int32x4_t)vzip1q_s16(v60, v61);
    char v66 = (float *)v56;
    vst2_f32(v66, v64);
    v66 += 4;
    float32x2x2_t v67 = (float32x2x2_t)vzip2q_s16(v63, v62);
    int32x4_t v68 = (int32x4_t)vzip2q_s16(v60, v61);
    int v69 = (float *)v56[2].i32;
    vst2_f32(v69, v67);
    *(int32x4_t *)char v66 = vzip2q_s32((int32x4_t)v64, v65);
    v56[3] = vzip2q_s32((int32x4_t)v67, v68);
    --v18;
    char v17 = (int32x4_t *)i32;
  }
  while (v18 > 1);
  int v70 = &a2[v11];
  int v71 = &a2[v13];
  long long v72 = &a2[v11 + v13];
  int8x8_t result = (int32x4_t *)(i32 - 16);
  if (v9 >= 1)
  {
LABEL_12:
    int16x8_t v74 = (int16x8_t)xmmword_26A996B00;
    int16x8_t v75 = (int16x8_t)xmmword_26A996B10;
    unsigned int v76 = v9 + 1;
    int v77 = a5 + 1;
    int v78 = result + 4;
    v79.i64[0] = 0x8000800080008000;
    v79.i64[1] = 0x8000800080008000;
    int32x4_t v80 = (float *)result[4].i32;
    do
    {
      int16x8_t v81 = *v71++;
      int16x8_t v82 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v81, v74), v75), 3uLL), v79);
      int16x8_t v83 = *v72++;
      int16x8_t v84 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v83, v74), v75), 3uLL), v79);
      int16x8_t v85 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v82, (int8x16_t)0, 2uLL), (uint16x8_t)v82);
      int16x8_t v86 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v84, (int8x16_t)0, 2uLL), (uint16x8_t)v84);
      int16x8_t v87 = vzip1q_s16(v82, v85);
      int16x8_t v88 = vzip1q_s16(v84, v86);
      int16x8_t v89 = *a2++;
      int16x8_t v90 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v89, v74), v75), 3uLL), v79);
      int16x8_t v91 = v77[-1];
      float32x2x2_t v92 = (float32x2x2_t)vzip1q_s16(v91, v90);
      float32x2x2_t v93 = (float32x2x2_t)vzip2q_s16(v91, v90);
      int32x4_t v94 = (int32x4_t)vzip1q_s16(v87, v88);
      int32x4_t v95 = (int32x4_t)vzip2q_s16(v87, v88);
      uint8x16_t v96 = (float *)v78[-4].i32;
      int16x8_t v97 = vzip2q_s16(v82, v85);
      vst2_f32(v96, v92);
      v78[-3] = vzip2q_s32((int32x4_t)v92, v94);
      int8x16_t v98 = (float *)v78[-2].i32;
      vst2_f32(v98, v93);
      v78[-1] = vzip2q_s32((int32x4_t)v93, v95);
      int16x8_t v99 = *v70++;
      int16x8_t v100 = vzip2q_s16(v84, v86);
      int16x8_t v101 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v99, v74), v75), 3uLL), v79);
      float32x2x2_t v102 = (float32x2x2_t)vzip1q_s16(*v77, v101);
      float32x2x2_t v103 = (float32x2x2_t)vzip2q_s16(*v77, v101);
      int32x4_t v104 = (int32x4_t)vzip1q_s16(v97, v100);
      vst2_f32(v80, v102);
      int32x4_t v80 = (float *)((char *)v80 + a3);
      int32x4_t v105 = (int32x4_t)vzip2q_s16(v97, v100);
      v78[1] = vzip2q_s32((int32x4_t)v102, v104);
      int16x8_t v106 = (float *)v78[2].i32;
      vst2_f32(v106, v103);
      v78[3] = vzip2q_s32((int32x4_t)v103, v105);
      --v76;
      int v77 = (int16x8_t *)((char *)v77 + a6);
      int v78 = (int32x4_t *)v80;
    }
    while (v76 > 1);
  }
  return result;
}

_WORD *from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(_WORD *result, __int16 *a2, int a3, int a4, _WORD *a5, int a6, int a7, int a8)
{
  if (a8 >= 1 && a7 >= 1)
  {
    int v8 = 0;
    uint64_t v9 = (a8 * a7);
    uint64_t v10 = 8u / a8 * a6;
    uint64_t v11 = &a2[(4 * v9)];
    uint64_t v12 = v9;
    uint64_t v13 = &v11[v9];
    int16x8_t v14 = &a2[v12];
    uint64_t v15 = 2 * a7;
    uint64_t v16 = 8u / a7;
    do
    {
      if (v8 == (a4 & ~(a4 >> 31))) {
        break;
      }
      if (a7 == 1)
      {
        char v17 = result + 4;
        int v18 = *a2;
        int v19 = *v11;
        int v20 = *v13;
        *int8x8_t result = *a5;
        if (v18 >= 4095) {
          int v21 = 4095;
        }
        else {
          int v21 = v18;
        }
        if (v21 <= -4096) {
          LOWORD(v21) = -4096;
        }
        result[1] = (8 * v21) ^ 0x8000;
        if (v19 >= 4095) {
          int v22 = 4095;
        }
        else {
          int v22 = v19;
        }
        if (v22 <= -4096) {
          LOWORD(v22) = -4096;
        }
        result[2] = (8 * v22) ^ 0x8000;
        if (v20 >= 4095) {
          int v23 = 4095;
        }
        else {
          int v23 = v20;
        }
        if (v23 <= -4096) {
          LOWORD(v23) = -4096;
        }
        result[3] = (8 * v23) ^ 0x8000;
        int16x8_t v24 = &a5[v16];
      }
      else
      {
        uint64_t v25 = 0;
        int16x8_t v24 = a5;
        char v17 = result;
        do
        {
          int v26 = a2[v25];
          int v27 = *v11;
          int v28 = *v13;
          _WORD *v17 = *v24;
          if (v26 >= 4095) {
            int v29 = 4095;
          }
          else {
            int v29 = v26;
          }
          if (v29 <= -4096) {
            LOWORD(v29) = -4096;
          }
          v17[1] = (8 * v29) ^ 0x8000;
          if (v27 >= 4095) {
            int v30 = 4095;
          }
          else {
            int v30 = v27;
          }
          if (v30 <= -4096) {
            LOWORD(v30) = -4096;
          }
          CFTypeRef v17[2] = (8 * v30) ^ 0x8000;
          if (v28 >= 4095) {
            int v31 = 4095;
          }
          else {
            int v31 = v28;
          }
          if (v31 <= -4096) {
            LOWORD(v31) = -4096;
          }
          v17[3] = (8 * v31) ^ 0x8000;
          v17 += 4;
          v24 += v16;
          uint64_t v32 = 2 * (v25 & 1);
          uint64_t v11 = (__int16 *)((char *)v11 + v32);
          uint64_t v13 = (__int16 *)((char *)v13 + v32);
          ++v25;
        }
        while (a7 != v25);
      }
      uint64_t v33 = 0;
      do
      {
        int v34 = v14[v33];
        int v35 = *v11;
        int v36 = *v13;
        _WORD *v17 = *v24;
        if (v34 >= 4095) {
          int v37 = 4095;
        }
        else {
          int v37 = v34;
        }
        if (v37 <= -4096) {
          LOWORD(v37) = -4096;
        }
        v17[1] = (8 * v37) ^ 0x8000;
        if (v35 >= 4095) {
          int v38 = 4095;
        }
        else {
          int v38 = v35;
        }
        if (v38 <= -4096) {
          LOWORD(v38) = -4096;
        }
        CFTypeRef v17[2] = (8 * v38) ^ 0x8000;
        if (v36 >= 4095) {
          int v39 = 4095;
        }
        else {
          int v39 = v36;
        }
        if (v39 <= -4096) {
          LOWORD(v39) = -4096;
        }
        v17[3] = (8 * v39) ^ 0x8000;
        v24 += v16;
        uint64_t v40 = 2 * ((a7 == 1) | (v33 & 1));
        uint64_t v11 = (__int16 *)((char *)v11 + v40);
        uint64_t v13 = (__int16 *)((char *)v13 + v40);
        ++v33;
        v17 += 4;
      }
      while (a7 != v33);
      int8x8_t result = (_WORD *)((char *)result + a3);
      a5 = (_WORD *)((char *)a5 + v10);
      a2 = (__int16 *)((char *)a2 + v15);
      int16x8_t v14 = (__int16 *)((char *)v14 + v15);
      ++v8;
    }
    while (v8 != a8);
    int v41 = 0;
    int32x4_t v42 = &v13[v12];
    int v43 = &v14[v12];
    if (a8 <= a4) {
      int v44 = a4;
    }
    else {
      int v44 = a8;
    }
    int v45 = v44 - a8;
    do
    {
      if (v41 == v45) {
        break;
      }
      if (a7 == 1)
      {
        int16x8_t v46 = result + 4;
        int v47 = *v14;
        int v48 = *v13;
        int v49 = *v42;
        *int8x8_t result = *a5;
        if (v47 >= 4095) {
          int v50 = 4095;
        }
        else {
          int v50 = v47;
        }
        if (v50 <= -4096) {
          LOWORD(v50) = -4096;
        }
        result[1] = (8 * v50) ^ 0x8000;
        if (v48 >= 4095) {
          int v51 = 4095;
        }
        else {
          int v51 = v48;
        }
        if (v51 <= -4096) {
          LOWORD(v51) = -4096;
        }
        result[2] = (8 * v51) ^ 0x8000;
        if (v49 >= 4095) {
          int v52 = 4095;
        }
        else {
          int v52 = v49;
        }
        if (v52 <= -4096) {
          LOWORD(v52) = -4096;
        }
        result[3] = (8 * v52) ^ 0x8000;
        float32x2x2_t v53 = &a5[v16];
      }
      else
      {
        uint64_t v54 = 0;
        float32x2x2_t v53 = a5;
        int16x8_t v46 = result;
        do
        {
          int v55 = v14[v54];
          int v56 = *v13;
          int v57 = *v42;
          _WORD *v46 = *v53;
          if (v55 >= 4095) {
            int v58 = 4095;
          }
          else {
            int v58 = v55;
          }
          if (v58 <= -4096) {
            LOWORD(v58) = -4096;
          }
          v46[1] = (8 * v58) ^ 0x8000;
          if (v56 >= 4095) {
            int v59 = 4095;
          }
          else {
            int v59 = v56;
          }
          if (v59 <= -4096) {
            LOWORD(v59) = -4096;
          }
          v46[2] = (8 * v59) ^ 0x8000;
          if (v57 >= 4095) {
            int v60 = 4095;
          }
          else {
            int v60 = v57;
          }
          if (v60 <= -4096) {
            LOWORD(v60) = -4096;
          }
          v46[3] = (8 * v60) ^ 0x8000;
          v46 += 4;
          v53 += v16;
          uint64_t v61 = 2 * (v54 & 1);
          uint64_t v13 = (__int16 *)((char *)v13 + v61);
          int32x4_t v42 = (__int16 *)((char *)v42 + v61);
          ++v54;
        }
        while (a7 != v54);
      }
      uint64_t v62 = 0;
      do
      {
        int v63 = v43[v62];
        int v64 = *v13;
        int v65 = *v42;
        _WORD *v46 = *v53;
        if (v63 >= 4095) {
          int v66 = 4095;
        }
        else {
          int v66 = v63;
        }
        if (v66 <= -4096) {
          LOWORD(v66) = -4096;
        }
        v46[1] = (8 * v66) ^ 0x8000;
        if (v64 >= 4095) {
          int v67 = 4095;
        }
        else {
          int v67 = v64;
        }
        if (v67 <= -4096) {
          LOWORD(v67) = -4096;
        }
        v46[2] = (8 * v67) ^ 0x8000;
        if (v65 >= 4095) {
          int v68 = 4095;
        }
        else {
          int v68 = v65;
        }
        if (v68 <= -4096) {
          LOWORD(v68) = -4096;
        }
        v46[3] = (8 * v68) ^ 0x8000;
        v53 += v16;
        uint64_t v69 = 2 * ((a7 == 1) | (v62 & 1));
        uint64_t v13 = (__int16 *)((char *)v13 + v69);
        int32x4_t v42 = (__int16 *)((char *)v42 + v69);
        ++v62;
        v46 += 4;
      }
      while (a7 != v62);
      int8x8_t result = (_WORD *)((char *)result + a3);
      a5 = (_WORD *)((char *)a5 + v10);
      int16x8_t v14 = (__int16 *)((char *)v14 + v15);
      ++v41;
      int v43 = (__int16 *)((char *)v43 + v15);
    }
    while (v41 != a8);
  }
  return result;
}

int32x4_t *from_422_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(int32x4_t *result, int16x8_t *a2, int a3, int a4, unsigned int a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996600, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v101 = result;
    int v102 = a3;
    float32x2x2_t v103 = a2;
    unsigned int v104 = a5;
    int v105 = a4;
    int v106 = __cxa_guard_acquire(&qword_26A996600);
    a4 = v105;
    a5 = v104;
    a2 = v103;
    a3 = v102;
    int v107 = v106;
    int8x8_t result = v101;
    if (v107)
    {
      *(void *)&long long v108 = 0xF000F000F000F000;
      *((void *)&v108 + 1) = 0xF000F000F000F000;
      xmmword_26A996B20 = v108;
      __cxa_guard_release(&qword_26A996600);
      a4 = v105;
      a5 = v104;
      int8x8_t result = v101;
      a2 = v103;
      a3 = v102;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996608, memory_order_acquire) & 1) == 0)
  {
    unsigned int v109 = result;
    int v110 = a3;
    uint64_t v111 = a2;
    unsigned int v112 = a5;
    int v113 = a4;
    int v114 = __cxa_guard_acquire(&qword_26A996608);
    a4 = v113;
    a5 = v112;
    a2 = v111;
    a3 = v110;
    int v115 = v114;
    int8x8_t result = v109;
    if (v115)
    {
      *(void *)&long long v116 = 0xF000F000F000F000;
      *((void *)&v116 + 1) = 0xF000F000F000F000;
      xmmword_26A996B30 = v116;
      __cxa_guard_release(&qword_26A996608);
      a4 = v113;
      a5 = v112;
      int8x8_t result = v109;
      a2 = v111;
      a3 = v110;
    }
  }
  uint64_t v5 = 4 * a5;
  if (a4 <= (int)a5) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - a5;
  }
  int v7 = a4 - v6;
  if (v6 < 1)
  {
    uint64_t v68 = a5;
    int v65 = &a2[v68];
    int v66 = &a2[v5];
    int v67 = &v66[v68];
    if (v7 < 1) {
      return result;
    }
    goto LABEL_12;
  }
  uint64_t v8 = (int)a5 * (uint64_t)a3;
  uint64_t v9 = a5;
  uint64_t v10 = 2 * a5;
  int16x8_t v11 = (int16x8_t)xmmword_26A996B20;
  int16x8_t v12 = (int16x8_t)xmmword_26A996B30;
  uint64_t v13 = v5;
  uint64_t v14 = 6 * a5;
  uint64_t v15 = result + 4;
  int v16 = a4 - a5 + 1;
  v17.i64[0] = 0x8000800080008000;
  v17.i64[1] = 0x8000800080008000;
  v18.i64[0] = -1;
  v18.i64[1] = -1;
  i32 = (float *)result[4].i32;
  do
  {
    int v20 = (int32x4_t *)((char *)v15 + v8);
    int v21 = (float *)((char *)v15[-4].i32 + v8);
    int v22 = (float *)v15[-4].i32;
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13], v11), v12), 3uLL), v17);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v9 + v13], v11), v12), 3uLL), v17);
    int16x8_t v25 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)0, 2uLL), (uint16x8_t)v23);
    int16x8_t v26 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v24, (int8x16_t)0, 2uLL), (uint16x8_t)v24);
    int16x8_t v27 = vzip1q_s16(v23, v25);
    int16x8_t v28 = vzip1q_s16(v24, v26);
    int16x8_t v29 = vzip2q_s16(v23, v25);
    int16x8_t v30 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v11), v12), 3uLL), v17);
    float32x2x2_t v31 = (float32x2x2_t)vzip1q_s16(v18, v30);
    float32x2x2_t v32 = (float32x2x2_t)vzip2q_s16(v18, v30);
    int32x4_t v33 = (int32x4_t)vzip1q_s16(v27, v28);
    int32x4_t v34 = (int32x4_t)vzip2q_s16(v27, v28);
    vst2_f32(v22, v31);
    v15[-3] = vzip2q_s32((int32x4_t)v31, v33);
    int v35 = (float *)v15[-2].i32;
    vst2_f32(v35, v32);
    v15[-1] = vzip2q_s32((int32x4_t)v32, v34);
    int16x8_t v36 = vzip2q_s16(v24, v26);
    int16x8_t v37 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v9], v11), v12), 3uLL), v17);
    float32x2x2_t v38 = (float32x2x2_t)vzip1q_s16(v18, v37);
    float32x2x2_t v39 = (float32x2x2_t)vzip2q_s16(v18, v37);
    int32x4_t v40 = (int32x4_t)vzip1q_s16(v29, v36);
    int32x4_t v41 = (int32x4_t)vzip2q_s16(v29, v36);
    vst2_f32(i32, v38);
    i32 = (float *)((char *)i32 + a3);
    v15[1] = vzip2q_s32((int32x4_t)v38, v40);
    int32x4_t v42 = (float *)v15[2].i32;
    vst2_f32(v42, v39);
    v15[3] = vzip2q_s32((int32x4_t)v39, v41);
    int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v14], v11), v12), 3uLL), v17);
    int16x8_t v44 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v9 + v14], v11), v12), 3uLL), v17);
    int16x8_t v45 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v43, (int8x16_t)0, 2uLL), (uint16x8_t)v43);
    int16x8_t v46 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL), (uint16x8_t)v44);
    int16x8_t v47 = vzip1q_s16(v43, v45);
    int16x8_t v48 = vzip1q_s16(v44, v46);
    int16x8_t v49 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v10], v11), v12), 3uLL), v17);
    float32x2x2_t v50 = (float32x2x2_t)vzip1q_s16(v18, v49);
    float32x2x2_t v51 = (float32x2x2_t)vzip2q_s16(v18, v49);
    int32x4_t v52 = (int32x4_t)vzip1q_s16(v47, v48);
    vst2_f32(v21, v50);
    int32x4_t v53 = (int32x4_t)vzip2q_s16(v47, v48);
    v20[-3] = vzip2q_s32((int32x4_t)v50, v52);
    uint64_t v54 = (float *)((char *)v15[-2].i32 + v8);
    vst2_f32(v54, v51);
    v20[-1] = vzip2q_s32((int32x4_t)v51, v53);
    int16x8_t v55 = a2[v9 + v10];
    ++a2;
    --v7;
    int16x8_t v56 = vzip2q_s16(v43, v45);
    int16x8_t v57 = vzip2q_s16(v44, v46);
    int16x8_t v58 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v55, v11), v12), 3uLL), v17);
    float32x2x2_t v59 = (float32x2x2_t)vzip1q_s16(v18, v58);
    int32x4_t v60 = (int32x4_t)vzip1q_s16(v56, v57);
    uint64_t v61 = (float *)((char *)v15->i32 + v8);
    vst2_f32(v61, v59);
    v61 += 4;
    float32x2x2_t v62 = (float32x2x2_t)vzip2q_s16(v18, v58);
    int32x4_t v63 = (int32x4_t)vzip2q_s16(v56, v57);
    int v64 = (float *)((char *)v15[2].i32 + v8);
    vst2_f32(v64, v62);
    *(int32x4_t *)uint64_t v61 = vzip2q_s32((int32x4_t)v59, v60);
    v20[3] = vzip2q_s32((int32x4_t)v62, v63);
    --v16;
    uint64_t v15 = (int32x4_t *)i32;
  }
  while (v16 > 1);
  int v65 = &a2[v9];
  int v66 = &a2[v13];
  int v67 = &a2[v9 + v13];
  int8x8_t result = (int32x4_t *)(i32 - 16);
  if (v7 >= 1)
  {
LABEL_12:
    int16x8_t v69 = (int16x8_t)xmmword_26A996B20;
    int16x8_t v70 = (int16x8_t)xmmword_26A996B30;
    unsigned int v71 = v7 + 1;
    long long v72 = result + 4;
    v73.i64[0] = 0x8000800080008000;
    v73.i64[1] = 0x8000800080008000;
    v74.i64[0] = -1;
    v74.i64[1] = -1;
    int16x8_t v75 = (float *)result[4].i32;
    do
    {
      int16x8_t v76 = *v66++;
      int v77 = (float *)v72[-4].i32;
      int16x8_t v78 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v76, v69), v70), 3uLL), v73);
      int16x8_t v79 = *v67++;
      int16x8_t v80 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v79, v69), v70), 3uLL), v73);
      int16x8_t v81 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v78, (int8x16_t)0, 2uLL), (uint16x8_t)v78);
      int16x8_t v82 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v80, (int8x16_t)0, 2uLL), (uint16x8_t)v80);
      int16x8_t v83 = vzip1q_s16(v78, v81);
      int16x8_t v84 = vzip1q_s16(v80, v82);
      int16x8_t v85 = vzip2q_s16(v78, v81);
      int16x8_t v86 = vzip2q_s16(v80, v82);
      int16x8_t v87 = *a2++;
      int16x8_t v88 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v87, v69), v70), 3uLL), v73);
      float32x2x2_t v89 = (float32x2x2_t)vzip1q_s16(v74, v88);
      float32x2x2_t v90 = (float32x2x2_t)vzip2q_s16(v74, v88);
      int32x4_t v91 = (int32x4_t)vzip1q_s16(v83, v84);
      int32x4_t v92 = (int32x4_t)vzip2q_s16(v83, v84);
      vst2_f32(v77, v89);
      v72[-3] = vzip2q_s32((int32x4_t)v89, v91);
      float32x2x2_t v93 = (float *)v72[-2].i32;
      vst2_f32(v93, v90);
      v72[-1] = vzip2q_s32((int32x4_t)v90, v92);
      int16x8_t v94 = *v65++;
      int16x8_t v95 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v94, v69), v70), 3uLL), v73);
      float32x2x2_t v96 = (float32x2x2_t)vzip1q_s16(v74, v95);
      int32x4_t v97 = (int32x4_t)vzip1q_s16(v85, v86);
      vst2_f32(v75, v96);
      int16x8_t v75 = (float *)((char *)v75 + a3);
      float32x2x2_t v98 = (float32x2x2_t)vzip2q_s16(v74, v95);
      int32x4_t v99 = (int32x4_t)vzip2q_s16(v85, v86);
      int16x8_t v100 = (float *)v72[2].i32;
      vst2_f32(v100, v98);
      v72[1] = vzip2q_s32((int32x4_t)v96, v97);
      v72[3] = vzip2q_s32((int32x4_t)v98, v99);
      --v71;
      long long v72 = (int32x4_t *)v75;
    }
    while (v71 > 1);
  }
  return result;
}

int32x4_t *from_422_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(int32x4_t *result, int16x8_t *a2, int a3, int a4, unsigned int a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996610, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v101 = result;
    int v102 = a3;
    float32x2x2_t v103 = a2;
    unsigned int v104 = a5;
    int v105 = a4;
    int v106 = __cxa_guard_acquire(&qword_26A996610);
    a4 = v105;
    a5 = v104;
    a2 = v103;
    a3 = v102;
    int v107 = v106;
    int8x8_t result = v101;
    if (v107)
    {
      *(void *)&long long v108 = 0xF000F000F000F000;
      *((void *)&v108 + 1) = 0xF000F000F000F000;
      xmmword_26A996B40 = v108;
      __cxa_guard_release(&qword_26A996610);
      a4 = v105;
      a5 = v104;
      int8x8_t result = v101;
      a2 = v103;
      a3 = v102;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996618, memory_order_acquire) & 1) == 0)
  {
    unsigned int v109 = result;
    int v110 = a3;
    uint64_t v111 = a2;
    unsigned int v112 = a5;
    int v113 = a4;
    int v114 = __cxa_guard_acquire(&qword_26A996618);
    a4 = v113;
    a5 = v112;
    a2 = v111;
    a3 = v110;
    int v115 = v114;
    int8x8_t result = v109;
    if (v115)
    {
      *(void *)&long long v116 = 0xF000F000F000F000;
      *((void *)&v116 + 1) = 0xF000F000F000F000;
      xmmword_26A996B50 = v116;
      __cxa_guard_release(&qword_26A996618);
      a4 = v113;
      a5 = v112;
      int8x8_t result = v109;
      a2 = v111;
      a3 = v110;
    }
  }
  uint64_t v5 = 4 * a5;
  if (a4 <= (int)a5) {
    int v6 = 0;
  }
  else {
    int v6 = a4 - a5;
  }
  int v7 = a4 - v6;
  if (v6 < 1)
  {
    uint64_t v68 = a5;
    int v65 = &a2[v68];
    int v66 = &a2[v5];
    int v67 = &v66[v68];
    if (v7 < 1) {
      return result;
    }
    goto LABEL_12;
  }
  uint64_t v8 = (int)a5 * (uint64_t)a3;
  uint64_t v9 = a5;
  uint64_t v10 = 2 * a5;
  int16x8_t v11 = (int16x8_t)xmmword_26A996B40;
  int16x8_t v12 = (int16x8_t)xmmword_26A996B50;
  uint64_t v13 = v5;
  uint64_t v14 = 6 * a5;
  uint64_t v15 = result + 4;
  int v16 = a4 - a5 + 1;
  v17.i64[0] = 0x8000800080008000;
  v17.i64[1] = 0x8000800080008000;
  v18.i64[0] = -1;
  v18.i64[1] = -1;
  i32 = (float *)result[4].i32;
  do
  {
    int v20 = (int32x4_t *)((char *)v15 + v8);
    int v21 = (float *)((char *)v15[-4].i32 + v8);
    int v22 = (float *)v15[-4].i32;
    int16x8_t v23 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13], v11), v12), 3uLL), v17);
    int16x8_t v24 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v9 + v13], v11), v12), 3uLL), v17);
    int16x8_t v25 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)0, 2uLL), (uint16x8_t)v23);
    int16x8_t v26 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v24, (int8x16_t)0, 2uLL), (uint16x8_t)v24);
    int16x8_t v27 = vzip1q_s16(v23, v25);
    int16x8_t v28 = vzip1q_s16(v24, v26);
    int16x8_t v29 = vzip2q_s16(v23, v25);
    int16x8_t v30 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v11), v12), 3uLL), v17);
    float32x2x2_t v31 = (float32x2x2_t)vzip1q_s16(v18, v30);
    float32x2x2_t v32 = (float32x2x2_t)vzip2q_s16(v18, v30);
    int32x4_t v33 = (int32x4_t)vzip1q_s16(v27, v28);
    int32x4_t v34 = (int32x4_t)vzip2q_s16(v27, v28);
    vst2_f32(v22, v31);
    v15[-3] = vzip2q_s32((int32x4_t)v31, v33);
    int v35 = (float *)v15[-2].i32;
    vst2_f32(v35, v32);
    v15[-1] = vzip2q_s32((int32x4_t)v32, v34);
    int16x8_t v36 = vzip2q_s16(v24, v26);
    int16x8_t v37 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v9], v11), v12), 3uLL), v17);
    float32x2x2_t v38 = (float32x2x2_t)vzip1q_s16(v18, v37);
    float32x2x2_t v39 = (float32x2x2_t)vzip2q_s16(v18, v37);
    int32x4_t v40 = (int32x4_t)vzip1q_s16(v29, v36);
    int32x4_t v41 = (int32x4_t)vzip2q_s16(v29, v36);
    vst2_f32(i32, v38);
    i32 = (float *)((char *)i32 + a3);
    v15[1] = vzip2q_s32((int32x4_t)v38, v40);
    int32x4_t v42 = (float *)v15[2].i32;
    vst2_f32(v42, v39);
    v15[3] = vzip2q_s32((int32x4_t)v39, v41);
    int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v14], v11), v12), 3uLL), v17);
    int16x8_t v44 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v9 + v14], v11), v12), 3uLL), v17);
    int16x8_t v45 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v43, (int8x16_t)0, 2uLL), (uint16x8_t)v43);
    int16x8_t v46 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v44, (int8x16_t)0, 2uLL), (uint16x8_t)v44);
    int16x8_t v47 = vzip1q_s16(v43, v45);
    int16x8_t v48 = vzip1q_s16(v44, v46);
    int16x8_t v49 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v10], v11), v12), 3uLL), v17);
    float32x2x2_t v50 = (float32x2x2_t)vzip1q_s16(v18, v49);
    float32x2x2_t v51 = (float32x2x2_t)vzip2q_s16(v18, v49);
    int32x4_t v52 = (int32x4_t)vzip1q_s16(v47, v48);
    vst2_f32(v21, v50);
    int32x4_t v53 = (int32x4_t)vzip2q_s16(v47, v48);
    v20[-3] = vzip2q_s32((int32x4_t)v50, v52);
    uint64_t v54 = (float *)((char *)v15[-2].i32 + v8);
    vst2_f32(v54, v51);
    v20[-1] = vzip2q_s32((int32x4_t)v51, v53);
    int16x8_t v55 = a2[v9 + v10];
    ++a2;
    --v7;
    int16x8_t v56 = vzip2q_s16(v43, v45);
    int16x8_t v57 = vzip2q_s16(v44, v46);
    int16x8_t v58 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v55, v11), v12), 3uLL), v17);
    float32x2x2_t v59 = (float32x2x2_t)vzip1q_s16(v18, v58);
    int32x4_t v60 = (int32x4_t)vzip1q_s16(v56, v57);
    uint64_t v61 = (float *)((char *)v15->i32 + v8);
    vst2_f32(v61, v59);
    v61 += 4;
    float32x2x2_t v62 = (float32x2x2_t)vzip2q_s16(v18, v58);
    int32x4_t v63 = (int32x4_t)vzip2q_s16(v56, v57);
    int v64 = (float *)((char *)v15[2].i32 + v8);
    vst2_f32(v64, v62);
    *(int32x4_t *)uint64_t v61 = vzip2q_s32((int32x4_t)v59, v60);
    v20[3] = vzip2q_s32((int32x4_t)v62, v63);
    --v16;
    uint64_t v15 = (int32x4_t *)i32;
  }
  while (v16 > 1);
  int v65 = &a2[v9];
  int v66 = &a2[v13];
  int v67 = &a2[v9 + v13];
  int8x8_t result = (int32x4_t *)(i32 - 16);
  if (v7 >= 1)
  {
LABEL_12:
    int16x8_t v69 = (int16x8_t)xmmword_26A996B40;
    int16x8_t v70 = (int16x8_t)xmmword_26A996B50;
    unsigned int v71 = v7 + 1;
    long long v72 = result + 4;
    v73.i64[0] = 0x8000800080008000;
    v73.i64[1] = 0x8000800080008000;
    v74.i64[0] = -1;
    v74.i64[1] = -1;
    int16x8_t v75 = (float *)result[4].i32;
    do
    {
      int16x8_t v76 = *v66++;
      int v77 = (float *)v72[-4].i32;
      int16x8_t v78 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v76, v69), v70), 3uLL), v73);
      int16x8_t v79 = *v67++;
      int16x8_t v80 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v79, v69), v70), 3uLL), v73);
      int16x8_t v81 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v78, (int8x16_t)0, 2uLL), (uint16x8_t)v78);
      int16x8_t v82 = (int16x8_t)vrhaddq_u16((uint16x8_t)vextq_s8((int8x16_t)v80, (int8x16_t)0, 2uLL), (uint16x8_t)v80);
      int16x8_t v83 = vzip1q_s16(v78, v81);
      int16x8_t v84 = vzip1q_s16(v80, v82);
      int16x8_t v85 = vzip2q_s16(v78, v81);
      int16x8_t v86 = vzip2q_s16(v80, v82);
      int16x8_t v87 = *a2++;
      int16x8_t v88 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v87, v69), v70), 3uLL), v73);
      float32x2x2_t v89 = (float32x2x2_t)vzip1q_s16(v74, v88);
      float32x2x2_t v90 = (float32x2x2_t)vzip2q_s16(v74, v88);
      int32x4_t v91 = (int32x4_t)vzip1q_s16(v83, v84);
      int32x4_t v92 = (int32x4_t)vzip2q_s16(v83, v84);
      vst2_f32(v77, v89);
      v72[-3] = vzip2q_s32((int32x4_t)v89, v91);
      float32x2x2_t v93 = (float *)v72[-2].i32;
      vst2_f32(v93, v90);
      v72[-1] = vzip2q_s32((int32x4_t)v90, v92);
      int16x8_t v94 = *v65++;
      int16x8_t v95 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v94, v69), v70), 3uLL), v73);
      float32x2x2_t v96 = (float32x2x2_t)vzip1q_s16(v74, v95);
      int32x4_t v97 = (int32x4_t)vzip1q_s16(v85, v86);
      vst2_f32(v75, v96);
      int16x8_t v75 = (float *)((char *)v75 + a3);
      float32x2x2_t v98 = (float32x2x2_t)vzip2q_s16(v74, v95);
      int32x4_t v99 = (int32x4_t)vzip2q_s16(v85, v86);
      int16x8_t v100 = (float *)v72[2].i32;
      vst2_f32(v100, v98);
      v72[1] = vzip2q_s32((int32x4_t)v96, v97);
      v72[3] = vzip2q_s32((int32x4_t)v98, v99);
      --v71;
      long long v72 = (int32x4_t *)v75;
    }
    while (v71 > 1);
  }
  return result;
}

_WORD *from_422_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(_WORD *result, __int16 *a2, int a3, int a4, int a5, int a6)
{
  if (a6 >= 1 && a5 >= 1)
  {
    int v6 = 0;
    uint64_t v7 = (a6 * a5);
    uint64_t v8 = &a2[(4 * v7)];
    uint64_t v9 = v7;
    uint64_t v10 = &v8[v7];
    int16x8_t v11 = &a2[v9];
    uint64_t v12 = 2 * a5;
    do
    {
      if (v6 == (a4 & ~(a4 >> 31))) {
        break;
      }
      if (a5 == 1)
      {
        int v13 = *a2;
        int v14 = *v8;
        int v15 = *v10;
        *int8x8_t result = -1;
        if (v13 >= 4095) {
          int v13 = 4095;
        }
        if (v13 <= -4096) {
          LOWORD(v13) = -4096;
        }
        result[1] = (8 * v13) ^ 0x8000;
        if (v14 >= 4095) {
          int v16 = 4095;
        }
        else {
          int v16 = v14;
        }
        if (v16 <= -4096) {
          LOWORD(v16) = -4096;
        }
        result[2] = (8 * v16) ^ 0x8000;
        if (v15 >= 4095) {
          int v17 = 4095;
        }
        else {
          int v17 = v15;
        }
        if (v17 <= -4096) {
          LOWORD(v17) = -4096;
        }
        result[3] = (8 * v17) ^ 0x8000;
        int16x8_t v18 = result + 4;
      }
      else
      {
        uint64_t v19 = 0;
        int16x8_t v18 = result;
        do
        {
          int v20 = a2[v19];
          int v21 = *v8;
          int v22 = *v10;
          _WORD *v18 = -1;
          if (v20 >= 4095) {
            int v20 = 4095;
          }
          if (v20 <= -4096) {
            LOWORD(v20) = -4096;
          }
          v18[1] = (8 * v20) ^ 0x8000;
          if (v21 >= 4095) {
            int v23 = 4095;
          }
          else {
            int v23 = v21;
          }
          if (v23 <= -4096) {
            LOWORD(v23) = -4096;
          }
          CFTypeRef v18[2] = (8 * v23) ^ 0x8000;
          if (v22 >= 4095) {
            int v24 = 4095;
          }
          else {
            int v24 = v22;
          }
          if (v24 <= -4096) {
            LOWORD(v24) = -4096;
          }
          v18[3] = (8 * v24) ^ 0x8000;
          v18 += 4;
          uint64_t v25 = 2 * (v19 & 1);
          uint64_t v8 = (__int16 *)((char *)v8 + v25);
          uint64_t v10 = (__int16 *)((char *)v10 + v25);
          ++v19;
        }
        while (a5 != v19);
      }
      uint64_t v26 = 0;
      do
      {
        int v27 = v11[v26];
        int v28 = *v8;
        int v29 = *v10;
        _WORD *v18 = -1;
        if (v27 >= 4095) {
          int v27 = 4095;
        }
        if (v27 <= -4096) {
          LOWORD(v27) = -4096;
        }
        v18[1] = (8 * v27) ^ 0x8000;
        if (v28 >= 4095) {
          int v30 = 4095;
        }
        else {
          int v30 = v28;
        }
        if (v30 <= -4096) {
          LOWORD(v30) = -4096;
        }
        CFTypeRef v18[2] = (8 * v30) ^ 0x8000;
        if (v29 >= 4095) {
          int v31 = 4095;
        }
        else {
          int v31 = v29;
        }
        if (v31 <= -4096) {
          LOWORD(v31) = -4096;
        }
        v18[3] = (8 * v31) ^ 0x8000;
        uint64_t v32 = 2 * ((a5 == 1) | (v26 & 1));
        uint64_t v8 = (__int16 *)((char *)v8 + v32);
        uint64_t v10 = (__int16 *)((char *)v10 + v32);
        ++v26;
        v18 += 4;
      }
      while (a5 != v26);
      int8x8_t result = (_WORD *)((char *)result + a3);
      a2 = (__int16 *)((char *)a2 + v12);
      int16x8_t v11 = (__int16 *)((char *)v11 + v12);
      ++v6;
    }
    while (v6 != a6);
    int v33 = 0;
    int32x4_t v34 = &v10[v9];
    int v35 = &v11[v9];
    if (a6 <= a4) {
      int v36 = a4;
    }
    else {
      int v36 = a6;
    }
    int v37 = v36 - a6;
    do
    {
      if (v33 == v37) {
        break;
      }
      if (a5 == 1)
      {
        int v38 = *v11;
        int v39 = *v10;
        int v40 = *v34;
        *int8x8_t result = -1;
        if (v38 >= 4095) {
          int v38 = 4095;
        }
        if (v38 <= -4096) {
          LOWORD(v38) = -4096;
        }
        result[1] = (8 * v38) ^ 0x8000;
        if (v39 >= 4095) {
          int v41 = 4095;
        }
        else {
          int v41 = v39;
        }
        if (v41 <= -4096) {
          LOWORD(v41) = -4096;
        }
        result[2] = (8 * v41) ^ 0x8000;
        if (v40 >= 4095) {
          int v42 = 4095;
        }
        else {
          int v42 = v40;
        }
        if (v42 <= -4096) {
          LOWORD(v42) = -4096;
        }
        result[3] = (8 * v42) ^ 0x8000;
        int16x8_t v43 = result + 4;
      }
      else
      {
        uint64_t v44 = 0;
        int16x8_t v43 = result;
        do
        {
          int v45 = v11[v44];
          int v46 = *v10;
          int v47 = *v34;
          *int16x8_t v43 = -1;
          if (v45 >= 4095) {
            int v45 = 4095;
          }
          if (v45 <= -4096) {
            LOWORD(v45) = -4096;
          }
          v43[1] = (8 * v45) ^ 0x8000;
          if (v46 >= 4095) {
            int v48 = 4095;
          }
          else {
            int v48 = v46;
          }
          if (v48 <= -4096) {
            LOWORD(v48) = -4096;
          }
          v43[2] = (8 * v48) ^ 0x8000;
          if (v47 >= 4095) {
            int v49 = 4095;
          }
          else {
            int v49 = v47;
          }
          if (v49 <= -4096) {
            LOWORD(v49) = -4096;
          }
          v43[3] = (8 * v49) ^ 0x8000;
          v43 += 4;
          uint64_t v50 = 2 * (v44 & 1);
          uint64_t v10 = (__int16 *)((char *)v10 + v50);
          int32x4_t v34 = (__int16 *)((char *)v34 + v50);
          ++v44;
        }
        while (a5 != v44);
      }
      uint64_t v51 = 0;
      do
      {
        int v52 = v35[v51];
        int v53 = *v10;
        int v54 = *v34;
        *int16x8_t v43 = -1;
        if (v52 >= 4095) {
          int v52 = 4095;
        }
        if (v52 <= -4096) {
          LOWORD(v52) = -4096;
        }
        v43[1] = (8 * v52) ^ 0x8000;
        if (v53 >= 4095) {
          int v55 = 4095;
        }
        else {
          int v55 = v53;
        }
        if (v55 <= -4096) {
          LOWORD(v55) = -4096;
        }
        v43[2] = (8 * v55) ^ 0x8000;
        if (v54 >= 4095) {
          int v56 = 4095;
        }
        else {
          int v56 = v54;
        }
        if (v56 <= -4096) {
          LOWORD(v56) = -4096;
        }
        v43[3] = (8 * v56) ^ 0x8000;
        uint64_t v57 = 2 * ((a5 == 1) | (v51 & 1));
        uint64_t v10 = (__int16 *)((char *)v10 + v57);
        int32x4_t v34 = (__int16 *)((char *)v34 + v57);
        ++v51;
        v43 += 4;
      }
      while (a5 != v51);
      int8x8_t result = (_WORD *)((char *)result + a3);
      int16x8_t v11 = (__int16 *)((char *)v11 + v12);
      ++v33;
      int v35 = (__int16 *)((char *)v35 + v12);
    }
    while (v33 != a6);
  }
  return result;
}

double from_444_to_2vuy_4xH<false>(char *a1, int16x8_t *a2, int a3, int a4, unsigned int a5, int8x16_t a6)
{
  uint64_t v6 = a5 >> 1;
  uint64_t v7 = (4 * v6);
  uint64_t v8 = (6 * v6);
  uint64_t v9 = (8 * v6);
  uint64_t v10 = (10 * v6);
  uint64_t v11 = a3;
  int v12 = a4 - a5;
  if (a4 <= (int)a5) {
    int v13 = 0;
  }
  else {
    int v13 = a4 - a5;
  }
  int v14 = a4 - v13;
  if (v13 < 2)
  {
    uint64_t v57 = a5 >> 1;
    int v45 = &a2[v57];
    int v56 = &a2[a5 & 0xFFFFFFFE];
    int v46 = &v56[v57];
    int v47 = &a2[v7];
    int v48 = &v47[v57];
    int v49 = &a2[v8];
    uint64_t v50 = &v49[v57];
    uint64_t v51 = &a2[v9];
    int v52 = &v51[v57];
    int v53 = &a2[v10];
    int v54 = &v53[v57];
    int v55 = &a1[(int)a5 * (uint64_t)a3];
    if (!(v14 + v13)) {
      return *(double *)a6.i64;
    }
  }
  else
  {
    uint64_t v15 = v6;
    uint64_t v16 = (int)a5 * (uint64_t)a3;
    uint64_t v17 = v7;
    uint64_t v18 = v8;
    uint64_t v19 = v9;
    uint64_t v20 = v10;
    uint64_t v21 = 16 * v6 + 16 * v10;
    a6.i16[0] = -32640;
    a6.i8[2] = 0x80;
    a6.i8[3] = 0x80;
    a6.i8[4] = 0x80;
    a6.i8[5] = 0x80;
    a6.i8[6] = 0x80;
    a6.i8[7] = 0x80;
    a6.i8[8] = 0x80;
    a6.i8[9] = 0x80;
    a6.i8[10] = 0x80;
    a6.i8[11] = 0x80;
    a6.i8[12] = 0x80;
    a6.i8[13] = 0x80;
    a6.i8[14] = 0x80;
    a6.i8[15] = 0x80;
    v23.i64[0] = 0x101010101010101;
    v23.i64[1] = 0x101010101010101;
    v24.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v24.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int v13 = v12;
    do
    {
      int32x4_t v25 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(*a2), a2[v6]);
      int16x8_t v26 = a2[v6 + v19];
      int8x16_t v27 = vqmovn_high_s16(vqmovn_s16(a2[v6 + v17]), v26);
      unsigned long long v28 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(a2[v17]), a2[v19]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
      *(int8x8_t *)v26.i8 = vqmovun_s16((int16x8_t)v28);
      *(int8x8_t *)&unsigned long long v28 = vqmovun_s16((int16x8_t)(*(_OWORD *)&v27 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)));
      int32x4_t v29 = (int32x4_t)vzip1q_s8((int8x16_t)v26, (int8x16_t)v28);
      int8x16_t v30 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v25, vrev64q_s32(v25)), a6), v23), v24);
      int8x16_t v31 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v29, vrev64q_s32(v29)), a6), v23), v24);
      uint64_t v32 = a1;
      vst2_s8(v32, *(int8x8x2_t *)((char *)&v30 - 8));
      uint64_t v22 = v11 + v16;
      int v33 = (int8x16_t *)&v32[v22];
      *(int8x16_t *)&a1[v11] = vzip2q_s8(v31, v30);
      unsigned int v34 = v13;
      int32x4_t v35 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[2 * v6]), a2[3 * v6]);
      int16x8_t v36 = a2[v6 + v18];
      int8x16_t v37 = vqmovn_high_s16(vqmovn_s16(a2[v18]), a2[v20]);
      int16x8_t v38 = *(int16x8_t *)((char *)a2++ + v21);
      int v39 = &a1[v16];
      a1 += 2 * v11;
      v14 -= 2;
      int8x16_t v40 = vqmovn_high_s16(vqmovn_s16(v36), v38);
      unsigned long long v41 = *(_OWORD *)&v37 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
      *(int8x8_t *)v38.i8 = vqmovun_s16((int16x8_t)v41);
      *(int8x8_t *)&unsigned long long v41 = vqmovun_s16((int16x8_t)(*(_OWORD *)&v40 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)));
      int32x4_t v42 = (int32x4_t)vzip1q_s8((int8x16_t)v38, (int8x16_t)v41);
      int8x16_t v43 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v35, vrev64q_s32(v35)), a6), v23), v24);
      int8x16_t v44 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v42, vrev64q_s32(v42)), a6), v23), v24);
      vst2_s8(v39, *(int8x8x2_t *)((char *)&v43 - 8));
      int8x16_t *v33 = vzip2q_s8(v44, v43);
      int v13 = v34 - 2;
    }
    while (v34 > 3);
    int v45 = &a2[v15];
    int v46 = &a2[3 * v6];
    int v47 = &a2[v17];
    int v48 = &a2[v15 + v17];
    int v49 = &a2[v18];
    uint64_t v50 = &a2[v15 + v18];
    uint64_t v51 = &a2[v19];
    int v52 = &a2[v15 + v19];
    int v53 = &a2[v20];
    int v54 = &a2[v15 + v20];
    int v55 = &a1[v16];
    int v56 = &a2[2 * v6];
    if (!(v14 + v13)) {
      return *(double *)a6.i64;
    }
  }
  if (v13 >= 1)
  {
    a6 = vqmovn_high_s16(vqmovn_s16(*v56), *v46);
    unsigned long long v58 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(*v49), *v53) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v58 = vqmovun_s16((int16x8_t)v58);
    unsigned long long v59 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(*v50), *v54) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v59 = vqmovun_s16((int16x8_t)v59);
    int32x4_t v60 = (int32x4_t)vzip1q_s8((int8x16_t)v58, (int8x16_t)v59);
    v78.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32(v60, vrev64q_s32(v60)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    *(uint8x8_t *)a6.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a6, vrev64q_s32((int32x4_t)a6)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
    v78.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a6.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    vst2_s8(v55, v78);
  }
  if (v14 > 1)
  {
    uint64_t v61 = 0;
    a6.i16[0] = -32640;
    a6.i8[2] = 0x80;
    a6.i8[3] = 0x80;
    a6.i8[4] = 0x80;
    a6.i8[5] = 0x80;
    a6.i8[6] = 0x80;
    a6.i8[7] = 0x80;
    a6.i8[8] = 0x80;
    a6.i8[9] = 0x80;
    a6.i8[10] = 0x80;
    a6.i8[11] = 0x80;
    a6.i8[12] = 0x80;
    a6.i8[13] = 0x80;
    a6.i8[14] = 0x80;
    a6.i8[15] = 0x80;
    v63.i64[0] = 0x101010101010101;
    v63.i64[1] = 0x101010101010101;
    v64.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v64.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    int v65 = a1;
    do
    {
      unsigned int v66 = v14;
      int32x4_t v67 = (int32x4_t)vqmovn_high_s16(vqmovn_s16(a2[v61]), v45[v61]);
      int16x8_t v68 = v52[v61];
      int8x16_t v69 = vqmovn_high_s16(vqmovn_s16(v48[v61]), v68);
      unsigned long long v70 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(v47[v61]), v51[v61]) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
      *(int8x8_t *)v68.i8 = vqmovun_s16((int16x8_t)v70);
      *(int8x8_t *)&unsigned long long v70 = vqmovun_s16((int16x8_t)(*(_OWORD *)&v69 & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL)));
      int32x4_t v71 = (int32x4_t)vzip1q_s8((int8x16_t)v68, (int8x16_t)v70);
      int8x16_t v72 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v67, vrev64q_s32(v67)), a6), v63), v64);
      int8x16_t v73 = (int8x16_t)vminq_u8(vmaxq_u8((uint8x16_t)veorq_s8((int8x16_t)vuzp1q_s32(v71, vrev64q_s32(v71)), a6), v63), v64);
      vst2_s8(v65, *(int8x8x2_t *)((char *)&v72 - 8));
      uint64_t v62 = 2 * v11;
      v65 += v62;
      *(int8x16_t *)&a1[v11] = vzip2q_s8(v73, v72);
      a1 = v65;
      v14 -= 2;
      ++v61;
    }
    while (v66 > 3);
    a2 = (int16x8_t *)((char *)a2 + v61 * 16);
    int v45 = (int16x8_t *)((char *)v45 + v61 * 16);
    int v47 = (int16x8_t *)((char *)v47 + v61 * 16);
    int v48 = (int16x8_t *)((char *)v48 + v61 * 16);
    uint64_t v51 = (int16x8_t *)((char *)v51 + v61 * 16);
    int v52 = (int16x8_t *)((char *)v52 + v61 * 16);
  }
  if (v14 == 1)
  {
    a6 = vqmovn_high_s16(vqmovn_s16(*a2), *v45);
    unsigned long long v74 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(*v47), *v51) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v74 = vqmovun_s16((int16x8_t)v74);
    unsigned long long v75 = *(_OWORD *)&vqmovn_high_s16(vqmovn_s16(*v48), *v52) & __PAIR128__(0xFF00FF00FF00FFLL, 0xFF00FF00FF00FFLL);
    *(int8x8_t *)&unsigned long long v75 = vqmovun_s16((int16x8_t)v75);
    int32x4_t v76 = (int32x4_t)vzip1q_s8((int8x16_t)v74, (int8x16_t)v75);
    v79.val[0] = (int8x8_t)vmin_u8(vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32(v76, vrev64q_s32(v76)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101), (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    *(uint8x8_t *)a6.i8 = vmax_u8((uint8x8_t)veor_s8((int8x8_t)*(_OWORD *)&vuzp1q_s32((int32x4_t)a6, vrev64q_s32((int32x4_t)a6)), (int8x8_t)0x8080808080808080), (uint8x8_t)0x101010101010101);
    v79.val[1] = (int8x8_t)vmin_u8(*(uint8x8_t *)a6.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL);
    vst2_s8(a1, v79);
  }
  return *(double *)a6.i64;
}

_DWORD *from_444_to_AYUV_UYVY_WxH<(PixelFormat)846624121,(AlphaOutputMethod)0>(_DWORD *result, unsigned __int16 *a2, int a3, int a4, unsigned int a5, int a6, double a7, double a8, double a9, int16x8_t a10)
{
  if (a5 == 1) {
    int v10 = 1;
  }
  else {
    int v10 = 2;
  }
  if (a6 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a6 * a5;
    uint64_t v13 = (4 * v12);
    uint64_t v14 = v12;
    int v15 = a4 & ~(a4 >> 31);
    if (a5 == 1)
    {
      int v16 = a6;
      while (v15)
      {
        uint64_t v17 = &a2[v13 + v14];
        uint64_t v18 = &a2[v14];
        a10.i16[0] = a2[v13];
        a10.i16[1] = *a2++;
        a10.i16[2] = *v17;
        uint64_t v19 = v17 + 1;
        a10.i16[3] = *v18;
        *(int8x8_t *)a10.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(*(int16x4_t *)a10.i8, (int16x4_t)0x7E007E007E007ELL), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
        *int8x8_t result = vmovn_s16(a10).u32[0];
        int8x8_t result = (_DWORD *)((char *)result + v11);
        --v15;
        if (!--v16)
        {
          uint64_t v20 = &a2[v12];
          goto LABEL_25;
        }
      }
      uint64_t v19 = &a2[v13 + v14];
      uint64_t v20 = &a2[v14];
LABEL_25:
      uint64_t v37 = 0;
      if (a6 <= a4) {
        int v38 = a4;
      }
      else {
        int v38 = a6;
      }
      int v39 = v38 - a6;
      int8x16_t v40 = &v19[v14];
      unsigned long long v41 = &v20[v14];
      do
      {
        if (!v39) {
          break;
        }
        a10.i16[0] = v19[v37];
        a10.i16[1] = v20[v37];
        a10.i16[2] = v40[v37];
        a10.i16[3] = v41[v37];
        *(int8x8_t *)a10.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(*(int16x4_t *)a10.i8, (int16x4_t)0x7E007E007E007ELL), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
        *int8x8_t result = vmovn_s16(a10).u32[0];
        int8x8_t result = (_DWORD *)((char *)result + v11);
        --v39;
        ++v37;
        --a6;
      }
      while (a6);
    }
    else
    {
      int v21 = 0;
      uint64_t v22 = &a2[v13];
      uint8x16_t v23 = &v22[v14];
      uint8x16_t v24 = &a2[v14];
      uint64_t v25 = v13;
      int16x8_t v26 = &v22[v14 + v13];
      int8x16_t v27 = &v22[v25];
      uint64_t v28 = 2 * a5;
      do
      {
        if (v21 == v15) {
          break;
        }
        a10.i16[0] = *v22;
        a10.i16[1] = *a2;
        a10.i16[2] = *v23;
        a10.i16[3] = a2[1];
        *(int8x8_t *)a10.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(*(int16x4_t *)a10.i8, (int16x4_t)0x7E007E007E007ELL), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
        *int8x8_t result = vmovn_s16(a10).u32[0];
        uint64_t v29 = 1;
        do
        {
          a10.i16[0] = *v27;
          a10.i16[1] = *v24;
          a10.i16[2] = *v26;
          a10.i16[3] = v24[1];
          *(int8x8_t *)a10.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(*(int16x4_t *)a10.i8, (int16x4_t)0x7E007E007E007ELL), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
          result[v29++] = vmovn_s16(a10).u32[0];
        }
        while (v10 != v29);
        int8x8_t result = (_DWORD *)((char *)result + v11);
        a2 = (unsigned __int16 *)((char *)a2 + v28);
        uint8x16_t v24 = (unsigned __int16 *)((char *)v24 + v28);
        uint64_t v22 = (unsigned __int16 *)((char *)v22 + v28);
        int8x16_t v27 = (unsigned __int16 *)((char *)v27 + v28);
        uint8x16_t v23 = (unsigned __int16 *)((char *)v23 + v28);
        int16x8_t v26 = (unsigned __int16 *)((char *)v26 + v28);
        ++v21;
      }
      while (v21 != a6);
      int v30 = 0;
      int8x16_t v31 = &v23[v14];
      uint64_t v32 = &v26[v14];
      int v33 = &v24[v14];
      if (a6 <= a4) {
        int v34 = a4;
      }
      else {
        int v34 = a6;
      }
      int v35 = v34 - a6;
      do
      {
        if (v30 == v35) {
          break;
        }
        a10.i16[0] = *v23;
        a10.i16[1] = *v24;
        a10.i16[2] = *v31;
        a10.i16[3] = v24[1];
        *(int8x8_t *)a10.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(*(int16x4_t *)a10.i8, (int16x4_t)0x7E007E007E007ELL), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
        *int8x8_t result = vmovn_s16(a10).u32[0];
        uint64_t v36 = 1;
        do
        {
          a10.i16[0] = *v26;
          a10.i16[1] = *v33;
          a10.i16[2] = *v32;
          a10.i16[3] = v33[1];
          *(int8x8_t *)a10.i8 = veor_s8((int8x8_t)vmax_s16(vmin_s16(*(int16x4_t *)a10.i8, (int16x4_t)0x7E007E007E007ELL), (int16x4_t)0x7E007E007E007ELL), (int8x8_t)0x80008000800080);
          result[v36++] = vmovn_s16(a10).u32[0];
        }
        while (v10 != v36);
        int8x8_t result = (_DWORD *)((char *)result + v11);
        uint8x16_t v24 = (unsigned __int16 *)((char *)v24 + v28);
        int v33 = (unsigned __int16 *)((char *)v33 + v28);
        uint8x16_t v23 = (unsigned __int16 *)((char *)v23 + v28);
        int16x8_t v26 = (unsigned __int16 *)((char *)v26 + v28);
        int8x16_t v31 = (unsigned __int16 *)((char *)v31 + v28);
        uint64_t v32 = (unsigned __int16 *)((char *)v32 + v28);
        ++v30;
      }
      while (v30 != a6);
    }
  }
  return result;
}

void from_444_to_y408_r408_4xH<false,(AlphaOutputMethod)1,false>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, unsigned int a7)
{
  uint64_t v7 = a7 >> 1;
  uint64_t v8 = (4 * v7);
  uint64_t v9 = (6 * v7);
  uint64_t v10 = (8 * v7);
  uint64_t v11 = (10 * v7);
  uint64_t v12 = a5 + (8 * a6);
  uint64_t v13 = 8 / a7 * a6;
  int v14 = a4 - a7;
  if (a4 <= (int)a7) {
    int v15 = 0;
  }
  else {
    int v15 = a4 - a7;
  }
  int v16 = a4 - v15;
  if (v15 < 2)
  {
    uint64_t v73 = 2 * (a7 >> 1);
    uint64_t v61 = (int8x8_t *)&a2[(unint64_t)v73 / 2];
    int8x16_t v72 = &a2[a7 & 0xFFFFFFFE];
    uint64_t v62 = (int8x8_t *)&v72[(unint64_t)v73 / 2];
    uint8x16_t v63 = &a2[v8];
    uint8x16_t v64 = &v63[(unint64_t)v73 / 2];
    int v65 = &a2[v9];
    unsigned int v66 = &v65[(unint64_t)v73 / 2];
    int32x4_t v67 = (int8x8_t *)&a2[v10];
    int16x8_t v68 = &v67[v73];
    int8x16_t v69 = (int8x8_t *)&a2[v11];
    unsigned long long v70 = &v69[v73];
    int32x4_t v71 = &a1[(int)a7 * (uint64_t)a3];
    if (!(v16 + v15)) {
      return;
    }
  }
  else
  {
    uint64_t v17 = (int)a7 * (uint64_t)a3;
    uint64_t v18 = (2 * v13);
    uint64_t v19 = v7;
    uint64_t v20 = v8;
    uint64_t v21 = v9;
    uint64_t v22 = v10;
    uint64_t v23 = v11;
    uint64_t v24 = a3 + 16;
    v26.i64[0] = 0x8080808080808080;
    v26.i64[1] = 0x8080808080808080;
    int v15 = v14;
    do
    {
      v27.i16[0] = *(_OWORD *)a5;
      v27.i16[1] = BYTE2(*(_OWORD *)a5);
      v27.i16[2] = BYTE4(*(void *)a5);
      v27.i16[3] = BYTE6(*(void *)a5);
      v27.i16[4] = *(void *)(a5 + 8);
      v27.i16[5] = BYTE2(*(void *)(a5 + 8));
      v27.i16[6] = BYTE12(*(_OWORD *)a5);
      v27.i16[7] = BYTE14(*(_OWORD *)a5);
      v28.i16[0] = *(_OWORD *)(a5 + v13);
      v28.i16[1] = BYTE2(*(_OWORD *)(a5 + v13));
      v28.i16[2] = BYTE4(*(void *)(a5 + v13));
      v28.i16[3] = BYTE6(*(void *)(a5 + v13));
      v28.i16[4] = *(void *)(a5 + v13 + 8);
      v28.i16[5] = BYTE2(*(void *)(a5 + v13 + 8));
      v28.i16[6] = BYTE12(*(_OWORD *)(a5 + v13));
      v28.i16[7] = BYTE14(*(_OWORD *)(a5 + v13));
      int32x4_t v29 = (int32x4_t)vqmovun_high_s16(vqmovun_s16(v27), v28);
      int8x16_t v30 = (int8x16_t)vuzp1q_s32(v29, vrev64q_s32(v29));
      int8x16_t v31 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v20]), a2[v22]), v26);
      int8x16_t v32 = vzip1q_s8(v30, v31);
      int8x16_t v33 = vzip2q_s8(v30, v31);
      int8x16_t v34 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[v7]), v26);
      int8x16_t v35 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v7 + v20]), a2[v7 + v22]), v26);
      int8x16_t v36 = vzip1q_s8(v34, v35);
      int8x16_t v37 = vzip2q_s8(v34, v35);
      int v38 = a1;
      vst2_s8(v38, (int8x8x2_t)v32);
      uint64_t v25 = v24 + v17;
      int v39 = (int8x16_t *)&v38[v25];
      int8x16_t v40 = a1 + 16;
      vst2_s8(v40, (int8x8x2_t)v33);
      unsigned long long v41 = (int8x16_t *)&a1[v24];
      v41[-1] = vzip2q_s8(v32, v36);
      *unsigned long long v41 = vzip2q_s8(v33, v37);
      int16x8_t v42 = a2[2 * v7];
      int16x8_t v43 = a2[3 * v7];
      int16x8_t v44 = a2[v21];
      int16x8_t v45 = a2[v23];
      int16x8_t v46 = a2[v7 + v21];
      LODWORD(v41) = v15;
      int16x8_t v47 = a2[v7 + v23];
      ++a2;
      int v48 = &a1[v17];
      a1 += 2 * a3;
      v16 -= 2;
      a5 += v18;
      int8x16_t v49 = vqmovn_high_s16(vqmovn_s16(v42), v43);
      int8x16_t v50 = vqmovn_high_s16(vqmovn_s16(v44), v45);
      int8x16_t v51 = vqmovn_high_s16(vqmovn_s16(v46), v47);
      v45.i16[0] = *(_OWORD *)v12;
      v45.i16[1] = BYTE2(*(_OWORD *)v12);
      v45.i16[2] = BYTE4(*(void *)v12);
      v45.i16[3] = BYTE6(*(void *)v12);
      v45.i16[4] = *(void *)(v12 + 8);
      v45.i16[5] = BYTE2(*(void *)(v12 + 8));
      v45.i16[6] = BYTE12(*(_OWORD *)v12);
      v45.i16[7] = BYTE14(*(_OWORD *)v12);
      v46.i16[0] = *(_OWORD *)(v12 + v13);
      v46.i16[1] = BYTE2(*(_OWORD *)(v12 + v13));
      v46.i16[2] = BYTE4(*(void *)(v12 + v13));
      v46.i16[3] = BYTE6(*(void *)(v12 + v13));
      v46.i16[4] = *(void *)(v12 + v13 + 8);
      v46.i16[5] = BYTE2(*(void *)(v12 + v13 + 8));
      v46.i16[6] = BYTE12(*(_OWORD *)(v12 + v13));
      v46.i16[7] = BYTE14(*(_OWORD *)(v12 + v13));
      int32x4_t v52 = (int32x4_t)vqmovun_high_s16(vqmovun_s16(v45), v46);
      int8x16_t v53 = (int8x16_t)vuzp1q_s32(v52, vrev64q_s32(v52));
      int8x16_t v54 = veorq_s8(v50, v26);
      int8x16_t v55 = vzip1q_s8(v53, v54);
      int8x16_t v56 = vzip2q_s8(v53, v54);
      int8x16_t v57 = veorq_s8(v49, v26);
      int8x16_t v58 = veorq_s8(v51, v26);
      int8x16_t v59 = vzip1q_s8(v57, v58);
      int8x16_t v60 = vzip2q_s8(v57, v58);
      vst2_s8(v48, (int8x8x2_t)v55);
      v48 += 16;
      vst2_s8(v48, (int8x8x2_t)v56);
      v39[-1] = vzip2q_s8(v55, v59);
      *int v39 = vzip2q_s8(v56, v60);
      int v15 = v41 - 2;
      v12 += v18;
    }
    while (v41 > 3);
    uint64_t v61 = (int8x8_t *)&a2[v19];
    uint64_t v62 = (int8x8_t *)&a2[3 * v7];
    uint8x16_t v63 = &a2[v20];
    uint8x16_t v64 = &a2[v19 + v20];
    int v65 = &a2[v21];
    unsigned int v66 = &a2[v19 + v21];
    int32x4_t v67 = (int8x8_t *)&a2[v22];
    int16x8_t v68 = (int8x8_t *)&a2[v19 + v22];
    int8x16_t v69 = (int8x8_t *)&a2[v23];
    unsigned long long v70 = (int8x8_t *)&a2[v19 + v23];
    int32x4_t v71 = &a1[v17];
    int8x16_t v72 = &a2[2 * v7];
    if (!(v16 + v15)) {
      return;
    }
  }
  if (v15 >= 1)
  {
    int32x4_t v74 = *(int32x4_t *)v72;
    *(int8x8_t *)v74.i8 = vqmovn_s16(*v72);
    v75.i16[0] = *(_OWORD *)v12;
    v75.i16[1] = BYTE2(*(_OWORD *)v12);
    v75.i16[2] = BYTE4(*(void *)v12);
    v75.i16[3] = BYTE6(*(void *)v12);
    v75.i16[4] = *(void *)(v12 + 8);
    v75.i16[5] = BYTE2(*(void *)(v12 + 8));
    v75.i16[6] = BYTE12(*(_OWORD *)v12);
    v75.i16[7] = BYTE14(*(_OWORD *)v12);
    *(int8x8_t *)v75.i8 = vqmovun_s16(v75);
    v76.i64[0] = 0x8080808080808080;
    v76.i64[1] = 0x8080808080808080;
    v103.val[0] = (int8x8_t)vzip2q_s8((int8x16_t)vzip1q_s32((int32x4_t)v75, v74), veorq_s8(vqmovn_high_s16(*v69, *(int16x8_t *)v69->i8), v76)).u64[0];
    v103.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v62, *(int16x8_t *)v62->i8), v76), veorq_s8(vqmovn_high_s16(*v70, *(int16x8_t *)v70->i8), v76)).u64[0];
    v101.val[0] = vzip1_s8(*(int8x8_t *)v75.i8, veor_s8(vqmovn_s16(*v65), (int8x8_t)0x8080808080808080));
    v101.val[1] = vzip1_s8(veor_s8(*(int8x8_t *)v74.i8, (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v66), (int8x8_t)0x8080808080808080));
    vst2_s8(v71, v101);
    int v77 = v71 + 16;
    vst2_s8(v77, v103);
  }
  if (v16 > 1)
  {
    unint64_t v78 = 0;
    uint64_t v79 = 2 * a3;
    uint64_t v80 = a3 + 16;
    v81.i64[0] = 0x8080808080808080;
    v81.i64[1] = 0x8080808080808080;
    int16x8_t v82 = a1;
    do
    {
      unsigned int v83 = v16;
      v84.i16[0] = *(_OWORD *)a5;
      v84.i16[1] = BYTE2(*(_OWORD *)a5);
      v84.i16[2] = BYTE4(*(void *)a5);
      v84.i16[3] = BYTE6(*(void *)a5);
      v84.i16[4] = *(void *)(a5 + 8);
      v84.i16[5] = BYTE2(*(void *)(a5 + 8));
      v84.i16[6] = BYTE12(*(_OWORD *)a5);
      v84.i16[7] = BYTE14(*(_OWORD *)a5);
      v85.i16[0] = *(_OWORD *)(a5 + v13);
      v85.i16[1] = BYTE2(*(_OWORD *)(a5 + v13));
      v85.i16[2] = BYTE4(*(void *)(a5 + v13));
      v85.i16[3] = BYTE6(*(void *)(a5 + v13));
      v85.i16[4] = *(void *)(a5 + v13 + 8);
      v85.i16[5] = BYTE2(*(void *)(a5 + v13 + 8));
      v85.i16[6] = BYTE12(*(_OWORD *)(a5 + v13));
      v85.i16[7] = BYTE14(*(_OWORD *)(a5 + v13));
      int32x4_t v86 = (int32x4_t)vqmovun_high_s16(vqmovun_s16(v84), v85);
      int8x16_t v87 = (int8x16_t)vuzp1q_s32(v86, vrev64q_s32(v86));
      int8x16_t v88 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v63[v78 / 0x10]), *(int16x8_t *)v67[v78 / 8].i8), v81);
      int8x16_t v89 = vzip1q_s8(v87, v88);
      int8x16_t v90 = vzip2q_s8(v87, v88);
      int8x16_t v91 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v78 / 0x10]), *(int16x8_t *)v61[v78 / 8].i8), v81);
      int8x16_t v92 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v64[v78 / 0x10]), *(int16x8_t *)v68[v78 / 8].i8), v81);
      int8x16_t v93 = vzip1q_s8(v91, v92);
      int8x16_t v94 = vzip2q_s8(v91, v92);
      vst2_s8(v82, (int8x8x2_t)v89);
      v82 += v79;
      int16x8_t v95 = a1 + 16;
      vst2_s8(v95, (int8x8x2_t)v90);
      float32x2x2_t v96 = (int8x16_t *)&a1[v80];
      a1 = v82;
      v96[-1] = vzip2q_s8(v89, v93);
      *float32x2x2_t v96 = vzip2q_s8(v90, v94);
      int v16 = v83 - 2;
      a5 += (2 * v13);
      v78 += 16;
    }
    while (v83 > 3);
    a2 = (int16x8_t *)((char *)a2 + v78);
    uint64_t v61 = (int8x8_t *)((char *)v61 + v78);
    uint8x16_t v63 = (int16x8_t *)((char *)v63 + v78);
    uint8x16_t v64 = (int16x8_t *)((char *)v64 + v78);
    int32x4_t v67 = (int8x8_t *)((char *)v67 + v78);
    int16x8_t v68 = (int8x8_t *)((char *)v68 + v78);
  }
  if (v16 == 1)
  {
    int32x4_t v97 = *(int32x4_t *)a2;
    *(int8x8_t *)v97.i8 = vqmovn_s16(*a2);
    v98.i16[0] = *(_OWORD *)a5;
    v98.i16[1] = BYTE2(*(_OWORD *)a5);
    v98.i16[2] = BYTE4(*(void *)a5);
    v98.i16[3] = BYTE6(*(void *)a5);
    v98.i16[4] = *(void *)(a5 + 8);
    v98.i16[5] = BYTE2(*(void *)(a5 + 8));
    v98.i16[6] = BYTE12(*(_OWORD *)a5);
    v98.i16[7] = BYTE14(*(_OWORD *)a5);
    *(int8x8_t *)v98.i8 = vqmovun_s16(v98);
    v99.i64[0] = 0x8080808080808080;
    v99.i64[1] = 0x8080808080808080;
    v104.val[0] = (int8x8_t)vzip2q_s8((int8x16_t)vzip1q_s32((int32x4_t)v98, v97), veorq_s8(vqmovn_high_s16(*v67, *(int16x8_t *)v67->i8), v99)).u64[0];
    v104.val[1] = (int8x8_t)vzip2q_s8(veorq_s8(vqmovn_high_s16(*v61, *(int16x8_t *)v61->i8), v99), veorq_s8(vqmovn_high_s16(*v68, *(int16x8_t *)v68->i8), v99)).u64[0];
    v102.val[0] = vzip1_s8(*(int8x8_t *)v98.i8, veor_s8(vqmovn_s16(*v63), (int8x8_t)0x8080808080808080));
    v102.val[1] = vzip1_s8(veor_s8(*(int8x8_t *)v97.i8, (int8x8_t)0x8080808080808080), veor_s8(vqmovn_s16(*v64), (int8x8_t)0x8080808080808080));
    vst2_s8(a1, v102);
    int16x8_t v100 = a1 + 16;
    vst2_s8(v100, v104);
  }
}

unsigned char *from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)1>(unsigned char *result, uint64_t a2, int a3, int a4, unsigned char *a5, int a6, int a7, int a8)
{
  if (a8 >= 1 && a7 >= 1)
  {
    int v8 = 0;
    uint64_t v9 = (a8 * a7);
    uint64_t v10 = 8u / a8 * a6;
    uint64_t v11 = a3;
    uint64_t v12 = 2 * (4 * v9);
    uint64_t v13 = a2 + v12;
    uint64_t v14 = a2 + v12 + v12;
    uint64_t v15 = 2 * v9;
    uint64_t v16 = a2 + v12 + 2 * v9;
    uint64_t v17 = v16 + v12;
    uint64_t v18 = a2 + v15;
    uint64_t v19 = 2 * a7;
    uint64_t v20 = 8u / a7;
    do
    {
      if (v8 == (a4 & ~(a4 >> 31))) {
        break;
      }
      uint64_t v21 = 0;
      uint64_t v22 = a5;
      uint64_t v23 = result;
      do
      {
        int v24 = *(__int16 *)(a2 + 2 * v21);
        int v25 = *(__int16 *)(v13 + 2 * v21);
        int v26 = *(__int16 *)(v16 + 2 * v21);
        *uint64_t v23 = *v22;
        if (v24 >= 127) {
          int v24 = 127;
        }
        if (v24 <= -128) {
          LOBYTE(v24) = 0x80;
        }
        v23[1] = v24 ^ 0x80;
        if (v25 >= 127) {
          int v27 = 127;
        }
        else {
          int v27 = v25;
        }
        if (v27 <= -128) {
          LOBYTE(v27) = 0x80;
        }
        v23[2] = v27 ^ 0x80;
        if (v26 >= 127) {
          int v26 = 127;
        }
        if (v26 <= -128) {
          LOBYTE(v26) = 0x80;
        }
        v23[3] = v26 ^ 0x80;
        v23 += 4;
        v22 += v20;
        ++v21;
      }
      while (a7 != v21);
      uint64_t v28 = 0;
      do
      {
        int v29 = *(__int16 *)(v18 + 2 * v28);
        int v30 = *(__int16 *)(v14 + 2 * v28);
        int v31 = *(__int16 *)(v17 + 2 * v28);
        *uint64_t v23 = *v22;
        if (v29 >= 127) {
          int v29 = 127;
        }
        if (v29 <= -128) {
          LOBYTE(v29) = 0x80;
        }
        v23[1] = v29 ^ 0x80;
        if (v30 >= 127) {
          int v32 = 127;
        }
        else {
          int v32 = v30;
        }
        if (v32 <= -128) {
          LOBYTE(v32) = 0x80;
        }
        v23[2] = v32 ^ 0x80;
        if (v31 >= 127) {
          int v31 = 127;
        }
        if (v31 <= -128) {
          LOBYTE(v31) = 0x80;
        }
        v23[3] = v31 ^ 0x80;
        v22 += v20;
        ++v28;
        v23 += 4;
      }
      while (a7 != v28);
      result += v11;
      a5 += v10;
      v18 += v19;
      v16 += v19;
      v17 += v19;
      ++v8;
      v13 += v19;
      a2 += v19;
      v14 += v19;
    }
    while (v8 != a8);
    int v33 = 0;
    uint64_t v34 = v16 + v15;
    uint64_t v35 = v17 + v15;
    uint64_t v36 = v18 + v15;
    if (a8 > a4) {
      a4 = a8;
    }
    int v37 = a4 - a8;
    do
    {
      if (v33 == v37) {
        break;
      }
      uint64_t v38 = 0;
      int v39 = a5;
      int8x16_t v40 = result;
      do
      {
        int v41 = *(__int16 *)(v18 + 2 * v38);
        int v42 = *(__int16 *)(v16 + 2 * v38);
        int v43 = *(__int16 *)(v34 + 2 * v38);
        *int8x16_t v40 = *v39;
        if (v41 >= 127) {
          int v41 = 127;
        }
        if (v41 <= -128) {
          LOBYTE(v41) = 0x80;
        }
        v40[1] = v41 ^ 0x80;
        if (v42 >= 127) {
          int v44 = 127;
        }
        else {
          int v44 = v42;
        }
        if (v44 <= -128) {
          LOBYTE(v44) = 0x80;
        }
        v40[2] = v44 ^ 0x80;
        if (v43 >= 127) {
          int v43 = 127;
        }
        if (v43 <= -128) {
          LOBYTE(v43) = 0x80;
        }
        v40[3] = v43 ^ 0x80;
        v40 += 4;
        v39 += v20;
        ++v38;
      }
      while (a7 != v38);
      uint64_t v45 = 0;
      do
      {
        int v46 = *(__int16 *)(v36 + 2 * v45);
        int v47 = *(__int16 *)(v17 + 2 * v45);
        int v48 = *(__int16 *)(v35 + 2 * v45);
        *int8x16_t v40 = *v39;
        if (v46 >= 127) {
          int v46 = 127;
        }
        if (v46 <= -128) {
          LOBYTE(v46) = 0x80;
        }
        v40[1] = v46 ^ 0x80;
        if (v47 >= 127) {
          int v49 = 127;
        }
        else {
          int v49 = v47;
        }
        if (v49 <= -128) {
          LOBYTE(v49) = 0x80;
        }
        v40[2] = v49 ^ 0x80;
        if (v48 >= 127) {
          int v48 = 127;
        }
        if (v48 <= -128) {
          LOBYTE(v48) = 0x80;
        }
        v40[3] = v48 ^ 0x80;
        v39 += v20;
        ++v45;
        v40 += 4;
      }
      while (a7 != v45);
      result += v11;
      a5 += v10;
      ++v33;
      v34 += v19;
      v16 += v19;
      v18 += v19;
      v35 += v19;
      v17 += v19;
      v36 += v19;
    }
    while (v33 != a8);
  }
  return result;
}

__int8 *from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463352,(AlphaOutputMethod)2>(__int8 *result, int16x8_t *a2, int a3, int a4, unsigned int a5, int a6)
{
  if (a6 >= 1)
  {
    uint64_t v198 = a5 - 1;
    if ((int)a5 >= 1)
    {
      uint64_t v6 = 0;
      uint64_t v7 = a6 * a5;
      uint64_t v8 = a3;
      uint64_t v9 = 2 * (4 * v7);
      uint64_t v10 = a2;
      uint64_t v11 = &a2->i16[(unint64_t)v9 / 2];
      uint64_t v12 = &a2->i16[(unint64_t)v9 / 2 + (unint64_t)v9 / 2];
      unint64_t v201 = (unint64_t)a2 + 2 * v7 + v9;
      uint64_t v13 = (__int16 *)(v201 + v9);
      uint64_t v14 = &a2->i16[v7];
      uint64_t v15 = 4 * (a5 - 1);
      uint64_t v190 = v15 + 8;
      uint64_t v16 = 4 * (4 * v7);
      uint64_t v17 = 2 * (a5 - 1) + 2;
      uint64_t v18 = v17 + 2 * v7;
      uint64_t v19 = v18 + v16;
      uint64_t v20 = 2 * a5;
      uint64_t v197 = v17;
      uint64_t v178 = v16;
      uint64_t v21 = v17 + v16;
      uint64_t v189 = v15 + 4;
      uint64_t v22 = (4 * v7) + v198;
      uint64_t v176 = a6 * a5;
      uint64_t v23 = a5 & 0xFFFFFFF0;
      uint64_t v24 = 2 * v23;
      uint64_t v25 = 4 * v23;
      uint64_t v186 = v7;
      uint64_t v187 = v23;
      uint64_t v182 = v23 - 1;
      uint64_t v193 = a5;
      uint64_t v26 = a5 & 0xFFFFFFF8;
      uint64_t v180 = v26;
      uint64_t v181 = v26;
      uint64_t v27 = v9 + 2 * v7;
      uint64_t v179 = 4 * v26;
      int16x8_t v191 = &a2->i16[v22 + 1 + v7];
      int16x8_t v188 = &a2->i16[v22 + 1];
      uint64_t v185 = (uint64_t)a2->i64 + v19;
      uint64_t v184 = (uint64_t)a2->i64 + v21;
      uint64_t v183 = (uint64_t)a2->i64 + v18;
      v28.i64[0] = -1;
      v28.i64[1] = -1;
      uint64_t v29 = -1;
      v30.i64[0] = 0x8080808080808080;
      v30.i64[1] = 0x8080808080808080;
      int v31 = result;
      unsigned int v196 = a5;
      uint64_t v199 = v8;
      while (v6 != (a4 & ~(a4 >> 31)))
      {
        uint64_t v32 = v6 * v8;
        uint64_t v33 = v20 * v6;
        if (a5 >= 0x10)
        {
          int v35 = 0;
          uint64_t v34 = 0;
          unint64_t v51 = (unint64_t)&result[v189 + v32];
          BOOL v53 = v31 < (__int8 *)v188 + v33 && (unint64_t)v11 < v51;
          BOOL v55 = v31 < &a2->i8[v197 + v33] && (unint64_t)v10 < v51;
          BOOL v56 = v201 >= v51 || v31 >= (__int8 *)v191 + v33;
          if (v56 && !v53)
          {
            uint64_t v36 = (__int16 *)v201;
            int v37 = v11;
            uint64_t v38 = (__int16 *)v10;
            int v39 = v31;
            if (!v55)
            {
              uint64_t v57 = 0;
              uint64_t v36 = (__int16 *)(v201 + v24);
              int v37 = &v11[(unint64_t)v24 / 2];
              uint64_t v38 = &v10->i16[(unint64_t)v24 / 2];
              int v39 = &v31[v25];
              int8x16_t v58 = v10;
              do
              {
                int8x16_t v59 = (int16x8_t *)((char *)v58 + v27);
                int8x16_t v60 = (int16x8_t *)((char *)v58 + v9);
                uint64_t v61 = &v31[v57];
                int16x8_t v63 = *v58;
                int16x8_t v62 = v58[1];
                v58 += 2;
                int8x16_t v64 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v63), v62), v30);
                int8x16_t v65 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v60), v60[1]), v30);
                int8x16_t v66 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v59), v59[1]), v30);
                vst4q_s8(v61, *(int8x16x4_t *)v28.i8);
                v57 += 64;
              }
              while (v25 != v57);
              uint64_t v34 = v187;
              int v35 = v187;
              uint64_t v41 = v182;
              a5 = v196;
              if (v187 == v193) {
                goto LABEL_26;
              }
            }
            goto LABEL_9;
          }
        }
        else
        {
          uint64_t v34 = 0;
          int v35 = 0;
        }
        uint64_t v36 = (__int16 *)v201;
        int v37 = v11;
        uint64_t v38 = (__int16 *)v10;
        int v39 = v31;
LABEL_9:
        int v40 = a5 - v35;
        uint64_t v41 = v34 + (v198 - v35);
        do
        {
          int v43 = *v38++;
          int v42 = v43;
          int v45 = *v37++;
          int v44 = v45;
          int v47 = *v36++;
          int v46 = v47;
          *int v39 = -1;
          if (v42 >= 127) {
            int v42 = 127;
          }
          if (v42 <= -128) {
            LOBYTE(v42) = 0x80;
          }
          v39[1] = v42 ^ 0x80;
          if (v44 >= 127) {
            int v48 = 127;
          }
          else {
            int v48 = v44;
          }
          if (v48 <= -128) {
            LOBYTE(v48) = 0x80;
          }
          v39[2] = v48 ^ 0x80;
          if (v46 >= 127) {
            int v49 = 127;
          }
          else {
            int v49 = v46;
          }
          if (v49 <= -128) {
            LOBYTE(v49) = 0x80;
          }
          v39[3] = v49 ^ 0x80;
          v39 += 4;
          --v40;
        }
        while (v40);
        a5 = v196;
LABEL_26:
        if (a5 < 8)
        {
          int v50 = 0;
LABEL_72:
          int v77 = v13;
          unint64_t v78 = v12;
          uint64_t v79 = v14;
          uint64_t v80 = v39;
LABEL_73:
          int v81 = a5 - v50;
          do
          {
            int v83 = *v79++;
            int v82 = v83;
            int v85 = *v78++;
            int v84 = v85;
            int v87 = *v77++;
            int v86 = v87;
            *uint64_t v80 = -1;
            if (v82 >= 127) {
              int v82 = 127;
            }
            if (v82 <= -128) {
              LOBYTE(v82) = 0x80;
            }
            v80[1] = v82 ^ 0x80;
            if (v84 >= 127) {
              int v88 = 127;
            }
            else {
              int v88 = v84;
            }
            if (v88 <= -128) {
              LOBYTE(v88) = 0x80;
            }
            v80[2] = v88 ^ 0x80;
            if (v86 >= 127) {
              int v89 = 127;
            }
            else {
              int v89 = v86;
            }
            if (v89 <= -128) {
              LOBYTE(v89) = 0x80;
            }
            v80[3] = v89 ^ 0x80;
            v80 += 4;
            --v81;
          }
          while (v81);
          goto LABEL_4;
        }
        int v50 = 0;
        unint64_t v67 = v185 + v33;
        unint64_t v68 = v184 + v33;
        unint64_t v69 = v183 + v33;
        unint64_t v70 = (unint64_t)&result[4 * v41 + v190 + v32];
        BOOL v72 = (unint64_t)v39 < v68 && (unint64_t)v12 < v70;
        BOOL v74 = (unint64_t)v39 < v69 && (unint64_t)v14 < v70;
        BOOL v75 = (unint64_t)v13 >= v70 || (unint64_t)v39 >= v67;
        if (!v75 || v72 || v74) {
          goto LABEL_72;
        }
        if (a5 >= 0x10)
        {
          unint64_t v90 = 0;
          int8x16_t v91 = v39;
          do
          {
            v202.val[1] = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)&v14[v90 / 2]), *(int16x8_t *)&v14[v90 / 2 + 8]), v30);
            v202.val[2] = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)((char *)v10 + v178 + v90)), *(int16x8_t *)((char *)&v10[1] + v178 + v90)), v30);
            v202.val[3] = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)((char *)v14 + v178 + v90)), *(int16x8_t *)((char *)v14 + v178 + v90 + 16)), v30);
            v202.val[0] = v28;
            vst4q_s8(v91, v202);
            v91 += 64;
            v90 += 32;
          }
          while (v24 != v90);
          a5 = v196;
          if (v187 == v193) {
            goto LABEL_4;
          }
          uint64_t v76 = v187;
          if ((v193 & 8) == 0)
          {
            uint64_t v80 = &v39[v25];
            uint64_t v79 = &v14[(unint64_t)v24 / 2];
            unint64_t v78 = &v12[(unint64_t)v24 / 2];
            int v77 = &v13[(unint64_t)v24 / 2];
            int v50 = v187;
            goto LABEL_73;
          }
        }
        else
        {
          uint64_t v76 = 0;
        }
        int v77 = &v13[v180];
        unint64_t v78 = &v12[v180];
        uint64_t v79 = &v14[v180];
        uint64_t v80 = &v39[v179];
        uint64_t v92 = v76;
        int8x16_t v93 = (int16x8_t *)&v14[v76];
        int8x16_t v94 = (int16x8_t *)&v12[v76];
        uint64_t v95 = v76 - v26;
        float32x2x2_t v96 = &v39[4 * v76];
        do
        {
          int16x8_t v97 = *v93++;
          int16x8_t v98 = v97;
          int16x8_t v99 = *v94++;
          int8x8_t v100 = veor_s8(vqmovn_s16(v98), (int8x8_t)0x8080808080808080);
          int8x8_t v101 = veor_s8(vqmovn_s16(v99), (int8x8_t)0x8080808080808080);
          int8x8_t v102 = veor_s8(vqmovn_s16(*(int16x8_t *)&v13[v92]), (int8x8_t)0x8080808080808080);
          vst4_s8(v96, *(int8x8x4_t *)&v29);
          v96 += 32;
          v92 += 8;
          v95 += 8;
        }
        while (v95);
        int v50 = v26;
        if (v26 != v193) {
          goto LABEL_73;
        }
LABEL_4:
        uint64_t v8 = v199;
        v31 += v199;
        uint64_t v10 = (int16x8_t *)((char *)v10 + v20);
        uint64_t v14 = (__int16 *)((char *)v14 + v20);
        uint64_t v11 = (__int16 *)((char *)v11 + v20);
        uint64_t v12 = (__int16 *)((char *)v12 + v20);
        v201 += v20;
        uint64_t v13 = (__int16 *)((char *)v13 + v20);
        if (++v6 == a6) {
          break;
        }
      }
      int8x8_t result = 0;
      int8x8x2_t v103 = (__int16 *)v201;
      int8x8x2_t v104 = (__int16 *)(v201 + v186 * 2);
      int v105 = &v13[v186];
      int v106 = &v14[v186];
      int v107 = a4;
      if (a6 > a4) {
        int v107 = a6;
      }
      int v192 = v107 - a6;
      v108.i64[0] = -1;
      v108.i64[1] = -1;
      uint64_t v109 = -1;
      v110.i64[0] = 0x8080808080808080;
      v110.i64[1] = 0x8080808080808080;
      uint64_t v111 = v13;
      unsigned int v112 = v14;
      int v113 = v31;
      do
      {
        if (result == v192) {
          return result;
        }
        uint64_t v114 = 2 * (v176 + v198) + 2 + v20 * (void)result;
        uint64_t v115 = v197 + v20 * (void)result;
        uint64_t v195 = (void)result * v8;
        if (a5 >= 0x10)
        {
          int v117 = 0;
          uint64_t v116 = 0;
          int16x8_t v137 = (__int16 *)&v31[v189 + (void)result * v8];
          BOOL v139 = (unint64_t)v113 < v201 + v115 && v103 < v137;
          BOOL v141 = v113 < (__int8 *)v14 + v115 && v112 < v137;
          BOOL v142 = v104 >= v137 || (unint64_t)v113 >= v201 + v114;
          if (v142 && !v139)
          {
            int32x4_t v118 = v104;
            unsigned int v119 = v103;
            int v120 = v112;
            float32x4_t v121 = v113;
            if (!v141)
            {
              unint64_t v143 = 0;
              int32x4_t v118 = &v104[(unint64_t)v24 / 2];
              unsigned int v119 = &v103[(unint64_t)v24 / 2];
              int v120 = &v112[(unint64_t)v24 / 2];
              float32x4_t v121 = &v113[v25];
              int v144 = v113;
              do
              {
                int8x16_t v145 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)&v112[v143 / 2]), *(int16x8_t *)&v112[v143 / 2 + 8]), v110);
                int8x16_t v146 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)&v103[v143 / 2]), *(int16x8_t *)&v103[v143 / 2 + 8]), v110);
                int8x16_t v147 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)&v103[v186 + v143 / 2]), *(int16x8_t *)&v103[v186 + 8 + v143 / 2]), v110);
                vst4q_s8(v144, *(int8x16x4_t *)v108.i8);
                v144 += 64;
                v143 += 32;
              }
              while ((v20 & 0x1FFFFFFE0) != v143);
              uint64_t v116 = v187;
              int v117 = v187;
              uint64_t v123 = v182;
              a5 = v196;
              if (v187 == v193) {
                goto LABEL_123;
              }
            }
            goto LABEL_107;
          }
        }
        else
        {
          uint64_t v116 = 0;
          int v117 = 0;
        }
        int32x4_t v118 = v104;
        unsigned int v119 = v103;
        int v120 = v112;
        float32x4_t v121 = v113;
LABEL_107:
        int v122 = a5 - v117;
        uint64_t v123 = v116 + (v198 - v117);
        do
        {
          int v125 = *v120++;
          int v124 = v125;
          int v127 = *v119++;
          int v126 = v127;
          int v129 = *v118++;
          int v128 = v129;
          *float32x4_t v121 = -1;
          if (v124 >= 127) {
            int v124 = 127;
          }
          if (v124 <= -128) {
            LOBYTE(v124) = 0x80;
          }
          v121[1] = v124 ^ 0x80;
          if (v126 >= 127) {
            int v130 = 127;
          }
          else {
            int v130 = v126;
          }
          if (v130 <= -128) {
            LOBYTE(v130) = 0x80;
          }
          v121[2] = v130 ^ 0x80;
          if (v128 >= 127) {
            int v131 = 127;
          }
          else {
            int v131 = v128;
          }
          if (v131 <= -128) {
            LOBYTE(v131) = 0x80;
          }
          v121[3] = v131 ^ 0x80;
          v121 += 4;
          --v122;
        }
        while (v122);
LABEL_123:
        if (a5 < 8)
        {
          int v132 = 0;
          float32x4_t v133 = v105;
          int8x16_t v134 = v111;
          int8x16_t v135 = v106;
          int8x16_t v136 = v121;
          uint64_t v8 = v199;
          goto LABEL_178;
        }
        int v132 = 0;
        unint64_t v148 = (unint64_t)v13 + v114;
        unint64_t v149 = (unint64_t)v13 + v115;
        unint64_t v150 = (unint64_t)v14 + v114;
        int v151 = (__int16 *)&v31[4 * v123 + v190 + v195];
        BOOL v153 = (unint64_t)v121 < v149 && v111 < v151;
        BOOL v155 = (unint64_t)v121 < v150 && v106 < v151;
        BOOL v156 = v105 >= v151 || (unint64_t)v121 >= v148;
        uint64_t v8 = v199;
        if (!v156 || v153 || v155)
        {
          float32x4_t v133 = v105;
          int8x16_t v134 = v111;
          int8x16_t v135 = v106;
          int8x16_t v136 = v121;
          goto LABEL_178;
        }
        if (a5 >= 0x10)
        {
          unint64_t v158 = 0;
          int16x8_t v159 = v121;
          do
          {
            v203.val[1] = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)&v106[v158 / 2]), *(int16x8_t *)&v106[v158 / 2 + 8]), v110);
            v203.val[2] = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)&v111[v158 / 2]), *(int16x8_t *)&v111[v158 / 2 + 8]), v110);
            v203.val[3] = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)&v111[v186 + v158 / 2]), *(int16x8_t *)&v111[v186 + 8 + v158 / 2]), v110);
            v203.val[0] = v108;
            vst4q_s8(v159, v203);
            v159 += 64;
            v158 += 32;
          }
          while (v24 != v158);
          if (v187 == v193) {
            goto LABEL_102;
          }
          uint64_t v157 = v187;
          if ((v193 & 8) == 0)
          {
            int8x16_t v136 = &v121[v25];
            int8x16_t v135 = &v106[(unint64_t)v24 / 2];
            int8x16_t v134 = &v111[(unint64_t)v24 / 2];
            float32x4_t v133 = &v105[(unint64_t)v24 / 2];
            int v132 = v187;
LABEL_178:
            int v167 = a5 - v132;
            do
            {
              int v169 = *v135++;
              int v168 = v169;
              int v171 = *v134++;
              int v170 = v171;
              int v173 = *v133++;
              int v172 = v173;
              *int8x16_t v136 = -1;
              if (v168 >= 127) {
                int v168 = 127;
              }
              if (v168 <= -128) {
                LOBYTE(v168) = 0x80;
              }
              v136[1] = v168 ^ 0x80;
              if (v170 >= 127) {
                int v174 = 127;
              }
              else {
                int v174 = v170;
              }
              if (v174 <= -128) {
                LOBYTE(v174) = 0x80;
              }
              v136[2] = v174 ^ 0x80;
              if (v172 >= 127) {
                int v175 = 127;
              }
              else {
                int v175 = v172;
              }
              if (v175 <= -128) {
                LOBYTE(v175) = 0x80;
              }
              v136[3] = v175 ^ 0x80;
              v136 += 4;
              --v167;
            }
            while (v167);
            goto LABEL_102;
          }
        }
        else
        {
          uint64_t v157 = 0;
        }
        float32x4_t v133 = &v105[v180];
        int8x16_t v134 = &v111[v180];
        int8x16_t v135 = &v106[v180];
        int8x16_t v136 = &v121[v179];
        uint64_t v160 = v157;
        uint64_t v161 = v186 * 2 + 2 * v157;
        uint64_t v162 = v157 - (v193 & 0xFFFFFFF8);
        int16x8_t v163 = &v121[4 * v157];
        do
        {
          int8x8_t v164 = veor_s8(vqmovn_s16(*(int16x8_t *)((char *)v112 + v161)), (int8x8_t)0x8080808080808080);
          int8x8_t v165 = veor_s8(vqmovn_s16(*(int16x8_t *)&v111[v160]), (int8x8_t)0x8080808080808080);
          int8x8_t v166 = veor_s8(vqmovn_s16(*(int16x8_t *)((char *)v111 + v161)), (int8x8_t)0x8080808080808080);
          vst4_s8(v163, *(int8x8x4_t *)&v109);
          v163 += 32;
          v161 += 16;
          v160 += 8;
          v162 += 8;
        }
        while (v162);
        int v132 = v181;
        if (v181 != v193) {
          goto LABEL_178;
        }
LABEL_102:
        v113 += v8;
        unsigned int v112 = (__int16 *)((char *)v112 + v20);
        int v106 = (__int16 *)((char *)v106 + v20);
        int8x8x2_t v103 = (__int16 *)((char *)v103 + v20);
        uint64_t v111 = (__int16 *)((char *)v111 + v20);
        int8x8x2_t v104 = (__int16 *)((char *)v104 + v20);
        int v105 = (__int16 *)((char *)v105 + v20);
        ++result;
      }
      while (result != a6);
    }
  }
  return result;
}

void from_444_to_y408_r408_4xH<true,(AlphaOutputMethod)1,false>(char *a1, int16x8_t *a2, int a3, int a4, uint64_t a5, int a6, unsigned int a7)
{
  uint64_t v7 = a7 >> 1;
  uint64_t v8 = (4 * v7);
  uint64_t v9 = (6 * v7);
  uint64_t v10 = (8 * v7);
  uint64_t v11 = (10 * v7);
  uint64_t v12 = a5 + (8 * a6);
  uint64_t v13 = 8 / a7 * a6;
  int v14 = a4 - a7;
  if (a4 <= (int)a7) {
    int v15 = 0;
  }
  else {
    int v15 = a4 - a7;
  }
  int v16 = a4 - v15;
  if (v15 < 2)
  {
    uint64_t v76 = 2 * (a7 >> 1);
    int8x16_t v64 = &a2[(unint64_t)v76 / 2];
    BOOL v75 = &a2[a7 & 0xFFFFFFFE];
    int8x16_t v65 = &v75[(unint64_t)v76 / 2];
    int8x16_t v66 = &a2[v8];
    unint64_t v67 = &v66[(unint64_t)v76 / 2];
    unint64_t v68 = &a2[v9];
    unint64_t v69 = &v68[(unint64_t)v76 / 2];
    unint64_t v70 = (int8x8_t *)&a2[v10];
    int32x4_t v71 = &v70[v76];
    BOOL v72 = (int8x8_t *)&a2[v11];
    uint64_t v73 = &v72[v76];
    BOOL v74 = &a1[(int)a7 * (uint64_t)a3];
    if (!(v16 + v15)) {
      return;
    }
  }
  else
  {
    uint64_t v17 = (int)a7 * (uint64_t)a3;
    uint64_t v18 = (2 * v13);
    uint64_t v19 = v7;
    uint64_t v20 = v8;
    uint64_t v21 = v9;
    uint64_t v22 = v10;
    uint64_t v23 = v11;
    uint64_t v24 = 16 * v7 + 16 * v11;
    uint64_t v25 = a3 + 16;
    v27.i64[0] = 0x8080808080808080;
    v27.i64[1] = 0x8080808080808080;
    v28.i64[0] = 0x1010101010101010;
    v28.i64[1] = 0x1010101010101010;
    int v15 = v14;
    do
    {
      unsigned int v29 = v15;
      int8x16_t v30 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[v7]), v27), v28);
      v31.i16[0] = *(_OWORD *)a5;
      v31.i16[1] = BYTE2(*(_OWORD *)a5);
      v31.i16[2] = BYTE4(*(void *)a5);
      v31.i16[3] = BYTE6(*(void *)a5);
      v31.i16[4] = *(void *)(a5 + 8);
      v31.i16[5] = BYTE2(*(void *)(a5 + 8));
      v31.i16[6] = BYTE12(*(_OWORD *)a5);
      v31.i16[7] = BYTE14(*(_OWORD *)a5);
      v32.i16[0] = *(_OWORD *)(a5 + v13);
      v32.i16[1] = BYTE2(*(_OWORD *)(a5 + v13));
      v32.i16[2] = BYTE4(*(void *)(a5 + v13));
      v32.i16[3] = BYTE6(*(void *)(a5 + v13));
      v32.i16[4] = *(void *)(a5 + v13 + 8);
      v32.i16[5] = BYTE2(*(void *)(a5 + v13 + 8));
      v32.i16[6] = BYTE12(*(_OWORD *)(a5 + v13));
      v32.i16[7] = BYTE14(*(_OWORD *)(a5 + v13));
      int32x4_t v33 = (int32x4_t)vqmovun_high_s16(vqmovun_s16(v31), v32);
      int8x16_t v34 = (int8x16_t)vuzp1q_s32(v33, vrev64q_s32(v33));
      int8x16_t v35 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v20]), a2[v22]), v27);
      int8x16_t v36 = vzip1q_s8(v34, v35);
      int8x16_t v37 = vzip2q_s8(v34, v35);
      int8x16_t v38 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v7 + v20]), a2[v7 + v22]), v27);
      int8x16_t v39 = vzip1q_s8(v30, v38);
      int8x16_t v40 = vzip2q_s8(v30, v38);
      uint64_t v41 = a1;
      vst2_s8(v41, (int8x8x2_t)v36);
      uint64_t v26 = v25 + v17;
      int v42 = (int8x16_t *)&v41[v26];
      int v43 = a1 + 16;
      vst2_s8(v43, (int8x8x2_t)v37);
      int v44 = (int8x16_t *)&a1[v25];
      v44[-1] = vzip2q_s8(v36, v39);
      int8x16_t *v44 = vzip2q_s8(v37, v40);
      int16x8_t v45 = a2[2 * v7];
      int16x8_t v46 = a2[3 * v7];
      int16x8_t v47 = a2[v21];
      int16x8_t v48 = a2[v23];
      int16x8_t v49 = a2[v7 + v21];
      int16x8_t v50 = *(int16x8_t *)((char *)a2++ + v24);
      unint64_t v51 = &a1[v17];
      a1 += 2 * a3;
      v16 -= 2;
      a5 += v18;
      int8x16_t v52 = vqmovn_high_s16(vqmovn_s16(v45), v46);
      int8x16_t v53 = vqmovn_high_s16(vqmovn_s16(v47), v48);
      int8x16_t v54 = vqmovn_high_s16(vqmovn_s16(v49), v50);
      int8x16_t v55 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v52, v27), v28);
      v48.i16[0] = *(_OWORD *)v12;
      v48.i16[1] = BYTE2(*(_OWORD *)v12);
      v48.i16[2] = BYTE4(*(void *)v12);
      v48.i16[3] = BYTE6(*(void *)v12);
      v48.i16[4] = *(void *)(v12 + 8);
      v48.i16[5] = BYTE2(*(void *)(v12 + 8));
      v48.i16[6] = BYTE12(*(_OWORD *)v12);
      v48.i16[7] = BYTE14(*(_OWORD *)v12);
      v49.i16[0] = *(_OWORD *)(v12 + v13);
      v49.i16[1] = BYTE2(*(_OWORD *)(v12 + v13));
      v49.i16[2] = BYTE4(*(void *)(v12 + v13));
      v49.i16[3] = BYTE6(*(void *)(v12 + v13));
      v49.i16[4] = *(void *)(v12 + v13 + 8);
      v49.i16[5] = BYTE2(*(void *)(v12 + v13 + 8));
      v49.i16[6] = BYTE12(*(_OWORD *)(v12 + v13));
      v49.i16[7] = BYTE14(*(_OWORD *)(v12 + v13));
      int32x4_t v56 = (int32x4_t)vqmovun_high_s16(vqmovun_s16(v48), v49);
      int8x16_t v57 = (int8x16_t)vuzp1q_s32(v56, vrev64q_s32(v56));
      int8x16_t v58 = veorq_s8(v53, v27);
      int8x16_t v59 = vzip1q_s8(v57, v58);
      int8x16_t v60 = vzip2q_s8(v57, v58);
      int8x16_t v61 = veorq_s8(v54, v27);
      int8x16_t v62 = vzip1q_s8(v55, v61);
      int8x16_t v63 = vzip2q_s8(v55, v61);
      vst2_s8(v51, (int8x8x2_t)v59);
      v51 += 16;
      vst2_s8(v51, (int8x8x2_t)v60);
      v42[-1] = vzip2q_s8(v59, v62);
      *int v42 = vzip2q_s8(v60, v63);
      int v15 = v29 - 2;
      v12 += v18;
    }
    while (v29 > 3);
    int8x16_t v64 = &a2[v19];
    int8x16_t v65 = &a2[3 * v7];
    int8x16_t v66 = &a2[v20];
    unint64_t v67 = &a2[v19 + v20];
    unint64_t v68 = &a2[v21];
    unint64_t v69 = &a2[v19 + v21];
    unint64_t v70 = (int8x8_t *)&a2[v22];
    int32x4_t v71 = (int8x8_t *)&a2[v19 + v22];
    BOOL v72 = (int8x8_t *)&a2[v23];
    uint64_t v73 = (int8x8_t *)&a2[v19 + v23];
    BOOL v74 = &a1[v17];
    BOOL v75 = &a2[2 * v7];
    if (!(v16 + v15)) {
      return;
    }
  }
  if (v15 >= 1)
  {
    v77.i64[0] = 0x8080808080808080;
    v77.i64[1] = 0x8080808080808080;
    v78.i64[0] = 0x1010101010101010;
    v78.i64[1] = 0x1010101010101010;
    int32x4_t v79 = (int32x4_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v75), *v65), v77), v78);
    v78.i16[0] = *(_OWORD *)v12;
    v78.i16[1] = BYTE2(*(_OWORD *)v12);
    v78.i16[2] = BYTE4(*(void *)v12);
    v78.i16[3] = BYTE6(*(void *)v12);
    v78.i16[4] = *(void *)(v12 + 8);
    v78.i16[5] = BYTE2(*(void *)(v12 + 8));
    v78.i16[6] = BYTE12(*(_OWORD *)v12);
    v78.i16[7] = BYTE14(*(_OWORD *)v12);
    *(int8x8_t *)v78.i8 = vqmovun_s16((int16x8_t)v78);
    v107.val[0] = (int8x8_t)vzip2q_s8((int8x16_t)vzip1q_s32((int32x4_t)v78, v79), veorq_s8(vqmovn_high_s16(*v72, *(int16x8_t *)v72->i8), v77)).u64[0];
    v107.val[1] = (int8x8_t)vzip2q_s8((int8x16_t)v79, veorq_s8(vqmovn_high_s16(*v73, *(int16x8_t *)v73->i8), v77)).u64[0];
    int8x8_t v80 = vzip1_s8(*(int8x8_t *)v78.i8, veor_s8(vqmovn_s16(*v68), (int8x8_t)0x8080808080808080));
    *(int8x8_t *)v77.i8 = vzip1_s8(*(int8x8_t *)v79.i8, veor_s8(vqmovn_s16(*v69), (int8x8_t)0x8080808080808080));
    vst2_s8(v74, *(int8x8x2_t *)((char *)&v77 - 8));
    int v81 = v74 + 16;
    vst2_s8(v81, v107);
  }
  if (v16 > 1)
  {
    unint64_t v82 = 0;
    uint64_t v83 = 2 * a3;
    uint64_t v84 = a3 + 16;
    v85.i64[0] = 0x8080808080808080;
    v85.i64[1] = 0x8080808080808080;
    v86.i64[0] = 0x1010101010101010;
    v86.i64[1] = 0x1010101010101010;
    int v87 = a1;
    do
    {
      unsigned int v88 = v16;
      int8x16_t v89 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v82 / 0x10]), v64[v82 / 0x10]), v85), v86);
      v90.i16[0] = *(_OWORD *)a5;
      v90.i16[1] = BYTE2(*(_OWORD *)a5);
      v90.i16[2] = BYTE4(*(void *)a5);
      v90.i16[3] = BYTE6(*(void *)a5);
      v90.i16[4] = *(void *)(a5 + 8);
      v90.i16[5] = BYTE2(*(void *)(a5 + 8));
      v90.i16[6] = BYTE12(*(_OWORD *)a5);
      v90.i16[7] = BYTE14(*(_OWORD *)a5);
      v91.i16[0] = *(_OWORD *)(a5 + v13);
      v91.i16[1] = BYTE2(*(_OWORD *)(a5 + v13));
      v91.i16[2] = BYTE4(*(void *)(a5 + v13));
      v91.i16[3] = BYTE6(*(void *)(a5 + v13));
      v91.i16[4] = *(void *)(a5 + v13 + 8);
      v91.i16[5] = BYTE2(*(void *)(a5 + v13 + 8));
      v91.i16[6] = BYTE12(*(_OWORD *)(a5 + v13));
      v91.i16[7] = BYTE14(*(_OWORD *)(a5 + v13));
      int32x4_t v92 = (int32x4_t)vqmovun_high_s16(vqmovun_s16(v90), v91);
      int8x16_t v93 = (int8x16_t)vuzp1q_s32(v92, vrev64q_s32(v92));
      int8x16_t v94 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v66[v82 / 0x10]), *(int16x8_t *)v70[v82 / 8].i8), v85);
      int8x16_t v95 = vzip1q_s8(v93, v94);
      int8x16_t v96 = vzip2q_s8(v93, v94);
      int8x16_t v97 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v67[v82 / 0x10]), *(int16x8_t *)v71[v82 / 8].i8), v85);
      int8x16_t v98 = vzip1q_s8(v89, v97);
      int8x16_t v99 = vzip2q_s8(v89, v97);
      vst2_s8(v87, (int8x8x2_t)v95);
      v87 += v83;
      int8x8_t v100 = a1 + 16;
      vst2_s8(v100, (int8x8x2_t)v96);
      int8x8_t v101 = (int8x16_t *)&a1[v84];
      a1 = v87;
      v101[-1] = vzip2q_s8(v95, v98);
      *int8x8_t v101 = vzip2q_s8(v96, v99);
      int v16 = v88 - 2;
      a5 += (2 * v13);
      v82 += 16;
    }
    while (v88 > 3);
    a2 = (int16x8_t *)((char *)a2 + v82);
    int8x16_t v64 = (int16x8_t *)((char *)v64 + v82);
    int8x16_t v66 = (int16x8_t *)((char *)v66 + v82);
    unint64_t v67 = (int16x8_t *)((char *)v67 + v82);
    unint64_t v70 = (int8x8_t *)((char *)v70 + v82);
    int32x4_t v71 = (int8x8_t *)((char *)v71 + v82);
  }
  if (v16 == 1)
  {
    v102.i64[0] = 0x8080808080808080;
    v102.i64[1] = 0x8080808080808080;
    v103.i64[0] = 0x1010101010101010;
    v103.i64[1] = 0x1010101010101010;
    int32x4_t v104 = (int32x4_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), *v64), v102), v103);
    v103.i16[0] = *(_OWORD *)a5;
    v103.i16[1] = BYTE2(*(_OWORD *)a5);
    v103.i16[2] = BYTE4(*(void *)a5);
    v103.i16[3] = BYTE6(*(void *)a5);
    v103.i16[4] = *(void *)(a5 + 8);
    v103.i16[5] = BYTE2(*(void *)(a5 + 8));
    v103.i16[6] = BYTE12(*(_OWORD *)a5);
    v103.i16[7] = BYTE14(*(_OWORD *)a5);
    *(int8x8_t *)v103.i8 = vqmovun_s16((int16x8_t)v103);
    v108.val[0] = (int8x8_t)vzip2q_s8((int8x16_t)vzip1q_s32((int32x4_t)v103, v104), veorq_s8(vqmovn_high_s16(*v70, *(int16x8_t *)v70->i8), v102)).u64[0];
    v108.val[1] = (int8x8_t)vzip2q_s8((int8x16_t)v104, veorq_s8(vqmovn_high_s16(*v71, *(int16x8_t *)v71->i8), v102)).u64[0];
    int8x8_t v105 = vzip1_s8(*(int8x8_t *)v103.i8, veor_s8(vqmovn_s16(*v66), (int8x8_t)0x8080808080808080));
    *(int8x8_t *)v102.i8 = vzip1_s8(*(int8x8_t *)v104.i8, veor_s8(vqmovn_s16(*v67), (int8x8_t)0x8080808080808080));
    vst2_s8(a1, *(int8x8x2_t *)((char *)&v102 - 8));
    int v106 = a1 + 16;
    vst2_s8(v106, v108);
  }
}

unsigned char *from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)1>(unsigned char *result, uint64_t a2, int a3, int a4, unsigned char *a5, int a6, int a7, int a8)
{
  if (a8 >= 1 && a7 >= 1)
  {
    int v8 = 0;
    uint64_t v9 = (a8 * a7);
    uint64_t v10 = 8u / a8 * a6;
    uint64_t v11 = a3;
    uint64_t v12 = 2 * (4 * v9);
    uint64_t v13 = a2 + v12;
    uint64_t v14 = a2 + v12 + v12;
    uint64_t v15 = 2 * v9;
    uint64_t v16 = a2 + v12 + 2 * v9;
    uint64_t v17 = v16 + v12;
    uint64_t v18 = a2 + v15;
    uint64_t v19 = 2 * a7;
    uint64_t v20 = 8u / a7;
    do
    {
      if (v8 == (a4 & ~(a4 >> 31))) {
        break;
      }
      uint64_t v21 = 0;
      uint64_t v22 = a5;
      uint64_t v23 = result;
      do
      {
        int v24 = *(__int16 *)(a2 + 2 * v21);
        int v25 = *(__int16 *)(v13 + 2 * v21);
        int v26 = *(__int16 *)(v16 + 2 * v21);
        *uint64_t v23 = *v22;
        char v27 = v24 + 112;
        if (v24 > 127) {
          char v27 = -17;
        }
        if (v24 >= -112) {
          char v28 = v27;
        }
        else {
          char v28 = 0;
        }
        v23[1] = v28;
        if (v25 >= 127) {
          int v29 = 127;
        }
        else {
          int v29 = v25;
        }
        if (v29 <= -128) {
          LOBYTE(v29) = 0x80;
        }
        v23[2] = v29 ^ 0x80;
        if (v26 >= 127) {
          int v26 = 127;
        }
        if (v26 <= -128) {
          LOBYTE(v26) = 0x80;
        }
        v23[3] = v26 ^ 0x80;
        v23 += 4;
        v22 += v20;
        ++v21;
      }
      while (a7 != v21);
      uint64_t v30 = 0;
      do
      {
        int v31 = *(__int16 *)(v18 + 2 * v30);
        int v32 = *(__int16 *)(v14 + 2 * v30);
        int v33 = *(__int16 *)(v17 + 2 * v30);
        *uint64_t v23 = *v22;
        char v34 = v31 + 112;
        if (v31 > 127) {
          char v34 = -17;
        }
        if (v31 >= -112) {
          char v35 = v34;
        }
        else {
          char v35 = 0;
        }
        v23[1] = v35;
        if (v32 >= 127) {
          int v36 = 127;
        }
        else {
          int v36 = v32;
        }
        if (v36 <= -128) {
          LOBYTE(v36) = 0x80;
        }
        v23[2] = v36 ^ 0x80;
        if (v33 >= 127) {
          int v33 = 127;
        }
        if (v33 <= -128) {
          LOBYTE(v33) = 0x80;
        }
        v23[3] = v33 ^ 0x80;
        v22 += v20;
        ++v30;
        v23 += 4;
      }
      while (a7 != v30);
      result += v11;
      a5 += v10;
      v18 += v19;
      v16 += v19;
      v17 += v19;
      ++v8;
      v13 += v19;
      a2 += v19;
      v14 += v19;
    }
    while (v8 != a8);
    int v37 = 0;
    uint64_t v38 = v16 + v15;
    uint64_t v39 = v17 + v15;
    uint64_t v40 = v18 + v15;
    if (a8 > a4) {
      a4 = a8;
    }
    int v41 = a4 - a8;
    do
    {
      if (v37 == v41) {
        break;
      }
      uint64_t v42 = 0;
      int v43 = a5;
      int v44 = result;
      do
      {
        int v45 = *(__int16 *)(v18 + 2 * v42);
        int v46 = *(__int16 *)(v16 + 2 * v42);
        int v47 = *(__int16 *)(v38 + 2 * v42);
        unsigned char *v44 = *v43;
        char v48 = v45 + 112;
        if (v45 > 127) {
          char v48 = -17;
        }
        if (v45 >= -112) {
          char v49 = v48;
        }
        else {
          char v49 = 0;
        }
        v44[1] = v49;
        if (v46 >= 127) {
          int v50 = 127;
        }
        else {
          int v50 = v46;
        }
        if (v50 <= -128) {
          LOBYTE(v50) = 0x80;
        }
        v44[2] = v50 ^ 0x80;
        if (v47 >= 127) {
          int v47 = 127;
        }
        if (v47 <= -128) {
          LOBYTE(v47) = 0x80;
        }
        v44[3] = v47 ^ 0x80;
        v44 += 4;
        v43 += v20;
        ++v42;
      }
      while (a7 != v42);
      uint64_t v51 = 0;
      do
      {
        int v52 = *(__int16 *)(v40 + 2 * v51);
        int v53 = *(__int16 *)(v17 + 2 * v51);
        int v54 = *(__int16 *)(v39 + 2 * v51);
        unsigned char *v44 = *v43;
        char v55 = v52 + 112;
        if (v52 > 127) {
          char v55 = -17;
        }
        if (v52 >= -112) {
          char v56 = v55;
        }
        else {
          char v56 = 0;
        }
        v44[1] = v56;
        if (v53 >= 127) {
          int v57 = 127;
        }
        else {
          int v57 = v53;
        }
        if (v57 <= -128) {
          LOBYTE(v57) = 0x80;
        }
        v44[2] = v57 ^ 0x80;
        if (v54 >= 127) {
          int v54 = 127;
        }
        if (v54 <= -128) {
          LOBYTE(v54) = 0x80;
        }
        v44[3] = v54 ^ 0x80;
        v43 += v20;
        ++v51;
        v44 += 4;
      }
      while (a7 != v51);
      result += v11;
      a5 += v10;
      ++v37;
      v38 += v19;
      v16 += v19;
      v18 += v19;
      v39 += v19;
      v17 += v19;
      v40 += v19;
    }
    while (v37 != a8);
  }
  return result;
}

void from_444_to_y408_r408_4xH<true,(AlphaOutputMethod)2,false>(char *a1, int16x8_t *a2, int a3, int a4, unsigned int a5)
{
  uint64_t v5 = a5 >> 1;
  uint64_t v6 = (4 * v5);
  uint64_t v7 = (6 * v5);
  uint64_t v8 = (8 * v5);
  uint64_t v9 = (10 * v5);
  int v10 = a4 - a5;
  if (a4 <= (int)a5) {
    int v11 = 0;
  }
  else {
    int v11 = a4 - a5;
  }
  int v12 = a4 - v11;
  if (v11 < 2)
  {
    uint64_t v65 = 2 * (a5 >> 1);
    int v53 = &a2[(unint64_t)v65 / 2];
    int8x16_t v64 = &a2[a5 & 0xFFFFFFFE];
    int v54 = &v64[(unint64_t)v65 / 2];
    char v55 = &a2[v6];
    char v56 = &v55[(unint64_t)v65 / 2];
    int v57 = &a2[v7];
    int8x16_t v58 = &v57[(unint64_t)v65 / 2];
    int8x16_t v59 = (int8x8_t *)&a2[v8];
    int8x16_t v60 = &v59[v65];
    int8x16_t v61 = (int8x8_t *)&a2[v9];
    int8x16_t v62 = &v61[v65];
    int8x16_t v63 = &a1[(int)a5 * (uint64_t)a3];
    if (!(v12 + v11)) {
      return;
    }
  }
  else
  {
    uint64_t v13 = (int)a5 * (uint64_t)a3;
    uint64_t v14 = v5;
    uint64_t v15 = v6;
    uint64_t v16 = v7;
    uint64_t v17 = v8;
    uint64_t v18 = v9;
    uint64_t v19 = 16 * v5 + 16 * v9;
    uint64_t v20 = a3 + 16;
    v22.i64[0] = 0x8080808080808080;
    v22.i64[1] = 0x8080808080808080;
    v23.i64[0] = 0x1010101010101010;
    v23.i64[1] = 0x1010101010101010;
    v24.i64[0] = -1;
    v24.i64[1] = -1;
    int v11 = v10;
    do
    {
      int8x16_t v25 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), a2[v5]), v22), v23);
      int8x16_t v26 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v15]), a2[v17]), v22);
      int8x16_t v27 = vzip1q_s8(v24, v26);
      int8x16_t v28 = vzip2q_s8(v24, v26);
      int8x16_t v29 = veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v5 + v15]), a2[v5 + v17]), v22);
      int8x16_t v30 = vzip1q_s8(v25, v29);
      int8x16_t v31 = vzip2q_s8(v25, v29);
      int v32 = a1;
      vst2_s8(v32, (int8x8x2_t)v27);
      uint64_t v21 = v20 + v13;
      int v33 = (int8x16_t *)&v32[v21];
      char v34 = a1 + 16;
      vst2_s8(v34, (int8x8x2_t)v28);
      char v35 = (int8x16_t *)&a1[v20];
      v35[-1] = vzip2q_s8(v27, v30);
      int8x16_t *v35 = vzip2q_s8(v28, v31);
      int16x8_t v36 = a2[2 * v5];
      int16x8_t v37 = a2[3 * v5];
      int16x8_t v38 = a2[v16];
      int16x8_t v39 = a2[v18];
      int16x8_t v40 = a2[v5 + v16];
      int16x8_t v41 = *(int16x8_t *)((char *)a2 + v19);
      LODWORD(v35) = v11;
      ++a2;
      uint64_t v42 = &a1[v13];
      a1 += 2 * a3;
      v12 -= 2;
      int8x16_t v43 = vqmovn_high_s16(vqmovn_s16(v36), v37);
      int8x16_t v44 = vqmovn_high_s16(vqmovn_s16(v38), v39);
      int8x16_t v45 = vqmovn_high_s16(vqmovn_s16(v40), v41);
      int8x16_t v46 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(v43, v22), v23);
      int8x16_t v47 = veorq_s8(v44, v22);
      int8x16_t v48 = vzip1q_s8(v24, v47);
      int8x16_t v49 = vzip2q_s8(v24, v47);
      int8x16_t v50 = veorq_s8(v45, v22);
      int8x16_t v51 = vzip1q_s8(v46, v50);
      int8x16_t v52 = vzip2q_s8(v46, v50);
      vst2_s8(v42, (int8x8x2_t)v48);
      v42 += 16;
      vst2_s8(v42, (int8x8x2_t)v49);
      v33[-1] = vzip2q_s8(v48, v51);
      int8x16_t *v33 = vzip2q_s8(v49, v52);
      int v11 = v35 - 2;
    }
    while (v35 > 3);
    int v53 = &a2[v14];
    int v54 = &a2[3 * v5];
    char v55 = &a2[v15];
    char v56 = &a2[v14 + v15];
    int v57 = &a2[v16];
    int8x16_t v58 = &a2[v14 + v16];
    int8x16_t v59 = (int8x8_t *)&a2[v17];
    int8x16_t v60 = (int8x8_t *)&a2[v14 + v17];
    int8x16_t v61 = (int8x8_t *)&a2[v18];
    int8x16_t v62 = (int8x8_t *)&a2[v14 + v18];
    int8x16_t v63 = &a1[v13];
    int8x16_t v64 = &a2[2 * v5];
    if (!(v12 + v11)) {
      return;
    }
  }
  if (v11 >= 1)
  {
    v66.i64[0] = 0x8080808080808080;
    v66.i64[1] = 0x8080808080808080;
    v67.i64[0] = 0x1010101010101010;
    v67.i64[1] = 0x1010101010101010;
    int8x16_t v68 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*v64), *v54), v66), v67);
    v67.i64[0] = -1;
    v67.i64[1] = -1;
    v67.i64[0] = vzip2q_s8((int8x16_t)v67, veorq_s8(vqmovn_high_s16(*v61, *(int16x8_t *)v61->i8), v66)).u64[0];
    unint64_t v69 = vzip2q_s8(v68, veorq_s8(vqmovn_high_s16(*v62, *(int16x8_t *)v62->i8), v66)).u64[0];
    int8x8_t v70 = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v57), (int8x8_t)0x8080808080808080));
    *(int8x8_t *)v66.i8 = vzip1_s8(*(int8x8_t *)v68.i8, veor_s8(vqmovn_s16(*v58), (int8x8_t)0x8080808080808080));
    vst2_s8(v63, *(int8x8x2_t *)((char *)&v66 - 8));
    int32x4_t v71 = v63 + 16;
    vst2_s8(v71, (int8x8x2_t)v67);
  }
  if (v12 > 1)
  {
    unint64_t v72 = 0;
    uint64_t v73 = 2 * a3;
    uint64_t v74 = a3 + 16;
    v75.i64[0] = 0x8080808080808080;
    v75.i64[1] = 0x8080808080808080;
    v76.i64[0] = 0x1010101010101010;
    v76.i64[1] = 0x1010101010101010;
    v77.i64[0] = -1;
    v77.i64[1] = -1;
    uint8x16_t v78 = a1;
    do
    {
      unsigned int v79 = v12;
      int8x16_t v80 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(a2[v72 / 0x10]), v53[v72 / 0x10]), v75), v76);
      int8x16_t v81 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v55[v72 / 0x10]), *(int16x8_t *)v59[v72 / 8].i8), v75);
      int8x16_t v82 = vzip1q_s8(v77, v81);
      int8x16_t v83 = vzip2q_s8(v77, v81);
      int8x16_t v84 = veorq_s8(vqmovn_high_s16(vqmovn_s16(v56[v72 / 0x10]), *(int16x8_t *)v60[v72 / 8].i8), v75);
      int8x16_t v85 = vzip1q_s8(v80, v84);
      int8x16_t v86 = vzip2q_s8(v80, v84);
      vst2_s8(v78, (int8x8x2_t)v82);
      v78 += v73;
      int v87 = a1 + 16;
      vst2_s8(v87, (int8x8x2_t)v83);
      unsigned int v88 = (int8x16_t *)&a1[v74];
      v88[-1] = vzip2q_s8(v82, v85);
      *unsigned int v88 = vzip2q_s8(v83, v86);
      a1 = v78;
      int v12 = v79 - 2;
      v72 += 16;
    }
    while (v79 > 3);
    a2 = (int16x8_t *)((char *)a2 + v72);
    int v53 = (int16x8_t *)((char *)v53 + v72);
    char v55 = (int16x8_t *)((char *)v55 + v72);
    char v56 = (int16x8_t *)((char *)v56 + v72);
    int8x16_t v59 = (int8x8_t *)((char *)v59 + v72);
    int8x16_t v60 = (int8x8_t *)((char *)v60 + v72);
  }
  if (v12 == 1)
  {
    v89.i64[0] = 0x8080808080808080;
    v89.i64[1] = 0x8080808080808080;
    v90.i64[0] = 0x1010101010101010;
    v90.i64[1] = 0x1010101010101010;
    int8x16_t v91 = (int8x16_t)vqsubq_u8((uint8x16_t)veorq_s8(vqmovn_high_s16(vqmovn_s16(*a2), *v53), v89), v90);
    v90.i64[0] = -1;
    v90.i64[1] = -1;
    v90.i64[0] = vzip2q_s8((int8x16_t)v90, veorq_s8(vqmovn_high_s16(*v59, *(int16x8_t *)v59->i8), v89)).u64[0];
    unint64_t v92 = vzip2q_s8(v91, veorq_s8(vqmovn_high_s16(*v60, *(int16x8_t *)v60->i8), v89)).u64[0];
    int8x8_t v93 = vzip1_s8((int8x8_t)-1, veor_s8(vqmovn_s16(*v55), (int8x8_t)0x8080808080808080));
    *(int8x8_t *)v89.i8 = vzip1_s8(*(int8x8_t *)v91.i8, veor_s8(vqmovn_s16(*v56), (int8x8_t)0x8080808080808080));
    vst2_s8(a1, *(int8x8x2_t *)((char *)&v89 - 8));
    int8x16_t v94 = a1 + 16;
    vst2_s8(v94, (int8x8x2_t)v90);
  }
}

__int8 *from_444_to_AYUV_UYVY_WxH<(PixelFormat)1916022840,(AlphaOutputMethod)2>(__int8 *result, int16x8_t *a2, int a3, int a4, unsigned int a5, int a6)
{
  if (a6 >= 1)
  {
    uint64_t v212 = a5 - 1;
    if ((int)a5 >= 1)
    {
      uint64_t v6 = 0;
      uint64_t v7 = a6 * a5;
      uint64_t v8 = a3;
      uint64_t v9 = 2 * (4 * v7);
      int v10 = &a2->i16[(unint64_t)v9 / 2];
      int v11 = &a2->i16[(unint64_t)v9 / 2 + (unint64_t)v9 / 2];
      unint64_t v12 = (unint64_t)a2 + 2 * v7 + v9;
      uint64_t v13 = (__int16 *)(v12 + v9);
      uint64_t v14 = &a2->i16[v7];
      uint64_t v15 = 4 * v212;
      uint64_t v205 = v15 + 8;
      uint64_t v16 = 4 * (4 * v7);
      uint64_t v17 = 2 * v212 + 2;
      uint64_t v18 = v17 + 2 * v7;
      uint64_t v19 = 2 * a5;
      uint64_t v211 = v17;
      uint64_t v204 = v15 + 4;
      uint64_t v20 = (4 * v7) + v212;
      uint64_t v21 = a5 & 0xFFFFFFF0;
      uint64_t v208 = 2 * v21;
      uint64_t v200 = 4 * v21;
      uint64_t v201 = v7;
      uint64_t v202 = v21;
      uint64_t v195 = v21 - 1;
      uint64_t v22 = a5 & 0xFFFFFFF8;
      uint64_t v193 = v22;
      uint64_t v194 = v22;
      uint64_t v23 = v9 + 2 * v7;
      uint64_t v191 = -v22;
      uint64_t v192 = 4 * v22;
      float32x4_t v206 = &a2->i16[v20 + 1 + v7];
      int8x16x4_t v203 = &a2->i16[v20 + 1];
      v24.i64[0] = 0x6F006F006F006FLL;
      v24.i64[1] = 0x6F006F006F006FLL;
      v25.i64[0] = 0x7F007F007F007FLL;
      v25.i64[1] = 0x7F007F007F007FLL;
      uint64_t v198 = (uint64_t)a2->i64 + v18 + v16;
      uint64_t v197 = (uint64_t)a2->i64 + v17 + v16;
      uint64_t v196 = (uint64_t)a2->i64 + v18;
      v26.i64[0] = -1;
      v26.i64[1] = -1;
      uint64_t v27 = -1;
      v28.i64[0] = 0x7070707070707070;
      v28.i64[1] = 0x7070707070707070;
      v29.i64[0] = 0xEFEFEFEFEFEFEFEFLL;
      v29.i64[1] = 0xEFEFEFEFEFEFEFEFLL;
      v30.i64[0] = 0x8080808080808080;
      v30.i64[1] = 0x8080808080808080;
      int8x16_t v31 = a2;
      int v32 = result;
      int v33 = a4 & ~(a4 >> 31);
      uint64_t v213 = v8;
      while (v6 != v33)
      {
        uint64_t v34 = v6 * v8;
        uint64_t v35 = v19 * v6;
        if (a5 >= 0x10)
        {
          unsigned int v37 = 0;
          uint64_t v36 = 0;
          unint64_t v60 = (unint64_t)&result[v204 + v34];
          BOOL v62 = v32 < (__int8 *)v203 + v35 && (unint64_t)v10 < v60;
          BOOL v64 = v32 < &a2->i8[v211 + v35] && (unint64_t)v31 < v60;
          BOOL v65 = v12 >= v60 || v32 >= (__int8 *)v206 + v35;
          if (v65 && !v62)
          {
            unint64_t v38 = v12;
            int16x8_t v39 = (__int16 *)v12;
            int16x8_t v40 = v10;
            int16x8_t v41 = (__int16 *)v31;
            uint64_t v42 = v32;
            if (!v64)
            {
              uint64_t v66 = 0;
              int16x8_t v39 = (__int16 *)(v38 + v208);
              int16x8_t v40 = &v10[(unint64_t)v208 / 2];
              int16x8_t v41 = &v31->i16[(unint64_t)v208 / 2];
              uint64_t v42 = &v32[v200];
              uint8x16_t v67 = v31;
              do
              {
                int8x16_t v68 = (int16x8_t *)((char *)v67 + v23);
                unint64_t v69 = (int16x8_t *)((char *)v67 + v9);
                int8x8_t v70 = &v32[v66];
                int16x8_t v72 = *v67;
                int16x8_t v71 = v67[1];
                v67 += 2;
                int8x16_t v73 = vbicq_s8(vbslq_s8(vuzp1q_s8((int8x16_t)vcgtq_s16(v72, v25), (int8x16_t)vcgtq_s16(v71, v25)), v29, vaddq_s8(vuzp1q_s8((int8x16_t)v72, (int8x16_t)v71), v28)), vuzp1q_s8((int8x16_t)vcgtq_s16(v24, v72), (int8x16_t)vcgtq_s16(v24, v71)));
                int8x16_t v74 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v69), v69[1]), v30);
                int8x16_t v75 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*v68), v68[1]), v30);
                vst4q_s8(v70, *(int8x16x4_t *)v26.i8);
                v66 += 64;
              }
              while (v200 != v66);
              uint64_t v36 = a5 & 0xFFFFFFF0;
              unsigned int v37 = a5 & 0xFFFFFFF0;
              uint64_t v44 = v195;
              if (v202 == a5) {
                goto LABEL_26;
              }
            }
            goto LABEL_9;
          }
        }
        else
        {
          uint64_t v36 = 0;
          unsigned int v37 = 0;
        }
        unint64_t v38 = v12;
        int16x8_t v39 = (__int16 *)v12;
        int16x8_t v40 = v10;
        int16x8_t v41 = (__int16 *)v31;
        uint64_t v42 = v32;
LABEL_9:
        unsigned int v43 = a5 - v37;
        uint64_t v44 = v36 + v212 - v37;
        do
        {
          int v46 = *v41++;
          int v45 = v46;
          int v48 = *v40++;
          int v47 = v48;
          int v50 = *v39++;
          int v49 = v50;
          *uint64_t v42 = -1;
          char v51 = v45 + 112;
          if (v45 > 127) {
            char v51 = -17;
          }
          if (v45 >= -112) {
            char v52 = v51;
          }
          else {
            char v52 = 0;
          }
          v42[1] = v52;
          if (v47 >= 127) {
            int v53 = 127;
          }
          else {
            int v53 = v47;
          }
          if (v53 <= -128) {
            LOBYTE(v53) = 0x80;
          }
          v42[2] = v53 ^ 0x80;
          if (v49 >= 127) {
            int v54 = 127;
          }
          else {
            int v54 = v49;
          }
          if (v54 <= -128) {
            LOBYTE(v54) = 0x80;
          }
          v42[3] = v54 ^ 0x80;
          v42 += 4;
          --v43;
        }
        while (v43);
LABEL_26:
        if (a5 < 8)
        {
          unsigned int v55 = 0;
          char v56 = v13;
          int v57 = v11;
          int8x16_t v58 = v14;
          int8x16_t v59 = v42;
          uint64_t v8 = v213;
          goto LABEL_81;
        }
        unsigned int v55 = 0;
        unint64_t v76 = v198 + v35;
        unint64_t v77 = v196 + v35;
        unint64_t v78 = (unint64_t)&result[4 * v44 + v205 + v34];
        BOOL v80 = (unint64_t)v42 < v197 + v35 && (unint64_t)v11 < v78;
        BOOL v82 = (unint64_t)v42 < v77 && (unint64_t)v14 < v78;
        BOOL v83 = (unint64_t)v13 >= v78 || (unint64_t)v42 >= v76;
        uint64_t v8 = v213;
        if (!v83 || v80 || v82)
        {
          char v56 = v13;
          int v57 = v11;
          int8x16_t v58 = v14;
          int8x16_t v59 = v42;
          goto LABEL_81;
        }
        if (a5 >= 0x10)
        {
          unint64_t v85 = 0;
          int8x16_t v86 = v42;
          do
          {
            v216.val[1] = vbicq_s8(vbslq_s8(vuzp1q_s8((int8x16_t)vcgtq_s16(*(int16x8_t *)&v14[v85 / 2], v25), (int8x16_t)vcgtq_s16(*(int16x8_t *)&v14[v85 / 2 + 8], v25)), v29, vaddq_s8(vuzp1q_s8(*(int8x16_t *)&v14[v85 / 2], *(int8x16_t *)&v14[v85 / 2 + 8]), v28)), vuzp1q_s8((int8x16_t)vcgtq_s16(v24, *(int16x8_t *)&v14[v85 / 2]), (int8x16_t)vcgtq_s16(v24, *(int16x8_t *)&v14[v85 / 2 + 8])));
            v216.val[2] = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)((char *)v31 + v16 + v85)), *(int16x8_t *)((char *)&v31[1] + v16 + v85)), v30);
            v216.val[3] = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)&v14[(unint64_t)v16 / 2 + v85 / 2]), *(int16x8_t *)&v14[(unint64_t)v16 / 2 + 8 + v85 / 2]), v30);
            v216.val[0] = v26;
            vst4q_s8(v86, v216);
            v86 += 64;
            v85 += 32;
          }
          while (v208 != v85);
          if (v202 == a5) {
            goto LABEL_4;
          }
          uint64_t v84 = a5 & 0xFFFFFFF0;
          if ((a5 & 8) == 0)
          {
            int8x16_t v59 = &v42[v200];
            int8x16_t v58 = &v14[(unint64_t)v208 / 2];
            int v57 = &v11[(unint64_t)v208 / 2];
            char v56 = &v13[(unint64_t)v208 / 2];
            unsigned int v55 = v202;
LABEL_81:
            unsigned int v99 = a5 - v55;
            do
            {
              int v101 = *v58++;
              int v100 = v101;
              int v103 = *v57++;
              int v102 = v103;
              int v105 = *v56++;
              int v104 = v105;
              __int8 *v59 = -1;
              char v106 = v100 + 112;
              if (v100 > 127) {
                char v106 = -17;
              }
              if (v100 >= -112) {
                char v107 = v106;
              }
              else {
                char v107 = 0;
              }
              v59[1] = v107;
              if (v102 >= 127) {
                int v108 = 127;
              }
              else {
                int v108 = v102;
              }
              if (v108 <= -128) {
                LOBYTE(v108) = 0x80;
              }
              v59[2] = v108 ^ 0x80;
              if (v104 >= 127) {
                int v109 = 127;
              }
              else {
                int v109 = v104;
              }
              if (v109 <= -128) {
                LOBYTE(v109) = 0x80;
              }
              v59[3] = v109 ^ 0x80;
              v59 += 4;
              --v99;
            }
            while (v99);
            goto LABEL_4;
          }
        }
        else
        {
          uint64_t v84 = 0;
        }
        char v56 = &v13[v193];
        int v57 = &v11[v193];
        int8x16_t v58 = &v14[v193];
        int8x16_t v59 = &v42[v192];
        uint64_t v87 = v84;
        unsigned int v88 = (int16x8_t *)&v14[v84];
        int8x16_t v89 = (int16x8_t *)&v11[v84];
        uint64_t v90 = v191 + v84;
        int8x16_t v91 = &v42[4 * v84];
        do
        {
          int16x8_t v92 = *v88++;
          int16x8_t v93 = v92;
          int8x8_t v94 = vmovn_s16(v92);
          int16x8_t v95 = *v89++;
          int8x8_t v96 = vbic_s8(vbsl_s8(vmovn_s16(vcgtq_s16(v93, v25)), (int8x8_t)0xEFEFEFEFEFEFEFEFLL, vadd_s8(v94, (int8x8_t)0x7070707070707070)), vmovn_s16(vcgtq_s16(v24, v93)));
          int8x8_t v97 = veor_s8(vqmovn_s16(v95), (int8x8_t)0x8080808080808080);
          int8x8_t v98 = veor_s8(vqmovn_s16(*(int16x8_t *)&v13[v87]), (int8x8_t)0x8080808080808080);
          vst4_s8(v91, *(int8x8x4_t *)&v27);
          v91 += 32;
          v87 += 8;
          v90 += 8;
        }
        while (v90);
        unsigned int v55 = a5 & 0xFFFFFFF8;
        if (v194 != a5) {
          goto LABEL_81;
        }
LABEL_4:
        v32 += v8;
        int8x16_t v31 = (int16x8_t *)((char *)v31 + v19);
        uint64_t v14 = (__int16 *)((char *)v14 + v19);
        int v10 = (__int16 *)((char *)v10 + v19);
        int v11 = (__int16 *)((char *)v11 + v19);
        unint64_t v12 = v38 + v19;
        uint64_t v13 = (__int16 *)((char *)v13 + v19);
        if (++v6 == a6) {
          break;
        }
      }
      int8x8_t result = 0;
      int8x16_t v110 = (__int16 *)(v12 + v201 * 2);
      uint64_t v111 = &v13[v201];
      unsigned int v112 = &v14[v201];
      int v113 = a4;
      if (a6 > a4) {
        int v113 = a6;
      }
      int v207 = v113 - a6;
      v114.i64[0] = 0x6F006F006F006FLL;
      v114.i64[1] = 0x6F006F006F006FLL;
      v115.i64[0] = 0x7F007F007F007FLL;
      v115.i64[1] = 0x7F007F007F007FLL;
      unint64_t v199 = v12;
      v116.i64[0] = -1;
      v116.i64[1] = -1;
      uint64_t v117 = -1;
      v118.i64[0] = 0x7070707070707070;
      v118.i64[1] = 0x7070707070707070;
      v119.i64[0] = 0xEFEFEFEFEFEFEFEFLL;
      v119.i64[1] = 0xEFEFEFEFEFEFEFEFLL;
      v120.i64[0] = 0x8080808080808080;
      v120.i64[1] = 0x8080808080808080;
      float32x4_t v121 = v13;
      int v122 = (__int16 *)v12;
      uint64_t v123 = v14;
      int v124 = v32;
      do
      {
        if (result == v207) {
          return result;
        }
        uint64_t v125 = 2 * (a6 * a5 + v212) + 2 + v19 * (void)result;
        uint64_t v126 = v211 + v19 * (void)result;
        uint64_t v210 = (void)result * v8;
        if (a5 >= 0x10)
        {
          unsigned int v128 = 0;
          uint64_t v127 = 0;
          int8x16_t v146 = (__int16 *)&v32[v204 + (void)result * v8];
          BOOL v148 = (unint64_t)v124 < v199 + v126 && v122 < v146;
          BOOL v150 = v124 < (__int8 *)v14 + v126 && v123 < v146;
          BOOL v151 = v110 >= v146 || (unint64_t)v124 >= v199 + v125;
          if (v151 && !v148)
          {
            int v129 = v110;
            int v130 = v122;
            int v131 = v123;
            int v132 = v124;
            if (!v150)
            {
              unint64_t v152 = 0;
              int v129 = &v110[(unint64_t)v208 / 2];
              int v130 = &v122[(unint64_t)v208 / 2];
              int v131 = &v123[(unint64_t)v208 / 2];
              int v132 = &v124[v200];
              BOOL v153 = v124;
              do
              {
                int8x16_t v154 = vbicq_s8(vbslq_s8(vuzp1q_s8((int8x16_t)vcgtq_s16(*(int16x8_t *)&v123[v152 / 2], v115), (int8x16_t)vcgtq_s16(*(int16x8_t *)&v123[v152 / 2 + 8], v115)), v119, vaddq_s8(vuzp1q_s8(*(int8x16_t *)&v123[v152 / 2], *(int8x16_t *)&v123[v152 / 2 + 8]), v118)), vuzp1q_s8((int8x16_t)vcgtq_s16(v114, *(int16x8_t *)&v123[v152 / 2]), (int8x16_t)vcgtq_s16(v114, *(int16x8_t *)&v123[v152 / 2 + 8])));
                int8x16_t v155 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)&v122[v152 / 2]), *(int16x8_t *)&v122[v152 / 2 + 8]), v120);
                int8x16_t v156 = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)&v122[v201 + v152 / 2]), *(int16x8_t *)&v122[v201 + 8 + v152 / 2]), v120);
                vst4q_s8(v153, *(int8x16x4_t *)v116.i8);
                v153 += 64;
                v152 += 32;
              }
              while ((v19 & 0x1FFFFFFE0) != v152);
              uint64_t v127 = a5 & 0xFFFFFFF0;
              unsigned int v128 = a5 & 0xFFFFFFF0;
              uint64_t v134 = v195;
              if (v202 == a5) {
                goto LABEL_124;
              }
            }
            goto LABEL_107;
          }
        }
        else
        {
          uint64_t v127 = 0;
          unsigned int v128 = 0;
        }
        int v129 = v110;
        int v130 = v122;
        int v131 = v123;
        int v132 = v124;
LABEL_107:
        unsigned int v133 = a5 - v128;
        uint64_t v134 = v127 + v212 - v128;
        do
        {
          int v136 = *v131++;
          int v135 = v136;
          int v138 = *v130++;
          int v137 = v138;
          int v140 = *v129++;
          int v139 = v140;
          *int v132 = -1;
          char v141 = v135 + 112;
          if (v135 > 127) {
            char v141 = -17;
          }
          if (v135 >= -112) {
            char v142 = v141;
          }
          else {
            char v142 = 0;
          }
          v132[1] = v142;
          if (v137 >= 127) {
            int v143 = 127;
          }
          else {
            int v143 = v137;
          }
          if (v143 <= -128) {
            LOBYTE(v143) = 0x80;
          }
          v132[2] = v143 ^ 0x80;
          if (v139 >= 127) {
            int v144 = 127;
          }
          else {
            int v144 = v139;
          }
          if (v144 <= -128) {
            LOBYTE(v144) = 0x80;
          }
          v132[3] = v144 ^ 0x80;
          v132 += 4;
          --v133;
        }
        while (v133);
LABEL_124:
        if (a5 < 8)
        {
          unsigned int v145 = 0;
LABEL_170:
          int8x8_t v166 = v111;
          int v167 = v121;
          int v168 = v112;
          int v169 = v132;
LABEL_171:
          unsigned int v170 = a5 - v145;
          do
          {
            int v172 = *v168++;
            int v171 = v172;
            int v174 = *v167++;
            int v173 = v174;
            int v176 = *v166++;
            int v175 = v176;
            *int v169 = -1;
            char v177 = v171 + 112;
            if (v171 > 127) {
              char v177 = -17;
            }
            if (v171 >= -112) {
              char v178 = v177;
            }
            else {
              char v178 = 0;
            }
            v169[1] = v178;
            if (v173 >= 127) {
              int v179 = 127;
            }
            else {
              int v179 = v173;
            }
            if (v179 <= -128) {
              LOBYTE(v179) = 0x80;
            }
            v169[2] = v179 ^ 0x80;
            if (v175 >= 127) {
              int v180 = 127;
            }
            else {
              int v180 = v175;
            }
            if (v180 <= -128) {
              LOBYTE(v180) = 0x80;
            }
            v169[3] = v180 ^ 0x80;
            v169 += 4;
            --v170;
          }
          while (v170);
          goto LABEL_102;
        }
        unsigned int v145 = 0;
        unint64_t v157 = (unint64_t)v13 + v125;
        unint64_t v158 = (unint64_t)v14 + v125;
        int16x8_t v159 = (__int16 *)&v32[4 * v134 + v205 + v210];
        BOOL v161 = v132 < (__int8 *)v13 + v126 && v121 < v159;
        BOOL v163 = (unint64_t)v132 < v158 && v112 < v159;
        BOOL v164 = v111 >= v159 || (unint64_t)v132 >= v157;
        if (!v164 || v161 || v163) {
          goto LABEL_170;
        }
        if (a5 >= 0x10)
        {
          unint64_t v181 = 0;
          uint64_t v182 = v132;
          do
          {
            v217.val[1] = vbicq_s8(vbslq_s8(vuzp1q_s8((int8x16_t)vcgtq_s16(*(int16x8_t *)&v112[v181 / 2], v115), (int8x16_t)vcgtq_s16(*(int16x8_t *)&v112[v181 / 2 + 8], v115)), v119, vaddq_s8(vuzp1q_s8(*(int8x16_t *)&v112[v181 / 2], *(int8x16_t *)&v112[v181 / 2 + 8]), v118)), vuzp1q_s8((int8x16_t)vcgtq_s16(v114, *(int16x8_t *)&v112[v181 / 2]), (int8x16_t)vcgtq_s16(v114, *(int16x8_t *)&v112[v181 / 2 + 8])));
            v217.val[2] = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)&v121[v181 / 2]), *(int16x8_t *)&v121[v181 / 2 + 8]), v120);
            v217.val[3] = veorq_s8(vqmovn_high_s16(vqmovn_s16(*(int16x8_t *)&v121[v201 + v181 / 2]), *(int16x8_t *)&v121[v201 + 8 + v181 / 2]), v120);
            v217.val[0] = v116;
            vst4q_s8(v182, v217);
            v182 += 64;
            v181 += 32;
          }
          while (v208 != v181);
          if (v202 == a5) {
            goto LABEL_102;
          }
          uint64_t v165 = a5 & 0xFFFFFFF0;
          if ((a5 & 8) == 0)
          {
            int v169 = &v132[v200];
            int v168 = &v112[(unint64_t)v208 / 2];
            int v167 = &v121[(unint64_t)v208 / 2];
            int8x8_t v166 = &v111[(unint64_t)v208 / 2];
            unsigned int v145 = v202;
            goto LABEL_171;
          }
        }
        else
        {
          uint64_t v165 = 0;
        }
        int8x8_t v166 = &v111[v193];
        int v167 = &v121[v193];
        int v168 = &v112[v193];
        int v169 = &v132[v192];
        uint64_t v183 = v165;
        uint64_t v184 = v201 * 2 + 2 * v165;
        uint64_t v185 = v165 - (a5 & 0xFFFFFFF8);
        uint64_t v186 = &v132[4 * v165];
        do
        {
          int8x8_t v187 = vbic_s8(vbsl_s8(vmovn_s16(vcgtq_s16(*(int16x8_t *)((char *)v123 + v184), v115)), (int8x8_t)0xEFEFEFEFEFEFEFEFLL, vadd_s8(vmovn_s16(*(int16x8_t *)((char *)v123 + v184)), (int8x8_t)0x7070707070707070)), vmovn_s16(vcgtq_s16(v114, *(int16x8_t *)((char *)v123 + v184))));
          int8x8_t v188 = veor_s8(vqmovn_s16(*(int16x8_t *)&v121[v183]), (int8x8_t)0x8080808080808080);
          int8x8_t v189 = veor_s8(vqmovn_s16(*(int16x8_t *)((char *)v121 + v184)), (int8x8_t)0x8080808080808080);
          vst4_s8(v186, *(int8x8x4_t *)&v117);
          v186 += 32;
          v184 += 16;
          v183 += 8;
          v185 += 8;
        }
        while (v185);
        unsigned int v145 = a5 & 0xFFFFFFF8;
        if (v194 != a5) {
          goto LABEL_171;
        }
LABEL_102:
        uint64_t v8 = v213;
        v124 += v213;
        uint64_t v123 = (__int16 *)((char *)v123 + v19);
        unsigned int v112 = (__int16 *)((char *)v112 + v19);
        int v122 = (__int16 *)((char *)v122 + v19);
        float32x4_t v121 = (__int16 *)((char *)v121 + v19);
        int8x16_t v110 = (__int16 *)((char *)v110 + v19);
        uint64_t v111 = (__int16 *)((char *)v111 + v19);
        ++result;
      }
      while (result != a6);
    }
  }
  return result;
}

int16x8_t *from_444_to_v216_8xH<(PixelFormat)1983000886,false,(PixelOutputStoreType)0>(int16x8_t *result, int16x8_t *a2, int a3, int a4, unsigned int a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9966E0, memory_order_acquire) & 1) == 0)
  {
    uint64_t v84 = result;
    unint64_t v85 = a2;
    int v86 = a3;
    unsigned int v87 = a5;
    int v88 = a4;
    int v89 = __cxa_guard_acquire(&qword_26A9966E0);
    a4 = v88;
    a5 = v87;
    a3 = v86;
    a2 = v85;
    int v90 = v89;
    int8x8_t result = v84;
    if (v90)
    {
      *(void *)&long long v91 = 0xF000F000F000F000;
      *((void *)&v91 + 1) = 0xF000F000F000F000;
      xmmword_26A996CE0 = v91;
      __cxa_guard_release(&qword_26A9966E0);
      a4 = v88;
      a5 = v87;
      int8x8_t result = v84;
      a3 = v86;
      a2 = v85;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9966E8, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v92 = result;
    int16x8_t v93 = a2;
    int v94 = a3;
    unsigned int v95 = a5;
    int v96 = a4;
    int v97 = __cxa_guard_acquire(&qword_26A9966E8);
    a4 = v96;
    a5 = v95;
    a3 = v94;
    a2 = v93;
    int v98 = v97;
    int8x8_t result = v92;
    if (v98)
    {
      *(void *)&long long v99 = 0xF000F000F000F000;
      *((void *)&v99 + 1) = 0xF000F000F000F000;
      xmmword_26A996CF0 = v99;
      __cxa_guard_release(&qword_26A9966E8);
      a4 = v96;
      a5 = v95;
      int8x8_t result = v92;
      a3 = v94;
      a2 = v93;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9966F0, memory_order_acquire) & 1) == 0)
  {
    int v100 = result;
    int v101 = a2;
    int v102 = a3;
    unsigned int v103 = a5;
    int v104 = a4;
    int v105 = __cxa_guard_acquire(&qword_26A9966F0);
    a4 = v104;
    a5 = v103;
    a3 = v102;
    a2 = v101;
    int v106 = v105;
    int8x8_t result = v100;
    if (v106)
    {
      xmmword_26A996D00 = (__int128)vdupq_n_s16(0xF020u);
      __cxa_guard_release(&qword_26A9966F0);
      a4 = v104;
      a5 = v103;
      int8x8_t result = v100;
      a3 = v102;
      a2 = v101;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9966F8, memory_order_acquire) & 1) == 0)
  {
    char v107 = result;
    int v108 = a2;
    int v109 = a3;
    unsigned int v110 = a5;
    int v111 = a4;
    int v112 = __cxa_guard_acquire(&qword_26A9966F8);
    a4 = v111;
    a5 = v110;
    a3 = v109;
    a2 = v108;
    int v113 = v112;
    int8x8_t result = v107;
    if (v113)
    {
      xmmword_26A996D10 = (__int128)vdupq_n_s16(0xFDFu);
      __cxa_guard_release(&qword_26A9966F8);
      a4 = v111;
      a5 = v110;
      int8x8_t result = v107;
      a3 = v109;
      a2 = v108;
    }
  }
  int16x8_t v5 = (int16x8_t)xmmword_26A996CE0;
  int16x8_t v6 = (int16x8_t)xmmword_26A996CF0;
  uint64_t v7 = 4 * a5;
  uint64_t v8 = 8 * a5;
  int v9 = a4 - a5;
  if (a4 <= (int)a5) {
    int v10 = 0;
  }
  else {
    int v10 = a4 - a5;
  }
  int v11 = a4 - v10;
  if (v10 < 1)
  {
    uint64_t v61 = a5;
    char v56 = &a2[v61];
    int v57 = &a2[v7];
    int8x16_t v58 = &v57[v61];
    int8x16_t v59 = &a2[v8];
    unint64_t v60 = &v59[v61];
    if (v11 < 1) {
      return result;
    }
    goto LABEL_14;
  }
  uint64_t v12 = (int)a5 * (uint64_t)a3;
  uint64_t v13 = a5;
  uint64_t v14 = 2 * a5;
  uint64_t v15 = v7;
  uint64_t v16 = 6 * a5;
  uint64_t v17 = v8;
  uint64_t v18 = 10 * a5;
  int v19 = v9 + 1;
  v20.i64[0] = 0x8000800080008000;
  v20.i64[1] = 0x8000800080008000;
  uint64_t v21 = (__int16 *)result;
  do
  {
    int16x8_t v22 = a2[v15];
    uint64_t v23 = (int16x8_t *)((char *)result + v12);
    int16x8_t v24 = a2[v13 + v15];
    int64x2_t v25 = (int64x2_t)vtrn1q_s16(v22, v24);
    int64x2_t v26 = (int64x2_t)vzip2q_s16(v22, v24);
    *(int32x2_t *)v26.i8 = vmovn_s64(v26);
    int16x8_t v27 = (int16x8_t)vzip1q_s64(v25, v26);
    int16x8_t v28 = a2[v17];
    int16x8_t v29 = a2[v13 + v17];
    int64x2_t v30 = (int64x2_t)vtrn1q_s16(v28, v29);
    int64x2_t v31 = (int64x2_t)vzip2q_s16(v28, v29);
    *(int32x2_t *)v31.i8 = vmovn_s64(v31);
    int16x8_t v32 = (int16x8_t)vzip1q_s64(v30, v31);
    int16x8_t v33 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v5), v6), 3uLL), v20);
    int16x8_t v34 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13], v5), v6), 3uLL), v20);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v27, v5), v6), 3uLL), v20);
    vst2_s16(v21, *(int16x4x2_t *)((char *)&v33 - 8));
    uint64_t v21 = (__int16 *)((char *)v21 + a3);
    int16x8_t v36 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v32, v5), v6), 3uLL), v20);
    result[1] = vzip2q_s16(v35, v33);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v34 - 8));
    result[3] = vzip2q_s16(v36, v34);
    int16x8_t v38 = a2[v16];
    int16x8_t v39 = a2[v13 + v16];
    int64x2_t v40 = (int64x2_t)vtrn1q_s16(v38, v39);
    int64x2_t v41 = (int64x2_t)vzip2q_s16(v38, v39);
    int16x8_t v42 = a2[v18];
    int16x8_t v43 = a2[v13 + v18];
    int16x8_t v44 = a2[v14];
    int16x8_t v45 = a2[v13 + v14];
    ++a2;
    int8x8_t result = (int16x8_t *)v21;
    --v11;
    *(int32x2_t *)v41.i8 = vmovn_s64(v41);
    int16x8_t v46 = (int16x8_t)vzip1q_s64(v40, v41);
    int64x2_t v47 = (int64x2_t)vtrn1q_s16(v42, v43);
    int64x2_t v48 = (int64x2_t)vzip2q_s16(v42, v43);
    *(int32x2_t *)v48.i8 = vmovn_s64(v48);
    int16x8_t v49 = (int16x8_t)vzip1q_s64(v47, v48);
    int16x8_t v50 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v44, v5), v6), 3uLL), v20);
    int16x8_t v51 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v45, v5), v6), 3uLL), v20);
    int16x8_t v52 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v46, v5), v6), 3uLL), v20);
    int16x8_t v53 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v49, v5), v6), 3uLL), v20);
    int v54 = (__int16 *)v23;
    vst2_s16(v54, *(int16x4x2_t *)((char *)&v50 - 8));
    v54 += 8;
    *(int16x8_t *)int v54 = vzip2q_s16(v52, v50);
    unsigned int v55 = v23[2].i16;
    vst2_s16(v55, *(int16x4x2_t *)((char *)&v51 - 8));
    v23[3] = vzip2q_s16(v53, v51);
    --v19;
  }
  while (v19 > 1);
  char v56 = &a2[v13];
  int v57 = &a2[v15];
  int8x16_t v58 = &a2[v13 + v15];
  int8x16_t v59 = &a2[v17];
  unint64_t v60 = &a2[v13 + v17];
  if (v11 >= 1)
  {
LABEL_14:
    BOOL v62 = result + 2;
    unsigned int v63 = v11 + 1;
    v64.i64[0] = 0x8000800080008000;
    v64.i64[1] = 0x8000800080008000;
    BOOL v65 = result[2].i16;
    do
    {
      int16x8_t v66 = *v57++;
      int16x8_t v67 = v66;
      int8x16_t v68 = v62[-2].i16;
      int16x8_t v69 = *v58++;
      int64x2_t v70 = (int64x2_t)vtrn1q_s16(v67, v69);
      int64x2_t v71 = (int64x2_t)vzip2q_s16(v67, v69);
      *(int32x2_t *)v71.i8 = vmovn_s64(v71);
      int16x8_t v72 = *v59++;
      int16x8_t v73 = v72;
      int16x8_t v74 = *v60++;
      int64x2_t v75 = (int64x2_t)vtrn1q_s16(v73, v74);
      int64x2_t v76 = (int64x2_t)vzip2q_s16(v73, v74);
      *(int32x2_t *)v76.i8 = vmovn_s64(v76);
      int16x8_t v77 = (int16x8_t)vzip1q_s64(v75, v76);
      int16x8_t v78 = *a2++;
      int16x8_t v79 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v78, v5), v6), 3uLL), v64);
      int16x8_t v80 = *v56++;
      int16x8_t v81 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v80, v5), v6), 3uLL), v64);
      int16x8_t v82 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16((int16x8_t)vzip1q_s64(v70, v71), v5), v6), 3uLL), v64);
      vst2_s16(v68, *(int16x4x2_t *)((char *)&v79 - 8));
      int16x8_t v83 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v77, v5), v6), 3uLL), v64);
      v62[-1] = vzip2q_s16(v82, v79);
      vst2_s16(v65, *(int16x4x2_t *)((char *)&v81 - 8));
      BOOL v65 = (__int16 *)((char *)v65 + a3);
      v62[1] = vzip2q_s16(v83, v81);
      --v63;
      BOOL v62 = (int16x8_t *)v65;
    }
    while (v63 > 1);
  }
  return result;
}

int16x8_t *from_444_to_v216_8xH<(PixelFormat)1983000886,true,(PixelOutputStoreType)0>(int16x8_t *result, int16x8_t *a2, int a3, int a4, unsigned int a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996700, memory_order_acquire) & 1) == 0)
  {
    uint64_t v84 = result;
    unint64_t v85 = a2;
    int v86 = a3;
    unsigned int v87 = a5;
    int v88 = a4;
    int v89 = __cxa_guard_acquire(&qword_26A996700);
    a4 = v88;
    a5 = v87;
    a3 = v86;
    a2 = v85;
    int v90 = v89;
    int8x8_t result = v84;
    if (v90)
    {
      *(void *)&long long v91 = 0xF000F000F000F000;
      *((void *)&v91 + 1) = 0xF000F000F000F000;
      xmmword_26A996D20 = v91;
      __cxa_guard_release(&qword_26A996700);
      a4 = v88;
      a5 = v87;
      int8x8_t result = v84;
      a3 = v86;
      a2 = v85;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996708, memory_order_acquire) & 1) == 0)
  {
    int16x8_t v92 = result;
    int16x8_t v93 = a2;
    int v94 = a3;
    unsigned int v95 = a5;
    int v96 = a4;
    int v97 = __cxa_guard_acquire(&qword_26A996708);
    a4 = v96;
    a5 = v95;
    a3 = v94;
    a2 = v93;
    int v98 = v97;
    int8x8_t result = v92;
    if (v98)
    {
      *(void *)&long long v99 = 0xF000F000F000F000;
      *((void *)&v99 + 1) = 0xF000F000F000F000;
      xmmword_26A996D30 = v99;
      __cxa_guard_release(&qword_26A996708);
      a4 = v96;
      a5 = v95;
      int8x8_t result = v92;
      a3 = v94;
      a2 = v93;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996710, memory_order_acquire) & 1) == 0)
  {
    int v100 = result;
    int v101 = a2;
    int v102 = a3;
    unsigned int v103 = a5;
    int v104 = a4;
    int v105 = __cxa_guard_acquire(&qword_26A996710);
    a4 = v104;
    a5 = v103;
    a3 = v102;
    a2 = v101;
    int v106 = v105;
    int8x8_t result = v100;
    if (v106)
    {
      xmmword_26A996D40 = (__int128)vdupq_n_s16(0xF020u);
      __cxa_guard_release(&qword_26A996710);
      a4 = v104;
      a5 = v103;
      int8x8_t result = v100;
      a3 = v102;
      a2 = v101;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A996718, memory_order_acquire) & 1) == 0)
  {
    char v107 = result;
    int v108 = a2;
    int v109 = a3;
    unsigned int v110 = a5;
    int v111 = a4;
    int v112 = __cxa_guard_acquire(&qword_26A996718);
    a4 = v111;
    a5 = v110;
    a3 = v109;
    a2 = v108;
    int v113 = v112;
    int8x8_t result = v107;
    if (v113)
    {
      xmmword_26A996D50 = (__int128)vdupq_n_s16(0xFDFu);
      __cxa_guard_release(&qword_26A996718);
      a4 = v111;
      a5 = v110;
      int8x8_t result = v107;
      a3 = v109;
      a2 = v108;
    }
  }
  int16x8_t v5 = (int16x8_t)xmmword_26A996D20;
  int16x8_t v6 = (int16x8_t)xmmword_26A996D30;
  uint64_t v7 = 4 * a5;
  uint64_t v8 = 8 * a5;
  int v9 = a4 - a5;
  if (a4 <= (int)a5) {
    int v10 = 0;
  }
  else {
    int v10 = a4 - a5;
  }
  int v11 = a4 - v10;
  if (v10 < 1)
  {
    uint64_t v61 = a5;
    char v56 = &a2[v61];
    int v57 = &a2[v7];
    int8x16_t v58 = &v57[v61];
    int8x16_t v59 = &a2[v8];
    unint64_t v60 = &v59[v61];
    if (v11 < 1) {
      return result;
    }
    goto LABEL_14;
  }
  uint64_t v12 = (int)a5 * (uint64_t)a3;
  uint64_t v13 = a5;
  uint64_t v14 = 2 * a5;
  uint64_t v15 = v7;
  uint64_t v16 = 6 * a5;
  uint64_t v17 = v8;
  uint64_t v18 = 10 * a5;
  int v19 = v9 + 1;
  v20.i64[0] = 0x8000800080008000;
  v20.i64[1] = 0x8000800080008000;
  uint64_t v21 = (__int16 *)result;
  do
  {
    int16x8_t v22 = a2[v15];
    uint64_t v23 = (int16x8_t *)((char *)result + v12);
    int16x8_t v24 = a2[v13 + v15];
    int64x2_t v25 = (int64x2_t)vtrn1q_s16(v22, v24);
    int64x2_t v26 = (int64x2_t)vzip2q_s16(v22, v24);
    *(int32x2_t *)v26.i8 = vmovn_s64(v26);
    int16x8_t v27 = (int16x8_t)vzip1q_s64(v25, v26);
    int16x8_t v28 = a2[v17];
    int16x8_t v29 = a2[v13 + v17];
    int64x2_t v30 = (int64x2_t)vtrn1q_s16(v28, v29);
    int64x2_t v31 = (int64x2_t)vzip2q_s16(v28, v29);
    *(int32x2_t *)v31.i8 = vmovn_s64(v31);
    int16x8_t v32 = (int16x8_t)vzip1q_s64(v30, v31);
    int16x8_t v33 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v5), v6), 3uLL), v20);
    int16x8_t v34 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13], v5), v6), 3uLL), v20);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v27, v5), v6), 3uLL), v20);
    vst2_s16(v21, *(int16x4x2_t *)((char *)&v33 - 8));
    uint64_t v21 = (__int16 *)((char *)v21 + a3);
    int16x8_t v36 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v32, v5), v6), 3uLL), v20);
    result[1] = vzip2q_s16(v35, v33);
    i16 = result[2].i16;
    vst2_s16(i16, *(int16x4x2_t *)((char *)&v34 - 8));
    result[3] = vzip2q_s16(v36, v34);
    int16x8_t v38 = a2[v16];
    int16x8_t v39 = a2[v13 + v16];
    int64x2_t v40 = (int64x2_t)vtrn1q_s16(v38, v39);
    int64x2_t v41 = (int64x2_t)vzip2q_s16(v38, v39);
    int16x8_t v42 = a2[v18];
    int16x8_t v43 = a2[v13 + v18];
    int16x8_t v44 = a2[v14];
    int16x8_t v45 = a2[v13 + v14];
    ++a2;
    int8x8_t result = (int16x8_t *)v21;
    --v11;
    *(int32x2_t *)v41.i8 = vmovn_s64(v41);
    int16x8_t v46 = (int16x8_t)vzip1q_s64(v40, v41);
    int64x2_t v47 = (int64x2_t)vtrn1q_s16(v42, v43);
    int64x2_t v48 = (int64x2_t)vzip2q_s16(v42, v43);
    *(int32x2_t *)v48.i8 = vmovn_s64(v48);
    int16x8_t v49 = (int16x8_t)vzip1q_s64(v47, v48);
    int16x8_t v50 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v44, v5), v6), 3uLL), v20);
    int16x8_t v51 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v45, v5), v6), 3uLL), v20);
    int16x8_t v52 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v46, v5), v6), 3uLL), v20);
    int16x8_t v53 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v49, v5), v6), 3uLL), v20);
    int v54 = (__int16 *)v23;
    vst2_s16(v54, *(int16x4x2_t *)((char *)&v50 - 8));
    v54 += 8;
    *(int16x8_t *)int v54 = vzip2q_s16(v52, v50);
    unsigned int v55 = v23[2].i16;
    vst2_s16(v55, *(int16x4x2_t *)((char *)&v51 - 8));
    v23[3] = vzip2q_s16(v53, v51);
    --v19;
  }
  while (v19 > 1);
  char v56 = &a2[v13];
  int v57 = &a2[v15];
  int8x16_t v58 = &a2[v13 + v15];
  int8x16_t v59 = &a2[v17];
  unint64_t v60 = &a2[v13 + v17];
  if (v11 >= 1)
  {
LABEL_14:
    BOOL v62 = result + 2;
    unsigned int v63 = v11 + 1;
    v64.i64[0] = 0x8000800080008000;
    v64.i64[1] = 0x8000800080008000;
    BOOL v65 = result[2].i16;
    do
    {
      int16x8_t v66 = *v57++;
      int16x8_t v67 = v66;
      int8x16_t v68 = v62[-2].i16;
      int16x8_t v69 = *v58++;
      int64x2_t v70 = (int64x2_t)vtrn1q_s16(v67, v69);
      int64x2_t v71 = (int64x2_t)vzip2q_s16(v67, v69);
      *(int32x2_t *)v71.i8 = vmovn_s64(v71);
      int16x8_t v72 = *v59++;
      int16x8_t v73 = v72;
      int16x8_t v74 = *v60++;
      int64x2_t v75 = (int64x2_t)vtrn1q_s16(v73, v74);
      int64x2_t v76 = (int64x2_t)vzip2q_s16(v73, v74);
      *(int32x2_t *)v76.i8 = vmovn_s64(v76);
      int16x8_t v77 = (int16x8_t)vzip1q_s64(v75, v76);
      int16x8_t v78 = *a2++;
      int16x8_t v79 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v78, v5), v6), 3uLL), v64);
      int16x8_t v80 = *v56++;
      int16x8_t v81 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v80, v5), v6), 3uLL), v64);
      int16x8_t v82 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16((int16x8_t)vzip1q_s64(v70, v71), v5), v6), 3uLL), v64);
      vst2_s16(v68, *(int16x4x2_t *)((char *)&v79 - 8));
      int16x8_t v83 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v77, v5), v6), 3uLL), v64);
      v62[-1] = vzip2q_s16(v82, v79);
      vst2_s16(v65, *(int16x4x2_t *)((char *)&v81 - 8));
      BOOL v65 = (__int16 *)((char *)v65 + a3);
      v62[1] = vzip2q_s16(v83, v81);
      --v63;
      BOOL v62 = (int16x8_t *)v65;
    }
    while (v63 > 1);
  }
  return result;
}

int32x4_t *from_444_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)1,false,(PixelOutputStoreType)0>(int32x4_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6, unsigned int a7)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9967A0, memory_order_acquire) & 1) == 0)
  {
    unsigned int v103 = result;
    int v104 = a5;
    unsigned int v105 = a6;
    int v106 = a2;
    int v107 = a3;
    unsigned int v108 = a7;
    int v109 = a4;
    int v110 = __cxa_guard_acquire(&qword_26A9967A0);
    a4 = v109;
    a7 = v108;
    a3 = v107;
    a2 = v106;
    a6 = v105;
    a5 = v104;
    int v111 = v110;
    int8x8_t result = v103;
    if (v111)
    {
      *(void *)&long long v112 = 0xF000F000F000F000;
      *((void *)&v112 + 1) = 0xF000F000F000F000;
      xmmword_26A996E60 = v112;
      __cxa_guard_release(&qword_26A9967A0);
      a4 = v109;
      a7 = v108;
      int8x8_t result = v103;
      a3 = v107;
      a2 = v106;
      a6 = v105;
      a5 = v104;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9967A8, memory_order_acquire) & 1) == 0)
  {
    int v113 = result;
    int16x8_t v114 = a5;
    unsigned int v115 = a6;
    int8x16_t v116 = a2;
    int v117 = a3;
    unsigned int v118 = a7;
    int v119 = a4;
    int v120 = __cxa_guard_acquire(&qword_26A9967A8);
    a4 = v119;
    a7 = v118;
    a3 = v117;
    a2 = v116;
    a6 = v115;
    a5 = v114;
    int v121 = v120;
    int8x8_t result = v113;
    if (v121)
    {
      *(void *)&long long v122 = 0xF000F000F000F000;
      *((void *)&v122 + 1) = 0xF000F000F000F000;
      xmmword_26A996E70 = v122;
      __cxa_guard_release(&qword_26A9967A8);
      a4 = v119;
      a7 = v118;
      int8x8_t result = v113;
      a3 = v117;
      a2 = v116;
      a6 = v115;
      a5 = v114;
    }
  }
  uint64_t v7 = 4 * a7;
  uint64_t v8 = 8 * a7;
  if (a4 <= (int)a7) {
    int v9 = 0;
  }
  else {
    int v9 = a4 - a7;
  }
  int v10 = a4 - v9;
  if (v9 < 1)
  {
    uint64_t v69 = a7;
    int8x16_t v64 = &a2[v69];
    BOOL v65 = &a2[v7];
    int16x8_t v66 = &v65[v69];
    int16x8_t v67 = &a2[v8];
    int8x16_t v68 = &v67[v69];
    if (v10 < 1) {
      return result;
    }
    goto LABEL_12;
  }
  uint64_t v11 = (int)a7 * (uint64_t)a3;
  uint64_t v12 = a7;
  uint64_t v13 = v7;
  uint64_t v14 = v8;
  int16x8_t v15 = (int16x8_t)xmmword_26A996E60;
  int16x8_t v16 = (int16x8_t)xmmword_26A996E70;
  uint64_t v17 = result + 4;
  int v18 = a4 - a7 + 1;
  v19.i64[0] = 0x8000800080008000;
  v19.i64[1] = 0x8000800080008000;
  i32 = (float *)result[4].i32;
  do
  {
    uint64_t v21 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x8_t v22 = (float *)v17[-4].i32;
    uint64_t v23 = (int32x4_t *)((char *)v17 + v11);
    int16x8_t v24 = (float *)((char *)v17[-4].i32 + v11);
    int16x8_t v25 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v15), v16), 3uLL), v19);
    int16x8_t v26 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13], v15), v16), 3uLL), v19);
    int16x8_t v27 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v12 + v13], v15), v16), 3uLL), v19);
    float32x2x2_t v28 = (float32x2x2_t)vzip1q_s16(*a5, v25);
    float32x2x2_t v29 = (float32x2x2_t)vzip2q_s16(*a5, v25);
    int32x4_t v30 = (int32x4_t)vzip1q_s16(v26, v27);
    int32x4_t v31 = (int32x4_t)vzip2q_s16(v26, v27);
    vst2_f32(v22, v28);
    int16x8_t v32 = (float *)v17[-2].i32;
    vst2_f32(v32, v29);
    v17[-3] = vzip2q_s32((int32x4_t)v28, v30);
    v17[-1] = vzip2q_s32((int32x4_t)v29, v31);
    int16x8_t v33 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[a7], v15), v16), 3uLL), v19);
    int16x8_t v34 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v14], v15), v16), 3uLL), v19);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v12 + v14], v15), v16), 3uLL), v19);
    int16x8_t v36 = a5[1];
    float32x2x2_t v37 = (float32x2x2_t)vzip1q_s16(v36, v33);
    float32x2x2_t v38 = (float32x2x2_t)vzip2q_s16(v36, v33);
    int32x4_t v39 = (int32x4_t)vzip1q_s16(v34, v35);
    int32x4_t v40 = (int32x4_t)vzip2q_s16(v34, v35);
    vst2_f32(i32, v37);
    i32 = (float *)((char *)i32 + a3);
    v17[1] = vzip2q_s32((int32x4_t)v37, v39);
    int64x2_t v41 = (float *)v17[2].i32;
    vst2_f32(v41, v38);
    v17[3] = vzip2q_s32((int32x4_t)v38, v40);
    int16x8_t v42 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[2 * a7], v15), v16), 3uLL), v19);
    int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[6 * a7], v15), v16), 3uLL), v19);
    int16x8_t v44 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[6 * a7 + v12], v15), v16), 3uLL), v19);
    int16x8_t v45 = *(int16x8_t *)((char *)a5 + 8 * a6);
    float32x2x2_t v46 = (float32x2x2_t)vzip1q_s16(v45, v42);
    float32x2x2_t v47 = (float32x2x2_t)vzip2q_s16(v45, v42);
    int32x4_t v48 = (int32x4_t)vzip1q_s16(v43, v44);
    vst2_f32(v24, v46);
    int32x4_t v49 = (int32x4_t)vzip2q_s16(v43, v44);
    v23[-3] = vzip2q_s32((int32x4_t)v46, v48);
    int16x8_t v50 = (float *)((char *)v17[-2].i32 + v11);
    vst2_f32(v50, v47);
    v23[-1] = vzip2q_s32((int32x4_t)v47, v49);
    int16x8_t v51 = a2[2 * a7 + v12];
    int16x8_t v52 = a2[10 * a7];
    int16x8_t v53 = a2[10 * a7 + v12];
    ++a2;
    --v10;
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v54 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v51, v15), v16), 3uLL), v19);
    int16x8_t v55 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v52, v15), v16), 3uLL), v19);
    int16x8_t v56 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v53, v15), v16), 3uLL), v19);
    int16x8_t v57 = *v21;
    float32x2x2_t v58 = (float32x2x2_t)vzip1q_s16(*v21, v54);
    int32x4_t v59 = (int32x4_t)vzip1q_s16(v55, v56);
    unint64_t v60 = (float *)((char *)v17->i32 + v11);
    vst2_f32(v60, v58);
    v60 += 4;
    float32x2x2_t v61 = (float32x2x2_t)vzip2q_s16(v57, v54);
    int32x4_t v62 = (int32x4_t)vzip2q_s16(v55, v56);
    unsigned int v63 = (float *)((char *)v17[2].i32 + v11);
    vst2_f32(v63, v61);
    *(int32x4_t *)unint64_t v60 = vzip2q_s32((int32x4_t)v58, v59);
    v23[3] = vzip2q_s32((int32x4_t)v61, v62);
    --v18;
    uint64_t v17 = (int32x4_t *)i32;
  }
  while (v18 > 1);
  int8x16_t v64 = &a2[v12];
  BOOL v65 = &a2[v13];
  int16x8_t v66 = &a2[v12 + v13];
  int16x8_t v67 = &a2[v14];
  int8x16_t v68 = &a2[v12 + v14];
  int8x8_t result = (int32x4_t *)(i32 - 16);
  if (v10 >= 1)
  {
LABEL_12:
    int16x8_t v70 = (int16x8_t)xmmword_26A996E60;
    int16x8_t v71 = (int16x8_t)xmmword_26A996E70;
    uint64_t v72 = a3;
    unsigned int v73 = v10 + 1;
    int16x8_t v74 = a5 + 1;
    result += 4;
    v75.i64[0] = 0x8000800080008000;
    v75.i64[1] = 0x8000800080008000;
    int64x2_t v76 = (float *)result;
    do
    {
      int16x8_t v77 = *a2++;
      int16x8_t v78 = (float *)result[-4].i32;
      int16x8_t v79 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v77, v70), v71), 3uLL), v75);
      int16x8_t v80 = *v65++;
      int16x8_t v81 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v80, v70), v71), 3uLL), v75);
      int16x8_t v82 = *v66++;
      int16x8_t v83 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v82, v70), v71), 3uLL), v75);
      int16x8_t v84 = v74[-1];
      float32x2x2_t v85 = (float32x2x2_t)vzip1q_s16(v84, v79);
      float32x2x2_t v86 = (float32x2x2_t)vzip2q_s16(v84, v79);
      int32x4_t v87 = (int32x4_t)vzip1q_s16(v81, v83);
      int32x4_t v88 = (int32x4_t)vzip2q_s16(v81, v83);
      vst2_f32(v78, v85);
      result[-3] = vzip2q_s32((int32x4_t)v85, v87);
      int v89 = (float *)result[-2].i32;
      vst2_f32(v89, v86);
      result[-1] = vzip2q_s32((int32x4_t)v86, v88);
      int16x8_t v90 = *v64++;
      int8x16_t v91 = (int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v90, v70), v71), 3uLL);
      int16x8_t v92 = *v67++;
      int16x8_t v93 = (int16x8_t)veorq_s8(v91, v75);
      int8x16_t v94 = (int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v92, v70), v71), 3uLL);
      int16x8_t v95 = *v68++;
      int16x8_t v96 = (int16x8_t)veorq_s8(v94, v75);
      int16x8_t v97 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v95, v70), v71), 3uLL), v75);
      float32x2x2_t v98 = (float32x2x2_t)vzip1q_s16(*v74, v93);
      float32x2x2_t v99 = (float32x2x2_t)vzip2q_s16(*v74, v93);
      int32x4_t v100 = (int32x4_t)vzip1q_s16(v96, v97);
      vst2_f32(v76, v98);
      int64x2_t v76 = (float *)((char *)v76 + v72);
      int32x4_t v101 = (int32x4_t)vzip2q_s16(v96, v97);
      result[1] = vzip2q_s32((int32x4_t)v98, v100);
      int v102 = (float *)result[2].i32;
      vst2_f32(v102, v99);
      result[3] = vzip2q_s32((int32x4_t)v99, v101);
      --v73;
      int16x8_t v74 = (int16x8_t *)((char *)v74 + a6);
      int8x8_t result = (int32x4_t *)v76;
    }
    while (v73 > 1);
  }
  return result;
}

int32x4_t *from_444_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)1,true,(PixelOutputStoreType)0>(int32x4_t *result, int16x8_t *a2, int a3, int a4, int16x8_t *a5, unsigned int a6, unsigned int a7)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9967B0, memory_order_acquire) & 1) == 0)
  {
    unsigned int v103 = result;
    int v104 = a5;
    unsigned int v105 = a6;
    int v106 = a2;
    int v107 = a3;
    unsigned int v108 = a7;
    int v109 = a4;
    int v110 = __cxa_guard_acquire(&qword_26A9967B0);
    a4 = v109;
    a7 = v108;
    a3 = v107;
    a2 = v106;
    a6 = v105;
    a5 = v104;
    int v111 = v110;
    int8x8_t result = v103;
    if (v111)
    {
      *(void *)&long long v112 = 0xF000F000F000F000;
      *((void *)&v112 + 1) = 0xF000F000F000F000;
      xmmword_26A996E80 = v112;
      __cxa_guard_release(&qword_26A9967B0);
      a4 = v109;
      a7 = v108;
      int8x8_t result = v103;
      a3 = v107;
      a2 = v106;
      a6 = v105;
      a5 = v104;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9967B8, memory_order_acquire) & 1) == 0)
  {
    int v113 = result;
    int16x8_t v114 = a5;
    unsigned int v115 = a6;
    int8x16_t v116 = a2;
    int v117 = a3;
    unsigned int v118 = a7;
    int v119 = a4;
    int v120 = __cxa_guard_acquire(&qword_26A9967B8);
    a4 = v119;
    a7 = v118;
    a3 = v117;
    a2 = v116;
    a6 = v115;
    a5 = v114;
    int v121 = v120;
    int8x8_t result = v113;
    if (v121)
    {
      *(void *)&long long v122 = 0xF000F000F000F000;
      *((void *)&v122 + 1) = 0xF000F000F000F000;
      xmmword_26A996E90 = v122;
      __cxa_guard_release(&qword_26A9967B8);
      a4 = v119;
      a7 = v118;
      int8x8_t result = v113;
      a3 = v117;
      a2 = v116;
      a6 = v115;
      a5 = v114;
    }
  }
  uint64_t v7 = 4 * a7;
  uint64_t v8 = 8 * a7;
  if (a4 <= (int)a7) {
    int v9 = 0;
  }
  else {
    int v9 = a4 - a7;
  }
  int v10 = a4 - v9;
  if (v9 < 1)
  {
    uint64_t v69 = a7;
    int8x16_t v64 = &a2[v69];
    BOOL v65 = &a2[v7];
    int16x8_t v66 = &v65[v69];
    int16x8_t v67 = &a2[v8];
    int8x16_t v68 = &v67[v69];
    if (v10 < 1) {
      return result;
    }
    goto LABEL_12;
  }
  uint64_t v11 = (int)a7 * (uint64_t)a3;
  uint64_t v12 = a7;
  uint64_t v13 = v7;
  uint64_t v14 = v8;
  int16x8_t v15 = (int16x8_t)xmmword_26A996E80;
  int16x8_t v16 = (int16x8_t)xmmword_26A996E90;
  uint64_t v17 = result + 4;
  int v18 = a4 - a7 + 1;
  v19.i64[0] = 0x8000800080008000;
  v19.i64[1] = 0x8000800080008000;
  i32 = (float *)result[4].i32;
  do
  {
    uint64_t v21 = (int16x8_t *)((char *)a5 + 8 * a6 + 16);
    int16x8_t v22 = (float *)v17[-4].i32;
    uint64_t v23 = (int32x4_t *)((char *)v17 + v11);
    int16x8_t v24 = (float *)((char *)v17[-4].i32 + v11);
    int16x8_t v25 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v15), v16), 3uLL), v19);
    int16x8_t v26 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13], v15), v16), 3uLL), v19);
    int16x8_t v27 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v12 + v13], v15), v16), 3uLL), v19);
    float32x2x2_t v28 = (float32x2x2_t)vzip1q_s16(*a5, v25);
    float32x2x2_t v29 = (float32x2x2_t)vzip2q_s16(*a5, v25);
    int32x4_t v30 = (int32x4_t)vzip1q_s16(v26, v27);
    int32x4_t v31 = (int32x4_t)vzip2q_s16(v26, v27);
    vst2_f32(v22, v28);
    int16x8_t v32 = (float *)v17[-2].i32;
    vst2_f32(v32, v29);
    v17[-3] = vzip2q_s32((int32x4_t)v28, v30);
    v17[-1] = vzip2q_s32((int32x4_t)v29, v31);
    int16x8_t v33 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[a7], v15), v16), 3uLL), v19);
    int16x8_t v34 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v14], v15), v16), 3uLL), v19);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v12 + v14], v15), v16), 3uLL), v19);
    int16x8_t v36 = a5[1];
    float32x2x2_t v37 = (float32x2x2_t)vzip1q_s16(v36, v33);
    float32x2x2_t v38 = (float32x2x2_t)vzip2q_s16(v36, v33);
    int32x4_t v39 = (int32x4_t)vzip1q_s16(v34, v35);
    int32x4_t v40 = (int32x4_t)vzip2q_s16(v34, v35);
    vst2_f32(i32, v37);
    i32 = (float *)((char *)i32 + a3);
    v17[1] = vzip2q_s32((int32x4_t)v37, v39);
    int64x2_t v41 = (float *)v17[2].i32;
    vst2_f32(v41, v38);
    v17[3] = vzip2q_s32((int32x4_t)v38, v40);
    int16x8_t v42 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[2 * a7], v15), v16), 3uLL), v19);
    int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[6 * a7], v15), v16), 3uLL), v19);
    int16x8_t v44 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[6 * a7 + v12], v15), v16), 3uLL), v19);
    int16x8_t v45 = *(int16x8_t *)((char *)a5 + 8 * a6);
    float32x2x2_t v46 = (float32x2x2_t)vzip1q_s16(v45, v42);
    float32x2x2_t v47 = (float32x2x2_t)vzip2q_s16(v45, v42);
    int32x4_t v48 = (int32x4_t)vzip1q_s16(v43, v44);
    vst2_f32(v24, v46);
    int32x4_t v49 = (int32x4_t)vzip2q_s16(v43, v44);
    v23[-3] = vzip2q_s32((int32x4_t)v46, v48);
    int16x8_t v50 = (float *)((char *)v17[-2].i32 + v11);
    vst2_f32(v50, v47);
    v23[-1] = vzip2q_s32((int32x4_t)v47, v49);
    int16x8_t v51 = a2[2 * a7 + v12];
    int16x8_t v52 = a2[10 * a7];
    int16x8_t v53 = a2[10 * a7 + v12];
    ++a2;
    --v10;
    a5 = (int16x8_t *)((char *)a5 + a6);
    int16x8_t v54 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v51, v15), v16), 3uLL), v19);
    int16x8_t v55 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v52, v15), v16), 3uLL), v19);
    int16x8_t v56 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v53, v15), v16), 3uLL), v19);
    int16x8_t v57 = *v21;
    float32x2x2_t v58 = (float32x2x2_t)vzip1q_s16(*v21, v54);
    int32x4_t v59 = (int32x4_t)vzip1q_s16(v55, v56);
    unint64_t v60 = (float *)((char *)v17->i32 + v11);
    vst2_f32(v60, v58);
    v60 += 4;
    float32x2x2_t v61 = (float32x2x2_t)vzip2q_s16(v57, v54);
    int32x4_t v62 = (int32x4_t)vzip2q_s16(v55, v56);
    unsigned int v63 = (float *)((char *)v17[2].i32 + v11);
    vst2_f32(v63, v61);
    *(int32x4_t *)unint64_t v60 = vzip2q_s32((int32x4_t)v58, v59);
    v23[3] = vzip2q_s32((int32x4_t)v61, v62);
    --v18;
    uint64_t v17 = (int32x4_t *)i32;
  }
  while (v18 > 1);
  int8x16_t v64 = &a2[v12];
  BOOL v65 = &a2[v13];
  int16x8_t v66 = &a2[v12 + v13];
  int16x8_t v67 = &a2[v14];
  int8x16_t v68 = &a2[v12 + v14];
  int8x8_t result = (int32x4_t *)(i32 - 16);
  if (v10 >= 1)
  {
LABEL_12:
    int16x8_t v70 = (int16x8_t)xmmword_26A996E80;
    int16x8_t v71 = (int16x8_t)xmmword_26A996E90;
    uint64_t v72 = a3;
    unsigned int v73 = v10 + 1;
    int16x8_t v74 = a5 + 1;
    result += 4;
    v75.i64[0] = 0x8000800080008000;
    v75.i64[1] = 0x8000800080008000;
    int64x2_t v76 = (float *)result;
    do
    {
      int16x8_t v77 = *a2++;
      int16x8_t v78 = (float *)result[-4].i32;
      int16x8_t v79 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v77, v70), v71), 3uLL), v75);
      int16x8_t v80 = *v65++;
      int16x8_t v81 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v80, v70), v71), 3uLL), v75);
      int16x8_t v82 = *v66++;
      int16x8_t v83 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v82, v70), v71), 3uLL), v75);
      int16x8_t v84 = v74[-1];
      float32x2x2_t v85 = (float32x2x2_t)vzip1q_s16(v84, v79);
      float32x2x2_t v86 = (float32x2x2_t)vzip2q_s16(v84, v79);
      int32x4_t v87 = (int32x4_t)vzip1q_s16(v81, v83);
      int32x4_t v88 = (int32x4_t)vzip2q_s16(v81, v83);
      vst2_f32(v78, v85);
      result[-3] = vzip2q_s32((int32x4_t)v85, v87);
      int v89 = (float *)result[-2].i32;
      vst2_f32(v89, v86);
      result[-1] = vzip2q_s32((int32x4_t)v86, v88);
      int16x8_t v90 = *v64++;
      int8x16_t v91 = (int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v90, v70), v71), 3uLL);
      int16x8_t v92 = *v67++;
      int16x8_t v93 = (int16x8_t)veorq_s8(v91, v75);
      int8x16_t v94 = (int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v92, v70), v71), 3uLL);
      int16x8_t v95 = *v68++;
      int16x8_t v96 = (int16x8_t)veorq_s8(v94, v75);
      int16x8_t v97 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v95, v70), v71), 3uLL), v75);
      float32x2x2_t v98 = (float32x2x2_t)vzip1q_s16(*v74, v93);
      float32x2x2_t v99 = (float32x2x2_t)vzip2q_s16(*v74, v93);
      int32x4_t v100 = (int32x4_t)vzip1q_s16(v96, v97);
      vst2_f32(v76, v98);
      int64x2_t v76 = (float *)((char *)v76 + v72);
      int32x4_t v101 = (int32x4_t)vzip2q_s16(v96, v97);
      result[1] = vzip2q_s32((int32x4_t)v98, v100);
      int v102 = (float *)result[2].i32;
      vst2_f32(v102, v99);
      result[3] = vzip2q_s32((int32x4_t)v99, v101);
      --v73;
      int16x8_t v74 = (int16x8_t *)((char *)v74 + a6);
      int8x8_t result = (int32x4_t *)v76;
    }
    while (v73 > 1);
  }
  return result;
}

_WORD *from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)1>(_WORD *result, uint64_t a2, int a3, int a4, _WORD *a5, int a6, int a7, int a8)
{
  if (a8 >= 1 && a7 >= 1)
  {
    int v8 = 0;
    uint64_t v9 = (a8 * a7);
    uint64_t v10 = 8u / a8 * a6;
    uint64_t v11 = a3;
    uint64_t v12 = 2 * (4 * v9);
    uint64_t v13 = a2 + v12;
    uint64_t v14 = a2 + v12 + v12;
    uint64_t v15 = 2 * v9;
    uint64_t v16 = a2 + v12 + 2 * v9;
    uint64_t v17 = v16 + v12;
    uint64_t v18 = a2 + v15;
    uint64_t v19 = 2 * a7;
    uint64_t v20 = 8u / a7;
    do
    {
      if (v8 == (a4 & ~(a4 >> 31))) {
        break;
      }
      uint64_t v21 = 0;
      int16x8_t v22 = a5;
      uint64_t v23 = result;
      do
      {
        int v24 = *(__int16 *)(a2 + 2 * v21);
        int v25 = *(__int16 *)(v13 + 2 * v21);
        int v26 = *(__int16 *)(v16 + 2 * v21);
        *uint64_t v23 = *v22;
        if (v24 >= 4095) {
          int v27 = 4095;
        }
        else {
          int v27 = v24;
        }
        if (v27 <= -4096) {
          LOWORD(v27) = -4096;
        }
        v23[1] = (8 * v27) ^ 0x8000;
        if (v25 >= 4095) {
          int v28 = 4095;
        }
        else {
          int v28 = v25;
        }
        if (v28 <= -4096) {
          LOWORD(v28) = -4096;
        }
        v23[2] = (8 * v28) ^ 0x8000;
        if (v26 >= 4095) {
          int v26 = 4095;
        }
        if (v26 <= -4096) {
          LOWORD(v26) = -4096;
        }
        v23[3] = (8 * v26) ^ 0x8000;
        v23 += 4;
        v22 += v20;
        ++v21;
      }
      while (a7 != v21);
      uint64_t v29 = 0;
      do
      {
        int v30 = *(__int16 *)(v18 + 2 * v29);
        int v31 = *(__int16 *)(v14 + 2 * v29);
        int v32 = *(__int16 *)(v17 + 2 * v29);
        *uint64_t v23 = *v22;
        if (v30 >= 4095) {
          int v33 = 4095;
        }
        else {
          int v33 = v30;
        }
        if (v33 <= -4096) {
          LOWORD(v33) = -4096;
        }
        v23[1] = (8 * v33) ^ 0x8000;
        if (v31 >= 4095) {
          int v34 = 4095;
        }
        else {
          int v34 = v31;
        }
        if (v34 <= -4096) {
          LOWORD(v34) = -4096;
        }
        v23[2] = (8 * v34) ^ 0x8000;
        if (v32 >= 4095) {
          int v32 = 4095;
        }
        if (v32 <= -4096) {
          LOWORD(v32) = -4096;
        }
        v23[3] = (8 * v32) ^ 0x8000;
        v22 += v20;
        ++v29;
        v23 += 4;
      }
      while (a7 != v29);
      int8x8_t result = (_WORD *)((char *)result + v11);
      a5 = (_WORD *)((char *)a5 + v10);
      v18 += v19;
      v16 += v19;
      v17 += v19;
      ++v8;
      v13 += v19;
      a2 += v19;
      v14 += v19;
    }
    while (v8 != a8);
    int v35 = 0;
    uint64_t v36 = v16 + v15;
    uint64_t v37 = v17 + v15;
    uint64_t v38 = v18 + v15;
    if (a8 > a4) {
      a4 = a8;
    }
    int v39 = a4 - a8;
    do
    {
      if (v35 == v39) {
        break;
      }
      uint64_t v40 = 0;
      int64x2_t v41 = a5;
      int16x8_t v42 = result;
      do
      {
        int v43 = *(__int16 *)(v18 + 2 * v40);
        int v44 = *(__int16 *)(v16 + 2 * v40);
        int v45 = *(__int16 *)(v36 + 2 * v40);
        *int16x8_t v42 = *v41;
        if (v43 >= 4095) {
          int v46 = 4095;
        }
        else {
          int v46 = v43;
        }
        if (v46 <= -4096) {
          LOWORD(v46) = -4096;
        }
        v42[1] = (8 * v46) ^ 0x8000;
        if (v44 >= 4095) {
          int v47 = 4095;
        }
        else {
          int v47 = v44;
        }
        if (v47 <= -4096) {
          LOWORD(v47) = -4096;
        }
        v42[2] = (8 * v47) ^ 0x8000;
        if (v45 >= 4095) {
          int v45 = 4095;
        }
        if (v45 <= -4096) {
          LOWORD(v45) = -4096;
        }
        v42[3] = (8 * v45) ^ 0x8000;
        v42 += 4;
        v41 += v20;
        ++v40;
      }
      while (a7 != v40);
      uint64_t v48 = 0;
      do
      {
        int v49 = *(__int16 *)(v38 + 2 * v48);
        int v50 = *(__int16 *)(v17 + 2 * v48);
        int v51 = *(__int16 *)(v37 + 2 * v48);
        *int16x8_t v42 = *v41;
        if (v49 >= 4095) {
          int v52 = 4095;
        }
        else {
          int v52 = v49;
        }
        if (v52 <= -4096) {
          LOWORD(v52) = -4096;
        }
        v42[1] = (8 * v52) ^ 0x8000;
        if (v50 >= 4095) {
          int v53 = 4095;
        }
        else {
          int v53 = v50;
        }
        if (v53 <= -4096) {
          LOWORD(v53) = -4096;
        }
        v42[2] = (8 * v53) ^ 0x8000;
        if (v51 >= 4095) {
          int v51 = 4095;
        }
        if (v51 <= -4096) {
          LOWORD(v51) = -4096;
        }
        v42[3] = (8 * v51) ^ 0x8000;
        v41 += v20;
        ++v48;
        v42 += 4;
      }
      while (a7 != v48);
      int8x8_t result = (_WORD *)((char *)result + v11);
      a5 = (_WORD *)((char *)a5 + v10);
      ++v35;
      v36 += v19;
      v16 += v19;
      v18 += v19;
      v37 += v19;
      v17 += v19;
      v38 += v19;
    }
    while (v35 != a8);
  }
  return result;
}

int32x4_t *from_444_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)2,false,(PixelOutputStoreType)0>(int32x4_t *result, int16x8_t *a2, int a3, int a4, unsigned int a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9967C0, memory_order_acquire) & 1) == 0)
  {
    float32x2x2_t v99 = result;
    int v100 = a3;
    int32x4_t v101 = a2;
    unsigned int v102 = a5;
    int v103 = a4;
    int v104 = __cxa_guard_acquire(&qword_26A9967C0);
    a4 = v103;
    a5 = v102;
    a2 = v101;
    a3 = v100;
    int v105 = v104;
    int8x8_t result = v99;
    if (v105)
    {
      *(void *)&long long v106 = 0xF000F000F000F000;
      *((void *)&v106 + 1) = 0xF000F000F000F000;
      xmmword_26A996EA0 = v106;
      __cxa_guard_release(&qword_26A9967C0);
      a4 = v103;
      a5 = v102;
      int8x8_t result = v99;
      a2 = v101;
      a3 = v100;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9967C8, memory_order_acquire) & 1) == 0)
  {
    int v107 = result;
    int v108 = a3;
    int v109 = a2;
    unsigned int v110 = a5;
    int v111 = a4;
    int v112 = __cxa_guard_acquire(&qword_26A9967C8);
    a4 = v111;
    a5 = v110;
    a2 = v109;
    a3 = v108;
    int v113 = v112;
    int8x8_t result = v107;
    if (v113)
    {
      *(void *)&long long v114 = 0xF000F000F000F000;
      *((void *)&v114 + 1) = 0xF000F000F000F000;
      xmmword_26A996EB0 = v114;
      __cxa_guard_release(&qword_26A9967C8);
      a4 = v111;
      a5 = v110;
      int8x8_t result = v107;
      a2 = v109;
      a3 = v108;
    }
  }
  uint64_t v5 = 4 * a5;
  uint64_t v6 = 8 * a5;
  int v7 = a4 - a5;
  if (a4 <= (int)a5) {
    int v8 = 0;
  }
  else {
    int v8 = a4 - a5;
  }
  int v9 = a4 - v8;
  if (v8 < 1)
  {
    uint64_t v68 = a5;
    unsigned int v63 = &a2[v68];
    int8x16_t v64 = &a2[v5];
    BOOL v65 = &v64[v68];
    int16x8_t v66 = &a2[v6];
    int16x8_t v67 = &v66[v68];
    if (v9 < 1) {
      return result;
    }
    goto LABEL_12;
  }
  uint64_t v10 = (int)a5 * (uint64_t)a3;
  int16x8_t v11 = (int16x8_t)xmmword_26A996EA0;
  int16x8_t v12 = (int16x8_t)xmmword_26A996EB0;
  uint64_t v13 = a5;
  uint64_t v14 = 2 * a5;
  uint64_t v15 = v5;
  uint64_t v16 = 6 * a5;
  uint64_t v17 = v6;
  uint64_t v18 = 10 * a5;
  uint64_t v19 = result + 4;
  int v20 = v7 + 1;
  v21.i64[0] = 0x8000800080008000;
  v21.i64[1] = 0x8000800080008000;
  v22.i64[0] = -1;
  v22.i64[1] = -1;
  i32 = (float *)result[4].i32;
  do
  {
    int v24 = (int32x4_t *)((char *)v19 + v10);
    int v25 = (float *)((char *)v19[-4].i32 + v10);
    int v26 = (float *)v19[-4].i32;
    int16x8_t v27 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v11), v12), 3uLL), v21);
    int16x8_t v28 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v15], v11), v12), 3uLL), v21);
    int16x8_t v29 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13 + v15], v11), v12), 3uLL), v21);
    float32x2x2_t v30 = (float32x2x2_t)vzip1q_s16(v22, v27);
    float32x2x2_t v31 = (float32x2x2_t)vzip2q_s16(v22, v27);
    int32x4_t v32 = (int32x4_t)vzip1q_s16(v28, v29);
    int32x4_t v33 = (int32x4_t)vzip2q_s16(v28, v29);
    vst2_f32(v26, v30);
    v19[-3] = vzip2q_s32((int32x4_t)v30, v32);
    int v34 = (float *)v19[-2].i32;
    vst2_f32(v34, v31);
    v19[-1] = vzip2q_s32((int32x4_t)v31, v33);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13], v11), v12), 3uLL), v21);
    int16x8_t v36 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v17], v11), v12), 3uLL), v21);
    int16x8_t v37 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13 + v17], v11), v12), 3uLL), v21);
    float32x2x2_t v38 = (float32x2x2_t)vzip1q_s16(v22, v35);
    int32x4_t v39 = (int32x4_t)vzip1q_s16(v36, v37);
    vst2_f32(i32, v38);
    i32 = (float *)((char *)i32 + a3);
    float32x2x2_t v40 = (float32x2x2_t)vzip2q_s16(v22, v35);
    int32x4_t v41 = (int32x4_t)vzip2q_s16(v36, v37);
    int16x8_t v42 = (float *)v19[2].i32;
    vst2_f32(v42, v40);
    v19[1] = vzip2q_s32((int32x4_t)v38, v39);
    v19[3] = vzip2q_s32((int32x4_t)v40, v41);
    int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v14], v11), v12), 3uLL), v21);
    int16x8_t v44 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v16], v11), v12), 3uLL), v21);
    int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13 + v16], v11), v12), 3uLL), v21);
    float32x2x2_t v46 = (float32x2x2_t)vzip1q_s16(v22, v43);
    float32x2x2_t v47 = (float32x2x2_t)vzip2q_s16(v22, v43);
    int32x4_t v48 = (int32x4_t)vzip1q_s16(v44, v45);
    int32x4_t v49 = (int32x4_t)vzip2q_s16(v44, v45);
    vst2_f32(v25, v46);
    v24[-3] = vzip2q_s32((int32x4_t)v46, v48);
    int v50 = (float *)((char *)v19[-2].i32 + v10);
    vst2_f32(v50, v47);
    v24[-1] = vzip2q_s32((int32x4_t)v47, v49);
    int16x8_t v51 = a2[v13 + v14];
    int16x8_t v52 = a2[v18];
    int16x8_t v53 = a2[v13 + v18];
    ++a2;
    --v9;
    int16x8_t v54 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v51, v11), v12), 3uLL), v21);
    int16x8_t v55 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v52, v11), v12), 3uLL), v21);
    int16x8_t v56 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v53, v11), v12), 3uLL), v21);
    float32x2x2_t v57 = (float32x2x2_t)vzip1q_s16(v22, v54);
    int32x4_t v58 = (int32x4_t)vzip1q_s16(v55, v56);
    int32x4_t v59 = (float *)((char *)v19->i32 + v10);
    vst2_f32(v59, v57);
    v59 += 4;
    float32x2x2_t v60 = (float32x2x2_t)vzip2q_s16(v22, v54);
    int32x4_t v61 = (int32x4_t)vzip2q_s16(v55, v56);
    int32x4_t v62 = (float *)((char *)v19[2].i32 + v10);
    vst2_f32(v62, v60);
    *(int32x4_t *)int32x4_t v59 = vzip2q_s32((int32x4_t)v57, v58);
    v24[3] = vzip2q_s32((int32x4_t)v60, v61);
    --v20;
    uint64_t v19 = (int32x4_t *)i32;
  }
  while (v20 > 1);
  unsigned int v63 = &a2[v13];
  int8x16_t v64 = &a2[v15];
  BOOL v65 = &a2[v13 + v15];
  int16x8_t v66 = &a2[v17];
  int16x8_t v67 = &a2[v13 + v17];
  int8x8_t result = (int32x4_t *)(i32 - 16);
  if (v9 >= 1)
  {
LABEL_12:
    int16x8_t v69 = (int16x8_t)xmmword_26A996EA0;
    int16x8_t v70 = (int16x8_t)xmmword_26A996EB0;
    unsigned int v71 = v9 + 1;
    uint64_t v72 = result + 4;
    v73.i64[0] = 0x8000800080008000;
    v73.i64[1] = 0x8000800080008000;
    v74.i64[0] = -1;
    v74.i64[1] = -1;
    int8x16_t v75 = (float *)result[4].i32;
    do
    {
      int16x8_t v76 = *a2++;
      int16x8_t v77 = (float *)v72[-4].i32;
      int16x8_t v78 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v76, v69), v70), 3uLL), v73);
      int16x8_t v79 = *v64++;
      int16x8_t v80 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v79, v69), v70), 3uLL), v73);
      int16x8_t v81 = *v65++;
      int16x8_t v82 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v81, v69), v70), 3uLL), v73);
      float32x2x2_t v83 = (float32x2x2_t)vzip1q_s16(v74, v78);
      float32x2x2_t v84 = (float32x2x2_t)vzip2q_s16(v74, v78);
      int32x4_t v85 = (int32x4_t)vzip1q_s16(v80, v82);
      int32x4_t v86 = (int32x4_t)vzip2q_s16(v80, v82);
      vst2_f32(v77, v83);
      v72[-3] = vzip2q_s32((int32x4_t)v83, v85);
      int32x4_t v87 = (float *)v72[-2].i32;
      vst2_f32(v87, v84);
      v72[-1] = vzip2q_s32((int32x4_t)v84, v86);
      int16x8_t v88 = *v63++;
      int16x8_t v89 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v88, v69), v70), 3uLL), v73);
      int16x8_t v90 = *v66++;
      int16x8_t v91 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v90, v69), v70), 3uLL), v73);
      int16x8_t v92 = *v67++;
      int16x8_t v93 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v92, v69), v70), 3uLL), v73);
      float32x2x2_t v94 = (float32x2x2_t)vzip1q_s16(v74, v89);
      int32x4_t v95 = (int32x4_t)vzip1q_s16(v91, v93);
      vst2_f32(v75, v94);
      int8x16_t v75 = (float *)((char *)v75 + a3);
      float32x2x2_t v96 = (float32x2x2_t)vzip2q_s16(v74, v89);
      int32x4_t v97 = (int32x4_t)vzip2q_s16(v91, v93);
      float32x2x2_t v98 = (float *)v72[2].i32;
      vst2_f32(v98, v96);
      v72[1] = vzip2q_s32((int32x4_t)v94, v95);
      v72[3] = vzip2q_s32((int32x4_t)v96, v97);
      --v71;
      uint64_t v72 = (int32x4_t *)v75;
    }
    while (v71 > 1);
  }
  return result;
}

int32x4_t *from_444_to_y416_8xH<(PixelFormat)2033463606,(AlphaOutputMethod)2,true,(PixelOutputStoreType)0>(int32x4_t *result, int16x8_t *a2, int a3, int a4, unsigned int a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9967D0, memory_order_acquire) & 1) == 0)
  {
    float32x2x2_t v99 = result;
    int v100 = a3;
    int32x4_t v101 = a2;
    unsigned int v102 = a5;
    int v103 = a4;
    int v104 = __cxa_guard_acquire(&qword_26A9967D0);
    a4 = v103;
    a5 = v102;
    a2 = v101;
    a3 = v100;
    int v105 = v104;
    int8x8_t result = v99;
    if (v105)
    {
      *(void *)&long long v106 = 0xF000F000F000F000;
      *((void *)&v106 + 1) = 0xF000F000F000F000;
      xmmword_26A996EC0 = v106;
      __cxa_guard_release(&qword_26A9967D0);
      a4 = v103;
      a5 = v102;
      int8x8_t result = v99;
      a2 = v101;
      a3 = v100;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26A9967D8, memory_order_acquire) & 1) == 0)
  {
    int v107 = result;
    int v108 = a3;
    int v109 = a2;
    unsigned int v110 = a5;
    int v111 = a4;
    int v112 = __cxa_guard_acquire(&qword_26A9967D8);
    a4 = v111;
    a5 = v110;
    a2 = v109;
    a3 = v108;
    int v113 = v112;
    int8x8_t result = v107;
    if (v113)
    {
      *(void *)&long long v114 = 0xF000F000F000F000;
      *((void *)&v114 + 1) = 0xF000F000F000F000;
      xmmword_26A996ED0 = v114;
      __cxa_guard_release(&qword_26A9967D8);
      a4 = v111;
      a5 = v110;
      int8x8_t result = v107;
      a2 = v109;
      a3 = v108;
    }
  }
  uint64_t v5 = 4 * a5;
  uint64_t v6 = 8 * a5;
  int v7 = a4 - a5;
  if (a4 <= (int)a5) {
    int v8 = 0;
  }
  else {
    int v8 = a4 - a5;
  }
  int v9 = a4 - v8;
  if (v8 < 1)
  {
    uint64_t v68 = a5;
    unsigned int v63 = &a2[v68];
    int8x16_t v64 = &a2[v5];
    BOOL v65 = &v64[v68];
    int16x8_t v66 = &a2[v6];
    int16x8_t v67 = &v66[v68];
    if (v9 < 1) {
      return result;
    }
    goto LABEL_12;
  }
  uint64_t v10 = (int)a5 * (uint64_t)a3;
  int16x8_t v11 = (int16x8_t)xmmword_26A996EC0;
  int16x8_t v12 = (int16x8_t)xmmword_26A996ED0;
  uint64_t v13 = a5;
  uint64_t v14 = 2 * a5;
  uint64_t v15 = v5;
  uint64_t v16 = 6 * a5;
  uint64_t v17 = v6;
  uint64_t v18 = 10 * a5;
  uint64_t v19 = result + 4;
  int v20 = v7 + 1;
  v21.i64[0] = 0x8000800080008000;
  v21.i64[1] = 0x8000800080008000;
  v22.i64[0] = -1;
  v22.i64[1] = -1;
  i32 = (float *)result[4].i32;
  do
  {
    int v24 = (int32x4_t *)((char *)v19 + v10);
    int v25 = (float *)((char *)v19[-4].i32 + v10);
    int v26 = (float *)v19[-4].i32;
    int16x8_t v27 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(*a2, v11), v12), 3uLL), v21);
    int16x8_t v28 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v15], v11), v12), 3uLL), v21);
    int16x8_t v29 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13 + v15], v11), v12), 3uLL), v21);
    float32x2x2_t v30 = (float32x2x2_t)vzip1q_s16(v22, v27);
    float32x2x2_t v31 = (float32x2x2_t)vzip2q_s16(v22, v27);
    int32x4_t v32 = (int32x4_t)vzip1q_s16(v28, v29);
    int32x4_t v33 = (int32x4_t)vzip2q_s16(v28, v29);
    vst2_f32(v26, v30);
    v19[-3] = vzip2q_s32((int32x4_t)v30, v32);
    int v34 = (float *)v19[-2].i32;
    vst2_f32(v34, v31);
    v19[-1] = vzip2q_s32((int32x4_t)v31, v33);
    int16x8_t v35 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13], v11), v12), 3uLL), v21);
    int16x8_t v36 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v17], v11), v12), 3uLL), v21);
    int16x8_t v37 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13 + v17], v11), v12), 3uLL), v21);
    float32x2x2_t v38 = (float32x2x2_t)vzip1q_s16(v22, v35);
    int32x4_t v39 = (int32x4_t)vzip1q_s16(v36, v37);
    vst2_f32(i32, v38);
    i32 = (float *)((char *)i32 + a3);
    float32x2x2_t v40 = (float32x2x2_t)vzip2q_s16(v22, v35);
    int32x4_t v41 = (int32x4_t)vzip2q_s16(v36, v37);
    int16x8_t v42 = (float *)v19[2].i32;
    vst2_f32(v42, v40);
    v19[1] = vzip2q_s32((int32x4_t)v38, v39);
    v19[3] = vzip2q_s32((int32x4_t)v40, v41);
    int16x8_t v43 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v14], v11), v12), 3uLL), v21);
    int16x8_t v44 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v16], v11), v12), 3uLL), v21);
    int16x8_t v45 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(a2[v13 + v16], v11), v12), 3uLL), v21);
    float32x2x2_t v46 = (float32x2x2_t)vzip1q_s16(v22, v43);
    float32x2x2_t v47 = (float32x2x2_t)vzip2q_s16(v22, v43);
    int32x4_t v48 = (int32x4_t)vzip1q_s16(v44, v45);
    int32x4_t v49 = (int32x4_t)vzip2q_s16(v44, v45);
    vst2_f32(v25, v46);
    v24[-3] = vzip2q_s32((int32x4_t)v46, v48);
    int v50 = (float *)((char *)v19[-2].i32 + v10);
    vst2_f32(v50, v47);
    v24[-1] = vzip2q_s32((int32x4_t)v47, v49);
    int16x8_t v51 = a2[v13 + v14];
    int16x8_t v52 = a2[v18];
    int16x8_t v53 = a2[v13 + v18];
    ++a2;
    --v9;
    int16x8_t v54 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v51, v11), v12), 3uLL), v21);
    int16x8_t v55 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v52, v11), v12), 3uLL), v21);
    int16x8_t v56 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v53, v11), v12), 3uLL), v21);
    float32x2x2_t v57 = (float32x2x2_t)vzip1q_s16(v22, v54);
    int32x4_t v58 = (int32x4_t)vzip1q_s16(v55, v56);
    int32x4_t v59 = (float *)((char *)v19->i32 + v10);
    vst2_f32(v59, v57);
    v59 += 4;
    float32x2x2_t v60 = (float32x2x2_t)vzip2q_s16(v22, v54);
    int32x4_t v61 = (int32x4_t)vzip2q_s16(v55, v56);
    int32x4_t v62 = (float *)((char *)v19[2].i32 + v10);
    vst2_f32(v62, v60);
    *(int32x4_t *)int32x4_t v59 = vzip2q_s32((int32x4_t)v57, v58);
    v24[3] = vzip2q_s32((int32x4_t)v60, v61);
    --v20;
    uint64_t v19 = (int32x4_t *)i32;
  }
  while (v20 > 1);
  unsigned int v63 = &a2[v13];
  int8x16_t v64 = &a2[v15];
  BOOL v65 = &a2[v13 + v15];
  int16x8_t v66 = &a2[v17];
  int16x8_t v67 = &a2[v13 + v17];
  int8x8_t result = (int32x4_t *)(i32 - 16);
  if (v9 >= 1)
  {
LABEL_12:
    int16x8_t v69 = (int16x8_t)xmmword_26A996EC0;
    int16x8_t v70 = (int16x8_t)xmmword_26A996ED0;
    unsigned int v71 = v9 + 1;
    uint64_t v72 = result + 4;
    v73.i64[0] = 0x8000800080008000;
    v73.i64[1] = 0x8000800080008000;
    v74.i64[0] = -1;
    v74.i64[1] = -1;
    int8x16_t v75 = (float *)result[4].i32;
    do
    {
      int16x8_t v76 = *a2++;
      int16x8_t v77 = (float *)v72[-4].i32;
      int16x8_t v78 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v76, v69), v70), 3uLL), v73);
      int16x8_t v79 = *v64++;
      int16x8_t v80 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v79, v69), v70), 3uLL), v73);
      int16x8_t v81 = *v65++;
      int16x8_t v82 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v81, v69), v70), 3uLL), v73);
      float32x2x2_t v83 = (float32x2x2_t)vzip1q_s16(v74, v78);
      float32x2x2_t v84 = (float32x2x2_t)vzip2q_s16(v74, v78);
      int32x4_t v85 = (int32x4_t)vzip1q_s16(v80, v82);
      int32x4_t v86 = (int32x4_t)vzip2q_s16(v80, v82);
      vst2_f32(v77, v83);
      v72[-3] = vzip2q_s32((int32x4_t)v83, v85);
      int32x4_t v87 = (float *)v72[-2].i32;
      vst2_f32(v87, v84);
      v72[-1] = vzip2q_s32((int32x4_t)v84, v86);
      int16x8_t v88 = *v63++;
      int16x8_t v89 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v88, v69), v70), 3uLL), v73);
      int16x8_t v90 = *v66++;
      int16x8_t v91 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v90, v69), v70), 3uLL), v73);
      int16x8_t v92 = *v67++;
      int16x8_t v93 = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vminq_s16(vmaxq_s16(v92, v69), v70), 3uLL), v73);
      float32x2x2_t v94 = (float32x2x2_t)vzip1q_s16(v74, v89);
      int32x4_t v95 = (int32x4_t)vzip1q_s16(v91, v93);
      vst2_f32(v75, v94);
      int8x16_t v75 = (float *)((char *)v75 + a3);
      float32x2x2_t v96 = (float32x2x2_t)vzip2q_s16(v74, v89);
      int32x4_t v97 = (int32x4_t)vzip2q_s16(v91, v93);
      float32x2x2_t v98 = (float *)v72[2].i32;
      vst2_f32(v98, v96);
      v72[1] = vzip2q_s32((int32x4_t)v94, v95);
      v72[3] = vzip2q_s32((int32x4_t)v96, v97);
      --v71;
      uint64_t v72 = (int32x4_t *)v75;
    }
    while (v71 > 1);
  }
  return result;
}

__int16 *from_444_to_AYUV_UYVY_WxH<(PixelFormat)2033463606,(AlphaOutputMethod)2>(__int16 *result, int16x8_t *a2, int a3, int a4, unsigned int a5, int a6)
{
  unint64_t v158 = a2;
  if (a6 >= 1)
  {
    uint64_t v161 = a5 - 1;
    if ((int)a5 >= 1)
    {
      uint64_t v6 = 0;
      uint64_t v7 = a6 * a5;
      uint64_t v8 = a3;
      uint64_t v9 = 2 * (4 * v7);
      uint64_t v10 = &a2->i16[(unint64_t)v9 / 2];
      int16x8_t v11 = &a2->i16[(unint64_t)v9 / 2 + (unint64_t)v9 / 2];
      unint64_t v12 = (unint64_t)a2 + 2 * v7 + v9;
      uint64_t v13 = (__int16 *)(v12 + v9);
      uint64_t v14 = &a2->i16[v7];
      uint64_t v15 = 8 * (a5 - 1);
      uint64_t v155 = v15 + 16;
      uint64_t v16 = 4 * (4 * v7);
      uint64_t v17 = 2 * (a5 - 1) + 2;
      uint64_t v18 = v17 + 2 * v7;
      uint64_t v19 = 2 * a5;
      uint64_t v160 = v17;
      uint64_t v154 = v15 + 8;
      uint64_t v20 = (4 * v7) + v161;
      uint64_t v144 = a6 * a5;
      uint64_t v21 = a5 & 0xFFFFFFF8;
      uint64_t v22 = 2 * v21;
      uint64_t v23 = 8 * v21;
      uint64_t v152 = v21;
      uint64_t v146 = v21 - 1;
      uint64_t v24 = v9 + 2 * v7;
      int8x16_t v156 = &a2->i8[2 * v20 + 2 + 2 * v7];
      BOOL v153 = &a2->i8[2 * v20 + 2];
      unint64_t v149 = &a2->i8[v18 + v16];
      uint64_t v151 = v7;
      BOOL v148 = &a2->i8[v17 + v16];
      int8x16_t v147 = &a2->i8[v18];
      v25.i64[0] = 0xF000F000F000F000;
      v25.i64[1] = 0xF000F000F000F000;
      v26.i64[0] = 0xF000F000F000F000;
      v26.i64[1] = 0xF000F000F000F000;
      v27.i64[0] = 0x8000800080008000;
      v27.i64[1] = 0x8000800080008000;
      v28.i64[0] = -1;
      v28.i64[1] = -1;
      int16x8_t v29 = result;
      int v30 = a4 & ~(a4 >> 31);
      uint64_t v162 = v8;
      while (v6 != v30)
      {
        uint64_t v31 = v6 * v8;
        uint64_t v32 = v19 * v6;
        if (a5 >= 8)
        {
          int v34 = 0;
          uint64_t v33 = 0;
          unint64_t v63 = (unint64_t)result + v154 + v31;
          BOOL v65 = v29 < (__int16 *)&v153[v32] && (unint64_t)v10 < v63;
          BOOL v67 = v29 < (__int16 *)((char *)v158->i16 + v160 + v32) && (unint64_t)a2 < v63;
          BOOL v68 = v12 >= v63 || v29 >= (__int16 *)&v156[v32];
          if (v68 && !v65)
          {
            int16x8_t v35 = (__int16 *)v12;
            int16x8_t v36 = v10;
            int16x8_t v37 = a2;
            float32x2x2_t v38 = v29;
            if (!v67)
            {
              unint64_t v69 = 0;
              int16x8_t v35 = (__int16 *)(v12 + v22);
              int16x8_t v36 = &v10[(unint64_t)v22 / 2];
              int16x8_t v37 = (int16x8_t *)((char *)a2 + v22);
              float32x2x2_t v38 = &v29[(unint64_t)v23 / 2];
              int16x8_t v70 = a2;
              do
              {
                unsigned int v71 = &v29[v69 / 2];
                int8x16_t v72 = veorq_s8((int8x16_t)vshlq_n_s16(vmaxq_s16(vminq_s16(*v70, v25), v26), 3uLL), v27);
                int8x16_t v73 = veorq_s8((int8x16_t)vshlq_n_s16(vmaxq_s16(vminq_s16(*(int16x8_t *)((char *)v70 + v9), v25), v26), 3uLL), v27);
                int8x16_t v74 = veorq_s8((int8x16_t)vshlq_n_s16(vmaxq_s16(vminq_s16(*(int16x8_t *)((char *)v70 + v24), v25), v26), 3uLL), v27);
                vst4q_s16(v71, *(int16x8x4_t *)v28.i8);
                v69 += 64;
                ++v70;
              }
              while (v23 != v69);
              uint64_t v33 = v152;
              int v34 = v152;
              uint64_t v40 = v146;
              if (v152 == a5) {
                goto LABEL_24;
              }
            }
            goto LABEL_8;
          }
        }
        else
        {
          uint64_t v33 = 0;
          int v34 = 0;
        }
        int16x8_t v35 = (__int16 *)v12;
        int16x8_t v36 = v10;
        int16x8_t v37 = a2;
        float32x2x2_t v38 = v29;
LABEL_8:
        int v39 = a5 - v34;
        uint64_t v40 = v33 + (v161 - v34);
        do
        {
          int v42 = v37->i16[0];
          int16x8_t v37 = (int16x8_t *)((char *)v37 + 2);
          int v41 = v42;
          int v44 = *v36++;
          int v43 = v44;
          int v46 = *v35++;
          int v45 = v46;
          __int16 *v38 = -1;
          if (v41 >= 4095) {
            int v41 = 4095;
          }
          if (v41 <= -4096) {
            LOWORD(v41) = -4096;
          }
          v38[1] = (8 * v41) ^ 0x8000;
          if (v43 >= 4095) {
            int v47 = 4095;
          }
          else {
            int v47 = v43;
          }
          if (v47 <= -4096) {
            LOWORD(v47) = -4096;
          }
          v38[2] = (8 * v47) ^ 0x8000;
          if (v45 >= 4095) {
            int v48 = 4095;
          }
          else {
            int v48 = v45;
          }
          if (v48 <= -4096) {
            LOWORD(v48) = -4096;
          }
          v38[3] = (8 * v48) ^ 0x8000;
          v38 += 4;
          --v39;
        }
        while (v39);
LABEL_24:
        if (a5 < 8)
        {
          int v49 = 0;
LABEL_26:
          int v50 = v13;
          int16x8_t v51 = v11;
          int16x8_t v52 = v14;
          int16x8_t v53 = v38;
          uint64_t v8 = v162;
LABEL_27:
          int v54 = a5 - v49;
          do
          {
            int v56 = *v52++;
            int v55 = v56;
            int v58 = *v51++;
            int v57 = v58;
            int v60 = *v50++;
            int v59 = v60;
            *int16x8_t v53 = -1;
            if (v55 >= 4095) {
              int v55 = 4095;
            }
            if (v55 <= -4096) {
              LOWORD(v55) = -4096;
            }
            v53[1] = (8 * v55) ^ 0x8000;
            if (v57 >= 4095) {
              int v61 = 4095;
            }
            else {
              int v61 = v57;
            }
            if (v61 <= -4096) {
              LOWORD(v61) = -4096;
            }
            v53[2] = (8 * v61) ^ 0x8000;
            if (v59 >= 4095) {
              int v62 = 4095;
            }
            else {
              int v62 = v59;
            }
            if (v62 <= -4096) {
              LOWORD(v62) = -4096;
            }
            v53[3] = (8 * v62) ^ 0x8000;
            v53 += 4;
            --v54;
          }
          while (v54);
          goto LABEL_43;
        }
        int v49 = 0;
        unint64_t v75 = (unint64_t)&result[4 * v40] + v155 + v31;
        BOOL v77 = v38 < (__int16 *)&v148[v32] && (unint64_t)v11 < v75;
        BOOL v79 = v38 < (__int16 *)&v147[v32] && (unint64_t)v14 < v75;
        BOOL v80 = (unint64_t)v13 >= v75 || v38 >= (__int16 *)&v149[v32];
        if (!v80 || v77 || v79) {
          goto LABEL_26;
        }
        unint64_t v81 = 0;
        int v50 = &v13[(unint64_t)v22 / 2];
        int16x8_t v51 = &v11[(unint64_t)v22 / 2];
        int16x8_t v52 = &v14[(unint64_t)v22 / 2];
        int16x8_t v53 = &v38[(unint64_t)v23 / 2];
        do
        {
          v165.val[1] = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vmaxq_s16(vminq_s16(*(int16x8_t *)&v14[v81 / 2], v25), v26), 3uLL), v27);
          v165.val[2] = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vmaxq_s16(vminq_s16(*(int16x8_t *)((char *)a2 + v16 + v81), v25), v26), 3uLL), v27);
          v165.val[3] = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vmaxq_s16(vminq_s16(*(int16x8_t *)&v14[(unint64_t)v16 / 2 + v81 / 2], v25), v26), 3uLL), v27);
          v165.val[0] = v28;
          vst4q_s16(v38, v165);
          v38 += 32;
          v81 += 16;
        }
        while (v22 != v81);
        int v49 = v152;
        uint64_t v8 = v162;
        if (v152 != a5) {
          goto LABEL_27;
        }
LABEL_43:
        int16x8_t v29 = (__int16 *)((char *)v29 + v8);
        a2 = (int16x8_t *)((char *)a2 + v19);
        uint64_t v14 = (__int16 *)((char *)v14 + v19);
        uint64_t v10 = (__int16 *)((char *)v10 + v19);
        int16x8_t v11 = (__int16 *)((char *)v11 + v19);
        v12 += v19;
        uint64_t v13 = (__int16 *)((char *)v13 + v19);
        if (++v6 == a6) {
          break;
        }
      }
      int8x8_t result = 0;
      int16x8_t v82 = (__int16 *)(v12 + v151 * 2);
      float32x2x2_t v83 = &v13[v151];
      float32x2x2_t v84 = &v14[v151];
      int v85 = a4;
      if (a6 > a4) {
        int v85 = a6;
      }
      int v157 = v85 - a6;
      v86.i64[0] = 0xF000F000F000F000;
      v86.i64[1] = 0xF000F000F000F000;
      v87.i64[0] = 0xF000F000F000F000;
      v87.i64[1] = 0xF000F000F000F000;
      v88.i64[0] = 0x8000800080008000;
      v88.i64[1] = 0x8000800080008000;
      v89.i64[0] = -1;
      v89.i64[1] = -1;
      BOOL v150 = v13;
      int16x8_t v90 = v13;
      int16x8_t v91 = (__int16 *)v12;
      int16x8_t v92 = v14;
      int16x8_t v93 = v29;
      do
      {
        if (result == v157) {
          return result;
        }
        uint64_t v94 = 2 * (v144 + v161) + 2 + v19 * (void)result;
        uint64_t v95 = v160 + v19 * (void)result;
        uint64_t v159 = (void)result * v8;
        if (a5 >= 8)
        {
          int v97 = 0;
          uint64_t v96 = 0;
          uint64_t v126 = (__int16 *)((char *)v29 + v154 + (void)result * v8);
          BOOL v128 = (unint64_t)v93 < v12 + v95 && v91 < v126;
          BOOL v130 = v93 < (__int16 *)((char *)v14 + v95) && v92 < v126;
          BOOL v131 = v82 >= v126 || (unint64_t)v93 >= v12 + v94;
          if (v131 && !v128)
          {
            float32x2x2_t v98 = v82;
            float32x2x2_t v99 = v91;
            int v100 = v92;
            int32x4_t v101 = v93;
            if (!v130)
            {
              unint64_t v132 = 0;
              float32x2x2_t v98 = &v82[(unint64_t)v22 / 2];
              float32x2x2_t v99 = &v91[(unint64_t)v22 / 2];
              int v100 = &v92[(unint64_t)v22 / 2];
              int32x4_t v101 = &v93[(unint64_t)v23 / 2];
              unsigned int v133 = v93;
              do
              {
                int8x16_t v134 = veorq_s8((int8x16_t)vshlq_n_s16(vmaxq_s16(vminq_s16(*(int16x8_t *)&v92[v132 / 2], v86), v87), 3uLL), v88);
                int8x16_t v135 = veorq_s8((int8x16_t)vshlq_n_s16(vmaxq_s16(vminq_s16(*(int16x8_t *)&v91[v132 / 2], v86), v87), 3uLL), v88);
                int8x16_t v136 = veorq_s8((int8x16_t)vshlq_n_s16(vmaxq_s16(vminq_s16(*(int16x8_t *)&v91[v151 + v132 / 2], v86), v87), 3uLL), v88);
                vst4q_s16(v133, *(int16x8x4_t *)v89.i8);
                v133 += 32;
                v132 += 16;
              }
              while ((v19 & 0x1FFFFFFF0) != v132);
              uint64_t v96 = v152;
              int v97 = v152;
              uint64_t v103 = v146;
              if (v152 == a5) {
                goto LABEL_114;
              }
            }
            goto LABEL_98;
          }
        }
        else
        {
          uint64_t v96 = 0;
          int v97 = 0;
        }
        float32x2x2_t v98 = v82;
        float32x2x2_t v99 = v91;
        int v100 = v92;
        int32x4_t v101 = v93;
LABEL_98:
        int v102 = a5 - v97;
        uint64_t v103 = v96 + (v161 - v97);
        do
        {
          int v105 = *v100++;
          int v104 = v105;
          int v107 = *v99++;
          int v106 = v107;
          int v109 = *v98++;
          int v108 = v109;
          *int32x4_t v101 = -1;
          if (v104 >= 4095) {
            int v104 = 4095;
          }
          if (v104 <= -4096) {
            LOWORD(v104) = -4096;
          }
          v101[1] = (8 * v104) ^ 0x8000;
          if (v106 >= 4095) {
            int v110 = 4095;
          }
          else {
            int v110 = v106;
          }
          if (v110 <= -4096) {
            LOWORD(v110) = -4096;
          }
          v101[2] = (8 * v110) ^ 0x8000;
          if (v108 >= 4095) {
            int v111 = 4095;
          }
          else {
            int v111 = v108;
          }
          if (v111 <= -4096) {
            LOWORD(v111) = -4096;
          }
          v101[3] = (8 * v111) ^ 0x8000;
          v101 += 4;
          --v102;
        }
        while (v102);
LABEL_114:
        if (a5 < 8)
        {
          int v112 = 0;
LABEL_116:
          int v113 = v83;
          long long v114 = v90;
          unsigned int v115 = v84;
          int8x16_t v116 = v101;
          uint64_t v8 = v162;
LABEL_117:
          int v117 = a5 - v112;
          do
          {
            int v119 = *v115++;
            int v118 = v119;
            int v121 = *v114++;
            int v120 = v121;
            int v123 = *v113++;
            int v122 = v123;
            *int8x16_t v116 = -1;
            if (v118 >= 4095) {
              int v118 = 4095;
            }
            if (v118 <= -4096) {
              LOWORD(v118) = -4096;
            }
            v116[1] = (8 * v118) ^ 0x8000;
            if (v120 >= 4095) {
              int v124 = 4095;
            }
            else {
              int v124 = v120;
            }
            if (v124 <= -4096) {
              LOWORD(v124) = -4096;
            }
            v116[2] = (8 * v124) ^ 0x8000;
            if (v122 >= 4095) {
              int v125 = 4095;
            }
            else {
              int v125 = v122;
            }
            if (v125 <= -4096) {
              LOWORD(v125) = -4096;
            }
            v116[3] = (8 * v125) ^ 0x8000;
            v116 += 4;
            --v117;
          }
          while (v117);
          goto LABEL_133;
        }
        int v112 = 0;
        int v137 = (__int16 *)((char *)&v29[4 * v103] + v155 + v159);
        BOOL v139 = v101 < (__int16 *)((char *)v150 + v95) && v90 < v137;
        BOOL v141 = v101 < (__int16 *)((char *)v14 + v94) && v84 < v137;
        BOOL v142 = v83 >= v137 || v101 >= (__int16 *)((char *)v150 + v94);
        if (!v142 || v139 || v141) {
          goto LABEL_116;
        }
        unint64_t v143 = 0;
        int v113 = &v83[(unint64_t)v22 / 2];
        long long v114 = &v90[(unint64_t)v22 / 2];
        unsigned int v115 = &v84[(unint64_t)v22 / 2];
        int8x16_t v116 = &v101[(unint64_t)v23 / 2];
        do
        {
          v166.val[1] = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vmaxq_s16(vminq_s16(*(int16x8_t *)&v84[v143 / 2], v86), v87), 3uLL), v88);
          v166.val[2] = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vmaxq_s16(vminq_s16(*(int16x8_t *)&v90[v143 / 2], v86), v87), 3uLL), v88);
          v166.val[3] = (int16x8_t)veorq_s8((int8x16_t)vshlq_n_s16(vmaxq_s16(vminq_s16(*(int16x8_t *)&v90[v151 + v143 / 2], v86), v87), 3uLL), v88);
          v166.val[0] = v89;
          vst4q_s16(v101, v166);
          v101 += 32;
          v143 += 16;
        }
        while (v22 != v143);
        int v112 = v152;
        uint64_t v8 = v162;
        if (v152 != a5) {
          goto LABEL_117;
        }
LABEL_133:
        int16x8_t v93 = (__int16 *)((char *)v93 + v8);
        int16x8_t v92 = (__int16 *)((char *)v92 + v19);
        float32x2x2_t v84 = (__int16 *)((char *)v84 + v19);
        int16x8_t v91 = (__int16 *)((char *)v91 + v19);
        int16x8_t v90 = (__int16 *)((char *)v90 + v19);
        int16x8_t v82 = (__int16 *)((char *)v82 + v19);
        float32x2x2_t v83 = (__int16 *)((char *)v83 + v19);
        int8x8_t result = (__int16 *)((char *)result + 1);
      }
      while (result != a6);
    }
  }
  return result;
}

uint64_t scale_horizontal_3to4_2vuy()
{
  uint64_t result = MEMORY[0x270FA5388]();
  v68[483] = *MEMORY[0x263EF8340];
  if (*(int *)(result + 48) >= 1)
  {
    int v1 = 0;
    int v2 = *(unsigned char **)(result + 24);
    v3.i64[0] = 0xFF000000FFLL;
    v3.i64[1] = 0xFF000000FFLL;
    v4.i64[0] = 0x400000004000;
    v4.i64[1] = 0x400000004000;
    uint64_t v5 = *(int8x16_t **)result;
    do
    {
      int16x8_t v6 = vdupq_n_s16(v5->u8[0]);
      int16x8_t v67 = vdupq_n_s16(v5->u8[1]);
      int16x8_t v65 = v6;
      uint64_t v7 = v64;
      int v8 = *(_DWORD *)(result + 8);
      int16x8_t v63 = vdupq_n_s16(v5->u8[2]);
      uint64_t v9 = v66;
      uint64_t v10 = (uint16x8_t *)v68;
      int16x8_t v11 = v5;
      if (v8 >= 16)
      {
        uint64_t v12 = 0;
        unsigned int v13 = v8 + 16;
        int16x8_t v11 = v5;
        uint64_t v10 = (uint16x8_t *)v68;
        do
        {
          int8x16_t v14 = *v11;
          int8x16_t v15 = v11[1];
          v11 += 2;
          *(int16x8_t *)&v66[v12] = vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(v14, v3)), (int32x4_t)vandq_s8(v15, v3));
          *(int16x8_t *)&v64[v12] = vqmovn_high_s32(vqmovn_s32((int32x4_t)(*(_OWORD *)&vshrq_n_u32((uint32x4_t)v14, 0x10uLL) & __PAIR128__(0xFFFF00FFFFFF00FFLL, 0xFFFF00FFFFFF00FFLL))), (int32x4_t)(*(_OWORD *)&vshrq_n_u32((uint32x4_t)v15, 0x10uLL) & __PAIR128__(0xFFFF00FFFFFF00FFLL, 0xFFFF00FFFFFF00FFLL)));
          *uint64_t v10 = vshrq_n_u16((uint16x8_t)v14, 8uLL);
          v10[1] = vshrq_n_u16((uint16x8_t)v15, 8uLL);
          v10 += 2;
          v13 -= 16;
          v12 += 16;
        }
        while (v13 > 0x1F);
        v8 -= v12;
        uint64_t v9 = &v66[v12];
        uint64_t v7 = &v64[v12];
      }
      if (v8 >= 2)
      {
        unsigned int v16 = v8 + 2;
        do
        {
          *(_WORD *)uint64_t v9 = v11->u8[0];
          v9 += 2;
          v10->i16[0] = v11->u8[1];
          *(_WORD *)uint64_t v7 = v11->u8[2];
          v7 += 2;
          v10->i16[1] = v11->u8[3];
          uint64_t v10 = (uint16x8_t *)((char *)v10 + 4);
          v16 -= 2;
          int16x8_t v11 = (int8x16_t *)((char *)v11 + 4);
        }
        while (v16 > 3);
      }
      uint64_t v17 = &v10[-1].i16[7];
      int16x8_t v18 = vld1q_dup_s16(v17);
      *uint64_t v10 = (uint16x8_t)v18;
      uint64_t v19 = (const __int16 *)(v9 - 2);
      int16x8_t v20 = vld1q_dup_s16(v19);
      *(int16x8_t *)uint64_t v9 = v20;
      uint64_t v21 = (const __int16 *)(v7 - 2);
      int16x8_t v22 = vld1q_dup_s16(v21);
      *(int16x8_t *)uint64_t v7 = v22;
      int v23 = *(_DWORD *)(result + 8);
      if (v23 > 2)
      {
        uint64_t v24 = v2 + 1;
        unsigned int v25 = v23 + 3;
        int16x8_t v26 = (int8x16_t *)v68;
        do
        {
          int8x16_t v27 = v26[-1];
          int8x16_t v28 = *v26;
          unsigned char *v24 = *v26;
          v27.i64[0] = vextq_s8(v27, v27, 8uLL).u64[0];
          int16x4_t v29 = (int16x4_t)vextq_s8(v28, v28, 8uLL).u64[0];
          int32x4_t v30 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v28.i8), vmull_s16((int16x4_t)15006946, v29)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v27.i8)));
          int32x4_t v31 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v30, (int8x16_t)v30, 8uLL), v30);
          v24[2] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v31, v4), vrev64q_s32(v31)), 0xFuLL)).u8[0];
          int32x4_t v32 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v28.i8), vmull_s16((int16x4_t)0xD3FCA30912, v29)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v27.i8)));
          int32x4_t v33 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v32, (int8x16_t)v32, 8uLL), v32);
          v24[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v33, v4), vrev64q_s32(v33)), 0xFuLL)).u8[0];
          int32x4_t v34 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v28.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v29)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v27.i8)));
          int32x4_t v35 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v34, (int8x16_t)v34, 8uLL), v34);
          v24[6] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v35, v4), vrev64q_s32(v35)), 0xFuLL)).u8[0];
          int16x8_t v26 = (int8x16_t *)((char *)v26 + 6);
          v24 += 8;
          v25 -= 3;
        }
        while (v25 > 5);
        int v36 = *(_DWORD *)(result + 8);
        if (v36 >= 6)
        {
          unsigned int v37 = (v36 >> 1) + 3;
          float32x2x2_t v38 = (int8x16_t *)v66;
          int v39 = v2;
          do
          {
            int8x16_t v40 = v38[-1];
            int8x16_t v41 = *v38;
            *int v39 = *v38;
            v40.i64[0] = vextq_s8(v40, v40, 8uLL).u64[0];
            int16x4_t v42 = (int16x4_t)vextq_s8(v41, v41, 8uLL).u64[0];
            int32x4_t v43 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v41.i8), vmull_s16((int16x4_t)15006946, v42)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v40.i8)));
            int32x4_t v44 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v43, (int8x16_t)v43, 8uLL), v43);
            v39[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v44, v4), vrev64q_s32(v44)), 0xFuLL)).u8[0];
            int32x4_t v45 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v41.i8), vmull_s16((int16x4_t)0xD3FCA30912, v42)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v40.i8)));
            int32x4_t v46 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v45, (int8x16_t)v45, 8uLL), v45);
            v39[8] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v46, v4), vrev64q_s32(v46)), 0xFuLL)).u8[0];
            int32x4_t v47 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v41.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v42)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v40.i8)));
            int32x4_t v48 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v47, (int8x16_t)v47, 8uLL), v47);
            v39[12] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v48, v4), vrev64q_s32(v48)), 0xFuLL)).u8[0];
            float32x2x2_t v38 = (int8x16_t *)((char *)v38 + 6);
            v39 += 16;
            v37 -= 3;
          }
          while (v37 > 5);
          int v49 = *(_DWORD *)(result + 8);
          if (v49 >= 6)
          {
            unsigned int v50 = v49 >> 1;
            int16x8_t v51 = v2 + 2;
            unsigned int v52 = v50 + 3;
            int16x8_t v53 = (int8x16_t *)v64;
            do
            {
              int8x16_t v54 = v53[-1];
              int8x16_t v55 = *v53;
              *int16x8_t v51 = *v53;
              v54.i64[0] = vextq_s8(v54, v54, 8uLL).u64[0];
              int16x4_t v56 = (int16x4_t)vextq_s8(v55, v55, 8uLL).u64[0];
              int32x4_t v57 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v55.i8), vmull_s16((int16x4_t)15006946, v56)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v54.i8)));
              int32x4_t v58 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v57, (int8x16_t)v57, 8uLL), v57);
              v51[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v58, v4), vrev64q_s32(v58)), 0xFuLL)).u8[0];
              int32x4_t v59 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v55.i8), vmull_s16((int16x4_t)0xD3FCA30912, v56)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v54.i8)));
              int32x4_t v60 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v59, (int8x16_t)v59, 8uLL), v59);
              v51[8] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v60, v4), vrev64q_s32(v60)), 0xFuLL)).u8[0];
              int32x4_t v61 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v55.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v56)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v54.i8)));
              int32x4_t v62 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v61, (int8x16_t)v61, 8uLL), v61);
              v51[12] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v62, v4), vrev64q_s32(v62)), 0xFuLL)).u8[0];
              int16x8_t v53 = (int8x16_t *)((char *)v53 + 6);
              v51 += 16;
              v52 -= 3;
            }
            while (v52 > 5);
          }
        }
      }
      uint64_t v5 = (int8x16_t *)((char *)v5 + *(void *)(result + 16));
      v2 += *(void *)(result + 40);
      ++v1;
    }
    while (v1 < *(_DWORD *)(result + 48));
  }
  return result;
}

uint64_t scale_horizontal_3to4_v216()
{
  uint64_t result = MEMORY[0x270FA5388]();
  v69[483] = *MEMORY[0x263EF8340];
  if (*(int *)(result + 48) >= 1)
  {
    int v1 = 0;
    int v2 = *(_WORD **)(result + 24);
    int8x16_t v3 = *(int8x16_t **)result;
    v4.i64[0] = 0x8000800080008000;
    v4.i64[1] = 0x8000800080008000;
    v5.i64[0] = 0x400000004000;
    v5.i64[1] = 0x400000004000;
    int v6 = *(_DWORD *)(result + 8);
    while (1)
    {
      int16x8_t v68 = vdupq_n_s16(v3->u16[1] ^ 0xFFFF8000);
      int16x8_t v66 = vdupq_n_s16(v3->u16[0] ^ 0xFFFF8000);
      int16x8_t v64 = vdupq_n_s16(v3->u16[2] ^ 0xFFFF8000);
      if (v6 >= 8) {
        break;
      }
      int16x8_t v20 = (int16x8_t *)v65;
      uint64_t v19 = (int16x8_t *)v67;
      uint64_t v10 = v69;
      uint64_t v9 = v3;
      if (v6 >= 2) {
        goto LABEL_10;
      }
LABEL_12:
      int16x8_t v22 = (const __int16 *)v10 - 1;
      int16x8_t v23 = vld1q_dup_s16(v22);
      *(int16x8_t *)uint64_t v10 = v23;
      uint64_t v24 = &v19[-1].i16[7];
      int16x8_t v25 = vld1q_dup_s16(v24);
      *uint64_t v19 = v25;
      int16x8_t v26 = &v20[-1].i16[7];
      int16x8_t v27 = vld1q_dup_s16(v26);
      *int16x8_t v20 = v27;
      int v6 = *(_DWORD *)(result + 8);
      if (v6 > 2)
      {
        int8x16_t v28 = v2 + 1;
        unsigned int v29 = v6 + 3;
        int32x4_t v30 = (int8x16_t *)v69;
        do
        {
          int8x16_t v32 = v30[-1];
          int8x16_t v31 = *v30;
          _WORD *v28 = *(_OWORD *)v30 ^ 0x8000;
          v32.i64[0] = vextq_s8(v32, v32, 8uLL).u64[0];
          int16x4_t v33 = (int16x4_t)vextq_s8(v31, v31, 8uLL).u64[0];
          int32x4_t v34 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v31.i8), vmull_s16((int16x4_t)15006946, v33)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v32.i8)));
          int32x4_t v35 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v34, (int8x16_t)v34, 8uLL), v34);
          int32x4_t v36 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v31.i8), vmull_s16((int16x4_t)0xD3FCA30912, v33)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v32.i8)));
          int32x4_t v37 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v36, (int8x16_t)v36, 8uLL), v36);
          int32x4_t v38 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v31.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v33)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v32.i8)));
          int32x4_t v39 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v38, (int8x16_t)v38, 8uLL), v38);
          v28[2] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v35, v5), vrev64q_s32(v35)), 0xFuLL)).u16[0] ^ 0x8000;
          v28[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v37, v5), vrev64q_s32(v37)), 0xFuLL)).u16[0] ^ 0x8000;
          v28[6] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v39, v5), vrev64q_s32(v39)), 0xFuLL)).u16[0] ^ 0x8000;
          int32x4_t v30 = (int8x16_t *)((char *)v30 + 6);
          v29 -= 3;
          v28 += 8;
        }
        while (v29 > 5);
        if (v6 >= 6)
        {
          unsigned int v40 = (v6 >> 1) + 3;
          unsigned int v41 = v40;
          int16x4_t v42 = (int8x16_t *)v67;
          int32x4_t v43 = v2;
          do
          {
            int8x16_t v45 = v42[-1];
            int8x16_t v44 = *v42;
            *int32x4_t v43 = *(_OWORD *)v42 ^ 0x8000;
            v45.i64[0] = vextq_s8(v45, v45, 8uLL).u64[0];
            int16x4_t v46 = (int16x4_t)vextq_s8(v44, v44, 8uLL).u64[0];
            int32x4_t v47 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v44.i8), vmull_s16((int16x4_t)15006946, v46)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v45.i8)));
            int32x4_t v48 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v47, (int8x16_t)v47, 8uLL), v47);
            int32x4_t v49 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v44.i8), vmull_s16((int16x4_t)0xD3FCA30912, v46)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v45.i8)));
            int32x4_t v50 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v49, (int8x16_t)v49, 8uLL), v49);
            int32x4_t v51 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v44.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v46)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v45.i8)));
            int32x4_t v52 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v51, (int8x16_t)v51, 8uLL), v51);
            v43[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v48, v5), vrev64q_s32(v48)), 0xFuLL)).u16[0] ^ 0x8000;
            v43[8] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v50, v5), vrev64q_s32(v50)), 0xFuLL)).u16[0] ^ 0x8000;
            v43[12] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v52, v5), vrev64q_s32(v52)), 0xFuLL)).u16[0] ^ 0x8000;
            int16x4_t v42 = (int8x16_t *)((char *)v42 + 6);
            v41 -= 3;
            v43 += 16;
          }
          while (v41 > 5);
          int16x8_t v53 = v2 + 2;
          int8x16_t v54 = (int8x16_t *)v65;
          do
          {
            int8x16_t v56 = v54[-1];
            int8x16_t v55 = *v54;
            *int16x8_t v53 = *(_OWORD *)v54 ^ 0x8000;
            v56.i64[0] = vextq_s8(v56, v56, 8uLL).u64[0];
            int16x4_t v57 = (int16x4_t)vextq_s8(v55, v55, 8uLL).u64[0];
            int32x4_t v58 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v55.i8), vmull_s16((int16x4_t)15006946, v57)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v56.i8)));
            int32x4_t v59 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v58, (int8x16_t)v58, 8uLL), v58);
            int32x4_t v60 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v55.i8), vmull_s16((int16x4_t)0xD3FCA30912, v57)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v56.i8)));
            int32x4_t v61 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v60, (int8x16_t)v60, 8uLL), v60);
            int32x4_t v62 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v55.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v57)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v56.i8)));
            int32x4_t v63 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v62, (int8x16_t)v62, 8uLL), v62);
            v53[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v59, v5), vrev64q_s32(v59)), 0xFuLL)).u16[0] ^ 0x8000;
            v53[8] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v61, v5), vrev64q_s32(v61)), 0xFuLL)).u16[0] ^ 0x8000;
            v53[12] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v63, v5), vrev64q_s32(v63)), 0xFuLL)).u16[0] ^ 0x8000;
            int8x16_t v54 = (int8x16_t *)((char *)v54 + 6);
            v40 -= 3;
            v53 += 16;
          }
          while (v40 > 5);
        }
      }
      int8x16_t v3 = (int8x16_t *)((char *)v3 + *(void *)(result + 16));
      int v2 = (_WORD *)((char *)v2 + *(void *)(result + 40));
      if (++v1 >= *(_DWORD *)(result + 48)) {
        return result;
      }
    }
    uint64_t v7 = 0;
    unsigned int v8 = v6 + 8;
    uint64_t v9 = v3;
    uint64_t v10 = v69;
    do
    {
      int8x16_t v11 = *v9;
      int8x16_t v12 = v9[1];
      v9 += 2;
      int16x8_t v13 = (int16x8_t)veorq_s8(v11, v4);
      int16x8_t v14 = (int16x8_t)veorq_s8(v12, v4);
      int16x8_t v15 = vzip1q_s16(v13, v14);
      int16x8_t v16 = vzip2q_s16(v13, v14);
      int16x8_t v17 = vzip1q_s16(v15, v16);
      int16x8_t v18 = vzip2q_s16(v15, v16);
      *(void *)&v67[v7] = v17.i64[0];
      *(void *)&v65[v7] = v18.i64[0];
      *(int16x8_t *)uint64_t v10 = vzip2q_s16(v17, v18);
      v10 += 2;
      v8 -= 8;
      v7 += 8;
    }
    while (v8 > 0xF);
    v6 -= v7;
    uint64_t v19 = (int16x8_t *)&v67[v7];
    int16x8_t v20 = (int16x8_t *)&v65[v7];
    if (v6 < 2) {
      goto LABEL_12;
    }
LABEL_10:
    unsigned int v21 = v6 + 2;
    do
    {
      v19->i16[0] = v9->i16[0] ^ 0x8000;
      uint64_t v19 = (int16x8_t *)((char *)v19 + 2);
      *(_WORD *)uint64_t v10 = v9->i16[1] ^ 0x8000;
      v20->i16[0] = v9->i16[2] ^ 0x8000;
      int16x8_t v20 = (int16x8_t *)((char *)v20 + 2);
      *((_WORD *)v10 + 1) = v9->i16[3] ^ 0x8000;
      uint64_t v10 = (void *)((char *)v10 + 4);
      v21 -= 2;
      uint64_t v9 = (int8x16_t *)((char *)v9 + 8);
    }
    while (v21 > 3);
    goto LABEL_12;
  }
  return result;
}

uint64_t scale_horizontal_3to4_4444_8b()
{
  uint64_t result = MEMORY[0x270FA5388]();
  uint64_t v85 = *MEMORY[0x263EF8340];
  if (*(int *)(result + 48) >= 1)
  {
    int v1 = 0;
    int v2 = *(unsigned char **)(result + 24);
    v3.i64[0] = 0xFF000000FFLL;
    v3.i64[1] = 0xFF000000FFLL;
    v4.i64[0] = 0x400000004000;
    v4.i64[1] = 0x400000004000;
    int32x4_t v5 = *(unsigned __int8 **)result;
    while (1)
    {
      int v6 = *(_DWORD *)(result + 8);
      int16x8_t v83 = vdupq_n_s16(*v5);
      int16x8_t v81 = vdupq_n_s16(v5[1]);
      int16x8_t v79 = vdupq_n_s16(v5[2]);
      int16x8_t v77 = vdupq_n_s16(v5[3]);
      if (v6 >= 8) {
        break;
      }
      int16x8_t v15 = (int16x8_t *)v78;
      int16x8_t v14 = (int16x8_t *)v80;
      int16x8_t v13 = (int16x8_t *)v82;
      int8x16_t v12 = (int16x8_t *)v84;
      unsigned int v8 = (int8x16_t *)v5;
      if (v6 >= 1) {
        goto LABEL_10;
      }
LABEL_12:
      int16x8_t v17 = &v12[-1].i16[7];
      int16x8_t v18 = vld1q_dup_s16(v17);
      uint64_t v19 = &v13[-1].i16[7];
      int16x8_t v20 = vld1q_dup_s16(v19);
      int16x8_t *v12 = v18;
      *int16x8_t v13 = v20;
      unsigned int v21 = &v14[-1].i16[7];
      int16x8_t v22 = vld1q_dup_s16(v21);
      *int16x8_t v14 = v22;
      int16x8_t v23 = &v15[-1].i16[7];
      int16x8_t v24 = vld1q_dup_s16(v23);
      *int16x8_t v15 = v24;
      int v25 = *(_DWORD *)(result + 8);
      if (v25 >= 3)
      {
        unsigned int v26 = v25 + 3;
        int16x8_t v27 = (int8x16_t *)v84;
        int8x16_t v28 = v2;
        do
        {
          int8x16_t v29 = v27[-1];
          int8x16_t v30 = *v27;
          unsigned char *v28 = *v27;
          v29.i64[0] = vextq_s8(v29, v29, 8uLL).u64[0];
          int16x4_t v31 = (int16x4_t)vextq_s8(v30, v30, 8uLL).u64[0];
          int32x4_t v32 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v30.i8), vmull_s16((int16x4_t)15006946, v31)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v29.i8)));
          int32x4_t v33 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v32, (int8x16_t)v32, 8uLL), v32);
          v28[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v33, v4), vrev64q_s32(v33)), 0xFuLL)).u8[0];
          int32x4_t v34 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v30.i8), vmull_s16((int16x4_t)0xD3FCA30912, v31)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v29.i8)));
          int32x4_t v35 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v34, (int8x16_t)v34, 8uLL), v34);
          v28[8] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v35, v4), vrev64q_s32(v35)), 0xFuLL)).u8[0];
          int32x4_t v36 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v30.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v31)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v29.i8)));
          int32x4_t v37 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v36, (int8x16_t)v36, 8uLL), v36);
          v28[12] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v37, v4), vrev64q_s32(v37)), 0xFuLL)).u8[0];
          int16x8_t v27 = (int8x16_t *)((char *)v27 + 6);
          v28 += 16;
          v26 -= 3;
        }
        while (v26 > 5);
        int v38 = *(_DWORD *)(result + 8);
        if (v38 >= 3)
        {
          int32x4_t v39 = v2 + 1;
          unsigned int v40 = v38 + 3;
          unsigned int v41 = (int8x16_t *)v82;
          do
          {
            int8x16_t v42 = v41[-1];
            int8x16_t v43 = *v41;
            *int32x4_t v39 = *v41;
            v42.i64[0] = vextq_s8(v42, v42, 8uLL).u64[0];
            int16x4_t v44 = (int16x4_t)vextq_s8(v43, v43, 8uLL).u64[0];
            int32x4_t v45 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v43.i8), vmull_s16((int16x4_t)15006946, v44)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v42.i8)));
            int32x4_t v46 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v45, (int8x16_t)v45, 8uLL), v45);
            v39[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v46, v4), vrev64q_s32(v46)), 0xFuLL)).u8[0];
            int32x4_t v47 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v43.i8), vmull_s16((int16x4_t)0xD3FCA30912, v44)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v42.i8)));
            int32x4_t v48 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v47, (int8x16_t)v47, 8uLL), v47);
            v39[8] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v48, v4), vrev64q_s32(v48)), 0xFuLL)).u8[0];
            int32x4_t v49 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v43.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v44)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v42.i8)));
            int32x4_t v50 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v49, (int8x16_t)v49, 8uLL), v49);
            v39[12] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v50, v4), vrev64q_s32(v50)), 0xFuLL)).u8[0];
            unsigned int v41 = (int8x16_t *)((char *)v41 + 6);
            v39 += 16;
            v40 -= 3;
          }
          while (v40 > 5);
          int v51 = *(_DWORD *)(result + 8);
          if (v51 >= 3)
          {
            int32x4_t v52 = v2 + 2;
            unsigned int v53 = v51 + 3;
            int8x16_t v54 = (int8x16_t *)v80;
            do
            {
              int8x16_t v55 = v54[-1];
              int8x16_t v56 = *v54;
              *int32x4_t v52 = *v54;
              v55.i64[0] = vextq_s8(v55, v55, 8uLL).u64[0];
              int16x4_t v57 = (int16x4_t)vextq_s8(v56, v56, 8uLL).u64[0];
              int32x4_t v58 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v56.i8), vmull_s16((int16x4_t)15006946, v57)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v55.i8)));
              int32x4_t v59 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v58, (int8x16_t)v58, 8uLL), v58);
              v52[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v59, v4), vrev64q_s32(v59)), 0xFuLL)).u8[0];
              int32x4_t v60 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v56.i8), vmull_s16((int16x4_t)0xD3FCA30912, v57)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v55.i8)));
              int32x4_t v61 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v60, (int8x16_t)v60, 8uLL), v60);
              v52[8] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v61, v4), vrev64q_s32(v61)), 0xFuLL)).u8[0];
              int32x4_t v62 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v56.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v57)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v55.i8)));
              int32x4_t v63 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v62, (int8x16_t)v62, 8uLL), v62);
              v52[12] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v63, v4), vrev64q_s32(v63)), 0xFuLL)).u8[0];
              int8x16_t v54 = (int8x16_t *)((char *)v54 + 6);
              v52 += 16;
              v53 -= 3;
            }
            while (v53 > 5);
            int v64 = *(_DWORD *)(result + 8);
            if (v64 >= 3)
            {
              int16x8_t v65 = v2 + 3;
              unsigned int v66 = v64 + 3;
              int16x8_t v67 = (int8x16_t *)v78;
              do
              {
                int8x16_t v68 = v67[-1];
                int8x16_t v69 = *v67;
                *int16x8_t v65 = *v67;
                v68.i64[0] = vextq_s8(v68, v68, 8uLL).u64[0];
                int16x4_t v70 = (int16x4_t)vextq_s8(v69, v69, 8uLL).u64[0];
                int32x4_t v71 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v69.i8), vmull_s16((int16x4_t)15006946, v70)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v68.i8)));
                int32x4_t v72 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v71, (int8x16_t)v71, 8uLL), v71);
                v65[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v72, v4), vrev64q_s32(v72)), 0xFuLL)).u8[0];
                int32x4_t v73 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v69.i8), vmull_s16((int16x4_t)0xD3FCA30912, v70)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v68.i8)));
                int32x4_t v74 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v73, (int8x16_t)v73, 8uLL), v73);
                v65[8] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v74, v4), vrev64q_s32(v74)), 0xFuLL)).u8[0];
                int32x4_t v75 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v69.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v70)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v68.i8)));
                int32x4_t v76 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v75, (int8x16_t)v75, 8uLL), v75);
                v65[12] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v76, v4), vrev64q_s32(v76)), 0xFuLL)).u8[0];
                int16x8_t v67 = (int8x16_t *)((char *)v67 + 6);
                v65 += 16;
                v66 -= 3;
              }
              while (v66 > 5);
            }
          }
        }
      }
      v5 += *(void *)(result + 16);
      v2 += *(void *)(result + 40);
      if (++v1 >= *(_DWORD *)(result + 48)) {
        return result;
      }
    }
    uint64_t v7 = 0;
    unsigned int v8 = (int8x16_t *)v5;
    do
    {
      unsigned int v9 = v6;
      int8x16_t v10 = *v8;
      int8x16_t v11 = v8[1];
      v8 += 2;
      *(int16x8_t *)&v84[v7] = vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(v10, v3)), (int32x4_t)vandq_s8(v11, v3));
      *(int16x8_t *)&v82[v7] = vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)v10, 8uLL), v3)), (int32x4_t)vandq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)v11, 8uLL), v3));
      *(int16x8_t *)&v80[v7] = vqmovn_high_s32(vqmovn_s32((int32x4_t)(*(_OWORD *)&vshrq_n_u32((uint32x4_t)v10, 0x10uLL) & __PAIR128__(0xFFFF00FFFFFF00FFLL, 0xFFFF00FFFFFF00FFLL))), (int32x4_t)(*(_OWORD *)&vshrq_n_u32((uint32x4_t)v11, 0x10uLL) & __PAIR128__(0xFFFF00FFFFFF00FFLL, 0xFFFF00FFFFFF00FFLL)));
      *(int16x8_t *)&v78[v7] = vqmovn_high_s32(vqmovn_s32((int32x4_t)vshrq_n_u32((uint32x4_t)v10, 0x18uLL)), (int32x4_t)vshrq_n_u32((uint32x4_t)v11, 0x18uLL));
      v6 -= 8;
      v7 += 16;
    }
    while (v9 > 0xF);
    int8x16_t v12 = (int16x8_t *)&v84[v7];
    int16x8_t v13 = (int16x8_t *)&v82[v7];
    int16x8_t v14 = (int16x8_t *)&v80[v7];
    int16x8_t v15 = (int16x8_t *)&v78[v7];
    if (v6 < 1) {
      goto LABEL_12;
    }
LABEL_10:
    unsigned int v16 = v6 + 1;
    do
    {
      v12->i16[0] = v8->u8[0];
      int8x16_t v12 = (int16x8_t *)((char *)v12 + 2);
      v13->i16[0] = v8->u8[1];
      int16x8_t v13 = (int16x8_t *)((char *)v13 + 2);
      v14->i16[0] = v8->u8[2];
      int16x8_t v14 = (int16x8_t *)((char *)v14 + 2);
      v15->i16[0] = v8->u8[3];
      int16x8_t v15 = (int16x8_t *)((char *)v15 + 2);
      --v16;
      unsigned int v8 = (int8x16_t *)((char *)v8 + 4);
    }
    while (v16 > 1);
    goto LABEL_12;
  }
  return result;
}

uint64_t scale_horizontal_3to4_4444_16bBE()
{
  uint64_t result = MEMORY[0x270FA5388]();
  uint64_t v91 = *MEMORY[0x263EF8340];
  if (*(int *)(result + 48) >= 1)
  {
    int v1 = 0;
    int v2 = *(_WORD **)(result + 24);
    int8x16_t v3 = *(unsigned __int16 **)result;
    v4.i64[0] = 0x80008000800080;
    v4.i64[1] = 0x80008000800080;
    v5.i64[0] = 0x400000004000;
    v5.i64[1] = 0x400000004000;
    int v6 = *(_DWORD *)(result + 8);
    while (1)
    {
      int16x8_t v89 = vdupq_n_s16(bswap32(*v3 ^ 0x80) >> 16);
      int16x8_t v87 = vdupq_n_s16(bswap32(v3[1] ^ 0x80) >> 16);
      int16x8_t v85 = vdupq_n_s16(bswap32(v3[2] ^ 0x80) >> 16);
      int16x8_t v83 = vdupq_n_s16(bswap32(v3[3] ^ 0x80) >> 16);
      if (v6 >= 8) {
        break;
      }
      int v25 = (int16x8_t *)v84;
      int16x8_t v24 = (int16x8_t *)v86;
      int16x8_t v23 = (int16x8_t *)v88;
      int16x8_t v22 = (int16x8_t *)v90;
      unsigned int v8 = (int8x16_t *)v3;
      if (v6 >= 1) {
        goto LABEL_10;
      }
LABEL_12:
      int16x8_t v27 = &v22[-1].i16[7];
      int16x8_t v28 = vld1q_dup_s16(v27);
      int8x16_t v29 = &v23[-1].i16[7];
      int16x8_t v30 = vld1q_dup_s16(v29);
      int16x8_t *v22 = v28;
      *int16x8_t v23 = v30;
      int16x4_t v31 = &v24[-1].i16[7];
      int16x8_t v32 = vld1q_dup_s16(v31);
      int16x8_t *v24 = v32;
      int32x4_t v33 = &v25[-1].i16[7];
      int16x8_t v34 = vld1q_dup_s16(v33);
      *int v25 = v34;
      int v6 = *(_DWORD *)(result + 8);
      if (v6 >= 3)
      {
        unsigned int v35 = v6 + 3;
        unsigned int v36 = v6 + 3;
        int32x4_t v37 = (int8x16_t *)v90;
        int v38 = v2;
        do
        {
          int8x16_t v39 = *v37;
          int16x4_t v40 = (int16x4_t)vextq_s8(v37[-1], v37[-1], 8uLL).u64[0];
          _WORD *v38 = bswap32(v37->u16[0] ^ 0x8000) >> 16;
          int16x4_t v41 = (int16x4_t)vextq_s8(v39, v39, 8uLL).u64[0];
          int32x4_t v42 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v39.i8), vmull_s16((int16x4_t)15006946, v41)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, v40)));
          int32x4_t v43 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v42, (int8x16_t)v42, 8uLL), v42);
          int32x4_t v44 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v39.i8), vmull_s16((int16x4_t)0xD3FCA30912, v41)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, v40)));
          int32x4_t v45 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), v44);
          int32x4_t v46 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v39.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v41)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, v40)));
          int32x4_t v47 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v46, (int8x16_t)v46, 8uLL), v46);
          v38[4] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v43, v5), vrev64q_s32(v43)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          v38[8] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v45, v5), vrev64q_s32(v45)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          v38[12] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v47, v5), vrev64q_s32(v47)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          int32x4_t v37 = (int8x16_t *)((char *)v37 + 6);
          v36 -= 3;
          v38 += 16;
        }
        while (v36 > 5);
        int32x4_t v48 = v2 + 1;
        unsigned int v49 = v6 + 3;
        int32x4_t v50 = (int8x16_t *)v88;
        do
        {
          int8x16_t v51 = *v50;
          int16x4_t v52 = (int16x4_t)vextq_s8(v50[-1], v50[-1], 8uLL).u64[0];
          *int32x4_t v48 = bswap32(v50->u16[0] ^ 0x8000) >> 16;
          int16x4_t v53 = (int16x4_t)vextq_s8(v51, v51, 8uLL).u64[0];
          int32x4_t v54 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v51.i8), vmull_s16((int16x4_t)15006946, v53)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, v52)));
          int32x4_t v55 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL), v54);
          int32x4_t v56 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v51.i8), vmull_s16((int16x4_t)0xD3FCA30912, v53)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, v52)));
          int32x4_t v57 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v56, (int8x16_t)v56, 8uLL), v56);
          int32x4_t v58 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v51.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v53)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, v52)));
          int32x4_t v59 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v58, (int8x16_t)v58, 8uLL), v58);
          v48[4] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v55, v5), vrev64q_s32(v55)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          v48[8] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v57, v5), vrev64q_s32(v57)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          v48[12] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v59, v5), vrev64q_s32(v59)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          int32x4_t v50 = (int8x16_t *)((char *)v50 + 6);
          v49 -= 3;
          v48 += 16;
        }
        while (v49 > 5);
        int32x4_t v60 = v2 + 2;
        unsigned int v61 = v6 + 3;
        int32x4_t v62 = (int8x16_t *)v86;
        do
        {
          int8x16_t v63 = *v62;
          int16x4_t v64 = (int16x4_t)vextq_s8(v62[-1], v62[-1], 8uLL).u64[0];
          *int32x4_t v60 = bswap32(v62->u16[0] ^ 0x8000) >> 16;
          int16x4_t v65 = (int16x4_t)vextq_s8(v63, v63, 8uLL).u64[0];
          int32x4_t v66 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v63.i8), vmull_s16((int16x4_t)15006946, v65)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, v64)));
          int32x4_t v67 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v66, (int8x16_t)v66, 8uLL), v66);
          int32x4_t v68 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v63.i8), vmull_s16((int16x4_t)0xD3FCA30912, v65)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, v64)));
          int32x4_t v69 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL), v68);
          int32x4_t v70 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v63.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v65)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, v64)));
          int32x4_t v71 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v70, (int8x16_t)v70, 8uLL), v70);
          v60[4] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v67, v5), vrev64q_s32(v67)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          v60[8] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v69, v5), vrev64q_s32(v69)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          v60[12] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v71, v5), vrev64q_s32(v71)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          int32x4_t v62 = (int8x16_t *)((char *)v62 + 6);
          v61 -= 3;
          v60 += 16;
        }
        while (v61 > 5);
        int32x4_t v72 = v2 + 3;
        int32x4_t v73 = (int8x16_t *)v84;
        do
        {
          int8x16_t v74 = *v73;
          int16x4_t v75 = (int16x4_t)vextq_s8(v73[-1], v73[-1], 8uLL).u64[0];
          *int32x4_t v72 = bswap32(v73->u16[0] ^ 0x8000) >> 16;
          int16x4_t v76 = (int16x4_t)vextq_s8(v74, v74, 8uLL).u64[0];
          int32x4_t v77 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v74.i8), vmull_s16((int16x4_t)15006946, v76)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, v75)));
          int32x4_t v78 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v77, (int8x16_t)v77, 8uLL), v77);
          int32x4_t v79 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v74.i8), vmull_s16((int16x4_t)0xD3FCA30912, v76)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, v75)));
          int32x4_t v80 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v79, (int8x16_t)v79, 8uLL), v79);
          int32x4_t v81 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v74.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v76)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, v75)));
          int32x4_t v82 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v81, (int8x16_t)v81, 8uLL), v81);
          v72[4] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v78, v5), vrev64q_s32(v78)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          v72[8] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v80, v5), vrev64q_s32(v80)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          v72[12] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v82, v5), vrev64q_s32(v82)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          int32x4_t v73 = (int8x16_t *)((char *)v73 + 6);
          v35 -= 3;
          v72 += 16;
        }
        while (v35 > 5);
      }
      int8x16_t v3 = (unsigned __int16 *)((char *)v3 + *(void *)(result + 16));
      int v2 = (_WORD *)((char *)v2 + *(void *)(result + 40));
      if (++v1 >= *(_DWORD *)(result + 48)) {
        return result;
      }
    }
    uint64_t v7 = 0;
    unsigned int v8 = (int8x16_t *)v3;
    do
    {
      unsigned int v9 = v6;
      int16x8_t v10 = (int16x8_t)vrev16q_s8(veorq_s8(*v8, v4));
      int16x8_t v11 = (int16x8_t)vrev16q_s8(veorq_s8(v8[1], v4));
      int16x8_t v12 = (int16x8_t)vrev16q_s8(veorq_s8(v8[2], v4));
      int16x8_t v13 = (int16x8_t)vrev16q_s8(veorq_s8(v8[3], v4));
      int16x8_t v14 = vzip1q_s16(v10, v11);
      int16x8_t v15 = vzip2q_s16(v10, v11);
      int16x8_t v16 = vzip1q_s16(v12, v13);
      int16x8_t v17 = vzip2q_s16(v12, v13);
      int64x2_t v18 = (int64x2_t)vzip1q_s16(v14, v15);
      int64x2_t v19 = (int64x2_t)vzip2q_s16(v14, v15);
      int64x2_t v20 = (int64x2_t)vzip1q_s16(v16, v17);
      int64x2_t v21 = (int64x2_t)vzip2q_s16(v16, v17);
      *(int64x2_t *)&v90[v7] = vzip1q_s64(v18, v20);
      *(int64x2_t *)&v88[v7] = vzip2q_s64(v18, v20);
      *(int64x2_t *)&v86[v7] = vzip1q_s64(v19, v21);
      *(int64x2_t *)&v84[v7] = vzip2q_s64(v19, v21);
      v8 += 4;
      v6 -= 8;
      v7 += 16;
    }
    while (v9 > 0xF);
    int16x8_t v22 = (int16x8_t *)&v90[v7];
    int16x8_t v23 = (int16x8_t *)&v88[v7];
    int16x8_t v24 = (int16x8_t *)&v86[v7];
    int v25 = (int16x8_t *)&v84[v7];
    if (v6 < 1) {
      goto LABEL_12;
    }
LABEL_10:
    unsigned int v26 = v6 + 1;
    do
    {
      v22->i16[0] = bswap32(v8->u16[0] ^ 0x80) >> 16;
      int16x8_t v22 = (int16x8_t *)((char *)v22 + 2);
      v23->i16[0] = bswap32(v8->u16[1] ^ 0x80) >> 16;
      int16x8_t v23 = (int16x8_t *)((char *)v23 + 2);
      v24->i16[0] = bswap32(v8->u16[2] ^ 0x80) >> 16;
      int16x8_t v24 = (int16x8_t *)((char *)v24 + 2);
      v25->i16[0] = bswap32(v8->u16[3] ^ 0x80) >> 16;
      int v25 = (int16x8_t *)((char *)v25 + 2);
      --v26;
      unsigned int v8 = (int8x16_t *)((char *)v8 + 8);
    }
    while (v26 > 1);
    goto LABEL_12;
  }
  return result;
}

uint64_t scale_horizontal_3to4_4444_16bLE()
{
  uint64_t result = MEMORY[0x270FA5388]();
  uint64_t v91 = *MEMORY[0x263EF8340];
  if (*(int *)(result + 48) >= 1)
  {
    int v1 = 0;
    int v2 = *(_WORD **)(result + 24);
    int8x16_t v3 = *(unsigned __int16 **)result;
    v4.i64[0] = 0x8000800080008000;
    v4.i64[1] = 0x8000800080008000;
    v5.i64[0] = 0x400000004000;
    v5.i64[1] = 0x400000004000;
    int v6 = *(_DWORD *)(result + 8);
    while (1)
    {
      int16x8_t v89 = vdupq_n_s16(*v3 ^ 0xFFFF8000);
      int16x8_t v87 = vdupq_n_s16(v3[1] ^ 0xFFFF8000);
      int16x8_t v85 = vdupq_n_s16(v3[2] ^ 0xFFFF8000);
      int16x8_t v83 = vdupq_n_s16(v3[3] ^ 0xFFFF8000);
      if (v6 >= 8) {
        break;
      }
      int v25 = (int16x8_t *)v84;
      int16x8_t v24 = (int16x8_t *)v86;
      int16x8_t v23 = (int16x8_t *)v88;
      int16x8_t v22 = (int16x8_t *)v90;
      unsigned int v8 = (int8x16_t *)v3;
      if (v6 >= 1) {
        goto LABEL_10;
      }
LABEL_12:
      int16x8_t v27 = &v22[-1].i16[7];
      int16x8_t v28 = vld1q_dup_s16(v27);
      int8x16_t v29 = &v23[-1].i16[7];
      int16x8_t v30 = vld1q_dup_s16(v29);
      int16x8_t *v22 = v28;
      *int16x8_t v23 = v30;
      int16x4_t v31 = &v24[-1].i16[7];
      int16x8_t v32 = vld1q_dup_s16(v31);
      int16x8_t *v24 = v32;
      int32x4_t v33 = &v25[-1].i16[7];
      int16x8_t v34 = vld1q_dup_s16(v33);
      *int v25 = v34;
      int v6 = *(_DWORD *)(result + 8);
      if (v6 >= 3)
      {
        unsigned int v35 = v6 + 3;
        unsigned int v36 = v6 + 3;
        int32x4_t v37 = (int8x16_t *)v90;
        int v38 = v2;
        do
        {
          int8x16_t v40 = v37[-1];
          int8x16_t v39 = *v37;
          _WORD *v38 = *(_OWORD *)v37 ^ 0x8000;
          v40.i64[0] = vextq_s8(v40, v40, 8uLL).u64[0];
          int16x4_t v41 = (int16x4_t)vextq_s8(v39, v39, 8uLL).u64[0];
          int32x4_t v42 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v39.i8), vmull_s16((int16x4_t)15006946, v41)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v40.i8)));
          int32x4_t v43 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v42, (int8x16_t)v42, 8uLL), v42);
          int32x4_t v44 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v39.i8), vmull_s16((int16x4_t)0xD3FCA30912, v41)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v40.i8)));
          int32x4_t v45 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v44, (int8x16_t)v44, 8uLL), v44);
          int32x4_t v46 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v39.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v41)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v40.i8)));
          int32x4_t v47 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v46, (int8x16_t)v46, 8uLL), v46);
          v38[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v43, v5), vrev64q_s32(v43)), 0xFuLL)).u16[0] ^ 0x8000;
          v38[8] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v45, v5), vrev64q_s32(v45)), 0xFuLL)).u16[0] ^ 0x8000;
          v38[12] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v47, v5), vrev64q_s32(v47)), 0xFuLL)).u16[0] ^ 0x8000;
          int32x4_t v37 = (int8x16_t *)((char *)v37 + 6);
          v36 -= 3;
          v38 += 16;
        }
        while (v36 > 5);
        int32x4_t v48 = v2 + 1;
        unsigned int v49 = v6 + 3;
        int32x4_t v50 = (int8x16_t *)v88;
        do
        {
          int8x16_t v52 = v50[-1];
          int8x16_t v51 = *v50;
          *int32x4_t v48 = *(_OWORD *)v50 ^ 0x8000;
          v52.i64[0] = vextq_s8(v52, v52, 8uLL).u64[0];
          int16x4_t v53 = (int16x4_t)vextq_s8(v51, v51, 8uLL).u64[0];
          int32x4_t v54 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v51.i8), vmull_s16((int16x4_t)15006946, v53)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v52.i8)));
          int32x4_t v55 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL), v54);
          int32x4_t v56 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v51.i8), vmull_s16((int16x4_t)0xD3FCA30912, v53)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v52.i8)));
          int32x4_t v57 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v56, (int8x16_t)v56, 8uLL), v56);
          int32x4_t v58 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v51.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v53)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v52.i8)));
          int32x4_t v59 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v58, (int8x16_t)v58, 8uLL), v58);
          v48[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v55, v5), vrev64q_s32(v55)), 0xFuLL)).u16[0] ^ 0x8000;
          v48[8] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v57, v5), vrev64q_s32(v57)), 0xFuLL)).u16[0] ^ 0x8000;
          v48[12] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v59, v5), vrev64q_s32(v59)), 0xFuLL)).u16[0] ^ 0x8000;
          int32x4_t v50 = (int8x16_t *)((char *)v50 + 6);
          v49 -= 3;
          v48 += 16;
        }
        while (v49 > 5);
        int32x4_t v60 = v2 + 2;
        unsigned int v61 = v6 + 3;
        int32x4_t v62 = (int8x16_t *)v86;
        do
        {
          int8x16_t v64 = v62[-1];
          int8x16_t v63 = *v62;
          *int32x4_t v60 = *(_OWORD *)v62 ^ 0x8000;
          v64.i64[0] = vextq_s8(v64, v64, 8uLL).u64[0];
          int16x4_t v65 = (int16x4_t)vextq_s8(v63, v63, 8uLL).u64[0];
          int32x4_t v66 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v63.i8), vmull_s16((int16x4_t)15006946, v65)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v64.i8)));
          int32x4_t v67 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v66, (int8x16_t)v66, 8uLL), v66);
          int32x4_t v68 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v63.i8), vmull_s16((int16x4_t)0xD3FCA30912, v65)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v64.i8)));
          int32x4_t v69 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v68, (int8x16_t)v68, 8uLL), v68);
          int32x4_t v70 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v63.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v65)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v64.i8)));
          int32x4_t v71 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v70, (int8x16_t)v70, 8uLL), v70);
          v60[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v67, v5), vrev64q_s32(v67)), 0xFuLL)).u16[0] ^ 0x8000;
          v60[8] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v69, v5), vrev64q_s32(v69)), 0xFuLL)).u16[0] ^ 0x8000;
          v60[12] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v71, v5), vrev64q_s32(v71)), 0xFuLL)).u16[0] ^ 0x8000;
          int32x4_t v62 = (int8x16_t *)((char *)v62 + 6);
          v61 -= 3;
          v60 += 16;
        }
        while (v61 > 5);
        int32x4_t v72 = v2 + 3;
        int32x4_t v73 = (int8x16_t *)v84;
        do
        {
          int8x16_t v75 = v73[-1];
          int8x16_t v74 = *v73;
          *int32x4_t v72 = *(_OWORD *)v73 ^ 0x8000;
          v75.i64[0] = vextq_s8(v75, v75, 8uLL).u64[0];
          int16x4_t v76 = (int16x4_t)vextq_s8(v74, v74, 8uLL).u64[0];
          int32x4_t v77 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x804EBF672852488, *(int16x4_t *)v74.i8), vmull_s16((int16x4_t)15006946, v76)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xF3870519FE3A0059, *(int16x4_t *)v75.i8)));
          int32x4_t v78 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v77, (int8x16_t)v77, 8uLL), v77);
          int32x4_t v79 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xE9D14FA74FA7E9D1, *(int16x4_t *)v74.i8), vmull_s16((int16x4_t)0xD3FCA30912, v76)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0x912FCA300D30000, *(int16x4_t *)v75.i8)));
          int32x4_t v80 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v79, (int8x16_t)v79, 8uLL), v79);
          int32x4_t v81 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0x24887285EBF60804, *(int16x4_t *)v74.i8), vmull_s16((int16x4_t)0x59FE3A0519F387, v76)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xFCE200E400000000, *(int16x4_t *)v75.i8)));
          int32x4_t v82 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v81, (int8x16_t)v81, 8uLL), v81);
          v72[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v78, v5), vrev64q_s32(v78)), 0xFuLL)).u16[0] ^ 0x8000;
          v72[8] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v80, v5), vrev64q_s32(v80)), 0xFuLL)).u16[0] ^ 0x8000;
          v72[12] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v82, v5), vrev64q_s32(v82)), 0xFuLL)).u16[0] ^ 0x8000;
          int32x4_t v73 = (int8x16_t *)((char *)v73 + 6);
          v35 -= 3;
          v72 += 16;
        }
        while (v35 > 5);
      }
      int8x16_t v3 = (unsigned __int16 *)((char *)v3 + *(void *)(result + 16));
      int v2 = (_WORD *)((char *)v2 + *(void *)(result + 40));
      if (++v1 >= *(_DWORD *)(result + 48)) {
        return result;
      }
    }
    uint64_t v7 = 0;
    unsigned int v8 = (int8x16_t *)v3;
    do
    {
      unsigned int v9 = v6;
      int16x8_t v10 = (int16x8_t)veorq_s8(*v8, v4);
      int16x8_t v11 = (int16x8_t)veorq_s8(v8[1], v4);
      int16x8_t v12 = (int16x8_t)veorq_s8(v8[2], v4);
      int16x8_t v13 = (int16x8_t)veorq_s8(v8[3], v4);
      int16x8_t v14 = vzip1q_s16(v10, v11);
      int16x8_t v15 = vzip2q_s16(v10, v11);
      int16x8_t v16 = vzip1q_s16(v12, v13);
      int16x8_t v17 = vzip2q_s16(v12, v13);
      int64x2_t v18 = (int64x2_t)vzip1q_s16(v14, v15);
      int64x2_t v19 = (int64x2_t)vzip2q_s16(v14, v15);
      int64x2_t v20 = (int64x2_t)vzip1q_s16(v16, v17);
      int64x2_t v21 = (int64x2_t)vzip2q_s16(v16, v17);
      *(int64x2_t *)&v90[v7] = vzip1q_s64(v18, v20);
      *(int64x2_t *)&v88[v7] = vzip2q_s64(v18, v20);
      *(int64x2_t *)&v86[v7] = vzip1q_s64(v19, v21);
      *(int64x2_t *)&v84[v7] = vzip2q_s64(v19, v21);
      v8 += 4;
      v6 -= 8;
      v7 += 16;
    }
    while (v9 > 0xF);
    int16x8_t v22 = (int16x8_t *)&v90[v7];
    int16x8_t v23 = (int16x8_t *)&v88[v7];
    int16x8_t v24 = (int16x8_t *)&v86[v7];
    int v25 = (int16x8_t *)&v84[v7];
    if (v6 < 1) {
      goto LABEL_12;
    }
LABEL_10:
    unsigned int v26 = v6 + 1;
    do
    {
      v22->i16[0] = v8->i16[0] ^ 0x8000;
      int16x8_t v22 = (int16x8_t *)((char *)v22 + 2);
      v23->i16[0] = v8->i16[1] ^ 0x8000;
      int16x8_t v23 = (int16x8_t *)((char *)v23 + 2);
      v24->i16[0] = v8->i16[2] ^ 0x8000;
      int16x8_t v24 = (int16x8_t *)((char *)v24 + 2);
      v25->i16[0] = v8->i16[3] ^ 0x8000;
      int v25 = (int16x8_t *)((char *)v25 + 2);
      --v26;
      unsigned int v8 = (int8x16_t *)((char *)v8 + 8);
    }
    while (v26 > 1);
    goto LABEL_12;
  }
  return result;
}

uint64_t scale_horizontal_2to3_2vuy()
{
  uint64_t result = MEMORY[0x270FA5388]();
  v65[483] = *MEMORY[0x263EF8340];
  if (*(int *)(result + 48) >= 1)
  {
    int v1 = 0;
    int v2 = *(unsigned char **)(result + 24);
    v3.i64[0] = 0xFF000000FFLL;
    v3.i64[1] = 0xFF000000FFLL;
    v4.i64[0] = 0x400000004000;
    v4.i64[1] = 0x400000004000;
    int32x4_t v5 = *(int8x16_t **)result;
    do
    {
      int16x8_t v6 = vdupq_n_s16(v5->u8[0]);
      int16x8_t v64 = vdupq_n_s16(v5->u8[1]);
      int16x8_t v62 = v6;
      uint64_t v7 = v61;
      int v8 = *(_DWORD *)(result + 8);
      int16x8_t v60 = vdupq_n_s16(v5->u8[2]);
      unsigned int v9 = v63;
      int16x8_t v10 = (uint16x8_t *)v65;
      int16x8_t v11 = v5;
      if (v8 >= 16)
      {
        uint64_t v12 = 0;
        unsigned int v13 = v8 + 16;
        int16x8_t v11 = v5;
        int16x8_t v10 = (uint16x8_t *)v65;
        do
        {
          int8x16_t v14 = *v11;
          int8x16_t v15 = v11[1];
          v11 += 2;
          *(int16x8_t *)&v63[v12] = vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(v14, v3)), (int32x4_t)vandq_s8(v15, v3));
          *(int16x8_t *)&v61[v12] = vqmovn_high_s32(vqmovn_s32((int32x4_t)(*(_OWORD *)&vshrq_n_u32((uint32x4_t)v14, 0x10uLL) & __PAIR128__(0xFFFF00FFFFFF00FFLL, 0xFFFF00FFFFFF00FFLL))), (int32x4_t)(*(_OWORD *)&vshrq_n_u32((uint32x4_t)v15, 0x10uLL) & __PAIR128__(0xFFFF00FFFFFF00FFLL, 0xFFFF00FFFFFF00FFLL)));
          *int16x8_t v10 = vshrq_n_u16((uint16x8_t)v14, 8uLL);
          v10[1] = vshrq_n_u16((uint16x8_t)v15, 8uLL);
          v10 += 2;
          v13 -= 16;
          v12 += 16;
        }
        while (v13 > 0x1F);
        v8 -= v12;
        unsigned int v9 = &v63[v12];
        uint64_t v7 = &v61[v12];
      }
      if (v8 >= 2)
      {
        unsigned int v16 = v8 + 2;
        do
        {
          *(_WORD *)unsigned int v9 = v11->u8[0];
          v9 += 2;
          v10->i16[0] = v11->u8[1];
          *(_WORD *)uint64_t v7 = v11->u8[2];
          v7 += 2;
          v10->i16[1] = v11->u8[3];
          int16x8_t v10 = (uint16x8_t *)((char *)v10 + 4);
          v16 -= 2;
          int16x8_t v11 = (int8x16_t *)((char *)v11 + 4);
        }
        while (v16 > 3);
      }
      int16x8_t v17 = &v10[-1].i16[7];
      int16x8_t v18 = vld1q_dup_s16(v17);
      *int16x8_t v10 = (uint16x8_t)v18;
      int64x2_t v19 = (const __int16 *)(v9 - 2);
      int16x8_t v20 = vld1q_dup_s16(v19);
      *(int16x8_t *)unsigned int v9 = v20;
      int64x2_t v21 = (const __int16 *)(v7 - 2);
      int16x8_t v22 = vld1q_dup_s16(v21);
      *(int16x8_t *)uint64_t v7 = v22;
      int v23 = *(_DWORD *)(result + 8);
      if (v23 >= 2)
      {
        int16x8_t v24 = v2 + 1;
        unsigned int v25 = v23 + 2;
        unsigned int v26 = (int8x16_t *)v65;
        do
        {
          int8x16_t v27 = v26[-1];
          int8x16_t v28 = *v26;
          unsigned char *v24 = *v26;
          int32x4_t v29 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v27.i8);
          v27.i64[0] = vextq_s8(v27, v27, 8uLL).u64[0];
          int16x4_t v30 = (int16x4_t)vextq_s8(v28, v28, 8uLL).u64[0];
          int32x4_t v31 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v28.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v30)), vpaddq_s32(v29, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v27.i8)));
          int32x4_t v32 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v31, (int8x16_t)v31, 8uLL), v31);
          v24[2] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v32, v4), vrev64q_s32(v32)), 0xFuLL)).u8[0];
          int32x4_t v33 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v28.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v30)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v27.i8)));
          int32x4_t v34 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v33, (int8x16_t)v33, 8uLL), v33);
          v24[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v34, v4), vrev64q_s32(v34)), 0xFuLL)).u8[0];
          unsigned int v26 = (int8x16_t *)((char *)v26 + 4);
          v24 += 6;
          v25 -= 2;
        }
        while (v25 > 3);
        int v35 = *(_DWORD *)(result + 8);
        if (v35 >= 4)
        {
          unsigned int v36 = (v35 >> 1) + 2;
          int32x4_t v37 = (int8x16_t *)v63;
          int v38 = v2;
          do
          {
            int8x16_t v39 = v37[-1];
            int8x16_t v40 = *v37;
            unsigned char *v38 = *v37;
            int32x4_t v41 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v39.i8);
            v39.i64[0] = vextq_s8(v39, v39, 8uLL).u64[0];
            int16x4_t v42 = (int16x4_t)vextq_s8(v40, v40, 8uLL).u64[0];
            int32x4_t v43 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v40.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v42)), vpaddq_s32(v41, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v39.i8)));
            int32x4_t v44 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v43, (int8x16_t)v43, 8uLL), v43);
            v38[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v44, v4), vrev64q_s32(v44)), 0xFuLL)).u8[0];
            int32x4_t v45 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v40.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v42)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v39.i8)));
            int32x4_t v46 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v45, (int8x16_t)v45, 8uLL), v45);
            v38[8] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v46, v4), vrev64q_s32(v46)), 0xFuLL)).u8[0];
            int32x4_t v37 = (int8x16_t *)((char *)v37 + 4);
            v38 += 12;
            v36 -= 2;
          }
          while (v36 > 3);
          int v47 = *(_DWORD *)(result + 8);
          if (v47 >= 4)
          {
            unsigned int v48 = v47 >> 1;
            unsigned int v49 = v2 + 2;
            unsigned int v50 = v48 + 2;
            int8x16_t v51 = (int8x16_t *)v61;
            do
            {
              int8x16_t v52 = v51[-1];
              int8x16_t v53 = *v51;
              *unsigned int v49 = *v51;
              int32x4_t v54 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v52.i8);
              v52.i64[0] = vextq_s8(v52, v52, 8uLL).u64[0];
              int16x4_t v55 = (int16x4_t)vextq_s8(v53, v53, 8uLL).u64[0];
              int32x4_t v56 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v53.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v55)), vpaddq_s32(v54, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v52.i8)));
              int32x4_t v57 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v56, (int8x16_t)v56, 8uLL), v56);
              v49[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v57, v4), vrev64q_s32(v57)), 0xFuLL)).u8[0];
              int32x4_t v58 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v53.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v55)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v52.i8)));
              int32x4_t v59 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v58, (int8x16_t)v58, 8uLL), v58);
              v49[8] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v59, v4), vrev64q_s32(v59)), 0xFuLL)).u8[0];
              int8x16_t v51 = (int8x16_t *)((char *)v51 + 4);
              v49 += 12;
              v50 -= 2;
            }
            while (v50 > 3);
          }
        }
      }
      int32x4_t v5 = (int8x16_t *)((char *)v5 + *(void *)(result + 16));
      v2 += *(void *)(result + 40);
      ++v1;
    }
    while (v1 < *(_DWORD *)(result + 48));
  }
  return result;
}

uint64_t scale_horizontal_2to3_v216()
{
  uint64_t result = MEMORY[0x270FA5388]();
  v66[483] = *MEMORY[0x263EF8340];
  if (*(int *)(result + 48) >= 1)
  {
    int v1 = 0;
    int v2 = *(_WORD **)(result + 24);
    int8x16_t v3 = *(int8x16_t **)result;
    v4.i64[0] = 0x8000800080008000;
    v4.i64[1] = 0x8000800080008000;
    v5.i64[0] = 0x400000004000;
    v5.i64[1] = 0x400000004000;
    int v6 = *(_DWORD *)(result + 8);
    while (1)
    {
      int16x8_t v65 = vdupq_n_s16(v3->u16[1] ^ 0xFFFF8000);
      int16x8_t v63 = vdupq_n_s16(v3->u16[0] ^ 0xFFFF8000);
      int16x8_t v61 = vdupq_n_s16(v3->u16[2] ^ 0xFFFF8000);
      if (v6 >= 8) {
        break;
      }
      int16x8_t v20 = (int16x8_t *)v62;
      int64x2_t v19 = (int16x8_t *)v64;
      int16x8_t v10 = v66;
      unsigned int v9 = v3;
      if (v6 >= 2) {
        goto LABEL_10;
      }
LABEL_12:
      int16x8_t v22 = (const __int16 *)v10 - 1;
      int16x8_t v23 = vld1q_dup_s16(v22);
      *(int16x8_t *)int16x8_t v10 = v23;
      int16x8_t v24 = &v19[-1].i16[7];
      int16x8_t v25 = vld1q_dup_s16(v24);
      *int64x2_t v19 = v25;
      unsigned int v26 = &v20[-1].i16[7];
      int16x8_t v27 = vld1q_dup_s16(v26);
      *int16x8_t v20 = v27;
      int v6 = *(_DWORD *)(result + 8);
      if (v6 >= 2)
      {
        int8x16_t v28 = v2 + 1;
        unsigned int v29 = v6 + 2;
        int16x4_t v30 = (int8x16_t *)v66;
        do
        {
          int8x16_t v31 = v30[-1];
          int8x16_t v32 = *v30;
          _WORD *v28 = *(_OWORD *)v30 ^ 0x8000;
          int32x4_t v33 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v31.i8);
          v31.i64[0] = vextq_s8(v31, v31, 8uLL).u64[0];
          int16x4_t v34 = (int16x4_t)vextq_s8(v32, v32, 8uLL).u64[0];
          int32x4_t v35 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v32.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v34)), vpaddq_s32(v33, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v31.i8)));
          int32x4_t v36 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v35, (int8x16_t)v35, 8uLL), v35);
          int32x4_t v37 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v32.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v34)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v31.i8)));
          int32x4_t v38 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v37, (int8x16_t)v37, 8uLL), v37);
          v28[2] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v36, v5), vrev64q_s32(v36)), 0xFuLL)).u16[0] ^ 0x8000;
          v28[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v38, v5), vrev64q_s32(v38)), 0xFuLL)).u16[0] ^ 0x8000;
          int16x4_t v30 = (int8x16_t *)((char *)v30 + 4);
          v29 -= 2;
          v28 += 6;
        }
        while (v29 > 3);
        if (v6 >= 4)
        {
          unsigned int v39 = (v6 >> 1) + 2;
          unsigned int v40 = v39;
          int32x4_t v41 = (int8x16_t *)v64;
          int16x4_t v42 = v2;
          do
          {
            int8x16_t v43 = v41[-1];
            int8x16_t v44 = *v41;
            *int16x4_t v42 = *(_OWORD *)v41 ^ 0x8000;
            int32x4_t v45 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v43.i8);
            v43.i64[0] = vextq_s8(v43, v43, 8uLL).u64[0];
            int16x4_t v46 = (int16x4_t)vextq_s8(v44, v44, 8uLL).u64[0];
            int32x4_t v47 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v44.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v46)), vpaddq_s32(v45, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v43.i8)));
            int32x4_t v48 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v47, (int8x16_t)v47, 8uLL), v47);
            int32x4_t v49 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v44.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v46)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v43.i8)));
            int32x4_t v50 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v49, (int8x16_t)v49, 8uLL), v49);
            v42[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v48, v5), vrev64q_s32(v48)), 0xFuLL)).u16[0] ^ 0x8000;
            v42[8] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v50, v5), vrev64q_s32(v50)), 0xFuLL)).u16[0] ^ 0x8000;
            int32x4_t v41 = (int8x16_t *)((char *)v41 + 4);
            v40 -= 2;
            v42 += 12;
          }
          while (v40 > 3);
          int8x16_t v51 = v2 + 2;
          int8x16_t v52 = (int8x16_t *)v62;
          do
          {
            int8x16_t v53 = v52[-1];
            int8x16_t v54 = *v52;
            *int8x16_t v51 = *(_OWORD *)v52 ^ 0x8000;
            int32x4_t v55 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v53.i8);
            v53.i64[0] = vextq_s8(v53, v53, 8uLL).u64[0];
            int16x4_t v56 = (int16x4_t)vextq_s8(v54, v54, 8uLL).u64[0];
            int32x4_t v57 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v54.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v56)), vpaddq_s32(v55, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v53.i8)));
            int32x4_t v58 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v57, (int8x16_t)v57, 8uLL), v57);
            int32x4_t v59 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v54.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v56)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v53.i8)));
            int32x4_t v60 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v59, (int8x16_t)v59, 8uLL), v59);
            v51[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v58, v5), vrev64q_s32(v58)), 0xFuLL)).u16[0] ^ 0x8000;
            v51[8] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v60, v5), vrev64q_s32(v60)), 0xFuLL)).u16[0] ^ 0x8000;
            int8x16_t v52 = (int8x16_t *)((char *)v52 + 4);
            v39 -= 2;
            v51 += 12;
          }
          while (v39 > 3);
        }
      }
      int8x16_t v3 = (int8x16_t *)((char *)v3 + *(void *)(result + 16));
      int v2 = (_WORD *)((char *)v2 + *(void *)(result + 40));
      if (++v1 >= *(_DWORD *)(result + 48)) {
        return result;
      }
    }
    uint64_t v7 = 0;
    unsigned int v8 = v6 + 8;
    unsigned int v9 = v3;
    int16x8_t v10 = v66;
    do
    {
      int8x16_t v11 = *v9;
      int8x16_t v12 = v9[1];
      v9 += 2;
      int16x8_t v13 = (int16x8_t)veorq_s8(v11, v4);
      int16x8_t v14 = (int16x8_t)veorq_s8(v12, v4);
      int16x8_t v15 = vzip1q_s16(v13, v14);
      int16x8_t v16 = vzip2q_s16(v13, v14);
      int16x8_t v17 = vzip1q_s16(v15, v16);
      int16x8_t v18 = vzip2q_s16(v15, v16);
      *(void *)&v64[v7] = v17.i64[0];
      *(void *)&v62[v7] = v18.i64[0];
      *(int16x8_t *)int16x8_t v10 = vzip2q_s16(v17, v18);
      v10 += 2;
      v8 -= 8;
      v7 += 8;
    }
    while (v8 > 0xF);
    v6 -= v7;
    int64x2_t v19 = (int16x8_t *)&v64[v7];
    int16x8_t v20 = (int16x8_t *)&v62[v7];
    if (v6 < 2) {
      goto LABEL_12;
    }
LABEL_10:
    unsigned int v21 = v6 + 2;
    do
    {
      v19->i16[0] = v9->i16[0] ^ 0x8000;
      int64x2_t v19 = (int16x8_t *)((char *)v19 + 2);
      *(_WORD *)int16x8_t v10 = v9->i16[1] ^ 0x8000;
      v20->i16[0] = v9->i16[2] ^ 0x8000;
      int16x8_t v20 = (int16x8_t *)((char *)v20 + 2);
      *((_WORD *)v10 + 1) = v9->i16[3] ^ 0x8000;
      int16x8_t v10 = (void *)((char *)v10 + 4);
      v21 -= 2;
      unsigned int v9 = (int8x16_t *)((char *)v9 + 8);
    }
    while (v21 > 3);
    goto LABEL_12;
  }
  return result;
}

uint64_t scale_horizontal_2to3_4444_8b()
{
  uint64_t result = MEMORY[0x270FA5388]();
  uint64_t v81 = *MEMORY[0x263EF8340];
  if (*(int *)(result + 48) >= 1)
  {
    int v1 = 0;
    int v2 = *(unsigned char **)(result + 24);
    v3.i64[0] = 0xFF000000FFLL;
    v3.i64[1] = 0xFF000000FFLL;
    int8x16_t v4 = *(unsigned __int8 **)result;
    v5.i64[0] = 0x400000004000;
    v5.i64[1] = 0x400000004000;
    while (1)
    {
      int v6 = *(_DWORD *)(result + 8);
      int16x8_t v79 = vdupq_n_s16(*v4);
      int16x8_t v77 = vdupq_n_s16(v4[1]);
      int16x8_t v75 = vdupq_n_s16(v4[2]);
      int16x8_t v73 = vdupq_n_s16(v4[3]);
      if (v6 >= 8) {
        break;
      }
      int16x8_t v15 = (int16x8_t *)v74;
      int16x8_t v14 = (int16x8_t *)v76;
      int16x8_t v13 = (int16x8_t *)v78;
      int8x16_t v12 = (int16x8_t *)v80;
      unsigned int v8 = (int8x16_t *)v4;
      if (v6 >= 1) {
        goto LABEL_10;
      }
LABEL_12:
      int16x8_t v17 = &v12[-1].i16[7];
      int16x8_t v18 = vld1q_dup_s16(v17);
      int64x2_t v19 = &v13[-1].i16[7];
      int16x8_t v20 = vld1q_dup_s16(v19);
      int16x8_t *v12 = v18;
      *int16x8_t v13 = v20;
      unsigned int v21 = &v14[-1].i16[7];
      int16x8_t v22 = vld1q_dup_s16(v21);
      *int16x8_t v14 = v22;
      int16x8_t v23 = &v15[-1].i16[7];
      int16x8_t v24 = vld1q_dup_s16(v23);
      *int16x8_t v15 = v24;
      int v25 = *(_DWORD *)(result + 8);
      if (v25 > 1)
      {
        unsigned int v26 = v25 + 2;
        int16x8_t v27 = (int8x16_t *)v80;
        int8x16_t v28 = v2;
        do
        {
          int8x16_t v29 = v27[-1];
          int8x16_t v30 = *v27;
          unsigned char *v28 = *v27;
          int32x4_t v31 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v29.i8);
          v29.i64[0] = vextq_s8(v29, v29, 8uLL).u64[0];
          int16x4_t v32 = (int16x4_t)vextq_s8(v30, v30, 8uLL).u64[0];
          int32x4_t v33 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v30.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v32)), vpaddq_s32(v31, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v29.i8)));
          int32x4_t v34 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v33, (int8x16_t)v33, 8uLL), v33);
          v28[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v34, v5), vrev64q_s32(v34)), 0xFuLL)).u8[0];
          int32x4_t v35 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v30.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v32)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v29.i8)));
          int32x4_t v36 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v35, (int8x16_t)v35, 8uLL), v35);
          v28[8] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v36, v5), vrev64q_s32(v36)), 0xFuLL)).u8[0];
          int16x8_t v27 = (int8x16_t *)((char *)v27 + 4);
          v28 += 12;
          v26 -= 2;
        }
        while (v26 > 3);
        int v37 = *(_DWORD *)(result + 8);
        if (v37 >= 2)
        {
          int32x4_t v38 = v2 + 1;
          unsigned int v39 = v37 + 2;
          unsigned int v40 = (int8x16_t *)v78;
          do
          {
            int8x16_t v41 = v40[-1];
            int8x16_t v42 = *v40;
            unsigned char *v38 = *v40;
            int32x4_t v43 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v41.i8);
            v41.i64[0] = vextq_s8(v41, v41, 8uLL).u64[0];
            int16x4_t v44 = (int16x4_t)vextq_s8(v42, v42, 8uLL).u64[0];
            int32x4_t v45 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v42.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v44)), vpaddq_s32(v43, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v41.i8)));
            int32x4_t v46 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v45, (int8x16_t)v45, 8uLL), v45);
            v38[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v46, v5), vrev64q_s32(v46)), 0xFuLL)).u8[0];
            int32x4_t v47 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v42.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v44)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v41.i8)));
            int32x4_t v48 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v47, (int8x16_t)v47, 8uLL), v47);
            v38[8] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v48, v5), vrev64q_s32(v48)), 0xFuLL)).u8[0];
            unsigned int v40 = (int8x16_t *)((char *)v40 + 4);
            v38 += 12;
            v39 -= 2;
          }
          while (v39 > 3);
          int v49 = *(_DWORD *)(result + 8);
          if (v49 >= 2)
          {
            int32x4_t v50 = v2 + 2;
            unsigned int v51 = v49 + 2;
            int8x16_t v52 = (int8x16_t *)v76;
            do
            {
              int8x16_t v53 = v52[-1];
              int8x16_t v54 = *v52;
              *int32x4_t v50 = *v52;
              int32x4_t v55 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v53.i8);
              v53.i64[0] = vextq_s8(v53, v53, 8uLL).u64[0];
              int16x4_t v56 = (int16x4_t)vextq_s8(v54, v54, 8uLL).u64[0];
              int32x4_t v57 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v54.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v56)), vpaddq_s32(v55, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v53.i8)));
              int32x4_t v58 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v57, (int8x16_t)v57, 8uLL), v57);
              v50[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v58, v5), vrev64q_s32(v58)), 0xFuLL)).u8[0];
              int32x4_t v59 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v54.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v56)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v53.i8)));
              int32x4_t v60 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v59, (int8x16_t)v59, 8uLL), v59);
              v50[8] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v60, v5), vrev64q_s32(v60)), 0xFuLL)).u8[0];
              int8x16_t v52 = (int8x16_t *)((char *)v52 + 4);
              v50 += 12;
              v51 -= 2;
            }
            while (v51 > 3);
            int v61 = *(_DWORD *)(result + 8);
            if (v61 >= 2)
            {
              int16x8_t v62 = v2 + 3;
              unsigned int v63 = v61 + 2;
              int16x8_t v64 = (int8x16_t *)v74;
              do
              {
                int8x16_t v65 = v64[-1];
                int8x16_t v66 = *v64;
                *int16x8_t v62 = *v64;
                int32x4_t v67 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v65.i8);
                v65.i64[0] = vextq_s8(v65, v65, 8uLL).u64[0];
                int16x4_t v68 = (int16x4_t)vextq_s8(v66, v66, 8uLL).u64[0];
                int32x4_t v69 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v66.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v68)), vpaddq_s32(v67, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v65.i8)));
                int32x4_t v70 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v69, (int8x16_t)v69, 8uLL), v69);
                v62[4] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v70, v5), vrev64q_s32(v70)), 0xFuLL)).u8[0];
                int32x4_t v71 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v66.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v68)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v65.i8)));
                int32x4_t v72 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v71, (int8x16_t)v71, 8uLL), v71);
                v62[8] = vqmovun_s16((int16x8_t)vshrq_n_s32(vaddq_s32(vaddq_s32(v72, v5), vrev64q_s32(v72)), 0xFuLL)).u8[0];
                int16x8_t v64 = (int8x16_t *)((char *)v64 + 4);
                v62 += 12;
                v63 -= 2;
              }
              while (v63 > 3);
            }
          }
        }
      }
      v4 += *(void *)(result + 16);
      v2 += *(void *)(result + 40);
      if (++v1 >= *(_DWORD *)(result + 48)) {
        return result;
      }
    }
    uint64_t v7 = 0;
    unsigned int v8 = (int8x16_t *)v4;
    do
    {
      unsigned int v9 = v6;
      int8x16_t v10 = *v8;
      int8x16_t v11 = v8[1];
      v8 += 2;
      *(int16x8_t *)&v80[v7] = vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8(v10, v3)), (int32x4_t)vandq_s8(v11, v3));
      *(int16x8_t *)&v78[v7] = vqmovn_high_s32(vqmovn_s32((int32x4_t)vandq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)v10, 8uLL), v3)), (int32x4_t)vandq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)v11, 8uLL), v3));
      *(int16x8_t *)&v76[v7] = vqmovn_high_s32(vqmovn_s32((int32x4_t)(*(_OWORD *)&vshrq_n_u32((uint32x4_t)v10, 0x10uLL) & __PAIR128__(0xFFFF00FFFFFF00FFLL, 0xFFFF00FFFFFF00FFLL))), (int32x4_t)(*(_OWORD *)&vshrq_n_u32((uint32x4_t)v11, 0x10uLL) & __PAIR128__(0xFFFF00FFFFFF00FFLL, 0xFFFF00FFFFFF00FFLL)));
      *(int16x8_t *)&v74[v7] = vqmovn_high_s32(vqmovn_s32((int32x4_t)vshrq_n_u32((uint32x4_t)v10, 0x18uLL)), (int32x4_t)vshrq_n_u32((uint32x4_t)v11, 0x18uLL));
      v6 -= 8;
      v7 += 16;
    }
    while (v9 > 0xF);
    int8x16_t v12 = (int16x8_t *)&v80[v7];
    int16x8_t v13 = (int16x8_t *)&v78[v7];
    int16x8_t v14 = (int16x8_t *)&v76[v7];
    int16x8_t v15 = (int16x8_t *)&v74[v7];
    if (v6 < 1) {
      goto LABEL_12;
    }
LABEL_10:
    unsigned int v16 = v6 + 1;
    do
    {
      v12->i16[0] = v8->u8[0];
      int8x16_t v12 = (int16x8_t *)((char *)v12 + 2);
      v13->i16[0] = v8->u8[1];
      int16x8_t v13 = (int16x8_t *)((char *)v13 + 2);
      v14->i16[0] = v8->u8[2];
      int16x8_t v14 = (int16x8_t *)((char *)v14 + 2);
      v15->i16[0] = v8->u8[3];
      int16x8_t v15 = (int16x8_t *)((char *)v15 + 2);
      --v16;
      unsigned int v8 = (int8x16_t *)((char *)v8 + 4);
    }
    while (v16 > 1);
    goto LABEL_12;
  }
  return result;
}

uint64_t scale_horizontal_2to3_4444_16bBE()
{
  uint64_t result = MEMORY[0x270FA5388]();
  uint64_t v87 = *MEMORY[0x263EF8340];
  if (*(int *)(result + 48) >= 1)
  {
    int v1 = 0;
    int v2 = *(_WORD **)(result + 24);
    int8x16_t v3 = *(unsigned __int16 **)result;
    v4.i64[0] = 0x80008000800080;
    v4.i64[1] = 0x80008000800080;
    v5.i64[0] = 0x400000004000;
    v5.i64[1] = 0x400000004000;
    int v6 = *(_DWORD *)(result + 8);
    while (1)
    {
      int16x8_t v85 = vdupq_n_s16(bswap32(*v3 ^ 0x80) >> 16);
      int16x8_t v83 = vdupq_n_s16(bswap32(v3[1] ^ 0x80) >> 16);
      int16x8_t v81 = vdupq_n_s16(bswap32(v3[2] ^ 0x80) >> 16);
      int16x8_t v79 = vdupq_n_s16(bswap32(v3[3] ^ 0x80) >> 16);
      if (v6 >= 8) {
        break;
      }
      int v25 = (int16x8_t *)v80;
      int16x8_t v24 = (int16x8_t *)v82;
      int16x8_t v23 = (int16x8_t *)v84;
      int16x8_t v22 = (int16x8_t *)v86;
      unsigned int v8 = (int8x16_t *)v3;
      if (v6 >= 1) {
        goto LABEL_10;
      }
LABEL_12:
      int16x8_t v27 = &v22[-1].i16[7];
      int16x8_t v28 = vld1q_dup_s16(v27);
      int8x16_t v29 = &v23[-1].i16[7];
      int16x8_t v30 = vld1q_dup_s16(v29);
      int16x8_t *v22 = v28;
      *int16x8_t v23 = v30;
      int32x4_t v31 = &v24[-1].i16[7];
      int16x8_t v32 = vld1q_dup_s16(v31);
      int16x8_t *v24 = v32;
      int32x4_t v33 = &v25[-1].i16[7];
      int16x8_t v34 = vld1q_dup_s16(v33);
      *int v25 = v34;
      int v6 = *(_DWORD *)(result + 8);
      if (v6 > 1)
      {
        unsigned int v35 = v6 + 2;
        unsigned int v36 = v6 + 2;
        int v37 = (int8x16_t *)v86;
        int32x4_t v38 = v2;
        do
        {
          int8x16_t v39 = v37[-1];
          int8x16_t v40 = *v37;
          int32x4_t v41 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v39.i8);
          v39.i64[0] = vextq_s8(v39, v39, 8uLL).u64[0];
          _WORD *v38 = bswap32(v37->u16[0] ^ 0x8000) >> 16;
          int16x4_t v42 = (int16x4_t)vextq_s8(v40, v40, 8uLL).u64[0];
          int32x4_t v43 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v40.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v42)), vpaddq_s32(v41, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v39.i8)));
          int32x4_t v44 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v43, (int8x16_t)v43, 8uLL), v43);
          int32x4_t v45 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v40.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v42)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v39.i8)));
          int32x4_t v46 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v45, (int8x16_t)v45, 8uLL), v45);
          v38[4] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v44, v5), vrev64q_s32(v44)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          v38[8] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v46, v5), vrev64q_s32(v46)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          int v37 = (int8x16_t *)((char *)v37 + 4);
          v36 -= 2;
          v38 += 12;
        }
        while (v36 > 3);
        int32x4_t v47 = v2 + 1;
        unsigned int v48 = v6 + 2;
        int v49 = (int8x16_t *)v84;
        do
        {
          int8x16_t v50 = v49[-1];
          int8x16_t v51 = *v49;
          int32x4_t v52 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v50.i8);
          v50.i64[0] = vextq_s8(v50, v50, 8uLL).u64[0];
          _WORD *v47 = bswap32(v49->u16[0] ^ 0x8000) >> 16;
          int16x4_t v53 = (int16x4_t)vextq_s8(v51, v51, 8uLL).u64[0];
          int32x4_t v54 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v51.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v53)), vpaddq_s32(v52, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v50.i8)));
          int32x4_t v55 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL), v54);
          int32x4_t v56 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v51.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v53)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v50.i8)));
          int32x4_t v57 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v56, (int8x16_t)v56, 8uLL), v56);
          v47[4] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v55, v5), vrev64q_s32(v55)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          v47[8] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v57, v5), vrev64q_s32(v57)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          int v49 = (int8x16_t *)((char *)v49 + 4);
          v48 -= 2;
          v47 += 12;
        }
        while (v48 > 3);
        int32x4_t v58 = v2 + 2;
        unsigned int v59 = v6 + 2;
        int32x4_t v60 = (int8x16_t *)v82;
        do
        {
          int8x16_t v61 = v60[-1];
          int8x16_t v62 = *v60;
          int32x4_t v63 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v61.i8);
          v61.i64[0] = vextq_s8(v61, v61, 8uLL).u64[0];
          *int32x4_t v58 = bswap32(v60->u16[0] ^ 0x8000) >> 16;
          int16x4_t v64 = (int16x4_t)vextq_s8(v62, v62, 8uLL).u64[0];
          int32x4_t v65 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v62.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v64)), vpaddq_s32(v63, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v61.i8)));
          int32x4_t v66 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v65, (int8x16_t)v65, 8uLL), v65);
          int32x4_t v67 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v62.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v64)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v61.i8)));
          int32x4_t v68 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v67, (int8x16_t)v67, 8uLL), v67);
          v58[4] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v66, v5), vrev64q_s32(v66)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          v58[8] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v68, v5), vrev64q_s32(v68)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          int32x4_t v60 = (int8x16_t *)((char *)v60 + 4);
          v59 -= 2;
          v58 += 12;
        }
        while (v59 > 3);
        int32x4_t v69 = v2 + 3;
        int32x4_t v70 = (int8x16_t *)v80;
        do
        {
          int8x16_t v71 = v70[-1];
          int8x16_t v72 = *v70;
          int32x4_t v73 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v71.i8);
          v71.i64[0] = vextq_s8(v71, v71, 8uLL).u64[0];
          *int32x4_t v69 = bswap32(v70->u16[0] ^ 0x8000) >> 16;
          int16x4_t v74 = (int16x4_t)vextq_s8(v72, v72, 8uLL).u64[0];
          int32x4_t v75 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v72.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v74)), vpaddq_s32(v73, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v71.i8)));
          int32x4_t v76 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v75, (int8x16_t)v75, 8uLL), v75);
          int32x4_t v77 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v72.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v74)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v71.i8)));
          int32x4_t v78 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v77, (int8x16_t)v77, 8uLL), v77);
          v69[4] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v76, v5), vrev64q_s32(v76)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          v69[8] = bswap32(vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v78, v5), vrev64q_s32(v78)), 0xFuLL)).u16[0] ^ 0x8000) >> 16;
          int32x4_t v70 = (int8x16_t *)((char *)v70 + 4);
          v35 -= 2;
          v69 += 12;
        }
        while (v35 > 3);
      }
      int8x16_t v3 = (unsigned __int16 *)((char *)v3 + *(void *)(result + 16));
      int v2 = (_WORD *)((char *)v2 + *(void *)(result + 40));
      if (++v1 >= *(_DWORD *)(result + 48)) {
        return result;
      }
    }
    uint64_t v7 = 0;
    unsigned int v8 = (int8x16_t *)v3;
    do
    {
      unsigned int v9 = v6;
      int16x8_t v10 = (int16x8_t)vrev16q_s8(veorq_s8(*v8, v4));
      int16x8_t v11 = (int16x8_t)vrev16q_s8(veorq_s8(v8[1], v4));
      int16x8_t v12 = (int16x8_t)vrev16q_s8(veorq_s8(v8[2], v4));
      int16x8_t v13 = (int16x8_t)vrev16q_s8(veorq_s8(v8[3], v4));
      int16x8_t v14 = vzip1q_s16(v10, v11);
      int16x8_t v15 = vzip2q_s16(v10, v11);
      int16x8_t v16 = vzip1q_s16(v12, v13);
      int16x8_t v17 = vzip2q_s16(v12, v13);
      int64x2_t v18 = (int64x2_t)vzip1q_s16(v14, v15);
      int64x2_t v19 = (int64x2_t)vzip2q_s16(v14, v15);
      int64x2_t v20 = (int64x2_t)vzip1q_s16(v16, v17);
      int64x2_t v21 = (int64x2_t)vzip2q_s16(v16, v17);
      *(int64x2_t *)&v86[v7] = vzip1q_s64(v18, v20);
      *(int64x2_t *)&v84[v7] = vzip2q_s64(v18, v20);
      *(int64x2_t *)&v82[v7] = vzip1q_s64(v19, v21);
      *(int64x2_t *)&v80[v7] = vzip2q_s64(v19, v21);
      v8 += 4;
      v6 -= 8;
      v7 += 16;
    }
    while (v9 > 0xF);
    int16x8_t v22 = (int16x8_t *)&v86[v7];
    int16x8_t v23 = (int16x8_t *)&v84[v7];
    int16x8_t v24 = (int16x8_t *)&v82[v7];
    int v25 = (int16x8_t *)&v80[v7];
    if (v6 < 1) {
      goto LABEL_12;
    }
LABEL_10:
    unsigned int v26 = v6 + 1;
    do
    {
      v22->i16[0] = bswap32(v8->u16[0] ^ 0x80) >> 16;
      int16x8_t v22 = (int16x8_t *)((char *)v22 + 2);
      v23->i16[0] = bswap32(v8->u16[1] ^ 0x80) >> 16;
      int16x8_t v23 = (int16x8_t *)((char *)v23 + 2);
      v24->i16[0] = bswap32(v8->u16[2] ^ 0x80) >> 16;
      int16x8_t v24 = (int16x8_t *)((char *)v24 + 2);
      v25->i16[0] = bswap32(v8->u16[3] ^ 0x80) >> 16;
      int v25 = (int16x8_t *)((char *)v25 + 2);
      --v26;
      unsigned int v8 = (int8x16_t *)((char *)v8 + 8);
    }
    while (v26 > 1);
    goto LABEL_12;
  }
  return result;
}

uint64_t scale_horizontal_2to3_4444_16bLE()
{
  uint64_t result = MEMORY[0x270FA5388]();
  uint64_t v87 = *MEMORY[0x263EF8340];
  if (*(int *)(result + 48) >= 1)
  {
    int v1 = 0;
    int v2 = *(_WORD **)(result + 24);
    int8x16_t v3 = *(unsigned __int16 **)result;
    v4.i64[0] = 0x8000800080008000;
    v4.i64[1] = 0x8000800080008000;
    v5.i64[0] = 0x400000004000;
    v5.i64[1] = 0x400000004000;
    int v6 = *(_DWORD *)(result + 8);
    while (1)
    {
      int16x8_t v85 = vdupq_n_s16(*v3 ^ 0xFFFF8000);
      int16x8_t v83 = vdupq_n_s16(v3[1] ^ 0xFFFF8000);
      int16x8_t v81 = vdupq_n_s16(v3[2] ^ 0xFFFF8000);
      int16x8_t v79 = vdupq_n_s16(v3[3] ^ 0xFFFF8000);
      if (v6 >= 8) {
        break;
      }
      int v25 = (int16x8_t *)v80;
      int16x8_t v24 = (int16x8_t *)v82;
      int16x8_t v23 = (int16x8_t *)v84;
      int16x8_t v22 = (int16x8_t *)v86;
      unsigned int v8 = (int8x16_t *)v3;
      if (v6 >= 1) {
        goto LABEL_10;
      }
LABEL_12:
      int16x8_t v27 = &v22[-1].i16[7];
      int16x8_t v28 = vld1q_dup_s16(v27);
      int8x16_t v29 = &v23[-1].i16[7];
      int16x8_t v30 = vld1q_dup_s16(v29);
      int16x8_t *v22 = v28;
      *int16x8_t v23 = v30;
      int32x4_t v31 = &v24[-1].i16[7];
      int16x8_t v32 = vld1q_dup_s16(v31);
      int16x8_t *v24 = v32;
      int32x4_t v33 = &v25[-1].i16[7];
      int16x8_t v34 = vld1q_dup_s16(v33);
      *int v25 = v34;
      int v6 = *(_DWORD *)(result + 8);
      if (v6 > 1)
      {
        unsigned int v35 = v6 + 2;
        unsigned int v36 = v6 + 2;
        int v37 = (int8x16_t *)v86;
        int32x4_t v38 = v2;
        do
        {
          int8x16_t v39 = v37[-1];
          int8x16_t v40 = *v37;
          _WORD *v38 = *(_OWORD *)v37 ^ 0x8000;
          int32x4_t v41 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v39.i8);
          v39.i64[0] = vextq_s8(v39, v39, 8uLL).u64[0];
          int16x4_t v42 = (int16x4_t)vextq_s8(v40, v40, 8uLL).u64[0];
          int32x4_t v43 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v40.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v42)), vpaddq_s32(v41, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v39.i8)));
          int32x4_t v44 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v43, (int8x16_t)v43, 8uLL), v43);
          int32x4_t v45 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v40.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v42)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v39.i8)));
          int32x4_t v46 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v45, (int8x16_t)v45, 8uLL), v45);
          v38[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v44, v5), vrev64q_s32(v44)), 0xFuLL)).u16[0] ^ 0x8000;
          v38[8] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v46, v5), vrev64q_s32(v46)), 0xFuLL)).u16[0] ^ 0x8000;
          int v37 = (int8x16_t *)((char *)v37 + 4);
          v36 -= 2;
          v38 += 12;
        }
        while (v36 > 3);
        int32x4_t v47 = v2 + 1;
        unsigned int v48 = v6 + 2;
        int v49 = (int8x16_t *)v84;
        do
        {
          int8x16_t v50 = v49[-1];
          int8x16_t v51 = *v49;
          _WORD *v47 = *(_OWORD *)v49 ^ 0x8000;
          int32x4_t v52 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v50.i8);
          v50.i64[0] = vextq_s8(v50, v50, 8uLL).u64[0];
          int16x4_t v53 = (int16x4_t)vextq_s8(v51, v51, 8uLL).u64[0];
          int32x4_t v54 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v51.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v53)), vpaddq_s32(v52, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v50.i8)));
          int32x4_t v55 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v54, (int8x16_t)v54, 8uLL), v54);
          int32x4_t v56 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v51.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v53)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v50.i8)));
          int32x4_t v57 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v56, (int8x16_t)v56, 8uLL), v56);
          v47[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v55, v5), vrev64q_s32(v55)), 0xFuLL)).u16[0] ^ 0x8000;
          v47[8] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v57, v5), vrev64q_s32(v57)), 0xFuLL)).u16[0] ^ 0x8000;
          int v49 = (int8x16_t *)((char *)v49 + 4);
          v48 -= 2;
          v47 += 12;
        }
        while (v48 > 3);
        int32x4_t v58 = v2 + 2;
        unsigned int v59 = v6 + 2;
        int32x4_t v60 = (int8x16_t *)v82;
        do
        {
          int8x16_t v61 = v60[-1];
          int8x16_t v62 = *v60;
          *int32x4_t v58 = *(_OWORD *)v60 ^ 0x8000;
          int32x4_t v63 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v61.i8);
          v61.i64[0] = vextq_s8(v61, v61, 8uLL).u64[0];
          int16x4_t v64 = (int16x4_t)vextq_s8(v62, v62, 8uLL).u64[0];
          int32x4_t v65 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v62.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v64)), vpaddq_s32(v63, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v61.i8)));
          int32x4_t v66 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v65, (int8x16_t)v65, 8uLL), v65);
          int32x4_t v67 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v62.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v64)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v61.i8)));
          int32x4_t v68 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v67, (int8x16_t)v67, 8uLL), v67);
          v58[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v66, v5), vrev64q_s32(v66)), 0xFuLL)).u16[0] ^ 0x8000;
          v58[8] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v68, v5), vrev64q_s32(v68)), 0xFuLL)).u16[0] ^ 0x8000;
          int32x4_t v60 = (int8x16_t *)((char *)v60 + 4);
          v59 -= 2;
          v58 += 12;
        }
        while (v59 > 3);
        int32x4_t v69 = v2 + 3;
        int32x4_t v70 = (int8x16_t *)v80;
        do
        {
          int8x16_t v71 = v70[-1];
          int8x16_t v72 = *v70;
          *int32x4_t v69 = *(_OWORD *)v70 ^ 0x8000;
          int32x4_t v73 = vmull_s16((int16x4_t)0xFF7F000000000000, *(int16x4_t *)v71.i8);
          v71.i64[0] = vextq_s8(v71, v71, 8uLL).u64[0];
          int16x4_t v74 = (int16x4_t)vextq_s8(v72, v72, 8uLL).u64[0];
          int32x4_t v75 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xB12E805696033B1, *(int16x4_t *)v72.i8), vmull_s16((int16x4_t)0xFF2C026EFA90, v74)), vpaddq_s32(v73, vmull_s16((int16x4_t)0xEDE108C2FBC601C6, *(int16x4_t *)v71.i8)));
          int32x4_t v76 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v75, (int8x16_t)v75, 8uLL), v75);
          int32x4_t v77 = vaddq_s32(vpaddq_s32(vmull_s16((int16x4_t)0xEDE133B16960E805, *(int16x4_t *)v72.i8), vmull_s16((int16x4_t)0xFF7F01C6FBC608C2, v74)), vpaddq_s32((int32x4_t)0, vmull_s16((int16x4_t)0xB12FA90026EFF2CLL, *(int16x4_t *)v71.i8)));
          int32x4_t v78 = vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v77, (int8x16_t)v77, 8uLL), v77);
          v69[4] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v76, v5), vrev64q_s32(v76)), 0xFuLL)).u16[0] ^ 0x8000;
          v69[8] = vqmovn_s32(vshrq_n_s32(vaddq_s32(vaddq_s32(v78, v5), vrev64q_s32(v78)), 0xFuLL)).u16[0] ^ 0x8000;
          int32x4_t v70 = (int8x16_t *)((char *)v70 + 4);
          v35 -= 2;
          v69 += 12;
        }
        while (v35 > 3);
      }
      int8x16_t v3 = (unsigned __int16 *)((char *)v3 + *(void *)(result + 16));
      int v2 = (_WORD *)((char *)v2 + *(void *)(result + 40));
      if (++v1 >= *(_DWORD *)(result + 48)) {
        return result;
      }
    }
    uint64_t v7 = 0;
    unsigned int v8 = (int8x16_t *)v3;
    do
    {
      unsigned int v9 = v6;
      int16x8_t v10 = (int16x8_t)veorq_s8(*v8, v4);
      int16x8_t v11 = (int16x8_t)veorq_s8(v8[1], v4);
      int16x8_t v12 = (int16x8_t)veorq_s8(v8[2], v4);
      int16x8_t v13 = (int16x8_t)veorq_s8(v8[3], v4);
      int16x8_t v14 = vzip1q_s16(v10, v11);
      int16x8_t v15 = vzip2q_s16(v10, v11);
      int16x8_t v16 = vzip1q_s16(v12, v13);
      int16x8_t v17 = vzip2q_s16(v12, v13);
      int64x2_t v18 = (int64x2_t)vzip1q_s16(v14, v15);
      int64x2_t v19 = (int64x2_t)vzip2q_s16(v14, v15);
      int64x2_t v20 = (int64x2_t)vzip1q_s16(v16, v17);
      int64x2_t v21 = (int64x2_t)vzip2q_s16(v16, v17);
      *(int64x2_t *)&v86[v7] = vzip1q_s64(v18, v20);
      *(int64x2_t *)&v84[v7] = vzip2q_s64(v18, v20);
      *(int64x2_t *)&v82[v7] = vzip1q_s64(v19, v21);
      *(int64x2_t *)&v80[v7] = vzip2q_s64(v19, v21);
      v8 += 4;
      v6 -= 8;
      v7 += 16;
    }
    while (v9 > 0xF);
    int16x8_t v22 = (int16x8_t *)&v86[v7];
    int16x8_t v23 = (int16x8_t *)&v84[v7];
    int16x8_t v24 = (int16x8_t *)&v82[v7];
    int v25 = (int16x8_t *)&v80[v7];
    if (v6 < 1) {
      goto LABEL_12;
    }
LABEL_10:
    unsigned int v26 = v6 + 1;
    do
    {
      v22->i16[0] = v8->i16[0] ^ 0x8000;
      int16x8_t v22 = (int16x8_t *)((char *)v22 + 2);
      v23->i16[0] = v8->i16[1] ^ 0x8000;
      int16x8_t v23 = (int16x8_t *)((char *)v23 + 2);
      v24->i16[0] = v8->i16[2] ^ 0x8000;
      int16x8_t v24 = (int16x8_t *)((char *)v24 + 2);
      v25->i16[0] = v8->i16[3] ^ 0x8000;
      int v25 = (int16x8_t *)((char *)v25 + 2);
      --v26;
      unsigned int v8 = (int8x16_t *)((char *)v8 + 8);
    }
    while (v26 > 1);
    goto LABEL_12;
  }
  return result;
}

void PRRSliceDecoder::PRRSliceDecoder(PRRSliceDecoder *this)
{
  *((_DWORD *)this + 32) = 0;
}

BOOL SliceHeader::parse(int *a1, Bytestream *a2)
{
  uint64_t v4 = 0;
  int32x4_t v5 = (void *)((char *)a2 + 8);
  int v6 = (void *)((char *)a2 + 8);
  do
  {
    uint64_t v7 = v6[1];
    int v6 = (void *)v6[2];
    v4 += v7;
  }
  while (v6);
  uint64_t v8 = *((void *)a2 + 2);
  if (v8)
  {
    unsigned int v9 = (unsigned __int8 *)*((void *)a2 + 1);
    unsigned __int8 v10 = *v9;
    uint64_t v11 = v8 - 1;
    *((void *)a2 + 1) = v9 + 1;
    *((void *)a2 + 2) = v11;
    *a1 = v10 >> 3;
    if (v11) {
      goto LABEL_5;
    }
LABEL_11:
    unsigned int v25 = Bytestream::uSlow(a2, 1);
    unint64_t v26 = *((void *)a2 + 2);
    a1[1] = v25;
    BOOL v15 = v26 >= 2;
    unint64_t v16 = v26 - 2;
    if (!v15) {
      goto LABEL_12;
    }
LABEL_7:
    int16x8_t v17 = (unsigned __int16 *)*((void *)a2 + 1);
    unsigned int v18 = bswap32(*v17);
    *((void *)a2 + 1) = v17 + 1;
    *((void *)a2 + 2) = v16;
    a1[2] = HIWORD(v18);
    BOOL v15 = v16 >= 2;
    unint64_t v19 = v16 - 2;
    if (!v15) {
      goto LABEL_8;
    }
LABEL_14:
    int8x16_t v29 = (unsigned __int16 *)*((void *)a2 + 1);
    unsigned int v30 = *v29;
    *((void *)a2 + 1) = v29 + 1;
    *((void *)a2 + 2) = v19;
    a1[3] = bswap32(v30) >> 16;
    BOOL v15 = v19 >= 2;
    unint64_t v22 = v19 - 2;
    if (!v15) {
      goto LABEL_9;
    }
LABEL_16:
    int32x4_t v31 = (unsigned __int16 *)*((void *)a2 + 1);
    unsigned int v23 = bswap32(*v31) >> 16;
    *((void *)a2 + 1) = v31 + 1;
    *((void *)a2 + 2) = v22;
    goto LABEL_17;
  }
  unsigned __int8 v24 = Bytestream::uSlow(a2, 1);
  uint64_t v11 = *((void *)a2 + 2);
  *a1 = v24 >> 3;
  if (!v11) {
    goto LABEL_11;
  }
LABEL_5:
  int16x8_t v12 = (unsigned __int8 *)*((void *)a2 + 1);
  unsigned int v13 = *v12;
  unint64_t v14 = v11 - 1;
  *((void *)a2 + 1) = v12 + 1;
  *((void *)a2 + 2) = v14;
  a1[1] = v13;
  BOOL v15 = v14 >= 2;
  unint64_t v16 = v14 - 2;
  if (v15) {
    goto LABEL_7;
  }
LABEL_12:
  unsigned int v27 = Bytestream::uSlow(a2, 2);
  unint64_t v28 = *((void *)a2 + 2);
  a1[2] = v27;
  BOOL v15 = v28 >= 2;
  unint64_t v19 = v28 - 2;
  if (v15) {
    goto LABEL_14;
  }
LABEL_8:
  unsigned int v20 = Bytestream::uSlow(a2, 2);
  unint64_t v21 = *((void *)a2 + 2);
  a1[3] = v20;
  BOOL v15 = v21 >= 2;
  unint64_t v22 = v21 - 2;
  if (v15) {
    goto LABEL_16;
  }
LABEL_9:
  unsigned int v23 = Bytestream::uSlow(a2, 2);
LABEL_17:
  uint64_t v32 = 0;
  a1[4] = v23;
  do
  {
    uint64_t v33 = v5[1];
    int32x4_t v5 = (void *)v5[2];
    v32 += v33;
  }
  while (v5);
  if (*(unsigned char *)a2 || v4 - v32 > (unint64_t)*a1 || (a1[1] - 1) > 0xFE || !a1[2]) {
    return 0;
  }
  if (a1[3]) {
    BOOL v34 = v23 == 0;
  }
  else {
    BOOL v34 = 1;
  }
  return !v34;
}

uint64_t PRRSliceDecoder::decode(int16x8_t *a1, _OWORD *a2)
{
  uint64_t v94 = a1;
  uint64_t v106 = *MEMORY[0x263EF8340];
  long long v2 = a2[1];
  long long v102 = *a2;
  long long v103 = v2;
  int16x8_t v92 = a2;
  long long v3 = a2[1];
  v96[0] = *a2;
  v96[1] = v3;
  uint64_t result = SliceHeader::parse((int *)&v97, (Bytestream *)v96);
  int32x4_t v5 = v92;
  if (!result) {
    return result;
  }
  unint64_t v6 = v99;
  unint64_t v7 = v100;
  unint64_t v8 = v101;
  unsigned int v9 = v99 + v97 + v100 + v101;
  unsigned int v10 = v92[8];
  if (v9 >= v10) {
    return result;
  }
  if ((unint64_t)v103 >= v97)
  {
    *((void *)&v102 + 1) += v97;
    *(void *)&long long v103 = v103 - v97;
  }
  else
  {
    uint64_t result = Bytestream::blockSkipOffsetAssign((uint64_t)&v102, v97);
    int32x4_t v5 = v92;
    unsigned int v10 = v92[8];
  }
  uint64_t v11 = *((void *)v5 + 10);
  int8x16_t v88 = (unsigned int *)*(unsigned int *)(v11 + 4);
  char v12 = v5[9];
  uint64_t v93 = 1 << (char)v88;
  LODWORD(v90) = (1 << (char)v88) << v12;
  MEMORY[0x270FA5388](result);
  unint64_t v14 = (__int16 *)((char *)v82 - v13);
  bzero((char *)v82 - v13, v15);
  uint64_t v91 = v11;
  int v16 = *(_DWORD *)(v11 + 4);
  v82[1] = v82;
  if ((_BYTE)v102)
  {
    int16x8_t v17 = 0;
  }
  else
  {
    if ((unint64_t)v103 < v6) {
      operator new[]();
    }
    int16x8_t v17 = (const unsigned __int8 *)*((void *)&v102 + 1);
    *((void *)&v102 + 1) += v6;
    *(void *)&long long v103 = v103 - v6;
  }
  BitstreamReader::initialize((uint64_t)v95, v17, v6);
  uint64_t v18 = v93;
  char v19 = v16 + 2;
  scanned_coefficients_and_inverse_scanning((uint64_t)v95, v14, v92[9], v90, v16 + 2, *(const unsigned __int8 **)(v91 + 8));
  unsigned int v20 = &v14[v18];
  if (*(_DWORD *)v91)
  {
    if ((unint64_t)v103 >= v7)
    {
      *((void *)&v102 + 1) += v7;
      *(void *)&long long v103 = v103 - v7;
    }
    else
    {
      Bytestream::blockSkipOffsetAssign((uint64_t)&v102, v7);
    }
  }
  else
  {
    if ((_BYTE)v102)
    {
      unint64_t v21 = 0;
    }
    else
    {
      if ((unint64_t)v103 < v7) {
        operator new[]();
      }
      unint64_t v21 = (const unsigned __int8 *)*((void *)&v102 + 1);
      *((void *)&v102 + 1) += v7;
      *(void *)&long long v103 = v103 - v7;
    }
    BitstreamReader::initialize((uint64_t)v95, v21, v7);
    scanned_coefficients_and_inverse_scanning((uint64_t)v95, &v14[v18], v92[9], v90, v19, *(const unsigned __int8 **)(v91 + 8));
  }
  if ((_BYTE)v102)
  {
    unint64_t v22 = 0;
  }
  else
  {
    if ((unint64_t)v103 < v8) {
      operator new[]();
    }
    unint64_t v22 = (const unsigned __int8 *)*((void *)&v102 + 1);
    *((void *)&v102 + 1) += v8;
    *(void *)&long long v103 = v103 - v8;
  }
  BitstreamReader::initialize((uint64_t)v95, v22, v8);
  scanned_coefficients_and_inverse_scanning((uint64_t)v95, &v20[v18], v92[9], v90, v19, *(const unsigned __int8 **)(v91 + 8));
  unint64_t v23 = v10 - v9;
  if ((_BYTE)v102)
  {
    unsigned __int8 v24 = 0;
  }
  else
  {
    if ((unint64_t)v103 < v23) {
      operator new[]();
    }
    unsigned __int8 v24 = (const unsigned __int8 *)*((void *)&v102 + 1);
    *((void *)&v102 + 1) += v23;
    *(void *)&long long v103 = v103 - v23;
  }
  BitstreamReader::initialize((uint64_t)v95, v24, v23);
  unsigned int v25 = v92;
  uint64_t v26 = v91;
  uint64_t v27 = scanned_coefficients_and_inverse_scanning((uint64_t)v95, &v20[v18 + v18], v92[9], v90, v19, *(const unsigned __int8 **)(v91 + 8));
  unsigned int v28 = v98;
  if (v98 != v94[8].i32[0])
  {
    int8x16_t v29 = *(int16x8_t **)(v26 + 32);
    int16x8_t v30 = vdupq_n_s16(v98);
    int32x4_t v31 = v94;
    *uint64_t v94 = vmulq_s16(*v29, v30);
    v31[1] = vmulq_s16(v29[1], v30);
    v31[2] = vmulq_s16(v29[2], v30);
    v31[3] = vmulq_s16(v29[3], v30);
    v31[4] = vmulq_s16(v29[4], v30);
    v31[5] = vmulq_s16(v29[5], v30);
    v31[6] = vmulq_s16(v29[6], v30);
    v31[7] = vmulq_s16(v29[7], v30);
    v31[8].i32[0] = v28;
  }
  uint64_t v32 = MEMORY[0x270FA5388](v27);
  uint64_t v33 = (char *)v82 - ((v18 * 2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  int16x8_t v89 = (unsigned int *)((char *)v82 - v35);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  int32x4_t v38 = (char *)v82 - v37;
  MEMORY[0x270FA5388](v36);
  int8x16_t v40 = (char *)v82 - v39;
  int32x4_t v41 = *(unsigned int **)(v26 + 24);
  int16x4_t v42 = (unsigned int *)*v41;
  long long __dst = 0u;
  long long v105 = 0u;
  int16x8_t v90 = v42;
  if ((int)v42 < 1)
  {
    int v45 = 1 << v25[9];
    if (*(_DWORD *)v26)
    {
      uint64_t v52 = 2 * (2 << (char)v88);
      int16x8_t v90 = v41 + 12;
      int16x8_t v89 = (unsigned int *)(v52 + 4 * v93);
      uint64_t v53 = v52 + 2 * v93;
      do
      {
        int32x4_t v55 = *(void (**)(__int16 *, char *, int16x8_t *))(v26 + 16);
        int32x4_t v54 = (void (**)(__int16 *, char *, int16x8_t *))(v26 + 16);
        v55(v14, v33, v94);
        (*v54)(&v14[(unint64_t)v52 / 2], v38, v94);
        (*v54)((__int16 *)((char *)v14 + v53), v40, v94);
        uint64_t result = (*((uint64_t (**)(long long *, char *, void, char *, char *, void, void, unsigned int *, unsigned int *))v41
                  + 3))(&__dst, v33, 0, v38, v40, *((void *)v41 + 2), v92[10], v41 + 8, v90);
        unint64_t v14 = (__int16 *)((char *)v89 + (void)v14);
        --v45;
        uint64_t v26 = v91;
      }
      while (v45);
      return result;
    }
    unint64_t v44 = *((void *)v41 + 1);
    goto LABEL_55;
  }
  int32x4_t v43 = v42;
  memcpy(&__dst, v25 + 12, 8 * v42);
  unint64_t v44 = *((void *)v41 + 1);
  int v45 = 1 << v25[9];
  if (!*(_DWORD *)v26)
  {
    LODWORD(v42) = v43;
LABEL_55:
    int v68 = 0;
    int8x16_t v88 = v41 + 8;
    uint64_t v87 = (uint64_t)(v41 + 12);
    v85.i64[0] = v42 & 0xFFFFFFFC;
    float32x2x2_t v84 = (int64x2_t *)&v105;
    int64x2_t v86 = vdupq_n_s64(v44);
    while (1)
    {
      BOOL v69 = (int)v42 > 0;
      int8x16_t v71 = *(void (**)(__int16 *, char *, int16x8_t *))(v26 + 16);
      int32x4_t v70 = (void (**)(__int16 *, unsigned int *, int16x8_t *))(v26 + 16);
      v71(v14, v33, v94);
      int8x16_t v72 = &v14[v93];
      (*v70)(v72, v89, v94);
      int32x4_t v73 = &v72[v93];
      (*v70)(v73, (unsigned int *)v38, v94);
      int16x4_t v74 = &v73[v93];
      (*v70)(v74, (unsigned int *)v40, v94);
      uint64_t result = (*((uint64_t (**)(long long *, char *, unsigned int *, char *, char *, void, void, unsigned int *, uint64_t))v41
                + 3))(&__dst, v33, v89, v38, v40, *((void *)v41 + 2), v92[10], v88, v87);
      uint64_t v26 = v91;
      int16x4_t v42 = v90;
      int64x2_t v75 = v86;
      if (v69)
      {
        if (v90 >= 4)
        {
          uint64_t v77 = v85.i64[0];
          int32x4_t v78 = v84;
          do
          {
            int64x2_t v79 = vaddq_s64(*v78, v75);
            v78[-1] = vaddq_s64(v78[-1], v75);
            *int32x4_t v78 = v79;
            v78 += 2;
            v77 -= 4;
          }
          while (v77);
          uint64_t v76 = v85.i64[0];
          if ((unsigned int *)v85.i64[0] == v42) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v76 = 0;
        }
        int32x4_t v80 = (void *)&__dst + v76;
        uint64_t v81 = (uint64_t)v42 - v76;
        do
        {
          *v80++ += v44;
          --v81;
        }
        while (v81);
      }
LABEL_56:
      unint64_t v14 = &v74[v93];
      if (++v68 == v45) {
        return result;
      }
    }
  }
  uint64_t v46 = (2 << (char)v88);
  int16x8_t v89 = v41 + 8;
  int8x16_t v88 = v41 + 12;
  int32x4_t v47 = v43;
  if (v43 >= 4)
  {
    uint64_t v87 = v46;
    int v56 = 0;
    int32x4_t v57 = (unsigned int *)(v43 & 0xFFFFFFFC);
    v86.i64[0] = (uint64_t)&v105;
    float32x2x2_t v84 = (int64x2_t *)((char *)&__dst + ((8 * (void)v47) & 0x7FFFFFFE0));
    uint64_t v83 = (uint64_t)v47 - (v47 & 0xFFFFFFFC);
    int64x2_t v85 = vdupq_n_s64(v44);
    do
    {
      unsigned int v59 = *(void (**)(__int16 *, char *, int16x8_t *))(v26 + 16);
      int32x4_t v58 = (void (**)(__int16 *, char *, int16x8_t *))(v26 + 16);
      v59(v14, v33, v94);
      int32x4_t v60 = &v14[v87];
      (*v58)(v60, v38, v94);
      int8x16_t v61 = &v60[v93];
      (*v58)(v61, v40, v94);
      uint64_t result = (*((uint64_t (**)(long long *, char *, void, char *, char *, void, void, unsigned int *, unsigned int *))v41
                + 3))(&__dst, v33, 0, v38, v40, *((void *)v41 + 2), v92[10], v89, v88);
      int8x16_t v62 = v57;
      int32x4_t v63 = (int64x2_t *)v86.i64[0];
      int64x2_t v64 = v85;
      do
      {
        int64x2_t v65 = vaddq_s64(*v63, v64);
        v63[-1] = vaddq_s64(v63[-1], v64);
        *int32x4_t v63 = v65;
        v63 += 2;
        --v62;
      }
      while (v62);
      uint64_t v26 = v91;
      if (v90 != v57)
      {
        uint64_t v66 = v83;
        int32x4_t v67 = (uint64_t *)v84;
        do
        {
          *v67++ += v44;
          --v66;
        }
        while (v66);
      }
      unint64_t v14 = &v61[v93];
      ++v56;
    }
    while (v56 != v45);
  }
  else
  {
    uint64_t v48 = v46;
    uint64_t v87 = 2 * v46 + 2 * v93;
    uint64_t v93 = 2 * v46 + 4 * v93;
    do
    {
      BOOL v49 = v47 == 1;
      int8x16_t v51 = *(void (**)(__int16 *, char *, int16x8_t *))(v26 + 16);
      int8x16_t v50 = (void (**)(__int16 *, char *, int16x8_t *))(v26 + 16);
      v51(v14, v33, v94);
      (*v50)(&v14[v48], v38, v94);
      (*v50)((__int16 *)((char *)v14 + v87), v40, v94);
      uint64_t result = (*((uint64_t (**)(long long *, char *, void, char *, char *, void, void, unsigned int *, unsigned int *))v41
                + 3))(&__dst, v33, 0, v38, v40, *((void *)v41 + 2), v92[10], v89, v88);
      *(void *)&long long __dst = __dst + v44;
      LODWORD(v47) = v90;
      if (!v49)
      {
        *((void *)&__dst + 1) += v44;
        if (v90 != 2) {
          *(void *)&long long v105 = v105 + v44;
        }
      }
      unint64_t v14 = (__int16 *)((char *)v14 + v93);
      --v45;
      uint64_t v26 = v91;
    }
    while (v45);
  }
  return result;
}

uint64_t scanned_coefficients_and_inverse_scanning(uint64_t result, __int16 *a2, int a3, unsigned int a4, char a5, const unsigned __int8 *a6)
{
  uint64_t v8 = *(void *)result;
  uint64_t v9 = HIDWORD(*(void *)result);
  if (!v9) {
    return result;
  }
  unsigned int v10 = unk_2655BC1A2;
  unsigned int v11 = word_2655BC1A4[13];
  unsigned int v346 = word_2655BC1C0[15];
  unsigned int v12 = word_2655BC1E0[28];
  uint64_t v13 = *(unsigned int **)(result + 16);
  unint64_t v14 = *(void *)(result + 24);
  int v15 = *(_DWORD *)(result + 8);
  unsigned int v16 = __clz(v9);
  int v17 = (v9 >> -(char)(2 * v16 + 9)) + 10240;
  if (v16 <= 2) {
    int v18 = v16 + 13;
  }
  else {
    int v18 = 2 * v16 + 9;
  }
  if (v16 <= 2) {
    int v17 = (v9 << (v16 + 1) >> 20) + (v16 << 12);
  }
  unsigned int v19 = (v9 & 0x7FFFFFFF) >> 19;
  if (v8 >= 0) {
    unsigned int v19 = v17;
  }
  else {
    int v18 = 13;
  }
  unsigned int v20 = (-(v19 & 1) ^ (((v19 & 1) + v19) >> 1)) + (v19 & 1);
  uint64_t v21 = v8 << v18;
  int v22 = v15 - v18;
  if (v15 - v18 < 0)
  {
    char v86 = v18 - v15;
    if ((unint64_t)v13 < v14)
    {
      unsigned int v87 = *v13++;
      unsigned int v88 = bswap32(v87);
      goto LABEL_71;
    }
    int16x8_t v89 = *(unsigned __int8 **)(result + 32);
    if (v13 >= (unsigned int *)v89)
    {
      unsigned int v88 = 0;
      goto LABEL_71;
    }
    unint64_t v90 = v89 - (unsigned __int8 *)v13;
    if ((unint64_t)(v89 - (unsigned __int8 *)v13) < 8)
    {
      unsigned int v88 = 0;
      unsigned int v91 = 32;
      int16x8_t v92 = *(unsigned __int8 **)(result + 16);
      goto LABEL_68;
    }
    if (v90 >= 0x20)
    {
      unint64_t v93 = v90 & 0xFFFFFFFFFFFFFFE0;
      unsigned int v91 = 32 - 8 * (v90 & 0xFFFFFFE0);
      int32x4_t v94 = (int32x4_t)xmmword_262CDE530;
      int32x4_t v95 = (int32x4_t)xmmword_262CDE540;
      int32x4_t v96 = (int32x4_t)xmmword_262CDE550;
      int32x4_t v97 = (int32x4_t)xmmword_262CDE560;
      unsigned int v98 = (int8x16_t *)(v13 + 4);
      int8x16_t v99 = 0uLL;
      v100.i64[0] = 0x700000007;
      v100.i64[1] = 0x700000007;
      v101.i64[0] = 0x8700000087;
      v101.i64[1] = 0x8700000087;
      v6.i64[0] = 0xFFFFFF00FFFFFF00;
      v6.i64[1] = 0xFFFFFF00FFFFFF00;
      int8x16_t v102 = 0uLL;
      unint64_t v103 = v90 & 0xFFFFFFFFFFFFFFE0;
      int8x16_t v104 = 0uLL;
      int8x16_t v105 = 0uLL;
      int8x16_t v106 = 0uLL;
      int8x16_t v7 = 0uLL;
      int8x16_t v107 = 0uLL;
      int8x16_t v108 = 0uLL;
      do
      {
        int8x16_t v109 = v98[-1];
        int8x16_t v110 = *v98;
        v98 += 2;
        int8x16_t v102 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v109, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v96, v100)), v102);
        int8x16_t v99 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v109, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v97, v100)), v99);
        int8x16_t v104 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v109, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v95, v100)), v104);
        int8x16_t v105 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v109, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v94, v100)), v105);
        int8x16_t v7 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v110, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v96, v101)), v7);
        int8x16_t v106 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v110, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v97, v101)), v106);
        int8x16_t v107 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v110, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v95, v101)), v107);
        int8x16_t v108 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v110, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v94, v101)), v108);
        int32x4_t v97 = vaddq_s32(v97, v6);
        int32x4_t v96 = vaddq_s32(v96, v6);
        int32x4_t v95 = vaddq_s32(v95, v6);
        int32x4_t v94 = vaddq_s32(v94, v6);
        v103 -= 32;
      }
      while (v103);
      int8x16_t v111 = vorrq_s8(vorrq_s8(vorrq_s8(v106, v99), vorrq_s8(v107, v104)), vorrq_s8(vorrq_s8(v7, v102), vorrq_s8(v108, v105)));
      *(int8x8_t *)v111.i8 = vorr_s8(*(int8x8_t *)v111.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v111, v111, 8uLL));
      unsigned int v88 = v111.i32[0] | v111.i32[1];
      if (v90 == v93) {
        goto LABEL_70;
      }
      if ((v90 & 0x18) == 0)
      {
        int16x8_t v92 = (unsigned __int8 *)v13 + v93;
LABEL_68:
        unsigned int v124 = v91 - 8;
        do
        {
          int v125 = *v92++;
          v88 |= v125 << v124;
          v124 -= 8;
        }
        while (v92 != v89);
LABEL_70:
        uint64_t v13 = *(unsigned int **)(result + 32);
LABEL_71:
        v21 |= (unint64_t)v88 << v86;
        v22 += 32;
        *a2 = v20;
        if (a3) {
          goto LABEL_12;
        }
        goto LABEL_72;
      }
    }
    else
    {
      unsigned int v88 = 0;
      unint64_t v93 = 0;
      unsigned int v91 = 32;
    }
    int16x8_t v92 = (unsigned __int8 *)v13 + (v90 & 0xFFFFFFFFFFFFFFF8);
    int32x4_t v112 = vdupq_n_s32(v91);
    unsigned int v91 = 32 - 8 * (v90 & 0xFFFFFFF8);
    int32x4_t v113 = vaddq_s32(v112, (int32x4_t)xmmword_262CDE540);
    int32x4_t v114 = vaddq_s32(v112, (int32x4_t)xmmword_262CDE550);
    int8x16_t v115 = 0uLL;
    int8x16_t v116 = (int8x16_t)v88;
    int v117 = (uint64_t *)((char *)v13 + v93);
    unint64_t v118 = v93 - (v90 & 0xFFFFFFFFFFFFFFF8);
    v119.i64[0] = 0x700000007;
    v119.i64[1] = 0x700000007;
    v120.i64[0] = 0x3F0000003FLL;
    v120.i64[1] = 0x3F0000003FLL;
    do
    {
      uint64_t v121 = *v117++;
      v6.i64[0] = v121;
      uint32x4_t v122 = (uint32x4_t)vqtbl1q_s8((int8x16_t)v6, (int8x16_t)xmmword_262CDE570);
      int32x4_t v6 = (int32x4_t)vqtbl1q_s8((int8x16_t)v6, (int8x16_t)xmmword_262CDE580);
      int8x16_t v115 = vorrq_s8((int8x16_t)vshlq_u32(v122, (uint32x4_t)vaddq_s32(v113, v119)), v115);
      int8x16_t v116 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v6, (uint32x4_t)vaddq_s32(v114, v119)), v116);
      int32x4_t v114 = vaddq_s32(v114, v120);
      int32x4_t v113 = vaddq_s32(v113, v120);
      v118 += 8;
    }
    while (v118);
    int8x16_t v123 = vorrq_s8(v116, v115);
    *(int8x8_t *)v123.i8 = vorr_s8(*(int8x8_t *)v123.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v123, v123, 8uLL));
    unsigned int v88 = v123.i32[0] | v123.i32[1];
    if (v90 == (v90 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_70;
    }
    goto LABEL_68;
  }
  *a2 = v20;
  if (a3)
  {
LABEL_12:
    unsigned int v23 = 0;
    unsigned int v24 = 1;
    int32x4_t v25 = (int32x4_t)xmmword_262CDE540;
    int32x4_t v26 = (int32x4_t)xmmword_262CDE550;
    v27.i64[0] = 0x700000007;
    v27.i64[1] = 0x700000007;
    v28.i64[0] = 0x3F0000003FLL;
    v28.i64[1] = 0x3F0000003FLL;
    int32x4_t v29 = (int32x4_t)xmmword_262CDE530;
    long long v30 = xmmword_262CDE560;
    v31.i64[0] = 0x8700000087;
    v31.i64[1] = 0x8700000087;
    v32.i64[0] = 0xFFFFFF00FFFFFF00;
    v32.i64[1] = 0xFFFFFF00FFFFFF00;
    uint64_t v33 = a2;
    while (1)
    {
      if (!HIDWORD(v21)) {
        return result;
      }
      unsigned int v38 = v10 >> 8;
      int v39 = v10 & 0xF;
      unsigned int v40 = __clz(HIDWORD(v21));
      int v41 = v10 >> 4;
      int v42 = v41 - (v10 >> 8) + 2 * v40;
      int v43 = ((v38 + 1) << v39) + (-1 << v41) + (HIDWORD(v21) >> -(char)(v41 - v38 + 2 * v40));
      BOOL v44 = v40 > v38;
      int v45 = v40 <= v38 ? v40 + 1 + v39 : v42;
      unsigned int v46 = v44 ? v43 : (HIDWORD(v21) << (v40 + 1) >> 1 >> (v39 ^ 0x1F)) + (v40 << v39);
      unsigned int v47 = (HIDWORD(v21) & 0x7FFFFFFFu) >> (v39 ^ 0x1F);
      if (v21 >= 0) {
        unsigned int v47 = v46;
      }
      else {
        int v45 = v39 + 1;
      }
      int v48 = v47 & 1;
      unsigned int v49 = (v48 + v47) >> 1;
      unsigned int v50 = v49 >= 0xC ? 12 : ((v47 & 1) + v47) >> 1;
      v21 <<= v45;
      v22 -= v45;
      if (v22 < 0) {
        break;
      }
LABEL_15:
      v33 += (1 << a5);
      int v36 = v49 ^ -(v48 ^ v23);
      unsigned int v10 = word_2655BC1A4[v50];
      unsigned int v37 = v36 + (v48 ^ v23);
      unsigned int v23 = v37 >> 31;
      v20 += v37;
      __int16 *v33 = v20;
      if (++v24 >> a3) {
        goto LABEL_73;
      }
    }
    if ((unint64_t)v13 < v14)
    {
      unsigned int v34 = *v13++;
      unsigned int v35 = bswap32(v34);
    }
    else
    {
      int8x16_t v51 = *(unsigned __int8 **)(result + 32);
      if (v13 >= (unsigned int *)v51)
      {
        unsigned int v35 = 0;
      }
      else
      {
        unint64_t v52 = v51 - (unsigned __int8 *)v13;
        if ((unint64_t)(v51 - (unsigned __int8 *)v13) < 8)
        {
          unsigned int v35 = 0;
          unsigned int v53 = 32;
          int32x4_t v54 = v13;
          goto LABEL_48;
        }
        if (v52 < 0x20)
        {
          unsigned int v35 = 0;
          unint64_t v55 = 0;
          unsigned int v53 = 32;
          goto LABEL_43;
        }
        unint64_t v55 = v52 & 0xFFFFFFFFFFFFFFE0;
        int v56 = (int8x16_t *)(v13 + 4);
        int8x16_t v57 = 0uLL;
        int8x16_t v58 = 0uLL;
        unint64_t v59 = v52 & 0xFFFFFFFFFFFFFFE0;
        long long v60 = v30;
        int32x4_t v61 = (int32x4_t)v30;
        int32x4_t v342 = v26;
        int32x4_t v62 = v25;
        int32x4_t v63 = v29;
        int8x16_t v64 = 0uLL;
        int8x16_t v7 = 0uLL;
        int8x16_t v65 = 0uLL;
        unsigned int v53 = 32 - 8 * (v52 & 0xFFFFFFE0);
        int8x16_t v66 = 0uLL;
        int8x16_t v67 = 0uLL;
        int8x16_t v68 = 0uLL;
        do
        {
          int8x16_t v69 = v56[-1];
          int8x16_t v70 = *v56;
          v56 += 2;
          int8x16_t v58 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v69, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v26, v27)), v58);
          int8x16_t v57 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v69, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v61, v27)), v57);
          int8x16_t v64 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v69, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v25, v27)), v64);
          int8x16_t v7 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v69, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v29, v27)), v7);
          int8x16_t v66 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v70, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v26, v31)), v66);
          int8x16_t v65 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v70, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v61, v31)), v65);
          int8x16_t v67 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v70, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v25, v31)), v67);
          int8x16_t v68 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v70, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v29, v31)), v68);
          int32x4_t v61 = vaddq_s32(v61, v32);
          int32x4_t v26 = vaddq_s32(v26, v32);
          int32x4_t v25 = vaddq_s32(v25, v32);
          int32x4_t v29 = vaddq_s32(v29, v32);
          v59 -= 32;
        }
        while (v59);
        int8x16_t v71 = vorrq_s8(vorrq_s8(vorrq_s8(v65, v57), vorrq_s8(v67, v64)), vorrq_s8(vorrq_s8(v66, v58), vorrq_s8(v68, v7)));
        int8x8_t v72 = vorr_s8(*(int8x8_t *)v71.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v71, v71, 8uLL));
        unsigned int v35 = v72.i32[0] | v72.i32[1];
        if (v52 != v55)
        {
          int32x4_t v25 = v62;
          if ((v52 & 0x18) == 0)
          {
            int32x4_t v54 = (unsigned int *)((char *)v13 + v55);
            int32x4_t v29 = v63;
            long long v30 = v60;
            int32x4_t v26 = v342;
LABEL_48:
            unsigned int v84 = v53 - 8;
            do
            {
              int v85 = *(unsigned __int8 *)v54;
              int32x4_t v54 = (unsigned int *)((char *)v54 + 1);
              v35 |= v85 << v84;
              v84 -= 8;
            }
            while (v54 != (unsigned int *)v51);
LABEL_50:
            uint64_t v13 = *(unsigned int **)(result + 32);
            goto LABEL_14;
          }
          int32x4_t v29 = v63;
          long long v30 = v60;
          int32x4_t v26 = v342;
LABEL_43:
          int32x4_t v54 = (unsigned int *)((char *)v13 + (v52 & 0xFFFFFFFFFFFFFFF8));
          int32x4_t v73 = vdupq_n_s32(v53);
          unsigned int v53 = 32 - 8 * (v52 & 0xFFFFFFF8);
          int32x4_t v74 = vaddq_s32(v73, v25);
          int32x4_t v75 = vaddq_s32(v73, v26);
          int8x16_t v76 = 0uLL;
          int8x16_t v77 = (int8x16_t)v35;
          int32x4_t v78 = (uint64_t *)((char *)v13 + v55);
          unint64_t v79 = v55 - (v52 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            uint64_t v80 = *v78++;
            v7.i64[0] = v80;
            uint32x4_t v81 = (uint32x4_t)vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE570);
            int8x16_t v7 = vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE580);
            int8x16_t v76 = vorrq_s8((int8x16_t)vshlq_u32(v81, (uint32x4_t)vaddq_s32(v74, v27)), v76);
            int8x16_t v77 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v7, (uint32x4_t)vaddq_s32(v75, v27)), v77);
            int32x4_t v75 = vaddq_s32(v75, v28);
            int32x4_t v74 = vaddq_s32(v74, v28);
            v79 += 8;
          }
          while (v79);
          int8x16_t v82 = vorrq_s8(v77, v76);
          int8x8_t v83 = vorr_s8(*(int8x8_t *)v82.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v82, v82, 8uLL));
          unsigned int v35 = v83.i32[0] | v83.i32[1];
          if (v52 == (v52 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_50;
          }
          goto LABEL_48;
        }
        uint64_t v13 = *(unsigned int **)(result + 32);
        int32x4_t v29 = v63;
        long long v30 = v60;
        int32x4_t v25 = v62;
        int32x4_t v26 = v342;
      }
    }
LABEL_14:
    v21 |= (unint64_t)v35 << -(char)v22;
    v22 += 32;
    goto LABEL_15;
  }
LABEL_72:
  unsigned int v24 = 1;
LABEL_73:
  if (v24 < a4)
  {
    int v126 = ~(-1 << a3);
    int32x4_t v127 = (int32x4_t)xmmword_262CDE540;
    int32x4_t v128 = (int32x4_t)xmmword_262CDE550;
    v129.i64[0] = 0x700000007;
    v129.i64[1] = 0x700000007;
    v130.i64[0] = 0x3F0000003FLL;
    v130.i64[1] = 0x3F0000003FLL;
    int32x4_t v131 = (int32x4_t)xmmword_262CDE530;
    long long v132 = xmmword_262CDE560;
    v133.i64[0] = 0x8700000087;
    v133.i64[1] = 0x8700000087;
    v134.i64[0] = 0xFFFFFF00FFFFFF00;
    v134.i64[1] = 0xFFFFFF00FFFFFF00;
    do
    {
      if (!HIDWORD(v21)) {
        return result;
      }
      int v135 = v11 & 0xF;
      if (v21 < 0)
      {
        unsigned int v142 = (HIDWORD(v21) & 0x7FFFFFFFu) >> (v135 ^ 0x1F);
        int v145 = v135 + 1;
        uint64_t v143 = v21 << v145;
        int v144 = v22 - v145;
        if (v22 - v145 < 0) {
          goto LABEL_87;
        }
      }
      else
      {
        unsigned int v136 = __clz(HIDWORD(v21));
        int v137 = v11 >> 4;
        int v138 = v137 - (v11 >> 8) + 2 * v136;
        int v139 = (((v11 >> 8) + 1) << v135) + (-1 << v137) + (HIDWORD(v21) >> -(char)(v137 - BYTE1(v11) + 2 * v136));
        int v140 = (HIDWORD(v21) << (v136 + 1) >> 1 >> (v135 ^ 0x1F)) + (v136 << v135);
        if (v136 <= v11 >> 8) {
          int v141 = v136 + 1 + v135;
        }
        else {
          int v141 = v138;
        }
        if (v136 <= v11 >> 8) {
          unsigned int v142 = v140;
        }
        else {
          unsigned int v142 = v139;
        }
        uint64_t v143 = v21 << v141;
        int v144 = v22 - v141;
        if (v22 - v141 < 0)
        {
LABEL_87:
          if ((unint64_t)v13 < v14)
          {
            unsigned int v146 = *v13++;
            unsigned int v147 = bswap32(v146);
            goto LABEL_109;
          }
          BOOL v148 = *(unsigned __int8 **)(result + 32);
          if (v13 >= (unsigned int *)v148)
          {
            unsigned int v147 = 0;
          }
          else
          {
            unint64_t v149 = v148 - (unsigned __int8 *)v13;
            if ((unint64_t)(v148 - (unsigned __int8 *)v13) < 8)
            {
              unsigned int v147 = 0;
              unsigned int v150 = 32;
              uint64_t v151 = v13;
              goto LABEL_106;
            }
            if (v149 < 0x20)
            {
              unsigned int v147 = 0;
              unint64_t v152 = 0;
              unsigned int v150 = 32;
              goto LABEL_101;
            }
            unint64_t v152 = v149 & 0xFFFFFFFFFFFFFFE0;
            BOOL v153 = (int8x16_t *)(v13 + 4);
            int8x16_t v154 = 0uLL;
            int8x16_t v155 = 0uLL;
            unint64_t v156 = v149 & 0xFFFFFFFFFFFFFFE0;
            long long v157 = v132;
            int32x4_t v158 = (int32x4_t)v132;
            int32x4_t v343 = v128;
            int32x4_t v159 = v128;
            int32x4_t v160 = v127;
            int32x4_t v161 = v131;
            int8x16_t v162 = 0uLL;
            int8x16_t v7 = 0uLL;
            int8x16_t v163 = 0uLL;
            unsigned int v150 = 32 - 8 * (v149 & 0xFFFFFFE0);
            int8x16_t v164 = 0uLL;
            int8x16_t v165 = 0uLL;
            int8x16_t v166 = 0uLL;
            do
            {
              int8x16_t v167 = v153[-1];
              int8x16_t v168 = *v153;
              v153 += 2;
              int8x16_t v155 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v167, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v159, v129)), v155);
              int8x16_t v154 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v167, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v158, v129)), v154);
              int8x16_t v162 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v167, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v127, v129)), v162);
              int8x16_t v7 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v167, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v131, v129)), v7);
              int8x16_t v164 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v168, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v159, v133)), v164);
              int8x16_t v163 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v168, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v158, v133)), v163);
              int8x16_t v165 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v168, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v127, v133)), v165);
              int8x16_t v166 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v168, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v131, v133)), v166);
              int32x4_t v158 = vaddq_s32(v158, v134);
              int32x4_t v159 = vaddq_s32(v159, v134);
              int32x4_t v127 = vaddq_s32(v127, v134);
              int32x4_t v131 = vaddq_s32(v131, v134);
              v156 -= 32;
            }
            while (v156);
            int8x16_t v169 = vorrq_s8(vorrq_s8(vorrq_s8(v163, v154), vorrq_s8(v165, v162)), vorrq_s8(vorrq_s8(v164, v155), vorrq_s8(v166, v7)));
            int8x8_t v170 = vorr_s8(*(int8x8_t *)v169.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v169, v169, 8uLL));
            unsigned int v147 = v170.i32[0] | v170.i32[1];
            if (v149 == v152)
            {
              uint64_t v13 = *(unsigned int **)(result + 32);
              int32x4_t v131 = v161;
              long long v132 = v157;
              int32x4_t v127 = v160;
              int32x4_t v128 = v343;
            }
            else
            {
              if ((v149 & 0x18) == 0)
              {
                uint64_t v151 = (unsigned int *)((char *)v13 + v152);
                int32x4_t v131 = v161;
                long long v132 = v157;
                int32x4_t v127 = v160;
                int32x4_t v128 = v343;
                goto LABEL_106;
              }
              int32x4_t v131 = v161;
              long long v132 = v157;
              int32x4_t v127 = v160;
              int32x4_t v128 = v343;
LABEL_101:
              uint64_t v151 = (unsigned int *)((char *)v13 + (v149 & 0xFFFFFFFFFFFFFFF8));
              int32x4_t v171 = vdupq_n_s32(v150);
              unsigned int v150 = 32 - 8 * (v149 & 0xFFFFFFF8);
              int32x4_t v172 = vaddq_s32(v171, v127);
              int32x4_t v173 = vaddq_s32(v171, v128);
              int8x16_t v174 = 0uLL;
              int8x16_t v175 = (int8x16_t)v147;
              int v176 = (uint64_t *)((char *)v13 + v152);
              unint64_t v177 = v152 - (v149 & 0xFFFFFFFFFFFFFFF8);
              do
              {
                uint64_t v178 = *v176++;
                v7.i64[0] = v178;
                uint32x4_t v179 = (uint32x4_t)vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE570);
                int8x16_t v7 = vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE580);
                int8x16_t v174 = vorrq_s8((int8x16_t)vshlq_u32(v179, (uint32x4_t)vaddq_s32(v172, v129)), v174);
                int8x16_t v175 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v7, (uint32x4_t)vaddq_s32(v173, v129)), v175);
                int32x4_t v173 = vaddq_s32(v173, v130);
                int32x4_t v172 = vaddq_s32(v172, v130);
                v177 += 8;
              }
              while (v177);
              int8x16_t v180 = vorrq_s8(v175, v174);
              int8x8_t v181 = vorr_s8(*(int8x8_t *)v180.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v180, v180, 8uLL));
              unsigned int v147 = v181.i32[0] | v181.i32[1];
              if (v149 != (v149 & 0xFFFFFFFFFFFFFFF8))
              {
LABEL_106:
                unsigned int v182 = v150 - 8;
                do
                {
                  int v183 = *(unsigned __int8 *)v151;
                  uint64_t v151 = (unsigned int *)((char *)v151 + 1);
                  v147 |= v183 << v182;
                  v182 -= 8;
                }
                while (v151 != (unsigned int *)v148);
              }
              uint64_t v13 = *(unsigned int **)(result + 32);
            }
          }
LABEL_109:
          v143 |= (unint64_t)v147 << -(char)v144;
          v144 += 32;
          if (!v142) {
            goto LABEL_153;
          }
LABEL_110:
          int v184 = 0;
          while (2)
          {
            unint64_t v185 = HIDWORD(v143);
            if (!HIDWORD(v143)) {
              return result;
            }
            unsigned int v186 = v12 >> 8;
            int v187 = v12 & 0xF;
            unsigned int v188 = __clz(HIDWORD(v143));
            int v189 = v12 >> 4;
            int v190 = v189 - v186 + 2 * v188;
            int v191 = ((v186 + 1) << v187) + (-1 << v189) + (HIDWORD(v143) >> -(char)(v189 - v186 + 2 * v188));
            BOOL v192 = v188 > v186;
            if (v188 <= v186) {
              int v193 = v188 + 1 + v187;
            }
            else {
              int v193 = v190;
            }
            if (v192) {
              int v194 = v191;
            }
            else {
              int v194 = (HIDWORD(v143) << (v188 + 1) >> 1 >> (v187 ^ 0x1F)) + (v188 << v187);
            }
            if (v143 < 0) {
              int v195 = v187 + 1;
            }
            else {
              int v195 = v193;
            }
            if (v143 < 0) {
              unsigned int v196 = (HIDWORD(v143) & 0x7FFFFFFFu) >> (v187 ^ 0x1F);
            }
            else {
              unsigned int v196 = v194;
            }
            if (v196 >= 0x5E) {
              unsigned int v197 = 94;
            }
            else {
              unsigned int v197 = v196;
            }
            v143 <<= v195 + 1;
            v144 -= v195 + 1;
            if (v144 < 0)
            {
              if ((unint64_t)v13 < v14)
              {
                unsigned int v198 = *v13++;
                unsigned int v199 = bswap32(v198);
                goto LABEL_150;
              }
              uint64_t v200 = *(unsigned __int8 **)(result + 32);
              if (v13 >= (unsigned int *)v200)
              {
                unsigned int v199 = 0;
              }
              else
              {
                unint64_t v201 = v200 - (unsigned __int8 *)v13;
                if ((unint64_t)(v200 - (unsigned __int8 *)v13) < 8)
                {
                  unsigned int v199 = 0;
                  unsigned int v202 = 32;
                  int8x16x4_t v203 = v13;
                  goto LABEL_147;
                }
                if (v201 < 0x20)
                {
                  unsigned int v199 = 0;
                  unint64_t v204 = 0;
                  unsigned int v202 = 32;
                  goto LABEL_142;
                }
                int32x4_t v344 = v128;
                int32x4_t v205 = v127;
                long long v206 = v132;
                int32x4_t v207 = v131;
                unint64_t v204 = v201 & 0xFFFFFFFFFFFFFFE0;
                unsigned int v202 = 32 - 8 * (v201 & 0xFFFFFFE0);
                int32x4_t v208 = (int32x4_t)xmmword_262CDE530;
                int32x4_t v209 = (int32x4_t)xmmword_262CDE540;
                int32x4_t v210 = (int32x4_t)xmmword_262CDE550;
                int8x16_t v211 = 0uLL;
                int8x16_t v7 = 0uLL;
                int32x4_t v212 = (int32x4_t)xmmword_262CDE560;
                uint64_t v213 = (int8x16_t *)(v13 + 4);
                unint64_t v214 = v201 & 0xFFFFFFFFFFFFFFE0;
                int8x16_t v215 = 0uLL;
                int8x16_t v216 = 0uLL;
                int8x16_t v217 = 0uLL;
                int8x16_t v218 = 0uLL;
                int8x16_t v219 = 0uLL;
                int8x16_t v220 = 0uLL;
                do
                {
                  int8x16_t v221 = v213[-1];
                  int8x16_t v222 = *v213;
                  v213 += 2;
                  int8x16_t v7 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v221, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v210, v129)), v7);
                  int8x16_t v211 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v221, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v212, v129)), v211);
                  int8x16_t v215 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v221, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v209, v129)), v215);
                  int8x16_t v216 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v221, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v208, v129)), v216);
                  int8x16_t v218 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v222, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v210, v133)), v218);
                  int8x16_t v217 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v222, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v212, v133)), v217);
                  int8x16_t v219 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v222, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v209, v133)), v219);
                  int8x16_t v220 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v222, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v208, v133)), v220);
                  int32x4_t v212 = vaddq_s32(v212, v134);
                  int32x4_t v210 = vaddq_s32(v210, v134);
                  int32x4_t v209 = vaddq_s32(v209, v134);
                  int32x4_t v208 = vaddq_s32(v208, v134);
                  v214 -= 32;
                }
                while (v214);
                int8x16_t v223 = vorrq_s8(vorrq_s8(vorrq_s8(v217, v211), vorrq_s8(v219, v215)), vorrq_s8(vorrq_s8(v218, v7), vorrq_s8(v220, v216)));
                int8x8_t v224 = vorr_s8(*(int8x8_t *)v223.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v223, v223, 8uLL));
                unsigned int v199 = v224.i32[0] | v224.i32[1];
                if (v201 == v204)
                {
                  uint64_t v13 = *(unsigned int **)(result + 32);
                  int32x4_t v131 = v207;
                  long long v132 = v206;
                  int32x4_t v127 = v205;
                  int32x4_t v128 = v344;
                }
                else
                {
                  int32x4_t v127 = v205;
                  if ((v201 & 0x18) == 0)
                  {
                    int8x16x4_t v203 = (unsigned int *)((char *)v13 + v204);
                    int32x4_t v131 = v207;
                    long long v132 = v206;
                    int32x4_t v128 = v344;
                    goto LABEL_147;
                  }
                  int32x4_t v131 = v207;
                  long long v132 = v206;
                  int32x4_t v128 = v344;
LABEL_142:
                  int8x16x4_t v203 = (unsigned int *)((char *)v13 + (v201 & 0xFFFFFFFFFFFFFFF8));
                  int32x4_t v225 = vdupq_n_s32(v202);
                  unsigned int v202 = 32 - 8 * (v201 & 0xFFFFFFF8);
                  int32x4_t v226 = vaddq_s32(v225, v127);
                  int32x4_t v227 = vaddq_s32(v225, v128);
                  int8x16_t v228 = 0uLL;
                  int8x16_t v229 = (int8x16_t)v199;
                  int32x4_t v230 = (uint64_t *)((char *)v13 + v204);
                  unint64_t v231 = v204 - (v201 & 0xFFFFFFFFFFFFFFF8);
                  do
                  {
                    uint64_t v232 = *v230++;
                    v7.i64[0] = v232;
                    uint32x4_t v233 = (uint32x4_t)vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE570);
                    int8x16_t v7 = vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE580);
                    int8x16_t v228 = vorrq_s8((int8x16_t)vshlq_u32(v233, (uint32x4_t)vaddq_s32(v226, v129)), v228);
                    int8x16_t v229 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v7, (uint32x4_t)vaddq_s32(v227, v129)), v229);
                    int32x4_t v227 = vaddq_s32(v227, v130);
                    int32x4_t v226 = vaddq_s32(v226, v130);
                    v231 += 8;
                  }
                  while (v231);
                  int8x16_t v234 = vorrq_s8(v229, v228);
                  int8x8_t v235 = vorr_s8(*(int8x8_t *)v234.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v234, v234, 8uLL));
                  unsigned int v199 = v235.i32[0] | v235.i32[1];
                  if (v201 != (v201 & 0xFFFFFFFFFFFFFFF8))
                  {
LABEL_147:
                    unsigned int v236 = v202 - 8;
                    do
                    {
                      int v237 = *(unsigned __int8 *)v203;
                      int8x16x4_t v203 = (unsigned int *)((char *)v203 + 1);
                      v199 |= v237 << v236;
                      v236 -= 8;
                    }
                    while (v203 != (unsigned int *)v200);
                  }
                  uint64_t v13 = *(unsigned int **)(result + 32);
                }
              }
LABEL_150:
              v143 |= (unint64_t)v199 << -(char)v144;
              v144 += 32;
            }
            unsigned int v12 = word_2655BC21A[v197];
            a2[((v24 & v126) << a5) + a6[(unint64_t)v24 >> a3]] = (((int)(v185 << v195) >> 31) ^ (v196 + 1))
                                                                       - ((int)(v185 << v195) >> 31);
            if (++v24 == a4) {
              return result;
            }
            if (++v184 == v142) {
              goto LABEL_153;
            }
            continue;
          }
        }
      }
      if (v142) {
        goto LABEL_110;
      }
LABEL_153:
      if (!HIDWORD(v143)) {
        return result;
      }
      unsigned int v238 = __clz(HIDWORD(v143));
      int v239 = v346 >> 4;
      int v240 = v239 - (v346 >> 8) + 2 * v238;
      int v241 = (((v346 >> 8) + 1) << (v346 & 0xF))
           + (-1 << v239)
           + (HIDWORD(v143) >> -(char)(v239 - BYTE1(v346) + 2 * v238));
      if (v238 <= v346 >> 8) {
        int v242 = v238 + 1 + (v346 & 0xF);
      }
      else {
        int v242 = v240;
      }
      if (v238 <= v346 >> 8) {
        int v243 = (HIDWORD(v143) << (v238 + 1) >> 1 >> (v346 & 0xF ^ 0x1F)) + (v238 << (v346 & 0xF));
      }
      else {
        int v243 = v241;
      }
      if (v143 >= 0)
      {
        unsigned int v244 = v243;
      }
      else
      {
        int v242 = (v346 & 0xF) + 1;
        unsigned int v244 = (HIDWORD(v143) & 0x7FFFFFFFu) >> (v346 & 0xF ^ 0x1F);
      }
      if (v244 >= 0x1B) {
        unsigned int v245 = 27;
      }
      else {
        unsigned int v245 = v244;
      }
      uint64_t v246 = v143 << v242;
      int v247 = v144 - v242;
      if (v144 - v242 < 0)
      {
        if ((unint64_t)v13 < v14)
        {
          unsigned int v248 = *v13++;
          unsigned int v249 = bswap32(v248);
LABEL_189:
          v246 |= (unint64_t)v249 << -(char)v247;
          v247 += 32;
          goto LABEL_190;
        }
        v250 = *(unsigned __int8 **)(result + 32);
        if (v13 >= (unsigned int *)v250)
        {
          unsigned int v249 = 0;
          goto LABEL_189;
        }
        unint64_t v251 = v250 - (unsigned __int8 *)v13;
        if ((unint64_t)(v250 - (unsigned __int8 *)v13) < 8)
        {
          unsigned int v249 = 0;
          unsigned int v252 = 32;
          v253 = v13;
          goto LABEL_186;
        }
        if (v251 >= 0x20)
        {
          int32x4_t v347 = v127;
          long long v255 = v132;
          int32x4_t v256 = v131;
          unint64_t v254 = v251 & 0xFFFFFFFFFFFFFFE0;
          unsigned int v252 = 32 - 8 * (v251 & 0xFFFFFFE0);
          int32x4_t v257 = (int32x4_t)xmmword_262CDE530;
          int32x4_t v258 = (int32x4_t)xmmword_262CDE540;
          int32x4_t v259 = (int32x4_t)xmmword_262CDE550;
          int8x16_t v260 = 0uLL;
          int8x16_t v7 = 0uLL;
          int32x4_t v261 = (int32x4_t)xmmword_262CDE560;
          v262 = (int8x16_t *)(v13 + 4);
          unint64_t v263 = v251 & 0xFFFFFFFFFFFFFFE0;
          int8x16_t v264 = 0uLL;
          int8x16_t v265 = 0uLL;
          int8x16_t v266 = 0uLL;
          int8x16_t v267 = 0uLL;
          int8x16_t v268 = 0uLL;
          int8x16_t v269 = 0uLL;
          do
          {
            int8x16_t v270 = v262[-1];
            int8x16_t v271 = *v262;
            v262 += 2;
            int8x16_t v7 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v270, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v259, v129)), v7);
            int8x16_t v260 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v270, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v261, v129)), v260);
            int8x16_t v264 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v270, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v258, v129)), v264);
            int8x16_t v265 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v270, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v257, v129)), v265);
            int8x16_t v267 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v271, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v259, v133)), v267);
            int8x16_t v266 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v271, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v261, v133)), v266);
            int8x16_t v268 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v271, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v258, v133)), v268);
            int8x16_t v269 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v271, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v257, v133)), v269);
            int32x4_t v261 = vaddq_s32(v261, v134);
            int32x4_t v259 = vaddq_s32(v259, v134);
            int32x4_t v258 = vaddq_s32(v258, v134);
            int32x4_t v257 = vaddq_s32(v257, v134);
            v263 -= 32;
          }
          while (v263);
          int8x16_t v272 = vorrq_s8(vorrq_s8(vorrq_s8(v266, v260), vorrq_s8(v268, v264)), vorrq_s8(vorrq_s8(v267, v7), vorrq_s8(v269, v265)));
          int8x8_t v273 = vorr_s8(*(int8x8_t *)v272.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v272, v272, 8uLL));
          unsigned int v249 = v273.i32[0] | v273.i32[1];
          if (v251 == v254)
          {
            uint64_t v13 = *(unsigned int **)(result + 32);
            int32x4_t v131 = v256;
            long long v132 = v255;
            int32x4_t v127 = v347;
            goto LABEL_189;
          }
          if ((v251 & 0x18) == 0)
          {
            v253 = (unsigned int *)((char *)v13 + v254);
            int32x4_t v131 = v256;
            long long v132 = v255;
            int32x4_t v127 = v347;
            goto LABEL_186;
          }
          int32x4_t v131 = v256;
          long long v132 = v255;
          int32x4_t v127 = v347;
        }
        else
        {
          unsigned int v249 = 0;
          unint64_t v254 = 0;
          unsigned int v252 = 32;
        }
        int32x4_t v274 = vdupq_n_s32(v252);
        unsigned int v252 = 32 - 8 * (v251 & 0xFFFFFFF8);
        v253 = (unsigned int *)((char *)v13 + (v251 & 0xFFFFFFFFFFFFFFF8));
        int32x4_t v275 = vaddq_s32(v274, v127);
        int32x4_t v276 = vaddq_s32(v274, v128);
        int8x16_t v277 = 0uLL;
        int8x16_t v278 = (int8x16_t)v249;
        v279 = (uint64_t *)((char *)v13 + v254);
        unint64_t v280 = v254 - (v251 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint64_t v281 = *v279++;
          v7.i64[0] = v281;
          uint32x4_t v282 = (uint32x4_t)vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE570);
          int8x16_t v7 = vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE580);
          int8x16_t v277 = vorrq_s8((int8x16_t)vshlq_u32(v282, (uint32x4_t)vaddq_s32(v275, v129)), v277);
          int8x16_t v278 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v7, (uint32x4_t)vaddq_s32(v276, v129)), v278);
          int32x4_t v276 = vaddq_s32(v276, v130);
          int32x4_t v275 = vaddq_s32(v275, v130);
          v280 += 8;
        }
        while (v280);
        int8x16_t v283 = vorrq_s8(v278, v277);
        int8x8_t v284 = vorr_s8(*(int8x8_t *)v283.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v283, v283, 8uLL));
        unsigned int v249 = v284.i32[0] | v284.i32[1];
        if (v251 != (v251 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_186:
          unsigned int v285 = v252 - 8;
          do
          {
            int v286 = *(unsigned __int8 *)v253;
            v253 = (unsigned int *)((char *)v253 + 1);
            v249 |= v286 << v285;
            v285 -= 8;
          }
          while (v253 != (unsigned int *)v250);
        }
        uint64_t v13 = *(unsigned int **)(result + 32);
        goto LABEL_189;
      }
LABEL_190:
      unint64_t v287 = v24 + v244 + 1;
      if (v287 >= a4) {
        return result;
      }
      unint64_t v288 = HIDWORD(v246);
      if (!HIDWORD(v246)) {
        return result;
      }
      unsigned int v289 = v12 >> 8;
      int v290 = v12 & 0xF;
      unsigned int v291 = __clz(HIDWORD(v246));
      int v292 = v12 >> 4;
      int v293 = v292 - v289 + 2 * v291;
      int v294 = ((v289 + 1) << v290) + (-1 << v292) + (HIDWORD(v246) >> -(char)(v292 - v289 + 2 * v291));
      BOOL v295 = v291 > v289;
      if (v291 <= v289) {
        int v296 = v291 + 1 + v290;
      }
      else {
        int v296 = v293;
      }
      if (v295) {
        int v297 = v294;
      }
      else {
        int v297 = (HIDWORD(v246) << (v291 + 1) >> 1 >> (v290 ^ 0x1F)) + (v291 << v290);
      }
      if (v246 < 0) {
        int v298 = v290 + 1;
      }
      else {
        int v298 = v296;
      }
      if (v246 < 0) {
        unsigned int v299 = (HIDWORD(v246) & 0x7FFFFFFFu) >> (v290 ^ 0x1F);
      }
      else {
        unsigned int v299 = v297;
      }
      if (v299 >= 0x5E) {
        unsigned int v300 = 94;
      }
      else {
        unsigned int v300 = v299;
      }
      if (v299 >= 0xE) {
        unsigned int v301 = 14;
      }
      else {
        unsigned int v301 = v299;
      }
      uint64_t v21 = v246 << (v298 + 1);
      int v22 = v247 - (v298 + 1);
      if (v22 < 0)
      {
        if ((unint64_t)v13 < v14)
        {
          unsigned int v302 = *v13++;
          unsigned int v303 = bswap32(v302);
LABEL_233:
          v21 |= (unint64_t)v303 << -(char)v22;
          v22 += 32;
          goto LABEL_234;
        }
        unint64_t v304 = *(void *)(result + 32);
        if ((unint64_t)v13 >= v304)
        {
          unsigned int v303 = 0;
          goto LABEL_233;
        }
        unint64_t v305 = v304 - (void)v13;
        if (v304 - (unint64_t)v13 < 8)
        {
          unsigned int v303 = 0;
          unsigned int v306 = 32;
          v307 = v13;
          goto LABEL_230;
        }
        if (v305 >= 0x20)
        {
          int32x4_t v345 = v128;
          int32x4_t v309 = v127;
          long long v310 = v132;
          int32x4_t v311 = v131;
          unint64_t v308 = v305 & 0xFFFFFFFFFFFFFFE0;
          unsigned int v306 = 32 - 8 * (v305 & 0xFFFFFFE0);
          int32x4_t v312 = (int32x4_t)xmmword_262CDE530;
          int32x4_t v313 = (int32x4_t)xmmword_262CDE540;
          int32x4_t v314 = (int32x4_t)xmmword_262CDE550;
          int8x16_t v315 = 0uLL;
          int8x16_t v7 = 0uLL;
          int32x4_t v316 = (int32x4_t)xmmword_262CDE560;
          v317 = (int8x16_t *)(v13 + 4);
          unint64_t v318 = v305 & 0xFFFFFFFFFFFFFFE0;
          int8x16_t v319 = 0uLL;
          int8x16_t v320 = 0uLL;
          int8x16_t v321 = 0uLL;
          int8x16_t v322 = 0uLL;
          int8x16_t v323 = 0uLL;
          int8x16_t v324 = 0uLL;
          do
          {
            int8x16_t v325 = v317[-1];
            int8x16_t v326 = *v317;
            v317 += 2;
            int8x16_t v7 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v325, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v314, v129)), v7);
            int8x16_t v315 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v325, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v316, v129)), v315);
            int8x16_t v319 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v325, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v313, v129)), v319);
            int8x16_t v320 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v325, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v312, v129)), v320);
            int8x16_t v322 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v326, (int8x16_t)xmmword_262CDE570), (uint32x4_t)vaddq_s32(v314, v133)), v322);
            int8x16_t v321 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v326, (int8x16_t)xmmword_262CDE580), (uint32x4_t)vaddq_s32(v316, v133)), v321);
            int8x16_t v323 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v326, (int8x16_t)xmmword_262CDE590), (uint32x4_t)vaddq_s32(v313, v133)), v323);
            int8x16_t v324 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)vqtbl1q_s8(v326, (int8x16_t)xmmword_262CDE5A0), (uint32x4_t)vaddq_s32(v312, v133)), v324);
            int32x4_t v316 = vaddq_s32(v316, v134);
            int32x4_t v314 = vaddq_s32(v314, v134);
            int32x4_t v313 = vaddq_s32(v313, v134);
            int32x4_t v312 = vaddq_s32(v312, v134);
            v318 -= 32;
          }
          while (v318);
          int8x16_t v327 = vorrq_s8(vorrq_s8(vorrq_s8(v321, v315), vorrq_s8(v323, v319)), vorrq_s8(vorrq_s8(v322, v7), vorrq_s8(v324, v320)));
          int8x8_t v328 = vorr_s8(*(int8x8_t *)v327.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v327, v327, 8uLL));
          unsigned int v303 = v328.i32[0] | v328.i32[1];
          if (v305 == v308)
          {
            uint64_t v13 = *(unsigned int **)(result + 32);
            int32x4_t v131 = v311;
            long long v132 = v310;
            int32x4_t v127 = v309;
            int32x4_t v128 = v345;
            goto LABEL_233;
          }
          int32x4_t v127 = v309;
          if ((v305 & 0x18) == 0)
          {
            v307 = (unsigned int *)((char *)v13 + v308);
            int32x4_t v131 = v311;
            long long v132 = v310;
            int32x4_t v128 = v345;
            goto LABEL_230;
          }
          int32x4_t v131 = v311;
          long long v132 = v310;
          int32x4_t v128 = v345;
        }
        else
        {
          unsigned int v303 = 0;
          unint64_t v308 = 0;
          unsigned int v306 = 32;
        }
        int32x4_t v329 = vdupq_n_s32(v306);
        unsigned int v306 = 32 - 8 * (v305 & 0xFFFFFFF8);
        v307 = (unsigned int *)((char *)v13 + (v305 & 0xFFFFFFFFFFFFFFF8));
        int32x4_t v330 = vaddq_s32(v329, v127);
        int32x4_t v331 = vaddq_s32(v329, v128);
        int8x16_t v332 = 0uLL;
        int8x16_t v333 = (int8x16_t)v303;
        v334 = (uint64_t *)((char *)v13 + v308);
        unint64_t v335 = v308 - (v305 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint64_t v336 = *v334++;
          v7.i64[0] = v336;
          uint32x4_t v337 = (uint32x4_t)vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE570);
          int8x16_t v7 = vqtbl1q_s8(v7, (int8x16_t)xmmword_262CDE580);
          int8x16_t v332 = vorrq_s8((int8x16_t)vshlq_u32(v337, (uint32x4_t)vaddq_s32(v330, v129)), v332);
          int8x16_t v333 = vorrq_s8((int8x16_t)vshlq_u32((uint32x4_t)v7, (uint32x4_t)vaddq_s32(v331, v129)), v333);
          int32x4_t v331 = vaddq_s32(v331, v130);
          int32x4_t v330 = vaddq_s32(v330, v130);
          v335 += 8;
        }
        while (v335);
        int8x16_t v338 = vorrq_s8(v333, v332);
        int8x8_t v339 = vorr_s8(*(int8x8_t *)v338.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v338, v338, 8uLL));
        unsigned int v303 = v339.i32[0] | v339.i32[1];
        if (v305 != (v305 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_230:
          unsigned int v340 = v306 - 8;
          do
          {
            int v341 = *(unsigned __int8 *)v307;
            v307 = (unsigned int *)((char *)v307 + 1);
            v303 |= v341 << v340;
            v340 -= 8;
          }
          while (v307 != *(unsigned int **)(result + 32));
        }
        uint64_t v13 = *(unsigned int **)(result + 32);
        goto LABEL_233;
      }
LABEL_234:
      unsigned int v346 = word_2655BC1E0[v245];
      unsigned int v12 = word_2655BC21A[v300];
      unsigned int v11 = word_2655BC1C0[v301];
      a2[((v287 & v126) << a5) + a6[v287 >> a3]] = (((int)(v288 << v298) >> 31) ^ (v299 + 1))
                                                               - ((int)(v288 << v298) >> 31);
      unsigned int v24 = v287 + 1;
    }
    while (v24 < a4);
  }
  return result;
}

uint64_t PRRDecoderWorker::runJob(uint64_t result, int *a2)
{
  if (*(_DWORD *)(*(void *)a2 + 40))
  {
    long long v3 = (int16x8_t *)result;
    *(_DWORD *)(result + 128) = 0;
    if (a2[2] >= 1)
    {
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      do
      {
        uint64_t result = PRRSliceDecoder::decode(v3, (_OWORD *)(*(void *)a2 + v4));
        ++v5;
        v4 += 88;
      }
      while (v5 < a2[2]);
    }
  }
  return result;
}

int8x16_t PRRDiscreteCosineTransform::idct_8x8(int16x8_t *this, int8x16_t *a2, int16x8_t *a3, const __int16 *a4)
{
  int16x8_t v4 = this[1];
  int16x8_t v5 = a3[1];
  int16x8_t v6 = vmulq_s16(*a3, *this);
  int16x8_t v7 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)this->i8, *(int16x4_t *)a3->i8), (int16x8_t)vmull_high_s16(*this, *a3));
  int8x16_t v8 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v6, v7)), (int32x4_t)vzip2q_s16(v6, v7));
  int16x8_t v9 = vmulq_s16(v5, v4);
  int16x8_t v10 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v4.i8, *(int16x4_t *)v5.i8), (int16x8_t)vmull_high_s16(v4, v5));
  int8x16_t v11 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v9, v10)), (int32x4_t)vzip2q_s16(v9, v10));
  int16x8_t v12 = this[2];
  int16x8_t v13 = this[3];
  int16x8_t v14 = a3[2];
  int16x8_t v15 = a3[3];
  int16x8_t v16 = vmulq_s16(v14, v12);
  int16x8_t v17 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)v14.i8), (int16x8_t)vmull_high_s16(v12, v14));
  int8x16_t v18 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v16, v17)), (int32x4_t)vzip2q_s16(v16, v17));
  int16x8_t v19 = vmulq_s16(v15, v13);
  int16x8_t v20 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v13.i8, *(int16x4_t *)v15.i8), (int16x8_t)vmull_high_s16(v13, v15));
  int8x16_t v21 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v19, v20)), (int32x4_t)vzip2q_s16(v19, v20));
  int16x8_t v22 = this[4];
  int16x8_t v23 = this[5];
  int16x8_t v24 = a3[4];
  int16x8_t v25 = a3[5];
  int16x8_t v26 = vmulq_s16(v24, v22);
  int16x8_t v27 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v22.i8, *(int16x4_t *)v24.i8), (int16x8_t)vmull_high_s16(v22, v24));
  int8x16_t v28 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v26, v27)), (int32x4_t)vzip2q_s16(v26, v27));
  int16x8_t v29 = vmulq_s16(v25, v23);
  int16x8_t v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v23.i8, *(int16x4_t *)v25.i8), (int16x8_t)vmull_high_s16(v23, v25));
  int8x16_t v31 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v29, v30)), (int32x4_t)vzip2q_s16(v29, v30));
  int16x8_t v32 = this[6];
  int16x8_t v33 = this[7];
  int16x8_t v34 = a3[6];
  int16x8_t v35 = a3[7];
  int16x8_t v36 = vmulq_s16(v34, v32);
  int16x8_t v37 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v32.i8, *(int16x4_t *)v34.i8), (int16x8_t)vmull_high_s16(v32, v34));
  int8x16_t v215 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v36, v37)), (int32x4_t)vzip2q_s16(v36, v37));
  int16x8_t v38 = vmulq_s16(v35, v33);
  int16x8_t v39 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v33.i8, *(int16x4_t *)v35.i8), (int16x8_t)vmull_high_s16(v33, v35));
  int8x16_t v214 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v38, v39)), (int32x4_t)vzip2q_s16(v38, v39));
  int8x16_t v40 = vqtbl1q_s8(v8, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v41 = vqtbl1q_s8(v11, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v42 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v40.i8, 0);
  int8x16_t v43 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 0);
  int8x16_t v44 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v40.i8, 1);
  int8x16_t v45 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 1);
  int32x4_t v46 = (int32x4_t)vqtbl1q_s8(v40, (int8x16_t)xmmword_262CDE5D0);
  int32x4_t v47 = (int32x4_t)vqtbl1q_s8(v41, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v48 = (int8x16_t)vdupq_laneq_s32(v46, 2);
  int8x16_t v49 = (int8x16_t)vdupq_laneq_s32(v47, 2);
  int8x16_t v50 = (int8x16_t)vdupq_laneq_s32(v46, 3);
  int8x16_t v51 = (int8x16_t)vdupq_laneq_s32(v47, 3);
  int32x4_t v52 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0xEB18F00008A91000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)0xF757100014E8F000)), vpaddq_s32(vmull_s16(*(int16x4_t *)v42.i8, (int16x4_t)0x8A9100014E81000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v42, v42, 8uLL), (int16x4_t)0xEB181000F7571000)));
  int32x4_t v53 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0xF36EE9CF046A0C92), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)0xE9CF12D012D0046ALL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0xFB9612D012D01631), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v44, v44, 8uLL), (int16x4_t)0xF36E046AE9CF0C92)));
  int32x4_t v54 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0xE301E9CF0C031631), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)0xF3FD16311CFFE9CFLL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v43.i8, (int16x4_t)0xC0316311CFF1631), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v43, v43, 8uLL), (int16x4_t)0xE3011631F3FD1631)));
  int32x4_t v55 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0xEE90E138061F1170), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)0xE1381A191A19061FLL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v45.i8, (int16x4_t)0xF9E11A191A191EC8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v45, v45, 8uLL), (int16x4_t)0xEE90061FE1381170)));
  int32x4_t v216 = vsubq_s32(v52, v53);
  int32x4_t v212 = vsubq_s32(v54, v55);
  int32x4_t v213 = vaddq_s32(v53, v52);
  int32x4_t v211 = vaddq_s32(v55, v54);
  int8x16_t v56 = vqtbl1q_s8(v18, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v57 = vqtbl1q_s8(v21, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v58 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v56.i8, 0);
  int32x4_t v59 = vpaddq_s32(vmull_s16(*(int16x4_t *)v58.i8, (int16x4_t)0xB5014E81B5014E8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL), (int16x4_t)0xE4B014E8F4B014E8));
  int8x16_t v60 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v57.i8, 0);
  int32x4_t v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v60.i8, (int16x4_t)0xA2F12D0189512D0), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL), (int16x4_t)0xE76B12D0F5D112D0));
  int8x16_t v62 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v56.i8, 1);
  int32x4_t v63 = vpaddq_s32(vmull_s16(*(int16x4_t *)v62.i8, (int16x4_t)0xFA3B189518951CFFLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v62, v62, 8uLL), (int16x4_t)0xEF9305C5E301106DLL));
  int8x16_t v64 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v57.i8, 1);
  int32x4_t v65 = vpaddq_s32(vmull_s16(*(int16x4_t *)v64.i8, (int16x4_t)0xFACF161F161F1A19), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL), (int16x4_t)0xF1380531E5E70EC8));
  int32x4_t v66 = (int32x4_t)vqtbl1q_s8(v56, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v67 = (int8x16_t)vdupq_laneq_s32(v66, 2);
  int32x4_t v68 = vpaddq_s32(vmull_s16(*(int16x4_t *)v67.i8, (int16x4_t)0xE4B0EB180B5014E8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL), (int16x4_t)0xF4B014E81B50EB18));
  int32x4_t v69 = (int32x4_t)vqtbl1q_s8(v57, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v70 = (int8x16_t)vdupq_laneq_s32(v69, 2);
  int8x16_t v71 = (int8x16_t)vdupq_laneq_s32(v66, 3);
  int32x4_t v72 = vpaddq_s32(vmull_s16(*(int16x4_t *)v71.i8, (int16x4_t)0xEF93E30105C5106DLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v71, v71, 8uLL), (int16x4_t)0xE3011895189505C5));
  int8x16_t v73 = (int8x16_t)vdupq_laneq_s32(v69, 3);
  int32x4_t v74 = vaddq_s32(v68, v59);
  int32x4_t v75 = vaddq_s32(v72, v63);
  int32x4_t v76 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v70.i8, (int16x4_t)0xE76BED300A2F12D0), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v70, v70, 8uLL), (int16x4_t)0xF5D112D01895ED30)), v61);
  int32x4_t v77 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v73.i8, (int16x4_t)0xF138E5E705310EC8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v73, v73, 8uLL), (int16x4_t)0xE5E7161F161F0531)), v65);
  int32x4_t v78 = vsubq_s32(v74, v75);
  int32x4_t v79 = vaddq_s32(v75, v74);
  int32x4_t v80 = vsubq_s32(v76, v77);
  int32x4_t v81 = vaddq_s32(v77, v76);
  int8x16_t v82 = vqtbl1q_s8(v28, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v83 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v82.i8, 0);
  int8x16_t v84 = vqtbl1q_s8(v31, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v85 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v84.i8, 0);
  int8x16_t v86 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v82.i8, 1);
  int8x16_t v87 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v84.i8, 1);
  int32x4_t v88 = vmull_s16(*(int16x4_t *)v87.i8, (int16x4_t)0xFACF161F161F1A19);
  int32x4_t v89 = vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL), (int16x4_t)0xF1380531E5E70EC8);
  int32x4_t v90 = (int32x4_t)vqtbl1q_s8(v82, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v91 = (int8x16_t)vdupq_laneq_s32(v90, 2);
  int32x4_t v92 = vpaddq_s32(v88, v89);
  int32x4_t v93 = vpaddq_s32(vmull_s16(*(int16x4_t *)v91.i8, (int16x4_t)0xEB18F00008A91000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v91, v91, 8uLL), (int16x4_t)0xF757100014E8F000));
  int32x4_t v94 = (int32x4_t)vqtbl1q_s8(v84, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v95 = (int8x16_t)vdupq_laneq_s32(v94, 2);
  int8x16_t v96 = (int8x16_t)vdupq_laneq_s32(v90, 3);
  int8x16_t v97 = (int8x16_t)vdupq_laneq_s32(v94, 3);
  int32x4_t v98 = vaddq_s32(v93, vpaddq_s32(vmull_s16(*(int16x4_t *)v83.i8, (int16x4_t)0x8A9100014E81000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v83, v83, 8uLL), (int16x4_t)0xEB181000F7571000)));
  int32x4_t v99 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v96.i8, (int16x4_t)0xF36EE9CF046A0C92), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v96, v96, 8uLL), (int16x4_t)0xE9CF12D012D0046ALL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v86.i8, (int16x4_t)0xFB9612D012D01631), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v86, v86, 8uLL), (int16x4_t)0xF36E046AE9CF0C92)));
  int32x4_t v100 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v95.i8, (int16x4_t)0xE76BED300A2F12D0), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v95, v95, 8uLL), (int16x4_t)0xF5D112D01895ED30)), vpaddq_s32(vmull_s16(*(int16x4_t *)v85.i8, (int16x4_t)0xA2F12D0189512D0), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v85, v85, 8uLL), (int16x4_t)0xE76B12D0F5D112D0)));
  int32x4_t v101 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v97.i8, (int16x4_t)0xF138E5E705310EC8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v97, v97, 8uLL), (int16x4_t)0xE5E7161F161F0531)), v92);
  int32x4_t v102 = vsubq_s32(v98, v99);
  int32x4_t v103 = vaddq_s32(v99, v98);
  int32x4_t v104 = vsubq_s32(v100, v101);
  int32x4_t v105 = vaddq_s32(v101, v100);
  int8x16_t v106 = vqtbl1q_s8(v215, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v107 = vqtbl1q_s8(v214, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v108 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v106.i8, 0);
  int8x16_t v109 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v107.i8, 0);
  int8x16_t v110 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v106.i8, 1);
  int8x16_t v111 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v107.i8, 1);
  int32x4_t v112 = (int32x4_t)vqtbl1q_s8(v106, (int8x16_t)xmmword_262CDE5D0);
  int32x4_t v113 = (int32x4_t)vqtbl1q_s8(v107, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v114 = (int8x16_t)vdupq_laneq_s32(v112, 2);
  int8x16_t v115 = (int8x16_t)vdupq_laneq_s32(v113, 2);
  int8x16_t v116 = (int8x16_t)vdupq_laneq_s32(v112, 3);
  int32x4_t v117 = vpaddq_s32(vmull_s16(*(int16x4_t *)v116.i8, (int16x4_t)0xEF93E30105C5106DLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v116, v116, 8uLL), (int16x4_t)0xE3011895189505C5));
  int8x16_t v118 = (int8x16_t)vdupq_laneq_s32(v113, 3);
  int32x4_t v119 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v114.i8, (int16x4_t)0xE4B0EB180B5014E8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v114, v114, 8uLL), (int16x4_t)0xF4B014E81B50EB18)), vpaddq_s32(vmull_s16(*(int16x4_t *)v108.i8, (int16x4_t)0xB5014E81B5014E8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v108, v108, 8uLL), (int16x4_t)0xE4B014E8F4B014E8)));
  float32x4_t v120 = vcvtq_f32_s32(v79);
  float32x4_t v121 = vcvtq_f32_s32(v78);
  float32x4_t v122 = vcvtq_f32_s32(v104);
  int32x4_t v123 = vaddq_s32(v117, vpaddq_s32(vmull_s16(*(int16x4_t *)v110.i8, (int16x4_t)0xFA3B189518951CFFLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL), (int16x4_t)0xEF9305C5E301106DLL)));
  int32x4_t v124 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v115.i8, (int16x4_t)0xE301E9CF0C031631), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v115, v115, 8uLL), (int16x4_t)0xF3FD16311CFFE9CFLL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v109.i8, (int16x4_t)0xC0316311CFF1631), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v109, v109, 8uLL), (int16x4_t)0xE3011631F3FD1631)));
  int32x4_t v125 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v118.i8, (int16x4_t)0xEE90E138061F1170), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v118, v118, 8uLL), (int16x4_t)0xE1381A191A19061FLL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v111.i8, (int16x4_t)0xF9E11A191A191EC8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v111, v111, 8uLL), (int16x4_t)0xEE90061FE1381170)));
  int32x4_t v126 = vsubq_s32(v124, v125);
  int32x4_t v127 = vaddq_s32(v125, v124);
  float32x4_t v128 = vcvtq_f32_s32(vaddq_s32(v123, v119));
  float32x4_t v129 = vcvtq_f32_s32(vsubq_s32(v119, v123));
  float32x4_t v130 = (float32x4_t)vdupq_n_s32(0x39800000u);
  float32x4_t v131 = vcvtq_f32_s32(v126);
  float32x4_t v132 = vmulq_f32(vcvtq_f32_s32(v105), v130);
  float32x4_t v133 = vmulq_f32(vcvtq_f32_s32(v81), v130);
  float32x4_t v134 = (float32x4_t)vdupq_n_s32(0x3F2B0DC1u);
  float32x4_t v135 = vaddq_f32(v133, vmulq_f32(v132, v134));
  float32x4_t v136 = vsubq_f32(v132, vmulq_f32(v133, v134));
  int8x16_t v137 = (int8x16_t)vrev64q_s32((int32x4_t)vmulq_f32(v122, v130));
  float32x4_t v138 = (float32x4_t)vextq_s8(v137, v137, 8uLL);
  int8x16_t v139 = (int8x16_t)vrev64q_s32((int32x4_t)vmulq_f32(vcvtq_f32_s32(v80), v130));
  float32x4_t v140 = (float32x4_t)vextq_s8(v139, v139, 8uLL);
  float32x4_t v141 = vaddq_f32(v140, vmulq_f32(v138, v134));
  float32x4_t v142 = vsubq_f32(v138, vmulq_f32(v140, v134));
  float32x4_t v143 = vmulq_f32(vcvtq_f32_s32(v127), v130);
  float32x4_t v144 = (float32x4_t)vdupq_n_s32(0x3E4BAFAFu);
  float32x4_t v145 = vmulq_f32(vcvtq_f32_s32(v211), v130);
  float32x4_t v146 = vaddq_f32(v145, vmulq_f32(v143, v144));
  float32x4_t v147 = vsubq_f32(vmulq_f32(v145, v144), v143);
  int8x16_t v148 = (int8x16_t)vrev64q_s32((int32x4_t)vmulq_f32(v131, v130));
  float32x4_t v149 = (float32x4_t)vextq_s8(v148, v148, 8uLL);
  int8x16_t v150 = (int8x16_t)vrev64q_s32((int32x4_t)vmulq_f32(vcvtq_f32_s32(v212), v130));
  float32x4_t v151 = (float32x4_t)vextq_s8(v150, v150, 8uLL);
  float32x4_t v152 = vaddq_f32(v151, vmulq_f32(v149, v144));
  float32x4_t v153 = vsubq_f32(vmulq_f32(v151, v144), v149);
  float32x4_t v154 = vsubq_f32(v147, v136);
  float32x4_t v155 = vsubq_f32(v146, v135);
  float32x4_t v156 = vaddq_f32(v136, v147);
  float32x4_t v157 = vaddq_f32(v135, v146);
  float32x4_t v158 = vsubq_f32(v153, v142);
  float32x4_t v159 = vsubq_f32(v152, v141);
  float32x4_t v160 = vaddq_f32(v142, v153);
  float32x4_t v161 = vaddq_f32(v141, v152);
  float32x4_t v162 = (float32x4_t)vdupq_n_s32(0x3F3504F3u);
  float32x4_t v163 = vmulq_f32(vaddq_f32(v154, v155), v162);
  float32x4_t v164 = vmulq_f32(vsubq_f32(v155, v154), v162);
  float32x4_t v165 = vmulq_f32(vaddq_f32(v158, v159), v162);
  float32x4_t v166 = vmulq_f32(vsubq_f32(v159, v158), v162);
  float32x4_t v167 = vmulq_f32(v128, v130);
  float32x4_t v168 = vmulq_f32(v120, v130);
  float32x4_t v169 = (float32x4_t)vdupq_n_s32(0x3ED413CDu);
  float32x4_t v170 = vaddq_f32(v168, vmulq_f32(v167, v169));
  float32x4_t v171 = vsubq_f32(vmulq_f32(v168, v169), v167);
  int8x16_t v172 = (int8x16_t)vrev64q_s32((int32x4_t)vmulq_f32(v129, v130));
  float32x4_t v173 = (float32x4_t)vextq_s8(v172, v172, 8uLL);
  int8x16_t v174 = (int8x16_t)vrev64q_s32((int32x4_t)vmulq_f32(v121, v130));
  float32x4_t v175 = (float32x4_t)vextq_s8(v174, v174, 8uLL);
  float32x4_t v176 = vaddq_f32(v175, vmulq_f32(v173, v169));
  float32x4_t v177 = vsubq_f32(vmulq_f32(v175, v169), v173);
  float32x4_t v178 = (float32x4_t)vdupq_n_s32(0x47000080u);
  float32x4_t v179 = vaddq_f32(vmulq_f32(vcvtq_f32_s32(v213), v130), v178);
  float32x4_t v180 = vmulq_f32(vcvtq_f32_s32(v103), v130);
  float32x4_t v181 = vaddq_f32(v179, v180);
  float32x4_t v182 = vsubq_f32(v179, v180);
  int8x16_t v183 = (int8x16_t)vrev64q_s32((int32x4_t)vaddq_f32(vmulq_f32(vcvtq_f32_s32(v216), v130), v178));
  float32x4_t v184 = (float32x4_t)vextq_s8(v183, v183, 8uLL);
  int8x16_t v185 = (int8x16_t)vrev64q_s32((int32x4_t)vmulq_f32(vcvtq_f32_s32(v102), v130));
  float32x4_t v186 = (float32x4_t)vextq_s8(v185, v185, 8uLL);
  float32x4_t v187 = vaddq_f32(v184, v186);
  float32x4_t v188 = vsubq_f32(v184, v186);
  float32x4_t v189 = vaddq_f32(v181, v170);
  float32x4_t v190 = vsubq_f32(v181, v170);
  float32x4_t v191 = vaddq_f32(v182, v171);
  float32x4_t v192 = vsubq_f32(v182, v171);
  float32x4_t v193 = vaddq_f32(v187, v176);
  float32x4_t v194 = vsubq_f32(v187, v176);
  float32x4_t v195 = vaddq_f32(v188, v177);
  float32x4_t v196 = vsubq_f32(v188, v177);
  float32x4_t v197 = vaddq_f32(v190, v156);
  float32x4_t v198 = vsubq_f32(v190, v156);
  float32x4_t v199 = vaddq_f32(v192, v164);
  float32x4_t v200 = vsubq_f32(v192, v164);
  float32x4_t v201 = vaddq_f32(v191, v163);
  float32x4_t v202 = vsubq_f32(v191, v163);
  float32x4_t v203 = vaddq_f32(v189, v157);
  float32x4_t v204 = vsubq_f32(v189, v157);
  float32x4_t v205 = vaddq_f32(v194, v160);
  float32x4_t v206 = vsubq_f32(v194, v160);
  float32x4_t v207 = vaddq_f32(v196, v166);
  v189.i64[0] = 0x7F0000007FLL;
  v189.i64[1] = 0x7F0000007FLL;
  int8x16_t v208 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtq_s32_f32(v198), (int32x4_t)v189)), vaddq_s32(vcvtq_s32_f32(v206), (int32x4_t)v189));
  int8x16_t v209 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtq_s32_f32(v200), (int32x4_t)v189)), vaddq_s32(vcvtq_s32_f32(vsubq_f32(v196, v166)), (int32x4_t)v189));
  v166.i64[0] = 0x8000800080008000;
  v166.i64[1] = 0x8000800080008000;
  *a2 = veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtq_s32_f32(v203), (int32x4_t)v189)), vaddq_s32(vcvtq_s32_f32(vaddq_f32(v193, v161)), (int32x4_t)v189)), (int8x16_t)v166);
  a2[1] = veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtq_s32_f32(v201), (int32x4_t)v189)), vaddq_s32(vcvtq_s32_f32(vaddq_f32(v195, v165)), (int32x4_t)v189)), (int8x16_t)v166);
  a2[2] = veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtq_s32_f32(v199), (int32x4_t)v189)), vaddq_s32(vcvtq_s32_f32(v207), (int32x4_t)v189)), (int8x16_t)v166);
  a2[3] = veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtq_s32_f32(v197), (int32x4_t)v189)), vaddq_s32(vcvtq_s32_f32(v205), (int32x4_t)v189)), (int8x16_t)v166);
  a2[4] = veorq_s8(v208, (int8x16_t)v166);
  a2[5] = veorq_s8(v209, (int8x16_t)v166);
  int8x16_t result = veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtq_s32_f32(v204), (int32x4_t)v189)), vaddq_s32(vcvtq_s32_f32(vsubq_f32(v193, v161)), (int32x4_t)v189)), (int8x16_t)v166);
  a2[6] = veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(vcvtq_s32_f32(v202), (int32x4_t)v189)), vaddq_s32(vcvtq_s32_f32(vsubq_f32(v195, v165)), (int32x4_t)v189)), (int8x16_t)v166);
  a2[7] = result;
  return result;
}

int8x16_t PRRDiscreteCosineTransform::idct_4x4(int16x8_t *this, int8x16_t *a2, int64x2_t *a3, const __int16 *a4)
{
  int16x8_t v4 = (int16x8_t)vzip1q_s64(*a3, a3[1]);
  int16x8_t v5 = (int16x8_t)vzip1q_s64(a3[2], a3[3]);
  int16x8_t v6 = this[1];
  int16x8_t v7 = vmulq_s16(*this, v4);
  int16x8_t v8 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)this->i8, *(int16x4_t *)v4.i8), (int16x8_t)vmull_high_s16(*this, v4));
  int32x4_t v9 = (int32x4_t)vzip1q_s16(v7, v8);
  int32x4_t v10 = (int32x4_t)vzip2q_s16(v7, v8);
  *(int16x4_t *)v9.i8 = vqmovn_s32(v9);
  *(int16x4_t *)v7.i8 = vuzp1_s16(*(int16x4_t *)v9.i8, *(int16x4_t *)v9.i8);
  int16x4_t v11 = vuzp2_s16(*(int16x4_t *)v9.i8, *(int16x4_t *)v9.i8);
  int8x16_t v12 = (int8x16_t)vqmovn_high_s32(*(int16x4_t *)v9.i8, v10);
  int16x8_t v13 = vmulq_s16(v6, v5);
  int16x8_t v14 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v6.i8, *(int16x4_t *)v5.i8), (int16x8_t)vmull_high_s16(v6, v5));
  int32x4_t v15 = (int32x4_t)vzip1q_s16(v13, v14);
  int32x4_t v16 = (int32x4_t)vzip2q_s16(v13, v14);
  *(int16x4_t *)v14.i8 = vqmovn_s32(v15);
  *(int16x4_t *)v15.i8 = vuzp1_s16(*(int16x4_t *)v14.i8, *(int16x4_t *)v14.i8);
  int16x4_t v17 = vuzp2_s16(*(int16x4_t *)v14.i8, *(int16x4_t *)v14.i8);
  int8x16_t v18 = (int8x16_t)vqmovn_high_s32(*(int16x4_t *)v14.i8, v16);
  int8x16_t v19 = vqtbl1q_s8(v12, (int8x16_t)xmmword_262CDE5E0);
  int8x16_t v20 = vqtbl1q_s8(v12, (int8x16_t)xmmword_262CDE5F0);
  int32x4_t v21 = vpaddq_s32(vmull_s16(*(int16x4_t *)v7.i8, (int16x4_t)0xE000200020002000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v19, v19, 8uLL), (int16x4_t)0xD63129CF29CF29CFLL));
  int32x4_t v22 = vpaddq_s32(vmull_s16(v11, (int16x4_t)0xD6311151115129CFLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v20, v20, 8uLL), (int16x4_t)0xC95F16A116A136A1));
  int32x4_t v23 = vaddq_s32(v22, v21);
  int32x4_t v24 = vrev64q_s32(vsubq_s32(v21, v22));
  v21.i64[0] = v23.i64[0];
  v21.i64[1] = v24.i64[0];
  v24.i64[0] = v23.i64[1];
  int8x16_t v25 = vqtbl1q_s8(v18, (int8x16_t)xmmword_262CDE5E0);
  int8x16_t v26 = vqtbl1q_s8(v18, (int8x16_t)xmmword_262CDE5F0);
  int32x4_t v27 = vpaddq_s32(vmull_s16(*(int16x4_t *)v15.i8, (int16x4_t)0xE000200020002000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL), (int16x4_t)0xD63129CF29CF29CFLL));
  int32x4_t v28 = vpaddq_s32(vmull_s16(v17, (int16x4_t)0xD6311151115129CFLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v26, v26, 8uLL), (int16x4_t)0xC95F16A116A136A1));
  float32x4_t v29 = (float32x4_t)vaddq_s32(v28, v27);
  int32x4_t v30 = vrev64q_s32(vsubq_s32(v27, v28));
  v28.i64[0] = v29.i64[0];
  v28.i64[1] = v30.i64[0];
  v30.i64[0] = v29.i64[1];
  v29.i64[0] = 0x3900000039000000;
  v29.i64[1] = 0x3900000039000000;
  float32x4_t v31 = vaddq_f32(vmulq_f32(vcvtq_f32_s32(v21), v29), (float32x4_t)vdupq_n_s32(0x47000080u));
  float32x4_t v32 = vmulq_f32(vcvtq_f32_s32(v28), v29);
  float32x4_t v33 = vaddq_f32(v31, v32);
  float32x4_t v34 = vsubq_f32(v31, v32);
  float32x4_t v35 = vmulq_f32(vcvtq_f32_s32(v24), v29);
  float32x4_t v36 = vmulq_f32(vcvtq_f32_s32(v30), v29);
  float32x4_t v37 = (float32x4_t)vdupq_n_s32(0x3ED413CDu);
  float32x4_t v38 = vaddq_f32(v35, vmulq_f32(v36, v37));
  float32x4_t v39 = vsubq_f32(vmulq_f32(v35, v37), v36);
  int32x4_t v40 = vcvtq_s32_f32(vaddq_f32(v33, v38));
  int32x4_t v41 = vcvtq_s32_f32(vaddq_f32(v34, v39));
  int32x4_t v42 = vcvtq_s32_f32(vsubq_f32(v34, v39));
  int32x4_t v43 = vcvtq_s32_f32(vsubq_f32(v33, v38));
  v38.i64[0] = 0x7F0000007FLL;
  v38.i64[1] = 0x7F0000007FLL;
  int8x16_t v44 = (int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(v40, (int32x4_t)v38)), vaddq_s32(v41, (int32x4_t)v38));
  v41.i64[0] = 0x8000800080008000;
  v41.i64[1] = 0x8000800080008000;
  int8x16_t result = veorq_s8((int8x16_t)vqmovn_high_s32(vqmovn_s32(vaddq_s32(v42, (int32x4_t)v38)), vaddq_s32(v43, (int32x4_t)v38)), (int8x16_t)v41);
  *a2 = veorq_s8(v44, (int8x16_t)v41);
  a2[1] = result;
  return result;
}

int16x4_t PRRDiscreteCosineTransform::idct_2x2(int16x4_t *this, __int16 *a2, int32x4_t *a3, const __int16 *a4, double a5, double a6, int16x8_t a7)
{
  int16x8_t v7 = (int16x8_t)vzip1q_s32(*a3, a3[1]);
  *(int16x4_t *)a7.i8 = *this;
  v14.val[1] = (int8x16_t)vmulq_s16(a7, v7);
  int16x8_t v8 = (int16x8_t)vmull_s16(*this, *(int16x4_t *)v7.i8);
  v14.val[0] = (int8x16_t)vuzp2q_s16(v8, v8);
  int32x4_t v9 = (int32x4_t)vqtbl2q_s8(v14, (int8x16_t)xmmword_262D47900);
  *(int16x4_t *)v9.i8 = vqmovn_s32(v9);
  int8x16_t v10 = (int8x16_t)vzip1q_s32(v9, v9);
  int32x4_t v11 = vpaddq_s32(vmull_s16(*(int16x4_t *)v10.i8, (int16x4_t)0xFFFF000100010001), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL), (int16x4_t)0xFFFF000100010001));
  int32x2_t v12 = (int32x2_t)vdupq_laneq_s64((int64x2_t)v11, 1).u64[0];
  *(int32x2_t *)v14.val[0].i8 = vsub_s32(*(int32x2_t *)v11.i8, v12);
  *(int32x2_t *)v11.i8 = vadd_s32(v12, *(int32x2_t *)v11.i8);
  v11.i64[1] = v14.val[0].i64[0];
  int16x4_t result = vqmovn_s32(v11);
  *(void *)a2 = *(void *)&result ^ 0x8000800080008000;
  return result;
}

int16x8_t PRRDiscreteCosineTransform::idct_8x8_AVX(int16x8_t *this, int16x8_t *a2, int16x8_t *a3, const __int16 *a4)
{
  int16x8_t v4 = this[1];
  int16x8_t v5 = a3[1];
  int16x8_t v6 = vmulq_s16(*a3, *this);
  int16x8_t v7 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)this->i8, *(int16x4_t *)a3->i8), (int16x8_t)vmull_high_s16(*this, *a3));
  int8x16_t v8 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v6, v7)), (int32x4_t)vzip2q_s16(v6, v7));
  int16x8_t v9 = vmulq_s16(v5, v4);
  int16x8_t v10 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v4.i8, *(int16x4_t *)v5.i8), (int16x8_t)vmull_high_s16(v4, v5));
  int8x16_t v11 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v9, v10)), (int32x4_t)vzip2q_s16(v9, v10));
  int16x8_t v12 = this[2];
  int16x8_t v13 = this[3];
  int16x8_t v14 = a3[2];
  int16x8_t v15 = a3[3];
  int16x8_t v16 = vmulq_s16(v14, v12);
  int16x8_t v17 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)v14.i8), (int16x8_t)vmull_high_s16(v12, v14));
  int8x16_t v18 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v16, v17)), (int32x4_t)vzip2q_s16(v16, v17));
  int16x8_t v19 = vmulq_s16(v15, v13);
  int16x8_t v20 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v13.i8, *(int16x4_t *)v15.i8), (int16x8_t)vmull_high_s16(v13, v15));
  int8x16_t v21 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v19, v20)), (int32x4_t)vzip2q_s16(v19, v20));
  int16x8_t v22 = this[4];
  int16x8_t v23 = this[5];
  int16x8_t v24 = a3[4];
  int16x8_t v25 = a3[5];
  int16x8_t v26 = vmulq_s16(v24, v22);
  int16x8_t v27 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v22.i8, *(int16x4_t *)v24.i8), (int16x8_t)vmull_high_s16(v22, v24));
  int8x16_t v28 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v26, v27)), (int32x4_t)vzip2q_s16(v26, v27));
  int16x8_t v29 = vmulq_s16(v25, v23);
  int16x8_t v30 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v23.i8, *(int16x4_t *)v25.i8), (int16x8_t)vmull_high_s16(v23, v25));
  int8x16_t v31 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v29, v30)), (int32x4_t)vzip2q_s16(v29, v30));
  int16x8_t v32 = this[6];
  int16x8_t v33 = this[7];
  int16x8_t v34 = a3[6];
  int16x8_t v35 = a3[7];
  int16x8_t v36 = vmulq_s16(v34, v32);
  int16x8_t v37 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v32.i8, *(int16x4_t *)v34.i8), (int16x8_t)vmull_high_s16(v32, v34));
  int8x16_t v205 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v36, v37)), (int32x4_t)vzip2q_s16(v36, v37));
  int16x8_t v38 = vmulq_s16(v35, v33);
  int16x8_t v39 = vuzp2q_s16((int16x8_t)vmull_s16(*(int16x4_t *)v33.i8, *(int16x4_t *)v35.i8), (int16x8_t)vmull_high_s16(v33, v35));
  int8x16_t v204 = (int8x16_t)vqmovn_high_s32(vqmovn_s32((int32x4_t)vzip1q_s16(v38, v39)), (int32x4_t)vzip2q_s16(v38, v39));
  int8x16_t v40 = vqtbl1q_s8(v8, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v41 = vqtbl1q_s8(v11, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v42 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v40.i8, 0);
  int8x16_t v43 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 0);
  int8x16_t v44 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v40.i8, 1);
  int8x16_t v45 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v41.i8, 1);
  int32x4_t v46 = (int32x4_t)vqtbl1q_s8(v40, (int8x16_t)xmmword_262CDE5D0);
  int32x4_t v47 = (int32x4_t)vqtbl1q_s8(v41, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v48 = (int8x16_t)vdupq_laneq_s32(v46, 2);
  int8x16_t v49 = (int8x16_t)vdupq_laneq_s32(v47, 2);
  int8x16_t v50 = (int8x16_t)vdupq_laneq_s32(v46, 3);
  int8x16_t v51 = (int8x16_t)vdupq_laneq_s32(v47, 3);
  int32x4_t v52 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v48.i8, (int16x4_t)0xEB18F00008A91000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v48, v48, 8uLL), (int16x4_t)0xF757100014E8F000)), vpaddq_s32(vmull_s16(*(int16x4_t *)v42.i8, (int16x4_t)0x8A9100014E81000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v42, v42, 8uLL), (int16x4_t)0xEB181000F7571000)));
  int32x4_t v53 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v50.i8, (int16x4_t)0xF36EE9CF046A0C92), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v50, v50, 8uLL), (int16x4_t)0xE9CF12D012D0046ALL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v44.i8, (int16x4_t)0xFB9612D012D01631), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v44, v44, 8uLL), (int16x4_t)0xF36E046AE9CF0C92)));
  int32x4_t v54 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v49.i8, (int16x4_t)0xE301E9CF0C031631), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v49, v49, 8uLL), (int16x4_t)0xF3FD16311CFFE9CFLL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v43.i8, (int16x4_t)0xC0316311CFF1631), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v43, v43, 8uLL), (int16x4_t)0xE3011631F3FD1631)));
  int32x4_t v55 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v51.i8, (int16x4_t)0xEE90E138061F1170), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v51, v51, 8uLL), (int16x4_t)0xE1381A191A19061FLL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v45.i8, (int16x4_t)0xF9E11A191A191EC8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v45, v45, 8uLL), (int16x4_t)0xEE90061FE1381170)));
  int32x4_t v206 = vaddq_s32(v53, v52);
  int32x4_t v207 = vsubq_s32(v52, v53);
  int32x4_t v202 = vsubq_s32(v54, v55);
  int32x4_t v203 = vaddq_s32(v55, v54);
  int8x16_t v56 = vqtbl1q_s8(v18, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v57 = vqtbl1q_s8(v21, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v58 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v56.i8, 0);
  int32x4_t v59 = vpaddq_s32(vmull_s16(*(int16x4_t *)v58.i8, (int16x4_t)0xB5014E81B5014E8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL), (int16x4_t)0xE4B014E8F4B014E8));
  int8x16_t v60 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v57.i8, 0);
  int32x4_t v61 = vpaddq_s32(vmull_s16(*(int16x4_t *)v60.i8, (int16x4_t)0xA2F12D0189512D0), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL), (int16x4_t)0xE76B12D0F5D112D0));
  int8x16_t v62 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v56.i8, 1);
  int32x4_t v63 = vpaddq_s32(vmull_s16(*(int16x4_t *)v62.i8, (int16x4_t)0xFA3B189518951CFFLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v62, v62, 8uLL), (int16x4_t)0xEF9305C5E301106DLL));
  int8x16_t v64 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v57.i8, 1);
  int32x4_t v65 = vpaddq_s32(vmull_s16(*(int16x4_t *)v64.i8, (int16x4_t)0xFACF161F161F1A19), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v64, v64, 8uLL), (int16x4_t)0xF1380531E5E70EC8));
  int32x4_t v66 = (int32x4_t)vqtbl1q_s8(v56, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v67 = (int8x16_t)vdupq_laneq_s32(v66, 2);
  int32x4_t v68 = vpaddq_s32(vmull_s16(*(int16x4_t *)v67.i8, (int16x4_t)0xE4B0EB180B5014E8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v67, v67, 8uLL), (int16x4_t)0xF4B014E81B50EB18));
  int32x4_t v69 = (int32x4_t)vqtbl1q_s8(v57, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v70 = (int8x16_t)vdupq_laneq_s32(v69, 2);
  int32x4_t v71 = vpaddq_s32(vmull_s16(*(int16x4_t *)v70.i8, (int16x4_t)0xE76BED300A2F12D0), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v70, v70, 8uLL), (int16x4_t)0xF5D112D01895ED30));
  int8x16_t v72 = (int8x16_t)vdupq_laneq_s32(v66, 3);
  int32x4_t v73 = vpaddq_s32(vmull_s16(*(int16x4_t *)v72.i8, (int16x4_t)0xEF93E30105C5106DLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v72, v72, 8uLL), (int16x4_t)0xE3011895189505C5));
  int8x16_t v74 = (int8x16_t)vdupq_laneq_s32(v69, 3);
  int32x4_t v75 = vaddq_s32(v68, v59);
  int32x4_t v76 = vaddq_s32(v73, v63);
  int32x4_t v77 = vaddq_s32(v71, v61);
  int32x4_t v78 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v74.i8, (int16x4_t)0xF138E5E705310EC8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v74, v74, 8uLL), (int16x4_t)0xE5E7161F161F0531)), v65);
  int32x4_t v79 = vsubq_s32(v75, v76);
  int32x4_t v80 = vaddq_s32(v76, v75);
  int8x16_t v81 = vqtbl1q_s8(v28, (int8x16_t)xmmword_262CDE5C0);
  int32x4_t v82 = vsubq_s32(v77, v78);
  int8x16_t v83 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v81.i8, 0);
  int32x4_t v84 = vaddq_s32(v78, v77);
  int32x4_t v85 = vpaddq_s32(vmull_s16(*(int16x4_t *)v83.i8, (int16x4_t)0x8A9100014E81000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v83, v83, 8uLL), (int16x4_t)0xEB181000F7571000));
  int8x16_t v86 = vqtbl1q_s8(v31, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v87 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v86.i8, 0);
  int8x16_t v88 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v81.i8, 1);
  int8x16_t v89 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v86.i8, 1);
  int32x4_t v90 = vpaddq_s32(vmull_s16(*(int16x4_t *)v89.i8, (int16x4_t)0xFACF161F161F1A19), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v89, v89, 8uLL), (int16x4_t)0xF1380531E5E70EC8));
  int32x4_t v91 = (int32x4_t)vqtbl1q_s8(v81, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v92 = (int8x16_t)vdupq_laneq_s32(v91, 2);
  int32x4_t v93 = (int32x4_t)vqtbl1q_s8(v86, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v94 = (int8x16_t)vdupq_laneq_s32(v93, 2);
  int8x16_t v95 = (int8x16_t)vdupq_laneq_s32(v91, 3);
  int8x16_t v96 = (int8x16_t)vdupq_laneq_s32(v93, 3);
  int32x4_t v97 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v92.i8, (int16x4_t)0xEB18F00008A91000), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v92, v92, 8uLL), (int16x4_t)0xF757100014E8F000)), v85);
  int32x4_t v98 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v95.i8, (int16x4_t)0xF36EE9CF046A0C92), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v95, v95, 8uLL), (int16x4_t)0xE9CF12D012D0046ALL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v88.i8, (int16x4_t)0xFB9612D012D01631), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v88, v88, 8uLL), (int16x4_t)0xF36E046AE9CF0C92)));
  int32x4_t v99 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v94.i8, (int16x4_t)0xE76BED300A2F12D0), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v94, v94, 8uLL), (int16x4_t)0xF5D112D01895ED30)), vpaddq_s32(vmull_s16(*(int16x4_t *)v87.i8, (int16x4_t)0xA2F12D0189512D0), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL), (int16x4_t)0xE76B12D0F5D112D0)));
  int32x4_t v100 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v96.i8, (int16x4_t)0xF138E5E705310EC8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v96, v96, 8uLL), (int16x4_t)0xE5E7161F161F0531)), v90);
  int32x4_t v101 = vsubq_s32(v97, v98);
  int32x4_t v102 = vaddq_s32(v98, v97);
  int32x4_t v103 = vsubq_s32(v99, v100);
  int32x4_t v104 = vaddq_s32(v100, v99);
  int8x16_t v105 = vqtbl1q_s8(v205, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v106 = vqtbl1q_s8(v204, (int8x16_t)xmmword_262CDE5C0);
  int8x16_t v107 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v105.i8, 0);
  int8x16_t v108 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v106.i8, 0);
  int8x16_t v109 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v105.i8, 1);
  int8x16_t v110 = (int8x16_t)vdupq_lane_s32(*(int32x2_t *)v106.i8, 1);
  int32x4_t v111 = (int32x4_t)vqtbl1q_s8(v105, (int8x16_t)xmmword_262CDE5D0);
  int32x4_t v112 = (int32x4_t)vqtbl1q_s8(v106, (int8x16_t)xmmword_262CDE5D0);
  int8x16_t v113 = (int8x16_t)vdupq_laneq_s32(v111, 2);
  int8x16_t v114 = (int8x16_t)vdupq_laneq_s32(v112, 2);
  int8x16_t v115 = (int8x16_t)vdupq_laneq_s32(v111, 3);
  int8x16_t v116 = (int8x16_t)vdupq_laneq_s32(v112, 3);
  int8x16_t v117 = (int8x16_t)vrev64q_s32(v202);
  int8x16_t v118 = (int8x16_t)vrev64q_s32(v79);
  int8x16_t v119 = (int8x16_t)vrev64q_s32(v82);
  int8x16_t v120 = (int8x16_t)vrev64q_s32(v103);
  float32x4_t v121 = vcvtq_f32_s32((int32x4_t)vextq_s8(v120, v120, 8uLL));
  int32x4_t v122 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v113.i8, (int16x4_t)0xE4B0EB180B5014E8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v113, v113, 8uLL), (int16x4_t)0xF4B014E81B50EB18)), vpaddq_s32(vmull_s16(*(int16x4_t *)v107.i8, (int16x4_t)0xB5014E81B5014E8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v107, v107, 8uLL), (int16x4_t)0xE4B014E8F4B014E8)));
  int32x4_t v123 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v115.i8, (int16x4_t)0xEF93E30105C5106DLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v115, v115, 8uLL), (int16x4_t)0xE3011895189505C5)), vpaddq_s32(vmull_s16(*(int16x4_t *)v109.i8, (int16x4_t)0xFA3B189518951CFFLL), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v109, v109, 8uLL), (int16x4_t)0xEF9305C5E301106DLL)));
  int32x4_t v124 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v114.i8, (int16x4_t)0xE301E9CF0C031631), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v114, v114, 8uLL), (int16x4_t)0xF3FD16311CFFE9CFLL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v108.i8, (int16x4_t)0xC0316311CFF1631), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v108, v108, 8uLL), (int16x4_t)0xE3011631F3FD1631)));
  int32x4_t v125 = vaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v116.i8, (int16x4_t)0xEE90E138061F1170), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v116, v116, 8uLL), (int16x4_t)0xE1381A191A19061FLL)), vpaddq_s32(vmull_s16(*(int16x4_t *)v110.i8, (int16x4_t)0xF9E11A191A191EC8), vmull_s16((int16x4_t)*(_OWORD *)&vextq_s8(v110, v110, 8uLL), (int16x4_t)0xEE90061FE1381170)));
  int32x4_t v126 = vsubq_s32(v122, v123);
  int32x4_t v127 = vaddq_s32(v123, v122);
  int8x16_t v128 = (int8x16_t)vrev64q_s32(v126);
  int32x4_t v129 = vsubq_s32(v124, v125);
  int32x4_t v130 = vaddq_s32(v125, v124);
  int8x16_t v131 = (int8x16_t)vrev64q_s32(v129);
  float32x4_t v132 = vcvtq_f32_s32(v127);
  float32x4_t v133 = (float32x4_t)vdupq_n_s32(0x39800000u);
  float32x4_t v134 = vmulq_f32(v121, v133);
  float32x4_t v135 = vmulq_f32(vcvtq_f32_s32(v104), v133);
  float32x4_t v136 = vmulq_f32(vcvtq_f32_s32(v84), v133);
  float32x4_t v137 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vextq_s8(v119, v119, 8uLL)), v133);
  float32x4_t v138 = (float32x4_t)vdupq_n_s32(0x3F2B0DC1u);
  float32x4_t v139 = vaddq_f32(v137, vmulq_f32(v134, v138));
  float32x4_t v140 = vaddq_f32(v136, vmulq_f32(v135, v138));
  float32x4_t v141 = vsubq_f32(v134, vmulq_f32(v137, v138));
  float32x4_t v142 = vsubq_f32(v135, vmulq_f32(v136, v138));
  float32x4_t v143 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vextq_s8(v131, v131, 8uLL)), v133);
  float32x4_t v144 = vmulq_f32(vcvtq_f32_s32(v130), v133);
  float32x4_t v145 = vmulq_f32(vcvtq_f32_s32(v203), v133);
  float32x4_t v146 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vextq_s8(v117, v117, 8uLL)), v133);
  float32x4_t v147 = (float32x4_t)vdupq_n_s32(0x3E4BAFAFu);
  float32x4_t v148 = vaddq_f32(v146, vmulq_f32(v143, v147));
  float32x4_t v149 = vaddq_f32(v145, vmulq_f32(v144, v147));
  float32x4_t v150 = vsubq_f32(vmulq_f32(v146, v147), v143);
  float32x4_t v151 = vsubq_f32(vmulq_f32(v145, v147), v144);
  float32x4_t v152 = vsubq_f32(v151, v142);
  float32x4_t v153 = vsubq_f32(v150, v141);
  float32x4_t v154 = vsubq_f32(v149, v140);
  float32x4_t v155 = vaddq_f32(v142, v151);
  float32x4_t v156 = vsubq_f32(v148, v139);
  float32x4_t v157 = vaddq_f32(v141, v150);
  float32x4_t v158 = vaddq_f32(v140, v149);
  float32x4_t v159 = vaddq_f32(v139, v148);
  float32x4_t v160 = (float32x4_t)vdupq_n_s32(0x3F3504F3u);
  float32x4_t v161 = vmulq_f32(vaddq_f32(v152, v154), v160);
  float32x4_t v162 = vmulq_f32(vaddq_f32(v153, v156), v160);
  float32x4_t v163 = vmulq_f32(vsubq_f32(v154, v152), v160);
  float32x4_t v164 = vmulq_f32(vsubq_f32(v156, v153), v160);
  float32x4_t v165 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vextq_s8(v128, v128, 8uLL)), v133);
  float32x4_t v166 = vmulq_f32(v132, v133);
  float32x4_t v167 = vmulq_f32(vcvtq_f32_s32(v80), v133);
  float32x4_t v168 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vextq_s8(v118, v118, 8uLL)), v133);
  float32x4_t v169 = (float32x4_t)vdupq_n_s32(0x3ED413CDu);
  float32x4_t v170 = vaddq_f32(v168, vmulq_f32(v165, v169));
  float32x4_t v171 = vaddq_f32(v167, vmulq_f32(v166, v169));
  float32x4_t v172 = vsubq_f32(vmulq_f32(v168, v169), v165);
  int8x16_t v173 = (int8x16_t)vrev64q_s32(v207);
  float32x4_t v174 = vsubq_f32(vmulq_f32(v167, v169), v166);
  float32x4_t v175 = (float32x4_t)vdupq_n_s32(0x47000080u);
  float32x4_t v176 = vaddq_f32(vmulq_f32(vcvtq_f32_s32(v206), v133), v175);
  float32x4_t v177 = vaddq_f32(vmulq_f32(vcvtq_f32_s32((int32x4_t)vextq_s8(v173, v173, 8uLL)), v133), v175);
  int8x16_t v178 = (int8x16_t)vrev64q_s32(v101);
  float32x4_t v179 = vmulq_f32(vcvtq_f32_s32(v102), v133);
  float32x4_t v180 = vmulq_f32(vcvtq_f32_s32((int32x4_t)vextq_s8(v178, v178, 8uLL)), v133);
  float32x4_t v181 = vaddq_f32(v177, v180);
  float32x4_t v182 = vsubq_f32(v177, v180);
  float32x4_t v183 = vaddq_f32(v176, v179);
  float32x4_t v184 = vsubq_f32(v176, v179);
  float32x4_t v185 = vaddq_f32(v183, v171);
  float32x4_t v186 = vsubq_f32(v183, v171);
  float32x4_t v187 = vaddq_f32(v181, v170);
  float32x4_t v188 = vsubq_f32(v181, v170);
  float32x4_t v189 = vaddq_f32(v184, v174);
  float32x4_t v190 = vsubq_f32(v184, v174);
  float32x4_t v191 = vaddq_f32(v182, v172);
  float32x4_t v192 = vsubq_f32(v182, v172);
  float32x4_t v193 = vaddq_f32(v188, v157);
  float32x4_t v194 = vsubq_f32(v188, v157);
  float32x4_t v195 = vaddq_f32(v186, v155);
  float32x4_t v196 = vsubq_f32(v186, v155);
  float32x4_t v197 = vaddq_f32(v192, v164);
  float32x4_t v198 = vsubq_f32(v192, v164);
  float32x4_t v199 = vaddq_f32(v190, v163);
  *a2 = vqmovun_high_s32(vqmovun_s32(vcvtq_s32_f32(vaddq_f32(v185, v158))), vcvtq_s32_f32(vaddq_f32(v187, v159)));
  a2[1] = vqmovun_high_s32(vqmovun_s32(vcvtq_s32_f32(vaddq_f32(v189, v161))), vcvtq_s32_f32(vaddq_f32(v191, v162)));
  int16x8_t v200 = vqmovun_high_s32(vqmovun_s32(vcvtq_s32_f32(vsubq_f32(v190, v163))), vcvtq_s32_f32(v198));
  a2[2] = vqmovun_high_s32(vqmovun_s32(vcvtq_s32_f32(v199)), vcvtq_s32_f32(v197));
  a2[3] = vqmovun_high_s32(vqmovun_s32(vcvtq_s32_f32(v195)), vcvtq_s32_f32(v193));
  int16x8_t result = vqmovun_high_s32(vqmovun_s32(vcvtq_s32_f32(vsubq_f32(v189, v161))), vcvtq_s32_f32(vsubq_f32(v191, v162)));
  a2[4] = vqmovun_high_s32(vqmovun_s32(vcvtq_s32_f32(v196)), vcvtq_s32_f32(v194));
  a2[5] = v200;
  a2[6] = result;
  a2[7] = vqmovun_high_s32(vqmovun_s32(vcvtq_s32_f32(vsubq_f32(v185, v158))), vcvtq_s32_f32(vsubq_f32(v187, v159)));
  return result;
}

uint64_t Bytestream::Bytestream(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = 0;
  *(unsigned char *)int16x8_t result = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  long long v2 = *(void **)a2;
  long long v3 = *(void **)(a2 + 8);
  if (*(void **)a2 == v3)
  {
    *(unsigned char *)int16x8_t result = 1;
  }
  else
  {
    uint64_t v4 = v2[1];
    *(void *)(result + 8) = *v2;
    *(void *)(result + 16) = v4;
    if (v2 + 2 != v3) {
      operator new();
    }
  }
  return result;
}

uint64_t Bytestream::destroy(Bytestream *this)
{
  uint64_t result = *((void *)this + 3);
  if (result)
  {
    do
    {
      uint64_t v2 = *(void *)(result + 16);
      MEMORY[0x263E5FB40]();
      uint64_t result = v2;
    }
    while (v2);
  }
  return result;
}

uint64_t Bytestream::uSlow(Bytestream *this, int a2)
{
  uint64_t result = 0;
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *((void *)this + 2);
      if (!v6) {
        break;
      }
      uint64_t v4 = (unsigned __int8 *)*((void *)this + 1);
      unsigned int v5 = *v4;
      *((void *)this + 1) = v4 + 1;
      *((void *)this + 2) = v6 - 1;
      uint64_t result = v5 | (result << 8);
      if (!--a2) {
        return result;
      }
    }
    int16x8_t v7 = (long long *)*((void *)this + 3);
    if (!v7) {
      break;
    }
    long long v8 = *v7;
    *((void *)this + 3) = *((void *)v7 + 2);
    *(_OWORD *)((char *)this + 8) = v8;
    if (!a2) {
      return result;
    }
  }
  uint64_t result = 0;
  *(unsigned char *)this = 1;
  return result;
}

double Bytestream::fp32Slow(Bytestream *this)
{
  int v1 = 0;
  int v2 = 4;
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *((void *)this + 2);
      if (!v5) {
        break;
      }
      long long v3 = (unsigned __int8 *)*((void *)this + 1);
      int v4 = *v3;
      *((void *)this + 1) = v3 + 1;
      *((void *)this + 2) = v5 - 1;
      int v1 = v4 | (v1 << 8);
      if (!--v2)
      {
        LODWORD(v7) = v1;
        return *(double *)&v7;
      }
    }
    uint64_t v6 = (long long *)*((void *)this + 3);
    if (!v6) {
      break;
    }
    long long v7 = *v6;
    *((void *)this + 3) = *((void *)v6 + 2);
    *(_OWORD *)((char *)this + 8) = v7;
  }
  *(unsigned char *)this = 1;
  *(void *)&long long v7 = 0;
  return *(double *)&v7;
}

BOOL Bytestream::getCopiedBytes(Bytestream *this, size_t __n, unsigned __int8 *__dst)
{
  if (!__n) {
    return *(unsigned char *)this == 0;
  }
  size_t v5 = __n;
  size_t v6 = *((void *)this + 2);
  if (v6 >= __n)
  {
LABEL_5:
    memcpy(__dst, *((const void **)this + 1), v5);
    size_t v10 = *((void *)this + 2) - v5;
    *((void *)this + 1) += v5;
    *((void *)this + 2) = v10;
    return 1;
  }
  else
  {
    while (1)
    {
      memcpy(__dst, *((const void **)this + 1), v6);
      uint64_t v7 = *((void *)this + 2);
      long long v8 = (long long *)*((void *)this + 3);
      if (!v8) {
        break;
      }
      v5 -= v7;
      __dst += v7;
      long long v9 = *v8;
      *((void *)this + 3) = *((void *)v8 + 2);
      *(_OWORD *)((char *)this + 8) = v9;
      size_t v6 = *((void *)this + 2);
      if (v5 <= v6) {
        goto LABEL_5;
      }
    }
    BOOL result = 0;
    *(unsigned char *)this = 1;
    *((void *)this + 1) += v7;
    *((void *)this + 2) = 0;
  }
  return result;
}

uint64_t Bytestream::blockSkipIndexing(Bytestream *this, unint64_t a2)
{
  int v2 = (char *)this + 8;
  while (1)
  {
    long long v3 = (void *)*((void *)v2 + 2);
    if (!v3) {
      break;
    }
    a2 -= *((void *)v2 + 1);
    int v2 = (char *)*((void *)v2 + 2);
    if (a2 < v3[1]) {
      return *(unsigned __int8 *)(*v3 + a2);
    }
  }
  return 0;
}

uint64_t Bytestream::blockSkipOffsetAssign(uint64_t this, unint64_t a2)
{
  int v2 = (_OWORD *)(this + 8);
  unint64_t v3 = *(void *)(this + 16);
  while (1)
  {
    int v4 = *(long long **)(this + 24);
    if (!v4) {
      break;
    }
    a2 -= v3;
    long long v5 = *v4;
    *(void *)(this + 24) = *((void *)v4 + 2);
    _OWORD *v2 = v5;
    unint64_t v3 = *(void *)(this + 16);
    if (v3 >= a2)
    {
      *(void *)v2 += a2;
      *(void *)(this + 16) = v3 - a2;
      return this;
    }
  }
  *(unsigned char *)this = 1;
  *(void *)(this + 8) += v3;
  *(void *)(this + 16) = 0;
  return this;
}

void PRRFrameDecoder::PRRFrameDecoder(PRRFrameDecoder *this, int NumProcessors, void (*a3)(void))
{
  *((void *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  if (NumProcessors <= 0) {
    NumProcessors = IcpUtility::getNumProcessors(this);
  }
  int v4 = (IcpUtility *)ThreadPool<PRRDecoderWorker,PRRDecoderJob,void>::create(NumProcessors, 0);
  *((void *)this + 6) = v4;
  if (!v4)
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    uint64_t v7 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v7, MEMORY[0x263F8C218], MEMORY[0x263F8C170]);
  }
  isAVXAvailable = (IcpUtility *)IcpUtility::isAVXAvailable(v4);
  *((_DWORD *)this + 14) = isAVXAvailable;
  *((unsigned char *)this + 60) = IcpUtility::isAVXAvailable(isAVXAvailable);
}

void sub_262CDAE44(_Unwind_Exception *a1)
{
  unint64_t v3 = *(void **)(v1 + 24);
  if (v3)
  {
    *(void *)(v1 + 32) = v3;
    operator delete(v3);
  }
  FrameDecoder::FrameDecoder(v1);
  _Unwind_Resume(a1);
}

unint64_t ThreadPool<PRRDecoderWorker,PRRDecoderJob,void>::create(int a1, uint64_t a2)
{
  if (a1 < 1) {
    return 0;
  }
  {
    uint64_t v13 = 64;
    size_t v12 = 8;
    int v8 = sysctlbyname("hw.cachelinesize", &v13, &v12, 0, 0);
    BOOL v9 = v12 == 8 && v8 == 0;
    uint64_t v10 = v13;
    if (!v9) {
      uint64_t v10 = 0;
    }
    ThreadPool<PRRDecoderWorker,PRRDecoderJob,void>::getBlockSize(void)::cacheLineSize = v10;
  }
  {
    uint64_t v11 = ThreadPool<PRRDecoderWorker,PRRDecoderJob,void>::getBlockSize(void)::cacheLineSize;
    if (!ThreadPool<PRRDecoderWorker,PRRDecoderJob,void>::getBlockSize(void)::cacheLineSize) {
      uint64_t v11 = 256;
    }
    ThreadPool<PRRDecoderWorker,PRRDecoderJob,void>::getBlockSize(void)::blockSize = v11;
  }
  uint64_t v4 = ThreadPool<PRRDecoderWorker,PRRDecoderJob,void>::getBlockSize(void)::blockSize;
  long long v5 = malloc_type_malloc(((v4 + 47) & -v4) + v4, 0x1E83A129uLL);
  if (!v5) {
    return 0;
  }
  unint64_t v6 = ((unint64_t)v5 + v4) & -v4;
  *(void *)(v6 - 8) = v5;
  if (v6)
  {
    *(_DWORD *)unint64_t v6 = a1;
    *(void *)(v6 + 8) = dispatch_get_global_queue(0, 0);
    *(void *)(v6 + 16) = dispatch_group_create();
    atomic_store(0, (unsigned int *)(v6 + 24));
    *(_DWORD *)(v6 + 28) = 0;
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 40) = a2;
  }
  return v6;
}

void sub_262CDAFE8(_Unwind_Exception *a1)
{
}

uint64_t FrameHeader::parse(unsigned int *a1, Bytestream *a2)
{
  unint64_t v3 = a1;
  uint64_t v4 = 0;
  long long v5 = (void *)((char *)a2 + 8);
  int v241 = (void *)((char *)a2 + 8);
  do
  {
    uint64_t v6 = v5[1];
    long long v5 = (void *)v5[2];
    v4 += v6;
  }
  while (v5);
  uint64_t v240 = v4;
  unint64_t v7 = *((void *)a2 + 2);
  BOOL v154 = v7 >= 2;
  unint64_t v8 = v7 - 2;
  if (v154)
  {
    BOOL v9 = (unsigned __int16 *)*((void *)a2 + 1);
    unsigned int v10 = *v9;
    *((void *)a2 + 1) = v9 + 1;
    *((void *)a2 + 2) = v8;
    *a1 = bswap32(v10) >> 16;
    if (!v8) {
      goto LABEL_34;
    }
LABEL_6:
    unint64_t v11 = v8 - 1;
    ++*((void *)a2 + 1);
    *((void *)a2 + 2) = v11;
    if (!v11) {
      goto LABEL_35;
    }
    goto LABEL_7;
  }
  unsigned int v71 = Bytestream::uSlow(a2, 2);
  unint64_t v8 = *((void *)a2 + 2);
  unsigned int *v3 = v71;
  if (v8) {
    goto LABEL_6;
  }
LABEL_34:
  Bytestream::uSlow(a2, 1);
  unint64_t v11 = *((void *)a2 + 2);
  if (!v11)
  {
LABEL_35:
    unsigned int v72 = Bytestream::uSlow(a2, 1);
    unint64_t v73 = *((void *)a2 + 2);
    v3[1] = v72;
    BOOL v154 = v73 >= 4;
    unint64_t v15 = v73 - 4;
    if (!v154) {
      goto LABEL_36;
    }
LABEL_9:
    int16x8_t v16 = (unsigned int *)*((void *)a2 + 1);
    unsigned int v17 = bswap32(*v16);
    *((void *)a2 + 1) = v16 + 1;
    *((void *)a2 + 2) = v15;
    v3[2] = v17;
    BOOL v154 = v15 >= 2;
    unint64_t v18 = v15 - 2;
    if (!v154) {
      goto LABEL_10;
    }
    goto LABEL_38;
  }
LABEL_7:
  size_t v12 = (unsigned __int8 *)*((void *)a2 + 1);
  unsigned int v13 = *v12;
  unint64_t v14 = v11 - 1;
  *((void *)a2 + 1) = v12 + 1;
  *((void *)a2 + 2) = v14;
  v3[1] = v13;
  BOOL v154 = v14 >= 4;
  unint64_t v15 = v14 - 4;
  if (v154) {
    goto LABEL_9;
  }
LABEL_36:
  unsigned int v74 = Bytestream::uSlow(a2, 4);
  unint64_t v75 = *((void *)a2 + 2);
  v3[2] = v74;
  BOOL v154 = v75 >= 2;
  unint64_t v18 = v75 - 2;
  if (!v154)
  {
LABEL_10:
    unsigned int v19 = Bytestream::uSlow(a2, 2);
    unint64_t v20 = *((void *)a2 + 2);
    v3[3] = v19;
    BOOL v154 = v20 >= 2;
    unint64_t v21 = v20 - 2;
    if (!v154) {
      goto LABEL_11;
    }
    goto LABEL_40;
  }
LABEL_38:
  int32x4_t v76 = (unsigned __int16 *)*((void *)a2 + 1);
  unsigned int v77 = *v76;
  *((void *)a2 + 1) = v76 + 1;
  *((void *)a2 + 2) = v18;
  v3[3] = bswap32(v77) >> 16;
  BOOL v154 = v18 >= 2;
  unint64_t v21 = v18 - 2;
  if (!v154)
  {
LABEL_11:
    unsigned int v22 = Bytestream::uSlow(a2, 2);
    unint64_t v21 = *((void *)a2 + 2);
    v3[4] = v22;
    if (v21) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_40:
  int32x4_t v78 = (unsigned __int16 *)*((void *)a2 + 1);
  unsigned int v79 = *v78;
  *((void *)a2 + 1) = v78 + 1;
  *((void *)a2 + 2) = v21;
  v3[4] = bswap32(v79) >> 16;
  if (v21)
  {
LABEL_12:
    int16x8_t v23 = (unsigned __int8 *)*((void *)a2 + 1);
    unsigned int v24 = *v23;
    unint64_t v25 = v21 - 1;
    *((void *)a2 + 1) = v23 + 1;
    *((void *)a2 + 2) = v25;
    v3[5] = v24;
    if (v25) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
LABEL_41:
  unsigned int v80 = Bytestream::uSlow(a2, 1);
  unint64_t v25 = *((void *)a2 + 2);
  v3[5] = v80;
  if (v25)
  {
LABEL_13:
    int16x8_t v26 = (unsigned __int8 *)*((void *)a2 + 1);
    unsigned int v27 = *v26;
    unint64_t v28 = v25 - 1;
    *((void *)a2 + 1) = v26 + 1;
    *((void *)a2 + 2) = v28;
    v3[6] = v27;
    if (v28) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }
LABEL_42:
  unsigned int v81 = Bytestream::uSlow(a2, 1);
  unint64_t v28 = *((void *)a2 + 2);
  v3[6] = v81;
  if (v28)
  {
LABEL_14:
    int16x8_t v29 = (unsigned __int8 *)*((void *)a2 + 1);
    unsigned int v30 = *v29;
    unint64_t v31 = v28 - 1;
    *((void *)a2 + 1) = v29 + 1;
    *((void *)a2 + 2) = v31;
    v3[7] = v30;
    if (v31) {
      goto LABEL_15;
    }
LABEL_44:
    unsigned int v83 = Bytestream::uSlow(a2, 1);
    unint64_t v84 = *((void *)a2 + 2);
    v3[8] = v83;
    BOOL v154 = v84 >= 2;
    unint64_t v35 = v84 - 2;
    if (!v154) {
      goto LABEL_45;
    }
LABEL_17:
    int16x8_t v36 = (unsigned __int16 *)*((void *)a2 + 1);
    unsigned int v37 = bswap32(*v36);
    *((void *)a2 + 1) = v36 + 1;
    *((void *)a2 + 2) = v35;
    v3[9] = HIWORD(v37) & 3;
    BOOL v154 = v35 >= 2;
    unint64_t v38 = v35 - 2;
    if (!v154) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_43:
  unsigned int v82 = Bytestream::uSlow(a2, 1);
  unint64_t v31 = *((void *)a2 + 2);
  v3[7] = v82;
  if (!v31) {
    goto LABEL_44;
  }
LABEL_15:
  int16x8_t v32 = (unsigned __int8 *)*((void *)a2 + 1);
  unsigned int v33 = *v32;
  unint64_t v34 = v31 - 1;
  *((void *)a2 + 1) = v32 + 1;
  *((void *)a2 + 2) = v34;
  v3[8] = v33;
  BOOL v154 = v34 >= 2;
  unint64_t v35 = v34 - 2;
  if (v154) {
    goto LABEL_17;
  }
LABEL_45:
  char v85 = Bytestream::uSlow(a2, 2);
  unint64_t v86 = *((void *)a2 + 2);
  v3[9] = v85 & 3;
  BOOL v154 = v86 >= 2;
  unint64_t v38 = v86 - 2;
  if (!v154)
  {
LABEL_18:
    unsigned int v39 = Bytestream::uSlow(a2, 2);
    unint64_t v40 = *((void *)a2 + 2);
    v3[10] = v39;
    BOOL v154 = v40 >= 4;
    unint64_t v41 = v40 - 4;
    if (!v154) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_47:
  int8x16_t v87 = (unsigned __int16 *)*((void *)a2 + 1);
  unsigned int v88 = *v87;
  *((void *)a2 + 1) = v87 + 1;
  *((void *)a2 + 2) = v38;
  v3[10] = bswap32(v88) >> 16;
  BOOL v154 = v38 >= 4;
  unint64_t v41 = v38 - 4;
  if (!v154)
  {
LABEL_19:
    double v42 = Bytestream::fp32Slow(a2);
    unint64_t v43 = *((void *)a2 + 2);
    v3[11] = LODWORD(v42);
    BOOL v154 = v43 >= 4;
    unint64_t v44 = v43 - 4;
    if (!v154) {
      goto LABEL_20;
    }
    goto LABEL_51;
  }
LABEL_49:
  int8x16_t v89 = (unsigned int *)*((void *)a2 + 1);
  unsigned int v90 = *v89;
  *((void *)a2 + 1) = v89 + 1;
  *((void *)a2 + 2) = v41;
  v3[11] = bswap32(v90);
  BOOL v154 = v41 >= 4;
  unint64_t v44 = v41 - 4;
  if (!v154)
  {
LABEL_20:
    double v45 = Bytestream::fp32Slow(a2);
    unint64_t v44 = *((void *)a2 + 2);
    v3[12] = LODWORD(v45);
    if (v44 <= 3) {
      goto LABEL_21;
    }
    goto LABEL_52;
  }
LABEL_51:
  int32x4_t v91 = (unsigned int *)*((void *)a2 + 1);
  unsigned int v92 = bswap32(*v91);
  *((void *)a2 + 1) = v91 + 1;
  *((void *)a2 + 2) = v44;
  v3[12] = v92;
  if (v44 <= 3)
  {
LABEL_21:
    double v46 = Bytestream::fp32Slow(a2);
    unint64_t v47 = *((void *)a2 + 2);
    v3[13] = LODWORD(v46);
    if (v47 <= 3) {
      goto LABEL_22;
    }
    goto LABEL_53;
  }
LABEL_52:
  int32x4_t v93 = (unsigned int *)*((void *)a2 + 1);
  unsigned int v94 = bswap32(*v93);
  unint64_t v47 = v44 - 4;
  *((void *)a2 + 1) = v93 + 1;
  *((void *)a2 + 2) = v47;
  v3[13] = v94;
  if (v47 <= 3)
  {
LABEL_22:
    double v48 = Bytestream::fp32Slow(a2);
    unint64_t v49 = *((void *)a2 + 2);
    v3[14] = LODWORD(v48);
    if (v49 <= 3) {
      goto LABEL_23;
    }
    goto LABEL_54;
  }
LABEL_53:
  int8x16_t v95 = (unsigned int *)*((void *)a2 + 1);
  unsigned int v96 = bswap32(*v95);
  unint64_t v49 = v47 - 4;
  *((void *)a2 + 1) = v95 + 1;
  *((void *)a2 + 2) = v49;
  v3[14] = v96;
  if (v49 <= 3)
  {
LABEL_23:
    double v50 = Bytestream::fp32Slow(a2);
    unint64_t v51 = *((void *)a2 + 2);
    v3[15] = LODWORD(v50);
    if (v51 <= 3) {
      goto LABEL_24;
    }
    goto LABEL_55;
  }
LABEL_54:
  int32x4_t v97 = (unsigned int *)*((void *)a2 + 1);
  unsigned int v98 = bswap32(*v97);
  unint64_t v51 = v49 - 4;
  *((void *)a2 + 1) = v97 + 1;
  *((void *)a2 + 2) = v51;
  v3[15] = v98;
  if (v51 <= 3)
  {
LABEL_24:
    double v52 = Bytestream::fp32Slow(a2);
    unint64_t v53 = *((void *)a2 + 2);
    v3[16] = LODWORD(v52);
    if (v53 <= 3) {
      goto LABEL_25;
    }
    goto LABEL_56;
  }
LABEL_55:
  int32x4_t v99 = (unsigned int *)*((void *)a2 + 1);
  unsigned int v100 = bswap32(*v99);
  unint64_t v53 = v51 - 4;
  *((void *)a2 + 1) = v99 + 1;
  *((void *)a2 + 2) = v53;
  v3[16] = v100;
  if (v53 <= 3)
  {
LABEL_25:
    double v54 = Bytestream::fp32Slow(a2);
    unint64_t v55 = *((void *)a2 + 2);
    v3[17] = LODWORD(v54);
    if (v55 <= 3) {
      goto LABEL_26;
    }
    goto LABEL_57;
  }
LABEL_56:
  int32x4_t v101 = (unsigned int *)*((void *)a2 + 1);
  unsigned int v102 = bswap32(*v101);
  unint64_t v55 = v53 - 4;
  *((void *)a2 + 1) = v101 + 1;
  *((void *)a2 + 2) = v55;
  v3[17] = v102;
  if (v55 <= 3)
  {
LABEL_26:
    double v56 = Bytestream::fp32Slow(a2);
    unint64_t v57 = *((void *)a2 + 2);
    v3[18] = LODWORD(v56);
    if (v57 <= 3) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }
LABEL_57:
  int32x4_t v103 = (unsigned int *)*((void *)a2 + 1);
  unsigned int v104 = bswap32(*v103);
  unint64_t v57 = v55 - 4;
  *((void *)a2 + 1) = v103 + 1;
  *((void *)a2 + 2) = v57;
  v3[18] = v104;
  if (v57 <= 3)
  {
LABEL_27:
    double v58 = Bytestream::fp32Slow(a2);
    unint64_t v59 = *((void *)a2 + 2);
    v3[19] = LODWORD(v58);
    if (v59 <= 3) {
      goto LABEL_28;
    }
    goto LABEL_59;
  }
LABEL_58:
  int8x16_t v105 = (unsigned int *)*((void *)a2 + 1);
  unsigned int v106 = bswap32(*v105);
  unint64_t v59 = v57 - 4;
  *((void *)a2 + 1) = v105 + 1;
  *((void *)a2 + 2) = v59;
  v3[19] = v106;
  if (v59 <= 3)
  {
LABEL_28:
    double v60 = Bytestream::fp32Slow(a2);
    unint64_t v61 = *((void *)a2 + 2);
    v3[20] = LODWORD(v60);
    if (v61 <= 3) {
      goto LABEL_29;
    }
    goto LABEL_60;
  }
LABEL_59:
  int8x16_t v107 = (unsigned int *)*((void *)a2 + 1);
  unsigned int v108 = bswap32(*v107);
  unint64_t v61 = v59 - 4;
  *((void *)a2 + 1) = v107 + 1;
  *((void *)a2 + 2) = v61;
  v3[20] = v108;
  if (v61 <= 3)
  {
LABEL_29:
    double v62 = Bytestream::fp32Slow(a2);
    unint64_t v63 = *((void *)a2 + 2);
    v3[21] = LODWORD(v62);
    if (v63 <= 3) {
      goto LABEL_30;
    }
    goto LABEL_61;
  }
LABEL_60:
  int8x16_t v109 = (unsigned int *)*((void *)a2 + 1);
  unsigned int v110 = bswap32(*v109);
  unint64_t v63 = v61 - 4;
  *((void *)a2 + 1) = v109 + 1;
  *((void *)a2 + 2) = v63;
  v3[21] = v110;
  if (v63 <= 3)
  {
LABEL_30:
    double v64 = Bytestream::fp32Slow(a2);
    unint64_t v65 = *((void *)a2 + 2);
    v3[22] = LODWORD(v64);
    BOOL v154 = v65 >= 2;
    unint64_t v66 = v65 - 2;
    if (!v154) {
      goto LABEL_31;
    }
LABEL_63:
    int8x16_t v114 = (unsigned __int16 *)*((void *)a2 + 1);
    unsigned int v115 = *v114;
    *((void *)a2 + 1) = v114 + 1;
    *((void *)a2 + 2) = v66;
    v3[23] = bswap32(v115) >> 16;
    BOOL v154 = v66 >= 2;
    unint64_t v69 = v66 - 2;
    if (!v154) {
      goto LABEL_32;
    }
LABEL_65:
    int8x16_t v116 = (unsigned __int16 *)*((void *)a2 + 1);
    unsigned int v70 = bswap32(*v116) >> 16;
    *((void *)a2 + 1) = v116 + 1;
    *((void *)a2 + 2) = v69;
    goto LABEL_66;
  }
LABEL_61:
  int32x4_t v111 = (unsigned int *)*((void *)a2 + 1);
  unsigned int v112 = *v111;
  unint64_t v113 = v63 - 4;
  *((void *)a2 + 1) = v111 + 1;
  *((void *)a2 + 2) = v113;
  v3[22] = bswap32(v112);
  BOOL v154 = v113 >= 2;
  unint64_t v66 = v113 - 2;
  if (v154) {
    goto LABEL_63;
  }
LABEL_31:
  unsigned int v67 = Bytestream::uSlow(a2, 2);
  unint64_t v68 = *((void *)a2 + 2);
  v3[23] = v67;
  BOOL v154 = v68 >= 2;
  unint64_t v69 = v68 - 2;
  if (v154) {
    goto LABEL_65;
  }
LABEL_32:
  unsigned int v70 = Bytestream::uSlow(a2, 2);
LABEL_66:
  v3[24] = (v70 >> 5) & 1;
  int8x8_t v117 = vand_s8((int8x8_t)vshl_u32((uint32x2_t)vdup_n_s32(v70), (uint32x2_t)-4), (int8x8_t)0x700000001);
  *(int8x8_t *)(v3 + 25) = v117;
  v3[27] = v70 & 1;
  int v242 = v3;
  if ((v70 & 1) == 0)
  {
    int v239 = 1;
    if (!v117.i32[0]) {
      goto LABEL_124;
    }
    goto LABEL_68;
  }
  float32x4_t v147 = v3;
  uint64_t v148 = 0;
  unsigned int v244 = v147 + 28;
  char v149 = 1;
  do
  {
    uint64_t v162 = *((void *)a2 + 2);
    if (v162)
    {
      float32x4_t v163 = (unsigned __int8 *)*((void *)a2 + 1);
      __int16 v165 = *v163;
      int v164 = *v163;
      uint64_t v166 = v162 - 1;
      *((void *)a2 + 1) = v163 + 1;
      *((void *)a2 + 2) = v166;
      float32x4_t v167 = &v244[v148];
      int v247 = v164;
      LOWORD(v244[v148]) = v165;
      if (v166) {
        goto LABEL_109;
      }
    }
    else
    {
      int v188 = Bytestream::uSlow(a2, 1);
      uint64_t v166 = *((void *)a2 + 2);
      float32x4_t v167 = &v244[v148];
      int v247 = v188;
      LOWORD(v244[v148]) = v188;
      if (v166)
      {
LABEL_109:
        float32x4_t v168 = (unsigned __int8 *)*((void *)a2 + 1);
        __int16 v170 = *v168;
        int v169 = *v168;
        uint64_t v171 = v166 - 1;
        *((void *)a2 + 1) = v168 + 1;
        *((void *)a2 + 2) = v171;
        *((_WORD *)v167 + 1) = v170;
        if (v171) {
          goto LABEL_110;
        }
        goto LABEL_117;
      }
    }
    int v169 = Bytestream::uSlow(a2, 1);
    uint64_t v171 = *((void *)a2 + 2);
    *((_WORD *)v167 + 1) = v169;
    if (v171)
    {
LABEL_110:
      float32x4_t v172 = (unsigned __int8 *)*((void *)a2 + 1);
      __int16 v174 = *v172;
      int v173 = *v172;
      uint64_t v175 = v171 - 1;
      *((void *)a2 + 1) = v172 + 1;
      *((void *)a2 + 2) = v175;
      *((_WORD *)v167 + 2) = v174;
      if (v175) {
        goto LABEL_111;
      }
      goto LABEL_118;
    }
LABEL_117:
    int v173 = Bytestream::uSlow(a2, 1);
    uint64_t v175 = *((void *)a2 + 2);
    *((_WORD *)v167 + 2) = v173;
    if (v175)
    {
LABEL_111:
      float32x4_t v176 = (unsigned __int8 *)*((void *)a2 + 1);
      __int16 v178 = *v176;
      int v177 = *v176;
      uint64_t v179 = v175 - 1;
      *((void *)a2 + 1) = v176 + 1;
      *((void *)a2 + 2) = v179;
      *((_WORD *)v167 + 3) = v178;
      if (v179) {
        goto LABEL_112;
      }
      goto LABEL_119;
    }
LABEL_118:
    int v177 = Bytestream::uSlow(a2, 1);
    uint64_t v179 = *((void *)a2 + 2);
    *((_WORD *)v167 + 3) = v177;
    if (v179)
    {
LABEL_112:
      float32x4_t v180 = (unsigned __int8 *)*((void *)a2 + 1);
      __int16 v182 = *v180;
      int v181 = *v180;
      uint64_t v183 = v179 - 1;
      *((void *)a2 + 1) = v180 + 1;
      *((void *)a2 + 2) = v183;
      *((_WORD *)v167 + 4) = v182;
      if (v183) {
        goto LABEL_113;
      }
      goto LABEL_120;
    }
LABEL_119:
    int v181 = Bytestream::uSlow(a2, 1);
    uint64_t v183 = *((void *)a2 + 2);
    *((_WORD *)v167 + 4) = v181;
    if (v183)
    {
LABEL_113:
      float32x4_t v184 = (unsigned __int8 *)*((void *)a2 + 1);
      __int16 v186 = *v184;
      int v185 = *v184;
      uint64_t v187 = v183 - 1;
      *((void *)a2 + 1) = v184 + 1;
      *((void *)a2 + 2) = v187;
      *((_WORD *)v167 + 5) = v186;
      if (!v187) {
        goto LABEL_78;
      }
      goto LABEL_121;
    }
LABEL_120:
    int v185 = Bytestream::uSlow(a2, 1);
    uint64_t v187 = *((void *)a2 + 2);
    *((_WORD *)v167 + 5) = v185;
    if (!v187)
    {
LABEL_78:
      int v150 = Bytestream::uSlow(a2, 1);
      uint64_t v151 = *((void *)a2 + 2);
      *((_WORD *)v167 + 6) = v150;
      if (v151) {
        goto LABEL_79;
      }
      goto LABEL_122;
    }
LABEL_121:
    float32x4_t v189 = (unsigned __int8 *)*((void *)a2 + 1);
    __int16 v190 = *v189;
    int v150 = *v189;
    uint64_t v151 = v187 - 1;
    *((void *)a2 + 1) = v189 + 1;
    *((void *)a2 + 2) = v151;
    *((_WORD *)v167 + 6) = v190;
    if (v151)
    {
LABEL_79:
      float32x4_t v152 = (unsigned __int8 *)*((void *)a2 + 1);
      int v153 = *v152;
      *((void *)a2 + 1) = v152 + 1;
      *((void *)a2 + 2) = v151 - 1;
      goto LABEL_80;
    }
LABEL_122:
    int v153 = Bytestream::uSlow(a2, 1);
LABEL_80:
    *((_WORD *)v167 + 7) = v153;
    BOOL v154 = (v153 - 64) >= 0xFFFFFFC1 && (v150 - 64) >= 0xFFFFFFC1;
    char v161 = !v154
        || (v185 - 64) < 0xFFFFFFC1
        || (v181 - 64) < 0xFFFFFFC1
        || (v177 - 64) < 0xFFFFFFC1
        || (v173 - 64) < 0xFFFFFFC1
        || (v169 - 64) < 0xFFFFFFC1
        || (v247 - 64) < 0xFFFFFFC1;
    if (v161) {
      char v149 = 0;
    }
    v148 += 4;
  }
  while ((v148 * 4) != 128);
  unint64_t v3 = v242;
  int v239 = v149 & 1;
  if (!v242[25])
  {
LABEL_124:
    BOOL v191 = 1;
    goto LABEL_157;
  }
LABEL_68:
  unint64_t v118 = *((void *)a2 + 2);
  BOOL v154 = v118 >= 2;
  unint64_t v119 = v118 - 2;
  if (v154)
  {
    int8x16_t v120 = (unsigned __int16 *)*((void *)a2 + 1);
    unsigned int v121 = bswap32(*v120);
    unsigned int v122 = HIWORD(v121);
    *((void *)a2 + 1) = v120 + 1;
    *((void *)a2 + 2) = v119;
    *((_WORD *)v3 + 120) = HIWORD(v121);
    BOOL v154 = v119 >= 2;
    unint64_t v123 = v119 - 2;
    if (!v154) {
      goto LABEL_71;
    }
  }
  else
  {
    __int16 v192 = Bytestream::uSlow(a2, 2);
    LOWORD(v122) = v192;
    unint64_t v193 = *((void *)a2 + 2);
    *((_WORD *)v3 + 120) = v192;
    BOOL v154 = v193 >= 2;
    unint64_t v123 = v193 - 2;
    if (!v154)
    {
LABEL_71:
      LOWORD(v124) = Bytestream::uSlow(a2, 2);
      LOWORD(v122) = *((_WORD *)v3 + 120);
      unint64_t v123 = *((void *)a2 + 2);
      *((_WORD *)v3 + 121) = v124;
      if (v123 <= 1) {
        goto LABEL_72;
      }
LABEL_128:
      float32x4_t v196 = (unsigned __int16 *)*((void *)a2 + 1);
      unsigned int v197 = bswap32(*v196);
      unsigned int v125 = HIWORD(v197);
      unint64_t v127 = v123 - 2;
      *((void *)a2 + 1) = v196 + 1;
      *((void *)a2 + 2) = v127;
      *((_WORD *)v3 + 122) = HIWORD(v197);
      unsigned __int16 v246 = v124;
      if (v127 > 1) {
        goto LABEL_129;
      }
LABEL_73:
      LOWORD(v128) = Bytestream::uSlow(a2, 2);
      unsigned __int16 v129 = *((_WORD *)v3 + 122);
      unint64_t v130 = *((void *)a2 + 2);
      *((_WORD *)v3 + 123) = v128;
      if (v130 <= 1) {
        goto LABEL_74;
      }
LABEL_130:
      int16x8_t v200 = (unsigned __int16 *)*((void *)a2 + 1);
      unsigned int v201 = bswap32(*v200);
      unsigned int v131 = HIWORD(v201);
      unint64_t v133 = v130 - 2;
      *((void *)a2 + 1) = v200 + 1;
      *((void *)a2 + 2) = v133;
      *((_WORD *)v3 + 124) = HIWORD(v201);
      unsigned __int16 v243 = v128;
      if (v133 > 1) {
        goto LABEL_131;
      }
LABEL_75:
      LOWORD(v134) = Bytestream::uSlow(a2, 2);
      unsigned __int16 v135 = *((_WORD *)v3 + 124);
      unint64_t v136 = *((void *)a2 + 2);
      *((_WORD *)v3 + 125) = v134;
      if (v136 <= 1) {
        goto LABEL_76;
      }
LABEL_132:
      int8x16_t v204 = (unsigned __int16 *)*((void *)a2 + 1);
      unsigned int v144 = bswap32(*v204) >> 16;
      unint64_t v146 = v136 - 2;
      *((void *)a2 + 1) = v204 + 1;
      *((void *)a2 + 2) = v136 - 2;
      unsigned __int16 v145 = v134;
      goto LABEL_133;
    }
  }
  float32x4_t v194 = (unsigned __int16 *)*((void *)a2 + 1);
  unsigned int v195 = bswap32(*v194);
  unsigned int v124 = HIWORD(v195);
  *((void *)a2 + 1) = v194 + 1;
  *((void *)a2 + 2) = v123;
  *((_WORD *)v3 + 121) = HIWORD(v195);
  if (v123 > 1) {
    goto LABEL_128;
  }
LABEL_72:
  LOWORD(v125) = Bytestream::uSlow(a2, 2);
  unsigned __int16 v126 = *((_WORD *)v3 + 121);
  unint64_t v127 = *((void *)a2 + 2);
  *((_WORD *)v3 + 122) = v125;
  unsigned __int16 v246 = v126;
  if (v127 <= 1) {
    goto LABEL_73;
  }
LABEL_129:
  float32x4_t v198 = (unsigned __int16 *)*((void *)a2 + 1);
  unsigned int v199 = bswap32(*v198);
  unsigned int v128 = HIWORD(v199);
  unint64_t v130 = v127 - 2;
  *((void *)a2 + 1) = v198 + 1;
  *((void *)a2 + 2) = v130;
  unsigned __int16 v129 = v125;
  *((_WORD *)v3 + 123) = HIWORD(v199);
  if (v130 > 1) {
    goto LABEL_130;
  }
LABEL_74:
  LOWORD(v131) = Bytestream::uSlow(a2, 2);
  unsigned __int16 v132 = *((_WORD *)v3 + 123);
  unint64_t v133 = *((void *)a2 + 2);
  *((_WORD *)v3 + 124) = v131;
  unsigned __int16 v243 = v132;
  if (v133 <= 1) {
    goto LABEL_75;
  }
LABEL_131:
  int32x4_t v202 = (unsigned __int16 *)*((void *)a2 + 1);
  unsigned int v203 = bswap32(*v202);
  unsigned int v134 = HIWORD(v203);
  unint64_t v136 = v133 - 2;
  *((void *)a2 + 1) = v202 + 1;
  *((void *)a2 + 2) = v136;
  unsigned __int16 v135 = v131;
  *((_WORD *)v3 + 125) = HIWORD(v203);
  if (v136 > 1) {
    goto LABEL_132;
  }
LABEL_76:
  __int16 v137 = v131;
  __int16 v138 = v128;
  __int16 v139 = v125;
  __int16 v140 = v124;
  __int16 v141 = v122;
  unsigned __int16 v142 = v129;
  unsigned __int16 v143 = v135;
  LOWORD(v144) = Bytestream::uSlow(a2, 2);
  unsigned __int16 v135 = v143;
  unsigned __int16 v129 = v142;
  LOWORD(v122) = v141;
  LOWORD(v124) = v140;
  LOWORD(v125) = v139;
  LOWORD(v128) = v138;
  LOWORD(v131) = v137;
  unsigned __int16 v145 = *((_WORD *)v3 + 125);
  unint64_t v146 = *((void *)a2 + 2);
LABEL_133:
  unsigned int v205 = (unsigned __int16)v122;
  unsigned int v206 = (unsigned __int16)v124;
  unsigned int v207 = v246;
  unsigned int v208 = (unsigned __int16)v125;
  unsigned int v209 = v129;
  unsigned int v210 = (unsigned __int16)v128;
  unsigned int v211 = v243;
  unsigned int v212 = (unsigned __int16)v131;
  unsigned int v213 = v135;
  unsigned int v214 = (unsigned __int16)v134;
  *((_WORD *)v3 + 126) = v144;
  unsigned int v215 = v145;
  unsigned int v216 = (unsigned __int16)v144;
  if (v146 <= 1)
  {
    unsigned int v248 = v243;
    unsigned int v219 = v205;
    unsigned int v220 = v206;
    unsigned int v237 = (unsigned __int16)v144;
    unsigned int v238 = v207;
    unsigned int v221 = v208;
    unsigned int v222 = v210;
    unsigned int v245 = v214;
    LOWORD(v144) = Bytestream::uSlow(a2, 2);
    unsigned int v216 = v237;
    unsigned int v207 = v238;
    unsigned int v214 = v245;
    unsigned int v211 = v248;
    unsigned int v210 = v222;
    unsigned int v208 = v221;
    unsigned int v206 = v220;
    unsigned int v205 = v219;
    LOWORD(v218) = v144;
    LOWORD(v144) = *((_WORD *)v3 + 126);
  }
  else
  {
    int8x16_t v217 = (unsigned __int16 *)*((void *)a2 + 1);
    unsigned int v218 = bswap32(*v217) >> 16;
    *((void *)a2 + 1) = v217 + 1;
    *((void *)a2 + 2) = v146 - 2;
  }
  *((_WORD *)v3 + 127) = v218;
  BOOL v191 = (unsigned __int16)v218 > (unsigned __int16)v144
      && v216 > v215
      && v214 > v213
      && v212 > v211
      && v210 > v209
      && v208 > v207
      && v206 > v205;
LABEL_157:
  uint64_t v229 = 0;
  int32x4_t v230 = v241;
  do
  {
    uint64_t v231 = v230[1];
    int32x4_t v230 = (void *)v230[2];
    v229 += v231;
  }
  while (v230);
  if (*(unsigned char *)a2) {
    return 0;
  }
  if (v240 - v229 > (unint64_t)*v242) {
    return 0;
  }
  unsigned int v232 = v242[1];
  if (v232 != 1 && (v232 || v242[25])) {
    return 0;
  }
  uint64_t result = 0;
  unsigned int v234 = v242[3];
  if (v234)
  {
    if ((v234 & 1) == 0)
    {
      uint64_t result = 0;
      unsigned int v235 = v242[4];
      if (v235)
      {
        if ((v235 & 1) == 0)
        {
          int v236 = v239;
          if (v242[26] >= 5) {
            int v236 = 0;
          }
          return v236 & v191;
        }
      }
    }
  }
  return result;
}

uint64_t Bytestream::f32(Bytestream *this)
{
  unint64_t v1 = *((void *)this + 2);
  if (v1 < 4) {
    return Bytestream::uSlow(this, 4);
  }
  int v2 = (unsigned int *)*((void *)this + 1);
  unsigned int v3 = *v2;
  *((void *)this + 1) = v2 + 1;
  *((void *)this + 2) = v1 - 4;
  return bswap32(v3);
}

uint64_t PRRFrameDecoder::decode(uint64_t a1, int8x16_t *this, uint64_t a3, uint64_t a4, int a5)
{
  unint64_t v10 = 0;
  uint64_t v143 = *MEMORY[0x263EF8340];
  unint64_t v11 = &this->i8[8];
  int8x16_t v107 = &this->i8[8];
  do
  {
    uint64_t v12 = *((void *)v11 + 1);
    unint64_t v11 = (__int8 *)*((void *)v11 + 2);
    v10 += v12;
  }
  while (v11);
  unint64_t v13 = this[1].u64[0];
  BOOL v86 = v13 >= 4;
  unint64_t v14 = v13 - 4;
  if (v86)
  {
    unint64_t v15 = (unsigned int *)this->i64[1];
    uint64_t v16 = bswap32(*v15);
    this->i64[1] = (uint64_t)(v15 + 1);
    this[1].i64[0] = v14;
    uint64_t result = 4294967294;
    if (!v16) {
      return result;
    }
  }
  else
  {
    uint64_t v16 = Bytestream::uSlow((Bytestream *)this, 4);
    uint64_t result = 4294967294;
    if (!v16) {
      return result;
    }
  }
  if (v10 >= v16)
  {
    unint64_t v18 = this[1].u64[0];
    BOOL v86 = v18 >= 4;
    unint64_t v19 = v18 - 4;
    if (v86)
    {
      unint64_t v20 = (unsigned int *)this->i64[1];
      unsigned int v21 = bswap32(*v20);
      this->i64[1] = (uint64_t)(v20 + 1);
      this[1].i64[0] = v19;
      if (v21 != 1886548582) {
        return 4294967294;
      }
    }
    else
    {
      int v22 = Bytestream::uSlow((Bytestream *)this, 4);
      if (v22 != 1886548582) {
        return 4294967294;
      }
    }
    int8x16_t v23 = this[1];
    v123[0] = *this;
    v123[1] = v23;
    if (!FrameHeader::parse((unsigned int *)&v124, (Bytestream *)v123)) {
      return 4294967294;
    }
    unint64_t v24 = this[1].u64[0];
    BOOL v86 = v24 >= v124;
    unint64_t v25 = v24 - v124;
    if (v86)
    {
      this->i64[1] += v124;
      this[1].i64[0] = v25;
      if (this->i8[0]) {
        return 4294967294;
      }
    }
    else
    {
      Bytestream::blockSkipOffsetAssign((uint64_t)this, v124);
      if (this->i8[0]) {
        return 4294967294;
      }
    }
    v26.i64[1] = v127.i64[1];
    *(int16x4_t *)v26.i8 = vmovn_s32(v127);
    *(_DWORD *)(a3 + 56) = vmovn_s16(v26).u32[0];
    int v27 = v129;
    *(_DWORD *)(a3 + 60) = v128;
    *(_DWORD *)(a3 + 64) = 256;
    *(_DWORD *)(a3 + 68) = v27 + 256;
    *(_OWORD *)(a3 + 72) = v130;
    *(_OWORD *)(a3 + 88) = v131;
    *(_OWORD *)(a3 + 104) = v132;
    char v28 = v136;
    *(_DWORD *)(a3 + 120) = v133;
    unsigned int v29 = v126;
    unsigned int v30 = (v125 + 15) >> 4;
    int v104 = calculateNumberOfSlicesPerMBRow(v30, v28);
    if (a4 > 3
      || (a5 & 1) == 0 && (*(_DWORD *)(a3 + 40) < v125 >> a4 || *(_DWORD *)(a3 + 44) < v126 >> a4))
    {
      return 4294967293;
    }
    int v117 = a4;
    if (a4 < 2)
    {
      unsigned int v102 = v126 >> a4;
      int v118 = 6;
      unint64_t v119 = &kBlockScanTables;
      unint64_t v31 = PRRDiscreteCosineTransform::idct_8x8;
      if (*(unsigned char *)(a1 + 60)) {
        unint64_t v31 = PRRDiscreteCosineTransform::idct_8x8_AVX;
      }
    }
    else
    {
      unsigned int v102 = v126 >> a4;
      if (a4 == 3)
      {
        int v118 = 2;
        unint64_t v119 = &unk_262D478D0;
        unint64_t v31 = PRRDiscreteCosineTransform::idct_2x2;
      }
      else
      {
        int v118 = 4;
        unint64_t v119 = &unk_262D478C0;
        unint64_t v31 = PRRDiscreteCosineTransform::idct_4x4;
      }
    }
    int8x16_t v120 = v31;
    if (v135 == 1) {
      int16x8_t v32 = &v139;
    }
    else {
      int16x8_t v32 = 0;
    }
    PRRSenselWriter::PRRSenselWriter(&v114, *(unsigned int *)(a3 + 36), *(unsigned int *)(a3 + 60), a3, *(int *)(a3 + 32), v32, a4, *(unsigned int *)(a1 + 56));
    unsigned int v121 = &v114;
    if (!v116 && !a5) {
      return 0xFFFFFFFFLL;
    }
    unsigned int v99 = v30;
    unsigned int v33 = v29 + 15;
    unsigned int v34 = v33 >> 4;
    if (v137) {
      unint64_t v35 = (unsigned __int16 *)&v138;
    }
    else {
      unint64_t v35 = (unsigned __int16 *)&PRRMacroblock::DefaultQuantizationMatrix;
    }
    unsigned int v122 = v35;
    std::vector<PRRDecoderJob>::resize(a1, v33 >> 4);
    std::vector<PRRSliceDecodeParams>::resize(a1 + 24, v34 * v104);
    int8x16_t v36 = this[1];
    int8x16_t v112 = *this;
    int8x16_t v113 = v36;
    unint64_t v37 = 2 * v34 * v104;
    unint64_t v38 = this[1].u64[0];
    BOOL v86 = v38 >= v37;
    unint64_t v39 = v38 - v37;
    if (v86)
    {
      this->i64[1] += v37;
      this[1].i64[0] = v39;
    }
    else
    {
      Bytestream::blockSkipOffsetAssign((uint64_t)this, v37);
    }
    if (this->i8[0]) {
      return 4294967294;
    }
    int v40 = *(_DWORD *)(a3 + 36);
    uint64_t v41 = v114;
    memset(__dst, 0, sizeof(__dst));
    if (v114 >= 1) {
      memcpy(__dst, (const void *)a3, 8 * v114);
    }
    uint64_t v94 = a1;
    if (v33 < 0x10)
    {
      unsigned int v42 = 0;
      goto LABEL_107;
    }
    char v93 = a5;
    int v43 = 0;
    unsigned int v111 = 0;
    uint64_t v105 = v115;
    char v95 = v40 == 1647392369;
    unint64_t v44 = *(int8x16_t **)(a1 + 24);
    uint64_t v45 = *(void *)a1;
    if (v34 <= 1) {
      int v46 = 1;
    }
    else {
      int v46 = v34;
    }
    int v96 = v46;
    unsigned int v97 = 0x10u >> a4;
    uint64_t v108 = v41 & 0xFFFFFFFC;
    unsigned int v47 = v102;
    uint64_t v98 = a3;
LABEL_56:
    *(void *)uint64_t v45 = v44;
    *(_DWORD *)(v45 + 8) = v104;
    int8x16_t v140 = 0u;
    int8x16_t v141 = 0u;
    int v101 = v43;
    if (v41 == 1)
    {
      v140.i64[0] = __dst[0].i64[0];
    }
    else
    {
      switch(*(_DWORD *)(a3 + 60))
      {
        case 0:
          int8x16_t v140 = vextq_s8(*(int8x16_t *)((char *)__dst + 8), *(int8x16_t *)((char *)__dst + 8), 8uLL);
          v141.i64[0] = __dst[1].i64[1];
          v141.i64[1] = __dst[0].i64[0];
          break;
        case 1:
          int8x16_t v141 = vextq_s8(*(int8x16_t *)((char *)__dst + 8), *(int8x16_t *)((char *)__dst + 8), 8uLL);
          v140.i64[0] = __dst[1].i64[1];
          v140.i64[1] = __dst[0].i64[0];
          break;
        case 2:
          int8x16_t v141 = *(int8x16_t *)((char *)__dst + 8);
          v140.i64[0] = __dst[0].i64[0];
          v140.i64[1] = __dst[1].i64[1];
          break;
        case 3:
          int8x16_t v140 = *(int8x16_t *)((char *)__dst + 8);
          v141.i64[0] = __dst[0].i64[0];
          v141.i64[1] = __dst[1].i64[1];
          break;
        default:
          break;
      }
    }
    uint64_t v100 = v45;
    unsigned int v48 = v97;
    unsigned int v103 = v47;
    if (v47 < v97) {
      unsigned int v48 = v47;
    }
    unsigned int v109 = v48;
    unsigned int v49 = v136;
    unsigned int v50 = v99;
    while (1)
    {
      unsigned int v51 = 1 << v49;
      unsigned int v110 = v49;
      if (v50 >= 1 << v49) {
        break;
      }
LABEL_61:
      unsigned int v49 = v110 - 1;
      if (!v50)
      {
        a3 = v98;
        if ((int)v41 >= 1)
        {
          unint64_t v71 = *(_DWORD *)(v98 + 32) * (v109 >> v95);
          if (v41 < 4)
          {
            uint64_t v72 = 0;
            goto LABEL_100;
          }
          uint64_t v73 = v41 & 0xFFFFFFFC;
          unsigned int v74 = (int64x2_t *)&__dst[1];
          do
          {
            int64x2_t v75 = vdupq_n_s64(v71);
            int64x2_t v76 = vaddq_s64(*v74, v75);
            v74[-1] = vaddq_s64(v74[-1], v75);
            *unsigned int v74 = v76;
            v74 += 2;
            v73 -= 4;
          }
          while (v73);
          uint64_t v72 = v41 & 0xFFFFFFFC;
          if (v108 != v41)
          {
LABEL_100:
            unsigned int v77 = &__dst[0].i64[v72];
            uint64_t v78 = v41 - v72;
            do
            {
              *v77++ += v71;
              --v78;
            }
            while (v78);
          }
        }
        unsigned int v47 = v103 - v109;
        uint64_t v45 = v100 + 16;
        int v43 = v101 + 1;
        if (v101 + 1 != v96) {
          goto LABEL_56;
        }
        uint64_t v16 = v16;
        LOBYTE(a5) = v93;
        unsigned int v42 = v111;
        if (!this->i8[0])
        {
LABEL_107:
          *(_DWORD *)(a3 + 124) = v42 * *v122;
          unsigned int v79 = (const void **)(a3 + 128);
          SharedDataBuffer::reset((const void **)(a3 + 128));
          if (v134)
          {
            uint64_t v80 = v16;
            char v81 = a5;
            unsigned int v82 = 0;
            int8x16_t v83 = this[1];
            int8x16_t v140 = *this;
            int8x16_t v141 = v83;
            while (1)
            {
              unsigned int v84 = Bytestream::f32((Bytestream *)&v140);
              int v85 = Bytestream::f32((Bytestream *)&v140);
              BOOL v86 = !v140.i8[0] && v84 >= 8;
              if (!v86) {
                break;
              }
              int v87 = v85;
              unint64_t v88 = v84 - 8;
              if (v141.i64[0] >= v88)
              {
                int v89 = 0;
                v140.i64[1] += v88;
                v141.i64[0] -= v88;
              }
              else
              {
                Bytestream::blockSkipOffsetAssign((uint64_t)&v140, v88);
                int v89 = v140.u8[0];
              }
              if (v89) {
                unsigned int v82 = 0;
              }
              else {
                v82 += v84;
              }
              if (v89 || v87 == 1701801316)
              {
                if (v82)
                {
                  BackingBytes = (unsigned __int8 *)SharedDataBuffer::allocateBackingBytes(v82);
                  if (BackingBytes)
                  {
                    int32x4_t v91 = BackingBytes;
                    Bytes = Bytestream::getBytes((Bytestream *)this, (size_t)v82, BackingBytes);
                    if (Bytes != v91) {
                      memcpy(v91, Bytes, (size_t)v82);
                    }
                    SharedDataBuffer::reset(v79, v91, (CFIndex)v82);
                  }
                }
                break;
              }
            }
            LOBYTE(a5) = v81;
            uint64_t v16 = v80;
          }
          if ((a5 & 1) == 0) {
            ThreadPool<PRRDecoderWorker,PRRDecoderJob,void>::runJobs(*(void **)(v94 + 48), *(void *)v94, (*(void *)(v94 + 8) - *(void *)v94) >> 4);
          }
          return v16;
        }
        return 4294967294;
      }
    }
    uint64_t v52 = 0;
    unint64_t v53 = v105 << v49;
    unsigned int v106 = v44 + 3;
    while (1)
    {
      if (v113.i64[0] < 2uLL)
      {
        unsigned int v54 = Bytestream::uSlow((Bytestream *)&v112, 2);
      }
      else
      {
        unsigned int v54 = bswap32(*(unsigned __int16 *)v112.i64[1]) >> 16;
        v112.i64[1] += 2;
        v113.i64[0] -= 2;
      }
      int8x16_t v55 = this[1];
      int8x16_t *v44 = *this;
      v44[1] = v55;
      v44[2].i32[0] = v54;
      v44[2].i32[1] = v110;
      v44[2].i32[2] = v109;
      if ((int)v41 >= 1)
      {
        uint64_t v56 = 0;
        if (v41 < 4) {
          goto LABEL_133;
        }
        if ((unint64_t)((char *)v106 + 88 * v52 - (char *)&v140) < 0x20) {
          goto LABEL_133;
        }
        unint64_t v57 = 0;
        do
        {
          int8x16_t v58 = *(int8x16_t *)((char *)&v140 + v57 + 16);
          unint64_t v59 = &v44[v57 / 0x10];
          v59[3] = *(int8x16_t *)((char *)&v140 + v57);
          v59[4] = v58;
          v57 += 32;
        }
        while (((8 * v41) & 0x7FFFFFFE0) != v57);
        uint64_t v56 = v41 & 0xFFFFFFFC;
        if (v108 != v41)
        {
LABEL_133:
          do
          {
            v44[3].i64[v56] = v140.i64[v56];
            ++v56;
          }
          while (v41 != v56);
        }
      }
      v44[5].i64[0] = (uint64_t)&v117;
      unint64_t v60 = this[1].u64[0];
      if (v60 < 2)
      {
        unsigned int v61 = Bytestream::blockSkipIndexing((Bytestream *)this, 1uLL);
        unint64_t v60 = this[1].u64[0];
      }
      else
      {
        unsigned int v61 = *(unsigned __int8 *)(*(void *)v107 + 1);
      }
      unsigned int v62 = v111;
      if (v61 > v111) {
        unsigned int v62 = v61;
      }
      unsigned int v111 = v62;
      BOOL v86 = v60 >= v54;
      unint64_t v63 = v60 - v54;
      if (v86)
      {
        this->i64[1] += v54;
        this[1].i64[0] = v63;
        if ((int)v41 < 1) {
          goto LABEL_64;
        }
      }
      else
      {
        Bytestream::blockSkipOffsetAssign((uint64_t)this, v54);
        if ((int)v41 < 1) {
          goto LABEL_64;
        }
      }
      if (v41 >= 4)
      {
        uint64_t v65 = v41 & 0xFFFFFFFC;
        unint64_t v66 = (int64x2_t *)&v141;
        do
        {
          int64x2_t v67 = vdupq_n_s64(v53);
          int64x2_t v68 = vaddq_s64(*v66, v67);
          v66[-1] = vaddq_s64(v66[-1], v67);
          int64x2_t *v66 = v68;
          v66 += 2;
          v65 -= 4;
        }
        while (v65);
        uint64_t v64 = v41 & 0xFFFFFFFC;
        if (v108 == v41) {
          goto LABEL_64;
        }
      }
      else
      {
        uint64_t v64 = 0;
      }
      unint64_t v69 = &v140.i64[v64];
      uint64_t v70 = v41 - v64;
      do
      {
        *v69++ += v53;
        --v70;
      }
      while (v70);
LABEL_64:
      unint64_t v44 = (int8x16_t *)((char *)v44 + 88);
      v50 -= v51;
      ++v52;
      if (v50 < v51) {
        goto LABEL_61;
      }
    }
  }
  return result;
}