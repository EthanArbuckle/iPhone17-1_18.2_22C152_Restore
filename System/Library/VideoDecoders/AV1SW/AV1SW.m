const void **sub_224A75758()
{
  CFDictionaryRef v0;
  const void *v2;
  CFTypeRef cf;
  void *values[2];
  void *keys[3];

  keys[2] = *(void **)MEMORY[0x263EF8340];
  cf = 0;
  keys[0] = *(void **)MEMORY[0x263F1ED20];
  keys[1] = @"CMClassImplementationID";
  values[0] = *(void **)MEMORY[0x263EFFB38];
  values[1] = @"com.apple.videotoolbox.videodecoder.av1.sw";
  v0 = CFDictionaryCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const void **)keys, (const void **)values, 2, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  v2 = 0;
  cf = v0;
  sub_224A75878(&v2);
  VTRegisterVideoDecoderWithInfo();
  return sub_224A75878(&cf);
}

void sub_224A75850(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2) {
    sub_224AAE0D0(exception_object);
  }
  _Unwind_Resume(exception_object);
}

const void **sub_224A75878(const void **a1)
{
  v2 = *a1;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

void AV1RegisterDecoder()
{
  if (atomic_load_explicit((atomic_ullong *volatile)qword_26AACF240, memory_order_acquire) != -1)
  {
    v2 = &v0;
    v1 = &v2;
    std::__call_once(qword_26AACF240, &v1, (void (__cdecl *)(void *))sub_224A75758);
  }
}

char *sub_224A7590C(int8x8_t *a1, uint64_t a2, unsigned __int32 *a3, int8x8_t *a4, int a5, uint64_t a6, int16x8_t *a7, char a8, double a9, double a10, int8x16_t a11)
{
  int16x8_t v11 = *a7;
  int16x8_t v12 = a7[1];
  if ((a8 & 4) == 0)
  {
    sub_224A75A80(v11, *(double *)v12.i64, a11, (uint64_t)a1, a2, a3, a1, a5, a6, (uint64_t)a7, a8);
    uint64_t v88 = (v87 - 1);
    if (!v88) {
      return sub_224A75BD4(v34, v35, *(double *)v41.i64, v42, (uint64_t)v36, v37, v38);
    }
    sub_224A75A80(v41, *(double *)v42.i64, v86, (uint64_t)v34, v35, v36, (int8x8_t *)(v37 + v35), v38, v88, v84, v85);
    uint64_t v93 = (v92 - 1);
    if (v93)
    {
      sub_224A75A80(v53, *(double *)v54.i64, v91, (uint64_t)v46, v47, v48, (int8x8_t *)(v49 + v47), v50, v93, v89, v90);
      uint64_t v98 = (v97 - 1);
      if (v98)
      {
        v58 = (int8x16_t *)sub_224A75C90(v58, v59, v60, (int8x8_t *)((char *)v61 + v59), v62, v65, v66, v96, v98, v94, v95);
        uint64_t v103 = (v102 - 1);
        if (v103)
        {
          v58 = (int8x16_t *)sub_224A75C90(v58, v59, v60, v61, v62, v65, v66, v101, v103, v99, v100);
          uint64_t v69 = (v104 - 1);
          if (v69) {
            goto LABEL_6;
          }
        }
      }
      goto LABEL_15;
    }
LABEL_16:
    v34 = (int8x16_t *)sub_224A75BD4(v46, v47, *(double *)v53.i64, v54, (uint64_t)v48, v49, v50);
    return sub_224A75BD4(v34, v35, *(double *)v41.i64, v42, (uint64_t)v36, v37, v38);
  }
  sub_224A75A80(v11, *(double *)v12.i64, a11, (uint64_t)a1, a2, 0, a4, a5, a6, (uint64_t)a7, a8);
  sub_224A75A80(v21, v22, v23, v14, v15, v16, (int8x8_t *)(v13 + v15), v17, v18, v19, v20);
  sub_224A75A80(v31, v32, v33, (uint64_t)v24, v25, v30, v24, v26, v27, v28, v29);
  uint64_t v45 = (v44 - 1);
  if (v45)
  {
    sub_224A75A80(v41, *(double *)v42.i64, v43, (uint64_t)v34, v35, v36, (int8x8_t *)(v37 + v35), v38, v45, v39, v40);
    uint64_t v57 = (v56 - 1);
    if (v57)
    {
      sub_224A75A80(v53, *(double *)v54.i64, v55, (uint64_t)v46, v47, v48, (int8x8_t *)(v49 + v47), v50, v57, v51, v52);
      uint64_t v69 = (v68 - 1);
      if (v69)
      {
        v61 = (int8x8_t *)((char *)v61 + v59);
        do
        {
LABEL_6:
          v58 = (int8x16_t *)sub_224A75C90(v58, v59, v60, v61, v62, v65, v66, v67, v69, v63, v64);
          uint64_t v69 = (v71 - 1);
        }
        while (v69);
        if ((v64 & 8) != 0)
        {
          v72 = (int8x16_t *)sub_224A75C90(v58, v59, 0, v70, v62, v65, v66, v67, v69, v63, v64);
          v34 = (int8x16_t *)sub_224A75C90(v72, v73, v74, v75, v76, v80, v81, v82, v77, v78, v79);
          return sub_224A75BD4(v34, v35, *(double *)v41.i64, v42, (uint64_t)v36, v37, v38);
        }
      }
LABEL_15:
      v46 = (int8x16_t *)sub_224A75BD4(v58, v59, *(double *)v65.i64, v66, (uint64_t)v60, (uint64_t)v61, v62);
      goto LABEL_16;
    }
    goto LABEL_16;
  }
  return sub_224A75BD4(v34, v35, *(double *)v41.i64, v42, (uint64_t)v36, v37, v38);
}

void sub_224A75A80(int16x8_t a1, double a2, int8x16_t a3, uint64_t a4, uint64_t a5, unsigned __int32 *a6, int8x8_t *a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a11)
  {
    if (a6)
    {
      int8x16_t v18 = *(int8x16_t *)a7->i8;
      a3.i32[3] = *a6;
      v16 = (uint8x8_t *)((char *)&a7[1] + 5);
      uint8x16_t v17 = (uint8x16_t)vextq_s8(a3, v18, 0xDuLL);
    }
    else
    {
      uint64_t v15 = (uint8x16_t *)((char *)&a7[-1] + 5);
      uint8x16_t v17 = *v15;
      v16 = (uint8x8_t *)&v15[1];
    }
  }
  else
  {
    int8x16_t v19 = *(int8x16_t *)a7->i8;
    int8x16_t v20 = vdupq_lane_s8(*a7, 0);
    v16 = (uint8x8_t *)((char *)&a7[1] + 5);
    uint8x16_t v17 = (uint8x16_t)vextq_s8(v20, v19, 0xDuLL);
  }
  uint8x8_t v22 = *v16;
  int16x8_t v21 = (uint8x16_t *)&v16[1];
  int16x8_t v23 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v17.i8);
  int16x8_t v24 = (int16x8_t)vmovl_high_u8(v17);
  int8x16_t v25 = (int8x16_t)vmovl_u8(v22);
  if ((a11 & 2) == 0)
  {
LABEL_7:
    if (a8 < 19)
    {
      v12.i8[0] = *((unsigned char *)&v21[-1] + a8 - 6);
      int v26 = (int8x16_t *)((char *)&unk_2646ECF5A - 2 * a8);
      int8x16_t v12 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v12.i8, 0);
      int16x8_t v23 = (int16x8_t)vbslq_s8(*v26, v12, (int8x16_t)v23);
      int16x8_t v24 = (int16x8_t)vbslq_s8(v26[1], v12, (int8x16_t)v24);
      int8x16_t v25 = vbslq_s8(v26[2], v12, v25);
    }
  }
  while (1)
  {
    int16x8_t v27 = (int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)v24, 6uLL);
    int16x8_t v28 = vshlq_n_s16(v27, 7uLL);
    int16x8_t v29 = vmlaq_laneq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_lane_s16(v27, *(int16x4_t *)a1.i8, 3), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)v24, 8uLL), (int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)v24, 4uLL)), a1, 4), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)v24, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)v24, 2uLL)), a1, 5), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)v24, 0xCuLL), v23), a1, 6);
    int16x8_t v30 = (int16x8_t)vextq_s8((int8x16_t)v24, v25, 6uLL);
    BOOL v31 = __OFSUB__(a8, 16);
    a8 -= 16;
    *int16x8_t v11 = vaddq_s16(vshrq_n_s16(vqaddq_s16(v29, vsubq_s16(v28, v13)), 3uLL), v14);
    v11[1] = vaddq_s16(vshrq_n_s16(vqaddq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_lane_s16(v30, *(int16x4_t *)a1.i8, 3), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v24, v25, 8uLL), (int16x8_t)vextq_s8((int8x16_t)v24, v25, 4uLL)), a1, 4), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v24, v25, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)v24, v25, 2uLL)), a1, 5), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v24, v25, 0xCuLL), v24), a1, 6),
                   vsubq_s16(vshlq_n_s16(v30, 7uLL), v13)),
                 3uLL),
               v14);
    v11 += 2;
    if ((a8 < 0) ^ v31 | (a8 == 0)) {
      break;
    }
    int16x8_t v23 = (int16x8_t)v25;
    uint8x16_t v32 = *v21++;
    int16x8_t v24 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v32.i8);
    int8x16_t v25 = (int8x16_t)vmovl_high_u8(v32);
    if ((a11 & 2) == 0) {
      goto LABEL_7;
    }
  }
}

char *sub_224A75BD4(int8x16_t *a1, uint64_t a2, double a3, int16x8_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int8x16_t v33 = a1;
  do
  {
    int16x8_t v13 = *v9;
    int16x8_t v14 = v9[1];
    v9 += 2;
    int16x8_t v15 = *v11;
    int16x8_t v16 = v11[1];
    v11 += 2;
    int16x8_t v17 = *v8;
    int16x8_t v18 = v8[1];
    v8 += 2;
    int16x8_t v19 = vaddq_s16(v15, v13);
    int16x8_t v20 = *v12;
    int16x8_t v21 = v12[1];
    v12 += 2;
    int16x8_t v22 = *v7;
    int16x8_t v23 = v7[1];
    v7 += 2;
    int16x8_t v24 = vaddq_s16(v20, v17);
    int16x8_t v25 = *v10;
    int16x8_t v26 = v10[1];
    v10 += 2;
    int16x8_t v27 = vaddq_s16(v20, v22);
    int16x8_t v28 = vaddq_s16(v16, v14);
    int16x8_t v29 = vaddq_s16(v21, v18);
    int16x8_t v30 = vaddq_s16(v21, v23);
    BOOL v31 = __OFSUB__(a7, 16);
    a7 -= 16;
    *a1++ = vqmovun_high_s16(vqmovun_s16(vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_lane_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)a4.i8, 3), *(int16x4_t *)v19.i8, a4, 4), *(int16x4_t *)v24.i8, a4, 5), *(int16x4_t *)v27.i8, a4, 6), 0xBuLL), vmlal_high_laneq_s16(vmlal_high_laneq_s16(
                      vmlal_high_laneq_s16(vmull_high_lane_s16(v25, *(int16x4_t *)a4.i8, 3), v19, a4, 4),
                      v24,
                      a4,
                      5),
                    v27,
                    a4,
                    6),
                  0xBuLL)),
              vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_lane_s16(*(int16x4_t *)v26.i8, *(int16x4_t *)a4.i8, 3), *(int16x4_t *)v28.i8, a4, 4), *(int16x4_t *)v29.i8, a4, 5), *(int16x4_t *)v30.i8, a4, 6), 0xBuLL), vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_lane_s16(v26, *(int16x4_t *)a4.i8, 3), v28, a4, 4), v29,
                    a4,
                    5),
                  v30,
                  a4,
                  6),
                0xBuLL));
  }
  while (!((a7 < 0) ^ v31 | (a7 == 0)));
  return (char *)v33 + a2;
}

char *sub_224A75C90(int8x16_t *a1, uint64_t a2, unsigned __int32 *a3, int8x8_t *a4, int a5, int16x8_t a6, int16x8_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, char a11)
{
  v61 = a1;
  if (a11)
  {
    if (a3)
    {
      int8x16_t v24 = *(int8x16_t *)a4->i8;
      a8.i32[3] = *a3;
      int16x8_t v22 = (uint8x8_t *)((char *)&a4[1] + 5);
      uint8x16_t v23 = (uint8x16_t)vextq_s8(a8, v24, 0xDuLL);
    }
    else
    {
      int16x8_t v21 = (uint8x16_t *)((char *)&a4[-1] + 5);
      uint8x16_t v23 = *v21;
      int16x8_t v22 = (uint8x8_t *)&v21[1];
    }
  }
  else
  {
    int8x16_t v25 = *(int8x16_t *)a4->i8;
    int8x16_t v26 = vdupq_lane_s8(*a4, 0);
    int16x8_t v22 = (uint8x8_t *)((char *)&a4[1] + 5);
    uint8x16_t v23 = (uint8x16_t)vextq_s8(v26, v25, 0xDuLL);
  }
  uint8x8_t v28 = *v22;
  int16x8_t v27 = (uint8x16_t *)&v22[1];
  int16x8_t v29 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v23.i8);
  int16x8_t v30 = (int16x8_t)vmovl_high_u8(v23);
  int8x16_t v31 = (int8x16_t)vmovl_u8(v28);
  if ((a11 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_7:
  if (a5 < 19)
  {
    v18.i8[0] = *((unsigned char *)&v27[-1] + a5 - 6);
    uint8x16_t v32 = (int8x16_t *)((char *)&unk_2646ECF5A - 2 * a5);
    int8x16_t v33 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v18.i8, 0);
    int16x8_t v29 = (int16x8_t)vbslq_s8(*v32, v33, (int8x16_t)v29);
    int16x8_t v30 = (int16x8_t)vbslq_s8(v32[1], v33, (int8x16_t)v30);
    int8x16_t v31 = vbslq_s8(v32[2], v33, v31);
  }
LABEL_9:
  while (1)
  {
    int16x8_t v34 = (int16x8_t)vextq_s8((int8x16_t)v29, (int8x16_t)v30, 6uLL);
    int16x8_t v35 = vshlq_n_s16(v34, 7uLL);
    int16x8_t v36 = vmlaq_laneq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_lane_s16(v34, *(int16x4_t *)a6.i8, 3), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v29, (int8x16_t)v30, 8uLL), (int16x8_t)vextq_s8((int8x16_t)v29, (int8x16_t)v30, 4uLL)), a6, 4), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v29, (int8x16_t)v30, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)v29, (int8x16_t)v30, 2uLL)), a6, 5), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v29, (int8x16_t)v30, 0xCuLL), v29), a6, 6);
    int16x8_t v37 = (int16x8_t)vextq_s8((int8x16_t)v30, v31, 6uLL);
    int16x8_t v38 = *v13;
    int16x8_t v39 = v13[1];
    v13 += 2;
    int16x8_t v40 = *v15;
    int16x8_t v41 = v15[1];
    v15 += 2;
    int16x8_t v42 = vqaddq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_lane_s16(v37, *(int16x4_t *)a6.i8, 3), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v30, v31, 8uLL), (int16x8_t)vextq_s8((int8x16_t)v30, v31, 4uLL)), a6, 4), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v30, v31, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)v30, v31, 2uLL)), a6, 5), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v30, v31, 0xCuLL), v30), a6, 6), vsubq_s16(vshlq_n_s16(v37, 7uLL), v19));
    int16x8_t v43 = *v12;
    int16x8_t v44 = v12[1];
    v12 += 2;
    int16x8_t v45 = *v16;
    int16x8_t v46 = v16[1];
    v16 += 2;
    int16x8_t v47 = vaddq_s16(vshrq_n_s16(vqaddq_s16(v36, vsubq_s16(v35, v19)), 3uLL), v20);
    int16x8_t v48 = vaddq_s16(vshrq_n_s16(v42, 3uLL), v20);
    int16x8_t v49 = *v11;
    int16x8_t v50 = v11[1];
    v11 += 2;
    int16x8_t v51 = vaddq_s16(v38, v40);
    int16x8_t v52 = *v14;
    int16x8_t v53 = v14[1];
    v14 += 2;
    int16x8_t v18 = vaddq_s16(v43, v45);
    int16x8_t v54 = vaddq_s16(v49, v47);
    int16x8_t v55 = vaddq_s16(v39, v41);
    int16x8_t v56 = vaddq_s16(v44, v46);
    int16x8_t v57 = vaddq_s16(v50, v48);
    *int16x8_t v17 = v47;
    v17[1] = v48;
    v17 += 2;
    BOOL v58 = __OFSUB__(a5, 16);
    a5 -= 16;
    *a1++ = vqmovun_high_s16(vqmovun_s16(vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_lane_s16(*(int16x4_t *)v52.i8, *(int16x4_t *)a7.i8, 3), *(int16x4_t *)v51.i8, a7, 4), *(int16x4_t *)v18.i8, a7, 5), *(int16x4_t *)v54.i8, a7, 6), 0xBuLL), vmlal_high_laneq_s16(vmlal_high_laneq_s16(
                      vmlal_high_laneq_s16(vmull_high_lane_s16(v52, *(int16x4_t *)a7.i8, 3), v51, a7, 4),
                      v18,
                      a7,
                      5),
                    v54,
                    a7,
                    6),
                  0xBuLL)),
              vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_lane_s16(*(int16x4_t *)v53.i8, *(int16x4_t *)a7.i8, 3), *(int16x4_t *)v55.i8, a7, 4), *(int16x4_t *)v56.i8, a7, 5), *(int16x4_t *)v57.i8, a7, 6), 0xBuLL), vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_lane_s16(v53, *(int16x4_t *)a7.i8, 3), v55, a7, 4), v56,
                    a7,
                    5),
                  v57,
                  a7,
                  6),
                0xBuLL));
    if ((a5 < 0) ^ v58 | (a5 == 0)) {
      return (char *)v61 + a2;
    }
    int16x8_t v29 = (int16x8_t)v31;
    uint8x16_t v59 = *v27++;
    int16x8_t v30 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v59.i8);
    int8x16_t v31 = (int8x16_t)vmovl_high_u8(v59);
    if ((a11 & 2) == 0) {
      goto LABEL_7;
    }
  }
}

void sub_224A75E90(int8x8_t *a1, uint64_t a2, unsigned __int32 *a3, int8x8_t *a4, int a5, uint64_t a6, int16x8_t *a7, char a8, double a9, double a10, int8x16_t a11)
{
  int16x8_t v11 = *a7;
  int16x8_t v12 = a7[1];
  if ((a8 & 4) != 0)
  {
    sub_224A75FCC(v11, *(double *)v12.i64, a11, (uint64_t)a1, a2, 0, a4, a5, a6, (uint64_t)a7, a8);
    sub_224A75FCC(v21, v22, v23, v14, v15, v16, (int8x8_t *)(v13 + v15), v17, v18, v19, v20);
    sub_224A75FCC(v31, v32, v33, (uint64_t)v24, v25, v30, v24, v26, v27, v28, v29);
    uint64_t v45 = (v44 - 1);
    if (v45)
    {
      sub_224A75FCC(v41, *(double *)v42.i64, v43, (uint64_t)v34, v35, v36, (int8x8_t *)((char *)v37 + v35), v38, v45, v39, v40);
      uint64_t v53 = (v52 - 1);
      if (v53)
      {
        int16x8_t v37 = (int8x8_t *)((char *)v37 + v35);
        do
        {
LABEL_5:
          int16x8_t v46 = (int8x16_t *)sub_224A76190(v46, v35, v36, v37, v47, v41, v50, v51, v53, v48, v49);
          uint64_t v53 = (v55 - 1);
        }
        while (v53);
        if ((v49 & 8) != 0)
        {
          int16x8_t v56 = (int8x16_t *)sub_224A76190(v46, v35, 0, v54, v47, v41, v50, v51, v53, v48, v49);
          sub_224A76190(v56, v57, v58, v59, v60, v64, v65, v66, v61, v62, v63);
          return;
        }
      }
LABEL_12:
      sub_224A76100(v46, *(double *)v41.i64, v50, v35, (uint64_t)v36, (uint64_t)v37, v47);
      int16x8_t v34 = (int8x16_t *)((char *)v46 + v35);
    }
  }
  else
  {
    sub_224A75FCC(v11, *(double *)v12.i64, a11, (uint64_t)a1, a2, a3, a1, a5, a6, (uint64_t)a7, a8);
    uint64_t v71 = (v70 - 1);
    if (v71)
    {
      sub_224A75FCC(v41, *(double *)v42.i64, v69, (uint64_t)v34, v35, v36, (int8x8_t *)((char *)v37 + v35), v38, v71, v67, v68);
      uint64_t v76 = (v75 - 1);
      if (v76)
      {
        int16x8_t v46 = (int8x16_t *)sub_224A76190(v46, v35, v36, (int8x8_t *)((char *)v37 + v35), v47, v41, v50, v74, v76, v72, v73);
        uint64_t v81 = (v80 - 1);
        if (v81)
        {
          int16x8_t v46 = (int8x16_t *)sub_224A76190(v46, v35, v36, v37, v47, v41, v50, v79, v81, v77, v78);
          uint64_t v53 = (v82 - 1);
          if (v53) {
            goto LABEL_5;
          }
        }
      }
      goto LABEL_12;
    }
  }
  sub_224A76100(v34, *(double *)v41.i64, v42, v35, (uint64_t)v36, (uint64_t)v37, v38);
}

void sub_224A75FCC(int16x8_t a1, double a2, int8x16_t a3, uint64_t a4, uint64_t a5, unsigned __int32 *a6, int8x8_t *a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a11)
  {
    if (a6)
    {
      int8x16_t v18 = *(int8x16_t *)a7->i8;
      a3.i32[3] = *a6;
      int16x8_t v16 = (uint8x8_t *)((char *)&a7[1] + 6);
      uint8x16_t v17 = (uint8x16_t)vextq_s8(a3, v18, 0xEuLL);
    }
    else
    {
      uint64_t v15 = (uint8x16_t *)((char *)&a7[-1] + 6);
      uint8x16_t v17 = *v15;
      int16x8_t v16 = (uint8x8_t *)&v15[1];
    }
  }
  else
  {
    int8x16_t v19 = *(int8x16_t *)a7->i8;
    int8x16_t v20 = vdupq_lane_s8(*a7, 0);
    int16x8_t v16 = (uint8x8_t *)((char *)&a7[1] + 6);
    uint8x16_t v17 = (uint8x16_t)vextq_s8(v20, v19, 0xEuLL);
  }
  uint8x8_t v22 = *v16;
  int16x8_t v21 = (uint8x16_t *)&v16[1];
  int16x8_t v23 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v17.i8);
  int16x8_t v24 = (int16x8_t)vmovl_high_u8(v17);
  int8x16_t v25 = (int8x16_t)vmovl_u8(v22);
  if ((a11 & 2) == 0)
  {
LABEL_7:
    if (a8 < 18)
    {
      v12.i8[0] = *((unsigned char *)&v21[-1] + a8 - 7);
      int v26 = (int8x16_t *)((char *)&unk_2646ECF5C - 2 * a8);
      int8x16_t v12 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v12.i8, 0);
      int16x8_t v23 = (int16x8_t)vbslq_s8(*v26, v12, (int8x16_t)v23);
      int16x8_t v24 = (int16x8_t)vbslq_s8(v26[1], v12, (int8x16_t)v24);
      int8x16_t v25 = vbslq_s8(v26[2], v12, v25);
    }
  }
  while (1)
  {
    int16x8_t v27 = (int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)v24, 4uLL);
    int16x8_t v28 = vshlq_n_s16(v27, 7uLL);
    int16x8_t v29 = vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_lane_s16(v27, *(int16x4_t *)a1.i8, 3), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)v24, 6uLL), (int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)v24, 2uLL)), a1, 4), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)v24, 8uLL), v23), a1, 5);
    int16x8_t v30 = (int16x8_t)vextq_s8((int8x16_t)v24, v25, 4uLL);
    BOOL v31 = __OFSUB__(a8, 16);
    a8 -= 16;
    *int16x8_t v11 = vaddq_s16(vshrq_n_s16(vqaddq_s16(v29, vsubq_s16(v28, v13)), 3uLL), v14);
    v11[1] = vaddq_s16(vshrq_n_s16(vqaddq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_lane_s16(v30, *(int16x4_t *)a1.i8, 3), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v24, v25, 6uLL), (int16x8_t)vextq_s8((int8x16_t)v24, v25, 2uLL)), a1, 4), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v24, v25, 8uLL), v24), a1, 5), vsubq_s16(vshlq_n_s16(v30, 7uLL), v13)), 3uLL), v14);
    v11 += 2;
    if ((a8 < 0) ^ v31 | (a8 == 0)) {
      break;
    }
    int16x8_t v23 = (int16x8_t)v25;
    uint8x16_t v32 = *v21++;
    int16x8_t v24 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v32.i8);
    int8x16_t v25 = (int8x16_t)vmovl_high_u8(v32);
    if ((a11 & 2) == 0) {
      goto LABEL_7;
    }
  }
}

void __spoils<X4,X11,X12,X13,X14,Q1,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25> sub_224A76100(int8x16_t *a1, double a2, int16x8_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  do
  {
    int16x8_t v11 = *v8;
    int16x8_t v12 = v8[1];
    v8 += 2;
    int16x8_t v13 = *v10;
    int16x8_t v14 = v10[1];
    v10 += 2;
    int16x8_t v15 = *v7;
    int16x8_t v16 = v7[1];
    v7 += 2;
    int16x8_t v17 = vaddq_s16(v13, v11);
    int16x8_t v18 = *v9;
    int16x8_t v19 = v9[1];
    v9 += 2;
    int16x8_t v20 = vaddq_s16(v13, v15);
    int16x8_t v21 = vaddq_s16(v14, v12);
    int16x8_t v22 = vaddq_s16(v14, v16);
    BOOL v23 = __OFSUB__(a7, 16);
    a7 -= 16;
    *a1++ = vqmovun_high_s16(vqmovun_s16(vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmull_lane_s16(*(int16x4_t *)v18.i8, *(int16x4_t *)a3.i8, 3), *(int16x4_t *)v17.i8, a3, 4), *(int16x4_t *)v20.i8, a3, 5), 0xBuLL), vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_lane_s16(v18, *(int16x4_t *)a3.i8, 3), v17, a3, 4), v20, a3, 5), 0xBuLL)),
              vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmull_lane_s16(*(int16x4_t *)v19.i8, *(int16x4_t *)a3.i8, 3), *(int16x4_t *)v21.i8, a3, 4), *(int16x4_t *)v22.i8, a3, 5), 0xBuLL), vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_lane_s16(v19, *(int16x4_t *)a3.i8, 3), v21, a3, 4), v22, a3, 5), 0xBuLL));
  }
  while (!((a7 < 0) ^ v23 | (a7 == 0)));
}

char *sub_224A76190(int8x16_t *a1, uint64_t a2, unsigned __int32 *a3, int8x8_t *a4, int a5, int16x8_t a6, int16x8_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v53 = a1;
  if (a11)
  {
    if (a3)
    {
      int8x16_t v22 = *(int8x16_t *)a4->i8;
      a8.i32[3] = *a3;
      int16x8_t v20 = (uint8x8_t *)((char *)&a4[1] + 6);
      uint8x16_t v21 = (uint8x16_t)vextq_s8(a8, v22, 0xEuLL);
    }
    else
    {
      int16x8_t v19 = (uint8x16_t *)((char *)&a4[-1] + 6);
      uint8x16_t v21 = *v19;
      int16x8_t v20 = (uint8x8_t *)&v19[1];
    }
  }
  else
  {
    int8x16_t v23 = *(int8x16_t *)a4->i8;
    int8x16_t v24 = vdupq_lane_s8(*a4, 0);
    int16x8_t v20 = (uint8x8_t *)((char *)&a4[1] + 6);
    uint8x16_t v21 = (uint8x16_t)vextq_s8(v24, v23, 0xEuLL);
  }
  uint8x8_t v26 = *v20;
  int8x16_t v25 = (uint8x16_t *)&v20[1];
  int16x8_t v27 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v21.i8);
  int16x8_t v28 = (int16x8_t)vmovl_high_u8(v21);
  int8x16_t v29 = (int8x16_t)vmovl_u8(v26);
  if ((a11 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_7:
  if (a5 < 18)
  {
    v16.i8[0] = *((unsigned char *)&v25[-1] + a5 - 7);
    int16x8_t v30 = (int8x16_t *)((char *)&unk_2646ECF5C - 2 * a5);
    int8x16_t v16 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v16.i8, 0);
    int16x8_t v27 = (int16x8_t)vbslq_s8(*v30, v16, (int8x16_t)v27);
    int16x8_t v28 = (int16x8_t)vbslq_s8(v30[1], v16, (int8x16_t)v28);
    int8x16_t v29 = vbslq_s8(v30[2], v16, v29);
  }
LABEL_9:
  while (1)
  {
    int16x8_t v31 = (int16x8_t)vextq_s8((int8x16_t)v27, (int8x16_t)v28, 4uLL);
    int16x8_t v32 = vshlq_n_s16(v31, 7uLL);
    int16x8_t v33 = vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_lane_s16(v31, *(int16x4_t *)a6.i8, 3), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v27, (int8x16_t)v28, 6uLL), (int16x8_t)vextq_s8((int8x16_t)v27, (int8x16_t)v28, 2uLL)), a6, 4), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v27, (int8x16_t)v28, 8uLL), v27), a6, 5);
    int16x8_t v34 = (int16x8_t)vextq_s8((int8x16_t)v28, v29, 4uLL);
    int16x8_t v35 = *v12;
    int16x8_t v36 = v12[1];
    v12 += 2;
    int16x8_t v37 = *v14;
    int16x8_t v38 = v14[1];
    v14 += 2;
    int16x8_t v39 = vqaddq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_lane_s16(v34, *(int16x4_t *)a6.i8, 3), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v28, v29, 6uLL), (int16x8_t)vextq_s8((int8x16_t)v28, v29, 2uLL)), a6, 4), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v28, v29, 8uLL), v28), a6, 5), vsubq_s16(vshlq_n_s16(v34, 7uLL), v17));
    int16x8_t v40 = *v11;
    int16x8_t v41 = v11[1];
    v11 += 2;
    int16x8_t v42 = *v13;
    int16x8_t v43 = v13[1];
    v13 += 2;
    int16x8_t v44 = vaddq_s16(vshrq_n_s16(vqaddq_s16(v33, vsubq_s16(v32, v17)), 3uLL), v18);
    int16x8_t v45 = vaddq_s16(vshrq_n_s16(v39, 3uLL), v18);
    int16x8_t v46 = vaddq_s16(v37, v35);
    int16x8_t v47 = vaddq_s16(v40, v44);
    int16x8_t v48 = vaddq_s16(v38, v36);
    int16x8_t v49 = vaddq_s16(v41, v45);
    *int16x8_t v15 = v44;
    v15[1] = v45;
    v15 += 2;
    BOOL v50 = __OFSUB__(a5, 16);
    a5 -= 16;
    *a1++ = vqmovun_high_s16(vqmovun_s16(vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmull_lane_s16(*(int16x4_t *)v42.i8, *(int16x4_t *)a7.i8, 3), *(int16x4_t *)v46.i8, a7, 4), *(int16x4_t *)v47.i8, a7, 5), 0xBuLL), vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_lane_s16(v42, *(int16x4_t *)a7.i8, 3), v46, a7, 4), v47, a7, 5), 0xBuLL)),
              vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmull_lane_s16(*(int16x4_t *)v43.i8, *(int16x4_t *)a7.i8, 3), *(int16x4_t *)v48.i8, a7, 4), *(int16x4_t *)v49.i8, a7, 5), 0xBuLL), vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_lane_s16(v43, *(int16x4_t *)a7.i8, 3), v48, a7, 4), v49, a7, 5), 0xBuLL));
    if ((a5 < 0) ^ v50 | (a5 == 0)) {
      return (char *)v53 + a2;
    }
    int16x8_t v27 = (int16x8_t)v29;
    uint8x16_t v51 = *v25++;
    int16x8_t v28 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v51.i8);
    int8x16_t v29 = (int8x16_t)vmovl_high_u8(v51);
    if ((a11 & 2) == 0) {
      goto LABEL_7;
    }
  }
}

uint32x4_t *sub_224A76348(uint32x4_t *result, int8x16_t *a2, unsigned __int32 *a3, int8x8_t *a4, int a5, char a6, double a7, int8x16_t a8)
{
  int v9 = a5 + 2;
  if (a6)
  {
    if (a3)
    {
      int8x16_t v13 = *(int8x16_t *)a4->i8;
      a8.i32[3] = *a3;
      i64 = (uint64_t *)((char *)&a4[1] + 6);
      int8x16_t v12 = vextq_s8(a8, v13, 0xEuLL);
    }
    else
    {
      v10 = (int8x16_t *)((char *)&a4[-1] + 6);
      int8x16_t v12 = *v10;
      i64 = v10[1].i64;
    }
  }
  else
  {
    int8x16_t v14 = *(int8x16_t *)a4->i8;
    int8x16_t v15 = vdupq_lane_s8(*a4, 0);
    i64 = (uint64_t *)((char *)&a4[1] + 6);
    int8x16_t v12 = vextq_s8(v15, v14, 0xEuLL);
  }
  int8x16_t v16 = (int8x16_t)vmull_u8(*(uint8x8_t *)v12.i8, *(uint8x8_t *)v12.i8);
  int8x16_t v17 = (int8x16_t)vmull_high_u8((uint8x16_t)v12, (uint8x16_t)v12);
  if ((a6 & 2) == 0)
  {
    v8.i8[0] = *((unsigned char *)i64 + v9 - 17);
    int8x16_t v8 = vdupq_lane_s8(*(int8x8_t *)v8.i8, 0);
LABEL_8:
    if (v9 < 10)
    {
      int8x16_t v12 = vbslq_s8(*(int8x16_t *)((char *)&unk_2646ECF60 - v9), v8, v12);
      int8x16_t v16 = (int8x16_t)vmull_u8(*(uint8x8_t *)v12.i8, *(uint8x8_t *)v12.i8);
      int8x16_t v17 = (int8x16_t)vmull_high_u8((uint8x16_t)v12, (uint8x16_t)v12);
    }
  }
  while (1)
  {
    uint16x8_t v18 = (uint16x8_t)vextq_s8(v16, v17, 2uLL);
    int8x16_t v19 = (int8x16_t)vaddw_u8(vaddl_u8(*(uint8x8_t *)v12.i8, (uint8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 1uLL)), (uint8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 2uLL));
    uint16x8_t v20 = (uint16x8_t)vextq_s8(v16, v17, 4uLL);
    BOOL v21 = __OFSUB__(v9, 8);
    v9 -= 8;
    *a2++ = v19;
    *result = vaddw_u16(vaddl_u16(*(uint16x4_t *)v16.i8, *(uint16x4_t *)v18.i8), *(uint16x4_t *)v20.i8);
    result[1] = vaddw_high_u16(vaddl_high_u16((uint16x8_t)v16, v18), v20);
    result += 2;
    if ((v9 < 0) ^ v21 | (v9 == 0)) {
      return result;
    }
    v19.i64[0] = *i64++;
    int8x16_t v16 = v17;
    int8x16_t v12 = vextq_s8(v12, v19, 8uLL);
    int8x16_t v17 = (int8x16_t)vmull_u8(*(uint8x8_t *)v19.i8, *(uint8x8_t *)v19.i8);
    if ((a6 & 2) == 0) {
      goto LABEL_8;
    }
  }
}

int32x4_t *sub_224A76420(int32x4_t *result, int8x16_t *a2, unsigned __int32 *a3, int8x8_t *a4, int a5, char a6, double a7, int8x16_t a8)
{
  int v9 = a5 + 2;
  if (a6)
  {
    if (a3)
    {
      int8x16_t v13 = *(int8x16_t *)a4->i8;
      a8.i32[3] = *a3;
      i64 = (uint64_t *)((char *)&a4[1] + 5);
      int8x16_t v12 = vextq_s8(a8, v13, 0xDuLL);
    }
    else
    {
      v10 = (int8x16_t *)((char *)&a4[-1] + 5);
      int8x16_t v12 = *v10;
      i64 = v10[1].i64;
    }
  }
  else
  {
    int8x16_t v14 = *(int8x16_t *)a4->i8;
    int8x16_t v15 = vdupq_lane_s8(*a4, 0);
    i64 = (uint64_t *)((char *)&a4[1] + 5);
    int8x16_t v12 = vextq_s8(v15, v14, 0xDuLL);
  }
  int8x16_t v16 = (int8x16_t)vmull_u8(*(uint8x8_t *)v12.i8, *(uint8x8_t *)v12.i8);
  int8x16_t v17 = (int8x16_t)vmull_high_u8((uint8x16_t)v12, (uint8x16_t)v12);
  if ((a6 & 2) == 0)
  {
    v8.i8[0] = *((unsigned char *)i64 + v9 - 16);
    int8x16_t v8 = vdupq_lane_s8(*(int8x8_t *)v8.i8, 0);
LABEL_8:
    if (v9 < 11)
    {
      int8x16_t v12 = vbslq_s8(*(int8x16_t *)((char *)&unk_2646ECF5F - v9), v8, v12);
      int8x16_t v16 = (int8x16_t)vmull_u8(*(uint8x8_t *)v12.i8, *(uint8x8_t *)v12.i8);
      int8x16_t v17 = (int8x16_t)vmull_high_u8((uint8x16_t)v12, (uint8x16_t)v12);
    }
  }
  while (1)
  {
    int8x16_t v18 = (int8x16_t)vaddq_s16((int16x8_t)vaddw_u8(vaddl_u8(*(uint8x8_t *)v12.i8, (uint8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 1uLL)), (uint8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 4uLL)), (int16x8_t)vaddl_u8((uint8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 2uLL), (uint8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 3uLL)));
    uint16x8_t v19 = (uint16x8_t)vextq_s8(v16, v17, 2uLL);
    uint16x8_t v20 = (uint16x8_t)vextq_s8(v16, v17, 4uLL);
    uint16x8_t v21 = (uint16x8_t)vextq_s8(v16, v17, 6uLL);
    uint16x8_t v22 = (uint16x8_t)vextq_s8(v16, v17, 8uLL);
    BOOL v23 = __OFSUB__(v9, 8);
    v9 -= 8;
    *a2++ = v18;
    *result = vaddq_s32((int32x4_t)vaddw_u16(vaddl_u16(*(uint16x4_t *)v16.i8, *(uint16x4_t *)v19.i8), *(uint16x4_t *)v22.i8), (int32x4_t)vaddl_u16(*(uint16x4_t *)v20.i8, *(uint16x4_t *)v21.i8));
    result[1] = vaddq_s32((int32x4_t)vaddw_high_u16(vaddl_high_u16((uint16x8_t)v16, v19), v22), (int32x4_t)vaddl_high_u16(v20, v21));
    result += 2;
    if ((v9 < 0) ^ v23 | (v9 == 0)) {
      return result;
    }
    v18.i64[0] = *i64++;
    int8x16_t v16 = v17;
    int8x16_t v12 = vextq_s8(v12, v18, 8uLL);
    int8x16_t v17 = (int8x16_t)vmull_u8(*(uint8x8_t *)v18.i8, *(uint8x8_t *)v18.i8);
    if ((a6 & 2) == 0) {
      goto LABEL_8;
    }
  }
}

int32x4_t *sub_224A76524(int32x4_t *result, int16x8_t *a2, int32x4_t *a3, int8x16_t *a4, unsigned __int32 *a5, int8x8_t *a6, int a7, char a8, double a9, int8x16_t a10)
{
  int v11 = a7 + 2;
  if (a8)
  {
    if (a5)
    {
      int8x16_t v15 = *(int8x16_t *)a6->i8;
      a10.i32[3] = *a5;
      i64 = (uint64_t *)((char *)&a6[1] + 5);
      int8x16_t v14 = vextq_s8(a10, v15, 0xDuLL);
    }
    else
    {
      int8x16_t v12 = (int8x16_t *)((char *)&a6[-1] + 5);
      int8x16_t v14 = *v12;
      i64 = v12[1].i64;
    }
  }
  else
  {
    int8x16_t v16 = *(int8x16_t *)a6->i8;
    int8x16_t v17 = vdupq_lane_s8(*a6, 0);
    i64 = (uint64_t *)((char *)&a6[1] + 5);
    int8x16_t v14 = vextq_s8(v17, v16, 0xDuLL);
  }
  int8x16_t v18 = (int8x16_t)vmull_u8(*(uint8x8_t *)v14.i8, *(uint8x8_t *)v14.i8);
  int8x16_t v19 = (int8x16_t)vmull_high_u8((uint8x16_t)v14, (uint8x16_t)v14);
  if ((a8 & 2) == 0)
  {
    v10.i8[0] = *((unsigned char *)i64 + v11 - 16);
    int8x16_t v10 = vdupq_lane_s8(*(int8x8_t *)v10.i8, 0);
LABEL_8:
    if (v11 < 11)
    {
      int8x16_t v14 = vbslq_s8(*(int8x16_t *)((char *)&unk_2646ECF5F - v11), v10, v14);
      int8x16_t v18 = (int8x16_t)vmull_u8(*(uint8x8_t *)v14.i8, *(uint8x8_t *)v14.i8);
      int8x16_t v19 = (int8x16_t)vmull_high_u8((uint8x16_t)v14, (uint8x16_t)v14);
    }
  }
  while (1)
  {
    int16x8_t v20 = (int16x8_t)vaddw_u8(vaddl_u8((uint8x8_t)*(_OWORD *)&vextq_s8(v14, v14, 1uLL), (uint8x8_t)*(_OWORD *)&vextq_s8(v14, v14, 2uLL)), (uint8x8_t)*(_OWORD *)&vextq_s8(v14, v14, 3uLL));
    uint16x8_t v21 = (uint16x8_t)vextq_s8(v18, v19, 2uLL);
    uint16x8_t v22 = (uint16x8_t)vextq_s8(v18, v19, 4uLL);
    uint16x8_t v23 = (uint16x8_t)vextq_s8(v18, v19, 8uLL);
    uint16x8_t v24 = (uint16x8_t)vextq_s8(v18, v19, 6uLL);
    *a2++ = v20;
    int8x16_t v25 = (int8x16_t)vaddq_s16(v20, (int16x8_t)vaddl_u8(*(uint8x8_t *)v14.i8, (uint8x8_t)*(_OWORD *)&vextq_s8(v14, v14, 4uLL)));
    int32x4_t v26 = (int32x4_t)vaddw_u16(vaddl_u16(*(uint16x4_t *)v21.i8, *(uint16x4_t *)v22.i8), *(uint16x4_t *)v24.i8);
    int32x4_t v27 = (int32x4_t)vaddw_high_u16(vaddl_high_u16(v21, v22), v24);
    *result = v26;
    result[1] = v27;
    result += 2;
    BOOL v28 = __OFSUB__(v11, 8);
    v11 -= 8;
    *a4++ = v25;
    *a3 = vaddq_s32(v26, (int32x4_t)vaddl_u16(*(uint16x4_t *)v18.i8, *(uint16x4_t *)v23.i8));
    a3[1] = vaddq_s32(v27, (int32x4_t)vaddl_high_u16((uint16x8_t)v18, v23));
    a3 += 2;
    if ((v11 < 0) ^ v28 | (v11 == 0)) {
      return result;
    }
    v25.i64[0] = *i64++;
    int8x16_t v18 = v19;
    int8x16_t v14 = vextq_s8(v14, v25, 8uLL);
    int8x16_t v19 = (int8x16_t)vmull_u8(*(uint8x8_t *)v25.i8, *(uint8x8_t *)v25.i8);
    if ((a8 & 2) == 0) {
      goto LABEL_8;
    }
  }
}

int16x8_t *sub_224A76630(int16x8_t *result, uint8x8_t *a2, uint64_t a3, void *a4, void *a5, int a6, int a7)
{
  v7 = (_OWORD *)*a4;
  int8x16_t v8 = (_OWORD *)a4[1];
  int8x16_t v10 = (_OWORD *)a4[2];
  int v9 = (_OWORD *)a4[3];
  int v11 = (_OWORD *)*a5;
  int8x16_t v12 = (_OWORD *)a5[1];
  int8x16_t v14 = (_OWORD *)a5[2];
  int8x16_t v13 = (_OWORD *)a5[3];
  int8x16_t v15 = (uint8x8_t *)((char *)a2 + a3);
  if (a7 <= 1) {
    int8x16_t v15 = a2;
  }
  int8x16_t v16 = result + 48;
  v17.i64[0] = 0x3000300030003;
  v17.i64[1] = 0x3000300030003;
  v18.i64[0] = 0x300000003;
  v18.i64[1] = 0x300000003;
  int16x8_t v20 = *(int16x8_t *)v11;
  int8x16_t v21 = *((int8x16_t *)v11 + 1);
  int8x16_t v19 = (int8x16_t *)(v11 + 2);
  int16x8_t v23 = *(int16x8_t *)v12;
  int8x16_t v24 = *((int8x16_t *)v12 + 1);
  uint16x8_t v22 = (int8x16_t *)(v12 + 2);
  int16x8_t v26 = *(int16x8_t *)v14;
  int8x16_t v27 = *((int8x16_t *)v14 + 1);
  int8x16_t v25 = (int8x16_t *)(v14 + 2);
  int16x8_t v29 = *(int16x8_t *)v13;
  int8x16_t v30 = *((int8x16_t *)v13 + 1);
  BOOL v28 = (int8x16_t *)(v13 + 2);
  int32x4_t v32 = *(int32x4_t *)v7;
  int32x4_t v33 = *((int32x4_t *)v7 + 1);
  int8x16_t v34 = *((int8x16_t *)v7 + 2);
  int16x8_t v31 = v7 + 3;
  int32x4_t v36 = *(int32x4_t *)v8;
  int32x4_t v37 = *((int32x4_t *)v8 + 1);
  int8x16_t v38 = *((int8x16_t *)v8 + 2);
  int16x8_t v35 = v8 + 3;
  int32x4_t v40 = *(int32x4_t *)v10;
  int32x4_t v41 = *((int32x4_t *)v10 + 1);
  int8x16_t v42 = *((int8x16_t *)v10 + 2);
  int16x8_t v39 = v10 + 3;
  int32x4_t v44 = *(int32x4_t *)v9;
  int32x4_t v45 = *((int32x4_t *)v9 + 1);
  int8x16_t v46 = *((int8x16_t *)v9 + 2);
  for (i = v9 + 3; ; i += 2)
  {
    int16x8_t v47 = (int16x8_t)vextq_s8((int8x16_t)v23, v24, 2uLL);
    int16x8_t v48 = (int16x8_t)vextq_s8((int8x16_t)v26, v27, 2uLL);
    int16x8_t v49 = (int16x8_t)vextq_s8((int8x16_t)v23, v24, 4uLL);
    int16x8_t v50 = (int16x8_t)vextq_s8((int8x16_t)v26, v27, 4uLL);
    int16x8_t v51 = vaddq_s16(vaddq_s16(v26, v47), v50);
    uint16x8_t v52 = (uint16x8_t)vmlaq_s16(vshlq_n_s16(vaddq_s16(vaddq_s16(vaddq_s16(v23, (int16x8_t)vextq_s8((int8x16_t)v20, v21, 2uLL)), v49), vaddq_s16(v47, v48)), 2uLL), vaddq_s16(vaddq_s16(v20, (int16x8_t)vextq_s8((int8x16_t)v20, v21, 4uLL)), vaddq_s16(v26, v50)), v17);
    uint16x8_t v53 = (uint16x8_t)vmlaq_s16(vshlq_n_s16(vaddq_s16(v51, vaddq_s16(v48, (int16x8_t)vextq_s8((int8x16_t)v29, v30, 2uLL))), 2uLL), vaddq_s16(vaddq_s16(v23, v49), vaddq_s16(v29, (int16x8_t)vextq_s8((int8x16_t)v29, v30, 4uLL))), v17);
    int32x4_t v54 = (int32x4_t)vextq_s8((int8x16_t)v36, (int8x16_t)v37, 4uLL);
    int32x4_t v55 = (int32x4_t)vextq_s8((int8x16_t)v37, v38, 4uLL);
    int32x4_t v56 = (int32x4_t)vextq_s8((int8x16_t)v36, (int8x16_t)v37, 8uLL);
    int32x4_t v57 = (int32x4_t)vextq_s8((int8x16_t)v37, v38, 8uLL);
    int32x4_t v58 = (int32x4_t)vextq_s8((int8x16_t)v40, (int8x16_t)v41, 4uLL);
    int32x4_t v59 = (int32x4_t)vextq_s8((int8x16_t)v41, v42, 4uLL);
    int32x4_t v60 = vaddq_s32(vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v32, (int8x16_t)v33, 4uLL), v36), vaddq_s32(v54, v56));
    int32x4_t v61 = vaddq_s32(vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v33, v34, 4uLL), v37), vaddq_s32(v55, v57));
    int32x4_t v62 = vaddq_s32(v36, v56);
    int32x4_t v63 = vaddq_s32(v37, v57);
    int32x4_t v64 = vaddq_s32(v40, v54);
    int32x4_t v65 = vaddq_s32(v41, v55);
    int32x4_t v66 = (int32x4_t)vextq_s8((int8x16_t)v40, (int8x16_t)v41, 8uLL);
    int32x4_t v67 = (int32x4_t)vextq_s8((int8x16_t)v41, v42, 8uLL);
    int32x4_t v68 = vaddq_s32(vaddq_s32(vaddq_s32(v32, (int32x4_t)vextq_s8((int8x16_t)v32, (int8x16_t)v33, 8uLL)), v40), v66);
    int32x4_t v69 = vaddq_s32(vaddq_s32(vaddq_s32(v33, (int32x4_t)vextq_s8((int8x16_t)v33, v34, 8uLL)), v41), v67);
    int32x4_t v70 = vaddq_s32(v66, (int32x4_t)vextq_s8((int8x16_t)v44, (int8x16_t)v45, 4uLL));
    int32x4_t v71 = vaddq_s32(v67, (int32x4_t)vextq_s8((int8x16_t)v45, v46, 4uLL));
    int32x4_t v72 = vaddq_s32(v62, vaddq_s32(v44, (int32x4_t)vextq_s8((int8x16_t)v44, (int8x16_t)v45, 8uLL)));
    int32x4_t v73 = vaddq_s32(v63, vaddq_s32(v45, (int32x4_t)vextq_s8((int8x16_t)v45, v46, 8uLL)));
    uint8x8_t v74 = *a2++;
    uint8x8_t v75 = *v15++;
    uint16x8_t v76 = vmovl_u8(v74);
    uint16x8_t v77 = vmovl_u8(v75);
    int32x4_t v78 = (int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vshlq_n_s32(vaddq_s32(vaddq_s32(v64, v58), v70), 2uLL), v72, v18), *(uint16x4_t *)v53.i8, *(uint16x4_t *)v77.i8);
    int32x4_t v79 = (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vshlq_n_s32(vaddq_s32(vaddq_s32(v65, v59), v71), 2uLL), v73, v18), v53, v77);
    int16x8_t v20 = (int16x8_t)v21;
    int16x8_t v80 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vshlq_n_s32(vaddq_s32(v60, v58), 2uLL), v68, v18), *(uint16x4_t *)v52.i8, *(uint16x4_t *)v76.i8), 9uLL), (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vshlq_n_s32(vaddq_s32(v61, v59), 2uLL), v69, v18), v52, v76), 9uLL);
    int16x8_t v23 = (int16x8_t)v24;
    BOOL v81 = __OFSUB__(a6, 8);
    a6 -= 8;
    int16x8_t v26 = (int16x8_t)v27;
    *result++ = v80;
    int16x8_t v29 = (int16x8_t)v30;
    *v16++ = vrshrn_high_n_s32(vrshrn_n_s32(v78, 9uLL), v79, 9uLL);
    if ((a6 < 0) ^ v81 | (a6 == 0)) {
      break;
    }
    int32x4_t v32 = (int32x4_t)v34;
    int32x4_t v36 = (int32x4_t)v38;
    int32x4_t v40 = (int32x4_t)v42;
    int32x4_t v44 = (int32x4_t)v46;
    int8x16_t v21 = *v19++;
    int8x16_t v24 = *v22++;
    int8x16_t v27 = *v25++;
    int8x16_t v30 = *v28++;
    int32x4_t v33 = *(int32x4_t *)v31;
    int8x16_t v34 = *((int8x16_t *)v31 + 1);
    v31 += 2;
    int32x4_t v37 = *(int32x4_t *)v35;
    int8x16_t v38 = *((int8x16_t *)v35 + 1);
    v35 += 2;
    int32x4_t v41 = *(int32x4_t *)v39;
    int8x16_t v42 = *((int8x16_t *)v39 + 1);
    v39 += 2;
    int32x4_t v45 = *(int32x4_t *)i;
    int8x16_t v46 = *((int8x16_t *)i + 1);
  }
  return result;
}

uint8x8_t *sub_224A7685C(uint8x8_t *result, void *a2, void *a3, int a4, unsigned int a5)
{
  v5 = (_OWORD *)*a2;
  v6 = (_OWORD *)a2[1];
  v7 = (_OWORD *)a2[2];
  int8x16_t v8 = (_OWORD *)*a3;
  int v9 = (_OWORD *)a3[1];
  int8x16_t v10 = (_OWORD *)a3[2];
  int16x8_t v11 = vdupq_n_s16(a5);
  v12.i64[0] = 0x3000300030003;
  v12.i64[1] = 0x3000300030003;
  v13.i64[0] = 0x300000003;
  v13.i64[1] = 0x300000003;
  int16x8_t v15 = *(int16x8_t *)v8;
  int8x16_t v16 = *((int8x16_t *)v8 + 1);
  int8x16_t v14 = (int8x16_t *)(v8 + 2);
  int16x8_t v18 = *(int16x8_t *)v9;
  int8x16_t v19 = *((int8x16_t *)v9 + 1);
  int16x8_t v17 = (int8x16_t *)(v9 + 2);
  int16x8_t v21 = *(int16x8_t *)v10;
  int8x16_t v22 = *((int8x16_t *)v10 + 1);
  int16x8_t v20 = (int8x16_t *)(v10 + 2);
  int32x4_t v24 = *(int32x4_t *)v5;
  int32x4_t v25 = *((int32x4_t *)v5 + 1);
  int8x16_t v26 = *((int8x16_t *)v5 + 2);
  int16x8_t v23 = v5 + 3;
  int32x4_t v28 = *(int32x4_t *)v6;
  int32x4_t v29 = *((int32x4_t *)v6 + 1);
  int8x16_t v30 = *((int8x16_t *)v6 + 2);
  int8x16_t v27 = v6 + 3;
  int32x4_t v32 = *(int32x4_t *)v7;
  int32x4_t v33 = *((int32x4_t *)v7 + 1);
  int8x16_t v34 = *((int8x16_t *)v7 + 2);
  for (i = v7 + 3; ; i += 2)
  {
    uint16x8_t v35 = (uint16x8_t)vmlaq_s16(vshlq_n_s16(vaddq_s16(vaddq_s16(vaddq_s16(v18, (int16x8_t)vextq_s8((int8x16_t)v15, v16, 2uLL)), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v18, v19, 2uLL), (int16x8_t)vextq_s8((int8x16_t)v21, v22, 2uLL))), (int16x8_t)vextq_s8((int8x16_t)v18, v19, 4uLL)), 2uLL), vaddq_s16(vaddq_s16(v15, (int16x8_t)vextq_s8((int8x16_t)v15, v16, 4uLL)), vaddq_s16(v21, (int16x8_t)vextq_s8((int8x16_t)v21, v22, 4uLL))), v12);
    uint32x4_t v36 = (uint32x4_t)vmlaq_s32(vshlq_n_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v24, (int8x16_t)v25, 4uLL), v28), vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v28, (int8x16_t)v29, 4uLL), (int32x4_t)vextq_s8((int8x16_t)v28, (int8x16_t)v29, 8uLL))), (int32x4_t)vextq_s8((int8x16_t)v32, (int8x16_t)v33, 4uLL)), 2uLL), vaddq_s32(vaddq_s32(vaddq_s32(v24, (int32x4_t)vextq_s8((int8x16_t)v24, (int8x16_t)v25, 8uLL)), v32), (int32x4_t)vextq_s8((int8x16_t)v32, (int8x16_t)v33, 8uLL)), v13);
    int16x8_t v37 = (int16x8_t)vmovl_u8(*result);
    int16x8_t v15 = (int16x8_t)v16;
    int32x4_t v38 = (int32x4_t)vmlal_u16(v36, *(uint16x4_t *)v35.i8, *(uint16x4_t *)v37.i8);
    int32x4_t v39 = (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vshlq_n_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v25, v26, 4uLL), v29), vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v29, v30, 4uLL), (int32x4_t)vextq_s8((int8x16_t)v29, v30, 8uLL))), (int32x4_t)vextq_s8((int8x16_t)v33, v34, 4uLL)), 2uLL), vaddq_s32(vaddq_s32(vaddq_s32(v25, (int32x4_t)vextq_s8((int8x16_t)v25, v26, 8uLL)), v33), (int32x4_t)vextq_s8((int8x16_t)v33, v34, 8uLL)), v13), v35, (uint16x8_t)v37);
    int16x8_t v18 = (int16x8_t)v19;
    BOOL v40 = __OFSUB__(a4, 8);
    a4 -= 8;
    int16x8_t v41 = vshlq_n_s16(v37, 4uLL);
    int16x8_t v21 = (int16x8_t)v22;
    int16x8_t v42 = vsubq_s16(vrshrn_high_n_s32(vrshrn_n_s32(v38, 9uLL), v39, 9uLL), v41);
    int8x16_t v16 = *v14++;
    int8x16_t v19 = *v17++;
    int8x16_t v22 = *v20++;
    int32x4_t v24 = (int32x4_t)v26;
    *(int8x8_t *)v39.i8 = vqmovun_s16(vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v41.i8, 7uLL), *(int16x4_t *)v42.i8, *(int16x4_t *)v11.i8), 0xBuLL), vmlal_high_s16((int32x4_t)vshll_high_n_u16((uint16x8_t)v41, 7uLL), v42, v11), 0xBuLL));
    int32x4_t v28 = (int32x4_t)v30;
    int32x4_t v32 = (int32x4_t)v34;
    *result++ = *(uint8x8_t *)v39.i8;
    if ((a4 < 0) ^ v40 | (a4 == 0)) {
      break;
    }
    int32x4_t v25 = *(int32x4_t *)v23;
    int8x16_t v26 = *((int8x16_t *)v23 + 1);
    v23 += 2;
    int32x4_t v29 = *(int32x4_t *)v27;
    int8x16_t v30 = *((int8x16_t *)v27 + 1);
    v27 += 2;
    int32x4_t v33 = *(int32x4_t *)i;
    int8x16_t v34 = *((int8x16_t *)i + 1);
  }
  return result;
}

int16x8_t *sub_224A769C8(int16x8_t *result, uint8x8_t *a2, uint64_t a3, void *a4, void *a5, int a6, int a7)
{
  v7 = (_OWORD *)*a4;
  int8x16_t v8 = (_OWORD *)a4[1];
  int8x16_t v10 = (_OWORD *)*a5;
  int16x8_t v11 = (_OWORD *)a5[1];
  int32x4_t v13 = (uint8x8_t *)((char *)a2 + a3);
  if (a7 <= 1) {
    int32x4_t v13 = a2;
  }
  int8x16_t v14 = result + 48;
  v15.i64[0] = 0x5000500050005;
  v15.i64[1] = 0x5000500050005;
  v16.i64[0] = 0x500000005;
  v16.i64[1] = 0x500000005;
  v17.i64[0] = 0x6000600060006;
  v17.i64[1] = 0x6000600060006;
  v18.i64[0] = 0x600000006;
  v18.i64[1] = 0x600000006;
  int16x8_t v20 = *(int16x8_t *)v10;
  int8x16_t v21 = *((int8x16_t *)v10 + 1);
  int8x16_t v19 = (int8x16_t *)(v10 + 2);
  int16x8_t v23 = *(int16x8_t *)v11;
  int8x16_t v24 = *((int8x16_t *)v11 + 1);
  int8x16_t v22 = (int8x16_t *)(v11 + 2);
  int32x4_t v26 = *(int32x4_t *)v7;
  int32x4_t v27 = *((int32x4_t *)v7 + 1);
  int8x16_t v28 = *((int8x16_t *)v7 + 2);
  int32x4_t v25 = v7 + 3;
  int32x4_t v30 = *(int32x4_t *)v8;
  int32x4_t v31 = *((int32x4_t *)v8 + 1);
  int8x16_t v32 = *((int8x16_t *)v8 + 2);
  for (i = v8 + 3; ; i += 2)
  {
    int16x8_t v33 = (int16x8_t)vextq_s8((int8x16_t)v23, v24, 2uLL);
    int16x8_t v34 = vaddq_s16(v23, (int16x8_t)vextq_s8((int8x16_t)v23, v24, 4uLL));
    int16x8_t v35 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v20, v21, 2uLL), v33);
    int16x8_t v36 = vaddq_s16(vaddq_s16(v20, (int16x8_t)vextq_s8((int8x16_t)v20, v21, 4uLL)), v34);
    uint16x8_t v37 = (uint16x8_t)vmlaq_s16(vmulq_s16(v34, v15), v33, v17);
    int32x4_t v38 = (int32x4_t)vextq_s8((int8x16_t)v30, (int8x16_t)v31, 4uLL);
    int32x4_t v39 = (int32x4_t)vextq_s8((int8x16_t)v31, v32, 4uLL);
    uint16x8_t v40 = (uint16x8_t)vmlaq_s16(vmulq_s16(v36, v15), v35, v17);
    uint8x8_t v41 = *a2++;
    uint8x8_t v42 = *v13++;
    int32x4_t v43 = vaddq_s32(v30, (int32x4_t)vextq_s8((int8x16_t)v30, (int8x16_t)v31, 8uLL));
    int32x4_t v44 = vaddq_s32(v31, (int32x4_t)vextq_s8((int8x16_t)v31, v32, 8uLL));
    uint16x8_t v45 = vmovl_u8(v41);
    uint16x8_t v46 = vmovl_u8(v42);
    int32x4_t v47 = (int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vmulq_s32(vaddq_s32(vaddq_s32(v26, (int32x4_t)vextq_s8((int8x16_t)v26, (int8x16_t)v27, 8uLL)), v43), v16), vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v26, (int8x16_t)v27, 4uLL), v38), v18), *(uint16x4_t *)v40.i8, *(uint16x4_t *)v45.i8);
    int32x4_t v48 = (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vmulq_s32(vaddq_s32(vaddq_s32(v27, (int32x4_t)vextq_s8((int8x16_t)v27, v28, 8uLL)), v44), v16), vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v27, v28, 4uLL), v39), v18), v40, v45);
    int16x8_t v20 = (int16x8_t)v21;
    BOOL v49 = __OFSUB__(a6, 8);
    a6 -= 8;
    int16x8_t v23 = (int16x8_t)v24;
    *result++ = vrshrn_high_n_s32(vrshrn_n_s32(v47, 9uLL), v48, 9uLL);
    *v14++ = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vmulq_s32(v43, v16), v38, v18), *(uint16x4_t *)v37.i8, *(uint16x4_t *)v46.i8), 8uLL), (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vmulq_s32(v44, v16), v39, v18), v37, v46), 8uLL);
    if ((a6 < 0) ^ v49 | (a6 == 0)) {
      break;
    }
    int32x4_t v26 = (int32x4_t)v28;
    int32x4_t v30 = (int32x4_t)v32;
    int8x16_t v21 = *v19++;
    int8x16_t v24 = *v22++;
    int32x4_t v27 = *(int32x4_t *)v25;
    int8x16_t v28 = *((int8x16_t *)v25 + 1);
    v25 += 2;
    int32x4_t v31 = *(int32x4_t *)i;
    int8x16_t v32 = *((int8x16_t *)i + 1);
  }
  return result;
}

uint8x8_t *sub_224A76B1C(uint8x8_t *result, uint64_t a2, void *a3, void *a4, int a5, int a6, unsigned int a7)
{
  int16x8_t v7 = vdupq_n_s16(a7);
  int8x16_t v8 = (_OWORD *)*a3;
  int v9 = (_OWORD *)a3[1];
  int16x8_t v11 = (_OWORD *)*a4;
  int16x8_t v12 = (_OWORD *)a4[1];
  int8x16_t v14 = (uint8x8_t *)((char *)result + a2);
  if (a6 <= 1) {
    int8x16_t v14 = (uint8x8_t *)v8;
  }
  v15.i64[0] = 0x5000500050005;
  v15.i64[1] = 0x5000500050005;
  v16.i64[0] = 0x500000005;
  v16.i64[1] = 0x500000005;
  v17.i64[0] = 0x6000600060006;
  v17.i64[1] = 0x6000600060006;
  v18.i64[0] = 0x600000006;
  v18.i64[1] = 0x600000006;
  int16x8_t v20 = *(int16x8_t *)v11;
  int8x16_t v21 = *((int8x16_t *)v11 + 1);
  int8x16_t v19 = (int8x16_t *)(v11 + 2);
  int16x8_t v23 = *(int16x8_t *)v12;
  int8x16_t v24 = *((int8x16_t *)v12 + 1);
  int8x16_t v22 = (int8x16_t *)(v12 + 2);
  int32x4_t v26 = *(int32x4_t *)v8;
  int32x4_t v27 = *((int32x4_t *)v8 + 1);
  int8x16_t v28 = *((int8x16_t *)v8 + 2);
  int32x4_t v25 = v8 + 3;
  int32x4_t v30 = *(int32x4_t *)v9;
  int32x4_t v31 = *((int32x4_t *)v9 + 1);
  int8x16_t v32 = *((int8x16_t *)v9 + 2);
  for (i = v9 + 3; ; i += 2)
  {
    int16x8_t v33 = (int16x8_t)vextq_s8((int8x16_t)v23, v24, 2uLL);
    int16x8_t v34 = vaddq_s16(v23, (int16x8_t)vextq_s8((int8x16_t)v23, v24, 4uLL));
    int16x8_t v35 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v20, v21, 2uLL), v33);
    int16x8_t v36 = vaddq_s16(vaddq_s16(v20, (int16x8_t)vextq_s8((int8x16_t)v20, v21, 4uLL)), v34);
    uint16x8_t v37 = (uint16x8_t)vmlaq_s16(vmulq_s16(v34, v15), v33, v17);
    int32x4_t v38 = (int32x4_t)vextq_s8((int8x16_t)v30, (int8x16_t)v31, 4uLL);
    int32x4_t v39 = (int32x4_t)vextq_s8((int8x16_t)v31, v32, 4uLL);
    uint16x8_t v40 = (uint16x8_t)vmlaq_s16(vmulq_s16(v36, v15), v35, v17);
    int32x4_t v41 = vaddq_s32(v30, (int32x4_t)vextq_s8((int8x16_t)v30, (int8x16_t)v31, 8uLL));
    int32x4_t v42 = vaddq_s32(v31, (int32x4_t)vextq_s8((int8x16_t)v31, v32, 8uLL));
    int16x8_t v43 = (int16x8_t)vmovl_u8(*result);
    int16x8_t v44 = (int16x8_t)vmovl_u8(*v14);
    int32x4_t v45 = (int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vmulq_s32(vaddq_s32(vaddq_s32(v26, (int32x4_t)vextq_s8((int8x16_t)v26, (int8x16_t)v27, 8uLL)), v41), v16), vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v26, (int8x16_t)v27, 4uLL), v38), v18), *(uint16x4_t *)v40.i8, *(uint16x4_t *)v43.i8);
    int32x4_t v46 = (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vmulq_s32(vaddq_s32(vaddq_s32(v27, (int32x4_t)vextq_s8((int8x16_t)v27, v28, 8uLL)), v42), v16), vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v27, v28, 4uLL), v39), v18), v40, (uint16x8_t)v43);
    int16x8_t v20 = (int16x8_t)v21;
    int16x8_t v47 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vmulq_s32(v41, v16), v38, v18), *(uint16x4_t *)v37.i8, *(uint16x4_t *)v44.i8), 8uLL), (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vmulq_s32(v42, v16), v39, v18), v37, (uint16x8_t)v44), 8uLL);
    BOOL v48 = __OFSUB__(a5, 8);
    a5 -= 8;
    int16x8_t v49 = vshlq_n_s16(v43, 4uLL);
    int16x8_t v50 = vshlq_n_s16(v44, 4uLL);
    int16x8_t v23 = (int16x8_t)v24;
    int16x8_t v51 = vsubq_s16(vrshrn_high_n_s32(vrshrn_n_s32(v45, 9uLL), v46, 9uLL), v49);
    int16x8_t v52 = vsubq_s16(v47, v50);
    int8x16_t v21 = *v19++;
    int8x16_t v24 = *v22++;
    int32x4_t v53 = vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v49.i8, 7uLL), *(int16x4_t *)v51.i8, *(int16x4_t *)v7.i8);
    int32x4_t v54 = vmlal_high_s16((int32x4_t)vshll_high_n_u16((uint16x8_t)v49, 7uLL), v51, v7);
    int32x4_t v26 = (int32x4_t)v28;
    int32x4_t v30 = (int32x4_t)v32;
    *result++ = (uint8x8_t)vqmovun_s16(vrshrn_high_n_s32(vrshrn_n_s32(v53, 0xBuLL), v54, 0xBuLL));
    *v14++ = (uint8x8_t)vqmovun_s16(vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v50.i8, 7uLL), *(int16x4_t *)v52.i8, *(int16x4_t *)v7.i8), 0xBuLL), vmlal_high_s16((int32x4_t)vshll_high_n_u16((uint16x8_t)v50, 7uLL), v52, v7), 0xBuLL));
    if ((a5 < 0) ^ v48 | (a5 == 0)) {
      break;
    }
    int32x4_t v27 = *(int32x4_t *)v25;
    int8x16_t v28 = *((int8x16_t *)v25 + 1);
    v25 += 2;
    int32x4_t v31 = *(int32x4_t *)i;
    int8x16_t v32 = *((int8x16_t *)i + 1);
  }
  return result;
}

int8x8_t *sub_224A76CB0(int8x8_t *result, uint64_t a2, uint8x8_t *a3, uint64_t a4, int16x8_t *a5, int16x8_t *a6, uint64_t a7, int a8, const __int16 *a9)
{
  int8x16_t v10 = (int8x8_t *)((char *)result + a2);
  int16x8_t v11 = (uint8x8_t *)((char *)a3 + a4);
  int16x8_t v12 = a5 + 48;
  int32x4_t v13 = a6 + 48;
  int16x8x2_t v38 = vld2q_dup_s16(a9);
  unint64_t v14 = (a7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = 2 * a2 - v14;
  unint64_t v16 = 2 * a4 - v14;
  uint64_t v17 = 1536 - 2 * v14;
  int v18 = a7;
  if (a8 < 2) {
    goto LABEL_6;
  }
  while (1)
  {
    do
    {
      uint8x8_t v19 = *a3++;
      uint8x8_t v20 = *v11++;
      int16x8_t v21 = *a5++;
      int16x8_t v22 = *v12++;
      int16x8_t v23 = *a6++;
      int16x8_t v24 = *v13++;
      BOOL v25 = __OFSUB__(a7, 8);
      LODWORD(a7) = a7 - 8;
      int16x8_t v26 = (int16x8_t)vshll_n_u8(v19, 4uLL);
      int16x8_t v27 = (int16x8_t)vshll_n_u8(v20, 4uLL);
      int16x8_t v28 = vsubq_s16(v21, v26);
      int16x8_t v29 = vsubq_s16(v23, v26);
      int16x8_t v30 = vsubq_s16(v22, v27);
      int16x8_t v31 = vsubq_s16(v24, v27);
      *result++ = vqmovun_s16(vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v26.i8, 7uLL), *(int16x4_t *)v28.i8, *(int16x4_t *)v38.val[0].i8), *(int16x4_t *)v29.i8, *(int16x4_t *)v38.val[1].i8), 0xBuLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_high_n_u16((uint16x8_t)v26, 7uLL), v28, v38.val[0]), v29, v38.val[1]), 0xBuLL));
      *v10++ = vqmovun_s16(vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v27.i8, 7uLL), *(int16x4_t *)v30.i8, *(int16x4_t *)v38.val[0].i8), *(int16x4_t *)v31.i8, *(int16x4_t *)v38.val[1].i8), 0xBuLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_high_n_u16((uint16x8_t)v27, 7uLL), v30, v38.val[0]), v31, v38.val[1]), 0xBuLL));
    }
    while (!(((int)a7 < 0) ^ v25 | (a7 == 0)));
    a8 -= 2;
    if (a8 < 1) {
      break;
    }
    LODWORD(a7) = v18;
    result = (int8x8_t *)((char *)result + v15);
    int8x16_t v10 = (int8x8_t *)((char *)v10 + v15);
    a3 = (uint8x8_t *)((char *)a3 + v16);
    int16x8_t v11 = (uint8x8_t *)((char *)v11 + v16);
    a5 = (int16x8_t *)((char *)a5 + v17);
    int16x8_t v12 = (int16x8_t *)((char *)v12 + v17);
    a6 = (int16x8_t *)((char *)a6 + v17);
    int32x4_t v13 = (int16x8_t *)((char *)v13 + v17);
    if (a8 == 1)
    {
LABEL_6:
      uint8x8_t v32 = *a3++;
      int16x8_t v33 = *a5++;
      int16x8_t v34 = *a6++;
      BOOL v25 = __OFSUB__(a7, 8);
      LODWORD(a7) = a7 - 8;
      int16x8_t v35 = (int16x8_t)vshll_n_u8(v32, 4uLL);
      int16x8_t v36 = vsubq_s16(v33, v35);
      int16x8_t v37 = vsubq_s16(v34, v35);
      *result++ = vqmovun_s16(vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v35.i8, 7uLL), *(int16x4_t *)v36.i8, *(int16x4_t *)v38.val[0].i8), *(int16x4_t *)v37.i8, *(int16x4_t *)v38.val[1].i8), 0xBuLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_high_n_u16((uint16x8_t)v35, 7uLL), v36, v38.val[0]), v37, v38.val[1]), 0xBuLL));
      if (((int)a7 < 0) ^ v25 | (a7 == 0)) {
        return result;
      }
    }
  }
  return result;
}

char *sub_224A76E00(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, char a8, double a9, double a10, double a11, double a12, int8x16_t a13, unsigned int a14)
{
  int64x2_t v14 = *(int64x2_t *)(a7 + 16);
  *(void *)&double v15 = vdupq_n_s32(38 - __clz(a14)).u64[0];
  int16x4_t v16 = (int16x4_t)vzip1q_s64(*(int64x2_t *)a7, v14).u64[0];
  if ((a8 & 4) == 0)
  {
    sub_224A76FAC(v16, *(double *)v14.i64, v15, a12, a13, a1, a2, a3, a1, a5, a6, a7, a8);
    uint64_t v107 = (v106 - 1);
    if (!v107) {
      return sub_224A77130(v42, v43, v49, (uint64_t)v44, v45, v46);
    }
    sub_224A76FAC(*(int16x4_t *)v49.i8, v102, v103, v104, v105, (uint64_t)v42, v43, v44, v45 + v43, v46, v107, v100, v101);
    uint64_t v115 = (v114 - 1);
    if (v115)
    {
      sub_224A76FAC(*(int16x4_t *)v63.i8, v110, v111, v112, v113, (uint64_t)v56, v57, v58, v59 + v57, v60, v115, v108, v109);
      uint64_t v123 = (v122 - 1);
      if (v123)
      {
        int32x4_t v70 = (uint16x8_t *)sub_224A77214(v70, v71, v72, v73 + v71, v74, v77, v118, v119, v120, v121, v123, v116, v117);
        uint64_t v131 = (v130 - 1);
        if (v131)
        {
          int32x4_t v70 = (uint16x8_t *)sub_224A77214(v70, v71, v72, v73, v74, v77, v126, v127, v128, v129, v131, v124, v125);
          uint64_t v83 = (v132 - 1);
          if (v83) {
            goto LABEL_6;
          }
        }
      }
      goto LABEL_15;
    }
LABEL_16:
    int32x4_t v42 = (uint16x8_t *)sub_224A77130(v56, v57, v63, (uint64_t)v58, v59, v60);
    return sub_224A77130(v42, v43, v49, (uint64_t)v44, v45, v46);
  }
  sub_224A76FAC(v16, *(double *)v14.i64, v15, a12, a13, a1, a2, 0, a4, a5, a6, a7, a8);
  sub_224A76FAC(v25, v26, v27, v28, v29, v18, v19, v20, v17 + v19, v21, v22, v23, v24);
  sub_224A76FAC(v37, v38, v39, v40, v41, v30, v31, v36, v30, v32, v33, v34, v35);
  uint64_t v55 = (v54 - 1);
  if (v55)
  {
    sub_224A76FAC(*(int16x4_t *)v49.i8, v50, v51, v52, v53, (uint64_t)v42, v43, v44, v45 + v43, v46, v55, v47, v48);
    uint64_t v69 = (v68 - 1);
    if (v69)
    {
      sub_224A76FAC(*(int16x4_t *)v63.i8, v64, v65, v66, v67, (uint64_t)v56, v57, v58, v59 + v57, v60, v69, v61, v62);
      uint64_t v83 = (v82 - 1);
      if (v83)
      {
        v73 += v71;
        do
        {
LABEL_6:
          int32x4_t v70 = (uint16x8_t *)sub_224A77214(v70, v71, v72, v73, v74, v77, v78, v79, v80, v81, v83, v75, v76);
          uint64_t v83 = (v85 - 1);
        }
        while (v83);
        if ((v76 & 8) != 0)
        {
          int8x16_t v86 = (uint16x8_t *)sub_224A77214(v70, v71, 0, v84, v74, v77, v78, v79, v80, v81, v83, v75, v76);
          int32x4_t v42 = (uint16x8_t *)sub_224A77214(v86, v87, v88, v89, v90, v94, v95, v96, v97, v98, v91, v92, v93);
          return sub_224A77130(v42, v43, v49, (uint64_t)v44, v45, v46);
        }
      }
LABEL_15:
      int32x4_t v56 = (uint16x8_t *)sub_224A77130(v70, v71, v77, (uint64_t)v72, v73, v74);
      goto LABEL_16;
    }
    goto LABEL_16;
  }
  return sub_224A77130(v42, v43, v49, (uint64_t)v44, v45, v46);
}

void sub_224A76FAC(int16x4_t a1, double a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, unint64_t *a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a13)
  {
    if (a8)
    {
      int8x16_t v22 = *(int8x16_t *)a9;
      int8x16_t v23 = *(int8x16_t *)(a9 + 16);
      a5.i64[1] = *a8;
      uint64_t v19 = (_OWORD *)(a9 + 26);
      int16x8_t v21 = (int16x8_t)vextq_s8(v22, v23, 0xAuLL);
      int16x8_t v20 = (int16x8_t)vextq_s8(a5, v22, 0xAuLL);
    }
    else
    {
      uint64_t v18 = (_OWORD *)(a9 - 6);
      int16x8_t v20 = *(int16x8_t *)v18;
      int16x8_t v21 = *((int16x8_t *)v18 + 1);
      uint64_t v19 = v18 + 2;
    }
  }
  else
  {
    int8x16_t v24 = *(int8x16_t *)a9;
    int8x16_t v25 = *(int8x16_t *)(a9 + 16);
    int8x16_t v26 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)a9, 0);
    uint64_t v19 = (_OWORD *)(a9 + 26);
    int16x8_t v21 = (int16x8_t)vextq_s8(v24, v25, 0xAuLL);
    int16x8_t v20 = (int16x8_t)vextq_s8(v26, v24, 0xAuLL);
  }
  int8x16_t v28 = *(int8x16_t *)v19;
  double v27 = v19 + 1;
  if ((a13 & 2) == 0)
  {
LABEL_7:
    if (a10 < 19)
    {
      v14.i16[0] = *((_WORD *)v27 + a10 - 22);
      int8x16_t v29 = (int8x16_t *)((char *)&unk_2646ECFBA - 2 * a10);
      int8x16_t v14 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v14.i8, 0);
      int16x8_t v20 = (int16x8_t)vbslq_s8(*v29, v14, (int8x16_t)v20);
      int16x8_t v21 = (int16x8_t)vbslq_s8(v29[1], v14, (int8x16_t)v21);
      int8x16_t v28 = vbslq_s8(v29[2], v14, v28);
    }
  }
  while (1)
  {
    int16x8_t v30 = (int16x8_t)vextq_s8((int8x16_t)v20, (int8x16_t)v21, 6uLL);
    int16x8_t v31 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v20, (int8x16_t)v21, 8uLL), (int16x8_t)vextq_s8((int8x16_t)v20, (int8x16_t)v21, 4uLL));
    int16x8_t v32 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v20, (int8x16_t)v21, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)v20, (int8x16_t)v21, 2uLL));
    int16x8_t v33 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v20, (int8x16_t)v21, 0xCuLL), v20);
    int32x4_t v34 = vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v30.i8, a1, 3), *(int16x4_t *)v31.i8, a1, 2), *(int16x4_t *)v32.i8, a1, 1), *(int16x4_t *)v33.i8, a1, 0);
    int32x4_t v35 = vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmull_high_lane_s16(v30, a1, 3), v31, a1, 2), v32, a1, 1), v33, a1, 0);
    int16x8_t v36 = (int16x8_t)vextq_s8((int8x16_t)v21, v28, 6uLL);
    int16x8_t v37 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v21, v28, 8uLL), (int16x8_t)vextq_s8((int8x16_t)v21, v28, 4uLL));
    int16x8_t v38 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v21, v28, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)v21, v28, 2uLL));
    int16x8_t v39 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v21, v28, 0xCuLL), v21);
    v40.i64[0] = 0x8000800080008000;
    v40.i64[1] = 0x8000800080008000;
    BOOL v41 = __OFSUB__(a10, 16);
    a10 -= 16;
    *int32x4_t v13 = vsubq_s16((int16x8_t)vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vaddq_s32(v34, v16), v15)), vrshlq_s32(vaddq_s32(v35, v16), v15)), v40), v17);
    v13[1] = vsubq_s16((int16x8_t)vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vaddq_s32(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v36.i8, a1, 3), *(int16x4_t *)v37.i8, a1, 2), *(int16x4_t *)v38.i8, a1, 1), *(int16x4_t *)v39.i8, a1, 0), v16),
                                              v15)),
                                          vrshlq_s32(vaddq_s32(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmull_high_lane_s16(v36, a1, 3), v37, a1, 2), v38, a1, 1), v39, a1, 0), v16), v15)), v40), v17);
    v13 += 2;
    if ((a10 < 0) ^ v41 | (a10 == 0)) {
      break;
    }
    int16x8_t v20 = (int16x8_t)v28;
    int16x8_t v21 = *(int16x8_t *)v27;
    int8x16_t v28 = *((int8x16_t *)v27 + 1);
    v27 += 2;
    if ((a13 & 2) == 0) {
      goto LABEL_7;
    }
  }
}

char *sub_224A77130(uint16x8_t *a1, uint64_t a2, int16x8_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int8x16_t v28 = a1;
  do
  {
    int16x8_t v14 = *v6;
    int16x8_t v15 = v6[1];
    v6 += 2;
    int16x8_t v16 = *v7;
    int16x8_t v17 = v7[1];
    v7 += 2;
    int16x8_t v18 = *v8;
    int16x8_t v19 = v8[1];
    v8 += 2;
    int16x8_t v20 = *v9;
    int16x8_t v21 = v9[1];
    v9 += 2;
    int16x8_t v22 = *v10;
    int16x8_t v23 = v10[1];
    v10 += 2;
    int16x8_t v24 = *v11;
    int16x8_t v25 = v11[1];
    v11 += 2;
    BOOL v26 = __OFSUB__(a6, 16);
    a6 -= 16;
    *a1 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_laneq_s16(*(int16x4_t *)v14.i8, a3, 4), *(int16x4_t *)v16.i8, a3, 5), *(int16x4_t *)v18.i8, a3, 6), *(int16x4_t *)v20.i8, a3, 7),
                                    *(int16x4_t *)v22.i8,
                                    a3,
                                    6),
                                  *(int16x4_t *)v24.i8,
                                  a3,
                                  5),
                                *(int16x4_t *)v24.i8,
                                a3,
                                4),
                              v12)),
                          vrshlq_s32(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_laneq_s16(v14, a3, 4), v16, a3, 5), v18, a3, 6), v20, a3, 7), v22, a3, 6), v24, a3, 5), v24,
                              a3,
                              4),
                            v12)),
            v13);
    a1[1] = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_laneq_s16(*(int16x4_t *)v15.i8, a3, 4), *(int16x4_t *)v17.i8, a3, 5), *(int16x4_t *)v19.i8, a3, 6), *(int16x4_t *)v21.i8, a3, 7),
                                      *(int16x4_t *)v23.i8,
                                      a3,
                                      6),
                                    *(int16x4_t *)v25.i8,
                                    a3,
                                    5),
                                  *(int16x4_t *)v25.i8,
                                  a3,
                                  4),
                                v12)),
                            vrshlq_s32(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_laneq_s16(v15, a3, 4), v17, a3, 5), v19, a3, 6), v21, a3, 7), v23, a3, 6), v25, a3, 5), v25,
                                a3,
                                4),
                              v12)),
              v13);
    a1 += 2;
  }
  while (!((a6 < 0) ^ v26 | (a6 == 0)));
  return (char *)v28 + a2;
}

char *sub_224A77214(uint16x8_t *a1, uint64_t a2, unint64_t *a3, uint64_t a4, int a5, int16x8_t a6, double a7, double a8, double a9, int8x16_t a10, uint64_t a11, uint64_t a12, char a13)
{
  int32x4_t v70 = a1;
  if (a13)
  {
    if (a3)
    {
      int8x16_t v30 = *(int8x16_t *)a4;
      int8x16_t v31 = *(int8x16_t *)(a4 + 16);
      a10.i64[1] = *a3;
      double v27 = (_OWORD *)(a4 + 26);
      int16x8_t v29 = (int16x8_t)vextq_s8(v30, v31, 0xAuLL);
      int16x8_t v28 = (int16x8_t)vextq_s8(a10, v30, 0xAuLL);
    }
    else
    {
      BOOL v26 = (_OWORD *)(a4 - 6);
      int16x8_t v28 = *(int16x8_t *)v26;
      int16x8_t v29 = *((int16x8_t *)v26 + 1);
      double v27 = v26 + 2;
    }
  }
  else
  {
    int8x16_t v32 = *(int8x16_t *)a4;
    int8x16_t v33 = *(int8x16_t *)(a4 + 16);
    int8x16_t v34 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)a4, 0);
    double v27 = (_OWORD *)(a4 + 26);
    int16x8_t v29 = (int16x8_t)vextq_s8(v32, v33, 0xAuLL);
    int16x8_t v28 = (int16x8_t)vextq_s8(v34, v32, 0xAuLL);
  }
  int8x16_t v36 = *(int8x16_t *)v27;
  int32x4_t v35 = v27 + 1;
  if ((a13 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_7:
  if (a5 < 19)
  {
    v20.i16[0] = *((_WORD *)v35 + a5 - 22);
    int16x8_t v37 = (int8x16_t *)((char *)&unk_2646ECFBA - 2 * a5);
    int8x16_t v38 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v20.i8, 0);
    int16x8_t v28 = (int16x8_t)vbslq_s8(*v37, v38, (int8x16_t)v28);
    int16x8_t v29 = (int16x8_t)vbslq_s8(v37[1], v38, (int8x16_t)v29);
    int8x16_t v36 = vbslq_s8(v37[2], v38, v36);
  }
LABEL_9:
  while (1)
  {
    int16x8_t v39 = (int16x8_t)vextq_s8((int8x16_t)v28, (int8x16_t)v29, 6uLL);
    int16x8_t v40 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v28, (int8x16_t)v29, 8uLL), (int16x8_t)vextq_s8((int8x16_t)v28, (int8x16_t)v29, 4uLL));
    int16x8_t v41 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v28, (int8x16_t)v29, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)v28, (int8x16_t)v29, 2uLL));
    int16x8_t v42 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v28, (int8x16_t)v29, 0xCuLL), v28);
    int32x4_t v43 = vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v39.i8, *(int16x4_t *)a6.i8, 3), *(int16x4_t *)v40.i8, *(int16x4_t *)a6.i8, 2), *(int16x4_t *)v41.i8, *(int16x4_t *)a6.i8, 1), *(int16x4_t *)v42.i8, *(int16x4_t *)a6.i8, 0);
    int32x4_t v44 = vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmull_high_lane_s16(v39, *(int16x4_t *)a6.i8, 3), v40, *(int16x4_t *)a6.i8, 2), v41, *(int16x4_t *)a6.i8, 1), v42, *(int16x4_t *)a6.i8, 0);
    int16x8_t v45 = (int16x8_t)vextq_s8((int8x16_t)v29, v36, 6uLL);
    int16x8_t v46 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v29, v36, 8uLL), (int16x8_t)vextq_s8((int8x16_t)v29, v36, 4uLL));
    int16x8_t v47 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v29, v36, 0xAuLL), (int16x8_t)vextq_s8((int8x16_t)v29, v36, 2uLL));
    int16x8_t v48 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v29, v36, 0xCuLL), v29);
    int16x8_t v49 = *v13;
    int16x8_t v50 = v13[1];
    v13 += 2;
    v51.i64[0] = 0x8000800080008000;
    v51.i64[1] = 0x8000800080008000;
    int32x4_t v52 = vaddq_s32(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v45.i8, *(int16x4_t *)a6.i8, 3), *(int16x4_t *)v46.i8, *(int16x4_t *)a6.i8, 2), *(int16x4_t *)v47.i8, *(int16x4_t *)a6.i8, 1), *(int16x4_t *)v48.i8, *(int16x4_t *)a6.i8, 0), v24);
    int32x4_t v53 = vaddq_s32(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmull_high_lane_s16(v45, *(int16x4_t *)a6.i8, 3), v46, *(int16x4_t *)a6.i8, 2), v47, *(int16x4_t *)a6.i8, 1), v48, *(int16x4_t *)a6.i8, 0), v24);
    int16x8_t v54 = *v14;
    int16x8_t v55 = v14[1];
    v14 += 2;
    int16x8_t v56 = *v15;
    int16x8_t v57 = v15[1];
    v15 += 2;
    uint16x8_t v58 = (uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vaddq_s32(v43, v24), v23)), vrshlq_s32(vaddq_s32(v44, v24), v23));
    int16x8_t v59 = *v16;
    int16x8_t v60 = v16[1];
    v16 += 2;
    int16x8_t v61 = (int16x8_t)vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(v52, v23)), vrshlq_s32(v53, v23)), v51);
    int16x8_t v62 = *v17;
    int16x8_t v63 = v17[1];
    v17 += 2;
    int16x8_t v64 = vsubq_s16((int16x8_t)vminq_u16(v58, v51), v25);
    int16x8_t v65 = vsubq_s16(v61, v25);
    int16x8_t v66 = *v18;
    int16x8_t v67 = v18[1];
    v18 += 2;
    int32x4_t v20 = vrshlq_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_laneq_s16(*(int16x4_t *)v50.i8, a6, 4), *(int16x4_t *)v55.i8, a6, 5), *(int16x4_t *)v57.i8, a6, 6), *(int16x4_t *)v60.i8, a6, 7), *(int16x4_t *)v63.i8, a6, 6), *(int16x4_t *)v67.i8, a6, 5), *(int16x4_t *)v65.i8,
              a6,
              4),
            v21);
    *int16x8_t v19 = v64;
    v19[1] = v65;
    v19 += 2;
    BOOL v68 = __OFSUB__(a5, 16);
    a5 -= 16;
    *a1 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_laneq_s16(*(int16x4_t *)v49.i8, a6, 4), *(int16x4_t *)v54.i8, a6, 5), *(int16x4_t *)v56.i8, a6, 6), *(int16x4_t *)v59.i8, a6, 7),
                                    *(int16x4_t *)v62.i8,
                                    a6,
                                    6),
                                  *(int16x4_t *)v66.i8,
                                  a6,
                                  5),
                                *(int16x4_t *)v64.i8,
                                a6,
                                4),
                              v21)),
                          vrshlq_s32(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_laneq_s16(v49, a6, 4), v54, a6, 5), v56, a6, 6), v59, a6, 7), v62, a6, 6), v66, a6, 5), v64,
                              a6,
                              4),
                            v21)),
            v22);
    a1[1] = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(v20), vrshlq_s32(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_laneq_s16(v50, a6, 4), v55, a6, 5), v57, a6, 6), v60, a6, 7), v63, a6, 6), v67,
                                  a6,
                                  5),
                                v65,
                                a6,
                                4),
                              v21)),
              v22);
    a1 += 2;
    if ((a5 < 0) ^ v68 | (a5 == 0)) {
      return (char *)v70 + a2;
    }
    int16x8_t v28 = (int16x8_t)v36;
    int16x8_t v29 = *(int16x8_t *)v35;
    int8x16_t v36 = *((int8x16_t *)v35 + 1);
    v35 += 2;
    if ((a13 & 2) == 0) {
      goto LABEL_7;
    }
  }
}

void sub_224A7746C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, char a8, double a9, double a10, double a11, double a12, int8x16_t a13, unsigned int a14)
{
  int64x2_t v14 = *(int64x2_t *)(a7 + 16);
  *(void *)&double v15 = vdupq_n_s32(38 - __clz(a14)).u64[0];
  int16x4_t v16 = (int16x4_t)vzip1q_s64(*(int64x2_t *)a7, v14).u64[0];
  if ((a8 & 4) != 0)
  {
    sub_224A775E0(v16, *(double *)v14.i64, v15, a12, a13, a1, a2, 0, a4, a5, a6, a7, a8);
    sub_224A775E0(v25, v26, v27, v28, v29, v18, v19, v20, v17 + v19, v21, v22, v23, v24);
    sub_224A775E0(v37, v38, v39, v40, v41, v30, v31, v36, v30, v32, v33, v34, v35);
    uint64_t v55 = (v54 - 1);
    if (v55)
    {
      sub_224A775E0(*(int16x4_t *)v49.i8, v50, v51, v52, v53, (uint64_t)v42, v43, v44, v45 + v43, v46, v55, v47, v48);
      uint64_t v66 = (v65 - 1);
      if (v66)
      {
        v45 += v43;
        do
        {
LABEL_5:
          int16x8_t v56 = (uint16x8_t *)sub_224A777EC(v56, v43, v44, v45, v57, v60, v61, v62, v63, v64, v66, v58, v59);
          uint64_t v66 = (v68 - 1);
        }
        while (v66);
        if ((v59 & 8) != 0)
        {
          uint64_t v69 = (uint16x8_t *)sub_224A777EC(v56, v43, 0, v67, v57, v60, v61, v62, v63, v64, v66, v58, v59);
          sub_224A777EC(v69, v70, v71, v72, v73, v77, v78, v79, v80, v81, v74, v75, v76);
          return;
        }
      }
LABEL_12:
      sub_224A7773C(v56, v60, v43, (uint64_t)v44, v45, v57);
      int16x8_t v42 = (uint16x8_t *)((char *)v56 + v43);
    }
  }
  else
  {
    sub_224A775E0(v16, *(double *)v14.i64, v15, a12, a13, a1, a2, a3, a1, a5, a6, a7, a8);
    uint64_t v89 = (v88 - 1);
    if (v89)
    {
      sub_224A775E0(*(int16x4_t *)v49.i8, v84, v85, v86, v87, (uint64_t)v42, v43, v44, v45 + v43, v46, v89, v82, v83);
      uint64_t v97 = (v96 - 1);
      if (v97)
      {
        int16x8_t v56 = (uint16x8_t *)sub_224A777EC(v56, v43, v44, v45 + v43, v57, v60, v92, v93, v94, v95, v97, v90, v91);
        uint64_t v105 = (v104 - 1);
        if (v105)
        {
          int16x8_t v56 = (uint16x8_t *)sub_224A777EC(v56, v43, v44, v45, v57, v60, v100, v101, v102, v103, v105, v98, v99);
          uint64_t v66 = (v106 - 1);
          if (v66) {
            goto LABEL_5;
          }
        }
      }
      goto LABEL_12;
    }
  }
  sub_224A7773C(v42, v49, v43, (uint64_t)v44, v45, v46);
}

void sub_224A775E0(int16x4_t a1, double a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, unint64_t *a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a13)
  {
    if (a8)
    {
      int8x16_t v22 = *(int8x16_t *)a9;
      int8x16_t v23 = *(int8x16_t *)(a9 + 16);
      a5.i64[1] = *a8;
      uint64_t v19 = (_OWORD *)(a9 + 28);
      int16x8_t v21 = (int16x8_t)vextq_s8(v22, v23, 0xCuLL);
      int16x8_t v20 = (int16x8_t)vextq_s8(a5, v22, 0xCuLL);
    }
    else
    {
      uint64_t v18 = (_OWORD *)(a9 - 4);
      int16x8_t v20 = *(int16x8_t *)v18;
      int16x8_t v21 = *((int16x8_t *)v18 + 1);
      uint64_t v19 = v18 + 2;
    }
  }
  else
  {
    int8x16_t v24 = *(int8x16_t *)a9;
    int8x16_t v25 = *(int8x16_t *)(a9 + 16);
    int8x16_t v26 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)a9, 0);
    uint64_t v19 = (_OWORD *)(a9 + 28);
    int16x8_t v21 = (int16x8_t)vextq_s8(v24, v25, 0xCuLL);
    int16x8_t v20 = (int16x8_t)vextq_s8(v26, v24, 0xCuLL);
  }
  int8x16_t v28 = *(int8x16_t *)v19;
  double v27 = v19 + 1;
  if ((a13 & 2) == 0)
  {
LABEL_7:
    if (a10 < 18)
    {
      v14.i16[0] = *((_WORD *)v27 + a10 - 23);
      int8x16_t v29 = (int8x16_t *)((char *)&unk_2646ECFBC - 2 * a10);
      int8x16_t v14 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v14.i8, 0);
      int16x8_t v20 = (int16x8_t)vbslq_s8(*v29, v14, (int8x16_t)v20);
      int16x8_t v21 = (int16x8_t)vbslq_s8(v29[1], v14, (int8x16_t)v21);
      int8x16_t v28 = vbslq_s8(v29[2], v14, v28);
    }
  }
  while (1)
  {
    int16x8_t v30 = (int16x8_t)vextq_s8((int8x16_t)v20, (int8x16_t)v21, 4uLL);
    int16x8_t v31 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v20, (int8x16_t)v21, 6uLL), (int16x8_t)vextq_s8((int8x16_t)v20, (int8x16_t)v21, 2uLL));
    int16x8_t v32 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v20, (int8x16_t)v21, 8uLL), v20);
    int32x4_t v33 = vmlal_lane_s16(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v30.i8, a1, 3), *(int16x4_t *)v31.i8, a1, 2), *(int16x4_t *)v32.i8, a1, 1);
    int32x4_t v34 = vmlal_high_lane_s16(vmlal_high_lane_s16(vmull_high_lane_s16(v30, a1, 3), v31, a1, 2), v32, a1, 1);
    int16x8_t v35 = (int16x8_t)vextq_s8((int8x16_t)v21, v28, 4uLL);
    int16x8_t v36 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v21, v28, 6uLL), (int16x8_t)vextq_s8((int8x16_t)v21, v28, 2uLL));
    int16x8_t v37 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v21, v28, 8uLL), v21);
    v38.i64[0] = 0x8000800080008000;
    v38.i64[1] = 0x8000800080008000;
    BOOL v39 = __OFSUB__(a10, 16);
    a10 -= 16;
    *uint16x8_t v13 = vsubq_s16((int16x8_t)vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vaddq_s32(v33, v16), v15)), vrshlq_s32(vaddq_s32(v34, v16), v15)), v38), v17);
    v13[1] = vsubq_s16((int16x8_t)vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vaddq_s32(vmlal_lane_s16(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v35.i8, a1, 3), *(int16x4_t *)v36.i8, a1, 2), *(int16x4_t *)v37.i8, a1, 1), v16), v15)), vrshlq_s32(vaddq_s32(vmlal_high_lane_s16(
                                                vmlal_high_lane_s16(vmull_high_lane_s16(v35, a1, 3), v36, a1, 2),
                                                v37,
                                                a1,
                                                1),
                                              v16),
                                            v15)),
                            v38),
               v17);
    v13 += 2;
    if ((a10 < 0) ^ v39 | (a10 == 0)) {
      break;
    }
    int16x8_t v20 = (int16x8_t)v28;
    int16x8_t v21 = *(int16x8_t *)v27;
    int8x16_t v28 = *((int8x16_t *)v27 + 1);
    v27 += 2;
    if ((a13 & 2) == 0) {
      goto LABEL_7;
    }
  }
}

void __spoils<X4,X11,X12,X13,X14,Q0,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q27,Q28> sub_224A7773C(uint16x8_t *a1, int16x8_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    int16x8_t v12 = *v6;
    int16x8_t v13 = v6[1];
    v6 += 2;
    int16x8_t v14 = *v7;
    int16x8_t v15 = v7[1];
    v7 += 2;
    int16x8_t v16 = *v8;
    int16x8_t v17 = v8[1];
    v8 += 2;
    int16x8_t v18 = *v9;
    int16x8_t v19 = v9[1];
    v9 += 2;
    BOOL v20 = __OFSUB__(a6, 16);
    a6 -= 16;
    *a1 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_laneq_s16(*(int16x4_t *)v12.i8, a2, 5), *(int16x4_t *)v14.i8, a2, 6), *(int16x4_t *)v16.i8, a2, 7), *(int16x4_t *)v18.i8, a2, 6), *(int16x4_t *)v18.i8, a2,
                                5),
                              v10)),
                          vrshlq_s32(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_laneq_s16(v12, a2, 5), v14, a2, 6), v16, a2, 7), v18, a2, 6), v18, a2, 5), v10)), v11);
    a1[1] = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_laneq_s16(*(int16x4_t *)v13.i8, a2, 5), *(int16x4_t *)v15.i8, a2, 6), *(int16x4_t *)v17.i8, a2, 7), *(int16x4_t *)v19.i8, a2, 6), *(int16x4_t *)v19.i8, a2,
                                  5),
                                v10)),
                            vrshlq_s32(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_laneq_s16(v13, a2, 5), v15, a2, 6), v17, a2, 7), v19, a2, 6), v19, a2, 5), v10)), v11);
    a1 += 2;
  }
  while (!((a6 < 0) ^ v20 | (a6 == 0)));
}

char *sub_224A777EC(uint16x8_t *a1, uint64_t a2, unint64_t *a3, uint64_t a4, int a5, int16x8_t a6, double a7, double a8, double a9, int8x16_t a10, uint64_t a11, uint64_t a12, char a13)
{
  char v59 = a1;
  if (a13)
  {
    if (a3)
    {
      int8x16_t v28 = *(int8x16_t *)a4;
      int8x16_t v29 = *(int8x16_t *)(a4 + 16);
      a10.i64[1] = *a3;
      int8x16_t v25 = (_OWORD *)(a4 + 28);
      int16x8_t v27 = (int16x8_t)vextq_s8(v28, v29, 0xCuLL);
      int16x8_t v26 = (int16x8_t)vextq_s8(a10, v28, 0xCuLL);
    }
    else
    {
      int8x16_t v24 = (_OWORD *)(a4 - 4);
      int16x8_t v26 = *(int16x8_t *)v24;
      int16x8_t v27 = *((int16x8_t *)v24 + 1);
      int8x16_t v25 = v24 + 2;
    }
  }
  else
  {
    int8x16_t v30 = *(int8x16_t *)a4;
    int8x16_t v31 = *(int8x16_t *)(a4 + 16);
    int8x16_t v32 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)a4, 0);
    int8x16_t v25 = (_OWORD *)(a4 + 28);
    int16x8_t v27 = (int16x8_t)vextq_s8(v30, v31, 0xCuLL);
    int16x8_t v26 = (int16x8_t)vextq_s8(v32, v30, 0xCuLL);
  }
  int8x16_t v34 = *(int8x16_t *)v25;
  int32x4_t v33 = v25 + 1;
  if ((a13 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_7:
  if (a5 < 18)
  {
    v18.i16[0] = *((_WORD *)v33 + a5 - 23);
    int16x8_t v35 = (int8x16_t *)((char *)&unk_2646ECFBC - 2 * a5);
    int8x16_t v36 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v18.i8, 0);
    int16x8_t v26 = (int16x8_t)vbslq_s8(*v35, v36, (int8x16_t)v26);
    int16x8_t v27 = (int16x8_t)vbslq_s8(v35[1], v36, (int8x16_t)v27);
    int8x16_t v34 = vbslq_s8(v35[2], v36, v34);
  }
LABEL_9:
  while (1)
  {
    int16x8_t v37 = (int16x8_t)vextq_s8((int8x16_t)v26, (int8x16_t)v27, 4uLL);
    int16x8_t v38 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v26, (int8x16_t)v27, 6uLL), (int16x8_t)vextq_s8((int8x16_t)v26, (int8x16_t)v27, 2uLL));
    int16x8_t v39 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v26, (int8x16_t)v27, 8uLL), v26);
    int32x4_t v40 = vmlal_lane_s16(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v37.i8, *(int16x4_t *)a6.i8, 3), *(int16x4_t *)v38.i8, *(int16x4_t *)a6.i8, 2), *(int16x4_t *)v39.i8, *(int16x4_t *)a6.i8, 1);
    int32x4_t v41 = vmlal_high_lane_s16(vmlal_high_lane_s16(vmull_high_lane_s16(v37, *(int16x4_t *)a6.i8, 3), v38, *(int16x4_t *)a6.i8, 2), v39, *(int16x4_t *)a6.i8, 1);
    int16x8_t v42 = (int16x8_t)vextq_s8((int8x16_t)v27, v34, 4uLL);
    int16x8_t v43 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v27, v34, 6uLL), (int16x8_t)vextq_s8((int8x16_t)v27, v34, 2uLL));
    int16x8_t v44 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v27, v34, 8uLL), v27);
    int32x4_t v45 = vmlal_lane_s16(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v42.i8, *(int16x4_t *)a6.i8, 3), *(int16x4_t *)v43.i8, *(int16x4_t *)a6.i8, 2), *(int16x4_t *)v44.i8, *(int16x4_t *)a6.i8, 1);
    int32x4_t v46 = vmlal_high_lane_s16(vmlal_high_lane_s16(vmull_high_lane_s16(v42, *(int16x4_t *)a6.i8, 3), v43, *(int16x4_t *)a6.i8, 2), v44, *(int16x4_t *)a6.i8, 1);
    int16x8_t v47 = *v13;
    int16x8_t v48 = v13[1];
    v13 += 2;
    v18.i32[0] = -2147450880;
    v18.i16[2] = 0x8000;
    v18.i16[3] = 0x8000;
    v18.i16[4] = 0x8000;
    v18.i16[5] = 0x8000;
    v18.i16[6] = 0x8000;
    v18.i16[7] = 0x8000;
    int16x8_t v49 = *v14;
    int16x8_t v50 = v14[1];
    v14 += 2;
    int16x8_t v51 = *v15;
    int16x8_t v52 = v15[1];
    v15 += 2;
    int16x8_t v53 = *v16;
    int16x8_t v54 = v16[1];
    v16 += 2;
    int16x8_t v55 = vsubq_s16((int16x8_t)vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vaddq_s32(v40, v22), v21)), vrshlq_s32(vaddq_s32(v41, v22), v21)), v18), v23);
    int16x8_t v56 = vsubq_s16((int16x8_t)vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vaddq_s32(v45, v22), v21)), vrshlq_s32(vaddq_s32(v46, v22), v21)), v18), v23);
    *int16x8_t v17 = v55;
    v17[1] = v56;
    v17 += 2;
    BOOL v57 = __OFSUB__(a5, 16);
    a5 -= 16;
    *a1 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_laneq_s16(*(int16x4_t *)v47.i8, a6, 5), *(int16x4_t *)v49.i8, a6, 6), *(int16x4_t *)v51.i8, a6, 7), *(int16x4_t *)v53.i8, a6, 6), *(int16x4_t *)v55.i8, a6,
                                5),
                              v19)),
                          vrshlq_s32(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_laneq_s16(v47, a6, 5), v49, a6, 6), v51, a6, 7), v53, a6, 6), v55, a6, 5), v19)), v20);
    a1[1] = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_laneq_s16(*(int16x4_t *)v48.i8, a6, 5), *(int16x4_t *)v50.i8, a6, 6), *(int16x4_t *)v52.i8, a6, 7), *(int16x4_t *)v54.i8, a6, 6), *(int16x4_t *)v56.i8, a6,
                                  5),
                                v19)),
                            vrshlq_s32(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_laneq_s16(v48, a6, 5), v50, a6, 6), v52, a6, 7), v54, a6, 6), v56, a6, 5), v19)), v20);
    a1 += 2;
    if ((a5 < 0) ^ v57 | (a5 == 0)) {
      return (char *)v59 + a2;
    }
    int16x8_t v26 = (int16x8_t)v34;
    int16x8_t v27 = *(int16x8_t *)v33;
    int8x16_t v34 = *((int8x16_t *)v33 + 1);
    v33 += 2;
    if ((a13 & 2) == 0) {
      goto LABEL_7;
    }
  }
}

uint32x4_t *sub_224A779EC(uint32x4_t *result, int16x8_t *a2, unint64_t *a3, uint64_t a4, int a5, char a6, double a7, double a8, int8x16_t a9)
{
  int v10 = a5 + 2;
  if (a6)
  {
    if (a3)
    {
      int8x16_t v15 = *(int8x16_t *)a4;
      int8x16_t v16 = *(int8x16_t *)(a4 + 16);
      a9.i64[1] = *a3;
      int16x8_t v12 = (int8x16_t *)(a4 + 28);
      int8x16_t v14 = vextq_s8(v15, v16, 0xCuLL);
      int16x8_t v13 = (int16x8_t)vextq_s8(a9, v15, 0xCuLL);
    }
    else
    {
      uint16x8_t v11 = (_OWORD *)(a4 - 4);
      int16x8_t v13 = *(int16x8_t *)v11;
      int8x16_t v14 = *((int8x16_t *)v11 + 1);
      int16x8_t v12 = (int8x16_t *)(v11 + 2);
    }
  }
  else
  {
    int8x16_t v17 = *(int8x16_t *)a4;
    int8x16_t v18 = *(int8x16_t *)(a4 + 16);
    int8x16_t v19 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)a4, 0);
    int16x8_t v12 = (int8x16_t *)(a4 + 28);
    int8x16_t v14 = vextq_s8(v17, v18, 0xCuLL);
    int16x8_t v13 = (int16x8_t)vextq_s8(v19, v17, 0xCuLL);
  }
  if ((a6 & 2) == 0)
  {
    v9.i16[0] = *((_WORD *)&v12[-2] + v10 - 1);
    int8x16_t v9 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v9.i8, 0);
LABEL_8:
    if (v10 < 10)
    {
      uint16x8_t v20 = (int8x16_t *)((char *)&unk_2646ECFC0 - 2 * v10);
      int16x8_t v13 = (int16x8_t)vbslq_s8(*v20, v9, (int8x16_t)v13);
      int8x16_t v14 = vbslq_s8(v20[1], v9, v14);
    }
  }
  while (1)
  {
    int16x8_t v21 = (int16x8_t)vextq_s8((int8x16_t)v13, v14, 2uLL);
    int16x8_t v22 = (int16x8_t)vextq_s8((int8x16_t)v13, v14, 4uLL);
    BOOL v23 = __OFSUB__(v10, 8);
    v10 -= 8;
    *a2++ = vaddq_s16(vaddq_s16(v13, v21), v22);
    *result = vmlal_u16(vmlal_u16(vmull_u16(*(uint16x4_t *)v13.i8, *(uint16x4_t *)v13.i8), *(uint16x4_t *)v21.i8, *(uint16x4_t *)v21.i8), *(uint16x4_t *)v22.i8, *(uint16x4_t *)v22.i8);
    result[1] = vmlal_high_u16(vmlal_high_u16(vmull_high_u16((uint16x8_t)v13, (uint16x8_t)v13), (uint16x8_t)v21, (uint16x8_t)v21), (uint16x8_t)v22, (uint16x8_t)v22);
    result += 2;
    if ((v10 < 0) ^ v23 | (v10 == 0)) {
      return result;
    }
    int16x8_t v13 = (int16x8_t)v14;
    int8x16_t v14 = *v12++;
    if ((a6 & 2) == 0) {
      goto LABEL_8;
    }
  }
}

uint32x4_t *sub_224A77AB8(uint32x4_t *result, int16x8_t *a2, unint64_t *a3, uint64_t a4, int a5, char a6, double a7, double a8, int8x16_t a9)
{
  int v10 = a5 + 2;
  if (a6)
  {
    if (a3)
    {
      int8x16_t v15 = *(int8x16_t *)a4;
      int8x16_t v16 = *(int8x16_t *)(a4 + 16);
      a9.i64[1] = *a3;
      int16x8_t v12 = (int8x16_t *)(a4 + 26);
      int8x16_t v14 = vextq_s8(v15, v16, 0xAuLL);
      int16x8_t v13 = (int16x8_t)vextq_s8(a9, v15, 0xAuLL);
    }
    else
    {
      uint16x8_t v11 = (_OWORD *)(a4 - 6);
      int16x8_t v13 = *(int16x8_t *)v11;
      int8x16_t v14 = *((int8x16_t *)v11 + 1);
      int16x8_t v12 = (int8x16_t *)(v11 + 2);
    }
  }
  else
  {
    int8x16_t v17 = *(int8x16_t *)a4;
    int8x16_t v18 = *(int8x16_t *)(a4 + 16);
    int8x16_t v19 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)a4, 0);
    int16x8_t v12 = (int8x16_t *)(a4 + 26);
    int8x16_t v14 = vextq_s8(v17, v18, 0xAuLL);
    int16x8_t v13 = (int16x8_t)vextq_s8(v19, v17, 0xAuLL);
  }
  if ((a6 & 2) == 0)
  {
    v9.i16[0] = v12[-2].i16[v10];
    int8x16_t v9 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v9.i8, 0);
LABEL_8:
    if (v10 < 11)
    {
      uint16x8_t v20 = (int8x16_t *)((char *)&unk_2646ECFBF - 2 * v10);
      int16x8_t v13 = (int16x8_t)vbslq_s8(*v20, v9, (int8x16_t)v13);
      int8x16_t v14 = vbslq_s8(v20[1], v9, v14);
    }
  }
  while (1)
  {
    int16x8_t v21 = (int16x8_t)vextq_s8((int8x16_t)v13, v14, 2uLL);
    int16x8_t v22 = (int16x8_t)vextq_s8((int8x16_t)v13, v14, 4uLL);
    uint32x4_t v23 = vmlal_u16(vmlal_u16(vmull_u16(*(uint16x4_t *)v13.i8, *(uint16x4_t *)v13.i8), *(uint16x4_t *)v21.i8, *(uint16x4_t *)v21.i8), *(uint16x4_t *)v22.i8, *(uint16x4_t *)v22.i8);
    int16x8_t v24 = vaddq_s16(vaddq_s16(v13, v21), v22);
    uint32x4_t v25 = vmlal_high_u16(vmlal_high_u16(vmull_high_u16((uint16x8_t)v13, (uint16x8_t)v13), (uint16x8_t)v21, (uint16x8_t)v21), (uint16x8_t)v22, (uint16x8_t)v22);
    int16x8_t v26 = (int16x8_t)vextq_s8((int8x16_t)v13, v14, 6uLL);
    int16x8_t v27 = (int16x8_t)vextq_s8((int8x16_t)v13, v14, 8uLL);
    BOOL v28 = __OFSUB__(v10, 8);
    v10 -= 8;
    *a2++ = vaddq_s16(vaddq_s16(v24, v26), v27);
    *result = vmlal_u16(vmlal_u16(v23, *(uint16x4_t *)v26.i8, *(uint16x4_t *)v26.i8), *(uint16x4_t *)v27.i8, *(uint16x4_t *)v27.i8);
    result[1] = vmlal_high_u16(vmlal_high_u16(v25, (uint16x8_t)v26, (uint16x8_t)v26), (uint16x8_t)v27, (uint16x8_t)v27);
    result += 2;
    if ((v10 < 0) ^ v28 | (v10 == 0)) {
      return result;
    }
    int16x8_t v13 = (int16x8_t)v14;
    int8x16_t v14 = *v12++;
    if ((a6 & 2) == 0) {
      goto LABEL_8;
    }
  }
}

uint32x4_t *sub_224A77BA8(uint32x4_t *result, int16x8_t *a2, uint32x4_t *a3, int16x8_t *a4, unint64_t *a5, uint64_t a6, int a7, char a8, double a9, double a10, int8x16_t a11)
{
  int v12 = a7 + 2;
  if (a8)
  {
    if (a5)
    {
      int8x16_t v17 = *(int8x16_t *)a6;
      int8x16_t v18 = *(int8x16_t *)(a6 + 16);
      a11.i64[1] = *a5;
      int8x16_t v14 = (int8x16_t *)(a6 + 26);
      int8x16_t v16 = vextq_s8(v17, v18, 0xAuLL);
      int16x8_t v15 = (int16x8_t)vextq_s8(a11, v17, 0xAuLL);
    }
    else
    {
      int16x8_t v13 = (_OWORD *)(a6 - 6);
      int16x8_t v15 = *(int16x8_t *)v13;
      int8x16_t v16 = *((int8x16_t *)v13 + 1);
      int8x16_t v14 = (int8x16_t *)(v13 + 2);
    }
  }
  else
  {
    int8x16_t v19 = *(int8x16_t *)a6;
    int8x16_t v20 = *(int8x16_t *)(a6 + 16);
    int8x16_t v21 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)a6, 0);
    int8x16_t v14 = (int8x16_t *)(a6 + 26);
    int8x16_t v16 = vextq_s8(v19, v20, 0xAuLL);
    int16x8_t v15 = (int16x8_t)vextq_s8(v21, v19, 0xAuLL);
  }
  if ((a8 & 2) == 0)
  {
    v11.i16[0] = v14[-2].i16[v12];
    int8x16_t v11 = (int8x16_t)vdupq_lane_s16(*(int16x4_t *)v11.i8, 0);
LABEL_8:
    if (v12 < 11)
    {
      int16x8_t v22 = (int8x16_t *)((char *)&unk_2646ECFBF - 2 * v12);
      int16x8_t v15 = (int16x8_t)vbslq_s8(*v22, v11, (int8x16_t)v15);
      int8x16_t v16 = vbslq_s8(v22[1], v11, v16);
    }
  }
  while (1)
  {
    int16x8_t v23 = (int16x8_t)vextq_s8((int8x16_t)v15, v16, 2uLL);
    int16x8_t v24 = (int16x8_t)vextq_s8((int8x16_t)v15, v16, 4uLL);
    int16x8_t v25 = (int16x8_t)vextq_s8((int8x16_t)v15, v16, 8uLL);
    int16x8_t v26 = (int16x8_t)vextq_s8((int8x16_t)v15, v16, 6uLL);
    int16x8_t v27 = vaddq_s16(vaddq_s16(v23, v24), v26);
    uint32x4_t v28 = vmlal_u16(vmlal_u16(vmull_u16(*(uint16x4_t *)v23.i8, *(uint16x4_t *)v23.i8), *(uint16x4_t *)v24.i8, *(uint16x4_t *)v24.i8), *(uint16x4_t *)v26.i8, *(uint16x4_t *)v26.i8);
    uint32x4_t v29 = vmlal_high_u16(vmlal_high_u16(vmull_high_u16((uint16x8_t)v23, (uint16x8_t)v23), (uint16x8_t)v24, (uint16x8_t)v24), (uint16x8_t)v26, (uint16x8_t)v26);
    *a2++ = v27;
    *result = v28;
    result[1] = v29;
    result += 2;
    BOOL v30 = __OFSUB__(v12, 8);
    v12 -= 8;
    *a4++ = vaddq_s16(vaddq_s16(v15, v25), v27);
    *a3 = vmlal_u16(vmlal_u16(v28, *(uint16x4_t *)v15.i8, *(uint16x4_t *)v15.i8), *(uint16x4_t *)v25.i8, *(uint16x4_t *)v25.i8);
    a3[1] = vmlal_high_u16(vmlal_high_u16(v29, (uint16x8_t)v15, (uint16x8_t)v15), (uint16x8_t)v25, (uint16x8_t)v25);
    a3 += 2;
    if ((v12 < 0) ^ v30 | (v12 == 0)) {
      return result;
    }
    int16x8_t v15 = (int16x8_t)v16;
    int8x16_t v16 = *v14++;
    if ((a8 & 2) == 0) {
      goto LABEL_8;
    }
  }
}

int16x8_t *sub_224A77CA0(int16x8_t *result, uint16x8_t *a2, uint64_t a3, void *a4, void *a5, int a6, int a7)
{
  int16x8_t v7 = (_OWORD *)*a4;
  int8x16_t v8 = (_OWORD *)a4[1];
  int v10 = (_OWORD *)a4[2];
  int8x16_t v9 = (_OWORD *)a4[3];
  int8x16_t v11 = (_OWORD *)*a5;
  int v12 = (_OWORD *)a5[1];
  int8x16_t v14 = (_OWORD *)a5[2];
  int16x8_t v13 = (_OWORD *)a5[3];
  int16x8_t v15 = (uint16x8_t *)((char *)a2 + a3);
  if (a7 <= 1) {
    int16x8_t v15 = a2;
  }
  int8x16_t v16 = result + 48;
  v17.i64[0] = 0x3000300030003;
  v17.i64[1] = 0x3000300030003;
  v18.i64[0] = 0x300000003;
  v18.i64[1] = 0x300000003;
  int16x8_t v20 = *(int16x8_t *)v11;
  int8x16_t v21 = *((int8x16_t *)v11 + 1);
  int8x16_t v19 = (int8x16_t *)(v11 + 2);
  int16x8_t v23 = *(int16x8_t *)v12;
  int8x16_t v24 = *((int8x16_t *)v12 + 1);
  int16x8_t v22 = (int8x16_t *)(v12 + 2);
  int16x8_t v26 = *(int16x8_t *)v14;
  int8x16_t v27 = *((int8x16_t *)v14 + 1);
  int16x8_t v25 = (int8x16_t *)(v14 + 2);
  int16x8_t v29 = *(int16x8_t *)v13;
  int8x16_t v30 = *((int8x16_t *)v13 + 1);
  uint32x4_t v28 = (int8x16_t *)(v13 + 2);
  int32x4_t v32 = *(int32x4_t *)v7;
  int32x4_t v33 = *((int32x4_t *)v7 + 1);
  int8x16_t v34 = *((int8x16_t *)v7 + 2);
  int8x16_t v31 = v7 + 3;
  int32x4_t v36 = *(int32x4_t *)v8;
  int32x4_t v37 = *((int32x4_t *)v8 + 1);
  int8x16_t v38 = *((int8x16_t *)v8 + 2);
  int16x8_t v35 = v8 + 3;
  int32x4_t v40 = *(int32x4_t *)v10;
  int32x4_t v41 = *((int32x4_t *)v10 + 1);
  int8x16_t v42 = *((int8x16_t *)v10 + 2);
  int16x8_t v39 = v10 + 3;
  int32x4_t v44 = *(int32x4_t *)v9;
  int32x4_t v45 = *((int32x4_t *)v9 + 1);
  int8x16_t v46 = *((int8x16_t *)v9 + 2);
  for (i = v9 + 3; ; i += 2)
  {
    int16x8_t v47 = (int16x8_t)vextq_s8((int8x16_t)v23, v24, 2uLL);
    int16x8_t v48 = (int16x8_t)vextq_s8((int8x16_t)v26, v27, 2uLL);
    int16x8_t v49 = (int16x8_t)vextq_s8((int8x16_t)v23, v24, 4uLL);
    int16x8_t v50 = (int16x8_t)vextq_s8((int8x16_t)v26, v27, 4uLL);
    int16x8_t v51 = vaddq_s16(vaddq_s16(v26, v47), v50);
    uint16x8_t v52 = (uint16x8_t)vmlaq_s16(vshlq_n_s16(vaddq_s16(vaddq_s16(vaddq_s16(v23, (int16x8_t)vextq_s8((int8x16_t)v20, v21, 2uLL)), v49), vaddq_s16(v47, v48)), 2uLL), vaddq_s16(vaddq_s16(v20, (int16x8_t)vextq_s8((int8x16_t)v20, v21, 4uLL)), vaddq_s16(v26, v50)), v17);
    uint16x8_t v53 = (uint16x8_t)vmlaq_s16(vshlq_n_s16(vaddq_s16(v51, vaddq_s16(v48, (int16x8_t)vextq_s8((int8x16_t)v29, v30, 2uLL))), 2uLL), vaddq_s16(vaddq_s16(v23, v49), vaddq_s16(v29, (int16x8_t)vextq_s8((int8x16_t)v29, v30, 4uLL))), v17);
    int32x4_t v54 = (int32x4_t)vextq_s8((int8x16_t)v36, (int8x16_t)v37, 4uLL);
    int32x4_t v55 = (int32x4_t)vextq_s8((int8x16_t)v37, v38, 4uLL);
    int32x4_t v56 = (int32x4_t)vextq_s8((int8x16_t)v36, (int8x16_t)v37, 8uLL);
    int32x4_t v57 = (int32x4_t)vextq_s8((int8x16_t)v37, v38, 8uLL);
    int32x4_t v58 = (int32x4_t)vextq_s8((int8x16_t)v40, (int8x16_t)v41, 4uLL);
    int32x4_t v59 = (int32x4_t)vextq_s8((int8x16_t)v41, v42, 4uLL);
    int32x4_t v60 = vaddq_s32(vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v32, (int8x16_t)v33, 4uLL), v36), vaddq_s32(v54, v56));
    int32x4_t v61 = vaddq_s32(vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v33, v34, 4uLL), v37), vaddq_s32(v55, v57));
    int32x4_t v62 = vaddq_s32(v36, v56);
    int32x4_t v63 = vaddq_s32(v37, v57);
    int32x4_t v64 = vaddq_s32(v40, v54);
    int32x4_t v65 = vaddq_s32(v41, v55);
    int32x4_t v66 = (int32x4_t)vextq_s8((int8x16_t)v40, (int8x16_t)v41, 8uLL);
    int32x4_t v67 = (int32x4_t)vextq_s8((int8x16_t)v41, v42, 8uLL);
    int32x4_t v68 = vaddq_s32(vaddq_s32(vaddq_s32(v32, (int32x4_t)vextq_s8((int8x16_t)v32, (int8x16_t)v33, 8uLL)), v40), v66);
    int32x4_t v69 = vaddq_s32(vaddq_s32(vaddq_s32(v33, (int32x4_t)vextq_s8((int8x16_t)v33, v34, 8uLL)), v41), v67);
    int32x4_t v70 = vaddq_s32(v66, (int32x4_t)vextq_s8((int8x16_t)v44, (int8x16_t)v45, 4uLL));
    int32x4_t v71 = vaddq_s32(v67, (int32x4_t)vextq_s8((int8x16_t)v45, v46, 4uLL));
    int32x4_t v72 = vaddq_s32(v62, vaddq_s32(v44, (int32x4_t)vextq_s8((int8x16_t)v44, (int8x16_t)v45, 8uLL)));
    int32x4_t v73 = vaddq_s32(v63, vaddq_s32(v45, (int32x4_t)vextq_s8((int8x16_t)v45, v46, 8uLL)));
    uint16x8_t v74 = *a2++;
    uint16x8_t v75 = *v15++;
    int32x4_t v76 = (int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vshlq_n_s32(vaddq_s32(vaddq_s32(v64, v58), v70), 2uLL), v72, v18), *(uint16x4_t *)v53.i8, *(uint16x4_t *)v75.i8);
    int32x4_t v77 = (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vshlq_n_s32(vaddq_s32(vaddq_s32(v65, v59), v71), 2uLL), v73, v18), v53, v75);
    int16x8_t v20 = (int16x8_t)v21;
    int16x8_t v78 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vshlq_n_s32(vaddq_s32(v60, v58), 2uLL), v68, v18), *(uint16x4_t *)v52.i8, *(uint16x4_t *)v74.i8), 9uLL), (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vshlq_n_s32(vaddq_s32(v61, v59), 2uLL), v69, v18), v52, v74), 9uLL);
    int16x8_t v23 = (int16x8_t)v24;
    BOOL v79 = __OFSUB__(a6, 8);
    a6 -= 8;
    int16x8_t v26 = (int16x8_t)v27;
    *result++ = v78;
    int16x8_t v29 = (int16x8_t)v30;
    *v16++ = vrshrn_high_n_s32(vrshrn_n_s32(v76, 9uLL), v77, 9uLL);
    if ((a6 < 0) ^ v79 | (a6 == 0)) {
      break;
    }
    int32x4_t v32 = (int32x4_t)v34;
    int32x4_t v36 = (int32x4_t)v38;
    int32x4_t v40 = (int32x4_t)v42;
    int32x4_t v44 = (int32x4_t)v46;
    int8x16_t v21 = *v19++;
    int8x16_t v24 = *v22++;
    int8x16_t v27 = *v25++;
    int8x16_t v30 = *v28++;
    int32x4_t v33 = *(int32x4_t *)v31;
    int8x16_t v34 = *((int8x16_t *)v31 + 1);
    v31 += 2;
    int32x4_t v37 = *(int32x4_t *)v35;
    int8x16_t v38 = *((int8x16_t *)v35 + 1);
    v35 += 2;
    int32x4_t v41 = *(int32x4_t *)v39;
    int8x16_t v42 = *((int8x16_t *)v39 + 1);
    v39 += 2;
    int32x4_t v45 = *(int32x4_t *)i;
    int8x16_t v46 = *((int8x16_t *)i + 1);
  }
  return result;
}

uint16x4_t *sub_224A77EC4(uint16x4_t *result, void *a2, void *a3, int a4, unsigned int a5, unsigned int a6)
{
  v6 = (_OWORD *)*a2;
  int16x8_t v7 = (_OWORD *)a2[1];
  int8x16_t v8 = (_OWORD *)a2[2];
  int8x16_t v9 = (_OWORD *)*a3;
  int v10 = (_OWORD *)a3[1];
  int8x16_t v11 = (_OWORD *)a3[2];
  int16x8_t v12 = vdupq_n_s16(a5);
  uint16x8_t v13 = (uint16x8_t)vdupq_n_s16(a6);
  v14.i64[0] = 0x3000300030003;
  v14.i64[1] = 0x3000300030003;
  v15.i64[0] = 0x300000003;
  v15.i64[1] = 0x300000003;
  int16x8_t v17 = *(int16x8_t *)v9;
  int8x16_t v18 = *((int8x16_t *)v9 + 1);
  int8x16_t v16 = (int8x16_t *)(v9 + 2);
  int16x8_t v20 = *(int16x8_t *)v10;
  int8x16_t v21 = *((int8x16_t *)v10 + 1);
  int8x16_t v19 = (int8x16_t *)(v10 + 2);
  int16x8_t v23 = *(int16x8_t *)v11;
  int8x16_t v24 = *((int8x16_t *)v11 + 1);
  int16x8_t v22 = (int8x16_t *)(v11 + 2);
  int32x4_t v26 = *(int32x4_t *)v6;
  int32x4_t v27 = *((int32x4_t *)v6 + 1);
  int8x16_t v28 = *((int8x16_t *)v6 + 2);
  int16x8_t v25 = v6 + 3;
  int32x4_t v30 = *(int32x4_t *)v7;
  int32x4_t v31 = *((int32x4_t *)v7 + 1);
  int8x16_t v32 = *((int8x16_t *)v7 + 2);
  int16x8_t v29 = v7 + 3;
  int32x4_t v34 = *(int32x4_t *)v8;
  int32x4_t v35 = *((int32x4_t *)v8 + 1);
  int8x16_t v36 = *((int8x16_t *)v8 + 2);
  for (i = v8 + 3; ; i += 2)
  {
    uint16x8_t v37 = (uint16x8_t)vmlaq_s16(vshlq_n_s16(vaddq_s16(vaddq_s16(vaddq_s16(v20, (int16x8_t)vextq_s8((int8x16_t)v17, v18, 2uLL)), vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v20, v21, 2uLL), (int16x8_t)vextq_s8((int8x16_t)v23, v24, 2uLL))), (int16x8_t)vextq_s8((int8x16_t)v20, v21, 4uLL)), 2uLL), vaddq_s16(vaddq_s16(v17, (int16x8_t)vextq_s8((int8x16_t)v17, v18, 4uLL)), vaddq_s16(v23, (int16x8_t)vextq_s8((int8x16_t)v23, v24, 4uLL))), v14);
    int16x8_t v17 = (int16x8_t)v18;
    int32x4_t v38 = (int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vshlq_n_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v26, (int8x16_t)v27, 4uLL), v30), vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v30, (int8x16_t)v31, 4uLL), (int32x4_t)vextq_s8((int8x16_t)v30, (int8x16_t)v31, 8uLL))), (int32x4_t)vextq_s8((int8x16_t)v34, (int8x16_t)v35, 4uLL)), 2uLL), vaddq_s32(vaddq_s32(vaddq_s32(v26, (int32x4_t)vextq_s8((int8x16_t)v26, (int8x16_t)v27, 8uLL)), v34), (int32x4_t)vextq_s8((int8x16_t)v34, (int8x16_t)v35, 8uLL)), v15), *(uint16x4_t *)v37.i8, *result);
    int32x4_t v39 = (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vshlq_n_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v27, v28, 4uLL), v31), vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v31, v32, 4uLL), (int32x4_t)vextq_s8((int8x16_t)v31, v32, 8uLL))), (int32x4_t)vextq_s8((int8x16_t)v35, v36, 4uLL)), 2uLL), vaddq_s32(vaddq_s32(vaddq_s32(v27, (int32x4_t)vextq_s8((int8x16_t)v27, v28, 8uLL)), v35), (int32x4_t)vextq_s8((int8x16_t)v35, v36, 8uLL)), v15), v37, *(uint16x8_t *)result->i8);
    int16x8_t v20 = (int16x8_t)v21;
    BOOL v40 = __OFSUB__(a4, 8);
    a4 -= 8;
    int16x8_t v41 = vshlq_n_s16(*(int16x8_t *)result->i8, 4uLL);
    int16x8_t v23 = (int16x8_t)v24;
    int16x8_t v42 = vsubq_s16(vrshrn_high_n_s32(vrshrn_n_s32(v38, 9uLL), v39, 9uLL), v41);
    int8x16_t v18 = *v16++;
    int8x16_t v21 = *v19++;
    int8x16_t v24 = *v22++;
    int32x4_t v26 = (int32x4_t)v28;
    uint16x8_t v43 = vminq_u16((uint16x8_t)vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v41.i8, 7uLL), *(int16x4_t *)v42.i8, *(int16x4_t *)v12.i8), 0xBuLL), vmlal_high_s16((int32x4_t)vshll_high_n_u16((uint16x8_t)v41, 7uLL), v42, v12), 0xBuLL), v13);
    int32x4_t v30 = (int32x4_t)v32;
    int32x4_t v34 = (int32x4_t)v36;
    *(uint16x8_t *)result->i8 = v43;
    result += 2;
    if ((a4 < 0) ^ v40 | (a4 == 0)) {
      break;
    }
    int32x4_t v27 = *(int32x4_t *)v25;
    int8x16_t v28 = *((int8x16_t *)v25 + 1);
    v25 += 2;
    int32x4_t v31 = *(int32x4_t *)v29;
    int8x16_t v32 = *((int8x16_t *)v29 + 1);
    v29 += 2;
    int32x4_t v35 = *(int32x4_t *)i;
    int8x16_t v36 = *((int8x16_t *)i + 1);
  }
  return result;
}

int16x8_t *sub_224A7802C(int16x8_t *result, uint16x8_t *a2, uint64_t a3, void *a4, void *a5, int a6, int a7)
{
  int16x8_t v7 = (_OWORD *)*a4;
  int8x16_t v8 = (_OWORD *)a4[1];
  int v10 = (_OWORD *)*a5;
  int8x16_t v11 = (_OWORD *)a5[1];
  uint16x8_t v13 = (uint16x8_t *)((char *)a2 + a3);
  if (a7 <= 1) {
    uint16x8_t v13 = a2;
  }
  int16x8_t v14 = result + 48;
  v15.i64[0] = 0x5000500050005;
  v15.i64[1] = 0x5000500050005;
  v16.i64[0] = 0x500000005;
  v16.i64[1] = 0x500000005;
  v17.i64[0] = 0x6000600060006;
  v17.i64[1] = 0x6000600060006;
  v18.i64[0] = 0x600000006;
  v18.i64[1] = 0x600000006;
  int16x8_t v20 = *(int16x8_t *)v10;
  int8x16_t v21 = *((int8x16_t *)v10 + 1);
  int8x16_t v19 = (int8x16_t *)(v10 + 2);
  int16x8_t v23 = *(int16x8_t *)v11;
  int8x16_t v24 = *((int8x16_t *)v11 + 1);
  int16x8_t v22 = (int8x16_t *)(v11 + 2);
  int32x4_t v26 = *(int32x4_t *)v7;
  int32x4_t v27 = *((int32x4_t *)v7 + 1);
  int8x16_t v28 = *((int8x16_t *)v7 + 2);
  int16x8_t v25 = v7 + 3;
  int32x4_t v30 = *(int32x4_t *)v8;
  int32x4_t v31 = *((int32x4_t *)v8 + 1);
  int8x16_t v32 = *((int8x16_t *)v8 + 2);
  for (i = v8 + 3; ; i += 2)
  {
    int16x8_t v33 = (int16x8_t)vextq_s8((int8x16_t)v23, v24, 2uLL);
    int16x8_t v34 = vaddq_s16(v23, (int16x8_t)vextq_s8((int8x16_t)v23, v24, 4uLL));
    int16x8_t v35 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v20, v21, 2uLL), v33);
    int16x8_t v36 = vaddq_s16(vaddq_s16(v20, (int16x8_t)vextq_s8((int8x16_t)v20, v21, 4uLL)), v34);
    uint16x8_t v37 = (uint16x8_t)vmlaq_s16(vmulq_s16(v34, v15), v33, v17);
    int32x4_t v38 = (int32x4_t)vextq_s8((int8x16_t)v30, (int8x16_t)v31, 4uLL);
    int32x4_t v39 = (int32x4_t)vextq_s8((int8x16_t)v31, v32, 4uLL);
    uint16x8_t v40 = (uint16x8_t)vmlaq_s16(vmulq_s16(v36, v15), v35, v17);
    uint16x8_t v41 = *a2++;
    uint16x8_t v42 = *v13++;
    int32x4_t v43 = vaddq_s32(v30, (int32x4_t)vextq_s8((int8x16_t)v30, (int8x16_t)v31, 8uLL));
    int32x4_t v44 = vaddq_s32(v31, (int32x4_t)vextq_s8((int8x16_t)v31, v32, 8uLL));
    int32x4_t v45 = (int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vmulq_s32(vaddq_s32(vaddq_s32(v26, (int32x4_t)vextq_s8((int8x16_t)v26, (int8x16_t)v27, 8uLL)), v43), v16), vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v26, (int8x16_t)v27, 4uLL), v38), v18), *(uint16x4_t *)v40.i8, *(uint16x4_t *)v41.i8);
    int32x4_t v46 = (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vmulq_s32(vaddq_s32(vaddq_s32(v27, (int32x4_t)vextq_s8((int8x16_t)v27, v28, 8uLL)), v44), v16), vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v27, v28, 4uLL), v39), v18), v40, v41);
    int16x8_t v20 = (int16x8_t)v21;
    BOOL v47 = __OFSUB__(a6, 8);
    a6 -= 8;
    int16x8_t v23 = (int16x8_t)v24;
    *result++ = vrshrn_high_n_s32(vrshrn_n_s32(v45, 9uLL), v46, 9uLL);
    *v14++ = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vmulq_s32(v43, v16), v38, v18), *(uint16x4_t *)v37.i8, *(uint16x4_t *)v42.i8), 8uLL), (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vmulq_s32(v44, v16), v39, v18), v37, v42), 8uLL);
    if ((a6 < 0) ^ v47 | (a6 == 0)) {
      break;
    }
    int32x4_t v26 = (int32x4_t)v28;
    int32x4_t v30 = (int32x4_t)v32;
    int8x16_t v21 = *v19++;
    int8x16_t v24 = *v22++;
    int32x4_t v27 = *(int32x4_t *)v25;
    int8x16_t v28 = *((int8x16_t *)v25 + 1);
    v25 += 2;
    int32x4_t v31 = *(int32x4_t *)i;
    int8x16_t v32 = *((int8x16_t *)i + 1);
  }
  return result;
}

uint16x4_t *sub_224A78178(uint16x4_t *result, uint64_t a2, void *a3, void *a4, int a5, int a6, unsigned int a7, unsigned int a8)
{
  int16x8_t v8 = vdupq_n_s16(a7);
  uint16x8_t v9 = (uint16x8_t)vdupq_n_s16(a8);
  int v10 = (_OWORD *)*a3;
  int8x16_t v11 = (_OWORD *)a3[1];
  uint16x8_t v13 = (_OWORD *)*a4;
  int16x8_t v14 = (_OWORD *)a4[1];
  int32x4_t v16 = (int16x8_t *)((char *)result + a2);
  if (a6 <= 1) {
    int32x4_t v16 = (int16x8_t *)v10;
  }
  v17.i64[0] = 0x5000500050005;
  v17.i64[1] = 0x5000500050005;
  v18.i64[0] = 0x500000005;
  v18.i64[1] = 0x500000005;
  v19.i64[0] = 0x6000600060006;
  v19.i64[1] = 0x6000600060006;
  v20.i64[0] = 0x600000006;
  v20.i64[1] = 0x600000006;
  int16x8_t v22 = *(int16x8_t *)v13;
  int8x16_t v23 = *((int8x16_t *)v13 + 1);
  int8x16_t v21 = (int8x16_t *)(v13 + 2);
  int16x8_t v25 = *(int16x8_t *)v14;
  int8x16_t v26 = *((int8x16_t *)v14 + 1);
  int8x16_t v24 = (int8x16_t *)(v14 + 2);
  int32x4_t v28 = *(int32x4_t *)v10;
  int32x4_t v29 = *((int32x4_t *)v10 + 1);
  int8x16_t v30 = *((int8x16_t *)v10 + 2);
  int32x4_t v27 = v10 + 3;
  int32x4_t v32 = *(int32x4_t *)v11;
  int32x4_t v33 = *((int32x4_t *)v11 + 1);
  int8x16_t v34 = *((int8x16_t *)v11 + 2);
  for (i = v11 + 3; ; i += 2)
  {
    int16x8_t v35 = (int16x8_t)vextq_s8((int8x16_t)v25, v26, 2uLL);
    int16x8_t v36 = vaddq_s16(v25, (int16x8_t)vextq_s8((int8x16_t)v25, v26, 4uLL));
    int16x8_t v37 = vaddq_s16((int16x8_t)vextq_s8((int8x16_t)v22, v23, 2uLL), v35);
    int16x8_t v38 = vaddq_s16(vaddq_s16(v22, (int16x8_t)vextq_s8((int8x16_t)v22, v23, 4uLL)), v36);
    uint16x8_t v39 = (uint16x8_t)vmlaq_s16(vmulq_s16(v36, v17), v35, v19);
    int32x4_t v40 = (int32x4_t)vextq_s8((int8x16_t)v32, (int8x16_t)v33, 4uLL);
    int32x4_t v41 = (int32x4_t)vextq_s8((int8x16_t)v33, v34, 4uLL);
    uint16x8_t v42 = (uint16x8_t)vmlaq_s16(vmulq_s16(v38, v17), v37, v19);
    int32x4_t v43 = vaddq_s32(v32, (int32x4_t)vextq_s8((int8x16_t)v32, (int8x16_t)v33, 8uLL));
    int32x4_t v44 = vaddq_s32(v33, (int32x4_t)vextq_s8((int8x16_t)v33, v34, 8uLL));
    int32x4_t v45 = (int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vmulq_s32(vaddq_s32(vaddq_s32(v28, (int32x4_t)vextq_s8((int8x16_t)v28, (int8x16_t)v29, 8uLL)), v43), v18), vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v28, (int8x16_t)v29, 4uLL), v40), v20), *(uint16x4_t *)v42.i8, *result);
    int32x4_t v46 = (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vmulq_s32(vaddq_s32(vaddq_s32(v29, (int32x4_t)vextq_s8((int8x16_t)v29, v30, 8uLL)), v44), v18), vaddq_s32((int32x4_t)vextq_s8((int8x16_t)v29, v30, 4uLL), v41), v20), v42, *(uint16x8_t *)result->i8);
    int16x8_t v22 = (int16x8_t)v23;
    BOOL v47 = __OFSUB__(a5, 8);
    a5 -= 8;
    int16x8_t v48 = vshlq_n_s16(*(int16x8_t *)result->i8, 4uLL);
    int16x8_t v49 = vshlq_n_s16(*v16, 4uLL);
    int16x8_t v25 = (int16x8_t)v26;
    int16x8_t v50 = vsubq_s16(vrshrn_high_n_s32(vrshrn_n_s32(v45, 9uLL), v46, 9uLL), v48);
    int16x8_t v51 = vsubq_s16(vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16((uint32x4_t)vmlaq_s32(vmulq_s32(v43, v18), v40, v20), *(uint16x4_t *)v39.i8, *(uint16x4_t *)v16->i8), 8uLL), (int32x4_t)vmlal_high_u16((uint32x4_t)vmlaq_s32(vmulq_s32(v44, v18), v41, v20), v39, *(uint16x8_t *)v16), 8uLL), v49);
    int8x16_t v23 = *v21++;
    int8x16_t v26 = *v24++;
    int32x4_t v52 = vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v48.i8, 7uLL), *(int16x4_t *)v50.i8, *(int16x4_t *)v8.i8);
    int32x4_t v53 = vmlal_high_s16((int32x4_t)vshll_high_n_u16((uint16x8_t)v48, 7uLL), v50, v8);
    int32x4_t v28 = (int32x4_t)v30;
    int32x4_t v32 = (int32x4_t)v34;
    *(uint16x8_t *)result->i8 = vminq_u16((uint16x8_t)vqrshrun_high_n_s32(vqrshrun_n_s32(v52, 0xBuLL), v53, 0xBuLL), v9);
    result += 2;
    *(uint16x8_t *)v16++ = vminq_u16((uint16x8_t)vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v49.i8, 7uLL), *(int16x4_t *)v51.i8, *(int16x4_t *)v8.i8), 0xBuLL), vmlal_high_s16((int32x4_t)vshll_high_n_u16((uint16x8_t)v49, 7uLL), v51, v8), 0xBuLL), v9);
    if ((a5 < 0) ^ v47 | (a5 == 0)) {
      break;
    }
    int32x4_t v29 = *(int32x4_t *)v27;
    int8x16_t v30 = *((int8x16_t *)v27 + 1);
    v27 += 2;
    int32x4_t v33 = *(int32x4_t *)i;
    int8x16_t v34 = *((int8x16_t *)i + 1);
  }
  return result;
}

uint16x8_t *sub_224A78304(uint16x8_t *result, uint64_t a2, int16x8_t *a3, uint64_t a4, int16x8_t *a5, int16x8_t *a6, uint64_t a7, int a8, const __int16 *a9, unsigned int a10)
{
  int8x16_t v11 = (uint16x8_t *)((char *)result + a2);
  int16x8_t v12 = (int16x8_t *)((char *)a3 + a4);
  uint16x8_t v13 = a5 + 48;
  int16x8_t v14 = a6 + 48;
  int16x8x2_t v40 = vld2q_dup_s16(a9);
  uint16x8_t v15 = (uint16x8_t)vdupq_n_s16(a10);
  unint64_t v16 = (a7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = 2 * a2 - 2 * v16;
  uint64_t v18 = 2 * a4 - 2 * v16;
  uint64_t v19 = 1536 - 2 * v16;
  int v20 = a7;
  if (a8 < 2) {
    goto LABEL_6;
  }
  while (1)
  {
    do
    {
      int16x8_t v21 = *a3++;
      int16x8_t v22 = *v12++;
      int16x8_t v23 = *a5++;
      int16x8_t v24 = *v13++;
      int16x8_t v25 = *a6++;
      int16x8_t v26 = *v14++;
      BOOL v27 = __OFSUB__(a7, 8);
      LODWORD(a7) = a7 - 8;
      int16x8_t v28 = vshlq_n_s16(v21, 4uLL);
      int16x8_t v29 = vshlq_n_s16(v22, 4uLL);
      int16x8_t v30 = vsubq_s16(v23, v28);
      int16x8_t v31 = vsubq_s16(v25, v28);
      int16x8_t v32 = vsubq_s16(v24, v29);
      int16x8_t v33 = vsubq_s16(v26, v29);
      *result++ = vminq_u16((uint16x8_t)vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v28.i8, 7uLL), *(int16x4_t *)v30.i8, *(int16x4_t *)v40.val[0].i8), *(int16x4_t *)v31.i8, *(int16x4_t *)v40.val[1].i8), 0xBuLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_high_n_u16((uint16x8_t)v28, 7uLL), v30, v40.val[0]), v31, v40.val[1]), 0xBuLL), v15);
      *v11++ = vminq_u16((uint16x8_t)vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v29.i8, 7uLL), *(int16x4_t *)v32.i8, *(int16x4_t *)v40.val[0].i8), *(int16x4_t *)v33.i8, *(int16x4_t *)v40.val[1].i8), 0xBuLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_high_n_u16((uint16x8_t)v29, 7uLL), v32, v40.val[0]), v33, v40.val[1]), 0xBuLL), v15);
    }
    while (!(((int)a7 < 0) ^ v27 | (a7 == 0)));
    a8 -= 2;
    if (a8 < 1) {
      break;
    }
    LODWORD(a7) = v20;
    result = (uint16x8_t *)((char *)result + v17);
    int8x16_t v11 = (uint16x8_t *)((char *)v11 + v17);
    a3 = (int16x8_t *)((char *)a3 + v18);
    int16x8_t v12 = (int16x8_t *)((char *)v12 + v18);
    a5 = (int16x8_t *)((char *)a5 + v19);
    uint16x8_t v13 = (int16x8_t *)((char *)v13 + v19);
    a6 = (int16x8_t *)((char *)a6 + v19);
    int16x8_t v14 = (int16x8_t *)((char *)v14 + v19);
    if (a8 == 1)
    {
LABEL_6:
      int16x8_t v34 = *a3++;
      int16x8_t v35 = *a5++;
      int16x8_t v36 = *a6++;
      BOOL v27 = __OFSUB__(a7, 8);
      LODWORD(a7) = a7 - 8;
      int16x8_t v37 = vshlq_n_s16(v34, 4uLL);
      int16x8_t v38 = vsubq_s16(v35, v37);
      int16x8_t v39 = vsubq_s16(v36, v37);
      *result++ = vminq_u16((uint16x8_t)vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v37.i8, 7uLL), *(int16x4_t *)v38.i8, *(int16x4_t *)v40.val[0].i8), *(int16x4_t *)v39.i8, *(int16x4_t *)v40.val[1].i8), 0xBuLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_high_n_u16((uint16x8_t)v37, 7uLL), v38, v40.val[0]), v39, v40.val[1]), 0xBuLL), v15);
      if (((int)a7 < 0) ^ v27 | (a7 == 0)) {
        return result;
      }
    }
  }
  return result;
}

__int32 *sub_224A78458(__int32 *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  do
  {
    v7.i32[0] = *result;
    v6 = (__int32 *)((char *)result + a2);
    v7.i32[1] = *v6;
    int16x8_t v8 = (__int32 *)((char *)v6 + a2);
    v10.i32[0] = *v8;
    uint16x8_t v9 = (__int32 *)((char *)v8 + a2);
    v10.i32[1] = *v9;
    BOOL v11 = __OFSUB__(a5, 4);
    a5 -= 4;
    int16x8_t v12 = (__int32 *)((char *)v9 + a2 + -4 * a2);
    int8x8_t v13 = vqmovun_s16((int16x8_t)vaddw_u8(v5, v7));
    *int16x8_t v12 = v13.i32[0];
    int16x8_t v14 = (_DWORD *)((char *)v12 + a2);
    int8x8_t v15 = vqmovun_s16((int16x8_t)vaddw_u8(v5, v10));
    *int16x8_t v14 = v13.i32[1];
    unint64_t v16 = (_DWORD *)((char *)v14 + a2);
    _DWORD *v16 = v15.i32[0];
    uint64_t v17 = (_DWORD *)((char *)v16 + a2);
    *uint64_t v17 = v15.i32[1];
    result = (_DWORD *)((char *)v17 + a2);
  }
  while (!((a5 < 0) ^ v11 | (a5 == 0)));
  return result;
}

uint8x8_t *sub_224A78498(uint8x8_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  do
  {
    uint8x8_t v7 = *result;
    v6 = (uint8x8_t *)((char *)result + a2);
    uint8x8_t v9 = *v6;
    int16x8_t v8 = (uint8x8_t *)((char *)v6 + a2);
    uint8x8_t v11 = *v8;
    uint8x8_t v10 = (uint8x8_t *)((char *)v8 + a2);
    uint8x8_t v12 = *v10;
    int8x8_t v13 = (int8x8_t *)((char *)v10 + a2 + -4 * a2);
    BOOL v14 = __OFSUB__(a5, 4);
    a5 -= 4;
    *int8x8_t v13 = vqmovun_s16((int16x8_t)vaddw_u8(v5, v7));
    int8x8_t v15 = (int8x8_t *)((char *)v13 + a2);
    *int8x8_t v15 = vqmovun_s16((int16x8_t)vaddw_u8(v5, v9));
    unint64_t v16 = (int8x8_t *)((char *)v15 + a2);
    int8x8_t *v16 = vqmovun_s16((int16x8_t)vaddw_u8(v5, v11));
    uint64_t v17 = (int8x8_t *)((char *)v16 + a2);
    *uint64_t v17 = vqmovun_s16((int16x8_t)vaddw_u8(v5, v12));
    result = (uint8x8_t *)((char *)v17 + a2);
  }
  while (!((a5 < 0) ^ v14 | (a5 == 0)));
  return result;
}

uint8x16_t *sub_224A784E8(uint8x16_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  do
  {
    uint8x16_t v7 = *result;
    v6 = (uint8x16_t *)((char *)result + a2);
    uint8x16_t v9 = *v6;
    int16x8_t v8 = (uint8x16_t *)((char *)v6 + a2);
    uint8x16_t v11 = *v8;
    uint8x8_t v10 = (uint8x16_t *)((char *)v8 + a2);
    BOOL v12 = __OFSUB__(a5, 4);
    a5 -= 4;
    uint8x16_t v13 = *v10;
    BOOL v14 = (int8x16_t *)&v10->i8[a2 + -4 * a2];
    *BOOL v14 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v5, *(uint8x8_t *)v7.i8)), (int16x8_t)vaddw_high_u8(v5, v7));
    int8x8_t v15 = (int8x16_t *)((char *)v14 + a2);
    *int8x8_t v15 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v5, *(uint8x8_t *)v9.i8)), (int16x8_t)vaddw_high_u8(v5, v9));
    unint64_t v16 = (int8x16_t *)((char *)v15 + a2);
    int8x16_t *v16 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v5, *(uint8x8_t *)v11.i8)), (int16x8_t)vaddw_high_u8(v5, v11));
    uint64_t v17 = (int8x16_t *)((char *)v16 + a2);
    *uint64_t v17 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v5, *(uint8x8_t *)v13.i8)), (int16x8_t)vaddw_high_u8(v5, v13));
    result = (uint8x16_t *)&v17->i8[a2];
  }
  while (!((a5 < 0) ^ v12 | (a5 == 0)));
  return result;
}

uint8x16_t *sub_224A78558(uint8x16_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  do
  {
    uint8x16_t v7 = *result;
    uint8x16_t v8 = result[1];
    v6 = (uint8x16_t *)((char *)result + a2);
    BOOL v9 = __OFSUB__(a5, 2);
    a5 -= 2;
    uint8x16_t v10 = *v6;
    uint8x16_t v11 = v6[1];
    BOOL v12 = (int8x16_t *)((char *)v6 - a2);
    *BOOL v12 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v5, *(uint8x8_t *)v7.i8)), (int16x8_t)vaddw_high_u8(v5, v7));
    v12[1] = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v5, *(uint8x8_t *)v8.i8)), (int16x8_t)vaddw_high_u8(v5, v8));
    uint8x16_t v13 = (int8x16_t *)((char *)v12 + a2);
    *uint8x16_t v13 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v5, *(uint8x8_t *)v10.i8)), (int16x8_t)vaddw_high_u8(v5, v10));
    v13[1] = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v5, *(uint8x8_t *)v11.i8)), (int16x8_t)vaddw_high_u8(v5, v11));
    result = (uint8x16_t *)&v13->i8[a2];
  }
  while (!((a5 < 0) ^ v9 | (a5 == 0)));
  return result;
}

uint8x8_t *sub_224A785B8(uint8x8_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  do
  {
    BOOL v6 = __OFSUB__(a5--, 1);
    int8x16_t v7 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v5, result[2])), (int16x8_t)vaddw_high_u8(v5, *(uint8x16_t *)result[2].i8));
    int8x16_t v8 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v5, result[4])), (int16x8_t)vaddw_high_u8(v5, *(uint8x16_t *)result[4].i8));
    int8x16_t v9 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v5, result[6])), (int16x8_t)vaddw_high_u8(v5, *(uint8x16_t *)result[6].i8));
    *(int8x16_t *)result->i8 = vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v5, *result)), (int16x8_t)vaddw_high_u8(v5, *(uint8x16_t *)result->i8));
    *(int8x16_t *)result[2].i8 = v7;
    *(int8x16_t *)result[4].i8 = v8;
    *(int8x16_t *)result[6].i8 = v9;
    result = (uint8x8_t *)((char *)result + a2);
  }
  while (!((a5 < 0) ^ v6 | (a5 == 0)));
  return result;
}

double sub_224A7860C()
{
  return 1.84466382e-237;
}

double sub_224A7865C()
{
  return 1.84466382e-237;
}

double sub_224A786DC()
{
  return 9.17508977e-246;
}

double sub_224A78734()
{
  return 9.17508977e-246;
}

double sub_224A7878C()
{
  return 9.17508977e-246;
}

double sub_224A7882C()
{
  return 9.17508977e-246;
}

int16x4_t sub_224A788D0()
{
  return vdup_n_s16(0x3508u);
}

int16x4_t sub_224A788FC()
{
  return vdup_n_s16(0x3508u);
}

void sub_224A78928(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  *a3 = 0u;
  a3[1] = 0u;
  JUMPOUT(0x224A78A20);
}

char *sub_224A789C8(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, _OWORD *))
{
  *a3 = 0u;
  uint64_t v5 = a5(a1, a2, a3 + 1);
  _OWORD *v6 = v7;
  int8x16_t v9 = (__int32 *)v8(v5);
  v12.i32[0] = *v9;
  uint8x16_t v11 = (__int32 *)((char *)v9 + v10);
  v12.i32[1] = *v11;
  uint8x16_t v13 = (__int32 *)((char *)v11 + v10);
  v15.i64[1] = v14;
  v17.i64[1] = v16;
  v19.i32[0] = *v13;
  uint64_t v18 = (__int32 *)((char *)v13 + v10);
  v19.i32[1] = *v18;
  int v20 = (__int32 *)((char *)v18 + v10 + -4 * v10);
  int8x8_t v21 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v15, 4uLL), v12));
  *int v20 = v21.i32[0];
  int16x8_t v22 = (_DWORD *)((char *)v20 + v10);
  int8x8_t v23 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v17, 4uLL), v19));
  *int16x8_t v22 = v21.i32[1];
  int16x8_t v24 = (_DWORD *)((char *)v22 + v10);
  _DWORD *v24 = v23.i32[0];
  int16x8_t v25 = (_DWORD *)((char *)v24 + v10);
  *int16x8_t v25 = v23.i32[1];
  return (char *)v25 + v10;
}

char *sub_224A78A48(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (!a4)
  {
    vld1q_dup_s16(a3);
    *a3 = 0;
    JUMPOUT(0x224A78A20);
  }
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A7860C);
}

char *sub_224A78A90(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A788D0);
}

char *sub_224A78AA0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A7860C);
}

char *sub_224A78AB0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A7860C);
}

char *sub_224A78AC0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A7860C);
}

char *sub_224A78AD0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A786DC);
}

char *sub_224A78AE0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A786DC);
}

char *sub_224A78AF0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A786DC);
}

char *sub_224A78B00(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A78734);
}

char *sub_224A78B10(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A78734);
}

char *sub_224A78B20(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A78734);
}

char *sub_224A78B30(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A788D0);
}

char *sub_224A78B40(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A786DC);
}

char *sub_224A78B50(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A78734);
}

char *sub_224A78B60(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A788D0);
}

char *sub_224A78B70(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A789C8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A788D0);
}

double sub_224A78B80()
{
  return 1.84466382e-237;
}

double sub_224A78CC4()
{
  return 1.84466382e-237;
}

double sub_224A78D90()
{
  return 2.50059475e-272;
}

double sub_224A78F70()
{
  return 2.50059475e-272;
}

double sub_224A79150()
{
  return 2.50059475e-272;
}

double sub_224A79270()
{
  return 2.50059475e-272;
}

void sub_224A793D8(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  *a3 = 0u;
  a3[1] = 0u;
  a3[2] = 0u;
  a3[3] = 0u;
  v3 = a3 + 4;
  _OWORD *v3 = 0u;
  v3[1] = 0u;
  v3[2] = 0u;
  v3[3] = 0u;
  JUMPOUT(0x224A79440);
}

char *sub_224A793FC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t (*a5)(void))
{
  *a3 = 0u;
  a3[1] = 0u;
  a3[2] = 0u;
  a3[3] = 0u;
  uint64_t v5 = a3 + 4;
  _OWORD *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  uint64_t v6 = a5();
  int8x16_t v8 = (uint8x8_t *)v7(v6);
  uint8x16_t v11 = (uint8x8_t *)((char *)v8 + v9 + v9);
  uint8x8_t v14 = *v11;
  uint8x16_t v13 = (uint8x8_t *)((char *)v11 + v9);
  uint8x8_t v17 = *v13;
  uint64_t v16 = (uint8x8_t *)((char *)v13 + v9);
  uint8x8_t v20 = *v16;
  uint8x8_t v19 = (uint8x8_t *)((char *)v16 + v9);
  int8x8_t v22 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v12, 4uLL), *(uint8x8_t *)((char *)v8 + v9)));
  uint8x8_t *v8 = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v10, 4uLL), *v8));
  int8x8_t v23 = (int8x8_t *)((char *)v8 + v9);
  uint8x8_t v25 = *v19;
  int16x8_t v24 = (uint8x8_t *)((char *)v19 + v9);
  *int8x8_t v23 = v22;
  BOOL v27 = (int8x8_t *)((char *)v23 + v9);
  uint8x8_t v28 = *v24;
  *BOOL v27 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v15, 4uLL), v14));
  int16x8_t v30 = (int8x8_t *)((char *)v27 + v9);
  uint8x8_t v31 = *(uint8x8_t *)((char *)v24 + v9);
  int8x8_t *v30 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v18, 4uLL), v17));
  int16x8_t v33 = (int8x8_t *)((char *)v30 + v9);
  *int16x8_t v33 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v21, 4uLL), v20));
  int16x8_t v34 = (int8x8_t *)((char *)v33 + v9);
  int8x8_t *v34 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v26, 4uLL), v25));
  int16x8_t v35 = (int8x8_t *)((char *)v34 + v9);
  *int16x8_t v35 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v29, 4uLL), v28));
  int16x8_t v36 = (int8x8_t *)((char *)v35 + v9);
  int8x8_t *v36 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v32, 4uLL), v31));
  return (char *)v36 + v9;
}

uint8x8_t *sub_224A7954C(uint8x8_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4) {
    return (uint8x8_t *)sub_224A793FC((uint64_t)a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78B80);
  }
  vld1q_dup_s16(a3);
  *a3 = 0;
  return sub_224A78498(a1, a2, (uint64_t)a3, a4, 8);
}

void sub_224A79588(uint64_t a1, uint64_t a2, _OWORD *a3)
{
}

char *sub_224A79594(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A793FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78B80);
}

char *sub_224A795A4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A793FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78B80);
}

char *sub_224A795B4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A793FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78B80);
}

char *sub_224A795C4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A793FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78D90);
}

char *sub_224A795D4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A793FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78D90);
}

char *sub_224A795E4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A793FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78D90);
}

char *sub_224A795F4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A793FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78F70);
}

char *sub_224A79604(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A793FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78F70);
}

char *sub_224A79614(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A793FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78F70);
}

void sub_224A79624(uint64_t a1, uint64_t a2, _OWORD *a3)
{
}

char *sub_224A79630(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A793FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78D90);
}

char *sub_224A79640(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A793FC(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78F70);
}

void sub_224A79650(uint64_t a1, uint64_t a2, _OWORD *a3)
{
}

void sub_224A7965C(uint64_t a1, uint64_t a2, _OWORD *a3)
{
}

char *sub_224A79668(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t (*a5)(void))
{
  *a3 = 0u;
  a3[1] = 0u;
  uint64_t v5 = a3 + 2;
  _OWORD *v5 = 0u;
  v5[1] = 0u;
  uint64_t v6 = a5();
  int8x16_t v8 = (uint8x8_t *)v7(v6);
  uint8x16_t v11 = (uint8x8_t *)((char *)v8 + v9 + v9);
  uint8x8_t v13 = *v11;
  uint8x8_t v15 = *(uint8x8_t *)((char *)v11 + v9);
  int8x8_t v17 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v12, 4uLL), *(uint8x8_t *)((char *)v8 + v9)));
  uint8x8_t *v8 = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v10, 4uLL), *v8));
  int16x8_t v18 = (int8x8_t *)((char *)v8 + v9);
  *int16x8_t v18 = v17;
  uint8x8_t v19 = (int8x8_t *)((char *)v18 + v9);
  *uint8x8_t v19 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v14, 4uLL), v13));
  uint8x8_t v20 = (int8x8_t *)((char *)v19 + v9);
  *uint8x8_t v20 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v16, 4uLL), v15));
  return (char *)v20 + v9;
}

char *sub_224A79758(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t (*a5)(void))
{
  *a3 = 0u;
  a3[1] = 0u;
  a3[2] = 0u;
  a3[3] = 0u;
  uint64_t v5 = a5();
  long long v7 = (__int32 *)v6(v5);
  v9.i32[0] = *v7;
  v11.i64[1] = v10;
  v9.i32[1] = *(__int32 *)((char *)v7 + v8);
  int16x8_t v12 = (__int32 *)((char *)v7 + v8 + v8);
  v14.i32[0] = *v12;
  uint8x8_t v13 = (__int32 *)((char *)v12 + v8);
  v16.i64[1] = v15;
  v14.i32[1] = *v13;
  int8x8_t v17 = (__int32 *)((char *)v13 + v8);
  v19.i32[0] = *v17;
  int16x8_t v18 = (__int32 *)((char *)v17 + v8);
  v21.i64[1] = v20;
  v19.i32[1] = *v18;
  int8x8_t v22 = (__int32 *)((char *)v18 + v8);
  v23.i32[0] = *v22;
  v25.i64[1] = v24;
  v23.i32[1] = *(__int32 *)((char *)v22 + v8);
  int8x8_t v26 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v11, 4uLL), v9));
  __int32 *v7 = v26.i32[0];
  BOOL v27 = (__int32 *)((char *)v7 + v8);
  int8x8_t v28 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v16, 4uLL), v14));
  *BOOL v27 = v26.i32[1];
  int16x8_t v29 = (_DWORD *)((char *)v27 + v8);
  *int16x8_t v29 = v28.i32[0];
  int16x8_t v30 = (_DWORD *)((char *)v29 + v8);
  int8x8_t v31 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v21, 4uLL), v19));
  _DWORD *v30 = v28.i32[1];
  int16x8_t v32 = (_DWORD *)((char *)v30 + v8);
  *int16x8_t v32 = v31.i32[0];
  int16x8_t v33 = (_DWORD *)((char *)v32 + v8);
  int8x8_t v34 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v25, 4uLL), v23));
  *int16x8_t v33 = v31.i32[1];
  int16x8_t v35 = (_DWORD *)((char *)v33 + v8);
  *int16x8_t v35 = v34.i32[0];
  int16x8_t v36 = (_DWORD *)((char *)v35 + v8);
  _DWORD *v36 = v34.i32[1];
  return (char *)v36 + v8;
}

__int32 *sub_224A79848(__int32 *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4) {
    return (__int32 *)sub_224A79758((uint64_t)a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7865C);
  }
  vld1q_dup_s16(a3);
  *a3 = 0;
  return sub_224A78458(a1, a2, (uint64_t)a3, a4, 8);
}

char *sub_224A79884(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A788FC);
}

char *sub_224A79894(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7865C);
}

char *sub_224A798A4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7865C);
}

char *sub_224A798B4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7865C);
}

char *sub_224A798C4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7878C);
}

char *sub_224A798D4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7878C);
}

char *sub_224A798E4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7878C);
}

char *sub_224A798F4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7882C);
}

char *sub_224A79904(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7882C);
}

char *sub_224A79914(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7882C);
}

char *sub_224A79924(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A788FC);
}

char *sub_224A79934(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7878C);
}

char *sub_224A79944(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7882C);
}

char *sub_224A79954(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A788FC);
}

char *sub_224A79964(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79758(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A788FC);
}

uint8x8_t *sub_224A79974(uint8x8_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4) {
    return (uint8x8_t *)sub_224A79668((uint64_t)a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78CC4);
  }
  vld1q_dup_s16(a3);
  *a3 = 0;
  return sub_224A78498(a1, a2, (uint64_t)a3, a4, 4);
}

char *sub_224A799B0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A793B4);
}

char *sub_224A799C0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78CC4);
}

char *sub_224A799D0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78CC4);
}

char *sub_224A799E0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78CC4);
}

char *sub_224A799F0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A79150);
}

char *sub_224A79A00(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A79150);
}

char *sub_224A79A10(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A79150);
}

char *sub_224A79A20(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A79270);
}

char *sub_224A79A30(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A79270);
}

char *sub_224A79A40(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A79270);
}

char *sub_224A79A50(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A793B4);
}

char *sub_224A79A60(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A79150);
}

char *sub_224A79A70(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A79270);
}

char *sub_224A79A80(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A793B4);
}

char *sub_224A79A90(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A79668(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A793B4);
}

double sub_224A79AA0()
{
  return 1.84466382e-237;
}

double sub_224A79DF8()
{
  return 1.84466382e-237;
}

double sub_224A7A014()
{
  return 1.84466382e-237;
}

double sub_224A7A4D0()
{
  return 1.84466382e-237;
}

double sub_224A7A998()
{
  return 1.84466382e-237;
}

double sub_224A7AC74()
{
  return 1.84466382e-237;
}

int16x4_t sub_224A7AF5C()
{
  return vdup_n_s16(0x6A10u);
}

int16x4_t sub_224A7B028()
{
  return vdup_n_s16(0x6A10u);
}

void sub_224A7B0F4(void (*a1)(void)@<X4>, _OWORD *a2@<X7>, uint64_t a3@<X8>)
{
  *a2 = 0u;
  v3 = (_OWORD *)((char *)a2 + a3);
  _OWORD *v3 = 0u;
  v4 = (_OWORD *)((char *)v3 + a3);
  _OWORD *v4 = 0u;
  uint64_t v5 = (_OWORD *)((char *)v4 + a3);
  _OWORD *v5 = 0u;
  uint64_t v6 = (_OWORD *)((char *)v5 + a3);
  _OWORD *v6 = 0u;
  long long v7 = (_OWORD *)((char *)v6 + a3);
  _OWORD *v7 = 0u;
  uint64_t v8 = (_OWORD *)((char *)v7 + a3);
  _OWORD *v8 = 0u;
  uint8x8_t v9 = (_OWORD *)((char *)v8 + a3);
  _OWORD *v9 = 0u;
  uint64_t v10 = (_OWORD *)((char *)v9 + a3);
  _OWORD *v10 = 0u;
  int16x8_t v11 = (_OWORD *)((char *)v10 + a3);
  *int16x8_t v11 = 0u;
  int16x8_t v12 = (_OWORD *)((char *)v11 + a3);
  *int16x8_t v12 = 0u;
  uint8x8_t v13 = (_OWORD *)((char *)v12 + a3);
  *uint8x8_t v13 = 0u;
  uint8x8_t v14 = (_OWORD *)((char *)v13 + a3);
  *uint8x8_t v14 = 0u;
  uint64_t v15 = (_OWORD *)((char *)v14 + a3);
  *uint64_t v15 = 0u;
  int16x8_t v16 = (_OWORD *)((char *)v15 + a3);
  _OWORD *v16 = 0u;
  *(_OWORD *)((char *)v16 + a3) = 0u;
  a1();
  JUMPOUT(0x224A7B42CLL);
}

void sub_224A7B20C(_OWORD *a1@<X7>, uint64_t a2@<X8>)
{
  *a1 = 0u;
  v2 = (_OWORD *)((char *)a1 + a2);
  _OWORD *v2 = 0u;
  v3 = (_OWORD *)((char *)v2 + a2);
  _OWORD *v3 = 0u;
  v4 = (_OWORD *)((char *)v3 + a2);
  _OWORD *v4 = 0u;
  uint64_t v5 = (_OWORD *)((char *)v4 + a2);
  _OWORD *v5 = 0u;
  uint64_t v6 = (_OWORD *)((char *)v5 + a2);
  _OWORD *v6 = 0u;
  long long v7 = (_OWORD *)((char *)v6 + a2);
  _OWORD *v7 = 0u;
  uint64_t v8 = (_OWORD *)((char *)v7 + a2);
  _OWORD *v8 = 0u;
  uint8x8_t v9 = (_OWORD *)((char *)v8 + a2);
  _OWORD *v9 = 0u;
  uint64_t v10 = (_OWORD *)((char *)v9 + a2);
  _OWORD *v10 = 0u;
  int16x8_t v11 = (_OWORD *)((char *)v10 + a2);
  *int16x8_t v11 = 0u;
  int16x8_t v12 = (_OWORD *)((char *)v11 + a2);
  *int16x8_t v12 = 0u;
  uint8x8_t v13 = (_OWORD *)((char *)v12 + a2);
  *uint8x8_t v13 = 0u;
  uint8x8_t v14 = (_OWORD *)((char *)v13 + a2);
  *uint8x8_t v14 = 0u;
  uint64_t v15 = (_OWORD *)((char *)v14 + a2);
  *uint64_t v15 = 0u;
  *(_OWORD *)((char *)v15 + a2) = 0u;
  JUMPOUT(0x224A7B42CLL);
}

uint64_t sub_224A7B360@<X0>(uint64_t (*a1)(void)@<X4>, _OWORD *a2@<X7>, uint64_t a3@<X8>)
{
  *a2 = 0u;
  v3 = (_OWORD *)((char *)a2 + a3);
  _OWORD *v3 = 0u;
  v4 = (_OWORD *)((char *)v3 + a3);
  _OWORD *v4 = 0u;
  uint64_t v5 = (_OWORD *)((char *)v4 + a3);
  _OWORD *v5 = 0u;
  uint64_t v6 = (_OWORD *)((char *)v5 + a3);
  _OWORD *v6 = 0u;
  long long v7 = (_OWORD *)((char *)v6 + a3);
  _OWORD *v7 = 0u;
  uint64_t v8 = (_OWORD *)((char *)v7 + a3);
  _OWORD *v8 = 0u;
  uint8x8_t v9 = (_OWORD *)((char *)v8 + a3);
  _OWORD *v9 = 0u;
  uint64_t v10 = (_OWORD *)((char *)v9 + a3);
  _OWORD *v10 = 0u;
  int16x8_t v11 = (_OWORD *)((char *)v10 + a3);
  *int16x8_t v11 = 0u;
  int16x8_t v12 = (_OWORD *)((char *)v11 + a3);
  *int16x8_t v12 = 0u;
  uint8x8_t v13 = (_OWORD *)((char *)v12 + a3);
  *uint8x8_t v13 = 0u;
  uint8x8_t v14 = (_OWORD *)((char *)v13 + a3);
  *uint8x8_t v14 = 0u;
  uint64_t v15 = (_OWORD *)((char *)v14 + a3);
  *uint64_t v15 = 0u;
  int16x8_t v16 = (_OWORD *)((char *)v15 + a3);
  _OWORD *v16 = 0u;
  *(_OWORD *)((char *)v16 + a3) = 0u;
  uint64_t result = a1();
  int16x8_t v19 = vrshrq_n_s16(v18, 2uLL);
  int16x8_t v21 = vrshrq_n_s16(v20, 2uLL);
  int16x8_t v23 = vrshrq_n_s16(v22, 2uLL);
  int16x8_t v25 = vrshrq_n_s16(v24, 2uLL);
  int16x8_t v27 = vrshrq_n_s16(v26, 2uLL);
  int16x8_t v29 = vrshrq_n_s16(v28, 2uLL);
  int16x8_t v31 = vrshrq_n_s16(v30, 2uLL);
  int16x8_t v33 = vrshrq_n_s16(v32, 2uLL);
  int16x8_t v35 = vrshrq_n_s16(v34, 2uLL);
  int16x8_t v37 = vrshrq_n_s16(v36, 2uLL);
  int16x8_t v39 = vrshrq_n_s16(v38, 2uLL);
  int16x8_t v41 = vrshrq_n_s16(v40, 2uLL);
  int16x8_t v43 = vrshrq_n_s16(v42, 2uLL);
  int16x8_t v45 = vrshrq_n_s16(v44, 2uLL);
  int16x8_t v47 = vrshrq_n_s16(v46, 2uLL);
  int16x8_t v49 = vrshrq_n_s16(v48, 2uLL);
  int32x4_t v50 = (int32x4_t)vtrn1q_s16(v19, v21);
  int32x4_t v51 = (int32x4_t)vtrn2q_s16(v19, v21);
  int32x4_t v52 = (int32x4_t)vtrn1q_s16(v23, v25);
  int32x4_t v53 = (int32x4_t)vtrn2q_s16(v23, v25);
  int32x4_t v54 = (int32x4_t)vtrn1q_s16(v27, v29);
  int32x4_t v55 = (int32x4_t)vtrn2q_s16(v27, v29);
  int32x4_t v56 = (int32x4_t)vtrn1q_s16(v31, v33);
  int32x4_t v57 = (int32x4_t)vtrn2q_s16(v31, v33);
  int64x2_t v58 = (int64x2_t)vtrn1q_s32(v54, v56);
  int64x2_t v59 = (int64x2_t)vtrn2q_s32(v54, v56);
  int64x2_t v60 = (int64x2_t)vtrn1q_s32(v55, v57);
  int64x2_t v61 = (int64x2_t)vtrn2q_s32(v55, v57);
  int64x2_t v62 = (int64x2_t)vtrn1q_s32(v51, v53);
  int64x2_t v63 = (int64x2_t)vtrn2q_s32(v51, v53);
  int64x2_t v64 = (int64x2_t)vtrn1q_s32(v50, v52);
  int64x2_t v65 = (int64x2_t)vtrn2q_s32(v50, v52);
  int64x2_t v66 = vtrn1q_s64(v64, v58);
  int64x2_t v67 = vtrn2q_s64(v64, v58);
  int64x2_t v68 = vtrn1q_s64(v62, v60);
  int64x2_t v69 = vtrn2q_s64(v62, v60);
  int64x2_t v70 = vtrn2q_s64(v65, v59);
  int64x2_t v71 = vtrn1q_s64(v65, v59);
  int64x2_t v72 = vtrn1q_s64(v63, v61);
  int64x2_t v73 = vtrn2q_s64(v63, v61);
  int32x4_t v74 = (int32x4_t)vtrn1q_s16(v35, v37);
  int32x4_t v75 = (int32x4_t)vtrn2q_s16(v35, v37);
  int32x4_t v76 = (int32x4_t)vtrn1q_s16(v39, v41);
  int32x4_t v77 = (int32x4_t)vtrn2q_s16(v39, v41);
  int32x4_t v78 = (int32x4_t)vtrn1q_s16(v43, v45);
  int32x4_t v79 = (int32x4_t)vtrn2q_s16(v43, v45);
  int32x4_t v80 = (int32x4_t)vtrn1q_s16(v47, v49);
  int32x4_t v81 = (int32x4_t)vtrn2q_s16(v47, v49);
  int64x2_t v82 = (int64x2_t)vtrn1q_s32(v78, v80);
  int64x2_t v83 = (int64x2_t)vtrn2q_s32(v78, v80);
  int64x2_t v84 = (int64x2_t)vtrn1q_s32(v79, v81);
  int64x2_t v85 = (int64x2_t)vtrn2q_s32(v79, v81);
  int64x2_t v86 = (int64x2_t)vtrn1q_s32(v75, v77);
  int64x2_t v87 = (int64x2_t)vtrn2q_s32(v75, v77);
  int64x2_t v88 = (int64x2_t)vtrn1q_s32(v74, v76);
  int64x2_t v89 = (int64x2_t)vtrn2q_s32(v74, v76);
  *v90++ = v66;
  *v90++ = vtrn1q_s64(v88, v82);
  *v90++ = v68;
  *v90++ = vtrn1q_s64(v86, v84);
  *v90++ = v71;
  *v90++ = vtrn1q_s64(v89, v83);
  *v90++ = v72;
  *v90++ = vtrn1q_s64(v87, v85);
  *v90++ = v67;
  *v90++ = vtrn2q_s64(v88, v82);
  *v90++ = v69;
  *v90++ = vtrn2q_s64(v86, v84);
  *v90++ = v70;
  *v90++ = vtrn2q_s64(v89, v83);
  *uint64_t v90 = v73;
  v90[1] = vtrn2q_s64(v87, v85);
  return result;
}

uint64_t sub_224A7B530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t result = a6();
  uint64_t v10 = (uint8x8_t *)((char *)v8 + v7 + v7);
  uint8x8_t v13 = *v10;
  int16x8_t v12 = (uint8x8_t *)((char *)v10 + v7);
  uint8x8_t v16 = *v12;
  uint64_t v15 = (uint8x8_t *)((char *)v12 + v7);
  uint8x8_t v19 = *v15;
  int16x8_t v18 = (uint8x8_t *)((char *)v15 + v7);
  int8x8_t v21 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v11, 4uLL), *(uint8x8_t *)((char *)v8 + v7)));
  uint8x8_t *v8 = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v9, 4uLL), *v8));
  int16x8_t v22 = (int8x8_t *)((char *)v8 + v7);
  uint8x8_t v24 = *v18;
  int16x8_t v23 = (uint8x8_t *)((char *)v18 + v7);
  *int16x8_t v22 = v21;
  int16x8_t v26 = (int8x8_t *)((char *)v22 + v7);
  uint8x8_t v28 = *v23;
  int16x8_t v27 = (uint8x8_t *)((char *)v23 + v7);
  *int16x8_t v26 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v14, 4uLL), v13));
  int16x8_t v30 = (int8x8_t *)((char *)v26 + v7);
  uint8x8_t v32 = *v27;
  int16x8_t v31 = (uint8x8_t *)((char *)v27 + v7);
  int8x8_t *v30 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v17, 4uLL), v16));
  int16x8_t v34 = (int8x8_t *)((char *)v30 + v7);
  uint8x8_t v36 = *v31;
  int16x8_t v35 = (uint8x8_t *)((char *)v31 + v7);
  int8x8_t *v34 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v20, 4uLL), v19));
  int16x8_t v38 = (int8x8_t *)((char *)v34 + v7);
  uint8x8_t v40 = *v35;
  int16x8_t v39 = (uint8x8_t *)((char *)v35 + v7);
  *int16x8_t v38 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v25, 4uLL), v24));
  int16x8_t v42 = (int8x8_t *)((char *)v38 + v7);
  uint8x8_t v44 = *v39;
  int16x8_t v43 = (uint8x8_t *)((char *)v39 + v7);
  *int16x8_t v42 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v29, 4uLL), v28));
  int16x8_t v46 = (int8x8_t *)((char *)v42 + v7);
  uint8x8_t v48 = *v43;
  int16x8_t v47 = (uint8x8_t *)((char *)v43 + v7);
  int8x8_t *v46 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v33, 4uLL), v32));
  int32x4_t v50 = (int8x8_t *)((char *)v46 + v7);
  uint8x8_t v52 = *v47;
  int32x4_t v51 = (uint8x8_t *)((char *)v47 + v7);
  *int32x4_t v50 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v37, 4uLL), v36));
  int32x4_t v54 = (int8x8_t *)((char *)v50 + v7);
  uint8x8_t v56 = *v51;
  int32x4_t v55 = (uint8x8_t *)((char *)v51 + v7);
  *int32x4_t v54 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v41, 4uLL), v40));
  int64x2_t v58 = (int8x8_t *)((char *)v54 + v7);
  uint8x8_t v59 = *v55;
  int8x8_t *v58 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v45, 4uLL), v44));
  int64x2_t v61 = (int8x8_t *)((char *)v58 + v7);
  uint8x8_t v62 = *(uint8x8_t *)((char *)v55 + v7);
  int8x8_t *v61 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v49, 4uLL), v48));
  int64x2_t v64 = (int8x8_t *)((char *)v61 + v7);
  *int64x2_t v64 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v53, 4uLL), v52));
  int64x2_t v65 = (int8x8_t *)((char *)v64 + v7);
  *int64x2_t v65 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v57, 4uLL), v56));
  int64x2_t v66 = (int8x8_t *)((char *)v65 + v7);
  *int64x2_t v66 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v60, 4uLL), v59));
  *(int8x8_t *)((char *)v66 + v7) = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v63, 4uLL), v62));
  return result;
}

uint64_t sub_224A7B6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6(a1, a2, a3, a4, a5, a6, v22, a3);
  if ((int)v10 < v14) {
    memset(&v22[256], 0, 256);
  }
  else {
    uint64_t v7 = v13(v7);
  }
  uint64_t v15 = sub_224A7B530(v7, v8, v9, v10, v11, v12);
  return sub_224A7B530(v15, v16, v17, v18, v19, v20);
}

uint8x16_t *sub_224A7B730(uint8x16_t *a1, uint64_t a2, const __int16 *a3, uint64_t a4)
{
  if (a4) {
    return (uint8x16_t *)sub_224A7B6C0((uint64_t)a1, a2, (uint64_t)a3, a4, (uint64_t)sub_224A79AA0, (uint64_t)sub_224A79AA0);
  }
  vld1q_dup_s16(a3);
  *a3 = 0;
  return sub_224A784E8(a1, a2, (uint64_t)a3, a4, 16);
}

uint64_t sub_224A7B770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_224A7B6C0(a1, a2, a3, a4, a5, (uint64_t)sub_224A7AF5C);
}

uint64_t sub_224A7B780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224A7B6C0(a1, a2, a3, a4, (uint64_t)sub_224A79AA0, (uint64_t)sub_224A7A014);
}

uint64_t sub_224A7B794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224A7B6C0(a1, a2, a3, a4, (uint64_t)sub_224A79AA0, (uint64_t)sub_224A7A4D0);
}

uint64_t sub_224A7B7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224A7B6C0(a1, a2, a3, a4, (uint64_t)sub_224A79AA0, (uint64_t)sub_224A7AF5C);
}

uint64_t sub_224A7B7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224A7B6C0(a1, a2, a3, a4, (uint64_t)sub_224A7A014, (uint64_t)sub_224A79AA0);
}

uint64_t sub_224A7B7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224A7B6C0(a1, a2, a3, a4, (uint64_t)sub_224A7A014, (uint64_t)sub_224A7A014);
}

uint64_t sub_224A7B7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224A7B6C0(a1, a2, a3, a4, (uint64_t)sub_224A7A014, (uint64_t)sub_224A7A4D0);
}

uint64_t sub_224A7B7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224A7B6C0(a1, a2, a3, a4, (uint64_t)sub_224A7A4D0, (uint64_t)sub_224A79AA0);
}

uint64_t sub_224A7B80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224A7B6C0(a1, a2, a3, a4, (uint64_t)sub_224A7A4D0, (uint64_t)sub_224A7A014);
}

uint64_t sub_224A7B820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224A7B6C0(a1, a2, a3, a4, (uint64_t)sub_224A7A4D0, (uint64_t)sub_224A7A4D0);
}

uint64_t sub_224A7B834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_224A7B6C0(a1, a2, a3, a4, a5, (uint64_t)sub_224A79AA0);
}

void sub_224A7B844(uint64_t a1, uint64_t a2, void *a3)
{
  *a3 = 0;
  v3 = a3 + 1;
  *v3++ = 0;
  *v3++ = 0;
  *v3++ = 0;
  *v3++ = 0;
  *v3++ = 0;
  *v3++ = 0;
  *v3++ = 0;
  *v3++ = 0;
  *v3++ = 0;
  *v3++ = 0;
  *v3++ = 0;
  *v3++ = 0;
  *v3++ = 0;
  void *v3 = 0;
  v3[1] = 0;
  JUMPOUT(0x224A7BB68);
}

void sub_224A7B998(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  if (a4 >= v4)
  {
    a3[1] = 0uLL;
    a3[3] = 0uLL;
    a3[5] = 0uLL;
    a3[7] = 0uLL;
  }
  *a3 = 0u;
  uint64_t v5 = a3 + 2;
  _OWORD *v5 = 0u;
  v5 += 2;
  _OWORD *v5 = 0u;
  v5[2] = 0u;
  JUMPOUT(0x224A7BD3CLL);
}

uint8x8_t *sub_224A7BA9C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, void *))
{
  *a3 = 0;
  uint64_t v5 = a3 + 1;
  *v5++ = 0;
  *v5++ = 0;
  *v5++ = 0;
  *v5++ = 0;
  *v5++ = 0;
  *v5++ = 0;
  *v5++ = 0;
  *v5++ = 0;
  *v5++ = 0;
  *v5++ = 0;
  *v5++ = 0;
  *v5++ = 0;
  *v5++ = 0;
  *v5++ = 0;
  void *v5 = 0;
  uint64_t v6 = a5(a1, a2, v5 + 1);
  uint64_t v8 = (uint8x8_t *)v7(v6);
  uint64_t v11 = (uint8x8_t *)((char *)v8 + v9 + v9);
  uint8x8_t v14 = *(uint8x8_t *)((char *)v11 + v9);
  int16x8_t v16 = (int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v13, 4uLL), *v11);
  int8x8_t v17 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v12, 4uLL), *(uint8x8_t *)((char *)v8 + v9)));
  uint8x8_t *v8 = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v10, 4uLL), *v8));
  *(int8x8_t *)((char *)v8 + v9) = v17;
  *uint64_t v11 = (uint8x8_t)vqmovun_s16(v16);
  *(int8x8_t *)((char *)v11 + v9) = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v15, 4uLL), v14));
  uint64_t result = (uint8x8_t *)v18();
  int8x8_t v21 = (uint8x8_t *)((char *)result + v20 + 8);
  uint8x8_t v24 = *v21;
  int16x8_t v23 = (uint8x8_t *)((char *)v21 + v20);
  uint8x8_t v26 = *v23;
  uint8x8_t v28 = *(uint8x8_t *)((char *)v23 + v20);
  result[1] = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v22, 4uLL), result[1]));
  int16x8_t v30 = (int8x8_t *)((char *)&result[1] + v20);
  int8x8_t *v30 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v25, 4uLL), v24));
  int16x8_t v31 = (int8x8_t *)((char *)v30 + v20);
  *int16x8_t v31 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v27, 4uLL), v26));
  *(int8x8_t *)((char *)v31 + v20) = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v29, 4uLL), v28));
  return result;
}

char *sub_224A7BC64(uint64_t a1, uint64_t a2, _OWORD *a3, int a4, uint64_t (*a5)(void))
{
  uint64_t v6 = 2;
  if (a4 >= v5)
  {
    a3[1] = 0uLL;
    a3[3] = 0uLL;
    a3[5] = 0uLL;
    a3[7] = 0uLL;
    a1 = a5();
  }
  *a3 = 0u;
  uint64_t v7 = &a3[v6];
  _OWORD *v7 = 0u;
  uint64_t v8 = &v7[v6];
  _OWORD *v8 = 0u;
  v8[v6] = 0u;
  uint64_t v9 = ((uint64_t (*)(uint64_t))a5)(a1);
  uint64_t v11 = (__int32 *)v10(v9);
  v13.i32[0] = *v11;
  v15.i64[1] = v14;
  v13.i32[1] = *(__int32 *)((char *)v11 + v12);
  int16x8_t v16 = (__int32 *)((char *)v11 + v12 + v12);
  v18.i32[0] = *v16;
  int8x8_t v17 = (__int32 *)((char *)v16 + v12);
  v20.i64[1] = v19;
  v18.i32[1] = *v17;
  int8x8_t v21 = (__int32 *)((char *)v17 + v12);
  v23.i32[0] = *v21;
  int16x8_t v22 = (__int32 *)((char *)v21 + v12);
  v25.i64[1] = v24;
  v23.i32[1] = *v22;
  uint8x8_t v26 = (__int32 *)((char *)v22 + v12);
  v28.i32[0] = *v26;
  int16x8_t v27 = (__int32 *)((char *)v26 + v12);
  v30.i64[1] = v29;
  v28.i32[1] = *v27;
  int16x8_t v31 = (__int32 *)((char *)v27 + v12);
  v33.i32[0] = *v31;
  uint8x8_t v32 = (__int32 *)((char *)v31 + v12);
  v35.i64[1] = v34;
  v33.i32[1] = *v32;
  uint8x8_t v36 = (__int32 *)((char *)v32 + v12);
  int8x8_t v37 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v15, 4uLL), v13));
  v39.i32[0] = *v36;
  int16x8_t v38 = (__int32 *)((char *)v36 + v12);
  v41.i64[1] = v40;
  v39.i32[1] = *v38;
  int16x8_t v42 = (__int32 *)((char *)v38 + v12);
  *uint64_t v11 = v37.i32[0];
  int16x8_t v43 = (__int32 *)((char *)v11 + v12);
  int8x8_t v44 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v20, 4uLL), v18));
  *int16x8_t v43 = v37.i32[1];
  int16x8_t v45 = (_DWORD *)((char *)v43 + v12);
  v47.i32[0] = *v42;
  int16x8_t v46 = (__int32 *)((char *)v42 + v12);
  v49.i64[1] = v48;
  v47.i32[1] = *v46;
  int32x4_t v50 = (__int32 *)((char *)v46 + v12);
  *int16x8_t v45 = v44.i32[0];
  int32x4_t v51 = (_DWORD *)((char *)v45 + v12);
  int8x8_t v52 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v25, 4uLL), v23));
  *int32x4_t v51 = v44.i32[1];
  int16x8_t v53 = (_DWORD *)((char *)v51 + v12);
  v54.i32[0] = *v50;
  v56.i64[1] = v55;
  v54.i32[1] = *(__int32 *)((char *)v50 + v12);
  *int16x8_t v53 = v52.i32[0];
  int16x8_t v57 = (_DWORD *)((char *)v53 + v12);
  int8x8_t v58 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v30, 4uLL), v28));
  *int16x8_t v57 = v52.i32[1];
  uint8x8_t v59 = (_DWORD *)((char *)v57 + v12);
  *uint8x8_t v59 = v58.i32[0];
  int16x8_t v60 = (_DWORD *)((char *)v59 + v12);
  int8x8_t v61 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v35, 4uLL), v33));
  _DWORD *v60 = v58.i32[1];
  uint8x8_t v62 = (_DWORD *)((char *)v60 + v12);
  *uint8x8_t v62 = v61.i32[0];
  int16x8_t v63 = (_DWORD *)((char *)v62 + v12);
  int8x8_t v64 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v41, 4uLL), v39));
  *int16x8_t v63 = v61.i32[1];
  int64x2_t v65 = (_DWORD *)((char *)v63 + v12);
  *int64x2_t v65 = v64.i32[0];
  int64x2_t v66 = (_DWORD *)((char *)v65 + v12);
  int8x8_t v67 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v49, 4uLL), v47));
  *int64x2_t v66 = v64.i32[1];
  int64x2_t v68 = (_DWORD *)((char *)v66 + v12);
  *int64x2_t v68 = v67.i32[0];
  int64x2_t v69 = (_DWORD *)((char *)v68 + v12);
  int8x8_t v70 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v56, 4uLL), v54));
  *int64x2_t v69 = v67.i32[1];
  int64x2_t v71 = (_DWORD *)((char *)v69 + v12);
  *int64x2_t v71 = v70.i32[0];
  int64x2_t v72 = (_DWORD *)((char *)v71 + v12);
  _DWORD *v72 = v70.i32[1];
  return (char *)v72 + v12;
}

__int32 *sub_224A7BE78(__int32 *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4) {
    return (__int32 *)sub_224A7BC64((uint64_t)a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7865C);
  }
  vld1q_dup_s16(a3);
  *a3 = 0;
  return sub_224A78458(a1, a2, (uint64_t)a3, a4, 16);
}

void sub_224A7BEB4(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
}

char *sub_224A7BEC0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7BC64(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7865C);
}

char *sub_224A7BED0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7BC64(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7865C);
}

char *sub_224A7BEE0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7BC64(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7865C);
}

char *sub_224A7BEF0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7BC64(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7878C);
}

char *sub_224A7BF00(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7BC64(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7878C);
}

char *sub_224A7BF10(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7BC64(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7878C);
}

char *sub_224A7BF20(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7BC64(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7882C);
}

char *sub_224A7BF30(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7BC64(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7882C);
}

char *sub_224A7BF40(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7BC64(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7882C);
}

void sub_224A7BF50(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
}

char *sub_224A7BF5C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7BC64(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7878C);
}

char *sub_224A7BF6C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7BC64(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A7882C);
}

void sub_224A7BF7C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
}

void sub_224A7BF88(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
}

uint8x16_t *sub_224A7BF94(uint8x16_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4) {
    return (uint8x16_t *)sub_224A7BA9C((uint64_t)a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void *))sub_224A79DF8);
  }
  vld1q_dup_s16(a3);
  *a3 = 0;
  return sub_224A784E8(a1, a2, (uint64_t)a3, a4, 4);
}

void sub_224A7BFCC(uint64_t a1, uint64_t a2, void *a3)
{
}

uint8x8_t *sub_224A7BFD4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_224A7BA9C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void *))sub_224A79DF8);
}

uint8x8_t *sub_224A7BFE0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_224A7BA9C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void *))sub_224A79DF8);
}

uint8x8_t *sub_224A7BFEC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_224A7BA9C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void *))sub_224A79DF8);
}

uint8x8_t *sub_224A7BFF8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_224A7BA9C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void *))sub_224A7A998);
}

uint8x8_t *sub_224A7C004(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_224A7BA9C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void *))sub_224A7A998);
}

uint8x8_t *sub_224A7C010(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_224A7BA9C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void *))sub_224A7A998);
}

uint8x8_t *sub_224A7C01C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_224A7BA9C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void *))sub_224A7AC74);
}

uint8x8_t *sub_224A7C028(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_224A7BA9C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void *))sub_224A7AC74);
}

uint8x8_t *sub_224A7C034(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_224A7BA9C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void *))sub_224A7AC74);
}

void sub_224A7C040(uint64_t a1, uint64_t a2, void *a3)
{
}

uint8x8_t *sub_224A7C048(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_224A7BA9C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void *))sub_224A7A998);
}

uint8x8_t *sub_224A7C054(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_224A7BA9C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void *))sub_224A7AC74);
}

void sub_224A7C060(uint64_t a1, uint64_t a2, void *a3)
{
}

void sub_224A7C068(uint64_t a1, uint64_t a2, void *a3)
{
}

void sub_224A7C070(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  *a3 = 0u;
  v3 = a3 + 1;
  *v3++ = 0u;
  *v3++ = 0u;
  *v3++ = 0u;
  *v3++ = 0u;
  *v3++ = 0u;
  *v3++ = 0u;
  *v3++ = 0u;
  *v3++ = 0u;
  *v3++ = 0u;
  *v3++ = 0u;
  *v3++ = 0u;
  *v3++ = 0u;
  *v3++ = 0u;
  _OWORD *v3 = 0u;
  v3[1] = 0u;
  JUMPOUT(0x224A7C494);
}

void sub_224A7C20C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  if (a4 >= v4)
  {
    a3[1] = 0uLL;
    a3[3] = 0uLL;
    a3[5] = 0uLL;
    a3[7] = 0uLL;
    a3[9] = 0uLL;
    a3[11] = 0uLL;
    a3[13] = 0uLL;
    a3[15] = 0uLL;
  }
  *a3 = 0u;
  int v5 = a3 + 2;
  _OWORD *v5 = 0u;
  v5 += 2;
  _OWORD *v5 = 0u;
  v5 += 2;
  _OWORD *v5 = 0u;
  v5 += 2;
  _OWORD *v5 = 0u;
  v5 += 2;
  _OWORD *v5 = 0u;
  v5 += 2;
  _OWORD *v5 = 0u;
  v5[2] = 0u;
  JUMPOUT(0x224A7C868);
}

char *sub_224A7C380(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, _OWORD *))
{
  *a3 = 0u;
  int v5 = a3 + 1;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  _OWORD *v5 = 0u;
  uint64_t v6 = a5(a1, a2, v5 + 1);
  uint64_t v8 = (uint8x8_t *)v7(v6);
  uint64_t v11 = (uint8x8_t *)((char *)v8 + v9 + v9);
  uint8x8_t v14 = *v11;
  uint8x8_t v13 = (uint8x8_t *)((char *)v11 + v9);
  uint8x8_t v17 = *v13;
  int16x8_t v16 = (uint8x8_t *)((char *)v13 + v9);
  uint8x8_t v20 = *v16;
  uint64_t v19 = (uint8x8_t *)((char *)v16 + v9);
  int8x8_t v22 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v12, 4uLL), *(uint8x8_t *)((char *)v8 + v9)));
  uint8x8_t *v8 = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v10, 4uLL), *v8));
  uint8x8_t v24 = *v19;
  uint8x8_t v23 = (uint8x8_t *)((char *)v19 + v9);
  *(int8x8_t *)((char *)v8 + v9) = v22;
  uint8x8_t v26 = (int8x8_t *)((char *)v8 + v9 + v9);
  uint8x8_t v27 = *v23;
  *uint8x8_t v26 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v15, 4uLL), v14));
  uint64_t v29 = (int8x8_t *)((char *)v26 + v9);
  uint8x8_t v30 = *(uint8x8_t *)((char *)v23 + v9);
  *uint64_t v29 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v18, 4uLL), v17));
  uint8x8_t v32 = (int8x8_t *)((char *)v29 + v9);
  *uint8x8_t v32 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v21, 4uLL), v20));
  uint8x8_t v33 = (int8x8_t *)((char *)v32 + v9);
  *uint8x8_t v33 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v25, 4uLL), v24));
  uint64_t v34 = (int8x8_t *)((char *)v33 + v9);
  int8x8_t *v34 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v28, 4uLL), v27));
  *(int8x8_t *)((char *)v34 + v9) = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v31, 4uLL), v30));
  uint8x8_t v36 = (uint8x8_t *)(v35() + 8);
  uint8x8_t v39 = (uint8x8_t *)((char *)v36 + v37 + v37);
  uint8x8_t v42 = *v39;
  int16x8_t v41 = (uint8x8_t *)((char *)v39 + v37);
  uint8x8_t v45 = *v41;
  int8x8_t v44 = (uint8x8_t *)((char *)v41 + v37);
  uint8x8_t v48 = *v44;
  uint8x8_t v47 = (uint8x8_t *)((char *)v44 + v37);
  int8x8_t v50 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v40, 4uLL), *(uint8x8_t *)((char *)v36 + v37)));
  uint8x8_t *v36 = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v38, 4uLL), *v36));
  int32x4_t v51 = (int8x8_t *)((char *)v36 + v37);
  uint8x8_t v53 = *v47;
  int8x8_t v52 = (uint8x8_t *)((char *)v47 + v37);
  *int32x4_t v51 = v50;
  uint64_t v55 = (int8x8_t *)((char *)v51 + v37);
  uint8x8_t v56 = *v52;
  *uint64_t v55 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v43, 4uLL), v42));
  int8x8_t v58 = (int8x8_t *)((char *)v55 + v37);
  uint8x8_t v59 = *(uint8x8_t *)((char *)v52 + v37);
  int8x8_t *v58 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v46, 4uLL), v45));
  int8x8_t v61 = (int8x8_t *)((char *)v58 + v37);
  int8x8_t *v61 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v49, 4uLL), v48));
  uint8x8_t v62 = (int8x8_t *)((char *)v61 + v37);
  *uint8x8_t v62 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v54, 4uLL), v53));
  int16x8_t v63 = (int8x8_t *)((char *)v62 + v37);
  *int16x8_t v63 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v57, 4uLL), v56));
  int8x8_t v64 = (int8x8_t *)((char *)v63 + v37);
  *int8x8_t v64 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v60, 4uLL), v59));
  return (char *)v64 + v37;
}

char *sub_224A7C6B0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4, uint64_t (*a5)(void))
{
  uint64_t v6 = 2;
  if (a4 >= v5)
  {
    a3[1] = 0uLL;
    a3[3] = 0uLL;
    a3[5] = 0uLL;
    a3[7] = 0uLL;
    a3[9] = 0uLL;
    a3[11] = 0uLL;
    a3[13] = 0uLL;
    a3[15] = 0uLL;
    a1 = a5();
  }
  *a3 = 0u;
  uint64_t v7 = &a3[v6];
  _OWORD *v7 = 0u;
  uint64_t v8 = &v7[v6];
  _OWORD *v8 = 0u;
  uint64_t v9 = &v8[v6];
  _OWORD *v9 = 0u;
  int16x8_t v10 = &v9[v6];
  _OWORD *v10 = 0u;
  uint64_t v11 = &v10[v6];
  *uint64_t v11 = 0u;
  int16x8_t v12 = &v11[v6];
  *int16x8_t v12 = 0u;
  v12[v6] = 0u;
  uint64_t v13 = ((uint64_t (*)(uint64_t))a5)(a1);
  int16x8_t v15 = (uint8x8_t *)v14(v13);
  int16x8_t v18 = (uint8x8_t *)((char *)v15 + v16 + v16);
  uint8x8_t v21 = *v18;
  uint8x8_t v20 = (uint8x8_t *)((char *)v18 + v16);
  uint8x8_t v24 = *v20;
  uint8x8_t v23 = (uint8x8_t *)((char *)v20 + v16);
  uint8x8_t v27 = *v23;
  uint8x8_t v26 = (uint8x8_t *)((char *)v23 + v16);
  int8x8_t v29 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v19, 4uLL), *(uint8x8_t *)((char *)v15 + v16)));
  *int16x8_t v15 = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v17, 4uLL), *v15));
  uint8x8_t v30 = (int8x8_t *)((char *)v15 + v16);
  uint8x8_t v32 = *v26;
  int16x8_t v31 = (uint8x8_t *)((char *)v26 + v16);
  int8x8_t *v30 = v29;
  uint64_t v34 = (int8x8_t *)((char *)v30 + v16);
  uint8x8_t v36 = *v31;
  int16x8_t v35 = (uint8x8_t *)((char *)v31 + v16);
  int8x8_t *v34 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v22, 4uLL), v21));
  int16x8_t v38 = (int8x8_t *)((char *)v34 + v16);
  uint8x8_t v40 = *v35;
  uint8x8_t v39 = (uint8x8_t *)((char *)v35 + v16);
  *int16x8_t v38 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v25, 4uLL), v24));
  uint8x8_t v42 = (int8x8_t *)((char *)v38 + v16);
  uint8x8_t v44 = *v39;
  int16x8_t v43 = (uint8x8_t *)((char *)v39 + v16);
  *uint8x8_t v42 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v28, 4uLL), v27));
  int16x8_t v46 = (int8x8_t *)((char *)v42 + v16);
  uint8x8_t v48 = *v43;
  uint8x8_t v47 = (uint8x8_t *)((char *)v43 + v16);
  int8x8_t *v46 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v33, 4uLL), v32));
  int8x8_t v50 = (int8x8_t *)((char *)v46 + v16);
  uint8x8_t v52 = *v47;
  int32x4_t v51 = (uint8x8_t *)((char *)v47 + v16);
  *int8x8_t v50 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v37, 4uLL), v36));
  int16x8_t v54 = (int8x8_t *)((char *)v50 + v16);
  uint8x8_t v56 = *v51;
  uint64_t v55 = (uint8x8_t *)((char *)v51 + v16);
  *int16x8_t v54 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v41, 4uLL), v40));
  int8x8_t v58 = (int8x8_t *)((char *)v54 + v16);
  uint8x8_t v60 = *v55;
  uint8x8_t v59 = (uint8x8_t *)((char *)v55 + v16);
  int8x8_t *v58 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v45, 4uLL), v44));
  uint8x8_t v62 = (int8x8_t *)((char *)v58 + v16);
  uint8x8_t v64 = *v59;
  int16x8_t v63 = (uint8x8_t *)((char *)v59 + v16);
  *uint8x8_t v62 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v49, 4uLL), v48));
  int64x2_t v66 = (int8x8_t *)((char *)v62 + v16);
  uint8x8_t v67 = *v63;
  *int64x2_t v66 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v53, 4uLL), v52));
  int64x2_t v69 = (int8x8_t *)((char *)v66 + v16);
  uint8x8_t v70 = *(uint8x8_t *)((char *)v63 + v16);
  *int64x2_t v69 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v57, 4uLL), v56));
  int64x2_t v72 = (int8x8_t *)((char *)v69 + v16);
  int8x8_t *v72 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v61, 4uLL), v60));
  int64x2_t v73 = (int8x8_t *)((char *)v72 + v16);
  *int64x2_t v73 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v65, 4uLL), v64));
  int32x4_t v74 = (int8x8_t *)((char *)v73 + v16);
  int8x8_t *v74 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v68, 4uLL), v67));
  int32x4_t v75 = (int8x8_t *)((char *)v74 + v16);
  int8x8_t *v75 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v71, 4uLL), v70));
  return (char *)v75 + v16;
}

uint8x8_t *sub_224A7CA14(uint8x8_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4) {
    return (uint8x8_t *)sub_224A7C6B0((uint64_t)a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78B80);
  }
  vld1q_dup_s16(a3);
  *a3 = 0;
  return sub_224A78498(a1, a2, (uint64_t)a3, a4, 16);
}

void sub_224A7CA54(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
}

char *sub_224A7CA60(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7C6B0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78B80);
}

char *sub_224A7CA70(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7C6B0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78B80);
}

char *sub_224A7CA80(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7C6B0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78B80);
}

char *sub_224A7CA90(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7C6B0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78D90);
}

char *sub_224A7CAA0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7C6B0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78D90);
}

char *sub_224A7CAB0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7C6B0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78D90);
}

char *sub_224A7CAC0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7C6B0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78F70);
}

char *sub_224A7CAD0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7C6B0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78F70);
}

char *sub_224A7CAE0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7C6B0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78F70);
}

void sub_224A7CAF0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
}

char *sub_224A7CAFC(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7C6B0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78D90);
}

char *sub_224A7CB0C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A7C6B0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A78F70);
}

void sub_224A7CB1C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
}

void sub_224A7CB28(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
}

uint8x16_t *sub_224A7CB34(uint8x16_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4) {
    return (uint8x16_t *)sub_224A7C380((uint64_t)a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A79AA0);
  }
  vld1q_dup_s16(a3);
  *a3 = 0;
  return sub_224A784E8(a1, a2, (uint64_t)a3, a4, 8);
}

void sub_224A7CB70(uint64_t a1, uint64_t a2, _OWORD *a3)
{
}

char *sub_224A7CB78(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A7C380(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A79AA0);
}

char *sub_224A7CB84(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A7C380(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A79AA0);
}

char *sub_224A7CB90(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A7C380(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A79AA0);
}

char *sub_224A7CB9C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A7C380(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A7A014);
}

char *sub_224A7CBA8(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A7C380(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A7A014);
}

char *sub_224A7CBB4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A7C380(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A7A014);
}

char *sub_224A7CBC0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A7C380(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A7A4D0);
}

char *sub_224A7CBCC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A7C380(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A7A4D0);
}

char *sub_224A7CBD8(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A7C380(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A7A4D0);
}

void sub_224A7CBE4(uint64_t a1, uint64_t a2, _OWORD *a3)
{
}

char *sub_224A7CBEC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A7C380(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A7A014);
}

char *sub_224A7CBF8(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A7C380(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A7A4D0);
}

void sub_224A7CC04(uint64_t a1, uint64_t a2, _OWORD *a3)
{
}

void sub_224A7CC0C(uint64_t a1, uint64_t a2, _OWORD *a3)
{
}

double sub_224A7CC14()
{
  return 1.84466382e-237;
}

void sub_224A7D0D4(_OWORD *a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v2 = 2 * a2;
  *a1 = 0u;
  v3 = (_OWORD *)((char *)a1 + v2);
  _OWORD *v3 = 0u;
  int v4 = (_OWORD *)((char *)v3 + v2);
  _OWORD *v4 = 0u;
  int v5 = (_OWORD *)((char *)v4 + v2);
  _OWORD *v5 = 0u;
  uint64_t v6 = (_OWORD *)((char *)v5 + v2);
  _OWORD *v6 = 0u;
  uint64_t v7 = (_OWORD *)((char *)v6 + v2);
  _OWORD *v7 = 0u;
  uint64_t v8 = (_OWORD *)((char *)v7 + v2);
  _OWORD *v8 = 0u;
  uint64_t v9 = (_OWORD *)((char *)v8 + v2);
  _OWORD *v9 = 0u;
  int16x8_t v10 = (_OWORD *)((char *)v9 + v2);
  _OWORD *v10 = 0u;
  uint64_t v11 = (_OWORD *)((char *)v10 + v2);
  *uint64_t v11 = 0u;
  int16x8_t v12 = (_OWORD *)((char *)v11 + v2);
  *int16x8_t v12 = 0u;
  uint64_t v13 = (_OWORD *)((char *)v12 + v2);
  *uint64_t v13 = 0u;
  uint8x8_t v14 = (_OWORD *)((char *)v13 + v2);
  *uint8x8_t v14 = 0u;
  int16x8_t v15 = (_OWORD *)((char *)v14 + v2);
  *int16x8_t v15 = 0u;
  uint64_t v16 = (_OWORD *)((char *)v15 + v2);
  _OWORD *v16 = 0u;
  *(_OWORD *)((char *)v16 + v2) = 0u;
  sub_224A79AA0();
  int32x4_t v19 = (int32x4_t)vtrn1q_s16(v17, v18);
  int32x4_t v20 = (int32x4_t)vtrn2q_s16(v17, v18);
  int32x4_t v23 = (int32x4_t)vtrn1q_s16(v21, v22);
  int32x4_t v24 = (int32x4_t)vtrn2q_s16(v21, v22);
  int32x4_t v27 = (int32x4_t)vtrn1q_s16(v25, v26);
  int32x4_t v28 = (int32x4_t)vtrn2q_s16(v25, v26);
  int32x4_t v31 = (int32x4_t)vtrn1q_s16(v29, v30);
  int32x4_t v32 = (int32x4_t)vtrn2q_s16(v29, v30);
  int64x2_t v33 = (int64x2_t)vtrn1q_s32(v27, v31);
  int64x2_t v34 = (int64x2_t)vtrn2q_s32(v27, v31);
  int64x2_t v35 = (int64x2_t)vtrn1q_s32(v28, v32);
  int64x2_t v36 = (int64x2_t)vtrn2q_s32(v28, v32);
  int64x2_t v37 = (int64x2_t)vtrn1q_s32(v20, v24);
  int64x2_t v38 = (int64x2_t)vtrn2q_s32(v20, v24);
  int64x2_t v39 = (int64x2_t)vtrn1q_s32(v19, v23);
  int64x2_t v40 = (int64x2_t)vtrn2q_s32(v19, v23);
  int64x2_t v41 = vtrn1q_s64(v39, v33);
  int64x2_t v42 = vtrn2q_s64(v39, v33);
  int64x2_t v43 = vtrn1q_s64(v37, v35);
  int64x2_t v44 = vtrn2q_s64(v37, v35);
  int64x2_t v45 = vtrn2q_s64(v40, v34);
  int64x2_t v46 = vtrn1q_s64(v40, v34);
  int64x2_t v47 = vtrn1q_s64(v38, v36);
  int64x2_t v48 = vtrn2q_s64(v38, v36);
  int32x4_t v51 = (int32x4_t)vtrn1q_s16(v49, v50);
  int32x4_t v52 = (int32x4_t)vtrn2q_s16(v49, v50);
  int32x4_t v55 = (int32x4_t)vtrn1q_s16(v53, v54);
  int32x4_t v56 = (int32x4_t)vtrn2q_s16(v53, v54);
  int32x4_t v59 = (int32x4_t)vtrn1q_s16(v57, v58);
  int32x4_t v60 = (int32x4_t)vtrn2q_s16(v57, v58);
  int32x4_t v63 = (int32x4_t)vtrn1q_s16(v61, v62);
  int32x4_t v64 = (int32x4_t)vtrn2q_s16(v61, v62);
  int64x2_t v65 = (int64x2_t)vtrn1q_s32(v59, v63);
  int64x2_t v66 = (int64x2_t)vtrn2q_s32(v59, v63);
  int64x2_t v67 = (int64x2_t)vtrn1q_s32(v60, v64);
  int64x2_t v68 = (int64x2_t)vtrn2q_s32(v60, v64);
  int64x2_t v69 = (int64x2_t)vtrn1q_s32(v52, v56);
  int64x2_t v70 = (int64x2_t)vtrn2q_s32(v52, v56);
  int64x2_t v71 = (int64x2_t)vtrn1q_s32(v51, v55);
  int64x2_t v72 = (int64x2_t)vtrn2q_s32(v51, v55);
  *v73++ = v41;
  *int64x2_t v73 = vtrn1q_s64(v71, v65);
  v73 += 3;
  *v73++ = v43;
  *int64x2_t v73 = vtrn1q_s64(v69, v67);
  v73 += 3;
  *v73++ = v46;
  *int64x2_t v73 = vtrn1q_s64(v72, v66);
  v73 += 3;
  *v73++ = v47;
  *int64x2_t v73 = vtrn1q_s64(v70, v68);
  v73 += 3;
  *v73++ = v42;
  *int64x2_t v73 = vtrn2q_s64(v71, v65);
  v73 += 3;
  *v73++ = v44;
  *int64x2_t v73 = vtrn2q_s64(v69, v67);
  v73 += 3;
  *v73++ = v45;
  *int64x2_t v73 = vtrn2q_s64(v72, v66);
  v73 += 3;
  *int64x2_t v73 = v48;
  v73[1] = vtrn2q_s64(v70, v68);
  _OWORD *v74 = 0u;
  int32x4_t v76 = (_OWORD *)((char *)v74 + v75);
  *int32x4_t v76 = 0u;
  int32x4_t v77 = (_OWORD *)((char *)v76 + v75);
  *int32x4_t v77 = 0u;
  int32x4_t v78 = (_OWORD *)((char *)v77 + v75);
  *int32x4_t v78 = 0u;
  int32x4_t v79 = (_OWORD *)((char *)v78 + v75);
  *int32x4_t v79 = 0u;
  int32x4_t v80 = (_OWORD *)((char *)v79 + v75);
  *int32x4_t v80 = 0u;
  int32x4_t v81 = (_OWORD *)((char *)v80 + v75);
  *int32x4_t v81 = 0u;
  int64x2_t v82 = (_OWORD *)((char *)v81 + v75);
  *int64x2_t v82 = 0u;
  int64x2_t v83 = (_OWORD *)((char *)v82 + v75);
  *int64x2_t v83 = 0u;
  int64x2_t v84 = (_OWORD *)((char *)v83 + v75);
  *int64x2_t v84 = 0u;
  int64x2_t v85 = (_OWORD *)((char *)v84 + v75);
  *int64x2_t v85 = 0u;
  int64x2_t v86 = (_OWORD *)((char *)v85 + v75);
  *int64x2_t v86 = 0u;
  int64x2_t v87 = (_OWORD *)((char *)v86 + v75);
  *int64x2_t v87 = 0u;
  int64x2_t v88 = (_OWORD *)((char *)v87 + v75);
  *int64x2_t v88 = 0u;
  int64x2_t v89 = (_OWORD *)((char *)v88 + v75);
  *int64x2_t v89 = 0u;
  *(_OWORD *)((char *)v89 + v75) = 0u;
  sub_224A7CC14();
  int32x4_t v92 = (int32x4_t)vtrn1q_s16(v91, v90);
  int32x4_t v93 = (int32x4_t)vtrn2q_s16(v91, v90);
  int32x4_t v96 = (int32x4_t)vtrn1q_s16(v95, v94);
  int32x4_t v97 = (int32x4_t)vtrn2q_s16(v95, v94);
  int32x4_t v100 = (int32x4_t)vtrn1q_s16(v99, v98);
  int32x4_t v101 = (int32x4_t)vtrn2q_s16(v99, v98);
  int32x4_t v104 = (int32x4_t)vtrn1q_s16(v103, v102);
  int32x4_t v105 = (int32x4_t)vtrn2q_s16(v103, v102);
  int64x2_t v106 = (int64x2_t)vtrn1q_s32(v100, v104);
  int64x2_t v107 = (int64x2_t)vtrn2q_s32(v100, v104);
  int64x2_t v108 = (int64x2_t)vtrn1q_s32(v101, v105);
  int64x2_t v109 = (int64x2_t)vtrn2q_s32(v101, v105);
  int64x2_t v110 = (int64x2_t)vtrn1q_s32(v93, v97);
  int64x2_t v111 = (int64x2_t)vtrn2q_s32(v93, v97);
  int64x2_t v112 = (int64x2_t)vtrn1q_s32(v92, v96);
  int64x2_t v113 = (int64x2_t)vtrn2q_s32(v92, v96);
  int16x8_t v114 = (int16x8_t)vtrn1q_s64(v112, v106);
  int16x8_t v115 = (int16x8_t)vtrn2q_s64(v112, v106);
  int16x8_t v116 = (int16x8_t)vtrn1q_s64(v110, v108);
  int16x8_t v117 = (int16x8_t)vtrn2q_s64(v110, v108);
  int16x8_t v118 = (int16x8_t)vtrn2q_s64(v113, v107);
  int16x8_t v119 = (int16x8_t)vtrn1q_s64(v113, v107);
  int16x8_t v120 = (int16x8_t)vtrn1q_s64(v111, v109);
  int16x8_t v121 = (int16x8_t)vtrn2q_s64(v111, v109);
  int32x4_t v124 = (int32x4_t)vtrn1q_s16(v123, v122);
  int32x4_t v125 = (int32x4_t)vtrn2q_s16(v123, v122);
  int32x4_t v128 = (int32x4_t)vtrn1q_s16(v127, v126);
  int32x4_t v129 = (int32x4_t)vtrn2q_s16(v127, v126);
  int32x4_t v132 = (int32x4_t)vtrn1q_s16(v131, v130);
  int32x4_t v133 = (int32x4_t)vtrn2q_s16(v131, v130);
  int32x4_t v136 = (int32x4_t)vtrn1q_s16(v135, v134);
  int32x4_t v137 = (int32x4_t)vtrn2q_s16(v135, v134);
  int64x2_t v138 = (int64x2_t)vtrn1q_s32(v132, v136);
  int64x2_t v139 = (int64x2_t)vtrn2q_s32(v132, v136);
  int64x2_t v140 = (int64x2_t)vtrn1q_s32(v133, v137);
  int64x2_t v141 = (int64x2_t)vtrn2q_s32(v133, v137);
  int64x2_t v142 = (int64x2_t)vtrn1q_s32(v125, v129);
  int64x2_t v143 = (int64x2_t)vtrn2q_s32(v125, v129);
  int64x2_t v144 = (int64x2_t)vtrn1q_s32(v124, v128);
  int64x2_t v145 = (int64x2_t)vtrn2q_s32(v124, v128);
  int16x8_t v146 = (int16x8_t)vtrn1q_s64(v144, v138);
  int16x8_t v147 = (int16x8_t)vtrn2q_s64(v144, v138);
  int16x8_t v148 = (int16x8_t)vtrn1q_s64(v142, v140);
  int16x8_t v149 = (int16x8_t)vtrn2q_s64(v142, v140);
  int16x8_t v150 = (int16x8_t)vtrn2q_s64(v145, v139);
  int16x8_t v151 = (int16x8_t)vtrn1q_s64(v145, v139);
  int16x8_t v152 = (int16x8_t)vtrn1q_s64(v143, v141);
  int16x8_t v153 = (int16x8_t)vtrn2q_s64(v143, v141);
  int16x8_t v155 = v154[1];
  int8x16_t v156 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v155, v146)), 2uLL);
  int8x16_t v157 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v114)), 2uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v114), 2uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v155, v146), 2uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v156, v156, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v157, v157, 8uLL);
  v154 += 2;
  int16x8_t v158 = v154[1];
  int8x16_t v159 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v158, v148)), 2uLL);
  int8x16_t v160 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v116)), 2uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v116), 2uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v158, v148), 2uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v159, v159, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v160, v160, 8uLL);
  v154 += 2;
  int16x8_t v161 = v154[1];
  int8x16_t v162 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v161, v151)), 2uLL);
  int8x16_t v163 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v119)), 2uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v119), 2uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v161, v151), 2uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v162, v162, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v163, v163, 8uLL);
  v154 += 2;
  int16x8_t v164 = v154[1];
  int8x16_t v165 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v164, v152)), 2uLL);
  int8x16_t v166 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v120)), 2uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v120), 2uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v164, v152), 2uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v165, v165, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v166, v166, 8uLL);
  v154 += 2;
  int16x8_t v167 = v154[1];
  int8x16_t v168 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v167, v147)), 2uLL);
  int8x16_t v169 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v115)), 2uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v115), 2uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v167, v147), 2uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v168, v168, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v169, v169, 8uLL);
  v154 += 2;
  int16x8_t v170 = v154[1];
  int8x16_t v171 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v170, v149)), 2uLL);
  int8x16_t v172 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v117)), 2uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v117), 2uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v170, v149), 2uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v171, v171, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v172, v172, 8uLL);
  v154 += 2;
  int16x8_t v173 = v154[1];
  int8x16_t v174 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v173, v150)), 2uLL);
  int8x16_t v175 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v118)), 2uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v118), 2uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v173, v150), 2uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v174, v174, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v175, v175, 8uLL);
  v154 += 2;
  int16x8_t v176 = v154[1];
  int8x16_t v177 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v176, v153)), 2uLL);
  int8x16_t v178 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v121)), 2uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v121), 2uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v176, v153), 2uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v177, v177, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v178, v178, 8uLL);
}

void sub_224A7D5BC(_OWORD *a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v2 = 2 * a2;
  *a1 = 0u;
  v3 = (_OWORD *)((char *)a1 + v2);
  _OWORD *v3 = 0u;
  int v4 = (_OWORD *)((char *)v3 + v2);
  _OWORD *v4 = 0u;
  int v5 = (_OWORD *)((char *)v4 + v2);
  _OWORD *v5 = 0u;
  uint64_t v6 = (_OWORD *)((char *)v5 + v2);
  _OWORD *v6 = 0u;
  uint64_t v7 = (_OWORD *)((char *)v6 + v2);
  _OWORD *v7 = 0u;
  uint64_t v8 = (_OWORD *)((char *)v7 + v2);
  _OWORD *v8 = 0u;
  uint64_t v9 = (_OWORD *)((char *)v8 + v2);
  _OWORD *v9 = 0u;
  int16x8_t v10 = (_OWORD *)((char *)v9 + v2);
  _OWORD *v10 = 0u;
  uint64_t v11 = (_OWORD *)((char *)v10 + v2);
  *uint64_t v11 = 0u;
  int16x8_t v12 = (_OWORD *)((char *)v11 + v2);
  *int16x8_t v12 = 0u;
  uint64_t v13 = (_OWORD *)((char *)v12 + v2);
  *uint64_t v13 = 0u;
  uint8x8_t v14 = (_OWORD *)((char *)v13 + v2);
  *uint8x8_t v14 = 0u;
  int16x8_t v15 = (_OWORD *)((char *)v14 + v2);
  *int16x8_t v15 = 0u;
  uint64_t v16 = (_OWORD *)((char *)v15 + v2);
  _OWORD *v16 = 0u;
  *(_OWORD *)((char *)v16 + v2) = 0u;
  sub_224A79AA0();
  int32x4_t v19 = (int32x4_t)vtrn1q_s16(v17, v18);
  int32x4_t v20 = (int32x4_t)vtrn2q_s16(v17, v18);
  int32x4_t v23 = (int32x4_t)vtrn1q_s16(v21, v22);
  int32x4_t v24 = (int32x4_t)vtrn2q_s16(v21, v22);
  int32x4_t v27 = (int32x4_t)vtrn1q_s16(v25, v26);
  int32x4_t v28 = (int32x4_t)vtrn2q_s16(v25, v26);
  int32x4_t v31 = (int32x4_t)vtrn1q_s16(v29, v30);
  int32x4_t v32 = (int32x4_t)vtrn2q_s16(v29, v30);
  int64x2_t v33 = (int64x2_t)vtrn1q_s32(v27, v31);
  int64x2_t v34 = (int64x2_t)vtrn2q_s32(v27, v31);
  int64x2_t v35 = (int64x2_t)vtrn1q_s32(v28, v32);
  int64x2_t v36 = (int64x2_t)vtrn2q_s32(v28, v32);
  int64x2_t v37 = (int64x2_t)vtrn1q_s32(v20, v24);
  int64x2_t v38 = (int64x2_t)vtrn2q_s32(v20, v24);
  int64x2_t v39 = (int64x2_t)vtrn1q_s32(v19, v23);
  int64x2_t v40 = (int64x2_t)vtrn2q_s32(v19, v23);
  int64x2_t v41 = vtrn1q_s64(v39, v33);
  int64x2_t v42 = vtrn2q_s64(v39, v33);
  int64x2_t v43 = vtrn1q_s64(v37, v35);
  int64x2_t v44 = vtrn2q_s64(v37, v35);
  int64x2_t v45 = vtrn2q_s64(v40, v34);
  int64x2_t v46 = vtrn1q_s64(v40, v34);
  int64x2_t v47 = vtrn1q_s64(v38, v36);
  int64x2_t v48 = vtrn2q_s64(v38, v36);
  int32x4_t v51 = (int32x4_t)vtrn1q_s16(v49, v50);
  int32x4_t v52 = (int32x4_t)vtrn2q_s16(v49, v50);
  int32x4_t v55 = (int32x4_t)vtrn1q_s16(v53, v54);
  int32x4_t v56 = (int32x4_t)vtrn2q_s16(v53, v54);
  int32x4_t v59 = (int32x4_t)vtrn1q_s16(v57, v58);
  int32x4_t v60 = (int32x4_t)vtrn2q_s16(v57, v58);
  int32x4_t v63 = (int32x4_t)vtrn1q_s16(v61, v62);
  int32x4_t v64 = (int32x4_t)vtrn2q_s16(v61, v62);
  int64x2_t v65 = (int64x2_t)vtrn1q_s32(v59, v63);
  int64x2_t v66 = (int64x2_t)vtrn2q_s32(v59, v63);
  int64x2_t v67 = (int64x2_t)vtrn1q_s32(v60, v64);
  int64x2_t v68 = (int64x2_t)vtrn2q_s32(v60, v64);
  int64x2_t v69 = (int64x2_t)vtrn1q_s32(v52, v56);
  int64x2_t v70 = (int64x2_t)vtrn2q_s32(v52, v56);
  int64x2_t v71 = (int64x2_t)vtrn1q_s32(v51, v55);
  int64x2_t v72 = (int64x2_t)vtrn2q_s32(v51, v55);
  *v73++ = v41;
  *int64x2_t v73 = vtrn1q_s64(v71, v65);
  v73 += 3;
  *v73++ = v43;
  *int64x2_t v73 = vtrn1q_s64(v69, v67);
  v73 += 3;
  *v73++ = v46;
  *int64x2_t v73 = vtrn1q_s64(v72, v66);
  v73 += 3;
  *v73++ = v47;
  *int64x2_t v73 = vtrn1q_s64(v70, v68);
  v73 += 3;
  *v73++ = v42;
  *int64x2_t v73 = vtrn2q_s64(v71, v65);
  v73 += 3;
  *v73++ = v44;
  *int64x2_t v73 = vtrn2q_s64(v69, v67);
  v73 += 3;
  *v73++ = v45;
  *int64x2_t v73 = vtrn2q_s64(v72, v66);
  v73 += 3;
  *int64x2_t v73 = v48;
  v73[1] = vtrn2q_s64(v70, v68);
  _OWORD *v74 = 0u;
  int32x4_t v76 = (_OWORD *)((char *)v74 + v75);
  *int32x4_t v76 = 0u;
  int32x4_t v77 = (_OWORD *)((char *)v76 + v75);
  *int32x4_t v77 = 0u;
  int32x4_t v78 = (_OWORD *)((char *)v77 + v75);
  *int32x4_t v78 = 0u;
  int32x4_t v79 = (_OWORD *)((char *)v78 + v75);
  *int32x4_t v79 = 0u;
  int32x4_t v80 = (_OWORD *)((char *)v79 + v75);
  *int32x4_t v80 = 0u;
  int32x4_t v81 = (_OWORD *)((char *)v80 + v75);
  *int32x4_t v81 = 0u;
  int64x2_t v82 = (_OWORD *)((char *)v81 + v75);
  *int64x2_t v82 = 0u;
  int64x2_t v83 = (_OWORD *)((char *)v82 + v75);
  *int64x2_t v83 = 0u;
  int64x2_t v84 = (_OWORD *)((char *)v83 + v75);
  *int64x2_t v84 = 0u;
  int64x2_t v85 = (_OWORD *)((char *)v84 + v75);
  *int64x2_t v85 = 0u;
  int64x2_t v86 = (_OWORD *)((char *)v85 + v75);
  *int64x2_t v86 = 0u;
  int64x2_t v87 = (_OWORD *)((char *)v86 + v75);
  *int64x2_t v87 = 0u;
  int64x2_t v88 = (_OWORD *)((char *)v87 + v75);
  *int64x2_t v88 = 0u;
  int64x2_t v89 = (_OWORD *)((char *)v88 + v75);
  *int64x2_t v89 = 0u;
  *(_OWORD *)((char *)v89 + v75) = 0u;
  sub_224A7CC14();
  int32x4_t v92 = (int32x4_t)vtrn1q_s16(v91, v90);
  int32x4_t v93 = (int32x4_t)vtrn2q_s16(v91, v90);
  int32x4_t v96 = (int32x4_t)vtrn1q_s16(v95, v94);
  int32x4_t v97 = (int32x4_t)vtrn2q_s16(v95, v94);
  int32x4_t v100 = (int32x4_t)vtrn1q_s16(v99, v98);
  int32x4_t v101 = (int32x4_t)vtrn2q_s16(v99, v98);
  int32x4_t v104 = (int32x4_t)vtrn1q_s16(v103, v102);
  int32x4_t v105 = (int32x4_t)vtrn2q_s16(v103, v102);
  int64x2_t v106 = (int64x2_t)vtrn1q_s32(v100, v104);
  int64x2_t v107 = (int64x2_t)vtrn2q_s32(v100, v104);
  int64x2_t v108 = (int64x2_t)vtrn1q_s32(v101, v105);
  int64x2_t v109 = (int64x2_t)vtrn2q_s32(v101, v105);
  int64x2_t v110 = (int64x2_t)vtrn1q_s32(v93, v97);
  int64x2_t v111 = (int64x2_t)vtrn2q_s32(v93, v97);
  int64x2_t v112 = (int64x2_t)vtrn1q_s32(v92, v96);
  int64x2_t v113 = (int64x2_t)vtrn2q_s32(v92, v96);
  int16x8_t v114 = (int16x8_t)vtrn1q_s64(v112, v106);
  int16x8_t v115 = (int16x8_t)vtrn2q_s64(v112, v106);
  int16x8_t v116 = (int16x8_t)vtrn1q_s64(v110, v108);
  int16x8_t v117 = (int16x8_t)vtrn2q_s64(v110, v108);
  int16x8_t v118 = (int16x8_t)vtrn2q_s64(v113, v107);
  int16x8_t v119 = (int16x8_t)vtrn1q_s64(v113, v107);
  int16x8_t v120 = (int16x8_t)vtrn1q_s64(v111, v109);
  int16x8_t v121 = (int16x8_t)vtrn2q_s64(v111, v109);
  int32x4_t v124 = (int32x4_t)vtrn1q_s16(v123, v122);
  int32x4_t v125 = (int32x4_t)vtrn2q_s16(v123, v122);
  int32x4_t v128 = (int32x4_t)vtrn1q_s16(v127, v126);
  int32x4_t v129 = (int32x4_t)vtrn2q_s16(v127, v126);
  int32x4_t v132 = (int32x4_t)vtrn1q_s16(v131, v130);
  int32x4_t v133 = (int32x4_t)vtrn2q_s16(v131, v130);
  int32x4_t v136 = (int32x4_t)vtrn1q_s16(v135, v134);
  int32x4_t v137 = (int32x4_t)vtrn2q_s16(v135, v134);
  int64x2_t v138 = (int64x2_t)vtrn1q_s32(v132, v136);
  int64x2_t v139 = (int64x2_t)vtrn2q_s32(v132, v136);
  int64x2_t v140 = (int64x2_t)vtrn1q_s32(v133, v137);
  int64x2_t v141 = (int64x2_t)vtrn2q_s32(v133, v137);
  int64x2_t v142 = (int64x2_t)vtrn1q_s32(v125, v129);
  int64x2_t v143 = (int64x2_t)vtrn2q_s32(v125, v129);
  int64x2_t v144 = (int64x2_t)vtrn1q_s32(v124, v128);
  int64x2_t v145 = (int64x2_t)vtrn2q_s32(v124, v128);
  int16x8_t v146 = (int16x8_t)vtrn1q_s64(v144, v138);
  int16x8_t v147 = (int16x8_t)vtrn2q_s64(v144, v138);
  int16x8_t v148 = (int16x8_t)vtrn1q_s64(v142, v140);
  int16x8_t v149 = (int16x8_t)vtrn2q_s64(v142, v140);
  int16x8_t v150 = (int16x8_t)vtrn2q_s64(v145, v139);
  int16x8_t v151 = (int16x8_t)vtrn1q_s64(v145, v139);
  int16x8_t v152 = (int16x8_t)vtrn1q_s64(v143, v141);
  int16x8_t v153 = (int16x8_t)vtrn2q_s64(v143, v141);
  int16x8_t v155 = v154[1];
  int8x16_t v156 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v155, v146)), 1uLL);
  int8x16_t v157 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v114)), 1uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v114), 1uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v155, v146), 1uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v156, v156, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v157, v157, 8uLL);
  v154 += 2;
  int16x8_t v158 = v154[1];
  int8x16_t v159 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v158, v148)), 1uLL);
  int8x16_t v160 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v116)), 1uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v116), 1uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v158, v148), 1uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v159, v159, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v160, v160, 8uLL);
  v154 += 2;
  int16x8_t v161 = v154[1];
  int8x16_t v162 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v161, v151)), 1uLL);
  int8x16_t v163 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v119)), 1uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v119), 1uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v161, v151), 1uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v162, v162, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v163, v163, 8uLL);
  v154 += 2;
  int16x8_t v164 = v154[1];
  int8x16_t v165 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v164, v152)), 1uLL);
  int8x16_t v166 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v120)), 1uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v120), 1uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v164, v152), 1uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v165, v165, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v166, v166, 8uLL);
  v154 += 2;
  int16x8_t v167 = v154[1];
  int8x16_t v168 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v167, v147)), 1uLL);
  int8x16_t v169 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v115)), 1uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v115), 1uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v167, v147), 1uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v168, v168, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v169, v169, 8uLL);
  v154 += 2;
  int16x8_t v170 = v154[1];
  int8x16_t v171 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v170, v149)), 1uLL);
  int8x16_t v172 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v117)), 1uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v117), 1uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v170, v149), 1uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v171, v171, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v172, v172, 8uLL);
  v154 += 2;
  int16x8_t v173 = v154[1];
  int8x16_t v174 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v173, v150)), 1uLL);
  int8x16_t v175 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v118)), 1uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v118), 1uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v173, v150), 1uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v174, v174, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v175, v175, 8uLL);
  v154 += 2;
  int16x8_t v176 = v154[1];
  int8x16_t v177 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(v176, v153)), 1uLL);
  int8x16_t v178 = (int8x16_t)vrshrq_n_s16(vrev64q_s16(vqsubq_s16(*v154, v121)), 1uLL);
  int16x8_t *v154 = vrshrq_n_s16(vqaddq_s16(*v154, v121), 1uLL);
  v154[1] = vrshrq_n_s16(vqaddq_s16(v176, v153), 1uLL);
  v154 += 2;
  *(int8x16_t *)v154 = vextq_s8(v177, v177, 8uLL);
  v154[1] = (int16x8_t)vextq_s8(v178, v178, 8uLL);
}

void sub_224A7DB2C()
{
  sub_224A79AA0();
  *char v0 = v2;
  v3 = (_OWORD *)((char *)v0 + v1);
  _OWORD *v3 = v4;
  int v5 = (_OWORD *)((char *)v3 + v1);
  _OWORD *v5 = v6;
  uint64_t v7 = (_OWORD *)((char *)v5 + v1);
  _OWORD *v7 = v8;
  uint64_t v9 = (_OWORD *)((char *)v7 + v1);
  _OWORD *v9 = v10;
  uint64_t v11 = (_OWORD *)((char *)v9 + v1);
  *uint64_t v11 = v12;
  uint64_t v13 = (_OWORD *)((char *)v11 + v1);
  *uint64_t v13 = v14;
  int16x8_t v15 = (_OWORD *)((char *)v13 + v1);
  *int16x8_t v15 = v16;
  int16x8_t v17 = (_OWORD *)((char *)v15 + v1);
  *int16x8_t v17 = v18;
  int32x4_t v19 = (_OWORD *)((char *)v17 + v1);
  *int32x4_t v19 = v20;
  int16x8_t v21 = (_OWORD *)((char *)v19 + v1);
  *int16x8_t v21 = v22;
  int32x4_t v23 = (_OWORD *)((char *)v21 + v1);
  *int32x4_t v23 = v24;
  int16x8_t v25 = (_OWORD *)((char *)v23 + v1);
  *int16x8_t v25 = v26;
  int32x4_t v27 = (_OWORD *)((char *)v25 + v1);
  *int32x4_t v27 = v28;
  int16x8_t v29 = (_OWORD *)((char *)v27 + v1);
  *int16x8_t v29 = v30;
  *(_OWORD *)((char *)v29 + v1) = v31;
  sub_224A7CC14();
  int16x8_t v35 = *v32;
  int64x2_t v34 = (int16x8_t *)((char *)v32 + v33);
  int16x8_t v39 = *v34;
  int64x2_t v38 = (int16x8_t *)((char *)v34 + v33);
  int64x2_t v40 = (uint8x8_t *)((char *)v37 + v36 + v36);
  int16x8_t v43 = *v38;
  int64x2_t v42 = (int16x8_t *)((char *)v38 + v33);
  uint8x8_t v45 = *v40;
  int64x2_t v44 = (uint8x8_t *)((char *)v40 + v36);
  int8x8_t v48 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v35, v41), 4uLL), *v37));
  int16x8_t v50 = *v42;
  int16x8_t v49 = (int16x8_t *)((char *)v42 + v33);
  int16x8_t v51 = (int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v39, v46), 4uLL), *(uint8x8_t *)((char *)v37 + v36));
  *int64x2_t v37 = (uint8x8_t)v48;
  int16x8_t v53 = (int8x8_t *)((char *)v37 + v36);
  uint8x8_t v55 = *v44;
  int16x8_t v54 = (uint8x8_t *)((char *)v44 + v36);
  *int16x8_t v53 = vqmovun_s16(v51);
  int32x4_t v56 = (int8x8_t *)((char *)v53 + v36);
  *int32x4_t v56 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v43, v47), 4uLL), v45));
  int16x8_t v57 = (int8x8_t *)((char *)v56 + v36);
  *int16x8_t v57 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v50, v52), 4uLL), v55));
  int16x8_t v58 = (int8x8_t *)((char *)v57 + v36);
  int16x8_t v60 = *v49;
  int32x4_t v59 = (int16x8_t *)((char *)v49 + v33);
  uint8x8_t v62 = *v54;
  int16x8_t v61 = (uint8x8_t *)((char *)v54 + v36);
  int16x8_t v64 = *v59;
  int32x4_t v63 = (int16x8_t *)((char *)v59 + v33);
  uint8x8_t v66 = *v61;
  int64x2_t v65 = (uint8x8_t *)((char *)v61 + v36);
  int16x8_t v69 = *v63;
  int64x2_t v68 = (int16x8_t *)((char *)v63 + v33);
  uint8x8_t v71 = *v65;
  int64x2_t v70 = (uint8x8_t *)((char *)v65 + v36);
  int8x8_t v74 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v60, v67), 4uLL), v62));
  int16x8_t v76 = *v68;
  uint64_t v75 = (int16x8_t *)((char *)v68 + v33);
  int8x8_t *v58 = v74;
  int32x4_t v78 = (int8x8_t *)((char *)v58 + v36);
  uint8x8_t v80 = *v70;
  int32x4_t v79 = (uint8x8_t *)((char *)v70 + v36);
  *int32x4_t v78 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v64, v72), 4uLL), v66));
  int32x4_t v81 = (int8x8_t *)((char *)v78 + v36);
  *int32x4_t v81 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v69, v73), 4uLL), v71));
  int64x2_t v82 = (int8x8_t *)((char *)v81 + v36);
  *int64x2_t v82 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v76, v77), 4uLL), v80));
  int64x2_t v83 = (int8x8_t *)((char *)v82 + v36);
  int16x8_t v85 = *v75;
  int64x2_t v84 = (int16x8_t *)((char *)v75 + v33);
  uint8x8_t v87 = *v79;
  int64x2_t v86 = (uint8x8_t *)((char *)v79 + v36);
  int16x8_t v89 = *v84;
  int64x2_t v88 = (int16x8_t *)((char *)v84 + v33);
  uint8x8_t v91 = *v86;
  int16x8_t v90 = (uint8x8_t *)((char *)v86 + v36);
  int16x8_t v94 = *v88;
  int32x4_t v93 = (int16x8_t *)((char *)v88 + v33);
  uint8x8_t v96 = *v90;
  int16x8_t v95 = (uint8x8_t *)((char *)v90 + v36);
  int8x8_t v99 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v85, v92), 4uLL), v87));
  int16x8_t v101 = *v93;
  int32x4_t v100 = (int16x8_t *)((char *)v93 + v33);
  *int64x2_t v83 = v99;
  int16x8_t v103 = (int8x8_t *)((char *)v83 + v36);
  uint8x8_t v105 = *v95;
  int32x4_t v104 = (uint8x8_t *)((char *)v95 + v36);
  *int16x8_t v103 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v89, v97), 4uLL), v91));
  int64x2_t v106 = (int8x8_t *)((char *)v103 + v36);
  *int64x2_t v106 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v94, v98), 4uLL), v96));
  int64x2_t v107 = (int8x8_t *)((char *)v106 + v36);
  *int64x2_t v107 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v101, v102), 4uLL), v105));
  int64x2_t v108 = (int8x8_t *)((char *)v107 + v36);
  int16x8_t v110 = *v100;
  int64x2_t v109 = (int16x8_t *)((char *)v100 + v33);
  uint8x8_t v112 = *v104;
  int64x2_t v111 = (uint8x8_t *)((char *)v104 + v36);
  int16x8_t v114 = *v109;
  int64x2_t v113 = (int16x8_t *)((char *)v109 + v33);
  uint8x8_t v116 = *v111;
  int16x8_t v115 = (uint8x8_t *)((char *)v111 + v36);
  int16x8_t v119 = *v113;
  int16x8_t v118 = (int16x8_t *)((char *)v113 + v33);
  uint8x8_t v121 = *v115;
  int16x8_t v120 = (uint8x8_t *)((char *)v115 + v36);
  int8x8_t v124 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v110, v117), 4uLL), v112));
  int16x8_t v126 = vqaddq_s16(*v118, v125);
  *int64x2_t v108 = v124;
  int16x8_t v127 = (int8x8_t *)((char *)v108 + v36);
  uint8x8_t v129 = *v120;
  int32x4_t v128 = (uint8x8_t *)((char *)v120 + v36);
  *int16x8_t v127 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v114, v122), 4uLL), v116));
  int16x8_t v130 = (int8x8_t *)((char *)v127 + v36);
  *int16x8_t v130 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v119, v123), 4uLL), v121));
  int16x8_t v131 = (int8x8_t *)((char *)v130 + v36);
  *int16x8_t v131 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v126, 4uLL), v129));
  int32x4_t v132 = (int8x8_t *)((char *)v131 + v36);
  int16x8_t v134 = *v118;
  int32x4_t v133 = (int16x8_t *)((char *)v118 - v33);
  uint8x8_t v136 = *v128;
  int16x8_t v135 = (uint8x8_t *)((char *)v128 + v36);
  int16x8_t v138 = *v133;
  int32x4_t v137 = (int16x8_t *)((char *)v133 - v33);
  uint8x8_t v140 = *v135;
  int64x2_t v139 = (uint8x8_t *)((char *)v135 + v36);
  int16x8_t v142 = *v137;
  int64x2_t v141 = (int16x8_t *)((char *)v137 - v33);
  uint8x8_t v144 = *v139;
  int64x2_t v143 = (uint8x8_t *)((char *)v139 + v36);
  int8x8_t v145 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v134, v125), 4uLL), v136));
  int16x8_t v147 = *v141;
  int16x8_t v146 = (int16x8_t *)((char *)v141 - v33);
  *int32x4_t v132 = v145;
  int16x8_t v148 = (int8x8_t *)((char *)v132 + v36);
  uint8x8_t v150 = *v143;
  int16x8_t v149 = (uint8x8_t *)((char *)v143 + v36);
  *int16x8_t v148 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v138, v123), 4uLL), v140));
  int16x8_t v151 = (int8x8_t *)((char *)v148 + v36);
  *int16x8_t v151 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v142, v122), 4uLL), v144));
  int16x8_t v152 = (int8x8_t *)((char *)v151 + v36);
  *int16x8_t v152 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v147, v117), 4uLL), v150));
  int16x8_t v153 = (int8x8_t *)((char *)v152 + v36);
  int16x8_t v155 = *v146;
  v154 = (int16x8_t *)((char *)v146 - v33);
  uint8x8_t v157 = *v149;
  int8x16_t v156 = (uint8x8_t *)((char *)v149 + v36);
  int16x8_t v159 = *v154;
  int16x8_t v158 = (int16x8_t *)((char *)v154 - v33);
  uint8x8_t v161 = *v156;
  int8x16_t v160 = (uint8x8_t *)((char *)v156 + v36);
  int16x8_t v163 = *v158;
  int8x16_t v162 = (int16x8_t *)((char *)v158 - v33);
  uint8x8_t v165 = *v160;
  int16x8_t v164 = (uint8x8_t *)((char *)v160 + v36);
  int8x8_t v166 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v155, v102), 4uLL), v157));
  int16x8_t v168 = *v162;
  int16x8_t v167 = (int16x8_t *)((char *)v162 - v33);
  *int16x8_t v153 = v166;
  int8x16_t v169 = (int8x8_t *)((char *)v153 + v36);
  uint8x8_t v171 = *v164;
  int16x8_t v170 = (uint8x8_t *)((char *)v164 + v36);
  *int8x16_t v169 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v159, v98), 4uLL), v161));
  int8x16_t v172 = (int8x8_t *)((char *)v169 + v36);
  *int8x16_t v172 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v163, v97), 4uLL), v165));
  int16x8_t v173 = (int8x8_t *)((char *)v172 + v36);
  *int16x8_t v173 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v168, v92), 4uLL), v171));
  int8x16_t v174 = (int8x8_t *)((char *)v173 + v36);
  int16x8_t v176 = *v167;
  int8x16_t v175 = (int16x8_t *)((char *)v167 - v33);
  uint8x8_t v178 = *v170;
  int8x16_t v177 = (uint8x8_t *)((char *)v170 + v36);
  int16x8_t v180 = *v175;
  v179 = (int16x8_t *)((char *)v175 - v33);
  uint8x8_t v182 = *v177;
  v181 = (uint8x8_t *)((char *)v177 + v36);
  int16x8_t v184 = *v179;
  v183 = (int16x8_t *)((char *)v179 - v33);
  uint8x8_t v186 = *v181;
  v185 = (uint8x8_t *)((char *)v181 + v36);
  int8x8_t v187 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v176, v77), 4uLL), v178));
  int16x8_t v189 = *v183;
  v188 = (int16x8_t *)((char *)v183 - v33);
  *int8x16_t v174 = v187;
  v190 = (int8x8_t *)((char *)v174 + v36);
  uint8x8_t v192 = *v185;
  v191 = (uint8x8_t *)((char *)v185 + v36);
  int8x8_t *v190 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v180, v73), 4uLL), v182));
  v193 = (int8x8_t *)((char *)v190 + v36);
  int8x8_t *v193 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v184, v72), 4uLL), v186));
  v194 = (int8x8_t *)((char *)v193 + v36);
  int8x8_t *v194 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v189, v67), 4uLL), v192));
  v195 = (int8x8_t *)((char *)v194 + v36);
  int16x8_t v197 = *v188;
  v196 = (int16x8_t *)((char *)v188 - v33);
  uint8x8_t v199 = *v191;
  v198 = (uint8x8_t *)((char *)v191 + v36);
  int16x8_t v201 = *v196;
  v200 = (int16x8_t *)((char *)v196 - v33);
  uint8x8_t v203 = *v198;
  v202 = (uint8x8_t *)((char *)v198 + v36);
  int16x8_t v204 = *v200;
  uint8x8_t v205 = *v202;
  int8x8_t v206 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v197, v52), 4uLL), v199));
  int16x8_t v207 = *(int16x8_t *)((char *)v200 - v33);
  int8x8_t *v195 = v206;
  v208 = (int8x8_t *)((char *)v195 + v36);
  uint8x8_t v209 = *(uint8x8_t *)((char *)v202 + v36);
  int8x8_t *v208 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v201, v47), 4uLL), v203));
  v210 = (int8x8_t *)((char *)v208 + v36);
  int8x8_t *v210 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v204, v46), 4uLL), v205));
  *(int8x8_t *)((char *)v210 + v36) = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v207, v41), 4uLL), v209));
}

uint8x8_t *sub_224A7DFA0(uint8x8_t *result, uint64_t a2, _OWORD *a3, int a4)
{
  long long v4 = &word_2646ED100;
  while (1)
  {
    LODWORD(v5) = 0;
    long long v6 = &word_2646ED100;
    do
    {
      uint64_t v5 = (v5 + 8);
      int16x8_t v7 = *(int16x8_t *)a3;
      *a3 = 0uLL;
      long long v8 = a3 + 4;
      int16x8_t v9 = *(int16x8_t *)v8;
      _OWORD *v8 = 0uLL;
      v8 += 4;
      int16x8_t v10 = *(int16x8_t *)v8;
      _OWORD *v8 = 0uLL;
      v8 += 4;
      int16x8_t v11 = *(int16x8_t *)v8;
      _OWORD *v8 = 0uLL;
      v8 += 4;
      int16x8_t v12 = *(int16x8_t *)v8;
      _OWORD *v8 = 0uLL;
      v8 += 4;
      int16x8_t v13 = *(int16x8_t *)v8;
      _OWORD *v8 = 0uLL;
      v8 += 4;
      int16x8_t v14 = *(int16x8_t *)v8;
      _OWORD *v8 = 0uLL;
      v8 += 4;
      int16x8_t v15 = *(int16x8_t *)v8;
      _OWORD *v8 = 0uLL;
      a3 = v8 + 4;
      int32x4_t v16 = (int32x4_t)vtrn1q_s16(v7, v9);
      int32x4_t v17 = (int32x4_t)vtrn2q_s16(v7, v9);
      int32x4_t v18 = (int32x4_t)vtrn1q_s16(v10, v11);
      int32x4_t v19 = (int32x4_t)vtrn2q_s16(v10, v11);
      int32x4_t v20 = (int32x4_t)vtrn1q_s16(v12, v13);
      int32x4_t v21 = (int32x4_t)vtrn2q_s16(v12, v13);
      int32x4_t v22 = (int32x4_t)vtrn1q_s16(v14, v15);
      int32x4_t v23 = (int32x4_t)vtrn2q_s16(v14, v15);
      int64x2_t v24 = (int64x2_t)vtrn1q_s32(v20, v22);
      int64x2_t v25 = (int64x2_t)vtrn2q_s32(v20, v22);
      int64x2_t v26 = (int64x2_t)vtrn1q_s32(v21, v23);
      int64x2_t v27 = (int64x2_t)vtrn2q_s32(v21, v23);
      int64x2_t v28 = (int64x2_t)vtrn1q_s32(v17, v19);
      int64x2_t v29 = (int64x2_t)vtrn2q_s32(v17, v19);
      int64x2_t v30 = (int64x2_t)vtrn1q_s32(v16, v18);
      int64x2_t v31 = (int64x2_t)vtrn2q_s32(v16, v18);
      int16x8_t v32 = (int16x8_t)vtrn1q_s64(v30, v24);
      int16x8_t v33 = (int16x8_t)vtrn2q_s64(v30, v24);
      int16x8_t v34 = (int16x8_t)vtrn1q_s64(v28, v26);
      int16x8_t v35 = (int16x8_t)vtrn2q_s64(v28, v26);
      int16x8_t v36 = (int16x8_t)vtrn2q_s64(v31, v25);
      int16x8_t v37 = (int16x8_t)vtrn1q_s64(v31, v25);
      int16x8_t v38 = (int16x8_t)vtrn1q_s64(v29, v27);
      int16x8_t v39 = (int16x8_t)vtrn2q_s64(v29, v27);
      int64x2_t v40 = (uint64_t *)((char *)result + a2 + a2);
      v31.i64[0] = *v40;
      int16x8_t v41 = (uint64_t *)((char *)v40 + a2);
      v29.i64[0] = *v41;
      int64x2_t v42 = (uint8x8_t *)((char *)v41 + a2);
      uint8x8_t v44 = *v42;
      int16x8_t v43 = (uint8x8_t *)((char *)v42 + a2);
      int8x8_t v45 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v34, 2uLL), *(uint8x8_t *)((char *)result + a2)));
      *uint64_t result = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v32, 2uLL), *result));
      int16x8_t v46 = (int8x8_t *)((char *)result + a2);
      uint8x8_t v48 = *v43;
      int16x8_t v47 = (uint8x8_t *)((char *)v43 + a2);
      int8x8_t *v46 = v45;
      int16x8_t v49 = (int8x8_t *)((char *)v46 + a2);
      uint8x8_t v50 = *v47;
      *int16x8_t v49 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v37, 2uLL), *(uint8x8_t *)v31.i8));
      int16x8_t v51 = (int8x8_t *)((char *)v49 + a2);
      uint8x8_t v52 = *(uint8x8_t *)((char *)v47 + a2);
      *int16x8_t v51 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v38, 2uLL), *(uint8x8_t *)v29.i8));
      int16x8_t v53 = (int8x8_t *)((char *)v51 + a2);
      *int16x8_t v53 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v33, 2uLL), v44));
      int16x8_t v54 = (int8x8_t *)((char *)v53 + a2);
      *int16x8_t v54 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v35, 2uLL), v48));
      uint8x8_t v55 = (int8x8_t *)((char *)v54 + a2);
      *uint8x8_t v55 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v36, 2uLL), v50));
      int32x4_t v56 = (int8x8_t *)((char *)v55 + a2);
      *int32x4_t v56 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v39, 2uLL), v52));
      int v57 = (unsigned __int16)*v6++;
      uint64_t result = (uint8x8_t *)((char *)&v56[1] + a2 + -8 * a2);
    }
    while (a4 >= v57);
    int v58 = (unsigned __int16)*v4++;
    if (a4 < v58) {
      break;
    }
    uint64_t result = (uint8x8_t *)((char *)&result[a2] - v5);
    a3 = &a3[-4 * v5 + 1];
  }
  return result;
}

uint8x8_t *sub_224A7E13C(uint8x8_t *result, uint64_t a2, _OWORD *a3, int a4)
{
  int16x4_t v4 = vdup_n_s16(0x5A80u);
  v4.i16[1] = 27152;
  uint64_t v5 = &word_2646ED108;
  while (1)
  {
    LODWORD(v6) = 0;
    int16x8_t v7 = &word_2646ED110;
    do
    {
      uint64_t v6 = (v6 + 8);
      int16x8_t v8 = *(int16x8_t *)a3;
      *a3 = 0uLL;
      int16x8_t v9 = a3 + 4;
      int16x8_t v10 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      v9 += 4;
      int16x8_t v11 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      v9 += 4;
      int16x8_t v12 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      v9 += 4;
      int16x8_t v13 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      v9 += 4;
      int16x8_t v14 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      v9 += 4;
      int16x8_t v15 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      v9 += 4;
      int16x8_t v16 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      a3 = v9 + 4;
      int16x8_t v17 = vqrdmulhq_lane_s16(v8, v4, 0);
      int16x8_t v18 = vqrdmulhq_lane_s16(v10, v4, 0);
      int16x8_t v19 = vqrdmulhq_lane_s16(v11, v4, 0);
      int16x8_t v20 = vqrdmulhq_lane_s16(v12, v4, 0);
      int16x8_t v21 = vqrdmulhq_lane_s16(v13, v4, 0);
      int16x8_t v22 = vqrdmulhq_lane_s16(v14, v4, 0);
      int16x8_t v23 = vqrdmulhq_lane_s16(v15, v4, 0);
      int16x8_t v24 = vqrdmulhq_lane_s16(v16, v4, 0);
      int16x8_t v25 = vqaddq_s16(v17, vrshrq_n_s16(vqrdmulhq_lane_s16(v17, v4, 1), 1uLL));
      int16x8_t v26 = vqaddq_s16(v18, vrshrq_n_s16(vqrdmulhq_lane_s16(v18, v4, 1), 1uLL));
      int16x8_t v27 = vqaddq_s16(v19, vrshrq_n_s16(vqrdmulhq_lane_s16(v19, v4, 1), 1uLL));
      int16x8_t v28 = vqaddq_s16(v20, vrshrq_n_s16(vqrdmulhq_lane_s16(v20, v4, 1), 1uLL));
      int16x8_t v29 = vqaddq_s16(v21, vrshrq_n_s16(vqrdmulhq_lane_s16(v21, v4, 1), 1uLL));
      int16x8_t v30 = vqaddq_s16(v22, vrshrq_n_s16(vqrdmulhq_lane_s16(v22, v4, 1), 1uLL));
      int16x8_t v31 = vqaddq_s16(v23, vrshrq_n_s16(vqrdmulhq_lane_s16(v23, v4, 1), 1uLL));
      int16x8_t v32 = vqaddq_s16(v24, vrshrq_n_s16(vqrdmulhq_lane_s16(v24, v4, 1), 1uLL));
      int32x4_t v33 = (int32x4_t)vtrn1q_s16(v25, v26);
      int32x4_t v34 = (int32x4_t)vtrn2q_s16(v25, v26);
      int32x4_t v35 = (int32x4_t)vtrn1q_s16(v27, v28);
      int32x4_t v36 = (int32x4_t)vtrn2q_s16(v27, v28);
      int32x4_t v37 = (int32x4_t)vtrn1q_s16(v29, v30);
      int32x4_t v38 = (int32x4_t)vtrn2q_s16(v29, v30);
      int32x4_t v39 = (int32x4_t)vtrn1q_s16(v31, v32);
      int32x4_t v40 = (int32x4_t)vtrn2q_s16(v31, v32);
      int64x2_t v41 = (int64x2_t)vtrn1q_s32(v37, v39);
      int64x2_t v42 = (int64x2_t)vtrn2q_s32(v37, v39);
      int64x2_t v43 = (int64x2_t)vtrn1q_s32(v38, v40);
      int64x2_t v44 = (int64x2_t)vtrn2q_s32(v38, v40);
      int64x2_t v45 = (int64x2_t)vtrn1q_s32(v34, v36);
      int64x2_t v46 = (int64x2_t)vtrn2q_s32(v34, v36);
      int64x2_t v47 = (int64x2_t)vtrn1q_s32(v33, v35);
      int64x2_t v48 = (int64x2_t)vtrn2q_s32(v33, v35);
      int16x8_t v49 = (int16x8_t)vtrn1q_s64(v47, v41);
      int16x8_t v50 = (int16x8_t)vtrn2q_s64(v47, v41);
      int16x8_t v51 = (int16x8_t)vtrn1q_s64(v45, v43);
      int16x8_t v52 = (int16x8_t)vtrn2q_s64(v45, v43);
      int16x8_t v53 = (int16x8_t)vtrn2q_s64(v48, v42);
      int16x8_t v54 = (int16x8_t)vtrn1q_s64(v48, v42);
      int16x8_t v55 = (int16x8_t)vtrn1q_s64(v46, v44);
      int16x8_t v56 = (int16x8_t)vtrn2q_s64(v46, v44);
      int v57 = (uint64_t *)((char *)result + a2 + a2);
      v48.i64[0] = *v57;
      int v58 = (uint64_t *)((char *)v57 + a2);
      v46.i64[0] = *v58;
      int32x4_t v59 = (uint8x8_t *)((char *)v58 + a2);
      uint8x8_t v61 = *v59;
      int16x8_t v60 = (uint8x8_t *)((char *)v59 + a2);
      int8x8_t v62 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v51, 2uLL), *(uint8x8_t *)((char *)result + a2)));
      *uint64_t result = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v49, 2uLL), *result));
      int32x4_t v63 = (int8x8_t *)((char *)result + a2);
      uint8x8_t v65 = *v60;
      int16x8_t v64 = (uint8x8_t *)((char *)v60 + a2);
      *int32x4_t v63 = v62;
      uint8x8_t v66 = (int8x8_t *)((char *)v63 + a2);
      uint8x8_t v67 = *v64;
      *uint8x8_t v66 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v54, 2uLL), *(uint8x8_t *)v48.i8));
      int64x2_t v68 = (int8x8_t *)((char *)v66 + a2);
      uint8x8_t v69 = *(uint8x8_t *)((char *)v64 + a2);
      *int64x2_t v68 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v55, 2uLL), *(uint8x8_t *)v46.i8));
      int64x2_t v70 = (int8x8_t *)((char *)v68 + a2);
      int8x8_t *v70 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v50, 2uLL), v61));
      uint8x8_t v71 = (int8x8_t *)((char *)v70 + a2);
      *uint8x8_t v71 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v52, 2uLL), v65));
      int16x8_t v72 = (int8x8_t *)((char *)v71 + a2);
      int8x8_t *v72 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v53, 2uLL), v67));
      int16x8_t v73 = (int8x8_t *)((char *)v72 + a2);
      *int16x8_t v73 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v56, 2uLL), v69));
      int v74 = (unsigned __int16)*v7++;
      uint64_t result = (uint8x8_t *)((char *)&v73[1] + a2 + -8 * a2);
    }
    while (a4 >= v74);
    int v75 = (unsigned __int16)*v5++;
    if (a4 < v75) {
      break;
    }
    uint64_t result = (uint8x8_t *)((char *)&result[a2] - v6);
    a3 = &a3[-4 * v6 + 1];
  }
  return result;
}

uint8x8_t *sub_224A7E368(uint8x8_t *result, uint64_t a2, _OWORD *a3, int a4)
{
  int16x4_t v4 = vdup_n_s16(0x5A80u);
  v4.i16[1] = 27152;
  uint64_t v5 = &word_2646ED110;
  while (1)
  {
    LODWORD(v6) = 0;
    int16x8_t v7 = &word_2646ED108;
    do
    {
      uint64_t v6 = (v6 + 8);
      int16x8_t v8 = *(int16x8_t *)a3;
      *a3 = 0uLL;
      int16x8_t v9 = a3 + 2;
      int16x8_t v10 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      v9 += 2;
      int16x8_t v11 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      v9 += 2;
      int16x8_t v12 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      v9 += 2;
      int16x8_t v13 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      v9 += 2;
      int16x8_t v14 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      v9 += 2;
      int16x8_t v15 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      v9 += 2;
      int16x8_t v16 = *(int16x8_t *)v9;
      _OWORD *v9 = 0uLL;
      a3 = v9 + 2;
      int16x8_t v17 = vqshlq_n_s16(vqrdmulhq_lane_s16(v8, v4, 0), 1uLL);
      int16x8_t v18 = vqshlq_n_s16(vqrdmulhq_lane_s16(v10, v4, 0), 1uLL);
      int16x8_t v19 = vqshlq_n_s16(vqrdmulhq_lane_s16(v11, v4, 0), 1uLL);
      int16x8_t v20 = vqshlq_n_s16(vqrdmulhq_lane_s16(v12, v4, 0), 1uLL);
      int16x8_t v21 = vqshlq_n_s16(vqrdmulhq_lane_s16(v13, v4, 0), 1uLL);
      int16x8_t v22 = vqshlq_n_s16(vqrdmulhq_lane_s16(v14, v4, 0), 1uLL);
      int16x8_t v23 = vqshlq_n_s16(vqrdmulhq_lane_s16(v15, v4, 0), 1uLL);
      int16x8_t v24 = vqshlq_n_s16(vqrdmulhq_lane_s16(v16, v4, 0), 1uLL);
      int16x8_t v25 = vqaddq_s16(vqaddq_s16(v17, v17), vqrdmulhq_lane_s16(v17, v4, 1));
      int16x8_t v26 = vqaddq_s16(vqaddq_s16(v18, v18), vqrdmulhq_lane_s16(v18, v4, 1));
      int16x8_t v27 = vqaddq_s16(vqaddq_s16(v19, v19), vqrdmulhq_lane_s16(v19, v4, 1));
      int16x8_t v28 = vqaddq_s16(vqaddq_s16(v20, v20), vqrdmulhq_lane_s16(v20, v4, 1));
      int16x8_t v29 = vqaddq_s16(vqaddq_s16(v21, v21), vqrdmulhq_lane_s16(v21, v4, 1));
      int16x8_t v30 = vqaddq_s16(vqaddq_s16(v22, v22), vqrdmulhq_lane_s16(v22, v4, 1));
      int16x8_t v31 = vqaddq_s16(vqaddq_s16(v23, v23), vqrdmulhq_lane_s16(v23, v4, 1));
      int16x8_t v32 = vqaddq_s16(vqaddq_s16(v24, v24), vqrdmulhq_lane_s16(v24, v4, 1));
      int32x4_t v33 = (int32x4_t)vtrn1q_s16(v25, v26);
      int32x4_t v34 = (int32x4_t)vtrn2q_s16(v25, v26);
      int32x4_t v35 = (int32x4_t)vtrn1q_s16(v27, v28);
      int32x4_t v36 = (int32x4_t)vtrn2q_s16(v27, v28);
      int32x4_t v37 = (int32x4_t)vtrn1q_s16(v29, v30);
      int32x4_t v38 = (int32x4_t)vtrn2q_s16(v29, v30);
      int32x4_t v39 = (int32x4_t)vtrn1q_s16(v31, v32);
      int32x4_t v40 = (int32x4_t)vtrn2q_s16(v31, v32);
      int64x2_t v41 = (int64x2_t)vtrn1q_s32(v37, v39);
      int64x2_t v42 = (int64x2_t)vtrn2q_s32(v37, v39);
      int64x2_t v43 = (int64x2_t)vtrn1q_s32(v38, v40);
      int64x2_t v44 = (int64x2_t)vtrn2q_s32(v38, v40);
      int64x2_t v45 = (int64x2_t)vtrn1q_s32(v34, v36);
      int64x2_t v46 = (int64x2_t)vtrn2q_s32(v34, v36);
      int64x2_t v47 = (int64x2_t)vtrn1q_s32(v33, v35);
      int64x2_t v48 = (int64x2_t)vtrn2q_s32(v33, v35);
      int16x8_t v49 = (int16x8_t)vtrn1q_s64(v47, v41);
      int16x8_t v50 = (int16x8_t)vtrn2q_s64(v47, v41);
      int16x8_t v51 = (int16x8_t)vtrn1q_s64(v45, v43);
      int16x8_t v52 = (int16x8_t)vtrn2q_s64(v45, v43);
      int16x8_t v53 = (int16x8_t)vtrn2q_s64(v48, v42);
      int16x8_t v54 = (int16x8_t)vtrn1q_s64(v48, v42);
      int16x8_t v55 = (int16x8_t)vtrn1q_s64(v46, v44);
      int16x8_t v56 = (int16x8_t)vtrn2q_s64(v46, v44);
      int v57 = (uint64_t *)((char *)result + a2 + a2);
      v48.i64[0] = *v57;
      int v58 = (uint64_t *)((char *)v57 + a2);
      v46.i64[0] = *v58;
      int32x4_t v59 = (uint8x8_t *)((char *)v58 + a2);
      uint8x8_t v61 = *v59;
      int16x8_t v60 = (uint8x8_t *)((char *)v59 + a2);
      int8x8_t v62 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v51, 4uLL), *(uint8x8_t *)((char *)result + a2)));
      *uint64_t result = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v49, 4uLL), *result));
      int32x4_t v63 = (int8x8_t *)((char *)result + a2);
      uint8x8_t v65 = *v60;
      int16x8_t v64 = (uint8x8_t *)((char *)v60 + a2);
      *int32x4_t v63 = v62;
      uint8x8_t v66 = (int8x8_t *)((char *)v63 + a2);
      uint8x8_t v67 = *v64;
      *uint8x8_t v66 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v54, 4uLL), *(uint8x8_t *)v48.i8));
      int64x2_t v68 = (int8x8_t *)((char *)v66 + a2);
      uint8x8_t v69 = *(uint8x8_t *)((char *)v64 + a2);
      *int64x2_t v68 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v55, 4uLL), *(uint8x8_t *)v46.i8));
      int64x2_t v70 = (int8x8_t *)((char *)v68 + a2);
      int8x8_t *v70 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v50, 4uLL), v61));
      uint8x8_t v71 = (int8x8_t *)((char *)v70 + a2);
      *uint8x8_t v71 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v52, 4uLL), v65));
      int16x8_t v72 = (int8x8_t *)((char *)v71 + a2);
      int8x8_t *v72 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v53, 4uLL), v67));
      int16x8_t v73 = (int8x8_t *)((char *)v72 + a2);
      *int16x8_t v73 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v56, 4uLL), v69));
      int v74 = (unsigned __int16)*v7++;
      uint64_t result = (uint8x8_t *)((char *)&v73[1] + a2 + -8 * a2);
    }
    while (a4 >= v74);
    int v75 = (unsigned __int16)*v5++;
    if (a4 < v75) {
      break;
    }
    uint64_t result = (uint8x8_t *)((char *)&result[a2] - v6);
    a3 = &a3[-2 * v6 + 1];
  }
  return result;
}

uint8x8_t *sub_224A7E5B4(uint8x8_t *result, uint64_t a2, int16x8_t *a3, int a4)
{
  int16x4_t v4 = &word_2646ED114;
  while (1)
  {
    int v5 = (unsigned __int16)*v4++;
    int16x8_t v6 = *a3;
    *a3 = 0uLL;
    int16x8_t v7 = a3 + 4;
    int16x8_t v8 = *v7;
    int16x8_t *v7 = 0uLL;
    v7 += 4;
    int16x8_t v9 = *v7;
    int16x8_t *v7 = 0uLL;
    v7 += 4;
    int16x8_t v10 = *v7;
    int16x8_t *v7 = 0uLL;
    v7 += 4;
    int16x8_t v11 = *v7;
    int16x8_t *v7 = 0uLL;
    v7 += 4;
    int16x8_t v12 = *v7;
    int16x8_t *v7 = 0uLL;
    v7 += 4;
    int16x8_t v13 = *v7;
    int16x8_t *v7 = 0uLL;
    v7 += 4;
    int16x8_t v14 = *v7;
    int16x8_t *v7 = 0uLL;
    int16x8_t v15 = v7 + 4;
    int16x8_t v16 = vrshrq_n_s16(v6, 1uLL);
    int16x8_t v17 = vrshrq_n_s16(v8, 1uLL);
    int16x8_t v18 = vrshrq_n_s16(v9, 1uLL);
    int16x8_t v19 = vrshrq_n_s16(v10, 1uLL);
    int16x8_t v20 = vrshrq_n_s16(v11, 1uLL);
    int16x8_t v21 = vrshrq_n_s16(v12, 1uLL);
    int16x8_t v22 = vrshrq_n_s16(v13, 1uLL);
    int16x8_t v23 = vrshrq_n_s16(v14, 1uLL);
    int32x4_t v24 = (int32x4_t)vtrn1q_s16(v16, v17);
    int32x4_t v25 = (int32x4_t)vtrn2q_s16(v16, v17);
    int32x4_t v26 = (int32x4_t)vtrn1q_s16(v18, v19);
    int32x4_t v27 = (int32x4_t)vtrn2q_s16(v18, v19);
    int32x4_t v28 = (int32x4_t)vtrn1q_s16(v20, v21);
    int32x4_t v29 = (int32x4_t)vtrn2q_s16(v20, v21);
    int32x4_t v30 = (int32x4_t)vtrn1q_s16(v22, v23);
    int32x4_t v31 = (int32x4_t)vtrn2q_s16(v22, v23);
    int64x2_t v32 = (int64x2_t)vtrn1q_s32(v28, v30);
    int64x2_t v33 = (int64x2_t)vtrn2q_s32(v28, v30);
    int64x2_t v34 = (int64x2_t)vtrn1q_s32(v29, v31);
    int64x2_t v35 = (int64x2_t)vtrn2q_s32(v29, v31);
    int64x2_t v36 = (int64x2_t)vtrn1q_s32(v25, v27);
    int64x2_t v37 = (int64x2_t)vtrn2q_s32(v25, v27);
    int64x2_t v38 = (int64x2_t)vtrn1q_s32(v24, v26);
    int64x2_t v39 = (int64x2_t)vtrn2q_s32(v24, v26);
    int16x8_t v40 = (int16x8_t)vtrn1q_s64(v38, v32);
    int16x8_t v41 = (int16x8_t)vtrn2q_s64(v38, v32);
    int16x8_t v42 = (int16x8_t)vtrn1q_s64(v36, v34);
    int16x8_t v43 = (int16x8_t)vtrn2q_s64(v36, v34);
    int16x8_t v44 = (int16x8_t)vtrn2q_s64(v39, v33);
    int16x8_t v45 = (int16x8_t)vtrn1q_s64(v39, v33);
    int16x8_t v46 = (int16x8_t)vtrn1q_s64(v37, v35);
    int16x8_t v47 = (int16x8_t)vtrn2q_s64(v37, v35);
    int64x2_t v48 = (uint64_t *)((char *)result + a2 + a2);
    v39.i64[0] = *v48;
    int16x8_t v49 = (uint64_t *)((char *)v48 + a2);
    v37.i64[0] = *v49;
    int16x8_t v50 = (uint8x8_t *)((char *)v49 + a2);
    uint8x8_t v52 = *v50;
    int16x8_t v51 = (uint8x8_t *)((char *)v50 + a2);
    int8x8_t v53 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v42, 2uLL), *(uint8x8_t *)((char *)result + a2)));
    *uint64_t result = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v40, 2uLL), *result));
    int16x8_t v54 = (int8x8_t *)((char *)result + a2);
    uint8x8_t v56 = *v51;
    int16x8_t v55 = (uint8x8_t *)((char *)v51 + a2);
    *int16x8_t v54 = v53;
    int v57 = (int8x8_t *)((char *)v54 + a2);
    uint8x8_t v58 = *v55;
    *int v57 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v45, 2uLL), *(uint8x8_t *)v39.i8));
    int32x4_t v59 = (int8x8_t *)((char *)v57 + a2);
    uint8x8_t v60 = *(uint8x8_t *)((char *)v55 + a2);
    *int32x4_t v59 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v46, 2uLL), *(uint8x8_t *)v37.i8));
    uint8x8_t v61 = (int8x8_t *)((char *)v59 + a2);
    int8x8_t *v61 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v41, 2uLL), v52));
    int8x8_t v62 = (int8x8_t *)((char *)v61 + a2);
    *int8x8_t v62 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v43, 2uLL), v56));
    int32x4_t v63 = (int8x8_t *)((char *)v62 + a2);
    *int32x4_t v63 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v44, 2uLL), v58));
    int16x8_t v64 = (int8x8_t *)((char *)v63 + a2);
    *int16x8_t v64 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v47, 2uLL), v60));
    uint64_t result = (uint8x8_t *)((char *)v64 + a2);
    if (a4 < v5) {
      break;
    }
    a3 = v15 - 31;
  }
  return result;
}

char *sub_224A7E744(uint8x8_t *a1, uint64_t a2, _OWORD *a3, int a4)
{
  int16x4_t v4 = &word_2646ED114;
  while (1)
  {
    int v5 = (unsigned __int16)*v4++;
    int16x8_t v6 = *(int16x8_t *)a3;
    *a3 = 0uLL;
    int16x8_t v7 = a3 + 1;
    int16x8_t v8 = *(int16x8_t *)v7;
    *v7++ = 0uLL;
    int16x8_t v9 = *(int16x8_t *)v7;
    *v7++ = 0uLL;
    int16x8_t v10 = *(int16x8_t *)v7;
    *v7++ = 0uLL;
    int16x8_t v11 = *(int16x8_t *)v7;
    *v7++ = 0uLL;
    int16x8_t v12 = *(int16x8_t *)v7;
    *v7++ = 0uLL;
    int16x8_t v13 = *(int16x8_t *)v7;
    *v7++ = 0uLL;
    int16x8_t v14 = *(int16x8_t *)v7;
    _OWORD *v7 = 0uLL;
    a3 = v7 + 1;
    int32x4_t v15 = (int32x4_t)vtrn1q_s16(v6, v8);
    int32x4_t v16 = (int32x4_t)vtrn2q_s16(v6, v8);
    int32x4_t v17 = (int32x4_t)vtrn1q_s16(v9, v10);
    int32x4_t v18 = (int32x4_t)vtrn2q_s16(v9, v10);
    int32x4_t v19 = (int32x4_t)vtrn1q_s16(v11, v12);
    int32x4_t v20 = (int32x4_t)vtrn2q_s16(v11, v12);
    int32x4_t v21 = (int32x4_t)vtrn1q_s16(v13, v14);
    int32x4_t v22 = (int32x4_t)vtrn2q_s16(v13, v14);
    int64x2_t v23 = (int64x2_t)vtrn1q_s32(v19, v21);
    int64x2_t v24 = (int64x2_t)vtrn2q_s32(v19, v21);
    int64x2_t v25 = (int64x2_t)vtrn1q_s32(v20, v22);
    int64x2_t v26 = (int64x2_t)vtrn2q_s32(v20, v22);
    int64x2_t v27 = (int64x2_t)vtrn1q_s32(v16, v18);
    int64x2_t v28 = (int64x2_t)vtrn2q_s32(v16, v18);
    int64x2_t v29 = (int64x2_t)vtrn1q_s32(v15, v17);
    int64x2_t v30 = (int64x2_t)vtrn2q_s32(v15, v17);
    int16x8_t v31 = (int16x8_t)vtrn1q_s64(v29, v23);
    int16x8_t v32 = (int16x8_t)vtrn2q_s64(v29, v23);
    int16x8_t v33 = (int16x8_t)vtrn1q_s64(v27, v25);
    int16x8_t v34 = (int16x8_t)vtrn2q_s64(v27, v25);
    int16x8_t v35 = (int16x8_t)vtrn2q_s64(v30, v24);
    int16x8_t v36 = (int16x8_t)vtrn1q_s64(v30, v24);
    int16x8_t v37 = (int16x8_t)vtrn1q_s64(v28, v26);
    int16x8_t v38 = (int16x8_t)vtrn2q_s64(v28, v26);
    int64x2_t v39 = (uint64_t *)((char *)a1 + a2 + a2);
    v30.i64[0] = *v39;
    int16x8_t v40 = (uint64_t *)((char *)v39 + a2);
    v28.i64[0] = *v40;
    int16x8_t v41 = (uint8x8_t *)((char *)v40 + a2);
    uint8x8_t v43 = *v41;
    int16x8_t v42 = (uint8x8_t *)((char *)v41 + a2);
    int8x8_t v44 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v33, 3uLL), *(uint8x8_t *)((char *)a1 + a2)));
    *a1 = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v31, 3uLL), *a1));
    int16x8_t v45 = (int8x8_t *)((char *)a1 + a2);
    uint8x8_t v47 = *v42;
    int16x8_t v46 = (uint8x8_t *)((char *)v42 + a2);
    *int16x8_t v45 = v44;
    int64x2_t v48 = (int8x8_t *)((char *)v45 + a2);
    uint8x8_t v49 = *v46;
    int8x8_t *v48 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v36, 3uLL), *(uint8x8_t *)v30.i8));
    int16x8_t v50 = (int8x8_t *)((char *)v48 + a2);
    uint8x8_t v51 = *(uint8x8_t *)((char *)v46 + a2);
    *int16x8_t v50 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v37, 3uLL), *(uint8x8_t *)v28.i8));
    uint8x8_t v52 = (int8x8_t *)((char *)v50 + a2);
    *uint8x8_t v52 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v32, 3uLL), v43));
    int8x8_t v53 = (int8x8_t *)((char *)v52 + a2);
    *int8x8_t v53 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v34, 3uLL), v47));
    int16x8_t v54 = (int8x8_t *)((char *)v53 + a2);
    *int16x8_t v54 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v35, 3uLL), v49));
    int16x8_t v55 = (int8x8_t *)((char *)v54 + a2);
    *int16x8_t v55 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v38, 3uLL), v51));
    uint64_t result = (char *)v55 + a2;
    if (a4 < v5) {
      break;
    }
    a1 = (uint8x8_t *)&result[-8 * a2 + 8];
  }
  return result;
}

void sub_224A7E8B4(uint8x16_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A7D0D4(a3, 64);
    int v5 = &v17;
    int v6 = 24;
    if (v7 < v8
      || (sub_224A7D0D4((_OWORD *)(v4 + 16), 64), int v5 = &v18, v6 = 16, v10 < v11)
      || (sub_224A7D0D4((_OWORD *)(v9 + 32), 64), int v5 = &v19, v6 = 8, v13 < v14))
    {
      do
      {
        BOOL v15 = __OFSUB__(v6, 4);
        v6 -= 4;
        *(_OWORD *)int v5 = 0uLL;
        *((_OWORD *)v5 + 1) = 0uLL;
        *((_OWORD *)v5 + 2) = 0uLL;
        *((_OWORD *)v5 + 3) = 0uLL;
        int32x4_t v16 = v5 + 64;
        _OWORD *v16 = 0uLL;
        v16[1] = 0uLL;
        v16[2] = 0uLL;
        v16[3] = 0uLL;
        v16 += 4;
        _OWORD *v16 = 0uLL;
        v16[1] = 0uLL;
        v16[2] = 0uLL;
        v16[3] = 0uLL;
        v16 += 4;
        _OWORD *v16 = 0uLL;
        v16[1] = 0uLL;
        v16[2] = 0uLL;
        v16[3] = 0uLL;
        int v5 = (char *)(v16 + 4);
      }
      while (!((v6 < 0) ^ v15 | (v6 == 0)));
    }
    else
    {
      sub_224A7D0D4((_OWORD *)(v12 + 48), 64);
    }
    sub_224A7DB2C();
    sub_224A7DB2C();
    sub_224A7DB2C();
    sub_224A7DB2C();
  }
  else
  {
    vld1q_dup_s16(a3);
    *a3 = 0;
    sub_224A78558(a1, a2, (uint64_t)a3, a4, 32);
  }
}

void sub_224A7E9D4(uint8x16_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A7B0F4((void (*)(void))sub_224A79AA0, a3, 64);
    int v6 = &v20;
    int v7 = 24;
    if (v8 < v9
      || (sub_224A7B0F4(v5, (_OWORD *)(v4 + 16), 64), v6 = &v21, int v7 = 16, v12 < v13)
      || (sub_224A7B0F4(v11, (_OWORD *)(v10 + 32), 64), v6 = &v22, int v7 = 8, v16 < v17))
    {
      do
      {
        BOOL v18 = __OFSUB__(v7, 8);
        v7 -= 8;
        *(_OWORD *)int v6 = 0uLL;
        *((_OWORD *)v6 + 1) = 0uLL;
        *((_OWORD *)v6 + 2) = 0uLL;
        *((_OWORD *)v6 + 3) = 0uLL;
        char v19 = v6 + 64;
        *char v19 = 0uLL;
        v19[1] = 0uLL;
        v19[2] = 0uLL;
        v19[3] = 0uLL;
        v19 += 4;
        *char v19 = 0uLL;
        v19[1] = 0uLL;
        v19[2] = 0uLL;
        v19[3] = 0uLL;
        v19 += 4;
        *char v19 = 0uLL;
        v19[1] = 0uLL;
        v19[2] = 0uLL;
        v19[3] = 0uLL;
        int v6 = (char *)(v19 + 4);
      }
      while (!((v7 < 0) ^ v18 | (v7 == 0)));
    }
    else
    {
      sub_224A7B0F4(v15, (_OWORD *)(v14 + 48), 64);
    }
    sub_224A7DB2C();
    sub_224A7DB2C();
  }
  else
  {
    vld1q_dup_s16(a3);
    *a3 = 0;
    sub_224A784E8(a1, a2, (uint64_t)a3, a4, 32);
  }
}

uint8x16_t *sub_224A7EADC(uint8x16_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A7D5BC(a3, 32);
    int v11 = &v33;
    int v12 = 8;
    if ((int)v8 < 36)
    {
      do
      {
        BOOL v13 = __OFSUB__(v12, 4);
        v12 -= 4;
        *(_OWORD *)int v11 = 0uLL;
        *((_OWORD *)v11 + 1) = 0uLL;
        *((_OWORD *)v11 + 2) = 0uLL;
        *((_OWORD *)v11 + 3) = 0uLL;
        uint64_t v14 = v11 + 64;
        *uint64_t v14 = 0uLL;
        v14[1] = 0uLL;
        v14[2] = 0uLL;
        v14[3] = 0uLL;
        v14 += 4;
        *uint64_t v14 = 0uLL;
        v14[1] = 0uLL;
        v14[2] = 0uLL;
        v14[3] = 0uLL;
        v14 += 4;
        *uint64_t v14 = 0uLL;
        v14[1] = 0uLL;
        v14[2] = 0uLL;
        v14[3] = 0uLL;
        int v11 = (char *)(v14 + 4);
      }
      while (!((v12 < 0) ^ v13 | (v12 == 0)));
    }
    else
    {
      sub_224A7D5BC((_OWORD *)(v7 + 16), 32);
    }
    uint64_t v15 = sub_224A7B530(v5, v6, v7, v8, v9, v10);
    uint64_t v21 = sub_224A7B530(v15, v16, v17, v18, v19, v20);
    uint64_t v27 = sub_224A7B530(v21, v22, v23, v24, v25, v26);
    return (uint8x16_t *)sub_224A7B530(v27, v28, v29, v30, v31, v32);
  }
  else
  {
    vld1q_dup_s16(a3);
    *a3 = 0;
    return sub_224A78558(a1, a2, (uint64_t)a3, a4, 16);
  }
}

void sub_224A7EBAC(uint8x8_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4)
  {
    int64x2_t v4 = 0uLL;
    uint64_t v5 = 64;
    do
    {
      *(int64x2_t *)a3 = v4;
      uint64_t v6 = &a3[(unint64_t)v5 / 2];
      *(int64x2_t *)uint64_t v6 = v4;
      uint64_t v7 = &v6[(unint64_t)v5 / 2];
      *(int64x2_t *)uint64_t v7 = v4;
      uint64_t v8 = (int64x2_t *)&v7[(unint64_t)v5 / 2];
      int64x2_t *v8 = v4;
      uint64_t v9 = &v8[(unint64_t)v5 / 0x10];
      int64x2_t *v9 = v4;
      uint64_t v10 = &v9[(unint64_t)v5 / 0x10];
      int64x2_t *v10 = v4;
      int v11 = &v10[(unint64_t)v5 / 0x10];
      *int v11 = v4;
      v11[(unint64_t)v5 / 0x10] = v4;
      sub_224A78B80();
      int16x8_t v14 = vrshrq_n_s16(v13, 2uLL);
      int16x8_t v16 = vrshrq_n_s16(v15, 2uLL);
      int16x8_t v18 = vrshrq_n_s16(v17, 2uLL);
      int16x8_t v20 = vrshrq_n_s16(v19, 2uLL);
      int16x8_t v22 = vrshrq_n_s16(v21, 2uLL);
      int16x8_t v24 = vrshrq_n_s16(v23, 2uLL);
      int16x8_t v26 = vrshrq_n_s16(v25, 2uLL);
      int16x8_t v28 = vrshrq_n_s16(v27, 2uLL);
      int32x4_t v29 = (int32x4_t)vtrn1q_s16(v14, v16);
      int32x4_t v30 = (int32x4_t)vtrn2q_s16(v14, v16);
      int32x4_t v31 = (int32x4_t)vtrn1q_s16(v18, v20);
      int32x4_t v32 = (int32x4_t)vtrn2q_s16(v18, v20);
      int32x4_t v33 = (int32x4_t)vtrn1q_s16(v22, v24);
      int32x4_t v34 = (int32x4_t)vtrn2q_s16(v22, v24);
      int32x4_t v35 = (int32x4_t)vtrn1q_s16(v26, v28);
      int32x4_t v36 = (int32x4_t)vtrn2q_s16(v26, v28);
      int64x2_t v37 = (int64x2_t)vtrn1q_s32(v33, v35);
      int64x2_t v38 = (int64x2_t)vtrn2q_s32(v33, v35);
      int64x2_t v39 = (int64x2_t)vtrn1q_s32(v34, v36);
      int64x2_t v40 = (int64x2_t)vtrn2q_s32(v34, v36);
      int64x2_t v41 = (int64x2_t)vtrn1q_s32(v30, v32);
      int64x2_t v42 = (int64x2_t)vtrn2q_s32(v30, v32);
      int64x2_t v43 = (int64x2_t)vtrn1q_s32(v29, v31);
      int64x2_t v44 = (int64x2_t)vtrn2q_s32(v29, v31);
      *int16x8_t v45 = vtrn1q_s64(v43, v37);
      v45[1] = vtrn1q_s64(v41, v39);
      v45[2] = vtrn1q_s64(v44, v38);
      v45[3] = vtrn1q_s64(v42, v40);
      v45 += 4;
      *int16x8_t v45 = vtrn2q_s64(v43, v37);
      v45[1] = vtrn2q_s64(v41, v39);
      v45[2] = vtrn2q_s64(v44, v38);
      v45[3] = vtrn2q_s64(v42, v40);
      int16x8_t v46 = v45 + 4;
    }
    while (v47 >= v48);
    if (v12)
    {
      do
      {
        BOOL v49 = __OFSUB__(v12, 8);
        v12 -= 8;
        int64x2_t *v46 = v4;
        v46[1] = 0uLL;
        v46[2] = 0uLL;
        v46[3] = 0uLL;
        int16x8_t v50 = v46 + 4;
        *int16x8_t v50 = v4;
        v50[1] = 0uLL;
        v50[2] = 0uLL;
        v50[3] = 0uLL;
        int16x8_t v46 = v50 + 4;
      }
      while (!((v12 < 0) ^ v49 | (v12 == 0)));
    }
    sub_224A7DB2C();
  }
  else
  {
    vld1q_dup_s16(a3);
    *a3 = 0;
    sub_224A78498(a1, a2, (uint64_t)a3, a4, 32);
  }
}

void sub_224A7ED14(uint8x16_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A7D0D4(a3, 16);
    do
    {
      sub_224A78B80();
      uint64_t v7 = (uint8x8_t *)((char *)v5 + v4 + v4);
      uint8x8_t v10 = *v7;
      uint64_t v9 = (uint8x8_t *)((char *)v7 + v4);
      uint8x8_t v13 = *v9;
      int v12 = (uint8x8_t *)((char *)v9 + v4);
      uint8x8_t v16 = *v12;
      int16x8_t v15 = (uint8x8_t *)((char *)v12 + v4);
      int8x8_t v18 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v8, 4uLL), *(uint8x8_t *)((char *)v5 + v4)));
      uint8x8_t *v5 = (uint8x8_t)vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v6, 4uLL), *v5));
      int16x8_t v19 = (int8x8_t *)((char *)v5 + v4);
      uint8x8_t v21 = *v15;
      int16x8_t v20 = (uint8x8_t *)((char *)v15 + v4);
      *int16x8_t v19 = v18;
      int16x8_t v23 = (int8x8_t *)((char *)v19 + v4);
      uint8x8_t v24 = *v20;
      *int16x8_t v23 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v11, 4uLL), v10));
      int16x8_t v26 = (int8x8_t *)((char *)v23 + v4);
      uint8x8_t v27 = *(uint8x8_t *)((char *)v20 + v4);
      *int16x8_t v26 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v14, 4uLL), v13));
      int32x4_t v29 = (int8x8_t *)((char *)v26 + v4);
      *int32x4_t v29 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v17, 4uLL), v16));
      int32x4_t v30 = (int8x8_t *)((char *)v29 + v4);
      int8x8_t *v30 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v22, 4uLL), v21));
      int32x4_t v31 = (int8x8_t *)((char *)v30 + v4);
      *int32x4_t v31 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v25, 4uLL), v24));
      *(int8x8_t *)((char *)v31 + v4) = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(v28, 4uLL), v27));
    }
    while (v32 < 32);
  }
  else
  {
    vld1q_dup_s16(a3);
    *a3 = 0;
    sub_224A78558(a1, a2, (uint64_t)a3, a4, 8);
  }
}

__n128 sub_224A7EE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int16x8_t *a7)
{
  __n128 result = *(__n128 *)v7;
  long long v13 = *(_OWORD *)(v7 + 16);
  int16x8_t v14 = vqrdmulhq_lane_s16(v8, *(int16x4_t *)v7, 1);
  int16x8_t v15 = vqrdmulhq_lane_s16(v8, *(int16x4_t *)v7, 0);
  int16x8_t v16 = vqrdmulhq_lane_s16(v9, *(int16x4_t *)v7, 2);
  int16x8_t v17 = vqrdmulhq_lane_s16(v9, *(int16x4_t *)v7, 3);
  int16x8_t v18 = vqrdmulhq_laneq_s16(v10, *(int16x8_t *)v7, 5);
  int16x8_t v19 = vqrdmulhq_laneq_s16(v10, *(int16x8_t *)v7, 4);
  int16x8_t v20 = vqrdmulhq_laneq_s16(v11, *(int16x8_t *)v7, 6);
  int16x8_t v21 = vqrdmulhq_laneq_s16(v11, *(int16x8_t *)v7, 7);
  int16x8_t v22 = vqaddq_s16(v15, v17);
  int16x8_t v23 = vqsubq_s16(v15, v17);
  int16x8_t v24 = vqsubq_s16(v21, v19);
  int16x8_t v25 = vqaddq_s16(v21, v19);
  int16x8_t v26 = vqaddq_s16(v20, v18);
  int16x8_t v27 = vqsubq_s16(v20, v18);
  int16x8_t v28 = vqsubq_s16(v14, v16);
  int16x8_t v29 = vqaddq_s16(v14, v16);
  int32x4_t v30 = vmlsl_lane_s16(vmull_lane_s16(*(int16x4_t *)v27.i8, *(int16x4_t *)&v13, 1), *(int16x4_t *)v24.i8, *(int16x4_t *)&v13, 0);
  int32x4_t v31 = vmlsl_high_lane_s16(vmull_high_lane_s16(v27, *(int16x4_t *)&v13, 1), v24, *(int16x4_t *)&v13, 0);
  int16x8_t v32 = vqrshrn_high_n_s32(vqrshrn_n_s32(vnegq_s32(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v27.i8, *(int16x4_t *)&v13, 0), *(int16x4_t *)v24.i8, *(int16x4_t *)&v13, 1)), 0xCuLL), vnegq_s32(vmlal_high_lane_s16(vmull_high_lane_s16(v27, *(int16x4_t *)&v13, 0), v24, *(int16x4_t *)&v13, 1)), 0xCuLL);
  int32x4_t v33 = vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v28.i8, *(int16x4_t *)&v13, 0), *(int16x4_t *)v23.i8, *(int16x4_t *)&v13, 1);
  int32x4_t v34 = vmlal_high_lane_s16(vmull_high_lane_s16(v28, *(int16x4_t *)&v13, 0), v23, *(int16x4_t *)&v13, 1);
  int16x8_t v35 = vqrshrn_high_n_s32(vqrshrn_n_s32(v30, 0xCuLL), v31, 0xCuLL);
  int16x8_t v36 = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlsl_lane_s16(vmull_lane_s16(*(int16x4_t *)v28.i8, *(int16x4_t *)&v13, 1), *(int16x4_t *)v23.i8, *(int16x4_t *)&v13, 0), 0xCuLL), vmlsl_high_lane_s16(vmull_high_lane_s16(v28, *(int16x4_t *)&v13, 1), v23, *(int16x4_t *)&v13, 0), 0xCuLL);
  int16x8_t v37 = vqrshrn_high_n_s32(vqrshrn_n_s32(v33, 0xCuLL), v34, 0xCuLL);
  int16x8_t v38 = vqsubq_s16(v22, v25);
  int16x8_t v39 = vqsubq_s16(v36, v32);
  int16x8_t v40 = vqsubq_s16(v29, v26);
  int16x8_t v41 = vqsubq_s16(v37, v35);
  *a7 = vqaddq_s16(v22, v25);
  a7[1] = vqaddq_s16(v36, v32);
  a7[2] = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlsl_lane_s16(vmull_lane_s16(*(int16x4_t *)v41.i8, *(int16x4_t *)&v13, 3), *(int16x4_t *)v39.i8, *(int16x4_t *)&v13, 2), 0xCuLL), vmlsl_high_lane_s16(vmull_high_lane_s16(v41, *(int16x4_t *)&v13, 3), v39, *(int16x4_t *)&v13, 2), 0xCuLL);
  a7[3] = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlsl_lane_s16(vmull_lane_s16(*(int16x4_t *)v40.i8, *(int16x4_t *)&v13, 3), *(int16x4_t *)v38.i8, *(int16x4_t *)&v13, 2), 0xCuLL), vmlsl_high_lane_s16(vmull_high_lane_s16(v40, *(int16x4_t *)&v13, 3), v38, *(int16x4_t *)&v13, 2), 0xCuLL);
  int64x2_t v42 = a7 + 4;
  *int64x2_t v42 = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v40.i8, *(int16x4_t *)&v13, 2), *(int16x4_t *)v38.i8, *(int16x4_t *)&v13, 3), 0xCuLL), vmlal_high_lane_s16(vmull_high_lane_s16(v40, *(int16x4_t *)&v13, 2), v38, *(int16x4_t *)&v13, 3), 0xCuLL);
  v42[1] = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v41.i8, *(int16x4_t *)&v13, 2), *(int16x4_t *)v39.i8, *(int16x4_t *)&v13, 3), 0xCuLL), vmlal_high_lane_s16(vmull_high_lane_s16(v41, *(int16x4_t *)&v13, 2), v39, *(int16x4_t *)&v13, 3), 0xCuLL);
  v42[2] = vqaddq_s16(v37, v35);
  v42[3] = vqaddq_s16(v29, v26);
  return result;
}

void sub_224A7EF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int16x8_t *a7)
{
  do
  {
    int16x8_t v8 = v7[8];
    int16x8_t v9 = a7[8];
    int16x8_t v10 = a7[16];
    int16x8_t v11 = v7[24];
    int16x8_t v12 = v7[16];
    int16x8_t v13 = a7[24];
    int16x8_t v14 = vqaddq_s16(*a7, v8);
    int16x8_t v15 = vqsubq_s16(*a7, v8);
    int16x8_t v16 = vqaddq_s16(*v7, v9);
    int16x8_t v17 = vqsubq_s16(*v7, v9);
    int16x8_t v18 = vqsubq_s16(v11, v10);
    int16x8_t v19 = vqaddq_s16(v11, v10);
    int16x8_t v20 = vqaddq_s16(v13, v12);
    int16x8_t v21 = vqsubq_s16(v13, v12);
    int32x4_t v22 = vmlsl_lane_s16(vmull_lane_s16(*(int16x4_t *)v17.i8, (int16x4_t)0xEC8061F5A800B50, 2), *(int16x4_t *)v15.i8, (int16x4_t)0xEC8061F5A800B50, 3);
    int32x4_t v23 = vmlsl_high_lane_s16(vmull_high_lane_s16(v17, (int16x4_t)0xEC8061F5A800B50, 2), v15, (int16x4_t)0xEC8061F5A800B50, 3);
    int16x8_t v24 = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v17.i8, (int16x4_t)0xEC8061F5A800B50, 3), *(int16x4_t *)v15.i8, (int16x4_t)0xEC8061F5A800B50, 2), 0xCuLL), vmlal_high_lane_s16(vmull_high_lane_s16(v17, (int16x4_t)0xEC8061F5A800B50, 3), v15, (int16x4_t)0xEC8061F5A800B50, 2), 0xCuLL);
    int16x8_t v25 = vqrshrn_high_n_s32(vqrshrn_n_s32(v22, 0xCuLL), v23, 0xCuLL);
    int32x4_t v26 = vmlsl_lane_s16(vmull_lane_s16(*(int16x4_t *)v21.i8, (int16x4_t)0xEC8061F5A800B50, 2), *(int16x4_t *)v18.i8, (int16x4_t)0xEC8061F5A800B50, 3);
    int32x4_t v27 = vmlsl_high_lane_s16(vmull_high_lane_s16(v21, (int16x4_t)0xEC8061F5A800B50, 2), v18, (int16x4_t)0xEC8061F5A800B50, 3);
    int16x8_t v28 = vqrshrn_high_n_s32(vqrshrn_n_s32(vnegq_s32(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v21.i8, (int16x4_t)0xEC8061F5A800B50, 3), *(int16x4_t *)v18.i8, (int16x4_t)0xEC8061F5A800B50, 2)), 0xCuLL), vnegq_s32(vmlal_high_lane_s16(vmull_high_lane_s16(v21, (int16x4_t)0xEC8061F5A800B50, 3), v18, (int16x4_t)0xEC8061F5A800B50, 2)), 0xCuLL);
    int16x8_t v29 = vqrshrn_high_n_s32(vqrshrn_n_s32(v26, 0xCuLL), v27, 0xCuLL);
    int16x8_t v30 = vqsubq_s16(v14, v19);
    int16x8_t v31 = vqsubq_s16(v25, v28);
    int16x8_t v32 = vqsubq_s16(v16, v20);
    int16x8_t v33 = vqsubq_s16(v24, v29);
    *a7 = vqaddq_s16(v14, v19);
    int16x8_t *v7 = vqaddq_s16(v25, v28);
    a7[8] = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlsl_lane_s16(vmull_lane_s16(*(int16x4_t *)v33.i8, (int16x4_t)0xEC8061F5A800B50, 0), *(int16x4_t *)v31.i8, (int16x4_t)0xEC8061F5A800B50, 0), 0xCuLL), vmlsl_high_lane_s16(vmull_high_lane_s16(v33, (int16x4_t)0xEC8061F5A800B50, 0), v31, (int16x4_t)0xEC8061F5A800B50, 0), 0xCuLL);
    v7[8] = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlsl_lane_s16(vmull_lane_s16(*(int16x4_t *)v32.i8, (int16x4_t)0xEC8061F5A800B50, 0), *(int16x4_t *)v30.i8, (int16x4_t)0xEC8061F5A800B50, 0), 0xCuLL), vmlsl_high_lane_s16(vmull_high_lane_s16(v32, (int16x4_t)0xEC8061F5A800B50, 0), v30, (int16x4_t)0xEC8061F5A800B50, 0), 0xCuLL);
    a7[16] = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v32.i8, (int16x4_t)0xEC8061F5A800B50, 0), *(int16x4_t *)v30.i8, (int16x4_t)0xEC8061F5A800B50, 0), 0xCuLL), vmlal_high_lane_s16(vmull_high_lane_s16(v32, (int16x4_t)0xEC8061F5A800B50, 0), v30, (int16x4_t)0xEC8061F5A800B50, 0), 0xCuLL);
    v7[16] = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v33.i8, (int16x4_t)0xEC8061F5A800B50, 0), *(int16x4_t *)v31.i8, (int16x4_t)0xEC8061F5A800B50, 0), 0xCuLL), vmlal_high_lane_s16(vmull_high_lane_s16(v33, (int16x4_t)0xEC8061F5A800B50, 0), v31, (int16x4_t)0xEC8061F5A800B50, 0), 0xCuLL);
    a7[24] = vqaddq_s16(v24, v29);
    v7[24] = vqaddq_s16(v16, v20);
    ++a7;
    --v7;
  }
  while ((uint64_t)a7 < (uint64_t)v7);
}

void sub_224A7F0E4()
{
  sub_224A79AA0();
  *v0++ = v1;
  *v0++ = v2;
  *v0++ = v3;
  *v0++ = v4;
  *v0++ = v5;
  *v0++ = v6;
  *v0++ = v7;
  *v0++ = v8;
  *v0++ = v9;
  *v0++ = v10;
  *v0++ = v11;
  *v0++ = v12;
  *v0++ = v13;
  *v0++ = v14;
  *char v0 = v15;
  v0[1] = v16;
  sub_224A7CC14();
  int16x8_t v18 = v17 + 15;
  v17 -= 16;
  int16x8_t v19 = *v17++;
  int16x8_t v20 = *v17++;
  int16x8_t v22 = *v17++;
  int16x8_t v24 = *v17;
  v17 -= 3;
  *v17++ = vqaddq_s16(v19, v21);
  *v18-- = vqsubq_s16(v19, v21);
  *v17++ = vqaddq_s16(v20, v23);
  *v18-- = vqsubq_s16(v20, v23);
  *v17++ = vqaddq_s16(v22, v25);
  *v18-- = vqsubq_s16(v22, v25);
  *v17++ = vqaddq_s16(v24, v26);
  *v18-- = vqsubq_s16(v24, v26);
  int16x8_t v27 = *v17++;
  int16x8_t v28 = *v17++;
  int16x8_t v30 = *v17++;
  int16x8_t v32 = *v17;
  v17 -= 3;
  *v17++ = vqaddq_s16(v27, v29);
  *v18-- = vqsubq_s16(v27, v29);
  *v17++ = vqaddq_s16(v28, v31);
  *v18-- = vqsubq_s16(v28, v31);
  *v17++ = vqaddq_s16(v30, v33);
  *v18-- = vqsubq_s16(v30, v33);
  *v17++ = vqaddq_s16(v32, v34);
  *v18-- = vqsubq_s16(v32, v34);
  int16x8_t v35 = *v17++;
  int16x8_t v36 = *v17++;
  int16x8_t v38 = *v17++;
  int16x8_t v40 = *v17;
  v17 -= 3;
  *v17++ = vqaddq_s16(v35, v37);
  *v18-- = vqsubq_s16(v35, v37);
  *v17++ = vqaddq_s16(v36, v39);
  *v18-- = vqsubq_s16(v36, v39);
  *v17++ = vqaddq_s16(v38, v41);
  *v18-- = vqsubq_s16(v38, v41);
  *v17++ = vqaddq_s16(v40, v42);
  *v18-- = vqsubq_s16(v40, v42);
  int16x8_t v43 = *v17++;
  int16x8_t v44 = *v17++;
  int16x8_t v46 = *v17++;
  int16x8_t v48 = *v17;
  v17 -= 3;
  *v17++ = vqaddq_s16(v43, v45);
  *v18-- = vqsubq_s16(v43, v45);
  *v17++ = vqaddq_s16(v44, v47);
  *v18-- = vqsubq_s16(v44, v47);
  *v17++ = vqaddq_s16(v46, v49);
  *int16x8_t v18 = vqsubq_s16(v46, v49);
  *int16x8_t v17 = vqaddq_s16(v48, v50);
  v18[-1] = vqsubq_s16(v48, v50);
  sub_224A7EE44(v51, v52, v53, v54, v55, v56, v17 + 17);
  sub_224A7EE44(v57, v58, v59, v60, v61, v62, v63);
  sub_224A7EE44(v64, v65, v66, v67, v68, v69, v70);
  sub_224A7EE44(v71, v72, v73, v74, v75, v76, v77);
  sub_224A7EF7C(v79, v80, v81, v82, v83, v84, (int16x8_t *)(v78 - 512));
}

void sub_224A7F3C4(_OWORD *a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v2 = 4 * a2;
  *a1 = 0u;
  long long v3 = (_OWORD *)((char *)a1 + v2);
  _OWORD *v3 = 0u;
  long long v4 = (_OWORD *)((char *)v3 + v2);
  _OWORD *v4 = 0u;
  long long v5 = (_OWORD *)((char *)v4 + v2);
  _OWORD *v5 = 0u;
  long long v6 = (_OWORD *)((char *)v5 + v2);
  _OWORD *v6 = 0u;
  long long v7 = (_OWORD *)((char *)v6 + v2);
  _OWORD *v7 = 0u;
  long long v8 = (_OWORD *)((char *)v7 + v2);
  _OWORD *v8 = 0u;
  *(_OWORD *)((char *)v8 + v2) = 0u;
  sub_224A79AA0();
  *v9++ = v10;
  *v9++ = v11;
  *v9++ = v12;
  *v9++ = v13;
  *v9++ = v14;
  *v9++ = v15;
  *v9++ = v16;
  *v9++ = v17;
  *v9++ = v18;
  *v9++ = v19;
  *v9++ = v20;
  *v9++ = v21;
  *v9++ = v22;
  *v9++ = v23;
  _OWORD *v9 = v24;
  v9[1] = v25;
  *int16x8_t v26 = 0u;
  int16x8_t v28 = (_OWORD *)((char *)v26 + v27);
  *int16x8_t v28 = 0u;
  int16x8_t v29 = (_OWORD *)((char *)v28 + v27);
  *int16x8_t v29 = 0u;
  int16x8_t v30 = (_OWORD *)((char *)v29 + v27);
  _OWORD *v30 = 0u;
  int16x8_t v31 = (_OWORD *)((char *)v30 + v27);
  *int16x8_t v31 = 0u;
  int16x8_t v32 = (_OWORD *)((char *)v31 + v27);
  *int16x8_t v32 = 0u;
  int16x8_t v33 = (_OWORD *)((char *)v32 + v27);
  *int16x8_t v33 = 0u;
  *(_OWORD *)((char *)v33 + v27) = 0u;
  sub_224A7CC14();
  int16x8_t v35 = v34 + 15;
  v34 -= 16;
  int16x8_t v36 = *v34++;
  int16x8_t v37 = *v34++;
  int16x8_t v39 = *v34++;
  int16x8_t v41 = *v34;
  v34 -= 3;
  *v34++ = vqaddq_s16(v36, v38);
  *v35-- = vqsubq_s16(v36, v38);
  *v34++ = vqaddq_s16(v37, v40);
  *v35-- = vqsubq_s16(v37, v40);
  *v34++ = vqaddq_s16(v39, v42);
  *v35-- = vqsubq_s16(v39, v42);
  *v34++ = vqaddq_s16(v41, v43);
  *v35-- = vqsubq_s16(v41, v43);
  int16x8_t v44 = *v34++;
  int16x8_t v45 = *v34++;
  int16x8_t v47 = *v34++;
  int16x8_t v49 = *v34;
  v34 -= 3;
  *v34++ = vqaddq_s16(v44, v46);
  *v35-- = vqsubq_s16(v44, v46);
  *v34++ = vqaddq_s16(v45, v48);
  *v35-- = vqsubq_s16(v45, v48);
  *v34++ = vqaddq_s16(v47, v50);
  *v35-- = vqsubq_s16(v47, v50);
  *v34++ = vqaddq_s16(v49, v51);
  *v35-- = vqsubq_s16(v49, v51);
  int16x8_t v52 = *v34++;
  int16x8_t v53 = *v34++;
  int16x8_t v55 = *v34++;
  int16x8_t v57 = *v34;
  v34 -= 3;
  *v34++ = vqaddq_s16(v52, v54);
  *v35-- = vqsubq_s16(v52, v54);
  *v34++ = vqaddq_s16(v53, v56);
  *v35-- = vqsubq_s16(v53, v56);
  *v34++ = vqaddq_s16(v55, v58);
  *v35-- = vqsubq_s16(v55, v58);
  *v34++ = vqaddq_s16(v57, v59);
  *v35-- = vqsubq_s16(v57, v59);
  int16x8_t v60 = *v34++;
  int16x8_t v61 = *v34++;
  int16x8_t v63 = *v34++;
  int16x8_t v65 = *v34;
  v34 -= 3;
  *v34++ = vqaddq_s16(v60, v62);
  *v35-- = vqsubq_s16(v60, v62);
  *v34++ = vqaddq_s16(v61, v64);
  *v35-- = vqsubq_s16(v61, v64);
  *v34++ = vqaddq_s16(v63, v66);
  *int16x8_t v35 = vqsubq_s16(v63, v66);
  int16x8_t *v34 = vqaddq_s16(v65, v67);
  v35[-1] = vqsubq_s16(v65, v67);
  int64x2_t v70 = (_OWORD *)((char *)v68 + 8 * v69);
  *uint64_t v68 = 0u;
  *(_OWORD *)((char *)&v68[v69] - v69) = 0u;
  _OWORD *v70 = 0u;
  *(_OWORD *)((char *)v70 - v69) = 0u;
  sub_224A7EE44(v71, v72, v73, v74, v75, v76, v34 + 17);
  uint64_t v79 = (_OWORD *)(v77 + 4 * v78);
  uint64_t v81 = (_OWORD *)(v80 - 4 * v78);
  *uint64_t v79 = 0u;
  *uint64_t v81 = 0u;
  *(_OWORD *)((char *)v79 - v78) = 0u;
  *(_OWORD *)((char *)v81 + v78) = 0u;
  sub_224A7EE44(v82, v83, v84, v85, v86, v87, v88);
  *(_OWORD *)(v90 - 2 * v89 + v89) = 0u;
  *(_OWORD *)(v93 + v89) = 0u;
  *(_OWORD *)(v91 - 2 * v89 + v89) = 0u;
  *(_OWORD *)(v92 + v89) = 0u;
  sub_224A7EE44(v94, v95, v96, v97, v98, v99, v100);
  *int16x8_t v101 = 0u;
  *(_OWORD *)(v103 + v102) = 0u;
  *int32x4_t v104 = 0u;
  *(_OWORD *)(v105 + v102) = 0u;
  sub_224A7EE44(v106, v107, v108, v109, v110, v111, v112);
  sub_224A7EF7C(v114, v115, v116, v117, v118, v119, (int16x8_t *)(v113 - 512));
}

void sub_224A7F73C(_OWORD *a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v2 = 4 * a2;
  *a1 = 0u;
  long long v3 = (_OWORD *)((char *)a1 + v2);
  _OWORD *v3 = 0u;
  long long v4 = (_OWORD *)((char *)v3 + v2);
  _OWORD *v4 = 0u;
  long long v5 = (_OWORD *)((char *)v4 + v2);
  _OWORD *v5 = 0u;
  long long v6 = (_OWORD *)((char *)v5 + v2);
  _OWORD *v6 = 0u;
  long long v7 = (_OWORD *)((char *)v6 + v2);
  _OWORD *v7 = 0u;
  long long v8 = (_OWORD *)((char *)v7 + v2);
  _OWORD *v8 = 0u;
  *(_OWORD *)((char *)v8 + v2) = 0u;
  sub_224A79AA0();
  *v9++ = v10;
  *v9++ = v11;
  *v9++ = v12;
  *v9++ = v13;
  *v9++ = v14;
  *v9++ = v15;
  *v9++ = v16;
  *v9++ = v17;
  *v9++ = v18;
  *v9++ = v19;
  *v9++ = v20;
  *v9++ = v21;
  *v9++ = v22;
  *v9++ = v23;
  _OWORD *v9 = v24;
  v9[1] = v25;
  *int16x8_t v26 = 0u;
  int16x8_t v28 = (_OWORD *)((char *)v26 + v27);
  *int16x8_t v28 = 0u;
  int16x8_t v29 = (_OWORD *)((char *)v28 + v27);
  *int16x8_t v29 = 0u;
  int16x8_t v30 = (_OWORD *)((char *)v29 + v27);
  _OWORD *v30 = 0u;
  int16x8_t v31 = (_OWORD *)((char *)v30 + v27);
  *int16x8_t v31 = 0u;
  int16x8_t v32 = (_OWORD *)((char *)v31 + v27);
  *int16x8_t v32 = 0u;
  int16x8_t v33 = (_OWORD *)((char *)v32 + v27);
  *int16x8_t v33 = 0u;
  *(_OWORD *)((char *)v33 + v27) = 0u;
  sub_224A7CC14();
  int16x8_t v35 = v34 + 15;
  v34 -= 16;
  int16x8_t v36 = *v34++;
  int16x8_t v37 = *v34++;
  int16x8_t v39 = *v34++;
  int16x8_t v41 = *v34;
  v34 -= 3;
  *v34++ = vqaddq_s16(v36, v38);
  *v35-- = vqsubq_s16(v36, v38);
  *v34++ = vqaddq_s16(v37, v40);
  *v35-- = vqsubq_s16(v37, v40);
  *v34++ = vqaddq_s16(v39, v42);
  *v35-- = vqsubq_s16(v39, v42);
  *v34++ = vqaddq_s16(v41, v43);
  *v35-- = vqsubq_s16(v41, v43);
  int16x8_t v44 = *v34++;
  int16x8_t v45 = *v34++;
  int16x8_t v47 = *v34++;
  int16x8_t v49 = *v34;
  v34 -= 3;
  *v34++ = vqaddq_s16(v44, v46);
  *v35-- = vqsubq_s16(v44, v46);
  *v34++ = vqaddq_s16(v45, v48);
  *v35-- = vqsubq_s16(v45, v48);
  *v34++ = vqaddq_s16(v47, v50);
  *v35-- = vqsubq_s16(v47, v50);
  *v34++ = vqaddq_s16(v49, v51);
  *v35-- = vqsubq_s16(v49, v51);
  int16x8_t v52 = *v34++;
  int16x8_t v53 = *v34++;
  int16x8_t v55 = *v34++;
  int16x8_t v57 = *v34;
  v34 -= 3;
  *v34++ = vqaddq_s16(v52, v54);
  *v35-- = vqsubq_s16(v52, v54);
  *v34++ = vqaddq_s16(v53, v56);
  *v35-- = vqsubq_s16(v53, v56);
  *v34++ = vqaddq_s16(v55, v58);
  *v35-- = vqsubq_s16(v55, v58);
  *v34++ = vqaddq_s16(v57, v59);
  *v35-- = vqsubq_s16(v57, v59);
  int16x8_t v60 = *v34++;
  int16x8_t v61 = *v34++;
  int16x8_t v63 = *v34++;
  int16x8_t v65 = *v34;
  v34 -= 3;
  *v34++ = vqaddq_s16(v60, v62);
  *v35-- = vqsubq_s16(v60, v62);
  *v34++ = vqaddq_s16(v61, v64);
  *v35-- = vqsubq_s16(v61, v64);
  *v34++ = vqaddq_s16(v63, v66);
  *int16x8_t v35 = vqsubq_s16(v63, v66);
  int16x8_t *v34 = vqaddq_s16(v65, v67);
  v35[-1] = vqsubq_s16(v65, v67);
  int64x2_t v70 = (_OWORD *)((char *)v68 + 8 * v69);
  *uint64_t v68 = 0u;
  *(_OWORD *)((char *)&v68[v69] - v69) = 0u;
  _OWORD *v70 = 0u;
  *(_OWORD *)((char *)v70 - v69) = 0u;
  sub_224A7EE44(v71, v72, v73, v74, v75, v76, v34 + 17);
  uint64_t v79 = (_OWORD *)(v77 + 4 * v78);
  uint64_t v81 = (_OWORD *)(v80 - 4 * v78);
  *uint64_t v79 = 0u;
  *uint64_t v81 = 0u;
  *(_OWORD *)((char *)v79 - v78) = 0u;
  *(_OWORD *)((char *)v81 + v78) = 0u;
  sub_224A7EE44(v82, v83, v84, v85, v86, v87, v88);
  *(_OWORD *)(v90 - 2 * v89 + v89) = 0u;
  *(_OWORD *)(v93 + v89) = 0u;
  *(_OWORD *)(v91 - 2 * v89 + v89) = 0u;
  *(_OWORD *)(v92 + v89) = 0u;
  sub_224A7EE44(v94, v95, v96, v97, v98, v99, v100);
  *int16x8_t v101 = 0u;
  *(_OWORD *)(v103 + v102) = 0u;
  *int32x4_t v104 = 0u;
  *(_OWORD *)(v105 + v102) = 0u;
  sub_224A7EE44(v106, v107, v108, v109, v110, v111, v112);
  sub_224A7EF7C(v114, v115, v116, v117, v118, v119, (int16x8_t *)(v113 - 512));
}

int16x8_t sub_224A7FB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int16x8_t *a7, uint64_t a8, uint64_t a9)
{
  long long v10 = (unint64_t *)&a9;
  long long v11 = &STACK[0x3C0];
  long long v12 = (int8x16_t *)&a7[7];
  int16x8_t v13 = vdupq_n_s16(v9);
  do
  {
    int16x8_t v15 = *(int16x8_t *)v10;
    int16x8_t v16 = *((int16x8_t *)v10 + 1);
    int16x8_t v17 = *((int16x8_t *)v10 + 2);
    int16x8_t v18 = *((int16x8_t *)v10 + 3);
    long long v14 = (int16x8_t *)(v10 + 8);
    int16x8_t v20 = *(int16x8_t *)v11;
    int16x8_t v21 = *((int16x8_t *)v11 + 1);
    int16x8_t v22 = *((int16x8_t *)v11 + 2);
    int16x8_t v23 = *((int16x8_t *)v11 + 3);
    long long v19 = (int16x8_t *)(v11 - 8);
    int16x8_t v24 = *v14;
    int16x8_t v25 = v14[1];
    int16x8_t v26 = v14[2];
    int16x8_t v27 = v14[3];
    long long v10 = (unint64_t *)&v14[4];
    int16x8_t v28 = *v19;
    int16x8_t v29 = v19[1];
    int16x8_t v30 = v19[2];
    int16x8_t v31 = v19[3];
    long long v11 = (unint64_t *)&v19[-4];
    int32x4_t v32 = (int32x4_t)vtrn1q_s16(v15, v16);
    int32x4_t v33 = (int32x4_t)vtrn2q_s16(v15, v16);
    int32x4_t v34 = (int32x4_t)vtrn1q_s16(v17, v18);
    int32x4_t v35 = (int32x4_t)vtrn2q_s16(v17, v18);
    int32x4_t v36 = (int32x4_t)vtrn1q_s16(v24, v25);
    int32x4_t v37 = (int32x4_t)vtrn2q_s16(v24, v25);
    int32x4_t v38 = (int32x4_t)vtrn1q_s16(v26, v27);
    int32x4_t v39 = (int32x4_t)vtrn2q_s16(v26, v27);
    int64x2_t v40 = (int64x2_t)vtrn1q_s32(v36, v38);
    int64x2_t v41 = (int64x2_t)vtrn2q_s32(v36, v38);
    int64x2_t v42 = (int64x2_t)vtrn1q_s32(v37, v39);
    int64x2_t v43 = (int64x2_t)vtrn2q_s32(v37, v39);
    int64x2_t v44 = (int64x2_t)vtrn1q_s32(v33, v35);
    int64x2_t v45 = (int64x2_t)vtrn2q_s32(v33, v35);
    int64x2_t v46 = (int64x2_t)vtrn1q_s32(v32, v34);
    int64x2_t v47 = (int64x2_t)vtrn2q_s32(v32, v34);
    int16x8_t v48 = (int16x8_t)vtrn1q_s64(v46, v40);
    int16x8_t v49 = (int16x8_t)vtrn2q_s64(v46, v40);
    int16x8_t v50 = (int16x8_t)vtrn1q_s64(v44, v42);
    int16x8_t v51 = (int16x8_t)vtrn2q_s64(v44, v42);
    int16x8_t v52 = (int16x8_t)vtrn2q_s64(v47, v41);
    int16x8_t v53 = (int16x8_t)vtrn1q_s64(v47, v41);
    int16x8_t v54 = (int16x8_t)vtrn1q_s64(v45, v43);
    int16x8_t v55 = (int16x8_t)vtrn2q_s64(v45, v43);
    int32x4_t v56 = (int32x4_t)vtrn1q_s16(v23, v22);
    int32x4_t v57 = (int32x4_t)vtrn2q_s16(v23, v22);
    int32x4_t v58 = (int32x4_t)vtrn1q_s16(v21, v20);
    int32x4_t v59 = (int32x4_t)vtrn2q_s16(v21, v20);
    int32x4_t v60 = (int32x4_t)vtrn1q_s16(v31, v30);
    int32x4_t v61 = (int32x4_t)vtrn2q_s16(v31, v30);
    int32x4_t v62 = (int32x4_t)vtrn1q_s16(v29, v28);
    int32x4_t v63 = (int32x4_t)vtrn2q_s16(v29, v28);
    int64x2_t v64 = (int64x2_t)vtrn1q_s32(v60, v62);
    int64x2_t v65 = (int64x2_t)vtrn2q_s32(v60, v62);
    int64x2_t v66 = (int64x2_t)vtrn1q_s32(v61, v63);
    int64x2_t v67 = (int64x2_t)vtrn2q_s32(v61, v63);
    int64x2_t v68 = (int64x2_t)vtrn1q_s32(v57, v59);
    int64x2_t v69 = (int64x2_t)vtrn2q_s32(v57, v59);
    int64x2_t v70 = (int64x2_t)vtrn1q_s32(v56, v58);
    int64x2_t v71 = (int64x2_t)vtrn2q_s32(v56, v58);
    int16x8_t v72 = (int16x8_t)vtrn1q_s64(v70, v64);
    int16x8_t v73 = (int16x8_t)vtrn2q_s64(v70, v64);
    int16x8_t v74 = (int16x8_t)vtrn1q_s64(v68, v66);
    int16x8_t v75 = (int16x8_t)vtrn2q_s64(v68, v66);
    int16x8_t v76 = (int16x8_t)vtrn2q_s64(v71, v65);
    int16x8_t v77 = (int16x8_t)vtrn1q_s64(v71, v65);
    int16x8_t v78 = (int16x8_t)vtrn1q_s64(v69, v67);
    int16x8_t v79 = (int16x8_t)vtrn2q_s64(v69, v67);
    int8x16_t v80 = (int8x16_t)vrev64q_s16(vrshlq_s16(vqsubq_s16(v48, v72), v13));
    int8x16_t v81 = (int8x16_t)vrev64q_s16(vrshlq_s16(vqsubq_s16(v50, v74), v13));
    *a7 = vrshlq_s16(vqaddq_s16(v48, v72), v13);
    uint64_t v82 = a7 + 8;
    *long long v12 = vextq_s8(v80, v80, 8uLL);
    uint64_t v83 = v12 + 8;
    *uint64_t v82 = vrshlq_s16(vqaddq_s16(v50, v74), v13);
    v82 += 8;
    *uint64_t v83 = vextq_s8(v81, v81, 8uLL);
    v83 += 8;
    int8x16_t v84 = (int8x16_t)vrev64q_s16(vrshlq_s16(vqsubq_s16(v53, v77), v13));
    int8x16_t v85 = (int8x16_t)vrev64q_s16(vrshlq_s16(vqsubq_s16(v54, v78), v13));
    *uint64_t v82 = vrshlq_s16(vqaddq_s16(v53, v77), v13);
    v82 += 8;
    *uint64_t v83 = vextq_s8(v84, v84, 8uLL);
    v83 += 8;
    *uint64_t v82 = vrshlq_s16(vqaddq_s16(v54, v78), v13);
    v82 += 8;
    *uint64_t v83 = vextq_s8(v85, v85, 8uLL);
    v83 += 8;
    int8x16_t v86 = (int8x16_t)vrev64q_s16(vrshlq_s16(vqsubq_s16(v49, v73), v13));
    int8x16_t v87 = (int8x16_t)vrev64q_s16(vrshlq_s16(vqsubq_s16(v51, v75), v13));
    *uint64_t v82 = vrshlq_s16(vqaddq_s16(v49, v73), v13);
    v82 += 8;
    *uint64_t v83 = vextq_s8(v86, v86, 8uLL);
    v83 += 8;
    *uint64_t v82 = vrshlq_s16(vqaddq_s16(v51, v75), v13);
    v82 += 8;
    *uint64_t v83 = vextq_s8(v87, v87, 8uLL);
    v83 += 8;
    int16x8_t result = vrshlq_s16(vqaddq_s16(v52, v76), v13);
    int8x16_t v89 = (int8x16_t)vrev64q_s16(vrshlq_s16(vqsubq_s16(v52, v76), v13));
    int8x16_t v90 = (int8x16_t)vrev64q_s16(vrshlq_s16(vqsubq_s16(v55, v79), v13));
    *uint64_t v82 = result;
    v82 += 8;
    *uint64_t v83 = vextq_s8(v89, v89, 8uLL);
    v83 += 8;
    *uint64_t v82 = vrshlq_s16(vqaddq_s16(v55, v79), v13);
    *uint64_t v83 = vextq_s8(v90, v90, 8uLL);
    a7 = v82 - 55;
    long long v12 = v83 - 57;
  }
  while ((uint64_t)v10 < (uint64_t)v11);
  return result;
}

int8x8_t sub_224A7FD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint8x8_t *a7, uint64_t a8, uint64_t a9)
{
  unsigned int v9 = (unint64_t *)&a9;
  long long v10 = &STACK[0x3C0];
  long long v11 = (uint8x8_t *)((char *)&a7[8 * a2] - a2);
  do
  {
    int16x8_t v13 = *(int16x8_t *)v9;
    int16x8_t v14 = *((int16x8_t *)v9 + 1);
    int16x8_t v15 = *((int16x8_t *)v9 + 2);
    int16x8_t v16 = *((int16x8_t *)v9 + 3);
    long long v12 = (int16x8_t *)(v9 + 8);
    int16x8_t v18 = *(int16x8_t *)v10;
    int16x8_t v19 = *((int16x8_t *)v10 + 1);
    int16x8_t v20 = *((int16x8_t *)v10 + 2);
    int16x8_t v21 = *((int16x8_t *)v10 + 3);
    int16x8_t v17 = (int16x8_t *)(v10 - 8);
    int16x8_t v22 = *v12;
    int16x8_t v23 = v12[1];
    int16x8_t v24 = v12[2];
    int16x8_t v25 = v12[3];
    unsigned int v9 = (unint64_t *)&v12[4];
    int16x8_t v26 = *v17;
    int16x8_t v27 = v17[1];
    int16x8_t v28 = v17[2];
    int16x8_t v29 = v17[3];
    long long v10 = (unint64_t *)&v17[-4];
    uint8x8_t v31 = *a7;
    int16x8_t v30 = (uint8x8_t *)((char *)a7 + a2);
    uint8x8_t v33 = *v11;
    int32x4_t v32 = (uint8x8_t *)((char *)v11 - a2);
    uint8x8_t v34 = *v30;
    uint8x8_t v35 = *v32;
    int32x4_t v36 = (int8x8_t *)((char *)v30 - a2);
    int32x4_t v37 = (int8x8_t *)((char *)v32 + a2);
    int8x8_t *v36 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v13, v21), 4uLL), v31));
    int32x4_t v38 = (int8x8_t *)((char *)v36 + a2);
    *int32x4_t v37 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v13, v21), 4uLL), v33));
    int32x4_t v39 = (int8x8_t *)((char *)v37 - a2);
    *int32x4_t v38 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v14, v20), 4uLL), v34));
    int64x2_t v40 = (uint8x8_t *)((char *)v38 + a2);
    *int32x4_t v39 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v14, v20), 4uLL), v35));
    int64x2_t v41 = (uint8x8_t *)((char *)v39 - a2);
    uint8x8_t v43 = *v40;
    int64x2_t v42 = (uint8x8_t *)((char *)v40 + a2);
    uint8x8_t v45 = *v41;
    int64x2_t v44 = (uint8x8_t *)((char *)v41 - a2);
    uint8x8_t v46 = *v42;
    uint8x8_t v47 = *v44;
    int16x8_t v48 = (int8x8_t *)((char *)v42 - a2);
    int16x8_t v49 = (int8x8_t *)((char *)v44 + a2);
    int8x8_t *v48 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v15, v19), 4uLL), v43));
    int16x8_t v50 = (int8x8_t *)((char *)v48 + a2);
    *int16x8_t v49 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v15, v19), 4uLL), v45));
    int16x8_t v51 = (int8x8_t *)((char *)v49 - a2);
    *int16x8_t v50 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v16, v18), 4uLL), v46));
    int16x8_t v52 = (uint8x8_t *)((char *)v50 + a2);
    *int16x8_t v51 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v16, v18), 4uLL), v47));
    int16x8_t v53 = (uint8x8_t *)((char *)v51 - a2);
    uint8x8_t v55 = *v52;
    int16x8_t v54 = (uint8x8_t *)((char *)v52 + a2);
    uint8x8_t v57 = *v53;
    int32x4_t v56 = (uint8x8_t *)((char *)v53 - a2);
    uint8x8_t v58 = *v54;
    uint8x8_t v59 = *v56;
    int32x4_t v60 = (int8x8_t *)((char *)v54 - a2);
    int32x4_t v61 = (int8x8_t *)((char *)v56 + a2);
    int8x8_t *v60 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v22, v29), 4uLL), v55));
    int32x4_t v62 = (int8x8_t *)((char *)v60 + a2);
    int8x8_t *v61 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v22, v29), 4uLL), v57));
    int32x4_t v63 = (int8x8_t *)((char *)v61 - a2);
    *int32x4_t v62 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v23, v28), 4uLL), v58));
    int64x2_t v64 = (uint8x8_t *)((char *)v62 + a2);
    *int32x4_t v63 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v23, v28), 4uLL), v59));
    int64x2_t v65 = (uint8x8_t *)((char *)v63 - a2);
    uint8x8_t v67 = *v64;
    int64x2_t v66 = (uint8x8_t *)((char *)v64 + a2);
    uint8x8_t v69 = *v65;
    int64x2_t v68 = (uint8x8_t *)((char *)v65 - a2);
    uint8x8_t v70 = *v66;
    uint8x8_t v71 = *v68;
    int16x8_t v72 = (int8x8_t *)((char *)v66 - a2);
    int16x8_t v73 = (int8x8_t *)((char *)v68 + a2);
    int8x8_t result = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v24, v27), 4uLL), v67));
    int8x8_t *v72 = result;
    int16x8_t v75 = (int8x8_t *)((char *)v72 + a2);
    *int16x8_t v73 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v24, v27), 4uLL), v69));
    int16x8_t v76 = (int8x8_t *)((char *)v73 - a2);
    int8x8_t *v75 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqaddq_s16(v25, v26), 4uLL), v70));
    a7 = (uint8x8_t *)((char *)v75 + a2);
    *int16x8_t v76 = vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshrq_n_s16(vqsubq_s16(v25, v26), 4uLL), v71));
    long long v11 = (uint8x8_t *)((char *)v76 - a2);
  }
  while ((uint64_t)v9 < (uint64_t)v10);
  return result;
}

int8x8_t sub_224A7FF48(uint8x8_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A7F3C4(a3, 64);
    sub_224A7FB64(v5, v6, v7, v8, v9, (uint64_t)v10, v10, v11, v105);
    int16x8_t v15 = (_OWORD *)(v14 + 1024);
    int v16 = 24;
    if (v17 < *v13) {
      goto LABEL_8;
    }
    sub_224A7F3C4((_OWORD *)(v12 + 16), 64);
    sub_224A7FB64(v18, v19, v20, v21, v22, (uint64_t)v23, v23 + 64, v24, v106);
    int16x8_t v15 = (_OWORD *)(v27 + 2048);
    int v16 = 16;
    if (v28 < *v26
      || (sub_224A7F3C4((_OWORD *)(v25 + 32), 64),
          sub_224A7FB64(v29, v30, v31, v32, v33, (uint64_t)v34, v34 + 128, v35, v106),
          int16x8_t v15 = (_OWORD *)(v38 + 3072),
          int v16 = 8,
          v39 < *v37))
    {
LABEL_8:
      do
      {
        BOOL v47 = __OFSUB__(v16, 2);
        v16 -= 2;
        *int16x8_t v15 = 0uLL;
        v15[1] = 0uLL;
        v15[2] = 0uLL;
        v15[3] = 0uLL;
        int16x8_t v48 = v15 + 4;
        _OWORD *v48 = 0uLL;
        v48[1] = 0uLL;
        v48[2] = 0uLL;
        v48[3] = 0uLL;
        v48 += 4;
        _OWORD *v48 = 0uLL;
        v48[1] = 0uLL;
        v48[2] = 0uLL;
        v48[3] = 0uLL;
        v48 += 4;
        _OWORD *v48 = 0uLL;
        v48[1] = 0uLL;
        v48[2] = 0uLL;
        v48[3] = 0uLL;
        int16x8_t v15 = v48 + 4;
      }
      while (!((v16 < 0) ^ v47 | (v16 == 0)));
    }
    else
    {
      sub_224A7F3C4((_OWORD *)(v36 + 48), 64);
      sub_224A7FB64(v40, v41, v42, v43, v44, (uint64_t)v45, v45 + 192, v46, v106);
    }
    sub_224A7F0E4();
    sub_224A7FD6C((uint64_t)v49, v50, v51, v52, v53, v54, v49, v55, v106);
    sub_224A7F0E4();
    sub_224A7FD6C((uint64_t)v56, v57, v58, v59, v60, v61, v56 + 1, v62, v107);
    sub_224A7F0E4();
    sub_224A7FD6C((uint64_t)v63, v64, v65, v66, v67, v68, v63 + 2, v69, v108);
    sub_224A7F0E4();
    sub_224A7FD6C((uint64_t)v70, v71, v72, v73, v74, v75, v70 + 3, v76, v109);
    sub_224A7F0E4();
    sub_224A7FD6C((uint64_t)v77, v78, v79, v80, v81, v82, v77 + 4, v83, v110);
    sub_224A7F0E4();
    sub_224A7FD6C((uint64_t)v84, v85, v86, v87, v88, v89, v84 + 5, v90, v111);
    sub_224A7F0E4();
    sub_224A7FD6C((uint64_t)v91, v92, v93, v94, v95, v96, v91 + 6, v97, v112);
    sub_224A7F0E4();
    return sub_224A7FD6C((uint64_t)v98, v99, v100, v101, v102, v103, v98 + 7, v104, v113);
  }
  else
  {
    vld1q_dup_s16(a3);
    *a3 = 0;
    sub_224A785B8(a1, a2, (uint64_t)a3, a4, 64);
  }
  return result;
}

void sub_224A80100(uint8x8_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A7F73C(a3, 64);
    sub_224A7FB64(v4, v5, v6, v7, v8, (uint64_t)v9, v9, v10, v48);
    uint64_t v14 = (_OWORD *)(v13 + 1024);
    int v15 = 24;
    if (v16 < *v12) {
      goto LABEL_8;
    }
    sub_224A7F73C((_OWORD *)(v11 + 16), 64);
    sub_224A7FB64(v17, v18, v19, v20, v21, (uint64_t)v22, v22 + 64, v23, v49);
    uint64_t v14 = (_OWORD *)(v26 + 2048);
    int v15 = 16;
    if (v27 < *v25
      || (sub_224A7F73C((_OWORD *)(v24 + 32), 64),
          sub_224A7FB64(v28, v29, v30, v31, v32, (uint64_t)v33, v33 + 128, v34, v50),
          uint64_t v14 = (_OWORD *)(v37 + 3072),
          int v15 = 8,
          v38 < *v36))
    {
LABEL_8:
      do
      {
        BOOL v46 = __OFSUB__(v15, 2);
        v15 -= 2;
        *uint64_t v14 = 0uLL;
        v14[1] = 0uLL;
        v14[2] = 0uLL;
        v14[3] = 0uLL;
        BOOL v47 = v14 + 4;
        *BOOL v47 = 0uLL;
        v47[1] = 0uLL;
        v47[2] = 0uLL;
        v47[3] = 0uLL;
        v47 += 4;
        *BOOL v47 = 0uLL;
        v47[1] = 0uLL;
        v47[2] = 0uLL;
        v47[3] = 0uLL;
        v47 += 4;
        *BOOL v47 = 0uLL;
        v47[1] = 0uLL;
        v47[2] = 0uLL;
        v47[3] = 0uLL;
        uint64_t v14 = v47 + 4;
      }
      while (!((v15 < 0) ^ v46 | (v15 == 0)));
    }
    else
    {
      sub_224A7F73C((_OWORD *)(v35 + 48), 64);
      sub_224A7FB64(v39, v40, v41, v42, v43, (uint64_t)v44, v44 + 192, v45, v51);
    }
    sub_224A7DB2C();
    sub_224A7DB2C();
    sub_224A7DB2C();
    sub_224A7DB2C();
    sub_224A7DB2C();
    sub_224A7DB2C();
    sub_224A7DB2C();
    sub_224A7DB2C();
  }
  else
  {
    vld1q_dup_s16(a3);
    *a3 = 0;
    sub_224A785B8(a1, a2, (uint64_t)a3, a4, 32);
  }
}

int8x8_t sub_224A8029C(uint8x16_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A7D5BC(a3, 64);
    uint64_t v7 = (_OWORD *)(v6 + 512);
    int v8 = 24;
    if (v9 < v10
      || (sub_224A7D5BC((_OWORD *)(v5 + 16), 64), v7 = (_OWORD *)(v12 + 1024), int v8 = 16, v13 < v14)
      || (sub_224A7D5BC((_OWORD *)(v11 + 32), 64), v7 = (_OWORD *)(v16 + 1536), int v8 = 8, v17 < v18))
    {
      do
      {
        BOOL v19 = __OFSUB__(v8, 4);
        v8 -= 4;
        _OWORD *v7 = 0uLL;
        v7[1] = 0uLL;
        v7[2] = 0uLL;
        v7[3] = 0uLL;
        uint64_t v20 = v7 + 4;
        *uint64_t v20 = 0uLL;
        v20[1] = 0uLL;
        v20[2] = 0uLL;
        v20[3] = 0uLL;
        v20 += 4;
        *uint64_t v20 = 0uLL;
        v20[1] = 0uLL;
        v20[2] = 0uLL;
        v20[3] = 0uLL;
        v20 += 4;
        *uint64_t v20 = 0uLL;
        v20[1] = 0uLL;
        v20[2] = 0uLL;
        v20[3] = 0uLL;
        uint64_t v7 = v20 + 4;
      }
      while (!((v8 < 0) ^ v19 | (v8 == 0)));
    }
    else
    {
      sub_224A7D5BC((_OWORD *)(v15 + 48), 64);
    }
    sub_224A7F0E4();
    sub_224A7FD6C((uint64_t)v21, v22, v23, v24, v25, v26, v21, v27, v49);
    sub_224A7F0E4();
    sub_224A7FD6C((uint64_t)v28, v29, v30, v31, v32, v33, v28 + 1, v34, v50);
    sub_224A7F0E4();
    sub_224A7FD6C((uint64_t)v35, v36, v37, v38, v39, v40, v35 + 2, v41, v51);
    sub_224A7F0E4();
    return sub_224A7FD6C((uint64_t)v42, v43, v44, v45, v46, v47, v42 + 3, v48, v52);
  }
  else
  {
    vld1q_dup_s16(a3);
    *a3 = 0;
    sub_224A78558(a1, a2, (uint64_t)a3, a4, 64);
  }
  return result;
}

uint8x8_t *sub_224A803D4(uint8x8_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A7F3C4(a3, 32);
    sub_224A7FB64(v5, v6, v7, v8, (uint64_t)v9, v10, v9, v11, v71);
    int v18 = (_OWORD *)(v16 + 1024);
    int v19 = 8;
    if ((int)v15 < *v17)
    {
      do
      {
        BOOL v27 = __OFSUB__(v19, 2);
        v19 -= 2;
        *int v18 = 0uLL;
        v18[1] = 0uLL;
        v18[2] = 0uLL;
        v18[3] = 0uLL;
        uint64_t v28 = v18 + 4;
        *uint64_t v28 = 0uLL;
        v28[1] = 0uLL;
        v28[2] = 0uLL;
        v28[3] = 0uLL;
        v28 += 4;
        *uint64_t v28 = 0uLL;
        v28[1] = 0uLL;
        v28[2] = 0uLL;
        v28[3] = 0uLL;
        v28 += 4;
        *uint64_t v28 = 0uLL;
        v28[1] = 0uLL;
        v28[2] = 0uLL;
        v28[3] = 0uLL;
        int v18 = v28 + 4;
      }
      while (!((v19 < 0) ^ v27 | (v19 == 0)));
    }
    else
    {
      sub_224A7F3C4((_OWORD *)(v14 + 16), 32);
      sub_224A7FB64(v20, v21, v22, v23, (uint64_t)v24, v25, v24 + 64, v26, v72);
    }
    uint64_t v29 = sub_224A7B530(v12, v13, v14, v15, v16, (uint64_t (*)(void))sub_224A79AA0);
    uint64_t v35 = sub_224A7B530(v29, v30, v31, v32, v33, v34);
    uint64_t v41 = sub_224A7B530(v35, v36, v37, v38, v39, v40);
    uint64_t v47 = sub_224A7B530(v41, v42, v43, v44, v45, v46);
    uint64_t v53 = sub_224A7B530(v47, v48, v49, v50, v51, v52);
    uint64_t v59 = sub_224A7B530(v53, v54, v55, v56, v57, v58);
    uint64_t v65 = sub_224A7B530(v59, v60, v61, v62, v63, v64);
    return (uint8x8_t *)sub_224A7B530(v65, v66, v67, v68, v69, v70);
  }
  else
  {
    vld1q_dup_s16(a3);
    *a3 = 0;
    return sub_224A785B8(a1, a2, (uint64_t)a3, a4, 16);
  }
}

int8x8_t sub_224A804F8(uint8x16_t *a1, uint64_t a2, __int16 *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A7B360((uint64_t (*)(void))sub_224A79AA0, a3, 64);
    uint64_t v8 = (_OWORD *)(v7 + 256);
    int v9 = 24;
    if (v10 < v11
      || (sub_224A7B360(v6, (_OWORD *)(v5 + 16), 64), uint64_t v8 = (_OWORD *)(v14 + 512), v9 = 16, v15 < v16)
      || (sub_224A7B360(v13, (_OWORD *)(v12 + 32), 64), uint64_t v8 = (_OWORD *)(v19 + 768), v9 = 8, v20 < v21))
    {
      do
      {
        BOOL v22 = __OFSUB__(v9, 8);
        v9 -= 8;
        _OWORD *v8 = 0uLL;
        v8[1] = 0uLL;
        v8[2] = 0uLL;
        v8[3] = 0uLL;
        uint64_t v23 = v8 + 4;
        *uint64_t v23 = 0uLL;
        v23[1] = 0uLL;
        v23[2] = 0uLL;
        v23[3] = 0uLL;
        v23 += 4;
        *uint64_t v23 = 0uLL;
        v23[1] = 0uLL;
        v23[2] = 0uLL;
        v23[3] = 0uLL;
        v23 += 4;
        *uint64_t v23 = 0uLL;
        v23[1] = 0uLL;
        v23[2] = 0uLL;
        v23[3] = 0uLL;
        uint64_t v8 = v23 + 4;
      }
      while (!((v9 < 0) ^ v22 | (v9 == 0)));
    }
    else
    {
      sub_224A7B360(v18, (_OWORD *)(v17 + 48), 64);
    }
    sub_224A7F0E4();
    sub_224A7FD6C((uint64_t)v24, v25, v26, v27, v28, v29, v24, v30, v38);
    sub_224A7F0E4();
    return sub_224A7FD6C((uint64_t)v31, v32, v33, v34, v35, v36, v31 + 1, v37, v39);
  }
  else
  {
    vld1q_dup_s16(a3);
    *a3 = 0;
    sub_224A784E8(a1, a2, (uint64_t)a3, a4, 64);
  }
  return result;
}

uint64_t sub_224A80608(void *a1, int8x16_t *a2, int a3, unsigned int a4)
{
  int8x16_t v4 = vextq_s8(*a2, *a2, 0xCuLL);
  return ((uint64_t (*)(void *, void, __n128, __n128, __n128))((char *)&qword_224A80690
                                                                           - *((unsigned __int16 *)&qword_224A80690
                                                                             + __clz(a4)
                                                                             - 26)))(a1 + 1, *a1 + (12 * a3), (__n128)vextq_s8(v4, *a2, 4uLL), (__n128)vextq_s8(v4, *a2, 8uLL), (__n128)vextq_s8(v4, *a2, 0xCuLL));
}

void sub_224A80668(__n128 a1, __n128 a2, __n128 a3, uint64_t a4, __n128 *a5)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  uint64_t v8 = a5 + 3;
  __n128 *v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  v8 += 3;
  __n128 *v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  v8 += 3;
  __n128 *v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  v8 += 3;
  __n128 *v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  v8 += 3;
  __n128 *v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  v8 += 3;
  __n128 *v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  v8 += 3;
  __n128 *v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  if (!(v6 ^ v7 | v5)) {
    JUMPOUT(0x224A80638);
  }
}

uint64_t sub_224A8069C(double a1, int8x8_t a2, int16x8_t a3, __n128 a4, int8x16_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int8x8_t *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v14 = byte_224A80848;
  int v15 = (int8x16_t *)&unk_2646ED120;
  uint8x8_t v16 = (uint8x8_t)33620481;
  *(int8x8_t *)v13.i8 = vext_s8(0, *a9, 7uLL);
  uint64_t v17 = 24;
  a10 = (int)a10;
  a12 = (int)a12;
  char v18 = 2 * a13;
  do
  {
    uint64_t v19 = *(void *)(a8 + 8 * (v18 & 0x1E)) + 12;
    uint64_t v20 = v19 + a10 * v17;
    int v21 = (int64x2_t *)(v19 + a12 * v17);
    do
    {
      int64x2_t v22 = *v21;
      uint64_t v23 = &v14[4 * v21->u8[10]];
      a2.i16[0] = v21->i16[4];
      uint64_t v24 = (int64x2_t *)((char *)v21 + 2 * *(unsigned __int16 *)v23);
      a3.i64[0] = v22.i64[0];
      if ((uint64_t)v24 < v20)
      {
        a5 = *(int8x16_t *)v24;
        a2.i16[1] = v24->i16[4];
        a3 = (int16x8_t)vtrn1q_s64(v22, *v24);
      }
      int16x4_t v25 = (int16x4_t)vand_s8((int8x8_t)*(_OWORD *)&vmull_u8((uint8x8_t)vqtbl1_s8(v13, a2), v16), (int8x8_t)vmovn_s32(vceqzq_s32((int32x4_t)vshrq_n_u16((uint16x8_t)vabsq_s16(a3), 0xCuLL))));
      v25.i32[0] = vpadd_s16(v25, v25).u32[0];
      __n128 v26 = (__n128)vqtbl1q_s8((int8x16_t)v22, v15[v25.u16[0]]);
      __n128 v27 = (__n128)vqtbl1q_s8(a5, v15[v25.u16[1]]);
      __n128 v28 = (__n128)vextq_s8((int8x16_t)v26, (int8x16_t)v26, 1uLL);
      __n128 v29 = (__n128)vextq_s8((int8x16_t)v27, (int8x16_t)v27, 1uLL);
      uint64_t v30 = ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128, __n128))&v14[-*((unsigned __int16 *)v23 + 1)])(v26, v28, (__n128)vextq_s8((int8x16_t)v26, (int8x16_t)v28, 4uLL), a4, v27, v29, (__n128)vextq_s8((int8x16_t)v27, (int8x16_t)v29, 4uLL));
      if (v37 == v38) {
        break;
      }
      uint64_t v30 = v34(v30, (__n128)a5, v35, v36);
    }
    while (v37 != v38);
    char v18 = v33 + 2;
    uint64_t result = v30 + v31;
  }
  while (v32 > 1);
  return result;
}

void sub_224A807E0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_DWORD *)a5 = LODWORD(a1);
  *(unsigned char *)(a5 + 4) = BYTE4(a1);
}

void sub_224A807F4(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)a5 = a1.n128_u64[0];
  *(_WORD *)(a5 + 8) = a1.n128_u16[4];
}

void sub_224A80808(__n128 a1, float a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 *a6)
{
  *a6 = a1;
  a6[1].n128_f32[0] = a2;
}

void sub_224A80818(__n128 a1, __n128 a2, __n128 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(__n128 *)a7 = a1;
  *(__n128 *)(a7 + 16) = a2;
  *(__n128 *)(a7 + 24) = a3;
}

void sub_224A80828(__n128 a1, __n128 a2, __n128 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(__n128 *)a7 = a1;
  *(__n128 *)(a7 + 16) = a2;
  *(__n128 *)(a7 + 30) = a1;
  *(__n128 *)(a7 + 46) = a2;
  *(void *)(a7 + 60) = a1.n128_u64[0];
  *(__n128 *)(a7 + 64) = a3;
}

uint64_t sub_224A808A0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  v4.n128_u64[0] = 0x8080808080808080;
  v4.n128_u64[1] = 0x8080808080808080;
  return ((uint64_t (*)(__n128))((char *)aHd - (unsigned __int16)aHd[__clz(a4) - 25]))(v4);
}

float *sub_224A808C4(float *result, uint64_t a2, float a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, float *a8)
{
  do
  {
    *uint64_t result = a3;
    uint64_t v8 = (float *)((char *)result + a2);
    *a8 = a3;
    int v9 = (float *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    float *v8 = a3;
    uint64_t result = (float *)((char *)v8 + a2);
    float *v9 = a3;
    a8 = (float *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

double *sub_224A808E0(double *result, uint64_t a2, double a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, double *a8)
{
  do
  {
    *uint64_t result = a3;
    uint64_t v8 = (double *)((char *)result + a2);
    *a8 = a3;
    int v9 = (double *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    double *v8 = a3;
    uint64_t result = (double *)((char *)v8 + a2);
    double *v9 = a3;
    a8 = (double *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

__n128 *sub_224A808FC(__n128 *result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, __n128 *a8)
{
  do
  {
    *uint64_t result = a3;
    uint64_t v8 = (__n128 *)((char *)result + a2);
    *a8 = a3;
    int v9 = (__n128 *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    __n128 *v8 = a3;
    uint64_t result = (__n128 *)((char *)v8 + a2);
    __n128 *v9 = a3;
    a8 = (__n128 *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

uint64_t sub_224A80918(uint64_t result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  *(void *)&long long v8 = 0x8080808080808080;
  *((void *)&v8 + 1) = 0x8080808080808080;
  do
  {
    *(__n128 *)uint64_t result = a3;
    *(_OWORD *)(result + 16) = v8;
    uint64_t v9 = result + a2;
    *(__n128 *)a8 = a3;
    *(_OWORD *)(a8 + 16) = v8;
    uint64_t v10 = a8 + a2;
    BOOL v11 = __OFSUB__(a6, 4);
    a6 -= 4;
    *(__n128 *)uint64_t v9 = a3;
    *(_OWORD *)(v9 + 16) = v8;
    uint64_t result = v9 + a2;
    *(__n128 *)uint64_t v10 = a3;
    *(_OWORD *)(v10 + 16) = v8;
    a8 = v10 + a2;
  }
  while (!((a6 < 0) ^ v11 | (a6 == 0)));
  return result;
}

uint64_t sub_224A80938(uint64_t result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  *(void *)&long long v8 = 0x8080808080808080;
  *((void *)&v8 + 1) = 0x8080808080808080;
  *(void *)&long long v9 = 0x8080808080808080;
  *((void *)&v9 + 1) = 0x8080808080808080;
  *(void *)&long long v10 = 0x8080808080808080;
  *((void *)&v10 + 1) = 0x8080808080808080;
  do
  {
    *(__n128 *)uint64_t result = a3;
    *(_OWORD *)(result + 16) = v8;
    *(_OWORD *)(result + 32) = v9;
    *(_OWORD *)(result + 48) = v10;
    uint64_t v11 = result + a2;
    *(__n128 *)a8 = a3;
    *(_OWORD *)(a8 + 16) = v8;
    *(_OWORD *)(a8 + 32) = v9;
    *(_OWORD *)(a8 + 48) = v10;
    uint64_t v12 = a8 + a2;
    BOOL v13 = __OFSUB__(a6, 4);
    a6 -= 4;
    *(__n128 *)uint64_t v11 = a3;
    *(_OWORD *)(v11 + 16) = v8;
    *(_OWORD *)(v11 + 32) = v9;
    *(_OWORD *)(v11 + 48) = v10;
    uint64_t result = v11 + a2;
    *(__n128 *)uint64_t v12 = a3;
    *(_OWORD *)(v12 + 16) = v8;
    *(_OWORD *)(v12 + 32) = v9;
    *(_OWORD *)(v12 + 48) = v10;
    a8 = v12 + a2;
  }
  while (!((a6 < 0) ^ v13 | (a6 == 0)));
  return result;
}

uint64_t sub_224A8096C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)asc_224A80A30 - (unsigned __int16)asc_224A80A30[__clz(a4) - 25]))();
}

_DWORD *sub_224A80990(_DWORD *result, uint64_t a2, int *a3, uint64_t a4, int a5, uint64_t a6, _DWORD *a7)
{
  int v7 = *a3;
  do
  {
    *uint64_t result = v7;
    long long v8 = (_DWORD *)((char *)result + a2);
    *a7 = v7;
    long long v9 = (_DWORD *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    _DWORD *v8 = v7;
    uint64_t result = (_DWORD *)((char *)v8 + a2);
    _DWORD *v9 = v7;
    a7 = (_DWORD *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

void *sub_224A809B0(void *result, uint64_t a2, uint64_t *a3, uint64_t a4, int a5, uint64_t a6, void *a7)
{
  uint64_t v7 = *a3;
  do
  {
    *uint64_t result = v7;
    long long v8 = (void *)((char *)result + a2);
    *a7 = v7;
    long long v9 = (void *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    void *v8 = v7;
    uint64_t result = (void *)((char *)v8 + a2);
    void *v9 = v7;
    a7 = (void *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

_OWORD *sub_224A809D0(_OWORD *result, uint64_t a2, long long *a3, uint64_t a4, int a5, uint64_t a6, _OWORD *a7)
{
  long long v7 = *a3;
  do
  {
    *uint64_t result = v7;
    long long v8 = (_OWORD *)((char *)result + a2);
    *a7 = v7;
    long long v9 = (_OWORD *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    _OWORD *v8 = v7;
    uint64_t result = (_OWORD *)((char *)v8 + a2);
    _OWORD *v9 = v7;
    a7 = (_OWORD *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

_OWORD *sub_224A809F0(_OWORD *result, uint64_t a2, long long *a3, uint64_t a4, int a5, uint64_t a6, _OWORD *a7)
{
  long long v7 = *a3;
  long long v8 = a3[1];
  do
  {
    *uint64_t result = v7;
    result[1] = v8;
    long long v9 = (_OWORD *)((char *)result + a2);
    *a7 = v7;
    a7[1] = v8;
    BOOL v10 = (_OWORD *)((char *)a7 + a2);
    BOOL v11 = __OFSUB__(a5, 4);
    a5 -= 4;
    _OWORD *v9 = v7;
    v9[1] = v8;
    uint64_t result = (_OWORD *)((char *)v9 + a2);
    _OWORD *v10 = v7;
    v10[1] = v8;
    a7 = (_OWORD *)((char *)v10 + a2);
  }
  while (!((a5 < 0) ^ v11 | (a5 == 0)));
  return result;
}

_OWORD *sub_224A80A10(_OWORD *result, uint64_t a2, long long *a3, uint64_t a4, int a5, uint64_t a6, _OWORD *a7)
{
  long long v7 = *a3;
  long long v8 = a3[1];
  long long v9 = a3[2];
  long long v10 = a3[3];
  do
  {
    *uint64_t result = v7;
    result[1] = v8;
    result[2] = v9;
    result[3] = v10;
    BOOL v11 = (_OWORD *)((char *)result + a2);
    *a7 = v7;
    a7[1] = v8;
    a7[2] = v9;
    a7[3] = v10;
    uint64_t v12 = (_OWORD *)((char *)a7 + a2);
    BOOL v13 = __OFSUB__(a5, 4);
    a5 -= 4;
    *BOOL v11 = v7;
    v11[1] = v8;
    v11[2] = v9;
    v11[3] = v10;
    uint64_t result = (_OWORD *)((char *)v11 + a2);
    *uint64_t v12 = v7;
    v12[1] = v8;
    v12[2] = v9;
    v12[3] = v10;
    a7 = (_OWORD *)((char *)v12 + a2);
  }
  while (!((a5 < 0) ^ v13 | (a5 == 0)));
  return result;
}

uint64_t sub_224A80A3C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&dword_224A80B34 - *((unsigned __int16 *)&dword_224A80B34 + __clz(a4) - 25)))();
}

_DWORD *sub_224A80A64(_DWORD *result, uint64_t a2, const char *a3, uint64_t a4, int a5, uint64_t a6, _DWORD *a7, uint64_t a8)
{
  do
  {
    int8x8x4_t v11 = vld4_dup_s8(a3);
    a3 += a8;
    *uint64_t result = v11.val[3].i32[0];
    long long v8 = (_DWORD *)((char *)result + a2);
    *a7 = v11.val[2].i32[0];
    long long v9 = (_DWORD *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    _DWORD *v8 = v11.val[1].i32[0];
    uint64_t result = (_DWORD *)((char *)v8 + a2);
    _DWORD *v9 = v11.val[0].i32[0];
    a7 = (_DWORD *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

int8x8_t *sub_224A80A84(int8x8_t *result, uint64_t a2, const char *a3, uint64_t a4, int a5, uint64_t a6, int8x8_t *a7, uint64_t a8)
{
  do
  {
    int8x8x4_t v11 = vld4_dup_s8(a3);
    a3 += a8;
    *uint64_t result = v11.val[3];
    long long v8 = (int8x8_t *)((char *)result + a2);
    *a7 = v11.val[2];
    long long v9 = (int8x8_t *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    int8x8_t *v8 = v11.val[1];
    uint64_t result = (int8x8_t *)((char *)v8 + a2);
    int8x8_t *v9 = v11.val[0];
    a7 = (int8x8_t *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

int8x16_t *sub_224A80AA4(int8x16_t *result, uint64_t a2, const char *a3, uint64_t a4, int a5, uint64_t a6, int8x16_t *a7, uint64_t a8)
{
  do
  {
    int8x16x4_t v11 = vld4q_dup_s8(a3);
    a3 += a8;
    *uint64_t result = v11.val[3];
    long long v8 = (int8x16_t *)((char *)result + a2);
    *a7 = v11.val[2];
    long long v9 = (int8x16_t *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    int8x16_t *v8 = v11.val[1];
    uint64_t result = (int8x16_t *)((char *)v8 + a2);
    int8x16_t *v9 = v11.val[0];
    a7 = (int8x16_t *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

int8x16_t *sub_224A80AC4(int8x16_t *result, uint64_t a2, const char *a3, uint64_t a4, int a5, uint64_t a6, int8x16_t *a7, uint64_t a8)
{
  do
  {
    int8x16x4_t v11 = vld4q_dup_s8(a3);
    a3 += a8;
    result[1] = v11.val[3];
    a7[1] = v11.val[2];
    *uint64_t result = v11.val[3];
    long long v8 = (int8x16_t *)((char *)result + a2);
    *a7 = v11.val[2];
    long long v9 = (int8x16_t *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    v8[1] = v11.val[1];
    v9[1] = v11.val[0];
    int8x16_t *v8 = v11.val[1];
    uint64_t result = (int8x16_t *)((char *)v8 + a2);
    int8x16_t *v9 = v11.val[0];
    a7 = (int8x16_t *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

int8x16_t *sub_224A80AF4(int8x16_t *result, uint64_t a2, const char *a3, uint64_t a4, int a5, uint64_t a6, int8x16_t *a7, uint64_t a8)
{
  do
  {
    int8x16x4_t v11 = vld4q_dup_s8(a3);
    a3 += a8;
    result[1] = v11.val[3];
    a7[1] = v11.val[2];
    result[2] = v11.val[3];
    result[3] = v11.val[3];
    a7[2] = v11.val[2];
    a7[3] = v11.val[2];
    *uint64_t result = v11.val[3];
    long long v8 = (int8x16_t *)((char *)result + a2);
    *a7 = v11.val[2];
    long long v9 = (int8x16_t *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    v8[1] = v11.val[1];
    v9[1] = v11.val[0];
    v8[2] = v11.val[1];
    v8[3] = v11.val[1];
    v9[2] = v11.val[0];
    v9[3] = v11.val[0];
    int8x16_t *v8 = v11.val[1];
    uint64_t result = (int8x16_t *)((char *)v8 + a2);
    int8x16_t *v9 = v11.val[0];
    a7 = (int8x16_t *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

uint64_t sub_224A80B40(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&qword_224A80C70 - *((unsigned __int16 *)&qword_224A80C70 + __clz(a4) - 25)))();
}

_DWORD *sub_224A80B64(_DWORD *result, uint64_t a2, const float *a3, int16x8_t a4, uint64_t a5, int a6, uint64_t a7, _DWORD *a8)
{
  *(float32x2_t *)a4.i8 = vld1_dup_f32(a3);
  a4.i16[0] = vaddlv_u8(*(uint8x8_t *)a4.i8);
  a4.i32[0] = vdup_lane_s8(vrshrn_n_s16(a4, 3uLL), 0).u32[0];
  do
  {
    *uint64_t result = a4.i32[0];
    long long v8 = (_DWORD *)((char *)result + a2);
    *a8 = a4.i32[0];
    long long v9 = (_DWORD *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    _DWORD *v8 = a4.i32[0];
    uint64_t result = (_DWORD *)((char *)v8 + a2);
    _DWORD *v9 = a4.i32[0];
    a8 = (_DWORD *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

void *sub_224A80B90(void *result, uint64_t a2, uint8x8_t *a3, int16x8_t a4, uint64_t a5, int a6, uint64_t a7, void *a8)
{
  *(uint8x8_t *)a4.i8 = *a3;
  a4.i16[0] = vaddlv_u8(*a3);
  *(int8x8_t *)a4.i8 = vdup_lane_s8(vrshrn_n_s16(a4, 3uLL), 0);
  do
  {
    *uint64_t result = a4.i64[0];
    long long v8 = (void *)((char *)result + a2);
    *a8 = a4.i64[0];
    long long v9 = (void *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    void *v8 = a4.i64[0];
    uint64_t result = (void *)((char *)v8 + a2);
    void *v9 = a4.i64[0];
    a8 = (void *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

int8x16_t *sub_224A80BBC(int8x16_t *result, uint64_t a2, uint8x16_t *a3, uint64_t a4, int a5, uint64_t a6, int8x16_t *a7)
{
  int16x8_t v7 = *(int16x8_t *)a3;
  v7.i16[0] = vaddlvq_u8(*a3);
  int8x16_t v8 = vdupq_lane_s8(vrshrn_n_s16(v7, 4uLL), 0);
  do
  {
    *uint64_t result = v8;
    long long v9 = (int8x16_t *)((char *)result + a2);
    *a7 = v8;
    BOOL v10 = (int8x16_t *)((char *)a7 + a2);
    BOOL v11 = __OFSUB__(a5, 4);
    a5 -= 4;
    int8x16_t *v9 = v8;
    uint64_t result = (int8x16_t *)((char *)v9 + a2);
    int8x16_t *v10 = v8;
    a7 = (int8x16_t *)((char *)v10 + a2);
  }
  while (!((a5 < 0) ^ v11 | (a5 == 0)));
  return result;
}

int8x16_t *sub_224A80BE8(int8x16_t *result, uint64_t a2, uint8x16_t *a3, double a4, double a5, int16x8_t a6, uint64_t a7, int a8, uint64_t a9, int8x16_t *a10)
{
  uint8x16_t v10 = *a3;
  uint8x16_t v11 = a3[1];
  v10.i16[0] = vaddlvq_u8(*a3);
  v11.i16[0] = vaddlvq_u8(v11);
  *(int16x4_t *)a6.i8 = vadd_s16(*(int16x4_t *)v10.i8, *(int16x4_t *)v11.i8);
  int8x16_t v12 = vdupq_lane_s8(vrshrn_n_s16(a6, 5uLL), 0);
  do
  {
    *uint64_t result = v12;
    result[1] = v12;
    BOOL v13 = (int8x16_t *)((char *)result + a2);
    *a10 = v12;
    a10[1] = v12;
    uint64_t v14 = (int8x16_t *)((char *)a10 + a2);
    BOOL v15 = __OFSUB__(a8, 4);
    a8 -= 4;
    *BOOL v13 = v12;
    v13[1] = v12;
    uint64_t result = (int8x16_t *)((char *)v13 + a2);
    *uint64_t v14 = v12;
    v14[1] = v12;
    a10 = (int8x16_t *)((char *)v14 + a2);
  }
  while (!((a8 < 0) ^ v15 | (a8 == 0)));
  return result;
}

int8x16_t *sub_224A80C20(int8x16_t *result, uint64_t a2, uint8x16_t *a3, double a4, double a5, double a6, double a7, int16x8_t a8, uint64_t a9, int a10, uint64_t a11, int8x16_t *a12)
{
  uint8x16_t v12 = *a3;
  uint8x16_t v13 = a3[1];
  uint8x16_t v14 = a3[2];
  uint8x16_t v15 = a3[3];
  v12.i16[0] = vaddlvq_u8(*a3);
  v13.i16[0] = vaddlvq_u8(v13);
  v14.i16[0] = vaddlvq_u8(v14);
  v15.i16[0] = vaddlvq_u8(v15);
  *(int16x4_t *)a8.i8 = vadd_s16(vadd_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)v13.i8), vadd_s16(*(int16x4_t *)v14.i8, *(int16x4_t *)v15.i8));
  int8x16_t v16 = vdupq_lane_s8(vrshrn_n_s16(a8, 6uLL), 0);
  do
  {
    *uint64_t result = v16;
    result[1] = v16;
    result[2] = v16;
    result[3] = v16;
    uint64_t v17 = (int8x16_t *)((char *)result + a2);
    *a12 = v16;
    a12[1] = v16;
    a12[2] = v16;
    a12[3] = v16;
    char v18 = (int8x16_t *)((char *)a12 + a2);
    BOOL v19 = __OFSUB__(a10, 4);
    a10 -= 4;
    *uint64_t v17 = v16;
    v17[1] = v16;
    v17[2] = v16;
    v17[3] = v16;
    uint64_t result = (int8x16_t *)((char *)v17 + a2);
    *char v18 = v16;
    v18[1] = v16;
    v18[2] = v16;
    v18[3] = v16;
    a12 = (int8x16_t *)((char *)v18 + a2);
  }
  while (!((a10 < 0) ^ v19 | (a10 == 0)));
  return result;
}

uint64_t sub_224A80C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return ((uint64_t (*)(void))((char *)qword_224A80DD0 - *((unsigned __int16 *)&qword_224A80DD0[-6] + __clz(a5) - 1)))();
}

uint64_t sub_224A80CB0(int16x8_t a1, uint64_t a2, uint64_t a3, const float *a4, uint64_t (*a5)(__n128))
{
  *(float32x2_t *)a1.i8 = vld1_dup_f32(a4);
  a1.i16[0] = vaddlv_u8(*(uint8x8_t *)a1.i8);
  return a5((__n128)vdupq_lane_s8(vrshrn_n_s16(a1, 3uLL), 0));
}

float *sub_224A80CC4(float *result, uint64_t a2, float a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, float *a8)
{
  do
  {
    *uint64_t result = a3;
    int8x16_t v8 = (float *)((char *)result + a2);
    *a8 = a3;
    long long v9 = (float *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    float *v8 = a3;
    uint64_t result = (float *)((char *)v8 + a2);
    float *v9 = a3;
    a8 = (float *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

uint64_t sub_224A80CE0(int16x8_t a1, uint64_t a2, uint64_t a3, uint8x8_t *a4, uint64_t (*a5)(__n128))
{
  *(uint8x8_t *)a1.i8 = *a4;
  a1.i16[0] = vaddlv_u8(*a4);
  return a5((__n128)vdupq_lane_s8(vrshrn_n_s16(a1, 3uLL), 0));
}

double *sub_224A80CF4(double *result, uint64_t a2, double a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, double *a8)
{
  do
  {
    *uint64_t result = a3;
    int8x16_t v8 = (double *)((char *)result + a2);
    *a8 = a3;
    long long v9 = (double *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    double *v8 = a3;
    uint64_t result = (double *)((char *)v8 + a2);
    double *v9 = a3;
    a8 = (double *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

uint64_t sub_224A80D10(uint64_t a1, uint64_t a2, uint8x16_t *a3, uint64_t (*a4)(__n128))
{
  int16x8_t v4 = *(int16x8_t *)a3;
  v4.i16[0] = vaddlvq_u8(*a3);
  return a4((__n128)vdupq_lane_s8(vrshrn_n_s16(v4, 4uLL), 0));
}

__n128 *sub_224A80D24(__n128 *result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, __n128 *a8)
{
  do
  {
    *uint64_t result = a3;
    int8x16_t v8 = (__n128 *)((char *)result + a2);
    *a8 = a3;
    long long v9 = (__n128 *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    __n128 *v8 = a3;
    uint64_t result = (__n128 *)((char *)v8 + a2);
    __n128 *v9 = a3;
    a8 = (__n128 *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

uint64_t sub_224A80D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(__n128))
{
  int16x8_t v4 = *(int16x8_t *)a3;
  uint8x16_t v5 = *(uint8x16_t *)(a3 + 16);
  v4.i16[0] = vaddlvq_u8(*(uint8x16_t *)a3);
  v5.i16[0] = vaddlvq_u8(v5);
  *(int16x4_t *)v4.i8 = vadd_s16(*(int16x4_t *)v4.i8, *(int16x4_t *)v5.i8);
  return a4((__n128)vdupq_lane_s8(vrshrn_n_s16(v4, 5uLL), 0));
}

__n128 *sub_224A80D5C(__n128 *result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, __n128 *a8)
{
  do
  {
    *uint64_t result = a3;
    result[1] = a3;
    int8x16_t v8 = (__n128 *)((char *)result + a2);
    *a8 = a3;
    a8[1] = a3;
    long long v9 = (__n128 *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    __n128 *v8 = a3;
    v8[1] = a3;
    uint64_t result = (__n128 *)((char *)v8 + a2);
    __n128 *v9 = a3;
    v9[1] = a3;
    a8 = (__n128 *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

uint64_t sub_224A80D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(__n128))
{
  int16x8_t v4 = *(int16x8_t *)a3;
  uint8x16_t v5 = *(uint8x16_t *)(a3 + 16);
  uint8x16_t v6 = *(uint8x16_t *)(a3 + 32);
  uint8x16_t v7 = *(uint8x16_t *)(a3 + 48);
  v4.i16[0] = vaddlvq_u8(*(uint8x16_t *)a3);
  v5.i16[0] = vaddlvq_u8(v5);
  v6.i16[0] = vaddlvq_u8(v6);
  v7.i16[0] = vaddlvq_u8(v7);
  *(int16x4_t *)v4.i8 = vadd_s16(vadd_s16(*(int16x4_t *)v4.i8, *(int16x4_t *)v5.i8), vadd_s16(*(int16x4_t *)v6.i8, *(int16x4_t *)v7.i8));
  return a4((__n128)vdupq_lane_s8(vrshrn_n_s16(v4, 6uLL), 0));
}

__n128 *sub_224A80DA8(__n128 *result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, __n128 *a8)
{
  do
  {
    *uint64_t result = a3;
    result[1] = a3;
    result[2] = a3;
    result[3] = a3;
    int8x16_t v8 = (__n128 *)((char *)result + a2);
    *a8 = a3;
    a8[1] = a3;
    a8[2] = a3;
    a8[3] = a3;
    long long v9 = (__n128 *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    __n128 *v8 = a3;
    v8[1] = a3;
    v8[2] = a3;
    v8[3] = a3;
    uint64_t result = (__n128 *)((char *)v8 + a2);
    __n128 *v9 = a3;
    v9[1] = a3;
    v9[2] = a3;
    v9[3] = a3;
    a8 = (__n128 *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

uint64_t sub_224A80DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return ((uint64_t (*)(void))((char *)&dword_224A8107C - *((unsigned __int16 *)&dword_224A8107C + __clz(a5) - 25)))();
}

uint64_t sub_224A80E34(uint64_t a1, uint64_t a2, char *a3, uint64_t (*a4)(uint64_t, uint64_t, char *, float))
{
  uint8x8_t v4 = (uint8x8_t)*(unsigned int *)a3;
  v4.i16[0] = vaddlv_u8(v4);
  return a4(a1, a2, a3 + 5, *(float *)v4.i32);
}

unsigned __int32 *sub_224A80E48(unsigned __int32 *result, uint64_t a2, unsigned int *a3, int16x4_t a4, uint64_t a5, int a6, uint64_t a7, unsigned __int32 *a8)
{
  int16x4_t v10 = (int16x4_t)*a3;
  v10.i16[0] = vaddlv_u8((uint8x8_t)v10);
  int16x4_t v11 = (int16x4_t)vshl_u16((uint16x4_t)vadd_s16(vadd_s16(a4, v8), v10), v9);
  if (a6 != 4) {
    int16x4_t v11 = vqdmulh_s16(v11, vdup_n_s16(0x2AAB199Au >> (2 * a6)));
  }
  unsigned __int32 v12 = vdup_lane_s8((int8x8_t)v11, 0).u32[0];
  do
  {
    *uint64_t result = v12;
    uint8x16_t v13 = (unsigned __int32 *)((char *)result + a2);
    *a8 = v12;
    uint8x16_t v14 = (unsigned __int32 *)((char *)a8 + a2);
    BOOL v15 = __OFSUB__(a6, 4);
    a6 -= 4;
    *uint8x16_t v13 = v12;
    uint64_t result = (unsigned __int32 *)((char *)v13 + a2);
    *uint8x16_t v14 = v12;
    a8 = (unsigned __int32 *)((char *)v14 + a2);
  }
  while (!((a6 < 0) ^ v15 | (a6 == 0)));
  return result;
}

uint64_t sub_224A80EA0(uint64_t a1, uint64_t a2, uint8x8_t *a3, uint64_t (*a4)(uint64_t, uint64_t, __int8 *, float))
{
  uint8x8_t v4 = *a3;
  v4.i16[0] = vaddlv_u8(*a3);
  return a4(a1, a2, (__int8 *)&a3[1] + 1, *(float *)v4.i32);
}

int8x8_t *sub_224A80EB0(int8x8_t *result, uint64_t a2, uint8x8_t *a3, int16x4_t a4, uint64_t a5, int a6, uint64_t a7, int8x8_t *a8)
{
  int16x4_t v10 = (int16x4_t)*a3;
  v10.i16[0] = vaddlv_u8(*a3);
  int16x4_t v11 = (int16x4_t)vshl_u16((uint16x4_t)vadd_s16(vadd_s16(a4, v8), v10), v9);
  if (a6 != 8)
  {
    if (a6 == 32) {
      unsigned int v12 = 6554;
    }
    else {
      unsigned int v12 = 10923;
    }
    int16x4_t v11 = vqdmulh_s16(v11, vdup_n_s16(v12));
  }
  int8x8_t v13 = vdup_lane_s8((int8x8_t)v11, 0);
  do
  {
    *uint64_t result = v13;
    uint8x16_t v14 = (int8x8_t *)((char *)result + a2);
    *a8 = v13;
    BOOL v15 = (int8x8_t *)((char *)a8 + a2);
    BOOL v16 = __OFSUB__(a6, 4);
    a6 -= 4;
    *uint8x16_t v14 = v13;
    uint64_t result = (int8x8_t *)((char *)v14 + a2);
    *BOOL v15 = v13;
    a8 = (int8x8_t *)((char *)v15 + a2);
  }
  while (!((a6 < 0) ^ v16 | (a6 == 0)));
  return result;
}

uint64_t sub_224A80F04(uint64_t a1, uint64_t a2, uint8x16_t *a3, uint64_t (*a4)(uint64_t, uint64_t, __int8 *, float))
{
  uint8x16_t v4 = *a3;
  v4.i16[0] = vaddlvq_u8(*a3);
  return a4(a1, a2, &a3[1].i8[1], *(float *)v4.i32);
}

int8x16_t *sub_224A80F14(int8x16_t *result, uint64_t a2, uint8x16_t *a3, int16x4_t a4, uint64_t a5, int a6, uint64_t a7, int8x16_t *a8)
{
  uint8x16_t v10 = *a3;
  v10.i16[0] = vaddlvq_u8(*a3);
  int16x4_t v11 = (int16x4_t)vshl_u16((uint16x4_t)vadd_s16(vadd_s16(a4, v8), *(int16x4_t *)v10.i8), v9);
  if (a6 != 16)
  {
    if ((a6 & 0x38) != 0) {
      unsigned int v12 = 10923;
    }
    else {
      unsigned int v12 = 6554;
    }
    int16x4_t v11 = vqdmulh_s16(v11, vdup_n_s16(v12));
  }
  int8x16_t v13 = vdupq_lane_s8((int8x8_t)v11, 0);
  do
  {
    *uint64_t result = v13;
    uint8x16_t v14 = (int8x16_t *)((char *)result + a2);
    *a8 = v13;
    BOOL v15 = (int8x16_t *)((char *)a8 + a2);
    BOOL v16 = __OFSUB__(a6, 4);
    a6 -= 4;
    *uint8x16_t v14 = v13;
    uint64_t result = (int8x16_t *)((char *)v14 + a2);
    *BOOL v15 = v13;
    a8 = (int8x16_t *)((char *)v15 + a2);
  }
  while (!((a6 < 0) ^ v16 | (a6 == 0)));
  return result;
}

uint64_t sub_224A80F68(uint64_t a1, uint64_t a2, uint8x16_t *a3, uint64_t (*a4)(uint64_t, uint64_t, __int8 *, double))
{
  uint8x16_t v4 = *a3;
  uint8x16_t v5 = a3[1];
  v4.i16[0] = vaddlvq_u8(*a3);
  v5.i16[0] = vaddlvq_u8(v5);
  return a4(a1, a2, &a3[2].i8[1], COERCE_DOUBLE(vadd_s16(*(int16x4_t *)v4.i8, *(int16x4_t *)v5.i8)));
}

int8x16_t *sub_224A80F80(int8x16_t *result, uint64_t a2, uint8x16_t *a3, int16x4_t a4, uint64_t a5, int a6, uint64_t a7, int8x16_t *a8)
{
  uint8x16_t v10 = *a3;
  uint8x16_t v11 = a3[1];
  v10.i16[0] = vaddlvq_u8(*a3);
  v11.i16[0] = vaddlvq_u8(v11);
  int16x4_t v12 = (int16x4_t)vshl_u16((uint16x4_t)vadd_s16(vadd_s16(vadd_s16(a4, v8), *(int16x4_t *)v10.i8), *(int16x4_t *)v11.i8), v9);
  if (a6 != 32)
  {
    if (a6 == 8) {
      unsigned int v13 = 6554;
    }
    else {
      unsigned int v13 = 10923;
    }
    int16x4_t v12 = vqdmulh_s16(v12, vdup_n_s16(v13));
  }
  int8x16_t v14 = vdupq_lane_s8((int8x8_t)v12, 0);
  do
  {
    *uint64_t result = v14;
    result[1] = v14;
    BOOL v15 = (int8x16_t *)((char *)result + a2);
    *a8 = v14;
    a8[1] = v14;
    BOOL v16 = (int8x16_t *)((char *)a8 + a2);
    BOOL v17 = __OFSUB__(a6, 4);
    a6 -= 4;
    *BOOL v15 = v14;
    v15[1] = v14;
    uint64_t result = (int8x16_t *)((char *)v15 + a2);
    int8x16_t *v16 = v14;
    v16[1] = v14;
    a8 = (int8x16_t *)((char *)v16 + a2);
  }
  while (!((a6 < 0) ^ v17 | (a6 == 0)));
  return result;
}

uint64_t sub_224A80FE0(uint64_t a1, uint64_t a2, uint8x16_t *a3, uint64_t (*a4)(uint64_t, uint64_t, __int8 *, double))
{
  uint8x16_t v4 = *a3;
  uint8x16_t v5 = a3[1];
  uint8x16_t v6 = a3[2];
  uint8x16_t v7 = a3[3];
  v4.i16[0] = vaddlvq_u8(*a3);
  v5.i16[0] = vaddlvq_u8(v5);
  v6.i16[0] = vaddlvq_u8(v6);
  v7.i16[0] = vaddlvq_u8(v7);
  return a4(a1, a2, &a3[4].i8[1], COERCE_DOUBLE(vadd_s16(vadd_s16(*(int16x4_t *)v4.i8, *(int16x4_t *)v5.i8), vadd_s16(*(int16x4_t *)v6.i8, *(int16x4_t *)v7.i8))));
}

int8x16_t *sub_224A81008(int8x16_t *result, uint64_t a2, uint8x16_t *a3, int16x4_t a4, uint64_t a5, int a6, uint64_t a7, int8x16_t *a8)
{
  uint8x16_t v10 = *a3;
  uint8x16_t v11 = a3[1];
  uint8x16_t v12 = a3[2];
  uint8x16_t v13 = a3[3];
  v10.i16[0] = vaddlvq_u8(*a3);
  v11.i16[0] = vaddlvq_u8(v11);
  v12.i16[0] = vaddlvq_u8(v12);
  v13.i16[0] = vaddlvq_u8(v13);
  int16x4_t v14 = (int16x4_t)vshl_u16((uint16x4_t)vadd_s16(vadd_s16(vadd_s16(a4, v8), vadd_s16(*(int16x4_t *)v10.i8, *(int16x4_t *)v11.i8)), vadd_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)v13.i8)), v9);
  if (a6 != 64) {
    int16x4_t v14 = vqdmulh_s16(v14, vdup_n_s16(0x199A2AABu >> a6));
  }
  int8x16_t v15 = vdupq_lane_s8((int8x8_t)v14, 0);
  do
  {
    *uint64_t result = v15;
    result[1] = v15;
    result[2] = v15;
    result[3] = v15;
    BOOL v16 = (int8x16_t *)((char *)result + a2);
    *a8 = v15;
    a8[1] = v15;
    a8[2] = v15;
    a8[3] = v15;
    BOOL v17 = (int8x16_t *)((char *)a8 + a2);
    BOOL v18 = __OFSUB__(a6, 4);
    a6 -= 4;
    int8x16_t *v16 = v15;
    v16[1] = v15;
    v16[2] = v15;
    v16[3] = v15;
    uint64_t result = (int8x16_t *)((char *)v16 + a2);
    *BOOL v17 = v15;
    v17[1] = v15;
    v17[2] = v15;
    v17[3] = v15;
    a8 = (int8x16_t *)((char *)v17 + a2);
  }
  while (!((a6 < 0) ^ v18 | (a6 == 0)));
  return result;
}

uint64_t sub_224A81090(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, const char *a7, unsigned int a8)
{
  __n128 v8 = (__n128)vld1q_dup_s8(a7);
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128))((char *)&dword_224A812E4
                                                                         - *((unsigned __int16 *)&dword_224A812E4
                                                                           + __clz(a8)
                                                                           - 25)))(a1, a2, a3, a4, v8);
}

_DWORD *sub_224A810C0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, int a4@<W4>, _DWORD *a5@<X6>, uint64_t a6@<X7>, const float *a7@<X8>, int64x2_t a8@<Q0>, int64x2_t a9@<Q2>, uint8x16_t a10@<Q4>)
{
  int8x16_t v10 = (int8x16_t)vld1q_dup_f32(a7);
  uint16x8_t v11 = vsubl_u8(*(uint8x8_t *)v10.i8, *(uint8x8_t *)a10.i8);
  do
  {
    *(int8x8x4_t *)a8.i8 = vld4_dup_s8(a3);
    a3 += a6;
    *(int32x2_t *)a8.i8 = vzip1_s32(*(int32x2_t *)a8.i8, v12);
    *(int32x2_t *)a9.i8 = vzip1_s32(*(int32x2_t *)a9.i8, v13);
    uint8x16_t v14 = (uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v11, *(uint8x8_t *)a8.i8)), (int16x8_t)vaddw_u8(v11, *(uint8x8_t *)a9.i8));
    a8 = vzip1q_s64(a8, a9);
    uint8x16_t v15 = vabdq_u8((uint8x16_t)v10, v14);
    uint8x16_t v16 = vabdq_u8(a10, v14);
    int8x16_t v17 = vbslq_s8((int8x16_t)vcgeq_u8(vminq_u8(v15, v16), vabdq_u8((uint8x16_t)a8, v14)), (int8x16_t)a8, vbslq_s8((int8x16_t)vcgeq_u8(v16, v15), v10, (int8x16_t)a10));
    *uint64_t result = v17.i32[3];
    BOOL v18 = (_DWORD *)((char *)result + a2);
    *a5 = v17.i32[2];
    BOOL v19 = (_DWORD *)((char *)a5 + a2);
    BOOL v20 = __OFSUB__(a4, 4);
    a4 -= 4;
    *BOOL v18 = v17.i32[1];
    uint64_t result = (_DWORD *)((char *)v18 + a2);
    *BOOL v19 = v17.i32[0];
    a5 = (_DWORD *)((char *)v19 + a2);
  }
  while (!((a4 < 0) ^ v20 | (a4 == 0)));
  return result;
}

void *sub_224A81124@<X0>(void *result@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, int a4@<W4>, void *a5@<X6>, uint64_t a6@<X7>, const double *a7@<X8>, int64x2_t a8@<Q0>, int64x2_t a9@<Q1>, int64x2_t a10@<Q2>, int64x2_t a11@<Q3>, uint8x16_t a12@<Q4>)
{
  int8x16_t v12 = (int8x16_t)vld1q_dup_f64(a7);
  uint16x8_t v13 = vsubl_u8(*(uint8x8_t *)v12.i8, *(uint8x8_t *)a12.i8);
  do
  {
    *(int8x8x4_t *)a8.i8 = vld4_dup_s8(a3);
    a3 += a6;
    uint8x16_t v14 = (uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v13, *(uint8x8_t *)a8.i8)), (int16x8_t)vaddw_u8(v13, *(uint8x8_t *)a9.i8));
    uint8x16_t v15 = (uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v13, *(uint8x8_t *)a10.i8)), (int16x8_t)vaddw_u8(v13, *(uint8x8_t *)a11.i8));
    a10 = vzip1q_s64(a10, a11);
    a8 = vzip1q_s64(a8, a9);
    uint8x16_t v16 = vabdq_u8((uint8x16_t)v12, v15);
    uint8x16_t v17 = vabdq_u8((uint8x16_t)v12, v14);
    uint8x16_t v18 = vabdq_u8(a12, v15);
    uint8x16_t v19 = vabdq_u8(a12, v14);
    int8x16_t v20 = vbslq_s8((int8x16_t)vcgeq_u8(vminq_u8(v16, v18), vabdq_u8((uint8x16_t)a10, v15)), (int8x16_t)a10, vbslq_s8((int8x16_t)vcgeq_u8(v18, v16), v12, (int8x16_t)a12));
    int8x16_t v21 = vbslq_s8((int8x16_t)vcgeq_u8(vminq_u8(v17, v19), vabdq_u8((uint8x16_t)a8, v14)), (int8x16_t)a8, vbslq_s8((int8x16_t)vcgeq_u8(v19, v17), v12, (int8x16_t)a12));
    *uint64_t result = v20.i64[1];
    int64x2_t v22 = (void *)((char *)result + a2);
    *a5 = v20.i64[0];
    uint64_t v23 = (void *)((char *)a5 + a2);
    BOOL v24 = __OFSUB__(a4, 4);
    a4 -= 4;
    *int64x2_t v22 = v21.i64[1];
    uint64_t result = (void *)((char *)v22 + a2);
    *uint64_t v23 = v21.i64[0];
    a5 = (void *)((char *)v23 + a2);
  }
  while (!((a4 < 0) ^ v24 | (a4 == 0)));
  return result;
}

int8x16_t *sub_224A811B4@<X0>(int8x16_t *result@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, int a4@<W3>, int a5@<W4>, int8x16_t *a6@<X6>, uint64_t a7@<X7>, int8x16_t *a8@<X8>, uint8x16_t a9@<Q4>)
{
  int8x16_t v10 = *a8;
  uint16x4_t v9 = a8 + 1;
  unsigned int v11 = a4;
  int8x16_t v12 = (int8x16_t *)((char *)result + a2);
  uint16x8_t v13 = (int8x16_t *)((char *)a6 + a2);
  uint64_t v14 = 2 * a2 - a4;
  while (1)
  {
    int8x16x4_t v31 = vld4q_dup_s8(a3);
    a3 += a7;
    while (1)
    {
      uint16x8_t v15 = vsubl_u8(*(uint8x8_t *)v10.i8, *(uint8x8_t *)a9.i8);
      uint16x8_t v16 = vsubl_high_u8((uint8x16_t)v10, a9);
      uint8x16_t v17 = (uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v15, *(uint8x8_t *)v31.val[1].i8)), (int16x8_t)vaddw_u8(v16, *(uint8x8_t *)v31.val[1].i8));
      uint8x16_t v18 = (uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v15, *(uint8x8_t *)v31.val[0].i8)), (int16x8_t)vaddw_u8(v16, *(uint8x8_t *)v31.val[0].i8));
      uint8x16_t v19 = (uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v15, *(uint8x8_t *)v31.val[3].i8)), (int16x8_t)vaddw_u8(v16, *(uint8x8_t *)v31.val[3].i8));
      uint8x16_t v20 = (uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8(v15, *(uint8x8_t *)v31.val[2].i8)), (int16x8_t)vaddw_u8(v16, *(uint8x8_t *)v31.val[2].i8));
      uint8x16_t v21 = vabdq_u8((uint8x16_t)v10, v19);
      uint8x16_t v22 = vabdq_u8((uint8x16_t)v10, v20);
      uint8x16_t v23 = vabdq_u8((uint8x16_t)v10, v17);
      uint8x16_t v24 = vabdq_u8((uint8x16_t)v10, v18);
      uint8x16_t v25 = vabdq_u8(a9, v19);
      uint8x16_t v26 = vabdq_u8(a9, v20);
      uint8x16_t v27 = vabdq_u8(a9, v17);
      uint8x16_t v28 = vabdq_u8(a9, v18);
      BOOL v29 = __OFSUB__(a4, 16);
      a4 -= 16;
      *result++ = vbslq_s8((int8x16_t)vcgeq_u8(vminq_u8(v21, v25), vabdq_u8((uint8x16_t)v31.val[3], v19)), v31.val[3], vbslq_s8((int8x16_t)vcgeq_u8(v25, v21), v10, (int8x16_t)a9));
      *a6++ = vbslq_s8((int8x16_t)vcgeq_u8(vminq_u8(v22, v26), vabdq_u8((uint8x16_t)v31.val[2], v20)), v31.val[2], vbslq_s8((int8x16_t)vcgeq_u8(v26, v22), v10, (int8x16_t)a9));
      *v12++ = vbslq_s8((int8x16_t)vcgeq_u8(vminq_u8(v23, v27), vabdq_u8((uint8x16_t)v31.val[1], v17)), v31.val[1], vbslq_s8((int8x16_t)vcgeq_u8(v27, v23), v10, (int8x16_t)a9));
      *v13++ = vbslq_s8((int8x16_t)vcgeq_u8(vminq_u8(v24, v28), vabdq_u8((uint8x16_t)v31.val[0], v18)), v31.val[0], vbslq_s8((int8x16_t)vcgeq_u8(v28, v24), v10, (int8x16_t)a9));
      if ((a4 < 0) ^ v29 | (a4 == 0)) {
        break;
      }
      int8x16_t v10 = *v9++;
    }
    BOOL v29 = __OFSUB__(a5, 4);
    a5 -= 4;
    if ((a5 < 0) ^ v29 | (a5 == 0)) {
      break;
    }
    uint64_t v30 = (int8x16_t *)((char *)v9 - v11);
    uint64_t result = (int8x16_t *)((char *)result + v14);
    a6 = (int8x16_t *)((char *)a6 + v14);
    int8x16_t v10 = *v30;
    uint16x4_t v9 = v30 + 1;
    int8x16_t v12 = (int8x16_t *)((char *)v12 + v14);
    uint16x8_t v13 = (int8x16_t *)((char *)v13 + v14);
    a4 = v11;
  }
  return result;
}

uint64_t sub_224A812F0(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, unsigned int a9)
{
  uint16x4_t v9 = (const char *)(a7 - a9);
  __n128 v10 = (__n128)vld1q_dup_s8(v9);
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128))((char *)&qword_224A81558
                                                                         - *((unsigned __int16 *)&qword_224A81558
                                                                           + __clz(a8)
                                                                           - 25)))(a1, a2, a3, a4, v10);
}

_DWORD *sub_224A8132C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, _DWORD *a5@<X6>, const float *a6@<X8>, uint8x8_t a7@<D4>)
{
  int8x8_t v9 = (int8x8_t)vld1_dup_f32(a6);
  uint8x8_t v10 = (uint8x8_t)vld1_dup_f32(v7);
  unsigned int v11 = (const char *)(a3 - 4);
  int8x8_t v12 = (int8x8_t)vdupq_lane_s8(v9, 3).u64[0];
  int16x8_t v13 = (int16x8_t)vsubl_u8((uint8x8_t)v9, a7);
  int16x8_t v14 = (int16x8_t)vmovl_u8(v10);
  do
  {
    int8x8x4_t v20 = vld4_dup_s8(v11);
    v11 -= 4;
    int8x8x4_t v21 = vld4_dup_s8(v8);
    v8 += 4;
    int8x8_t v15 = vrshrn_n_s16((int16x8_t)vhaddq_u16((uint16x8_t)vmlaq_s16(vshll_n_s8(v12, 8uLL), (int16x8_t)vsubl_u8((uint8x8_t)vzip1_s32((int32x2_t)v20.val[3], (int32x2_t)v20.val[2]), (uint8x8_t)v12), v14), (uint16x8_t)vmlaq_s16(vshll_n_s8((int8x8_t)a7, 8uLL), v13, (int16x8_t)vmovl_u8((uint8x8_t)vzip1_s32((int32x2_t)v21.val[0], (int32x2_t)v21.val[1])))), 8uLL);
    int8x8_t v16 = vrshrn_n_s16((int16x8_t)vhaddq_u16((uint16x8_t)vmlaq_s16(vshll_n_s8(v12, 8uLL), (int16x8_t)vsubl_u8((uint8x8_t)vzip1_s32((int32x2_t)v20.val[1], (int32x2_t)v20.val[0]), (uint8x8_t)v12), v14), (uint16x8_t)vmlaq_s16(vshll_n_s8((int8x8_t)a7, 8uLL), v13, (int16x8_t)vmovl_u8((uint8x8_t)vzip1_s32((int32x2_t)v21.val[2], (int32x2_t)v21.val[3])))), 8uLL);
    *uint64_t result = v15.i32[0];
    uint8x16_t v17 = (_DWORD *)((char *)result + a2);
    *a5 = v15.i32[1];
    uint8x16_t v18 = (_DWORD *)((char *)a5 + a2);
    BOOL v19 = __OFSUB__(a4, 4);
    a4 -= 4;
    *uint8x16_t v17 = v16.i32[0];
    uint64_t result = (_DWORD *)((char *)v17 + a2);
    *uint8x16_t v18 = v16.i32[1];
    a5 = (_DWORD *)((char *)v18 + a2);
  }
  while (!((a4 < 0) ^ v19 | (a4 == 0)));
  return result;
}

int8x8_t *sub_224A813BC@<X0>(int8x8_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int8x8_t *a5@<X6>, int8x8_t *a6@<X8>, uint8x8_t a7@<D4>)
{
  int8x8_t v9 = (const char *)(a3 - 4);
  int8x8_t v10 = (int8x8_t)vdupq_lane_s8(*a6, 7).u64[0];
  int16x8_t v11 = (int16x8_t)vsubl_u8((uint8x8_t)*a6, a7);
  int16x8_t v12 = (int16x8_t)vmovl_u8(*v7);
  do
  {
    int8x8x4_t v16 = vld4_dup_s8(v9);
    v9 -= 4;
    int8x8x4_t v17 = vld4_dup_s8(v8);
    v8 += 4;
    *uint64_t result = vrshrn_n_s16((int16x8_t)vhaddq_u16((uint16x8_t)vmlaq_s16(vshll_n_s8(v10, 8uLL), (int16x8_t)vsubl_u8((uint8x8_t)v16.val[3], (uint8x8_t)v10), v12), (uint16x8_t)vmlaq_s16(vshll_n_s8((int8x8_t)a7, 8uLL), v11, (int16x8_t)vmovl_u8((uint8x8_t)v17.val[0]))), 8uLL);
    int16x8_t v13 = (int8x8_t *)((char *)result + a2);
    *a5 = vrshrn_n_s16((int16x8_t)vhaddq_u16((uint16x8_t)vmlaq_s16(vshll_n_s8(v10, 8uLL), (int16x8_t)vsubl_u8((uint8x8_t)v16.val[2], (uint8x8_t)v10), v12), (uint16x8_t)vmlaq_s16(vshll_n_s8((int8x8_t)a7, 8uLL), v11, (int16x8_t)vmovl_u8((uint8x8_t)v17.val[1]))), 8uLL);
    int16x8_t v14 = (int8x8_t *)((char *)a5 + a2);
    BOOL v15 = __OFSUB__(a4, 4);
    a4 -= 4;
    *int16x8_t v13 = vrshrn_n_s16((int16x8_t)vhaddq_u16((uint16x8_t)vmlaq_s16(vshll_n_s8(v10, 8uLL), (int16x8_t)vsubl_u8((uint8x8_t)v16.val[1], (uint8x8_t)v10), v12), (uint16x8_t)vmlaq_s16(vshll_n_s8((int8x8_t)a7, 8uLL), v11, (int16x8_t)vmovl_u8((uint8x8_t)v17.val[2]))), 8uLL);
    uint64_t result = (int8x8_t *)((char *)v13 + a2);
    *int16x8_t v14 = vrshrn_n_s16((int16x8_t)vhaddq_u16((uint16x8_t)vmlaq_s16(vshll_n_s8(v10, 8uLL), (int16x8_t)vsubl_u8((uint8x8_t)v16.val[0], (uint8x8_t)v10), v12), (uint16x8_t)vmlaq_s16(vshll_n_s8((int8x8_t)a7, 8uLL), v11, (int16x8_t)vmovl_u8((uint8x8_t)v17.val[3]))), 8uLL);
    a5 = (int8x8_t *)((char *)v14 + a2);
  }
  while (!((a4 < 0) ^ v15 | (a4 == 0)));
  return result;
}

int8x16_t *sub_224A8147C@<X0>(int8x16_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int8x16_t *a6@<X6>, uint8x16_t *a7@<X8>, uint8x16_t a8@<Q4>)
{
  int8x8_t v10 = (const char *)(a3 + a4);
  int16x8_t v11 = (const char *)(a3 - 2);
  int8x8_t v12 = (int8x8_t)vld1q_dup_s8(v10).u64[0];
  uint64_t v13 = a2 - a4;
  for (unsigned int i = a4; ; a4 = i)
  {
    int8x8x2_t v26 = vld2_dup_s8(v11);
    v11 -= 2;
    int8x8x2_t v27 = vld2_dup_s8(v9);
    v9 += 2;
    int16x8_t v15 = (int16x8_t)vsubl_u8((uint8x8_t)v26.val[0], (uint8x8_t)v12);
    int16x8_t v16 = (int16x8_t)vsubl_u8((uint8x8_t)v26.val[1], (uint8x8_t)v12);
    int16x8_t v17 = (int16x8_t)vmovl_u8((uint8x8_t)v27.val[0]);
    int16x8_t v18 = (int16x8_t)vmovl_u8((uint8x8_t)v27.val[1]);
    do
    {
      uint8x16_t v19 = *v8++;
      uint8x16_t v20 = *a7++;
      int16x8_t v21 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v19.i8);
      int16x8_t v22 = (int16x8_t)vmovl_high_u8(v19);
      int16x8_t v23 = (int16x8_t)vsubl_u8(*(uint8x8_t *)v20.i8, *(uint8x8_t *)a8.i8);
      int16x8_t v24 = (int16x8_t)vsubl_high_u8(v20, a8);
      BOOL v25 = __OFSUB__(a4, 16);
      a4 -= 16;
      *result++ = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vhaddq_u16((uint16x8_t)vmlaq_s16(vshll_n_s8(v12, 8uLL), v16, v21), (uint16x8_t)vmlaq_s16(vshll_n_s8(*(int8x8_t *)a8.i8, 8uLL), v23, v17)), 8uLL), (int16x8_t)vhaddq_u16((uint16x8_t)vmlaq_s16(vshll_n_s8(v12, 8uLL), v16, v22), (uint16x8_t)vmlaq_s16(vshll_n_s8(*(int8x8_t *)a8.i8, 8uLL), v24, v17)), 8uLL);
      *a6++ = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vhaddq_u16((uint16x8_t)vmlaq_s16(vshll_n_s8(v12, 8uLL), v15, v21), (uint16x8_t)vmlaq_s16(vshll_n_s8(*(int8x8_t *)a8.i8, 8uLL), v23, v18)), 8uLL), (int16x8_t)vhaddq_u16((uint16x8_t)vmlaq_s16(vshll_n_s8(v12, 8uLL), v15, v22), (uint16x8_t)vmlaq_s16(vshll_n_s8(*(int8x8_t *)a8.i8, 8uLL), v24, v18)), 8uLL);
    }
    while (!((a4 < 0) ^ v25 | (a4 == 0)));
    BOOL v25 = __OFSUB__(a5, 2);
    a5 -= 2;
    if ((a5 < 0) ^ v25 | (a5 == 0)) {
      break;
    }
    a7 = (uint8x16_t *)((char *)a7 - i);
    __n128 v8 = (uint8x16_t *)((char *)v8 - i);
    uint64_t result = (int8x16_t *)((char *)result + v13);
    a6 = (int8x16_t *)((char *)a6 + v13);
  }
  return result;
}

uint64_t sub_224A81564(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, unsigned int a9)
{
  int8x8_t v9 = (const char *)(a7 - a9);
  __n128 v10 = (__n128)vld1q_dup_s8(v9);
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128))((char *)&qword_224A81728
                                                                         - *((unsigned __int16 *)&qword_224A81728
                                                                           + __clz(a8)
                                                                           - 25)))(a1, a2, a3, a4, v10);
}

_DWORD *sub_224A8159C(_DWORD *result, uint64_t a2, const float *a3, double a4, double a5, double a6, double a7, uint8x8_t a8, uint64_t a9, int a10, uint64_t a11, _DWORD *a12, const char *a13)
{
  uint8x8_t v13 = (uint8x8_t)vld1_dup_f32(a3);
  int16x8_t v14 = (int16x8_t)vsubl_u8(v13, a8);
  do
  {
    int8x8x4_t v20 = vld4_dup_s8(a13);
    a13 += 4;
    int8x8_t v15 = vrshrn_n_s16(vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v14, (int16x8_t)vmovl_u8((uint8x8_t)vzip1_s32((int32x2_t)v20.val[0], (int32x2_t)v20.val[1]))), 8uLL);
    int8x8_t v16 = vrshrn_n_s16(vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v14, (int16x8_t)vmovl_u8((uint8x8_t)vzip1_s32((int32x2_t)v20.val[2], (int32x2_t)v20.val[3]))), 8uLL);
    *uint64_t result = v15.i32[0];
    int16x8_t v17 = (_DWORD *)((char *)result + a2);
    *a12 = v15.i32[1];
    int16x8_t v18 = (_DWORD *)((char *)a12 + a2);
    BOOL v19 = __OFSUB__(a10, 4);
    a10 -= 4;
    *int16x8_t v17 = v16.i32[0];
    uint64_t result = (_DWORD *)((char *)v17 + a2);
    *int16x8_t v18 = v16.i32[1];
    a12 = (_DWORD *)((char *)v18 + a2);
  }
  while (!((a10 < 0) ^ v19 | (a10 == 0)));
  return result;
}

int8x8_t *sub_224A815EC(int8x8_t *result, uint64_t a2, uint8x8_t *a3, double a4, double a5, double a6, double a7, uint8x8_t a8, uint64_t a9, int a10, uint64_t a11, int8x8_t *a12, const char *a13)
{
  int16x8_t v13 = (int16x8_t)vsubl_u8(*a3, a8);
  do
  {
    int8x8x4_t v17 = vld4_dup_s8(a13);
    a13 += 4;
    *uint64_t result = vrshrn_n_s16(vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v13, (int16x8_t)vmovl_u8((uint8x8_t)v17.val[0])), 8uLL);
    int16x8_t v14 = (int8x8_t *)((char *)result + a2);
    *a12 = vrshrn_n_s16(vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v13, (int16x8_t)vmovl_u8((uint8x8_t)v17.val[1])), 8uLL);
    int8x8_t v15 = (int8x8_t *)((char *)a12 + a2);
    BOOL v16 = __OFSUB__(a10, 4);
    a10 -= 4;
    *int16x8_t v14 = vrshrn_n_s16(vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v13, (int16x8_t)vmovl_u8((uint8x8_t)v17.val[2])), 8uLL);
    uint64_t result = (int8x8_t *)((char *)v14 + a2);
    *int8x8_t v15 = vrshrn_n_s16(vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v13, (int16x8_t)vmovl_u8((uint8x8_t)v17.val[3])), 8uLL);
    a12 = (int8x8_t *)((char *)v15 + a2);
  }
  while (!((a10 < 0) ^ v16 | (a10 == 0)));
  return result;
}

int8x16_t *sub_224A81654(int8x16_t *result, uint64_t a2, uint8x16_t *a3, int a4, int a5, double a6, double a7, double a8, double a9, uint8x16_t a10, uint64_t a11, int8x16_t *a12, const char *a13)
{
  int16x8_t v13 = (int8x16_t *)((char *)result + a2);
  int16x8_t v14 = (int8x16_t *)((char *)a12 + a2);
  uint64_t v15 = 2 * a2 - a4;
  for (unsigned int i = a4; ; a4 = i)
  {
    int8x8x4_t v25 = vld4_dup_s8(a13);
    a13 += 4;
    int16x8_t v17 = (int16x8_t)vmovl_u8((uint8x8_t)v25.val[0]);
    int16x8_t v18 = (int16x8_t)vmovl_u8((uint8x8_t)v25.val[1]);
    int16x8_t v19 = (int16x8_t)vmovl_u8((uint8x8_t)v25.val[2]);
    int16x8_t v20 = (int16x8_t)vmovl_u8((uint8x8_t)v25.val[3]);
    do
    {
      uint8x16_t v21 = *a3++;
      int16x8_t v22 = (int16x8_t)vsubl_u8(*(uint8x8_t *)v21.i8, *(uint8x8_t *)a10.i8);
      int16x8_t v23 = (int16x8_t)vsubl_high_u8(v21, a10);
      BOOL v24 = __OFSUB__(a4, 16);
      a4 -= 16;
      *result++ = vrshrn_high_n_s16(vrshrn_n_s16(vmlaq_s16(vshll_n_s8(*(int8x8_t *)a10.i8, 8uLL), v22, v17), 8uLL), vmlaq_s16(vshll_n_s8(*(int8x8_t *)a10.i8, 8uLL), v23, v17), 8uLL);
      *a12++ = vrshrn_high_n_s16(vrshrn_n_s16(vmlaq_s16(vshll_n_s8(*(int8x8_t *)a10.i8, 8uLL), v22, v18), 8uLL), vmlaq_s16(vshll_n_s8(*(int8x8_t *)a10.i8, 8uLL), v23, v18), 8uLL);
      *v13++ = vrshrn_high_n_s16(vrshrn_n_s16(vmlaq_s16(vshll_n_s8(*(int8x8_t *)a10.i8, 8uLL), v22, v19), 8uLL), vmlaq_s16(vshll_n_s8(*(int8x8_t *)a10.i8, 8uLL), v23, v19), 8uLL);
      *v14++ = vrshrn_high_n_s16(vrshrn_n_s16(vmlaq_s16(vshll_n_s8(*(int8x8_t *)a10.i8, 8uLL), v22, v20), 8uLL), vmlaq_s16(vshll_n_s8(*(int8x8_t *)a10.i8, 8uLL), v23, v20), 8uLL);
    }
    while (!((a4 < 0) ^ v24 | (a4 == 0)));
    BOOL v24 = __OFSUB__(a5, 4);
    a5 -= 4;
    if ((a5 < 0) ^ v24 | (a5 == 0)) {
      break;
    }
    a3 = (uint8x16_t *)((char *)a3 - i);
    uint64_t result = (int8x16_t *)((char *)result + v15);
    a12 = (int8x16_t *)((char *)a12 + v15);
    int16x8_t v13 = (int8x16_t *)((char *)v13 + v15);
    int16x8_t v14 = (int8x16_t *)((char *)v14 + v15);
  }
  return result;
}

uint64_t sub_224A81734(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9)
{
  int8x8_t v9 = (const char *)(a8 + a9);
  __n128 v10 = (__n128)vld1q_dup_s8(v9);
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))((char *)&dword_224A8190C
                                                                                 - *((unsigned __int16 *)&dword_224A8190C
                                                                                   + __clz(a9)
                                                                                   - 25)))(a1, a2, a3, a4, a5, v10);
}

_DWORD *sub_224A81768@<X0>(_DWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, _DWORD *a5@<X6>, const float *a6@<X8>, int8x8_t a7@<D5>)
{
  uint8x8_t v7 = (uint8x8_t)vld1_dup_f32(a6);
  __n128 v8 = (const char *)(a3 - 4);
  int16x8_t v9 = (int16x8_t)vmovl_u8(v7);
  do
  {
    int8x8x4_t v15 = vld4_dup_s8(v8);
    v8 -= 4;
    int8x8_t v10 = vrshrn_n_s16(vmlaq_s16(vshll_n_s8(a7, 8uLL), (int16x8_t)vsubl_u8((uint8x8_t)vzip1_s32((int32x2_t)v15.val[3], (int32x2_t)v15.val[2]), (uint8x8_t)a7), v9), 8uLL);
    int8x8_t v11 = vrshrn_n_s16(vmlaq_s16(vshll_n_s8(a7, 8uLL), (int16x8_t)vsubl_u8((uint8x8_t)vzip1_s32((int32x2_t)v15.val[1], (int32x2_t)v15.val[0]), (uint8x8_t)a7), v9), 8uLL);
    *uint64_t result = v10.i32[0];
    int8x8_t v12 = (_DWORD *)((char *)result + a2);
    *a5 = v10.i32[1];
    int16x8_t v13 = (_DWORD *)((char *)a5 + a2);
    BOOL v14 = __OFSUB__(a4, 4);
    a4 -= 4;
    *int8x8_t v12 = v11.i32[0];
    uint64_t result = (_DWORD *)((char *)v12 + a2);
    *int16x8_t v13 = v11.i32[1];
    a5 = (_DWORD *)((char *)v13 + a2);
  }
  while (!((a4 < 0) ^ v14 | (a4 == 0)));
  return result;
}

int8x8_t *sub_224A817C0@<X0>(int8x8_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int8x8_t *a5@<X6>, uint8x8_t *a6@<X8>, int8x8_t a7@<D5>)
{
  uint8x8_t v7 = (const char *)(a3 - 4);
  int16x8_t v8 = (int16x8_t)vmovl_u8(*a6);
  do
  {
    int8x8x4_t v12 = vld4_dup_s8(v7);
    v7 -= 4;
    *uint64_t result = vrshrn_n_s16(vmlaq_s16(vshll_n_s8(a7, 8uLL), (int16x8_t)vsubl_u8((uint8x8_t)v12.val[3], (uint8x8_t)a7), v8), 8uLL);
    int16x8_t v9 = (int8x8_t *)((char *)result + a2);
    *a5 = vrshrn_n_s16(vmlaq_s16(vshll_n_s8(a7, 8uLL), (int16x8_t)vsubl_u8((uint8x8_t)v12.val[2], (uint8x8_t)a7), v8), 8uLL);
    int8x8_t v10 = (int8x8_t *)((char *)a5 + a2);
    BOOL v11 = __OFSUB__(a4, 4);
    a4 -= 4;
    int8x8_t *v9 = vrshrn_n_s16(vmlaq_s16(vshll_n_s8(a7, 8uLL), (int16x8_t)vsubl_u8((uint8x8_t)v12.val[1], (uint8x8_t)a7), v8), 8uLL);
    uint64_t result = (int8x8_t *)((char *)v9 + a2);
    int8x8_t *v10 = vrshrn_n_s16(vmlaq_s16(vshll_n_s8(a7, 8uLL), (int16x8_t)vsubl_u8((uint8x8_t)v12.val[0], (uint8x8_t)a7), v8), 8uLL);
    a5 = (int8x8_t *)((char *)v10 + a2);
  }
  while (!((a4 < 0) ^ v11 | (a4 == 0)));
  return result;
}

int8x16_t *sub_224A81830@<X0>(int8x16_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int8x16_t *a6@<X6>, uint8x16_t *a7@<X8>, uint8x8_t a8@<D5>)
{
  int16x8_t v8 = (const char *)(a3 - 4);
  int16x8_t v9 = (int8x16_t *)((char *)result + a2);
  int8x8_t v10 = (int8x16_t *)((char *)a6 + a2);
  uint64_t v11 = 2 * a2 - a4;
  for (unsigned int i = a4; ; a4 = i)
  {
    int8x8x4_t v21 = vld4_dup_s8(v8);
    v8 -= 4;
    int16x8_t v13 = (int16x8_t)vsubl_u8((uint8x8_t)v21.val[0], a8);
    int16x8_t v14 = (int16x8_t)vsubl_u8((uint8x8_t)v21.val[1], a8);
    int16x8_t v15 = (int16x8_t)vsubl_u8((uint8x8_t)v21.val[2], a8);
    int16x8_t v16 = (int16x8_t)vsubl_u8((uint8x8_t)v21.val[3], a8);
    do
    {
      uint8x16_t v17 = *a7++;
      int16x8_t v18 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v17.i8);
      int16x8_t v19 = (int16x8_t)vmovl_high_u8(v17);
      BOOL v20 = __OFSUB__(a4, 16);
      a4 -= 16;
      *result++ = vrshrn_high_n_s16(vrshrn_n_s16(vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v16, v18), 8uLL), vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v16, v19), 8uLL);
      *a6++ = vrshrn_high_n_s16(vrshrn_n_s16(vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v15, v18), 8uLL), vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v15, v19), 8uLL);
      *v9++ = vrshrn_high_n_s16(vrshrn_n_s16(vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v14, v18), 8uLL), vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v14, v19), 8uLL);
      *v10++ = vrshrn_high_n_s16(vrshrn_n_s16(vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v13, v18), 8uLL), vmlaq_s16(vshll_n_s8((int8x8_t)a8, 8uLL), v13, v19), 8uLL);
    }
    while (!((a4 < 0) ^ v20 | (a4 == 0)));
    BOOL v20 = __OFSUB__(a5, 4);
    a5 -= 4;
    if ((a5 < 0) ^ v20 | (a5 == 0)) {
      break;
    }
    a7 = (uint8x16_t *)((char *)a7 - i);
    uint64_t result = (int8x16_t *)((char *)result + v11);
    a6 = (int8x16_t *)((char *)a6 + v11);
    int16x8_t v9 = (int8x16_t *)((char *)v9 + v11);
    int8x8_t v10 = (int8x16_t *)((char *)v10 + v11);
  }
  return result;
}

int8x16_t sub_224A81918(int8x16_t *a1, uint64_t a2, int8x16_t *a3, unsigned int a4)
{
  uint8x16_t v4 = &a3->i8[a4];
  int8x16_t v5 = vld1q_dup_s8(v4);
  v6.i64[0] = 0x9000900090009;
  v6.i64[1] = 0x9000900090009;
  int8x16_t v7 = vbslq_s8(*(int8x16_t *)((char *)&unk_2646ED188 - a4), v5, *a3);
  int8x16_t v8 = vextq_s8(v7, v5, 1uLL);
  uint8x16_t v9 = (uint8x16_t)vextq_s8(v7, v5, 2uLL);
  uint8x16_t v10 = (uint8x16_t)vextq_s8(v7, v5, 3uLL);
  int8x16_t v11 = vqrshrun_high_n_s16(vqrshrun_n_s16(vsubq_s16(vmulq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v8.i8, *(uint8x8_t *)v9.i8), v6), (int16x8_t)vaddl_u8(*(uint8x8_t *)v7.i8, *(uint8x8_t *)v10.i8)), 4uLL), vsubq_s16(vmulq_s16((int16x8_t)vaddl_high_u8((uint8x16_t)v8, v9), v6), (int16x8_t)vaddl_high_u8((uint8x16_t)v7, v10)), 4uLL);
  int8x16_t result = vzip1q_s8(v8, v11);
  *a1 = result;
  a1[1] = vzip2q_s8(v8, v11);
  return result;
}

int8x16_t sub_224A81980(int8x16_t *a1, unsigned int a2, int8x16_t *a3)
{
  long long v3 = &a3->i8[a2];
  int8x16_t v4 = vld1q_dup_s8(a3->i8);
  int8x16_t v5 = vld1q_dup_s8(v3);
  v6.i64[0] = 0x9000900090009;
  v6.i64[1] = 0x9000900090009;
  int8x16_t result = vbslq_s8(*(int8x16_t *)((char *)&unk_2646ED188 - a2), v5, *a3);
  int16x8_t v8 = vsubq_s16(vmulq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)result.i8, (uint8x8_t)*(_OWORD *)&vextq_s8(result, v5, 1uLL)), v6), (int16x8_t)vaddl_u8((uint8x8_t)*(_OWORD *)&vextq_s8(v4, result, 0xFuLL), (uint8x8_t)*(_OWORD *)&vextq_s8(result, v5, 2uLL)));
  *(int8x8_t *)v8.i8 = vqrshrun_n_s16(v8, 4uLL);
  a1[1].i8[0] = v5.i8[0];
  *a1 = vzip1q_s8(result, (int8x16_t)v8);
  return result;
}

int8x16_t *sub_224A819DC(int8x16_t *result, int a2, int8x16_t *a3, int a4, unsigned int a5)
{
  if (a5 == 3)
  {
    int16x8_t v22 = (int8x16_t *)((char *)a3 - 1);
    v23.i64[0] = 0x202020202020202;
    v23.i64[1] = 0x202020202020202;
    int8x16_t v27 = *v22;
    BOOL v24 = v22 + 1;
    v25.i64[0] = 0x404040404040404;
    v25.i64[1] = 0x404040404040404;
    v26.i64[0] = 0x404040404040404;
    v26.i64[1] = 0x404040404040404;
    v27.i8[0] = v27.i8[1];
    while (1)
    {
      int8x16_t v28 = *v24++;
      if (a4 < 18) {
        break;
      }
      uint8x16_t v29 = (uint8x16_t)vextq_s8(v27, v28, 1uLL);
      uint8x16_t v30 = (uint8x16_t)vextq_s8(v27, v28, 2uLL);
      uint8x16_t v31 = (uint8x16_t)vextq_s8(v27, v28, 3uLL);
      uint8x16_t v32 = (uint8x16_t)vextq_s8(v27, v28, 4uLL);
      int16x8_t v33 = (int16x8_t)vmlal_u8(vmlal_u8(vmlal_u8(vmlal_u8(vmull_u8(*(uint8x8_t *)v27.i8, *(uint8x8_t *)v23.i8), *(uint8x8_t *)v29.i8, *(uint8x8_t *)v25.i8), *(uint8x8_t *)v30.i8, *(uint8x8_t *)v26.i8), *(uint8x8_t *)v31.i8, *(uint8x8_t *)v25.i8), *(uint8x8_t *)v32.i8, *(uint8x8_t *)v23.i8);
      int16x8_t v34 = (int16x8_t)vmlal_high_u8(vmlal_high_u8(vmlal_high_u8(vmlal_high_u8(vmull_high_u8((uint8x16_t)v27, v23), v29, v25), v30, v26), v31, v25), v32, v23);
      BOOL v15 = __OFSUB__(a2, 16);
      a2 -= 16;
      int8x16_t v27 = v28;
      a4 -= 16;
      *result++ = vrshrn_high_n_s16(vrshrn_n_s16(v33, 4uLL), v34, 4uLL);
      if ((a2 < 0) ^ v15 | (a2 == 0)) {
        return result;
      }
    }
    __n128 v35 = (int8x16_t *)((char *)&unk_2646ED187 - a4);
    __n128 v36 = (char *)&v24[-1] + a4 - 15;
    int8x16_t v37 = vld1q_dup_s8(v36);
    int8x16_t v38 = vbslq_s8(*v35, v37, v27);
    int8x16_t v39 = vbslq_s8(v35[1], v37, v28);
    while (1)
    {
      uint8x16_t v40 = (uint8x16_t)vextq_s8(v38, v39, 1uLL);
      uint8x16_t v41 = (uint8x16_t)vextq_s8(v38, v39, 2uLL);
      uint8x16_t v42 = (uint8x16_t)vextq_s8(v38, v39, 3uLL);
      uint8x16_t v43 = (uint8x16_t)vextq_s8(v38, v39, 4uLL);
      int16x8_t v44 = (int16x8_t)vmlal_u8(vmlal_u8(vmlal_u8(vmlal_u8(vmull_u8(*(uint8x8_t *)v38.i8, *(uint8x8_t *)v23.i8), *(uint8x8_t *)v40.i8, *(uint8x8_t *)v25.i8), *(uint8x8_t *)v41.i8, *(uint8x8_t *)v26.i8), *(uint8x8_t *)v42.i8, *(uint8x8_t *)v25.i8), *(uint8x8_t *)v43.i8, *(uint8x8_t *)v23.i8);
      int16x8_t v45 = (int16x8_t)vmlal_high_u8(vmlal_high_u8(vmlal_high_u8(vmlal_high_u8(vmull_high_u8((uint8x16_t)v38, v23), v40, v25), v41, v26), v42, v25), v43, v23);
      BOOL v15 = __OFSUB__(a2, 16);
      a2 -= 16;
      int8x16_t v38 = v39;
      int8x16_t v39 = v37;
      a4 -= 16;
      *result++ = vrshrn_high_n_s16(vrshrn_n_s16(v44, 4uLL), v45, 4uLL);
      if ((a2 < 0) ^ v15 | (a2 == 0)) {
        break;
      }
      if (a4 < 0)
      {
        do
        {
          BOOL v15 = __OFSUB__(a2, 16);
          a2 -= 16;
          *result++ = v37;
        }
        while (!((a2 < 0) ^ v15 | (a2 == 0)));
        return result;
      }
    }
  }
  else
  {
    v5.i16[0] = *((_WORD *)&unk_2646ED1A5 + 2 * a5);
    int8x16_t v7 = *a3;
    int16x8_t v6 = a3 + 1;
    uint8x16_t v8 = (uint8x16_t)vdupq_lane_s8(v5, 0);
    uint8x16_t v9 = (uint8x16_t)vdupq_lane_s8(v5, 1);
    while (1)
    {
      int8x16_t v10 = *v6++;
      if (a4 < 17) {
        break;
      }
      uint8x16_t v11 = (uint8x16_t)vextq_s8(v7, v10, 1uLL);
      uint8x16_t v12 = (uint8x16_t)vextq_s8(v7, v10, 2uLL);
      int16x8_t v13 = (int16x8_t)vmlal_u8(vmlal_u8(vmull_u8(*(uint8x8_t *)v7.i8, *(uint8x8_t *)v8.i8), *(uint8x8_t *)v11.i8, *(uint8x8_t *)v9.i8), *(uint8x8_t *)v12.i8, *(uint8x8_t *)v8.i8);
      int16x8_t v14 = (int16x8_t)vmlal_high_u8(vmlal_high_u8(vmull_high_u8((uint8x16_t)v7, v8), v11, v9), v12, v8);
      BOOL v15 = __OFSUB__(a2, 16);
      a2 -= 16;
      int8x16_t v7 = v10;
      a4 -= 16;
      *result++ = vrshrn_high_n_s16(vrshrn_n_s16(v13, 4uLL), v14, 4uLL);
      if ((a2 < 0) ^ v15 | (a2 == 0)) {
        return result;
      }
    }
    int16x8_t v16 = &v6[-2].i8[a4];
    int8x16_t v17 = vld1q_dup_s8(v16);
    int8x16_t v18 = vbslq_s8(*(int8x16_t *)((char *)&unk_2646ED188 - a4), v17, v7);
    uint8x16_t v19 = (uint8x16_t)vextq_s8(v18, v17, 1uLL);
    uint8x16_t v20 = (uint8x16_t)vextq_s8(v18, v17, 2uLL);
    BOOL v15 = __OFSUB__(a2, 16);
    int v21 = a2 - 16;
    *int8x16_t result = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmlal_u8(vmull_u8(*(uint8x8_t *)v18.i8, *(uint8x8_t *)v8.i8), *(uint8x8_t *)v19.i8, *(uint8x8_t *)v9.i8), *(uint8x8_t *)v20.i8, *(uint8x8_t *)v8.i8), 4uLL), (int16x8_t)vmlal_high_u8(vmlal_high_u8(vmull_high_u8((uint8x16_t)v18, v8), v19, v9), v20, v8), 4uLL);
    for (++result; !((v21 < 0) ^ v15 | (v21 == 0)); ++result)
    {
      BOOL v15 = __OFSUB__(v21, 16);
      v21 -= 16;
      *int8x16_t result = v17;
    }
  }
  return result;
}

int8x16_t *sub_224A81BC8(int8x16_t *result, unsigned int a2, int a3)
{
  int8x16_t v3 = vdupq_n_s8(a2);
  do
  {
    BOOL v4 = __OFSUB__(a3, 16);
    a3 -= 16;
    *result++ = v3;
  }
  while (!((a3 < 0) ^ v4 | (a3 == 0)));
  return result;
}

uint64_t sub_224A81BDC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int8x16_t v7 = (const char *)(a3 + a7);
  vld1q_dup_s8(v7);
  return ((uint64_t (*)(void))((char *)&dword_224A81E04 - *((unsigned __int16 *)&dword_224A81E04 + __clz(a4) - 25)))();
}

_DWORD *sub_224A81C04(_DWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, unsigned int a8)
{
  while (1)
  {
    unsigned int v9 = a8 >> 6;
    unsigned int v10 = a8 & 0x3E;
    unsigned int v11 = a8 + a6;
    if ((int)v9 >= a7) {
      break;
    }
    int8x8_t v12 = *(int8x8_t *)(a3 + v9);
    int8x8_t v13 = *(int8x8_t *)(a3 + (v11 >> 6));
    int16x8_t v14 = (int16x8_t)vshll_n_u8((uint8x8_t)v12, 6uLL);
    int16x8_t v15 = (int16x8_t)vshll_n_u8((uint8x8_t)v13, 6uLL);
    *(int16x4_t *)v14.i8 = vmla_s16(*(int16x4_t *)v14.i8, (int16x4_t)*(_OWORD *)&vsubl_u8((uint8x8_t)vext_s8(v12, v12, 1uLL), (uint8x8_t)v12), vdup_n_s16(v10));
    *(int16x4_t *)v15.i8 = vmla_s16(*(int16x4_t *)v15.i8, (int16x4_t)*(_OWORD *)&vsubl_u8((uint8x8_t)vext_s8(v13, v13, 1uLL), (uint8x8_t)v13), vdup_n_s16(v11 & 0x3E));
    *int8x16_t result = vrshrn_n_s16(v14, 6uLL).u32[0];
    int16x8_t v16 = (_DWORD *)((char *)result + a2);
    a8 = v11 + a6;
    BOOL v17 = __OFSUB__(a5, 2);
    a5 -= 2;
    _DWORD *v16 = vrshrn_n_s16(v15, 6uLL).u32[0];
    int8x16_t result = (_DWORD *)((char *)v16 + a2);
    if ((a5 < 0) ^ v17 | (a5 == 0)) {
      return result;
    }
  }
  do
  {
    *int8x16_t result = v8;
    int8x16_t v18 = (_DWORD *)((char *)result + a2);
    BOOL v17 = __OFSUB__(a5, 2);
    a5 -= 2;
    *int8x16_t v18 = v8;
    int8x16_t result = (_DWORD *)((char *)v18 + a2);
  }
  while (!((a5 < 0) ^ v17 | (a5 == 0)));
  return result;
}

int8x8_t *sub_224A81C84(int8x8_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, unsigned int a8)
{
  while (1)
  {
    unsigned int v10 = a8 >> 6;
    unsigned int v11 = a8 & 0x3E;
    unsigned int v12 = a8 + a6;
    if ((int)v10 >= a7) {
      break;
    }
    int8x8_t v13 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)(a3 + (v12 >> 6)), (uint8x8_t)vdup_n_s8(v8 - (v12 & 0x3E))), (uint8x8_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)(a3 + (v12 >> 6)), *(int8x16_t *)(a3 + (v12 >> 6)), 1uLL), (uint8x8_t)vdup_n_s8(v12 & 0x3E)), 6uLL);
    *int8x16_t result = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)(a3 + v10), (uint8x8_t)vdup_n_s8(v8 - v11)), (uint8x8_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)(a3 + v10), *(int8x16_t *)(a3 + v10), 1uLL), (uint8x8_t)vdup_n_s8(v11)), 6uLL);
    int16x8_t v14 = (int8x8_t *)((char *)result + a2);
    a8 = v12 + a6;
    BOOL v15 = __OFSUB__(a5, 2);
    a5 -= 2;
    *int16x8_t v14 = v13;
    int8x16_t result = (int8x8_t *)((char *)v14 + a2);
    if ((a5 < 0) ^ v15 | (a5 == 0)) {
      return result;
    }
  }
  do
  {
    *int8x16_t result = v9;
    int16x8_t v16 = (int8x8_t *)((char *)result + a2);
    BOOL v15 = __OFSUB__(a5, 2);
    a5 -= 2;
    int8x8_t *v16 = v9;
    int8x16_t result = (int8x8_t *)((char *)v16 + a2);
  }
  while (!((a5 < 0) ^ v15 | (a5 == 0)));
  return result;
}

int8x16_t *sub_224A81D0C(int8x16_t *result, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, unsigned int a8)
{
  int v10 = a4;
  unsigned int v11 = (int8x16_t *)((char *)result + a2);
  uint64_t v12 = 2 * a2 - a4;
  while (1)
  {
    unsigned int v13 = a8 >> 6;
    unsigned int v14 = a8 & 0x3E;
    unsigned int v15 = a8 + a6;
    unsigned int v16 = v15 & 0x3E;
    if ((int)v13 >= a7) {
      break;
    }
    BOOL v17 = (int8x16_t *)(a3 + v13);
    int8x16_t v18 = (int8x16_t *)(a3 + (v15 >> 6));
    uint8x16_t v19 = (uint8x16_t)vdupq_n_s8(v14);
    uint8x16_t v20 = (uint8x16_t)vdupq_n_s8(v16);
    int8x16_t v22 = *v17;
    int8x16_t v23 = v17[1];
    int v21 = v17 + 2;
    int8x16_t v25 = *v18;
    int8x16_t v26 = v18[1];
    BOOL v24 = v18 + 2;
    uint8x16_t v27 = (uint8x16_t)vdupq_n_s8(v8 - v14);
    uint8x16_t v28 = (uint8x16_t)vdupq_n_s8(v8 - v16);
    a8 = v15 + a6;
    while (1)
    {
      uint8x16_t v29 = (uint8x16_t)vextq_s8(v22, v23, 1uLL);
      uint8x16_t v30 = (uint8x16_t)vextq_s8(v25, v26, 1uLL);
      BOOL v31 = __OFSUB__(a4, 16);
      a4 -= 16;
      *result++ = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v22.i8, *(uint8x8_t *)v27.i8), *(uint8x8_t *)v29.i8, *(uint8x8_t *)v19.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v22, v27), v29, v19), 6uLL);
      *v11++ = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v25.i8, *(uint8x8_t *)v28.i8), *(uint8x8_t *)v30.i8, *(uint8x8_t *)v20.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v25, v28), v30, v20), 6uLL);
      if ((a4 < 0) ^ v31 | (a4 == 0)) {
        break;
      }
      int8x16_t v22 = v23;
      int8x16_t v23 = *v21++;
      int8x16_t v25 = v26;
      int8x16_t v26 = *v24++;
    }
    BOOL v31 = __OFSUB__(a5, 2);
    a5 -= 2;
    if ((a5 < 0) ^ v31 | (a5 == 0)) {
      return result;
    }
    int8x16_t result = (int8x16_t *)((char *)result + v12);
    unsigned int v11 = (int8x16_t *)((char *)v11 + v12);
    a4 = v10;
  }
  while (1)
  {
    do
    {
      *result++ = v9;
      BOOL v31 = __OFSUB__(a4, 16);
      a4 -= 16;
      *v11++ = v9;
    }
    while (!((a4 < 0) ^ v31 | (a4 == 0)));
    BOOL v31 = __OFSUB__(a5, 2);
    a5 -= 2;
    if ((a5 < 0) ^ v31 | (a5 == 0)) {
      break;
    }
    int8x16_t result = (int8x16_t *)((char *)result + v12);
    unsigned int v11 = (int8x16_t *)((char *)v11 + v12);
    a4 = v10;
  }
  return result;
}

int8x8_t *sub_224A81E10(int8x8_t *result, uint64_t a2, uint64_t a3, int a4, int a5, unsigned int a6, signed int a7)
{
  int8x16_t v7 = (const char *)(a3 + a7);
  unint64_t v8 = vld1q_dup_s8(v7).u64[0];
  unsigned int v9 = a6;
  if (a4 == 8)
  {
    while (1)
    {
      unsigned int v24 = v9 >> 6;
      unsigned int v25 = v9 & 0x3E;
      unsigned int v26 = v9 + a6;
      if ((int)v24 >= a7) {
        break;
      }
      int8x8_t v27 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)*(_OWORD *)&vuzp2q_s8(*(int8x16_t *)(a3 + (v26 >> 6)), *(int8x16_t *)(a3 + (v26 >> 6))), (uint8x8_t)vdup_n_s8(v26 & 0x3E)), (uint8x8_t)*(_OWORD *)&vuzp1q_s8(*(int8x16_t *)(a3 + (v26 >> 6)), *(int8x16_t *)(a3 + (v26 >> 6))), (uint8x8_t)vdup_n_s8(64 - (v26 & 0x3E))), 6uLL);
      *int8x16_t result = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)*(_OWORD *)&vuzp2q_s8(*(int8x16_t *)(a3 + v24), *(int8x16_t *)(a3 + v24)), (uint8x8_t)vdup_n_s8(v25)), (uint8x8_t)*(_OWORD *)&vuzp1q_s8(*(int8x16_t *)(a3 + v24), *(int8x16_t *)(a3 + v24)), (uint8x8_t)vdup_n_s8(64 - v25)), 6uLL);
      uint8x16_t v28 = (int8x8_t *)((char *)result + a2);
      unsigned int v9 = v26 + a6;
      BOOL v22 = __OFSUB__(a5, 2);
      a5 -= 2;
      *uint8x16_t v28 = v27;
      int8x16_t result = (int8x8_t *)((char *)v28 + a2);
      if ((a5 < 0) ^ v22 | (a5 == 0)) {
        return result;
      }
    }
    do
    {
      *int8x16_t result = (int8x8_t)v8;
      uint8x16_t v29 = (unint64_t *)((char *)result + a2);
      BOOL v22 = __OFSUB__(a5, 2);
      a5 -= 2;
      *uint8x16_t v29 = v8;
      int8x16_t result = (int8x8_t *)((char *)v29 + a2);
    }
    while (!((a5 < 0) ^ v22 | (a5 == 0)));
  }
  else
  {
    while (1)
    {
      unsigned int v10 = v9 >> 6;
      unsigned int v11 = v9 & 0x3E;
      unsigned int v12 = v9 + a6;
      if ((int)v10 >= a7) {
        break;
      }
      int8x8_t v13 = *(int8x8_t *)(a3 + v10);
      int8x8_t v14 = *(int8x8_t *)(a3 + (v12 >> 6));
      uint8x8_t v15 = (uint8x8_t)vuzp2_s8(v13, v13);
      uint8x8_t v16 = (uint8x8_t)vuzp1_s8(v13, v13);
      uint8x8_t v17 = (uint8x8_t)vuzp2_s8(v14, v14);
      uint8x8_t v18 = (uint8x8_t)vuzp1_s8(v14, v14);
      int16x8_t v19 = (int16x8_t)vshll_n_u8(v16, 6uLL);
      int16x8_t v20 = (int16x8_t)vshll_n_u8(v18, 6uLL);
      *(int16x4_t *)v19.i8 = vmla_s16(*(int16x4_t *)v19.i8, (int16x4_t)*(_OWORD *)&vsubl_u8(v15, v16), vdup_n_s16(v11));
      *(int16x4_t *)v20.i8 = vmla_s16(*(int16x4_t *)v20.i8, (int16x4_t)*(_OWORD *)&vsubl_u8(v17, v18), vdup_n_s16(v12 & 0x3E));
      result->i32[0] = vrshrn_n_s16(v19, 6uLL).u32[0];
      int v21 = (int8x8_t *)((char *)result + a2);
      unsigned int v9 = v12 + a6;
      BOOL v22 = __OFSUB__(a5, 2);
      a5 -= 2;
      v21->i32[0] = vrshrn_n_s16(v20, 6uLL).u32[0];
      int8x16_t result = (int8x8_t *)((char *)v21 + a2);
      if ((a5 < 0) ^ v22 | (a5 == 0)) {
        return result;
      }
    }
    do
    {
      result->i32[0] = v8;
      int8x16_t v23 = (int8x8_t *)((char *)result + a2);
      BOOL v22 = __OFSUB__(a5, 2);
      a5 -= 2;
      v23->i32[0] = v8;
      int8x16_t result = (int8x8_t *)((char *)v23 + a2);
    }
    while (!((a5 < 0) ^ v22 | (a5 == 0)));
  }
  return result;
}

void *sub_224A81F40(void *result, uint64_t a2, int a3)
{
  int8x16_t v3 = (int8x16_t *)(a2 - 16);
  BOOL v4 = result + 1;
  do
  {
    BOOL v5 = __OFSUB__(a3, 16);
    a3 -= 16;
    int8x16_t v6 = vrev64q_s8(*v3--);
    *int8x16_t result = v6.i64[1];
    result += 2;
    void *v4 = v6.i64[0];
    v4 += 2;
  }
  while (!((a3 < 0) ^ v5 | (a3 == 0)));
  return result;
}

uint64_t sub_224A81F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return ((uint64_t (*)(void))((char *)&dword_224A82724 - *((unsigned __int16 *)&dword_224A82724 + __clz(a5) - 25)))();
}

_DWORD *sub_224A81F9C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, int a6@<W6>, unsigned int a7@<W7>, signed int a8@<W8>, int64x2_t a9@<Q6>, int64x2_t a10@<Q7>)
{
  *(int16x4_t *)v10.i8 = vdup_n_s16(a7);
  *(int16x4_t *)v10.i8 = vadd_s16(vmul_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)v10.i8), *(int16x4_t *)v10.i8);
  int32x2_t v12 = (int32x2_t)vmovn_s16(v11);
  int8x16_t v13 = *(int8x16_t *)a4;
  long long v14 = *(_OWORD *)(a4 + 16);
  int32x2_t v15 = (int32x2_t)vand_s8(vmovn_s16(v10), (int8x8_t)0x3E3E3E3E3E3E3E3ELL);
  int8x8_t v16 = vadd_s8(vshrn_n_s16(v10, 6uLL), (int8x8_t)0x101010101010101);
  int32x2_t v17 = (int32x2_t)vqtbl1_s8(*(int8x16_t *)a4, v16);
  int8x8_t v18 = (int8x8_t)vtrn1_s32((int32x2_t)vadd_s8(v16, (int8x8_t)0x101010101010101), (int32x2_t)vadd_s8(v16, (int8x8_t)0x202020202020202));
  int32x2_t v19 = (int32x2_t)vsub_s8((int8x8_t)0x4040404040404040, (int8x8_t)v15);
  int8x8_t v20 = (int8x8_t)vtrn1_s32(v12, v12);
  uint8x8_t v21 = (uint8x8_t)vtrn1_s32(v15, v15);
  uint8x8_t v22 = (uint8x8_t)vtrn1_s32(v19, v19);
  while (1)
  {
    int v23 = a8 >> 6;
    *(int16x4_t *)a9.i8 = vdup_n_s16(a8);
    signed int v24 = a8 - a6;
    if (v23 <= -4) {
      break;
    }
    *(int16x4_t *)a10.i8 = vdup_n_s16(v24);
    a9 = vtrn1q_s64(a9, a10);
    int32x2_t v25 = (int32x2_t)vqtbl1_s8(v13, v18);
    int8x8_t v26 = vshrn_n_s16((int16x8_t)a9, 6uLL);
    *(int8x8_t *)a9.i8 = vand_s8(vmovn_s16((int16x8_t)a9), (int8x8_t)0x3E3E3E3E3E3E3E3ELL);
    int8x8_t v27 = vbsl_s8(vcgez_s8(vadd_s8(v26, v20)), vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)vtrn1_s32(*(int32x2_t *)(a3 + v23), *(int32x2_t *)(a3 + (v24 >> 6))), (uint8x8_t)vsub_s8((int8x8_t)0x4040404040404040, *(int8x8_t *)a9.i8)), (uint8x8_t)vtrn1_s32((int32x2_t)vext_s8(*(int8x8_t *)(a3 + v23), *(int8x8_t *)(a3 + v23), 1uLL), (int32x2_t)vext_s8(*(int8x8_t *)(a3 + (v24 >> 6)), *(int8x8_t *)(a3 + (v24 >> 6)), 1uLL)), *(uint8x8_t *)a9.i8), 6uLL), vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)vtrn1_s32(v17, v25), v22), (uint8x8_t)v25, v21), 6uLL));
    *int8x16_t result = v27.i32[0];
    uint8x16_t v28 = (_DWORD *)((char *)result + a2);
    a8 = v24 - a6;
    BOOL v29 = __OFSUB__(a5, 2);
    a5 -= 2;
    *uint8x16_t v28 = v27.i32[1];
    int8x16_t result = (_DWORD *)((char *)v28 + a2);
    if ((a5 < 0) ^ v29 | (a5 == 0)) {
      return result;
    }
    int32x2_t v17 = (int32x2_t)vext_s8((int8x8_t)v25, (int8x8_t)v25, 4uLL);
    int8x8_t v18 = vadd_s8(v18, (int8x8_t)0x202020202020202);
  }
  while (1)
  {
    int32x2_t v30 = (int32x2_t)vqtbl2_s8(*(int8x16x2_t *)v13.i8, v18);
    int8x8_t v31 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)vtrn1_s32(v17, v30), v22), (uint8x8_t)v30, v21), 6uLL);
    *int8x16_t result = v31.i32[0];
    uint8x16_t v32 = (_DWORD *)((char *)result + a2);
    BOOL v29 = __OFSUB__(a5, 2);
    a5 -= 2;
    *uint8x16_t v32 = v31.i32[1];
    int8x16_t result = (_DWORD *)((char *)v32 + a2);
    if ((a5 < 0) ^ v29 | (a5 == 0)) {
      break;
    }
    int32x2_t v17 = (int32x2_t)vext_s8((int8x8_t)v30, (int8x8_t)v30, 4uLL);
    int8x8_t v18 = vadd_s8(v18, (int8x8_t)0x202020202020202);
  }
  return result;
}

void *sub_224A820BC@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, int a6@<W6>, unsigned int a7@<W7>, signed int a8@<W8>)
{
  int16x8_t v9 = vdupq_n_s16(a7);
  v10.i64[0] = 0x3E3E3E3E3E3E3E3ELL;
  v10.i64[1] = 0x3E3E3E3E3E3E3E3ELL;
  int16x8_t v11 = vaddq_s16(vmulq_s16(v8, v9), v9);
  *(int8x8_t *)v8.i8 = vmovn_s16(v8);
  int8x16_t v12 = *(int8x16_t *)a4;
  long long v13 = *(_OWORD *)(a4 + 16);
  long long v14 = *(_OWORD *)(a4 + 32);
  v15.i64[0] = 0x4040404040404040;
  v15.i64[1] = 0x4040404040404040;
  int8x8_t v16 = vand_s8(vmovn_s16(v11), (int8x8_t)0x3E3E3E3E3E3E3E3ELL);
  int8x8_t v17 = vadd_s8(vshrn_n_s16(v11, 6uLL), (int8x8_t)0x101010101010101);
  uint8x8_t v18 = (uint8x8_t)vqtbl1_s8(*(int8x16_t *)a4, v17);
  int8x8_t v19 = vadd_s8(v17, (int8x8_t)0x202020202020202);
  int8x8_t v20 = vadd_s8(v17, (int8x8_t)0x101010101010101);
  uint8x8_t v21 = (uint8x8_t)vsub_s8((int8x8_t)0x4040404040404040, v16);
  int8x16_t v22 = (int8x16_t)vtrn1q_s64((int64x2_t)v8, (int64x2_t)v8);
  while (1)
  {
    int v23 = a8 >> 6;
    int16x8_t v24 = vdupq_n_s16(a8);
    signed int v25 = a8 - a6;
    if (v23 <= -8) {
      break;
    }
    int16x8_t v26 = vdupq_n_s16(v25);
    int64x2_t v27 = *(int64x2_t *)(a3 + v23);
    int64x2_t v28 = *(int64x2_t *)(a3 + (v25 >> 6));
    uint8x8_t v29 = (uint8x8_t)vqtbl2_s8(*(int8x16x2_t *)v12.i8, v20);
    int8x16_t v30 = vshrn_high_n_s16(vshrn_n_s16(v24, 6uLL), v26, 6uLL);
    uint8x8_t v31 = (uint8x8_t)vqtbl2_s8(*(int8x16x2_t *)v12.i8, v19);
    int64x2_t v32 = (int64x2_t)vextq_s8((int8x16_t)v27, (int8x16_t)v27, 1uLL);
    int8x16_t v33 = vandq_s8(vmovn_hight_s16(vmovn_s16(v24), v26), v10);
    uint8x16_t v34 = (uint8x16_t)vtrn1q_s64(v27, v28);
    uint8x16_t v35 = (uint8x16_t)vtrn1q_s64(v32, (int64x2_t)vextq_s8((int8x16_t)v28, (int8x16_t)v28, 1uLL));
    uint8x16_t v36 = (uint8x16_t)vsubq_s8(v15, v33);
    int8x16_t v37 = vbslq_s8(vcgezq_s8(vaddq_s8(v30, v22)), vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v34.i8, *(uint8x8_t *)v36.i8), *(uint8x8_t *)v35.i8, *(uint8x8_t *)v33.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v34, v36), v35, (uint8x16_t)v33), 6uLL), vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(v18, v21), v29, (uint8x8_t)v16), 6uLL), (int16x8_t)vmlal_u8(vmull_u8(v29, v21), v31, (uint8x8_t)v16), 6uLL));
    *int8x16_t result = v37.i64[0];
    int8x16_t v38 = (void *)((char *)result + a2);
    a8 = v25 - a6;
    BOOL v39 = __OFSUB__(a5, 2);
    a5 -= 2;
    *int8x16_t v38 = v37.i64[1];
    int8x16_t result = (void *)((char *)v38 + a2);
    if ((a5 < 0) ^ v39 | (a5 == 0)) {
      return result;
    }
    uint8x8_t v18 = v31;
    int8x8_t v20 = vadd_s8(v20, (int8x8_t)0x202020202020202);
    int8x8_t v19 = vadd_s8(v19, (int8x8_t)0x202020202020202);
  }
  while (1)
  {
    uint8x8_t v40 = (uint8x8_t)vqtbl3_s8(*(int8x16x3_t *)v12.i8, v20);
    uint8x8_t v41 = (uint8x8_t)vqtbl3_s8(*(int8x16x3_t *)v12.i8, v19);
    int8x16_t v42 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(v18, v21), v40, (uint8x8_t)v16), 6uLL), (int16x8_t)vmlal_u8(vmull_u8(v40, v21), v41, (uint8x8_t)v16), 6uLL);
    *int8x16_t result = v42.i64[0];
    uint8x16_t v43 = (void *)((char *)result + a2);
    BOOL v39 = __OFSUB__(a5, 2);
    a5 -= 2;
    *uint8x16_t v43 = v42.i64[1];
    int8x16_t result = (void *)((char *)v43 + a2);
    if ((a5 < 0) ^ v39 | (a5 == 0)) {
      break;
    }
    uint8x8_t v18 = v41;
    int8x8_t v20 = vadd_s8(v20, (int8x8_t)0x202020202020202);
    int8x8_t v19 = vadd_s8(v19, (int8x8_t)0x202020202020202);
  }
  return result;
}

int8x16_t *sub_224A82200@<X0>(int8x16_t *result@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, int a6@<W6>, unsigned int a7@<W7>, signed int a8@<W8>)
{
  int16x8_t v12 = vdupq_n_s16(a7);
  v13.i64[0] = 0x101010101010101;
  v13.i64[1] = 0x101010101010101;
  uint64_t v14 = a4 + 1;
  int16x8_t v15 = v8[1];
  v16.i64[0] = 0x3E3E3E3E3E3E3E3ELL;
  v16.i64[1] = 0x3E3E3E3E3E3E3E3ELL;
  int16x8_t v17 = vaddq_s16(vmulq_s16(v11, v12), v12);
  int16x8_t v18 = vaddq_s16(vmulq_s16(v15, v12), v12);
  int8x16_t v19 = vmovn_hight_s16(vmovn_s16(v11), v15);
  int8x16_t v20 = *(int8x16_t *)v14;
  long long v21 = *(_OWORD *)(v14 + 16);
  long long v22 = *(_OWORD *)(v14 + 32);
  long long v23 = *(_OWORD *)(v14 + 48);
  vld1q_dup_s8(a3);
  v24.i64[0] = 0x4040404040404040;
  v24.i64[1] = 0x4040404040404040;
  v25.i64[0] = 0x202020202020202;
  v25.i64[1] = 0x202020202020202;
  int8x16_t v26 = vshrn_high_n_s16(vshrn_n_s16(v17, 6uLL), v18, 6uLL);
  int8x16_t v27 = vandq_s8(vmovn_hight_s16(vmovn_s16(v17), v18), v16);
  uint8x16_t v28 = (uint8x16_t)vqtbx1q_s8(*(int8x16_t *)v14, v26);
  int8x16_t v29 = vaddq_s8(v26, v25);
  int8x16_t v30 = vaddq_s8(v26, v13);
  uint8x16_t v31 = (uint8x16_t)vsubq_s8(v24, v27);
  v32.i64[0] = 0x202020202020202;
  v32.i64[1] = 0x202020202020202;
  while (1)
  {
    int v33 = a8 >> 6;
    int16x8_t v34 = vdupq_n_s16(a8);
    signed int v35 = a8 - a6;
    if (v33 <= -16) {
      break;
    }
    int16x8_t v36 = vdupq_n_s16(v35);
    int8x16_t v37 = (int8x16_t *)&a3[v33];
    int8x16_t v38 = (int8x16_t *)&a3[v35 >> 6];
    uint8x16_t v39 = (uint8x16_t)vqtbx4q_s8(*(int8x16x4_t *)v20.i8, v30);
    *(int8x8_t *)v9.i8 = vshrn_n_s16(v34, 6uLL);
    *(int8x8_t *)v10.i8 = vshrn_n_s16(v36, 6uLL);
    *(int8x8_t *)v34.i8 = vmovn_s16(v34);
    *(int8x8_t *)v36.i8 = vmovn_s16(v36);
    uint8x16_t v40 = (uint8x16_t)vqtbx4q_s8(*(int8x16x4_t *)v20.i8, v29);
    uint8x16_t v41 = (uint8x16_t)vextq_s8(*v37, v37[1], 1uLL);
    uint8x16_t v42 = (uint8x16_t)vextq_s8(*v38, v38[1], 1uLL);
    int8x16_t v43 = vandq_s8((int8x16_t)vtrn1q_s64((int64x2_t)v34, (int64x2_t)v34), v16);
    int8x16_t v44 = vandq_s8((int8x16_t)vtrn1q_s64((int64x2_t)v36, (int64x2_t)v36), v16);
    uint8x16_t v45 = (uint8x16_t)vsubq_s8(v24, v43);
    uint8x16_t v46 = (uint8x16_t)vsubq_s8(v24, v44);
    int64x2_t v9 = (int64x2_t)vcgezq_s8(vaddq_s8((int8x16_t)vtrn1q_s64(v9, v9), v19));
    int64x2_t v10 = (int64x2_t)vcgezq_s8(vaddq_s8((int8x16_t)vtrn1q_s64(v10, v10), v19));
    int8x16_t v47 = vbslq_s8((int8x16_t)v10, vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v38->i8, *(uint8x8_t *)v46.i8), *(uint8x8_t *)v42.i8, *(uint8x8_t *)v44.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(*(uint8x16_t *)v38, v46), v42, (uint8x16_t)v44), 6uLL), vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v39.i8, *(uint8x8_t *)v31.i8), *(uint8x8_t *)v40.i8, *(uint8x8_t *)v27.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v39, v31), v40, (uint8x16_t)v27), 6uLL));
    *int8x16_t result = vbslq_s8((int8x16_t)v9, vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v37->i8, *(uint8x8_t *)v45.i8), *(uint8x8_t *)v41.i8, *(uint8x8_t *)v43.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(*(uint8x16_t *)v37, v45), v41, (uint8x16_t)v43), 6uLL), vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v28.i8, *(uint8x8_t *)v31.i8), *(uint8x8_t *)v39.i8, *(uint8x8_t *)v27.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v28, v31), v39, (uint8x16_t)v27), 6uLL));
    uint64_t v48 = (int8x16_t *)((char *)result + a2);
    BOOL v49 = __OFSUB__(a5, 2);
    a5 -= 2;
    a8 = v35 - a6;
    int8x16_t *v48 = v47;
    int8x16_t result = (int8x16_t *)((char *)v48 + a2);
    if ((a5 < 0) ^ v49 | (a5 == 0)) {
      return result;
    }
    uint8x16_t v28 = v40;
    int8x16_t v30 = vaddq_s8(v30, v32);
    int8x16_t v29 = vaddq_s8(v29, v32);
  }
  while (1)
  {
    uint8x16_t v50 = (uint8x16_t)vqtbx4q_s8(*(int8x16x4_t *)v20.i8, v30);
    uint8x16_t v51 = (uint8x16_t)vqtbx4q_s8(*(int8x16x4_t *)v20.i8, v29);
    *int8x16_t result = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v28.i8, *(uint8x8_t *)v31.i8), *(uint8x8_t *)v50.i8, *(uint8x8_t *)v27.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v28, v31), v50, (uint8x16_t)v27), 6uLL);
    uint64_t v52 = (int8x16_t *)((char *)result + a2);
    BOOL v49 = __OFSUB__(a5, 2);
    a5 -= 2;
    *uint64_t v52 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v50.i8, *(uint8x8_t *)v31.i8), *(uint8x8_t *)v51.i8, *(uint8x8_t *)v27.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v50, v31), v51, (uint8x16_t)v27), 6uLL);
    int8x16_t result = (int8x16_t *)((char *)v52 + a2);
    if ((a5 < 0) ^ v49 | (a5 == 0)) {
      break;
    }
    uint8x16_t v28 = v51;
    int8x16_t v30 = vaddq_s8(v30, v32);
    int8x16_t v29 = vaddq_s8(v29, v32);
  }
  return result;
}

int8x16_t *sub_224A82400@<X0>(int8x16_t *result@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, unsigned int a8@<W7>, signed int a9@<W8>)
{
  int16x8_t v13 = vdupq_n_s16(a8);
  uint64_t v14 = (long long *)(a4 + 1);
  int16x8_t v15 = (int8x16_t *)((char *)result + a2);
  uint64_t v16 = 2 * a2 - a5;
  v17.i64[0] = 0x8000800080008;
  v17.i64[1] = 0x8000800080008;
  int16x8_t v18 = vaddq_s16(vmulq_s16(v12, v13), v13);
  int16x8_t v19 = vmulq_s16(v13, v17);
  int8x16_t v20 = vmovn_hight_s16(vmovn_s16(v12), v9[1]);
  long long v21 = *v14;
  long long v22 = v14[1];
  long long v23 = v14[2];
  long long v24 = v14[3];
  vld1q_dup_s8(a3);
  int v25 = a5;
  int v26 = -a5;
  while (1)
  {
    int16x8_t v27 = v18;
    int v28 = a9 >> 6;
    int16x8_t v29 = vdupq_n_s16(a9);
    signed int v30 = a9 - a7;
    int v31 = v30 >> 6;
    if (v28 <= v26) {
      break;
    }
    int16x8_t v32 = vdupq_n_s16(v30);
    a9 = v30 - a7;
    int v33 = &a3[v28];
    int16x8_t v34 = &a3[v31];
    *(int8x8_t *)v10.i8 = vqshrn_n_s16(v29, 6uLL);
    *(int8x8_t *)i.i8 = vqshrn_n_s16(v32, 6uLL);
    *(int8x8_t *)v29.i8 = vmovn_s16(v29);
    *(int8x8_t *)v32.i8 = vmovn_s16(v32);
    int8x16_t v36 = *(int8x16_t *)v33;
    signed int v35 = (int8x16_t *)(v33 + 16);
    int8x16_t v38 = *(int8x16_t *)v34;
    int8x16_t v37 = (int8x16_t *)(v34 + 16);
    v39.i64[0] = 0x3E3E3E3E3E3E3E3ELL;
    v39.i64[1] = 0x3E3E3E3E3E3E3E3ELL;
    v40.i64[0] = 0x4040404040404040;
    v40.i64[1] = 0x4040404040404040;
    int8x16_t v41 = vandq_s8((int8x16_t)vtrn1q_s64((int64x2_t)v29, (int64x2_t)v29), v39);
    int8x16_t v42 = vandq_s8((int8x16_t)vtrn1q_s64((int64x2_t)v32, (int64x2_t)v32), v39);
    uint8x16_t v43 = (uint8x16_t)vsubq_s8(v40, v41);
    uint8x16_t v44 = (uint8x16_t)vsubq_s8(v40, v42);
    int64x2_t v10 = (int64x2_t)vaddq_s8((int8x16_t)vtrn1q_s64(v10, v10), v20);
    for (int64x2_t i = (int64x2_t)vaddq_s8((int8x16_t)vtrn1q_s64(i, i), v20); ; int64x2_t i = (int64x2_t)vaddq_s8((int8x16_t)i, v65))
    {
      int16x8_t v45 = vaddq_s16(v27, v19);
      v46.i64[0] = 0x4040404040404040;
      v46.i64[1] = 0x4040404040404040;
      v47.i64[0] = 0x3E3E3E3E3E3E3E3ELL;
      v47.i64[1] = 0x3E3E3E3E3E3E3E3ELL;
      int8x16_t v48 = vshrn_high_n_s16(vshrn_n_s16(v27, 6uLL), v45, 6uLL);
      int8x16_t v49 = vandq_s8(vmovn_hight_s16(vmovn_s16(v27), v45), v47);
      if (i.i8[0] >= 0) {
        break;
      }
      int16x8_t v27 = vaddq_s16(v45, v19);
      v50.i64[0] = 0x101010101010101;
      v50.i64[1] = 0x101010101010101;
      uint8x16_t v51 = (uint8x16_t)vqtbx4q_s8(*(int8x16x4_t *)&v21, v48);
      int8x16_t v52 = vaddq_s8(v48, v50);
      uint8x16_t v53 = (uint8x16_t)vsubq_s8(v46, v49);
      int8x16_t v54 = *v35++;
      int8x16_t v55 = *v37++;
      uint8x16_t v56 = (uint8x16_t)vqtbx4q_s8(*(int8x16x4_t *)&v21, v52);
      uint8x16_t v57 = (uint8x16_t)vqtbx4q_s8(*(int8x16x4_t *)&v21, vaddq_s8(v52, v50));
      int16x8_t v58 = (int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v51.i8, *(uint8x8_t *)v53.i8), *(uint8x8_t *)v56.i8, *(uint8x8_t *)v49.i8);
      int16x8_t v59 = (int16x8_t)vmlal_high_u8(vmull_high_u8(v51, v53), v56, (uint8x16_t)v49);
      int16x8_t v60 = (int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v56.i8, *(uint8x8_t *)v53.i8), *(uint8x8_t *)v57.i8, *(uint8x8_t *)v49.i8);
      int16x8_t v61 = (int16x8_t)vmlal_high_u8(vmull_high_u8(v56, v53), v57, (uint8x16_t)v49);
      uint8x16_t v62 = (uint8x16_t)vextq_s8(v36, v54, 1uLL);
      uint8x16_t v63 = (uint8x16_t)vextq_s8(v38, v55, 1uLL);
      *result++ = vbslq_s8(vcgezq_s8((int8x16_t)v10), vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v36.i8, *(uint8x8_t *)v43.i8), *(uint8x8_t *)v62.i8, *(uint8x8_t *)v41.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v36, v43), v62, (uint8x16_t)v41), 6uLL), vrshrn_high_n_s16(vrshrn_n_s16(v58, 6uLL), v59, 6uLL));
      BOOL v64 = __OFSUB__(a5, 16);
      a5 -= 16;
      *v15++ = vbslq_s8(vcgezq_s8((int8x16_t)i), vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v38.i8, *(uint8x8_t *)v44.i8), *(uint8x8_t *)v63.i8, *(uint8x8_t *)v42.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v38, v44), v63, (uint8x16_t)v42), 6uLL), vrshrn_high_n_s16(vrshrn_n_s16(v60, 6uLL), v61, 6uLL));
      if ((a5 < 0) ^ v64 | (a5 == 0)) {
        goto LABEL_7;
      }
      v65.i64[0] = 0x1010101010101010;
      v65.i64[1] = 0x1010101010101010;
      int8x16_t v36 = v54;
      int8x16_t v38 = v55;
      int64x2_t v10 = (int64x2_t)vaddq_s8((int8x16_t)v10, v65);
    }
    while (1)
    {
      int8x16_t v67 = *v35++;
      int8x16_t v68 = *v37++;
      uint8x16_t v69 = (uint8x16_t)vextq_s8(v36, v67, 1uLL);
      uint8x16_t v70 = (uint8x16_t)vextq_s8(v38, v68, 1uLL);
      *result++ = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v36.i8, *(uint8x8_t *)v43.i8), *(uint8x8_t *)v69.i8, *(uint8x8_t *)v41.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v36, v43), v69, (uint8x16_t)v41), 6uLL);
      BOOL v64 = __OFSUB__(a5, 16);
      a5 -= 16;
      *v15++ = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v38.i8, *(uint8x8_t *)v44.i8), *(uint8x8_t *)v70.i8, *(uint8x8_t *)v42.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v38, v44), v70, (uint8x16_t)v42), 6uLL);
      if ((a5 < 0) ^ v64 | (a5 == 0)) {
        break;
      }
      int8x16_t v36 = v67;
      int8x16_t v38 = v68;
    }
LABEL_7:
    BOOL v64 = __OFSUB__(a6, 2);
    a6 -= 2;
    if ((a6 < 0) ^ v64 | (a6 == 0)) {
      return result;
    }
    v66.i64[0] = 0x80008000800080;
    v66.i64[1] = 0x80008000800080;
    int8x16_t result = (int8x16_t *)((char *)result + v16);
    int16x8_t v15 = (int8x16_t *)((char *)v15 + v16);
    a5 = v25;
    int16x8_t v18 = vaddq_s16(v18, v66);
  }
  unint64_t v71 = v16 + a5;
  for (uint64_t j = a6; ; a6 = j)
  {
    int16x8_t v73 = vaddq_s16(v27, v19);
    v74.i64[0] = 0x4040404040404040;
    v74.i64[1] = 0x4040404040404040;
    v75.i64[0] = 0x3E3E3E3E3E3E3E3ELL;
    v75.i64[1] = 0x3E3E3E3E3E3E3E3ELL;
    int8x16_t v76 = vshrn_high_n_s16(vshrn_n_s16(v27, 6uLL), v73, 6uLL);
    int8x16_t v77 = vandq_s8(vmovn_hight_s16(vmovn_s16(v27), v73), v75);
    int16x8_t v27 = vaddq_s16(v73, v19);
    v78.i64[0] = 0x101010101010101;
    v78.i64[1] = 0x101010101010101;
    uint8x16_t v79 = (uint8x16_t)vqtbx4q_s8(*(int8x16x4_t *)&v21, v76);
    int8x16_t v80 = vaddq_s8(v76, v78);
    uint8x16_t v81 = (uint8x16_t)vsubq_s8(v74, v77);
    while (1)
    {
      uint8x16_t v82 = (uint8x16_t)vqtbx4q_s8(*(int8x16x4_t *)&v21, v80);
      int8x16_t v83 = vaddq_s8(v80, v78);
      uint8x16_t v84 = (uint8x16_t)vqtbx4q_s8(*(int8x16x4_t *)&v21, v83);
      int8x16_t v80 = vaddq_s8(v83, v78);
      *int8x16_t result = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v79.i8, *(uint8x8_t *)v81.i8), *(uint8x8_t *)v82.i8, *(uint8x8_t *)v77.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v79, v81), v82, (uint8x16_t)v77), 6uLL);
      int8x16_t result = (int8x16_t *)((char *)result + v71);
      BOOL v64 = __OFSUB__(a6, 2);
      a6 -= 2;
      *int16x8_t v15 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v82.i8, *(uint8x8_t *)v81.i8), *(uint8x8_t *)v84.i8, *(uint8x8_t *)v77.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v82, v81), v84, (uint8x16_t)v77), 6uLL);
      int16x8_t v15 = (int8x16_t *)((char *)v15 + v71);
      if ((a6 < 0) ^ v64 | (a6 == 0)) {
        break;
      }
      uint8x16_t v79 = v84;
    }
    BOOL v64 = __OFSUB__(a5, 16);
    a5 -= 16;
    if ((a5 < 0) ^ v64 | (a5 == 0)) {
      break;
    }
    unint64_t v85 = v71 >> 1;
    uint64_t v86 = (int8x16_t *)((char *)result - v85 * j);
    uint64_t v87 = (int8x16_t *)((char *)v15 - v85 * j);
    unint64_t v71 = 2 * v85;
    int8x16_t result = v86 + 1;
    int16x8_t v15 = v87 + 1;
  }
  return result;
}

void *sub_224A82730(void *result, uint64_t a2, uint64_t a3, int8x16_t *a4, int a5, int a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, int64x2_t a15, int64x2_t a16)
{
  signed int v17 = 128 - a7;
  v18.i64[1] = unk_2646ED1B8;
  unsigned int v19 = -a8;
  if (a5 == 8)
  {
    int16x8_t v41 = vdupq_n_s16(v19);
    v42.i64[0] = 0x3E3E3E3E3E3E3E3ELL;
    v42.i64[1] = 0x3E3E3E3E3E3E3E3ELL;
    int16x8_t v43 = vaddq_s16(vmulq_s16(qword_2646ED1B0[0], v41), v41);
    *(int8x8_t *)v18.i8 = vmovn_s16(qword_2646ED1B0[0]);
    int8x16_t v44 = *a4;
    v45.i64[0] = 0x4040404040404040;
    v45.i64[1] = 0x4040404040404040;
    int8x8_t v46 = vand_s8(vmovn_s16(v43), (int8x8_t)0x3E3E3E3E3E3E3E3ELL);
    int8x8_t v47 = vadd_s8(vshrn_n_s16(v43, 6uLL), (int8x8_t)0x101010101010101);
    uint8x8_t v48 = (uint8x8_t)vqtbl1_s8(*a4, v47);
    int8x8_t v49 = vadd_s8(v47, (int8x8_t)0x202020202020202);
    int8x8_t v50 = vadd_s8(v47, (int8x8_t)0x101010101010101);
    uint8x8_t v51 = (uint8x8_t)vsub_s8((int8x8_t)0x4040404040404040, v46);
    int8x16_t v52 = (int8x16_t)vtrn1q_s64(v18, v18);
    int8x16_t v53 = vaddq_s8(v52, v52);
    while (1)
    {
      int v54 = v17 >> 6;
      int16x8_t v55 = vdupq_n_s16(v17);
      signed int v56 = v17 - a7;
      if (v54 <= -16) {
        break;
      }
      int16x8_t v57 = vdupq_n_s16(v56);
      int8x16_t v58 = *(int8x16_t *)(a3 + v54);
      int8x16_t v59 = *(int8x16_t *)(a3 + (v56 >> 6));
      uint8x8_t v60 = (uint8x8_t)vqtbl1_s8(v44, v50);
      int8x16_t v61 = vshrn_high_n_s16(vshrn_n_s16(v55, 6uLL), v57, 6uLL);
      uint8x8_t v62 = (uint8x8_t)vqtbl1_s8(v44, v49);
      uint8x16_t v63 = (uint8x16_t)vuzp2q_s8(v58, v59);
      uint8x16_t v64 = (uint8x16_t)vuzp1q_s8(v58, v59);
      int8x16_t v65 = vandq_s8(vmovn_hight_s16(vmovn_s16(v55), v57), v42);
      uint8x16_t v66 = (uint8x16_t)vsubq_s8(v45, v65);
      int8x16_t v67 = vbslq_s8(vcgezq_s8(vaddq_s8(v61, v53)), vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v64.i8, *(uint8x8_t *)v66.i8), *(uint8x8_t *)v63.i8, *(uint8x8_t *)v65.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v64, v66), v63, (uint8x16_t)v65), 6uLL), vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(v48, v51), v60, (uint8x8_t)v46), 6uLL), (int16x8_t)vmlal_u8(vmull_u8(v60, v51), v62, (uint8x8_t)v46), 6uLL));
      *int8x16_t result = v67.i64[0];
      int8x16_t v68 = (void *)((char *)result + a2);
      signed int v17 = v56 - a7;
      BOOL v37 = __OFSUB__(a6, 2);
      a6 -= 2;
      *int8x16_t v68 = v67.i64[1];
      int8x16_t result = (void *)((char *)v68 + a2);
      if ((a6 < 0) ^ v37 | (a6 == 0)) {
        return result;
      }
      uint8x8_t v48 = v62;
      int8x8_t v50 = vadd_s8(v50, (int8x8_t)0x202020202020202);
      int8x8_t v49 = vadd_s8(v49, (int8x8_t)0x202020202020202);
    }
    while (1)
    {
      uint8x8_t v69 = (uint8x8_t)vqtbl1_s8(v44, v50);
      uint8x8_t v70 = (uint8x8_t)vqtbl1_s8(v44, v49);
      int8x16_t v71 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(v48, v51), v69, (uint8x8_t)v46), 6uLL), (int16x8_t)vmlal_u8(vmull_u8(v69, v51), v70, (uint8x8_t)v46), 6uLL);
      *int8x16_t result = v71.i64[0];
      uint64_t v72 = (void *)((char *)result + a2);
      BOOL v37 = __OFSUB__(a6, 2);
      a6 -= 2;
      void *v72 = v71.i64[1];
      int8x16_t result = (void *)((char *)v72 + a2);
      if ((a6 < 0) ^ v37 | (a6 == 0)) {
        break;
      }
      uint8x8_t v48 = v70;
      int8x8_t v50 = vadd_s8(v50, (int8x8_t)0x202020202020202);
      int8x8_t v49 = vadd_s8(v49, (int8x8_t)0x202020202020202);
    }
  }
  else
  {
    *(int16x4_t *)v16.i8 = vdup_n_s16(v19);
    *(int16x4_t *)v16.i8 = vadd_s16(vmul_s16((int16x4_t)0x3000200010000, *(int16x4_t *)v16.i8), *(int16x4_t *)v16.i8);
    int32x2_t v20 = (int32x2_t)vmovn_s16(qword_2646ED1B0[0]);
    int8x16_t v21 = *a4;
    int32x2_t v22 = (int32x2_t)vand_s8(vmovn_s16(v16), (int8x8_t)0x3E3E3E3E3E3E3E3ELL);
    int8x8_t v23 = vadd_s8(vshrn_n_s16(v16, 6uLL), (int8x8_t)0x101010101010101);
    int32x2_t v24 = (int32x2_t)vqtbl1_s8(*a4, v23);
    int8x8_t v25 = (int8x8_t)vtrn1_s32((int32x2_t)vadd_s8(v23, (int8x8_t)0x101010101010101), (int32x2_t)vadd_s8(v23, (int8x8_t)0x202020202020202));
    int32x2_t v26 = (int32x2_t)vsub_s8((int8x8_t)0x4040404040404040, (int8x8_t)v22);
    int8x8_t v27 = (int8x8_t)vtrn1_s32(v20, v20);
    uint8x8_t v28 = (uint8x8_t)vtrn1_s32(v22, v22);
    uint8x8_t v29 = (uint8x8_t)vtrn1_s32(v26, v26);
    int8x8_t v30 = vadd_s8(v27, v27);
    while (1)
    {
      int v31 = v17 >> 6;
      *(int16x4_t *)a15.i8 = vdup_n_s16(v17);
      signed int v32 = v17 - a7;
      if (v31 <= -8) {
        break;
      }
      *(int16x4_t *)a16.i8 = vdup_n_s16(v32);
      a15 = vtrn1q_s64(a15, a16);
      int32x2_t v33 = (int32x2_t)vqtbl1_s8(v21, v25);
      int8x8_t v34 = vshrn_n_s16((int16x8_t)a15, 6uLL);
      *(int8x8_t *)a15.i8 = vand_s8(vmovn_s16((int16x8_t)a15), (int8x8_t)0x3E3E3E3E3E3E3E3ELL);
      int8x8_t v35 = vbsl_s8(vcgez_s8(vadd_s8(v34, v30)), vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)vuzp1_s8(*(int8x8_t *)(a3 + v31), *(int8x8_t *)(a3 + (v32 >> 6))), (uint8x8_t)vsub_s8((int8x8_t)0x4040404040404040, *(int8x8_t *)a15.i8)), (uint8x8_t)vuzp2_s8(*(int8x8_t *)(a3 + v31), *(int8x8_t *)(a3 + (v32 >> 6))), *(uint8x8_t *)a15.i8), 6uLL), vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)vtrn1_s32(v24, v33), v29), (uint8x8_t)v33, v28), 6uLL));
      *(_DWORD *)int8x16_t result = v35.i32[0];
      int8x16_t v36 = (_DWORD *)((char *)result + a2);
      signed int v17 = v32 - a7;
      BOOL v37 = __OFSUB__(a6, 2);
      a6 -= 2;
      _DWORD *v36 = v35.i32[1];
      int8x16_t result = (void *)((char *)v36 + a2);
      if ((a6 < 0) ^ v37 | (a6 == 0)) {
        return result;
      }
      int32x2_t v24 = (int32x2_t)vext_s8((int8x8_t)v33, (int8x8_t)v33, 4uLL);
      int8x8_t v25 = vadd_s8(v25, (int8x8_t)0x202020202020202);
    }
    while (1)
    {
      int32x2_t v38 = (int32x2_t)vqtbl1_s8(v21, v25);
      int8x8_t v39 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)vtrn1_s32(v24, v38), v29), (uint8x8_t)v38, v28), 6uLL);
      *(_DWORD *)int8x16_t result = v39.i32[0];
      int8x16_t v40 = (_DWORD *)((char *)result + a2);
      BOOL v37 = __OFSUB__(a6, 2);
      a6 -= 2;
      *int8x16_t v40 = v39.i32[1];
      int8x16_t result = (void *)((char *)v40 + a2);
      if ((a6 < 0) ^ v37 | (a6 == 0)) {
        break;
      }
      int32x2_t v24 = (int32x2_t)vext_s8((int8x8_t)v38, (int8x8_t)v38, 4uLL);
      int8x8_t v25 = vadd_s8(v25, (int8x8_t)0x202020202020202);
    }
  }
  return result;
}

void *sub_224A829AC(void *result, uint64_t a2, uint64_t a3, long long *a4, int a5, int a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, int64x2_t a15, int64x2_t a16)
{
  signed int v21 = 64 - a7;
  v22.i64[1] = unk_2646ED1B8;
  unsigned int v23 = -a8;
  if (a5 == 8)
  {
    int16x8_t v44 = vdupq_n_s16(v23);
    v45.i64[0] = 0x3E3E3E3E3E3E3E3ELL;
    v45.i64[1] = 0x3E3E3E3E3E3E3E3ELL;
    int16x8_t v46 = vaddq_s16(vmulq_s16(qword_2646ED1B0[0], v44), v44);
    *(int8x8_t *)v22.i8 = vmovn_s16(qword_2646ED1B0[0]);
    long long v47 = *a4;
    long long v48 = a4[1];
    long long v49 = a4[2];
    v50.i64[0] = 0x4040404040404040;
    v50.i64[1] = 0x4040404040404040;
    *(int8x8_t *)v17.i8 = vand_s8(vmovn_s16(v46), (int8x8_t)0x3E3E3E3E3E3E3E3ELL);
    *(int8x8_t *)v19.i8 = vadd_s8(vshrn_n_s16(v46, 6uLL), (int8x8_t)0x202020202020202);
    *(int8x8_t *)v18.i8 = vadd_s8(*(int8x8_t *)v19.i8, (int8x8_t)0x101010101010101);
    *(int8x8_t *)v46.i8 = vadd_s8(*(int8x8_t *)v19.i8, (int8x8_t)0x202020202020202);
    int8x16_t v51 = (int8x16_t)vtrn1q_s64(v22, v22);
    *(int8x8_t *)v16.i8 = vadd_s8(*(int8x8_t *)v18.i8, (int8x8_t)0x202020202020202);
    int8x16_t v52 = (int8x16_t)vtrn1q_s64(v19, (int64x2_t)v46);
    int8x16_t v53 = (int8x16_t)vtrn1q_s64(v18, v16);
    *(int8x8_t *)v18.i8 = vsub_s8((int8x8_t)0x4040404040404040, *(int8x8_t *)v17.i8);
    v54.i64[0] = 0x404040404040404;
    v54.i64[1] = 0x404040404040404;
    uint8x16_t v55 = (uint8x16_t)vtrn1q_s64(v17, v17);
    uint8x16_t v56 = (uint8x16_t)vtrn1q_s64(v18, v18);
    while (1)
    {
      int v57 = v21 >> 6;
      int16x8_t v58 = vdupq_n_s16(v21);
      signed int v59 = v21 - a7;
      if (v57 <= -8) {
        break;
      }
      int16x8_t v60 = vdupq_n_s16(v59);
      int64x2_t v61 = *(int64x2_t *)(a3 + v57);
      int64x2_t v62 = *(int64x2_t *)(a3 + (v59 >> 6));
      uint8x16_t v63 = (uint8x16_t)vqtbl3q_s8(*(int8x16x3_t *)&v47, v52);
      uint8x16_t v64 = (uint8x16_t)vqtbl3q_s8(*(int8x16x3_t *)&v47, v53);
      int8x16_t v65 = vshrn_high_n_s16(vshrn_n_s16(v58, 6uLL), v60, 6uLL);
      int64x2_t v66 = (int64x2_t)vextq_s8((int8x16_t)v61, (int8x16_t)v61, 1uLL);
      int8x16_t v67 = vandq_s8(vmovn_hight_s16(vmovn_s16(v58), v60), v45);
      uint8x16_t v68 = (uint8x16_t)vtrn1q_s64(v61, v62);
      uint8x16_t v69 = (uint8x16_t)vtrn1q_s64(v66, (int64x2_t)vextq_s8((int8x16_t)v62, (int8x16_t)v62, 1uLL));
      uint8x16_t v70 = (uint8x16_t)vsubq_s8(v50, v67);
      int8x16_t v71 = vbslq_s8(vcgezq_s8(vaddq_s8(v65, v51)), vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v68.i8, *(uint8x8_t *)v70.i8), *(uint8x8_t *)v69.i8, *(uint8x8_t *)v67.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v68, v70), v69, (uint8x16_t)v67), 6uLL), vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v63.i8, *(uint8x8_t *)v56.i8), *(uint8x8_t *)v64.i8, *(uint8x8_t *)v55.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v63, v56), v64, v55), 6uLL));
      *int8x16_t result = v71.i64[0];
      uint64_t v72 = (void *)((char *)result + a2);
      signed int v21 = v59 - a7;
      BOOL v41 = __OFSUB__(a6, 2);
      a6 -= 2;
      void *v72 = v71.i64[1];
      int8x16_t result = (void *)((char *)v72 + a2);
      if ((a6 < 0) ^ v41 | (a6 == 0)) {
        return result;
      }
      int8x16_t v52 = vaddq_s8(v52, v54);
      int8x16_t v53 = vaddq_s8(v53, v54);
    }
    while (1)
    {
      uint8x16_t v73 = (uint8x16_t)vqtbl3q_s8(*(int8x16x3_t *)&v47, v52);
      uint8x16_t v74 = (uint8x16_t)vqtbl3q_s8(*(int8x16x3_t *)&v47, v53);
      int8x16_t v75 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v73.i8, *(uint8x8_t *)v56.i8), *(uint8x8_t *)v74.i8, *(uint8x8_t *)v55.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v73, v56), v74, v55), 6uLL);
      *int8x16_t result = v75.i64[0];
      int8x16_t v76 = (void *)((char *)result + a2);
      BOOL v41 = __OFSUB__(a6, 2);
      a6 -= 2;
      *int8x16_t v76 = v75.i64[1];
      int8x16_t result = (void *)((char *)v76 + a2);
      if ((a6 < 0) ^ v41 | (a6 == 0)) {
        break;
      }
      int8x16_t v52 = vaddq_s8(v52, v54);
      int8x16_t v53 = vaddq_s8(v53, v54);
    }
  }
  else
  {
    *(int16x4_t *)v20.i8 = vdup_n_s16(v23);
    *(int16x4_t *)v20.i8 = vadd_s16(vmul_s16((int16x4_t)0x3000200010000, *(int16x4_t *)v20.i8), *(int16x4_t *)v20.i8);
    int32x2_t v24 = (int32x2_t)vmovn_s16(qword_2646ED1B0[0]);
    long long v25 = *a4;
    long long v26 = a4[1];
    int32x2_t v27 = (int32x2_t)vand_s8(vmovn_s16(v20), (int8x8_t)0x3E3E3E3E3E3E3E3ELL);
    int32x2_t v28 = (int32x2_t)vadd_s8(vshrn_n_s16(v20, 6uLL), (int8x8_t)0x202020202020202);
    int32x2_t v29 = (int32x2_t)vadd_s8((int8x8_t)v28, (int8x8_t)0x101010101010101);
    int8x8_t v30 = (int8x8_t)vtrn1_s32(v24, v24);
    int8x8_t v31 = (int8x8_t)vtrn1_s32(v28, (int32x2_t)vadd_s8((int8x8_t)v28, (int8x8_t)0x202020202020202));
    int8x8_t v32 = (int8x8_t)vtrn1_s32(v29, (int32x2_t)vadd_s8((int8x8_t)v29, (int8x8_t)0x202020202020202));
    int32x2_t v33 = (int32x2_t)vsub_s8((int8x8_t)0x4040404040404040, (int8x8_t)v27);
    uint8x8_t v34 = (uint8x8_t)vtrn1_s32(v27, v27);
    uint8x8_t v35 = (uint8x8_t)vtrn1_s32(v33, v33);
    while (1)
    {
      int v36 = v21 >> 6;
      *(int16x4_t *)a15.i8 = vdup_n_s16(v21);
      signed int v37 = v21 - a7;
      if (v36 <= -4) {
        break;
      }
      *(int16x4_t *)a16.i8 = vdup_n_s16(v37);
      a15 = vtrn1q_s64(a15, a16);
      int8x8_t v38 = vshrn_n_s16((int16x8_t)a15, 6uLL);
      *(int8x8_t *)a15.i8 = vand_s8(vmovn_s16((int16x8_t)a15), (int8x8_t)0x3E3E3E3E3E3E3E3ELL);
      int8x8_t v39 = vbsl_s8(vcgez_s8(vadd_s8(v38, v30)), vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)vtrn1_s32(*(int32x2_t *)(a3 + v36), *(int32x2_t *)(a3 + (v37 >> 6))), (uint8x8_t)vsub_s8((int8x8_t)0x4040404040404040, *(int8x8_t *)a15.i8)), (uint8x8_t)vtrn1_s32((int32x2_t)vext_s8(*(int8x8_t *)(a3 + v36), *(int8x8_t *)(a3 + v36), 1uLL), (int32x2_t)vext_s8(*(int8x8_t *)(a3 + (v37 >> 6)), *(int8x8_t *)(a3 + (v37 >> 6)), 1uLL)), *(uint8x8_t *)a15.i8), 6uLL), vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)vqtbl2_s8(*(int8x16x2_t *)&v25, v31), v35), (uint8x8_t)vqtbl2_s8(*(int8x16x2_t *)&v25, v32), v34),
                6uLL));
      *(_DWORD *)int8x16_t result = v39.i32[0];
      int8x16_t v40 = (_DWORD *)((char *)result + a2);
      signed int v21 = v37 - a7;
      BOOL v41 = __OFSUB__(a6, 2);
      a6 -= 2;
      *int8x16_t v40 = v39.i32[1];
      int8x16_t result = (void *)((char *)v40 + a2);
      if ((a6 < 0) ^ v41 | (a6 == 0)) {
        return result;
      }
      int8x8_t v31 = vadd_s8(v31, (int8x8_t)0x404040404040404);
      int8x8_t v32 = vadd_s8(v32, (int8x8_t)0x404040404040404);
    }
    while (1)
    {
      int8x8_t v42 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)vqtbl2_s8(*(int8x16x2_t *)&v25, v31), v35), (uint8x8_t)vqtbl2_s8(*(int8x16x2_t *)&v25, v32), v34), 6uLL);
      *(_DWORD *)int8x16_t result = v42.i32[0];
      int16x8_t v43 = (_DWORD *)((char *)result + a2);
      BOOL v41 = __OFSUB__(a6, 2);
      a6 -= 2;
      *int16x8_t v43 = v42.i32[1];
      int8x16_t result = (void *)((char *)v43 + a2);
      if ((a6 < 0) ^ v41 | (a6 == 0)) {
        break;
      }
      int8x8_t v31 = vadd_s8(v31, (int8x8_t)0x404040404040404);
      int8x8_t v32 = vadd_s8(v32, (int8x8_t)0x404040404040404);
    }
  }
  return result;
}

_OWORD *sub_224A82C3C(_OWORD *result, unint64_t a2, uint64_t a3, int a4, int a5, unsigned int a6, int a7)
{
  unsigned int v7 = __clz(a4);
  int16x8_t v8 = (const char *)(a3 + a7);
  vld1q_dup_s8(v8);
  unsigned int v9 = a6;
  if (a7 <= 64) {
    return (_OWORD *)((uint64_t (*)(void))((char *)&qword_224A83058 - *((unsigned __int16 *)&qword_224A83058 + v7 - 25)))();
  }
  int64x2_t v10 = (_WORD *)((char *)result + a2);
  unint64_t v11 = a2;
  for (uint64_t i = a5; ; a5 = i)
  {
    int v13 = v9 >> 6;
    unsigned int v14 = v9 & 0x3E;
    unsigned int v15 = v9 + a6;
    unsigned int v16 = v15 & 0x3E;
    if (v13 >= a7) {
      break;
    }
    int64x2_t v17 = (int8x16_t *)(a3 + v13);
    int64x2_t v18 = (int8x16_t *)(a3 + (v15 >> 6));
    uint8x16_t v19 = (uint8x16_t)vdupq_n_s8(v14);
    uint8x16_t v20 = (uint8x16_t)vdupq_n_s8(v16);
    int8x16_t v22 = *v17;
    int8x16_t v23 = v17[1];
    signed int v21 = v17 + 2;
    int8x16_t v25 = *v18;
    int8x16_t v26 = v18[1];
    int32x2_t v24 = v18 + 2;
    uint8x16_t v27 = (uint8x16_t)vdupq_n_s8(64 - v14);
    uint8x16_t v28 = (uint8x16_t)vdupq_n_s8(64 - v16);
    unsigned int v9 = v15 + a6;
    while (1)
    {
      uint8x16_t v29 = (uint8x16_t)vextq_s8(v22, v23, 1uLL);
      uint8x16_t v30 = (uint8x16_t)vextq_s8(v25, v26, 1uLL);
      BOOL v31 = __OFSUB__(a5, 16);
      a5 -= 16;
      int8x16_t v32 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v29.i8, *(uint8x8_t *)v19.i8), *(uint8x8_t *)v22.i8, *(uint8x8_t *)v27.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v29, v19), (uint8x16_t)v22, v27), 6uLL);
      int8x16_t v33 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v30.i8, *(uint8x8_t *)v20.i8), *(uint8x8_t *)v25.i8, *(uint8x8_t *)v28.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v30, v20), (uint8x16_t)v25, v28), 6uLL);
      int8x16_t v34 = vzip1q_s8(v32, v33);
      int8x16_t v35 = vzip2q_s8(v32, v33);
      *(_WORD *)int8x16_t result = v34.i16[0];
      int v36 = (_WORD *)((char *)result + v11 * 2);
      _WORD *v10 = v34.i16[1];
      signed int v37 = &v10[v11];
      _WORD *v36 = v34.i16[2];
      int8x8_t v38 = &v36[v11];
      *signed int v37 = v34.i16[3];
      int8x8_t v39 = &v37[v11];
      *int8x8_t v38 = v34.i16[4];
      int8x16_t v40 = &v38[v11];
      *int8x8_t v39 = v34.i16[5];
      BOOL v41 = &v39[v11];
      *int8x16_t v40 = v34.i16[6];
      int8x8_t v42 = &v40[v11];
      *BOOL v41 = v34.i16[7];
      int16x8_t v43 = &v41[v11];
      *int8x8_t v42 = v35.i16[0];
      int16x8_t v44 = &v42[v11];
      *int16x8_t v43 = v35.i16[1];
      int8x16_t v45 = &v43[v11];
      *int16x8_t v44 = v35.i16[2];
      int16x8_t v46 = &v44[v11];
      *int8x16_t v45 = v35.i16[3];
      long long v47 = &v45[v11];
      _WORD *v46 = v35.i16[4];
      long long v48 = &v46[v11];
      *long long v47 = v35.i16[5];
      long long v49 = &v47[v11];
      _WORD *v48 = v35.i16[6];
      int8x16_t result = &v48[v11];
      *long long v49 = v35.i16[7];
      int64x2_t v10 = &v49[v11];
      if ((a5 < 0) ^ v31 | (a5 == 0)) {
        break;
      }
      int8x16_t v22 = v23;
      int8x16_t v23 = *v21++;
      int8x16_t v25 = v26;
      int8x16_t v26 = *v24++;
    }
    BOOL v31 = __OFSUB__(a4, 2);
    a4 -= 2;
    if ((a4 < 0) ^ v31 | (a4 == 0)) {
      return result;
    }
    unint64_t v50 = (v11 * 2) >> 1;
    int8x16_t v51 = (char *)result - v50 * i;
    int8x16_t v52 = (char *)v10 - v50 * i;
    unint64_t v11 = v50;
    int8x16_t result = v51 + 2;
    int64x2_t v10 = v52 + 2;
  }
  return sub_224A83064(result, v11 * 2, a3, a4, a5);
}

_OWORD *sub_224A83064(_OWORD *result, unint64_t a2, uint64_t a3, signed int a4, int a5)
{
  if (a4 <= 16) {
    return (_OWORD *)((uint64_t (*)(void))((char *)aDdd - (unsigned __int16)aDdd[__clz(a4) - 25]))();
  }
  signed int v6 = a4;
  unint64_t v7 = (a2 >> 1) - a4;
  while (1)
  {
    unsigned int v8 = a4 & 0xF;
    if ((a4 & 0xF) != 0)
    {
      a4 -= v8;
      *int8x16_t result = v5;
      int8x16_t result = (_OWORD *)((char *)result + v8);
    }
    do
    {
      BOOL v9 = __OFSUB__(a4, 16);
      a4 -= 16;
      *result++ = v5;
    }
    while (!((a4 < 0) ^ v9 | (a4 == 0)));
    BOOL v9 = __OFSUB__(a5--, 1);
    int8x16_t result = (_OWORD *)((char *)result + v7);
    if ((a5 < 0) ^ v9 | (a5 == 0)) {
      break;
    }
    a4 = v6;
  }
  return result;
}

int8x8_t *sub_224A831DC(int8x8_t *result, uint64_t a2, long long *a3, int a4, int a5, unsigned int a6, unsigned int a7, double a8, double a9, double a10)
{
  unsigned int v15 = (char *)a3 + a7;
  vld1q_dup_s8(v15);
  v16.i64[1] = unk_2646ED1B8;
  if (a4 == 8)
  {
    int16x8_t v31 = vdupq_n_s16(a6);
    long long v32 = *a3;
    long long v33 = a3[1];
    int16x8_t v34 = vaddq_s16(v31, vmulq_s16(qword_2646ED1B0[0], v31));
    *(uint8x8_t *)v12.i8 = vqshrn_n_u16((uint16x8_t)v34, 6uLL);
    *(int8x8_t *)v10.i8 = vand_s8(vmovn_s16(v34), (int8x8_t)0x3E3E3E3E3E3E3E3ELL);
    *(uint8x8_t *)v13.i8 = vqadd_u8(*(uint8x8_t *)v12.i8, (uint8x8_t)0x101010101010101);
    *(uint8x8_t *)v14.i8 = vqadd_u8(*(uint8x8_t *)v12.i8, (uint8x8_t)0x202020202020202);
    *(int8x8_t *)v11.i8 = vsub_s8((int8x8_t)0x4040404040404040, *(int8x8_t *)v10.i8);
    *(uint8x8_t *)v31.i8 = vqadd_u8(*(uint8x8_t *)v13.i8, (uint8x8_t)0x202020202020202);
    uint8x16_t v35 = (uint8x16_t)vtrn1q_s64(v10, v10);
    int8x16_t v36 = (int8x16_t)vtrn1q_s64(v12, v14);
    int8x16_t v37 = (int8x16_t)vtrn1q_s64(v13, (int64x2_t)v31);
    uint8x16_t v38 = (uint8x16_t)vtrn1q_s64(v11, v11);
    v39.i64[0] = 0x404040404040404;
    v39.i64[1] = 0x404040404040404;
    while (1)
    {
      uint8x16_t v40 = (uint8x16_t)vqtbx4q_s8(*(int8x16x4_t *)(&a10 - 4), v36);
      uint8x16_t v41 = (uint8x16_t)vqtbx4q_s8(*(int8x16x4_t *)(&a10 - 4), v37);
      *int8x16_t result = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v40.i8, *(uint8x8_t *)v38.i8), *(uint8x8_t *)v41.i8, *(uint8x8_t *)v35.i8), 6uLL);
      int8x8_t v42 = (int8x8_t *)((char *)result + a2);
      BOOL v30 = __OFSUB__(a5, 2);
      a5 -= 2;
      *int8x8_t v42 = vrshrn_n_s16((int16x8_t)vmlal_high_u8(vmull_high_u8(v40, v38), v41, v35), 6uLL);
      int8x16_t result = (int8x8_t *)((char *)v42 + a2);
      if ((a5 < 0) ^ v30 | (a5 == 0)) {
        break;
      }
      int8x16_t v36 = (int8x16_t)vqaddq_u8((uint8x16_t)v36, v39);
      int8x16_t v37 = (int8x16_t)vqaddq_u8((uint8x16_t)v37, v39);
    }
  }
  else
  {
    int16x4_t v17 = vdup_n_s16(a6);
    long long v18 = *a3;
    long long v19 = a3[1];
    *(int16x4_t *)v16.i8 = vadd_s16(v17, vmul_s16((int16x4_t)0x3000200010000, v17));
    int32x2_t v20 = (int32x2_t)vqshrn_n_u16((uint16x8_t)v16, 6uLL);
    int32x2_t v21 = (int32x2_t)vand_s8(vmovn_s16(v16), (int8x8_t)0x3E3E3E3E3E3E3E3ELL);
    int32x2_t v22 = (int32x2_t)vqadd_u8((uint8x8_t)v20, (uint8x8_t)0x101010101010101);
    int32x2_t v23 = (int32x2_t)vsub_s8((int8x8_t)0x4040404040404040, (int8x8_t)v21);
    uint8x8_t v24 = (uint8x8_t)vtrn1_s32(v21, v21);
    int8x8_t v25 = (int8x8_t)vtrn1_s32(v20, (int32x2_t)vqadd_u8((uint8x8_t)v20, (uint8x8_t)0x202020202020202));
    int8x8_t v26 = (int8x8_t)vtrn1_s32(v22, (int32x2_t)vqadd_u8((uint8x8_t)v22, (uint8x8_t)0x202020202020202));
    uint8x8_t v27 = (uint8x8_t)vtrn1_s32(v23, v23);
    while (1)
    {
      int8x8_t v28 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)vqtbx2_s8(*(int8x16x2_t *)&v18, v25), v27), (uint8x8_t)vqtbx2_s8(*(int8x16x2_t *)&v18, v26), v24), 6uLL);
      result->i32[0] = v28.i32[0];
      uint8x16_t v29 = (int8x8_t *)((char *)result + a2);
      BOOL v30 = __OFSUB__(a5, 2);
      a5 -= 2;
      v29->i32[0] = v28.i32[1];
      int8x16_t result = (int8x8_t *)((char *)v29 + a2);
      if ((a5 < 0) ^ v30 | (a5 == 0)) {
        break;
      }
      int8x8_t v25 = (int8x8_t)vqadd_u8((uint8x8_t)v25, (uint8x8_t)0x404040404040404);
      int8x8_t v26 = (int8x8_t)vqadd_u8((uint8x8_t)v26, (uint8x8_t)0x404040404040404);
    }
  }
  return result;
}

uint64_t sub_224A8331C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&dword_224A83534 - *((unsigned __int16 *)&dword_224A83534 + __clz(a4) - 26)))();
}

int16x4_t sub_224A83374(_DWORD *a1, uint64_t a2, uint64_t a3, uint8x8_t a4, uint8x8_t a5, uint64_t a6, int a7, uint64_t a8, _DWORD *a9)
{
  a4.i32[0] = *(_DWORD *)(a3 + 1);
  int16x8_t v16 = (__int32 *)(a3 - 2);
  int16x4_t result = (int16x4_t)vmovl_u8(a4).u64[0];
  do
  {
    a5.i32[0] = *v16;
    int16x8_t v16 = (__int32 *)((char *)v16 - 2);
    a5 = (uint8x8_t)vmovl_u8(a5).u64[0];
    uint8x8_t v18 = (uint8x8_t)vqrshrun_n_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmulq_n_s16(v10, result.i16[0]), v11, result, 1), v12, result, 2), v13, result, 3), v9, (int16x4_t)a5, 2), v14, (int16x4_t)a5, 1), v15,
                         (int16x4_t)a5,
                         0),
                       4uLL);
    BOOL v19 = __OFSUB__(a7, 2);
    a7 -= 2;
    *a1 = v18.i32[0];
    a1 = (_DWORD *)((char *)a1 + a2);
    int8x16_t v20 = (int8x16_t)vmovl_u8(v18);
    *a9 = v18.i32[1];
    a9 = (_DWORD *)((char *)a9 + a2);
    int16x4_t result = (int16x4_t)vextq_s8(v20, v20, 8uLL).u64[0];
  }
  while (!((a7 < 0) ^ v19 | (a7 == 0)));
  return result;
}

int16x8_t sub_224A833C8(_DWORD *a1, uint64_t a2, uint64_t a3, double a4, int16x8_t a5, uint64_t a6, int a7, uint64_t a8, _DWORD *a9)
{
  uint8x8_t v16 = *(uint8x8_t *)(a3 + 1);
  int16x4_t v17 = (unsigned __int32 *)(a3 - 2);
  int16x8_t result = (int16x8_t)vmovl_u8(v16);
  do
  {
    a5.i32[0] = *v17;
    int16x4_t v17 = (unsigned __int32 *)((char *)v17 - 2);
    int16x4_t v19 = (int16x4_t)vmovl_u8(*(uint8x8_t *)a5.i8).u64[0];
    int32x2_t v20 = (int32x2_t)vqrshrun_n_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmulq_n_s16(v10, result.i16[0]), v11, *(int16x4_t *)result.i8, 1), v12, *(int16x4_t *)result.i8, 2), v13, *(int16x4_t *)result.i8, 3), v9, v19, 2), v14, v19, 1), v15,
                         v19,
                         0),
                       4uLL);
    a5 = (int16x8_t)vmovl_u8((uint8x8_t)v20);
    int32x2_t v21 = (int32x2_t)vqrshrun_n_s16(vmlaq_laneq_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_laneq_s16(v10, result, 4), v11, result, 5), v12, result, 6), v13, result, 7), v9, *(int16x4_t *)result.i8, 3), v14, *(int16x4_t *)a5.i8, 3), v15,
                         a5,
                         7),
                       4uLL);
    BOOL v22 = __OFSUB__(a7, 2);
    a7 -= 2;
    *a1 = v20.i32[0];
    a1[1] = v21.i32[0];
    a1 = (_DWORD *)((char *)a1 + a2);
    *a9 = v20.i32[1];
    a9[1] = v21.i32[1];
    a9 = (_DWORD *)((char *)a9 + a2);
    int16x8_t result = (int16x8_t)vmovl_u8((uint8x8_t)vzip2_s32(v20, v21));
  }
  while (!((a7 < 0) ^ v22 | (a7 == 0)));
  return result;
}

_DWORD *sub_224A83440(_DWORD *result, uint64_t a2, uint64_t a3, int a4, int a5, int16x8_t a6, uint64_t a7, _DWORD *a8)
{
  int16x8_t v15 = (uint8x16_t *)(a3 + 1);
  uint8x8_t v16 = (unsigned __int32 *)(a3 - 2);
  uint64_t v17 = a2 - a4;
  for (unsigned int i = a4; ; a4 = i)
  {
    a6.i32[0] = *v16;
    uint8x8_t v16 = (unsigned __int32 *)((char *)v16 - 2);
    a6.i64[0] = vmovl_u8(*(uint8x8_t *)a6.i8).u64[0];
    while (1)
    {
      uint8x16_t v19 = *v15++;
      int16x8_t v20 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v19.i8);
      int16x8_t v21 = (int16x8_t)vmovl_high_u8(v19);
      uint8x8_t v22 = (uint8x8_t)vqrshrun_n_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmulq_lane_s16(v8, *(int16x4_t *)a6.i8, 2), v13, *(int16x4_t *)a6.i8, 1), v14, *(int16x4_t *)a6.i8, 0), v9, *(int16x4_t *)v20.i8, 0), v10, *(int16x4_t *)v20.i8, 1),
                             v11,
                             *(int16x4_t *)v20.i8,
                             2),
                           v12,
                           *(int16x4_t *)v20.i8,
                           3),
                         4uLL);
      int16x8_t v23 = (int16x8_t)vmovl_u8(v22);
      uint8x8_t v24 = (uint8x8_t)vqrshrun_n_s16(vmlaq_laneq_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_laneq_s16(v9, v20, 4), v10, v20, 5), v11, v20, 6), v12, v20, 7), v8, *(int16x4_t *)v20.i8, 3), v13, *(int16x4_t *)v23.i8, 3), v14, v23, 7), 4uLL);
      int16x8_t v25 = (int16x8_t)vmovl_u8(v24);
      uint8x8_t v26 = (uint8x8_t)vqrshrun_n_s16(vmlaq_laneq_s16(vmlaq_lane_s16(vmlaq_laneq_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmulq_n_s16(v9, v21.i16[0]), v10, *(int16x4_t *)v21.i8, 1), v11, *(int16x4_t *)v21.i8, 2), v12, *(int16x4_t *)v21.i8, 3), v8, v20, 7), v13, *(int16x4_t *)v25.i8, 3), v14,
                           v25,
                           7),
                         4uLL);
      a6 = (int16x8_t)vmovl_u8(v26);
      BOOL v27 = __OFSUB__(a4, 16);
      a4 -= 16;
      int8x8_t v28 = vqrshrun_n_s16(vmlaq_laneq_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_laneq_s16(v9, v21, 4), v10, v21, 5), v11, v21, 6), v12, v21, 7), v8, *(int16x4_t *)v21.i8, 3), v13, *(int16x4_t *)a6.i8, 3), v14, a6, 7), 4uLL);
      *int16x8_t result = v22.i32[0];
      result[1] = v24.i32[0];
      result[2] = v26.i32[0];
      result[3] = v28.i32[0];
      result += 4;
      *a8 = v22.i32[1];
      a8[1] = v24.i32[1];
      a8[2] = v26.i32[1];
      a8[3] = v28.i32[1];
      a8 += 4;
      if ((a4 < 0) ^ v27 | (a4 == 0)) {
        break;
      }
      a6.i16[2] = v21.i16[7];
      a6.i8[0] = v28.i8[7];
      a6.i8[2] = v28.i8[3];
    }
    BOOL v27 = __OFSUB__(a5, 2);
    a5 -= 2;
    if ((a5 < 0) ^ v27 | (a5 == 0)) {
      break;
    }
    int16x8_t v15 = (uint8x16_t *)((char *)a8 - i);
    int16x8_t result = (_DWORD *)((char *)result + v17);
    a8 = (_DWORD *)((char *)a8 + v17);
  }
  return result;
}

uint64_t sub_224A8353C(uint64_t a1, uint64_t a2, double *a3, uint64_t a4, unsigned int a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, double))((char *)&dword_224A83714
                                                                    - *((unsigned __int16 *)&dword_224A83714
                                                                      + __clz(a5)
                                                                      - 25)))(a1, 2 * a2, a1 + a2, *a3);
}

_DWORD *sub_224A83564(_DWORD *result, uint64_t a2, _DWORD *a3, int8x8_t *a4, int8x16_t a5, double a6, int8x16_t a7, int8x16_t a8, uint64_t a9, int a10)
{
  do
  {
    int8x8_t v11 = *a4++;
    BOOL v12 = __OFSUB__(a10, 4);
    a10 -= 4;
    *(uint8x8_t *)a8.i8 = vshr_n_u8((uint8x8_t)v11, 4uLL);
    *(int8x8_t *)a7.i8 = vand_s8(v11, v10);
    int8x16_t v13 = vqtbl1q_s8(a5, vzip1q_s8(a7, a8));
    *int16x8_t result = v13.i32[0];
    int16x8_t v14 = (_DWORD *)((char *)result + a2);
    *a3 = v13.i32[1];
    int16x8_t v15 = (_DWORD *)((char *)a3 + a2);
    *int16x8_t v14 = v13.i32[2];
    int16x8_t result = (_DWORD *)((char *)v14 + a2);
    *int16x8_t v15 = v13.i32[3];
    a3 = (_DWORD *)((char *)v15 + a2);
  }
  while (!((a10 < 0) ^ v12 | (a10 == 0)));
  return result;
}

void *sub_224A83594(void *result, uint64_t a2, void *a3, int8x16_t *a4, int8x16_t a5, uint64_t a6, int a7)
{
  do
  {
    int8x16_t v8 = *a4++;
    BOOL v9 = __OFSUB__(a7, 4);
    a7 -= 4;
    int8x16_t v10 = (int8x16_t)vshrq_n_u8((uint8x16_t)v8, 4uLL);
    int8x16_t v11 = vandq_s8(v8, v7);
    int8x16_t v12 = vqtbl1q_s8(a5, vzip1q_s8(v11, v10));
    *int16x8_t result = v12.i64[0];
    int8x16_t v13 = (void *)((char *)result + a2);
    int8x16_t v14 = vqtbl1q_s8(a5, vzip2q_s8(v11, v10));
    *a3 = v12.i64[1];
    int16x8_t v15 = (void *)((char *)a3 + a2);
    *int8x16_t v13 = v14.i64[0];
    int16x8_t result = (void *)((char *)v13 + a2);
    *int16x8_t v15 = v14.i64[1];
    a3 = (void *)((char *)v15 + a2);
  }
  while (!((a7 < 0) ^ v9 | (a7 == 0)));
  return result;
}

int8x16_t *sub_224A835CC(int8x16_t *result, uint64_t a2, int8x16_t *a3, int8x16_t *a4, int8x16_t a5, uint64_t a6, int a7)
{
  do
  {
    int8x16_t v8 = *a4;
    int8x16_t v9 = a4[1];
    a4 += 2;
    BOOL v10 = __OFSUB__(a7, 4);
    a7 -= 4;
    int8x16_t v11 = (int8x16_t)vshrq_n_u8((uint8x16_t)v8, 4uLL);
    int8x16_t v12 = vandq_s8(v8, v7);
    int8x16_t v13 = (int8x16_t)vshrq_n_u8((uint8x16_t)v9, 4uLL);
    int8x16_t v14 = vandq_s8(v9, v7);
    *int16x8_t result = vqtbl1q_s8(a5, vzip1q_s8(v12, v11));
    int16x8_t v15 = (int8x16_t *)((char *)result + a2);
    *a3 = vqtbl1q_s8(a5, vzip2q_s8(v12, v11));
    uint8x8_t v16 = (int8x16_t *)((char *)a3 + a2);
    *int16x8_t v15 = vqtbl1q_s8(a5, vzip1q_s8(v14, v13));
    int16x8_t result = (int8x16_t *)((char *)v15 + a2);
    int8x16_t *v16 = vqtbl1q_s8(a5, vzip2q_s8(v14, v13));
    a3 = (int8x16_t *)((char *)v16 + a2);
  }
  while (!((a7 < 0) ^ v10 | (a7 == 0)));
  return result;
}

int8x16_t *sub_224A8361C(int8x16_t *result, uint64_t a2, int8x16_t *a3, int8x16_t *a4, int8x16_t a5, uint64_t a6, int a7)
{
  do
  {
    int8x16_t v8 = *a4;
    int8x16_t v9 = a4[1];
    int8x16_t v10 = a4[2];
    int8x16_t v11 = a4[3];
    a4 += 4;
    BOOL v12 = __OFSUB__(a7, 4);
    a7 -= 4;
    int8x16_t v13 = (int8x16_t)vshrq_n_u8((uint8x16_t)v8, 4uLL);
    int8x16_t v14 = vandq_s8(v8, v7);
    int8x16_t v15 = (int8x16_t)vshrq_n_u8((uint8x16_t)v9, 4uLL);
    int8x16_t v16 = vandq_s8(v9, v7);
    int8x16_t v17 = (int8x16_t)vshrq_n_u8((uint8x16_t)v10, 4uLL);
    int8x16_t v18 = vandq_s8(v10, v7);
    int8x16_t v19 = (int8x16_t)vshrq_n_u8((uint8x16_t)v11, 4uLL);
    int8x16_t v20 = vandq_s8(v11, v7);
    *int16x8_t result = vqtbl1q_s8(a5, vzip1q_s8(v14, v13));
    result[1] = vqtbl1q_s8(a5, vzip2q_s8(v14, v13));
    int16x8_t v21 = (int8x16_t *)((char *)result + a2);
    *a3 = vqtbl1q_s8(a5, vzip1q_s8(v16, v15));
    a3[1] = vqtbl1q_s8(a5, vzip2q_s8(v16, v15));
    uint8x8_t v22 = (int8x16_t *)((char *)a3 + a2);
    *int16x8_t v21 = vqtbl1q_s8(a5, vzip1q_s8(v18, v17));
    v21[1] = vqtbl1q_s8(a5, vzip2q_s8(v18, v17));
    int16x8_t result = (int8x16_t *)((char *)v21 + a2);
    *uint8x8_t v22 = vqtbl1q_s8(a5, vzip1q_s8(v20, v19));
    v22[1] = vqtbl1q_s8(a5, vzip2q_s8(v20, v19));
    a3 = (int8x16_t *)((char *)v22 + a2);
  }
  while (!((a7 < 0) ^ v12 | (a7 == 0)));
  return result;
}

int8x16_t *sub_224A8369C(int8x16_t *result, uint64_t a2, int8x16_t *a3, int8x16_t *a4, int8x16_t a5, uint64_t a6, int a7)
{
  do
  {
    int8x16_t v8 = *a4;
    int8x16_t v9 = a4[1];
    int8x16_t v10 = a4[2];
    int8x16_t v11 = a4[3];
    a4 += 4;
    BOOL v12 = __OFSUB__(a7, 2);
    a7 -= 2;
    int8x16_t v13 = (int8x16_t)vshrq_n_u8((uint8x16_t)v8, 4uLL);
    int8x16_t v14 = vandq_s8(v8, v7);
    int8x16_t v15 = (int8x16_t)vshrq_n_u8((uint8x16_t)v9, 4uLL);
    int8x16_t v16 = vandq_s8(v9, v7);
    int8x16_t v17 = (int8x16_t)vshrq_n_u8((uint8x16_t)v10, 4uLL);
    int8x16_t v18 = vandq_s8(v10, v7);
    int8x16_t v19 = (int8x16_t)vshrq_n_u8((uint8x16_t)v11, 4uLL);
    int8x16_t v20 = vandq_s8(v11, v7);
    *int16x8_t result = vqtbl1q_s8(a5, vzip1q_s8(v14, v13));
    result[1] = vqtbl1q_s8(a5, vzip2q_s8(v14, v13));
    result[2] = vqtbl1q_s8(a5, vzip1q_s8(v16, v15));
    result[3] = vqtbl1q_s8(a5, vzip2q_s8(v16, v15));
    int16x8_t result = (int8x16_t *)((char *)result + a2);
    *a3 = vqtbl1q_s8(a5, vzip1q_s8(v18, v17));
    a3[1] = vqtbl1q_s8(a5, vzip2q_s8(v18, v17));
    a3[2] = vqtbl1q_s8(a5, vzip1q_s8(v20, v19));
    a3[3] = vqtbl1q_s8(a5, vzip2q_s8(v20, v19));
    a3 = (int8x16_t *)((char *)a3 + a2);
  }
  while (!((a7 < 0) ^ v12 | (a7 == 0)));
  return result;
}

uint64_t sub_224A83720(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  v7.n128_u64[0] = 0x80008000800080;
  v7.n128_u64[1] = 0x80008000800080;
  return ((uint64_t (*)(__n128, __n128))((char *)&dword_224A838BC
                                                 - *((unsigned __int16 *)&dword_224A838BC + __clz(a4) - 26)))(v7, (__n128)vdupq_n_s16(a7));
}

_DWORD *sub_224A83748(_DWORD *result, uint64_t a2, int16x8_t a3, int16x8_t a4, uint64_t a5, uint64_t a6, int a7, int16x8_t *a8, _DWORD *a9)
{
  do
  {
    int16x8_t v9 = *a8;
    int16x8_t v10 = a8[1];
    a8 += 2;
    int16x8_t v11 = vmulq_s16(v9, a4);
    int16x8_t v12 = vmulq_s16(v10, a4);
    *(int8x8_t *)v11.i8 = vqmovun_s16(vaddq_s16(vrshrq_n_s16(vaddq_s16(v11, vcltzq_s16(v11)), 6uLL), a3));
    *(int8x8_t *)v12.i8 = vqmovun_s16(vaddq_s16(vrshrq_n_s16(vaddq_s16(v12, vcltzq_s16(v12)), 6uLL), a3));
    *int16x8_t result = v11.i32[0];
    int8x16_t v13 = (_DWORD *)((char *)result + a2);
    *a9 = v11.i32[1];
    int8x16_t v14 = (_DWORD *)((char *)a9 + a2);
    BOOL v15 = __OFSUB__(a7, 4);
    a7 -= 4;
    *int8x16_t v13 = v12.i32[0];
    int16x8_t result = (_DWORD *)((char *)v13 + a2);
    *int8x16_t v14 = v12.i32[1];
    a9 = (_DWORD *)((char *)v14 + a2);
  }
  while (!((a7 < 0) ^ v15 | (a7 == 0)));
  return result;
}

int8x8_t *sub_224A83798(int8x8_t *result, uint64_t a2, int16x8_t a3, int16x8_t a4, uint64_t a5, uint64_t a6, int a7, int16x8_t *a8, int8x8_t *a9)
{
  do
  {
    int16x8_t v9 = *a8;
    int16x8_t v10 = a8[1];
    int16x8_t v11 = a8[2];
    int16x8_t v12 = a8[3];
    a8 += 4;
    int16x8_t v13 = vmulq_s16(v9, a4);
    int16x8_t v14 = vmulq_s16(v10, a4);
    int16x8_t v15 = vmulq_s16(v11, a4);
    int16x8_t v16 = vmulq_s16(v12, a4);
    *int16x8_t result = vqmovun_s16(vaddq_s16(vrshrq_n_s16(vaddq_s16(v13, vcltzq_s16(v13)), 6uLL), a3));
    int8x16_t v17 = (int8x8_t *)((char *)result + a2);
    *a9 = vqmovun_s16(vaddq_s16(vrshrq_n_s16(vaddq_s16(v14, vcltzq_s16(v14)), 6uLL), a3));
    int8x16_t v18 = (int8x8_t *)((char *)a9 + a2);
    BOOL v19 = __OFSUB__(a7, 4);
    a7 -= 4;
    *int8x16_t v17 = vqmovun_s16(vaddq_s16(vrshrq_n_s16(vaddq_s16(v15, vcltzq_s16(v15)), 6uLL), a3));
    int16x8_t result = (int8x8_t *)((char *)v17 + a2);
    *int8x16_t v18 = vqmovun_s16(vaddq_s16(vrshrq_n_s16(vaddq_s16(v16, vcltzq_s16(v16)), 6uLL), a3));
    a9 = (int8x8_t *)((char *)v18 + a2);
  }
  while (!((a7 < 0) ^ v19 | (a7 == 0)));
  return result;
}

int8x8_t *sub_224A83818(int8x8_t *result, uint64_t a2, int16x8_t a3, int16x8_t a4, uint64_t a5, int a6, int a7, int16x8_t *a8, int8x8_t *a9)
{
  int16x8_t v9 = (int16x8_t *)((char *)a8 + 2 * a6);
  uint64_t v10 = a2 - a6;
  unsigned int v11 = a6;
  do
  {
    do
    {
      int16x8_t v12 = *a8;
      int16x8_t v13 = a8[1];
      a8 += 2;
      int16x8_t v14 = *v9;
      int16x8_t v15 = v9[1];
      v9 += 2;
      int16x8_t v16 = vmulq_s16(v12, a4);
      int16x8_t v17 = vmulq_s16(v13, a4);
      int16x8_t v18 = vmulq_s16(v14, a4);
      int16x8_t v19 = vmulq_s16(v15, a4);
      BOOL v20 = __OFSUB__(a6, 16);
      a6 -= 16;
      *int16x8_t result = vqmovun_s16(vaddq_s16(vrshrq_n_s16(vaddq_s16(v16, vcltzq_s16(v16)), 6uLL), a3));
      result[1] = vqmovun_s16(vaddq_s16(vrshrq_n_s16(vaddq_s16(v17, vcltzq_s16(v17)), 6uLL), a3));
      result += 2;
      *a9 = vqmovun_s16(vaddq_s16(vrshrq_n_s16(vaddq_s16(v18, vcltzq_s16(v18)), 6uLL), a3));
      a9[1] = vqmovun_s16(vaddq_s16(vrshrq_n_s16(vaddq_s16(v19, vcltzq_s16(v19)), 6uLL), a3));
      a9 += 2;
    }
    while (!((a6 < 0) ^ v20 | (a6 == 0)));
    BOOL v20 = __OFSUB__(a7, 2);
    a7 -= 2;
    a8 = (int16x8_t *)((char *)a8 + 2 * v11);
    int16x8_t v9 = (int16x8_t *)((char *)v9 + 2 * v11);
    int16x8_t result = (int8x8_t *)((char *)result + v10);
    a9 = (int8x8_t *)((char *)a9 + v10);
    a6 = v11;
  }
  while (!((a7 < 0) ^ v20 | (a7 == 0)));
  return result;
}

uint64_t sub_224A838C4(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return ((uint64_t (*)(__n128, __n128))((char *)&dword_224A83944
                                                 - *((unsigned __int16 *)&dword_224A83944 + __clz(a5) - 26)))(a1, (__n128)vdupq_n_s16(a8));
}

_DWORD *sub_224A838EC(_DWORD *a1, uint64_t a2, const float *a3, uint64_t a4, int a5, int16x8_t *a6, _DWORD *a7, double a8, int16x8_t a9)
{
  uint16x4_t v9 = (uint16x4_t)vld1_dup_f32(a3);
  v9.i16[0] = vaddlv_u8((uint8x8_t)v9);
  return sub_224A83748(a1, a2, vdupq_lane_s16((int16x4_t)vrshr_n_u16(v9, 3uLL), 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

int8x8_t *sub_224A83900(int8x8_t *a1, uint64_t a2, uint8x8_t *a3, uint64_t a4, int a5, int16x8_t *a6, int8x8_t *a7, double a8, int16x8_t a9)
{
  uint16x4_t v9 = (uint16x4_t)*a3;
  v9.i16[0] = vaddlv_u8(*a3);
  return sub_224A83798(a1, a2, vdupq_lane_s16((int16x4_t)vrshr_n_u16(v9, 3uLL), 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

int8x8_t *sub_224A83914(int8x8_t *a1, uint64_t a2, uint8x16_t *a3, int a4, int a5, int16x8_t *a6, int8x8_t *a7, double a8, int16x8_t a9)
{
  uint8x16_t v9 = *a3;
  v9.i16[0] = vaddlvq_u8(*a3);
  return sub_224A83818(a1, a2, vdupq_lane_s16((int16x4_t)vrshr_n_u16(*(uint16x4_t *)v9.i8, 4uLL), 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

int8x8_t *sub_224A83928(int8x8_t *a1, uint64_t a2, uint64_t a3, int a4, int a5, int16x8_t *a6, int8x8_t *a7, double a8, int16x8_t a9)
{
  uint8x16_t v9 = *(uint8x16_t *)a3;
  uint8x16_t v10 = *(uint8x16_t *)(a3 + 16);
  v9.i16[0] = vaddlvq_u8(*(uint8x16_t *)a3);
  v10.i16[0] = vaddlvq_u8(v10);
  return sub_224A83818(a1, a2, vdupq_lane_s16((int16x4_t)vrshr_n_u16((uint16x4_t)vadd_s16(*(int16x4_t *)v9.i8, *(int16x4_t *)v10.i8), 5uLL), 0), a9, a3, a4, a5, a6, a7);
}

uint64_t sub_224A8394C(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, unsigned int a8)
{
  return ((uint64_t (*)(__n128, __n128))((char *)&qword_224A839E0
                                                 - *((unsigned __int16 *)&qword_224A839E0 + __clz(a6) - 26)))(a1, (__n128)vdupq_n_s16(a8));
}

uint64_t sub_224A83988(uint64_t a1, uint64_t a2, const float *a3)
{
  uint16x4_t v4 = (uint16x4_t)vld1_dup_f32(a3);
  v4.i16[0] = vaddlv_u8((uint8x8_t)v4);
  return v3((__n128)vdupq_lane_s16((int16x4_t)vrshr_n_u16(v4, 3uLL), 0));
}

uint64_t sub_224A8399C(uint64_t a1, uint64_t a2, uint8x8_t *a3)
{
  uint16x4_t v4 = (uint16x4_t)*a3;
  v4.i16[0] = vaddlv_u8(*a3);
  return v3((__n128)vdupq_lane_s16((int16x4_t)vrshr_n_u16(v4, 3uLL), 0));
}

uint64_t sub_224A839B0(uint64_t a1, uint64_t a2, uint8x16_t *a3)
{
  uint8x16_t v4 = *a3;
  v4.i16[0] = vaddlvq_u8(*a3);
  return v3((__n128)vdupq_lane_s16((int16x4_t)vrshr_n_u16(*(uint16x4_t *)v4.i8, 4uLL), 0));
}

uint64_t sub_224A839C4(uint64_t a1, uint64_t a2, uint8x16_t *a3)
{
  uint8x16_t v4 = *a3;
  uint8x16_t v5 = a3[1];
  v4.i16[0] = vaddlvq_u8(*a3);
  v5.i16[0] = vaddlvq_u8(v5);
  return v3((__n128)vdupq_lane_s16((int16x4_t)vrshr_n_u16((uint16x4_t)vadd_s16(*(int16x4_t *)v4.i8, *(int16x4_t *)v5.i8), 5uLL), 0));
}

uint64_t sub_224A839E8(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, unsigned int a8)
{
  return ((uint64_t (*)(__n128, __n128))((char *)&dword_224A83B84
                                                 - *((unsigned __int16 *)&dword_224A83B84 + __clz(a6) - 26)))(a1, (__n128)vdupq_n_s16(a8));
}

uint64_t sub_224A83A3C(uint64_t a1, uint64_t a2, char *a3)
{
  uint8x8_t v4 = (uint8x8_t)*(unsigned int *)a3;
  v4.i16[0] = vaddlv_u8(v4);
  return v3(a1, a2, a3 + 5, *(float *)v4.i32);
}

_DWORD *sub_224A83A50(_DWORD *a1, uint64_t a2, unsigned int *a3, uint64_t a4, int a5, int16x8_t *a6, _DWORD *a7, int16x4_t a8, int16x8_t a9)
{
  int16x4_t v11 = (int16x4_t)*a3;
  v11.i16[0] = vaddlv_u8((uint8x8_t)v11);
  int16x4_t v12 = (int16x4_t)vshl_u16((uint16x4_t)vadd_s16(vadd_s16(a8, v9), v11), v10);
  if (a5 != 4) {
    int16x4_t v12 = vqdmulh_s16(v12, vdup_n_s16(0x2AAB199Au >> (2 * a5)));
  }
  return sub_224A83748(a1, a2, vdupq_lane_s16(v12, 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

uint64_t sub_224A83A90(uint64_t a1, uint64_t a2, uint8x8_t *a3)
{
  uint8x8_t v4 = *a3;
  v4.i16[0] = vaddlv_u8(*a3);
  return v3(a1, a2, (__int8 *)&a3[1] + 1, *(float *)v4.i32);
}

int8x8_t *sub_224A83AA0(int8x8_t *a1, uint64_t a2, uint8x8_t *a3, uint64_t a4, int a5, int16x8_t *a6, int8x8_t *a7, int16x4_t a8, int16x8_t a9)
{
  int16x4_t v11 = (int16x4_t)*a3;
  v11.i16[0] = vaddlv_u8(*a3);
  int16x4_t v12 = (int16x4_t)vshl_u16((uint16x4_t)vadd_s16(vadd_s16(a8, v9), v11), v10);
  if (a5 != 8)
  {
    if (a5 == 32) {
      unsigned int v13 = 6554;
    }
    else {
      unsigned int v13 = 10923;
    }
    int16x4_t v12 = vqdmulh_s16(v12, vdup_n_s16(v13));
  }
  return sub_224A83798(a1, a2, vdupq_lane_s16(v12, 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

uint64_t sub_224A83ADC(uint64_t a1, uint64_t a2, uint8x16_t *a3)
{
  uint8x16_t v4 = *a3;
  v4.i16[0] = vaddlvq_u8(*a3);
  return v3(a1, a2, &a3[1].i8[1], *(float *)v4.i32);
}

int8x8_t *sub_224A83AEC(int8x8_t *a1, uint64_t a2, uint8x16_t *a3, int a4, int a5, int16x8_t *a6, int8x8_t *a7, int16x4_t a8, int16x8_t a9)
{
  uint8x16_t v11 = *a3;
  v11.i16[0] = vaddlvq_u8(*a3);
  int16x4_t v12 = (int16x4_t)vshl_u16((uint16x4_t)vadd_s16(vadd_s16(a8, v9), *(int16x4_t *)v11.i8), v10);
  if (a5 != 16)
  {
    if (a5 == 4) {
      unsigned int v13 = 6554;
    }
    else {
      unsigned int v13 = 10923;
    }
    int16x4_t v12 = vqdmulh_s16(v12, vdup_n_s16(v13));
  }
  return sub_224A83818(a1, a2, vdupq_lane_s16(v12, 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

uint64_t sub_224A83B28(uint64_t a1, uint64_t a2, uint8x16_t *a3)
{
  uint8x16_t v4 = *a3;
  uint8x16_t v5 = a3[1];
  v4.i16[0] = vaddlvq_u8(*a3);
  v5.i16[0] = vaddlvq_u8(v5);
  return v3(a1, a2, &a3[2].i8[1], COERCE_DOUBLE(vadd_s16(*(int16x4_t *)v4.i8, *(int16x4_t *)v5.i8)));
}

int8x8_t *sub_224A83B40(int8x8_t *a1, uint64_t a2, uint64_t a3, int a4, int a5, int16x8_t *a6, int8x8_t *a7, int16x4_t a8, int16x8_t a9)
{
  uint8x16_t v11 = *(uint8x16_t *)a3;
  uint8x16_t v12 = *(uint8x16_t *)(a3 + 16);
  v11.i16[0] = vaddlvq_u8(*(uint8x16_t *)a3);
  v12.i16[0] = vaddlvq_u8(v12);
  int16x4_t v13 = (int16x4_t)vshl_u16((uint16x4_t)vadd_s16(vadd_s16(vadd_s16(a8, v9), *(int16x4_t *)v11.i8), *(int16x4_t *)v12.i8), v10);
  if (a5 != 32) {
    int16x4_t v13 = vqdmulh_s16(v13, vdup_n_s16(0x199A2AABu >> (2 * a5)));
  }
  return sub_224A83818(a1, a2, vdupq_lane_s16(v13, 0), a9, a3, a4, a5, a6, a7);
}

uint64_t sub_224A83B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return ((uint64_t (*)(void))((char *)&dword_224A83F94 - *((unsigned __int16 *)&dword_224A83F94 + __clz(a6) - 27)))();
}

int16x8_t *sub_224A83BE8@<X0>(int16x8_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W6>, int a6@<W8>)
{
  do
  {
    v11.i64[0] = *a2;
    uint16x4_t v10 = (uint64_t *)((char *)a2 + a3);
    v13.i64[0] = *v6;
    uint8x16_t v12 = (uint64_t *)((char *)v6 + a3);
    v11.i64[1] = *v10;
    a2 = (uint64_t *)((char *)v10 + a3);
    v13.i64[1] = *v12;
    signed int v6 = (uint64_t *)((char *)v12 + a3);
    int16x8_t v14 = vshlq_n_s16(vaddq_s16((int16x8_t)vpaddlq_u8(v11), (int16x8_t)vpaddlq_u8(v13)), 1uLL);
    BOOL v15 = __OFSUB__(a6, 2);
    a6 -= 2;
    *a1++ = v14;
    int16x8_t v7 = vaddq_s16(v7, v14);
  }
  while (!((a6 < 0) ^ v15 | (a6 == 0)));
  int16x8_t v16 = (int16x8_t)vtrn2q_s64((int64x2_t)v14, (int64x2_t)v14);
  if (a4)
  {
    do
    {
      BOOL v15 = __OFSUB__(a4, 4);
      a4 -= 4;
      *a1 = v16;
      a1[1] = v16;
      a1 += 2;
      int16x8_t v7 = vaddq_s16(v7, v16);
      int16x8_t v8 = vaddq_s16(v8, v16);
    }
    while (!((a4 < 0) ^ v15 | (a4 == 0)));
  }
  uint16x8_t v17 = (uint16x8_t)vaddq_s16(v7, v8);
  v17.i32[0] = vaddlvq_u16(v17);
  int16x8_t result = (int16x8_t *)((char *)a1 - 8 * a5);
  int16x8_t v19 = vdupq_lane_s16((int16x4_t)vrshl_u32(*(uint32x2_t *)v17.i8, v9), 0);
  do
  {
    BOOL v15 = __OFSUB__(a5, 4);
    a5 -= 4;
    int16x8_t v20 = vsubq_s16(result[1], v19);
    *int16x8_t result = vsubq_s16(*result, v19);
    result[1] = v20;
    result += 2;
  }
  while (!((a5 < 0) ^ v15 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224A83C68@<X0>(int16x8_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W6>, int a7@<W8>, int64x2_t a8@<Q3>)
{
  if (a4)
  {
    do
    {
      v25.i64[0] = *a2;
      uint8x8_t v24 = (uint64_t *)((char *)a2 + a3);
      v27.i64[0] = *v8;
      uint8x8_t v26 = (uint64_t *)((char *)v8 + a3);
      v25.i64[1] = *v24;
      a2 = (uint64_t *)((char *)v24 + a3);
      v27.i64[1] = *v26;
      int16x8_t v8 = (uint64_t *)((char *)v26 + a3);
      int16x8_t v28 = vshlq_n_s16(vaddq_s16((int16x8_t)vpaddlq_u8(v25), (int16x8_t)vpaddlq_u8(v27)), 1uLL);
      *(int16x4_t *)v27.i8 = vdup_lane_s16(*(int16x4_t *)v28.i8, 3);
      *(int16x4_t *)a8.i8 = vdup_laneq_s16(v28, 7);
      int64x2_t v29 = vtrn2q_s64((int64x2_t)v28, (int64x2_t)v28);
      BOOL v22 = __OFSUB__(a7, 2);
      a7 -= 2;
      a1->i64[0] = v28.i64[0];
      a1->i64[1] = v27.i64[0];
      a1[1].i64[0] = v29.i64[0];
      a1[1].i64[1] = a8.i64[0];
      a1 += 2;
      *(int16x4_t *)v9.i8 = vadd_s16(*(int16x4_t *)v9.i8, *(int16x4_t *)v28.i8);
      *(int16x4_t *)v10.i8 = vadd_s16(*(int16x4_t *)v10.i8, *(int16x4_t *)v27.i8);
      *(int16x4_t *)v11.i8 = vadd_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)v29.i8);
      *(int16x4_t *)v12.i8 = vadd_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)a8.i8);
    }
    while (!((a7 < 0) ^ v22 | (a7 == 0)));
    int16x8_t v23 = (int16x8_t)vtrn1q_s64(v29, a8);
    int16x8_t v21 = v23;
  }
  else
  {
    do
    {
      uint8x16_t v15 = *(uint8x16_t *)a2;
      int16x8_t v14 = (uint8x16_t *)((char *)a2 + a3);
      uint8x16_t v17 = *(uint8x16_t *)v8;
      int16x8_t v16 = (uint8x16_t *)((char *)v8 + a3);
      uint8x16_t v18 = *v14;
      a2 = (uint64_t *)((char *)v14->i64 + a3);
      uint8x16_t v19 = *v16;
      int16x8_t v8 = (uint64_t *)((char *)v16->i64 + a3);
      int16x8_t v20 = vshlq_n_s16(vaddq_s16((int16x8_t)vpaddlq_u8(v15), (int16x8_t)vpaddlq_u8(v17)), 1uLL);
      int16x8_t v21 = vshlq_n_s16(vaddq_s16((int16x8_t)vpaddlq_u8(v18), (int16x8_t)vpaddlq_u8(v19)), 1uLL);
      BOOL v22 = __OFSUB__(a7, 2);
      a7 -= 2;
      *a1 = v20;
      a1[1] = v21;
      a1 += 2;
      int16x8_t v9 = vaddq_s16(v9, v20);
      int16x8_t v10 = vaddq_s16(v10, v21);
    }
    while (!((a7 < 0) ^ v22 | (a7 == 0)));
    int16x8_t v23 = v21;
  }
  if (a5)
  {
    do
    {
      BOOL v22 = __OFSUB__(a5, 4);
      a5 -= 4;
      *a1 = v23;
      a1[1] = v21;
      BOOL v30 = a1 + 2;
      int16x8_t v9 = vaddq_s16(v9, v23);
      int16x8_t v10 = vaddq_s16(v10, v21);
      int16x8_t *v30 = v23;
      v30[1] = v21;
      a1 = v30 + 2;
      int16x8_t v11 = vaddq_s16(v11, v23);
      int16x8_t v12 = vaddq_s16(v12, v21);
    }
    while (!((a5 < 0) ^ v22 | (a5 == 0)));
  }
  int32x4_t v31 = vaddq_s32((int32x4_t)vpaddlq_u16((uint16x8_t)vaddq_s16(v9, v10)), (int32x4_t)vpaddlq_u16((uint16x8_t)vaddq_s16(v11, v12)));
  v31.i32[0] = vaddvq_s32(v31);
  int16x8_t result = &a1[-a6];
  int16x8_t v33 = vdupq_lane_s16((int16x4_t)vrshl_u32(*(uint32x2_t *)v31.i8, v13), 0);
  do
  {
    BOOL v22 = __OFSUB__(a6, 4);
    a6 -= 4;
    int16x8_t v34 = vsubq_s16(result[1], v33);
    int16x8_t v35 = vsubq_s16(result[2], v33);
    int16x8_t v36 = vsubq_s16(result[3], v33);
    *int16x8_t result = vsubq_s16(*result, v33);
    result[1] = v34;
    result[2] = v35;
    result[3] = v36;
    result += 4;
  }
  while (!((a6 < 0) ^ v22 | (a6 == 0)));
  return result;
}

uint64_t sub_224A83D74(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&dword_224A83F9C - *((unsigned __int16 *)&dword_224A83F9C + a4)))();
}

void sub_224A83D84(int16x8_t *a1@<X0>, uint8x16_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  do
  {
    uint8x16_t v11 = *a2;
    uint8x16_t v12 = a2[1];
    int16x8_t v10 = (uint8x16_t *)((char *)a2 + a3);
    uint8x16_t v14 = *v5;
    uint8x16_t v15 = v5[1];
    uint32x2_t v13 = (uint8x16_t *)((char *)v5 + a3);
    uint8x16_t v16 = *v10;
    uint8x16_t v17 = v10[1];
    a2 = (uint8x16_t *)((char *)v10 + a3);
    uint8x16_t v18 = *v13;
    uint8x16_t v19 = v13[1];
    uint8x16_t v5 = (uint8x16_t *)((char *)v13 + a3);
    int16x8_t v20 = vshlq_n_s16(vaddq_s16((int16x8_t)vpaddlq_u8(v11), (int16x8_t)vpaddlq_u8(v14)), 1uLL);
    int16x8_t v21 = vshlq_n_s16(vaddq_s16((int16x8_t)vpaddlq_u8(v12), (int16x8_t)vpaddlq_u8(v15)), 1uLL);
    int16x8_t v22 = vshlq_n_s16(vaddq_s16((int16x8_t)vpaddlq_u8(v16), (int16x8_t)vpaddlq_u8(v18)), 1uLL);
    int16x8_t v23 = vshlq_n_s16(vaddq_s16((int16x8_t)vpaddlq_u8(v17), (int16x8_t)vpaddlq_u8(v19)), 1uLL);
    BOOL v24 = __OFSUB__(a5, 2);
    a5 -= 2;
    *a1 = v20;
    a1[1] = v21;
    a1[2] = v22;
    a1[3] = v23;
    a1 += 4;
    int16x8_t v6 = vaddq_s16(v6, v20);
    int16x8_t v7 = vaddq_s16(v7, v21);
    int16x8_t v8 = vaddq_s16(v8, v22);
    int16x8_t v9 = vaddq_s16(v9, v23);
  }
  while (!((a5 < 0) ^ v24 | (a5 == 0)));
  if (a4)
  {
    do
    {
      BOOL v24 = __OFSUB__(a4, 4);
      a4 -= 4;
      *a1 = v22;
      a1[1] = v23;
      a1[2] = v22;
      a1[3] = v23;
      uint8x16_t v25 = a1 + 4;
      *uint8x16_t v25 = v22;
      v25[1] = v23;
      v25[2] = v22;
      v25[3] = v23;
      a1 = v25 + 4;
      int16x8_t v6 = vaddq_s16(vaddq_s16(v6, v22), v22);
      int16x8_t v7 = vaddq_s16(vaddq_s16(v7, v23), v23);
      int16x8_t v8 = vaddq_s16(vaddq_s16(v8, v22), v22);
      int16x8_t v9 = vaddq_s16(vaddq_s16(v9, v23), v23);
    }
    while (!((a4 < 0) ^ v24 | (a4 == 0)));
  }
  JUMPOUT(0x224A83D2CLL);
}

uint64_t sub_224A83FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return ((uint64_t (*)(void))((char *)&dword_224A8425C - *((unsigned __int16 *)&dword_224A8425C + __clz(a6) - 27)))();
}

void sub_224A83FF8(int16x8_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  do
  {
    v8.i64[0] = *a2;
    int16x8_t v7 = (uint64_t *)((char *)a2 + a3);
    v8.i64[1] = *v4;
    int16x8_t v9 = (uint64_t *)((char *)v4 + a3);
    v10.i64[0] = *v7;
    a2 = (uint64_t *)((char *)v7 + a3);
    v10.i64[1] = *v9;
    uint8x16_t v4 = (uint64_t *)((char *)v9 + a3);
    int16x8_t v11 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v8), 2uLL);
    int16x8_t v12 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v10), 2uLL);
    BOOL v13 = __OFSUB__(a4, 4);
    a4 -= 4;
    int16x8_t v5 = vaddq_s16(v5, v11);
    int16x8_t v6 = vaddq_s16(v6, v12);
    *a1 = v11;
    a1[1] = v12;
    a1 += 2;
  }
  while (!((a4 < 0) ^ v13 | (a4 == 0)));
  JUMPOUT(0x224A83C20);
}

void sub_224A84038(int16x8_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W8>, int64x2_t a6@<Q4>, int64x2_t a7@<Q6>)
{
  if (a4)
  {
    do
    {
      v24.i64[0] = *a2;
      int16x8_t v23 = (uint64_t *)((char *)a2 + a3);
      v24.i64[1] = *v7;
      uint8x16_t v25 = (uint64_t *)((char *)v7 + a3);
      v26.i64[0] = *v23;
      a2 = (uint64_t *)((char *)v23 + a3);
      v26.i64[1] = *v25;
      int16x8_t v7 = (uint64_t *)((char *)v25 + a3);
      int16x8_t v27 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v24), 2uLL);
      int16x8_t v28 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v26), 2uLL);
      *(int16x4_t *)a6.i8 = vdup_lane_s16(*(int16x4_t *)v27.i8, 3);
      *(int16x4_t *)a7.i8 = vdup_lane_s16(*(int16x4_t *)v28.i8, 3);
      int16x8_t v29 = (int16x8_t)vtrn2q_s64((int64x2_t)v27, (int64x2_t)vdupq_laneq_s16(v27, 7));
      int16x8_t v30 = (int16x8_t)vtrn1q_s64((int64x2_t)v27, a6);
      int16x8_t v31 = (int16x8_t)vtrn2q_s64((int64x2_t)v28, (int64x2_t)vdupq_laneq_s16(v28, 7));
      int16x8_t v32 = (int16x8_t)vtrn1q_s64((int64x2_t)v28, a7);
      BOOL v22 = __OFSUB__(a5, 4);
      a5 -= 4;
      *a1 = v30;
      a1[1] = v29;
      a1[2] = v32;
      a1[3] = v31;
      a1 += 4;
      int16x8_t v8 = vaddq_s16(v8, v30);
      int16x8_t v9 = vaddq_s16(v9, v29);
      int16x8_t v10 = vaddq_s16(v10, v32);
      int16x8_t v11 = vaddq_s16(v11, v31);
    }
    while (!((a5 < 0) ^ v22 | (a5 == 0)));
  }
  else
  {
    do
    {
      uint8x16_t v13 = *(uint8x16_t *)a2;
      int16x8_t v12 = (uint8x16_t *)((char *)a2 + a3);
      uint8x16_t v15 = *(uint8x16_t *)v7;
      uint8x16_t v14 = (uint8x16_t *)((char *)v7 + a3);
      uint8x16_t v16 = *v12;
      a2 = (uint64_t *)((char *)v12->i64 + a3);
      uint8x16_t v17 = *v14;
      int16x8_t v7 = (uint64_t *)((char *)v14->i64 + a3);
      int16x8_t v18 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v13), 2uLL);
      int16x8_t v19 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v15), 2uLL);
      int16x8_t v20 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v16), 2uLL);
      int16x8_t v21 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v17), 2uLL);
      BOOL v22 = __OFSUB__(a5, 4);
      a5 -= 4;
      *a1 = v18;
      a1[1] = v19;
      a1[2] = v20;
      a1[3] = v21;
      a1 += 4;
      int16x8_t v8 = vaddq_s16(v8, v18);
      int16x8_t v9 = vaddq_s16(v9, v19);
      int16x8_t v10 = vaddq_s16(v10, v20);
      int16x8_t v11 = vaddq_s16(v11, v21);
    }
    while (!((a5 < 0) ^ v22 | (a5 == 0)));
  }
  JUMPOUT(0x224A83D08);
}

uint64_t sub_224A840FC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&dword_224A84264 - *((unsigned __int16 *)&dword_224A84264 + a4)))();
}

void sub_224A8410C(int16x8_t *a1@<X0>, uint8x16_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  do
  {
    uint8x16_t v9 = *a2;
    uint8x16_t v10 = a2[1];
    a2 = (uint8x16_t *)((char *)a2 + a3);
    uint8x16_t v11 = *v4;
    uint8x16_t v12 = v4[1];
    uint8x16_t v4 = (uint8x16_t *)((char *)v4 + a3);
    int16x8_t v13 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v9), 2uLL);
    int16x8_t v14 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v10), 2uLL);
    int16x8_t v15 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v11), 2uLL);
    int16x8_t v16 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v12), 2uLL);
    BOOL v17 = __OFSUB__(a4, 2);
    a4 -= 2;
    *a1 = v13;
    a1[1] = v14;
    a1[2] = v15;
    a1[3] = v16;
    a1 += 4;
    int16x8_t v5 = vaddq_s16(v5, v13);
    int16x8_t v6 = vaddq_s16(v6, v14);
    int16x8_t v7 = vaddq_s16(v7, v15);
    int16x8_t v8 = vaddq_s16(v8, v16);
  }
  while (!((a4 < 0) ^ v17 | (a4 == 0)));
  JUMPOUT(0x224A83F58);
}

void sub_224A8415C(uint64_t a1@<X0>, uint8x16_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>, __n128 a5@<Q1>, __n128 a6@<Q3>, int64x2_t a7@<Q4>, int64x2_t a8@<Q5>)
{
  do
  {
    a5.n128_u64[0] = a2[1].u64[0];
    uint8x16_t v13 = *a2;
    a2 = (uint8x16_t *)((char *)a2 + a3);
    a6.n128_u64[0] = v8[1].u64[0];
    uint8x16_t v14 = *v8;
    int16x8_t v8 = (uint8x16_t *)((char *)v8 + a3);
    a5.n128_u64[0] = (unint64_t)vshl_n_s16((int16x4_t)vpaddl_u8((uint8x8_t)a5.n128_u64[0]), 2uLL);
    int16x8_t v15 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v13), 2uLL);
    a6.n128_u64[0] = (unint64_t)vshl_n_s16((int16x4_t)vpaddl_u8((uint8x8_t)a6.n128_u64[0]), 2uLL);
    int16x8_t v16 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v14), 2uLL);
    *(int16x4_t *)a7.i8 = vdup_lane_s16((int16x4_t)a5.n128_u64[0], 3);
    *(int16x4_t *)a8.i8 = vdup_lane_s16((int16x4_t)a6.n128_u64[0], 3);
    a5 = (__n128)vtrn1q_s64((int64x2_t)a5, a7);
    a6 = (__n128)vtrn1q_s64((int64x2_t)a6, a8);
    BOOL v17 = __OFSUB__(a4, 2);
    a4 -= 2;
    *(int16x8_t *)a1 = v15;
    *(__n128 *)(a1 + 16) = a5;
    *(int16x8_t *)(a1 + 32) = v16;
    *(__n128 *)(a1 + 48) = a6;
    a1 += 64;
    int16x8_t v9 = vaddq_s16(v9, v15);
    int16x8_t v10 = vaddq_s16(v10, (int16x8_t)a5);
    int16x8_t v11 = vaddq_s16(v11, v16);
    int16x8_t v12 = vaddq_s16(v12, (int16x8_t)a6);
  }
  while (!((a4 < 0) ^ v17 | (a4 == 0)));
  JUMPOUT(0x224A83F58);
}

void sub_224A841C4(int16x8_t *a1@<X0>, uint8x16_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  do
  {
    uint8x16_t v9 = *a2;
    a2 = (uint8x16_t *)((char *)a2 + a3);
    uint8x16_t v10 = *v4;
    uint8x16_t v4 = (uint8x16_t *)((char *)v4 + a3);
    int16x8_t v11 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v9), 2uLL);
    int16x8_t v12 = vshlq_n_s16((int16x8_t)vpaddlq_u8(v10), 2uLL);
    int16x8_t v13 = vdupq_laneq_s16(v11, 7);
    int16x8_t v14 = vdupq_laneq_s16(v12, 7);
    BOOL v15 = __OFSUB__(a4, 2);
    a4 -= 2;
    *a1 = v11;
    a1[1] = v13;
    a1[2] = v12;
    a1[3] = v14;
    a1 += 4;
    int16x8_t v5 = vaddq_s16(v5, v11);
    int16x8_t v6 = vaddq_s16(v6, v13);
    int16x8_t v7 = vaddq_s16(v7, v12);
    int16x8_t v8 = vaddq_s16(v8, v14);
  }
  while (!((a4 < 0) ^ v15 | (a4 == 0)));
  JUMPOUT(0x224A83F58);
}

void sub_224A8420C(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>, __n128 a5@<Q0>, __n128 a6@<Q2>)
{
  do
  {
    a5.n128_u64[0] = *a2;
    a2 = (unint64_t *)((char *)a2 + a3);
    a6.n128_u64[0] = *v6;
    int16x8_t v6 = (unint64_t *)((char *)v6 + a3);
    a5.n128_u64[0] = (unint64_t)vshl_n_s16((int16x4_t)vpaddl_u8((uint8x8_t)a5.n128_u64[0]), 2uLL);
    a6.n128_u64[0] = (unint64_t)vshl_n_s16((int16x4_t)vpaddl_u8((uint8x8_t)a6.n128_u64[0]), 2uLL);
    int16x8_t v11 = vdupq_lane_s16((int16x4_t)a5.n128_u64[0], 3);
    int16x8_t v12 = vdupq_lane_s16((int16x4_t)a6.n128_u64[0], 3);
    a5 = (__n128)vtrn1q_s64((int64x2_t)a5, (int64x2_t)v11);
    a6 = (__n128)vtrn1q_s64((int64x2_t)a6, (int64x2_t)v12);
    BOOL v13 = __OFSUB__(a4, 2);
    a4 -= 2;
    *(__n128 *)a1 = a5;
    *(int16x8_t *)(a1 + 16) = v11;
    *(__n128 *)(a1 + 32) = a6;
    *(int16x8_t *)(a1 + 48) = v12;
    a1 += 64;
    int16x8_t v7 = vaddq_s16(v7, (int16x8_t)a5);
    int16x8_t v8 = vaddq_s16(v8, v11);
    int16x8_t v9 = vaddq_s16(v9, (int16x8_t)a6);
    int16x8_t v10 = vaddq_s16(v10, v12);
  }
  while (!((a4 < 0) ^ v13 | (a4 == 0)));
  JUMPOUT(0x224A83F58);
}

uint64_t sub_224A8426C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return ((uint64_t (*)(void))((char *)&qword_224A84618 - *((unsigned __int16 *)&qword_224A84618 + __clz(a6) - 26)))();
}

void sub_224A842C0(int16x8_t *a1@<X0>, __int32 *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  do
  {
    v8.i32[0] = *a2;
    int16x8_t v7 = (__int32 *)((char *)a2 + a3);
    v8.i32[1] = *v4;
    int16x8_t v9 = (__int32 *)((char *)v4 + a3);
    v10.i32[0] = *v7;
    a2 = (__int32 *)((char *)v7 + a3);
    v10.i32[1] = *v9;
    uint8x16_t v4 = (__int32 *)((char *)v9 + a3);
    int16x8_t v11 = (int16x8_t)vshll_n_u8(v8, 3uLL);
    int16x8_t v12 = (int16x8_t)vshll_n_u8(v10, 3uLL);
    BOOL v13 = __OFSUB__(a4, 4);
    a4 -= 4;
    int16x8_t v5 = vaddq_s16(v5, v11);
    int16x8_t v6 = vaddq_s16(v6, v12);
    *a1 = v11;
    a1[1] = v12;
    a1 += 2;
  }
  while (!((a4 < 0) ^ v13 | (a4 == 0)));
  JUMPOUT(0x224A83C20);
}

void sub_224A842F8(int16x8_t *a1@<X0>, uint8x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  do
  {
    uint8x8_t v10 = *a2;
    int16x8_t v9 = (uint8x8_t *)((char *)a2 + a3);
    uint8x8_t v12 = *v4;
    int16x8_t v11 = (uint8x8_t *)((char *)v4 + a3);
    uint8x8_t v13 = *v9;
    a2 = (uint8x8_t *)((char *)v9 + a3);
    int16x8_t v14 = (int16x8_t)vshll_n_u8(v10, 3uLL);
    uint8x8_t v15 = *v11;
    uint8x16_t v4 = (uint8x8_t *)((char *)v11 + a3);
    int16x8_t v16 = (int16x8_t)vshll_n_u8(v12, 3uLL);
    int16x8_t v17 = (int16x8_t)vshll_n_u8(v13, 3uLL);
    int16x8_t v18 = (int16x8_t)vshll_n_u8(v15, 3uLL);
    BOOL v19 = __OFSUB__(a4, 4);
    a4 -= 4;
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v17;
    a1[3] = v18;
    a1 += 4;
    int16x8_t v5 = vaddq_s16(v5, v14);
    int16x8_t v6 = vaddq_s16(v6, v16);
    int16x8_t v7 = vaddq_s16(v7, v17);
    int16x8_t v8 = vaddq_s16(v8, v18);
  }
  while (!((a4 < 0) ^ v19 | (a4 == 0)));
  JUMPOUT(0x224A83D08);
}

void sub_224A84340(int16x8_t *a1@<X0>, uint8x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W8>)
{
  if (a4)
  {
    do
    {
      uint8x8_t v27 = *a2;
      uint8x16_t v26 = (uint8x8_t *)((char *)a2 + a3);
      uint8x8_t v29 = *v5;
      int16x8_t v28 = (uint8x8_t *)((char *)v5 + a3);
      uint8x8_t v30 = *v26;
      a2 = (uint8x8_t *)((char *)v26 + a3);
      uint8x8_t v31 = *v28;
      int16x8_t v5 = (uint8x8_t *)((char *)v28 + a3);
      int16x8_t v32 = (int16x8_t)vshll_n_u8(v27, 3uLL);
      int16x8_t v33 = (int16x8_t)vshll_n_u8(v29, 3uLL);
      int16x8_t v34 = (int16x8_t)vshll_n_u8(v30, 3uLL);
      int16x8_t v35 = (int16x8_t)vshll_n_u8(v31, 3uLL);
      int16x8_t v36 = vdupq_laneq_s16(v32, 7);
      int16x8_t v37 = vdupq_laneq_s16(v33, 7);
      int16x8_t v38 = vdupq_laneq_s16(v34, 7);
      int16x8_t v39 = vdupq_laneq_s16(v35, 7);
      BOOL v24 = __OFSUB__(a5, 4);
      a5 -= 4;
      *a1 = v32;
      a1[1] = v36;
      a1[2] = v33;
      a1[3] = v37;
      uint8x16_t v40 = a1 + 4;
      *uint8x16_t v40 = v34;
      v40[1] = v38;
      v40[2] = v35;
      v40[3] = v39;
      a1 = v40 + 4;
      int16x8_t v6 = vaddq_s16(vaddq_s16(v6, v32), v34);
      int16x8_t v7 = vaddq_s16(vaddq_s16(v7, v36), v38);
      int16x8_t v8 = vaddq_s16(vaddq_s16(v8, v33), v35);
      int16x8_t v9 = vaddq_s16(vaddq_s16(v9, v37), v39);
    }
    while (!((a5 < 0) ^ v24 | (a5 == 0)));
  }
  else
  {
    do
    {
      uint8x16_t v11 = *(uint8x16_t *)a2->i8;
      uint8x8_t v10 = (uint8x16_t *)((char *)a2 + a3);
      uint8x16_t v13 = *(uint8x16_t *)v5->i8;
      uint8x8_t v12 = (uint8x16_t *)((char *)v5 + a3);
      uint8x16_t v14 = *v10;
      a2 = (uint8x8_t *)&v10->i8[a3];
      int16x8_t v15 = (int16x8_t)vshll_high_n_u8(v11, 3uLL);
      int16x8_t v16 = (int16x8_t)vshll_n_u8(*(uint8x8_t *)v11.i8, 3uLL);
      uint8x16_t v17 = *v12;
      int16x8_t v5 = (uint8x8_t *)&v12->i8[a3];
      int16x8_t v18 = (int16x8_t)vshll_high_n_u8(v13, 3uLL);
      int16x8_t v19 = (int16x8_t)vshll_n_u8(*(uint8x8_t *)v13.i8, 3uLL);
      int16x8_t v20 = (int16x8_t)vshll_high_n_u8(v14, 3uLL);
      int16x8_t v21 = (int16x8_t)vshll_n_u8(*(uint8x8_t *)v14.i8, 3uLL);
      int16x8_t v22 = (int16x8_t)vshll_high_n_u8(v17, 3uLL);
      int16x8_t v23 = (int16x8_t)vshll_n_u8(*(uint8x8_t *)v17.i8, 3uLL);
      BOOL v24 = __OFSUB__(a5, 4);
      a5 -= 4;
      *a1 = v16;
      a1[1] = v15;
      a1[2] = v19;
      a1[3] = v18;
      uint8x16_t v25 = a1 + 4;
      *uint8x16_t v25 = v21;
      v25[1] = v20;
      v25[2] = v23;
      v25[3] = v22;
      a1 = v25 + 4;
      int16x8_t v6 = vaddq_s16(vaddq_s16(v6, v16), v21);
      int16x8_t v7 = vaddq_s16(vaddq_s16(v7, v15), v20);
      int16x8_t v8 = vaddq_s16(vaddq_s16(v8, v19), v23);
      int16x8_t v9 = vaddq_s16(vaddq_s16(v9, v18), v22);
    }
    while (!((a5 < 0) ^ v24 | (a5 == 0)));
  }
  JUMPOUT(0x224A83F58);
}

uint64_t sub_224A8442C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&qword_224A84620 - *(unsigned __int16 *)((char *)&qword_224A84620 + a4)))();
}

void sub_224A8443C(int16x8_t *a1@<X0>, uint8x16_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  do
  {
    uint8x16_t v10 = *a2;
    uint8x16_t v11 = a2[1];
    a2 = (uint8x16_t *)((char *)a2 + a3);
    uint8x16_t v12 = *v5;
    uint8x16_t v13 = v5[1];
    int16x8_t v5 = (uint8x16_t *)((char *)v5 + a3);
    int16x8_t v14 = (int16x8_t)vshll_n_u8(*(uint8x8_t *)v10.i8, 3uLL);
    int16x8_t v15 = (int16x8_t)vshll_high_n_u8(v10, 3uLL);
    int16x8_t v16 = (int16x8_t)vshll_n_u8(*(uint8x8_t *)v11.i8, 3uLL);
    int16x8_t v17 = (int16x8_t)vshll_high_n_u8(v11, 3uLL);
    int16x8_t v18 = (int16x8_t)vshll_n_u8(*(uint8x8_t *)v12.i8, 3uLL);
    int16x8_t v19 = (int16x8_t)vshll_high_n_u8(v12, 3uLL);
    int16x8_t v20 = (int16x8_t)vshll_n_u8(*(uint8x8_t *)v13.i8, 3uLL);
    int16x8_t v21 = (int16x8_t)vshll_high_n_u8(v13, 3uLL);
    BOOL v22 = __OFSUB__(a5, 2);
    a5 -= 2;
    *a1 = v14;
    a1[1] = v15;
    a1[2] = v16;
    a1[3] = v17;
    int16x8_t v23 = a1 + 4;
    *int16x8_t v23 = v18;
    v23[1] = v19;
    v23[2] = v20;
    v23[3] = v21;
    a1 = v23 + 4;
    int16x8_t v6 = vaddq_s16(vaddq_s16(v6, v14), v18);
    int16x8_t v7 = vaddq_s16(vaddq_s16(v7, v15), v19);
    int16x8_t v8 = vaddq_s16(vaddq_s16(v8, v16), v20);
    int16x8_t v9 = vaddq_s16(vaddq_s16(v9, v17), v21);
  }
  while (!((a5 < 0) ^ v22 | (a5 == 0)));
  if (a4)
  {
    do
    {
      BOOL v22 = __OFSUB__(a4, 2);
      a4 -= 2;
      *a1 = v18;
      a1[1] = v19;
      a1[2] = v20;
      a1[3] = v21;
      BOOL v24 = a1 + 4;
      int16x8_t *v24 = v18;
      v24[1] = v19;
      v24[2] = v20;
      v24[3] = v21;
      a1 = v24 + 4;
      int16x8_t v6 = vaddq_s16(vaddq_s16(v6, v18), v18);
      int16x8_t v7 = vaddq_s16(vaddq_s16(v7, v19), v19);
      int16x8_t v8 = vaddq_s16(vaddq_s16(v8, v20), v20);
      int16x8_t v9 = vaddq_s16(vaddq_s16(v9, v21), v21);
    }
    while (!((a4 < 0) ^ v22 | (a4 == 0)));
  }
  JUMPOUT(0x224A83D50);
}

double sub_224A84628()
{
  uint8x16_t v20 = vabdq_u8((uint8x16_t)v12, (uint8x16_t)v13);
  int16x8_t v21 = (int16x8_t)vmaxq_u8(vabdq_u8((uint8x16_t)v11, (uint8x16_t)v12), vabdq_u8((uint8x16_t)v14, (uint8x16_t)v13));
  int8x16_t v22 = vandq_s8(vandq_s8((int8x16_t)vcgeq_u8(v1, vmaxq_u8((uint8x16_t)v21, (uint8x16_t)vandq_s8((int8x16_t)vmaxq_u8(vmaxq_u8(vabdq_u8((uint8x16_t)v10, (uint8x16_t)v11), vabdq_u8(v15, (uint8x16_t)v14)), vmaxq_u8(vabdq_u8(v9, (uint8x16_t)v10), vabdq_u8(v16, v15))), v4))), (int8x16_t)vcgeq_u8(v0, vqaddq_u8(vqaddq_u8(v20, v20), vshrq_n_u8(vabdq_u8((uint8x16_t)v11, (uint8x16_t)v14), 1uLL)))), v3);
  int8x16_t v23 = vandq_s8(v4, v22);
  int8x16_t v24 = vandq_s8(v5, v22);
  if (v22.i64[0] + v22.i64[1])
  {
    v25.i64[0] = 0x101010101010101;
    v25.i64[1] = 0x101010101010101;
    int8x16_t v26 = vandq_s8((int8x16_t)vcgeq_u8(v25, vmaxq_u8(vmaxq_u8(vmaxq_u8(vabdq_u8((uint8x16_t)v10, (uint8x16_t)v12), vabdq_u8((uint8x16_t)v11, (uint8x16_t)v12)), vmaxq_u8(vabdq_u8((uint8x16_t)v14, (uint8x16_t)v13), vabdq_u8(v15, (uint8x16_t)v13))), vmaxq_u8(vabdq_u8(v9, (uint8x16_t)v12), vabdq_u8(v16, (uint8x16_t)v13)))), v23);
    int8x16_t v27 = vbicq_s8(v22, v26);
    int8x16_t v28 = vandq_s8(vandq_s8(v24, (int8x16_t)vcgeq_u8(v25, vmaxq_u8(vmaxq_u8(vmaxq_u8(vabdq_u8(v6, (uint8x16_t)v12), vabdq_u8((uint8x16_t)v7, (uint8x16_t)v12)), vmaxq_u8(vabdq_u8(v8, (uint8x16_t)v12), vabdq_u8(v17, (uint8x16_t)v13))), vmaxq_u8(vabdq_u8(v18, (uint8x16_t)v13), vabdq_u8(v19, (uint8x16_t)v13))))), v26);
    int8x16_t v29 = vbicq_s8(v26, v28);
    if (v27.i64[0] + v27.i64[1])
    {
      v30.i64[0] = 0x8080808080808080;
      v30.i64[1] = 0x8080808080808080;
      int8x16_t v31 = (int8x16_t)vcgtq_u8((uint8x16_t)v21, v2);
      int8x16_t v32 = vandq_s8(vqsubq_s8(veorq_s8(v11, v30), veorq_s8(v14, v30)), v31);
      int16x8_t v21 = (int16x8_t)vbicq_s8(v27, v31);
      v33.i64[0] = 0x3000300030003;
      v33.i64[1] = 0x3000300030003;
      v34.i64[0] = 0x404040404040404;
      v34.i64[1] = 0x404040404040404;
      v35.i64[0] = 0x303030303030303;
      v35.i64[1] = 0x303030303030303;
      int8x16_t v36 = vqmovn_high_s16(vqmovn_s16(vaddw_s8(vmulq_s16((int16x8_t)vsubl_u8(*(uint8x8_t *)v13.i8, *(uint8x8_t *)v12.i8), v33), *(int8x8_t *)v32.i8)), vaddw_high_s8(vmulq_s16((int16x8_t)vsubl_high_u8((uint8x16_t)v13, (uint8x16_t)v12), v33), v32));
      int8x16_t v37 = vshrq_n_s8(vqaddq_s8(v34, v36), 3uLL);
      int8x16_t v38 = vnegq_s8(v37);
      int8x16_t v39 = vrshrq_n_s8(v37, 1uLL);
      int8x16_t v12 = vbslq_s8(v27, (int8x16_t)vsqaddq_u8((uint8x16_t)v12, vshrq_n_s8(vqaddq_s8(v35, v36), 3uLL)), v12);
      int8x16_t v13 = vbslq_s8(v27, (int8x16_t)vsqaddq_u8((uint8x16_t)v13, v38), v13);
      int8x16_t v11 = vbslq_s8((int8x16_t)v21, (int8x16_t)vsqaddq_u8((uint8x16_t)v11, v39), v11);
      int8x16_t v14 = vbslq_s8((int8x16_t)v21, (int8x16_t)vsqaddq_u8((uint8x16_t)v14, vnegq_s8(v39)), v14);
    }
    if (v29.i64[0] + v29.i64[1])
    {
      int16x8_t v21 = (int16x8_t)vaddl_u8(*(uint8x8_t *)v9.i8, *(uint8x8_t *)v10.i8);
      int16x8_t v40 = (int16x8_t)vaddl_high_u8(v9, (uint8x16_t)v10);
      int16x8_t v41 = (int16x8_t)vaddl_u8(*(uint8x8_t *)v9.i8, *(uint8x8_t *)v11.i8);
      int16x8_t v42 = (int16x8_t)vaddl_high_u8(v9, (uint8x16_t)v11);
      int16x8_t v43 = vaddq_s16((int16x8_t)vaddw_u8(vaddw_u8((uint16x8_t)vaddq_s16(v21, v21), *(uint8x8_t *)v12.i8), *(uint8x8_t *)v13.i8), v41);
      int16x8_t v44 = vaddq_s16((int16x8_t)vaddw_high_u8(vaddw_high_u8((uint16x8_t)vaddq_s16(v40, v40), (uint8x16_t)v12), (uint8x16_t)v13), v42);
      int8x16_t v45 = vrshrn_high_n_s16(vrshrn_n_s16(v43, 3uLL), v44, 3uLL);
      int16x8_t v46 = vaddq_s16(v43, vsubq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v11.i8, *(uint8x8_t *)v14.i8), v21));
      int16x8_t v47 = vaddq_s16(v44, vsubq_s16((int16x8_t)vaddl_high_u8((uint8x16_t)v11, (uint8x16_t)v14), v40));
      int8x16_t v48 = vrshrn_high_n_s16(vrshrn_n_s16(v46, 3uLL), v47, 3uLL);
      int16x8_t v49 = vaddq_s16(v46, vsubq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v12.i8, *(uint8x8_t *)v15.i8), v41));
      int16x8_t v50 = vaddq_s16(v47, vsubq_s16((int16x8_t)vaddl_high_u8((uint8x16_t)v12, v15), v42));
      int8x16_t v51 = vrshrn_high_n_s16(vrshrn_n_s16(v49, 3uLL), v50, 3uLL);
      int16x8_t v52 = vaddq_s16(v49, vsubq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v13.i8, *(uint8x8_t *)v16.i8), (int16x8_t)vaddl_u8(*(uint8x8_t *)v9.i8, *(uint8x8_t *)v12.i8)));
      int16x8_t v53 = vaddq_s16(v50, vsubq_s16((int16x8_t)vaddl_high_u8((uint8x16_t)v13, v16), (int16x8_t)vaddl_high_u8(v9, (uint8x16_t)v12)));
      v21.i64[0] = vrshrn_high_n_s16(vrshrn_n_s16(vaddq_s16(v52, vsubq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v14.i8, *(uint8x8_t *)v16.i8), (int16x8_t)vaddl_u8(*(uint8x8_t *)v10.i8, *(uint8x8_t *)v13.i8))), 3uLL), vaddq_s16(v53, vsubq_s16((int16x8_t)vaddl_high_u8((uint8x16_t)v14, v16), (int16x8_t)vaddl_high_u8((uint8x16_t)v10, (uint8x16_t)v13))), 3uLL).u64[0];
      int8x16_t v10 = vbslq_s8(v29, v45, v10);
      int8x16_t v11 = vbslq_s8(v29, v48, v11);
      int8x16_t v12 = vbslq_s8(v29, v51, v12);
      int8x16_t v13 = vbslq_s8(v29, vrshrn_high_n_s16(vrshrn_n_s16(v52, 3uLL), v53, 3uLL), v13);
    }
    if (v28.i64[0] + v28.i64[1]) {
      v21.i64[0] = vbslq_s8(v28, vrshrn_high_n_s16(vrshrn_n_s16(vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v6.i8, *(uint8x8_t *)v6.i8), (int16x8_t)vaddl_u8(*(uint8x8_t *)v6.i8, *(uint8x8_t *)v7.i8)), vaddq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v6.i8, *(uint8x8_t *)v8.i8), (int16x8_t)vaddl_u8(*(uint8x8_t *)v6.i8, *(uint8x8_t *)v9.i8))), vaddq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v6.i8, *(uint8x8_t *)v10.i8), (int16x8_t)vaddl_u8(*(uint8x8_t *)v6.i8, *(uint8x8_t *)v11.i8))), vaddq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v7.i8, *(uint8x8_t *)v12.i8), (int16x8_t)vaddl_u8(*(uint8x8_t *)v8.i8, *(uint8x8_t *)v13.i8))), 4uLL),
    }
                       vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vaddl_high_u8(v6, v6), (int16x8_t)vaddl_high_u8(v6, (uint8x16_t)v7)), vaddq_s16((int16x8_t)vaddl_high_u8(v6, v8), (int16x8_t)vaddl_high_u8(v6, v9))), vaddq_s16((int16x8_t)vaddl_high_u8(v6, (uint8x16_t)v10), (int16x8_t)vaddl_high_u8(v6, (uint8x16_t)v11))), vaddq_s16((int16x8_t)vaddl_high_u8((uint8x16_t)v7, (uint8x16_t)v12), (int16x8_t)vaddl_high_u8(v8, (uint8x16_t)v13))), 4uLL), v7).u64[0];
  }
  return *(double *)v21.i64;
}

double sub_224A84B64()
{
  uint8x16_t v13 = vabdq_u8((uint8x16_t)v8, (uint8x16_t)v9);
  int16x8_t v14 = (int16x8_t)vmaxq_u8(vabdq_u8((uint8x16_t)v7, (uint8x16_t)v8), vabdq_u8((uint8x16_t)v10, (uint8x16_t)v9));
  int8x16_t v15 = vandq_s8(vandq_s8((int8x16_t)vcgeq_u8(v1, vmaxq_u8((uint8x16_t)v14, (uint8x16_t)vandq_s8((int8x16_t)vmaxq_u8(vmaxq_u8(vabdq_u8(v6, (uint8x16_t)v7), vabdq_u8(v11, (uint8x16_t)v10)), vmaxq_u8(vabdq_u8(v5, v6), vabdq_u8(v12, v11))), v4))), (int8x16_t)vcgeq_u8(v0, vqaddq_u8(vqaddq_u8(v13, v13), vshrq_n_u8(vabdq_u8((uint8x16_t)v7, (uint8x16_t)v10), 1uLL)))), v3);
  int8x16_t v16 = vandq_s8(v4, v15);
  if (v15.i64[0] + v15.i64[1])
  {
    v17.i64[0] = 0x101010101010101;
    v17.i64[1] = 0x101010101010101;
    int8x16_t v18 = vandq_s8((int8x16_t)vcgeq_u8(v17, vmaxq_u8(vmaxq_u8(vmaxq_u8(vabdq_u8(v6, (uint8x16_t)v8), vabdq_u8((uint8x16_t)v7, (uint8x16_t)v8)), vmaxq_u8(vabdq_u8((uint8x16_t)v10, (uint8x16_t)v9), vabdq_u8(v11, (uint8x16_t)v9))), vmaxq_u8(vabdq_u8(v5, (uint8x16_t)v8), vabdq_u8(v12, (uint8x16_t)v9)))), v16);
    int8x16_t v19 = vbicq_s8(v15, v18);
    if (v19.i64[0] + v19.i64[1])
    {
      v20.i64[0] = 0x8080808080808080;
      v20.i64[1] = 0x8080808080808080;
      int8x16_t v21 = (int8x16_t)vcgtq_u8((uint8x16_t)v14, v2);
      int8x16_t v22 = vandq_s8(vqsubq_s8(veorq_s8(v7, v20), veorq_s8(v10, v20)), v21);
      int16x8_t v14 = (int16x8_t)vbicq_s8(v19, v21);
      v23.i64[0] = 0x3000300030003;
      v23.i64[1] = 0x3000300030003;
      v24.i64[0] = 0x404040404040404;
      v24.i64[1] = 0x404040404040404;
      v25.i64[0] = 0x303030303030303;
      v25.i64[1] = 0x303030303030303;
      int8x16_t v26 = vqmovn_high_s16(vqmovn_s16(vaddw_s8(vmulq_s16((int16x8_t)vsubl_u8(*(uint8x8_t *)v9.i8, *(uint8x8_t *)v8.i8), v23), *(int8x8_t *)v22.i8)), vaddw_high_s8(vmulq_s16((int16x8_t)vsubl_high_u8((uint8x16_t)v9, (uint8x16_t)v8), v23), v22));
      int8x16_t v27 = vshrq_n_s8(vqaddq_s8(v24, v26), 3uLL);
      int8x16_t v28 = vnegq_s8(v27);
      int8x16_t v29 = vrshrq_n_s8(v27, 1uLL);
      int8x16_t v8 = vbslq_s8(v19, (int8x16_t)vsqaddq_u8((uint8x16_t)v8, vshrq_n_s8(vqaddq_s8(v25, v26), 3uLL)), v8);
      int8x16_t v9 = vbslq_s8(v19, (int8x16_t)vsqaddq_u8((uint8x16_t)v9, v28), v9);
      int8x16_t v7 = vbslq_s8((int8x16_t)v14, (int8x16_t)vsqaddq_u8((uint8x16_t)v7, v29), v7);
      int8x16_t v10 = vbslq_s8((int8x16_t)v14, (int8x16_t)vsqaddq_u8((uint8x16_t)v10, vnegq_s8(v29)), v10);
    }
    if (v18.i64[0] + v18.i64[1])
    {
      int16x8_t v14 = (int16x8_t)vaddl_u8(*(uint8x8_t *)v5.i8, *(uint8x8_t *)v6.i8);
      int16x8_t v30 = (int16x8_t)vaddl_high_u8(v5, v6);
      int16x8_t v31 = (int16x8_t)vaddl_u8(*(uint8x8_t *)v5.i8, *(uint8x8_t *)v7.i8);
      int16x8_t v32 = (int16x8_t)vaddl_high_u8(v5, (uint8x16_t)v7);
      v14.i64[0] = vrshrn_high_n_s16(vrshrn_n_s16(vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vaddw_u8(vaddw_u8((uint16x8_t)vaddq_s16(v14, v14), *(uint8x8_t *)v8.i8), *(uint8x8_t *)v9.i8), v31), vsubq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v7.i8, *(uint8x8_t *)v10.i8), v14)), vsubq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v8.i8, *(uint8x8_t *)v11.i8), v31)), vsubq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v9.i8, *(uint8x8_t *)v12.i8), (int16x8_t)vaddl_u8(*(uint8x8_t *)v5.i8, *(uint8x8_t *)v8.i8))), vsubq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v10.i8, *(uint8x8_t *)v12.i8), (int16x8_t)vaddl_u8(*(uint8x8_t *)v6.i8, *(uint8x8_t *)v9.i8))), 3uLL),
                     vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16((int16x8_t)vaddw_high_u8(vaddw_high_u8((uint16x8_t)vaddq_s16(v30, v30), (uint8x16_t)v8), (uint8x16_t)v9), v32), vsubq_s16((int16x8_t)vaddl_high_u8((uint8x16_t)v7, (uint8x16_t)v10), v30)), vsubq_s16((int16x8_t)vaddl_high_u8((uint8x16_t)v8, v11), v32)), vsubq_s16((int16x8_t)vaddl_high_u8((uint8x16_t)v9, v12), (int16x8_t)vaddl_high_u8(v5, (uint8x16_t)v8))), vsubq_s16((int16x8_t)vaddl_high_u8((uint8x16_t)v10, v12), (int16x8_t)vaddl_high_u8(v6, (uint8x16_t)v9))), 3uLL).u64[0];
    }
  }
  return *(double *)v14.i64;
}

double sub_224A84DDC()
{
  uint8x16_t v11 = vabdq_u8((uint8x16_t)v7, (uint8x16_t)v8);
  int8x16_t v12 = (int8x16_t)vmaxq_u8(vabdq_u8((uint8x16_t)v6, (uint8x16_t)v7), vabdq_u8((uint8x16_t)v9, (uint8x16_t)v8));
  int8x16_t v13 = vandq_s8(vandq_s8((int8x16_t)vcgeq_u8(v1, vmaxq_u8((uint8x16_t)v12, (uint8x16_t)vandq_s8((int8x16_t)vmaxq_u8(vabdq_u8(v5, (uint8x16_t)v6), vabdq_u8(v10, (uint8x16_t)v9)), v4))), (int8x16_t)vcgeq_u8(v0, vqaddq_u8(vqaddq_u8(v11, v11), vshrq_n_u8(vabdq_u8((uint8x16_t)v6, (uint8x16_t)v9), 1uLL)))), v3);
  int8x16_t v14 = vandq_s8(v4, v13);
  if (v13.i64[0] + v13.i64[1])
  {
    v15.i64[0] = 0x101010101010101;
    v15.i64[1] = 0x101010101010101;
    int8x16_t v16 = vandq_s8((int8x16_t)vcgeq_u8(v15, vmaxq_u8(vmaxq_u8(vabdq_u8(v5, (uint8x16_t)v7), vabdq_u8((uint8x16_t)v6, (uint8x16_t)v7)), vmaxq_u8(vabdq_u8((uint8x16_t)v9, (uint8x16_t)v8), vabdq_u8(v10, (uint8x16_t)v8)))), v14);
    int8x16_t v17 = vbicq_s8(v13, v16);
    if (v17.i64[0] + v17.i64[1])
    {
      v18.i64[0] = 0x8080808080808080;
      v18.i64[1] = 0x8080808080808080;
      int8x16_t v19 = (int8x16_t)vcgtq_u8((uint8x16_t)v12, v2);
      int8x16_t v20 = vandq_s8(vqsubq_s8(veorq_s8(v6, v18), veorq_s8(v9, v18)), v19);
      int8x16_t v12 = vbicq_s8(v17, v19);
      v21.i64[0] = 0x3000300030003;
      v21.i64[1] = 0x3000300030003;
      v22.i64[0] = 0x404040404040404;
      v22.i64[1] = 0x404040404040404;
      v23.i64[0] = 0x303030303030303;
      v23.i64[1] = 0x303030303030303;
      int8x16_t v24 = vqmovn_high_s16(vqmovn_s16(vaddw_s8(vmulq_s16((int16x8_t)vsubl_u8(*(uint8x8_t *)v8.i8, *(uint8x8_t *)v7.i8), v21), *(int8x8_t *)v20.i8)), vaddw_high_s8(vmulq_s16((int16x8_t)vsubl_high_u8((uint8x16_t)v8, (uint8x16_t)v7), v21), v20));
      int8x16_t v25 = vshrq_n_s8(vqaddq_s8(v22, v24), 3uLL);
      int8x16_t v7 = vbslq_s8(v17, (int8x16_t)vsqaddq_u8((uint8x16_t)v7, vshrq_n_s8(vqaddq_s8(v23, v24), 3uLL)), v7);
      int8x16_t v8 = vbslq_s8(v17, (int8x16_t)vsqaddq_u8((uint8x16_t)v8, vnegq_s8(v25)), v8);
      int8x16_t v6 = vbslq_s8(v12, (int8x16_t)vsqaddq_u8((uint8x16_t)v6, vrshrq_n_s8(v25, 1uLL)), v6);
    }
    if (v16.i64[0] + v16.i64[1]) {
      v12.i64[0] = vrshrn_high_n_s16(vrshrn_n_s16(vaddq_s16(vaddq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v5.i8, *(uint8x8_t *)v5.i8), (int16x8_t)vaddl_u8(*(uint8x8_t *)v5.i8, *(uint8x8_t *)v6.i8)), vaddq_s16((int16x8_t)vaddl_u8(*(uint8x8_t *)v6.i8, *(uint8x8_t *)v7.i8), (int16x8_t)vaddl_u8(*(uint8x8_t *)v7.i8, *(uint8x8_t *)v8.i8))), 3uLL), vaddq_s16(vaddq_s16((int16x8_t)vaddl_high_u8(v5, v5), (int16x8_t)vaddl_high_u8(v5, (uint8x16_t)v6)), vaddq_s16((int16x8_t)vaddl_high_u8((uint8x16_t)v6, (uint8x16_t)v7), (int16x8_t)vaddl_high_u8((uint8x16_t)v7, (uint8x16_t)v8))), 3uLL).u64[0];
    }
  }
  return *(double *)v12.i64;
}

double sub_224A84FD4()
{
  uint8x16_t v8 = vabdq_u8(v5, v6);
  uint8x16_t v9 = vmaxq_u8(vabdq_u8(v4, v5), vabdq_u8(v7, v6));
  int8x16_t v10 = vandq_s8(vandq_s8((int8x16_t)vcgeq_u8(v1, v9), (int8x16_t)vcgeq_u8(v0, vqaddq_u8(vqaddq_u8(v8, v8), vshrq_n_u8(vabdq_u8(v4, v7), 1uLL)))), v3);
  if (v10.i64[0] + v10.i64[1]) {
    v9.i64[0] = vbicq_s8(v10, (int8x16_t)vcgtq_u8(v9, v2)).u64[0];
  }
  return *(double *)v9.i64;
}

void sub_224A850B8()
{
  sub_224A84FD4();
  if (!v6)
  {
    uint8x16_t v7 = (_OWORD *)((char *)v0 - 2 * v1);
    _OWORD *v7 = v2;
    *uint8x16_t v0 = v4;
    *(_OWORD *)((char *)v7 + v1) = v3;
    *(_OWORD *)((char *)v0 + v1) = v5;
  }
}

void sub_224A850FC()
{
  sub_224A84FD4();
  if (!v6)
  {
    uint8x16_t v7 = (_DWORD *)(v0 - 16 * v1 - 2);
    int16x8_t v8 = (int16x8_t)vtrn1q_s8(v2, v3);
    int16x8_t v9 = (int16x8_t)vtrn2q_s8(v2, v3);
    int16x8_t v10 = (int16x8_t)vtrn1q_s8(v4, v5);
    int16x8_t v11 = (int16x8_t)vtrn2q_s8(v4, v5);
    int16x8_t v12 = vtrn1q_s16(v8, v10);
    int16x8_t v13 = vtrn2q_s16(v8, v10);
    int16x8_t v14 = vtrn1q_s16(v9, v11);
    int16x8_t v15 = vtrn2q_s16(v9, v11);
    int8x16_t v16 = &v7[2 * v1];
    _DWORD *v7 = v12.i32[0];
    int8x16_t v17 = (_DWORD *)((char *)v7 + v1);
    _DWORD *v16 = v12.i32[2];
    int8x16_t v18 = (_DWORD *)((char *)v16 + v1);
    *int8x16_t v17 = v14.i32[0];
    int8x16_t v19 = (_DWORD *)((char *)v17 + v1);
    *int8x16_t v18 = v14.i32[2];
    int8x16_t v20 = (_DWORD *)((char *)v18 + v1);
    *int8x16_t v19 = v13.i32[0];
    int16x8_t v21 = (_DWORD *)((char *)v19 + v1);
    *int8x16_t v20 = v13.i32[2];
    int8x16_t v22 = (_DWORD *)((char *)v20 + v1);
    *int16x8_t v21 = v15.i32[0];
    int8x16_t v23 = (_DWORD *)((char *)v21 + v1);
    *int8x16_t v22 = v15.i32[2];
    int8x16_t v24 = (_DWORD *)((char *)v22 + v1);
    *int8x16_t v23 = v12.i32[1];
    int8x16_t v25 = (_DWORD *)((char *)v23 + v1);
    _DWORD *v24 = v12.i32[3];
    int8x16_t v26 = (_DWORD *)((char *)v24 + v1);
    *int8x16_t v25 = v14.i32[1];
    int8x16_t v27 = (_DWORD *)((char *)v25 + v1);
    *int8x16_t v26 = v14.i32[3];
    int8x16_t v28 = (_DWORD *)((char *)v26 + v1);
    *int8x16_t v27 = v13.i32[1];
    *int8x16_t v28 = v13.i32[3];
    *(_DWORD *)((char *)v27 + v1) = v15.i32[1];
    *(_DWORD *)((char *)v28 + v1) = v15.i32[3];
  }
}

void sub_224A851EC()
{
  sub_224A84DDC();
  if (!v6)
  {
    uint8x16_t v7 = (_OWORD *)((char *)v0 - 2 * v1);
    _OWORD *v7 = v2;
    *uint64_t v0 = v4;
    *(_OWORD *)((char *)v7 + v1) = v3;
    *(_OWORD *)((char *)v0 + v1) = v5;
  }
}

void sub_224A85240()
{
  sub_224A84DDC();
  if (!v6)
  {
    uint8x16_t v7 = (_DWORD *)(v0 - 16 * v1 - 2);
    int16x8_t v8 = (int16x8_t)vtrn1q_s8(v2, v3);
    int16x8_t v9 = (int16x8_t)vtrn2q_s8(v2, v3);
    int16x8_t v10 = (int16x8_t)vtrn1q_s8(v4, v5);
    int16x8_t v11 = (int16x8_t)vtrn2q_s8(v4, v5);
    int16x8_t v12 = vtrn1q_s16(v8, v10);
    int16x8_t v13 = vtrn2q_s16(v8, v10);
    int16x8_t v14 = vtrn1q_s16(v9, v11);
    int16x8_t v15 = vtrn2q_s16(v9, v11);
    int8x16_t v16 = &v7[2 * v1];
    _DWORD *v7 = v12.i32[0];
    int8x16_t v17 = (_DWORD *)((char *)v7 + v1);
    _DWORD *v16 = v12.i32[2];
    int8x16_t v18 = (_DWORD *)((char *)v16 + v1);
    *int8x16_t v17 = v14.i32[0];
    int8x16_t v19 = (_DWORD *)((char *)v17 + v1);
    *int8x16_t v18 = v14.i32[2];
    int8x16_t v20 = (_DWORD *)((char *)v18 + v1);
    *int8x16_t v19 = v13.i32[0];
    int16x8_t v21 = (_DWORD *)((char *)v19 + v1);
    *int8x16_t v20 = v13.i32[2];
    int8x16_t v22 = (_DWORD *)((char *)v20 + v1);
    *int16x8_t v21 = v15.i32[0];
    int8x16_t v23 = (_DWORD *)((char *)v21 + v1);
    *int8x16_t v22 = v15.i32[2];
    int8x16_t v24 = (_DWORD *)((char *)v22 + v1);
    *int8x16_t v23 = v12.i32[1];
    int8x16_t v25 = (_DWORD *)((char *)v23 + v1);
    _DWORD *v24 = v12.i32[3];
    int8x16_t v26 = (_DWORD *)((char *)v24 + v1);
    *int8x16_t v25 = v14.i32[1];
    int8x16_t v27 = (_DWORD *)((char *)v25 + v1);
    *int8x16_t v26 = v14.i32[3];
    int8x16_t v28 = (_DWORD *)((char *)v26 + v1);
    *int8x16_t v27 = v13.i32[1];
    *int8x16_t v28 = v13.i32[3];
    *(_DWORD *)((char *)v27 + v1) = v15.i32[1];
    *(_DWORD *)((char *)v28 + v1) = v15.i32[3];
  }
}

void sub_224A85370()
{
  sub_224A84B64();
  if (v2)
  {
    if ((v2 & 0x10) != 0)
    {
      int16x8_t v11 = (_OWORD *)((char *)v0 - 2 * v1);
      *int16x8_t v11 = v4;
      *uint64_t v0 = v6;
      *(_OWORD *)((char *)v11 + v1) = v5;
      *(_OWORD *)((char *)v0 + v1) = v7;
    }
  }
  else
  {
    *(_OWORD *)((char *)v0 - v1 + -2 * v1) = v3;
    int16x8_t v9 = (_OWORD *)((char *)v0 - 2 * v1);
    *uint64_t v0 = v6;
    int16x8_t v10 = (_OWORD *)((char *)v0 + v1);
    _OWORD *v9 = v4;
    _OWORD *v10 = v7;
    *(_OWORD *)((char *)v9 + v1) = v5;
    *(_OWORD *)((char *)v10 + v1) = v8;
  }
}

void sub_224A853F4()
{
  sub_224A84B64();
  if (v2)
  {
    if ((v2 & 0x10) != 0)
    {
      int16x8_t v49 = (_DWORD *)(v0 - 16 * v1 - 2);
      int16x8_t v50 = (int16x8_t)vtrn1q_s8(v5, v6);
      int16x8_t v51 = (int16x8_t)vtrn2q_s8(v5, v6);
      int16x8_t v52 = (int16x8_t)vtrn1q_s8(v7, v8);
      int16x8_t v53 = (int16x8_t)vtrn2q_s8(v7, v8);
      int16x8_t v54 = vtrn1q_s16(v50, v52);
      int16x8_t v55 = vtrn2q_s16(v50, v52);
      int16x8_t v56 = vtrn1q_s16(v51, v53);
      int16x8_t v57 = vtrn2q_s16(v51, v53);
      int16x8_t v58 = &v49[2 * v1];
      *int16x8_t v49 = v54.i32[0];
      signed int v59 = (_DWORD *)((char *)v49 + v1);
      _DWORD *v58 = v54.i32[2];
      int16x8_t v60 = (_DWORD *)((char *)v58 + v1);
      *signed int v59 = v56.i32[0];
      int64x2_t v61 = (_DWORD *)((char *)v59 + v1);
      _DWORD *v60 = v56.i32[2];
      int64x2_t v62 = (_DWORD *)((char *)v60 + v1);
      _DWORD *v61 = v55.i32[0];
      uint8x16_t v63 = (_DWORD *)((char *)v61 + v1);
      *int64x2_t v62 = v55.i32[2];
      uint8x16_t v64 = (_DWORD *)((char *)v62 + v1);
      *uint8x16_t v63 = v57.i32[0];
      int8x16_t v65 = (_DWORD *)((char *)v63 + v1);
      *uint8x16_t v64 = v57.i32[2];
      int64x2_t v66 = (_DWORD *)((char *)v64 + v1);
      *int8x16_t v65 = v54.i32[1];
      int8x16_t v67 = (_DWORD *)((char *)v65 + v1);
      *int64x2_t v66 = v54.i32[3];
      uint8x16_t v68 = (_DWORD *)((char *)v66 + v1);
      *int8x16_t v67 = v56.i32[1];
      uint8x16_t v69 = (_DWORD *)((char *)v67 + v1);
      *uint8x16_t v68 = v56.i32[3];
      uint8x16_t v70 = (_DWORD *)((char *)v68 + v1);
      *uint8x16_t v69 = v55.i32[1];
      _DWORD *v70 = v55.i32[3];
      *(_DWORD *)((char *)v69 + v1) = v57.i32[1];
      *(_DWORD *)((char *)v70 + v1) = v57.i32[3];
    }
  }
  else
  {
    int16x8_t v11 = (void *)(v0 - 16 * v1 - 4);
    int16x8_t v12 = (int16x8_t)vtrn1q_s8(v3, v4);
    int16x8_t v13 = (int16x8_t)vtrn2q_s8(v3, v4);
    int16x8_t v14 = (int16x8_t)vtrn1q_s8(v5, v6);
    int16x8_t v15 = (int16x8_t)vtrn2q_s8(v5, v6);
    int16x8_t v16 = (int16x8_t)vtrn1q_s8(v7, v8);
    int16x8_t v17 = (int16x8_t)vtrn2q_s8(v7, v8);
    int16x8_t v18 = (int16x8_t)vtrn1q_s8(v9, v10);
    int16x8_t v19 = (int16x8_t)vtrn2q_s8(v9, v10);
    int32x4_t v20 = (int32x4_t)vtrn1q_s16(v16, v18);
    int32x4_t v21 = (int32x4_t)vtrn2q_s16(v16, v18);
    int32x4_t v22 = (int32x4_t)vtrn1q_s16(v17, v19);
    int32x4_t v23 = (int32x4_t)vtrn2q_s16(v17, v19);
    int32x4_t v24 = (int32x4_t)vtrn1q_s16(v13, v15);
    int32x4_t v25 = (int32x4_t)vtrn2q_s16(v13, v15);
    int32x4_t v26 = (int32x4_t)vtrn1q_s16(v12, v14);
    int32x4_t v27 = (int32x4_t)vtrn2q_s16(v12, v14);
    int32x4_t v28 = vtrn1q_s32(v26, v20);
    int32x4_t v29 = vtrn2q_s32(v26, v20);
    int32x4_t v30 = vtrn1q_s32(v24, v22);
    int32x4_t v31 = vtrn2q_s32(v24, v22);
    int32x4_t v32 = vtrn2q_s32(v27, v21);
    int32x4_t v33 = vtrn1q_s32(v27, v21);
    int32x4_t v34 = vtrn1q_s32(v25, v23);
    int32x4_t v35 = vtrn2q_s32(v25, v23);
    int8x16_t v36 = &v11[v1];
    *int16x8_t v11 = v28.i64[0];
    int8x16_t v37 = (void *)((char *)v11 + v1);
    void *v36 = v28.i64[1];
    int8x16_t v38 = (void *)((char *)v36 + v1);
    *int8x16_t v37 = v30.i64[0];
    int8x16_t v39 = (void *)((char *)v37 + v1);
    *int8x16_t v38 = v30.i64[1];
    int16x8_t v40 = (void *)((char *)v38 + v1);
    *int8x16_t v39 = v33.i64[0];
    int16x8_t v41 = (void *)((char *)v39 + v1);
    *int16x8_t v40 = v33.i64[1];
    int16x8_t v42 = (void *)((char *)v40 + v1);
    *int16x8_t v41 = v34.i64[0];
    int16x8_t v43 = (void *)((char *)v41 + v1);
    *int16x8_t v42 = v34.i64[1];
    int16x8_t v44 = (void *)((char *)v42 + v1);
    *int16x8_t v43 = v29.i64[0];
    int8x16_t v45 = (void *)((char *)v43 + v1);
    *int16x8_t v44 = v29.i64[1];
    int16x8_t v46 = (void *)((char *)v44 + v1);
    *int8x16_t v45 = v31.i64[0];
    int16x8_t v47 = (void *)((char *)v45 + v1);
    void *v46 = v31.i64[1];
    int8x16_t v48 = (void *)((char *)v46 + v1);
    *int16x8_t v47 = v32.i64[0];
    void *v48 = v32.i64[1];
    *(void *)((char *)v47 + v1) = v35.i64[0];
    *(void *)((char *)v48 + v1) = v35.i64[1];
  }
}

void sub_224A855DC()
{
  *(double *)&long long v7 = sub_224A84628();
  if (v6)
  {
    if ((v6 & 0x40) != 0)
    {
      *(_OWORD *)((char *)v4 - v5 + -2 * v5) = v15;
      int32x4_t v30 = (_OWORD *)((char *)v4 - 2 * v5);
      _OWORD *v4 = v18;
      int32x4_t v31 = (_OWORD *)((char *)v4 + v5);
      _OWORD *v30 = v16;
      *int32x4_t v31 = v19;
      *(_OWORD *)((char *)v30 + v5) = v17;
      *(_OWORD *)((char *)v31 + v5) = v20;
    }
    else if ((v6 & 0x10) != 0)
    {
      int32x4_t v32 = (_OWORD *)((char *)v4 - 2 * v5);
      *int32x4_t v32 = v16;
      _OWORD *v4 = v18;
      *(_OWORD *)((char *)v32 + v5) = v17;
      *(_OWORD *)((char *)v4 + v5) = v19;
    }
  }
  else
  {
    int32x4_t v21 = (_OWORD *)((char *)v4 - 2 * v5 + -4 * v5);
    *int32x4_t v21 = v7;
    int32x4_t v22 = (_OWORD *)((char *)v21 + v5);
    _OWORD *v4 = v13;
    int32x4_t v23 = (_OWORD *)((char *)v4 + v5);
    *int32x4_t v22 = v8;
    int32x4_t v24 = (_OWORD *)((char *)v22 + v5);
    *int32x4_t v23 = v14;
    int32x4_t v25 = (_OWORD *)((char *)v23 + v5);
    _OWORD *v24 = v9;
    int32x4_t v26 = (_OWORD *)((char *)v24 + v5);
    *int32x4_t v25 = v0;
    int32x4_t v27 = (_OWORD *)((char *)v25 + v5);
    *int32x4_t v26 = v10;
    int32x4_t v28 = (_OWORD *)((char *)v26 + v5);
    *int32x4_t v27 = v1;
    int32x4_t v29 = (_OWORD *)((char *)v27 + v5);
    *int32x4_t v28 = v11;
    *int32x4_t v29 = v2;
    *(_OWORD *)((char *)v28 + v5) = v12;
    *(_OWORD *)((char *)v29 + v5) = v3;
  }
}

void sub_224A856C8()
{
  *(double *)v7.i64 = sub_224A84628();
  if (v6)
  {
    if ((v6 & 0x40) != 0)
    {
      uint64_t v104 = (void *)(v4 - 16 * v5 - 4);
      int16x8_t v105 = (int16x8_t)vtrn1q_s8(v17, v18);
      int16x8_t v106 = (int16x8_t)vtrn2q_s8(v17, v18);
      int16x8_t v107 = (int16x8_t)vtrn1q_s8(v19, v20);
      int16x8_t v108 = (int16x8_t)vtrn2q_s8(v19, v20);
      int16x8_t v109 = (int16x8_t)vtrn1q_s8(v21, v22);
      int16x8_t v110 = (int16x8_t)vtrn2q_s8(v21, v22);
      int16x8_t v111 = (int16x8_t)vtrn1q_s8(v23, v24);
      int16x8_t v112 = (int16x8_t)vtrn2q_s8(v23, v24);
      int32x4_t v113 = (int32x4_t)vtrn1q_s16(v109, v111);
      int32x4_t v114 = (int32x4_t)vtrn2q_s16(v109, v111);
      int32x4_t v115 = (int32x4_t)vtrn1q_s16(v110, v112);
      int32x4_t v116 = (int32x4_t)vtrn2q_s16(v110, v112);
      int32x4_t v117 = (int32x4_t)vtrn1q_s16(v106, v108);
      int32x4_t v118 = (int32x4_t)vtrn2q_s16(v106, v108);
      int32x4_t v119 = (int32x4_t)vtrn1q_s16(v105, v107);
      int32x4_t v120 = (int32x4_t)vtrn2q_s16(v105, v107);
      int32x4_t v121 = vtrn1q_s32(v119, v113);
      int32x4_t v122 = vtrn2q_s32(v119, v113);
      int32x4_t v123 = vtrn1q_s32(v117, v115);
      int32x4_t v124 = vtrn2q_s32(v117, v115);
      int32x4_t v125 = vtrn2q_s32(v120, v114);
      int32x4_t v126 = vtrn1q_s32(v120, v114);
      int32x4_t v127 = vtrn1q_s32(v118, v116);
      int32x4_t v128 = vtrn2q_s32(v118, v116);
      uint8x8_t v129 = &v104[v5];
      *uint64_t v104 = v121.i64[0];
      int16x8_t v130 = (void *)((char *)v104 + v5);
      *uint8x8_t v129 = v121.i64[1];
      int16x8_t v131 = (void *)((char *)v129 + v5);
      *int16x8_t v130 = v123.i64[0];
      int32x4_t v132 = (void *)((char *)v130 + v5);
      *int16x8_t v131 = v123.i64[1];
      int32x4_t v133 = (void *)((char *)v131 + v5);
      *int32x4_t v132 = v126.i64[0];
      int16x8_t v134 = (void *)((char *)v132 + v5);
      *int32x4_t v133 = v126.i64[1];
      int16x8_t v135 = (void *)((char *)v133 + v5);
      *int16x8_t v134 = v127.i64[0];
      uint8x8_t v136 = (void *)((char *)v134 + v5);
      *int16x8_t v135 = v127.i64[1];
      int32x4_t v137 = (void *)((char *)v135 + v5);
      *uint8x8_t v136 = v122.i64[0];
      int16x8_t v138 = (void *)((char *)v136 + v5);
      *int32x4_t v137 = v122.i64[1];
      int64x2_t v139 = (void *)((char *)v137 + v5);
      *int16x8_t v138 = v124.i64[0];
      uint8x8_t v140 = (void *)((char *)v138 + v5);
      *int64x2_t v139 = v124.i64[1];
      int64x2_t v141 = (void *)((char *)v139 + v5);
      *uint8x8_t v140 = v125.i64[0];
      *int64x2_t v141 = v125.i64[1];
      *(void *)((char *)v140 + v5) = v128.i64[0];
      *(void *)((char *)v141 + v5) = v128.i64[1];
    }
    else if ((v6 & 0x10) != 0)
    {
      int16x8_t v142 = (_DWORD *)(v4 - 16 * v5 - 2);
      int16x8_t v143 = (int16x8_t)vtrn1q_s8(v19, v20);
      int16x8_t v144 = (int16x8_t)vtrn2q_s8(v19, v20);
      int16x8_t v145 = (int16x8_t)vtrn1q_s8(v21, v22);
      int16x8_t v146 = (int16x8_t)vtrn2q_s8(v21, v22);
      int16x8_t v147 = vtrn1q_s16(v143, v145);
      int16x8_t v148 = vtrn2q_s16(v143, v145);
      int16x8_t v149 = vtrn1q_s16(v144, v146);
      int16x8_t v150 = vtrn2q_s16(v144, v146);
      int16x8_t v151 = &v142[2 * v5];
      *int16x8_t v142 = v147.i32[0];
      int16x8_t v152 = (_DWORD *)((char *)v142 + v5);
      *int16x8_t v151 = v147.i32[2];
      int16x8_t v153 = (_DWORD *)((char *)v151 + v5);
      *int16x8_t v152 = v149.i32[0];
      v154 = (_DWORD *)((char *)v152 + v5);
      *int16x8_t v153 = v149.i32[2];
      int16x8_t v155 = (_DWORD *)((char *)v153 + v5);
      _DWORD *v154 = v148.i32[0];
      int8x16_t v156 = (_DWORD *)((char *)v154 + v5);
      *int16x8_t v155 = v148.i32[2];
      uint8x8_t v157 = (_DWORD *)((char *)v155 + v5);
      *int8x16_t v156 = v150.i32[0];
      int16x8_t v158 = (_DWORD *)((char *)v156 + v5);
      *uint8x8_t v157 = v150.i32[2];
      int16x8_t v159 = (_DWORD *)((char *)v157 + v5);
      *int16x8_t v158 = v147.i32[1];
      int8x16_t v160 = (_DWORD *)((char *)v158 + v5);
      *int16x8_t v159 = v147.i32[3];
      uint8x8_t v161 = (_DWORD *)((char *)v159 + v5);
      *int8x16_t v160 = v149.i32[1];
      int8x16_t v162 = (_DWORD *)((char *)v160 + v5);
      *uint8x8_t v161 = v149.i32[3];
      int16x8_t v163 = (_DWORD *)((char *)v161 + v5);
      *int8x16_t v162 = v148.i32[1];
      *int16x8_t v163 = v148.i32[3];
      *(_DWORD *)((char *)v162 + v5) = v150.i32[1];
      *(_DWORD *)((char *)v163 + v5) = v150.i32[3];
    }
  }
  else
  {
    int32x4_t v27 = (void *)(v4 - 16 * v5);
    int16x8_t v28 = (int16x8_t)vtrn1q_s8(v15, v16);
    int16x8_t v29 = (int16x8_t)vtrn2q_s8(v15, v16);
    int16x8_t v30 = (int16x8_t)vtrn1q_s8(v7, v8);
    int16x8_t v31 = (int16x8_t)vtrn2q_s8(v7, v8);
    int16x8_t v32 = (int16x8_t)vtrn1q_s8(v9, v10);
    int16x8_t v33 = (int16x8_t)vtrn2q_s8(v9, v10);
    int16x8_t v34 = (int16x8_t)vtrn1q_s8(v11, v12);
    int16x8_t v35 = (int16x8_t)vtrn2q_s8(v11, v12);
    int32x4_t v36 = (int32x4_t)vtrn1q_s16(v32, v34);
    int32x4_t v37 = (int32x4_t)vtrn2q_s16(v32, v34);
    int32x4_t v38 = (int32x4_t)vtrn1q_s16(v33, v35);
    int32x4_t v39 = (int32x4_t)vtrn2q_s16(v33, v35);
    int32x4_t v40 = (int32x4_t)vtrn1q_s16(v29, v31);
    int32x4_t v41 = (int32x4_t)vtrn2q_s16(v29, v31);
    int32x4_t v42 = (int32x4_t)vtrn1q_s16(v28, v30);
    int32x4_t v43 = (int32x4_t)vtrn2q_s16(v28, v30);
    int32x4_t v44 = vtrn1q_s32(v42, v36);
    int32x4_t v45 = vtrn2q_s32(v42, v36);
    int32x4_t v46 = vtrn1q_s32(v40, v38);
    int32x4_t v47 = vtrn2q_s32(v40, v38);
    int32x4_t v48 = vtrn2q_s32(v43, v37);
    int32x4_t v49 = vtrn1q_s32(v43, v37);
    int32x4_t v50 = vtrn1q_s32(v41, v39);
    int32x4_t v51 = vtrn2q_s32(v41, v39);
    int16x8_t v52 = (int16x8_t)vtrn1q_s8(v13, v14);
    int16x8_t v53 = (int16x8_t)vtrn2q_s8(v13, v14);
    int16x8_t v54 = (int16x8_t)vtrn1q_s8(v0, v1);
    int16x8_t v55 = (int16x8_t)vtrn2q_s8(v0, v1);
    int16x8_t v56 = (int16x8_t)vtrn1q_s8(v2, v3);
    int16x8_t v57 = (int16x8_t)vtrn2q_s8(v2, v3);
    int16x8_t v58 = (int16x8_t)vtrn1q_s8(v25, v26);
    int16x8_t v59 = (int16x8_t)vtrn2q_s8(v25, v26);
    int32x4_t v60 = (int32x4_t)vtrn1q_s16(v56, v58);
    int32x4_t v61 = (int32x4_t)vtrn2q_s16(v56, v58);
    int32x4_t v62 = (int32x4_t)vtrn1q_s16(v57, v59);
    int32x4_t v63 = (int32x4_t)vtrn2q_s16(v57, v59);
    int32x4_t v64 = (int32x4_t)vtrn1q_s16(v53, v55);
    int32x4_t v65 = (int32x4_t)vtrn2q_s16(v53, v55);
    int32x4_t v66 = (int32x4_t)vtrn1q_s16(v52, v54);
    int32x4_t v67 = (int32x4_t)vtrn2q_s16(v52, v54);
    int32x4_t v68 = vtrn1q_s32(v66, v60);
    int32x4_t v69 = vtrn2q_s32(v66, v60);
    int32x4_t v70 = vtrn1q_s32(v64, v62);
    int32x4_t v71 = vtrn2q_s32(v64, v62);
    int32x4_t v72 = vtrn2q_s32(v67, v61);
    int32x4_t v73 = vtrn1q_s32(v67, v61);
    int32x4_t v74 = vtrn1q_s32(v65, v63);
    int32x4_t v75 = vtrn2q_s32(v65, v63);
    *(v27 - 1) = v44.i64[0];
    int8x16_t v76 = (void *)((char *)v27 + v5 - 8);
    *int32x4_t v27 = v68.i64[0];
    int8x16_t v77 = (void *)((char *)v27 + v5);
    *int8x16_t v76 = v46.i64[0];
    int8x16_t v78 = (void *)((char *)v76 + v5);
    *int8x16_t v77 = v70.i64[0];
    uint8x16_t v79 = (void *)((char *)v77 + v5);
    *int8x16_t v78 = v49.i64[0];
    int8x16_t v80 = (void *)((char *)v78 + v5);
    *uint8x16_t v79 = v73.i64[0];
    uint8x16_t v81 = (void *)((char *)v79 + v5);
    *int8x16_t v80 = v50.i64[0];
    uint8x16_t v82 = (void *)((char *)v80 + v5);
    *uint8x16_t v81 = v74.i64[0];
    int8x16_t v83 = (void *)((char *)v81 + v5);
    *uint8x16_t v82 = v45.i64[0];
    uint8x16_t v84 = (void *)((char *)v82 + v5);
    *int8x16_t v83 = v69.i64[0];
    unint64_t v85 = (void *)((char *)v83 + v5);
    *uint8x16_t v84 = v47.i64[0];
    uint64_t v86 = (void *)((char *)v84 + v5);
    *unint64_t v85 = v71.i64[0];
    uint64_t v87 = (void *)((char *)v85 + v5);
    *uint64_t v86 = v48.i64[0];
    uint64_t v88 = (void *)((char *)v86 + v5);
    *uint64_t v87 = v72.i64[0];
    uint64_t v89 = (void *)((char *)v87 + v5);
    *uint64_t v88 = v51.i64[0];
    uint64_t v90 = (void *)((char *)v88 + v5);
    *uint64_t v89 = v75.i64[0];
    uint64_t v91 = (void *)((char *)v89 + v5);
    *uint64_t v90 = v44.i64[1];
    uint64_t v92 = (void *)((char *)v90 + v5);
    *uint64_t v91 = v68.i64[1];
    uint64_t v93 = (void *)((char *)v91 + v5);
    *uint64_t v92 = v46.i64[1];
    uint64_t v94 = (void *)((char *)v92 + v5);
    *uint64_t v93 = v70.i64[1];
    uint64_t v95 = (void *)((char *)v93 + v5);
    *uint64_t v94 = v49.i64[1];
    uint64_t v96 = (void *)((char *)v94 + v5);
    *uint64_t v95 = v73.i64[1];
    uint64_t v97 = (void *)((char *)v95 + v5);
    *uint64_t v96 = v50.i64[1];
    uint64_t v98 = (void *)((char *)v96 + v5);
    *uint64_t v97 = v74.i64[1];
    uint64_t v99 = (void *)((char *)v97 + v5);
    *uint64_t v98 = v45.i64[1];
    uint64_t v100 = (void *)((char *)v98 + v5);
    *uint64_t v99 = v69.i64[1];
    uint64_t v101 = (void *)((char *)v99 + v5);
    *uint64_t v100 = v47.i64[1];
    uint64_t v102 = (void *)((char *)v100 + v5);
    *uint64_t v101 = v71.i64[1];
    uint64_t v103 = (void *)((char *)v101 + v5);
    *uint64_t v102 = v48.i64[1];
    *uint64_t v103 = v72.i64[1];
    *(void *)((char *)v102 + v5) = v51.i64[1];
    *(void *)((char *)v103 + v5) = v75.i64[1];
  }
}

uint64_t sub_224A85A98(uint64_t result, uint64_t a2, int *a3, int8x16_t *a4, uint64_t a5, uint64_t a6)
{
  int v6 = *a3;
  int v7 = a3[1];
  unsigned int v8 = a3[2];
  int8x16_t v9 = (const char *)(a6 + 128);
  unsigned int v10 = v7 | v8;
  int8x16_t v11 = (int8x16_t *)((char *)a4 - 4 * a5);
  unsigned int v12 = v6 | v10;
  do
  {
    int8x16_t v13 = *v11++;
    int8x16_t v14 = *a4++;
    if ((v12 & 0xF) != 0)
    {
      vld1q_dup_s8(v9);
      int8x16_t v15 = v9 + 8;
      v16.i64[0] = 0xFF000000FFLL;
      v16.i64[1] = 0xFF000000FFLL;
      int8x16_t v17 = vandq_s8(v14, v16);
      vld1q_dup_s8(v15);
      int8x16_t v9 = v15 - 8;
      int32x4_t v18 = vtstq_s32((int32x4_t)vbslq_s8(vtstq_s8(v17, v16), v17, vandq_s8(v13, v16)), (int32x4_t)v16);
      if (v18.i64[0] + v18.i64[1])
      {
        if ((v8 & 0xF) != 0)
        {
          sub_224A855DC();
        }
        else if ((v10 & 0xF) != 0)
        {
          sub_224A85370();
        }
        else
        {
          sub_224A850B8();
        }
      }
    }
    v12 >>= 4;
    v10 >>= 4;
    v8 >>= 4;
    result += 16;
  }
  while (v12);
  return result;
}

void sub_224A85BAC(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6 = *a3;
  int v7 = a3[1];
  unsigned int v8 = a3[2];
  int8x16_t v9 = (const char *)(a6 + 128);
  unsigned int v10 = v7 | v8;
  int8x16_t v11 = (__int32 *)(a4 - 4);
  uint64_t v12 = a5;
  unsigned int v13 = v6 | v10;
  do
  {
    v17.i32[0] = *v11;
    v18.i32[0] = v11[1];
    int8x16_t v14 = &v11[v12];
    v17.i32[1] = *v14;
    v18.i32[1] = v14[1];
    int8x16_t v15 = &v14[v12];
    v17.i32[2] = *v15;
    v18.i32[2] = v15[1];
    int8x16_t v16 = &v15[v12];
    v17.i32[3] = *v16;
    v18.i32[3] = v16[1];
    int8x16_t v11 = &v16[v12];
    if ((v13 & 0xF) == 0) {
      goto LABEL_9;
    }
    vld1q_dup_s8(v9);
    int8x16_t v19 = v9 + 8;
    v20.i64[0] = 0xFF000000FFLL;
    v20.i64[1] = 0xFF000000FFLL;
    int8x16_t v21 = vandq_s8(v18, v20);
    vld1q_dup_s8(v19);
    int8x16_t v9 = v19 - 8;
    int32x4_t v22 = vtstq_s32((int32x4_t)vbslq_s8(vtstq_s8(v21, v20), v21, vandq_s8(v17, v20)), (int32x4_t)v20);
    if (v22.i64[0] + v22.i64[1])
    {
      if ((v8 & 0xF) != 0)
      {
        sub_224A856C8();
      }
      else if ((v10 & 0xF) != 0)
      {
        sub_224A853F4();
      }
      else
      {
        sub_224A850FC();
      }
    }
    else
    {
LABEL_9:
      a1 += 16 * a2;
    }
    v13 >>= 4;
    v10 >>= 4;
    v8 >>= 4;
  }
  while (v13);
}

uint64_t sub_224A85CD0(uint64_t result, uint64_t a2, _DWORD *a3, int8x16_t *a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6 = a3[1];
  int v7 = (const char *)(a6 + 128);
  unsigned int v8 = (int8x16_t *)((char *)a4 - 4 * a5);
  unsigned int v9 = *a3 | v6;
  do
  {
    int8x16_t v10 = *v8++;
    int8x16_t v11 = *a4++;
    if ((v9 & 0xF) != 0)
    {
      vld1q_dup_s8(v7);
      uint64_t v12 = v7 + 8;
      v13.i64[0] = 0xFF000000FFLL;
      v13.i64[1] = 0xFF000000FFLL;
      int8x16_t v14 = vandq_s8(v11, v13);
      vld1q_dup_s8(v12);
      int v7 = v12 - 8;
      int32x4_t v15 = vtstq_s32((int32x4_t)vbslq_s8(vtstq_s8(v14, v13), v14, vandq_s8(v10, v13)), (int32x4_t)v13);
      if (v15.i64[0] + v15.i64[1])
      {
        if ((v6 & 0xF) != 0) {
          sub_224A851EC();
        }
        else {
          sub_224A850B8();
        }
      }
    }
    v9 >>= 4;
    v6 >>= 4;
    result += 16;
  }
  while (v9);
  return result;
}

void sub_224A85DC0(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6 = a3[1];
  int v7 = (const char *)(a6 + 128);
  unsigned int v8 = (__int32 *)(a4 - 4);
  uint64_t v9 = a5;
  unsigned int v10 = *a3 | v6;
  do
  {
    v14.i32[0] = *v8;
    v15.i32[0] = v8[1];
    int8x16_t v11 = &v8[v9];
    v14.i32[1] = *v11;
    v15.i32[1] = v11[1];
    uint64_t v12 = &v11[v9];
    v14.i32[2] = *v12;
    v15.i32[2] = v12[1];
    int8x16_t v13 = &v12[v9];
    v14.i32[3] = *v13;
    v15.i32[3] = v13[1];
    unsigned int v8 = &v13[v9];
    if ((v10 & 0xF) == 0) {
      goto LABEL_7;
    }
    vld1q_dup_s8(v7);
    int8x16_t v16 = v7 + 8;
    v17.i64[0] = 0xFF000000FFLL;
    v17.i64[1] = 0xFF000000FFLL;
    int8x16_t v18 = vandq_s8(v15, v17);
    vld1q_dup_s8(v16);
    int v7 = v16 - 8;
    int32x4_t v19 = vtstq_s32((int32x4_t)vbslq_s8(vtstq_s8(v18, v17), v18, vandq_s8(v14, v17)), (int32x4_t)v17);
    if (v19.i64[0] + v19.i64[1])
    {
      if ((v6 & 0xF) != 0) {
        sub_224A85240();
      }
      else {
        sub_224A850FC();
      }
    }
    else
    {
LABEL_7:
      a1 += 16 * a2;
    }
    v10 >>= 4;
    v6 >>= 4;
  }
  while (v10);
}

uint64_t *sub_224A85EC0(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v6.i64[0] = 0xFC00FC00FC00FC00;
  v6.i64[1] = 0xFC00FC00FC00FC00;
  do
  {
    v8.i64[0] = *result;
    int v7 = (uint64_t *)((char *)result + a2);
    v8.i64[1] = *v7;
    uint64_t v9 = (uint64_t *)((char *)v7 + a2);
    v11.i64[0] = *v9;
    unsigned int v10 = (uint64_t *)((char *)v9 + a2);
    BOOL v12 = __OFSUB__(a5, 4);
    a5 -= 4;
    v11.i64[1] = *v10;
    int8x16_t v13 = (uint64_t *)((char *)v10 + a2 + -4 * a2);
    int16x8_t v14 = vminq_s16((int16x8_t)vsqaddq_u16(v8, v5), v6);
    *int8x16_t v13 = v14.i64[0];
    int8x16_t v15 = (void *)((char *)v13 + a2);
    int16x8_t v16 = vminq_s16((int16x8_t)vsqaddq_u16(v11, v5), v6);
    *int8x16_t v15 = v14.i64[1];
    int8x16_t v17 = (void *)((char *)v15 + a2);
    *int8x16_t v17 = v16.i64[0];
    int8x16_t v18 = (void *)((char *)v17 + a2);
    *int8x16_t v18 = v16.i64[1];
    int16x8_t result = (void *)((char *)v18 + a2);
  }
  while (!((a5 < 0) ^ v12 | (a5 == 0)));
  return result;
}

uint16x8_t *sub_224A85F04(uint16x8_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v6.i64[0] = 0xFC00FC00FC00FC00;
  v6.i64[1] = 0xFC00FC00FC00FC00;
  do
  {
    uint16x8_t v8 = *result;
    int v7 = (uint16x8_t *)((char *)result + a2);
    BOOL v9 = __OFSUB__(a5, 4);
    a5 -= 4;
    uint16x8_t v11 = *v7;
    unsigned int v10 = (uint16x8_t *)((char *)v7 + a2);
    uint16x8_t v13 = *v10;
    BOOL v12 = (uint16x8_t *)((char *)v10 + a2);
    int16x8_t v14 = (int16x8_t)vsqaddq_u16(*v12, v5);
    int8x16_t v15 = (int16x8_t *)&v12->i8[a2 + -4 * a2];
    *int8x16_t v15 = vminq_s16((int16x8_t)vsqaddq_u16(v8, v5), v6);
    int16x8_t v16 = (int16x8_t *)((char *)v15 + a2);
    int16x8_t *v16 = vminq_s16((int16x8_t)vsqaddq_u16(v11, v5), v6);
    int8x16_t v17 = (int16x8_t *)((char *)v16 + a2);
    *int8x16_t v17 = vminq_s16((int16x8_t)vsqaddq_u16(v13, v5), v6);
    int8x16_t v18 = (int16x8_t *)((char *)v17 + a2);
    *int8x16_t v18 = vminq_s16(v14, v6);
    int16x8_t result = (uint16x8_t *)&v18->i8[a2];
  }
  while (!((a5 < 0) ^ v9 | (a5 == 0)));
  return result;
}

uint16x8_t *sub_224A85F58(uint16x8_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v6.i64[0] = 0xFC00FC00FC00FC00;
  v6.i64[1] = 0xFC00FC00FC00FC00;
  do
  {
    uint16x8_t v8 = *result;
    uint16x8_t v9 = result[1];
    int v7 = (uint16x8_t *)((char *)result + a2);
    BOOL v10 = __OFSUB__(a5, 2);
    a5 -= 2;
    uint16x8_t v11 = *v7;
    uint16x8_t v12 = v7[1];
    uint16x8_t v13 = (int16x8_t *)&v7->i8[a2 + -2 * a2];
    *uint16x8_t v13 = vminq_s16((int16x8_t)vsqaddq_u16(v8, v5), v6);
    v13[1] = vminq_s16((int16x8_t)vsqaddq_u16(v9, v5), v6);
    int16x8_t v14 = (int16x8_t *)((char *)v13 + a2);
    *int16x8_t v14 = vminq_s16((int16x8_t)vsqaddq_u16(v11, v5), v6);
    v14[1] = vminq_s16((int16x8_t)vsqaddq_u16(v12, v5), v6);
    int16x8_t result = (uint16x8_t *)&v14->i8[a2];
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

uint16x8_t *sub_224A85F9C(uint16x8_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v6.i64[0] = 0xFC00FC00FC00FC00;
  v6.i64[1] = 0xFC00FC00FC00FC00;
  do
  {
    BOOL v7 = __OFSUB__(a5--, 1);
    int16x8_t v8 = vminq_s16((int16x8_t)vsqaddq_u16(result[1], v5), v6);
    int16x8_t v9 = vminq_s16((int16x8_t)vsqaddq_u16(result[2], v5), v6);
    int16x8_t v10 = vminq_s16((int16x8_t)vsqaddq_u16(result[3], v5), v6);
    *(int16x8_t *)int16x8_t result = vminq_s16((int16x8_t)vsqaddq_u16(*result, v5), v6);
    result[1] = (uint16x8_t)v8;
    result[2] = (uint16x8_t)v9;
    result[3] = (uint16x8_t)v10;
    int16x8_t result = (uint16x8_t *)((char *)result + a2);
  }
  while (!((a5 < 0) ^ v7 | (a5 == 0)));
  return result;
}

uint16x8_t *sub_224A85FD4(uint16x8_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v6.i64[0] = 0xFC00FC00FC00FC00;
  v6.i64[1] = 0xFC00FC00FC00FC00;
  uint64_t v7 = a2 - 64;
  do
  {
    uint16x8_t v9 = *result;
    uint16x8_t v10 = result[1];
    uint16x8_t v11 = result[2];
    uint16x8_t v12 = result[3];
    int16x8_t v8 = result + 4;
    BOOL v13 = __OFSUB__(a5--, 1);
    uint16x8_t v14 = *v8;
    uint16x8_t v15 = v8[1];
    uint16x8_t v16 = v8[2];
    uint16x8_t v17 = v8[3];
    v8 -= 4;
    *(int16x8_t *)int16x8_t v8 = vminq_s16((int16x8_t)vsqaddq_u16(v9, v5), v6);
    v8[1] = (uint16x8_t)vminq_s16((int16x8_t)vsqaddq_u16(v10, v5), v6);
    v8[2] = (uint16x8_t)vminq_s16((int16x8_t)vsqaddq_u16(v11, v5), v6);
    v8[3] = (uint16x8_t)vminq_s16((int16x8_t)vsqaddq_u16(v12, v5), v6);
    v8 += 4;
    *(int16x8_t *)int16x8_t v8 = vminq_s16((int16x8_t)vsqaddq_u16(v14, v5), v6);
    v8[1] = (uint16x8_t)vminq_s16((int16x8_t)vsqaddq_u16(v15, v5), v6);
    v8[2] = (uint16x8_t)vminq_s16((int16x8_t)vsqaddq_u16(v16, v5), v6);
    v8[3] = (uint16x8_t)vminq_s16((int16x8_t)vsqaddq_u16(v17, v5), v6);
    int16x8_t result = (uint16x8_t *)((char *)v8 + v7);
  }
  while (!((a5 < 0) ^ v13 | (a5 == 0)));
  return result;
}

double sub_224A8603C()
{
  return 8.66459279e127;
}

double sub_224A8608C()
{
  *(void *)&double result = 0xEDB00000529;
  return result;
}

double sub_224A860E4()
{
  *(void *)&double result = 0xEDB00000529;
  return result;
}

int32x2_t sub_224A8613C()
{
  return vdup_n_s32(0x35080000u);
}

void sub_224A86168(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  *a3 = 0u;
  a3[1] = 0u;
  int8x16_t v3 = a3 + 2;
  _OWORD *v3 = 0u;
  v3[1] = 0u;
  JUMPOUT(0x224A86280);
}

char *sub_224A86214(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, _OWORD *))
{
  *a3 = 0u;
  a3[1] = 0u;
  uint64_t v6 = a6(a1, a2, a3 + 2);
  _OWORD *v7 = v8;
  v7[1] = v9;
  uint16x8_t v11 = (uint64_t *)v10(v6);
  v14.i64[0] = *v11;
  BOOL v13 = (uint64_t *)((char *)v11 + v12);
  v14.i64[1] = *v13;
  uint16x8_t v15 = (uint64_t *)((char *)v13 + v12);
  v17.i64[1] = v16;
  v19.i64[1] = v18;
  v21.i64[0] = *v15;
  int8x16_t v20 = (uint64_t *)((char *)v15 + v12);
  v21.i64[1] = *v20;
  int16x8_t v23 = vdupq_n_s16(v22);
  int8x16_t v24 = (uint64_t *)((char *)v20 + v12 + -4 * v12);
  int16x8_t v25 = vminq_s16((int16x8_t)vsqaddq_u16(v14, vrshrq_n_s16(v17, 4uLL)), v23);
  void *v24 = v25.i64[0];
  int8x16_t v26 = (void *)((char *)v24 + v12);
  int16x8_t v27 = vminq_s16((int16x8_t)vsqaddq_u16(v21, vrshrq_n_s16(v19, 4uLL)), v23);
  *int8x16_t v26 = v25.i64[1];
  int16x8_t v28 = (void *)((char *)v26 + v12);
  *int16x8_t v28 = v27.i64[0];
  int16x8_t v29 = (void *)((char *)v28 + v12);
  *int16x8_t v29 = v27.i64[1];
  return (char *)v29 + v12;
}

char *sub_224A862AC(uint64_t a1, uint64_t a2, float *a3, uint64_t a4, uint64_t a5)
{
  if (!a4)
  {
    vld1q_dup_f32(a3);
    *a3 = 0.0;
    JUMPOUT(0x224A86280);
  }
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8603C);
}

char *sub_224A86304(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8613C);
}

char *sub_224A86318(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8603C);
}

char *sub_224A8632C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8603C);
}

char *sub_224A86340(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8603C);
}

char *sub_224A86354(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8608C);
}

char *sub_224A86368(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8608C);
}

char *sub_224A8637C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8608C);
}

char *sub_224A86390(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A860E4);
}

char *sub_224A863A4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A860E4);
}

char *sub_224A863B8(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A860E4);
}

char *sub_224A863CC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8613C);
}

char *sub_224A863E0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8608C);
}

char *sub_224A863F4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A860E4);
}

char *sub_224A86408(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8613C);
}

char *sub_224A8641C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  return sub_224A86214(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8613C);
}

double sub_224A86430()
{
  return 8.66459279e127;
}

double sub_224A86544()
{
  *(void *)&double result = 2896;
  return result;
}

double sub_224A866D4()
{
  *(void *)&double result = 2896;
  return result;
}

char *sub_224A86888(uint64_t a1, uint64_t a2, _OWORD *a3, int a4, uint64_t (*a5)(void))
{
  long long v6 = 0uLL;
  uint64_t v7 = 2;
  if (a4 >= v5)
  {
    a3[1] = 0uLL;
    a3[3] = 0uLL;
    a3[5] = 0uLL;
    a3[7] = 0uLL;
    a3[9] = 0uLL;
    a3[11] = 0uLL;
    a3[13] = 0uLL;
    a3[15] = 0uLL;
    a1 = a5();
  }
  *a3 = v6;
  long long v8 = &a3[v7];
  _OWORD *v8 = v6;
  long long v9 = &v8[v7];
  _OWORD *v9 = v6;
  uint16x8_t v10 = &v9[v7];
  _OWORD *v10 = v6;
  uint16x8_t v11 = &v10[v7];
  *uint16x8_t v11 = v6;
  uint64_t v12 = &v11[v7];
  *uint64_t v12 = v6;
  BOOL v13 = &v12[v7];
  *BOOL v13 = v6;
  v13[v7] = v6;
  uint64_t v14 = ((uint64_t (*)(uint64_t))a5)(a1);
  uint64_t v16 = (uint16x8_t *)v15(v14);
  v17.i64[0] = 0xFC00FC00FC00FC00;
  v17.i64[1] = 0xFC00FC00FC00FC00;
  int8x16_t v20 = (uint16x8_t *)((char *)v16 + v18 + v18);
  uint16x8_t v23 = *v20;
  unsigned int v22 = (uint16x8_t *)((char *)v20 + v18);
  uint16x8_t v26 = *v22;
  int16x8_t v25 = (uint16x8_t *)((char *)v22 + v18);
  int16x8_t v28 = vminq_s16((int16x8_t)vsqaddq_u16(*v16, vrshrq_n_s16(v19, 4uLL)), v17);
  uint16x8_t v30 = *v25;
  int16x8_t v29 = (uint16x8_t *)((char *)v25 + v18);
  int16x8_t v32 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)v16 + v18), vrshrq_n_s16(v21, 4uLL)), v17);
  uint16x8_t *v16 = (uint16x8_t)v28;
  int16x8_t v33 = (int16x8_t *)&v16->i8[v18];
  uint16x8_t v35 = *v29;
  int16x8_t v34 = (uint16x8_t *)((char *)v29 + v18);
  int16x8_t v37 = vminq_s16((int16x8_t)vsqaddq_u16(v23, vrshrq_n_s16(v24, 4uLL)), v17);
  *int16x8_t v33 = v32;
  int32x4_t v38 = (int16x8_t *)((char *)v33 + v18);
  uint16x8_t v39 = *v34;
  int16x8_t v41 = vminq_s16((int16x8_t)vsqaddq_u16(v26, vrshrq_n_s16(v27, 4uLL)), v17);
  *int32x4_t v38 = v37;
  int32x4_t v42 = (int16x8_t *)((char *)v38 + v18);
  uint16x8_t v43 = *(uint16x8_t *)((char *)v34 + v18);
  *int32x4_t v42 = v41;
  int32x4_t v45 = (int16x8_t *)((char *)v42 + v18);
  *int32x4_t v45 = vminq_s16((int16x8_t)vsqaddq_u16(v30, vrshrq_n_s16(v31, 4uLL)), v17);
  int32x4_t v46 = (int16x8_t *)((char *)v45 + v18);
  int16x8_t *v46 = vminq_s16((int16x8_t)vsqaddq_u16(v35, vrshrq_n_s16(v36, 4uLL)), v17);
  int32x4_t v47 = (int16x8_t *)((char *)v46 + v18);
  *int32x4_t v47 = vminq_s16((int16x8_t)vsqaddq_u16(v39, vrshrq_n_s16(v40, 4uLL)), v17);
  int32x4_t v48 = (int16x8_t *)((char *)v47 + v18);
  int16x8_t *v48 = vminq_s16((int16x8_t)vsqaddq_u16(v43, vrshrq_n_s16(v44, 4uLL)), v17);
  return (char *)v48 + v18;
}

uint16x8_t *sub_224A86A78(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4) {
    return (uint16x8_t *)sub_224A86888((uint64_t)a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86430);
  }
  vld1q_dup_f32(a3);
  *a3 = 0.0;
  return sub_224A85F04(a1, a2, (uint64_t)a3, a4, 8);
}

char *sub_224A86AC0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86864);
}

char *sub_224A86AD8(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86430);
}

char *sub_224A86AF0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86430);
}

char *sub_224A86B08(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86430);
}

char *sub_224A86B20(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86544);
}

char *sub_224A86B38(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86544);
}

char *sub_224A86B50(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86544);
}

char *sub_224A86B68(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A866D4);
}

char *sub_224A86B80(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A866D4);
}

char *sub_224A86B98(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A866D4);
}

char *sub_224A86BB0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86864);
}

char *sub_224A86BC8(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86544);
}

char *sub_224A86BE0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A866D4);
}

char *sub_224A86BF8(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86864);
}

char *sub_224A86C10(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86888(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86864);
}

char *sub_224A86C28(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t (*a5)(void))
{
  *a3 = 0u;
  a3[1] = 0u;
  a3[2] = 0u;
  a3[3] = 0u;
  int v5 = a3 + 4;
  _OWORD *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  uint64_t v6 = a5();
  long long v8 = (uint16x8_t *)v7(v6);
  v9.i64[0] = 0xFC00FC00FC00FC00;
  v9.i64[1] = 0xFC00FC00FC00FC00;
  uint64_t v12 = (uint16x8_t *)((char *)v8 + v10 + v10);
  uint16x8_t v14 = *v12;
  uint16x8_t v16 = *(uint16x8_t *)((char *)v12 + v10);
  int16x8_t v18 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)v8 + v10), vrshrq_n_s16(v13, 4uLL)), v9);
  *(int16x8_t *)long long v8 = vminq_s16((int16x8_t)vsqaddq_u16(*v8, vrshrq_n_s16(v11, 4uLL)), v9);
  int16x8_t v19 = (int16x8_t *)&v8->i8[v10];
  *int16x8_t v19 = v18;
  int8x16_t v20 = (int16x8_t *)((char *)v19 + v10);
  *int8x16_t v20 = vminq_s16((int16x8_t)vsqaddq_u16(v14, vrshrq_n_s16(v15, 4uLL)), v9);
  int16x8_t v21 = (int16x8_t *)((char *)v20 + v10);
  *int16x8_t v21 = vminq_s16((int16x8_t)vsqaddq_u16(v16, vrshrq_n_s16(v17, 4uLL)), v9);
  return (char *)v21 + v10;
}

char *sub_224A86D44(uint64_t a1, uint64_t a2, _OWORD *a3, int a4, uint64_t (*a5)(void))
{
  long long v6 = 0uLL;
  uint64_t v7 = 2;
  if (a4 >= v5)
  {
    a3[1] = 0uLL;
    a3[3] = 0uLL;
    a3[5] = 0uLL;
    a3[7] = 0uLL;
    a1 = a5();
  }
  *a3 = v6;
  long long v8 = &a3[v7];
  _OWORD *v8 = v6;
  int16x8_t v9 = &v8[v7];
  _OWORD *v9 = v6;
  v9[v7] = v6;
  uint64_t v10 = ((uint64_t (*)(uint64_t))a5)(a1);
  uint64_t v12 = (uint64_t *)v11(v10);
  v13.i64[0] = 0xFC00FC00FC00FC00;
  v13.i64[1] = 0xFC00FC00FC00FC00;
  v15.i64[0] = *v12;
  v17.i64[1] = v16;
  v15.i64[1] = *(uint64_t *)((char *)v12 + v14);
  int16x8_t v18 = (uint64_t *)((char *)v12 + v14 + v14);
  v20.i64[0] = *v18;
  int16x8_t v19 = (uint64_t *)((char *)v18 + v14);
  v22.i64[1] = v21;
  v20.i64[1] = *v19;
  uint16x8_t v23 = (uint64_t *)((char *)v19 + v14);
  v25.i64[0] = *v23;
  int16x8_t v24 = (uint64_t *)((char *)v23 + v14);
  v27.i64[1] = v26;
  v25.i64[1] = *v24;
  int16x8_t v28 = (uint64_t *)((char *)v24 + v14);
  v29.i64[0] = *v28;
  v31.i64[1] = v30;
  v29.i64[1] = *(uint64_t *)((char *)v28 + v14);
  int16x8_t v32 = vminq_s16((int16x8_t)vsqaddq_u16(v15, vrshrq_n_s16(v17, 4uLL)), v13);
  *uint64_t v12 = v32.i64[0];
  int16x8_t v33 = (uint64_t *)((char *)v12 + v14);
  int16x8_t v34 = vminq_s16((int16x8_t)vsqaddq_u16(v20, vrshrq_n_s16(v22, 4uLL)), v13);
  *int16x8_t v33 = v32.i64[1];
  uint16x8_t v35 = (void *)((char *)v33 + v14);
  *uint16x8_t v35 = v34.i64[0];
  int16x8_t v36 = (void *)((char *)v35 + v14);
  int16x8_t v37 = vminq_s16((int16x8_t)vsqaddq_u16(v25, vrshrq_n_s16(v27, 4uLL)), v13);
  void *v36 = v34.i64[1];
  int32x4_t v38 = (void *)((char *)v36 + v14);
  *int32x4_t v38 = v37.i64[0];
  uint16x8_t v39 = (void *)((char *)v38 + v14);
  int16x8_t v40 = vminq_s16((int16x8_t)vsqaddq_u16(v29, vrshrq_n_s16(v31, 4uLL)), v13);
  *uint16x8_t v39 = v37.i64[1];
  int16x8_t v41 = (void *)((char *)v39 + v14);
  *int16x8_t v41 = v40.i64[0];
  int32x4_t v42 = (void *)((char *)v41 + v14);
  *int32x4_t v42 = v40.i64[1];
  return (char *)v42 + v14;
}

uint64_t *sub_224A86ECC(uint64_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4) {
    return (uint64_t *)sub_224A86D44((uint64_t)a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8603C);
  }
  vld1q_dup_f32(a3);
  *a3 = 0.0;
  return sub_224A85EC0(a1, a2, (uint64_t)a3, a4, 8);
}

char *sub_224A86F18(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8613C);
}

char *sub_224A86F30(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8603C);
}

char *sub_224A86F48(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8603C);
}

char *sub_224A86F60(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8603C);
}

char *sub_224A86F78(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8608C);
}

char *sub_224A86F90(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8608C);
}

char *sub_224A86FA8(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8608C);
}

char *sub_224A86FC0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A860E4);
}

char *sub_224A86FD8(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A860E4);
}

char *sub_224A86FF0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A860E4);
}

char *sub_224A87008(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8613C);
}

char *sub_224A87020(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8608C);
}

char *sub_224A87038(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A860E4);
}

char *sub_224A87050(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8613C);
}

char *sub_224A87068(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A86D44(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8613C);
}

uint16x8_t *sub_224A87080(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4) {
    return (uint16x8_t *)sub_224A86C28((uint64_t)a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86430);
  }
  vld1q_dup_f32(a3);
  *a3 = 0.0;
  return sub_224A85F04(a1, a2, (uint64_t)a3, a4, 4);
}

char *sub_224A870C8(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86864);
}

char *sub_224A870DC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86430);
}

char *sub_224A870F0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86430);
}

char *sub_224A87104(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86430);
}

char *sub_224A87118(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86544);
}

char *sub_224A8712C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86544);
}

char *sub_224A87140(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86544);
}

char *sub_224A87154(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A866D4);
}

char *sub_224A87168(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A866D4);
}

char *sub_224A8717C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A866D4);
}

char *sub_224A87190(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86864);
}

char *sub_224A871A4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86544);
}

char *sub_224A871B8(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A866D4);
}

char *sub_224A871CC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86864);
}

char *sub_224A871E0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A86C28(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86864);
}

double sub_224A871F4()
{
  return 8.66459279e127;
}

double sub_224A87524()
{
  return 8.66459279e127;
}

double sub_224A8794C()
{
  return 8.66459279e127;
}

int32x2_t sub_224A87D80()
{
  return vdup_n_s32(0x6A100000u);
}

void sub_224A87E4C(void (*a1)(void)@<X4>, _OWORD *a2@<X7>, uint64_t a3@<X8>)
{
  *a2 = 0u;
  int8x16_t v3 = (_OWORD *)((char *)a2 + a3);
  _OWORD *v3 = 0u;
  uint64_t v4 = (_OWORD *)((char *)v3 + a3);
  _OWORD *v4 = 0u;
  int v5 = (_OWORD *)((char *)v4 + a3);
  _OWORD *v5 = 0u;
  long long v6 = (_OWORD *)((char *)v5 + a3);
  _OWORD *v6 = 0u;
  uint64_t v7 = (_OWORD *)((char *)v6 + a3);
  _OWORD *v7 = 0u;
  long long v8 = (_OWORD *)((char *)v7 + a3);
  _OWORD *v8 = 0u;
  int16x8_t v9 = (_OWORD *)((char *)v8 + a3);
  _OWORD *v9 = 0u;
  uint64_t v10 = (_OWORD *)((char *)v9 + a3);
  _OWORD *v10 = 0u;
  int16x8_t v11 = (_OWORD *)((char *)v10 + a3);
  *int16x8_t v11 = 0u;
  uint64_t v12 = (_OWORD *)((char *)v11 + a3);
  *uint64_t v12 = 0u;
  int16x8_t v13 = (_OWORD *)((char *)v12 + a3);
  *int16x8_t v13 = 0u;
  uint64_t v14 = (_OWORD *)((char *)v13 + a3);
  *uint64_t v14 = 0u;
  uint16x8_t v15 = (_OWORD *)((char *)v14 + a3);
  *uint16x8_t v15 = 0u;
  uint64_t v16 = (_OWORD *)((char *)v15 + a3);
  _OWORD *v16 = 0u;
  *(_OWORD *)((char *)v16 + a3) = 0u;
  a1();
  JUMPOUT(0x224A88030);
}

uint64_t sub_224A87F64@<X0>(uint64_t (*a1)(void)@<X4>, _OWORD *a2@<X7>, uint64_t a3@<X8>)
{
  *a2 = 0u;
  int8x16_t v3 = (_OWORD *)((char *)a2 + a3);
  _OWORD *v3 = 0u;
  uint64_t v4 = (_OWORD *)((char *)v3 + a3);
  _OWORD *v4 = 0u;
  int v5 = (_OWORD *)((char *)v4 + a3);
  _OWORD *v5 = 0u;
  long long v6 = (_OWORD *)((char *)v5 + a3);
  _OWORD *v6 = 0u;
  uint64_t v7 = (_OWORD *)((char *)v6 + a3);
  _OWORD *v7 = 0u;
  long long v8 = (_OWORD *)((char *)v7 + a3);
  _OWORD *v8 = 0u;
  int16x8_t v9 = (_OWORD *)((char *)v8 + a3);
  _OWORD *v9 = 0u;
  uint64_t v10 = (_OWORD *)((char *)v9 + a3);
  _OWORD *v10 = 0u;
  int16x8_t v11 = (_OWORD *)((char *)v10 + a3);
  *int16x8_t v11 = 0u;
  uint64_t v12 = (_OWORD *)((char *)v11 + a3);
  *uint64_t v12 = 0u;
  int16x8_t v13 = (_OWORD *)((char *)v12 + a3);
  *int16x8_t v13 = 0u;
  uint64_t v14 = (_OWORD *)((char *)v13 + a3);
  *uint64_t v14 = 0u;
  uint16x8_t v15 = (_OWORD *)((char *)v14 + a3);
  *uint16x8_t v15 = 0u;
  uint64_t v16 = (_OWORD *)((char *)v15 + a3);
  _OWORD *v16 = 0u;
  *(_OWORD *)((char *)v16 + a3) = 0u;
  uint64_t result = a1();
  int16x8_t v23 = vqrshrn_high_n_s32(vqrshrn_n_s32(v18, 2uLL), v22, 2uLL);
  int16x8_t v25 = vqrshrn_high_n_s32(vqrshrn_n_s32(v19, 2uLL), v24, 2uLL);
  int16x8_t v27 = vqrshrn_high_n_s32(vqrshrn_n_s32(v20, 2uLL), v26, 2uLL);
  int16x8_t v29 = vqrshrn_high_n_s32(vqrshrn_n_s32(v21, 2uLL), v28, 2uLL);
  int16x8_t v35 = vqrshrn_high_n_s32(vqrshrn_n_s32(v30, 2uLL), v34, 2uLL);
  int16x8_t v37 = vqrshrn_high_n_s32(vqrshrn_n_s32(v31, 2uLL), v36, 2uLL);
  int16x8_t v39 = vqrshrn_high_n_s32(vqrshrn_n_s32(v32, 2uLL), v38, 2uLL);
  int16x8_t v41 = vqrshrn_high_n_s32(vqrshrn_n_s32(v33, 2uLL), v40, 2uLL);
  int32x4_t v42 = (int32x4_t)vtrn1q_s16(v23, v25);
  int32x4_t v43 = (int32x4_t)vtrn2q_s16(v23, v25);
  int32x4_t v44 = (int32x4_t)vtrn1q_s16(v27, v29);
  int32x4_t v45 = (int32x4_t)vtrn2q_s16(v27, v29);
  int32x4_t v46 = vtrn1q_s32(v42, v44);
  int32x4_t v47 = vtrn2q_s32(v42, v44);
  int32x4_t v48 = vtrn1q_s32(v43, v45);
  int32x4_t v49 = vtrn2q_s32(v43, v45);
  int32x4_t v50 = (int32x4_t)vtrn1q_s16(v35, v37);
  int32x4_t v51 = (int32x4_t)vtrn2q_s16(v35, v37);
  int32x4_t v52 = (int32x4_t)vtrn1q_s16(v39, v41);
  int32x4_t v53 = (int32x4_t)vtrn2q_s16(v39, v41);
  *v54++ = v46;
  *v54++ = vtrn1q_s32(v50, v52);
  *v54++ = v48;
  *v54++ = vtrn1q_s32(v51, v53);
  *v54++ = v47;
  *v54++ = vtrn2q_s32(v50, v52);
  *int16x8_t v54 = v49;
  v54[1] = vtrn2q_s32(v51, v53);
  return result;
}

uint64_t sub_224A88094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t result = a6();
  v7.i64[0] = 0xFC00FC00FC00FC00;
  v7.i64[1] = 0xFC00FC00FC00FC00;
  int16x8_t v11 = (uint16x8_t *)((char *)v9 + v8 + v8);
  uint16x8_t v14 = *v11;
  int16x8_t v13 = (uint16x8_t *)((char *)v11 + v8);
  uint16x8_t v17 = *v13;
  uint64_t v16 = (uint16x8_t *)((char *)v13 + v8);
  int16x8_t v19 = vminq_s16((int16x8_t)vsqaddq_u16(*v9, vrshrq_n_s16(v10, 4uLL)), v7);
  uint16x8_t v21 = *v16;
  int32x4_t v20 = (uint16x8_t *)((char *)v16 + v8);
  int16x8_t v23 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)v9 + v8), vrshrq_n_s16(v12, 4uLL)), v7);
  uint16x8_t *v9 = (uint16x8_t)v19;
  int32x4_t v24 = (int16x8_t *)&v9->i8[v8];
  uint16x8_t v26 = *v20;
  int16x8_t v25 = (uint16x8_t *)((char *)v20 + v8);
  int16x8_t v28 = vminq_s16((int16x8_t)vsqaddq_u16(v14, vrshrq_n_s16(v15, 4uLL)), v7);
  int16x8_t *v24 = v23;
  int16x8_t v29 = (int16x8_t *)((char *)v24 + v8);
  uint16x8_t v31 = *v25;
  int32x4_t v30 = (uint16x8_t *)((char *)v25 + v8);
  int16x8_t v33 = vminq_s16((int16x8_t)vsqaddq_u16(v17, vrshrq_n_s16(v18, 4uLL)), v7);
  *int16x8_t v29 = v28;
  int32x4_t v34 = (int16x8_t *)((char *)v29 + v8);
  uint16x8_t v36 = *v30;
  int16x8_t v35 = (uint16x8_t *)((char *)v30 + v8);
  int16x8_t v38 = vminq_s16((int16x8_t)vsqaddq_u16(v21, vrshrq_n_s16(v22, 4uLL)), v7);
  int16x8_t *v34 = v33;
  int16x8_t v39 = (int16x8_t *)((char *)v34 + v8);
  uint16x8_t v41 = *v35;
  int32x4_t v40 = (uint16x8_t *)((char *)v35 + v8);
  int16x8_t v43 = vminq_s16((int16x8_t)vsqaddq_u16(v26, vrshrq_n_s16(v27, 4uLL)), v7);
  *int16x8_t v39 = v38;
  int32x4_t v44 = (int16x8_t *)((char *)v39 + v8);
  uint16x8_t v46 = *v40;
  int32x4_t v45 = (uint16x8_t *)((char *)v40 + v8);
  int16x8_t v48 = vminq_s16((int16x8_t)vsqaddq_u16(v31, vrshrq_n_s16(v32, 4uLL)), v7);
  *int32x4_t v44 = v43;
  int32x4_t v49 = (int16x8_t *)((char *)v44 + v8);
  uint16x8_t v51 = *v45;
  int32x4_t v50 = (uint16x8_t *)((char *)v45 + v8);
  int16x8_t v53 = vminq_s16((int16x8_t)vsqaddq_u16(v36, vrshrq_n_s16(v37, 4uLL)), v7);
  *int32x4_t v49 = v48;
  int16x8_t v54 = (int16x8_t *)((char *)v49 + v8);
  uint16x8_t v56 = *v50;
  int16x8_t v55 = (uint16x8_t *)((char *)v50 + v8);
  int16x8_t v58 = vminq_s16((int16x8_t)vsqaddq_u16(v41, vrshrq_n_s16(v42, 4uLL)), v7);
  *int16x8_t v54 = v53;
  int16x8_t v59 = (int16x8_t *)((char *)v54 + v8);
  uint16x8_t v61 = *v55;
  int32x4_t v60 = (uint16x8_t *)((char *)v55 + v8);
  int16x8_t v63 = vminq_s16((int16x8_t)vsqaddq_u16(v46, vrshrq_n_s16(v47, 4uLL)), v7);
  *int16x8_t v59 = v58;
  int32x4_t v64 = (int16x8_t *)((char *)v59 + v8);
  uint16x8_t v66 = *v60;
  int32x4_t v65 = (uint16x8_t *)((char *)v60 + v8);
  int16x8_t v68 = vminq_s16((int16x8_t)vsqaddq_u16(v51, vrshrq_n_s16(v52, 4uLL)), v7);
  *int32x4_t v64 = v63;
  int32x4_t v69 = (int16x8_t *)((char *)v64 + v8);
  uint16x8_t v70 = *v65;
  int16x8_t v72 = vminq_s16((int16x8_t)vsqaddq_u16(v56, vrshrq_n_s16(v57, 4uLL)), v7);
  *int32x4_t v69 = v68;
  int32x4_t v73 = (int16x8_t *)((char *)v69 + v8);
  uint16x8_t v74 = *(uint16x8_t *)((char *)v65 + v8);
  *int32x4_t v73 = v72;
  int8x16_t v76 = (int16x8_t *)((char *)v73 + v8);
  *int8x16_t v76 = vminq_s16((int16x8_t)vsqaddq_u16(v61, vrshrq_n_s16(v62, 4uLL)), v7);
  int8x16_t v77 = (int16x8_t *)((char *)v76 + v8);
  *int8x16_t v77 = vminq_s16((int16x8_t)vsqaddq_u16(v66, vrshrq_n_s16(v67, 4uLL)), v7);
  int8x16_t v78 = (int16x8_t *)((char *)v77 + v8);
  *int8x16_t v78 = vminq_s16((int16x8_t)vsqaddq_u16(v70, vrshrq_n_s16(v71, 4uLL)), v7);
  *(int16x8_t *)((char *)v78 + v8) = vminq_s16((int16x8_t)vsqaddq_u16(v74, vrshrq_n_s16(v75, 4uLL)), v7);
  return result;
}

uint64_t sub_224A88228(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = sub_224A87F64(a5, a3, 64);
  int16x8_t v11 = &v25;
  int v12 = 12;
  if ((int)v8 < v13
    || (v5 = sub_224A87F64(v9, v7 + 1, 64), int16x8_t v11 = &v26, v12 = 8, (int)v8 < v14)
    || (v5 = sub_224A87F64(v9, v7 + 2, 64), int16x8_t v11 = &v27, v12 = 4, (int)v8 < v15))
  {
    do
    {
      BOOL v16 = __OFSUB__(v12, 4);
      v12 -= 4;
      *(_OWORD *)int16x8_t v11 = 0uLL;
      *((_OWORD *)v11 + 1) = 0uLL;
      *((_OWORD *)v11 + 2) = 0uLL;
      *((_OWORD *)v11 + 3) = 0uLL;
      uint16x8_t v17 = v11 + 64;
      *uint16x8_t v17 = 0uLL;
      v17[1] = 0uLL;
      v17[2] = 0uLL;
      v17[3] = 0uLL;
      int16x8_t v11 = (char *)(v17 + 4);
    }
    while (!((v12 < 0) ^ v16 | (v12 == 0)));
  }
  else
  {
    uint64_t v5 = sub_224A87F64(v9, v7 + 3, 64);
  }
  uint64_t v18 = sub_224A88094(v5, v6, (uint64_t)v7, v8, (uint64_t)v9, v10);
  return sub_224A88094(v18, v19, v20, v21, v22, v23);
}

uint16x8_t *sub_224A882EC(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4) {
    return (uint16x8_t *)sub_224A88228((uint64_t)a1, a2, a3, a4, (uint64_t (*)(void))sub_224A871F4);
  }
  vld1q_dup_f32(a3);
  *a3 = 0.0;
  return sub_224A85F58(a1, a2, (uint64_t)a3, a4, 16);
}

uint64_t sub_224A88334(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A88228(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87D80);
}

uint64_t sub_224A8834C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A88228(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A871F4);
}

uint64_t sub_224A88364(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A88228(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A871F4);
}

uint64_t sub_224A8837C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A88228(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A871F4);
}

uint64_t sub_224A88394(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A88228(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87524);
}

uint64_t sub_224A883AC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A88228(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87524);
}

uint64_t sub_224A883C4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A88228(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87524);
}

uint64_t sub_224A883DC(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A88228(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8794C);
}

uint64_t sub_224A883F4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A88228(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8794C);
}

uint64_t sub_224A8840C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A88228(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8794C);
}

uint64_t sub_224A88424(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A88228(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87D80);
}

uint16x8_t *sub_224A8843C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, _OWORD *))
{
  *a3 = 0u;
  uint64_t v5 = a3 + 1;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  *v5++ = 0u;
  _OWORD *v5 = 0u;
  uint64_t v6 = a5(a1, a2, v5 + 1);
  uint64_t v8 = (uint16x8_t *)v7(v6);
  v9.i64[0] = 0xFC00FC00FC00FC00;
  v9.i64[1] = 0xFC00FC00FC00FC00;
  int v12 = (uint16x8_t *)((char *)v8 + v10 + v10);
  uint16x8_t v15 = *(uint16x8_t *)((char *)v12 + v10);
  int16x8_t v17 = (int16x8_t)vsqaddq_u16(*v12, vrshrq_n_s16(v14, 4uLL));
  int16x8_t v18 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)v8 + v10), vrshrq_n_s16(v13, 4uLL)), v9);
  *(int16x8_t *)uint64_t v8 = vminq_s16((int16x8_t)vsqaddq_u16(*v8, vrshrq_n_s16(v11, 4uLL)), v9);
  *(int16x8_t *)((char *)v8 + v10) = v18;
  *(int16x8_t *)int v12 = vminq_s16(v17, v9);
  *(int16x8_t *)((char *)v12 + v10) = vminq_s16((int16x8_t)vsqaddq_u16(v15, vrshrq_n_s16(v16, 4uLL)), v9);
  uint64_t result = (uint16x8_t *)v19();
  v21.i64[0] = 0xFC00FC00FC00FC00;
  v21.i64[1] = 0xFC00FC00FC00FC00;
  int16x8_t v23 = (uint16x8_t *)((char *)result + v22 + 16);
  uint16x8_t v26 = *v23;
  char v25 = (uint16x8_t *)((char *)v23 + v22);
  uint16x8_t v28 = *v25;
  uint16x8_t v30 = *(uint16x8_t *)((char *)v25 + v22);
  result[1] = (uint16x8_t)vminq_s16((int16x8_t)vsqaddq_u16(result[1], vrshrq_n_s16(v24, 4uLL)), v21);
  int16x8_t v32 = (int16x8_t *)&result[1].i8[v22];
  *int16x8_t v32 = vminq_s16((int16x8_t)vsqaddq_u16(v26, vrshrq_n_s16(v27, 4uLL)), v21);
  int16x8_t v33 = (int16x8_t *)((char *)v32 + v22);
  *int16x8_t v33 = vminq_s16((int16x8_t)vsqaddq_u16(v28, vrshrq_n_s16(v29, 4uLL)), v21);
  *(int16x8_t *)((char *)v33 + v22) = vminq_s16((int16x8_t)vsqaddq_u16(v30, vrshrq_n_s16(v31, 4uLL)), v21);
  return result;
}

char *sub_224A8860C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4, uint64_t (*a5)(void))
{
  uint64_t v6 = 4;
  int v7 = v5[1];
  if (a4 >= v5[2])
  {
    a3[3] = 0u;
    a3[7] = 0u;
    a3[11] = 0u;
    a3[15] = 0u;
    a1 = a5();
  }
  BOOL v8 = a4 < v7;
  int v9 = *v5;
  if (!v8)
  {
    a3[2] = 0u;
    uint64_t v10 = &a3[v6 + 2];
    _OWORD *v10 = 0u;
    int16x8_t v11 = &v10[v6];
    *int16x8_t v11 = 0u;
    v11[v6] = 0u;
    a1 = ((uint64_t (*)(uint64_t))a5)(a1);
  }
  if (a4 >= v9)
  {
    a3[1] = 0u;
    int v12 = &a3[v6 + 1];
    *int v12 = 0u;
    int16x8_t v13 = &v12[v6];
    *int16x8_t v13 = 0u;
    v13[v6] = 0u;
    a1 = ((uint64_t (*)(uint64_t))a5)(a1);
  }
  *a3 = 0u;
  int16x8_t v14 = &a3[v6];
  *int16x8_t v14 = 0u;
  uint16x8_t v15 = &v14[v6];
  *uint16x8_t v15 = 0u;
  v15[v6] = 0u;
  uint64_t v16 = ((uint64_t (*)(uint64_t))a5)(a1);
  int16x8_t v18 = (uint64_t *)v17(v16);
  v19.i64[0] = 0xFC00FC00FC00FC00;
  v19.i64[1] = 0xFC00FC00FC00FC00;
  v21.i64[0] = *v18;
  v23.i64[1] = v22;
  v21.i64[1] = *(uint64_t *)((char *)v18 + v20);
  int16x8_t v24 = (uint64_t *)((char *)v18 + v20 + v20);
  v26.i64[0] = *v24;
  char v25 = (uint64_t *)((char *)v24 + v20);
  v28.i64[1] = v27;
  v26.i64[1] = *v25;
  int16x8_t v29 = (uint64_t *)((char *)v25 + v20);
  v31.i64[0] = *v29;
  uint16x8_t v30 = (uint64_t *)((char *)v29 + v20);
  v33.i64[1] = v32;
  v31.i64[1] = *v30;
  int32x4_t v34 = (uint64_t *)((char *)v30 + v20);
  v36.i64[0] = *v34;
  int16x8_t v35 = (uint64_t *)((char *)v34 + v20);
  v38.i64[1] = v37;
  v36.i64[1] = *v35;
  int16x8_t v39 = (uint64_t *)((char *)v35 + v20);
  v41.i64[0] = *v39;
  int32x4_t v40 = (uint64_t *)((char *)v39 + v20);
  v43.i64[1] = v42;
  v41.i64[1] = *v40;
  int32x4_t v44 = (uint64_t *)((char *)v40 + v20);
  int16x8_t v45 = vminq_s16((int16x8_t)vsqaddq_u16(v21, vrshrq_n_s16(v23, 4uLL)), v19);
  v47.i64[0] = *v44;
  uint16x8_t v46 = (uint64_t *)((char *)v44 + v20);
  v49.i64[1] = v48;
  v47.i64[1] = *v46;
  int32x4_t v50 = (uint64_t *)((char *)v46 + v20);
  *int16x8_t v18 = v45.i64[0];
  uint16x8_t v51 = (uint64_t *)((char *)v18 + v20);
  int16x8_t v52 = vminq_s16((int16x8_t)vsqaddq_u16(v26, vrshrq_n_s16(v28, 4uLL)), v19);
  *uint16x8_t v51 = v45.i64[1];
  int16x8_t v53 = (void *)((char *)v51 + v20);
  v55.i64[0] = *v50;
  int16x8_t v54 = (uint64_t *)((char *)v50 + v20);
  v57.i64[1] = v56;
  v55.i64[1] = *v54;
  int16x8_t v58 = (uint64_t *)((char *)v54 + v20);
  *int16x8_t v53 = v52.i64[0];
  int16x8_t v59 = (void *)((char *)v53 + v20);
  int16x8_t v60 = vminq_s16((int16x8_t)vsqaddq_u16(v31, vrshrq_n_s16(v33, 4uLL)), v19);
  *int16x8_t v59 = v52.i64[1];
  uint16x8_t v61 = (void *)((char *)v59 + v20);
  v62.i64[0] = *v58;
  v64.i64[1] = v63;
  v62.i64[1] = *(uint64_t *)((char *)v58 + v20);
  void *v61 = v60.i64[0];
  int32x4_t v65 = (void *)((char *)v61 + v20);
  int16x8_t v66 = vminq_s16((int16x8_t)vsqaddq_u16(v36, vrshrq_n_s16(v38, 4uLL)), v19);
  *int32x4_t v65 = v60.i64[1];
  int16x8_t v67 = (void *)((char *)v65 + v20);
  *int16x8_t v67 = v66.i64[0];
  int16x8_t v68 = (void *)((char *)v67 + v20);
  int16x8_t v69 = vminq_s16((int16x8_t)vsqaddq_u16(v41, vrshrq_n_s16(v43, 4uLL)), v19);
  *int16x8_t v68 = v66.i64[1];
  uint16x8_t v70 = (void *)((char *)v68 + v20);
  void *v70 = v69.i64[0];
  int16x8_t v71 = (void *)((char *)v70 + v20);
  int16x8_t v72 = vminq_s16((int16x8_t)vsqaddq_u16(v47, vrshrq_n_s16(v49, 4uLL)), v19);
  *int16x8_t v71 = v69.i64[1];
  int32x4_t v73 = (void *)((char *)v71 + v20);
  *int32x4_t v73 = v72.i64[0];
  uint16x8_t v74 = (void *)((char *)v73 + v20);
  int16x8_t v75 = vminq_s16((int16x8_t)vsqaddq_u16(v55, vrshrq_n_s16(v57, 4uLL)), v19);
  void *v74 = v72.i64[1];
  int8x16_t v76 = (void *)((char *)v74 + v20);
  *int8x16_t v76 = v75.i64[0];
  int8x16_t v77 = (void *)((char *)v76 + v20);
  int16x8_t v78 = vminq_s16((int16x8_t)vsqaddq_u16(v62, vrshrq_n_s16(v64, 4uLL)), v19);
  *int8x16_t v77 = v75.i64[1];
  uint8x16_t v79 = (void *)((char *)v77 + v20);
  *uint8x16_t v79 = v78.i64[0];
  int8x16_t v80 = (void *)((char *)v79 + v20);
  *int8x16_t v80 = v78.i64[1];
  return (char *)v80 + v20;
}

uint64_t *sub_224A888F0(uint64_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4) {
    return (uint64_t *)sub_224A8860C((uint64_t)a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8603C);
  }
  vld1q_dup_f32(a3);
  *a3 = 0.0;
  return sub_224A85EC0(a1, a2, (uint64_t)a3, a4, 16);
}

char *sub_224A88938(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8613C);
}

char *sub_224A88950(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8603C);
}

char *sub_224A88968(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8603C);
}

char *sub_224A88980(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8603C);
}

char *sub_224A88998(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8608C);
}

char *sub_224A889B0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8608C);
}

char *sub_224A889C8(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8608C);
}

char *sub_224A889E0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A860E4);
}

char *sub_224A889F8(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A860E4);
}

char *sub_224A88A10(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A860E4);
}

char *sub_224A88A28(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8613C);
}

char *sub_224A88A40(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8608C);
}

char *sub_224A88A58(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A860E4);
}

char *sub_224A88A70(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8613C);
}

char *sub_224A88A88(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8860C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8613C);
}

uint16x8_t *sub_224A88AA0(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4) {
    return sub_224A8843C((uint64_t)a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A871F4);
  }
  vld1q_dup_f32(a3);
  *a3 = 0.0;
  return sub_224A85F58(a1, a2, (uint64_t)a3, a4, 4);
}

uint16x8_t *sub_224A88AE0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A87D80);
}

uint16x8_t *sub_224A88AF0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A871F4);
}

uint16x8_t *sub_224A88B00(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A871F4);
}

uint16x8_t *sub_224A88B10(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A871F4);
}

uint16x8_t *sub_224A88B20(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A87524);
}

uint16x8_t *sub_224A88B30(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A87524);
}

uint16x8_t *sub_224A88B40(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A87524);
}

uint16x8_t *sub_224A88B50(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8794C);
}

uint16x8_t *sub_224A88B60(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8794C);
}

uint16x8_t *sub_224A88B70(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8794C);
}

uint16x8_t *sub_224A88B80(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A87D80);
}

uint16x8_t *sub_224A88B90(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A87524);
}

uint16x8_t *sub_224A88BA0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A8794C);
}

uint16x8_t *sub_224A88BB0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A87D80);
}

uint16x8_t *sub_224A88BC0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_224A8843C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _OWORD *))sub_224A87D80);
}

char *sub_224A88BD0(uint64_t a1, uint64_t a2, _OWORD *a3, int a4, uint64_t (*a5)(void))
{
  uint64_t v6 = 2;
  if (a4 >= v5)
  {
    a3[1] = 0u;
    a3[3] = 0u;
    a3[5] = 0u;
    a3[7] = 0u;
    a3[9] = 0u;
    a3[11] = 0u;
    a3[13] = 0u;
    a3[15] = 0u;
    a3[17] = 0u;
    a3[19] = 0u;
    a3[21] = 0u;
    a3[23] = 0u;
    a3[25] = 0u;
    a3[27] = 0u;
    a3[29] = 0u;
    a3[31] = 0u;
    a1 = a5();
  }
  *a3 = 0u;
  int v7 = &a3[v6];
  _OWORD *v7 = 0u;
  BOOL v8 = &v7[v6];
  _OWORD *v8 = 0u;
  int v9 = &v8[v6];
  _OWORD *v9 = 0u;
  uint64_t v10 = &v9[v6];
  _OWORD *v10 = 0u;
  int16x8_t v11 = &v10[v6];
  *int16x8_t v11 = 0u;
  int v12 = &v11[v6];
  *int v12 = 0u;
  int16x8_t v13 = &v12[v6];
  *int16x8_t v13 = 0u;
  int16x8_t v14 = &v13[v6];
  *int16x8_t v14 = 0u;
  uint16x8_t v15 = &v14[v6];
  *uint16x8_t v15 = 0u;
  uint64_t v16 = &v15[v6];
  _OWORD *v16 = 0u;
  int16x8_t v17 = &v16[v6];
  *int16x8_t v17 = 0u;
  int16x8_t v18 = &v17[v6];
  *int16x8_t v18 = 0u;
  int16x8_t v19 = &v18[v6];
  *int16x8_t v19 = 0u;
  uint64_t v20 = &v19[v6];
  *uint64_t v20 = 0u;
  v20[v6] = 0u;
  uint64_t v21 = ((uint64_t (*)(uint64_t))a5)(a1);
  int16x8_t v23 = (uint16x8_t *)v22(v21);
  v24.i64[0] = 0xFC00FC00FC00FC00;
  v24.i64[1] = 0xFC00FC00FC00FC00;
  uint64_t v27 = (uint16x8_t *)((char *)v23 + v25 + v25);
  uint16x8_t v30 = *v27;
  int16x8_t v29 = (uint16x8_t *)((char *)v27 + v25);
  uint16x8_t v33 = *v29;
  uint64_t v32 = (uint16x8_t *)((char *)v29 + v25);
  int16x8_t v35 = vminq_s16((int16x8_t)vsqaddq_u16(*v23, vrshrq_n_s16(v26, 4uLL)), v24);
  uint16x8_t v37 = *v32;
  uint16x8_t v36 = (uint16x8_t *)((char *)v32 + v25);
  int16x8_t v39 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)v23 + v25), vrshrq_n_s16(v28, 4uLL)), v24);
  *int16x8_t v23 = (uint16x8_t)v35;
  uint16x8_t v41 = *v36;
  int32x4_t v40 = (uint16x8_t *)((char *)v36 + v25);
  int16x8_t v43 = vminq_s16((int16x8_t)vsqaddq_u16(v30, vrshrq_n_s16(v31, 4uLL)), v24);
  *(int16x8_t *)((char *)v23 + v25) = v39;
  int32x4_t v44 = (int16x8_t *)&v23->i8[v25 + v25];
  uint16x8_t v45 = *v40;
  int16x8_t v47 = vminq_s16((int16x8_t)vsqaddq_u16(v33, vrshrq_n_s16(v34, 4uLL)), v24);
  *int32x4_t v44 = v43;
  uint64_t v48 = (int16x8_t *)((char *)v44 + v25);
  uint16x8_t v49 = *(uint16x8_t *)((char *)v40 + v25);
  int16x8_t *v48 = v47;
  uint16x8_t v51 = (int16x8_t *)((char *)v48 + v25);
  *uint16x8_t v51 = vminq_s16((int16x8_t)vsqaddq_u16(v37, vrshrq_n_s16(v38, 4uLL)), v24);
  int16x8_t v52 = (int16x8_t *)((char *)v51 + v25);
  *int16x8_t v52 = vminq_s16((int16x8_t)vsqaddq_u16(v41, vrshrq_n_s16(v42, 4uLL)), v24);
  int16x8_t v53 = (int16x8_t *)((char *)v52 + v25);
  *int16x8_t v53 = vminq_s16((int16x8_t)vsqaddq_u16(v45, vrshrq_n_s16(v46, 4uLL)), v24);
  *(int16x8_t *)((char *)v53 + v25) = vminq_s16((int16x8_t)vsqaddq_u16(v49, vrshrq_n_s16(v50, 4uLL)), v24);
  uint16x8_t v55 = (uint16x8_t *)(v54() + 16);
  v56.i64[0] = 0xFC00FC00FC00FC00;
  v56.i64[1] = 0xFC00FC00FC00FC00;
  int16x8_t v59 = (uint16x8_t *)((char *)v55 + v57 + v57);
  uint16x8_t v62 = *v59;
  uint16x8_t v61 = (uint16x8_t *)((char *)v59 + v57);
  uint16x8_t v65 = *v61;
  int16x8_t v64 = (uint16x8_t *)((char *)v61 + v57);
  int16x8_t v67 = vminq_s16((int16x8_t)vsqaddq_u16(*v55, vrshrq_n_s16(v58, 4uLL)), v56);
  uint16x8_t v69 = *v64;
  int16x8_t v68 = (uint16x8_t *)((char *)v64 + v57);
  int16x8_t v71 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)v55 + v57), vrshrq_n_s16(v60, 4uLL)), v56);
  *uint16x8_t v55 = (uint16x8_t)v67;
  int16x8_t v72 = (int16x8_t *)&v55->i8[v57];
  uint16x8_t v74 = *v68;
  int32x4_t v73 = (uint16x8_t *)((char *)v68 + v57);
  int16x8_t v76 = vminq_s16((int16x8_t)vsqaddq_u16(v62, vrshrq_n_s16(v63, 4uLL)), v56);
  int16x8_t *v72 = v71;
  int8x16_t v77 = (int16x8_t *)((char *)v72 + v57);
  uint16x8_t v78 = *v73;
  int16x8_t v80 = vminq_s16((int16x8_t)vsqaddq_u16(v65, vrshrq_n_s16(v66, 4uLL)), v56);
  *int8x16_t v77 = v76;
  uint8x16_t v81 = (int16x8_t *)((char *)v77 + v57);
  uint16x8_t v82 = *(uint16x8_t *)((char *)v73 + v57);
  *uint8x16_t v81 = v80;
  uint8x16_t v84 = (int16x8_t *)((char *)v81 + v57);
  *uint8x16_t v84 = vminq_s16((int16x8_t)vsqaddq_u16(v69, vrshrq_n_s16(v70, 4uLL)), v56);
  unint64_t v85 = (int16x8_t *)((char *)v84 + v57);
  *unint64_t v85 = vminq_s16((int16x8_t)vsqaddq_u16(v74, vrshrq_n_s16(v75, 4uLL)), v56);
  uint64_t v86 = (int16x8_t *)((char *)v85 + v57);
  *uint64_t v86 = vminq_s16((int16x8_t)vsqaddq_u16(v78, vrshrq_n_s16(v79, 4uLL)), v56);
  uint64_t v87 = (int16x8_t *)((char *)v86 + v57);
  *uint64_t v87 = vminq_s16((int16x8_t)vsqaddq_u16(v82, vrshrq_n_s16(v83, 4uLL)), v56);
  return (char *)v87 + v57;
}

char *sub_224A8905C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4, uint64_t (*a5)(void))
{
  uint64_t v6 = 4;
  int v7 = v5[1];
  if (a4 >= v5[2])
  {
    a3[3] = 0u;
    a3[7] = 0u;
    a3[11] = 0u;
    a3[15] = 0u;
    a3[19] = 0u;
    a3[23] = 0u;
    a3[27] = 0u;
    a3[31] = 0u;
    a1 = a5();
  }
  BOOL v8 = a4 < v7;
  int v9 = *v5;
  if (!v8)
  {
    a3[2] = 0u;
    uint64_t v10 = &a3[v6 + 2];
    _OWORD *v10 = 0u;
    int16x8_t v11 = &v10[v6];
    *int16x8_t v11 = 0u;
    int v12 = &v11[v6];
    *int v12 = 0u;
    int16x8_t v13 = &v12[v6];
    *int16x8_t v13 = 0u;
    int16x8_t v14 = &v13[v6];
    *int16x8_t v14 = 0u;
    uint16x8_t v15 = &v14[v6];
    *uint16x8_t v15 = 0u;
    v15[v6] = 0u;
    a1 = ((uint64_t (*)(uint64_t))a5)(a1);
  }
  if (a4 >= v9)
  {
    a3[1] = 0u;
    uint64_t v16 = &a3[v6 + 1];
    _OWORD *v16 = 0u;
    int16x8_t v17 = &v16[v6];
    *int16x8_t v17 = 0u;
    int16x8_t v18 = &v17[v6];
    *int16x8_t v18 = 0u;
    int16x8_t v19 = &v18[v6];
    *int16x8_t v19 = 0u;
    uint64_t v20 = &v19[v6];
    *uint64_t v20 = 0u;
    uint64_t v21 = &v20[v6];
    *uint64_t v21 = 0u;
    v21[v6] = 0u;
    a1 = ((uint64_t (*)(uint64_t))a5)(a1);
  }
  *a3 = 0u;
  uint64_t v22 = &a3[v6];
  *uint64_t v22 = 0u;
  int16x8_t v23 = &v22[v6];
  *int16x8_t v23 = 0u;
  int16x8_t v24 = &v23[v6];
  _OWORD *v24 = 0u;
  uint64_t v25 = &v24[v6];
  *uint64_t v25 = 0u;
  int16x8_t v26 = &v25[v6];
  *int16x8_t v26 = 0u;
  uint64_t v27 = &v26[v6];
  *uint64_t v27 = 0u;
  v27[v6] = 0u;
  uint64_t v28 = ((uint64_t (*)(uint64_t))a5)(a1);
  uint16x8_t v30 = (uint16x8_t *)v29(v28);
  v31.i64[0] = 0xFC00FC00FC00FC00;
  v31.i64[1] = 0xFC00FC00FC00FC00;
  int16x8_t v34 = (uint16x8_t *)((char *)v30 + v32 + v32);
  uint16x8_t v37 = *v34;
  uint16x8_t v36 = (uint16x8_t *)((char *)v34 + v32);
  uint16x8_t v40 = *v36;
  int16x8_t v39 = (uint16x8_t *)((char *)v36 + v32);
  int16x8_t v42 = vminq_s16((int16x8_t)vsqaddq_u16(*v30, vrshrq_n_s16(v33, 4uLL)), v31);
  uint16x8_t v44 = *v39;
  int16x8_t v43 = (uint16x8_t *)((char *)v39 + v32);
  int16x8_t v46 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)v30 + v32), vrshrq_n_s16(v35, 4uLL)), v31);
  uint16x8_t *v30 = (uint16x8_t)v42;
  int16x8_t v47 = (int16x8_t *)&v30->i8[v32];
  uint16x8_t v49 = *v43;
  uint64_t v48 = (uint16x8_t *)((char *)v43 + v32);
  int16x8_t v51 = vminq_s16((int16x8_t)vsqaddq_u16(v37, vrshrq_n_s16(v38, 4uLL)), v31);
  *int16x8_t v47 = v46;
  int16x8_t v52 = (int16x8_t *)((char *)v47 + v32);
  uint16x8_t v54 = *v48;
  int16x8_t v53 = (uint16x8_t *)((char *)v48 + v32);
  int16x8_t v56 = vminq_s16((int16x8_t)vsqaddq_u16(v40, vrshrq_n_s16(v41, 4uLL)), v31);
  *int16x8_t v52 = v51;
  uint64_t v57 = (int16x8_t *)((char *)v52 + v32);
  uint16x8_t v59 = *v53;
  int16x8_t v58 = (uint16x8_t *)((char *)v53 + v32);
  int16x8_t v61 = vminq_s16((int16x8_t)vsqaddq_u16(v44, vrshrq_n_s16(v45, 4uLL)), v31);
  *uint64_t v57 = v56;
  uint16x8_t v62 = (int16x8_t *)((char *)v57 + v32);
  uint16x8_t v64 = *v58;
  int16x8_t v63 = (uint16x8_t *)((char *)v58 + v32);
  int16x8_t v66 = vminq_s16((int16x8_t)vsqaddq_u16(v49, vrshrq_n_s16(v50, 4uLL)), v31);
  *uint16x8_t v62 = v61;
  int16x8_t v67 = (int16x8_t *)((char *)v62 + v32);
  uint16x8_t v69 = *v63;
  int16x8_t v68 = (uint16x8_t *)((char *)v63 + v32);
  int16x8_t v71 = vminq_s16((int16x8_t)vsqaddq_u16(v54, vrshrq_n_s16(v55, 4uLL)), v31);
  *int16x8_t v67 = v66;
  int16x8_t v72 = (int16x8_t *)((char *)v67 + v32);
  uint16x8_t v74 = *v68;
  int32x4_t v73 = (uint16x8_t *)((char *)v68 + v32);
  int16x8_t v76 = vminq_s16((int16x8_t)vsqaddq_u16(v59, vrshrq_n_s16(v60, 4uLL)), v31);
  int16x8_t *v72 = v71;
  int8x16_t v77 = (int16x8_t *)((char *)v72 + v32);
  uint16x8_t v79 = *v73;
  uint16x8_t v78 = (uint16x8_t *)((char *)v73 + v32);
  int16x8_t v81 = vminq_s16((int16x8_t)vsqaddq_u16(v64, vrshrq_n_s16(v65, 4uLL)), v31);
  *int8x16_t v77 = v76;
  uint16x8_t v82 = (int16x8_t *)((char *)v77 + v32);
  uint16x8_t v84 = *v78;
  int16x8_t v83 = (uint16x8_t *)((char *)v78 + v32);
  int16x8_t v86 = vminq_s16((int16x8_t)vsqaddq_u16(v69, vrshrq_n_s16(v70, 4uLL)), v31);
  *uint16x8_t v82 = v81;
  uint64_t v87 = (int16x8_t *)((char *)v82 + v32);
  uint16x8_t v89 = *v83;
  uint64_t v88 = (uint16x8_t *)((char *)v83 + v32);
  int16x8_t v91 = vminq_s16((int16x8_t)vsqaddq_u16(v74, vrshrq_n_s16(v75, 4uLL)), v31);
  *uint64_t v87 = v86;
  uint64_t v92 = (int16x8_t *)((char *)v87 + v32);
  uint16x8_t v93 = *v88;
  int16x8_t v95 = vminq_s16((int16x8_t)vsqaddq_u16(v79, vrshrq_n_s16(v80, 4uLL)), v31);
  *uint64_t v92 = v91;
  uint64_t v96 = (int16x8_t *)((char *)v92 + v32);
  uint16x8_t v97 = *(uint16x8_t *)((char *)v88 + v32);
  *uint64_t v96 = v95;
  uint64_t v99 = (int16x8_t *)((char *)v96 + v32);
  *uint64_t v99 = vminq_s16((int16x8_t)vsqaddq_u16(v84, vrshrq_n_s16(v85, 4uLL)), v31);
  uint64_t v100 = (int16x8_t *)((char *)v99 + v32);
  *uint64_t v100 = vminq_s16((int16x8_t)vsqaddq_u16(v89, vrshrq_n_s16(v90, 4uLL)), v31);
  uint64_t v101 = (int16x8_t *)((char *)v100 + v32);
  *uint64_t v101 = vminq_s16((int16x8_t)vsqaddq_u16(v93, vrshrq_n_s16(v94, 4uLL)), v31);
  uint64_t v102 = (int16x8_t *)((char *)v101 + v32);
  *uint64_t v102 = vminq_s16((int16x8_t)vsqaddq_u16(v97, vrshrq_n_s16(v98, 4uLL)), v31);
  return (char *)v102 + v32;
}

uint16x8_t *sub_224A89500(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4) {
    return (uint16x8_t *)sub_224A8905C((uint64_t)a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86430);
  }
  vld1q_dup_f32(a3);
  *a3 = 0.0;
  return sub_224A85F04(a1, a2, (uint64_t)a3, a4, 16);
}

char *sub_224A8954C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86864);
}

char *sub_224A89564(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86430);
}

char *sub_224A8957C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86430);
}

char *sub_224A89594(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86430);
}

char *sub_224A895AC(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86544);
}

char *sub_224A895C4(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86544);
}

char *sub_224A895DC(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86544);
}

char *sub_224A895F4(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A866D4);
}

char *sub_224A8960C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A866D4);
}

char *sub_224A89624(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A866D4);
}

char *sub_224A8963C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86864);
}

char *sub_224A89654(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86544);
}

char *sub_224A8966C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A866D4);
}

char *sub_224A89684(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86864);
}

char *sub_224A8969C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A8905C(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A86864);
}

uint16x8_t *sub_224A896B4(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4) {
    return (uint16x8_t *)sub_224A88BD0((uint64_t)a1, a2, a3, a4, (uint64_t (*)(void))sub_224A871F4);
  }
  vld1q_dup_f32(a3);
  *a3 = 0.0;
  return sub_224A85F58(a1, a2, (uint64_t)a3, a4, 8);
}

char *sub_224A89704(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87D80);
}

char *sub_224A89720(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A871F4);
}

char *sub_224A8973C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A871F4);
}

char *sub_224A89758(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A871F4);
}

char *sub_224A89774(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87524);
}

char *sub_224A89790(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87524);
}

char *sub_224A897AC(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87524);
}

char *sub_224A897C8(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8794C);
}

char *sub_224A897E4(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8794C);
}

char *sub_224A89800(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8794C);
}

char *sub_224A8981C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87D80);
}

char *sub_224A89838(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87524);
}

char *sub_224A89854(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A8794C);
}

char *sub_224A89870(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87D80);
}

char *sub_224A8988C(uint64_t a1, uint64_t a2, _OWORD *a3, int a4)
{
  return sub_224A88BD0(a1, a2, a3, a4, (uint64_t (*)(void))sub_224A87D80);
}

double sub_224A898A8()
{
  return 8.66459279e127;
}

int32x4_t sub_224A89D04@<Q0>(_OWORD *a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v2 = 2 * a2;
  *a1 = 0u;
  int8x16_t v3 = (_OWORD *)((char *)a1 + v2);
  _OWORD *v3 = 0u;
  uint64_t v4 = (_OWORD *)((char *)v3 + v2);
  _OWORD *v4 = 0u;
  int v5 = (_OWORD *)((char *)v4 + v2);
  _OWORD *v5 = 0u;
  uint64_t v6 = (_OWORD *)((char *)v5 + v2);
  _OWORD *v6 = 0u;
  int v7 = (_OWORD *)((char *)v6 + v2);
  _OWORD *v7 = 0u;
  BOOL v8 = (_OWORD *)((char *)v7 + v2);
  _OWORD *v8 = 0u;
  int v9 = (_OWORD *)((char *)v8 + v2);
  _OWORD *v9 = 0u;
  uint64_t v10 = (_OWORD *)((char *)v9 + v2);
  _OWORD *v10 = 0u;
  int16x8_t v11 = (_OWORD *)((char *)v10 + v2);
  *int16x8_t v11 = 0u;
  int v12 = (_OWORD *)((char *)v11 + v2);
  *int v12 = 0u;
  int16x8_t v13 = (_OWORD *)((char *)v12 + v2);
  *int16x8_t v13 = 0u;
  int16x8_t v14 = (_OWORD *)((char *)v13 + v2);
  *int16x8_t v14 = 0u;
  uint16x8_t v15 = (_OWORD *)((char *)v14 + v2);
  *uint16x8_t v15 = 0u;
  uint64_t v16 = (_OWORD *)((char *)v15 + v2);
  _OWORD *v16 = 0u;
  *(_OWORD *)((char *)v16 + v2) = 0u;
  sub_224A871F4();
  int32x4_t v35 = vmaxq_s32(vminq_s32(v18, v17), v34);
  int32x4_t v36 = vmaxq_s32(vminq_s32(v19, v17), v34);
  int32x4_t v37 = vmaxq_s32(vminq_s32(v20, v17), v34);
  int32x4_t v38 = vmaxq_s32(vminq_s32(v21, v17), v34);
  int32x4_t v39 = vmaxq_s32(vminq_s32(v22, v17), v34);
  int32x4_t v40 = vmaxq_s32(vminq_s32(v23, v17), v34);
  int32x4_t v41 = vmaxq_s32(vminq_s32(v24, v17), v34);
  int32x4_t v42 = vmaxq_s32(vminq_s32(v25, v17), v34);
  int32x4_t v43 = vmaxq_s32(vminq_s32(v26, v17), v34);
  int32x4_t v44 = vmaxq_s32(vminq_s32(v27, v17), v34);
  int32x4_t v45 = vmaxq_s32(vminq_s32(v28, v17), v34);
  int32x4_t v46 = vmaxq_s32(vminq_s32(v29, v17), v34);
  int32x4_t v47 = vmaxq_s32(vminq_s32(v30, v17), v34);
  int32x4_t v48 = vmaxq_s32(vminq_s32(v31, v17), v34);
  int32x4_t v49 = vmaxq_s32(vminq_s32(v32, v17), v34);
  int32x4_t v50 = vmaxq_s32(vminq_s32(v33, v17), v34);
  int64x2_t v51 = (int64x2_t)vtrn1q_s32(v35, v36);
  int64x2_t v52 = (int64x2_t)vtrn2q_s32(v35, v36);
  int64x2_t v53 = (int64x2_t)vtrn1q_s32(v37, v38);
  int64x2_t v54 = (int64x2_t)vtrn2q_s32(v37, v38);
  int64x2_t v55 = vtrn1q_s64(v51, v53);
  int64x2_t v56 = vtrn2q_s64(v51, v53);
  int64x2_t v57 = vtrn1q_s64(v52, v54);
  int64x2_t v58 = vtrn2q_s64(v52, v54);
  int64x2_t v59 = (int64x2_t)vtrn1q_s32(v39, v40);
  int64x2_t v60 = (int64x2_t)vtrn2q_s32(v39, v40);
  int64x2_t v61 = (int64x2_t)vtrn1q_s32(v41, v42);
  int64x2_t v62 = (int64x2_t)vtrn2q_s32(v41, v42);
  int64x2_t v63 = vtrn1q_s64(v59, v61);
  int64x2_t v64 = vtrn2q_s64(v59, v61);
  int64x2_t v65 = vtrn1q_s64(v60, v62);
  int64x2_t v66 = vtrn2q_s64(v60, v62);
  int64x2_t v67 = (int64x2_t)vtrn1q_s32(v43, v44);
  int64x2_t v68 = (int64x2_t)vtrn2q_s32(v43, v44);
  int64x2_t v69 = (int64x2_t)vtrn1q_s32(v45, v46);
  int64x2_t v70 = (int64x2_t)vtrn2q_s32(v45, v46);
  int64x2_t v71 = vtrn1q_s64(v67, v69);
  int64x2_t v72 = vtrn2q_s64(v67, v69);
  int64x2_t v73 = vtrn1q_s64(v68, v70);
  int64x2_t v74 = vtrn2q_s64(v68, v70);
  int64x2_t v75 = (int64x2_t)vtrn1q_s32(v47, v48);
  int64x2_t v76 = (int64x2_t)vtrn2q_s32(v47, v48);
  int64x2_t v77 = (int64x2_t)vtrn1q_s32(v49, v50);
  int64x2_t v78 = (int64x2_t)vtrn2q_s32(v49, v50);
  *v79++ = v55;
  *v79++ = v63;
  *v79++ = v71;
  *v79++ = vtrn1q_s64(v75, v77);
  *v79++ = v57;
  *v79++ = v65;
  *v79++ = v73;
  *v79++ = vtrn1q_s64(v76, v78);
  *v79++ = v56;
  *v79++ = v64;
  *v79++ = v72;
  *v79++ = vtrn2q_s64(v75, v77);
  *v79++ = v58;
  *v79++ = v66;
  *uint16x8_t v79 = v74;
  v79[1] = vtrn2q_s64(v76, v78);
  *int16x8_t v80 = 0u;
  uint16x8_t v82 = (_OWORD *)((char *)v80 + v81);
  *uint16x8_t v82 = 0u;
  int16x8_t v83 = (_OWORD *)((char *)v82 + v81);
  *int16x8_t v83 = 0u;
  uint16x8_t v84 = (_OWORD *)((char *)v83 + v81);
  *uint16x8_t v84 = 0u;
  int16x8_t v85 = (_OWORD *)((char *)v84 + v81);
  *int16x8_t v85 = 0u;
  int16x8_t v86 = (_OWORD *)((char *)v85 + v81);
  *int16x8_t v86 = 0u;
  uint64_t v87 = (_OWORD *)((char *)v86 + v81);
  *uint64_t v87 = 0u;
  uint64_t v88 = (_OWORD *)((char *)v87 + v81);
  *uint64_t v88 = 0u;
  uint16x8_t v89 = (_OWORD *)((char *)v88 + v81);
  *uint16x8_t v89 = 0u;
  int16x8_t v90 = (_OWORD *)((char *)v89 + v81);
  *int16x8_t v90 = 0u;
  int16x8_t v91 = (_OWORD *)((char *)v90 + v81);
  *int16x8_t v91 = 0u;
  uint64_t v92 = (_OWORD *)((char *)v91 + v81);
  *uint64_t v92 = 0u;
  uint16x8_t v93 = (_OWORD *)((char *)v92 + v81);
  *uint16x8_t v93 = 0u;
  int16x8_t v94 = (_OWORD *)((char *)v93 + v81);
  *int16x8_t v94 = 0u;
  int16x8_t v95 = (_OWORD *)((char *)v94 + v81);
  *int16x8_t v95 = 0u;
  *(_OWORD *)((char *)v95 + v81) = 0u;
  sub_224A898A8();
  int64x2_t v98 = (int64x2_t)vtrn1q_s32(v97, v96);
  int64x2_t v99 = (int64x2_t)vtrn2q_s32(v97, v96);
  int64x2_t v102 = (int64x2_t)vtrn1q_s32(v101, v100);
  int64x2_t v103 = (int64x2_t)vtrn2q_s32(v101, v100);
  int32x4_t v104 = (int32x4_t)vtrn1q_s64(v98, v102);
  int32x4_t v105 = (int32x4_t)vtrn2q_s64(v98, v102);
  int32x4_t v106 = (int32x4_t)vtrn1q_s64(v99, v103);
  int32x4_t v107 = (int32x4_t)vtrn2q_s64(v99, v103);
  int64x2_t v110 = (int64x2_t)vtrn1q_s32(v109, v108);
  int64x2_t v111 = (int64x2_t)vtrn2q_s32(v109, v108);
  int64x2_t v114 = (int64x2_t)vtrn1q_s32(v113, v112);
  int64x2_t v115 = (int64x2_t)vtrn2q_s32(v113, v112);
  int32x4_t v116 = (int32x4_t)vtrn1q_s64(v110, v114);
  int32x4_t v117 = (int32x4_t)vtrn2q_s64(v110, v114);
  int32x4_t v118 = (int32x4_t)vtrn1q_s64(v111, v115);
  int32x4_t v119 = (int32x4_t)vtrn2q_s64(v111, v115);
  int64x2_t v122 = (int64x2_t)vtrn1q_s32(v121, v120);
  int64x2_t v123 = (int64x2_t)vtrn2q_s32(v121, v120);
  int64x2_t v126 = (int64x2_t)vtrn1q_s32(v125, v124);
  int64x2_t v127 = (int64x2_t)vtrn2q_s32(v125, v124);
  int32x4_t v128 = (int32x4_t)vtrn1q_s64(v122, v126);
  int32x4_t v129 = (int32x4_t)vtrn2q_s64(v122, v126);
  int32x4_t v130 = (int32x4_t)vtrn1q_s64(v123, v127);
  int32x4_t v131 = (int32x4_t)vtrn2q_s64(v123, v127);
  int64x2_t v134 = (int64x2_t)vtrn1q_s32(v133, v132);
  int64x2_t v135 = (int64x2_t)vtrn2q_s32(v133, v132);
  int64x2_t v138 = (int64x2_t)vtrn1q_s32(v137, v136);
  int64x2_t v139 = (int64x2_t)vtrn2q_s32(v137, v136);
  int32x4_t v140 = (int32x4_t)vtrn1q_s64(v134, v138);
  int32x4_t v141 = (int32x4_t)vtrn2q_s64(v134, v138);
  int32x4_t v142 = (int32x4_t)vtrn1q_s64(v135, v139);
  int32x4_t v143 = (int32x4_t)vtrn2q_s64(v135, v139);
  int32x4_t v145 = v144[1];
  int32x4_t v146 = v144[2];
  int32x4_t v147 = v144[3];
  int32x4_t v148 = vqsubq_s32(v145, v116);
  int16x8_t v149 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(*v144, v104), 2uLL), vqaddq_s32(v145, v116), 2uLL);
  int16x8_t v150 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(v146, v128), 2uLL), vqaddq_s32(v147, v140), 2uLL);
  int16x8_t v151 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqsubq_s32(v147, v140), 2uLL), vqsubq_s32(v146, v128), 2uLL);
  int16x8_t v152 = vqrshrn_high_n_s32(vqrshrn_n_s32(v148, 2uLL), vqsubq_s32(*v144, v104), 2uLL);
  *int16x8_t v144 = (int32x4_t)v149;
  v144[1] = (int32x4_t)v150;
  v144 += 2;
  *(int16x8_t *)int16x8_t v144 = vrev64q_s16(v151);
  v144[1] = (int32x4_t)vrev64q_s16(v152);
  v144 += 2;
  int32x4_t v153 = v144[1];
  int32x4_t v154 = v144[2];
  int32x4_t v155 = v144[3];
  int32x4_t v156 = vqsubq_s32(v153, v118);
  int16x8_t v157 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(*v144, v106), 2uLL), vqaddq_s32(v153, v118), 2uLL);
  int16x8_t v158 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(v154, v130), 2uLL), vqaddq_s32(v155, v142), 2uLL);
  int16x8_t v159 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqsubq_s32(v155, v142), 2uLL), vqsubq_s32(v154, v130), 2uLL);
  int16x8_t v160 = vqrshrn_high_n_s32(vqrshrn_n_s32(v156, 2uLL), vqsubq_s32(*v144, v106), 2uLL);
  *int16x8_t v144 = (int32x4_t)v157;
  v144[1] = (int32x4_t)v158;
  v144 += 2;
  *(int16x8_t *)int16x8_t v144 = vrev64q_s16(v159);
  v144[1] = (int32x4_t)vrev64q_s16(v160);
  v144 += 2;
  int32x4_t v161 = v144[1];
  int32x4_t v162 = v144[2];
  int32x4_t v163 = v144[3];
  int32x4_t v164 = vqsubq_s32(v161, v117);
  int16x8_t v165 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(*v144, v105), 2uLL), vqaddq_s32(v161, v117), 2uLL);
  int16x8_t v166 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(v162, v129), 2uLL), vqaddq_s32(v163, v141), 2uLL);
  int16x8_t v167 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqsubq_s32(v163, v141), 2uLL), vqsubq_s32(v162, v129), 2uLL);
  int16x8_t v168 = vqrshrn_high_n_s32(vqrshrn_n_s32(v164, 2uLL), vqsubq_s32(*v144, v105), 2uLL);
  *int16x8_t v144 = (int32x4_t)v165;
  v144[1] = (int32x4_t)v166;
  v144 += 2;
  *(int16x8_t *)int16x8_t v144 = vrev64q_s16(v167);
  v144[1] = (int32x4_t)vrev64q_s16(v168);
  v144 += 2;
  int32x4_t v169 = v144[1];
  int32x4_t v170 = v144[2];
  int32x4_t v171 = v144[3];
  int32x4_t v172 = vqsubq_s32(v169, v119);
  int32x4_t result = (int32x4_t)vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(*v144, v107), 2uLL), vqaddq_s32(v169, v119), 2uLL);
  int16x8_t v174 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(v170, v131), 2uLL), vqaddq_s32(v171, v143), 2uLL);
  int16x8_t v175 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqsubq_s32(v171, v143), 2uLL), vqsubq_s32(v170, v131), 2uLL);
  int16x8_t v176 = vqrshrn_high_n_s32(vqrshrn_n_s32(v172, 2uLL), vqsubq_s32(*v144, v107), 2uLL);
  *int16x8_t v144 = result;
  v144[1] = (int32x4_t)v174;
  v144 += 2;
  *(int16x8_t *)int16x8_t v144 = vrev64q_s16(v175);
  v144[1] = (int32x4_t)vrev64q_s16(v176);
  return result;
}

int32x4_t sub_224A8A13C@<Q0>(_OWORD *a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v2 = 2 * a2;
  *a1 = 0u;
  int8x16_t v3 = (_OWORD *)((char *)a1 + v2);
  _OWORD *v3 = 0u;
  uint64_t v4 = (_OWORD *)((char *)v3 + v2);
  _OWORD *v4 = 0u;
  int v5 = (_OWORD *)((char *)v4 + v2);
  _OWORD *v5 = 0u;
  uint64_t v6 = (_OWORD *)((char *)v5 + v2);
  _OWORD *v6 = 0u;
  int v7 = (_OWORD *)((char *)v6 + v2);
  _OWORD *v7 = 0u;
  BOOL v8 = (_OWORD *)((char *)v7 + v2);
  _OWORD *v8 = 0u;
  int v9 = (_OWORD *)((char *)v8 + v2);
  _OWORD *v9 = 0u;
  uint64_t v10 = (_OWORD *)((char *)v9 + v2);
  _OWORD *v10 = 0u;
  int16x8_t v11 = (_OWORD *)((char *)v10 + v2);
  *int16x8_t v11 = 0u;
  int v12 = (_OWORD *)((char *)v11 + v2);
  *int v12 = 0u;
  int16x8_t v13 = (_OWORD *)((char *)v12 + v2);
  *int16x8_t v13 = 0u;
  int16x8_t v14 = (_OWORD *)((char *)v13 + v2);
  *int16x8_t v14 = 0u;
  uint16x8_t v15 = (_OWORD *)((char *)v14 + v2);
  *uint16x8_t v15 = 0u;
  uint64_t v16 = (_OWORD *)((char *)v15 + v2);
  _OWORD *v16 = 0u;
  *(_OWORD *)((char *)v16 + v2) = 0u;
  sub_224A871F4();
  int32x4_t v35 = vmaxq_s32(vminq_s32(v18, v17), v34);
  int32x4_t v36 = vmaxq_s32(vminq_s32(v19, v17), v34);
  int32x4_t v37 = vmaxq_s32(vminq_s32(v20, v17), v34);
  int32x4_t v38 = vmaxq_s32(vminq_s32(v21, v17), v34);
  int32x4_t v39 = vmaxq_s32(vminq_s32(v22, v17), v34);
  int32x4_t v40 = vmaxq_s32(vminq_s32(v23, v17), v34);
  int32x4_t v41 = vmaxq_s32(vminq_s32(v24, v17), v34);
  int32x4_t v42 = vmaxq_s32(vminq_s32(v25, v17), v34);
  int32x4_t v43 = vmaxq_s32(vminq_s32(v26, v17), v34);
  int32x4_t v44 = vmaxq_s32(vminq_s32(v27, v17), v34);
  int32x4_t v45 = vmaxq_s32(vminq_s32(v28, v17), v34);
  int32x4_t v46 = vmaxq_s32(vminq_s32(v29, v17), v34);
  int32x4_t v47 = vmaxq_s32(vminq_s32(v30, v17), v34);
  int32x4_t v48 = vmaxq_s32(vminq_s32(v31, v17), v34);
  int32x4_t v49 = vmaxq_s32(vminq_s32(v32, v17), v34);
  int32x4_t v50 = vmaxq_s32(vminq_s32(v33, v17), v34);
  int64x2_t v51 = (int64x2_t)vtrn1q_s32(v35, v36);
  int64x2_t v52 = (int64x2_t)vtrn2q_s32(v35, v36);
  int64x2_t v53 = (int64x2_t)vtrn1q_s32(v37, v38);
  int64x2_t v54 = (int64x2_t)vtrn2q_s32(v37, v38);
  int64x2_t v55 = vtrn1q_s64(v51, v53);
  int64x2_t v56 = vtrn2q_s64(v51, v53);
  int64x2_t v57 = vtrn1q_s64(v52, v54);
  int64x2_t v58 = vtrn2q_s64(v52, v54);
  int64x2_t v59 = (int64x2_t)vtrn1q_s32(v39, v40);
  int64x2_t v60 = (int64x2_t)vtrn2q_s32(v39, v40);
  int64x2_t v61 = (int64x2_t)vtrn1q_s32(v41, v42);
  int64x2_t v62 = (int64x2_t)vtrn2q_s32(v41, v42);
  int64x2_t v63 = vtrn1q_s64(v59, v61);
  int64x2_t v64 = vtrn2q_s64(v59, v61);
  int64x2_t v65 = vtrn1q_s64(v60, v62);
  int64x2_t v66 = vtrn2q_s64(v60, v62);
  int64x2_t v67 = (int64x2_t)vtrn1q_s32(v43, v44);
  int64x2_t v68 = (int64x2_t)vtrn2q_s32(v43, v44);
  int64x2_t v69 = (int64x2_t)vtrn1q_s32(v45, v46);
  int64x2_t v70 = (int64x2_t)vtrn2q_s32(v45, v46);
  int64x2_t v71 = vtrn1q_s64(v67, v69);
  int64x2_t v72 = vtrn2q_s64(v67, v69);
  int64x2_t v73 = vtrn1q_s64(v68, v70);
  int64x2_t v74 = vtrn2q_s64(v68, v70);
  int64x2_t v75 = (int64x2_t)vtrn1q_s32(v47, v48);
  int64x2_t v76 = (int64x2_t)vtrn2q_s32(v47, v48);
  int64x2_t v77 = (int64x2_t)vtrn1q_s32(v49, v50);
  int64x2_t v78 = (int64x2_t)vtrn2q_s32(v49, v50);
  *v79++ = v55;
  *v79++ = v63;
  *v79++ = v71;
  *v79++ = vtrn1q_s64(v75, v77);
  *v79++ = v57;
  *v79++ = v65;
  *v79++ = v73;
  *v79++ = vtrn1q_s64(v76, v78);
  *v79++ = v56;
  *v79++ = v64;
  *v79++ = v72;
  *v79++ = vtrn2q_s64(v75, v77);
  *v79++ = v58;
  *v79++ = v66;
  *uint16x8_t v79 = v74;
  v79[1] = vtrn2q_s64(v76, v78);
  *int16x8_t v80 = 0u;
  uint16x8_t v82 = (_OWORD *)((char *)v80 + v81);
  *uint16x8_t v82 = 0u;
  int16x8_t v83 = (_OWORD *)((char *)v82 + v81);
  *int16x8_t v83 = 0u;
  uint16x8_t v84 = (_OWORD *)((char *)v83 + v81);
  *uint16x8_t v84 = 0u;
  int16x8_t v85 = (_OWORD *)((char *)v84 + v81);
  *int16x8_t v85 = 0u;
  int16x8_t v86 = (_OWORD *)((char *)v85 + v81);
  *int16x8_t v86 = 0u;
  uint64_t v87 = (_OWORD *)((char *)v86 + v81);
  *uint64_t v87 = 0u;
  uint64_t v88 = (_OWORD *)((char *)v87 + v81);
  *uint64_t v88 = 0u;
  uint16x8_t v89 = (_OWORD *)((char *)v88 + v81);
  *uint16x8_t v89 = 0u;
  int16x8_t v90 = (_OWORD *)((char *)v89 + v81);
  *int16x8_t v90 = 0u;
  int16x8_t v91 = (_OWORD *)((char *)v90 + v81);
  *int16x8_t v91 = 0u;
  uint64_t v92 = (_OWORD *)((char *)v91 + v81);
  *uint64_t v92 = 0u;
  uint16x8_t v93 = (_OWORD *)((char *)v92 + v81);
  *uint16x8_t v93 = 0u;
  int16x8_t v94 = (_OWORD *)((char *)v93 + v81);
  *int16x8_t v94 = 0u;
  int16x8_t v95 = (_OWORD *)((char *)v94 + v81);
  *int16x8_t v95 = 0u;
  *(_OWORD *)((char *)v95 + v81) = 0u;
  sub_224A898A8();
  int64x2_t v98 = (int64x2_t)vtrn1q_s32(v97, v96);
  int64x2_t v99 = (int64x2_t)vtrn2q_s32(v97, v96);
  int64x2_t v102 = (int64x2_t)vtrn1q_s32(v101, v100);
  int64x2_t v103 = (int64x2_t)vtrn2q_s32(v101, v100);
  int32x4_t v104 = (int32x4_t)vtrn1q_s64(v98, v102);
  int32x4_t v105 = (int32x4_t)vtrn2q_s64(v98, v102);
  int32x4_t v106 = (int32x4_t)vtrn1q_s64(v99, v103);
  int32x4_t v107 = (int32x4_t)vtrn2q_s64(v99, v103);
  int64x2_t v110 = (int64x2_t)vtrn1q_s32(v109, v108);
  int64x2_t v111 = (int64x2_t)vtrn2q_s32(v109, v108);
  int64x2_t v114 = (int64x2_t)vtrn1q_s32(v113, v112);
  int64x2_t v115 = (int64x2_t)vtrn2q_s32(v113, v112);
  int32x4_t v116 = (int32x4_t)vtrn1q_s64(v110, v114);
  int32x4_t v117 = (int32x4_t)vtrn2q_s64(v110, v114);
  int32x4_t v118 = (int32x4_t)vtrn1q_s64(v111, v115);
  int32x4_t v119 = (int32x4_t)vtrn2q_s64(v111, v115);
  int64x2_t v122 = (int64x2_t)vtrn1q_s32(v121, v120);
  int64x2_t v123 = (int64x2_t)vtrn2q_s32(v121, v120);
  int64x2_t v126 = (int64x2_t)vtrn1q_s32(v125, v124);
  int64x2_t v127 = (int64x2_t)vtrn2q_s32(v125, v124);
  int32x4_t v128 = (int32x4_t)vtrn1q_s64(v122, v126);
  int32x4_t v129 = (int32x4_t)vtrn2q_s64(v122, v126);
  int32x4_t v130 = (int32x4_t)vtrn1q_s64(v123, v127);
  int32x4_t v131 = (int32x4_t)vtrn2q_s64(v123, v127);
  int64x2_t v134 = (int64x2_t)vtrn1q_s32(v133, v132);
  int64x2_t v135 = (int64x2_t)vtrn2q_s32(v133, v132);
  int64x2_t v138 = (int64x2_t)vtrn1q_s32(v137, v136);
  int64x2_t v139 = (int64x2_t)vtrn2q_s32(v137, v136);
  int32x4_t v140 = (int32x4_t)vtrn1q_s64(v134, v138);
  int32x4_t v141 = (int32x4_t)vtrn2q_s64(v134, v138);
  int32x4_t v142 = (int32x4_t)vtrn1q_s64(v135, v139);
  int32x4_t v143 = (int32x4_t)vtrn2q_s64(v135, v139);
  int32x4_t v145 = v144[1];
  int32x4_t v146 = v144[2];
  int32x4_t v147 = v144[3];
  int32x4_t v148 = vqsubq_s32(v145, v116);
  int16x8_t v149 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(*v144, v104), 1uLL), vqaddq_s32(v145, v116), 1uLL);
  int16x8_t v150 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(v146, v128), 1uLL), vqaddq_s32(v147, v140), 1uLL);
  int16x8_t v151 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqsubq_s32(v147, v140), 1uLL), vqsubq_s32(v146, v128), 1uLL);
  int16x8_t v152 = vqrshrn_high_n_s32(vqrshrn_n_s32(v148, 1uLL), vqsubq_s32(*v144, v104), 1uLL);
  *int16x8_t v144 = (int32x4_t)v149;
  v144[1] = (int32x4_t)v150;
  v144 += 2;
  *(int16x8_t *)int16x8_t v144 = vrev64q_s16(v151);
  v144[1] = (int32x4_t)vrev64q_s16(v152);
  v144 += 2;
  int32x4_t v153 = v144[1];
  int32x4_t v154 = v144[2];
  int32x4_t v155 = v144[3];
  int32x4_t v156 = vqsubq_s32(v153, v118);
  int16x8_t v157 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(*v144, v106), 1uLL), vqaddq_s32(v153, v118), 1uLL);
  int16x8_t v158 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(v154, v130), 1uLL), vqaddq_s32(v155, v142), 1uLL);
  int16x8_t v159 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqsubq_s32(v155, v142), 1uLL), vqsubq_s32(v154, v130), 1uLL);
  int16x8_t v160 = vqrshrn_high_n_s32(vqrshrn_n_s32(v156, 1uLL), vqsubq_s32(*v144, v106), 1uLL);
  *int16x8_t v144 = (int32x4_t)v157;
  v144[1] = (int32x4_t)v158;
  v144 += 2;
  *(int16x8_t *)int16x8_t v144 = vrev64q_s16(v159);
  v144[1] = (int32x4_t)vrev64q_s16(v160);
  v144 += 2;
  int32x4_t v161 = v144[1];
  int32x4_t v162 = v144[2];
  int32x4_t v163 = v144[3];
  int32x4_t v164 = vqsubq_s32(v161, v117);
  int16x8_t v165 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(*v144, v105), 1uLL), vqaddq_s32(v161, v117), 1uLL);
  int16x8_t v166 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(v162, v129), 1uLL), vqaddq_s32(v163, v141), 1uLL);
  int16x8_t v167 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqsubq_s32(v163, v141), 1uLL), vqsubq_s32(v162, v129), 1uLL);
  int16x8_t v168 = vqrshrn_high_n_s32(vqrshrn_n_s32(v164, 1uLL), vqsubq_s32(*v144, v105), 1uLL);
  *int16x8_t v144 = (int32x4_t)v165;
  v144[1] = (int32x4_t)v166;
  v144 += 2;
  *(int16x8_t *)int16x8_t v144 = vrev64q_s16(v167);
  v144[1] = (int32x4_t)vrev64q_s16(v168);
  v144 += 2;
  int32x4_t v169 = v144[1];
  int32x4_t v170 = v144[2];
  int32x4_t v171 = v144[3];
  int32x4_t v172 = vqsubq_s32(v169, v119);
  int32x4_t result = (int32x4_t)vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(*v144, v107), 1uLL), vqaddq_s32(v169, v119), 1uLL);
  int16x8_t v174 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqaddq_s32(v170, v131), 1uLL), vqaddq_s32(v171, v143), 1uLL);
  int16x8_t v175 = vqrshrn_high_n_s32(vqrshrn_n_s32(vqsubq_s32(v171, v143), 1uLL), vqsubq_s32(v170, v131), 1uLL);
  int16x8_t v176 = vqrshrn_high_n_s32(vqrshrn_n_s32(v172, 1uLL), vqsubq_s32(*v144, v107), 1uLL);
  *int16x8_t v144 = result;
  v144[1] = (int32x4_t)v174;
  v144 += 2;
  *(int16x8_t *)int16x8_t v144 = vrev64q_s16(v175);
  v144[1] = (int32x4_t)vrev64q_s16(v176);
  return result;
}

void sub_224A8A5FC()
{
  sub_224A79AA0();
  *int8x16_t v0 = v2;
  int8x16_t v3 = (_OWORD *)((char *)v0 + v1);
  _OWORD *v3 = v4;
  int v5 = (_OWORD *)((char *)v3 + v1);
  _OWORD *v5 = v6;
  int v7 = (_OWORD *)((char *)v5 + v1);
  _OWORD *v7 = v8;
  int v9 = (_OWORD *)((char *)v7 + v1);
  _OWORD *v9 = v10;
  int16x8_t v11 = (_OWORD *)((char *)v9 + v1);
  *int16x8_t v11 = v12;
  int16x8_t v13 = (_OWORD *)((char *)v11 + v1);
  *int16x8_t v13 = v14;
  uint16x8_t v15 = (_OWORD *)((char *)v13 + v1);
  *uint16x8_t v15 = v16;
  int32x4_t v17 = (_OWORD *)((char *)v15 + v1);
  *int32x4_t v17 = v18;
  int32x4_t v19 = (_OWORD *)((char *)v17 + v1);
  *int32x4_t v19 = v20;
  int32x4_t v21 = (_OWORD *)((char *)v19 + v1);
  *int32x4_t v21 = v22;
  int32x4_t v23 = (_OWORD *)((char *)v21 + v1);
  *int32x4_t v23 = v24;
  int32x4_t v25 = (_OWORD *)((char *)v23 + v1);
  *int32x4_t v25 = v26;
  int32x4_t v27 = (_OWORD *)((char *)v25 + v1);
  *int32x4_t v27 = v28;
  int32x4_t v29 = (_OWORD *)((char *)v27 + v1);
  *int32x4_t v29 = v30;
  *(_OWORD *)((char *)v29 + v1) = v31;
  sub_224A7CC14();
  v32.i64[0] = 0xFC00FC00FC00FC00;
  v32.i64[1] = 0xFC00FC00FC00FC00;
  int16x8_t v36 = *v33;
  int32x4_t v35 = (int16x8_t *)((char *)v33 + v34);
  int16x8_t v40 = *v35;
  int32x4_t v39 = (int16x8_t *)((char *)v35 + v34);
  int32x4_t v41 = (uint16x8_t *)((char *)v38 + v37 + v37);
  int16x8_t v44 = *v39;
  int32x4_t v43 = (int16x8_t *)((char *)v39 + v34);
  uint16x8_t v46 = *v41;
  int32x4_t v45 = (uint16x8_t *)((char *)v41 + v37);
  int16x8_t v48 = (int16x8_t)vsqaddq_u16(*v38, vrshrq_n_s16(vqaddq_s16(v36, v42), 4uLL));
  int16x8_t v51 = *v43;
  int32x4_t v50 = (int16x8_t *)((char *)v43 + v34);
  int16x8_t v52 = (int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)v38 + v37), vrshrq_n_s16(vqaddq_s16(v40, v47), 4uLL));
  *(int16x8_t *)int32x4_t v38 = vminq_s16(v48, v32);
  int64x2_t v54 = (int16x8_t *)&v38->i8[v37];
  uint16x8_t v56 = *v45;
  int64x2_t v55 = (uint16x8_t *)((char *)v45 + v37);
  *int64x2_t v54 = vminq_s16(v52, v32);
  int64x2_t v57 = (int16x8_t *)((char *)v54 + v37);
  *int64x2_t v57 = vminq_s16((int16x8_t)vsqaddq_u16(v46, vrshrq_n_s16(vqaddq_s16(v44, v49), 4uLL)), v32);
  int64x2_t v58 = (int16x8_t *)((char *)v57 + v37);
  int16x8_t *v58 = vminq_s16((int16x8_t)vsqaddq_u16(v56, vrshrq_n_s16(vqaddq_s16(v51, v53), 4uLL)), v32);
  int64x2_t v59 = (int16x8_t *)((char *)v58 + v37);
  int16x8_t v61 = *v50;
  int64x2_t v60 = (int16x8_t *)((char *)v50 + v34);
  uint16x8_t v63 = *v55;
  int64x2_t v62 = (uint16x8_t *)((char *)v55 + v37);
  int16x8_t v65 = *v60;
  int64x2_t v64 = (int16x8_t *)((char *)v60 + v34);
  uint16x8_t v67 = *v62;
  int64x2_t v66 = (uint16x8_t *)((char *)v62 + v37);
  int16x8_t v70 = *v64;
  int64x2_t v69 = (int16x8_t *)((char *)v64 + v34);
  uint16x8_t v72 = *v66;
  int64x2_t v71 = (uint16x8_t *)((char *)v66 + v37);
  int16x8_t v74 = (int16x8_t)vsqaddq_u16(v63, vrshrq_n_s16(vqaddq_s16(v61, v68), 4uLL));
  int16x8_t v77 = *v69;
  int64x2_t v76 = (int16x8_t *)((char *)v69 + v34);
  *int64x2_t v59 = vminq_s16(v74, v32);
  uint16x8_t v79 = (int16x8_t *)((char *)v59 + v37);
  uint16x8_t v81 = *v71;
  int16x8_t v80 = (uint16x8_t *)((char *)v71 + v37);
  *uint16x8_t v79 = vminq_s16((int16x8_t)vsqaddq_u16(v67, vrshrq_n_s16(vqaddq_s16(v65, v73), 4uLL)), v32);
  uint16x8_t v82 = (int16x8_t *)((char *)v79 + v37);
  *uint16x8_t v82 = vminq_s16((int16x8_t)vsqaddq_u16(v72, vrshrq_n_s16(vqaddq_s16(v70, v75), 4uLL)), v32);
  int16x8_t v83 = (int16x8_t *)((char *)v82 + v37);
  *int16x8_t v83 = vminq_s16((int16x8_t)vsqaddq_u16(v81, vrshrq_n_s16(vqaddq_s16(v77, v78), 4uLL)), v32);
  uint16x8_t v84 = (int16x8_t *)((char *)v83 + v37);
  int16x8_t v86 = *v76;
  int16x8_t v85 = (int16x8_t *)((char *)v76 + v34);
  uint16x8_t v88 = *v80;
  uint64_t v87 = (uint16x8_t *)((char *)v80 + v37);
  int16x8_t v90 = *v85;
  uint16x8_t v89 = (int16x8_t *)((char *)v85 + v34);
  uint16x8_t v92 = *v87;
  int16x8_t v91 = (uint16x8_t *)((char *)v87 + v37);
  int16x8_t v95 = *v89;
  int16x8_t v94 = (int16x8_t *)((char *)v89 + v34);
  uint16x8_t v97 = *v91;
  int32x4_t v96 = (uint16x8_t *)((char *)v91 + v37);
  int16x8_t v99 = (int16x8_t)vsqaddq_u16(v88, vrshrq_n_s16(vqaddq_s16(v86, v93), 4uLL));
  int16x8_t v102 = *v94;
  int32x4_t v101 = (int16x8_t *)((char *)v94 + v34);
  *uint16x8_t v84 = vminq_s16(v99, v32);
  int32x4_t v104 = (int16x8_t *)((char *)v84 + v37);
  uint16x8_t v106 = *v96;
  int32x4_t v105 = (uint16x8_t *)((char *)v96 + v37);
  *int32x4_t v104 = vminq_s16((int16x8_t)vsqaddq_u16(v92, vrshrq_n_s16(vqaddq_s16(v90, v98), 4uLL)), v32);
  int32x4_t v107 = (int16x8_t *)((char *)v104 + v37);
  *int32x4_t v107 = vminq_s16((int16x8_t)vsqaddq_u16(v97, vrshrq_n_s16(vqaddq_s16(v95, v100), 4uLL)), v32);
  int32x4_t v108 = (int16x8_t *)((char *)v107 + v37);
  *int32x4_t v108 = vminq_s16((int16x8_t)vsqaddq_u16(v106, vrshrq_n_s16(vqaddq_s16(v102, v103), 4uLL)), v32);
  int32x4_t v109 = (int16x8_t *)((char *)v108 + v37);
  int16x8_t v111 = *v101;
  int64x2_t v110 = (int16x8_t *)((char *)v101 + v34);
  uint16x8_t v113 = *v105;
  int32x4_t v112 = (uint16x8_t *)((char *)v105 + v37);
  int16x8_t v115 = *v110;
  int64x2_t v114 = (int16x8_t *)((char *)v110 + v34);
  uint16x8_t v117 = *v112;
  int32x4_t v116 = (uint16x8_t *)((char *)v112 + v37);
  int16x8_t v120 = *v114;
  int32x4_t v119 = (int16x8_t *)((char *)v114 + v34);
  uint16x8_t v122 = *v116;
  int32x4_t v121 = (uint16x8_t *)((char *)v116 + v37);
  int16x8_t v125 = vminq_s16((int16x8_t)vsqaddq_u16(v113, vrshrq_n_s16(vqaddq_s16(v111, v118), 4uLL)), v32);
  int16x8_t v127 = vqaddq_s16(*v119, v126);
  *int32x4_t v109 = v125;
  int32x4_t v128 = (int16x8_t *)((char *)v109 + v37);
  uint16x8_t v130 = *v121;
  int32x4_t v129 = (uint16x8_t *)((char *)v121 + v37);
  *int32x4_t v128 = vminq_s16((int16x8_t)vsqaddq_u16(v117, vrshrq_n_s16(vqaddq_s16(v115, v123), 4uLL)), v32);
  int32x4_t v131 = (int16x8_t *)((char *)v128 + v37);
  *int32x4_t v131 = vminq_s16((int16x8_t)vsqaddq_u16(v122, vrshrq_n_s16(vqaddq_s16(v120, v124), 4uLL)), v32);
  int32x4_t v132 = (int16x8_t *)((char *)v131 + v37);
  *int32x4_t v132 = vminq_s16((int16x8_t)vsqaddq_u16(v130, vrshrq_n_s16(v127, 4uLL)), v32);
  int32x4_t v133 = (int16x8_t *)((char *)v132 + v37);
  int16x8_t v135 = *v119;
  int64x2_t v134 = (int16x8_t *)((char *)v119 - v34);
  uint16x8_t v137 = *v129;
  int32x4_t v136 = (uint16x8_t *)((char *)v129 + v37);
  int16x8_t v139 = *v134;
  int64x2_t v138 = (int16x8_t *)((char *)v134 - v34);
  uint16x8_t v141 = *v136;
  int32x4_t v140 = (uint16x8_t *)((char *)v136 + v37);
  int16x8_t v143 = *v138;
  int32x4_t v142 = (int16x8_t *)((char *)v138 - v34);
  uint16x8_t v145 = *v140;
  int16x8_t v144 = (uint16x8_t *)((char *)v140 + v37);
  int16x8_t v146 = (int16x8_t)vsqaddq_u16(v137, vrshrq_n_s16(vqsubq_s16(v135, v126), 4uLL));
  int16x8_t v148 = *v142;
  int32x4_t v147 = (int16x8_t *)((char *)v142 - v34);
  *int32x4_t v133 = vminq_s16(v146, v32);
  int16x8_t v149 = (int16x8_t *)((char *)v133 + v37);
  uint16x8_t v151 = *v144;
  int16x8_t v150 = (uint16x8_t *)((char *)v144 + v37);
  *int16x8_t v149 = vminq_s16((int16x8_t)vsqaddq_u16(v141, vrshrq_n_s16(vqsubq_s16(v139, v124), 4uLL)), v32);
  int16x8_t v152 = (int16x8_t *)((char *)v149 + v37);
  *int16x8_t v152 = vminq_s16((int16x8_t)vsqaddq_u16(v145, vrshrq_n_s16(vqsubq_s16(v143, v123), 4uLL)), v32);
  int32x4_t v153 = (int16x8_t *)((char *)v152 + v37);
  *int32x4_t v153 = vminq_s16((int16x8_t)vsqaddq_u16(v151, vrshrq_n_s16(vqsubq_s16(v148, v118), 4uLL)), v32);
  int32x4_t v154 = (int16x8_t *)((char *)v153 + v37);
  int16x8_t v156 = *v147;
  int32x4_t v155 = (int16x8_t *)((char *)v147 - v34);
  uint16x8_t v158 = *v150;
  int16x8_t v157 = (uint16x8_t *)((char *)v150 + v37);
  int16x8_t v160 = *v155;
  int16x8_t v159 = (int16x8_t *)((char *)v155 - v34);
  uint16x8_t v162 = *v157;
  int32x4_t v161 = (uint16x8_t *)((char *)v157 + v37);
  int16x8_t v164 = *v159;
  int32x4_t v163 = (int16x8_t *)((char *)v159 - v34);
  uint16x8_t v166 = *v161;
  int16x8_t v165 = (uint16x8_t *)((char *)v161 + v37);
  int16x8_t v167 = (int16x8_t)vsqaddq_u16(v158, vrshrq_n_s16(vqsubq_s16(v156, v103), 4uLL));
  int16x8_t v169 = *v163;
  int16x8_t v168 = (int16x8_t *)((char *)v163 - v34);
  int16x8_t *v154 = vminq_s16(v167, v32);
  int32x4_t v170 = (int16x8_t *)((char *)v154 + v37);
  uint16x8_t v172 = *v165;
  int32x4_t v171 = (uint16x8_t *)((char *)v165 + v37);
  *int32x4_t v170 = vminq_s16((int16x8_t)vsqaddq_u16(v162, vrshrq_n_s16(vqsubq_s16(v160, v100), 4uLL)), v32);
  int16x8_t v173 = (int16x8_t *)((char *)v170 + v37);
  *int16x8_t v173 = vminq_s16((int16x8_t)vsqaddq_u16(v166, vrshrq_n_s16(vqsubq_s16(v164, v98), 4uLL)), v32);
  int16x8_t v174 = (int16x8_t *)((char *)v173 + v37);
  *int16x8_t v174 = vminq_s16((int16x8_t)vsqaddq_u16(v172, vrshrq_n_s16(vqsubq_s16(v169, v93), 4uLL)), v32);
  int16x8_t v175 = (int16x8_t *)((char *)v174 + v37);
  int16x8_t v177 = *v168;
  int16x8_t v176 = (int16x8_t *)((char *)v168 - v34);
  uint16x8_t v179 = *v171;
  uint8x8_t v178 = (uint16x8_t *)((char *)v171 + v37);
  int16x8_t v181 = *v176;
  int16x8_t v180 = (int16x8_t *)((char *)v176 - v34);
  uint16x8_t v183 = *v178;
  uint8x8_t v182 = (uint16x8_t *)((char *)v178 + v37);
  int16x8_t v185 = *v180;
  int16x8_t v184 = (int16x8_t *)((char *)v180 - v34);
  uint16x8_t v187 = *v182;
  uint8x8_t v186 = (uint16x8_t *)((char *)v182 + v37);
  int16x8_t v188 = (int16x8_t)vsqaddq_u16(v179, vrshrq_n_s16(vqsubq_s16(v177, v78), 4uLL));
  int16x8_t v190 = *v184;
  int16x8_t v189 = (int16x8_t *)((char *)v184 - v34);
  *int16x8_t v175 = vminq_s16(v188, v32);
  v191 = (int16x8_t *)((char *)v175 + v37);
  uint16x8_t v193 = *v186;
  uint8x8_t v192 = (uint16x8_t *)((char *)v186 + v37);
  int16x8_t *v191 = vminq_s16((int16x8_t)vsqaddq_u16(v183, vrshrq_n_s16(vqsubq_s16(v181, v75), 4uLL)), v32);
  v194 = (int16x8_t *)((char *)v191 + v37);
  int16x8_t *v194 = vminq_s16((int16x8_t)vsqaddq_u16(v187, vrshrq_n_s16(vqsubq_s16(v185, v73), 4uLL)), v32);
  v195 = (int16x8_t *)((char *)v194 + v37);
  int16x8_t *v195 = vminq_s16((int16x8_t)vsqaddq_u16(v193, vrshrq_n_s16(vqsubq_s16(v190, v68), 4uLL)), v32);
  v196 = (int16x8_t *)((char *)v195 + v37);
  int16x8_t v198 = *v189;
  int16x8_t v197 = (int16x8_t *)((char *)v189 - v34);
  uint16x8_t v200 = *v192;
  uint8x8_t v199 = (uint16x8_t *)((char *)v192 + v37);
  int16x8_t v202 = *v197;
  int16x8_t v201 = (int16x8_t *)((char *)v197 - v34);
  uint16x8_t v204 = *v199;
  uint8x8_t v203 = (uint16x8_t *)((char *)v199 + v37);
  int16x8_t v205 = *v201;
  uint16x8_t v206 = *v203;
  int16x8_t v207 = (int16x8_t)vsqaddq_u16(v200, vrshrq_n_s16(vqsubq_s16(v198, v53), 4uLL));
  int16x8_t v208 = *(int16x8_t *)((char *)v201 - v34);
  int16x8_t *v196 = vminq_s16(v207, v32);
  uint8x8_t v209 = (int16x8_t *)((char *)v196 + v37);
  uint16x8_t v210 = *(uint16x8_t *)((char *)v203 + v37);
  *uint8x8_t v209 = vminq_s16((int16x8_t)vsqaddq_u16(v204, vrshrq_n_s16(vqsubq_s16(v202, v49), 4uLL)), v32);
  v211 = (int16x8_t *)((char *)v209 + v37);
  int16x8_t *v211 = vminq_s16((int16x8_t)vsqaddq_u16(v206, vrshrq_n_s16(vqsubq_s16(v205, v47), 4uLL)), v32);
  *(int16x8_t *)((char *)v211 + v37) = vminq_s16((int16x8_t)vsqaddq_u16(v210, vrshrq_n_s16(vqsubq_s16(v208, v42), 4uLL)), v32);
}

uint16x8_t *sub_224A8AA74(uint16x8_t *result, uint64_t a2, _OWORD *a3, int a4)
{
  long long v4 = &aN_0[1];
  while (1)
  {
    LODWORD(v5) = 0;
    long long v6 = &aN_0[1];
    do
    {
      uint64_t v5 = (v5 + 8);
      int32x4_t v7 = *(int32x4_t *)a3;
      int32x4_t v8 = *((int32x4_t *)a3 + 1);
      *a3 = 0uLL;
      a3[1] = 0uLL;
      int v9 = a3 + 8;
      int32x4_t v10 = *(int32x4_t *)v9;
      int32x4_t v11 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 8;
      int32x4_t v12 = *(int32x4_t *)v9;
      int32x4_t v13 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 8;
      int32x4_t v14 = *(int32x4_t *)v9;
      int32x4_t v15 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 8;
      int32x4_t v16 = *(int32x4_t *)v9;
      int32x4_t v17 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 8;
      int32x4_t v18 = *(int32x4_t *)v9;
      int32x4_t v19 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 8;
      int32x4_t v20 = *(int32x4_t *)v9;
      int32x4_t v21 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 8;
      int32x4_t v22 = *(int32x4_t *)v9;
      int32x4_t v23 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      a3 = v9 + 8;
      int16x8_t v24 = vqmovn_high_s32(vqmovn_s32(v7), v8);
      int16x8_t v25 = vqmovn_high_s32(vqmovn_s32(v10), v11);
      int16x8_t v26 = vqmovn_high_s32(vqmovn_s32(v12), v13);
      int16x8_t v27 = vqmovn_high_s32(vqmovn_s32(v14), v15);
      int16x8_t v28 = vqmovn_high_s32(vqmovn_s32(v16), v17);
      int16x8_t v29 = vqmovn_high_s32(vqmovn_s32(v18), v19);
      int16x8_t v30 = vqmovn_high_s32(vqmovn_s32(v20), v21);
      int16x8_t v31 = vqmovn_high_s32(vqmovn_s32(v22), v23);
      int32x4_t v32 = (int32x4_t)vtrn1q_s16(v24, v25);
      int32x4_t v33 = (int32x4_t)vtrn2q_s16(v24, v25);
      int32x4_t v34 = (int32x4_t)vtrn1q_s16(v26, v27);
      int32x4_t v35 = (int32x4_t)vtrn2q_s16(v26, v27);
      int32x4_t v36 = (int32x4_t)vtrn1q_s16(v28, v29);
      int32x4_t v37 = (int32x4_t)vtrn2q_s16(v28, v29);
      int32x4_t v38 = (int32x4_t)vtrn1q_s16(v30, v31);
      int32x4_t v39 = (int32x4_t)vtrn2q_s16(v30, v31);
      int64x2_t v40 = (int64x2_t)vtrn1q_s32(v36, v38);
      int64x2_t v41 = (int64x2_t)vtrn2q_s32(v36, v38);
      int64x2_t v42 = (int64x2_t)vtrn1q_s32(v37, v39);
      int64x2_t v43 = (int64x2_t)vtrn2q_s32(v37, v39);
      int64x2_t v44 = (int64x2_t)vtrn1q_s32(v33, v35);
      int64x2_t v45 = (int64x2_t)vtrn2q_s32(v33, v35);
      int64x2_t v46 = (int64x2_t)vtrn1q_s32(v32, v34);
      int64x2_t v47 = (int64x2_t)vtrn2q_s32(v32, v34);
      int16x8_t v48 = (int16x8_t)vtrn1q_s64(v46, v40);
      int16x8_t v49 = (int16x8_t)vtrn2q_s64(v46, v40);
      int16x8_t v50 = (int16x8_t)vtrn1q_s64(v44, v42);
      int16x8_t v51 = (int16x8_t)vtrn2q_s64(v44, v42);
      int16x8_t v52 = (int16x8_t)vtrn2q_s64(v47, v41);
      int16x8_t v53 = (int16x8_t)vtrn1q_s64(v47, v41);
      int16x8_t v54 = (int16x8_t)vtrn1q_s64(v45, v43);
      int16x8_t v55 = (int16x8_t)vtrn2q_s64(v45, v43);
      v56.i64[0] = 0xFC00FC00FC00FC00;
      v56.i64[1] = 0xFC00FC00FC00FC00;
      int64x2_t v57 = (uint16x8_t *)((char *)result + a2 + a2);
      uint16x8_t v59 = *v57;
      int64x2_t v58 = (uint16x8_t *)((char *)v57 + a2);
      uint16x8_t v61 = *v58;
      int64x2_t v60 = (uint16x8_t *)((char *)v58 + a2);
      int16x8_t v62 = vminq_s16((int16x8_t)vsqaddq_u16(*result, vrshrq_n_s16(v48, 2uLL)), v56);
      uint16x8_t v64 = *v60;
      uint16x8_t v63 = (uint16x8_t *)((char *)v60 + a2);
      int16x8_t v65 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)result + a2), vrshrq_n_s16(v50, 2uLL)), v56);
      *int32x4_t result = (uint16x8_t)v62;
      int64x2_t v66 = (int16x8_t *)&result->i8[a2];
      uint16x8_t v68 = *v63;
      uint16x8_t v67 = (uint16x8_t *)((char *)v63 + a2);
      int16x8_t v69 = vminq_s16((int16x8_t)vsqaddq_u16(v59, vrshrq_n_s16(v53, 2uLL)), v56);
      *int64x2_t v66 = v65;
      int16x8_t v70 = (int16x8_t *)((char *)v66 + a2);
      uint16x8_t v71 = *v67;
      int16x8_t v72 = vminq_s16((int16x8_t)vsqaddq_u16(v61, vrshrq_n_s16(v54, 2uLL)), v56);
      int16x8_t *v70 = v69;
      int16x8_t v73 = (int16x8_t *)((char *)v70 + a2);
      uint16x8_t v74 = *(uint16x8_t *)((char *)v67 + a2);
      *int16x8_t v73 = v72;
      int16x8_t v75 = (int16x8_t *)((char *)v73 + a2);
      int16x8_t *v75 = vminq_s16((int16x8_t)vsqaddq_u16(v64, vrshrq_n_s16(v49, 2uLL)), v56);
      int64x2_t v76 = (int16x8_t *)((char *)v75 + a2);
      *int64x2_t v76 = vminq_s16((int16x8_t)vsqaddq_u16(v68, vrshrq_n_s16(v51, 2uLL)), v56);
      int16x8_t v77 = (int16x8_t *)((char *)v76 + a2);
      *int16x8_t v77 = vminq_s16((int16x8_t)vsqaddq_u16(v71, vrshrq_n_s16(v52, 2uLL)), v56);
      int16x8_t v78 = (int16x8_t *)((char *)v77 + a2);
      *int16x8_t v78 = vminq_s16((int16x8_t)vsqaddq_u16(v74, vrshrq_n_s16(v55, 2uLL)), v56);
      int v79 = (unsigned __int16)*v6;
      v6 += 2;
      int32x4_t result = (uint16x8_t *)&v78[1].i8[a2 + -8 * a2];
    }
    while (a4 >= v79);
    int v80 = (unsigned __int16)*v4;
    v4 += 2;
    if (a4 < v80) {
      break;
    }
    int32x4_t result = (uint16x8_t *)((char *)result + 8 * a2 + -2 * v5);
    a3 = &a3[-8 * v5 + 2];
  }
  return result;
}

uint16x8_t *sub_224A8AC58(uint16x8_t *result, uint64_t a2, _OWORD *a3, int a4)
{
  long long v4 = &aN_1[1];
  while (1)
  {
    LODWORD(v5) = 0;
    long long v6 = &word_2646ED402;
    do
    {
      uint64_t v5 = (v5 + 8);
      int32x4_t v7 = *(int32x4_t *)a3;
      int32x4_t v8 = *((int32x4_t *)a3 + 1);
      *a3 = 0uLL;
      a3[1] = 0uLL;
      int v9 = a3 + 8;
      v10.i32[0] = vdup_n_s32(0x5A800000u).u32[0];
      int32x4_t v11 = *(int32x4_t *)v9;
      int32x4_t v12 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 8;
      v10.i32[1] = 1779433472;
      int32x4_t v13 = *(int32x4_t *)v9;
      int32x4_t v14 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 8;
      int32x4_t v15 = *(int32x4_t *)v9;
      int32x4_t v16 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 8;
      int32x4_t v17 = *(int32x4_t *)v9;
      int32x4_t v18 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 8;
      int32x4_t v19 = *(int32x4_t *)v9;
      int32x4_t v20 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 8;
      int32x4_t v21 = *(int32x4_t *)v9;
      int32x4_t v22 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 8;
      int32x4_t v23 = *(int32x4_t *)v9;
      int32x4_t v24 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      a3 = v9 + 8;
      int32x4_t v25 = vqrdmulhq_lane_s32(v7, v10, 0);
      int32x4_t v26 = vqrdmulhq_lane_s32(v8, v10, 0);
      int32x4_t v27 = vqrdmulhq_lane_s32(v11, v10, 0);
      int32x4_t v28 = vqrdmulhq_lane_s32(v12, v10, 0);
      int32x4_t v29 = vqrdmulhq_lane_s32(v13, v10, 0);
      int32x4_t v30 = vqrdmulhq_lane_s32(v14, v10, 0);
      int32x4_t v31 = vqrdmulhq_lane_s32(v15, v10, 0);
      int32x4_t v32 = vqrdmulhq_lane_s32(v16, v10, 0);
      int32x4_t v33 = vqrdmulhq_lane_s32(v17, v10, 0);
      int32x4_t v34 = vqrdmulhq_lane_s32(v18, v10, 0);
      int32x4_t v35 = vqrdmulhq_lane_s32(v19, v10, 0);
      int32x4_t v36 = vqrdmulhq_lane_s32(v20, v10, 0);
      int32x4_t v37 = vqrdmulhq_lane_s32(v21, v10, 0);
      int32x4_t v38 = vqrdmulhq_lane_s32(v22, v10, 0);
      int32x4_t v39 = vqrdmulhq_lane_s32(v23, v10, 0);
      int32x4_t v40 = vqrdmulhq_lane_s32(v24, v10, 0);
      int16x8_t v41 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(v25, vrshrq_n_s32(vqrdmulhq_lane_s32(v25, v10, 1), 1uLL))), vqaddq_s32(v26, vrshrq_n_s32(vqrdmulhq_lane_s32(v26, v10, 1), 1uLL)));
      int16x8_t v42 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(v27, vrshrq_n_s32(vqrdmulhq_lane_s32(v27, v10, 1), 1uLL))), vqaddq_s32(v28, vrshrq_n_s32(vqrdmulhq_lane_s32(v28, v10, 1), 1uLL)));
      int16x8_t v43 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(v29, vrshrq_n_s32(vqrdmulhq_lane_s32(v29, v10, 1), 1uLL))), vqaddq_s32(v30, vrshrq_n_s32(vqrdmulhq_lane_s32(v30, v10, 1), 1uLL)));
      int16x8_t v44 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(v31, vrshrq_n_s32(vqrdmulhq_lane_s32(v31, v10, 1), 1uLL))), vqaddq_s32(v32, vrshrq_n_s32(vqrdmulhq_lane_s32(v32, v10, 1), 1uLL)));
      int16x8_t v45 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(v33, vrshrq_n_s32(vqrdmulhq_lane_s32(v33, v10, 1), 1uLL))), vqaddq_s32(v34, vrshrq_n_s32(vqrdmulhq_lane_s32(v34, v10, 1), 1uLL)));
      int16x8_t v46 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(v35, vrshrq_n_s32(vqrdmulhq_lane_s32(v35, v10, 1), 1uLL))), vqaddq_s32(v36, vrshrq_n_s32(vqrdmulhq_lane_s32(v36, v10, 1), 1uLL)));
      int16x8_t v47 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(v37, vrshrq_n_s32(vqrdmulhq_lane_s32(v37, v10, 1), 1uLL))), vqaddq_s32(v38, vrshrq_n_s32(vqrdmulhq_lane_s32(v38, v10, 1), 1uLL)));
      int16x8_t v48 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(v39, vrshrq_n_s32(vqrdmulhq_lane_s32(v39, v10, 1), 1uLL))), vqaddq_s32(v40, vrshrq_n_s32(vqrdmulhq_lane_s32(v40, v10, 1), 1uLL)));
      int32x4_t v49 = (int32x4_t)vtrn1q_s16(v41, v42);
      int32x4_t v50 = (int32x4_t)vtrn2q_s16(v41, v42);
      int32x4_t v51 = (int32x4_t)vtrn1q_s16(v43, v44);
      int32x4_t v52 = (int32x4_t)vtrn2q_s16(v43, v44);
      int32x4_t v53 = (int32x4_t)vtrn1q_s16(v45, v46);
      int32x4_t v54 = (int32x4_t)vtrn2q_s16(v45, v46);
      int32x4_t v55 = (int32x4_t)vtrn1q_s16(v47, v48);
      int32x4_t v56 = (int32x4_t)vtrn2q_s16(v47, v48);
      int64x2_t v57 = (int64x2_t)vtrn1q_s32(v53, v55);
      int64x2_t v58 = (int64x2_t)vtrn2q_s32(v53, v55);
      int64x2_t v59 = (int64x2_t)vtrn1q_s32(v54, v56);
      int64x2_t v60 = (int64x2_t)vtrn2q_s32(v54, v56);
      int64x2_t v61 = (int64x2_t)vtrn1q_s32(v50, v52);
      int64x2_t v62 = (int64x2_t)vtrn2q_s32(v50, v52);
      int64x2_t v63 = (int64x2_t)vtrn1q_s32(v49, v51);
      int64x2_t v64 = (int64x2_t)vtrn2q_s32(v49, v51);
      int16x8_t v65 = (int16x8_t)vtrn1q_s64(v63, v57);
      int16x8_t v66 = (int16x8_t)vtrn2q_s64(v63, v57);
      int16x8_t v67 = (int16x8_t)vtrn1q_s64(v61, v59);
      int16x8_t v68 = (int16x8_t)vtrn2q_s64(v61, v59);
      int16x8_t v69 = (int16x8_t)vtrn2q_s64(v64, v58);
      int16x8_t v70 = (int16x8_t)vtrn1q_s64(v64, v58);
      int16x8_t v71 = (int16x8_t)vtrn1q_s64(v62, v60);
      int16x8_t v72 = (int16x8_t)vtrn2q_s64(v62, v60);
      v73.i64[0] = 0xFC00FC00FC00FC00;
      v73.i64[1] = 0xFC00FC00FC00FC00;
      uint16x8_t v74 = (uint16x8_t *)((char *)result + a2 + a2);
      uint16x8_t v76 = *v74;
      int16x8_t v75 = (uint16x8_t *)((char *)v74 + a2);
      uint16x8_t v78 = *v75;
      int16x8_t v77 = (uint16x8_t *)((char *)v75 + a2);
      int16x8_t v79 = vminq_s16((int16x8_t)vsqaddq_u16(*result, vrshrq_n_s16(v65, 2uLL)), v73);
      uint16x8_t v81 = *v77;
      int v80 = (uint16x8_t *)((char *)v77 + a2);
      int16x8_t v82 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)result + a2), vrshrq_n_s16(v67, 2uLL)), v73);
      *int32x4_t result = (uint16x8_t)v79;
      int16x8_t v83 = (int16x8_t *)&result->i8[a2];
      uint16x8_t v85 = *v80;
      uint16x8_t v84 = (uint16x8_t *)((char *)v80 + a2);
      int16x8_t v86 = vminq_s16((int16x8_t)vsqaddq_u16(v76, vrshrq_n_s16(v70, 2uLL)), v73);
      *int16x8_t v83 = v82;
      uint64_t v87 = (int16x8_t *)((char *)v83 + a2);
      uint16x8_t v88 = *v84;
      int16x8_t v89 = vminq_s16((int16x8_t)vsqaddq_u16(v78, vrshrq_n_s16(v71, 2uLL)), v73);
      *uint64_t v87 = v86;
      int16x8_t v90 = (int16x8_t *)((char *)v87 + a2);
      uint16x8_t v91 = *(uint16x8_t *)((char *)v84 + a2);
      *int16x8_t v90 = v89;
      uint16x8_t v92 = (int16x8_t *)((char *)v90 + a2);
      *uint16x8_t v92 = vminq_s16((int16x8_t)vsqaddq_u16(v81, vrshrq_n_s16(v66, 2uLL)), v73);
      int16x8_t v93 = (int16x8_t *)((char *)v92 + a2);
      *int16x8_t v93 = vminq_s16((int16x8_t)vsqaddq_u16(v85, vrshrq_n_s16(v68, 2uLL)), v73);
      int16x8_t v94 = (int16x8_t *)((char *)v93 + a2);
      *int16x8_t v94 = vminq_s16((int16x8_t)vsqaddq_u16(v88, vrshrq_n_s16(v69, 2uLL)), v73);
      int16x8_t v95 = (int16x8_t *)((char *)v94 + a2);
      *int16x8_t v95 = vminq_s16((int16x8_t)vsqaddq_u16(v91, vrshrq_n_s16(v72, 2uLL)), v73);
      int v96 = (unsigned __int16)*v6;
      v6 += 2;
      int32x4_t result = (uint16x8_t *)&v95[1].i8[a2 + -8 * a2];
    }
    while (a4 >= v96);
    int v97 = (unsigned __int16)*v4;
    v4 += 2;
    if (a4 < v97) {
      break;
    }
    int32x4_t result = (uint16x8_t *)((char *)result + 8 * a2 + -2 * v5);
    a3 = &a3[-8 * v5 + 2];
  }
  return result;
}

uint16x8_t *sub_224A8AF4C(uint16x8_t *result, uint64_t a2, _OWORD *a3, int a4)
{
  long long v4 = &word_2646ED402;
  while (1)
  {
    LODWORD(v5) = 0;
    long long v6 = &aN_1[1];
    do
    {
      uint64_t v5 = (v5 + 8);
      int32x4_t v7 = *(int32x4_t *)a3;
      int32x4_t v8 = *((int32x4_t *)a3 + 1);
      *a3 = 0uLL;
      a3[1] = 0uLL;
      int v9 = a3 + 4;
      v10.i32[0] = vdup_n_s32(0x5A800000u).u32[0];
      int32x4_t v11 = *(int32x4_t *)v9;
      int32x4_t v12 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 4;
      v10.i32[1] = 1779433472;
      int32x4_t v13 = *(int32x4_t *)v9;
      int32x4_t v14 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 4;
      int32x4_t v15 = *(int32x4_t *)v9;
      int32x4_t v16 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 4;
      int32x4_t v17 = *(int32x4_t *)v9;
      int32x4_t v18 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 4;
      int32x4_t v19 = *(int32x4_t *)v9;
      int32x4_t v20 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 4;
      int32x4_t v21 = *(int32x4_t *)v9;
      int32x4_t v22 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      v9 += 4;
      int32x4_t v23 = *(int32x4_t *)v9;
      int32x4_t v24 = *((int32x4_t *)v9 + 1);
      _OWORD *v9 = 0uLL;
      v9[1] = 0uLL;
      a3 = v9 + 4;
      int32x4_t v25 = vqshlq_n_s32(vqrdmulhq_lane_s32(v7, v10, 0), 1uLL);
      int32x4_t v26 = vqshlq_n_s32(vqrdmulhq_lane_s32(v8, v10, 0), 1uLL);
      int32x4_t v27 = vqshlq_n_s32(vqrdmulhq_lane_s32(v11, v10, 0), 1uLL);
      int32x4_t v28 = vqshlq_n_s32(vqrdmulhq_lane_s32(v12, v10, 0), 1uLL);
      int32x4_t v29 = vqshlq_n_s32(vqrdmulhq_lane_s32(v13, v10, 0), 1uLL);
      int32x4_t v30 = vqshlq_n_s32(vqrdmulhq_lane_s32(v14, v10, 0), 1uLL);
      int32x4_t v31 = vqshlq_n_s32(vqrdmulhq_lane_s32(v15, v10, 0), 1uLL);
      int32x4_t v32 = vqshlq_n_s32(vqrdmulhq_lane_s32(v16, v10, 0), 1uLL);
      int32x4_t v33 = vqshlq_n_s32(vqrdmulhq_lane_s32(v17, v10, 0), 1uLL);
      int32x4_t v34 = vqshlq_n_s32(vqrdmulhq_lane_s32(v18, v10, 0), 1uLL);
      int32x4_t v35 = vqshlq_n_s32(vqrdmulhq_lane_s32(v19, v10, 0), 1uLL);
      int32x4_t v36 = vqshlq_n_s32(vqrdmulhq_lane_s32(v20, v10, 0), 1uLL);
      int32x4_t v37 = vqshlq_n_s32(vqrdmulhq_lane_s32(v21, v10, 0), 1uLL);
      int32x4_t v38 = vqshlq_n_s32(vqrdmulhq_lane_s32(v22, v10, 0), 1uLL);
      int32x4_t v39 = vqshlq_n_s32(vqrdmulhq_lane_s32(v23, v10, 0), 1uLL);
      int32x4_t v40 = vqshlq_n_s32(vqrdmulhq_lane_s32(v24, v10, 0), 1uLL);
      int16x8_t v41 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(vqaddq_s32(v25, v25), vqrdmulhq_lane_s32(v25, v10, 1))), vqaddq_s32(vqaddq_s32(v26, v26), vqrdmulhq_lane_s32(v26, v10, 1)));
      int16x8_t v42 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(vqaddq_s32(v27, v27), vqrdmulhq_lane_s32(v27, v10, 1))), vqaddq_s32(vqaddq_s32(v28, v28), vqrdmulhq_lane_s32(v28, v10, 1)));
      int16x8_t v43 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(vqaddq_s32(v29, v29), vqrdmulhq_lane_s32(v29, v10, 1))), vqaddq_s32(vqaddq_s32(v30, v30), vqrdmulhq_lane_s32(v30, v10, 1)));
      int16x8_t v44 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(vqaddq_s32(v31, v31), vqrdmulhq_lane_s32(v31, v10, 1))), vqaddq_s32(vqaddq_s32(v32, v32), vqrdmulhq_lane_s32(v32, v10, 1)));
      int16x8_t v45 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(vqaddq_s32(v33, v33), vqrdmulhq_lane_s32(v33, v10, 1))), vqaddq_s32(vqaddq_s32(v34, v34), vqrdmulhq_lane_s32(v34, v10, 1)));
      int16x8_t v46 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(vqaddq_s32(v35, v35), vqrdmulhq_lane_s32(v35, v10, 1))), vqaddq_s32(vqaddq_s32(v36, v36), vqrdmulhq_lane_s32(v36, v10, 1)));
      int16x8_t v47 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(vqaddq_s32(v37, v37), vqrdmulhq_lane_s32(v37, v10, 1))), vqaddq_s32(vqaddq_s32(v38, v38), vqrdmulhq_lane_s32(v38, v10, 1)));
      int16x8_t v48 = vqmovn_high_s32(vqmovn_s32(vqaddq_s32(vqaddq_s32(v39, v39), vqrdmulhq_lane_s32(v39, v10, 1))), vqaddq_s32(vqaddq_s32(v40, v40), vqrdmulhq_lane_s32(v40, v10, 1)));
      int32x4_t v49 = (int32x4_t)vtrn1q_s16(v41, v42);
      int32x4_t v50 = (int32x4_t)vtrn2q_s16(v41, v42);
      int32x4_t v51 = (int32x4_t)vtrn1q_s16(v43, v44);
      int32x4_t v52 = (int32x4_t)vtrn2q_s16(v43, v44);
      int32x4_t v53 = (int32x4_t)vtrn1q_s16(v45, v46);
      int32x4_t v54 = (int32x4_t)vtrn2q_s16(v45, v46);
      int32x4_t v55 = (int32x4_t)vtrn1q_s16(v47, v48);
      int32x4_t v56 = (int32x4_t)vtrn2q_s16(v47, v48);
      int64x2_t v57 = (int64x2_t)vtrn1q_s32(v53, v55);
      int64x2_t v58 = (int64x2_t)vtrn2q_s32(v53, v55);
      int64x2_t v59 = (int64x2_t)vtrn1q_s32(v54, v56);
      int64x2_t v60 = (int64x2_t)vtrn2q_s32(v54, v56);
      int64x2_t v61 = (int64x2_t)vtrn1q_s32(v50, v52);
      int64x2_t v62 = (int64x2_t)vtrn2q_s32(v50, v52);
      int64x2_t v63 = (int64x2_t)vtrn1q_s32(v49, v51);
      int64x2_t v64 = (int64x2_t)vtrn2q_s32(v49, v51);
      int16x8_t v65 = (int16x8_t)vtrn1q_s64(v63, v57);
      int16x8_t v66 = (int16x8_t)vtrn2q_s64(v63, v57);
      int16x8_t v67 = (int16x8_t)vtrn1q_s64(v61, v59);
      int16x8_t v68 = (int16x8_t)vtrn2q_s64(v61, v59);
      int16x8_t v69 = (int16x8_t)vtrn2q_s64(v64, v58);
      int16x8_t v70 = (int16x8_t)vtrn1q_s64(v64, v58);
      int16x8_t v71 = (int16x8_t)vtrn1q_s64(v62, v60);
      int16x8_t v72 = (int16x8_t)vtrn2q_s64(v62, v60);
      v73.i64[0] = 0xFC00FC00FC00FC00;
      v73.i64[1] = 0xFC00FC00FC00FC00;
      uint16x8_t v74 = (uint16x8_t *)((char *)result + a2 + a2);
      uint16x8_t v76 = *v74;
      int16x8_t v75 = (uint16x8_t *)((char *)v74 + a2);
      uint16x8_t v78 = *v75;
      int16x8_t v77 = (uint16x8_t *)((char *)v75 + a2);
      int16x8_t v79 = vminq_s16((int16x8_t)vsqaddq_u16(*result, vrshrq_n_s16(v65, 4uLL)), v73);
      uint16x8_t v81 = *v77;
      int v80 = (uint16x8_t *)((char *)v77 + a2);
      int16x8_t v82 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)result + a2), vrshrq_n_s16(v67, 4uLL)), v73);
      *int32x4_t result = (uint16x8_t)v79;
      int16x8_t v83 = (int16x8_t *)&result->i8[a2];
      uint16x8_t v85 = *v80;
      uint16x8_t v84 = (uint16x8_t *)((char *)v80 + a2);
      int16x8_t v86 = vminq_s16((int16x8_t)vsqaddq_u16(v76, vrshrq_n_s16(v70, 4uLL)), v73);
      *int16x8_t v83 = v82;
      uint64_t v87 = (int16x8_t *)((char *)v83 + a2);
      uint16x8_t v88 = *v84;
      int16x8_t v89 = vminq_s16((int16x8_t)vsqaddq_u16(v78, vrshrq_n_s16(v71, 4uLL)), v73);
      *uint64_t v87 = v86;
      int16x8_t v90 = (int16x8_t *)((char *)v87 + a2);
      uint16x8_t v91 = *(uint16x8_t *)((char *)v84 + a2);
      *int16x8_t v90 = v89;
      uint16x8_t v92 = (int16x8_t *)((char *)v90 + a2);
      *uint16x8_t v92 = vminq_s16((int16x8_t)vsqaddq_u16(v81, vrshrq_n_s16(v66, 4uLL)), v73);
      int16x8_t v93 = (int16x8_t *)((char *)v92 + a2);
      *int16x8_t v93 = vminq_s16((int16x8_t)vsqaddq_u16(v85, vrshrq_n_s16(v68, 4uLL)), v73);
      int16x8_t v94 = (int16x8_t *)((char *)v93 + a2);
      *int16x8_t v94 = vminq_s16((int16x8_t)vsqaddq_u16(v88, vrshrq_n_s16(v69, 4uLL)), v73);
      int16x8_t v95 = (int16x8_t *)((char *)v94 + a2);
      *int16x8_t v95 = vminq_s16((int16x8_t)vsqaddq_u16(v91, vrshrq_n_s16(v72, 4uLL)), v73);
      int v96 = (unsigned __int16)*v6;
      v6 += 2;
      int32x4_t result = (uint16x8_t *)&v95[1].i8[a2 + -8 * a2];
    }
    while (a4 >= v96);
    int v97 = (unsigned __int16)*v4;
    v4 += 2;
    if (a4 < v97) {
      break;
    }
    int32x4_t result = (uint16x8_t *)((char *)result + 8 * a2 + -2 * v5);
    a3 = &a3[-4 * v5 + 2];
  }
  return result;
}

uint16x8_t *sub_224A8B280(uint16x8_t *result, uint64_t a2, int32x4_t *a3, int a4)
{
  long long v4 = &aKk[1];
  while (1)
  {
    int v5 = (unsigned __int16)*v4;
    v4 += 2;
    int32x4_t v6 = *a3;
    int32x4_t v7 = a3[1];
    *a3 = 0uLL;
    a3[1] = 0uLL;
    int32x4_t v8 = a3 + 8;
    int32x4_t v9 = *v8;
    int32x4_t v10 = v8[1];
    int32x4_t *v8 = 0uLL;
    v8[1] = 0uLL;
    v8 += 8;
    int32x4_t v11 = *v8;
    int32x4_t v12 = v8[1];
    int32x4_t *v8 = 0uLL;
    v8[1] = 0uLL;
    v8 += 8;
    int32x4_t v13 = *v8;
    int32x4_t v14 = v8[1];
    int32x4_t *v8 = 0uLL;
    v8[1] = 0uLL;
    v8 += 8;
    int32x4_t v15 = *v8;
    int32x4_t v16 = v8[1];
    int32x4_t *v8 = 0uLL;
    v8[1] = 0uLL;
    v8 += 8;
    int32x4_t v17 = *v8;
    int32x4_t v18 = v8[1];
    int32x4_t *v8 = 0uLL;
    v8[1] = 0uLL;
    v8 += 8;
    int32x4_t v19 = *v8;
    int32x4_t v20 = v8[1];
    int32x4_t *v8 = 0uLL;
    v8[1] = 0uLL;
    v8 += 8;
    int32x4_t v21 = *v8;
    int32x4_t v22 = v8[1];
    int32x4_t *v8 = 0uLL;
    v8[1] = 0uLL;
    int32x4_t v23 = v8 + 8;
    int16x8_t v24 = vqrshrn_high_n_s32(vqrshrn_n_s32(v6, 1uLL), v7, 1uLL);
    int16x8_t v25 = vqrshrn_high_n_s32(vqrshrn_n_s32(v9, 1uLL), v10, 1uLL);
    int16x8_t v26 = vqrshrn_high_n_s32(vqrshrn_n_s32(v11, 1uLL), v12, 1uLL);
    int16x8_t v27 = vqrshrn_high_n_s32(vqrshrn_n_s32(v13, 1uLL), v14, 1uLL);
    int16x8_t v28 = vqrshrn_high_n_s32(vqrshrn_n_s32(v15, 1uLL), v16, 1uLL);
    int16x8_t v29 = vqrshrn_high_n_s32(vqrshrn_n_s32(v17, 1uLL), v18, 1uLL);
    int16x8_t v30 = vqrshrn_high_n_s32(vqrshrn_n_s32(v19, 1uLL), v20, 1uLL);
    int16x8_t v31 = vqrshrn_high_n_s32(vqrshrn_n_s32(v21, 1uLL), v22, 1uLL);
    int32x4_t v32 = (int32x4_t)vtrn1q_s16(v24, v25);
    int32x4_t v33 = (int32x4_t)vtrn2q_s16(v24, v25);
    int32x4_t v34 = (int32x4_t)vtrn1q_s16(v26, v27);
    int32x4_t v35 = (int32x4_t)vtrn2q_s16(v26, v27);
    int32x4_t v36 = (int32x4_t)vtrn1q_s16(v28, v29);
    int32x4_t v37 = (int32x4_t)vtrn2q_s16(v28, v29);
    int32x4_t v38 = (int32x4_t)vtrn1q_s16(v30, v31);
    int32x4_t v39 = (int32x4_t)vtrn2q_s16(v30, v31);
    int64x2_t v40 = (int64x2_t)vtrn1q_s32(v36, v38);
    int64x2_t v41 = (int64x2_t)vtrn2q_s32(v36, v38);
    int64x2_t v42 = (int64x2_t)vtrn1q_s32(v37, v39);
    int64x2_t v43 = (int64x2_t)vtrn2q_s32(v37, v39);
    int64x2_t v44 = (int64x2_t)vtrn1q_s32(v33, v35);
    int64x2_t v45 = (int64x2_t)vtrn2q_s32(v33, v35);
    int64x2_t v46 = (int64x2_t)vtrn1q_s32(v32, v34);
    int64x2_t v47 = (int64x2_t)vtrn2q_s32(v32, v34);
    int16x8_t v48 = (int16x8_t)vtrn1q_s64(v46, v40);
    int16x8_t v49 = (int16x8_t)vtrn2q_s64(v46, v40);
    int16x8_t v50 = (int16x8_t)vtrn1q_s64(v44, v42);
    int16x8_t v51 = (int16x8_t)vtrn2q_s64(v44, v42);
    int16x8_t v52 = (int16x8_t)vtrn2q_s64(v47, v41);
    int16x8_t v53 = (int16x8_t)vtrn1q_s64(v47, v41);
    int16x8_t v54 = (int16x8_t)vtrn1q_s64(v45, v43);
    int16x8_t v55 = (int16x8_t)vtrn2q_s64(v45, v43);
    v56.i64[0] = 0xFC00FC00FC00FC00;
    v56.i64[1] = 0xFC00FC00FC00FC00;
    int64x2_t v57 = (uint16x8_t *)((char *)result + a2 + a2);
    uint16x8_t v59 = *v57;
    int64x2_t v58 = (uint16x8_t *)((char *)v57 + a2);
    uint16x8_t v61 = *v58;
    int64x2_t v60 = (uint16x8_t *)((char *)v58 + a2);
    int16x8_t v62 = vminq_s16((int16x8_t)vsqaddq_u16(*result, vrshrq_n_s16(v48, 2uLL)), v56);
    uint16x8_t v64 = *v60;
    int64x2_t v63 = (uint16x8_t *)((char *)v60 + a2);
    int16x8_t v65 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)result + a2), vrshrq_n_s16(v50, 2uLL)), v56);
    *int32x4_t result = (uint16x8_t)v62;
    int16x8_t v66 = (int16x8_t *)&result->i8[a2];
    uint16x8_t v68 = *v63;
    int16x8_t v67 = (uint16x8_t *)((char *)v63 + a2);
    int16x8_t v69 = vminq_s16((int16x8_t)vsqaddq_u16(v59, vrshrq_n_s16(v53, 2uLL)), v56);
    *int16x8_t v66 = v65;
    int16x8_t v70 = (int16x8_t *)((char *)v66 + a2);
    uint16x8_t v71 = *v67;
    int16x8_t v72 = vminq_s16((int16x8_t)vsqaddq_u16(v61, vrshrq_n_s16(v54, 2uLL)), v56);
    int16x8_t *v70 = v69;
    int16x8_t v73 = (int16x8_t *)((char *)v70 + a2);
    uint16x8_t v74 = *(uint16x8_t *)((char *)v67 + a2);
    *int16x8_t v73 = v72;
    int16x8_t v75 = (int16x8_t *)((char *)v73 + a2);
    int16x8_t *v75 = vminq_s16((int16x8_t)vsqaddq_u16(v64, vrshrq_n_s16(v49, 2uLL)), v56);
    uint16x8_t v76 = (int16x8_t *)((char *)v75 + a2);
    *uint16x8_t v76 = vminq_s16((int16x8_t)vsqaddq_u16(v68, vrshrq_n_s16(v51, 2uLL)), v56);
    int16x8_t v77 = (int16x8_t *)((char *)v76 + a2);
    *int16x8_t v77 = vminq_s16((int16x8_t)vsqaddq_u16(v71, vrshrq_n_s16(v52, 2uLL)), v56);
    uint16x8_t v78 = (int16x8_t *)((char *)v77 + a2);
    *uint16x8_t v78 = vminq_s16((int16x8_t)vsqaddq_u16(v74, vrshrq_n_s16(v55, 2uLL)), v56);
    int32x4_t result = (uint16x8_t *)&v78->i8[a2];
    if (a4 < v5) {
      break;
    }
    a3 = v23 - 62;
  }
  return result;
}

__int8 *sub_224A8B438(uint16x8_t *a1, uint64_t a2, _OWORD *a3, int a4)
{
  long long v4 = &aKk[1];
  while (1)
  {
    int v5 = (unsigned __int16)*v4;
    v4 += 2;
    int32x4_t v6 = *(int32x4_t *)a3;
    int32x4_t v7 = *((int32x4_t *)a3 + 1);
    *a3 = 0uLL;
    a3[1] = 0uLL;
    int32x4_t v8 = a3 + 2;
    int32x4_t v9 = *(int32x4_t *)v8;
    int32x4_t v10 = *((int32x4_t *)v8 + 1);
    _OWORD *v8 = 0uLL;
    v8[1] = 0uLL;
    v8 += 2;
    int32x4_t v11 = *(int32x4_t *)v8;
    int32x4_t v12 = *((int32x4_t *)v8 + 1);
    _OWORD *v8 = 0uLL;
    v8[1] = 0uLL;
    v8 += 2;
    int32x4_t v13 = *(int32x4_t *)v8;
    int32x4_t v14 = *((int32x4_t *)v8 + 1);
    _OWORD *v8 = 0uLL;
    v8[1] = 0uLL;
    v8 += 2;
    int32x4_t v15 = *(int32x4_t *)v8;
    int32x4_t v16 = *((int32x4_t *)v8 + 1);
    _OWORD *v8 = 0uLL;
    v8[1] = 0uLL;
    v8 += 2;
    int32x4_t v17 = *(int32x4_t *)v8;
    int32x4_t v18 = *((int32x4_t *)v8 + 1);
    _OWORD *v8 = 0uLL;
    v8[1] = 0uLL;
    v8 += 2;
    int32x4_t v19 = *(int32x4_t *)v8;
    int32x4_t v20 = *((int32x4_t *)v8 + 1);
    _OWORD *v8 = 0uLL;
    v8[1] = 0uLL;
    v8 += 2;
    int32x4_t v21 = *(int32x4_t *)v8;
    int32x4_t v22 = *((int32x4_t *)v8 + 1);
    _OWORD *v8 = 0uLL;
    v8[1] = 0uLL;
    a3 = v8 + 2;
    int16x8_t v23 = vqmovn_high_s32(vqmovn_s32(v6), v7);
    int16x8_t v24 = vqmovn_high_s32(vqmovn_s32(v9), v10);
    int16x8_t v25 = vqmovn_high_s32(vqmovn_s32(v11), v12);
    int16x8_t v26 = vqmovn_high_s32(vqmovn_s32(v13), v14);
    int16x8_t v27 = vqmovn_high_s32(vqmovn_s32(v15), v16);
    int16x8_t v28 = vqmovn_high_s32(vqmovn_s32(v17), v18);
    int16x8_t v29 = vqmovn_high_s32(vqmovn_s32(v19), v20);
    int16x8_t v30 = vqmovn_high_s32(vqmovn_s32(v21), v22);
    int32x4_t v31 = (int32x4_t)vtrn1q_s16(v23, v24);
    int32x4_t v32 = (int32x4_t)vtrn2q_s16(v23, v24);
    int32x4_t v33 = (int32x4_t)vtrn1q_s16(v25, v26);
    int32x4_t v34 = (int32x4_t)vtrn2q_s16(v25, v26);
    int32x4_t v35 = (int32x4_t)vtrn1q_s16(v27, v28);
    int32x4_t v36 = (int32x4_t)vtrn2q_s16(v27, v28);
    int32x4_t v37 = (int32x4_t)vtrn1q_s16(v29, v30);
    int32x4_t v38 = (int32x4_t)vtrn2q_s16(v29, v30);
    int64x2_t v39 = (int64x2_t)vtrn1q_s32(v35, v37);
    int64x2_t v40 = (int64x2_t)vtrn2q_s32(v35, v37);
    int64x2_t v41 = (int64x2_t)vtrn1q_s32(v36, v38);
    int64x2_t v42 = (int64x2_t)vtrn2q_s32(v36, v38);
    int64x2_t v43 = (int64x2_t)vtrn1q_s32(v32, v34);
    int64x2_t v44 = (int64x2_t)vtrn2q_s32(v32, v34);
    int64x2_t v45 = (int64x2_t)vtrn1q_s32(v31, v33);
    int64x2_t v46 = (int64x2_t)vtrn2q_s32(v31, v33);
    int16x8_t v47 = (int16x8_t)vtrn1q_s64(v45, v39);
    int16x8_t v48 = (int16x8_t)vtrn2q_s64(v45, v39);
    int16x8_t v49 = (int16x8_t)vtrn1q_s64(v43, v41);
    int16x8_t v50 = (int16x8_t)vtrn2q_s64(v43, v41);
    int16x8_t v51 = (int16x8_t)vtrn2q_s64(v46, v40);
    int16x8_t v52 = (int16x8_t)vtrn1q_s64(v46, v40);
    int16x8_t v53 = (int16x8_t)vtrn1q_s64(v44, v42);
    int16x8_t v54 = (int16x8_t)vtrn2q_s64(v44, v42);
    v55.i64[0] = 0xFC00FC00FC00FC00;
    v55.i64[1] = 0xFC00FC00FC00FC00;
    int16x8_t v56 = (uint16x8_t *)((char *)a1 + a2 + a2);
    uint16x8_t v58 = *v56;
    int64x2_t v57 = (uint16x8_t *)((char *)v56 + a2);
    uint16x8_t v60 = *v57;
    uint16x8_t v59 = (uint16x8_t *)((char *)v57 + a2);
    int16x8_t v61 = vminq_s16((int16x8_t)vsqaddq_u16(*a1, vrshrq_n_s16(v47, 3uLL)), v55);
    uint16x8_t v63 = *v59;
    int16x8_t v62 = (uint16x8_t *)((char *)v59 + a2);
    int16x8_t v64 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)a1 + a2), vrshrq_n_s16(v49, 3uLL)), v55);
    *a1 = (uint16x8_t)v61;
    int16x8_t v65 = (int16x8_t *)&a1->i8[a2];
    uint16x8_t v67 = *v62;
    int16x8_t v66 = (uint16x8_t *)((char *)v62 + a2);
    int16x8_t v68 = vminq_s16((int16x8_t)vsqaddq_u16(v58, vrshrq_n_s16(v52, 3uLL)), v55);
    *int16x8_t v65 = v64;
    int16x8_t v69 = (int16x8_t *)((char *)v65 + a2);
    uint16x8_t v70 = *v66;
    int16x8_t v71 = vminq_s16((int16x8_t)vsqaddq_u16(v60, vrshrq_n_s16(v53, 3uLL)), v55);
    *int16x8_t v69 = v68;
    int16x8_t v72 = (int16x8_t *)((char *)v69 + a2);
    uint16x8_t v73 = *(uint16x8_t *)((char *)v66 + a2);
    int16x8_t *v72 = v71;
    uint16x8_t v74 = (int16x8_t *)((char *)v72 + a2);
    int16x8_t *v74 = vminq_s16((int16x8_t)vsqaddq_u16(v63, vrshrq_n_s16(v48, 3uLL)), v55);
    int16x8_t v75 = (int16x8_t *)((char *)v74 + a2);
    int16x8_t *v75 = vminq_s16((int16x8_t)vsqaddq_u16(v67, vrshrq_n_s16(v50, 3uLL)), v55);
    uint16x8_t v76 = (int16x8_t *)((char *)v75 + a2);
    *uint16x8_t v76 = vminq_s16((int16x8_t)vsqaddq_u16(v70, vrshrq_n_s16(v51, 3uLL)), v55);
    int16x8_t v77 = (int16x8_t *)((char *)v76 + a2);
    *int16x8_t v77 = vminq_s16((int16x8_t)vsqaddq_u16(v73, vrshrq_n_s16(v54, 3uLL)), v55);
    int32x4_t result = &v77->i8[a2];
    if (a4 < v5) {
      break;
    }
    a1 = (uint16x8_t *)&result[-8 * a2 + 16];
  }
  return result;
}

void sub_224A8B5F0(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A89D04(a3, 128);
    int v5 = &v29;
    int v6 = 28;
    if (v7 < v8) {
      goto LABEL_12;
    }
    sub_224A89D04((_OWORD *)(v4 + 16), 128);
    int v5 = &v30;
    int v6 = 24;
    if (v10 < v11) {
      goto LABEL_12;
    }
    sub_224A89D04((_OWORD *)(v9 + 32), 128);
    int v5 = &v31;
    int v6 = 20;
    if (v13 < v14) {
      goto LABEL_12;
    }
    sub_224A89D04((_OWORD *)(v12 + 48), 128);
    int v5 = &v32;
    int v6 = 16;
    if (v16 < v17) {
      goto LABEL_12;
    }
    sub_224A89D04((_OWORD *)(v15 + 64), 128);
    int v5 = &v33;
    int v6 = 12;
    if (v19 < v20
      || (sub_224A89D04((_OWORD *)(v18 + 80), 128), int v5 = &v34, v6 = 8, v22 < v23)
      || (sub_224A89D04((_OWORD *)(v21 + 96), 128), int v5 = &v35, v6 = 4, v25 < v26))
    {
LABEL_12:
      do
      {
        BOOL v27 = __OFSUB__(v6, 4);
        v6 -= 4;
        *(_OWORD *)int v5 = 0uLL;
        *((_OWORD *)v5 + 1) = 0uLL;
        *((_OWORD *)v5 + 2) = 0uLL;
        *((_OWORD *)v5 + 3) = 0uLL;
        int16x8_t v28 = v5 + 64;
        *int16x8_t v28 = 0uLL;
        v28[1] = 0uLL;
        v28[2] = 0uLL;
        v28[3] = 0uLL;
        v28 += 4;
        *int16x8_t v28 = 0uLL;
        v28[1] = 0uLL;
        v28[2] = 0uLL;
        v28[3] = 0uLL;
        v28 += 4;
        *int16x8_t v28 = 0uLL;
        v28[1] = 0uLL;
        v28[2] = 0uLL;
        v28[3] = 0uLL;
        int v5 = (char *)(v28 + 4);
      }
      while (!((v6 < 0) ^ v27 | (v6 == 0)));
    }
    else
    {
      sub_224A89D04((_OWORD *)(v24 + 112), 128);
    }
    sub_224A8A5FC();
    sub_224A8A5FC();
    sub_224A8A5FC();
    sub_224A8A5FC();
  }
  else
  {
    vld1q_dup_f32(a3);
    *a3 = 0.0;
    sub_224A85F9C(a1, a2, (uint64_t)a3, a4, 32);
  }
}

void sub_224A8B794(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A87E4C((void (*)(void))sub_224A871F4, a3, 128);
    int v6 = &v36;
    int v7 = 28;
    if (v8 < v9) {
      goto LABEL_12;
    }
    sub_224A87E4C(v5, (_OWORD *)(v4 + 16), 128);
    int v6 = &v37;
    int v7 = 24;
    if (v12 < v13) {
      goto LABEL_12;
    }
    sub_224A87E4C(v11, (_OWORD *)(v10 + 32), 128);
    int v6 = &v38;
    int v7 = 20;
    if (v16 < v17) {
      goto LABEL_12;
    }
    sub_224A87E4C(v15, (_OWORD *)(v14 + 48), 128);
    int v6 = &v39;
    int v7 = 16;
    if (v20 < v21) {
      goto LABEL_12;
    }
    sub_224A87E4C(v19, (_OWORD *)(v18 + 64), 128);
    int v6 = &v40;
    int v7 = 12;
    if (v24 < v25
      || (sub_224A87E4C(v23, (_OWORD *)(v22 + 80), 128), v6 = &v41, int v7 = 8, v28 < v29)
      || (sub_224A87E4C(v27, (_OWORD *)(v26 + 96), 128), v6 = &v42, int v7 = 4, v32 < v33))
    {
LABEL_12:
      do
      {
        BOOL v34 = __OFSUB__(v7, 4);
        v7 -= 4;
        *(_OWORD *)int v6 = 0uLL;
        *((_OWORD *)v6 + 1) = 0uLL;
        *((_OWORD *)v6 + 2) = 0uLL;
        *((_OWORD *)v6 + 3) = 0uLL;
        char v35 = v6 + 64;
        *char v35 = 0uLL;
        v35[1] = 0uLL;
        v35[2] = 0uLL;
        v35[3] = 0uLL;
        int v6 = (char *)(v35 + 4);
      }
      while (!((v7 < 0) ^ v34 | (v7 == 0)));
    }
    else
    {
      sub_224A87E4C(v31, (_OWORD *)(v30 + 112), 128);
    }
    sub_224A8A5FC();
    sub_224A8A5FC();
  }
  else
  {
    vld1q_dup_f32(a3);
    *a3 = 0.0;
    sub_224A85F58(a1, a2, (uint64_t)a3, a4, 32);
  }
}

uint16x8_t *sub_224A8B918(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A8A13C(a3, 64);
    int v11 = &v36;
    int v12 = 12;
    if ((int)v8 < v13
      || (sub_224A8A13C(v7 + 1, 64), int v11 = &v37, v12 = 8, (int)v8 < v14)
      || (sub_224A8A13C(v7 + 2, 64), int v11 = &v38, v12 = 4, (int)v8 < v15))
    {
      do
      {
        BOOL v16 = __OFSUB__(v12, 4);
        v12 -= 4;
        *(_OWORD *)int v11 = 0uLL;
        *((_OWORD *)v11 + 1) = 0uLL;
        *((_OWORD *)v11 + 2) = 0uLL;
        *((_OWORD *)v11 + 3) = 0uLL;
        int v17 = v11 + 64;
        *int v17 = 0uLL;
        v17[1] = 0uLL;
        v17[2] = 0uLL;
        v17[3] = 0uLL;
        v17 += 4;
        *int v17 = 0uLL;
        v17[1] = 0uLL;
        v17[2] = 0uLL;
        v17[3] = 0uLL;
        v17 += 4;
        *int v17 = 0uLL;
        v17[1] = 0uLL;
        v17[2] = 0uLL;
        v17[3] = 0uLL;
        int v11 = (char *)(v17 + 4);
      }
      while (!((v12 < 0) ^ v16 | (v12 == 0)));
    }
    else
    {
      sub_224A8A13C(v7 + 3, 64);
    }
    uint64_t v18 = sub_224A88094(v5, v6, (uint64_t)v7, v8, v9, v10);
    uint64_t v24 = sub_224A88094(v18, v19, v20, v21, v22, v23);
    uint64_t v30 = sub_224A88094(v24, v25, v26, v27, v28, v29);
    return (uint16x8_t *)sub_224A88094(v30, v31, v32, v33, v34, v35);
  }
  else
  {
    vld1q_dup_f32(a3);
    *a3 = 0.0;
    return sub_224A85F9C(a1, a2, (uint64_t)a3, a4, 16);
  }
}

void sub_224A8BA48(uint16x8_t *a1, uint64_t a2, const float *a3, uint64_t a4)
{
  if (a4)
  {
    int32x4_t v4 = 0uLL;
    uint64_t v5 = 128;
    uint64_t v6 = (float *)a3;
    do
    {
      *(int32x4_t *)uint64_t v6 = v4;
      int v7 = &v6[(unint64_t)v5 / 4];
      *(int32x4_t *)int v7 = v4;
      uint64_t v8 = (int32x4_t *)&v7[(unint64_t)v5 / 4];
      int32x4_t *v8 = v4;
      uint64_t v9 = &v8[(unint64_t)v5 / 0x10];
      int32x4_t *v9 = v4;
      uint64_t v10 = &v9[(unint64_t)v5 / 0x10];
      int32x4_t *v10 = v4;
      int v11 = &v10[(unint64_t)v5 / 0x10];
      *int v11 = v4;
      int v12 = &v11[(unint64_t)v5 / 0x10];
      *int v12 = v4;
      v12[(unint64_t)v5 / 0x10] = v4;
      sub_224A86430();
      int16x8_t v19 = vqrshrn_high_n_s32(vqrshrn_n_s32(v14, 2uLL), v18, 2uLL);
      int16x8_t v21 = vqrshrn_high_n_s32(vqrshrn_n_s32(v15, 2uLL), v20, 2uLL);
      int16x8_t v23 = vqrshrn_high_n_s32(vqrshrn_n_s32(v16, 2uLL), v22, 2uLL);
      int16x8_t v25 = vqrshrn_high_n_s32(vqrshrn_n_s32(v17, 2uLL), v24, 2uLL);
      int32x4_t v26 = (int32x4_t)vtrn1q_s16(v19, v21);
      int32x4_t v27 = (int32x4_t)vtrn2q_s16(v19, v21);
      int32x4_t v28 = (int32x4_t)vtrn1q_s16(v23, v25);
      int32x4_t v29 = (int32x4_t)vtrn2q_s16(v23, v25);
      int32x4_t *v30 = vtrn1q_s32(v26, v28);
      v30[1] = vtrn1q_s32(v27, v29);
      v30[2] = vtrn2q_s32(v26, v28);
      v30[3] = vtrn2q_s32(v27, v29);
      uint64_t v31 = v30 + 4;
    }
    while (v32 >= v33);
    if (v13)
    {
      do
      {
        BOOL v34 = __OFSUB__(v13, 4);
        v13 -= 4;
        *uint64_t v31 = v4;
        v31[1] = 0uLL;
        v31[2] = 0uLL;
        v31[3] = 0uLL;
        v31 += 4;
      }
      while (!((v13 < 0) ^ v34 | (v13 == 0)));
    }
    sub_224A8A5FC();
  }
  else
  {
    vld1q_dup_f32(a3);
    *a3 = 0.0;
    sub_224A85F04(a1, a2, (uint64_t)a3, a4, 32);
  }
}

void sub_224A8BB70(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A89D04(a3, 32);
    if (v5 >= 10) {
      sub_224A89D04((_OWORD *)(v4 + 16), 32);
    }
    do
    {
      sub_224A78B80();
      v6.i64[0] = 0xFC00FC00FC00FC00;
      v6.i64[1] = 0xFC00FC00FC00FC00;
      uint64_t v10 = (uint16x8_t *)((char *)v8 + v7 + v7);
      uint16x8_t v13 = *v10;
      int v12 = (uint16x8_t *)((char *)v10 + v7);
      uint16x8_t v16 = *v12;
      int32x4_t v15 = (uint16x8_t *)((char *)v12 + v7);
      int16x8_t v18 = vminq_s16((int16x8_t)vsqaddq_u16(*v8, vrshrq_n_s16(v9, 4uLL)), v6);
      uint16x8_t v20 = *v15;
      int16x8_t v19 = (uint16x8_t *)((char *)v15 + v7);
      int16x8_t v22 = vminq_s16((int16x8_t)vsqaddq_u16(*(uint16x8_t *)((char *)v8 + v7), vrshrq_n_s16(v11, 4uLL)), v6);
      uint16x8_t *v8 = (uint16x8_t)v18;
      int16x8_t v23 = (int16x8_t *)&v8->i8[v7];
      uint16x8_t v25 = *v19;
      int32x4_t v24 = (uint16x8_t *)((char *)v19 + v7);
      int16x8_t v27 = vminq_s16((int16x8_t)vsqaddq_u16(v13, vrshrq_n_s16(v14, 4uLL)), v6);
      *int16x8_t v23 = v22;
      int32x4_t v28 = (int16x8_t *)((char *)v23 + v7);
      uint16x8_t v29 = *v24;
      int16x8_t v31 = vminq_s16((int16x8_t)vsqaddq_u16(v16, vrshrq_n_s16(v17, 4uLL)), v6);
      *int32x4_t v28 = v27;
      int v32 = (int16x8_t *)((char *)v28 + v7);
      uint16x8_t v33 = *(uint16x8_t *)((char *)v24 + v7);
      *int v32 = v31;
      char v35 = (int16x8_t *)((char *)v32 + v7);
      *char v35 = vminq_s16((int16x8_t)vsqaddq_u16(v20, vrshrq_n_s16(v21, 4uLL)), v6);
      char v36 = (int16x8_t *)((char *)v35 + v7);
      int16x8_t *v36 = vminq_s16((int16x8_t)vsqaddq_u16(v25, vrshrq_n_s16(v26, 4uLL)), v6);
      char v37 = (int16x8_t *)((char *)v36 + v7);
      *char v37 = vminq_s16((int16x8_t)vsqaddq_u16(v29, vrshrq_n_s16(v30, 4uLL)), v6);
      *(int16x8_t *)((char *)v37 + v7) = vminq_s16((int16x8_t)vsqaddq_u16(v33, vrshrq_n_s16(v34, 4uLL)), v6);
    }
    while (v38 < 32);
  }
  else
  {
    vld1q_dup_f32(a3);
    *a3 = 0.0;
    sub_224A85F9C(a1, a2, (uint64_t)a3, a4, 8);
  }
}

int32x4_t sub_224A8BCE4(double a1, double a2, double a3, double a4, int32x4_t a5, int32x4_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int32x4_t *a13)
{
  int32x4_t v18 = *(int32x4_t *)(v13 + 16);
  int32x4_t v19 = vqrdmulhq_lane_s32(v14, *(int32x2_t *)v13, 1);
  int32x4_t v20 = vqrdmulhq_lane_s32(v14, *(int32x2_t *)v13, 0);
  int32x4_t v21 = vqrdmulhq_laneq_s32(v15, *(int32x4_t *)v13, 2);
  int32x4_t v22 = vqrdmulhq_laneq_s32(v15, *(int32x4_t *)v13, 3);
  int32x4_t v23 = vqrdmulhq_lane_s32(v16, *(int32x2_t *)v18.i8, 1);
  int32x4_t v24 = vqrdmulhq_lane_s32(v16, *(int32x2_t *)v18.i8, 0);
  int32x4_t v25 = vqrdmulhq_laneq_s32(v17, v18, 2);
  int32x4_t v26 = vqrdmulhq_laneq_s32(v17, v18, 3);
  int32x4_t result = *(int32x4_t *)(v13 + 32);
  int32x4_t v28 = vmaxq_s32(vminq_s32(vqaddq_s32(v20, v22), a6), a5);
  int32x4_t v29 = vmaxq_s32(vminq_s32(vqsubq_s32(v20, v22), a6), a5);
  int32x4_t v30 = vmaxq_s32(vminq_s32(vqsubq_s32(v26, v24), a6), a5);
  int32x4_t v31 = vmaxq_s32(vminq_s32(vqaddq_s32(v26, v24), a6), a5);
  int32x4_t v32 = vmaxq_s32(vminq_s32(vqaddq_s32(v25, v23), a6), a5);
  int32x4_t v33 = vmaxq_s32(vminq_s32(vqsubq_s32(v25, v23), a6), a5);
  int32x4_t v34 = vmaxq_s32(vminq_s32(vqsubq_s32(v19, v21), a6), a5);
  int32x4_t v35 = vmaxq_s32(vminq_s32(vqaddq_s32(v19, v21), a6), a5);
  int32x4_t v36 = vmlsq_lane_s32(vmulq_lane_s32(v33, *(int32x2_t *)result.i8, 1), v30, *(int32x2_t *)result.i8, 0);
  int32x4_t v37 = vrshrq_n_s32(vnegq_s32(vmlaq_lane_s32(vmulq_n_s32(v33, result.i32[0]), v30, *(int32x2_t *)result.i8, 1)), 0xCuLL);
  int32x4_t v38 = vmlaq_lane_s32(vmulq_n_s32(v34, result.i32[0]), v29, *(int32x2_t *)result.i8, 1);
  int32x4_t v39 = vrshrq_n_s32(v36, 0xCuLL);
  int32x4_t v40 = vrshrq_n_s32(vmlsq_lane_s32(vmulq_lane_s32(v34, *(int32x2_t *)result.i8, 1), v29, *(int32x2_t *)result.i8, 0), 0xCuLL);
  int32x4_t v41 = vrshrq_n_s32(v38, 0xCuLL);
  int32x4_t v42 = vmaxq_s32(vminq_s32(vqsubq_s32(v28, v31), a6), a5);
  int32x4_t v43 = vmaxq_s32(vminq_s32(vqsubq_s32(v40, v37), a6), a5);
  int32x4_t v44 = vmaxq_s32(vminq_s32(vqsubq_s32(v35, v32), a6), a5);
  int32x4_t v45 = vmaxq_s32(vminq_s32(vqsubq_s32(v41, v39), a6), a5);
  *a13 = vmaxq_s32(vminq_s32(vqaddq_s32(v28, v31), a6), a5);
  a13[1] = vmaxq_s32(vminq_s32(vqaddq_s32(v40, v37), a6), a5);
  a13[2] = vrshrq_n_s32(vmlsq_laneq_s32(vmulq_laneq_s32(v45, result, 3), v43, result, 2), 0xCuLL);
  a13[3] = vrshrq_n_s32(vmlsq_laneq_s32(vmulq_laneq_s32(v44, result, 3), v42, result, 2), 0xCuLL);
  int64x2_t v46 = a13 + 4;
  int32x4_t *v46 = vrshrq_n_s32(vmlaq_laneq_s32(vmulq_laneq_s32(v44, result, 2), v42, result, 3), 0xCuLL);
  v46[1] = vrshrq_n_s32(vmlaq_laneq_s32(vmulq_laneq_s32(v45, result, 2), v43, result, 3), 0xCuLL);
  v46[2] = vmaxq_s32(vminq_s32(vqaddq_s32(v41, v39), a6), a5);
  v46[3] = vmaxq_s32(vminq_s32(vqaddq_s32(v35, v32), a6), a5);
  return result;
}

void sub_224A8BE3C(double a1, double a2, double a3, double a4, int32x4_t a5, int32x4_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int32x4_t *a13)
{
  do
  {
    int32x4_t v14 = v13[8];
    int32x4_t v15 = a13[8];
    int32x4_t v16 = a13[16];
    int32x4_t v17 = v13[24];
    int32x4_t v18 = v13[16];
    int32x4_t v19 = a13[24];
    int32x4_t v20 = vmaxq_s32(vminq_s32(vqaddq_s32(*a13, v14), a6), a5);
    int32x4_t v21 = vmaxq_s32(vminq_s32(vqsubq_s32(*a13, v14), a6), a5);
    int32x4_t v22 = vmaxq_s32(vminq_s32(vqaddq_s32(*v13, v15), a6), a5);
    int32x4_t v23 = vmaxq_s32(vminq_s32(vqsubq_s32(*v13, v15), a6), a5);
    int32x4_t v24 = vmaxq_s32(vminq_s32(vqsubq_s32(v17, v16), a6), a5);
    int32x4_t v25 = vmaxq_s32(vminq_s32(vqaddq_s32(v17, v16), a6), a5);
    int32x4_t v26 = vmaxq_s32(vminq_s32(vqaddq_s32(v19, v18), a6), a5);
    int32x4_t v27 = vmaxq_s32(vminq_s32(vqsubq_s32(v19, v18), a6), a5);
    int32x4_t v28 = vmlsq_laneq_s32(vmulq_laneq_s32(v23, qword_2646ED1E0, 2), v21, qword_2646ED1E0, 3);
    int32x4_t v29 = vrshrq_n_s32(vmlaq_laneq_s32(vmulq_laneq_s32(v23, qword_2646ED1E0, 3), v21, qword_2646ED1E0, 2), 0xCuLL);
    int32x4_t v30 = vrshrq_n_s32(v28, 0xCuLL);
    int32x4_t v31 = vmlsq_laneq_s32(vmulq_laneq_s32(v27, qword_2646ED1E0, 2), v24, qword_2646ED1E0, 3);
    int32x4_t v32 = vrshrq_n_s32(vnegq_s32(vmlaq_laneq_s32(vmulq_laneq_s32(v27, qword_2646ED1E0, 3), v24, qword_2646ED1E0, 2)), 0xCuLL);
    int32x4_t v33 = vrshrq_n_s32(v31, 0xCuLL);
    int32x4_t v34 = vmaxq_s32(vminq_s32(vqsubq_s32(v20, v25), a6), a5);
    int32x4_t v35 = vmaxq_s32(vminq_s32(vqsubq_s32(v30, v32), a6), a5);
    int32x4_t v36 = vmaxq_s32(vminq_s32(vqsubq_s32(v22, v26), a6), a5);
    int32x4_t v37 = vmaxq_s32(vminq_s32(vqsubq_s32(v29, v33), a6), a5);
    *a13 = vmaxq_s32(vminq_s32(vqaddq_s32(v20, v25), a6), a5);
    *uint64_t v13 = vmaxq_s32(vminq_s32(vqaddq_s32(v30, v32), a6), a5);
    a13[8] = vrshrq_n_s32(vmlsq_lane_s32(vmulq_n_s32(v37, 2896), v35, (int32x2_t)0x5A80000000000B50, 0), 0xCuLL);
    v13[8] = vrshrq_n_s32(vmlsq_lane_s32(vmulq_n_s32(v36, 2896), v34, (int32x2_t)0x5A80000000000B50, 0), 0xCuLL);
    a13[16] = vrshrq_n_s32(vmlaq_lane_s32(vmulq_n_s32(v36, 2896), v34, (int32x2_t)0x5A80000000000B50, 0), 0xCuLL);
    v13[16] = vrshrq_n_s32(vmlaq_lane_s32(vmulq_n_s32(v37, 2896), v35, (int32x2_t)0x5A80000000000B50, 0), 0xCuLL);
    a13[24] = vmaxq_s32(vminq_s32(vqaddq_s32(v29, v33), a6), a5);
    v13[24] = vmaxq_s32(vminq_s32(vqaddq_s32(v22, v26), a6), a5);
    ++a13;
    --v13;
  }
  while ((uint64_t)a13 < (uint64_t)v13);
}

void sub_224A8BFC0(_OWORD *a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v2 = 4 * a2;
  *a1 = 0u;
  int8x16_t v3 = (_OWORD *)((char *)a1 + v2);
  _OWORD *v3 = 0u;
  uint64_t v4 = (_OWORD *)((char *)v3 + v2);
  _OWORD *v4 = 0u;
  int v5 = (_OWORD *)((char *)v4 + v2);
  _OWORD *v5 = 0u;
  int16x8_t v6 = (_OWORD *)((char *)v5 + v2);
  _OWORD *v6 = 0u;
  uint64_t v7 = (_OWORD *)((char *)v6 + v2);
  _OWORD *v7 = 0u;
  uint64_t v8 = (_OWORD *)((char *)v7 + v2);
  _OWORD *v8 = 0u;
  *(_OWORD *)((char *)v8 + v2) = 0u;
  sub_224A871F4();
  *v27++ = vmaxq_s32(vminq_s32(v10, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v11, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v12, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v13, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v14, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v15, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v16, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v17, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v18, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v19, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v20, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v21, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v22, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v23, v9), v26);
  *int32x4_t v27 = vmaxq_s32(vminq_s32(v24, v9), v26);
  v27[1] = vmaxq_s32(vminq_s32(v25, v9), v26);
  *int32x4_t v28 = 0u;
  int32x4_t v30 = (_OWORD *)((char *)v28 + v29);
  _OWORD *v30 = 0u;
  int32x4_t v31 = (_OWORD *)((char *)v30 + v29);
  *int32x4_t v31 = 0u;
  int32x4_t v32 = (_OWORD *)((char *)v31 + v29);
  *int32x4_t v32 = 0u;
  int32x4_t v33 = (_OWORD *)((char *)v32 + v29);
  *int32x4_t v33 = 0u;
  int32x4_t v34 = (_OWORD *)((char *)v33 + v29);
  _OWORD *v34 = 0u;
  int32x4_t v35 = (_OWORD *)((char *)v34 + v29);
  *int32x4_t v35 = 0u;
  *(_OWORD *)((char *)v35 + v29) = 0u;
  sub_224A898A8();
  int32x4_t v37 = v36 + 15;
  v36 -= 16;
  v38.i64[0] = 0x100000001;
  v38.i64[1] = 0x100000001;
  v39.i64[0] = 0x100000001;
  v39.i64[1] = 0x100000001;
  int32x4_t v40 = *v36++;
  int32x4_t v41 = *v36++;
  int32x4_t v43 = *v36++;
  int32x4_t v45 = *v36;
  v36 -= 3;
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v40, v42), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v40, v42), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v41, v44), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v41, v44), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v43, v46), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v43, v46), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v45, v47), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v45, v47), v38), v39);
  int32x4_t v48 = *v36++;
  int32x4_t v49 = *v36++;
  int32x4_t v51 = *v36++;
  int32x4_t v53 = *v36;
  v36 -= 3;
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v48, v50), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v48, v50), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v49, v52), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v49, v52), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v51, v54), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v51, v54), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v53, v55), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v53, v55), v38), v39);
  int32x4_t v56 = *v36++;
  int32x4_t v57 = *v36++;
  int32x4_t v59 = *v36++;
  int32x4_t v61 = *v36;
  v36 -= 3;
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v56, v58), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v56, v58), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v57, v60), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v57, v60), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v59, v62), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v59, v62), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v61, v63), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v61, v63), v38), v39);
  int32x4_t v64 = *v36++;
  int32x4_t v65 = *v36++;
  int32x4_t v67 = *v36++;
  int32x4_t v69 = *v36;
  v36 -= 3;
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v64, v66), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v64, v66), v38), v39);
  int32x4_t v72 = vmaxq_s32(vminq_s32(vqaddq_s32(v67, v70), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v65, v68), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v65, v68), v38), v39);
  int32x4_t v73 = vmaxq_s32(vminq_s32(vqaddq_s32(v69, v71), v38), v39);
  *v36++ = v72;
  *int32x4_t v37 = vmaxq_s32(vminq_s32(vqsubq_s32(v67, v70), v38), v39);
  int32x4_t *v36 = v73;
  v37[-1] = vmaxq_s32(vminq_s32(vqsubq_s32(v69, v71), v38), v39);
  v69.i64[0] = 0x100000001;
  v69.i64[1] = 0x100000001;
  v67.i64[0] = 0x100000001;
  v67.i64[1] = 0x100000001;
  uint16x8_t v76 = (_OWORD *)((char *)v74 + 8 * v75);
  _OWORD *v74 = 0u;
  *(_OWORD *)((char *)&v74[v75] - v75) = 0u;
  *uint16x8_t v76 = 0u;
  *(_OWORD *)((char *)v76 - v75) = 0u;
  *(void *)&double v83 = sub_224A8BCE4(COERCE_DOUBLE(0x100000001), COERCE_DOUBLE(0x100000001), *(double *)v72.i64, *(double *)v73.i64, v67, v69, v77, v78, v79, v80, v81, v82, v36 + 17).u64[0];
  int16x8_t v86 = (_OWORD *)(v84 + 4 * v85);
  uint16x8_t v88 = (_OWORD *)(v87 - 4 * v85);
  *int16x8_t v86 = 0u;
  *uint16x8_t v88 = 0u;
  *(_OWORD *)((char *)v86 - v85) = 0u;
  *(_OWORD *)((char *)v88 + v85) = 0u;
  *(void *)&double v101 = sub_224A8BCE4(v83, v96, v97, v98, v99, v100, v89, v90, v91, v92, v93, v94, v95).u64[0];
  *(_OWORD *)(v103 - 2 * v102 + v102) = 0u;
  *(_OWORD *)(v106 + v102) = 0u;
  *(_OWORD *)(v104 - 2 * v102 + v102) = 0u;
  *(_OWORD *)(v105 + v102) = 0u;
  *(void *)&double v119 = sub_224A8BCE4(v101, v114, v115, v116, v117, v118, v107, v108, v109, v110, v111, v112, v113).u64[0];
  *int16x8_t v120 = 0u;
  *(_OWORD *)(v122 + v121) = 0u;
  *int16x8_t v123 = 0u;
  *(_OWORD *)(v124 + v121) = 0u;
  *(void *)&double v137 = sub_224A8BCE4(v119, v132, v133, v134, v135, v136, v125, v126, v127, v128, v129, v130, v131).u64[0];
  sub_224A8BE3C(v137, v145, v146, v147, v148, v149, v139, v140, v141, v142, v143, v144, (int32x4_t *)(v138 - 512));
}

void sub_224A8C4C8(_OWORD *a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v2 = 4 * a2;
  *a1 = 0u;
  int8x16_t v3 = (_OWORD *)((char *)a1 + v2);
  _OWORD *v3 = 0u;
  uint64_t v4 = (_OWORD *)((char *)v3 + v2);
  _OWORD *v4 = 0u;
  int v5 = (_OWORD *)((char *)v4 + v2);
  _OWORD *v5 = 0u;
  int16x8_t v6 = (_OWORD *)((char *)v5 + v2);
  _OWORD *v6 = 0u;
  uint64_t v7 = (_OWORD *)((char *)v6 + v2);
  _OWORD *v7 = 0u;
  uint64_t v8 = (_OWORD *)((char *)v7 + v2);
  _OWORD *v8 = 0u;
  *(_OWORD *)((char *)v8 + v2) = 0u;
  sub_224A871F4();
  *v27++ = vmaxq_s32(vminq_s32(v10, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v11, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v12, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v13, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v14, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v15, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v16, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v17, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v18, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v19, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v20, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v21, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v22, v9), v26);
  *v27++ = vmaxq_s32(vminq_s32(v23, v9), v26);
  *int32x4_t v27 = vmaxq_s32(vminq_s32(v24, v9), v26);
  v27[1] = vmaxq_s32(vminq_s32(v25, v9), v26);
  *int32x4_t v28 = 0u;
  int32x4_t v30 = (_OWORD *)((char *)v28 + v29);
  _OWORD *v30 = 0u;
  int32x4_t v31 = (_OWORD *)((char *)v30 + v29);
  *int32x4_t v31 = 0u;
  int32x4_t v32 = (_OWORD *)((char *)v31 + v29);
  *int32x4_t v32 = 0u;
  int32x4_t v33 = (_OWORD *)((char *)v32 + v29);
  *int32x4_t v33 = 0u;
  int32x4_t v34 = (_OWORD *)((char *)v33 + v29);
  _OWORD *v34 = 0u;
  int32x4_t v35 = (_OWORD *)((char *)v34 + v29);
  *int32x4_t v35 = 0u;
  *(_OWORD *)((char *)v35 + v29) = 0u;
  sub_224A898A8();
  int32x4_t v37 = v36 + 15;
  v36 -= 16;
  v38.i64[0] = 0x100000001;
  v38.i64[1] = 0x100000001;
  v39.i64[0] = 0x100000001;
  v39.i64[1] = 0x100000001;
  int32x4_t v40 = *v36++;
  int32x4_t v41 = *v36++;
  int32x4_t v43 = *v36++;
  int32x4_t v45 = *v36;
  v36 -= 3;
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v40, v42), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v40, v42), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v41, v44), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v41, v44), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v43, v46), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v43, v46), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v45, v47), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v45, v47), v38), v39);
  int32x4_t v48 = *v36++;
  int32x4_t v49 = *v36++;
  int32x4_t v51 = *v36++;
  int32x4_t v53 = *v36;
  v36 -= 3;
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v48, v50), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v48, v50), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v49, v52), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v49, v52), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v51, v54), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v51, v54), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v53, v55), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v53, v55), v38), v39);
  int32x4_t v56 = *v36++;
  int32x4_t v57 = *v36++;
  int32x4_t v59 = *v36++;
  int32x4_t v61 = *v36;
  v36 -= 3;
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v56, v58), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v56, v58), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v57, v60), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v57, v60), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v59, v62), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v59, v62), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v61, v63), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v61, v63), v38), v39);
  int32x4_t v64 = *v36++;
  int32x4_t v65 = *v36++;
  int32x4_t v67 = *v36++;
  int32x4_t v69 = *v36;
  v36 -= 3;
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v64, v66), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v64, v66), v38), v39);
  int32x4_t v72 = vmaxq_s32(vminq_s32(vqaddq_s32(v67, v70), v38), v39);
  *v36++ = vmaxq_s32(vminq_s32(vqaddq_s32(v65, v68), v38), v39);
  *v37-- = vmaxq_s32(vminq_s32(vqsubq_s32(v65, v68), v38), v39);
  int32x4_t v73 = vmaxq_s32(vminq_s32(vqaddq_s32(v69, v71), v38), v39);
  *v36++ = v72;
  *int32x4_t v37 = vmaxq_s32(vminq_s32(vqsubq_s32(v67, v70), v38), v39);
  int32x4_t *v36 = v73;
  v37[-1] = vmaxq_s32(vminq_s32(vqsubq_s32(v69, v71), v38), v39);
  v69.i64[0] = 0x100000001;
  v69.i64[1] = 0x100000001;
  v67.i64[0] = 0x100000001;
  v67.i64[1] = 0x100000001;
  uint16x8_t v76 = (_OWORD *)((char *)v74 + 8 * v75);
  _OWORD *v74 = 0u;
  *(_OWORD *)((char *)&v74[v75] - v75) = 0u;
  *uint16x8_t v76 = 0u;
  *(_OWORD *)((char *)v76 - v75) = 0u;
  sub_224A8BCE4(COERCE_DOUBLE(vdup_n_s32(0x5A800000u)), COERCE_DOUBLE(0x100000001), *(double *)v72.i64, *(double *)v73.i64, v67, v69, v77, v78, v79, v80, v81, v82, v36 + 17);
  uint64_t v85 = (_OWORD *)(v83 + 4 * v84);
  uint64_t v87 = (_OWORD *)(v86 - 4 * v84);
  *uint64_t v85 = 0u;
  *uint64_t v87 = 0u;
  *(_OWORD *)((char *)v85 - v84) = 0u;
  *(_OWORD *)((char *)v87 + v84) = 0u;
  sub_224A8BCE4(COERCE_DOUBLE(vdup_n_s32(0x5A800000u)), v95, v96, v97, v98, v99, v88, v89, v90, v91, v92, v93, v94);
  *(_OWORD *)(v101 - 2 * v100 + v100) = 0u;
  *(_OWORD *)(v104 + v100) = 0u;
  *(_OWORD *)(v102 - 2 * v100 + v100) = 0u;
  *(_OWORD *)(v103 + v100) = 0u;
  sub_224A8BCE4(COERCE_DOUBLE(vdup_n_s32(0x5A800000u)), v112, v113, v114, v115, v116, v105, v106, v107, v108, v109, v110, v111);
  *int32x4_t v117 = 0u;
  *(_OWORD *)(v119 + v118) = 0u;
  *int16x8_t v120 = 0u;
  *(_OWORD *)(v121 + v118) = 0u;
  *(void *)&double v134 = sub_224A8BCE4(COERCE_DOUBLE(vdup_n_s32(0x5A800000u)), v129, v130, v131, v132, v133, v122, v123, v124, v125, v126, v127, v128).u64[0];
  sub_224A8BE3C(v134, v142, v143, v144, v145, v146, v136, v137, v138, v139, v140, v141, (int32x4_t *)(v135 - 512));
}

int16x8_t sub_224A8CA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int16x8_t *a7, uint64_t a8, uint64_t a9)
{
  int32x4_t v10 = (unint64_t *)&a9;
  int32x4_t v11 = &STACK[0x3C0];
  int32x4_t v12 = a7 + 7;
  int32x4_t v13 = vdupq_n_s32(v9);
  do
  {
    int32x4_t v15 = *(int32x4_t *)v10;
    int32x4_t v16 = *((int32x4_t *)v10 + 1);
    int32x4_t v17 = *((int32x4_t *)v10 + 2);
    int32x4_t v18 = *((int32x4_t *)v10 + 3);
    int32x4_t v14 = (int32x4_t *)(v10 + 8);
    int32x4_t v20 = *(int32x4_t *)v11;
    int32x4_t v21 = *((int32x4_t *)v11 + 1);
    int32x4_t v22 = *((int32x4_t *)v11 + 2);
    int32x4_t v23 = *((int32x4_t *)v11 + 3);
    int32x4_t v19 = (int32x4_t *)(v11 - 8);
    int32x4_t v24 = *v14;
    int32x4_t v25 = v14[1];
    int32x4_t v26 = v14[2];
    int32x4_t v27 = v14[3];
    int32x4_t v10 = (unint64_t *)&v14[4];
    int32x4_t v28 = *v19;
    int32x4_t v29 = v19[1];
    int32x4_t v30 = v19[2];
    int32x4_t v31 = v19[3];
    int32x4_t v11 = (unint64_t *)&v19[-4];
    int64x2_t v32 = (int64x2_t)vtrn1q_s32(v15, v16);
    int64x2_t v33 = (int64x2_t)vtrn2q_s32(v15, v16);
    int64x2_t v34 = (int64x2_t)vtrn1q_s32(v17, v18);
    int64x2_t v35 = (int64x2_t)vtrn2q_s32(v17, v18);
    int32x4_t v36 = (int32x4_t)vtrn1q_s64(v32, v34);
    int32x4_t v37 = (int32x4_t)vtrn2q_s64(v32, v34);
    int32x4_t v38 = (int32x4_t)vtrn1q_s64(v33, v35);
    int32x4_t v39 = (int32x4_t)vtrn2q_s64(v33, v35);
    int64x2_t v40 = (int64x2_t)vtrn1q_s32(v24, v25);
    int64x2_t v41 = (int64x2_t)vtrn2q_s32(v24, v25);
    int64x2_t v42 = (int64x2_t)vtrn1q_s32(v26, v27);
    int64x2_t v43 = (int64x2_t)vtrn2q_s32(v26, v27);
    int32x4_t v44 = (int32x4_t)vtrn1q_s64(v40, v42);
    int32x4_t v45 = (int32x4_t)vtrn2q_s64(v40, v42);
    int32x4_t v46 = (int32x4_t)vtrn1q_s64(v41, v43);
    int32x4_t v47 = (int32x4_t)vtrn2q_s64(v41, v43);
    int64x2_t v48 = (int64x2_t)vtrn1q_s32(v23, v22);
    int64x2_t v49 = (int64x2_t)vtrn2q_s32(v23, v22);
    int64x2_t v50 = (int64x2_t)vtrn1q_s32(v21, v20);
    int64x2_t v51 = (int64x2_t)vtrn2q_s32(v21, v20);
    int32x4_t v52 = (int32x4_t)vtrn1q_s64(v48, v50);
    int32x4_t v53 = (int32x4_t)vtrn2q_s64(v48, v50);
    int32x4_t v54 = (int32x4_t)vtrn1q_s64(v49, v51);
    int32x4_t v55 = (int32x4_t)vtrn2q_s64(v49, v51);
    int64x2_t v56 = (int64x2_t)vtrn1q_s32(v31, v30);
    int64x2_t v57 = (int64x2_t)vtrn2q_s32(v31, v30);
    int64x2_t v58 = (int64x2_t)vtrn1q_s32(v29, v28);
    int64x2_t v59 = (int64x2_t)vtrn2q_s32(v29, v28);
    int32x4_t v60 = (int32x4_t)vtrn1q_s64(v56, v58);
    int32x4_t v61 = (int32x4_t)vtrn2q_s64(v56, v58);
    int32x4_t v62 = (int32x4_t)vtrn1q_s64(v57, v59);
    int32x4_t v63 = (int32x4_t)vtrn2q_s64(v57, v59);
    *a7 = vqmovn_high_s32(vqmovn_s32(vrshlq_s32(vqaddq_s32(v36, v52), v13)), vrshlq_s32(vqaddq_s32(v44, v60), v13));
    int32x4_t v64 = a7 + 8;
    *int32x4_t v12 = vrev64q_s16(vqmovn_high_s32(vqmovn_s32(vrshlq_s32(vqsubq_s32(v44, v60), v13)), vrshlq_s32(vqsubq_s32(v36, v52), v13)));
    int32x4_t v65 = v12 + 8;
    *int32x4_t v64 = vqmovn_high_s32(vqmovn_s32(vrshlq_s32(vqaddq_s32(v38, v54), v13)), vrshlq_s32(vqaddq_s32(v46, v62), v13));
    v64 += 8;
    *int32x4_t v65 = vrev64q_s16(vqmovn_high_s32(vqmovn_s32(vrshlq_s32(vqsubq_s32(v46, v62), v13)), vrshlq_s32(vqsubq_s32(v38, v54), v13)));
    v65 += 8;
    *int32x4_t v64 = vqmovn_high_s32(vqmovn_s32(vrshlq_s32(vqaddq_s32(v37, v53), v13)), vrshlq_s32(vqaddq_s32(v45, v61), v13));
    v64 += 8;
    *int32x4_t v65 = vrev64q_s16(vqmovn_high_s32(vqmovn_s32(vrshlq_s32(vqsubq_s32(v45, v61), v13)), vrshlq_s32(vqsubq_s32(v37, v53), v13)));
    v65 += 8;
    int16x8_t result = vqmovn_high_s32(vqmovn_s32(vrshlq_s32(vqaddq_s32(v39, v55), v13)), vrshlq_s32(vqaddq_s32(v47, v63), v13));
    *int32x4_t v64 = result;
    *int32x4_t v65 = vrev64q_s16(vqmovn_high_s32(vqmovn_s32(vrshlq_s32(vqsubq_s32(v47, v63), v13)), vrshlq_s32(vqsubq_s32(v39, v55), v13)));
    a7 = v64 - 23;
    int32x4_t v12 = v65 - 25;
  }
  while ((uint64_t)v10 < (uint64_t)v11);
  return result;
}

int16x8_t sub_224A8CC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint16x8_t *a7, uint64_t a8, uint64_t a9)
{
  unsigned int v9 = (unint64_t *)&a9;
  int32x4_t v10 = &STACK[0x3C0];
  int32x4_t v11 = (uint16x8_t *)((char *)&a7[4 * a2] - a2);
  do
  {
    int16x8_t v13 = *(int16x8_t *)v9;
    int16x8_t v14 = *((int16x8_t *)v9 + 1);
    int16x8_t v15 = *((int16x8_t *)v9 + 2);
    int16x8_t v16 = *((int16x8_t *)v9 + 3);
    int32x4_t v12 = (int16x8_t *)(v9 + 8);
    int16x8_t v18 = *(int16x8_t *)v10;
    int16x8_t v19 = *((int16x8_t *)v10 + 1);
    int16x8_t v20 = *((int16x8_t *)v10 + 2);
    int16x8_t v21 = *((int16x8_t *)v10 + 3);
    int32x4_t v17 = (int16x8_t *)(v10 - 8);
    int16x8_t v22 = *v12;
    int16x8_t v23 = v12[1];
    int16x8_t v24 = v12[2];
    int16x8_t v25 = v12[3];
    unsigned int v9 = (unint64_t *)&v12[4];
    int16x8_t v26 = *v17;
    int16x8_t v27 = v17[1];
    int16x8_t v28 = v17[2];
    int16x8_t v29 = v17[3];
    int32x4_t v10 = (unint64_t *)&v17[-4];
    v30.i64[0] = 0xFC00FC00FC00FC00;
    v30.i64[1] = 0xFC00FC00FC00FC00;
    uint16x8_t v32 = *a7;
    int32x4_t v31 = (uint16x8_t *)((char *)a7 + a2);
    uint16x8_t v34 = *v11;
    int64x2_t v33 = (uint16x8_t *)((char *)v11 - a2);
    uint16x8_t v35 = *v31;
    uint16x8_t v36 = *v33;
    int32x4_t v37 = (int16x8_t *)((char *)v31 - a2);
    int32x4_t v38 = (int16x8_t *)&v33->i8[a2];
    *int32x4_t v37 = vminq_s16((int16x8_t)vsqaddq_u16(v32, vrshrq_n_s16(vqaddq_s16(v13, v21), 4uLL)), v30);
    int32x4_t v39 = (int16x8_t *)((char *)v37 + a2);
    *int32x4_t v38 = vminq_s16((int16x8_t)vsqaddq_u16(v34, vrshrq_n_s16(vqsubq_s16(v13, v21), 4uLL)), v30);
    int64x2_t v40 = (int16x8_t *)((char *)v38 - a2);
    *int32x4_t v39 = vminq_s16((int16x8_t)vsqaddq_u16(v35, vrshrq_n_s16(vqaddq_s16(v14, v20), 4uLL)), v30);
    int64x2_t v41 = (uint16x8_t *)&v39->i8[a2];
    *int64x2_t v40 = vminq_s16((int16x8_t)vsqaddq_u16(v36, vrshrq_n_s16(vqsubq_s16(v14, v20), 4uLL)), v30);
    int64x2_t v42 = (uint16x8_t *)((char *)v40 - a2);
    uint16x8_t v44 = *v41;
    int64x2_t v43 = (uint16x8_t *)((char *)v41 + a2);
    uint16x8_t v46 = *v42;
    int32x4_t v45 = (uint16x8_t *)((char *)v42 - a2);
    uint16x8_t v47 = *v43;
    uint16x8_t v48 = *v45;
    int64x2_t v49 = (int16x8_t *)((char *)v43 - a2);
    int64x2_t v50 = (int16x8_t *)&v45->i8[a2];
    *int64x2_t v49 = vminq_s16((int16x8_t)vsqaddq_u16(v44, vrshrq_n_s16(vqaddq_s16(v15, v19), 4uLL)), v30);
    int64x2_t v51 = (int16x8_t *)((char *)v49 + a2);
    *int64x2_t v50 = vminq_s16((int16x8_t)vsqaddq_u16(v46, vrshrq_n_s16(vqsubq_s16(v15, v19), 4uLL)), v30);
    int32x4_t v52 = (int16x8_t *)((char *)v50 - a2);
    *int64x2_t v51 = vminq_s16((int16x8_t)vsqaddq_u16(v47, vrshrq_n_s16(vqaddq_s16(v16, v18), 4uLL)), v30);
    int32x4_t v53 = (uint16x8_t *)&v51->i8[a2];
    *int32x4_t v52 = vminq_s16((int16x8_t)vsqaddq_u16(v48, vrshrq_n_s16(vqsubq_s16(v16, v18), 4uLL)), v30);
    int32x4_t v54 = (uint16x8_t *)((char *)v52 - a2);
    uint16x8_t v56 = *v53;
    int32x4_t v55 = (uint16x8_t *)((char *)v53 + a2);
    uint16x8_t v58 = *v54;
    int64x2_t v57 = (uint16x8_t *)((char *)v54 - a2);
    uint16x8_t v59 = *v55;
    uint16x8_t v60 = *v57;
    int32x4_t v61 = (int16x8_t *)((char *)v55 - a2);
    int32x4_t v62 = (int16x8_t *)&v57->i8[a2];
    int16x8_t *v61 = vminq_s16((int16x8_t)vsqaddq_u16(v56, vrshrq_n_s16(vqaddq_s16(v22, v29), 4uLL)), v30);
    int32x4_t v63 = (int16x8_t *)((char *)v61 + a2);
    *int32x4_t v62 = vminq_s16((int16x8_t)vsqaddq_u16(v58, vrshrq_n_s16(vqsubq_s16(v22, v29), 4uLL)), v30);
    int32x4_t v64 = (int16x8_t *)((char *)v62 - a2);
    *int32x4_t v63 = vminq_s16((int16x8_t)vsqaddq_u16(v59, vrshrq_n_s16(vqaddq_s16(v23, v28), 4uLL)), v30);
    int32x4_t v65 = (uint16x8_t *)&v63->i8[a2];
    *int32x4_t v64 = vminq_s16((int16x8_t)vsqaddq_u16(v60, vrshrq_n_s16(vqsubq_s16(v23, v28), 4uLL)), v30);
    int32x4_t v66 = (uint16x8_t *)((char *)v64 - a2);
    uint16x8_t v68 = *v65;
    int32x4_t v67 = (uint16x8_t *)((char *)v65 + a2);
    uint16x8_t v70 = *v66;
    int32x4_t v69 = (uint16x8_t *)((char *)v66 - a2);
    uint16x8_t v71 = *v67;
    uint16x8_t v72 = *v69;
    int32x4_t v73 = (int16x8_t *)((char *)v67 - a2);
    uint16x8_t v74 = (int16x8_t *)&v69->i8[a2];
    int16x8_t result = vminq_s16((int16x8_t)vsqaddq_u16(v68, vrshrq_n_s16(vqaddq_s16(v24, v27), 4uLL)), v30);
    *int32x4_t v73 = result;
    uint16x8_t v76 = (int16x8_t *)((char *)v73 + a2);
    int16x8_t *v74 = vminq_s16((int16x8_t)vsqaddq_u16(v70, vrshrq_n_s16(vqsubq_s16(v24, v27), 4uLL)), v30);
    uint64_t v77 = (int16x8_t *)((char *)v74 - a2);
    *uint16x8_t v76 = vminq_s16((int16x8_t)vsqaddq_u16(v71, vrshrq_n_s16(vqaddq_s16(v25, v26), 4uLL)), v30);
    a7 = (uint16x8_t *)&v76->i8[a2];
    *uint64_t v77 = vminq_s16((int16x8_t)vsqaddq_u16(v72, vrshrq_n_s16(vqsubq_s16(v25, v26), 4uLL)), v30);
    int32x4_t v11 = (uint16x8_t *)((char *)v77 - a2);
  }
  while ((uint64_t)v9 < (uint64_t)v10);
  return result;
}

double sub_224A8CE18(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A8BFC0(a3, 128);
    sub_224A8CA80(v5, v6, v7, v8, v9, (uint64_t)v10, v10, v11, v149);
    int16x8_t v15 = (_OWORD *)(v14 + 512);
    int v16 = 28;
    if (v17 < *v13) {
      goto LABEL_12;
    }
    sub_224A8BFC0((_OWORD *)(v12 + 16), 128);
    sub_224A8CA80(v18, v19, v20, v21, v22, (uint64_t)v23, v23 + 32, v24, v150);
    int16x8_t v15 = (_OWORD *)(v27 + 1024);
    int v16 = 24;
    if (v28 < *v26) {
      goto LABEL_12;
    }
    sub_224A8BFC0((_OWORD *)(v25 + 32), 128);
    sub_224A8CA80(v29, v30, v31, v32, v33, (uint64_t)v34, v34 + 64, v35, v150);
    int16x8_t v15 = (_OWORD *)(v38 + 1536);
    int v16 = 20;
    if (v39 < *v37) {
      goto LABEL_12;
    }
    sub_224A8BFC0((_OWORD *)(v36 + 48), 128);
    sub_224A8CA80(v40, v41, v42, v43, v44, (uint64_t)v45, v45 + 96, v46, v150);
    int16x8_t v15 = (_OWORD *)(v49 + 2048);
    int v16 = 16;
    if (v50 < *v48) {
      goto LABEL_12;
    }
    sub_224A8BFC0((_OWORD *)(v47 + 64), 128);
    sub_224A8CA80(v51, v52, v53, v54, v55, (uint64_t)v56, v56 + 128, v57, v150);
    int16x8_t v15 = (_OWORD *)(v60 + 2560);
    int v16 = 12;
    if (v61 < *v59) {
      goto LABEL_12;
    }
    sub_224A8BFC0((_OWORD *)(v58 + 80), 128);
    sub_224A8CA80(v62, v63, v64, v65, v66, (uint64_t)v67, v67 + 160, v68, v150);
    int16x8_t v15 = (_OWORD *)(v71 + 3072);
    int v16 = 8;
    if (v72 < *v70
      || (sub_224A8BFC0((_OWORD *)(v69 + 96), 128),
          sub_224A8CA80(v73, v74, v75, v76, v77, (uint64_t)v78, v78 + 192, v79, v150),
          int16x8_t v15 = (_OWORD *)(v82 + 3584),
          int v16 = 4,
          v83 < *v81))
    {
LABEL_12:
      do
      {
        BOOL v91 = __OFSUB__(v16, 2);
        v16 -= 2;
        *int16x8_t v15 = 0uLL;
        v15[1] = 0uLL;
        v15[2] = 0uLL;
        v15[3] = 0uLL;
        uint64_t v92 = v15 + 4;
        *uint64_t v92 = 0uLL;
        v92[1] = 0uLL;
        v92[2] = 0uLL;
        v92[3] = 0uLL;
        v92 += 4;
        *uint64_t v92 = 0uLL;
        v92[1] = 0uLL;
        v92[2] = 0uLL;
        v92[3] = 0uLL;
        v92 += 4;
        *uint64_t v92 = 0uLL;
        v92[1] = 0uLL;
        v92[2] = 0uLL;
        v92[3] = 0uLL;
        int16x8_t v15 = v92 + 4;
      }
      while (!((v16 < 0) ^ v91 | (v16 == 0)));
    }
    else
    {
      sub_224A8BFC0((_OWORD *)(v80 + 112), 128);
      sub_224A8CA80(v84, v85, v86, v87, v88, (uint64_t)v89, v89 + 224, v90, v150);
    }
    sub_224A7F0E4();
    sub_224A8CC38((uint64_t)v93, v94, v95, v96, v97, v98, v93, v99, v150);
    sub_224A7F0E4();
    sub_224A8CC38((uint64_t)v100, v101, v102, v103, v104, v105, v100 + 1, v106, v151);
    sub_224A7F0E4();
    sub_224A8CC38((uint64_t)v107, v108, v109, v110, v111, v112, v107 + 2, v113, v152);
    sub_224A7F0E4();
    sub_224A8CC38((uint64_t)v114, v115, v116, v117, v118, v119, v114 + 3, v120, v153);
    sub_224A7F0E4();
    sub_224A8CC38((uint64_t)v121, v122, v123, v124, v125, v126, v121 + 4, v127, v154);
    sub_224A7F0E4();
    sub_224A8CC38((uint64_t)v128, v129, v130, v131, v132, v133, v128 + 5, v134, v155);
    sub_224A7F0E4();
    sub_224A8CC38((uint64_t)v135, v136, v137, v138, v139, v140, v135 + 6, v141, v156);
    sub_224A7F0E4();
    *(void *)&double result = sub_224A8CC38((uint64_t)v142, v143, v144, v145, v146, v147, v142 + 7, v148, v157).u64[0];
  }
  else
  {
    vld1q_dup_f32(a3);
    *a3 = 0.0;
    sub_224A85FD4(a1, a2, (uint64_t)a3, a4, 64);
  }
  return result;
}

void sub_224A8D084(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A8C4C8(a3, 128);
    sub_224A8CA80(v4, v5, v6, v7, v8, (uint64_t)v9, v9, v10, v92);
    uint64_t v14 = (_OWORD *)(v13 + 512);
    int v15 = 28;
    if (v16 < *v12) {
      goto LABEL_12;
    }
    sub_224A8C4C8((_OWORD *)(v11 + 16), 128);
    sub_224A8CA80(v17, v18, v19, v20, v21, (uint64_t)v22, v22 + 32, v23, v93);
    uint64_t v14 = (_OWORD *)(v26 + 1024);
    int v15 = 24;
    if (v27 < *v25) {
      goto LABEL_12;
    }
    sub_224A8C4C8((_OWORD *)(v24 + 32), 128);
    sub_224A8CA80(v28, v29, v30, v31, v32, (uint64_t)v33, v33 + 64, v34, v94);
    uint64_t v14 = (_OWORD *)(v37 + 1536);
    int v15 = 20;
    if (v38 < *v36) {
      goto LABEL_12;
    }
    sub_224A8C4C8((_OWORD *)(v35 + 48), 128);
    sub_224A8CA80(v39, v40, v41, v42, v43, (uint64_t)v44, v44 + 96, v45, v95);
    uint64_t v14 = (_OWORD *)(v48 + 2048);
    int v15 = 16;
    if (v49 < *v47) {
      goto LABEL_12;
    }
    sub_224A8C4C8((_OWORD *)(v46 + 64), 128);
    sub_224A8CA80(v50, v51, v52, v53, v54, (uint64_t)v55, v55 + 128, v56, v96);
    uint64_t v14 = (_OWORD *)(v59 + 2560);
    int v15 = 12;
    if (v60 < *v58) {
      goto LABEL_12;
    }
    sub_224A8C4C8((_OWORD *)(v57 + 80), 128);
    sub_224A8CA80(v61, v62, v63, v64, v65, (uint64_t)v66, v66 + 160, v67, v97);
    uint64_t v14 = (_OWORD *)(v70 + 3072);
    int v15 = 8;
    if (v71 < *v69
      || (sub_224A8C4C8((_OWORD *)(v68 + 96), 128),
          sub_224A8CA80(v72, v73, v74, v75, v76, (uint64_t)v77, v77 + 192, v78, v98),
          uint64_t v14 = (_OWORD *)(v81 + 3584),
          int v15 = 4,
          v82 < *v80))
    {
LABEL_12:
      do
      {
        BOOL v90 = __OFSUB__(v15, 2);
        v15 -= 2;
        *uint64_t v14 = 0uLL;
        v14[1] = 0uLL;
        v14[2] = 0uLL;
        v14[3] = 0uLL;
        BOOL v91 = v14 + 4;
        *BOOL v91 = 0uLL;
        v91[1] = 0uLL;
        v91[2] = 0uLL;
        v91[3] = 0uLL;
        v91 += 4;
        *BOOL v91 = 0uLL;
        v91[1] = 0uLL;
        v91[2] = 0uLL;
        v91[3] = 0uLL;
        v91 += 4;
        *BOOL v91 = 0uLL;
        v91[1] = 0uLL;
        v91[2] = 0uLL;
        v91[3] = 0uLL;
        uint64_t v14 = v91 + 4;
      }
      while (!((v15 < 0) ^ v90 | (v15 == 0)));
    }
    else
    {
      sub_224A8C4C8((_OWORD *)(v79 + 112), 128);
      sub_224A8CA80(v83, v84, v85, v86, v87, (uint64_t)v88, v88 + 224, v89, v99);
    }
    sub_224A8A5FC();
    sub_224A8A5FC();
    sub_224A8A5FC();
    sub_224A8A5FC();
    sub_224A8A5FC();
    sub_224A8A5FC();
    sub_224A8A5FC();
    sub_224A8A5FC();
  }
  else
  {
    vld1q_dup_f32(a3);
    *a3 = 0.0;
    sub_224A85FD4(a1, a2, (uint64_t)a3, a4, 32);
  }
}

double sub_224A8D2D4(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A8A13C(a3, 128);
    uint64_t v7 = (_OWORD *)(v6 + 256);
    int v8 = 28;
    if (v9 < v10) {
      goto LABEL_12;
    }
    sub_224A8A13C((_OWORD *)(v5 + 16), 128);
    uint64_t v7 = (_OWORD *)(v12 + 512);
    int v8 = 24;
    if (v13 < v14) {
      goto LABEL_12;
    }
    sub_224A8A13C((_OWORD *)(v11 + 32), 128);
    uint64_t v7 = (_OWORD *)(v16 + 768);
    int v8 = 20;
    if (v17 < v18) {
      goto LABEL_12;
    }
    sub_224A8A13C((_OWORD *)(v15 + 48), 128);
    uint64_t v7 = (_OWORD *)(v20 + 1024);
    int v8 = 16;
    if (v21 < v22) {
      goto LABEL_12;
    }
    sub_224A8A13C((_OWORD *)(v19 + 64), 128);
    uint64_t v7 = (_OWORD *)(v24 + 1280);
    int v8 = 12;
    if (v25 < v26
      || (sub_224A8A13C((_OWORD *)(v23 + 80), 128), v7 = (_OWORD *)(v28 + 1536), int v8 = 8, v29 < v30)
      || (sub_224A8A13C((_OWORD *)(v27 + 96), 128), v7 = (_OWORD *)(v32 + 1792), int v8 = 4, v33 < v34))
    {
LABEL_12:
      do
      {
        BOOL v35 = __OFSUB__(v8, 4);
        v8 -= 4;
        _OWORD *v7 = 0uLL;
        v7[1] = 0uLL;
        v7[2] = 0uLL;
        v7[3] = 0uLL;
        uint64_t v36 = v7 + 4;
        _OWORD *v36 = 0uLL;
        v36[1] = 0uLL;
        v36[2] = 0uLL;
        v36[3] = 0uLL;
        v36 += 4;
        _OWORD *v36 = 0uLL;
        v36[1] = 0uLL;
        v36[2] = 0uLL;
        v36[3] = 0uLL;
        v36 += 4;
        _OWORD *v36 = 0uLL;
        v36[1] = 0uLL;
        v36[2] = 0uLL;
        v36[3] = 0uLL;
        uint64_t v7 = v36 + 4;
      }
      while (!((v8 < 0) ^ v35 | (v8 == 0)));
    }
    else
    {
      sub_224A8A13C((_OWORD *)(v31 + 112), 128);
    }
    sub_224A7F0E4();
    sub_224A8CC38((uint64_t)v37, v38, v39, v40, v41, v42, v37, v43, v65);
    sub_224A7F0E4();
    sub_224A8CC38((uint64_t)v44, v45, v46, v47, v48, v49, v44 + 1, v50, v66);
    sub_224A7F0E4();
    sub_224A8CC38((uint64_t)v51, v52, v53, v54, v55, v56, v51 + 2, v57, v67);
    sub_224A7F0E4();
    *(void *)&double result = sub_224A8CC38((uint64_t)v58, v59, v60, v61, v62, v63, v58 + 3, v64, v68).u64[0];
  }
  else
  {
    vld1q_dup_f32(a3);
    *a3 = 0.0;
    sub_224A85F9C(a1, a2, (uint64_t)a3, a4, 64);
  }
  return result;
}

uint16x8_t *sub_224A8D494(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A8BFC0(a3, 64);
    sub_224A8CA80(v5, v6, v7, v8, (uint64_t)v9, v10, v9, v11, v87);
    int v18 = (_OWORD *)(v16 + 512);
    int v19 = 12;
    if ((int)v15 < *v17) {
      goto LABEL_8;
    }
    sub_224A8BFC0(v14 + 1, 64);
    sub_224A8CA80(v20, v21, v22, v23, (uint64_t)v24, v25, v24 + 32, v26, v88);
    int v18 = (_OWORD *)(v16 + 1024);
    int v19 = 8;
    if ((int)v15 < *v27
      || (sub_224A8BFC0(v14 + 2, 64),
          sub_224A8CA80(v28, v29, v30, v31, (uint64_t)v32, v33, v32 + 64, v34, v89),
          int v18 = (_OWORD *)(v16 + 1536),
          int v19 = 4,
          (int)v15 < *v35))
    {
LABEL_8:
      do
      {
        BOOL v43 = __OFSUB__(v19, 2);
        v19 -= 2;
        *int v18 = 0uLL;
        v18[1] = 0uLL;
        v18[2] = 0uLL;
        v18[3] = 0uLL;
        uint64_t v44 = v18 + 4;
        *uint64_t v44 = 0uLL;
        v44[1] = 0uLL;
        v44[2] = 0uLL;
        v44[3] = 0uLL;
        v44 += 4;
        *uint64_t v44 = 0uLL;
        v44[1] = 0uLL;
        v44[2] = 0uLL;
        v44[3] = 0uLL;
        v44 += 4;
        *uint64_t v44 = 0uLL;
        v44[1] = 0uLL;
        v44[2] = 0uLL;
        v44[3] = 0uLL;
        int v18 = v44 + 4;
      }
      while (!((v19 < 0) ^ v43 | (v19 == 0)));
    }
    else
    {
      sub_224A8BFC0(v14 + 3, 64);
      sub_224A8CA80(v36, v37, v38, v39, (uint64_t)v40, v41, v40 + 96, v42, v90);
    }
    uint64_t v45 = sub_224A88094(v12, v13, (uint64_t)v14, v15, v16, (uint64_t (*)(void))sub_224A79AA0);
    uint64_t v51 = sub_224A88094(v45, v46, v47, v48, v49, v50);
    uint64_t v57 = sub_224A88094(v51, v52, v53, v54, v55, v56);
    uint64_t v63 = sub_224A88094(v57, v58, v59, v60, v61, v62);
    uint64_t v69 = sub_224A88094(v63, v64, v65, v66, v67, v68);
    uint64_t v75 = sub_224A88094(v69, v70, v71, v72, v73, v74);
    uint64_t v81 = sub_224A88094(v75, v76, v77, v78, v79, v80);
    return (uint16x8_t *)sub_224A88094(v81, v82, v83, v84, v85, v86);
  }
  else
  {
    vld1q_dup_f32(a3);
    *a3 = 0.0;
    return sub_224A85FD4(a1, a2, (uint64_t)a3, a4, 16);
  }
}

double sub_224A8D634(uint16x8_t *a1, uint64_t a2, float *a3, uint64_t a4)
{
  if (a4)
  {
    sub_224A87F64((uint64_t (*)(void))sub_224A871F4, a3, 128);
    uint64_t v8 = (_OWORD *)(v7 + 128);
    int v9 = 28;
    if (v10 < v11) {
      goto LABEL_12;
    }
    sub_224A87F64(v6, (_OWORD *)(v5 + 16), 128);
    uint64_t v8 = (_OWORD *)(v14 + 256);
    int v9 = 24;
    if (v15 < v16) {
      goto LABEL_12;
    }
    sub_224A87F64(v13, (_OWORD *)(v12 + 32), 128);
    uint64_t v8 = (_OWORD *)(v19 + 384);
    int v9 = 20;
    if (v20 < v21) {
      goto LABEL_12;
    }
    sub_224A87F64(v18, (_OWORD *)(v17 + 48), 128);
    uint64_t v8 = (_OWORD *)(v24 + 512);
    int v9 = 16;
    if (v25 < v26) {
      goto LABEL_12;
    }
    sub_224A87F64(v23, (_OWORD *)(v22 + 64), 128);
    uint64_t v8 = (_OWORD *)(v29 + 640);
    int v9 = 12;
    if (v30 < v31
      || (sub_224A87F64(v28, (_OWORD *)(v27 + 80), 128), uint64_t v8 = (_OWORD *)(v34 + 768), v9 = 8, v35 < v36)
      || (sub_224A87F64(v33, (_OWORD *)(v32 + 96), 128), uint64_t v8 = (_OWORD *)(v39 + 896), v9 = 4, v40 < v41))
    {
LABEL_12:
      do
      {
        BOOL v42 = __OFSUB__(v9, 4);
        v9 -= 4;
        _OWORD *v8 = 0uLL;
        v8[1] = 0uLL;
        v8[2] = 0uLL;
        v8[3] = 0uLL;
        BOOL v43 = v8 + 4;
        *BOOL v43 = 0uLL;
        v43[1] = 0uLL;
        v43[2] = 0uLL;
        v43[3] = 0uLL;
        uint64_t v8 = v43 + 4;
      }
      while (!((v9 < 0) ^ v42 | (v9 == 0)));
    }
    else
    {
      sub_224A87F64(v38, (_OWORD *)(v37 + 112), 128);
    }
    sub_224A7F0E4();
    sub_224A8CC38((uint64_t)v44, v45, v46, v47, v48, v49, v44, v50, v58);
    sub_224A7F0E4();
    *(void *)&double result = sub_224A8CC38((uint64_t)v51, v52, v53, v54, v55, v56, v51 + 1, v57, v59).u64[0];
  }
  else
  {
    vld1q_dup_f32(a3);
    *a3 = 0.0;
    sub_224A85F58(a1, a2, (uint64_t)a3, a4, 64);
  }
  return result;
}

__n64 sub_224A8D7C0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v4 = (a3 >> 4) | ((((a3 ^ (a3 >> 3)) ^ ((a3 >> 12) ^ (a3 >> 1))) & 0xF) << 12);
  result.n64_u16[0] = *(_WORD *)(a4 + 2 * ((v4 >> 2) & 0x7FF));
  result.n64_u16[1] = *(_WORD *)(a4 + 2 * ((v4 >> 3) & 0x7FF));
  result.n64_u16[2] = *(_WORD *)(a4 + 2 * ((v4 >> 4) & 0x7FF));
  result.n64_u16[3] = *(_WORD *)(a4 + 2 * ((unsigned __int16)v4 >> 5));
  return result;
}

int16x4_t sub_224A8D86C(int16x4_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  unint64_t v6 = (a4 >> 2) | ((((a4 ^ (a4 >> 3)) ^ ((a4 >> 12) ^ (a4 >> 1))) & 3) << 14);
  a1.i16[0] = *(_WORD *)(a5 + 2 * ((v6 >> 4) & 0x7FF));
  a1.i16[1] = *(_WORD *)(a5 + 2 * ((unsigned __int16)v6 >> 5));
  return vrshl_s16(a1, v5);
}

int16x4_t sub_224A8D8B0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = (a3 >> 4) | ((((a3 ^ (a3 >> 3)) ^ ((a3 >> 12) ^ (a3 >> 1))) & 0xF) << 12);
  v6.i16[0] = *(_WORD *)(a4 + 2 * ((v5 >> 2) & 0x7FF));
  v6.i16[1] = *(_WORD *)(a4 + 2 * ((v5 >> 3) & 0x7FF));
  v6.i16[2] = *(_WORD *)(a4 + 2 * ((v5 >> 4) & 0x7FF));
  v6.i16[3] = *(_WORD *)(a4 + 2 * ((unsigned __int16)v5 >> 5));
  return vrshl_s16(v6, v4);
}

int8x16_t sub_224A8D90C@<Q0>(unint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, signed __int32 a4@<W5>, signed __int32 a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t result@<Q0>, int8x16_t a9@<Q1>)
{
  do
  {
    uint64_t v13 = (a1 >> 6) & 0x7FF;
    a1 = a1 >> 1;
    __n64 result = vextq_s8(result, result, 2uLL);
    signed __int32 v11 = ((a9.i32[0] + v11 * a3 + a7) >> a6) + ((*(__int16 *)(a2 + 2 * v13) + v10) >> v9);
    if (v11 > a4) {
      signed __int32 v11 = a4;
    }
    if (v11 < a5) {
      signed __int32 v11 = a5;
    }
    BOOL v14 = __OFSUB__(v12--, 1);
    a9 = vextq_s8(a9, a9, 4uLL);
    result.i16[7] = v11;
  }
  while (!((v12 < 0) ^ v14 | (v12 == 0)));
  return result;
}

int8x16_t sub_224A8D95C@<Q0>(unint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t result@<Q0>, int8x16_t a9@<Q1>)
{
  do
  {
    uint64_t v15 = (a1 >> 6) & 0x7FF;
    a1 = a1 >> 1;
    __n64 result = vextq_s8(result, result, 2uLL);
    unsigned __int32 v16 = a9.i32[0] + v13 * a3 + v11 * v14;
    int v13 = v11;
    int v11 = ((int)(v16 + a7) >> a6) + ((*(__int16 *)(a2 + 2 * v15) + v10) >> v9);
    if (v11 > a4) {
      int v11 = a4;
    }
    if (v11 < a5) {
      int v11 = a5;
    }
    BOOL v17 = __OFSUB__(v12--, 1);
    a9 = vextq_s8(a9, a9, 4uLL);
    result.i16[7] = v11;
  }
  while (!((v12 < 0) ^ v17 | (v12 == 0)));
  return result;
}

int8x16_t sub_224A8D9B4@<Q0>(unint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t result@<Q0>, int8x16_t a9@<Q1>)
{
  do
  {
    uint64_t v17 = (a1 >> 6) & 0x7FF;
    a1 = a1 >> 1;
    __n64 result = vextq_s8(result, result, 2uLL);
    unsigned __int32 v18 = a9.i32[0] + v14 * a3 + v13 * v15 + v11 * v16;
    int v14 = v13;
    int v13 = v11;
    int v11 = ((int)(v18 + a7) >> a6) + ((*(__int16 *)(a2 + 2 * v17) + v10) >> v9);
    if (v11 > a4) {
      int v11 = a4;
    }
    if (v11 < a5) {
      int v11 = a5;
    }
    BOOL v19 = __OFSUB__(v12--, 1);
    a9 = vextq_s8(a9, a9, 4uLL);
    result.i16[7] = v11;
  }
  while (!((v12 < 0) ^ v19 | (v12 == 0)));
  return result;
}

double sub_224A8DA14()
{
  *(void *)&double result = vextq_s8(v0, v1, 0xEuLL).u64[0];
  return result;
}

uint64_t sub_224A8DA48()
{
  double v0 = sub_224A8DA14();
  return sub_224A8DA5C(v0);
}

int8x16_t *sub_224A8DA5C@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, signed __int32 a4@<W5>, signed __int32 a5@<W6>, char a6@<W7>, int a7@<W8>, int16x8_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  unint64_t v10 = (a1 >> 4) | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 12);
  a8.i16[5] = *(_WORD *)(a2 + 2 * ((v10 >> 2) & 0x7FF));
  a8.i16[6] = *(_WORD *)(a2 + 2 * ((v10 >> 3) & 0x7FF));
  a8.i16[7] = *(_WORD *)(a2 + 2 * ((v10 >> 4) & 0x7FF));
  int8x16_t v11 = sub_224A8D90C(2 * v10, a2, a3, a4, a5, a6, a7, (int8x16_t)vrshlq_s16(a8, v9), vextq_s8(a9, a9, 0xCuLL));
  int8x16_t v20 = sub_224A8D90C(v12 | ((((v12 ^ (v12 >> 3)) ^ ((v12 >> 12) ^ (v12 >> 1))) & 0xF) << 16), v13, v14, v15, v16, v17, v18, v11, v19);
  *int v21 = v20;
  return v21 + 1;
}

uint64_t sub_224A8DAFC()
{
  double v0 = sub_224A8DA14();
  return sub_224A8DB08(v0);
}

int8x16_t *sub_224A8DB08@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, signed __int32 a4@<W5>, signed __int32 a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A8D90C(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A8D90C(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  *int8x16_t v19 = v18;
  return v19 + 1;
}

uint64_t sub_224A8DB70()
{
  double v0 = sub_224A8DA14();
  return sub_224A8DB7C(v0);
}

int8x16_t *sub_224A8DB7C@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, signed __int32 a4@<W5>, signed __int32 a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A8D90C(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A8D90C(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  v21.i16[0] = *(_WORD *)(v20 + 2 * ((v19 >> 6) & 0x7FF));
  *(int16x4_t *)v23.i8 = vrshl_s16(v21, v22);
  int8x16_t *v24 = vextq_s8(v18, v23, 2uLL);
  return v24 + 1;
}

int8x16_t *sub_224A8DBFC()
{
  sub_224A8DA14();
  return sub_224A8DA5C(v3, v4, v5, v6, v7, v8, v9, *v0, (int8x16_t)vmlal_s16(v1, *(int16x4_t *)v0->i8, v2));
}

int8x16_t *sub_224A8DC20()
{
  sub_224A8DA14();
  return sub_224A8DB08(v3, v4, v5, v6, v7, v8, v9, *v0, (int8x16_t)vmlal_s16(v1, *(int16x4_t *)v0->i8, v2));
}

int8x16_t *sub_224A8DC3C()
{
  sub_224A8DA14();
  return sub_224A8DB7C(v3, v4, v5, v6, v7, v8, v9, *v0, (int8x16_t)vmlal_s16(v1, *(int16x4_t *)v0->i8, v2));
}

int8x16_t *sub_224A8DC58()
{
  sub_224A8DA14();
  int16x8_t v1 = vrshrq_n_s16(vpaddq_s16(*v0, v0[1]), 1uLL);
  return sub_224A8DA5C(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vmlal_s16(v2, *(int16x4_t *)v1.i8, v3));
}

int8x16_t *sub_224A8DC84()
{
  sub_224A8DA14();
  int8x16_t v1 = (int8x16_t)vrshrq_n_s16(vpaddq_s16(*v0, v0[1]), 1uLL);
  return sub_224A8DB08(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vmlal_s16(v2, *(int16x4_t *)v1.i8, v3));
}

int8x16_t *sub_224A8DCA8()
{
  sub_224A8DA14();
  int8x16_t v1 = (int8x16_t)vrshrq_n_s16(vpaddq_s16(*v0, v0[1]), 1uLL);
  return sub_224A8DD6C(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vmlal_s16(v2, *(int16x4_t *)v1.i8, v3));
}

int8x16_t *sub_224A8DCCC()
{
  sub_224A8DA14();
  int16x8_t v1 = vrshrq_n_s16(vaddq_s16(vpaddq_s16(*(int16x8_t *)v0, *(int16x8_t *)(v0 + 16)), vpaddq_s16(*(int16x8_t *)(v0 + 164), *(int16x8_t *)(v0 + 180))), 2uLL);
  return sub_224A8DA5C(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vmlal_s16(v2, *(int16x4_t *)v1.i8, v3));
}

int8x16_t *sub_224A8DD08()
{
  sub_224A8DA14();
  int8x16_t v1 = (int8x16_t)vrshrq_n_s16(vaddq_s16(vpaddq_s16(*(int16x8_t *)v0, *(int16x8_t *)(v0 + 16)), vpaddq_s16(*(int16x8_t *)(v0 + 164), *(int16x8_t *)(v0 + 180))), 2uLL);
  return sub_224A8DB08(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vmlal_s16(v2, *(int16x4_t *)v1.i8, v3));
}

uint64_t sub_224A8DD3C()
{
  return sub_224A8DD6C();
}

int8x16_t *sub_224A8DD6C@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, signed __int32 a4@<W5>, signed __int32 a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A8D90C(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  unint64_t v11 = v10 >> 3;
  v13.i16[0] = *(_WORD *)(v12 + 2 * ((v11 >> 3) & 0x7FF));
  v13.i16[1] = *(_WORD *)(v12 + 2 * ((v11 >> 4) & 0x7FF));
  v13.i16[2] = *(_WORD *)(v12 + 2 * ((unsigned __int16)v11 >> 5));
  *(int16x4_t *)v15.i8 = vrshl_s16(v13, v14);
  int8x16_t *v16 = vextq_s8(v9, v15, 0xEuLL);
  return v16 + 1;
}

double sub_224A8DDD8(uint64_t a1)
{
  *(void *)&double result = vextq_s8(v1, *(int8x16_t *)(a1 - 148), 2uLL).u64[0];
  return result;
}

uint64_t sub_224A8DEBC(uint64_t a1)
{
  double v1 = sub_224A8DDD8(a1);
  return sub_224A8DED8(v1);
}

int8x16_t *sub_224A8DED8@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int16x8_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  unint64_t v10 = (a1 >> 4) | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 12);
  a8.i16[5] = *(_WORD *)(a2 + 2 * ((v10 >> 2) & 0x7FF));
  a8.i16[6] = *(_WORD *)(a2 + 2 * ((v10 >> 3) & 0x7FF));
  a8.i16[7] = *(_WORD *)(a2 + 2 * ((v10 >> 4) & 0x7FF));
  int8x16_t v11 = sub_224A8D95C(2 * v10, a2, a3, a4, a5, a6, a7, (int8x16_t)vrshlq_s16(a8, v9), vextq_s8(a9, a9, 0xCuLL));
  int8x16_t v20 = sub_224A8D95C(v12 | ((((v12 ^ (v12 >> 3)) ^ ((v12 >> 12) ^ (v12 >> 1))) & 0xF) << 16), v13, v14, v15, v16, v17, v18, v11, v19);
  *int16x4_t v21 = v20;
  return v21 + 1;
}

uint64_t sub_224A8DF7C(uint64_t a1)
{
  double v1 = sub_224A8DDD8(a1);
  return sub_224A8DF88(v1);
}

int8x16_t *sub_224A8DF88@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A8D95C(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A8D95C(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  *int8x16_t v19 = v18;
  return v19 + 1;
}

uint64_t sub_224A8DFF0(uint64_t a1)
{
  double v1 = sub_224A8DDD8(a1);
  return sub_224A8DFFC(v1);
}

int8x16_t *sub_224A8DFFC@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A8D95C(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A8D95C(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  v21.i16[0] = *(_WORD *)(v20 + 2 * ((v19 >> 6) & 0x7FF));
  *(int16x4_t *)v23.i8 = vrshl_s16(v21, v22);
  int8x16_t *v24 = vextq_s8(v18, v23, 2uLL);
  return v24 + 1;
}

int8x16_t *sub_224A8E07C(uint64_t a1)
{
  sub_224A8DDD8(a1);
  return sub_224A8DED8(v4, v5, v6, v7, v8, v9, v10, *v1, (int8x16_t)vmlal_s16(v3, *(int16x4_t *)v1->i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v2, 12))));
}

int8x16_t *sub_224A8E0B0(uint64_t a1)
{
  sub_224A8DDD8(a1);
  return sub_224A8DF88(v4, v5, v6, v7, v8, v9, v10, *v1, (int8x16_t)vmlal_s16(v3, *(int16x4_t *)v1->i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v2, 12))));
}

int8x16_t *sub_224A8E0D4(uint64_t a1)
{
  sub_224A8DDD8(a1);
  return sub_224A8DFFC(v4, v5, v6, v7, v8, v9, v10, *v1, (int8x16_t)vmlal_s16(v3, *(int16x4_t *)v1->i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v2, 12))));
}

int8x16_t *sub_224A8E0F8(uint64_t a1)
{
  sub_224A8DDD8(a1);
  int16x8_t v2 = vrshrq_n_s16(vpaddq_s16(*v1, v1[1]), 1uLL);
  return sub_224A8DED8(v5, v6, v7, v8, v9, v10, v11, v2, (int8x16_t)vmlal_s16(v4, *(int16x4_t *)v2.i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v3, 12))));
}

int8x16_t *sub_224A8E134(uint64_t a1)
{
  sub_224A8DDD8(a1);
  int8x16_t v2 = (int8x16_t)vrshrq_n_s16(vpaddq_s16(*v1, v1[1]), 1uLL);
  return sub_224A8DF88(v5, v6, v7, v8, v9, v10, v11, v2, (int8x16_t)vmlal_s16(v4, *(int16x4_t *)v2.i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v3, 12))));
}

int8x16_t *sub_224A8E160(uint64_t a1)
{
  sub_224A8DDD8(a1);
  int8x16_t v2 = (int8x16_t)vrshrq_n_s16(vpaddq_s16(*v1, v1[1]), 1uLL);
  return sub_224A8E24C(v5, v6, v7, v8, v9, v10, v11, v2, (int8x16_t)vmlal_s16(v4, *(int16x4_t *)v2.i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v3, 12))));
}

int8x16_t *sub_224A8E18C(uint64_t a1)
{
  sub_224A8DDD8(a1);
  int16x8_t v2 = vrshrq_n_s16(vaddq_s16(vpaddq_s16(*(int16x8_t *)v1, *(int16x8_t *)(v1 + 16)), vpaddq_s16(*(int16x8_t *)(v1 + 164), *(int16x8_t *)(v1 + 180))), 2uLL);
  return sub_224A8DED8(v5, v6, v7, v8, v9, v10, v11, v2, (int8x16_t)vmlal_s16(v4, *(int16x4_t *)v2.i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v3, 12))));
}

int8x16_t *sub_224A8E1D8(uint64_t a1)
{
  sub_224A8DDD8(a1);
  int8x16_t v2 = (int8x16_t)vrshrq_n_s16(vaddq_s16(vpaddq_s16(*(int16x8_t *)v1, *(int16x8_t *)(v1 + 16)), vpaddq_s16(*(int16x8_t *)(v1 + 164), *(int16x8_t *)(v1 + 180))), 2uLL);
  return sub_224A8DF88(v5, v6, v7, v8, v9, v10, v11, v2, (int8x16_t)vmlal_s16(v4, *(int16x4_t *)v2.i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v3, 12))));
}

uint64_t sub_224A8E214(uint64_t a1)
{
  return sub_224A8E24C();
}

int8x16_t *sub_224A8E24C@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A8D95C(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  unint64_t v11 = v10 >> 3;
  v13.i16[0] = *(_WORD *)(v12 + 2 * ((v11 >> 3) & 0x7FF));
  v13.i16[1] = *(_WORD *)(v12 + 2 * ((v11 >> 4) & 0x7FF));
  v13.i16[2] = *(_WORD *)(v12 + 2 * ((unsigned __int16)v11 >> 5));
  *(int16x4_t *)v15.i8 = vrshl_s16(v13, v14);
  int8x16_t *v16 = vextq_s8(v9, v15, 0xEuLL);
  return v16 + 1;
}

uint64_t sub_224A8E484()
{
  return sub_224A8E4A8();
}

int8x16_t *sub_224A8E4A8@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int16x8_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  unint64_t v10 = (a1 >> 4) | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 12);
  a8.i16[5] = *(_WORD *)(a2 + 2 * ((v10 >> 2) & 0x7FF));
  a8.i16[6] = *(_WORD *)(a2 + 2 * ((v10 >> 3) & 0x7FF));
  a8.i16[7] = *(_WORD *)(a2 + 2 * ((v10 >> 4) & 0x7FF));
  int8x16_t v11 = sub_224A8D9B4(2 * v10, a2, a3, a4, a5, a6, a7, (int8x16_t)vrshlq_s16(a8, v9), vextq_s8(a9, a9, 0xCuLL));
  int8x16_t v20 = sub_224A8D9B4(v12 | ((((v12 ^ (v12 >> 3)) ^ ((v12 >> 12) ^ (v12 >> 1))) & 0xF) << 16), v13, v14, v15, v16, v17, v18, v11, v19);
  *int16x4_t v21 = v20;
  return v21 + 1;
}

uint64_t sub_224A8E550()
{
  return sub_224A8E55C();
}

int8x16_t *sub_224A8E55C@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A8D9B4(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A8D9B4(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  *int8x16_t v19 = v18;
  return v19 + 1;
}

uint64_t sub_224A8E5C4()
{
  return sub_224A8E5D0();
}

int8x16_t *sub_224A8E5D0@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A8D9B4(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A8D9B4(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  v21.i16[0] = *(_WORD *)(v20 + 2 * ((v19 >> 6) & 0x7FF));
  *(int16x4_t *)v23.i8 = vrshl_s16(v21, v22);
  int8x16_t *v24 = vextq_s8(v18, v23, 2uLL);
  return v24 + 1;
}

int8x16_t *sub_224A8E650()
{
  sub_224A8E2B8();
  return sub_224A8E4A8(v3, v4, v5, v6, v7, v8, v9, *v0, (int8x16_t)vmlal_s16(v2, *(int16x4_t *)v0->i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v1, 8))));
}

int8x16_t *sub_224A8E68C()
{
  sub_224A8E2B8();
  return sub_224A8E55C(v3, v4, v5, v6, v7, v8, v9, *v0, (int8x16_t)vmlal_s16(v2, *(int16x4_t *)v0->i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v1, 8))));
}

int8x16_t *sub_224A8E6B0()
{
  sub_224A8E2B8();
  return sub_224A8E5D0(v3, v4, v5, v6, v7, v8, v9, *v0, (int8x16_t)vmlal_s16(v2, *(int16x4_t *)v0->i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v1, 8))));
}

int8x16_t *sub_224A8E6D4()
{
  sub_224A8E2B8();
  int16x8_t v1 = vrshrq_n_s16(vpaddq_s16(*v0, v0[1]), 1uLL);
  return sub_224A8E4A8(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vmlal_s16(v3, *(int16x4_t *)v1.i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v2, 8))));
}

int8x16_t *sub_224A8E718()
{
  sub_224A8E2B8();
  int8x16_t v1 = (int8x16_t)vrshrq_n_s16(vpaddq_s16(*v0, v0[1]), 1uLL);
  return sub_224A8E55C(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vmlal_s16(v3, *(int16x4_t *)v1.i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v2, 8))));
}

int8x16_t *sub_224A8E744()
{
  sub_224A8E2B8();
  int8x16_t v1 = (int8x16_t)vrshrq_n_s16(vpaddq_s16(*v0, v0[1]), 1uLL);
  return sub_224A8E838(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vmlal_s16(v3, *(int16x4_t *)v1.i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v2, 8))));
}

int8x16_t *sub_224A8E770()
{
  sub_224A8E2B8();
  int16x8_t v1 = vrshrq_n_s16(vaddq_s16(vpaddq_s16(*(int16x8_t *)v0, *(int16x8_t *)(v0 + 16)), vpaddq_s16(*(int16x8_t *)(v0 + 164), *(int16x8_t *)(v0 + 180))), 2uLL);
  return sub_224A8E4A8(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vmlal_s16(v3, *(int16x4_t *)v1.i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v2, 8))));
}

int8x16_t *sub_224A8E7C4()
{
  sub_224A8E2B8();
  int8x16_t v1 = (int8x16_t)vrshrq_n_s16(vaddq_s16(vpaddq_s16(*(int16x8_t *)v0, *(int16x8_t *)(v0 + 16)), vpaddq_s16(*(int16x8_t *)(v0 + 164), *(int16x8_t *)(v0 + 180))), 2uLL);
  return sub_224A8E55C(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vmlal_s16(v3, *(int16x4_t *)v1.i8, (int16x4_t)*(_OWORD *)&vmovl_s8(vdup_laneq_s8(v2, 8))));
}

uint64_t sub_224A8E800()
{
  return sub_224A8E838();
}

int8x16_t *sub_224A8E838@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A8D9B4(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  unint64_t v11 = v10 >> 3;
  v13.i16[0] = *(_WORD *)(v12 + 2 * ((v11 >> 3) & 0x7FF));
  v13.i16[1] = *(_WORD *)(v12 + 2 * ((v11 >> 4) & 0x7FF));
  v13.i16[2] = *(_WORD *)(v12 + 2 * ((unsigned __int16)v11 >> 5));
  *(int16x4_t *)v15.i8 = vrshl_s16(v13, v14);
  int8x16_t *v16 = vextq_s8(v9, v15, 0xEuLL);
  return v16 + 1;
}

uint64_t sub_224A8E8A4(uint64_t result, uint64_t a2, unsigned int a3, uint64_t a4)
{
  do
  {
    do
    {
      *(__n64 *)v4.i8 = sub_224A8D7C0(result, a2, a3, a4);
      int16x8_t v6 = vrshlq_s16(v4, v5);
      int16x8_t *v7 = v6;
      double result = (uint64_t)v7[1].i64;
    }
    while (v8 > 8);
    unsigned __int32 v9 = sub_224A8D86C(*(int16x4_t *)v6.i8, result, a2, a3, a4).u32[0];
    BOOL v11 = __OFSUB__(v10, 1);
    a2 = (v10 - 1);
    *uint64_t v12 = v9;
    double result = (uint64_t)(v12 + 1);
  }
  while (!(((int)a2 < 0) ^ v11 | (a2 == 0)));
  return result;
}

uint64_t sub_224A8E8E0(uint64_t result, uint64_t a2, unsigned int a3, uint64_t a4)
{
  do
  {
    do
    {
      *(__n64 *)v4.i8 = sub_224A8D7C0(result, a2, a3, a4);
      int16x8_t *v6 = vrshlq_s16(v4, v5);
      double result = (uint64_t)v6[1].i64;
    }
    while (v7 > 8);
    int16x4_t v8 = sub_224A8D8B0(result, a2, a3, a4);
    BOOL v10 = __OFSUB__(v9, 1);
    a2 = (v9 - 1);
    *BOOL v11 = v8;
    double result = (uint64_t)&v11[10] + 4;
  }
  while (!(((int)a2 < 0) ^ v10 | (a2 == 0)));
  return result;
}

uint64_t sub_224A8E920(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  return sub_224A8E92C(a1, a2, a3, a4, *v4);
}

int16x8_t *sub_224A8E92C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  *(__n64 *)v4.i8 = sub_224A8D7C0(a1, a2, a3, a4);
  return sub_224A8E934(v6, vrshlq_s16(v4, v5), v7, v8, v9, v10);
}

int16x8_t *sub_224A8E934(int16x8_t *a1, int16x8_t a2, int8x16_t a3, double a4, double a5, int8x16_t a6)
{
  int16x8_t v10 = (int16x8_t)vandq_s8(a6, a3);
  *a1 = vmaxq_s16(vminq_s16(vqaddq_s16(vqmovn_high_s32(vqmovn_s32(vrshlq_s32(vmull_s16(*(int16x4_t *)v10.i8, *(int16x4_t *)v8.i8), v9)), vrshlq_s32(vmull_high_s16(v10, v8), v9)), a2), v6), v7);
  return a1 + 1;
}

int16x8_t *sub_224A8E96C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  return sub_224A8E92C(a1, a2, a3, a4);
}

int16x8_t *sub_224A8E994(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  return sub_224A8E92C(a1, a2, a3, a4);
}

int16x8_t *sub_224A8E9AC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  *(int16x4_t *)v4.i8 = sub_224A8D8B0(a1, a2, a3, a4);
  return sub_224A8E934(v5, v4, v6, v7, v8, v9);
}

int16x8_t *sub_224A8E9DC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  *(int16x4_t *)v4.i8 = sub_224A8D8B0(a1, a2, a3, a4);
  return sub_224A8E934(v5, v4, v6, v7, v8, v9);
}

void sub_224A8E9FC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X16 }
}

uint64_t sub_224A8EA74(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  return sub_224A8E8A4(a1, 73, a3, a4);
}

_DWORD *sub_224A8EA88(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, const char *a5)
{
  vld1_dup_s8(a5);
  int16x8_t v5 = a5 + 1;
  vld1_dup_s8(v5++);
  vld1_dup_s8(v5);
  sub_224A8E8A4(a1, 3, a3, a4);
  do
  {
    sub_224A8DA48();
    sub_224A8DAFC();
    sub_224A8DAFC();
    sub_224A8DAFC();
    sub_224A8DAFC();
    sub_224A8DAFC();
    sub_224A8DAFC();
    sub_224A8DAFC();
    sub_224A8DAFC();
    uint64_t v6 = sub_224A8DB70();
    unsigned __int32 v11 = sub_224A8D86C(v10, v6, v7, v8, v9).u32[0];
    *uint64_t v12 = v11;
    double result = v12 + 1;
  }
  while (v14 > 1);
  return result;
}

uint64_t sub_224A8EAF8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t result = sub_224A8E8A4(a1, 3, a3, a4);
  do
  {
    uint64_t v5 = sub_224A8DEBC(result);
    uint64_t v6 = sub_224A8DF7C(v5);
    uint64_t v7 = sub_224A8DF7C(v6);
    uint64_t v8 = sub_224A8DF7C(v7);
    uint64_t v9 = sub_224A8DF7C(v8);
    uint64_t v10 = sub_224A8DF7C(v9);
    uint64_t v11 = sub_224A8DF7C(v10);
    uint64_t v12 = sub_224A8DF7C(v11);
    uint64_t v13 = sub_224A8DF7C(v12);
    uint64_t v14 = sub_224A8DFF0(v13);
    unsigned __int32 v19 = sub_224A8D86C(v18, v14, v15, v16, v17).u32[0];
    *uint64_t v20 = v19;
    uint64_t result = (uint64_t)(v20 + 1);
  }
  while (v21 > 1);
  return result;
}

_DWORD *sub_224A8EB58(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  sub_224A8E8A4(a1, 3, a3, a4);
  do
  {
    sub_224A8E484();
    sub_224A8E550();
    sub_224A8E550();
    sub_224A8E550();
    sub_224A8E550();
    sub_224A8E550();
    sub_224A8E550();
    sub_224A8E550();
    sub_224A8E550();
    uint64_t v4 = sub_224A8E5C4();
    unsigned __int32 v9 = sub_224A8D86C(v8, v4, v5, v6, v7).u32[0];
    unsigned __int32 *v10 = v9;
    uint64_t result = v10 + 1;
  }
  while (v12 > 1);
  return result;
}

void sub_224A8EBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X16 }
}

_DWORD *sub_224A8EC90(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, const char *a5)
{
  vld1_dup_s8(a5);
  sub_224A8E8A4(a1, 3, a3, a4);
  do
  {
    sub_224A8E920(v6, v9, v7, v8);
    v10.n128_u64[0] = -1;
    v10.n128_u64[1] = -1;
    sub_224A8E920(v11, v10, v12, v13);
    sub_224A8E920(v14, v15, v16, v17);
    sub_224A8E920(v18, v19, v20, v21);
    sub_224A8E920(v22, v23, v24, v25);
    sub_224A8E920(v26, v27, v28, v29);
    sub_224A8E920(v30, v31, v32, v33);
    sub_224A8E920(v34, v35, v36, v37);
    sub_224A8E920(v38, v39, v40, v41);
    uint64_t v46 = sub_224A8E920(v42, v45, v43, v44);
    v6.n128_u64[0] = (unint64_t)sub_224A8D86C(v50, v46, v47, v48, v49);
    v5 += 4;
    *uint64_t v51 = v6.n128_u32[0];
    uint64_t result = v51 + 1;
  }
  while (v53 > 1);
  return result;
}

_DWORD *sub_224A8ED1C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, const char *a5)
{
  vld1_dup_s8(a5);
  __n128 v6 = a5 + 1;
  vld1_dup_s8(v6++);
  vld1_dup_s8(v6);
  v6 += 2;
  vld1_dup_s8(v6);
  sub_224A8E8A4(a1, 3, a3, a4);
  do
  {
    sub_224A8DBFC();
    sub_224A8DC20();
    sub_224A8DC20();
    sub_224A8DC20();
    sub_224A8DC20();
    sub_224A8DC20();
    sub_224A8DC20();
    sub_224A8DC20();
    sub_224A8DC20();
    __n128 v7 = sub_224A8DC3C();
    unsigned __int32 v12 = sub_224A8D86C(v11, (uint64_t)v7, v8, v9, v10).u32[0];
    v5 += 4;
    *__n128 v13 = v12;
    uint64_t result = v13 + 1;
  }
  while (v15 > 1);
  return result;
}

uint64_t sub_224A8ED9C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t result = sub_224A8E8A4(a1, 3, a3, a4);
  do
  {
    __n128 v6 = sub_224A8E07C(result);
    __n128 v7 = sub_224A8E0B0((uint64_t)v6);
    uint64_t v8 = sub_224A8E0B0((uint64_t)v7);
    unsigned int v9 = sub_224A8E0B0((uint64_t)v8);
    uint64_t v10 = sub_224A8E0B0((uint64_t)v9);
    int16x4_t v11 = sub_224A8E0B0((uint64_t)v10);
    unsigned __int32 v12 = sub_224A8E0B0((uint64_t)v11);
    __n128 v13 = sub_224A8E0B0((uint64_t)v12);
    __n128 v14 = sub_224A8E0B0((uint64_t)v13);
    int v15 = sub_224A8E0D4((uint64_t)v14);
    unsigned __int32 v20 = sub_224A8D86C(v19, (uint64_t)v15, v16, v17, v18).u32[0];
    v4 += 4;
    *__n128 v21 = v20;
    uint64_t result = (uint64_t)(v21 + 1);
  }
  while (v22 > 1);
  return result;
}

_DWORD *sub_224A8EE00(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  sub_224A8E8A4(a1, 3, a3, a4);
  do
  {
    sub_224A8E650();
    sub_224A8E68C();
    sub_224A8E68C();
    sub_224A8E68C();
    sub_224A8E68C();
    sub_224A8E68C();
    sub_224A8E68C();
    sub_224A8E68C();
    sub_224A8E68C();
    uint64_t v5 = sub_224A8E6B0();
    unsigned __int32 v10 = sub_224A8D86C(v9, (uint64_t)v5, v6, v7, v8).u32[0];
    v4 += 4;
    *int16x4_t v11 = v10;
    uint64_t result = v11 + 1;
  }
  while (v13 > 1);
  return result;
}

void sub_224A8EE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X16 }
}

uint64_t sub_224A8EF3C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, const char *a5)
{
  vld1_dup_s8(a5);
  uint64_t result = sub_224A8E8E0(a1, 3, a3, a4);
  uint64_t v9 = 35;
  do
  {
    unsigned __int32 v10 = sub_224A8E96C(result, v9, v7, v8);
    __n128 v14 = sub_224A8E96C((uint64_t)v10, v11, v12, v13);
    uint64_t v18 = sub_224A8E96C((uint64_t)v14, v15, v16, v17);
    int v22 = sub_224A8E96C((uint64_t)v18, v19, v20, v21);
    __n128 v26 = sub_224A8E96C((uint64_t)v22, v23, v24, v25);
    __n128 v30 = sub_224A8E9AC((uint64_t)v26, v27, v28, v29);
    BOOL v32 = __OFSUB__(v31, 1);
    uint64_t v9 = (v31 - 1);
    v5 += 136;
    uint64_t result = (uint64_t)v30[4].i64 + 4;
  }
  while (!(((int)v9 < 0) ^ v32 | (v9 == 0)));
  return result;
}

uint64_t sub_224A8EFB0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, const char *a5)
{
  vld1_dup_s8(a5);
  uint64_t v6 = a5 + 1;
  vld1_dup_s8(v6++);
  vld1_dup_s8(v6);
  v6 += 2;
  vld1_dup_s8(v6);
  sub_224A8E8E0(a1, 3, a3, a4);
  do
  {
    sub_224A8DCCC();
    sub_224A8DD08();
    sub_224A8DD08();
    sub_224A8DD08();
    sub_224A8DD08();
    v5 += 136;
    uint64_t result = sub_224A8DD3C() + 68;
  }
  while (v8 > 1);
  return result;
}

uint64_t sub_224A8F018(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t result = sub_224A8E8E0(a1, 3, a3, a4);
  do
  {
    uint64_t v6 = sub_224A8E18C(result);
    unsigned int v7 = sub_224A8E1D8((uint64_t)v6);
    int v8 = sub_224A8E1D8((uint64_t)v7);
    uint64_t v9 = sub_224A8E1D8((uint64_t)v8);
    unsigned __int32 v10 = sub_224A8E1D8((uint64_t)v9);
    v4 += 136;
    uint64_t result = sub_224A8E214((uint64_t)v10) + 68;
  }
  while (v11 > 1);
  return result;
}

uint64_t sub_224A8F064(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  sub_224A8E8E0(a1, 3, a3, a4);
  do
  {
    sub_224A8E770();
    sub_224A8E7C4();
    sub_224A8E7C4();
    sub_224A8E7C4();
    sub_224A8E7C4();
    v4 += 136;
    uint64_t result = sub_224A8E800() + 68;
  }
  while (v6 > 1);
  return result;
}

void sub_224A8F0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X16 }
}

uint64_t sub_224A8F18C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, const char *a5)
{
  vld1_dup_s8(a5);
  uint64_t result = sub_224A8E8E0(a1, 3, a3, a4);
  uint64_t v9 = 70;
  do
  {
    unsigned __int32 v10 = sub_224A8E994(result, v9, v7, v8);
    __n128 v14 = sub_224A8E994((uint64_t)v10, v11, v12, v13);
    uint64_t v18 = sub_224A8E994((uint64_t)v14, v15, v16, v17);
    int v22 = sub_224A8E994((uint64_t)v18, v19, v20, v21);
    __n128 v26 = sub_224A8E994((uint64_t)v22, v23, v24, v25);
    __n128 v30 = sub_224A8E9DC((uint64_t)v26, v27, v28, v29);
    BOOL v32 = __OFSUB__(v31, 1);
    uint64_t v9 = (v31 - 1);
    v5 -= 28;
    uint64_t result = (uint64_t)v30[4].i64 + 4;
  }
  while (!(((int)v9 < 0) ^ v32 | (v9 == 0)));
  return result;
}

__int8 *sub_224A8F200(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, const char *a5)
{
  vld1_dup_s8(a5);
  int v6 = a5 + 1;
  vld1_dup_s8(v6++);
  vld1_dup_s8(v6);
  v6 += 2;
  vld1_dup_s8(v6);
  sub_224A8E8E0(a1, 3, a3, a4);
  do
  {
    sub_224A8DC58();
    sub_224A8DC84();
    sub_224A8DC84();
    sub_224A8DC84();
    sub_224A8DC84();
    v5 -= 28;
    uint64_t result = &sub_224A8DCA8()[4].i8[4];
  }
  while (v8 > 1);
  return result;
}

__int8 *sub_224A8F268(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t result = (__int8 *)sub_224A8E8E0(a1, 3, a3, a4);
  do
  {
    int v6 = sub_224A8E0F8((uint64_t)result);
    unsigned int v7 = sub_224A8E134((uint64_t)v6);
    int v8 = sub_224A8E134((uint64_t)v7);
    uint64_t v9 = sub_224A8E134((uint64_t)v8);
    unsigned __int32 v10 = sub_224A8E134((uint64_t)v9);
    v4 -= 28;
    uint64_t result = &sub_224A8E160((uint64_t)v10)[4].i8[4];
  }
  while (v11 > 1);
  return result;
}

__int8 *sub_224A8F2B4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  sub_224A8E8E0(a1, 3, a3, a4);
  do
  {
    sub_224A8E6D4();
    sub_224A8E718();
    sub_224A8E718();
    sub_224A8E718();
    sub_224A8E718();
    v4 -= 28;
    uint64_t result = &sub_224A8E744()[4].i8[4];
  }
  while (v6 > 1);
  return result;
}

void sub_224A8F584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  __asm { BR              X11 }
}

__int8 *sub_224A8F6B0()
{
  do
  {
    sub_224A8F338();
    *uint64_t v13 = vminq_u16(vmaxq_u16(vsqaddq_u16(v7, vqrdmulhq_s16(v3, (int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v0.i8), v2))), v11), v12);
    v13[1] = vminq_u16(vmaxq_u16(vsqaddq_u16(v8, vqrdmulhq_s16(v4, (int16x8_t)vshlq_u16(vmovl_high_u8(v0), v2))), v11), v12);
    v13[2] = vminq_u16(vmaxq_u16(vsqaddq_u16(v9, vqrdmulhq_s16(v5, (int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v1.i8), v2))), v11), v12);
    v13[3] = vminq_u16(vmaxq_u16(vsqaddq_u16(v10, vqrdmulhq_s16(v6, (int16x8_t)vshlq_u16(vmovl_high_u8(v1), v2))), v11), v12);
    uint64_t result = &v13->i8[v14];
  }
  while (v16 > 1);
  return result;
}

__int8 *sub_224A8F758()
{
  do
  {
    sub_224A8F338();
    int16x8_t v11 = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_s16(vmull_s16(*(int16x4_t *)v4.i8, *(int16x4_t *)v1.i8), *(int16x4_t *)v8.i8, *(int16x4_t *)v0.i8), 5uLL), vmlal_high_s16(vmull_high_s16(v4, v1), v8, v0), 5uLL);
    int16x8_t v12 = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_s16(vmull_s16(*(int16x4_t *)v5.i8, *(int16x4_t *)v1.i8), *(int16x4_t *)v9.i8, *(int16x4_t *)v0.i8), 5uLL), vmlal_high_s16(vmull_high_s16(v5, v1), v9, v0), 5uLL);
    int16x8_t v13 = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_s16(vmull_s16(*(int16x4_t *)v6.i8, *(int16x4_t *)v1.i8), *(int16x4_t *)v10.i8, *(int16x4_t *)v0.i8), 5uLL), vmlal_high_s16(vmull_high_s16(v6, v1), v10, v0), 5uLL);
    uint16x8_t v25 = vminq_u16(vmaxq_u16(vsqaddq_u16(v19, vqrdmulhq_s16(vmaxq_s16(vminq_s16(vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_s16(vmull_s16(*(int16x4_t *)v3.i8, *(int16x4_t *)v1.i8), *(int16x4_t *)v7.i8, *(int16x4_t *)v0.i8), 5uLL), vmlal_high_s16(vmull_high_s16(v3, v1), v7, v0), 5uLL), v14), v15), (int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v16.i8), v18))), v23),
            v24);
    int16x8_t v0 = vdupq_lane_s16(v26, 0);
    int16x8_t v1 = vdupq_lane_s16(v26, 1);
    *uint64_t v27 = v25;
    v27[1] = vminq_u16(vmaxq_u16(vsqaddq_u16(v20, vqrdmulhq_s16(vmaxq_s16(vminq_s16(v11, v14), v15), (int16x8_t)vshlq_u16(vmovl_high_u8(v16), v18))), v23), v24);
    v27[2] = vminq_u16(vmaxq_u16(vsqaddq_u16(v21, vqrdmulhq_s16(vmaxq_s16(vminq_s16(v12, v14), v15), (int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v17.i8), v18))), v23), v24);
    v27[3] = vminq_u16(vmaxq_u16(vsqaddq_u16(v22, vqrdmulhq_s16(vmaxq_s16(vminq_s16(v13, v14), v15), (int16x8_t)vshlq_u16(vmovl_high_u8(v17), v18))), v23), v24);
    uint64_t result = &v27->i8[v28];
  }
  while (v30 > 1);
  if (v2 > 2) {
    return sub_224A8F6B0();
  }
  return result;
}

__int8 *sub_224A8F898()
{
  do
  {
    sub_224A8F338();
    *(int16x4_t *)v8.i8 = vmax_s16(vmin_s16(vqrshrn_n_s32(vmlal_s16(vmull_s16(v0, v1), v2, v3), 5uLL), v5), v7);
    *uint16x8_t v19 = vminq_u16(vmaxq_u16(vsqaddq_u16(v13, vqrdmulhq_s16(v8, (int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v4.i8), v9))), v17), v18);
    v19[1] = vminq_u16(vmaxq_u16(vsqaddq_u16(v14, vqrdmulhq_s16(v10, (int16x8_t)vshlq_u16(vmovl_high_u8(v4), v9))), v17), v18);
    v19[2] = vminq_u16(vmaxq_u16(vsqaddq_u16(v15, vqrdmulhq_s16(v11, (int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v6.i8), v9))), v17), v18);
    v19[3] = vminq_u16(vmaxq_u16(vsqaddq_u16(v16, vqrdmulhq_s16(v12, (int16x8_t)vshlq_u16(vmovl_high_u8(v6), v9))), v17), v18);
    uint64_t result = &v19->i8[v20];
  }
  while (v22 > 1);
  return result;
}

__int8 *sub_224A8F95C@<X0>(int16x4_t *a1@<X8>)
{
  do
  {
    int16x4_t v3 = *a1;
    sub_224A8F338();
    int16x8_t v18 = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_s16(vmull_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)v2.i8), *(int16x4_t *)v15.i8, *(int16x4_t *)v1.i8), 5uLL), vmlal_high_s16(vmull_high_s16(v12, v2), v15, v1), 5uLL);
    int16x8_t v19 = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_s16(vmull_s16(*(int16x4_t *)v13.i8, *(int16x4_t *)v2.i8), *(int16x4_t *)v16.i8, *(int16x4_t *)v1.i8), 5uLL), vmlal_high_s16(vmull_high_s16(v13, v2), v16, v1), 5uLL);
    int16x8_t v20 = vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_s16(vmull_s16(*(int16x4_t *)v14.i8, *(int16x4_t *)v2.i8), *(int16x4_t *)v17.i8, *(int16x4_t *)v1.i8), 5uLL), vmlal_high_s16(vmull_high_s16(v14, v2), v17, v1), 5uLL);
    uint16x8_t v30 = vminq_u16(vmaxq_u16(vsqaddq_u16(v24, vqrdmulhq_s16(vmaxq_s16(vminq_s16(vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_s16(vmull_s16(vmax_s16(vmin_s16(vqrshrn_n_s32(vmlal_s16(vmull_s16(v5, v6), *(int16x4_t *)v7.i8, v8), 5uLL), *(int16x4_t *)v10.i8), *(int16x4_t *)v11.i8), *(int16x4_t *)v2.i8), vmax_s16(vmin_s16(vqrshrn_n_s32(vmlal_s16(vmull_s16(v3, v6), *(int16x4_t *)v9.i8, v8), 5uLL),
                                *(int16x4_t *)v10.i8),
                              *(int16x4_t *)v11.i8),
                            *(int16x4_t *)v1.i8),
                          5uLL),
                        vmlal_high_s16(vmull_high_s16(v7, v2), v9, v1),
                        5uLL),
                      v10),
                    v11),
                  (int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v21.i8), v23))),
              v28),
            v29);
    int16x8_t v1 = vdupq_lane_s16(v8, 0);
    int16x8_t v2 = vdupq_lane_s16(v8, 1);
    *int v31 = v30;
    v31[1] = vminq_u16(vmaxq_u16(vsqaddq_u16(v25, vqrdmulhq_s16(vmaxq_s16(vminq_s16(v18, v10), v11), (int16x8_t)vshlq_u16(vmovl_high_u8(v21), v23))), v28), v29);
    v31[2] = vminq_u16(vmaxq_u16(vsqaddq_u16(v26, vqrdmulhq_s16(vmaxq_s16(vminq_s16(v19, v10), v11), (int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v22.i8), v23))), v28), v29);
    v31[3] = vminq_u16(vmaxq_u16(vsqaddq_u16(v27, vqrdmulhq_s16(vmaxq_s16(vminq_s16(v20, v10), v11), (int16x8_t)vshlq_u16(vmovl_high_u8(v22), v23))), v28), v29);
    uint64_t result = &v31->i8[v32];
  }
  while (v34 > 1);
  if (v4 > 2) {
    return sub_224A8F898();
  }
  return result;
}

void sub_224A8FAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int16x8_t v13 = (const __int16 *)(a5 + 4 * a11);
  int16x8_t v14 = v13 + 98;
  int16x8_t v15 = v13 + 94;
  v13 += 102;
  vld1q_dup_s16(v14);
  vld1q_dup_s16(v13);
  vld1q_dup_s16(v15);
  __asm { BR              X13 }
}

void sub_224A8FC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int16x8_t v13 = (const __int16 *)(a5 + 4 * a11);
  int16x8_t v14 = v13 + 98;
  int16x8_t v15 = v13 + 94;
  v13 += 102;
  vld1q_dup_s16(v14);
  vld1q_dup_s16(v13);
  vld1q_dup_s16(v15);
  __asm { BR              X13 }
}

void sub_224A8FD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int16x8_t v13 = (const __int16 *)(a5 + 4 * a11);
  int16x8_t v14 = v13 + 98;
  int16x8_t v15 = v13 + 94;
  v13 += 102;
  vld1q_dup_s16(v14);
  vld1q_dup_s16(v13);
  vld1q_dup_s16(v15);
  __asm { BR              X13 }
}

__int8 *sub_224A8FED4(uint64_t a1, uint16x8_t *a2)
{
  do
  {
    uint16x8_t v2 = *a2;
    uint16x8_t v3 = a2[1];
    uint16x8_t v4 = a2[2];
    uint16x8_t v5 = a2[3];
    sub_224A8F338();
    *int16x8_t v15 = vminq_u16(vmaxq_u16(vsqaddq_u16(v2, vqrdmulhq_s16(v9, (int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v6.i8), v8))), v13), v14);
    v15[1] = vminq_u16(vmaxq_u16(vsqaddq_u16(v3, vqrdmulhq_s16(v10, (int16x8_t)vshlq_u16(vmovl_high_u8(v6), v8))), v13), v14);
    v15[2] = vminq_u16(vmaxq_u16(vsqaddq_u16(v4, vqrdmulhq_s16(v11, (int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v7.i8), v8))), v13), v14);
    v15[3] = vminq_u16(vmaxq_u16(vsqaddq_u16(v5, vqrdmulhq_s16(v12, (int16x8_t)vshlq_u16(vmovl_high_u8(v7), v8))), v13), v14);
    uint64_t result = &v15->i8[v16];
  }
  while (v18 > 1);
  return result;
}

__int8 *sub_224A90898(uint64_t a1, uint16x8_t *a2)
{
  do
  {
    uint16x8_t v2 = *a2;
    uint16x8_t v3 = a2[1];
    sub_224A8F4BC();
    uint16x8_t *v10 = vminq_u16(vmaxq_u16(vsqaddq_u16(v2, vqrdmulhq_s16(v6, (int16x8_t)vshlq_u16(vmovl_u8(*(uint8x8_t *)v4.i8), v5))), v8), v9);
    v10[1] = vminq_u16(vmaxq_u16(vsqaddq_u16(v3, vqrdmulhq_s16(v7, (int16x8_t)vshlq_u16(vmovl_high_u8(v4), v5))), v8), v9);
    uint64_t result = &v10->i8[v11];
  }
  while (v13 > 1);
  return result;
}

double sub_224A90F2C@<D0>(unsigned int a1@<W8>)
{
  uint16x8_t v22 = vabdq_u16((uint16x8_t)v14, (uint16x8_t)v15);
  int16x8_t v23 = (int16x8_t)vmaxq_u16(vabdq_u16((uint16x8_t)v13, (uint16x8_t)v14), vabdq_u16((uint16x8_t)v16, (uint16x8_t)v15));
  int8x16_t v24 = vandq_s8(vandq_s8((int8x16_t)vcgeq_u16(v3, vmaxq_u16((uint16x8_t)v23, (uint16x8_t)vandq_s8((int8x16_t)vmaxq_u16(vmaxq_u16(vabdq_u16((uint16x8_t)v12, (uint16x8_t)v13), vabdq_u16((uint16x8_t)v17, (uint16x8_t)v16)), vmaxq_u16(vabdq_u16((uint16x8_t)v11, (uint16x8_t)v12), vabdq_u16((uint16x8_t)v18, (uint16x8_t)v17))), v6))), (int8x16_t)vcgeq_u16(v2, vqaddq_u16(vqaddq_u16(v22, v22), vshrq_n_u16(vabdq_u16((uint16x8_t)v13, (uint16x8_t)v16), 1uLL)))),
          v5);
  int8x16_t v25 = vandq_s8(v6, v24);
  int8x16_t v26 = vandq_s8(v7, v24);
  if (v24.i64[0] + v24.i64[1])
  {
    v27.i64[0] = 0x1000100010001;
    v27.i64[1] = 0x1000100010001;
    uint16x8_t v28 = vshlq_u16(v27, (uint16x8_t)vdupq_n_s16(v1));
    int8x16_t v29 = vandq_s8((int8x16_t)vcgeq_u16(v28, vmaxq_u16(vmaxq_u16(vmaxq_u16(vabdq_u16((uint16x8_t)v12, (uint16x8_t)v14), vabdq_u16((uint16x8_t)v13, (uint16x8_t)v14)), vmaxq_u16(vabdq_u16((uint16x8_t)v16, (uint16x8_t)v15), vabdq_u16((uint16x8_t)v17, (uint16x8_t)v15))), vmaxq_u16(vabdq_u16((uint16x8_t)v11, (uint16x8_t)v14), vabdq_u16((uint16x8_t)v18, (uint16x8_t)v15)))), v25);
    int8x16_t v30 = vbicq_s8(v24, v29);
    int8x16_t v31 = vandq_s8(vandq_s8(v26, (int8x16_t)vcgeq_u16(v28, vmaxq_u16(vmaxq_u16(vmaxq_u16(vabdq_u16((uint16x8_t)v8, (uint16x8_t)v14), vabdq_u16((uint16x8_t)v9, (uint16x8_t)v14)), vmaxq_u16(vabdq_u16((uint16x8_t)v10, (uint16x8_t)v14), vabdq_u16(v19, (uint16x8_t)v15))), vmaxq_u16(vabdq_u16(v20, (uint16x8_t)v15), vabdq_u16(v21, (uint16x8_t)v15))))), v29);
    int8x16_t v32 = vbicq_s8(v29, v31);
    if (v30.i64[0] + v30.i64[1])
    {
      int16x8_t v33 = (int16x8_t)vshrq_n_u16((uint16x8_t)vdupq_n_s16(a1), 1uLL);
      int8x16_t v34 = (int8x16_t)vcgtq_u16((uint16x8_t)v23, v4);
      int16x8_t v35 = (int16x8_t)vmvnq_s8((int8x16_t)v33);
      int16x8_t v36 = (int16x8_t)vandq_s8((int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16(v13, v16), v33), v35), v34);
      v37.i64[0] = 0x3000300030003;
      v37.i64[1] = 0x3000300030003;
      int16x8_t v23 = (int16x8_t)vbicq_s8(v30, v34);
      v38.i64[0] = 0x4000400040004;
      v38.i64[1] = 0x4000400040004;
      int16x8_t v39 = vmaxq_s16(vminq_s16(vaddq_s16(vmulq_s16(vsubq_s16(v15, v14), v37), v36), v33), v35);
      int16x8_t v40 = vshrq_n_s16(vminq_s16(vqaddq_s16(v38, v39), v33), 3uLL);
      int16x8_t v41 = vshrq_n_s16(vminq_s16(vqaddq_s16(v37, v39), v33), 3uLL);
      int16x8_t v42 = vdupq_n_s16(a1);
      int16x8_t v43 = vqsubq_s16(v15, v40);
      int16x8_t v44 = vrshrq_n_s16(v40, 1uLL);
      int16x8_t v14 = (int16x8_t)vbslq_s8(v30, (int8x16_t)vmaxq_s16(vminq_s16(vqaddq_s16(v14, v41), v42), (int16x8_t)0), (int8x16_t)v14);
      int16x8_t v15 = (int16x8_t)vbslq_s8(v30, (int8x16_t)vmaxq_s16(vminq_s16(v43, v42), (int16x8_t)0), (int8x16_t)v15);
      int16x8_t v13 = (int16x8_t)vbslq_s8((int8x16_t)v23, (int8x16_t)vmaxq_s16(vminq_s16(vqaddq_s16(v13, v44), v42), (int16x8_t)0), (int8x16_t)v13);
      int16x8_t v16 = (int16x8_t)vbslq_s8((int8x16_t)v23, (int8x16_t)vmaxq_s16(vminq_s16(vqsubq_s16(v16, v44), v42), (int16x8_t)0), (int8x16_t)v16);
    }
    if (v32.i64[0] + v32.i64[1])
    {
      int16x8_t v23 = vaddq_s16(v11, v12);
      int16x8_t v45 = vaddq_s16(v11, v13);
      int16x8_t v46 = vaddq_s16(vaddq_s16(vaddq_s16(v23, v23), v45), vaddq_s16(v14, v15));
      int8x16_t v47 = (int8x16_t)vrshrq_n_u16((uint16x8_t)v46, 3uLL);
      int16x8_t v48 = vaddq_s16(v46, vsubq_s16(vaddq_s16(v13, v16), v23));
      int8x16_t v49 = (int8x16_t)vrshrq_n_u16((uint16x8_t)v48, 3uLL);
      int16x8_t v50 = vaddq_s16(v48, vsubq_s16(vaddq_s16(v14, v17), v45));
      int8x16_t v51 = (int8x16_t)vrshrq_n_u16((uint16x8_t)v50, 3uLL);
      int16x8_t v52 = vaddq_s16(v50, vsubq_s16(vaddq_s16(v15, v18), vaddq_s16(v11, v14)));
      v23.i64[0] = vrshrq_n_u16((uint16x8_t)vaddq_s16(v52, vsubq_s16(vaddq_s16(v16, v18), vaddq_s16(v12, v15))), 3uLL).u64[0];
      int16x8_t v12 = (int16x8_t)vbslq_s8(v32, v47, (int8x16_t)v12);
      int16x8_t v13 = (int16x8_t)vbslq_s8(v32, v49, (int8x16_t)v13);
      int16x8_t v14 = (int16x8_t)vbslq_s8(v32, v51, (int8x16_t)v14);
      int16x8_t v15 = (int16x8_t)vbslq_s8(v32, (int8x16_t)vrshrq_n_u16((uint16x8_t)v52, 3uLL), (int8x16_t)v15);
    }
    if (v31.i64[0] + v31.i64[1]) {
      v23.i64[0] = vbslq_s8(v31, (int8x16_t)vrshrq_n_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v8, v8), vaddq_s16(v8, v9)), vaddq_s16(vaddq_s16(v8, v10), vaddq_s16(v8, v11))), vaddq_s16(vaddq_s16(v8, v12), vaddq_s16(v8, v13))), vaddq_s16(vaddq_s16(v9, v14), vaddq_s16(v10, v15))), 4uLL), (int8x16_t)v9).u64[0];
    }
  }
  return *(double *)v23.i64;
}

double sub_224A912F4@<D0>(unsigned int a1@<W8>)
{
  uint16x8_t v15 = vabdq_u16((uint16x8_t)v10, (uint16x8_t)v11);
  int16x8_t v16 = (int16x8_t)vmaxq_u16(vabdq_u16((uint16x8_t)v9, (uint16x8_t)v10), vabdq_u16((uint16x8_t)v12, (uint16x8_t)v11));
  int8x16_t v17 = vandq_s8(vandq_s8((int8x16_t)vcgeq_u16(v3, vmaxq_u16((uint16x8_t)v16, (uint16x8_t)vandq_s8((int8x16_t)vmaxq_u16(vmaxq_u16(vabdq_u16((uint16x8_t)v8, (uint16x8_t)v9), vabdq_u16((uint16x8_t)v13, (uint16x8_t)v12)), vmaxq_u16(vabdq_u16((uint16x8_t)v7, (uint16x8_t)v8), vabdq_u16((uint16x8_t)v14, (uint16x8_t)v13))), v6))), (int8x16_t)vcgeq_u16(v2, vqaddq_u16(vqaddq_u16(v15, v15), vshrq_n_u16(vabdq_u16((uint16x8_t)v9, (uint16x8_t)v12), 1uLL)))), v5);
  int8x16_t v18 = vandq_s8(v6, v17);
  if (v17.i64[0] + v17.i64[1])
  {
    v19.i64[0] = 0x1000100010001;
    v19.i64[1] = 0x1000100010001;
    int8x16_t v20 = vandq_s8((int8x16_t)vcgeq_u16(vshlq_u16(v19, (uint16x8_t)vdupq_n_s16(v1)), vmaxq_u16(vmaxq_u16(vmaxq_u16(vabdq_u16((uint16x8_t)v8, (uint16x8_t)v10), vabdq_u16((uint16x8_t)v9, (uint16x8_t)v10)), vmaxq_u16(vabdq_u16((uint16x8_t)v12, (uint16x8_t)v11), vabdq_u16((uint16x8_t)v13, (uint16x8_t)v11))), vmaxq_u16(vabdq_u16((uint16x8_t)v7, (uint16x8_t)v10), vabdq_u16((uint16x8_t)v14, (uint16x8_t)v11)))), v18);
    int8x16_t v21 = vbicq_s8(v17, v20);
    if (v21.i64[0] + v21.i64[1])
    {
      int16x8_t v22 = (int16x8_t)vshrq_n_u16((uint16x8_t)vdupq_n_s16(a1), 1uLL);
      int8x16_t v23 = (int8x16_t)vcgtq_u16((uint16x8_t)v16, v4);
      int16x8_t v24 = (int16x8_t)vmvnq_s8((int8x16_t)v22);
      int16x8_t v25 = (int16x8_t)vandq_s8((int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16(v9, v12), v22), v24), v23);
      v26.i64[0] = 0x3000300030003;
      v26.i64[1] = 0x3000300030003;
      int16x8_t v16 = (int16x8_t)vbicq_s8(v21, v23);
      v27.i64[0] = 0x4000400040004;
      v27.i64[1] = 0x4000400040004;
      int16x8_t v28 = vmaxq_s16(vminq_s16(vaddq_s16(vmulq_s16(vsubq_s16(v11, v10), v26), v25), v22), v24);
      int16x8_t v29 = vshrq_n_s16(vminq_s16(vqaddq_s16(v27, v28), v22), 3uLL);
      int16x8_t v30 = vshrq_n_s16(vminq_s16(vqaddq_s16(v26, v28), v22), 3uLL);
      int16x8_t v31 = vdupq_n_s16(a1);
      int16x8_t v32 = vqsubq_s16(v11, v29);
      int16x8_t v33 = vrshrq_n_s16(v29, 1uLL);
      int16x8_t v10 = (int16x8_t)vbslq_s8(v21, (int8x16_t)vmaxq_s16(vminq_s16(vqaddq_s16(v10, v30), v31), (int16x8_t)0), (int8x16_t)v10);
      int16x8_t v11 = (int16x8_t)vbslq_s8(v21, (int8x16_t)vmaxq_s16(vminq_s16(v32, v31), (int16x8_t)0), (int8x16_t)v11);
      int16x8_t v9 = (int16x8_t)vbslq_s8((int8x16_t)v16, (int8x16_t)vmaxq_s16(vminq_s16(vqaddq_s16(v9, v33), v31), (int16x8_t)0), (int8x16_t)v9);
      int16x8_t v12 = (int16x8_t)vbslq_s8((int8x16_t)v16, (int8x16_t)vmaxq_s16(vminq_s16(vqsubq_s16(v12, v33), v31), (int16x8_t)0), (int8x16_t)v12);
    }
    if (v20.i64[0] + v20.i64[1])
    {
      int16x8_t v16 = vaddq_s16(v7, v8);
      int16x8_t v34 = vaddq_s16(v7, v9);
      v16.i64[0] = vrshrq_n_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(vaddq_s16(v16, v16), v34), vaddq_s16(v10, v11)), vsubq_s16(vaddq_s16(v9, v12), v16)), vsubq_s16(vaddq_s16(v10, v13), v34)), vsubq_s16(vaddq_s16(v11, v14), vaddq_s16(v7, v10))), vsubq_s16(vaddq_s16(v12, v14), vaddq_s16(v8, v11))), 3uLL).u64[0];
    }
  }
  return *(double *)v16.i64;
}

double sub_224A9150C@<D0>(unsigned int a1@<W8>)
{
  uint16x8_t v13 = vabdq_u16((uint16x8_t)v9, (uint16x8_t)v10);
  int8x16_t v14 = (int8x16_t)vmaxq_u16(vabdq_u16((uint16x8_t)v8, (uint16x8_t)v9), vabdq_u16((uint16x8_t)v11, (uint16x8_t)v10));
  int8x16_t v15 = vandq_s8(vandq_s8((int8x16_t)vcgeq_u16(v3, vmaxq_u16((uint16x8_t)v14, (uint16x8_t)vandq_s8((int8x16_t)vmaxq_u16(vabdq_u16((uint16x8_t)v7, (uint16x8_t)v8), vabdq_u16(v12, (uint16x8_t)v11)), v6))), (int8x16_t)vcgeq_u16(v2, vqaddq_u16(vqaddq_u16(v13, v13), vshrq_n_u16(vabdq_u16((uint16x8_t)v8, (uint16x8_t)v11), 1uLL)))), v5);
  int8x16_t v16 = vandq_s8(v6, v15);
  if (v15.i64[0] + v15.i64[1])
  {
    v17.i64[0] = 0x1000100010001;
    v17.i64[1] = 0x1000100010001;
    int8x16_t v18 = vandq_s8((int8x16_t)vcgeq_u16(vshlq_u16(v17, (uint16x8_t)vdupq_n_s16(v1)), vmaxq_u16(vmaxq_u16(vabdq_u16((uint16x8_t)v7, (uint16x8_t)v9), vabdq_u16((uint16x8_t)v8, (uint16x8_t)v9)), vmaxq_u16(vabdq_u16((uint16x8_t)v11, (uint16x8_t)v10), vabdq_u16(v12, (uint16x8_t)v10)))), v16);
    int8x16_t v19 = vbicq_s8(v15, v18);
    if (v19.i64[0] + v19.i64[1])
    {
      int16x8_t v20 = (int16x8_t)vshrq_n_u16((uint16x8_t)vdupq_n_s16(a1), 1uLL);
      int8x16_t v21 = (int8x16_t)vcgtq_u16((uint16x8_t)v14, v4);
      int16x8_t v22 = (int16x8_t)vmvnq_s8((int8x16_t)v20);
      int16x8_t v23 = (int16x8_t)vandq_s8((int8x16_t)vmaxq_s16(vminq_s16(vsubq_s16(v8, v11), v20), v22), v21);
      v24.i64[0] = 0x3000300030003;
      v24.i64[1] = 0x3000300030003;
      int8x16_t v14 = vbicq_s8(v19, v21);
      v25.i64[0] = 0x4000400040004;
      v25.i64[1] = 0x4000400040004;
      int16x8_t v26 = vmaxq_s16(vminq_s16(vaddq_s16(vmulq_s16(vsubq_s16(v10, v9), v24), v23), v20), v22);
      int16x8_t v27 = vshrq_n_s16(vminq_s16(vqaddq_s16(v25, v26), v20), 3uLL);
      int16x8_t v28 = vshrq_n_s16(vminq_s16(vqaddq_s16(v24, v26), v20), 3uLL);
      int16x8_t v29 = vdupq_n_s16(a1);
      int16x8_t v9 = (int16x8_t)vbslq_s8(v19, (int8x16_t)vmaxq_s16(vminq_s16(vqaddq_s16(v9, v28), v29), (int16x8_t)0), (int8x16_t)v9);
      int16x8_t v10 = (int16x8_t)vbslq_s8(v19, (int8x16_t)vmaxq_s16(vminq_s16(vqsubq_s16(v10, v27), v29), (int16x8_t)0), (int8x16_t)v10);
      int16x8_t v8 = (int16x8_t)vbslq_s8(v14, (int8x16_t)vmaxq_s16(vminq_s16(vqaddq_s16(v8, vrshrq_n_s16(v27, 1uLL)), v29), (int16x8_t)0), (int8x16_t)v8);
    }
    if (v18.i64[0] + v18.i64[1]) {
      v14.i64[0] = vrshrq_n_u16((uint16x8_t)vaddq_s16(vaddq_s16(vaddq_s16(v7, v7), vaddq_s16(v7, v8)), vaddq_s16(vaddq_s16(v8, v9), vaddq_s16(v9, v10))), 3uLL).u64[0];
    }
  }
  return *(double *)v14.i64;
}

double sub_224A916CC()
{
  uint16x8_t v8 = vabdq_u16(v5, v6);
  uint16x8_t v9 = vmaxq_u16(vabdq_u16(v4, v5), vabdq_u16(v7, v6));
  int8x16_t v10 = vandq_s8(vandq_s8((int8x16_t)vcgeq_u16(v1, v9), (int8x16_t)vcgeq_u16(v0, vqaddq_u16(vqaddq_u16(v8, v8), vshrq_n_u16(vabdq_u16(v4, v7), 1uLL)))), v3);
  if (v10.i64[0] + v10.i64[1]) {
    v9.i64[0] = vbicq_s8(v10, (int8x16_t)vcgtq_u16(v9, v2)).u64[0];
  }
  return *(double *)v9.i64;
}

void sub_224A917C0()
{
  sub_224A916CC();
  if (!v6)
  {
    uint16x8_t v7 = (_OWORD *)((char *)v0 - 2 * v1);
    _OWORD *v7 = v2;
    *uint16x8_t v0 = v4;
    *(_OWORD *)((char *)v7 + v1) = v3;
    *(_OWORD *)((char *)v0 + v1) = v5;
  }
}

void sub_224A91804()
{
  sub_224A916CC();
  if (!v6)
  {
    uint16x8_t v7 = (void *)(v0 - 8 * v1 - 4);
    int32x4_t v8 = (int32x4_t)vtrn1q_s16(v2, v3);
    int32x4_t v9 = (int32x4_t)vtrn2q_s16(v2, v3);
    int32x4_t v10 = (int32x4_t)vtrn1q_s16(v4, v5);
    int32x4_t v11 = (int32x4_t)vtrn2q_s16(v4, v5);
    int32x4_t v12 = vtrn1q_s32(v8, v10);
    int32x4_t v13 = vtrn2q_s32(v8, v10);
    int32x4_t v14 = vtrn1q_s32(v9, v11);
    int32x4_t v15 = vtrn2q_s32(v9, v11);
    int8x16_t v16 = (void *)((char *)v7 + 4 * v1);
    void *v7 = v12.i64[0];
    uint16x8_t v17 = (void *)((char *)v7 + v1);
    void *v16 = v12.i64[1];
    int8x16_t v18 = (void *)((char *)v16 + v1);
    *uint16x8_t v17 = v14.i64[0];
    int8x16_t v19 = (void *)((char *)v17 + v1);
    *int8x16_t v18 = v14.i64[1];
    int16x8_t v20 = (void *)((char *)v18 + v1);
    *int8x16_t v19 = v13.i64[0];
    *int16x8_t v20 = v13.i64[1];
    *(void *)((char *)v19 + v1) = v15.i64[0];
    *(void *)((char *)v20 + v1) = v15.i64[1];
  }
}

void sub_224A918B4(unsigned int a1@<W8>)
{
  sub_224A9150C(a1);
  if (!v7)
  {
    int32x4_t v8 = (_OWORD *)((char *)v1 - 2 * v2);
    _OWORD *v8 = v3;
    *uint64_t v1 = v5;
    *(_OWORD *)((char *)v8 + v2) = v4;
    *(_OWORD *)((char *)v1 + v2) = v6;
  }
}

void sub_224A91908(unsigned int a1@<W8>)
{
  sub_224A9150C(a1);
  if (!v7)
  {
    int32x4_t v8 = (void *)(v1 - 8 * v2 - 4);
    int32x4_t v9 = (int32x4_t)vtrn1q_s16(v3, v4);
    int32x4_t v10 = (int32x4_t)vtrn2q_s16(v3, v4);
    int32x4_t v11 = (int32x4_t)vtrn1q_s16(v5, v6);
    int32x4_t v12 = (int32x4_t)vtrn2q_s16(v5, v6);
    int32x4_t v13 = vtrn1q_s32(v9, v11);
    int32x4_t v14 = vtrn2q_s32(v9, v11);
    int32x4_t v15 = vtrn1q_s32(v10, v12);
    int32x4_t v16 = vtrn2q_s32(v10, v12);
    uint16x8_t v17 = (void *)((char *)v8 + 4 * v2);
    void *v8 = v13.i64[0];
    int8x16_t v18 = (void *)((char *)v8 + v2);
    *uint16x8_t v17 = v13.i64[1];
    int8x16_t v19 = (void *)((char *)v17 + v2);
    *int8x16_t v18 = v15.i64[0];
    int16x8_t v20 = (void *)((char *)v18 + v2);
    *int8x16_t v19 = v15.i64[1];
    int8x16_t v21 = (void *)((char *)v19 + v2);
    *int16x8_t v20 = v14.i64[0];
    *int8x16_t v21 = v14.i64[1];
    *(void *)((char *)v20 + v2) = v16.i64[0];
    *(void *)((char *)v21 + v2) = v16.i64[1];
  }
}

void sub_224A919F8(unsigned int a1@<W8>)
{
  sub_224A912F4(a1);
  if (v3)
  {
    if ((v3 & 0x10) != 0)
    {
      int32x4_t v12 = (_OWORD *)((char *)v1 - 2 * v2);
      *int32x4_t v12 = v5;
      *uint64_t v1 = v7;
      *(_OWORD *)((char *)v12 + v2) = v6;
      *(_OWORD *)((char *)v1 + v2) = v8;
    }
  }
  else
  {
    *(_OWORD *)((char *)v1 - v2 + -2 * v2) = v4;
    int32x4_t v10 = (_OWORD *)((char *)v1 - 2 * v2);
    *uint64_t v1 = v7;
    int32x4_t v11 = (_OWORD *)((char *)v1 + v2);
    _OWORD *v10 = v5;
    *int32x4_t v11 = v8;
    *(_OWORD *)((char *)v10 + v2) = v6;
    *(_OWORD *)((char *)v11 + v2) = v9;
  }
}

void sub_224A91A7C(unsigned int a1@<W8>)
{
  sub_224A912F4(a1);
  if (v3)
  {
    if ((v3 & 0x10) != 0)
    {
      int16x8_t v34 = (void *)(v1 - 8 * v2 - 4);
      int32x4_t v35 = (int32x4_t)vtrn1q_s16(v6, v7);
      int32x4_t v36 = (int32x4_t)vtrn2q_s16(v6, v7);
      int32x4_t v37 = (int32x4_t)vtrn1q_s16(v8, v9);
      int32x4_t v38 = (int32x4_t)vtrn2q_s16(v8, v9);
      int32x4_t v39 = vtrn1q_s32(v35, v37);
      int32x4_t v40 = vtrn2q_s32(v35, v37);
      int32x4_t v41 = vtrn1q_s32(v36, v38);
      int32x4_t v42 = vtrn2q_s32(v36, v38);
      int16x8_t v43 = (void *)((char *)v34 + 4 * v2);
      void *v34 = v39.i64[0];
      int16x8_t v44 = (void *)((char *)v34 + v2);
      *int16x8_t v43 = v39.i64[1];
      int16x8_t v45 = (void *)((char *)v43 + v2);
      *int16x8_t v44 = v41.i64[0];
      int16x8_t v46 = (void *)((char *)v44 + v2);
      *int16x8_t v45 = v41.i64[1];
      int8x16_t v47 = (void *)((char *)v45 + v2);
      void *v46 = v40.i64[0];
      *int8x16_t v47 = v40.i64[1];
      *(void *)((char *)v46 + v2) = v42.i64[0];
      *(void *)((char *)v47 + v2) = v42.i64[1];
    }
  }
  else
  {
    int32x4_t v12 = (int64x2_t *)(v1 - 8 * v2 - 8);
    int32x4_t v13 = (int32x4_t)vtrn1q_s16(v4, v5);
    int32x4_t v14 = (int32x4_t)vtrn2q_s16(v4, v5);
    int32x4_t v15 = (int32x4_t)vtrn1q_s16(v6, v7);
    int32x4_t v16 = (int32x4_t)vtrn2q_s16(v6, v7);
    int32x4_t v17 = (int32x4_t)vtrn1q_s16(v8, v9);
    int32x4_t v18 = (int32x4_t)vtrn2q_s16(v8, v9);
    int32x4_t v19 = (int32x4_t)vtrn1q_s16(v10, v11);
    int32x4_t v20 = (int32x4_t)vtrn2q_s16(v10, v11);
    int64x2_t v21 = (int64x2_t)vtrn1q_s32(v17, v19);
    int64x2_t v22 = (int64x2_t)vtrn2q_s32(v17, v19);
    int64x2_t v23 = (int64x2_t)vtrn1q_s32(v18, v20);
    int64x2_t v24 = (int64x2_t)vtrn2q_s32(v18, v20);
    int64x2_t v25 = (int64x2_t)vtrn1q_s32(v14, v16);
    int64x2_t v26 = (int64x2_t)vtrn2q_s32(v14, v16);
    int64x2_t v27 = (int64x2_t)vtrn1q_s32(v13, v15);
    int64x2_t v28 = (int64x2_t)vtrn2q_s32(v13, v15);
    int16x8_t v29 = (int64x2_t *)((char *)v12 + 4 * v2);
    *int32x4_t v12 = vtrn1q_s64(v27, v21);
    int16x8_t v30 = (int64x2_t *)((char *)v12 + v2);
    *int16x8_t v29 = vtrn2q_s64(v27, v21);
    int16x8_t v31 = (int64x2_t *)((char *)v29 + v2);
    int64x2_t *v30 = vtrn1q_s64(v25, v23);
    int16x8_t v32 = (int64x2_t *)((char *)v30 + v2);
    *int16x8_t v31 = vtrn2q_s64(v25, v23);
    int16x8_t v33 = (int64x2_t *)((char *)v31 + v2);
    *int16x8_t v32 = vtrn1q_s64(v28, v22);
    *int16x8_t v33 = vtrn2q_s64(v28, v22);
    *(int64x2_t *)((char *)v32 + v2) = vtrn1q_s64(v26, v24);
    *(int64x2_t *)((char *)v33 + v2) = vtrn2q_s64(v26, v24);
  }
}

void sub_224A91C04(unsigned int a1@<W8>)
{
  *(double *)&long long v8 = sub_224A90F2C(a1);
  if (v7)
  {
    if ((v7 & 0x40) != 0)
    {
      *(_OWORD *)((char *)v5 - v6 + -2 * v6) = v16;
      int16x8_t v31 = (_OWORD *)((char *)v5 - 2 * v6);
      _OWORD *v5 = v19;
      int16x8_t v32 = (_OWORD *)((char *)v5 + v6);
      *int16x8_t v31 = v17;
      *int16x8_t v32 = v20;
      *(_OWORD *)((char *)v31 + v6) = v18;
      *(_OWORD *)((char *)v32 + v6) = v21;
    }
    else if ((v7 & 0x10) != 0)
    {
      int16x8_t v33 = (_OWORD *)((char *)v5 - 2 * v6);
      *int16x8_t v33 = v17;
      _OWORD *v5 = v19;
      *(_OWORD *)((char *)v33 + v6) = v18;
      *(_OWORD *)((char *)v5 + v6) = v20;
    }
  }
  else
  {
    int64x2_t v22 = (_OWORD *)((char *)v5 - 2 * v6 + -4 * v6);
    *int64x2_t v22 = v8;
    int64x2_t v23 = (_OWORD *)((char *)v22 + v6);
    _OWORD *v5 = v14;
    int64x2_t v24 = (_OWORD *)((char *)v5 + v6);
    *int64x2_t v23 = v9;
    int64x2_t v25 = (_OWORD *)((char *)v23 + v6);
    _OWORD *v24 = v15;
    int64x2_t v26 = (_OWORD *)((char *)v24 + v6);
    *int64x2_t v25 = v10;
    int64x2_t v27 = (_OWORD *)((char *)v25 + v6);
    *int64x2_t v26 = v1;
    int64x2_t v28 = (_OWORD *)((char *)v26 + v6);
    *int64x2_t v27 = v11;
    int16x8_t v29 = (_OWORD *)((char *)v27 + v6);
    *int64x2_t v28 = v2;
    int16x8_t v30 = (_OWORD *)((char *)v28 + v6);
    *int16x8_t v29 = v12;
    _OWORD *v30 = v3;
    *(_OWORD *)((char *)v29 + v6) = v13;
    *(_OWORD *)((char *)v30 + v6) = v4;
  }
}

void sub_224A91CF0(unsigned int a1@<W8>)
{
  *(double *)v8.i64 = sub_224A90F2C(a1);
  if (v7)
  {
    if ((v7 & 0x40) != 0)
    {
      uint64_t v81 = (int64x2_t *)(v5 - 8 * v6 - 8);
      int32x4_t v82 = (int32x4_t)vtrn1q_s16(v18, v19);
      int32x4_t v83 = (int32x4_t)vtrn2q_s16(v18, v19);
      int32x4_t v84 = (int32x4_t)vtrn1q_s16(v20, v21);
      int32x4_t v85 = (int32x4_t)vtrn2q_s16(v20, v21);
      int32x4_t v86 = (int32x4_t)vtrn1q_s16(v22, v23);
      int32x4_t v87 = (int32x4_t)vtrn2q_s16(v22, v23);
      int32x4_t v88 = (int32x4_t)vtrn1q_s16(v24, v25);
      int32x4_t v89 = (int32x4_t)vtrn2q_s16(v24, v25);
      int64x2_t v90 = (int64x2_t)vtrn1q_s32(v86, v88);
      int64x2_t v91 = (int64x2_t)vtrn2q_s32(v86, v88);
      int64x2_t v92 = (int64x2_t)vtrn1q_s32(v87, v89);
      int64x2_t v93 = (int64x2_t)vtrn2q_s32(v87, v89);
      int64x2_t v94 = (int64x2_t)vtrn1q_s32(v83, v85);
      int64x2_t v95 = (int64x2_t)vtrn2q_s32(v83, v85);
      int64x2_t v96 = (int64x2_t)vtrn1q_s32(v82, v84);
      int64x2_t v97 = (int64x2_t)vtrn2q_s32(v82, v84);
      uint64_t v98 = (int64x2_t *)((char *)v81 + 4 * v6);
      *uint64_t v81 = vtrn1q_s64(v96, v90);
      uint64_t v99 = (int64x2_t *)((char *)v81 + v6);
      *uint64_t v98 = vtrn2q_s64(v96, v90);
      uint64_t v100 = (int64x2_t *)((char *)v98 + v6);
      *uint64_t v99 = vtrn1q_s64(v94, v92);
      uint64_t v101 = (int64x2_t *)((char *)v99 + v6);
      *uint64_t v100 = vtrn2q_s64(v94, v92);
      uint64_t v102 = (int64x2_t *)((char *)v100 + v6);
      *uint64_t v101 = vtrn1q_s64(v97, v91);
      *uint64_t v102 = vtrn2q_s64(v97, v91);
      *(int64x2_t *)((char *)v101 + v6) = vtrn1q_s64(v95, v93);
      *(int64x2_t *)((char *)v102 + v6) = vtrn2q_s64(v95, v93);
    }
    else if ((v7 & 0x10) != 0)
    {
      uint64_t v103 = (void *)(v5 - 8 * v6 - 4);
      int32x4_t v104 = (int32x4_t)vtrn1q_s16(v20, v21);
      int32x4_t v105 = (int32x4_t)vtrn2q_s16(v20, v21);
      int32x4_t v106 = (int32x4_t)vtrn1q_s16(v22, v23);
      int32x4_t v107 = (int32x4_t)vtrn2q_s16(v22, v23);
      int32x4_t v108 = vtrn1q_s32(v104, v106);
      int32x4_t v109 = vtrn2q_s32(v104, v106);
      int32x4_t v110 = vtrn1q_s32(v105, v107);
      int32x4_t v111 = vtrn2q_s32(v105, v107);
      uint64_t v112 = (void *)((char *)v103 + 4 * v6);
      *uint64_t v103 = v108.i64[0];
      uint64_t v113 = (void *)((char *)v103 + v6);
      *uint64_t v112 = v108.i64[1];
      double v114 = (void *)((char *)v112 + v6);
      *uint64_t v113 = v110.i64[0];
      uint64_t v115 = (void *)((char *)v113 + v6);
      *double v114 = v110.i64[1];
      uint64_t v116 = (void *)((char *)v114 + v6);
      *uint64_t v115 = v109.i64[0];
      *uint64_t v116 = v109.i64[1];
      *(void *)((char *)v115 + v6) = v111.i64[0];
      *(void *)((char *)v116 + v6) = v111.i64[1];
    }
  }
  else
  {
    int64x2_t v28 = (int64x2_t *)(v5 - 8 * v6);
    int32x4_t v29 = (int32x4_t)vtrn1q_s16(v16, v17);
    int32x4_t v30 = (int32x4_t)vtrn2q_s16(v16, v17);
    int32x4_t v31 = (int32x4_t)vtrn1q_s16(v8, v9);
    int32x4_t v32 = (int32x4_t)vtrn2q_s16(v8, v9);
    int32x4_t v33 = (int32x4_t)vtrn1q_s16(v10, v11);
    int32x4_t v34 = (int32x4_t)vtrn2q_s16(v10, v11);
    int32x4_t v35 = (int32x4_t)vtrn1q_s16(v12, v13);
    int32x4_t v36 = (int32x4_t)vtrn2q_s16(v12, v13);
    int64x2_t v37 = (int64x2_t)vtrn1q_s32(v33, v35);
    int64x2_t v38 = (int64x2_t)vtrn2q_s32(v33, v35);
    int64x2_t v39 = (int64x2_t)vtrn1q_s32(v34, v36);
    int64x2_t v40 = (int64x2_t)vtrn2q_s32(v34, v36);
    int64x2_t v41 = (int64x2_t)vtrn1q_s32(v30, v32);
    int64x2_t v42 = (int64x2_t)vtrn2q_s32(v30, v32);
    int64x2_t v43 = (int64x2_t)vtrn1q_s32(v29, v31);
    int64x2_t v44 = (int64x2_t)vtrn2q_s32(v29, v31);
    int64x2_t v45 = vtrn1q_s64(v43, v37);
    int64x2_t v46 = vtrn2q_s64(v43, v37);
    int64x2_t v47 = vtrn1q_s64(v41, v39);
    int64x2_t v48 = vtrn2q_s64(v41, v39);
    int64x2_t v49 = vtrn2q_s64(v44, v38);
    int64x2_t v50 = vtrn1q_s64(v44, v38);
    int64x2_t v51 = vtrn1q_s64(v42, v40);
    int64x2_t v52 = vtrn2q_s64(v42, v40);
    int32x4_t v53 = (int32x4_t)vtrn1q_s16(v14, v15);
    int32x4_t v54 = (int32x4_t)vtrn2q_s16(v14, v15);
    int32x4_t v55 = (int32x4_t)vtrn1q_s16(v1, v2);
    int32x4_t v56 = (int32x4_t)vtrn2q_s16(v1, v2);
    int32x4_t v57 = (int32x4_t)vtrn1q_s16(v3, v4);
    int32x4_t v58 = (int32x4_t)vtrn2q_s16(v3, v4);
    int32x4_t v59 = (int32x4_t)vtrn1q_s16(v26, v27);
    int32x4_t v60 = (int32x4_t)vtrn2q_s16(v26, v27);
    int64x2_t v61 = (int64x2_t)vtrn1q_s32(v57, v59);
    int64x2_t v62 = (int64x2_t)vtrn2q_s32(v57, v59);
    int64x2_t v63 = (int64x2_t)vtrn1q_s32(v58, v60);
    int64x2_t v64 = (int64x2_t)vtrn2q_s32(v58, v60);
    int64x2_t v65 = (int64x2_t)vtrn1q_s32(v54, v56);
    int64x2_t v66 = (int64x2_t)vtrn2q_s32(v54, v56);
    int64x2_t v67 = (int64x2_t)vtrn1q_s32(v53, v55);
    int64x2_t v68 = (int64x2_t)vtrn2q_s32(v53, v55);
    v28[-1] = v45;
    uint64_t v69 = (int64x2_t *)((char *)v28 + v6 - 16);
    *int64x2_t v28 = vtrn1q_s64(v67, v61);
    uint64_t v70 = (int64x2_t *)((char *)v28 + v6);
    *uint64_t v69 = v47;
    uint64_t v71 = (int64x2_t *)((char *)v69 + v6);
    int64x2_t *v70 = vtrn1q_s64(v65, v63);
    uint64_t v72 = (int64x2_t *)((char *)v70 + v6);
    *uint64_t v71 = v50;
    uint64_t v73 = (int64x2_t *)((char *)v71 + v6);
    int64x2_t *v72 = vtrn1q_s64(v68, v62);
    uint64_t v74 = (int64x2_t *)((char *)v72 + v6);
    *uint64_t v73 = v51;
    uint64_t v75 = (int64x2_t *)((char *)v73 + v6);
    int64x2_t *v74 = vtrn1q_s64(v66, v64);
    uint64_t v76 = (int64x2_t *)((char *)v74 + v6);
    int64x2_t *v75 = v46;
    uint64_t v77 = (int64x2_t *)((char *)v75 + v6);
    *uint64_t v76 = vtrn2q_s64(v67, v61);
    uint64_t v78 = (int64x2_t *)((char *)v76 + v6);
    *uint64_t v77 = v48;
    uint64_t v79 = (int64x2_t *)((char *)v77 + v6);
    *uint64_t v78 = vtrn2q_s64(v65, v63);
    uint64_t v80 = (int64x2_t *)((char *)v78 + v6);
    *uint64_t v79 = v49;
    *uint64_t v80 = vtrn2q_s64(v68, v62);
    *(int64x2_t *)((char *)v79 + v6) = v52;
    *(int64x2_t *)((char *)v80 + v6) = vtrn2q_s64(v66, v64);
  }
}

uint64_t sub_224A92000(uint64_t result, uint64_t a2, int *a3, int8x8_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v8 = a8;
  int v9 = *a3;
  int v10 = a3[1];
  unsigned int v11 = a3[2];
  int16x8_t v12 = (const char *)(a6 + 128);
  unsigned int v13 = v10 | v11;
  int16x8_t v14 = (int8x8_t *)((char *)a4 - 4 * a5);
  unsigned int v15 = v9 | v13;
  do
  {
    int8x8_t v16 = *v14++;
    int8x8_t v17 = *a4++;
    if ((v15 & 3) != 0)
    {
      vld1_dup_s8(v12);
      int16x8_t v18 = v12 + 8;
      int8x8_t v19 = vand_s8(v17, (int8x8_t)0xFF000000FFLL);
      vld1_dup_s8(v18);
      int16x8_t v12 = v18 - 8;
      if (vtst_s32((int32x2_t)vbsl_s8(vtst_s8(v19, (int8x8_t)0xFF000000FFLL), v19, vand_s8(v16, (int8x8_t)0xFF000000FFLL)), (int32x2_t)0xFF000000FFLL))
      {
        if ((v11 & 3) != 0)
        {
          sub_224A91C04(v8);
        }
        else if ((v13 & 3) != 0)
        {
          sub_224A919F8(v8);
        }
        else
        {
          sub_224A917C0();
        }
      }
    }
    v15 >>= 2;
    v13 >>= 2;
    v11 >>= 2;
    result += 16;
  }
  while (v15);
  return result;
}

void sub_224A92148(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v8 = a8;
  int v9 = *a3;
  int v10 = a3[1];
  unsigned int v11 = a3[2];
  int16x8_t v12 = (const char *)(a6 + 128);
  unsigned int v13 = v10 | v11;
  int16x8_t v14 = (__int32 *)(a4 - 4);
  uint64_t v15 = a5;
  unsigned int v16 = v9 | v13;
  do
  {
    v18.i32[0] = *v14;
    v19.i32[0] = v14[1];
    int8x8_t v17 = &v14[v15];
    v18.i32[1] = *v17;
    v19.i32[1] = v17[1];
    int16x8_t v14 = &v17[v15];
    if ((v16 & 3) != 0
      && (vld1_dup_s8(v12),
          int16x8_t v20 = v12 + 8,
          int8x8_t v21 = vand_s8(v19, (int8x8_t)0xFF000000FFLL),
          vld1_dup_s8(v20),
          int16x8_t v12 = v20 - 8,
          *(void *)&vtst_s32((int32x2_t)vbsl_s8(vtst_s8(v21, (int8x8_t)0xFF000000FFLL), v21, vand_s8(v18, (int8x8_t)0xFF000000FFLL)), (int32x2_t)0xFF000000FFLL)))
    {
      if ((v11 & 3) != 0)
      {
        sub_224A91CF0(v8);
      }
      else if ((v13 & 3) != 0)
      {
        sub_224A91A7C(v8);
      }
      else
      {
        sub_224A91804();
      }
    }
    else
    {
      a1 += 8 * a2;
    }
    v16 >>= 2;
    v13 >>= 2;
    v11 >>= 2;
  }
  while (v16);
}

uint64_t sub_224A92298(uint64_t result, uint64_t a2, _DWORD *a3, int8x8_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v8 = a8;
  unsigned int v9 = a3[1];
  int v10 = (const char *)(a6 + 128);
  unsigned int v11 = (int8x8_t *)((char *)a4 - 4 * a5);
  unsigned int v12 = *a3 | v9;
  do
  {
    int8x8_t v13 = *v11++;
    int8x8_t v14 = *a4++;
    if ((v12 & 3) != 0)
    {
      vld1_dup_s8(v10);
      uint64_t v15 = v10 + 8;
      int8x8_t v16 = vand_s8(v14, (int8x8_t)0xFF000000FFLL);
      vld1_dup_s8(v15);
      int v10 = v15 - 8;
      if (vtst_s32((int32x2_t)vbsl_s8(vtst_s8(v16, (int8x8_t)0xFF000000FFLL), v16, vand_s8(v13, (int8x8_t)0xFF000000FFLL)), (int32x2_t)0xFF000000FFLL))
      {
        if ((v9 & 3) != 0) {
          sub_224A918B4(v8);
        }
        else {
          sub_224A917C0();
        }
      }
    }
    v12 >>= 2;
    v9 >>= 2;
    result += 16;
  }
  while (v12);
  return result;
}

void sub_224A923B8(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v8 = a8;
  unsigned int v9 = a3[1];
  int v10 = (const char *)(a6 + 128);
  unsigned int v11 = (__int32 *)(a4 - 4);
  uint64_t v12 = a5;
  unsigned int v13 = *a3 | v9;
  do
  {
    v15.i32[0] = *v11;
    v16.i32[0] = v11[1];
    int8x8_t v14 = &v11[v12];
    v15.i32[1] = *v14;
    v16.i32[1] = v14[1];
    unsigned int v11 = &v14[v12];
    if ((v13 & 3) != 0
      && (vld1_dup_s8(v10),
          int8x8_t v17 = v10 + 8,
          int8x8_t v18 = vand_s8(v16, (int8x8_t)0xFF000000FFLL),
          vld1_dup_s8(v17),
          int v10 = v17 - 8,
          *(void *)&vtst_s32((int32x2_t)vbsl_s8(vtst_s8(v18, (int8x8_t)0xFF000000FFLL), v18, vand_s8(v15, (int8x8_t)0xFF000000FFLL)), (int32x2_t)0xFF000000FFLL)))
    {
      if ((v9 & 3) != 0) {
        sub_224A91908(v8);
      }
      else {
        sub_224A91804();
      }
    }
    else
    {
      a1 += 8 * a2;
    }
    v13 >>= 2;
    v9 >>= 2;
  }
  while (v13);
}

uint64_t sub_224A924E0(uint64_t a1, uint64_t a2, int16x8_t *a3, __n128 *a4, unsigned int a5)
{
  __n128 v5 = a4[1];
  __n128 v6 = (__n128)vaddq_s16(*a3, *(int16x8_t *)a4);
  __n128 v7 = (__n128)vaddq_s16(a3[1], (int16x8_t)v5);
  return ((uint64_t (*)(uint64_t, uint64_t, int16x8_t *, __n128 *, __n128, __n128, __n128, __n128, __n128))((char *)&qword_224A928B8 - *((unsigned __int16 *)&qword_224A928B8 + __clz(a5) - 24)))(a1, a2, &a3[2], &a4[2], v6, v7, *a4, v5, (__n128)vqrshrun_high_n_s16(vqrshrun_n_s16((int16x8_t)v6, 5uLL), (int16x8_t)v7, 5uLL));
}

_DWORD *sub_224A92510(_DWORD *a1, uint64_t a2, int16x8_t *a3, int16x8_t *a4, double a5, double a6, double a7, double a8, __n128 a9, uint64_t a10, int a11)
{
  unsigned int v11 = (_DWORD *)((char *)a1 + a2);
  uint64_t v12 = 2 * a2;
  *a1 = a9.n128_u32[0];
  unsigned int v13 = (_DWORD *)((char *)a1 + v12);
  *unsigned int v11 = a9.n128_u32[1];
  int8x8_t v14 = (_DWORD *)((char *)v11 + v12);
  *unsigned int v13 = a9.n128_u32[2];
  uint64_t result = (_DWORD *)((char *)v13 + v12);
  *int8x8_t v14 = a9.n128_u32[3];
  int8x8_t v16 = (_DWORD *)((char *)v14 + v12);
  if (a11 != 4)
  {
    int16x8_t v18 = *a3;
    int16x8_t v19 = a3[1];
    int8x8_t v17 = a3 + 2;
    int16x8_t v21 = *a4;
    int16x8_t v22 = a4[1];
    int16x8_t v20 = a4 + 2;
    int8x16_t v23 = vqrshrun_high_n_s16(vqrshrun_n_s16(vaddq_s16(v18, v21), 5uLL), vaddq_s16(v19, v22), 5uLL);
    *uint64_t result = v23.i32[0];
    int16x8_t v24 = (_DWORD *)((char *)result + v12);
    _DWORD *v16 = v23.i32[1];
    int16x8_t v25 = (_DWORD *)((char *)v16 + v12);
    _DWORD *v24 = v23.i32[2];
    uint64_t result = (_DWORD *)((char *)v24 + v12);
    *int16x8_t v25 = v23.i32[3];
    int16x8_t v26 = (_DWORD *)((char *)v25 + v12);
    if (a11 != 8)
    {
      int8x16_t v27 = vqrshrun_high_n_s16(vqrshrun_n_s16(vaddq_s16(*v17, *v20), 5uLL), vaddq_s16(v17[1], v20[1]), 5uLL);
      *uint64_t result = v27.i32[0];
      int64x2_t v28 = (_DWORD *)((char *)result + v12);
      *int16x8_t v26 = v27.i32[1];
      int32x4_t v29 = (_DWORD *)((char *)v26 + v12);
      int8x16_t v30 = vqrshrun_high_n_s16(vqrshrun_n_s16(vaddq_s16(v17[2], v20[2]), 5uLL), vaddq_s16(v17[3], v20[3]), 5uLL);
      *int64x2_t v28 = v27.i32[2];
      int32x4_t v31 = (_DWORD *)((char *)v28 + v12);
      *int32x4_t v29 = v27.i32[3];
      int32x4_t v32 = (_DWORD *)((char *)v29 + v12);
      *int32x4_t v31 = v30.i32[0];
      int32x4_t v33 = (_DWORD *)((char *)v31 + v12);
      *int32x4_t v32 = v30.i32[1];
      *int32x4_t v33 = v30.i32[2];
      uint64_t result = (_DWORD *)((char *)v33 + v12);
      *(_DWORD *)((char *)v32 + v12) = v30.i32[3];
    }
  }
  return result;
}

uint64_t sub_224A928C4(uint64_t a1, uint64_t a2, int16x8_t *a3, __n128 *a4, unsigned int a5, uint64_t a6, unsigned int a7)
{
  int16x8_t v7 = vshlq_n_s16(vnegq_s16(vdupq_n_s16(a7)), 0xBuLL);
  __n128 v8 = a4[1];
  __n128 v9 = (__n128)vaddq_s16(*(int16x8_t *)a4, vqdmulhq_s16(vsubq_s16(*(int16x8_t *)a4, *a3), v7));
  __n128 v10 = (__n128)vaddq_s16((int16x8_t)v8, vqdmulhq_s16(vsubq_s16((int16x8_t)v8, a3[1]), v7));
  return ((uint64_t (*)(uint64_t, uint64_t, int16x8_t *, __n128 *, __n128, __n128, __n128, __n128, __n128))((char *)&qword_224A92E88 - *((unsigned __int16 *)&qword_224A92E88 + __clz(a5) - 24)))(a1, a2, &a3[2], &a4[2], v9, v10, *a4, v8, (__n128)vqrshrun_high_n_s16(vqrshrun_n_s16((int16x8_t)v9, 4uLL), (int16x8_t)v10, 4uLL));
}

_DWORD *sub_224A92910(_DWORD *a1, uint64_t a2, int16x8_t *a3, int16x8_t *a4, double a5, double a6, double a7, double a8, __n128 a9, uint64_t a10, int a11)
{
  uint64_t v12 = (_DWORD *)((char *)a1 + a2);
  uint64_t v13 = 2 * a2;
  *a1 = a9.n128_u32[0];
  int8x8_t v14 = (_DWORD *)((char *)a1 + v13);
  *uint64_t v12 = a9.n128_u32[1];
  int8x8_t v15 = (_DWORD *)((char *)v12 + v13);
  *int8x8_t v14 = a9.n128_u32[2];
  uint64_t result = (_DWORD *)((char *)v14 + v13);
  *int8x8_t v15 = a9.n128_u32[3];
  int8x8_t v17 = (_DWORD *)((char *)v15 + v13);
  if (a11 != 4)
  {
    int16x8_t v19 = *a3;
    int16x8_t v20 = a3[1];
    int16x8_t v18 = a3 + 2;
    int16x8_t v22 = *a4;
    int16x8_t v23 = a4[1];
    int16x8_t v21 = a4 + 2;
    int8x16_t v24 = vqrshrun_high_n_s16(vqrshrun_n_s16(vaddq_s16(v22, vqdmulhq_s16(vsubq_s16(v22, v19), v11)), 4uLL), vaddq_s16(v23, vqdmulhq_s16(vsubq_s16(v23, v20), v11)), 4uLL);
    *uint64_t result = v24.i32[0];
    int16x8_t v25 = (_DWORD *)((char *)result + v13);
    *int8x8_t v17 = v24.i32[1];
    int16x8_t v26 = (_DWORD *)((char *)v17 + v13);
    *int16x8_t v25 = v24.i32[2];
    uint64_t result = (_DWORD *)((char *)v25 + v13);
    *int16x8_t v26 = v24.i32[3];
    int8x16_t v27 = (_DWORD *)((char *)v26 + v13);
    if (a11 != 8)
    {
      int8x16_t v28 = vqrshrun_high_n_s16(vqrshrun_n_s16(vaddq_s16(*v21, vqdmulhq_s16(vsubq_s16(*v21, *v18), v11)), 4uLL), vaddq_s16(v21[1], vqdmulhq_s16(vsubq_s16(v21[1], v18[1]), v11)), 4uLL);
      *uint64_t result = v28.i32[0];
      int32x4_t v29 = (_DWORD *)((char *)result + v13);
      *int8x16_t v27 = v28.i32[1];
      int8x16_t v30 = (_DWORD *)((char *)v27 + v13);
      int8x16_t v31 = vqrshrun_high_n_s16(vqrshrun_n_s16(vaddq_s16(v21[2], vqdmulhq_s16(vsubq_s16(v21[2], v18[2]), v11)), 4uLL), vaddq_s16(v21[3], vqdmulhq_s16(vsubq_s16(v21[3], v18[3]), v11)), 4uLL);
      *int32x4_t v29 = v28.i32[2];
      int32x4_t v32 = (_DWORD *)((char *)v29 + v13);
      _DWORD *v30 = v28.i32[3];
      int32x4_t v33 = (_DWORD *)((char *)v30 + v13);
      *int32x4_t v32 = v31.i32[0];
      int32x4_t v34 = (_DWORD *)((char *)v32 + v13);
      *int32x4_t v33 = v31.i32[1];
      _DWORD *v34 = v31.i32[2];
      uint64_t result = (_DWORD *)((char *)v34 + v13);
      *(_DWORD *)((char *)v33 + v13) = v31.i32[3];
    }
  }
  return result;
}

uint64_t sub_224A92E94(uint64_t a1, uint64_t a2, int16x8_t *a3, __n128 *a4, unsigned int a5, uint64_t a6, int8x16_t *a7)
{
  v7.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v7.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  _Q30 = vmulq_s8(*a7, v7);
  __n128 v9 = a4[1];
  __asm { SHLL2           V29.8H, V30.16B, #8 }
  __n128 v15 = (__n128)vaddq_s16(*(int16x8_t *)a4, vqdmulhq_s16(vsubq_s16(*(int16x8_t *)a4, *a3), vshll_n_s8(*(int8x8_t *)_Q30.i8, 8uLL)));
  __n128 v16 = (__n128)vaddq_s16((int16x8_t)v9, vqdmulhq_s16(vsubq_s16((int16x8_t)v9, a3[1]), _Q29));
  return ((uint64_t (*)(uint64_t, uint64_t, int16x8_t *, __n128 *, __n128, __n128, __n128, __n128, __n128))((char *)&qword_224A93630 - *((unsigned __int16 *)&qword_224A93630 + __clz(a5) - 24)))(a1, a2, &a3[2], &a4[2], v15, v16, *a4, v9, (__n128)vqrshrun_high_n_s16(vqrshrun_n_s16((int16x8_t)v15, 4uLL), (int16x8_t)v16, 4uLL));
}

_DWORD *sub_224A92EE8(_DWORD *a1, uint64_t a2, int16x8_t *a3, int16x8_t *a4, double a5, double a6, double a7, double a8, __n128 a9, uint64_t a10, int a11, int8x16_t *a12)
{
  uint64_t v13 = (_DWORD *)((char *)a1 + a2);
  uint64_t v14 = 2 * a2;
  *a1 = a9.n128_u32[0];
  __n128 v15 = (_DWORD *)((char *)a1 + v14);
  *uint64_t v13 = a9.n128_u32[1];
  __n128 v16 = (_DWORD *)((char *)v13 + v14);
  *__n128 v15 = a9.n128_u32[2];
  uint64_t result = (_DWORD *)((char *)v15 + v14);
  _DWORD *v16 = a9.n128_u32[3];
  int16x8_t v18 = (_DWORD *)((char *)v16 + v14);
  if (a11 != 4)
  {
    int8x16_t v20 = *a12;
    int16x8_t v19 = a12 + 1;
    int16x8_t v22 = *a3;
    int16x8_t v23 = a3[1];
    int16x8_t v21 = a3 + 2;
    _Q30 = vmulq_s8(v20, v12);
    int16x8_t v26 = *a4;
    int16x8_t v27 = a4[1];
    int16x8_t v25 = a4 + 2;
    __asm { SHLL2           V29.8H, V30.16B, #8 }
    int8x16_t v33 = vqrshrun_high_n_s16(vqrshrun_n_s16(vaddq_s16(v26, vqdmulhq_s16(vsubq_s16(v26, v22), vshll_n_s8(*(int8x8_t *)_Q30.i8, 8uLL))), 4uLL), vaddq_s16(v27, vqdmulhq_s16(vsubq_s16(v27, v23), _Q29)), 4uLL);
    *uint64_t result = v33.i32[0];
    int32x4_t v34 = (_DWORD *)((char *)result + v14);
    *int16x8_t v18 = v33.i32[1];
    int32x4_t v35 = (_DWORD *)((char *)v18 + v14);
    _DWORD *v34 = v33.i32[2];
    uint64_t result = (_DWORD *)((char *)v34 + v14);
    *int32x4_t v35 = v33.i32[3];
    int32x4_t v36 = (_DWORD *)((char *)v35 + v14);
    if (a11 != 8)
    {
      _Q30 = vmulq_s8(*v19, v12);
      __asm { SHLL2           V29.8H, V30.16B, #8 }
      int8x16_t v39 = vqrshrun_high_n_s16(vqrshrun_n_s16(vaddq_s16(*v25, vqdmulhq_s16(vsubq_s16(*v25, *v21), vshll_n_s8(*(int8x8_t *)_Q30.i8, 8uLL))), 4uLL), vaddq_s16(v25[1], vqdmulhq_s16(vsubq_s16(v25[1], v21[1]), _Q29)), 4uLL);
      *uint64_t result = v39.i32[0];
      int64x2_t v40 = (_DWORD *)((char *)result + v14);
      _DWORD *v36 = v39.i32[1];
      int64x2_t v41 = (_DWORD *)((char *)v36 + v14);
      _Q30 = vmulq_s8(v19[1], v12);
      __asm { SHLL2           V29.8H, V30.16B, #8 }
      int8x16_t v44 = vqrshrun_high_n_s16(vqrshrun_n_s16(vaddq_s16(v25[2], vqdmulhq_s16(vsubq_s16(v25[2], v21[2]), vshll_n_s8(*(int8x8_t *)_Q30.i8, 8uLL))), 4uLL), vaddq_s16(v25[3], vqdmulhq_s16(vsubq_s16(v25[3], v21[3]), _Q29)), 4uLL);
      *int64x2_t v40 = v39.i32[2];
      int64x2_t v45 = (_DWORD *)((char *)v40 + v14);
      *int64x2_t v41 = v39.i32[3];
      int64x2_t v46 = (_DWORD *)((char *)v41 + v14);
      *int64x2_t v45 = v44.i32[0];
      int64x2_t v47 = (_DWORD *)((char *)v45 + v14);
      _DWORD *v46 = v44.i32[1];
      *int64x2_t v47 = v44.i32[2];
      uint64_t result = (_DWORD *)((char *)v47 + v14);
      *(_DWORD *)((char *)v46 + v14) = v44.i32[3];
    }
  }
  return result;
}

uint64_t sub_224A9363C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  v5.n128_u64[0] = 0x4040404040404040;
  v5.n128_u64[1] = 0x4040404040404040;
  return ((uint64_t (*)(__n128, __n128))((char *)&dword_224A9383C
                                                 - *((unsigned __int16 *)&dword_224A9383C + __clz(a5) - 24)))((__n128)vdupq_n_s16(0x1AF7u), v5);
}

_DWORD *sub_224A93668(_DWORD *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, uint16x8_t a5, int8x16_t a6, uint64_t a7, int a8, int8x16_t *a9)
{
  do
  {
    int16x8_t v10 = *a3;
    int16x8_t v11 = a3[1];
    a3 += 2;
    int16x8_t v12 = *a4;
    int16x8_t v13 = a4[1];
    a4 += 2;
    BOOL v14 = __OFSUB__(a8, 4);
    a8 -= 4;
    int16x8_t v15 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v10, v12)), 8uLL);
    int16x8_t v16 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v11, v13)), 8uLL);
    int8x8_t v17 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v15, 9uLL), vsubq_s16(v12, v10)), v10), 4uLL);
    int8x8_t v18 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v16, 9uLL), vsubq_s16(v13, v11)), v11), 4uLL);
    *a9++ = vsubq_s8(a6, vuzp1q_s8((int8x16_t)v15, (int8x16_t)v16));
    *uint64_t result = v17.i32[0];
    int16x8_t v19 = (_DWORD *)((char *)result + a2);
    _DWORD *v9 = v17.i32[1];
    int8x16_t v20 = (_DWORD *)((char *)v9 + a2);
    *int16x8_t v19 = v18.i32[0];
    uint64_t result = (_DWORD *)((char *)v19 + a2);
    *int8x16_t v20 = v18.i32[1];
    __n128 v9 = (_DWORD *)((char *)v20 + a2);
  }
  while (!((a8 < 0) ^ v14 | (a8 == 0)));
  return result;
}

int8x8_t *sub_224A936D8(int8x8_t *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, uint16x8_t a5, int8x16_t a6, uint64_t a7, int a8, int8x16_t *a9)
{
  do
  {
    int16x8_t v10 = *a3;
    int16x8_t v11 = a3[1];
    a3 += 2;
    int16x8_t v12 = *a4;
    int16x8_t v13 = a4[1];
    a4 += 2;
    BOOL v14 = __OFSUB__(a8, 2);
    a8 -= 2;
    int16x8_t v15 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v10, v12)), 8uLL);
    int16x8_t v16 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v11, v13)), 8uLL);
    *a9++ = vsubq_s8(a6, vuzp1q_s8((int8x16_t)v15, (int8x16_t)v16));
    *uint64_t result = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v15, 9uLL), vsubq_s16(v12, v10)), v10), 4uLL);
    uint64_t result = (int8x8_t *)((char *)result + a2);
    int8x8_t *v9 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v16, 9uLL), vsubq_s16(v13, v11)), v11), 4uLL);
    __n128 v9 = (int8x8_t *)((char *)v9 + a2);
  }
  while (!((a8 < 0) ^ v14 | (a8 == 0)));
  return result;
}

int8x8_t *sub_224A93740(int8x8_t *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, unsigned int a5, int a6, int8x16_t *a7, uint16x8_t a8, int8x16_t a9)
{
  uint64_t v10 = a2 - a5;
  int16x8_t v11 = (int8x16_t *)((char *)a7 + a5);
  int16x8_t v12 = (int16x8_t *)((char *)a4 + 2 * a5);
  int16x8_t v13 = (int16x8_t *)((char *)a3 + 2 * a5);
  do
  {
    int v14 = a5;
    do
    {
      int16x8_t v15 = *a3;
      int16x8_t v16 = a3[1];
      a3 += 2;
      int16x8_t v17 = *a4;
      int16x8_t v18 = a4[1];
      a4 += 2;
      int16x8_t v19 = *v13;
      int16x8_t v20 = v13[1];
      v13 += 2;
      int16x8_t v21 = *v12;
      int16x8_t v22 = v12[1];
      v12 += 2;
      BOOL v23 = __OFSUB__(v14, 16);
      v14 -= 16;
      int16x8_t v24 = vsubq_s16(v17, v15);
      int16x8_t v25 = vsubq_s16(v18, v16);
      int16x8_t v26 = vsubq_s16(v21, v19);
      int16x8_t v27 = vsubq_s16(v22, v20);
      int16x8_t v28 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabsq_s16(v24)), 8uLL);
      int16x8_t v29 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabsq_s16(v25)), 8uLL);
      int16x8_t v30 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabsq_s16(v26)), 8uLL);
      int16x8_t v31 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabsq_s16(v27)), 8uLL);
      *a7++ = vsubq_s8(a9, vuzp1q_s8((int8x16_t)v28, (int8x16_t)v29));
      *v11++ = vsubq_s8(a9, vuzp1q_s8((int8x16_t)v30, (int8x16_t)v31));
      *uint64_t result = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v28, 9uLL), v24), v15), 4uLL);
      result[1] = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v29, 9uLL), v25), v16), 4uLL);
      result += 2;
      int8x8_t *v9 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v30, 9uLL), v26), v19), 4uLL);
      v9[1] = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v31, 9uLL), v27), v20), 4uLL);
      v9 += 2;
    }
    while (!((v14 < 0) ^ v23 | (v14 == 0)));
    BOOL v23 = __OFSUB__(a6, 2);
    a6 -= 2;
    a3 = (int16x8_t *)((char *)a3 + 2 * a5);
    a4 = (int16x8_t *)((char *)a4 + 2 * a5);
    int16x8_t v13 = (int16x8_t *)((char *)v13 + 2 * a5);
    int16x8_t v12 = (int16x8_t *)((char *)v12 + 2 * a5);
    a7 = (int8x16_t *)((char *)a7 + a5);
    int16x8_t v11 = (int8x16_t *)((char *)v11 + a5);
    uint64_t result = (int8x8_t *)((char *)result + v10);
    __n128 v9 = (int8x8_t *)((char *)v9 + v10);
  }
  while (!((a6 < 0) ^ v23 | (a6 == 0)));
  return result;
}

uint64_t sub_224A93848(double a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  int8x8_t v10 = vdup_n_s8(a10);
  return ((uint64_t (*)(__n128, __n128, double, double))((char *)&qword_224A93A60
                                                                 - *((unsigned __int16 *)&qword_224A93A60
                                                                   + __clz(a7)
                                                                   - 24)))((__n128)vdupq_n_s16(0x1AF7u), a2, *(double *)&v10, COERCE_DOUBLE(vsub_s8((int8x8_t)0x8181818181818181, v10)));
}

_DWORD *sub_224A9387C(_DWORD *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, uint16x8_t a5, double a6, double a7, uint8x8_t a8, uint64_t a9, int a10, uint8x8_t *a11)
{
  do
  {
    int16x8_t v12 = *a3;
    int16x8_t v13 = a3[1];
    a3 += 2;
    int16x8_t v14 = *a4;
    int16x8_t v15 = a4[1];
    a4 += 2;
    BOOL v16 = __OFSUB__(a10, 4);
    a10 -= 4;
    int16x8_t v17 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v12, v14)), 8uLL);
    int16x8_t v18 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v13, v15)), 8uLL);
    int8x8_t v19 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v17, 9uLL), vsubq_s16(v14, v12)), v12), 4uLL);
    int8x8_t v20 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v18, 9uLL), vsubq_s16(v15, v13)), v13), 4uLL);
    *a11++ = vhsub_u8(a8, (uint8x8_t)vmovn_s16(vpaddq_s16(v17, v18)));
    *uint64_t result = v19.i32[0];
    int16x8_t v21 = (_DWORD *)((char *)result + a2);
    *int16x8_t v11 = v19.i32[1];
    int16x8_t v22 = (_DWORD *)((char *)v11 + a2);
    *int16x8_t v21 = v20.i32[0];
    uint64_t result = (_DWORD *)((char *)v21 + a2);
    *int16x8_t v22 = v20.i32[1];
    int16x8_t v11 = (_DWORD *)((char *)v22 + a2);
  }
  while (!((a10 < 0) ^ v16 | (a10 == 0)));
  return result;
}

int8x8_t *sub_224A938F0(int8x8_t *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, uint16x8_t a5, double a6, double a7, uint8x8_t a8, uint64_t a9, int a10, uint8x8_t *a11)
{
  do
  {
    int16x8_t v12 = *a3;
    int16x8_t v13 = a3[1];
    a3 += 2;
    int16x8_t v14 = *a4;
    int16x8_t v15 = a4[1];
    a4 += 2;
    BOOL v16 = __OFSUB__(a10, 2);
    a10 -= 2;
    int16x8_t v17 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v12, v14)), 8uLL);
    int16x8_t v18 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v13, v15)), 8uLL);
    *a11++ = vhsub_u8(a8, (uint8x8_t)vmovn_s16(vpaddq_s16(v17, v18)));
    *uint64_t result = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v17, 9uLL), vsubq_s16(v14, v12)), v12), 4uLL);
    uint64_t result = (int8x8_t *)((char *)result + a2);
    *int16x8_t v11 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v18, 9uLL), vsubq_s16(v15, v13)), v13), 4uLL);
    int16x8_t v11 = (int8x8_t *)((char *)v11 + a2);
  }
  while (!((a10 < 0) ^ v16 | (a10 == 0)));
  return result;
}

int8x8_t *sub_224A9395C(int8x8_t *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, unsigned int a5, int a6, uint8x8_t *a7, uint16x8_t a8, double a9, double a10, uint8x8_t a11)
{
  uint64_t v12 = a2 - a5;
  int16x8_t v13 = (uint8x8_t *)((char *)a7 + ((unint64_t)a5 >> 1));
  int16x8_t v14 = (int16x8_t *)((char *)a4 + 2 * a5);
  int16x8_t v15 = (int16x8_t *)((char *)a3 + 2 * a5);
  do
  {
    int v16 = a5;
    do
    {
      int16x8_t v17 = *a3;
      int16x8_t v18 = a3[1];
      a3 += 2;
      int16x8_t v19 = *a4;
      int16x8_t v20 = a4[1];
      a4 += 2;
      int16x8_t v21 = *v15;
      int16x8_t v22 = v15[1];
      v15 += 2;
      int16x8_t v23 = *v14;
      int16x8_t v24 = v14[1];
      v14 += 2;
      BOOL v25 = __OFSUB__(v16, 16);
      v16 -= 16;
      int16x8_t v26 = vsubq_s16(v19, v17);
      int16x8_t v27 = vsubq_s16(v20, v18);
      int16x8_t v28 = vsubq_s16(v23, v21);
      int16x8_t v29 = vsubq_s16(v24, v22);
      int16x8_t v30 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabsq_s16(v26)), 8uLL);
      int16x8_t v31 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabsq_s16(v27)), 8uLL);
      int16x8_t v32 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabsq_s16(v28)), 8uLL);
      int16x8_t v33 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabsq_s16(v29)), 8uLL);
      *a7++ = vhsub_u8(a11, (uint8x8_t)vmovn_s16(vpaddq_s16(v30, v31)));
      *v13++ = vhsub_u8(a11, (uint8x8_t)vmovn_s16(vpaddq_s16(v32, v33)));
      *uint64_t result = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v30, 9uLL), v26), v17), 4uLL);
      result[1] = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v31, 9uLL), v27), v18), 4uLL);
      result += 2;
      *int16x8_t v11 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v32, 9uLL), v28), v21), 4uLL);
      v11[1] = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v33, 9uLL), v29), v22), 4uLL);
      v11 += 2;
    }
    while (!((v16 < 0) ^ v25 | (v16 == 0)));
    BOOL v25 = __OFSUB__(a6, 2);
    a6 -= 2;
    a3 = (int16x8_t *)((char *)a3 + 2 * a5);
    a4 = (int16x8_t *)((char *)a4 + 2 * a5);
    int16x8_t v15 = (int16x8_t *)((char *)v15 + 2 * a5);
    int16x8_t v14 = (int16x8_t *)((char *)v14 + 2 * a5);
    a7 = (uint8x8_t *)((char *)a7 + ((unint64_t)a5 >> 1));
    int16x8_t v13 = (uint8x8_t *)((char *)v13 + ((unint64_t)a5 >> 1));
    uint64_t result = (int8x8_t *)((char *)result + v12);
    int16x8_t v11 = (int8x8_t *)((char *)v11 + v12);
  }
  while (!((a6 < 0) ^ v25 | (a6 == 0)));
  return result;
}

uint64_t sub_224A93A6C(double a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  __n128 v10 = (__n128)vdupq_n_s16(a10);
  v11.i64[0] = 0x100010001000100;
  v11.i64[1] = 0x100010001000100;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)&qword_224A93C80
                                                                 - *((unsigned __int16 *)&qword_224A93C80
                                                                   + __clz(a7)
                                                                   - 24)))((__n128)vdupq_n_s16(0x1AF7u), a2, v10, (__n128)vsubq_s16(v11, (int16x8_t)v10));
}

_DWORD *sub_224A93AA0(_DWORD *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, uint16x8_t a5, double a6, double a7, int16x4_t a8, uint64_t a9, int a10, _DWORD *a11)
{
  do
  {
    int16x8_t v12 = *a3;
    int16x8_t v13 = a3[1];
    a3 += 2;
    int16x8_t v14 = *a4;
    int16x8_t v15 = a4[1];
    a4 += 2;
    BOOL v16 = __OFSUB__(a10, 4);
    a10 -= 4;
    int16x8_t v17 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v12, v14)), 8uLL);
    int16x8_t v18 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v13, v15)), 8uLL);
    int8x8_t v19 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v17, 9uLL), vsubq_s16(v14, v12)), v12), 4uLL);
    int8x8_t v20 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v18, 9uLL), vsubq_s16(v15, v13)), v13), 4uLL);
    int16x8_t v21 = vaddq_s16((int16x8_t)vtrn1q_s64((int64x2_t)v17, (int64x2_t)v18), (int16x8_t)vtrn2q_s64((int64x2_t)v17, (int64x2_t)v18));
    int16x8_t v22 = vpaddq_s16(v21, v21);
    *(int16x4_t *)v22.i8 = vsub_s16(a8, *(int16x4_t *)v22.i8);
    *a11++ = vrshrn_n_s16(v22, 2uLL).u32[0];
    *uint64_t result = v19.i32[0];
    int16x8_t v23 = (_DWORD *)((char *)result + a2);
    *int16x8_t v11 = v19.i32[1];
    int16x8_t v24 = (_DWORD *)((char *)v11 + a2);
    *int16x8_t v23 = v20.i32[0];
    uint64_t result = (_DWORD *)((char *)v23 + a2);
    _DWORD *v24 = v20.i32[1];
    int16x8_t v11 = (_DWORD *)((char *)v24 + a2);
  }
  while (!((a10 < 0) ^ v16 | (a10 == 0)));
  return result;
}

int8x8_t *sub_224A93B20(int8x8_t *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, uint16x8_t a5, double a6, double a7, int16x4_t a8, uint64_t a9, int a10, _DWORD *a11)
{
  do
  {
    int16x8_t v12 = *a3;
    int16x8_t v13 = a3[1];
    a3 += 2;
    int16x8_t v14 = *a4;
    int16x8_t v15 = a4[1];
    a4 += 2;
    BOOL v16 = __OFSUB__(a10, 2);
    a10 -= 2;
    int16x8_t v17 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v12, v14)), 8uLL);
    int16x8_t v18 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v13, v15)), 8uLL);
    int8x8_t v19 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v17, 9uLL), vsubq_s16(v14, v12)), v12), 4uLL);
    int16x8_t v20 = vaddq_s16(v17, v18);
    int16x8_t v21 = vpaddq_s16(v20, v20);
    *(int16x4_t *)v21.i8 = vsub_s16(a8, *(int16x4_t *)v21.i8);
    *a11++ = vrshrn_n_s16(v21, 2uLL).u32[0];
    *uint64_t result = v19;
    uint64_t result = (int8x8_t *)((char *)result + a2);
    *int16x8_t v11 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v18, 9uLL), vsubq_s16(v15, v13)), v13), 4uLL);
    int16x8_t v11 = (int8x8_t *)((char *)v11 + a2);
  }
  while (!((a10 < 0) ^ v16 | (a10 == 0)));
  return result;
}

int8x8_t *sub_224A93B90(int8x8_t *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, unsigned int a5, int a6, int8x8_t *a7, uint16x8_t a8, double a9, double a10, int16x8_t a11)
{
  uint64_t v12 = a2 - a5;
  int16x8_t v13 = (int16x8_t *)((char *)a4 + 2 * a5);
  int16x8_t v14 = (int16x8_t *)((char *)a3 + 2 * a5);
  do
  {
    int v15 = a5;
    do
    {
      int16x8_t v16 = *a3;
      int16x8_t v17 = a3[1];
      a3 += 2;
      int16x8_t v18 = *a4;
      int16x8_t v19 = a4[1];
      a4 += 2;
      int16x8_t v20 = *v14;
      int16x8_t v21 = v14[1];
      v14 += 2;
      int16x8_t v22 = *v13;
      int16x8_t v23 = v13[1];
      v13 += 2;
      BOOL v24 = __OFSUB__(v15, 16);
      v15 -= 16;
      int16x8_t v25 = vsubq_s16(v18, v16);
      int16x8_t v26 = vsubq_s16(v19, v17);
      int16x8_t v27 = vsubq_s16(v22, v20);
      int16x8_t v28 = vsubq_s16(v23, v21);
      int16x8_t v29 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabsq_s16(v25)), 8uLL);
      int16x8_t v30 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabsq_s16(v26)), 8uLL);
      int16x8_t v31 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabsq_s16(v27)), 8uLL);
      int16x8_t v32 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabsq_s16(v28)), 8uLL);
      *a7++ = vrshrn_n_s16(vsubq_s16(a11, vpaddq_s16(vaddq_s16(v29, v31), vaddq_s16(v30, v32))), 2uLL);
      *uint64_t result = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v29, 9uLL), v25), v16), 4uLL);
      result[1] = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v30, 9uLL), v26), v17), 4uLL);
      result += 2;
      *int16x8_t v11 = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v31, 9uLL), v27), v20), 4uLL);
      v11[1] = vqrshrun_n_s16(vaddq_s16(vqdmulhq_s16(vshlq_n_s16(v32, 9uLL), v28), v21), 4uLL);
      v11 += 2;
    }
    while (!((v15 < 0) ^ v24 | (v15 == 0)));
    BOOL v24 = __OFSUB__(a6, 2);
    a6 -= 2;
    a3 = (int16x8_t *)((char *)a3 + 2 * a5);
    a4 = (int16x8_t *)((char *)a4 + 2 * a5);
    int16x8_t v14 = (int16x8_t *)((char *)v14 + 2 * a5);
    int16x8_t v13 = (int16x8_t *)((char *)v13 + 2 * a5);
    uint64_t result = (int8x8_t *)((char *)result + v12);
    int16x8_t v11 = (int8x8_t *)((char *)v11 + v12);
  }
  while (!((a6 < 0) ^ v24 | (a6 == 0)));
  return result;
}

uint64_t sub_224A93C8C(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  v8.n128_u64[0] = 0x4040404040404040;
  v8.n128_u64[1] = 0x4040404040404040;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128))((char *)&dword_224A93E14
                                                                         - *((unsigned __int16 *)&dword_224A93E14
                                                                           + __clz(a8)
                                                                           - 26)))(a1, a2, a3, a4, v8);
}

__int32 *sub_224A93CB0@<X0>(__int32 *result@<X0>, uint64_t a2@<X1>, uint8x8_t *a3@<X2>, int a4@<W4>, int8x8_t *a5@<X5>, __int32 *a6@<X8>, int8x8_t a7@<D4>)
{
  do
  {
    int8x8_t v7 = *a5++;
    uint8x8_t v8 = *a3++;
    v9.i32[0] = *result;
    BOOL v10 = __OFSUB__(a4, 2);
    a4 -= 2;
    v9.i32[1] = *a6;
    int8x8_t v11 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(v8, (uint8x8_t)v7), v9, (uint8x8_t)vsub_s8(a7, v7)), 6uLL);
    *uint64_t result = v11.i32[0];
    uint64_t result = (__int32 *)((char *)result + a2);
    *a6 = v11.i32[1];
    a6 = (__int32 *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v10 | (a4 == 0)));
  return result;
}

uint8x8_t *sub_224A93CE4@<X0>(uint8x8_t *result@<X0>, uint64_t a2@<X1>, uint8x16_t *a3@<X2>, int a4@<W4>, int8x16_t *a5@<X5>, uint64_t *a6@<X8>, int8x16_t a7@<Q4>)
{
  do
  {
    int8x16_t v7 = *a5++;
    uint8x16_t v8 = *a3++;
    *(uint8x8_t *)v9.i8 = *result;
    v9.i64[1] = *a6;
    uint8x16_t v10 = (uint8x16_t)vsubq_s8(a7, v7);
    BOOL v11 = __OFSUB__(a4, 2);
    a4 -= 2;
    int8x16_t v12 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v8.i8, *(uint8x8_t *)v7.i8), *result, *(uint8x8_t *)v10.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v8, (uint8x16_t)v7), v9, v10), 6uLL);
    *uint64_t result = *(uint8x8_t *)v12.i8;
    uint64_t result = (uint8x8_t *)((char *)result + a2);
    *a6 = v12.i64[1];
    a6 = (uint64_t *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v11 | (a4 == 0)));
  return result;
}

uint8x8_t *sub_224A93D24@<X0>(uint8x8_t *result@<X0>, uint64_t a2@<X1>, uint8x16_t *a3@<X2>, int a4@<W4>, int8x16_t *a5@<X5>, uint8x8_t *a6@<X8>, int8x16_t a7@<Q4>)
{
  do
  {
    int8x16_t v7 = *a5;
    int8x16_t v8 = a5[1];
    a5 += 2;
    uint8x16_t v9 = *a3;
    uint8x16_t v10 = a3[1];
    a3 += 2;
    BOOL v11 = __OFSUB__(a4, 2);
    a4 -= 2;
    uint8x16_t v12 = (uint8x16_t)vsubq_s8(a7, v7);
    uint8x16_t v13 = (uint8x16_t)vsubq_s8(a7, v8);
    int8x16_t v14 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v10.i8, *(uint8x8_t *)v8.i8), *a6, *(uint8x8_t *)v13.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v10, (uint8x16_t)v8), *(uint8x16_t *)a6->i8, v13), 6uLL);
    *(int8x16_t *)result->i8 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v9.i8, *(uint8x8_t *)v7.i8), *result, *(uint8x8_t *)v12.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v9, (uint8x16_t)v7), *(uint8x16_t *)result->i8, v12), 6uLL);
    uint64_t result = (uint8x8_t *)((char *)result + a2);
    *(int8x16_t *)a6->i8 = v14;
    a6 = (uint8x8_t *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v11 | (a4 == 0)));
  return result;
}

uint8x8_t *sub_224A93D80@<X0>(uint8x8_t *result@<X0>, uint64_t a2@<X1>, uint8x16_t *a3@<X2>, int a4@<W4>, int8x16_t *a5@<X5>, uint8x8_t *a6@<X8>, int8x16_t a7@<Q4>)
{
  do
  {
    int8x16_t v7 = *a5;
    int8x16_t v8 = a5[1];
    int8x16_t v9 = a5[2];
    int8x16_t v10 = a5[3];
    a5 += 4;
    uint8x16_t v11 = *a3;
    uint8x16_t v12 = a3[1];
    uint8x16_t v13 = a3[2];
    uint8x16_t v14 = a3[3];
    a3 += 4;
    BOOL v15 = __OFSUB__(a4, 2);
    a4 -= 2;
    uint8x16_t v16 = (uint8x16_t)vsubq_s8(a7, v7);
    uint8x16_t v17 = (uint8x16_t)vsubq_s8(a7, v8);
    uint8x16_t v18 = (uint8x16_t)vsubq_s8(a7, v9);
    uint8x16_t v19 = (uint8x16_t)vsubq_s8(a7, v10);
    int8x16_t v20 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v12.i8, *(uint8x8_t *)v8.i8), result[2], *(uint8x8_t *)v17.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v12, (uint8x16_t)v8), *(uint8x16_t *)result[2].i8, v17), 6uLL);
    int8x16_t v21 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v13.i8, *(uint8x8_t *)v9.i8), *a6, *(uint8x8_t *)v18.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v13, (uint8x16_t)v9), *(uint8x16_t *)a6->i8, v18), 6uLL);
    int8x16_t v22 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v14.i8, *(uint8x8_t *)v10.i8), a6[2], *(uint8x8_t *)v19.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v14, (uint8x16_t)v10), *(uint8x16_t *)a6[2].i8, v19), 6uLL);
    *(int8x16_t *)result->i8 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v11.i8, *(uint8x8_t *)v7.i8), *result, *(uint8x8_t *)v16.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v11, (uint8x16_t)v7), *(uint8x16_t *)result->i8, v16), 6uLL);
    *(int8x16_t *)result[2].i8 = v20;
    uint64_t result = (uint8x8_t *)((char *)result + a2);
    *(int8x16_t *)a6->i8 = v21;
    *(int8x16_t *)a6[2].i8 = v22;
    a6 = (uint8x8_t *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v15 | (a4 == 0)));
  return result;
}

uint64_t sub_224A93E1C(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  v8.n128_u64[0] = 0x4040404040404040;
  v8.n128_u64[1] = 0x4040404040404040;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128))((char *)&dword_224A94014
                                                                         - *((unsigned __int16 *)&dword_224A94014
                                                                           + __clz(a8)
                                                                           - 24)))(a1, a2, a3, a4, v8);
}

__int16 *sub_224A93E50@<X0>(__int16 *result@<X0>, uint64_t a2@<X1>, __int32 *a3@<X2>, int a4@<W4>, __int16 *a5@<X5>, __int16 *a6@<X8>, int8x8_t a7@<D0>, uint8x8_t a8@<D1>, uint8x8_t a9@<D2>, int8x8_t a10@<D4>)
{
  do
  {
    a7.i16[0] = *a5++;
    a8.i32[0] = *a3++;
    BOOL v10 = __OFSUB__(a4, 2);
    a4 -= 2;
    a9.i16[0] = *result;
    a7 = vzip1_s8(a7, a7);
    a9.i16[1] = *a6;
    unsigned __int32 v11 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(a8, (uint8x8_t)a7), a9, (uint8x8_t)vsub_s8(a10, a7)), 6uLL).u32[0];
    *uint64_t result = v11;
    uint64_t result = (__int16 *)((char *)result + a2);
    *a6 = HIWORD(v11);
    a6 = (__int16 *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v10 | (a4 == 0)));
  return result;
}

__int32 *sub_224A93E88@<X0>(__int32 *result@<X0>, uint64_t a2@<X1>, uint8x8_t *a3@<X2>, int a4@<W4>, const char *a5@<X5>, __int32 *a6@<X8>, int8x8_t a7@<D4>)
{
  do
  {
    int8x8x2_t v11 = vld2_dup_s8(a5);
    a5 += 2;
    uint8x8_t v7 = *a3++;
    BOOL v8 = __OFSUB__(a4, 2);
    a4 -= 2;
    v11.val[0] = vext_s8(v11.val[0], v11.val[1], 4uLL);
    v9.i32[0] = *result;
    v9.i32[1] = *a6;
    int8x8_t v10 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(v7, (uint8x8_t)v11.val[0]), v9, (uint8x8_t)vsub_s8(a7, v11.val[0])), 6uLL);
    *uint64_t result = v10.i32[0];
    uint64_t result = (__int32 *)((char *)result + a2);
    *a6 = v10.i32[1];
    a6 = (__int32 *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v8 | (a4 == 0)));
  return result;
}

uint8x8_t *sub_224A93EC0@<X0>(uint8x8_t *result@<X0>, uint64_t a2@<X1>, uint8x16_t *a3@<X2>, int a4@<W4>, const char *a5@<X5>, uint64_t *a6@<X8>, int8x16_t a7@<Q4>)
{
  do
  {
    int8x16x2_t v12 = vld2q_dup_s8(a5);
    a5 += 2;
    uint8x16_t v7 = *a3++;
    *(uint8x8_t *)v8.i8 = *result;
    v12.val[0] = vextq_s8(v12.val[0], v12.val[1], 8uLL);
    uint8x16_t v9 = (uint8x16_t)vsubq_s8(a7, v12.val[0]);
    v8.i64[1] = *a6;
    BOOL v10 = __OFSUB__(a4, 2);
    a4 -= 2;
    int8x16_t v11 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v12.val[0].i8, *(uint8x8_t *)v7.i8), *result, *(uint8x8_t *)v9.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v12.val[0], v7), v8, v9), 6uLL);
    *uint64_t result = *(uint8x8_t *)v11.i8;
    uint64_t result = (uint8x8_t *)((char *)result + a2);
    *a6 = v11.i64[1];
    a6 = (uint64_t *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v10 | (a4 == 0)));
  return result;
}

uint8x8_t *sub_224A93F04@<X0>(uint8x8_t *result@<X0>, uint64_t a2@<X1>, uint8x16_t *a3@<X2>, int a4@<W4>, const char *a5@<X5>, uint8x8_t *a6@<X8>, int8x16_t a7@<Q4>)
{
  do
  {
    int8x16x2_t v13 = vld2q_dup_s8(a5);
    a5 += 2;
    uint8x16_t v7 = *a3;
    uint8x16_t v8 = a3[1];
    a3 += 2;
    uint8x16_t v9 = (uint8x16_t)vsubq_s8(a7, v13.val[0]);
    uint8x16_t v10 = (uint8x16_t)vsubq_s8(a7, v13.val[1]);
    BOOL v11 = __OFSUB__(a4, 2);
    a4 -= 2;
    int8x16_t v12 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v13.val[1].i8, *(uint8x8_t *)v8.i8), *a6, *(uint8x8_t *)v10.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v13.val[1], v8), *(uint8x16_t *)a6->i8, v10), 6uLL);
    *(int8x16_t *)result->i8 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v13.val[0].i8, *(uint8x8_t *)v7.i8), *result, *(uint8x8_t *)v9.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v13.val[0], v7), *(uint8x16_t *)result->i8, v9), 6uLL);
    uint64_t result = (uint8x8_t *)((char *)result + a2);
    *(int8x16_t *)a6->i8 = v12;
    a6 = (uint8x8_t *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v11 | (a4 == 0)));
  return result;
}

uint8x8_t *sub_224A93F60@<X0>(uint8x8_t *result@<X0>, uint64_t a2@<X1>, uint8x16_t *a3@<X2>, unsigned int a4@<W3>, int a5@<W4>, const char *a6@<X5>, uint64_t a7@<X8>, int8x16_t a8@<Q4>)
{
  uint64_t v8 = a2 - a4;
  uint8x16_t v9 = (uint8x16_t *)((char *)a3 + a4);
  do
  {
    int8x16x2_t v21 = vld2q_dup_s8(a6);
    a6 += 2;
    int v10 = a4;
    uint8x16_t v11 = (uint8x16_t)vsubq_s8(a8, v21.val[0]);
    uint8x16_t v12 = (uint8x16_t)vsubq_s8(a8, v21.val[1]);
    do
    {
      uint8x16_t v13 = *a3;
      uint8x16_t v14 = a3[1];
      a3 += 2;
      BOOL v15 = __OFSUB__(v10, 32);
      v10 -= 32;
      uint8x16_t v16 = *v9;
      uint8x16_t v17 = v9[1];
      v9 += 2;
      uint8x16_t v18 = *(uint8x16_t *)(a7 + 16);
      int8x16_t v19 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v21.val[0].i8, *(uint8x8_t *)v14.i8), result[2], *(uint8x8_t *)v11.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v21.val[0], v14), *(uint8x16_t *)result[2].i8, v11), 6uLL);
      int8x16_t v20 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v21.val[1].i8, *(uint8x8_t *)v16.i8), *(uint8x8_t *)a7, *(uint8x8_t *)v12.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v21.val[1], v16), *(uint8x16_t *)a7, v12), 6uLL);
      *(int8x16_t *)result->i8 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v21.val[0].i8, *(uint8x8_t *)v13.i8), *result, *(uint8x8_t *)v11.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v21.val[0], v13), *(uint8x16_t *)result->i8, v11), 6uLL);
      *(int8x16_t *)result[2].i8 = v19;
      result += 4;
      *(int8x16_t *)a7 = v20;
      *(int8x16_t *)(a7 + 16) = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v21.val[1].i8, *(uint8x8_t *)v17.i8), *(uint8x8_t *)v18.i8, *(uint8x8_t *)v12.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v21.val[1], v17), v18, v12), 6uLL);
      a7 += 32;
    }
    while (!((v10 < 0) ^ v15 | (v10 == 0)));
    BOOL v15 = __OFSUB__(a5, 2);
    a5 -= 2;
    uint64_t result = (uint8x8_t *)((char *)result + v8);
    a7 += v8;
    a3 = (uint8x16_t *)((char *)a3 + a4);
    uint8x16_t v9 = (uint8x16_t *)((char *)v9 + a4);
  }
  while (!((a5 < 0) ^ v15 | (a5 == 0)));
  return result;
}

uint64_t sub_224A94024(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  v8.n128_u64[0] = 0x4040404040404040;
  v8.n128_u64[1] = 0x4040404040404040;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128))((char *)&qword_224A94200
                                                                         - *((unsigned __int16 *)&qword_224A94200
                                                                           + __clz(a8)
                                                                           - 26)))(a1, a2, a3, a4, v8);
}

__int8 *sub_224A94054@<X0>(__int8 *result@<X0>, uint64_t a2@<X1>, _WORD *a3@<X2>, int a4@<W4>, const char *a5@<X5>, __int8 *a6@<X8>, uint8x8_t a7@<D2>, uint8x8_t a8@<D3>, int8x8_t a9@<D4>)
{
  int8x8_t v9 = vld1_dup_s8(a5);
  uint8x8_t v10 = (uint8x8_t)vsub_s8(a9, v9);
  do
  {
    a7.i16[0] = *a3;
    uint8x16_t v11 = a3 + 1;
    a8.i8[0] = *result;
    BOOL v12 = __OFSUB__(a4, 2);
    a4 -= 2;
    a7.i8[1] = *v11;
    a8.i8[1] = *a6;
    unsigned __int16 v13 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(a7, (uint8x8_t)v9), a8, v10), 6uLL).u16[0];
    a3 = v11 + 2;
    *uint64_t result = v13;
    result += a2;
    *a6 = HIBYTE(v13);
    a6 += a2;
  }
  while (!((a4 < 0) ^ v12 | (a4 == 0)));
  return result;
}

__int32 *sub_224A94090@<X0>(__int32 *result@<X0>, uint64_t a2@<X1>, uint8x8_t *a3@<X2>, int a4@<W4>, const float *a5@<X5>, __int32 *a6@<X8>, int8x8_t a7@<D4>)
{
  int8x8_t v7 = (int8x8_t)vld1_dup_f32(a5);
  uint64_t v8 = a2 - 2;
  uint8x8_t v9 = (uint8x8_t)vsub_s8(a7, v7);
  do
  {
    uint8x8_t v10 = *a3++;
    v11.i32[0] = *result;
    v11.i32[1] = *a6;
    BOOL v12 = __OFSUB__(a4, 2);
    a4 -= 2;
    int8x8_t v13 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(v10, (uint8x8_t)v7), v11, v9), 6uLL);
    *(_WORD *)uint64_t result = v13.i16[0];
    uint8x16_t v14 = (char *)result + 2;
    *(_WORD *)a6 = v13.i16[2];
    BOOL v15 = (char *)a6 + 2;
    *uint8x16_t v14 = v13.i8[2];
    uint64_t result = (__int32 *)&v14[v8];
    *BOOL v15 = v13.i8[6];
    a6 = (__int32 *)&v15[v8];
  }
  while (!((a4 < 0) ^ v12 | (a4 == 0)));
  return result;
}

uint8x8_t *sub_224A940D0@<X0>(uint8x8_t *result@<X0>, uint64_t a2@<X1>, uint8x16_t *a3@<X2>, int a4@<W4>, const double *a5@<X5>, uint64_t *a6@<X8>, int8x16_t a7@<Q4>)
{
  int8x16_t v7 = (int8x16_t)vld1q_dup_f64(a5);
  uint64_t v8 = a2 - 4;
  uint8x16_t v9 = (uint8x16_t)vsubq_s8(a7, v7);
  do
  {
    uint8x16_t v10 = *a3++;
    *(uint8x8_t *)v11.i8 = *result;
    v11.i64[1] = *a6;
    BOOL v12 = __OFSUB__(a4, 2);
    a4 -= 2;
    int8x16_t v13 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v7.i8, *(uint8x8_t *)v10.i8), *result, *(uint8x8_t *)v9.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8((uint8x16_t)v7, v10), v11, v9), 6uLL);
    result->i32[0] = v13.i32[0];
    uint8x16_t v14 = (_WORD *)result + 2;
    *(_DWORD *)a6 = v13.i32[2];
    BOOL v15 = (_WORD *)a6 + 2;
    *uint8x16_t v14 = v13.i16[2];
    uint64_t result = (uint8x8_t *)((char *)v14 + v8);
    *BOOL v15 = v13.i16[6];
    a6 = (uint64_t *)((char *)v15 + v8);
  }
  while (!((a4 < 0) ^ v12 | (a4 == 0)));
  return result;
}

uint8x8_t *sub_224A9411C@<X0>(uint8x8_t *result@<X0>, uint64_t a2@<X1>, uint8x16_t *a3@<X2>, int a4@<W4>, int8x16_t *a5@<X5>, uint8x8_t *a6@<X8>, int8x16_t a7@<Q4>)
{
  uint8x16_t v7 = *(uint8x16_t *)a5;
  uint64_t v8 = a2 - 8;
  uint8x16_t v9 = (uint8x16_t)vsubq_s8(a7, *a5);
  do
  {
    uint8x16_t v10 = *a3;
    uint8x16_t v11 = a3[1];
    a3 += 2;
    BOOL v12 = __OFSUB__(a4, 2);
    a4 -= 2;
    int8x16_t v13 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v10.i8, *(uint8x8_t *)v7.i8), *result, *(uint8x8_t *)v9.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v10, v7), *(uint8x16_t *)result->i8, v9), 6uLL);
    int8x16_t v14 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v11.i8, *(uint8x8_t *)v7.i8), *a6, *(uint8x8_t *)v9.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v11, v7), *(uint8x16_t *)a6->i8, v9), 6uLL);
    *uint64_t result = *(uint8x8_t *)v13.i8;
    BOOL v15 = result + 1;
    *a6 = *(uint8x8_t *)v14.i8;
    uint8x16_t v16 = a6 + 1;
    v15->i32[0] = v13.i32[2];
    uint64_t result = (uint8x8_t *)((char *)v15 + v8);
    v16->i32[0] = v14.i32[2];
    a6 = (uint8x8_t *)((char *)v16 + v8);
  }
  while (!((a4 < 0) ^ v12 | (a4 == 0)));
  return result;
}

uint8x8_t *sub_224A94180@<X0>(uint8x8_t *result@<X0>, uint64_t a2@<X1>, uint8x16_t *a3@<X2>, int a4@<W4>, uint64_t a5@<X5>, uint8x8_t *a6@<X8>, int8x16_t a7@<Q4>)
{
  uint8x16_t v7 = *(uint8x16_t *)a5;
  long long v8 = *(_OWORD *)(a5 + 16);
  uint64_t v9 = a2 - 16;
  uint8x16_t v10 = (uint8x16_t)vsubq_s8(a7, *(int8x16_t *)a5);
  uint8x8_t v11 = (uint8x8_t)vsub_s8(*(int8x8_t *)a7.i8, *(int8x8_t *)&v8);
  do
  {
    uint8x16_t v12 = *a3;
    uint8x16_t v13 = a3[1];
    uint8x16_t v14 = a3[2];
    uint8x16_t v15 = a3[3];
    a3 += 4;
    BOOL v16 = __OFSUB__(a4, 2);
    a4 -= 2;
    int8x8_t v17 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v13.i8, *(uint8x8_t *)&v8), result[2], v11), 6uLL);
    int8x16_t v18 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v14.i8, *(uint8x8_t *)v7.i8), *a6, *(uint8x8_t *)v10.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v14, v7), *(uint8x16_t *)a6->i8, v10), 6uLL);
    int8x8_t v19 = vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v15.i8, *(uint8x8_t *)&v8), a6[2], v11), 6uLL);
    *(int8x16_t *)result->i8 = vrshrn_high_n_s16(vrshrn_n_s16((int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v12.i8, *(uint8x8_t *)v7.i8), *result, *(uint8x8_t *)v10.i8), 6uLL), (int16x8_t)vmlal_high_u8(vmull_high_u8(v12, v7), *(uint8x16_t *)result->i8, v10), 6uLL);
    int8x16_t v20 = (int8x8_t *)&result[2];
    *(int8x16_t *)a6->i8 = v18;
    int8x16x2_t v21 = (int8x8_t *)&a6[2];
    *int8x16_t v20 = v17;
    uint64_t result = (uint8x8_t *)((char *)v20 + v9);
    *int8x16x2_t v21 = v19;
    a6 = (uint8x8_t *)((char *)v21 + v9);
  }
  while (!((a4 < 0) ^ v16 | (a4 == 0)));
  return result;
}

uint64_t sub_224A9420C@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))((char *)qword_224A94328 - *((unsigned __int16 *)qword_224A94328 + a1)))();
}

_WORD *sub_224A9421C(_WORD *result, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    __int16 v7 = *a3;
    __n128 v6 = (__int16 *)((char *)a3 + a4);
    __int16 v8 = *v6;
    a3 = (__int16 *)((char *)v6 + a4);
    BOOL v9 = __OFSUB__(a6, 2);
    a6 -= 2;
    *uint64_t result = v7;
    uint8x16_t v10 = (_WORD *)((char *)result + a2);
    _WORD *v10 = v8;
    uint64_t result = (_WORD *)((char *)v10 + a2);
  }
  while (!((a6 < 0) ^ v9 | (a6 == 0)));
  return result;
}

_DWORD *sub_224A94238(_DWORD *result, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    int v7 = *a3;
    __n128 v6 = (int *)((char *)a3 + a4);
    int v8 = *v6;
    a3 = (int *)((char *)v6 + a4);
    BOOL v9 = __OFSUB__(a6, 2);
    a6 -= 2;
    *uint64_t result = v7;
    uint8x16_t v10 = (_DWORD *)((char *)result + a2);
    _DWORD *v10 = v8;
    uint64_t result = (_DWORD *)((char *)v10 + a2);
  }
  while (!((a6 < 0) ^ v9 | (a6 == 0)));
  return result;
}

void *sub_224A94254(void *result, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    uint64_t v7 = *a3;
    __n128 v6 = (uint64_t *)((char *)a3 + a4);
    uint64_t v8 = *v6;
    a3 = (uint64_t *)((char *)v6 + a4);
    BOOL v9 = __OFSUB__(a6, 2);
    a6 -= 2;
    *uint64_t result = v7;
    uint8x16_t v10 = (void *)((char *)result + a2);
    void *v10 = v8;
    uint64_t result = (void *)((char *)v10 + a2);
  }
  while (!((a6 < 0) ^ v9 | (a6 == 0)));
  return result;
}

_OWORD *sub_224A94270(_OWORD *result, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, int a6)
{
  __n128 v6 = (_OWORD *)((char *)result + a2);
  uint64_t v7 = 2 * a2;
  uint64_t v8 = (long long *)((char *)a3 + a4);
  uint64_t v9 = 2 * a4;
  do
  {
    long long v10 = *a3;
    a3 = (long long *)((char *)a3 + v9);
    long long v11 = *v8;
    uint64_t v8 = (long long *)((char *)v8 + v9);
    BOOL v12 = __OFSUB__(a6, 2);
    a6 -= 2;
    *uint64_t result = v10;
    uint64_t result = (_OWORD *)((char *)result + v7);
    _OWORD *v6 = v11;
    __n128 v6 = (_OWORD *)((char *)v6 + v7);
  }
  while (!((a6 < 0) ^ v12 | (a6 == 0)));
  return result;
}

void *sub_224A9429C(void *result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    uint64_t v6 = a3[1];
    uint64_t v7 = a3[2];
    uint64_t v8 = a3[3];
    *uint64_t result = *a3;
    result[1] = v6;
    BOOL v9 = __OFSUB__(a6--, 1);
    result[2] = v7;
    result[3] = v8;
    a3 = (void *)((char *)a3 + a4);
    uint64_t result = (void *)((char *)result + a2);
  }
  while (!((a6 < 0) ^ v9 | (a6 == 0)));
  return result;
}

void *sub_224A942C0(void *result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    uint64_t v6 = a3[1];
    uint64_t v7 = a3[2];
    uint64_t v8 = a3[3];
    *uint64_t result = *a3;
    result[1] = v6;
    uint64_t v9 = a3[4];
    uint64_t v10 = a3[5];
    result[2] = v7;
    result[3] = v8;
    BOOL v11 = __OFSUB__(a6--, 1);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    result[4] = v9;
    result[5] = v10;
    result[6] = v12;
    result[7] = v13;
    a3 = (void *)((char *)a3 + a4);
    uint64_t result = (void *)((char *)result + a2);
  }
  while (!((a6 < 0) ^ v11 | (a6 == 0)));
  return result;
}

_OWORD *sub_224A942F4(_OWORD *result, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    long long v6 = a3[1];
    long long v7 = a3[2];
    long long v8 = a3[3];
    *uint64_t result = *a3;
    result[1] = v6;
    long long v9 = a3[4];
    long long v10 = a3[5];
    result[2] = v7;
    result[3] = v8;
    long long v11 = a3[6];
    long long v12 = a3[7];
    BOOL v13 = __OFSUB__(a6--, 1);
    result[4] = v9;
    result[5] = v10;
    result[6] = v11;
    result[7] = v12;
    a3 = (_OWORD *)((char *)a3 + a4);
    uint64_t result = (_OWORD *)((char *)result + a2);
  }
  while (!((a6 < 0) ^ v13 | (a6 == 0)));
  return result;
}

uint64_t sub_224A94338@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))((char *)&qword_224A944C8 - *((unsigned __int16 *)&qword_224A944C8 + a1)))();
}

double *sub_224A94348(double *result, __int32 *a2, uint64_t a3, uint8x8_t a4, uint8x8_t a5, uint64_t a6, int a7)
{
  do
  {
    a4.i32[0] = *a2;
    long long v7 = (__int32 *)((char *)a2 + a3);
    a5.i32[0] = *v7;
    a2 = (__int32 *)((char *)v7 + a3);
    BOOL v8 = __OFSUB__(a7, 2);
    a7 -= 2;
    a4 = (uint8x8_t)vshll_n_u8(a4, 4uLL).u64[0];
    a5 = (uint8x8_t)vshll_n_u8(a5, 4uLL).u64[0];
    *uint64_t result = *(double *)&a4;
    result[1] = *(double *)&a5;
    result += 2;
  }
  while (!((a7 < 0) ^ v8 | (a7 == 0)));
  return result;
}

uint16x8_t *sub_224A94368(uint16x8_t *result, uint8x8_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  do
  {
    uint8x8_t v6 = *a2;
    __n128 v5 = (uint8x8_t *)((char *)a2 + a3);
    uint8x8_t v7 = *v5;
    a2 = (uint8x8_t *)((char *)v5 + a3);
    BOOL v8 = __OFSUB__(a5, 2);
    a5 -= 2;
    *uint64_t result = vshll_n_u8(v6, 4uLL);
    result[1] = vshll_n_u8(v7, 4uLL);
    result += 2;
  }
  while (!((a5 < 0) ^ v8 | (a5 == 0)));
  return result;
}

uint16x8_t *sub_224A94388(uint16x8_t *result, uint8x16_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  __n128 v5 = (uint8x16_t *)((char *)a2 + a3);
  uint64_t v6 = 2 * a3;
  do
  {
    uint8x16_t v7 = *a2;
    a2 = (uint8x16_t *)((char *)a2 + v6);
    uint8x16_t v8 = *v5;
    __n128 v5 = (uint8x16_t *)((char *)v5 + v6);
    BOOL v9 = __OFSUB__(a5, 2);
    a5 -= 2;
    *uint64_t result = vshll_n_u8(*(uint8x8_t *)v7.i8, 4uLL);
    result[1] = vshll_high_n_u8(v7, 4uLL);
    result[2] = vshll_n_u8(*(uint8x8_t *)v8.i8, 4uLL);
    result[3] = vshll_high_n_u8(v8, 4uLL);
    result += 4;
  }
  while (!((a5 < 0) ^ v9 | (a5 == 0)));
  return result;
}

uint16x8_t *sub_224A943B8(uint16x8_t *result, uint8x16_t *a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint8x16_t v8 = (uint16x8_t *)((char *)result + a4);
  do
  {
    uint8x16_t v10 = *a2;
    uint8x16_t v11 = a2[1];
    BOOL v9 = (uint8x16_t *)((char *)a2 + a3);
    BOOL v12 = __OFSUB__(a5, 2);
    a5 -= 2;
    uint8x16_t v13 = *v9;
    uint8x16_t v14 = v9[1];
    a2 = (uint8x16_t *)((char *)v9 + a3);
    *uint64_t result = vshll_n_u8(*(uint8x8_t *)v10.i8, 4uLL);
    result[1] = vshll_high_n_u8(v10, 4uLL);
    uint8x16_t v15 = (uint16x8_t *)((char *)result + a8);
    uint16x8_t *v8 = vshll_n_u8(*(uint8x8_t *)v11.i8, 4uLL);
    v8[1] = vshll_high_n_u8(v11, 4uLL);
    BOOL v16 = (uint16x8_t *)((char *)v8 + a8);
    *uint8x16_t v15 = vshll_n_u8(*(uint8x8_t *)v13.i8, 4uLL);
    v15[1] = vshll_high_n_u8(v13, 4uLL);
    uint64_t result = (uint16x8_t *)((char *)v15 + a8);
    uint16x8_t *v16 = vshll_n_u8(*(uint8x8_t *)v14.i8, 4uLL);
    v16[1] = vshll_high_n_u8(v14, 4uLL);
    uint8x16_t v8 = (uint16x8_t *)((char *)v16 + a8);
  }
  while (!((a5 < 0) ^ v12 | (a5 == 0)));
  return result;
}

uint16x8_t *sub_224A94400(uint16x8_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  __n128 v5 = result + 2;
  do
  {
    uint8x16_t v6 = *(uint8x16_t *)(a2 + 16);
    BOOL v7 = __OFSUB__(a5--, 1);
    uint16x8_t v8 = vshll_n_u8(*(uint8x8_t *)a2, 4uLL);
    uint16x8_t v9 = vshll_high_n_u8(*(uint8x16_t *)a2, 4uLL);
    uint8x16_t v10 = *(uint8x16_t *)(a2 + 32);
    uint8x16_t v11 = *(uint8x16_t *)(a2 + 48);
    a2 += a3;
    *uint64_t result = v8;
    result[1] = v9;
    BOOL v12 = result + 4;
    uint16x8_t *v5 = vshll_n_u8(*(uint8x8_t *)v6.i8, 4uLL);
    v5[1] = vshll_high_n_u8(v6, 4uLL);
    uint8x16_t v13 = v5 + 4;
    *BOOL v12 = vshll_n_u8(*(uint8x8_t *)v10.i8, 4uLL);
    v12[1] = vshll_high_n_u8(v10, 4uLL);
    uint64_t result = v12 + 4;
    *uint8x16_t v13 = vshll_n_u8(*(uint8x8_t *)v11.i8, 4uLL);
    v13[1] = vshll_high_n_u8(v11, 4uLL);
    __n128 v5 = v13 + 4;
  }
  while (!((a5 < 0) ^ v7 | (a5 == 0)));
  return result;
}

uint16x8_t *sub_224A94450(uint16x8_t *result, uint8x16_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  __n128 v5 = result + 4;
  do
  {
    uint8x16_t v6 = a2[1];
    uint8x16_t v7 = a2[2];
    uint8x16_t v8 = a2[3];
    uint16x8_t v9 = vshll_high_n_u8(*a2, 4uLL);
    uint8x16_t v10 = a2[4];
    uint8x16_t v11 = a2[5];
    *uint64_t result = vshll_n_u8(*(uint8x8_t *)a2->i8, 4uLL);
    result[1] = v9;
    result[2] = vshll_n_u8(*(uint8x8_t *)v6.i8, 4uLL);
    result[3] = vshll_high_n_u8(v6, 4uLL);
    BOOL v12 = result + 8;
    uint8x16_t v13 = a2[6];
    uint8x16_t v14 = a2[7];
    uint16x8_t *v5 = vshll_n_u8(*(uint8x8_t *)v7.i8, 4uLL);
    v5[1] = vshll_high_n_u8(v7, 4uLL);
    v5[2] = vshll_n_u8(*(uint8x8_t *)v8.i8, 4uLL);
    v5[3] = vshll_high_n_u8(v8, 4uLL);
    uint8x16_t v15 = v5 + 8;
    BOOL v16 = __OFSUB__(a5--, 1);
    a2 = (uint8x16_t *)((char *)a2 + a3);
    *BOOL v12 = vshll_n_u8(*(uint8x8_t *)v10.i8, 4uLL);
    v12[1] = vshll_high_n_u8(v10, 4uLL);
    v12[2] = vshll_n_u8(*(uint8x8_t *)v11.i8, 4uLL);
    v12[3] = vshll_high_n_u8(v11, 4uLL);
    uint64_t result = v12 + 8;
    *uint8x16_t v15 = vshll_n_u8(*(uint8x8_t *)v13.i8, 4uLL);
    v15[1] = vshll_high_n_u8(v13, 4uLL);
    v15[2] = vshll_n_u8(*(uint8x8_t *)v14.i8, 4uLL);
    v15[3] = vshll_high_n_u8(v14, 4uLL);
    __n128 v5 = v15 + 8;
  }
  while (!((a5 < 0) ^ v16 | (a5 == 0)));
  return result;
}

uint64_t sub_224A944D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224A94510(a5, a7, a8, 45);
}

uint64_t sub_224A944E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224A94510(a5, a7, a8, 1980);
}

uint64_t sub_224A944EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224A94510(a5, a7, a8, 3885);
}

uint64_t sub_224A944F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224A94510(a5, a7, a8, 3885);
}

uint64_t sub_224A94504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224A94510(a5, a7, a8, 3885);
}

uint64_t sub_224A94510@<X0>(unsigned int a1@<W4>, int a2@<W6>, int a3@<W7>, int a4@<W8>)
{
  int v5 = 16513 * a2 + a4;
  int v6 = 16513 * a3 + v4;
  uint64_t v7 = __clz(a1) - 24;
  if ((v5 & 0x1FC000) != 0)
  {
    if ((v6 & 0x1FC000) != 0) {
      return ((uint64_t (*)(void))((char *)&dword_224A95A54 - *((unsigned __int16 *)&dword_224A95A54 + v7)))();
    }
    else {
      return ((uint64_t (*)(void))((char *)qword_224A948F8 - *((unsigned __int16 *)qword_224A948F8 + v7)))();
    }
  }
  else if ((v6 & 0x1FC000) != 0)
  {
    return ((uint64_t (*)(void))((char *)&dword_224A95334 - *((unsigned __int16 *)&dword_224A95334 + v7)))();
  }
  else
  {
    return sub_224A9420C(v7);
  }
}

uint64_t sub_224A95A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224A95A94(a5, a7, a8, 45);
}

uint64_t sub_224A95A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224A95A94(a5, a7, a8, 45);
}

uint64_t sub_224A95A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224A95A94(a5, a7, a8, 1980);
}

uint64_t sub_224A95A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224A95A94(a5, a7, a8, 1980);
}

uint64_t sub_224A95A94@<X0>(unsigned int a1@<W4>, int a2@<W6>, int a3@<W7>, int a4@<W8>)
{
  int v5 = 16513 * a2 + a4;
  int v6 = 16513 * a3 + v4;
  uint64_t v7 = __clz(a1) - 24;
  if ((v5 & 0x1FC000) != 0)
  {
    if ((v6 & 0x1FC000) != 0) {
      return ((uint64_t (*)(void))((char *)&dword_224A96E74 - *((unsigned __int16 *)&dword_224A96E74 + v7)))();
    }
    else {
      return ((uint64_t (*)(void))((char *)&dword_224A95E34 - *((unsigned __int16 *)&dword_224A95E34 + v7)))();
    }
  }
  else if ((v6 & 0x1FC000) != 0)
  {
    return ((uint64_t (*)(void))((char *)qword_224A967D0 - *((unsigned __int16 *)qword_224A967D0 + v7)))();
  }
  else
  {
    return sub_224A9420C(v7);
  }
}

uint64_t sub_224A96E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, unsigned int a7, unsigned int a8)
{
  __n128 v8 = (__n128)vdupq_n_s8(a7);
  __n128 v9 = (__n128)vdupq_n_s8(a8);
  __n128 v10 = (__n128)vdupq_n_s8(16 - a7);
  __n128 v11 = (__n128)vdupq_n_s8(16 - a8);
  uint64_t v12 = __clz(a5) - 24;
  if (a7)
  {
    if (a8) {
      return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)&dword_224A973EC
    }
                                                                     - *((unsigned __int16 *)&dword_224A973EC + v12)))(v10, v8, (__n128)vmovl_u8((uint8x8_t)v11.n128_u64[0]), (__n128)vmovl_u8((uint8x8_t)v9.n128_u64[0]));
    else {
      return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)&dword_224A9704C
    }
                                                                     - *((unsigned __int16 *)&dword_224A9704C + v12)))(v10, v8, v11, v9);
  }
  else if (a8)
  {
    return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)qword_224A97248
                                                                   - *((unsigned __int16 *)qword_224A97248 + v12)))(v10, v8, v11, v9);
  }
  else
  {
    return sub_224A9420C(v12);
  }
}

_WORD *sub_224A97270(_WORD *result, uint64_t a2, __int32 *a3, uint64_t a4, uint8x8_t a5, uint8x8_t a6, int16x4_t a7, int16x4_t a8, uint16x8_t a9, uint64_t a10, int a11)
{
  uint8x16_t v13 = (__int32 *)((char *)a3 + a4);
  uint8x16_t v14 = (_WORD *)((char *)result + a2);
  uint64_t v15 = 2 * a4;
  uint64_t v16 = 2 * a2;
  v11.i32[0] = *a3;
  int8x8_t v17 = (__int32 *)((char *)a3 + v15);
  for (int32x2_t i = (int32x2_t)vmlal_u8(vmull_u8((uint8x8_t)v11, a5), (uint8x8_t)vext_s8((int8x8_t)v11, (int8x8_t)v11, 1uLL), a6).u64[0]; ; int32x2_t i = vtrn2_s32((int32x2_t)v20, (int32x2_t)v20))
  {
    v11.i32[0] = *v13;
    uint8x16_t v13 = (__int32 *)((char *)v13 + v15);
    v12.i32[0] = *v17;
    int8x8_t v17 = (__int32 *)((char *)v17 + v15);
    int16x4_t v19 = (int16x4_t)vext_s8((int8x8_t)v11, (int8x8_t)v11, 1uLL);
    int16x4_t v11 = vtrn1_s16(v11, v12);
    int16x4_t v20 = (int16x4_t)vmlal_u8(vmull_u8((uint8x8_t)v11, a5), (uint8x8_t)vtrn1_s16(v19, (int16x4_t)vext_s8((int8x8_t)v12, (int8x8_t)v12, 1uLL)), a6).u64[0];
    *(int16x4_t *)a9.i8 = vmla_s16(vmul_s16((int16x4_t)vtrn1_s32(i, (int32x2_t)v20), a7), v20, a8);
    unsigned __int32 v21 = vqrshrn_n_u16(a9, 8uLL).u32[0];
    BOOL v22 = __OFSUB__(a11, 2);
    a11 -= 2;
    *uint64_t result = v21;
    uint64_t result = (_WORD *)((char *)result + v16);
    *uint8x16_t v14 = HIWORD(v21);
    uint8x16_t v14 = (_WORD *)((char *)v14 + v16);
    if ((a11 < 0) ^ v22 | (a11 == 0)) {
      break;
    }
  }
  return result;
}

_DWORD *sub_224A972DC(_DWORD *result, uint64_t a2, int8x8_t *a3, uint64_t a4, uint8x8_t a5, uint8x8_t a6, int16x8_t a7, int16x8_t a8, uint64_t a9, int a10)
{
  __n128 v10 = (int32x2_t *)((char *)a3 + a4);
  int16x4_t v11 = (_DWORD *)((char *)result + a2);
  uint64_t v12 = 2 * a4;
  uint64_t v13 = 2 * a2;
  int8x8_t v15 = *a3;
  uint8x16_t v14 = (int32x2_t *)((char *)a3 + v12);
  for (int64x2_t i = (int64x2_t)vmlal_u8(vmull_u8((uint8x8_t)v15, a5), (uint8x8_t)vext_s8(v15, v15, 1uLL), a6);
        ;
        int64x2_t i = vtrn2q_s64((int64x2_t)v19, (int64x2_t)v19))
  {
    int32x2_t v17 = *v10;
    __n128 v10 = (int32x2_t *)((char *)v10 + v12);
    int32x2_t v18 = *v14;
    uint8x16_t v14 = (int32x2_t *)((char *)v14 + v12);
    int16x8_t v19 = (int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)vtrn1_s32(v17, v18), a5), (uint8x8_t)vtrn1_s32((int32x2_t)vext_s8((int8x8_t)v17, (int8x8_t)v17, 1uLL), (int32x2_t)vext_s8((int8x8_t)v18, (int8x8_t)v18, 1uLL)), a6);
    BOOL v20 = __OFSUB__(a10, 2);
    a10 -= 2;
    uint8x8_t v21 = vqrshrn_n_u16((uint16x8_t)vmlaq_s16(vmulq_s16((int16x8_t)vtrn1q_s64(i, (int64x2_t)v19), a7), v19, a8), 8uLL);
    *uint64_t result = v21.i32[0];
    uint64_t result = (_DWORD *)((char *)result + v13);
    *int16x4_t v11 = v21.i32[1];
    int16x4_t v11 = (_DWORD *)((char *)v11 + v13);
    if ((a10 < 0) ^ v20 | (a10 == 0)) {
      break;
    }
  }
  return result;
}

uint8x8_t *sub_224A97348(uint8x8_t *result, uint64_t a2, int8x16_t *a3, uint64_t a4, int a5, int a6, uint8x8_t a7, uint8x8_t a8, int16x8_t a9, int16x8_t a10)
{
  for (i = a6; ; uint64_t result = (uint8x8_t *)((char *)result - a2 * i + 8))
  {
    int16x4_t v11 = (int8x16_t *)((char *)a3 + a4);
    uint64_t v12 = (uint8x8_t *)((char *)result + a2);
    uint64_t v13 = 2 * a4;
    uint64_t v14 = 2 * a2;
    int8x16_t v16 = *a3;
    int8x8_t v15 = (int8x16_t *)((char *)a3 + v13);
    for (int16x8_t j = (int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v16.i8, a7), (uint8x8_t)*(_OWORD *)&vextq_s8(v16, v16, 1uLL), a8); ; int16x8_t j = v21)
    {
      int8x16_t v18 = *v11;
      int16x4_t v11 = (int8x16_t *)((char *)v11 + v13);
      int8x16_t v19 = *v15;
      int8x8_t v15 = (int8x16_t *)((char *)v15 + v13);
      int16x8_t v20 = (int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v18.i8, a7), (uint8x8_t)*(_OWORD *)&vextq_s8(v18, v18, 1uLL), a8);
      int16x8_t v21 = (int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v19.i8, a7), (uint8x8_t)*(_OWORD *)&vextq_s8(v19, v19, 1uLL), a8);
      BOOL v22 = __OFSUB__(a6, 2);
      a6 -= 2;
      *uint64_t result = vqrshrn_n_u16((uint16x8_t)vmlaq_s16(vmulq_s16(j, a9), v20, a10), 8uLL);
      uint64_t result = (uint8x8_t *)((char *)result + v14);
      *uint64_t v12 = vqrshrn_n_u16((uint16x8_t)vmlaq_s16(vmulq_s16(v20, a9), v21, a10), 8uLL);
      uint64_t v12 = (uint8x8_t *)((char *)v12 + v14);
      if ((a6 < 0) ^ v22 | (a6 == 0)) {
        break;
      }
    }
    BOOL v22 = __OFSUB__(a5, 8);
    a5 -= 8;
    if ((a5 < 0) ^ v22 | (a5 == 0)) {
      break;
    }
    a4 = v13 >> 1;
    a2 = v14 >> 1;
    a6 = i;
    a3 = (int8x16_t *)((char *)&v15->u64[1] - a4 * i + -2 * a4);
  }
  return result;
}

uint64_t sub_224A973FC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224A97438(a4, a6, a7, 45);
}

uint64_t sub_224A97408(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224A97438(a4, a6, a7, 1980);
}

uint64_t sub_224A97414(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224A97438(a4, a6, a7, 3885);
}

uint64_t sub_224A97420(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224A97438(a4, a6, a7, 3885);
}

uint64_t sub_224A9742C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224A97438(a4, a6, a7, 3885);
}

uint64_t sub_224A97438@<X0>(unsigned int a1@<W3>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  int v5 = 16513 * a2 + a4;
  int v6 = 16513 * a3 + v4;
  uint64_t v7 = __clz(a1) - 24;
  if ((v5 & 0x1FC000) != 0)
  {
    if ((v6 & 0x1FC000) != 0) {
      return ((uint64_t (*)(void))((char *)&dword_224A984E4 - *((unsigned __int16 *)&dword_224A984E4 + v7)))();
    }
    else {
      return ((uint64_t (*)(void))((char *)&dword_224A9778C - *((unsigned __int16 *)&dword_224A9778C + v7)))();
    }
  }
  else if ((v6 & 0x1FC000) != 0)
  {
    return ((uint64_t (*)(void))((char *)&dword_224A97F8C - *((unsigned __int16 *)&dword_224A97F8C + v7)))();
  }
  else
  {
    return sub_224A94338(v7);
  }
}

uint64_t sub_224A984F4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224A98524(a4, a6, a7, 45);
}

uint64_t sub_224A98500(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224A98524(a4, a6, a7, 45);
}

uint64_t sub_224A9850C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224A98524(a4, a6, a7, 1980);
}

uint64_t sub_224A98518(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224A98524(a4, a6, a7, 1980);
}

uint64_t sub_224A98524@<X0>(unsigned int a1@<W3>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  int v5 = 16513 * a2 + a4;
  int v6 = 16513 * a3 + v4;
  uint64_t v7 = __clz(a1) - 24;
  if ((v5 & 0x1FC000) != 0)
  {
    if ((v6 & 0x1FC000) != 0) {
      return ((uint64_t (*)(void))((char *)&dword_224A99484 - *((unsigned __int16 *)&dword_224A99484 + v7)))();
    }
    else {
      return ((uint64_t (*)(void))((char *)qword_224A98830 - *((unsigned __int16 *)qword_224A98830 + v7)))();
    }
  }
  else if ((v6 & 0x1FC000) != 0)
  {
    return ((uint64_t (*)(void))((char *)qword_224A98FA0 - *((unsigned __int16 *)qword_224A98FA0 + v7)))();
  }
  else
  {
    return sub_224A94338(v7);
  }
}

uint64_t sub_224A99494(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, unsigned int a6, unsigned int a7)
{
  __n128 v7 = (__n128)vdupq_n_s8(a6);
  __n128 v8 = (__n128)vdupq_n_s8(a7);
  __n128 v9 = (__n128)vdupq_n_s8(16 - a6);
  __n128 v10 = (__n128)vdupq_n_s8(16 - a7);
  uint64_t v11 = __clz(a4) - 24;
  if (a6)
  {
    if (a7) {
      return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)&dword_224A9986C
    }
                                                                     - *((unsigned __int16 *)&dword_224A9986C + v11)))(v9, v7, (__n128)vmovl_u8((uint8x8_t)v10.n128_u64[0]), (__n128)vmovl_u8((uint8x8_t)v8.n128_u64[0]));
    else {
      return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)qword_224A995F8
    }
                                                                     - *((unsigned __int16 *)qword_224A995F8 + v11)))(v9, v7, v10, v8);
  }
  else if (a7)
  {
    return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)&dword_224A99734
                                                                   - *((unsigned __int16 *)&dword_224A99734 + v11)))(v9, v7, v10, v8);
  }
  else
  {
    return sub_224A94338(v11);
  }
}

void *sub_224A9975C(void *result, int8x8_t *a2, uint64_t a3, uint8x8_t a4, uint8x8_t a5, int16x8_t a6, int16x8_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12 = (int32x2_t *)((char *)a2 + a3);
  uint64_t v13 = (void *)((char *)result + a12);
  uint64_t v14 = 2 * a3;
  uint64_t v15 = 2 * a12;
  int8x8_t v17 = *a2;
  int8x16_t v16 = (int32x2_t *)((char *)a2 + v14);
  for (int64x2_t i = (int64x2_t)vmlal_u8(vmull_u8((uint8x8_t)v17, a4), (uint8x8_t)vext_s8(v17, v17, 1uLL), a5);
        ;
        int64x2_t i = vtrn2q_s64((int64x2_t)v21, (int64x2_t)v21))
  {
    int32x2_t v19 = *v12;
    uint64_t v12 = (int32x2_t *)((char *)v12 + v14);
    int32x2_t v20 = *v16;
    int8x16_t v16 = (int32x2_t *)((char *)v16 + v14);
    int16x8_t v21 = (int16x8_t)vmlal_u8(vmull_u8((uint8x8_t)vtrn1_s32(v19, v20), a4), (uint8x8_t)vtrn1_s32((int32x2_t)vext_s8((int8x8_t)v19, (int8x8_t)v19, 1uLL), (int32x2_t)vext_s8((int8x8_t)v20, (int8x8_t)v20, 1uLL)), a5);
    BOOL v22 = __OFSUB__(a9, 2);
    a9 -= 2;
    uint16x8_t v23 = vrshrq_n_u16((uint16x8_t)vmlaq_s16(vmulq_s16((int16x8_t)vtrn1q_s64(i, (int64x2_t)v21), a6), v21, a7), 4uLL);
    *uint64_t result = v23.i64[0];
    uint64_t result = (void *)((char *)result + v15);
    *uint64_t v13 = v23.i64[1];
    uint64_t v13 = (void *)((char *)v13 + v15);
    if ((a9 < 0) ^ v22 | (a9 == 0)) {
      break;
    }
  }
  return result;
}

uint16x8_t *sub_224A997C8(uint16x8_t *result, int8x16_t *a2, uint64_t a3, int a4, int a5, uint8x8_t a6, uint8x8_t a7, int16x8_t a8, int16x8_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  for (i = a5; ; uint64_t result = (uint16x8_t *)((char *)result - a12 * i + 16))
  {
    uint64_t v13 = (int8x16_t *)((char *)a2 + a3);
    uint64_t v14 = (uint16x8_t *)((char *)result + a12);
    uint64_t v15 = 2 * a3;
    uint64_t v16 = 2 * a12;
    int8x16_t v18 = *a2;
    int8x8_t v17 = (int8x16_t *)((char *)a2 + v15);
    for (int16x8_t j = (int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v18.i8, a6), (uint8x8_t)*(_OWORD *)&vextq_s8(v18, v18, 1uLL), a7); ; int16x8_t j = v23)
    {
      int8x16_t v20 = *v13;
      uint64_t v13 = (int8x16_t *)((char *)v13 + v15);
      int8x16_t v21 = *v17;
      int8x8_t v17 = (int8x16_t *)((char *)v17 + v15);
      int16x8_t v22 = (int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v20.i8, a6), (uint8x8_t)*(_OWORD *)&vextq_s8(v20, v20, 1uLL), a7);
      int16x8_t v23 = (int16x8_t)vmlal_u8(vmull_u8(*(uint8x8_t *)v21.i8, a6), (uint8x8_t)*(_OWORD *)&vextq_s8(v21, v21, 1uLL), a7);
      BOOL v24 = __OFSUB__(a5, 2);
      a5 -= 2;
      *uint64_t result = vrshrq_n_u16((uint16x8_t)vmlaq_s16(vmulq_s16(j, a8), v22, a9), 4uLL);
      uint64_t result = (uint16x8_t *)((char *)result + v16);
      *uint64_t v14 = vrshrq_n_u16((uint16x8_t)vmlaq_s16(vmulq_s16(v22, a8), v23, a9), 4uLL);
      uint64_t v14 = (uint16x8_t *)((char *)v14 + v16);
      if ((a5 < 0) ^ v24 | (a5 == 0)) {
        break;
      }
    }
    BOOL v24 = __OFSUB__(a4, 8);
    a4 -= 8;
    if ((a4 < 0) ^ v24 | (a4 == 0)) {
      break;
    }
    a3 = v15 >> 1;
    a12 = v16 >> 1;
    a5 = i;
    a2 = (int8x16_t *)((char *)&v17->u64[1] - a3 * i + -2 * a3);
  }
  return result;
}

double sub_224A9987C(uint64_t a1, uint64_t a2, int8x8_t *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v10 = a6 + 512 + a8;
  int v11 = v10 >> 10;
  int v12 = v10 + a8;
  int8x8_t v13 = *(int8x8_t *)(v8 + 8 * v11);
  int v14 = v12 >> 10;
  int v15 = v12 + a8;
  int8x8_t v16 = *(int8x8_t *)(v8 + 8 * v14);
  int v17 = v15 >> 10;
  int v18 = v15 + a8;
  int8x8_t v19 = *(int8x8_t *)(v8 + 8 * v17);
  int v20 = v18 >> 10;
  int v21 = v18 + a8;
  int8x8_t v22 = veor_s8(*a3, v9);
  int8x8_t v23 = veor_s8(a3[1], v9);
  *(void *)&double result = vpaddq_s16(vpaddq_s16(vpaddq_s16(vmull_s8(*(int8x8_t *)(v8 + 8 * ((a6 + 512) >> 10)), v22), vmull_s8(v13, vext_s8(v22, v23, 1uLL))), vpaddq_s16(vmull_s8(v16, vext_s8(v22, v23, 2uLL)), vmull_s8(v19, vext_s8(v22, v23, 3uLL)))), vpaddq_s16(vpaddq_s16(vmull_s8(*(int8x8_t *)(v8 + 8 * v20), vext_s8(v22, v23, 4uLL)), vmull_s8(*(int8x8_t *)(v8 + 8 * (v21 >> 10)), vext_s8(v22, v23, 5uLL))), vpaddq_s16(vmull_s8(*(int8x8_t *)(v8 + 8 * ((v21 + a8) >> 10)), vext_s8(v22, v23, 6uLL)), vmull_s8(*(int8x8_t *)(v8 + 8 * ((v21 + a8 + a8) >> 10)), vext_s8(v22, v23, 7uLL))))).u64[0];
  return result;
}

uint64_t sub_224A9994C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7)
{
  sub_224A9987C(a1, a2, (int8x8_t *)(a3 - 2 * a4 - a4 - 3), a4, *a5 >> 48, a6, a7, (__int16)*a5);
  sub_224A9987C(v7, v8, v9, v10, v11, v12, v13, v14);
  sub_224A9987C(v15, v16, v17, v18, v19, v20, v21, v22);
  sub_224A9987C(v23, v24, v25, v26, v27, v28, v29, v30);
  sub_224A9987C(v31, v32, v33, v34, v35, v36, v37, v38);
  sub_224A9987C(v39, v40, v41, v42, v43, v44, v45, v46);
  sub_224A9987C(v47, v48, v49, v50, v51, v52, v53, v54);
  do
  {
    *(double *)v63.i64 = sub_224A9987C(result, v56, v57, v58, v59, v60, v61, v62);
    int16x8_t v64 = vrshrq_n_s16(v63, 3uLL);
    int v66 = v65 >> 10;
    int v68 = v65 + v67;
    v63.i64[0] = *(void *)(v69 + 8 * v66);
    int v70 = v68 >> 10;
    int v71 = v68 + v67;
    v72.i64[0] = *(void *)(v69 + 8 * v70);
    int v73 = v71 >> 10;
    int v74 = v71 + v67;
    v75.i64[0] = *(void *)(v69 + 8 * v73);
    int v76 = v74 >> 10;
    int v77 = v74 + v67;
    v78.i64[0] = *(void *)(v69 + 8 * v76);
    int v79 = v77 >> 10;
    int v80 = v77 + v67;
    v81.i64[0] = *(void *)(v69 + 8 * v79);
    int v82 = v80 >> 10;
    int v83 = v80 + v67;
    v84.i64[0] = *(void *)(v69 + 8 * v82);
    v85.i64[0] = *(void *)(v69 + 8 * (v83 >> 10));
    v86.i64[0] = *(void *)(v69 + 8 * ((v83 + v67) >> 10));
    int16x8_t v87 = (int16x8_t)vzip1q_s8((int8x16_t)v63, v72);
    int16x8_t v88 = (int16x8_t)vzip1q_s8(v75, v78);
    int16x8_t v89 = (int16x8_t)vzip1q_s8(v81, v84);
    int16x8_t v90 = (int16x8_t)vzip1q_s8(v85, v86);
    int32x4_t v91 = (int32x4_t)vtrn1q_s16(v87, v88);
    int32x4_t v92 = (int32x4_t)vtrn2q_s16(v87, v88);
    int32x4_t v93 = (int32x4_t)vtrn1q_s16(v89, v90);
    int32x4_t v94 = (int32x4_t)vtrn2q_s16(v89, v90);
    int8x16_t v95 = (int8x16_t)vtrn1q_s32(v91, v93);
    int8x16_t v96 = (int8x16_t)vtrn2q_s32(v91, v93);
    int8x16_t v97 = (int8x16_t)vtrn1q_s32(v92, v94);
    int8x16_t v98 = (int8x16_t)vtrn2q_s32(v92, v94);
    int16x8_t v99 = vmovl_high_s8(v95);
    int16x8_t v100 = vmovl_s8(*(int8x8_t *)v95.i8);
    int16x8_t v101 = vmovl_high_s8(v96);
    int16x8_t v102 = vmovl_s8(*(int8x8_t *)v96.i8);
    int16x8_t v103 = vmovl_high_s8(v97);
    int16x8_t v104 = vmovl_s8(*(int8x8_t *)v97.i8);
    int16x8_t v105 = vmovl_high_s8(v98);
    int16x8_t v106 = vmovl_s8(*(int8x8_t *)v98.i8);
    *uint64_t v115 = vqmovun_s16(vaddq_s16(vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmull_s16(*(int16x4_t *)v107.i8, *(int16x4_t *)v100.i8), *(int16x4_t *)v108.i8, *(int16x4_t *)v104.i8), *(int16x4_t *)v109.i8, *(int16x4_t *)v102.i8), *(int16x4_t *)v110.i8, *(int16x4_t *)v106.i8), *(int16x4_t *)v111.i8, *(int16x4_t *)v99.i8),
                          *(int16x4_t *)v112.i8,
                          *(int16x4_t *)v103.i8),
                        *(int16x4_t *)v113.i8,
                        *(int16x4_t *)v101.i8),
                      *(int16x4_t *)v64.i8,
                      *(int16x4_t *)v105.i8),
                    0xBuLL),
                  vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmull_high_s16(v107, v100), v108, v104), v109, v102), v110, v106), v111, v99), v112, v103), v113, v101), v64, v105), 0xBuLL), v114));
    uint64_t result = (uint64_t)v115 + v56;
    uint64_t v61 = (v116 + v59);
  }
  while (v117 > 1);
  return result;
}

uint64_t sub_224A99AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7)
{
  sub_224A9987C(a1, 2 * a2, (int8x8_t *)(a3 - 2 * a4 - a4 - 3), a4, *a5 >> 48, a6, a7, (__int16)*a5);
  sub_224A9987C(v7, v8, v9, v10, v11, v12, v13, v14);
  sub_224A9987C(v15, v16, v17, v18, v19, v20, v21, v22);
  sub_224A9987C(v23, v24, v25, v26, v27, v28, v29, v30);
  sub_224A9987C(v31, v32, v33, v34, v35, v36, v37, v38);
  sub_224A9987C(v39, v40, v41, v42, v43, v44, v45, v46);
  sub_224A9987C(v47, v48, v49, v50, v51, v52, v53, v54);
  do
  {
    *(double *)v63.i64 = sub_224A9987C(result, v56, v57, v58, v59, v60, v61, v62);
    int16x8_t v64 = vrshrq_n_s16(v63, 3uLL);
    int v66 = v65 >> 10;
    int v68 = v65 + v67;
    v63.i64[0] = *(void *)(v69 + 8 * v66);
    int v70 = v68 >> 10;
    int v71 = v68 + v67;
    v72.i64[0] = *(void *)(v69 + 8 * v70);
    int v73 = v71 >> 10;
    int v74 = v71 + v67;
    v75.i64[0] = *(void *)(v69 + 8 * v73);
    int v76 = v74 >> 10;
    int v77 = v74 + v67;
    v78.i64[0] = *(void *)(v69 + 8 * v76);
    int v79 = v77 >> 10;
    int v80 = v77 + v67;
    v81.i64[0] = *(void *)(v69 + 8 * v79);
    int v82 = v80 >> 10;
    int v83 = v80 + v67;
    v84.i64[0] = *(void *)(v69 + 8 * v82);
    v85.i64[0] = *(void *)(v69 + 8 * (v83 >> 10));
    v86.i64[0] = *(void *)(v69 + 8 * ((v83 + v67) >> 10));
    int16x8_t v87 = (int16x8_t)vzip1q_s8((int8x16_t)v63, v72);
    int16x8_t v88 = (int16x8_t)vzip1q_s8(v75, v78);
    int16x8_t v89 = (int16x8_t)vzip1q_s8(v81, v84);
    int16x8_t v90 = (int16x8_t)vzip1q_s8(v85, v86);
    int32x4_t v91 = (int32x4_t)vtrn1q_s16(v87, v88);
    int32x4_t v92 = (int32x4_t)vtrn2q_s16(v87, v88);
    int32x4_t v93 = (int32x4_t)vtrn1q_s16(v89, v90);
    int32x4_t v94 = (int32x4_t)vtrn2q_s16(v89, v90);
    int8x16_t v95 = (int8x16_t)vtrn1q_s32(v91, v93);
    int8x16_t v96 = (int8x16_t)vtrn2q_s32(v91, v93);
    int8x16_t v97 = (int8x16_t)vtrn1q_s32(v92, v94);
    int8x16_t v98 = (int8x16_t)vtrn2q_s32(v92, v94);
    int16x8_t v99 = vmovl_high_s8(v95);
    int16x8_t v100 = vmovl_s8(*(int8x8_t *)v95.i8);
    int16x8_t v101 = vmovl_high_s8(v96);
    int16x8_t v102 = vmovl_s8(*(int8x8_t *)v96.i8);
    int16x8_t v103 = vmovl_high_s8(v97);
    int16x8_t v104 = vmovl_s8(*(int8x8_t *)v97.i8);
    int16x8_t v105 = vmovl_high_s8(v98);
    int16x8_t v106 = vmovl_s8(*(int8x8_t *)v98.i8);
    *uint64_t v115 = vaddq_s16(vqrshrn_high_n_s32(vqrshrn_n_s32(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmull_s16(*(int16x4_t *)v107.i8, *(int16x4_t *)v100.i8), *(int16x4_t *)v108.i8, *(int16x4_t *)v104.i8), *(int16x4_t *)v109.i8, *(int16x4_t *)v102.i8), *(int16x4_t *)v110.i8, *(int16x4_t *)v106.i8), *(int16x4_t *)v111.i8, *(int16x4_t *)v99.i8), *(int16x4_t *)v112.i8,
                        *(int16x4_t *)v103.i8),
                      *(int16x4_t *)v113.i8,
                      *(int16x4_t *)v101.i8),
                    *(int16x4_t *)v64.i8,
                    *(int16x4_t *)v105.i8),
                  7uLL),
                vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmull_high_s16(v107, v100), v108, v104), v109, v102), v110, v106), v111, v99), v112, v103), v113, v101), v64, v105), 7uLL), v114);
    uint64_t result = (uint64_t)v115->i64 + v56;
    uint64_t v61 = (v116 + v59);
  }
  while (v117 > 1);
  return result;
}

uint64_t sub_224A99CA4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10 = a4 - 1;
  uint64_t v11 = a3 - 1;
  if (a6 < a4) {
    uint64_t v10 = a6;
  }
  uint64_t v12 = v10 & ~(v10 >> 63);
  if (a5 < a3) {
    uint64_t v11 = a5;
  }
  uint64_t v13 = (const char *)(a9 + v12 * a10 + (v11 & ~(v11 >> 63)));
  uint64_t v14 = a6 + a2 - a4;
  uint64_t v15 = -a6 & ~(-a6 >> 63);
  if (v14 >= a2) {
    uint64_t v14 = a2 - 1;
  }
  uint64_t v16 = v14 & ~(v14 >> 63);
  if (v15 >= a2) {
    uint64_t v15 = a2 - 1;
  }
  uint64_t v17 = a5 + result - a3;
  uint64_t v18 = -a5 & ~(-a5 >> 63);
  if (v17 >= result) {
    uint64_t v17 = result - 1;
  }
  uint64_t v19 = v17 & ~(v17 >> 63);
  if (v18 >= result) {
    uint64_t v18 = result - 1;
  }
  int v20 = (long long *)(a7 + v15 * a8);
  uint64_t v21 = a2 - v15 - v16;
  uint64_t v22 = result - v18 - v19;
  uint64_t v23 = v20;
  if (v18)
  {
    if (v19)
    {
      do
      {
        int8x16_t v24 = vld1q_dup_s8(v13);
        int16x8_t v25 = (int8x16_t *)v20;
        uint64_t v26 = v18;
        do
        {
          BOOL v27 = v26 <= 16;
          v26 -= 16;
          *v25++ = v24;
        }
        while (!v27);
        int v28 = v13;
        uint64_t v29 = (long long *)((char *)v20 + v18);
        uint64_t v30 = result - v18 - v19;
        do
        {
          long long v31 = *(_OWORD *)v28;
          long long v32 = *((_OWORD *)v28 + 1);
          v28 += 32;
          BOOL v27 = v30 <= 32;
          v30 -= 32;
          *uint64_t v29 = v31;
          v29[1] = v32;
          v29 += 2;
        }
        while (!v27);
        int16x8_t v33 = &v13[v22 - 1];
        int8x16_t v34 = vld1q_dup_s8(v33);
        uint64_t v35 = (int8x16_t *)((char *)v20 + result - v19);
        uint64_t v36 = v19;
        do
        {
          BOOL v27 = v36 <= 16;
          v36 -= 16;
          *v35++ = v34;
        }
        while (!v27);
        BOOL v27 = v21-- <= 1;
        int v20 = (long long *)((char *)v20 + a8);
        v13 += a10;
      }
      while (!v27);
    }
    else
    {
      do
      {
        int8x16_t v46 = vld1q_dup_s8(v13);
        uint64_t v47 = (int8x16_t *)v20;
        uint64_t v48 = v18;
        do
        {
          BOOL v27 = v48 <= 16;
          v48 -= 16;
          *v47++ = v46;
        }
        while (!v27);
        int64x2_t v49 = v13;
        uint64_t v50 = (long long *)((char *)v20 + v18);
        uint64_t v51 = result - v18 - v19;
        do
        {
          long long v52 = *(_OWORD *)v49;
          long long v53 = *((_OWORD *)v49 + 1);
          v49 += 32;
          BOOL v27 = v51 <= 32;
          v51 -= 32;
          *uint64_t v50 = v52;
          v50[1] = v53;
          v50 += 2;
        }
        while (!v27);
        BOOL v27 = v21-- <= 1;
        int v20 = (long long *)((char *)v20 + a8);
        v13 += a10;
      }
      while (!v27);
    }
  }
  else if (v19)
  {
    do
    {
      uint64_t v37 = v13;
      int v38 = v20;
      uint64_t v39 = result - v19;
      do
      {
        long long v40 = *(_OWORD *)v37;
        long long v41 = *((_OWORD *)v37 + 1);
        v37 += 32;
        BOOL v27 = v39 <= 32;
        v39 -= 32;
        *int v38 = v40;
        v38[1] = v41;
        v38 += 2;
      }
      while (!v27);
      uint64_t v42 = &v13[v22 - 1];
      int8x16_t v43 = vld1q_dup_s8(v42);
      int v44 = (int8x16_t *)((char *)v20 + result - v19);
      uint64_t v45 = v19;
      do
      {
        BOOL v27 = v45 <= 16;
        v45 -= 16;
        *v44++ = v43;
      }
      while (!v27);
      BOOL v27 = v21-- <= 1;
      int v20 = (long long *)((char *)v20 + a8);
      v13 += a10;
    }
    while (!v27);
  }
  else
  {
    do
    {
      int v54 = v13;
      int32x4_t v55 = v20;
      uint64_t v56 = result - v19;
      do
      {
        long long v57 = *(_OWORD *)v54;
        long long v58 = *((_OWORD *)v54 + 1);
        v54 += 32;
        BOOL v27 = v56 <= 32;
        v56 -= 32;
        *int32x4_t v55 = v57;
        v55[1] = v58;
        v55 += 2;
      }
      while (!v27);
      BOOL v27 = v21-- <= 1;
      int v20 = (long long *)((char *)v20 + a8);
      v13 += a10;
    }
    while (!v27);
  }
  if (v16)
  {
    uint64_t v59 = (long long *)((char *)v20 - a8);
    uint64_t v60 = result;
    do
    {
      long long v61 = *v59;
      long long v62 = v59[1];
      v59 += 2;
      uint64_t v63 = v16;
      do
      {
        BOOL v27 = v63-- <= 1;
        *int v20 = v61;
        v20[1] = v62;
        int v20 = (long long *)((char *)v20 + a8);
      }
      while (!v27);
      BOOL v27 = v60 <= 32;
      v60 -= 32;
      int v20 = (long long *)((char *)v20 - a8 * v16 + 32);
    }
    while (!v27);
  }
  if (v15)
  {
    int16x8_t v64 = (long long *)((char *)v23 - a8 * v15);
    do
    {
      long long v65 = *v23;
      long long v66 = v23[1];
      v23 += 2;
      uint64_t v67 = v15;
      do
      {
        BOOL v27 = v67-- <= 1;
        *int16x8_t v64 = v65;
        v64[1] = v66;
        int16x8_t v64 = (_OWORD *)((char *)v64 + a8);
      }
      while (!v27);
      BOOL v27 = result <= 32;
      result -= 32;
      int16x8_t v64 = (_OWORD *)((char *)v64 - a8 * v15 + 32);
    }
    while (!v27);
  }
  return result;
}

__n64 sub_224A99ED8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v4 = (a3 >> 4) | ((((a3 ^ (a3 >> 3)) ^ ((a3 >> 12) ^ (a3 >> 1))) & 0xF) << 12);
  result.n64_u16[0] = *(_WORD *)(a4 + 2 * ((v4 >> 2) & 0x7FF));
  result.n64_u16[1] = *(_WORD *)(a4 + 2 * ((v4 >> 3) & 0x7FF));
  result.n64_u16[2] = *(_WORD *)(a4 + 2 * ((v4 >> 4) & 0x7FF));
  result.n64_u16[3] = *(_WORD *)(a4 + 2 * ((unsigned __int16)v4 >> 5));
  return result;
}

double sub_224A99F84(int16x8_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  unint64_t v6 = (a4 >> 2) | ((((a4 ^ (a4 >> 3)) ^ ((a4 >> 12) ^ (a4 >> 1))) & 3) << 14);
  a1.i16[0] = *(_WORD *)(a5 + 2 * ((v6 >> 4) & 0x7FF));
  a1.i16[1] = *(_WORD *)(a5 + 2 * ((unsigned __int16)v6 >> 5));
  *(int16x4_t *)a1.i8 = vrshl_s16(*(int16x4_t *)a1.i8, v5);
  *(int8x8_t *)a1.i8 = vmovn_s16(a1);
  return *(double *)a1.i64;
}

int8x16_t sub_224A99FCC@<Q0>(unint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, signed __int32 a4@<W5>, signed __int32 a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t result@<Q0>, int8x16_t a9@<Q1>)
{
  do
  {
    uint64_t v13 = (a1 >> 6) & 0x7FF;
    a1 = a1 >> 1;
    __n64 result = vextq_s8(result, result, 1uLL);
    signed __int32 v11 = ((a9.i32[0] + v11 * a3 + a7) >> a6) + ((*(__int16 *)(a2 + 2 * v13) + v10) >> v9);
    if (v11 > a4) {
      signed __int32 v11 = a4;
    }
    if (v11 < a5) {
      signed __int32 v11 = a5;
    }
    BOOL v14 = __OFSUB__(v12--, 1);
    a9 = vextq_s8(a9, a9, 4uLL);
    result.i8[15] = v11;
  }
  while (!((v12 < 0) ^ v14 | (v12 == 0)));
  return result;
}

int8x16_t sub_224A9A01C@<Q0>(unint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t result@<Q0>, int8x16_t a9@<Q1>)
{
  do
  {
    uint64_t v15 = (a1 >> 6) & 0x7FF;
    a1 = a1 >> 1;
    __n64 result = vextq_s8(result, result, 1uLL);
    unsigned __int32 v16 = a9.i32[0] + v13 * a3 + v11 * v14;
    int v13 = v11;
    int v11 = ((int)(v16 + a7) >> a6) + ((*(__int16 *)(a2 + 2 * v15) + v10) >> v9);
    if (v11 > a4) {
      int v11 = a4;
    }
    if (v11 < a5) {
      int v11 = a5;
    }
    BOOL v17 = __OFSUB__(v12--, 1);
    a9 = vextq_s8(a9, a9, 4uLL);
    result.i8[15] = v11;
  }
  while (!((v12 < 0) ^ v17 | (v12 == 0)));
  return result;
}

int8x16_t sub_224A9A074@<Q0>(unint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t result@<Q0>, int8x16_t a9@<Q1>)
{
  do
  {
    uint64_t v17 = (a1 >> 6) & 0x7FF;
    a1 = a1 >> 1;
    __n64 result = vextq_s8(result, result, 1uLL);
    unsigned __int32 v18 = a9.i32[0] + v14 * a3 + v13 * v15 + v11 * v16;
    int v14 = v13;
    int v13 = v11;
    int v11 = ((int)(v18 + a7) >> a6) + ((*(__int16 *)(a2 + 2 * v17) + v10) >> v9);
    if (v11 > a4) {
      int v11 = a4;
    }
    if (v11 < a5) {
      int v11 = a5;
    }
    BOOL v19 = __OFSUB__(v12--, 1);
    a9 = vextq_s8(a9, a9, 4uLL);
    result.i8[15] = v11;
  }
  while (!((v12 < 0) ^ v19 | (v12 == 0)));
  return result;
}

double sub_224A9A0D4(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  *(void *)&double result = vaddl_s16((int16x4_t)*(_OWORD *)&vmull_s8(a4, v5), (int16x4_t)*(_OWORD *)&vmull_s8(a1, v4)).u64[0];
  return result;
}

uint64_t sub_224A9A110(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  double v4 = sub_224A9A0D4(a1, a2, a3, a4);
  return sub_224A9A11C(v4);
}

void sub_224A9A11C(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, signed __int32 a4@<W5>, signed __int32 a5@<W6>, char a6@<W7>, int a7@<W8>, int16x8_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  unint64_t v10 = (a1 >> 4) | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 12);
  a8.i16[5] = *(_WORD *)(a2 + 2 * ((v10 >> 2) & 0x7FF));
  a8.i16[6] = *(_WORD *)(a2 + 2 * ((v10 >> 3) & 0x7FF));
  a8.i16[7] = *(_WORD *)(a2 + 2 * ((v10 >> 4) & 0x7FF));
  int16x8_t v11 = vrshlq_s16(a8, v9);
  int8x16_t v12 = sub_224A99FCC(2 * v10, a2, a3, a4, a5, a6, a7, vmovn_hight_s16(*(int8x8_t *)v11.i8, v11), vextq_s8(a9, a9, 0xCuLL));
  int8x16_t v21 = sub_224A99FCC(v13 | ((((v13 ^ (v13 >> 3)) ^ ((v13 >> 12) ^ (v13 >> 1))) & 0xF) << 16), v14, v15, v16, v17, v18, v19, v12, v20);
  int8x16_t v30 = sub_224A99FCC(v22 | ((((v22 ^ (v22 >> 3)) ^ ((v22 >> 12) ^ (v22 >> 1))) & 0xF) << 16), v23, v24, v25, v26, v27, v28, v21, v29);
  sub_224A99FCC(v31 | ((((v31 ^ (v31 >> 3)) ^ ((v31 >> 12) ^ (v31 >> 1))) & 0xF) << 16), v32, v33, v34, v35, v36, v37, v30, v38);
}

uint64_t sub_224A9A214(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  double v4 = sub_224A9A0D4(a1, a2, a3, a4);
  return sub_224A9A220(v4);
}

void sub_224A9A220(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, signed __int32 a4@<W5>, signed __int32 a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A99FCC(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A99FCC(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  int8x16_t v27 = sub_224A99FCC(v19 | ((((v19 ^ (v19 >> 3)) ^ ((v19 >> 12) ^ (v19 >> 1))) & 0xF) << 16), v20, v21, v22, v23, v24, v25, v18, v26);
  sub_224A99FCC(v28 | ((((v28 ^ (v28 >> 3)) ^ ((v28 >> 12) ^ (v28 >> 1))) & 0xF) << 16), v29, v30, v31, v32, v33, v34, v27, v35);
}

uint64_t sub_224A9A2DC(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  double v4 = sub_224A9A0D4(a1, a2, a3, a4);
  return sub_224A9A2E8(v4);
}

double sub_224A9A2E8@<D0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, signed __int32 a4@<W5>, signed __int32 a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A99FCC(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A99FCC(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  int8x16_t v27 = sub_224A99FCC(v19 | ((((v19 ^ (v19 >> 3)) ^ ((v19 >> 12) ^ (v19 >> 1))) & 0xF) << 16), v20, v21, v22, v23, v24, v25, v18, v26);
  int8x16_t v36 = sub_224A99FCC(v28 | ((((v28 ^ (v28 >> 3)) ^ ((v28 >> 12) ^ (v28 >> 1))) & 0xF) << 16), v29, v30, v31, v32, v33, v34, v27, v35);
  v39.i16[0] = *(_WORD *)(v38 + 2 * ((v37 >> 6) & 0x7FF));
  *(int16x4_t *)v41.i8 = vrshl_s16(v39, v40);
  *(void *)&double result = vextq_s8(v36, v41, 1uLL).u64[0];
  return result;
}

void sub_224A9A3BC(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  sub_224A9A0D4(a1, a2, a3, a4);
  sub_224A9A11C(v7, v8, v9, v10, v11, v12, v13, *v4, (int8x16_t)vaddw_s16(v6, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v4->i8, v5)));
}

void sub_224A9A3E8(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  sub_224A9A0D4(a1, a2, a3, a4);
  sub_224A9A220(v7, v8, v9, v10, v11, v12, v13, *v4, (int8x16_t)vaddw_s16(v6, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v4->i8, v5)));
}

double sub_224A9A414(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  sub_224A9A0D4(a1, a2, a3, a4);
  return sub_224A9A2E8(v7, v8, v9, v10, v11, v12, v13, *v4, (int8x16_t)vaddw_s16(v6, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v4->i8, v5)));
}

void sub_224A9A440(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  sub_224A9A0D4(a1, a2, a3, a4);
  int16x8_t v5 = (int16x8_t)vrshrn_high_n_s16(vrshrn_n_s16(vpaddlq_s8(*v4), 1uLL), vpaddlq_s8(v4[1]), 1uLL);
  sub_224A9A11C(v8, v9, v10, v11, v12, v13, v14, v5, (int8x16_t)vaddw_s16(v7, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v5.i8, v6)));
}

void sub_224A9A47C(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  sub_224A9A0D4(a1, a2, a3, a4);
  int8x16_t v5 = vrshrn_high_n_s16(vrshrn_n_s16(vpaddlq_s8(*v4), 1uLL), vpaddlq_s8(v4[1]), 1uLL);
  sub_224A9A220(v8, v9, v10, v11, v12, v13, v14, v5, (int8x16_t)vaddw_s16(v7, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v5.i8, v6)));
}

double sub_224A9A4B8(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  sub_224A9A0D4(a1, a2, a3, a4);
  int8x16_t v5 = vrshrn_high_n_s16(vrshrn_n_s16(vpaddlq_s8(*v4), 1uLL), vpaddlq_s8(v4[1]), 1uLL);
  return sub_224A9A5EC(v8, v9, v10, v11, v12, v13, v14, v5, (int8x16_t)vaddw_s16(v7, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v5.i8, v6)));
}

void sub_224A9A4F4(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  sub_224A9A0D4(a1, a2, a3, a4);
  int16x8_t v5 = (int16x8_t)vrshrn_high_n_s16(vrshrn_n_s16(vaddq_s16(vpaddlq_s8(*(int8x16_t *)v4), vpaddlq_s8(*(int8x16_t *)(v4 + 82))), 2uLL), vaddq_s16(vpaddlq_s8(*(int8x16_t *)(v4 + 16)), vpaddlq_s8(*(int8x16_t *)(v4 + 98))), 2uLL);
  sub_224A9A11C(v8, v9, v10, v11, v12, v13, v14, v5, (int8x16_t)vaddw_s16(v7, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v5.i8, v6)));
}

void sub_224A9A548(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  sub_224A9A0D4(a1, a2, a3, a4);
  int8x16_t v5 = vrshrn_high_n_s16(vrshrn_n_s16(vaddq_s16(vpaddlq_s8(*(int8x16_t *)v4), vpaddlq_s8(*(int8x16_t *)(v4 + 82))), 2uLL), vaddq_s16(vpaddlq_s8(*(int8x16_t *)(v4 + 16)), vpaddlq_s8(*(int8x16_t *)(v4 + 98))), 2uLL);
  sub_224A9A220(v8, v9, v10, v11, v12, v13, v14, v5, (int8x16_t)vaddw_s16(v7, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v5.i8, v6)));
}

uint64_t sub_224A9A59C(int8x8_t a1, double a2, double a3, int8x8_t a4)
{
  return sub_224A9A5EC();
}

double sub_224A9A5EC@<D0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, signed __int32 a4@<W5>, signed __int32 a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A99FCC(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A99FCC(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  int8x16_t v27 = sub_224A99FCC(v19 | ((((v19 ^ (v19 >> 3)) ^ ((v19 >> 12) ^ (v19 >> 1))) & 0xF) << 16), v20, v21, v22, v23, v24, v25, v18, v26);
  unint64_t v29 = v28 >> 3;
  v31.i16[0] = *(_WORD *)(v30 + 2 * ((v29 >> 3) & 0x7FF));
  v31.i16[1] = *(_WORD *)(v30 + 2 * ((v29 >> 4) & 0x7FF));
  v31.i16[2] = *(_WORD *)(v30 + 2 * ((unsigned __int16)v29 >> 5));
  *(int16x4_t *)v33.i8 = vrshl_s16(v31, v32);
  *(int8x8_t *)v33.i8 = vmovn_s16(v33);
  *(void *)&double result = vextq_s8(v27, (int8x16_t)v33, 7uLL).u64[0];
  return result;
}

double sub_224A9A6B0()
{
  *(void *)&double result = vaddl_s16((int16x4_t)*(_OWORD *)&vmull_s8(v0, (int8x8_t)*(_OWORD *)&vdupq_lane_s8(v2, 2)), (int16x4_t)*(_OWORD *)&vmull_s8(v1, (int8x8_t)*(_OWORD *)&vdupq_lane_s8(v2, 7))).u64[0];
  return result;
}

uint64_t sub_224A9A7FC()
{
  double v0 = sub_224A9A6B0();
  return sub_224A9A818(v0);
}

int8x16_t *sub_224A9A818@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int16x8_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  unint64_t v10 = (a1 >> 4) | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 12);
  a8.i16[5] = *(_WORD *)(a2 + 2 * ((v10 >> 2) & 0x7FF));
  a8.i16[6] = *(_WORD *)(a2 + 2 * ((v10 >> 3) & 0x7FF));
  a8.i16[7] = *(_WORD *)(a2 + 2 * ((v10 >> 4) & 0x7FF));
  int16x8_t v11 = vrshlq_s16(a8, v9);
  int8x16_t v12 = sub_224A9A01C(2 * v10, a2, a3, a4, a5, a6, a7, vmovn_hight_s16(*(int8x8_t *)v11.i8, v11), vextq_s8(a9, a9, 0xCuLL));
  int8x16_t v21 = sub_224A9A01C(v13 | ((((v13 ^ (v13 >> 3)) ^ ((v13 >> 12) ^ (v13 >> 1))) & 0xF) << 16), v14, v15, v16, v17, v18, v19, v12, v20);
  int8x16_t v30 = sub_224A9A01C(v22 | ((((v22 ^ (v22 >> 3)) ^ ((v22 >> 12) ^ (v22 >> 1))) & 0xF) << 16), v23, v24, v25, v26, v27, v28, v21, v29);
  int8x16_t v39 = sub_224A9A01C(v31 | ((((v31 ^ (v31 >> 3)) ^ ((v31 >> 12) ^ (v31 >> 1))) & 0xF) << 16), v32, v33, v34, v35, v36, v37, v30, v38);
  *int16x4_t v40 = v39;
  return v40 + 1;
}

uint64_t sub_224A9A918()
{
  double v0 = sub_224A9A6B0();
  return sub_224A9A924(v0);
}

int8x16_t *sub_224A9A924@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A9A01C(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A9A01C(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  int8x16_t v27 = sub_224A9A01C(v19 | ((((v19 ^ (v19 >> 3)) ^ ((v19 >> 12) ^ (v19 >> 1))) & 0xF) << 16), v20, v21, v22, v23, v24, v25, v18, v26);
  int8x16_t v36 = sub_224A9A01C(v28 | ((((v28 ^ (v28 >> 3)) ^ ((v28 >> 12) ^ (v28 >> 1))) & 0xF) << 16), v29, v30, v31, v32, v33, v34, v27, v35);
  *int v37 = v36;
  return v37 + 1;
}

uint64_t sub_224A9A9E4()
{
  double v0 = sub_224A9A6B0();
  return sub_224A9A9F0(v0);
}

int8x16_t *sub_224A9A9F0@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A9A01C(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A9A01C(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  int8x16_t v27 = sub_224A9A01C(v19 | ((((v19 ^ (v19 >> 3)) ^ ((v19 >> 12) ^ (v19 >> 1))) & 0xF) << 16), v20, v21, v22, v23, v24, v25, v18, v26);
  int8x16_t v36 = sub_224A9A01C(v28 | ((((v28 ^ (v28 >> 3)) ^ ((v28 >> 12) ^ (v28 >> 1))) & 0xF) << 16), v29, v30, v31, v32, v33, v34, v27, v35);
  v39.i16[0] = *(_WORD *)(v38 + 2 * ((v37 >> 6) & 0x7FF));
  *(int16x4_t *)v41.i8 = vrshl_s16(v39, v40);
  *uint64_t v42 = vextq_s8(v36, v41, 1uLL);
  return v42 + 1;
}

int8x16_t *sub_224A9AAC8()
{
  sub_224A9A6B0();
  return sub_224A9A818(v3, v4, v5, v6, v7, v8, v9, *v0, (int8x16_t)vaddw_s16(v2, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v0->i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v1, 12))));
}

int8x16_t *sub_224A9AB08()
{
  sub_224A9A6B0();
  return sub_224A9A924(v3, v4, v5, v6, v7, v8, v9, *v0, (int8x16_t)vaddw_s16(v2, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v0->i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v1, 12))));
}

int8x16_t *sub_224A9AB38()
{
  sub_224A9A6B0();
  return sub_224A9A9F0(v3, v4, v5, v6, v7, v8, v9, *v0, (int8x16_t)vaddw_s16(v2, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v0->i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v1, 12))));
}

int8x16_t *sub_224A9AB68()
{
  sub_224A9A6B0();
  int16x8_t v1 = (int16x8_t)vrshrn_high_n_s16(vrshrn_n_s16(vpaddlq_s8(*v0), 1uLL), vpaddlq_s8(v0[1]), 1uLL);
  return sub_224A9A818(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vaddw_s16(v3, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v2, 12))));
}

int8x16_t *sub_224A9ABB8()
{
  sub_224A9A6B0();
  int8x16_t v1 = vrshrn_high_n_s16(vrshrn_n_s16(vpaddlq_s8(*v0), 1uLL), vpaddlq_s8(v0[1]), 1uLL);
  return sub_224A9A924(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vaddw_s16(v3, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v2, 12))));
}

int8x16_t *sub_224A9ABF8()
{
  sub_224A9A6B0();
  int8x16_t v1 = vrshrn_high_n_s16(vrshrn_n_s16(vpaddlq_s8(*v0), 1uLL), vpaddlq_s8(v0[1]), 1uLL);
  return sub_224A9AD4C(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vaddw_s16(v3, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v2, 12))));
}

int8x16_t *sub_224A9AC38()
{
  sub_224A9A6B0();
  int16x8_t v1 = (int16x8_t)vrshrn_high_n_s16(vrshrn_n_s16(vaddq_s16(vpaddlq_s8(*(int8x16_t *)v0), vpaddlq_s8(*(int8x16_t *)(v0 + 82))), 2uLL), vaddq_s16(vpaddlq_s8(*(int8x16_t *)(v0 + 16)), vpaddlq_s8(*(int8x16_t *)(v0 + 98))), 2uLL);
  return sub_224A9A818(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vaddw_s16(v3, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v2, 12))));
}

int8x16_t *sub_224A9ACA0()
{
  sub_224A9A6B0();
  int8x16_t v1 = vrshrn_high_n_s16(vrshrn_n_s16(vaddq_s16(vpaddlq_s8(*(int8x16_t *)v0), vpaddlq_s8(*(int8x16_t *)(v0 + 82))), 2uLL), vaddq_s16(vpaddlq_s8(*(int8x16_t *)(v0 + 16)), vpaddlq_s8(*(int8x16_t *)(v0 + 98))), 2uLL);
  return sub_224A9A924(v4, v5, v6, v7, v8, v9, v10, v1, (int8x16_t)vaddw_s16(v3, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v2, 12))));
}

uint64_t sub_224A9ACF8()
{
  sub_224A9A6B0();
  __n128 v1 = (__n128)vrshrn_high_n_s16(vrshrn_n_s16(vaddq_s16(vpaddlq_s8(*(int8x16_t *)v0), vpaddlq_s8(*(int8x16_t *)(v0 + 82))), 2uLL), vaddq_s16(vpaddlq_s8(*(int8x16_t *)(v0 + 16)), vpaddlq_s8(*(int8x16_t *)(v0 + 98))), 2uLL);
  __n128 v3 = (__n128)vdupq_laneq_s8(v2, 12);
  __n128 v4 = (__n128)vmull_s8((int8x8_t)v1.n128_u64[0], (int8x8_t)v3.n128_u64[0]);
  __n128 v5 = (__n128)vmull_high_s8((int8x16_t)v1, (int8x16_t)v3);
  return sub_224A9AD4C(v1, v3, v4, v5, (__n128)vaddw_s16(v6, (int16x4_t)v4.n128_u64[0]), (__n128)vaddw_high_s16(v7, (int16x8_t)v4), (__n128)vaddw_s16(v8, (int16x4_t)v5.n128_u64[0]), (__n128)vaddw_high_s16(v9, (int16x8_t)v5));
}

int8x16_t *sub_224A9AD4C@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A9A01C(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A9A01C(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  int8x16_t v27 = sub_224A9A01C(v19 | ((((v19 ^ (v19 >> 3)) ^ ((v19 >> 12) ^ (v19 >> 1))) & 0xF) << 16), v20, v21, v22, v23, v24, v25, v18, v26);
  unint64_t v29 = v28 >> 3;
  v31.i16[0] = *(_WORD *)(v30 + 2 * ((v29 >> 3) & 0x7FF));
  v31.i16[1] = *(_WORD *)(v30 + 2 * ((v29 >> 4) & 0x7FF));
  v31.i16[2] = *(_WORD *)(v30 + 2 * ((unsigned __int16)v29 >> 5));
  *(int16x4_t *)v33.i8 = vrshl_s16(v31, v32);
  *(int8x8_t *)v33.i8 = vmovn_s16(v33);
  int8x16_t *v34 = vextq_s8(v27, (int8x16_t)v33, 7uLL);
  return v34 + 1;
}

double sub_224A9AE14(uint64_t a1)
{
  *(void *)&double result = vaddl_s16((int16x4_t)*(_OWORD *)&vmull_s8((int8x8_t)*(_OWORD *)&vextq_s8(v1, *(int8x16_t *)(a1 - 66), 2uLL), (int8x8_t)*(_OWORD *)&vdupq_lane_s8(v2, 3)), (int16x4_t)*(_OWORD *)&vmull_s8((int8x8_t)*(_OWORD *)&vextq_s8(v1, *(int8x16_t *)(a1 - 66), 3uLL), (int8x8_t)*(_OWORD *)&vdupq_lane_s8(v2, 4))).u64[0];
  return result;
}

uint64_t sub_224A9B0CC(uint64_t a1)
{
  double v1 = sub_224A9AE14(a1);
  return sub_224A9B0F0(v1);
}

int8x16_t *sub_224A9B0F0@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int16x8_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  unint64_t v10 = (a1 >> 4) | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 12);
  a8.i16[5] = *(_WORD *)(a2 + 2 * ((v10 >> 2) & 0x7FF));
  a8.i16[6] = *(_WORD *)(a2 + 2 * ((v10 >> 3) & 0x7FF));
  a8.i16[7] = *(_WORD *)(a2 + 2 * ((v10 >> 4) & 0x7FF));
  int16x8_t v11 = vrshlq_s16(a8, v9);
  int8x16_t v12 = sub_224A9A074(2 * v10, a2, a3, a4, a5, a6, a7, vmovn_hight_s16(*(int8x8_t *)v11.i8, v11), vextq_s8(a9, a9, 0xCuLL));
  int8x16_t v21 = sub_224A9A074(v13 | ((((v13 ^ (v13 >> 3)) ^ ((v13 >> 12) ^ (v13 >> 1))) & 0xF) << 16), v14, v15, v16, v17, v18, v19, v12, v20);
  int8x16_t v30 = sub_224A9A074(v22 | ((((v22 ^ (v22 >> 3)) ^ ((v22 >> 12) ^ (v22 >> 1))) & 0xF) << 16), v23, v24, v25, v26, v27, v28, v21, v29);
  int8x16_t v39 = sub_224A9A074(v31 | ((((v31 ^ (v31 >> 3)) ^ ((v31 >> 12) ^ (v31 >> 1))) & 0xF) << 16), v32, v33, v34, v35, v36, v37, v30, v38);
  *int16x4_t v40 = v39;
  return v40 + 1;
}

uint64_t sub_224A9B1F4(uint64_t a1)
{
  double v1 = sub_224A9AE14(a1);
  return sub_224A9B200(v1);
}

int8x16_t *sub_224A9B200@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A9A074(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A9A074(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  int8x16_t v27 = sub_224A9A074(v19 | ((((v19 ^ (v19 >> 3)) ^ ((v19 >> 12) ^ (v19 >> 1))) & 0xF) << 16), v20, v21, v22, v23, v24, v25, v18, v26);
  int8x16_t v36 = sub_224A9A074(v28 | ((((v28 ^ (v28 >> 3)) ^ ((v28 >> 12) ^ (v28 >> 1))) & 0xF) << 16), v29, v30, v31, v32, v33, v34, v27, v35);
  *int v37 = v36;
  return v37 + 1;
}

uint64_t sub_224A9B2C0(uint64_t a1)
{
  double v1 = sub_224A9AE14(a1);
  return sub_224A9B2CC(v1);
}

int8x16_t *sub_224A9B2CC@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A9A074(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A9A074(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  int8x16_t v27 = sub_224A9A074(v19 | ((((v19 ^ (v19 >> 3)) ^ ((v19 >> 12) ^ (v19 >> 1))) & 0xF) << 16), v20, v21, v22, v23, v24, v25, v18, v26);
  int8x16_t v36 = sub_224A9A074(v28 | ((((v28 ^ (v28 >> 3)) ^ ((v28 >> 12) ^ (v28 >> 1))) & 0xF) << 16), v29, v30, v31, v32, v33, v34, v27, v35);
  v39.i16[0] = *(_WORD *)(v38 + 2 * ((v37 >> 6) & 0x7FF));
  *(int16x4_t *)v41.i8 = vrshl_s16(v39, v40);
  *uint64_t v42 = vextq_s8(v36, v41, 1uLL);
  return v42 + 1;
}

int8x16_t *sub_224A9B3A4(uint64_t a1)
{
  sub_224A9AE14(a1);
  return sub_224A9B0F0(v4, v5, v6, v7, v8, v9, v10, *v1, (int8x16_t)vaddw_s16(v3, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v1->i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v2, 8))));
}

int8x16_t *sub_224A9B3EC(uint64_t a1)
{
  sub_224A9AE14(a1);
  return sub_224A9B200(v4, v5, v6, v7, v8, v9, v10, *v1, (int8x16_t)vaddw_s16(v3, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v1->i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v2, 8))));
}

int8x16_t *sub_224A9B41C(uint64_t a1)
{
  sub_224A9AE14(a1);
  return sub_224A9B2CC(v4, v5, v6, v7, v8, v9, v10, *v1, (int8x16_t)vaddw_s16(v3, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v1->i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v2, 8))));
}

int8x16_t *sub_224A9B44C(uint64_t a1)
{
  sub_224A9AE14(a1);
  int16x8_t v2 = (int16x8_t)vrshrn_high_n_s16(vrshrn_n_s16(vpaddlq_s8(*v1), 1uLL), vpaddlq_s8(v1[1]), 1uLL);
  return sub_224A9B0F0(v5, v6, v7, v8, v9, v10, v11, v2, (int8x16_t)vaddw_s16(v4, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v3, 8))));
}

int8x16_t *sub_224A9B4A4(uint64_t a1)
{
  sub_224A9AE14(a1);
  int8x16_t v2 = vrshrn_high_n_s16(vrshrn_n_s16(vpaddlq_s8(*v1), 1uLL), vpaddlq_s8(v1[1]), 1uLL);
  return sub_224A9B200(v5, v6, v7, v8, v9, v10, v11, v2, (int8x16_t)vaddw_s16(v4, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v3, 8))));
}

int8x16_t *sub_224A9B4E4(uint64_t a1)
{
  sub_224A9AE14(a1);
  int8x16_t v2 = vrshrn_high_n_s16(vrshrn_n_s16(vpaddlq_s8(*v1), 1uLL), vpaddlq_s8(v1[1]), 1uLL);
  return sub_224A9B640(v5, v6, v7, v8, v9, v10, v11, v2, (int8x16_t)vaddw_s16(v4, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v3, 8))));
}

int8x16_t *sub_224A9B524(uint64_t a1)
{
  sub_224A9AE14(a1);
  int16x8_t v2 = (int16x8_t)vrshrn_high_n_s16(vrshrn_n_s16(vaddq_s16(vpaddlq_s8(*(int8x16_t *)v1), vpaddlq_s8(*(int8x16_t *)(v1 + 82))), 2uLL), vaddq_s16(vpaddlq_s8(*(int8x16_t *)(v1 + 16)), vpaddlq_s8(*(int8x16_t *)(v1 + 98))), 2uLL);
  return sub_224A9B0F0(v5, v6, v7, v8, v9, v10, v11, v2, (int8x16_t)vaddw_s16(v4, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v3, 8))));
}

int8x16_t *sub_224A9B594(uint64_t a1)
{
  sub_224A9AE14(a1);
  int8x16_t v2 = vrshrn_high_n_s16(vrshrn_n_s16(vaddq_s16(vpaddlq_s8(*(int8x16_t *)v1), vpaddlq_s8(*(int8x16_t *)(v1 + 82))), 2uLL), vaddq_s16(vpaddlq_s8(*(int8x16_t *)(v1 + 16)), vpaddlq_s8(*(int8x16_t *)(v1 + 98))), 2uLL);
  return sub_224A9B200(v5, v6, v7, v8, v9, v10, v11, v2, (int8x16_t)vaddw_s16(v4, (int16x4_t)*(_OWORD *)&vmull_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vdupq_laneq_s8(v3, 8))));
}

uint64_t sub_224A9B5EC(uint64_t a1)
{
  sub_224A9AE14(a1);
  __n128 v2 = (__n128)vrshrn_high_n_s16(vrshrn_n_s16(vaddq_s16(vpaddlq_s8(*(int8x16_t *)v1), vpaddlq_s8(*(int8x16_t *)(v1 + 82))), 2uLL), vaddq_s16(vpaddlq_s8(*(int8x16_t *)(v1 + 16)), vpaddlq_s8(*(int8x16_t *)(v1 + 98))), 2uLL);
  __n128 v4 = (__n128)vdupq_laneq_s8(v3, 8);
  __n128 v5 = (__n128)vmull_s8((int8x8_t)v2.n128_u64[0], (int8x8_t)v4.n128_u64[0]);
  __n128 v6 = (__n128)vmull_high_s8((int8x16_t)v2, (int8x16_t)v4);
  return sub_224A9B640(v2, v4, v5, v6, (__n128)vaddw_s16(v7, (int16x4_t)v5.n128_u64[0]), (__n128)vaddw_high_s16(v8, (int16x8_t)v5), (__n128)vaddw_s16(v9, (int16x4_t)v6.n128_u64[0]), (__n128)vaddw_high_s16(v10, (int16x8_t)v6));
}

int8x16_t *sub_224A9B640@<X0>(unsigned int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, int a5@<W6>, char a6@<W7>, int a7@<W8>, int8x16_t a8@<Q0>, int8x16_t a9@<Q4>)
{
  int8x16_t v9 = sub_224A9A074(a1 | ((((a1 ^ (a1 >> 3)) ^ ((a1 >> 12) ^ (a1 >> 1))) & 0xF) << 16), a2, a3, a4, a5, a6, a7, a8, a9);
  int8x16_t v18 = sub_224A9A074(v10 | ((((v10 ^ (v10 >> 3)) ^ ((v10 >> 12) ^ (v10 >> 1))) & 0xF) << 16), v11, v12, v13, v14, v15, v16, v9, v17);
  int8x16_t v27 = sub_224A9A074(v19 | ((((v19 ^ (v19 >> 3)) ^ ((v19 >> 12) ^ (v19 >> 1))) & 0xF) << 16), v20, v21, v22, v23, v24, v25, v18, v26);
  unint64_t v29 = v28 >> 3;
  v31.i16[0] = *(_WORD *)(v30 + 2 * ((v29 >> 3) & 0x7FF));
  v31.i16[1] = *(_WORD *)(v30 + 2 * ((v29 >> 4) & 0x7FF));
  v31.i16[2] = *(_WORD *)(v30 + 2 * ((unsigned __int16)v29 >> 5));
  *(int16x4_t *)v33.i8 = vrshl_s16(v31, v32);
  *(int8x8_t *)v33.i8 = vmovn_s16(v33);
  int8x16_t *v34 = vextq_s8(v27, (int8x16_t)v33, 7uLL);
  return v34 + 1;
}

uint64_t sub_224A9B708(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  do
  {
    sub_224A99ED8(result, a2, a3, a4);
    sub_224A99ED8(v4, v5, v6, v7);
    sub_224A99ED8(v8, v9, v10, v11);
    sub_224A99ED8(v12, v13, v14, v15);
    sub_224A99ED8(v16, v17, v18, v19);
    sub_224A99ED8(v20, v21, v22, v23);
    sub_224A99ED8(v24, v25, v26, v27);
    sub_224A99ED8(v28, v29, v30, v31);
    sub_224A99ED8(v32, v33, v34, v35);
    *(__n64 *)v40.i8 = sub_224A99ED8(v36, v37, v38, v39);
    int16x8_t v42 = vrshlq_s16(v40, v41);
    int8x16_t v44 = vmovn_hight_s16(v43, v42);
    a3 = (v45 >> 2) | ((((v45 ^ (v45 >> 3)) ^ ((v45 >> 12) ^ (v45 >> 1))) & 3) << 14);
    v42.i16[0] = *(_WORD *)(a4 + 2 * ((a3 >> 4) & 0x7FF));
    v42.i16[1] = *(_WORD *)(a4 + 2 * ((unsigned __int16)a3 >> 5));
    *(int16x4_t *)v40.i8 = vrshl_s16(*(int16x4_t *)v42.i8, *(int16x4_t *)v41.i8);
    BOOL v47 = __OFSUB__(v46, 1);
    a2 = (v46 - 1);
    int8x16_t *v48 = v49;
    v48[1] = v50;
    v48 += 2;
    int8x16_t *v48 = v51;
    v48[1] = v52;
    v48 += 2;
    *v48++ = v44;
    v48->i16[0] = vmovn_s16(v40).u16[0];
    double result = (uint64_t)v48->i64 + 2;
  }
  while (!(((int)a2 < 0) ^ v47 | (a2 == 0)));
  return result;
}

uint64_t sub_224A9B7F0(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  do
  {
    sub_224A99ED8(result, a2, a3, a4);
    sub_224A99ED8(v4, v5, v6, v7);
    sub_224A99ED8(v8, v9, v10, v11);
    sub_224A99ED8(v12, v13, v14, v15);
    *(__n64 *)v20.i8 = sub_224A99ED8(v16, v17, v18, v19);
    int8x8_t v22 = vmovn_s16(vrshlq_s16(v20, v21));
    a3 = (v23 >> 4) | ((((v23 ^ (v23 >> 3)) ^ ((v23 >> 12) ^ (v23 >> 1))) & 0xF) << 12);
    v20.i16[0] = *(_WORD *)(a4 + 2 * ((a3 >> 2) & 0x7FF));
    v20.i16[1] = *(_WORD *)(a4 + 2 * ((a3 >> 3) & 0x7FF));
    v20.i16[2] = *(_WORD *)(a4 + 2 * ((a3 >> 4) & 0x7FF));
    v20.i16[3] = *(_WORD *)(a4 + 2 * ((unsigned __int16)a3 >> 5));
    *(int16x4_t *)v20.i8 = vrshl_s16(*(int16x4_t *)v20.i8, *(int16x4_t *)v21.i8);
    BOOL v25 = __OFSUB__(v24, 1);
    a2 = (v24 - 1);
    *unsigned int v26 = v27;
    v26[1] = v28;
    v26 += 2;
    *unsigned int v26 = vmovn_hight_s16(v22, v20);
    double result = (uint64_t)v26 + 50;
  }
  while (!(((int)a2 < 0) ^ v25 | (a2 == 0)));
  return result;
}

int16x4_t sub_224A9B8B0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  sub_224A99ED8(a1, a2, a3, a4);
  sub_224A99ED8(v4, v5, v6, v7);
  sub_224A99ED8(v8, v9, v10, v11);
  sub_224A99ED8(v12, v13, v14, v15);
  sub_224A99ED8(v16, v17, v18, v19);
  sub_224A99ED8(v20, v21, v22, v23);
  sub_224A99ED8(v24, v25, v26, v27);
  sub_224A99ED8(v28, v29, v30, v31);
  sub_224A99ED8(v32, v33, v34, v35);
  *(__n64 *)v40.i8 = sub_224A99ED8(v36, v37, v38, v39);
  int16x8_t v42 = vrshlq_s16(v40, v41);
  unint64_t v44 = (v43 >> 2) | ((((v43 ^ (v43 >> 3)) ^ ((v43 >> 12) ^ (v43 >> 1))) & 3) << 14);
  v42.i16[0] = *(_WORD *)(v45 + 2 * ((v44 >> 4) & 0x7FF));
  v42.i16[1] = *(_WORD *)(v45 + 2 * ((unsigned __int16)v44 >> 5));
  return vrshl_s16(*(int16x4_t *)v42.i8, *(int16x4_t *)v41.i8);
}

int16x4_t sub_224A9B980(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  sub_224A99ED8(a1, a2, a3, a4);
  sub_224A99ED8(v4, v5, v6, v7);
  sub_224A99ED8(v8, v9, v10, v11);
  sub_224A99ED8(v12, v13, v14, v15);
  sub_224A99ED8(v16, v17, v18, v19);
  unint64_t v21 = (v20 >> 4) | ((((v20 ^ (v20 >> 3)) ^ ((v20 >> 12) ^ (v20 >> 1))) & 0xF) << 12);
  v23.i16[0] = *(_WORD *)(v22 + 2 * ((v21 >> 2) & 0x7FF));
  v23.i16[1] = *(_WORD *)(v22 + 2 * ((v21 >> 3) & 0x7FF));
  v23.i16[2] = *(_WORD *)(v22 + 2 * ((v21 >> 4) & 0x7FF));
  v23.i16[3] = *(_WORD *)(v22 + 2 * ((unsigned __int16)v21 >> 5));
  return vrshl_s16(v23, v24);
}

void sub_224A9BA50()
{
}

void sub_224A9BA80()
{
}

void sub_224A9BA9C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X16 }
}

uint64_t sub_224A9BAFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_224A9B708(a1, 73, a3, a4);
}

char *sub_224A9BB10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, const char *a5)
{
  vld1q_dup_s8(a5);
  uint64_t v5 = a5 + 1;
  vld1q_dup_s8(v5++);
  vld1q_dup_s8(v5);
  sub_224A9B708(a1, 3, a3, a4);
  do
  {
    sub_224A9A110((int8x8_t)*(_OWORD *)&vextq_s8(v7, v7, 0xFuLL), *(double *)vextq_s8(v7, v8, 1uLL).i64, v6, *(int8x8_t *)v7.i8);
    sub_224A9A214((int8x8_t)*(_OWORD *)&vextq_s8(v9, v10, 0xFuLL), *(double *)vextq_s8(v10, v11, 1uLL).i64, v12, *(int8x8_t *)v10.i8);
    sub_224A9A214((int8x8_t)*(_OWORD *)&vextq_s8(v13, v14, 0xFuLL), *(double *)vextq_s8(v14, v15, 1uLL).i64, v16, *(int8x8_t *)v14.i8);
    sub_224A9A214((int8x8_t)*(_OWORD *)&vextq_s8(v17, v18, 0xFuLL), *(double *)vextq_s8(v18, v19, 1uLL).i64, v20, *(int8x8_t *)v18.i8);
    uint64_t v25 = sub_224A9A2DC((int8x8_t)*(_OWORD *)&vextq_s8(v21, v22, 0xFuLL), *(double *)vextq_s8(v22, v23, 1uLL).i64, v24, *(int8x8_t *)v22.i8);
    double v30 = sub_224A99F84(v29, v25, v26, v27, v28);
    *uint64_t v31 = v32;
    v31[1] = v33;
    v31 += 2;
    *uint64_t v31 = v34;
    v31[1] = v35;
    v31 += 2;
    *v31++ = v36;
    v31->i16[0] = LOWORD(v30);
    double result = &v31->i8[2];
    int8x16_t v7 = v32;
    int8x16_t v8 = v33;
  }
  while (v38 > 1);
  return result;
}

_WORD *sub_224A9BBCC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  sub_224A9B708(a1, 3, a3, a4);
  do
  {
    sub_224A9A7FC();
    sub_224A9A918();
    sub_224A9A918();
    sub_224A9A918();
    uint64_t v4 = sub_224A9A9E4();
    double v9 = sub_224A99F84(v8, v4, v5, v6, v7);
    _WORD *v10 = LOWORD(v9);
    double result = v10 + 1;
  }
  while (v12 > 1);
  return result;
}

uint64_t sub_224A9BC18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t result = sub_224A9B708(a1, 3, a3, a4);
  do
  {
    uint64_t v5 = sub_224A9B0CC(result);
    uint64_t v6 = sub_224A9B1F4(v5);
    uint64_t v7 = sub_224A9B1F4(v6);
    uint64_t v8 = sub_224A9B1F4(v7);
    uint64_t v9 = sub_224A9B2C0(v8);
    double v14 = sub_224A99F84(v13, v9, v10, v11, v12);
    *int8x16_t v15 = LOWORD(v14);
    uint64_t result = (uint64_t)(v15 + 1);
  }
  while (v16 > 1);
  return result;
}

void sub_224A9BC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X16 }
}

uint64_t sub_224A9BD24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, const char *a5)
{
  vld1q_dup_s8(a5);
  uint64_t result = sub_224A9B708(a1, 3, a3, a4);
  uint64_t v9 = 70;
  do
  {
    sub_224A9B8B0(result, v9, v7, v8);
    sub_224A9BA2C();
    sub_224A9BA2C();
    sub_224A9BA2C();
    v5 += 82;
    sub_224A9BA2C();
    sub_224A9BA2C();
    BOOL v11 = __OFSUB__(v10, 1);
    uint64_t v9 = (v10 - 1);
    *uint64_t v12 = v13;
    v12[1] = v14;
    v12 += 2;
    *uint64_t v12 = v15;
    v12[1] = v16;
    v12 += 2;
    *v12++ = v17;
    *(_WORD *)uint64_t v12 = v18;
    uint64_t result = (uint64_t)v12 + 2;
  }
  while (!(((int)v9 < 0) ^ v11 | (v9 == 0)));
  return result;
}

char *sub_224A9BDD0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, const char *a5)
{
  vld1q_dup_s8(a5);
  uint64_t v6 = a5 + 1;
  vld1q_dup_s8(v6++);
  vld1q_dup_s8(v6);
  v6 += 2;
  vld1q_dup_s8(v6);
  sub_224A9B708(a1, 3, a3, a4);
  do
  {
    sub_224A9A3BC((int8x8_t)*(_OWORD *)&vextq_s8(v8, v8, 0xFuLL), *(double *)vextq_s8(v8, v9, 1uLL).i64, v7, *(int8x8_t *)v8.i8);
    sub_224A9A3E8((int8x8_t)*(_OWORD *)&vextq_s8(v10, v11, 0xFuLL), *(double *)vextq_s8(v11, v12, 1uLL).i64, v13, *(int8x8_t *)v11.i8);
    sub_224A9A3E8((int8x8_t)*(_OWORD *)&vextq_s8(v14, v15, 0xFuLL), *(double *)vextq_s8(v15, v16, 1uLL).i64, v17, *(int8x8_t *)v15.i8);
    sub_224A9A3E8((int8x8_t)*(_OWORD *)&vextq_s8(v18, v19, 0xFuLL), *(double *)vextq_s8(v19, v20, 1uLL).i64, v21, *(int8x8_t *)v19.i8);
    *(double *)v26.i64 = sub_224A9A414((int8x8_t)*(_OWORD *)&vextq_s8(v22, v23, 0xFuLL), *(double *)vextq_s8(v23, v24, 1uLL).i64, v25, *(int8x8_t *)v23.i8);
    double v31 = sub_224A99F84(v26, v27, v28, v29, v30);
    v5 += 2;
    *int8x16_t v32 = v33;
    v32[1] = v34;
    v32 += 2;
    *int8x16_t v32 = v35;
    v32[1] = v36;
    v32 += 2;
    *v32++ = v37;
    v32->i16[0] = LOWORD(v31);
    uint64_t result = &v32->i8[2];
    int8x16_t v8 = v33;
    int8x16_t v9 = v34;
  }
  while (v39 > 1);
  return result;
}

_WORD *sub_224A9BE98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  sub_224A9B708(a1, 3, a3, a4);
  do
  {
    sub_224A9AAC8();
    sub_224A9AB08();
    sub_224A9AB08();
    sub_224A9AB08();
    uint64_t v5 = sub_224A9AB38();
    double v10 = sub_224A99F84(v9, (uint64_t)v5, v6, v7, v8);
    v4 += 2;
    *int8x16_t v11 = LOWORD(v10);
    uint64_t result = v11 + 1;
  }
  while (v13 > 1);
  return result;
}

uint64_t sub_224A9BEE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t result = sub_224A9B708(a1, 3, a3, a4);
  do
  {
    uint64_t v6 = sub_224A9B3A4(result);
    unsigned int v7 = sub_224A9B3EC((uint64_t)v6);
    uint64_t v8 = sub_224A9B3EC((uint64_t)v7);
    int16x8_t v9 = sub_224A9B3EC((uint64_t)v8);
    double v10 = sub_224A9B41C((uint64_t)v9);
    double v15 = sub_224A99F84(v14, (uint64_t)v10, v11, v12, v13);
    v4 += 2;
    _WORD *v16 = LOWORD(v15);
    uint64_t result = (uint64_t)(v16 + 1);
  }
  while (v17 > 1);
  return result;
}

void sub_224A9BF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X16 }
}

uint64_t sub_224A9BFF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, const char *a5)
{
  vld1q_dup_s8(a5);
  uint64_t result = sub_224A9B7F0(a1, 3, a3, a4);
  uint64_t v9 = 35;
  do
  {
    sub_224A9B980(result, v9, v7, v8);
    sub_224A9BA50();
    sub_224A9BA50();
    sub_224A9BA50();
    BOOL v11 = __OFSUB__(v10, 1);
    uint64_t v9 = (v10 - 1);
    v5 += 68;
    *unsigned int v12 = v13;
    v12[1] = v14;
    v12 += 2;
    *unsigned int v12 = v15;
    uint64_t result = (uint64_t)v12 + 50;
  }
  while (!(((int)v9 < 0) ^ v11 | (v9 == 0)));
  return result;
}

char *sub_224A9C07C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, const char *a5)
{
  vld1q_dup_s8(a5);
  uint64_t v6 = a5 + 1;
  vld1q_dup_s8(v6++);
  vld1q_dup_s8(v6);
  v6 += 2;
  vld1q_dup_s8(v6);
  sub_224A9B7F0(a1, 3, a3, a4);
  do
  {
    sub_224A9A4F4((int8x8_t)*(_OWORD *)&vextq_s8(v8, v8, 0xFuLL), *(double *)vextq_s8(v8, v9, 1uLL).i64, v7, *(int8x8_t *)v8.i8);
    sub_224A9A548((int8x8_t)*(_OWORD *)&vextq_s8(v10, v11, 0xFuLL), *(double *)vextq_s8(v11, v12, 1uLL).i64, v13, *(int8x8_t *)v11.i8);
    int v17 = (_OWORD *)sub_224A9A59C((int8x8_t)*(_OWORD *)&vextq_s8(v14, v15, 0xFuLL), *(double *)vextq_s8(v15, v15, 1uLL).i64, v16, *(int8x8_t *)v15.i8);
    v5 += 68;
    *int v17 = v18;
    v17[1] = v19;
    v17 += 2;
    *int v17 = v20;
    uint64_t result = (char *)v17 + 50;
    int8x16_t v8 = v18;
    int8x16_t v9 = v19;
  }
  while (v22 > 1);
  return result;
}

uint64_t sub_224A9C108(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  sub_224A9B7F0(a1, 3, a3, a4);
  do
  {
    sub_224A9AC38();
    sub_224A9ACA0();
    v4 += 68;
    uint64_t result = sub_224A9ACF8() + 34;
  }
  while (v6 > 1);
  return result;
}

uint64_t sub_224A9C148(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t result = sub_224A9B7F0(a1, 3, a3, a4);
  do
  {
    int v6 = sub_224A9B524(result);
    double v7 = sub_224A9B594((uint64_t)v6);
    v4 += 68;
    uint64_t result = sub_224A9B5EC((uint64_t)v7) + 34;
  }
  while (v8 > 1);
  return result;
}

void sub_224A9C1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X16 }
}

uint64_t sub_224A9C24C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, const char *a5)
{
  vld1q_dup_s8(a5);
  uint64_t result = sub_224A9B7F0(a1, 3, a3, a4);
  uint64_t v9 = 70;
  do
  {
    sub_224A9B980(result, v9, v7, v8);
    sub_224A9BA80();
    sub_224A9BA80();
    sub_224A9BA80();
    BOOL v11 = __OFSUB__(v10, 1);
    uint64_t v9 = (v10 - 1);
    v5 -= 14;
    *int8x16_t v12 = v13;
    v12[1] = v14;
    v12 += 2;
    *int8x16_t v12 = v15;
    uint64_t result = (uint64_t)v12 + 50;
  }
  while (!(((int)v9 < 0) ^ v11 | (v9 == 0)));
  return result;
}

char *sub_224A9C2CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, const char *a5)
{
  vld1q_dup_s8(a5);
  int v6 = a5 + 1;
  vld1q_dup_s8(v6++);
  vld1q_dup_s8(v6);
  v6 += 2;
  vld1q_dup_s8(v6);
  sub_224A9B7F0(a1, 3, a3, a4);
  do
  {
    sub_224A9A440((int8x8_t)*(_OWORD *)&vextq_s8(v8, v8, 0xFuLL), *(double *)vextq_s8(v8, v9, 1uLL).i64, v7, *(int8x8_t *)v8.i8);
    sub_224A9A47C((int8x8_t)*(_OWORD *)&vextq_s8(v10, v11, 0xFuLL), *(double *)vextq_s8(v11, v12, 1uLL).i64, v13, *(int8x8_t *)v11.i8);
    *(double *)v17.i64 = sub_224A9A4B8((int8x8_t)*(_OWORD *)&vextq_s8(v14, v15, 0xFuLL), *(double *)vextq_s8(v15, v15, 1uLL).i64, v16, *(int8x8_t *)v15.i8);
    v5 -= 14;
    *int8x16_t v18 = v19;
    v18[1] = v20;
    v18 += 2;
    *int8x16_t v18 = v17;
    uint64_t result = &v18[3].i8[2];
    int8x16_t v8 = v19;
    int8x16_t v9 = v20;
  }
  while (v22 > 1);
  return result;
}

__int8 *sub_224A9C358(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  sub_224A9B7F0(a1, 3, a3, a4);
  do
  {
    sub_224A9AB68();
    sub_224A9ABB8();
    v4 -= 14;
    uint64_t result = &sub_224A9ABF8()[2].i8[2];
  }
  while (v6 > 1);
  return result;
}

__int8 *sub_224A9C398(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t result = (__int8 *)sub_224A9B7F0(a1, 3, a3, a4);
  do
  {
    int v6 = sub_224A9B44C((uint64_t)result);
    double v7 = sub_224A9B4A4((uint64_t)v6);
    v4 -= 14;
    uint64_t result = &sub_224A9B4E4((uint64_t)v7)[2].i8[2];
  }
  while (v8 > 1);
  return result;
}

void sub_224A9C65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  __asm { BR              X11 }
}

__int8 *sub_224A9C750()
{
  do
  {
    sub_224A9C410();
    uint8x16_t *v9 = vminq_u8(vmaxq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_s8(*(int8x8_t *)v0.i8), (int16x8_t)vmovl_u8(*(uint8x8_t *)v2.i8)), v4), *(uint8x8_t *)v5.i8)), (int16x8_t)vaddw_high_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_high_s8(v0), (int16x8_t)vmovl_high_u8(v2)), v4), v5)), v7), v8);
    v9[1] = vminq_u8(vmaxq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_s8(*(int8x8_t *)v1.i8), (int16x8_t)vmovl_u8(*(uint8x8_t *)v3.i8)), v4), *(uint8x8_t *)v6.i8)), (int16x8_t)vaddw_high_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_high_s8(v1), (int16x8_t)vmovl_high_u8(v3)), v4), v6)), v7), v8);
    uint64_t result = &v9->i8[v10];
  }
  while (v12 > 1);
  return result;
}

__int8 *sub_224A9C7E4()
{
  do
  {
    sub_224A9C410();
    int8x16_t v7 = vqrshrn_high_n_s16(vqrshrn_n_s16(vmlal_s8(vmull_s8(*(int8x8_t *)v2.i8, *(int8x8_t *)v1.i8), *(int8x8_t *)v5.i8, *(int8x8_t *)v4.i8), 5uLL), vmlal_high_s8(vmull_high_s8(v2, v1), v5, v4), 5uLL);
    int8x16_t v8 = vqrshrn_high_n_s16(vqrshrn_n_s16(vmlal_s8(vmull_s8(*(int8x8_t *)v3.i8, *(int8x8_t *)v1.i8), *(int8x8_t *)v6.i8, *(int8x8_t *)v4.i8), 5uLL), vmlal_high_s8(vmull_high_s8(v3, v1), v6, v4), 5uLL);
    uint8x16_t *v16 = vminq_u8(vmaxq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_s8(*(int8x8_t *)v7.i8), (int16x8_t)vmovl_u8(*(uint8x8_t *)v9.i8)), v11), *(uint8x8_t *)v12.i8)), (int16x8_t)vaddw_high_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_high_s8(v7), (int16x8_t)vmovl_high_u8(v9)), v11), v12)), v14), v15);
    v16[1] = vminq_u8(vmaxq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_s8(*(int8x8_t *)v8.i8), (int16x8_t)vmovl_u8(*(uint8x8_t *)v10.i8)), v11), *(uint8x8_t *)v13.i8)), (int16x8_t)vaddw_high_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_high_s8(v8), (int16x8_t)vmovl_high_u8(v10)), v11), v13)), v14), v15);
    uint64_t result = &v16->i8[v17];
  }
  while (v19 > 1);
  if (v0 > 2) {
    return sub_224A9C750();
  }
  return result;
}

__int8 *sub_224A9C8C0()
{
  do
  {
    sub_224A9C410();
    *uint8x16_t v12 = vminq_u8(vmaxq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_s8(vqrshrn_n_s16(vmlal_s8(vmull_s8(v0, v1), *(int8x8_t *)v2.i8, v3), 5uLL)), (int16x8_t)vmovl_u8(*(uint8x8_t *)v5.i8)), v7), *(uint8x8_t *)v8.i8)), (int16x8_t)vaddw_high_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_high_s8(v2), (int16x8_t)vmovl_high_u8(v5)), v7),
                                          v8)),
               v10),
             v11);
    v12[1] = vminq_u8(vmaxq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_s8(*(int8x8_t *)v4.i8), (int16x8_t)vmovl_u8(*(uint8x8_t *)v6.i8)), v7), *(uint8x8_t *)v9.i8)), (int16x8_t)vaddw_high_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_high_s8(v4), (int16x8_t)vmovl_high_u8(v6)), v7), v9)), v10), v11);
    uint64_t result = &v12->i8[v13];
  }
  while (v15 > 1);
  return result;
}

__int8 *sub_224A9C964()
{
  do
  {
    sub_224A9C410();
    int8x16_t v11 = vqrshrn_high_n_s16(vqrshrn_n_s16(vmlal_s8(vmull_s8(vqrshrn_n_s16(vmlal_s8(vmull_s8(v1, v2), *(int8x8_t *)v3.i8, v4), 5uLL), *(int8x8_t *)v7.i8), vqrshrn_n_s16(vmlal_s8(vmull_s8(v5, v2), *(int8x8_t *)v6.i8, v4), 5uLL), *(int8x8_t *)v9.i8), 5uLL), vmlal_high_s8(vmull_high_s8(v3, v7), v6, v9), 5uLL);
    int8x16_t v12 = vqrshrn_high_n_s16(vqrshrn_n_s16(vmlal_s8(vmull_s8(*(int8x8_t *)v8.i8, *(int8x8_t *)v7.i8), *(int8x8_t *)v10.i8, *(int8x8_t *)v9.i8), 5uLL), vmlal_high_s8(vmull_high_s8(v8, v7), v10, v9), 5uLL);
    *int8x16_t v20 = vminq_u8(vmaxq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_s8(*(int8x8_t *)v11.i8), (int16x8_t)vmovl_u8(*(uint8x8_t *)v13.i8)), v15), *(uint8x8_t *)v16.i8)), (int16x8_t)vaddw_high_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_high_s8(v11), (int16x8_t)vmovl_high_u8(v13)), v15), v16)), v18), v19);
    v20[1] = vminq_u8(vmaxq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_s8(*(int8x8_t *)v12.i8), (int16x8_t)vmovl_u8(*(uint8x8_t *)v14.i8)), v15), *(uint8x8_t *)v17.i8)), (int16x8_t)vaddw_high_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_high_s8(v12), (int16x8_t)vmovl_high_u8(v14)), v15), v17)), v18), v19);
    uint64_t result = &v20->i8[v21];
  }
  while (v23 > 1);
  if (v0 > 2) {
    return sub_224A9C8C0();
  }
  return result;
}

void sub_224A9CA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  uint8x16_t v13 = (const __int16 *)(a5 + 4 * a11 + 204);
  vld1q_dup_s16(v13);
  __asm { BR              X13 }
}

void sub_224A9CB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  uint8x16_t v13 = (const __int16 *)(a5 + 4 * a11 + 204);
  vld1q_dup_s16(v13);
  __asm { BR              X13 }
}

void sub_224A9CC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  uint8x16_t v13 = (const __int16 *)(a5 + 4 * a11 + 204);
  vld1q_dup_s16(v13);
  __asm { BR              X13 }
}

__int8 *sub_224A9CDB4()
{
  do
  {
    sub_224A9C410();
    uint8x16_t *v9 = vminq_u8(vmaxq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_s8(*(int8x8_t *)v0.i8), (int16x8_t)vmovl_u8(*(uint8x8_t *)v2.i8)), v4), *(uint8x8_t *)v5.i8)), (int16x8_t)vaddw_high_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_high_s8(v0), (int16x8_t)vmovl_high_u8(v2)), v4), v5)), v7), v8);
    v9[1] = vminq_u8(vmaxq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_s8(*(int8x8_t *)v1.i8), (int16x8_t)vmovl_u8(*(uint8x8_t *)v3.i8)), v4), *(uint8x8_t *)v6.i8)), (int16x8_t)vaddw_high_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_high_s8(v1), (int16x8_t)vmovl_high_u8(v3)), v4), v6)), v7), v8);
    uint64_t result = &v9->i8[v10];
  }
  while (v12 > 1);
  return result;
}

__int8 *sub_224A9D5D4()
{
  do
  {
    sub_224A9C594();
    uint8x16_t *v6 = vminq_u8(vmaxq_u8((uint8x16_t)vqmovun_high_s16(vqmovun_s16((int16x8_t)vaddw_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_s8(*(int8x8_t *)v0.i8), (int16x8_t)vmovl_u8(*(uint8x8_t *)v1.i8)), v2), *(uint8x8_t *)v3.i8)), (int16x8_t)vaddw_high_u8((uint16x8_t)vrshlq_s16(vmulq_s16(vmovl_high_s8(v0), (int16x8_t)vmovl_high_u8(v1)), v2), v3)), v4), v5);
    uint64_t result = &v6->i8[v7];
  }
  while (v9 > 1);
  return result;
}

void sub_224A9DB44(uint64_t a1, uint64_t a2, uint64_t a3, __int16 *a4, uint8x8_t *a5, uint8x8_t *a6, int a7, int a8, __n128 a9, __n128 a10, __n128 a11, uint8x8_t a12)
{
  if (a8 == 15)
  {
    sub_224A9E184(a1, (uint64_t *)a2, a3, a4, (uint64_t)a5, (uint64_t)a6, a7);
  }
  else
  {
    v12.n128_u64[0] = 0x8000800080008000;
    v12.n128_u64[1] = 0x8000800080008000;
    uint64_t v13 = a1 - 68;
    if ((a8 & 4) != 0)
    {
      uint8x16_t v16 = (uint8x8_t *)((char *)a5 + a3);
      if (a8)
      {
        uint8x16_t v17 = (uint8x8_t *)((char *)a5 - 2);
        uint8x16_t v18 = (uint8x8_t *)((char *)v16 - 2);
        if ((a8 & 2) != 0)
        {
          a10.n128_u32[0] = v17[1].u32[0];
          a12.i32[0] = v18[1].i32[0];
          a9 = (__n128)vmovl_u8(*v17);
          a10.n128_u64[0] = vmovl_u8((uint8x8_t)a10.n128_u64[0]).u64[0];
          a11 = (__n128)vmovl_u8(*v18);
          a12 = (uint8x8_t)vmovl_u8(a12).u64[0];
          *(__n128 *)uint64_t v13 = a9;
          *(void *)(v13 + 16) = a10.n128_u64[0];
          uint8x16_t v19 = (__n128 *)(v13 + 32);
          *uint8x16_t v19 = a11;
          v19[1].n128_f64[0] = *(double *)&a12;
        }
        else
        {
          a10.n128_u16[0] = v17[1].u16[0];
          a12.i16[0] = v18[1].i16[0];
          a9 = (__n128)vmovl_u8(*v17);
          a10.n128_u64[0] = vmovl_u8((uint8x8_t)a10.n128_u64[0]).u64[0];
          a11 = (__n128)vmovl_u8(*v18);
          a12 = (uint8x8_t)vmovl_u8(a12).u64[0];
          *(__n128 *)uint64_t v13 = a9;
          *(_DWORD *)(v13 + 16) = a10.n128_u32[0];
          *(_DWORD *)(v13 + 20) = -2147450880;
          uint8x16_t v19 = (__n128 *)(v13 + 32);
          *uint8x16_t v19 = a11;
          v19[1].n128_u32[0] = a12.i32[0];
          v19[1].n128_u32[1] = -2147450880;
        }
        int16x8_t v15 = v19 + 2;
      }
      else
      {
        if ((a8 & 2) != 0)
        {
          a10.n128_u16[0] = a5[1].u16[0];
          a12.i16[0] = v16[1].i16[0];
          a9 = (__n128)vmovl_u8(*a5);
          a10.n128_u64[0] = vmovl_u8((uint8x8_t)a10.n128_u64[0]).u64[0];
          a11 = (__n128)vmovl_u8(*v16);
          a12 = (uint8x8_t)vmovl_u8(a12).u64[0];
          *(_DWORD *)uint64_t v13 = -2147450880;
          *(__n128 *)(v13 + 4) = a9;
          *(_DWORD *)(v13 + 20) = a10.n128_u32[0];
          uint64_t v20 = v13 + 32;
          *(_DWORD *)uint64_t v20 = -2147450880;
          *(__n128 *)(v20 + 4) = a11;
          *(_DWORD *)(v20 + 20) = a12.i32[0];
        }
        else
        {
          a9 = (__n128)vmovl_u8(*a5);
          a10 = (__n128)vmovl_u8(*v16);
          *(_DWORD *)uint64_t v13 = -2147450880;
          *(__n128 *)(v13 + 4) = a9;
          *(_DWORD *)(v13 + 20) = -2147450880;
          uint64_t v20 = v13 + 32;
          *(_DWORD *)uint64_t v20 = -2147450880;
          *(__n128 *)(v20 + 4) = a10;
          *(_DWORD *)(v20 + 20) = -2147450880;
        }
        int16x8_t v15 = (__n128 *)(v20 + 32);
      }
    }
    else
    {
      *(__n128 *)uint64_t v13 = v12;
      *(__n128 *)(v13 + 16) = v12;
      uint8x16_t v14 = (__n128 *)(v13 + 32);
      *uint8x16_t v14 = v12;
      v14[1] = v12;
      int16x8_t v15 = v14 + 2;
    }
    if (a8)
    {
      if ((a8 & 2) != 0)
      {
        do
        {
          a9.n128_u16[0] = *a4++;
          a11.n128_u16[0] = *(_WORD *)(a2 + 8);
          uint8x8_t v21 = *(uint8x8_t *)a2;
          a2 += a3;
          BOOL v22 = __OFSUB__(a7--, 1);
          a9.n128_u64[0] = vmovl_u8((uint8x8_t)a9.n128_u64[0]).u64[0];
          a10 = (__n128)vmovl_u8(v21);
          a11.n128_u64[0] = vmovl_u8((uint8x8_t)a11.n128_u64[0]).u64[0];
          v15->n128_u32[0] = a9.n128_u32[0];
          *(__n128 *)((char *)v15 + 4) = a10;
          v15[1].n128_u32[1] = a11.n128_u32[0];
          v15 += 2;
        }
        while (!((a7 < 0) ^ v22 | (a7 == 0)));
      }
      else
      {
        do
        {
          a9.n128_u16[0] = *a4++;
          uint8x8_t v23 = *(uint8x8_t *)a2;
          a2 += a3;
          BOOL v22 = __OFSUB__(a7--, 1);
          a9.n128_u64[0] = vmovl_u8((uint8x8_t)a9.n128_u64[0]).u64[0];
          a10 = (__n128)vmovl_u8(v23);
          v15->n128_u32[0] = a9.n128_u32[0];
          *(__n128 *)((char *)v15 + 4) = a10;
          v15[1].n128_u32[1] = -2147450880;
          v15 += 2;
        }
        while (!((a7 < 0) ^ v22 | (a7 == 0)));
      }
    }
    else if ((a8 & 2) != 0)
    {
      do
      {
        a10.n128_u16[0] = *(_WORD *)(a2 + 8);
        uint8x8_t v24 = *(uint8x8_t *)a2;
        a2 += a3;
        BOOL v22 = __OFSUB__(a7--, 1);
        a10.n128_u64[0] = vmovl_u8((uint8x8_t)a10.n128_u64[0]).u64[0];
        v15->n128_u32[0] = -2147450880;
        *(uint16x8_t *)((char *)v15 + 4) = vmovl_u8(v24);
        v15[1].n128_u32[1] = a10.n128_u32[0];
        v15 += 2;
      }
      while (!((a7 < 0) ^ v22 | (a7 == 0)));
    }
    else
    {
      do
      {
        uint8x8_t v25 = *(uint8x8_t *)a2;
        a2 += a3;
        BOOL v22 = __OFSUB__(a7--, 1);
        v15->n128_u32[0] = -2147450880;
        *(uint16x8_t *)((char *)v15 + 4) = vmovl_u8(v25);
        v15[1].n128_u32[1] = -2147450880;
        v15 += 2;
      }
      while (!((a7 < 0) ^ v22 | (a7 == 0)));
    }
    if ((a8 & 8) != 0)
    {
      uint64_t v27 = (uint8x8_t *)((char *)a6 + a3);
      if (a8)
      {
        uint64_t v28 = (uint8x8_t *)((char *)a6 - 2);
        unsigned int v29 = (uint8x8_t *)((char *)v27 - 2);
        if ((a8 & 2) != 0)
        {
          a10.n128_u32[0] = v28[1].u32[0];
          a12.i32[0] = v29[1].i32[0];
          uint16x8_t v30 = vmovl_u8(*v29);
          *(uint16x8_t *)int16x8_t v15 = vmovl_u8(*v28);
          v15[1].n128_u64[0] = vmovl_u8((uint8x8_t)a10.n128_u64[0]).u64[0];
          double v31 = (uint16x8_t *)&v15[2];
          *double v31 = v30;
          v31[1].i64[0] = vmovl_u8(a12).u64[0];
        }
        else
        {
          a10.n128_u16[0] = v28[1].u16[0];
          a12.i16[0] = v29[1].i16[0];
          uint16x8_t v32 = vmovl_u8(*v29);
          *(uint16x8_t *)int16x8_t v15 = vmovl_u8(*v28);
          v15[1].n128_u32[0] = vmovl_u8((uint8x8_t)a10.n128_u64[0]).u32[0];
          v15[1].n128_u32[1] = -2147450880;
          int8x16_t v33 = (uint16x8_t *)&v15[2];
          *int8x16_t v33 = v32;
          v33[1].i32[0] = vmovl_u8(a12).u32[0];
          v33[1].i32[1] = -2147450880;
        }
      }
      else if ((a8 & 2) != 0)
      {
        a10.n128_u16[0] = a6[1].u16[0];
        a12.i16[0] = v27[1].i16[0];
        uint16x8_t v34 = vmovl_u8(*a6);
        uint16x8_t v35 = vmovl_u8(*v27);
        v15->n128_u32[0] = -2147450880;
        *(uint16x8_t *)((char *)v15 + 4) = v34;
        v15[1].n128_u32[1] = vmovl_u8((uint8x8_t)a10.n128_u64[0]).u32[0];
        int8x16_t v36 = v15 + 2;
        v36->n128_u32[0] = -2147450880;
        *(uint16x8_t *)((char *)v36 + 4) = v35;
        v36[1].n128_u32[1] = vmovl_u8(a12).u32[0];
      }
      else
      {
        uint16x8_t v37 = vmovl_u8(*a6);
        uint16x8_t v38 = vmovl_u8(*v27);
        v15->n128_u32[0] = -2147450880;
        *(uint16x8_t *)((char *)v15 + 4) = v37;
        v15[1].n128_u32[1] = -2147450880;
        int v39 = v15 + 2;
        v39->n128_u32[0] = -2147450880;
        *(uint16x8_t *)((char *)v39 + 4) = v38;
        v39[1].n128_u32[1] = -2147450880;
      }
    }
    else
    {
      *int16x8_t v15 = v12;
      v15[1] = v12;
      int16x8_t v26 = v15 + 2;
      *int16x8_t v26 = v12;
      v26[1] = v12;
    }
  }
}

void *sub_224A9DE68(uint64_t a1, uint64_t a2, uint64_t a3, __int16 *a4, uint64_t a5, uint64_t a6, int a7, int a8, double a9, double a10, uint8x8_t a11, uint8x8_t a12)
{
  if (a8 == 15) {
    return sub_224A9E204(a1, (int *)a2, a3, a4, a5, a6, a7);
  }
  *(void *)&long long v13 = 0x8000800080008000;
  *((void *)&v13 + 1) = 0x8000800080008000;
  uint64_t v14 = a1 - 36;
  if ((a8 & 4) != 0)
  {
    uint64_t v16 = a5 + a3;
    if (a8)
    {
      uint8x16_t v17 = (_DWORD *)(a5 - 2);
      uint8x16_t v18 = (_DWORD *)(v16 - 2);
      LODWORD(a9) = *v17;
      if ((a8 & 2) != 0)
      {
        LODWORD(a10) = v17[1];
        a11.i32[0] = *v18;
        a12.i32[0] = v18[1];
        *(void *)&a9 = vmovl_u8(*(uint8x8_t *)&a9).u64[0];
        *(void *)&a10 = vmovl_u8(*(uint8x8_t *)&a10).u64[0];
        a11 = (uint8x8_t)vmovl_u8(a11).u64[0];
        a12 = (uint8x8_t)vmovl_u8(a12).u64[0];
        *(double *)uint64_t v14 = a9;
        *(double *)(v14 + 8) = a10;
        uint64_t v19 = v14 + 16;
        *(double *)uint64_t v19 = *(double *)&a11;
        *(double *)(v19 + 8) = *(double *)&a12;
      }
      else
      {
        LOWORD(a10) = *((_WORD *)v17 + 2);
        a11.i32[0] = *v18;
        a12.i16[0] = *((_WORD *)v18 + 2);
        *(void *)&a9 = vmovl_u8(*(uint8x8_t *)&a9).u64[0];
        *(void *)&a10 = vmovl_u8(*(uint8x8_t *)&a10).u64[0];
        a11 = (uint8x8_t)vmovl_u8(a11).u64[0];
        a12 = (uint8x8_t)vmovl_u8(a12).u64[0];
        *(double *)uint64_t v14 = a9;
        *(_DWORD *)(v14 + 8) = LODWORD(a10);
        *(_DWORD *)(v14 + 12) = -2147450880;
        uint64_t v19 = v14 + 16;
        *(double *)uint64_t v19 = *(double *)&a11;
        *(_DWORD *)(v19 + 8) = a12.i32[0];
        *(_DWORD *)(v19 + 12) = -2147450880;
      }
      uint64_t v15 = v19 + 16;
    }
    else
    {
      LODWORD(a9) = *(_DWORD *)a5;
      if ((a8 & 2) != 0)
      {
        LOWORD(a10) = *(_WORD *)(a5 + 4);
        a11.i32[0] = *(_DWORD *)v16;
        a12.i16[0] = *(_WORD *)(v16 + 4);
        *(void *)&a9 = vmovl_u8(*(uint8x8_t *)&a9).u64[0];
        *(void *)&a10 = vmovl_u8(*(uint8x8_t *)&a10).u64[0];
        a11 = (uint8x8_t)vmovl_u8(a11).u64[0];
        a12 = (uint8x8_t)vmovl_u8(a12).u64[0];
        *(_DWORD *)uint64_t v14 = -2147450880;
        *(double *)(v14 + 4) = a9;
        *(_DWORD *)(v14 + 12) = LODWORD(a10);
        uint64_t v20 = v14 + 16;
        *(_DWORD *)uint64_t v20 = -2147450880;
        *(double *)(v20 + 4) = *(double *)&a11;
        *(_DWORD *)(v20 + 12) = a12.i32[0];
      }
      else
      {
        LODWORD(a10) = *(_DWORD *)v16;
        *(void *)&a9 = vmovl_u8(*(uint8x8_t *)&a9).u64[0];
        *(void *)&a10 = vmovl_u8(*(uint8x8_t *)&a10).u64[0];
        *(_DWORD *)uint64_t v14 = -2147450880;
        *(double *)(v14 + 4) = a9;
        *(_DWORD *)(v14 + 12) = -2147450880;
        uint64_t v20 = v14 + 16;
        *(_DWORD *)uint64_t v20 = -2147450880;
        *(double *)(v20 + 4) = a10;
        *(_DWORD *)(v20 + 12) = -2147450880;
      }
      uint64_t v15 = v20 + 16;
    }
  }
  else
  {
    *(_OWORD *)uint64_t v14 = v13;
    *(_OWORD *)(v14 + 16) = v13;
    uint64_t v15 = v14 + 32;
  }
  if (a8)
  {
    if ((a8 & 2) != 0)
    {
      do
      {
        LOWORD(a9) = *a4++;
        a11.i16[0] = *(_WORD *)(a2 + 4);
        LODWORD(a10) = *(_DWORD *)a2;
        a2 += a3;
        BOOL v21 = __OFSUB__(a7--, 1);
        *(void *)&a9 = vmovl_u8(*(uint8x8_t *)&a9).u64[0];
        *(void *)&a10 = vmovl_u8(*(uint8x8_t *)&a10).u64[0];
        a11 = (uint8x8_t)vmovl_u8(a11).u64[0];
        *(_DWORD *)uint64_t v15 = LODWORD(a9);
        *(double *)(v15 + 4) = a10;
        *(_DWORD *)(v15 + 12) = a11.i32[0];
        v15 += 16;
      }
      while (!((a7 < 0) ^ v21 | (a7 == 0)));
    }
    else
    {
      do
      {
        LOWORD(a9) = *a4++;
        LODWORD(a10) = *(_DWORD *)a2;
        a2 += a3;
        BOOL v21 = __OFSUB__(a7--, 1);
        *(void *)&a9 = vmovl_u8(*(uint8x8_t *)&a9).u64[0];
        *(void *)&a10 = vmovl_u8(*(uint8x8_t *)&a10).u64[0];
        *(_DWORD *)uint64_t v15 = LODWORD(a9);
        *(double *)(v15 + 4) = a10;
        *(_DWORD *)(v15 + 12) = -2147450880;
        v15 += 16;
      }
      while (!((a7 < 0) ^ v21 | (a7 == 0)));
    }
  }
  else if ((a8 & 2) != 0)
  {
    do
    {
      LOWORD(a10) = *(_WORD *)(a2 + 4);
      LODWORD(a9) = *(_DWORD *)a2;
      a2 += a3;
      BOOL v21 = __OFSUB__(a7--, 1);
      *(void *)&a9 = vmovl_u8(*(uint8x8_t *)&a9).u64[0];
      *(void *)&a10 = vmovl_u8(*(uint8x8_t *)&a10).u64[0];
      *(_DWORD *)uint64_t v15 = -2147450880;
      *(double *)(v15 + 4) = a9;
      *(_DWORD *)(v15 + 12) = LODWORD(a10);
      v15 += 16;
    }
    while (!((a7 < 0) ^ v21 | (a7 == 0)));
  }
  else
  {
    do
    {
      LODWORD(a9) = *(_DWORD *)a2;
      a2 += a3;
      BOOL v21 = __OFSUB__(a7--, 1);
      *(void *)&a9 = vmovl_u8(*(uint8x8_t *)&a9).u64[0];
      *(_DWORD *)uint64_t v15 = -2147450880;
      *(double *)(v15 + 4) = a9;
      *(_DWORD *)(v15 + 12) = -2147450880;
      v15 += 16;
    }
    while (!((a7 < 0) ^ v21 | (a7 == 0)));
  }
  if ((a8 & 8) != 0)
  {
    uint64_t v22 = a6 + a3;
    if (a8)
    {
      uint8x8_t v23 = (_DWORD *)(a6 - 2);
      uint8x8_t v24 = (_DWORD *)(v22 - 2);
      LODWORD(a9) = *v23;
      if ((a8 & 2) != 0)
      {
        LODWORD(a10) = v23[1];
        a11.i32[0] = *v24;
        a12.i32[0] = v24[1];
        *(void *)uint64_t v15 = vmovl_u8(*(uint8x8_t *)&a9).u64[0];
        *(void *)(v15 + 8) = vmovl_u8(*(uint8x8_t *)&a10).u64[0];
        uint64_t result = (void *)(v15 + 16);
        *uint64_t result = vmovl_u8(a11).u64[0];
        result[1] = vmovl_u8(a12).u64[0];
      }
      else
      {
        LOWORD(a10) = *((_WORD *)v23 + 2);
        a11.i32[0] = *v24;
        a12.i16[0] = *((_WORD *)v24 + 2);
        *(void *)uint64_t v15 = vmovl_u8(*(uint8x8_t *)&a9).u64[0];
        *(_DWORD *)(v15 + 8) = vmovl_u8(*(uint8x8_t *)&a10).u32[0];
        *(_DWORD *)(v15 + 12) = -2147450880;
        uint64_t result = (void *)(v15 + 16);
        *uint64_t result = vmovl_u8(a11).u64[0];
        *((_DWORD *)result + 2) = vmovl_u8(a12).u32[0];
        *((_DWORD *)result + 3) = -2147450880;
      }
    }
    else
    {
      LODWORD(a9) = *(_DWORD *)a6;
      if ((a8 & 2) != 0)
      {
        LOWORD(a10) = *(_WORD *)(a6 + 4);
        a11.i32[0] = *(_DWORD *)v22;
        a12.i16[0] = *(_WORD *)(v22 + 4);
        *(_DWORD *)uint64_t v15 = -2147450880;
        *(void *)(v15 + 4) = vmovl_u8(*(uint8x8_t *)&a9).u64[0];
        *(_DWORD *)(v15 + 12) = vmovl_u8(*(uint8x8_t *)&a10).u32[0];
        uint64_t result = (void *)(v15 + 16);
        *(_DWORD *)uint64_t result = -2147450880;
        *(void *)((char *)result + 4) = vmovl_u8(a11).u64[0];
        *((_DWORD *)result + 3) = vmovl_u8(a12).u32[0];
      }
      else
      {
        LODWORD(a10) = *(_DWORD *)v22;
        *(_DWORD *)uint64_t v15 = -2147450880;
        *(void *)(v15 + 4) = vmovl_u8(*(uint8x8_t *)&a9).u64[0];
        *(_DWORD *)(v15 + 12) = -2147450880;
        uint64_t result = (void *)(v15 + 16);
        *(_DWORD *)uint64_t result = -2147450880;
        *(void *)((char *)result + 4) = vmovl_u8(*(uint8x8_t *)&a10).u64[0];
        *((_DWORD *)result + 3) = -2147450880;
      }
    }
  }
  else
  {
    *(_OWORD *)uint64_t v15 = v13;
    *(_OWORD *)(v15 + 16) = v13;
    return (void *)(v15 + 32);
  }
  return result;
}

double sub_224A9E184(uint64_t a1, uint64_t *a2, uint64_t a3, __int16 *a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7 = a5 - 2;
  uint64_t v8 = a6 - 2;
  uint64_t v9 = a1 - 34;
  int v10 = *(_DWORD *)(v7 + 8);
  uint64_t v11 = *(void *)(v7 + a3);
  int v12 = *(_DWORD *)(v7 + a3 + 8);
  *(void *)uint64_t v9 = *(void *)v7;
  *(_DWORD *)(v9 + 8) = v10;
  *(void *)(v9 + 16) = v11;
  *(_DWORD *)(v9 + 24) = v12;
  uint64_t v13 = v9 + 32;
  do
  {
    __int16 v14 = *a4++;
    __int16 v15 = *((_WORD *)a2 + 4);
    uint64_t v16 = *a2;
    a2 = (uint64_t *)((char *)a2 + a3);
    BOOL v17 = __OFSUB__(a7--, 1);
    *(_WORD *)uint64_t v13 = v14;
    *(void *)(v13 + 2) = v16;
    *(_WORD *)(v13 + 10) = v15;
    v13 += 16;
  }
  while (!((a7 < 0) ^ v17 | (a7 == 0)));
  double result = *(double *)v8;
  int v19 = *(_DWORD *)(v8 + 8);
  uint64_t v20 = *(void *)(v8 + a3);
  int v21 = *(_DWORD *)(v8 + a3 + 8);
  *(void *)uint64_t v13 = *(void *)v8;
  *(_DWORD *)(v13 + 8) = v19;
  *(void *)(v13 + 16) = v20;
  *(_DWORD *)(v13 + 24) = v21;
  return result;
}

void *sub_224A9E204(uint64_t a1, int *a2, uint64_t a3, __int16 *a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7 = (void *)(a5 - 2);
  uint64_t v8 = (void *)(a6 - 2);
  uint64_t v9 = (void *)(a1 - 18);
  uint64_t v10 = *(void *)((char *)v7 + a3);
  void *v9 = *v7;
  v9[1] = v10;
  uint64_t v11 = v9 + 2;
  do
  {
    __int16 v12 = *a4++;
    __int16 v13 = *((_WORD *)a2 + 2);
    int v14 = *a2;
    a2 = (int *)((char *)a2 + a3);
    BOOL v15 = __OFSUB__(a7--, 1);
    *(_WORD *)uint64_t v11 = v12;
    *(_DWORD *)((char *)v11 + 2) = v14;
    *((_WORD *)v11++ + 3) = v13;
  }
  while (!((a7 < 0) ^ v15 | (a7 == 0)));
  uint64_t v16 = *(void *)((char *)v8 + a3);
  *uint64_t v11 = *v8;
  v11[1] = v16;
  return v11 + 2;
}

void *sub_224A9E250(void *result, uint64_t a2, uint64_t *a3, unsigned int a4, uint64_t a5, unsigned int a6, unsigned int a7, int a8, int a9)
{
  if (a9 == 15) {
    return sub_224A9F104(result, a2, a3, a4, a5, a6, a7, a8);
  }
  uint64_t v10 = (unsigned __int8 *)&unk_2646ED4D0 + 2 * (a4 & 1);
  uint64_t v11 = (char *)&unk_2646ED498 + 2 * a6;
  uint16x8_t v12 = (uint16x8_t)vdupq_n_s16(a4);
  uint16x8_t v13 = (uint16x8_t)vdupq_lane_s16(vneg_s16((int16x4_t)vqsub_u16((uint16x4_t)vdup_n_s16(a7), (uint16x4_t)vsub_s16((int16x4_t)0xF000F000F000FLL, vclz_s16(vtrn1_s16(*(int16x4_t *)v12.i8, v9))))), 0);
  do
  {
    int16x8_t v14 = *(int16x8_t *)a3;
    int16x8_t v15 = 0uLL;
    int v16 = 2;
    do
    {
      int16x8_t v17 = *(int16x8_t *)((char *)a3 + 2 * *v11);
      int16x8_t v18 = *(int16x8_t *)((char *)a3 - 2 * *v11);
      int16x8_t v19 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v14, (uint16x8_t)v17), v13));
      int16x8_t v20 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v14, (uint16x8_t)v18), v13));
      int16x8_t v21 = vdupq_n_s16(*v10);
      int16x8_t v15 = vmlaq_s16(vmlaq_s16(v15, vmaxq_s16(vminq_s16(vsubq_s16(v17, v14), v19), vnegq_s16(v19)), v21), vmaxq_s16(vminq_s16(vsubq_s16(v18, v14), v20), vnegq_s16(v20)), v21);
      ++v11;
      --v16;
      ++v10;
    }
    while (v16);
    a3 += 4;
    BOOL v22 = __OFSUB__(a8--, 1);
    *double result = vmovn_s16(vaddq_s16(v14, vrshrq_n_s16(vaddq_s16(v15, vcltzq_s16(v15)), 4uLL)));
    double result = (void *)((char *)result + a2);
    v11 -= 2;
    v10 -= 2;
  }
  while (!((a8 < 0) ^ v22 | (a8 == 0)));
  return result;
}

void *sub_224A9E344(void *result, uint64_t a2, uint64_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8, int a9)
{
  if (a9 == 15) {
    return sub_224A9F210(result, a2, a3, a4, a5, a6, a7, a8);
  }
  uint64_t v10 = (char *)&unk_2646ED498 + 2 * a6;
  uint16x8_t v11 = (uint16x8_t)vdupq_n_s16(a5);
  uint16x8_t v12 = (uint16x8_t)vdupq_lane_s16(vneg_s16((int16x4_t)vqsub_u16((uint16x4_t)vdup_n_s16(a7), (uint16x4_t)vsub_s16((int16x4_t)0xF000F000F000FLL, vclz_s16(vtrn1_s16(v9, *(int16x4_t *)v11.i8))))), 1);
  do
  {
    int16x8_t v13 = *(int16x8_t *)a3;
    int16x8_t v14 = 0uLL;
    unsigned int v15 = 2;
    do
    {
      int v16 = v10 + 4;
      int16x8_t v17 = *(int16x8_t *)((char *)a3 + 2 * *v16);
      int16x8_t v18 = *(int16x8_t *)((char *)a3 - 2 * *v16);
      v16 += 8;
      int16x8_t v19 = *(int16x8_t *)((char *)a3 + 2 * *v16);
      int16x8_t v20 = *(int16x8_t *)((char *)a3 - 2 * *v16);
      int16x8_t v21 = (int16x8_t)vqsubq_u16(v11, vshlq_u16(vabdq_u16((uint16x8_t)v13, (uint16x8_t)v17), v12));
      int16x8_t v22 = (int16x8_t)vqsubq_u16(v11, vshlq_u16(vabdq_u16((uint16x8_t)v13, (uint16x8_t)v18), v12));
      int16x8_t v23 = vdupq_n_s16(v15);
      int16x8_t v24 = vmlaq_s16(vmlaq_s16(v14, vmaxq_s16(vminq_s16(vsubq_s16(v17, v13), v21), vnegq_s16(v21)), v23), vmaxq_s16(vminq_s16(vsubq_s16(v18, v13), v22), vnegq_s16(v22)), v23);
      int16x8_t v25 = (int16x8_t)vqsubq_u16(v11, vshlq_u16(vabdq_u16((uint16x8_t)v13, (uint16x8_t)v19), v12));
      int16x8_t v26 = (int16x8_t)vqsubq_u16(v11, vshlq_u16(vabdq_u16((uint16x8_t)v13, (uint16x8_t)v20), v12));
      int16x8_t v14 = vmlaq_s16(vmlaq_s16(v24, vmaxq_s16(vminq_s16(vsubq_s16(v19, v13), v25), vnegq_s16(v25)), v23), vmaxq_s16(vminq_s16(vsubq_s16(v20, v13), v26), vnegq_s16(v26)), v23);
      uint64_t v10 = v16 - 11;
      --v15;
    }
    while (v15);
    a3 += 4;
    BOOL v27 = __OFSUB__(a8--, 1);
    *double result = vmovn_s16(vaddq_s16(v13, vrshrq_n_s16(vaddq_s16(v14, vcltzq_s16(v14)), 4uLL)));
    double result = (void *)((char *)result + a2);
    v10 -= 2;
  }
  while (!((a8 < 0) ^ v27 | (a8 == 0)));
  return result;
}

void *sub_224A9E47C(void *result, uint64_t a2, uint64_t *a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8, int a9)
{
  if (a9 == 15) {
    return sub_224A9F370(result, a2, a3, a4, a5, a6, a7, a8);
  }
  int16x4_t v9 = (unsigned __int8 *)&unk_2646ED4D0 + 2 * (a4 & 1);
  uint64_t v10 = (char *)&unk_2646ED498 + 2 * a6;
  uint16x8_t v11 = (uint16x8_t)vdupq_n_s16(a4);
  uint16x8_t v12 = (uint16x8_t)vdupq_n_s16(a5);
  int16x4_t v13 = vneg_s16((int16x4_t)vqsub_u16((uint16x4_t)vdup_n_s16(a7), (uint16x4_t)vsub_s16((int16x4_t)0xF000F000F000FLL, vclz_s16(vtrn1_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)v12.i8)))));
  uint16x8_t v14 = (uint16x8_t)vdupq_lane_s16(v13, 1);
  uint16x8_t v15 = (uint16x8_t)vdupq_lane_s16(v13, 0);
  do
  {
    int16x8_t v16 = *(int16x8_t *)a3;
    int16x8_t v17 = 0uLL;
    int16x8_t v18 = *(int16x8_t *)a3;
    int16x8_t v19 = *(int16x8_t *)a3;
    unsigned int v20 = 2;
    do
    {
      int16x8_t v21 = *(int16x8_t *)((char *)a3 + 2 * *v10);
      int16x8_t v22 = *(int16x8_t *)((char *)a3 - 2 * *v10);
      int16x8_t v23 = v10 + 4;
      int16x8_t v24 = *(int16x8_t *)((char *)a3 + 2 * *v23);
      int16x8_t v25 = *(int16x8_t *)((char *)a3 - 2 * *v23);
      uint16x8_t v26 = vminq_u16(vminq_u16((uint16x8_t)v18, (uint16x8_t)v21), (uint16x8_t)v22);
      int16x8_t v27 = vmaxq_s16(vmaxq_s16(v19, v21), v22);
      int16x8_t v28 = (int16x8_t)vqsubq_u16(v11, vshlq_u16(vabdq_u16((uint16x8_t)v16, (uint16x8_t)v21), v15));
      int16x8_t v29 = (int16x8_t)vqsubq_u16(v11, vshlq_u16(vabdq_u16((uint16x8_t)v16, (uint16x8_t)v22), v15));
      int16x8_t v30 = vdupq_n_s16(*v9);
      int16x8_t v31 = vmlaq_s16(vmlaq_s16(v17, vmaxq_s16(vminq_s16(vsubq_s16(v21, v16), v28), vnegq_s16(v28)), v30), vmaxq_s16(vminq_s16(vsubq_s16(v22, v16), v29), vnegq_s16(v29)), v30);
      v23 += 8;
      int16x8_t v32 = *(int16x8_t *)((char *)a3 + 2 * *v23);
      int16x8_t v33 = *(int16x8_t *)((char *)a3 - 2 * *v23);
      int16x8_t v34 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v16, (uint16x8_t)v24), v14));
      int16x8_t v35 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v16, (uint16x8_t)v25), v14));
      int16x8_t v36 = vdupq_n_s16(v20);
      int16x8_t v37 = vmlaq_s16(vmlaq_s16(v31, vmaxq_s16(vminq_s16(vsubq_s16(v24, v16), v34), vnegq_s16(v34)), v36), vmaxq_s16(vminq_s16(vsubq_s16(v25, v16), v35), vnegq_s16(v35)), v36);
      int16x8_t v18 = (int16x8_t)vminq_u16(vminq_u16(vminq_u16(vminq_u16(v26, (uint16x8_t)v24), (uint16x8_t)v25), (uint16x8_t)v32), (uint16x8_t)v33);
      int16x8_t v19 = vmaxq_s16(vmaxq_s16(vmaxq_s16(vmaxq_s16(v27, v24), v25), v32), v33);
      int16x8_t v38 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v16, (uint16x8_t)v32), v14));
      int16x8_t v39 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v16, (uint16x8_t)v33), v14));
      int16x8_t v17 = vmlaq_s16(vmlaq_s16(v37, vmaxq_s16(vminq_s16(vsubq_s16(v32, v16), v38), vnegq_s16(v38)), v36), vmaxq_s16(vminq_s16(vsubq_s16(v33, v16), v39), vnegq_s16(v39)), v36);
      uint64_t v10 = v23 - 11;
      --v20;
      ++v9;
    }
    while (v20);
    a3 += 4;
    BOOL v40 = __OFSUB__(a8--, 1);
    *double result = vmovn_s16(vmaxq_s16(vminq_s16(vaddq_s16(v16, vrshrq_n_s16(vaddq_s16(v17, vcltzq_s16(v17)), 4uLL)), v19), v18));
    double result = (void *)((char *)result + a2);
    v10 -= 2;
    v9 -= 2;
  }
  while (!((a8 < 0) ^ v40 | (a8 == 0)));
  return result;
}

void *sub_224A9E670(void *result, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, int a8, int a9)
{
  if (!a4) {
    return sub_224A9E344(result, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  if (a5) {
    return sub_224A9E47C(result, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  return sub_224A9E250(result, a2, a3, a4, a5, a6, a7, a8, a9);
}

_DWORD *sub_224A9E684(_DWORD *result, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, unsigned int a6, unsigned int a7, int a8, int a9)
{
  if (a9 == 15) {
    return sub_224A9F59C(result, a2, (__int32 *)a3, a4, a5, a6, a7, a8);
  }
  uint64_t v10 = (unsigned __int8 *)&unk_2646ED4D0 + 2 * (a4 & 1);
  uint16x8_t v11 = (char *)&unk_2646ED4B4 + 2 * a6;
  uint16x8_t v12 = (uint16x8_t)vdupq_n_s16(a4);
  uint16x8_t v13 = (uint16x8_t)vdupq_lane_s16(vneg_s16((int16x4_t)vqsub_u16((uint16x4_t)vdup_n_s16(a7), (uint16x4_t)vsub_s16((int16x4_t)0xF000F000F000FLL, vclz_s16(vtrn1_s16(*(int16x4_t *)v12.i8, v9))))), 0);
  do
  {
    v14.i64[0] = *(void *)a3;
    v14.i64[1] = *(void *)(a3 + 16);
    int16x8_t v15 = 0uLL;
    int v16 = 2;
    do
    {
      int16x8_t v17 = (uint64_t *)(a3 + 2 * *v11);
      int16x8_t v18 = (uint64_t *)(a3 - 2 * *v11);
      v19.i64[0] = *v17;
      v20.i64[0] = *v18;
      v19.i64[1] = v17[2];
      v20.i64[1] = v18[2];
      int16x8_t v21 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v14, v19), v13));
      int16x8_t v22 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v14, v20), v13));
      int16x8_t v23 = vdupq_n_s16(*v10);
      int16x8_t v15 = vmlaq_s16(vmlaq_s16(v15, vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v19, v14), v21), vnegq_s16(v21)), v23), vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v20, v14), v22), vnegq_s16(v22)), v23);
      ++v11;
      --v16;
      ++v10;
    }
    while (v16);
    int8x8_t v24 = vmovn_s16(vaddq_s16(v14, vrshrq_n_s16(vaddq_s16(v15, vcltzq_s16(v15)), 4uLL)));
    *double result = v24.i32[0];
    int16x8_t v25 = (_DWORD *)((char *)result + a2);
    a3 += 32;
    BOOL v26 = __OFSUB__(a8, 2);
    a8 -= 2;
    *int16x8_t v25 = v24.i32[1];
    double result = (_DWORD *)((char *)v25 + a2);
    v11 -= 2;
    v10 -= 2;
  }
  while (!((a8 < 0) ^ v26 | (a8 == 0)));
  return result;
}

_DWORD *sub_224A9E794(_DWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8, int a9)
{
  if (a9 == 15) {
    return sub_224A9F6E0(result, a2, (__int32 *)a3, a4, a5, a6, a7, a8);
  }
  uint64_t v10 = (char *)&unk_2646ED4B4 + 2 * a6;
  uint16x8_t v11 = (uint16x8_t)vdupq_n_s16(a5);
  uint16x8_t v12 = (uint16x8_t)vdupq_lane_s16(vneg_s16((int16x4_t)vqsub_u16((uint16x4_t)vdup_n_s16(a7), (uint16x4_t)vsub_s16((int16x4_t)0xF000F000F000FLL, vclz_s16(vtrn1_s16(v9, *(int16x4_t *)v11.i8))))), 1);
  do
  {
    v13.i64[0] = *(void *)a3;
    v13.i64[1] = *(void *)(a3 + 16);
    int16x8_t v14 = 0uLL;
    unsigned int v15 = 2;
    do
    {
      int v16 = v10 + 4;
      int16x8_t v17 = (uint64_t *)(a3 + 2 * *v16);
      int16x8_t v18 = (uint64_t *)(a3 - 2 * *v16);
      v19.i64[0] = *v17;
      v20.i64[0] = *v18;
      v19.i64[1] = v17[2];
      v20.i64[1] = v18[2];
      v16 += 8;
      int16x8_t v21 = (uint64_t *)(a3 + 2 * *v16);
      int16x8_t v22 = (uint64_t *)(a3 - 2 * *v16);
      v23.i64[0] = *v21;
      v24.i64[0] = *v22;
      v23.i64[1] = v21[2];
      v24.i64[1] = v22[2];
      int16x8_t v25 = (int16x8_t)vqsubq_u16(v11, vshlq_u16(vabdq_u16((uint16x8_t)v13, v19), v12));
      int16x8_t v26 = (int16x8_t)vqsubq_u16(v11, vshlq_u16(vabdq_u16((uint16x8_t)v13, v20), v12));
      int16x8_t v27 = vdupq_n_s16(v15);
      int16x8_t v28 = vmlaq_s16(vmlaq_s16(v14, vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v19, v13), v25), vnegq_s16(v25)), v27), vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v20, v13), v26), vnegq_s16(v26)), v27);
      int16x8_t v29 = (int16x8_t)vqsubq_u16(v11, vshlq_u16(vabdq_u16((uint16x8_t)v13, v23), v12));
      int16x8_t v30 = (int16x8_t)vqsubq_u16(v11, vshlq_u16(vabdq_u16((uint16x8_t)v13, v24), v12));
      int16x8_t v14 = vmlaq_s16(vmlaq_s16(v28, vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v23, v13), v29), vnegq_s16(v29)), v27), vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v24, v13), v30), vnegq_s16(v30)), v27);
      uint64_t v10 = v16 - 11;
      --v15;
    }
    while (v15);
    int8x8_t v31 = vmovn_s16(vaddq_s16(v13, vrshrq_n_s16(vaddq_s16(v14, vcltzq_s16(v14)), 4uLL)));
    *double result = v31.i32[0];
    int16x8_t v32 = (_DWORD *)((char *)result + a2);
    a3 += 32;
    BOOL v33 = __OFSUB__(a8, 2);
    a8 -= 2;
    *int16x8_t v32 = v31.i32[1];
    double result = (_DWORD *)((char *)v32 + a2);
    v10 -= 2;
  }
  while (!((a8 < 0) ^ v33 | (a8 == 0)));
  return result;
}

_DWORD *sub_224A9E8F8(_DWORD *result, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8, int a9)
{
  if (a9 == 15) {
    return sub_224A9F898(result, a2, (__int32 *)a3, a4, a5, a6, a7, a8);
  }
  int16x4_t v9 = (unsigned __int8 *)&unk_2646ED4D0 + 2 * (a4 & 1);
  uint64_t v10 = (char *)&unk_2646ED4B4 + 2 * a6;
  uint16x8_t v11 = (uint16x8_t)vdupq_n_s16(a4);
  uint16x8_t v12 = (uint16x8_t)vdupq_n_s16(a5);
  int16x4_t v13 = vneg_s16((int16x4_t)vqsub_u16((uint16x4_t)vdup_n_s16(a7), (uint16x4_t)vsub_s16((int16x4_t)0xF000F000F000FLL, vclz_s16(vtrn1_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)v12.i8)))));
  uint16x8_t v14 = (uint16x8_t)vdupq_lane_s16(v13, 1);
  uint16x8_t v15 = (uint16x8_t)vdupq_lane_s16(v13, 0);
  do
  {
    v16.i64[0] = *(void *)a3;
    v16.i64[1] = *(void *)(a3 + 16);
    int16x8_t v17 = 0uLL;
    int16x8_t v18 = v16;
    int16x8_t v19 = v16;
    unsigned int v20 = 2;
    do
    {
      int16x8_t v21 = (uint64_t *)(a3 + 2 * *v10);
      int16x8_t v22 = (uint64_t *)(a3 - 2 * *v10);
      v23.i64[0] = *v21;
      v24.i64[0] = *v22;
      v23.i64[1] = v21[2];
      v24.i64[1] = v22[2];
      int16x8_t v25 = v10 + 4;
      int16x8_t v26 = (uint64_t *)(a3 + 2 * *v25);
      int16x8_t v27 = (uint64_t *)(a3 - 2 * *v25);
      v28.i64[0] = *v26;
      v29.i64[0] = *v27;
      v28.i64[1] = v26[2];
      v29.i64[1] = v27[2];
      uint16x8_t v30 = vminq_u16(vminq_u16((uint16x8_t)v18, v23), v24);
      int16x8_t v31 = vmaxq_s16(vmaxq_s16(v19, (int16x8_t)v23), (int16x8_t)v24);
      int16x8_t v32 = (int16x8_t)vqsubq_u16(v11, vshlq_u16(vabdq_u16((uint16x8_t)v16, v23), v15));
      int16x8_t v33 = (int16x8_t)vqsubq_u16(v11, vshlq_u16(vabdq_u16((uint16x8_t)v16, v24), v15));
      int16x8_t v34 = vdupq_n_s16(*v9);
      int16x8_t v35 = vmlaq_s16(vmlaq_s16(v17, vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v23, v16), v32), vnegq_s16(v32)), v34), vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v24, v16), v33), vnegq_s16(v33)), v34);
      v25 += 8;
      int16x8_t v36 = (uint64_t *)(a3 + 2 * *v25);
      int16x8_t v37 = (uint64_t *)(a3 - 2 * *v25);
      v23.i64[0] = *v36;
      v24.i64[0] = *v37;
      v23.i64[1] = v36[2];
      v24.i64[1] = v37[2];
      int16x8_t v38 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v16, v28), v14));
      int16x8_t v39 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v16, v29), v14));
      int16x8_t v40 = vdupq_n_s16(v20);
      int16x8_t v41 = vmlaq_s16(vmlaq_s16(v35, vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v28, v16), v38), vnegq_s16(v38)), v40), vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v29, v16), v39), vnegq_s16(v39)), v40);
      int16x8_t v18 = (int16x8_t)vminq_u16(vminq_u16(vminq_u16(vminq_u16(v30, v28), v29), v23), v24);
      int16x8_t v19 = vmaxq_s16(vmaxq_s16(vmaxq_s16(vmaxq_s16(v31, (int16x8_t)v28), (int16x8_t)v29), (int16x8_t)v23), (int16x8_t)v24);
      int16x8_t v42 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v16, v23), v14));
      int16x8_t v43 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v16, v24), v14));
      int16x8_t v17 = vmlaq_s16(vmlaq_s16(v41, vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v23, v16), v42), vnegq_s16(v42)), v40), vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v24, v16), v43), vnegq_s16(v43)), v40);
      uint64_t v10 = v25 - 11;
      --v20;
      ++v9;
    }
    while (v20);
    int8x8_t v44 = vmovn_s16(vmaxq_s16(vminq_s16(vaddq_s16(v16, vrshrq_n_s16(vaddq_s16(v17, vcltzq_s16(v17)), 4uLL)), v19), v18));
    *double result = v44.i32[0];
    uint64_t v45 = (_DWORD *)((char *)result + a2);
    a3 += 32;
    BOOL v46 = __OFSUB__(a8, 2);
    a8 -= 2;
    *uint64_t v45 = v44.i32[1];
    double result = (_DWORD *)((char *)v45 + a2);
    v10 -= 2;
    v9 -= 2;
  }
  while (!((a8 < 0) ^ v46 | (a8 == 0)));
  return result;
}

_DWORD *sub_224A9EB28(_DWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, int a8, int a9)
{
  if (!a4) {
    return sub_224A9E794(result, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  if (a5) {
    return sub_224A9E8F8(result, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  return sub_224A9E684(result, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_224A9EB3C(uint8x8_t *a1, uint64_t a2, unsigned int *a3)
{
  uint8x8_t v5 = *a1;
  uint8x16_t v4 = (uint64_t *)((char *)a1 + a2);
  int16x8_t v6 = (int16x8_t)vsubl_u8(v5, (uint8x8_t)0x8080808080808080);
  int8x16_t v7 = (int8x16_t)vrev64q_s16(v6);
  int16x8_t v8 = vpaddq_s16(v6, (int16x8_t)0);
  int16x8_t v9 = vaddq_s16((int16x8_t)0, v6);
  *(int16x4_t *)v3.i8 = vrev64_s16(*(int16x4_t *)v8.i8);
  v10.i16[0] = vaddvq_s16(v6);
  int16x8_t v11 = vaddq_s16((int16x8_t)0, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v6, 0xAuLL));
  int16x4_t v12 = vadd_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v6, (int8x16_t)0, 0xAuLL));
  int16x8_t v13 = v6;
  int16x8_t v14 = v6;
  v6.i64[0] = *v4;
  uint16x8_t v15 = (uint64_t *)((char *)v4 + a2);
  int16x8_t v16 = (int16x8_t)vextq_s8(v7, v7, 8uLL);
  int16x8_t v17 = (int16x8_t)vsubl_u8(*(uint8x8_t *)v6.i8, (uint8x8_t)0x8080808080808080);
  int16x8_t v18 = v8;
  int16x8_t v19 = (int16x8_t)v3;
  int8x16_t v20 = (int8x16_t)vrev64q_s16(v17);
  int8x16_t v21 = (int8x16_t)vpaddq_s16(v17, (int16x8_t)0);
  int16x8_t v22 = vaddq_s16(v9, v17);
  int8x16_t v23 = vextq_s8(v20, v20, 8uLL);
  *(int16x4_t *)v3.i8 = vrev64_s16(*(int16x4_t *)v21.i8);
  v10.i16[1] = vaddvq_s16(v17);
  int16x8_t v24 = vaddq_s16(v11, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v17, 0xAuLL));
  int16x4_t v25 = vadd_s16(v12, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v17, (int8x16_t)0, 0xAuLL));
  int16x8_t v26 = vaddq_s16(v13, v17);
  int16x8_t v27 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v17, 0xEuLL);
  int16x8_t v28 = (int16x8_t)vextq_s8((int8x16_t)v17, (int8x16_t)0, 0xEuLL);
  v17.i64[0] = *v15;
  uint16x8_t v29 = (uint64_t *)((char *)v15 + a2);
  int16x8_t v30 = vaddq_s16(v14, v27);
  int16x8_t v31 = vaddq_s16((int16x8_t)0, v28);
  int16x8_t v32 = vaddq_s16(v16, (int16x8_t)vextq_s8((int8x16_t)0, v23, 0xEuLL));
  int16x8_t v33 = vaddq_s16((int16x8_t)0, (int16x8_t)vextq_s8(v23, (int8x16_t)0, 0xEuLL));
  int16x8_t v34 = (int16x8_t)vsubl_u8(*(uint8x8_t *)v17.i8, (uint8x8_t)0x8080808080808080);
  int16x8_t v35 = vaddq_s16(v18, (int16x8_t)vextq_s8((int8x16_t)0, v21, 0xEuLL));
  int16x4_t v36 = vadd_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8(v21, (int8x16_t)0, 0xEuLL));
  int16x8_t v37 = vaddq_s16(v19, (int16x8_t)vextq_s8((int8x16_t)0, v3, 0xEuLL));
  int16x4_t v38 = vadd_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8(v3, (int8x16_t)0, 0xEuLL));
  int8x16_t v39 = (int8x16_t)vrev64q_s16(v34);
  int8x16_t v40 = (int8x16_t)vpaddq_s16(v34, (int16x8_t)0);
  int16x8_t v41 = vaddq_s16(v22, v34);
  int8x16_t v42 = vextq_s8(v39, v39, 8uLL);
  *(int16x4_t *)v3.i8 = vrev64_s16(*(int16x4_t *)v40.i8);
  v10.i16[2] = vaddvq_s16(v34);
  int16x8_t v43 = vaddq_s16(v24, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v34, 0xCuLL));
  int16x4_t v44 = vadd_s16(v25, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v34, (int8x16_t)0, 0xCuLL));
  int16x8_t v45 = vaddq_s16(v26, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v34, 0xEuLL));
  int16x4_t v46 = vadd_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v34, (int8x16_t)0, 0xEuLL));
  int16x8_t v47 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v34, 0xCuLL);
  int16x8_t v48 = (int16x8_t)vextq_s8((int8x16_t)v34, (int8x16_t)0, 0xCuLL);
  v34.i64[0] = *v29;
  int8x16_t v49 = (uint64_t *)((char *)v29 + a2);
  int16x8_t v50 = vaddq_s16(v30, v47);
  int16x8_t v51 = vaddq_s16(v31, v48);
  int16x8_t v52 = vaddq_s16(v32, (int16x8_t)vextq_s8((int8x16_t)0, v42, 0xCuLL));
  int16x8_t v53 = vaddq_s16(v33, (int16x8_t)vextq_s8(v42, (int8x16_t)0, 0xCuLL));
  int16x8_t v54 = (int16x8_t)vsubl_u8(*(uint8x8_t *)v34.i8, (uint8x8_t)0x8080808080808080);
  int16x8_t v55 = vaddq_s16(v35, (int16x8_t)vextq_s8((int8x16_t)0, v40, 0xCuLL));
  int16x4_t v56 = vadd_s16(v36, (int16x4_t)*(_OWORD *)&vextq_s8(v40, (int8x16_t)0, 0xCuLL));
  int16x8_t v57 = vaddq_s16(v37, (int16x8_t)vextq_s8((int8x16_t)0, v3, 0xCuLL));
  int16x4_t v58 = vadd_s16(v38, (int16x4_t)*(_OWORD *)&vextq_s8(v3, (int8x16_t)0, 0xCuLL));
  int8x16_t v59 = (int8x16_t)vrev64q_s16(v54);
  int8x16_t v60 = (int8x16_t)vpaddq_s16(v54, (int16x8_t)0);
  int16x8_t v61 = vaddq_s16(v41, v54);
  int8x16_t v62 = vextq_s8(v59, v59, 8uLL);
  *(int16x4_t *)v3.i8 = vrev64_s16(*(int16x4_t *)v60.i8);
  v10.i16[3] = vaddvq_s16(v54);
  int16x8_t v63 = vaddq_s16(v43, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v54, 0xCuLL));
  int16x4_t v64 = vadd_s16(v44, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v54, (int8x16_t)0, 0xCuLL));
  int16x8_t v65 = vaddq_s16(v45, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v54, 0xEuLL));
  int16x4_t v66 = vadd_s16(v46, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v54, (int8x16_t)0, 0xEuLL));
  int16x8_t v67 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v54, 0xAuLL);
  int16x8_t v68 = (int16x8_t)vextq_s8((int8x16_t)v54, (int8x16_t)0, 0xAuLL);
  v54.i64[0] = *v49;
  uint64_t v69 = (uint64_t *)((char *)v49 + a2);
  int16x8_t v70 = vaddq_s16(v50, v67);
  int16x8_t v71 = vaddq_s16(v51, v68);
  int16x8_t v72 = vaddq_s16(v52, (int16x8_t)vextq_s8((int8x16_t)0, v62, 0xAuLL));
  int16x8_t v73 = vaddq_s16(v53, (int16x8_t)vextq_s8(v62, (int8x16_t)0, 0xAuLL));
  int16x8_t v74 = (int16x8_t)vsubl_u8(*(uint8x8_t *)v54.i8, (uint8x8_t)0x8080808080808080);
  int16x8_t v75 = vaddq_s16(v55, (int16x8_t)vextq_s8((int8x16_t)0, v60, 0xAuLL));
  int16x4_t v76 = vadd_s16(v56, (int16x4_t)*(_OWORD *)&vextq_s8(v60, (int8x16_t)0, 0xAuLL));
  int16x8_t v77 = vaddq_s16(v57, (int16x8_t)vextq_s8((int8x16_t)0, v3, 0xAuLL));
  int16x4_t v78 = vadd_s16(v58, (int16x4_t)*(_OWORD *)&vextq_s8(v3, (int8x16_t)0, 0xAuLL));
  int8x16_t v79 = (int8x16_t)vrev64q_s16(v74);
  int8x16_t v80 = (int8x16_t)vpaddq_s16(v74, (int16x8_t)0);
  int16x8_t v81 = vaddq_s16(v61, v74);
  int8x16_t v82 = vextq_s8(v79, v79, 8uLL);
  *(int16x4_t *)v3.i8 = vrev64_s16(*(int16x4_t *)v80.i8);
  v10.i16[4] = vaddvq_s16(v74);
  int16x8_t v83 = vaddq_s16(v63, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v74, 0xEuLL));
  int16x4_t v84 = vadd_s16(v64, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v74, (int8x16_t)0, 0xEuLL));
  int16x8_t v85 = vaddq_s16(v65, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v74, 0xCuLL));
  int16x4_t v86 = vadd_s16(v66, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v74, (int8x16_t)0, 0xCuLL));
  int16x8_t v87 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v74, 8uLL);
  int16x8_t v88 = (int16x8_t)vextq_s8((int8x16_t)v74, (int8x16_t)0, 8uLL);
  v74.i64[0] = *v69;
  uint64_t result = (uint64_t)v69 + a2;
  int16x8_t v89 = vaddq_s16(v72, (int16x8_t)vextq_s8((int8x16_t)0, v82, 8uLL));
  int16x8_t v90 = vaddq_s16(v73, (int16x8_t)vextq_s8(v82, (int8x16_t)0, 8uLL));
  int16x8_t v91 = (int16x8_t)vsubl_u8(*(uint8x8_t *)v74.i8, (uint8x8_t)0x8080808080808080);
  int16x8_t v92 = vaddq_s16(v75, (int16x8_t)vextq_s8((int8x16_t)0, v80, 8uLL));
  int16x4_t v93 = vadd_s16(v76, (int16x4_t)*(_OWORD *)&vextq_s8(v80, (int8x16_t)0, 8uLL));
  int16x8_t v94 = vaddq_s16(v77, (int16x8_t)vextq_s8((int8x16_t)0, v3, 8uLL));
  int16x4_t v95 = vadd_s16(v78, (int16x4_t)*(_OWORD *)&vextq_s8(v3, (int8x16_t)0, 8uLL));
  int8x16_t v96 = (int8x16_t)vrev64q_s16(v91);
  int8x16_t v97 = (int8x16_t)vpaddq_s16(v91, (int16x8_t)0);
  int16x8_t v98 = vaddq_s16(v81, v91);
  int8x16_t v99 = vextq_s8(v96, v96, 8uLL);
  *(int16x4_t *)v3.i8 = vrev64_s16(*(int16x4_t *)v97.i8);
  v10.i16[5] = vaddvq_s16(v91);
  int16x8_t v100 = vaddq_s16(v83, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v91, 0xEuLL));
  int16x4_t v101 = vadd_s16(v84, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v91, (int8x16_t)0, 0xEuLL));
  int16x8_t v102 = vaddq_s16(v85, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v91, 0xCuLL));
  int16x4_t v103 = vadd_s16(v86, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v91, (int8x16_t)0, 0xCuLL));
  int16x8_t v104 = vaddq_s16(vaddq_s16(v70, v87), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v91, 6uLL));
  int16x8_t v105 = vaddq_s16(vaddq_s16(v71, v88), (int16x8_t)vextq_s8((int8x16_t)v91, (int8x16_t)0, 6uLL));
  int16x8_t v106 = vaddq_s16(v89, (int16x8_t)vextq_s8((int8x16_t)0, v99, 6uLL));
  int16x8_t v107 = vaddq_s16(v90, (int16x8_t)vextq_s8(v99, (int8x16_t)0, 6uLL));
  int16x8_t v108 = (int16x8_t)vsubl_u8(*(uint8x8_t *)result, (uint8x8_t)0x8080808080808080);
  int16x8_t v109 = vaddq_s16(v92, (int16x8_t)vextq_s8((int8x16_t)0, v97, 6uLL));
  int16x4_t v110 = vadd_s16(v93, (int16x4_t)*(_OWORD *)&vextq_s8(v97, (int8x16_t)0, 6uLL));
  int16x8_t v111 = vaddq_s16(v94, (int16x8_t)vextq_s8((int8x16_t)0, v3, 6uLL));
  int16x4_t v112 = vadd_s16(v95, (int16x4_t)*(_OWORD *)&vextq_s8(v3, (int8x16_t)0, 6uLL));
  int8x16_t v113 = (int8x16_t)vrev64q_s16(v108);
  int8x16_t v114 = (int8x16_t)vpaddq_s16(v108, (int16x8_t)0);
  int16x8_t v115 = vaddq_s16(v98, v108);
  int8x16_t v116 = vextq_s8(v113, v113, 8uLL);
  *(int16x4_t *)v3.i8 = vrev64_s16(*(int16x4_t *)v114.i8);
  v10.i16[6] = vaddvq_s16(v108);
  int16x8_t v117 = vaddq_s16(v100, v108);
  int16x8_t v118 = vaddq_s16(v102, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v108, 0xAuLL));
  int16x4_t v119 = vadd_s16(v103, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v108, (int8x16_t)0, 0xAuLL));
  int16x8_t v120 = vaddq_s16(v104, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v108, 4uLL));
  int16x8_t v121 = vaddq_s16(v105, (int16x8_t)vextq_s8((int8x16_t)v108, (int8x16_t)0, 4uLL));
  int16x8_t v122 = vaddq_s16(v106, (int16x8_t)vextq_s8((int8x16_t)0, v116, 4uLL));
  int16x8_t v123 = vaddq_s16(v107, (int16x8_t)vextq_s8(v116, (int8x16_t)0, 4uLL));
  int16x8_t v124 = (int16x8_t)vsubl_u8(*(uint8x8_t *)(result + a2), (uint8x8_t)0x8080808080808080);
  int16x8_t v125 = vaddq_s16(v109, (int16x8_t)vextq_s8((int8x16_t)0, v114, 4uLL));
  int16x4_t v126 = vadd_s16(v110, (int16x4_t)*(_OWORD *)&vextq_s8(v114, (int8x16_t)0, 4uLL));
  int16x8_t v127 = vaddq_s16(v111, (int16x8_t)vextq_s8((int8x16_t)0, v3, 4uLL));
  int16x4_t v128 = vadd_s16(v112, (int16x4_t)*(_OWORD *)&vextq_s8(v3, (int8x16_t)0, 4uLL));
  int8x16_t v129 = (int8x16_t)vrev64q_s16(v124);
  int8x16_t v130 = (int8x16_t)vpaddq_s16(v124, (int16x8_t)0);
  int16x8_t v131 = vaddq_s16(v115, v124);
  int8x16_t v132 = vextq_s8(v129, v129, 8uLL);
  *(int16x4_t *)v3.i8 = vrev64_s16(*(int16x4_t *)v130.i8);
  v10.i16[7] = vaddvq_s16(v124);
  int16x8_t v133 = vaddq_s16(v117, v124);
  int16x8_t v134 = vaddq_s16(v118, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v124, 0xAuLL));
  int16x4_t v135 = vadd_s16(v119, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v124, (int8x16_t)0, 0xAuLL));
  int16x8_t v136 = vaddq_s16(v120, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v124, 2uLL));
  int16x8_t v137 = vaddq_s16(v122, (int16x8_t)vextq_s8((int8x16_t)0, v132, 2uLL));
  int16x8_t v138 = vaddq_s16(v125, (int16x8_t)vextq_s8((int8x16_t)0, v130, 2uLL));
  int16x4_t v139 = vadd_s16(v126, (int16x4_t)*(_OWORD *)&vextq_s8(v130, (int8x16_t)0, 2uLL));
  int16x8_t v140 = vaddq_s16(v127, (int16x8_t)vextq_s8((int8x16_t)0, v3, 2uLL));
  int16x4_t v141 = vadd_s16(v128, (int16x4_t)*(_OWORD *)&vextq_s8(v3, (int8x16_t)0, 2uLL));
  v142.i64[0] = 0x6900000069;
  v142.i64[1] = 0x6900000069;
  int v143 = vaddvq_s32(vmulq_s32(vmlal_high_s16(vmull_s16(*(int16x4_t *)v131.i8, *(int16x4_t *)v131.i8), v131, v131), v142));
  int8x16_t v144 = (int8x16_t)vrev64q_s16(vaddq_s16(v121, (int16x8_t)vextq_s8((int8x16_t)v124, (int8x16_t)0, 2uLL)));
  int8x16_t v145 = (int8x16_t)vrev64q_s16(vaddq_s16(v123, (int16x8_t)vextq_s8(v132, (int8x16_t)0, 2uLL)));
  int16x8_t v146 = (int16x8_t)vextq_s8(v144, v144, 0xAuLL);
  int16x8_t v147 = (int16x8_t)vextq_s8(v145, v145, 0xAuLL);
  int v161 = vaddvq_s32(vmulq_s32(vmlal_high_s16(vmull_s16(*(int16x4_t *)v10.i8, *(int16x4_t *)v10.i8), v10, v10), v142));
  int v165 = v143;
  int32x4_t v148 = (int32x4_t)vmovl_u16((uint16x4_t)0xD2011801A40348);
  int32x4_t v149 = (int32x4_t)vmovl_high_u16(qword_2646ED470);
  int v150 = vaddvq_s32(vmlaq_s32(vmulq_s32(vmlal_s16(vmull_s16(*(int16x4_t *)v137.i8, *(int16x4_t *)v137.i8), *(int16x4_t *)v147.i8, *(int16x4_t *)v147.i8), v148), vmlal_high_s16(vmull_high_s16(v137, v137), v147, v147), v149));
  v160[0] = vaddvq_s32(vmlaq_s32(vmulq_s32(vmlal_s16(vmull_s16(*(int16x4_t *)v136.i8, *(int16x4_t *)v136.i8), *(int16x4_t *)v146.i8, *(int16x4_t *)v146.i8), v148), vmlal_high_s16(vmull_high_s16(v136, v136), v146, v146), v149));
  int v163 = v150;
  int32x4_t v151 = (int32x4_t)vmovl_u16((uint16x4_t)0x69008C00D201A4);
  int32x4_t v152 = (int32x4_t)vmovl_u16((uint16x4_t)0x69006900690069);
  int32x4_t v153 = (int32x4_t)vmovl_u16((uint16x4_t)0x1A400D2008CLL);
  int v154 = vaddvq_s32(vmlaq_s32(vmlaq_s32(vmulq_s32(vmull_s16(*(int16x4_t *)v138.i8, *(int16x4_t *)v138.i8), v151), vmull_high_s16(v138, v138), v152), vmull_s16(v139, v139), v153));
  int v155 = vaddvq_s32(vmlaq_s32(vmlaq_s32(vmulq_s32(vmull_s16(*(int16x4_t *)v140.i8, *(int16x4_t *)v140.i8), v151), vmull_high_s16(v140, v140), v152), vmull_s16(v141, v141), v153));
  int v156 = vaddvq_s32(vmlaq_s32(vmlaq_s32(vmulq_s32(vmull_s16(*(int16x4_t *)v133.i8, *(int16x4_t *)v133.i8), v151), vmull_high_s16(v133, v133), v152), vmull_s16(v101, v101), v153));
  int v157 = vaddvq_s32(vmlaq_s32(vmlaq_s32(vmulq_s32(vmull_s16(*(int16x4_t *)v134.i8, *(int16x4_t *)v134.i8), v151), vmull_high_s16(v134, v134), v152), vmull_s16(v135, v135), v153));
  v160[1] = v154;
  int v162 = v155;
  int v158 = v160[0];
  int v164 = v156;
  int v166 = v157;
  LODWORD(result) = v154 > v160[0];
  if (v154 > v160[0]) {
    int v158 = v154;
  }
  if (v161 > v158)
  {
    LODWORD(result) = 2;
    int v158 = v161;
  }
  if (v155 > v158)
  {
    LODWORD(result) = 3;
    int v158 = v155;
  }
  if (v150 > v158)
  {
    LODWORD(result) = 4;
    int v158 = v150;
  }
  if (v156 > v158)
  {
    LODWORD(result) = 5;
    int v158 = v156;
  }
  if (v143 > v158)
  {
    LODWORD(result) = 6;
    int v158 = v143;
  }
  if (v157 <= v158) {
    uint64_t result = result;
  }
  else {
    uint64_t result = 7;
  }
  if (v157 > v158) {
    int v158 = v157;
  }
  *a3 = (v158 - v160[result ^ 4]) >> 10;
  return result;
}

void *sub_224A9F104(void *result, uint64_t a2, uint64_t *a3, unsigned int a4, uint64_t a5, unsigned int a6, unsigned int a7, int a8)
{
  int16x8_t v9 = (unsigned __int8 *)&unk_2646ED4D0 + 2 * (a4 & 1);
  int16x8_t v10 = (char *)&unk_2646ED498 + 2 * a6;
  uint8x16_t v11 = (uint8x16_t)vdupq_n_s8(a4);
  uint8x16_t v12 = (uint8x16_t)vdupq_lane_s8(vneg_s8((int8x8_t)vqsub_u8((uint8x8_t)vdup_n_s8(a7), (uint8x8_t)vsub_s8((int8x8_t)0x707070707070707, vclz_s8(vtrn1_s8(*(int8x8_t *)v11.i8, v8))))), 0);
  do
  {
    v13.i64[0] = *a3;
    v13.i64[1] = a3[2];
    v14.i64[0] = -1;
    v14.i64[1] = -1;
    int8x16_t v15 = 0uLL;
    int v16 = 2;
    do
    {
      int16x8_t v17 = (uint64_t *)((char *)a3 + *v10);
      int16x8_t v18 = (uint64_t *)((char *)a3 - *v10);
      v19.i64[0] = *v17;
      v20.i64[0] = *v18;
      v19.i64[1] = v17[2];
      v20.i64[1] = v18[2];
      uint8x16_t v21 = vabdq_u8(v13, v19);
      uint8x16_t v22 = vabdq_u8(v13, v20);
      int8x16_t v23 = (int8x16_t)vminq_u8(vqsubq_u8(v11, vshlq_u8(v21, v12)), v21);
      int8x16_t v24 = (int8x16_t)vminq_u8(vqsubq_u8(v11, vshlq_u8(v22, v12)), v22);
      int8x16_t v25 = vdupq_n_s8(*v9);
      int8x16_t v14 = vmlaq_s8(v14, vbslq_s8((int8x16_t)vcgtq_u8(v13, v19), vnegq_s8(v23), v23), v25);
      int8x16_t v15 = vmlaq_s8(v15, vbslq_s8((int8x16_t)vcgtq_u8(v13, v20), vnegq_s8(v24), v24), v25);
      ++v10;
      --v16;
      ++v9;
    }
    while (v16);
    int8x16_t v26 = vrhaddq_s8(v14, v15);
    uint8x16_t v27 = vsqaddq_u8(v13, vrshrq_n_s8(vbslq_s8(vcltzq_s8(v26), vhaddq_s8(v14, v15), v26), 3uLL));
    *uint64_t result = v27.i64[0];
    int16x8_t v28 = (void *)((char *)result + a2);
    a3 += 4;
    BOOL v29 = __OFSUB__(a8, 2);
    a8 -= 2;
    *int16x8_t v28 = v27.i64[1];
    uint64_t result = (void *)((char *)v28 + a2);
    v10 -= 2;
    v9 -= 2;
  }
  while (!((a8 < 0) ^ v29 | (a8 == 0)));
  return result;
}

void *sub_224A9F210(void *result, uint64_t a2, uint64_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8)
{
  int16x8_t v9 = (char *)&unk_2646ED498 + 2 * a6;
  uint8x16_t v10 = (uint8x16_t)vdupq_n_s8(a5);
  uint8x16_t v11 = (uint8x16_t)vdupq_lane_s8(vneg_s8((int8x8_t)vqsub_u8((uint8x8_t)vdup_n_s8(a7), (uint8x8_t)vsub_s8((int8x8_t)0x707070707070707, vclz_s8(vtrn1_s8(v8, *(int8x8_t *)v10.i8))))), 1);
  do
  {
    v12.i64[0] = *a3;
    v12.i64[1] = a3[2];
    v13.i64[0] = -1;
    v13.i64[1] = -1;
    int8x16_t v14 = 0uLL;
    unsigned int v15 = 2;
    do
    {
      int v16 = v9 + 4;
      int16x8_t v17 = (uint64_t *)((char *)a3 + *v16);
      int16x8_t v18 = (uint64_t *)((char *)a3 - *v16);
      v19.i64[0] = *v17;
      v20.i64[0] = *v18;
      v19.i64[1] = v17[2];
      v20.i64[1] = v18[2];
      v16 += 8;
      uint8x16_t v21 = (uint64_t *)((char *)a3 + *v16);
      uint8x16_t v22 = (uint64_t *)((char *)a3 - *v16);
      v23.i64[0] = *v21;
      v24.i64[0] = *v22;
      v23.i64[1] = v21[2];
      v24.i64[1] = v22[2];
      uint8x16_t v25 = vabdq_u8(v12, v19);
      uint8x16_t v26 = vabdq_u8(v12, v20);
      int8x16_t v27 = (int8x16_t)vminq_u8(vqsubq_u8(v10, vshlq_u8(v25, v11)), v25);
      int8x16_t v28 = (int8x16_t)vminq_u8(vqsubq_u8(v10, vshlq_u8(v26, v11)), v26);
      int8x16_t v29 = vdupq_n_s8(v15);
      int8x16_t v30 = vmlaq_s8(v13, vbslq_s8((int8x16_t)vcgtq_u8(v12, v19), vnegq_s8(v27), v27), v29);
      int8x16_t v31 = vmlaq_s8(v14, vbslq_s8((int8x16_t)vcgtq_u8(v12, v20), vnegq_s8(v28), v28), v29);
      uint8x16_t v32 = vabdq_u8(v12, v23);
      uint8x16_t v33 = vabdq_u8(v12, v24);
      int8x16_t v34 = (int8x16_t)vminq_u8(vqsubq_u8(v10, vshlq_u8(v32, v11)), v32);
      int8x16_t v35 = (int8x16_t)vminq_u8(vqsubq_u8(v10, vshlq_u8(v33, v11)), v33);
      int8x16_t v13 = vmlaq_s8(v30, vbslq_s8((int8x16_t)vcgtq_u8(v12, v23), vnegq_s8(v34), v34), v29);
      int8x16_t v14 = vmlaq_s8(v31, vbslq_s8((int8x16_t)vcgtq_u8(v12, v24), vnegq_s8(v35), v35), v29);
      int16x8_t v9 = v16 - 11;
      --v15;
    }
    while (v15);
    int8x16_t v36 = vrhaddq_s8(v13, v14);
    uint8x16_t v37 = vsqaddq_u8(v12, vrshrq_n_s8(vbslq_s8(vcltzq_s8(v36), vhaddq_s8(v13, v14), v36), 3uLL));
    *uint64_t result = v37.i64[0];
    int16x4_t v38 = (void *)((char *)result + a2);
    a3 += 4;
    BOOL v39 = __OFSUB__(a8, 2);
    a8 -= 2;
    *int16x4_t v38 = v37.i64[1];
    uint64_t result = (void *)((char *)v38 + a2);
    v9 -= 2;
  }
  while (!((a8 < 0) ^ v39 | (a8 == 0)));
  return result;
}

void *sub_224A9F370(void *result, uint64_t a2, uint64_t *a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8)
{
  int8x8_t v8 = (unsigned __int8 *)&unk_2646ED4D0 + 2 * (a4 & 1);
  int16x8_t v9 = (char *)&unk_2646ED498 + 2 * a6;
  uint8x16_t v10 = (uint8x16_t)vdupq_n_s8(a4);
  uint8x16_t v11 = (uint8x16_t)vdupq_n_s8(a5);
  int8x8_t v12 = vneg_s8((int8x8_t)vqsub_u8((uint8x8_t)vdup_n_s8(a7), (uint8x8_t)vsub_s8((int8x8_t)0x707070707070707, vclz_s8(vtrn1_s8(*(int8x8_t *)v10.i8, *(int8x8_t *)v11.i8)))));
  uint8x16_t v13 = (uint8x16_t)vdupq_lane_s8(v12, 1);
  uint8x16_t v14 = (uint8x16_t)vdupq_lane_s8(v12, 0);
  do
  {
    v15.i64[0] = *a3;
    v15.i64[1] = a3[2];
    v16.i64[0] = -1;
    v16.i64[1] = -1;
    int8x16_t v17 = 0uLL;
    uint8x16_t v18 = v15;
    uint8x16_t v19 = v15;
    unsigned int v20 = 2;
    do
    {
      uint8x16_t v21 = (uint64_t *)((char *)a3 + *v9);
      uint8x16_t v22 = (uint64_t *)((char *)a3 - *v9);
      v23.i64[0] = *v21;
      v24.i64[0] = *v22;
      v23.i64[1] = v21[2];
      v24.i64[1] = v22[2];
      uint8x16_t v25 = v9 + 4;
      uint8x16_t v26 = (uint64_t *)((char *)a3 + *v25);
      int8x16_t v27 = (uint64_t *)((char *)a3 - *v25);
      v28.i64[0] = *v26;
      v29.i64[0] = *v27;
      v28.i64[1] = v26[2];
      v29.i64[1] = v27[2];
      uint8x16_t v30 = vminq_u8(vminq_u8(v18, v23), v24);
      uint8x16_t v31 = vmaxq_u8(vmaxq_u8(v19, v23), v24);
      uint8x16_t v32 = vabdq_u8(v15, v23);
      uint8x16_t v33 = vabdq_u8(v15, v24);
      int8x16_t v34 = (int8x16_t)vminq_u8(vqsubq_u8(v10, vshlq_u8(v32, v14)), v32);
      int8x16_t v35 = (int8x16_t)vminq_u8(vqsubq_u8(v10, vshlq_u8(v33, v14)), v33);
      int8x16_t v36 = vdupq_n_s8(*v8);
      int8x16_t v37 = vmlaq_s8(v16, vbslq_s8((int8x16_t)vcgtq_u8(v15, v23), vnegq_s8(v34), v34), v36);
      int8x16_t v38 = vmlaq_s8(v17, vbslq_s8((int8x16_t)vcgtq_u8(v15, v24), vnegq_s8(v35), v35), v36);
      v25 += 8;
      BOOL v39 = (uint64_t *)((char *)a3 + *v25);
      int8x16_t v40 = (uint64_t *)((char *)a3 - *v25);
      v23.i64[0] = *v39;
      v24.i64[0] = *v40;
      v23.i64[1] = v39[2];
      v24.i64[1] = v40[2];
      uint8x16_t v41 = vabdq_u8(v15, v28);
      uint8x16_t v42 = vabdq_u8(v15, v29);
      int8x16_t v43 = (int8x16_t)vminq_u8(vqsubq_u8(v11, vshlq_u8(v41, v13)), v41);
      int8x16_t v44 = (int8x16_t)vminq_u8(vqsubq_u8(v11, vshlq_u8(v42, v13)), v42);
      int8x16_t v45 = vdupq_n_s8(v20);
      int8x16_t v46 = vmlaq_s8(v37, vbslq_s8((int8x16_t)vcgtq_u8(v15, v28), vnegq_s8(v43), v43), v45);
      int8x16_t v47 = vmlaq_s8(v38, vbslq_s8((int8x16_t)vcgtq_u8(v15, v29), vnegq_s8(v44), v44), v45);
      uint8x16_t v18 = vminq_u8(vminq_u8(vminq_u8(vminq_u8(v30, v28), v29), v23), v24);
      uint8x16_t v19 = vmaxq_u8(vmaxq_u8(vmaxq_u8(vmaxq_u8(v31, v28), v29), v23), v24);
      uint8x16_t v48 = vabdq_u8(v15, v23);
      uint8x16_t v49 = vabdq_u8(v15, v24);
      int8x16_t v50 = (int8x16_t)vminq_u8(vqsubq_u8(v11, vshlq_u8(v48, v13)), v48);
      int8x16_t v51 = (int8x16_t)vminq_u8(vqsubq_u8(v11, vshlq_u8(v49, v13)), v49);
      int8x16_t v16 = vmlaq_s8(v46, vbslq_s8((int8x16_t)vcgtq_u8(v15, v23), vnegq_s8(v50), v50), v45);
      int8x16_t v17 = vmlaq_s8(v47, vbslq_s8((int8x16_t)vcgtq_u8(v15, v24), vnegq_s8(v51), v51), v45);
      int16x8_t v9 = v25 - 11;
      --v20;
      ++v8;
    }
    while (v20);
    int8x16_t v52 = vrhaddq_s8(v16, v17);
    uint8x16_t v53 = vmaxq_u8(vminq_u8(vsqaddq_u8(v15, vrshrq_n_s8(vbslq_s8(vcltzq_s8(v52), vhaddq_s8(v16, v17), v52), 3uLL)), v19), v18);
    *uint64_t result = v53.i64[0];
    int16x8_t v54 = (void *)((char *)result + a2);
    a3 += 4;
    BOOL v55 = __OFSUB__(a8, 2);
    a8 -= 2;
    *int16x8_t v54 = v53.i64[1];
    uint64_t result = (void *)((char *)v54 + a2);
    v9 -= 2;
    v8 -= 2;
  }
  while (!((a8 < 0) ^ v55 | (a8 == 0)));
  return result;
}

_DWORD *sub_224A9F59C(_DWORD *result, uint64_t a2, __int32 *a3, unsigned int a4, uint64_t a5, unsigned int a6, unsigned int a7, int a8)
{
  int16x8_t v9 = (unsigned __int8 *)&unk_2646ED4D0 + 2 * (a4 & 1);
  uint8x16_t v10 = (char *)&unk_2646ED4B4 + 2 * a6;
  uint8x16_t v11 = (uint8x16_t)vdupq_n_s8(a4);
  uint8x16_t v12 = (uint8x16_t)vdupq_lane_s8(vneg_s8((int8x8_t)vqsub_u8((uint8x8_t)vdup_n_s8(a7), (uint8x8_t)vsub_s8((int8x8_t)0x707070707070707, vclz_s8(vtrn1_s8(*(int8x8_t *)v11.i8, v8))))), 0);
  do
  {
    v13.i32[0] = *a3;
    v13.i32[1] = a3[2];
    v13.i32[2] = a3[4];
    v13.i32[3] = a3[6];
    v14.i64[0] = -1;
    v14.i64[1] = -1;
    int8x16_t v15 = 0uLL;
    int v16 = 2;
    do
    {
      int8x16_t v17 = (__int32 *)((char *)a3 + *v10);
      uint8x16_t v18 = (__int32 *)((char *)a3 - *v10);
      v19.i32[0] = *v17;
      v17 += 2;
      v20.i32[0] = *v18;
      v18 += 2;
      v19.i32[1] = *v17;
      v17 += 2;
      v20.i32[1] = *v18;
      v18 += 2;
      v19.i32[2] = *v17;
      v20.i32[2] = *v18;
      v19.i32[3] = v17[2];
      v20.i32[3] = v18[2];
      uint8x16_t v21 = vabdq_u8(v13, v19);
      uint8x16_t v22 = vabdq_u8(v13, v20);
      int8x16_t v23 = (int8x16_t)vminq_u8(vqsubq_u8(v11, vshlq_u8(v21, v12)), v21);
      int8x16_t v24 = (int8x16_t)vminq_u8(vqsubq_u8(v11, vshlq_u8(v22, v12)), v22);
      int8x16_t v25 = vdupq_n_s8(*v9);
      int8x16_t v14 = vmlaq_s8(v14, vbslq_s8((int8x16_t)vcgtq_u8(v13, v19), vnegq_s8(v23), v23), v25);
      int8x16_t v15 = vmlaq_s8(v15, vbslq_s8((int8x16_t)vcgtq_u8(v13, v20), vnegq_s8(v24), v24), v25);
      ++v10;
      --v16;
      ++v9;
    }
    while (v16);
    int8x16_t v26 = vrhaddq_s8(v14, v15);
    uint8x16_t v27 = vsqaddq_u8(v13, vrshrq_n_s8(vbslq_s8(vcltzq_s8(v26), vhaddq_s8(v14, v15), v26), 3uLL));
    *uint64_t result = v27.i32[0];
    uint8x16_t v28 = (_DWORD *)((char *)result + a2);
    a3 += 8;
    *uint8x16_t v28 = v27.i32[1];
    uint8x16_t v29 = (_DWORD *)((char *)v28 + a2);
    BOOL v30 = __OFSUB__(a8, 4);
    a8 -= 4;
    *uint8x16_t v29 = v27.i32[2];
    uint8x16_t v31 = (_DWORD *)((char *)v29 + a2);
    *uint8x16_t v31 = v27.i32[3];
    uint64_t result = (_DWORD *)((char *)v31 + a2);
    v10 -= 2;
    v9 -= 2;
  }
  while (!((a8 < 0) ^ v30 | (a8 == 0)));
  return result;
}

_DWORD *sub_224A9F6E0(_DWORD *result, uint64_t a2, __int32 *a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8)
{
  int16x8_t v9 = (char *)&unk_2646ED4B4 + 2 * a6;
  uint8x16_t v10 = (uint8x16_t)vdupq_n_s8(a5);
  uint8x16_t v11 = (uint8x16_t)vdupq_lane_s8(vneg_s8((int8x8_t)vqsub_u8((uint8x8_t)vdup_n_s8(a7), (uint8x8_t)vsub_s8((int8x8_t)0x707070707070707, vclz_s8(vtrn1_s8(v8, *(int8x8_t *)v10.i8))))), 1);
  do
  {
    v12.i32[0] = *a3;
    v12.i32[1] = a3[2];
    v12.i32[2] = a3[4];
    v12.i32[3] = a3[6];
    v13.i64[0] = -1;
    v13.i64[1] = -1;
    int8x16_t v14 = 0uLL;
    unsigned int v15 = 2;
    do
    {
      int v16 = v9 + 4;
      int8x16_t v17 = (__int32 *)((char *)a3 + *v16);
      uint8x16_t v18 = (__int32 *)((char *)a3 - *v16);
      v19.i32[0] = *v17;
      v17 += 2;
      v20.i32[0] = *v18;
      v18 += 2;
      v19.i32[1] = *v17;
      v17 += 2;
      v20.i32[1] = *v18;
      v18 += 2;
      v19.i32[2] = *v17;
      v20.i32[2] = *v18;
      v19.i32[3] = v17[2];
      v20.i32[3] = v18[2];
      v16 += 8;
      uint8x16_t v21 = (__int32 *)((char *)a3 + *v16);
      uint8x16_t v22 = (__int32 *)((char *)a3 - *v16);
      v23.i32[0] = *v21;
      v21 += 2;
      v24.i32[0] = *v22;
      v22 += 2;
      v23.i32[1] = *v21;
      v21 += 2;
      v24.i32[1] = *v22;
      v22 += 2;
      v23.i32[2] = *v21;
      v24.i32[2] = *v22;
      v23.i32[3] = v21[2];
      v24.i32[3] = v22[2];
      uint8x16_t v25 = vabdq_u8(v12, v19);
      uint8x16_t v26 = vabdq_u8(v12, v20);
      int8x16_t v27 = (int8x16_t)vminq_u8(vqsubq_u8(v10, vshlq_u8(v25, v11)), v25);
      int8x16_t v28 = (int8x16_t)vminq_u8(vqsubq_u8(v10, vshlq_u8(v26, v11)), v26);
      int8x16_t v29 = vdupq_n_s8(v15);
      int8x16_t v30 = vmlaq_s8(v13, vbslq_s8((int8x16_t)vcgtq_u8(v12, v19), vnegq_s8(v27), v27), v29);
      int8x16_t v31 = vmlaq_s8(v14, vbslq_s8((int8x16_t)vcgtq_u8(v12, v20), vnegq_s8(v28), v28), v29);
      uint8x16_t v32 = vabdq_u8(v12, v23);
      uint8x16_t v33 = vabdq_u8(v12, v24);
      int8x16_t v34 = (int8x16_t)vminq_u8(vqsubq_u8(v10, vshlq_u8(v32, v11)), v32);
      int8x16_t v35 = (int8x16_t)vminq_u8(vqsubq_u8(v10, vshlq_u8(v33, v11)), v33);
      int8x16_t v13 = vmlaq_s8(v30, vbslq_s8((int8x16_t)vcgtq_u8(v12, v23), vnegq_s8(v34), v34), v29);
      int8x16_t v14 = vmlaq_s8(v31, vbslq_s8((int8x16_t)vcgtq_u8(v12, v24), vnegq_s8(v35), v35), v29);
      int16x8_t v9 = v16 - 11;
      --v15;
    }
    while (v15);
    int8x16_t v36 = vrhaddq_s8(v13, v14);
    uint8x16_t v37 = vsqaddq_u8(v12, vrshrq_n_s8(vbslq_s8(vcltzq_s8(v36), vhaddq_s8(v13, v14), v36), 3uLL));
    *uint64_t result = v37.i32[0];
    int8x16_t v38 = (_DWORD *)((char *)result + a2);
    a3 += 8;
    *int8x16_t v38 = v37.i32[1];
    BOOL v39 = (_DWORD *)((char *)v38 + a2);
    BOOL v40 = __OFSUB__(a8, 4);
    a8 -= 4;
    *BOOL v39 = v37.i32[2];
    uint8x16_t v41 = (_DWORD *)((char *)v39 + a2);
    *uint8x16_t v41 = v37.i32[3];
    uint64_t result = (_DWORD *)((char *)v41 + a2);
    v9 -= 2;
  }
  while (!((a8 < 0) ^ v40 | (a8 == 0)));
  return result;
}

_DWORD *sub_224A9F898(_DWORD *result, uint64_t a2, __int32 *a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8)
{
  int8x8_t v8 = (unsigned __int8 *)&unk_2646ED4D0 + 2 * (a4 & 1);
  int16x8_t v9 = (char *)&unk_2646ED4B4 + 2 * a6;
  uint8x16_t v10 = (uint8x16_t)vdupq_n_s8(a4);
  uint8x16_t v11 = (uint8x16_t)vdupq_n_s8(a5);
  int8x8_t v12 = vneg_s8((int8x8_t)vqsub_u8((uint8x8_t)vdup_n_s8(a7), (uint8x8_t)vsub_s8((int8x8_t)0x707070707070707, vclz_s8(vtrn1_s8(*(int8x8_t *)v10.i8, *(int8x8_t *)v11.i8)))));
  uint8x16_t v13 = (uint8x16_t)vdupq_lane_s8(v12, 1);
  uint8x16_t v14 = (uint8x16_t)vdupq_lane_s8(v12, 0);
  do
  {
    v15.i32[0] = *a3;
    v15.i32[1] = a3[2];
    v15.i32[2] = a3[4];
    v15.i32[3] = a3[6];
    v16.i64[0] = -1;
    v16.i64[1] = -1;
    int8x16_t v17 = 0uLL;
    uint8x16_t v18 = v15;
    uint8x16_t v19 = v15;
    unsigned int v20 = 2;
    do
    {
      uint8x16_t v21 = (__int32 *)((char *)a3 + *v9);
      uint8x16_t v22 = (__int32 *)((char *)a3 - *v9);
      v23.i32[0] = *v21;
      v21 += 2;
      v24.i32[0] = *v22;
      v22 += 2;
      v23.i32[1] = *v21;
      v21 += 2;
      v24.i32[1] = *v22;
      v22 += 2;
      v23.i32[2] = *v21;
      v24.i32[2] = *v22;
      v23.i32[3] = v21[2];
      v24.i32[3] = v22[2];
      uint8x16_t v25 = v9 + 4;
      uint8x16_t v26 = (__int32 *)((char *)a3 + *v25);
      int8x16_t v27 = (__int32 *)((char *)a3 - *v25);
      v28.i32[0] = *v26;
      v26 += 2;
      v29.i32[0] = *v27;
      v27 += 2;
      v28.i32[1] = *v26;
      v26 += 2;
      v29.i32[1] = *v27;
      v27 += 2;
      v28.i32[2] = *v26;
      v29.i32[2] = *v27;
      v28.i32[3] = v26[2];
      v29.i32[3] = v27[2];
      uint8x16_t v30 = vminq_u8(vminq_u8(v18, v23), v24);
      uint8x16_t v31 = vmaxq_u8(vmaxq_u8(v19, v23), v24);
      uint8x16_t v32 = vabdq_u8(v15, v23);
      uint8x16_t v33 = vabdq_u8(v15, v24);
      int8x16_t v34 = (int8x16_t)vminq_u8(vqsubq_u8(v10, vshlq_u8(v32, v14)), v32);
      int8x16_t v35 = (int8x16_t)vminq_u8(vqsubq_u8(v10, vshlq_u8(v33, v14)), v33);
      int8x16_t v36 = vdupq_n_s8(*v8);
      int8x16_t v37 = vmlaq_s8(v16, vbslq_s8((int8x16_t)vcgtq_u8(v15, v23), vnegq_s8(v34), v34), v36);
      int8x16_t v38 = vmlaq_s8(v17, vbslq_s8((int8x16_t)vcgtq_u8(v15, v24), vnegq_s8(v35), v35), v36);
      v25 += 8;
      BOOL v39 = (__int32 *)((char *)a3 + *v25);
      BOOL v40 = (__int32 *)((char *)a3 - *v25);
      v23.i32[0] = *v39;
      v39 += 2;
      v24.i32[0] = *v40;
      v40 += 2;
      v23.i32[1] = *v39;
      v39 += 2;
      v24.i32[1] = *v40;
      v40 += 2;
      v23.i32[2] = *v39;
      v24.i32[2] = *v40;
      v23.i32[3] = v39[2];
      v24.i32[3] = v40[2];
      uint8x16_t v41 = vabdq_u8(v15, v28);
      uint8x16_t v42 = vabdq_u8(v15, v29);
      int8x16_t v43 = (int8x16_t)vminq_u8(vqsubq_u8(v11, vshlq_u8(v41, v13)), v41);
      int8x16_t v44 = (int8x16_t)vminq_u8(vqsubq_u8(v11, vshlq_u8(v42, v13)), v42);
      int8x16_t v45 = vdupq_n_s8(v20);
      int8x16_t v46 = vmlaq_s8(v37, vbslq_s8((int8x16_t)vcgtq_u8(v15, v28), vnegq_s8(v43), v43), v45);
      int8x16_t v47 = vmlaq_s8(v38, vbslq_s8((int8x16_t)vcgtq_u8(v15, v29), vnegq_s8(v44), v44), v45);
      uint8x16_t v18 = vminq_u8(vminq_u8(vminq_u8(vminq_u8(v30, v28), v29), v23), v24);
      uint8x16_t v19 = vmaxq_u8(vmaxq_u8(vmaxq_u8(vmaxq_u8(v31, v28), v29), v23), v24);
      uint8x16_t v48 = vabdq_u8(v15, v23);
      uint8x16_t v49 = vabdq_u8(v15, v24);
      int8x16_t v50 = (int8x16_t)vminq_u8(vqsubq_u8(v11, vshlq_u8(v48, v13)), v48);
      int8x16_t v51 = (int8x16_t)vminq_u8(vqsubq_u8(v11, vshlq_u8(v49, v13)), v49);
      int8x16_t v16 = vmlaq_s8(v46, vbslq_s8((int8x16_t)vcgtq_u8(v15, v23), vnegq_s8(v50), v50), v45);
      int8x16_t v17 = vmlaq_s8(v47, vbslq_s8((int8x16_t)vcgtq_u8(v15, v24), vnegq_s8(v51), v51), v45);
      int16x8_t v9 = v25 - 11;
      --v20;
      ++v8;
    }
    while (v20);
    int8x16_t v52 = vrhaddq_s8(v16, v17);
    uint8x16_t v53 = vmaxq_u8(vminq_u8(vsqaddq_u8(v15, vrshrq_n_s8(vbslq_s8(vcltzq_s8(v52), vhaddq_s8(v16, v17), v52), 3uLL)), v19), v18);
    *uint64_t result = v53.i32[0];
    int16x8_t v54 = (_DWORD *)((char *)result + a2);
    a3 += 8;
    *int16x8_t v54 = v53.i32[1];
    BOOL v55 = (_DWORD *)((char *)v54 + a2);
    BOOL v56 = __OFSUB__(a8, 4);
    a8 -= 4;
    *BOOL v55 = v53.i32[2];
    int16x8_t v57 = (_DWORD *)((char *)v55 + a2);
    *int16x8_t v57 = v53.i32[3];
    uint64_t result = (_DWORD *)((char *)v57 + a2);
    v9 -= 2;
    v8 -= 2;
  }
  while (!((a8 < 0) ^ v56 | (a8 == 0)));
  return result;
}

uint64_t sub_224A9FB3C(uint64_t a1, uint64_t a2, int16x8_t *a3, __n128 *a4, unsigned int a5, uint64_t a6, unsigned int a7)
{
  unsigned int v7 = __clz(a7) - 18;
  int16x8_t v8 = vdupq_n_s16(-16384 - (1 << v7));
  int16x8_t v9 = vdupq_n_s16(-(v7 + 1));
  __n128 v10 = a4[1];
  __n128 v11 = (__n128)vqsubq_s16(vmaxq_s16(vqaddq_s16(*a3, *(int16x8_t *)a4), v8), v8);
  __n128 v12 = (__n128)vqsubq_s16(vmaxq_s16(vqaddq_s16(a3[1], (int16x8_t)v10), v8), v8);
  return ((uint64_t (*)(uint64_t, uint64_t, int16x8_t *, __n128 *, __n128, __n128, __n128, __n128, __n128, __n128))((char *)&dword_224A9FF1C - *((unsigned __int16 *)&dword_224A9FF1C + __clz(a5) - 24)))(a1, a2, &a3[2], &a4[2], v11, v12, *a4, v10, (__n128)vshlq_s16((int16x8_t)v11, v9), (__n128)vshlq_s16((int16x8_t)v12, v9));
}

void *sub_224A9FBA4(void *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, double a5, double a6, double a7, double a8, int16x8_t a9, int16x8_t a10, uint64_t a11, int a12)
{
  uint8x16_t v14 = (void *)((char *)result + a2);
  uint64_t v15 = 2 * a2;
  while (1)
  {
    BOOL v16 = __OFSUB__(a12, 4);
    a12 -= 4;
    *uint64_t result = a9.i64[0];
    int8x16_t v17 = (void *)((char *)result + v15);
    *uint8x16_t v14 = a9.i64[1];
    uint8x16_t v18 = (void *)((char *)v14 + v15);
    *int8x16_t v17 = a10.i64[0];
    uint64_t result = (void *)((char *)v17 + v15);
    *uint8x16_t v18 = a10.i64[1];
    uint8x16_t v14 = (void *)((char *)v18 + v15);
    if ((a12 < 0) ^ v16 | (a12 == 0)) {
      break;
    }
    int16x8_t v19 = *a3;
    int16x8_t v20 = a3[1];
    a3 += 2;
    int16x8_t v21 = *a4;
    int16x8_t v22 = a4[1];
    a4 += 2;
    a9 = vshlq_s16(vqsubq_s16(vmaxq_s16(vqaddq_s16(v19, v21), v12), v12), v13);
    a10 = vshlq_s16(vqsubq_s16(vmaxq_s16(vqaddq_s16(v20, v22), v12), v12), v13);
  }
  return result;
}

uint64_t sub_224A9FF28(uint64_t a1, uint64_t a2, int16x8_t *a3, __n128 *a4, unsigned int a5, uint64_t a6, unsigned int a7, unsigned int a8)
{
  int16x8_t v8 = vdupq_n_s16(a8);
  unsigned int v9 = __clz(a8) - 18;
  int16x8_t v10 = vdupq_n_s16(0x2000u >> v9);
  int16x8_t v11 = vdupq_n_s16(-v9);
  int32x4_t v12 = vnegq_s32(vdupq_n_s32(a7));
  int16x8_t v13 = a3[1];
  __n128 v14 = *a4;
  __n128 v15 = a4[1];
  int32x4_t v16 = vsubl_s16((int16x4_t)v15.n128_u64[0], *(int16x4_t *)v13.i8);
  __n128 v17 = (__n128)vaddw_high_s16(vshrq_n_s32(vmulq_s32(vsubl_high_s16((int16x8_t)v14, *a3), v12), 4uLL), (int16x8_t)v14);
  __n128 v18 = (__n128)vaddw_high_s16(vshrq_n_s32(vmulq_s32(vsubl_high_s16((int16x8_t)v15, v13), v12), 4uLL), (int16x8_t)v15);
  return ((uint64_t (*)(uint64_t, uint64_t, int16x8_t *, __n128 *, __n128, __n128, __n128, __n128, __n128, __n128))((char *)&dword_224AA0864 - *((unsigned __int16 *)&dword_224AA0864 + __clz(a5) - 24)))(a1, a2, &a3[2], &a4[2], v17, v18, v14, v15, (__n128)vmaxq_s16(vminq_s16(vaddq_s16(vrshlq_s16(vuzp1q_s16((int16x8_t)vaddw_s16(vshrq_n_s32(vmulq_s32(vsubl_s16((int16x4_t)a4->n128_u64[0], *(int16x4_t *)a3->i8), v12), 4uLL), (int16x4_t)v14.n128_u64[0]), (int16x8_t)v17),
                           v11),
                         v10),
                       v8),
                     (int16x8_t)0),
           (__n128)vmaxq_s16(vminq_s16(vaddq_s16(vrshlq_s16(vuzp1q_s16((int16x8_t)vaddw_s16(vshrq_n_s32(vmulq_s32(v16, v12), 4uLL), (int16x4_t)v15.n128_u64[0]), (int16x8_t)v18), v11), v10), v8), (int16x8_t)0));
}

void *sub_224A9FFDC(void *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, double a5, double a6, double a7, double a8, int16x8_t a9, int16x8_t a10, uint64_t a11, int a12)
{
  __n128 v17 = (void *)((char *)result + a2);
  uint64_t v18 = 2 * a2;
  while (1)
  {
    BOOL v19 = __OFSUB__(a12, 4);
    a12 -= 4;
    *uint64_t result = a9.i64[0];
    int16x8_t v20 = (void *)((char *)result + v18);
    *__n128 v17 = a9.i64[1];
    int16x8_t v21 = (void *)((char *)v17 + v18);
    *int16x8_t v20 = a10.i64[0];
    uint64_t result = (void *)((char *)v20 + v18);
    *int16x8_t v21 = a10.i64[1];
    __n128 v17 = (void *)((char *)v21 + v18);
    if ((a12 < 0) ^ v19 | (a12 == 0)) {
      break;
    }
    int16x8_t v22 = *a3;
    int16x8_t v23 = a3[1];
    a3 += 2;
    int16x8_t v24 = *a4;
    int16x8_t v25 = a4[1];
    a4 += 2;
    a9 = vmaxq_s16(vminq_s16(vaddq_s16(vrshlq_s16(vuzp1q_s16((int16x8_t)vaddw_s16(vshrq_n_s32(vmulq_s32(vsubl_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v22.i8), v12), 4uLL), *(int16x4_t *)v24.i8), (int16x8_t)vaddw_high_s16(vshrq_n_s32(vmulq_s32(vsubl_high_s16(v24, v22), v12), 4uLL), v24)), v14), v13), v16), v15);
    a10 = vmaxq_s16(vminq_s16(vaddq_s16(vrshlq_s16(vuzp1q_s16((int16x8_t)vaddw_s16(vshrq_n_s32(vmulq_s32(vsubl_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v23.i8), v12), 4uLL), *(int16x4_t *)v25.i8), (int16x8_t)vaddw_high_s16(vshrq_n_s32(vmulq_s32(vsubl_high_s16(v25, v23), v12), 4uLL), v25)), v14), v13), v16), v15);
  }
  return result;
}

uint64_t sub_224AA0870(uint64_t a1, uint64_t a2, int16x8_t *a3, __n128 *a4, unsigned int a5, uint64_t a6, int8x16_t *a7, unsigned int a8)
{
  int16x8_t v8 = vdupq_n_s16(a8);
  unsigned int v9 = __clz(a8) - 18;
  int16x8_t v10 = vdupq_n_s16(0x2000u >> v9);
  int16x8_t v11 = vdupq_n_s16(-v9);
  int16x8_t v12 = a3[1];
  int8x16_t v13 = vnegq_s8(*a7);
  __n128 v14 = *a4;
  __n128 v15 = a4[1];
  int16x8_t v16 = vmovl_s8(*(int8x8_t *)v13.i8);
  int16x8_t v17 = vmovl_high_s8(v13);
  int32x4_t v18 = vsubl_s16((int16x4_t)v15.n128_u64[0], *(int16x4_t *)v12.i8);
  __n128 v19 = (__n128)vaddw_high_s16(vshrq_n_s32(vmulq_s32(vsubl_high_s16((int16x8_t)v14, *a3), vmovl_high_s16(v16)), 6uLL), (int16x8_t)v14);
  __n128 v20 = (__n128)vaddw_high_s16(vshrq_n_s32(vmulq_s32(vsubl_high_s16((int16x8_t)v15, v12), vmovl_high_s16(v17)), 6uLL), (int16x8_t)v15);
  return ((uint64_t (*)(uint64_t, uint64_t, int16x8_t *, __n128 *, __n128, __n128, __n128, __n128, __n128, __n128))((char *)&dword_224AA1404 - *((unsigned __int16 *)&dword_224AA1404 + __clz(a5) - 24)))(a1, a2, &a3[2], &a4[2], v19, v20, v14, v15, (__n128)vmaxq_s16(vminq_s16(vaddq_s16(vrshlq_s16(vuzp1q_s16((int16x8_t)vaddw_s16(vshrq_n_s32(vmulq_s32(vsubl_s16((int16x4_t)a4->n128_u64[0], *(int16x4_t *)a3->i8), vmovl_s16(*(int16x4_t *)v16.i8)), 6uLL),
                                          (int16x4_t)v14.n128_u64[0]),
                             (int16x8_t)v19),
                           v11),
                         v10),
                       v8),
                     (int16x8_t)0),
           (__n128)vmaxq_s16(vminq_s16(vaddq_s16(vrshlq_s16(vuzp1q_s16((int16x8_t)vaddw_s16(vshrq_n_s32(vmulq_s32(v18, vmovl_s16(*(int16x4_t *)v17.i8)), 6uLL), (int16x4_t)v15.n128_u64[0]), (int16x8_t)v20), v11), v10), v8), (int16x8_t)0));
}

void *sub_224AA093C(void *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, double a5, double a6, double a7, double a8, int16x8_t a9, int16x8_t a10, uint64_t a11, int a12, int8x16_t *a13)
{
  int16x8_t v17 = (void *)((char *)result + a2);
  uint64_t v18 = 2 * a2;
  while (1)
  {
    BOOL v19 = __OFSUB__(a12, 4);
    a12 -= 4;
    *uint64_t result = a9.i64[0];
    __n128 v20 = (void *)((char *)result + v18);
    *int16x8_t v17 = a9.i64[1];
    int16x8_t v21 = (void *)((char *)v17 + v18);
    *__n128 v20 = a10.i64[0];
    uint64_t result = (void *)((char *)v20 + v18);
    *int16x8_t v21 = a10.i64[1];
    int16x8_t v17 = (void *)((char *)v21 + v18);
    if ((a12 < 0) ^ v19 | (a12 == 0)) {
      break;
    }
    int8x16_t v22 = *a13++;
    int16x8_t v23 = *a3;
    int16x8_t v24 = a3[1];
    a3 += 2;
    int8x16_t v25 = vnegq_s8(v22);
    int16x8_t v26 = *a4;
    int16x8_t v27 = a4[1];
    a4 += 2;
    int16x8_t v28 = vmovl_s8(*(int8x8_t *)v25.i8);
    int16x8_t v29 = vmovl_high_s8(v25);
    a9 = vmaxq_s16(vminq_s16(vaddq_s16(vrshlq_s16(vuzp1q_s16((int16x8_t)vaddw_s16(vshrq_n_s32(vmulq_s32(vsubl_s16(*(int16x4_t *)v26.i8, *(int16x4_t *)v23.i8), vmovl_s16(*(int16x4_t *)v28.i8)), 6uLL), *(int16x4_t *)v26.i8), (int16x8_t)vaddw_high_s16(vshrq_n_s32(vmulq_s32(vsubl_high_s16(v26, v23), vmovl_high_s16(v28)), 6uLL), v26)), v14), v13), v16), v15);
    a10 = vmaxq_s16(vminq_s16(vaddq_s16(vrshlq_s16(vuzp1q_s16((int16x8_t)vaddw_s16(vshrq_n_s32(vmulq_s32(vsubl_s16(*(int16x4_t *)v27.i8, *(int16x4_t *)v24.i8), vmovl_s16(*(int16x4_t *)v29.i8)), 6uLL), *(int16x4_t *)v27.i8), (int16x8_t)vaddw_high_s16(vshrq_n_s32(vmulq_s32(vsubl_high_s16(v27, v24), vmovl_high_s16(v29)), 6uLL), v27)), v14), v13), v16), v15);
  }
  return result;
}

uint64_t sub_224AA1410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  v5.n128_u64[0] = 0x4040404040404040;
  v5.n128_u64[1] = 0x4040404040404040;
  return ((uint64_t (*)(__n128, __n128))((char *)&qword_224AA1770
                                                 - *((unsigned __int16 *)&qword_224AA1770 + __clz(a5) - 24)))((__n128)vdupq_n_s16(0x6BDFu), v5);
}

void *sub_224AA145C(void *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, uint16x8_t a5, int8x16_t a6, uint64_t a7, int a8, int8x16_t *a9)
{
  do
  {
    int16x8_t v13 = *a3;
    int16x8_t v14 = a3[1];
    a3 += 2;
    int16x8_t v15 = *a4;
    int16x8_t v16 = a4[1];
    a4 += 2;
    BOOL v17 = __OFSUB__(a8, 4);
    a8 -= 4;
    int8x16_t v18 = (int8x16_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v13, v15)), 0xAuLL);
    int8x16_t v19 = (int8x16_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v14, v16)), 0xAuLL);
    uint16x8_t v20 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v13.i8, 6uLL), v11), vsubl_s16(*(int16x4_t *)v15.i8, *(int16x4_t *)v13.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v18.i8)), v10)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v13, 6uLL), v11), vsubl_high_s16(v15, v13), (int32x4_t)vmovl_high_u16((uint16x8_t)v18)), v10)), v12);
    uint16x8_t v21 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v14.i8, 6uLL), v11), vsubl_s16(*(int16x4_t *)v16.i8, *(int16x4_t *)v14.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v19.i8)), v10)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v14, 6uLL), v11), vsubl_high_s16(v16, v14), (int32x4_t)vmovl_high_u16((uint16x8_t)v19)), v10)), v12);
    *a9++ = vsubq_s8(a6, vuzp1q_s8(v18, v19));
    *uint64_t result = v20.i64[0];
    int8x16_t v22 = (void *)((char *)result + a2);
    void *v9 = v20.i64[1];
    int16x8_t v23 = (void *)((char *)v9 + a2);
    *int8x16_t v22 = v21.i64[0];
    uint64_t result = (void *)((char *)v22 + a2);
    *int16x8_t v23 = v21.i64[1];
    unsigned int v9 = (void *)((char *)v23 + a2);
  }
  while (!((a8 < 0) ^ v17 | (a8 == 0)));
  return result;
}

uint16x8_t *sub_224AA151C(uint16x8_t *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, uint16x8_t a5, int8x16_t a6, uint64_t a7, int a8, int8x16_t *a9)
{
  do
  {
    int16x8_t v13 = *a3;
    int16x8_t v14 = a3[1];
    a3 += 2;
    int16x8_t v15 = *a4;
    int16x8_t v16 = a4[1];
    a4 += 2;
    BOOL v17 = __OFSUB__(a8, 2);
    a8 -= 2;
    int8x16_t v18 = (int8x16_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v13, v15)), 0xAuLL);
    int8x16_t v19 = (int8x16_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v14, v16)), 0xAuLL);
    *a9++ = vsubq_s8(a6, vuzp1q_s8(v18, v19));
    *uint64_t result = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v13.i8, 6uLL), v11), vsubl_s16(*(int16x4_t *)v15.i8, *(int16x4_t *)v13.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v18.i8)), v10)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v13, 6uLL), v11), vsubl_high_s16(v15, v13), (int32x4_t)vmovl_high_u16((uint16x8_t)v18)), v10)), v12);
    uint64_t result = (uint16x8_t *)((char *)result + a2);
    uint16x8_t *v9 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v14.i8, 6uLL), v11), vsubl_s16(*(int16x4_t *)v16.i8, *(int16x4_t *)v14.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v19.i8)), v10)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v14, 6uLL), v11), vsubl_high_s16(v16, v14), (int32x4_t)vmovl_high_u16((uint16x8_t)v19)), v10)), v12);
    unsigned int v9 = (uint16x8_t *)((char *)v9 + a2);
  }
  while (!((a8 < 0) ^ v17 | (a8 == 0)));
  return result;
}

uint16x8_t *sub_224AA15D4(uint16x8_t *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, unsigned int a5, int a6, int8x16_t *a7, uint16x8_t a8, int8x16_t a9)
{
  uint64_t v13 = a2 - 2 * a5;
  int16x8_t v14 = (int8x16_t *)((char *)a7 + a5);
  int16x8_t v15 = (int16x8_t *)((char *)a4 + 2 * a5);
  int16x8_t v16 = (int16x8_t *)((char *)a3 + 2 * a5);
  do
  {
    int v17 = a5;
    do
    {
      int16x8_t v18 = *a3;
      int16x8_t v19 = a3[1];
      a3 += 2;
      int16x8_t v20 = *a4;
      int16x8_t v21 = a4[1];
      a4 += 2;
      int16x8_t v22 = *v16;
      int16x8_t v23 = v16[1];
      v16 += 2;
      int16x8_t v24 = *v15;
      int16x8_t v25 = v15[1];
      v15 += 2;
      BOOL v26 = __OFSUB__(v17, 16);
      v17 -= 16;
      int8x16_t v27 = (int8x16_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabdq_s16(v18, v20)), 0xAuLL);
      int8x16_t v28 = (int8x16_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabdq_s16(v19, v21)), 0xAuLL);
      int8x16_t v29 = (int8x16_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabdq_s16(v22, v24)), 0xAuLL);
      int8x16_t v30 = (int8x16_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabdq_s16(v23, v25)), 0xAuLL);
      *a7++ = vsubq_s8(a9, vuzp1q_s8(v27, v28));
      *v14++ = vsubq_s8(a9, vuzp1q_s8(v29, v30));
      *uint64_t result = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v18.i8, 6uLL), v11), vsubl_s16(*(int16x4_t *)v20.i8, *(int16x4_t *)v18.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v27.i8)), v10)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v18, 6uLL), v11), vsubl_high_s16(v20, v18), (int32x4_t)vmovl_high_u16((uint16x8_t)v27)), v10)), v12);
      result[1] = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v19.i8, 6uLL), v11), vsubl_s16(*(int16x4_t *)v21.i8, *(int16x4_t *)v19.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v28.i8)), v10)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v19, 6uLL), v11), vsubl_high_s16(v21, v19), (int32x4_t)vmovl_high_u16((uint16x8_t)v28)), v10)), v12);
      result += 2;
      uint16x8_t *v9 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v22.i8, 6uLL), v11), vsubl_s16(*(int16x4_t *)v24.i8, *(int16x4_t *)v22.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v29.i8)), v10)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v22, 6uLL), v11), vsubl_high_s16(v24, v22), (int32x4_t)vmovl_high_u16((uint16x8_t)v29)), v10)), v12);
      v9[1] = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v23.i8, 6uLL), v11), vsubl_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v23.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v30.i8)), v10)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v23, 6uLL), v11), vsubl_high_s16(v25, v23), (int32x4_t)vmovl_high_u16((uint16x8_t)v30)), v10)), v12);
      v9 += 2;
    }
    while (!((v17 < 0) ^ v26 | (v17 == 0)));
    BOOL v26 = __OFSUB__(a6, 2);
    a6 -= 2;
    a3 = (int16x8_t *)((char *)a3 + 2 * a5);
    a4 = (int16x8_t *)((char *)a4 + 2 * a5);
    int16x8_t v16 = (int16x8_t *)((char *)v16 + 2 * a5);
    int16x8_t v15 = (int16x8_t *)((char *)v15 + 2 * a5);
    a7 = (int8x16_t *)((char *)a7 + a5);
    int16x8_t v14 = (int8x16_t *)((char *)v14 + a5);
    uint64_t result = (uint16x8_t *)((char *)result + v13);
    unsigned int v9 = (uint16x8_t *)((char *)v9 + v13);
  }
  while (!((a6 < 0) ^ v26 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA177C(double a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  int8x8_t v10 = vdup_n_s8(a10);
  return ((uint64_t (*)(__n128, __n128, double, double))((char *)&dword_224AA1AF4
                                                                 - *((unsigned __int16 *)&dword_224AA1AF4
                                                                   + __clz(a7)
                                                                   - 24)))((__n128)vdupq_n_s16(0x6BDFu), a2, *(double *)&v10, COERCE_DOUBLE(vsub_s8((int8x8_t)0x8181818181818181, v10)));
}

void *sub_224AA17D0(void *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, uint16x8_t a5, double a6, double a7, uint8x8_t a8, uint64_t a9, int a10, uint8x8_t *a11)
{
  do
  {
    int16x8_t v15 = *a3;
    int16x8_t v16 = a3[1];
    a3 += 2;
    int16x8_t v17 = *a4;
    int16x8_t v18 = a4[1];
    a4 += 2;
    BOOL v19 = __OFSUB__(a10, 4);
    a10 -= 4;
    int16x8_t v20 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v15, v17)), 0xAuLL);
    int16x8_t v21 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v16, v18)), 0xAuLL);
    uint16x8_t v22 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v15.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v17.i8, *(int16x4_t *)v15.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v20.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v15, 6uLL), v13), vsubl_high_s16(v17, v15), (int32x4_t)vmovl_high_u16((uint16x8_t)v20)), v12)), v14);
    uint16x8_t v23 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v16.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v18.i8, *(int16x4_t *)v16.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v21.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v16, 6uLL), v13), vsubl_high_s16(v18, v16), (int32x4_t)vmovl_high_u16((uint16x8_t)v21)), v12)), v14);
    *a11++ = vhsub_u8(a8, (uint8x8_t)vmovn_s16(vpaddq_s16(v20, v21)));
    *uint64_t result = v22.i64[0];
    int16x8_t v24 = (void *)((char *)result + a2);
    *int32x4_t v11 = v22.i64[1];
    int16x8_t v25 = (void *)((char *)v11 + a2);
    void *v24 = v23.i64[0];
    uint64_t result = (void *)((char *)v24 + a2);
    *int16x8_t v25 = v23.i64[1];
    int32x4_t v11 = (void *)((char *)v25 + a2);
  }
  while (!((a10 < 0) ^ v19 | (a10 == 0)));
  return result;
}

uint16x8_t *sub_224AA1894(uint16x8_t *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, uint16x8_t a5, double a6, double a7, uint8x8_t a8, uint64_t a9, int a10, uint8x8_t *a11)
{
  do
  {
    int16x8_t v15 = *a3;
    int16x8_t v16 = a3[1];
    a3 += 2;
    int16x8_t v17 = *a4;
    int16x8_t v18 = a4[1];
    a4 += 2;
    BOOL v19 = __OFSUB__(a10, 2);
    a10 -= 2;
    int16x8_t v20 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v15, v17)), 0xAuLL);
    int16x8_t v21 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v16, v18)), 0xAuLL);
    *a11++ = vhsub_u8(a8, (uint8x8_t)vmovn_s16(vpaddq_s16(v20, v21)));
    *uint64_t result = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v15.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v17.i8, *(int16x4_t *)v15.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v20.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v15, 6uLL), v13), vsubl_high_s16(v17, v15), (int32x4_t)vmovl_high_u16((uint16x8_t)v20)), v12)), v14);
    uint64_t result = (uint16x8_t *)((char *)result + a2);
    *int32x4_t v11 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v16.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v18.i8, *(int16x4_t *)v16.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v21.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v16, 6uLL), v13), vsubl_high_s16(v18, v16), (int32x4_t)vmovl_high_u16((uint16x8_t)v21)), v12)), v14);
    int32x4_t v11 = (uint16x8_t *)((char *)v11 + a2);
  }
  while (!((a10 < 0) ^ v19 | (a10 == 0)));
  return result;
}

uint16x8_t *sub_224AA1950(uint16x8_t *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, unsigned int a5, int a6, uint8x8_t *a7, uint16x8_t a8, double a9, double a10, uint8x8_t a11)
{
  uint64_t v15 = a2 - 2 * a5;
  int16x8_t v16 = (uint8x8_t *)((char *)a7 + ((unint64_t)a5 >> 1));
  int16x8_t v17 = (int16x8_t *)((char *)a4 + 2 * a5);
  int16x8_t v18 = (int16x8_t *)((char *)a3 + 2 * a5);
  do
  {
    int v19 = a5;
    do
    {
      int16x8_t v20 = *a3;
      int16x8_t v21 = a3[1];
      a3 += 2;
      int16x8_t v22 = *a4;
      int16x8_t v23 = a4[1];
      a4 += 2;
      int16x8_t v24 = *v18;
      int16x8_t v25 = v18[1];
      v18 += 2;
      int16x8_t v26 = *v17;
      int16x8_t v27 = v17[1];
      v17 += 2;
      BOOL v28 = __OFSUB__(v19, 16);
      v19 -= 16;
      int16x8_t v29 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabdq_s16(v20, v22)), 0xAuLL);
      int16x8_t v30 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabdq_s16(v21, v23)), 0xAuLL);
      int16x8_t v31 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabdq_s16(v24, v26)), 0xAuLL);
      int16x8_t v32 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabdq_s16(v25, v27)), 0xAuLL);
      *a7++ = vhsub_u8(a11, (uint8x8_t)vmovn_s16(vpaddq_s16(v29, v30)));
      *v16++ = vhsub_u8(a11, (uint8x8_t)vmovn_s16(vpaddq_s16(v31, v32)));
      *uint64_t result = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v20.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v22.i8, *(int16x4_t *)v20.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v29.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v20, 6uLL), v13), vsubl_high_s16(v22, v20), (int32x4_t)vmovl_high_u16((uint16x8_t)v29)), v12)), v14);
      result[1] = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v21.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v23.i8, *(int16x4_t *)v21.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v30.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v21, 6uLL), v13), vsubl_high_s16(v23, v21), (int32x4_t)vmovl_high_u16((uint16x8_t)v30)), v12)), v14);
      result += 2;
      *int32x4_t v11 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v24.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v26.i8, *(int16x4_t *)v24.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v31.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v24, 6uLL), v13), vsubl_high_s16(v26, v24), (int32x4_t)vmovl_high_u16((uint16x8_t)v31)), v12)), v14);
      v11[1] = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v25.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v27.i8, *(int16x4_t *)v25.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v32.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v25, 6uLL), v13), vsubl_high_s16(v27, v25), (int32x4_t)vmovl_high_u16((uint16x8_t)v32)), v12)), v14);
      v11 += 2;
    }
    while (!((v19 < 0) ^ v28 | (v19 == 0)));
    BOOL v28 = __OFSUB__(a6, 2);
    a6 -= 2;
    a3 = (int16x8_t *)((char *)a3 + 2 * a5);
    a4 = (int16x8_t *)((char *)a4 + 2 * a5);
    int16x8_t v18 = (int16x8_t *)((char *)v18 + 2 * a5);
    int16x8_t v17 = (int16x8_t *)((char *)v17 + 2 * a5);
    a7 = (uint8x8_t *)((char *)a7 + ((unint64_t)a5 >> 1));
    int16x8_t v16 = (uint8x8_t *)((char *)v16 + ((unint64_t)a5 >> 1));
    uint64_t result = (uint16x8_t *)((char *)result + v15);
    int32x4_t v11 = (uint16x8_t *)((char *)v11 + v15);
  }
  while (!((a6 < 0) ^ v28 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA1B00(double a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  __n128 v10 = (__n128)vdupq_n_s16(a10);
  v11.i64[0] = 0x100010001000100;
  v11.i64[1] = 0x100010001000100;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)&dword_224AA1E74
                                                                 - *((unsigned __int16 *)&dword_224AA1E74
                                                                   + __clz(a7)
                                                                   - 24)))((__n128)vdupq_n_s16(0x6BDFu), a2, v10, (__n128)vsubq_s16(v11, (int16x8_t)v10));
}

void *sub_224AA1B54(void *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, uint16x8_t a5, double a6, double a7, int16x4_t a8, uint64_t a9, int a10, _DWORD *a11)
{
  do
  {
    int16x8_t v15 = *a3;
    int16x8_t v16 = a3[1];
    a3 += 2;
    int16x8_t v17 = *a4;
    int16x8_t v18 = a4[1];
    a4 += 2;
    BOOL v19 = __OFSUB__(a10, 4);
    a10 -= 4;
    int64x2_t v20 = (int64x2_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v15, v17)), 0xAuLL);
    int64x2_t v21 = (int64x2_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v16, v18)), 0xAuLL);
    uint16x8_t v22 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v15.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v17.i8, *(int16x4_t *)v15.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v20.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v15, 6uLL), v13), vsubl_high_s16(v17, v15), (int32x4_t)vmovl_high_u16((uint16x8_t)v20)), v12)), v14);
    uint16x8_t v23 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v16.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v18.i8, *(int16x4_t *)v16.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v21.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v16, 6uLL), v13), vsubl_high_s16(v18, v16), (int32x4_t)vmovl_high_u16((uint16x8_t)v21)), v12)), v14);
    int16x8_t v24 = vaddq_s16((int16x8_t)vtrn1q_s64(v20, v21), (int16x8_t)vtrn2q_s64(v20, v21));
    int16x8_t v25 = vpaddq_s16(v24, v24);
    *(int16x4_t *)v25.i8 = vsub_s16(a8, *(int16x4_t *)v25.i8);
    *a11++ = vrshrn_n_s16(v25, 2uLL).u32[0];
    *uint64_t result = v22.i64[0];
    int16x8_t v26 = (void *)((char *)result + a2);
    *int16x8_t v11 = v22.i64[1];
    int16x8_t v27 = (void *)((char *)v11 + a2);
    *int16x8_t v26 = v23.i64[0];
    uint64_t result = (void *)((char *)v26 + a2);
    *int16x8_t v27 = v23.i64[1];
    int16x8_t v11 = (void *)((char *)v27 + a2);
  }
  while (!((a10 < 0) ^ v19 | (a10 == 0)));
  return result;
}

uint16x8_t *sub_224AA1C24(uint16x8_t *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, uint16x8_t a5, double a6, double a7, int16x4_t a8, uint64_t a9, int a10, _DWORD *a11)
{
  do
  {
    int16x8_t v15 = *a3;
    int16x8_t v16 = a3[1];
    a3 += 2;
    int16x8_t v17 = *a4;
    int16x8_t v18 = a4[1];
    a4 += 2;
    BOOL v19 = __OFSUB__(a10, 2);
    a10 -= 2;
    int16x8_t v20 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v15, v17)), 0xAuLL);
    int16x8_t v21 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a5, (uint16x8_t)vabdq_s16(v16, v18)), 0xAuLL);
    uint16x8_t v22 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v15.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v17.i8, *(int16x4_t *)v15.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v20.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v15, 6uLL), v13), vsubl_high_s16(v17, v15), (int32x4_t)vmovl_high_u16((uint16x8_t)v20)), v12)), v14);
    int16x8_t v23 = vaddq_s16(v20, v21);
    int16x8_t v24 = vpaddq_s16(v23, v23);
    *(int16x4_t *)v24.i8 = vsub_s16(a8, *(int16x4_t *)v24.i8);
    *a11++ = vrshrn_n_s16(v24, 2uLL).u32[0];
    *uint64_t result = v22;
    uint64_t result = (uint16x8_t *)((char *)result + a2);
    *int16x8_t v11 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v16.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v18.i8, *(int16x4_t *)v16.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v21.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v16, 6uLL), v13), vsubl_high_s16(v18, v16), (int32x4_t)vmovl_high_u16((uint16x8_t)v21)), v12)), v14);
    int16x8_t v11 = (uint16x8_t *)((char *)v11 + a2);
  }
  while (!((a10 < 0) ^ v19 | (a10 == 0)));
  return result;
}

uint16x8_t *sub_224AA1CE4(uint16x8_t *result, uint64_t a2, int16x8_t *a3, int16x8_t *a4, unsigned int a5, int a6, int8x8_t *a7, uint16x8_t a8, double a9, double a10, int16x8_t a11)
{
  uint64_t v15 = a2 - 2 * a5;
  int16x8_t v16 = (int16x8_t *)((char *)a4 + 2 * a5);
  int16x8_t v17 = (int16x8_t *)((char *)a3 + 2 * a5);
  do
  {
    int v18 = a5;
    do
    {
      int16x8_t v19 = *a3;
      int16x8_t v20 = a3[1];
      a3 += 2;
      int16x8_t v21 = *a4;
      int16x8_t v22 = a4[1];
      a4 += 2;
      int16x8_t v23 = *v17;
      int16x8_t v24 = v17[1];
      v17 += 2;
      int16x8_t v25 = *v16;
      int16x8_t v26 = v16[1];
      v16 += 2;
      BOOL v27 = __OFSUB__(v18, 16);
      v18 -= 16;
      int16x8_t v28 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabdq_s16(v19, v21)), 0xAuLL);
      int16x8_t v29 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabdq_s16(v20, v22)), 0xAuLL);
      int16x8_t v30 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabdq_s16(v23, v25)), 0xAuLL);
      int16x8_t v31 = (int16x8_t)vshrq_n_u16(vqsubq_u16(a8, (uint16x8_t)vabdq_s16(v24, v26)), 0xAuLL);
      *a7++ = vrshrn_n_s16(vsubq_s16(a11, vpaddq_s16(vaddq_s16(v28, v30), vaddq_s16(v29, v31))), 2uLL);
      *uint64_t result = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v19.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v21.i8, *(int16x4_t *)v19.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v28.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v19, 6uLL), v13), vsubl_high_s16(v21, v19), (int32x4_t)vmovl_high_u16((uint16x8_t)v28)), v12)), v14);
      result[1] = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v20.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v22.i8, *(int16x4_t *)v20.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v29.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v20, 6uLL), v13), vsubl_high_s16(v22, v20), (int32x4_t)vmovl_high_u16((uint16x8_t)v29)), v12)), v14);
      result += 2;
      *int16x8_t v11 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v23.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v25.i8, *(int16x4_t *)v23.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v30.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v23, 6uLL), v13), vsubl_high_s16(v25, v23), (int32x4_t)vmovl_high_u16((uint16x8_t)v30)), v12)), v14);
      v11[1] = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_n_s16(*(int16x4_t *)v24.i8, 6uLL), v13), vsubl_s16(*(int16x4_t *)v26.i8, *(int16x4_t *)v24.i8), (int32x4_t)vmovl_u16(*(uint16x4_t *)v31.i8)), v12)), vrshlq_s32(vmlaq_s32(vaddq_s32(vshll_high_n_s16(v24, 6uLL), v13), vsubl_high_s16(v26, v24), (int32x4_t)vmovl_high_u16((uint16x8_t)v31)), v12)), v14);
      v11 += 2;
    }
    while (!((v18 < 0) ^ v27 | (v18 == 0)));
    BOOL v27 = __OFSUB__(a6, 2);
    a6 -= 2;
    a3 = (int16x8_t *)((char *)a3 + 2 * a5);
    a4 = (int16x8_t *)((char *)a4 + 2 * a5);
    int16x8_t v17 = (int16x8_t *)((char *)v17 + 2 * a5);
    int16x8_t v16 = (int16x8_t *)((char *)v16 + 2 * a5);
    uint64_t result = (uint16x8_t *)((char *)result + v15);
    int16x8_t v11 = (uint16x8_t *)((char *)v11 + v15);
  }
  while (!((a6 < 0) ^ v27 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA1E80(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&dword_224AA2024 - *((unsigned __int16 *)&dword_224AA2024 + __clz(a4) - 26)))();
}

uint64_t *sub_224AA1E9C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, int16x8_t *a3@<X2>, int a4@<W4>, int8x8_t *a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v6 = 2 * a2;
  do
  {
    int8x8_t v7 = *a5++;
    int16x8_t v8 = *a3++;
    v9.i64[0] = *result;
    BOOL v10 = __OFSUB__(a4, 2);
    a4 -= 2;
    v9.i64[1] = *a6;
    int16x8_t v11 = vaddq_s16(v9, vqrdmulhq_s16(vsubq_s16(v9, v8), vshlq_n_s16(vmovl_s8(vneg_s8(v7)), 9uLL)));
    *uint64_t result = v11.i64[0];
    uint64_t result = (uint64_t *)((char *)result + v6);
    *a6 = v11.i64[1];
    a6 = (uint64_t *)((char *)a6 + v6);
  }
  while (!((a4 < 0) ^ v10 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AA1EDC@<X0>(int16x8_t *result@<X0>, uint64_t a2@<X1>, int16x8_t *a3@<X2>, int a4@<W4>, int8x16_t *a5@<X5>, int16x8_t *a6@<X8>)
{
  uint64_t v6 = 2 * a2;
  do
  {
    int8x16_t v7 = *a5++;
    int16x8_t v8 = *a3;
    int16x8_t v9 = a3[1];
    a3 += 2;
    int8x16_t v10 = vnegq_s8(v7);
    BOOL v11 = __OFSUB__(a4, 2);
    a4 -= 2;
    int16x8_t v12 = vaddq_s16(*a6, vqrdmulhq_s16(vsubq_s16(*a6, v9), vshlq_n_s16(vmovl_high_s8(v10), 9uLL)));
    *uint64_t result = vaddq_s16(*result, vqrdmulhq_s16(vsubq_s16(*result, v8), vshlq_n_s16(vmovl_s8(*(int8x8_t *)v10.i8), 9uLL)));
    uint64_t result = (int16x8_t *)((char *)result + v6);
    *a6 = v12;
    a6 = (int16x8_t *)((char *)a6 + v6);
  }
  while (!((a4 < 0) ^ v11 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AA1F30@<X0>(int16x8_t *result@<X0>, uint64_t a2@<X1>, int16x8_t *a3@<X2>, int a4@<W4>, int8x16_t *a5@<X5>, int16x8_t *a6@<X8>)
{
  uint64_t v6 = 2 * a2;
  do
  {
    int8x16_t v7 = *a5;
    int8x16_t v8 = a5[1];
    a5 += 2;
    int16x8_t v9 = *a3;
    int16x8_t v10 = a3[1];
    int16x8_t v11 = a3[2];
    int16x8_t v12 = a3[3];
    a3 += 4;
    BOOL v13 = __OFSUB__(a4, 2);
    a4 -= 2;
    int8x16_t v14 = vnegq_s8(v7);
    int8x16_t v15 = vnegq_s8(v8);
    int16x8_t v16 = vaddq_s16(result[1], vqrdmulhq_s16(vsubq_s16(result[1], v10), vshlq_n_s16(vmovl_high_s8(v14), 9uLL)));
    int16x8_t v17 = vaddq_s16(*a6, vqrdmulhq_s16(vsubq_s16(*a6, v11), vshlq_n_s16(vmovl_s8(*(int8x8_t *)v15.i8), 9uLL)));
    int16x8_t v18 = vaddq_s16(a6[1], vqrdmulhq_s16(vsubq_s16(a6[1], v12), vshlq_n_s16(vmovl_high_s8(v15), 9uLL)));
    *uint64_t result = vaddq_s16(*result, vqrdmulhq_s16(vsubq_s16(*result, v9), vshlq_n_s16(vmovl_s8(*(int8x8_t *)v14.i8), 9uLL)));
    result[1] = v16;
    uint64_t result = (int16x8_t *)((char *)result + v6);
    *a6 = v17;
    a6[1] = v18;
    a6 = (int16x8_t *)((char *)a6 + v6);
  }
  while (!((a4 < 0) ^ v13 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AA1FB0(int16x8_t *result, uint64_t a2, int16x8_t *a3, uint64_t a4, int a5, int8x16_t *a6)
{
  do
  {
    int8x16_t v6 = *a6;
    int8x16_t v7 = a6[1];
    a6 += 2;
    int16x8_t v8 = *a3;
    int16x8_t v9 = a3[1];
    int16x8_t v10 = a3[2];
    int16x8_t v11 = a3[3];
    a3 += 4;
    BOOL v12 = __OFSUB__(a5--, 1);
    int8x16_t v13 = vnegq_s8(v6);
    int8x16_t v14 = vnegq_s8(v7);
    int16x8_t v15 = vaddq_s16(result[1], vqrdmulhq_s16(vsubq_s16(result[1], v9), vshlq_n_s16(vmovl_high_s8(v13), 9uLL)));
    int16x8_t v16 = vaddq_s16(result[2], vqrdmulhq_s16(vsubq_s16(result[2], v10), vshlq_n_s16(vmovl_s8(*(int8x8_t *)v14.i8), 9uLL)));
    int16x8_t v17 = vaddq_s16(result[3], vqrdmulhq_s16(vsubq_s16(result[3], v11), vshlq_n_s16(vmovl_high_s8(v14), 9uLL)));
    *uint64_t result = vaddq_s16(*result, vqrdmulhq_s16(vsubq_s16(*result, v8), vshlq_n_s16(vmovl_s8(*(int8x8_t *)v13.i8), 9uLL)));
    result[1] = v15;
    result[2] = v16;
    result[3] = v17;
    uint64_t result = (int16x8_t *)((char *)result + a2);
  }
  while (!((a5 < 0) ^ v12 | (a5 == 0)));
  return result;
}

uint64_t sub_224AA202C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)qword_224AA2260 - *((unsigned __int16 *)&qword_224AA2260[-6] + __clz(a4))))();
}

__int32 *sub_224AA205C@<X0>(__int32 *result@<X0>, uint64_t a2@<X1>, int16x4_t *a3@<X2>, int a4@<W4>, const char *a5@<X5>, __int32 *a6@<X8>)
{
  do
  {
    int8x8x2_t v10 = vld2_dup_s8(a5);
    a5 += 2;
    int16x4_t v6 = *a3++;
    BOOL v7 = __OFSUB__(a4, 2);
    a4 -= 2;
    v8.i32[0] = *result;
    v8.i32[1] = *a6;
    int16x4_t v9 = vadd_s16(v8, vqrdmulh_s16(vsub_s16(v8, v6), vshl_n_s16((int16x4_t)*(_OWORD *)&vmovl_s8(vneg_s8(vext_s8(v10.val[0], v10.val[1], 6uLL))), 9uLL)));
    *uint64_t result = v9.i32[0];
    uint64_t result = (__int32 *)((char *)result + a2);
    *a6 = v9.i32[1];
    a6 = (__int32 *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v7 | (a4 == 0)));
  return result;
}

uint64_t *sub_224AA209C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, int16x8_t *a3@<X2>, int a4@<W4>, const char *a5@<X5>, uint64_t *a6@<X8>)
{
  do
  {
    int8x8x2_t v10 = vld2_dup_s8(a5);
    a5 += 2;
    int16x8_t v6 = *a3++;
    BOOL v7 = __OFSUB__(a4, 2);
    a4 -= 2;
    v8.i64[0] = *result;
    v8.i64[1] = *a6;
    int16x8_t v9 = vaddq_s16(v8, vqrdmulhq_s16(vsubq_s16(v8, v6), vshlq_n_s16(vmovl_s8(vneg_s8(vext_s8(v10.val[0], v10.val[1], 4uLL))), 9uLL)));
    *uint64_t result = v9.i64[0];
    uint64_t result = (uint64_t *)((char *)result + a2);
    *a6 = v9.i64[1];
    a6 = (uint64_t *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v7 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AA20DC@<X0>(int16x8_t *result@<X0>, uint64_t a2@<X1>, int16x8_t *a3@<X2>, int a4@<W4>, const char *a5@<X5>, int16x8_t *a6@<X8>)
{
  do
  {
    int8x8x2_t v10 = vld2_dup_s8(a5);
    a5 += 2;
    int16x8_t v6 = *a3;
    int16x8_t v7 = a3[1];
    a3 += 2;
    BOOL v8 = __OFSUB__(a4, 2);
    a4 -= 2;
    int16x8_t v9 = vaddq_s16(*a6, vqrdmulhq_s16(vsubq_s16(*a6, v7), vshlq_n_s16(vmovl_s8(vneg_s8(v10.val[1])), 9uLL)));
    *uint64_t result = vaddq_s16(*result, vqrdmulhq_s16(vsubq_s16(*result, v6), vshlq_n_s16(vmovl_s8(vneg_s8(v10.val[0])), 9uLL)));
    uint64_t result = (int16x8_t *)((char *)result + a2);
    *a6 = v9;
    a6 = (int16x8_t *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v8 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AA2130@<X0>(int16x8_t *result@<X0>, uint64_t a2@<X1>, int16x8_t *a3@<X2>, int a4@<W4>, const char *a5@<X5>, int16x8_t *a6@<X8>)
{
  do
  {
    int16x8_t v14 = (int16x8_t)vld2_dup_s8(a5);
    a5 += 2;
    int16x8_t v6 = *a3;
    int16x8_t v7 = a3[1];
    int16x8_t v8 = a3[2];
    int16x8_t v9 = a3[3];
    a3 += 4;
    BOOL v10 = __OFSUB__(a4, 2);
    a4 -= 2;
    int16x8_t v14 = vshlq_n_s16(vmovl_s8(vneg_s8(*(int8x8_t *)v14.i8)), 9uLL);
    *(int16x8_t *)((char *)&v14 + 8) = vshlq_n_s16(vmovl_s8(vneg_s8((int8x8_t)v14.u64[1])), 9uLL);
    int16x8_t v11 = vaddq_s16(result[1], vqrdmulhq_s16(vsubq_s16(result[1], v7), v14));
    int16x8_t v12 = vaddq_s16(*a6, vqrdmulhq_s16(vsubq_s16(*a6, v8), *(int16x8_t *)((char *)&v14 + 8)));
    int16x8_t v13 = vaddq_s16(a6[1], vqrdmulhq_s16(vsubq_s16(a6[1], v9), *(int16x8_t *)((char *)&v14 + 8)));
    *uint64_t result = vaddq_s16(*result, vqrdmulhq_s16(vsubq_s16(*result, v6), v14));
    result[1] = v11;
    uint64_t result = (int16x8_t *)((char *)result + a2);
    *a6 = v12;
    a6[1] = v13;
    a6 = (int16x8_t *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v10 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AA219C@<X0>(int16x8_t *result@<X0>, uint64_t a2@<X1>, int16x8_t *a3@<X2>, unsigned int a4@<W3>, int a5@<W4>, const char *a6@<X5>, int16x8_t *a7@<X8>)
{
  uint64_t v7 = a2 - 2 * a4;
  int16x8_t v8 = (int16x8_t *)((char *)a3 + 2 * a4);
  do
  {
    int8x8x2_t v29 = vld2_dup_s8(a6);
    a6 += 2;
    int v9 = a4;
    int16x8_t v10 = vshlq_n_s16(vmovl_s8(vneg_s8(v29.val[0])), 9uLL);
    int16x8_t v11 = vshlq_n_s16(vmovl_s8(vneg_s8(v29.val[1])), 9uLL);
    do
    {
      int16x8_t v12 = *a3;
      int16x8_t v13 = a3[1];
      int16x8_t v14 = a3[2];
      int16x8_t v15 = a3[3];
      a3 += 4;
      BOOL v16 = __OFSUB__(v9, 32);
      v9 -= 32;
      int16x8_t v17 = *v8;
      int16x8_t v18 = v8[1];
      int16x8_t v19 = v8[2];
      int16x8_t v20 = v8[3];
      v8 += 4;
      int16x8_t v21 = *a7;
      int16x8_t v22 = a7[1];
      int16x8_t v23 = a7[2];
      int16x8_t v24 = a7[3];
      int16x8_t v25 = vaddq_s16(result[1], vqrdmulhq_s16(vsubq_s16(result[1], v13), v10));
      int16x8_t v26 = vaddq_s16(result[2], vqrdmulhq_s16(vsubq_s16(result[2], v14), v10));
      int16x8_t v27 = vaddq_s16(result[3], vqrdmulhq_s16(vsubq_s16(result[3], v15), v10));
      int16x8_t v28 = vqrdmulhq_s16(vsubq_s16(*a7, v17), v11);
      *uint64_t result = vaddq_s16(*result, vqrdmulhq_s16(vsubq_s16(*result, v12), v10));
      result[1] = v25;
      result[2] = v26;
      result[3] = v27;
      result += 4;
      *a7 = vaddq_s16(v21, v28);
      a7[1] = vaddq_s16(v22, vqrdmulhq_s16(vsubq_s16(v22, v18), v11));
      a7[2] = vaddq_s16(v23, vqrdmulhq_s16(vsubq_s16(v23, v19), v11));
      a7[3] = vaddq_s16(v24, vqrdmulhq_s16(vsubq_s16(v24, v20), v11));
      a7 += 4;
    }
    while (!((v9 < 0) ^ v16 | (v9 == 0)));
    BOOL v16 = __OFSUB__(a5, 2);
    a5 -= 2;
    uint64_t result = (int16x8_t *)((char *)result + v7);
    a7 = (int16x8_t *)((char *)a7 + v7);
    a3 = (int16x8_t *)((char *)a3 + 2 * a4);
    int16x8_t v8 = (int16x8_t *)((char *)v8 + 2 * a4);
  }
  while (!((a5 < 0) ^ v16 | (a5 == 0)));
  return result;
}

uint64_t sub_224AA2270(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&qword_224AA2480 - *((unsigned __int16 *)&qword_224AA2480 + __clz(a4) - 26)))();
}

__int16 *sub_224AA229C@<X0>(__int16 *result@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X2>, int a4@<W4>, const char *a5@<X5>, __int16 *a6@<X8>, int16x4_t a7@<D0>, int16x4_t a8@<D1>)
{
  int8x8_t v8 = vld1_dup_s8(a5);
  int16x4_t v9 = vshl_n_s16((int16x4_t)*(_OWORD *)&vmovl_s8(vneg_s8(v8)), 9uLL);
  do
  {
    a8.i32[0] = *a3;
    int16x8_t v10 = a3 + 1;
    a7.i16[0] = *result;
    BOOL v11 = __OFSUB__(a4, 2);
    a4 -= 2;
    a8.i16[1] = *v10;
    a7.i16[1] = *a6;
    a3 = v10 + 2;
    a8 = vqrdmulh_s16(vsub_s16(a7, a8), v9);
    a7 = vadd_s16(a7, a8);
    *uint64_t result = a7.i16[0];
    uint64_t result = (__int16 *)((char *)result + a2);
    *a6 = a7.i16[1];
    a6 = (__int16 *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v11 | (a4 == 0)));
  return result;
}

uint64_t *sub_224AA22E0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, int16x8_t *a3@<X2>, int a4@<W4>, const float *a5@<X5>, uint64_t *a6@<X8>)
{
  int8x8_t v6 = (int8x8_t)vld1_dup_f32(a5);
  uint64_t v7 = a2 - 4;
  int16x8_t v8 = vshlq_n_s16(vmovl_s8(vneg_s8(v6)), 9uLL);
  do
  {
    int16x8_t v9 = *a3++;
    v10.i64[0] = *result;
    v10.i64[1] = *a6;
    BOOL v11 = __OFSUB__(a4, 2);
    a4 -= 2;
    int16x8_t v12 = vaddq_s16(v10, vqrdmulhq_s16(vsubq_s16(v10, v9), v8));
    *(_DWORD *)uint64_t result = v12.i32[0];
    int16x8_t v13 = (_WORD *)result + 2;
    *(_DWORD *)a6 = v12.i32[2];
    int16x8_t v14 = (_WORD *)a6 + 2;
    *int16x8_t v13 = v12.i16[2];
    uint64_t result = (uint64_t *)((char *)v13 + v7);
    *int16x8_t v14 = v12.i16[6];
    a6 = (uint64_t *)((char *)v14 + v7);
  }
  while (!((a4 < 0) ^ v11 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AA2328@<X0>(int16x8_t *result@<X0>, uint64_t a2@<X1>, int16x8_t *a3@<X2>, int a4@<W4>, int8x8_t *a5@<X5>, int16x8_t *a6@<X8>)
{
  uint64_t v6 = a2 - 8;
  int16x8_t v7 = vshlq_n_s16(vmovl_s8(vneg_s8(*a5)), 9uLL);
  do
  {
    int16x8_t v8 = *a3;
    int16x8_t v9 = a3[1];
    a3 += 2;
    BOOL v10 = __OFSUB__(a4, 2);
    a4 -= 2;
    int16x8_t v11 = vaddq_s16(*result, vqrdmulhq_s16(vsubq_s16(*result, v8), v7));
    int16x8_t v12 = vaddq_s16(*a6, vqrdmulhq_s16(vsubq_s16(*a6, v9), v7));
    result->i64[0] = v11.i64[0];
    int16x8_t v13 = &result->i32[2];
    a6->i64[0] = v12.i64[0];
    int16x8_t v14 = &a6->i32[2];
    *int16x8_t v13 = v11.i32[2];
    uint64_t result = (int16x8_t *)((char *)v13 + v6);
    *int16x8_t v14 = v12.i32[2];
    a6 = (int16x8_t *)((char *)v14 + v6);
  }
  while (!((a4 < 0) ^ v10 | (a4 == 0)));
  return result;
}

char *sub_224AA237C@<X0>(char *result@<X0>, uint64_t a2@<X1>, int16x8_t *a3@<X2>, int a4@<W4>, int8x16_t *a5@<X5>, char *a6@<X8>)
{
  uint64_t v6 = a2 - 16;
  int8x16_t v7 = vnegq_s8(*a5);
  int16x8_t v8 = vshlq_n_s16(vmovl_s8(*(int8x8_t *)v7.i8), 9uLL);
  int16x4_t v9 = vshl_n_s16((int16x4_t)*(_OWORD *)&vmovl_high_s8(v7), 9uLL);
  do
  {
    int16x8_t v10 = *a3;
    int16x8_t v11 = a3[1];
    int16x8_t v12 = a3[2];
    int16x8_t v13 = a3[3];
    a3 += 4;
    BOOL v14 = __OFSUB__(a4, 2);
    a4 -= 2;
    int16x4_t v15 = vadd_s16(*(int16x4_t *)(result + 16), vqrdmulh_s16(vsub_s16(*(int16x4_t *)(result + 16), *(int16x4_t *)v11.i8), v9));
    int16x8_t v16 = vaddq_s16(*(int16x8_t *)a6, vqrdmulhq_s16(vsubq_s16(*(int16x8_t *)a6, v12), v8));
    int16x4_t v17 = vadd_s16(*(int16x4_t *)(a6 + 16), vqrdmulh_s16(vsub_s16(*(int16x4_t *)(a6 + 16), *(int16x4_t *)v13.i8), v9));
    *(int16x8_t *)uint64_t result = vaddq_s16(*(int16x8_t *)result, vqrdmulhq_s16(vsubq_s16(*(int16x8_t *)result, v10), v8));
    int16x8_t v18 = (int16x4_t *)(result + 16);
    *(int16x8_t *)a6 = v16;
    int16x8_t v19 = (int16x4_t *)(a6 + 16);
    *int16x8_t v18 = v15;
    uint64_t result = (char *)v18 + v6;
    *int16x8_t v19 = v17;
    a6 = (char *)v19 + v6;
  }
  while (!((a4 < 0) ^ v14 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AA23F0@<X0>(int16x8_t *result@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, int a4@<W4>, uint64_t a5@<X5>, int16x8_t *a6@<X8>)
{
  int8x16_t v6 = vnegq_s8(*(int8x16_t *)a5);
  int16x8_t v7 = vshlq_n_s16(vmovl_s8(*(int8x8_t *)v6.i8), 9uLL);
  int16x8_t v8 = vshlq_n_s16(vmovl_high_s8(v6), 9uLL);
  int16x8_t v9 = vshlq_n_s16(vmovl_s8(vneg_s8(*(int8x8_t *)(a5 + 16))), 9uLL);
  do
  {
    int16x8_t v11 = *(int16x8_t *)a3;
    int16x8_t v12 = *((int16x8_t *)a3 + 1);
    int16x8_t v13 = *((int16x8_t *)a3 + 2);
    int16x8_t v10 = a3 + 4;
    int16x8_t v14 = *(int16x8_t *)v10;
    int16x8_t v15 = *((int16x8_t *)v10 + 1);
    int16x8_t v16 = *((int16x8_t *)v10 + 2);
    a3 = v10 + 4;
    BOOL v17 = __OFSUB__(a4, 2);
    a4 -= 2;
    int16x8_t v18 = vaddq_s16(result[1], vqrdmulhq_s16(vsubq_s16(result[1], v12), v8));
    int16x8_t v19 = vaddq_s16(result[2], vqrdmulhq_s16(vsubq_s16(result[2], v13), v9));
    int16x8_t v20 = vaddq_s16(*a6, vqrdmulhq_s16(vsubq_s16(*a6, v14), v7));
    int16x8_t v21 = vaddq_s16(a6[1], vqrdmulhq_s16(vsubq_s16(a6[1], v15), v8));
    int16x8_t v22 = vaddq_s16(a6[2], vqrdmulhq_s16(vsubq_s16(a6[2], v16), v9));
    *uint64_t result = vaddq_s16(*result, vqrdmulhq_s16(vsubq_s16(*result, v11), v7));
    result[1] = v18;
    result[2] = v19;
    uint64_t result = (int16x8_t *)((char *)result + a2);
    *a6 = v20;
    a6[1] = v21;
    a6[2] = v22;
    a6 = (int16x8_t *)((char *)a6 + a2);
  }
  while (!((a4 < 0) ^ v17 | (a4 == 0)));
  return result;
}

uint64_t sub_224AA248C()
{
  return ((uint64_t (*)(void))((char *)qword_224AA25E0 - *((unsigned __int16 *)qword_224AA25E0 + v0)))();
}

_DWORD *sub_224AA249C(_DWORD *result, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    int v7 = *a3;
    int8x16_t v6 = (int *)((char *)a3 + a4);
    int v8 = *v6;
    a3 = (int *)((char *)v6 + a4);
    BOOL v9 = __OFSUB__(a6, 2);
    a6 -= 2;
    *uint64_t result = v7;
    int16x8_t v10 = (_DWORD *)((char *)result + a2);
    _DWORD *v10 = v8;
    uint64_t result = (_DWORD *)((char *)v10 + a2);
  }
  while (!((a6 < 0) ^ v9 | (a6 == 0)));
  return result;
}

void *sub_224AA24B8(void *result, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    uint64_t v7 = *a3;
    int8x16_t v6 = (uint64_t *)((char *)a3 + a4);
    uint64_t v8 = *v6;
    a3 = (uint64_t *)((char *)v6 + a4);
    BOOL v9 = __OFSUB__(a6, 2);
    a6 -= 2;
    *uint64_t result = v7;
    int16x8_t v10 = (void *)((char *)result + a2);
    void *v10 = v8;
    uint64_t result = (void *)((char *)v10 + a2);
  }
  while (!((a6 < 0) ^ v9 | (a6 == 0)));
  return result;
}

_OWORD *sub_224AA24D4(_OWORD *result, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, int a6)
{
  int8x16_t v6 = (_OWORD *)((char *)result + a2);
  uint64_t v7 = 2 * a2;
  uint64_t v8 = (long long *)((char *)a3 + a4);
  uint64_t v9 = 2 * a4;
  do
  {
    long long v10 = *a3;
    a3 = (long long *)((char *)a3 + v9);
    long long v11 = *v8;
    uint64_t v8 = (long long *)((char *)v8 + v9);
    BOOL v12 = __OFSUB__(a6, 2);
    a6 -= 2;
    *uint64_t result = v10;
    uint64_t result = (_OWORD *)((char *)result + v7);
    _OWORD *v6 = v11;
    int8x16_t v6 = (_OWORD *)((char *)v6 + v7);
  }
  while (!((a6 < 0) ^ v12 | (a6 == 0)));
  return result;
}

void *sub_224AA2500(void *result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    uint64_t v6 = a3[1];
    uint64_t v7 = a3[2];
    uint64_t v8 = a3[3];
    *uint64_t result = *a3;
    result[1] = v6;
    BOOL v9 = __OFSUB__(a6--, 1);
    result[2] = v7;
    result[3] = v8;
    a3 = (void *)((char *)a3 + a4);
    uint64_t result = (void *)((char *)result + a2);
  }
  while (!((a6 < 0) ^ v9 | (a6 == 0)));
  return result;
}

void *sub_224AA2524(void *result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    uint64_t v6 = a3[1];
    uint64_t v7 = a3[2];
    uint64_t v8 = a3[3];
    *uint64_t result = *a3;
    result[1] = v6;
    uint64_t v9 = a3[4];
    uint64_t v10 = a3[5];
    result[2] = v7;
    result[3] = v8;
    BOOL v11 = __OFSUB__(a6--, 1);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    result[4] = v9;
    result[5] = v10;
    result[6] = v12;
    result[7] = v13;
    a3 = (void *)((char *)a3 + a4);
    uint64_t result = (void *)((char *)result + a2);
  }
  while (!((a6 < 0) ^ v11 | (a6 == 0)));
  return result;
}

_OWORD *sub_224AA2558(_OWORD *result, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    long long v6 = a3[1];
    long long v7 = a3[2];
    long long v8 = a3[3];
    *uint64_t result = *a3;
    result[1] = v6;
    long long v9 = a3[4];
    long long v10 = a3[5];
    result[2] = v7;
    result[3] = v8;
    long long v11 = a3[6];
    long long v12 = a3[7];
    BOOL v13 = __OFSUB__(a6--, 1);
    result[4] = v9;
    result[5] = v10;
    result[6] = v11;
    result[7] = v12;
    a3 = (_OWORD *)((char *)a3 + a4);
    uint64_t result = (_OWORD *)((char *)result + a2);
  }
  while (!((a6 < 0) ^ v13 | (a6 == 0)));
  return result;
}

_OWORD *sub_224AA258C(_OWORD *result, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, int a6)
{
  do
  {
    long long v6 = a3[1];
    long long v7 = a3[2];
    long long v8 = a3[3];
    *uint64_t result = *a3;
    result[1] = v6;
    long long v9 = a3[4];
    long long v10 = a3[5];
    result[2] = v7;
    result[3] = v8;
    long long v11 = a3[6];
    long long v12 = a3[7];
    BOOL v13 = __OFSUB__(a6--, 1);
    result[4] = v9;
    result[5] = v10;
    long long v14 = a3[8];
    long long v15 = a3[9];
    result[6] = v11;
    result[7] = v12;
    long long v16 = a3[10];
    long long v17 = a3[11];
    result[8] = v14;
    result[9] = v15;
    long long v18 = a3[12];
    long long v19 = a3[13];
    result[10] = v16;
    result[11] = v17;
    long long v20 = a3[14];
    long long v21 = a3[15];
    result[12] = v18;
    result[13] = v19;
    result[14] = v20;
    result[15] = v21;
    a3 = (_OWORD *)((char *)a3 + a4);
    uint64_t result = (_OWORD *)((char *)result + a2);
  }
  while (!((a6 < 0) ^ v13 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA25F0()
{
  return ((uint64_t (*)(void))((char *)&dword_224AA2824 - *((unsigned __int16 *)&dword_224AA2824 + v0)))();
}

int16x8_t *sub_224AA2608(int16x8_t *result, uint64_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  long long v7 = (uint64_t *)((char *)a2 + a3);
  uint64_t v8 = 2 * a3;
  do
  {
    v9.i64[0] = *a2;
    a2 = (uint64_t *)((char *)a2 + v8);
    v9.i64[1] = *v7;
    long long v7 = (uint64_t *)((char *)v7 + v8);
    BOOL v10 = __OFSUB__(a5, 2);
    a5 -= 2;
    *result++ = vsubq_s16(vshlq_s16(v9, v6), v5);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AA2630(int16x8_t *result, int16x8_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  long long v7 = (int16x8_t *)((char *)a2 + a3);
  uint64_t v8 = 2 * a3;
  do
  {
    int16x8_t v9 = *a2;
    a2 = (int16x8_t *)((char *)a2 + v8);
    int16x8_t v10 = *v7;
    long long v7 = (int16x8_t *)((char *)v7 + v8);
    BOOL v11 = __OFSUB__(a5, 2);
    a5 -= 2;
    *uint64_t result = vsubq_s16(vshlq_s16(v9, v6), v5);
    result[1] = vsubq_s16(vshlq_s16(v10, v6), v5);
    result += 2;
  }
  while (!((a5 < 0) ^ v11 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AA2660(int16x8_t *result, int16x8_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  do
  {
    int16x8_t v7 = *a2;
    int16x8_t v8 = a2[1];
    int16x8_t v9 = (int16x8_t *)((char *)a2 + a3);
    int16x8_t v10 = *v9;
    int16x8_t v11 = v9[1];
    a2 = (int16x8_t *)((char *)v9 + a3);
    BOOL v12 = __OFSUB__(a5, 2);
    a5 -= 2;
    *uint64_t result = vsubq_s16(vshlq_s16(v7, v6), v5);
    result[1] = vsubq_s16(vshlq_s16(v8, v6), v5);
    result[2] = vsubq_s16(vshlq_s16(v10, v6), v5);
    result[3] = vsubq_s16(vshlq_s16(v11, v6), v5);
    result += 4;
  }
  while (!((a5 < 0) ^ v12 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AA26A0(int16x8_t *result, int16x8_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  do
  {
    int16x8_t v7 = a2[1];
    int16x8_t v8 = vshlq_s16(*a2, v6);
    int16x8_t v9 = a2[2];
    int16x8_t v10 = a2[3];
    a2 = (int16x8_t *)((char *)a2 + a3);
    BOOL v11 = __OFSUB__(a5--, 1);
    *uint64_t result = vsubq_s16(v8, v5);
    result[1] = vsubq_s16(vshlq_s16(v7, v6), v5);
    result[2] = vsubq_s16(vshlq_s16(v9, v6), v5);
    result[3] = vsubq_s16(vshlq_s16(v10, v6), v5);
    result += 4;
  }
  while (!((a5 < 0) ^ v11 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AA26DC@<X0>(int16x8_t *result@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, uint64_t a5@<X8>)
{
  do
  {
    BOOL v7 = __OFSUB__(a4--, 1);
    int16x8_t v8 = vshlq_s16(*a2, v6);
    int16x8_t v9 = vshlq_s16(a2[1], v6);
    int16x8_t v10 = a2[4];
    int16x8_t v11 = a2[5];
    int16x8_t v12 = vshlq_s16(a2[2], v6);
    int16x8_t v13 = vshlq_s16(a2[3], v6);
    int16x8_t v14 = a2[6];
    int16x8_t v15 = a2[7];
    a2 = (int16x8_t *)((char *)a2 + a3);
    *uint64_t result = vsubq_s16(v8, v5);
    result[1] = vsubq_s16(v9, v5);
    result[2] = vsubq_s16(v12, v5);
    result[3] = vsubq_s16(v13, v5);
    result[4] = vsubq_s16(vshlq_s16(v10, v6), v5);
    result[5] = vsubq_s16(vshlq_s16(v11, v6), v5);
    result[6] = vsubq_s16(vshlq_s16(v14, v6), v5);
    result[7] = vsubq_s16(vshlq_s16(v15, v6), v5);
    uint64_t result = (int16x8_t *)((char *)result + a5);
  }
  while (!((a4 < 0) ^ v7 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AA2750@<X0>(int16x8_t *result@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, uint64_t a5@<X8>)
{
  do
  {
    BOOL v7 = __OFSUB__(a4--, 1);
    int16x8_t v8 = vshlq_s16(*a2, v6);
    int16x8_t v9 = vshlq_s16(a2[1], v6);
    int16x8_t v10 = vshlq_s16(a2[2], v6);
    int16x8_t v11 = vshlq_s16(a2[3], v6);
    int16x8_t v12 = vshlq_s16(a2[4], v6);
    int16x8_t v13 = vshlq_s16(a2[5], v6);
    int16x8_t v14 = vshlq_s16(a2[6], v6);
    int16x8_t v15 = vshlq_s16(a2[7], v6);
    int16x8_t v16 = vshlq_s16(a2[8], v6);
    int16x8_t v17 = vshlq_s16(a2[9], v6);
    int16x8_t v18 = a2[12];
    int16x8_t v19 = a2[13];
    int16x8_t v20 = vshlq_s16(a2[10], v6);
    int16x8_t v21 = vshlq_s16(a2[11], v6);
    int16x8_t v22 = a2[14];
    int16x8_t v23 = a2[15];
    a2 = (int16x8_t *)((char *)a2 + a3);
    *uint64_t result = vsubq_s16(v8, v5);
    result[1] = vsubq_s16(v9, v5);
    result[2] = vsubq_s16(v10, v5);
    result[3] = vsubq_s16(v11, v5);
    result[4] = vsubq_s16(v12, v5);
    result[5] = vsubq_s16(v13, v5);
    result[6] = vsubq_s16(v14, v5);
    result[7] = vsubq_s16(v15, v5);
    result[8] = vsubq_s16(v16, v5);
    result[9] = vsubq_s16(v17, v5);
    result[10] = vsubq_s16(v20, v5);
    result[11] = vsubq_s16(v21, v5);
    result[12] = vsubq_s16(vshlq_s16(v18, v6), v5);
    result[13] = vsubq_s16(vshlq_s16(v19, v6), v5);
    result[14] = vsubq_s16(vshlq_s16(v22, v6), v5);
    result[15] = vsubq_s16(vshlq_s16(v23, v6), v5);
    uint64_t result = (int16x8_t *)((char *)result + a5);
  }
  while (!((a4 < 0) ^ v7 | (a4 == 0)));
  return result;
}

uint64_t sub_224AA2830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224AA286C(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_224AA283C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224AA286C(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_224AA2848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224AA286C(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_224AA2854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224AA286C(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_224AA2860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224AA286C(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_224AA286C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  int v10 = 16513 * a7 + v8;
  int v11 = 16513 * a8 + v9;
  uint64_t v12 = __clz(a5) - 24;
  if ((v10 & 0x1FC000) != 0)
  {
    if ((v11 & 0x1FC000) != 0) {
      return ((uint64_t (*)(void))((char *)qword_224AA3B90 - *((unsigned __int16 *)qword_224AA3B90 + v12)))();
    }
    else {
      return ((uint64_t (*)(void))((char *)qword_224AA2B60 - *((unsigned __int16 *)qword_224AA2B60 + v12)))();
    }
  }
  else if ((v11 & 0x1FC000) != 0)
  {
    return ((uint64_t (*)(void))((char *)&dword_224AA3374 - *((unsigned __int16 *)&dword_224AA3374 + v12)))();
  }
  else
  {
    return sub_224AA248C();
  }
}

uint64_t sub_224AA3BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224AA3BD0(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_224AA3BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224AA3BD0(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_224AA3BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224AA3BD0(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_224AA3BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  return sub_224AA3BD0(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_224AA3BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7, int a8)
{
  int v10 = 16513 * a7 + v8;
  int v11 = 16513 * a8 + v9;
  uint64_t v12 = __clz(a5) - 24;
  if ((v10 & 0x1FC000) != 0)
  {
    if ((v11 & 0x1FC000) != 0) {
      return ((uint64_t (*)(void))((char *)qword_224AA4DA8 - *((unsigned __int16 *)qword_224AA4DA8 + v12)))();
    }
    else {
      return ((uint64_t (*)(void))((char *)&dword_224AA3E9C - *((unsigned __int16 *)&dword_224AA3E9C + v12)))();
    }
  }
  else if ((v11 & 0x1FC000) != 0)
  {
    return ((uint64_t (*)(void))((char *)qword_224AA4628 - *((unsigned __int16 *)qword_224AA4628 + v12)))();
  }
  else
  {
    return sub_224AA248C();
  }
}

uint64_t sub_224AA4DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, unsigned int a7, unsigned int a8)
{
  __n128 v8 = (__n128)vdupq_n_s16(a7);
  __n128 v9 = (__n128)vdupq_n_s16(a8);
  __n128 v10 = (__n128)vdupq_n_s16(16 - a7);
  __n128 v11 = (__n128)vdupq_n_s16(16 - a8);
  uint64_t v12 = __clz(a5) - 24;
  if (a7)
  {
    if (a8) {
      return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)qword_224AA53D8
    }
                                                                     - *((unsigned __int16 *)qword_224AA53D8 + v12)))(v10, v8, v11, v9);
    else {
      return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)qword_224AA4FD0
    }
                                                                     - *((unsigned __int16 *)qword_224AA4FD0 + v12)))(v10, v8, v11, v9);
  }
  else if (a8)
  {
    return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)qword_224AA51D0
                                                                   - *((unsigned __int16 *)qword_224AA51D0 + v12)))(v10, v8, v11, v9);
  }
  else
  {
    return sub_224AA248C();
  }
}

_DWORD *sub_224AA5200(_DWORD *result, uint64_t a2, int16x4_t *a3, uint64_t a4, int16x4_t a5, int16x4_t a6, uint16x4_t a7, uint16x4_t a8, uint64_t a9, int a10)
{
  uint64_t v12 = (int32x2_t *)((char *)a3 + a4);
  int16x8_t v13 = (_DWORD *)((char *)result + a2);
  uint64_t v14 = 2 * a4;
  uint64_t v15 = 2 * a2;
  int16x4_t v17 = *a3;
  int16x8_t v16 = (int32x2_t *)((char *)a3 + v14);
  for (int32x2_t i = (int32x2_t)vrshl_u16((uint16x4_t)vmla_s16(vmul_s16(v17, a5), (int16x4_t)vext_s8((int8x8_t)v17, (int8x8_t)v17, 2uLL), a6), v11); ; int32x2_t i = vtrn2_s32(v21, v21))
  {
    int32x2_t v19 = *v12;
    uint64_t v12 = (int32x2_t *)((char *)v12 + v14);
    int32x2_t v20 = *v16;
    int16x8_t v16 = (int32x2_t *)((char *)v16 + v14);
    int32x2_t v21 = (int32x2_t)vrshl_u16((uint16x4_t)vmla_s16(vmul_s16((int16x4_t)vtrn1_s32(v19, v20), a5), (int16x4_t)vtrn1_s32((int32x2_t)vext_s8((int8x8_t)v19, (int8x8_t)v19, 2uLL), (int32x2_t)vext_s8((int8x8_t)v20, (int8x8_t)v20, 2uLL)), a6), v11);
    int16x4_t v22 = vmovn_s32((int32x4_t)vrshlq_u32(vmlal_u16(vmull_u16((uint16x4_t)vtrn1_s32(i, v21), a7), (uint16x4_t)v21, a8), v10));
    BOOL v23 = __OFSUB__(a10, 2);
    a10 -= 2;
    *uint64_t result = v22.i32[0];
    uint64_t result = (_DWORD *)((char *)result + v15);
    *int16x8_t v13 = v22.i32[1];
    int16x8_t v13 = (_DWORD *)((char *)v13 + v15);
    if ((a10 < 0) ^ v23 | (a10 == 0)) {
      break;
    }
  }
  return result;
}

void *sub_224AA5278(void *result, uint64_t a2, int8x16_t *a3, uint64_t a4, int16x8_t a5, int16x8_t a6, uint16x8_t a7, uint16x8_t a8, uint64_t a9, int a10)
{
  int16x8_t v13 = (int64x2_t *)&a3->i8[a4];
  uint64_t v14 = (void *)((char *)result + a2);
  uint64_t v15 = 2 * a4;
  uint64_t v16 = 2 * a2;
  int8x16_t v18 = *a3;
  int16x4_t v17 = (int64x2_t *)&a3->i8[v15];
  *(uint16x4_t *)v10.i8 = vrshl_u16((uint16x4_t)vmla_s16(vmul_s16(*(int16x4_t *)v18.i8, *(int16x4_t *)a5.i8), (int16x4_t)*(_OWORD *)&vextq_s8(v18, v18, 2uLL), *(int16x4_t *)a6.i8), *(uint16x4_t *)v12.i8);
  while (1)
  {
    int64x2_t v19 = *v13;
    int16x8_t v13 = (int64x2_t *)((char *)v13 + v15);
    int64x2_t v20 = *v17;
    int16x4_t v17 = (int64x2_t *)((char *)v17 + v15);
    int64x2_t v21 = (int64x2_t)vrshlq_u16((uint16x8_t)vmlaq_s16(vmulq_s16((int16x8_t)vtrn1q_s64(v19, v20), a5), (int16x8_t)vtrn1q_s64((int64x2_t)vextq_s8((int8x16_t)v19, (int8x16_t)v19, 2uLL), (int64x2_t)vextq_s8((int8x16_t)v20, (int8x16_t)v20, 2uLL)), a6), v12);
    uint16x8_t v22 = (uint16x8_t)vtrn1q_s64(v10, v21);
    int16x8_t v23 = vuzp1q_s16((int16x8_t)vrshlq_u32(vmlal_u16(vmull_u16(*(uint16x4_t *)v22.i8, *(uint16x4_t *)a7.i8), *(uint16x4_t *)v21.i8, *(uint16x4_t *)a8.i8), v11), (int16x8_t)vrshlq_u32(vmlal_high_u16(vmull_high_u16(v22, a7), (uint16x8_t)v21, a8), v11));
    BOOL v24 = __OFSUB__(a10, 2);
    a10 -= 2;
    *uint64_t result = v23.i64[0];
    uint64_t result = (void *)((char *)result + v16);
    *uint64_t v14 = v23.i64[1];
    uint64_t v14 = (void *)((char *)v14 + v16);
    if ((a10 < 0) ^ v24 | (a10 == 0)) {
      break;
    }
    int64x2_t v10 = vtrn2q_s64(v21, v21);
  }
  return result;
}

int16x8_t *sub_224AA52FC(int16x8_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int16x8_t a7, int16x8_t a8, uint16x8_t a9, uint16x8_t a10)
{
  for (i = a6; ; uint64_t result = (int16x8_t *)((char *)result - a2 * i + 16))
  {
    uint64_t v16 = (int16x8_t *)(a3 + a4);
    int16x4_t v17 = (int16x8_t *)((char *)result + a2);
    uint64_t v18 = 2 * a4;
    uint64_t v19 = 2 * a2;
    v10.i16[0] = *(_WORD *)(a3 + 16);
    int16x8_t v21 = *(int16x8_t *)a3;
    int64x2_t v20 = (int16x8_t *)(a3 + v18);
    int16x8_t v10 = (int16x8_t)vextq_s8((int8x16_t)v21, (int8x16_t)v10, 2uLL);
    for (uint16x8_t j = vrshlq_u16((uint16x8_t)vmlaq_s16(vmulq_s16(v21, a7), v10, a8), v14); ; uint16x8_t j = v26)
    {
      v11.i16[0] = v16[1].i16[0];
      int16x8_t v23 = *v16;
      uint64_t v16 = (int16x8_t *)((char *)v16 + v18);
      v12.i16[0] = v20[1].i16[0];
      int16x8_t v24 = *v20;
      int64x2_t v20 = (int16x8_t *)((char *)v20 + v18);
      int16x8_t v11 = (int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)v11, 2uLL);
      int16x8_t v12 = (int16x8_t)vextq_s8((int8x16_t)v24, (int8x16_t)v12, 2uLL);
      uint16x8_t v25 = vrshlq_u16((uint16x8_t)vmlaq_s16(vmulq_s16(v23, a7), v11, a8), v14);
      uint16x8_t v26 = vrshlq_u16((uint16x8_t)vmlaq_s16(vmulq_s16(v24, a7), v12, a8), v14);
      BOOL v27 = __OFSUB__(a6, 2);
      a6 -= 2;
      *uint64_t result = vuzp1q_s16((int16x8_t)vrshlq_u32(vmlal_u16(vmull_u16(*(uint16x4_t *)j.i8, *(uint16x4_t *)a9.i8), *(uint16x4_t *)v25.i8, *(uint16x4_t *)a10.i8), v13), (int16x8_t)vrshlq_u32(vmlal_high_u16(vmull_high_u16(j, a9), v25, a10), v13));
      uint64_t result = (int16x8_t *)((char *)result + v19);
      *int16x4_t v17 = vuzp1q_s16((int16x8_t)vrshlq_u32(vmlal_u16(vmull_u16(*(uint16x4_t *)v25.i8, *(uint16x4_t *)a9.i8), *(uint16x4_t *)v26.i8, *(uint16x4_t *)a10.i8), v13), (int16x8_t)vrshlq_u32(vmlal_high_u16(vmull_high_u16(v25, a9), v26, a10), v13));
      int16x4_t v17 = (int16x8_t *)((char *)v17 + v19);
      if ((a6 < 0) ^ v27 | (a6 == 0)) {
        break;
      }
    }
    BOOL v27 = __OFSUB__(a5, 8);
    a5 -= 8;
    if ((a5 < 0) ^ v27 | (a5 == 0)) {
      break;
    }
    a4 = v18 >> 1;
    a2 = v19 >> 1;
    a6 = i;
    a3 = (uint64_t)v20[1].i64 - a4 * i + -2 * a4;
  }
  return result;
}

uint64_t sub_224AA53E8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224AA5424(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_224AA53F4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224AA5424(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_224AA5400(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224AA5424(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_224AA540C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224AA5424(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_224AA5418(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224AA5424(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_224AA5424(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  int v9 = 16513 * a6 + v7;
  int v10 = 16513 * a7 + v8;
  uint64_t v11 = __clz(a4) - 24;
  if ((v9 & 0x1FC000) != 0)
  {
    if ((v10 & 0x1FC000) != 0) {
      return ((uint64_t (*)(void))((char *)qword_224AA6318 - *((unsigned __int16 *)qword_224AA6318 + v11)))();
    }
    else {
      return ((uint64_t (*)(void))((char *)&dword_224AA5684 - *((unsigned __int16 *)&dword_224AA5684 + v11)))();
    }
  }
  else if ((v10 & 0x1FC000) != 0)
  {
    return ((uint64_t (*)(void))((char *)&dword_224AA5CDC - *((unsigned __int16 *)&dword_224AA5CDC + v11)))();
  }
  else
  {
    return sub_224AA25F0();
  }
}

uint64_t sub_224AA6328(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224AA6358(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_224AA6334(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224AA6358(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_224AA6340(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224AA6358(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_224AA634C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  return sub_224AA6358(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_224AA6358(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, int a7)
{
  int v9 = 16513 * a6 + v7;
  int v10 = 16513 * a7 + v8;
  uint64_t v11 = __clz(a4) - 24;
  if ((v9 & 0x1FC000) != 0)
  {
    if ((v10 & 0x1FC000) != 0) {
      return ((uint64_t (*)(void))((char *)qword_224AA7120 - *((unsigned __int16 *)qword_224AA7120 + v11)))();
    }
    else {
      return ((uint64_t (*)(void))((char *)qword_224AA6590 - *((unsigned __int16 *)qword_224AA6590 + v11)))();
    }
  }
  else if ((v10 & 0x1FC000) != 0)
  {
    return ((uint64_t (*)(void))((char *)qword_224AA6B78 - *((unsigned __int16 *)qword_224AA6B78 + v11)))();
  }
  else
  {
    return sub_224AA25F0();
  }
}

uint64_t sub_224AA7130(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, unsigned int a6, unsigned int a7)
{
  __n128 v7 = (__n128)vdupq_n_s16(a6);
  __n128 v8 = (__n128)vdupq_n_s16(a7);
  __n128 v9 = (__n128)vdupq_n_s16(16 - a6);
  __n128 v10 = (__n128)vdupq_n_s16(16 - a7);
  uint64_t v11 = __clz(a4) - 24;
  if (a6)
  {
    if (a7) {
      return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)&dword_224AA7604
    }
                                                                     - *((unsigned __int16 *)&dword_224AA7604 + v11)))(v9, v7, v10, v8);
    else {
      return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)&dword_224AA72F4
    }
                                                                     - *((unsigned __int16 *)&dword_224AA72F4 + v11)))(v9, v7, v10, v8);
  }
  else if (a7)
  {
    return ((uint64_t (*)(__n128, __n128, __n128, __n128))((char *)qword_224AA7478
                                                                   - *((unsigned __int16 *)qword_224AA7478 + v11)))(v9, v7, v10, v8);
  }
  else
  {
    return sub_224AA25F0();
  }
}

void *sub_224AA74A4@<X0>(void *result@<X0>, int8x16_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, uint64_t a5@<X8>, int16x8_t a6@<Q0>, int16x8_t a7@<Q1>, uint16x8_t a8@<Q2>, uint16x8_t a9@<Q3>)
{
  int16x8_t v12 = (int64x2_t *)&a2->i8[a3];
  uint32x4_t v13 = (void *)((char *)result + a5);
  uint64_t v14 = 2 * a3;
  uint64_t v15 = 2 * a5;
  int8x16_t v17 = *a2;
  uint64_t v16 = (int64x2_t *)&a2->i8[v14];
  *(uint16x4_t *)v9.i8 = vrshl_u16((uint16x4_t)vmla_s16(vmul_s16(*(int16x4_t *)v17.i8, *(int16x4_t *)a6.i8), (int16x4_t)*(_OWORD *)&vextq_s8(v17, v17, 2uLL), *(int16x4_t *)a7.i8), *(uint16x4_t *)v11.i8);
  while (1)
  {
    int64x2_t v18 = *v12;
    int16x8_t v12 = (int64x2_t *)((char *)v12 + v14);
    int64x2_t v19 = *v16;
    uint64_t v16 = (int64x2_t *)((char *)v16 + v14);
    int64x2_t v20 = (int64x2_t)vrshlq_u16((uint16x8_t)vmlaq_s16(vmulq_s16((int16x8_t)vtrn1q_s64(v18, v19), a6), (int16x8_t)vtrn1q_s64((int64x2_t)vextq_s8((int8x16_t)v18, (int8x16_t)v18, 2uLL), (int64x2_t)vextq_s8((int8x16_t)v19, (int8x16_t)v19, 2uLL)), a7), v11);
    uint16x8_t v21 = (uint16x8_t)vtrn1q_s64(v9, v20);
    int16x8_t v22 = vsubq_s16(vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v21.i8, *(uint16x4_t *)a8.i8), *(uint16x4_t *)v20.i8, *(uint16x4_t *)a9.i8), 4uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v21, a8), (uint16x8_t)v20, a9), 4uLL), v10);
    BOOL v23 = __OFSUB__(a4, 2);
    a4 -= 2;
    *uint64_t result = v22.i64[0];
    uint64_t result = (void *)((char *)result + v15);
    *uint32x4_t v13 = v22.i64[1];
    uint32x4_t v13 = (void *)((char *)v13 + v15);
    if ((a4 < 0) ^ v23 | (a4 == 0)) {
      break;
    }
    int64x2_t v9 = vtrn2q_s64(v20, v20);
  }
  return result;
}

int16x8_t *sub_224AA7528@<X0>(int16x8_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X8>, int16x8_t a7@<Q0>, int16x8_t a8@<Q1>, uint16x8_t a9@<Q2>, uint16x8_t a10@<Q3>)
{
  for (i = a5; ; uint64_t result = (int16x8_t *)((char *)result - a6 * i + 16))
  {
    uint64_t v16 = (int16x8_t *)(a2 + a3);
    int8x16_t v17 = (int16x8_t *)((char *)result + a6);
    uint64_t v18 = 2 * a3;
    uint64_t v19 = 2 * a6;
    v10.i16[0] = *(_WORD *)(a2 + 16);
    int16x8_t v21 = *(int16x8_t *)a2;
    int64x2_t v20 = (int16x8_t *)(a2 + v18);
    int16x8_t v10 = (int16x8_t)vextq_s8((int8x16_t)v21, (int8x16_t)v10, 2uLL);
    for (uint16x8_t j = vrshlq_u16((uint16x8_t)vmlaq_s16(vmulq_s16(v21, a7), v10, a8), v14); ; uint16x8_t j = v26)
    {
      v11.i16[0] = v16[1].i16[0];
      int16x8_t v23 = *v16;
      uint64_t v16 = (int16x8_t *)((char *)v16 + v18);
      v12.i16[0] = v20[1].i16[0];
      int16x8_t v24 = *v20;
      int64x2_t v20 = (int16x8_t *)((char *)v20 + v18);
      int16x8_t v11 = (int16x8_t)vextq_s8((int8x16_t)v23, (int8x16_t)v11, 2uLL);
      int16x8_t v12 = (int16x8_t)vextq_s8((int8x16_t)v24, (int8x16_t)v12, 2uLL);
      uint16x8_t v25 = vrshlq_u16((uint16x8_t)vmlaq_s16(vmulq_s16(v23, a7), v11, a8), v14);
      uint16x8_t v26 = vrshlq_u16((uint16x8_t)vmlaq_s16(vmulq_s16(v24, a7), v12, a8), v14);
      BOOL v27 = __OFSUB__(a5, 2);
      a5 -= 2;
      *uint64_t result = vsubq_s16(vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)j.i8, *(uint16x4_t *)a9.i8), *(uint16x4_t *)v25.i8, *(uint16x4_t *)a10.i8), 4uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(j, a9), v25, a10), 4uLL), v13);
      uint64_t result = (int16x8_t *)((char *)result + v19);
      *int8x16_t v17 = vsubq_s16(vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v25.i8, *(uint16x4_t *)a9.i8), *(uint16x4_t *)v26.i8, *(uint16x4_t *)a10.i8), 4uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v25, a9), v26, a10), 4uLL), v13);
      int8x16_t v17 = (int16x8_t *)((char *)v17 + v19);
      if ((a5 < 0) ^ v27 | (a5 == 0)) {
        break;
      }
    }
    BOOL v27 = __OFSUB__(a4, 8);
    a4 -= 8;
    if ((a4 < 0) ^ v27 | (a4 == 0)) {
      break;
    }
    a3 = v18 >> 1;
    a6 = v19 >> 1;
    a5 = i;
    a2 = (uint64_t)v20[1].i64 - a3 * i + -2 * a3;
  }
  return result;
}

double sub_224AA7614(uint64_t a1, uint64_t a2, int8x16_t *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int8x16_t v9 = a3[1];
  int v10 = a6 + 512 + a8 + a8;
  int16x8_t v11 = vmovl_s8(*(int8x8_t *)(v8 + 8 * (v10 >> 10)));
  int16x8_t v12 = vmovl_s8(*(int8x8_t *)(v8 + 8 * ((v10 + a8) >> 10)));
  int16x8_t v13 = (int16x8_t)vextq_s8(*a3, v9, 4uLL);
  int16x8_t v14 = (int16x8_t)vextq_s8(*a3, v9, 6uLL);
  *(void *)&double result = vpaddq_s32(vpaddq_s32(vmull_s16(*(int16x4_t *)v13.i8, *(int16x4_t *)v11.i8), vmull_high_s16(v13, v11)), vpaddq_s32(vmull_s16(*(int16x4_t *)v14.i8, *(int16x4_t *)v12.i8), vmull_high_s16(v14, v12))).u64[0];
  return result;
}

uint64_t sub_224AA7740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, unsigned int a8)
{
  uint16x8_t v8 = (uint16x8_t)vdupq_n_s16(a8);
  int32x4_t v9 = vdupq_n_s32(11 - __clz(a8));
  sub_224AA7614(a1, a2, (int8x16_t *)(a3 - 2 * a4 - a4 - 6), a4, *a5 >> 48, a6, a7, (__int16)*a5);
  sub_224AA7614(v10, v11, v12, v13, v14, v15, v16, v17);
  sub_224AA7614(v18, v19, v20, v21, v22, v23, v24, v25);
  sub_224AA7614(v26, v27, v28, v29, v30, v31, v32, v33);
  sub_224AA7614(v34, v35, v36, v37, v38, v39, v40, v41);
  sub_224AA7614(v42, v43, v44, v45, v46, v47, v48, v49);
  sub_224AA7614(v50, v51, v52, v53, v54, v55, v56, v57);
  do
  {
    sub_224AA7614(result, v59, v60, v61, v62, v63, v64, v65);
    int16x8_t v68 = vuzp1q_s16(v66, v67);
    int v70 = v69 >> 10;
    int v72 = v69 + v71;
    v74.i64[0] = *(void *)(v73 + 8 * v70);
    int v75 = v72 >> 10;
    int v76 = v72 + v71;
    v77.i64[0] = *(void *)(v73 + 8 * v75);
    int v78 = v76 >> 10;
    int v79 = v76 + v71;
    v80.i64[0] = *(void *)(v73 + 8 * v78);
    int v81 = v79 >> 10;
    int v82 = v79 + v71;
    v83.i64[0] = *(void *)(v73 + 8 * v81);
    int v84 = v82 >> 10;
    int v85 = v82 + v71;
    v86.i64[0] = *(void *)(v73 + 8 * v84);
    int v87 = v85 >> 10;
    int v88 = v85 + v71;
    v89.i64[0] = *(void *)(v73 + 8 * v87);
    v90.i64[0] = *(void *)(v73 + 8 * (v88 >> 10));
    v91.i64[0] = *(void *)(v73 + 8 * ((v88 + v71) >> 10));
    int16x8_t v92 = (int16x8_t)vzip1q_s8(v74, v77);
    int16x8_t v93 = (int16x8_t)vzip1q_s8(v80, v83);
    int16x8_t v94 = (int16x8_t)vzip1q_s8(v86, v89);
    int16x8_t v95 = (int16x8_t)vzip1q_s8(v90, v91);
    int32x4_t v96 = (int32x4_t)vtrn1q_s16(v92, v93);
    int32x4_t v97 = (int32x4_t)vtrn2q_s16(v92, v93);
    int32x4_t v98 = (int32x4_t)vtrn1q_s16(v94, v95);
    int32x4_t v99 = (int32x4_t)vtrn2q_s16(v94, v95);
    int8x16_t v100 = (int8x16_t)vtrn1q_s32(v96, v98);
    int8x16_t v101 = (int8x16_t)vtrn2q_s32(v96, v98);
    int8x16_t v102 = (int8x16_t)vtrn1q_s32(v97, v99);
    int8x16_t v103 = (int8x16_t)vtrn2q_s32(v97, v99);
    int16x8_t v104 = vmovl_high_s8(v100);
    int16x8_t v105 = vmovl_s8(*(int8x8_t *)v100.i8);
    int16x8_t v106 = vmovl_high_s8(v101);
    int16x8_t v107 = vmovl_s8(*(int8x8_t *)v101.i8);
    int16x8_t v108 = vmovl_high_s8(v102);
    int16x8_t v109 = vmovl_s8(*(int8x8_t *)v102.i8);
    int16x8_t v110 = vmovl_high_s8(v103);
    int16x8_t v111 = vmovl_s8(*(int8x8_t *)v103.i8);
    *int16x4_t v119 = vminq_u16((uint16x8_t)vqmovun_high_s32(vqmovun_s32(vrshlq_s32(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmull_s16(*(int16x4_t *)v112.i8, *(int16x4_t *)v105.i8), *(int16x4_t *)v113.i8, *(int16x4_t *)v109.i8), *(int16x4_t *)v114.i8, *(int16x4_t *)v107.i8), *(int16x4_t *)v115.i8, *(int16x4_t *)v111.i8), *(int16x4_t *)v116.i8, *(int16x4_t *)v104.i8),
                                      *(int16x4_t *)v117.i8,
                                      *(int16x4_t *)v108.i8),
                                    *(int16x4_t *)v118.i8,
                                    *(int16x4_t *)v106.i8),
                                  *(int16x4_t *)v68.i8,
                                  *(int16x4_t *)v110.i8),
                                v9)),
                            vrshlq_s32(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmull_high_s16(v112, v105), v113, v109), v114, v107), v115, v111), v116, v104), v117, v108), v118, v106), v68, v110),
                              v9)),
              v8);
    uint64_t result = (uint64_t)v119->i64 + v59;
    uint64_t v64 = (v120 + v62);
  }
  while (v121 > 1);
  return result;
}

uint64_t sub_224AA7924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7)
{
  v7.i64[0] = 0x2000200020002000;
  v7.i64[1] = 0x2000200020002000;
  sub_224AA7614(a1, 2 * a2, (int8x16_t *)(a3 - 2 * a4 - a4 - 6), a4, *a5 >> 48, a6, a7, (__int16)*a5);
  sub_224AA7614(v8, v9, v10, v11, v12, v13, v14, v15);
  sub_224AA7614(v16, v17, v18, v19, v20, v21, v22, v23);
  sub_224AA7614(v24, v25, v26, v27, v28, v29, v30, v31);
  sub_224AA7614(v32, v33, v34, v35, v36, v37, v38, v39);
  sub_224AA7614(v40, v41, v42, v43, v44, v45, v46, v47);
  sub_224AA7614(v48, v49, v50, v51, v52, v53, v54, v55);
  do
  {
    sub_224AA7614(result, v57, v58, v59, v60, v61, v62, v63);
    int16x8_t v66 = vuzp1q_s16(v64, v65);
    int v68 = v67 >> 10;
    int v70 = v67 + v69;
    v72.i64[0] = *(void *)(v71 + 8 * v68);
    int v73 = v70 >> 10;
    int v74 = v70 + v69;
    v75.i64[0] = *(void *)(v71 + 8 * v73);
    int v76 = v74 >> 10;
    int v77 = v74 + v69;
    v78.i64[0] = *(void *)(v71 + 8 * v76);
    int v79 = v77 >> 10;
    int v80 = v77 + v69;
    v81.i64[0] = *(void *)(v71 + 8 * v79);
    int v82 = v80 >> 10;
    int v83 = v80 + v69;
    v84.i64[0] = *(void *)(v71 + 8 * v82);
    int v85 = v83 >> 10;
    int v86 = v83 + v69;
    v87.i64[0] = *(void *)(v71 + 8 * v85);
    v88.i64[0] = *(void *)(v71 + 8 * (v86 >> 10));
    v89.i64[0] = *(void *)(v71 + 8 * ((v86 + v69) >> 10));
    int16x8_t v90 = (int16x8_t)vzip1q_s8(v72, v75);
    int16x8_t v91 = (int16x8_t)vzip1q_s8(v78, v81);
    int16x8_t v92 = (int16x8_t)vzip1q_s8(v84, v87);
    int16x8_t v93 = (int16x8_t)vzip1q_s8(v88, v89);
    int32x4_t v94 = (int32x4_t)vtrn1q_s16(v90, v91);
    int32x4_t v95 = (int32x4_t)vtrn2q_s16(v90, v91);
    int32x4_t v96 = (int32x4_t)vtrn1q_s16(v92, v93);
    int32x4_t v97 = (int32x4_t)vtrn2q_s16(v92, v93);
    int8x16_t v98 = (int8x16_t)vtrn1q_s32(v94, v96);
    int8x16_t v99 = (int8x16_t)vtrn2q_s32(v94, v96);
    int8x16_t v100 = (int8x16_t)vtrn1q_s32(v95, v97);
    int8x16_t v101 = (int8x16_t)vtrn2q_s32(v95, v97);
    int16x8_t v102 = vmovl_high_s8(v98);
    int16x8_t v103 = vmovl_s8(*(int8x8_t *)v98.i8);
    int16x8_t v104 = vmovl_high_s8(v99);
    int16x8_t v105 = vmovl_s8(*(int8x8_t *)v99.i8);
    int16x8_t v106 = vmovl_high_s8(v100);
    int16x8_t v107 = vmovl_s8(*(int8x8_t *)v100.i8);
    int16x8_t v108 = vmovl_high_s8(v101);
    int16x8_t v109 = vmovl_s8(*(int8x8_t *)v101.i8);
    *int16x8_t v117 = vsubq_s16(vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmlal_s16(vmull_s16(*(int16x4_t *)v110.i8, *(int16x4_t *)v103.i8), *(int16x4_t *)v111.i8, *(int16x4_t *)v107.i8), *(int16x4_t *)v112.i8, *(int16x4_t *)v105.i8), *(int16x4_t *)v113.i8, *(int16x4_t *)v109.i8), *(int16x4_t *)v114.i8, *(int16x4_t *)v102.i8), *(int16x4_t *)v115.i8,
                        *(int16x4_t *)v106.i8),
                      *(int16x4_t *)v116.i8,
                      *(int16x4_t *)v104.i8),
                    *(int16x4_t *)v66.i8,
                    *(int16x4_t *)v108.i8),
                  7uLL),
                vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmlal_high_s16(vmull_high_s16(v110, v103), v111, v107), v112, v105), v113, v109), v114, v102), v115, v106), v116, v104), v66, v108), 7uLL), v7);
    uint64_t result = (uint64_t)v117->i64 + v57;
    uint64_t v62 = (v118 + v60);
  }
  while (v119 > 1);
  return result;
}

uint64_t sub_224AA7AF8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10 = a4 - 1;
  uint64_t v11 = a3 - 1;
  if (a6 < a4) {
    uint64_t v10 = a6;
  }
  uint64_t v12 = v10 & ~(v10 >> 63);
  if (a5 < a3) {
    uint64_t v11 = a5;
  }
  int v13 = (const __int16 *)(a9 + v12 * a10 + 2 * (v11 & ~(v11 >> 63)));
  uint64_t v14 = a6 + a2 - a4;
  uint64_t v15 = -a6 & ~(-a6 >> 63);
  if (v14 >= a2) {
    uint64_t v14 = a2 - 1;
  }
  uint64_t v16 = v14 & ~(v14 >> 63);
  if (v15 >= a2) {
    uint64_t v15 = a2 - 1;
  }
  uint64_t v17 = a5 + result - a3;
  uint64_t v18 = -a5 & ~(-a5 >> 63);
  if (v17 >= result) {
    uint64_t v17 = result - 1;
  }
  uint64_t v19 = v17 & ~(v17 >> 63);
  if (v18 >= result) {
    uint64_t v18 = result - 1;
  }
  uint64_t v20 = (long long *)(a7 + v15 * a8);
  uint64_t v21 = a2 - v15 - v16;
  uint64_t v22 = result - v18 - v19;
  int v23 = v20;
  if (v18)
  {
    if (v19)
    {
      do
      {
        int16x8_t v24 = vld1q_dup_s16(v13);
        uint64_t v25 = (int16x8_t *)v20;
        uint64_t v26 = v18;
        do
        {
          BOOL v27 = v26 <= 16;
          v26 -= 16;
          *uint64_t v25 = v24;
          v25[1] = v24;
          v25 += 2;
        }
        while (!v27);
        uint64_t v28 = v13;
        int v29 = (long long *)((char *)v20 + 2 * v18);
        uint64_t v30 = result - v18 - v19;
        do
        {
          long long v31 = *(_OWORD *)v28;
          long long v32 = *((_OWORD *)v28 + 1);
          long long v33 = *((_OWORD *)v28 + 2);
          long long v34 = *((_OWORD *)v28 + 3);
          v28 += 32;
          BOOL v27 = v30 <= 32;
          v30 -= 32;
          *int v29 = v31;
          v29[1] = v32;
          v29[2] = v33;
          v29[3] = v34;
          v29 += 4;
        }
        while (!v27);
        uint64_t v35 = &v13[v22 - 1];
        int16x8_t v36 = vld1q_dup_s16(v35);
        int v37 = (int16x8_t *)((char *)v20 + 2 * v18 + 2 * v22);
        uint64_t v38 = v19;
        do
        {
          BOOL v27 = v38 <= 16;
          v38 -= 16;
          *int v37 = v36;
          v37[1] = v36;
          v37 += 2;
        }
        while (!v27);
        BOOL v27 = v21-- <= 1;
        uint64_t v20 = (long long *)((char *)v20 + a8);
        int v13 = (const __int16 *)((char *)v13 + a10);
      }
      while (!v27);
    }
    else
    {
      do
      {
        int16x8_t v50 = vld1q_dup_s16(v13);
        uint64_t v51 = (int16x8_t *)v20;
        uint64_t v52 = v18;
        do
        {
          BOOL v27 = v52 <= 16;
          v52 -= 16;
          *uint64_t v51 = v50;
          v51[1] = v50;
          v51 += 2;
        }
        while (!v27);
        int v53 = v13;
        uint64_t v54 = (long long *)((char *)v20 + 2 * v18);
        uint64_t v55 = result - v18 - v19;
        do
        {
          long long v56 = *(_OWORD *)v53;
          long long v57 = *((_OWORD *)v53 + 1);
          long long v58 = *((_OWORD *)v53 + 2);
          long long v59 = *((_OWORD *)v53 + 3);
          v53 += 32;
          BOOL v27 = v55 <= 32;
          v55 -= 32;
          *uint64_t v54 = v56;
          v54[1] = v57;
          v54[2] = v58;
          v54[3] = v59;
          v54 += 4;
        }
        while (!v27);
        BOOL v27 = v21-- <= 1;
        uint64_t v20 = (long long *)((char *)v20 + a8);
        int v13 = (const __int16 *)((char *)v13 + a10);
      }
      while (!v27);
    }
  }
  else if (v19)
  {
    do
    {
      int v39 = v13;
      uint64_t v40 = v20;
      uint64_t v41 = result - v19;
      do
      {
        long long v42 = *(_OWORD *)v39;
        long long v43 = *((_OWORD *)v39 + 1);
        long long v44 = *((_OWORD *)v39 + 2);
        long long v45 = *((_OWORD *)v39 + 3);
        v39 += 32;
        BOOL v27 = v41 <= 32;
        v41 -= 32;
        *uint64_t v40 = v42;
        v40[1] = v43;
        v40[2] = v44;
        v40[3] = v45;
        v40 += 4;
      }
      while (!v27);
      uint64_t v46 = &v13[v22 - 1];
      int16x8_t v47 = vld1q_dup_s16(v46);
      uint64_t v48 = (int16x8_t *)((char *)v20 + 2 * v22);
      uint64_t v49 = v19;
      do
      {
        BOOL v27 = v49 <= 16;
        v49 -= 16;
        int16x8_t *v48 = v47;
        v48[1] = v47;
        v48 += 2;
      }
      while (!v27);
      BOOL v27 = v21-- <= 1;
      uint64_t v20 = (long long *)((char *)v20 + a8);
      int v13 = (const __int16 *)((char *)v13 + a10);
    }
    while (!v27);
  }
  else
  {
    do
    {
      uint64_t v60 = v13;
      int v61 = v20;
      uint64_t v62 = result - v19;
      do
      {
        long long v63 = *(_OWORD *)v60;
        long long v64 = *((_OWORD *)v60 + 1);
        long long v65 = *((_OWORD *)v60 + 2);
        long long v66 = *((_OWORD *)v60 + 3);
        v60 += 32;
        BOOL v27 = v62 <= 32;
        v62 -= 32;
        long long *v61 = v63;
        v61[1] = v64;
        v61[2] = v65;
        v61[3] = v66;
        v61 += 4;
      }
      while (!v27);
      BOOL v27 = v21-- <= 1;
      uint64_t v20 = (long long *)((char *)v20 + a8);
      int v13 = (const __int16 *)((char *)v13 + a10);
    }
    while (!v27);
  }
  if (v16)
  {
    int v67 = (long long *)((char *)v20 - a8);
    uint64_t v68 = result;
    do
    {
      long long v69 = *v67;
      long long v70 = v67[1];
      long long v71 = v67[2];
      long long v72 = v67[3];
      v67 += 4;
      uint64_t v73 = v16;
      do
      {
        BOOL v27 = v73-- <= 1;
        *uint64_t v20 = v69;
        v20[1] = v70;
        v20[2] = v71;
        v20[3] = v72;
        uint64_t v20 = (long long *)((char *)v20 + a8);
      }
      while (!v27);
      BOOL v27 = v68 <= 32;
      v68 -= 32;
      uint64_t v20 = (long long *)((char *)v20 - a8 * v16 + 64);
    }
    while (!v27);
  }
  if (v15)
  {
    int v74 = (long long *)((char *)v23 - a8 * v15);
    do
    {
      long long v75 = *v23;
      long long v76 = v23[1];
      long long v77 = v23[2];
      long long v78 = v23[3];
      v23 += 4;
      uint64_t v79 = v15;
      do
      {
        BOOL v27 = v79-- <= 1;
        _OWORD *v74 = v75;
        v74[1] = v76;
        v74[2] = v77;
        v74[3] = v78;
        int v74 = (_OWORD *)((char *)v74 + a8);
      }
      while (!v27);
      BOOL v27 = result <= 32;
      result -= 32;
      int v74 = (_OWORD *)((char *)v74 - a8 * v15 + 64);
    }
    while (!v27);
  }
  return result;
}

_OWORD *sub_224AA7D3C(uint64_t a1, long long *a2, uint64_t a3, int *a4, long long *a5, long long *a6, int a7, char a8)
{
  *(void *)&long long v8 = 0x8000800080008000;
  *((void *)&v8 + 1) = 0x8000800080008000;
  uint64_t v9 = a1 - 68;
  if ((a8 & 4) != 0)
  {
    uint64_t v12 = (long long *)((char *)a5 + a3);
    if (a8)
    {
      uint64_t v13 = (uint64_t)a5 - 4;
      uint64_t v14 = (long long *)((char *)v12 - 4);
      if ((a8 & 2) != 0)
      {
        uint64_t v15 = *(void *)(v13 + 16);
        long long v16 = *v14;
        uint64_t v17 = *((void *)v14 + 2);
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v13;
        *(void *)(v9 + 16) = v15;
        uint64_t v18 = v9 + 32;
        *(_OWORD *)uint64_t v18 = v16;
        *(void *)(v18 + 16) = v17;
      }
      else
      {
        int v19 = *(_DWORD *)(v13 + 16);
        long long v20 = *v14;
        int v21 = *((_DWORD *)v14 + 4);
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v13;
        *(_DWORD *)(v9 + 16) = v19;
        *(_DWORD *)(v9 + 20) = -2147450880;
        uint64_t v18 = v9 + 32;
        *(_OWORD *)uint64_t v18 = v20;
        *(_DWORD *)(v18 + 16) = v21;
        *(_DWORD *)(v18 + 20) = -2147450880;
      }
      uint64_t v11 = (_OWORD *)(v18 + 32);
    }
    else
    {
      long long v22 = *a5;
      if ((a8 & 2) != 0)
      {
        int v23 = *((_DWORD *)a5 + 4);
        long long v24 = *v12;
        int v25 = *((_DWORD *)v12 + 4);
        *(_DWORD *)uint64_t v9 = -2147450880;
        *(_OWORD *)(v9 + 4) = v22;
        *(_DWORD *)(v9 + 20) = v23;
        uint64_t v26 = v9 + 32;
        *(_DWORD *)uint64_t v26 = -2147450880;
        *(_OWORD *)(v26 + 4) = v24;
        *(_DWORD *)(v26 + 20) = v25;
      }
      else
      {
        long long v27 = *v12;
        *(_DWORD *)uint64_t v9 = -2147450880;
        *(_OWORD *)(v9 + 4) = v22;
        *(_DWORD *)(v9 + 20) = -2147450880;
        uint64_t v26 = v9 + 32;
        *(_DWORD *)uint64_t v26 = -2147450880;
        *(_OWORD *)(v26 + 4) = v27;
        *(_DWORD *)(v26 + 20) = -2147450880;
      }
      uint64_t v11 = (_OWORD *)(v26 + 32);
    }
  }
  else
  {
    *(_OWORD *)uint64_t v9 = v8;
    *(_OWORD *)(v9 + 16) = v8;
    uint64_t v10 = (_OWORD *)(v9 + 32);
    _OWORD *v10 = v8;
    v10[1] = v8;
    uint64_t v11 = v10 + 2;
  }
  if (a8)
  {
    if ((a8 & 2) != 0)
    {
      do
      {
        int v28 = *a4++;
        int v29 = *((_DWORD *)a2 + 4);
        long long v30 = *a2;
        a2 = (long long *)((char *)a2 + a3);
        BOOL v31 = __OFSUB__(a7--, 1);
        *(_DWORD *)uint64_t v11 = v28;
        *(_OWORD *)((char *)v11 + 4) = v30;
        *((_DWORD *)v11 + 5) = v29;
        v11 += 2;
      }
      while (!((a7 < 0) ^ v31 | (a7 == 0)));
    }
    else
    {
      do
      {
        int v32 = *a4++;
        long long v33 = *a2;
        a2 = (long long *)((char *)a2 + a3);
        BOOL v31 = __OFSUB__(a7--, 1);
        *(_DWORD *)uint64_t v11 = v32;
        *(_OWORD *)((char *)v11 + 4) = v33;
        *((_DWORD *)v11 + 5) = -2147450880;
        v11 += 2;
      }
      while (!((a7 < 0) ^ v31 | (a7 == 0)));
    }
  }
  else if ((a8 & 2) != 0)
  {
    do
    {
      int v34 = *((_DWORD *)a2 + 4);
      long long v35 = *a2;
      a2 = (long long *)((char *)a2 + a3);
      BOOL v31 = __OFSUB__(a7--, 1);
      *(_DWORD *)uint64_t v11 = -2147450880;
      *(_OWORD *)((char *)v11 + 4) = v35;
      *((_DWORD *)v11 + 5) = v34;
      v11 += 2;
    }
    while (!((a7 < 0) ^ v31 | (a7 == 0)));
  }
  else
  {
    do
    {
      long long v36 = *a2;
      a2 = (long long *)((char *)a2 + a3);
      BOOL v31 = __OFSUB__(a7--, 1);
      *(_DWORD *)uint64_t v11 = -2147450880;
      *(_OWORD *)((char *)v11 + 4) = v36;
      *((_DWORD *)v11 + 5) = -2147450880;
      v11 += 2;
    }
    while (!((a7 < 0) ^ v31 | (a7 == 0)));
  }
  if ((a8 & 8) != 0)
  {
    int v39 = (long long *)((char *)a6 + a3);
    if (a8)
    {
      uint64_t v40 = (uint64_t)a6 - 4;
      uint64_t v41 = (long long *)((char *)v39 - 4);
      if ((a8 & 2) != 0)
      {
        uint64_t v42 = *(void *)(v40 + 16);
        long long v43 = *v41;
        uint64_t v44 = *((void *)v41 + 2);
        *uint64_t v11 = *(_OWORD *)v40;
        *((void *)v11 + 2) = v42;
        uint64_t result = v11 + 2;
        *uint64_t result = v43;
        *((void *)result + 2) = v44;
      }
      else
      {
        int v45 = *(_DWORD *)(v40 + 16);
        long long v46 = *v41;
        int v47 = *((_DWORD *)v41 + 4);
        *uint64_t v11 = *(_OWORD *)v40;
        *((_DWORD *)v11 + 4) = v45;
        *((_DWORD *)v11 + 5) = -2147450880;
        uint64_t result = v11 + 2;
        *uint64_t result = v46;
        *((_DWORD *)result + 4) = v47;
        *((_DWORD *)result + 5) = -2147450880;
      }
    }
    else
    {
      long long v48 = *a6;
      if ((a8 & 2) != 0)
      {
        int v49 = *((_DWORD *)a6 + 4);
        long long v50 = *v39;
        int v51 = *((_DWORD *)v39 + 4);
        *(_DWORD *)uint64_t v11 = -2147450880;
        *(_OWORD *)((char *)v11 + 4) = v48;
        *((_DWORD *)v11 + 5) = v49;
        uint64_t result = v11 + 2;
        *(_DWORD *)uint64_t result = -2147450880;
        *(_OWORD *)((char *)result + 4) = v50;
        *((_DWORD *)result + 5) = v51;
      }
      else
      {
        long long v52 = *v39;
        *(_DWORD *)uint64_t v11 = -2147450880;
        *(_OWORD *)((char *)v11 + 4) = v48;
        *((_DWORD *)v11 + 5) = -2147450880;
        uint64_t result = v11 + 2;
        *(_DWORD *)uint64_t result = -2147450880;
        *(_OWORD *)((char *)result + 4) = v52;
        *((_DWORD *)result + 5) = -2147450880;
      }
    }
  }
  else
  {
    *uint64_t v11 = v8;
    v11[1] = v8;
    int v37 = v11 + 2;
    *int v37 = v8;
    v37[1] = v8;
    return v37 + 2;
  }
  return result;
}

uint64_t sub_224AA7FC8(uint64_t a1, uint64_t *a2, uint64_t a3, int *a4, uint64_t *a5, uint64_t *a6, int a7, char a8)
{
  *(void *)&long long v8 = 0x8000800080008000;
  *((void *)&v8 + 1) = 0x8000800080008000;
  uint64_t v9 = a1 - 36;
  if ((a8 & 4) != 0)
  {
    uint64_t v11 = (uint64_t *)((char *)a5 + a3);
    if (a8)
    {
      uint64_t v12 = (uint64_t *)((char *)a5 - 4);
      uint64_t v13 = (uint64_t *)((char *)v11 - 4);
      if ((a8 & 2) != 0)
      {
        uint64_t v14 = v12[1];
        uint64_t v15 = *v13;
        uint64_t v16 = v13[1];
        *(void *)uint64_t v9 = *v12;
        *(void *)(v9 + 8) = v14;
        uint64_t v17 = v9 + 16;
        *(void *)uint64_t v17 = v15;
        *(void *)(v17 + 8) = v16;
      }
      else
      {
        int v18 = *((_DWORD *)v12 + 2);
        uint64_t v19 = *v13;
        int v20 = *((_DWORD *)v13 + 2);
        *(void *)uint64_t v9 = *v12;
        *(_DWORD *)(v9 + 8) = v18;
        *(_DWORD *)(v9 + 12) = -2147450880;
        uint64_t v17 = v9 + 16;
        *(void *)uint64_t v17 = v19;
        *(_DWORD *)(v17 + 8) = v20;
        *(_DWORD *)(v17 + 12) = -2147450880;
      }
      uint64_t v10 = v17 + 16;
    }
    else
    {
      uint64_t v21 = *a5;
      if ((a8 & 2) != 0)
      {
        int v22 = *((_DWORD *)a5 + 2);
        uint64_t v23 = *v11;
        int v24 = *((_DWORD *)v11 + 2);
        *(_DWORD *)uint64_t v9 = -2147450880;
        *(void *)(v9 + 4) = v21;
        *(_DWORD *)(v9 + 12) = v22;
        uint64_t v25 = v9 + 16;
        *(_DWORD *)uint64_t v25 = -2147450880;
        *(void *)(v25 + 4) = v23;
        *(_DWORD *)(v25 + 12) = v24;
      }
      else
      {
        uint64_t v26 = *v11;
        *(_DWORD *)uint64_t v9 = -2147450880;
        *(void *)(v9 + 4) = v21;
        *(_DWORD *)(v9 + 12) = -2147450880;
        uint64_t v25 = v9 + 16;
        *(_DWORD *)uint64_t v25 = -2147450880;
        *(void *)(v25 + 4) = v26;
        *(_DWORD *)(v25 + 12) = -2147450880;
      }
      uint64_t v10 = v25 + 16;
    }
  }
  else
  {
    *(_OWORD *)uint64_t v9 = v8;
    *(_OWORD *)(v9 + 16) = v8;
    uint64_t v10 = v9 + 32;
  }
  if (a8)
  {
    if ((a8 & 2) != 0)
    {
      do
      {
        int v27 = *a4++;
        int v28 = *((_DWORD *)a2 + 2);
        uint64_t v29 = *a2;
        a2 = (uint64_t *)((char *)a2 + a3);
        BOOL v30 = __OFSUB__(a7--, 1);
        *(_DWORD *)uint64_t v10 = v27;
        *(void *)(v10 + 4) = v29;
        *(_DWORD *)(v10 + 12) = v28;
        v10 += 16;
      }
      while (!((a7 < 0) ^ v30 | (a7 == 0)));
    }
    else
    {
      do
      {
        int v31 = *a4++;
        uint64_t v32 = *a2;
        a2 = (uint64_t *)((char *)a2 + a3);
        BOOL v30 = __OFSUB__(a7--, 1);
        *(_DWORD *)uint64_t v10 = v31;
        *(void *)(v10 + 4) = v32;
        *(_DWORD *)(v10 + 12) = -2147450880;
        v10 += 16;
      }
      while (!((a7 < 0) ^ v30 | (a7 == 0)));
    }
  }
  else if ((a8 & 2) != 0)
  {
    do
    {
      int v33 = *((_DWORD *)a2 + 2);
      uint64_t v34 = *a2;
      a2 = (uint64_t *)((char *)a2 + a3);
      BOOL v30 = __OFSUB__(a7--, 1);
      *(_DWORD *)uint64_t v10 = -2147450880;
      *(void *)(v10 + 4) = v34;
      *(_DWORD *)(v10 + 12) = v33;
      v10 += 16;
    }
    while (!((a7 < 0) ^ v30 | (a7 == 0)));
  }
  else
  {
    do
    {
      uint64_t v35 = *a2;
      a2 = (uint64_t *)((char *)a2 + a3);
      BOOL v30 = __OFSUB__(a7--, 1);
      *(_DWORD *)uint64_t v10 = -2147450880;
      *(void *)(v10 + 4) = v35;
      *(_DWORD *)(v10 + 12) = -2147450880;
      v10 += 16;
    }
    while (!((a7 < 0) ^ v30 | (a7 == 0)));
  }
  if ((a8 & 8) != 0)
  {
    int v37 = (uint64_t *)((char *)a6 + a3);
    if (a8)
    {
      uint64_t v38 = (uint64_t *)((char *)a6 - 4);
      int v39 = (uint64_t *)((char *)v37 - 4);
      if ((a8 & 2) != 0)
      {
        uint64_t v40 = v38[1];
        uint64_t v41 = *v39;
        uint64_t v42 = v39[1];
        *(void *)uint64_t v10 = *v38;
        *(void *)(v10 + 8) = v40;
        uint64_t result = v10 + 16;
        *(void *)uint64_t result = v41;
        *(void *)(result + 8) = v42;
      }
      else
      {
        int v43 = *((_DWORD *)v38 + 2);
        uint64_t v44 = *v39;
        int v45 = *((_DWORD *)v39 + 2);
        *(void *)uint64_t v10 = *v38;
        *(_DWORD *)(v10 + 8) = v43;
        *(_DWORD *)(v10 + 12) = -2147450880;
        uint64_t result = v10 + 16;
        *(void *)uint64_t result = v44;
        *(_DWORD *)(result + 8) = v45;
        *(_DWORD *)(result + 12) = -2147450880;
      }
    }
    else
    {
      uint64_t v46 = *a6;
      if ((a8 & 2) != 0)
      {
        int v47 = *((_DWORD *)a6 + 2);
        uint64_t v48 = *v37;
        int v49 = *((_DWORD *)v37 + 2);
        *(_DWORD *)uint64_t v10 = -2147450880;
        *(void *)(v10 + 4) = v46;
        *(_DWORD *)(v10 + 12) = v47;
        uint64_t result = v10 + 16;
        *(_DWORD *)uint64_t result = -2147450880;
        *(void *)(result + 4) = v48;
        *(_DWORD *)(result + 12) = v49;
      }
      else
      {
        uint64_t v50 = *v37;
        *(_DWORD *)uint64_t v10 = -2147450880;
        *(void *)(v10 + 4) = v46;
        *(_DWORD *)(v10 + 12) = -2147450880;
        uint64_t result = v10 + 16;
        *(_DWORD *)uint64_t result = -2147450880;
        *(void *)(result + 4) = v50;
        *(_DWORD *)(result + 12) = -2147450880;
      }
    }
  }
  else
  {
    *(_OWORD *)uint64_t v10 = v8;
    *(_OWORD *)(v10 + 16) = v8;
    return v10 + 32;
  }
  return result;
}

int16x8_t *sub_224AA824C(int16x8_t *result, uint64_t a2, int16x8_t *a3, unsigned int a4, uint64_t a5, unsigned int a6, unsigned int a7, int a8, uint64_t a9, unsigned int a10)
{
  uint64_t v11 = (unsigned __int8 *)&unk_2646ED534 + 2 * ((a4 >> (24 - __clz(a10))) & 1);
  uint64_t v12 = (char *)&unk_2646ED4FC + 2 * a6;
  uint16x8_t v13 = (uint16x8_t)vdupq_n_s16(a4);
  uint16x8_t v14 = (uint16x8_t)vdupq_lane_s16(vneg_s16((int16x4_t)vqsub_u16((uint16x4_t)vdup_n_s16(a7), (uint16x4_t)vsub_s16((int16x4_t)0xF000F000F000FLL, vclz_s16(vtrn1_s16(*(int16x4_t *)v13.i8, v10))))), 0);
  do
  {
    int16x8_t v15 = *a3;
    int16x8_t v16 = 0uLL;
    int v17 = 2;
    do
    {
      int16x8_t v18 = *(int16x8_t *)((char *)a3 + 2 * *v12);
      int16x8_t v19 = *(int16x8_t *)((char *)a3 - 2 * *v12);
      int16x8_t v20 = (int16x8_t)vqsubq_u16(v13, vshlq_u16(vabdq_u16((uint16x8_t)v15, (uint16x8_t)v18), v14));
      int16x8_t v21 = (int16x8_t)vqsubq_u16(v13, vshlq_u16(vabdq_u16((uint16x8_t)v15, (uint16x8_t)v19), v14));
      int16x8_t v22 = vdupq_n_s16(*v11);
      int16x8_t v16 = vmlaq_s16(vmlaq_s16(v16, vmaxq_s16(vminq_s16(vsubq_s16(v18, v15), v20), vnegq_s16(v20)), v22), vmaxq_s16(vminq_s16(vsubq_s16(v19, v15), v21), vnegq_s16(v21)), v22);
      ++v12;
      --v17;
      ++v11;
    }
    while (v17);
    a3 += 2;
    BOOL v23 = __OFSUB__(a8--, 1);
    *uint64_t result = vaddq_s16(v15, vrshrq_n_s16(vaddq_s16(v16, vcltzq_s16(v16)), 4uLL));
    uint64_t result = (int16x8_t *)((char *)result + a2);
    v12 -= 2;
    v11 -= 2;
  }
  while (!((a8 < 0) ^ v23 | (a8 == 0)));
  return result;
}

int16x8_t *sub_224AA8344(int16x8_t *result, uint64_t a2, int16x8_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8)
{
  uint64_t v9 = (char *)&unk_2646ED4FC + 2 * a6;
  uint16x8_t v10 = (uint16x8_t)vdupq_n_s16(a5);
  uint16x8_t v11 = (uint16x8_t)vdupq_lane_s16(vneg_s16((int16x4_t)vqsub_u16((uint16x4_t)vdup_n_s16(a7), (uint16x4_t)vsub_s16((int16x4_t)0xF000F000F000FLL, vclz_s16(vtrn1_s16(v8, *(int16x4_t *)v10.i8))))), 1);
  do
  {
    int16x8_t v12 = *a3;
    int16x8_t v13 = 0uLL;
    unsigned int v14 = 2;
    do
    {
      int16x8_t v15 = v9 + 4;
      int16x8_t v16 = *(int16x8_t *)((char *)a3 + 2 * *v15);
      int16x8_t v17 = *(int16x8_t *)((char *)a3 - 2 * *v15);
      v15 += 8;
      int16x8_t v18 = *(int16x8_t *)((char *)a3 + 2 * *v15);
      int16x8_t v19 = *(int16x8_t *)((char *)a3 - 2 * *v15);
      int16x8_t v20 = (int16x8_t)vqsubq_u16(v10, vshlq_u16(vabdq_u16((uint16x8_t)v12, (uint16x8_t)v16), v11));
      int16x8_t v21 = (int16x8_t)vqsubq_u16(v10, vshlq_u16(vabdq_u16((uint16x8_t)v12, (uint16x8_t)v17), v11));
      int16x8_t v22 = vdupq_n_s16(v14);
      int16x8_t v23 = vmlaq_s16(vmlaq_s16(v13, vmaxq_s16(vminq_s16(vsubq_s16(v16, v12), v20), vnegq_s16(v20)), v22), vmaxq_s16(vminq_s16(vsubq_s16(v17, v12), v21), vnegq_s16(v21)), v22);
      int16x8_t v24 = (int16x8_t)vqsubq_u16(v10, vshlq_u16(vabdq_u16((uint16x8_t)v12, (uint16x8_t)v18), v11));
      int16x8_t v25 = (int16x8_t)vqsubq_u16(v10, vshlq_u16(vabdq_u16((uint16x8_t)v12, (uint16x8_t)v19), v11));
      int16x8_t v13 = vmlaq_s16(vmlaq_s16(v23, vmaxq_s16(vminq_s16(vsubq_s16(v18, v12), v24), vnegq_s16(v24)), v22), vmaxq_s16(vminq_s16(vsubq_s16(v19, v12), v25), vnegq_s16(v25)), v22);
      uint64_t v9 = v15 - 11;
      --v14;
    }
    while (v14);
    a3 += 2;
    BOOL v26 = __OFSUB__(a8--, 1);
    *uint64_t result = vaddq_s16(v12, vrshrq_n_s16(vaddq_s16(v13, vcltzq_s16(v13)), 4uLL));
    uint64_t result = (int16x8_t *)((char *)result + a2);
    v9 -= 2;
  }
  while (!((a8 < 0) ^ v26 | (a8 == 0)));
  return result;
}

int16x8_t *sub_224AA846C(int16x8_t *result, uint64_t a2, int16x8_t *a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8, uint64_t a9, unsigned int a10)
{
  uint16x8_t v10 = (unsigned __int8 *)&unk_2646ED534 + 2 * ((a4 >> (24 - __clz(a10))) & 1);
  uint16x8_t v11 = (char *)&unk_2646ED4FC + 2 * a6;
  uint16x8_t v12 = (uint16x8_t)vdupq_n_s16(a4);
  uint16x8_t v13 = (uint16x8_t)vdupq_n_s16(a5);
  int16x4_t v14 = vneg_s16((int16x4_t)vqsub_u16((uint16x4_t)vdup_n_s16(a7), (uint16x4_t)vsub_s16((int16x4_t)0xF000F000F000FLL, vclz_s16(vtrn1_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)v13.i8)))));
  uint16x8_t v15 = (uint16x8_t)vdupq_lane_s16(v14, 1);
  uint16x8_t v16 = (uint16x8_t)vdupq_lane_s16(v14, 0);
  do
  {
    int16x8_t v17 = *a3;
    int16x8_t v18 = 0uLL;
    int16x8_t v19 = *a3;
    int16x8_t v20 = *a3;
    unsigned int v21 = 2;
    do
    {
      int16x8_t v22 = *(int16x8_t *)((char *)a3 + 2 * *v11);
      int16x8_t v23 = *(int16x8_t *)((char *)a3 - 2 * *v11);
      int16x8_t v24 = v11 + 4;
      int16x8_t v25 = *(int16x8_t *)((char *)a3 + 2 * *v24);
      int16x8_t v26 = *(int16x8_t *)((char *)a3 - 2 * *v24);
      uint16x8_t v27 = vminq_u16(vminq_u16((uint16x8_t)v19, (uint16x8_t)v22), (uint16x8_t)v23);
      int16x8_t v28 = vmaxq_s16(vmaxq_s16(v20, v22), v23);
      int16x8_t v29 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v17, (uint16x8_t)v22), v16));
      int16x8_t v30 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v17, (uint16x8_t)v23), v16));
      int16x8_t v31 = vdupq_n_s16(*v10);
      int16x8_t v32 = vmlaq_s16(vmlaq_s16(v18, vmaxq_s16(vminq_s16(vsubq_s16(v22, v17), v29), vnegq_s16(v29)), v31), vmaxq_s16(vminq_s16(vsubq_s16(v23, v17), v30), vnegq_s16(v30)), v31);
      v24 += 8;
      int16x8_t v33 = *(int16x8_t *)((char *)a3 + 2 * *v24);
      int16x8_t v34 = *(int16x8_t *)((char *)a3 - 2 * *v24);
      int16x8_t v35 = (int16x8_t)vqsubq_u16(v13, vshlq_u16(vabdq_u16((uint16x8_t)v17, (uint16x8_t)v25), v15));
      int16x8_t v36 = (int16x8_t)vqsubq_u16(v13, vshlq_u16(vabdq_u16((uint16x8_t)v17, (uint16x8_t)v26), v15));
      int16x8_t v37 = vdupq_n_s16(v21);
      int16x8_t v38 = vmlaq_s16(vmlaq_s16(v32, vmaxq_s16(vminq_s16(vsubq_s16(v25, v17), v35), vnegq_s16(v35)), v37), vmaxq_s16(vminq_s16(vsubq_s16(v26, v17), v36), vnegq_s16(v36)), v37);
      int16x8_t v19 = (int16x8_t)vminq_u16(vminq_u16(vminq_u16(vminq_u16(v27, (uint16x8_t)v25), (uint16x8_t)v26), (uint16x8_t)v33), (uint16x8_t)v34);
      int16x8_t v20 = vmaxq_s16(vmaxq_s16(vmaxq_s16(vmaxq_s16(v28, v25), v26), v33), v34);
      int16x8_t v39 = (int16x8_t)vqsubq_u16(v13, vshlq_u16(vabdq_u16((uint16x8_t)v17, (uint16x8_t)v33), v15));
      int16x8_t v40 = (int16x8_t)vqsubq_u16(v13, vshlq_u16(vabdq_u16((uint16x8_t)v17, (uint16x8_t)v34), v15));
      int16x8_t v18 = vmlaq_s16(vmlaq_s16(v38, vmaxq_s16(vminq_s16(vsubq_s16(v33, v17), v39), vnegq_s16(v39)), v37), vmaxq_s16(vminq_s16(vsubq_s16(v34, v17), v40), vnegq_s16(v40)), v37);
      uint16x8_t v11 = v24 - 11;
      --v21;
      ++v10;
    }
    while (v21);
    a3 += 2;
    BOOL v41 = __OFSUB__(a8--, 1);
    *uint64_t result = vmaxq_s16(vminq_s16(vaddq_s16(v17, vrshrq_n_s16(vaddq_s16(v18, vcltzq_s16(v18)), 4uLL)), v20), v19);
    uint64_t result = (int16x8_t *)((char *)result + a2);
    v11 -= 2;
    v10 -= 2;
  }
  while (!((a8 < 0) ^ v41 | (a8 == 0)));
  return result;
}

int16x8_t *sub_224AA8664(int16x8_t *result, uint64_t a2, int16x8_t *a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, int a8, uint64_t a9, unsigned int a10)
{
  if (!a4) {
    return sub_224AA8344(result, a2, a3, a4, a5, a6, a7, a8);
  }
  if (a5) {
    return sub_224AA846C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  }
  return sub_224AA824C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void *sub_224AA8678(void *result, uint64_t a2, uint64_t *a3, unsigned int a4, uint64_t a5, unsigned int a6, unsigned int a7, int a8, uint64_t a9, unsigned int a10)
{
  uint16x8_t v11 = (unsigned __int8 *)&unk_2646ED534 + 2 * ((a4 >> (24 - __clz(a10))) & 1);
  uint16x8_t v12 = (char *)&unk_2646ED518 + 2 * a6;
  uint16x8_t v13 = (uint16x8_t)vdupq_n_s16(a4);
  uint16x8_t v14 = (uint16x8_t)vdupq_lane_s16(vneg_s16((int16x4_t)vqsub_u16((uint16x4_t)vdup_n_s16(a7), (uint16x4_t)vsub_s16((int16x4_t)0xF000F000F000FLL, vclz_s16(vtrn1_s16(*(int16x4_t *)v13.i8, v10))))), 0);
  do
  {
    v15.i64[0] = *a3;
    v15.i64[1] = a3[2];
    int16x8_t v16 = 0uLL;
    int v17 = 2;
    do
    {
      int16x8_t v18 = (uint64_t *)((char *)a3 + 2 * *v12);
      int16x8_t v19 = (uint64_t *)((char *)a3 - 2 * *v12);
      v20.i64[0] = *v18;
      v21.i64[0] = *v19;
      v20.i64[1] = v18[2];
      v21.i64[1] = v19[2];
      int16x8_t v22 = (int16x8_t)vqsubq_u16(v13, vshlq_u16(vabdq_u16((uint16x8_t)v15, v20), v14));
      int16x8_t v23 = (int16x8_t)vqsubq_u16(v13, vshlq_u16(vabdq_u16((uint16x8_t)v15, v21), v14));
      int16x8_t v24 = vdupq_n_s16(*v11);
      int16x8_t v16 = vmlaq_s16(vmlaq_s16(v16, vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v20, v15), v22), vnegq_s16(v22)), v24), vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v21, v15), v23), vnegq_s16(v23)), v24);
      ++v12;
      --v17;
      ++v11;
    }
    while (v17);
    int16x8_t v25 = vaddq_s16(v15, vrshrq_n_s16(vaddq_s16(v16, vcltzq_s16(v16)), 4uLL));
    *uint64_t result = v25.i64[0];
    int16x8_t v26 = (void *)((char *)result + a2);
    a3 += 4;
    BOOL v27 = __OFSUB__(a8, 2);
    a8 -= 2;
    *int16x8_t v26 = v25.i64[1];
    uint64_t result = (void *)((char *)v26 + a2);
    v12 -= 2;
    v11 -= 2;
  }
  while (!((a8 < 0) ^ v27 | (a8 == 0)));
  return result;
}

void *sub_224AA878C(void *result, uint64_t a2, uint64_t *a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8)
{
  uint64_t v9 = (char *)&unk_2646ED518 + 2 * a6;
  uint16x8_t v10 = (uint16x8_t)vdupq_n_s16(a5);
  uint16x8_t v11 = (uint16x8_t)vdupq_lane_s16(vneg_s16((int16x4_t)vqsub_u16((uint16x4_t)vdup_n_s16(a7), (uint16x4_t)vsub_s16((int16x4_t)0xF000F000F000FLL, vclz_s16(vtrn1_s16(v8, *(int16x4_t *)v10.i8))))), 1);
  do
  {
    v12.i64[0] = *a3;
    v12.i64[1] = a3[2];
    int16x8_t v13 = 0uLL;
    unsigned int v14 = 2;
    do
    {
      int16x8_t v15 = v9 + 4;
      int16x8_t v16 = (uint64_t *)((char *)a3 + 2 * *v15);
      int v17 = (uint64_t *)((char *)a3 - 2 * *v15);
      v18.i64[0] = *v16;
      v19.i64[0] = *v17;
      v18.i64[1] = v16[2];
      v19.i64[1] = v17[2];
      v15 += 8;
      uint16x8_t v20 = (uint64_t *)((char *)a3 + 2 * *v15);
      uint16x8_t v21 = (uint64_t *)((char *)a3 - 2 * *v15);
      v22.i64[0] = *v20;
      v23.i64[0] = *v21;
      v22.i64[1] = v20[2];
      v23.i64[1] = v21[2];
      int16x8_t v24 = (int16x8_t)vqsubq_u16(v10, vshlq_u16(vabdq_u16((uint16x8_t)v12, v18), v11));
      int16x8_t v25 = (int16x8_t)vqsubq_u16(v10, vshlq_u16(vabdq_u16((uint16x8_t)v12, v19), v11));
      int16x8_t v26 = vdupq_n_s16(v14);
      int16x8_t v27 = vmlaq_s16(vmlaq_s16(v13, vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v18, v12), v24), vnegq_s16(v24)), v26), vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v19, v12), v25), vnegq_s16(v25)), v26);
      int16x8_t v28 = (int16x8_t)vqsubq_u16(v10, vshlq_u16(vabdq_u16((uint16x8_t)v12, v22), v11));
      int16x8_t v29 = (int16x8_t)vqsubq_u16(v10, vshlq_u16(vabdq_u16((uint16x8_t)v12, v23), v11));
      int16x8_t v13 = vmlaq_s16(vmlaq_s16(v27, vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v22, v12), v28), vnegq_s16(v28)), v26), vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v23, v12), v29), vnegq_s16(v29)), v26);
      uint64_t v9 = v15 - 11;
      --v14;
    }
    while (v14);
    int16x8_t v30 = vaddq_s16(v12, vrshrq_n_s16(vaddq_s16(v13, vcltzq_s16(v13)), 4uLL));
    *uint64_t result = v30.i64[0];
    int16x8_t v31 = (void *)((char *)result + a2);
    a3 += 4;
    BOOL v32 = __OFSUB__(a8, 2);
    a8 -= 2;
    *int16x8_t v31 = v30.i64[1];
    uint64_t result = (void *)((char *)v31 + a2);
    v9 -= 2;
  }
  while (!((a8 < 0) ^ v32 | (a8 == 0)));
  return result;
}

void *sub_224AA88E0(void *result, uint64_t a2, uint64_t *a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8, uint64_t a9, unsigned int a10)
{
  uint16x8_t v10 = (unsigned __int8 *)&unk_2646ED534 + 2 * ((a4 >> (24 - __clz(a10))) & 1);
  uint16x8_t v11 = (char *)&unk_2646ED518 + 2 * a6;
  uint16x8_t v12 = (uint16x8_t)vdupq_n_s16(a4);
  uint16x8_t v13 = (uint16x8_t)vdupq_n_s16(a5);
  int16x4_t v14 = vneg_s16((int16x4_t)vqsub_u16((uint16x4_t)vdup_n_s16(a7), (uint16x4_t)vsub_s16((int16x4_t)0xF000F000F000FLL, vclz_s16(vtrn1_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)v13.i8)))));
  uint16x8_t v15 = (uint16x8_t)vdupq_lane_s16(v14, 1);
  uint16x8_t v16 = (uint16x8_t)vdupq_lane_s16(v14, 0);
  do
  {
    v17.i64[0] = *a3;
    v17.i64[1] = a3[2];
    int16x8_t v18 = 0uLL;
    int16x8_t v19 = v17;
    int16x8_t v20 = v17;
    unsigned int v21 = 2;
    do
    {
      uint16x8_t v22 = (uint64_t *)((char *)a3 + 2 * *v11);
      uint16x8_t v23 = (uint64_t *)((char *)a3 - 2 * *v11);
      v24.i64[0] = *v22;
      v25.i64[0] = *v23;
      v24.i64[1] = v22[2];
      v25.i64[1] = v23[2];
      int16x8_t v26 = v11 + 4;
      int16x8_t v27 = (uint64_t *)((char *)a3 + 2 * *v26);
      int16x8_t v28 = (uint64_t *)((char *)a3 - 2 * *v26);
      v29.i64[0] = *v27;
      v30.i64[0] = *v28;
      v29.i64[1] = v27[2];
      v30.i64[1] = v28[2];
      uint16x8_t v31 = vminq_u16(vminq_u16((uint16x8_t)v19, v24), v25);
      int16x8_t v32 = vmaxq_s16(vmaxq_s16(v20, (int16x8_t)v24), (int16x8_t)v25);
      int16x8_t v33 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v17, v24), v16));
      int16x8_t v34 = (int16x8_t)vqsubq_u16(v12, vshlq_u16(vabdq_u16((uint16x8_t)v17, v25), v16));
      int16x8_t v35 = vdupq_n_s16(*v10);
      int16x8_t v36 = vmlaq_s16(vmlaq_s16(v18, vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v24, v17), v33), vnegq_s16(v33)), v35), vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v25, v17), v34), vnegq_s16(v34)), v35);
      v26 += 8;
      int16x8_t v37 = (uint64_t *)((char *)a3 + 2 * *v26);
      int16x8_t v38 = (uint64_t *)((char *)a3 - 2 * *v26);
      v24.i64[0] = *v37;
      v25.i64[0] = *v38;
      v24.i64[1] = v37[2];
      v25.i64[1] = v38[2];
      int16x8_t v39 = (int16x8_t)vqsubq_u16(v13, vshlq_u16(vabdq_u16((uint16x8_t)v17, v29), v15));
      int16x8_t v40 = (int16x8_t)vqsubq_u16(v13, vshlq_u16(vabdq_u16((uint16x8_t)v17, v30), v15));
      int16x8_t v41 = vdupq_n_s16(v21);
      int16x8_t v42 = vmlaq_s16(vmlaq_s16(v36, vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v29, v17), v39), vnegq_s16(v39)), v41), vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v30, v17), v40), vnegq_s16(v40)), v41);
      int16x8_t v19 = (int16x8_t)vminq_u16(vminq_u16(vminq_u16(vminq_u16(v31, v29), v30), v24), v25);
      int16x8_t v20 = vmaxq_s16(vmaxq_s16(vmaxq_s16(vmaxq_s16(v32, (int16x8_t)v29), (int16x8_t)v30), (int16x8_t)v24), (int16x8_t)v25);
      int16x8_t v43 = (int16x8_t)vqsubq_u16(v13, vshlq_u16(vabdq_u16((uint16x8_t)v17, v24), v15));
      int16x8_t v44 = (int16x8_t)vqsubq_u16(v13, vshlq_u16(vabdq_u16((uint16x8_t)v17, v25), v15));
      int16x8_t v18 = vmlaq_s16(vmlaq_s16(v42, vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v24, v17), v43), vnegq_s16(v43)), v41), vmaxq_s16(vminq_s16(vsubq_s16((int16x8_t)v25, v17), v44), vnegq_s16(v44)), v41);
      uint16x8_t v11 = v26 - 11;
      --v21;
      ++v10;
    }
    while (v21);
    int16x8_t v45 = vmaxq_s16(vminq_s16(vaddq_s16(v17, vrshrq_n_s16(vaddq_s16(v18, vcltzq_s16(v18)), 4uLL)), v20), v19);
    *uint64_t result = v45.i64[0];
    uint64_t v46 = (void *)((char *)result + a2);
    a3 += 4;
    BOOL v47 = __OFSUB__(a8, 2);
    a8 -= 2;
    void *v46 = v45.i64[1];
    uint64_t result = (void *)((char *)v46 + a2);
    v11 -= 2;
    v10 -= 2;
  }
  while (!((a8 < 0) ^ v47 | (a8 == 0)));
  return result;
}

void *sub_224AA8B14(void *result, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, int a8, uint64_t a9, unsigned int a10)
{
  if (!a4) {
    return sub_224AA878C(result, a2, a3, a4, a5, a6, a7, a8);
  }
  if (a5) {
    return sub_224AA88E0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  }
  return sub_224AA8678(result, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_224AA8B28(uint16x8_t *a1, uint64_t a2, unsigned int *a3, unsigned int a4)
{
  uint16x8_t v5 = (uint16x8_t)vdupq_n_s16(__clz(a4) - 24);
  v6.i64[0] = 0x80008000800080;
  v6.i64[1] = 0x80008000800080;
  uint16x8_t v8 = *a1;
  int16x8_t v7 = (uint16x8_t *)((char *)a1 + a2);
  int16x8_t v9 = vsubq_s16((int16x8_t)vshlq_u16(v8, v5), v6);
  int8x16_t v10 = (int8x16_t)vrev64q_s16(v9);
  int16x8_t v11 = vpaddq_s16(v9, (int16x8_t)0);
  int16x8_t v12 = vaddq_s16((int16x8_t)0, v9);
  *(int16x4_t *)v4.i8 = vrev64_s16(*(int16x4_t *)v11.i8);
  v13.i16[0] = vaddvq_s16(v9);
  int16x8_t v14 = vaddq_s16((int16x8_t)0, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v9, 0xAuLL));
  int16x4_t v15 = vadd_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v9, (int8x16_t)0, 0xAuLL));
  int16x8_t v16 = v9;
  int16x8_t v17 = v9;
  uint16x8_t v19 = *v7;
  int16x8_t v18 = (uint16x8_t *)((char *)v7 + a2);
  int16x8_t v20 = (int16x8_t)vextq_s8(v10, v10, 8uLL);
  int16x8_t v21 = v11;
  int16x8_t v22 = vsubq_s16((int16x8_t)vshlq_u16(v19, v5), v6);
  int16x8_t v23 = (int16x8_t)v4;
  int8x16_t v24 = (int8x16_t)vrev64q_s16(v22);
  int8x16_t v25 = (int8x16_t)vpaddq_s16(v22, (int16x8_t)0);
  int16x8_t v26 = vaddq_s16(v12, v22);
  int8x16_t v27 = vextq_s8(v24, v24, 8uLL);
  *(int16x4_t *)v4.i8 = vrev64_s16(*(int16x4_t *)v25.i8);
  v13.i16[1] = vaddvq_s16(v22);
  int16x8_t v28 = vaddq_s16(v14, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v22, 0xAuLL));
  int16x4_t v29 = vadd_s16(v15, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v22, (int8x16_t)0, 0xAuLL));
  int16x8_t v30 = vaddq_s16(v16, v22);
  int16x8_t v31 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v22, 0xEuLL);
  int16x8_t v32 = (int16x8_t)vextq_s8((int8x16_t)v22, (int8x16_t)0, 0xEuLL);
  uint16x8_t v34 = *v18;
  int16x8_t v33 = (uint16x8_t *)((char *)v18 + a2);
  int16x8_t v35 = vaddq_s16(v17, v31);
  int16x8_t v36 = vaddq_s16((int16x8_t)0, v32);
  int16x8_t v37 = vaddq_s16(v20, (int16x8_t)vextq_s8((int8x16_t)0, v27, 0xEuLL));
  int16x8_t v38 = vaddq_s16((int16x8_t)0, (int16x8_t)vextq_s8(v27, (int8x16_t)0, 0xEuLL));
  int16x8_t v39 = vsubq_s16((int16x8_t)vshlq_u16(v34, v5), v6);
  int16x8_t v40 = vaddq_s16(v21, (int16x8_t)vextq_s8((int8x16_t)0, v25, 0xEuLL));
  int16x4_t v41 = vadd_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8(v25, (int8x16_t)0, 0xEuLL));
  int16x8_t v42 = vaddq_s16(v23, (int16x8_t)vextq_s8((int8x16_t)0, v4, 0xEuLL));
  int16x4_t v43 = vadd_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8(v4, (int8x16_t)0, 0xEuLL));
  int8x16_t v44 = (int8x16_t)vrev64q_s16(v39);
  int8x16_t v45 = (int8x16_t)vpaddq_s16(v39, (int16x8_t)0);
  int16x8_t v46 = vaddq_s16(v26, v39);
  int8x16_t v47 = vextq_s8(v44, v44, 8uLL);
  *(int16x4_t *)v4.i8 = vrev64_s16(*(int16x4_t *)v45.i8);
  v13.i16[2] = vaddvq_s16(v39);
  int16x8_t v48 = vaddq_s16(v28, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v39, 0xCuLL));
  int16x4_t v49 = vadd_s16(v29, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v39, (int8x16_t)0, 0xCuLL));
  int16x8_t v50 = vaddq_s16(v30, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v39, 0xEuLL));
  int16x4_t v51 = vadd_s16(0, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v39, (int8x16_t)0, 0xEuLL));
  int16x8_t v52 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v39, 0xCuLL);
  int16x8_t v53 = (int16x8_t)vextq_s8((int8x16_t)v39, (int8x16_t)0, 0xCuLL);
  uint16x8_t v55 = *v33;
  uint64_t v54 = (uint16x8_t *)((char *)v33 + a2);
  int16x8_t v56 = vaddq_s16(v35, v52);
  int16x8_t v57 = vaddq_s16(v36, v53);
  int16x8_t v58 = vaddq_s16(v37, (int16x8_t)vextq_s8((int8x16_t)0, v47, 0xCuLL));
  int16x8_t v59 = vaddq_s16(v38, (int16x8_t)vextq_s8(v47, (int8x16_t)0, 0xCuLL));
  int16x8_t v60 = vsubq_s16((int16x8_t)vshlq_u16(v55, v5), v6);
  int16x8_t v61 = vaddq_s16(v40, (int16x8_t)vextq_s8((int8x16_t)0, v45, 0xCuLL));
  int16x4_t v62 = vadd_s16(v41, (int16x4_t)*(_OWORD *)&vextq_s8(v45, (int8x16_t)0, 0xCuLL));
  int16x8_t v63 = vaddq_s16(v42, (int16x8_t)vextq_s8((int8x16_t)0, v4, 0xCuLL));
  int16x4_t v64 = vadd_s16(v43, (int16x4_t)*(_OWORD *)&vextq_s8(v4, (int8x16_t)0, 0xCuLL));
  int8x16_t v65 = (int8x16_t)vrev64q_s16(v60);
  int8x16_t v66 = (int8x16_t)vpaddq_s16(v60, (int16x8_t)0);
  int16x8_t v67 = vaddq_s16(v46, v60);
  int8x16_t v68 = vextq_s8(v65, v65, 8uLL);
  *(int16x4_t *)v4.i8 = vrev64_s16(*(int16x4_t *)v66.i8);
  v13.i16[3] = vaddvq_s16(v60);
  int16x8_t v69 = vaddq_s16(v48, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v60, 0xCuLL));
  int16x4_t v70 = vadd_s16(v49, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v60, (int8x16_t)0, 0xCuLL));
  int16x8_t v71 = vaddq_s16(v50, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v60, 0xEuLL));
  int16x4_t v72 = vadd_s16(v51, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v60, (int8x16_t)0, 0xEuLL));
  int16x8_t v73 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v60, 0xAuLL);
  int16x8_t v74 = (int16x8_t)vextq_s8((int8x16_t)v60, (int8x16_t)0, 0xAuLL);
  uint16x8_t v76 = *v54;
  long long v75 = (uint16x8_t *)((char *)v54 + a2);
  int16x8_t v77 = vaddq_s16(v56, v73);
  int16x8_t v78 = vaddq_s16(v57, v74);
  int16x8_t v79 = vaddq_s16(v58, (int16x8_t)vextq_s8((int8x16_t)0, v68, 0xAuLL));
  int16x8_t v80 = vaddq_s16(v59, (int16x8_t)vextq_s8(v68, (int8x16_t)0, 0xAuLL));
  int16x8_t v81 = vsubq_s16((int16x8_t)vshlq_u16(v76, v5), v6);
  int16x8_t v82 = vaddq_s16(v61, (int16x8_t)vextq_s8((int8x16_t)0, v66, 0xAuLL));
  int16x4_t v83 = vadd_s16(v62, (int16x4_t)*(_OWORD *)&vextq_s8(v66, (int8x16_t)0, 0xAuLL));
  int16x8_t v84 = vaddq_s16(v63, (int16x8_t)vextq_s8((int8x16_t)0, v4, 0xAuLL));
  int16x4_t v85 = vadd_s16(v64, (int16x4_t)*(_OWORD *)&vextq_s8(v4, (int8x16_t)0, 0xAuLL));
  int8x16_t v86 = (int8x16_t)vrev64q_s16(v81);
  int8x16_t v87 = (int8x16_t)vpaddq_s16(v81, (int16x8_t)0);
  int16x8_t v88 = vaddq_s16(v67, v81);
  int8x16_t v89 = vextq_s8(v86, v86, 8uLL);
  *(int16x4_t *)v4.i8 = vrev64_s16(*(int16x4_t *)v87.i8);
  v13.i16[4] = vaddvq_s16(v81);
  int16x8_t v90 = vaddq_s16(v69, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v81, 0xEuLL));
  int16x4_t v91 = vadd_s16(v70, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v81, (int8x16_t)0, 0xEuLL));
  int16x8_t v92 = vaddq_s16(v71, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v81, 0xCuLL));
  int16x4_t v93 = vadd_s16(v72, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v81, (int8x16_t)0, 0xCuLL));
  int16x8_t v94 = (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v81, 8uLL);
  int16x8_t v95 = (int16x8_t)vextq_s8((int8x16_t)v81, (int8x16_t)0, 8uLL);
  uint16x8_t v96 = *v75;
  uint64_t result = (uint64_t)v75->i64 + a2;
  int16x8_t v97 = vaddq_s16(v79, (int16x8_t)vextq_s8((int8x16_t)0, v89, 8uLL));
  int16x8_t v98 = vaddq_s16(v80, (int16x8_t)vextq_s8(v89, (int8x16_t)0, 8uLL));
  int16x8_t v99 = vsubq_s16((int16x8_t)vshlq_u16(v96, v5), v6);
  int16x8_t v100 = vaddq_s16(v82, (int16x8_t)vextq_s8((int8x16_t)0, v87, 8uLL));
  int16x4_t v101 = vadd_s16(v83, (int16x4_t)*(_OWORD *)&vextq_s8(v87, (int8x16_t)0, 8uLL));
  int16x8_t v102 = vaddq_s16(v84, (int16x8_t)vextq_s8((int8x16_t)0, v4, 8uLL));
  int16x4_t v103 = vadd_s16(v85, (int16x4_t)*(_OWORD *)&vextq_s8(v4, (int8x16_t)0, 8uLL));
  int8x16_t v104 = (int8x16_t)vrev64q_s16(v99);
  int8x16_t v105 = (int8x16_t)vpaddq_s16(v99, (int16x8_t)0);
  int16x8_t v106 = vaddq_s16(v88, v99);
  int8x16_t v107 = vextq_s8(v104, v104, 8uLL);
  *(int16x4_t *)v4.i8 = vrev64_s16(*(int16x4_t *)v105.i8);
  v13.i16[5] = vaddvq_s16(v99);
  int16x8_t v108 = vaddq_s16(v90, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v99, 0xEuLL));
  int16x4_t v109 = vadd_s16(v91, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v99, (int8x16_t)0, 0xEuLL));
  int16x8_t v110 = vaddq_s16(v92, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v99, 0xCuLL));
  int16x4_t v111 = vadd_s16(v93, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v99, (int8x16_t)0, 0xCuLL));
  int16x8_t v112 = vaddq_s16(vaddq_s16(v77, v94), (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v99, 6uLL));
  int16x8_t v113 = vaddq_s16(vaddq_s16(v78, v95), (int16x8_t)vextq_s8((int8x16_t)v99, (int8x16_t)0, 6uLL));
  int16x8_t v114 = vaddq_s16(v97, (int16x8_t)vextq_s8((int8x16_t)0, v107, 6uLL));
  int16x8_t v115 = vaddq_s16(v98, (int16x8_t)vextq_s8(v107, (int8x16_t)0, 6uLL));
  int16x8_t v116 = vsubq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)result, v5), v6);
  int16x8_t v117 = vaddq_s16(v100, (int16x8_t)vextq_s8((int8x16_t)0, v105, 6uLL));
  int16x4_t v118 = vadd_s16(v101, (int16x4_t)*(_OWORD *)&vextq_s8(v105, (int8x16_t)0, 6uLL));
  int16x8_t v119 = vaddq_s16(v102, (int16x8_t)vextq_s8((int8x16_t)0, v4, 6uLL));
  int16x4_t v120 = vadd_s16(v103, (int16x4_t)*(_OWORD *)&vextq_s8(v4, (int8x16_t)0, 6uLL));
  int8x16_t v121 = (int8x16_t)vrev64q_s16(v116);
  int8x16_t v122 = (int8x16_t)vpaddq_s16(v116, (int16x8_t)0);
  int16x8_t v123 = vaddq_s16(v106, v116);
  int8x16_t v124 = vextq_s8(v121, v121, 8uLL);
  *(int16x4_t *)v4.i8 = vrev64_s16(*(int16x4_t *)v122.i8);
  v13.i16[6] = vaddvq_s16(v116);
  int16x8_t v125 = vaddq_s16(v108, v116);
  int16x8_t v126 = vaddq_s16(v110, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v116, 0xAuLL));
  int16x4_t v127 = vadd_s16(v111, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v116, (int8x16_t)0, 0xAuLL));
  int16x8_t v128 = vaddq_s16(v112, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v116, 4uLL));
  int16x8_t v129 = vaddq_s16(v113, (int16x8_t)vextq_s8((int8x16_t)v116, (int8x16_t)0, 4uLL));
  int16x8_t v130 = vaddq_s16(v114, (int16x8_t)vextq_s8((int8x16_t)0, v124, 4uLL));
  int16x8_t v131 = vaddq_s16(v115, (int16x8_t)vextq_s8(v124, (int8x16_t)0, 4uLL));
  int16x8_t v132 = vsubq_s16((int16x8_t)vshlq_u16(*(uint16x8_t *)(result + a2), v5), v6);
  int16x8_t v133 = vaddq_s16(v117, (int16x8_t)vextq_s8((int8x16_t)0, v122, 4uLL));
  int16x4_t v134 = vadd_s16(v118, (int16x4_t)*(_OWORD *)&vextq_s8(v122, (int8x16_t)0, 4uLL));
  int16x8_t v135 = vaddq_s16(v119, (int16x8_t)vextq_s8((int8x16_t)0, v4, 4uLL));
  int16x4_t v136 = vadd_s16(v120, (int16x4_t)*(_OWORD *)&vextq_s8(v4, (int8x16_t)0, 4uLL));
  int8x16_t v137 = (int8x16_t)vrev64q_s16(v132);
  int8x16_t v138 = (int8x16_t)vpaddq_s16(v132, (int16x8_t)0);
  int16x8_t v139 = vaddq_s16(v123, v132);
  int8x16_t v140 = vextq_s8(v137, v137, 8uLL);
  *(int16x4_t *)v4.i8 = vrev64_s16(*(int16x4_t *)v138.i8);
  v13.i16[7] = vaddvq_s16(v132);
  int16x8_t v141 = vaddq_s16(v125, v132);
  int16x8_t v142 = vaddq_s16(v126, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v132, 0xAuLL));
  int16x4_t v143 = vadd_s16(v127, (int16x4_t)*(_OWORD *)&vextq_s8((int8x16_t)v132, (int8x16_t)0, 0xAuLL));
  int16x8_t v144 = vaddq_s16(v128, (int16x8_t)vextq_s8((int8x16_t)0, (int8x16_t)v132, 2uLL));
  int16x8_t v145 = vaddq_s16(v130, (int16x8_t)vextq_s8((int8x16_t)0, v140, 2uLL));
  int16x8_t v146 = vaddq_s16(v133, (int16x8_t)vextq_s8((int8x16_t)0, v138, 2uLL));
  int16x4_t v147 = vadd_s16(v134, (int16x4_t)*(_OWORD *)&vextq_s8(v138, (int8x16_t)0, 2uLL));
  int16x8_t v148 = vaddq_s16(v135, (int16x8_t)vextq_s8((int8x16_t)0, v4, 2uLL));
  int16x4_t v149 = vadd_s16(v136, (int16x4_t)*(_OWORD *)&vextq_s8(v4, (int8x16_t)0, 2uLL));
  v6.i64[0] = 0x6900000069;
  v6.i64[1] = 0x6900000069;
  int v150 = vaddvq_s32(vmulq_s32(vmlal_high_s16(vmull_s16(*(int16x4_t *)v139.i8, *(int16x4_t *)v139.i8), v139, v139), (int32x4_t)v6));
  int8x16_t v151 = (int8x16_t)vrev64q_s16(vaddq_s16(v129, (int16x8_t)vextq_s8((int8x16_t)v132, (int8x16_t)0, 2uLL)));
  int8x16_t v152 = (int8x16_t)vrev64q_s16(vaddq_s16(v131, (int16x8_t)vextq_s8(v140, (int8x16_t)0, 2uLL)));
  int16x8_t v153 = (int16x8_t)vextq_s8(v151, v151, 0xAuLL);
  int16x8_t v154 = (int16x8_t)vextq_s8(v152, v152, 0xAuLL);
  int v168 = vaddvq_s32(vmulq_s32(vmlal_high_s16(vmull_s16(*(int16x4_t *)v13.i8, *(int16x4_t *)v13.i8), v13, v13), (int32x4_t)v6));
  int v172 = v150;
  int32x4_t v155 = (int32x4_t)vmovl_u16((uint16x4_t)0xD2011801A40348);
  int32x4_t v156 = (int32x4_t)vmovl_high_u16(qword_2646ED4D4);
  int v157 = vaddvq_s32(vmlaq_s32(vmulq_s32(vmlal_s16(vmull_s16(*(int16x4_t *)v145.i8, *(int16x4_t *)v145.i8), *(int16x4_t *)v154.i8, *(int16x4_t *)v154.i8), v155), vmlal_high_s16(vmull_high_s16(v145, v145), v154, v154), v156));
  v167[0] = vaddvq_s32(vmlaq_s32(vmulq_s32(vmlal_s16(vmull_s16(*(int16x4_t *)v144.i8, *(int16x4_t *)v144.i8), *(int16x4_t *)v153.i8, *(int16x4_t *)v153.i8), v155), vmlal_high_s16(vmull_high_s16(v144, v144), v153, v153), v156));
  int v170 = v157;
  int32x4_t v158 = (int32x4_t)vmovl_u16((uint16x4_t)0x69008C00D201A4);
  int32x4_t v159 = (int32x4_t)vmovl_u16((uint16x4_t)0x69006900690069);
  int32x4_t v160 = (int32x4_t)vmovl_u16((uint16x4_t)0x1A400D2008CLL);
  int v161 = vaddvq_s32(vmlaq_s32(vmlaq_s32(vmulq_s32(vmull_s16(*(int16x4_t *)v146.i8, *(int16x4_t *)v146.i8), v158), vmull_high_s16(v146, v146), v159), vmull_s16(v147, v147), v160));
  int v162 = vaddvq_s32(vmlaq_s32(vmlaq_s32(vmulq_s32(vmull_s16(*(int16x4_t *)v148.i8, *(int16x4_t *)v148.i8), v158), vmull_high_s16(v148, v148), v159), vmull_s16(v149, v149), v160));
  int v163 = vaddvq_s32(vmlaq_s32(vmlaq_s32(vmulq_s32(vmull_s16(*(int16x4_t *)v141.i8, *(int16x4_t *)v141.i8), v158), vmull_high_s16(v141, v141), v159), vmull_s16(v109, v109), v160));
  int v164 = vaddvq_s32(vmlaq_s32(vmlaq_s32(vmulq_s32(vmull_s16(*(int16x4_t *)v142.i8, *(int16x4_t *)v142.i8), v158), vmull_high_s16(v142, v142), v159), vmull_s16(v143, v143), v160));
  v167[1] = v161;
  int v169 = v162;
  int v165 = v167[0];
  int v171 = v163;
  int v173 = v164;
  LODWORD(result) = v161 > v167[0];
  if (v161 > v167[0]) {
    int v165 = v161;
  }
  if (v168 > v165)
  {
    LODWORD(result) = 2;
    int v165 = v168;
  }
  if (v162 > v165)
  {
    LODWORD(result) = 3;
    int v165 = v162;
  }
  if (v157 > v165)
  {
    LODWORD(result) = 4;
    int v165 = v157;
  }
  if (v163 > v165)
  {
    LODWORD(result) = 5;
    int v165 = v163;
  }
  if (v150 > v165)
  {
    LODWORD(result) = 6;
    int v165 = v150;
  }
  if (v164 <= v165) {
    uint64_t result = result;
  }
  else {
    uint64_t result = 7;
  }
  if (v164 > v165) {
    int v165 = v164;
  }
  *a3 = (v165 - v167[result ^ 4]) >> 10;
  return result;
}

uint64_t sub_224AA9124(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9)
{
  return ((uint64_t (*)(__n128))((char *)&dword_224AA920C
                                         - *((unsigned __int16 *)&dword_224AA920C + __clz(a4) - 25)))((__n128)vrshrq_n_u16((uint16x8_t)vdupq_n_s16(a9), 1uLL));
}

double *sub_224AA9150(double *result, uint64_t a2, double a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, double *a8)
{
  do
  {
    *uint64_t result = a3;
    uint16x8_t v8 = (double *)((char *)result + a2);
    *a8 = a3;
    int16x8_t v9 = (double *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    double *v8 = a3;
    uint64_t result = (double *)((char *)v8 + a2);
    double *v9 = a3;
    a8 = (double *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

__n128 *sub_224AA916C(__n128 *result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, __n128 *a8)
{
  do
  {
    *uint64_t result = a3;
    uint16x8_t v8 = (__n128 *)((char *)result + a2);
    *a8 = a3;
    int16x8_t v9 = (__n128 *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    __n128 *v8 = a3;
    uint64_t result = (__n128 *)((char *)v8 + a2);
    __n128 *v9 = a3;
    a8 = (__n128 *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

__n128 *sub_224AA9188(__n128 *result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, __n128 *a8)
{
  do
  {
    *uint64_t result = a3;
    result[1] = a3;
    uint16x8_t v8 = (__n128 *)((char *)result + a2);
    *a8 = a3;
    a8[1] = a3;
    int16x8_t v9 = (__n128 *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    __n128 *v8 = a3;
    v8[1] = a3;
    uint64_t result = (__n128 *)((char *)v8 + a2);
    __n128 *v9 = a3;
    v9[1] = a3;
    a8 = (__n128 *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

__n128 *sub_224AA91A8(__n128 *result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, __n128 *a8)
{
  do
  {
    *uint64_t result = a3;
    result[1] = a3;
    result[2] = a3;
    result[3] = a3;
    uint16x8_t v8 = (__n128 *)((char *)result + a2);
    *a8 = a3;
    a8[1] = a3;
    a8[2] = a3;
    a8[3] = a3;
    int16x8_t v9 = (__n128 *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    __n128 *v8 = a3;
    v8[1] = a3;
    v8[2] = a3;
    v8[3] = a3;
    uint64_t result = (__n128 *)((char *)v8 + a2);
    __n128 *v9 = a3;
    v9[1] = a3;
    v9[2] = a3;
    v9[3] = a3;
    a8 = (__n128 *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

__n128 *sub_224AA91D0(__n128 *result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, __n128 *a8)
{
  uint64_t v8 = a2 - 64;
  do
  {
    *uint64_t result = a3;
    result[1] = a3;
    result[2] = a3;
    result[3] = a3;
    int16x8_t v9 = result + 4;
    *a8 = a3;
    a8[1] = a3;
    a8[2] = a3;
    a8[3] = a3;
    BOOL v10 = a8 + 4;
    __n128 *v9 = a3;
    v9[1] = a3;
    v9[2] = a3;
    v9[3] = a3;
    int16x8_t v11 = (__n128 *)((char *)v9 + v8);
    __n128 *v10 = a3;
    v10[1] = a3;
    v10[2] = a3;
    v10[3] = a3;
    int16x8_t v12 = (__n128 *)((char *)v10 + v8);
    BOOL v13 = __OFSUB__(a6, 4);
    a6 -= 4;
    *int16x8_t v11 = a3;
    v11[1] = a3;
    v11[2] = a3;
    v11[3] = a3;
    v11 += 4;
    *int16x8_t v12 = a3;
    v12[1] = a3;
    v12[2] = a3;
    v12[3] = a3;
    v12 += 4;
    *int16x8_t v11 = a3;
    v11[1] = a3;
    v11[2] = a3;
    v11[3] = a3;
    uint64_t result = (__n128 *)((char *)v11 + v8);
    *int16x8_t v12 = a3;
    v12[1] = a3;
    v12[2] = a3;
    v12[3] = a3;
    a8 = (__n128 *)((char *)v12 + v8);
  }
  while (!((a6 < 0) ^ v13 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA9218(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)a8xx - (unsigned __int16)a8xx[__clz(a4) - 25]))();
}

void *sub_224AA923C(void *result, uint64_t a2, uint64_t *a3, uint64_t a4, int a5, uint64_t a6, void *a7)
{
  uint64_t v7 = *a3;
  do
  {
    *uint64_t result = v7;
    uint64_t v8 = (void *)((char *)result + a2);
    *a7 = v7;
    int16x8_t v9 = (void *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    void *v8 = v7;
    uint64_t result = (void *)((char *)v8 + a2);
    void *v9 = v7;
    a7 = (void *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

_OWORD *sub_224AA925C(_OWORD *result, uint64_t a2, long long *a3, uint64_t a4, int a5, uint64_t a6, _OWORD *a7)
{
  long long v7 = *a3;
  do
  {
    *uint64_t result = v7;
    uint64_t v8 = (_OWORD *)((char *)result + a2);
    *a7 = v7;
    int16x8_t v9 = (_OWORD *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    _OWORD *v8 = v7;
    uint64_t result = (_OWORD *)((char *)v8 + a2);
    _OWORD *v9 = v7;
    a7 = (_OWORD *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

_OWORD *sub_224AA927C(_OWORD *result, uint64_t a2, long long *a3, uint64_t a4, int a5, uint64_t a6, _OWORD *a7)
{
  long long v7 = *a3;
  long long v8 = a3[1];
  do
  {
    *uint64_t result = v7;
    result[1] = v8;
    int16x8_t v9 = (_OWORD *)((char *)result + a2);
    *a7 = v7;
    a7[1] = v8;
    BOOL v10 = (_OWORD *)((char *)a7 + a2);
    BOOL v11 = __OFSUB__(a5, 4);
    a5 -= 4;
    _OWORD *v9 = v7;
    v9[1] = v8;
    uint64_t result = (_OWORD *)((char *)v9 + a2);
    _OWORD *v10 = v7;
    v10[1] = v8;
    a7 = (_OWORD *)((char *)v10 + a2);
  }
  while (!((a5 < 0) ^ v11 | (a5 == 0)));
  return result;
}

_OWORD *sub_224AA929C(_OWORD *result, uint64_t a2, long long *a3, uint64_t a4, int a5, uint64_t a6, _OWORD *a7)
{
  long long v7 = *a3;
  long long v8 = a3[1];
  long long v9 = a3[2];
  long long v10 = a3[3];
  do
  {
    *uint64_t result = v7;
    result[1] = v8;
    result[2] = v9;
    result[3] = v10;
    BOOL v11 = (_OWORD *)((char *)result + a2);
    *a7 = v7;
    a7[1] = v8;
    a7[2] = v9;
    a7[3] = v10;
    int16x8_t v12 = (_OWORD *)((char *)a7 + a2);
    BOOL v13 = __OFSUB__(a5, 4);
    a5 -= 4;
    *BOOL v11 = v7;
    v11[1] = v8;
    v11[2] = v9;
    v11[3] = v10;
    uint64_t result = (_OWORD *)((char *)v11 + a2);
    *int16x8_t v12 = v7;
    v12[1] = v8;
    v12[2] = v9;
    v12[3] = v10;
    a7 = (_OWORD *)((char *)v12 + a2);
  }
  while (!((a5 < 0) ^ v13 | (a5 == 0)));
  return result;
}

_OWORD *sub_224AA92BC(_OWORD *result, uint64_t a2, long long *a3, uint64_t a4, int a5, uint64_t a6, _OWORD *a7)
{
  long long v8 = *a3;
  long long v9 = a3[1];
  long long v10 = a3[2];
  long long v11 = a3[3];
  long long v7 = a3 + 4;
  uint64_t v12 = a2 - 64;
  long long v13 = *v7;
  long long v14 = v7[1];
  long long v15 = v7[2];
  long long v16 = v7[3];
  do
  {
    *uint64_t result = v8;
    result[1] = v9;
    result[2] = v10;
    result[3] = v11;
    int16x8_t v17 = result + 4;
    *a7 = v8;
    a7[1] = v9;
    a7[2] = v10;
    a7[3] = v11;
    int16x8_t v18 = a7 + 4;
    *int16x8_t v17 = v13;
    v17[1] = v14;
    v17[2] = v15;
    v17[3] = v16;
    uint16x8_t v19 = (_OWORD *)((char *)v17 + v12);
    *int16x8_t v18 = v13;
    v18[1] = v14;
    v18[2] = v15;
    v18[3] = v16;
    int16x8_t v20 = (_OWORD *)((char *)v18 + v12);
    BOOL v21 = __OFSUB__(a5, 4);
    a5 -= 4;
    *uint16x8_t v19 = v8;
    v19[1] = v9;
    v19[2] = v10;
    v19[3] = v11;
    v19 += 4;
    *int16x8_t v20 = v8;
    v20[1] = v9;
    v20[2] = v10;
    v20[3] = v11;
    v20 += 4;
    *uint16x8_t v19 = v13;
    v19[1] = v14;
    v19[2] = v15;
    v19[3] = v16;
    uint64_t result = (_OWORD *)((char *)v19 + v12);
    *int16x8_t v20 = v13;
    v20[1] = v14;
    v20[2] = v15;
    v20[3] = v16;
    a7 = (_OWORD *)((char *)v20 + v12);
  }
  while (!((a5 < 0) ^ v21 | (a5 == 0)));
  return result;
}

uint64_t sub_224AA9300(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&qword_224AA9438 - *((unsigned __int16 *)&qword_224AA9438 + __clz(a4) - 25)))();
}

void *sub_224AA9328(void *result, uint64_t a2, const __int16 *a3, uint64_t a4, int a5, uint64_t a6, void *a7, uint64_t a8)
{
  do
  {
    int16x8x4_t v11 = vld4q_dup_s16(a3);
    a3 = (const __int16 *)((char *)a3 + a8);
    *uint64_t result = v11.val[3].i64[0];
    long long v8 = (void *)((char *)result + a2);
    *a7 = v11.val[2].i64[0];
    long long v9 = (void *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    void *v8 = v11.val[1].i64[0];
    uint64_t result = (void *)((char *)v8 + a2);
    void *v9 = v11.val[0].i64[0];
    a7 = (void *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AA9348(int16x8_t *result, uint64_t a2, const __int16 *a3, uint64_t a4, int a5, uint64_t a6, int16x8_t *a7, uint64_t a8)
{
  do
  {
    int16x8x4_t v11 = vld4q_dup_s16(a3);
    a3 = (const __int16 *)((char *)a3 + a8);
    *uint64_t result = v11.val[3];
    long long v8 = (int16x8_t *)((char *)result + a2);
    *a7 = v11.val[2];
    long long v9 = (int16x8_t *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    int16x8_t *v8 = v11.val[1];
    uint64_t result = (int16x8_t *)((char *)v8 + a2);
    int16x8_t *v9 = v11.val[0];
    a7 = (int16x8_t *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AA9368(int16x8_t *result, uint64_t a2, const __int16 *a3, uint64_t a4, int a5, uint64_t a6, int16x8_t *a7, uint64_t a8)
{
  do
  {
    int16x8x4_t v11 = vld4q_dup_s16(a3);
    a3 = (const __int16 *)((char *)a3 + a8);
    result[1] = v11.val[3];
    a7[1] = v11.val[2];
    *uint64_t result = v11.val[3];
    long long v8 = (int16x8_t *)((char *)result + a2);
    *a7 = v11.val[2];
    long long v9 = (int16x8_t *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    v8[1] = v11.val[1];
    v9[1] = v11.val[0];
    int16x8_t *v8 = v11.val[1];
    uint64_t result = (int16x8_t *)((char *)v8 + a2);
    int16x8_t *v9 = v11.val[0];
    a7 = (int16x8_t *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AA9398(int16x8_t *result, uint64_t a2, const __int16 *a3, uint64_t a4, int a5, uint64_t a6, int16x8_t *a7, uint64_t a8)
{
  do
  {
    int16x8x4_t v11 = vld4q_dup_s16(a3);
    a3 = (const __int16 *)((char *)a3 + a8);
    result[1] = v11.val[3];
    a7[1] = v11.val[2];
    result[2] = v11.val[3];
    result[3] = v11.val[3];
    a7[2] = v11.val[2];
    a7[3] = v11.val[2];
    *uint64_t result = v11.val[3];
    long long v8 = (int16x8_t *)((char *)result + a2);
    *a7 = v11.val[2];
    long long v9 = (int16x8_t *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    v8[1] = v11.val[1];
    v9[1] = v11.val[0];
    v8[2] = v11.val[1];
    v8[3] = v11.val[1];
    v9[2] = v11.val[0];
    v9[3] = v11.val[0];
    int16x8_t *v8 = v11.val[1];
    uint64_t result = (int16x8_t *)((char *)v8 + a2);
    int16x8_t *v9 = v11.val[0];
    a7 = (int16x8_t *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AA93D8(int16x8_t *result, uint64_t a2, const __int16 *a3, uint64_t a4, int a5, uint64_t a6, int16x8_t *a7, uint64_t a8)
{
  do
  {
    int16x8x4_t v11 = vld4q_dup_s16(a3);
    a3 = (const __int16 *)((char *)a3 + a8);
    result[1] = v11.val[3];
    a7[1] = v11.val[2];
    result[2] = v11.val[3];
    result[3] = v11.val[3];
    a7[2] = v11.val[2];
    a7[3] = v11.val[2];
    result[4] = v11.val[3];
    result[5] = v11.val[3];
    a7[4] = v11.val[2];
    a7[5] = v11.val[2];
    result[6] = v11.val[3];
    result[7] = v11.val[3];
    a7[6] = v11.val[2];
    a7[7] = v11.val[2];
    *uint64_t result = v11.val[3];
    long long v8 = (int16x8_t *)((char *)result + a2);
    *a7 = v11.val[2];
    long long v9 = (int16x8_t *)((char *)a7 + a2);
    BOOL v10 = __OFSUB__(a5, 4);
    a5 -= 4;
    v8[1] = v11.val[1];
    v9[1] = v11.val[0];
    v8[2] = v11.val[1];
    v8[3] = v11.val[1];
    v9[2] = v11.val[0];
    v9[3] = v11.val[0];
    v8[4] = v11.val[1];
    v8[5] = v11.val[1];
    v9[4] = v11.val[0];
    v9[5] = v11.val[0];
    v8[6] = v11.val[1];
    v8[7] = v11.val[1];
    v9[6] = v11.val[0];
    v9[7] = v11.val[0];
    int16x8_t *v8 = v11.val[1];
    uint64_t result = (int16x8_t *)((char *)v8 + a2);
    int16x8_t *v9 = v11.val[0];
    a7 = (int16x8_t *)((char *)v9 + a2);
  }
  while (!((a5 < 0) ^ v10 | (a5 == 0)));
  return result;
}

uint64_t sub_224AA9444(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&dword_224AA95A4 - *((unsigned __int16 *)&dword_224AA95A4 + __clz(a4) - 25)))();
}

int16x4_t *sub_224AA9468(int16x4_t *result, uint64_t a2, int16x4_t *a3, uint64_t a4, int a5, uint64_t a6, int16x4_t *a7)
{
  uint16x4_t v7 = (uint16x4_t)*a3;
  v7.i16[0] = vaddv_s16(*a3);
  int16x4_t v8 = vdup_lane_s16((int16x4_t)vrshr_n_u16(v7, 2uLL), 0);
  do
  {
    *uint64_t result = v8;
    long long v9 = (int16x4_t *)((char *)result + a2);
    *a7 = v8;
    BOOL v10 = (int16x4_t *)((char *)a7 + a2);
    BOOL v11 = __OFSUB__(a5, 4);
    a5 -= 4;
    int16x4_t *v9 = v8;
    uint64_t result = (int16x4_t *)((char *)v9 + a2);
    int16x4_t *v10 = v8;
    a7 = (int16x4_t *)((char *)v10 + a2);
  }
  while (!((a5 < 0) ^ v11 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AA9494(int16x8_t *result, uint64_t a2, int16x8_t *a3, uint64_t a4, int a5, uint64_t a6, int16x8_t *a7)
{
  int16x8_t v7 = *a3;
  v7.i16[0] = vaddvq_s16(*a3);
  int16x8_t v8 = vdupq_lane_s16((int16x4_t)vrshr_n_u16(*(uint16x4_t *)v7.i8, 3uLL), 0);
  do
  {
    *uint64_t result = v8;
    long long v9 = (int16x8_t *)((char *)result + a2);
    *a7 = v8;
    BOOL v10 = (int16x8_t *)((char *)a7 + a2);
    BOOL v11 = __OFSUB__(a5, 4);
    a5 -= 4;
    int16x8_t *v9 = v8;
    uint64_t result = (int16x8_t *)((char *)v9 + a2);
    int16x8_t *v10 = v8;
    a7 = (int16x8_t *)((char *)v10 + a2);
  }
  while (!((a5 < 0) ^ v11 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AA94C0(int16x8_t *result, uint64_t a2, int16x8_t *a3, uint64_t a4, int a5, uint64_t a6, int16x8_t *a7)
{
  int16x8_t v7 = vpaddq_s16(*a3, a3[1]);
  v7.i16[0] = vaddvq_s16(v7);
  int16x8_t v8 = vdupq_lane_s16((int16x4_t)vrshr_n_u16(*(uint16x4_t *)v7.i8, 4uLL), 0);
  do
  {
    *uint64_t result = v8;
    result[1] = v8;
    long long v9 = (int16x8_t *)((char *)result + a2);
    *a7 = v8;
    a7[1] = v8;
    BOOL v10 = (int16x8_t *)((char *)a7 + a2);
    BOOL v11 = __OFSUB__(a5, 4);
    a5 -= 4;
    int16x8_t *v9 = v8;
    v9[1] = v8;
    uint64_t result = (int16x8_t *)((char *)v9 + a2);
    int16x8_t *v10 = v8;
    v10[1] = v8;
    a7 = (int16x8_t *)((char *)v10 + a2);
  }
  while (!((a5 < 0) ^ v11 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AA94F4(int16x8_t *result, uint64_t a2, int16x8_t *a3, uint64_t a4, int a5, uint64_t a6, int16x8_t *a7)
{
  int32x4_t v7 = (int32x4_t)vpaddq_s16(vpaddq_s16(*a3, a3[1]), vpaddq_s16(a3[2], a3[3]));
  v7.i32[0] = vaddlvq_u16((uint16x8_t)v7);
  int16x8_t v8 = vdupq_lane_s16(vrshrn_n_s32(v7, 5uLL), 0);
  do
  {
    *uint64_t result = v8;
    result[1] = v8;
    result[2] = v8;
    result[3] = v8;
    long long v9 = (int16x8_t *)((char *)result + a2);
    *a7 = v8;
    a7[1] = v8;
    a7[2] = v8;
    a7[3] = v8;
    BOOL v10 = (int16x8_t *)((char *)a7 + a2);
    BOOL v11 = __OFSUB__(a5, 4);
    a5 -= 4;
    int16x8_t *v9 = v8;
    v9[1] = v8;
    v9[2] = v8;
    v9[3] = v8;
    uint64_t result = (int16x8_t *)((char *)v9 + a2);
    int16x8_t *v10 = v8;
    v10[1] = v8;
    v10[2] = v8;
    v10[3] = v8;
    a7 = (int16x8_t *)((char *)v10 + a2);
  }
  while (!((a5 < 0) ^ v11 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AA9538(int16x8_t *result, uint64_t a2, int16x8_t *a3, uint64_t a4, int a5, uint64_t a6, int16x8_t *a7)
{
  int32x4_t v7 = (int32x4_t)vpaddq_s16(vpaddq_s16(vpaddq_s16(*a3, a3[1]), vpaddq_s16(a3[2], a3[3])), vpaddq_s16(vpaddq_s16(a3[4], a3[5]), vpaddq_s16(a3[6], a3[7])));
  v7.i32[0] = vaddlvq_u16((uint16x8_t)v7);
  uint64_t v8 = a2 - 64;
  int16x8_t v9 = vdupq_lane_s16(vrshrn_n_s32(v7, 6uLL), 0);
  do
  {
    *uint64_t result = v9;
    result[1] = v9;
    result[2] = v9;
    result[3] = v9;
    BOOL v10 = result + 4;
    *a7 = v9;
    a7[1] = v9;
    a7[2] = v9;
    a7[3] = v9;
    BOOL v11 = a7 + 4;
    int16x8_t *v10 = v9;
    v10[1] = v9;
    v10[2] = v9;
    v10[3] = v9;
    uint64_t v12 = (int16x8_t *)((char *)v10 + v8);
    *BOOL v11 = v9;
    v11[1] = v9;
    v11[2] = v9;
    v11[3] = v9;
    long long v13 = (int16x8_t *)((char *)v11 + v8);
    BOOL v14 = __OFSUB__(a5, 4);
    a5 -= 4;
    *uint64_t v12 = v9;
    v12[1] = v9;
    v12[2] = v9;
    v12[3] = v9;
    v12 += 4;
    *long long v13 = v9;
    v13[1] = v9;
    v13[2] = v9;
    v13[3] = v9;
    v13 += 4;
    *uint64_t v12 = v9;
    v12[1] = v9;
    v12[2] = v9;
    v12[3] = v9;
    uint64_t result = (int16x8_t *)((char *)v12 + v8);
    *long long v13 = v9;
    v13[1] = v9;
    v13[2] = v9;
    v13[3] = v9;
    a7 = (int16x8_t *)((char *)v13 + v8);
  }
  while (!((a5 < 0) ^ v14 | (a5 == 0)));
  return result;
}

uint64_t sub_224AA95B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return ((uint64_t (*)(void))((char *)&dword_224AA973C - *((unsigned __int16 *)&dword_224AA973C + __clz(a5) - 25)))();
}

uint64_t sub_224AA95E4(uint64_t a1, uint64_t a2, int16x4_t *a3, uint64_t (*a4)(__n128))
{
  uint16x4_t v4 = (uint16x4_t)*a3;
  v4.i16[0] = vaddv_s16(*a3);
  return a4((__n128)vdupq_lane_s16((int16x4_t)vrshr_n_u16(v4, 2uLL), 0));
}

double *sub_224AA95F8(double *result, uint64_t a2, double a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, double *a8)
{
  do
  {
    *uint64_t result = a3;
    uint64_t v8 = (double *)((char *)result + a2);
    *a8 = a3;
    int16x8_t v9 = (double *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    double *v8 = a3;
    uint64_t result = (double *)((char *)v8 + a2);
    double *v9 = a3;
    a8 = (double *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA9614(uint64_t a1, uint64_t a2, int16x8_t *a3, uint64_t (*a4)(__n128))
{
  int16x8_t v4 = *a3;
  v4.i16[0] = vaddvq_s16(*a3);
  return a4((__n128)vdupq_lane_s16((int16x4_t)vrshr_n_u16(*(uint16x4_t *)v4.i8, 3uLL), 0));
}

__n128 *sub_224AA9628(__n128 *result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, __n128 *a8)
{
  do
  {
    *uint64_t result = a3;
    uint64_t v8 = (__n128 *)((char *)result + a2);
    *a8 = a3;
    int16x8_t v9 = (__n128 *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    __n128 *v8 = a3;
    uint64_t result = (__n128 *)((char *)v8 + a2);
    __n128 *v9 = a3;
    a8 = (__n128 *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA9644(uint64_t a1, uint64_t a2, int16x8_t *a3, uint64_t (*a4)(__n128, __n128))
{
  int16x8_t v4 = vpaddq_s16(*a3, a3[1]);
  v4.i16[0] = vaddvq_s16(v4);
  __n128 v5 = (__n128)vdupq_lane_s16((int16x4_t)vrshr_n_u16(*(uint16x4_t *)v4.i8, 4uLL), 0);
  return a4(v5, v5);
}

__n128 *sub_224AA9660(__n128 *result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, __n128 *a8)
{
  do
  {
    *uint64_t result = a3;
    result[1] = a3;
    uint64_t v8 = (__n128 *)((char *)result + a2);
    *a8 = a3;
    a8[1] = a3;
    int16x8_t v9 = (__n128 *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    __n128 *v8 = a3;
    v8[1] = a3;
    uint64_t result = (__n128 *)((char *)v8 + a2);
    __n128 *v9 = a3;
    v9[1] = a3;
    a8 = (__n128 *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA9680(uint64_t a1, uint64_t a2, int16x8_t *a3, uint64_t (*a4)(__n128))
{
  int32x4_t v4 = (int32x4_t)vpaddlq_u16((uint16x8_t)vpaddq_s16(vpaddq_s16(*a3, a3[1]), vpaddq_s16(a3[2], a3[3])));
  v4.i32[0] = vaddvq_s32(v4);
  return a4((__n128)vdupq_lane_s16(vrshrn_n_s32(v4, 5uLL), 0));
}

__n128 *sub_224AA96A4(__n128 *result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, __n128 *a8)
{
  do
  {
    *uint64_t result = a3;
    result[1] = a3;
    result[2] = a3;
    result[3] = a3;
    uint64_t v8 = (__n128 *)((char *)result + a2);
    *a8 = a3;
    a8[1] = a3;
    a8[2] = a3;
    a8[3] = a3;
    int16x8_t v9 = (__n128 *)((char *)a8 + a2);
    BOOL v10 = __OFSUB__(a6, 4);
    a6 -= 4;
    __n128 *v8 = a3;
    v8[1] = a3;
    v8[2] = a3;
    v8[3] = a3;
    uint64_t result = (__n128 *)((char *)v8 + a2);
    __n128 *v9 = a3;
    v9[1] = a3;
    v9[2] = a3;
    v9[3] = a3;
    a8 = (__n128 *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v10 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA96CC(uint64_t a1, uint64_t a2, int16x8_t *a3, uint64_t (*a4)(__n128))
{
  int32x4_t v4 = (int32x4_t)vpaddq_s16(vpaddq_s16(vpaddq_s16(*a3, a3[1]), vpaddq_s16(a3[2], a3[3])), vpaddq_s16(vpaddq_s16(a3[4], a3[5]), vpaddq_s16(a3[6], a3[7])));
  v4.i32[0] = vaddlvq_u16((uint16x8_t)v4);
  return a4((__n128)vdupq_lane_s16(vrshrn_n_s32(v4, 6uLL), 0));
}

__n128 *sub_224AA9700(__n128 *result, uint64_t a2, __n128 a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, __n128 *a8)
{
  uint64_t v8 = a2 - 64;
  do
  {
    *uint64_t result = a3;
    result[1] = a3;
    result[2] = a3;
    result[3] = a3;
    int16x8_t v9 = result + 4;
    *a8 = a3;
    a8[1] = a3;
    a8[2] = a3;
    a8[3] = a3;
    BOOL v10 = a8 + 4;
    __n128 *v9 = a3;
    v9[1] = a3;
    v9[2] = a3;
    v9[3] = a3;
    BOOL v11 = (__n128 *)((char *)v9 + v8);
    __n128 *v10 = a3;
    v10[1] = a3;
    v10[2] = a3;
    v10[3] = a3;
    uint64_t v12 = (__n128 *)((char *)v10 + v8);
    BOOL v13 = __OFSUB__(a6, 4);
    a6 -= 4;
    *BOOL v11 = a3;
    v11[1] = a3;
    v11[2] = a3;
    v11[3] = a3;
    v11 += 4;
    *uint64_t v12 = a3;
    v12[1] = a3;
    v12[2] = a3;
    v12[3] = a3;
    v12 += 4;
    *BOOL v11 = a3;
    v11[1] = a3;
    v11[2] = a3;
    v11[3] = a3;
    uint64_t result = (__n128 *)((char *)v11 + v8);
    *uint64_t v12 = a3;
    v12[1] = a3;
    v12[2] = a3;
    v12[3] = a3;
    a8 = (__n128 *)((char *)v12 + v8);
  }
  while (!((a6 < 0) ^ v13 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA9750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return ((uint64_t (*)(void))((char *)qword_224AA9A38 - *((unsigned __int16 *)&qword_224AA9A38[-6] + __clz(a5) - 1)))();
}

uint64_t sub_224AA97A0(uint64_t a1, uint64_t a2, uint16x4_t *a3, uint64_t (*a4)(uint64_t, uint64_t, __int16 *, float))
{
  return a4(a1, a2, (__int16 *)&a3[1] + 1, COERCE_FLOAT(vaddlv_u16(*a3)));
}

int16x4_t *sub_224AA97B0(int16x4_t *result, uint64_t a2, uint16x4_t *a3, int32x2_t a4, uint64_t a5, int a6, uint64_t a7, int16x4_t *a8)
{
  int32x2_t v10 = (int32x2_t)*a3;
  v10.i32[0] = vaddlv_u16(*a3);
  int16x4_t v11 = (int16x4_t)vshl_u32((uint32x2_t)vadd_s32(vadd_s32(a4, v8), v10), v9);
  if (a6 != 4)
  {
    if (a6 == 16) {
      unsigned int v12 = 26215;
    }
    else {
      unsigned int v12 = 43691;
    }
    int16x4_t v11 = (int16x4_t)vshr_n_u32((uint32x2_t)vmul_s32((int32x2_t)v11, vdup_n_s32(v12)), 0x11uLL);
  }
  int16x4_t v13 = vdup_lane_s16(v11, 0);
  do
  {
    *uint64_t result = v13;
    BOOL v14 = (int16x4_t *)((char *)result + a2);
    *a8 = v13;
    long long v15 = (int16x4_t *)((char *)a8 + a2);
    BOOL v16 = __OFSUB__(a6, 4);
    a6 -= 4;
    *BOOL v14 = v13;
    uint64_t result = (int16x4_t *)((char *)v14 + a2);
    *long long v15 = v13;
    a8 = (int16x4_t *)((char *)v15 + a2);
  }
  while (!((a6 < 0) ^ v16 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA9808(uint64_t a1, uint64_t a2, uint16x8_t *a3, uint64_t (*a4)(uint64_t, uint64_t, __int16 *, float))
{
  return a4(a1, a2, &a3[1].i16[1], COERCE_FLOAT(vaddlvq_u16(*a3)));
}

int16x8_t *sub_224AA9818(int16x8_t *result, uint64_t a2, uint16x8_t *a3, int32x2_t a4, uint64_t a5, int a6, uint64_t a7, int16x8_t *a8)
{
  uint16x8_t v10 = *a3;
  v10.i32[0] = vaddlvq_u16(*a3);
  int16x4_t v11 = (int16x4_t)vshl_u32((uint32x2_t)vadd_s32(vadd_s32(a4, v8), *(int32x2_t *)v10.i8), v9);
  if (a6 != 8)
  {
    if (a6 == 32) {
      unsigned int v12 = 26215;
    }
    else {
      unsigned int v12 = 43691;
    }
    int16x4_t v11 = (int16x4_t)vshr_n_u32((uint32x2_t)vmul_s32((int32x2_t)v11, vdup_n_s32(v12)), 0x11uLL);
  }
  int16x8_t v13 = vdupq_lane_s16(v11, 0);
  do
  {
    *uint64_t result = v13;
    BOOL v14 = (int16x8_t *)((char *)result + a2);
    *a8 = v13;
    long long v15 = (int16x8_t *)((char *)a8 + a2);
    BOOL v16 = __OFSUB__(a6, 4);
    a6 -= 4;
    *BOOL v14 = v13;
    uint64_t result = (int16x8_t *)((char *)v14 + a2);
    *long long v15 = v13;
    a8 = (int16x8_t *)((char *)v15 + a2);
  }
  while (!((a6 < 0) ^ v16 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA9870(uint64_t a1, uint64_t a2, int16x8_t *a3, uint64_t (*a4)(uint64_t, uint64_t, __int16 *, float))
{
  return a4(a1, a2, &a3[2].i16[1], COERCE_FLOAT(vaddlvq_u16((uint16x8_t)vpaddq_s16(*a3, a3[1]))));
}

int16x8_t *sub_224AA9884(int16x8_t *result, uint64_t a2, int16x8_t *a3, int32x2_t a4, uint64_t a5, int a6, uint64_t a7, int16x8_t *a8)
{
  uint16x8_t v10 = (uint16x8_t)vpaddq_s16(*a3, a3[1]);
  v10.i32[0] = vaddlvq_u16(v10);
  int16x4_t v11 = (int16x4_t)vshl_u32((uint32x2_t)vadd_s32(vadd_s32(a4, v8), *(int32x2_t *)v10.i8), v9);
  if (a6 != 16)
  {
    if ((a6 & 0x38) != 0) {
      unsigned int v12 = 43691;
    }
    else {
      unsigned int v12 = 26215;
    }
    int16x4_t v11 = (int16x4_t)vshr_n_u32((uint32x2_t)vmul_s32((int32x2_t)v11, vdup_n_s32(v12)), 0x11uLL);
  }
  int16x8_t v13 = vdupq_lane_s16(v11, 0);
  do
  {
    *uint64_t result = v13;
    result[1] = v13;
    BOOL v14 = (int16x8_t *)((char *)result + a2);
    *a8 = v13;
    a8[1] = v13;
    long long v15 = (int16x8_t *)((char *)a8 + a2);
    BOOL v16 = __OFSUB__(a6, 4);
    a6 -= 4;
    *BOOL v14 = v13;
    v14[1] = v13;
    uint64_t result = (int16x8_t *)((char *)v14 + a2);
    *long long v15 = v13;
    v15[1] = v13;
    a8 = (int16x8_t *)((char *)v15 + a2);
  }
  while (!((a6 < 0) ^ v16 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA98E4(uint64_t a1, uint64_t a2, int16x8_t *a3, uint64_t (*a4)(uint64_t, uint64_t, __int16 *, float))
{
  return a4(a1, a2, &a3[4].i16[1], COERCE_FLOAT(vaddlvq_u16((uint16x8_t)vpaddq_s16(vpaddq_s16(*a3, a3[1]), vpaddq_s16(a3[2], a3[3])))));
}

int16x8_t *sub_224AA9900(int16x8_t *result, uint64_t a2, int16x8_t *a3, int32x2_t a4, uint64_t a5, int a6, uint64_t a7, int16x8_t *a8)
{
  uint16x8_t v10 = (uint16x8_t)vpaddq_s16(vpaddq_s16(*a3, a3[1]), vpaddq_s16(a3[2], a3[3]));
  v10.i32[0] = vaddlvq_u16(v10);
  int16x4_t v11 = (int16x4_t)vshl_u32((uint32x2_t)vadd_s32(vadd_s32(a4, v8), *(int32x2_t *)v10.i8), v9);
  if (a6 != 32)
  {
    if (a6 == 8) {
      unsigned int v12 = 26215;
    }
    else {
      unsigned int v12 = 43691;
    }
    int16x4_t v11 = (int16x4_t)vshr_n_u32((uint32x2_t)vmul_s32((int32x2_t)v11, vdup_n_s32(v12)), 0x11uLL);
  }
  int16x8_t v13 = vdupq_lane_s16(v11, 0);
  do
  {
    *uint64_t result = v13;
    result[1] = v13;
    result[2] = v13;
    result[3] = v13;
    BOOL v14 = (int16x8_t *)((char *)result + a2);
    *a8 = v13;
    a8[1] = v13;
    a8[2] = v13;
    a8[3] = v13;
    long long v15 = (int16x8_t *)((char *)a8 + a2);
    BOOL v16 = __OFSUB__(a6, 4);
    a6 -= 4;
    *BOOL v14 = v13;
    v14[1] = v13;
    v14[2] = v13;
    v14[3] = v13;
    uint64_t result = (int16x8_t *)((char *)v14 + a2);
    *long long v15 = v13;
    v15[1] = v13;
    v15[2] = v13;
    v15[3] = v13;
    a8 = (int16x8_t *)((char *)v15 + a2);
  }
  while (!((a6 < 0) ^ v16 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA9970(uint64_t a1, uint64_t a2, int16x8_t *a3, uint64_t (*a4)(uint64_t, uint64_t, __int16 *, float))
{
  return a4(a1, a2, &a3[8].i16[1], COERCE_FLOAT(vaddlvq_u16((uint16x8_t)vpaddq_s16(vpaddq_s16(vpaddq_s16(*a3, a3[1]), vpaddq_s16(a3[2], a3[3])), vpaddq_s16(vpaddq_s16(a3[4], a3[5]), vpaddq_s16(a3[6], a3[7]))))));
}

int16x8_t *sub_224AA99A0(int16x8_t *result, uint64_t a2, int16x8_t *a3, int32x2_t a4, uint64_t a5, int a6, uint64_t a7, int16x8_t *a8)
{
  uint16x8_t v10 = (uint16x8_t)vpaddq_s16(vpaddq_s16(vpaddq_s16(*a3, a3[1]), vpaddq_s16(a3[2], a3[3])), vpaddq_s16(vpaddq_s16(a3[4], a3[5]), vpaddq_s16(a3[6], a3[7])));
  v10.i32[0] = vaddlvq_u16(v10);
  int16x4_t v11 = (int16x4_t)vshl_u32((uint32x2_t)vadd_s32(vadd_s32(a4, v8), *(int32x2_t *)v10.i8), v9);
  if (a6 != 64)
  {
    if (a6 == 16) {
      unsigned int v12 = 26215;
    }
    else {
      unsigned int v12 = 43691;
    }
    int16x4_t v11 = (int16x4_t)vshr_n_u32((uint32x2_t)vmul_s32((int32x2_t)v11, vdup_n_s32(v12)), 0x11uLL);
  }
  uint64_t v13 = a2 - 64;
  int16x8_t v14 = vdupq_lane_s16(v11, 0);
  do
  {
    *uint64_t result = v14;
    result[1] = v14;
    result[2] = v14;
    result[3] = v14;
    long long v15 = result + 4;
    *a8 = v14;
    a8[1] = v14;
    a8[2] = v14;
    a8[3] = v14;
    BOOL v16 = a8 + 4;
    *long long v15 = v14;
    v15[1] = v14;
    v15[2] = v14;
    v15[3] = v14;
    int16x8_t v17 = (int16x8_t *)((char *)v15 + v13);
    int16x8_t *v16 = v14;
    v16[1] = v14;
    v16[2] = v14;
    v16[3] = v14;
    int16x8_t v18 = (int16x8_t *)((char *)v16 + v13);
    BOOL v19 = __OFSUB__(a6, 4);
    a6 -= 4;
    *int16x8_t v17 = v14;
    v17[1] = v14;
    v17[2] = v14;
    v17[3] = v14;
    v17 += 4;
    *int16x8_t v18 = v14;
    v18[1] = v14;
    v18[2] = v14;
    v18[3] = v14;
    v18 += 4;
    *int16x8_t v17 = v14;
    v17[1] = v14;
    v17[2] = v14;
    v17[3] = v14;
    uint64_t result = (int16x8_t *)((char *)v17 + v13);
    *int16x8_t v18 = v14;
    v18[1] = v14;
    v18[2] = v14;
    v18[3] = v14;
    a8 = (int16x8_t *)((char *)v18 + v13);
  }
  while (!((a6 < 0) ^ v19 | (a6 == 0)));
  return result;
}

uint64_t sub_224AA9A4C(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, const __int16 *a7, unsigned int a8)
{
  __n128 v8 = (__n128)vld1q_dup_s16(a7);
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128))((char *)&qword_224AA9BF0
                                                                         - *((unsigned __int16 *)&qword_224AA9BF0
                                                                           + __clz(a8)
                                                                           - 25)))(a1, a2, a3, a4, v8);
}

void *sub_224AA9A7C@<X0>(void *result@<X0>, uint64_t a2@<X1>, const __int16 *a3@<X2>, int a4@<W4>, void *a5@<X6>, uint64_t a6@<X7>, const double *a7@<X8>, int64x2_t a8@<Q0>, int64x2_t a9@<Q1>, int64x2_t a10@<Q2>, int64x2_t a11@<Q3>, int16x8_t a12@<Q4>)
{
  int16x8_t v12 = (int16x8_t)vld1q_dup_f64(a7);
  int16x8_t v13 = vsubq_s16(v12, a12);
  do
  {
    *(int16x4x4_t *)a8.i8 = vld4_dup_s16(a3);
    a3 = (const __int16 *)((char *)a3 + a6);
    a8 = vzip1q_s64(a8, a9);
    a10 = vzip1q_s64(a10, a11);
    int16x8_t v14 = vaddq_s16(v13, (int16x8_t)a8);
    int16x8_t v15 = vaddq_s16(v13, (int16x8_t)a10);
    int16x8_t v16 = vabdq_s16(v12, v14);
    int16x8_t v17 = vabdq_s16(v12, v15);
    int16x8_t v18 = vabdq_s16(a12, v14);
    int16x8_t v19 = vabdq_s16(a12, v15);
    int8x16_t v20 = vbslq_s8((int8x16_t)vcgeq_s16((int16x8_t)vminq_u16((uint16x8_t)v17, (uint16x8_t)v19), vabdq_s16((int16x8_t)a10, v15)), (int8x16_t)a10, vbslq_s8((int8x16_t)vcgeq_s16(v19, v17), (int8x16_t)v12, (int8x16_t)a12));
    int8x16_t v21 = vbslq_s8((int8x16_t)vcgeq_s16((int16x8_t)vminq_u16((uint16x8_t)v16, (uint16x8_t)v18), vabdq_s16((int16x8_t)a8, v14)), (int8x16_t)a8, vbslq_s8((int8x16_t)vcgeq_s16(v18, v16), (int8x16_t)v12, (int8x16_t)a12));
    *uint64_t result = v20.i64[1];
    int16x8_t v22 = (void *)((char *)result + a2);
    *a5 = v20.i64[0];
    int16x8_t v23 = (void *)((char *)a5 + a2);
    BOOL v24 = __OFSUB__(a4, 4);
    a4 -= 4;
    *int16x8_t v22 = v21.i64[1];
    uint64_t result = (void *)((char *)v22 + a2);
    *int16x8_t v23 = v21.i64[0];
    a5 = (void *)((char *)v23 + a2);
  }
  while (!((a4 < 0) ^ v24 | (a4 == 0)));
  return result;
}

int8x16_t *sub_224AA9AF4@<X0>(int8x16_t *result@<X0>, uint64_t a2@<X1>, const __int16 *a3@<X2>, int a4@<W3>, int a5@<W4>, int8x16_t *a6@<X6>, uint64_t a7@<X7>, int16x8_t *a8@<X8>, int16x8_t a9@<Q4>)
{
  int16x8_t v10 = *a8;
  uint32x2_t v9 = a8 + 1;
  unsigned int v11 = a4;
  int16x8_t v12 = (int8x16_t *)((char *)result + a2);
  int16x8_t v13 = (int8x16_t *)((char *)a6 + a2);
  uint64_t v14 = 2 * a2 - 2 * a4;
  while (1)
  {
    int16x8x4_t v30 = vld4q_dup_s16(a3);
    a3 = (const __int16 *)((char *)a3 + a7);
    while (1)
    {
      int16x8_t v15 = vsubq_s16(v10, a9);
      int16x8_t v16 = vaddq_s16(v15, v30.val[0]);
      int16x8_t v17 = vaddq_s16(v15, v30.val[1]);
      int16x8_t v18 = vaddq_s16(v15, v30.val[2]);
      int16x8_t v19 = vaddq_s16(v15, v30.val[3]);
      int16x8_t v20 = vabdq_s16(v10, v16);
      int16x8_t v21 = vabdq_s16(v10, v17);
      int16x8_t v22 = vabdq_s16(v10, v18);
      int16x8_t v23 = vabdq_s16(v10, v19);
      int16x8_t v24 = vabdq_s16(a9, v16);
      int16x8_t v25 = vabdq_s16(a9, v17);
      int16x8_t v26 = vabdq_s16(a9, v18);
      int16x8_t v27 = vabdq_s16(a9, v19);
      *result++ = vbslq_s8((int8x16_t)vcgeq_s16((int16x8_t)vminq_u16((uint16x8_t)v23, (uint16x8_t)v27), vabdq_s16(v30.val[3], v19)), (int8x16_t)v30.val[3], vbslq_s8((int8x16_t)vcgeq_s16(v27, v23), (int8x16_t)v10, (int8x16_t)a9));
      *a6++ = vbslq_s8((int8x16_t)vcgeq_s16((int16x8_t)vminq_u16((uint16x8_t)v22, (uint16x8_t)v26), vabdq_s16(v30.val[2], v18)), (int8x16_t)v30.val[2], vbslq_s8((int8x16_t)vcgeq_s16(v26, v22), (int8x16_t)v10, (int8x16_t)a9));
      BOOL v28 = __OFSUB__(a4, 8);
      a4 -= 8;
      *v12++ = vbslq_s8((int8x16_t)vcgeq_s16((int16x8_t)vminq_u16((uint16x8_t)v21, (uint16x8_t)v25), vabdq_s16(v30.val[1], v17)), (int8x16_t)v30.val[1], vbslq_s8((int8x16_t)vcgeq_s16(v25, v21), (int8x16_t)v10, (int8x16_t)a9));
      *v13++ = vbslq_s8((int8x16_t)vcgeq_s16((int16x8_t)vminq_u16((uint16x8_t)v20, (uint16x8_t)v24), vabdq_s16(v30.val[0], v16)), (int8x16_t)v30.val[0], vbslq_s8((int8x16_t)vcgeq_s16(v24, v20), (int8x16_t)v10, (int8x16_t)a9));
      if ((a4 < 0) ^ v28 | (a4 == 0)) {
        break;
      }
      int16x8_t v10 = *v9++;
    }
    BOOL v28 = __OFSUB__(a5, 4);
    a5 -= 4;
    if ((a5 < 0) ^ v28 | (a5 == 0)) {
      break;
    }
    int16x4_t v29 = (int16x8_t *)((char *)v9 - 2 * v11);
    uint64_t result = (int8x16_t *)((char *)result + v14);
    a6 = (int8x16_t *)((char *)a6 + v14);
    int16x8_t v10 = *v29;
    uint32x2_t v9 = v29 + 1;
    int16x8_t v12 = (int8x16_t *)((char *)v12 + v14);
    int16x8_t v13 = (int8x16_t *)((char *)v13 + v14);
    a4 = v11;
  }
  return result;
}

uint64_t sub_224AA9BFC(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, unsigned int a9)
{
  uint32x2_t v9 = (const __int16 *)(a7 - 2 * a9);
  __n128 v10 = (__n128)vld1q_dup_s16(v9);
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128))((char *)&qword_224AA9EC0
                                                                         - *((unsigned __int16 *)&qword_224AA9EC0
                                                                           + __clz(a8)
                                                                           - 25)))(a1, a2, a3, a4, v10);
}

int16x4_t *sub_224AA9C38@<X0>(int16x4_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int16x4_t *a5@<X6>, const double *a6@<X8>, int16x8_t a7@<Q0>, int16x8_t a8@<Q1>, int64x2_t a9@<Q2>, int64x2_t a10@<Q3>, int16x8_t a11@<Q4>)
{
  int16x8_t v13 = (int16x8_t)vld1q_dup_f64(a6);
  uint8x8_t v14 = (uint8x8_t)vld1_dup_f32(v11);
  int16x8_t v15 = (const __int16 *)(a3 - 8);
  int16x8_t v16 = vdupq_lane_s16(*(int16x4_t *)v13.i8, 3);
  int16x8_t v17 = vsubq_s16(v13, a11);
  int16x8_t v18 = (int16x8_t)vmovl_u8(v14);
  uint16x4_t v19 = (uint16x4_t)vadd_s16(*(int16x4_t *)a11.i8, *(int16x4_t *)v16.i8);
  do
  {
    *(int16x4x4_t *)a7.i8 = vld4_dup_s16(v15);
    v15 -= 4;
    int8x8x4_t v24 = vld4_dup_s8(v12);
    v12 += 4;
    int16x8_t v20 = (int16x8_t)vzip1q_s64((int64x2_t)a8, (int64x2_t)a7);
    a7 = vsubq_s16((int16x8_t)vzip1q_s64(a10, a9), v16);
    a8 = vsubq_s16(v20, v16);
    *(uint16x8_t *)v24.val[0].i8 = vmovl_u8((uint8x8_t)vzip1_s32((int32x2_t)v24.val[0], (int32x2_t)v24.val[1]));
    *(uint16x8_t *)v24.val[2].i8 = vmovl_u8((uint8x8_t)vzip1_s32((int32x2_t)v24.val[2], (int32x2_t)v24.val[3]));
    *uint64_t result = vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(v19, 8uLL), *(int16x4_t *)a7.i8, *(int16x4_t *)v18.i8), *(int16x4_t *)v17.i8, (int16x4_t)v24.val[0]), 9uLL);
    int16x8_t v21 = (int16x4_t *)((char *)result + a2);
    *a5 = vrshrn_n_s32(vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_n_u16(v19, 8uLL), a7, v18), v17, *(int16x8_t *)v24.val[0].i8), 9uLL);
    int16x8_t v22 = (int16x4_t *)((char *)a5 + a2);
    BOOL v23 = __OFSUB__(a4, 4);
    a4 -= 4;
    *int16x8_t v21 = vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(v19, 8uLL), *(int16x4_t *)a8.i8, *(int16x4_t *)v18.i8), *(int16x4_t *)v17.i8, (int16x4_t)v24.val[2]), 9uLL);
    uint64_t result = (int16x4_t *)((char *)v21 + a2);
    *int16x8_t v22 = vrshrn_n_s32(vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_n_u16(v19, 8uLL), a8, v18), v17, *(int16x8_t *)v24.val[2].i8), 9uLL);
    a5 = (int16x4_t *)((char *)v22 + a2);
  }
  while (!((a4 < 0) ^ v23 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AA9CDC@<X0>(int16x8_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int16x8_t *a5@<X6>, int16x8_t *a6@<X8>, int16x8_t a7@<Q4>)
{
  uint32x2_t v9 = (const __int16 *)(a3 - 8);
  int16x8_t v10 = vdupq_laneq_s16(*a6, 7);
  int16x8_t v11 = vsubq_s16(*a6, a7);
  int16x8_t v12 = (int16x8_t)vmovl_u8(*v7);
  uint16x4_t v13 = (uint16x4_t)vadd_s16(*(int16x4_t *)a7.i8, *(int16x4_t *)v10.i8);
  do
  {
    int16x8x4_t v18 = vld4q_dup_s16(v9);
    v9 -= 4;
    int8x8x4_t v17 = vld4_dup_s8(v8);
    v8 += 4;
    v18.val[0] = vsubq_s16(v18.val[0], v10);
    v18.val[1] = vsubq_s16(v18.val[1], v10);
    v18.val[2] = vsubq_s16(v18.val[2], v10);
    v18.val[3] = vsubq_s16(v18.val[3], v10);
    *(uint16x8_t *)v17.val[0].i8 = vmovl_u8((uint8x8_t)v17.val[0]);
    *(uint16x8_t *)v17.val[1].i8 = vmovl_u8((uint8x8_t)v17.val[1]);
    *(uint16x8_t *)v17.val[2].i8 = vmovl_u8((uint8x8_t)v17.val[2]);
    *(uint16x8_t *)v17.val[3].i8 = vmovl_u8((uint8x8_t)v17.val[3]);
    *uint64_t result = vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(v13, 8uLL), *(int16x4_t *)v18.val[3].i8, *(int16x4_t *)v12.i8), *(int16x4_t *)v11.i8, (int16x4_t)v17.val[0]), 9uLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_n_u16(v13, 8uLL), v18.val[3], v12), v11, *(int16x8_t *)v17.val[0].i8), 9uLL);
    uint8x8_t v14 = (int16x8_t *)((char *)result + a2);
    *a5 = vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(v13, 8uLL), *(int16x4_t *)v18.val[2].i8, *(int16x4_t *)v12.i8), *(int16x4_t *)v11.i8, (int16x4_t)v17.val[1]), 9uLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_n_u16(v13, 8uLL), v18.val[2], v12), v11, *(int16x8_t *)v17.val[1].i8), 9uLL);
    int16x8_t v15 = (int16x8_t *)((char *)a5 + a2);
    BOOL v16 = __OFSUB__(a4, 4);
    a4 -= 4;
    *uint8x8_t v14 = vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(v13, 8uLL), *(int16x4_t *)v18.val[1].i8, *(int16x4_t *)v12.i8), *(int16x4_t *)v11.i8, (int16x4_t)v17.val[2]), 9uLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_n_u16(v13, 8uLL), v18.val[1], v12), v11, *(int16x8_t *)v17.val[2].i8), 9uLL);
    uint64_t result = (int16x8_t *)((char *)v14 + a2);
    *int16x8_t v15 = vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(v13, 8uLL), *(int16x4_t *)v18.val[0].i8, *(int16x4_t *)v12.i8), *(int16x4_t *)v11.i8, (int16x4_t)v17.val[3]), 9uLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_n_u16(v13, 8uLL), v18.val[0], v12), v11, *(int16x8_t *)v17.val[3].i8), 9uLL);
    a5 = (int16x8_t *)((char *)v15 + a2);
  }
  while (!((a4 < 0) ^ v16 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AA9DC0@<X0>(int16x8_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int16x8_t *a6@<X6>, int16x8_t *a7@<X8>, int16x8_t a8@<Q4>)
{
  int16x8_t v10 = (const __int16 *)(a3 + 2 * a4);
  uint64_t v11 = a2 - 2 * a4;
  int16x8_t v12 = vld1q_dup_s16(v10);
  uint16x4_t v13 = (const __int16 *)(a3 - 4);
  unsigned int v14 = a4;
  uint16x4_t v15 = (uint16x4_t)vadd_s16(*(int16x4_t *)a8.i8, *(int16x4_t *)v12.i8);
  while (1)
  {
    int16x8x2_t v29 = vld2q_dup_s16(v13);
    v13 -= 2;
    int8x8x2_t v28 = vld2_dup_s8(v9);
    v9 += 2;
    int16x8_t v16 = vsubq_s16(v29.val[0], v12);
    int16x8_t v17 = vsubq_s16(v29.val[1], v12);
    int16x8_t v18 = (int16x8_t)vmovl_u8((uint8x8_t)v28.val[0]);
    int16x8_t v19 = (int16x8_t)vmovl_u8((uint8x8_t)v28.val[1]);
    do
    {
      uint8x16_t v20 = *v8++;
      int16x8_t v21 = *a7;
      int16x8_t v22 = a7[1];
      a7 += 2;
      int16x8_t v23 = (int16x8_t)vmovl_u8(*(uint8x8_t *)v20.i8);
      int16x8_t v24 = (int16x8_t)vmovl_high_u8(v20);
      int16x8_t v25 = vsubq_s16(v21, a8);
      int16x8_t v26 = vsubq_s16(v22, a8);
      BOOL v27 = __OFSUB__(a4, 16);
      a4 -= 16;
      *uint64_t result = vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(v15, 8uLL), *(int16x4_t *)v17.i8, *(int16x4_t *)v23.i8), *(int16x4_t *)v25.i8, *(int16x4_t *)v18.i8), 9uLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_n_u16(v15, 8uLL), v17, v23), v25, v18), 9uLL);
      result[1] = vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(v15, 8uLL), *(int16x4_t *)v17.i8, *(int16x4_t *)v24.i8), *(int16x4_t *)v26.i8, *(int16x4_t *)v18.i8), 9uLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_n_u16(v15, 8uLL), v17, v24), v26, v18), 9uLL);
      result += 2;
      *a6 = vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(v15, 8uLL), *(int16x4_t *)v16.i8, *(int16x4_t *)v23.i8), *(int16x4_t *)v25.i8, *(int16x4_t *)v19.i8), 9uLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_n_u16(v15, 8uLL), v16, v23), v25, v19), 9uLL);
      a6[1] = vrshrn_high_n_s32(vrshrn_n_s32(vmlal_s16(vmlal_s16((int32x4_t)vshll_n_u16(v15, 8uLL), *(int16x4_t *)v16.i8, *(int16x4_t *)v24.i8), *(int16x4_t *)v26.i8, *(int16x4_t *)v19.i8), 9uLL), vmlal_high_s16(vmlal_high_s16((int32x4_t)vshll_n_u16(v15, 8uLL), v16, v24), v26, v19), 9uLL);
      a6 += 2;
    }
    while (!((a4 < 0) ^ v27 | (a4 == 0)));
    BOOL v27 = __OFSUB__(a5, 2);
    a5 -= 2;
    if ((a5 < 0) ^ v27 | (a5 == 0)) {
      break;
    }
    a7 = (int16x8_t *)((char *)a7 - 2 * v14);
    __n128 v8 = (uint8x16_t *)((char *)v8 - v14);
    uint64_t result = (int16x8_t *)((char *)result + v11);
    a6 = (int16x8_t *)((char *)a6 + v11);
    a4 = v14;
  }
  return result;
}

uint64_t sub_224AA9ECC(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, unsigned int a9)
{
  uint32x2_t v9 = (const __int16 *)(a7 - 2 * a9);
  __n128 v10 = (__n128)vld1q_dup_s16(v9);
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128))((char *)&qword_224AAA058
                                                                         - *((unsigned __int16 *)&qword_224AAA058
                                                                           + __clz(a8)
                                                                           - 25)))(a1, a2, a3, a4, v10);
}

void *sub_224AA9F04(void *result, uint64_t a2, const double *a3, double a4, double a5, double a6, double a7, int16x8_t a8, uint64_t a9, int a10, uint64_t a11, void *a12, const char *a13)
{
  int16x8_t v13 = (int16x8_t)vld1q_dup_f64(a3);
  int16x8_t v14 = vsubq_s16(v13, a8);
  do
  {
    int8x8x4_t v20 = vld4_dup_s8(a13);
    a13 += 4;
    int16x8_t v15 = vaddq_s16(vqrdmulhq_s16(v14, (int16x8_t)vshll_n_u8((uint8x8_t)vzip1_s32((int32x2_t)v20.val[0], (int32x2_t)v20.val[1]), 7uLL)), a8);
    int16x8_t v16 = vaddq_s16(vqrdmulhq_s16(v14, (int16x8_t)vshll_n_u8((uint8x8_t)vzip1_s32((int32x2_t)v20.val[2], (int32x2_t)v20.val[3]), 7uLL)), a8);
    *uint64_t result = v15.i64[0];
    int16x8_t v17 = (void *)((char *)result + a2);
    *a12 = v15.i64[1];
    int16x8_t v18 = (void *)((char *)a12 + a2);
    BOOL v19 = __OFSUB__(a10, 4);
    a10 -= 4;
    *int16x8_t v17 = v16.i64[0];
    uint64_t result = (void *)((char *)v17 + a2);
    *int16x8_t v18 = v16.i64[1];
    a12 = (void *)((char *)v18 + a2);
  }
  while (!((a10 < 0) ^ v19 | (a10 == 0)));
  return result;
}

int16x8_t *sub_224AA9F4C(int16x8_t *result, uint64_t a2, int16x8_t *a3, double a4, double a5, double a6, double a7, int16x8_t a8, uint64_t a9, int a10, uint64_t a11, int16x8_t *a12, const char *a13)
{
  int16x8_t v13 = vsubq_s16(*a3, a8);
  do
  {
    int8x8x4_t v17 = vld4_dup_s8(a13);
    a13 += 4;
    *uint64_t result = vaddq_s16(vqrdmulhq_s16(v13, (int16x8_t)vshll_n_u8((uint8x8_t)v17.val[0], 7uLL)), a8);
    int16x8_t v14 = (int16x8_t *)((char *)result + a2);
    *a12 = vaddq_s16(vqrdmulhq_s16(v13, (int16x8_t)vshll_n_u8((uint8x8_t)v17.val[1], 7uLL)), a8);
    int16x8_t v15 = (int16x8_t *)((char *)a12 + a2);
    BOOL v16 = __OFSUB__(a10, 4);
    a10 -= 4;
    *int16x8_t v14 = vaddq_s16(vqrdmulhq_s16(v13, (int16x8_t)vshll_n_u8((uint8x8_t)v17.val[2], 7uLL)), a8);
    uint64_t result = (int16x8_t *)((char *)v14 + a2);
    *int16x8_t v15 = vaddq_s16(vqrdmulhq_s16(v13, (int16x8_t)vshll_n_u8((uint8x8_t)v17.val[3], 7uLL)), a8);
    a12 = (int16x8_t *)((char *)v15 + a2);
  }
  while (!((a10 < 0) ^ v16 | (a10 == 0)));
  return result;
}

int16x8_t *sub_224AA9FA4(int16x8_t *result, uint64_t a2, int16x8_t *a3, int a4, int a5, double a6, double a7, double a8, double a9, int16x8_t a10, uint64_t a11, int16x8_t *a12, const char *a13)
{
  int16x8_t v13 = (int16x8_t *)((char *)result + a2);
  int16x8_t v14 = (int16x8_t *)((char *)a12 + a2);
  uint64_t v15 = 2 * a2 - 2 * a4;
  for (unsigned int i = a4; ; a4 = i)
  {
    int8x8x4_t v26 = vld4_dup_s8(a13);
    a13 += 4;
    int16x8_t v17 = (int16x8_t)vshll_n_u8((uint8x8_t)v26.val[0], 7uLL);
    int16x8_t v18 = (int16x8_t)vshll_n_u8((uint8x8_t)v26.val[1], 7uLL);
    int16x8_t v19 = (int16x8_t)vshll_n_u8((uint8x8_t)v26.val[2], 7uLL);
    int16x8_t v20 = (int16x8_t)vshll_n_u8((uint8x8_t)v26.val[3], 7uLL);
    do
    {
      int16x8_t v21 = *a3;
      int16x8_t v22 = a3[1];
      a3 += 2;
      int16x8_t v23 = vsubq_s16(v21, a10);
      int16x8_t v24 = vsubq_s16(v22, a10);
      BOOL v25 = __OFSUB__(a4, 16);
      a4 -= 16;
      *uint64_t result = vaddq_s16(vqrdmulhq_s16(v23, v17), a10);
      result[1] = vaddq_s16(vqrdmulhq_s16(v24, v17), a10);
      result += 2;
      *a12 = vaddq_s16(vqrdmulhq_s16(v23, v18), a10);
      a12[1] = vaddq_s16(vqrdmulhq_s16(v24, v18), a10);
      a12 += 2;
      *int16x8_t v13 = vaddq_s16(vqrdmulhq_s16(v23, v19), a10);
      v13[1] = vaddq_s16(vqrdmulhq_s16(v24, v19), a10);
      v13 += 2;
      *int16x8_t v14 = vaddq_s16(vqrdmulhq_s16(v23, v20), a10);
      v14[1] = vaddq_s16(vqrdmulhq_s16(v24, v20), a10);
      v14 += 2;
    }
    while (!((a4 < 0) ^ v25 | (a4 == 0)));
    BOOL v25 = __OFSUB__(a5, 4);
    a5 -= 4;
    if ((a5 < 0) ^ v25 | (a5 == 0)) {
      break;
    }
    a3 = (int16x8_t *)((char *)a3 - 2 * i);
    uint64_t result = (int16x8_t *)((char *)result + v15);
    a12 = (int16x8_t *)((char *)a12 + v15);
    int16x8_t v13 = (int16x8_t *)((char *)v13 + v15);
    int16x8_t v14 = (int16x8_t *)((char *)v14 + v15);
  }
  return result;
}

uint64_t sub_224AAA064(__n128 a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9)
{
  uint32x2_t v9 = (const __int16 *)(a8 + 2 * a9);
  __n128 v10 = (__n128)vld1q_dup_s16(v9);
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))((char *)&dword_224AAA204
                                                                                 - *((unsigned __int16 *)&dword_224AAA204
                                                                                   + __clz(a9)
                                                                                   - 25)))(a1, a2, a3, a4, a5, v10);
}

void *sub_224AAA098@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, void *a5@<X6>, const float *a6@<X8>, int16x8_t a7@<Q0>, int16x8_t a8@<Q1>, int64x2_t a9@<Q2>, int64x2_t a10@<Q3>, int16x8_t a11@<Q5>)
{
  uint8x8_t v11 = (uint8x8_t)vld1_dup_f32(a6);
  int16x8_t v12 = (const __int16 *)(a3 - 8);
  int16x8_t v13 = (int16x8_t)vshll_n_u8(v11, 7uLL);
  do
  {
    *(int16x4x4_t *)a7.i8 = vld4_dup_s16(v12);
    v12 -= 4;
    int16x8_t v14 = (int16x8_t)vzip1q_s64((int64x2_t)a8, (int64x2_t)a7);
    a7 = vsubq_s16((int16x8_t)vzip1q_s64(a10, a9), a11);
    a8 = vsubq_s16(v14, a11);
    int16x8_t v15 = vaddq_s16(vqrdmulhq_s16(a7, v13), a11);
    int16x8_t v16 = vaddq_s16(vqrdmulhq_s16(a8, v13), a11);
    *uint64_t result = v15.i64[0];
    int16x8_t v17 = (void *)((char *)result + a2);
    *a5 = v15.i64[1];
    int16x8_t v18 = (void *)((char *)a5 + a2);
    BOOL v19 = __OFSUB__(a4, 4);
    a4 -= 4;
    *int16x8_t v17 = v16.i64[0];
    uint64_t result = (void *)((char *)v17 + a2);
    *int16x8_t v18 = v16.i64[1];
    a5 = (void *)((char *)v18 + a2);
  }
  while (!((a4 < 0) ^ v19 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AAA0E8@<X0>(int16x8_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int16x8_t *a5@<X6>, uint8x8_t *a6@<X8>, int16x8_t a7@<Q5>)
{
  int32x4_t v7 = (const __int16 *)(a3 - 8);
  int16x8_t v8 = (int16x8_t)vshll_n_u8(*a6, 7uLL);
  do
  {
    int16x8x4_t v12 = vld4q_dup_s16(v7);
    v7 -= 4;
    *uint64_t result = vaddq_s16(vqrdmulhq_s16(vsubq_s16(v12.val[3], a7), v8), a7);
    uint32x2_t v9 = (int16x8_t *)((char *)result + a2);
    *a5 = vaddq_s16(vqrdmulhq_s16(vsubq_s16(v12.val[2], a7), v8), a7);
    __n128 v10 = (int16x8_t *)((char *)a5 + a2);
    BOOL v11 = __OFSUB__(a4, 4);
    a4 -= 4;
    int16x8_t *v9 = vaddq_s16(vqrdmulhq_s16(vsubq_s16(v12.val[1], a7), v8), a7);
    uint64_t result = (int16x8_t *)((char *)v9 + a2);
    int16x8_t *v10 = vaddq_s16(vqrdmulhq_s16(vsubq_s16(v12.val[0], a7), v8), a7);
    a5 = (int16x8_t *)((char *)v10 + a2);
  }
  while (!((a4 < 0) ^ v11 | (a4 == 0)));
  return result;
}

int16x8_t *sub_224AAA148@<X0>(int16x8_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int16x8_t *a6@<X6>, uint8x16_t *a7@<X8>, int16x8_t a8@<Q5>)
{
  int16x8_t v8 = (const __int16 *)(a3 - 8);
  uint32x2_t v9 = (int16x8_t *)((char *)result + a2);
  __n128 v10 = (int16x8_t *)((char *)a6 + a2);
  uint64_t v11 = 2 * a2 - 2 * a4;
  for (unsigned int i = a4; ; a4 = i)
  {
    int16x8x4_t v21 = vld4q_dup_s16(v8);
    v8 -= 4;
    int16x8_t v13 = vsubq_s16(v21.val[0], a8);
    int16x8_t v14 = vsubq_s16(v21.val[1], a8);
    int16x8_t v15 = vsubq_s16(v21.val[2], a8);
    int16x8_t v16 = vsubq_s16(v21.val[3], a8);
    do
    {
      uint8x16_t v17 = *a7++;
      int16x8_t v18 = (int16x8_t)vshll_n_u8(*(uint8x8_t *)v17.i8, 7uLL);
      int16x8_t v19 = (int16x8_t)vshll_high_n_u8(v17, 7uLL);
      BOOL v20 = __OFSUB__(a4, 16);
      a4 -= 16;
      *uint64_t result = vaddq_s16(vqrdmulhq_s16(v16, v18), a8);
      result[1] = vaddq_s16(vqrdmulhq_s16(v16, v19), a8);
      result += 2;
      *a6 = vaddq_s16(vqrdmulhq_s16(v15, v18), a8);
      a6[1] = vaddq_s16(vqrdmulhq_s16(v15, v19), a8);
      a6 += 2;
      int16x8_t *v9 = vaddq_s16(vqrdmulhq_s16(v14, v18), a8);
      v9[1] = vaddq_s16(vqrdmulhq_s16(v14, v19), a8);
      v9 += 2;
      int16x8_t *v10 = vaddq_s16(vqrdmulhq_s16(v13, v18), a8);
      v10[1] = vaddq_s16(vqrdmulhq_s16(v13, v19), a8);
      v10 += 2;
    }
    while (!((a4 < 0) ^ v20 | (a4 == 0)));
    BOOL v20 = __OFSUB__(a5, 4);
    a5 -= 4;
    if ((a5 < 0) ^ v20 | (a5 == 0)) {
      break;
    }
    a7 = (uint8x16_t *)((char *)a7 - i);
    uint64_t result = (int16x8_t *)((char *)result + v11);
    a6 = (int16x8_t *)((char *)a6 + v11);
    uint32x2_t v9 = (int16x8_t *)((char *)v9 + v11);
    __n128 v10 = (int16x8_t *)((char *)v10 + v11);
  }
  return result;
}

int16x8_t sub_224AAA210(int16x8_t *a1, uint64_t a2, int8x16_t *a3, unsigned int a4, unsigned int a5)
{
  int16x8_t v5 = vdupq_n_s16(a5);
  int16x8_t v6 = &a3->i16[a4];
  int32x4_t v7 = (int8x16_t *)((char *)&unk_2646ED568 - 2 * a4);
  int8x16_t v8 = (int8x16_t)vld1q_dup_s16(v6);
  v9.i64[0] = 0x9000900090009;
  v9.i64[1] = 0x9000900090009;
  int16x8_t v10 = (int16x8_t)vbslq_s8(*v7, v8, *a3);
  int16x8_t v11 = (int16x8_t)vbslq_s8(v7[1], v8, a3[1]);
  int16x8_t v12 = (int16x8_t)vextq_s8((int8x16_t)v10, (int8x16_t)v11, 2uLL);
  int16x8_t v13 = (int16x8_t)vextq_s8((int8x16_t)v11, v8, 2uLL);
  uint16x8_t v14 = (uint16x8_t)vaddq_s16(v12, (int16x8_t)vextq_s8((int8x16_t)v10, (int8x16_t)v11, 4uLL));
  uint16x8_t v15 = (uint16x8_t)vaddq_s16(v13, (int16x8_t)vextq_s8((int8x16_t)v11, v8, 4uLL));
  uint16x8_t v16 = (uint16x8_t)vaddq_s16(v10, (int16x8_t)vextq_s8((int8x16_t)v10, (int8x16_t)v11, 6uLL));
  uint16x8_t v17 = (uint16x8_t)vaddq_s16(v11, (int16x8_t)vextq_s8((int8x16_t)v11, v8, 6uLL));
  int16x8_t v18 = vminq_s16(vqrshrun_high_n_s32(vqrshrun_n_s32((int32x4_t)vsubw_u16(vmull_u16(*(uint16x4_t *)v14.i8, (uint16x4_t)0x9000900090009), *(uint16x4_t *)v16.i8), 4uLL), (int32x4_t)vsubw_high_u16(vmull_high_u16(v14, v9), v16), 4uLL), v5);
  int16x8_t v19 = vminq_s16(vqrshrun_high_n_s32(vqrshrun_n_s32((int32x4_t)vsubw_u16(vmull_u16(*(uint16x4_t *)v15.i8, (uint16x4_t)0x9000900090009), *(uint16x4_t *)v17.i8), 4uLL), (int32x4_t)vsubw_high_u16(vmull_high_u16(v15, v9), v17), 4uLL), v5);
  int16x8_t result = vzip1q_s16(v12, v18);
  *a1 = result;
  a1[1] = vzip2q_s16(v12, v18);
  a1[2] = vzip1q_s16(v13, v19);
  a1[3] = vzip2q_s16(v13, v19);
  return result;
}

int8x16_t sub_224AAA2B4(int16x8_t *a1, unsigned int a2, int8x16_t *a3, unsigned int a4)
{
  int32x4_t v4 = &a3->i16[a2];
  int16x8_t v5 = (int8x16_t *)((char *)&unk_2646ED568 - 2 * a2);
  int8x16_t v6 = (int8x16_t)vld1q_dup_s16(a3->i16);
  int8x16_t v7 = (int8x16_t)vld1q_dup_s16(v4);
  v8.i64[0] = 0x9000900090009;
  v8.i64[1] = 0x9000900090009;
  int8x16_t result = vbslq_s8(*v5, v7, *a3);
  int8x16_t v10 = vbslq_s8(v5[1], v7, a3[1]);
  uint16x8_t v11 = (uint16x8_t)vaddq_s16((int16x8_t)result, (int16x8_t)vextq_s8(result, v10, 2uLL));
  uint16x8_t v12 = (uint16x8_t)vaddq_s16((int16x8_t)vextq_s8(v6, result, 0xEuLL), (int16x8_t)vextq_s8(result, v10, 4uLL));
  int16x8_t v13 = vminq_s16(vqrshrun_high_n_s32(vqrshrun_n_s32((int32x4_t)vsubw_u16(vmull_u16(*(uint16x4_t *)v11.i8, (uint16x4_t)0x9000900090009), *(uint16x4_t *)v12.i8), 4uLL), (int32x4_t)vsubw_high_u16(vmull_high_u16(v11, v8), v12), 4uLL), vdupq_n_s16(a4));
  a1[2].i16[0] = v7.i16[0];
  *a1 = vzip1q_s16((int16x8_t)result, v13);
  a1[1] = vzip2q_s16((int16x8_t)result, v13);
  return result;
}

uint16x8_t *sub_224AAA32C(uint16x8_t *result, int a2, _OWORD *a3, int a4, unsigned int a5)
{
  if (a5 == 3)
  {
    BOOL v20 = (_OWORD *)((char *)a3 - 2);
    v21.i64[0] = 0x2000200020002;
    v21.i64[1] = 0x2000200020002;
    int16x8_t v25 = *(int16x8_t *)v20;
    int16x8_t v22 = v20 + 1;
    v23.i64[0] = 0x4000400040004;
    v23.i64[1] = 0x4000400040004;
    v24.i64[0] = 0x4000400040004;
    v24.i64[1] = 0x4000400040004;
    v25.i16[0] = v25.i16[1];
    while (1)
    {
      int16x8_t v26 = *(int16x8_t *)v22;
      int8x16_t v27 = *((int8x16_t *)v22 + 1);
      v22 += 2;
      if (a4 < 18) {
        break;
      }
      uint16x8_t v28 = (uint16x8_t)vmlaq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(v25, v21), (int16x8_t)vextq_s8((int8x16_t)v25, (int8x16_t)v26, 2uLL), v23), (int16x8_t)vextq_s8((int8x16_t)v25, (int8x16_t)v26, 4uLL), v24), (int16x8_t)vextq_s8((int8x16_t)v25, (int8x16_t)v26, 6uLL), v23), (int16x8_t)vextq_s8((int8x16_t)v25, (int8x16_t)v26, 8uLL), v21);
      BOOL v13 = __OFSUB__(a2, 16);
      a2 -= 16;
      int16x8_t v25 = (int16x8_t)v27;
      a4 -= 16;
      *int8x16_t result = vrshrq_n_u16(v28, 4uLL);
      result[1] = vrshrq_n_u16((uint16x8_t)vmlaq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(v26, v21), (int16x8_t)vextq_s8((int8x16_t)v26, v27, 2uLL), v23), (int16x8_t)vextq_s8((int8x16_t)v26, v27, 4uLL), v24), (int16x8_t)vextq_s8((int8x16_t)v26, v27, 6uLL), v23), (int16x8_t)vextq_s8((int8x16_t)v26, v27, 8uLL), v21), 4uLL);
      result += 2;
      if ((a2 < 0) ^ v13 | (a2 == 0)) {
        return result;
      }
    }
    int16x8x2_t v29 = (int8x16_t *)((char *)&unk_2646ED566 - 2 * a4);
    int16x8x4_t v30 = (const __int16 *)v22 + a4 - 23;
    int8x16_t v31 = (int8x16_t)vld1q_dup_s16(v30);
    int16x8_t v32 = (int16x8_t)vbslq_s8(*v29, v31, (int8x16_t)v25);
    int16x8_t v33 = (int16x8_t)vbslq_s8(v29[1], v31, (int8x16_t)v26);
    int8x16_t v34 = vbslq_s8(v29[2], v31, v27);
    while (1)
    {
      uint16x8_t v35 = (uint16x8_t)vmlaq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(v32, v21), (int16x8_t)vextq_s8((int8x16_t)v32, (int8x16_t)v33, 2uLL), v23), (int16x8_t)vextq_s8((int8x16_t)v32, (int8x16_t)v33, 4uLL), v24), (int16x8_t)vextq_s8((int8x16_t)v32, (int8x16_t)v33, 6uLL), v23), (int16x8_t)vextq_s8((int8x16_t)v32, (int8x16_t)v33, 8uLL), v21);
      uint16x8_t v36 = (uint16x8_t)vmlaq_s16(vmlaq_s16(vmlaq_s16(vmlaq_s16(vmulq_s16(v33, v21), (int16x8_t)vextq_s8((int8x16_t)v33, v34, 2uLL), v23), (int16x8_t)vextq_s8((int8x16_t)v33, v34, 4uLL), v24), (int16x8_t)vextq_s8((int8x16_t)v33, v34, 6uLL), v23), (int16x8_t)vextq_s8((int8x16_t)v33, v34, 8uLL), v21);
      BOOL v13 = __OFSUB__(a2, 16);
      a2 -= 16;
      int16x8_t v32 = (int16x8_t)v34;
      int16x8_t v33 = (int16x8_t)v31;
      int8x16_t v34 = v31;
      a4 -= 16;
      *int8x16_t result = vrshrq_n_u16(v35, 4uLL);
      result[1] = vrshrq_n_u16(v36, 4uLL);
      result += 2;
      if ((a2 < 0) ^ v13 | (a2 == 0)) {
        break;
      }
      if (a4 < 0)
      {
        do
        {
          BOOL v13 = __OFSUB__(a2, 8);
          a2 -= 8;
          *result++ = (uint16x8_t)v31;
        }
        while (!((a2 < 0) ^ v13 | (a2 == 0)));
        return result;
      }
    }
  }
  else
  {
    v5.i32[0] = *((_DWORD *)&unk_2646ED592 + 2 * a5);
    int16x8_t v7 = *(int16x8_t *)a3;
    int8x16_t v6 = a3 + 1;
    int16x8_t v8 = vdupq_lane_s16(v5, 0);
    int16x8_t v9 = vdupq_lane_s16(v5, 1);
    while (1)
    {
      int16x8_t v10 = *(int16x8_t *)v6;
      int8x16_t v11 = *((int8x16_t *)v6 + 1);
      v6 += 2;
      if (a4 < 17) {
        break;
      }
      uint16x8_t v12 = (uint16x8_t)vmlaq_s16(vmlaq_s16(vmulq_s16(v7, v8), (int16x8_t)vextq_s8((int8x16_t)v7, (int8x16_t)v10, 2uLL), v9), (int16x8_t)vextq_s8((int8x16_t)v7, (int8x16_t)v10, 4uLL), v8);
      BOOL v13 = __OFSUB__(a2, 16);
      a2 -= 16;
      int16x8_t v7 = (int16x8_t)v11;
      a4 -= 16;
      *int8x16_t result = vrshrq_n_u16(v12, 4uLL);
      result[1] = vrshrq_n_u16((uint16x8_t)vmlaq_s16(vmlaq_s16(vmulq_s16(v10, v8), (int16x8_t)vextq_s8((int8x16_t)v10, v11, 2uLL), v9), (int16x8_t)vextq_s8((int8x16_t)v10, v11, 4uLL), v8), 4uLL);
      result += 2;
      if ((a2 < 0) ^ v13 | (a2 == 0)) {
        return result;
      }
    }
    uint16x8_t v14 = (int8x16_t *)((char *)&unk_2646ED568 - 2 * a4);
    uint16x8_t v15 = (const __int16 *)v6 + a4 - 24;
    int8x16_t v16 = (int8x16_t)vld1q_dup_s16(v15);
    int16x8_t v17 = (int16x8_t)vbslq_s8(*v14, v16, (int8x16_t)v7);
    int16x8_t v18 = (int16x8_t)vbslq_s8(v14[1], v16, (int8x16_t)v10);
    BOOL v13 = __OFSUB__(a2, 16);
    int v19 = a2 - 16;
    *int8x16_t result = vrshrq_n_u16((uint16x8_t)vmlaq_s16(vmlaq_s16(vmulq_s16(v17, v8), (int16x8_t)vextq_s8((int8x16_t)v17, (int8x16_t)v18, 2uLL), v9), (int16x8_t)vextq_s8((int8x16_t)v17, (int8x16_t)v18, 4uLL), v8), 4uLL);
    result[1] = vrshrq_n_u16((uint16x8_t)vmlaq_s16(vmlaq_s16(vmulq_s16(v18, v8), (int16x8_t)vextq_s8((int8x16_t)v18, v16, 2uLL), v9), (int16x8_t)vextq_s8((int8x16_t)v18, v16, 4uLL), v8), 4uLL);
    for (result += 2; !((v19 < 0) ^ v13 | (v19 == 0)); ++result)
    {
      BOOL v13 = __OFSUB__(v19, 16);
      v19 -= 16;
      *int8x16_t result = (uint16x8_t)v16;
    }
  }
  return result;
}

int16x8_t *sub_224AAA554(int16x8_t *result, unsigned int a2, int a3)
{
  int16x8_t v3 = vdupq_n_s16(a2);
  do
  {
    BOOL v4 = __OFSUB__(a3, 8);
    a3 -= 8;
    *result++ = v3;
  }
  while (!((a3 < 0) ^ v4 | (a3 == 0)));
  return result;
}

uint64_t sub_224AAA568(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int16x8_t v7 = (const __int16 *)(a3 + 2 * a7);
  vld1q_dup_s16(v7);
  return ((uint64_t (*)(void))((char *)&qword_224AAA7F8 - *((unsigned __int16 *)&qword_224AAA7F8 + __clz(a4) - 25)))();
}

int16x4_t *sub_224AAA590(int16x4_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, unsigned int a8)
{
  while (1)
  {
    signed int v9 = a8 >> 6;
    unsigned int v10 = a8 & 0x3E;
    unsigned int v11 = a8 + a6;
    if (v9 >= a7) {
      break;
    }
    int16x4_t v12 = vrshrn_n_s32(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)(a3 + 2 * (v11 >> 6)), 6uLL), vsub_s16((int16x4_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)(a3 + 2 * (v11 >> 6)), *(int8x16_t *)(a3 + 2 * (v11 >> 6)), 2uLL), *(int16x4_t *)(a3 + 2 * (v11 >> 6))), vdup_n_s16(v11 & 0x3E)), 6uLL);
    *int8x16_t result = vrshrn_n_s32(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)(a3 + (2 * v9)), 6uLL), vsub_s16((int16x4_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)(a3 + (2 * v9)), *(int8x16_t *)(a3 + (2 * v9)), 2uLL), *(int16x4_t *)(a3 + (2 * v9))), vdup_n_s16(v10)), 6uLL);
    BOOL v13 = (int16x4_t *)((char *)result + a2);
    a8 = v11 + a6;
    BOOL v14 = __OFSUB__(a5, 2);
    a5 -= 2;
    *BOOL v13 = v12;
    int8x16_t result = (int16x4_t *)((char *)v13 + a2);
    if ((a5 < 0) ^ v14 | (a5 == 0)) {
      return result;
    }
  }
  do
  {
    *int8x16_t result = v8;
    uint16x8_t v15 = (int16x4_t *)((char *)result + a2);
    BOOL v14 = __OFSUB__(a5, 2);
    a5 -= 2;
    *uint16x8_t v15 = v8;
    int8x16_t result = (int16x4_t *)((char *)v15 + a2);
  }
  while (!((a5 < 0) ^ v14 | (a5 == 0)));
  return result;
}

int16x8_t *sub_224AAA618(int16x8_t *result, uint64_t a2, uint64_t a3, double a4, int8x16_t a5, double a6, int8x16_t a7, uint64_t a8, int a9, int a10, int a11, unsigned int a12)
{
  while (1)
  {
    unsigned int v14 = a12 >> 6;
    unsigned int v15 = a12 & 0x3E;
    unsigned int v16 = a12 + a10;
    unsigned int v17 = v16 & 0x3E;
    if ((int)v14 >= a11) {
      break;
    }
    int16x8_t v18 = (int8x16_t *)(a3 + 2 * v14);
    int v19 = (int8x16_t *)(a3 + 2 * (v16 >> 6));
    uint16x8_t v20 = (uint16x8_t)vdupq_n_s16(v15);
    uint16x8_t v21 = (uint16x8_t)vdupq_n_s16(v17);
    a5.i16[0] = v18[1].i16[0];
    a7.i16[0] = v19[1].i16[0];
    uint16x8_t v22 = (uint16x8_t)vdupq_n_s16(v12 - v15);
    uint16x8_t v23 = (uint16x8_t)vdupq_n_s16(v12 - v17);
    a5 = vextq_s8(*v18, a5, 2uLL);
    a7 = vextq_s8(*v19, a7, 2uLL);
    int16x8_t v24 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v19->i8, *(uint16x4_t *)v23.i8), *(uint16x4_t *)a7.i8, *(uint16x4_t *)v21.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(*(uint16x8_t *)v19, v23), (uint16x8_t)a7, v21), 6uLL);
    *int8x16_t result = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v18->i8, *(uint16x4_t *)v22.i8), *(uint16x4_t *)a5.i8, *(uint16x4_t *)v20.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(*(uint16x8_t *)v18, v22), (uint16x8_t)a5, v20), 6uLL);
    int16x8_t v25 = (int16x8_t *)((char *)result + a2);
    a12 = v16 + a10;
    BOOL v26 = __OFSUB__(a9, 2);
    a9 -= 2;
    *int16x8_t v25 = v24;
    int8x16_t result = (int16x8_t *)((char *)v25 + a2);
    if ((a9 < 0) ^ v26 | (a9 == 0)) {
      return result;
    }
  }
  do
  {
    *int8x16_t result = v13;
    int8x16_t v27 = &result->i8[a2];
    BOOL v26 = __OFSUB__(a9, 2);
    a9 -= 2;
    *(int16x8_t *)int8x16_t v27 = v13;
    int8x16_t result = (int16x8_t *)&v27[a2];
  }
  while (!((a9 < 0) ^ v26 | (a9 == 0)));
  return result;
}

int16x8_t *sub_224AAA6C8(int16x8_t *result, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, unsigned int a8)
{
  int v10 = a4;
  unsigned int v11 = (int16x8_t *)((char *)result + a2);
  uint64_t v12 = 2 * a2 - 2 * a4;
  while (1)
  {
    unsigned int v13 = a8 >> 6;
    unsigned int v14 = a8 & 0x3E;
    unsigned int v15 = a8 + a6;
    unsigned int v16 = v15 & 0x3E;
    if ((int)v13 >= a7) {
      break;
    }
    unsigned int v17 = (int8x16_t *)(a3 + 2 * v13);
    int16x8_t v18 = (int8x16_t *)(a3 + 2 * (v15 >> 6));
    uint16x8_t v19 = (uint16x8_t)vdupq_n_s16(v14);
    uint16x8_t v20 = (uint16x8_t)vdupq_n_s16(v16);
    int8x16_t v22 = *v17;
    int8x16_t v23 = v17[1];
    int8x16_t v24 = v17[2];
    uint16x8_t v21 = v17 + 3;
    int8x16_t v26 = *v18;
    int8x16_t v27 = v18[1];
    int8x16_t v28 = v18[2];
    int16x8_t v25 = v18 + 3;
    uint16x8_t v29 = (uint16x8_t)vdupq_n_s16(v8 - v14);
    uint16x8_t v30 = (uint16x8_t)vdupq_n_s16(v8 - v16);
    a8 = v15 + a6;
    while (1)
    {
      uint16x8_t v31 = (uint16x8_t)vextq_s8(v22, v23, 2uLL);
      uint16x8_t v32 = (uint16x8_t)vextq_s8(v23, v24, 2uLL);
      uint16x8_t v33 = (uint16x8_t)vextq_s8(v26, v27, 2uLL);
      uint16x8_t v34 = (uint16x8_t)vextq_s8(v27, v28, 2uLL);
      BOOL v35 = __OFSUB__(a4, 16);
      a4 -= 16;
      *int8x16_t result = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v22.i8, *(uint16x4_t *)v29.i8), *(uint16x4_t *)v31.i8, *(uint16x4_t *)v19.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16((uint16x8_t)v22, v29), v31, v19), 6uLL);
      result[1] = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v23.i8, *(uint16x4_t *)v29.i8), *(uint16x4_t *)v32.i8, *(uint16x4_t *)v19.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16((uint16x8_t)v23, v29), v32, v19), 6uLL);
      result += 2;
      *unsigned int v11 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v26.i8, *(uint16x4_t *)v30.i8), *(uint16x4_t *)v33.i8, *(uint16x4_t *)v20.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16((uint16x8_t)v26, v30), v33, v20), 6uLL);
      v11[1] = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v27.i8, *(uint16x4_t *)v30.i8), *(uint16x4_t *)v34.i8, *(uint16x4_t *)v20.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16((uint16x8_t)v27, v30), v34, v20), 6uLL);
      v11 += 2;
      if ((a4 < 0) ^ v35 | (a4 == 0)) {
        break;
      }
      int8x16_t v22 = v24;
      int8x16_t v23 = *v21;
      int8x16_t v24 = v21[1];
      v21 += 2;
      int8x16_t v26 = v28;
      int8x16_t v27 = *v25;
      int8x16_t v28 = v25[1];
      v25 += 2;
    }
    BOOL v35 = __OFSUB__(a5, 2);
    a5 -= 2;
    if ((a5 < 0) ^ v35 | (a5 == 0)) {
      return result;
    }
    int8x16_t result = (int16x8_t *)((char *)result + v12);
    unsigned int v11 = (int16x8_t *)((char *)v11 + v12);
    a4 = v10;
  }
  while (1)
  {
    do
    {
      *result++ = v9;
      BOOL v35 = __OFSUB__(a4, 8);
      a4 -= 8;
      *v11++ = v9;
    }
    while (!((a4 < 0) ^ v35 | (a4 == 0)));
    BOOL v35 = __OFSUB__(a5, 2);
    a5 -= 2;
    if ((a5 < 0) ^ v35 | (a5 == 0)) {
      break;
    }
    int8x16_t result = (int16x8_t *)((char *)result + v12);
    unsigned int v11 = (int16x8_t *)((char *)v11 + v12);
    a4 = v10;
  }
  return result;
}

int16x8_t *sub_224AAA804(int16x8_t *result, uint64_t a2, uint64_t a3, int a4, int a5, unsigned int a6, signed int a7)
{
  int16x8_t v7 = (const char *)(a3 + a7);
  int8x16_t v8 = vld1q_dup_s8(v7);
  unsigned int v9 = a6;
  if (a4 == 8)
  {
    while (1)
    {
      unsigned int v21 = v9 >> 6;
      unsigned int v22 = v9 & 0x3E;
      unsigned int v23 = v9 + a6;
      unsigned int v24 = v23 & 0x3E;
      if ((int)v21 >= a7) {
        break;
      }
      int16x8_t v25 = (int16x8_t *)(a3 + 2 * v21);
      int8x16_t v26 = (int16x8_t *)(a3 + 2 * (v23 >> 6));
      uint16x8_t v27 = (uint16x8_t)vdupq_n_s16(v22);
      uint16x8_t v28 = (uint16x8_t)vdupq_n_s16(v24);
      int16x8_t v29 = v25[1];
      int16x8_t v30 = v26[1];
      uint16x8_t v31 = (uint16x8_t)vdupq_n_s16(64 - v22);
      uint16x8_t v32 = (uint16x8_t)vdupq_n_s16(64 - v24);
      uint16x8_t v33 = (uint16x8_t)vuzp2q_s16(*v25, v29);
      uint16x8_t v34 = (uint16x8_t)vuzp1q_s16(*v25, v29);
      uint16x8_t v35 = (uint16x8_t)vuzp2q_s16(*v26, v30);
      uint16x8_t v36 = (uint16x8_t)vuzp1q_s16(*v26, v30);
      *int8x16_t result = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v34.i8, *(uint16x4_t *)v31.i8), *(uint16x4_t *)v33.i8, *(uint16x4_t *)v27.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v34, v31), v33, v27), 6uLL);
      int16x8_t v37 = (int16x8_t *)((char *)result + a2);
      unsigned int v9 = v23 + a6;
      BOOL v19 = __OFSUB__(a5, 2);
      a5 -= 2;
      *int16x8_t v37 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v36.i8, *(uint16x4_t *)v32.i8), *(uint16x4_t *)v35.i8, *(uint16x4_t *)v28.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v36, v32), v35, v28), 6uLL);
      int8x16_t result = (int16x8_t *)((char *)v37 + a2);
      if ((a5 < 0) ^ v19 | (a5 == 0)) {
        return result;
      }
    }
    do
    {
      *int8x16_t result = (int16x8_t)v8;
      int16x8_t v38 = (int8x16_t *)&result->i8[a2];
      BOOL v19 = __OFSUB__(a5, 2);
      a5 -= 2;
      *int16x8_t v38 = v8;
      int8x16_t result = (int16x8_t *)&v38->i8[a2];
    }
    while (!((a5 < 0) ^ v19 | (a5 == 0)));
  }
  else
  {
    while (1)
    {
      signed int v10 = v9 >> 6;
      unsigned int v11 = v9 & 0x3E;
      unsigned int v12 = v9 + a6;
      unsigned int v13 = v12 & 0x3E;
      if (v10 >= a7) {
        break;
      }
      int16x8_t v14 = *(int16x8_t *)(a3 + (2 * v10));
      int16x8_t v15 = *(int16x8_t *)(a3 + 2 * (v12 >> 6));
      int16x4_t v16 = (int16x4_t)vuzp2q_s16(v14, v14).u64[0];
      v14.i64[0] = vuzp1q_s16(v14, v14).u64[0];
      int16x4_t v17 = (int16x4_t)vuzp2q_s16(v15, v15).u64[0];
      v15.i64[0] = vuzp1q_s16(v15, v15).u64[0];
      *(int16x4_t *)result->i8 = vrshrn_n_s32(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v14.i8, 6uLL), vsub_s16(v16, *(int16x4_t *)v14.i8), vdup_n_s16(v11)), 6uLL);
      int16x8_t v18 = (int16x4_t *)&result->i8[a2];
      unsigned int v9 = v12 + a6;
      BOOL v19 = __OFSUB__(a5, 2);
      a5 -= 2;
      *int16x8_t v18 = vrshrn_n_s32(vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v15.i8, 6uLL), vsub_s16(v17, *(int16x4_t *)v15.i8), vdup_n_s16(v13)), 6uLL);
      int8x16_t result = (int16x8_t *)((char *)v18 + a2);
      if ((a5 < 0) ^ v19 | (a5 == 0)) {
        return result;
      }
    }
    do
    {
      result->i64[0] = v8.i64[0];
      uint16x8_t v20 = (uint64_t *)((char *)result->i64 + a2);
      BOOL v19 = __OFSUB__(a5, 2);
      a5 -= 2;
      *uint16x8_t v20 = v8.i64[0];
      int8x16_t result = (int16x8_t *)((char *)v20 + a2);
    }
    while (!((a5 < 0) ^ v19 | (a5 == 0)));
  }
  return result;
}

void *sub_224AAA95C(void *result, uint64_t a2, int a3)
{
  int16x8_t v3 = (int16x8_t *)(a2 - 16);
  BOOL v4 = result + 1;
  do
  {
    BOOL v5 = __OFSUB__(a3, 8);
    a3 -= 8;
    int16x8_t v6 = vrev64q_s16(*v3--);
    *int8x16_t result = v6.i64[1];
    result += 2;
    void *v4 = v6.i64[0];
    v4 += 2;
  }
  while (!((a3 < 0) ^ v5 | (a3 == 0)));
  return result;
}

uint64_t sub_224AAA988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return ((uint64_t (*)(void))((char *)&qword_224AAB258 - *((unsigned __int16 *)&qword_224AAB258 + __clz(a5) - 25)))();
}

void *sub_224AAA9B8@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, int a6@<W6>, unsigned int a7@<W7>, signed int a8@<W8>)
{
  *(int16x4_t *)v13.i8 = vdup_n_s16(a7);
  v15.i64[0] = 0x3E003E003E003ELL;
  v15.i64[1] = 0x3E003E003E003ELL;
  *(int16x4_t *)v13.i8 = vadd_s16(vmul_s16(*(int16x4_t *)v14.i8, *(int16x4_t *)v13.i8), *(int16x4_t *)v13.i8);
  int8x16_t v16 = *(int8x16_t *)a4;
  long long v17 = *(_OWORD *)(a4 + 16);
  long long v18 = *(_OWORD *)(a4 + 32);
  v19.i64[0] = 0x40004000400040;
  v19.i64[1] = 0x40004000400040;
  *(int8x8_t *)v11.i8 = vand_s8(*(int8x8_t *)v13.i8, (int8x8_t)0x3E003E003E003ELL);
  int8x8_t v20 = vshl_n_s8(vadd_s8(vshrn_n_s16(v13, 6uLL), (int8x8_t)0x101010101010101), 1uLL);
  int8x8_t v21 = vadd_s8(vzip1_s8(v20, v20), (int8x8_t)0x100010001000100);
  *(int8x8_t *)v13.i8 = vadd_s8(v21, (int8x8_t)0x202020202020202);
  *(int8x8_t *)v12.i8 = vadd_s8(v21, (int8x8_t)0x404040404040404);
  *(int8x8_t *)v10.i8 = vqtbl1_s8(*(int8x16_t *)a4, v21);
  int8x16_t v22 = (int8x16_t)vtrn1q_s64((int64x2_t)v13, v12);
  *(int16x4_t *)v12.i8 = vsub_s16((int16x4_t)0x40004000400040, *(int16x4_t *)v11.i8);
  int16x8_t v23 = (int16x8_t)vtrn1q_s64(v14, v14);
  uint16x8_t v24 = (uint16x8_t)vtrn1q_s64(v11, v11);
  uint16x8_t v25 = (uint16x8_t)vtrn1q_s64(v12, v12);
  v26.i64[0] = 0x404040404040404;
  v26.i64[1] = 0x404040404040404;
  while (1)
  {
    int v27 = a8 >> 6;
    *(int16x4_t *)v8.i8 = vdup_n_s16(a8);
    signed int v28 = a8 - a6;
    if (v27 <= -4) {
      break;
    }
    *(int16x4_t *)v9.i8 = vdup_n_s16(v28);
    int64x2_t v29 = *(int64x2_t *)(a3 + 2 * v27);
    int64x2_t v30 = *(int64x2_t *)(a3 + 2 * (v28 >> 6));
    int16x8_t v31 = (int16x8_t)vtrn1q_s64((int64x2_t)v8, v9);
    int64x2_t v32 = (int64x2_t)vqtbl2q_s8(*(int8x16x2_t *)v16.i8, v22);
    int16x8_t v33 = vshrq_n_s16(v31, 6uLL);
    int64x2_t v34 = (int64x2_t)vextq_s8((int8x16_t)v29, (int8x16_t)v29, 2uLL);
    int16x8_t v8 = (int16x8_t)vandq_s8((int8x16_t)v31, v15);
    uint16x8_t v35 = (uint16x8_t)vtrn1q_s64(v10, v32);
    uint16x8_t v36 = (uint16x8_t)vtrn1q_s64(v29, v30);
    uint16x8_t v37 = (uint16x8_t)vtrn1q_s64(v34, (int64x2_t)vextq_s8((int8x16_t)v30, (int8x16_t)v30, 2uLL));
    int64x2_t v9 = (int64x2_t)vsubq_s16(v19, v8);
    int8x16_t v38 = vbslq_s8((int8x16_t)vcgezq_s16(vaddq_s16(v33, v23)), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v36.i8, *(uint16x4_t *)v9.i8), *(uint16x4_t *)v37.i8, *(uint16x4_t *)v8.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v36, (uint16x8_t)v9), v37, (uint16x8_t)v8), 6uLL), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v35.i8, *(uint16x4_t *)v25.i8), *(uint16x4_t *)v32.i8, *(uint16x4_t *)v24.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v35, v25), (uint16x8_t)v32, v24), 6uLL));
    *int8x16_t result = v38.i64[0];
    int16x8_t v39 = (void *)((char *)result + a2);
    a8 = v28 - a6;
    BOOL v40 = __OFSUB__(a5, 2);
    a5 -= 2;
    *int16x8_t v39 = v38.i64[1];
    int8x16_t result = (void *)((char *)v39 + a2);
    if ((a5 < 0) ^ v40 | (a5 == 0)) {
      return result;
    }
    int64x2_t v10 = (int64x2_t)vextq_s8((int8x16_t)v32, (int8x16_t)v32, 8uLL);
    int8x16_t v22 = vaddq_s8(v22, v26);
  }
  while (1)
  {
    int64x2_t v41 = (int64x2_t)vqtbl3q_s8(*(int8x16x3_t *)v16.i8, v22);
    uint16x8_t v42 = (uint16x8_t)vtrn1q_s64(v10, v41);
    int16x8_t v43 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v42.i8, *(uint16x4_t *)v25.i8), *(uint16x4_t *)v41.i8, *(uint16x4_t *)v24.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v42, v25), (uint16x8_t)v41, v24), 6uLL);
    *int8x16_t result = v43.i64[0];
    int8x16_t v44 = (void *)((char *)result + a2);
    BOOL v40 = __OFSUB__(a5, 2);
    a5 -= 2;
    *int8x16_t v44 = v43.i64[1];
    int8x16_t result = (void *)((char *)v44 + a2);
    if ((a5 < 0) ^ v40 | (a5 == 0)) {
      break;
    }
    int64x2_t v10 = (int64x2_t)vextq_s8((int8x16_t)v41, (int8x16_t)v41, 8uLL);
    int8x16_t v22 = vaddq_s8(v22, v26);
  }
  return result;
}

int8x16_t *sub_224AAAB0C@<X0>(int8x16_t *result@<X0>, uint64_t a2@<X1>, const __int16 *a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, int a6@<W6>, unsigned int a7@<W7>, signed int a8@<W8>)
{
  int16x8_t v10 = vdupq_n_s16(a7);
  uint64_t v11 = a4 + 2;
  v12.i64[0] = 0x3E003E003E003ELL;
  v12.i64[1] = 0x3E003E003E003ELL;
  int16x8_t v13 = vaddq_s16(vmulq_s16(v9, v10), v10);
  int8x16_t v14 = *(int8x16_t *)v11;
  long long v15 = *(_OWORD *)(v11 + 16);
  long long v16 = *(_OWORD *)(v11 + 32);
  long long v17 = *(_OWORD *)(v11 + 48);
  vld1q_dup_s16(a3);
  v18.i64[0] = 0x40004000400040;
  v18.i64[1] = 0x40004000400040;
  v19.i64[0] = 0x404040404040404;
  v19.i64[1] = 0x404040404040404;
  int16x8_t v20 = (int16x8_t)vandq_s8((int8x16_t)v13, v12);
  v21.i64[0] = 0x100010001000100;
  v21.i64[1] = 0x100010001000100;
  *(int8x8_t *)v8.i8 = vshl_n_s8(vshrn_n_s16(v13, 6uLL), 1uLL);
  v22.i64[0] = 0x202020202020202;
  v22.i64[1] = 0x202020202020202;
  int8x16_t v23 = vaddq_s8(vzip1q_s8(v8, v8), v21);
  uint16x8_t v24 = (uint16x8_t)vqtbx1q_s8(*(int8x16_t *)v11, v23);
  int8x16_t v25 = vaddq_s8(v23, v19);
  int8x16_t v26 = vaddq_s8(v23, v22);
  uint16x8_t v27 = (uint16x8_t)vsubq_s16(v18, v20);
  v28.i64[0] = 0x404040404040404;
  v28.i64[1] = 0x404040404040404;
  while (1)
  {
    int v29 = a8 >> 6;
    int16x8_t v30 = vdupq_n_s16(a8);
    signed int v31 = a8 - a6;
    if (v29 <= -16) {
      break;
    }
    int16x8_t v32 = vdupq_n_s16(v31);
    int16x8_t v33 = (int8x16_t *)&a3[v29];
    int64x2_t v34 = (int8x16_t *)&a3[v31 >> 6];
    uint16x8_t v35 = (uint16x8_t)vqtbx4q_s8(*(int8x16x4_t *)v14.i8, v26);
    int16x8_t v36 = vshrq_n_s16(v30, 6uLL);
    int16x8_t v37 = vshrq_n_s16(v32, 6uLL);
    uint16x8_t v38 = (uint16x8_t)vqtbx4q_s8(*(int8x16x4_t *)v14.i8, v25);
    uint16x8_t v39 = (uint16x8_t)vextq_s8(*v33, v33[1], 2uLL);
    uint16x8_t v40 = (uint16x8_t)vextq_s8(*v34, v34[1], 2uLL);
    int16x8_t v41 = (int16x8_t)vandq_s8((int8x16_t)v30, v12);
    int16x8_t v42 = (int16x8_t)vandq_s8((int8x16_t)v32, v12);
    uint16x8_t v43 = (uint16x8_t)vsubq_s16(v18, v41);
    uint16x8_t v44 = (uint16x8_t)vsubq_s16(v18, v42);
    int8x16_t v45 = vbslq_s8((int8x16_t)vcgezq_s16(vaddq_s16(v37, v9)), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v34->i8, *(uint16x4_t *)v44.i8), *(uint16x4_t *)v40.i8, *(uint16x4_t *)v42.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(*(uint16x8_t *)v34, v44), v40, (uint16x8_t)v42), 6uLL), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v35.i8, *(uint16x4_t *)v27.i8), *(uint16x4_t *)v38.i8, *(uint16x4_t *)v20.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v35, v27), v38, (uint16x8_t)v20), 6uLL));
    *int8x16_t result = vbslq_s8((int8x16_t)vcgezq_s16(vaddq_s16(v36, v9)), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v33->i8, *(uint16x4_t *)v43.i8), *(uint16x4_t *)v39.i8, *(uint16x4_t *)v41.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(*(uint16x8_t *)v33, v43), v39, (uint16x8_t)v41), 6uLL), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v24.i8, *(uint16x4_t *)v27.i8), *(uint16x4_t *)v35.i8, *(uint16x4_t *)v20.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v24, v27), v35, (uint16x8_t)v20), 6uLL));
    int16x8_t v46 = (int8x16_t *)((char *)result + a2);
    BOOL v47 = __OFSUB__(a5, 2);
    a5 -= 2;
    a8 = v31 - a6;
    int8x16_t *v46 = v45;
    int8x16_t result = (int8x16_t *)((char *)v46 + a2);
    if ((a5 < 0) ^ v47 | (a5 == 0)) {
      return result;
    }
    uint16x8_t v24 = v38;
    int8x16_t v26 = vaddq_s8(v26, v28);
    int8x16_t v25 = vaddq_s8(v25, v28);
  }
  while (1)
  {
    uint16x8_t v48 = (uint16x8_t)vqtbx4q_s8(*(int8x16x4_t *)v14.i8, v26);
    uint16x8_t v49 = (uint16x8_t)vqtbx4q_s8(*(int8x16x4_t *)v14.i8, v25);
    *(int16x8_t *)int8x16_t result = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v24.i8, *(uint16x4_t *)v27.i8), *(uint16x4_t *)v48.i8, *(uint16x4_t *)v20.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v24, v27), v48, (uint16x8_t)v20), 6uLL);
    int16x8_t v50 = (int16x8_t *)&result->i8[a2];
    BOOL v47 = __OFSUB__(a5, 2);
    a5 -= 2;
    *int16x8_t v50 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v48.i8, *(uint16x4_t *)v27.i8), *(uint16x4_t *)v49.i8, *(uint16x4_t *)v20.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v48, v27), v49, (uint16x8_t)v20), 6uLL);
    int8x16_t result = (int8x16_t *)&v50->i8[a2];
    if ((a5 < 0) ^ v47 | (a5 == 0)) {
      break;
    }
    uint16x8_t v24 = v49;
    int8x16_t v26 = vaddq_s8(v26, v28);
    int8x16_t v25 = vaddq_s8(v25, v28);
  }
  return result;
}

int8x16_t *sub_224AAACE0@<X0>(int8x16_t *result@<X0>, uint64_t a2@<X1>, const __int16 *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, unsigned int a8@<W7>, signed int a9@<W8>)
{
  int16x8_t v11 = vdupq_n_s16(a8);
  int8x16_t v12 = (long long *)(a4 + 2);
  int16x8_t v13 = (int8x16_t *)((char *)result + a2);
  uint64_t v14 = 2 * a2 - 2 * a5;
  v15.i64[0] = 0x8000800080008;
  v15.i64[1] = 0x8000800080008;
  int16x8_t v16 = vaddq_s16(vmulq_s16(v10, v11), v11);
  int16x8_t v17 = vmulq_s16(v11, v15);
  long long v18 = *v12;
  long long v19 = v12[1];
  long long v20 = v12[2];
  long long v21 = v12[3];
  vld1q_dup_s16(a3);
  int v22 = a5;
  int v23 = -a5;
  while (1)
  {
    int16x8_t v24 = v16;
    int v25 = a9 >> 6;
    int16x8_t v26 = vdupq_n_s16(a9);
    signed int v27 = a9 - a7;
    int v28 = v27 >> 6;
    if (v25 <= v23) {
      break;
    }
    int16x8_t v29 = vdupq_n_s16(v27);
    a9 = v27 - a7;
    int16x8_t v30 = &a3[v25];
    signed int v31 = &a3[v28];
    int16x8_t v32 = vshrq_n_s16(v26, 6uLL);
    int16x8_t v33 = vshrq_n_s16(v29, 6uLL);
    int8x16_t v35 = *(int8x16_t *)v30;
    int64x2_t v34 = (int8x16_t *)(v30 + 8);
    int8x16_t v37 = *(int8x16_t *)v31;
    int16x8_t v36 = (int8x16_t *)(v31 + 8);
    v38.i64[0] = 0x3E003E003E003ELL;
    v38.i64[1] = 0x3E003E003E003ELL;
    v39.i64[0] = 0x40004000400040;
    v39.i64[1] = 0x40004000400040;
    int16x8_t v40 = (int16x8_t)vandq_s8((int8x16_t)v26, v38);
    int16x8_t v41 = (int16x8_t)vandq_s8((int8x16_t)v29, v38);
    uint16x8_t v42 = (uint16x8_t)vsubq_s16(v39, v40);
    uint16x8_t v43 = (uint16x8_t)vsubq_s16(v39, v41);
    int16x8_t v44 = vaddq_s16(v32, v10);
    for (int16x8_t i = vaddq_s16(v33, v10); ; int16x8_t i = vaddq_s16(i, v74))
    {
      *(int8x8_t *)v9.i8 = vshrn_n_s16(v24, 6uLL);
      v46.i64[0] = 0x40004000400040;
      v46.i64[1] = 0x40004000400040;
      v47.i64[0] = 0x3E003E003E003ELL;
      v47.i64[1] = 0x3E003E003E003ELL;
      if (i.i16[0] >= 0) {
        break;
      }
      int16x8_t v48 = (int16x8_t)vandq_s8((int8x16_t)v24, v47);
      uint16x8_t v49 = (uint16x8_t)vsubq_s16(v46, v48);
      if (v9.i8[0] > 29)
      {
        int16x8_t v57 = (__int16 *)v12 + v9.i8[0];
        int16x8_t v58 = (__int16 *)v12 + v9.i8[1];
        v53.i16[0] = *v57;
        v55.i16[0] = v57[1];
        v56.i16[0] = v57[2];
        int16x8_t v59 = (__int16 *)v12 + v9.i8[2];
        v53.i16[1] = *v58;
        v55.i16[1] = v58[1];
        v56.i16[1] = v58[2];
        int16x8_t v60 = (__int16 *)v12 + v9.i8[3];
        v53.i16[2] = *v59;
        v55.i16[2] = v59[1];
        v56.i16[2] = v59[2];
        int16x8_t v61 = (__int16 *)v12 + v9.i8[4];
        v53.i16[3] = *v60;
        v55.i16[3] = v60[1];
        v56.i16[3] = v60[2];
        int16x4_t v62 = (__int16 *)v12 + v9.i8[5];
        int16x8_t v63 = (__int16 *)v12 + v9.i8[6];
        v53.i16[4] = *v61;
        v55.i16[4] = v61[1];
        v56.i16[4] = v61[2];
        int16x4_t v64 = (__int16 *)v12 + v9.i8[7];
        v53.i16[5] = *v62;
        v55.i16[5] = v62[1];
        v56.i16[5] = v62[2];
        v53.i16[6] = *v63;
        v55.i16[6] = v63[1];
        v56.i16[6] = v63[2];
        v53.i16[7] = *v64;
        v55.i16[7] = v64[1];
        v56.i16[7] = v64[2];
      }
      else
      {
        *(int8x8_t *)v9.i8 = vshl_n_s8(*(int8x8_t *)v9.i8, 1uLL);
        v50.i64[0] = 0x100010001000100;
        v50.i64[1] = 0x100010001000100;
        int8x16_t v51 = vaddq_s8(vzip1q_s8(v9, v9), v50);
        v52.i64[0] = 0x202020202020202;
        v52.i64[1] = 0x202020202020202;
        uint16x8_t v53 = (uint16x8_t)vqtbx4q_s8(*(int8x16x4_t *)&v18, v51);
        int8x16_t v54 = vaddq_s8(v51, v52);
        uint16x8_t v55 = (uint16x8_t)vqtbx4q_s8(*(int8x16x4_t *)&v18, v54);
        int8x16_t v9 = vaddq_s8(v54, v52);
        uint16x8_t v56 = (uint16x8_t)vqtbx4q_s8(*(int8x16x4_t *)&v18, v9);
      }
      int8x16_t v65 = *v34++;
      int8x16_t v66 = *v36++;
      int16x8_t v24 = vaddq_s16(v24, v17);
      int32x4_t v67 = (int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v53.i8, *(uint16x4_t *)v49.i8), *(uint16x4_t *)v55.i8, *(uint16x4_t *)v48.i8);
      int32x4_t v68 = (int32x4_t)vmlal_high_u16(vmull_high_u16(v53, v49), v55, (uint16x8_t)v48);
      int32x4_t v69 = (int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v55.i8, *(uint16x4_t *)v49.i8), *(uint16x4_t *)v56.i8, *(uint16x4_t *)v48.i8);
      int32x4_t v70 = (int32x4_t)vmlal_high_u16(vmull_high_u16(v55, v49), v56, (uint16x8_t)v48);
      uint16x8_t v71 = (uint16x8_t)vextq_s8(v35, v65, 2uLL);
      uint16x8_t v72 = (uint16x8_t)vextq_s8(v37, v66, 2uLL);
      *result++ = vbslq_s8((int8x16_t)vcgezq_s16(v44), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v35.i8, *(uint16x4_t *)v42.i8), *(uint16x4_t *)v71.i8, *(uint16x4_t *)v40.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16((uint16x8_t)v35, v42), v71, (uint16x8_t)v40), 6uLL), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32(v67, 6uLL), v68, 6uLL));
      BOOL v73 = __OFSUB__(a5, 8);
      a5 -= 8;
      *v13++ = vbslq_s8((int8x16_t)vcgezq_s16(i), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v37.i8, *(uint16x4_t *)v43.i8), *(uint16x4_t *)v72.i8, *(uint16x4_t *)v41.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16((uint16x8_t)v37, v43), v72, (uint16x8_t)v41), 6uLL), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32(v69, 6uLL), v70, 6uLL));
      if ((a5 < 0) ^ v73 | (a5 == 0)) {
        goto LABEL_10;
      }
      v74.i64[0] = 0x8000800080008;
      v74.i64[1] = 0x8000800080008;
      int8x16_t v35 = v65;
      int8x16_t v37 = v66;
      int16x8_t v44 = vaddq_s16(v44, v74);
    }
    while (1)
    {
      int8x16_t v76 = *v34++;
      int8x16_t v77 = *v36++;
      uint16x8_t v78 = (uint16x8_t)vextq_s8(v35, v76, 2uLL);
      uint16x8_t v79 = (uint16x8_t)vextq_s8(v37, v77, 2uLL);
      *(int16x8_t *)result++ = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v35.i8, *(uint16x4_t *)v42.i8), *(uint16x4_t *)v78.i8, *(uint16x4_t *)v40.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16((uint16x8_t)v35, v42), v78, (uint16x8_t)v40), 6uLL);
      BOOL v73 = __OFSUB__(a5, 8);
      a5 -= 8;
      *(int16x8_t *)v13++ = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v37.i8, *(uint16x4_t *)v43.i8), *(uint16x4_t *)v79.i8, *(uint16x4_t *)v41.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16((uint16x8_t)v37, v43), v79, (uint16x8_t)v41), 6uLL);
      if ((a5 < 0) ^ v73 | (a5 == 0)) {
        break;
      }
      int8x16_t v35 = v76;
      int8x16_t v37 = v77;
    }
LABEL_10:
    BOOL v73 = __OFSUB__(a6, 2);
    a6 -= 2;
    if ((a6 < 0) ^ v73 | (a6 == 0)) {
      return result;
    }
    v75.i64[0] = 0x80008000800080;
    v75.i64[1] = 0x80008000800080;
    int8x16_t result = (int8x16_t *)((char *)result + v14);
    int16x8_t v13 = (int8x16_t *)((char *)v13 + v14);
    a5 = v22;
    int16x8_t v16 = vaddq_s16(v16, v75);
  }
  unint64_t v80 = v14 + 2 * a5;
  for (uint64_t j = a6; ; a6 = j)
  {
    v82.i64[0] = 0x40004000400040;
    v82.i64[1] = 0x40004000400040;
    v83.i64[0] = 0x3E003E003E003ELL;
    v83.i64[1] = 0x3E003E003E003ELL;
    *(int8x8_t *)v9.i8 = vshrn_n_s16(v24, 6uLL);
    int16x8_t v84 = (int16x8_t)vandq_s8((int8x16_t)v24, v83);
    int v85 = v9.i8[0];
    *(int8x8_t *)v9.i8 = vshl_n_s8(*(int8x8_t *)v9.i8, 1uLL);
    v86.i64[0] = 0x100010001000100;
    v86.i64[1] = 0x100010001000100;
    int16x8_t v24 = vaddq_s16(v24, v17);
    int8x16_t v87 = vaddq_s8(vzip1q_s8(v9, v9), v86);
    v88.i64[0] = 0x202020202020202;
    v88.i64[1] = 0x202020202020202;
    uint16x8_t v89 = (uint16x8_t)vsubq_s16(v82, v84);
    if (v85 > 31)
    {
      v94.i64[0] = 0x202020202020202;
      v94.i64[1] = 0x202020202020202;
      v90.i16[0] = *(_WORD *)((char *)v12 + v87.i8[0]);
      v90.i16[1] = *(_WORD *)((char *)v12 + v87.i8[2]);
      v90.i16[2] = *(_WORD *)((char *)v12 + v87.i8[4]);
      v90.i16[3] = *(_WORD *)((char *)v12 + v87.i8[6]);
      int16x8_t v95 = (__int16 *)((char *)v12 + v87.i8[12]);
      v90.i16[4] = *(_WORD *)((char *)v12 + v87.i8[8]);
      uint16x8_t v96 = (__int16 *)((char *)v12 + v87.i8[14]);
      v90.i16[5] = *(_WORD *)((char *)v12 + v87.i8[10]);
      int8x16_t v9 = vaddq_s8(v87, v94);
      v90.i16[6] = *v95;
      v90.i16[7] = *v96;
    }
    else
    {
      uint16x8_t v90 = (uint16x8_t)vqtbx4q_s8(*(int8x16x4_t *)&v18, v87);
      int8x16_t v9 = vaddq_s8(v87, v88);
      while (v9.i8[0] <= 60)
      {
        uint16x8_t v91 = (uint16x8_t)vqtbx4q_s8(*(int8x16x4_t *)&v18, v9);
        int8x16_t v92 = vaddq_s8(v9, v88);
        uint16x8_t v93 = (uint16x8_t)vqtbx4q_s8(*(int8x16x4_t *)&v18, v92);
        int8x16_t v9 = vaddq_s8(v92, v88);
        *(int16x8_t *)int8x16_t result = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v90.i8, *(uint16x4_t *)v89.i8), *(uint16x4_t *)v91.i8, *(uint16x4_t *)v84.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v90, v89), v91, (uint16x8_t)v84), 6uLL);
        int8x16_t result = (int8x16_t *)((char *)result + v80);
        BOOL v73 = __OFSUB__(a6, 2);
        a6 -= 2;
        *(int16x8_t *)int16x8_t v13 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v91.i8, *(uint16x4_t *)v89.i8), *(uint16x4_t *)v93.i8, *(uint16x4_t *)v84.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v91, v89), v93, (uint16x8_t)v84), 6uLL);
        int16x8_t v13 = (int8x16_t *)((char *)v13 + v80);
        if ((a6 < 0) ^ v73 | (a6 == 0)) {
          goto LABEL_25;
        }
        uint16x8_t v90 = v93;
      }
    }
    if (a6 < 4)
    {
LABEL_24:
      v112.i64[0] = 0x404040404040404;
      v112.i64[1] = 0x404040404040404;
      int16x8_t v113 = (__int16 *)((char *)v12 + v9.i8[0]);
      int16x8_t v114 = (__int16 *)((char *)v12 + v9.i8[2]);
      v115.i16[0] = *v113;
      v116.i16[0] = v113[1];
      int16x8_t v117 = (__int16 *)((char *)v12 + v9.i8[4]);
      v115.i16[1] = *v114;
      v116.i16[1] = v114[1];
      int16x4_t v118 = (__int16 *)((char *)v12 + v9.i8[6]);
      v115.i16[2] = *v117;
      v116.i16[2] = v117[1];
      int16x8_t v119 = (__int16 *)((char *)v12 + v9.i8[8]);
      v115.i16[3] = *v118;
      v116.i16[3] = v118[1];
      int16x4_t v120 = (__int16 *)((char *)v12 + v9.i8[10]);
      int8x16_t v121 = (__int16 *)((char *)v12 + v9.i8[12]);
      v115.i16[4] = *v119;
      v116.i16[4] = v119[1];
      int8x16_t v122 = (__int16 *)((char *)v12 + v9.i8[14]);
      v115.i16[5] = *v120;
      v116.i16[5] = v120[1];
      v115.i16[6] = *v121;
      v116.i16[6] = v121[1];
      int8x16_t v9 = vaddq_s8(v9, v112);
      v115.i16[7] = *v122;
      v116.i16[7] = v122[1];
      *(int16x8_t *)int8x16_t result = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v90.i8, *(uint16x4_t *)v89.i8), *(uint16x4_t *)v115.i8, *(uint16x4_t *)v84.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v90, v89), v115, (uint16x8_t)v84), 6uLL);
      int8x16_t result = (int8x16_t *)((char *)result + v80);
      *(int16x8_t *)int16x8_t v13 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v115.i8, *(uint16x4_t *)v89.i8), *(uint16x4_t *)v116.i8, *(uint16x4_t *)v84.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v115, v89), v116, (uint16x8_t)v84), 6uLL);
      int16x8_t v13 = (int8x16_t *)((char *)v13 + v80);
    }
    else
    {
      while (1)
      {
        a6 -= 4;
        v97.i64[0] = 0x808080808080808;
        v97.i64[1] = 0x808080808080808;
        int16x8_t v98 = (__int16 *)((char *)v12 + v9.i8[0]);
        int16x8_t v99 = (__int16 *)((char *)v12 + v9.i8[2]);
        v100.i16[0] = *v98;
        v101.i16[0] = v98[1];
        v102.i16[0] = v98[2];
        v109.i16[0] = v98[3];
        int16x4_t v103 = (__int16 *)((char *)v12 + v9.i8[4]);
        v100.i16[1] = *v99;
        v101.i16[1] = v99[1];
        v102.i16[1] = v99[2];
        v109.i16[1] = v99[3];
        int8x16_t v104 = (__int16 *)((char *)v12 + v9.i8[6]);
        v100.i16[2] = *v103;
        v101.i16[2] = v103[1];
        v102.i16[2] = v103[2];
        v109.i16[2] = v103[3];
        int8x16_t v105 = (__int16 *)((char *)v12 + v9.i8[8]);
        v100.i16[3] = *v104;
        v101.i16[3] = v104[1];
        v102.i16[3] = v104[2];
        v109.i16[3] = v104[3];
        int16x8_t v106 = (__int16 *)((char *)v12 + v9.i8[10]);
        int8x16_t v107 = (__int16 *)((char *)v12 + v9.i8[12]);
        v100.i16[4] = *v105;
        v101.i16[4] = v105[1];
        v102.i16[4] = v105[2];
        v109.i16[4] = v105[3];
        int16x8_t v108 = (__int16 *)((char *)v12 + v9.i8[14]);
        v100.i16[5] = *v106;
        v101.i16[5] = v106[1];
        v102.i16[5] = v106[2];
        v109.i16[5] = v106[3];
        v100.i16[6] = *v107;
        v101.i16[6] = v107[1];
        v102.i16[6] = v107[2];
        v109.i16[6] = v107[3];
        int8x16_t v9 = vaddq_s8(v9, v97);
        v100.i16[7] = *v108;
        v101.i16[7] = v108[1];
        v102.i16[7] = v108[2];
        v109.i16[7] = v108[3];
        *(int16x8_t *)int8x16_t result = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v90.i8, *(uint16x4_t *)v89.i8), *(uint16x4_t *)v100.i8, *(uint16x4_t *)v84.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v90, v89), v100, (uint16x8_t)v84), 6uLL);
        int16x8_t v110 = (int16x8_t *)&result->i8[v80];
        *(int16x8_t *)int16x8_t v13 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v100.i8, *(uint16x4_t *)v89.i8), *(uint16x4_t *)v101.i8, *(uint16x4_t *)v84.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v100, v89), v101, (uint16x8_t)v84), 6uLL);
        int16x4_t v111 = (int16x8_t *)&v13->i8[v80];
        *int16x8_t v110 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v101.i8, *(uint16x4_t *)v89.i8), *(uint16x4_t *)v102.i8, *(uint16x4_t *)v84.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v101, v89), v102, (uint16x8_t)v84), 6uLL);
        int8x16_t result = (int8x16_t *)&v110->i8[v80];
        *int16x4_t v111 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v102.i8, *(uint16x4_t *)v89.i8), *(uint16x4_t *)v109.i8, *(uint16x4_t *)v84.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v102, v89), v109, (uint16x8_t)v84), 6uLL);
        int16x8_t v13 = (int8x16_t *)&v111->i8[v80];
        if (a6 < 2) {
          break;
        }
        uint16x8_t v90 = v109;
        if (a6 <= 2) {
          goto LABEL_24;
        }
      }
    }
LABEL_25:
    BOOL v73 = __OFSUB__(a5, 8);
    a5 -= 8;
    if ((a5 < 0) ^ v73 | (a5 == 0)) {
      break;
    }
    unint64_t v123 = v80 >> 1;
    int8x16_t v124 = (int8x16_t *)((char *)result - v123 * j);
    int16x8_t v125 = (int8x16_t *)((char *)v13 - v123 * j);
    unint64_t v80 = 2 * v123;
    int8x16_t result = v124 + 1;
    int16x8_t v13 = v125 + 1;
  }
  return result;
}

int8x16_t *sub_224AAB264(int8x16_t *result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  signed int v15 = 128 - a7;
  unsigned int v16 = -a8;
  if (a5 == 8)
  {
    int16x8_t v46 = vdupq_n_s16(v16);
    v47.i64[0] = 0x3E003E003E003ELL;
    v47.i64[1] = 0x3E003E003E003ELL;
    int16x8_t v48 = vaddq_s16(vmulq_s16((int16x8_t)qword_2646ED5A8[0], v46), v46);
    int8x16_t v49 = *(int8x16_t *)a4;
    long long v50 = *(_OWORD *)(a4 + 16);
    v51.i64[0] = 0x40004000400040;
    v51.i64[1] = 0x40004000400040;
    v52.i64[0] = 0x404040404040404;
    v52.i64[1] = 0x404040404040404;
    int16x8_t v53 = (int16x8_t)vandq_s8((int8x16_t)v48, v47);
    v54.i64[0] = 0x100010001000100;
    v54.i64[1] = 0x100010001000100;
    *(int8x8_t *)v13.i8 = vshl_n_s8(vadd_s8(vshrn_n_s16(v48, 6uLL), (int8x8_t)0x101010101010101), 1uLL);
    v55.i64[0] = 0x202020202020202;
    v55.i64[1] = 0x202020202020202;
    int8x16_t v56 = vaddq_s8(vzip1q_s8(v13, v13), v54);
    uint16x8_t v57 = (uint16x8_t)vqtbl1q_s8(*(int8x16_t *)a4, v56);
    int8x16_t v58 = vaddq_s8(v56, v52);
    int8x16_t v59 = vaddq_s8(v56, v55);
    uint16x8_t v60 = (uint16x8_t)vsubq_s16(v51, v53);
    v61.i64[0] = 0x404040404040404;
    v61.i64[1] = 0x404040404040404;
    int16x8_t v62 = (int16x8_t)vaddq_s8(qword_2646ED5A8[0], qword_2646ED5A8[0]);
    while (1)
    {
      int v63 = v15 >> 6;
      int16x8_t v64 = vdupq_n_s16(v15);
      signed int v65 = v15 - a7;
      if (v63 <= -16) {
        break;
      }
      int16x8_t v66 = vdupq_n_s16(v65);
      int32x4_t v67 = (int16x8_t *)(a3 + 2 * v63);
      int32x4_t v68 = (int16x8_t *)(a3 + 2 * (v65 >> 6));
      int16x8_t v69 = v67[1];
      int16x8_t v70 = v68[1];
      uint16x8_t v71 = (uint16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v49.i8, v59);
      int16x8_t v72 = vshrq_n_s16(v64, 6uLL);
      int16x8_t v73 = vshrq_n_s16(v66, 6uLL);
      uint16x8_t v74 = (uint16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v49.i8, v58);
      uint16x8_t v75 = (uint16x8_t)vuzp1q_s16(*v67, v69);
      uint16x8_t v76 = (uint16x8_t)vuzp1q_s16(*v68, v70);
      uint16x8_t v77 = (uint16x8_t)vuzp2q_s16(*v67, v69);
      uint16x8_t v78 = (uint16x8_t)vuzp2q_s16(*v68, v70);
      int16x8_t v79 = (int16x8_t)vandq_s8((int8x16_t)v64, v47);
      int16x8_t v80 = (int16x8_t)vandq_s8((int8x16_t)v66, v47);
      uint16x8_t v81 = (uint16x8_t)vsubq_s16(v51, v79);
      uint16x8_t v82 = (uint16x8_t)vsubq_s16(v51, v80);
      *int8x16_t result = vbslq_s8((int8x16_t)vcgezq_s16(vaddq_s16(v72, v62)), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v75.i8, *(uint16x4_t *)v81.i8), *(uint16x4_t *)v77.i8, *(uint16x4_t *)v79.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v75, v81), v77, (uint16x8_t)v79), 6uLL), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v57.i8, *(uint16x4_t *)v60.i8), *(uint16x4_t *)v71.i8, *(uint16x4_t *)v53.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v57, v60), v71, (uint16x8_t)v53), 6uLL));
      int8x16_t v83 = (int8x16_t *)((char *)result + a2);
      BOOL v41 = __OFSUB__(a6, 2);
      a6 -= 2;
      signed int v15 = v65 - a7;
      *int8x16_t v83 = vbslq_s8((int8x16_t)vcgezq_s16(vaddq_s16(v73, v62)), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v76.i8, *(uint16x4_t *)v82.i8), *(uint16x4_t *)v78.i8, *(uint16x4_t *)v80.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v76, v82), v78, (uint16x8_t)v80), 6uLL), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v71.i8, *(uint16x4_t *)v60.i8), *(uint16x4_t *)v74.i8, *(uint16x4_t *)v53.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v71, v60), v74, (uint16x8_t)v53), 6uLL));
      int8x16_t result = (int8x16_t *)((char *)v83 + a2);
      if ((a6 < 0) ^ v41 | (a6 == 0)) {
        return result;
      }
      uint16x8_t v57 = v74;
      int8x16_t v59 = vaddq_s8(v59, v61);
      int8x16_t v58 = vaddq_s8(v58, v61);
    }
    while (1)
    {
      uint16x8_t v84 = (uint16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v49.i8, v59);
      uint16x8_t v85 = (uint16x8_t)vqtbl2q_s8(*(int8x16x2_t *)v49.i8, v58);
      *(int16x8_t *)int8x16_t result = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v57.i8, *(uint16x4_t *)v60.i8), *(uint16x4_t *)v84.i8, *(uint16x4_t *)v53.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v57, v60), v84, (uint16x8_t)v53), 6uLL);
      int8x16_t v86 = (int16x8_t *)&result->i8[a2];
      BOOL v41 = __OFSUB__(a6, 2);
      a6 -= 2;
      *int8x16_t v86 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v84.i8, *(uint16x4_t *)v60.i8), *(uint16x4_t *)v85.i8, *(uint16x4_t *)v53.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v84, v60), v85, (uint16x8_t)v53), 6uLL);
      int8x16_t result = (int8x16_t *)&v86->i8[a2];
      if ((a6 < 0) ^ v41 | (a6 == 0)) {
        break;
      }
      uint16x8_t v57 = v85;
      int8x16_t v59 = vaddq_s8(v59, v61);
      int8x16_t v58 = vaddq_s8(v58, v61);
    }
  }
  else
  {
    *(int16x4_t *)v14.i8 = vdup_n_s16(v16);
    v17.i64[0] = 0x3E003E003E003ELL;
    v17.i64[1] = 0x3E003E003E003ELL;
    *(int16x4_t *)v14.i8 = vadd_s16(vmul_s16((int16x4_t)0x3000200010000, *(int16x4_t *)v14.i8), *(int16x4_t *)v14.i8);
    int8x16_t v18 = *(int8x16_t *)a4;
    long long v19 = *(_OWORD *)(a4 + 16);
    v20.i64[0] = 0x40004000400040;
    v20.i64[1] = 0x40004000400040;
    *(int8x8_t *)v11.i8 = vand_s8(*(int8x8_t *)v14.i8, (int8x8_t)0x3E003E003E003ELL);
    int8x8_t v21 = vshl_n_s8(vadd_s8(vshrn_n_s16(v14, 6uLL), (int8x8_t)0x101010101010101), 1uLL);
    int8x8_t v22 = vadd_s8(vzip1_s8(v21, v21), (int8x8_t)0x100010001000100);
    *(int8x8_t *)v14.i8 = vadd_s8(v22, (int8x8_t)0x202020202020202);
    *(int8x8_t *)v12.i8 = vadd_s8(v22, (int8x8_t)0x404040404040404);
    *(int8x8_t *)v10.i8 = vqtbl1_s8(*(int8x16_t *)a4, v22);
    int8x16_t v23 = (int8x16_t)vtrn1q_s64((int64x2_t)v14, v12);
    *(int16x4_t *)v12.i8 = vsub_s16((int16x4_t)0x40004000400040, *(int16x4_t *)v11.i8);
    int16x8_t v24 = (int16x8_t)vtrn1q_s64((int64x2_t)qword_2646ED5A8[0], (int64x2_t)qword_2646ED5A8[0]);
    uint16x8_t v25 = (uint16x8_t)vtrn1q_s64(v11, v11);
    uint16x8_t v26 = (uint16x8_t)vtrn1q_s64(v12, v12);
    v27.i64[0] = 0x404040404040404;
    v27.i64[1] = 0x404040404040404;
    int16x8_t v28 = vaddq_s16(v24, v24);
    while (1)
    {
      int v29 = v15 >> 6;
      *(int16x4_t *)v8.i8 = vdup_n_s16(v15);
      signed int v30 = v15 - a7;
      if (v29 <= -8) {
        break;
      }
      *(int16x4_t *)v9.i8 = vdup_n_s16(v30);
      int16x8_t v31 = *(int16x8_t *)(a3 + 2 * v29);
      int16x8_t v32 = *(int16x8_t *)(a3 + 2 * (v30 >> 6));
      int16x8_t v33 = (int16x8_t)vtrn1q_s64((int64x2_t)v8, v9);
      int64x2_t v34 = (int64x2_t)vqtbl2q_s8(*(int8x16x2_t *)v18.i8, v23);
      int16x8_t v35 = vshrq_n_s16(v33, 6uLL);
      uint16x8_t v36 = (uint16x8_t)vuzp2q_s16(v31, v32);
      uint16x8_t v37 = (uint16x8_t)vuzp1q_s16(v31, v32);
      int16x8_t v8 = (int16x8_t)vandq_s8((int8x16_t)v33, v17);
      uint16x8_t v38 = (uint16x8_t)vtrn1q_s64(v10, v34);
      int64x2_t v9 = (int64x2_t)vsubq_s16(v20, v8);
      int8x16_t v39 = vbslq_s8((int8x16_t)vcgezq_s16(vaddq_s16(v35, v28)), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v37.i8, *(uint16x4_t *)v9.i8), *(uint16x4_t *)v36.i8, *(uint16x4_t *)v8.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v37, (uint16x8_t)v9), v36, (uint16x8_t)v8), 6uLL), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v38.i8, *(uint16x4_t *)v26.i8), *(uint16x4_t *)v34.i8, *(uint16x4_t *)v25.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v38, v26), (uint16x8_t)v34, v25), 6uLL));
      result->i64[0] = v39.i64[0];
      int16x8_t v40 = (uint64_t *)((char *)result->i64 + a2);
      signed int v15 = v30 - a7;
      BOOL v41 = __OFSUB__(a6, 2);
      a6 -= 2;
      *int16x8_t v40 = v39.i64[1];
      int8x16_t result = (int8x16_t *)((char *)v40 + a2);
      if ((a6 < 0) ^ v41 | (a6 == 0)) {
        return result;
      }
      int64x2_t v10 = (int64x2_t)vextq_s8((int8x16_t)v34, (int8x16_t)v34, 8uLL);
      int8x16_t v23 = vaddq_s8(v23, v27);
    }
    while (1)
    {
      int64x2_t v42 = (int64x2_t)vqtbl2q_s8(*(int8x16x2_t *)v18.i8, v23);
      uint16x8_t v43 = (uint16x8_t)vtrn1q_s64(v10, v42);
      int16x8_t v44 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v43.i8, *(uint16x4_t *)v26.i8), *(uint16x4_t *)v42.i8, *(uint16x4_t *)v25.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v43, v26), (uint16x8_t)v42, v25), 6uLL);
      result->i64[0] = v44.i64[0];
      int8x16_t v45 = (uint64_t *)((char *)result->i64 + a2);
      BOOL v41 = __OFSUB__(a6, 2);
      a6 -= 2;
      *int8x16_t v45 = v44.i64[1];
      int8x16_t result = (int8x16_t *)((char *)v45 + a2);
      if ((a6 < 0) ^ v41 | (a6 == 0)) {
        break;
      }
      int64x2_t v10 = (int64x2_t)vextq_s8((int8x16_t)v42, (int8x16_t)v42, 8uLL);
      int8x16_t v23 = vaddq_s8(v23, v27);
    }
  }
  return result;
}

int8x16_t *sub_224AAB5A8(int8x16_t *result, uint64_t a2, uint64_t a3, long long *a4, int a5, int a6, int a7, int a8)
{
  signed int v15 = 64 - a7;
  unsigned int v16 = -a8;
  if (a5 == 8)
  {
    int16x8_t v46 = vdupq_n_s16(v16);
    v47.i64[0] = 0x202020202020202;
    v47.i64[1] = 0x202020202020202;
    v48.i64[0] = 0x3E003E003E003ELL;
    v48.i64[1] = 0x3E003E003E003ELL;
    int16x8_t v49 = vaddq_s16(vmulq_s16((int16x8_t)qword_2646ED5A8[0], v46), v46);
    long long v50 = *a4;
    long long v51 = a4[1];
    long long v52 = a4[2];
    v53.i64[0] = 0x40004000400040;
    v53.i64[1] = 0x40004000400040;
    int16x8_t v54 = (int16x8_t)vandq_s8((int8x16_t)v49, v48);
    v55.i64[0] = 0x100010001000100;
    v55.i64[1] = 0x100010001000100;
    *(int8x8_t *)v13.i8 = vshl_n_s8(vadd_s8(vshrn_n_s16(v49, 6uLL), (int8x8_t)0x202020202020202), 1uLL);
    int8x16_t v56 = vaddq_s8(vzip1q_s8((int8x16_t)v13, (int8x16_t)v13), v55);
    int8x16_t v57 = vaddq_s8(v56, v47);
    uint16x8_t v58 = (uint16x8_t)vsubq_s16(v53, v54);
    v59.i64[0] = 0x404040404040404;
    v59.i64[1] = 0x404040404040404;
    while (1)
    {
      int v60 = v15 >> 6;
      int16x8_t v61 = vdupq_n_s16(v15);
      signed int v62 = v15 - a7;
      if (v60 <= -16) {
        break;
      }
      int16x8_t v63 = vdupq_n_s16(v62);
      int16x8_t v64 = (int8x16_t *)(a3 + 2 * v60);
      signed int v65 = (int8x16_t *)(a3 + 2 * (v62 >> 6));
      uint16x8_t v66 = (uint16x8_t)vqtbl3q_s8(*(int8x16x3_t *)&v50, v56);
      int8x16_t v67 = vaddq_s8(v56, v59);
      uint16x8_t v68 = (uint16x8_t)vqtbl3q_s8(*(int8x16x3_t *)&v50, v57);
      int8x16_t v69 = vaddq_s8(v57, v59);
      int16x8_t v70 = vshrq_n_s16(v61, 6uLL);
      uint16x8_t v71 = (uint16x8_t)vqtbl3q_s8(*(int8x16x3_t *)&v50, v67);
      int16x8_t v72 = vshrq_n_s16(v63, 6uLL);
      uint16x8_t v73 = (uint16x8_t)vqtbl3q_s8(*(int8x16x3_t *)&v50, v69);
      uint16x8_t v74 = (uint16x8_t)vextq_s8(*v64, v64[1], 2uLL);
      uint16x8_t v75 = (uint16x8_t)vextq_s8(*v65, v65[1], 2uLL);
      int16x8_t v76 = (int16x8_t)vandq_s8((int8x16_t)v61, v48);
      int16x8_t v77 = (int16x8_t)vandq_s8((int8x16_t)v63, v48);
      uint16x8_t v78 = (uint16x8_t)vsubq_s16(v53, v76);
      uint16x8_t v79 = (uint16x8_t)vsubq_s16(v53, v77);
      int8x16_t v80 = vbslq_s8((int8x16_t)vcgezq_s16(vaddq_s16(v72, (int16x8_t)qword_2646ED5A8[0])), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v65->i8, *(uint16x4_t *)v79.i8), *(uint16x4_t *)v75.i8, *(uint16x4_t *)v77.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(*(uint16x8_t *)v65, v79), v75, (uint16x8_t)v77), 6uLL), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v71.i8, *(uint16x4_t *)v58.i8), *(uint16x4_t *)v73.i8, *(uint16x4_t *)v54.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v71, v58), v73, (uint16x8_t)v54), 6uLL));
      *int8x16_t result = vbslq_s8((int8x16_t)vcgezq_s16(vaddq_s16(v70, (int16x8_t)qword_2646ED5A8[0])), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v64->i8, *(uint16x4_t *)v78.i8), *(uint16x4_t *)v74.i8, *(uint16x4_t *)v76.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(*(uint16x8_t *)v64, v78), v74, (uint16x8_t)v76), 6uLL), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v66.i8, *(uint16x4_t *)v58.i8), *(uint16x4_t *)v68.i8, *(uint16x4_t *)v54.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v66, v58), v68, (uint16x8_t)v54), 6uLL));
      uint16x8_t v81 = (int8x16_t *)((char *)result + a2);
      BOOL v41 = __OFSUB__(a6, 2);
      a6 -= 2;
      signed int v15 = v62 - a7;
      *uint16x8_t v81 = v80;
      int8x16_t result = (int8x16_t *)((char *)v81 + a2);
      if ((a6 < 0) ^ v41 | (a6 == 0)) {
        return result;
      }
      int8x16_t v56 = vaddq_s8(v67, v59);
      int8x16_t v57 = vaddq_s8(v69, v59);
    }
    while (1)
    {
      uint16x8_t v82 = (uint16x8_t)vqtbl3q_s8(*(int8x16x3_t *)&v50, v56);
      int8x16_t v83 = vaddq_s8(v56, v59);
      uint16x8_t v84 = (uint16x8_t)vqtbl3q_s8(*(int8x16x3_t *)&v50, v57);
      int8x16_t v85 = vaddq_s8(v57, v59);
      uint16x8_t v86 = (uint16x8_t)vqtbl3q_s8(*(int8x16x3_t *)&v50, v83);
      uint16x8_t v87 = (uint16x8_t)vqtbl3q_s8(*(int8x16x3_t *)&v50, v85);
      *(int16x8_t *)int8x16_t result = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v82.i8, *(uint16x4_t *)v58.i8), *(uint16x4_t *)v84.i8, *(uint16x4_t *)v54.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v82, v58), v84, (uint16x8_t)v54), 6uLL);
      int8x16_t v88 = (int16x8_t *)&result->i8[a2];
      BOOL v41 = __OFSUB__(a6, 2);
      a6 -= 2;
      *int8x16_t v88 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v86.i8, *(uint16x4_t *)v58.i8), *(uint16x4_t *)v87.i8, *(uint16x4_t *)v54.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v86, v58), v87, (uint16x8_t)v54), 6uLL);
      int8x16_t result = (int8x16_t *)&v88->i8[a2];
      if ((a6 < 0) ^ v41 | (a6 == 0)) {
        break;
      }
      int8x16_t v56 = vaddq_s8(v83, v59);
      int8x16_t v57 = vaddq_s8(v85, v59);
    }
  }
  else
  {
    *(int16x4_t *)v14.i8 = vdup_n_s16(v16);
    v17.i64[0] = 0x3E003E003E003ELL;
    v17.i64[1] = 0x3E003E003E003ELL;
    *(int16x4_t *)v14.i8 = vadd_s16(vmul_s16((int16x4_t)0x3000200010000, *(int16x4_t *)v14.i8), *(int16x4_t *)v14.i8);
    long long v18 = *a4;
    long long v19 = a4[1];
    long long v20 = a4[2];
    v21.i64[0] = 0x40004000400040;
    v21.i64[1] = 0x40004000400040;
    *(int8x8_t *)v11.i8 = vand_s8(*(int8x8_t *)v14.i8, (int8x8_t)0x3E003E003E003ELL);
    *(int8x8_t *)v13.i8 = vshl_n_s8(vadd_s8(vshrn_n_s16(v14, 6uLL), (int8x8_t)0x202020202020202), 1uLL);
    *(int8x8_t *)v13.i8 = vadd_s8(vzip1_s8(*(int8x8_t *)v13.i8, *(int8x8_t *)v13.i8), (int8x8_t)0x100010001000100);
    *(int8x8_t *)v14.i8 = vadd_s8(*(int8x8_t *)v13.i8, (int8x8_t)0x202020202020202);
    *(int8x8_t *)v12.i8 = vadd_s8(*(int8x8_t *)v13.i8, (int8x8_t)0x404040404040404);
    int16x8_t v22 = (int16x8_t)vtrn1q_s64((int64x2_t)qword_2646ED5A8[0], (int64x2_t)qword_2646ED5A8[0]);
    *(int8x8_t *)v10.i8 = vadd_s8(*(int8x8_t *)v14.i8, (int8x8_t)0x404040404040404);
    int8x16_t v23 = (int8x16_t)vtrn1q_s64(v13, v12);
    int8x16_t v24 = (int8x16_t)vtrn1q_s64((int64x2_t)v14, v10);
    *(int16x4_t *)v12.i8 = vsub_s16((int16x4_t)0x40004000400040, *(int16x4_t *)v11.i8);
    uint16x8_t v25 = (uint16x8_t)vtrn1q_s64(v11, v11);
    uint16x8_t v26 = (uint16x8_t)vtrn1q_s64(v12, v12);
    v27.i64[0] = 0x808080808080808;
    v27.i64[1] = 0x808080808080808;
    while (1)
    {
      int v28 = v15 >> 6;
      *(int16x4_t *)v8.i8 = vdup_n_s16(v15);
      signed int v29 = v15 - a7;
      if (v28 <= -4) {
        break;
      }
      *(int16x4_t *)v9.i8 = vdup_n_s16(v29);
      int64x2_t v30 = *(int64x2_t *)(a3 + 2 * v28);
      int64x2_t v31 = *(int64x2_t *)(a3 + 2 * (v29 >> 6));
      int16x8_t v32 = (int16x8_t)vtrn1q_s64((int64x2_t)v8, v9);
      uint16x8_t v33 = (uint16x8_t)vqtbl3q_s8(*(int8x16x3_t *)&v18, v23);
      uint16x8_t v34 = (uint16x8_t)vqtbl3q_s8(*(int8x16x3_t *)&v18, v24);
      int16x8_t v35 = vshrq_n_s16(v32, 6uLL);
      int64x2_t v36 = (int64x2_t)vextq_s8((int8x16_t)v30, (int8x16_t)v30, 2uLL);
      int16x8_t v8 = (int16x8_t)vandq_s8((int8x16_t)v32, v17);
      uint16x8_t v37 = (uint16x8_t)vtrn1q_s64(v30, v31);
      uint16x8_t v38 = (uint16x8_t)vtrn1q_s64(v36, (int64x2_t)vextq_s8((int8x16_t)v31, (int8x16_t)v31, 2uLL));
      int64x2_t v9 = (int64x2_t)vsubq_s16(v21, v8);
      v27.i64[0] = 0x808080808080808;
      v27.i64[1] = 0x808080808080808;
      int8x16_t v39 = vbslq_s8((int8x16_t)vcgezq_s16(vaddq_s16(v35, v22)), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v37.i8, *(uint16x4_t *)v9.i8), *(uint16x4_t *)v38.i8, *(uint16x4_t *)v8.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v37, (uint16x8_t)v9), v38, (uint16x8_t)v8), 6uLL), (int8x16_t)vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v33.i8, *(uint16x4_t *)v26.i8), *(uint16x4_t *)v34.i8, *(uint16x4_t *)v25.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v33, v26), v34, v25), 6uLL));
      result->i64[0] = v39.i64[0];
      int16x8_t v40 = (uint64_t *)((char *)result->i64 + a2);
      signed int v15 = v29 - a7;
      BOOL v41 = __OFSUB__(a6, 2);
      a6 -= 2;
      *int16x8_t v40 = v39.i64[1];
      int8x16_t result = (int8x16_t *)((char *)v40 + a2);
      if ((a6 < 0) ^ v41 | (a6 == 0)) {
        return result;
      }
      int8x16_t v23 = vaddq_s8(v23, v27);
      int8x16_t v24 = vaddq_s8(v24, v27);
    }
    while (1)
    {
      uint16x8_t v42 = (uint16x8_t)vqtbl3q_s8(*(int8x16x3_t *)&v18, v23);
      uint16x8_t v43 = (uint16x8_t)vqtbl3q_s8(*(int8x16x3_t *)&v18, v24);
      int16x8_t v44 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v42.i8, *(uint16x4_t *)v26.i8), *(uint16x4_t *)v43.i8, *(uint16x4_t *)v25.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v42, v26), v43, v25), 6uLL);
      result->i64[0] = v44.i64[0];
      int8x16_t v45 = (uint64_t *)((char *)result->i64 + a2);
      BOOL v41 = __OFSUB__(a6, 2);
      a6 -= 2;
      *int8x16_t v45 = v44.i64[1];
      int8x16_t result = (int8x16_t *)((char *)v45 + a2);
      if ((a6 < 0) ^ v41 | (a6 == 0)) {
        break;
      }
      int8x16_t v23 = vaddq_s8(v23, v27);
      int8x16_t v24 = vaddq_s8(v24, v27);
    }
  }
  return result;
}

uint64_t sub_224AAB8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, unsigned int a7)
{
  int16x8_t v7 = (const __int16 *)(a3 + 2 * a7);
  vld1q_dup_s16(v7);
  return ((uint64_t (*)(void))((char *)&qword_224AABBE0 - *((unsigned __int16 *)&qword_224AABBE0 + __clz(a5) - 25)))();
}

_OWORD *sub_224AAB928(_OWORD *a1, unint64_t a2, uint64_t a3, signed int a4, int a5, int a6, int a7, unsigned int a8)
{
  while (1)
  {
    signed int v9 = a8 >> 6;
    unsigned int v10 = a8 & 0x3E;
    unsigned int v11 = a8 + a6;
    if (v9 >= a7) {
      break;
    }
    int16x8_t v13 = (int16x8_t)vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)(a3 + (2 * v9)), 6uLL), vsub_s16((int16x4_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)(a3 + (2 * v9)), *(int8x16_t *)(a3 + (2 * v9)), 2uLL), *(int16x4_t *)(a3 + (2 * v9))), (int16x4_t)*(_OWORD *)&vdupq_n_s16(v10));
    int16x8_t v14 = (int16x8_t)vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)(a3 + 2 * (v11 >> 6)), 6uLL), vsub_s16((int16x4_t)*(_OWORD *)&vextq_s8(*(int8x16_t *)(a3 + 2 * (v11 >> 6)), *(int8x16_t *)(a3 + 2 * (v11 >> 6)), 2uLL), *(int16x4_t *)(a3 + 2 * (v11 >> 6))), (int16x4_t)*(_OWORD *)&vdupq_n_s16(v11 & 0x3E));
    *(int16x4_t *)v13.i8 = vrshrn_n_s32((int32x4_t)v13, 6uLL);
    *(int16x4_t *)v14.i8 = vrshrn_n_s32((int32x4_t)v14, 6uLL);
    BOOL v15 = __OFSUB__(a4, 2);
    a4 -= 2;
    int16x8_t v16 = vzip1q_s16(v13, v14);
    *(_DWORD *)a1 = v16.i32[0];
    int8x16_t result = (_OWORD *)((char *)a1 + a2);
    _DWORD *v8 = v16.i32[1];
    int8x16_t v17 = (_DWORD *)((char *)v8 + a2);
    a8 = v11 + a6;
    *(_DWORD *)int8x16_t result = v16.i32[2];
    *int8x16_t v17 = v16.i32[3];
    if ((a4 < 0) ^ v15 | (a4 == 0)) {
      return result;
    }
    a1 = (_OWORD *)((char *)result - a2 + 4);
    int16x8_t v8 = (_DWORD *)((char *)v17 - a2 + 4);
  }
  return sub_224AABBEC(a1, a2, a3, a4, a5);
}

_OWORD *sub_224AAB9BC(_OWORD *a1, unint64_t a2, uint64_t a3, signed int a4, int a5, int a6, int a7, unsigned int a8, double a9, int8x16_t a10, double a11, int8x16_t a12)
{
  while (1)
  {
    unsigned int v14 = a8 >> 6;
    unsigned int v15 = a8 & 0x3E;
    unsigned int v16 = a8 + a6;
    unsigned int v17 = v16 & 0x3E;
    if ((int)v14 >= a7) {
      break;
    }
    long long v19 = (int8x16_t *)(a3 + 2 * v14);
    long long v20 = (int8x16_t *)(a3 + 2 * (v16 >> 6));
    uint16x8_t v21 = (uint16x8_t)vdupq_n_s16(v15);
    uint16x8_t v22 = (uint16x8_t)vdupq_n_s16(v17);
    a10.i16[0] = v19[1].i16[0];
    a12.i16[0] = v20[1].i16[0];
    uint16x8_t v23 = (uint16x8_t)vdupq_n_s16(v13 - v15);
    uint16x8_t v24 = (uint16x8_t)vdupq_n_s16(v13 - v17);
    a10 = vextq_s8(*v19, a10, 2uLL);
    a12 = vextq_s8(*v20, a12, 2uLL);
    int16x8_t v25 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v19->i8, *(uint16x4_t *)v23.i8), *(uint16x4_t *)a10.i8, *(uint16x4_t *)v21.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(*(uint16x8_t *)v19, v23), (uint16x8_t)a10, v21), 6uLL);
    int16x8_t v26 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v20->i8, *(uint16x4_t *)v24.i8), *(uint16x4_t *)a12.i8, *(uint16x4_t *)v22.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(*(uint16x8_t *)v20, v24), (uint16x8_t)a12, v22), 6uLL);
    BOOL v27 = __OFSUB__(a4, 2);
    a4 -= 2;
    int16x8_t v28 = vzip1q_s16(v25, v26);
    int16x8_t v29 = vzip2q_s16(v25, v26);
    a8 = v16 + a6;
    *(_DWORD *)a1 = v28.i32[0];
    int64x2_t v30 = (_DWORD *)((char *)a1 + a2);
    *(_DWORD *)int64x2_t v12 = v28.i32[1];
    int64x2_t v31 = &v12[a2];
    _DWORD *v30 = v28.i32[2];
    int16x8_t v32 = (_DWORD *)((char *)v30 + a2);
    *(_DWORD *)int64x2_t v31 = v28.i32[3];
    uint16x8_t v33 = &v31[a2];
    *int16x8_t v32 = v29.i32[0];
    uint16x8_t v34 = (_DWORD *)((char *)v32 + a2);
    *(_DWORD *)uint16x8_t v33 = v29.i32[1];
    int16x8_t v35 = &v33[a2];
    _DWORD *v34 = v29.i32[2];
    int8x16_t result = (_OWORD *)((char *)v34 + a2);
    *(_DWORD *)int16x8_t v35 = v29.i32[3];
    int64x2_t v36 = &v35[a2];
    if ((a4 < 0) ^ v27 | (a4 == 0)) {
      return result;
    }
    a1 = (_OWORD *)((char *)result - 4 * a2 + 4);
    int64x2_t v12 = &v36[-4 * a2 + 4];
  }
  return sub_224AABBEC(a1, a2, a3, a4, a5);
}

_OWORD *sub_224AABA8C(_OWORD *result, unint64_t a2, uint64_t a3, signed int a4, int a5, int a6, int a7, unsigned int a8)
{
  for (uint64_t i = a5; ; a5 = i)
  {
    unsigned int v11 = a8 >> 6;
    unsigned int v12 = a8 & 0x3E;
    unsigned int v13 = a8 + a6;
    unsigned int v14 = v13 & 0x3E;
    if ((int)v11 >= a7) {
      break;
    }
    unsigned int v15 = (int8x16_t *)(a3 + 2 * v11);
    unsigned int v16 = (int8x16_t *)(a3 + 2 * (v13 >> 6));
    uint16x8_t v17 = (uint16x8_t)vdupq_n_s16(v12);
    uint16x8_t v18 = (uint16x8_t)vdupq_n_s16(v14);
    int8x16_t v20 = *v15;
    int8x16_t v21 = v15[1];
    int8x16_t v22 = v15[2];
    long long v19 = v15 + 3;
    int8x16_t v24 = *v16;
    int8x16_t v25 = v16[1];
    int8x16_t v26 = v16[2];
    uint16x8_t v23 = v16 + 3;
    uint16x8_t v27 = (uint16x8_t)vdupq_n_s16(v9 - v12);
    uint16x8_t v28 = (uint16x8_t)vdupq_n_s16(v9 - v14);
    a8 = v13 + a6;
    while (1)
    {
      uint16x8_t v29 = (uint16x8_t)vextq_s8(v20, v21, 2uLL);
      uint16x8_t v30 = (uint16x8_t)vextq_s8(v21, v22, 2uLL);
      uint16x8_t v31 = (uint16x8_t)vextq_s8(v24, v25, 2uLL);
      uint16x8_t v32 = (uint16x8_t)vextq_s8(v25, v26, 2uLL);
      BOOL v33 = __OFSUB__(a5, 16);
      a5 -= 16;
      int16x8_t v34 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v20.i8, *(uint16x4_t *)v27.i8), *(uint16x4_t *)v29.i8, *(uint16x4_t *)v17.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16((uint16x8_t)v20, v27), v29, v17), 6uLL);
      int16x8_t v35 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v21.i8, *(uint16x4_t *)v27.i8), *(uint16x4_t *)v30.i8, *(uint16x4_t *)v17.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16((uint16x8_t)v21, v27), v30, v17), 6uLL);
      int16x8_t v36 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v24.i8, *(uint16x4_t *)v28.i8), *(uint16x4_t *)v31.i8, *(uint16x4_t *)v18.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16((uint16x8_t)v24, v28), v31, v18), 6uLL);
      int16x8_t v37 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v25.i8, *(uint16x4_t *)v28.i8), *(uint16x4_t *)v32.i8, *(uint16x4_t *)v18.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16((uint16x8_t)v25, v28), v32, v18), 6uLL);
      int16x8_t v38 = vzip1q_s16(v34, v36);
      int16x8_t v39 = vzip2q_s16(v34, v36);
      int16x8_t v40 = vzip1q_s16(v35, v37);
      int16x8_t v41 = vzip2q_s16(v35, v37);
      *(_DWORD *)int8x16_t result = v38.i32[0];
      uint16x8_t v42 = (_DWORD *)((char *)result + a2);
      _DWORD *v8 = v38.i32[1];
      uint16x8_t v43 = (_DWORD *)((char *)v8 + a2);
      *uint16x8_t v42 = v38.i32[2];
      int16x8_t v44 = (_DWORD *)((char *)v42 + a2);
      *uint16x8_t v43 = v38.i32[3];
      int8x16_t v45 = (_DWORD *)((char *)v43 + a2);
      *int16x8_t v44 = v39.i32[0];
      int16x8_t v46 = (_DWORD *)((char *)v44 + a2);
      *int8x16_t v45 = v39.i32[1];
      int8x16_t v47 = (_DWORD *)((char *)v45 + a2);
      _DWORD *v46 = v39.i32[2];
      int8x16_t v48 = (_DWORD *)((char *)v46 + a2);
      *int8x16_t v47 = v39.i32[3];
      int16x8_t v49 = (_DWORD *)((char *)v47 + a2);
      _DWORD *v48 = v40.i32[0];
      long long v50 = (_DWORD *)((char *)v48 + a2);
      *int16x8_t v49 = v40.i32[1];
      long long v51 = (_DWORD *)((char *)v49 + a2);
      *long long v50 = v40.i32[2];
      long long v52 = (_DWORD *)((char *)v50 + a2);
      *long long v51 = v40.i32[3];
      int16x8_t v53 = (_DWORD *)((char *)v51 + a2);
      *long long v52 = v41.i32[0];
      int16x8_t v54 = (_DWORD *)((char *)v52 + a2);
      *int16x8_t v53 = v41.i32[1];
      int8x16_t v55 = (_DWORD *)((char *)v53 + a2);
      *int16x8_t v54 = v41.i32[2];
      int8x16_t result = (_OWORD *)((char *)v54 + a2);
      *int8x16_t v55 = v41.i32[3];
      int16x8_t v8 = (_DWORD *)((char *)v55 + a2);
      if ((a5 < 0) ^ v33 | (a5 == 0)) {
        break;
      }
      int8x16_t v20 = v22;
      int8x16_t v21 = *v19;
      int8x16_t v22 = v19[1];
      v19 += 2;
      int8x16_t v24 = v26;
      int8x16_t v25 = *v23;
      int8x16_t v26 = v23[1];
      v23 += 2;
    }
    BOOL v33 = __OFSUB__(a4, 2);
    a4 -= 2;
    if ((a4 < 0) ^ v33 | (a4 == 0)) {
      return result;
    }
    unint64_t v56 = a2 >> 1;
    int8x16_t v57 = (char *)result - v56 * i;
    uint16x8_t v58 = (char *)v8 - v56 * i;
    a2 = 2 * v56;
    int8x16_t result = v57 + 4;
    int16x8_t v8 = v58 + 4;
  }
  return sub_224AABBEC(result, a2, a3, a4, a5);
}

_OWORD *sub_224AABBEC(_OWORD *result, unint64_t a2, uint64_t a3, signed int a4, int a5)
{
  if (a4 <= 8) {
    return (_OWORD *)((uint64_t (*)(void))((char *)aDddd - (unsigned __int16)aDddd[__clz(a4) - 25]))();
  }
  signed int v6 = a4;
  uint64_t v7 = (a2 >> 1) - 2 * a4;
  while (1)
  {
    unsigned int v8 = a4 & 7;
    if ((a4 & 7) != 0)
    {
      a4 -= v8;
      *int8x16_t result = v5;
      int8x16_t result = (_OWORD *)((char *)result + 2 * v8);
    }
    do
    {
      BOOL v9 = __OFSUB__(a4, 8);
      a4 -= 8;
      *result++ = v5;
    }
    while (!((a4 < 0) ^ v9 | (a4 == 0)));
    BOOL v9 = __OFSUB__(a5--, 1);
    int8x16_t result = (_OWORD *)((char *)result + v7);
    if ((a5 < 0) ^ v9 | (a5 == 0)) {
      break;
    }
    a4 = v6;
  }
  return result;
}

_OWORD *sub_224AABD24(_OWORD *a1, uint64_t a2, uint64_t a3, signed int a4, int a5, unsigned int a6, signed int a7)
{
  uint64_t v7 = (const char *)(a3 + a7);
  vld1q_dup_s8(v7);
  unsigned int v8 = a6;
  BOOL v9 = (char *)a1 + a2;
  unint64_t v10 = 2 * a2;
  if (a5 == 8)
  {
    while (1)
    {
      unsigned int v24 = v8 >> 6;
      unsigned int v25 = v8 & 0x3E;
      unsigned int v26 = v8 + a6;
      unsigned int v27 = v26 & 0x3E;
      if ((int)v24 >= a7) {
        break;
      }
      uint16x8_t v28 = (int16x8_t *)(a3 + 2 * v24);
      uint16x8_t v29 = (int16x8_t *)(a3 + 2 * (v26 >> 6));
      uint16x8_t v30 = (uint16x8_t)vdupq_n_s16(v25);
      uint16x8_t v31 = (uint16x8_t)vdupq_n_s16(v27);
      int16x8_t v32 = v28[1];
      int16x8_t v33 = v29[1];
      uint16x8_t v34 = (uint16x8_t)vdupq_n_s16(64 - v25);
      uint16x8_t v35 = (uint16x8_t)vdupq_n_s16(64 - v27);
      uint16x8_t v36 = (uint16x8_t)vuzp2q_s16(*v28, v32);
      uint16x8_t v37 = (uint16x8_t)vuzp1q_s16(*v28, v32);
      uint16x8_t v38 = (uint16x8_t)vuzp2q_s16(*v29, v33);
      uint16x8_t v39 = (uint16x8_t)vuzp1q_s16(*v29, v33);
      int16x8_t v40 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v37.i8, *(uint16x4_t *)v34.i8), *(uint16x4_t *)v36.i8, *(uint16x4_t *)v30.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v37, v34), v36, v30), 6uLL);
      int16x8_t v41 = vrshrn_high_n_s32(vrshrn_n_s32((int32x4_t)vmlal_u16(vmull_u16(*(uint16x4_t *)v39.i8, *(uint16x4_t *)v35.i8), *(uint16x4_t *)v38.i8, *(uint16x4_t *)v31.i8), 6uLL), (int32x4_t)vmlal_high_u16(vmull_high_u16(v39, v35), v38, v31), 6uLL);
      BOOL v21 = __OFSUB__(a4, 2);
      a4 -= 2;
      int16x8_t v42 = vzip1q_s16(v40, v41);
      int16x8_t v43 = vzip2q_s16(v40, v41);
      unsigned int v8 = v26 + a6;
      *(_DWORD *)a1 = v42.i32[0];
      int16x8_t v44 = (_DWORD *)((char *)a1 + v10);
      *(_DWORD *)BOOL v9 = v42.i32[1];
      int8x16_t v45 = &v9[v10];
      *int16x8_t v44 = v42.i32[2];
      int16x8_t v46 = (_DWORD *)((char *)v44 + v10);
      *(_DWORD *)int8x16_t v45 = v42.i32[3];
      int8x16_t v47 = &v45[v10];
      _DWORD *v46 = v43.i32[0];
      int8x16_t v48 = (_DWORD *)((char *)v46 + v10);
      *(_DWORD *)int8x16_t v47 = v43.i32[1];
      int16x8_t v49 = &v47[v10];
      _DWORD *v48 = v43.i32[2];
      int8x16_t result = (_OWORD *)((char *)v48 + v10);
      *(_DWORD *)int16x8_t v49 = v43.i32[3];
      long long v50 = &v49[v10];
      if ((a4 < 0) ^ v21 | (a4 == 0)) {
        return result;
      }
      a1 = (_OWORD *)((char *)result - 4 * v10 + 4);
      BOOL v9 = &v50[-4 * v10 + 4];
    }
  }
  else
  {
    while (1)
    {
      signed int v11 = v8 >> 6;
      unsigned int v12 = v8 & 0x3E;
      unsigned int v13 = v8 + a6;
      if (v11 >= a7) {
        break;
      }
      int16x8_t v15 = *(int16x8_t *)(a3 + (2 * v11));
      int16x8_t v16 = *(int16x8_t *)(a3 + 2 * (v13 >> 6));
      int16x4_t v17 = (int16x4_t)vuzp2q_s16(v15, v15).u64[0];
      v15.i64[0] = vuzp1q_s16(v15, v15).u64[0];
      int16x4_t v18 = (int16x4_t)vuzp2q_s16(v16, v16).u64[0];
      v16.i64[0] = vuzp1q_s16(v16, v16).u64[0];
      int16x8_t v19 = (int16x8_t)vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v15.i8, 6uLL), vsub_s16(v17, *(int16x4_t *)v15.i8), vdup_n_s16(v12));
      int16x8_t v20 = (int16x8_t)vmlal_s16((int32x4_t)vshll_n_u16(*(uint16x4_t *)v16.i8, 6uLL), vsub_s16(v18, *(int16x4_t *)v16.i8), vdup_n_s16(v13 & 0x3E));
      *(int16x4_t *)v19.i8 = vrshrn_n_s32((int32x4_t)v19, 6uLL);
      *(int16x4_t *)v20.i8 = vrshrn_n_s32((int32x4_t)v20, 6uLL);
      BOOL v21 = __OFSUB__(a4, 2);
      a4 -= 2;
      int16x8_t v22 = vzip1q_s16(v19, v20);
      *(_DWORD *)a1 = v22.i32[0];
      int8x16_t result = (_OWORD *)((char *)a1 + v10);
      *(_DWORD *)BOOL v9 = v22.i32[1];
      uint16x8_t v23 = &v9[v10];
      unsigned int v8 = v13 + a6;
      *(_DWORD *)int8x16_t result = v22.i32[2];
      *(_DWORD *)uint16x8_t v23 = v22.i32[3];
      if ((a4 < 0) ^ v21 | (a4 == 0)) {
        return result;
      }
      a1 = (_OWORD *)((char *)result - v10 + 4);
      BOOL v9 = &v23[-v10 + 4];
    }
  }
  return sub_224AABBEC(a1, v10, a3, a4, a5);
}

uint64_t sub_224AABEB0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&qword_224AAC0D0 - *((unsigned __int16 *)&qword_224AAC0D0 + __clz(a4) - 26)))();
}

int16x4_t sub_224AABF10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7)
{
  int16x4_t result = *(int16x4_t *)(a3 + 2);
  int16x4_t v17 = (int16x4_t *)(a3 - 4);
  do
  {
    int16x4_t v18 = *v17;
    int16x4_t v17 = (int16x4_t *)((char *)v17 - 4);
    int8x16_t v19 = (int8x16_t)vminq_s16(vmaxq_s16(vrshrq_n_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmulq_n_s16(v8, result.i16[0]), v9, result, 1), v10, result, 2), v11, result, 3), v7, v18, 2), v12, v18,
                               1),
                             v13,
                             v18,
                             0),
                           4uLL),
                         v14),
                       v15);
    BOOL v20 = __OFSUB__(a5, 2);
    a5 -= 2;
    *a1 = v19.i64[0];
    a1 = (void *)((char *)a1 + a2);
    int16x4_t result = (int16x4_t)vextq_s8(v19, v19, 8uLL).u64[0];
    *a7 = v19.i64[1];
    a7 = (void *)((char *)a7 + a2);
  }
  while (!((a5 < 0) ^ v20 | (a5 == 0)));
  return result;
}

int16x8_t sub_224AABF60(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7)
{
  int16x8_t result = *(int16x8_t *)(a3 + 2);
  int16x4_t v17 = (int16x4_t *)(a3 - 4);
  do
  {
    int16x4_t v18 = *v17;
    int16x4_t v17 = (int16x4_t *)((char *)v17 - 4);
    int16x8_t v19 = vminq_s16(vmaxq_s16(vrshrq_n_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmulq_n_s16(v8, result.i16[0]), v9, *(int16x4_t *)result.i8, 1), v10, *(int16x4_t *)result.i8, 2), v11, *(int16x4_t *)result.i8, 3), v7, v18, 2), v12, v18,
                    1),
                  v13,
                  v18,
                  0),
                4uLL),
              v14),
            v15);
    int64x2_t v20 = (int64x2_t)vminq_s16(vmaxq_s16(vrshrq_n_s16(vmlaq_laneq_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_laneq_s16(v8, result, 4), v9, result, 5), v10, result, 6), v11, result, 7), v7, *(int16x4_t *)result.i8, 3), v12, *(int16x4_t *)v19.i8,
                               3),
                             v13,
                             v19,
                             7),
                           4uLL),
                         v14),
                       v15);
    BOOL v21 = __OFSUB__(a5, 2);
    a5 -= 2;
    *a1 = v19.i64[0];
    a1[1] = v20.i64[0];
    a1 = (void *)((char *)a1 + a2);
    int16x8_t result = (int16x8_t)vzip2q_s64((int64x2_t)v19, v20);
    *a7 = v19.i64[1];
    a7[1] = v20.i64[1];
    a7 = (void *)((char *)a7 + a2);
  }
  while (!((a5 < 0) ^ v21 | (a5 == 0)));
  return result;
}

void *sub_224AABFD8(void *result, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, void *a7)
{
  int16x8_t v16 = (int16x8_t *)(a3 + 2);
  int16x4_t v17 = (int16x4_t *)(a3 - 4);
  uint64_t v18 = a2 - 2 * a4;
  for (unsigned int i = a4; ; a4 = i)
  {
    int16x4_t v20 = *v17;
    int16x4_t v17 = (int16x4_t *)((char *)v17 - 4);
    do
    {
      int16x8_t v21 = *v16;
      int16x8_t v22 = v16[1];
      v16 += 2;
      int16x8_t v23 = vminq_s16(vmaxq_s16(vrshrq_n_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmulq_lane_s16(v7, v20, 2), v12, v20, 1), v13, v20, 0), v8, *(int16x4_t *)v21.i8, 0), v9, *(int16x4_t *)v21.i8, 1), v10, *(int16x4_t *)v21.i8, 2), v11, *(int16x4_t *)v21.i8, 3),
                  4uLL),
                v14),
              v15);
      int16x8_t v24 = vminq_s16(vmaxq_s16(vrshrq_n_s16(vmlaq_laneq_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_laneq_s16(v8, v21, 4), v9, v21, 5), v10, v21, 6), v11, v21, 7), v7, *(int16x4_t *)v21.i8, 3), v12, *(int16x4_t *)v23.i8, 3), v13, v23, 7),
                  4uLL),
                v14),
              v15);
      int16x8_t v25 = vminq_s16(vmaxq_s16(vrshrq_n_s16(vmlaq_laneq_s16(vmlaq_lane_s16(vmlaq_laneq_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmulq_n_s16(v8, v22.i16[0]), v9, *(int16x4_t *)v22.i8, 1), v10, *(int16x4_t *)v22.i8, 2), v11, *(int16x4_t *)v22.i8, 3), v7, v21, 7), v12, *(int16x4_t *)v24.i8,
                      3),
                    v13,
                    v24,
                    7),
                  4uLL),
                v14),
              v15);
      BOOL v26 = __OFSUB__(a4, 16);
      a4 -= 16;
      int16x8_t v27 = vminq_s16(vmaxq_s16(vrshrq_n_s16(vmlaq_laneq_s16(vmlaq_lane_s16(vmlaq_lane_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmlaq_laneq_s16(vmulq_laneq_s16(v8, v22, 4), v9, v22, 5), v10, v22, 6), v11, v22, 7), v7, *(int16x4_t *)v22.i8, 3), v12, *(int16x4_t *)v25.i8, 3), v13, v25, 7),
                  4uLL),
                v14),
              v15);
      v20.i16[2] = v22.i16[7];
      *int16x8_t result = v23.i64[0];
      result[1] = v24.i64[0];
      result[2] = v25.i64[0];
      result[3] = v27.i64[0];
      result += 4;
      v20.i16[0] = v27.i16[7];
      *a7 = v23.i64[1];
      a7[1] = v24.i64[1];
      a7[2] = v25.i64[1];
      a7[3] = v27.i64[1];
      a7 += 4;
      v20.i16[1] = v27.i16[3];
    }
    while (!((a4 < 0) ^ v26 | (a4 == 0)));
    BOOL v26 = __OFSUB__(a5, 2);
    a5 -= 2;
    if ((a5 < 0) ^ v26 | (a5 == 0)) {
      break;
    }
    int16x8_t v16 = (int16x8_t *)((char *)a7 - 2 * i);
    int16x8_t result = (void *)((char *)result + v18);
    a7 = (void *)((char *)a7 + v18);
  }
  return result;
}

uint64_t sub_224AAC0D8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&qword_224AAC3B8 - *((unsigned __int16 *)&qword_224AAC3B8 + __clz(a4) - 26)))();
}

int16x4_t sub_224AAC134(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7)
{
  int16x4_t result = *(int16x4_t *)(a3 + 2);
  int16x8_t v16 = (int16x4_t *)(a3 - 4);
  do
  {
    int16x4_t v17 = *v16;
    int16x8_t v16 = (int16x4_t *)((char *)v16 - 4);
    int8x16_t v18 = (int8x16_t)vminq_s16(vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v8.i8, result, 0), *(int16x4_t *)v9.i8, result, 1), *(int16x4_t *)v10.i8, result, 2), *(int16x4_t *)v11.i8, result, 3), *(int16x4_t *)v7.i8,
                                 v17,
                                 2),
                               *(int16x4_t *)v12.i8,
                               v17,
                               1),
                             *(int16x4_t *)v13.i8,
                             v17,
                             0),
                           4uLL),
                         vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmull_high_lane_s16(v8, result, 0), v9, result, 1), v10, result, 2), v11, result, 3), v7, v17, 2), v12, v17, 1), v13, v17,
                           0),
                         4uLL),
                       v14);
    BOOL v19 = __OFSUB__(a5, 2);
    a5 -= 2;
    *a1 = v18.i64[0];
    a1 = (void *)((char *)a1 + a2);
    int16x4_t result = (int16x4_t)vextq_s8(v18, v18, 8uLL).u64[0];
    *a7 = v18.i64[1];
    a7 = (void *)((char *)a7 + a2);
  }
  while (!((a5 < 0) ^ v19 | (a5 == 0)));
  return result;
}

int16x8_t sub_224AAC1A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7)
{
  int16x8_t result = *(int16x8_t *)(a3 + 2);
  int16x8_t v16 = (int16x4_t *)(a3 - 4);
  do
  {
    int16x4_t v17 = *v16;
    int16x8_t v16 = (int16x4_t *)((char *)v16 - 4);
    int16x8_t v18 = vminq_s16(vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v8.i8, *(int16x4_t *)result.i8, 0), *(int16x4_t *)v9.i8, *(int16x4_t *)result.i8, 1), *(int16x4_t *)v10.i8, *(int16x4_t *)result.i8, 2), *(int16x4_t *)v11.i8, *(int16x4_t *)result.i8, 3), *(int16x4_t *)v7.i8,
                      v17,
                      2),
                    *(int16x4_t *)v12.i8,
                    v17,
                    1),
                  *(int16x4_t *)v13.i8,
                  v17,
                  0),
                4uLL),
              vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmull_high_lane_s16(v8, *(int16x4_t *)result.i8, 0), v9, *(int16x4_t *)result.i8, 1), v10, *(int16x4_t *)result.i8, 2), v11, *(int16x4_t *)result.i8, 3), v7, v17, 2), v12,
                  v17,
                  1),
                v13,
                v17,
                0),
              4uLL),
            v14);
    int64x2_t v19 = (int64x2_t)vminq_s16(vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_laneq_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_laneq_s16(*(int16x4_t *)v8.i8, result, 4), *(int16x4_t *)v9.i8, result, 5), *(int16x4_t *)v10.i8, result, 6), *(int16x4_t *)v11.i8, result, 7), *(int16x4_t *)v7.i8,
                                 *(int16x4_t *)result.i8,
                                 3),
                               *(int16x4_t *)v12.i8,
                               *(int16x4_t *)v18.i8,
                               3),
                             *(int16x4_t *)v13.i8,
                             v18,
                             7),
                           4uLL),
                         vmlal_high_laneq_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_laneq_s16(v8, result, 4), v9, result, 5), v10, result, 6), v11, result, 7), v7, *(int16x4_t *)result.i8, 3), v12, *(int16x4_t *)v18.i8, 3), v13, v18,
                           7),
                         4uLL),
                       v14);
    BOOL v20 = __OFSUB__(a5, 2);
    a5 -= 2;
    *a1 = v18.i64[0];
    a1[1] = v19.i64[0];
    a1 = (void *)((char *)a1 + a2);
    int16x8_t result = (int16x8_t)vzip2q_s64((int64x2_t)v18, v19);
    *a7 = v18.i64[1];
    a7[1] = v19.i64[1];
    a7 = (void *)((char *)a7 + a2);
  }
  while (!((a5 < 0) ^ v20 | (a5 == 0)));
  return result;
}

void *sub_224AAC250(void *result, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, void *a7)
{
  int16x8_t v15 = (int16x8_t *)(a3 + 2);
  int16x8_t v16 = (int16x4_t *)(a3 - 4);
  uint64_t v17 = a2 - 2 * a4;
  for (unsigned int i = a4; ; a4 = i)
  {
    int16x4_t v19 = *v16;
    int16x8_t v16 = (int16x4_t *)((char *)v16 - 4);
    do
    {
      int16x8_t v20 = *v15;
      int16x8_t v21 = v15[1];
      v15 += 2;
      int16x8_t v22 = vminq_s16(vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v7.i8, v19, 2), *(int16x4_t *)v12.i8, v19, 1), *(int16x4_t *)v13.i8, v19, 0), *(int16x4_t *)v8.i8, *(int16x4_t *)v20.i8, 0), *(int16x4_t *)v9.i8, *(int16x4_t *)v20.i8, 1), *(int16x4_t *)v10.i8, *(int16x4_t *)v20.i8,
                      2),
                    *(int16x4_t *)v11.i8,
                    *(int16x4_t *)v20.i8,
                    3),
                  4uLL),
                vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmull_high_lane_s16(v7, v19, 2), v12, v19, 1), v13, v19, 0), v8, *(int16x4_t *)v20.i8, 0), v9, *(int16x4_t *)v20.i8, 1), v10, *(int16x4_t *)v20.i8, 2), v11, *(int16x4_t *)v20.i8,
                  3),
                4uLL),
              v14);
      int16x8_t v23 = vminq_s16(vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_laneq_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_laneq_s16(*(int16x4_t *)v8.i8, v20, 4), *(int16x4_t *)v9.i8, v20, 5), *(int16x4_t *)v10.i8, v20, 6), *(int16x4_t *)v11.i8, v20, 7), *(int16x4_t *)v7.i8, *(int16x4_t *)v20.i8, 3), *(int16x4_t *)v12.i8, *(int16x4_t *)v22.i8,
                      3),
                    *(int16x4_t *)v13.i8,
                    v22,
                    7),
                  4uLL),
                vmlal_high_laneq_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_laneq_s16(v8, v20, 4), v9, v20, 5), v10, v20, 6), v11, v20, 7), v7, *(int16x4_t *)v20.i8, 3), v12, *(int16x4_t *)v22.i8, 3), v13, v22,
                  7),
                4uLL),
              v14);
      int16x8_t v24 = vminq_s16(vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_laneq_s16(vmlal_lane_s16(vmlal_laneq_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_lane_s16(vmull_lane_s16(*(int16x4_t *)v8.i8, *(int16x4_t *)v21.i8, 0), *(int16x4_t *)v9.i8, *(int16x4_t *)v21.i8, 1), *(int16x4_t *)v10.i8, *(int16x4_t *)v21.i8, 2), *(int16x4_t *)v11.i8, *(int16x4_t *)v21.i8, 3), *(int16x4_t *)v7.i8,
                        v20,
                        7),
                      *(int16x4_t *)v12.i8,
                      *(int16x4_t *)v23.i8,
                      3),
                    *(int16x4_t *)v13.i8,
                    v23,
                    7),
                  4uLL),
                vmlal_high_laneq_s16(vmlal_high_lane_s16(vmlal_high_laneq_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmull_high_lane_s16(v8, *(int16x4_t *)v21.i8, 0), v9, *(int16x4_t *)v21.i8, 1), v10, *(int16x4_t *)v21.i8, 2), v11, *(int16x4_t *)v21.i8, 3), v7, v20, 7), v12,
                    *(int16x4_t *)v23.i8,
                    3),
                  v13,
                  v23,
                  7),
                4uLL),
              v14);
      BOOL v25 = __OFSUB__(a4, 16);
      a4 -= 16;
      int16x8_t v26 = vminq_s16(vqrshrun_high_n_s32(vqrshrun_n_s32(vmlal_laneq_s16(vmlal_lane_s16(vmlal_lane_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmlal_laneq_s16(vmull_laneq_s16(*(int16x4_t *)v8.i8, v21, 4), *(int16x4_t *)v9.i8, v21, 5), *(int16x4_t *)v10.i8, v21, 6), *(int16x4_t *)v11.i8, v21, 7), *(int16x4_t *)v7.i8, *(int16x4_t *)v21.i8, 3), *(int16x4_t *)v12.i8, *(int16x4_t *)v24.i8,
                      3),
                    *(int16x4_t *)v13.i8,
                    v24,
                    7),
                  4uLL),
                vmlal_high_laneq_s16(vmlal_high_lane_s16(vmlal_high_lane_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmlal_high_laneq_s16(vmull_high_laneq_s16(v8, v21, 4), v9, v21, 5), v10, v21, 6), v11, v21, 7), v7, *(int16x4_t *)v21.i8, 3), v12, *(int16x4_t *)v24.i8, 3), v13, v24,
                  7),
                4uLL),
              v14);
      v19.i16[2] = v21.i16[7];
      *int16x8_t result = v22.i64[0];
      result[1] = v23.i64[0];
      result[2] = v24.i64[0];
      result[3] = v26.i64[0];
      result += 4;
      v19.i16[0] = v26.i16[7];
      *a7 = v22.i64[1];
      a7[1] = v23.i64[1];
      a7[2] = v24.i64[1];
      a7[3] = v26.i64[1];
      a7 += 4;
      v19.i16[1] = v26.i16[3];
    }
    while (!((a4 < 0) ^ v25 | (a4 == 0)));
    BOOL v25 = __OFSUB__(a5, 2);
    a5 -= 2;
    if ((a5 < 0) ^ v25 | (a5 == 0)) {
      break;
    }
    int16x8_t v15 = (int16x8_t *)((char *)a7 - 2 * i);
    int16x8_t result = (void *)((char *)result + v17);
    a7 = (void *)((char *)a7 + v17);
  }
  return result;
}

uint64_t sub_224AAC3C0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  if (a9 > 1023) {
    return sub_224AAC0D8(a1, a2, a3, a4);
  }
  else {
    return sub_224AABEB0(a1, a2, a3, a4);
  }
}

uint64_t sub_224AAC3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return ((uint64_t (*)(void))((char *)&qword_224AAC6C8 - *((unsigned __int16 *)&qword_224AAC6C8 + __clz(a5) - 25)))();
}

void *sub_224AAC3F4(void *result, uint64_t a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, int8x8_t *a8, uint64_t a9, int a10)
{
  int16x8_t v13 = (void *)((char *)result + a2);
  uint64_t v14 = 2 * a2;
  do
  {
    int8x8_t v15 = *a8++;
    BOOL v16 = __OFSUB__(a10, 4);
    a10 -= 4;
    *(uint8x8_t *)a6.i8 = vshr_n_u8((uint8x8_t)v15, 4uLL);
    *(int8x8_t *)a5.i8 = vand_s8(v15, v10);
    int8x16_t v17 = vzip1q_s8(a5, a6);
    int8x16_t v18 = vaddq_s8(v17, v17);
    int8x16_t v19 = vqtbl1q_s8(v11, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v18, v18), v12));
    *int16x8_t result = v19.i64[0];
    int16x8_t v20 = (void *)((char *)result + v14);
    int8x16_t v21 = vqtbl1q_s8(v11, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v18, v18), v12));
    *int16x8_t v13 = v19.i64[1];
    int16x8_t v22 = (void *)((char *)v13 + v14);
    *int16x8_t v20 = v21.i64[0];
    int16x8_t result = (void *)((char *)v20 + v14);
    *int16x8_t v22 = v21.i64[1];
    int16x8_t v13 = (void *)((char *)v22 + v14);
  }
  while (!((a10 < 0) ^ v16 | (a10 == 0)));
  return result;
}

int8x16_t *sub_224AAC444(int8x16_t *result, uint64_t a2, uint64_t a3, int8x16_t *a4, uint64_t a5, int a6)
{
  int16x8_t v9 = (int8x16_t *)((char *)result + a2);
  uint64_t v10 = 2 * a2;
  do
  {
    int8x16_t v11 = *a4++;
    BOOL v12 = __OFSUB__(a6, 4);
    a6 -= 4;
    int8x16_t v13 = (int8x16_t)vshrq_n_u8((uint8x16_t)v11, 4uLL);
    int8x16_t v14 = vandq_s8(v11, v6);
    int8x16_t v15 = vzip1q_s8(v14, v13);
    int8x16_t v16 = vzip2q_s8(v14, v13);
    int8x16_t v17 = vaddq_s8(v15, v15);
    int8x16_t v18 = vaddq_s8(v16, v16);
    *int16x8_t result = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v17, v17), v8));
    int8x16_t v19 = (int8x16_t *)((char *)result + v10);
    int8x16_t *v9 = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v17, v17), v8));
    int16x8_t v20 = (int8x16_t *)((char *)v9 + v10);
    *int8x16_t v19 = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v18, v18), v8));
    int16x8_t result = (int8x16_t *)((char *)v19 + v10);
    *int16x8_t v20 = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v18, v18), v8));
    int16x8_t v9 = (int8x16_t *)((char *)v20 + v10);
  }
  while (!((a6 < 0) ^ v12 | (a6 == 0)));
  return result;
}

int8x16_t *sub_224AAC4B4(int8x16_t *result, uint64_t a2, uint64_t a3, int8x16_t *a4, uint64_t a5, int a6)
{
  int16x8_t v9 = (int8x16_t *)((char *)result + a2);
  uint64_t v10 = 2 * a2;
  do
  {
    int8x16_t v11 = *a4;
    int8x16_t v12 = a4[1];
    a4 += 2;
    BOOL v13 = __OFSUB__(a6, 4);
    a6 -= 4;
    int8x16_t v14 = (int8x16_t)vshrq_n_u8((uint8x16_t)v11, 4uLL);
    int8x16_t v15 = vandq_s8(v11, v6);
    int8x16_t v16 = (int8x16_t)vshrq_n_u8((uint8x16_t)v12, 4uLL);
    int8x16_t v17 = vandq_s8(v12, v6);
    int8x16_t v18 = vzip1q_s8(v15, v14);
    int8x16_t v19 = vzip2q_s8(v15, v14);
    int8x16_t v20 = vzip1q_s8(v17, v16);
    int8x16_t v21 = vzip2q_s8(v17, v16);
    int8x16_t v22 = vaddq_s8(v18, v18);
    int8x16_t v23 = vaddq_s8(v19, v19);
    int8x16_t v24 = vaddq_s8(v20, v20);
    int8x16_t v25 = vaddq_s8(v21, v21);
    *int16x8_t result = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v22, v22), v8));
    result[1] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v22, v22), v8));
    int16x8_t v26 = (int8x16_t *)((char *)result + v10);
    int8x16_t *v9 = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v23, v23), v8));
    v9[1] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v23, v23), v8));
    int16x8_t v27 = (int8x16_t *)((char *)v9 + v10);
    *int16x8_t v26 = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v24, v24), v8));
    v26[1] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v24, v24), v8));
    int16x8_t result = (int8x16_t *)((char *)v26 + v10);
    *int16x8_t v27 = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v25, v25), v8));
    v27[1] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v25, v25), v8));
    int16x8_t v9 = (int8x16_t *)((char *)v27 + v10);
  }
  while (!((a6 < 0) ^ v13 | (a6 == 0)));
  return result;
}

int8x16_t *sub_224AAC56C(int8x16_t *result, uint64_t a2, uint64_t a3, int8x16_t *a4, uint64_t a5, int a6)
{
  int16x8_t v9 = (int8x16_t *)((char *)result + a2);
  uint64_t v10 = 2 * a2;
  do
  {
    int8x16_t v11 = *a4;
    int8x16_t v12 = a4[1];
    a4 += 2;
    BOOL v13 = __OFSUB__(a6, 2);
    a6 -= 2;
    int8x16_t v14 = (int8x16_t)vshrq_n_u8((uint8x16_t)v11, 4uLL);
    int8x16_t v15 = vandq_s8(v11, v6);
    int8x16_t v16 = (int8x16_t)vshrq_n_u8((uint8x16_t)v12, 4uLL);
    int8x16_t v17 = vandq_s8(v12, v6);
    int8x16_t v18 = vzip1q_s8(v15, v14);
    int8x16_t v19 = vzip2q_s8(v15, v14);
    int8x16_t v20 = vzip1q_s8(v17, v16);
    int8x16_t v21 = vzip2q_s8(v17, v16);
    int8x16_t v22 = vaddq_s8(v18, v18);
    int8x16_t v23 = vaddq_s8(v19, v19);
    int8x16_t v24 = vaddq_s8(v20, v20);
    int8x16_t v25 = vaddq_s8(v21, v21);
    *int16x8_t result = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v22, v22), v8));
    result[1] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v22, v22), v8));
    result[2] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v23, v23), v8));
    result[3] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v23, v23), v8));
    int16x8_t result = (int8x16_t *)((char *)result + v10);
    int8x16_t *v9 = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v24, v24), v8));
    v9[1] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v24, v24), v8));
    v9[2] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v25, v25), v8));
    v9[3] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v25, v25), v8));
    int16x8_t v9 = (int8x16_t *)((char *)v9 + v10);
  }
  while (!((a6 < 0) ^ v13 | (a6 == 0)));
  return result;
}

int8x16_t *sub_224AAC61C(int8x16_t *result, uint64_t a2, uint64_t a3, int8x16_t *a4, uint64_t a5, int a6)
{
  int16x8_t v9 = result + 4;
  do
  {
    int8x16_t v10 = *a4;
    int8x16_t v11 = a4[1];
    a4 += 2;
    BOOL v12 = __OFSUB__(a6--, 1);
    int8x16_t v13 = (int8x16_t)vshrq_n_u8((uint8x16_t)v10, 4uLL);
    int8x16_t v14 = vandq_s8(v10, v6);
    int8x16_t v15 = (int8x16_t)vshrq_n_u8((uint8x16_t)v11, 4uLL);
    int8x16_t v16 = vandq_s8(v11, v6);
    int8x16_t v17 = vzip1q_s8(v14, v13);
    int8x16_t v18 = vzip2q_s8(v14, v13);
    int8x16_t v19 = vzip1q_s8(v16, v15);
    int8x16_t v20 = vzip2q_s8(v16, v15);
    int8x16_t v21 = vaddq_s8(v17, v17);
    int8x16_t v22 = vaddq_s8(v18, v18);
    int8x16_t v23 = vaddq_s8(v19, v19);
    int8x16_t v24 = vaddq_s8(v20, v20);
    *int16x8_t result = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v21, v21), v8));
    result[1] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v21, v21), v8));
    result[2] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v22, v22), v8));
    result[3] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v22, v22), v8));
    int16x8_t result = (int8x16_t *)((char *)result + a2);
    int8x16_t *v9 = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v23, v23), v8));
    v9[1] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v23, v23), v8));
    v9[2] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip1q_s8(v24, v24), v8));
    v9[3] = vqtbl1q_s8(v7, (int8x16_t)vaddq_s16((int16x8_t)vzip2q_s8(v24, v24), v8));
    int16x8_t v9 = (int8x16_t *)((char *)v9 + a2);
  }
  while (!((a6 < 0) ^ v12 | (a6 == 0)));
  return result;
}

uint64_t sub_224AAC6D4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, unsigned int a7, unsigned int a8)
{
  return ((uint64_t (*)(__n128, __n128))((char *)&qword_224AAC8E0
                                                 - *((unsigned __int16 *)&qword_224AAC8E0 + __clz(a4) - 26)))((__n128)vrshrq_n_u16((uint16x8_t)vdupq_n_s16(a8), 1uLL), (__n128)vdupq_n_s16(a7));
}

void *sub_224AAC704(void *result, uint64_t a2, int16x8_t a3, int16x8_t a4, uint64_t a5, uint64_t a6, int a7, int16x8_t *a8, void *a9)
{
  do
  {
    int16x8_t v11 = *a8;
    int16x8_t v12 = a8[1];
    a8 += 2;
    BOOL v13 = __OFSUB__(a7, 4);
    a7 -= 4;
    int32x4_t v14 = vmull_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)a4.i8);
    int32x4_t v15 = vmull_high_s16(v11, a4);
    int32x4_t v16 = vmull_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)a4.i8);
    int32x4_t v17 = vmull_high_s16(v12, a4);
    int16x8_t v18 = vminq_s16(vmaxq_s16(vaddq_s16(vrshrn_high_n_s32(vrshrn_n_s32(vaddq_s32(v14, vcltzq_s32(v14)), 6uLL), vaddq_s32(v15, vcltzq_s32(v15)), 6uLL), a3), v9), v10);
    int16x8_t v19 = vminq_s16(vmaxq_s16(vaddq_s16(vrshrn_high_n_s32(vrshrn_n_s32(vaddq_s32(v16, vcltzq_s32(v16)), 6uLL), vaddq_s32(v17, vcltzq_s32(v17)), 6uLL), a3), v9), v10);
    *int16x8_t result = v18.i64[0];
    int8x16_t v20 = (void *)((char *)result + a2);
    *a9 = v18.i64[1];
    int8x16_t v21 = (void *)((char *)a9 + a2);
    *int8x16_t v20 = v19.i64[0];
    int16x8_t result = (void *)((char *)v20 + a2);
    *int8x16_t v21 = v19.i64[1];
    a9 = (void *)((char *)v21 + a2);
  }
  while (!((a7 < 0) ^ v13 | (a7 == 0)));
  return result;
}

int16x8_t *sub_224AAC77C(int16x8_t *result, uint64_t a2, int16x8_t a3, int16x8_t a4, uint64_t a5, uint64_t a6, int a7, int16x8_t *a8, int16x8_t *a9)
{
  do
  {
    int16x8_t v11 = *a8;
    int16x8_t v12 = a8[1];
    a8 += 2;
    BOOL v13 = __OFSUB__(a7, 2);
    a7 -= 2;
    int32x4_t v14 = vmull_s16(*(int16x4_t *)v11.i8, *(int16x4_t *)a4.i8);
    int32x4_t v15 = vmull_high_s16(v11, a4);
    int32x4_t v16 = vmull_s16(*(int16x4_t *)v12.i8, *(int16x4_t *)a4.i8);
    int32x4_t v17 = vmull_high_s16(v12, a4);
    *int16x8_t result = vminq_s16(vmaxq_s16(vaddq_s16(vrshrn_high_n_s32(vrshrn_n_s32(vaddq_s32(v14, vcltzq_s32(v14)), 6uLL), vaddq_s32(v15, vcltzq_s32(v15)), 6uLL), a3), v9), v10);
    int16x8_t result = (int16x8_t *)((char *)result + a2);
    *a9 = vminq_s16(vmaxq_s16(vaddq_s16(vrshrn_high_n_s32(vrshrn_n_s32(vaddq_s32(v16, vcltzq_s32(v16)), 6uLL), vaddq_s32(v17, vcltzq_s32(v17)), 6uLL), a3), v9), v10);
    a9 = (int16x8_t *)((char *)a9 + a2);
  }
  while (!((a7 < 0) ^ v13 | (a7 == 0)));
  return result;
}

int16x8_t *sub_224AAC7EC(int16x8_t *result, uint64_t a2, int16x8_t a3, int16x8_t a4, uint64_t a5, int a6, int a7, int16x8_t *a8, int16x8_t *a9)
{
  int16x8_t v11 = (int16x8_t *)((char *)a8 + 2 * a6);
  uint64_t v12 = a2 - 2 * a6;
  unsigned int v13 = a6;
  do
  {
    do
    {
      int16x8_t v14 = *a8;
      int16x8_t v15 = a8[1];
      a8 += 2;
      int16x8_t v16 = *v11;
      int16x8_t v17 = v11[1];
      v11 += 2;
      BOOL v18 = __OFSUB__(a6, 16);
      a6 -= 16;
      int32x4_t v19 = vmull_s16(*(int16x4_t *)v14.i8, *(int16x4_t *)a4.i8);
      int32x4_t v20 = vmull_high_s16(v14, a4);
      int32x4_t v21 = vmull_s16(*(int16x4_t *)v15.i8, *(int16x4_t *)a4.i8);
      int32x4_t v22 = vmull_high_s16(v15, a4);
      int32x4_t v23 = vmull_s16(*(int16x4_t *)v16.i8, *(int16x4_t *)a4.i8);
      int32x4_t v24 = vmull_high_s16(v16, a4);
      int32x4_t v25 = vmull_s16(*(int16x4_t *)v17.i8, *(int16x4_t *)a4.i8);
      int32x4_t v26 = vmull_high_s16(v17, a4);
      *int16x8_t result = vminq_s16(vmaxq_s16(vaddq_s16(vrshrn_high_n_s32(vrshrn_n_s32(vaddq_s32(v19, vcltzq_s32(v19)), 6uLL), vaddq_s32(v20, vcltzq_s32(v20)), 6uLL), a3), v9), v10);
      result[1] = vminq_s16(vmaxq_s16(vaddq_s16(vrshrn_high_n_s32(vrshrn_n_s32(vaddq_s32(v21, vcltzq_s32(v21)), 6uLL), vaddq_s32(v22, vcltzq_s32(v22)), 6uLL), a3), v9), v10);
      result += 2;
      *a9 = vminq_s16(vmaxq_s16(vaddq_s16(vrshrn_high_n_s32(vrshrn_n_s32(vaddq_s32(v23, vcltzq_s32(v23)), 6uLL), vaddq_s32(v24, vcltzq_s32(v24)), 6uLL), a3), v9), v10);
      a9[1] = vminq_s16(vmaxq_s16(vaddq_s16(vrshrn_high_n_s32(vrshrn_n_s32(vaddq_s32(v25, vcltzq_s32(v25)), 6uLL), vaddq_s32(v26, vcltzq_s32(v26)), 6uLL), a3), v9), v10);
      a9 += 2;
    }
    while (!((a6 < 0) ^ v18 | (a6 == 0)));
    BOOL v18 = __OFSUB__(a7, 2);
    a7 -= 2;
    a8 = (int16x8_t *)((char *)a8 + 2 * v13);
    int16x8_t v11 = (int16x8_t *)((char *)v11 + 2 * v13);
    int16x8_t result = (int16x8_t *)((char *)result + v12);
    a9 = (int16x8_t *)((char *)a9 + v12);
    a6 = v13;
  }
  while (!((a7 < 0) ^ v18 | (a7 == 0)));
  return result;
}

uint64_t sub_224AAC8E8(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return ((uint64_t (*)(__n128, __n128))((char *)a8l - (unsigned __int16)a8l[__clz(a5) - 26]))(a1, (__n128)vdupq_n_s16(a8));
}

void *sub_224AAC918(void *a1, uint64_t a2, int16x4_t *a3, uint64_t a4, int a5, int16x8_t *a6, void *a7, double a8, int16x8_t a9)
{
  uint16x4_t v9 = (uint16x4_t)*a3;
  v9.i16[0] = vaddv_s16(*a3);
  return sub_224AAC704(a1, a2, vdupq_lane_s16((int16x4_t)vrshr_n_u16(v9, 2uLL), 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

int16x8_t *sub_224AAC92C(int16x8_t *a1, uint64_t a2, int16x8_t *a3, uint64_t a4, int a5, int16x8_t *a6, int16x8_t *a7, double a8, int16x8_t a9)
{
  int16x8_t v9 = *a3;
  v9.i16[0] = vaddvq_s16(*a3);
  return sub_224AAC77C(a1, a2, vdupq_lane_s16((int16x4_t)vrshr_n_u16(*(uint16x4_t *)v9.i8, 3uLL), 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

int16x8_t *sub_224AAC940(int16x8_t *a1, uint64_t a2, int16x8_t *a3, int a4, int a5, int16x8_t *a6, int16x8_t *a7, double a8, int16x8_t a9)
{
  int16x8_t v9 = vpaddq_s16(*a3, a3[1]);
  v9.i16[0] = vaddvq_s16(v9);
  return sub_224AAC7EC(a1, a2, vdupq_lane_s16((int16x4_t)vrshr_n_u16(*(uint16x4_t *)v9.i8, 4uLL), 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

int16x8_t *sub_224AAC958(int16x8_t *a1, uint64_t a2, int16x8_t *a3, int a4, int a5, int16x8_t *a6, int16x8_t *a7, double a8, int16x8_t a9)
{
  int32x4_t v9 = (int32x4_t)vpaddq_s16(vpaddq_s16(*a3, a3[1]), vpaddq_s16(a3[2], a3[3]));
  v9.i32[0] = vaddlvq_u16((uint16x8_t)v9);
  return sub_224AAC7EC(a1, a2, vdupq_lane_s16(vrshrn_n_s32(v9, 5uLL), 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

uint64_t sub_224AAC980(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, unsigned int a8)
{
  return ((uint64_t (*)(__n128, __n128))((char *)a8l_0 - (unsigned __int16)a8l_0[__clz(a6) - 26]))(a1, (__n128)vdupq_n_s16(a8));
}

uint64_t sub_224AAC9C4(uint64_t a1, uint64_t a2, int16x4_t *a3)
{
  uint16x4_t v4 = (uint16x4_t)*a3;
  v4.i16[0] = vaddv_s16(*a3);
  return v3((__n128)vdupq_lane_s16((int16x4_t)vrshr_n_u16(v4, 2uLL), 0));
}

uint64_t sub_224AAC9D8(uint64_t a1, uint64_t a2, int16x8_t *a3)
{
  int16x8_t v4 = *a3;
  v4.i16[0] = vaddvq_s16(*a3);
  return v3((__n128)vdupq_lane_s16((int16x4_t)vrshr_n_u16(*(uint16x4_t *)v4.i8, 3uLL), 0));
}

uint64_t sub_224AAC9EC(uint64_t a1, uint64_t a2, int16x8_t *a3)
{
  int16x8_t v4 = vpaddq_s16(*a3, a3[1]);
  v4.i16[0] = vaddvq_s16(v4);
  return v3((__n128)vdupq_lane_s16((int16x4_t)vrshr_n_u16(*(uint16x4_t *)v4.i8, 4uLL), 0));
}

uint64_t sub_224AACA04(uint64_t a1, uint64_t a2, int16x8_t *a3)
{
  int32x4_t v4 = (int32x4_t)vpaddq_s16(vpaddq_s16(*a3, a3[1]), vpaddq_s16(a3[2], a3[3]));
  v4.i32[0] = vaddlvq_u16((uint16x8_t)v4);
  return v3((__n128)vdupq_lane_s16(vrshrn_n_s32(v4, 5uLL), 0));
}

uint64_t sub_224AACA2C(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, unsigned int a8)
{
  return ((uint64_t (*)(__n128, __n128))((char *)qword_224AACBE8
                                                 - *((unsigned __int16 *)&qword_224AACBE8[-6] + __clz(a6) - 2)))(a1, (__n128)vdupq_n_s16(a8));
}

uint64_t sub_224AACA88(uint64_t a1, uint64_t a2, uint16x4_t *a3)
{
  return v3(a1, a2, (__int16 *)&a3[1] + 1, COERCE_FLOAT(vaddlv_u16(*a3)));
}

void *sub_224AACA98(void *a1, uint64_t a2, uint16x4_t *a3, uint64_t a4, int a5, int16x8_t *a6, void *a7, int32x2_t a8, int16x8_t a9)
{
  int32x2_t v11 = (int32x2_t)*a3;
  v11.i32[0] = vaddlv_u16(*a3);
  int16x4_t v12 = (int16x4_t)vshl_u32((uint32x2_t)vadd_s32(vadd_s32(a8, v9), v11), v10);
  if (a5 != 4)
  {
    if (a5 == 16) {
      unsigned int v13 = 26215;
    }
    else {
      unsigned int v13 = 43691;
    }
    int16x4_t v12 = (int16x4_t)vshr_n_u32((uint32x2_t)vmul_s32((int32x2_t)v12, vdup_n_s32(v13)), 0x11uLL);
  }
  return sub_224AAC704(a1, a2, vdupq_lane_s16(v12, 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

uint64_t sub_224AACAD8(uint64_t a1, uint64_t a2, uint16x8_t *a3)
{
  return v3(a1, a2, &a3[1].i16[1], COERCE_FLOAT(vaddlvq_u16(*a3)));
}

int16x8_t *sub_224AACAE8(int16x8_t *a1, uint64_t a2, uint16x8_t *a3, uint64_t a4, int a5, int16x8_t *a6, int16x8_t *a7, int32x2_t a8, int16x8_t a9)
{
  uint16x8_t v11 = *a3;
  v11.i32[0] = vaddlvq_u16(*a3);
  int16x4_t v12 = (int16x4_t)vshl_u32((uint32x2_t)vadd_s32(vadd_s32(a8, v9), *(int32x2_t *)v11.i8), v10);
  if (a5 != 8)
  {
    if (a5 == 32) {
      unsigned int v13 = 26215;
    }
    else {
      unsigned int v13 = 43691;
    }
    int16x4_t v12 = (int16x4_t)vshr_n_u32((uint32x2_t)vmul_s32((int32x2_t)v12, vdup_n_s32(v13)), 0x11uLL);
  }
  return sub_224AAC77C(a1, a2, vdupq_lane_s16(v12, 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

uint64_t sub_224AACB28(uint64_t a1, uint64_t a2, int16x8_t *a3)
{
  return v3(a1, a2, &a3[2].i16[1], COERCE_FLOAT(vaddlvq_u16((uint16x8_t)vpaddq_s16(*a3, a3[1]))));
}

int16x8_t *sub_224AACB3C(int16x8_t *a1, uint64_t a2, int16x8_t *a3, int a4, int a5, int16x8_t *a6, int16x8_t *a7, int32x2_t a8, int16x8_t a9)
{
  uint16x8_t v11 = (uint16x8_t)vpaddq_s16(*a3, a3[1]);
  v11.i32[0] = vaddlvq_u16(v11);
  int16x4_t v12 = (int16x4_t)vshl_u32((uint32x2_t)vadd_s32(vadd_s32(a8, v9), *(int32x2_t *)v11.i8), v10);
  if (a5 != 16)
  {
    if ((a5 & 0x38) != 0) {
      unsigned int v13 = 43691;
    }
    else {
      unsigned int v13 = 26215;
    }
    int16x4_t v12 = (int16x4_t)vshr_n_u32((uint32x2_t)vmul_s32((int32x2_t)v12, vdup_n_s32(v13)), 0x11uLL);
  }
  return sub_224AAC7EC(a1, a2, vdupq_lane_s16(v12, 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

uint64_t sub_224AACB80(uint64_t a1, uint64_t a2, int16x8_t *a3)
{
  return v3(a1, a2, &a3[4].i16[1], COERCE_FLOAT(vaddlvq_u16((uint16x8_t)vpaddq_s16(vpaddq_s16(*a3, a3[1]), vpaddq_s16(a3[2], a3[3])))));
}

int16x8_t *sub_224AACB9C(int16x8_t *a1, uint64_t a2, int16x8_t *a3, int a4, int a5, int16x8_t *a6, int16x8_t *a7, int32x4_t a8, int16x8_t a9)
{
  uint16x8_t v11 = (uint16x8_t)vpaddq_s16(vpaddq_s16(*a3, a3[1]), vpaddq_s16(a3[2], a3[3]));
  v11.i32[0] = vaddlvq_u16(v11);
  int16x4_t v12 = (int16x4_t)vshl_u32((uint32x2_t)vadd_s32((int32x2_t)*(_OWORD *)&vaddq_s32(a8, v9), *(int32x2_t *)v11.i8), v10);
  if (a5 != 32)
  {
    if (a5 == 8) {
      unsigned int v13 = 26215;
    }
    else {
      unsigned int v13 = 43691;
    }
    int16x4_t v12 = (int16x4_t)vshr_n_u32((uint32x2_t)vmul_s32((int32x2_t)v12, vdup_n_s32(v13)), 0x11uLL);
  }
  return sub_224AAC7EC(a1, a2, vdupq_lane_s16(v12, 0), a9, (uint64_t)a3, a4, a5, a6, a7);
}

uint64_t sub_224AACBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return ((uint64_t (*)(void))((char *)&dword_224AAD034 - *((unsigned __int16 *)&dword_224AAD034 + __clz(a6) - 27)))();
}

int16x8_t *sub_224AACC4C@<X0>(int64x2_t *a1@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W6>, int a6@<W8>)
{
  do
  {
    int16x8_t v13 = *a2;
    int16x4_t v12 = (int16x8_t *)((char *)a2 + a3);
    int16x8_t v15 = *v6;
    int16x8_t v14 = (int16x8_t *)((char *)v6 + a3);
    int16x8_t v16 = *v12;
    a2 = (int16x8_t *)((char *)v12 + a3);
    int16x8_t v17 = *v14;
    int8x16_t v6 = (int16x8_t *)((char *)v14 + a3);
    int64x2_t v18 = (int64x2_t)vshlq_n_s16(vaddq_s16(vpaddq_s16(v13, v16), vpaddq_s16(v15, v17)), 1uLL);
    BOOL v19 = __OFSUB__(a6, 2);
    a6 -= 2;
    *a1++ = v18;
    int32x4_t v7 = (int32x4_t)vaddw_u16((uint32x4_t)v7, *(uint16x4_t *)v18.i8);
    int32x4_t v8 = (int32x4_t)vaddw_high_u16((uint32x4_t)v8, (uint16x8_t)v18);
  }
  while (!((a6 < 0) ^ v19 | (a6 == 0)));
  uint16x8_t v20 = (uint16x8_t)vtrn2q_s64(v18, v18);
  if (a4)
  {
    do
    {
      BOOL v19 = __OFSUB__(a4, 4);
      a4 -= 4;
      *a1 = (int64x2_t)v20;
      a1[1] = (int64x2_t)v20;
      a1 += 2;
      int32x4_t v7 = (int32x4_t)vaddw_u16((uint32x4_t)v7, *(uint16x4_t *)v20.i8);
      int32x4_t v8 = (int32x4_t)vaddw_high_u16((uint32x4_t)v8, v20);
      int32x4_t v9 = (int32x4_t)vaddw_u16((uint32x4_t)v9, *(uint16x4_t *)v20.i8);
      int32x4_t v10 = (int32x4_t)vaddw_high_u16((uint32x4_t)v10, v20);
    }
    while (!((a4 < 0) ^ v19 | (a4 == 0)));
  }
  int32x4_t v21 = vaddq_s32(vaddq_s32(v7, v8), vaddq_s32(v9, v10));
  v21.i32[0] = vaddvq_s32(v21);
  int16x8_t result = (int16x8_t *)((char *)a1 - 8 * a5);
  int16x8_t v23 = vdupq_lane_s16((int16x4_t)vrshl_u32(*(uint32x2_t *)v21.i8, v11), 0);
  do
  {
    BOOL v19 = __OFSUB__(a5, 4);
    a5 -= 4;
    int16x8_t v24 = vsubq_s16(result[1], v23);
    *int16x8_t result = vsubq_s16(*result, v23);
    result[1] = v24;
    result += 2;
  }
  while (!((a5 < 0) ^ v19 | (a5 == 0)));
  return result;
}

void sub_224AACCE0(uint16x8_t *a1@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W8>)
{
  if (a4)
  {
    do
    {
      int16x8_t v26 = *a2;
      int32x4_t v25 = (int16x8_t *)((char *)a2 + a3);
      int16x8_t v28 = *v6;
      int16x8_t v27 = (int16x8_t *)((char *)v6 + a3);
      int16x8_t v29 = *v25;
      a2 = (int16x8_t *)((char *)v25 + a3);
      int16x8_t v31 = *v27;
      int8x16_t v6 = (int16x8_t *)((char *)v27 + a3);
      int16x8_t v30 = vshlq_n_s16(vaddq_s16(vpaddq_s16(v26, v29), vpaddq_s16(v28, v31)), 1uLL);
      *(int16x4_t *)v28.i8 = vdup_lane_s16(*(int16x4_t *)v30.i8, 3);
      *(int16x4_t *)v31.i8 = vdup_laneq_s16(v30, 7);
      int64x2_t v32 = vtrn2q_s64((int64x2_t)v30, (int64x2_t)v30);
      BOOL v23 = __OFSUB__(a6, 2);
      a6 -= 2;
      a1->i64[0] = v30.i64[0];
      a1->i64[1] = v28.i64[0];
      a1[1].i64[0] = v32.i64[0];
      a1[1].i64[1] = v31.i64[0];
      a1 += 2;
      uint32x4_t v7 = vaddw_u16(v7, *(uint16x4_t *)v30.i8);
      uint32x4_t v8 = vaddw_u16(v8, *(uint16x4_t *)v28.i8);
      uint32x4_t v9 = vaddw_u16(v9, *(uint16x4_t *)v32.i8);
      uint32x4_t v10 = vaddw_u16(v10, *(uint16x4_t *)v31.i8);
    }
    while (!((a6 < 0) ^ v23 | (a6 == 0)));
    uint16x8_t v24 = (uint16x8_t)vtrn1q_s64(v32, (int64x2_t)v31);
    uint16x8_t v22 = v24;
  }
  else
  {
    do
    {
      int16x8_t v12 = *a2;
      int16x8_t v13 = a2[1];
      uint32x2_t v11 = (int16x8_t *)((char *)a2 + a3);
      int16x8_t v15 = *v6;
      int16x8_t v16 = v6[1];
      int16x8_t v14 = (int16x8_t *)((char *)v6 + a3);
      int16x8_t v17 = *v11;
      int16x8_t v18 = v11[1];
      a2 = (int16x8_t *)((char *)v11 + a3);
      int16x8_t v19 = *v14;
      int16x8_t v20 = v14[1];
      int8x16_t v6 = (int16x8_t *)((char *)v14 + a3);
      uint16x8_t v21 = (uint16x8_t)vshlq_n_s16(vaddq_s16(vpaddq_s16(v12, v13), vpaddq_s16(v15, v16)), 1uLL);
      uint16x8_t v22 = (uint16x8_t)vshlq_n_s16(vaddq_s16(vpaddq_s16(v17, v18), vpaddq_s16(v19, v20)), 1uLL);
      BOOL v23 = __OFSUB__(a6, 2);
      a6 -= 2;
      *a1 = v21;
      a1[1] = v22;
      a1 += 2;
      uint32x4_t v7 = vaddw_u16(v7, *(uint16x4_t *)v21.i8);
      uint32x4_t v8 = vaddw_high_u16(v8, v21);
      uint32x4_t v9 = vaddw_u16(v9, *(uint16x4_t *)v22.i8);
      uint32x4_t v10 = vaddw_high_u16(v10, v22);
    }
    while (!((a6 < 0) ^ v23 | (a6 == 0)));
    uint16x8_t v24 = v22;
  }
  if (a5)
  {
    do
    {
      BOOL v23 = __OFSUB__(a5, 4);
      a5 -= 4;
      *a1 = v24;
      a1[1] = v22;
      int16x8_t v33 = a1 + 2;
      *int16x8_t v33 = v24;
      v33[1] = v22;
      a1 = v33 + 2;
      uint32x4_t v7 = vaddw_u16(vaddw_u16(v7, *(uint16x4_t *)v24.i8), *(uint16x4_t *)v24.i8);
      uint32x4_t v8 = vaddw_high_u16(vaddw_high_u16(v8, v24), v24);
      uint32x4_t v9 = vaddw_u16(vaddw_u16(v9, *(uint16x4_t *)v22.i8), *(uint16x4_t *)v22.i8);
      uint32x4_t v10 = vaddw_high_u16(vaddw_high_u16(v10, v22), v22);
    }
    while (!((a5 < 0) ^ v23 | (a5 == 0)));
  }
  JUMPOUT(0x224AACCA8);
}

uint64_t sub_224AACDC4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&dword_224AAD03C - *((unsigned __int16 *)&dword_224AAD03C + a4)))();
}

void sub_224AACDD4(uint16x8_t *a1@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  do
  {
    int16x8_t v11 = *a2;
    int16x8_t v12 = a2[1];
    int16x8_t v13 = a2[2];
    int16x8_t v14 = a2[3];
    uint32x4_t v10 = (int16x8_t *)((char *)a2 + a3);
    int16x8_t v16 = *v5;
    int16x8_t v17 = v5[1];
    int16x8_t v18 = v5[2];
    int16x8_t v19 = v5[3];
    int16x8_t v15 = (int16x8_t *)((char *)v5 + a3);
    int16x8_t v20 = *v10;
    int16x8_t v21 = v10[1];
    int16x8_t v22 = v10[2];
    int16x8_t v23 = v10[3];
    a2 = (int16x8_t *)((char *)v10 + a3);
    int16x8_t v24 = *v15;
    int16x8_t v25 = v15[1];
    int16x8_t v26 = v15[2];
    int16x8_t v27 = v15[3];
    long long v5 = (int16x8_t *)((char *)v15 + a3);
    uint16x8_t v28 = (uint16x8_t)vshlq_n_s16(vaddq_s16(vpaddq_s16(v11, v12), vpaddq_s16(v16, v17)), 1uLL);
    uint16x8_t v29 = (uint16x8_t)vshlq_n_s16(vaddq_s16(vpaddq_s16(v13, v14), vpaddq_s16(v18, v19)), 1uLL);
    uint16x8_t v30 = (uint16x8_t)vshlq_n_s16(vaddq_s16(vpaddq_s16(v20, v21), vpaddq_s16(v24, v25)), 1uLL);
    uint16x8_t v31 = (uint16x8_t)vshlq_n_s16(vaddq_s16(vpaddq_s16(v22, v23), vpaddq_s16(v26, v27)), 1uLL);
    BOOL v32 = __OFSUB__(a5, 2);
    a5 -= 2;
    *a1 = v28;
    a1[1] = v29;
    a1[2] = v30;
    a1[3] = v31;
    a1 += 4;
    uint32x4_t v6 = vaddw_u16(vaddw_u16(v6, *(uint16x4_t *)v28.i8), *(uint16x4_t *)v30.i8);
    uint32x4_t v7 = vaddw_high_u16(vaddw_high_u16(v7, v28), v30);
    uint32x4_t v8 = vaddw_u16(vaddw_u16(v8, *(uint16x4_t *)v29.i8), *(uint16x4_t *)v31.i8);
    uint32x4_t v9 = vaddw_high_u16(vaddw_high_u16(v9, v29), v31);
  }
  while (!((a5 < 0) ^ v32 | (a5 == 0)));
  if (a4)
  {
    do
    {
      BOOL v32 = __OFSUB__(a4, 4);
      a4 -= 4;
      *a1 = v30;
      a1[1] = v31;
      a1[2] = v30;
      a1[3] = v31;
      int16x8_t v33 = a1 + 4;
      *int16x8_t v33 = v30;
      v33[1] = v31;
      v33[2] = v30;
      v33[3] = v31;
      a1 = v33 + 4;
      uint32x4_t v6 = vaddw_u16(vaddw_u16(vaddw_u16(vaddw_u16(v6, *(uint16x4_t *)v30.i8), *(uint16x4_t *)v30.i8), *(uint16x4_t *)v30.i8), *(uint16x4_t *)v30.i8);
      uint32x4_t v7 = vaddw_high_u16(vaddw_high_u16(vaddw_high_u16(vaddw_high_u16(v7, v30), v30), v30), v30);
      uint32x4_t v8 = vaddw_u16(vaddw_u16(vaddw_u16(vaddw_u16(v8, *(uint16x4_t *)v31.i8), *(uint16x4_t *)v31.i8), *(uint16x4_t *)v31.i8), *(uint16x4_t *)v31.i8);
      uint32x4_t v9 = vaddw_high_u16(vaddw_high_u16(vaddw_high_u16(vaddw_high_u16(v9, v31), v31), v31), v31);
    }
    while (!((a4 < 0) ^ v32 | (a4 == 0)));
  }
  JUMPOUT(0x224AACCA8);
}

uint64_t sub_224AAD044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return ((uint64_t (*)(void))((char *)&dword_224AAD364 - *((unsigned __int16 *)&dword_224AAD364 + __clz(a6) - 27)))();
}

void sub_224AAD098(uint16x8_t *a1@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  do
  {
    int16x8_t v10 = *a2;
    uint32x4_t v9 = (int16x8_t *)((char *)a2 + a3);
    int16x8_t v12 = *v4;
    int16x8_t v11 = (int16x8_t *)((char *)v4 + a3);
    int16x8_t v13 = *v9;
    a2 = (int16x8_t *)((char *)v9 + a3);
    int16x8_t v14 = *v11;
    int32x4_t v4 = (int16x8_t *)((char *)v11 + a3);
    uint16x8_t v15 = (uint16x8_t)vshlq_n_s16(vpaddq_s16(v10, v12), 2uLL);
    uint16x8_t v16 = (uint16x8_t)vshlq_n_s16(vpaddq_s16(v13, v14), 2uLL);
    BOOL v17 = __OFSUB__(a4, 4);
    a4 -= 4;
    *a1 = v15;
    a1[1] = v16;
    a1 += 2;
    uint32x4_t v5 = vaddw_u16(v5, *(uint16x4_t *)v15.i8);
    uint32x4_t v6 = vaddw_high_u16(v6, v15);
    uint32x4_t v7 = vaddw_u16(v7, *(uint16x4_t *)v16.i8);
    uint32x4_t v8 = vaddw_high_u16(v8, v16);
  }
  while (!((a4 < 0) ^ v17 | (a4 == 0)));
  JUMPOUT(0x224AACC88);
}

void sub_224AAD0E0(uint16x8_t *a1@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W8>, int64x2_t a6@<Q4>, int64x2_t a7@<Q6>)
{
  if (a4)
  {
    do
    {
      int16x8_t v28 = *a2;
      int16x8_t v27 = (int16x8_t *)((char *)a2 + a3);
      int16x8_t v30 = *v7;
      uint16x8_t v29 = (int16x8_t *)((char *)v7 + a3);
      int16x8_t v31 = *v27;
      a2 = (int16x8_t *)((char *)v27 + a3);
      int16x8_t v32 = *v29;
      uint32x4_t v7 = (int16x8_t *)((char *)v29 + a3);
      int16x8_t v33 = vshlq_n_s16(vpaddq_s16(v28, v30), 2uLL);
      int16x8_t v34 = vshlq_n_s16(vpaddq_s16(v31, v32), 2uLL);
      *(int16x4_t *)a6.i8 = vdup_lane_s16(*(int16x4_t *)v33.i8, 3);
      *(int16x4_t *)a7.i8 = vdup_lane_s16(*(int16x4_t *)v34.i8, 3);
      uint16x8_t v35 = (uint16x8_t)vtrn2q_s64((int64x2_t)v33, (int64x2_t)vdupq_laneq_s16(v33, 7));
      uint16x8_t v36 = (uint16x8_t)vtrn1q_s64((int64x2_t)v33, a6);
      uint16x8_t v37 = (uint16x8_t)vtrn2q_s64((int64x2_t)v34, (int64x2_t)vdupq_laneq_s16(v34, 7));
      uint16x8_t v38 = (uint16x8_t)vtrn1q_s64((int64x2_t)v34, a7);
      BOOL v26 = __OFSUB__(a5, 4);
      a5 -= 4;
      *a1 = v36;
      a1[1] = v35;
      a1[2] = v38;
      a1[3] = v37;
      a1 += 4;
      uint32x4_t v8 = vaddw_u16(vaddw_u16(v8, *(uint16x4_t *)v36.i8), *(uint16x4_t *)v38.i8);
      uint32x4_t v9 = vaddw_high_u16(vaddw_high_u16(v9, v36), v38);
      uint32x4_t v10 = vaddw_u16(vaddw_u16(v10, *(uint16x4_t *)v35.i8), *(uint16x4_t *)v37.i8);
      uint32x4_t v11 = vaddw_high_u16(vaddw_high_u16(v11, v35), v37);
    }
    while (!((a5 < 0) ^ v26 | (a5 == 0)));
  }
  else
  {
    do
    {
      int16x8_t v13 = *a2;
      int16x8_t v14 = a2[1];
      int16x8_t v12 = (int16x8_t *)((char *)a2 + a3);
      int16x8_t v16 = *v7;
      int16x8_t v17 = v7[1];
      uint16x8_t v15 = (int16x8_t *)((char *)v7 + a3);
      int16x8_t v18 = *v12;
      int16x8_t v19 = v12[1];
      a2 = (int16x8_t *)((char *)v12 + a3);
      int16x8_t v20 = *v15;
      int16x8_t v21 = v15[1];
      uint32x4_t v7 = (int16x8_t *)((char *)v15 + a3);
      uint16x8_t v22 = (uint16x8_t)vshlq_n_s16(vpaddq_s16(v13, v14), 2uLL);
      uint16x8_t v23 = (uint16x8_t)vshlq_n_s16(vpaddq_s16(v16, v17), 2uLL);
      uint16x8_t v24 = (uint16x8_t)vshlq_n_s16(vpaddq_s16(v18, v19), 2uLL);
      uint16x8_t v25 = (uint16x8_t)vshlq_n_s16(vpaddq_s16(v20, v21), 2uLL);
      BOOL v26 = __OFSUB__(a5, 4);
      a5 -= 4;
      *a1 = v22;
      a1[1] = v23;
      a1[2] = v24;
      a1[3] = v25;
      a1 += 4;
      uint32x4_t v8 = vaddw_u16(vaddw_u16(v8, *(uint16x4_t *)v22.i8), *(uint16x4_t *)v24.i8);
      uint32x4_t v9 = vaddw_high_u16(vaddw_high_u16(v9, v22), v24);
      uint32x4_t v10 = vaddw_u16(vaddw_u16(v10, *(uint16x4_t *)v23.i8), *(uint16x4_t *)v25.i8);
      uint32x4_t v11 = vaddw_high_u16(vaddw_high_u16(v11, v23), v25);
    }
    while (!((a5 < 0) ^ v26 | (a5 == 0)));
  }
  JUMPOUT(0x224AACD88);
}

uint64_t sub_224AAD1C4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(void))((char *)&dword_224AAD36C - *((unsigned __int16 *)&dword_224AAD36C + a4)))();
}

void sub_224AAD1D4(uint16x8_t *a1@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  do
  {
    int16x8_t v9 = *a2;
    int16x8_t v10 = a2[1];
    int16x8_t v11 = a2[2];
    int16x8_t v12 = a2[3];
    a2 = (int16x8_t *)((char *)a2 + a3);
    int16x8_t v13 = *v4;
    int16x8_t v14 = v4[1];
    int16x8_t v15 = v4[2];
    int16x8_t v16 = v4[3];
    int32x4_t v4 = (int16x8_t *)((char *)v4 + a3);
    uint16x8_t v17 = (uint16x8_t)vshlq_n_s16(vpaddq_s16(v9, v10), 2uLL);
    uint16x8_t v18 = (uint16x8_t)vshlq_n_s16(vpaddq_s16(v11, v12), 2uLL);
    uint16x8_t v19 = (uint16x8_t)vshlq_n_s16(vpaddq_s16(v13, v14), 2uLL);
    uint16x8_t v20 = (uint16x8_t)vshlq_n_s16(vpaddq_s16(v15, v16), 2uLL);
    BOOL v21 = __OFSUB__(a4, 2);
    a4 -= 2;
    *a1 = v17;
    a1[1] = v18;
    a1[2] = v19;
    a1[3] = v20;
    a1 += 4;
    uint32x4_t v5 = vaddw_u16(vaddw_u16(v5, *(uint16x4_t *)v17.i8), *(uint16x4_t *)v19.i8);
    uint32x4_t v6 = vaddw_high_u16(vaddw_high_u16(v6, v17), v19);
    uint32x4_t v7 = vaddw_u16(vaddw_u16(v7, *(uint16x4_t *)v18.i8), *(uint16x4_t *)v20.i8);
    uint32x4_t v8 = vaddw_high_u16(vaddw_high_u16(v8, v18), v20);
  }
  while (!((a4 < 0) ^ v21 | (a4 == 0)));
  JUMPOUT(0x224AACFD8);
}

void sub_224AAD234(uint64_t a1@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>, __n128 a5@<Q3>)
{
  do
  {
    int16x8_t v10 = a2[2];
    int16x8_t v11 = *a2;
    int16x8_t v12 = a2[1];
    a2 = (int16x8_t *)((char *)a2 + a3);
    int16x8_t v13 = v5[2];
    int16x8_t v14 = *v5;
    int16x8_t v15 = v5[1];
    uint32x4_t v5 = (int16x8_t *)((char *)v5 + a3);
    int16x8_t v16 = vpaddq_s16(v11, v12);
    int16x8_t v17 = vpaddq_s16(v14, v15);
    *(int16x4_t *)v12.i8 = vshl_n_s16((int16x4_t)*(_OWORD *)&vpaddq_s16(v10, v10), 2uLL);
    uint16x8_t v18 = (uint16x8_t)vshlq_n_s16(v16, 2uLL);
    a5.n128_u64[0] = (unint64_t)vshl_n_s16((int16x4_t)*(_OWORD *)&vpaddq_s16(v13, v13), 2uLL);
    uint16x8_t v19 = (uint16x8_t)vshlq_n_s16(v17, 2uLL);
    *(int16x4_t *)v17.i8 = vdup_lane_s16(*(int16x4_t *)v12.i8, 3);
    *(int16x4_t *)v15.i8 = vdup_lane_s16((int16x4_t)a5.n128_u64[0], 3);
    uint16x8_t v20 = (uint16x8_t)vtrn1q_s64((int64x2_t)v12, (int64x2_t)v17);
    a5 = (__n128)vtrn1q_s64((int64x2_t)a5, (int64x2_t)v15);
    BOOL v21 = __OFSUB__(a4, 2);
    a4 -= 2;
    *(uint16x8_t *)a1 = v18;
    *(uint16x8_t *)(a1 + 16) = v20;
    *(uint16x8_t *)(a1 + 32) = v19;
    *(__n128 *)(a1 + 48) = a5;
    a1 += 64;
    uint32x4_t v6 = vaddw_u16(vaddw_u16(v6, *(uint16x4_t *)v18.i8), *(uint16x4_t *)v19.i8);
    uint32x4_t v7 = vaddw_high_u16(vaddw_high_u16(v7, v18), v19);
    uint32x4_t v8 = vaddw_u16(vaddw_u16(v8, *(uint16x4_t *)v20.i8), (uint16x4_t)a5.n128_u64[0]);
    uint32x4_t v9 = vaddw_high_u16(vaddw_high_u16(v9, v20), (uint16x8_t)a5);
  }
  while (!((a4 < 0) ^ v21 | (a4 == 0)));
  JUMPOUT(0x224AACFD8);
}

void sub_224AAD2AC(int16x8_t *a1@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  do
  {
    int16x8_t v9 = *a2;
    int16x8_t v10 = a2[1];
    a2 = (int16x8_t *)((char *)a2 + a3);
    int16x8_t v11 = *v4;
    int16x8_t v12 = v4[1];
    int32x4_t v4 = (int16x8_t *)((char *)v4 + a3);
    int16x8_t v13 = vshlq_n_s16(vpaddq_s16(v9, v10), 2uLL);
    int16x8_t v14 = vshlq_n_s16(vpaddq_s16(v11, v12), 2uLL);
    uint16x8_t v15 = (uint16x8_t)vdupq_laneq_s16(v13, 7);
    uint16x8_t v16 = (uint16x8_t)vdupq_laneq_s16(v14, 7);
    BOOL v17 = __OFSUB__(a4, 2);
    a4 -= 2;
    *a1 = v13;
    a1[1] = (int16x8_t)v15;
    a1[2] = v14;
    a1[3] = (int16x8_t)v16;
    a1 += 4;
    uint32x4_t v5 = vaddw_u16(vaddw_u16(v5, *(uint16x4_t *)v13.i8), *(uint16x4_t *)v14.i8);
    uint32x4_t v6 = vaddw_high_u16(vaddw_high_u16(v6, (uint16x8_t)v13), (uint16x8_t)v14);
    uint32x4_t v7 = vaddw_u16(vaddw_u16(v7, *(uint16x4_t *)v15.i8), *(uint16x4_t *)v16.i8);
    uint32x4_t v8 = vaddw_high_u16(vaddw_high_u16(v8, v15), v16);
  }
  while (!((a4 < 0) ^ v17 | (a4 == 0)));
  JUMPOUT(0x224AACFD8);
}

void sub_224AAD304(uint16x8_t *a1@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  do
  {
    int16x8_t v9 = *a2;
    a2 = (int16x8_t *)((char *)a2 + a3);
    int16x8_t v10 = *v4;
    int32x4_t v4 = (int16x8_t *)((char *)v4 + a3);
    int64x2_t v11 = (int64x2_t)vpaddq_s16(v9, v9);
    int64x2_t v12 = (int64x2_t)vpaddq_s16(v10, v10);
    *(int16x4_t *)v11.i8 = vshl_n_s16(*(int16x4_t *)v11.i8, 2uLL);
    *(int16x4_t *)v12.i8 = vshl_n_s16(*(int16x4_t *)v12.i8, 2uLL);
    int64x2_t v13 = (int64x2_t)vdupq_lane_s16(*(int16x4_t *)v11.i8, 3);
    int64x2_t v14 = (int64x2_t)vdupq_lane_s16(*(int16x4_t *)v12.i8, 3);
    uint16x8_t v15 = (uint16x8_t)vtrn1q_s64(v11, v13);
    uint16x8_t v16 = (uint16x8_t)vtrn1q_s64(v12, v14);
    BOOL v17 = __OFSUB__(a4, 2);
    a4 -= 2;
    *a1 = v15;
    a1[1] = (uint16x8_t)v13;
    a1[2] = v16;
    a1[3] = (uint16x8_t)v14;
    a1 += 4;
    uint32x4_t v5 = vaddw_u16(vaddw_u16(v5, *(uint16x4_t *)v15.i8), *(uint16x4_t *)v16.i8);
    uint32x4_t v6 = vaddw_high_u16(vaddw_high_u16(v6, v15), v16);
    uint32x4_t v7 = vaddw_u16(vaddw_u16(v7, *(uint16x4_t *)v13.i8), *(uint16x4_t *)v14.i8);
    uint32x4_t v8 = vaddw_high_u16(vaddw_high_u16(v8, (uint16x8_t)v13), (uint16x8_t)v14);
  }
  while (!((a4 < 0) ^ v17 | (a4 == 0)));
  JUMPOUT(0x224AACFD8);
}

uint64_t sub_224AAD374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return ((uint64_t (*)(void))((char *)&qword_224AAD680 - *((unsigned __int16 *)&qword_224AAD680 + __clz(a6) - 26)))();
}

void sub_224AAD3C8(uint16x8_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  do
  {
    v10.i64[0] = *a2;
    int16x8_t v9 = (uint64_t *)((char *)a2 + a3);
    v10.i64[1] = *v4;
    int64x2_t v11 = (uint64_t *)((char *)v4 + a3);
    v12.i64[0] = *v9;
    a2 = (uint64_t *)((char *)v9 + a3);
    v12.i64[1] = *v11;
    int32x4_t v4 = (uint64_t *)((char *)v11 + a3);
    uint16x8_t v13 = (uint16x8_t)vshlq_n_s16(v10, 3uLL);
    uint16x8_t v14 = (uint16x8_t)vshlq_n_s16(v12, 3uLL);
    BOOL v15 = __OFSUB__(a4, 4);
    a4 -= 4;
    *a1 = v13;
    a1[1] = v14;
    a1 += 2;
    uint32x4_t v5 = vaddw_u16(v5, *(uint16x4_t *)v13.i8);
    uint32x4_t v6 = vaddw_high_u16(v6, v13);
    uint32x4_t v7 = vaddw_u16(v7, *(uint16x4_t *)v14.i8);
    uint32x4_t v8 = vaddw_high_u16(v8, v14);
  }
  while (!((a4 < 0) ^ v15 | (a4 == 0)));
  JUMPOUT(0x224AACC88);
}

void sub_224AAD408(uint16x8_t *a1@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  do
  {
    int16x8_t v10 = *a2;
    int16x8_t v9 = (int16x8_t *)((char *)a2 + a3);
    int16x8_t v12 = *v4;
    int64x2_t v11 = (int16x8_t *)((char *)v4 + a3);
    int16x8_t v13 = *v9;
    a2 = (int16x8_t *)((char *)v9 + a3);
    uint16x8_t v14 = (uint16x8_t)vshlq_n_s16(v10, 3uLL);
    int16x8_t v15 = *v11;
    int32x4_t v4 = (int16x8_t *)((char *)v11 + a3);
    uint16x8_t v16 = (uint16x8_t)vshlq_n_s16(v12, 3uLL);
    uint16x8_t v17 = (uint16x8_t)vshlq_n_s16(v13, 3uLL);
    uint16x8_t v18 = (uint16x8_t)vshlq_n_s16(v15, 3uLL);
    BOOL v19 = __OFSUB__(a4, 4);
    a4 -= 4;
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v17;
    a1[3] = v18;
    a1 += 4;
    uint32x4_t v5 = vaddw_u16(vaddw_u16(v5, *(uint16x4_t *)v14.i8), *(uint16x4_t *)v17.i8);
    uint32x4_t v6 = vaddw_high_u16(vaddw_high_u16(v6, v14), v17);
    uint32x4_t v7 = vaddw_u16(vaddw_u16(v7, *(uint16x4_t *)v16.i8), *(uint16x4_t *)v18.i8);
    uint32x4_t v8 = vaddw_high_u16(vaddw_high_u16(v8, v16), v18);
  }
  while (!((a4 < 0) ^ v19 | (a4 == 0)));
  JUMPOUT(0x224AACD88);
}

void sub_224AAD460(_OWORD *a1@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W8>)
{
  if (a4)
  {
    do
    {
      int16x8_t v19 = *a2;
      a2 = (int16x8_t *)((char *)a2 + a3);
      int16x8_t v20 = *v5;
      uint32x4_t v5 = (int16x8_t *)((char *)v5 + a3);
      int16x8_t v21 = vshlq_n_s16(v19, 3uLL);
      int16x8_t v22 = vshlq_n_s16(v20, 3uLL);
      uint16x8_t v23 = (uint16x8_t)vdupq_laneq_s16(v21, 7);
      uint16x8_t v24 = (uint16x8_t)vdupq_laneq_s16(v22, 7);
      BOOL v18 = __OFSUB__(a5, 2);
      a5 -= 2;
      *a1 = v21;
      a1[1] = v23;
      a1[2] = v22;
      a1[3] = v24;
      a1 += 4;
      uint32x4_t v6 = vaddw_u16(vaddw_u16(v6, *(uint16x4_t *)v21.i8), *(uint16x4_t *)v22.i8);
      uint32x4_t v7 = vaddw_high_u16(vaddw_high_u16(v7, (uint16x8_t)v21), (uint16x8_t)v22);
      uint32x4_t v8 = vaddw_u16(vaddw_u16(v8, *(uint16x4_t *)v23.i8), *(uint16x4_t *)v24.i8);
      uint32x4_t v9 = vaddw_high_u16(vaddw_high_u16(v9, v23), v24);
    }
    while (!((a5 < 0) ^ v18 | (a5 == 0)));
  }
  else
  {
    do
    {
      int16x8_t v10 = *a2;
      int16x8_t v11 = a2[1];
      a2 = (int16x8_t *)((char *)a2 + a3);
      int16x8_t v12 = *v5;
      int16x8_t v13 = v5[1];
      uint32x4_t v5 = (int16x8_t *)((char *)v5 + a3);
      uint16x8_t v14 = (uint16x8_t)vshlq_n_s16(v10, 3uLL);
      uint16x8_t v15 = (uint16x8_t)vshlq_n_s16(v11, 3uLL);
      uint16x8_t v16 = (uint16x8_t)vshlq_n_s16(v12, 3uLL);
      uint16x8_t v17 = (uint16x8_t)vshlq_n_s16(v13, 3uLL);
      BOOL v18 = __OFSUB__(a5, 2);
      a5 -= 2;
      *a1 = v14;
      a1[1] = v15;
      a1[2] = v16;
      a1[3] = v17;
      a1 += 4;
      uint32x4_t v6 = vaddw_u16(vaddw_u16(v6, *(uint16x4_t *)v14.i8), *(uint16x4_t *)v16.i8);
      uint32x4_t v7 = vaddw_high_u16(vaddw_high_u16(v7, v14), v16);
      uint32x4_t v8 = vaddw_u16(vaddw_u16(v8, *(uint16x4_t *)v15.i8), *(uint16x4_t *)v17.i8);
      uint32x4_t v9 = vaddw_high_u16(vaddw_high_u16(v9, v15), v17);
    }
    while (!((a5 < 0) ^ v18 | (a5 == 0)));
  }
  JUMPOUT(0x224AACFD8);
}

uint64_t sub_224AAD504(uint64_t a1, uint64_t a2, unint64_t a3, unsigned int a4)
{
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t))((char *)&qword_224AAD688
                                                                     - *(unsigned __int16 *)((char *)&qword_224AAD688
                                                                                           + a4)))(a1, a2, a3 >> 1);
}

void sub_224AAD518(uint16x8_t *a1@<X0>, int16x8_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, int a5@<W8>)
{
  do
  {
    int16x8_t v9 = *a2;
    int16x8_t v10 = a2[1];
    int16x8_t v11 = a2[2];
    int16x8_t v12 = a2[3];
    a2 = (int16x8_t *)((char *)a2 + a3);
    uint16x8_t v13 = (uint16x8_t)vshlq_n_s16(v9, 3uLL);
    uint16x8_t v14 = (uint16x8_t)vshlq_n_s16(v10, 3uLL);
    uint16x8_t v15 = (uint16x8_t)vshlq_n_s16(v11, 3uLL);
    uint16x8_t v16 = (uint16x8_t)vshlq_n_s16(v12, 3uLL);
    BOOL v17 = __OFSUB__(a5--, 1);
    *a1 = v13;
    a1[1] = v14;
    a1[2] = v15;
    a1[3] = v16;
    a1 += 4;
    uint32x4_t v5 = vaddw_u16(vaddw_u16(v5, *(uint16x4_t *)v13.i8), *(uint16x4_t *)v15.i8);
    uint32x4_t v6 = vaddw_high_u16(vaddw_high_u16(v6, v13), v15);
    uint32x4_t v7 = vaddw_u16(vaddw_u16(v7, *(uint16x4_t *)v14.i8), *(uint16x4_t *)v16.i8);
    uint32x4_t v8 = vaddw_high_u16(vaddw_high_u16(v8, v14), v16);
  }
  while (!((a5 < 0) ^ v17 | (a5 == 0)));
  if (a4)
  {
    do
    {
      BOOL v17 = __OFSUB__(a4, 2);
      a4 -= 2;
      *a1 = v13;
      a1[1] = v14;
      a1[2] = v15;
      a1[3] = v16;
      BOOL v18 = a1 + 4;
      *BOOL v18 = v13;
      v18[1] = v14;
      v18[2] = v15;
      v18[3] = v16;
      a1 = v18 + 4;
      uint32x4_t v5 = vaddw_u16(vaddw_u16(vaddw_u16(vaddw_u16(v5, *(uint16x4_t *)v13.i8), *(uint16x4_t *)v15.i8), *(uint16x4_t *)v13.i8), *(uint16x4_t *)v15.i8);
      uint32x4_t v6 = vaddw_high_u16(vaddw_high_u16(vaddw_high_u16(vaddw_high_u16(v6, v13), v15), v13), v15);
      uint32x4_t v7 = vaddw_u16(vaddw_u16(vaddw_u16(vaddw_u16(v7, *(uint16x4_t *)v14.i8), *(uint16x4_t *)v16.i8), *(uint16x4_t *)v14.i8), *(uint16x4_t *)v16.i8);
      uint32x4_t v8 = vaddw_high_u16(vaddw_high_u16(vaddw_high_u16(vaddw_high_u16(v8, v14), v16), v14), v16);
    }
    while (!((a4 < 0) ^ v17 | (a4 == 0)));
  }
  JUMPOUT(0x224AACCA8);
}

int32x4_t *sub_224AAD690(int32x4_t **a1, int16x8_t **a2, int32x4_t *a3, int16x8_t *a4, int a5, unsigned int a6, unsigned int a7)
{
  int v7 = a5 + 2;
  unsigned int v8 = __clz(a7);
  int32x4_t v9 = vdupq_n_s32(a6);
  int16x8_t v10 = *a1;
  int16x8_t v11 = a1[1];
  int16x8_t v12 = a1[2];
  uint16x8_t v13 = *a2;
  uint16x8_t v14 = a2[1];
  uint16x8_t v15 = a2[2];
  v16.i64[0] = 0x900000009;
  v16.i64[1] = 0x900000009;
  int16x8_t v17 = vdupq_n_s16(v8 - 24);
  v18.i64[0] = 0x505050505050505;
  v18.i64[1] = 0x505050505050505;
  int32x4_t v19 = vaddl_s16(*(int16x4_t *)v17.i8, *(int16x4_t *)v17.i8);
  v20.i64[0] = 0x100010001000100;
  v20.i64[1] = 0x100010001000100;
  int32x4_t v21 = vdupq_n_s32(0x1C7u);
  int8x16_t v22 = vsubq_s8(unk_224B28DC0, v18);
  int8x16_t v23 = vsubq_s8(unk_224B28DD0, v18);
  int8x16_t v24 = vsubq_s8(unk_224B28DE0, v18);
  int32x4_t v26 = *v10;
  int32x4_t v27 = v10[1];
  uint16x8_t v25 = v10 + 2;
  int32x4_t v29 = *v11;
  int32x4_t v30 = v11[1];
  int16x8_t v28 = v11 + 2;
  int16x8_t v32 = *v13;
  int16x8_t v31 = v13 + 1;
  int16x8_t v34 = *v14;
  int16x8_t v33 = v14 + 1;
  int32x4_t v36 = *v12;
  int32x4_t v37 = v12[1];
  int16x8_t result = v12 + 2;
  int16x8_t v39 = *v15;
  uint16x8_t v38 = v15 + 1;
  do
  {
    BOOL v40 = __OFSUB__(v7, 8);
    v7 -= 8;
    int16x8_t v41 = vaddq_s16(v39, vaddq_s16(v32, v34));
    uint16x8_t v42 = (uint16x8_t)vrshlq_s16(v41, v17);
    uint32x4_t v43 = (uint32x4_t)vmulq_s32((int32x4_t)vqsubq_u32((uint32x4_t)vmulq_s32(vrshlq_s32(vaddq_s32(v36, vaddq_s32(v26, v29)), v19), v16), vmull_u16(*(uint16x4_t *)v42.i8, *(uint16x4_t *)v42.i8)), v9);
    uint32x4_t v44 = (uint32x4_t)vmulq_s32((int32x4_t)vqsubq_u32((uint32x4_t)vmulq_s32(vrshlq_s32(vaddq_s32(v37, vaddq_s32(v27, v30)), v19), v16), vmull_high_u16(v42, v42)), v9);
    int32x4_t v26 = *v25;
    int32x4_t v27 = v25[1];
    v25 += 2;
    int32x4_t v29 = *v28;
    int32x4_t v30 = v28[1];
    v28 += 2;
    *(uint8x8_t *)v43.i8 = vqrshrn_n_u16(vqshrn_high_n_u32(vqshrn_n_u32(v43, 0x10uLL), v44, 0x10uLL), 4uLL);
    int16x8_t v32 = *v31++;
    int16x8_t v34 = *v33++;
    uint8x8_t v45 = (uint8x8_t)vadd_s8(vadd_s8(vqtbl3_s8(*(int8x16x3_t *)v22.i8, *(int8x8_t *)v43.i8), vadd_s8((int8x8_t)vcgt_u8(*(uint8x8_t *)v43.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL), (int8x8_t)0x505050505050505)), vadd_s8(vadd_s8((int8x8_t)vcgt_u8(*(uint8x8_t *)v43.i8, (uint8x8_t)0x3737373737373737), (int8x8_t)vcgt_u8(*(uint8x8_t *)v43.i8, (uint8x8_t)0x4848484848484848)), vadd_s8((int8x8_t)vcgt_u8(*(uint8x8_t *)v43.i8, (uint8x8_t)0x6565656565656565), (int8x8_t)vcgt_u8(*(uint8x8_t *)v43.i8, (uint8x8_t)0xA9A9A9A9A9A9A9A9))));
    int32x4_t v36 = *result;
    int32x4_t v37 = result[1];
    result += 2;
    int16x8_t v46 = (int16x8_t)vmovl_u8(v45);
    int32x4_t v47 = vrshrq_n_s32(vmulq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v46.i8, *(uint16x4_t *)v41.i8), v21), 0xCuLL);
    int32x4_t v48 = vrshrq_n_s32(vmulq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v46, (uint16x8_t)v41), v21), 0xCuLL);
    int16x8_t v39 = *v38++;
    *a3 = v47;
    a3[1] = v48;
    a3 += 2;
    *a4++ = vsubq_s16(v20, v46);
  }
  while (!((v7 < 0) ^ v40 | (v7 == 0)));
  return result;
}

int32x4_t *sub_224AAD7F4(int32x4_t **a1, int16x8_t **a2, int32x4_t *a3, int16x8_t *a4, int a5, unsigned int a6, unsigned int a7)
{
  int v7 = a5 + 2;
  unsigned int v8 = __clz(a7);
  int32x4_t v9 = vdupq_n_s32(a6);
  int16x8_t v10 = *a1;
  int16x8_t v11 = a1[1];
  int16x8_t v12 = a1[2];
  uint16x8_t v13 = a1[3];
  uint16x8_t v14 = a1[4];
  uint16x8_t v15 = *a2;
  int32x4_t v16 = a2[1];
  int16x8_t v17 = a2[2];
  int8x16_t v18 = a2[3];
  int32x4_t v19 = a2[4];
  v20.i64[0] = 0x1900000019;
  v20.i64[1] = 0x1900000019;
  int16x8_t v21 = vdupq_n_s16(v8 - 24);
  v22.i64[0] = 0x505050505050505;
  v22.i64[1] = 0x505050505050505;
  int32x4_t v23 = vaddl_s16(*(int16x4_t *)v21.i8, *(int16x4_t *)v21.i8);
  v24.i64[0] = 0x100010001000100;
  v24.i64[1] = 0x100010001000100;
  int32x4_t v25 = vdupq_n_s32(0xA4u);
  int8x16_t v26 = vsubq_s8(unk_224B28DC0, v22);
  int8x16_t v27 = vsubq_s8(unk_224B28DD0, v22);
  int8x16_t v28 = vsubq_s8(unk_224B28DE0, v22);
  int32x4_t v30 = *v10;
  int32x4_t v31 = v10[1];
  int32x4_t v29 = v10 + 2;
  int32x4_t v33 = *v11;
  int32x4_t v34 = v11[1];
  int16x8_t v32 = v11 + 2;
  int32x4_t v36 = *v12;
  int32x4_t v37 = v12[1];
  uint16x8_t v35 = v12 + 2;
  int32x4_t v39 = *v13;
  int32x4_t v40 = v13[1];
  uint16x8_t v38 = v13 + 2;
  int16x8_t v42 = *v15;
  int16x8_t v41 = v15 + 1;
  int16x8_t v44 = *v16;
  uint32x4_t v43 = v16 + 1;
  int16x8_t v46 = *v17;
  uint8x8_t v45 = v17 + 1;
  int16x8_t v48 = *v18;
  int32x4_t v47 = v18 + 1;
  int32x4_t v50 = *v14;
  int32x4_t v51 = v14[1];
  int16x8_t result = v14 + 2;
  int16x8_t v53 = *v19;
  long long v52 = v19 + 1;
  do
  {
    int16x8_t v54 = vaddq_s16(vaddq_s16(v53, vaddq_s16(v42, v44)), vaddq_s16(v46, v48));
    BOOL v55 = __OFSUB__(v7, 8);
    v7 -= 8;
    uint16x8_t v56 = (uint16x8_t)vrshlq_s16(v54, v21);
    uint32x4_t v57 = (uint32x4_t)vmulq_s32((int32x4_t)vqsubq_u32((uint32x4_t)vmulq_s32(vrshlq_s32(vaddq_s32(vaddq_s32(v50, vaddq_s32(v30, v33)), vaddq_s32(v36, v39)), v23), v20), vmull_u16(*(uint16x4_t *)v56.i8, *(uint16x4_t *)v56.i8)), v9);
    uint32x4_t v58 = (uint32x4_t)vmulq_s32((int32x4_t)vqsubq_u32((uint32x4_t)vmulq_s32(vrshlq_s32(vaddq_s32(vaddq_s32(v51, vaddq_s32(v31, v34)), vaddq_s32(v37, v40)), v23), v20), vmull_high_u16(v56, v56)), v9);
    int32x4_t v30 = *v29;
    int32x4_t v31 = v29[1];
    v29 += 2;
    int32x4_t v33 = *v32;
    int32x4_t v34 = v32[1];
    v32 += 2;
    *(uint8x8_t *)v57.i8 = vqrshrn_n_u16(vqshrn_high_n_u32(vqshrn_n_u32(v57, 0x10uLL), v58, 0x10uLL), 4uLL);
    int32x4_t v36 = *v35;
    int32x4_t v37 = v35[1];
    v35 += 2;
    int32x4_t v39 = *v38;
    int32x4_t v40 = v38[1];
    v38 += 2;
    int16x8_t v42 = *v41++;
    int16x8_t v44 = *v43++;
    int16x8_t v46 = *v45++;
    int16x8_t v48 = *v47++;
    int16x8_t v59 = (int16x8_t)vmovl_u8((uint8x8_t)vadd_s8(vadd_s8(vqtbl3_s8(*(int8x16x3_t *)v26.i8, *(int8x8_t *)v57.i8), vadd_s8((int8x8_t)vcgt_u8(*(uint8x8_t *)v57.i8, (uint8x8_t)0xFEFEFEFEFEFEFEFELL), (int8x8_t)0x505050505050505)), vadd_s8(vadd_s8((int8x8_t)vcgt_u8(*(uint8x8_t *)v57.i8, (uint8x8_t)0x3737373737373737), (int8x8_t)vcgt_u8(*(uint8x8_t *)v57.i8, (uint8x8_t)0x4848484848484848)), vadd_s8((int8x8_t)vcgt_u8(*(uint8x8_t *)v57.i8, (uint8x8_t)0x6565656565656565), (int8x8_t)vcgt_u8(*(uint8x8_t *)v57.i8, (uint8x8_t)0xA9A9A9A9A9A9A9A9)))));
    int32x4_t v50 = *result;
    int32x4_t v51 = result[1];
    result += 2;
    int32x4_t v60 = vrshrq_n_s32(vmulq_s32((int32x4_t)vmull_u16(*(uint16x4_t *)v59.i8, *(uint16x4_t *)v54.i8), v25), 0xCuLL);
    int32x4_t v61 = vrshrq_n_s32(vmulq_s32((int32x4_t)vmull_high_u16((uint16x8_t)v59, (uint16x8_t)v54), v25), 0xCuLL);
    int16x8_t v53 = *v52++;
    *a3 = v60;
    a3[1] = v61;
    a3 += 2;
    *a4++ = vsubq_s16(v24, v59);
  }
  while (!((v7 < 0) ^ v55 | (v7 == 0)));
  return result;
}

uint64_t sub_224AAD9A0(uint64_t a1, int16x4_t *a2, uint64_t a3, double a4, double a5, double a6, double a7, uint16x8_t a8)
{
  unsigned int v8 = (const __int16 *)(a1 + 24);
  int16x4_t v9 = *a2;
  *(int16x4_t *)a8.i8 = vld1_dup_s16(v8);
  unsigned __int16 v34 = a8.i16[0];
  int16x4_t v10 = (int16x4_t)vand_s8((int8x8_t)v9, (int8x8_t)0x3F003F003F003FLL);
  int16x8_t v11 = (const __int16 *)(a1 + 22);
  *(int16x4_t *)a8.i8 = vadd_s16(vqdmulh_s16(v10, (int16x4_t)vand_s8(*(int8x8_t *)a8.i8, (int8x8_t)0x7F007F007F007F00)), vadd_s16(v10, *(int16x4_t *)((char *)&unk_2646ED5D6 - 2 * a3)));
  uint16x8_t v12 = (uint16x8_t)vld1q_dup_s16(v11);
  v35[0] = a8;
  int8x16_t v13 = (int8x16_t)vcgeq_u16(v12, a8);
  unsigned int v14 = __clz(__rbit32((unsigned __int16)vaddvq_s16((int16x8_t)vandq_s8(v13, unk_2646ED5F8))));
  if (*(_DWORD *)(a1 + 32))
  {
    unsigned int v15 = a2->u16[a3];
    *a2 = vadd_s16(vsub_s16(v9, *(int16x4_t *)v13.i8), vshl_s16(vsub_s16((int16x4_t)vrhadd_u16((uint16x4_t)-1, *(uint16x4_t *)v13.i8), v9), vdup_n_s16(-4 - ((v15 >> 4) + !__CFADD__(~a3, 3)))));
    a2->i16[a3] = v15 - (v15 >> 5) + 1;
  }
  int32x4_t v16 = (unsigned __int16 *)v35 + v14;
  uint64_t v17 = *v16;
  unsigned int v18 = *(_DWORD *)(a1 + 28);
  unsigned int v19 = *(v16 - 1) - v17;
  unsigned int v20 = __clz(v19) ^ 0x10;
  BOOL v21 = v18 >= v20;
  unsigned int v22 = v18 - v20;
  uint64_t v23 = (*(void *)(a1 + 16) - (v17 << 48)) << v20;
  *(_DWORD *)(a1 + 24) = v19 << v20;
  if (!v21)
  {
    int16x8_t v24 = *(void **)a1;
    unint64_t v25 = *(void *)(a1 + 8);
    unint64_t v26 = *(void *)a1 + 8;
    BOOL v27 = v26 > v25;
    char v28 = v26 - v25;
    if (v27)
    {
      if ((unint64_t)v24 >= v25)
      {
        unint64_t v30 = __ROR8__(v22 - 16, v22 - 16);
        goto LABEL_7;
      }
      uint64_t v32 = *(void *)(v25 - 8) >> (8 * v28);
      unsigned int v33 = v25 - v24;
      unint64_t v30 = bswap64(~v32) >> (v22 - 48);
      LODWORD(v29) = (48 - v22) >> 3;
      if (v29 >= v33) {
        uint64_t v29 = v33;
      }
      else {
        uint64_t v29 = v29;
      }
    }
    else
    {
      uint64_t v29 = (48 - v22) >> 3;
      unint64_t v30 = bswap64(~*v24) >> (v22 - 48);
    }
    v22 += 8 * v29;
    *(void *)a1 = (char *)v24 + v29;
LABEL_7:
    v23 |= v30;
  }
  *(_DWORD *)(a1 + 28) = v22;
  *(void *)(a1 + 16) = v23;
  return v14;
}

void sub_224AADB30(uint64_t a1, int8x16_t *a2, uint64_t a3)
{
  int16x8_t v3 = (const __int16 *)(a1 + 24);
  int8x16_t v4 = (int8x16_t)vld1q_dup_s16(v3);
  v5.i64[0] = 0x7F007F007F007F00;
  v5.i64[1] = 0x7F007F007F007F00;
  v6.i64[0] = 0x3F003F003F003FLL;
  v6.i64[1] = 0x3F003F003F003FLL;
  int16x8_t v7 = (int16x8_t)vandq_s8(*a2, v6);
  unsigned int v8 = (const __int16 *)(a1 + 22);
  uint16x8_t v9 = (uint16x8_t)vld1q_dup_s16(v8);
  int16x8_t v10 = (int16x8_t)vcgeq_u16(v9, (uint16x8_t)vaddq_s16(vqdmulhq_s16(v7, (int16x8_t)vandq_s8(v4, v5)), vaddq_s16(v7, *(int16x8_t *)((char *)&unk_2646ED5D6 - 2 * a3))));
  if (*(_DWORD *)(a1 + 32))
  {
    unsigned int v11 = a2->u16[a3];
    v12.i64[0] = -1;
    v12.i64[1] = -1;
    *(int16x8_t *)a2 = vaddq_s16(vsubq_s16(*(int16x8_t *)a2, v10), vshlq_s16(vsubq_s16((int16x8_t)vrhaddq_u16(v12, (uint16x8_t)v10), *(int16x8_t *)a2), vdupq_n_s16(-4 - ((v11 >> 4) + !__CFADD__(~a3, 3)))));
    a2->i16[a3] = v11 - (v11 >> 5) + 1;
  }
  JUMPOUT(0x224AADA5CLL);
}

void sub_224AADBF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int16x8_t v3 = (const __int16 *)(a1 + 24);
  int16x8_t v4 = *(int16x8_t *)(a2 + 16);
  int8x16_t v5 = (int8x16_t)vld1q_dup_s16(v3);
  v6.i64[0] = 0x7F007F007F007F00;
  v6.i64[1] = 0x7F007F007F007F00;
  int16x8_t v7 = (int16x8_t *)((char *)&unk_2646ED5D6 - 2 * a3);
  v8.i64[0] = 0x3F003F003F003FLL;
  v8.i64[1] = 0x3F003F003F003FLL;
  int16x8_t v9 = (int16x8_t)vandq_s8(v5, v6);
  int16x8_t v10 = (int16x8_t)vandq_s8(*(int8x16_t *)a2, v8);
  int16x8_t v11 = (int16x8_t)vandq_s8((int8x16_t)v4, v8);
  uint16x8_t v12 = (const __int16 *)(a1 + 22);
  uint16x8_t v13 = (uint16x8_t)vld1q_dup_s16(v12);
  int16x8_t v14 = (int16x8_t)vcgeq_u16(v13, (uint16x8_t)vaddq_s16(vqdmulhq_s16(v10, v9), vaddq_s16(v10, *v7)));
  int16x8_t v15 = (int16x8_t)vcgeq_u16(v13, (uint16x8_t)vaddq_s16(vqdmulhq_s16(v11, v9), vaddq_s16(v11, v7[1])));
  if (*(_DWORD *)(a1 + 32))
  {
    unsigned int v16 = *(unsigned __int16 *)(a2 + 2 * a3);
    v17.i64[0] = -1;
    v17.i64[1] = -1;
    int16x8_t v18 = vdupq_n_s16(-5 - (v16 >> 4));
    *(int16x8_t *)a2 = vaddq_s16(vsubq_s16(*(int16x8_t *)a2, v14), vshlq_s16(vsubq_s16((int16x8_t)vrhaddq_u16(v17, (uint16x8_t)v14), *(int16x8_t *)a2), v18));
    *(int16x8_t *)(a2 + 16) = vaddq_s16(vsubq_s16(v4, v15), vshlq_s16(vsubq_s16((int16x8_t)vrhaddq_u16(v17, (uint16x8_t)v15), v4), v18));
    *(_WORD *)(a2 + 2 * a3) = v16 - (v16 >> 5) + 1;
  }
  JUMPOUT(0x224AADA5CLL);
}

uint64_t sub_224AADCD8(uint64_t a1, int8x8_t *a2, double a3, double a4, double a5, double a6, uint16x8_t a7)
{
  int16x4_t v7 = (int16x4_t)*a2;
  int8x16_t v8 = (const __int16 *)(a1 + 24);
  unsigned int v9 = a2->u16[3];
  int8x8_t v10 = (int8x8_t)vld1_dup_s16(v8);
  int16x8_t v11 = (const __int16 *)(a1 + 22);
  int v12 = -24;
  int16x4_t v13 = (int16x4_t)vand_s8(*a2, (int8x8_t)0x3F003F003F003FLL);
  int v14 = *(_DWORD *)(a1 + 32);
  uint16x8_t v15 = (uint16x8_t)vld1q_dup_s16(v11);
  unsigned int v16 = *(_DWORD *)(a1 + 28);
  unint64_t v17 = *(void *)(a1 + 16);
  do
  {
    *(int16x4_t *)a7.i8 = vadd_s16(vqdmulh_s16(v13, (int16x4_t)vand_s8(v10, (int8x8_t)0x7F007F007F007F00)), vadd_s16(v13, (int16x4_t)0x40008000CLL));
    __int16 v39 = v10.i16[0];
    int8x16_t v18 = (int8x16_t)vcgeq_u16(v15, a7);
    v40[0] = a7;
    int v19 = v12 + 5;
    unsigned int v20 = __clz(__rbit32((unsigned __int16)vaddvq_s16((int16x8_t)vandq_s8(v18, unk_2646ED5F8))));
    if (v14)
    {
      int16x4_t v21 = vshl_s16(vsub_s16((int16x4_t)vrhadd_u16((uint16x4_t)-1, *(uint16x4_t *)v18.i8), v7), vdup_n_s16(-5 - (v9 >> 4)));
      unsigned int v9 = v9 - (v9 >> 5) + 1;
      int16x4_t v7 = vadd_s16(vsub_s16(v7, *(int16x4_t *)v18.i8), v21);
      *a2 = (int8x8_t)v7;
      int16x4_t v13 = (int16x4_t)vand_s8((int8x8_t)v7, (int8x8_t)0x3F003F003F003FLL);
      a2->i16[3] = v9;
    }
    unsigned int v22 = (unsigned __int16 *)v40 + v20;
    uint64_t v23 = *v22;
    unsigned int v24 = *(v22 - 1) - v23;
    unsigned int v25 = __clz(v24) ^ 0x10;
    unsigned int v26 = v24 << v25;
    BOOL v27 = v16 >= v25;
    v16 -= v25;
    unint64_t v17 = (v17 - (v23 << 48)) << v25;
    *(_DWORD *)(a1 + 24) = v26;
    int8x8_t v10 = (int8x8_t)vdup_n_s16(v26);
    if (!v27)
    {
      char v28 = *(void **)a1;
      unint64_t v29 = *(void *)(a1 + 8);
      unint64_t v30 = *(void *)a1 + 8;
      BOOL v31 = v30 > v29;
      char v32 = v30 - v29;
      if (v31)
      {
        if ((unint64_t)v28 >= v29)
        {
          unint64_t v34 = __ROR8__(v16 - 16, v16 - 16);
          goto LABEL_8;
        }
        uint64_t v37 = *(void *)(v29 - 8) >> (8 * v32);
        unsigned int v38 = v29 - v28;
        unint64_t v34 = bswap64(~v37) >> (v16 - 48);
        LODWORD(v33) = (48 - v16) >> 3;
        if (v33 >= v38) {
          uint64_t v33 = v38;
        }
        else {
          uint64_t v33 = v33;
        }
      }
      else
      {
        uint64_t v33 = (48 - v16) >> 3;
        unint64_t v34 = bswap64(~*v28) >> (v16 - 48);
      }
      v16 += 8 * v33;
      *(void *)a1 = (char *)v28 + v33;
LABEL_8:
      v17 |= v34;
    }
    int v35 = 2 * v20 - 5;
    BOOL v27 = __CFADD__(v19, v35);
    int v12 = v19 + v35;
    uint16x8_t v15 = (uint16x8_t)vdupq_n_s16(HIWORD(v17));
  }
  while (!v27);
  *(_DWORD *)(a1 + 28) = v16;
  *(void *)(a1 + 16) = v17;
  return (v12 + 30) >> 1;
}

void sub_224AADE84()
{
}

void sub_224AADEBC()
{
}

void sub_224AADEFC(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = *a2;
  if (*(_DWORD *)(a1 + 32))
  {
    int v3 = *(void *)(a1 + 16) < (unint64_t)((((*(_DWORD *)(a1 + 24) >> 8) * (*a2 & 0xFFC0)) >> 7) + 4) << 48;
    *(_WORD *)a2 = *a2 - v3 - (((unsigned __int16)*a2 - v3 - (v3 << 15)) >> ((*a2 >> 20) + 4));
    *((_WORD *)a2 + 1) = HIWORD(v2) - (v2 >> 21) + 1;
  }
  JUMPOUT(0x224AADA84);
}

const void **sub_224AAE09C(const void **a1)
{
  unsigned int v2 = *a1;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

void sub_224AAE0D0(void *a1)
{
}

void sub_224AAE970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_224AAED28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

id sub_224AAED98(uint64_t a1, size_t planeIndex)
{
  int v2 = planeIndex;
  v13[1] = *MEMORY[0x263EF8340];
  size_t v4 = planeIndex;
  size_t WidthOfPlane = CVPixelBufferGetWidthOfPlane(**(CVPixelBufferRef **)a1, planeIndex);
  size_t HeightOfPlane = CVPixelBufferGetHeightOfPlane(**(CVPixelBufferRef **)a1, v4);
  MTLPixelFormat v7 = sub_224AAEF20(**(__CVBuffer ***)a1, v2);
  uint64_t v12 = *MEMORY[0x263F04070];
  v13[0] = &unk_26D7D6620;
  CFDictionaryRef v8 = [NSDictionary dictionaryWithObjects:v13 forKeys:&v12 count:1];
  CVMetalTextureRef image = 0;
  if (CVMetalTextureCacheCreateTextureFromImage(0, *(CVMetalTextureCacheRef *)(**(void **)(a1 + 8) + 8 * (v2 != 0) + 88), **(CVImageBufferRef **)a1, v8, v7, WidthOfPlane, HeightOfPlane, v4, &image))
  {
    unsigned int v9 = 0;
  }
  else
  {
    unsigned int v9 = CVMetalTextureGetTexture(image);
  }
  sub_224AAEFC4((const void **)&image);

  return v9;
}

void sub_224AAEF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_224AAEFC4((const void **)va);

  _Unwind_Resume(a1);
}

uint64_t sub_224AAEF20(__CVBuffer *a1, int a2)
{
  OSType PixelFormatType = CVPixelBufferGetPixelFormatType(a1);
  int v4 = sub_224B0E038(PixelFormatType);
  if (v4 == 8)
  {
    if (a2) {
      return 30;
    }
    else {
      return 10;
    }
  }
  else
  {
    int v6 = v4;
    int v7 = sub_224B0E50C(PixelFormatType);
    uint64_t v8 = 578;
    if (!a2) {
      uint64_t v8 = 576;
    }
    uint64_t v9 = 605;
    if (!a2) {
      uint64_t v9 = 603;
    }
    if (v6 != 10) {
      uint64_t v8 = 0;
    }
    if (v6 == 12) {
      uint64_t v8 = v9;
    }
    uint64_t v10 = 588;
    if (a2) {
      uint64_t v10 = 589;
    }
    if (v6 != 10) {
      uint64_t v10 = 0;
    }
    if (v7) {
      return v10;
    }
    else {
      return v8;
    }
  }
}

const void **sub_224AAEFC4(const void **a1)
{
  int v2 = *a1;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

void sub_224AAF184(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_224AAF420(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_224AAF624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_224AAEFC4((const void **)va);

  _Unwind_Resume(a1);
}

void sub_224AAF7E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_224AAEFC4((const void **)va);

  _Unwind_Resume(a1);
}

void sub_224AAFBD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_224AAFE10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_224AB00E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_224AB0584(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

const void **sub_224AB060C(const void **a1)
{
  int v2 = *a1;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

uint64_t AV1Decoder_CreateInstance(uint64_t a1, uint64_t a2, void *a3)
{
  VTVideoDecoderGetClassID();
  uint64_t v4 = CMDerivedObjectCreate();
  if (v4)
  {
    uint64_t v5 = v4;
    fwrite("FigDerivedObjectCreate failed\n", 0x1EuLL, 1uLL, (FILE *)*MEMORY[0x263EF8348]);
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_224A74000, &_os_log_internal, OS_LOG_TYPE_ERROR, "FigDerivedObjectCreate failed", buf, 2u);
    }
  }
  else
  {
    DerivedStorage = (void *)CMBaseObjectGetDerivedStorage();
    int v7 = (CFTypeRef *)operator new(0x9100uLL, MEMORY[0x263F8C180]);
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = v7 + 8;
      bzero(v7, 0x9100uLL);
      uint64_t v10 = (void *)MEMORY[0x22A61DAE0]();
      uint64_t v11 = objc_opt_new();
      *(void *)buf = v11;
      if (*v9) {
        CFRelease(*v9);
      }
      CFTypeRef *v9 = (CFTypeRef)v11;
      *(void *)buf = 0;
      sub_224AB060C((const void **)buf);
      uint64_t v12 = 0;
      v8[4595] = 0;
      v8[4596] = 0;
      v8[4597] = 0;
      *(_OWORD *)(v8 + 4599) = 0u;
      *(_OWORD *)(v8 + 4601) = 0u;
      *(_OWORD *)(v8 + 4603) = 0u;
      *(_OWORD *)(v8 + 4605) = 0u;
      *(_OWORD *)(v8 + 4607) = 0u;
      v8[4609] = 0;
      do
      {
        memset_pattern16(&v8[v12 + 4599], off_26D7D5F80, 0x10uLL);
        v12 += 2;
      }
      while (v12 != 8);
      v8[4607] = sub_224B06260;
      v8[4608] = sub_224B060B0;
      v8[4609] = sub_224B05FD4;
      v8[4610] = sub_224B05828;
      v8[4611] = 0;
      v8[4612] = sub_224B04FD8;
      v8[4613] = 0;
      v8[4614] = sub_224B044D0;
      v8[4615] = 0;
      sub_224B0343C();
      if (dword_26AA96DE4 >= 2)
      {
        v8[4599] = sub_224B0D210;
        v8[4600] = sub_224B0CDF0;
        *(int64x2_t *)(v8 + 4601) = vdupq_n_s64((unint64_t)sub_224B0C754);
        v8[4603] = sub_224B0C090;
        v8[4604] = sub_224B0B864;
        v8[4605] = sub_224B0B20C;
        v8[4606] = sub_224B0AAB4;
        v8[4607] = sub_224B0AA1C;
        v8[4608] = sub_224B0A7F0;
      }
      v8[4616] = 0;
      v8[4] = sub_224B03D48;
      v8[5] = sub_224B03B78;
      v8[6] = sub_224B039E8;
      sub_224B0343C();
      if (dword_26AA96DE4 >= 2)
      {
        v8[4] = sub_224B0DE9C;
        v8[5] = sub_224B0DAB8;
        v8[6] = sub_224B0D85C;
      }
      uint64_t v5 = 0;
      v8[4617] = (CFTypeRef)850045863;
      *((_OWORD *)v8 + 2309) = 0u;
      *((_OWORD *)v8 + 2310) = 0u;
      *((_OWORD *)v8 + 2311) = 0u;
      *((_OWORD *)v8 + 2312) = 0u;
      v8[4626] = (CFTypeRef)1;
      *((_WORD *)v8 + 18508) = 0;
      *((_WORD *)v8 + 18520) = 0;
      *((_OWORD *)v8 + 2314) = 0u;
      *(_OWORD *)(v8 + 4631) = 0u;
      *((_DWORD *)v8 + 9266) = 0;
      *((_WORD *)v8 + 18534) = 1;
      *((_DWORD *)v8 + 9268) = 0;
      v8[4635] = v8 + 4635;
      v8[4636] = v8 + 4635;
      v8[4637] = 0;
      v8[4638] = 0;
      v8[4639] = 0;
      void *DerivedStorage = v8;
    }
    else
    {
      void *DerivedStorage = 0;
      uint64_t v5 = 4294954392;
    }
    *a3 = 0;
  }
  return v5;
}

void sub_224AB0A10(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void **)v3;
  if (*(void *)v3)
  {
    *(void *)(v3 + 8) = v5;
    operator delete(v5);
  }
  sub_224AB060C(v2);
  sub_224B039B4((const void **)(v1 + 56));
  sub_224AB0A64((const void **)(v1 + 16));
  MEMORY[0x22A61D8C0](v1, MEMORY[0x263F8C180]);
  _Unwind_Resume(a1);
}

const void **sub_224AB0A64(const void **a1)
{
  int v2 = *a1;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

uint64_t sub_224AB0A98()
{
  VTVideoDecoderGetCMBaseObject();
  uint64_t v0 = *(void *)CMBaseObjectGetDerivedStorage();
  if (!v0) {
    return 4294954393;
  }
  sub_224B06A50(v0);
  return 0;
}

uint64_t sub_224AB0ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, __CVBuffer *a6, uint64_t a7, uint64_t a8, _DWORD *a9)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  VTVideoDecoderGetCMBaseObject();
  uint64_t v11 = *(void *)CMBaseObjectGetDerivedStorage();
  if (!v11) {
    return 4294954393;
  }
  *a9 = 0;
  if (!*(void *)(v11 + 8))
  {
    fwrite("No tile session\n", 0x10uLL, 1uLL, (FILE *)*MEMORY[0x263EF8348]);
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_224A74000, &_os_log_internal, OS_LOG_TYPE_ERROR, "No tile session", buf, 2u);
    }
    return 4294954393;
  }
  *(unsigned char *)(v11 + 37041) = 1;
  if (a5 <= CVPixelBufferGetWidth(a6) >> 1) {
    CVPixelBufferGetHeight(a6);
  }
  if (*(void *)(v11 + 24) || !sub_224B09DA0(v11, 0) && *(void *)(v11 + 24)) {
    operator new();
  }
  fprintf((FILE *)*MEMORY[0x263EF8348], "Error %d %s\n", 0, "opening decoder");
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 67109378;
    *(_DWORD *)&buf[4] = 0;
    __int16 v15 = 2080;
    unsigned int v16 = "opening decoder";
    _os_log_impl(&dword_224A74000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Error %d %s", buf, 0x12u);
  }
  VTTileDecoderSessionEmitDecodedTile();
  return 0;
}

void sub_224AB0EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  MEMORY[0x22A61D8D0](v4, 0x10F0C40B50459C8);
  sub_224B0A790((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_224AB0F14(uint64_t a1, uint64_t a2)
{
  VTVideoDecoderGetCMBaseObject();
  uint64_t v3 = *(void *)CMBaseObjectGetDerivedStorage();
  if (!v3) {
    return 4294954393;
  }
  *(void *)(v3 + 8) = a2;
  uint64_t v5 = FigFormatDescriptionRetain();
  sub_224B09D5C((const void **)(v3 + 16), (const void **)&v5);
  sub_224AB0A64((const void **)&v5);
  return sub_224B098FC(v3);
}

uint64_t sub_224AB0F8C()
{
  VTVideoDecoderGetCMBaseObject();
  uint64_t v0 = *(void *)CMBaseObjectGetDerivedStorage();
  if (!v0) {
    return 4294954393;
  }
  sub_224B06A50(v0);
  return 0;
}

const opaqueCMFormatDescription *sub_224AB0FC0(uint64_t a1, const opaqueCMFormatDescription *a2)
{
  VTVideoDecoderGetCMBaseObject();
  uint64_t v3 = *(void *)CMBaseObjectGetDerivedStorage();
  if (v3)
  {
    int16x8_t result = *(const opaqueCMFormatDescription **)(v3 + 16);
    if (!result) {
      return result;
    }
    CMVideoDimensions Dimensions = CMVideoFormatDescriptionGetDimensions(result);
    if (Dimensions == CMVideoFormatDescriptionGetDimensions(a2))
    {
      CFDataRef v6 = sub_224B09CAC(*(const opaqueCMFormatDescription **)(v3 + 16));
      CFDictionaryRef v7 = sub_224B09CAC(a2);
      if (v6 && v7 != 0)
      {
        CFDataRef v9 = v7;
        BytePtr = CFDataGetBytePtr(v6);
        uint64_t v11 = CFDataGetBytePtr(v9);
        size_t Length = CFDataGetLength(v6);
        CFIndex v13 = CFDataGetLength(v9);
        BOOL v14 = !BytePtr || v11 == 0;
        BOOL v15 = !v14 && Length == v13;
        if (v15 && !memcmp(BytePtr, v11, Length)) {
          return (const opaqueCMFormatDescription *)1;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_224AB10A8(uint64_t a1, void *a2)
{
  VTVideoDecoderGetCMBaseObject();
  if (!*(void *)CMBaseObjectGetDerivedStorage()) {
    return 4294954393;
  }
  if (atomic_load_explicit((atomic_ullong *volatile)qword_26AAA7538, memory_order_acquire) != -1)
  {
    *(void *)buf = &v5;
    CFDataRef v6 = buf;
    std::__call_once(qword_26AAA7538, &v6, (void (__cdecl *)(void *))sub_224B09770);
  }
  if (qword_26AAA7570)
  {
    if (a2)
    {
      CFTypeRef v3 = CFRetain((CFTypeRef)qword_26AAA7570);
      uint64_t result = 0;
      *a2 = v3;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    fwrite("Failed to create support properties dict\n", 0x29uLL, 1uLL, (FILE *)*MEMORY[0x263EF8348]);
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_224A74000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Failed to create support properties dict", buf, 2u);
    }
    return 4294954392;
  }
  return result;
}

uint64_t sub_224AB11BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, _DWORD *a5)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  VTVideoDecoderGetCMBaseObject();
  CFDictionaryRef v7 = *(void **)CMBaseObjectGetDerivedStorage();
  if (!v7) {
    return 4294954393;
  }
  *a5 = 0;
  if (!*v7)
  {
    fwrite("No active session\n", 0x12uLL, 1uLL, (FILE *)*MEMORY[0x263EF8348]);
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_224A74000, &_os_log_internal, OS_LOG_TYPE_ERROR, "No active session", buf, 2u);
    }
    return 4294954393;
  }
  if (v7[3] || !sub_224B09DA0((uint64_t)v7, (~a4 & 9) == 0) && v7[3]) {
    operator new();
  }
  fprintf((FILE *)*MEMORY[0x263EF8348], "Error %d %s\n", 0, "opening decoder");
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 67109378;
    *(_DWORD *)&buf[4] = 0;
    __int16 v11 = 2080;
    uint64_t v12 = "opening decoder";
    _os_log_impl(&dword_224A74000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Error %d %s", buf, 0x12u);
  }
  VTDecoderSessionEmitDecodedFrame();
  return 0;
}

void sub_224AB1540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  MEMORY[0x22A61D8D0](v4, 0x10F0C40B50459C8);
  sub_224B0A790((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_224AB1590(uint64_t a1, uint64_t a2)
{
  VTVideoDecoderGetCMBaseObject();
  uint64_t v3 = *(void *)CMBaseObjectGetDerivedStorage();
  if (!v3) {
    return 4294954393;
  }
  *(void *)uint64_t v3 = a2;
  uint64_t v5 = FigFormatDescriptionRetain();
  sub_224B09D5C((const void **)(v3 + 16), (const void **)&v5);
  sub_224AB0A64((const void **)&v5);
  return sub_224B098FC(v3);
}

uint64_t sub_224AB160C(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v5 = *(void *)CMBaseObjectGetDerivedStorage();
  if (!v5) {
    return 4294954393;
  }
  uint64_t v6 = v5 + 37064;
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_INFO))
  {
    int v16 = 138412546;
    uint64_t v17 = a2;
    __int16 v18 = 2112;
    int v19 = a3;
    _os_log_impl(&dword_224A74000, &_os_log_internal, OS_LOG_TYPE_INFO, "SetProperty %@ %@", (uint8_t *)&v16, 0x16u);
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x263F1E798]))
  {
    if (a3)
    {
      CFTypeID TypeID = CFNumberGetTypeID();
      if (TypeID == CFGetTypeID(a3))
      {
        int v16 = 0;
        CFTypeID v8 = CFGetTypeID(a3);
        if (v8 == CFNumberGetTypeID())
        {
          CFNumberGetValue((CFNumberRef)a3, kCFNumberSInt32Type, &v16);
          if (v16 >= 1) {
            *(_DWORD *)uint64_t v6 = v16;
          }
        }
      }
    }
    return 0;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x263F1E758]))
  {
    if (a3)
    {
      CFTypeID v10 = CFBooleanGetTypeID();
      if (v10 == CFGetTypeID(a3))
      {
        CFTypeID v11 = CFGetTypeID(a3);
        BOOL v12 = v11 == CFBooleanGetTypeID() && CFBooleanGetValue((CFBooleanRef)a3) != 0;
        uint64_t result = 0;
        *(unsigned char *)(v6 + 4) = v12;
        return result;
      }
    }
    return 0;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x263F1E7A0]))
  {
    if (!a3) {
      return 0;
    }
    CFTypeID v13 = CFBooleanGetTypeID();
    if (v13 != CFGetTypeID(a3)) {
      return 0;
    }
    CFTypeID v14 = CFGetTypeID(a3);
    BOOL v15 = v14 == CFBooleanGetTypeID() && CFBooleanGetValue((CFBooleanRef)a3) != 0;
    uint64_t result = 0;
    *(unsigned char *)(v6 + 5) = v15;
  }
  else
  {
    if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
    {
      int v16 = 138412290;
      uint64_t v17 = a2;
      _os_log_error_impl(&dword_224A74000, &_os_log_internal, OS_LOG_TYPE_ERROR, "unrecognised property key %@", (uint8_t *)&v16, 0xCu);
    }
    return 4294954396;
  }
  return result;
}

uint64_t sub_224AB1890(uint64_t a1, const void *a2, const __CFAllocator *a3, CFNumberRef *a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  CFDictionaryRef v7 = *(unsigned __int8 **)CMBaseObjectGetDerivedStorage();
  if (!v7) {
    return 4294954393;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x263F1E798]))
  {
    CFNumberRef v8 = CFNumberCreate(a3, kCFNumberSInt32Type, v7 + 37064);
    uint64_t result = 0;
LABEL_13:
    *a4 = v8;
    return result;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x263F1E758]))
  {
    uint64_t result = 0;
    int v10 = v7[37068];
LABEL_9:
    if (v10) {
      CFTypeID v11 = (CFNumberRef *)MEMORY[0x263EFFB40];
    }
    else {
      CFTypeID v11 = (CFNumberRef *)MEMORY[0x263EFFB38];
    }
    CFNumberRef v8 = *v11;
    goto LABEL_13;
  }
  if (CFEqual(a2, (CFTypeRef)*MEMORY[0x263F1E7A0]))
  {
    uint64_t result = 0;
    int v10 = v7[37069];
    goto LABEL_9;
  }
  if (os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR))
  {
    int v12 = 138412290;
    CFTypeID v13 = a2;
    _os_log_error_impl(&dword_224A74000, &_os_log_internal, OS_LOG_TYPE_ERROR, "unrecognised property key %@", (uint8_t *)&v12, 0xCu);
  }
  return 4294954396;
}

__CFString *sub_224AB1A04(uint64_t a1)
{
  Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0);
  CFStringAppendFormat(Mutable, 0, @"<AV1Decoder %p>", a1);
  return Mutable;
}

uint64_t sub_224AB1A60()
{
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  uint64_t v1 = DerivedStorage;
  uint64_t v2 = *DerivedStorage;
  if (*DerivedStorage)
  {
    sub_224B06A50(*DerivedStorage);
    uint64_t v3 = (void **)(v2 + 36760);
    if (*(void *)(v2 + 24)) {
      sub_224B13814((uint64_t *)(v2 + 24), 1);
    }
    uint64_t v4 = (uint64_t *)(v2 + 37080);
    uint64_t v5 = *(NSObject **)(v2 + 37056);
    if (v5)
    {
      dispatch_group_wait(v5, 0xFFFFFFFFFFFFFFFFLL);
      dispatch_release(*(dispatch_object_t *)(v2 + 37056));
    }
    uint64_t v6 = *(NSObject **)(v2 + 37048);
    if (v6) {
      dispatch_release(v6);
    }
    CFDictionaryRef v7 = *(std::__shared_weak_count **)(v2 + 37112);
    if (v7) {
      sub_224B06B24(v7);
    }
    if (*(void *)(v2 + 37096))
    {
      uint64_t v9 = *v4;
      CFNumberRef v8 = *(uint64_t **)(v2 + 37088);
      uint64_t v10 = *v8;
      *(void *)(v10 + 8) = *(void *)(*v4 + 8);
      **(void **)(v9 + 8) = v10;
      *(void *)(v2 + 37096) = 0;
      if (v8 != v4)
      {
        do
        {
          CFTypeID v11 = (uint64_t *)v8[1];
          operator delete(v8);
          CFNumberRef v8 = v11;
        }
        while (v11 != v4);
      }
    }
    for (uint64_t i = 0; i != -16; i -= 8)
    {
      CFTypeID v13 = *(const void **)(v2 + 37032 + i);
      if (v13) {
        CFRelease(v13);
      }
    }
    std::mutex::~mutex((std::mutex *)(v2 + 36936));
    uint64_t v14 = *v3;
    if (*v3)
    {
      *(void *)(v2 + 36768) = v14;
      operator delete(v14);
    }
    sub_224AB060C((const void **)(v2 + 64));
    sub_224B039B4((const void **)(v2 + 56));
    sub_224AB0A64((const void **)(v2 + 16));
    MEMORY[0x22A61D8D0](v2, 0x10E0C4090BA85D9);
  }
  *uint64_t v1 = 0;
  return 0;
}

unsigned char *sub_224AB1BBC(unsigned char *result, uint64_t a2, _DWORD *a3, unsigned char *a4, uint64_t a5, uint64_t a6)
{
  int v6 = a3[1] | *a3;
  if (*(void *)a3)
  {
    CFTypeID v11 = result;
    int v12 = 1;
    uint64_t v13 = -4 * a5;
    do
    {
      if ((v12 & v6) != 0)
      {
        unsigned int v14 = *a4;
        if (*a4 || (unsigned int v14 = a4[v13], a4[v13]))
        {
          int v15 = v14 >> 4;
          int v16 = (unsigned __int8 *)(a6 + v14);
          if ((a3[1] & v12) != 0) {
            int v17 = 6;
          }
          else {
            int v17 = 4;
          }
          uint64_t result = sub_224AB1C88(v11, *v16, v16[64], v15, 1, a2, v17);
        }
      }
      int v18 = -2 * v12;
      v11 += 4;
      a4 += 4;
      v12 *= 2;
    }
    while ((v6 & v18) != 0);
  }
  return result;
}

unsigned char *sub_224AB1C88(unsigned char *result, int a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7 = -3 * a6;
  uint64_t v8 = 2 * a6;
  int v9 = 4;
  do
  {
    int v10 = result[-2 * a6];
    int v11 = result[-a6];
    int v12 = *result;
    int v13 = result[a6];
    if (v10 - v11 >= 0) {
      signed int v14 = v10 - v11;
    }
    else {
      signed int v14 = v11 - v10;
    }
    if (v14 > a3) {
      goto LABEL_9;
    }
    int v15 = v13 - v12;
    if (v13 - v12 < 0) {
      int v15 = v12 - v13;
    }
    if (v15 <= a3)
    {
      int v17 = v11 - v12;
      if (v11 - v12 < 0) {
        int v17 = v12 - v11;
      }
      unsigned int v18 = v10 - v13;
      if (v10 - v13 < 0) {
        unsigned int v18 = v13 - v10;
      }
      char v16 = (int)((v18 >> 1) + 2 * v17) <= a2;
    }
    else
    {
LABEL_9:
      char v16 = 0;
    }
    if (a7 < 5)
    {
      int v19 = 0;
      int v20 = 0;
    }
    else
    {
      int v19 = result[v7];
      int v20 = result[v8];
      int v21 = v19 - v10;
      if (v19 - v10 < 0) {
        int v21 = v10 - v19;
      }
      int v22 = v20 - v13;
      if (v20 - v13 < 0) {
        int v22 = v13 - v20;
      }
      BOOL v23 = v22 <= a3;
      BOOL v24 = v21 <= a3 && v23;
      v16 &= v24;
      if (a7 >= 7)
      {
        int v25 = result[-4 * a6];
        int v26 = v25 - v19;
        if (v25 - v19 < 0) {
          int v26 = v19 - v25;
        }
        if (v26 > a3) {
          goto LABEL_122;
        }
        int v27 = result[3 * a6];
        int v28 = v27 - v20;
        if (v27 - v20 < 0) {
          int v28 = v20 - v27;
        }
        if (v28 > a3) {
          char v16 = 0;
        }
        if ((v16 & 1) == 0) {
          goto LABEL_122;
        }
        if (a7 >= 0x10)
        {
          int v29 = result[-7 * a6];
          int v30 = result[-6 * a6];
          int v31 = result[-5 * a6];
          int v32 = result[4 * a6];
          int v33 = result[5 * a6];
          int v34 = result[6 * a6];
          unsigned int v35 = v29 - v11;
          if (v29 - v11 < 0) {
            unsigned int v35 = v11 - v29;
          }
          if (v35 > 1) {
            goto LABEL_125;
          }
          unsigned int v36 = v30 - v11;
          if (v30 - v11 < 0) {
            unsigned int v36 = v11 - v30;
          }
          if (v36 > 1) {
            goto LABEL_125;
          }
          unsigned int v37 = v31 - v11;
          if (v31 - v11 < 0) {
            unsigned int v37 = v11 - v31;
          }
          if (v37 > 1) {
            goto LABEL_125;
          }
          unsigned int v38 = v32 - v12;
          if (v32 - v12 < 0) {
            unsigned int v38 = v12 - v32;
          }
          if (v38 > 1) {
            goto LABEL_125;
          }
          unsigned int v39 = v33 - v12;
          if (v33 - v12 < 0) {
            unsigned int v39 = v12 - v33;
          }
          if (v39 > 1)
          {
LABEL_125:
            int v40 = 0;
            BOOL v42 = 0;
          }
          else
          {
            int v40 = 0;
            unsigned int v41 = v34 - v12;
            if (v34 - v12 < 0) {
              unsigned int v41 = v12 - v34;
            }
            BOOL v42 = v41 < 2;
          }
LABEL_56:
          int v43 = v19 - v11;
          if (v19 - v11 < 0) {
            int v43 = v11 - v19;
          }
          if ((v43 | v14) > 1) {
            goto LABEL_65;
          }
          unsigned int v44 = v13 - v12;
          if (v13 - v12 < 0) {
            unsigned int v44 = v12 - v13;
          }
          if (v44 > 1)
          {
LABEL_65:
            BOOL v46 = 0;
          }
          else
          {
            unsigned int v45 = v20 - v12;
            if (v20 - v12 < 0) {
              unsigned int v45 = v12 - v20;
            }
            BOOL v46 = v45 < 2;
          }
          if (a7 < 8)
          {
            if (a7 != 6) {
              BOOL v46 = 0;
            }
            if (v46)
            {
              int v55 = 2 * v11 + 4;
              int v56 = v55 + 2 * v10;
              result[-2 * a6] = (v56 + v12 + 3 * v19) >> 3;
              result[-a6] = (v56 + 2 * v12 + v13 + v19) >> 3;
              *uint64_t result = (v55 + v10 + 2 * v12 + 2 * v13 + v20) >> 3;
              unsigned int v57 = (v11 + 2 * v12 + 2 * v13 + v20 + 2 * v20 + 4) >> 3;
LABEL_121:
              result[a6] = v57;
              goto LABEL_122;
            }
          }
          else
          {
            uint64_t v47 = v8;
            unsigned int v48 = v25 - v11;
            if (v25 - v11 < 0) {
              unsigned int v48 = v11 - v25;
            }
            BOOL v49 = v48 > 1;
            uint64_t v8 = v47;
            if (!v49)
            {
              unsigned int v50 = v27 - v12;
              if (v27 - v12 < 0) {
                unsigned int v50 = v12 - v27;
              }
              if (v50 >= 2) {
                BOOL v46 = 0;
              }
              if (((v40 | (!v42 || !v46)) & 1) == 0)
              {
                int v76 = v12 + v11 + 8;
                result[-6 * a6] = (v76 + v10 + v25 + v19 + 2 * v31 + 2 * v30 - v29 + 8 * v29) >> 4;
                result[-5 * a6] = (v76 + v10 + v13 + 2 * v25 + v19 + 2 * v31 + 2 * v30 + 5 * v29) >> 4;
                int v74 = v10 + 8 + v11;
                int v75 = v74 + v12 + v13;
                result[-4 * a6] = (v75 + 2 * v25 + 2 * v19 + v20 + v30 + 2 * v31 + 4 * v29) >> 4;
                int v72 = 2 * v10 + 8;
                result[v7] = (v72 + v11 + v12 + v13 + 2 * v25 + 2 * v19 + v20 + v27 + v31 + v30 + 3 * v29) >> 4;
                int v73 = v72 + 2 * v11;
                result[-2 * a6] = (v73 + v12 + v13 + v25 + 2 * v19 + v20 + v27 + v32 + v31 + v30 + 2 * v29) >> 4;
                result[-a6] = (v73 + 2 * v12 + v13 + v25 + v19 + v20 + v27 + v33 + v32 + v31 + v30 + v29) >> 4;
                *uint64_t result = (v10
                                       + 8
                                       + 2 * v11
                                       + 2 * v12
                                       + 2 * v13
                                       + v25
                                       + v19
                                       + v20
                                       + v27
                                       + v34
                                       + v33
                                       + v32
                                       + v31
                                       + v30) >> 4;
                result[a6] = (v74
                                          + 2 * v12
                                          + 2 * v13
                                          + v25
                                          + v19
                                          + 2 * v20
                                          + v27
                                          + v33
                                          + 2 * v34
                                          + v32
                                          + v31) >> 4;
                uint64_t v8 = v47;
                result[v47] = (v74
                                           + v12
                                           + 2 * v13
                                           + v25
                                           + v19
                                           + 2 * v20
                                           + 2 * v27
                                           + v34
                                           + v33
                                           + 2 * v34
                                           + v32) >> 4;
                result[3 * a6] = (v75 + v19 + 2 * v20 + 2 * v27 + v33 + 4 * v34 + 2 * v32) >> 4;
                result[4 * a6] = (v75 + v20 + 2 * v27 + v34 + 4 * v34 + 2 * v33 + 2 * v32) >> 4;
                result[5 * a6] = (v76 + v13 + v20 + v27 + v34 + 4 * v34 + 2 * v34 + 2 * v33 + 2 * v32) >> 4;
                goto LABEL_122;
              }
              uint64_t v8 = v47;
              if (v46)
              {
                uint64_t v51 = v7;
                int v52 = v11 + 4 + v12 + v13;
                int v53 = v11 + 4 + v10;
                result[v51] = (v53 + v12 + 3 * v25 + 2 * v19) >> 3;
                result[-2 * a6] = (v52 + v19 + 2 * (v25 + v10)) >> 3;
                result[-a6] = (v10 + 2 * v11 + v12 + v13 + v25 + v19 + v20 + 4) >> 3;
                *uint64_t result = (v53 + 2 * v12 + v13 + v19 + v20 + v27) >> 3;
                result[a6] = (v53 + v12 + 2 * v13 + v20 + 2 * v27) >> 3;
                int v54 = v52 + 2 * v20;
                uint64_t v7 = v51;
                result[v8] = (v54 + v27 + 2 * v27) >> 3;
                goto LABEL_122;
              }
            }
          }
          goto LABEL_81;
        }
LABEL_55:
        BOOL v42 = 0;
        int v34 = 0;
        int v33 = 0;
        int v32 = 0;
        int v31 = 0;
        int v30 = 0;
        int v29 = 0;
        int v40 = 1;
        goto LABEL_56;
      }
    }
    if ((v16 & 1) == 0) {
      goto LABEL_122;
    }
    if (a7 >= 6)
    {
      int v25 = 0;
      int v27 = 0;
      goto LABEL_55;
    }
LABEL_81:
    if (v14 <= a4)
    {
      int v58 = v13 - v12;
      if (v13 - v12 < 0) {
        int v58 = v12 - v13;
      }
      if (v58 <= a4)
      {
        int v64 = 3 * (v12 - v11);
        if (v64 >= 127) {
          int v64 = 127;
        }
        if (v64 <= -128) {
          int v64 = -128;
        }
        if (v64 >= 123) {
          int v65 = 123;
        }
        else {
          int v65 = v64;
        }
        int v66 = v65 + 4;
        int v67 = v66 >> 3;
        if (v64 >= 124) {
          int v64 = 124;
        }
        int v68 = v11 + ((v64 + 3) >> 3);
        if (v68 >= 255) {
          int v68 = 255;
        }
        result[-a6] = v68 & ~(v68 >> 31);
        int v69 = v12 - (v66 >> 3);
        if (v69 >= 255) {
          int v69 = 255;
        }
        *uint64_t result = v69 & ~(v69 >> 31);
        int v70 = v10 + ((v67 + 1) >> 1);
        if (v70 >= 255) {
          int v70 = 255;
        }
        result[-2 * a6] = v70 & ~(v70 >> 31);
        int v71 = v13 - ((v67 + 1) >> 1);
        if (v71 >= 255) {
          int v71 = 255;
        }
        unsigned int v57 = v71 & ~(v71 >> 31);
        goto LABEL_121;
      }
    }
    int v59 = v10 - v13;
    if (v10 - v13 >= 127) {
      int v59 = 127;
    }
    if (v59 <= -128) {
      int v59 = -128;
    }
    int v60 = v59 + 3 * (v12 - v11);
    if (v60 >= 127) {
      int v60 = 127;
    }
    if (v60 <= -128) {
      int v60 = -128;
    }
    if (v60 >= 123) {
      int v61 = 123;
    }
    else {
      int v61 = v60;
    }
    if (v60 >= 124) {
      int v60 = 124;
    }
    int v62 = v11 + ((v60 + 3) >> 3);
    if (v62 >= 255) {
      int v62 = 255;
    }
    result[-a6] = v62 & ~(v62 >> 31);
    int v63 = v12 - ((v61 + 4) >> 3);
    if (v63 >= 255) {
      int v63 = 255;
    }
    *uint64_t result = v63 & ~(v63 >> 31);
LABEL_122:
    result += a5;
    --v9;
  }
  while (v9);
  return result;
}

unsigned char *sub_224AB241C(unsigned char *result, uint64_t a2, _DWORD *a3, unsigned char *a4, uint64_t a5, uint64_t a6)
{
  int v6 = a3[1] | *a3;
  if (*(void *)a3)
  {
    int v11 = result;
    uint64_t v12 = 4 * a2;
    uint64_t v13 = 4 * a5;
    int v14 = 1;
    do
    {
      if ((v14 & v6) != 0)
      {
        unsigned int v15 = *a4;
        if (*a4 || (unsigned int v15 = *(a4 - 4), *(a4 - 4)))
        {
          int v16 = v15 >> 4;
          int v17 = (unsigned __int8 *)(a6 + v15);
          if ((a3[1] & v14) != 0) {
            int v18 = 6;
          }
          else {
            int v18 = 4;
          }
          uint64_t result = sub_224AB1C88(v11, *v17, v17[64], v16, a2, 1, v18);
        }
      }
      int v19 = -2 * v14;
      v11 += v12;
      a4 += v13;
      v14 *= 2;
    }
    while ((v6 & v19) != 0);
  }
  return result;
}

unsigned char *sub_224AB24EC(unsigned char *result, uint64_t a2, _DWORD *a3, unsigned char *a4, uint64_t a5, uint64_t a6)
{
  int v6 = a3[1] | *a3 | a3[2];
  if (v6)
  {
    int v11 = result;
    uint64_t v12 = -4 * a5;
    int v13 = 1;
    do
    {
      if ((v13 & v6) != 0)
      {
        unsigned int v14 = *a4;
        if (*a4 || (unsigned int v14 = a4[v12], a4[v12]))
        {
          if ((a3[2] & v13) != 0) {
            char v15 = 2;
          }
          else {
            char v15 = (a3[1] & v13) != 0;
          }
          uint64_t result = sub_224AB1C88(v11, *(unsigned __int8 *)(a6 + v14), *(unsigned __int8 *)(a6 + v14 + 64), v14 >> 4, 1, a2, 4 << v15);
        }
      }
      int v16 = -2 * v13;
      v11 += 4;
      a4 += 4;
      v13 *= 2;
    }
    while ((v6 & v16) != 0);
  }
  return result;
}

unsigned char *sub_224AB25D4(unsigned char *result, uint64_t a2, _DWORD *a3, unsigned char *a4, uint64_t a5, uint64_t a6)
{
  int v6 = a3[1] | *a3 | a3[2];
  if (v6)
  {
    int v11 = result;
    uint64_t v12 = 4 * a2;
    uint64_t v13 = 4 * a5;
    int v14 = 1;
    do
    {
      if ((v14 & v6) != 0)
      {
        unsigned int v15 = *a4;
        if (*a4 || (unsigned int v15 = *(a4 - 4), *(a4 - 4)))
        {
          if ((a3[2] & v14) != 0) {
            char v16 = 2;
          }
          else {
            char v16 = (a3[1] & v14) != 0;
          }
          uint64_t result = sub_224AB1C88(v11, *(unsigned __int8 *)(a6 + v15), *(unsigned __int8 *)(a6 + v15 + 64), v15 >> 4, a2, 1, 4 << v16);
        }
      }
      int v17 = -2 * v14;
      v11 += v12;
      a4 += v13;
      v14 *= 2;
    }
    while ((v6 & v17) != 0);
  }
  return result;
}

uint64_t sub_224AB26C0(int a1, int a2, int a3, int a4, int a5, int a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, int *a12, int a13, int a14, int a15, unsigned char *a16)
{
  uint64_t v20 = a11;
  if (a11 - 1 >= 8)
  {
    if (a11) {
      BOOL v23 = a11 == 12;
    }
    else {
      BOOL v23 = 1;
    }
    if (v23) {
      uint64_t v20 = byte_224B18F90[4 * a11 + 2 * a2 + a4];
    }
  }
  else
  {
    int v21 = 3 * *a12 + byte_224B18F88[a11 - 1];
    *a12 = v21;
    if (v21 > 90)
    {
      if (v21 >= 0xB4)
      {
        if (v21 == 180 || a2 == 0) {
          uint64_t v20 = 2;
        }
        else {
          uint64_t v20 = 8;
        }
      }
      else
      {
        uint64_t v20 = 7u;
      }
    }
    else if (v21 == 90 || a4 == 0)
    {
      uint64_t v20 = 1;
    }
    else
    {
      uint64_t v20 = 6;
    }
  }
  char v25 = byte_224B18FC4[v20];
  if (a4)
  {
    if ((byte_224B18FC4[v20] & 6) != 0
      || (uint64_t v26 = 0, v27 = 0, !a2) && (byte_224B18FC4[v20] & 1) != 0)
    {
      if (a10) {
        uint64_t v26 = a10 + 4 * a1;
      }
      else {
        uint64_t v26 = a8 - a9;
      }
      if (a10) {
        int v27 = (char *)(a10 + 4 * a1);
      }
      else {
        int v27 = (char *)(a8 - a9);
      }
    }
  }
  else
  {
    int v27 = 0;
    uint64_t v26 = a8;
  }
  uint64_t v62 = v26;
  __src = v27;
  int v67 = a2;
  if ((byte_224B18FC4[v20] & 1) == 0) {
    goto LABEL_63;
  }
  uint64_t v28 = 4 * a14;
  int v29 = &a16[-v28];
  if (a2)
  {
    int v30 = 4 * (a6 - a3);
    if ((int)v28 >= v30) {
      uint64_t v31 = v30;
    }
    else {
      uint64_t v31 = v28;
    }
    if ((int)v31 >= 1)
    {
      int v32 = v28 - 1;
      int v33 = (unsigned __int8 *)(a8 - 1);
      uint64_t v34 = v31;
      do
      {
        v29[v32--] = *v33;
        v33 += a9;
        --v34;
      }
      while (v34);
    }
    if ((int)v28 <= v30) {
      goto LABEL_49;
    }
    size_t v35 = v28 - (int)v31;
    int v36 = v29[v35];
  }
  else
  {
    if (a4) {
      int v36 = *v27;
    }
    else {
      int v36 = 129;
    }
    size_t v35 = (4 * a14);
  }
  memset(v29, v36, v35);
  a2 = v67;
LABEL_49:
  if ((v25 & 0x10) == 0) {
    goto LABEL_63;
  }
  if (!a2 || (a7 & 8) == 0 || (int v37 = a6 - (a14 + a3), a6 <= a14 + a3))
  {
    size_t v44 = (4 * a14);
    int v43 = &v29[-v28];
    int v45 = *v29;
    goto LABEL_62;
  }
  int v38 = 4 * v37;
  if ((int)v28 >= 4 * v37) {
    uint64_t v39 = v38;
  }
  else {
    uint64_t v39 = v28;
  }
  if ((int)v39 >= 1)
  {
    int v40 = &a16[~v28];
    unsigned int v41 = (unsigned char *)(a8 + a9 * (4 * a14) - 1);
    uint64_t v42 = v39;
    do
    {
      *v40-- = *v41;
      v41 += a9;
      --v42;
    }
    while (v42);
  }
  if ((int)v28 > v38)
  {
    int v43 = &v29[-v28];
    size_t v44 = (int)v28 - (int)v39;
    int v45 = v29[-(int)v39];
LABEL_62:
    memset(v43, v45, v44);
    a2 = v67;
  }
LABEL_63:
  if ((v25 & 2) == 0) {
    goto LABEL_84;
  }
  int v46 = 4 * a13;
  uint64_t v47 = a16 + 1;
  if (!a4)
  {
    if (a2) {
      int v52 = *(unsigned __int8 *)(a8 - 1);
    }
    else {
      int v52 = 127;
    }
    unsigned int v50 = a16 + 1;
    size_t v51 = (4 * a13);
    goto LABEL_73;
  }
  int v48 = 4 * (a5 - a1);
  if (v46 < v48) {
    int v48 = 4 * a13;
  }
  uint64_t v49 = v48;
  memcpy(a16 + 1, __src, v48);
  if (v46 > 4 * (a5 - a1))
  {
    unsigned int v50 = &v47[v49];
    size_t v51 = v46 - (int)v49;
    int v52 = a16[v49];
LABEL_73:
    memset(v50, v52, v51);
  }
  a2 = v67;
  if ((v25 & 8) == 0) {
    goto LABEL_84;
  }
  if (!a4 || (a7 & 1) == 0 || (int v53 = a5 - (a13 + a1), a5 <= a13 + a1))
  {
    int v56 = &v47[v46];
    int v58 = a16[v46];
    size_t v57 = (4 * a13);
    goto LABEL_83;
  }
  int v54 = 4 * v53;
  if (v46 < 4 * v53) {
    int v54 = 4 * a13;
  }
  uint64_t v55 = v54;
  memcpy(&v47[v46], &__src[v46], v54);
  a2 = v67;
  if (v46 > 4 * v53)
  {
    int v56 = &v47[v46 + v55];
    size_t v57 = v46 - (int)v55;
    int v58 = v47[v46 - 1 + (int)v55];
LABEL_83:
    memset(v56, v58, v57);
    a2 = v67;
  }
LABEL_84:
  if ((v25 & 4) == 0) {
    return v20;
  }
  if (a2)
  {
    int v59 = (unsigned __int8 *)(v62 - 1);
  }
  else
  {
    int v59 = (unsigned __int8 *)__src;
    if (!a4)
    {
      int v60 = 128;
      goto LABEL_89;
    }
  }
  int v60 = *v59;
LABEL_89:
  *a16 = v60;
  if (v20 == 7 && a14 + a13 >= 6 && a15) {
    *a16 = (5 * (a16[1] + *(a16 - 1)) + 6 * v60 + 8) >> 4;
  }
  return v20;
}

int *sub_224AB2AA8(int *a1, uint64_t a2, int a3, int a4)
{
  return sub_224AB2AB0(a1, a2, a3, a4, 0);
}

int *sub_224AB2AB0(int *result, uint64_t a2, int a3, int a4, int a5)
{
  int v5 = *result;
  int v6 = result[a2];
  if (a5)
  {
    int v7 = (181 * v5 + 128) >> 8;
    int v8 = (1567 * v6 + 2048) >> 12;
    int v9 = (3784 * v6 + 2048) >> 12;
    uint64_t v10 = 2 * a2;
    uint64_t v11 = 3 * a2;
    int v12 = v7;
  }
  else
  {
    int v13 = result[2 * a2];
    uint64_t v10 = 2 * a2;
    uint64_t v11 = 3 * a2;
    int v14 = result[3 * a2];
    int v7 = (181 * (v13 + v5) + 128) >> 8;
    int v12 = (181 * (v5 - v13) + 128) >> 8;
    int v8 = ((312 * v14 + 1567 * v6 + 2048) >> 12) - v14;
    int v9 = v6 + ((1567 * v14 - 312 * v6 + 2048) >> 12);
  }
  if (v9 + v7 >= a4) {
    int v15 = a4;
  }
  else {
    int v15 = v9 + v7;
  }
  if (v9 + v7 >= a3) {
    int v16 = v15;
  }
  else {
    int v16 = a3;
  }
  *uint64_t result = v16;
  if (v8 + v12 >= a4) {
    int v17 = a4;
  }
  else {
    int v17 = v8 + v12;
  }
  if (v8 + v12 >= a3) {
    int v18 = v17;
  }
  else {
    int v18 = a3;
  }
  result[a2] = v18;
  int v19 = v12 - v8;
  if (v19 >= a4) {
    int v20 = a4;
  }
  else {
    int v20 = v19;
  }
  if (v19 >= a3) {
    int v21 = v20;
  }
  else {
    int v21 = a3;
  }
  result[v10] = v21;
  int v22 = v7 - v9;
  if (v22 >= a4) {
    int v23 = a4;
  }
  else {
    int v23 = v22;
  }
  if (v22 >= a3) {
    int v24 = v23;
  }
  else {
    int v24 = a3;
  }
  result[v11] = v24;
  return result;
}

uint64_t sub_224AB2BC0(int *a1, uint64_t a2, int a3, int a4)
{
  return sub_224AB2BC8(a1, a2, a3, a4, 0);
}

uint64_t sub_224AB2BC8(int *a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v10 = 2 * a2;
  sub_224AB2AB0(a1, 2 * a2, a3, a4, a5);
  unsigned int v12 = a1[a2];
  unsigned int v13 = a1[3 * a2];
  if (a5)
  {
    int32x2_t v14 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, vdup_n_s32(v13), (int32x2_t)0xD4EFFFFF71CLL), 0xCuLL);
    int32x2_t v15 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, vdup_n_s32(v12), (int32x2_t)0xFB10000031FLL), 0xCuLL);
    uint64_t v16 = 5 * a2;
    uint64_t v17 = 7 * a2;
  }
  else
  {
    uint64_t v16 = 5 * a2;
    int v18 = (const float *)&a1[5 * a2];
    uint64_t v17 = 7 * a2;
    v11.i32[0] = a1[7 * a2];
    int32x2_t v19 = vadd_s32(vmla_s32(vmul_s32(vdup_n_s32(v11.u32[0]), (int32x2_t)0x31F0000004FLL), vdup_n_s32(v12), (int32x2_t)0xFFFFFFB10000031FLL), (int32x2_t)0x80000000800);
    int32x2_t v20 = (int32x2_t)vld1_dup_f32(v18);
    int32x2_t v14 = vshr_n_s32(vadd_s32(vmla_s32(vmul_s32(v20, (int32x2_t)0x472000006A7), vdup_n_s32(v13), (int32x2_t)0x6A7FFFFFB8ELL), (int32x2_t)0x40000000400), 0xBuLL);
    v15.i32[0] = vsub_s32(vshr_n_s32(v19, 0xCuLL), v11).u32[0];
    v11.i32[1] = a1[a2];
    v15.i32[1] = vsra_n_s32(v11, v19, 0xCuLL).i32[1];
  }
  int32x2_t v21 = vadd_s32(v15, v14);
  if (v21.i32[0] >= a4) {
    int v22 = a4;
  }
  else {
    int v22 = v21.i32[0];
  }
  if (v21.i32[0] >= a3) {
    int v23 = v22;
  }
  else {
    int v23 = a3;
  }
  int32x2_t v24 = vsub_s32(v15, v14);
  if (v21.i32[1] >= a4) {
    int v25 = a4;
  }
  else {
    int v25 = v21.i32[1];
  }
  if (v21.i32[1] >= a3) {
    int v26 = v25;
  }
  else {
    int v26 = a3;
  }
  int32x2_t v27 = vdup_n_s32(a3);
  int8x8_t v28 = vbsl_s8((int8x8_t)vcgt_s32(v27, v24), (int8x8_t)v27, (int8x8_t)vmin_s32(v24, vdup_n_s32(a4)));
  int v29 = 181 * (v28.i32[1] - v28.i32[0]) + 128;
  int v30 = 181 * (v28.i32[0] + v28.i32[1]) + 128;
  int v31 = *a1;
  int v32 = a1[v10];
  uint64_t result = a1[4 * a2];
  int v34 = a1[6 * a2];
  int v35 = *a1 + v26;
  if (v35 >= a4) {
    int v36 = a4;
  }
  else {
    int v36 = *a1 + v26;
  }
  if (v35 >= a3) {
    int v37 = v36;
  }
  else {
    int v37 = a3;
  }
  *a1 = v37;
  int v38 = v32 + (v30 >> 8);
  if (v38 >= a4) {
    int v39 = a4;
  }
  else {
    int v39 = v32 + (v30 >> 8);
  }
  if (v38 >= a3) {
    int v40 = v39;
  }
  else {
    int v40 = a3;
  }
  a1[a2] = v40;
  int v41 = result + (v29 >> 8);
  if (v41 >= a4) {
    int v42 = a4;
  }
  else {
    int v42 = result + (v29 >> 8);
  }
  if (v41 >= a3) {
    int v43 = v42;
  }
  else {
    int v43 = a3;
  }
  a1[v10] = v43;
  if (v34 + v23 >= a4) {
    int v44 = a4;
  }
  else {
    int v44 = v34 + v23;
  }
  if (v34 + v23 >= a3) {
    int v45 = v44;
  }
  else {
    int v45 = a3;
  }
  a1[3 * a2] = v45;
  int v46 = v34 - v23;
  if (v34 - v23 >= a4) {
    int v47 = a4;
  }
  else {
    int v47 = v34 - v23;
  }
  if (v46 >= a3) {
    int v48 = v47;
  }
  else {
    int v48 = a3;
  }
  a1[4 * a2] = v48;
  int v49 = result - (v29 >> 8);
  if (v49 >= a4) {
    int v50 = a4;
  }
  else {
    int v50 = result - (v29 >> 8);
  }
  if (v49 >= a3) {
    int v51 = v50;
  }
  else {
    int v51 = a3;
  }
  a1[v16] = v51;
  int v52 = v32 - (v30 >> 8);
  if (v52 >= a4) {
    int v53 = a4;
  }
  else {
    int v53 = v32 - (v30 >> 8);
  }
  if (v52 >= a3) {
    int v54 = v53;
  }
  else {
    int v54 = a3;
  }
  a1[6 * a2] = v54;
  if (v31 - v26 >= a4) {
    int v55 = a4;
  }
  else {
    int v55 = v31 - v26;
  }
  if (v31 - v26 >= a3) {
    int v56 = v55;
  }
  else {
    int v56 = a3;
  }
  a1[v17] = v56;
  return result;
}

uint64_t sub_224AB2E24(int *a1, uint64_t a2, int a3, int a4)
{
  return sub_224AB2E2C(a1, a2, a3, a4, 0);
}

uint64_t sub_224AB2E2C(int *a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v10 = 2 * a2;
  sub_224AB2BC8(a1, 2 * a2, a3, a4, a5);
  unsigned int v12 = a1[a2];
  unsigned int v13 = a1[3 * a2];
  unsigned int v14 = a1[5 * a2];
  unsigned int v15 = a1[7 * a2];
  if (a5)
  {
    int32x2_t v16 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, vdup_n_s32(v13), (int32x2_t)0xF50FFFFFB5BLL), 0xCuLL);
    int32x2_t v17 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, vdup_n_s32(v14), (int32x2_t)0xE1C0000078BLL), 0xCuLL);
    int32x2_t v18 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, vdup_n_s32(v15), (int32x2_t)0xFFFFF5DA00000C5ELL), 0xCuLL);
    int32x2_t v19 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, vdup_n_s32(v12), (int32x2_t)0x19100000FECLL), 0xCuLL);
    uint64_t v108 = 9 * a2;
    uint64_t v109 = 11 * a2;
    uint64_t v110 = 13 * a2;
    uint64_t v111 = 15 * a2;
  }
  else
  {
    uint64_t v108 = 9 * a2;
    int32x2_t v20 = (const float *)&a1[9 * a2];
    uint64_t v109 = 11 * a2;
    unsigned int v21 = a1[11 * a2];
    uint64_t v110 = 13 * a2;
    uint64_t v111 = 15 * a2;
    v11.i32[0] = a1[a2];
    int32x2_t v22 = vadd_s32(vmla_s32(vmul_s32(vdup_n_s32(a1[15 * a2]), (int32x2_t)0x1400000191), vdup_n_s32(v12), (int32x2_t)0x191FFFFFFECLL), (int32x2_t)0x80000000800);
    int32x2_t v23 = (int32x2_t)vld1_dup_f32(v20);
    int32x2_t v24 = vadd_s32(vmla_s32(vmul_s32(v23, (int32x2_t)0x62F00000513), vdup_n_s32(v15), (int32x2_t)0xFFFFFAED0000062FLL), (int32x2_t)0x40000000400);
    int32x2_t v25 = vadd_s32(vmla_s32(vmul_s32(vdup_n_s32(v21), (int32x2_t)0x78B000001E4), vdup_n_s32(v14), (int32x2_t)0xFFFFFE1C0000078BLL), (int32x2_t)0x80000000800);
    v17.i32[0] = vsub_s32(vshr_n_s32(v25, 0xCuLL), (int32x2_t)(v21 | 0xFFFFFAED00000000)).u32[0];
    int32x2_t v16 = vsra_n_s32((int32x2_t)__PAIR64__(v13, a1[13 * a2]), vadd_s32(vmla_s32(vmul_s32(vdup_n_s32(a1[13 * a2]), (int32x2_t)0x4A5FFFFFF50), vdup_n_s32(v13), (int32x2_t)0xFFFFFF50FFFFFB5BLL), (int32x2_t)0x80000000800), 0xCuLL);
    v17.i32[1] = vsra_n_s32((int32x2_t)__PAIR64__(v14, v21), v25, 0xCuLL).i32[1];
    int32x2_t v18 = vshr_n_s32(v24, 0xBuLL);
    v26.i32[0] = v11.i32[0];
    v26.i32[1] = a1[15 * a2];
    v19.i32[0] = vsra_n_s32(v11, v22, 0xCuLL).u32[0];
    v19.i32[1] = vsub_s32(vshr_n_s32(v22, 0xCuLL), v26).i32[1];
  }
  int32x2_t v27 = vsub_s32(v19, v18);
  int32x2_t v28 = vsub_s32(v16, v17);
  int32x2_t v29 = vdup_n_s32(a3);
  int32x2_t v30 = vadd_s32(v16, v17);
  int32x2_t v31 = vdup_n_s32(a4);
  int32x2_t v32 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v29, v30), (int8x8_t)v29, (int8x8_t)vmin_s32(v30, v31));
  int32x2_t v33 = vrev64_s32(vadd_s32(v18, v19));
  int32x2_t v34 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v29, v33), (int8x8_t)v29, (int8x8_t)vmin_s32(v33, v31));
  int32x2_t v35 = vadd_s32(v34, v32);
  if (v35.i32[0] >= a4) {
    int v36 = a4;
  }
  else {
    int v36 = v35.i32[0];
  }
  if (v35.i32[0] >= a3) {
    int v37 = v36;
  }
  else {
    int v37 = a3;
  }
  int32x2_t v38 = vsub_s32(v34, v32);
  int8x8_t v39 = vbsl_s8((int8x8_t)vcgt_s32(v29, v38), (int8x8_t)v29, (int8x8_t)vmin_s32(v38, v31));
  int32x2_t v40 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v29, v28), (int8x8_t)v29, (int8x8_t)vmin_s32(v28, v31));
  int32x2_t v41 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v29, v27), (int8x8_t)v29, (int8x8_t)vmin_s32(v27, v31));
  int32x2_t v42 = vadd_s32(vmla_lane_s32(vmul_lane_s32((int32x2_t)0x1380000061FLL, v41, 1), (int32x2_t)0x61FFFFFFEC8, v41, 0), (int32x2_t)0x80000000800);
  int32x2_t v43 = vsub_s32(vshr_n_s32(v42, 0xCuLL), v41);
  v44.i32[0] = vsra_n_s32(v41, v42, 0xCuLL).u32[0];
  v44.i32[1] = v43.i32[1];
  int32x2_t v45 = vsub_s32(vshr_n_s32(vadd_s32(vmla_lane_s32(vmul_n_s32((int32x2_t)0xFFFFF9E100000138, v40.i32[0]), (int32x2_t)0x1380000061FLL, v40, 1), (int32x2_t)0x80000000800), 0xCuLL), v40);
  int32x2_t v46 = vadd_s32(v44, v45);
  if (v46.i32[1] >= a4) {
    int v47 = a4;
  }
  else {
    int v47 = v46.i32[1];
  }
  if (v46.i32[1] >= a3) {
    int v48 = v47;
  }
  else {
    int v48 = a3;
  }
  int32x2_t v49 = vsub_s32(v44, v45);
  int8x8_t v50 = vbsl_s8((int8x8_t)vcgt_s32(v29, v49), (int8x8_t)v29, (int8x8_t)vmin_s32(v49, v31));
  if (v46.i32[0] >= a4) {
    int v51 = a4;
  }
  else {
    int v51 = v46.i32[0];
  }
  if (v46.i32[0] >= a3) {
    int v52 = v51;
  }
  else {
    int v52 = a3;
  }
  if (v35.i32[1] >= a4) {
    int v53 = a4;
  }
  else {
    int v53 = v35.i32[1];
  }
  if (v35.i32[1] >= a3) {
    int v54 = v53;
  }
  else {
    int v54 = a3;
  }
  int v55 = 181 * (v50.i32[0] - v50.i32[1]) + 128;
  int v56 = 181 * (v50.i32[0] + v50.i32[1]) + 128;
  int v57 = 181 * (v39.i32[1] - v39.i32[0]) + 128;
  int v58 = 181 * (v39.i32[0] + v39.i32[1]) + 128;
  uint64_t result = *a1;
  int v60 = a1[v10];
  int v61 = a1[4 * a2];
  int v62 = a1[6 * a2];
  if (v54 + (int)result >= a4) {
    int v63 = a4;
  }
  else {
    int v63 = v54 + result;
  }
  if (v54 + (int)result < a3) {
    int v63 = a3;
  }
  int v64 = a1[8 * a2];
  int v65 = a1[10 * a2];
  int v66 = a1[12 * a2];
  int v67 = a1[14 * a2];
  *a1 = v63;
  if (v52 + v60 >= a4) {
    int v68 = a4;
  }
  else {
    int v68 = v52 + v60;
  }
  if (v52 + v60 >= a3) {
    int v69 = v68;
  }
  else {
    int v69 = a3;
  }
  a1[a2] = v69;
  int v70 = v61 + (v56 >> 8);
  if (v70 >= a4) {
    int v71 = a4;
  }
  else {
    int v71 = v61 + (v56 >> 8);
  }
  if (v70 >= a3) {
    int v72 = v71;
  }
  else {
    int v72 = a3;
  }
  a1[v10] = v72;
  int v73 = v62 + (v58 >> 8);
  if (v73 >= a4) {
    int v74 = a4;
  }
  else {
    int v74 = v62 + (v58 >> 8);
  }
  if (v73 >= a3) {
    int v75 = v74;
  }
  else {
    int v75 = a3;
  }
  a1[3 * a2] = v75;
  int v76 = v64 + (v57 >> 8);
  if (v76 >= a4) {
    int v77 = a4;
  }
  else {
    int v77 = v64 + (v57 >> 8);
  }
  if (v76 >= a3) {
    int v78 = v77;
  }
  else {
    int v78 = a3;
  }
  a1[4 * a2] = v78;
  int v79 = v65 + (v55 >> 8);
  if (v79 >= a4) {
    int v80 = a4;
  }
  else {
    int v80 = v65 + (v55 >> 8);
  }
  if (v79 >= a3) {
    int v81 = v80;
  }
  else {
    int v81 = a3;
  }
  a1[5 * a2] = v81;
  if (v48 + v66 >= a4) {
    int v82 = a4;
  }
  else {
    int v82 = v48 + v66;
  }
  if (v48 + v66 >= a3) {
    int v83 = v82;
  }
  else {
    int v83 = a3;
  }
  a1[6 * a2] = v83;
  if (v67 + v37 >= a4) {
    int v84 = a4;
  }
  else {
    int v84 = v67 + v37;
  }
  if (v67 + v37 >= a3) {
    int v85 = v84;
  }
  else {
    int v85 = a3;
  }
  a1[7 * a2] = v85;
  int v86 = v67 - v37;
  if (v86 >= a4) {
    int v87 = a4;
  }
  else {
    int v87 = v86;
  }
  if (v86 >= a3) {
    int v88 = v87;
  }
  else {
    int v88 = a3;
  }
  a1[8 * a2] = v88;
  int v89 = v66 - v48;
  if (v89 >= a4) {
    int v90 = a4;
  }
  else {
    int v90 = v89;
  }
  if (v89 >= a3) {
    int v91 = v90;
  }
  else {
    int v91 = a3;
  }
  a1[v108] = v91;
  int v92 = v65 - (v55 >> 8);
  if (v92 >= a4) {
    int v93 = a4;
  }
  else {
    int v93 = v65 - (v55 >> 8);
  }
  if (v92 >= a3) {
    int v94 = v93;
  }
  else {
    int v94 = a3;
  }
  a1[10 * a2] = v94;
  int v95 = v64 - (v57 >> 8);
  if (v95 >= a4) {
    int v96 = a4;
  }
  else {
    int v96 = v64 - (v57 >> 8);
  }
  if (v95 >= a3) {
    int v97 = v96;
  }
  else {
    int v97 = a3;
  }
  a1[v109] = v97;
  int v98 = v62 - (v58 >> 8);
  if (v98 >= a4) {
    int v99 = a4;
  }
  else {
    int v99 = v62 - (v58 >> 8);
  }
  if (v98 >= a3) {
    int v100 = v99;
  }
  else {
    int v100 = a3;
  }
  a1[12 * a2] = v100;
  int v101 = v61 - (v56 >> 8);
  if (v101 >= a4) {
    int v102 = a4;
  }
  else {
    int v102 = v61 - (v56 >> 8);
  }
  if (v101 >= a3) {
    int v103 = v102;
  }
  else {
    int v103 = a3;
  }
  a1[v110] = v103;
  if (v60 - v52 >= a4) {
    int v104 = a4;
  }
  else {
    int v104 = v60 - v52;
  }
  if (v60 - v52 >= a3) {
    int v105 = v104;
  }
  else {
    int v105 = a3;
  }
  a1[14 * a2] = v105;
  if ((int)result - v54 >= a4) {
    int v106 = a4;
  }
  else {
    int v106 = result - v54;
  }
  if ((int)result - v54 >= a3) {
    int v107 = v106;
  }
  else {
    int v107 = a3;
  }
  a1[v111] = v107;
  return result;
}

uint64_t sub_224AB3384(int *a1, uint64_t a2, int a3, int a4)
{
  return sub_224AB338C(a1, a2, a3, a4, 0);
}

uint64_t sub_224AB338C(int *a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v311 = 2 * a2;
  sub_224AB2E2C(a1, 2 * a2, a3, a4, a5);
  int v10 = a1[a2];
  uint64_t v308 = 3 * a2;
  unsigned int v11 = a1[3 * a2];
  uint64_t v310 = 5 * a2;
  int v12 = a1[5 * a2];
  uint64_t v313 = 7 * a2;
  int v13 = a1[7 * a2];
  uint64_t v314 = 9 * a2;
  int v14 = a1[9 * a2];
  uint64_t v315 = 11 * a2;
  int v15 = a1[11 * a2];
  uint64_t v316 = 13 * a2;
  unsigned int v16 = a1[13 * a2];
  uint64_t v305 = 4 * a2;
  uint64_t v317 = 15 * a2;
  int v17 = a1[15 * a2];
  uint64_t v18 = 8 * a2;
  if (a5)
  {
    int v19 = (201 * v10 + 2048) >> 12;
    int v20 = (2048 - 2751 * v17) >> 12;
    int v21 = (1751 * v14 + 2048) >> 12;
    int v22 = (2048 - 1380 * v13) >> 12;
    int v23 = (995 * v12 + 2048) >> 12;
    int v24 = (2048 - 2106 * v15) >> 12;
    int32x2_t v25 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, vdup_n_s32(v11), (int32x2_t)0xFFFFFDA700000FD4), 0xCuLL);
    int32x2_t v26 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, vdup_n_s32(v16), (int32x2_t)0x98800000CDALL), 0xCuLL);
    int v27 = (3513 * v15 + 2048) >> 12;
    int v28 = (3973 * v12 + 2048) >> 12;
    int v29 = (3857 * v13 + 2048) >> 12;
    int v30 = (3703 * v14 + 2048) >> 12;
    int v31 = (3035 * v17 + 2048) >> 12;
    int v32 = (4091 * v10 + 2048) >> 12;
    uint64_t v304 = 17 * a2;
    uint64_t v303 = 19 * a2;
    uint64_t v306 = 21 * a2;
    uint64_t v300 = 23 * a2;
    uint64_t v307 = 25 * a2;
    uint64_t v301 = 27 * a2;
    uint64_t v309 = 31 * a2;
    uint64_t v302 = 29 * a2;
  }
  else
  {
    uint64_t v304 = 17 * a2;
    int v33 = a1[17 * a2];
    uint64_t v306 = 21 * a2;
    int v34 = a1[21 * a2];
    uint64_t v307 = 25 * a2;
    int v35 = a1[25 * a2];
    uint64_t v309 = 31 * a2;
    int v36 = a1[31 * a2];
    int v19 = ((5 * v36 + 201 * v10 + 2048) >> 12) - v36;
    int v37 = -5 * v10 + 201 * v36;
    uint64_t v303 = 19 * a2;
    int32x2_t v38 = (const float *)&a1[19 * a2];
    v39.i32[0] = a1[3 * a2];
    int32x2_t v40 = (int32x2_t)vld1_dup_f32(v38);
    uint64_t v301 = 27 * a2;
    uint64_t v302 = 29 * a2;
    int v24 = v34 + ((-583 * v34 - 2106 * v15 + 2048) >> 12);
    v39.i32[1] = a1[29 * a2];
    LODWORD(v38) = a1[27 * a2];
    int v27 = v15 + ((2106 * v34 - 583 * v15 + 2048) >> 12);
    int v23 = ((123 * (int)v38 + 995 * v12 + 2048) >> 12) - v38;
    int v22 = v35 + ((-239 * v35 - 1380 * v13 + 2048) >> 12);
    int v28 = v12 + ((995 * (int)v38 - 123 * v12 + 2048) >> 12);
    uint64_t v300 = 23 * a2;
    int v41 = a1[23 * a2];
    int v29 = v13 + ((1380 * v35 - 239 * v13 + 2048) >> 12);
    int v21 = ((393 * v41 + 1751 * v14 + 2048) >> 12) - v41;
    int v20 = v33 + ((-1061 * v33 - 2751 * v17 + 2048) >> 12);
    int v30 = v14 + ((1751 * v41 - 393 * v14 + 2048) >> 12);
    int v31 = v17 + ((2751 * v33 - 1061 * v17 + 2048) >> 12);
    int v32 = v10 + ((v37 + 2048) >> 12);
    int32x2_t v25 = vsra_n_s32(v39, vadd_s32(vmla_s32(vmul_s32(vdup_n_s32(v39.u32[1]), (int32x2_t)0xFFFFFFD400000259), vdup_n_s32(v11), (int32x2_t)0xFFFFFDA7FFFFFFD4), (int32x2_t)0x80000000800), 0xCuLL);
    int32x2_t v26 = vshr_n_s32(vadd_s32(vmla_s32(vmul_s32(v40, (int32x2_t)0xFFFFF993000004C4), vdup_n_s32(v16), (int32x2_t)0x4C40000066DLL), (int32x2_t)0x40000000400), 0xBuLL);
  }
  if (v19 + v20 >= a4) {
    int v42 = a4;
  }
  else {
    int v42 = v19 + v20;
  }
  int v43 = v19 - v20;
  if (v19 + v20 < a3) {
    int v42 = a3;
  }
  if (v43 >= a4) {
    int v44 = a4;
  }
  else {
    int v44 = v19 - v20;
  }
  if (v43 >= a3) {
    int v45 = v44;
  }
  else {
    int v45 = a3;
  }
  int v46 = v22 - v21;
  if (v22 - v21 >= a4) {
    int v47 = a4;
  }
  else {
    int v47 = v22 - v21;
  }
  int v48 = v21 + v22;
  if (v46 < a3) {
    int v47 = a3;
  }
  if (v48 >= a4) {
    int v49 = a4;
  }
  else {
    int v49 = v48;
  }
  if (v48 < a3) {
    int v49 = a3;
  }
  if (v23 - v24 >= a4) {
    unsigned int v50 = a4;
  }
  else {
    unsigned int v50 = v23 - v24;
  }
  v51.i32[0] = vdup_lane_s32(v26, 1).u32[0];
  v51.i32[1] = v23;
  v52.i32[0] = vdup_lane_s32(v25, 1).u32[0];
  v52.i32[1] = v24;
  if (v23 - v24 < a3) {
    unsigned int v50 = a3;
  }
  if (v28 - v27 >= a4) {
    unsigned int v53 = a4;
  }
  else {
    unsigned int v53 = v28 - v27;
  }
  int32x2_t v54 = vsub_s32(v25, v26);
  v25.i32[1] = v27;
  v26.i32[1] = v28;
  if (v28 - v27 < a3) {
    unsigned int v53 = a3;
  }
  if (v29 + v30 >= a4) {
    int v55 = a4;
  }
  else {
    int v55 = v29 + v30;
  }
  int v56 = v29 - v30;
  if (v29 + v30 < a3) {
    int v55 = a3;
  }
  if (v56 >= a4) {
    int v57 = a4;
  }
  else {
    int v57 = v29 - v30;
  }
  if (v56 < a3) {
    int v57 = a3;
  }
  if (v32 - v31 >= a4) {
    int v58 = a4;
  }
  else {
    int v58 = v32 - v31;
  }
  int v59 = v31 + v32;
  if (v32 - v31 >= a3) {
    int v60 = v58;
  }
  else {
    int v60 = a3;
  }
  if (v59 >= a4) {
    int v61 = a4;
  }
  else {
    int v61 = v31 + v32;
  }
  BOOL v62 = v59 < a3;
  int v63 = ((79 * v45 + 799 * v60 + 2048) >> 12) - v45;
  __int32 v64 = v60 + ((799 * v45 - 79 * v60 + 2048) >> 12);
  int v65 = ((-799 * v47 + 79 * v57 + 2048) >> 12) - v57;
  __int32 v66 = ((79 * v47 + 799 * v57 + 2048) >> 12) - v47;
  int32x2_t v67 = vdup_n_s32(a3);
  int32x2_t v68 = vdup_n_s32(a4);
  int32x2_t v69 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v67, v54), (int8x8_t)v67, (int8x8_t)vmin_s32(v54, v68));
  int32x2_t v70 = vdup_n_s32(0xFFFFFB8E);
  if (v62) {
    int v71 = a3;
  }
  else {
    int v71 = v61;
  }
  if (v42 + v49 >= a4) {
    int v72 = a4;
  }
  else {
    int v72 = v42 + v49;
  }
  if (v42 + v49 >= a3) {
    int v73 = v72;
  }
  else {
    int v73 = a3;
  }
  if (v63 - v65 >= a4) {
    int v74 = a4;
  }
  else {
    int v74 = v63 - v65;
  }
  int v75 = v42 - v49;
  if (v63 - v65 >= a3) {
    int v76 = v74;
  }
  else {
    int v76 = a3;
  }
  if (v75 >= a4) {
    int v77 = a4;
  }
  else {
    int v77 = v75;
  }
  int32x2_t v78 = vadd_s32(v51, v52);
  int8x8_t v79 = vbsl_s8((int8x8_t)vcgt_s32(v67, v78), (int8x8_t)v67, (int8x8_t)vmin_s32(v78, v68));
  if (v75 >= a3) {
    int v80 = v77;
  }
  else {
    int v80 = a3;
  }
  if (v79.i32[0] - v79.i32[1] >= a4) {
    int v81 = a4;
  }
  else {
    int v81 = v79.i32[0] - v79.i32[1];
  }
  int v82 = v79.i32[1] + v79.i32[0];
  if (v79.i32[0] - v79.i32[1] >= a3) {
    int v83 = v81;
  }
  else {
    int v83 = a3;
  }
  if (v82 >= a4) {
    int v84 = a4;
  }
  else {
    int v84 = v79.i32[1] + v79.i32[0];
  }
  int32x2_t v85 = vadd_s32(v25, v26);
  int8x8_t v86 = vbsl_s8((int8x8_t)vcgt_s32(v67, v85), (int8x8_t)v67, (int8x8_t)vmin_s32(v85, v68));
  if (v82 < a3) {
    int v84 = a3;
  }
  if (v86.i32[0] + v86.i32[1] >= a4) {
    int v87 = a4;
  }
  else {
    int v87 = v86.i32[0] + v86.i32[1];
  }
  int v88 = v86.i32[0] - v86.i32[1];
  if (v86.i32[0] + v86.i32[1] < a3) {
    int v87 = a3;
  }
  if (v88 >= a4) {
    int v89 = a4;
  }
  else {
    int v89 = v86.i32[0] - v86.i32[1];
  }
  if (v88 >= a3) {
    int v90 = v89;
  }
  else {
    int v90 = a3;
  }
  if (v71 - v55 >= a4) {
    int v91 = a4;
  }
  else {
    int v91 = v71 - v55;
  }
  if (v71 - v55 >= a3) {
    int v92 = v91;
  }
  else {
    int v92 = a3;
  }
  if (v64 - v66 >= a4) {
    int v93 = a4;
  }
  else {
    int v93 = v64 - v66;
  }
  int v94 = v55 + v71;
  if (v64 - v66 >= a3) {
    int v95 = v93;
  }
  else {
    int v95 = a3;
  }
  if (v94 >= a4) {
    int v96 = a4;
  }
  else {
    int v96 = v94;
  }
  BOOL v62 = v94 < a3;
  int v97 = ((312 * v76 + 1567 * v95 + 2048) >> 12) - v76;
  int v98 = v95 + ((-312 * v95 + 1567 * v76 + 2048) >> 12);
  int v99 = ((312 * v80 + 1567 * v92 + 2048) >> 12) - v80;
  int v100 = v92 + ((1567 * v80 - 312 * v92 + 2048) >> 12);
  int v101 = ((-1567 * v83 + 312 * v90 + 2048) >> 12) - v90;
  int v102 = ((312 * v83 + 1567 * v90 + 2048) >> 12) - v83;
  v103.i32[0] = vdup_lane_s32(vmul_s32(v69, v70), 1).u32[0];
  v103.i32[1] = -1138 * v69.i32[0] + 1024;
  int32x2_t v104 = vshr_n_s32(vadd_s32(vmla_s32(vmul_s32(vdup_n_s32(v50), (int32x2_t)0xFFFFFB8E000006A7), vdup_n_s32(v53), (int32x2_t)0x6A700000472), (int32x2_t)0x40000000400), 0xBuLL);
  int32x2_t v105 = (int32x2_t)__PAIR64__(v104.u32[1], v63);
  v106.i32[0] = vmla_s32((int32x2_t)0x40000000400, v69, vdup_n_s32(0x6A7u)).u32[0];
  v106.i32[1] = vmul_s32(v69, vdup_n_s32(0xFFFFF959)).i32[1];
  int32x2_t v107 = vshr_n_s32(vadd_s32(v106, v103), 0xBuLL);
  int32x2_t v108 = (int32x2_t)__PAIR64__(v107.u32[1], v65);
  int32x2_t v109 = vdup_lane_s32(v104, 0);
  v109.i32[0] = v64;
  int32x2_t v110 = vdup_lane_s32(v107, 0);
  v110.i32[0] = v66;
  int32x2_t v111 = vsub_s32(v107, v104);
  int32x2_t v112 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v67, v111), (int8x8_t)v67, (int8x8_t)vmin_s32(v111, v68));
  __int32 v113 = v112.i32[1];
  __int32 v114 = ((312 * v112.i32[0] - 1567 * v112.i32[1] + 2048) >> 12) - v112.i32[0];
  int32x2_t v115 = vmul_s32(v112, (int32x2_t)0x1380000061FLL);
  __int32 v116 = ((v115.i32[0] + v115.i32[1] + 2048) >> 12) - v113;
  if (v62) {
    int v117 = a3;
  }
  else {
    int v117 = v96;
  }
  if (v73 + v84 >= a4) {
    int v118 = a4;
  }
  else {
    int v118 = v73 + v84;
  }
  int32x2_t v119 = vadd_s32(v105, v108);
  int8x8_t v120 = vbsl_s8((int8x8_t)vcgt_s32(v67, v119), (int8x8_t)v67, (int8x8_t)vmin_s32(v119, v68));
  if (v73 + v84 >= a3) {
    int v121 = v118;
  }
  else {
    int v121 = a3;
  }
  int v299 = v121;
  if (v120.i32[0] + v120.i32[1] >= a4) {
    int v122 = a4;
  }
  else {
    int v122 = v120.i32[0] + v120.i32[1];
  }
  if (v120.i32[0] + v120.i32[1] >= a3) {
    int v123 = v122;
  }
  else {
    int v123 = a3;
  }
  int v298 = v123;
  if (v97 + v114 >= a4) {
    int v124 = a4;
  }
  else {
    int v124 = v97 + v114;
  }
  if (v97 + v114 >= a3) {
    int v125 = v124;
  }
  else {
    int v125 = a3;
  }
  int v297 = v125;
  if (v99 + v101 >= a4) {
    int v126 = a4;
  }
  else {
    int v126 = v99 + v101;
  }
  int v127 = v99 - v101;
  if (v99 + v101 >= a3) {
    int v128 = v126;
  }
  else {
    int v128 = a3;
  }
  int v296 = v128;
  if (v127 >= a4) {
    int v129 = a4;
  }
  else {
    int v129 = v127;
  }
  int v130 = v97 - v114;
  if (v127 >= a3) {
    int v131 = v129;
  }
  else {
    int v131 = a3;
  }
  int v290 = v131;
  if (v130 >= a4) {
    int v132 = a4;
  }
  else {
    int v132 = v130;
  }
  int v133 = v120.i32[0] - v120.i32[1];
  if (v130 >= a3) {
    int v134 = v132;
  }
  else {
    int v134 = a3;
  }
  int v289 = v134;
  if (v133 >= a4) {
    int v135 = a4;
  }
  else {
    int v135 = v120.i32[0] - v120.i32[1];
  }
  BOOL v62 = v133 < a3;
  int v136 = v73 - v84;
  if (v62) {
    int v137 = a3;
  }
  else {
    int v137 = v135;
  }
  if (v136 >= a4) {
    int v138 = a4;
  }
  else {
    int v138 = v73 - v84;
  }
  if (v136 >= a3) {
    int v139 = v138;
  }
  else {
    int v139 = a3;
  }
  int v291 = v139;
  int v292 = v137;
  if (v117 - v87 >= a4) {
    int v140 = a4;
  }
  else {
    int v140 = v117 - v87;
  }
  int32x2_t v141 = vadd_s32(v109, v110);
  int8x8_t v142 = vbsl_s8((int8x8_t)vcgt_s32(v67, v141), (int8x8_t)v67, (int8x8_t)vmin_s32(v141, v68));
  if (v117 - v87 < a3) {
    int v140 = a3;
  }
  if (v142.i32[0] - v142.i32[1] >= a4) {
    int v143 = a4;
  }
  else {
    int v143 = v142.i32[0] - v142.i32[1];
  }
  if (v142.i32[0] - v142.i32[1] >= a3) {
    int v144 = v143;
  }
  else {
    int v144 = a3;
  }
  int v284 = v144;
  if (v98 - v116 >= a4) {
    int v145 = a4;
  }
  else {
    int v145 = v98 - v116;
  }
  if (v98 - v116 >= a3) {
    int v146 = v145;
  }
  else {
    int v146 = a3;
  }
  int v281 = v146;
  int v147 = v100 - v102;
  if (v100 - v102 >= a4) {
    int v148 = a4;
  }
  else {
    int v148 = v100 - v102;
  }
  int v149 = v100 + v102;
  if (v147 >= a3) {
    int v150 = v148;
  }
  else {
    int v150 = a3;
  }
  if (v149 >= a4) {
    int v151 = a4;
  }
  else {
    int v151 = v149;
  }
  BOOL v62 = v149 < a3;
  int v152 = v98 + v116;
  if (v62) {
    int v153 = a3;
  }
  else {
    int v153 = v151;
  }
  int v283 = v153;
  if (v152 >= a4) {
    int v154 = a4;
  }
  else {
    int v154 = v98 + v116;
  }
  BOOL v62 = v152 < a3;
  int v155 = v142.i32[0] + v142.i32[1];
  if (v62) {
    int v156 = a3;
  }
  else {
    int v156 = v154;
  }
  int v285 = v156;
  if (v155 >= a4) {
    int v157 = a4;
  }
  else {
    int v157 = v142.i32[0] + v142.i32[1];
  }
  int v158 = v87 + v117;
  if (v155 >= a3) {
    int v159 = v157;
  }
  else {
    int v159 = a3;
  }
  int v288 = v159;
  if (v158 >= a4) {
    int v160 = a4;
  }
  else {
    int v160 = v158;
  }
  if (v158 < a3) {
    int v160 = a3;
  }
  int v294 = v160;
  int v295 = *a1;
  int v161 = *a1 + v160;
  if (v161 >= a4) {
    int v162 = a4;
  }
  else {
    int v162 = *a1 + v160;
  }
  uint64_t v163 = 6 * a2;
  uint64_t v164 = 10 * a2;
  uint64_t v274 = 12 * a2;
  uint64_t v275 = 14 * a2;
  uint64_t v165 = 18 * a2;
  uint64_t v166 = 20 * a2;
  uint64_t v276 = 18 * a2;
  uint64_t v277 = 20 * a2;
  uint64_t v167 = 22 * a2;
  uint64_t v278 = 22 * a2;
  uint64_t v168 = 24 * a2;
  uint64_t v280 = 24 * a2;
  uint64_t v169 = 26 * a2;
  uint64_t v282 = 26 * a2;
  uint64_t v170 = 28 * a2;
  uint64_t v286 = 28 * a2;
  uint64_t v171 = 30 * a2;
  uint64_t v293 = 30 * a2;
  uint64_t v172 = a2;
  int v173 = a1[v311];
  int v287 = v173;
  int v174 = a1[v305];
  int v175 = a1[v163];
  int v176 = a1[v18];
  int v279 = v176;
  int v177 = a1[v164];
  int v178 = a1[v274];
  int v270 = a1[v275];
  if (v161 >= a3) {
    int v179 = v162;
  }
  else {
    int v179 = a3;
  }
  int v180 = a1[16 * v172];
  int v271 = a1[v165];
  int v181 = a1[v167];
  int v272 = a1[v166];
  int v273 = a1[v168];
  int v182 = a1[v169];
  int v183 = a1[v170];
  int v184 = a1[v171];
  *a1 = v179;
  int v185 = v159 + v173;
  if (v159 + v173 >= a4) {
    int v186 = a4;
  }
  else {
    int v186 = v159 + v173;
  }
  if (v185 >= a3) {
    int v187 = v186;
  }
  else {
    int v187 = a3;
  }
  a1[v172] = v187;
  if (v156 + v174 >= a4) {
    int v188 = a4;
  }
  else {
    int v188 = v156 + v174;
  }
  if (v156 + v174 >= a3) {
    int v189 = v188;
  }
  else {
    int v189 = a3;
  }
  a1[v311] = v189;
  if (v153 + v175 >= a4) {
    int v190 = a4;
  }
  else {
    int v190 = v153 + v175;
  }
  if (v153 + v175 >= a3) {
    int v191 = v190;
  }
  else {
    int v191 = a3;
  }
  a1[v308] = v191;
  int v312 = 181 * (v150 + v290) + 128;
  int v192 = v176 + (v312 >> 8);
  if (v192 >= a4) {
    int v193 = a4;
  }
  else {
    int v193 = v176 + (v312 >> 8);
  }
  if (v192 >= a3) {
    int v194 = v193;
  }
  else {
    int v194 = a3;
  }
  a1[v305] = v194;
  int v195 = 181 * (v281 + v289) + 128;
  int v196 = v177 + (v195 >> 8);
  if (v196 >= a4) {
    int v197 = a4;
  }
  else {
    int v197 = v177 + (v195 >> 8);
  }
  if (v196 < a3) {
    int v197 = a3;
  }
  a1[v310] = v197;
  int v198 = 181 * (v284 + v292) + 128;
  int v199 = v178 + (v198 >> 8);
  if (v199 >= a4) {
    int v200 = a4;
  }
  else {
    int v200 = v178 + (v198 >> 8);
  }
  if (v199 >= a3) {
    int v201 = v200;
  }
  else {
    int v201 = a3;
  }
  a1[v163] = v201;
  uint64_t result = (181 * (v150 - v290) + 128);
  int v203 = 181 * (v281 - v289) + 128;
  int v204 = 181 * (v284 - v292) + 128;
  int v205 = 181 * (v140 - v291) + 128;
  int v206 = 181 * (v291 + v140) + 128;
  int v207 = v270 + (v206 >> 8);
  if (v207 >= a4) {
    int v208 = a4;
  }
  else {
    int v208 = v270 + (v206 >> 8);
  }
  if (v207 >= a3) {
    int v209 = v208;
  }
  else {
    int v209 = a3;
  }
  a1[v313] = v209;
  int v210 = v180 + (v205 >> 8);
  if (v210 >= a4) {
    int v211 = a4;
  }
  else {
    int v211 = v180 + (v205 >> 8);
  }
  if (v210 >= a3) {
    int v212 = v211;
  }
  else {
    int v212 = a3;
  }
  a1[v18] = v212;
  int v213 = v271 + (v204 >> 8);
  if (v213 >= a4) {
    int v214 = a4;
  }
  else {
    int v214 = v271 + (v204 >> 8);
  }
  if (v213 >= a3) {
    int v215 = v214;
  }
  else {
    int v215 = a3;
  }
  a1[v314] = v215;
  int v216 = v272 + (v203 >> 8);
  if (v216 >= a4) {
    int v217 = a4;
  }
  else {
    int v217 = v272 + (v203 >> 8);
  }
  if (v216 >= a3) {
    int v218 = v217;
  }
  else {
    int v218 = a3;
  }
  a1[v164] = v218;
  int v219 = v181 + ((int)result >> 8);
  if (v219 >= a4) {
    int v220 = a4;
  }
  else {
    int v220 = v181 + ((int)result >> 8);
  }
  if (v219 >= a3) {
    int v221 = v220;
  }
  else {
    int v221 = a3;
  }
  a1[v315] = v221;
  if (v273 + v296 >= a4) {
    int v222 = a4;
  }
  else {
    int v222 = v273 + v296;
  }
  if (v273 + v296 >= a3) {
    int v223 = v222;
  }
  else {
    int v223 = a3;
  }
  a1[v274] = v223;
  if (v297 + v182 >= a4) {
    int v224 = a4;
  }
  else {
    int v224 = v297 + v182;
  }
  if (v297 + v182 >= a3) {
    int v225 = v224;
  }
  else {
    int v225 = a3;
  }
  a1[v316] = v225;
  if (v183 + v298 >= a4) {
    int v226 = a4;
  }
  else {
    int v226 = v183 + v298;
  }
  if (v183 + v298 >= a3) {
    int v227 = v226;
  }
  else {
    int v227 = a3;
  }
  a1[v275] = v227;
  if (v184 + v299 >= a4) {
    int v228 = a4;
  }
  else {
    int v228 = v184 + v299;
  }
  if (v184 + v299 >= a3) {
    int v229 = v228;
  }
  else {
    int v229 = a3;
  }
  a1[v317] = v229;
  if (v184 - v299 >= a4) {
    int v230 = a4;
  }
  else {
    int v230 = v184 - v299;
  }
  if (v184 - v299 >= a3) {
    int v231 = v230;
  }
  else {
    int v231 = a3;
  }
  a1[16 * v172] = v231;
  if (v183 - v298 >= a4) {
    int v232 = a4;
  }
  else {
    int v232 = v183 - v298;
  }
  if (v183 - v298 >= a3) {
    int v233 = v232;
  }
  else {
    int v233 = a3;
  }
  a1[v304] = v233;
  if (v182 - v297 >= a4) {
    int v234 = a4;
  }
  else {
    int v234 = v182 - v297;
  }
  if (v182 - v297 >= a3) {
    int v235 = v234;
  }
  else {
    int v235 = a3;
  }
  a1[v276] = v235;
  if (v273 - v296 >= a4) {
    int v236 = a4;
  }
  else {
    int v236 = v273 - v296;
  }
  if (v273 - v296 >= a3) {
    int v237 = v236;
  }
  else {
    int v237 = a3;
  }
  a1[v303] = v237;
  int v238 = v181 - ((int)result >> 8);
  if (v238 >= a4) {
    int v239 = a4;
  }
  else {
    int v239 = v181 - ((int)result >> 8);
  }
  if (v238 >= a3) {
    int v240 = v239;
  }
  else {
    int v240 = a3;
  }
  a1[v277] = v240;
  int v241 = v272 - (v203 >> 8);
  if (v241 >= a4) {
    int v242 = a4;
  }
  else {
    int v242 = v272 - (v203 >> 8);
  }
  if (v241 >= a3) {
    int v243 = v242;
  }
  else {
    int v243 = a3;
  }
  a1[v306] = v243;
  int v244 = v271 - (v204 >> 8);
  if (v244 >= a4) {
    int v245 = a4;
  }
  else {
    int v245 = v244;
  }
  if (v244 >= a3) {
    int v246 = v245;
  }
  else {
    int v246 = a3;
  }
  a1[v278] = v246;
  int v247 = v180 - (v205 >> 8);
  if (v247 >= a4) {
    int v248 = a4;
  }
  else {
    int v248 = v180 - (v205 >> 8);
  }
  if (v247 >= a3) {
    int v249 = v248;
  }
  else {
    int v249 = a3;
  }
  a1[v300] = v249;
  int v250 = v270 - (v206 >> 8);
  if (v250 >= a4) {
    int v251 = a4;
  }
  else {
    int v251 = v250;
  }
  if (v250 >= a3) {
    int v252 = v251;
  }
  else {
    int v252 = a3;
  }
  a1[v280] = v252;
  int v253 = v178 - (v198 >> 8);
  if (v253 >= a4) {
    int v254 = a4;
  }
  else {
    int v254 = v178 - (v198 >> 8);
  }
  if (v253 >= a3) {
    int v255 = v254;
  }
  else {
    int v255 = a3;
  }
  a1[v307] = v255;
  int v256 = v177 - (v195 >> 8);
  if (v256 >= a4) {
    int v257 = a4;
  }
  else {
    int v257 = v177 - (v195 >> 8);
  }
  if (v256 >= a3) {
    int v258 = v257;
  }
  else {
    int v258 = a3;
  }
  a1[v282] = v258;
  int v259 = v279 - (v312 >> 8);
  if (v259 >= a4) {
    int v260 = a4;
  }
  else {
    int v260 = v279 - (v312 >> 8);
  }
  if (v259 >= a3) {
    int v261 = v260;
  }
  else {
    int v261 = a3;
  }
  a1[v301] = v261;
  if (v175 - v283 >= a4) {
    int v262 = a4;
  }
  else {
    int v262 = v175 - v283;
  }
  if (v175 - v283 >= a3) {
    int v263 = v262;
  }
  else {
    int v263 = a3;
  }
  a1[v286] = v263;
  if (v174 - v285 >= a4) {
    int v264 = a4;
  }
  else {
    int v264 = v174 - v285;
  }
  if (v174 - v285 >= a3) {
    int v265 = v264;
  }
  else {
    int v265 = a3;
  }
  a1[v302] = v265;
  if (v287 - v288 >= a4) {
    int v266 = a4;
  }
  else {
    int v266 = v287 - v288;
  }
  if (v287 - v288 >= a3) {
    int v267 = v266;
  }
  else {
    int v267 = a3;
  }
  a1[v293] = v267;
  if (v295 - v294 >= a4) {
    int v268 = a4;
  }
  else {
    int v268 = v295 - v294;
  }
  if (v295 - v294 >= a3) {
    int v269 = v268;
  }
  else {
    int v269 = a3;
  }
  a1[v309] = v269;
  return result;
}

uint64_t sub_224AB41B0(int *a1, uint64_t a2, int a3, int a4)
{
  sub_224AB338C(a1, 2 * a2, a3, a4, 1);
  int v8 = (const float *)&a1[a2];
  uint64_t v541 = 3 * a2;
  int v9 = (const float *)&a1[3 * a2];
  uint64_t v543 = 5 * a2;
  int v10 = (const float *)&a1[5 * a2];
  uint64_t v539 = 7 * a2;
  uint64_t v536 = 9 * a2;
  uint64_t v545 = 11 * a2;
  unsigned int v11 = (const float *)&a1[11 * a2];
  uint64_t v547 = 13 * a2;
  int v12 = (const float *)&a1[13 * a2];
  uint64_t v549 = 15 * a2;
  int v13 = (const float *)&a1[15 * a2];
  uint64_t v551 = 17 * a2;
  int v14 = (const float *)&a1[17 * a2];
  uint64_t v553 = 19 * a2;
  int v15 = (const float *)&a1[19 * a2];
  uint64_t v555 = 21 * a2;
  unsigned int v16 = (const float *)&a1[21 * a2];
  uint64_t v556 = 23 * a2;
  uint64_t v557 = 25 * a2;
  uint64_t v558 = 27 * a2;
  int v17 = (const float *)&a1[27 * a2];
  uint64_t v559 = 29 * a2;
  uint64_t v18 = (const float *)&a1[29 * a2];
  v19.i32[0] = a1[9 * a2];
  v19.i32[1] = a1[23 * a2];
  uint64_t v538 = 31 * a2;
  int32x2_t v20 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v19, (int32x2_t)0xFFFFF77100000381), 0xCuLL);
  v21.i32[0] = a1[7 * a2];
  v21.i32[1] = a1[25 * a2];
  int32x2_t v22 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v21, (int32x2_t)0x937FFFFFD44), 0xCuLL);
  int32x2_t v23 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v21, (int32x2_t)0xD1500000FC4), 0xCuLL);
  int32x2_t v24 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v19, (int32x2_t)0xD8500000F9CLL), 0xCuLL);
  signed __int32 v25 = vsub_s32(v20, vdup_lane_s32(v20, 1)).u32[0];
  int32x2_t v26 = (int32x2_t)vld1_dup_f32(v9);
  signed __int32 v27 = vsub_s32(v22, vdup_lane_s32(v22, 1)).u32[0];
  int32x2_t v584 = v23;
  int32x2_t v28 = (int32x2_t)vld1_dup_f32(v18);
  signed __int32 v29 = vsub_s32(v23, vdup_lane_s32(v23, 1)).u32[0];
  int32x2_t v30 = (int32x2_t)vld1_dup_f32(v15);
  signed __int32 v31 = vsub_s32(v24, vdup_lane_s32(v24, 1)).u32[0];
  int32x2_t v32 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v26, (int32x2_t)0xFFFFFED300000FF5), 0xCuLL);
  int32x2_t v33 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v28, (int32x2_t)0xA7300000C1ELL), 0xCuLL);
  int32x2_t v34 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v30, (int32x2_t)0xE4BFFFFF8CELL), 0xCuLL);
  int32x2_t v35 = (int32x2_t)vld1_dup_f32(v12);
  int32x2_t v36 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v35, (int32x2_t)0xF3100000505), 0xCuLL);
  int32x2_t v37 = vdup_n_s32(a3);
  int32x2_t v38 = vsub_s32(v32, v33);
  int32x2_t v39 = vdup_n_s32(a4);
  int32x2_t v40 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v38), (int8x8_t)v37, (int8x8_t)vmin_s32(v38, v39));
  int32x2_t v41 = vsub_s32(v36, v34);
  int32x2_t v42 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v41), (int8x8_t)v37, (int8x8_t)vmin_s32(v41, v39));
  int32x2_t v43 = vadd_s32(vmla_lane_s32(vmul_lane_s32((int32x2_t)0xB0FFFFFB5BLL, v40, 1), (int32x2_t)0xFFFFFB5BFFFFFF50, v40, 0), (int32x2_t)0x80000000800);
  int32x2_t v44 = vsub_s32(vshr_n_s32(v43, 0xCuLL), v40);
  int32x2_t v589 = v44;
  int32x2_t v45 = vsra_n_s32(v40, v43, 0xCuLL);
  int32x2_t v587 = vsra_n_s32(v42, vadd_s32(vmla_lane_s32(vmul_n_s32((int32x2_t)0xFFFFFB5BFFFFFF50, v42.i32[0]), (int32x2_t)0xFFFFFF50000004A5, v42, 1), (int32x2_t)0x80000000800), 0xCuLL);
  int32x2_t v46 = vsub_s32((int32x2_t)__PAIR64__(v44.u32[1], v45.u32[0]), v587);
  int32x2_t v47 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v46), (int8x8_t)v37, (int8x8_t)vmin_s32(v46, v39));
  int32x2_t v48 = vdup_n_s32(0xFFFFFB8E);
  int32x2_t v49 = vmul_s32(v47, v48);
  int32x2_t v50 = (int32x2_t)vld1_dup_f32(v11);
  int32x2_t v51 = (int32x2_t)vld1_dup_f32(v16);
  int32x2_t v52 = vdup_n_s32(0x6A7u);
  v53.i32[0] = vmla_s32((int32x2_t)0x40000000400, v47, v52).u32[0];
  int32x2_t v54 = vmul_s32(v47, vdup_n_s32(0xFFFFF959));
  LODWORD(v16) = v47.i32[0];
  int32x2_t v55 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v50, (int32x2_t)0xF6CFFFFFBBCLL), 0xCuLL);
  int32x2_t v56 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v51, (int32x2_t)0xDEC000007E3), 0xCuLL);
  int32x2_t v57 = (int32x2_t)vld1_dup_f32(v17);
  int32x2_t v58 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v57, (int32x2_t)0xFFFFF62800000C9DLL), 0xCuLL);
  int32x2_t v59 = (int32x2_t)vld1_dup_f32(v10);
  int32x2_t v60 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v59, (int32x2_t)0x1F500000FE1), 0xCuLL);
  int32x2_t v61 = vsub_s32(v55, v56);
  int32x2_t v62 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v61), (int8x8_t)v37, (int8x8_t)vmin_s32(v61, v39));
  int32x2_t v63 = vsub_s32(v60, v58);
  int32x2_t v64 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v63), (int8x8_t)v37, (int8x8_t)vmin_s32(v63, v39));
  int32x2_t v65 = vadd_s32(vmla_lane_s32(vmul_lane_s32((int32x2_t)0x1E40000078BLL, v64, 1), (int32x2_t)0x78BFFFFFE1CLL, v64, 0), (int32x2_t)0x80000000800);
  int32x2_t v66 = vsub_s32(vshr_n_s32(v65, 0xCuLL), v64);
  __int32 v583 = v66.i32[1];
  int8x8_t v67 = (int8x8_t)vsra_n_s32(v64, v65, 0xCuLL);
  int32x2_t v68 = vsub_s32(vshr_n_s32(vadd_s32(vmla_lane_s32(vmul_n_s32((int32x2_t)0xFFFFF875000001E4, v62.i32[0]), (int32x2_t)0x1E40000078BLL, v62, 1), (int32x2_t)0x80000000800), 0xCuLL), v62);
  int32x2_t v69 = vsub_s32((int32x2_t)__PAIR64__(v66.u32[1], v67.u32[0]), v68);
  int32x2_t v70 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v69), (int8x8_t)v37, (int8x8_t)vmin_s32(v69, v39));
  int32x2_t v71 = vmul_s32(v70, v52);
  v72.i32[0] = vmla_s32((int32x2_t)0x40000000400, v70, vdup_n_s32(0x472u)).u32[0];
  int32x2_t v73 = vmul_s32(v70, v48);
  LODWORD(v12) = v70.i32[0];
  int32x2_t v74 = vadd_s32(vzip2_s32(v33, v58), vzip2_s32(v32, v60));
  int32x2_t v75 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v74), (int8x8_t)v37, (int8x8_t)vmin_s32(v74, v39));
  int32x2_t v76 = vadd_s32(vzip1_s32(v34, v56), vzip1_s32(v36, v55));
  int32x2_t v77 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v76), (int8x8_t)v37, (int8x8_t)vmin_s32(v76, v39));
  int32x2_t v78 = (const float *)&a1[31 * a2];
  int32x2_t v79 = vadd_s32(vzip2_s32(v34, v56), vzip2_s32(v36, v55));
  int32x2_t v80 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v79), (int8x8_t)v37, (int8x8_t)vmin_s32(v79, v39));
  int32x2_t v81 = vadd_s32(vzip1_s32(v33, v58), vzip1_s32(v32, v60));
  int32x2_t v82 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v81), (int8x8_t)v37, (int8x8_t)vmin_s32(v81, v39));
  int32x2_t v83 = vsub_s32(v75, v77);
  int32x2_t v84 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v83), (int8x8_t)v37, (int8x8_t)vmin_s32(v83, v39));
  int32x2_t v85 = vsub_s32(v82, v80);
  int32x2_t v86 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v85), (int8x8_t)v37, (int8x8_t)vmin_s32(v85, v39));
  int32x2_t v87 = vmla_s32(vmul_s32(v84, (int32x2_t)0xFFFFFB8EFFFFF959), v86, (int32x2_t)0x6A7FFFFFB8ELL);
  int32x2_t v88 = vmla_s32(vmul_s32(v84, (int32x2_t)0x6A7FFFFFB8ELL), v86, (int32x2_t)0x472000006A7);
  int32x2_t v89 = (int32x2_t)vld1_dup_f32(v13);
  int32x2_t v90 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v89, (int32x2_t)0xEEEFFFFFA3ELL), 0xCuLL);
  int32x2_t v91 = (int32x2_t)vld1_dup_f32(v14);
  int32x2_t v92 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v91, (int32x2_t)0xEA10000067CLL), 0xCuLL);
  int32x2_t v93 = (int32x2_t)vld1_dup_f32(v78);
  int32x2_t v94 = vmla_s32((int32x2_t)0x80000000800, v93, (int32x2_t)0xFFFFF4F800000B97);
  int32x2_t v95 = (int32x2_t)vld1_dup_f32(v8);
  int32x2_t v96 = vshr_n_s32(v94, 0xCuLL);
  int32x2_t v97 = vshr_n_s32(vmla_s32((int32x2_t)0x80000000800, v95, (int32x2_t)0x6500000FFFLL), 0xCuLL);
  int32x2_t v98 = vsub_s32(v90, v92);
  int32x2_t v99 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v98), (int8x8_t)v37, (int8x8_t)vmin_s32(v98, v39));
  int32x2_t v100 = vsub_s32(v97, v96);
  int32x2_t v101 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v100), (int8x8_t)v37, (int8x8_t)vmin_s32(v100, v39));
  int32x2_t v102 = vsub_s32(vshr_n_s32(vadd_s32(vmla_lane_s32(vmul_n_s32((int32x2_t)0xFFFFFE6F00000014, v99.i32[0]), (int32x2_t)0x1400000191, v99, 1), (int32x2_t)0x80000000800), 0xCuLL), v99);
  int32x2_t v103 = vadd_s32(vmla_lane_s32(vmul_lane_s32((int32x2_t)0x1400000191, v101, 1), (int32x2_t)0x191FFFFFFECLL, v101, 0), (int32x2_t)0x80000000800);
  int32x2_t v104 = vsub_s32(vshr_n_s32(v103, 0xCuLL), v101);
  int32x2_t v105 = vsra_n_s32(v101, v103, 0xCuLL);
  int32x2_t v106 = vzip1_s32(v105, v45);
  v105.i32[1] = v104.i32[1];
  int32x2_t v107 = vsub_s32(v105, v102);
  v66.i32[0] = vdup_lane_s32(v96, 1).u32[0];
  v66.i32[1] = v22.i32[1];
  int32x2_t v108 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v107), (int8x8_t)v37, (int8x8_t)vmin_s32(v107, v39));
  int32x2_t v109 = vadd_s32(v66, vzip1_s32(vdup_lane_s32(v97, 1), v22));
  int32x2_t v110 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v109), (int8x8_t)v37, (int8x8_t)vmin_s32(v109, v39));
  int32x2_t v111 = vadd_s32((int32x2_t)__PAIR64__(v20.u32[1], v92.u32[0]), vzip1_s32(v90, v20));
  int32x2_t v112 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v111), (int8x8_t)v37, (int8x8_t)vmin_s32(v111, v39));
  v111.i32[0] = vdup_lane_s32(v92, 1).u32[0];
  v111.i32[1] = v24.i32[1];
  int32x2_t v113 = vadd_s32(v111, vzip1_s32(vdup_lane_s32(v90, 1), v24));
  int32x2_t v114 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v113), (int8x8_t)v37, (int8x8_t)vmin_s32(v113, v39));
  v96.i32[1] = v584.i32[1];
  int32x2_t v115 = vadd_s32(v96, vzip1_s32(v97, v584));
  int32x2_t v116 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v115), (int8x8_t)v37, (int8x8_t)vmin_s32(v115, v39));
  int32x2_t v117 = vsub_s32(v110, v112);
  int32x2_t v118 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v117), (int8x8_t)v37, (int8x8_t)vmin_s32(v117, v39));
  int32x2_t v119 = vsub_s32(v116, v114);
  int32x2_t v120 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v119), (int8x8_t)v37, (int8x8_t)vmin_s32(v119, v39));
  int32x2_t v121 = vshr_n_s32(vadd_s32(vmla_s32(vmul_s32(v118, (int32x2_t)0xFFFFFCE10000004FLL), v120, (int32x2_t)0x4F0000031FLL), (int32x2_t)0x80000000800), 0xCuLL);
  int32x2_t v122 = vadd_s32(vmla_s32(vmul_s32(v118, (int32x2_t)0x4F0000031FLL), v120, (int32x2_t)0x31FFFFFFFB1), (int32x2_t)0x80000000800);
  int32x2_t v585 = vsub_s32(vshr_n_s32(v122, 0xCuLL), v118);
  v118.i32[1] = v120.i32[1];
  int32x2_t v123 = vsub_s32(v121, v118);
  int32x2_t v124 = vsra_n_s32(v120, v122, 0xCuLL);
  v53.i32[1] = v54.i32[1];
  v122.i32[0] = vdup_lane_s32(v49, 1).u32[0];
  v122.i32[1] = -1138 * v16 + 1024;
  v72.i32[1] = v73.i32[1];
  v118.i32[0] = vdup_lane_s32(v71, 1).u32[0];
  v118.i32[1] = 1703 * v12 + 1024;
  int32x2_t v125 = vshr_n_s32(vadd_s32(v53, v122), 0xBuLL);
  int32x2_t v126 = vadd_s32(v72, v118);
  int32x2_t v127 = vsub_s32(v125, vshr_n_s32(v126, 0xBuLL));
  int32x2_t v128 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v127), (int8x8_t)v37, (int8x8_t)vmin_s32(v127, v39));
  int32x2_t v129 = vadd_s32(vzip2_s32(v110, v75), vzip2_s32(v112, v77));
  int32x2_t v130 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v129), (int8x8_t)v37, (int8x8_t)vmin_s32(v129, v39));
  int32x2_t v131 = vadd_s32(vzip2_s32(v116, v82), vzip2_s32(v114, v80));
  int32x2_t v132 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v131), (int8x8_t)v37, (int8x8_t)vmin_s32(v131, v39));
  if (v25 >= a4) {
    unsigned int v133 = a4;
  }
  else {
    unsigned int v133 = v25;
  }
  if (v25 < a3) {
    unsigned int v133 = a3;
  }
  if (v27 >= a4) {
    unsigned int v134 = a4;
  }
  else {
    unsigned int v134 = v27;
  }
  if (v27 < a3) {
    unsigned int v134 = a3;
  }
  if (v29 >= a4) {
    unsigned int v135 = a4;
  }
  else {
    unsigned int v135 = v29;
  }
  if (v29 < a3) {
    unsigned int v135 = a3;
  }
  if (v31 >= a4) {
    unsigned int v136 = a4;
  }
  else {
    unsigned int v136 = v31;
  }
  if (v31 < a3) {
    unsigned int v136 = a3;
  }
  int32x2_t v137 = vadd_s32(vzip1_s32(v110, v75), vzip1_s32(v112, v77));
  int32x2_t v138 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v137), (int8x8_t)v37, (int8x8_t)vmin_s32(v137, v39));
  int32x2_t v139 = vadd_s32(vzip1_s32(v116, v82), vzip1_s32(v114, v80));
  int32x2_t v140 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v139), (int8x8_t)v37, (int8x8_t)vmin_s32(v139, v39));
  int32x2_t v141 = vsub_s32(v138, v130);
  int32x2_t v142 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v141), (int8x8_t)v37, (int8x8_t)vmin_s32(v141, v39));
  int32x2_t v143 = vsub_s32(v140, v132);
  int32x2_t v144 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v143), (int8x8_t)v37, (int8x8_t)vmin_s32(v143, v39));
  int32x2_t v145 = vsub_s32(vshr_n_s32(vadd_s32(vmla_s32(vmul_s32(v142, (int32x2_t)0xFFFFF9E100000138), v144, (int32x2_t)0x1380000061FLL), (int32x2_t)0x80000000800), 0xCuLL), (int32x2_t)__PAIR64__(v144.u32[1], v142.u32[0]));
  int32x2_t v146 = vadd_s32(vzip2_s32(v104, v589), vzip2_s32(v102, v587));
  int32x2_t v147 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v146), (int8x8_t)v37, (int8x8_t)vmin_s32(v146, v39));
  int32x2_t v148 = vshr_n_s32(vadd_s32(vmla_s32(vmul_s32(vdup_n_s32(v134), (int32x2_t)0xFFFFFAEDFFFFF9D1), vdup_n_s32(v135), (int32x2_t)0x62FFFFFFAEDLL), (int32x2_t)0x40000000400), 0xBuLL);
  int32x2_t v149 = (int32x2_t)vext_s8((int8x8_t)v148, v67, 4uLL);
  int32x2_t v150 = vshr_n_s32(vadd_s32(vmla_s32(vmul_s32(vdup_n_s32(v133), (int32x2_t)0x62FFFFFFAEDLL), vdup_n_s32(v136), (int32x2_t)0x5130000062FLL), (int32x2_t)0x40000000400), 0xBuLL);
  int32x2_t v151 = vadd_s32(v106, vzip1_s32(v102, v587));
  int32x2_t v152 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v151), (int8x8_t)v37, (int8x8_t)vmin_s32(v151, v39));
  int32x2_t v153 = vsub_s32(v148, v150);
  v148.i32[1] = v583;
  int32x2_t v154 = (int32x2_t)vext_s8((int8x8_t)v150, (int8x8_t)v68, 4uLL);
  v150.i32[1] = v68.i32[1];
  int32x2_t v155 = vadd_s32(v148, v150);
  int32x2_t v156 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v155), (int8x8_t)v37, (int8x8_t)vmin_s32(v155, v39));
  int32x2_t v157 = vadd_s32(v149, v154);
  int32x2_t v158 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v157), (int8x8_t)v37, (int8x8_t)vmin_s32(v157, v39));
  int32x2_t v159 = vsub_s32(v147, v156);
  int32x2_t v160 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v159), (int8x8_t)v37, (int8x8_t)vmin_s32(v159, v39));
  int32x2_t v161 = vsub_s32(v152, v158);
  int32x2_t v162 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v161), (int8x8_t)v37, (int8x8_t)vmin_s32(v161, v39));
  int32x2_t v163 = vshr_n_s32(vadd_s32(vmla_s32(vmul_s32(v160, (int32x2_t)0xFFFFF9E100000138), v162, (int32x2_t)0x1380000061FLL), (int32x2_t)0x80000000800), 0xCuLL);
  int32x2_t v164 = vadd_s32(vmla_s32(vmul_s32(v160, (int32x2_t)0x1380000061FLL), v162, (int32x2_t)0x61FFFFFFEC8), (int32x2_t)0x80000000800);
  int32x2_t v165 = vsub_s32(vshr_n_s32(v164, 0xCuLL), v160);
  v160.i32[1] = v162.i32[1];
  int32x2_t v166 = vsub_s32(v163, v160);
  __int32 v167 = v166.i32[1];
  int32x2_t v168 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v153), (int8x8_t)v37, (int8x8_t)vmin_s32(v153, v39));
  __int32 v169 = v166.i32[0];
  v170.i32[0] = vmla_s32((int32x2_t)0x80000000800, v108, (int32x2_t)0x4E0000004ELL).u32[0];
  v170.i32[1] = vmul_s32(v108, (int32x2_t)0x4F0000004FLL).i32[1];
  unsigned __int32 v171 = vsra_n_s32(v162, v164, 0xCuLL).u32[0];
  int32x2_t v172 = vsub_s32(vshr_n_s32(vadd_s32(vmla_lane_s32(vmul_n_s32((int32x2_t)0xFFFFFCE10000004FLL, v168.i32[0]), (int32x2_t)0x4F0000031FLL, v168, 1), (int32x2_t)0x80000000800), 0xCuLL), v168);
  v166.i32[0] = vdup_lane_s32(vmul_s32(v108, vdup_n_s32(0x31Fu)), 1).u32[0];
  v166.i32[1] = 799 * v108.i32[0] + 2048;
  int32x2_t v173 = vadd_s32(v170, v166);
  int32x2_t v174 = vsub_s32(vshr_n_s32(v173, 0xCuLL), v108);
  v175.i32[0] = vsra_n_s32(v108, v173, 0xCuLL).u32[0];
  v175.i32[1] = v174.i32[1];
  int32x2_t v176 = vsub_s32(v175, v172);
  int32x2_t v177 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v176), (int8x8_t)v37, (int8x8_t)vmin_s32(v176, v39));
  int32x2_t v178 = vadd_s32(vzip2_s32(v138, v140), vzip2_s32(v130, v132));
  int32x2_t v179 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v178), (int8x8_t)v37, (int8x8_t)vmin_s32(v178, v39));
  int32x2_t v180 = vadd_s32(vzip1_s32(v138, v140), vzip1_s32(v130, v132));
  int32x2_t v181 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v180), (int8x8_t)v37, (int8x8_t)vmin_s32(v180, v39));
  int32x2_t v182 = vadd_s32(vzip2_s32(v147, v152), vzip2_s32(v156, v158));
  int32x2_t v183 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v182), (int8x8_t)v37, (int8x8_t)vmin_s32(v182, v39));
  int32x2_t v184 = vadd_s32(vzip1_s32(v147, v152), vzip1_s32(v156, v158));
  int32x2_t v185 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v184), (int8x8_t)v37, (int8x8_t)vmin_s32(v184, v39));
  int32x2_t v186 = vshr_n_s32(vadd_s32(v87, (int32x2_t)0x40000000400), 0xBuLL);
  int32x2_t v187 = vshr_n_s32(vadd_s32(v88, (int32x2_t)0x40000000400), 0xBuLL);
  int32x2_t v188 = vsra_n_s32(v125, v126, 0xBuLL);
  int32x2_t v189 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v188), (int8x8_t)v37, (int8x8_t)vmin_s32(v188, v39));
  int32x2_t v190 = vadd_s32(v175, v172);
  int32x2_t v191 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v190), (int8x8_t)v37, (int8x8_t)vmin_s32(v190, v39));
  int32x2_t v192 = vadd_s32(vzip1_s32(v186, v187), vzip2_s32(v186, v187));
  int32x2_t v193 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v192), (int8x8_t)v37, (int8x8_t)vmin_s32(v192, v39));
  int32x2_t v194 = vzip1_s32(v123, v124);
  int32x2_t v195 = vzip2_s32(v123, v585);
  int32x2_t v196 = vsub_s32(vzip1_s32(v187, v186), vzip2_s32(v187, v186));
  int32x2_t v197 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v196), (int8x8_t)v37, (int8x8_t)vmin_s32(v196, v39));
  int32x2_t v198 = vsub_s32(v194, v195);
  int32x2_t v199 = vcgt_s32(v37, v198);
  int32x2_t v200 = (int32x2_t)vbsl_s8((int8x8_t)v199, (int8x8_t)v37, (int8x8_t)vmin_s32(v198, v39));
  v199.i32[0] = -312;
  int32x2_t v201 = vadd_s32(vmla_s32(vmul_s32(v142, (int32x2_t)0x1380000061FLL), v144, (int32x2_t)0x61FFFFFFEC8), (int32x2_t)0x80000000800);
  int32x2_t v202 = vrev64_s32(v177);
  int32x2_t v203 = vadd_s32(vmla_lane_s32(vmul_lane_s32((int32x2_t)0x138FFFFF9E1, v197, 1), (int32x2_t)0x61F00000138, v197, 0), (int32x2_t)0x80000000800);
  int32x2_t v204 = vadd_s32(vmla_lane_s32(vmul_n_s32((int32x2_t)0x61F00000138, v200.i32[0]), (int32x2_t)0xFFFFFEC80000061FLL, v200, 1), (int32x2_t)0x80000000800);
  int8x8_t v205 = (int8x8_t)vmla_s32((int32x2_t)0x80000000800, v177, v199);
  int32x2_t v206 = vmul_s32(v177, vdup_n_s32(0x61Fu));
  int32x2_t v207 = vadd_s32(v194, v195);
  int32x2_t v208 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v37, v207), (int8x8_t)v37, (int8x8_t)vmin_s32(v207, v39));
  int32x2_t v209 = vdup_n_s32(0x138u);
  int8x8_t v210 = (int8x8_t)vmul_s32(v177, v209);
  __int32 v211 = 1567 * v177.i32[0] + 2048;
  if (v169 + v167 >= a4) {
    int v212 = a4;
  }
  else {
    int v212 = v169 + v167;
  }
  if (v169 + v167 >= a3) {
    int v213 = v212;
  }
  else {
    int v213 = a3;
  }
  int v527 = v213;
  if (v145.i32[0] + v145.i32[1] >= a4) {
    int v214 = a4;
  }
  else {
    int v214 = v145.i32[0] + v145.i32[1];
  }
  if (v145.i32[0] + v145.i32[1] >= a3) {
    int v215 = v214;
  }
  else {
    int v215 = a3;
  }
  int v524 = v215;
  if (v145.i32[0] - v145.i32[1] >= a4) {
    int v216 = a4;
  }
  else {
    int v216 = v145.i32[0] - v145.i32[1];
  }
  if (v145.i32[0] - v145.i32[1] >= a3) {
    int v217 = v216;
  }
  else {
    int v217 = a3;
  }
  int v218 = v169 - v167;
  if (v218 >= a4) {
    int v219 = a4;
  }
  else {
    int v219 = v218;
  }
  int32x2_t v220 = vsub_s32(vshr_n_s32(v203, 0xCuLL), v197);
  v222.i32[0] = vsub_s32(vshr_n_s32(v204, 0xCuLL), v200).u32[0];
  int32x2_t v221 = vsra_n_s32(v200, v204, 0xCuLL);
  v204.i32[0] = 1567;
  v222.i32[1] = v221.i32[1];
  int8x8_t v223 = (int8x8_t)vmla_s32((int32x2_t)0x80000000800, v128, v204);
  int32x2_t v224 = vdup_n_s32(0xFFFFF9E1);
  if (v218 >= a3) {
    int v225 = v219;
  }
  else {
    int v225 = a3;
  }
  int v514 = v225;
  int v515 = v217;
  int32x2_t v226 = (int32x2_t)vext_s8((int8x8_t)vmul_s32(v128, v224), v223, 4uLL);
  int32x2_t v227 = vadd_s32(v181, v179);
  if (v227.i32[0] >= a4) {
    int v228 = a4;
  }
  else {
    int v228 = v227.i32[0];
  }
  if (v227.i32[0] >= a3) {
    int v229 = v228;
  }
  else {
    int v229 = a3;
  }
  int v531 = v229;
  int32x2_t v230 = vmul_s32(v128, v209);
  v230.i32[0] = 312 * v128.i32[0] + 2048;
  int32x2_t v231 = vadd_s32(v226, v230);
  int32x2_t v232 = vadd_s32(v185, v183);
  if (v232.i32[0] >= a4) {
    int v233 = a4;
  }
  else {
    int v233 = v232.i32[0];
  }
  if (v232.i32[0] >= a3) {
    int v234 = v233;
  }
  else {
    int v234 = a3;
  }
  int v529 = v234;
  int32x2_t v235 = (int32x2_t)vext_s8(v210, v205, 4uLL);
  int32x2_t v236 = vadd_s32(v191, v189);
  if (v236.i32[1] >= a4) {
    int v237 = a4;
  }
  else {
    int v237 = v236.i32[1];
  }
  if (v236.i32[1] >= a3) {
    int v238 = v237;
  }
  else {
    int v238 = a3;
  }
  int v526 = v238;
  v206.i32[0] = v211;
  int32x2_t v239 = vadd_s32(v235, v206);
  v235.i32[0] = vsub_s32(vshr_n_s32(v239, 0xCuLL), v202).u32[0];
  int32x2_t v240 = vsra_n_s32(v202, v239, 0xCuLL);
  int32x2_t v241 = vadd_s32(v208, v193);
  if (v241.i32[0] >= a4) {
    int v242 = a4;
  }
  else {
    int v242 = v241.i32[0];
  }
  if (v241.i32[0] >= a3) {
    int v243 = v242;
  }
  else {
    int v243 = a3;
  }
  int v523 = v243;
  v235.i32[1] = v240.i32[1];
  int32x2_t v244 = vadd_s32(v222, v220);
  if (v244.i32[0] >= a4) {
    int v245 = a4;
  }
  else {
    int v245 = v244.i32[0];
  }
  if (v244.i32[0] >= a3) {
    int v246 = v245;
  }
  else {
    int v246 = a3;
  }
  int32x2_t v247 = vsub_s32(vshr_n_s32(v231, 0xCuLL), v128);
  int32x2_t v248 = vadd_s32(v235, v247);
  if (v248.i32[0] >= a4) {
    int v249 = a4;
  }
  else {
    int v249 = v248.i32[0];
  }
  if (v248.i32[0] >= a3) {
    int v250 = v249;
  }
  else {
    int v250 = a3;
  }
  int v520 = v250;
  unsigned int v521 = v246;
  if ((int)(v171 - v165.i32[1]) >= a4) {
    int v251 = a4;
  }
  else {
    int v251 = v171 - v165.i32[1];
  }
  int32x2_t v252 = vsub_s32(vshr_n_s32(v201, 0xCuLL), v142);
  unsigned __int32 v253 = vsra_n_s32(v144, v201, 0xCuLL).u32[0];
  if ((int)(v171 - v165.i32[1]) >= a3) {
    int v254 = v251;
  }
  else {
    int v254 = a3;
  }
  int v511 = v254;
  if ((int)(v253 - v252.i32[1]) >= a4) {
    int v255 = a4;
  }
  else {
    int v255 = v253 - v252.i32[1];
  }
  int v256 = v253 + v252.i32[1];
  if ((int)(v253 - v252.i32[1]) >= a3) {
    int v257 = v255;
  }
  else {
    int v257 = a3;
  }
  int v508 = v257;
  if (v256 >= a4) {
    int v258 = a4;
  }
  else {
    int v258 = v253 + v252.i32[1];
  }
  int v259 = v171 + v165.i32[1];
  if (v256 >= a3) {
    int v260 = v258;
  }
  else {
    int v260 = a3;
  }
  int v588 = v260;
  if (v259 >= a4) {
    int v261 = a4;
  }
  else {
    int v261 = v171 + v165.i32[1];
  }
  if (v259 < a3) {
    int v261 = a3;
  }
  int v590 = v261;
  if (v248.i32[1] >= a4) {
    int v262 = a4;
  }
  else {
    int v262 = v248.i32[1];
  }
  if (v248.i32[1] < a3) {
    int v262 = a3;
  }
  int v586 = v262;
  if (v244.i32[1] >= a4) {
    int v263 = a4;
  }
  else {
    int v263 = v244.i32[1];
  }
  if (v244.i32[1] >= a3) {
    int v264 = v263;
  }
  else {
    int v264 = a3;
  }
  if (v241.i32[1] >= a4) {
    int v265 = a4;
  }
  else {
    int v265 = v241.i32[1];
  }
  if (v241.i32[1] >= a3) {
    int v266 = v265;
  }
  else {
    int v266 = a3;
  }
  if (v236.i32[0] >= a4) {
    int v267 = a4;
  }
  else {
    int v267 = v236.i32[0];
  }
  if (v236.i32[0] >= a3) {
    int v268 = v267;
  }
  else {
    int v268 = a3;
  }
  int v579 = v268;
  int v580 = v266;
  if (v232.i32[1] >= a4) {
    int v269 = a4;
  }
  else {
    int v269 = v232.i32[1];
  }
  if (v232.i32[1] >= a3) {
    int v270 = v269;
  }
  else {
    int v270 = a3;
  }
  int v581 = v270;
  int v582 = v264;
  if (v227.i32[1] >= a4) {
    int v271 = a4;
  }
  else {
    int v271 = v227.i32[1];
  }
  if (v227.i32[1] < a3) {
    int v271 = a3;
  }
  int v534 = v271;
  int v535 = *a1;
  int v272 = v271 + *a1;
  if (v272 >= a4) {
    int v273 = a4;
  }
  else {
    int v273 = v271 + *a1;
  }
  int v505 = v273;
  BOOL v274 = v272 < a3;
  uint64_t v275 = a2;
  uint64_t v485 = 6 * a2;
  uint64_t v487 = 12 * a2;
  uint64_t v276 = 14 * a2;
  uint64_t v277 = 18 * a2;
  uint64_t v490 = 18 * a2;
  uint64_t v560 = 10 * a2;
  uint64_t v562 = 20 * a2;
  uint64_t v278 = 22 * a2;
  uint64_t v494 = 22 * a2;
  uint64_t v279 = 24 * a2;
  uint64_t v496 = 14 * a2;
  uint64_t v498 = 24 * a2;
  uint64_t v280 = 26 * a2;
  uint64_t v502 = 26 * a2;
  uint64_t v564 = 28 * a2;
  uint64_t v281 = 30 * a2;
  uint64_t v507 = 30 * a2;
  uint64_t v567 = 34 * a2;
  uint64_t v282 = 36 * a2;
  uint64_t v283 = 38 * a2;
  uint64_t v509 = 36 * a2;
  uint64_t v510 = 38 * a2;
  uint64_t v284 = 40 * a2;
  uint64_t v285 = 42 * a2;
  uint64_t v512 = 40 * a2;
  uint64_t v513 = 42 * a2;
  uint64_t v286 = 44 * a2;
  uint64_t v287 = 46 * a2;
  uint64_t v516 = 44 * a2;
  uint64_t v517 = 46 * a2;
  uint64_t v288 = 48 * a2;
  uint64_t v289 = 50 * a2;
  uint64_t v518 = 48 * a2;
  uint64_t v519 = 50 * a2;
  uint64_t v290 = 52 * a2;
  uint64_t v522 = 52 * a2;
  uint64_t v291 = 54 * a2;
  uint64_t v525 = 54 * a2;
  uint64_t v292 = 2 * a2;
  int v293 = a1[2 * a2];
  int v533 = v293;
  uint64_t v484 = 4 * a2;
  int v294 = a1[4 * a2];
  int v532 = v294;
  uint64_t v295 = 56 * a2;
  uint64_t v530 = 56 * a2;
  int v296 = a1[6 * a2];
  uint64_t v486 = 8 * a2;
  int v297 = a1[8 * a2];
  int v298 = a1[10 * a2];
  int v528 = v298;
  int v578 = a1[v487];
  int v577 = a1[v276];
  int v575 = a1[v277];
  int v576 = a1[16 * v275];
  int v571 = a1[v562];
  int v570 = a1[v278];
  int v574 = a1[v279];
  int v573 = a1[v280];
  int v572 = a1[v564];
  int v569 = a1[v281];
  int v568 = a1[32 * v275];
  int v566 = a1[v567];
  int v565 = a1[v282];
  int v563 = a1[v283];
  int v489 = a1[v284];
  int v299 = a1[v285];
  int v300 = a1[v287];
  int v492 = a1[v286];
  int v493 = a1[v288];
  int v495 = a1[v289];
  int v499 = a1[v290];
  int v500 = a1[v291];
  int v503 = a1[58 * v275];
  int v504 = a1[v295];
  int v501 = a1[60 * v275];
  if (v274) {
    int v301 = a3;
  }
  else {
    int v301 = v505;
  }
  int v506 = a1[62 * v275];
  *a1 = v301;
  int v302 = v581 + v293;
  if (v581 + v293 >= a4) {
    int v303 = a4;
  }
  else {
    int v303 = v581 + v293;
  }
  if (v302 >= a3) {
    int v304 = v303;
  }
  else {
    int v304 = a3;
  }
  a1[v275] = v304;
  if (v579 + v294 >= a4) {
    int v305 = a4;
  }
  else {
    int v305 = v579 + v294;
  }
  if (v579 + v294 >= a3) {
    int v306 = v305;
  }
  else {
    int v306 = a3;
  }
  a1[v292] = v306;
  if (v580 + v296 >= a4) {
    int v307 = a4;
  }
  else {
    int v307 = v580 + v296;
  }
  if (v580 + v296 >= a3) {
    int v308 = v307;
  }
  else {
    int v308 = a3;
  }
  a1[v541] = v308;
  if (v582 + v297 >= a4) {
    int v309 = a4;
  }
  else {
    int v309 = v582 + v297;
  }
  if (v582 + v297 >= a3) {
    int v310 = v309;
  }
  else {
    int v310 = a3;
  }
  a1[v484] = v310;
  if (v586 + v298 >= a4) {
    int v311 = a4;
  }
  else {
    int v311 = v586 + v298;
  }
  if (v586 + v298 >= a3) {
    int v312 = v311;
  }
  else {
    int v312 = a3;
  }
  a1[v543] = v312;
  if (v590 + v578 >= a4) {
    int v313 = a4;
  }
  else {
    int v313 = v590 + v578;
  }
  if (v590 + v578 >= a3) {
    int v314 = v313;
  }
  else {
    int v314 = a3;
  }
  a1[v485] = v314;
  if (v588 + v577 >= a4) {
    int v315 = a4;
  }
  else {
    int v315 = v588 + v577;
  }
  if (v588 + v577 >= a3) {
    int v316 = v315;
  }
  else {
    int v316 = a3;
  }
  a1[v539] = v316;
  int v544 = 181 * (v515 + v508) + 128;
  int v317 = v576 + (v544 >> 8);
  if (v317 >= a4) {
    int v318 = a4;
  }
  else {
    int v318 = v576 + (v544 >> 8);
  }
  if (v317 >= a3) {
    int v319 = v318;
  }
  else {
    int v319 = a3;
  }
  a1[v486] = v319;
  int v542 = 181 * (v514 + v511) + 128;
  int v320 = v575 + (v542 >> 8);
  if (v320 >= a4) {
    int v321 = a4;
  }
  else {
    int v321 = v575 + (v542 >> 8);
  }
  if (v320 >= a3) {
    int v322 = v321;
  }
  else {
    int v322 = a3;
  }
  a1[v536] = v322;
  int32x2_t v323 = vsub_s32(v235, v247);
  int8x8_t v324 = vbsl_s8((int8x8_t)vcgt_s32(v37, v323), (int8x8_t)v37, (int8x8_t)vmin_s32(v323, v39));
  int v540 = 181 * (v324.i32[0] + v324.i32[1]) + 128;
  int v325 = v571 + (v540 >> 8);
  if (v325 >= a4) {
    int v326 = a4;
  }
  else {
    int v326 = v571 + (v540 >> 8);
  }
  if (v325 >= a3) {
    int v327 = v326;
  }
  else {
    int v327 = a3;
  }
  a1[v560] = v327;
  int32x2_t v328 = vsub_s32(v222, v220);
  int8x8_t v329 = vbsl_s8((int8x8_t)vcgt_s32(v37, v328), (int8x8_t)v37, (int8x8_t)vmin_s32(v328, v39));
  __int32 v330 = v329.i32[1];
  __int32 v331 = v329.i32[0];
  int v561 = 181 * (v329.i32[0] + v329.i32[1]) + 128;
  int v332 = v570 + (v561 >> 8);
  if (v332 >= a4) {
    int v333 = a4;
  }
  else {
    int v333 = v570 + (v561 >> 8);
  }
  if (v332 >= a3) {
    int v334 = v333;
  }
  else {
    int v334 = a3;
  }
  a1[v545] = v334;
  int32x2_t v335 = vsub_s32(v208, v193);
  int8x8_t v336 = vbsl_s8((int8x8_t)vcgt_s32(v37, v335), (int8x8_t)v37, (int8x8_t)vmin_s32(v335, v39));
  __int32 v337 = v336.i32[1];
  __int32 v338 = v336.i32[0];
  int v546 = 181 * (v336.i32[0] + v336.i32[1]) + 128;
  int v339 = v574 + (v546 >> 8);
  if (v339 >= a4) {
    int v340 = a4;
  }
  else {
    int v340 = v574 + (v546 >> 8);
  }
  if (v339 >= a3) {
    int v341 = v340;
  }
  else {
    int v341 = a3;
  }
  a1[v487] = v341;
  int32x2_t v342 = vsub_s32(v191, v189);
  int8x8_t v343 = vbsl_s8((int8x8_t)vcgt_s32(v37, v342), (int8x8_t)v37, (int8x8_t)vmin_s32(v342, v39));
  __int32 v344 = v343.i32[1];
  __int32 v345 = v343.i32[0];
  int v537 = 181 * (v343.i32[1] + v343.i32[0]) + 128;
  int v346 = v573 + (v537 >> 8);
  if (v346 >= a4) {
    int v347 = a4;
  }
  else {
    int v347 = v573 + (v537 >> 8);
  }
  if (v346 >= a3) {
    int v348 = v347;
  }
  else {
    int v348 = a3;
  }
  a1[v547] = v348;
  int32x2_t v349 = vsub_s32(v185, v183);
  int8x8_t v350 = vbsl_s8((int8x8_t)vcgt_s32(v37, v349), (int8x8_t)v37, (int8x8_t)vmin_s32(v349, v39));
  __int32 v351 = v350.i32[1];
  __int32 v352 = v350.i32[0];
  int v548 = 181 * (v350.i32[0] + v350.i32[1]) + 128;
  int v353 = v572 + (v548 >> 8);
  if (v353 >= a4) {
    int v354 = a4;
  }
  else {
    int v354 = v572 + (v548 >> 8);
  }
  if (v353 < a3) {
    int v354 = a3;
  }
  a1[v496] = v354;
  int32x2_t v355 = vsub_s32(v181, v179);
  int8x8_t v356 = vbsl_s8((int8x8_t)vcgt_s32(v37, v355), (int8x8_t)v37, (int8x8_t)vmin_s32(v355, v39));
  int v497 = 181 * (v356.i32[0] + v356.i32[1]) + 128;
  int v357 = v569 + (v497 >> 8);
  if (v357 >= a4) {
    int v358 = a4;
  }
  else {
    int v358 = v569 + (v497 >> 8);
  }
  if (v357 < a3) {
    int v358 = a3;
  }
  a1[v549] = v358;
  int v550 = 181 * (v356.i32[1] - v356.i32[0]) + 128;
  int v359 = v568 + (v550 >> 8);
  if (v359 >= a4) {
    int v360 = a4;
  }
  else {
    int v360 = v568 + (v550 >> 8);
  }
  if (v359 >= a3) {
    int v361 = v360;
  }
  else {
    int v361 = a3;
  }
  a1[16 * v275] = v361;
  int v488 = 181 * (v351 - v352) + 128;
  int v362 = v566 + (v488 >> 8);
  if (v362 >= a4) {
    int v363 = a4;
  }
  else {
    int v363 = v566 + (v488 >> 8);
  }
  if (v362 >= a3) {
    int v364 = v363;
  }
  else {
    int v364 = a3;
  }
  a1[v551] = v364;
  int v552 = 181 * (v345 - v344) + 128;
  int v365 = v565 + (v552 >> 8);
  if (v365 >= a4) {
    int v366 = a4;
  }
  else {
    int v366 = v565 + (v552 >> 8);
  }
  if (v365 >= a3) {
    int v367 = v366;
  }
  else {
    int v367 = a3;
  }
  a1[v490] = v367;
  int v491 = 181 * (v337 - v338) + 128;
  int v368 = v563 + (v491 >> 8);
  if (v368 >= a4) {
    int v369 = a4;
  }
  else {
    int v369 = v563 + (v491 >> 8);
  }
  if (v368 >= a3) {
    int v370 = v369;
  }
  else {
    int v370 = a3;
  }
  a1[v553] = v370;
  int v554 = 181 * (v330 - v331) + 128;
  int v371 = v489 + (v554 >> 8);
  if (v371 >= a4) {
    int v372 = a4;
  }
  else {
    int v372 = v489 + (v554 >> 8);
  }
  if (v371 >= a3) {
    int v373 = v372;
  }
  else {
    int v373 = a3;
  }
  a1[v562] = v373;
  int v374 = 181 * (v324.i32[1] - v324.i32[0]) + 128;
  int v375 = v299;
  int v376 = v299 + (v374 >> 8);
  if (v376 >= a4) {
    int v377 = a4;
  }
  else {
    int v377 = v299 + (v374 >> 8);
  }
  if (v376 >= a3) {
    int v378 = v377;
  }
  else {
    int v378 = a3;
  }
  a1[v555] = v378;
  int v379 = 181 * (v508 - v515) + 128;
  int v380 = 181 * (v511 - v514) + 128;
  int v381 = v492 + (v380 >> 8);
  if (v381 >= a4) {
    int v382 = a4;
  }
  else {
    int v382 = v492 + (v380 >> 8);
  }
  if (v381 >= a3) {
    int v383 = v382;
  }
  else {
    int v383 = a3;
  }
  a1[v494] = v383;
  int v384 = v300 + (v379 >> 8);
  if (v384 >= a4) {
    int v385 = a4;
  }
  else {
    int v385 = v300 + (v379 >> 8);
  }
  if (v384 >= a3) {
    int v386 = v385;
  }
  else {
    int v386 = a3;
  }
  a1[v556] = v386;
  if (v493 + v524 >= a4) {
    int v387 = a4;
  }
  else {
    int v387 = v493 + v524;
  }
  if (v493 + v524 >= a3) {
    int v388 = v387;
  }
  else {
    int v388 = a3;
  }
  a1[v498] = v388;
  if (v495 + v527 >= a4) {
    int v389 = a4;
  }
  else {
    int v389 = v495 + v527;
  }
  if (v495 + v527 >= a3) {
    int v390 = v389;
  }
  else {
    int v390 = a3;
  }
  a1[v557] = v390;
  uint64_t result = v521;
  if (v520 + v499 >= a4) {
    int v392 = a4;
  }
  else {
    int v392 = v520 + v499;
  }
  if (v520 + v499 >= a3) {
    int v393 = v392;
  }
  else {
    int v393 = a3;
  }
  a1[v502] = v393;
  if ((int)(v500 + v521) >= a4) {
    int v394 = a4;
  }
  else {
    int v394 = v500 + v521;
  }
  if ((int)(v500 + v521) >= a3) {
    int v395 = v394;
  }
  else {
    int v395 = a3;
  }
  a1[v558] = v395;
  if (v504 + v523 >= a4) {
    int v396 = a4;
  }
  else {
    int v396 = v504 + v523;
  }
  if (v504 + v523 >= a3) {
    int v397 = v396;
  }
  else {
    int v397 = a3;
  }
  a1[v564] = v397;
  if (v503 + v526 >= a4) {
    int v398 = a4;
  }
  else {
    int v398 = v503 + v526;
  }
  if (v503 + v526 >= a3) {
    int v399 = v398;
  }
  else {
    int v399 = a3;
  }
  a1[v559] = v399;
  if (v501 + v529 >= a4) {
    int v400 = a4;
  }
  else {
    int v400 = v501 + v529;
  }
  if (v501 + v529 >= a3) {
    int v401 = v400;
  }
  else {
    int v401 = a3;
  }
  a1[v507] = v401;
  if (v506 + v531 >= a4) {
    int v402 = a4;
  }
  else {
    int v402 = v506 + v531;
  }
  if (v506 + v531 >= a3) {
    int v403 = v402;
  }
  else {
    int v403 = a3;
  }
  a1[v538] = v403;
  if (v506 - v531 >= a4) {
    int v404 = a4;
  }
  else {
    int v404 = v506 - v531;
  }
  if (v506 - v531 >= a3) {
    int v405 = v404;
  }
  else {
    int v405 = a3;
  }
  a1[32 * v275] = v405;
  if (v501 - v529 >= a4) {
    int v406 = a4;
  }
  else {
    int v406 = v501 - v529;
  }
  if (v501 - v529 >= a3) {
    int v407 = v406;
  }
  else {
    int v407 = a3;
  }
  a1[33 * v275] = v407;
  if (v503 - v526 >= a4) {
    int v408 = a4;
  }
  else {
    int v408 = v503 - v526;
  }
  if (v503 - v526 >= a3) {
    int v409 = v408;
  }
  else {
    int v409 = a3;
  }
  a1[v567] = v409;
  if (v504 - v523 >= a4) {
    int v410 = a4;
  }
  else {
    int v410 = v504 - v523;
  }
  if (v504 - v523 >= a3) {
    int v411 = v410;
  }
  else {
    int v411 = a3;
  }
  a1[35 * v275] = v411;
  if ((int)(v500 - v521) >= a4) {
    int v412 = a4;
  }
  else {
    int v412 = v500 - v521;
  }
  if ((int)(v500 - v521) >= a3) {
    int v413 = v412;
  }
  else {
    int v413 = a3;
  }
  a1[v509] = v413;
  if (v499 - v520 >= a4) {
    int v414 = a4;
  }
  else {
    int v414 = v499 - v520;
  }
  if (v499 - v520 >= a3) {
    int v415 = v414;
  }
  else {
    int v415 = a3;
  }
  a1[37 * v275] = v415;
  if (v495 - v527 >= a4) {
    int v416 = a4;
  }
  else {
    int v416 = v495 - v527;
  }
  if (v495 - v527 >= a3) {
    int v417 = v416;
  }
  else {
    int v417 = a3;
  }
  a1[v510] = v417;
  if (v493 - v524 >= a4) {
    int v418 = a4;
  }
  else {
    int v418 = v493 - v524;
  }
  if (v493 - v524 >= a3) {
    int v419 = v418;
  }
  else {
    int v419 = a3;
  }
  a1[39 * v275] = v419;
  int v420 = v300 - (v379 >> 8);
  if (v420 >= a4) {
    int v421 = a4;
  }
  else {
    int v421 = v300 - (v379 >> 8);
  }
  if (v420 >= a3) {
    int v422 = v421;
  }
  else {
    int v422 = a3;
  }
  a1[v512] = v422;
  int v423 = v492 - (v380 >> 8);
  if (v423 >= a4) {
    int v424 = a4;
  }
  else {
    int v424 = v492 - (v380 >> 8);
  }
  if (v423 >= a3) {
    int v425 = v424;
  }
  else {
    int v425 = a3;
  }
  a1[41 * v275] = v425;
  int v426 = v375 - (v374 >> 8);
  if (v426 >= a4) {
    int v427 = a4;
  }
  else {
    int v427 = v375 - (v374 >> 8);
  }
  if (v426 >= a3) {
    int v428 = v427;
  }
  else {
    int v428 = a3;
  }
  a1[v513] = v428;
  int v429 = v489 - (v554 >> 8);
  if (v429 >= a4) {
    int v430 = a4;
  }
  else {
    int v430 = v489 - (v554 >> 8);
  }
  if (v429 >= a3) {
    int v431 = v430;
  }
  else {
    int v431 = a3;
  }
  a1[43 * v275] = v431;
  int v432 = v563 - (v491 >> 8);
  if (v432 >= a4) {
    int v433 = a4;
  }
  else {
    int v433 = v563 - (v491 >> 8);
  }
  if (v432 >= a3) {
    int v434 = v433;
  }
  else {
    int v434 = a3;
  }
  a1[v516] = v434;
  int v435 = v565 - (v552 >> 8);
  if (v435 >= a4) {
    int v436 = a4;
  }
  else {
    int v436 = v565 - (v552 >> 8);
  }
  if (v435 >= a3) {
    int v437 = v436;
  }
  else {
    int v437 = a3;
  }
  a1[45 * v275] = v437;
  int v438 = v566 - (v488 >> 8);
  if (v438 >= a4) {
    int v439 = a4;
  }
  else {
    int v439 = v566 - (v488 >> 8);
  }
  if (v438 >= a3) {
    int v440 = v439;
  }
  else {
    int v440 = a3;
  }
  a1[v517] = v440;
  int v441 = v568 - (v550 >> 8);
  if (v441 >= a4) {
    int v442 = a4;
  }
  else {
    int v442 = v568 - (v550 >> 8);
  }
  if (v441 >= a3) {
    int v443 = v442;
  }
  else {
    int v443 = a3;
  }
  a1[47 * v275] = v443;
  int v444 = v569 - (v497 >> 8);
  if (v444 >= a4) {
    int v445 = a4;
  }
  else {
    int v445 = v569 - (v497 >> 8);
  }
  if (v444 >= a3) {
    int v446 = v445;
  }
  else {
    int v446 = a3;
  }
  a1[v518] = v446;
  int v447 = v572 - (v548 >> 8);
  if (v447 >= a4) {
    int v448 = a4;
  }
  else {
    int v448 = v572 - (v548 >> 8);
  }
  if (v447 >= a3) {
    int v449 = v448;
  }
  else {
    int v449 = a3;
  }
  a1[49 * v275] = v449;
  int v450 = v573 - (v537 >> 8);
  if (v450 >= a4) {
    int v451 = a4;
  }
  else {
    int v451 = v573 - (v537 >> 8);
  }
  if (v450 >= a3) {
    int v452 = v451;
  }
  else {
    int v452 = a3;
  }
  a1[v519] = v452;
  int v453 = v574 - (v546 >> 8);
  if (v453 >= a4) {
    int v454 = a4;
  }
  else {
    int v454 = v574 - (v546 >> 8);
  }
  if (v453 >= a3) {
    int v455 = v454;
  }
  else {
    int v455 = a3;
  }
  a1[51 * v275] = v455;
  int v456 = v570 - (v561 >> 8);
  if (v456 >= a4) {
    int v457 = a4;
  }
  else {
    int v457 = v570 - (v561 >> 8);
  }
  if (v456 >= a3) {
    int v458 = v457;
  }
  else {
    int v458 = a3;
  }
  a1[v522] = v458;
  int v459 = v571 - (v540 >> 8);
  if (v459 >= a4) {
    int v460 = a4;
  }
  else {
    int v460 = v571 - (v540 >> 8);
  }
  if (v459 >= a3) {
    int v461 = v460;
  }
  else {
    int v461 = a3;
  }
  a1[53 * v275] = v461;
  int v462 = v575 - (v542 >> 8);
  if (v462 >= a4) {
    int v463 = a4;
  }
  else {
    int v463 = v575 - (v542 >> 8);
  }
  if (v462 >= a3) {
    int v464 = v463;
  }
  else {
    int v464 = a3;
  }
  a1[v525] = v464;
  int v465 = v576 - (v544 >> 8);
  if (v465 >= a4) {
    int v466 = a4;
  }
  else {
    int v466 = v576 - (v544 >> 8);
  }
  if (v465 >= a3) {
    int v467 = v466;
  }
  else {
    int v467 = a3;
  }
  a1[55 * v275] = v467;
  if (v577 - v588 >= a4) {
    int v468 = a4;
  }
  else {
    int v468 = v577 - v588;
  }
  if (v577 - v588 >= a3) {
    int v469 = v468;
  }
  else {
    int v469 = a3;
  }
  a1[v530] = v469;
  if (v578 - v590 >= a4) {
    int v470 = a4;
  }
  else {
    int v470 = v578 - v590;
  }
  if (v578 - v590 >= a3) {
    int v471 = v470;
  }
  else {
    int v471 = a3;
  }
  a1[57 * v275] = v471;
  if (v528 - v586 >= a4) {
    int v472 = a4;
  }
  else {
    int v472 = v528 - v586;
  }
  if (v528 - v586 >= a3) {
    int v473 = v472;
  }
  else {
    int v473 = a3;
  }
  a1[58 * v275] = v473;
  if (v297 - v582 >= a4) {
    int v474 = a4;
  }
  else {
    int v474 = v297 - v582;
  }
  if (v297 - v582 >= a3) {
    int v475 = v474;
  }
  else {
    int v475 = a3;
  }
  a1[59 * v275] = v475;
  if (v296 - v580 >= a4) {
    int v476 = a4;
  }
  else {
    int v476 = v296 - v580;
  }
  if (v296 - v580 >= a3) {
    int v477 = v476;
  }
  else {
    int v477 = a3;
  }
  a1[60 * v275] = v477;
  if (v532 - v579 >= a4) {
    int v478 = a4;
  }
  else {
    int v478 = v532 - v579;
  }
  if (v532 - v579 >= a3) {
    int v479 = v478;
  }
  else {
    int v479 = a3;
  }
  a1[61 * v275] = v479;
  if (v533 - v581 >= a4) {
    int v480 = a4;
  }
  else {
    int v480 = v533 - v581;
  }
  if (v533 - v581 >= a3) {
    int v481 = v480;
  }
  else {
    int v481 = a3;
  }
  a1[62 * v275] = v481;
  if (v535 - v534 >= a4) {
    int v482 = a4;
  }
  else {
    int v482 = v535 - v534;
  }
  if (v535 - v534 >= a3) {
    int v483 = v482;
  }
  else {
    int v483 = a3;
  }
  a1[63 * v275] = v483;
  return result;
}

uint64_t sub_224AB5B04(int *a1, uint64_t a2)
{
  return sub_224AB5B10(a1, a2, a1, a2);
}

uint64_t sub_224AB5B10(int *a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  int v4 = *a1;
  int v5 = a1[a2];
  int v6 = a1[2 * a2];
  int v7 = a1[3 * a2];
  int v8 = -752 * v5 + 2048;
  *a3 = v6 + v5 + v7 + ((v8 + 1321 * *a1 - 293 * v6 - 1614 * v7) >> 12);
  a3[a4] = v5 + v4 - v7 + ((v8 - 1614 * v4 - 1321 * v6 + 293 * v7) >> 12);
  uint64_t result = 8 * a4;
  a3[2 * a4] = (209 * (v4 - v6 + v7) + 128) >> 8;
  a3[3 * a4] = v4 - v5 + v6 + ((752 * v5 - 293 * v4 - 1614 * v6 - 1321 * v7 + 2048) >> 12);
  return result;
}

uint64_t sub_224AB5BD0(int *a1, uint64_t a2)
{
  return sub_224AB5B10(a1, a2, &a1[3 * a2], -a2);
}

uint64_t sub_224AB5BE0(int *a1, uint64_t a2, int a3, int a4)
{
  return sub_224AB5BEC(a1, a2, a3, a4, a1, a2);
}

uint64_t sub_224AB5BEC(int *a1, uint64_t a2, int a3, int a4, _DWORD *a5, uint64_t a6)
{
  int v6 = a1[a2];
  int v7 = a1[2 * a2];
  int v8 = a1[3 * a2];
  int v9 = a1[4 * a2];
  int v10 = a1[5 * a2];
  int v11 = a1[6 * a2];
  int v12 = *a1;
  int v13 = a1[7 * a2];
  int v14 = v13 + ((-20 * v13 + 401 * v12 + 2048) >> 12);
  int v15 = ((401 * v13 + 20 * v12 + 2048) >> 12) - v12;
  int v16 = v10 + ((-484 * v10 + 1931 * v7 + 2048) >> 12);
  int v17 = ((1931 * v10 + 484 * v7 + 2048) >> 12) - v7;
  int v18 = 1583 * v9 + 1299 * v8 + 1024;
  int v19 = -1299 * v9 + 1583 * v8 + 1024;
  int v20 = v11 + ((-176 * v11 + 1189 * v6 + 2048) >> 12);
  int v21 = v6 + ((-1189 * v11 - 176 * v6 + 2048) >> 12);
  int v22 = v14 + (v18 >> 11);
  if (v22 >= a4) {
    int v23 = a4;
  }
  else {
    int v23 = v14 + (v18 >> 11);
  }
  if (v22 >= a3) {
    int v24 = v23;
  }
  else {
    int v24 = a3;
  }
  int v25 = v15 + (v19 >> 11);
  if (v25 >= a4) {
    int v26 = a4;
  }
  else {
    int v26 = v15 + (v19 >> 11);
  }
  if (v25 >= a3) {
    int v27 = v26;
  }
  else {
    int v27 = a3;
  }
  if (v20 + v16 >= a4) {
    int v28 = a4;
  }
  else {
    int v28 = v20 + v16;
  }
  if (v20 + v16 >= a3) {
    int v29 = v28;
  }
  else {
    int v29 = a3;
  }
  if (v21 + v17 >= a4) {
    int v30 = a4;
  }
  else {
    int v30 = v21 + v17;
  }
  if (v21 + v17 >= a3) {
    int v31 = v30;
  }
  else {
    int v31 = a3;
  }
  int v32 = v14 - (v18 >> 11);
  if (v32 >= a4) {
    int v33 = a4;
  }
  else {
    int v33 = v32;
  }
  if (v32 >= a3) {
    int v34 = v33;
  }
  else {
    int v34 = a3;
  }
  int v35 = v15 - (v19 >> 11);
  if (v35 >= a4) {
    int v36 = a4;
  }
  else {
    int v36 = v35;
  }
  if (v35 >= a3) {
    int v37 = v36;
  }
  else {
    int v37 = a3;
  }
  int v38 = v16 - v20;
  if (v38 >= a4) {
    int v39 = a4;
  }
  else {
    int v39 = v38;
  }
  if (v38 >= a3) {
    int v40 = v39;
  }
  else {
    int v40 = a3;
  }
  int v41 = v17 - v21;
  if (v41 >= a4) {
    int v42 = a4;
  }
  else {
    int v42 = v41;
  }
  if (v41 >= a3) {
    int v43 = v42;
  }
  else {
    int v43 = a3;
  }
  int v44 = v34 + ((-312 * v34 + 1567 * v37 + 2048) >> 12);
  uint64_t result = (((312 * v37 + 1567 * v34 + 2048) >> 12) - v37);
  int v46 = v43 + ((-1567 * v40 - 312 * v43 + 2048) >> 12);
  int v47 = v40 + ((1567 * v43 - 312 * v40 + 2048) >> 12);
  if (v24 + v29 >= a4) {
    int v48 = a4;
  }
  else {
    int v48 = v24 + v29;
  }
  if (v24 + v29 >= a3) {
    int v49 = v48;
  }
  else {
    int v49 = a3;
  }
  *a5 = v49;
  if (v27 + v31 >= a4) {
    int v50 = a4;
  }
  else {
    int v50 = v27 + v31;
  }
  if (v27 + v31 >= a3) {
    int v51 = v50;
  }
  else {
    int v51 = a3;
  }
  a5[7 * a6] = -v51;
  int v52 = v24 - v29;
  if (v24 - v29 >= a4) {
    int v53 = a4;
  }
  else {
    int v53 = v24 - v29;
  }
  if (v52 >= a3) {
    int v54 = v53;
  }
  else {
    int v54 = a3;
  }
  int v55 = v27 - v31;
  if (v27 - v31 >= a4) {
    int v56 = a4;
  }
  else {
    int v56 = v27 - v31;
  }
  if (v55 >= a3) {
    int v57 = v56;
  }
  else {
    int v57 = a3;
  }
  if (v44 + v46 >= a4) {
    int v58 = a4;
  }
  else {
    int v58 = v44 + v46;
  }
  if (v44 + v46 >= a3) {
    int v59 = v58;
  }
  else {
    int v59 = a3;
  }
  a5[a6] = -v59;
  if ((int)result + v47 >= a4) {
    int v60 = a4;
  }
  else {
    int v60 = result + v47;
  }
  if ((int)result + v47 >= a3) {
    int v61 = v60;
  }
  else {
    int v61 = a3;
  }
  a5[6 * a6] = v61;
  if (v44 - v46 >= a4) {
    int v62 = a4;
  }
  else {
    int v62 = v44 - v46;
  }
  if (v44 - v46 >= a3) {
    int v63 = v62;
  }
  else {
    int v63 = a3;
  }
  if ((int)result - v47 >= a4) {
    int v64 = a4;
  }
  else {
    int v64 = result - v47;
  }
  if ((int)result - v47 >= a3) {
    int v65 = v64;
  }
  else {
    int v65 = a3;
  }
  a5[3 * a6] = -((181 * (v54 + v57) + 128) >> 8);
  a5[4 * a6] = (181 * (v54 - v57) + 128) >> 8;
  a5[2 * a6] = (181 * (v63 + v65) + 128) >> 8;
  a5[5 * a6] = -((181 * (v63 - v65) + 128) >> 8);
  return result;
}

uint64_t sub_224AB5F00(int *a1, uint64_t a2, int a3, int a4)
{
  return sub_224AB5BEC(a1, a2, a3, a4, &a1[7 * a2], -a2);
}

uint64_t sub_224AB5F10(__int32 *a1, uint64_t a2, signed int a3, signed int a4)
{
  return sub_224AB5F1C(a1, a2, a3, a4, a1, a2);
}

uint64_t sub_224AB5F1C(__int32 *a1, uint64_t a2, signed int a3, signed int a4, signed int *a5, uint64_t a6)
{
  unsigned int v6 = a1[a2];
  unsigned int v7 = a1[2 * a2];
  __int32 v8 = a1[3 * a2];
  unsigned int v9 = a1[4 * a2];
  unsigned int v10 = a1[5 * a2];
  unsigned int v11 = a1[7 * a2];
  int v12 = (const float *)&a1[6 * a2];
  unsigned int v13 = a1[8 * a2];
  int v14 = (const float *)&a1[9 * a2];
  __int32 v15 = a1[10 * a2];
  unsigned int v16 = a1[11 * a2];
  unsigned int v17 = a1[12 * a2];
  unsigned int v18 = a1[13 * a2];
  unsigned int v19 = a1[14 * a2];
  unsigned int v20 = a1[15 * a2];
  __int32 v21 = *a1;
  __int32 v22 = v11 + ((int)(-2751 * v13 - 1061 * v11 + 2048) >> 12);
  int32x2_t v23 = (int32x2_t)__PAIR64__(v9, v11);
  __int32 v24 = ((int)(1751 * v16 + 393 * v9 + 2048) >> 12) - v9;
  __int32 v25 = ((int)(5 * v21 + 201 * v20 + 2048) >> 12) - v21;
  if (v25 + v22 >= a4) {
    signed int v26 = a4;
  }
  else {
    signed int v26 = v25 + v22;
  }
  int32x2_t v27 = (int32x2_t)__PAIR64__(v16, v13);
  v28.i32[0] = v21;
  __int32 v29 = v8 + ((int)(-1380 * v17 - 239 * v8 + 2048) >> 12);
  if (v25 + v22 >= a3) {
    signed int v30 = v26;
  }
  else {
    signed int v30 = a3;
  }
  v28.i32[1] = v8;
  int32x2_t v31 = vsra_n_s32(v27, vadd_s32(vmla_s32(vmul_s32(v27, (int32x2_t)0xFFFFFE77FFFFFBDBLL), v23, (int32x2_t)0x6D700000ABFLL), (int32x2_t)0x80000000800), 0xCuLL);
  int32x2_t v32 = vsra_n_s32((int32x2_t)__PAIR64__(v17, v20), vadd_s32(vmla_s32(vmul_s32((int32x2_t)__PAIR64__(v17, v20), (int32x2_t)0xFFFFFF11FFFFFFFBLL), v28, (int32x2_t)0x564000000C9), (int32x2_t)0x80000000800), 0xCuLL);
  int32x2_t v33 = vadd_s32(v32, v31);
  int32x2_t v34 = vdup_n_s32(a3);
  int32x2_t v35 = vdup_n_s32(a4);
  int32x2_t v36 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v34, v33), (int8x8_t)v34, (int8x8_t)vmin_s32(v33, v35));
  if (v29 + v24 >= a4) {
    signed int v37 = a4;
  }
  else {
    signed int v37 = v29 + v24;
  }
  if (v29 + v24 >= a3) {
    signed int v38 = v37;
  }
  else {
    signed int v38 = a3;
  }
  signed __int32 v39 = vsub_s32(v36, vdup_lane_s32(v36, 1)).u32[0];
  if (v39 >= a4) {
    signed int v40 = a4;
  }
  else {
    signed int v40 = v39;
  }
  if (v39 >= a3) {
    signed int v41 = v40;
  }
  else {
    signed int v41 = a3;
  }
  if (v30 - v38 >= a4) {
    signed int v42 = a4;
  }
  else {
    signed int v42 = v30 - v38;
  }
  if (v30 - v38 < a3) {
    signed int v42 = a3;
  }
  int v43 = v41 + ((-312 * v41 + 1567 * v42 + 2048) >> 12);
  int v44 = ((312 * v42 + 1567 * v41 + 2048) >> 12) - v42;
  int32x2_t v45 = (int32x2_t)vld1_dup_f32(v14);
  int32x2_t v46 = (int32x2_t)vld1_dup_f32(v12);
  int32x2_t v47 = vmla_s32(vmul_s32(v45, (int32x2_t)0x4C40000066DLL), v46, (int32x2_t)0xFFFFF993000004C4);
  int32x2_t v48 = vadd_s32(v47, (int32x2_t)0x40000000400);
  v47.i32[0] = v15;
  int32x2_t v49 = vadd_s32(vmla_s32(vmul_s32((int32x2_t)__PAIR64__(v18, v15), (int32x2_t)0x3E3FFFFFDB9), (int32x2_t)__PAIR64__(v7, v10), (int32x2_t)0x7B0000083ALL), (int32x2_t)0x80000000800);
  v50.i32[0] = vsra_n_s32(v47, v49, 0xCuLL).u32[0];
  v50.i32[1] = vsub_s32(vshr_n_s32(v49, 0xCuLL), (int32x2_t)__PAIR64__(v7, v15)).i32[1];
  int32x2_t v51 = vsra_n_s32((int32x2_t)__PAIR64__(v10, v18), vadd_s32(vmla_s32(vmul_s32((int32x2_t)__PAIR64__(v15, v18), (int32x2_t)0xFFFFF7C6FFFFFF85), (int32x2_t)__PAIR64__(v10, v7), (int32x2_t)0xFFFFFDB9000003E3), (int32x2_t)0x80000000800), 0xCuLL);
  int32x2_t v52 = vsra_n_s32((int32x2_t)__PAIR64__(v6, v19), vadd_s32(vmla_s32(vmul_s32(vdup_n_s32(v19), (int32x2_t)0xFFFFFDA7FFFFFFD4), vdup_n_s32(v6), (int32x2_t)0xFFFFFFD400000259), (int32x2_t)0x80000000800), 0xCuLL);
  int32x2_t v53 = vadd_s32(v51, v50);
  int32x2_t v54 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v34, v53), (int8x8_t)v34, (int8x8_t)vmin_s32(v53, v35));
  int32x2_t v55 = vsra_n_s32(v52, v48, 0xBuLL);
  int32x2_t v56 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v34, v55), (int8x8_t)v34, (int8x8_t)vmin_s32(v55, v35));
  int32x2_t v57 = vadd_s32(vzip1_s32(v36, v56), (int32x2_t)vext_s8((int8x8_t)v36, (int8x8_t)v54, 4uLL));
  int8x8_t v58 = vbsl_s8((int8x8_t)vcgt_s32(v34, v57), (int8x8_t)v34, (int8x8_t)vmin_s32(v57, v35));
  int32x2_t v59 = vsub_s32(v54, v56);
  v56.i32[0] = v30;
  v54.i32[0] = v38;
  int32x2_t v60 = vadd_s32(v56, v54);
  int8x8_t v61 = vbsl_s8((int8x8_t)vcgt_s32(v34, v60), (int8x8_t)v34, (int8x8_t)vmin_s32(v60, v35));
  int32x2_t v62 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v34, v59), (int8x8_t)v34, (int8x8_t)vmin_s32(v59, v35));
  int v63 = v62.i32[1] + ((-1567 * v62.i32[0] - 312 * v62.i32[1] + 2048) >> 12);
  __int32 v64 = v58.i32[1];
  __int32 v65 = v58.i32[0];
  if (v58.i32[0] + v58.i32[1] >= a4) {
    signed int v66 = a4;
  }
  else {
    signed int v66 = v58.i32[0] + v58.i32[1];
  }
  if (v58.i32[0] + v58.i32[1] >= a3) {
    signed int v67 = v66;
  }
  else {
    signed int v67 = a3;
  }
  *a5 = v67;
  __int32 v68 = v61.i32[1];
  __int32 v69 = v61.i32[0];
  if (v61.i32[0] + v61.i32[1] >= a4) {
    signed int v70 = a4;
  }
  else {
    signed int v70 = v61.i32[0] + v61.i32[1];
  }
  int32x2_t v71 = vmul_s32(v62, (int32x2_t)0x61FFFFFFEC8);
  if (v61.i32[0] + v61.i32[1] >= a3) {
    signed int v72 = v70;
  }
  else {
    signed int v72 = a3;
  }
  a5[15 * a6] = -v72;
  __int32 v73 = v62.i32[0] + ((v71.i32[0] + v71.i32[1] + 2048) >> 12);
  v71.i32[0] = v25;
  v62.i32[0] = v22;
  int32x2_t v74 = vzip1_s32(v62, v31);
  v31.i32[0] = v24;
  int32x2_t v75 = vsub_s32(vshr_n_s32(v48, 0xBuLL), v52);
  int32x2_t v76 = vsub_s32(vzip1_s32(v71, v32), v74);
  int32x2_t v77 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v34, v76), (int8x8_t)v34, (int8x8_t)vmin_s32(v76, v35));
  v32.i32[0] = v29;
  int32x2_t v78 = vsub_s32(v31, v32);
  int32x2_t v79 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v34, v78), (int8x8_t)v34, (int8x8_t)vmin_s32(v78, v35));
  int32x2_t v80 = vrev64_s32(v77);
  int32x2_t v81 = vadd_s32(vmla_s32(vmul_s32(v80, (int32x2_t)0x4FFFFFFFB1), v77, vdup_n_s32(0x31Fu)), (int32x2_t)0x80000000800);
  int32x2_t v82 = vsub_s32(vshr_n_s32(v81, 0xCuLL), v80);
  int32x2_t v83 = vsra_n_s32(v80, v81, 0xCuLL);
  int32x2_t v84 = vrev64_s32(v75);
  int32x2_t v85 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v34, v84), (int8x8_t)v34, (int8x8_t)vmin_s32(v84, v35));
  int32x2_t v86 = vrev64_s32(v85);
  int32x2_t v87 = vadd_s32(vmla_s32(vmul_s32(v86, (int32x2_t)0xFFFFFD4E000002B2), v85, vdup_n_s32(0x8E4u)), (int32x2_t)0x80000000800);
  int32x2_t v88 = vsub_s32(vshr_n_s32(v87, 0xCuLL), v86);
  int32x2_t v89 = vzip1_s32(v83, v88);
  v83.i32[1] = v82.i32[1];
  int32x2_t v90 = vsra_n_s32(v79, vadd_s32(vmla_s32(vrev64_s32(vmul_s32(v79, (int32x2_t)0xFFFFFCE10000031FLL)), v79, (int32x2_t)0x4E0000004ELL), (int32x2_t)0x80000000800), 0xCuLL);
  int32x2_t v91 = vsub_s32(v83, v90);
  int32x2_t v92 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v34, v91), (int8x8_t)v34, (int8x8_t)vmin_s32(v91, v35));
  int32x2_t v93 = vmul_s32(v92, (int32x2_t)0x1380000061FLL);
  int32x2_t v94 = vsub_s32((int32x2_t)vext_s8((int8x8_t)v50, (int8x8_t)v51, 4uLL), (int32x2_t)vext_s8((int8x8_t)v51, (int8x8_t)v50, 4uLL));
  int32x2_t v95 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v34, v94), (int8x8_t)v34, (int8x8_t)vmin_s32(v94, v35));
  int32x2_t v96 = vsra_n_s32(v95, vadd_s32(vmla_s32(vrev64_s32(vmul_s32(v95, (int32x2_t)0x8E4FFFFF71CLL)), v95, vdup_n_s32(0xFFFFFD4E)), (int32x2_t)0x80000000800), 0xCuLL);
  int32x2_t v97 = vsra_n_s32(v86, v87, 0xCuLL);
  v88.i32[1] = v97.i32[1];
  int32x2_t v98 = vadd_s32(v89, vzip1_s32(v90, v96));
  int8x8_t v99 = vbsl_s8((int8x8_t)vcgt_s32(v34, v98), (int8x8_t)v34, (int8x8_t)vmin_s32(v98, v35));
  int32x2_t v100 = vadd_s32(vzip2_s32(v82, v97), vzip2_s32(v90, v96));
  int8x8_t v101 = vbsl_s8((int8x8_t)vcgt_s32(v34, v100), (int8x8_t)v34, (int8x8_t)vmin_s32(v100, v35));
  int32x2_t v102 = vsub_s32(v96, v88);
  int32x2_t v103 = (int32x2_t)vbsl_s8((int8x8_t)vcgt_s32(v34, v102), (int8x8_t)v34, (int8x8_t)vmin_s32(v102, v35));
  int32x2_t v104 = vmla_s32(vmul_s32(vzip1_s32(v92, v103), (int32x2_t)0xFFFFF9E1FFFFFEC8), vzip2_s32(v92, v103), (int32x2_t)0xFFFFFEC80000061FLL);
  int32x2_t v105 = (int32x2_t)vext_s8((int8x8_t)v92, (int8x8_t)v103, 4uLL);
  v92.i32[1] = v103.i32[1];
  int32x2_t v106 = vsra_n_s32(v92, vadd_s32(v104, (int32x2_t)0x80000000800), 0xCuLL);
  int32x2_t v107 = vmul_s32(v103, (int32x2_t)0x61FFFFFFEC8);
  int32x2_t v108 = vadd_s32(vadd_s32(vzip1_s32(v93, v107), vzip2_s32(v93, v107)), (int32x2_t)0x80000000800);
  unsigned __int32 v109 = vsub_s32(vshr_n_s32(v108, 0xCuLL), v105).u32[0];
  signed int v110 = v65 - v64;
  if (v110 >= a4) {
    signed int v111 = a4;
  }
  else {
    signed int v111 = v110;
  }
  if (v110 >= a3) {
    signed int v112 = v111;
  }
  else {
    signed int v112 = a3;
  }
  if (v69 - v68 >= a4) {
    signed int v113 = a4;
  }
  else {
    signed int v113 = v69 - v68;
  }
  if (v69 - v68 >= a3) {
    signed int v114 = v113;
  }
  else {
    signed int v114 = a3;
  }
  if (v43 + v63 >= a4) {
    signed int v115 = a4;
  }
  else {
    signed int v115 = v43 + v63;
  }
  if (v43 + v63 >= a3) {
    signed int v116 = v115;
  }
  else {
    signed int v116 = a3;
  }
  a5[3 * a6] = -v116;
  if (v44 + v73 >= a4) {
    signed int v117 = a4;
  }
  else {
    signed int v117 = v44 + v73;
  }
  if (v44 + v73 >= a3) {
    signed int v118 = v117;
  }
  else {
    signed int v118 = a3;
  }
  a5[12 * a6] = v118;
  int32x2_t v119 = vsra_n_s32(v105, v108, 0xCuLL);
  if (v43 - v63 >= a4) {
    signed int v120 = a4;
  }
  else {
    signed int v120 = v43 - v63;
  }
  if (v43 - v63 >= a3) {
    signed int v121 = v120;
  }
  else {
    signed int v121 = a3;
  }
  signed int v122 = v44 - v73;
  if (v122 >= a4) {
    signed int v123 = a4;
  }
  else {
    signed int v123 = v122;
  }
  if (v122 < a3) {
    signed int v123 = a3;
  }
  if (v99.i32[0] + v99.i32[1] >= a4) {
    signed int v124 = a4;
  }
  else {
    signed int v124 = v99.i32[0] + v99.i32[1];
  }
  if (v99.i32[0] + v99.i32[1] >= a3) {
    signed int v125 = v124;
  }
  else {
    signed int v125 = a3;
  }
  a5[a6] = -v125;
  if (v101.i32[0] + v101.i32[1] >= a4) {
    signed int v126 = a4;
  }
  else {
    signed int v126 = v101.i32[0] + v101.i32[1];
  }
  if (v101.i32[0] + v101.i32[1] >= a3) {
    signed int v127 = v126;
  }
  else {
    signed int v127 = a3;
  }
  a5[14 * a6] = v127;
  if (v99.i32[0] - v99.i32[1] >= a4) {
    signed int v128 = a4;
  }
  else {
    signed int v128 = v99.i32[0] - v99.i32[1];
  }
  if (v99.i32[0] - v99.i32[1] >= a3) {
    signed int v129 = v128;
  }
  else {
    signed int v129 = a3;
  }
  if (v101.i32[0] - v101.i32[1] >= a4) {
    signed int v130 = a4;
  }
  else {
    signed int v130 = v101.i32[0] - v101.i32[1];
  }
  if (v101.i32[0] - v101.i32[1] >= a3) {
    signed int v131 = v130;
  }
  else {
    signed int v131 = a3;
  }
  if (v106.i32[0] + v106.i32[1] >= a4) {
    signed int v132 = a4;
  }
  else {
    signed int v132 = v106.i32[0] + v106.i32[1];
  }
  if (v106.i32[0] + v106.i32[1] >= a3) {
    signed int v133 = v132;
  }
  else {
    signed int v133 = a3;
  }
  a5[2 * a6] = v133;
  if ((int)(v109 + v119.i32[1]) >= a4) {
    signed int v134 = a4;
  }
  else {
    signed int v134 = v109 + v119.i32[1];
  }
  if ((int)(v109 + v119.i32[1]) >= a3) {
    signed int v135 = v134;
  }
  else {
    signed int v135 = a3;
  }
  a5[13 * a6] = -v135;
  uint64_t result = -((181 * (v112 + v114) + 128) >> 8);
  a5[7 * a6] = result;
  a5[8 * a6] = (181 * (v112 - v114) + 128) >> 8;
  a5[4 * a6] = (181 * (v121 + v123) + 128) >> 8;
  a5[11 * a6] = -((181 * (v121 - v123) + 128) >> 8);
  a5[6 * a6] = (181 * (v129 + v131) + 128) >> 8;
  a5[9 * a6] = -((181 * (v129 - v131) + 128) >> 8);
  if (v106.i32[0] - v106.i32[1] >= a4) {
    signed int v137 = a4;
  }
  else {
    signed int v137 = v106.i32[0] - v106.i32[1];
  }
  signed int v138 = v109 - v119.i32[1];
  if (v106.i32[0] - v106.i32[1] < a3) {
    signed int v137 = a3;
  }
  if (v138 >= a4) {
    signed int v139 = a4;
  }
  else {
    signed int v139 = v109 - v119.i32[1];
  }
  if (v138 >= a3) {
    signed int v140 = v139;
  }
  else {
    signed int v140 = a3;
  }
  a5[5 * a6] = -((181 * (v137 + v140) + 128) >> 8);
  a5[10 * a6] = (181 * (v137 - v140) + 128) >> 8;
  return result;
}

uint64_t sub_224AB6708(__int32 *a1, uint64_t a2, signed int a3, signed int a4)
{
  return sub_224AB5F1C(a1, a2, a3, a4, &a1[15 * a2], -a2);
}

_DWORD *sub_224AB6718(_DWORD *result, uint64_t a2)
{
  uint64_t v2 = 4;
  do
  {
    *result += (1697 * *result + 2048) >> 12;
    result += a2;
    --v2;
  }
  while (v2);
  return result;
}

_DWORD *sub_224AB6748(_DWORD *result, uint64_t a2)
{
  uint64_t v2 = 8;
  do
  {
    *result *= 2;
    result += a2;
    --v2;
  }
  while (v2);
  return result;
}

_DWORD *sub_224AB676C(_DWORD *result, uint64_t a2)
{
  uint64_t v2 = 16;
  do
  {
    *uint64_t result = ((1697 * *result + 1024) >> 11) + 2 * *result;
    result += a2;
    --v2;
  }
  while (v2);
  return result;
}

_DWORD *sub_224AB67A0(_DWORD *result, uint64_t a2)
{
  uint64_t v2 = 32;
  do
  {
    *result *= 4;
    result += a2;
    --v2;
  }
  while (v2);
  return result;
}

uint64_t sub_224AB67C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 64, 64, 2, (uint64_t)sub_224AB41B0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB41B0, 1);
}

uint64_t sub_224AB680C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(_DWORD *, uint64_t, uint64_t, uint64_t), int a10)
{
  uint64_t result = MEMORY[0x270FA5388]();
  int32x2_t v51 = v17;
  unsigned int v18 = v12;
  unsigned int v19 = (unsigned __int8 *)result;
  uint64_t v53 = *MEMORY[0x263EF8340];
  BOOL v21 = v15 == 2 * v14 || v14 == 2 * v15;
  if (v13 >= a10)
  {
    unsigned int v47 = (1 << v16) >> 1;
    char v48 = v16;
    uint64_t v49 = v11;
    uint64_t v27 = 0;
    int v50 = v15;
    if (v15 >= 32) {
      uint64_t v28 = 32;
    }
    else {
      uint64_t v28 = v15;
    }
    if ((int)v14 >= 32) {
      uint64_t v29 = 32;
    }
    else {
      uint64_t v29 = v14;
    }
    uint64_t v45 = v14;
    unsigned int v46 = v14;
    uint64_t v30 = 4 * v14;
    int32x2_t v31 = v52;
    BOOL v32 = v21;
    do
    {
      uint64_t v33 = 0;
      uint64_t v34 = v27;
      if (v21)
      {
        do
        {
          v31[v33++] = (181 * v18[v34] + 128) >> 8;
          v34 += v28;
        }
        while (v29 != v33);
      }
      else
      {
        do
        {
          v31[v33++] = v18[v34];
          v34 += v28;
        }
        while (v29 != v33);
      }
      v51(v31, 1, 4294934528, 0x7FFFLL);
      ++v27;
      int32x2_t v31 = (_DWORD *)((char *)v31 + v30);
      LOBYTE(v21) = v32;
    }
    while (v27 != v28);
    bzero(v18, (2 * v29 * v28));
    uint64_t v35 = 0;
    do
    {
      int v36 = (int)(v52[v35] + v47) >> v48;
      if (v36 >= 0x7FFF) {
        int v36 = 0x7FFF;
      }
      if (v36 <= -32768) {
        int v36 = -32768;
      }
      v52[v35++] = v36;
    }
    while (v28 * v46 != v35);
    signed int v37 = v52;
    uint64_t v38 = v45;
    do
    {
      uint64_t result = a9(v37++, v45, 4294934528, 0x7FFFLL);
      --v38;
    }
    while (v38);
    int v39 = 0;
    signed int v40 = v52;
    do
    {
      signed int v41 = v19;
      uint64_t v42 = v45;
      do
      {
        int v43 = *v40++;
        int v44 = *v41 + ((v43 + 8) >> 4);
        if (v44 >= 255) {
          int v44 = 255;
        }
        *v41++ = v44 & ~(v44 >> 31);
        --v42;
      }
      while (v42);
      ++v39;
      v19 += v49;
    }
    while (v39 != v50);
  }
  else
  {
    int v22 = 0;
    int v23 = *v12;
    *int v12 = 0;
    if (v21) {
      int v23 = (181 * v23 + 128) >> 8;
    }
    int v24 = (181 * ((int)(((1 << v16) >> 1) + ((181 * v23 + 128) >> 8)) >> v16) + 2176) >> 12;
    do
    {
      uint64_t v25 = 0;
      do
      {
        int v26 = v24 + v19[v25];
        if (v26 >= 255) {
          int v26 = 255;
        }
        v19[v25++] = v26 & ~(v26 >> 31);
      }
      while (v14 != v25);
      ++v22;
      v19 += v11;
    }
    while (v22 != v15);
  }
  return result;
}

uint64_t sub_224AB6AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 64, 32, 1, (uint64_t)sub_224AB41B0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB3384, 1);
}

uint64_t sub_224AB6B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 64, 16, 2, (uint64_t)sub_224AB41B0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 1);
}

uint64_t sub_224AB6B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 32, 64, 1, (uint64_t)sub_224AB3384, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB41B0, 1);
}

uint64_t sub_224AB6BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 32, 32, 2, (uint64_t)sub_224AB67A0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB67A0, 0);
}

uint64_t sub_224AB6C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 32, 32, 2, (uint64_t)sub_224AB3384, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB3384, 1);
}

uint64_t sub_224AB6C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 32, 16, 1, (uint64_t)sub_224AB67A0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB676C, 0);
}

uint64_t sub_224AB6CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 32, 16, 1, (uint64_t)sub_224AB3384, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 1);
}

uint64_t sub_224AB6D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 32, 8, 2, (uint64_t)sub_224AB67A0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB6D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 32, 8, 2, (uint64_t)sub_224AB3384, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 1);
}

uint64_t sub_224AB6DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 64, 2, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB41B0, 1);
}

uint64_t sub_224AB6E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 32, 1, (uint64_t)sub_224AB676C, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB67A0, 0);
}

uint64_t sub_224AB6E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 32, 1, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB3384, 1);
}

uint64_t sub_224AB6EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 16, 2, (uint64_t)sub_224AB676C, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 0);
}

uint64_t sub_224AB6F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 16, 2, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB676C, 0);
}

uint64_t sub_224AB6F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 16, 2, (uint64_t)sub_224AB6708, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6708, 0);
}

uint64_t sub_224AB6F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 16, 2, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6708, 0);
}

uint64_t sub_224AB6FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 16, 2, (uint64_t)sub_224AB6708, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 0);
}

uint64_t sub_224AB7038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 16, 2, (uint64_t)sub_224AB5F10, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6708, 0);
}

uint64_t sub_224AB7088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 16, 2, (uint64_t)sub_224AB6708, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F10, 0);
}

uint64_t sub_224AB70D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 16, 2, (uint64_t)sub_224AB5F10, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F10, 0);
}

uint64_t sub_224AB711C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 16, 2, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F10, 0);
}

uint64_t sub_224AB716C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 16, 2, (uint64_t)sub_224AB5F10, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 0);
}

uint64_t sub_224AB71BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 16, 2, (uint64_t)sub_224AB676C, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB676C, 0);
}

uint64_t sub_224AB7200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 16, 2, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 1);
}

uint64_t sub_224AB7248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB676C, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BE0, 0);
}

uint64_t sub_224AB7298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB5F10, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB72E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB676C, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F00, 0);
}

uint64_t sub_224AB7338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB6708, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB7388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB676C, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 0);
}

uint64_t sub_224AB73D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB7428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB6708, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F00, 0);
}

uint64_t sub_224AB7478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F00, 0);
}

uint64_t sub_224AB74C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB6708, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 0);
}

uint64_t sub_224AB7518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB5F10, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F00, 0);
}

uint64_t sub_224AB7568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB6708, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BE0, 0);
}

uint64_t sub_224AB75B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB5F10, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BE0, 0);
}

uint64_t sub_224AB7608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BE0, 0);
}

uint64_t sub_224AB7658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB5F10, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 0);
}

uint64_t sub_224AB76A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB676C, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB76F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 8, 1, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 1);
}

uint64_t sub_224AB774C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB676C, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5B04, 0);
}

uint64_t sub_224AB779C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB5F10, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6718, 0);
}

uint64_t sub_224AB77EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB676C, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BD0, 0);
}

uint64_t sub_224AB783C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB6708, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6718, 0);
}

uint64_t sub_224AB788C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB676C, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2AA8, 0);
}

uint64_t sub_224AB78DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6718, 0);
}

uint64_t sub_224AB792C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB6708, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BD0, 0);
}

uint64_t sub_224AB797C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BD0, 0);
}

uint64_t sub_224AB79CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB6708, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2AA8, 0);
}

uint64_t sub_224AB7A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB5F10, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BD0, 0);
}

uint64_t sub_224AB7A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB6708, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5B04, 0);
}

uint64_t sub_224AB7ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB5F10, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5B04, 0);
}

uint64_t sub_224AB7B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5B04, 0);
}

uint64_t sub_224AB7B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB5F10, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2AA8, 0);
}

uint64_t sub_224AB7BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB676C, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6718, 0);
}

uint64_t sub_224AB7BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 16, 4, 1, (uint64_t)sub_224AB2E24, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2AA8, 1);
}

uint64_t sub_224AB7C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 32, 2, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB67A0, 0);
}

uint64_t sub_224AB7CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 32, 2, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB3384, 1);
}

uint64_t sub_224AB7CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F10, 0);
}

uint64_t sub_224AB7D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB5BE0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB676C, 0);
}

uint64_t sub_224AB7D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6708, 0);
}

uint64_t sub_224AB7DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB5F00, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB676C, 0);
}

uint64_t sub_224AB7E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 0);
}

uint64_t sub_224AB7E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB676C, 0);
}

uint64_t sub_224AB7ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB5F00, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6708, 0);
}

uint64_t sub_224AB7F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6708, 0);
}

uint64_t sub_224AB7F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB5F00, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 0);
}

uint64_t sub_224AB7FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB5BE0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6708, 0);
}

uint64_t sub_224AB8014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB5F00, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F10, 0);
}

uint64_t sub_224AB8064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB5BE0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F10, 0);
}

uint64_t sub_224AB80B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F10, 0);
}

uint64_t sub_224AB8104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB5BE0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 0);
}

uint64_t sub_224AB8154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB676C, 0);
}

uint64_t sub_224AB81A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 16, 1, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 1);
}

uint64_t sub_224AB81F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BE0, 0);
}

uint64_t sub_224AB8248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB5BE0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB8298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F00, 0);
}

uint64_t sub_224AB82E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB5F00, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB8338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 0);
}

uint64_t sub_224AB8388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB83D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB5F00, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F00, 0);
}

uint64_t sub_224AB841C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F00, 0);
}

uint64_t sub_224AB846C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB5F00, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 0);
}

uint64_t sub_224AB84BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB5BE0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F00, 0);
}

uint64_t sub_224AB850C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB5F00, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BE0, 0);
}

uint64_t sub_224AB855C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB5BE0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BE0, 0);
}

uint64_t sub_224AB85A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BE0, 0);
}

uint64_t sub_224AB85F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB5BE0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 0);
}

uint64_t sub_224AB8640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB8684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 8, 1, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 1);
}

uint64_t sub_224AB86CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5B04, 0);
}

uint64_t sub_224AB871C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB5BE0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6718, 0);
}

uint64_t sub_224AB876C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BD0, 0);
}

uint64_t sub_224AB87BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB5F00, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6718, 0);
}

uint64_t sub_224AB880C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2AA8, 0);
}

uint64_t sub_224AB885C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6718, 0);
}

uint64_t sub_224AB88AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB5F00, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BD0, 0);
}

uint64_t sub_224AB88FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BD0, 0);
}

uint64_t sub_224AB894C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB5F00, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2AA8, 0);
}

uint64_t sub_224AB899C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB5BE0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BD0, 0);
}

uint64_t sub_224AB89EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB5F00, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5B04, 0);
}

uint64_t sub_224AB8A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB5BE0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5B04, 0);
}

uint64_t sub_224AB8A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5B04, 0);
}

uint64_t sub_224AB8ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB5BE0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2AA8, 0);
}

uint64_t sub_224AB8B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB6748, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6718, 0);
}

uint64_t sub_224AB8B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 8, 4, 0, (uint64_t)sub_224AB2BC0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2AA8, 1);
}

uint64_t sub_224AB8BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB6718, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F10, 0);
}

uint64_t sub_224AB8C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB5B04, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB676C, 0);
}

uint64_t sub_224AB8C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB6718, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6708, 0);
}

uint64_t sub_224AB8CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB5BD0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB676C, 0);
}

uint64_t sub_224AB8D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB6718, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 0);
}

uint64_t sub_224AB8D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB2AA8, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB676C, 0);
}

uint64_t sub_224AB8DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB5BD0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6708, 0);
}

uint64_t sub_224AB8E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB2AA8, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6708, 0);
}

uint64_t sub_224AB8E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB5BD0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 0);
}

uint64_t sub_224AB8EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB5B04, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6708, 0);
}

uint64_t sub_224AB8EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB5BD0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F10, 0);
}

uint64_t sub_224AB8F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB5B04, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F10, 0);
}

uint64_t sub_224AB8F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB2AA8, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F10, 0);
}

uint64_t sub_224AB8FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB5B04, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 0);
}

uint64_t sub_224AB9030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB6718, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB676C, 0);
}

uint64_t sub_224AB9080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 16, 1, (uint64_t)sub_224AB2AA8, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2E24, 1);
}

uint64_t sub_224AB90D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB6718, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BE0, 0);
}

uint64_t sub_224AB9124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB5B04, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB9174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB6718, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F00, 0);
}

uint64_t sub_224AB91C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB5BD0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB9214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB6718, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 0);
}

uint64_t sub_224AB9264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB2AA8, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB92B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB5BD0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F00, 0);
}

uint64_t sub_224AB9304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB2AA8, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F00, 0);
}

uint64_t sub_224AB9354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB5BD0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 0);
}

uint64_t sub_224AB93A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB5B04, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5F00, 0);
}

uint64_t sub_224AB93F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB5BD0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BE0, 0);
}

uint64_t sub_224AB9444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB5B04, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BE0, 0);
}

uint64_t sub_224AB9494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB2AA8, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BE0, 0);
}

uint64_t sub_224AB94E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB5B04, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 0);
}

uint64_t sub_224AB9534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB6718, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6748, 0);
}

uint64_t sub_224AB9584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 8, 0, (uint64_t)sub_224AB2AA8, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2BC0, 1);
}

uint64_t sub_224AB95D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB6718, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5B04, 0);
}

uint64_t sub_224AB9628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB5B04, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6718, 0);
}

uint64_t sub_224AB9678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB6718, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BD0, 0);
}

uint64_t sub_224AB96C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB5BD0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6718, 0);
}

uint64_t sub_224AB9718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB6718, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2AA8, 0);
}

uint64_t sub_224AB9768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB2AA8, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6718, 0);
}

uint64_t sub_224AB97B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB5BD0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BD0, 0);
}

uint64_t sub_224AB97FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB2AA8, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BD0, 0);
}

uint64_t sub_224AB984C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB5BD0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2AA8, 0);
}

uint64_t sub_224AB989C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB5B04, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5BD0, 0);
}

uint64_t sub_224AB98EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB5BD0, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5B04, 0);
}

uint64_t sub_224AB993C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB5B04, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5B04, 0);
}

uint64_t sub_224AB9980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB2AA8, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB5B04, 0);
}

uint64_t sub_224AB99D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB5B04, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2AA8, 0);
}

uint64_t sub_224AB9A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB6718, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB6718, 0);
}

uint64_t sub_224AB9A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_224AB680C(a1, a2, a3, a4, 4, 4, 0, (uint64_t)sub_224AB2AA8, (uint64_t (*)(_DWORD *, uint64_t, uint64_t, uint64_t))sub_224AB2AA8, 1);
}

uint64_t sub_224AB9AAC(uint64_t result, uint64_t a2, _OWORD *a3)
{
  uint64_t v3 = 0;
  uint64_t v29 = *MEMORY[0x263EF8340];
  int v4 = &v25;
  int v5 = a3;
  do
  {
    for (uint64_t i = 0; i != 4; ++i)
      v4->i32[i] = *((__int16 *)v5 + i * 4) >> 2;
    __int32 v7 = v4->i32[1];
    __int32 v8 = v4->i32[3];
    __int32 v9 = v7 + v4->i32[0];
    __int32 v10 = v4->i32[2] - v8;
    int v11 = (v9 - v10) >> 1;
    __int32 v12 = v11 - v8;
    __int32 v13 = v11 - v7;
    v4->i32[0] = v9 - v12;
    v4->i32[1] = v12;
    v4->i32[2] = v13;
    v4->i32[3] = v13 + v10;
    ++v3;
    ++v4;
    int v5 = (_OWORD *)((char *)v5 + 2);
  }
  while (v3 != 4);
  int v14 = 0;
  *a3 = 0u;
  a3[1] = 0u;
  int32x4_t v15 = vaddq_s32(v26, v25);
  int32x4_t v16 = vsubq_s32(v27, v28);
  int32x4_t v17 = vshrq_n_s32(vsubq_s32(v15, v16), 1uLL);
  int32x4_t v18 = vsubq_s32(v17, v28);
  int32x4_t v19 = vsubq_s32(v17, v26);
  int32x4_t v25 = vsubq_s32(v15, v18);
  int32x4_t v26 = v18;
  int32x4_t v27 = v19;
  int32x4_t v28 = vaddq_s32(v19, v16);
  unsigned int v20 = &v25;
  do
  {
    uint64_t v21 = -4;
    do
    {
      __int32 v22 = v20->i32[0];
      unsigned int v20 = (int32x4_t *)((char *)v20 + 4);
      int v23 = v22 + *(unsigned __int8 *)(result + v21 + 4);
      if (v23 >= 255) {
        int v23 = 255;
      }
      *(unsigned char *)(result + v21 + 4) = v23 & ~(v23 >> 31);
    }
    while (!__CFADD__(v21++, 1));
    ++v14;
    result += a2;
  }
  while (v14 != 4);
  return result;
}

uint64_t sub_224AB9BE0(uint64_t result, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  int v10 = a3;
  v60[138] = *MEMORY[0x263EF8340];
  BOOL v12 = a7 != 0;
  int v13 = *(_DWORD *)(result + 2440);
  uint64_t v14 = *(void *)(result + 24);
  if (a7) {
    ++v14;
  }
  char v15 = v13 == 1 && a7 != 0;
  signed int v16 = 1 << *(unsigned char *)(v14 + 880);
  unsigned int v17 = 8u >> v15;
  if (!a3) {
    unsigned int v17 = 0;
  }
  unsigned int v18 = v17 + a3;
  if (a3 <= 0) {
    int v19 = 2;
  }
  else {
    int v19 = 6;
  }
  int v20 = v18 & -v16;
  if (v20 + (v16 >> 1) <= a5) {
    signed int v21 = 0;
  }
  else {
    signed int v21 = v16;
  }
  int v22 = v20 - v21;
  if ((v18 & -v16) != 0) {
    int v23 = v22;
  }
  else {
    int v23 = 0;
  }
  uint64_t v24 = *(void *)(result + 8 * v12 + 2416);
  uint64_t v25 = (v16 + (v16 >> 1));
  if (v12 && v13 != 3) {
    uint64_t v26 = 6;
  }
  else {
    uint64_t v26 = 7;
  }
  int v27 = (v23 << v15 >> 7) * *(_DWORD *)(result + 3476);
  unint64_t v28 = ((v23 << v15) >> 5) & 2;
  v60[0] = *(void *)(result + 4448)
         + 108 * v27
         + 36 * v7
         + (((v23 << v15) >> 5) & 2 | (16 * ((v28 >> 1) & 1)));
  v60[1] = 0;
  BOOL v29 = *(unsigned char *)v60[0] != 0;
  if ((int)v25 > a4)
  {
    int v30 = 0;
    uint64_t v31 = 0;
    if (!*(unsigned char *)v60[0]) {
      return result;
    }
    return sub_224AB9F10(result, a2, (uint64_t)&v60[68 * (v31 == 0) + 2], v30, v10, v7, a4 - v30, a6, (char *)v60[v31], v19 & 0xFFFFFFFD);
  }
  uint64_t v31 = 0;
  int v32 = 0;
  char v33 = v26 - 1;
  uint64_t v34 = v16;
  int v35 = a6 - v10;
  uint64_t v36 = v19 | 1u;
  unsigned int v49 = a6 - v10 + 1;
  int v50 = a6 - v10;
  uint64_t v48 = v16 - 4;
  unsigned int v58 = v7;
  signed int v56 = v16;
  int v54 = v27;
  int v55 = v10;
  int v53 = ((v23 << v15) >> 5) & 2;
  char v52 = v26 - 1;
  uint64_t v51 = v16;
  do
  {
    int v30 = v32 + v16;
    signed int v37 = (unsigned __int8 *)(*(void *)(result + 4448)
                            + 108 * ((v30 >> v26) + v27)
                            + 36 * v58
                            + ((v30 >> v33) & 1 | v28 | (8
                                                                                   * ((v30 >> v33) & 1 | v28))));
    v60[v31 == 0] = v37;
    LODWORD(v37) = *v37;
    BOOL v59 = v37 != 0;
    if (v37) {
      BOOL v38 = v35 < 1;
    }
    else {
      BOOL v38 = 1;
    }
    if (!v38)
    {
      int v39 = &v60[68 * v31 + 2];
      uint64_t v40 = v48;
      unsigned int v41 = v49;
      do
      {
        *v39++ = *(_DWORD *)(a2 + v40);
        --v41;
        v40 += v24;
      }
      while (v41 > 1);
    }
    if (v29)
    {
      int v57 = v32 + v16;
      uint64_t v42 = result;
      uint64_t v43 = a6;
      uint64_t v44 = v7;
      uint64_t v45 = v25;
      uint64_t v46 = v36;
      uint64_t v47 = v26;
      sub_224AB9F10(result, a2, (uint64_t)&v60[68 * (v31 == 0) + 2], v32, v10, v7, v16, a6, (char *)v60[v31], v19);
      LODWORD(v28) = v53;
      int v27 = v54;
      int v10 = v55;
      uint64_t v26 = v47;
      uint64_t v36 = v46;
      int v35 = v50;
      uint64_t v25 = v45;
      uint64_t result = v42;
      int v30 = v57;
      uint64_t v7 = v44;
      uint64_t v34 = v51;
      a6 = v43;
      char v33 = v52;
      signed int v16 = v56;
    }
    a2 += v34;
    v31 ^= 1uLL;
    int v32 = v30;
    BOOL v29 = v59;
    int v19 = v36;
  }
  while ((int)v25 + v30 <= a4);
  int v19 = v36;
  if (v59) {
    return sub_224AB9F10(result, a2, (uint64_t)&v60[68 * (v31 == 0) + 2], v30, v10, v7, a4 - v30, a6, (char *)v60[v31], v19 & 0xFFFFFFFD);
  }
  return result;
}

uint64_t sub_224AB9F10(uint64_t result, uint64_t a2, uint64_t a3, int a4, int a5, unsigned int a6, unsigned int a7, int a8, char *a9, int a10)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v13 = *(void *)(result + 3280);
  char v14 = a6 != 0 && *(_DWORD *)(result + 2440) == 1;
  uint64_t v15 = *(void *)(result + 8 * (a6 != 0) + 2416);
  int v16 = 8 << v14;
  if (v14) {
    char v17 = 5;
  }
  else {
    char v17 = 6;
  }
  if (!a5) {
    int v16 = 0;
  }
  char v18 = *(unsigned char *)(*(void *)(result + 8) + 392);
  int v19 = (v16 + a5) >> (v17 + v18);
  uint64_t v43 = result;
  uint64_t v20 = *(void *)(result + 8 * a6 + 5264);
  int v21 = 4 << v18;
  if (a5) {
    unsigned int v22 = 64;
  }
  else {
    unsigned int v22 = 56;
  }
  int v23 = v19 * v21 - 4;
  if (*(_DWORD *)(*(void *)(result + 3256) + 24) <= 1u) {
    int v23 = 0;
  }
  if ((int)(v22 >> v14) >= a8 - a5) {
    uint64_t v24 = (a8 - a5);
  }
  else {
    uint64_t v24 = v22 >> v14;
  }
  long long v45 = 0u;
  long long v46 = 0u;
  int v25 = *a9;
  if (v25 == 2)
  {
    int v26 = a9[1];
    WORD5(v45) = a9[2];
    WORD1(v45) = WORD5(v45);
    WORD4(v45) = a9[3];
    WORD2(v45) = WORD4(v45);
    WORD3(v45) = -2 * (WORD5(v45) + v26 + WORD4(v45));
    int v27 = a9[4];
    WORD5(v46) = a9[5];
    WORD1(v46) = WORD5(v46);
    __int16 v28 = a9[6];
    WORD6(v45) = v26;
    LOWORD(v45) = v26;
    WORD6(v46) = v27;
    LOWORD(v46) = v27;
    WORD4(v46) = v28;
    WORD2(v46) = v28;
    WORD3(v46) = 128 - 2 * (WORD5(v46) + v27 + v28);
    BOOL v29 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, long long *, void))(v13 + 8 * ((v27 | v26) == 0) + 3328);
  }
  else
  {
    int v30 = (unsigned __int16 *)((char *)&unk_224B28C80 + 4 * (v25 - 3));
    unsigned int v31 = *v30;
    BOOL v32 = *v30 == 0;
    LODWORD(v30) = v30[1];
    *(void *)&long long v45 = __PAIR64__(v30, v31);
    WORD4(v45) = a9[7];
    WORD5(v45) = 128 - (WORD4(v45) + a9[8]);
    BOOL v29 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, long long *, void))(v13 + 8 * (2 * (v30 != 0) - v32) + 3344);
  }
  int v33 = v24 + a5;
  if ((int)v24 + a5 <= a8)
  {
    uint64_t v35 = v20 + v15 * v23 + a4;
    uint64_t v42 = *v29;
    int v41 = v19 + 1;
    unsigned int v36 = 0x40u >> v14;
    do
    {
      if (v41 == *(_DWORD *)(v43 + 3464) && a8 == v33) {
        int v38 = 0;
      }
      else {
        int v38 = 8;
      }
      unsigned int v39 = v38 | a10 & 0xFFFFFFF7;
      uint64_t result = v42(a2, v15, a3, v35, a7, v24, &v45, v39);
      LODWORD(v40) = a8 - v33;
      if ((int)v36 >= a8 - v33) {
        uint64_t v40 = v40;
      }
      else {
        uint64_t v40 = v36;
      }
      if (!v40) {
        break;
      }
      a10 = v39 | 4;
      a2 += v15 * (int)v24;
      a3 += 4 * (int)v24;
      v35 += 4 * v15;
      v33 += v40;
      uint64_t v24 = v40;
    }
    while (v33 <= a8);
  }
  return result;
}

void sub_224ABA1D4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8, signed int a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (a4[53]) {
    BOOL v14 = a9 <= 0;
  }
  else {
    BOOL v14 = 1;
  }
  int v15 = *a4;
  if (v14) {
    uint64_t v16 = 1;
  }
  else {
    uint64_t v16 = 2;
  }
  int32x2_t v17 = vmovn_s64((int64x2_t)vcgeq_u64((uint64x2_t)vdupq_n_s64(v16 - 1), (uint64x2_t)xmmword_224B15990));
  int32x2_t v18 = vadd_s32(vdup_n_s32(a9), (int32x2_t)0xFFFFFFFF00000000);
  if (v17.i8[0])
  {
    int32x2_t v19 = (int32x2_t)vand_s8((int8x8_t)vmla_lane_s32((int32x2_t)0xB20000000069, (int32x2_t)0x2500000000ADLL, v18, 0), (int8x8_t)0xFF00000000FFLL);
    v42[0] = vorr_s8((int8x8_t)v19, (int8x8_t)vdup_lane_s32(v19, 1)).u32[0] ^ v15;
  }
  if (v17.i8[4])
  {
    int32x2_t v20 = (int32x2_t)vand_s8((int8x8_t)vmla_lane_s32((int32x2_t)0xB20000000069, (int32x2_t)0x2500000000ADLL, v18, 1), (int8x8_t)0xFF00000000FFLL);
    v42[1] = vorr_s8((int8x8_t)v20, (int8x8_t)vdup_lane_s32(v20, 1)).u32[0] ^ v15;
  }
  if (a5)
  {
    uint64_t v21 = 0;
    unsigned int v22 = 0;
    uint64_t v23 = a8;
    do
    {
      int v24 = a4[53];
      if (v22) {
        BOOL v25 = v24 == 0;
      }
      else {
        BOOL v25 = 1;
      }
      int v26 = !v25;
      int v27 = &v41;
      uint64_t v28 = v16;
      if (!v25)
      {
        do
        {
          *(_DWORD *)int v27 = *((_DWORD *)v27 - 2);
          int v27 = (uint64_t *)((char *)v27 + 4);
          --v28;
        }
        while (v28);
      }
      for (uint64_t i = 0; i != v16; ++i)
      {
        int v30 = v42[i];
        int v31 = (((((v30 >> 3) ^ (v30 >> 12) ^ v30) ^ (v30 >> 1)) & 1) << 15) | (v30 >> 1);
        v42[i] = v31;
        v40[i] = BYTE1(v31);
      }
      if (a9) {
        BOOL v32 = v24 == 0;
      }
      else {
        BOOL v32 = 1;
      }
      int v33 = !v32;
      if (v26) {
        v33 |= 2u;
      }
      if (a4[9]) {
        v33 |= 4u;
      }
      sub_224A8FD70(a1 + 2 * v21, a2 + 2 * v21, a3, a6, (uint64_t)a4, a7, a10 + 2 * v21, a11, (uint64_t)v40, v23, a12, a13, v33);
      v22 += 32;
      uint64_t v21 = v22;
    }
    while (v22 < a5);
  }
}

void sub_224ABA420(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8, signed int a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (a4[53]) {
    BOOL v14 = a9 <= 0;
  }
  else {
    BOOL v14 = 1;
  }
  int v15 = *a4;
  if (v14) {
    uint64_t v16 = 1;
  }
  else {
    uint64_t v16 = 2;
  }
  int32x2_t v17 = vmovn_s64((int64x2_t)vcgeq_u64((uint64x2_t)vdupq_n_s64(v16 - 1), (uint64x2_t)xmmword_224B15990));
  int32x2_t v18 = vadd_s32(vdup_n_s32(a9), (int32x2_t)0xFFFFFFFF00000000);
  if (v17.i8[0])
  {
    int32x2_t v19 = (int32x2_t)vand_s8((int8x8_t)vmla_lane_s32((int32x2_t)0xB20000000069, (int32x2_t)0x2500000000ADLL, v18, 0), (int8x8_t)0xFF00000000FFLL);
    v42[0] = vorr_s8((int8x8_t)v19, (int8x8_t)vdup_lane_s32(v19, 1)).u32[0] ^ v15;
  }
  if (v17.i8[4])
  {
    int32x2_t v20 = (int32x2_t)vand_s8((int8x8_t)vmla_lane_s32((int32x2_t)0xB20000000069, (int32x2_t)0x2500000000ADLL, v18, 1), (int8x8_t)0xFF00000000FFLL);
    v42[1] = vorr_s8((int8x8_t)v20, (int8x8_t)vdup_lane_s32(v20, 1)).u32[0] ^ v15;
  }
  if (a5)
  {
    uint64_t v21 = 0;
    unsigned int v22 = 0;
    uint64_t v23 = a8;
    do
    {
      int v24 = a4[53];
      if (v22) {
        BOOL v25 = v24 == 0;
      }
      else {
        BOOL v25 = 1;
      }
      int v26 = !v25;
      int v27 = &v41;
      uint64_t v28 = v16;
      if (!v25)
      {
        do
        {
          *(_DWORD *)int v27 = *((_DWORD *)v27 - 2);
          int v27 = (uint64_t *)((char *)v27 + 4);
          --v28;
        }
        while (v28);
      }
      for (uint64_t i = 0; i != v16; ++i)
      {
        int v30 = v42[i];
        int v31 = (((((v30 >> 3) ^ (v30 >> 12) ^ v30) ^ (v30 >> 1)) & 1) << 15) | (v30 >> 1);
        v42[i] = v31;
        v40[i] = BYTE1(v31);
      }
      if (a9) {
        BOOL v32 = v24 == 0;
      }
      else {
        BOOL v32 = 1;
      }
      int v33 = !v32;
      if (v26) {
        v33 |= 2u;
      }
      if (a4[9]) {
        v33 |= 4u;
      }
      sub_224A8FC1C(a1 + 2 * v21, a2 + 2 * v21, a3, a6, (uint64_t)a4, a7, a10 + 4 * v22, a11, (uint64_t)v40, v23, a12, a13, v33);
      v22 += 16;
      uint64_t v21 = v22;
    }
    while (v22 < a5);
  }
}

void sub_224ABA670(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8, signed int a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (a4[53]) {
    BOOL v14 = a9 <= 0;
  }
  else {
    BOOL v14 = 1;
  }
  int v15 = *a4;
  if (v14) {
    uint64_t v16 = 1;
  }
  else {
    uint64_t v16 = 2;
  }
  int32x2_t v17 = vmovn_s64((int64x2_t)vcgeq_u64((uint64x2_t)vdupq_n_s64(v16 - 1), (uint64x2_t)xmmword_224B15990));
  int32x2_t v18 = vadd_s32(vdup_n_s32(a9), (int32x2_t)0xFFFFFFFF00000000);
  if (v17.i8[0])
  {
    int32x2_t v19 = (int32x2_t)vand_s8((int8x8_t)vmla_lane_s32((int32x2_t)0xB20000000069, (int32x2_t)0x2500000000ADLL, v18, 0), (int8x8_t)0xFF00000000FFLL);
    v42[0] = vorr_s8((int8x8_t)v19, (int8x8_t)vdup_lane_s32(v19, 1)).u32[0] ^ v15;
  }
  if (v17.i8[4])
  {
    int32x2_t v20 = (int32x2_t)vand_s8((int8x8_t)vmla_lane_s32((int32x2_t)0xB20000000069, (int32x2_t)0x2500000000ADLL, v18, 1), (int8x8_t)0xFF00000000FFLL);
    v42[1] = vorr_s8((int8x8_t)v20, (int8x8_t)vdup_lane_s32(v20, 1)).u32[0] ^ v15;
  }
  if (a5)
  {
    uint64_t v21 = 0;
    unsigned int v22 = 0;
    uint64_t v23 = a8;
    do
    {
      int v24 = a4[53];
      if (v22) {
        BOOL v25 = v24 == 0;
      }
      else {
        BOOL v25 = 1;
      }
      int v26 = !v25;
      int v27 = &v41;
      uint64_t v28 = v16;
      if (!v25)
      {
        do
        {
          *(_DWORD *)int v27 = *((_DWORD *)v27 - 2);
          int v27 = (uint64_t *)((char *)v27 + 4);
          --v28;
        }
        while (v28);
      }
      for (uint64_t i = 0; i != v16; ++i)
      {
        int v30 = v42[i];
        int v31 = (((((v30 >> 3) ^ (v30 >> 12) ^ v30) ^ (v30 >> 1)) & 1) << 15) | (v30 >> 1);
        v42[i] = v31;
        v40[i] = BYTE1(v31);
      }
      if (a9) {
        BOOL v32 = v24 == 0;
      }
      else {
        BOOL v32 = 1;
      }
      int v33 = !v32;
      if (v26) {
        v33 |= 2u;
      }
      if (a4[9]) {
        v33 |= 4u;
      }
      sub_224A8FAD4(a1 + 2 * v21, a2 + 2 * v21, a3, a6, (uint64_t)a4, a7, a10 + 4 * v22, a11, (uint64_t)v40, v23, a12, a13, v33);
      v22 += 16;
      uint64_t v21 = v22;
    }
    while (v22 < a5);
  }
}

void sub_224ABA8C0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, unint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, signed int a9)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  if (a4[53]) {
    BOOL v12 = a9 <= 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = *a4;
  if (v12) {
    uint64_t v14 = 1;
  }
  else {
    uint64_t v14 = 2;
  }
  int32x2_t v15 = vmovn_s64((int64x2_t)vcgeq_u64((uint64x2_t)vdupq_n_s64(v14 - 1), (uint64x2_t)xmmword_224B15990));
  int32x2_t v16 = vadd_s32(vdup_n_s32(a9), (int32x2_t)0xFFFFFFFF00000000);
  if (v15.i8[0])
  {
    int32x2_t v17 = (int32x2_t)vand_s8((int8x8_t)vmla_lane_s32((int32x2_t)0xB20000000069, (int32x2_t)0x2500000000ADLL, v16, 0), (int8x8_t)0xFF00000000FFLL);
    v38[0] = vorr_s8((int8x8_t)v17, (int8x8_t)vdup_lane_s32(v17, 1)).u32[0] ^ v13;
  }
  if (v15.i8[4])
  {
    int32x2_t v18 = (int32x2_t)vand_s8((int8x8_t)vmla_lane_s32((int32x2_t)0xB20000000069, (int32x2_t)0x2500000000ADLL, v16, 1), (int8x8_t)0xFF00000000FFLL);
    v38[1] = vorr_s8((int8x8_t)v18, (int8x8_t)vdup_lane_s32(v18, 1)).u32[0] ^ v13;
  }
  if (a5)
  {
    uint64_t v19 = 0;
    for (i = 0; i < a5; uint64_t v19 = i)
    {
      int v21 = a4[53];
      if (i) {
        BOOL v22 = v21 == 0;
      }
      else {
        BOOL v22 = 1;
      }
      int v23 = !v22;
      int v24 = &v37;
      uint64_t v25 = v14;
      if (!v22)
      {
        do
        {
          *(_DWORD *)int v24 = *((_DWORD *)v24 - 2);
          int v24 = (uint64_t *)((char *)v24 + 4);
          --v25;
        }
        while (v25);
      }
      for (uint64_t j = 0; j != v14; ++j)
      {
        int v27 = v38[j];
        int v28 = (((((v27 >> 3) ^ (v27 >> 12) ^ v27) ^ (v27 >> 1)) & 1) << 15) | (v27 >> 1);
        v38[j] = v28;
        v36[j] = BYTE1(v28);
      }
      if (a9) {
        BOOL v29 = v21 == 0;
      }
      else {
        BOOL v29 = 1;
      }
      int v30 = !v29;
      if (v23) {
        v30 |= 2u;
      }
      sub_224A8F584(a1 + 2 * v19, a2 + 2 * v19, a3, a6, a4[22], a7, (uint64_t)v36, a8, a4[54], v30);
      i += 32;
    }
  }
}

void sub_224ABAAC4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11, double a12, double a13, int32x2_t a14, int32x2_t a15, signed int a16, uint64_t a17, uint64_t a18, int a19, int a20,signed int a21)
{
}

void sub_224ABAB08(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11, double a12, double a13, int32x2_t a14, int32x2_t a15, signed int a16, uint64_t a17, uint64_t a18, int a19, int a20,unsigned int a21,unsigned int a22,signed int a23)
{
  uint64_t v168 = *MEMORY[0x263EF8340];
  unsigned int v23 = 24 - __clz(a23);
  int v24 = a4[54];
  if (a20) {
    int v25 = 235;
  }
  else {
    int v25 = 240;
  }
  char v161 = v23;
  int v26 = v25 << v23;
  if (v24) {
    signed int v27 = v26;
  }
  else {
    signed int v27 = a23;
  }
  int v129 = a4[53];
  if (v129) {
    BOOL v28 = a16 <= 0;
  }
  else {
    BOOL v28 = 1;
  }
  int v29 = *a4;
  if (v28) {
    uint64_t v30 = 1;
  }
  else {
    uint64_t v30 = 2;
  }
  int32x2_t v31 = vmovn_s64((int64x2_t)vcgeq_u64((uint64x2_t)vdupq_n_s64(v30 - 1), (uint64x2_t)xmmword_224B15990));
  int32x2_t v32 = vadd_s32(vdup_n_s32(a16), (int32x2_t)0xFFFFFFFF00000000);
  if (v31.i8[0])
  {
    int32x2_t v33 = (int32x2_t)vand_s8((int8x8_t)vmla_lane_s32((int32x2_t)0xB20000000069, (int32x2_t)0x2500000000ADLL, v32, 0), (int8x8_t)0xFF00000000FFLL);
    v167[0] = vorr_s8((int8x8_t)v33, (int8x8_t)vdup_lane_s32(v33, 1)).u32[0] ^ v29;
  }
  if (v31.i8[4])
  {
    int32x2_t v34 = (int32x2_t)vand_s8((int8x8_t)vmla_lane_s32((int32x2_t)0xB20000000069, (int32x2_t)0x2500000000ADLL, v32, 1), (int8x8_t)0xFF00000000FFLL);
    v167[1] = vorr_s8((int8x8_t)v34, (int8x8_t)vdup_lane_s32(v34, 1)).u32[0] ^ v29;
  }
  if (v24) {
    int v35 = 16 << v23;
  }
  else {
    int v35 = 0;
  }
  if (a5)
  {
    unsigned int v36 = 0;
    signed int v37 = -(128 << v161);
    signed int v38 = (128 << v161) - 1;
    unsigned int v39 = 2u >> a22;
    unsigned int v132 = 2u >> a22;
    if ((int)(2u >> a22) >= a8) {
      unsigned int v39 = a8;
    }
    uint64_t v40 = (int *)(0x20u >> a21);
    if (v129) {
      BOOL v41 = a16 == 0;
    }
    else {
      BOOL v41 = 1;
    }
    if (v41) {
      uint64_t v42 = 0;
    }
    else {
      uint64_t v42 = v39;
    }
    signed int v135 = 2u >> a21;
    uint64_t v145 = a18 >> 1;
    uint64_t v144 = a3 >> 1;
    long long v45 = &a4[a19];
    int32x2_t v160 = v45 + 49;
    int32x2_t v158 = v45 + 51;
    int32x2_t v159 = v45 + 47;
    unsigned int v140 = (0x20u >> a22) + 3;
    uint64_t v133 = (int)v42;
    uint64_t v139 = v42;
    int32x2_t v43 = vdup_n_s32(v37);
    int32x2_t v44 = vdup_n_s32(v38);
    int v131 = v40 + 3;
    LODWORD(v45) = a5;
    uint64_t v127 = v30;
    unint64_t v128 = a5;
    unsigned int v126 = 0x20u >> a21;
    do
    {
      int v134 = (int)v45;
      long long v45 = (int *)(int)v45;
      if ((int)v45 >= (uint64_t)v40) {
        long long v45 = v40;
      }
      int32x2_t v151 = v45;
      int v46 = a5 - v36;
      if ((int)v40 < (int)(a5 - v36)) {
        int v46 = (int)v40;
      }
      int v143 = v46;
      if (v129) {
        BOOL v47 = v36 == 0;
      }
      else {
        BOOL v47 = 1;
      }
      int v48 = !v47;
      unsigned int v49 = &v165;
      uint64_t v50 = v30;
      if (!v47)
      {
        do
        {
          *unsigned int v49 = *(v49 - 2);
          ++v49;
          --v50;
        }
        while (v50);
      }
      for (uint64_t i = 0; i != v30; ++i)
      {
        int v52 = v167[i];
        int v53 = (((((v52 >> 3) ^ (v52 >> 12) ^ v52) ^ (v52 >> 1)) & 1) << 15) | (v52 >> 1);
        v167[i] = v53;
        *(&v163 + i) = BYTE1(v53);
      }
      LODWORD(v54) = 2u >> a21;
      if (v135 >= v143) {
        LODWORD(v54) = v143;
      }
      if (v48) {
        uint64_t v54 = v54;
      }
      else {
        uint64_t v54 = 0;
      }
      uint64_t v162 = v54;
      if ((int)v139 < a8)
      {
        int v156 = ((v163 & 0xF) + 3) * v132;
        int v154 = ((v165 & 0xF) + 3) * v132;
        int v55 = ((v163 >> 4) + 3) * v135 + 3;
        int v56 = v131 + ((v165 >> 4) + 3) * v135;
        uint64_t v57 = v133;
        do
        {
          if ((int)v162 < v143)
          {
            int v58 = a4[9];
            int v59 = a4[22];
            int v60 = v162;
            uint64_t v61 = (uint64_t)v151 - (int)v162;
            do
            {
              uint64_t v62 = v36 + v60;
              int v63 = (unsigned __int16 *)(a17 + 2 * v145 * (int)(v57 << a22) + 2 * (int)(v62 << a21));
              int v64 = *v63;
              if (a21) {
                int v64 = (unsigned __int16)((v64 + v63[1] + 1) >> 1);
              }
              int v65 = *(unsigned __int16 *)(a2 + 2 * v144 * v57 + 2 * v62);
              if (!v58)
              {
                int v66 = (*v158 << v161) + ((*v160 * v64 + *v159 * v65) >> 6);
                int v67 = a23;
                if (v66 < a23) {
                  int v67 = (*v158 << v161) + ((*v160 * v64 + *v159 * v65) >> 6);
                }
                if (v66 >= 0) {
                  int v64 = v67;
                }
                else {
                  int v64 = 0;
                }
              }
              int v68 = (((1 << v59 >> 1)
                    + *(unsigned __int8 *)(a6 + v64)
                    * *(__int16 *)(a7 + 164 * ((int)v57 + v156 + 3) + 2 * (v55 + v60))) >> v59)
                  + v65;
              if (v68 >= v27) {
                __int16 v69 = v27;
              }
              else {
                __int16 v69 = (((1 << v59 >> 1)
              }
                      + *(unsigned __int8 *)(a6 + v64)
                      * *(__int16 *)(a7 + 164 * ((int)v57 + v156 + 3) + 2 * (v55 + v60))) >> v59)
                    + v65;
              if (v68 >= v35) {
                __int16 v70 = v69;
              }
              else {
                __int16 v70 = v35;
              }
              *(_WORD *)(a1 + 2 * v144 * v57 + 2 * v62) = v70;
              ++v60;
              --v61;
            }
            while (v61);
          }
          if ((int)v162 >= 1)
          {
            int v71 = 0;
            int v74 = a4[9];
            int v75 = a4[22];
            int32x2_t v76 = (_DWORD *)((char *)&unk_224B28C50 + 16 * a21 + 4);
            uint64_t v77 = v162;
            do
            {
              int v72 = v156 + v57 + 3;
              int v73 = v154 + v57 + 3;
              int v78 = (*v76 * *(__int16 *)(a7 + 164 * v72 + 2 * (v55 + v71))
                   + *(v76 - 1) * *(__int16 *)(a7 + 164 * v73 + 2 * (v56 + v71))
                   + 16) >> 5;
              if (v78 >= v38) {
                int v79 = (128 << v161) - 1;
              }
              else {
                int v79 = (*v76 * *(__int16 *)(a7 + 164 * v72 + 2 * (v55 + v71))
              }
                     + *(v76 - 1) * *(__int16 *)(a7 + 164 * v73 + 2 * (v56 + v71))
                     + 16) >> 5;
              if (v78 >= v37) {
                int v80 = v79;
              }
              else {
                int v80 = -(128 << v161);
              }
              uint64_t v81 = v36 + v71;
              int32x2_t v82 = (unsigned __int16 *)(a17 + 2 * v145 * (int)(v57 << a22) + 2 * (int)(v81 << a21));
              signed int v83 = *v82;
              if (a21) {
                signed int v83 = (unsigned __int16)((v83 + v82[1] + 1) >> 1);
              }
              int v84 = *(unsigned __int16 *)(a2 + 2 * v144 * v57 + 2 * v81);
              if (!v74)
              {
                int v85 = (*v158 << v161) + ((*v160 * v83 + *v159 * v84) >> 6);
                signed int v83 = a23;
                if (v85 < a23) {
                  signed int v83 = v85;
                }
                if (v85 < 0) {
                  signed int v83 = 0;
                }
              }
              v76 += 2;
              int v86 = (((1 << v75 >> 1) + v80 * *(unsigned __int8 *)(a6 + v83)) >> v75) + v84;
              if (v86 >= v27) {
                __int16 v87 = v27;
              }
              else {
                __int16 v87 = (((1 << v75 >> 1) + v80 * *(unsigned __int8 *)(a6 + v83)) >> v75) + v84;
              }
              if (v86 >= v35) {
                __int16 v88 = v87;
              }
              else {
                __int16 v88 = v35;
              }
              *(_WORD *)(a1 + 2 * v144 * v57 + 2 * v81) = v88;
              ++v71;
              --v77;
            }
            while (v77);
          }
          ++v57;
        }
        while (v57 != a8);
      }
      if ((int)v133 >= 1)
      {
        uint64_t v89 = 0;
        int v142 = ((v163 & 0xF) + 3) * v132;
        int v141 = ((v164 & 0xF) + 3) * v132;
        int v138 = ((v166 & 0xF) + 3) * v132;
        int v137 = ((v165 & 0xF) + 3) * v132;
        uint64_t v136 = (uint64_t)v151 - (int)v162;
        int v153 = ((v164 >> 4) + 3) * v135 + 3;
        int v152 = ((v163 >> 4) + 3) * v135 + 3;
        int v157 = v131 + ((v165 >> 4) + 3) * v135;
        int v155 = v131 + ((v166 >> 4) + 3) * v135;
        int32x2_t v90 = (char *)&unk_224B28C50 + 16 * a21;
        do
        {
          uint64_t v150 = v89;
          int v149 = v89 << a22;
          if ((int)v162 < v143)
          {
            int v91 = v89 + v142 + 3;
            int v92 = v140 + v89 + v141;
            int32x2_t v93 = (int *)((char *)&unk_224B28C50 + 16 * a22 + 8 * v89);
            int v95 = *v93;
            int v94 = v93[1];
            int v96 = a4[9];
            int v97 = a4[22];
            int v98 = v162;
            uint64_t v99 = v136;
            do
            {
              int v100 = (v94 * *(__int16 *)(a7 + 164 * v91 + 2 * (v152 + v98))
                    + v95 * *(__int16 *)(a7 + 164 * v92 + 2 * (v153 + v98))
                    + 16) >> 5;
              if (v100 >= v38) {
                int v101 = (128 << v161) - 1;
              }
              else {
                int v101 = (v94 * *(__int16 *)(a7 + 164 * v91 + 2 * (v152 + v98))
              }
                      + v95 * *(__int16 *)(a7 + 164 * v92 + 2 * (v153 + v98))
                      + 16) >> 5;
              if (v100 < v37) {
                int v101 = -(128 << v161);
              }
              uint64_t v102 = v36 + v98;
              int32x2_t v103 = (unsigned __int16 *)(a17 + 2 * v145 * v149 + 2 * (int)(v102 << a21));
              signed int v104 = *v103;
              if (a21) {
                signed int v104 = (unsigned __int16)((v104 + v103[1] + 1) >> 1);
              }
              int v105 = *(unsigned __int16 *)(a2 + 2 * v144 * v150 + 2 * v102);
              if (!v96)
              {
                int32x2_t v90 = (char *)&unk_224B28C50 + 16 * a21;
                int v106 = (*v158 << v161) + ((*v160 * v104 + *v159 * v105) >> 6);
                signed int v104 = a23;
                if (v106 < a23) {
                  signed int v104 = v106;
                }
                if (v106 < 0) {
                  signed int v104 = 0;
                }
              }
              int v107 = (((1 << v97 >> 1) + v101 * *(unsigned __int8 *)(a6 + v104)) >> v97) + v105;
              if (v107 >= v27) {
                __int16 v108 = v27;
              }
              else {
                __int16 v108 = v107;
              }
              if (v107 >= v35) {
                __int16 v109 = v108;
              }
              else {
                __int16 v109 = v35;
              }
              *(_WORD *)(a1 + 2 * v144 * v150 + 2 * v102) = v109;
              ++v98;
              --v99;
            }
            while (v99);
          }
          if ((int)v162 >= 1)
          {
            uint64_t v110 = 0;
            int32x2_t v111 = *(int32x2_t *)((char *)&unk_224B28C50 + 16 * a22 + 8 * v150);
            int v112 = a4[9];
            int v113 = a4[22];
            do
            {
              a14.i16[0] = *(_WORD *)(a7 + 164 * (int)(v138 + v140 + v150) + 2 * (v155 + (int)v110));
              a14.i16[2] = *(_WORD *)(a7 + 164 * (v142 + (int)v150 + 3) + 2 * (v152 + (int)v110));
              a15.i16[0] = *(_WORD *)(a7 + 164 * (int)(v141 + v140 + v150) + 2 * (v153 + (int)v110));
              a15.i16[2] = *(_WORD *)(a7 + 164 * (v137 + (int)v150 + 3) + 2 * (v157 + (int)v110));
              a15 = vmla_s32(vmul_s32(vrev64_s32(*(int32x2_t *)&v90[8 * v110]), vshr_n_s32(vshl_n_s32(a15, 0x10uLL), 0x10uLL)), *(int32x2_t *)&v90[8 * v110], vshr_n_s32(vshl_n_s32(a14, 0x10uLL), 0x10uLL));
              int32x2_t v114 = vshr_n_s32(vadd_s32(a15, (int32x2_t)0x1000000010), 5uLL);
              a14 = vcgt_s32(v43, v114);
              int32x2_t v115 = vmul_s32((int32x2_t)vbsl_s8((int8x8_t)a14, (int8x8_t)v43, (int8x8_t)vmin_s32(v114, v44)), v111);
              int v116 = (v115.i32[0] + v115.i32[1] + 16) >> 5;
              if (v116 >= v38) {
                int v117 = (128 << v161) - 1;
              }
              else {
                int v117 = (v115.i32[0] + v115.i32[1] + 16) >> 5;
              }
              if (v116 >= v37) {
                int v118 = v117;
              }
              else {
                int v118 = -(128 << v161);
              }
              int32x2_t v119 = (unsigned __int16 *)(a17 + 2 * v145 * v149 + 2 * (int)((v36 + v110) << a21));
              signed int v120 = *v119;
              if (a21) {
                signed int v120 = (unsigned __int16)((v120 + v119[1] + 1) >> 1);
              }
              int v121 = *(unsigned __int16 *)(a2 + 2 * v144 * v150 + 2 * (v36 + v110));
              if (!v112)
              {
                int v122 = (*v158 << v161) + ((*v160 * v120 + *v159 * v121) >> 6);
                signed int v120 = a23;
                if (v122 < a23) {
                  signed int v120 = v122;
                }
                if (v122 < 0) {
                  signed int v120 = 0;
                }
              }
              int v123 = (((1 << v113 >> 1) + v118 * *(unsigned __int8 *)(a6 + v120)) >> v113) + v121;
              if (v123 >= v27) {
                __int16 v124 = v27;
              }
              else {
                __int16 v124 = (((1 << v113 >> 1) + v118 * *(unsigned __int8 *)(a6 + v120)) >> v113) + v121;
              }
              if (v123 >= v35) {
                __int16 v125 = v124;
              }
              else {
                __int16 v125 = v35;
              }
              *(_WORD *)(a1 + 2 * v144 * v150 + 2 * (v36 + v110++)) = v125;
            }
            while (v162 != v110);
          }
          uint64_t v89 = v150 + 1;
        }
        while (v150 + 1 != v139);
      }
      uint64_t v40 = (int *)(0x20u >> a21);
      uint64_t v30 = v127;
      v36 += v126;
      LODWORD(v45) = v134 - v126;
      LODWORD(a5) = v128;
    }
    while (v128 > v36);
  }
}

void sub_224ABB590(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11, double a12, double a13, int32x2_t a14, int32x2_t a15, signed int a16, uint64_t a17, uint64_t a18, int a19, int a20,signed int a21)
{
}

void sub_224ABB5D8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11, double a12, double a13, int32x2_t a14, int32x2_t a15, signed int a16, uint64_t a17, uint64_t a18, int a19, int a20,signed int a21)
{
}

void sub_224ABB620(uint64_t a1, uint64_t a2, unint64_t a3, int *a4, unint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11, double a12, double a13, int32x2_t a14, int32x2_t a15, signed int a16, unsigned int a17)
{
  uint64_t v124 = a1;
  uint64_t v125 = a2;
  int v17 = a17;
  uint64_t v146 = *MEMORY[0x263EF8340];
  unsigned int v18 = 24 - __clz(a17);
  int v19 = a4[54];
  if (v19) {
    int v17 = 235 << v18;
  }
  int v117 = a4[53];
  if (v117) {
    BOOL v20 = a16 <= 0;
  }
  else {
    BOOL v20 = 1;
  }
  int v21 = *a4;
  if (v20) {
    uint64_t v22 = 1;
  }
  else {
    uint64_t v22 = 2;
  }
  int32x2_t v23 = vmovn_s64((int64x2_t)vcgeq_u64((uint64x2_t)vdupq_n_s64(v22 - 1), (uint64x2_t)xmmword_224B15990));
  int32x2_t v24 = vadd_s32(vdup_n_s32(a16), (int32x2_t)0xFFFFFFFF00000000);
  if (v23.i8[0])
  {
    int32x2_t v25 = (int32x2_t)vand_s8((int8x8_t)vmla_lane_s32((int32x2_t)0xB20000000069, (int32x2_t)0x2500000000ADLL, v24, 0), (int8x8_t)0xFF00000000FFLL);
    v145[0] = vorr_s8((int8x8_t)v25, (int8x8_t)vdup_lane_s32(v25, 1)).u32[0] ^ v21;
  }
  if (v23.i8[4])
  {
    int32x2_t v26 = (int32x2_t)vand_s8((int8x8_t)vmla_lane_s32((int32x2_t)0xB20000000069, (int32x2_t)0x2500000000ADLL, v24, 1), (int8x8_t)0xFF00000000FFLL);
    v145[1] = vorr_s8((int8x8_t)v26, (int8x8_t)vdup_lane_s32(v26, 1)).u32[0] ^ v21;
  }
  if (v19) {
    int v27 = 16 << v18;
  }
  else {
    int v27 = 0;
  }
  if (a5)
  {
    LODWORD(v28) = 0;
    int v29 = 128 << v18;
    signed int v30 = -v29;
    signed int v31 = v29 - 1;
    if (a8 >= 2) {
      LODWORD(v32) = 2;
    }
    else {
      LODWORD(v32) = a8;
    }
    if (v117) {
      BOOL v33 = a16 == 0;
    }
    else {
      BOOL v33 = 1;
    }
    if (v33) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = v32;
    }
    uint64_t v131 = v32;
    uint64_t v34 = a8;
    int32x2_t v35 = vdup_n_s32(v30);
    int32x2_t v36 = vdup_n_s32(v31);
    uint64_t v119 = (int)v32;
    unint64_t v37 = (a3 >> 1) * (int)v32;
    int v123 = (_WORD *)(a1 + 2 * v37);
    unint64_t v135 = a3 & 0xFFFFFFFFFFFFFFFELL;
    int v122 = (unsigned __int16 *)(a2 + 2 * v37);
    int v38 = a5;
    uint64_t v115 = v22;
    unint64_t v116 = a5;
    do
    {
      int v120 = v38;
      uint64_t v39 = v38;
      if (v38 >= 32) {
        uint64_t v39 = 32;
      }
      uint64_t v128 = v39;
      LODWORD(v39) = a5 - v28;
      if ((int)a5 - (int)v28 >= 32) {
        int v40 = 32;
      }
      else {
        int v40 = a5 - v28;
      }
      int v136 = v40;
      int v121 = v28;
      if (v117) {
        BOOL v41 = v28 == 0;
      }
      else {
        BOOL v41 = 1;
      }
      int v42 = !v41;
      int32x2_t v43 = &v143;
      uint64_t v44 = v22;
      if (!v41)
      {
        do
        {
          *int32x2_t v43 = *(v43 - 2);
          ++v43;
          --v44;
        }
        while (v44);
      }
      for (uint64_t i = 0; i != v22; ++i)
      {
        int v46 = v145[i];
        int v47 = (((((v46 >> 3) ^ (v46 >> 12) ^ v46) ^ (v46 >> 1)) & 1) << 15) | (v46 >> 1);
        v145[i] = v47;
        *(&v141 + i) = BYTE1(v47);
      }
      if ((int)v39 >= 2) {
        LODWORD(v39) = 2;
      }
      if (v42) {
        uint64_t v39 = v39;
      }
      else {
        uint64_t v39 = 0;
      }
      uint64_t v140 = v39;
      if ((int)v131 < a8)
      {
        int v48 = 2 * (v141 & 0xF);
        unsigned int v49 = &v123[(int)v39];
        int v138 = 2 * (v143 & 0xF);
        uint64_t v50 = v122;
        uint64_t v51 = &v122[(int)v39];
        unsigned int v52 = ((v141 >> 3) & 0xFFFFFFFE) + 9;
        unsigned int v133 = ((v143 >> 3) & 0xFFFFFFFE) + 41;
        int v53 = v123;
        uint64_t v54 = v119;
        do
        {
          if ((int)v140 < v136)
          {
            int v55 = a4[22];
            int v56 = v52 + v140;
            uint64_t v57 = v51;
            int v58 = v49;
            uint64_t v59 = v128 - (int)v140;
            do
            {
              unsigned int v60 = *v57++;
              int v61 = (((1 << v55 >> 1)
                    + *(unsigned __int8 *)(a6 + v60) * *(__int16 *)(a7 + 164 * ((int)v54 + v48 + 9) + 2 * v56)) >> v55)
                  + v60;
              if (v61 >= v17) {
                __int16 v62 = v17;
              }
              else {
                __int16 v62 = v61;
              }
              if (v61 >= v27) {
                __int16 v63 = v62;
              }
              else {
                __int16 v63 = v27;
              }
              *v58++ = v63;
              ++v56;
              --v59;
            }
            while (v59);
          }
          if ((int)v140 >= 1)
          {
            int v66 = a4[22];
            signed int v67 = v133;
            int v68 = (_DWORD *)qword_224B28C40 + 1;
            signed int v69 = v52;
            __int16 v70 = v50;
            int v71 = v53;
            uint64_t v72 = v140;
            do
            {
              int v65 = v54 + 9 + v138;
              int v64 = v54 + 9 + v48;
              int v73 = (*v68 * *(__int16 *)(a7 + 164 * v64 + 2 * v69)
                   + *(v68 - 1) * *(__int16 *)(a7 + 164 * v65 + 2 * v67)
                   + 16) >> 5;
              if (v73 >= v31) {
                int v74 = v31;
              }
              else {
                int v74 = (*v68 * *(__int16 *)(a7 + 164 * v64 + 2 * v69)
              }
                     + *(v68 - 1) * *(__int16 *)(a7 + 164 * v65 + 2 * v67)
                     + 16) >> 5;
              if (v73 >= v30) {
                int v75 = v74;
              }
              else {
                int v75 = v30;
              }
              unsigned int v76 = *v70++;
              int v77 = (((1 << v66 >> 1) + v75 * *(unsigned __int8 *)(a6 + v76)) >> v66) + v76;
              if (v77 >= v17) {
                __int16 v78 = v17;
              }
              else {
                __int16 v78 = v77;
              }
              if (v77 >= v27) {
                __int16 v79 = v78;
              }
              else {
                __int16 v79 = v27;
              }
              *v71++ = v79;
              ++v69;
              v68 += 2;
              ++v67;
              --v72;
            }
            while (v72);
          }
          ++v54;
          unsigned int v49 = (_WORD *)((char *)v49 + v135);
          uint64_t v51 = (unsigned __int16 *)((char *)v51 + v135);
          int v53 = (_WORD *)((char *)v53 + v135);
          uint64_t v50 = (unsigned __int16 *)((char *)v50 + v135);
        }
        while (v54 != v34);
      }
      int v80 = v140;
      if ((int)v119 >= 1)
      {
        uint64_t v139 = 0;
        unsigned int v81 = (v141 >> 3) & 0xFFFFFFFE;
        int v134 = 2 * (v141 & 0xF);
        unsigned int v82 = (v142 >> 3) & 0xFFFFFFFE;
        int v132 = 2 * (v142 & 0xF);
        uint64_t v83 = v128 - (int)v140;
        uint64_t v84 = v124 + 2 * (int)v140;
        uint64_t v85 = v125 + 2 * (int)v140;
        int v129 = 2 * (v144 & 0xF);
        int v127 = 2 * (v143 & 0xF);
        int v126 = v140 + 9 + v82;
        int v86 = v140 + 9 + v81;
        unsigned int v87 = (((v143 >> 3) & 0xFFFFFFFE) + 40) | 1;
        unsigned int v88 = (((v144 >> 3) & 0xFFFFFFFE) + 40) | 1;
        int v89 = (v81 + 8) | 1;
        int v90 = (v82 + 8) | 1;
        uint64_t v91 = v125;
        uint64_t v92 = v124;
        uint64_t v130 = v83;
        do
        {
          if (v80 < v136)
          {
            uint64_t v93 = 0;
            int v96 = &qword_224B28C40[v139];
            int v97 = *(_DWORD *)v96;
            int v98 = *((_DWORD *)v96 + 1);
            int v99 = a4[22];
            do
            {
              int v94 = v139 + v134 + 9;
              int v95 = v139 + v132 + 41;
              int v100 = (v98 * *(__int16 *)(a7 + 164 * v94 + 2 * (v86 + (int)v93))
                    + v97 * *(__int16 *)(a7 + 164 * v95 + 2 * (v126 + (int)v93))
                    + 16) >> 5;
              if (v100 >= v31) {
                int v101 = v31;
              }
              else {
                int v101 = (v98 * *(__int16 *)(a7 + 164 * v94 + 2 * (v86 + (int)v93))
              }
                      + v97 * *(__int16 *)(a7 + 164 * v95 + 2 * (v126 + (int)v93))
                      + 16) >> 5;
              if (v100 < v30) {
                int v101 = v30;
              }
              int v102 = (((1 << v99 >> 1) + v101 * *(unsigned __int8 *)(a6 + *(unsigned __int16 *)(v85 + 2 * v93))) >> v99)
                   + *(unsigned __int16 *)(v85 + 2 * v93);
              if (v102 >= v17) {
                __int16 v103 = v17;
              }
              else {
                __int16 v103 = (((1 << v99 >> 1) + v101 * *(unsigned __int8 *)(a6 + *(unsigned __int16 *)(v85 + 2 * v93))) >> v99)
              }
                     + *(_WORD *)(v85 + 2 * v93);
              if (v102 >= v27) {
                __int16 v104 = v103;
              }
              else {
                __int16 v104 = v27;
              }
              *(_WORD *)(v84 + 2 * v93++) = v104;
            }
            while (v83 != v93);
          }
          if (v80 >= 1)
          {
            uint64_t v105 = 0;
            int32x2_t v106 = (int32x2_t)qword_224B28C40[v139];
            int v107 = a4[22];
            do
            {
              a14.i16[0] = *(_WORD *)(a7 + 164 * (v129 + (int)v139 + 41) + 2 * (int)(v88 + v105));
              a14.i16[2] = *(_WORD *)(a7 + 164 * (v134 + (int)v139 + 9) + 2 * (v89 + (int)v105));
              a15.i16[0] = *(_WORD *)(a7 + 164 * (v132 + (int)v139 + 41) + 2 * (v90 + (int)v105));
              a15.i16[2] = *(_WORD *)(a7 + 164 * (v127 + (int)v139 + 9) + 2 * (int)(v87 + v105));
              int v80 = v140;
              a15 = vmla_s32(vmul_s32(vrev64_s32((int32x2_t)qword_224B28C40[v105]), vshr_n_s32(vshl_n_s32(a15, 0x10uLL), 0x10uLL)), (int32x2_t)qword_224B28C40[v105], vshr_n_s32(vshl_n_s32(a14, 0x10uLL), 0x10uLL));
              int32x2_t v108 = vshr_n_s32(vadd_s32(a15, (int32x2_t)0x1000000010), 5uLL);
              a14 = vcgt_s32(v35, v108);
              int32x2_t v109 = vmul_s32((int32x2_t)vbsl_s8((int8x8_t)a14, (int8x8_t)v35, (int8x8_t)vmin_s32(v108, v36)), v106);
              int v110 = (v109.i32[0] + v109.i32[1] + 16) >> 5;
              if (v110 >= v31) {
                int v111 = v31;
              }
              else {
                int v111 = (v109.i32[0] + v109.i32[1] + 16) >> 5;
              }
              if (v110 < v30) {
                int v111 = v30;
              }
              int v112 = (((1 << v107 >> 1) + v111 * *(unsigned __int8 *)(a6 + *(unsigned __int16 *)(v91 + 2 * v105))) >> v107)
                   + *(unsigned __int16 *)(v91 + 2 * v105);
              if (v112 >= v17) {
                __int16 v113 = v17;
              }
              else {
                __int16 v113 = (((1 << v107 >> 1) + v111 * *(unsigned __int8 *)(a6 + *(unsigned __int16 *)(v91 + 2 * v105))) >> v107)
              }
                     + *(_WORD *)(v91 + 2 * v105);
              if (v112 >= v27) {
                __int16 v114 = v113;
              }
              else {
                __int16 v114 = v27;
              }
              *(_WORD *)(v92 + 2 * v105++) = v114;
            }
            while (v140 != v105);
          }
          v84 += v135;
          v85 += v135;
          v92 += v135;
          v91 += v135;
          ++v139;
          uint64_t v83 = v130;
        }
        while (v139 != v131);
      }
      unint64_t v28 = (v121 + 32);
      int v38 = v120 - 32;
      v123 += 32;
      v122 += 32;
      v124 += 64;
      v125 += 64;
      uint64_t v22 = v115;
      LODWORD(a5) = v116;
      uint64_t v34 = a8;
    }
    while (v28 < v116);
  }
}

uint64_t sub_224ABBDB4(_WORD *a1, uint64_t a2, _DWORD *a3, uint64_t a4, unsigned int a5)
{
  return sub_224ABBDC4(a1, a2, a3, a4, 0, 0, a5);
}

uint64_t sub_224ABBDC4(_WORD *a1, uint64_t a2, _DWORD *a3, uint64_t a4, int a5, int a6, unsigned int a7)
{
  uint64_t v7 = 0;
  unsigned int v8 = __clz(a7);
  if (a4) {
    int v9 = 18904;
  }
  else {
    int v9 = 46372;
  }
  int v10 = *a3 ^ v9;
  int v11 = v8 + a3[46] - 20;
  int v12 = 128 << (24 - v8);
  if (a5) {
    uint64_t v13 = 44;
  }
  else {
    uint64_t v13 = 82;
  }
  if (a6) {
    uint64_t v14 = 38;
  }
  else {
    uint64_t v14 = 73;
  }
  int32x2_t v15 = a1;
  do
  {
    int32x2_t v16 = v15;
    uint64_t v17 = v13;
    do
    {
      int v10 = (((((v10 >> 3) ^ (v10 >> 12) ^ v10) ^ (v10 >> 1)) & 1) << 15) | (v10 >> 1);
      *v16++ = ((1 << v11 >> 1) + word_224B28F0A[(unsigned __int16)v10 >> 5]) >> v11;
      --v17;
    }
    while (v17);
    ++v7;
    v15 += 82;
  }
  while (v7 != v14);
  int v18 = -v12;
  int v19 = v12 - 1;
  int v20 = a3[23];
  uint64_t v55 = (uint64_t)&a3[7 * a4 + 30];
  if (v20 >= 0) {
    int v21 = a3[23];
  }
  else {
    int v21 = -v20;
  }
  uint64_t v22 = (v13 - 3);
  int v23 = a3[44];
  uint64_t v24 = (v20 + v21);
  uint64_t v25 = v24 + 1;
  int v26 = v24 + 1;
  uint64_t v27 = (uint64_t)&a1[-83 * v20 + 249];
  uint64_t v28 = 3;
  uint64_t v52 = v14;
  do
  {
    uint64_t result = a2 + 164 * ((((int)v28 - 3) << a6) + 3);
    uint64_t v54 = v27;
    uint64_t v30 = 3;
    do
    {
      int v31 = 0;
      if ((v20 & 0x80000000) == 0)
      {
        uint64_t v32 = (__int16 *)v27;
        int v33 = -v20;
        uint64_t v34 = (char *)v55;
        do
        {
          int32x2_t v35 = &v34[v25];
          int32x2_t v36 = v32;
          int v37 = v26;
          int v38 = -v20;
          while (v38 | v33)
          {
            int v40 = *v34++;
            int v39 = v40;
            int v41 = *v36++;
            v31 += v41 * v39;
            ++v38;
            if (!--v37)
            {
              uint64_t v34 = v35;
              goto LABEL_31;
            }
          }
          if (a3[1])
          {
            uint64_t v42 = 0;
            int v43 = 0;
            uint64_t v44 = (__int16 *)(result + 2 * ((((int)v30 - 3) << a5) + 3));
            do
            {
              long long v45 = v44;
              uint64_t v46 = (a5 + 1);
              do
              {
                int v47 = *v45++;
                v43 += v47;
                --v46;
              }
              while (v46);
              ++v42;
              v44 += 82;
            }
            while (v42 != a6 + 1);
            v31 += ((int)(v43 + ((1 << (a6 + a5)) >> 1)) >> (a6 + a5)) * *v34;
          }
LABEL_31:
          ++v33;
          v32 += 82;
        }
        while (v33 != 1);
      }
      int v48 = &a1[82 * v28];
      int v49 = (((1 << v23 >> 1) + v31) >> v23) + (__int16)v48[v30];
      if (v49 >= v19) {
        __int16 v50 = v19;
      }
      else {
        __int16 v50 = (((1 << v23 >> 1) + v31) >> v23) + v48[v30];
      }
      if (v49 >= v18) {
        __int16 v51 = v50;
      }
      else {
        __int16 v51 = v18;
      }
      v48[v30++] = v51;
      v27 += 2;
    }
    while (v30 != v22);
    ++v28;
    uint64_t v27 = v54 + 164;
  }
  while (v28 != v52);
  return result;
}

uint64_t sub_224ABC08C(_WORD *a1, uint64_t a2, _DWORD *a3, uint64_t a4, unsigned int a5)
{
  return sub_224ABBDC4(a1, a2, a3, a4, 1, 0, a5);
}

uint64_t sub_224ABC09C(_WORD *a1, uint64_t a2, _DWORD *a3, uint64_t a4, unsigned int a5)
{
  return sub_224ABBDC4(a1, a2, a3, a4, 1, 1, a5);
}

uint64_t sub_224ABC0AC(uint64_t result, int *a2, unsigned int a3)
{
  uint64_t v3 = 0;
  unsigned int v4 = __clz(a3);
  int v5 = *a2;
  int v6 = v4 + a2[46] - 20;
  int v7 = 128 << (24 - v4);
  uint64_t v8 = result;
  do
  {
    for (uint64_t i = 0; i != 164; i += 2)
    {
      int v5 = (((((v5 >> 3) ^ (v5 >> 12) ^ v5) ^ (v5 >> 1)) & 1) << 15) | (v5 >> 1);
      *(_WORD *)(v8 + i) = ((1 << v6 >> 1) + word_224B28F0A[(unsigned __int16)v5 >> 5]) >> v6;
    }
    ++v3;
    v8 += 164;
  }
  while (v3 != 73);
  int v10 = -v7;
  int v11 = v7 - 1;
  uint64_t v12 = a2[23];
  uint64_t v13 = (char *)(a2 + 24);
  int v14 = a2[44];
  uint64_t v15 = -(int)v12;
  uint64_t v16 = result + 166 * v15 + 498;
  for (uint64_t j = 3; j != 73; ++j)
  {
    uint64_t v18 = v16;
    for (uint64_t k = 3; k != 79; ++k)
    {
      int v20 = 0;
      if ((v12 & 0x80000000) == 0)
      {
        int v21 = (__int16 *)v18;
        int v22 = -(int)v12;
        int v23 = v13;
        do
        {
          uint64_t v24 = v21;
          uint64_t v25 = -(int)v12;
          if (v22 | v15)
          {
            do
            {
              int v27 = *v23++;
              int v26 = v27;
              int v28 = *v24++;
              v20 += v28 * v26;
              if (v25 >= v12) {
                break;
              }
              ++v25;
            }
            while (v25 | v22);
          }
          ++v22;
          v21 += 82;
        }
        while (v22 != 1);
      }
      uint64_t v29 = result + 164 * j;
      int v30 = (((1 << v14 >> 1) + v20) >> v14) + *(__int16 *)(v29 + 2 * k);
      if (v30 >= v11) {
        __int16 v31 = v11;
      }
      else {
        __int16 v31 = v30;
      }
      if (v30 >= v10) {
        __int16 v32 = v31;
      }
      else {
        __int16 v32 = v10;
      }
      *(_WORD *)(v29 + 2 * k) = v32;
      v18 += 2;
    }
    v16 += 164;
  }
  return result;
}

uint64_t sub_224ABC22C(uint64_t *a1, uint64_t *a2, _DWORD *a3, int *a4, signed __int16 a5, int a6, char a7, int a8, int a9)
{
  int v9 = a8;
  signed __int16 v10 = a5;
  int v11 = a3;
  uint64_t v12 = a2;
  int v14 = a9;
  uint64_t v237 = *MEMORY[0x263EF8340];
  uint64_t v15 = (uint64_t *)*a1;
  uint64_t v16 = &byte_224B28CC0[4 * a6];
  int v17 = *((_DWORD *)a1 + 79) - a9;
  v18.i32[0] = *v16;
  v18.i32[1] = v16[1];
  int v214 = v18.i32[0];
  if (v18.i32[0] < v17) {
    int v17 = v18.i32[0];
  }
  int v208 = v17;
  if (v17 >= 16) {
    int v19 = 16;
  }
  else {
    int v19 = v17;
  }
  int32x2_t v200 = v18;
  int v20 = v16[1];
  if (v18.i32[1] >= *((_DWORD *)a1 + 81) - a8) {
    int v21 = *((_DWORD *)a1 + 81) - a8;
  }
  else {
    int v21 = v16[1];
  }
  if (v21 >= 16) {
    int v22 = 16;
  }
  else {
    int v22 = v21;
  }
  int v211 = v22;
  int v212 = v19;
  *a3 = 0;
  if ((_BYTE)a5)
  {
    uint64_t v23 = *v15;
    unsigned int v24 = a5 - 1;
    unsigned int v25 = *(_DWORD *)(*v15 + 36 * v24 + 896);
    if (v25)
    {
      if (v25 == 1)
      {
        int8x8_t v30 = (int8x8_t)vrev64_s32((int32x2_t)vshr_n_u32(*(uint32x2_t *)(v23 + 36 * v24 + 900), 0xDuLL));
      }
      else
      {
        int v26 = (int32x2_t *)(v23 + 36 * v24);
        int v27 = (const float *)&v26[115];
        if (v25 == 2)
        {
          int32x2_t v28 = (int32x2_t)vld1_dup_f32(v27);
        }
        else
        {
          v28.i32[0] = v26[113].i32[1];
          *(float *)&v28.i32[1] = *v27;
        }
        int32x2_t v31 = vshl_n_s32((int32x2_t)__PAIR64__(a8, a9), 2uLL);
        int32x2_t v32 = vadd_s32(v18, v18);
        int v33 = (int32x2_t *)(v23 + 36 * v24 + 900);
        int32x2_t v34 = vadd_s32(v28, (int32x2_t)0xFFFF0000FFFF0000);
        if (*(unsigned char *)(v23 + 428)) {
          unsigned int v35 = 13;
        }
        else {
          unsigned int v35 = 14;
        }
        int32x2_t v36 = vadd_s32(vadd_s32(v31, (int32x2_t)-1), v32);
        int32x2_t v37 = vadd_s32(vmla_s32(vmul_s32(v26[114], vrev64_s32(v36)), v34, v36), *v33);
        int32x2_t v38 = (int32x2_t)vshl_u32(vshl_u32((uint32x2_t)vadd_s32(vdup_n_s32((1 << v35) >> 1), vabs_s32(v37)), (uint32x2_t)vneg_s32(vdup_n_s32(v35))), (uint32x2_t)vdup_n_s32(*(unsigned char *)(v23 + 428) == 0));
        int8x8_t v30 = vbsl_s8((int8x8_t)vcltz_s32(v37), (int8x8_t)vneg_s32(v38), (int8x8_t)v38);
      }
      if (*(unsigned char *)(v23 + 269)) {
        int8x8_t v30 = vand_s8((int8x8_t)vadd_s32((int32x2_t)vsra_n_u32((uint32x2_t)v30, (uint32x2_t)vand_s8(v30, (int8x8_t)0xFFFF0000FFFFLL), 0xFuLL), (int32x2_t)0x300000003), (int8x8_t)vdup_n_s32(0xFFF8u));
      }
    }
    else
    {
      int8x8_t v30 = 0;
    }
    int v29 = v30.u16[2] | (v30.u16[0] << 16);
    int v233 = v29;
    if (v25 >= 2)
    {
      LOWORD(v236[0]) = v30.i16[2];
      HIWORD(v236[0]) = v30.i16[0];
      goto LABEL_30;
    }
  }
  else
  {
    int v29 = 0;
    int v233 = 0;
  }
  v236[0] = -2147450880;
LABEL_30:
  int v39 = a5 >> 8;
  if (v39 >= 1)
  {
    uint64_t v40 = *v15;
    unsigned int v41 = v39 - 1;
    unsigned int v42 = *(_DWORD *)(*v15 + 36 * (v39 - 1) + 896);
    if (v42)
    {
      if (v42 == 1)
      {
        int8x8_t v46 = (int8x8_t)vrev64_s32((int32x2_t)vshr_n_u32(*(uint32x2_t *)(v40 + 36 * v41 + 900), 0xDuLL));
      }
      else
      {
        int v43 = (int32x2_t *)(v40 + 36 * v41);
        uint64_t v44 = (const float *)&v43[115];
        if (v42 == 2)
        {
          int32x2_t v45 = (int32x2_t)vld1_dup_f32(v44);
        }
        else
        {
          v45.i32[0] = v43[113].i32[1];
          *(float *)&v45.i32[1] = *v44;
        }
        int32x2_t v47 = vshl_n_s32((int32x2_t)__PAIR64__(a8, a9), 2uLL);
        int32x2_t v48 = vadd_s32(v200, v200);
        int v49 = (int32x2_t *)(v40 + 36 * v41 + 900);
        int32x2_t v50 = vadd_s32(v45, (int32x2_t)0xFFFF0000FFFF0000);
        if (*(unsigned char *)(v40 + 428)) {
          unsigned int v51 = 13;
        }
        else {
          unsigned int v51 = 14;
        }
        int32x2_t v52 = vadd_s32(vadd_s32(v47, (int32x2_t)-1), v48);
        int32x2_t v53 = vadd_s32(vmla_s32(vmul_s32(v43[114], vrev64_s32(v52)), v50, v52), *v49);
        int32x2_t v54 = (int32x2_t)vshl_u32(vshl_u32((uint32x2_t)vadd_s32(vdup_n_s32((1 << v51) >> 1), vabs_s32(v53)), (uint32x2_t)vneg_s32(vdup_n_s32(v51))), (uint32x2_t)vdup_n_s32(*(unsigned char *)(v40 + 428) == 0));
        int8x8_t v46 = vbsl_s8((int8x8_t)vcltz_s32(v53), (int8x8_t)vneg_s32(v54), (int8x8_t)v54);
      }
      if (*(unsigned char *)(v40 + 269)) {
        int8x8_t v46 = vand_s8((int8x8_t)vadd_s32((int32x2_t)vsra_n_u32((uint32x2_t)v46, (uint32x2_t)vand_s8(v46, (int8x8_t)0xFFFF0000FFFFLL), 0xFuLL), (int32x2_t)0x300000003), (int8x8_t)vdup_n_s32(0xFFF8u));
      }
    }
    else
    {
      int8x8_t v46 = 0;
    }
    __int16 v234 = v46.i16[2];
    __int16 v235 = v46.i16[0];
    if (v42 <= 1) {
      int v55 = -2147450880;
    }
    else {
      int v55 = v46.u16[2] | (v46.u16[0] << 16);
    }
    v236[1] = v55;
  }
  uint64_t v230 = 0;
  int v229 = 0;
  int v56 = *((_DWORD *)a1 + 80);
  int v187 = v29;
  uint64_t v193 = a5;
  int v185 = a5 >> 8;
  if (v56 >= a8)
  {
    unsigned int v218 = 0;
    uint64_t v195 = 0;
    unsigned int v226 = -1;
  }
  else
  {
    int v57 = (a8 - v56 + 1) >> 1;
    if (v200.i32[1] <= 1u) {
      int v58 = 2;
    }
    else {
      int v58 = 3;
    }
    if (v57 >= v58) {
      int v59 = v58;
    }
    else {
      int v59 = v57;
    }
    if (v200.i32[0] <= 0xFu) {
      int v60 = 1;
    }
    else {
      int v60 = 4;
    }
    uint64_t v195 = a1[(v9 & 0x1Fu) + 5] + 12 * a9;
    unsigned int v218 = v59;
    unsigned int v226 = sub_224ABD3C8(a2, a3, a5, v236, v195, v214, v212, v59, v60, (_DWORD *)&v230 + 1, &v229);
  }
  int v61 = *((_DWORD *)a1 + 78);
  if (v61 >= a9)
  {
    unsigned int v215 = 0;
    uint64_t v65 = 0;
    unsigned int v225 = -1;
  }
  else
  {
    int v62 = (a9 - v61 + 1) >> 1;
    if (v200.i32[0] <= 1u) {
      int v63 = 2;
    }
    else {
      int v63 = 3;
    }
    if (v62 >= v63) {
      int v64 = v63;
    }
    else {
      int v64 = v62;
    }
    uint64_t v65 = (uint64_t)&a1[(v9 & 0x1Fu) + 6];
    if (v200.i32[1] <= 0xFu) {
      int v66 = 1;
    }
    else {
      int v66 = 4;
    }
    unsigned int v215 = v64;
    unsigned int v225 = sub_224ABD50C(v12, v11, v10, v236, &a1[(v9 & 0x1Fu) + 6], v20, v211, a9 - 1, v64, v66, (_DWORD *)&v230 + 1, &v230);
  }
  if (v214 <= v20) {
    unsigned int v67 = v20;
  }
  else {
    unsigned int v67 = v214;
  }
  int v213 = (int *)a1;
  if ((a7 & 1) != 0 && v226 != -1 && v67 <= 0x10 && v214 + a9 < *((_DWORD *)a1 + 79))
  {
    unsigned __int16 v68 = v10;
    signed int v69 = v11;
    int v70 = v20;
    signed __int16 v71 = v10;
    uint64_t v72 = v15;
    int v73 = v11;
    int v74 = v21;
    unsigned int v75 = v67;
    sub_224ABD660(v12, v69, 4u, (unsigned int *)(v195 + 12 * v200.u32[0]), v68, v236, (_DWORD *)&v230 + 1, &v229);
    unsigned int v67 = v75;
    int v21 = v74;
    int v11 = v73;
    uint64_t v15 = v72;
    signed __int16 v10 = v71;
    int v20 = v70;
    int v14 = a9;
  }
  uint64_t v194 = v65;
  unsigned int v210 = v20;
  signed __int16 v199 = v10;
  int32x2_t v202 = v11;
  int v76 = *v11;
  if ((int)*v11 >= 1)
  {
    int v77 = v12 + 1;
    uint64_t v78 = *v11;
    do
    {
      *v77 += 640;
      v77 += 4;
      --v78;
    }
    while (v78);
  }
  int v196 = v76;
  int v197 = v14;
  int v80 = v229;
  int v79 = v230;
  int v228 = *(unsigned __int8 *)(*v15 + 437);
  int32x2_t v203 = v15;
  int v198 = v9;
  if (*((_DWORD *)v15 + 7))
  {
    int v189 = v229;
    int v191 = v230;
    int v182 = v9 >> 1;
    uint64_t v188 = v15[23];
    int v183 = v14 >> 1;
    unsigned int v184 = v67;
    uint64_t v186 = a1[38] + 5 * (v188 * ((v9 >> 1) & 0xF) + (v14 >> 1));
    if (v200.i32[1] <= 0xFu) {
      int v81 = 1;
    }
    else {
      int v81 = 2;
    }
    int v206 = v81;
    if ((v212 + 1) >> 1 >= 8) {
      int v82 = 8;
    }
    else {
      int v82 = (v212 + 1) >> 1;
    }
    int v83 = (v211 + 1) >> 1;
    if (v83 >= 8) {
      int v83 = 8;
    }
    int v204 = v83;
    if (v21 >= 1)
    {
      int v84 = 0;
      if (v200.i32[0] <= 0xFu) {
        uint64_t v85 = 1;
      }
      else {
        uint64_t v85 = 2;
      }
      uint64_t v222 = a1[38] + 5 * (v188 * ((v9 >> 1) & 0xF) + (v14 >> 1));
      do
      {
        if (v208 >= 1)
        {
          int v86 = 0;
          uint64_t v87 = v222;
          do
          {
            if (v84 | v86) {
              unsigned int v88 = 0;
            }
            else {
              unsigned int v88 = &v228;
            }
            sub_224ABD7C4(v203, (int *)v12, v202, v87, v10, v88, (__int16 *)&v233);
            v86 += v85;
            v87 += 5 * v85;
          }
          while (v82 > v86);
        }
        v84 += v206;
        v222 += 5 * (v188 << (v200.i32[1] > 0xFu));
      }
      while (v84 < v204);
    }
    unsigned int v89 = v214;
    if (v214 >= (int)v210) {
      unsigned int v89 = v210;
    }
    LOBYTE(v9) = v198;
    int v14 = v197;
    int v79 = v191;
    int v80 = v189;
    if (v89 >= 2 && v184 < 0x10)
    {
      uint64_t v90 = v214 >> 1;
      uint64_t v91 = v186 + 5 * v188 * (v210 >> 1);
      int v92 = v182 + (v210 >> 1);
      int v93 = (v182 & 0xFFFFFFF8) + 8;
      if (v213[81] >> 1 >= v93) {
        int v94 = (v182 & 0xFFFFFFF8) + 8;
      }
      else {
        int v94 = v213[81] >> 1;
      }
      if (v92 >= v94)
      {
        int v96 = v183;
        unsigned int v97 = v183 & 0xFFFFFFF8;
      }
      else
      {
        signed int v95 = v213[78] >> 1;
        int v96 = v183;
        unsigned int v97 = v183 & 0xFFFFFFF8;
        if (v95 <= (int)(v183 & 0xFFFFFFF8)) {
          signed int v95 = v183 & 0xFFFFFFF8;
        }
        if (v183 > v95)
        {
          sub_224ABD7C4(v203, (int *)v12, v202, v91 - 5, v199, 0, 0);
          int v96 = v183;
          int v80 = v189;
          int v79 = v191;
        }
      }
      int v98 = v90 + v96;
      int v99 = v213[79] >> 1;
      if (v99 >= (int)(v97 + 8)) {
        int v99 = v97 + 8;
      }
      if (v98 < v99)
      {
        if (v92 < v94)
        {
          sub_224ABD7C4(v203, (int *)v12, v202, v91 + 5 * (v214 >> 1), v199, 0, 0);
          int v80 = v189;
          int v79 = v191;
        }
        int v100 = v213[81] >> 1;
        if (v100 >= v93) {
          int v100 = (v182 & 0xFFFFFFF8) + 8;
        }
        if (v92 <= v100)
        {
          sub_224ABD7C4(v203, (int *)v12, v202, v91 + 5 * (v90 - v188), v199, 0, 0);
          int v80 = v189;
          int v79 = v191;
        }
      }
    }
  }
  int v201 = v80 + v79;
  int v227 = 0;
  if ((v225 | v226) == 0xFFFFFFFF)
  {
    unsigned __int16 v102 = v199;
    int v101 = v202;
  }
  else
  {
    int v101 = v202;
    sub_224ABD660(v12, v202, 4u, (unsigned int *)(v195 - 12), v199, v236, &v227, &v229);
    unsigned __int16 v102 = v199;
  }
  char v103 = 0;
  int v223 = (v9 & 0x1F) + 1;
  uint64_t v190 = v14;
  int v209 = v14 | 1;
  unsigned int v104 = 2;
  if (v200.i32[0] <= 0xFu) {
    int v105 = 2;
  }
  else {
    int v105 = 4;
  }
  int v207 = v105;
  int8x8_t v205 = &v213[2 * (v9 & 0x1E) + 14];
  int v106 = v14 + 1;
  if (v200.i32[1] <= 0xFu) {
    int v107 = 2;
  }
  else {
    int v107 = 4;
  }
  int v108 = -2;
  unsigned __int16 v109 = v102;
  do
  {
    char v110 = v103;
    if (v104 > v226 && v104 <= v218) {
      v226 += sub_224ABD3C8(v12, v101, v102, v236, *(void *)((char *)v213 + ((8 * (int)(v223 - 2 * v104)) | 8) + 48) + 12 * v209, v214, v212, v218 + 1 + v108, v207, &v227, &v229);
    }
    if (v104 > v225 && v104 <= v215) {
      v225 += sub_224ABD50C(v12, v101, v109, v236, v205, v210, v211, (v106 - 2 * v104) | 1, v215 + 1 + v108, v107, &v227, &v230);
    }
    int v108 = ~v104;
    unsigned int v104 = 3;
    char v103 = 1;
    unsigned __int16 v102 = v109;
  }
  while ((v110 & 1) == 0);
  int v111 = v229 + v230;
  if (v201)
  {
    int v112 = (int32x2_t *)v203;
    int v113 = v197;
    uint64_t v114 = v195;
    int v115 = v198;
    if (v201 == 1)
    {
      int v120 = 3 * v111;
      if (v120 >= 4) {
        int v117 = 4;
      }
      else {
        int v117 = v120;
      }
      uint64_t result = (3 - HIDWORD(v230));
      signed __int16 v119 = v199;
      int v116 = v196;
    }
    else
    {
      int v116 = v196;
      if (v201 == 2)
      {
        int v117 = 5;
        uint64_t result = (5 - HIDWORD(v230));
      }
      else
      {
        int v117 = 0;
        uint64_t result = 0;
      }
      signed __int16 v119 = v199;
    }
  }
  else
  {
    if (v111 >= 2) {
      int v117 = 2;
    }
    else {
      int v117 = v229 + v230;
    }
    uint64_t result = v111 > 0;
    int v112 = (int32x2_t *)v203;
    int v116 = v196;
    int v113 = v197;
    signed __int16 v119 = v199;
    uint64_t v114 = v195;
    int v115 = v198;
  }
  if (v116)
  {
    int v121 = v116;
    do
    {
      if (v121 < 2) {
        break;
      }
      uint64_t v122 = v121;
      int v123 = v12 + 2;
      uint64_t v124 = 1;
      int v121 = 0;
      do
      {
        if (*((_DWORD *)v123 - 2) < *((_DWORD *)v123 + 2))
        {
          long long v125 = *((_OWORD *)v123 - 1);
          *((_OWORD *)v123 - 1) = *(_OWORD *)v123;
          *(_OWORD *)int v123 = v125;
          int v121 = v124;
        }
        ++v124;
        v123 += 2;
      }
      while (v122 != v124);
    }
    while (v121);
  }
  int v126 = *v101;
  if (*v101 > v116)
  {
    do
    {
      if (v116 + 1 >= v126) {
        break;
      }
      uint64_t v127 = (uint64_t)&v12[2 * v196 + 2];
      int v128 = v196 + 1;
      int v129 = v116;
      int v130 = v116;
      do
      {
        if (SLODWORD(v12[2 * v129 + 1]) >= *(_DWORD *)(v127 + 8))
        {
          int v129 = v128;
        }
        else
        {
          long long v131 = *(_OWORD *)&v12[2 * v129];
          *(_OWORD *)&v12[2 * v129] = *(_OWORD *)v127;
          *(_OWORD *)uint64_t v127 = v131;
          int v129 = v128;
          int v130 = v128;
        }
        ++v128;
        v127 += 16;
      }
      while (v126 != v128);
      int v126 = v130;
    }
    while (v130 > v116);
    int v126 = *v101;
  }
  if (v119 >> 8 < 1)
  {
    if (v193 && v126 <= 1)
    {
      int v217 = v117;
      unsigned int v220 = result;
      uint64_t v163 = (uint64_t)&v112[4];
      int v164 = v112[4].u8[(v193 - 1)];
      if (v212 >= v211) {
        int v165 = v211;
      }
      else {
        int v165 = v212;
      }
      if (v226 != -1 && v165 >= 1)
      {
        uint64_t v166 = 0;
        do
        {
          if (*v101 > 1) {
            break;
          }
          sub_224ABDBAC((int *)v12, v101, v114 + 12 * v166, v164, v163);
          v166 += byte_224B28CC0[4 * *(unsigned __int8 *)(v114 + 12 * v166 + 10)];
        }
        while ((int)v166 < v165);
      }
      __int32 v167 = v101;
      if (v225 != -1 && v165 >= 1)
      {
        uint64_t v168 = 0;
        while (1)
        {
          int v126 = *v167;
          if (*v167 > 1) {
            break;
          }
          uint64_t v169 = *(void *)(v194 + 8 * v168) + 12 * (v190 - 1);
          sub_224ABDBAC((int *)v12, v167, v169, v164, v163);
          v168 += byte_224B28CC0[4 * *(unsigned __int8 *)(v169 + 10) + 1];
          if ((int)v168 >= v165) {
            goto LABEL_229;
          }
        }
        int v101 = v167;
        int v115 = v198;
        int v112 = (int32x2_t *)v203;
        int v113 = v197;
        int v117 = v217;
        uint64_t result = v220;
        goto LABEL_231;
      }
LABEL_229:
      int v126 = *v167;
      int v101 = v167;
      int v115 = v198;
      int v112 = (int32x2_t *)v203;
      int v113 = v197;
      int v117 = v217;
      uint64_t result = v220;
    }
    if (!v126)
    {
      int v176 = 0;
      int v177 = v187;
LABEL_249:
      uint64_t v180 = v176 + 1;
      int32x2_t v181 = &v12[2 * v176];
      do
      {
        *(_DWORD *)int32x2_t v181 = v177;
        v181 += 2;
        BOOL v150 = v180++ == 2;
      }
      while (!v150);
LABEL_252:
      int v162 = (16 * v117) | (8 * v228) | result;
      goto LABEL_253;
    }
LABEL_231:
    int32x2_t v170 = vrev64_s32(vsub_s32((int32x2_t)0x7F0000007FLL, vshl_n_s32(vadd_s32((int32x2_t)__PAIR64__(v115, v113), v200), 5uLL)));
    int32x2_t v171 = vrev64_s32(vadd_s32(vshl_n_s32(vsub_s32(v112[1], (int32x2_t)__PAIR64__(v115, v113)), 5uLL), (int32x2_t)0x8000000080));
    if (v126 <= 1) {
      uint64_t v172 = 1;
    }
    else {
      uint64_t v172 = v126;
    }
    int32x2_t v173 = v12;
    do
    {
      v174.i32[0] = *(__int16 *)v173;
      v174.i32[1] = *((__int16 *)v173 + 1);
      int8x8_t v175 = vbsl_s8((int8x8_t)vcgt_s32(v170, v174), (int8x8_t)v170, (int8x8_t)vmin_s32(v174, v171));
      *(_WORD *)int32x2_t v173 = v175.i16[0];
      *((_WORD *)v173 + 1) = v175.i16[2];
      v173 += 2;
      --v172;
    }
    while (v172);
    int v176 = *v101;
    int v177 = v187;
    if (*v101 > 1) {
      goto LABEL_252;
    }
    goto LABEL_249;
  }
  if (v126 > 1) {
    goto LABEL_206;
  }
  int v216 = v117;
  unsigned int v219 = result;
  uint64_t v132 = (uint64_t)&v112[4];
  int v224 = v112[3].u8[v193 + 7];
  int v133 = v112[4].u8[v185 - 1];
  if (v212 >= v211) {
    int v134 = v211;
  }
  else {
    int v134 = v212;
  }
  unint64_t v135 = &v12[2 * v126];
  uint64_t v231 = 0;
  uint64_t v232 = 0;
  int v136 = v112 + 4;
  int v137 = v134;
  if (v226 != -1 && v134 >= 1)
  {
    uint64_t v138 = 0;
    do
    {
      sub_224ABDA28((uint64_t)v135, (int *)&v231, v114 + 12 * v138, v224, v133, v102, v132);
      int v134 = v137;
      uint64_t v132 = (uint64_t)v136;
      unint64_t v135 = &v12[2 * v126];
      unsigned __int16 v102 = v109;
      v138 += byte_224B28CC0[4 * *(unsigned __int8 *)(v114 + 12 * v138 + 10)];
    }
    while ((int)v138 < v137);
  }
  if (v225 != -1 && v134 >= 1)
  {
    uint64_t v139 = 0;
    do
    {
      uint64_t v140 = *(void *)(v194 + 8 * v139) + 12 * (v190 - 1);
      sub_224ABDA28((uint64_t)v135, (int *)&v231, v140, v224, v133, v102, v132);
      uint64_t v132 = (uint64_t)v136;
      unint64_t v135 = &v12[2 * v126];
      unsigned __int16 v102 = v109;
      v139 += byte_224B28CC0[4 * *(unsigned __int8 *)(v140 + 10) + 1];
    }
    while ((int)v139 < v137);
  }
  uint64_t v141 = 0;
  char v142 = 1;
  int v112 = (int32x2_t *)v203;
  int v115 = v198;
  int v113 = v197;
  do
  {
    char v143 = v142;
    int v144 = *((_DWORD *)&v231 + v141);
    if (v144 > 1) {
      goto LABEL_196;
    }
    int v145 = *((_DWORD *)&v232 + v141);
    if (!v145) {
      goto LABEL_193;
    }
    *((_DWORD *)&v135[2 * v144++] + v141) = *((_DWORD *)v135 + v141 + 8);
    if (v144 == 2) {
      goto LABEL_196;
    }
    if (v145 == 2)
    {
      *((_DWORD *)v135 + v141 + 4) = *((_DWORD *)v135 + v141 + 12);
    }
    else
    {
LABEL_193:
      uint64_t v146 = 4 * v141;
      int v147 = *(&v233 + v141);
      uint64_t v148 = v144 + 1;
      int v149 = (_DWORD *)((char *)&v12[2 * v126 + 2 * v144] + v146);
      do
      {
        *int v149 = v147;
        v149 += 4;
        BOOL v150 = v148++ == 2;
      }
      while (!v150);
    }
LABEL_196:
    char v142 = 0;
    uint64_t v141 = 1;
  }
  while ((v143 & 1) != 0);
  uint64_t v151 = *v202;
  if (v151 == 1 && *v12 == *v135) {
    v12[2] = v12[4];
  }
  if ((int)v151 <= 1) {
    int v152 = 1;
  }
  else {
    int v152 = v151;
  }
  int v153 = v152 - v151 + 1;
  int v154 = &v12[2 * v151 + 1];
  int v117 = v216;
  uint64_t result = v219;
  do
  {
    *(_DWORD *)int v154 = 2;
    v154 += 2;
    --v153;
  }
  while (v153);
  int v126 = 2;
  int *v202 = 2;
LABEL_206:
  *(int32x2_t *)v155.i8 = vsub_s32((int32x2_t)0x7F0000007FLL, vshl_n_s32(vadd_s32((int32x2_t)__PAIR64__(v115, v113), v200), 5uLL));
  v155.i64[1] = v155.i64[0];
  int32x4_t v156 = vrev64q_s32(v155);
  *(int32x2_t *)v157.i8 = vadd_s32(vshl_n_s32(vsub_s32(v112[1], (int32x2_t)__PAIR64__(v115, v113)), 5uLL), (int32x2_t)0x8000000080);
  v157.i64[1] = v157.i64[0];
  int32x4_t v158 = vrev64q_s32(v157);
  uint64_t v159 = v126;
  do
  {
    int32x4_t v160 = vmovl_s16(*(int16x4_t *)v12);
    *uint64_t v12 = (uint64_t)vmovn_s32((int32x4_t)vbslq_s8((int8x16_t)vcgtq_s32(v156, v160), (int8x16_t)v156, (int8x16_t)vminq_s32(v160, v158)));
    v12 += 2;
    --v159;
  }
  while (v159);
  int v161 = v117 >> 1;
  if (v117 >> 1 == 2)
  {
    if ((int)result >= 4) {
      int v178 = 4;
    }
    else {
      int v178 = result;
    }
    if (v178 <= 1) {
      int v178 = 1;
    }
    int v162 = v178 + 3;
    goto LABEL_253;
  }
  if (v161 == 1)
  {
    if ((int)result >= 3) {
      int v179 = 3;
    }
    else {
      int v179 = result;
    }
    int v162 = v179 + 1;
LABEL_253:
    *a4 = v162;
    return result;
  }
  if (!v161)
  {
    if ((int)result >= 1) {
      int v162 = 1;
    }
    else {
      int v162 = result;
    }
    goto LABEL_253;
  }
  return result;
}

uint64_t sub_224ABD3C8(uint64_t *a1, _DWORD *a2, unsigned __int16 a3, unsigned int *a4, uint64_t a5, int a6, int a7, int a8, int a9, _DWORD *a10, _DWORD *a11)
{
  int v14 = &byte_224B28CC0[4 * *(unsigned __int8 *)(a5 + 10)];
  int v15 = *v14;
  if (a6 >= v15) {
    int v16 = *v14;
  }
  else {
    int v16 = a6;
  }
  if (a9 <= v16) {
    int v17 = v16;
  }
  else {
    int v17 = a9;
  }
  if (v15 >= a6)
  {
    unsigned int v22 = 2;
    if (a6 != 1)
    {
      int v23 = v14[1];
      if (2 * a8 < v23) {
        int v23 = 2 * a8;
      }
      if (v23 <= 2) {
        unsigned int v22 = 2;
      }
      else {
        unsigned int v22 = v23;
      }
    }
    sub_224ABD660(a1, a2, v22 * v17, (unsigned int *)a5, a3, a4, a10, a11);
    return v22 >> 1;
  }
  else
  {
    unsigned int v19 = 0;
    uint64_t v21 = a5;
    while (1)
    {
      sub_224ABD660(a1, a2, 2 * v17, (unsigned int *)v21, a3, a4, a10, a11);
      v19 += v17;
      if ((int)v19 >= a7) {
        break;
      }
      uint64_t v21 = a5 + 12 * v19;
      if (a9 <= byte_224B28CC0[4 * *(unsigned __int8 *)(v21 + 10)]) {
        int v17 = byte_224B28CC0[4 * *(unsigned __int8 *)(v21 + 10)];
      }
      else {
        int v17 = a9;
      }
    }
    return 1;
  }
}

uint64_t sub_224ABD50C(uint64_t *a1, _DWORD *a2, unsigned __int16 a3, unsigned int *a4, void *a5, int a6, int a7, int a8, int a9, int a10, _DWORD *a11, _DWORD *a12)
{
  uint64_t v14 = *a5 + 12 * a8;
  int v15 = &byte_224B28CC0[4 * *(unsigned __int8 *)(v14 + 10)];
  int v16 = v15[1];
  if (a6 >= v16) {
    int v17 = v15[1];
  }
  else {
    int v17 = a6;
  }
  if (a10 <= v17) {
    int v18 = v17;
  }
  else {
    int v18 = a10;
  }
  if (v16 >= a6)
  {
    unsigned int v24 = 2;
    if (a6 != 1)
    {
      int v25 = *v15;
      if (2 * a9 < v25) {
        int v25 = 2 * a9;
      }
      if (v25 <= 2) {
        unsigned int v24 = 2;
      }
      else {
        unsigned int v24 = v25;
      }
    }
    sub_224ABD660(a1, a2, v24 * v18, (unsigned int *)v14, a3, a4, a11, a12);
    return v24 >> 1;
  }
  else
  {
    int v21 = 0;
    while (1)
    {
      sub_224ABD660(a1, a2, 2 * v18, (unsigned int *)v14, a3, a4, a11, a12);
      v21 += v18;
      if (v21 >= a7) {
        break;
      }
      uint64_t v14 = a5[v21] + 12 * a8;
      if (a10 <= byte_224B28CC0[4 * *(unsigned __int8 *)(v14 + 10) + 1]) {
        int v18 = byte_224B28CC0[4 * *(unsigned __int8 *)(v14 + 10) + 1];
      }
      else {
        int v18 = a10;
      }
    }
    return 1;
  }
}

uint64_t *sub_224ABD660(uint64_t *result, _DWORD *a2, unsigned int a3, unsigned int *a4, unsigned __int16 a5, unsigned int *a6, _DWORD *a7, _DWORD *a8)
{
  uint64_t v8 = *a4;
  if (v8 != -2147450880)
  {
    if ((~a5 & 0xFF00) != 0)
    {
      if (*((unsigned __int16 *)a4 + 4) != a5) {
        return result;
      }
      unsigned int v10 = *((unsigned __int8 *)a4 + 11);
      if ((v10 & 1) == 0
        || ((uint64_t v11 = a6[1], *a6 != -2147450880) ? (v8 = *a6) : (v8 = v8), v11 == -2147450880))
      {
        uint64_t v11 = a4[1];
      }
      uint64_t v12 = v8 | (v11 << 32);
      *a8 = 1;
      *a7 |= v10 >> 1;
      uint64_t v13 = *a2;
      if ((int)v13 >= 1)
      {
        uint64_t v14 = 0;
        int v15 = result;
        while (1)
        {
          uint64_t v16 = *v15;
          v15 += 2;
          if (v16 == v12) {
            goto LABEL_31;
          }
          if (v13 == ++v14)
          {
            if ((int)v13 > 7) {
              return result;
            }
            break;
          }
        }
      }
      int v17 = &result[2 * (int)v13];
      *int v17 = v12;
      *((_DWORD *)v17 + 2) = a3;
      int v18 = v13 + 1;
    }
    else
    {
      if ((char)a5 == *((char *)a4 + 8))
      {
        uint64_t v9 = 0;
      }
      else
      {
        if ((char)a5 != *((char *)a4 + 9)) {
          return result;
        }
        uint64_t v9 = 1;
      }
      unsigned int v19 = *((unsigned __int8 *)a4 + 11);
      if ((v19 & 1) == 0 || (unsigned int v20 = *a6, *a6 == -2147450880)) {
        unsigned int v20 = a4[v9];
      }
      *a8 = 1;
      *a7 |= v19 >> 1;
      uint64_t v21 = *a2;
      if ((int)v21 >= 1)
      {
        uint64_t v14 = 0;
        unsigned int v22 = (int *)result;
        while (1)
        {
          int v23 = *v22;
          v22 += 4;
          if (v23 == v20) {
            break;
          }
          if (v21 == ++v14)
          {
            if ((int)v21 > 7) {
              return result;
            }
            goto LABEL_28;
          }
        }
LABEL_31:
        LODWORD(result[2 * v14 + 1]) += a3;
        return result;
      }
LABEL_28:
      unsigned int v24 = (unsigned int *)&result[2 * (int)v21];
      unsigned int *v24 = v20;
      v24[2] = a3;
      int v18 = v21 + 1;
    }
    *a2 = v18;
  }
  return result;
}

uint64_t *sub_224ABD7C4(uint64_t *result, int *a2, int *a3, uint64_t a4, __int16 a5, _DWORD *a6, __int16 *a7)
{
  if (*(_DWORD *)a4 != -2147450880)
  {
    int v7 = word_224B175A0[*(char *)(a4 + 4)];
    v8.i32[0] = *(_DWORD *)a4 << 16;
    v8.i32[1] = *(_DWORD *)a4;
    int32x2_t v9 = vshr_n_s32(v8, 0x10uLL);
    int32x2_t v10 = vmul_s32(vdup_n_s32(v7 * *((char *)result + (char)a5 + 45)), v9);
    int32x2_t v11 = vmax_s32(vmin_s32(vshr_n_s32(vadd_s32(vsra_n_s32(v10, v10, 0x1FuLL), (int32x2_t)0x200000002000), 0xEuLL), (int32x2_t)0x3F0000003FLL), vdup_n_s32(0xFFFFC001));
    uint64_t v12 = *result;
    if (*(unsigned char *)(*result + 269))
    {
      int32x2_t v11 = (int32x2_t)vand_s8((int8x8_t)vadd_s32((int32x2_t)vsra_n_u32((uint32x2_t)v11, (uint32x2_t)vand_s8((int8x8_t)v11, (int8x8_t)0xFFFF0000FFFFLL), 0xFuLL), (int32x2_t)0x300000003), (int8x8_t)vdup_n_s32(0xFFF8u));
    }
    else
    {
      double v13 = COERCE_DOUBLE(vand_s8((int8x8_t)vsra_n_u32((uint32x2_t)v11, (uint32x2_t)vand_s8((int8x8_t)v11, (int8x8_t)0xFFFF0000FFFFLL), 0xFuLL), (int8x8_t)vdup_n_s32(0xFFFEu)));
      if (!*(unsigned char *)(v12 + 428)) {
        *(double *)&int32x2_t v11 = v13;
      }
    }
    uint64_t v14 = *a3;
    int v15 = *a3;
    int v16 = a5 >> 8;
    if (v16 == -1)
    {
      if (a6)
      {
        v20.i32[0] = *a7;
        v20.i32[1] = a7[1];
        int32x2_t v21 = vabd_s32(vshr_n_s32(vshl_n_s32(v11, 0x10uLL), 0x10uLL), v20);
        *a6 = vorr_s8((int8x8_t)v21, (int8x8_t)vdup_lane_s32(v21, 1)).u32[0] > 0xF;
      }
      int v22 = v11.u16[0] | (v11.u16[2] << 16);
      if (v15 >= 1)
      {
        uint64_t v23 = 0;
        unsigned int v24 = a2;
        while (1)
        {
          int v25 = *v24;
          v24 += 4;
          if (v25 == v22) {
            goto LABEL_26;
          }
          if (v14 == ++v23)
          {
            if (v15 > 7) {
              return result;
            }
            break;
          }
        }
      }
      int v26 = &a2[4 * (int)v14];
      *int v26 = v22;
    }
    else
    {
      unint64_t v17 = v11.u16[0] | ((unint64_t)v11.u16[2] << 16);
      int32x2_t v18 = vmul_s32(vdup_n_s32(*((char *)result + v16 + 45) * v7), v9);
      int8x8_t v19 = (int8x8_t)vmax_s32(vmin_s32(vshr_n_s32(vadd_s32(vsra_n_s32(v18, v18, 0x1FuLL), (int32x2_t)0x200000002000), 0xEuLL), (int32x2_t)0x3F0000003FLL), vdup_n_s32(0xFFFFC001));
      if (*(unsigned char *)(*result + 269))
      {
        int8x8_t v19 = vand_s8((int8x8_t)vadd_s32((int32x2_t)vsra_n_u32((uint32x2_t)v19, (uint32x2_t)vand_s8(v19, (int8x8_t)0xFFFF0000FFFFLL), 0xFuLL), (int32x2_t)0x300000003), (int8x8_t)vdup_n_s32(0xFFF8u));
      }
      else
      {
        double v27 = COERCE_DOUBLE(vand_s8((int8x8_t)vsra_n_u32((uint32x2_t)v19, (uint32x2_t)vand_s8(v19, (int8x8_t)0xFFFF0000FFFFLL), 0xFuLL), (int8x8_t)vdup_n_s32(0xFFFEu)));
        if (!*(unsigned char *)(v12 + 428)) {
          *(double *)&int8x8_t v19 = v27;
        }
      }
      unint64_t v28 = ((unint64_t)v19.u32[1] << 48) | ((unint64_t)v19.u16[0] << 32) | v17;
      if (v15 >= 1)
      {
        uint64_t v23 = 0;
        int v29 = (uint64_t *)a2;
        while (1)
        {
          uint64_t v30 = *v29;
          v29 += 2;
          if (v30 == v28) {
            break;
          }
          if (v14 == ++v23)
          {
            if (v15 > 7) {
              return result;
            }
            goto LABEL_24;
          }
        }
LABEL_26:
        a2[4 * v23 + 2] += 2;
        return result;
      }
LABEL_24:
      int v26 = &a2[4 * (int)v14];
      *(void *)int v26 = v28;
    }
    v26[2] = 2;
    *a3 = v15 + 1;
  }
  return result;
}

uint64_t sub_224ABDA28(uint64_t result, int *a2, uint64_t a3, int a4, int a5, __int16 a6, uint64_t a7)
{
  uint64_t v7 = 0;
  uint64_t v8 = result + 32;
  int v9 = (char)a6;
  int v10 = a6 >> 8;
  char v11 = 1;
  do
  {
    int v12 = *(char *)(a3 + 8 + v7);
    unsigned int v13 = v12 - 1;
    if (v12 < 1) {
      break;
    }
    char v14 = v11;
    int v15 = (unsigned __int16 *)(a3 + 4 * v7);
    int v16 = *v15;
    int v17 = v15[1];
    if (v9 == v12)
    {
      uint64_t v18 = *a2;
      if ((int)v18 <= 1)
      {
        *a2 = v18 + 1;
        int8x8_t v19 = (_WORD *)(result + 16 * v18);
        *int8x8_t v19 = v16;
        v19[1] = v17;
      }
      uint64_t v20 = a2[3];
      if ((int)v20 <= 1)
      {
        if (*(unsigned __int8 *)(a7 + (v9 - 1)) != a5)
        {
          int v16 = -v16;
          int v17 = -v17;
        }
        a2[3] = v20 + 1;
        uint64_t v21 = v8 + 16 * v20;
        *(_WORD *)(v21 + 4) = v16;
        *(_WORD *)(v21 + 6) = v17;
      }
    }
    else if (v10 == v12)
    {
      uint64_t v22 = a2[1];
      if ((int)v22 <= 1)
      {
        a2[1] = v22 + 1;
        uint64_t v23 = result + 16 * v22;
        *(_WORD *)(v23 + 4) = v16;
        *(_WORD *)(v23 + 6) = v17;
      }
      uint64_t v24 = a2[2];
      if ((int)v24 <= 1)
      {
        if (*(unsigned __int8 *)(a7 + (v10 - 1)) != a4)
        {
          int v16 = -v16;
          int v17 = -v17;
        }
        a2[2] = v24 + 1;
        int v25 = (_WORD *)(v8 + 16 * v24);
        *int v25 = v16;
        v25[1] = v17;
      }
    }
    else
    {
      uint64_t v26 = a2[2];
      if ((int)v26 <= 1)
      {
        a2[2] = v26 + 1;
        int v27 = *(unsigned __int8 *)(a7 + v13);
        unint64_t v28 = (_WORD *)(v8 + 16 * v26);
        BOOL v29 = v27 == a4;
        if (v27 == a4) {
          __int16 v30 = v16;
        }
        else {
          __int16 v30 = -(__int16)v16;
        }
        if (v29) {
          __int16 v31 = v17;
        }
        else {
          __int16 v31 = -(__int16)v17;
        }
        *unint64_t v28 = v30;
        v28[1] = v31;
      }
      uint64_t v32 = a2[3];
      if ((int)v32 <= 1)
      {
        a2[3] = v32 + 1;
        uint64_t v33 = v8 + 16 * v32;
        if (*(unsigned __int8 *)(a7 + v13) == a5)
        {
          *(_WORD *)(v33 + 4) = v16;
          *(_WORD *)(v33 + 6) = v17;
        }
        else
        {
          *(_WORD *)(v33 + 4) = -(__int16)v16;
          *(_WORD *)(v33 + 6) = -(__int16)v17;
        }
      }
    }
    char v11 = 0;
    uint64_t v7 = 1;
  }
  while ((v14 & 1) != 0);
  return result;
}

int *sub_224ABDBAC(int *result, _DWORD *a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5 = 0;
  char v6 = 1;
  do
  {
    char v7 = v6;
    int v8 = *(char *)(a3 + 8 + v5);
    if (v8 < 1) {
      break;
    }
    int v9 = (unsigned __int16 *)(a3 + 4 * v5);
    int v10 = *v9;
    int v11 = *(unsigned __int8 *)(a5 + v8 - 1);
    int v12 = v9[1];
    BOOL v13 = v11 == a4;
    if (v11 == a4) {
      LOWORD(v14) = v10;
    }
    else {
      int v14 = -v10;
    }
    if (v13) {
      LOWORD(v15) = v12;
    }
    else {
      int v15 = -v12;
    }
    uint64_t v16 = *a2;
    if ((int)v16 < 1)
    {
      LODWORD(v17) = 0;
    }
    else
    {
      uint64_t v17 = 0;
      uint64_t v18 = result;
      while (1)
      {
        int v19 = *v18;
        v18 += 4;
        if (((unsigned __int16)v14 | ((unsigned __int16)v15 << 16)) == v19) {
          break;
        }
        if (v16 == ++v17) {
          goto LABEL_16;
        }
      }
    }
    if (v17 == v16)
    {
LABEL_16:
      uint64_t v20 = &result[4 * v16];
      *(_WORD *)uint64_t v20 = v14;
      *((_WORD *)v20 + 1) = v15;
      v20[2] = 2;
      *a2 = v16 + 1;
    }
    char v6 = 0;
    uint64_t v5 = 1;
  }
  while ((v7 & 1) != 0);
  return result;
}

uint64_t *sub_224ABDC5C(uint64_t *result, uint64_t *a2, int a3, int a4, int a5)
{
  do
  {
    uint64_t v6 = *result++;
    uint64_t v5 = v6;
    if (a4 >= 1)
    {
      uint64_t v7 = v5 + 12 * a3;
      uint64_t v8 = a4;
      do
      {
        uint64_t v9 = *a2;
        *(_DWORD *)(v7 + 8) = *((_DWORD *)a2 + 2);
        *(void *)uint64_t v7 = v9;
        v7 += 12;
        --v8;
      }
      while (v8);
    }
    --a5;
  }
  while (a5);
  return result;
}

void sub_224ABDCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  if (a8 < a6)
  {
    int v8 = a8;
    uint64_t v40 = 5 * a2;
    do
    {
      if (a7 < a5)
      {
        uint64_t v12 = *(void *)(a3 + 16 * (v8 & 0xF));
        int v13 = a7;
        do
        {
          int v14 = (__int16 *)(v12 + 12 * ((2 * v13) | 1));
          uint64_t v15 = byte_224B28CC0[4 * *((unsigned __int8 *)v14 + 10)];
          unsigned int v16 = (v15 + 1) >> 1;
          uint64_t v17 = (unsigned __int8 *)(v14 + 4);
          if (*((char *)v14 + 9) < 1 || !*(unsigned char *)(a4 + *((unsigned __int8 *)v14 + 9) - 1)) {
            goto LABEL_25;
          }
          int v18 = v14[2];
          if (v18 < 0) {
            int v18 = -v18;
          }
          int v19 = v14[3];
          if (v19 < 0) {
            int v19 = -v19;
          }
          if ((unsigned __int16)(v19 | v18) <= 0xFFFu)
          {
            if (byte_224B28CC0[4 * *((unsigned __int8 *)v14 + 10)])
            {
              if (v16 <= 1) {
                unsigned int v20 = 1;
              }
              else {
                unsigned int v20 = (v15 + 1) >> 1;
              }
              uint64_t v21 = 5 * v13;
              v13 += v20;
              do
              {
                uint64_t v22 = a1 + v21;
                char v23 = *((unsigned char *)v14 + 9);
                *(_DWORD *)uint64_t v22 = *((_DWORD *)v14 + 1);
                *(unsigned char *)(v22 + 4) = v23;
                v21 += 5;
                --v20;
              }
              while (v20);
            }
          }
          else
          {
            if ((char)*v17 < 1 || !*(unsigned char *)(a4 + *v17 - 1)) {
              goto LABEL_44;
            }
LABEL_25:
            int v24 = *v14;
            if (v24 < 0) {
              int v24 = -v24;
            }
            int v25 = v14[1];
            if (v25 < 0) {
              int v25 = -v25;
            }
            if ((unsigned __int16)(v25 | v24) <= 0xFFFu)
            {
              if (byte_224B28CC0[4 * *((unsigned __int8 *)v14 + 10)])
              {
                if (v16 <= 1) {
                  unsigned int v26 = 1;
                }
                else {
                  unsigned int v26 = (v15 + 1) >> 1;
                }
                uint64_t v27 = 5 * v13;
                v13 += v26;
                do
                {
                  uint64_t v28 = a1 + v27;
                  unsigned __int8 v29 = *v17;
                  *(_DWORD *)uint64_t v28 = *(_DWORD *)v14;
                  *(unsigned char *)(v28 + 4) = v29;
                  v27 += 5;
                  --v26;
                }
                while (v26);
              }
            }
            else
            {
LABEL_44:
              if (byte_224B28CC0[4 * *((unsigned __int8 *)v14 + 10)])
              {
                unint64_t v30 = v13;
                bzero((void *)(a1 + 5 * v13), 5 * ((unint64_t)(v15 + 1) >> 1));
                if (v16 <= 1) {
                  int v32 = 1;
                }
                else {
                  int v32 = v16;
                }
                int v33 = ((_WORD)v32 + 1) & 0x1FE;
                v31.i32[0] = v32 - 1;
                int64x2_t v34 = (int64x2_t)v30;
                unsigned int v35 = v33 - 2;
                do
                {
                  int8x16_t v36 = (int8x16_t)v34;
                  int64x2_t v34 = vaddq_s64(v34, vdupq_n_s64(1uLL));
                  v33 -= 2;
                }
                while (v33);
                uint32x2_t v37 = vcgt_u32((uint32x2_t)vorr_s8((int8x8_t)vdup_n_s32(v35), (int8x8_t)0x100000000), (uint32x2_t)vdup_lane_s32(v31, 0));
                v38.i64[0] = v37.i32[0];
                v38.i64[1] = v37.i32[1];
                int v13 = vaddvq_s64((int64x2_t)vbslq_s8(v38, v36, (int8x16_t)v34));
              }
            }
          }
        }
        while (v13 < a5);
      }
      a1 += v40;
      ++v8;
    }
    while (v8 != a6);
  }
}

uint64_t sub_224ABDF28(uint64_t result, int a2, int a3, int a4, int a5, int a6)
{
  if (*(_DWORD *)(result + 212) == 1) {
    int v6 = 0;
  }
  else {
    int v6 = a2;
  }
  int v8 = *(_DWORD *)(result + 16);
  int v7 = *(_DWORD *)(result + 20);
  if (a6 < v7) {
    int v7 = a6;
  }
  if (a3 <= 8) {
    int v9 = 8;
  }
  else {
    int v9 = a3;
  }
  if (a4 + 8 < v8) {
    int v8 = a4 + 8;
  }
  uint64_t v10 = v6;
  uint64_t v12 = *(void *)(result + 176);
  uint64_t v11 = *(void *)(result + 184);
  uint64_t v13 = v11 * v10;
  if (v7 > a5)
  {
    int v14 = a5;
    uint64_t v15 = v12 + 5 * (16 * v13 + v11 * (a5 & 0xF));
    do
    {
      uint64_t v16 = 5 * a3;
      uint64_t v17 = a4 - (uint64_t)a3;
      if (a3 < a4)
      {
        do
        {
          *(_DWORD *)(v15 + v16) = -2147450880;
          v16 += 5;
          --v17;
        }
        while (v17);
      }
      ++v14;
      v15 += 5 * v11;
    }
    while (v14 != v7);
    uint64_t v12 = *(void *)(result + 176);
  }
  int v18 = *(_DWORD *)(result + 152);
  if (v18 >= 1)
  {
    uint64_t v19 = 0;
    int v59 = v9 - 8;
    uint64_t v20 = v12 + 80 * v13;
    do
    {
      int v21 = *(_DWORD *)(result + 4 * v19 + 56);
      if (v21 != 0x80000000 && v7 > a5)
      {
        uint64_t v22 = *(unsigned __int8 *)(result + v19 + 53);
        int v23 = v22 - 4;
        uint64_t v24 = *(void *)(*(void *)(result + 168) + 8 * v22) + 5 * v11 * a5;
        int v25 = a5;
        do
        {
          if ((v25 & 0x7FFFFFF8) <= a5) {
            int v26 = a5;
          }
          else {
            int v26 = v25 & 0x7FFFFFF8;
          }
          if ((v25 & 0x7FFFFFF8) + 8 >= v7) {
            int v27 = v7;
          }
          else {
            int v27 = (v25 & 0x7FFFFFF8) + 8;
          }
          int v28 = v59;
          if (v59 < v8)
          {
            do
            {
              uint64_t v29 = v24 + 5 * v28;
              uint64_t v30 = *(char *)(v29 + 4);
              if (*(unsigned char *)(v29 + 4) && (uint64_t v31 = *(unsigned int *)(result + 28 * v19 + 4 * v30 + 64), v31))
              {
                int v32 = *(_DWORD *)v29;
                int v33 = v21 * word_224B175A0[v31];
                int v34 = (v33 * (__int16)v32 + ((v33 * (__int16)v32) >> 31) + 0x2000) >> 14;
                if (v34 >= 0x3FFF) {
                  int v34 = 0x3FFF;
                }
                if (v34 <= -16383) {
                  int v34 = -16383;
                }
                if (v34 >= 0) {
                  unsigned int v35 = v34;
                }
                else {
                  unsigned int v35 = -v34;
                }
                unsigned int v36 = v35 >> 6;
                if ((v34 ^ v23) >= 0) {
                  int v37 = v36;
                }
                else {
                  int v37 = -v36;
                }
                if (v37 + v25 >= v26 && v37 + v25 < v27)
                {
                  uint64_t v44 = 0;
                  int v45 = (v33 * (v32 >> 16) + ((v33 * (v32 >> 16)) >> 31) + 0x2000) >> 14;
                  if (v45 >= 0x3FFF) {
                    int v45 = 0x3FFF;
                  }
                  if (v45 <= -16383) {
                    int v45 = -16383;
                  }
                  int v46 = v45 ^ v23;
                  if (v45 < 0) {
                    int v45 = -v45;
                  }
                  int v47 = v45 >> 6;
                  if (v46 < 0) {
                    int v47 = -v47;
                  }
                  uint64_t v48 = v47 + v28;
                  uint64_t v49 = v11 * (((_BYTE)v25 + (_BYTE)v37) & 0xF) + v48;
                  if (v8 <= v28 + 1) {
                    int v50 = v28 + 1;
                  }
                  else {
                    int v50 = v8;
                  }
                  int v51 = v50 - 1;
                  uint64_t v52 = v20 + 5 * v49;
                  uint64_t v53 = v24 + 5 * v28;
                  while (1)
                  {
                    int v42 = v28;
                    unsigned int v54 = v28 & 0xFFFFFFF8;
                    int v55 = v54 - 8;
                    if ((int)(v54 - 8) <= a3) {
                      int v55 = a3;
                    }
                    if (v48 >= v55)
                    {
                      signed int v56 = v54 + 16;
                      if ((int)(v54 + 16) >= a4) {
                        signed int v56 = a4;
                      }
                      if (v48 < v56)
                      {
                        uint64_t v57 = v52 + v44;
                        *(_DWORD *)uint64_t v57 = v32;
                        *(unsigned char *)(v57 + 4) = v31;
                      }
                    }
                    if (v51 == v42) {
                      break;
                    }
                    if (*(unsigned __int8 *)(v53 + v44 + 9) == v30)
                    {
                      int v58 = *(_DWORD *)(v53 + v44 + 5);
                      ++v48;
                      v44 += 5;
                      int v28 = v42 + 1;
                      if (v58 == v32) {
                        continue;
                      }
                    }
                    goto LABEL_54;
                  }
                  int v42 = v51;
                }
                else
                {
                  if (v8 <= v28 + 1) {
                    int v39 = v28 + 1;
                  }
                  else {
                    int v39 = v8;
                  }
                  int v40 = v39 - 1;
                  uint64_t v41 = 5 * v28;
                  while (v28 + 1 < v8)
                  {
                    int v42 = v28;
                    if (*(unsigned __int8 *)(v24 + v41 + 9) == v30)
                    {
                      int v43 = *(_DWORD *)(v24 + v41 + 5);
                      v41 += 5;
                      ++v28;
                      if (v43 == v32) {
                        continue;
                      }
                    }
                    goto LABEL_54;
                  }
                  int v42 = v40;
                }
              }
              else
              {
                int v42 = v28;
              }
LABEL_54:
              int v28 = v42 + 1;
            }
            while (v42 + 1 < v8);
          }
          v24 += 5 * v11;
          ++v25;
        }
        while (v25 != v7);
        int v18 = *(_DWORD *)(result + 152);
      }
      ++v19;
    }
    while (v19 < v18);
  }
  return result;
}

uint64_t sub_224ABE2D0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v127 = *(_DWORD **)(a1 + 8);
  int v5 = v127[542];
  uint64_t result = v5 != 3;
  int v7 = &byte_224B28CC0[4 * a2];
  unsigned int v8 = *v7;
  if (v5 == 3) {
    unsigned int v9 = *v7;
  }
  else {
    unsigned int v9 = v8 + 1;
  }
  int v10 = *(_DWORD *)(a1 + 24);
  int v11 = *(_DWORD *)(a1 + 28);
  unint64_t v112 = v10 & 0x1F;
  unint64_t v118 = v112 >> result;
  unsigned int v125 = v5 == 1;
  unint64_t v107 = v11 & 0x1F;
  unint64_t v102 = v107 >> v125;
  int v12 = v7[1];
  if (v5 == 1) {
    unsigned int v13 = v12 + 1;
  }
  else {
    unsigned int v13 = v7[1];
  }
  if (!v5 || (v8 <= result ? (BOOL v14 = (*(_DWORD *)(a1 + 24) & 1) == 0) : (BOOL v14 = 0), v14))
  {
    int v96 = 0;
  }
  else
  {
    if (v12 <= v125) {
      int v15 = *(_DWORD *)(a1 + 28) & 1;
    }
    else {
      int v15 = 1;
    }
    int v96 = v15;
  }
  if (*(unsigned char *)(a3 + 6))
  {
    switch(v12)
    {
      case 1:
        *(unsigned char *)(a1 + v107 + 64) = 64;
        break;
      case 2:
        *(_WORD *)(a1 + v107 + 64) = 16448;
        break;
      case 3:
      case 5:
      case 6:
      case 7:
        break;
      case 4:
        *(_DWORD *)(a1 + v107 + 64) = 1077952576;
        break;
      case 8:
        *(void *)(a1 + v107 + 64) = 0x4040404040404040;
        break;
      default:
        if (v12 == 16)
        {
          *(void *)&long long v73 = 0x4040404040404040;
          *((void *)&v73 + 1) = 0x4040404040404040;
          *(_OWORD *)(a1 + v107 + 64) = v73;
        }
        else if (v12 == 32)
        {
          *(void *)&long long v72 = 0x4040404040404040;
          *((void *)&v72 + 1) = 0x4040404040404040;
          *(_OWORD *)(a1 + 64 + v107) = v72;
          *(_OWORD *)(a1 + 64 + (v107 + 16)) = v72;
        }
        break;
    }
    switch(v8)
    {
      case 1u:
        *(unsigned char *)(*(void *)(a1 + 656) + v112 + 32) = 64;
        goto LABEL_135;
      case 2u:
        *(_WORD *)(*(void *)(a1 + 656) + v112 + 32) = 16448;
        goto LABEL_135;
      case 3u:
      case 5u:
      case 6u:
      case 7u:
        goto LABEL_135;
      case 4u:
        *(_DWORD *)(*(void *)(a1 + 656) + v112 + 32) = 1077952576;
        goto LABEL_135;
      case 8u:
        uint64_t v76 = *(void *)(a1 + 656) + v112;
        goto LABEL_134;
      default:
        if (v8 == 16)
        {
          *(void *)(*(void *)(a1 + 656) + v112 + 32) = 0x4040404040404040;
          uint64_t v74 = *(void *)(a1 + 656);
          uint64_t v75 = (v112 + 8);
        }
        else
        {
          if (v8 != 32) {
            goto LABEL_135;
          }
          *(void *)(*(void *)(a1 + 656) + v112 + 32) = 0x4040404040404040;
          *(void *)(*(void *)(a1 + 656) + (v112 + 8) + 32) = 0x4040404040404040;
          *(void *)(*(void *)(a1 + 656) + (v112 + 16) + 32) = 0x4040404040404040;
          uint64_t v74 = *(void *)(a1 + 656);
          uint64_t v75 = (v112 + 24);
        }
        uint64_t v76 = v74 + v75;
LABEL_134:
        *(void *)(v76 + 32) = 0x4040404040404040;
LABEL_135:
        if (v96)
        {
          unsigned int v77 = v9 >> result;
          unsigned int v78 = v13 >> v125;
          switch(v13 >> v125)
          {
            case 1u:
              unint64_t v79 = a1 + v102;
              *(unsigned char *)(v79 + 96) = 64;
              *(unsigned char *)(v79 + 128) = 64;
              break;
            case 2u:
              unint64_t v84 = a1 + v102;
              *(_WORD *)(v84 + 96) = 16448;
              *(_WORD *)(v84 + 128) = 16448;
              break;
            case 3u:
            case 5u:
            case 6u:
            case 7u:
              break;
            case 4u:
              unint64_t v85 = a1 + v102;
              *(_DWORD *)(v85 + 96) = 1077952576;
              *(_DWORD *)(v85 + 128) = 1077952576;
              break;
            case 8u:
              unint64_t v86 = a1 + v102;
              *(void *)(v86 + 96) = 0x4040404040404040;
              *(void *)(v86 + 128) = 0x4040404040404040;
              break;
            default:
              if (v78 == 16)
              {
                unint64_t v87 = a1 + v102;
                *(void *)&long long v88 = 0x4040404040404040;
                *((void *)&v88 + 1) = 0x4040404040404040;
                *(_OWORD *)(v87 + 96) = v88;
                *(_OWORD *)(v87 + 128) = v88;
              }
              else if (v78 == 32)
              {
                uint64_t v80 = a1 + 96;
                *(void *)&long long v81 = 0x4040404040404040;
                *((void *)&v81 + 1) = 0x4040404040404040;
                *(_OWORD *)(v80 + v102) = v81;
                uint64_t v82 = v102 + 16;
                *(_OWORD *)(v80 + v82) = v81;
                uint64_t v83 = a1 + 128;
                *(_OWORD *)(v83 + v102) = v81;
                *(_OWORD *)(v83 + v82) = v81;
              }
              break;
          }
          switch(v77)
          {
            case 1u:
              *(unsigned char *)(*(void *)(a1 + 656) + v118 + 64) = 64;
              *(unsigned char *)(*(void *)(a1 + 656) + v118 + 96) = 64;
              return result;
            case 2u:
              *(_WORD *)(*(void *)(a1 + 656) + v118 + 64) = 16448;
              *(_WORD *)(*(void *)(a1 + 656) + v118 + 96) = 16448;
              return result;
            case 3u:
            case 5u:
            case 6u:
            case 7u:
              return result;
            case 4u:
              *(_DWORD *)(*(void *)(a1 + 656) + v118 + 64) = 1077952576;
              *(_DWORD *)(*(void *)(a1 + 656) + v118 + 96) = 1077952576;
              return result;
            case 8u:
              uint64_t v91 = v112 >> result;
              *(void *)(*(void *)(a1 + 656) + v118 + 64) = 0x4040404040404040;
              goto LABEL_155;
            default:
              if (v77 == 16)
              {
                *(void *)(*(void *)(a1 + 656) + v118 + 64) = 0x4040404040404040;
                uint64_t v91 = v118 + 8;
                *(void *)(*(void *)(a1 + 656) + v91 + 64) = 0x4040404040404040;
                uint64_t v92 = *(void *)(a1 + 656) + v118;
              }
              else
              {
                if (v77 != 32) {
                  return result;
                }
                *(void *)(*(void *)(a1 + 656) + v118 + 64) = 0x4040404040404040;
                uint64_t v89 = v118 + 8;
                *(void *)(*(void *)(a1 + 656) + v89 + 64) = 0x4040404040404040;
                uint64_t v90 = v118 + 16;
                *(void *)(*(void *)(a1 + 656) + v90 + 64) = 0x4040404040404040;
                uint64_t v91 = v118 + 24;
                *(void *)(*(void *)(a1 + 656) + v91 + 64) = 0x4040404040404040;
                *(void *)(*(void *)(a1 + 656) + v118 + 96) = 0x4040404040404040;
                *(void *)(*(void *)(a1 + 656) + v89 + 96) = 0x4040404040404040;
                uint64_t v92 = *(void *)(a1 + 656) + v90;
              }
              *(void *)(v92 + 96) = 0x4040404040404040;
LABEL_155:
              *(void *)(*(void *)(a1 + 656) + v91 + 96) = 0x4040404040404040;
              break;
          }
        }
        break;
    }
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 16);
    signed int v17 = v127[862] - v10;
    if ((int)v8 < v17) {
      signed int v17 = v8;
    }
    int v99 = v17;
    if (v12 >= v127[863] - v11) {
      int v18 = v127[863] - v11;
    }
    else {
      int v18 = v12;
    }
    uint64_t v19 = 10;
    if (!*(unsigned char *)(a3 + 3)) {
      uint64_t v19 = 26;
    }
    uint64_t v20 = *(unsigned __int8 *)(a3 + v19);
    uint64_t v21 = *(unsigned __int8 *)(a3 + 7);
    v132[0] = *(unsigned __int8 *)(a3 + 29);
    v132[1] = *(_WORD *)(a3 + 30);
    if (v18 >= 1)
    {
      int v94 = (v99 + (int)result) >> result;
      int v93 = (int)(v18 + v125) >> v125;
      int v111 = &byte_224B28D18[8 * v20];
      unsigned __int16 v109 = v111 + 1;
      unsigned int v22 = 0;
      int v117 = &byte_224B28D18[8 * v21];
      int v121 = v117 + 1;
      uint64_t v126 = result;
      int v105 = v18;
      do
      {
        unsigned int v23 = v22 + 16;
        if (v18 >= (int)(v22 + 16)) {
          int v24 = v22 + 16;
        }
        else {
          int v24 = v18;
        }
        int v101 = v24;
        unsigned int v25 = v22;
        if (v99 >= 1)
        {
          unsigned int v26 = 0;
          BOOL v95 = v22 != 0;
          int v27 = v93;
          if (v93 >= (int)(v23 >> v125)) {
            int v27 = v23 >> v125;
          }
          int v28 = v99;
          int v100 = v25;
          unsigned int v98 = v25 >> v125;
          unsigned int v106 = v23;
          int v104 = v27;
          do
          {
            unsigned int v97 = v26 + 16;
            if (v28 >= (int)(v26 + 16)) {
              int v29 = v26 + 16;
            }
            else {
              int v29 = v28;
            }
            int v30 = v11 + v100;
            *(_DWORD *)(a1 + 28) = v30;
            unsigned int v108 = v26;
            if (v100 >= v101)
            {
              int v31 = v100;
            }
            else
            {
              BOOL v113 = v26 != 0;
              int v31 = v100;
              char v123 = v95;
              do
              {
                unsigned int v32 = v10 + v26;
                *(_DWORD *)(a1 + 24) = v32;
                int v33 = v26;
                if ((int)v26 < v29)
                {
                  int v115 = v31;
                  uint64_t v34 = (v31 + v107);
                  int v33 = v26;
                  unsigned int v35 = (uint64x2_t *)(a1 + 64 + v34);
                  signed __int16 v119 = (void *)(a1 + 64 + (v34 + 8));
                  char v36 = v113;
                  do
                  {
                    if (*(unsigned char *)(a3 + 3))
                    {
                      unsigned __int8 v131 = 64;
                      unsigned int v130 = 0;
                      uint64_t v37 = (v33 + v112);
                      __int16 v38 = sub_224ABF768(a1, (uint64x2_t *)(*(void *)(a1 + 656) + v37 + 32), v35, *(unsigned __int8 *)(a3 + 10), a2, a3, 1, 0, *(_WORD **)(v16 + 13936), &v130, &v131);
                      int v39 = *(_WORD **)(v16 + 13928);
                      *int v39 = v130 + 32 * v38;
                      *(void *)(v16 + 13928) = v39 + 1;
                      unsigned int v40 = *v111;
                      if (v40 >= 8) {
                        int v41 = 8;
                      }
                      else {
                        int v41 = *v111;
                      }
                      unsigned int v42 = *v109;
                      if (v42 >= 8) {
                        int v43 = 8;
                      }
                      else {
                        int v43 = *v109;
                      }
                      *(void *)(v16 + 13936) += 2 * (16 * v41 * v43);
                      int v44 = v127[863] - *(_DWORD *)(a1 + 28);
                      if ((int)v42 < v44) {
                        int v44 = v42;
                      }
                      switch(v44)
                      {
                        case 1:
                          LODWORD(v45) = v131;
                          v35->i8[0] = v131;
                          break;
                        case 2:
                          LODWORD(v45) = v131;
                          v35->i16[0] = v131 | (v131 << 8);
                          break;
                        case 3:
                        case 5:
                        case 6:
                        case 7:
                          goto LABEL_57;
                        case 4:
                          LODWORD(v45) = v131;
                          v35->i32[0] = 16843009 * v131;
                          break;
                        case 8:
                          LODWORD(v45) = v131;
                          v35->i64[0] = 0x101010101010101 * v131;
                          break;
                        default:
                          if (v44 == 16)
                          {
                            uint64_t v45 = v131;
                            v35->i64[0] = 0x101010101010101 * v131;
                            *signed __int16 v119 = 0x101010101010101 * v45;
                          }
                          else
                          {
LABEL_57:
                            LODWORD(v45) = v131;
                            memset(v35, v131, v44);
                          }
                          break;
                      }
                      uint64_t result = v126;
                      int v46 = v127[862] - *(_DWORD *)(a1 + 24);
                      if ((int)v40 < v46) {
                        int v46 = v40;
                      }
                      switch(v46)
                      {
                        case 1:
                          *(unsigned char *)(*(void *)(a1 + 656) + v37 + 32) = v45;
                          break;
                        case 2:
                          *(_WORD *)(*(void *)(a1 + 656) + v37 + 32) = v45 | ((_WORD)v45 << 8);
                          break;
                        case 3:
                        case 5:
                        case 6:
                        case 7:
                          goto LABEL_67;
                        case 4:
                          *(_DWORD *)(*(void *)(a1 + 656) + v37 + 32) = 16843009 * v45;
                          break;
                        case 8:
                          uint64_t v47 = 0x101010101010101 * v45;
                          uint64_t v48 = *(void *)(a1 + 656) + v37;
                          goto LABEL_71;
                        default:
                          if (v46 == 16)
                          {
                            uint64_t v47 = 0x101010101010101 * v45;
                            *(void *)(*(void *)(a1 + 656) + v37 + 32) = v47;
                            uint64_t v48 = *(void *)(a1 + 656) + (v37 + 8);
LABEL_71:
                            *(void *)(v48 + 32) = v47;
                          }
                          else
                          {
LABEL_67:
                            memset((void *)(*(void *)(a1 + 656) + v37 + 32), v45, v46);
                            uint64_t result = v126;
                          }
                          break;
                      }
                    }
                    else
                    {
                      sub_224ABF134(a1, a2, a3, *(unsigned __int8 *)(a3 + 26), 0, (uint64_t)v132, v36, v123, 0);
                      uint64_t result = v126;
                      unsigned int v40 = *v111;
                    }
                    v33 += v40;
                    unsigned int v32 = *(_DWORD *)(a1 + 24) + v40;
                    *(_DWORD *)(a1 + 24) = v32;
                    ++v36;
                  }
                  while (v33 < v29);
                  int v30 = *(_DWORD *)(a1 + 28);
                  unsigned int v26 = v108;
                  int v31 = v115;
                }
                int v10 = v32 - v33;
                int v49 = *v109;
                v31 += v49;
                v30 += v49;
                *(_DWORD *)(a1 + 24) = v10;
                *(_DWORD *)(a1 + 28) = v30;
                ++v123;
              }
              while (v31 < v101);
            }
            int v11 = v30 - v31;
            *(_DWORD *)(a1 + 28) = v11;
            if (v96)
            {
              uint64_t v120 = 0;
              unsigned int v50 = v97 >> result;
              if (v94 < (int)(v97 >> result)) {
                unsigned int v50 = v94;
              }
              int v124 = v50;
              signed int v51 = v26 >> result;
              int v18 = v105;
              unsigned int v23 = v106;
              int v52 = v104;
              unsigned int v103 = v26 >> result;
              do
              {
                uint64_t v53 = v120;
                int v54 = v11 + v100;
                *(_DWORD *)(a1 + 28) = v54;
                ++v120;
                for (int i = v98; i < v52; *(_DWORD *)(a1 + 28) = v54)
                {
                  int v56 = v10 + v26;
                  *(_DWORD *)(a1 + 24) = v56;
                  if (v51 >= v124)
                  {
                    int v66 = *v121;
                    int v60 = v51;
                  }
                  else
                  {
                    int v116 = v112 | (32 * ((i << v125) + v107));
                    int v110 = i;
                    uint64_t v57 = (i + v102);
                    uint64_t v58 = a1 + 32 * v53 + 96;
                    int v59 = (uint64x2_t *)(v58 + v57);
                    uint64_t v114 = (void *)(v58 + (v57 + 8));
                    int v60 = v51;
                    while (2)
                    {
                      unsigned __int8 v129 = 64;
                      unsigned int v128 = 0;
                      int v61 = *(unsigned __int8 *)(a3 + 3);
                      if (!*(unsigned char *)(a3 + 3)) {
                        unsigned int v128 = *(unsigned __int8 *)(a1 + 9344 + v116 + (v60 << result));
                      }
                      uint64_t v62 = (v60 + v118);
                      __int16 v63 = sub_224ABF768(a1, (uint64x2_t *)(*(void *)(a1 + 656) + 32 * v53 + v62 + 64), v59, *(unsigned __int8 *)(a3 + 7), a2, a3, v61, v120, *(_WORD **)(v16 + 13936), &v128, &v129);
                      int v64 = *(_WORD **)(v16 + 13928);
                      *int v64 = v128 + 32 * v63;
                      *(void *)(v16 + 13928) = v64 + 1;
                      int v65 = *v117;
                      int v66 = *v121;
                      *(void *)(v16 + 13936) += 32 * *v117 * (unint64_t)*v121;
                      int v67 = (int)(v127[863] + v125 - *(_DWORD *)(a1 + 28)) >> v125;
                      if (v66 < v67) {
                        int v67 = v66;
                      }
                      switch(v67)
                      {
                        case 1:
                          LODWORD(v68) = v129;
                          v59->i8[0] = v129;
                          break;
                        case 2:
                          LODWORD(v68) = v129;
                          v59->i16[0] = v129 | (v129 << 8);
                          break;
                        case 3:
                        case 5:
                        case 6:
                        case 7:
                          goto LABEL_92;
                        case 4:
                          LODWORD(v68) = v129;
                          v59->i32[0] = 16843009 * v129;
                          break;
                        case 8:
                          LODWORD(v68) = v129;
                          v59->i64[0] = 0x101010101010101 * v129;
                          break;
                        default:
                          if (v67 == 16)
                          {
                            uint64_t v68 = v129;
                            v59->i64[0] = 0x101010101010101 * v129;
                            *uint64_t v114 = 0x101010101010101 * v68;
                          }
                          else
                          {
LABEL_92:
                            LODWORD(v68) = v129;
                            memset(v59, v129, v67);
                          }
                          break;
                      }
                      uint64_t result = v126;
                      int v69 = (v127[862] + (int)result - *(_DWORD *)(a1 + 24)) >> result;
                      if (v65 < v69) {
                        int v69 = v65;
                      }
                      switch(v69)
                      {
                        case 1:
                          *(unsigned char *)(*(void *)(a1 + 656) + 32 * v53 + v62 + 64) = v68;
                          goto LABEL_107;
                        case 2:
                          *(_WORD *)(*(void *)(a1 + 656) + 32 * v53 + v62 + 64) = v68 | ((_WORD)v68 << 8);
                          goto LABEL_107;
                        case 3:
                        case 5:
                        case 6:
                        case 7:
                          goto LABEL_102;
                        case 4:
                          *(_DWORD *)(*(void *)(a1 + 656) + 32 * v53 + v62 + 64) = 16843009 * v68;
                          goto LABEL_107;
                        case 8:
                          uint64_t v70 = 0x101010101010101 * v68;
                          uint64_t v71 = *(void *)(a1 + 656) + 32 * v53 + v62;
                          goto LABEL_106;
                        default:
                          if (v69 == 16)
                          {
                            uint64_t v70 = 0x101010101010101 * v68;
                            *(void *)(*(void *)(a1 + 656) + 32 * v53 + v62 + 64) = v70;
                            uint64_t v71 = *(void *)(a1 + 656) + 32 * v53 + (v62 + 8);
LABEL_106:
                            *(void *)(v71 + 64) = v70;
                          }
                          else
                          {
LABEL_102:
                            memset((void *)(*(void *)(a1 + 656) + 32 * v53 + v62 + 64), v68, v69);
                            uint64_t result = v126;
                          }
LABEL_107:
                          v60 += v65;
                          int v56 = *(_DWORD *)(a1 + 24) + (v65 << result);
                          *(_DWORD *)(a1 + 24) = v56;
                          if (v60 < v124) {
                            continue;
                          }
                          int v54 = *(_DWORD *)(a1 + 28);
                          int v18 = v105;
                          unsigned int v23 = v106;
                          signed int v51 = v103;
                          int v52 = v104;
                          unsigned int v26 = v108;
                          int i = v110;
                          break;
                      }
                      break;
                    }
                  }
                  int v10 = v56 - (v60 << result);
                  i += v66;
                  v54 += v66 << v125;
                  *(_DWORD *)(a1 + 24) = v10;
                }
                int v11 = v54 - (i << v125);
                *(_DWORD *)(a1 + 28) = v11;
                int v28 = v99;
              }
              while (!v53);
            }
            else
            {
              int v28 = v99;
              int v18 = v105;
              unsigned int v23 = v106;
            }
            unsigned int v26 = v97;
          }
          while ((int)v97 < v28);
        }
        unsigned int v22 = v23;
      }
      while ((int)v23 < v18);
    }
  }
  return result;
}

uint64_t sub_224ABF134(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, char a7, char a8, uint64_t a9)
{
  uint64_t result = a9;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(v14 + 3280);
  unsigned int v16 = a4;
  signed int v17 = &byte_224B28D18[8 * a4];
  int v18 = *v17;
  int v19 = v17[1];
  if (a5 <= 1
    && *(_WORD *)(a6 + 2 * a5)
    && ((*(unsigned __int16 *)(a6 + 2 * a5) >> (a7 + 4 * a8)) & 1) != 0)
  {
    uint64_t v20 = &byte_224B28D18[8 * byte_224B28D18[8 * a4 + 6]];
    int v21 = *v20;
    int v58 = v20[1];
    uint64_t result = sub_224ABF134(a1, a2, a3);
    int v22 = *(_DWORD *)(a1 + 24) + v21;
    *(_DWORD *)(a1 + 24) = v22;
    if (v18 >= v19 && v22 < *(_DWORD *)(v14 + 3448))
    {
      uint64_t result = sub_224ABF134(a1, a2, a3);
      int v22 = *(_DWORD *)(a1 + 24);
    }
    int v23 = v22 - v21;
    int v24 = v58;
    int v25 = *(_DWORD *)(a1 + 28) + v58;
    *(_DWORD *)(a1 + 24) = v23;
    *(_DWORD *)(a1 + 28) = v25;
    if (v19 >= v18 && v25 < *(_DWORD *)(v14 + 3452))
    {
      uint64_t result = sub_224ABF134(a1, a2, a3);
      int v52 = v21;
      int v53 = *(_DWORD *)(a1 + 24) + v21;
      *(_DWORD *)(a1 + 24) = v53;
      if (v18 >= v19)
      {
        int v24 = v58;
        if (v53 < *(_DWORD *)(v14 + 3448))
        {
          uint64_t result = sub_224ABF134(a1, a2, a3);
          int v52 = v21;
          int v24 = v58;
          int v53 = *(_DWORD *)(a1 + 24);
        }
      }
      else
      {
        int v24 = v58;
      }
      *(_DWORD *)(a1 + 24) = v53 - v52;
      int v25 = *(_DWORD *)(a1 + 28);
    }
    *(_DWORD *)(a1 + 28) = v25 - v24;
    return result;
  }
  int v27 = *(_DWORD *)(a1 + 24);
  int v26 = *(_DWORD *)(a1 + 28);
  memset(__c, 0, sizeof(__c));
  int v28 = *(_DWORD *)(a1 + 258564);
  if (!v28)
  {
    uint64_t v54 = v13;
    uint64_t v55 = v15;
    unsigned int v56 = a4;
    uint64_t v57 = a9;
    int v30 = (_WORD *)(a1 + 1024);
    goto LABEL_21;
  }
  uint64_t v29 = v13 + 24 * (v28 & 1);
  int v30 = *(_WORD **)(v29 + 13912);
  if (v18 >= 8) {
    int v31 = 8;
  }
  else {
    int v31 = v18;
  }
  if (v19 >= 8) {
    int v32 = 8;
  }
  else {
    int v32 = v19;
  }
  *(void *)(v29 + 13912) = &v30[16 * v31 * v32];
  if (v28 != 2)
  {
    uint64_t v54 = v13;
    uint64_t v55 = v15;
    unsigned int v56 = a4;
    uint64_t v57 = a9;
LABEL_21:
    uint64_t v36 = v27 & 0x1F;
    int v37 = v26 & 0x1F;
    __int16 v38 = (uint64x2_t *)(a1 + (v26 & 0x1F) + 64);
    int v59 = v30;
    uint64_t result = sub_224ABF768(a1, (uint64x2_t *)(*(void *)(a1 + 656) + v36 + 32), v38, a4, a2, a3, 0, 0, v30, (unsigned int *)&__c[1], __c);
    uint64_t v35 = result;
    int v39 = *(_DWORD *)(v14 + 3452) - *(_DWORD *)(a1 + 28);
    if (v19 < v39) {
      int v39 = v19;
    }
    switch(v39)
    {
      case 1:
        unsigned int v40 = __c[0];
        v38->i8[0] = __c[0];
        goto LABEL_31;
      case 2:
        unsigned int v40 = __c[0];
        v38->i16[0] = __c[0] | (__c[0] << 8);
        goto LABEL_31;
      case 3:
      case 5:
      case 6:
      case 7:
        goto LABEL_27;
      case 4:
        unsigned int v40 = __c[0];
        v38->i32[0] = 16843009 * __c[0];
        goto LABEL_31;
      case 8:
        unsigned int v40 = __c[0];
        v38->i64[0] = 0x101010101010101 * __c[0];
        goto LABEL_31;
      default:
        if (v39 == 16)
        {
          unsigned int v40 = __c[0];
          *(int64x2_t *)__int16 v38 = vdupq_n_s64(0x101010101010101 * (unint64_t)__c[0]);
        }
        else
        {
LABEL_27:
          unsigned int v40 = __c[0];
          uint64_t result = (uint64_t)memset(v38, __c[0], v39);
        }
LABEL_31:
        int v41 = *(_DWORD *)(v14 + 3448) - *(_DWORD *)(a1 + 24);
        if (v18 < v41) {
          int v41 = v18;
        }
        switch(v41)
        {
          case 1:
            *(unsigned char *)(*(void *)(a1 + 656) + v36 + 32) = v40;
            goto LABEL_42;
          case 2:
            *(_WORD *)(*(void *)(a1 + 656) + v36 + 32) = v40 | ((_WORD)v40 << 8);
            goto LABEL_42;
          case 3:
          case 5:
          case 6:
          case 7:
            goto LABEL_37;
          case 4:
            *(_DWORD *)(*(void *)(a1 + 656) + v36 + 32) = 16843009 * v40;
            goto LABEL_42;
          case 8:
            uint64_t v42 = 0x101010101010101 * v40;
            uint64_t v43 = *(void *)(a1 + 656) + v36;
            goto LABEL_41;
          default:
            if (v41 == 16)
            {
              uint64_t v42 = 0x101010101010101 * v40;
              *(void *)(*(void *)(a1 + 656) + v36 + 32) = v42;
              uint64_t v43 = *(void *)(a1 + 656) + (v36 + 8);
LABEL_41:
              *(void *)(v43 + 32) = v42;
            }
            else
            {
LABEL_37:
              uint64_t result = (uint64_t)memset((void *)(*(void *)(a1 + 656) + v36 + 32), v40, v41);
            }
LABEL_42:
            uint64_t v44 = a1 + 9344 + (v36 | (32 * v37));
            switch(v18)
            {
              case 1:
                char v45 = __c[1];
                do
                {
                  *(unsigned char *)uint64_t v44 = v45;
                  v44 += 32;
                  --v19;
                }
                while (v19);
                break;
              case 2:
                __int16 v47 = 257 * *(_WORD *)&__c[1];
                do
                {
                  *(_WORD *)uint64_t v44 = v47;
                  v44 += 32;
                  --v19;
                }
                while (v19);
                break;
              case 3:
              case 5:
              case 6:
              case 7:
                break;
              case 4:
                int v48 = 16843009 * *(_DWORD *)&__c[1];
                do
                {
                  *(_DWORD *)uint64_t v44 = v48;
                  v44 += 32;
                  --v19;
                }
                while (v19);
                break;
              case 8:
                uint64_t v49 = 0x101010101010101 * *(unsigned int *)&__c[1];
                do
                {
                  *(void *)uint64_t v44 = v49;
                  v44 += 32;
                  --v19;
                }
                while (v19);
                break;
              default:
                if (v18 == 16)
                {
                  uint64_t v46 = 0x101010101010101 * *(unsigned int *)&__c[1];
                  do
                  {
                    *(void *)uint64_t v44 = v46;
                    *(void *)(v44 + 8) = v46;
                    v44 += 32;
                    --v19;
                  }
                  while (v19);
                }
                break;
            }
            int v50 = *(_DWORD *)(a1 + 258564);
            if (v50 == 1)
            {
              signed int v51 = *(_WORD **)(v54 + 13928);
              *signed int v51 = *(_WORD *)&__c[1] + 32 * v35;
              *(void *)(v54 + 13928) = v51 + 1;
              return result;
            }
            unsigned int v16 = v56;
            uint64_t result = v57;
            uint64_t v15 = v55;
            int v30 = v59;
            if ((v50 & 1) == 0) {
              goto LABEL_61;
            }
            return result;
        }
    }
  }
  int v33 = *(__int16 **)(v13 + 13904);
  int v34 = *v33;
  *(void *)(v13 + 13904) = v33 + 1;
  uint64_t v35 = (v34 >> 5);
  *(_DWORD *)&__c[1] = v34 & 0x1F;
LABEL_61:
  if ((v35 & 0x80000000) == 0) {
    return (*(uint64_t (**)(uint64_t, void, _WORD *, uint64_t))(v15
  }
                                                                        + 136 * v16
                                                                        + 8 * *(unsigned int *)&__c[1]
                                                                        + 680))(result, *(void *)(v14 + 2144), v30, v35);
  return result;
}

uint64_t sub_224ABF768(uint64_t a1, uint64x2_t *a2, uint64x2_t *a3, unsigned int a4, int a5, uint64_t a6, int a7, unsigned int a8, _WORD *a9, unsigned int *a10, unsigned char *a11)
{
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  int v14 = *(unsigned __int8 *)(*(void *)(v12 + 24) + *(unsigned __int8 *)(a6 + 4) + 808);
  uint64_t v15 = a4;
  unsigned int v16 = &byte_224B28CC0[4 * a5];
  uint64_t v295 = v12;
  if (a8)
  {
    int v17 = *(_DWORD *)(v12 + 2168);
    int v18 = v16[2];
    BOOL v19 = v17 == 3 || v18 == 0;
    int v20 = !v19;
    int v21 = v18 - v20;
    int v22 = &byte_224B28D18[8 * a4];
    int v23 = v22[2];
    if (v21 <= v23)
    {
      int v30 = v16[3];
      BOOL v32 = v17 == 1 && v30 != 0;
      BOOL v33 = v30 - v32 <= v22[3];
      uint64_t v24 = 7;
      if (!v33) {
        uint64_t v24 = 10;
      }
    }
    else
    {
      uint64_t v24 = 10;
    }
    switch(v22[2])
    {
      case 1u:
        __int32 v36 = a2->u16[0];
        int v37 = 16448;
        goto LABEL_27;
      case 2u:
        __int32 v36 = a2->i32[0];
        int v37 = 1077952576;
LABEL_27:
        BOOL v34 = v36 == v37;
        break;
      case 3u:
        BOOL v34 = a2->i64[0] == 0x4040404040404040;
        break;
      default:
        BOOL v34 = a2->i8[0] == 64;
        break;
    }
    unsigned int v38 = !v34;
    int v39 = &byte_224B28D18[8 * a4];
    int v27 = v39[3];
    switch(v39[3])
    {
      case 1u:
        int v28 = a7;
        __int32 v41 = a3->u16[0];
        int v42 = 16448;
        goto LABEL_36;
      case 2u:
        int v28 = a7;
        __int32 v41 = a3->i32[0];
        int v42 = 1077952576;
LABEL_36:
        BOOL v40 = v41 == v42;
        break;
      case 3u:
        int v28 = a7;
        BOOL v40 = a3->i64[0] == 0x4040404040404040;
        break;
      default:
        int v28 = a7;
        BOOL v40 = a3->i8[0] == 64;
        break;
    }
    unsigned int v43 = !v40;
    uint64_t v29 = v24 + v38 + v43;
  }
  else
  {
    int v25 = v16[2];
    int v26 = &byte_224B28D18[8 * a4];
    int v23 = v26[2];
    if (v25 == v23 && (int v27 = v16[3], v27 == v26[3]))
    {
      int v28 = a7;
      uint64_t v29 = 0;
      int v23 = v25;
    }
    else
    {
      switch(v26[2])
      {
        case 1u:
          unsigned int v44 = a2->u16[0];
          goto LABEL_47;
        case 2u:
          unsigned int v45 = a2->i32[0];
          goto LABEL_46;
        case 3u:
          unsigned int v45 = a2->i32[1] | a2->i32[0];
          goto LABEL_46;
        case 4u:
          unsigned int v45 = ((unint64_t)(a2->i64[1] | a2->i64[0]) >> 32) | a2->i32[2] | a2->i32[0];
LABEL_46:
          unsigned int v44 = v45 | HIWORD(v45);
LABEL_47:
          int v35 = v44 | (v44 >> 8);
          break;
        default:
          LOBYTE(v35) = a2->i8[0];
          break;
      }
      uint64_t v46 = &byte_224B28D18[8 * a4];
      int v27 = v46[3];
      switch(v46[3])
      {
        case 1u:
          int v28 = a7;
          unsigned int v48 = a3->u16[0];
          goto LABEL_55;
        case 2u:
          int v28 = a7;
          unsigned int v49 = a3->i32[0];
          goto LABEL_54;
        case 3u:
          int v28 = a7;
          unsigned int v49 = a3->i32[1] | a3->i32[0];
          goto LABEL_54;
        case 4u:
          int v28 = a7;
          unsigned int v49 = ((unint64_t)(a3->i64[1] | a3->i64[0]) >> 32) | a3->i32[2] | a3->i32[0];
LABEL_54:
          unsigned int v48 = v49 | HIWORD(v49);
LABEL_55:
          int v47 = v48 | (v48 >> 8);
          break;
        default:
          int v28 = a7;
          LOBYTE(v47) = a3->i8[0];
          break;
      }
      if ((v35 & 0x3C) != 0) {
        uint64_t v50 = 4;
      }
      else {
        uint64_t v50 = v35 & 0x3F;
      }
      if ((v47 & 0x3C) != 0) {
        unsigned int v51 = 4;
      }
      else {
        unsigned int v51 = v47 & 0x3F;
      }
      uint64_t v29 = byte_224B1950F[4 * v50 + v50 + v51];
    }
  }
  uint64_t v52 = v13 + 13824;
  uint64_t v53 = *(void *)(a1 + 16);
  uint64_t v54 = v13 + 7040;
  uint64_t v55 = byte_224B28D18[8 * a4 + 7];
  sub_224AADEFC(v13 + 13824, (unsigned int *)(v13 + 7040 + 52 * v55 + 4 * v29 + 5896));
  if (v61)
  {
    *a11 = 64;
    *a10 = 16 * v14;
    return 0xFFFFFFFFLL;
  }
  uint64_t v287 = v55;
  uint64_t v299 = v15;
  uint64_t v284 = a3;
  uint64_t v297 = v53;
  __int16 v63 = a9;
  if (v14)
  {
    unsigned int v64 = 0x10u;
    unsigned int v65 = a8;
    uint64_t v66 = v55;
    goto LABEL_97;
  }
  unsigned int v65 = a8;
  uint64_t v66 = v55;
  if (byte_224B28D18[8 * v15 + 5] + v28 > 3)
  {
LABEL_68:
    unsigned int v64 = 0;
    goto LABEL_97;
  }
  if (!a8)
  {
    uint64_t v67 = *(void *)(v295 + 24);
    unsigned int v64 = *(unsigned __int8 *)(v67 + *(unsigned __int8 *)(a6 + 4) + 816);
    if (!*(unsigned char *)(v67 + *(unsigned __int8 *)(a6 + 4) + 816)) {
      goto LABEL_97;
    }
    if (!v28)
    {
      uint64_t v73 = byte_224B28D18[8 * v15 + 4];
      if (((0x18608uLL >> v15) & 1) != 0 || *(unsigned char *)(v67 + 894))
      {
        sub_224AADEFC(v52, (unsigned int *)(v297 + 4 * v73 + 5448));
        unsigned int v65 = a8;
        unsigned int v64 = (v76 - 1) & 9;
        goto LABEL_97;
      }
      if ((0x60604uLL >> v15))
      {
        sub_224AADBF0(v52, v297 + 2144, 11);
        unsigned int v75 = v77 + 12;
      }
      else
      {
        sub_224AADBF0(v52, v297 + 32 * v73 + 2080, 15);
        unsigned int v75 = v74 + 24;
      }
      unsigned int v64 = byte_224B1948B[v75];
LABEL_96:
      unsigned int v65 = a8;
      goto LABEL_97;
    }
    unsigned int v68 = *(unsigned __int8 *)(a6 + 8);
    if (v68 == 13) {
      unsigned int v68 = byte_224B19486[*(char *)(a6 + 13)];
    }
    int v69 = *(unsigned __int8 *)(v67 + 894);
    unsigned int v70 = byte_224B28D18[8 * v15 + 4];
    if (!v69)
    {
      if (((0x60604uLL >> v15) & 1) == 0)
      {
        sub_224AADB30(v52, (int8x16_t *)(v297 + 208 * byte_224B28D18[8 * v15 + 4] + 16 * v68 + 2176), 6);
        unsigned int v72 = v71 + 5;
LABEL_93:
        unsigned int v64 = byte_224B1948B[v72];
        goto LABEL_96;
      }
      unsigned int v70 = 2;
    }
    unsigned int v72 = sub_224AAD9A0(v52, (int16x4_t *)(v297 + 208 * v70 + 16 * v68 + 2592), 4, v56, v57, v58, v59, v60);
    goto LABEL_93;
  }
  if (v28)
  {
    unsigned int v64 = byte_224B19478[*(unsigned __int8 *)(a6 + 9)];
    goto LABEL_97;
  }
  unsigned int v64 = *a10;
  if ((0x18608uLL >> v15))
  {
    if (v64 == 9) {
      unsigned int v64 = 9;
    }
    else {
      unsigned int v64 = 0;
    }
  }
  else if (((0x60604uLL >> v15) & 1) != 0 && ((1 << v64) & 0xF000) != 0)
  {
    goto LABEL_68;
  }
LABEL_97:
  *a10 = v64;
  if (v23 >= 3) {
    int v78 = 3;
  }
  else {
    int v78 = v23;
  }
  if (v27 >= 3) {
    int v79 = 3;
  }
  else {
    int v79 = v27;
  }
  int v80 = v79 + v78;
  unsigned int v81 = v64;
  int v82 = byte_224B194B3[v64];
  unint64_t v83 = v64 - 10;
  int v291 = v82;
  switch(v80)
  {
    case 0:
      uint64_t v84 = v65 != 0;
      unsigned int v85 = sub_224AAD9A0(v52, (int16x4_t *)(v54 + 32 * v84 + 16 * (v83 < 6)), 4, v56, v57, v58, v59, v60);
      uint64_t v86 = v299;
      unsigned int v87 = v85;
      uint64_t v88 = v297;
      goto LABEL_117;
    case 1:
      uint64_t v84 = v65 != 0;
      uint64_t v88 = v297;
      uint64_t v91 = (int8x16_t *)(v297 + 32 * v84 + 16 * (v83 < 6) + 7104);
      uint64_t v92 = v52;
      uint64_t v93 = 5;
      goto LABEL_111;
    case 2:
      uint64_t v84 = v65 != 0;
      uint64_t v88 = v297;
      uint64_t v91 = (int8x16_t *)(v297 + 32 * v84 + 16 * (v83 < 6) + 7168);
      uint64_t v92 = v52;
      uint64_t v93 = 6;
      goto LABEL_111;
    case 3:
      uint64_t v84 = v65 != 0;
      uint64_t v88 = v297;
      uint64_t v91 = (int8x16_t *)(v297 + 32 * v84 + 16 * (v83 < 6) + 7232);
      uint64_t v92 = v52;
      uint64_t v93 = 7;
LABEL_111:
      sub_224AADB30(v92, v91, v93);
      goto LABEL_116;
    case 4:
      uint64_t v84 = v65 != 0;
      uint64_t v88 = v297;
      uint64_t v95 = v297 + (v84 << 6) + 32 * (v83 < 6) + 7296;
      uint64_t v96 = v52;
      uint64_t v97 = 8;
      goto LABEL_115;
    case 5:
      uint64_t v84 = v65 != 0;
      uint64_t v88 = v297;
      uint64_t v95 = v297 + 32 * v84 + 7424;
      uint64_t v96 = v52;
      uint64_t v97 = 9;
      goto LABEL_115;
    case 6:
      uint64_t v84 = v65 != 0;
      uint64_t v88 = v297;
      uint64_t v95 = v297 + 32 * v84 + 7488;
      uint64_t v96 = v52;
      uint64_t v97 = 10;
LABEL_115:
      sub_224AADBF0(v96, v95, v97);
LABEL_116:
      uint64_t v86 = v299;
      unsigned int v87 = v94;
LABEL_117:
      if ((int)v87 >= 2)
      {
        sub_224AADEFC(v52, (unsigned int *)(v88 + 88 * v66 + 44 * v84 + 4 * v87 + 12496));
        unsigned int v99 = v87 - 2;
        BOOL v19 = v87 == 2;
        int v100 = (v98 | 2) << (v87 - 2);
        int v101 = 0;
        if (!v19)
        {
          do
          {
            --v99;
            sub_224AADE84();
            int v101 = v102 | (2 * v101);
          }
          while (v99);
        }
        unsigned int v87 = v101 | v100;
        __int16 v63 = a9;
        uint64_t v86 = v299;
        uint64_t v66 = v287;
      }
      uint64_t v89 = (int16x4_t *)(v88 + 7040 + (v66 << 6) + 32 * v84 + 512);
      if ((int)v66 >= 3) {
        unsigned int v103 = 3;
      }
      else {
        unsigned int v103 = v66;
      }
      uint64_t v104 = v88 + 7040 + 336 * v103 + 168 * v84;
      uint64_t v90 = (int8x8_t *)(v104 + 4112);
      if (!v87) {
        goto LABEL_161;
      }
      uint64_t v301 = v104 + 4112;
      uint64_t v283 = (unsigned __int8 *)(a1 + 8257);
      unsigned int v285 = v84;
      int v305 = (int16x4_t *)(v88 + 656 * v66 + 328 * v84 + 7872);
      int v105 = (char *)(a1 + 8256);
      if (byte_224B28D18[8 * a4] >= 8u) {
        int v106 = 8;
      }
      else {
        int v106 = byte_224B28D18[8 * a4];
      }
      if (byte_224B28D18[8 * v86 + 1] >= 8u) {
        unsigned int v107 = 8;
      }
      else {
        unsigned int v107 = byte_224B28D18[8 * v86 + 1];
      }
      uint64_t v108 = 1;
      if (v87 > 2 * v107 * v106) {
        uint64_t v108 = 2;
      }
      unsigned int v286 = v87;
      if (v87 <= 4 * v107 * v106) {
        uint64_t v109 = v108;
      }
      else {
        uint64_t v109 = v108 + 1;
      }
      int v110 = sub_224AAD9A0(v52, &v89[v109], 2, v56, v57, v58, v59, v60);
      __int16 v111 = v110 + 1;
      int v304 = (char *)(a1 + 8256);
      if (v291 == 2)
      {
        char v146 = v23 + 2;
        char v147 = v27 + 2;
        int v148 = 4 * v106 - 1;
        bzero(v105, (v106 << 6) | 0x20u);
        char v149 = 65 * v111;
        BOOL v150 = v105;
        unsigned int v151 = v286 >> v146;
        unsigned int v123 = ((v148 & v286) << (v27 + 2)) | (v286 >> v146);
        if (v110 == 2)
        {
          uint64_t v152 = 112;
          if (!v151) {
            uint64_t v152 = 56;
          }
          int v153 = v150;
          __int16 v154 = sub_224AADCD8(v52, (int8x8_t *)(v301 + v152), v114, v115, v116, v117, v118);
          BOOL v150 = v153;
          __int16 v111 = v154;
          char v149 = v154 - 64;
        }
        a9[v123] = v111 << 11;
        v150[16 * (v148 & v286) + v151] = v149;
        if (v286 >= 2)
        {
          int32x4_t v155 = v150;
          unsigned int v156 = v286 + 1;
          do
          {
            unsigned int v157 = (v156 - 2) & v148;
            uint64_t v158 = (v156 - 2) >> v146;
            unsigned int v159 = (v157 << v147) | v158;
            int32x4_t v160 = &v155[16 * v157 + v158];
            int v161 = v160[16] + v160[1] + v160[2];
            unsigned int v162 = v161 + v160[3] + v160[4];
            int v163 = 5 * v158 + 26;
            if (v158 > 1) {
              int v163 = 36;
            }
            if (v162 <= 0x200) {
              unsigned int v164 = (v162 + 64) >> 7;
            }
            else {
              unsigned int v164 = 4;
            }
            int v165 = sub_224AAD9A0(v52, &v305[v164 + v163], 3, v114, v115, v116, v117, v118);
            if (v165 == 3)
            {
              unsigned int v166 = v161 & 0x3F;
              if (v158) {
                int v167 = 14;
              }
              else {
                int v167 = 7;
              }
              if (v166 <= 0xC) {
                unsigned int v168 = (v166 + 1) >> 1;
              }
              else {
                unsigned int v168 = 6;
              }
              __int16 v169 = sub_224AADCD8(v52, (int8x8_t *)(v301 + 8 * (v168 + v167)), v114, v115, v116, v117, v118);
              char v170 = v169 - 64;
              LOWORD(v171) = v123 | (v169 << 11);
              unsigned int v123 = v159;
            }
            else
            {
              char v170 = 65 * v165;
              int v171 = (v123 - 2048) & ((1572673 * v165) >> 9);
              if (v171) {
                unsigned int v123 = v159;
              }
            }
            *int32x4_t v160 = v170;
            a9[v159] = v171;
            --v156;
            int32x4_t v155 = v304;
          }
          while (v156 > 2);
        }
      }
      else
      {
        if (v291 != 1)
        {
          int v172 = (a4 > 4) & a4;
          if (a4 > 4) {
            ++v172;
          }
          int v290 = v172;
          uint64_t v173 = (uint64_t)*(&off_2646ED668 + v299);
          uint64_t v174 = 4 * v107;
          if (v27 >= 4) {
            char v175 = 5;
          }
          else {
            char v175 = v27 + 2;
          }
          bzero(v304, 4 * v107 * ((4 * v106) | 2));
          uint64_t v288 = v173;
          unsigned int v123 = *(unsigned __int16 *)(v173 + 2 * v87);
          char v294 = v175;
          unsigned int v181 = v123 >> v175;
          uint64_t v292 = 4 * v107 - 1;
          unsigned int v182 = (4 * v107 - 1) & v123;
          char v183 = 65 * (v110 + 1);
          if (v110 == 2)
          {
            uint64_t v184 = 56;
            if ((v181 | v182) > 1) {
              uint64_t v184 = 112;
            }
            __int16 v111 = sub_224AADCD8(v52, (int8x8_t *)(v301 + v184), v176, v177, v178, v179, v180);
            char v183 = v111 - 64;
          }
          a9[v123] = v111 << 11;
          v304[v181 * 4 * v107 + (unint64_t)v182] = v183;
          if (v87 < 2)
          {
            __int16 v63 = a9;
          }
          else
          {
            uint64_t v289 = v288 - 2;
            uint64_t v185 = v87;
            do
            {
              uint64_t v186 = *(unsigned __int16 *)(v289 + 2 * v185);
              unsigned int v187 = v186 >> v294;
              unsigned int v188 = v292 & v186;
              int v189 = &v304[(v186 >> v294) * (unint64_t)v174 + (v292 & v186)];
              int v190 = v189[v174] + v189[1] + v189[v174 | 1];
              unsigned int v191 = v190 + v189[2] + v189[2 * v174];
              if ((v292 & v186) >= 4) {
                uint64_t v192 = 4;
              }
              else {
                uint64_t v192 = v188;
              }
              if (v187 >= 4) {
                unsigned int v193 = 4;
              }
              else {
                unsigned int v193 = v186 >> v294;
              }
              int v194 = byte_224B194C4[25 * v290 + 4 * v192 + v192 + v193];
              if (v191 <= 0x200) {
                unsigned int v195 = (v191 + 64) >> 7;
              }
              else {
                unsigned int v195 = 4;
              }
              int v196 = sub_224AAD9A0(v52, &v305[v195 + v194], 3, v176, v177, v178, v179, v180);
              if (v196 == 3)
              {
                unsigned int v197 = v190 & 0x3F;
                if ((v187 | v188) <= 1) {
                  int v198 = 7;
                }
                else {
                  int v198 = 14;
                }
                if (v197 <= 0xC) {
                  unsigned int v199 = (v197 + 1) >> 1;
                }
                else {
                  unsigned int v199 = 6;
                }
                __int16 v200 = sub_224AADCD8(v52, (int8x8_t *)(v301 + 8 * (v199 + v198)), v176, v177, v178, v179, v180);
                char v201 = v200 - 64;
                LOWORD(v202) = v123 | (v200 << 11);
                unsigned int v123 = v186;
              }
              else
              {
                char v201 = 65 * v196;
                int v202 = (v123 - 2048) & ((1572673 * v196) >> 9);
                if (v202) {
                  unsigned int v123 = v186;
                }
              }
              __int16 v63 = a9;
              --v185;
              *int v189 = v201;
              a9[v186] = v202;
            }
            while ((unint64_t)(v185 + 1) > 2);
          }
          unsigned int v208 = sub_224AAD9A0(v52, v305, 3, v176, v177, v178, v179, v180);
          if (v208 == 3)
          {
            unsigned int v209 = (v304[v174] + *v283 + v304[v174 | 1]) & 0x3F;
            if (v209 <= 0xC) {
              unsigned int v210 = (v209 + 1) >> 1;
            }
            else {
              unsigned int v210 = 6;
            }
            uint64_t v90 = (int8x8_t *)(v301 + 8 * v210);
            goto LABEL_234;
          }
          unsigned int v145 = v208;
LABEL_238:
          uint64_t v211 = v299;
          unsigned int v212 = a8;
          LODWORD(v66) = v287;
          goto LABEL_239;
        }
        char v112 = v27 + 2;
        int v113 = 4 * v107 - 1;
        bzero(v105, (v107 << 6) | 0x20);
        char v119 = 65 * v111;
        unsigned int v120 = v286 >> (v27 + 2);
        if (v110 == 2)
        {
          uint64_t v121 = 112;
          if (!v120) {
            uint64_t v121 = 56;
          }
          __int16 v111 = sub_224AADCD8(v52, (int8x8_t *)(v301 + v121), v114, v115, v116, v117, v118);
          char v119 = v111 - 64;
        }
        a9[v286] = v111 << 11;
        v105[16 * (v113 & v286) + v120] = v119;
        if (v286 < 2)
        {
          unsigned int v123 = 1;
        }
        else
        {
          uint64_t v122 = v105;
          unsigned int v123 = v286;
          uint64_t v124 = v286 - 1;
          do
          {
            uint64_t v125 = v124 >> v112;
            uint64_t v126 = &v122[16 * (v113 & v124) + v125];
            int v127 = v126[16] + v126[1] + v126[2];
            unsigned int v128 = v127 + v126[3] + v126[4];
            int v129 = 5 * v125 + 26;
            if (v125 > 1) {
              int v129 = 36;
            }
            if (v128 <= 0x200) {
              unsigned int v130 = (v128 + 64) >> 7;
            }
            else {
              unsigned int v130 = 4;
            }
            int v131 = sub_224AAD9A0(v52, &v305[v130 + v129], 3, v114, v115, v116, v117, v118);
            if (v131 == 3)
            {
              unsigned int v132 = v127 & 0x3F;
              if (v125) {
                int v133 = 14;
              }
              else {
                int v133 = 7;
              }
              if (v132 <= 0xC) {
                unsigned int v134 = (v132 + 1) >> 1;
              }
              else {
                unsigned int v134 = 6;
              }
              __int16 v135 = sub_224AADCD8(v52, (int8x8_t *)(v301 + 8 * (v134 + v133)), v114, v115, v116, v117, v118);
              char v136 = v135 - 64;
              LOWORD(v137) = v123 | (v135 << 11);
              unsigned int v123 = v124;
            }
            else
            {
              char v136 = 65 * v131;
              int v137 = (v123 - 2048) & ((1572673 * v131) >> 9);
              if (v137) {
                unsigned int v123 = v124;
              }
            }
            *uint64_t v126 = v136;
            a9[v124] = v137;
            unint64_t v138 = v124-- + 1;
            uint64_t v122 = v304;
          }
          while (v138 > 2);
        }
      }
      int v203 = v283[15] + *v283 + v283[1];
      unsigned int v204 = v203 + v283[2] + v283[3];
      if (v204 <= 0x200) {
        unsigned int v205 = ((v204 + 64) >> 7) + 26;
      }
      else {
        unsigned int v205 = 30;
      }
      unsigned int v206 = sub_224AAD9A0(v52, &v305[v205], 3, v114, v115, v116, v117, v118);
      if (v206 != 3)
      {
        unsigned int v145 = v206;
        __int16 v63 = a9;
        goto LABEL_238;
      }
      if ((v203 & 0x3Fu) <= 0xC) {
        unsigned int v207 = ((v203 & 0x3Fu) + 1) >> 1;
      }
      else {
        unsigned int v207 = 6;
      }
      uint64_t v90 = (int8x8_t *)(v301 + 8 * v207);
      __int16 v63 = a9;
LABEL_234:
      LODWORD(v66) = v287;
LABEL_235:
      unsigned int v145 = sub_224AADCD8(v52, v90, v140, v141, v142, v143, v144);
LABEL_236:
      uint64_t v211 = v299;
      unsigned int v212 = a8;
LABEL_239:
      int v213 = (unsigned __int16 *)(*(void *)(v297 + 14048) + 12 * *(unsigned __int8 *)(a6 + 4) + 4 * v212);
      if (*a10 > 8)
      {
        if ((int)v66 <= 2) {
          char v217 = 2;
        }
        else {
          char v217 = v66;
        }
        char v216 = v217 - 2;
        if (!v145)
        {
          char v302 = 64;
          goto LABEL_334;
        }
        int v214 = 0;
        goto LABEL_251;
      }
      int v214 = *(unsigned __int8 **)(v295 + 24 * v211 + 8 * v212 + 3576);
      if ((int)v66 <= 2) {
        char v215 = 2;
      }
      else {
        char v215 = v66;
      }
      char v216 = v215 - 2;
      if (v145)
      {
LABEL_251:
        switch(v211)
        {
          case 1:
            int v218 = ((67372036 * ((v284->i16[0] & 0xC0C0) + (a2->i16[0] & 0xC0C0u))) >> 24) - 4;
            break;
          case 2:
            int v218 = ((16843009
                   * ((((unsigned __int32)v284->i32[0] >> 6) & 0x3030303)
                    + (((unsigned __int32)a2->i32[0] >> 6) & 0x3030303))) >> 24)
                 - 8;
            break;
          case 3:
            int v218 = (((0x101010101010101
                                  * ((((unint64_t)v284->i64[0] >> 6) & 0x303030303030303)
                                   + (((unint64_t)a2->i64[0] >> 6) & 0x303030303030303))) >> 32) >> 24)
                 - 16;
            break;
          case 4:
            v219.i64[0] = 0x303030303030303;
            v219.i64[1] = 0x303030303030303;
            int v218 = (((unint64_t)(0x101010101010101
                                                    * vaddvq_s64(vaddq_s64((int64x2_t)vandq_s8((int8x16_t)vshrq_n_u64(*a2, 6uLL), v219), (int64x2_t)vandq_s8((int8x16_t)vshrq_n_u64(*v284, 6uLL), v219)))) >> 32) >> 24)- 32;
            break;
          case 5:
            int v220 = a2->i8[0] & 0xC0;
            int v221 = v284->i16[0] & 0xC0C0;
            goto LABEL_260;
          case 6:
            int v220 = a2->i16[0] & 0xC0C0;
            int v221 = v284->i8[0] & 0xC0;
LABEL_260:
            int v218 = ((67372036 * (v221 + v220)) >> 24) - 3;
            break;
          case 7:
            unsigned int v222 = (v284->i32[0] & 0xC0C0C0C0) + (a2->i16[0] & 0xC0C0);
            goto LABEL_263;
          case 8:
            unsigned int v222 = (a2->i32[0] & 0xC0C0C0C0) + (v284->i16[0] & 0xC0C0);
LABEL_263:
            int v218 = ((16843009 * (v222 >> 6)) >> 24) - 6;
            break;
          case 9:
            unint64_t v223 = (v284->i64[0] & 0xC0C0C0C0C0C0C0C0) + (a2->i32[0] & 0xC0C0C0C0);
            goto LABEL_266;
          case 10:
            unint64_t v223 = (a2->i64[0] & 0xC0C0C0C0C0C0C0C0) + (v284->i32[0] & 0xC0C0C0C0);
LABEL_266:
            int v218 = (((0x101010101010101 * (v223 >> 6)) >> 32) >> 24) - 12;
            break;
          case 11:
            uint64_t v224 = (((unint64_t)v284->i64[0] >> 6) & 0x303030303030303)
                 + (((unint64_t)a2->i64[0] >> 6) & 0x303030303030303);
            unint64_t v225 = (unint64_t)v284->i64[1] >> 6;
            goto LABEL_269;
          case 12:
            uint64_t v224 = (((unint64_t)a2->i64[1] >> 6) & 0x303030303030303)
                 + (((unint64_t)a2->i64[0] >> 6) & 0x303030303030303);
            unint64_t v225 = (unint64_t)v284->i64[0] >> 6;
LABEL_269:
            int v218 = (((0x101010101010101 * (v224 + (v225 & 0x303030303030303))) >> 32) >> 24) - 24;
            break;
          case 13:
            unsigned int v226 = (v284->i32[0] & 0xC0C0C0C0) + (a2->i8[0] & 0xC0);
            goto LABEL_272;
          case 14:
            unsigned int v226 = (a2->i32[0] & 0xC0C0C0C0) + (v284->i8[0] & 0xC0);
LABEL_272:
            int v218 = ((16843009 * (v226 >> 6)) >> 24) - 5;
            break;
          case 15:
            unint64_t v227 = (v284->i64[0] & 0xC0C0C0C0C0C0C0C0) + (a2->i16[0] & 0xC0C0);
            goto LABEL_275;
          case 16:
            unint64_t v227 = (a2->i64[0] & 0xC0C0C0C0C0C0C0C0) + (v284->i16[0] & 0xC0C0);
LABEL_275:
            int v218 = (((0x101010101010101 * (v227 >> 6)) >> 32) >> 24) - 10;
            break;
          case 17:
            unint64_t v228 = (v284->i64[0] & 0xC0C0C0C0C0C0C0C0) + (a2->i32[0] & 0xC0C0C0C0);
            unint64_t v229 = (unint64_t)v284->i64[1] >> 6;
            goto LABEL_278;
          case 18:
            unint64_t v228 = (a2->i64[0] & 0xC0C0C0C0C0C0C0C0) + (v284->i32[0] & 0xC0C0C0C0);
            unint64_t v229 = (unint64_t)a2->i64[1] >> 6;
LABEL_278:
            int v218 = (((0x101010101010101 * ((v229 & 0x303030303030303) + (v228 >> 6))) >> 32) >> 24)
                 - 20;
            break;
          default:
            int v218 = (v284->u8[0] >> 6) + (a2->u8[0] >> 6) - 2;
            break;
        }
        BOOL v33 = v218 <= 0;
        uint64_t v230 = v218 != 0;
        if (!v33) {
          ++v230;
        }
        sub_224AADEFC(v52, (unsigned int *)(v297 + 12 * v285 + 4 * v230 + 13196));
        int v232 = v231;
        int v233 = *v213;
        char v302 = (v231 - 1) & 0x80;
        if (!v214)
        {
          if (v145 == 15)
          {
            unsigned int v241 = -1;
            do
            {
              ++v241;
              sub_224AADE84();
            }
            while (!v242 && v241 < 0x20);
            if (v241)
            {
              int v243 = -v241;
              int v244 = 1;
              do
              {
                sub_224AADE84();
                int v244 = v245 + 2 * v244;
                BOOL v240 = __CFADD__(v243++, 1);
              }
              while (!v240);
              unsigned int v145 = (v244 + 14) & 0xFFFFF;
              __int16 v63 = a9;
            }
            else
            {
              unsigned int v145 = 15;
            }
            unsigned int v247 = ((v145 * v233) & 0xFFFFFF) >> v216;
            if (v247 >= v232 + 0x7FFF) {
              unsigned int v247 = v232 + 0x7FFF;
            }
          }
          else
          {
            unsigned int v247 = (v145 * v233) >> v216;
          }
          if (v232) {
            unsigned int v247 = -v247;
          }
          *__int16 v63 = v247;
          if (!v123) {
            goto LABEL_352;
          }
          goto LABEL_334;
        }
        unsigned int v234 = (*v214 * v233 + 16) >> 5;
        if (v145 == 15)
        {
          unsigned int v235 = -1;
          do
          {
            ++v235;
            sub_224AADE84();
          }
          while (!v236 && v235 < 0x20);
          if (v235)
          {
            int v237 = -v235;
            int v238 = 1;
            do
            {
              sub_224AADE84();
              int v238 = v239 + 2 * v238;
              BOOL v240 = __CFADD__(v237++, 1);
            }
            while (!v240);
            unsigned int v145 = (v238 + 14) & 0xFFFFF;
          }
          else
          {
            unsigned int v145 = 15;
          }
          int v246 = (v145 * v234) & 0xFFFFFF;
          __int16 v63 = a9;
        }
        else
        {
          int v246 = v234 * v145;
        }
        unsigned int v248 = v246 >> v216;
        if (v248 >= v232 + 0x7FFF) {
          unsigned int v248 = v232 + 0x7FFF;
        }
        if (v232) {
          unsigned int v248 = -v248;
        }
        *__int16 v63 = v248;
        if (!v123) {
          goto LABEL_352;
        }
LABEL_309:
        char v306 = v216;
        uint64_t v249 = v213[1];
        unsigned int v250 = v123;
        do
        {
          sub_224AADE84();
          int v252 = v251;
          unsigned int v253 = (__int16)v63[v250];
          unsigned int v254 = v250;
          unsigned int v255 = (v214[v250] * v249 + 16) >> 5;
          if ((unsigned __int16)((unsigned __int16)v253 >> 11) < 0xFu)
          {
            unsigned int v265 = v253 >> 11;
            unsigned int v266 = v255 * (v253 >> 11);
          }
          else
          {
            uint64_t v256 = v249;
            int v257 = v214;
            int v258 = 0;
            unsigned int v259 = -1;
            do
            {
              int v260 = v258;
              ++v259;
              sub_224AADE84();
              if (v261) {
                break;
              }
              int v258 = v260 - 1;
            }
            while (v259 < 0x20);
            if (v259)
            {
              int v262 = 1;
              do
              {
                sub_224AADE84();
                int v262 = v263 + 2 * v262;
                BOOL v240 = __CFADD__(v260++, 1);
              }
              while (!v240);
              int v264 = v262 - 1;
            }
            else
            {
              int v264 = 0;
            }
            __int16 v63 = a9;
            int v214 = v257;
            uint64_t v249 = v256;
            unsigned int v265 = (v264 + 15) & 0xFFFFF;
            unsigned int v266 = (v265 * v255) & 0xFFFFFF;
          }
          v145 += v265;
          int v267 = v266 >> v306;
          if (v266 >> v306 >= v252 + 0x7FFF) {
            int v267 = v252 + 0x7FFF;
          }
          if (v252) {
            int v267 = -v267;
          }
          v63[v254] = v267;
          unsigned int v250 = v253 & 0x3FF;
        }
        while ((v253 & 0x3FF) != 0);
        goto LABEL_352;
      }
      char v302 = 64;
      if (v214) {
        goto LABEL_309;
      }
LABEL_334:
      int v268 = v213[1];
      do
      {
        sub_224AADE84();
        int v270 = v269;
        unsigned int v271 = (__int16)v63[v123];
        if ((unsigned __int16)(v63[v123] >> 11) < 0xFu)
        {
          unsigned int v279 = v271 >> 11;
          unsigned int v280 = ((v271 >> 11) * v268) >> v216;
        }
        else
        {
          int v272 = 0;
          unsigned int v273 = -1;
          do
          {
            int v274 = v272;
            ++v273;
            sub_224AADE84();
            if (v275) {
              break;
            }
            int v272 = v274 - 1;
          }
          while (v273 < 0x20);
          if (v273)
          {
            int v276 = 1;
            do
            {
              sub_224AADE84();
              int v276 = v277 + 2 * v276;
              BOOL v240 = __CFADD__(v274++, 1);
            }
            while (!v240);
            int v278 = v276 - 1;
          }
          else
          {
            int v278 = 0;
          }
          __int16 v63 = a9;
          unsigned int v279 = (v278 + 15) & 0xFFFFF;
          unsigned int v280 = ((v279 * v268) & 0xFFFFFF) >> v216;
          if (v280 >= v270 + 0x7FFF) {
            unsigned int v280 = v270 + 0x7FFF;
          }
        }
        v145 += v279;
        if (v270) {
          int v281 = -v280;
        }
        else {
          LOWORD(v281) = v280;
        }
        v63[v123] = v281;
        unsigned int v123 = v271 & 0x3FF;
      }
      while ((v271 & 0x3FF) != 0);
LABEL_352:
      if (v145 >= 0x3F) {
        char v282 = 63;
      }
      else {
        char v282 = v145;
      }
      *a11 = v282 | v302;
      return v286;
    default:
      uint64_t v84 = v65 != 0;
      uint64_t v89 = (int16x4_t *)(v297 + 7040 + (v66 << 6) + 32 * v84 + 512);
      if ((int)v66 < 3) {
        unsigned int v81 = v66;
      }
      uint64_t v90 = (int8x8_t *)(v297 + 7040 + 336 * v81 + 168 * (v65 != 0) + 4112);
LABEL_161:
      int v139 = sub_224AAD9A0(v52, v89, 2, v56, v57, v58, v59, v60);
      unsigned int v123 = 0;
      unsigned int v286 = 0;
      unsigned int v285 = v84;
      if (v139 == 2) {
        goto LABEL_235;
      }
      unsigned int v145 = v139 + 1;
      goto LABEL_236;
  }
}

uint64_t sub_224AC0F0C(uint64_t result, int a2, int a3, unsigned char *a4)
{
  unsigned int v4 = a4;
  uint64_t v5 = result;
  v222[2] = *MEMORY[0x263EF8340];
  uint64_t v6 = *(void *)(result + 8);
  uint64_t v213 = v6;
  int v8 = *(_DWORD *)(result + 24);
  int v7 = *(_DWORD *)(result + 28);
  int v9 = *(_DWORD *)(v6 + 2168);
  int v10 = &byte_224B28CC0[4 * a2];
  int v11 = *v10;
  int v12 = v10[1];
  if (v11 >= *(_DWORD *)(v6 + 3448) - v8) {
    int v13 = *(_DWORD *)(v6 + 3448) - v8;
  }
  else {
    int v13 = v11;
  }
  if (v12 >= *(_DWORD *)(v6 + 3452) - v7) {
    int v14 = *(_DWORD *)(v6 + 3452) - v7;
  }
  else {
    int v14 = v12;
  }
  unsigned int v15 = v9 != 3;
  int v164 = v13;
  if (v9 == 3) {
    int v16 = v13;
  }
  else {
    int v16 = v13 + 1;
  }
  unsigned int v17 = v9 == 1;
  if (v9 == 1) {
    int v18 = v14 + 1;
  }
  else {
    int v18 = v14;
  }
  if (!v9 || (v11 <= v15 ? (BOOL v19 = (*(_DWORD *)(result + 24) & 1) == 0) : (BOOL v19 = 0), v19))
  {
    int v163 = 0;
  }
  else
  {
    if (v12 <= v17) {
      int v20 = *(_DWORD *)(result + 28) & 1;
    }
    else {
      int v20 = 1;
    }
    int v163 = v20;
  }
  if (v14 >= 1)
  {
    unsigned int v21 = 0;
    uint64_t v22 = v8 & 0x1F;
    uint64_t v204 = (*(_DWORD *)(result + 24) & 0x1Fu) >> v15;
    int v23 = &byte_224B28D18[8 * a4[10]];
    uint64_t v24 = &byte_224B28D18[8 * a4[7]];
    uint64_t result = (v16 >> v15);
    int v196 = (unsigned char *)(v5 + 21760);
    unsigned int v25 = (v11 + v15) >> v15;
    unsigned int v26 = (v12 + v17) >> v17;
    int v195 = *(unsigned __int8 *)(*(void *)(v6 + 8) + 394) << 10;
    unsigned int v212 = *(_DWORD **)(v5 + 16);
    uint64_t v27 = *(void *)(v6 + 3280);
    int v28 = (_DWORD *)(v5 + 258564);
    uint64_t v153 = (8 * v11 * v12);
    uint64_t v169 = v7 & 0x1F;
    uint64_t v148 = 8 * v25 * v26;
    uint64_t v167 = v5 + 9344;
    int v161 = result;
    int v157 = v18 >> v17;
    int v149 = (v18 >> v17 << v17) - 1;
    int v150 = (result << v15) - 1;
    unsigned int v173 = (v7 & 0x1F) >> v17;
    uint16x8_t v180 = v23;
    double v177 = v23 + 1;
    uint64_t v194 = v27 + 64;
    __int16 v200 = (_WORD *)(v5 + 1024);
    uint64_t v168 = v27;
    uint64_t v187 = v27 + 680;
    unsigned int v151 = v26;
    unsigned int v152 = v25;
    unsigned int v154 = 4 * v26;
    unsigned int v155 = 4 * v25;
    int v189 = ~v15;
    int v211 = ~v17;
    unsigned int v210 = v4 + 15;
    int v218 = v24;
    int v214 = v24 + 1;
    unsigned int v199 = v15;
    unsigned int v207 = v17;
    int v203 = (_DWORD *)(v5 + 258564);
    unsigned int v188 = v4;
    int v162 = v14;
    uint64_t v172 = v22;
    do
    {
      unsigned int v29 = v21 + 16;
      if (v14 >= (int)(v21 + 16)) {
        int v30 = v21 + 16;
      }
      else {
        int v30 = v14;
      }
      int v171 = v30;
      int v31 = v157;
      int v156 = v29 >> v17;
      if (v157 >= (int)(v29 >> v17)) {
        int v31 = v29 >> v17;
      }
      int v182 = v31;
      if (v164 >= 1)
      {
        int64_t v32 = 0;
        unsigned int v165 = v21 + 16;
        char v159 = a3 & (v21 == 0);
        BOOL v34 = (a3 & 8) == 0 && (int)v29 >= v14;
        BOOL v158 = v34;
        unsigned int v170 = v21;
        unsigned int v175 = v21 >> v17;
        do
        {
          int64_t v179 = v32;
          if (v4[11])
          {
            uint64_t v35 = *(void *)(v213 + 2120);
            uint64_t v36 = *(void *)(v213 + 2144);
            uint64_t v37 = *(int *)(v5 + 24);
            if (*v28) {
              *(void *)&v212[6 * (*v28 & 1) + 3474] += v153;
            }
            uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v213 + 3280) + 248))(v35 + 4 * (v37 + v36 * v7));
            int64_t v32 = v179;
          }
          uint64_t v38 = *(void *)(v5 + 656);
          int v39 = *(unsigned __int8 *)(v38 + v22 + 224);
          if (*(unsigned char *)(v38 + v22 + 224))
          {
            int v40 = *(unsigned __int8 *)(v38 + v22);
            if ((v40 & 0xFFFFFFFD) == 9 || v40 == 10) {
              int v39 = 512;
            }
            else {
              int v39 = 0;
            }
          }
          if (*(unsigned char *)(v5 + 32 + v169 + 224))
          {
            int v42 = *(unsigned __int8 *)(v5 + 32 + v169);
            if ((v42 & 0xFFFFFFFD) == 9 || v42 == 10) {
              int v44 = 512;
            }
            else {
              int v44 = 0;
            }
          }
          else
          {
            int v44 = 0;
          }
          int64_t v45 = v32 + 16;
          if (v164 >= (int)v32 + 16) {
            int v46 = v32 + 16;
          }
          else {
            int v46 = v164;
          }
          unsigned int v47 = *(_DWORD *)(v5 + 28) + v170;
          *(_DWORD *)(v5 + 28) = v47;
          int64_t v48 = v32;
          int64_t v166 = v32 + 16;
          if ((int)v170 >= v171)
          {
            int v201 = v170;
          }
          else
          {
            char v49 = v159;
            if (v45 < v164) {
              char v49 = 1;
            }
            char v190 = v49;
            int64_t v50 = v46;
            int v51 = v158;
            if (v48) {
              int v51 = 1;
            }
            int v197 = v51;
            int v205 = v39 | v44;
            int v52 = *(_DWORD *)(v5 + 24);
            int v201 = v170;
            do
            {
              uint64_t v53 = *(void *)(v213 + 2120);
              uint64_t v54 = *(void *)(v213 + 2144);
              uint64_t result = (v52 + v179);
              *(_DWORD *)(v5 + 24) = result;
              if (v179 >= v50)
              {
                int v58 = v179;
              }
              else
              {
                uint64_t v55 = v53 + 4 * (v179 + v54 * (int)v47 + v52);
                char v56 = v190;
                if (v201 > v170) {
                  char v56 = 0;
                }
                char v208 = v56;
                uint64_t v57 = (v201 + v169);
                char v215 = (uint64x2_t *)(v5 + 64 + v57);
                uint64_t v192 = (uint64_t *)(v5 + 64 + (v57 + 8));
                int v58 = v179;
                unint64_t v59 = v179;
                do
                {
                  if (!v4[11])
                  {
                    unsigned int v221 = (char)v4[13];
                    BOOL v60 = (v208 & 1) == 0 && v58 + *v180 >= v46;
                    if (v59 < v58 || v197 && v201 + *v177 >= v171) {
                      char v61 = 0;
                    }
                    else {
                      char v61 = 8;
                    }
                    int v62 = *(_DWORD *)(v5 + 28);
                    if (((*(_DWORD *)(v213 + 3472) - 1) & v62) != 0) {
                      uint64_t v63 = 0;
                    }
                    else {
                      uint64_t v63 = *(void *)(v213 + 3408)
                    }
                          + ((*(int *)(v213 + 3456) * ((v62 >> *(_DWORD *)(v213 + 3468)) - 1)) << 7);
                    int v64 = *v180;
                    int v65 = *v177;
                    unsigned int v66 = sub_224AB26C0(result, (int)result > v212[3466], v62, v62 > v212[3468], v212[3467], v212[3469], v61 | !v60, v55, *(void *)(v213 + 2144), v63, v4[8], (int *)&v221, v64, v65, *(unsigned __int8 *)(*(void *)(v213 + 8) + 394), v196);
                    (*(void (**)(uint64_t, void, unsigned char *, void, void, void, void, void))(v194 + 8 * v66))(v55, *(void *)(v213 + 2144), v196, (4 * v64), (4 * v65), v205 | v195 | v221, (4 * (*(_DWORD *)(v213 + 3448) - *(_DWORD *)(v5 + 24))), (4 * (*(_DWORD *)(v213 + 3452) - *(_DWORD *)(v5 + 28))));
                    unint64_t v59 = v179;
                  }
                  if (v4[6])
                  {
                    if (*v203)
                    {
                      unsigned int v67 = *v180;
                    }
                    else
                    {
                      switch(*v177)
                      {
                        case 1:
                          v215->i8[0] = 64;
                          break;
                        case 2:
                          v215->i16[0] = 16448;
                          break;
                        case 3:
                        case 5:
                        case 6:
                        case 7:
                          break;
                        case 4:
                          v215->i32[0] = 1077952576;
                          break;
                        case 8:
                          int v77 = (uint64_t *)v215;
                          goto LABEL_107;
                        default:
                          if (*v177 == 16)
                          {
                            v215->i64[0] = 0x4040404040404040;
                            int v77 = v192;
LABEL_107:
                            *int v77 = 0x4040404040404040;
                          }
                          break;
                      }
                      unsigned int v67 = *v180;
                      switch(*v180)
                      {
                        case 1u:
                          *(unsigned char *)(*(void *)(v5 + 656) + (v58 + v172) + 32) = 64;
                          unsigned int v67 = 1;
                          break;
                        case 2u:
                          *(_WORD *)(*(void *)(v5 + 656) + (v58 + v172) + 32) = 16448;
                          unsigned int v67 = 2;
                          break;
                        case 3u:
                        case 5u:
                        case 6u:
                        case 7u:
                          break;
                        case 4u:
                          *(_DWORD *)(*(void *)(v5 + 656) + (v58 + v172) + 32) = 1077952576;
                          unsigned int v67 = 4;
                          break;
                        case 8u:
                          *(void *)(*(void *)(v5 + 656) + (v58 + v172) + 32) = 0x4040404040404040;
                          unsigned int v67 = 8;
                          break;
                        default:
                          if (v67 == 16)
                          {
                            uint64_t v78 = (v58 + v172);
                            *(void *)(*(void *)(v5 + 656) + v78 + 32) = 0x4040404040404040;
                            *(void *)(*(void *)(v5 + 656) + (v78 + 8) + 32) = 0x4040404040404040;
                          }
                          break;
                      }
                    }
                  }
                  else
                  {
                    LODWORD(v222[0]) = 0;
                    if (!*v203)
                    {
                      LOBYTE(v220) = 0;
                      uint64_t v73 = (v58 + v172);
                      int v74 = sub_224ABF768(v5, (uint64x2_t *)(*(void *)(v5 + 656) + v73 + 32), v215, v4[10], a2, (uint64_t)v4, 1, 0, v200, (unsigned int *)v222, &v220);
                      int v75 = *v177;
                      if (v75 >= *(_DWORD *)(v213 + 3452) - *(_DWORD *)(v5 + 28)) {
                        int v75 = *(_DWORD *)(v213 + 3452) - *(_DWORD *)(v5 + 28);
                      }
                      switch(v75)
                      {
                        case 1:
                          LODWORD(v76) = v220;
                          v215->i8[0] = v220;
                          goto LABEL_122;
                        case 2:
                          LODWORD(v76) = v220;
                          v215->i16[0] = v220 | (v220 << 8);
                          goto LABEL_122;
                        case 3:
                        case 5:
                        case 6:
                        case 7:
                          goto LABEL_118;
                        case 4:
                          LODWORD(v76) = v220;
                          v215->i32[0] = 16843009 * v220;
                          goto LABEL_122;
                        case 8:
                          LODWORD(v76) = v220;
                          v215->i64[0] = 0x101010101010101 * v220;
                          goto LABEL_122;
                        default:
                          if (v75 == 16)
                          {
                            uint64_t v76 = v220;
                            v215->i64[0] = 0x101010101010101 * v220;
                            *uint64_t v192 = 0x101010101010101 * v76;
                          }
                          else
                          {
LABEL_118:
                            LODWORD(v76) = v220;
                            memset(v215, v220, v75);
                          }
LABEL_122:
                          unsigned int v67 = *v180;
                          int v79 = *(_DWORD *)(v213 + 3448) - *(_DWORD *)(v5 + 24);
                          if ((int)v67 < v79) {
                            int v79 = *v180;
                          }
                          switch(v79)
                          {
                            case 1:
                              *(unsigned char *)(*(void *)(v5 + 656) + v73 + 32) = v76;
                              goto LABEL_133;
                            case 2:
                              *(_WORD *)(*(void *)(v5 + 656) + v73 + 32) = v76 | ((_WORD)v76 << 8);
                              goto LABEL_133;
                            case 3:
                            case 5:
                            case 6:
                            case 7:
                              goto LABEL_128;
                            case 4:
                              *(_DWORD *)(*(void *)(v5 + 656) + v73 + 32) = 16843009 * v76;
                              goto LABEL_133;
                            case 8:
                              uint64_t v80 = 0x101010101010101 * v76;
                              uint64_t v81 = *(void *)(v5 + 656) + v73;
                              goto LABEL_131;
                            default:
                              if (v79 == 16)
                              {
                                uint64_t v80 = 0x101010101010101 * v76;
                                *(void *)(*(void *)(v5 + 656) + v73 + 32) = v80;
                                uint64_t v81 = *(void *)(v5 + 656) + (v73 + 8);
LABEL_131:
                                *(void *)(v81 + 32) = v80;
                              }
                              else
                              {
LABEL_128:
                                memset((void *)(*(void *)(v5 + 656) + v73 + 32), v76, v79);
                              }
LABEL_133:
                              unsigned int v15 = v199;
                              if (v74 < 0) {
                                goto LABEL_94;
                              }
                              goto LABEL_93;
                          }
                      }
                    }
                    unsigned int v68 = &v212[6 * (*v203 & 1)];
                    int v69 = (__int16 *)*((void *)v68 + 1738);
                    int v70 = *v69;
                    *((void *)v68 + 1738) = v69 + 1;
                    unsigned int v67 = *v180;
                    if (v67 >= 8) {
                      int v71 = 8;
                    }
                    else {
                      int v71 = *v180;
                    }
                    unsigned int v72 = *v177;
                    if (v72 >= 8) {
                      unsigned int v72 = 8;
                    }
                    *((void *)v68 + 1739) += 32 * v71 * v72;
                    LODWORD(v222[0]) = v70 & 0x1F;
                    if (((v70 >> 5) & 0x80000000) == 0) {
LABEL_93:
                    }
                      (*(void (**)(uint64_t, void))(v187
                                                              + 136 * v4[10]
                                                              + 8 * LODWORD(v222[0])))(v55, *(void *)(v213 + 2144));
LABEL_94:
                    unint64_t v59 = v179;
                  }
                  v55 += 4 * v67;
                  v58 += v67;
                  uint64_t result = *(_DWORD *)(v5 + 24) + v67;
                  *(_DWORD *)(v5 + 24) = result;
                }
                while (v58 < v46);
                unsigned int v47 = *(_DWORD *)(v5 + 28);
                int64_t v50 = v46;
              }
              int v52 = result - v58;
              *(_DWORD *)(v5 + 24) = result - v58;
              int v82 = *v177;
              v47 += v82;
              *(_DWORD *)(v5 + 28) = v47;
              v201 += v82;
            }
            while (v201 < v171);
          }
          int v7 = v47 - v201;
          *(_DWORD *)(v5 + 28) = v7;
          LOBYTE(v17) = v207;
          int v28 = (_DWORD *)(v5 + 258564);
          if (v163)
          {
            uint64_t v193 = *(void *)(v213 + 2152);
            if (v4[9] == 13)
            {
              int v83 = *(_DWORD *)(v5 + 24);
              uint64_t v84 = *(void *)(v213 + 2144);
              uint64_t v85 = *(void *)(v213 + 2120) + 4 * (v83 & v189) + v84 * 4 * (v7 & v211);
              uint64_t v86 = *(void *)(v213 + 2152) * (v7 >> v207) + (v83 >> v15);
              uint64_t v87 = *(void *)(v213 + 2128) + 4 * v86;
              uint64_t v88 = *(void *)(v213 + 2136) + 4 * v86;
              v222[0] = v87;
              v222[1] = v88;
              uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, void, void))(v168 + 8 * (*(_DWORD *)(v213 + 2168) - 1) + 176))(v167, v85, v84, v152 - (((v150 + *v180) & -*v180) >> v15), v151 - (((v149 + *v177) & -*v177) >> v207), v155, v154);
              uint64_t v89 = 0;
              char v90 = 1;
              do
              {
                char v91 = v90;
                if (v210[v89])
                {
                  int v220 = 0;
                  int v92 = *(_DWORD *)(v5 + 28);
                  char v216 = v90;
                  if (((*(_DWORD *)(v213 + 3472) - 1) & v211 & v92) != 0) {
                    uint64_t v93 = 0;
                  }
                  else {
                    uint64_t v93 = *(void *)(v213 + 8 * v89 + 3416)
                  }
                        + ((*(int *)(v213 + 3456) * ((v92 >> *(_DWORD *)(v213 + 3468)) - 1)) << 7);
                  uint64_t v94 = v222[v89];
                  int v95 = *v218;
                  int v96 = *v214;
                  unsigned int v97 = sub_224AB26C0(*(int *)(v5 + 24) >> v15, *(int *)(v5 + 24) >> v15 > (int)v212[3466] >> v15, v92 >> v207, v92 >> v207 > (int)v212[3468] >> v207, (int)v212[3467] >> v15, (int)v212[3469] >> v207, 0, v94, v193, v93, 0, &v220, v95, v96, 0, v196);
                  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, unsigned char *, void, void, uint64_t, void))(v168 + 8 * v97 + 200))(v94, v193, v196, (4 * v95), (4 * v96), v167, (char)v210[v89]);
                  int v28 = (_DWORD *)(v5 + 258564);
                  char v91 = v216;
                }
                char v90 = 0;
                uint64_t v89 = 1;
              }
              while ((v91 & 1) != 0);
            }
            else if (v4[12])
            {
              int v98 = *(_DWORD *)(v5 + 24);
              uint64_t v99 = v5 + 21896;
              uint64_t v100 = v5 + 13440;
              if (*v203)
              {
                int v101 = &v212[6 * (*v203 & 1)];
                uint64_t v100 = *((void *)v101 + 1737);
                uint64_t v99 = *(void *)(v213 + 4376)
                    + 24
                    * ((*(uint64_t *)(v213 + 3432) >> 1) * ((*(_DWORD *)(v5 + 24) & 1) + (v7 >> 1))
                     + (v7 & 1)
                     + (*(int *)(v5 + 24) >> 1));
                *((void *)v101 + 1737) = v100 + v148;
              }
              uint64_t v102 = 4 * (v193 * (v7 >> v207) + (v98 >> v15));
              (*(void (**)(uint64_t))(*(void *)(v213 + 3280) + 248))(*(void *)(v213 + 2128) + v102);
              uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void, void))(*(void *)(v213 + 3280) + 248))(*(void *)(v213 + 2136) + v102, *(void *)(v213 + 2152), v99 + 16, v100, v155, v154);
              int v28 = (_DWORD *)(v5 + 258564);
            }
            int v103 = *(unsigned __int8 *)(*(void *)(v5 + 656) + v204 + 560);
            int v104 = *(unsigned __int8 *)(v5 + 32 + v173 + 560);
            if ((v104 & 0xFFFFFFFD) == 9 || v104 == 10 || (v103 & 0xFFFFFFFD) == 9 || v103 == 10) {
              int v108 = 512;
            }
            else {
              int v108 = 0;
            }
            int v191 = v108;
            signed int v109 = v166 >> v15;
            unsigned int v174 = (int)(v166 >> v15) < v161;
            if (v170)
            {
              int64_t v110 = v179;
            }
            else
            {
              int64_t v110 = v179;
              if (v109 >= v161) {
                unsigned int v174 = (4u >> (*(_DWORD *)(v213 + 2168) - 1)) & a3;
              }
            }
            unsigned int v183 = v110 == 0;
            uint64_t v111 = v193;
            if (!v110 && v156 >= v157) {
              unsigned int v183 = (0x20u >> (*(_DWORD *)(v213 + 2168) - 1)) & a3;
            }
            uint64_t v112 = 0;
            if (v161 >= v109) {
              signed int v113 = v166 >> v15;
            }
            else {
              signed int v113 = v161;
            }
            signed int v114 = v110 >> v15;
            int v7 = *(_DWORD *)(v5 + 28);
            signed int v206 = v113;
            unsigned int v202 = v110 >> v15;
            do
            {
              int v115 = v7 + v170;
              *(_DWORD *)(v5 + 28) = v7 + v170;
              uint64_t v217 = v112;
              uint64_t v184 = v112 + 1;
              if ((int)v175 >= v182)
              {
                int v186 = v175;
              }
              else
              {
                uint64_t v116 = v213 + 8 * (v112 + 1);
                double v176 = (uint64_t *)(v116 + 2120);
                unsigned int v181 = (void *)(v116 + 3408);
                int v117 = *(_DWORD *)(v5 + 24);
                int v186 = v175;
                do
                {
                  uint64_t v118 = *v176;
                  int v119 = v117 + v110;
                  *(_DWORD *)(v5 + 24) = v119;
                  if (v114 < v113)
                  {
                    uint64_t v120 = v118 + 4 * (v111 * (v115 >> v17) + (v119 >> v15));
                    BOOL v122 = v186 <= v175 && v174 != 0;
                    BOOL v198 = v122;
                    uint64_t v123 = v186 + v173;
                    uint64_t v124 = v5 + 32 * v217 + 96;
                    unsigned int v209 = (uint64x2_t *)(v124 + v123);
                    double v178 = (uint64_t *)(v124 + (v123 + 8));
                    do
                    {
                      unsigned int v125 = v4[9];
                      if ((v125 != 13 || !v210[v217]) && !v4[12])
                      {
                        unsigned int v219 = (char)v4[14];
                        BOOL v126 = !v198 && v114 + *v218 >= v113;
                        if (v114 <= v202 && (v183 || v186 + *v214 < v182)) {
                          char v127 = 8;
                        }
                        else {
                          char v127 = 0;
                        }
                        int v128 = *(_DWORD *)(v5 + 28);
                        if (((*(_DWORD *)(v213 + 3472) - 1) & v211 & v128) != 0) {
                          uint64_t v129 = 0;
                        }
                        else {
                          uint64_t v129 = *v181 + ((*(int *)(v213 + 3456) * ((v128 >> *(_DWORD *)(v213 + 3468)) - 1)) << 7);
                        }
                        if (v125 == 13) {
                          unsigned int v125 = 0;
                        }
                        int v130 = *v218;
                        int v131 = *v214;
                        uint64_t v111 = v193;
                        unsigned int v132 = sub_224AB26C0(v119 >> v15, v119 >> v15 > (int)v212[3466] >> v15, v128 >> v207, v128 >> v207 > (int)v212[3468] >> v207, (int)v212[3467] >> v15, (int)v212[3469] >> v207, v127 | !v126, v120, v193, v129, v125, (int *)&v219, v130, v131, *(unsigned __int8 *)(*(void *)(v213 + 8) + 394), v196);
                        v219 |= v195;
                        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, unsigned char *, void, void, void, void, void))(v194 + 8 * v132))(v120, v193, v196, (4 * v130), (4 * v131), v219 | v191, ((int)((v15 | (4 * *(_DWORD *)(v213 + 3448)))- 4 * (*(_DWORD *)(v5 + 24) & v189)) >> v15), ((int)((v207 | (4 * *(_DWORD *)(v213 + 3452)))- 4 * (*(_DWORD *)(v5 + 28) & v211)) >> v207));
                        int v28 = (_DWORD *)(v5 + 258564);
                        unsigned int v4 = v188;
                        signed int v113 = v206;
                      }
                      if (v4[6])
                      {
                        if (*v28)
                        {
                          int v133 = *v218;
                        }
                        else
                        {
                          switch(*v214)
                          {
                            case 1:
                              v209->i8[0] = 64;
                              break;
                            case 2:
                              v209->i16[0] = 16448;
                              break;
                            case 3:
                            case 5:
                            case 6:
                            case 7:
                              break;
                            case 4:
                              v209->i32[0] = 1077952576;
                              break;
                            case 8:
                              double v142 = (uint64_t *)v209;
                              goto LABEL_219;
                            default:
                              if (*v214 == 16)
                              {
                                v209->i64[0] = 0x4040404040404040;
                                double v142 = v178;
LABEL_219:
                                *double v142 = 0x4040404040404040;
                              }
                              break;
                          }
                          int v133 = *v218;
                          switch(*v218)
                          {
                            case 1u:
                              *(unsigned char *)(*(void *)(v5 + 656) + 32 * v217 + (v114 + v204) + 64) = 64;
                              int v133 = 1;
                              break;
                            case 2u:
                              *(_WORD *)(*(void *)(v5 + 656) + 32 * v217 + (v114 + v204) + 64) = 16448;
                              int v133 = 2;
                              break;
                            case 3u:
                            case 5u:
                            case 6u:
                            case 7u:
                              break;
                            case 4u:
                              *(_DWORD *)(*(void *)(v5 + 656) + 32 * v217 + (v114 + v204) + 64) = 1077952576;
                              int v133 = 4;
                              break;
                            case 8u:
                              *(void *)(*(void *)(v5 + 656) + 32 * v217 + (v114 + v204) + 64) = 0x4040404040404040;
                              int v133 = 8;
                              break;
                            default:
                              if (v133 == 16)
                              {
                                uint64_t v143 = (v114 + v204);
                                *(void *)(*(void *)(v5 + 656) + 32 * v217 + v143 + 64) = 0x4040404040404040;
                                *(void *)(*(void *)(v5 + 656) + 32 * v217 + (v143 + 8) + 64) = 0x4040404040404040;
                              }
                              break;
                          }
                        }
                      }
                      else
                      {
                        LODWORD(v222[0]) = 0;
                        if (!*v28)
                        {
                          LOBYTE(v220) = 0;
                          uint64_t v139 = (v114 + v204);
                          uint64_t result = sub_224ABF768(v5, (uint64x2_t *)(*(void *)(v5 + 656) + 32 * v217 + v139 + 64), v209, v4[7], a2, (uint64_t)v4, 1, v184, v200, (unsigned int *)v222, &v220);
                          uint64_t v138 = result;
                          int v140 = *v214;
                          if (v140 >= (int)(*(_DWORD *)(v213 + 3452) + v207 - *(_DWORD *)(v5 + 28)) >> v207) {
                            int v140 = (int)(*(_DWORD *)(v213 + 3452) + v207 - *(_DWORD *)(v5 + 28)) >> v207;
                          }
                          switch(v140)
                          {
                            case 1:
                              LODWORD(v141) = v220;
                              v209->i8[0] = v220;
                              goto LABEL_234;
                            case 2:
                              LODWORD(v141) = v220;
                              v209->i16[0] = v220 | (v220 << 8);
                              goto LABEL_234;
                            case 3:
                            case 5:
                            case 6:
                            case 7:
                              goto LABEL_230;
                            case 4:
                              LODWORD(v141) = v220;
                              v209->i32[0] = 16843009 * v220;
                              goto LABEL_234;
                            case 8:
                              LODWORD(v141) = v220;
                              v209->i64[0] = 0x101010101010101 * v220;
                              goto LABEL_234;
                            default:
                              if (v140 == 16)
                              {
                                uint64_t v141 = v220;
                                v209->i64[0] = 0x101010101010101 * v220;
                                *double v178 = 0x101010101010101 * v141;
                              }
                              else
                              {
LABEL_230:
                                LODWORD(v141) = v220;
                                uint64_t result = (uint64_t)memset(v209, v220, v140);
                              }
LABEL_234:
                              int v133 = *v218;
                              int v144 = (int)(*(_DWORD *)(v213 + 3448) + v199 - *(_DWORD *)(v5 + 24)) >> v199;
                              if (v133 < v144) {
                                int v144 = *v218;
                              }
                              switch(v144)
                              {
                                case 1:
                                  *(unsigned char *)(*(void *)(v5 + 656) + 32 * v217 + v139 + 64) = v141;
                                  goto LABEL_245;
                                case 2:
                                  *(_WORD *)(*(void *)(v5 + 656) + 32 * v217 + v139 + 64) = v141 | ((_WORD)v141 << 8);
                                  goto LABEL_245;
                                case 3:
                                case 5:
                                case 6:
                                case 7:
                                  goto LABEL_240;
                                case 4:
                                  *(_DWORD *)(*(void *)(v5 + 656) + 32 * v217 + v139 + 64) = 16843009 * v141;
                                  goto LABEL_245;
                                case 8:
                                  uint64_t v145 = 0x101010101010101 * v141;
                                  uint64_t v146 = *(void *)(v5 + 656) + 32 * v217 + v139;
                                  goto LABEL_243;
                                default:
                                  if (v144 == 16)
                                  {
                                    uint64_t v145 = 0x101010101010101 * v141;
                                    *(void *)(*(void *)(v5 + 656) + 32 * v217 + v139 + 64) = v145;
                                    uint64_t v146 = *(void *)(v5 + 656) + 32 * v217 + (v139 + 8);
LABEL_243:
                                    *(void *)(v146 + 64) = v145;
                                  }
                                  else
                                  {
LABEL_240:
                                    uint64_t result = (uint64_t)memset((void *)(*(void *)(v5 + 656) + 32 * v217 + v139 + 64), v141, v144);
                                  }
LABEL_245:
                                  uint64_t v137 = v5 + 1024;
                                  unsigned int v15 = v199;
                                  signed int v113 = v206;
                                  if ((v138 & 0x80000000) == 0) {
                                    goto LABEL_246;
                                  }
                                  goto LABEL_247;
                              }
                          }
                        }
                        unsigned int v134 = &v212[6 * (*v28 & 1)];
                        __int16 v135 = (__int16 *)*((void *)v134 + 1738);
                        int v136 = *v135;
                        *((void *)v134 + 1738) = v135 + 1;
                        uint64_t v137 = *((void *)v134 + 1739);
                        int v133 = *v218;
                        *((void *)v134 + 1739) = v137 + 32 * *v214 * (unint64_t)*v218;
                        uint64_t v138 = (v136 >> 5);
                        LODWORD(v222[0]) = v136 & 0x1F;
                        if ((v138 & 0x80000000) == 0) {
LABEL_246:
                        }
                          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v187
                                                                                                 + 136
                                                                                                 * v4[7]
                                                                                                 + 8
                                                                                                 * LODWORD(v222[0])))(v120, v111, v137, v138);
                      }
LABEL_247:
                      v120 += (4 * v133);
                      v114 += v133;
                      int v119 = (v133 << v15) + *(_DWORD *)(v5 + 24);
                      *(_DWORD *)(v5 + 24) = v119;
                    }
                    while (v114 < v113);
                    int v115 = *(_DWORD *)(v5 + 28);
                    LOBYTE(v17) = v207;
                    LODWORD(v110) = v179;
                  }
                  int v117 = v119 - (v114 << v15);
                  *(_DWORD *)(v5 + 24) = v117;
                  int v147 = *v214;
                  v115 += v147 << v17;
                  *(_DWORD *)(v5 + 28) = v115;
                  v186 += v147;
                  signed int v114 = v202;
                }
                while (v186 < v182);
              }
              int v7 = v115 - (v186 << v17);
              *(_DWORD *)(v5 + 28) = v7;
              uint64_t v112 = v184;
            }
            while (!v217);
          }
          int64_t v32 = v166;
          int v14 = v162;
          uint64_t v22 = v172;
          unsigned int v29 = v165;
        }
        while (v166 < v164);
      }
      unsigned int v21 = v29;
    }
    while ((int)v29 < v14);
  }
  return result;
}

uint64_t sub_224AC273C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v251 = (_DWORD *)(a1 + 258496);
  uint64_t v5 = *(void *)(a1 + 8);
  int v6 = *(_DWORD *)(a1 + 24);
  int v7 = *(_DWORD *)(a1 + 28);
  uint64_t v8 = v6;
  int v9 = v7;
  unint64_t v224 = v7 & 0x1F;
  unint64_t v225 = v6 & 0x1F;
  int v10 = *(_DWORD *)(v5 + 2168);
  unsigned int v242 = v10 == 1;
  int v11 = &byte_224B28CC0[4 * a2];
  uint64_t v12 = *v11;
  int v252 = v11;
  int v13 = v11[1];
  int v14 = *(_DWORD *)(v5 + 3448) - v6;
  if ((int)v12 < v14) {
    int v14 = *v11;
  }
  unsigned int v208 = v14;
  int v15 = *(_DWORD *)(v5 + 3452) - v7;
  if (v13 < v15) {
    int v15 = v11[1];
  }
  int v205 = v15;
  int v255 = v10 != 3;
  if (!v10 || (v12 <= (v10 != 3) ? (BOOL v16 = (v8 & 1) == 0) : (BOOL v16 = 0), v16))
  {
    int v17 = 0;
  }
  else if (v13 <= v242)
  {
    int v17 = v7 & 1;
  }
  else
  {
    int v17 = 1;
  }
  uint64_t v243 = *(void *)(v5 + 3280);
  int v245 = *(_DWORD **)(a1 + 16);
  unint64_t v236 = v225 >> v255;
  unint64_t v223 = v224 >> v242;
  if (v10) {
    int v18 = 3 - v10;
  }
  else {
    int v18 = 0;
  }
  signed int v238 = (v13 + v242) >> v242;
  signed int v240 = (v12 + v255) >> v255;
  uint64_t v19 = *(void *)(v5 + 2144);
  uint64_t v20 = *(void *)(v5 + 2120) + 4 * (v8 + v19 * v7);
  uint64_t v217 = 4 * (*(void *)(v5 + 2152) * (v7 >> v242) + ((int)v8 >> v255));
  uint64_t v21 = *(void *)(v5 + 24);
  int v213 = v17;
  *(void *)int v214 = *v11;
  uint64_t v256 = *(void *)(a1 + 8);
  *(void *)unsigned int v210 = v11[1];
  int v228 = *(_DWORD *)(v5 + 2168);
  if ((*(unsigned char *)(v21 + 232) & 1) == 0)
  {
    uint64_t v22 = v5 + 2376;
    sub_224AC4478(a1, v20, 0, v19, v12, v13, v8, v9, 0, v203, *(_DWORD *)(a3 + 8), v5 + 2376, 0, 9u);
    uint64_t v5 = v256;
    if (v17)
    {
      uint64_t v23 = 0;
      do
      {
        uint64_t v24 = *(void *)(v256 + 2128 + 8 * v23++) + v217;
        sub_224AC4478(a1, v24, 0, *(void *)(v5 + 2152), v214[0] << (v214[0] == v255), v210[0] << (v210[0] == v242), *(_DWORD *)(a1 + 24) & ~v255, *(_DWORD *)(a1 + 28) & ~v242, v23, v204, *(_DWORD *)(a3 + 8), v22, 0, 9u);
        uint64_t v5 = v256;
      }
      while (v23 != 2);
    }
    goto LABEL_149;
  }
  if (*(unsigned char *)(a3 + 20))
  {
    uint64_t v25 = 0;
    uint64_t v26 = a3 + 8;
    unsigned int v27 = *(unsigned __int8 *)(a3 + 27);
    uint64_t v28 = a1 + 8256;
    uint64_t v29 = 4 * v12;
    char v30 = 1;
    do
    {
      char v31 = v30;
      uint64_t v32 = *(char *)(a3 + v25 + 24);
      if (*(unsigned char *)(a3 + 21) == 6 && *(unsigned char *)(v5 + v32 + 3056)) {
        sub_224AC4998(a1, 0, v28 + (v25 << 15), v29, v252, 0, v5 + 296 * *(char *)(a3 + v25 + 24) + 32, *(void *)(v5 + 24) + 36 * *(char *)(a3 + v25 + 24) + 896);
      }
      else {
        sub_224AC4478(a1, 0, v28 + (v25 << 15), 0, v214[0], v210[0], *(_DWORD *)(a1 + 24), *(_DWORD *)(a1 + 28), 0, v203, *(_DWORD *)(v26 + 4 * v25), v5 + 296 * v32 + 32, *(char *)(a3 + v25 + 24), v27);
      }
      char v30 = 0;
      uint64_t v25 = 1;
      uint64_t v5 = v256;
    }
    while ((v31 & 1) != 0);
    switch(*(unsigned char *)(a3 + 20))
    {
      case 1:
        unsigned int v230 = *(unsigned __int8 *)(v256 - *(char *)(a3 + 24) + 8 * *(char *)(a3 + 24) + *(char *)(a3 + 25) + 4272);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, void))(v243 + 584))(v20, *(void *)(v256 + 2144), v28, a1 + 41024, v29, (4 * v210[0]));
        uint64_t v5 = v256;
        goto LABEL_52;
      case 2:
        (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, void))(v243 + 576))(v20, *(void *)(v256 + 2144), v28, a1 + 41024, v29, (4 * v210[0]));
        uint64_t v5 = v256;
        goto LABEL_51;
      case 3:
        unsigned int v235 = (char *)(a1 + 73792);
        (*(void (**)(uint64_t, void, unint64_t, unint64_t, uint64_t, void))(v243 + 8 * v18 + 600))(v20, *(void *)(v256 + 2144), v28 + ((unint64_t)*(unsigned __int8 *)(a3 + 17) << 15), v28 + ((unint64_t)(*(unsigned char *)(a3 + 17) == 0) << 15), v29, (4 * v210[0]));
        uint64_t v5 = v256;
        unsigned int v230 = 0;
        if (v17) {
          goto LABEL_55;
        }
        goto LABEL_149;
      case 4:
        unsigned int v43 = 4 * v210[0];
        (*(void (**)(uint64_t, void, unint64_t, unint64_t, uint64_t, void, char *))(v243 + 592))(v20, *(void *)(v256 + 2144), v28 + ((unint64_t)*(unsigned __int8 *)(a3 + 17) << 15), v28 + ((unint64_t)(*(unsigned char *)(a3 + 17) == 0) << 15), v29, (4 * v210[0]), (char *)&unk_26AAAB780+ 8 * *((unsigned __int16 *)&unk_26AAAB780 + 36 * a2 + *(unsigned __int8 *)(a3 + 16) - 252));
        uint64_t v5 = v256;
        if (!v17) {
          goto LABEL_149;
        }
        unsigned int v230 = 0;
        unsigned int v235 = (char *)&unk_26AAAB780
             + 8
             * *((unsigned __int16 *)&unk_26AAAB780
               + 396 * v18
               + 36 * a2
               + 16 * *(unsigned __int8 *)(a3 + 17)
               + *(unsigned __int8 *)(a3 + 16)
               - 252);
        goto LABEL_56;
      default:
LABEL_51:
        unsigned int v230 = 0;
LABEL_52:
        unsigned int v235 = 0;
        if (!v17) {
          goto LABEL_149;
        }
LABEL_55:
        unsigned int v43 = 4 * v210[0];
LABEL_56:
        if (v240 >= v238) {
          unsigned int v44 = v238;
        }
        else {
          unsigned int v44 = v240;
        }
        uint64_t v45 = v29 >> v255;
        unsigned int v246 = v43 >> v242;
        uint64_t v232 = a1 + 41024;
        char v46 = 1;
        uint64_t v47 = 1;
        break;
    }
    while (1)
    {
      uint64_t v48 = 0;
      char v249 = v46;
      char v49 = 1;
      do
      {
        char v50 = v49;
        uint64_t v51 = *(char *)(a3 + v48 + 24);
        BOOL v52 = *(unsigned char *)(a3 + 21) == 6 && v44 >= 2;
        if (v52 && *(unsigned char *)(v5 + v51 + 3056)) {
          sub_224AC4998(a1, 0, v28 + (v48 << 15), v45, v252, v47, v5 + 296 * *(char *)(a3 + v48 + 24) + 32, *(void *)(v5 + 24) + 36 * *(char *)(a3 + v48 + 24) + 896);
        }
        else {
          sub_224AC4478(a1, 0, v28 + (v48 << 15), 0, v214[0], v210[0], *(_DWORD *)(a1 + 24), *(_DWORD *)(a1 + 28), v47, v203, *(_DWORD *)(v26 + 4 * v48), v5 + 296 * v51 + 32, *(char *)(a3 + v48 + 24), v27);
        }
        char v49 = 0;
        uint64_t v48 = 1;
        uint64_t v5 = v256;
      }
      while ((v50 & 1) != 0);
      uint64_t v53 = *(void *)(v256 + 8 * v47 + 2120) + v217;
      int v54 = *(unsigned __int8 *)(a3 + 20);
      if ((v54 - 3) < 2)
      {
        (*(void (**)(uint64_t, void, unint64_t, unint64_t, uint64_t, void, char *))(v243 + 592))(v53, *(void *)(v256 + 2152), v28 + ((unint64_t)*(unsigned __int8 *)(a3 + 17) << 15), v28 + ((unint64_t)(*(unsigned char *)(a3 + 17) == 0) << 15), v45, v246, v235);
      }
      else
      {
        if (v54 != 1)
        {
          char v55 = v249;
          if (v54 == 2)
          {
            (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, void))(v243 + 576))(v53, *(void *)(v256 + 2152), v28, v232, v45, v246);
            uint64_t v5 = v256;
          }
          goto LABEL_77;
        }
        (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, void, void))(v243 + 584))(v53, *(void *)(v256 + 2152), v28, v232, v45, v246, v230);
      }
      uint64_t v5 = v256;
      char v55 = v249;
LABEL_77:
      char v46 = 0;
      uint64_t v47 = 2;
      if ((v55 & 1) == 0) {
        goto LABEL_149;
      }
    }
  }
  int v234 = v18;
  uint64_t v33 = *(char *)(a3 + 24);
  uint64_t v34 = v5 + 296 * v33 + 32;
  unsigned int v248 = *(unsigned __int8 *)(a3 + 27);
  if ((int)v12 >= v13) {
    unsigned int v35 = v11[1];
  }
  else {
    unsigned int v35 = *v11;
  }
  if (v35 < 2) {
    goto LABEL_43;
  }
  if (*(unsigned char *)(a3 + 21) != 2 || !*(unsigned char *)(v5 + v33 + 3056))
  {
    if (*(unsigned char *)(a3 + 22) == 2 && *v251 > 1u) {
      goto LABEL_41;
    }
LABEL_43:
    sub_224AC4478(a1, v20, 0, v19, v12, v13, v8, v9, 0, v203, *(_DWORD *)(a3 + 8), v34, v33, v248);
    if (*(unsigned char *)(a3 + 22) == 1) {
      sub_224AC4CD4(v4, v20, *(void *)(v256 + 2144), v252, 0, v225, v224, v208, v205);
    }
    goto LABEL_45;
  }
  if (*(unsigned char *)(a3 + 22) == 2)
  {
LABEL_41:
    uint64_t v36 = a1 + 258496;
    goto LABEL_42;
  }
  uint64_t v36 = v21 + 36 * (int)v33 + 896;
LABEL_42:
  sub_224AC4998(a1, v20, 0, v19, v252, 0, v34, v36);
LABEL_45:
  uint64_t v5 = v256;
  if (*(unsigned char *)(a3 + 28))
  {
    uint64_t v37 = v4 + 17536;
    uint64_t v38 = v4;
    int v39 = (unsigned char *)(v4 + 21664);
    unsigned int v40 = *(unsigned __int8 *)(a3 + 18);
    if (v40 == 3) {
      unsigned int v40 = 9;
    }
    v259[0] = 0;
    int v41 = *(_DWORD *)(v38 + 28);
    if (((*(_DWORD *)(v256 + 3472) - 1) & v41) != 0) {
      uint64_t v42 = 0;
    }
    else {
      uint64_t v42 = *(void *)(v256 + 3408) + ((*(int *)(v256 + 3456) * ((v41 >> *(_DWORD *)(v256 + 3468)) - 1)) << 7);
    }
    unsigned int v56 = sub_224AB26C0(*(_DWORD *)(a1 + 24), *(_DWORD *)(a1 + 24) > v245[3466], v41, v41 > v245[3468], v245[3467], v245[3469], 0, v20, *(void *)(v256 + 2144), v42, v40, v259, v214[0], v210[0], 0, v39);
    (*(void (**)(uint64_t, uint64_t, unsigned char *, uint64_t, void, void, void, void))(v243 + 8 * v56 + 64))(v37, 4 * *(void *)v214, v39, 4 * *(void *)v214, (4 * v210[0]), 0, 0, 0);
    unsigned int v57 = a2 - 7;
    if (*(unsigned char *)(a3 + 28) == 1) {
      int v58 = (char *)&unk_26AAAB780 + 72 * v57 + 2 * *(unsigned __int8 *)(a3 + 18) + 64;
    }
    else {
      int v58 = (char *)&unk_26AAAB780 + 72 * v57 + 2 * *(unsigned __int8 *)(a3 + 16);
    }
    uint64_t v4 = a1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t, void, char *))(v243 + 624))(v20, *(void *)(v256 + 2144), v37, 4 * *(void *)v214, (4 * v210[0]), (char *)&unk_26AAAB780 + 8 * *(unsigned __int16 *)v58);
    uint64_t v5 = v256;
  }
  if (v17)
  {
    if (v214[0] != v255 && v210[0] != v242) {
      goto LABEL_121;
    }
    unint64_t v59 = (void *)(v4 + 8 * (*(_DWORD *)(v4 + 28) & 0x1F) + 712);
    BOOL v60 = v214[0] != 1 || *(char *)(*v59 + 12 * *(int *)(v4 + 24) - 4) > 0;
    if (v210[0] == v242)
    {
      uint64_t v61 = *(void *)(v4 + 8 * (*(_DWORD *)(v4 + 28) & 0x1F) + 704);
      int v62 = *(_DWORD *)(v4 + 24);
      if (*(char *)(v61 + 12 * v62 + 8) <= 0) {
        BOOL v60 = 0;
      }
      if (v214[0] == 1 && *(char *)(v61 + 12 * v62 - 4) <= 0) {
        BOOL v60 = 0;
      }
    }
    if (v60)
    {
      uint64_t v63 = 0;
      uint64_t v64 = 0;
      if (v214[0] == 1 && v210[0] == v242)
      {
        char v65 = 1;
        uint64_t v66 = 1;
        uint64_t v67 = a1;
        do
        {
          char v68 = v65;
          uint64_t v69 = *(int *)(v67 + 24);
          uint64_t v70 = *(int *)(v67 + 28) - 1;
          if (v251[17] == 2) {
            unsigned int v71 = *(unsigned __int8 *)(*(void *)(v5 + 4360) + 32 * (v69 + *(void *)(v5 + 3432) * v70) - 5);
          }
          else {
            unsigned int v71 = v251[16];
          }
          int v72 = v69 - 1;
          uint64_t v73 = *(v59 - 1) + 12 * (v69 - 1);
          uint64_t v67 = a1;
          sub_224AC4478(a1, *(void *)(v5 + 8 * v66 + 2120) + v217, 0, *(void *)(v5 + 2152), 1, v242, v72, v70, v66, v203, *(_DWORD *)v73, v5 + 296 * (*(char *)(v73 + 8) - 1) + 32, *(char *)(v73 + 8) - 1, v71);
          uint64_t v5 = v256;
          char v65 = 0;
          uint64_t v66 = 2;
        }
        while ((v68 & 1) != 0);
        uint64_t v64 = 2 * *(void *)(v256 + 2152);
        uint64_t v63 = 2;
      }
      if (v214[0] == 1)
      {
        unsigned int v74 = byte_224B19468[4 * *(unsigned __int8 *)(a1 + v224 + 416) + *(unsigned __int8 *)(a1 + v224 + 384)];
        char v75 = 1;
        uint64_t v63 = 2;
        uint64_t v76 = 1;
        do
        {
          char v77 = v75;
          uint64_t v79 = *(int *)(a1 + 24);
          uint64_t v78 = *(int *)(a1 + 28);
          unsigned int v80 = v74;
          if (v251[17] == 2) {
            unsigned int v80 = *(unsigned __int8 *)(*(void *)(v5 + 4360) + 32 * (v79 + *(void *)(v5 + 3432) * v78) - 5);
          }
          sub_224AC4478(a1, *(void *)(v5 + 8 * v76 + 2120) + v217 + v64, 0, *(void *)(v5 + 2152), 1, v210[0], v79 - 1, v78, v76, v203, *(_DWORD *)(*v59 + 12 * (v79 - 1)), v5 + 296 * (*(char *)(*v59 + 12 * (v79 - 1) + 8) - 1) + 32, *(char *)(*v59 + 12 * (v79 - 1) + 8) - 1, v80);
          uint64_t v5 = v256;
          char v75 = 0;
          uint64_t v76 = 2;
        }
        while ((v77 & 1) != 0);
      }
      if (v210[0] == v242)
      {
        unsigned int v81 = byte_224B19468[4 * *(unsigned __int8 *)(*(void *)(a1 + 656) + v225 + 384)
                           + *(unsigned __int8 *)(*(void *)(a1 + 656) + v225 + 352)];
        char v82 = 1;
        uint64_t v83 = 1;
        do
        {
          char v84 = v82;
          uint64_t v85 = *(int *)(a1 + 24);
          uint64_t v86 = *(int *)(a1 + 28) - 1;
          unsigned int v87 = v81;
          if (v251[17] == 2) {
            unsigned int v87 = *(unsigned __int8 *)(*(void *)(v5 + 4360) + 32 * (v85 + *(void *)(v5 + 3432) * v86) + 27);
          }
          uint64_t v88 = *(v59 - 1) + 12 * (int)v85;
          sub_224AC4478(a1, *(void *)(v5 + 8 * v83 + 2120) + v217 + v63, 0, *(void *)(v5 + 2152), v214[0], v242, v85, v86, v83, v203, *(_DWORD *)v88, v5 + 296 * (*(char *)(v88 + 8) - 1) + 32, *(char *)(v88 + 8) - 1, v87);
          uint64_t v5 = v256;
          char v82 = 0;
          uint64_t v83 = 2;
        }
        while ((v84 & 1) != 0);
        uint64_t v64 = 2 * *(void *)(v256 + 2152);
      }
      char v89 = 1;
      uint64_t v90 = 1;
      do
      {
        char v91 = v89;
        sub_224AC4478(a1, *(void *)(v5 + 8 * v90 + 2120) + v217 + v63 + v64, 0, *(void *)(v5 + 2152), v214[0], v210[0], *(_DWORD *)(a1 + 24), *(_DWORD *)(a1 + 28), v90, v203, *(_DWORD *)(a3 + 8), v34, *(char *)(a3 + 24), v248);
        uint64_t v5 = v256;
        char v89 = 0;
        uint64_t v90 = 2;
      }
      while ((v91 & 1) != 0);
    }
    else
    {
LABEL_121:
      uint64_t v92 = v34;
      unsigned int v93 = v240;
      if (v240 >= v238) {
        unsigned int v93 = v238;
      }
      if (v93 >= 2
        && (*(unsigned char *)(a3 + 21) == 2 && *(unsigned char *)(v5 + *(char *)(a3 + 24) + 3056)
         || *(unsigned char *)(a3 + 22) == 2 && *v251 >= 2u))
      {
        uint64_t v94 = v4 + 258496;
        char v95 = 1;
        uint64_t v96 = 1;
        do
        {
          char v97 = v95;
          uint64_t v98 = v94;
          if (*(unsigned char *)(a3 + 22) != 2) {
            uint64_t v98 = *(void *)(v5 + 24) + 36 * *(char *)(a3 + 24) + 896;
          }
          sub_224AC4998(a1, *(void *)(v5 + 8 * v96 + 2120) + v217, 0, *(void *)(v5 + 2152), v252, v96, v34, v98);
          uint64_t v5 = v256;
          char v95 = 0;
          uint64_t v96 = 2;
        }
        while ((v97 & 1) != 0);
      }
      else
      {
        char v99 = 1;
        uint64_t v100 = 1;
        do
        {
          char v101 = v99;
          uint64_t v102 = v5 + 8 * v100;
          sub_224AC4478(a1, *(void *)(v102 + 2120) + v217, 0, *(void *)(v5 + 2152), v214[0] << (v214[0] == v255), v210[0] << (v210[0] == v242), *(_DWORD *)(a1 + 24) & ~v255, *(_DWORD *)(a1 + 28) & ~v242, v100, v203, *(_DWORD *)(a3 + 8), v92, *(char *)(a3 + 24), v248);
          if (*(unsigned char *)(a3 + 22) == 1) {
            sub_224AC4CD4(a1, *(void *)(v102 + 2120) + v217, *(void *)(v256 + 2152), v252, v100, v225, v224, v208, v205);
          }
          char v99 = 0;
          uint64_t v100 = 2;
          uint64_t v5 = v256;
        }
        while ((v101 & 1) != 0);
      }
      if (*(unsigned char *)(a3 + 28))
      {
        if (*(unsigned char *)(a3 + 28) == 1) {
          int v103 = (char *)&unk_26AAAB780 + 792 * v234 + 72 * a2 + 2 * *(unsigned __int8 *)(a3 + 18) - 440;
        }
        else {
          int v103 = (char *)&unk_26AAAB780 + 792 * v234 + 72 * a2 + 2 * *(unsigned __int8 *)(a3 + 16) - 504;
        }
        uint64_t v104 = a1;
        unsigned int v253 = (char *)&unk_26AAAB780 + 8 * *(unsigned __int16 *)v103;
        int v105 = (unsigned char *)(a1 + 21664);
        uint64_t v106 = (4 * v240);
        uint64_t v107 = (4 * v238);
        char v108 = 1;
        uint64_t v109 = 1;
        uint64_t v110 = a1 + 17536;
        do
        {
          char v111 = v108;
          unsigned int v112 = *(unsigned __int8 *)(a3 + 18);
          if (v112 == 3) {
            unsigned int v112 = 9;
          }
          v259[0] = 0;
          uint64_t v113 = v5 + 8 * v109;
          int v114 = *(_DWORD *)(v104 + 28);
          if (((*(_DWORD *)(v5 + 3472) - 1) & v114) != 0) {
            uint64_t v115 = 0;
          }
          else {
            uint64_t v115 = *(void *)(v113 + 3408) + ((*(int *)(v5 + 3456) * ((v114 >> *(_DWORD *)(v5 + 3468)) - 1)) << 7);
          }
          uint64_t v116 = *(void *)(v113 + 2120) + v217;
          uint64_t v104 = a1;
          unsigned int v117 = sub_224AB26C0(*(int *)(a1 + 24) >> v255, *(int *)(a1 + 24) >> v255 > (int)v245[3466] >> v255, v114 >> v242, v114 >> v242 > (int)v245[3468] >> v242, (int)v245[3467] >> v255, (int)v245[3469] >> v242, 0, v116, *(void *)(v5 + 2152), v115, v112, v259, v240, v238, 0, v105);
          (*(void (**)(uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t, void, void, void))(v243 + 64 + 8 * v117))(v110, v106, v105, v106, v107, 0, 0, 0);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, char *))(v243 + 624))(v116, *(void *)(v256 + 2152), v110, v106, v107, v253);
          uint64_t v5 = v256;
          char v108 = 0;
          uint64_t v109 = 2;
        }
        while ((v111 & 1) != 0);
      }
    }
  }
  v251[16] = v248;
LABEL_149:
  if (*(unsigned char *)(a3 + 6))
  {
    uint64_t v118 = a1;
    int v119 = v213;
    int v120 = v214[0];
    switch(v210[0])
    {
      case 1:
        *(unsigned char *)(a1 + v224 + 64) = 64;
        break;
      case 2:
        *(_WORD *)(a1 + v224 + 64) = 16448;
        break;
      case 3:
      case 5:
      case 6:
      case 7:
        break;
      case 4:
        *(_DWORD *)(a1 + v224 + 64) = 1077952576;
        break;
      case 8:
        *(void *)(a1 + v224 + 64) = 0x4040404040404040;
        break;
      default:
        if (v210[0] == 16)
        {
          uint64_t v118 = a1;
          *(void *)&long long v184 = 0x4040404040404040;
          *((void *)&v184 + 1) = 0x4040404040404040;
          *(_OWORD *)(a1 + v224 + 64) = v184;
          int v119 = v213;
          int v120 = v214[0];
        }
        else
        {
          uint64_t v118 = a1;
          int v119 = v213;
          int v120 = v214[0];
          if (v210[0] == 32)
          {
            *(void *)&long long v183 = 0x4040404040404040;
            *((void *)&v183 + 1) = 0x4040404040404040;
            *(_OWORD *)(a1 + 64 + v224) = v183;
            *(_OWORD *)(a1 + 64 + (v224 + 16)) = v183;
          }
        }
        break;
    }
    switch(v120)
    {
      case 1:
        *(unsigned char *)(*(void *)(v118 + 656) + v225 + 32) = 64;
        goto LABEL_239;
      case 2:
        *(_WORD *)(*(void *)(v118 + 656) + v225 + 32) = 16448;
        goto LABEL_239;
      case 3:
      case 5:
      case 6:
      case 7:
        goto LABEL_239;
      case 4:
        *(_DWORD *)(*(void *)(v118 + 656) + v225 + 32) = 1077952576;
        goto LABEL_239;
      case 8:
        uint64_t v187 = *(void *)(v118 + 656) + v225;
        goto LABEL_238;
      default:
        if (v120 == 16)
        {
          *(void *)(*(void *)(v118 + 656) + v225 + 32) = 0x4040404040404040;
          uint64_t v185 = *(void *)(v118 + 656);
          uint64_t v186 = (v225 + 8);
        }
        else
        {
          if (v120 != 32) {
            goto LABEL_239;
          }
          *(void *)(*(void *)(v118 + 656) + v225 + 32) = 0x4040404040404040;
          *(void *)(*(void *)(v118 + 656) + (v225 + 8) + 32) = 0x4040404040404040;
          *(void *)(*(void *)(v118 + 656) + (v225 + 16) + 32) = 0x4040404040404040;
          uint64_t v185 = *(void *)(v118 + 656);
          uint64_t v186 = (v225 + 24);
        }
        uint64_t v187 = v185 + v186;
LABEL_238:
        *(void *)(v187 + 32) = 0x4040404040404040;
LABEL_239:
        if (v119)
        {
          switch(v238)
          {
            case 1:
              unint64_t v188 = v118 + v223;
              *(unsigned char *)(v188 + 96) = 64;
              *(unsigned char *)(v188 + 128) = 64;
              break;
            case 2:
              unint64_t v193 = v118 + v223;
              *(_WORD *)(v193 + 96) = 16448;
              *(_WORD *)(v193 + 128) = 16448;
              break;
            case 3:
            case 5:
            case 6:
            case 7:
              break;
            case 4:
              unint64_t v194 = v118 + v223;
              *(_DWORD *)(v194 + 96) = 1077952576;
              *(_DWORD *)(v194 + 128) = 1077952576;
              break;
            case 8:
              unint64_t v195 = v118 + v223;
              *(void *)(v195 + 96) = 0x4040404040404040;
              *(void *)(v195 + 128) = 0x4040404040404040;
              break;
            default:
              if (v238 == 16)
              {
                unint64_t v196 = v118 + v223;
                *(void *)&long long v197 = 0x4040404040404040;
                *((void *)&v197 + 1) = 0x4040404040404040;
                *(_OWORD *)(v196 + 96) = v197;
                *(_OWORD *)(v196 + 128) = v197;
              }
              else if (v238 == 32)
              {
                uint64_t v189 = v118 + 96;
                *(void *)&long long v190 = 0x4040404040404040;
                *((void *)&v190 + 1) = 0x4040404040404040;
                *(_OWORD *)(v189 + v223) = v190;
                uint64_t v191 = v223 + 16;
                *(_OWORD *)(v189 + v191) = v190;
                uint64_t v192 = v118 + 128;
                *(_OWORD *)(v192 + v223) = v190;
                *(_OWORD *)(v192 + v191) = v190;
              }
              break;
          }
          switch(v240)
          {
            case 1:
              *(unsigned char *)(*(void *)(v118 + 656) + v236 + 64) = 64;
              *(unsigned char *)(*(void *)(v118 + 656) + v236 + 96) = 64;
              return 0;
            case 2:
              *(_WORD *)(*(void *)(v118 + 656) + v236 + 64) = 16448;
              *(_WORD *)(*(void *)(v118 + 656) + v236 + 96) = 16448;
              return 0;
            case 3:
            case 5:
            case 6:
            case 7:
              return 0;
            case 4:
              *(_DWORD *)(*(void *)(v118 + 656) + v236 + 64) = 1077952576;
              *(_DWORD *)(*(void *)(v118 + 656) + v236 + 96) = 1077952576;
              return 0;
            case 8:
              uint64_t v200 = v225 >> v255;
              *(void *)(*(void *)(v118 + 656) + v236 + 64) = 0x4040404040404040;
              goto LABEL_259;
            default:
              if (v240 == 16)
              {
                *(void *)(*(void *)(v118 + 656) + v236 + 64) = 0x4040404040404040;
                uint64_t v200 = v236 + 8;
                *(void *)(*(void *)(v118 + 656) + v200 + 64) = 0x4040404040404040;
                uint64_t v201 = *(void *)(v118 + 656) + v236;
              }
              else
              {
                if (v240 != 32) {
                  return 0;
                }
                *(void *)(*(void *)(v118 + 656) + v236 + 64) = 0x4040404040404040;
                uint64_t v198 = v236 + 8;
                *(void *)(*(void *)(v118 + 656) + v198 + 64) = 0x4040404040404040;
                uint64_t v199 = v236 + 16;
                *(void *)(*(void *)(v118 + 656) + v199 + 64) = 0x4040404040404040;
                uint64_t v200 = v236 + 24;
                *(void *)(*(void *)(v118 + 656) + v200 + 64) = 0x4040404040404040;
                *(void *)(*(void *)(v118 + 656) + v236 + 96) = 0x4040404040404040;
                *(void *)(*(void *)(v118 + 656) + v198 + 96) = 0x4040404040404040;
                uint64_t v201 = *(void *)(v118 + 656) + v199;
              }
              *(void *)(v201 + 96) = 0x4040404040404040;
LABEL_259:
              *(void *)(*(void *)(v118 + 656) + v200 + 96) = 0x4040404040404040;
              break;
          }
        }
        break;
    }
  }
  else
  {
    uint64_t v121 = *(unsigned __int8 *)(a3 + 7);
    uint64_t v122 = *(unsigned __int8 *)(a3 + 26);
    v258[0] = *(unsigned __int8 *)(a3 + 29);
    v258[1] = *(_WORD *)(a3 + 30);
    uint64_t v123 = a1;
    unsigned int v124 = v214[0];
    LOBYTE(v125) = v255;
    if (v210[0])
    {
      uint64_t v126 = 0;
      char v216 = v228 == 1;
      unsigned int v207 = &byte_224B28D18[8 * v122];
      unsigned int v250 = &byte_224B28D18[8 * v121];
      unsigned int v254 = v250 + 1;
      uint64_t v244 = v243 + 680;
      do
      {
        if (v124)
        {
          unsigned int v231 = 0;
          BOOL v209 = v126 != 0;
          uint64_t v219 = 4 * v126;
          unsigned int v127 = v126 + 16;
          int v128 = v205;
          if (v205 >= (int)v126 + 16) {
            int v128 = v126 + 16;
          }
          uint64_t v129 = v128;
          signed int v220 = v126 >> v242;
          unint64_t v206 = v126 + 16;
          signed int v130 = v127 >> v242;
          if ((int)(v205 + v242) >> v242 < (int)(v127 >> v242)) {
            signed int v130 = (int)(v205 + v242) >> v242;
          }
          signed int v227 = v130;
          int v131 = *(_DWORD *)(v123 + 28);
          uint64_t v221 = v126;
          uint64_t v218 = v129;
          do
          {
            uint64_t v132 = *(void *)(v5 + 2144);
            uint64_t v133 = v20 + v219 * v132;
            int v134 = v131 + v126;
            *(_DWORD *)(v123 + 28) = v131 + v126;
            if (v126 >= v129)
            {
              int v138 = v126;
            }
            else
            {
              char v135 = v209;
              if ((int)v208 >= (int)(v231 + 16)) {
                signed int v136 = v231 + 16;
              }
              else {
                signed int v136 = v208;
              }
              int v137 = *(_DWORD *)(v123 + 24);
              int v138 = v126;
              do
              {
                int v139 = v137 + v231;
                *(_DWORD *)(v123 + 24) = v139;
                signed int v140 = v231;
                if ((int)v231 < v136)
                {
                  uint64_t v141 = v123;
                  int v142 = v231 != 0;
                  signed int v140 = v231;
                  do
                  {
                    sub_224ABF134(v141, a2, a3, *(unsigned __int8 *)(a3 + 26), 0, (uint64_t)v258, v142, v135, v133 + (4 * v140));
                    int v143 = *v207;
                    int v139 = *(_DWORD *)(v141 + 24) + v143;
                    *(_DWORD *)(v141 + 24) = v139;
                    v140 += v143;
                    ++v142;
                  }
                  while (v140 < v136);
                  LOBYTE(v125) = v255;
                  uint64_t v5 = v256;
                  uint64_t v132 = *(void *)(v256 + 2144);
                  int v134 = *(_DWORD *)(v141 + 28);
                  uint64_t v123 = v141;
                  uint64_t v129 = v218;
                }
                uint64_t v144 = v207[1];
                v133 += 4 * v132 * v144;
                int v137 = v139 - v140;
                v134 += v144;
                *(_DWORD *)(v123 + 24) = v137;
                *(_DWORD *)(v123 + 28) = v134;
                v138 += v144;
                ++v135;
              }
              while (v138 < (int)v129);
            }
            int v131 = v134 - v138;
            *(_DWORD *)(v123 + 28) = v134 - v138;
            uint64_t v215 = v133;
            if (v213)
            {
              uint64_t v211 = v132;
              int v212 = v138;
              uint64_t v145 = 0;
              signed int v146 = v231 >> v125;
              if ((int)(v208 + v255) >> v255 >= (int)((v231 + 16) >> v125)) {
                signed int v147 = (v231 + 16) >> v125;
              }
              else {
                signed int v147 = (int)(v208 + v255) >> v255;
              }
              uint64_t v148 = *(void *)(v5 + 2152);
              char v149 = 1;
              uint64_t v150 = a3;
              signed int v151 = v227;
              signed int v226 = v231 >> v125;
              do
              {
                char v152 = v149;
                uint64_t v153 = *(void *)(v5 + 8 * (v145 + 1) + 2120);
                int v154 = v131 + v221;
                *(_DWORD *)(v123 + 28) = v154;
                char v222 = v152;
                if (v220 >= v151)
                {
                  signed int v155 = v220;
                }
                else
                {
                  signed int v155 = v220;
                  uint64_t v156 = v153 + v217 + ((v219 * v148) >> v216);
                  int v157 = *(_DWORD *)(v123 + 24);
                  do
                  {
                    int v158 = v157 + v231;
                    *(_DWORD *)(v123 + 24) = v158;
                    if (v146 >= v147)
                    {
                      uint64_t v168 = *v254;
                      signed int v161 = v146;
                    }
                    else
                    {
                      int v241 = v225 | (32 * ((v155 << v242) + v224));
                      signed int v229 = v155;
                      uint64_t v159 = (v155 + v223);
                      uint64_t v160 = v123 + 32 * v145 + 96;
                      signed int v161 = v146;
                      int v162 = (uint64x2_t *)(v160 + v159);
                      int v233 = (void *)(v160 + (v159 + 8));
                      do
                      {
                        int v163 = v251[17];
                        if (!v163)
                        {
                          unsigned __int8 v257 = 0;
                          v259[0] = *(unsigned __int8 *)(a1 + 9344 + v241 + (v161 << v125));
                          uint64_t v169 = v150;
                          uint64_t v170 = (v161 + v236);
                          int v171 = sub_224ABF768(v123, (uint64x2_t *)(*(void *)(v123 + 656) + 32 * v145 + v170 + 64), v162, *(unsigned __int8 *)(v169 + 7), a2, v169, 0, (int)v145 + 1, (_WORD *)(a1 + 1024), (unsigned int *)v259, &v257);
                          uint64_t v168 = *v254;
                          uint64_t v172 = v256;
                          int v173 = (int)(*(_DWORD *)(v256 + 3452) + v242 - *(_DWORD *)(v123 + 28)) >> v242;
                          if ((int)v168 < v173) {
                            int v173 = *v254;
                          }
                          switch(v173)
                          {
                            case 1:
                              LODWORD(v174) = v257;
                              v162->i8[0] = v257;
                              goto LABEL_196;
                            case 2:
                              LODWORD(v174) = v257;
                              v162->i16[0] = v257 | (v257 << 8);
                              goto LABEL_196;
                            case 3:
                            case 5:
                            case 6:
                            case 7:
                              goto LABEL_192;
                            case 4:
                              LODWORD(v174) = v257;
                              v162->i32[0] = 16843009 * v257;
                              goto LABEL_196;
                            case 8:
                              LODWORD(v174) = v257;
                              v162->i64[0] = 0x101010101010101 * v257;
                              goto LABEL_196;
                            default:
                              if (v173 == 16)
                              {
                                uint64_t v174 = v257;
                                v162->i64[0] = 0x101010101010101 * v257;
                                *int v233 = 0x101010101010101 * v174;
                              }
                              else
                              {
LABEL_192:
                                LODWORD(v174) = v257;
                                memset(v162, v257, v173);
                                uint64_t v172 = v256;
                              }
LABEL_196:
                              int v167 = *v250;
                              int v125 = v255;
                              int v175 = (*(_DWORD *)(v172 + 3448) + v125 - *(_DWORD *)(a1 + 24)) >> v125;
                              if (v167 < v175) {
                                int v175 = *v250;
                              }
                              switch(v175)
                              {
                                case 1:
                                  *(unsigned char *)(*(void *)(a1 + 656) + 32 * v145 + v170 + 64) = v174;
                                  uint64_t v123 = a1;
                                  goto LABEL_207;
                                case 2:
                                  __int16 v179 = v174 | ((_WORD)v174 << 8);
                                  uint64_t v123 = a1;
                                  *(_WORD *)(*(void *)(a1 + 656) + 32 * v145 + v170 + 64) = v179;
                                  goto LABEL_207;
                                case 3:
                                case 5:
                                case 6:
                                case 7:
                                  goto LABEL_202;
                                case 4:
                                  int v180 = 16843009 * v174;
                                  uint64_t v123 = a1;
                                  *(_DWORD *)(*(void *)(a1 + 656) + 32 * v145 + v170 + 64) = v180;
                                  goto LABEL_207;
                                case 8:
                                  uint64_t v176 = 0x101010101010101 * v174;
                                  uint64_t v123 = a1;
                                  uint64_t v177 = *(void *)(a1 + 656) + 32 * v145 + v170;
                                  goto LABEL_206;
                                default:
                                  if (v175 == 16)
                                  {
                                    uint64_t v176 = 0x101010101010101 * v174;
                                    uint64_t v123 = a1;
                                    *(void *)(*(void *)(a1 + 656) + 32 * v145 + v170 + 64) = v176;
                                    uint64_t v177 = *(void *)(a1 + 656) + 32 * v145 + (v170 + 8);
LABEL_206:
                                    *(void *)(v177 + 64) = v176;
                                  }
                                  else
                                  {
LABEL_202:
                                    int v178 = v174;
                                    uint64_t v123 = a1;
                                    memset((void *)(*(void *)(a1 + 656) + 32 * v145 + v170 + 64), v178, v175);
                                    LOBYTE(v125) = v255;
                                  }
LABEL_207:
                                  uint64_t v150 = a3;
                                  if (v171 < 0) {
                                    goto LABEL_184;
                                  }
                                  goto LABEL_183;
                              }
                          }
                        }
                        int v164 = &v245[6 * (v163 & 1)];
                        unsigned int v165 = (__int16 *)*((void *)v164 + 1738);
                        int v166 = *v165;
                        *((void *)v164 + 1738) = v165 + 1;
                        int v167 = *v250;
                        uint64_t v168 = *v254;
                        *((void *)v164 + 1739) += 32 * v168 * *v250;
                        v259[0] = v166 & 0x1F;
                        if (((v166 >> 5) & 0x80000000) == 0)
                        {
LABEL_183:
                          (*(void (**)(uint64_t, void))(v244
                                                                  + 136 * *(unsigned __int8 *)(v150 + 7)
                                                                  + 8 * v259[0]))(v156 + (4 * v161), *(void *)(v256 + 2152));
                          LOBYTE(v125) = v255;
                        }
LABEL_184:
                        int v158 = (v167 << v125) + *(_DWORD *)(v123 + 24);
                        *(_DWORD *)(v123 + 24) = v158;
                        v161 += v167;
                      }
                      while (v161 < v147);
                      uint64_t v5 = v256;
                      uint64_t v148 = *(void *)(v256 + 2152);
                      int v154 = *(_DWORD *)(v123 + 28);
                      signed int v146 = v226;
                      signed int v151 = v227;
                      signed int v155 = v229;
                    }
                    v156 += 4 * v148 * v168;
                    int v157 = v158 - (v161 << v125);
                    v154 += v168 << v242;
                    *(_DWORD *)(v123 + 24) = v157;
                    *(_DWORD *)(v123 + 28) = v154;
                    v155 += v168;
                  }
                  while (v155 < v151);
                }
                char v149 = 0;
                int v131 = v154 - (v155 << v242);
                *(_DWORD *)(v123 + 28) = v131;
                uint64_t v145 = 1;
              }
              while ((v222 & 1) != 0);
              unsigned int v124 = v214[0];
              uint64_t v126 = v221;
              uint64_t v129 = v218;
              int v138 = v212;
              uint64_t v132 = v211;
              unsigned int v181 = v231 + 16;
            }
            else
            {
              unsigned int v181 = v231 + 16;
              unsigned int v124 = v214[0];
              uint64_t v126 = v221;
            }
            uint64_t v20 = v215 - 4 * v138 * v132;
            unsigned int v231 = v181;
          }
          while (v181 < v124);
          unint64_t v182 = v206;
        }
        else
        {
          unint64_t v182 = v126 + 16;
        }
        uint64_t v126 = v182;
      }
      while (v182 < *(void *)v210);
    }
  }
  return 0;
}

uint64_t sub_224AC4478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8, unsigned int a9, int a10, int a11, uint64_t a12, int a13, unsigned int a14)
{
  uint64_t v18 = *(void *)(a1 + 8);
  if (a9)
  {
    int v19 = *(_DWORD *)(v18 + 2168);
    int v20 = v19 == 1;
    int v21 = v19 != 3;
  }
  else
  {
    int v20 = 0;
    int v21 = 0;
  }
  unsigned int v22 = 4u >> v21;
  unsigned int v23 = 4u >> v20;
  int v24 = a11 >> 16;
  char v25 = v21 ^ 1;
  char v26 = v20 ^ 1;
  uint64_t v27 = *(void *)(a12 + 8 * (a9 != 0) + 40);
  int v29 = *(_DWORD *)(a12 + 56);
  int v28 = *(_DWORD *)(a12 + 60);
  if (v29 == *(_DWORD *)(v18 + 2160) && v28 == *(_DWORD *)(v18 + 2164))
  {
    unsigned int v30 = (0xFu >> v25) & (a11 >> 16);
    if (v21) {
      char v31 = 4;
    }
    else {
      char v31 = 3;
    }
    unsigned int v32 = (v24 >> v31) + v22 * a7;
    if (v20) {
      char v33 = 4;
    }
    else {
      char v33 = 3;
    }
    if (*(void *)(a12 + 16) == *(void *)(v18 + 2120))
    {
      int v34 = 4 * *(_DWORD *)(v18 + 3448);
      int v35 = 4 * *(_DWORD *)(v18 + 3452);
    }
    else
    {
      int v34 = v29 + v21;
      int v35 = v28 + v20;
    }
    uint64_t v86 = a4;
    unsigned int v69 = (0xFu >> v26) & a11;
    uint64_t v70 = ((__int16)a11 >> v33) + v23 * a8;
    int v71 = v35 >> v20;
    int v72 = v34 >> v21;
    if (v30) {
      int v73 = 3;
    }
    else {
      int v73 = 0;
    }
    unsigned int v88 = (0xFu >> v26) & a11;
    unsigned int v87 = (0xFu >> v25) & (a11 >> 16);
    if ((int)v32 >= v73
      && (v69 ? (int v74 = 3) : (int v74 = 0),
          (int)v70 >= v74
       && (int)(v32 + v22 * a5 + 4 * (v30 != 0)) <= v72
       && (int)(v70 + v23 * a6 + 4 * (v69 != 0)) <= v71))
    {
      uint64_t v92 = *(void *)(a12 + 8 * (a9 != 0) + 40);
      uint64_t v75 = *(void *)(a12 + 8 * a9 + 16) + v27 * v70;
    }
    else
    {
      uint64_t v75 = a1 + 90176;
      if (v30) {
        int v76 = 7;
      }
      else {
        int v76 = 0;
      }
      if (v69) {
        int v77 = 7;
      }
      else {
        int v77 = 0;
      }
      uint64_t v78 = v71;
      if (v69) {
        int v79 = -3;
      }
      else {
        int v79 = 0;
      }
      uint64_t v80 = a2;
      if (v69) {
        int v81 = 576;
      }
      else {
        int v81 = 0;
      }
      uint64_t v92 = 192;
      (*(void (**)(void, void, void, uint64_t, void, void, uint64_t, uint64_t, void, uint64_t))(*(void *)(v18 + 3280) + 664))(v76 + v22 * a5, v77 + v23 * a6, v72, v78, (int)(v32 - v73), v79 + (int)v70, v75, 192, *(void *)(a12 + 8 * a9 + 16), v27);
      unsigned int v32 = v73 | v81;
      a2 = v80;
    }
    uint64_t v82 = *(void *)(v18 + 3280);
    if (a2)
    {
      uint64_t v83 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void))(v82 + 8 * a14 + 256);
      return v83(a2, v86, v75 + v32, v92, v22 * a5, v23 * a6, v87 << v25, v88 << v26);
    }
    else
    {
      char v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, void, void))(v82 + 8 * a14 + 416);
      return v84(a3, v75 + v32, v92, v22 * a5, v23 * a6, v87 << v25, v88 << v26);
    }
  }
  else
  {
    int v37 = (v24 << v25) + 16 * a7 * v22;
    uint64_t v38 = (_DWORD *)(v18 + 16 * a13);
    uint64_t v39 = 8 * v38[782] - 0x20000 + (int)v38[782] * (uint64_t)v37;
    BOOL v40 = v39 < 0;
    if (v39 < 0) {
      uint64_t v39 = -v39;
    }
    unint64_t v41 = (unint64_t)(v39 + 128) >> 8;
    if (v40) {
      int v42 = -(int)v41;
    }
    else {
      int v42 = v41;
    }
    int v43 = v42 + 32;
    uint64_t v44 = 8 * v38[784] - 0x20000 + (int)v38[784] * (uint64_t)(int)(((__int16)a11 << v26) + 16 * a8 * v23);
    BOOL v45 = v44 < 0;
    if (v44 < 0) {
      uint64_t v44 = -v44;
    }
    unint64_t v46 = (unint64_t)(v44 + 128) >> 8;
    if (v45) {
      int v47 = -(int)v46;
    }
    else {
      int v47 = v46;
    }
    __int16 v48 = v47 + 32;
    unsigned int v49 = v43 >> 10;
    uint64_t v50 = ((v47 + 32) >> 10);
    uint64_t v51 = v22 * a5;
    uint64_t v52 = v38[783];
    int v53 = (v43 + (int)v52 * ((int)v51 - 1)) >> 10;
    uint64_t v54 = v23 * a6;
    unsigned int v55 = v38[785];
    int v56 = (int)(v47 + 32 + v55 * (v54 - 1)) >> 10;
    int v57 = (v29 + v21) >> v21;
    int v58 = (v28 + v20) >> v20;
    if (v42 >= 3040
      && (v47 >= 3040 ? (BOOL v59 = v53 + 5 <= v57) : (BOOL v59 = 0), v59 ? (v60 = v56 + 5 <= v58) : (v60 = 0), v60))
    {
      uint64_t v61 = *(void *)(a12 + 8 * (a9 != 0) + 40);
      uint64_t v62 = *(void *)(a12 + 8 * a9 + 16) + v27 * v50 + v49;
    }
    else
    {
      uint64_t v91 = a2;
      uint64_t v63 = v38 + 782;
      char v89 = v38 + 785;
      uint64_t v64 = a4;
      uint64_t v61 = 320;
      (*(void (**)(void, void, void, void, void, void, uint64_t, uint64_t, void, uint64_t))(*(void *)(v18 + 3280) + 664))((int)(v53 - v49 + 8), v56 - (int)v50 + 8, v57, v58, (int)(v49 - 3), (int)v50 - 3, a1 + 90176, 320, *(void *)(a12 + 8 * a9 + 16), v27);
      a4 = v64;
      uint64_t v62 = a1 + 91139;
      uint64_t v52 = v63[1];
      a2 = v91;
      unsigned int v55 = *v89;
    }
    uint64_t v65 = *(void *)(v18 + 3280);
    if (a2)
    {
      uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, unint64_t))(v65 + 8 * a14 + 336);
      return v66(a2, a4, v62, v61, v51, v54, v43 & 0x3FF, v48 & 0x3FF, __PAIR64__(v55, v52));
    }
    else
    {
      char v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t))(v65 + 8 * a14 + 496);
      return v68(a3, v62, v61, v51, v54, v43 & 0x3FF, v48 & 0x3FF, v52);
    }
  }
}

uint64_t sub_224AC4998(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, unsigned int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v50 = result;
  uint64_t v40 = *(void *)(result + 8);
  if (a6)
  {
    int v9 = *(_DWORD *)(*(void *)(result + 8) + 2168);
    int v34 = v9 == 1;
    int v48 = v9 != 3;
  }
  else
  {
    int v34 = 0;
    int v48 = 0;
  }
  int v10 = a5[1];
  if (a5[1])
  {
    unsigned int v11 = 0;
    uint64_t v43 = *(void *)(v40 + 3280);
    uint64_t v44 = (uint64_t *)(a7 + 8 * (a6 != 0) + 40);
    unint64_t v41 = (void *)(a7 + 8 * a6 + 16);
    uint64_t v42 = a8 + 28;
    int v46 = (*(_DWORD *)(a7 + 56) + v48) >> v48;
    int v12 = *a5;
    uint64_t v39 = result + 90176;
    int v45 = (*(_DWORD *)(a7 + 60) + v34) >> v34;
    uint64_t v38 = result + 90275;
    uint64_t v35 = 8 * a4;
    do
    {
      if (v12)
      {
        unint64_t v13 = 0;
        unsigned int v36 = v11;
        uint64_t v14 = 4 * *(int *)(v50 + 28) + (int)((v11 | 4) << v34);
        uint64_t v49 = *(int *)(a8 + 4) + v14 * *(int *)(a8 + 16);
        uint64_t v15 = *(int *)(a8 + 8) + *(int *)(a8 + 24) * v14;
        uint64_t v16 = a3;
        do
        {
          uint64_t v17 = 4 * *(int *)(v50 + 24) + (((int)v13 + 4) << v48);
          unint64_t v18 = (v49 + v17 * *(int *)(a8 + 12)) >> v48;
          unint64_t v19 = (v15 + *(int *)(a8 + 20) * v17) >> v34;
          int v20 = *(__int16 *)(a8 + 28);
          int v21 = *(__int16 *)(a8 + 30);
          unint64_t v22 = v19 >> 16;
          int v23 = *(__int16 *)(a8 + 32);
          int v24 = *(__int16 *)(a8 + 34);
          uint64_t v25 = *v44;
          if ((int)(v18 >> 16) >= 7 && (int)((v18 >> 16) + 8) <= v46 && (int)v22 >= 7 && (int)((v19 >> 16) + 8) <= v45)
          {
            uint64_t v29 = *v41 + ((v19 >> 16) - 4) * v25 + (v18 >> 16) - 4;
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(*(void *)(v40 + 3280) + 664))(15, 15, v46, v45, (uint64_t)((v18 >> 16 << 32) - 0x700000000) >> 32, (uint64_t)((v22 << 32) - 0x700000000) >> 32, v39, 32, *v41, v25);
            uint64_t v29 = v38;
            uint64_t v25 = 32;
          }
          uint64_t v30 = (-7 * v21 - 4 * v20 + (unsigned __int16)v18) & 0xFFFFFFC0;
          unint64_t v31 = ((v19 & 0xFFFC) - 4 * (v24 + v23)) & 0xFFFFFFC0;
          if (a3) {
            uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v43 + 656))(v16, a4, v29, v25, v42, v30, v31);
          }
          else {
            uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v43 + 648))(a2 + v13, a4, v29, v25, v42, v30, v31);
          }
          v13 += 8;
          int v12 = *a5;
          v16 += 16;
        }
        while (v13 < (4u >> v48) * v12);
        int v10 = a5[1];
        unsigned int v11 = v36;
      }
      uint64_t v32 = a2 + v35;
      if (a2) {
        uint64_t v33 = 0;
      }
      else {
        uint64_t v33 = v35;
      }
      a3 += 2 * v33;
      if (!a2) {
        uint64_t v32 = 0;
      }
      a2 = v32;
      v11 += 8;
    }
    while (v11 < (4u >> v34) * v10);
  }
  return result;
}

uint64_t sub_224AC4CD4(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 *a4, unsigned int a5, int a6, int a7, uint64_t a8, int a9)
{
  int v9 = a4;
  uint64_t v10 = result;
  int v11 = a9;
  int v12 = *(_DWORD *)(result + 24);
  int v13 = *(_DWORD *)(result + 28);
  uint64_t v14 = *(void *)(result + 8);
  uint64_t v64 = result + 8 * (v13 & 0x1E) + 712;
  uint64_t v60 = result + 8256;
  if (a5)
  {
    int v15 = *(_DWORD *)(v14 + 2168);
    unsigned int v16 = 4u >> (v15 != 3);
    unsigned int v17 = 4u >> (v15 == 1);
    unint64_t v19 = (uint64_t *)(result + 16);
    uint64_t v18 = *(void *)(result + 16);
    if (v13 <= *(_DWORD *)(v18 + 13872) || v16 * *a4 + v17 * a4[1] < 0x10)
    {
      int v58 = v17;
      int v59 = v16;
      goto LABEL_29;
    }
  }
  else
  {
    unint64_t v19 = (uint64_t *)(result + 16);
    uint64_t v18 = *(void *)(result + 16);
    unsigned int v16 = 4;
    if (v13 <= *(_DWORD *)(v18 + 13872))
    {
      int v58 = 4;
      int v59 = 4;
      goto LABEL_29;
    }
    unsigned int v17 = 4;
  }
  int v58 = v17;
  int v59 = v16;
  if ((int)a8 >= 1)
  {
    int v53 = v19;
    int v54 = a7;
    int v20 = 0;
    int v21 = 0;
    int v55 = a6 + 1;
    while (1)
    {
      int v22 = v9[2] >= 4u ? 4 : v9[2];
      int v12 = *(_DWORD *)(v10 + 24);
      if (v21 >= v22) {
        break;
      }
      uint64_t v23 = *(void *)(v64 - 8);
      int v24 = v12 + v20;
      uint64_t v25 = v12 + v20 + 1;
      uint64_t v26 = v23 + 12 * v25;
      int v27 = byte_224B28CC0[4 * *(unsigned __int8 *)(v26 + 10)];
      if (v27 >= 0x10) {
        int v27 = 16;
      }
      if (v27 <= 2) {
        int v28 = 2;
      }
      else {
        int v28 = v27;
      }
      int v29 = *(char *)(v26 + 8);
      if (v29 >= 1)
      {
        uint64_t v30 = 12 * v25;
        if (v28 >= *v9) {
          int v31 = *v9;
        }
        else {
          int v31 = v28;
        }
        unsigned int v32 = v9[1];
        if (v32 >= 0x10) {
          unsigned int v32 = 16;
        }
        unsigned int v33 = v32 >> 1;
        uint64_t v34 = (v31 * v59);
        int v57 = v21;
        uint64_t v35 = v9;
        uint64_t v36 = a8;
        uint64_t v37 = *(void *)(v10 + 656) + v55 + v20;
        sub_224AC4478(v10, v60, 0, v34, v31, (3 * (v32 >> 1) + 3) >> 2, v24, *(_DWORD *)(v10 + 28), a5, v52, *(_DWORD *)(v23 + v30), v14 + 296 * (v29 - 1) + 32, v29 - 1, byte_224B19468[4 * *(unsigned __int8 *)(v37 + 384) + *(unsigned __int8 *)(v37 + 352)]);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(v14 + 3280) + 640))(a2 + (v20 * v59), a3, v60, v34, v33 * v58);
        a8 = v36;
        int v9 = v35;
        int v21 = v57 + 1;
      }
      v20 += v28;
      if (v20 >= (int)a8)
      {
        int v12 = *(_DWORD *)(v10 + 24);
        break;
      }
    }
    uint64_t v18 = *v53;
    a7 = v54;
    int v11 = a9;
  }
LABEL_29:
  if (v12 > *(_DWORD *)(v18 + 13864) && v11 >= 1)
  {
    int v39 = 0;
    signed int v40 = 0;
    int v56 = a7 + 1;
    do
    {
      unsigned int v41 = v9[3];
      if (v41 >= 4) {
        unsigned int v41 = 4;
      }
      if (v40 >= (int)v41) {
        break;
      }
      uint64_t v42 = *(void *)(v64 + 8 * (v39 + 1));
      int v43 = *(_DWORD *)(v10 + 24);
      uint64_t v44 = v42 + 12 * (v43 - 1);
      int v45 = byte_224B28CC0[4 * *(unsigned __int8 *)(v44 + 10) + 1];
      if (v45 >= 0x10) {
        int v45 = 16;
      }
      if (v45 <= 2) {
        int v46 = 2;
      }
      else {
        int v46 = v45;
      }
      int v47 = *(char *)(v44 + 8);
      if (v47 >= 1)
      {
        unsigned int v48 = *v9;
        if (v48 >= 0x10) {
          unsigned int v48 = 16;
        }
        int v49 = v48 >> 1;
        if (v46 >= v9[1]) {
          int v50 = v9[1];
        }
        else {
          int v50 = v46;
        }
        uint64_t v51 = (v49 * v59);
        sub_224AC4478(v10, v60, 0, v51, v49, v50, v43, *(_DWORD *)(v10 + 28) + v39, a5, v52, *(_DWORD *)(v42 + 12 * (v43 - 1)), v14 + 296 * (v47 - 1) + 32, v47 - 1, byte_224B19468[4 * *(unsigned __int8 *)(v10 + v56 + v39 + 416) + *(unsigned __int8 *)(v10 + 384 + v56 + v39)]);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(v14 + 3280) + 632))(a2 + (v39 * v58) * a3, a3, v60, v51, (v50 * v58));
        ++v40;
      }
      v39 += v46;
    }
    while (v39 < v11);
  }
  return result;
}

uint64_t sub_224AC50E8(uint64_t result, uint64_t a2)
{
  uint64_t v140 = *MEMORY[0x263EF8340];
  if ((*(unsigned char *)(*(void *)(result + 3256) + 63080) & 1) == 0) {
    return result;
  }
  uint64_t v2 = *(void *)(result + 24);
  if (!*(unsigned char *)(v2 + 830) && !*(unsigned char *)(v2 + 831)) {
    return result;
  }
  int v126 = 4 * a2 * *(_DWORD *)(result + 3472);
  int v3 = *(_DWORD *)(result + 2168);
  int v4 = *(unsigned char *)(*(void *)(result + 8) + 392) == 0;
  signed int v5 = 0x20u >> v4;
  if (*(unsigned char *)(*(void *)(result + 8) + 392)) {
    char v6 = 5;
  }
  else {
    char v6 = 4;
  }
  int v117 = v3 != 3;
  int v109 = v5 * a2;
  if (*(_DWORD *)(result + 3444) - v5 * (int)a2 >= v5) {
    unsigned int v7 = 0x20u >> v4;
  }
  else {
    unsigned int v7 = *(_DWORD *)(result + 3444) - v5 * a2;
  }
  uint64_t v102 = *(void *)(result + 5304);
  signed int v103 = 0x20u >> v4;
  uint64_t v101 = *(void *)(result + 2144);
  uint64_t v106 = *(void *)(result + 2152);
  uint64_t v108 = *(void *)(result + 5312);
  uint64_t v104 = *(void *)(result + 5320);
  uint64_t v8 = *(unsigned int *)(result + 3456);
  uint64_t v110 = ((int)a2 >> v4) * (int)v8;
  uint64_t v112 = *(void *)(result + 4440);
  int v123 = *(unsigned __int8 *)(*(void *)(result + 5288) + (int)a2);
  uint64_t v9 = v112 + 1348 * v110;
  int v121 = a2;
  unsigned int v120 = 16 * (v4 & a2);
  signed int v119 = 0x10u >> (v3 == 1);
  unsigned int v134 = v7;
  int v132 = v4 & a2;
  uint64_t v129 = v7 + v120;
  if (v3 == 1) {
    unsigned int v10 = v7 + v120 + 1;
  }
  else {
    unsigned int v10 = v7 + v120;
  }
  char v114 = v3 == 1;
  uint64_t v116 = result;
  uint64_t v118 = v10 >> (v3 == 1);
  int v11 = *(_DWORD *)(result + 3448);
  unsigned int v12 = *(unsigned __int16 *)(v2 + 452);
  if ((int)(v12 << v6) < v11)
  {
    uint64_t result = a2;
    uint64_t v13 = *(void *)(v116 + 5168) + (int)(a2 << (v6 - v114));
    uint64_t v14 = *(void *)(v116 + 5160) + (int)(a2 << v6);
    unint64_t v15 = (*(int *)(v116 + 3452) + 31) & 0xFFFFFFFFFFFFFFE0;
    uint64_t v16 = 1;
    uint64_t v17 = v120 >> v114;
    if (v3 == 1) {
      char v18 = 3;
    }
    else {
      char v18 = 4;
    }
    do
    {
      unsigned int v19 = 16 * (v12 & v4);
      unsigned int v20 = v12 >> v4;
      if (v120 < v129)
      {
        uint64_t v21 = 0;
        unsigned int v22 = 1 << v120;
        do
        {
          unsigned int v23 = v22 >> (16 * ((v22 & 0xFFFF0000) != 0));
          int v24 = (_WORD *)(v9 + 1348 * v20 + 12 * v19 + 2 * ((v22 & 0xFFFF0000) != 0));
          int v25 = (unsigned __int16)v24[4];
          BOOL v26 = (v23 & v25) != 0;
          int v27 = (unsigned __int16)v24[2];
          v24[4] = v25 & ~(_WORD)v23;
          v24[2] = v27 & ~(_WORD)v23;
          *v24 &= ~(_WORD)v23;
          int v28 = *(unsigned __int8 *)(v14 + v21);
          int v29 = ((v23 & v27) != 0) | (2 * v26);
          if (v29 < v28) {
            int v28 = v29;
          }
          uint64_t result = 4 * v28;
          *(_WORD *)((char *)v24 + result) |= v23;
          v22 *= 2;
          ++v21;
        }
        while (v129 - v120 != v21);
      }
      if (v3 && v17 < v118)
      {
        uint64_t v30 = 0;
        unsigned int v31 = 1 << v17;
        do
        {
          unsigned int v32 = v31 >> ((v31 >> v119 != 0) << v18);
          unsigned int v33 = (_WORD *)(v9 + 1348 * v20 + 8 * (v19 >> v117) + 768 + 2 * (v31 >> v119 != 0));
          int v34 = (unsigned __int16)v33[2];
          BOOL v35 = (v32 & v34) == 0;
          v33[2] = v34 & ~(_WORD)v32;
          *v33 &= ~(_WORD)v32;
          int v36 = *(unsigned __int8 *)(v13 + v30);
          int v37 = !v35;
          if (v37 < v36) {
            int v36 = v37;
          }
          uint64_t result = 4 * v36;
          *(_WORD *)((char *)v33 + result) |= v32;
          v31 *= 2;
          ++v30;
        }
        while (v118 - v17 != v30);
      }
      v14 += v15;
      v13 += (int)v15 >> v114;
      ++v16;
      unsigned int v12 = *(unsigned __int16 *)(v2 + 2 * v16 + 450);
    }
    while ((int)(v12 << v6) < v11);
  }
  uint64_t v38 = v126;
  if (!v123) {
    goto LABEL_56;
  }
  if ((int)v8 > 0)
  {
    uint64_t v39 = 0;
    unsigned int v40 = 0x10u >> v117;
    uint64_t v41 = *(void *)(v116 + 4032) + 624 * (int)v8 * (v123 - 1);
    uint64_t result = v9 + 12 * v120 + 384;
    int v42 = *(_DWORD *)(v116 + 3440);
    if (v3 == 3) {
      char v43 = 4;
    }
    else {
      char v43 = 3;
    }
    int v44 = *(_DWORD *)(v116 + 3440);
    do
    {
      unsigned int v45 = v44;
      BOOL v46 = __OFSUB__(v44, 32);
      v44 -= 32;
      if (v44 < 0 != v46) {
        uint64_t v47 = v45;
      }
      else {
        uint64_t v47 = 32;
      }
      if (v42 - 32 * (int)v39 >= 32) {
        int v48 = 32;
      }
      else {
        int v48 = v42 - 32 * v39;
      }
      if (v48)
      {
        uint64_t v49 = 0;
        unsigned int v50 = 1;
        do
        {
          unsigned int v51 = v50 >> (16 * ((v50 & 0xFFFF0000) != 0));
          int v52 = (_WORD *)(result + 1348 * v39 + 2 * ((v50 & 0xFFFF0000) != 0));
          int v53 = (unsigned __int16)v52[4];
          int v54 = (unsigned __int16)v52[2];
          int v55 = ((v51 & v54) != 0) | (2 * ((v51 & v53) != 0));
          v52[4] = v53 & ~(_WORD)v51;
          v52[2] = v54 & ~(_WORD)v51;
          *v52 &= ~(_WORD)v51;
          int v56 = *(unsigned __int8 *)(v41 + v49 + 480);
          if (v55 < v56) {
            int v56 = v55;
          }
          v52[2 * v56] |= v51;
          v50 *= 2;
          ++v49;
        }
        while (v47 != v49);
      }
      if (v3)
      {
        uint64_t v57 = (v48 + v117) >> v117;
        if (v57)
        {
          uint64_t v58 = 0;
          unsigned int v59 = 1;
          do
          {
            unsigned int v60 = v59 >> ((v59 >> v40 != 0) << v43);
            uint64_t v61 = (_WORD *)(v9 + 1348 * v39 + 8 * (v120 >> v114) + 1024 + 2 * (v59 >> v40 != 0));
            int v62 = (unsigned __int16)v61[2];
            int v63 = (v60 & v62) != 0;
            v61[2] = v62 & ~(_WORD)v60;
            *v61 &= ~(_WORD)v60;
            int v64 = *(unsigned __int8 *)(v41 + v58 + 512);
            if (v63 < v64) {
              int v64 = v63;
            }
            v61[2 * v64] |= v60;
            v59 *= 2;
            ++v58;
          }
          while (v57 != v58);
        }
      }
      ++v39;
      v41 += 624;
    }
    while (v39 != v8);
LABEL_56:
    if ((int)v8 >= 1)
    {
      int v65 = 0;
      uint64_t v66 = 0;
      int v67 = 0;
      uint64_t v100 = v126;
      uint64_t v68 = v102 + v101 * v126;
      uint64_t v69 = v116;
      uint64_t v70 = *(void *)(v116 + 4432) + 4 * v103 * (uint64_t)v121 * *(void *)(v116 + 3432);
      int v71 = (unsigned __int16 *)(v112 + 1348 * (int)v110 + 6);
      while (1)
      {
        int v72 = *(_DWORD *)(v69 + 3440);
        if (v72 - 32 * (int)v66 < 1) {
          goto LABEL_71;
        }
        uint64_t v122 = v71;
        uint64_t v124 = v66;
        uint64_t v73 = 0;
        uint64_t v74 = 0;
        uint64_t v75 = *(void *)(v69 + 3432);
        uint64_t v76 = *(void *)(v69 + 2144);
        uint64_t v77 = *(void *)(v69 + 3280);
        int v127 = v65;
        if (v72 + v65 >= 32) {
          uint64_t v78 = 32;
        }
        else {
          uint64_t v78 = (v72 + v65);
        }
        do
        {
          if (!(v67 | v74)) {
            goto LABEL_69;
          }
          if (v132)
          {
            int v136 = *(v71 - 2);
            int v137 = *v71;
            int v79 = v71[2];
LABEL_67:
            int v138 = v79;
            goto LABEL_68;
          }
          int v80 = *(v71 - 3);
          int v136 = v80;
          int v81 = *(v71 - 1);
          int v137 = v81;
          int v82 = v71[1];
          int v138 = v82;
          if ((int)v129 >= 17)
          {
            int v136 = v80 | (*(v71 - 2) << 16);
            int v137 = v81 | (*v71 << 16);
            int v79 = v82 | (v71[2] << 16);
            goto LABEL_67;
          }
LABEL_68:
          int v139 = 0;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *, uint64_t, uint64_t, uint64_t, void))(v77 + 3264))(v68 + (v73 & 0xFFFFFFFC), v76, &v136, v70 + v73, v75, v116 + 4496, v134);
LABEL_69:
          ++v74;
          v73 += 4;
          v71 += 6;
        }
        while (v78 != v74);
        uint64_t v69 = v116;
        LODWORD(v8) = *(_DWORD *)(v116 + 3456);
        int v65 = v127;
        int v71 = v122;
        uint64_t v66 = v124;
LABEL_71:
        ++v66;
        v68 += 128;
        v70 += 128;
        v65 -= 32;
        v71 += 674;
        int v67 = 1;
        if (v66 >= (int)v8)
        {
          uint64_t v2 = *(void *)(v69 + 24);
          uint64_t v38 = v100;
          goto LABEL_74;
        }
      }
    }
  }
  uint64_t v69 = v116;
LABEL_74:
  if (*(unsigned char *)(v2 + 832))
  {
    if ((int)v8 < 1) {
      return result;
    }
    goto LABEL_81;
  }
  if (*(unsigned char *)(v2 + 833)) {
    BOOL v83 = (int)v8 <= 0;
  }
  else {
    BOOL v83 = 1;
  }
  if (!v83)
  {
LABEL_81:
    uint64_t v84 = 0;
    uint64_t v85 = 0;
    int v135 = 0;
    uint64_t v86 = (v106 * v38) >> v114;
    uint64_t v107 = v108 + v86;
    uint64_t v105 = v104 + v86;
    uint64_t v131 = *(void *)(v69 + 4432) + 4 * *(void *)(v69 + 3432) * (v109 >> v114);
    unsigned int v125 = v120 >> v114;
    unsigned int v87 = (unsigned __int16 *)(v112 + 1348 * (int)v110 + 774);
    uint64_t v88 = v69 + 4496;
    uint64_t v89 = v118 - (v120 >> v114);
    while (1)
    {
      int v90 = *(_DWORD *)(v69 + 3440) - 32 * v84;
      if (v90 >= 32) {
        int v90 = 32;
      }
      int v91 = (v90 + v117) >> v117;
      if (v91 >= 1) {
        break;
      }
LABEL_95:
      ++v84;
      v85 += 0x80u >> v117;
      v131 += 4 * (0x20u >> v117);
      v87 += 674;
      int v135 = 1;
      if (v84 >= (int)v8) {
        return result;
      }
    }
    uint64_t v113 = v85;
    uint64_t v115 = v84;
    uint64_t v92 = 0;
    int v93 = 0;
    uint64_t v94 = *(void *)(v69 + 3432);
    uint64_t v130 = v107 + v85;
    uint64_t v128 = v105 + v85;
    uint64_t v95 = *(void *)(v69 + 2152);
    uint64_t v133 = 4 * v91;
    uint64_t v96 = *(void *)(v69 + 3280);
    char v111 = v87;
    while (!(v135 | v93))
    {
LABEL_93:
      ++v93;
      v92 += 4;
      v87 += 4;
      if (v133 == v92)
      {
        uint64_t v84 = v115;
        uint64_t v69 = v116;
        LODWORD(v8) = *(_DWORD *)(v116 + 3456);
        unsigned int v87 = v111;
        uint64_t v85 = v113;
        goto LABEL_95;
      }
    }
    if (v125)
    {
      int v136 = *(v87 - 2);
      int v97 = *v87;
    }
    else
    {
      int v98 = *(v87 - 3);
      int v136 = v98;
      int v99 = *(v87 - 1);
      int v137 = v99;
      if (v119 >= (int)v118)
      {
LABEL_92:
        int v138 = 0;
        (*(void (**)(uint64_t, uint64_t, int *, uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 3280))(v130 + (v92 & 0xFFFFFFFC), v95, &v136, v131 + v92 + 2, v94, v88, v89);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *, uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 3280))(v128 + (v92 & 0xFFFFFFFC), v95, &v136, v131 + v92 + 3, v94, v88, v89);
        goto LABEL_93;
      }
      int v136 = (*(v87 - 2) << v119) | v98;
      int v97 = (*v87 << v119) | v99;
    }
    int v137 = v97;
    goto LABEL_92;
  }
  return result;
}

void *sub_224AC59D4(void *result, int a2)
{
  uint64_t v2 = (uint64_t)result;
  uint64_t v142 = *MEMORY[0x263EF8340];
  int v102 = 4 * a2;
  int v3 = 4 * a2 * *((_DWORD *)result + 868);
  int v4 = *((_DWORD *)result + 542);
  uint64_t v105 = result[663] + result[268] * v3;
  uint64_t v5 = (result[269] * v3) >> (v4 == 1);
  uint64_t v103 = result[664] + v5;
  uint64_t v104 = result[665] + v5;
  uint64_t v6 = result[1];
  int v7 = *(unsigned char *)(v6 + 392) == 0;
  *(void *)uint64_t v118 = result;
  if ((*(unsigned char *)(result[407] + 63080) & 1) == 0) {
    goto LABEL_38;
  }
  uint64_t v101 = result[555];
  int v8 = *((_DWORD *)result + 864);
  uint64_t v9 = (unsigned char *)result[3];
  if (!v9[830] && !v9[831]) {
    goto LABEL_38;
  }
  int v10 = (a2 >> v7) * v8;
  BOOL v135 = a2 > 0;
  uint64_t v11 = 0x20u >> v7;
  int v111 = v4 != 3;
  int v109 = v11 * a2;
  signed int v12 = *((_DWORD *)result + 861) - v11 * a2;
  int v116 = v12;
  if (v12 >= (int)v11) {
    signed int v12 = 0x20u >> v7;
  }
  BOOL v42 = v4 == 1;
  char v13 = v4 == 1;
  unsigned int v14 = v7 & a2;
  unsigned int v114 = 16 * (v7 & a2);
  signed int v112 = v12;
  unsigned int v15 = v12 + v114;
  if (v42) {
    ++v15;
  }
  if (v8 >= 1)
  {
    unsigned int v100 = v15;
    char v107 = v13;
    uint64_t v16 = 0;
    int v108 = v10;
    uint64_t v128 = result + 562;
    uint64_t v17 = 1348 * v10 + 192 * v14 + v101 + 394;
    uint64_t v18 = result[554] + 4 * result[429] * a2 * v11 + 1;
    uint64_t v19 = v105;
    do
    {
      int v20 = *(_DWORD *)(v2 + 3440) - 32 * v16;
      if (v20 >= 32) {
        int v20 = 32;
      }
      unsigned int v131 = v20;
      if (v116 >= 1)
      {
        uint64_t v125 = v16;
        uint64_t v21 = *(void *)(v2 + 3432);
        uint64_t v22 = *(void *)(v2 + 2144);
        uint64_t v120 = v18;
        uint64_t v122 = v17;
        uint64_t v23 = *(void *)(v2 + 3280);
        unsigned int v24 = v114;
        signed int v25 = v112;
        uint64_t v119 = v19;
        uint64_t v26 = v19;
        do
        {
          if (v24 | v135)
          {
            int v138 = *(_DWORD *)(v17 - 10);
            int v139 = *(_DWORD *)(v17 - 6);
            int v140 = *(_DWORD *)(v17 - 2);
            int v141 = 0;
            uint64_t result = (void *)(*(uint64_t (**)(uint64_t, uint64_t, int *, uint64_t, uint64_t, void *, void))(v23 + 3272))(v26, v22, &v138, v18, v21, v128, v131);
          }
          v26 += 4 * v22;
          v17 += 12;
          ++v24;
          v18 += 4 * v21;
          --v25;
        }
        while (v25);
        uint64_t v2 = *(void *)v118;
        uint64_t v19 = v119;
        int v8 = *(_DWORD *)(*(void *)v118 + 3456);
        uint64_t v16 = v125;
        uint64_t v18 = v120;
        uint64_t v17 = v122;
      }
      ++v16;
      v19 += 128;
      v17 += 1348;
      v18 += 128;
    }
    while (v16 < v8);
    uint64_t v9 = *(unsigned char **)(v2 + 24);
    int v10 = v108;
    char v13 = v107;
    unsigned int v15 = v100;
  }
  if (!v9[832])
  {
    if (v9[833]) {
      BOOL v27 = v8 <= 0;
    }
    else {
      BOOL v27 = 1;
    }
    if (v27) {
      goto LABEL_37;
    }
LABEL_27:
    uint64_t v28 = 0;
    signed int v132 = v15 >> v13;
    signed int v29 = v114 >> v13;
    unsigned int v121 = 0x10u >> v111;
    uint64_t v30 = 0x80u >> v111;
    uint64_t v31 = *(void *)(v2 + 4432) + 4 * *(void *)(v2 + 3432) * (v109 >> v13) + 2;
    uint64_t v32 = 4 * (0x20u >> v111);
    unsigned int v33 = (unsigned __int16 *)(1348 * v10 + 8 * (v114 >> v13) + v101 + 1030);
    uint64_t v126 = v103;
    uint64_t v123 = v104;
    unsigned int v110 = v114 >> v13;
    uint64_t v34 = v2 + 4496;
    do
    {
      int v35 = *(_DWORD *)(v2 + 3440) - 32 * v28;
      if (v35 >= 32) {
        int v35 = 32;
      }
      if (v29 < v132)
      {
        uint64_t v117 = v28;
        uint64_t v36 = 0;
        uint64_t v37 = *(void *)(v2 + 3432);
        uint64_t v38 = *(void *)(v2 + 2152);
        uint64_t v39 = ((v35 + v111) >> v111);
        uint64_t v40 = *(void *)(v2 + 3280);
        uint64_t v113 = v33;
        uint64_t v115 = v31;
        do
        {
          if (v29 | v135)
          {
            int v138 = (*(v33 - 2) << v121) | *(v33 - 3);
            int v139 = (*v33 << v121) | *(v33 - 1);
            int v140 = 0;
            (*(void (**)(uint64_t, uint64_t, int *, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 3288))(v126 + v36, v38, &v138, v31, v37, v34, v39);
            uint64_t result = (void *)(*(uint64_t (**)(uint64_t, uint64_t, int *, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 3288))(v123 + v36, v38, &v138, v31 + 1, v37, v34, v39);
          }
          v36 += 4 * v38;
          ++v29;
          v31 += 4 * v37;
          v33 += 4;
        }
        while (v132 != v29);
        uint64_t v28 = v117;
        uint64_t v2 = *(void *)v118;
        int v8 = *(_DWORD *)(*(void *)v118 + 3456);
        signed int v29 = v110;
        uint64_t v32 = 4 * (0x20u >> v111);
        uint64_t v30 = 0x80u >> v111;
        unsigned int v33 = v113;
        uint64_t v31 = v115;
      }
      ++v28;
      v31 += v32;
      v33 += 674;
      v123 += v30;
      v126 += v30;
    }
    while (v28 < v8);
    goto LABEL_37;
  }
  if (v8 >= 1) {
    goto LABEL_27;
  }
LABEL_37:
  uint64_t v6 = *(void *)(v2 + 8);
LABEL_38:
  int v41 = *(_DWORD *)(v2 + 5352);
  if (*(unsigned char *)(v6 + 414)) {
    BOOL v42 = 0;
  }
  else {
    BOOL v42 = v41 == 0;
  }
  int v43 = a2;
  if (!v42)
  {
    unsigned int v44 = *(_DWORD *)(*(void *)(v2 + 3256) + 24);
    uint64_t v45 = *(void *)(v2 + 24);
    int v46 = *(_DWORD *)(v45 + 236);
    int v47 = *(_DWORD *)(v45 + 240);
    uint64_t v48 = 8 * (a2 != 0);
    if (v44 <= 1) {
      int v49 = 0;
    }
    else {
      int v49 = a2;
    }
    char v50 = *(unsigned char *)(v6 + 392);
    int v51 = (4 << v50) * v49;
    uint64_t v52 = *(void *)(v2 + 5264);
    uint64_t v53 = v51;
    uint64_t v54 = *(void *)(v2 + 2416);
    uint64_t v55 = *(void *)(v2 + 5272);
    uint64_t v56 = *(void *)(v2 + 2424);
    uint64_t v57 = *(void *)(v2 + 5280);
    if (*(unsigned char *)(v6 + 414) || (v41 & 1) != 0)
    {
      uint64_t v133 = *(void *)(v2 + 2424);
      uint64_t v136 = *(void *)(v2 + 5280);
      uint64_t v58 = v2;
      int v59 = *(_DWORD *)(v2 + 2164);
      unsigned int v60 = 4 * *(_DWORD *)(v58 + 3448);
      char v61 = v50 + 6;
      if ((a2 + 1) << (v50 + 6) >= v59 - 1) {
        int v62 = v59 - 1;
      }
      else {
        int v62 = (a2 + 1) << (v50 + 6);
      }
      int v63 = (a2 << v61) - v48;
      if ((v41 & 1) != 0 || v46 == v47)
      {
        int v129 = v47;
        uint64_t v64 = v55;
        unsigned int v65 = v44;
        uint64_t result = sub_224AEBC24(*(void **)v118, (char *)(v52 + v54 * v53), v54, v105 - *(void *)(*(void *)v118 + 2144) * v48, *(void *)(*(void *)v118 + 2144), 0, v50, (a2 << v61) - (int)v48, v62, v60, v59, 0, 1);
        unsigned int v44 = v65;
        uint64_t v55 = v64;
        int v43 = a2;
        uint64_t v6 = *(void *)(*(void *)v118 + 8);
        int v47 = v129;
      }
      if (v44 < 2 || v46 == v47)
      {
        uint64_t v2 = *(void *)v118;
      }
      else
      {
        int v95 = v59;
        uint64_t v2 = *(void *)v118;
        int v66 = v63;
        unsigned int v67 = v44;
        uint64_t result = sub_224AEBC24(*(void **)v118, (char *)(*(void *)(*(void *)v118 + 5240) + *(void *)(*(void *)v118 + 2144) * v102), *(void *)(*(void *)v118 + 2144), v105 - *(void *)(*(void *)v118 + 2144) * v48, *(void *)(*(void *)v118 + 2144), 0, *(unsigned char *)(v6 + 392), v66, v62, v60, v95, 0, 0);
        unsigned int v44 = v67;
        int v43 = a2;
        uint64_t v6 = *(void *)(*(void *)v118 + 8);
      }
      uint64_t v56 = v133;
      uint64_t v57 = v136;
    }
    if ((*(unsigned char *)(v6 + 414) || (v41 & 6) != 0) && *(_DWORD *)(v2 + 2168))
    {
      uint64_t v68 = v55;
      uint64_t v69 = v56 * v53;
      int v70 = *(_DWORD *)(v2 + 2440);
      unsigned int v71 = v70 != 3;
      if (v70 == 3) {
        char v72 = 2;
      }
      else {
        char v72 = 1;
      }
      BOOL v73 = v70 == 1;
      char v74 = v70 == 1;
      int v75 = *(_DWORD *)(v2 + 2164);
      if (v73) {
        ++v75;
      }
      int v76 = v75 >> v74;
      unsigned int v137 = *(_DWORD *)(v2 + 3448) << v72;
      if (v73) {
        char v77 = 5;
      }
      else {
        char v77 = 6;
      }
      char v78 = *(unsigned char *)(v6 + 392);
      char v79 = v77 + v78;
      int v80 = (v43 + 1) << v79;
      if (v80 >= v76 - 1) {
        int v80 = v76 - 1;
      }
      int v130 = v80;
      uint64_t v81 = v48 >> v74;
      int v134 = (v43 << v79) - v81;
      uint64_t v82 = *(void *)(v2 + 2152);
      uint64_t v127 = v82 * v102;
      if (*(unsigned char *)(v6 + 414) || (v41 & 2) != 0)
      {
        uint64_t v124 = v81;
        if ((v41 & 2) != 0 || v46 == v47)
        {
          uint64_t v83 = v103 - v82 * v81;
          unsigned int v98 = v71;
          int v96 = v76;
          unsigned int v84 = v71;
          unsigned int v85 = v44;
          int v86 = v76;
          uint64_t v87 = v69;
          uint64_t result = sub_224AEBC24((void *)v2, (char *)(v68 + v69), *(void *)(v2 + 2424), v83, v82, v74, v78, v134, v80, v137, v96, v98, 1);
          uint64_t v69 = v87;
          int v76 = v86;
          uint64_t v81 = v124;
          unsigned int v44 = v85;
          unsigned int v71 = v84;
          uint64_t v6 = *(void *)(v2 + 8);
        }
        if (v44 >= 2 && v46 != v47)
        {
          uint64_t v88 = *(void *)(v2 + 2152);
          uint64_t v89 = v103 - v88 * v81;
          unsigned int v99 = v71;
          int v97 = v76;
          unsigned int v90 = v71;
          unsigned int v91 = v44;
          int v92 = v76;
          uint64_t v93 = v69;
          uint64_t result = sub_224AEBC24((void *)v2, (char *)(*(void *)(v2 + 5248) + v127), v88, v89, v88, v74, *(unsigned char *)(v6 + 392), v134, v130, v137, v97, v99, 0);
          uint64_t v69 = v93;
          int v76 = v92;
          uint64_t v81 = v124;
          unsigned int v44 = v91;
          unsigned int v71 = v90;
          uint64_t v6 = *(void *)(v2 + 8);
        }
      }
      if (*(unsigned char *)(v6 + 414) || (v41 & 4) != 0)
      {
        if ((v41 & 4) != 0 || v46 == v47)
        {
          unsigned int v94 = v44;
          uint64_t result = sub_224AEBC24((void *)v2, (char *)(v57 + v69), *(void *)(v2 + 2424), v104 - *(void *)(v2 + 2152) * v81, *(void *)(v2 + 2152), v74, *(unsigned char *)(v6 + 392), v134, v130, v137, v76, v71, 1);
          unsigned int v44 = v94;
        }
        if (v44 >= 2 && v46 != v47) {
          return sub_224AEBC24((void *)v2, (char *)(*(void *)(v2 + 5256) + v127), *(void *)(v2 + 2152), v104 - *(void *)(v2 + 2152) * v81, *(void *)(v2 + 2152), v74, *(unsigned char *)(*(void *)(v2 + 8) + 392), v134, v130, v137, v76, v71, 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_224AC6268(uint64_t result, int a2)
{
  v24[3] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(result + 8);
  if ((*(unsigned char *)(*(void *)(v2 + 3256) + 63080) & 2) != 0)
  {
    uint64_t v4 = result;
    int v5 = *(_DWORD *)(v2 + 3472);
    int v6 = v5 * a2;
    char v7 = *(_DWORD *)(v2 + 2168) == 1;
    uint64_t v8 = 4 * v5 * a2;
    uint64_t v9 = *(void *)(v2 + 2144);
    uint64_t v10 = *(void *)(v2 + 5304) + v9 * v8;
    uint64_t v11 = *(void *)(v2 + 2152);
    uint64_t v12 = (v11 * v8) >> v7;
    uint64_t v13 = *(void *)(v2 + 5312) + v12;
    v24[0] = v10;
    v24[1] = v13;
    uint64_t v14 = *(void *)(v2 + 5320) + v12;
    v24[2] = v14;
    uint64_t v15 = *(void *)(v2 + 4440);
    char v16 = *(unsigned char *)(*(void *)(v2 + 8) + 392) == 0;
    int v17 = *(_DWORD *)(v2 + 3456);
    uint64_t v18 = v15 + 1348 * (a2 >> v16) * v17;
    if (a2)
    {
      uint64_t v19 = (8 * v11) >> v7;
      v23[0] = v10 - 8 * v9;
      v23[1] = v13 - v19;
      v23[2] = v14 - v19;
      sub_224AD3564(result, v23, v15 + 1348 * ((a2 - 1) >> v16) * v17, v6 - 2, v6, 1, a2);
    }
    if (a2 + 1 >= *(_DWORD *)(v2 + 3464)) {
      int v20 = 0;
    }
    else {
      int v20 = -2;
    }
    int v21 = v6 + v5 + v20;
    if (v21 >= *(_DWORD *)(v2 + 3452)) {
      int v22 = *(_DWORD *)(v2 + 3452);
    }
    else {
      int v22 = v21;
    }
    return sub_224AD3564(v4, v24, v18, v6, v22, 0, a2);
  }
  return result;
}

uint64_t sub_224AC63E8(uint64_t a1, int a2)
{
  unint64_t v3 = 0;
  v15[6] = *MEMORY[0x263EF8340];
  int v4 = *(_DWORD *)(a1 + 2168);
  uint64_t v5 = 4 * a2 * *(_DWORD *)(a1 + 3472);
  uint64_t v6 = (*(void *)(a1 + 2152) * v5) >> (v4 == 1);
  uint64_t v7 = *(void *)(a1 + 5312) + v6;
  v15[3] = *(void *)(a1 + 5304) + *(void *)(a1 + 2144) * v5;
  v15[4] = v7;
  v15[5] = *(void *)(a1 + 5320) + v6;
  uint64_t v8 = *(void *)(a1 + 5328) + *(void *)(a1 + 2416) * v5;
  uint64_t v9 = (*(void *)(a1 + 2424) * v5) >> (v4 == 1);
  uint64_t v10 = *(void *)(a1 + 5336) + v9;
  v15[0] = v8;
  v15[1] = v10;
  v15[2] = *(void *)(a1 + 5344) + v9;
  unsigned int v11 = 8 * (a2 != 0);
  do
  {
    if (v3) {
      char v12 = *(_DWORD *)(a1 + 2168) == 1;
    }
    else {
      char v12 = 0;
    }
    uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 3280) + 672))(v15[v3] - *(void *)(a1 + 8 * (v3 != 0) + 2416)
                                                                                          * (v11 >> v12));
    if (!v4) {
      break;
    }
  }
  while (v3++ < 2);
  return result;
}

uint64_t sub_224AC65D0(uint64_t result, int a2)
{
  if ((*(unsigned char *)(*(void *)(result + 3256) + 63080) & 4) != 0)
  {
    uint64_t v3 = result;
    char v4 = *(_DWORD *)(result + 2168) == 1;
    uint64_t v5 = 4 * a2 * *(_DWORD *)(result + 3472);
    uint64_t v6 = *(void *)(result + 5336);
    uint64_t v7 = *(void *)(result + 2424);
    uint64_t v32 = *(void *)(result + 5344);
    uint64_t v8 = 8 * (a2 != 0);
    int v9 = *(_DWORD *)(result + 5352);
    int v10 = a2 + 1;
    int v11 = *(_DWORD *)(result + 3464);
    if (v9)
    {
      int v12 = *(_DWORD *)(result + 2436);
      if (v10 >= v11) {
        int v13 = 0;
      }
      else {
        int v13 = -8;
      }
      int v14 = (v10 << (*(unsigned char *)(*(void *)(result + 8) + 392) + 6)) + v13;
      if (v14 >= v12) {
        uint64_t v15 = v12;
      }
      else {
        uint64_t v15 = v14;
      }
      uint64_t result = sub_224AB9BE0(result, *(void *)(result + 5328) + *(void *)(result + 2416) * v5 - *(void *)(result + 2416) * v8, (a2 << (*(unsigned char *)(*(void *)(result + 8) + 392) + 6)) - (int)v8, *(_DWORD *)(result + 2432), v12, v15, 0);
    }
    if ((v9 & 6) != 0)
    {
      uint64_t v16 = (v7 * v5) >> v4;
      int v17 = *(_DWORD *)(v3 + 2440);
      char v18 = v17 != 3;
      int v19 = *(_DWORD *)(v3 + 2432);
      if (v17 != 3) {
        ++v19;
      }
      char v20 = v17 == 1;
      int v21 = *(_DWORD *)(v3 + 2436);
      if (v20) {
        ++v21;
      }
      int v22 = v21 >> v20;
      int v23 = v19 >> v18;
      if (v20) {
        char v24 = 5;
      }
      else {
        char v24 = 6;
      }
      char v25 = v24 + *(unsigned char *)(*(void *)(v3 + 8) + 392);
      unsigned int v26 = 8u >> v20;
      if (v10 >= v11) {
        unsigned int v26 = 0;
      }
      int v27 = (v10 << v25) - v26;
      if (v27 >= v22) {
        uint64_t v28 = v22;
      }
      else {
        uint64_t v28 = v27;
      }
      uint64_t v29 = v8 >> v20;
      int v30 = (a2 << v25) - v29;
      if ((v9 & 2) != 0) {
        uint64_t result = sub_224AB9BE0(v3, v6 + v16 - *(void *)(v3 + 2424) * v29, v30, v23, v22, v28, 1);
      }
      if ((v9 & 4) != 0)
      {
        uint64_t v31 = v32 + v16 - *(void *)(v3 + 2424) * v29;
        return sub_224AB9BE0(v3, v31, v30, v23, v22, v28, 2);
      }
    }
  }
  return result;
}

uint64_t sub_224AC67CC(uint64_t a1, uint64_t a2)
{
  int v2 = a2;
  sub_224AC50E8(a1, a2);
  uint64_t result = (uint64_t)sub_224AC59D4((void *)a1, v2);
  if (*(unsigned char *)(*(void *)(a1 + 8) + 414)) {
    uint64_t result = sub_224AC6268(*(void *)(*(void *)(a1 + 3256) + 16), v2);
  }
  if (*(_DWORD *)(*(void *)(a1 + 24) + 236) != *(_DWORD *)(*(void *)(a1 + 24) + 240)) {
    uint64_t result = sub_224AC63E8(a1, v2);
  }
  if (*(_DWORD *)(a1 + 5352))
  {
    return sub_224AC65D0(a1, v2);
  }
  return result;
}

void *sub_224AC6864(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(_DWORD *)(a1 + 28);
  uint64_t v5 = (*(int *)(v2 + 3456) * (uint64_t)(v4 >> *(_DWORD *)(v2 + 3468))) << 7;
  uint64_t v6 = *(int *)(v3 + 13864);
  int v7 = 4 * v6;
  uint64_t result = memcpy((void *)(*(void *)(v2 + 3408) + v5 + 4 * (int)v6), (const void *)(*(void *)(v2 + 2120)+ 4 * v6+ *(void *)(v2 + 2144) * (4 * (*(_DWORD *)(v2 + 3472) + v4) - 1)), 4 * (*(_DWORD *)(v3 + 13868) - (int)v6));
  int v9 = *(_DWORD *)(v2 + 2168);
  if (v9)
  {
    uint64_t v10 = 0;
    char v11 = v9 == 1;
    BOOL v12 = v9 == 3;
    int v13 = *(_DWORD *)(v2 + 3472) + *(_DWORD *)(a1 + 28);
    char v14 = !v12;
    int v15 = v7 >> v14;
    uint64_t v16 = *(void *)(v2 + 2152) * (((4 * v13) >> v11) - 1) + (v7 >> v14);
    uint64_t v17 = v5 + v15;
    do
    {
      uint64_t result = memcpy((void *)(*(void *)(v2 + v10 + 3416) + v17), (const void *)(*(void *)(v2 + v10 + 2128) + v16), (4 * (*(_DWORD *)(v3 + 13868) - (int)v6)) >> v14);
      v10 += 8;
    }
    while (v10 != 16);
  }
  return result;
}

uint64_t sub_224AC6988(uint64_t result, int a2, int a3, int a4, int a5)
{
  if (*(_DWORD *)(result + 258564)) {
    uint64_t v5 = (void *)(*(void *)(*(void *)(result + 8) + 4376)
  }
                  + 24
                  * ((*(uint64_t *)(*(void *)(result + 8) + 3432) >> 1)
                   * ((*(_DWORD *)(result + 24) & 1) + (*(int *)(result + 28) >> 1))
                   + (*(_DWORD *)(result + 28) & 1)
                   + (*(int *)(result + 24) >> 1)));
  else {
    uint64_t v5 = (void *)(result + 21896);
  }
  if (a4 >= 1)
  {
    uint64_t v6 = a4;
    int v7 = (void *)(result + 24 * a2 + 5120);
    do
    {
      void *v7 = *v5;
      v7 += 3;
      --v6;
    }
    while (v6);
  }
  if (a5 >= 1)
  {
    uint64_t v8 = a5;
    int v9 = (void *)(result + 24 * a3 + 5888);
    do
    {
      void *v9 = *v5;
      v9 += 3;
      --v8;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_224AC6A38(uint64_t result, int a2, int a3, int a4, int a5)
{
  if (*(_DWORD *)(result + 258564)) {
    uint64_t v5 = *(void *)(*(void *)(result + 8) + 4376)
  }
       + 24
       * ((*(uint64_t *)(*(void *)(result + 8) + 3432) >> 1)
        * ((*(_DWORD *)(result + 24) & 1) + (*(int *)(result + 28) >> 1))
        + (*(_DWORD *)(result + 28) & 1)
        + (*(int *)(result + 24) >> 1));
  else {
    uint64_t v5 = result + 21896;
  }
  char v6 = 0;
  uint64_t v7 = 1;
  do
  {
    char v8 = v6;
    if (a4 >= 1)
    {
      int v9 = (void *)(result + 24 * a2 + 5120 + 8 * v7);
      uint64_t v10 = a4;
      do
      {
        void *v9 = *(void *)(v5 + 8 * v7);
        v9 += 3;
        --v10;
      }
      while (v10);
    }
    if (a5 >= 1)
    {
      char v11 = (void *)(result + 24 * a3 + 5888 + 8 * v7);
      uint64_t v12 = a5;
      do
      {
        *char v11 = *(void *)(v5 + 8 * v7);
        v11 += 3;
        --v12;
      }
      while (v12);
    }
    char v6 = 1;
    uint64_t v7 = 2;
  }
  while ((v8 & 1) == 0);
  return result;
}

void sub_224AC6B0C(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  uint64_t v70 = *MEMORY[0x263EF8340];
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = a3;
  sub_224AADB30(*(void *)(a1 + 16) + 13824, (int8x16_t *)(*(void *)(a1 + 16) + 112 * a3 + 16 * a4 + 3552), 6);
  *(unsigned char *)(a2 + a3 + 11) = v13 + 2;
  uint64_t v14 = a1 + a6;
  int v15 = (unsigned __int8 *)(v14 + 8224);
  uint64_t v16 = (unsigned __int8 *)(v14 + 624);
  if (a3) {
    uint64_t v16 = v15;
  }
  int v17 = *v16;
  if ((a6 & 0xF) != 0)
  {
    int v18 = a5;
    if (a3) {
      int v19 = *(unsigned __int8 *)(a1 + a5 + 0x2000);
    }
    else {
      int v19 = *(unsigned __int8 *)(*(void *)(a1 + 656) + a5 + 592);
    }
  }
  else
  {
    int v19 = 0;
    int v18 = a5;
  }
  int v20 = 0;
  int v21 = (unsigned __int8 *)(a1 + 5120 + 24 * a6 + 8 * v12 + 768);
  int v22 = (unsigned __int8 *)(a1 + 5120 + 24 * v18 + 8 * v12);
  BOOL v23 = v17 != 0;
  BOOL v24 = v19 != 0;
  if (v17 && v19)
  {
    int v20 = 0;
    do
    {
      unsigned int v25 = *v21;
      unsigned int v26 = *v22;
      if (v25 >= v26)
      {
        BOOL v27 = v26 == v25;
        int v28 = v26 == v25;
        if (v27) {
          ++v21;
        }
        if (!v20 || __src[v20 + 7] != v26) {
          __src[v20++ + 8] = v26;
        }
        v17 -= v28;
        ++v22;
        --v19;
      }
      else
      {
        if (!v20 || __src[v20 + 7] != v25) {
          __src[v20++ + 8] = v25;
        }
        ++v21;
        --v17;
      }
      BOOL v23 = v17 != 0;
      BOOL v24 = v19 != 0;
    }
    while (v17 && v19);
  }
  uint64_t v29 = (v13 + 2);
  if (v23)
  {
    int v30 = v17 + 1;
    do
    {
      int v31 = *v21;
      if (!v20 || __src[v20 + 7] != v31) {
        __src[v20++ + 8] = v31;
      }
      ++v21;
      --v30;
    }
    while (v30 > 1);
  }
  else if (v24)
  {
    int v32 = v19 + 1;
    do
    {
      int v33 = *v22;
      if (!v20 || __src[v20 + 7] != v33) {
        __src[v20++ + 8] = v33;
      }
      ++v22;
      --v32;
    }
    while (v32 > 1);
  }
  uint64_t v67 = v12;
  int v34 = 0;
  BOOL v35 = v29 != 0;
  if (v20 >= 1 && v13 != -2)
  {
    unint64_t v36 = 0;
    int v34 = 0;
    unint64_t v37 = v20;
    do
    {
      sub_224AADE84();
      if (v38) {
        __src[v34++] = __src[v36 + 8];
      }
      ++v36;
      BOOL v35 = v34 < (int)v29;
    }
    while (v36 < v37 && v34 < (int)v29);
  }
  if (*(_DWORD *)(a1 + 258564)) {
    uint64_t v39 = *(void *)(v11 + 4376)
  }
        + 24
        * ((*(uint64_t *)(v11 + 3432) >> 1) * ((*(_DWORD *)(a1 + 24) & 1) + (*(int *)(a1 + 28) >> 1))
         + (*(_DWORD *)(a1 + 28) & 1)
         + (*(int *)(a1 + 24) >> 1));
  else {
    uint64_t v39 = a1 + 21896;
  }
  uint64_t v40 = (unsigned char *)(v39 + 8 * v12);
  if (v35)
  {
    uint64_t v65 = v39;
    LOBYTE(v41) = 0;
    int v42 = -8;
    do
    {
      sub_224AADE84();
      LOBYTE(v41) = v43 | (2 * v41);
      BOOL v44 = __CFADD__(v42++, 1);
    }
    while (!v44);
    LODWORD(v45) = v34 + 1;
    v40[v34] = v41;
    uint64_t v66 = v29;
    if (v34 + 1 < (int)v29)
    {
      int v46 = 0;
      int v47 = -2;
      do
      {
        sub_224AADE84();
        int v46 = v48 | (2 * v46);
        BOOL v44 = __CFADD__(v47++, 1);
      }
      while (!v44);
      int v49 = 0;
      BOOL v50 = a3 == 0;
      int v41 = v41;
      signed int v51 = v46 + 5;
      uint64_t v45 = (int)v45;
      int v68 = ~v34 + v29;
      while (1)
      {
        uint64_t v52 = v40;
        int v53 = 0;
        if (v51)
        {
          signed int v54 = v51;
          do
          {
            --v54;
            sub_224AADE84();
            int v53 = v55 | (2 * v53);
          }
          while (v54);
        }
        unsigned __int8 v56 = v41 + v50 + v53 >= 255 ? -1 : v41 + v50 + v53;
        int v57 = v45 + 1;
        uint64_t v40 = v52;
        v52[v45] = v56;
        if (v50 + v56 >= 0xFF) {
          break;
        }
        int v41 = v56;
        signed int v58 = 32 - __clz((v56 ^ 0xFF) - v50);
        if (v51 >= v58) {
          signed int v51 = v58;
        }
        ++v49;
        ++v45;
        if (v49 == v68) {
          goto LABEL_70;
        }
      }
      if (v57 < (int)v66) {
        memset((void *)(v65 + 8 * v67 + v57), 255, (v66 - (v34 + v49) - 3) + 1);
      }
    }
LABEL_70:
    if (v66)
    {
      int v59 = 0;
      unsigned int v60 = v40;
      uint64_t v61 = v66;
      int v62 = v34;
      while (v59 < v34)
      {
        unsigned int v63 = __src[v59];
        if (v62 < (int)v66)
        {
          unsigned int v64 = v40[v62];
          if (v63 > v64) {
            goto LABEL_77;
          }
        }
        ++v59;
LABEL_78:
        *v60++ = v63;
        if (!--v61) {
          return;
        }
      }
      LOBYTE(v64) = v40[v62];
LABEL_77:
      ++v62;
      LOBYTE(v63) = v64;
      goto LABEL_78;
    }
  }
  else
  {
    memcpy((void *)(v39 + 8 * v12), __src, v34);
  }
}

void sub_224AC6FD8(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  sub_224AC6B0C(a1, a2, 1, a3, a4, a5);
  if (*(_DWORD *)(a1 + 258564)) {
    uint64_t v7 = (unsigned char *)(*(void *)(*(void *)(a1 + 8) + 4376)
  }
                 + 24
                 * ((*(uint64_t *)(*(void *)(a1 + 8) + 3432) >> 1)
                  * ((*(_DWORD *)(a1 + 24) & 1) + (*(int *)(a1 + 28) >> 1))
                  + (*(_DWORD *)(a1 + 28) & 1)
                  + (*(int *)(a1 + 24) >> 1))
                 + 16);
  else {
    uint64_t v7 = (unsigned char *)(a1 + 21912);
  }
  sub_224AADE84();
  if (v8)
  {
    int v9 = 0;
    int v10 = -2;
    do
    {
      sub_224AADE84();
      int v9 = v11 | (2 * v9);
      BOOL v12 = __CFADD__(v10++, 1);
    }
    while (!v12);
    char v13 = 0;
    int v14 = -8;
    do
    {
      sub_224AADE84();
      char v13 = v15 | (2 * v13);
      BOOL v12 = __CFADD__(v14++, 1);
    }
    while (!v12);
    unsigned char *v7 = v13;
    if (*(unsigned __int8 *)(a2 + 12) >= 2u)
    {
      int v16 = v9 + 4;
      unint64_t v17 = 1;
      do
      {
        if (!v16) {
          goto LABEL_20;
        }
        int v18 = 0;
        int v19 = v16;
        do
        {
          --v19;
          sub_224AADE84();
          int v18 = v20 | (2 * v18);
        }
        while (v19);
        if (v18)
        {
          sub_224AADE84();
          if (v21) {
            int v22 = -v18;
          }
          else {
            LOBYTE(v22) = v18;
          }
        }
        else
        {
LABEL_20:
          LOBYTE(v22) = 0;
        }
        v13 += v22;
        v7[v17++] = v13;
      }
      while (v17 < *(unsigned __int8 *)(a2 + 12));
    }
  }
  else if (*(unsigned char *)(a2 + 12))
  {
    unint64_t v23 = 0;
    do
    {
      char v24 = 0;
      int v25 = -8;
      do
      {
        sub_224AADE84();
        char v24 = v26 | (2 * v24);
        BOOL v12 = __CFADD__(v25++, 1);
      }
      while (!v12);
      v7[v23++] = v24;
    }
    while (v23 < *(unsigned __int8 *)(a2 + 12));
  }
}

void sub_224AC7180(uint64_t a1)
{
  if (a1)
  {
    uint64_t v3 = *(void *)(a1 + 16);
    uint64_t v2 = (uint64_t *)(a1 + 16);
    uint64_t v4 = v2[6];
    if (v3)
    {
      if (!*(void *)a1) {
        return;
      }
      sub_224AF722C(v2);
    }
    *(void *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(void *)(a1 + 24) = 0x8000000000000000;
    *(void *)(a1 + 40) = -1;
    sub_224AF722C(&v4);
  }
}

uint64_t sub_224AC71F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8, int a9)
{
  signed int v9 = a7 - 1;
  int32x2_t v10 = vdup_n_s32(a7 - 1);
  do
  {
    if (a5 >= 1)
    {
      uint64_t v11 = 0;
      signed int v12 = -1;
      int v13 = a9;
      do
      {
        int32x2_t v15 = vdup_n_s32(v12);
        int8x8_t v16 = vbic_s8((int8x8_t)vmin_s32(vadd_s32(v15, (int32x2_t)0xFFFFFFFEFFFFFFFDLL), v10), (int8x8_t)vcgt_s32((int32x2_t)0x200000003, v15));
        int v17 = *(unsigned __int8 *)(a3 + v16.i32[0]);
        int v18 = *(unsigned __int8 *)(a3 + v16.i32[1]);
        int v19 = v12 - 1;
        if (v12 - 1 >= v9) {
          int v19 = a7 - 1;
        }
        if (v12 >= v9) {
          signed int v20 = a7 - 1;
        }
        else {
          signed int v20 = v12;
        }
        if (v12 <= 0) {
          int v19 = 0;
        }
        int v21 = *(unsigned __int8 *)(a3 + v19);
        if (v12 < 0) {
          signed int v20 = 0;
        }
        int8x8_t v22 = vbic_s8((int8x8_t)vmin_s32(vadd_s32(v15, (int32x2_t)0x200000001), v10), (int8x8_t)vcgt_s32((int32x2_t)0xFFFFFFFEFFFFFFFFLL, v15));
        int8x8_t v23 = vbic_s8((int8x8_t)vmin_s32(vadd_s32(v15, (int32x2_t)0x400000003), v10), (int8x8_t)vcgt_s32((int32x2_t)0xFFFFFFFCFFFFFFFDLL, v15));
        int v14 = (char *)&unk_224B18D88 + 8 * (v13 >> 8);
        int v24 = (64
             - (v17 * *v14
              + v18 * v14[1]
              + v21 * v14[2]
              + *(unsigned __int8 *)(a3 + v20) * v14[3]
              + *(unsigned __int8 *)(a3 + v22.i32[0]) * v14[4]
              + *(unsigned __int8 *)(a3 + v22.i32[1]) * v14[5]
              + *(unsigned __int8 *)(a3 + v23.i32[0]) * v14[6]
              + *(unsigned __int8 *)(a3 + v23.i32[1]) * v14[7])) >> 7;
        if (v24 >= 255) {
          int v24 = 255;
        }
        *(unsigned char *)(result + v11) = v24 & ~(v24 >> 31);
        v12 += (v13 + a8) >> 14;
        int v13 = (v13 + a8) & 0x3FFF;
        ++v11;
      }
      while (a5 != v11);
    }
    result += a2;
    a3 += a4;
    --a6;
  }
  while (a6);
  return result;
}

void *sub_224AC73BC(void *result, int a2, int a3, int a4, int a5, int a6, char *__dst, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = __dst;
  int v12 = a2 - 1;
  if (-a6 < a2 - 1) {
    int v13 = -a6;
  }
  else {
    int v13 = a2 - 1;
  }
  if (a6 <= 0) {
    int v14 = v13;
  }
  else {
    int v14 = 0;
  }
  int v15 = a2 - a4 + a6;
  if (v15 < v12) {
    int v12 = a2 - a4 + a6;
  }
  if (v15 >= 0) {
    int v16 = v12;
  }
  else {
    int v16 = 0;
  }
  __src = &__dst[v14 * a8];
  int v31 = a2 - (v16 + v14);
  uint64_t __n = (uint64_t)result;
  if (v31 >= 1)
  {
    v17.i32[0] = result - a3 + a5;
    v17.i32[1] = -a5;
    int8x8_t v18 = vand_s8((int8x8_t)vcgez_s32(v17), (int8x8_t)vmin_s32(v17, vdup_n_s32((int)result - 1)));
    size_t v19 = v18.i32[1];
    size_t v20 = v18.i32[0];
    __int32 v21 = result - (v18.i32[1] + v18.i32[0]);
    int v22 = a4 - 1;
    if (a6 < a4 - 1) {
      int v22 = a6;
    }
    if (a6 < 0) {
      int v22 = 0;
    }
    uint64_t v23 = v22 * a10;
    int v24 = a3 - 1;
    if (a5 < a3 - 1) {
      int v24 = a5;
    }
    if (a5 < 0) {
      int v24 = 0;
    }
    int v25 = (char *)(a9 + v23 + v24);
    size_t v26 = v21;
    uint64_t v34 = (int)result - v18.i32[0] - 1;
    uint64_t v33 = v18.i32[1] + (uint64_t)v21;
    BOOL v27 = &__dst[v14 * a8];
    int v28 = a2 - (v16 + v14);
    do
    {
      uint64_t result = memcpy(&v27[v19], v25, v26);
      if (v19) {
        uint64_t result = memset(v27, v27[v19], v19);
      }
      if (v20) {
        uint64_t result = memset(&v27[v33], v27[v34], v20);
      }
      v25 += a10;
      v27 += a8;
      --v28;
    }
    while (v28);
  }
  if (v14 < 1)
  {
    size_t v29 = __n;
  }
  else
  {
    size_t v29 = __n;
    do
    {
      uint64_t result = memcpy(v11, __src, __n);
      v11 += a8;
      --v14;
    }
    while (v14);
  }
  if (v16 >= 1)
  {
    do
    {
      uint64_t result = memcpy(&v11[v31 * a8], &v11[a8 * (v31 - 1)], v29);
      v11 += a8;
      --v16;
    }
    while (v16);
  }
  return result;
}

uint64_t sub_224AC75B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, __int16 *a5, int a6, int a7, uint8x8_t a8, double a9, int8x8_t a10)
{
  int v10 = 0;
  uint64_t v36 = *MEMORY[0x263EF8340];
  uint64_t v11 = (unsigned __int8 *)(a3 - 3 * a4);
  int v12 = *a5;
  int v13 = a5[1];
  int v14 = a6 + 512;
  int v15 = v35;
  do
  {
    uint64_t v16 = 0;
    a8.i32[0] = *(_DWORD *)(v11 - 3);
    a8 = (uint8x8_t)vmovl_u8(a8).u64[0];
    __int16 v17 = v11[1];
    __int16 v18 = v11[2];
    LOWORD(v19) = v11[3];
    int v20 = v14;
    do
    {
      uint8x8_t v21 = a8;
      int v22 = v17;
      a8 = (uint8x8_t)vext_s8((int8x8_t)a8, (int8x8_t)a8, 2uLL);
      a8.i16[3] = v17;
      int v23 = v18;
      __int16 v17 = v18;
      __int16 v18 = v19;
      int v24 = (char *)&unk_224B18780 + 8 * (v20 >> 10);
      a10.i32[0] = *((_DWORD *)v24 + 128);
      a10 = (int8x8_t)vmovl_s8(a10).u64[0];
      int v25 = v24[516];
      int v26 = v24[517];
      int v27 = v18 * v24[518];
      int v28 = v24[519];
      int v19 = v11[v16 + 4];
      *(_WORD *)&v15[2 * v16] = (vaddvq_s32(vmull_s16((int16x4_t)(*(void *)&v21 & 0xFF00FF00FF00FFLL), (int16x4_t)a10))+ v22 * v25+ v27+ v23 * v26+ v19 * v28+ 4) >> 3;
      v20 += v12;
      ++v16;
    }
    while (v16 != 8);
    v11 += a4;
    v15 += 16;
    ++v10;
    v14 += v13;
  }
  while (v10 != 15);
  int v29 = 0;
  uint64_t v30 = 64;
  do
  {
    uint64_t v31 = 0;
    int v33 = a7;
    do
    {
      uint64_t v34 = (char *)&unk_224B18780 + 8 * ((v33 + 512) >> 10);
      int v32 = &v35[v30];
      *(_WORD *)(result + v31) = (*(__int16 *)&v32[v31 - 48] * v34[513]
                                              + *(__int16 *)&v32[v31 - 64] * v34[512]
                                              + *(__int16 *)&v32[v31 - 32] * v34[514]
                                              + *(__int16 *)&v32[v31 - 16] * v34[515]
                                              + *(__int16 *)&v32[v31] * v34[516]
                                              + *(__int16 *)&v32[v31 + 16] * v34[517]
                                              + *(__int16 *)&v32[v31 + 32] * v34[518]
                                              + *(__int16 *)&v32[v31 + 48] * v34[519]
                                              + 64) >> 7;
      v33 += a5[2];
      v31 += 2;
    }
    while (v31 != 16);
    ++v29;
    a7 += a5[3];
    result += 2 * a2;
    v30 += 16;
  }
  while (v29 != 8);
  return result;
}

uint64_t sub_224AC77D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, __int16 *a5, int a6, int a7, uint8x8_t a8, double a9, int8x8_t a10)
{
  int v10 = 0;
  v37[22] = *MEMORY[0x263EF8340];
  uint64_t v11 = &v36;
  int v12 = (unsigned __int8 *)(a3 - 3 * a4);
  int v13 = *a5;
  int v14 = a5[1];
  int v15 = a6 + 512;
  do
  {
    uint64_t v16 = 0;
    a8.i32[0] = *(_DWORD *)(v12 - 3);
    a8 = (uint8x8_t)vmovl_u8(a8).u64[0];
    __int16 v17 = v12[1];
    __int16 v18 = v12[2];
    LOWORD(v19) = v12[3];
    int v20 = v15;
    do
    {
      uint8x8_t v21 = a8;
      int v22 = v17;
      a8 = (uint8x8_t)vext_s8((int8x8_t)a8, (int8x8_t)a8, 2uLL);
      a8.i16[3] = v17;
      int v23 = v18;
      __int16 v17 = v18;
      __int16 v18 = v19;
      int v24 = (char *)&unk_224B18780 + 8 * (v20 >> 10);
      a10.i32[0] = *((_DWORD *)v24 + 128);
      a10 = (int8x8_t)vmovl_s8(a10).u64[0];
      int v25 = v24[516];
      int v26 = v24[517];
      int v27 = v18 * v24[518];
      int v28 = v24[519];
      int v19 = v12[v16 + 4];
      *(_WORD *)&v11[2 * v16] = (vaddvq_s32(vmull_s16((int16x4_t)(*(void *)&v21 & 0xFF00FF00FF00FFLL), (int16x4_t)a10))+ v22 * v25+ v27+ v23 * v26+ v19 * v28+ 4) >> 3;
      v20 += v13;
      ++v16;
    }
    while (v16 != 8);
    v12 += a4;
    v11 += 16;
    ++v10;
    v15 += v14;
  }
  while (v10 != 15);
  int v29 = 0;
  uint64_t v30 = (__int16 *)v37;
  do
  {
    uint64_t v31 = 0;
    int v32 = v30;
    int v33 = a7;
    do
    {
      uint64_t v34 = (char *)&unk_224B18780 + 8 * ((v33 + 512) >> 10);
      int v35 = (*(v32 - 24) * v34[513]
           + *(v32 - 32) * v34[512]
           + *(v32 - 16) * v34[514]
           + *(v32 - 8) * v34[515]
           + *v32 * v34[516]
           + v32[8] * v34[517]
           + v32[16] * v34[518]
           + v32[24] * v34[519]
           + 1024) >> 11;
      if (v35 >= 255) {
        int v35 = 255;
      }
      *(unsigned char *)(result + v31++) = v35 & ~(v35 >> 31);
      v33 += a5[2];
      ++v32;
    }
    while (v31 != 8);
    result += a2;
    ++v29;
    a7 += a5[3];
    v30 += 8;
  }
  while (v29 != 8);
  return result;
}

uint64_t sub_224AC79F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  return sub_224AC7A20(a1, a2, a3, a4, a5, a6, a7, a8, 1, 1);
}

uint64_t sub_224AC7A20(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8, int a9, int a10)
{
  do
  {
    if (a5 >= 1)
    {
      LODWORD(v10) = 0;
      do
      {
        int v11 = *(__int16 *)(a3 + 2 * (int)v10);
        int v12 = *(__int16 *)(a4 + 2 * (int)v10);
        uint64_t v13 = (int)v10;
        int v14 = v11 - v12;
        if (v11 - v12 < 0) {
          int v14 = v12 - v11;
        }
        signed int v15 = (v14 + 8) >> 8;
        if (v15 >= 26) {
          signed int v15 = 26;
        }
        char v16 = v15 + 38;
        int v17 = ((v15 + 38) * v11 + (26 - v15) * v12 + 512) >> 10;
        if (v17 >= 255) {
          int v17 = 255;
        }
        *(unsigned char *)(result + (int)v10) = v17 & ~(v17 >> 31);
        if (a9)
        {
          uint64_t v10 = (int)v10 + 1;
          int v18 = *(__int16 *)(a3 + 2 * (v13 + 1));
          int v19 = *(__int16 *)(a4 + 2 * (v13 + 1));
          int v20 = v18 - v19;
          if (v18 - v19 < 0) {
            int v20 = v19 - v18;
          }
          signed int v21 = (v20 + 8) >> 8;
          if (v21 >= 26) {
            int v22 = 26;
          }
          else {
            int v22 = v21;
          }
          int v23 = v22 + 38;
          int v24 = ((v22 + 38) * v18 + (26 - v22) * v19 + 512) >> 10;
          if (v24 >= 255) {
            int v24 = 255;
          }
          *(unsigned char *)(result + v10) = v24 & ~(v24 >> 31);
          if ((a6 & a10) != 0)
          {
            int v25 = (int)v10 >> 1;
            unsigned int v26 = (v15 - a8 + *(unsigned __int8 *)(a7 + ((int)v10 >> 1)) + v23 + 40) >> 2;
          }
          else
          {
            if (a10) {
              LOBYTE(v26) = v23 + v16;
            }
            else {
              unsigned int v26 = (v15 - a8 + v23 + 39) >> 1;
            }
            int v25 = (int)v10 >> 1;
          }
          *(unsigned char *)(a7 + v25) = v26;
        }
        else
        {
          *(unsigned char *)(a7 + (int)v10) = v16;
        }
        LODWORD(v10) = v10 + 1;
      }
      while ((int)v10 < a5);
    }
    BOOL v27 = (a6 & 1) != 0 || a10 == 0;
    a3 += 2 * a5;
    a4 += 2 * a5;
    result += a2;
    if (v27) {
      uint64_t v28 = a5 >> a9;
    }
    else {
      uint64_t v28 = 0;
    }
    a7 += v28;
    --a6;
  }
  while (a6);
  return result;
}

uint64_t sub_224AC7B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  return sub_224AC7A20(a1, a2, a3, a4, a5, a6, a7, a8, 1, 0);
}

uint64_t sub_224AC7BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  return sub_224AC7A20(a1, a2, a3, a4, a5, a6, a7, a8, 0, 0);
}

uint64_t sub_224AC7BC4(uint64_t result, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5 = (unsigned __int8 *)&unk_224B18740 + a5;
  int v6 = (3 * a5) >> 2;
  do
  {
    int v8 = *v5++;
    int v7 = v8;
    if (a4 >= 1)
    {
      for (uint64_t i = 0; i != a4; ++i)
        *(unsigned char *)(result + i) = (*(unsigned __int8 *)(a3 + i) * v7
                                + (64 - v7) * *(unsigned __int8 *)(result + i)
                                + 32) >> 6;
    }
    result += a2;
    a3 += a4;
    --v6;
  }
  while (v6);
  return result;
}

uint64_t sub_224AC7C34(uint64_t result, uint64_t a2, uint64_t a3, int a4, int a5)
{
  LODWORD(v5) = (3 * a4) >> 2;
  if ((int)v5 <= 1) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = v5;
  }
  do
  {
    if (a4 >= 2)
    {
      for (uint64_t i = 0; i != v5; ++i)
        *(unsigned char *)(result + i) = ((64 - byte_224B18740[a4 + i]) * *(unsigned __int8 *)(result + i)
                                + *(unsigned __int8 *)(a3 + i) * byte_224B18740[a4 + i]
                                + 32) >> 6;
    }
    result += a2;
    a3 += a4;
    --a5;
  }
  while (a5);
  return result;
}

uint64_t sub_224AC7CA8(uint64_t result, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6)
{
  do
  {
    if (a4 >= 1)
    {
      for (uint64_t i = 0; i != a4; ++i)
        *(unsigned char *)(result + i) = ((64 - *(unsigned __int8 *)(a6 + i)) * *(unsigned __int8 *)(result + i)
                                + *(unsigned __int8 *)(a3 + i) * *(unsigned __int8 *)(a6 + i)
                                + 32) >> 6;
    }
    result += a2;
    a3 += a4;
    a6 += a4;
    --a5;
  }
  while (a5);
  return result;
}

uint64_t sub_224AC7D08(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7)
{
  uint64_t v7 = 2 * a5;
  do
  {
    if (a5 >= 1)
    {
      for (uint64_t i = 0; i != a5; *(unsigned char *)(result + i++) = v9 & ~(v9 >> 31))
      {
        int v9 = ((64 - *(unsigned __int8 *)(a7 + i)) * *(__int16 *)(a4 + 2 * i)
            + *(unsigned __int8 *)(a7 + i) * *(__int16 *)(a3 + 2 * i)
            + 512) >> 10;
        if (v9 >= 255) {
          int v9 = 255;
        }
      }
    }
    a7 += a5;
    result += a2;
    a4 += v7;
    a3 += v7;
    --a6;
  }
  while (a6);
  return result;
}

uint64_t sub_224AC7D80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  uint64_t v7 = 2 * a5;
  do
  {
    if (a5 >= 1)
    {
      for (uint64_t i = 0; i != a5; *(unsigned char *)(result + i++) = v9 & ~(v9 >> 31))
      {
        int v9 = ((16 - a7) * *(__int16 *)(a4 + 2 * i) + *(__int16 *)(a3 + 2 * i) * a7 + 128) >> 8;
        if (v9 >= 255) {
          int v9 = 255;
        }
      }
    }
    result += a2;
    a4 += v7;
    a3 += v7;
    --a6;
  }
  while (a6);
  return result;
}

uint64_t sub_224AC7DEC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6 = 2 * a5;
  do
  {
    if (a5 >= 1)
    {
      for (uint64_t i = 0; i != a5; *(unsigned char *)(result + i++) = v8 & ~(v8 >> 31))
      {
        int v8 = (*(__int16 *)(a3 + 2 * i) + *(__int16 *)(a4 + 2 * i) + 16) >> 5;
        if (v8 >= 255) {
          int v8 = 255;
        }
      }
    }
    result += a2;
    a4 += v6;
    a3 += v6;
    --a6;
  }
  while (a6);
  return result;
}

uint64_t sub_224AC7E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t result = MEMORY[0x270FA5388]();
  uint64_t v26 = *MEMORY[0x263EF8340];
  int v17 = ((int)(v15 + (v13 - 1) * a9) >> 10) + 2;
  int v18 = v25;
  do
  {
    if (v12 >= 1)
    {
      uint64_t v19 = 0;
      int v20 = 0;
      unsigned int v21 = v14;
      do
      {
        *(_WORD *)&v18[v19] = (*(unsigned __int8 *)(v10 + v20 + 1) - *(unsigned __int8 *)(v10 + v20)) * (v21 >> 6)
                            + 16 * *(unsigned __int8 *)(v10 + v20);
        int v22 = v21 + v16;
        v20 += v22 >> 10;
        unsigned int v21 = v22 & 0x3FF;
        v19 += 2;
      }
      while (2 * v12 != v19);
    }
    v18 += 256;
    v10 += v11;
    --v17;
  }
  while (v17);
  int v23 = v25;
  do
  {
    if (v12 >= 1)
    {
      uint64_t v24 = 0;
      do
      {
        *(_WORD *)(result + v24) = ((*(__int16 *)&v23[v24 + 256] - *(__int16 *)&v23[v24]) * (v15 >> 6)
                                  + 16 * *(__int16 *)&v23[v24]
                                  + 8) >> 4;
        v24 += 2;
      }
      while (2 * v12 != v24);
    }
    v23 += 2 * (int)(((int)(v15 + a9) >> 3) & 0xFFFFFF80);
    unsigned int v15 = (v15 + a9) & 0x3FF;
    result += 2 * v12;
    --v13;
  }
  while (v13);
  return result;
}

uint64_t sub_224AC7FA8()
{
  uint64_t result = MEMORY[0x270FA5388]();
  uint64_t v18 = *MEMORY[0x263EF8340];
  if (v5)
  {
    if (v6)
    {
      int v7 = v4 + 1;
      int v8 = v17;
      do
      {
        if (v3 >= 1)
        {
          uint64_t v9 = 0;
          __int16 v10 = *v1;
          do
          {
            __int16 v11 = v1[v9 + 1];
            *(_WORD *)&v8[2 * v9] = (v11 - v10) * v5 + 16 * v10;
            __int16 v10 = v11;
            ++v9;
          }
          while (v3 != v9);
        }
        v8 += 256;
        v1 += v2;
        --v7;
      }
      while (v7);
      int v12 = v17;
      do
      {
        if (v3 >= 1)
        {
          uint64_t v13 = 0;
          do
          {
            *(_WORD *)(result + v13) = ((*(__int16 *)&v12[v13 + 256] - *(__int16 *)&v12[v13]) * v6
                                                    + 16 * *(__int16 *)&v12[v13]
                                                    + 8) >> 4;
            v13 += 2;
          }
          while (2 * v3 != v13);
        }
        v12 += 256;
        result += 2 * v3;
        --v4;
      }
      while (v4);
    }
    else
    {
      do
      {
        if (v3 >= 1)
        {
          for (uint64_t i = 0; i != v3; ++i)
            *(_WORD *)(result + 2 * i) = (v1[i + 1] - v1[i]) * v5 + 16 * v1[i];
        }
        v1 += v2;
        result += 2 * v3;
        --v4;
      }
      while (v4);
    }
  }
  else if (v6)
  {
    unsigned int v14 = &v1[v2];
    do
    {
      if (v3 >= 1)
      {
        for (uint64_t j = 0; j != v3; ++j)
          *(_WORD *)(result + 2 * j) = (v14[j] - v1[j]) * v6 + 16 * v1[j];
      }
      v1 += v2;
      result += 2 * v3;
      v14 += v2;
      --v4;
    }
    while (v4);
  }
  else
  {
    return sub_224AC81BC(result, (uint64_t)v1, v2, v3, v4);
  }
  return result;
}

uint64_t sub_224AC81BC(uint64_t result, uint64_t a2, uint64_t a3, int a4, int a5)
{
  do
  {
    if (a4 >= 1)
    {
      for (uint64_t i = 0; i != a4; ++i)
        *(_WORD *)(result + 2 * i) = 16 * *(unsigned __int8 *)(a2 + i);
    }
    a2 += a3;
    result += 2 * a4;
    --a5;
  }
  while (a5);
  return result;
}

uint64_t sub_224AC81FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  uint64_t result = MEMORY[0x270FA5388]();
  uint64_t v28 = *MEMORY[0x263EF8340];
  int v18 = ((v17 + (v15 - 1) * a10) >> 10) + 2;
  uint64_t v19 = v27;
  do
  {
    if (v14 >= 1)
    {
      uint64_t v20 = 0;
      int v21 = 0;
      unsigned int v22 = v16;
      do
      {
        *(_WORD *)&v19[v20] = (*(unsigned __int8 *)(v12 + v21 + 1) - *(unsigned __int8 *)(v12 + v21)) * (v22 >> 6)
                            + 16 * *(unsigned __int8 *)(v12 + v21);
        int v23 = v22 + a9;
        v21 += v23 >> 10;
        unsigned int v22 = v23 & 0x3FF;
        v20 += 2;
      }
      while (2 * v14 != v20);
    }
    v19 += 256;
    v12 += v13;
    --v18;
  }
  while (v18);
  uint64_t v24 = v27;
  do
  {
    if (v14 >= 1)
    {
      for (uint64_t i = 0; i != v14; *(unsigned char *)(result + i++) = v26 & ~(v26 >> 31))
      {
        int v26 = ((*(__int16 *)&v24[2 * i + 256] - *(__int16 *)&v24[2 * i]) * (v17 >> 6)
             + 16 * *(__int16 *)&v24[2 * i]
             + 128) >> 8;
        if (v26 >= 255) {
          int v26 = 255;
        }
      }
    }
    v24 += 2 * (int)(((v17 + a10) >> 3) & 0xFFFFFF80);
    int v17 = (v17 + a10) & 0x3FF;
    result += v11;
    --v15;
  }
  while (v15);
  return result;
}

char *sub_224AC8364()
{
  uint64_t result = (char *)MEMORY[0x270FA5388]();
  uint64_t v22 = *MEMORY[0x263EF8340];
  if (v6)
  {
    if (v7)
    {
      int v8 = v5 + 1;
      uint64_t v9 = v21;
      do
      {
        if (v4 >= 1)
        {
          uint64_t v10 = 0;
          __int16 v11 = *v2;
          do
          {
            __int16 v12 = v2[v10 + 1];
            *(_WORD *)&v9[2 * v10] = (v12 - v11) * v6 + 16 * v11;
            __int16 v11 = v12;
            ++v10;
          }
          while (v4 != v10);
        }
        v9 += 256;
        v2 += v3;
        --v8;
      }
      while (v8);
      uint64_t v13 = v21;
      do
      {
        if (v4 >= 1)
        {
          for (uint64_t i = 0; i != v4; result[i++] = v15 & ~(v15 >> 31))
          {
            int v15 = ((*(__int16 *)&v13[2 * i + 256] - *(__int16 *)&v13[2 * i]) * v7 + 16 * *(__int16 *)&v13[2 * i] + 128) >> 8;
            if (v15 >= 255) {
              int v15 = 255;
            }
          }
        }
        v13 += 256;
        result += v1;
        --v5;
      }
      while (v5);
    }
    else
    {
      do
      {
        if (v4 >= 1)
        {
          for (uint64_t j = 0; j != v4; result[j++] = v20 & ~(v20 >> 31))
          {
            int v20 = ((v2[j + 1] - v2[j]) * v6 + 16 * v2[j] + 8) >> 4;
            if (v20 >= 255) {
              int v20 = 255;
            }
          }
        }
        result += v1;
        v2 += v3;
        --v5;
      }
      while (v5);
    }
  }
  else if (v7)
  {
    unsigned int v16 = &v2[v3];
    do
    {
      if (v4 >= 1)
      {
        for (uint64_t k = 0; k != v4; result[k++] = v18 & ~(v18 >> 31))
        {
          int v18 = ((v16[k] - v2[k]) * v7 + 16 * v2[k] + 8) >> 4;
          if (v18 >= 255) {
            int v18 = 255;
          }
        }
      }
      result += v1;
      v2 += v3;
      v16 += v3;
      --v5;
    }
    while (v5);
  }
  else
  {
    return (char *)sub_224AC85A0(result, v1, v2, v3, v4, v5);
  }
  return result;
}

void *sub_224AC85A0(char *__dst, uint64_t a2, char *__src, uint64_t a4, int a5, int a6)
{
  size_t v11 = a5;
  do
  {
    uint64_t result = memcpy(__dst, __src, v11);
    __dst += a2;
    __src += a4;
    --a6;
  }
  while (a6);
  return result;
}

uint64_t sub_224AC8604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return sub_224AC8630(a1, a2, a3, a4, a5, a6, a7, a8, a9, 9u);
}

uint64_t sub_224AC8630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10)
{
  uint64_t result = MEMORY[0x270FA5388]();
  int v38 = v16;
  v40[8320] = *MEMORY[0x263EF8340];
  int v17 = ((v14 + (v13 - 1) * a9) >> 10) + 8;
  uint64_t v19 = v18 - 3 * v11;
  int v20 = &v39;
  do
  {
    if (v12 >= 1)
    {
      uint64_t v21 = 0;
      int v22 = 0;
      int v23 = v38;
      do
      {
        if (v23 >= 0x40)
        {
          uint64_t v25 = 8 * (v23 >> 6) - 8;
          int v26 = (char *)&unk_224B18470 + 120 * (a10 & 1) + v25 + 360;
          BOOL v27 = (char *)&unk_224B18470 + 120 * (a10 & 3) + v25;
          if (v12 <= 4) {
            BOOL v27 = v26;
          }
          uint64_t v28 = (unsigned __int8 *)(v19 + v22);
          int v24 = (*(v28 - 2) * v27[1]
               + *(v28 - 3) * *v27
               + *(v28 - 1) * v27[2]
               + *v28 * v27[3]
               + v28[1] * v27[4]
               + v28[2] * v27[5]
               + v28[3] * v27[6]
               + v28[4] * v27[7]
               + 2) >> 2;
        }
        else
        {
          LOWORD(v24) = 16 * *(unsigned __int8 *)(v19 + v22);
        }
        *(_WORD *)&v20[v21] = v24;
        v22 += (v23 + v15) >> 10;
        int v23 = (v23 + v15) & 0x3FF;
        v21 += 2;
      }
      while (2 * v12 != v21);
    }
    v20 += 256;
    v19 += v11;
    --v17;
  }
  while (v17);
  if (v13 >= 1)
  {
    int v29 = 0;
    uint64_t v30 = v40;
    do
    {
      if (v14 >= 0x40)
      {
        uint64_t v32 = ((uint64_t)v14 >> 6) - 1;
        int v33 = (char *)&unk_224B18470 + 120 * ((a10 >> 2) & 1) + 8 * v32 + 360;
        uint64_t v34 = (char *)&unk_224B18470 + 120 * (a10 >> 2) + 8 * v32;
        if (v13 >= 5) {
          uint64_t v31 = v34;
        }
        else {
          uint64_t v31 = v33;
        }
      }
      else
      {
        uint64_t v31 = 0;
      }
      if (v12 >= 1)
      {
        uint64_t v35 = 0;
        do
        {
          if (v31)
          {
            char v36 = v30 - 96;
            int v37 = (*(__int16 *)((char *)v36 + v35 + 256) * v31[1]
                 + *(__int16 *)((char *)v36 + v35) * *v31
                 + *(__int16 *)((char *)v36 + v35 + 512) * v31[2]
                 + *(__int16 *)((char *)v30 + v35) * v31[3]
                 + *(__int16 *)((char *)v36 + v35 + 1024) * v31[4]
                 + *(__int16 *)((char *)v36 + v35 + 1280) * v31[5]
                 + *(__int16 *)((char *)v36 + v35 + 1536) * v31[6]
                 + *(__int16 *)((char *)v36 + v35 + 1792) * v31[7]
                 + 32) >> 6;
          }
          else
          {
            LOWORD(v37) = *(_WORD *)((char *)v30 + v35);
          }
          *(_WORD *)(result + v35) = v37;
          v35 += 2;
        }
        while (2 * v12 != v35);
      }
      uint64_t v30 = (void *)((char *)v30 + 2 * (int)(((v14 + a9) >> 3) & 0xFFFFFF80));
      int v14 = (v14 + a9) & 0x3FF;
      ++v29;
      result += 2 * v12;
    }
    while (v29 != v13);
  }
  return result;
}

uint64_t sub_224AC8934()
{
  return sub_224AC893C();
}

uint64_t sub_224AC893C()
{
  uint64_t result = MEMORY[0x270FA5388]();
  uint64_t v59 = *MEMORY[0x263EF8340];
  if (v5)
  {
    unsigned int v10 = v7 & 3;
    if (v3 <= 4) {
      unsigned int v10 = (v7 & 1) + 3;
    }
    uint64_t v11 = (int8x8_t *)((char *)&unk_224B18470 + 120 * v10 + 8 * v5 - 8);
    if (!v6)
    {
      do
      {
        if (v3 >= 1)
        {
          uint64_t v12 = 0;
          int16x8_t v13 = vmovl_s8(*v11);
          int32x4_t v14 = vmovl_high_s16(v13);
          int32x4_t v15 = vmovl_s16(*(int16x4_t *)v13.i8);
          do
          {
            uint16x8_t v16 = vmovl_u8(*(uint8x8_t *)(v1 + v12 - 3));
            *(_WORD *)(result + 2 * v12++) = (vaddvq_s32(vmlaq_s32(vmulq_s32((int32x4_t)vmovl_high_u16(v16), v14), (int32x4_t)vmovl_u16(*(uint16x4_t *)v16.i8), v15))+ 2) >> 2;
          }
          while (v3 != v12);
        }
        v1 += v2;
        result += 2 * v3;
        --v4;
      }
      while (v4);
      return result;
    }
    goto LABEL_12;
  }
  if (v6)
  {
    uint64_t v11 = 0;
LABEL_12:
    unsigned int v17 = v7 >> 2;
    if (v4 <= 4) {
      unsigned int v17 = ((v7 >> 2) & 1) + 3;
    }
    uint64_t v18 = (char *)&unk_224B18470 + 120 * v17 + 8 * v6 - 8;
    if (v11)
    {
      int v19 = v4 + 7;
      uint64_t v20 = v1 - 3 * v2;
      uint64_t v21 = v58;
      do
      {
        if (v3 >= 1)
        {
          uint64_t v22 = 0;
          v8.i32[0] = *(_DWORD *)(v20 - 3);
          int8x8_t v8 = (int8x8_t)vmovl_u8((uint8x8_t)v8).u64[0];
          int v23 = *(unsigned __int8 *)(v20 + 2);
          int v24 = *(unsigned __int8 *)(v20 + 3);
          v9.i32[0] = v11->i32[0];
          int32x4_t v9 = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v9.i8));
          int v25 = v11->i8[4];
          int v26 = v11->i8[5];
          int v27 = v11->i8[6];
          int v28 = v11->i8[7];
          do
          {
            int v29 = *(unsigned __int8 *)(v20 + v22 + 1);
            int v30 = v24 * v27 + v23 * v26;
            int v23 = v24;
            int v24 = *(unsigned __int8 *)(v20 + v22 + 4);
            *(_WORD *)&v21[2 * v22] = (vaddvq_s32(vmulq_s32((int32x4_t)vmovl_u16((uint16x4_t)(*(void *)&v8 & 0xFF00FF00FF00FFLL)), v9))+ v29 * v25+ v30+ v24 * v28+ 2) >> 2;
            int8x8_t v8 = vext_s8(v8, v8, 2uLL);
            v8.i16[3] = v29;
            ++v22;
          }
          while (v3 != v22);
        }
        v21 += 256;
        v20 += v2;
        --v19;
      }
      while (v19);
      uint64_t v31 = v58;
      do
      {
        if (v3 >= 1)
        {
          uint64_t v32 = 0;
          int v33 = *v18;
          int v34 = v18[1];
          int v35 = v18[2];
          int v36 = v18[3];
          int v37 = v18[4];
          int v38 = v18[5];
          int v39 = v18[6];
          int v40 = v18[7];
          do
          {
            *(_WORD *)(result + v32) = (*(__int16 *)&v31[v32] * v33
                                                    + *(__int16 *)&v31[v32 + 256] * v34
                                                    + *(__int16 *)&v31[v32 + 512] * v35
                                                    + *(__int16 *)&v31[v32 + 768] * v36
                                                    + *(__int16 *)&v31[v32 + 1024] * v37
                                                    + *(__int16 *)&v31[v32 + 1280] * v38
                                                    + *(__int16 *)&v31[v32 + 1536] * v39
                                                    + *(__int16 *)&v31[v32 + 1792] * v40
                                                    + 32) >> 6;
            v32 += 2;
          }
          while (2 * v3 != v32);
        }
        result += 2 * v3;
        v31 += 256;
        --v4;
      }
      while (v4);
    }
    else
    {
      uint64_t v41 = v1 - 3 * v2;
      do
      {
        if (v3 >= 1)
        {
          uint64_t v42 = 0;
          int v43 = *v18;
          int v44 = v18[1];
          int v45 = v18[2];
          int v46 = v18[3];
          int v47 = v18[4];
          int v48 = v18[5];
          int v49 = v18[6];
          int v50 = v18[7];
          do
          {
            signed int v51 = (unsigned __int8 *)(v41 + v42 + v2);
            int v52 = *v51 * v44;
            int v53 = &v51[v2];
            int v54 = *v53;
            int v55 = &v53[v2];
            int v56 = *v55;
            int v57 = &v55[v2];
            *(_WORD *)(result + 2 * v42) = (v52
                                          + *(unsigned __int8 *)(v41 + v42) * v43
                                          + v54 * v45
                                          + v56 * v46
                                          + *v57 * v47
                                          + v57[v2] * v48
                                          + v57[v2 + v2] * v49
                                          + v57[v2 + v2 + v2] * v50
                                          + 2) >> 2;
            ++v42;
          }
          while (v3 != v42);
        }
        result += 2 * v3;
        v41 += v2;
        --v4;
      }
      while (v4);
    }
    return result;
  }

  return sub_224AC81BC(result, v1, v2, v3, v4);
}

uint64_t sub_224AC8D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return sub_224AC8D3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 9u);
}

uint64_t sub_224AC8D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, unsigned int a11)
{
  uint64_t result = MEMORY[0x270FA5388]();
  v43[8320] = *MEMORY[0x263EF8340];
  int v41 = v17;
  int v18 = ((v17 + (v15 - 1) * a10) >> 10) + 8;
  uint64_t v20 = v19 - 3 * v13;
  uint64_t v21 = &v42;
  do
  {
    if (v14 >= 1)
    {
      uint64_t v22 = 0;
      int v23 = 0;
      int v24 = v16;
      do
      {
        if (v24 >= 0x40)
        {
          uint64_t v26 = 8 * (v24 >> 6) - 8;
          int v27 = (char *)&unk_224B18470 + 120 * (a11 & 1) + v26 + 360;
          int v28 = (char *)&unk_224B18470 + 120 * (a11 & 3) + v26;
          if (v14 <= 4) {
            int v28 = v27;
          }
          int v29 = (unsigned __int8 *)(v20 + v23);
          int v25 = (*(v29 - 2) * v28[1]
               + *(v29 - 3) * *v28
               + *(v29 - 1) * v28[2]
               + *v29 * v28[3]
               + v29[1] * v28[4]
               + v29[2] * v28[5]
               + v29[3] * v28[6]
               + v29[4] * v28[7]
               + 2) >> 2;
        }
        else
        {
          LOWORD(v25) = 16 * *(unsigned __int8 *)(v20 + v23);
        }
        *(_WORD *)&v21[v22] = v25;
        v23 += (v24 + a9) >> 10;
        int v24 = (v24 + a9) & 0x3FF;
        v22 += 2;
      }
      while (2 * v14 != v22);
    }
    v21 += 256;
    v20 += v13;
    --v18;
  }
  while (v18);
  int v30 = v41;
  if (v15 >= 1)
  {
    int v31 = 0;
    uint64_t v32 = v43;
    do
    {
      if (v30 >= 0x40)
      {
        uint64_t v34 = ((uint64_t)v30 >> 6) - 1;
        int v35 = (char *)&unk_224B18470 + 120 * ((a11 >> 2) & 1) + 8 * v34 + 360;
        int v36 = (char *)&unk_224B18470 + 120 * (a11 >> 2) + 8 * v34;
        if (v15 >= 5) {
          int v33 = v36;
        }
        else {
          int v33 = v35;
        }
      }
      else
      {
        int v33 = 0;
      }
      if (v14 >= 1)
      {
        uint64_t v37 = 0;
        int v38 = (__int16 *)(v32 - 96);
        do
        {
          if (v33) {
            int v39 = (v38[128] * v33[1]
          }
                 + *v38 * *v33
                 + v38[256] * v33[2]
                 + v38[384] * v33[3]
                 + v38[512] * v33[4]
                 + v38[640] * v33[5]
                 + v38[768] * v33[6]
                 + v38[896] * v33[7]
                 + 512) >> 10;
          else {
            int v39 = (v38[384] + 8) >> 4;
          }
          if (v39 >= 255) {
            int v40 = 255;
          }
          else {
            int v40 = v39;
          }
          *(unsigned char *)(result + v37++) = v40 & ~(v40 >> 31);
          ++v38;
        }
        while (v14 != v37);
      }
      uint64_t v32 = (void *)((char *)v32 + 2 * (int)(((v30 + a10) >> 3) & 0xFFFFFF80));
      int v30 = (v30 + a10) & 0x3FF;
      result += v12;
      ++v31;
    }
    while (v31 != v15);
  }
  return result;
}

char *sub_224AC9060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_224AC9088(a1, a2, a3, a4, a5, a6, a7, a8, 9u);
}

char *sub_224AC9088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9)
{
  uint64_t result = (char *)MEMORY[0x270FA5388]();
  uint64_t v72 = *MEMORY[0x263EF8340];
  if (v15)
  {
    unsigned int v19 = a9 & 3;
    if (v13 <= 4) {
      unsigned int v19 = (a9 & 1) + 3;
    }
    uint64_t v20 = (int8x8_t *)((char *)&unk_224B18470 + 120 * v19 + 8 * v15 - 8);
    if (!v16)
    {
      do
      {
        if (v13 >= 1)
        {
          uint64_t v21 = 0;
          int16x8_t v22 = vmovl_s8(*v20);
          int32x4_t v23 = vmovl_high_s16(v22);
          int32x4_t v24 = vmovl_s16(*(int16x4_t *)v22.i8);
          do
          {
            uint16x8_t v25 = vmovl_u8(*(uint8x8_t *)&v11[v21 - 3]);
            int v26 = (vaddvq_s32(vmlaq_s32(vmulq_s32((int32x4_t)vmovl_high_u16(v25), v23), (int32x4_t)vmovl_u16(*(uint16x4_t *)v25.i8), v24))+ 34) >> 6;
            if (v26 >= 255) {
              int v26 = 255;
            }
            result[v21++] = v26 & ~(v26 >> 31);
          }
          while (v13 != v21);
        }
        result += v10;
        v11 += v12;
        --v14;
      }
      while (v14);
      return result;
    }
    goto LABEL_14;
  }
  if (v16)
  {
    uint64_t v20 = 0;
LABEL_14:
    unsigned int v27 = ((a9 >> 2) & 1) + 3;
    if (v14 > 4) {
      unsigned int v27 = a9 >> 2;
    }
    int v28 = (char *)&unk_224B18470 + 120 * v27 + 8 * v16 - 8;
    if (v20)
    {
      int v29 = v14 + 7;
      int v30 = &v11[-3 * v12];
      int v31 = v71;
      do
      {
        if (v13 >= 1)
        {
          uint64_t v32 = 0;
          v17.i32[0] = *(_DWORD *)(v30 - 3);
          int8x8_t v17 = (int8x8_t)vmovl_u8((uint8x8_t)v17).u64[0];
          int v33 = v30[2];
          int v34 = v30[3];
          v18.i32[0] = v20->i32[0];
          int32x4_t v18 = vmovl_s16((int16x4_t)*(_OWORD *)&vmovl_s8(*(int8x8_t *)v18.i8));
          int v35 = v20->i8[4];
          int v36 = v20->i8[5];
          int v37 = v20->i8[6];
          int v38 = v20->i8[7];
          do
          {
            int v39 = v30[v32 + 1];
            int v40 = v34 * v37 + v33 * v36;
            int v33 = v34;
            int v34 = v30[v32 + 4];
            *(_WORD *)&v31[2 * v32] = (vaddvq_s32(vmulq_s32((int32x4_t)vmovl_u16((uint16x4_t)(*(void *)&v17 & 0xFF00FF00FF00FFLL)), v18))+ v39 * v35+ v40+ v34 * v38+ 2) >> 2;
            int8x8_t v17 = vext_s8(v17, v17, 2uLL);
            v17.i16[3] = v39;
            ++v32;
          }
          while (v13 != v32);
        }
        v31 += 256;
        v30 += v12;
        --v29;
      }
      while (v29);
      int v41 = (__int16 *)v71;
      do
      {
        if (v13 >= 1)
        {
          uint64_t v42 = 0;
          int v43 = *v28;
          int v44 = v28[1];
          int v45 = v28[2];
          int v46 = v28[3];
          int v47 = v28[4];
          int v48 = v28[5];
          int v49 = v28[6];
          int v50 = v41;
          int v51 = v28[7];
          do
          {
            int v52 = (v50[128] * v44
                 + *v50 * v43
                 + v50[256] * v45
                 + v50[384] * v46
                 + v50[512] * v47
                 + v50[640] * v48
                 + v50[768] * v49
                 + v50[896] * v51
                 + 512) >> 10;
            if (v52 >= 255) {
              int v52 = 255;
            }
            result[v42++] = v52 & ~(v52 >> 31);
            ++v50;
          }
          while (v13 != v42);
        }
        result += v10;
        v41 += 128;
        --v14;
      }
      while (v14);
    }
    else
    {
      int v53 = &v11[-3 * v12];
      do
      {
        if (v13 >= 1)
        {
          uint64_t v54 = 0;
          int v55 = *v28;
          int v56 = v28[1];
          int v57 = v28[2];
          int v58 = v28[3];
          int v59 = v28[4];
          int v60 = v28[5];
          int v61 = v28[6];
          int v62 = v28[7];
          do
          {
            unsigned int v63 = &v53[v54 + v12];
            int v64 = *v63 * v56;
            uint64_t v65 = (unsigned __int8 *)&v63[v12];
            int v66 = *v65;
            uint64_t v67 = &v65[v12];
            int v68 = *v67;
            uint64_t v69 = &v67[v12];
            int v70 = (v64
                 + v53[v54] * v55
                 + v66 * v57
                 + v68 * v58
                 + *v69 * v59
                 + v69[v12] * v60
                 + v69[v12 + v12] * v61
                 + v69[v12 + v12 + v12] * v62
                 + 32) >> 6;
            if (v70 >= 255) {
              int v70 = 255;
            }
            result[v54++] = v70 & ~(v70 >> 31);
          }
          while (v13 != v54);
        }
        result += v10;
        v53 += v12;
        --v14;
      }
      while (v14);
    }
    return result;
  }

  return (char *)sub_224AC85A0(result, v10, v11, v12, v13, v14);
}

uint64_t sub_224AC9484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return sub_224AC8630(a1, a2, a3, a4, a5, a6, a7, a8, a9, 5u);
}

uint64_t sub_224AC94B0()
{
  return sub_224AC893C();
}

uint64_t sub_224AC94B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return sub_224AC8D3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 5u);
}

char *sub_224AC94E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_224AC9088(a1, a2, a3, a4, a5, a6, a7, a8, 5u);
}

uint64_t sub_224AC9510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return sub_224AC8630(a1, a2, a3, a4, a5, a6, a7, a8, a9, 1u);
}

uint64_t sub_224AC953C()
{
  return sub_224AC893C();
}

uint64_t sub_224AC9544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return sub_224AC8D3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 1u);
}

char *sub_224AC9574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_224AC9088(a1, a2, a3, a4, a5, a6, a7, a8, 1u);
}

uint64_t sub_224AC959C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return sub_224AC8630(a1, a2, a3, a4, a5, a6, a7, a8, a9, 0xAu);
}

uint64_t sub_224AC95C8()
{
  return sub_224AC893C();
}

uint64_t sub_224AC95D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return sub_224AC8D3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 0xAu);
}

char *sub_224AC9600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_224AC9088(a1, a2, a3, a4, a5, a6, a7, a8, 0xAu);
}

uint64_t sub_224AC9628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return sub_224AC8630(a1, a2, a3, a4, a5, a6, a7, a8, a9, 6u);
}

uint64_t sub_224AC9654()
{
  return sub_224AC893C();
}

uint64_t sub_224AC965C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return sub_224AC8D3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 6u);
}

char *sub_224AC968C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_224AC9088(a1, a2, a3, a4, a5, a6, a7, a8, 6u);
}

uint64_t sub_224AC96B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return sub_224AC8630(a1, a2, a3, a4, a5, a6, a7, a8, a9, 2u);
}

uint64_t sub_224AC96E0()
{
  return sub_224AC893C();
}

uint64_t sub_224AC96E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return sub_224AC8D3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 2u);
}

char *sub_224AC9718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_224AC9088(a1, a2, a3, a4, a5, a6, a7, a8, 2u);
}

uint64_t sub_224AC9740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return sub_224AC8630(a1, a2, a3, a4, a5, a6, a7, a8, a9, 8u);
}

uint64_t sub_224AC976C()
{
  return sub_224AC893C();
}

uint64_t sub_224AC9774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return sub_224AC8D3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 8u);
}

char *sub_224AC97A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_224AC9088(a1, a2, a3, a4, a5, a6, a7, a8, 8u);
}

uint64_t sub_224AC97CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return sub_224AC8630(a1, a2, a3, a4, a5, a6, a7, a8, a9, 4u);
}

uint64_t sub_224AC97F8()
{
  return sub_224AC893C();
}

uint64_t sub_224AC9800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return sub_224AC8D3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 4u);
}

char *sub_224AC9830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_224AC9088(a1, a2, a3, a4, a5, a6, a7, a8, 4u);
}

uint64_t sub_224AC9858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return sub_224AC8630(a1, a2, a3, a4, a5, a6, a7, a8, a9, 0);
}

uint64_t sub_224AC9880()
{
  return sub_224AC893C();
}

uint64_t sub_224AC9888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return sub_224AC8D3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 0);
}

char *sub_224AC98B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_224AC9088(a1, a2, a3, a4, a5, a6, a7, a8, 0);
}

void sub_224AC98D8(void (**a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a2 + 8);
  (*a1)(a5, v10);
  if (*(_DWORD *)(v10 + 40) || *(_DWORD *)(v10 + 36)) {
    ((void (*)(uint64_t, uint64_t, uint64_t, void))a1[(*(_DWORD *)(a3 + 64) - 1) + 1])(a5 + 6068, a5, v10, 0);
  }
  if (*(_DWORD *)(v10 + 44) || *(_DWORD *)(v10 + 36)) {
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a1[(*(_DWORD *)(a3 + 64) - 1) + 1])(a5 + 12136, a5, v10, 1);
  }
  int v11 = *(_DWORD *)(v10 + 4);
  if (v11)
  {
    sub_224AC9B18((unsigned __int8 *)(v10 + 8), v11, (char *)a4);
  }
  else if (*(_DWORD *)(v10 + 36))
  {
    *(_OWORD *)(a4 + 224) = 0u;
    *(_OWORD *)(a4 + 240) = 0u;
    *(_OWORD *)(a4 + 192) = 0u;
    *(_OWORD *)(a4 + 208) = 0u;
    *(_OWORD *)(a4 + 160) = 0u;
    *(_OWORD *)(a4 + 176) = 0u;
    *(_OWORD *)(a4 + 128) = 0u;
    *(_OWORD *)(a4 + 144) = 0u;
    *(_OWORD *)(a4 + 96) = 0u;
    *(_OWORD *)(a4 + 112) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  int v12 = *(_DWORD *)(v10 + 40);
  if (v12) {
    sub_224AC9B18((unsigned __int8 *)(v10 + 48), v12, (char *)(a4 + 256));
  }
  int v13 = *(_DWORD *)(v10 + 44);
  if (v13) {
    sub_224AC9B18((unsigned __int8 *)(v10 + 68), v13, (char *)(a4 + 512));
  }
  if (!*(_DWORD *)(v10 + 4))
  {
    uint64_t v14 = *(void *)(a2 + 40);
    size_t v15 = v14 * *(int *)(a2 + 60);
    int v16 = *(char **)(a2 + 16);
    if ((v15 & 0x8000000000000000) != 0)
    {
      int v16 = &v16[v15 - v14];
      int8x8_t v17 = (const void *)(*(void *)(a3 + 16) + v15 - v14);
      size_t v15 = -(uint64_t)v15;
    }
    else
    {
      int8x8_t v17 = *(const void **)(a3 + 16);
    }
    memcpy(v16, v17, v15);
  }
  int v18 = *(_DWORD *)(a3 + 64);
  if (v18 && !*(_DWORD *)(v10 + 36))
  {
    uint64_t v19 = *(void *)(a2 + 48);
    char v20 = v18 == 1;
    int v21 = *(_DWORD *)(a2 + 60);
    if (v20) {
      ++v21;
    }
    size_t v22 = v19 * (v21 >> v20);
    int v23 = *(_DWORD *)(v10 + 40);
    if ((v22 & 0x8000000000000000) != 0)
    {
      if (!v23) {
        memcpy((void *)(*(void *)(a2 + 24) + v22 - v19), (const void *)(*(void *)(a3 + 24) + v22 - v19), -(uint64_t)v22);
      }
      if (*(_DWORD *)(v10 + 44)) {
        return;
      }
      int32x4_t v24 = (void *)(*(void *)(a2 + 32) + v22 - v19);
      uint16x8_t v25 = (const void *)(*(void *)(a3 + 32) + v22 - v19);
      size_t v26 = -(uint64_t)v22;
    }
    else
    {
      if (!v23) {
        memcpy(*(void **)(a2 + 24), *(const void **)(a3 + 24), v22);
      }
      if (*(_DWORD *)(v10 + 44)) {
        return;
      }
      int32x4_t v24 = *(void **)(a2 + 32);
      uint16x8_t v25 = *(const void **)(a3 + 32);
      size_t v26 = v22;
    }
    memcpy(v24, v25, v26);
  }
}

double sub_224AC9B18(unsigned __int8 *a1, int a2, char *__b)
{
  if (a2)
  {
    memset(__b, a1[1], *a1);
    uint64_t v6 = (a2 - 1);
    if (a2 >= 2)
    {
      uint64_t v7 = 0;
      int64x2_t v8 = vdupq_n_s64(2uLL);
      do
      {
        int v9 = 0;
        uint64_t v10 = &a1[2 * v7];
        uint64_t v11 = *v10;
        int v12 = v10[1];
        ++v7;
        int v13 = &a1[2 * v7];
        uint64_t v14 = *v13 - v11;
        unsigned int v15 = (v13[1] - v12) * (((v14 >> 1) + 0x10000) / v14);
        uint64x2_t v16 = (uint64x2_t)vdupq_n_s64(v14 - 1);
        uint64_t v17 = (v14 + 1) & 0xFFFFFFFE;
        int v18 = &__b[v11 + 1];
        int64x2_t v19 = (int64x2_t)xmmword_224B15990;
        do
        {
          int v20 = v15 * v9 + 0x8000;
          int32x2_t v21 = vmovn_s64((int64x2_t)vcgeq_u64(v16, (uint64x2_t)v19));
          if (v21.i8[0]) {
            *(v18 - 1) = v12 + BYTE2(v20);
          }
          if (v21.i8[4]) {
            *int v18 = v12 + ((v20 + v15) >> 16);
          }
          v9 += 2;
          int64x2_t v19 = vaddq_s64(v19, v8);
          v18 += 2;
          v17 -= 2;
        }
        while (v17);
      }
      while (v7 != v6);
    }
    size_t v22 = &a1[2 * (int)v6];
    uint64_t v23 = *v22;
    int v24 = v22[1];
    memset(&__b[v23], v24, 256 - v23);
  }
  else
  {
    double result = 0.0;
    *((_OWORD *)__b + 14) = 0u;
    *((_OWORD *)__b + 15) = 0u;
    *((_OWORD *)__b + 12) = 0u;
    *((_OWORD *)__b + 13) = 0u;
    *((_OWORD *)__b + 10) = 0u;
    *((_OWORD *)__b + 11) = 0u;
    *((_OWORD *)__b + 8) = 0u;
    *((_OWORD *)__b + 9) = 0u;
    *((_OWORD *)__b + 6) = 0u;
    *((_OWORD *)__b + 7) = 0u;
    *((_OWORD *)__b + 4) = 0u;
    *((_OWORD *)__b + 5) = 0u;
    *((_OWORD *)__b + 2) = 0u;
    *((_OWORD *)__b + 3) = 0u;
    *(_OWORD *)__b = 0u;
    *((_OWORD *)__b + 1) = 0u;
  }
  return result;
}

uint64_t sub_224AC9C7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6 = a5;
  int v10 = *(_DWORD *)(a3 + 64);
  int v11 = v10 == 1;
  int v12 = v10 != 3;
  if (v10 == 3) {
    int v13 = *(_DWORD *)(a2 + 56);
  }
  else {
    int v13 = *(_DWORD *)(a2 + 56) + 1;
  }
  uint64_t v14 = *(_DWORD **)(a2 + 8);
  BOOL v33 = *(_DWORD *)(*(void *)a2 + 24) == 0;
  uint64_t v15 = 32 * a6;
  uint64_t v16 = *(void *)(a3 + 16) + *(void *)(a3 + 40) * v15;
  uint64_t v37 = v16;
  uint64_t v34 = result;
  if (v14[1])
  {
    int v35 = a6;
    double result = (*(uint64_t (**)(uint64_t, uint64_t, void, _DWORD *))(result + 32))(*(void *)(a2 + 16) + *(void *)(a2 + 40) * v15, v16, *(void *)(a2 + 40), v14);
    a6 = v35;
    uint64_t v6 = a5;
    int v12 = v10 != 3;
    uint64_t v16 = v37;
  }
  uint64_t v18 = a4;
  uint64_t v36 = v6;
  int v19 = a6;
  if (v14[10] || v14[11] || v14[9])
  {
    int v20 = v13 >> v12;
    char v21 = v10 == 1;
    int v22 = *(_DWORD *)(a2 + 60) - v15;
    if (v22 >= 32) {
      int v22 = 32;
    }
    uint64_t v23 = ((v22 + v11) >> v11);
    if ((*(_DWORD *)(a2 + 56) & v12) != 0 && (int)v23 >= 1)
    {
      int v24 = (v22 + v11) >> v11;
      uint64_t v25 = v16;
      do
      {
        *(unsigned char *)(v25 + *(int *)(a2 + 56)) = *(unsigned char *)(v25 + *(int *)(a2 + 56) - 1);
        v25 += *(void *)(a3 + 40) << v21;
        --v24;
      }
      while (v24);
    }
    uint64_t v26 = (*(void *)(a2 + 48) * v15) >> v21;
    uint64_t v27 = v20;
    if (v14[9])
    {
      uint64_t v28 = 0;
      char v29 = 1;
      do
      {
        char v30 = v29;
        double result = (*(uint64_t (**)(uint64_t, uint64_t, void, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, int, uint64_t, void, unint64_t))(v34 + 8 * (*(_DWORD *)(a3 + 64) - 1) + 40))(*(void *)(a2 + 8 * (v28 + 1) + 16) + v26, *(void *)(a3 + 8 * (v28 + 1) + 16) + v26, *(void *)(a3 + 48), v14, v27, v18, v36 + 6068 * (v28 + 1), v23, v19, v16, *(void *)(a3 + 40), __PAIR64__(v33, v28));
        uint64_t v16 = v37;
        char v29 = 0;
        uint64_t v28 = 1;
      }
      while ((v30 & 1) != 0);
    }
    else
    {
      uint64_t v31 = 0;
      do
      {
        while (1)
        {
          uint64_t v32 = v31;
          if (!v14[v31 + 10]) {
            break;
          }
          ++v31;
          double result = (*(uint64_t (**)(uint64_t, uint64_t, void, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, int, uint64_t, void, unint64_t))(v34 + 8 * (*(_DWORD *)(a3 + 64) - 1) + 40))(*(void *)(a2 + 8 * (v32 + 1) + 16) + v26, *(void *)(a3 + 8 * (v32 + 1) + 16) + v26, *(void *)(a3 + 48), v14, v27, v18 + ((v32 + 1) << 8), v36 + 6068 * (v32 + 1), v23, v19, v16, *(void *)(a3 + 40), __PAIR64__(v33, v32));
          uint64_t v16 = v37;
          if (v32) {
            return result;
          }
        }
        ++v31;
      }
      while (!v32);
    }
  }
  return result;
}

int8x8_t *sub_224AC9F2C()
{
  uint64_t v0 = (uint8x8_t *)MEMORY[0x270FA5388]();
  char v8 = v6;
  uint64_t v9 = v5;
  uint64_t v10 = v3;
  uint64_t v83 = v2;
  int v11 = v1;
  uint64_t v85 = v12;
  int v13 = (int8x8_t *)v0;
  uint64_t v14 = 0;
  v123[1009] = *MEMORY[0x263EF8340];
  uint64_t v87 = v0;
  uint64_t v118 = 0;
  long long v117 = 0u;
  long long v116 = 0u;
  uint64_t v114 = 0;
  long long v113 = 0u;
  long long v112 = 0u;
  uint64_t v15 = &v122;
  uint64_t v16 = v123;
  do
  {
    *(void *)((char *)&v116 + v14) = v16;
    *(void *)((char *)&v112 + v14) = v15;
    v14 += 8;
    v15 += 100;
    v16 += 200;
  }
  while (v14 != 40);
  uint64_t v17 = 0;
  int v108 = 0;
  char v107 = 0;
  int v109 = 0;
  uint64_t v105 = 0;
  uint64_t v104 = 0;
  uint64_t v106 = 0;
  int v102 = 0;
  uint64_t v101 = 0;
  uint64_t v103 = 0;
  uint64_t v18 = (int16x8_t *)&v110;
  unsigned int v99 = 0;
  unsigned int v98 = 0;
  int v19 = (int32x4_t *)&v111;
  unsigned int v100 = 0;
  do
  {
    *(int32x4_t **)((char *)&v104 + v17) = v19;
    *(int16x8_t **)((char *)&v98 + v17) = v18;
    v17 += 8;
    v18 += 50;
    v19 += 100;
  }
  while (v17 != 24);
  uint64_t v20 = 0;
  v93.i64[0] = (uint64_t)&v96;
  v93.i64[1] = (uint64_t)&v97;
  v92.i64[0] = (uint64_t)&v94;
  v92.i64[1] = (uint64_t)&v95;
  memset(v89, 0, sizeof(v89));
  char v21 = &v90;
  int v22 = &v91;
  memset(v88, 0, sizeof(v88));
  do
  {
    *(void *)((char *)v89 + v20) = v22;
    *(void *)((char *)v88 + v20) = v21;
    v20 += 8;
    v21 += 800;
    v22 += 1600;
  }
  while (v20 != 32);
  int v84 = v4;
  long long v121 = 0uLL;
  uint64_t v120 = 0;
  memset(v115, 0, 40);
  v119[0] = v116;
  v119[1] = v116;
  uint64_t v86 = v5;
  if ((v6 & 4) == 0)
  {
    uint64_t v120 = v116;
    *(void *)&long long v121 = v116;
    *((void *)&v121 + 1) = v116;
    v115[0] = v112;
    v115[1] = v112;
    v115[2] = v112;
    v115[3] = v112;
    v115[4] = v112;
    char v107 = v104;
    int v108 = v104;
    int v109 = v104;
    uint64_t v101 = v98;
    int v102 = v98;
    uint64_t v103 = v98;
    sub_224A76524(v104, v98, (int32x4_t *)v116, (int8x16_t *)v112, v1, (int8x8_t *)v0, v3, v6, 0.0, v7);
    sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v9 + 4));
    uint64_t v24 = *(void *)&v89[0];
    uint64_t v25 = *(void *)&v88[0];
    v89[0] = *(_OWORD *)((char *)v89 + 8);
    double v26 = *((double *)v88 + 1);
    v88[0] = *(_OWORD *)((char *)v88 + 8);
    *(void *)&v89[1] = *((void *)&v89[1] + 1);
    *((void *)&v89[1] + 1) = v24;
    *(void *)&v88[1] = *((void *)&v88[1] + 1);
    *((void *)&v88[1] + 1) = v25;
    if (v84 >= 2)
    {
      *((void *)&v121 + 1) = *((void *)&v116 + 1);
      v115[4] = *((void *)&v112 + 1);
      int v109 = v105;
      uint64_t v103 = v99;
      sub_224A76524(v105, v99, *((int32x4_t **)&v116 + 1), *((int8x16_t **)&v112 + 1), v11 + 1, (int8x8_t *)((char *)v13 + v85), v10, v8, v26, v23);
      sub_224ACABC0((uint64_t)v119, (uint64_t)v115, (int32x4_t *)v93.i64[1], (int16x8_t *)v92.i64[1], v10, *(_DWORD *)v9);
      int8x16_t v92 = vextq_s8(v92, v92, 8uLL);
      int8x16_t v93 = vextq_s8(v93, v93, 8uLL);
      sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v9 + 4));
      uint64_t v28 = *(void *)&v89[0];
      uint64_t v29 = *(void *)&v88[0];
      v89[0] = *(_OWORD *)((char *)v89 + 8);
      double v30 = *((double *)v88 + 1);
      v88[0] = *(_OWORD *)((char *)v88 + 8);
      *(void *)&v89[1] = *((void *)&v89[1] + 1);
      *((void *)&v89[1] + 1) = v28;
      *(void *)&v88[1] = *((void *)&v88[1] + 1);
      *((void *)&v88[1] + 1) = v29;
      if (v84 != 2)
      {
        int v13 = (int8x8_t *)((char *)v13 + v85 + v85);
        uint64_t v31 = (int32x4_t *)*((void *)&v117 + 1);
        long long v121 = v117;
        uint64_t v32 = (int8x16_t *)*((void *)&v113 + 1);
        *(_OWORD *)&v115[3] = v113;
        int v109 = v106;
        uint64_t v103 = v100;
        sub_224A76524(v106, v100, (int32x4_t *)v117, (int8x16_t *)v113, v11 + 2, v13, v10, v8, v30, v27);
        sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v9 + 4));
        uint64_t v34 = *(void *)&v89[0];
        uint64_t v35 = *(void *)&v88[0];
        v89[0] = *(_OWORD *)((char *)v89 + 8);
        double v36 = *((double *)v88 + 1);
        v88[0] = *(_OWORD *)((char *)v88 + 8);
        *(void *)&v89[1] = *((void *)&v89[1] + 1);
        *((void *)&v89[1] + 1) = v34;
        *(void *)&v88[1] = *((void *)&v88[1] + 1);
        *((void *)&v88[1] + 1) = v35;
        if (v84 < 4)
        {
LABEL_11:
          *((void *)&v121 + 1) = v121;
          v115[4] = v115[3];
          int v109 = v108;
          uint64_t v103 = v102;
          sub_224ACABC0((uint64_t)v119, (uint64_t)v115, (int32x4_t *)v93.i64[1], (int16x8_t *)v92.i64[1], v10, *(_DWORD *)v9);
          sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v9 + 4));
          sub_224ACAC2C(&v87, v85, v93.i64, v92.i64, (uint64_t *)v89, (uint64_t *)v88, v10, 2u, *(_WORD *)(v9 + 8), *(__int16 *)(v9 + 8) >> 15, *(_WORD *)(v9 + 10));
LABEL_14:
          *(void *)&long long v121 = v120;
          *((void *)&v121 + 1) = v120;
          v115[3] = v115[2];
          v115[4] = v115[2];
          int v109 = v108;
          uint64_t v103 = v102;
          sub_224ACABC0((uint64_t)v119, (uint64_t)v115, (int32x4_t *)v93.i64[1], (int16x8_t *)v92.i64[1], v10, *(_DWORD *)v9);
          sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v9 + 4));
          uint64_t v55 = *(void *)&v89[0];
          uint64_t v56 = *(void *)&v88[0];
          v89[0] = *(_OWORD *)((char *)v89 + 8);
          v88[0] = *(_OWORD *)((char *)v88 + 8);
          *(void *)&v89[1] = *((void *)&v89[1] + 1);
          *((void *)&v89[1] + 1) = v55;
          unsigned int v57 = 1;
          *(void *)&v88[1] = *((void *)&v88[1] + 1);
          *((void *)&v88[1] + 1) = v56;
          return sub_224ACAC2C(&v87, v85, v93.i64, v92.i64, (uint64_t *)v89, (uint64_t *)v88, v10, v57, *(_WORD *)(v9 + 8), *(__int16 *)(v9 + 8) >> 15, *(_WORD *)(v9 + 10));
        }
        sub_224A76524(v109, v103, v31, v32, v11 + 3, (int8x8_t *)((char *)v13 + v85), v10, v8, v36, v33);
        sub_224ACABC0((uint64_t)v119, (uint64_t)v115, (int32x4_t *)v93.i64[1], (int16x8_t *)v92.i64[1], v10, *(_DWORD *)v9);
        sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v9 + 4));
        sub_224ACAC2C(&v87, v85, v93.i64, v92.i64, (uint64_t *)v89, (uint64_t *)v88, v10, 2u, *(_WORD *)(v9 + 8), *(__int16 *)(v9 + 8) >> 15, *(_WORD *)(v9 + 10));
        if (v84 != 4)
        {
          int v59 = v84;
          char v63 = v8;
          int v64 = -4;
          uint64_t v65 = 4;
LABEL_19:
          int v66 = &v11[v65];
          *(void *)&long long v121 = v118;
          v115[3] = v114;
          uint64_t v82 = (int8x8_t *)((char *)v83 + 6 * v85);
          while (1)
          {
            sub_224A76524(v109, v103, (int32x4_t *)v121, (int8x16_t *)v115[3], v66, (int8x8_t *)((char *)v13 + 2 * v85), v10, v63, v62, v58);
            sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v9 + 4));
            uint64_t v68 = *(void *)&v89[0];
            uint64_t v69 = *(void *)&v88[0];
            v89[0] = *(_OWORD *)((char *)v89 + 8);
            double v70 = *((double *)v88 + 1);
            v88[0] = *(_OWORD *)((char *)v88 + 8);
            *(void *)&v89[1] = *((void *)&v89[1] + 1);
            *((void *)&v89[1] + 1) = v68;
            *(void *)&v88[1] = *((void *)&v88[1] + 1);
            *((void *)&v88[1] + 1) = v69;
            if ((v59 + v64) < 2) {
              goto LABEL_11;
            }
            sub_224A76524(v109, v103, *((int32x4_t **)&v121 + 1), (int8x16_t *)v115[4], v66 + 1, (int8x8_t *)((char *)v13 + 3 * v85), v10, v63, v70, v67);
            sub_224ACABC0((uint64_t)v119, (uint64_t)v115, (int32x4_t *)v93.i64[1], (int16x8_t *)v92.i64[1], v10, *(_DWORD *)v86);
            sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v86 + 4));
            uint64_t v9 = v86;
            sub_224ACAC2C(&v87, v85, v93.i64, v92.i64, (uint64_t *)v89, (uint64_t *)v88, v10, 2u, *(_WORD *)(v86 + 8), *(__int16 *)(v86 + 8) >> 15, *(_WORD *)(v86 + 10));
            v64 -= 2;
            v66 += 2;
            int v13 = (int8x8_t *)((char *)v13 + v85 + v85);
            if (!(v59 + v64))
            {
              if ((v63 & 8) == 0) {
                goto LABEL_23;
              }
              sub_224A76524(v109, v103, (int32x4_t *)v121, (int8x16_t *)v115[3], 0, v82, v10, v63, v62, v58);
              sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v86 + 4));
              uint64_t v74 = *(void *)&v89[0];
              uint64_t v75 = *(void *)&v88[0];
              v89[0] = *(_OWORD *)((char *)v89 + 8);
              v88[0] = *(_OWORD *)((char *)v88 + 8);
              *(void *)&v89[1] = *((void *)&v89[1] + 1);
              *((void *)&v89[1] + 1) = v74;
              *(void *)&v88[1] = *((void *)&v88[1] + 1);
              *((void *)&v88[1] + 1) = v75;
              sub_224A76524(v109, v103, *((int32x4_t **)&v121 + 1), (int8x16_t *)v115[4], 0, (int8x8_t *)((char *)v82 + v85), v10, v63, *(double *)v88, v76);
              goto LABEL_24;
            }
          }
        }
      }
      goto LABEL_23;
    }
LABEL_13:
    *((void *)&v121 + 1) = v121;
    v115[4] = v115[3];
    int v109 = v108;
    uint64_t v103 = v102;
    sub_224ACABC0((uint64_t)v119, (uint64_t)v115, (int32x4_t *)v93.i64[1], (int16x8_t *)v92.i64[1], v10, *(_DWORD *)v9);
    int8x16_t v92 = vextq_s8(v92, v92, 8uLL);
    int8x16_t v93 = vextq_s8(v93, v93, 8uLL);
    sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v9 + 4));
    uint64_t v53 = *(void *)&v89[0];
    uint64_t v54 = *(void *)&v88[0];
    v89[0] = *(_OWORD *)((char *)v89 + 8);
    v88[0] = *(_OWORD *)((char *)v88 + 8);
    *(void *)&v89[1] = *((void *)&v89[1] + 1);
    *((void *)&v89[1] + 1) = v53;
    *(void *)&v88[1] = *((void *)&v88[1] + 1);
    *((void *)&v88[1] + 1) = v54;
    goto LABEL_14;
  }
  uint64_t v37 = (int32x4_t *)*((void *)&v116 + 1);
  int v80 = (int32x4_t *)v117;
  uint64_t v120 = *((void *)&v116 + 1);
  long long v121 = v117;
  int v38 = (int8x16_t *)*((void *)&v112 + 1);
  v115[0] = v112;
  *(_OWORD *)&v115[1] = v112;
  char v78 = (int32x4_t *)*((void *)&v117 + 1);
  char v77 = (int8x16_t *)*((void *)&v113 + 1);
  char v79 = (int8x16_t *)v113;
  *(_OWORD *)&v115[3] = v113;
  int v39 = v105;
  char v107 = v104;
  int v108 = v105;
  int v40 = v106;
  int v109 = v106;
  int v41 = v99;
  uint64_t v101 = v98;
  int v102 = v99;
  uint64_t v81 = v1;
  uint64_t v42 = v100;
  uint64_t v103 = v100;
  sub_224A76524(v104, v98, (int32x4_t *)v116, (int8x16_t *)v112, 0, v2, v3, v6, 0.0, v7);
  int v43 = v37;
  uint64_t v9 = v86;
  sub_224A76524(v39, v41, v43, v38, 0, (int8x8_t *)((char *)v83 + v85), v10, v8, v44, v45);
  int v46 = v42;
  int v11 = v81;
  sub_224A76524(v40, v46, v80, v79, v81, v13, v10, v8, v47, v48);
  sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v86 + 4));
  uint64_t v50 = *(void *)&v89[0];
  uint64_t v51 = *(void *)&v88[0];
  v89[0] = *(_OWORD *)((char *)v89 + 8);
  double v52 = *((double *)v88 + 1);
  v88[0] = *(_OWORD *)((char *)v88 + 8);
  *(void *)&v89[1] = *((void *)&v89[1] + 1);
  *((void *)&v89[1] + 1) = v50;
  *(void *)&v88[1] = *((void *)&v88[1] + 1);
  *((void *)&v88[1] + 1) = v51;
  if (v84 < 2) {
    goto LABEL_13;
  }
  sub_224A76524(v109, v103, v78, v77, v81 + 1, (int8x8_t *)((char *)v13 + v85), v10, v8, v52, v49);
  sub_224ACABC0((uint64_t)v119, (uint64_t)v115, (int32x4_t *)v93.i64[1], (int16x8_t *)v92.i64[1], v10, *(_DWORD *)v86);
  int8x16_t v92 = vextq_s8(v92, v92, 8uLL);
  int8x16_t v93 = vextq_s8(v93, v93, 8uLL);
  sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v86 + 4));
  int v59 = v84;
  uint64_t v60 = *(void *)&v89[0];
  uint64_t v61 = *(void *)&v88[0];
  v89[0] = *(_OWORD *)((char *)v89 + 8);
  double v62 = *((double *)v88 + 1);
  v88[0] = *(_OWORD *)((char *)v88 + 8);
  *(void *)&v89[1] = *((void *)&v89[1] + 1);
  *((void *)&v89[1] + 1) = v60;
  *(void *)&v88[1] = *((void *)&v88[1] + 1);
  *((void *)&v88[1] + 1) = v61;
  if (v84 != 2)
  {
    char v63 = v8;
    int v64 = -2;
    uint64_t v65 = 2;
    goto LABEL_19;
  }
LABEL_23:
  *(void *)&long long v121 = v120;
  *((void *)&v121 + 1) = v120;
  v115[3] = v115[2];
  v115[4] = v115[2];
  int v109 = v108;
  uint64_t v103 = v102;
  sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v9 + 4));
  uint64_t v71 = *(void *)&v89[0];
  uint64_t v72 = *(void *)&v88[0];
  v89[0] = *(_OWORD *)((char *)v89 + 8);
  v88[0] = *(_OWORD *)((char *)v88 + 8);
  *(void *)&v89[1] = *((void *)&v89[1] + 1);
  *((void *)&v89[1] + 1) = v71;
  *(void *)&v88[1] = *((void *)&v88[1] + 1);
  *((void *)&v88[1] + 1) = v72;
  int v109 = v108;
  uint64_t v103 = v102;
LABEL_24:
  sub_224ACABC0((uint64_t)v119, (uint64_t)v115, (int32x4_t *)v93.i64[1], (int16x8_t *)v92.i64[1], v10, *(_DWORD *)v9);
  sub_224ACAB5C((uint64_t)&v107, (uint64_t)&v101, *((int32x4_t **)&v89[1] + 1), *((int16x8_t **)&v88[1] + 1), v10, *(_DWORD *)(v9 + 4));
  unsigned int v57 = 2;
  return sub_224ACAC2C(&v87, v85, v93.i64, v92.i64, (uint64_t *)v89, (uint64_t *)v88, v10, v57, *(_WORD *)(v9 + 8), *(__int16 *)(v9 + 8) >> 15, *(_WORD *)(v9 + 10));
}

int32x4_t *sub_224ACAB5C(uint64_t a1, uint64_t a2, int32x4_t *a3, int16x8_t *a4, int a5, unsigned int a6)
{
  double result = sub_224AAD690((int32x4_t **)a1, (int16x8_t **)a2, a3, a4, a5, a6, 0xFFu);
  uint64_t v9 = 0;
  uint64_t v10 = *(int32x4_t **)a1;
  int v11 = *(int16x8_t **)a2;
  do
  {
    *(void *)(a1 + v9) = *(void *)(a1 + v9 + 8);
    *(void *)(a2 + v9) = *(void *)(a2 + v9 + 8);
    v9 += 8;
  }
  while (v9 != 16);
  *(void *)(a1 + 16) = v10;
  *(void *)(a2 + 16) = v11;
  return result;
}

int32x4_t *sub_224ACABC0(uint64_t a1, uint64_t a2, int32x4_t *a3, int16x8_t *a4, int a5, unsigned int a6)
{
  double result = sub_224AAD7F4((int32x4_t **)a1, (int16x8_t **)a2, a3, a4, a5, a6, 0xFFu);
  uint64_t v9 = 0;
  uint64_t v10 = *(int32x4_t **)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(int16x8_t **)a2;
  uint64_t v13 = *(void *)(a2 + 8);
  do
  {
    *(void *)(a1 + v9) = *(void *)(a1 + v9 + 16);
    *(void *)(a2 + v9) = *(void *)(a2 + v9 + 16);
    v9 += 8;
  }
  while (v9 != 24);
  *(void *)(a1 + 24) = v10;
  *(void *)(a2 + 24) = v12;
  *(void *)(a1 + 32) = v11;
  *(void *)(a2 + 32) = v13;
  return result;
}

int8x8_t *sub_224ACAC2C(uint8x8_t **a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t a7, unsigned int a8, __int16 a9, __int16 a10, __int16 a11)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  sub_224A769C8(v27, *a1, a2, a3, a4, a7, a8);
  sub_224A76630(v26, *a1, a2, a5, a6, a7, a8);
  v25[0] = a9;
  v25[1] = a11;
  double result = sub_224A76CB0((int8x8_t *)*a1, a2, *a1, a2, v27, v26, a7, a8, v25);
  uint64_t v20 = 0;
  *a1 = (uint8x8_t *)((char *)*a1 + a8 * a2);
  uint64_t v21 = *a4;
  uint64_t v22 = *a3;
  *a3 = a3[1];
  *a4 = a4[1];
  a3[1] = v22;
  a4[1] = v21;
  uint64_t v23 = *a5;
  uint64_t v24 = *a6;
  do
  {
    a5[v20] = a5[v20 + 1];
    a6[v20] = a6[v20 + 1];
    ++v20;
  }
  while (v20 != 3);
  a5[3] = v23;
  a6[3] = v24;
  return result;
}

uint8x8_t *sub_224ACAD98()
{
  uint64_t v0 = (uint8x8_t *)MEMORY[0x270FA5388]();
  char v7 = v4;
  uint64_t v9 = v8;
  int v11 = v10;
  int v12 = v3;
  uint64_t v13 = v2;
  uint64_t v14 = v1;
  uint64_t v16 = v15;
  uint64_t v17 = (int8x8_t *)v0;
  uint64_t v18 = 0;
  v78[609] = *MEMORY[0x263EF8340];
  int v64 = v0;
  long long v74 = 0uLL;
  BOOL v73 = 0;
  long long v70 = 0uLL;
  uint64_t v69 = 0;
  int v19 = (int8x16_t *)&v77;
  uint64_t v20 = (uint32x4_t *)v78;
  do
  {
    *(uint32x4_t **)((char *)&v73 + v18) = v20;
    *(int8x16_t **)((char *)&v69 + v18) = v19;
    v18 += 8;
    v19 += 50;
    v20 += 100;
  }
  while (v18 != 24);
  uint64_t v21 = 0;
  memset(v66, 0, 24);
  uint64_t v22 = &v67;
  memset(v65, 0, 24);
  uint64_t v23 = &v68;
  do
  {
    *(void *)((char *)v66 + v21) = v23;
    *(void *)((char *)v65 + v21) = v22;
    v21 += 8;
    v22 += 800;
    v23 += 1600;
  }
  while (v21 != 24);
  uint64_t v71 = 0;
  long long v72 = 0uLL;
  long long v76 = 0uLL;
  uint64_t v75 = v73;
  if ((v4 & 4) != 0)
  {
    double v62 = (uint32x4_t *)v74;
    long long v76 = v74;
    uint64_t v71 = v69;
    uint64_t v60 = (int8x16_t *)v70;
    long long v72 = v70;
    sub_224A76348(v73, v69, 0, v2, v3, v4, *(double *)&v70, v6);
    uint64_t v61 = v13;
    sub_224A76348(v62, v60, 0, (int8x8_t *)((char *)v13 + v16), v12, v7, *(double *)&v60, v34);
    uint64_t v35 = *(int32x4_t **)&v66[1];
    double v36 = *(int16x8_t **)&v65[1];
    unsigned int v37 = *(_DWORD *)(v9 + 4);
    sub_224A76348(*((uint32x4_t **)&v76 + 1), *((int8x16_t **)&v72 + 1), v14, v17, v12, v7, v38, v39);
    sub_224ACAB5C((uint64_t)&v75, (uint64_t)&v71, v35, v36, v12, v37);
    uint64_t v25 = *(int32x4_t **)&v66[0];
    double v26 = *(int16x8_t **)&v65[0];
    v66[0] = *(_OWORD *)((char *)v66 + 8);
    double v41 = *((double *)v65 + 1);
    v65[0] = *(_OWORD *)((char *)v65 + 8);
    *(void *)&v66[1] = v25;
    *(void *)&v65[1] = v26;
    if (v11 >= 2)
    {
      unsigned int v44 = *(_DWORD *)(v9 + 4);
      sub_224A76348(*((uint32x4_t **)&v76 + 1), *((int8x16_t **)&v72 + 1), v14 + 1, (int8x8_t *)((char *)v17 + v16), v12, v7, v41, v40);
      sub_224ACAB5C((uint64_t)&v75, (uint64_t)&v71, v25, v26, v12, v44);
      double v30 = *(int32x4_t **)&v66[0];
      uint64_t v31 = *(int16x8_t **)&v65[0];
      int v32 = v11;
      v66[0] = *(_OWORD *)((char *)v66 + 8);
      double v33 = *((double *)v65 + 1);
      v65[0] = *(_OWORD *)((char *)v65 + 8);
      *(void *)&v66[1] = v30;
      *(void *)&v65[1] = v31;
      if (v11 != 2) {
        goto LABEL_12;
      }
      goto LABEL_15;
    }
  }
  else
  {
    *(void *)&long long v76 = v73;
    *((void *)&v76 + 1) = v73;
    uint64_t v71 = v69;
    *(void *)&long long v72 = v69;
    *((void *)&v72 + 1) = v69;
    sub_224A76348(v73, v69, v1, (int8x8_t *)v0, v3, v4, v5, v6);
    sub_224ACAB5C((uint64_t)&v75, (uint64_t)&v71, *(int32x4_t **)&v66[1], *(int16x8_t **)&v65[1], v12, *(_DWORD *)(v9 + 4));
    uint64_t v25 = *(int32x4_t **)&v66[0];
    double v26 = *(int16x8_t **)&v65[0];
    v66[0] = *(_OWORD *)((char *)v66 + 8);
    double v27 = *((double *)v65 + 1);
    v65[0] = *(_OWORD *)((char *)v65 + 8);
    *(void *)&v66[1] = v25;
    *(void *)&v65[1] = v26;
    if (v11 >= 2)
    {
      uint64_t v61 = v13;
      *((void *)&v76 + 1) = v74;
      *((void *)&v72 + 1) = v70;
      unsigned int v28 = *(_DWORD *)(v9 + 4);
      sub_224A76348((uint32x4_t *)v74, (int8x16_t *)v70, v14 + 1, (int8x8_t *)((char *)v17 + v16), v12, v7, v27, v24);
      sub_224ACAB5C((uint64_t)&v75, (uint64_t)&v71, v25, v26, v12, v28);
      double v30 = *(int32x4_t **)&v66[0];
      uint64_t v31 = *(int16x8_t **)&v65[0];
      int v32 = v11;
      v66[0] = *(_OWORD *)((char *)v66 + 8);
      double v33 = *((double *)v65 + 1);
      v65[0] = *(_OWORD *)((char *)v65 + 8);
      *(void *)&v66[1] = v30;
      *(void *)&v65[1] = v31;
      if (v11 != 2)
      {
        *((void *)&v76 + 1) = *((void *)&v74 + 1);
        *((void *)&v72 + 1) = *((void *)&v70 + 1);
LABEL_12:
        char v63 = (int8x8_t *)((char *)v61 + 6 * v16);
        int8x16_t v45 = v14 + 2;
        unsigned int v46 = v32 - 1;
        double v47 = (int8x8_t *)((char *)v17 + 2 * v16);
        do
        {
          int8x16_t v48 = *(int32x4_t **)&v66[1];
          int8x16_t v49 = *(int16x8_t **)&v65[1];
          unsigned int v50 = *(_DWORD *)(v9 + 4);
          sub_224A76348(*((uint32x4_t **)&v76 + 1), *((int8x16_t **)&v72 + 1), v45, v47, v12, v7, v33, v29);
          sub_224ACAB5C((uint64_t)&v75, (uint64_t)&v71, v48, v49, v12, v50);
          ++v45;
          sub_224ACB3D4(&v64, v16, (uint64_t *)v66, (uint64_t *)v65, v12, *(__int16 *)(v9 + 10));
          --v46;
          double v47 = (int8x8_t *)((char *)v47 + v16);
        }
        while (v46 > 1);
        double v30 = *(int32x4_t **)&v66[1];
        uint64_t v31 = *(int16x8_t **)&v65[1];
        if ((v7 & 8) != 0)
        {
          unsigned int v54 = *(_DWORD *)(v9 + 4);
          sub_224A76348(*((uint32x4_t **)&v76 + 1), *((int8x16_t **)&v72 + 1), 0, v63, v12, v7, v33, v29);
          sub_224ACAB5C((uint64_t)&v75, (uint64_t)&v71, v30, v31, v12, v54);
          sub_224ACB3D4(&v64, v16, (uint64_t *)v66, (uint64_t *)v65, v12, *(__int16 *)(v9 + 10));
          uint64_t v55 = *(int32x4_t **)&v66[1];
          uint64_t v56 = *(int16x8_t **)&v65[1];
          unsigned int v57 = *(_DWORD *)(v9 + 4);
          sub_224A76348(*((uint32x4_t **)&v76 + 1), *((int8x16_t **)&v72 + 1), 0, (int8x8_t *)((char *)v63 + v16), v12, v7, v58, v59);
          uint64_t v42 = v55;
          int v43 = v56;
          int v52 = v12;
          unsigned int v51 = v57;
          goto LABEL_17;
        }
      }
LABEL_15:
      *((void *)&v76 + 1) = v76;
      *((void *)&v72 + 1) = v72;
      sub_224ACAB5C((uint64_t)&v75, (uint64_t)&v71, v30, v31, v12, *(_DWORD *)(v9 + 4));
      sub_224ACB3D4(&v64, v16, (uint64_t *)v66, (uint64_t *)v65, v12, *(__int16 *)(v9 + 10));
      uint64_t v42 = *(int32x4_t **)&v66[1];
      int v43 = *(int16x8_t **)&v65[1];
      goto LABEL_16;
    }
  }
  *((void *)&v76 + 1) = v76;
  *((void *)&v72 + 1) = v72;
  sub_224ACAB5C((uint64_t)&v75, (uint64_t)&v71, v25, v26, v12, *(_DWORD *)(v9 + 4));
  uint64_t v42 = *(int32x4_t **)&v66[0];
  int v43 = *(int16x8_t **)&v65[0];
  v66[0] = *(_OWORD *)((char *)v66 + 8);
  v65[0] = *(_OWORD *)((char *)v65 + 8);
  *(void *)&v66[1] = v42;
  *(void *)&v65[1] = v43;
LABEL_16:
  *((void *)&v76 + 1) = v76;
  *((void *)&v72 + 1) = v72;
  unsigned int v51 = *(_DWORD *)(v9 + 4);
  int v52 = v12;
LABEL_17:
  sub_224ACAB5C((uint64_t)&v75, (uint64_t)&v71, v42, v43, v52, v51);
  return sub_224ACB3D4(&v64, v16, (uint64_t *)v66, (uint64_t *)v65, v12, *(__int16 *)(v9 + 10));
}

uint8x8_t *sub_224ACB3D4(uint8x8_t **a1, uint64_t a2, uint64_t *a3, uint64_t *a4, int a5, unsigned int a6)
{
  double result = sub_224A7685C(*a1, a3, a4, a5, a6);
  uint64_t v11 = 0;
  *a1 = (uint8x8_t *)((char *)*a1 + a2);
  uint64_t v12 = *a3;
  uint64_t v13 = *a4;
  do
  {
    a3[v11] = a3[v11 + 1];
    a4[v11] = a4[v11 + 1];
    ++v11;
  }
  while (v11 != 2);
  a3[2] = v12;
  a4[2] = v13;
  return result;
}

uint8x8_t *sub_224ACB464()
{
  uint64_t v0 = (int8x8_t *)MEMORY[0x270FA5388]();
  char v9 = v7;
  uint64_t v10 = v6;
  int v11 = v5;
  int v12 = v4;
  int v64 = v3;
  uint64_t v13 = v2;
  uint64_t v14 = v1;
  uint64_t v15 = (uint8x8_t *)v0;
  uint64_t v16 = 0;
  v83[1008] = *MEMORY[0x263EF8340];
  uint64_t v78 = 0;
  long long v77 = 0u;
  long long v76 = 0u;
  uint64_t v74 = 0;
  long long v73 = 0u;
  long long v72 = 0u;
  uint64_t v17 = &v82;
  uint64_t v18 = v83;
  do
  {
    *(void *)((char *)&v76 + v16) = v18;
    *(void *)((char *)&v72 + v16) = v17;
    v16 += 8;
    v17 += 100;
    v18 += 200;
  }
  while (v16 != 40);
  long long v81 = 0uLL;
  uint64_t v80 = 0;
  memset(v75, 0, 40);
  v67.i64[0] = (uint64_t)&v70;
  v67.i64[1] = (uint64_t)&v71;
  v66.i64[0] = (uint64_t)&v68;
  v66.i64[1] = (uint64_t)&v69;
  v79[0] = v76;
  v79[1] = v76;
  uint64_t v65 = v1;
  if ((v7 & 4) == 0)
  {
    uint64_t v80 = v76;
    *(void *)&long long v81 = v76;
    *((void *)&v81 + 1) = v76;
    *(void *)&v75[0] = v72;
    *((void *)&v75[0] + 1) = v72;
    *(void *)&v75[1] = v72;
    *((void *)&v75[1] + 1) = v72;
    *(void *)&v75[2] = v72;
    sub_224A76420((int32x4_t *)v76, (int8x16_t *)v72, v2, v0, v4, v7, 0.0, v8);
    if (v11 >= 2)
    {
      *((void *)&v81 + 1) = *((void *)&v76 + 1);
      *(void *)&v75[2] = *((void *)&v72 + 1);
      sub_224A76420(*((int32x4_t **)&v76 + 1), *((int8x16_t **)&v72 + 1), v13 + 1, (int8x8_t *)((char *)v15 + v14), v12, v9, v19, v20);
      sub_224ACABC0((uint64_t)v79, (uint64_t)v75, (int32x4_t *)v67.i64[1], (int16x8_t *)v66.i64[1], v12, *(_DWORD *)v10);
      int8x16_t v21 = v67;
      int8x16_t v22 = v66;
      int8x16_t v66 = vextq_s8(v22, v22, 8uLL);
      int8x16_t v67 = vextq_s8(v21, v21, 8uLL);
      if (v11 == 2) {
        goto LABEL_13;
      }
      uint64_t v23 = (int8x8_t *)((char *)v15 + v14 + v14);
      int8x16_t v24 = (int32x4_t *)*((void *)&v77 + 1);
      long long v81 = v77;
      uint64_t v25 = v14;
      double v26 = (int8x16_t *)*((void *)&v73 + 1);
      *(_OWORD *)((char *)&v75[1] + 8) = v73;
      sub_224A76420((int32x4_t *)v77, (int8x16_t *)v73, v13 + 2, v23, v12, v9, *(double *)v21.i64, v22);
      if (v11 <= 3)
      {
        uint64_t v29 = 2 * v25;
        uint64_t v14 = v25;
LABEL_23:
        *((void *)&v81 + 1) = v81;
        *(void *)&v75[2] = *((void *)&v75[1] + 1);
        sub_224ACABC0((uint64_t)v79, (uint64_t)v75, (int32x4_t *)v67.i64[1], (int16x8_t *)v66.i64[1], v12, *(_DWORD *)v10);
        sub_224A76B1C(v15, v14, &v67, &v66, v12, 2, *(__int16 *)(v10 + 8));
        uint64_t v15 = (uint8x8_t *)((char *)v15 + v29);
        goto LABEL_24;
      }
      sub_224A76420(v24, v26, v13 + 3, (int8x8_t *)((char *)v23 + v25), v12, v9, v27, v28);
      sub_224ACABC0((uint64_t)v79, (uint64_t)v75, (int32x4_t *)v67.i64[1], (int16x8_t *)v66.i64[1], v12, *(_DWORD *)v10);
      sub_224A76B1C(v15, v25, &v67, &v66, v12, 2, *(__int16 *)(v10 + 8));
      uint64_t v15 = (uint8x8_t *)((char *)v15 + 2 * v25);
      int8x16_t v21 = v67;
      int8x16_t v22 = v66;
      int8x16_t v66 = vextq_s8(v22, v22, 8uLL);
      int8x16_t v67 = vextq_s8(v21, v21, 8uLL);
      unsigned int v44 = v11 - 4;
      uint64_t v14 = v25;
      if (!v44) {
        goto LABEL_13;
      }
      uint64_t v34 = v10;
      uint64_t v29 = 2 * v14;
      int8x16_t v45 = v13 + 4;
      *(void *)&long long v81 = v78;
      *((void *)&v75[1] + 1) = v74;
LABEL_17:
      double v62 = (int8x8_t *)((char *)v64 + 6 * v14);
      do
      {
        sub_224A76420((int32x4_t *)v81, *((int8x16_t **)&v75[1] + 1), v45, (int8x8_t *)((char *)v23 + 2 * v14), v12, v9, *(double *)v21.i64, v22);
        if (v44 < 2)
        {
          uint64_t v10 = v34;
          uint64_t v14 = v65;
          goto LABEL_23;
        }
        sub_224A76420(*((int32x4_t **)&v81 + 1), *(int8x16_t **)&v75[2], v45 + 1, (int8x8_t *)((char *)v23 + 3 * v14), v12, v9, v53, v54);
        sub_224ACABC0((uint64_t)v79, (uint64_t)v75, (int32x4_t *)v67.i64[1], (int16x8_t *)v66.i64[1], v12, *(_DWORD *)v34);
        sub_224A76B1C(v15, v65, &v67, &v66, v12, 2, *(__int16 *)(v34 + 8));
        uint64_t v15 = (uint8x8_t *)((char *)v15 + v29);
        int8x16_t v21 = v67;
        int8x16_t v22 = v66;
        int8x16_t v66 = vextq_s8(v22, v22, 8uLL);
        int8x16_t v67 = vextq_s8(v21, v21, 8uLL);
        v45 += 2;
        uint64_t v23 = (int8x8_t *)((char *)v23 + v65 + v65);
        v44 -= 2;
      }
      while (v44);
      if ((v9 & 8) == 0)
      {
        unsigned int v46 = (int32x4_t *)v21.i64[0];
        double v47 = (int16x8_t *)v22.i64[0];
        uint64_t v10 = v34;
        uint64_t v14 = v65;
        goto LABEL_14;
      }
      sub_224A76420((int32x4_t *)v81, *((int8x16_t **)&v75[1] + 1), 0, v62, v12, v9, *(double *)v21.i64, v22);
      uint64_t v14 = v65;
      sub_224A76420(*((int32x4_t **)&v81 + 1), *(int8x16_t **)&v75[2], 0, (int8x8_t *)((char *)v62 + v65), v12, v9, v58, v59);
      unsigned int v46 = (int32x4_t *)v67.i64[1];
      double v47 = (int16x8_t *)v66.i64[1];
      uint64_t v10 = v34;
      goto LABEL_15;
    }
LABEL_9:
    *((void *)&v81 + 1) = v81;
    *(void *)&v75[2] = *((void *)&v75[1] + 1);
    sub_224ACABC0((uint64_t)v79, (uint64_t)v75, (int32x4_t *)v67.i64[1], (int16x8_t *)v66.i64[1], v12, *(_DWORD *)v10);
LABEL_24:
    int8x16_t v55 = v67;
    int8x16_t v56 = v66;
    int8x16_t v66 = vextq_s8(v56, v56, 8uLL);
    int8x16_t v67 = vextq_s8(v55, v55, 8uLL);
    *(void *)&long long v81 = v80;
    *((void *)&v81 + 1) = v80;
    *((void *)&v75[1] + 1) = *(void *)&v75[1];
    *(void *)&v75[2] = *(void *)&v75[1];
    sub_224ACABC0((uint64_t)v79, (uint64_t)v75, (int32x4_t *)v55.i64[0], (int16x8_t *)v56.i64[0], v12, *(_DWORD *)v10);
    unsigned int v48 = *(__int16 *)(v10 + 8);
    int8x16_t v49 = v15;
    uint64_t v50 = v14;
    int v51 = v12;
    int v52 = 1;
    return sub_224A76B1C(v49, v50, &v67, &v66, v51, v52, v48);
  }
  double v30 = (int32x4_t *)*((void *)&v76 + 1);
  int v63 = v5;
  uint64_t v31 = (int32x4_t *)v77;
  uint64_t v80 = *((void *)&v76 + 1);
  uint64_t v61 = (int32x4_t *)*((void *)&v77 + 1);
  long long v81 = v77;
  int v32 = v2;
  double v33 = (int8x16_t *)*((void *)&v72 + 1);
  *(void *)&v75[0] = v72;
  *(_OWORD *)((char *)v75 + 8) = v72;
  uint64_t v34 = v6;
  uint64_t v60 = (int8x16_t *)*((void *)&v73 + 1);
  uint64_t v35 = (int8x16_t *)v73;
  *(_OWORD *)((char *)&v75[1] + 8) = v73;
  sub_224A76420((int32x4_t *)v76, (int8x16_t *)v72, 0, v3, v4, v7, 0.0, v8);
  double v36 = v30;
  uint64_t v14 = v65;
  sub_224A76420(v36, v33, 0, (int8x8_t *)((char *)v64 + v65), v12, v9, v37, v38);
  int8x16_t v39 = v35;
  uint64_t v10 = v34;
  sub_224A76420(v31, v39, v32, (int8x8_t *)v15, v12, v9, v40, v41);
  if (v63 < 2) {
    goto LABEL_9;
  }
  sub_224A76420(v61, v60, v32 + 1, (int8x8_t *)((char *)v15 + v65), v12, v9, v42, v43);
  sub_224ACABC0((uint64_t)v79, (uint64_t)v75, (int32x4_t *)v67.i64[1], (int16x8_t *)v66.i64[1], v12, *(_DWORD *)v34);
  int8x16_t v21 = v67;
  int8x16_t v22 = v66;
  int8x16_t v66 = vextq_s8(v22, v22, 8uLL);
  int8x16_t v67 = vextq_s8(v21, v21, 8uLL);
  unsigned int v44 = v63 - 2;
  if (v63 != 2)
  {
    int8x16_t v45 = v32 + 2;
    *(void *)&long long v81 = v78;
    *((void *)&v75[1] + 1) = v74;
    uint64_t v29 = 2 * v65;
    uint64_t v23 = (int8x8_t *)v15;
    goto LABEL_17;
  }
LABEL_13:
  unsigned int v46 = (int32x4_t *)v21.i64[0];
  double v47 = (int16x8_t *)v22.i64[0];
LABEL_14:
  *(void *)&long long v81 = v80;
  *((void *)&v81 + 1) = v80;
  *((void *)&v75[1] + 1) = *(void *)&v75[1];
  *(void *)&v75[2] = *(void *)&v75[1];
LABEL_15:
  sub_224ACABC0((uint64_t)v79, (uint64_t)v75, v46, v47, v12, *(_DWORD *)v10);
  unsigned int v48 = *(__int16 *)(v10 + 8);
  int8x16_t v49 = v15;
  uint64_t v50 = v14;
  int v51 = v12;
  int v52 = 2;
  return sub_224A76B1C(v49, v50, &v67, &v66, v51, v52, v48);
}

_WORD *sub_224ACBB38()
{
  uint64_t v0 = (char *)MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  int v4 = v3;
  int v6 = v5;
  uint64_t v8 = v7;
  char v9 = v0;
  *(void *)&v21[27300] = *MEMORY[0x263EF8340];
  sub_224ACBCD0((uint64_t)v21, v0, v7, v10, v11, v5, v3, v12);
  sub_224ACC050();
  double result = sub_224ACC050();
  if (v4 >= 1)
  {
    int v14 = 0;
    uint64_t v15 = 0;
    int v16 = *(__int16 *)(v2 + 8);
    int v17 = *(__int16 *)(v2 + 10);
    do
    {
      if (v6 >= 1)
      {
        for (uint64_t i = 0; i != v6; v9[i++] = (char)result)
        {
          int v19 = v9[i]
              + ((*(__int16 *)&v20[256 * (unint64_t)(v14 & 0x1FFFFFF) + 2 * i] * v17
                + *(__int16 *)&v20[256 * (unint64_t)(v14 & 0x1FFFFFF) + 49152 + 2 * i] * v16
                + 1024) >> 11);
          if (v19 >= 255) {
            int v19 = 255;
          }
          double result = (_WORD *)(v19 & ~(v19 >> 31));
        }
      }
      v9 += v8;
      ++v15;
      v14 += 3;
    }
    while (v15 != v4);
  }
  return result;
}

void *sub_224ACBCD0(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, char a8)
{
  uint64_t v10 = a2;
  uint64_t v11 = a1;
  int v12 = a8 & 1;
  uint64_t v13 = v12 | (2 * v12);
  int v14 = 3 * (v12 + ((a8 & 2) >> 1)) + a6;
  uint64_t v15 = !(a8 & 1) | (2 * !(a8 & 1));
  uint64_t v16 = a1 + v15;
  int v17 = &a2[-v13];
  uint64_t v18 = (char *)(a5 - v13);
  int v58 = v12;
  uint64_t v61 = 3 * (v12 + ((a8 & 2) >> 1)) + a6;
  int v60 = a8 & 2;
  uint64_t v56 = v13;
  double v53 = &a2[-v13];
  if ((a8 & 4) != 0)
  {
    size_t v24 = v14;
    memcpy((void *)(a1 + v15), (const void *)(a5 - v13), v14);
    memcpy((void *)(v16 + 390), v18, v24);
    memcpy((void *)(v16 + 780), &v18[a3], v24);
  }
  else
  {
    int v52 = (char *)(a5 - v13);
    size_t v19 = v14;
    memcpy((void *)(a1 + v15), &a2[-v13], v14);
    memcpy((void *)(v16 + 390), v17, v19);
    size_t v20 = v19;
    uint64_t v18 = v52;
    memcpy((void *)(v16 + 780), v17, v20);
    if (v12)
    {
      __int16 v21 = *(_WORD *)(a4 + 1);
      *(unsigned char *)(v16 + 2) = *(unsigned char *)(a4 + 3);
      *(_WORD *)uint64_t v16 = v21;
      __int16 v22 = *(_WORD *)(a4 + 1);
      *(unsigned char *)(v16 + 392) = *(unsigned char *)(a4 + 3);
      *(_WORD *)(v16 + 390) = v22;
      __int16 v23 = *(_WORD *)(a4 + 1);
      *(unsigned char *)(v16 + 782) = *(unsigned char *)(a4 + 3);
      *(_WORD *)(v16 + 780) = v23;
    }
  }
  uint64_t v25 = v16 + 1170;
  uint64_t v55 = v16;
  if ((a8 & 8) != 0)
  {
    double v37 = &v18[6 * a3];
    int8x16_t v38 = &v37[a3];
    uint64_t v39 = 390 * a7;
    memcpy((void *)(v25 + v39), v37, (int)v61);
    memcpy((void *)(v25 + (int)v39 + 390), v38, (int)v61);
    int v26 = a7;
    double result = memcpy((void *)(v25 + (int)v39 + 780), v38, (int)v61);
    int v32 = v58;
  }
  else
  {
    int v26 = a7;
    double v27 = &v53[(a7 - 1) * a3];
    uint64_t v28 = 390 * a7;
    uint64_t v54 = v25 + v28;
    memcpy((void *)(v25 + v28), v27, (int)v61);
    uint64_t v29 = (unsigned char *)(v25 + (int)v28 + 390);
    memcpy(v29, v27, (int)v61);
    double v30 = (unsigned char *)(v25 + (int)v28 + 780);
    double result = memcpy(v30, v27, (int)v61);
    int v32 = v58;
    if (v58)
    {
      uint64_t v33 = a4 + 4 * (a7 - 1);
      __int16 v34 = *(_WORD *)(v33 + 1);
      *(unsigned char *)(v54 + 2) = *(unsigned char *)(v33 + 3);
      *(_WORD *)uint64_t v54 = v34;
      __int16 v35 = *(_WORD *)(v33 + 1);
      v29[2] = *(unsigned char *)(v33 + 3);
      *(_WORD *)uint64_t v29 = v35;
      __int16 v36 = *(_WORD *)(v33 + 1);
      v30[2] = *(unsigned char *)(v33 + 3);
      *(_WORD *)double v30 = v36;
    }
  }
  if (v26 >= 1)
  {
    double v40 = (char *)(v15 + v56 + v11 + 1170);
    int v41 = v26;
    do
    {
      double result = memcpy(v40, v10, (int)v61 - (int)v56);
      v10 += a3;
      v40 += 390;
      --v41;
    }
    while (v41);
  }
  if (!v60 && v26 > -6)
  {
    double v42 = (unsigned __int8 *)(v55 + (int)v61 - 1);
    uint64_t v43 = v55 + v61;
    int v44 = ((v26 + 5) & ~((v26 + 5) >> 31)) + 1;
    do
    {
      __int16 v45 = *v42;
      *(unsigned char *)(v43 + 2) = v45;
      *(_WORD *)uint64_t v43 = v45 | (v45 << 8);
      v43 += 390;
      v42 += 390;
      --v44;
    }
    while (v44);
  }
  if (v32)
  {
    if (v26 >= 1)
    {
      uint64_t v48 = v11 + 1170;
      uint64_t v49 = v26;
      uint64_t v50 = (__int16 *)(a4 + 1);
      do
      {
        __int16 v51 = *v50;
        *(unsigned char *)(v48 + 2) = *((unsigned char *)v50 + 2);
        *(_WORD *)uint64_t v48 = v51;
        v48 += 390;
        v50 += 2;
        --v49;
      }
      while (v49);
    }
  }
  else if (v26 >= -5)
  {
    int v46 = ((v26 + 5) & ~((v26 + 5) >> 31)) + 1;
    do
    {
      __int16 v47 = *(unsigned __int8 *)(v11 + v15);
      *(unsigned char *)(v11 + 2) = v47;
      *(_WORD *)uint64_t v11 = v47 | (v47 << 8);
      v11 += 390;
      --v46;
    }
    while (v46);
  }
  return result;
}

_WORD *sub_224ACC050()
{
  double result = (_WORD *)MEMORY[0x270FA5388]();
  uint64_t v6 = v1;
  v161[12673] = *MEMORY[0x263EF8340];
  uint64_t v7 = (int *)&v160 + 1;
  uint64_t v8 = (__int16 *)&v156 + 1;
  if (v4 == 25) {
    int v9 = 164;
  }
  else {
    int v9 = 455;
  }
  if (v4 == 25) {
    int v10 = 2;
  }
  else {
    int v10 = 1;
  }
  int v152 = v10;
  if (v4 == 25)
  {
    if (v2 <= -6)
    {
      int v12 = v3 + 4;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v151 = v1 + 1170;
      int v12 = v3 + 4;
      uint64_t v150 = v1;
      uint64_t v13 = (unsigned __int8 *)(v1 + 1560);
      int v14 = &v158;
      uint64_t v15 = &v154;
      do
      {
        if (v3 >= -1)
        {
          int v16 = *(unsigned __int8 *)(v151 + v11);
          int v17 = v16 * v16;
          int v18 = *(unsigned __int8 *)(v151 + v11 - 390);
          int v19 = v18 * v18;
          int v20 = *(unsigned __int8 *)(v151 + v11 - 780);
          int v21 = v20 * v20;
          int v22 = *(unsigned __int8 *)(v151 + v11 - 1170);
          int v23 = v22 * v22;
          size_t v24 = v15;
          uint64_t v25 = v14;
          int v26 = v13;
          int v27 = v3 + 2;
          do
          {
            __int16 v28 = v20 + v22;
            LOWORD(v22) = v20;
            LOWORD(v20) = v18;
            int v29 = v21 + v23;
            int v23 = v21;
            int v21 = v19;
            LOWORD(v18) = v16;
            int v19 = v17;
            int v16 = *v26;
            int v17 = v16 * v16;
            *(_WORD *)size_t v24 = v20 + v18 + v28 + v16;
            *(_DWORD *)uint64_t v25 = v21 + v19 + v29 + v16 * v16;
            v26 += 390;
            v25 += 195;
            v24 += 195;
            --v27;
          }
          while (v27);
        }
        ++v11;
        ++v13;
        int v14 = (uint64_t *)((char *)v14 + 4);
        uint64_t v15 = (int *)((char *)v15 + 2);
      }
      while (v11 != v2 + 6);
      uint64_t v6 = v150;
    }
    if (v3 >= -1)
    {
      int v46 = v153;
      __int16 v47 = (char *)&v155 + 4;
      int v48 = 2;
      uint64_t v49 = v157;
      do
      {
        if (v2 >= -1)
        {
          unint64_t v50 = 0;
          int v51 = v49[393];
          __int16 v52 = v46[393];
          int v53 = v49[392];
          __int16 v54 = v46[392];
          int v55 = v49[391];
          __int16 v56 = v46[391];
          int v57 = v49[390];
          int v58 = (__int16 *)v47;
          __int16 v59 = v46[390];
          do
          {
            __int16 v60 = v56 + v59;
            __int16 v59 = v56;
            __int16 v56 = v54;
            int v61 = v55 + v57;
            int v57 = v55;
            int v55 = v53;
            __int16 v54 = v52;
            int v53 = v51;
            __int16 v52 = *v58;
            int v51 = v49[v50 / 4 + 394];
            *(v58 - 2) = v56 + v54 + v60 + *v58;
            v49[v50 / 4 + 392] = v55 + v53 + v61 + v51;
            v50 += 4;
            ++v58;
          }
          while (4 * (v2 + 4) - 8 != v50);
        }
        v49 += 390;
        v46 += 390;
        ++v48;
        v47 += 780;
      }
      while (v48 != v12);
LABEL_37:
      uint64_t v74 = (__int16 *)&v155;
      uint64_t v75 = (unsigned int *)&v159;
      int v76 = -1;
      do
      {
        long long v77 = v75;
        uint64_t v78 = v74;
        uint64_t v79 = (v2 + 1) + 1;
        if (v2 >= -1)
        {
          do
          {
            int v80 = *v78;
            unsigned int v81 = (((*v77 * v4 - v80 * v80) & ~((int)(*v77 * v4 - v80 * v80) >> 31)) * v5 + 0x80000) >> 20;
            if (v81 >= 0xFF) {
              unsigned int v81 = 255;
            }
            int v82 = byte_224B28DC0[v81];
            *v77++ = (v9 * v80 * v82 + 2048) >> 12;
            *v78++ = v82;
            --v79;
          }
          while (v79);
        }
        v76 += v152;
        v74 += (390 << (v4 == 25));
        v75 += (390 << (v4 == 25));
      }
      while (v76 <= v3);
    }
  }
  else
  {
    if (v2 <= -4)
    {
      int v31 = v3 + 4;
    }
    else
    {
      uint64_t v30 = v1 + 390;
      int v31 = v3 + 4;
      int v32 = (unsigned __int8 *)(v1 + 1171);
      uint64_t v33 = (char *)&v158 + 4;
      __int16 v34 = (char *)&v154 + 2;
      uint64_t v35 = 1;
      do
      {
        if (v3 >= -1)
        {
          int v36 = *(unsigned __int8 *)(v30 + v35 + 390);
          int v37 = v36 * v36;
          int v38 = *(unsigned __int8 *)(v30 + v35);
          int v39 = v38 * v38;
          double v40 = v34;
          int v41 = v33;
          double v42 = v32;
          int v43 = v3 + 2;
          do
          {
            __int16 v44 = v38 + v36;
            LOWORD(v38) = v36;
            int v36 = *v42;
            int v45 = v39 + v37;
            int v39 = v37;
            int v37 = v36 * v36;
            *double v40 = v44 + v36;
            *int v41 = v45 + v36 * v36;
            v42 += 390;
            v41 += 390;
            v40 += 390;
            --v43;
          }
          while (v43);
        }
        ++v35;
        ++v32;
        v33 += 4;
        v34 += 2;
      }
      while (v35 != v2 + 5);
    }
    if (v3 >= -1)
    {
      double v62 = v153;
      int v63 = (char *)&v155 + 2;
      int v64 = 2;
      uint64_t v65 = v157;
      do
      {
        if (v2 >= -1)
        {
          uint64_t v66 = 0;
          int v67 = *((_DWORD *)v65 + 392);
          __int16 v68 = *((_WORD *)v62 + 392);
          int v69 = *((_DWORD *)v65 + 391);
          char v70 = (__int16 *)v63;
          __int16 v71 = *((_WORD *)v62 + 391);
          do
          {
            __int16 v72 = v71 + v68;
            __int16 v71 = v68;
            __int16 v68 = *v70;
            int v73 = v69 + v67;
            int v69 = v67;
            int v67 = *(_DWORD *)&v65[v66 + 1572];
            *(v70 - 1) = v72 + *v70;
            *(_DWORD *)&v65[v66 + 1568] = v73 + v67;
            v66 += 4;
            ++v70;
          }
          while (4 * (v2 + 4) - 8 != v66);
        }
        v65 += 1560;
        v62 += 780;
        ++v64;
        v63 += 780;
      }
      while (v64 != v31);
      goto LABEL_37;
    }
  }
  uint64_t v83 = (unsigned __int8 *)(v6 + 1173);
  if (v4 == 25)
  {
    if (v3 < 2)
    {
      int v115 = 1;
    }
    else
    {
      int v84 = 0;
      uint64_t v85 = (unsigned __int8 *)(v6 + 1563);
      uint64_t v86 = v157;
      uint64_t v87 = (int *)v161;
      uint64_t v88 = v153;
      do
      {
        if (v2 >= 1)
        {
          uint64_t v89 = 0;
          __int16 v90 = *(v8 - 390);
          __int16 v91 = v8[390];
          int v92 = *(v7 - 390);
          int v93 = v7[390];
          uint64_t v94 = 2344;
          uint64_t v95 = 4688;
          int v96 = v93;
          __int16 v97 = v91;
          do
          {
            int v98 = v97 + v90;
            unsigned int v99 = &v88[2 * v89];
            int v100 = *(__int16 *)&v88[v94] + *((__int16 *)v99 + 392);
            LODWORD(v99) = *((__int16 *)v99 + 394);
            int v101 = *(__int16 *)&v88[v94 + 4];
            int v102 = 33554427 * (v100 + v99 + v101) + 33554426 * v98;
            int v103 = v96 + v92;
            uint64_t v104 = &v86[4 * v89];
            int v105 = *(_DWORD *)&v86[v95] + *((_DWORD *)v104 + 392);
            int v92 = *((_DWORD *)v104 + 394);
            int v96 = *(_DWORD *)&v86[v95 + 8];
            result[v89] = (5 * (v105 + v92 + v96) + 6 * v103 + v102 * v83[v89] + 256) >> 9;
            __int16 v90 = (__int16)v99;
            __int16 v97 = v101;
            v95 += 4;
            v94 += 2;
            ++v89;
          }
          while (v2 != v89);
          uint64_t v106 = 0;
          char v107 = v87;
          int v108 = v85;
          do
          {
            int v109 = v91;
            __int16 v91 = *(_WORD *)&v88[v106 * 2 + 2348];
            int v110 = *(v107 - 2);
            int v112 = *v107++;
            int v111 = v112;
            int v113 = 5 * (v112 + v110);
            int v114 = *v108++;
            result[v106 + 384] = (v113
                                              + 6 * v93
                                              + (16777211 * (v91 + *(__int16 *)&v88[v106 * 2 + 2344]) + 16777210 * v109)
                                              * v114
                                              + 128) >> 8;
            ++v106;
            int v93 = v111;
          }
          while (v2 != v106);
        }
        result += 768;
        v83 += 780;
        v8 += 780;
        v7 += 780;
        v84 += 2;
        v88 += 1560;
        v86 += 3120;
        v85 += 780;
        v87 += 780;
      }
      while (v84 < v3 - 1);
      int v115 = v3 | 1;
    }
    if (v115 == v3 && v2 >= 1)
    {
      uint64_t v140 = v2;
      __int16 v141 = *(v8 - 390);
      __int16 v142 = v8[390];
      int v143 = *(v7 - 390);
      int v144 = v7[390];
      uint64_t v145 = v8 - 391;
      signed int v146 = v7 - 391;
      do
      {
        int v147 = v142 + v141;
        __int16 v141 = v145[2];
        __int16 v142 = v145[782];
        int v148 = v144 + v143;
        int v143 = v146[2];
        int v144 = v146[782];
        int v149 = *v83++;
        *result++ = (5 * (v146[780] + *v146 + v143 + v144)
                                 + 6 * v148
                                 + (33554427 * (v145[780] + *v145 + v141 + v142) + 33554426 * v147) * v149
                                 + 256) >> 9;
        ++v145;
        ++v146;
        --v140;
      }
      while (v140);
    }
  }
  else if (v3 >= 1)
  {
    int v116 = 0;
    long long v117 = v153;
    uint64_t v118 = (__int16 *)&v156;
    uint64_t v119 = v157;
    uint64_t v120 = &v160;
    do
    {
      if (v2 >= 1)
      {
        uint64_t v121 = 0;
        __int16 v122 = *v8;
        __int16 v123 = *(v8 - 390);
        __int16 v124 = v8[389];
        int v125 = *v7;
        int v126 = *(v7 - 390);
        uint64_t v127 = v120;
        uint64_t v128 = v118;
        int v129 = v7[389];
        do
        {
          int v130 = v128[2];
          int v131 = v128[391];
          int v132 = *v128 + v122 + v130 + v123 + v131;
          uint64_t v133 = &v117[2 * v121];
          int v134 = *((__int16 *)v133 + 394);
          int v135 = 33554429 * (*((__int16 *)v133 + 392) + v124 + v134 + v128[392]) - 4 * v132;
          LODWORD(v133) = *(_DWORD *)v127 + v125;
          int v125 = *((_DWORD *)v127 + 2);
          int v136 = v133 + v125 + v126;
          unsigned int v137 = &v119[4 * v121];
          int v138 = *((_DWORD *)v127 + 391);
          int v139 = v136 + v138;
          int v126 = *((_DWORD *)v137 + 394);
          result[v121] = (3 * (v129 + *((_DWORD *)v137 + 392) + v126 + *((_DWORD *)v127 + 392))
                        + 4 * v139
                        + v135 * v83[v121]
                        + 256) >> 9;
          __int16 v122 = v130;
          __int16 v123 = v134;
          ++v128;
          uint64_t v127 = (uint64_t *)((char *)v127 + 4);
          int v129 = v138;
          __int16 v124 = v131;
          ++v121;
        }
        while (v2 != v121);
      }
      result += 384;
      v83 += 390;
      v8 += 390;
      v7 += 390;
      ++v116;
      v118 += 390;
      v120 += 195;
      v119 += 1560;
      v117 += 780;
    }
    while (v116 != v3);
  }
  return result;
}

unint64_t sub_224ACC8E0()
{
  uint64_t v0 = (char *)MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  int v4 = v3;
  int v6 = v5;
  uint64_t v8 = v7;
  int v9 = v0;
  *(void *)&v20[27300] = *MEMORY[0x263EF8340];
  sub_224ACBCD0((uint64_t)v20, v0, v7, v10, v11, v5, v3, v12);
  unint64_t result = (unint64_t)sub_224ACC050();
  if (v4 >= 1)
  {
    int v14 = 0;
    uint64_t v15 = 0;
    int v16 = *(__int16 *)(v2 + 10);
    do
    {
      if (v6 >= 1)
      {
        for (uint64_t i = 0; i != v6; v9[i++] = v18 & ~(v18 >> 31))
        {
          unint64_t result = v9[i];
          int v18 = result + ((*(__int16 *)&v19[256 * (unint64_t)(v14 & 0x1FFFFFF) + 2 * i] * v16 + 1024) >> 11);
          if (v18 >= 255) {
            int v18 = 255;
          }
        }
      }
      v9 += v8;
      ++v15;
      v14 += 3;
    }
    while (v15 != v4);
  }
  return result;
}

unint64_t sub_224ACCA3C()
{
  uint64_t v0 = (char *)MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  int v4 = v3;
  int v6 = v5;
  uint64_t v8 = v7;
  int v9 = v0;
  *(void *)&v20[27300] = *MEMORY[0x263EF8340];
  sub_224ACBCD0((uint64_t)v20, v0, v7, v10, v11, v5, v3, v12);
  unint64_t result = (unint64_t)sub_224ACC050();
  if (v4 >= 1)
  {
    int v14 = 0;
    uint64_t v15 = 0;
    int v16 = *(__int16 *)(v2 + 8);
    do
    {
      if (v6 >= 1)
      {
        for (uint64_t i = 0; i != v6; v9[i++] = v18 & ~(v18 >> 31))
        {
          unint64_t result = v9[i];
          int v18 = result + ((*(__int16 *)&v19[256 * (unint64_t)(v14 & 0x1FFFFFF) + 2 * i] * v16 + 1024) >> 11);
          if (v18 >= 255) {
            int v18 = 255;
          }
        }
      }
      v9 += v8;
      ++v15;
      v14 += 3;
    }
    while (v15 != v4);
  }
  return result;
}

unint64_t sub_224ACCB98()
{
  uint64_t v0 = (char *)MEMORY[0x270FA5388]();
  uint64_t v2 = v1;
  int v4 = v3;
  int v6 = v5;
  uint64_t v8 = v7;
  int v9 = v0;
  *(void *)&v32[27300] = *MEMORY[0x263EF8340];
  unint64_t result = (unint64_t)sub_224ACBCD0((uint64_t)v32, v0, v7, v10, v11, v5, v3, v12);
  if (v4 >= -5)
  {
    int v14 = 0;
    uint64_t v15 = &v31;
    int v16 = v32;
    do
    {
      if (v6 >= 1)
      {
        uint64_t v17 = 0;
        int v18 = v16;
        do
        {
          uint64_t v19 = 0;
          int v20 = (v16[v17 + 3] << 7) + 0x4000;
          do
          {
            unint64_t result = v18[v19];
            v20 += *(__int16 *)(v2 + 2 * v19++) * result;
          }
          while (v19 != 7);
          int v21 = (v20 + 4) >> 3;
          if (v21 >= 0x1FFF) {
            int v21 = 0x1FFF;
          }
          *(_WORD *)&v15[2 * v17++] = v21 & ~(unsigned __int16)(v21 >> 31);
          ++v18;
        }
        while (v17 != v6);
      }
      v16 += 390;
      v15 += 780;
    }
    while (v14++ != ((v4 + 5) & ~((v4 + 5) >> 31)));
    if (v4 >= 1)
    {
      uint64_t v23 = 0;
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (v6 >= 1)
        {
          uint64_t v25 = 0;
          uint64_t v26 = i * v8;
          do
          {
            uint64_t v27 = 0;
            int v28 = -262144;
            uint64_t v29 = v23;
            do
            {
              v28 += *(__int16 *)(v2 + 16 + v27)
                   * *((unsigned __int16 *)v32 + (v29 & 0xFFFFFFFE) + v25 + 27299);
              v27 += 2;
              v29 += 390;
            }
            while (v27 != 14);
            int v30 = (v28 + 1024) >> 11;
            if (v30 >= 255) {
              int v30 = 255;
            }
            unint64_t result = v26 + v25;
            v9[v26 + v25++] = v30 & ~(v30 >> 31);
          }
          while (v25 != v6);
        }
        v23 += 390;
      }
    }
  }
  return result;
}

uint64_t sub_224ACCD84(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = 4294967274;
  if (a1)
  {
    int v4 = a2;
    if (a2)
    {
      if (a3 >= 1)
      {
        int v21 = a2;
        int v22 = a2;
        unint64_t v6 = (unint64_t)&a2[a3];
        uint64_t v23 = &a2[a3];
        uint64_t v3 = 4294967294;
        unint64_t v19 = 0;
        uint64_t v20 = 0;
        do
        {
          if ((unint64_t)v4 >= v6)
          {
            unint64_t v8 = 0;
            uint64_t v20 = 0x1FFFFFFFFLL;
          }
          else
          {
            int v21 = v4 + 1;
            uint64_t v7 = *v4;
            LODWORD(v20) = 7;
            unint64_t v8 = v7 << 57;
          }
          unint64_t v19 = v8;
          int v9 = sub_224AEC1C4((uint64_t *)&v19, 4u);
          if (v20)
          {
            unint64_t v10 = 2 * v19;
            unint64_t v11 = v19 >> 63;
            int v12 = v20 - 1;
            if (v20 == 1)
            {
              if (v21 < v23)
              {
                unsigned int v13 = *v21++;
                LODWORD(v20) = 7;
                unint64_t v19 = (unint64_t)v13 << 57;
                LODWORD(v14) = (v13 >> 7) & 1;
                goto LABEL_17;
              }
              HIDWORD(v20) = 1;
            }
          }
          else if (v21 >= v23)
          {
            HIDWORD(v20) = 1;
            int v12 = -1;
            unint64_t v10 = 2 * v19;
            unint64_t v11 = v19 >> 63;
          }
          else
          {
            unsigned int v15 = *v21++;
            unint64_t v10 = (unint64_t)v15 << 57;
            LODWORD(v11) = (v15 >> 7) & 1;
            int v12 = 7;
          }
          LODWORD(v20) = v12 - 1;
          unint64_t v19 = 2 * v10;
          unint64_t v14 = v10 >> 63;
LABEL_17:
          sub_224AEC1C4((uint64_t *)&v19, (8 * v11) | 1);
          int v4 = v23;
          if (v14)
          {
            unsigned int v16 = sub_224AEC2E4((uint64_t)&v19);
            if (v4 - v21 < (unint64_t)v16) {
              return 4294967274;
            }
            int v4 = &v21[v16];
          }
          if (v9 == 1)
          {
            uint64_t v17 = sub_224ACCF74(a1, (uint64_t *)&v19, 0);
            if ((v17 & 0x80000000) != 0) {
              return v17;
            }
            if (v21 > v4) {
              return 4294967274;
            }
            uint64_t v3 = 0;
            LODWORD(v20) = 0;
            unint64_t v19 = 0;
          }
          if (HIDWORD(v20)) {
            return 4294967274;
          }
          int v21 = v4;
          unint64_t v6 = (unint64_t)v23;
        }
        while (v4 < v23);
      }
    }
  }
  return v3;
}

uint64_t sub_224ACCF74(unsigned __int8 *a1, uint64_t *a2, int a3)
{
  bzero(a1, 0x328uLL);
  unsigned __int8 v6 = sub_224AEC1C4(a2, 3u);
  *a1 = v6;
  if (v6 > 2u) {
    return 4294967274;
  }
  a1[356] = sub_224AEC164(a2);
  int v8 = sub_224AEC164(a2);
  a1[357] = v8;
  if (v8)
  {
    if (!a1[356]) {
      return 4294967274;
    }
    if ((_BYTE)v8)
    {
      a1[34] = 1;
      a1[36] = sub_224AEC1C4(a2, 3u);
      a1[37] = sub_224AEC1C4(a2, 2u);
      a1[38] = 10;
      goto LABEL_35;
    }
  }
  unsigned __int8 v9 = sub_224AEC164(a2);
  a1[358] = v9;
  if (v9)
  {
    *((_DWORD *)a1 + 90) = sub_224AEC1C4(a2, 0x20u);
    int v10 = sub_224AEC1C4(a2, 0x20u);
    *((_DWORD *)a1 + 91) = v10;
    if (a3 && (!*((_DWORD *)a1 + 90) || !v10)) {
      return 4294967274;
    }
    unsigned __int8 v11 = sub_224AEC164(a2);
    a1[368] = v11;
    if (v11)
    {
      if (sub_224AEC164(a2))
      {
        int v12 = 0;
      }
      else
      {
        int v35 = -1;
        do
        {
          if (v35 == 30) {
            return 4294967274;
          }
          int v36 = v35;
          int v37 = sub_224AEC164(a2);
          int v35 = v36 + 1;
        }
        while (!v37);
        unsigned int v38 = v36 + 2;
        int v39 = 2 << (v36 + 1);
        int v40 = sub_224AEC1C4(a2, v38);
        int v12 = v39 + v40 - 1;
        if (!(v39 + v40)) {
          return 4294967274;
        }
      }
      *((_DWORD *)a1 + 93) = v12 + 1;
    }
    unsigned __int8 v13 = sub_224AEC164(a2);
    a1[376] = v13;
    if (v13)
    {
      a1[377] = sub_224AEC1C4(a2, 5u) + 1;
      int v14 = sub_224AEC1C4(a2, 0x20u);
      *((_DWORD *)a1 + 95) = v14;
      if (a3 && !v14) {
        return 4294967274;
      }
      a1[384] = sub_224AEC1C4(a2, 5u) + 1;
      a1[385] = sub_224AEC1C4(a2, 5u) + 1;
    }
  }
  a1[386] = sub_224AEC164(a2);
  unsigned __int8 v15 = sub_224AEC1C4(a2, 5u);
  a1[34] = v15 + 1;
  if (((v15 + 1) & 0x100) == 0)
  {
    unint64_t v16 = 0;
    uint64_t v17 = a1 + 44;
    int v18 = a1 + 432;
    do
    {
      __int16 v19 = sub_224AEC1C4(a2, 0xCu);
      *((_WORD *)v17 - 2) = v19;
      if (v19 && (!(_BYTE)v19 || (v19 & 0xF00) == 0)) {
        return 4294967274;
      }
      *(v17 - 8) = sub_224AEC1C4(a2, 3u) + 2;
      *(v17 - 7) = sub_224AEC1C4(a2, 2u);
      if (*(v17 - 8) >= 4u) {
        *(v17 - 2) = sub_224AEC164(a2);
      }
      if (a1[376])
      {
        char v20 = sub_224AEC164(a2);
        *(v17 - 1) = v20;
        if (v20)
        {
          *((_DWORD *)v18 - 2) = sub_224AEC1C4(a2, a1[377]);
          *((_DWORD *)v18 - 1) = sub_224AEC1C4(a2, a1[377]);
          *int v18 = sub_224AEC164(a2);
        }
      }
      if (a1[386])
      {
        char v21 = sub_224AEC164(a2);
        *uint64_t v17 = v21;
        if (!v21) {
          goto LABEL_33;
        }
      }
      else if (!*v17)
      {
LABEL_33:
        char v22 = 10;
        goto LABEL_34;
      }
      char v22 = sub_224AEC1C4(a2, 4u) + 1;
LABEL_34:
      *(v17 - 6) = v22;
      ++v16;
      v17 += 10;
      v18 += 12;
    }
    while (v16 < a1[34]);
  }
LABEL_35:
  a1[387] = sub_224AEC1C4(a2, 4u) + 1;
  a1[388] = sub_224AEC1C4(a2, 4u) + 1;
  *((_DWORD *)a1 + 1) = sub_224AEC1C4(a2, a1[387]) + 1;
  *((_DWORD *)a1 + 2) = sub_224AEC1C4(a2, a1[388]) + 1;
  if (!a1[357])
  {
    unsigned __int8 v23 = sub_224AEC164(a2);
    a1[389] = v23;
    if (v23)
    {
      a1[390] = sub_224AEC1C4(a2, 4u) + 2;
      a1[391] = sub_224AEC1C4(a2, 3u) + a1[390] + 1;
    }
  }
  a1[392] = sub_224AEC164(a2);
  a1[393] = sub_224AEC164(a2);
  a1[394] = sub_224AEC164(a2);
  if (a1[357])
  {
    *(void *)(a1 + 404) = 0x200000002;
    goto LABEL_50;
  }
  a1[395] = sub_224AEC164(a2);
  a1[396] = sub_224AEC164(a2);
  a1[397] = sub_224AEC164(a2);
  a1[398] = sub_224AEC164(a2);
  unsigned __int8 v24 = sub_224AEC164(a2);
  a1[399] = v24;
  if (v24)
  {
    a1[400] = sub_224AEC164(a2);
    a1[401] = sub_224AEC164(a2);
  }
  if (sub_224AEC164(a2))
  {
    *((_DWORD *)a1 + 101) = 2;
  }
  else
  {
    int v25 = sub_224AEC164(a2);
    *((_DWORD *)a1 + 101) = v25;
    if (!v25)
    {
LABEL_46:
      int v26 = 2;
      goto LABEL_48;
    }
  }
  if (sub_224AEC164(a2)) {
    goto LABEL_46;
  }
  int v26 = sub_224AEC164(a2);
LABEL_48:
  *((_DWORD *)a1 + 102) = v26;
  if (a1[399]) {
    a1[412] = sub_224AEC1C4(a2, 3u) + 1;
  }
LABEL_50:
  a1[413] = sub_224AEC164(a2);
  a1[414] = sub_224AEC164(a2);
  a1[415] = sub_224AEC164(a2);
  int v27 = sub_224AEC164(a2);
  a1[32] = v27;
  int v28 = *a1;
  if (v28 == 2 && v27)
  {
    a1[32] += sub_224AEC164(a2);
    int v28 = *a1;
  }
  if (v28 != 1) {
    a1[418] = sub_224AEC164(a2);
  }
  unsigned __int8 v29 = sub_224AEC164(a2);
  a1[419] = v29;
  if (v29)
  {
    *((_DWORD *)a1 + 4) = sub_224AEC1C4(a2, 8u);
    *((_DWORD *)a1 + 5) = sub_224AEC1C4(a2, 8u);
    int v30 = sub_224AEC1C4(a2, 8u);
  }
  else
  {
    *((void *)a1 + 2) = 0x200000002;
    int v30 = 2;
  }
  *((_DWORD *)a1 + 6) = v30;
  if (a1[418])
  {
    unsigned __int8 v31 = sub_224AEC164(a2);
    int v32 = 0;
    a1[33] = v31;
    *((_DWORD *)a1 + 3) = 0;
    *((_WORD *)a1 + 208) = 257;
LABEL_89:
    *((_DWORD *)a1 + 7) = v32;
    goto LABEL_90;
  }
  if (*((_DWORD *)a1 + 4) != 1 || *((_DWORD *)a1 + 5) != 13 || v30)
  {
    a1[33] = sub_224AEC164(a2);
    int v34 = *a1;
    if (v34 != 2)
    {
      if (v34 != 1)
      {
        if (!*a1)
        {
          *((_DWORD *)a1 + 3) = 1;
          *((_WORD *)a1 + 208) = 257;
        }
        goto LABEL_86;
      }
      goto LABEL_80;
    }
    if (a1[32] == 2)
    {
      unsigned __int8 v41 = sub_224AEC164(a2);
      a1[416] = v41;
      if (!v41 || (unsigned __int8 v42 = sub_224AEC164(a2), a1[417] = v42, !a1[416]))
      {
LABEL_80:
        int v44 = 3;
LABEL_85:
        *((_DWORD *)a1 + 3) = v44;
LABEL_86:
        if ((a1[417] & a1[416]) != 0) {
          int v32 = sub_224AEC1C4(a2, 2u);
        }
        else {
          int v32 = 0;
        }
        goto LABEL_89;
      }
      int v43 = v42;
    }
    else
    {
      a1[416] = 1;
      int v43 = a1[417];
    }
    if (v43) {
      int v44 = 1;
    }
    else {
      int v44 = 2;
    }
    goto LABEL_85;
  }
  *((_DWORD *)a1 + 3) = 3;
  a1[33] = 1;
  int v33 = *a1;
  if (v33 != 1 && (v33 != 2 || a1[32] != 2)) {
    return 4294967274;
  }
LABEL_90:
  if (a3 && !*((_DWORD *)a1 + 6) && *((_DWORD *)a1 + 3) != 3) {
    return 4294967274;
  }
  if (!a1[418]) {
    a1[420] = sub_224AEC164(a2);
  }
  a1[421] = sub_224AEC164(a2);

  return sub_224ACD684((uint64_t)a2, a3);
}

uint64_t sub_224ACD684(uint64_t a1, int a2)
{
  int v4 = sub_224AEC164((uint64_t *)a1);
  if (*(_DWORD *)(a1 + 12)) {
    return 4294967274;
  }
  if (!a2) {
    return 0;
  }
  if (!v4 || *(void *)a1) {
    return 4294967274;
  }
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 32) - v6;
  uint64_t v8 = v6 - 1;
  uint64_t v9 = v7;
  uint64_t result = 4294967274;
  while (v9 >= 1)
  {
    if (*(unsigned __int8 *)(v8 + v9--)) {
      return result;
    }
  }
  if (v7 < 0) {
    return 4294967274;
  }
  else {
    return 0;
  }
}

uint64_t sub_224ACD710(uint64_t a1, unsigned __int8 **a2)
{
  uint64_t v2 = a2;
  block[9] = *MEMORY[0x263EF8340];
  uint64_t v4 = a1 + 49920;
  int v5 = *a2;
  uint64_t v6 = (uint64_t)a2[1];
  __src = v5;
  v849 = v5;
  v850 = &v5[v6];
  uint64_t v846 = 0;
  uint64_t v847 = 0;
  if (v6 <= 0)
  {
    uint64_t v847 = 0x1FFFFFFFFLL;
    uint64_t v846 = 0;
    uint64_t v8 = (int *)(a1 + 63072);
  }
  else
  {
    __src = v5 + 1;
    uint64_t v7 = *v5;
    LODWORD(v847) = 7;
    uint64_t v846 = v7 << 57;
    uint64_t v8 = (int *)(a1 + 63072);
    if (*(_DWORD *)(a1 + 63072) && ((v7 >> 7) & 1) != 0) {
      goto LABEL_1083;
    }
  }
  unint64_t v15 = sub_224AEC1C4(&v846, 4u);
  int v16 = v847;
  if (!v847)
  {
    uint64_t v17 = (unsigned __int8 *)__src;
    if (__src < v850)
    {
      __src = (char *)__src + 1;
      uint64_t v18 = *v17;
      int v19 = 7;
      LODWORD(v847) = 7;
      unint64_t v20 = v18 << 57;
      uint64_t v846 = v18 << 57;
      LODWORD(v21) = (v18 >> 7) & 1;
LABEL_17:
      int v25 = v19 - 1;
      LODWORD(v847) = v25;
      uint64_t v23 = 2 * v20;
      uint64_t v846 = 2 * v20;
      unint64_t v24 = v20 >> 63;
      goto LABEL_19;
    }
    HIDWORD(v847) = 1;
  }
  unint64_t v22 = v846;
  unint64_t v20 = 2 * v846;
  v846 *= 2;
  unint64_t v21 = v22 >> 63;
  int v19 = v847 - 1;
  LODWORD(v847) = v847 - 1;
  if (v16 == 1)
  {
    unsigned __int8 v29 = (unsigned __int8 *)__src;
    if (__src >= v850)
    {
      HIDWORD(v847) = 1;
      goto LABEL_17;
    }
    __src = (char *)__src + 1;
    uint64_t v30 = *v29;
    int v25 = 7;
    LODWORD(v847) = 7;
    uint64_t v23 = v30 << 57;
    uint64_t v846 = v30 << 57;
    LODWORD(v24) = (v30 >> 7) & 1;
  }
  else
  {
    uint64_t v23 = 2 * v20;
    uint64_t v846 = 2 * v20;
    unint64_t v24 = v20 >> 63;
    int v25 = v19 - 1;
    LODWORD(v847) = v25;
    if (!v25)
    {
      int v26 = (unsigned __int8 *)__src;
      if (__src < v850)
      {
        __src = (char *)__src + 1;
        uint64_t v27 = *v26;
        LODWORD(v847) = 7;
        uint64_t v28 = v27 << 57;
        goto LABEL_20;
      }
      HIDWORD(v847) = 1;
    }
  }
LABEL_19:
  LODWORD(v847) = v25 - 1;
  uint64_t v28 = 2 * v23;
LABEL_20:
  uint64_t v846 = v28;
  if (v21)
  {
    char v31 = sub_224AEC1C4(&v846, 3u);
    char v32 = sub_224AEC1C4(&v846, 2u);
    sub_224AEC1C4(&v846, 3u);
    if (!v24) {
      goto LABEL_26;
    }
LABEL_24:
    unsigned int v33 = sub_224AEC2E4((uint64_t)&v846);
    if (v850 - (unsigned char *)__src < (unint64_t)v33) {
      goto LABEL_1083;
    }
    v850 = (unsigned __int8 *)__src + v33;
    goto LABEL_26;
  }
  char v32 = 0;
  char v31 = 0;
  if (v24) {
    goto LABEL_24;
  }
LABEL_26:
  if (HIDWORD(v847)) {
    goto LABEL_1083;
  }
  if ((v15 - 3) <= 0xFFFFFFFD)
  {
    if (v21)
    {
      int v34 = *(_DWORD *)(v4 + 13136);
      if (v34)
      {
        if ((((1 << (v32 + 8)) | (1 << v31)) & ~v34) != 0) {
          return v850 - v849;
        }
      }
    }
  }
  switch((int)v15)
  {
    case 1:
      uint64_t v37 = *(void *)(a1 + 72);
      unsigned int v38 = sub_224AE4B24(v37, (char *)0x350);
      if (!v38) {
        return -12;
      }
      int v39 = *(unsigned __int8 **)v38;
      *((void *)v38 - 5) = *(void *)v38;
      int v40 = v38 - 40;
      *((void *)v38 - 4) = v37;
      *((void *)v38 - 3) = 1;
      *((void *)v38 - 2) = sub_224AF7228;
      *((void *)v38 - 1) = v38;
      block[0] = (uint64_t)(v38 - 40);
      if ((sub_224ACCF74(v39, &v846, *v8) & 0x80000000) == 0)
      {
        int v47 = *(_DWORD *)(v4 + 13132);
        if (v47 >= v39[34]) {
          int v47 = 0;
        }
        unsigned int v48 = *(unsigned __int16 *)&v39[10 * v47 + 40];
        *(_DWORD *)(v4 + 13136) = v48;
        unsigned int v49 = __clz(v48 >> 8) ^ 0x1F;
        if (v48 >= 0x100) {
          unsigned int v50 = v49;
        }
        else {
          unsigned int v50 = 0;
        }
        *(_DWORD *)(v4 + 13144) = v50;
        uint64_t v51 = *(void *)(a1 + 88);
        if (v51)
        {
          if (!memcmp(v39, *(const void **)(a1 + 88), 0x1A8uLL))
          {
            if (!memcmp(v39 + 424, (const void *)(v51 + 424), 0x180uLL))
            {
LABEL_107:
              sub_224AF722C((uint64_t *)(a1 + 80));
              *(void *)(a1 + 80) = v40;
              *(void *)(a1 + 88) = v39;
              goto LABEL_889;
            }
            int v57 = 2;
          }
          else
          {
            v834 = v8;
            *(void *)(a1 + 112) = 0;
            *(void *)(a1 + 144) = 0;
            *(void *)(a1 + 128) = 0;
            sub_224AF722C((uint64_t *)(a1 + 136));
            sub_224AF722C((uint64_t *)(a1 + 120));
            uint64_t v52 = 0;
            uint64_t v53 = 0;
            uint64_t v54 = a1 + 52696;
            do
            {
              uint64_t v55 = v54 + v52;
              if (*(void *)(v54 + v52 - 2752))
              {
                sub_224AFAD94(v55 - 2760);
                *(void *)(v55 - 2472) = 0;
              }
              sub_224AF722C((uint64_t *)(v55 - 2464));
              sub_224AF722C((uint64_t *)(v55 - 2456));
              __int16 v56 = (void *)(a1 + 52704 + v53);
              *__int16 v56 = 0;
              v56[1] = 0;
              sub_224AF722C((uint64_t *)(v54 + v53));
              v53 += 24;
              v52 += 344;
            }
            while (v53 != 192);
            int v57 = 1;
            uint64_t v8 = v834;
          }
        }
        else
        {
          *(void *)(a1 + 112) = 0;
          int v57 = 1;
        }
        *(_DWORD *)(v4 + 13172) |= v57;
        goto LABEL_107;
      }
      sub_224B11AE8(a1, (uint64_t)"Error parsing sequence header\n", v41, v42, v43, v44, v45, v46, v826);
      sub_224AF722C(block);
      goto LABEL_1083;
    case 2:
      *(_DWORD *)(v4 + 13172) |= 4u;
      goto LABEL_889;
    case 3:
    case 6:
      goto LABEL_32;
    case 4:
      int v58 = *(unsigned char **)(a1 + 112);
      if (!v58) {
        goto LABEL_1083;
      }
      __int16 v59 = (void *)(a1 + 60);
      int v60 = *(_DWORD *)(a1 + 60);
      if (*(_DWORD *)(a1 + 56) > v60) {
        goto LABEL_875;
      }
      if (v60 > 26843544) {
        goto LABEL_1083;
      }
      int v61 = v60 + 1;
      goto LABEL_873;
    case 5:
      unint64_t v62 = sub_224AEC2E4((uint64_t)&v846);
      if (HIDWORD(v847)) {
        goto LABEL_1083;
      }
      switch((int)v62)
      {
        case 1:
          sub_224AF7140(4);
          block[0] = (uint64_t)v63;
          if (!v63) {
            goto LABEL_103;
          }
          int v64 = v63;
          uint64_t v65 = *v63;
          *uint64_t v65 = sub_224AEC1C4(&v846, 0x10u);
          v65[1] = sub_224AEC1C4(&v846, 0x10u);
          if ((sub_224ACD684((uint64_t)&v846, *v8) & 0x80000000) != 0) {
            goto LABEL_138;
          }
          sub_224AF722C((uint64_t *)(a1 + 120));
          *(void *)(a1 + 120) = v64;
          *(void *)(a1 + 128) = v65;
          goto LABEL_889;
        case 2:
          sub_224AF7140(24);
          block[0] = (uint64_t)v85;
          if (v85)
          {
            uint64_t v86 = v85;
            uint64_t v87 = 0;
            uint64_t v88 = *v85;
            do
            {
              *(_WORD *)(v88 + v87) = sub_224AEC1C4(&v846, 0x10u);
              *(_WORD *)(v88 + v87 + 2) = sub_224AEC1C4(&v846, 0x10u);
              v87 += 4;
            }
            while (v87 != 12);
            *(_WORD *)(v88 + 12) = sub_224AEC1C4(&v846, 0x10u);
            *(_WORD *)(v88 + 14) = sub_224AEC1C4(&v846, 0x10u);
            *(_DWORD *)(v88 + 16) = sub_224AEC1C4(&v846, 0x20u);
            *(_DWORD *)(v88 + 20) = sub_224AEC1C4(&v846, 0x20u);
            if ((sub_224ACD684((uint64_t)&v846, *v8) & 0x80000000) == 0)
            {
              sub_224AF722C((uint64_t *)(a1 + 136));
              *(void *)(a1 + 136) = v86;
              *(void *)(a1 + 144) = v88;
              goto LABEL_889;
            }
LABEL_138:
            sub_224AF722C(block);
            int v97 = 2;
          }
          else
          {
LABEL_103:
            int v97 = 1;
          }
          if (v97 != 2) {
            return -12;
          }
          goto LABEL_1083;
        case 3:
        case 5:
          goto LABEL_889;
        case 4:
          uint64_t v89 = v850 - (unsigned char *)__src;
          uint64_t v90 = (v850 - (unsigned char *)__src) & ((v850 - (unsigned char *)__src) >> 63);
          break;
        default:
          uint64_t v826 = v62;
          v677 = "Unknown Metadata OBU type %d\n";
          goto LABEL_1179;
      }
      while (1)
      {
        uint64_t v91 = v89 - 1;
        if (v89 < 1) {
          break;
        }
        if (*((char *)__src + --v89))
        {
          uint64_t v90 = v91 + 1;
          break;
        }
      }
      int v93 = sub_224AEC1C4(&v846, 8u);
      char v94 = v93;
      if (v93 == 255)
      {
        char v95 = sub_224AEC1C4(&v846, 8u);
        int64_t v96 = v90 - 3;
      }
      else
      {
        char v95 = 0;
        int64_t v96 = v90 - 2;
      }
      if (v96 >= 1 && *((unsigned __int8 *)__src + v96) == 128)
      {
        int v108 = *(_DWORD *)(a1 + 168);
        if (v108 > 89478484) {
          goto LABEL_1083;
        }
        int v109 = (char *)malloc_type_realloc(*(void **)(a1 + 160), 24 * v108 + 24, 0x10100400AE50DADuLL);
        if (!v109) {
          goto LABEL_1083;
        }
        *(void *)(a1 + 160) = v109;
        int v110 = &v109[24 * *(int *)(a1 + 168)];
        *(void *)int v110 = 0;
        *((void *)v110 + 1) = 0;
        *((void *)v110 + 2) = 0;
        if (*(_DWORD *)(a1 + 168))
        {
          uint64_t v111 = *(void *)(a1 + 160);
          atomic_load((unsigned int *)(*(void *)(a1 + 152) + 16));
          uint64_t v112 = *(void *)(a1 + 152);
          int v113 = *(void **)(v112 + 32);
          *(void *)(v112 + 8) = v111;
        }
        else
        {
          int v113 = malloc_type_malloc(0x38uLL, 0x10E004079E7A845uLL);
          if (!v113) {
            goto LABEL_1083;
          }
          uint64_t v118 = *(void *)(a1 + 160);
          v113[2] = 0;
          v113[3] = v118;
          v113[4] = 1;
          v113[5] = sub_224AFA914;
          v113[6] = v113;
          *(void *)(a1 + 152) = v113 + 2;
          uint64_t v111 = *(void *)(a1 + 160);
        }
        *int v113 = v111;
        uint64_t v119 = *(int *)(a1 + 168);
        v113[1] = v119 + 1;
        uint64_t v120 = malloc_type_malloc(v96, 0x354CFD9BuLL);
        *(void *)(v111 + 24 * (int)v119 + 16) = v120;
        if (!v120) {
          goto LABEL_1083;
        }
        uint64_t v121 = v111 + 24 * (int)v119;
        *(unsigned char *)uint64_t v121 = v94;
        *(unsigned char *)(v121 + 1) = v95;
        *(void *)(v121 + 8) = v96;
        memcpy(v120, __src, v96);
        ++*(_DWORD *)(a1 + 168);
      }
      else
      {
        v677 = "Malformed ITU-T T.35 metadata message format\n";
LABEL_1179:
        sub_224B11AE8(a1, (uint64_t)v677, v9, v10, v11, v12, v13, v14, v826);
      }
LABEL_889:
      if (!*(void *)(a1 + 88)) {
        return v850 - v849;
      }
      uint64_t v533 = *(void *)(a1 + 112);
      if (!v533) {
        return v850 - v849;
      }
      if (*(unsigned char *)(v533 + 251))
      {
        unsigned int v534 = *(unsigned __int8 *)(v533 + 252);
        uint64_t v535 = *(void *)(a1 + 344 * v534 + 49944);
        if (!v535) {
          goto LABEL_1083;
        }
        int v536 = *(_DWORD *)(v535 + 232);
        if (v536 != 3)
        {
          if (v536 == 2)
          {
            if (*(_DWORD *)(v4 + 13164) > 2u) {
              goto LABEL_966;
            }
            goto LABEL_905;
          }
          if (v536 != 1) {
            goto LABEL_905;
          }
        }
        if (*(_DWORD *)(v4 + 13164) > 1u) {
          goto LABEL_966;
        }
LABEL_905:
        uint64_t v540 = a1 + 344 * v534 + 49936;
        if (*(void *)(a1 + 344 * v534 + 49952) && (!*v8 || *(_DWORD *)(a1 + 344 * v534 + 50212)))
        {
          if (*(_DWORD *)(a1 + 8) == 1)
          {
            sub_224AFAD00((void *)(a1 + 248), (void *)v540);
            *(void *)(a1 + 520) = *(void *)(v540 + 272);
            *(void *)(a1 + 536) = *(void *)(v540 + 288);
            *(_DWORD *)(a1 + 528) = *(_DWORD *)(v540 + 280);
            sub_224AFA988(a1 + 248, *(void *)(a1 + 128), *(void *)(a1 + 120), *(void *)(a1 + 144), *(void *)(a1 + 136), *(void *)(a1 + 160), *(void *)(a1 + 152), *(int *)(a1 + 168), (long long *)(v2 + 3));
            sub_224AF722C((uint64_t *)(a1 + 152));
            *(void *)(a1 + 160) = 0;
            *(_DWORD *)(a1 + 168) = 0;
            unsigned int v541 = *(unsigned __int8 *)(*(void *)(a1 + 112) + 252);
            *(_DWORD *)(v4 + 13176) |= *(_DWORD *)(a1
                                                 + 344 * *(unsigned __int8 *)(*(void *)(a1 + 112) + 252)
                                                 + 50216) & 3;
LABEL_938:
            if (!*(_DWORD *)(*(void *)(a1 + 344 * v541 + 49944) + 232))
            {
              uint64_t v569 = 0;
              uint64_t v570 = 0;
              uint64_t v571 = a1 + 344 * v541;
              uint64_t v572 = v571 + 49936;
              uint64_t v573 = 344 * v541;
              *(_DWORD *)(v571 + 50212) = 0;
              uint64_t v574 = a1 + 52696;
              int v575 = (void *)(a1 + 52696 + 24 * v541);
              uint64_t v576 = v571 + 50232;
              do
              {
                if (v573 != v570)
                {
                  uint64_t v577 = v574 + v570;
                  if (*(void *)(v574 + v570 - 2752))
                  {
                    sub_224AFAD94(v574 + v570 - 2760);
                    *(void *)(v577 - 2472) = 0;
                  }
                  sub_224AFAD00((void *)(v574 + v570 - 2760), (void *)v572);
                  *(void *)(v577 - 2488) = *(void *)(v572 + 272);
                  *(void *)(v577 - 2472) = *(void *)(v572 + 288);
                  *(_DWORD *)(v577 - 2480) = *(_DWORD *)(v572 + 280);
                  uint64_t v578 = v574 + v569;
                  *(void *)(v578 + 8) = 0;
                  *(void *)(v578 + 16) = 0;
                  sub_224AF722C((uint64_t *)(v574 + v569));
                  long long v579 = *(_OWORD *)v575;
                  *(void *)(v578 + 16) = v575[2];
                  *(_OWORD *)uint64_t v578 = v579;
                  if (*v575) {
                    atomic_fetch_add_explicit((atomic_uint *volatile)(*v575 + 16), 1u, memory_order_relaxed);
                  }
                  sub_224AF722C((uint64_t *)(v574 + v570 - 2464));
                  *(void *)(v574 + v570 - 2464) = *(void *)v576;
                  if (*(void *)v576) {
                    atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)v576 + 16), 1u, memory_order_relaxed);
                  }
                  sub_224AF722C((uint64_t *)(v574 + v570 - 2456));
                }
                v570 += 344;
                v569 += 24;
              }
              while (v570 != 2752);
            }
            *(void *)(a1 + 112) = 0;
            return v850 - v849;
          }
          pthread_mutex_lock((pthread_mutex_t *)(a1 + 896));
          unsigned int v542 = *(_DWORD *)(a1 + 864);
          if (v542 + 1 == *(_DWORD *)(a1 + 8)) {
            unsigned int v543 = 0;
          }
          else {
            unsigned int v543 = v542 + 1;
          }
          *(_DWORD *)(a1 + 864) = v543;
          uint64_t v544 = *(void *)a1;
          uint64_t v545 = *(void *)a1 + 5712 * v542;
          if (*(int *)(v545 + 3124) >= 1)
          {
            int v546 = (int *)(v545 + 3124);
            uint64_t v547 = v544 + 5712 * v542;
            int v548 = (pthread_cond_t *)(v547 + 5424);
            uint64_t v549 = (pthread_mutex_t **)(v547 + 5472);
            do
              pthread_cond_wait(v548, *v549);
            while (*v546 > 0);
          }
          uint64_t v550 = *(void *)(a1 + 856);
          uint64_t v551 = v550 + 296 * v542;
          if (*(void *)(v551 + 16) || (unsigned int v552 = atomic_load((unsigned int *)(v544 + 5712 * v542 + 5564))) != 0)
          {
            uint64_t v553 = (unsigned int *)(a1 + 1008);
            unsigned int v554 = atomic_load((unsigned int *)(a1 + 1008));
            if (v554 + 1 >= *(_DWORD *)(a1 + 8)) {
              atomic_store(0, v553);
            }
            else {
              atomic_fetch_add((atomic_uint *volatile)v553, 1u);
            }
            atomic_compare_exchange_strong((atomic_uint *volatile)(a1 + 1016), &v554, 0xFFFFFFFF);
            unsigned int v557 = *(_DWORD *)(a1 + 1012);
            if (v557)
            {
              if (v557 < *(_DWORD *)(a1 + 8)) {
                *(_DWORD *)(a1 + 1012) = v557 - 1;
              }
            }
          }
          uint64_t v558 = v544 + 5712 * v542;
          int v559 = *(_DWORD *)(v558 + 5556);
          if (v559)
          {
            *(_DWORD *)(v4 + 13232) = v559;
            *(_DWORD *)(v558 + 5556) = 0;
            sub_224AF722C((uint64_t *)(v4 + 13224));
            long long v560 = *(_OWORD *)(v551 + 72);
            long long v561 = *(_OWORD *)(v551 + 88);
            *(_OWORD *)(a1 + 63136) = *(_OWORD *)(v551 + 104);
            *(_OWORD *)(a1 + 63120) = v561;
            *(_OWORD *)(a1 + 63104) = v560;
            uint64_t v562 = *(void *)(v4 + 13224);
            if (v562) {
              atomic_fetch_add_explicit((atomic_uint *volatile)(v562 + 16), 1u, memory_order_relaxed);
            }
          }
          else
          {
            if (!*(void *)(v551 + 16))
            {
LABEL_937:
              uint64_t v567 = a1 + 344 * *(unsigned __int8 *)(*(void *)(a1 + 112) + 252) + 49936;
              sub_224AFAD00((void *)(v550 + 296 * v542), (void *)v567);
              uint64_t v568 = v550 + 296 * v542;
              *(void *)(v568 + 272) = *(void *)(v567 + 272);
              *(void *)(v568 + 288) = *(void *)(v567 + 288);
              *(_DWORD *)(v568 + 280) = *(_DWORD *)(v567 + 280);
              *(_DWORD *)(v568 + 272) = 1;
              sub_224AFA988(v568, *(void *)(a1 + 128), *(void *)(a1 + 120), *(void *)(a1 + 144), *(void *)(a1 + 136), *(void *)(a1 + 160), *(void *)(a1 + 152), *(int *)(a1 + 168), (long long *)(v2 + 3));
              sub_224AF722C((uint64_t *)(a1 + 152));
              *(void *)(a1 + 160) = 0;
              *(_DWORD *)(a1 + 168) = 0;
              pthread_mutex_unlock((pthread_mutex_t *)(a1 + 896));
              unsigned int v541 = *(unsigned __int8 *)(*(void *)(a1 + 112) + 252);
              goto LABEL_938;
            }
            uint64_t v563 = v550 + 296 * v542;
            if ((*(_DWORD *)(v563 + 272) || *(_DWORD *)(v4 + 13156))
              && *(_DWORD *)(*(void *)(v563 + 288) + 4) != -2)
            {
              uint64_t v564 = (void *)(v563 + 288);
              int v565 = (void *)(v563 + 272);
              sub_224AFAD00((void *)(a1 + 248), (void *)(v550 + 296 * v542));
              *(void *)(a1 + 520) = *v565;
              *(void *)(a1 + 536) = *v564;
              uint64_t v566 = v550 + 296 * v542;
              *(_DWORD *)(a1 + 528) = *(_DWORD *)(v566 + 280);
              *(_DWORD *)(v4 + 13176) |= *(_DWORD *)(v566 + 280) & 3;
            }
          }
          sub_224AFAD94(v550 + 296 * v542);
          *(void *)(v550 + 296 * v542 + 288) = 0;
          goto LABEL_937;
        }
LABEL_1083:
        sub_224AF722C((uint64_t *)(v4 + 13224));
        long long v673 = *(_OWORD *)(v2 + 3);
        long long v674 = *(_OWORD *)(v2 + 5);
        *(_OWORD *)(a1 + 63136) = *(_OWORD *)(v2 + 7);
        *(_OWORD *)(a1 + 63120) = v674;
        *(_OWORD *)(a1 + 63104) = v673;
        uint64_t v675 = *(void *)(v4 + 13224);
        if (v675) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v675 + 16), 1u, memory_order_relaxed);
        }
        if (HIDWORD(v847)) {
          v676 = "Overrun in OBU bit buffer\n";
        }
        else {
          v676 = "Error parsing OBU data\n";
        }
        sub_224B11AE8(a1, (uint64_t)v676, v667, v668, v669, v670, v671, v672, v826);
        return -22;
      }
      if (*(_DWORD *)(a1 + 64) != *(unsigned __int8 *)(v533 + 449) * *(unsigned __int8 *)(v533 + 445)) {
        return v850 - v849;
      }
      int v537 = *(_DWORD *)(v533 + 232);
      switch(v537)
      {
        case 3:
          goto LABEL_902;
        case 2:
          unsigned int v580 = *(_DWORD *)(v4 + 13164);
          if (v580 > 2) {
            goto LABEL_966;
          }
          BOOL v539 = v580 == 1;
          break;
        case 1:
LABEL_902:
          unsigned int v538 = *(_DWORD *)(v4 + 13164);
          BOOL v539 = v538 == 1;
          if (v538 > 1) {
            goto LABEL_966;
          }
          break;
        default:
          goto LABEL_955;
      }
      if (v539 && !*(unsigned char *)(v533 + 404))
      {
LABEL_966:
        uint64_t v590 = 0;
        v591 = (void *)(v4 + 16);
        do
        {
          if ((*(unsigned __int8 *)(*(void *)(a1 + 112) + 404) >> v590))
          {
            sub_224AFAD94((uint64_t)v591);
            v591[36] = 0;
            v591[1] = *(void *)(a1 + 112);
            void *v591 = *(void *)(a1 + 88);
            uint64_t v592 = *(void *)(a1 + 104);
            v591[23] = v592;
            v591[24] = *(void *)(a1 + 80);
            atomic_fetch_add_explicit((atomic_uint *volatile)(v592 + 16), 1u, memory_order_relaxed);
            atomic_fetch_add_explicit((atomic_uint *volatile)(*(void *)(a1 + 80) + 16), 1u, memory_order_relaxed);
          }
          ++v590;
          v591 += 43;
        }
        while (v590 != 8);
        sub_224AF722C((uint64_t *)(a1 + 104));
        goto LABEL_971;
      }
LABEL_955:
      if (!*(_DWORD *)(a1 + 60)) {
        goto LABEL_1083;
      }
      if (*(_DWORD *)(a1 + 8) < 2u)
      {
        uint64_t v586 = 0;
        uint64_t v584 = *(void *)a1;
      }
      else
      {
        pthread_mutex_lock((pthread_mutex_t *)(a1 + 896));
        unsigned int v581 = *(_DWORD *)(a1 + 864);
        if (v581 + 1 == *(_DWORD *)(a1 + 8)) {
          unsigned int v582 = 0;
        }
        else {
          unsigned int v582 = v581 + 1;
        }
        *(_DWORD *)(a1 + 864) = v582;
        uint64_t v583 = *(void *)a1;
        uint64_t v584 = *(void *)a1 + 5712 * v581;
        if (*(int *)(v584 + 3124) >= 1)
        {
          do
            pthread_cond_wait((pthread_cond_t *)(v583 + 5712 * v581 + 5424), (pthread_mutex_t *)(a1 + 896));
          while (*(int *)(v584 + 3124) > 0);
        }
        uint64_t v585 = *(void *)(a1 + 856);
        uint64_t v586 = v585 + 296 * v581;
        if (*(void *)(v586 + 16) || (unsigned int v587 = atomic_load((unsigned int *)(v583 + 5712 * v581 + 5564))) != 0)
        {
          int v588 = (unsigned int *)(a1 + 1008);
          unsigned int v589 = atomic_load((unsigned int *)(a1 + 1008));
          if (v589 + 1 >= *(_DWORD *)(a1 + 8)) {
            atomic_store(0, v588);
          }
          else {
            atomic_fetch_add((atomic_uint *volatile)v588, 1u);
          }
          atomic_compare_exchange_strong((atomic_uint *volatile)(a1 + 1016), &v589, 0xFFFFFFFF);
          unsigned int v593 = *(_DWORD *)(a1 + 1012);
          if (v593)
          {
            if (v593 < *(_DWORD *)(a1 + 8)) {
              *(_DWORD *)(a1 + 1012) = v593 - 1;
            }
          }
        }
        uint64_t v594 = v583 + 5712 * v581;
        int v595 = *(_DWORD *)(v594 + 5556);
        if (v595)
        {
          *(_DWORD *)(v594 + 5556) = 0;
          *(_DWORD *)(v4 + 13232) = v595;
          sub_224AF722C((uint64_t *)(v4 + 13224));
          long long v596 = *(_OWORD *)(v586 + 72);
          long long v597 = *(_OWORD *)(v586 + 88);
          *(_OWORD *)(a1 + 63136) = *(_OWORD *)(v586 + 104);
          *(_OWORD *)(a1 + 63120) = v597;
          *(_OWORD *)(a1 + 63104) = v596;
          uint64_t v598 = *(void *)(v4 + 13224);
          if (v598) {
            atomic_fetch_add_explicit((atomic_uint *volatile)(v598 + 16), 1u, memory_order_relaxed);
          }
          sub_224AFAD94(v585 + 296 * v581);
          *(void *)(v585 + 296 * v581 + 288) = 0;
        }
        else if (*(void *)(v586 + 16))
        {
          uint64_t v599 = v585 + 296 * v581;
          v600 = (void *)(v599 + 288);
          if ((*(_DWORD *)(v599 + 272) || *(_DWORD *)(v4 + 13156)) && *(_DWORD *)(*(void *)(v599 + 288) + 4) != -2)
          {
            v601 = (void *)(v599 + 272);
            sub_224AFAD00((void *)(a1 + 248), (void *)(v585 + 296 * v581));
            *(void *)(a1 + 520) = *v601;
            *(void *)(a1 + 536) = *v600;
            uint64_t v602 = v585 + 296 * v581;
            *(_DWORD *)(a1 + 528) = *(_DWORD *)(v602 + 280);
            *(_DWORD *)(v4 + 13176) |= *(_DWORD *)(v602 + 280) & 3;
          }
          sub_224AFAD94(v585 + 296 * v581);
          void *v600 = 0;
        }
      }
      long long v603 = *(_OWORD *)(a1 + 80);
      *(_OWORD *)uint64_t v584 = v603;
      atomic_fetch_add_explicit((atomic_uint *volatile)(v603 + 16), 1u, memory_order_relaxed);
      *(_OWORD *)(v584 + 16) = *(_OWORD *)(a1 + 104);
      *(void *)(a1 + 104) = 0;
      *(void *)(a1 + 112) = 0;
      unsigned int v604 = *(unsigned __int8 *)(*(void *)(v584 + 8) + 32);
      v605 = (void *)(a1 + 3368 * *(unsigned __int8 *)(*(void *)(v584 + 8) + 32) + 52888);
      *(void *)(v584 + 3280) = v605;
      int v606 = 2 * v604;
      uint64_t v844 = 2 * v604 + 8;
      v607 = v605 + 8;
      if (!v605[8])
      {
        if (v606 == 4 || v606 == 2)
        {
          v718 = (void *)(a1 + 3368 * v604 + 52888);
          v718[412] = sub_224AEDD24;
          v718[413] = sub_224AEDCEC;
          v718[414] = sub_224AEDCB0;
          v718[415] = sub_224AED500;
          char v719 = dword_26AACE160;
          if (dword_26AACE160)
          {
            *(void *)(a1 + 3368 * v604 + 56184) = sub_224AA8B28;
            *(void *)(a1 + 3368 * v604 + 56192) = sub_224AED41C;
            *(void *)(a1 + 3368 * v604 + 56200) = sub_224AED338;
            *(void *)(a1 + 3368 * v604 + 56208) = sub_224AED254;
          }
          sub_224B11808(v607);
          uint64_t v720 = a1 + 3368 * v604;
          v721 = (void *)(v720 + 52888);
          sub_224B11B28((void *)(v720 + 53568), v844);
          v721[408] = sub_224AFF088;
          v721[409] = sub_224AFEF98;
          v721[410] = sub_224AFEEC0;
          v721[411] = sub_224AFE5A8;
          if (v719)
          {
            v721[408] = sub_224A92148;
            v721[409] = sub_224A92000;
            v721[410] = sub_224A923B8;
            v721[411] = sub_224A92298;
          }
          v722 = (void *)(a1 + 3368 * v604 + 52888);
          v722[417] = sub_224B031D8;
          v722[416] = sub_224B031D8;
          v722[418] = sub_224B03078;
          v722[419] = sub_224B02F18;
          v722[420] = sub_224B0219C;
          if (v719)
          {
            *(void *)(a1 + 3368 * v604 + 56216) = sub_224A76E00;
            *(void *)(a1 + 3368 * v604 + 56224) = sub_224A7746C;
            if (2 * v604 == 2)
            {
              *(void *)(a1 + 3368 * v604 + 56232) = sub_224B01A50;
              *(void *)(a1 + 3368 * v604 + 56240) = sub_224B012D0;
              *(void *)(a1 + 3368 * v604 + 56248) = sub_224B00370;
            }
          }
          sub_224B10E38((void *)(a1 + 3368 * v604 + 53144));
          sub_224B0FC20(v605);
        }
        else
        {
          if (v606)
          {
            sub_224B11AE8(a1, (uint64_t)"Compiled without support for %d-bit decoding\n", v9, v10, v11, v12, v13, v14, v844);
            int v654 = -42;
            goto LABEL_1280;
          }
          v737 = (void *)(a1 + 3368 * v604 + 52888);
          v737[412] = sub_224AECF34;
          v737[413] = sub_224AECF00;
          v737[414] = sub_224AECEC8;
          v737[415] = sub_224AEC75C;
          char v738 = dword_26AACE160;
          if (dword_26AACE160)
          {
            *(void *)(a1 + 3368 * v604 + 56184) = sub_224A9EB3C;
            *(void *)(a1 + 3368 * v604 + 56192) = sub_224AEC680;
            *(void *)(a1 + 3368 * v604 + 56200) = sub_224AEC5A4;
            *(void *)(a1 + 3368 * v604 + 56208) = sub_224AEC4C8;
          }
          sub_224B11538(v607);
          uint64_t v739 = a1 + 3368 * v604;
          v740 = (void *)(v739 + 52888);
          sub_224B0E890((void *)(v739 + 53568));
          v740[408] = sub_224AB25D4;
          v740[409] = sub_224AB24EC;
          v740[410] = sub_224AB241C;
          v740[411] = sub_224AB1BBC;
          if (v738)
          {
            v740[408] = sub_224A85BAC;
            v740[409] = sub_224A85A98;
            v740[410] = sub_224A85DC0;
            v740[411] = sub_224A85CD0;
          }
          v741 = (void *)(a1 + 3368 * v604 + 52888);
          v741[417] = sub_224ACCB98;
          v741[416] = sub_224ACCB98;
          v741[418] = sub_224ACCA3C;
          v741[419] = sub_224ACC8E0;
          v741[420] = sub_224ACBB38;
          if (v738)
          {
            v742 = (char *(**)(int8x8_t *, uint64_t, unsigned __int32 *, int8x8_t *, int, uint64_t, int16x8_t *, char, double, double, int8x16_t))(a1 + 3368 * v604 + 56216);
            *v742 = sub_224A7590C;
            v742[1] = (char *(*)(int8x8_t *, uint64_t, unsigned __int32 *, int8x8_t *, int, uint64_t, int16x8_t *, char, double, double, int8x16_t))sub_224A75E90;
            *(void *)(a1 + 3368 * v604 + 56232) = sub_224ACB464;
            *(void *)(a1 + 3368 * v604 + 56240) = sub_224ACAD98;
            *(void *)(a1 + 3368 * v604 + 56248) = sub_224AC9F2C;
          }
          sub_224B0FD30((void *)(a1 + 3368 * v604 + 53144));
          sub_224B142D8(v605);
        }
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v608 = sub_224AF2504;
      }
      else {
        v608 = sub_224AC273C;
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v609 = sub_224AF0C34;
      }
      else {
        v609 = sub_224AC0F0C;
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v610 = sub_224AF6760;
      }
      else {
        v610 = sub_224AC67CC;
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v611 = sub_224AF4F78;
      }
      else {
        v611 = sub_224AC50E8;
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v612 = sub_224AF58A4;
      }
      else {
        v612 = sub_224AC59D4;
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v613 = sub_224AF61A4;
      }
      else {
        v613 = sub_224AC6268;
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v614 = sub_224AF6330;
      }
      else {
        v614 = sub_224AC63E8;
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v615 = sub_224AF6544;
      }
      else {
        v615 = sub_224AC65D0;
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v616 = sub_224AF67F8;
      }
      else {
        v616 = sub_224AC6864;
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v617 = sub_224AEE060;
      }
      else {
        v617 = sub_224ABE2D0;
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v618 = sub_224AF6930;
      }
      else {
        v618 = sub_224AC6988;
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v619 = sub_224AF69E0;
      }
      else {
        v619 = sub_224AC6A38;
      }
      if (*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v620 = sub_224AF6ABC;
      }
      else {
        v620 = sub_224AC6B0C;
      }
      v621 = sub_224AF6F74;
      if (!*(unsigned char *)(*(void *)(v584 + 8) + 32)) {
        v621 = sub_224AC6FD8;
      }
      *(void *)(v584 + 3296) = v608;
      *(void *)(v584 + 3288) = v609;
      *(void *)(v584 + 3304) = v610;
      *(void *)(v584 + 3312) = v611;
      *(void *)(v584 + 3320) = v612;
      *(void *)(v584 + 3328) = v613;
      *(void *)(v584 + 3336) = v614;
      *(void *)(v584 + 3344) = v615;
      *(void *)(v584 + 3352) = v616;
      *(void *)(v584 + 3360) = v617;
      *(void *)(v584 + 3368) = v618;
      *(void *)(v584 + 3376) = v619;
      *(void *)(v584 + 3384) = v620;
      *(void *)(v584 + 3392) = v621;
      v622 = *(unsigned char **)(v584 + 24);
      if (v622[232])
      {
        uint64_t v626 = v622[271];
        if (v626 == 7 || *(void *)(a1 + 344 * (char)v622[v626 + 421] + 49952))
        {
          uint64_t v830 = v586;
          uint64_t v839 = v4;
          uint64_t v627 = 0;
          uint64_t v628 = 0;
          uint64_t v629 = 896;
          uint64_t v630 = 3140;
          while (1)
          {
            uint64_t v631 = *(void *)(v584 + 24);
            uint64_t v632 = a1 + 344 * *(char *)(v631 + v628 + 421) + 49936;
            if (!*(void *)(a1 + 344 * *(char *)(v631 + v628 + 421) + 49952)) {
              break;
            }
            int v633 = *(_DWORD *)(v631 + 236);
            int v634 = *(_DWORD *)(a1 + 344 * *(char *)(v631 + v628 + 421) + 49992);
            if (v634 > 2 * v633) {
              break;
            }
            int v635 = *(_DWORD *)(v631 + 244);
            int v636 = *(_DWORD *)(v632 + 60);
            int v637 = 16 * v634;
            BOOL v638 = v636 <= 2 * v635 && v633 <= v637;
            BOOL v639 = v638 && v635 <= 16 * v636;
            if (!v639
              || *(_DWORD *)(*(void *)(v584 + 8) + 12) != *(_DWORD *)(v632 + 64)
              || v844 != *(_DWORD *)(v632 + 68))
            {
              break;
            }
            uint64_t v640 = v584 + v627;
            sub_224AFAD00((void *)(v584 + v627 + 32), (void *)v632);
            *(void *)(v640 + 304) = *(void *)(v632 + 272);
            *(void *)(v640 + 320) = *(void *)(v632 + 288);
            *(_DWORD *)(v640 + 312) = *(_DWORD *)(v632 + 280);
            *((_DWORD *)&block[5] + v628 + 1) = *(_DWORD *)(*(void *)(v632 + 8) + 236);
            uint64_t v641 = *(void *)(v584 + 24);
            int v642 = *(_DWORD *)(v641 + 236);
            int v644 = *(_DWORD *)(v632 + 56);
            int v643 = *(_DWORD *)(v632 + 60);
            int v645 = *(_DWORD *)(v641 + 244);
            if (v642 == v644 && v645 == v643)
            {
              uint64_t v650 = v584 + v630;
              *(_DWORD *)(v650 - 4) = 0;
              *(_DWORD *)(v650 - 12) = 0;
            }
            else
            {
              v647 = (int *)(v584 + v630);
              int v648 = ((v645 >> 1) + (v643 << 14)) / v645;
              int v649 = ((v644 << 14) + (v642 >> 1)) / v642;
              *(v647 - 3) = v649;
              *(v647 - 2) = (v649 + 8) >> 4;
              *(v647 - 1) = v648;
              int *v647 = (v648 + 8) >> 4;
            }
            BOOL v651 = *(_DWORD *)(v641 + v629) >= 2u
                && !*(unsigned char *)(v641 + 269)
                && !sub_224AEBEF0(v641 + v629)
                && *(_DWORD *)(v584 + v630 - 12) == 0;
            uint64_t v652 = v584 + v628++;
            *(unsigned char *)(v652 + 3056) = v651;
            v627 += 296;
            v629 += 36;
            v630 += 16;
            if (v628 == 7)
            {
              v622 = *(unsigned char **)(v584 + 24);
              uint64_t v4 = v839;
              uint64_t v586 = v830;
              goto LABEL_1033;
            }
          }
          if (!v628)
          {
            int v654 = -22;
            uint64_t v4 = v839;
            uint64_t v586 = v830;
            goto LABEL_1280;
          }
          v653 = (void *)(v584 + 320);
          uint64_t v4 = v839;
          uint64_t v586 = v830;
          do
          {
            sub_224AFAD94((uint64_t)(v653 - 36));
            void *v653 = 0;
            v653 += 37;
            --v628;
          }
          while (v628);
        }
        int v654 = -22;
        goto LABEL_1280;
      }
LABEL_1033:
      uint64_t v623 = v622[271];
      if (v623 == 7)
      {
        unsigned int v624 = v622[712];
        *(void *)(v584 + 3064) = 0;
        if (v624 >= 0x15)
        {
          if (v624 >= 0x3D)
          {
            if (v624 < 0x79) {
              int v625 = 2;
            }
            else {
              int v625 = 3;
            }
          }
          else
          {
            int v625 = 1;
          }
        }
        else
        {
          int v625 = 0;
        }
        *(_DWORD *)(v584 + 3072) = v625;
      }
      else
      {
        uint64_t v655 = a1 + 24 * (char)v622[v623 + 421] + 52696;
        long long v656 = *(_OWORD *)v655;
        *(void *)(v584 + 3080) = *(void *)(v655 + 16);
        *(_OWORD *)(v584 + 3064) = v656;
        uint64_t v657 = *(void *)v655;
        if (v657)
        {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v657 + 16), 1u, memory_order_relaxed);
          v622 = *(unsigned char **)(v584 + 24);
        }
      }
      if (v622[438])
      {
        unsigned int v690 = *(_DWORD *)(a1 + 8);
        uint64_t v691 = *(void *)(v4 + 2768);
        v692 = sub_224AE4B24(v691, (char *)0x3630);
        if (!v692)
        {
          *(void *)(v584 + 3088) = 0;
          goto LABEL_1279;
        }
        uint64_t v693 = *(void *)v692;
        *((void *)v692 - 5) = *(void *)v692;
        *((void *)v692 - 4) = v691;
        *((void *)v692 - 3) = 1;
        *((void *)v692 - 2) = sub_224AF7228;
        *((void *)v692 - 1) = v692;
        *(void *)(v584 + 3088) = v692 - 40;
        *(void *)(v584 + 3096) = v693;
        if (v690 >= 2)
        {
          *(void *)(v584 + 3104) = v693 + 13824;
          *(_DWORD *)(v693 + 13824) = 0;
        }
      }
      int v694 = *(_DWORD *)(a1 + 60);
      v695 = *(void **)(v584 + 3112);
      if (*(_DWORD *)(v584 + 3120) < v694)
      {
        free(v695);
        v695 = malloc_type_malloc(80 * *(int *)(a1 + 60), 0x10700408B15705AuLL);
        *(void *)(v584 + 3112) = v695;
        if (!v695)
        {
          *(void *)(v584 + 3120) = 0;
          goto LABEL_1279;
        }
        int v694 = *(_DWORD *)(a1 + 60);
        *(_DWORD *)(v584 + 3120) = v694;
      }
      memcpy(v695, *(const void **)(a1 + 48), 80 * v694);
      bzero(*(void **)(a1 + 48), 80 * *(int *)(a1 + 60));
      *(_DWORD *)(v584 + 3124) = *(_DWORD *)(a1 + 60);
      *(_DWORD *)(a1 + 60) = 0;
      int v654 = sub_224AFAA78(a1, (uint64_t *)(v584 + 2376), *(unsigned int *)(*(void *)(v584 + 24) + 240), *(unsigned int *)(*(void *)(v584 + 24) + 244), *(void *)(v584 + 8), *(void *)v584, *(void *)(v584 + 24), *(void *)(v584 + 16), v844, (long long *)(a1 + 63024), (void *)(v584 + 2664));
      if (v654) {
        goto LABEL_1280;
      }
      sub_224AFA988(v584 + 2376, *(void *)(a1 + 128), *(void *)(a1 + 120), *(void *)(a1 + 144), *(void *)(a1 + 136), *(void *)(a1 + 160), *(void *)(a1 + 152), *(int *)(a1 + 168), (long long *)(*(void *)(v584 + 3112) + 24));
      sub_224AF722C((uint64_t *)(a1 + 152));
      *(void *)(a1 + 160) = 0;
      *(_DWORD *)(a1 + 168) = 0;
      uint64_t v696 = *(void *)(v584 + 24);
      int v697 = *(unsigned __int8 *)(v696 + 264);
      if (*(unsigned char *)(v696 + 264) || *(_DWORD *)(v4 + 13156))
      {
        if (*(_DWORD *)(v4 + 13144) == *(unsigned __int8 *)(v696 + 250)) {
          int v698 = 0;
        }
        else {
          int v698 = 3;
        }
      }
      else
      {
        int v698 = 3;
      }
      int v699 = *(_DWORD *)(v4 + 13172);
      *(_DWORD *)(v584 + 2656) = v699;
      *(_DWORD *)(v4 + 13172) = v699 & v698;
      *(_DWORD *)(v584 + 2648) = v697;
      *(_DWORD *)(v584 + 2652) = *(unsigned __int8 *)(v696 + 265);
      if (*(_DWORD *)(a1 + 8) >= 2u)
      {
        **(_DWORD **)(v584 + 2664) = 0;
        *(_DWORD *)(*(void *)(v584 + 2664) + 4) = 0;
        uint64_t v696 = *(void *)(v584 + 24);
      }
      uint64_t v700 = *(unsigned int *)(v696 + 236);
      if (v700 == *(_DWORD *)(v696 + 240))
      {
        sub_224AFAD00((void *)(v584 + 2104), (void *)(v584 + 2376));
      }
      else
      {
        int v701 = sub_224AFAC78(a1, (uint64_t *)(v584 + 2104), v700, v584 + 2376);
        if (v701 < 0)
        {
          int v654 = v701;
          goto LABEL_1280;
        }
      }
      uint64_t v702 = *(void *)(v584 + 24);
      if (*(_DWORD *)(v702 + 236) != *(_DWORD *)(v702 + 240))
      {
        int v703 = *(_DWORD *)(v584 + 2160);
        int v704 = *(_DWORD *)(v584 + 2432);
        int v705 = ((v704 >> 1) + (v703 << 14)) / v704;
        *(_DWORD *)(v584 + 3240) = v705;
        int v706 = *(_DWORD *)(v584 + 2168);
        BOOL v707 = v706 == 3;
        char v708 = v706 != 3;
        if (v707) {
          int v709 = v703;
        }
        else {
          int v709 = v703 + 1;
        }
        int v710 = v709 >> v708;
        if (v707) {
          int v711 = v704;
        }
        else {
          int v711 = v704 + 1;
        }
        int v712 = v711 >> v708;
        int v713 = ((v710 << 14) + (v712 >> 1)) / v712;
        *(_DWORD *)(v584 + 3244) = v713;
        int v714 = v705 * v704 - (v703 << 14);
        int v715 = (((v703 - v704) << 13) + (v704 >> 1)) / v704;
        if (v714 >= 0) {
          unsigned int v716 = v714;
        }
        else {
          unsigned int v716 = v714 + 1;
        }
        *(_DWORD *)(v584 + 3248) = ((_WORD)v715 - (unsigned __int16)(v716 >> 1) + 128) & 0x3FFF;
        *(_DWORD *)(v584 + 3252) = ((unsigned __int16)((((v710 - v712) << 13) + (v712 >> 1)) / v712)
                                  - (unsigned __int16)((v712 * v713 - (v710 << 14)) / 2)
                                  + 128) & 0x3FFF;
      }
      if (*(_DWORD *)(a1 + 8) == 1)
      {
        if (*(unsigned char *)(v702 + 264) || *(_DWORD *)(v4 + 13156))
        {
          sub_224AFAD00((void *)(a1 + 248), (void *)(v584 + 2376));
          *(void *)(a1 + 520) = *(void *)(v584 + 2648);
          *(void *)(a1 + 536) = *(void *)(v584 + 2664);
          *(_DWORD *)(a1 + 528) = *(_DWORD *)(v584 + 2656);
          *(_DWORD *)(v4 + 13176) |= *(_DWORD *)(v584 + 2656) & 3;
        }
      }
      else
      {
        sub_224AFAD00((void *)v586, (void *)(v584 + 2376));
        *(void *)(v586 + 272) = *(void *)(v584 + 2648);
        *(void *)(v586 + 288) = *(void *)(v584 + 2664);
        *(_DWORD *)(v586 + 280) = *(_DWORD *)(v584 + 2656);
      }
      uint64_t v723 = *(void *)(v584 + 24);
      *(_DWORD *)(v584 + 3440) = (*(_DWORD *)(v723 + 236) + 3) >> 2;
      int v724 = *(_DWORD *)(v723 + 244);
      *(_DWORD *)(v584 + 3444) = (v724 + 3) >> 2;
      signed int v725 = ((*(_DWORD *)(v723 + 236) + 7) >> 2) & 0xFFFFFFFE;
      *(_DWORD *)(v584 + 3448) = v725;
      unsigned int v726 = ((v724 + 7) >> 2) & 0xFFFFFFFE;
      *(_DWORD *)(v584 + 3452) = v726;
      v725 += 31;
      *(_DWORD *)(v584 + 3456) = v725 >> 5;
      int v727 = (int)(v726 + 31) >> 5;
      *(_DWORD *)(v584 + 3460) = v727;
      int v728 = *(unsigned __int8 *)(*(void *)(v584 + 8) + 392);
      char v729 = v728 + 4;
      *(_DWORD *)(v584 + 3468) = v728 + 4;
      int v730 = 16 << v728;
      *(_DWORD *)(v584 + 3472) = v730;
      int v731 = (int)(v726 + v730 - 1) >> v729;
      *(_DWORD *)(v584 + 3464) = v731;
      uint64_t v732 = (int)(v725 & 0xFFFFFFE0);
      *(void *)(v584 + 3432) = v732;
      *(_DWORD *)(v584 + 4324) = ~(-1 << *(_DWORD *)(v584 + 2172));
      *(_DWORD *)(v584 + 5564) = 0;
      atomic_store((v731 + *(unsigned __int8 *)(v723 + 449) * *(unsigned __int8 *)(v723 + 445)) << (*(_DWORD *)(a1 + 8) > 1u), (unsigned int *)(v584 + 5568));
      if ((*(unsigned char *)(v723 + 232) & 1) != 0 || *(unsigned char *)(v723 + 419))
      {
        sub_224AF71C8(*(void *)(v4 + 8), 80 * (int)(v732 >> 1) * (uint64_t)v727);
        *(void *)(v584 + 2672) = v733;
        if (!v733) {
          goto LABEL_1279;
        }
        *(void *)(v584 + 2680) = *v733;
        uint64_t v723 = *(void *)(v584 + 24);
        if (*(unsigned char *)(v723 + 419))
        {
          *(_DWORD *)(v584 + 2856) = 0;
          *(void *)(v584 + 2848) = 0;
          *(_OWORD *)(v584 + 2832) = 0u;
        }
        else
        {
          uint64_t v743 = 40;
          uint64_t v744 = 2832;
          do
          {
            *(_DWORD *)(v584 + v744) = *(unsigned __int8 *)(*(void *)(v584 + v743) + 248);
            v743 += 296;
            v744 += 4;
          }
          while (v743 != 2112);
        }
        if (*(unsigned char *)(v723 + 437))
        {
          uint64_t v745 = 0;
          v746 = (atomic_uint **)(v584 + 2744);
          v747 = (_OWORD *)(v584 + 2860);
          v748 = (_DWORD *)(v584 + 92);
          do
          {
            int v749 = *(char *)(*(void *)(v584 + 24) + v745 + 421);
            v750 = (atomic_uint **)(a1 + 344 * *(char *)(*(void *)(v584 + 24) + v745 + 421) + 50240);
            v751 = *v750;
            if (*v750
              && (((*((_DWORD *)&block[5] + v745 + 1) + 7) >> 2) & 0xFFFFFFFE) == *(_DWORD *)(v584 + 3448)
              && (((*v748 + 7) >> 2) & 0xFFFFFFFE) == *(_DWORD *)(v584 + 3452))
            {
              *v746 = v751;
              atomic_fetch_add_explicit(v751 + 4, 1u, memory_order_relaxed);
              *(v746 - 7) = *(atomic_uint **)*v750;
            }
            else
            {
              *(v746 - 7) = 0;
              *v746 = 0;
            }
            v748 += 74;
            v752 = (long long *)(a1 + 344 * v749 + 50248);
            long long v753 = *v752;
            *(_OWORD *)((char *)v747 + 12) = *(long long *)((char *)v752 + 12);
            _OWORD *v747 = v753;
            v747 = (_OWORD *)((char *)v747 + 28);
            ++v745;
            ++v746;
          }
          while (v745 != 7);
          uint64_t v723 = *(void *)(v584 + 24);
        }
        else
        {
          *(void *)(v584 + 2792) = 0;
          *(_OWORD *)(v584 + 2760) = 0u;
          *(_OWORD *)(v584 + 2776) = 0u;
          *(_OWORD *)(v584 + 2744) = 0u;
        }
      }
      else
      {
        *(void *)(v584 + 2672) = 0;
        *(void *)(v584 + 2792) = 0;
        *(_OWORD *)(v584 + 2744) = 0u;
        *(_OWORD *)(v584 + 2760) = 0u;
        *(_OWORD *)(v584 + 2776) = 0u;
      }
      if (!*(unsigned char *)(v723 + 722))
      {
        v836 = (void *)(v584 + 2376);
        uint64_t v840 = v4;
        uint64_t v831 = v586;
        *(void *)(v584 + 2816) = 0;
        *(_OWORD *)(v584 + 2800) = 0u;
        goto LABEL_1238;
      }
      *(void *)(v584 + 2808) = 0;
      *(void *)(v584 + 2824) = 0;
      if ((*(unsigned char *)(v723 + 724) || !*(unsigned char *)(v723 + 723))
        && (uint64_t v754 = *(unsigned __int8 *)(v723 + 271),
            (((*((_DWORD *)&block[5] + v754 + 1) + 7) >> 2) & 0xFFFFFFFE) == *(_DWORD *)(v584 + 3448))
        && (((*(_DWORD *)(v584 + 296 * *(unsigned __int8 *)(v723 + 271) + 92) + 7) >> 2) & 0xFFFFFFFE) == *(_DWORD *)(v584 + 3452))
      {
        uint64_t v755 = *(void *)(a1 + 344 * *(char *)(v723 + v754 + 421) + 50232);
        *(void *)(v584 + 2808) = v755;
        if (v755)
        {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v755 + 16), 1u, memory_order_relaxed);
          uint64_t v755 = *(void *)(v584 + 2808);
          *(void *)(v584 + 2824) = *(void *)v755;
          uint64_t v723 = *(void *)(v584 + 24);
        }
      }
      else
      {
        uint64_t v755 = 0;
      }
      if (!*(unsigned char *)(v723 + 723))
      {
        v836 = (void *)(v584 + 2376);
        uint64_t v840 = v4;
        if (v755)
        {
          uint64_t v831 = v586;
          *(void *)(v584 + 2800) = v755;
          atomic_fetch_add_explicit((atomic_uint *volatile)(v755 + 16), 1u, memory_order_relaxed);
          uint64_t v757 = **(void **)(v584 + 2808);
          goto LABEL_1237;
        }
        size_t v797 = 32 * *(void *)(v584 + 3432) * *(int *)(v584 + 3460);
        sub_224AF71C8(*(void *)v4, v797);
        *(void *)(v584 + 2800) = v798;
        if (v798)
        {
          uint64_t v831 = v586;
          v799 = *v798;
          *(void *)(v584 + 2816) = v799;
          bzero(v799, v797);
LABEL_1238:
          uint64_t v758 = 0;
          uint64_t v759 = 0;
          uint64_t v760 = 0;
          unsigned int v845 = *(unsigned __int8 *)(*(void *)(v584 + 24) + 404);
          uint64_t v761 = a1 + 52696;
          do
          {
            if ((v845 >> v760))
            {
              uint64_t v762 = v761 + v759;
              if (*(void *)(v761 + v759 - 2752))
              {
                sub_224AFAD94(v761 + v759 - 2760);
                *(void *)(v762 - 2472) = 0;
              }
              sub_224AFAD00((void *)(v761 + v759 - 2760), v836);
              *(void *)(v762 - 2488) = *(void *)(v584 + 2648);
              *(void *)(v762 - 2472) = *(void *)(v584 + 2664);
              *(_DWORD *)(v762 - 2480) = *(_DWORD *)(v584 + 2656);
              uint64_t v763 = v761 + v758;
              *(void *)(v763 + 8) = 0;
              *(void *)(v763 + 16) = 0;
              sub_224AF722C((uint64_t *)(v761 + v758));
              uint64_t v764 = 3088;
              if (!*(unsigned char *)(*(void *)(v584 + 24) + 438)) {
                uint64_t v764 = 3064;
              }
              uint64_t v765 = v584 + 3088;
              if (!*(unsigned char *)(*(void *)(v584 + 24) + 438)) {
                uint64_t v765 = v584 + 3064;
              }
              long long v766 = *(_OWORD *)v765;
              *(void *)(v763 + 16) = *(void *)(v765 + 16);
              *(_OWORD *)uint64_t v763 = v766;
              uint64_t v767 = *(void *)(v584 + v764);
              if (v767) {
                atomic_fetch_add_explicit((atomic_uint *volatile)(v767 + 16), 1u, memory_order_relaxed);
              }
              uint64_t v768 = v761 + v759;
              sub_224AF722C((uint64_t *)(v761 + v759 - 2464));
              uint64_t v769 = *(void *)(v584 + 2800);
              *(void *)(v761 + v759 - 2464) = v769;
              if (v769) {
                atomic_fetch_add_explicit((atomic_uint *volatile)(v769 + 16), 1u, memory_order_relaxed);
              }
              sub_224AF722C((uint64_t *)(v768 - 2456));
              if (!*(unsigned char *)(*(void *)(v584 + 24) + 419))
              {
                uint64_t v770 = *(void *)(v584 + 2672);
                *(void *)(v768 - 2456) = v770;
                if (v770) {
                  atomic_fetch_add_explicit((atomic_uint *volatile)(v770 + 16), 1u, memory_order_relaxed);
                }
              }
              v771 = (_OWORD *)(v761 + v759 - 2448);
              long long v772 = *(_OWORD *)(v584 + 2832);
              *(_OWORD *)((char *)v771 + 12) = *(_OWORD *)(v584 + 2844);
              _OWORD *v771 = v772;
            }
            ++v760;
            v759 += 344;
            v758 += 24;
          }
          while (v760 != 8);
          int v773 = *(unsigned __int8 *)(*(void *)(v584 + 24) + 449)
               * *(unsigned __int8 *)(*(void *)(v584 + 24) + 445);
          unsigned int v774 = *(_DWORD *)(a1 + 24);
          if (v773 + 1 < (int)v774) {
            unsigned int v775 = v773 + 1;
          }
          else {
            unsigned int v775 = *(_DWORD *)(a1 + 24);
          }
          if (*(_DWORD *)(a1 + 8) != 1)
          {
            v784 = *(void **)(v584 + 3256);
            atomic_store(0, (unsigned int *)(v584 + 5544));
            *(_DWORD *)(v584 + 5504) = 1828669549 * ((unint64_t)(v584 - *v784) >> 4);
            *(_DWORD *)(v584 + 5520) = 0;
            *(void *)(v584 + 5512) = 0;
            *(_DWORD *)(v584 + 5508) = 0;
            sub_224AFC37C((void *)v584, (unsigned int *)(v584 + 5504), 1);
            pthread_mutex_unlock((pthread_mutex_t *)(a1 + 896));
            if (*(void *)(a1 + 32))
            {
              unsigned int v785 = *(_DWORD *)(a1 + 28);
              unsigned int v786 = (signed int)(v785 + v775) >= *(_DWORD *)(a1 + 24) ? *(_DWORD *)(a1 + 24) : v785 + v775;
              if (v785 < v786)
              {
                uint64_t v787 = MEMORY[0x263EF8330];
                do
                {
                  uint64_t v788 = *(void *)(a1 + 16) + 258752 * v785;
                  v789 = *(NSObject **)(a1 + 32);
                  v790 = *(NSObject **)(a1 + 40);
                  *(void *)&long long v851 = v787;
                  *((void *)&v851 + 1) = 0x40000000;
                  *(void *)&long long v852 = sub_224AE1D94;
                  *((void *)&v852 + 1) = &unk_2646ED638;
                  uint64_t v853 = v788;
                  dispatch_group_async(v789, v790, &v851);
                  unsigned int v785 = *(_DWORD *)(a1 + 28) + 1;
                  *(_DWORD *)(a1 + 28) = v785;
                }
                while (v785 < v786);
              }
            }
            goto LABEL_971;
          }
          if (*(void *)(a1 + 32))
          {
            if (v774 >= 2)
            {
              unsigned int v776 = *(_DWORD *)(a1 + 28);
              if (v776 < v775)
              {
                uint64_t v777 = MEMORY[0x263EF8330];
                do
                {
                  uint64_t v778 = *(void *)(a1 + 16) + 258752 * v776;
                  v779 = *(NSObject **)(a1 + 32);
                  v780 = *(NSObject **)(a1 + 40);
                  block[0] = v777;
                  block[1] = 0x40000000;
                  block[2] = (uint64_t)sub_224AE1D8C;
                  block[3] = (uint64_t)&unk_2646ED618;
                  block[4] = v778;
                  dispatch_group_async(v779, v780, block);
                  unsigned int v776 = *(_DWORD *)(a1 + 28) + 1;
                  *(_DWORD *)(a1 + 28) = v776;
                }
                while (v776 < v775);
              }
            }
          }
          int v781 = sub_224AE0010(v584);
          uint64_t v4 = v840;
          uint64_t v586 = v831;
          if (!v781)
          {
            int v781 = sub_224AE12CC(v584);
            if (!v781)
            {
              uint64_t v782 = *(void *)(v584 + 3256);
              if (*(_DWORD *)(v782 + 24) < 2u)
              {
                uint64_t v800 = *(void *)(v782 + 16);
                uint64_t v801 = (v584 - *(void *)v782) >> 4;
                uint64_t v802 = v800 + 0x58EB3458EB345BC0 * v801;
                *(_DWORD *)(v802 + 258564) = 0;
                *(void *)(v802 + 8) = v584;
                uint64_t v803 = *(void *)(v584 + 24);
                int v804 = *(unsigned __int8 *)(v803 + 449);
                if (*(_DWORD *)(v584 + 3456) * v804 >= 1)
                {
                  uint64_t v805 = 0;
                  int64_t v806 = 0;
                  do
                  {
                    sub_224AD4BD0((_OWORD *)(*(void *)(v584 + 4032) + v805), (*(_DWORD *)(v803 + 232) & 1) == 0, 0);
                    ++v806;
                    uint64_t v803 = *(void *)(v584 + 24);
                    int v804 = *(unsigned __int8 *)(v803 + 449);
                    v805 += 624;
                  }
                  while (v806 < (uint64_t)(*(int *)(v584 + 3456) * (unint64_t)*(unsigned __int8 *)(v803 + 449)));
                }
                if (v804)
                {
                  uint64_t v807 = 0;
                  uint64_t v808 = v800 + 0x58EB3458EB345BC0 * v801;
                  v837 = (int *)(v808 + 28);
                  v809 = (void *)(v808 + 16);
                  uint64_t v827 = v808 + 664;
                  while (1)
                  {
                    unint64_t v833 = v807 + 1;
                    int v810 = *(unsigned __int16 *)(v803 + 580 + 2 * (v807 + 1)) >= *(int *)(v584 + 3464)
                         ? *(_DWORD *)(v584 + 3464)
                         : *(unsigned __int16 *)(v803 + 580 + 2 * (v807 + 1));
                    if (v810 > *(unsigned __int16 *)(v803 + 580 + 2 * v807)) {
                      break;
                    }
LABEL_1321:
                    ++v807;
                    if (v833 >= *(unsigned __int8 *)(v803 + 449)) {
                      goto LABEL_1322;
                    }
                  }
                  uint64_t v811 = *(unsigned __int16 *)(v803 + 580 + 2 * v807);
                  while (1)
                  {
                    uint64_t v812 = v811;
                    int v813 = v811 << (*(unsigned char *)(*(void *)(v584 + 8) + 392) + 4);
                    int *v837 = v813;
                    v814 = *(unsigned char **)(v584 + 24);
                    if (v814[437])
                    {
                      (*(void (**)(uint64_t, uint64_t, void, void, void))(*(void *)(v584 + 3256)
                                                                                       + 63000))(v584 + 4048, v807, 0, (*(int *)(v584 + 3448) >> 1), (v813 >> 1));
                      v814 = *(unsigned char **)(v584 + 24);
                    }
                    unsigned int v815 = v814[445];
                    if (v814[445]) {
                      break;
                    }
LABEL_1317:
                    if (v814[232]) {
                      (*(void (**)(unint64_t))(*(void *)(v584 + 3256) + 63008))(*(void *)(*(void *)v827 + 160)+ 5 * *(void *)(*(void *)v827 + 184) * ((unint64_t)*v837 >> 1));
                    }
                    (*(void (**)(uint64_t, uint64_t))(v584 + 3304))(v584, v812);
                    uint64_t v811 = (v812 + 1);
                    if (v811 == v810)
                    {
                      uint64_t v803 = *(void *)(v584 + 24);
                      goto LABEL_1321;
                    }
                  }
                  unsigned int v816 = 0;
                  while (1)
                  {
                    void *v809 = *(void *)(v584 + 3264) + 14624 * (v816 + v807 * v815);
                    if (sub_224AD42F4(v802)) {
                      break;
                    }
                    ++v816;
                    v814 = *(unsigned char **)(v584 + 24);
                    unsigned int v815 = v814[445];
                    if (v816 >= v815) {
                      goto LABEL_1317;
                    }
                  }
                  int v781 = -22;
                }
                else
                {
LABEL_1322:
                  if (*(unsigned char *)(v803 + 438) && *(_DWORD *)(v584 + 5560)) {
                    sub_224AF7AFC(v803, *(void *)(v584 + 3096), *(void *)(v584 + 3264) + 14624 * *(unsigned __int16 *)(v803 + 710));
                  }
                  int v781 = 0;
                }
              }
              else
              {
                int v783 = sub_224AFBFF0(v584, 0);
                pthread_mutex_lock(*(pthread_mutex_t **)(v584 + 5472));
                pthread_cond_signal((pthread_cond_t *)(*(void *)(v584 + 5472) + 64));
                if (!v783)
                {
                  while (1)
                  {
                    if (atomic_load((unsigned int *)(v584 + 5548)))
                    {
                      int v825 = atomic_load((unsigned int *)(v584 + 5568));
                      if (v825 < 1) {
                        break;
                      }
                    }
                    pthread_cond_wait((pthread_cond_t *)(v584 + 5424), *(pthread_mutex_t **)(v584 + 5472));
                  }
                }
                pthread_mutex_unlock(*(pthread_mutex_t **)(v584 + 5472));
                int v781 = *(_DWORD *)(v584 + 5556);
              }
              uint64_t v4 = v840;
              uint64_t v586 = v831;
            }
          }
          sub_224AE1BC0(v584, v781);
          int v654 = *(_DWORD *)(v584 + 5556);
          *(_DWORD *)(v584 + 3124) = 0;
          if ((v654 & 0x80000000) == 0) {
            goto LABEL_971;
          }
          sub_224AFAD94(a1 + 248);
          char v817 = 0;
          uint64_t v818 = 0;
          uint64_t v819 = 0;
          *(void *)(a1 + 536) = 0;
          uint64_t v820 = a1 + 52696;
          do
          {
            if ((v845 >> v817))
            {
              uint64_t v821 = v586;
              uint64_t v822 = v820 + v818;
              if (*(void *)(v820 + v818 - 2752))
              {
                sub_224AFAD94(v822 - 2760);
                *(void *)(v822 - 2472) = 0;
              }
              v823 = (void *)(a1 + 52704 + v819);
              void *v823 = 0;
              v823[1] = 0;
              sub_224AF722C((uint64_t *)(v820 + v819));
              sub_224AF722C((uint64_t *)(v822 - 2464));
              sub_224AF722C((uint64_t *)(v822 - 2456));
              uint64_t v586 = v821;
            }
            v819 += 24;
            v818 += 344;
            ++v817;
          }
          while (v819 != 192);
          goto LABEL_1280;
        }
        int v654 = -12;
LABEL_1280:
        *(_DWORD *)(v584 + 5564) = 1;
        *(void *)(v584 + 3080) = 0;
        *(void *)(v584 + 3072) = 0;
        sub_224AF722C((uint64_t *)(v584 + 3064));
        if (*(unsigned char *)(*(void *)(v584 + 24) + 438))
        {
          *(void *)(v584 + 3104) = 0;
          *(void *)(v584 + 3096) = 0;
          sub_224AF722C((uint64_t *)(v584 + 3088));
        }
        uint64_t v791 = 2744;
        uint64_t v792 = v584;
        do
        {
          if (*(void *)(v792 + 40))
          {
            sub_224AFAD94(v792 + 32);
            *(void *)(v792 + 320) = 0;
          }
          sub_224AF722C((uint64_t *)(v584 + v791));
          v792 += 296;
          v791 += 8;
        }
        while (v791 != 2800);
        if (*(_DWORD *)(a1 + 8) == 1)
        {
          sub_224AFAD94(a1 + 248);
          v793 = (void *)(a1 + 536);
        }
        else
        {
          sub_224AFAD94(v586);
          v793 = (void *)(v586 + 288);
        }
        void *v793 = 0;
        sub_224AFAD94(v584 + 2104);
        sub_224AFAD94(v584 + 2376);
        *(void *)(v584 + 2664) = 0;
        sub_224AF722C((uint64_t *)(v584 + 2672));
        sub_224AF722C((uint64_t *)v584);
        sub_224AF722C((uint64_t *)(v584 + 16));
        sub_224AF722C((uint64_t *)(v4 + 13224));
        *(_OWORD *)(a1 + 63136) = *(_OWORD *)(a1 + 232);
        *(_OWORD *)(a1 + 63104) = *(_OWORD *)(a1 + 200);
        *(_OWORD *)(a1 + 63120) = *(_OWORD *)(a1 + 216);
        uint64_t v794 = *(void *)(v4 + 13224);
        if (v794) {
          atomic_fetch_add_explicit((atomic_uint *volatile)(v794 + 16), 1u, memory_order_relaxed);
        }
        if (*(int *)(v584 + 3124) >= 1)
        {
          uint64_t v795 = 0;
          uint64_t v796 = 0;
          do
          {
            sub_224AC7180(*(void *)(v584 + 3112) + v795);
            ++v796;
            v795 += 80;
          }
          while (v796 < *(int *)(v584 + 3124));
        }
        *(_DWORD *)(v584 + 3124) = 0;
        if (*(_DWORD *)(a1 + 8) > 1u) {
          pthread_mutex_unlock((pthread_mutex_t *)(a1 + 896));
        }
        if (v654 < 0) {
          return v654;
        }
LABEL_971:
        *(void *)(a1 + 112) = 0;
        *(_DWORD *)(a1 + 64) = 0;
        return v850 - v849;
      }
      sub_224AF71C8(*(void *)v4, 32 * *(void *)(v584 + 3432) * *(int *)(v584 + 3460));
      *(void *)(v584 + 2800) = v756;
      if (v756)
      {
        v836 = (void *)(v584 + 2376);
        uint64_t v840 = v4;
        uint64_t v831 = v586;
        uint64_t v757 = *v756;
LABEL_1237:
        *(void *)(v584 + 2816) = v757;
        goto LABEL_1238;
      }
      sub_224AF722C((uint64_t *)(v584 + 2808));
LABEL_1279:
      int v654 = -12;
      goto LABEL_1280;
    case 7:
      if (*(void *)(a1 + 112)) {
        goto LABEL_889;
      }
LABEL_32:
      if (!*(void *)(a1 + 88)) {
        goto LABEL_1083;
      }
      int v35 = *(void ***)(a1 + 104);
      if (v35)
      {
        int v36 = *v35;
        goto LABEL_63;
      }
      uint64_t v66 = *(void *)(a1 + 96);
      int v67 = sub_224AE4B24(v66, (char *)0x4A8);
      if (v67)
      {
        __int16 v68 = v67;
        int v36 = *(void **)v67;
        *((void *)v68 - 5) = v36;
        *((void *)v68 - 4) = v66;
        *((void *)v68 - 3) = 1;
        *((void *)v68 - 2) = sub_224AF7228;
        *((void *)v68 - 1) = v68;
        *(void *)(a1 + 104) = v68 - 40;
LABEL_63:
        *(void *)(a1 + 112) = v36;
        bzero(v36, 0x480uLL);
        uint64_t v69 = *(void *)(a1 + 112);
        *(unsigned char *)(v69 + 249) = v31;
        *(unsigned char *)(v69 + 250) = v32;
        uint64_t v70 = *(void *)(a1 + 88);
        v835 = v8;
        uint64_t v838 = v4;
        int v829 = v15;
        v832 = v2;
        if (*(unsigned char *)(v70 + 357))
        {
          int v71 = 0;
          *(_DWORD *)(v69 + 232) = 0;
          v841 = (_DWORD *)(v69 + 232);
          *(unsigned char *)(v69 + 251) = 0;
LABEL_65:
          __int16 v72 = (unsigned char *)(v69 + 264);
          *(unsigned char *)(v69 + 264) = 1;
          goto LABEL_66;
        }
        if (!v847)
        {
          int v80 = (unsigned __int8 *)__src;
          if (__src < v850)
          {
            __src = (char *)__src + 1;
            unint64_t v81 = *v80;
            LODWORD(v847) = 7;
            uint64_t v846 = v81 << 57;
            LODWORD(v81) = (v81 >> 7) & 1;
            goto LABEL_110;
          }
          HIDWORD(v847) = 1;
        }
        unint64_t v98 = v846;
        LODWORD(v847) = v847 - 1;
        v846 *= 2;
        unint64_t v81 = v98 >> 63;
LABEL_110:
        *(unsigned char *)(v69 + 251) = v81;
        if (v81)
        {
          *(unsigned char *)(v69 + 252) = sub_224AEC1C4(&v846, 3u);
          if (*(unsigned char *)(v70 + 376) && !*(unsigned char *)(v70 + 368)) {
            *(_DWORD *)(v69 + 260) = sub_224AEC1C4(&v846, *(unsigned __int8 *)(v70 + 385));
          }
          if (!*(unsigned char *)(v70 + 389)) {
            goto LABEL_861;
          }
          int v99 = sub_224AEC1C4(&v846, *(unsigned __int8 *)(v70 + 391));
          *(_DWORD *)(v69 + 256) = v99;
          uint64_t v100 = *(void *)(a1 + 344 * *(unsigned __int8 *)(v69 + 252) + 49944);
          if (v100)
          {
            if (*(_DWORD *)(v100 + 256) == v99) {
              goto LABEL_861;
            }
          }
          goto LABEL_1082;
        }
        int v71 = sub_224AEC1C4(&v846, 2u);
        int v101 = *(unsigned __int8 *)(v70 + 357);
        *(_DWORD *)(v69 + 232) = v71;
        v841 = (_DWORD *)(v69 + 232);
        if (v101) {
          goto LABEL_65;
        }
        if (!v847)
        {
          int v102 = (unsigned __int8 *)__src;
          if (__src < v850)
          {
            __src = (char *)__src + 1;
            uint64_t v103 = *v102;
            int v104 = 7;
            LODWORD(v847) = 7;
            unint64_t v105 = v103 << 57;
            uint64_t v846 = v103 << 57;
            LODWORD(v103) = (v103 >> 7) & 1;
            __int16 v72 = (unsigned char *)(v69 + 264);
            *(unsigned char *)(v69 + 264) = v103;
            if (!v103)
            {
LABEL_1204:
              LODWORD(v847) = v104 - 1;
              uint64_t v846 = 2 * v105;
              unint64_t v73 = v105 >> 63;
              goto LABEL_70;
            }
            goto LABEL_66;
          }
          HIDWORD(v847) = 1;
        }
        unint64_t v678 = v846;
        int v104 = v847 - 1;
        LODWORD(v847) = v847 - 1;
        unint64_t v105 = 2 * v846;
        v846 *= 2;
        v678 >>= 63;
        __int16 v72 = (unsigned char *)(v69 + 264);
        *(unsigned char *)(v69 + 264) = v678;
        if (!v678)
        {
          if (!v104)
          {
            v679 = (unsigned __int8 *)__src;
            if (__src < v850)
            {
              __src = (char *)__src + 1;
              unint64_t v73 = *v679;
              LODWORD(v847) = 7;
              uint64_t v846 = v73 << 57;
              LODWORD(v73) = (v73 >> 7) & 1;
              goto LABEL_70;
            }
            HIDWORD(v847) = 1;
          }
          goto LABEL_1204;
        }
LABEL_66:
        if (*(unsigned char *)(v70 + 376) && !*(unsigned char *)(v70 + 368))
        {
          *(_DWORD *)(v69 + 260) = sub_224AEC1C4(&v846, *(unsigned __int8 *)(v70 + 385));
          int v71 = *(_DWORD *)(v69 + 232);
        }
        LOBYTE(v73) = v71 != 0;
LABEL_70:
        *(unsigned char *)(v69 + 265) = v73;
        if (v71 == 3 || !v71 && *v72 || *(unsigned char *)(v70 + 357))
        {
          BOOL v74 = 1;
          goto LABEL_75;
        }
        if (!v847)
        {
          uint64_t v83 = (unsigned __int8 *)__src;
          if (__src < v850)
          {
            __src = (char *)__src + 1;
            unint64_t v84 = *v83;
            LODWORD(v847) = 7;
            uint64_t v846 = v84 << 57;
            LODWORD(v84) = (v84 >> 7) & 1;
LABEL_307:
            BOOL v74 = v84 != 0;
LABEL_75:
            *(unsigned char *)(v69 + 266) = v74;
            if (!v847)
            {
              uint64_t v75 = (unsigned __int8 *)__src;
              if (__src < v850)
              {
                __src = (char *)__src + 1;
                uint64_t v79 = *v75;
                int v76 = 7;
                LODWORD(v847) = 7;
                unint64_t v77 = v79 << 57;
                uint64_t v846 = v79 << 57;
                uint64_t v78 = (unsigned char *)(v69 + 267);
                *(unsigned char *)(v69 + 267) = (v79 & 0x80) != 0;
                LODWORD(v79) = *(_DWORD *)(v70 + 404);
                if (v79 != 2)
                {
LABEL_125:
                  *(unsigned char *)(v69 + 268) = v79;
                  if ((_BYTE)v79)
                  {
                    LODWORD(v106) = *(_DWORD *)(v70 + 408);
                    if (v106 != 2) {
                      goto LABEL_143;
                    }
                    if (!v76)
                    {
                      uint64_t v106 = (unsigned __int8 *)__src;
                      if (__src < v850)
                      {
                        __src = (char *)__src + 1;
                        uint64_t v107 = *v106;
                        LODWORD(v847) = 7;
                        uint64_t v846 = v107 << 57;
                        LODWORD(v106) = (v107 >> 7) & 1;
                        goto LABEL_143;
                      }
                      HIDWORD(v847) = 1;
                    }
                    LODWORD(v847) = v76 - 1;
                    uint64_t v846 = 2 * v77;
                    uint64_t v106 = (unsigned __int8 *)(v77 >> 63);
                  }
                  else
                  {
                    LOBYTE(v106) = 0;
                  }
LABEL_143:
                  if (v71) {
                    char v115 = (char)v106;
                  }
                  else {
                    char v115 = 1;
                  }
                  *(unsigned char *)(v69 + 269) = v115;
                  if (*(unsigned char *)(v70 + 389)) {
                    *(_DWORD *)(v69 + 256) = sub_224AEC1C4(&v846, *(unsigned __int8 *)(v70 + 391));
                  }
                  if (*(unsigned char *)(v70 + 357))
                  {
                    LOBYTE(v116) = 0;
                    goto LABEL_162;
                  }
                  if (*v841 == 3)
                  {
                    LOBYTE(v116) = 1;
                    goto LABEL_162;
                  }
                  if (!v847)
                  {
                    long long v117 = (unsigned __int8 *)__src;
                    if (__src < v850)
                    {
                      __src = (char *)__src + 1;
                      unint64_t v116 = *v117;
                      LODWORD(v847) = 7;
                      uint64_t v846 = v116 << 57;
                      LODWORD(v116) = (v116 >> 7) & 1;
                      goto LABEL_162;
                    }
                    HIDWORD(v847) = 1;
                  }
                  unint64_t v122 = v846;
                  LODWORD(v847) = v847 - 1;
                  v846 *= 2;
                  unint64_t v116 = v122 >> 63;
LABEL_162:
                  *(unsigned char *)(v69 + 270) = v116;
                  if (*(unsigned char *)(v70 + 399)) {
                    char v123 = sub_224AEC1C4(&v846, *(unsigned __int8 *)(v70 + 412));
                  }
                  else {
                    char v123 = 0;
                  }
                  *(unsigned char *)(v69 + 248) = v123;
                  v842 = (unsigned __int8 *)v70;
                  v828 = v72;
                  if (!*(unsigned char *)(v69 + 266) && (*(unsigned char *)v841 & 1) != 0)
                  {
                    __int16 v124 = v8;
                    char v125 = sub_224AEC1C4(&v846, 3u);
                  }
                  else
                  {
                    __int16 v124 = v8;
                    char v125 = 7;
                  }
                  *(unsigned char *)(v69 + 271) = v125;
                  if (!*(unsigned char *)(v70 + 376)) {
                    goto LABEL_184;
                  }
                  if (!v847)
                  {
                    int v126 = (unsigned __int8 *)__src;
                    if (__src < v850)
                    {
                      __src = (char *)__src + 1;
                      unint64_t v127 = *v126;
                      LODWORD(v847) = 7;
                      uint64_t v846 = v127 << 57;
                      LODWORD(v127) = (v127 >> 7) & 1;
LABEL_175:
                      *(unsigned char *)(v69 + 272) = v127;
                      if (v127)
                      {
                        uint64_t v129 = *(void *)(a1 + 88);
                        if (*(unsigned char *)(v129 + 34))
                        {
                          unint64_t v130 = 0;
                          int v131 = (unsigned __int16 *)(v842 + 40);
                          do
                          {
                            if (*((unsigned char *)v131 + 3))
                            {
                              unsigned int v132 = *v131;
                              if (!*v131
                                || ((v132 >> *(unsigned char *)(v69 + 249)) & 1) != 0
                                && ((256 << *(unsigned char *)(v69 + 250)) & v132) != 0)
                              {
                                *(_DWORD *)(v69 + 276 + 4 * v130) = sub_224AEC1C4(&v846, v842[384]);
                              }
                            }
                            ++v130;
                            v131 += 5;
                          }
                          while (v130 < *(unsigned __int8 *)(v129 + 34));
                        }
                      }
LABEL_184:
                      int v133 = *v841;
                      if ((*v841 & 1) == 0)
                      {
                        if (v133 || !*v828)
                        {
                          char v134 = sub_224AEC1C4(&v846, 8u);
                          int v135 = (unsigned __int8 *)(v69 + 404);
                          *(unsigned char *)(v69 + 404) = v134;
                          if (v134 != -1 && *(unsigned char *)(v69 + 266) && v842[399])
                          {
                            int v136 = 8;
                            do
                            {
                              sub_224AEC1C4(&v846, v842[412]);
                              --v136;
                            }
                            while (v136);
                          }
                        }
                        else
                        {
                          int v135 = (unsigned __int8 *)(v69 + 404);
                          *(unsigned char *)(v69 + 404) = -1;
                        }
                        int v143 = *v124;
                        int v144 = v842;
                        if (v143 && *v841 == 2 && *v135 == 255 || (sub_224AD3350(a1, &v846, 0) & 0x80000000) != 0) {
                          goto LABEL_1082;
                        }
                        if (!*(unsigned char *)(v69 + 268) || *(unsigned char *)(v69 + 417))
                        {
                          BOOL v145 = 0;
LABEL_336:
                          BOOL v207 = 0;
                          *(unsigned char *)(v69 + 419) = v145;
                          goto LABEL_337;
                        }
                        if (!v847)
                        {
                          signed int v146 = (unsigned __int8 *)__src;
                          if (__src < v850)
                          {
                            __src = (char *)__src + 1;
                            unint64_t v147 = *v146;
                            LODWORD(v847) = 7;
                            uint64_t v846 = v147 << 57;
                            LODWORD(v147) = (v147 >> 7) & 1;
LABEL_335:
                            BOOL v145 = v147 != 0;
                            goto LABEL_336;
                          }
                          HIDWORD(v847) = 1;
                        }
                        unint64_t v210 = v846;
                        LODWORD(v847) = v847 - 1;
                        v846 *= 2;
                        unint64_t v147 = v210 >> 63;
                        goto LABEL_335;
                      }
                      *(unsigned char *)(v69 + 419) = 0;
                      if (v133 == 3) {
                        char v137 = -1;
                      }
                      else {
                        char v137 = sub_224AEC1C4(&v846, 8u);
                      }
                      *(unsigned char *)(v69 + 404) = v137;
                      int v138 = v842[399];
                      if (*(unsigned char *)(v69 + 266))
                      {
                        if (!v842[399]) {
                          goto LABEL_204;
                        }
                        int v139 = 8;
                        do
                        {
                          sub_224AEC1C4(&v846, v842[412]);
                          --v139;
                        }
                        while (v139);
                        int v138 = v842[399];
                      }
                      if (v138)
                      {
                        if (!v847)
                        {
                          uint64_t v140 = (unsigned __int8 *)__src;
                          if (__src < v850)
                          {
                            __src = (char *)__src + 1;
                            unint64_t v141 = *v140;
                            LODWORD(v847) = 7;
                            uint64_t v846 = v141 << 57;
                            LODWORD(v141) = (v141 >> 7) & 1;
                            goto LABEL_219;
                          }
                          HIDWORD(v847) = 1;
                        }
                        unint64_t v148 = v846;
                        LODWORD(v847) = v847 - 1;
                        v846 *= 2;
                        unint64_t v141 = v148 >> 63;
LABEL_219:
                        __int16 v142 = (unsigned char *)(v69 + 420);
                        *(unsigned char *)(v69 + 420) = v141;
                        if (v141)
                        {
                          *(unsigned char *)(v69 + 421) = sub_224AEC1C4(&v846, 3u);
                          *(_WORD *)(v69 + 422) = -1;
                          char v149 = sub_224AEC1C4(&v846, 3u);
                          uint64_t v150 = 0;
                          *(unsigned char *)(v69 + 424) = v149;
                          *(unsigned char *)(v69 + 427) = -1;
                          *(_WORD *)(v69 + 425) = -1;
                          int v144 = v842;
                          int v151 = v842[412];
                          int v152 = 1 << (v151 - 1);
                          uint64_t v153 = v4 + 24;
                          do
                          {
                            if (!*(void *)v153) {
                              goto LABEL_1082;
                            }
                            if (v151)
                            {
                              int v154 = *(unsigned __int8 *)(*(void *)v153 + 248) - *(unsigned __int8 *)(v69 + 248);
                              int v155 = (v154 & (v152 - 1)) - (v154 & v152);
                            }
                            else
                            {
                              int v155 = 0;
                            }
                            *(_DWORD *)((char *)block + v150) = v155 + v152;
                            v150 += 4;
                            v153 += 344;
                          }
                          while (v150 != 32);
                          uint64_t v156 = 0;
                          long long v851 = 0u;
                          long long v852 = 0u;
                          *((_DWORD *)&v851 + *(char *)(v69 + 421)) = 1;
                          *((_DWORD *)&v851 + v149) = 1;
                          int v157 = -1;
                          char v158 = -1;
                          do
                          {
                            int v159 = *((_DWORD *)block + v156);
                            if (*((_DWORD *)&v851 + v156)) {
                              BOOL v160 = 1;
                            }
                            else {
                              BOOL v160 = v159 < v152;
                            }
                            if (!v160 && v159 >= v157)
                            {
                              *(unsigned char *)(v69 + 427) = v156;
                              char v158 = v156;
                              int v157 = v159;
                            }
                            ++v156;
                          }
                          while (v156 != 8);
                          if (v157 != -1) {
                            *((_DWORD *)&v851 + v158) = 1;
                          }
                          uint64_t v162 = 0;
                          int v163 = 0x7FFFFFFF;
                          char v164 = -1;
                          do
                          {
                            int v165 = *((_DWORD *)block + v162);
                            if (*((_DWORD *)&v851 + v162)) {
                              BOOL v166 = 1;
                            }
                            else {
                              BOOL v166 = v165 < v152;
                            }
                            if (!v166 && v165 < v163)
                            {
                              *(unsigned char *)(v69 + 425) = v162;
                              char v164 = v162;
                              int v163 = v165;
                            }
                            ++v162;
                          }
                          while (v162 != 8);
                          if (v163 != 0x7FFFFFFF) {
                            *((_DWORD *)&v851 + v164) = 1;
                          }
                          uint64_t v168 = 0;
                          int v169 = 0x7FFFFFFF;
                          char v170 = -1;
                          do
                          {
                            int v171 = *((_DWORD *)block + v168);
                            if (*((_DWORD *)&v851 + v168)) {
                              BOOL v172 = 1;
                            }
                            else {
                              BOOL v172 = v171 < v152;
                            }
                            if (!v172 && v171 < v169)
                            {
                              *(unsigned char *)(v69 + 426) = v168;
                              char v170 = v168;
                              int v169 = v171;
                            }
                            ++v168;
                          }
                          while (v168 != 8);
                          if (v169 != 0x7FFFFFFF) {
                            *((_DWORD *)&v851 + v170) = 1;
                          }
                          for (uint64_t i = 1; i != 7; ++i)
                          {
                            int v175 = *(char *)(v69 + i + 421);
                            if (v175 < 0)
                            {
                              uint64_t v176 = 0;
                              int v177 = -1;
                              do
                              {
                                int v178 = *((_DWORD *)block + v176);
                                if (*((_DWORD *)&v851 + v176)) {
                                  BOOL v179 = 0;
                                }
                                else {
                                  BOOL v179 = v178 < v152;
                                }
                                if (v179 && v178 >= v177)
                                {
                                  *(unsigned char *)(v69 + i + 421) = v176;
                                  LOBYTE(v175) = v176;
                                  int v177 = v178;
                                }
                                ++v176;
                              }
                              while (v176 != 8);
                              if (v177 != -1) {
                                *((_DWORD *)&v851 + (char)v175) = 1;
                              }
                            }
                          }
                          uint64_t v181 = 0;
                          int v182 = 0x7FFFFFFF;
                          char v183 = -1;
                          do
                          {
                            if (*((_DWORD *)block + v181) < v182)
                            {
                              int v182 = *((_DWORD *)block + v181);
                              char v183 = v181;
                            }
                            ++v181;
                          }
                          while (v181 != 8);
                          uint64_t v184 = 0;
                          uint64_t v185 = v69 + 421;
                          do
                          {
                            if (*(char *)(v185 + v184) < 0) {
                              *(unsigned char *)(v185 + v184) = v183;
                            }
                            ++v184;
                          }
                          while (v184 != 7);
LABEL_289:
                          uint64_t v186 = 0;
                          uint64_t v187 = v69 + 421;
                          do
                          {
                            if (!*v142) {
                              *(unsigned char *)(v187 + v186) = sub_224AEC1C4(&v846, 3u);
                            }
                            if (v144[389])
                            {
                              int v188 = sub_224AEC1C4(&v846, v144[390]);
                              uint64_t v189 = *(void *)(a1 + 344 * *(char *)(v187 + v186) + 49944);
                              if (!v189
                                || *(_DWORD *)(v189 + 256) != ((*(_DWORD *)(v69 + 256) + (1 << v144[391]) + ~v188) & ((1 << v144[391]) - 1)))
                              {
                                goto LABEL_1082;
                              }
                            }
                            ++v186;
                          }
                          while (v186 != 7);
                          if (*(unsigned char *)(v69 + 266)) {
                            BOOL v190 = 0;
                          }
                          else {
                            BOOL v190 = *(unsigned char *)(v69 + 270) != 0;
                          }
                          if ((sub_224AD3350(a1, &v846, v190) & 0x80000000) != 0) {
                            goto LABEL_1082;
                          }
                          int v191 = v847;
                          if (*(unsigned char *)(v69 + 269))
                          {
                            BOOL v192 = 0;
                            goto LABEL_311;
                          }
                          if (!v847)
                          {
                            unint64_t v193 = (unsigned __int8 *)__src;
                            if (__src < v850)
                            {
                              __src = (char *)__src + 1;
                              unint64_t v194 = *v193;
                              int v191 = 7;
                              LODWORD(v847) = 7;
                              uint64_t v846 = v194 << 57;
                              LODWORD(v194) = (v194 >> 7) & 1;
LABEL_310:
                              BOOL v192 = v194 != 0;
LABEL_311:
                              *(unsigned char *)(v69 + 428) = v192;
                              if (!v191)
                              {
                                long long v197 = (unsigned __int8 *)__src;
                                if (__src < v850)
                                {
                                  __src = (char *)__src + 1;
                                  unint64_t v199 = *v197;
                                  int v198 = 7;
                                  LODWORD(v847) = 7;
                                  uint64_t v846 = v199 << 57;
                                  LODWORD(v199) = (v199 >> 7) & 1;
                                  goto LABEL_316;
                                }
                                HIDWORD(v847) = 1;
                              }
                              unint64_t v200 = v846;
                              int v198 = v191 - 1;
                              LODWORD(v847) = v198;
                              v846 *= 2;
                              unint64_t v199 = v200 >> 63;
LABEL_316:
                              if (v199)
                              {
                                int v201 = 4;
                              }
                              else
                              {
                                int v201 = sub_224AEC1C4(&v846, 2u);
                                int v198 = v847;
                              }
                              *(_DWORD *)(v69 + 432) = v201;
                              if (!v198)
                              {
                                unsigned int v202 = (unsigned __int8 *)__src;
                                if (__src < v850)
                                {
                                  __src = (char *)__src + 1;
                                  unint64_t v205 = *v202;
                                  int v203 = 7;
                                  LODWORD(v847) = 7;
                                  unint64_t v204 = v205 << 57;
                                  uint64_t v846 = v205 << 57;
                                  LODWORD(v205) = (v205 >> 7) & 1;
LABEL_324:
                                  *(unsigned char *)(v69 + 436) = v205;
                                  if (*(unsigned char *)(v69 + 266) || !v144[401] || !v144[399] || (*(unsigned char *)v841 & 1) == 0)
                                  {
                                    BOOL v207 = 0;
                                    goto LABEL_337;
                                  }
                                  if (!v203)
                                  {
                                    unsigned int v208 = (unsigned __int8 *)__src;
                                    if (__src < v850)
                                    {
                                      __src = (char *)__src + 1;
                                      unint64_t v209 = *v208;
                                      LODWORD(v847) = 7;
                                      uint64_t v846 = v209 << 57;
                                      LODWORD(v209) = (v209 >> 7) & 1;
LABEL_1183:
                                      BOOL v207 = v209 != 0;
LABEL_337:
                                      *(unsigned char *)(v69 + 437) = v207;
                                      if (v144[357])
                                      {
                                        BOOL v211 = 0;
                                        int v212 = v847;
                                        goto LABEL_347;
                                      }
                                      int v212 = v847;
                                      if (*v78)
                                      {
                                        BOOL v211 = 0;
                                        goto LABEL_347;
                                      }
                                      if (!v847)
                                      {
                                        int v213 = (unsigned __int8 *)__src;
                                        if (__src < v850)
                                        {
                                          __src = (char *)__src + 1;
                                          unint64_t v214 = *v213;
                                          int v212 = 7;
                                          LODWORD(v847) = 7;
                                          uint64_t v846 = v214 << 57;
                                          LODWORD(v214) = (v214 >> 7) & 1;
LABEL_346:
                                          BOOL v211 = v214 == 0;
LABEL_347:
                                          *(unsigned char *)(v69 + 438) = v211;
                                          if (!v212)
                                          {
                                            char v216 = (unsigned __int8 *)__src;
                                            if (__src < v850)
                                            {
                                              __src = (char *)__src + 1;
                                              uint64_t v217 = *v216;
                                              int v218 = 7;
                                              LODWORD(v847) = 7;
                                              unint64_t v219 = v217 << 57;
                                              uint64_t v846 = v217 << 57;
                                              LODWORD(v220) = (v217 >> 7) & 1;
LABEL_352:
                                              *(unsigned char *)(v69 + 440) = v220;
                                              unsigned __int8 v222 = v144[392];
                                              int v223 = (64 << v222) - 1;
                                              char v224 = v222 + 6;
                                              int v225 = (v223 + *(_DWORD *)(v69 + 236)) >> (v222 + 6);
                                              int v226 = *(_DWORD *)(v69 + 244);
                                              signed int v227 = 0x40u >> v222;
                                              unsigned __int8 v228 = -1;
                                              do
                                                ++v228;
                                              while (v227 << v228 < v225);
                                              char v229 = 2 * v224;
                                              unsigned int v230 = v228;
                                              *(unsigned char *)(v69 + 442) = v228;
                                              if (v225 >= 64) {
                                                int v231 = 64;
                                              }
                                              else {
                                                int v231 = v225;
                                              }
                                              unsigned __int8 v232 = -1;
                                              do
                                                ++v232;
                                              while (1 << v232 < v231);
                                              int v233 = (v223 + v226) >> v224;
                                              *(unsigned char *)(v69 + 443) = v232;
                                              if (v233 >= 64) {
                                                int v234 = 64;
                                              }
                                              else {
                                                int v234 = (v223 + v226) >> v224;
                                              }
                                              unsigned __int8 v235 = -1;
                                              do
                                                ++v235;
                                              while (1 << v235 < v234);
                                              unsigned int v236 = 0x900000u >> v229;
                                              unsigned int v237 = v235;
                                              *(unsigned char *)(v69 + 447) = v235;
                                              int v238 = v225 * v233;
                                              int v239 = -1;
                                              do
                                                ++v239;
                                              while ((int)(v236 << v239) < v238);
                                              if (v239 <= v228) {
                                                int v240 = v228;
                                              }
                                              else {
                                                int v240 = v239;
                                              }
                                              if (v220)
                                              {
                                                *(unsigned char *)(v69 + 444) = v228;
                                                if (v232 > v228)
                                                {
                                                  int v241 = v850;
                                                  unsigned int v242 = (unsigned __int8 *)__src;
                                                  while (1)
                                                  {
                                                    if (!v218)
                                                    {
                                                      if (v242 < v241)
                                                      {
                                                        __src = v242 + 1;
                                                        uint64_t v243 = *v242;
                                                        int v218 = 7;
                                                        LODWORD(v847) = 7;
                                                        unint64_t v219 = v243 << 57;
                                                        uint64_t v846 = v243 << 57;
                                                        LODWORD(v244) = (v243 >> 7) & 1;
                                                        unsigned int v242 = (unsigned __int8 *)__src;
                                                        goto LABEL_377;
                                                      }
                                                      HIDWORD(v847) = 1;
                                                    }
                                                    LODWORD(v847) = --v218;
                                                    unint64_t v244 = v219 >> 63;
                                                    v219 *= 2;
                                                    uint64_t v846 = v219;
LABEL_377:
                                                    if (v244)
                                                    {
                                                      *(unsigned char *)(v69 + 444) = ++v230;
                                                      if (v230 < v232) {
                                                        continue;
                                                      }
                                                    }
                                                    break;
                                                  }
                                                }
                                                if (v225 < 1)
                                                {
                                                  unsigned __int8 v246 = 0;
                                                }
                                                else
                                                {
                                                  int v245 = 0;
                                                  unsigned __int8 v246 = 0;
                                                  do
                                                  {
                                                    *(_WORD *)(v69 + 2 * v246++ + 450) = v245;
                                                    v245 += ((v225 - 1) >> v230) + 1;
                                                  }
                                                  while (v245 < v225);
                                                }
                                                *(unsigned char *)(v69 + 445) = v246;
                                                unsigned int v252 = (v240 - v230) & ~((int)(v240 - v230) >> 31);
                                                *(unsigned char *)(v69 + 446) = (v240 - v230) & ~((int)(v240 - v230) >> 31);
                                                *(unsigned char *)(v69 + 448) = (v240 - v230) & ~((int)(v240 - v230) >> 31);
                                                if (v237 > v252)
                                                {
                                                  unsigned int v253 = v850;
                                                  unsigned int v254 = (unsigned __int8 *)__src;
                                                  while (1)
                                                  {
                                                    if (!v218)
                                                    {
                                                      if (v254 < v253)
                                                      {
                                                        __src = v254 + 1;
                                                        uint64_t v255 = *v254;
                                                        int v218 = 7;
                                                        LODWORD(v847) = 7;
                                                        unint64_t v219 = v255 << 57;
                                                        uint64_t v846 = v255 << 57;
                                                        LODWORD(v256) = (v255 >> 7) & 1;
                                                        unsigned int v254 = (unsigned __int8 *)__src;
                                                        goto LABEL_404;
                                                      }
                                                      HIDWORD(v847) = 1;
                                                    }
                                                    LODWORD(v847) = --v218;
                                                    unint64_t v256 = v219 >> 63;
                                                    v219 *= 2;
                                                    uint64_t v846 = v219;
LABEL_404:
                                                    if (v256)
                                                    {
                                                      *(unsigned char *)(v69 + 448) = ++v252;
                                                      if (v252 < v237) {
                                                        continue;
                                                      }
                                                    }
                                                    break;
                                                  }
                                                }
                                                if (v233 < 1)
                                                {
                                                  unsigned __int8 v258 = 0;
                                                }
                                                else
                                                {
                                                  int v257 = 0;
                                                  unsigned __int8 v258 = 0;
                                                  do
                                                  {
                                                    *(_WORD *)(v69 + 2 * v258++ + 580) = v257;
                                                    v257 += ((v233 - 1) >> v252) + 1;
                                                  }
                                                  while (v257 < v233);
                                                }
                                                *(unsigned char *)(v69 + 449) = v258;
                                              }
                                              else
                                              {
                                                *(unsigned char *)(v69 + 445) = 0;
                                                if (v225 < 1)
                                                {
                                                  unsigned __int8 v247 = 0;
                                                  int v249 = 0;
                                                }
                                                else
                                                {
                                                  unsigned __int8 v247 = 0;
                                                  int v248 = 0;
                                                  int v249 = 0;
                                                  do
                                                  {
                                                    if (v225 - v248 >= v227) {
                                                      signed int v250 = v227;
                                                    }
                                                    else {
                                                      signed int v250 = v225 - v248;
                                                    }
                                                    if (v250 < 2)
                                                    {
                                                      int v251 = 1;
                                                    }
                                                    else
                                                    {
                                                      int v251 = sub_224AEC35C(&v846, v250) + 1;
                                                      unsigned __int8 v247 = *(unsigned char *)(v69 + 445);
                                                    }
                                                    *(_WORD *)(v69 + 2 * v247 + 450) = v248;
                                                    if (v249 <= v251) {
                                                      int v249 = v251;
                                                    }
                                                    *(unsigned char *)(v69 + 445) = ++v247;
                                                    if (v247 > 0x3Fu) {
                                                      break;
                                                    }
                                                    v248 += v251;
                                                  }
                                                  while (v248 < v225);
                                                }
                                                int v259 = v247;
                                                char v260 = -1;
                                                do
                                                  ++v260;
                                                while (1 << v260 < v259);
                                                *(unsigned char *)(v69 + 444) = v260;
                                                if (v240) {
                                                  char v261 = v240 + 1;
                                                }
                                                else {
                                                  char v261 = 0;
                                                }
                                                int v262 = (v238 >> v261) / v249;
                                                if (v262 <= 1) {
                                                  int v263 = 1;
                                                }
                                                else {
                                                  int v263 = v262;
                                                }
                                                *(unsigned char *)(v69 + 449) = 0;
                                                if (v233 < 1)
                                                {
                                                  unsigned __int8 v258 = 0;
                                                }
                                                else
                                                {
                                                  unsigned __int8 v258 = 0;
                                                  for (int j = 0; j < v233; j += v266)
                                                  {
                                                    if (v233 - j >= v263) {
                                                      signed int v265 = v263;
                                                    }
                                                    else {
                                                      signed int v265 = v233 - j;
                                                    }
                                                    if (v265 < 2)
                                                    {
                                                      int v266 = 1;
                                                    }
                                                    else
                                                    {
                                                      int v266 = sub_224AEC35C(&v846, v265) + 1;
                                                      unsigned __int8 v258 = *(unsigned char *)(v69 + 449);
                                                    }
                                                    *(_WORD *)(v69 + 2 * v258++ + 580) = j;
                                                    *(unsigned char *)(v69 + 449) = v258;
                                                    if (v258 > 0x3Fu) {
                                                      break;
                                                    }
                                                  }
                                                }
                                                unsigned __int8 v267 = -1;
                                                do
                                                  ++v267;
                                                while (1 << v267 < v258);
                                                unsigned int v252 = v267;
                                                *(unsigned char *)(v69 + 448) = v267;
                                                unsigned __int8 v246 = *(unsigned char *)(v69 + 445);
                                                unsigned int v230 = *(unsigned __int8 *)(v69 + 444);
                                              }
                                              *(_WORD *)(v69 + 440 + 2 * v246 + 10) = v225;
                                              *(_WORD *)(v69 + 440 + 2 * v258 + 140) = v233;
                                              if (v230 | v252)
                                              {
                                                unsigned __int16 v268 = sub_224AEC1C4(&v846, v252 + v230);
                                                *(_WORD *)(v69 + 710) = v268;
                                                if (*(unsigned __int8 *)(v69 + 449)
                                                   * *(unsigned __int8 *)(v69 + 445) <= v268)
                                                  goto LABEL_1082;
                                                *(unsigned char *)(v69 + 441) = sub_224AEC1C4(&v846, 2u) + 1;
                                              }
                                              else
                                              {
                                                *(unsigned char *)(v69 + 441) = 0;
                                                *(_WORD *)(v69 + 710) = 0;
                                              }
                                              *(unsigned char *)(v69 + 712) = sub_224AEC1C4(&v846, 8u);
                                              if (!v847)
                                              {
                                                int v269 = (unsigned __int8 *)__src;
                                                if (__src < v850)
                                                {
                                                  __src = (char *)__src + 1;
                                                  unint64_t v271 = *v269;
                                                  int v270 = 7;
                                                  LODWORD(v847) = 7;
                                                  uint64_t v846 = v271 << 57;
                                                  LODWORD(v271) = (v271 >> 7) & 1;
                                                  goto LABEL_445;
                                                }
                                                HIDWORD(v847) = 1;
                                              }
                                              unint64_t v272 = v846;
                                              int v270 = v847 - 1;
                                              LODWORD(v847) = v847 - 1;
                                              v846 *= 2;
                                              unint64_t v271 = v272 >> 63;
LABEL_445:
                                              if (v271)
                                              {
                                                char v273 = sub_224AEC250((uint64_t)&v846, 7u);
                                                int v270 = v847;
                                              }
                                              else
                                              {
                                                char v273 = 0;
                                              }
                                              *(unsigned char *)(v69 + 713) = v273;
                                              if (v144[418])
                                              {
LABEL_491:
                                                if (!v270)
                                                {
                                                  uint64_t v295 = (unsigned __int8 *)__src;
                                                  if (__src < v850)
                                                  {
                                                    __src = (char *)__src + 1;
                                                    unint64_t v297 = *v295;
                                                    int v296 = 7;
                                                    LODWORD(v847) = 7;
                                                    uint64_t v846 = v297 << 57;
                                                    LODWORD(v297) = (v297 >> 7) & 1;
                                                    goto LABEL_496;
                                                  }
                                                  HIDWORD(v847) = 1;
                                                }
                                                unint64_t v298 = v846;
                                                int v296 = v270 - 1;
                                                LODWORD(v847) = v296;
                                                v846 *= 2;
                                                unint64_t v297 = v298 >> 63;
LABEL_496:
                                                *(unsigned char *)(v69 + 718) = v297;
                                                if (v297)
                                                {
                                                  *(unsigned char *)(v69 + 719) = sub_224AEC1C4(&v846, 4u);
                                                  char v299 = sub_224AEC1C4(&v846, 4u);
                                                  *(unsigned char *)(v69 + 720) = v299;
                                                  if (v144[420]) {
                                                    char v299 = sub_224AEC1C4(&v846, 4u);
                                                  }
                                                  *(unsigned char *)(v69 + 721) = v299;
                                                  int v296 = v847;
                                                }
                                                if (!v296)
                                                {
                                                  int v300 = (unsigned __int8 *)__src;
                                                  if (__src < v850)
                                                  {
                                                    __src = (char *)__src + 1;
                                                    unint64_t v303 = *v300;
                                                    int v301 = 7;
                                                    LODWORD(v847) = 7;
                                                    uint64_t v302 = v303 << 57;
                                                    uint64_t v846 = v303 << 57;
                                                    LODWORD(v303) = (v303 >> 7) & 1;
                                                    goto LABEL_505;
                                                  }
                                                  HIDWORD(v847) = 1;
                                                }
                                                unint64_t v304 = v846;
                                                int v301 = v296 - 1;
                                                LODWORD(v847) = v301;
                                                uint64_t v302 = 2 * v846;
                                                v846 *= 2;
                                                unint64_t v303 = v304 >> 63;
LABEL_505:
                                                *(unsigned char *)(v69 + 722) = v303;
                                                if (!v303)
                                                {
                                                  uint64_t v306 = 0;
                                                  *(_WORD *)(v69 + 806) = 0;
                                                  *(_OWORD *)(v69 + 790) = 0u;
                                                  *(_OWORD *)(v69 + 774) = 0u;
                                                  *(_OWORD *)(v69 + 758) = 0u;
                                                  *(_OWORD *)(v69 + 742) = 0u;
                                                  *(_OWORD *)(v69 + 726) = 0u;
                                                  do
                                                  {
                                                    *(unsigned char *)(v69 + 732 + v306) = -1;
                                                    v306 += 10;
                                                  }
                                                  while (v306 != 80);
                                                  goto LABEL_587;
                                                }
                                                uint64_t v305 = *(unsigned __int8 *)(v69 + 271);
                                                if (v305 == 7)
                                                {
                                                  *(_WORD *)(v69 + 723) = 1;
                                                  *(unsigned char *)(v69 + 725) = 1;
LABEL_529:
                                                  uint64_t v317 = 0;
                                                  *(_WORD *)(v69 + 806) = -256;
                                                  int v318 = (unsigned char *)(v69 + 734);
                                                  while (1)
                                                  {
                                                    if (!v301)
                                                    {
                                                      int v319 = (unsigned __int8 *)__src;
                                                      if (__src < v850)
                                                      {
                                                        __src = (char *)__src + 1;
                                                        uint64_t v320 = *v319;
                                                        LODWORD(v847) = 7;
                                                        uint64_t v846 = v320 << 57;
                                                        if (((v320 >> 7) & 1) == 0) {
                                                          goto LABEL_533;
                                                        }
                                                        goto LABEL_536;
                                                      }
                                                      HIDWORD(v847) = 1;
                                                    }
                                                    LODWORD(v847) = v301 - 1;
                                                    uint64_t v846 = 2 * v302;
                                                    if (v302 >= 0)
                                                    {
LABEL_533:
                                                      __int16 v321 = 0;
                                                      goto LABEL_537;
                                                    }
LABEL_536:
                                                    __int16 v321 = sub_224AEC250((uint64_t)&v846, 9u);
                                                    *(unsigned char *)(v69 + 807) = v317;
LABEL_537:
                                                    *((_WORD *)v318 - 4) = v321;
                                                    if (!v847)
                                                    {
                                                      int v322 = (unsigned __int8 *)__src;
                                                      if (__src < v850)
                                                      {
                                                        __src = (char *)__src + 1;
                                                        uint64_t v323 = *v322;
                                                        LODWORD(v847) = 7;
                                                        uint64_t v846 = v323 << 57;
                                                        if (((v323 >> 7) & 1) == 0) {
                                                          goto LABEL_540;
                                                        }
                                                        goto LABEL_543;
                                                      }
                                                      HIDWORD(v847) = 1;
                                                    }
                                                    uint64_t v325 = v846;
                                                    LODWORD(v847) = v847 - 1;
                                                    v846 *= 2;
                                                    if (v325 >= 0)
                                                    {
LABEL_540:
                                                      char v324 = 0;
                                                      goto LABEL_544;
                                                    }
LABEL_543:
                                                    char v324 = sub_224AEC250((uint64_t)&v846, 7u);
                                                    *(unsigned char *)(v69 + 807) = v317;
LABEL_544:
                                                    *(v318 - 6) = v324;
                                                    if (!v847)
                                                    {
                                                      int v326 = (unsigned __int8 *)__src;
                                                      if (__src < v850)
                                                      {
                                                        __src = (char *)__src + 1;
                                                        uint64_t v327 = *v326;
                                                        LODWORD(v847) = 7;
                                                        uint64_t v846 = v327 << 57;
                                                        if (((v327 >> 7) & 1) == 0) {
                                                          goto LABEL_547;
                                                        }
                                                        goto LABEL_550;
                                                      }
                                                      HIDWORD(v847) = 1;
                                                    }
                                                    uint64_t v329 = v846;
                                                    LODWORD(v847) = v847 - 1;
                                                    v846 *= 2;
                                                    if (v329 >= 0)
                                                    {
LABEL_547:
                                                      char v328 = 0;
                                                      goto LABEL_551;
                                                    }
LABEL_550:
                                                    char v328 = sub_224AEC250((uint64_t)&v846, 7u);
                                                    *(unsigned char *)(v69 + 807) = v317;
LABEL_551:
                                                    *(v318 - 5) = v328;
                                                    if (!v847)
                                                    {
                                                      __int32 v330 = (unsigned __int8 *)__src;
                                                      if (__src < v850)
                                                      {
                                                        __src = (char *)__src + 1;
                                                        uint64_t v331 = *v330;
                                                        LODWORD(v847) = 7;
                                                        uint64_t v846 = v331 << 57;
                                                        if (((v331 >> 7) & 1) == 0) {
                                                          goto LABEL_554;
                                                        }
                                                        goto LABEL_557;
                                                      }
                                                      HIDWORD(v847) = 1;
                                                    }
                                                    uint64_t v333 = v846;
                                                    LODWORD(v847) = v847 - 1;
                                                    v846 *= 2;
                                                    if (v333 >= 0)
                                                    {
LABEL_554:
                                                      char v332 = 0;
                                                      goto LABEL_558;
                                                    }
LABEL_557:
                                                    char v332 = sub_224AEC250((uint64_t)&v846, 7u);
                                                    *(unsigned char *)(v69 + 807) = v317;
LABEL_558:
                                                    *(v318 - 4) = v332;
                                                    if (!v847)
                                                    {
                                                      int v334 = (unsigned __int8 *)__src;
                                                      if (__src < v850)
                                                      {
                                                        __src = (char *)__src + 1;
                                                        uint64_t v335 = *v334;
                                                        LODWORD(v847) = 7;
                                                        uint64_t v846 = v335 << 57;
                                                        if (((v335 >> 7) & 1) == 0) {
                                                          goto LABEL_561;
                                                        }
                                                        goto LABEL_564;
                                                      }
                                                      HIDWORD(v847) = 1;
                                                    }
                                                    uint64_t v337 = v846;
                                                    LODWORD(v847) = v847 - 1;
                                                    v846 *= 2;
                                                    if (v337 >= 0)
                                                    {
LABEL_561:
                                                      char v336 = 0;
                                                      goto LABEL_565;
                                                    }
LABEL_564:
                                                    char v336 = sub_224AEC250((uint64_t)&v846, 7u);
                                                    *(unsigned char *)(v69 + 807) = v317;
LABEL_565:
                                                    *(v318 - 3) = v336;
                                                    if (!v847)
                                                    {
                                                      __int32 v338 = (unsigned __int8 *)__src;
                                                      if (__src < v850)
                                                      {
                                                        __src = (char *)__src + 1;
                                                        uint64_t v339 = *v338;
                                                        LODWORD(v847) = 7;
                                                        uint64_t v846 = v339 << 57;
                                                        if (((v339 >> 7) & 1) == 0) {
                                                          goto LABEL_568;
                                                        }
                                                        goto LABEL_571;
                                                      }
                                                      HIDWORD(v847) = 1;
                                                    }
                                                    uint64_t v341 = v846;
                                                    LODWORD(v847) = v847 - 1;
                                                    v846 *= 2;
                                                    if (v341 >= 0)
                                                    {
LABEL_568:
                                                      char v340 = -1;
                                                      goto LABEL_572;
                                                    }
LABEL_571:
                                                    char v340 = sub_224AEC1C4(&v846, 3u);
                                                    *(unsigned char *)(v69 + 807) = v317;
                                                    *(unsigned char *)(v69 + 806) = 1;
LABEL_572:
                                                    *(v318 - 2) = v340;
                                                    if (!v847)
                                                    {
                                                      int32x2_t v342 = (unsigned __int8 *)__src;
                                                      if (__src < v850)
                                                      {
                                                        __src = (char *)__src + 1;
                                                        unint64_t v345 = *v342;
                                                        int v343 = 7;
                                                        LODWORD(v847) = 7;
                                                        unint64_t v344 = v345 << 57;
                                                        uint64_t v846 = v345 << 57;
                                                        LODWORD(v345) = (v345 >> 7) & 1;
                                                        goto LABEL_577;
                                                      }
                                                      HIDWORD(v847) = 1;
                                                    }
                                                    unint64_t v346 = v846;
                                                    int v343 = v847 - 1;
                                                    LODWORD(v847) = v847 - 1;
                                                    unint64_t v344 = 2 * v846;
                                                    v846 *= 2;
                                                    unint64_t v345 = v346 >> 63;
LABEL_577:
                                                    *(v318 - 1) = v345;
                                                    if (v345)
                                                    {
                                                      *(unsigned char *)(v69 + 807) = v317;
                                                      *(unsigned char *)(v69 + 806) = 1;
                                                    }
                                                    if (v343) {
                                                      goto LABEL_583;
                                                    }
                                                    int v347 = (unsigned __int8 *)__src;
                                                    if (__src >= v850)
                                                    {
                                                      HIDWORD(v847) = 1;
LABEL_583:
                                                      int v301 = v343 - 1;
                                                      LODWORD(v847) = v301;
                                                      uint64_t v302 = 2 * v344;
                                                      uint64_t v846 = 2 * v344;
                                                      unint64_t v348 = v344 >> 63;
                                                      goto LABEL_584;
                                                    }
                                                    __src = (char *)__src + 1;
                                                    unint64_t v348 = *v347;
                                                    int v301 = 7;
                                                    LODWORD(v847) = 7;
                                                    uint64_t v302 = v348 << 57;
                                                    uint64_t v846 = v348 << 57;
                                                    LODWORD(v348) = (v348 >> 7) & 1;
LABEL_584:
                                                    *int v318 = v348;
                                                    if (v348)
                                                    {
                                                      *(unsigned char *)(v69 + 807) = v317;
                                                      *(unsigned char *)(v69 + 806) = 1;
                                                    }
                                                    ++v317;
                                                    v318 += 10;
                                                    if (v317 == 8) {
                                                      goto LABEL_587;
                                                    }
                                                  }
                                                }
                                                if (!v301)
                                                {
                                                  int v307 = (unsigned __int8 *)__src;
                                                  if (__src < v850)
                                                  {
                                                    __src = (char *)__src + 1;
                                                    uint64_t v308 = *v307;
                                                    int v309 = 7;
                                                    LODWORD(v847) = 7;
                                                    unint64_t v310 = v308 << 57;
                                                    uint64_t v846 = v308 << 57;
                                                    LODWORD(v308) = (v308 >> 7) & 1;
                                                    *(unsigned char *)(v69 + 723) = v308;
                                                    if (!v308)
                                                    {
                                                      LOBYTE(v311) = 0;
LABEL_520:
                                                      *(unsigned char *)(v69 + 724) = v311;
                                                      int v309 = 7;
                                                      goto LABEL_527;
                                                    }
                                                    goto LABEL_522;
                                                  }
                                                  HIDWORD(v847) = 1;
                                                }
                                                int v309 = v301 - 1;
                                                LODWORD(v847) = v309;
                                                unint64_t v310 = 2 * v302;
                                                uint64_t v846 = 2 * v302;
                                                unint64_t v312 = (unint64_t)v302 >> 63;
                                                *(unsigned char *)(v69 + 723) = v312;
                                                if (!v312) {
                                                  goto LABEL_523;
                                                }
                                                if (!v309)
                                                {
                                                  int v313 = (unsigned __int8 *)__src;
                                                  if (__src < v850)
                                                  {
                                                    __src = (char *)__src + 1;
                                                    uint64_t v314 = *v313;
                                                    LODWORD(v847) = 7;
                                                    unint64_t v310 = v314 << 57;
                                                    uint64_t v846 = v314 << 57;
                                                    unsigned int v311 = (v314 >> 7) & 1;
                                                    goto LABEL_520;
                                                  }
                                                  HIDWORD(v847) = 1;
                                                }
LABEL_522:
                                                LODWORD(v847) = --v309;
                                                unint64_t v312 = v310 >> 63;
                                                v310 *= 2;
                                                uint64_t v846 = v310;
LABEL_523:
                                                *(unsigned char *)(v69 + 724) = v312;
                                                if (!v309)
                                                {
                                                  int v315 = (unsigned __int8 *)__src;
                                                  if (__src < v850)
                                                  {
                                                    __src = (char *)__src + 1;
                                                    unint64_t v316 = *v315;
                                                    int v301 = 7;
                                                    LODWORD(v847) = 7;
                                                    uint64_t v302 = v316 << 57;
                                                    uint64_t v846 = v316 << 57;
                                                    LODWORD(v316) = (v316 >> 7) & 1;
LABEL_528:
                                                    *(unsigned char *)(v69 + 725) = v316;
                                                    if (v316) {
                                                      goto LABEL_529;
                                                    }
                                                    uint64_t v351 = *(void *)(a1 + 344 * *(char *)(v69 + v305 + 421) + 49944);
                                                    if (!v351) {
                                                      goto LABEL_1082;
                                                    }
                                                    long long v352 = *(_OWORD *)(v351 + 726);
                                                    *(_OWORD *)(v69 + 742) = *(_OWORD *)(v351 + 742);
                                                    *(_OWORD *)(v69 + 726) = v352;
                                                    long long v353 = *(_OWORD *)(v351 + 758);
                                                    long long v354 = *(_OWORD *)(v351 + 774);
                                                    long long v355 = *(_OWORD *)(v351 + 790);
                                                    *(_WORD *)(v69 + 806) = *(_WORD *)(v351 + 806);
                                                    *(_OWORD *)(v69 + 790) = v355;
                                                    *(_OWORD *)(v69 + 774) = v354;
                                                    *(_OWORD *)(v69 + 758) = v353;
LABEL_587:
                                                    if (!*(unsigned char *)(v69 + 712))
                                                    {
                                                      *(unsigned char *)(v69 + 824) = 0;
                                                      goto LABEL_602;
                                                    }
                                                    if (!v301)
                                                    {
                                                      int32x2_t v349 = (unsigned __int8 *)__src;
                                                      if (__src < v850)
                                                      {
                                                        __src = (char *)__src + 1;
                                                        unint64_t v350 = *v349;
                                                        LODWORD(v847) = 7;
                                                        uint64_t v846 = v350 << 57;
                                                        LODWORD(v350) = (v350 >> 7) & 1;
                                                        goto LABEL_596;
                                                      }
                                                      HIDWORD(v847) = 1;
                                                    }
                                                    LODWORD(v847) = v301 - 1;
                                                    uint64_t v846 = 2 * v302;
                                                    unint64_t v350 = (unint64_t)v302 >> 63;
LABEL_596:
                                                    *(unsigned char *)(v69 + 824) = v350;
                                                    if (v350)
                                                    {
                                                      char v356 = sub_224AEC1C4(&v846, 2u);
                                                      int v357 = *(unsigned __int8 *)(v69 + 824);
                                                      *(unsigned char *)(v69 + 825) = v356;
                                                      if (v357 && !*(unsigned char *)(v69 + 419))
                                                      {
                                                        if (!v847)
                                                        {
                                                          int v358 = (unsigned __int8 *)__src;
                                                          if (__src < v850)
                                                          {
                                                            __src = (char *)__src + 1;
                                                            unint64_t v359 = *v358;
                                                            LODWORD(v847) = 7;
                                                            uint64_t v846 = v359 << 57;
                                                            LODWORD(v359) = (v359 >> 7) & 1;
                                                            goto LABEL_821;
                                                          }
                                                          HIDWORD(v847) = 1;
                                                        }
                                                        unint64_t v477 = v846;
                                                        LODWORD(v847) = v847 - 1;
                                                        v846 *= 2;
                                                        unint64_t v359 = v477 >> 63;
LABEL_821:
                                                        *(unsigned char *)(v69 + 826) = v359;
                                                        if (v359)
                                                        {
                                                          char v478 = sub_224AEC1C4(&v846, 2u);
                                                          LODWORD(v360) = *(unsigned __int8 *)(v69 + 826);
                                                          *(unsigned char *)(v69 + 827) = v478;
                                                          if (!v360) {
                                                            goto LABEL_605;
                                                          }
                                                          if (!v847)
                                                          {
                                                            int v479 = (unsigned __int8 *)__src;
                                                            if (__src < v850)
                                                            {
                                                              __src = (char *)__src + 1;
                                                              unint64_t v360 = *v479;
                                                              LODWORD(v847) = 7;
                                                              uint64_t v846 = v360 << 57;
                                                              LODWORD(v360) = (v360 >> 7) & 1;
                                                              goto LABEL_605;
                                                            }
                                                            HIDWORD(v847) = 1;
                                                          }
                                                          unint64_t v734 = v846;
                                                          LODWORD(v847) = v847 - 1;
                                                          v846 *= 2;
                                                          unint64_t v360 = v734 >> 63;
LABEL_605:
                                                          *(unsigned char *)(v69 + 828) = v360;
                                                          BOOL v361 = !*(unsigned char *)(v69 + 713)
                                                              && !*(unsigned char *)(v69 + 714)
                                                              && !*(unsigned char *)(v69 + 715)
                                                              && !*(unsigned char *)(v69 + 716)
                                                              && *(unsigned char *)(v69 + 717) == 0;
                                                          *(unsigned char *)(v69 + 829) = 1;
                                                          int v362 = *(unsigned __int8 *)(v69 + 722);
                                                          int v363 = *(unsigned __int8 *)(v69 + 712);
                                                          int v364 = (unsigned char *)(v69 + 816);
                                                          for (uint64_t k = 726; k != 806; k += 10)
                                                          {
                                                            LOBYTE(v366) = v363;
                                                            if (v362)
                                                            {
                                                              int v367 = *(__int16 *)(v69 + k) + v363;
                                                              if (v367 >= 255) {
                                                                int v367 = 255;
                                                              }
                                                              int v366 = v367 & ~(v367 >> 31);
                                                            }
                                                            *int v364 = v366;
                                                            if ((_BYTE)v366) {
                                                              BOOL v368 = 0;
                                                            }
                                                            else {
                                                              BOOL v368 = v361;
                                                            }
                                                            *(v364 - 8) = v368;
                                                            int v369 = *(unsigned char *)(v69 + 829) & v368;
                                                            *(unsigned char *)(v69 + 829) = v369;
                                                            ++v364;
                                                          }
                                                          if (v369 || *(unsigned char *)(v69 + 419))
                                                          {
                                                            *(unsigned char *)(v69 + 846) = 0;
                                                            *(_DWORD *)(v69 + 830) = 0;
                                                            *(_WORD *)(v69 + 834) = 257;
                                                            *(void *)(v69 + 836) = 0xFF000000010000;
                                                            *(_WORD *)(v69 + 844) = -1;
LABEL_622:
                                                            if (*(unsigned char *)(v69 + 829)
                                                              || !v144[414]
                                                              || *(unsigned char *)(v69 + 419))
                                                            {
                                                              *(_WORD *)(v69 + 848) = 0;
                                                              *(unsigned char *)(v69 + 857) = 0;
                                                            }
                                                            else
                                                            {
                                                              *(unsigned char *)(v69 + 847) = sub_224AEC1C4(&v846, 2u) + 3;
                                                              char v371 = sub_224AEC1C4(&v846, 2u);
                                                              *(unsigned char *)(v69 + 848) = v371;
                                                              if (v371 != 31)
                                                              {
                                                                uint64_t v372 = 0;
                                                                do
                                                                {
                                                                  *(unsigned char *)(v69 + v372 + 849) = sub_224AEC1C4(&v846, 6u);
                                                                  if (!v144[418]) {
                                                                    *(unsigned char *)(v69 + v372 + 857) = sub_224AEC1C4(&v846, 6u);
                                                                  }
                                                                  ++v372;
                                                                }
                                                                while (v372 < 1 << *(unsigned char *)(v69 + 848));
                                                              }
                                                            }
                                                            if (*(unsigned char *)(v69 + 829) && !*(unsigned char *)(v69 + 417)
                                                              || !v144[415]
                                                              || *(unsigned char *)(v69 + 419))
                                                            {
                                                              *(_DWORD *)(v69 + 868) = 0;
                                                              *(void *)(v69 + 872) = 0;
                                                              goto LABEL_629;
                                                            }
                                                            int v375 = sub_224AEC1C4(&v846, 2u);
                                                            *(_DWORD *)(v69 + 868) = v375;
                                                            if (v144[418])
                                                            {
                                                              int v376 = v375;
                                                              int v377 = 0;
                                                              *(_DWORD *)(v69 + 872) = 0;
                                                            }
                                                            else
                                                            {
                                                              *(_DWORD *)(v69 + 872) = sub_224AEC1C4(&v846, 2u);
                                                              int v377 = sub_224AEC1C4(&v846, 2u);
                                                              int v376 = *(_DWORD *)(v69 + 868);
                                                            }
                                                            *(_DWORD *)(v69 + 876) = v377;
                                                            if (!v376 && !(*(_DWORD *)(v69 + 872) | v377))
                                                            {
                                                              *(unsigned char *)(v69 + 880) = 8;
                                                              goto LABEL_629;
                                                            }
                                                            unsigned __int8 v406 = v144[392];
                                                            char v407 = v406 + 6;
                                                            *(unsigned char *)(v69 + 880) = v406 + 6;
                                                            if (!v847)
                                                            {
                                                              int v408 = (unsigned __int8 *)__src;
                                                              if (__src < v850)
                                                              {
                                                                __src = (char *)__src + 1;
                                                                unint64_t v411 = *v408;
                                                                int v409 = 7;
                                                                LODWORD(v847) = 7;
                                                                uint64_t v410 = v411 << 57;
                                                                uint64_t v846 = v411 << 57;
                                                                LODWORD(v411) = (v411 >> 7) & 1;
LABEL_712:
                                                                if (!v411
                                                                  || (char v407 = v406 + 7,
                                                                      *(unsigned char *)(v69 + 880) = v406 + 7,
                                                                      v144[392]))
                                                                {
LABEL_1189:
                                                                  *(unsigned char *)(v69 + 881) = v407;
                                                                  if (!(*(_DWORD *)(v69 + 872) | v377)
                                                                    || v144[416] != 1
                                                                    || v144[417] != 1)
                                                                  {
LABEL_629:
                                                                    if (*(unsigned char *)(v69 + 829))
                                                                    {
                                                                      int v370 = 0;
                                                                      goto LABEL_661;
                                                                    }
                                                                    if (!v847)
                                                                    {
                                                                      int v373 = (unsigned __int8 *)__src;
                                                                      if (__src < v850)
                                                                      {
                                                                        __src = (char *)__src + 1;
                                                                        unint64_t v374 = *v373;
                                                                        LODWORD(v847) = 7;
                                                                        uint64_t v846 = v374 << 57;
                                                                        LODWORD(v374) = (v374 >> 7) & 1;
                                                                        goto LABEL_658;
                                                                      }
                                                                      HIDWORD(v847) = 1;
                                                                    }
                                                                    unint64_t v386 = v846;
                                                                    LODWORD(v847) = v847 - 1;
                                                                    v846 *= 2;
                                                                    unint64_t v374 = v386 >> 63;
LABEL_658:
                                                                    if (v374) {
                                                                      int v370 = 2;
                                                                    }
                                                                    else {
                                                                      int v370 = 1;
                                                                    }
LABEL_661:
                                                                    *(_DWORD *)(v69 + 884) = v370;
                                                                    if ((*(unsigned char *)(v69 + 232) & 1) == 0)
                                                                    {
                                                                      LOBYTE(v387) = 0;
                                                                      *(_WORD *)(v69 + 888) = 0;
LABEL_724:
                                                                      *(unsigned char *)(v69 + 890) = v387;
                                                                      if (*(unsigned char *)(v69 + 266)
                                                                        || (*(unsigned char *)v841 & 1) == 0)
                                                                      {
                                                                        unsigned __int8 v419 = 0;
                                                                        goto LABEL_727;
                                                                      }
                                                                      unsigned __int8 v419 = v144[397];
                                                                      if (!v419)
                                                                      {
LABEL_727:
                                                                        *(unsigned char *)(v69 + 893) = v419;
                                                                        if (!v847)
                                                                        {
                                                                          int v420 = (unsigned __int8 *)__src;
                                                                          if (__src < v850)
                                                                          {
                                                                            __src = (char *)__src + 1;
                                                                            unint64_t v421 = *v420;
                                                                            LODWORD(v847) = 7;
                                                                            uint64_t v846 = v421 << 57;
                                                                            LODWORD(v421) = (v421 >> 7) & 1;
LABEL_736:
                                                                            *(unsigned char *)(v69 + 894) = v421;
                                                                            for (uint64_t m = 896; m != 1148; m += 36)
                                                                            {
                                                                              uint64_t v426 = v69 + m;
                                                                              *(_OWORD *)uint64_t v426 = xmmword_224B176B4;
                                                                              *(_OWORD *)(v426 + 16) = *(_OWORD *)&dword_224B176C4;
                                                                              *(_DWORD *)(v426 + 32) = 0;
                                                                            }
                                                                            if (*(unsigned char *)v841)
                                                                            {
                                                                              uint64_t v427 = 0;
                                                                              uint64_t v428 = v69 + 920;
                                                                              do
                                                                              {
                                                                                if (!v847)
                                                                                {
                                                                                  int v429 = (unsigned __int8 *)__src;
                                                                                  if (__src < v850)
                                                                                  {
                                                                                    __src = (char *)__src + 1;
                                                                                    uint64_t v430 = *v429;
                                                                                    int v431 = 7;
                                                                                    LODWORD(v847) = 7;
                                                                                    uint64_t v432 = v430 << 57;
                                                                                    uint64_t v846 = v430 << 57;
                                                                                    if ((v430 >> 7)) {
                                                                                      goto LABEL_752;
                                                                                    }
                                                                                    goto LABEL_750;
                                                                                  }
                                                                                  HIDWORD(v847) = 1;
                                                                                }
                                                                                uint64_t v433 = v846;
                                                                                int v431 = v847 - 1;
                                                                                LODWORD(v847) = v847 - 1;
                                                                                uint64_t v432 = 2 * v846;
                                                                                v846 *= 2;
                                                                                if (v433 < 0)
                                                                                {
                                                                                  if (!v431)
                                                                                  {
                                                                                    int v434 = (unsigned __int8 *)__src;
                                                                                    if (__src < v850)
                                                                                    {
                                                                                      __src = (char *)__src + 1;
                                                                                      uint64_t v435 = *v434;
                                                                                      int v436 = 7;
                                                                                      LODWORD(v847) = 7;
                                                                                      unint64_t v437 = v435 << 57;
                                                                                      uint64_t v846 = v435 << 57;
                                                                                      if (((v435 >> 7) & 1) == 0)
                                                                                      {
LABEL_758:
                                                                                        LODWORD(v847) = v436 - 1;
                                                                                        uint64_t v846 = 2 * v437;
                                                                                        unint64_t v440 = v437 >> 63;
                                                                                        goto LABEL_759;
                                                                                      }
LABEL_753:
                                                                                      unsigned int v438 = 2;
                                                                                      goto LABEL_762;
                                                                                    }
                                                                                    HIDWORD(v847) = 1;
                                                                                  }
LABEL_752:
                                                                                  int v436 = v431 - 1;
                                                                                  LODWORD(v847) = v431 - 1;
                                                                                  unint64_t v437 = 2 * v432;
                                                                                  uint64_t v846 = 2 * v432;
                                                                                  if (v432 < 0) {
                                                                                    goto LABEL_753;
                                                                                  }
                                                                                  if (v436) {
                                                                                    goto LABEL_758;
                                                                                  }
                                                                                  int v439 = (unsigned __int8 *)__src;
                                                                                  if (__src >= v850)
                                                                                  {
                                                                                    HIDWORD(v847) = 1;
                                                                                    goto LABEL_758;
                                                                                  }
                                                                                  __src = (char *)__src + 1;
                                                                                  unint64_t v440 = *v439;
                                                                                  LODWORD(v847) = 7;
                                                                                  uint64_t v846 = v440 << 57;
                                                                                  LODWORD(v440) = (v440 >> 7) & 1;
LABEL_759:
                                                                                  if (v440) {
                                                                                    unsigned int v438 = 1;
                                                                                  }
                                                                                  else {
                                                                                    unsigned int v438 = 3;
                                                                                  }
LABEL_762:
                                                                                  uint64_t v441 = v428 + v427;
                                                                                  *(_DWORD *)(v428 + v427 - 24) = v438;
                                                                                  uint64_t v442 = *(unsigned __int8 *)(v69 + 271);
                                                                                  int v443 = (int *)&xmmword_224B176B4;
                                                                                  if (v442 != 7)
                                                                                  {
                                                                                    uint64_t v444 = *(void *)(a1 + 344 * *(char *)(v69 + v442 + 421) + 49944);
                                                                                    if (!v444) {
                                                                                      goto LABEL_1082;
                                                                                    }
                                                                                    int v443 = (int *)(v444 + v427 + 896);
                                                                                  }
                                                                                  if (v438 <= 1)
                                                                                  {
                                                                                    if (*(unsigned char *)(v69 + 428)) {
                                                                                      char v445 = 9;
                                                                                    }
                                                                                    else {
                                                                                      char v445 = 8;
                                                                                    }
                                                                                    if (*(unsigned char *)(v69 + 428)) {
                                                                                      char v448 = 13;
                                                                                    }
                                                                                    else {
                                                                                      char v448 = 14;
                                                                                    }
                                                                                    int v446 = *(_DWORD *)(v428 + v427 - 8);
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    char v445 = 12;
                                                                                    *(_DWORD *)(v428 + v427 - 12) = 2 * sub_224AEC3C0(&v846, (v443[3] - 0x10000) >> 1, 12) + 0x10000;
                                                                                    int v446 = 2
                                                                                         * sub_224AEC3C0(&v846, v443[4] >> 1, 12);
                                                                                    *(_DWORD *)(v428 + v427 - 8) = v446;
                                                                                    if (*(_DWORD *)(v441 - 24) == 3)
                                                                                    {
                                                                                      *(_DWORD *)(v428 + v427 - 4) = 2 * sub_224AEC3C0(&v846, v443[5] >> 1, 12);
                                                                                      int v447 = 2
                                                                                           * sub_224AEC3C0(&v846, (v443[6] - 0x10000) >> 1, 12)+ 0x10000;
                                                                                      char v448 = 10;
LABEL_777:
                                                                                      *(_DWORD *)(v428 + v427) = v447;
                                                                                      *(_DWORD *)(v441 - 20) = sub_224AEC3C0(&v846, v443[1] >> v448, v445) << v448;
                                                                                      *(_DWORD *)(v428 + v427 - 16) = sub_224AEC3C0(&v846, v443[2] >> v448, v445) << v448;
                                                                                      int v144 = v842;
                                                                                      goto LABEL_778;
                                                                                    }
                                                                                    char v448 = 10;
                                                                                  }
                                                                                  *(_DWORD *)(v428 + v427 - 4) = -v446;
                                                                                  int v447 = *(_DWORD *)(v428 + v427 - 12);
                                                                                  goto LABEL_777;
                                                                                }
LABEL_750:
                                                                                *(_DWORD *)(v428 + v427 - 24) = 0;
LABEL_778:
                                                                                v427 += 36;
                                                                              }
                                                                              while (v427 != 252);
                                                                            }
                                                                            if (!v144[421]
                                                                              || !*v828 && !*(unsigned char *)(v69 + 265))
                                                                            {
                                                                              *(unsigned char *)(v69 + 224) = 0;
                                                                              goto LABEL_793;
                                                                            }
                                                                            if (!v847)
                                                                            {
                                                                              int v449 = (unsigned __int8 *)__src;
                                                                              if (__src < v850)
                                                                              {
                                                                                __src = (char *)__src + 1;
                                                                                unint64_t v450 = *v449;
                                                                                LODWORD(v847) = 7;
                                                                                uint64_t v846 = v450 << 57;
                                                                                LODWORD(v450) = (v450 >> 7) & 1;
                                                                                goto LABEL_788;
                                                                              }
                                                                              HIDWORD(v847) = 1;
                                                                            }
                                                                            unint64_t v451 = v846;
                                                                            LODWORD(v847) = v847 - 1;
                                                                            v846 *= 2;
                                                                            unint64_t v450 = v451 >> 63;
LABEL_788:
                                                                            *(unsigned char *)(v69 + 224) = v450;
                                                                            if (v450)
                                                                            {
                                                                              int v452 = sub_224AEC1C4(&v846, 0x10u);
                                                                              int v453 = v452;
                                                                              if (*v841 != 1)
                                                                              {
                                                                                *(unsigned char *)(v69 + 225) = 1;
                                                                                goto LABEL_798;
                                                                              }
                                                                              if (!v847)
                                                                              {
                                                                                int v454 = (unsigned __int8 *)__src;
                                                                                if (__src < v850)
                                                                                {
                                                                                  __src = (char *)__src + 1;
                                                                                  unint64_t v455 = *v454;
                                                                                  LODWORD(v847) = 7;
                                                                                  uint64_t v846 = v455 << 57;
                                                                                  LODWORD(v455) = (v455 >> 7) & 1;
LABEL_797:
                                                                                  *(unsigned char *)(v69 + 225) = v455;
                                                                                  if (v455)
                                                                                  {
LABEL_798:
                                                                                    *(_DWORD *)uint64_t v69 = v452;
                                                                                    LODWORD(v457) = sub_224AEC1C4(&v846, 4u);
                                                                                    *(_DWORD *)(v69 + 4) = v457;
                                                                                    if ((int)v457 > 14) {
                                                                                      goto LABEL_1082;
                                                                                    }
                                                                                    if ((int)v457 >= 1)
                                                                                    {
                                                                                      uint64_t v458 = 0;
                                                                                      int v459 = (unsigned char *)(v69 + 9);
                                                                                      do
                                                                                      {
                                                                                        unsigned __int8 v460 = sub_224AEC1C4(&v846, 8u);
                                                                                        *(v459 - 1) = v460;
                                                                                        if (v458)
                                                                                        {
                                                                                          if (*(v459 - 3) >= v460) {
                                                                                            goto LABEL_1082;
                                                                                          }
                                                                                        }
                                                                                        *int v459 = sub_224AEC1C4(&v846, 8u);
                                                                                        v459 += 2;
                                                                                        ++v458;
                                                                                        uint64_t v457 = *(int *)(v69 + 4);
                                                                                      }
                                                                                      while (v458 < v457);
                                                                                    }
                                                                                    if (v144[418])
                                                                                    {
                                                                                      *(_DWORD *)(v69 + 36) = 0;
                                                                                      v843 = (_DWORD *)(v69 + 36);
LABEL_829:
                                                                                      *(void *)(v69 + 40) = 0;
LABEL_830:
                                                                                      if (v144[416] != 1
                                                                                        || v144[417] != 1
                                                                                        || (*(_DWORD *)(v69 + 40) == 0) != (*(_DWORD *)(v69 + 44) != 0))
                                                                                      {
                                                                                        *(_DWORD *)(v69 + 88) = sub_224AEC1C4(&v846, 2u) + 8;
                                                                                        int v481 = sub_224AEC1C4(&v846, 2u);
                                                                                        *(_DWORD *)(v69 + 92) = v481;
                                                                                        int v482 = 2 * (v481 + v481 * v481);
                                                                                        if (*(_DWORD *)(v69 + 4)
                                                                                          && v482 > 0)
                                                                                        {
                                                                                          int v483 = (unsigned char *)(v69 + 96);
                                                                                          uint64_t v484 = (2 * (v481 + v481 * v481));
                                                                                          do
                                                                                          {
                                                                                            *v483++ = sub_224AEC1C4(&v846, 8u) ^ 0x80;
                                                                                            --v484;
                                                                                          }
                                                                                          while (v484);
                                                                                        }
                                                                                        uint64_t v485 = 0;
                                                                                        char v486 = 1;
                                                                                        do
                                                                                        {
                                                                                          char v487 = v486;
                                                                                          if (*(_DWORD *)(v69 + 4 * v485 + 40)
                                                                                            || *v843)
                                                                                          {
                                                                                            int v488 = *(_DWORD *)(v69 + 4);
                                                                                            BOOL v489 = v488 != 0;
                                                                                            int v490 = v482 | v489;
                                                                                            if ((v482 | v489) >= 1)
                                                                                            {
                                                                                              int v491 = (unsigned char *)(v69 + 120 + 28 * v485);
                                                                                              uint64_t v492 = v482 | v489;
                                                                                              do
                                                                                              {
                                                                                                *v491++ = sub_224AEC1C4(&v846, 8u) ^ 0x80;
                                                                                                --v492;
                                                                                              }
                                                                                              while (v492);
                                                                                              int v488 = *(_DWORD *)(v69 + 4);
                                                                                            }
                                                                                            if (!v488) {
                                                                                              *(unsigned char *)(v69 + 28 * v485 + v490 + 120) = 0;
                                                                                            }
                                                                                          }
                                                                                          char v486 = 0;
                                                                                          uint64_t v485 = 1;
                                                                                        }
                                                                                        while ((v487 & 1) != 0);
                                                                                        *(void *)(v69 + 176) = sub_224AEC1C4(&v846, 2u) + 6;
                                                                                        int v493 = sub_224AEC1C4(&v846, 2u);
                                                                                        uint64_t v494 = 0;
                                                                                        *(_DWORD *)(v69 + 184) = v493;
                                                                                        char v495 = 1;
                                                                                        do
                                                                                        {
                                                                                          char v496 = v495;
                                                                                          int v497 = (_DWORD *)(v69 + 4 * v494);
                                                                                          if (v497[10])
                                                                                          {
                                                                                            v497[47] = sub_224AEC1C4(&v846, 8u) - 128;
                                                                                            v497[49] = sub_224AEC1C4(&v846, 8u) - 128;
                                                                                            v497[51] = sub_224AEC1C4(&v846, 9u) - 256;
                                                                                          }
                                                                                          char v495 = 0;
                                                                                          uint64_t v494 = 1;
                                                                                        }
                                                                                        while ((v496 & 1) != 0);
                                                                                        int v498 = v847;
                                                                                        if (!v847)
                                                                                        {
                                                                                          int v499 = (unsigned __int8 *)__src;
                                                                                          if (__src < v850)
                                                                                          {
                                                                                            __src = (char *)__src + 1;
                                                                                            uint64_t v500 = *v499;
                                                                                            int v501 = 7;
                                                                                            LODWORD(v847) = 7;
                                                                                            unint64_t v502 = v500 << 57;
                                                                                            uint64_t v846 = v500 << 57;
                                                                                            *(_DWORD *)(v69 + 212) = (v500 >> 7) & 1;
                                                                                            goto LABEL_859;
                                                                                          }
                                                                                          HIDWORD(v847) = 1;
                                                                                        }
                                                                                        unint64_t v503 = v846;
                                                                                        unint64_t v502 = 2 * v846;
                                                                                        v846 *= 2;
                                                                                        *(_DWORD *)(v69 + 212) = v503 >> 63;
                                                                                        int v501 = v498 - 1;
                                                                                        LODWORD(v847) = v501;
                                                                                        if (!v501)
                                                                                        {
                                                                                          int v504 = (unsigned __int8 *)__src;
                                                                                          if (__src < v850)
                                                                                          {
                                                                                            __src = (char *)__src + 1;
                                                                                            unint64_t v505 = *v504;
                                                                                            LODWORD(v847) = 7;
                                                                                            uint64_t v846 = v505 << 57;
                                                                                            LODWORD(v505) = (v505 >> 7) & 1;
LABEL_860:
                                                                                            *(_DWORD *)(v69 + 216) = v505;
                                                                                            goto LABEL_861;
                                                                                          }
                                                                                          HIDWORD(v847) = 1;
                                                                                        }
LABEL_859:
                                                                                        LODWORD(v847) = v501 - 1;
                                                                                        uint64_t v846 = 2 * v502;
                                                                                        unint64_t v505 = v502 >> 63;
                                                                                        goto LABEL_860;
                                                                                      }
LABEL_1082:
                                                                                      sub_224B11AE8(a1, (uint64_t)"Error parsing frame header\n", v9, v10, v11, v12, v13, v14, v826);
                                                                                      *(void *)(a1 + 112) = 0;
                                                                                      uint64_t v4 = v838;
                                                                                      uint64_t v2 = v832;
                                                                                      goto LABEL_1083;
                                                                                    }
                                                                                    if (!v847)
                                                                                    {
                                                                                      int v461 = (unsigned __int8 *)__src;
                                                                                      if (__src < v850)
                                                                                      {
                                                                                        __src = (char *)__src + 1;
                                                                                        unint64_t v462 = *v461;
                                                                                        LODWORD(v847) = 7;
                                                                                        uint64_t v846 = v462 << 57;
                                                                                        LODWORD(v462) = (v462 >> 7) & 1;
LABEL_828:
                                                                                        *(_DWORD *)(v69 + 36) = v462;
                                                                                        v843 = (_DWORD *)(v69 + 36);
                                                                                        if (!v462
                                                                                          && (v144[417] != 1
                                                                                           || v144[416] != 1
                                                                                           || v457))
                                                                                        {
                                                                                          uint64_t v658 = 0;
                                                                                          char v659 = 1;
                                                                                          while (1)
                                                                                          {
                                                                                            char v660 = v659;
                                                                                            int v661 = sub_224AEC1C4(&v846, 4u);
                                                                                            uint64_t v662 = v69 + 4 * v658;
                                                                                            *(_DWORD *)(v662 + 40) = v661;
                                                                                            v663 = (int *)(v662 + 40);
                                                                                            if (v661 > 10) {
                                                                                              goto LABEL_1082;
                                                                                            }
                                                                                            if (v661 >= 1)
                                                                                            {
                                                                                              uint64_t v664 = 0;
                                                                                              v665 = (unsigned char *)(v69 + 49 + 20 * v658);
                                                                                              do
                                                                                              {
                                                                                                unsigned __int8 v666 = sub_224AEC1C4(&v846, 8u);
                                                                                                *(v665 - 1) = v666;
                                                                                                if (v664)
                                                                                                {
                                                                                                  if (*(v665 - 3) >= v666) {
                                                                                                    goto LABEL_1082;
                                                                                                  }
                                                                                                }
                                                                                                unsigned char *v665 = sub_224AEC1C4(&v846, 8u);
                                                                                                v665 += 2;
                                                                                              }
                                                                                              while (++v664 < *v663);
                                                                                            }
                                                                                            char v659 = 0;
                                                                                            uint64_t v658 = 1;
                                                                                            if ((v660 & 1) == 0) {
                                                                                              goto LABEL_830;
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                        goto LABEL_829;
                                                                                      }
                                                                                      HIDWORD(v847) = 1;
                                                                                    }
                                                                                    unint64_t v480 = v846;
                                                                                    LODWORD(v847) = v847 - 1;
                                                                                    v846 *= 2;
                                                                                    unint64_t v462 = v480 >> 63;
                                                                                    goto LABEL_828;
                                                                                  }
                                                                                  int v463 = sub_224AEC1C4(&v846, 3u);
                                                                                  uint64_t v464 = 421;
                                                                                  while (v463 != *(char *)(v69 + v464))
                                                                                  {
                                                                                    if (++v464 == 428) {
                                                                                      goto LABEL_1082;
                                                                                    }
                                                                                  }
                                                                                  int v465 = *(_OWORD **)(a1 + 344 * v463 + 49944);
                                                                                  if (!v465) {
                                                                                    goto LABEL_1082;
                                                                                  }
                                                                                  long long v466 = v465[1];
                                                                                  *(_OWORD *)uint64_t v69 = *v465;
                                                                                  *(_OWORD *)(v69 + 16) = v466;
                                                                                  long long v467 = v465[2];
                                                                                  long long v468 = v465[3];
                                                                                  long long v469 = v465[5];
                                                                                  *(_OWORD *)(v69 + 64) = v465[4];
                                                                                  *(_OWORD *)(v69 + 80) = v469;
                                                                                  *(_OWORD *)(v69 + 32) = v467;
                                                                                  *(_OWORD *)(v69 + 48) = v468;
                                                                                  long long v470 = v465[6];
                                                                                  long long v471 = v465[7];
                                                                                  long long v472 = v465[9];
                                                                                  *(_OWORD *)(v69 + 128) = v465[8];
                                                                                  *(_OWORD *)(v69 + 144) = v472;
                                                                                  *(_OWORD *)(v69 + 96) = v470;
                                                                                  *(_OWORD *)(v69 + 112) = v471;
                                                                                  long long v473 = v465[10];
                                                                                  long long v474 = v465[11];
                                                                                  long long v475 = v465[13];
                                                                                  *(_OWORD *)(v69 + 192) = v465[12];
                                                                                  *(_OWORD *)(v69 + 208) = v475;
                                                                                  *(_OWORD *)(v69 + 160) = v473;
                                                                                  *(_OWORD *)(v69 + 176) = v474;
                                                                                  *(_DWORD *)uint64_t v69 = v453;
LABEL_861:
                                                                                  if (*(int *)(a1 + 60) >= 1)
                                                                                  {
                                                                                    uint64_t v506 = 0;
                                                                                    uint64_t v507 = 0;
                                                                                    do
                                                                                    {
                                                                                      sub_224AC7180(*(void *)(a1 + 48) + v506);
                                                                                      ++v507;
                                                                                      v506 += 80;
                                                                                    }
                                                                                    while (v507 < *(int *)(a1 + 60));
                                                                                  }
                                                                                  *(_DWORD *)(a1 + 60) = 0;
                                                                                  *(_DWORD *)(a1 + 64) = 0;
                                                                                  uint64_t v2 = v832;
                                                                                  uint64_t v8 = v835;
                                                                                  uint64_t v4 = v838;
                                                                                  if (v829 != 6
                                                                                    && (sub_224ACD684((uint64_t)&v846, *v835) & 0x80000000) != 0)
                                                                                  {
                                                                                    goto LABEL_974;
                                                                                  }
                                                                                  uint64_t v508 = *(unsigned int *)(v838 + 13148);
                                                                                  if (v508)
                                                                                  {
                                                                                    uint64_t v509 = *(void *)(a1 + 112);
                                                                                    uint64_t v510 = *(int *)(v509 + 240);
                                                                                    if (*(int *)(v509 + 244)
                                                                                       * (uint64_t)(int)v510 > v508)
                                                                                    {
                                                                                      sub_224B11AE8(a1, (uint64_t)"Frame size %dx%d exceeds limit %u\n", v9, v10, v11, v12, v13, v14, v510);
                                                                                      *(void *)(a1 + 112) = 0;
                                                                                      return -34;
                                                                                    }
                                                                                  }
                                                                                  if (v829 != 6) {
                                                                                    goto LABEL_889;
                                                                                  }
                                                                                  int v58 = *(unsigned char **)(a1 + 112);
                                                                                  if (v58[251])
                                                                                  {
LABEL_974:
                                                                                    *(void *)(a1 + 112) = 0;
                                                                                    goto LABEL_1083;
                                                                                  }
                                                                                  LODWORD(v847) = 0;
                                                                                  uint64_t v846 = 0;
                                                                                  __int16 v59 = (void *)(a1 + 60);
                                                                                  if (*(int *)(a1 + 56) <= 0)
                                                                                  {
                                                                                    int v61 = 1;
LABEL_873:
                                                                                    int v511 = (char *)malloc_type_realloc(*(void **)(a1 + 48), 80 * v61, 0x10700408B15705AuLL);
                                                                                    if (!v511) {
                                                                                      goto LABEL_1083;
                                                                                    }
                                                                                    *(void *)(a1 + 48) = v511;
                                                                                    uint64_t v512 = &v511[80 * *(int *)(a1 + 60)];
                                                                                    *((_OWORD *)v512 + 3) = 0u;
                                                                                    *((_OWORD *)v512 + 4) = 0u;
                                                                                    *((_OWORD *)v512 + 1) = 0u;
                                                                                    *((_OWORD *)v512 + 2) = 0u;
                                                                                    *(_OWORD *)uint64_t v512 = 0u;
                                                                                    int v60 = *(_DWORD *)(a1 + 60);
                                                                                    *(_DWORD *)(a1 + 56) = v60 + 1;
                                                                                    int v58 = *(unsigned char **)(a1 + 112);
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    int v60 = 0;
                                                                                  }
LABEL_875:
                                                                                  unsigned int v513 = v58[449]
                                                                                       * v58[445];
                                                                                  if (v513 >= 2)
                                                                                  {
                                                                                    int v514 = (unsigned __int8 *)__src;
                                                                                    if (__src >= v850)
                                                                                    {
                                                                                      uint64_t v520 = v846;
                                                                                      uint64_t v847 = 0x1FFFFFFFFLL;
                                                                                      v846 *= 2;
                                                                                      if (v520 < 0) {
                                                                                        goto LABEL_878;
                                                                                      }
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      __src = (char *)__src + 1;
                                                                                      uint64_t v515 = *v514;
                                                                                      LODWORD(v847) = 7;
                                                                                      uint64_t v846 = v515 << 57;
                                                                                      if ((v515 >> 7))
                                                                                      {
LABEL_878:
                                                                                        unsigned int v516 = *(unsigned __int8 *)(*(void *)(a1 + 112) + 448)
                                                                                             + *(unsigned __int8 *)(*(void *)(a1 + 112) + 444);
                                                                                        int v517 = sub_224AEC1C4(&v846, v516);
                                                                                        uint64_t v518 = *(void *)(a1 + 48);
                                                                                        uint64_t v519 = v518 + 80 * v60;
                                                                                        *(_DWORD *)(v519 + 72) = v517;
                                                                                        *(_DWORD *)(v519 + 76) = sub_224AEC1C4(&v846, v516);
LABEL_881:
                                                                                        LODWORD(v847) = 0;
                                                                                        uint64_t v846 = 0;
                                                                                        if (HIDWORD(v847)) {
                                                                                          goto LABEL_1083;
                                                                                        }
                                                                                        uint64_t v522 = v518 + 80 * v60;
                                                                                        int v523 = v2[2];
                                                                                        if (v523) {
                                                                                          atomic_fetch_add_explicit((atomic_uint *volatile)v523+ 4, 1u, memory_order_relaxed);
                                                                                        }
                                                                                        int v524 = v2[8];
                                                                                        if (v524) {
                                                                                          atomic_fetch_add_explicit((atomic_uint *volatile)v524+ 4, 1u, memory_order_relaxed);
                                                                                        }
                                                                                        *(_OWORD *)uint64_t v522 = *(_OWORD *)v2;
                                                                                        long long v526 = *((_OWORD *)v2 + 2);
                                                                                        long long v525 = *((_OWORD *)v2 + 3);
                                                                                        long long v527 = *((_OWORD *)v2 + 1);
                                                                                        *(void *)(v522 + 64) = v2[8];
                                                                                        *(_OWORD *)(v522 + 32) = v526;
                                                                                        *(_OWORD *)(v522 + 48) = v525;
                                                                                        *(_OWORD *)(v522 + 16) = v527;
                                                                                        int v528 = __src;
                                                                                        int v529 = *(_DWORD *)(a1 + 60);
                                                                                        uint64_t v530 = *(void *)(a1 + 48)
                                                                                             + 80 * v529;
                                                                                        *(void *)uint64_t v530 = __src;
                                                                                        *(void *)(v530 + 8) = v850 - v528;
                                                                                        int v532 = *(_DWORD *)(v530 + 72);
                                                                                        int v531 = *(_DWORD *)(v530 + 76);
                                                                                        if (v532 <= v531
                                                                                          && v532 == *(_DWORD *)(a1 + 64))
                                                                                        {
                                                                                          *(_DWORD *)(a1 + 60) = v529 + 1;
                                                                                          *(_DWORD *)(a1 + 64) = v531 + 1;
                                                                                          goto LABEL_889;
                                                                                        }
                                                                                        if ((v529 & 0x80000000) == 0)
                                                                                        {
                                                                                          uint64_t v555 = 0;
                                                                                          uint64_t v556 = -1;
                                                                                          do
                                                                                          {
                                                                                            sub_224AC7180(*(void *)(a1 + 48)+ v555);
                                                                                            ++v556;
                                                                                            v555 += 80;
                                                                                          }
                                                                                          while (v556 < *(int *)(a1 + 60));
                                                                                        }
                                                                                        *__int16 v59 = 0;
                                                                                        goto LABEL_1083;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                  uint64_t v518 = *(void *)(a1 + 48);
                                                                                  uint64_t v521 = v518 + 80 * v60;
                                                                                  *(_DWORD *)(v521 + 72) = 0;
                                                                                  *(_DWORD *)(v521 + 76) = v513 - 1;
                                                                                  goto LABEL_881;
                                                                                }
                                                                                HIDWORD(v847) = 1;
                                                                              }
                                                                              unint64_t v456 = v846;
                                                                              LODWORD(v847) = v847 - 1;
                                                                              v846 *= 2;
                                                                              unint64_t v455 = v456 >> 63;
                                                                              goto LABEL_797;
                                                                            }
LABEL_793:
                                                                            *(_OWORD *)(v69 + 192) = 0u;
                                                                            *(_OWORD *)(v69 + 208) = 0u;
                                                                            *(_OWORD *)(v69 + 160) = 0u;
                                                                            *(_OWORD *)(v69 + 176) = 0u;
                                                                            *(_OWORD *)(v69 + 128) = 0u;
                                                                            *(_OWORD *)(v69 + 144) = 0u;
                                                                            *(_OWORD *)(v69 + 96) = 0u;
                                                                            *(_OWORD *)(v69 + 112) = 0u;
                                                                            *(_OWORD *)(v69 + 64) = 0u;
                                                                            *(_OWORD *)(v69 + 80) = 0u;
                                                                            *(_OWORD *)(v69 + 32) = 0u;
                                                                            *(_OWORD *)(v69 + 48) = 0u;
                                                                            *(_OWORD *)uint64_t v69 = 0u;
                                                                            *(_OWORD *)(v69 + 16) = 0u;
                                                                            goto LABEL_861;
                                                                          }
                                                                          HIDWORD(v847) = 1;
                                                                        }
                                                                        unint64_t v424 = v846;
                                                                        LODWORD(v847) = v847 - 1;
                                                                        v846 *= 2;
                                                                        unint64_t v421 = v424 >> 63;
                                                                        goto LABEL_736;
                                                                      }
                                                                      if (!v847)
                                                                      {
                                                                        int v422 = (unsigned __int8 *)__src;
                                                                        if (__src < v850)
                                                                        {
                                                                          __src = (char *)__src + 1;
                                                                          unint64_t v423 = *v422;
                                                                          LODWORD(v847) = 7;
                                                                          uint64_t v846 = v423 << 57;
                                                                          LODWORD(v423) = (v423 >> 7) & 1;
LABEL_817:
                                                                          unsigned __int8 v419 = v423 != 0;
                                                                          goto LABEL_727;
                                                                        }
                                                                        HIDWORD(v847) = 1;
                                                                      }
                                                                      unint64_t v476 = v846;
                                                                      LODWORD(v847) = v847 - 1;
                                                                      v846 *= 2;
                                                                      unint64_t v423 = v476 >> 63;
                                                                      goto LABEL_817;
                                                                    }
                                                                    if (!v847)
                                                                    {
                                                                      int v388 = (unsigned __int8 *)__src;
                                                                      if (__src < v850)
                                                                      {
                                                                        __src = (char *)__src + 1;
                                                                        unint64_t v391 = *v388;
                                                                        int v389 = 7;
                                                                        LODWORD(v847) = 7;
                                                                        unint64_t v390 = v391 << 57;
                                                                        uint64_t v846 = v391 << 57;
                                                                        LODWORD(v391) = (v391 >> 7) & 1;
                                                                        goto LABEL_668;
                                                                      }
                                                                      HIDWORD(v847) = 1;
                                                                    }
                                                                    unint64_t v392 = v846;
                                                                    int v389 = v847 - 1;
                                                                    LODWORD(v847) = v847 - 1;
                                                                    unint64_t v390 = 2 * v846;
                                                                    v846 *= 2;
                                                                    unint64_t v391 = v392 >> 63;
LABEL_668:
                                                                    *(unsigned char *)(v69 + 888) = v391;
                                                                    *(unsigned char *)(v69 + 889) = 0;
                                                                    if (!v391 || !v144[399]) {
                                                                      goto LABEL_702;
                                                                    }
                                                                    uint64_t v393 = 0;
                                                                    int v394 = 0;
                                                                    int v395 = 0;
                                                                    int v396 = *(unsigned __int8 *)(v69 + 248);
                                                                    int v397 = -1;
                                                                    uint64_t v9 = 1;
                                                                    int v398 = -1;
                                                                    do
                                                                    {
                                                                      uint64_t v10 = *(void *)(a1
                                                                                      + 344
                                                                                      * *(char *)(v69 + 421 + v393)
                                                                                      + 49944);
                                                                      if (!v10) {
                                                                        goto LABEL_1082;
                                                                      }
                                                                      unsigned __int8 v399 = v144[412];
                                                                      if (v399)
                                                                      {
                                                                        uint64_t v10 = *(unsigned __int8 *)(v10 + 248);
                                                                        uint64_t v11 = (1 << (v399 - 1));
                                                                        uint64_t v12 = (v11 - 1);
                                                                        uint64_t v14 = v12 & (v10 - v396);
                                                                        uint64_t v13 = v14
                                                                            - (v11 & (v10 - v396));
                                                                        if ((int)v13 < 1)
                                                                        {
                                                                          if ((v13 & 0x80000000) != 0)
                                                                          {
                                                                            if (v398 == -1
                                                                              || (uint64_t v13 = (v10 - v398),
                                                                                  uint64_t v12 = v12 & v13,
                                                                                  uint64_t v11 = v11 & v13,
                                                                                  (int)v12 > (int)v11))
                                                                            {
                                                                              int v398 = v10;
                                                                              int v395 = v393;
                                                                            }
                                                                          }
                                                                        }
                                                                        else if (v397 == -1 {
                                                                               || (uint64_t v13 = (v397 - v10),
                                                                        }
                                                                                   uint64_t v12 = v12 & v13,
                                                                                   uint64_t v11 = v11 & v13,
                                                                                   (int)v12 > (int)v11))
                                                                        {
                                                                          int v397 = v10;
                                                                          int v394 = v393;
                                                                        }
                                                                      }
                                                                      ++v393;
                                                                    }
                                                                    while (v393 != 7);
                                                                    if (v398 == -1 || v397 == -1)
                                                                    {
                                                                      if (v398 == -1) {
                                                                        goto LABEL_702;
                                                                      }
                                                                      uint64_t v400 = 0;
                                                                      int v394 = 0;
                                                                      int v401 = 1 << (v399 - 1);
                                                                      int v402 = v401 - 1;
                                                                      int v403 = -1;
                                                                      uint64_t v9 = 49944;
                                                                      do
                                                                      {
                                                                        uint64_t v10 = *(void *)(a1
                                                                                        + 344
                                                                                        * *(char *)(v69 + 421 + v400)
                                                                                        + 49944);
                                                                        if (!v10) {
                                                                          goto LABEL_1082;
                                                                        }
                                                                        if (v144[412])
                                                                        {
                                                                          uint64_t v10 = *(unsigned __int8 *)(v10 + 248);
                                                                          uint64_t v12 = v402 & (v10 - v398);
                                                                          uint64_t v11 = v401 & (v10 - v398);
                                                                          if ((int)v12 < (int)v11)
                                                                          {
                                                                            if (v403 == -1
                                                                              || (uint64_t v12 = v402 & (v10 - v403),
                                                                                  uint64_t v11 = v401 & (v10 - v403),
                                                                                  (int)v12 > (int)v11))
                                                                            {
                                                                              int v403 = v10;
                                                                              int v394 = v400;
                                                                            }
                                                                          }
                                                                        }
                                                                        ++v400;
                                                                      }
                                                                      while (v400 != 7);
                                                                      if (v403 == -1)
                                                                      {
LABEL_702:
                                                                        LOBYTE(v387) = 0;
                                                                        goto LABEL_724;
                                                                      }
                                                                    }
                                                                    if (v395 >= v394) {
                                                                      char v404 = v394;
                                                                    }
                                                                    else {
                                                                      char v404 = v395;
                                                                    }
                                                                    *(unsigned char *)(v69 + 891) = v404;
                                                                    if (v395 <= v394) {
                                                                      LOBYTE(v395) = v394;
                                                                    }
                                                                    *(unsigned char *)(v69 + 892) = v395;
                                                                    *(unsigned char *)(v69 + 889) = 1;
                                                                    if (!v389)
                                                                    {
                                                                      int v405 = (unsigned __int8 *)__src;
                                                                      if (__src < v850)
                                                                      {
                                                                        __src = (char *)__src + 1;
                                                                        unint64_t v387 = *v405;
                                                                        LODWORD(v847) = 7;
                                                                        uint64_t v846 = v387 << 57;
                                                                        LODWORD(v387) = (v387 >> 7) & 1;
                                                                        goto LABEL_724;
                                                                      }
                                                                      HIDWORD(v847) = 1;
                                                                    }
                                                                    LODWORD(v847) = v389 - 1;
                                                                    uint64_t v846 = 2 * v390;
                                                                    unint64_t v387 = v390 >> 63;
                                                                    goto LABEL_724;
                                                                  }
                                                                  if (!v409)
                                                                  {
                                                                    v735 = (unsigned __int8 *)__src;
                                                                    if (__src < v850)
                                                                    {
                                                                      __src = (char *)__src + 1;
                                                                      uint64_t v736 = *v735;
                                                                      LODWORD(v847) = 7;
                                                                      uint64_t v846 = v736 << 57;
                                                                      LODWORD(v736) = (char)v736 >> 7;
LABEL_1228:
                                                                      *(unsigned char *)(v69 + 881) = v736 + v407;
                                                                      goto LABEL_629;
                                                                    }
                                                                    HIDWORD(v847) = 1;
                                                                  }
                                                                  LODWORD(v847) = v409 - 1;
                                                                  uint64_t v846 = 2 * v410;
                                                                  uint64_t v736 = v410 >> 63;
                                                                  goto LABEL_1228;
                                                                }
                                                                if (!v409)
                                                                {
                                                                  int v413 = (unsigned __int8 *)__src;
                                                                  if (__src < v850)
                                                                  {
                                                                    __src = (char *)__src + 1;
                                                                    unint64_t v415 = *v413;
                                                                    int v409 = 7;
                                                                    LODWORD(v847) = 7;
                                                                    uint64_t v414 = v415 << 57;
                                                                    uint64_t v846 = v415 << 57;
                                                                    LODWORD(v415) = (v415 >> 7) & 1;
LABEL_1188:
                                                                    v407 += v415;
                                                                    *(unsigned char *)(v69 + 880) = v407;
                                                                    uint64_t v410 = v414;
                                                                    goto LABEL_1189;
                                                                  }
                                                                  HIDWORD(v847) = 1;
                                                                }
                                                                LODWORD(v847) = --v409;
                                                                uint64_t v414 = 2 * v410;
                                                                uint64_t v846 = 2 * v410;
                                                                unint64_t v415 = (unint64_t)v410 >> 63;
                                                                goto LABEL_1188;
                                                              }
                                                              HIDWORD(v847) = 1;
                                                            }
                                                            unint64_t v412 = v846;
                                                            int v409 = v847 - 1;
                                                            LODWORD(v847) = v847 - 1;
                                                            uint64_t v410 = 2 * v846;
                                                            v846 *= 2;
                                                            unint64_t v411 = v412 >> 63;
                                                            goto LABEL_712;
                                                          }
                                                          *(unsigned char *)(v69 + 830) = sub_224AEC1C4(&v846, 6u);
                                                          char v378 = sub_224AEC1C4(&v846, 6u);
                                                          *(unsigned char *)(v69 + 831) = v378;
                                                          if (!v144[418] && (*(unsigned char *)(v69 + 830) || v378))
                                                          {
                                                            *(unsigned char *)(v69 + 832) = sub_224AEC1C4(&v846, 6u);
                                                            *(unsigned char *)(v69 + 833) = sub_224AEC1C4(&v846, 6u);
                                                          }
                                                          *(unsigned char *)(v69 + 846) = sub_224AEC1C4(&v846, 3u);
                                                          uint64_t v379 = *(unsigned __int8 *)(v69 + 271);
                                                          if (v379 == 7)
                                                          {
                                                            *(void *)(v69 + 836) = 0xFF000000010000;
                                                            *(_WORD *)(v69 + 844) = -1;
                                                          }
                                                          else
                                                          {
                                                            uint64_t v380 = *(void *)(a1
                                                                             + 344 * *(char *)(v69 + v379 + 421)
                                                                             + 49944);
                                                            if (!v380) {
                                                              goto LABEL_1082;
                                                            }
                                                            uint64_t v381 = *(void *)(v380 + 836);
                                                            *(_WORD *)(v69 + 844) = *(_WORD *)(v380 + 844);
                                                            *(void *)(v69 + 836) = v381;
                                                          }
                                                          if (!v847)
                                                          {
                                                            int v382 = (unsigned __int8 *)__src;
                                                            if (__src < v850)
                                                            {
                                                              __src = (char *)__src + 1;
                                                              uint64_t v383 = *v382;
                                                              int v384 = 7;
                                                              LODWORD(v847) = 7;
                                                              unint64_t v385 = v383 << 57;
                                                              uint64_t v846 = v383 << 57;
                                                              LODWORD(v383) = (v383 >> 7) & 1;
                                                              *(unsigned char *)(v69 + 834) = v383;
                                                              if (!v383) {
                                                                goto LABEL_622;
                                                              }
                                                              goto LABEL_1099;
                                                            }
                                                            HIDWORD(v847) = 1;
                                                          }
                                                          unint64_t v416 = v846;
                                                          int v384 = v847 - 1;
                                                          LODWORD(v847) = v847 - 1;
                                                          unint64_t v385 = 2 * v846;
                                                          v846 *= 2;
                                                          v416 >>= 63;
                                                          *(unsigned char *)(v69 + 834) = v416;
                                                          if (!v416) {
                                                            goto LABEL_622;
                                                          }
                                                          if (!v384)
                                                          {
                                                            int v417 = (unsigned __int8 *)__src;
                                                            if (__src < v850)
                                                            {
                                                              __src = (char *)__src + 1;
                                                              unint64_t v418 = *v417;
                                                              LODWORD(v847) = 7;
                                                              uint64_t v846 = v418 << 57;
                                                              LODWORD(v418) = (v418 >> 7) & 1;
LABEL_1100:
                                                              *(unsigned char *)(v69 + 835) = v418;
                                                              if (!v418) {
                                                                goto LABEL_622;
                                                              }
                                                              uint64_t v680 = 0;
                                                              while (1)
                                                              {
                                                                if (v847) {
                                                                  goto LABEL_1106;
                                                                }
                                                                v681 = (unsigned __int8 *)__src;
                                                                if (__src >= v850) {
                                                                  break;
                                                                }
                                                                __src = (char *)__src + 1;
                                                                unint64_t v682 = *v681;
                                                                LODWORD(v847) = 7;
                                                                uint64_t v846 = v682 << 57;
                                                                LODWORD(v682) = (v682 >> 7) & 1;
LABEL_1107:
                                                                if (v682) {
                                                                  *(unsigned char *)(v69 + 838 + v680) = sub_224AEC250((uint64_t)&v846, 7u);
                                                                }
                                                                if (++v680 == 8)
                                                                {
                                                                  uint64_t v684 = 0;
                                                                  char v685 = 1;
                                                                  while (1)
                                                                  {
                                                                    char v686 = v685;
                                                                    if (v847) {
                                                                      goto LABEL_1115;
                                                                    }
                                                                    v687 = (unsigned __int8 *)__src;
                                                                    if (__src >= v850) {
                                                                      break;
                                                                    }
                                                                    __src = (char *)__src + 1;
                                                                    unint64_t v688 = *v687;
                                                                    LODWORD(v847) = 7;
                                                                    uint64_t v846 = v688 << 57;
                                                                    LODWORD(v688) = (v688 >> 7) & 1;
LABEL_1116:
                                                                    if (v688) {
                                                                      *(unsigned char *)(v69 + 836 + v684) = sub_224AEC250((uint64_t)&v846, 7u);
                                                                    }
                                                                    char v685 = 0;
                                                                    uint64_t v684 = 1;
                                                                    if ((v686 & 1) == 0) {
                                                                      goto LABEL_622;
                                                                    }
                                                                  }
                                                                  HIDWORD(v847) = 1;
LABEL_1115:
                                                                  unint64_t v689 = v846;
                                                                  LODWORD(v847) = v847 - 1;
                                                                  v846 *= 2;
                                                                  unint64_t v688 = v689 >> 63;
                                                                  goto LABEL_1116;
                                                                }
                                                              }
                                                              HIDWORD(v847) = 1;
LABEL_1106:
                                                              unint64_t v683 = v846;
                                                              LODWORD(v847) = v847 - 1;
                                                              v846 *= 2;
                                                              unint64_t v682 = v683 >> 63;
                                                              goto LABEL_1107;
                                                            }
                                                            HIDWORD(v847) = 1;
                                                          }
LABEL_1099:
                                                          LODWORD(v847) = v384 - 1;
                                                          uint64_t v846 = 2 * v385;
                                                          unint64_t v418 = v385 >> 63;
                                                          goto LABEL_1100;
                                                        }
LABEL_604:
                                                        LOBYTE(v360) = 0;
                                                        *(unsigned char *)(v69 + 827) = 0;
                                                        goto LABEL_605;
                                                      }
LABEL_603:
                                                      *(unsigned char *)(v69 + 826) = 0;
                                                      goto LABEL_604;
                                                    }
LABEL_602:
                                                    *(unsigned char *)(v69 + 825) = 0;
                                                    goto LABEL_603;
                                                  }
                                                  HIDWORD(v847) = 1;
                                                }
LABEL_527:
                                                int v301 = v309 - 1;
                                                LODWORD(v847) = v301;
                                                uint64_t v302 = 2 * v310;
                                                uint64_t v846 = 2 * v310;
                                                unint64_t v316 = v310 >> 63;
                                                goto LABEL_528;
                                              }
                                              if (v144[420])
                                              {
                                                if (!v270)
                                                {
                                                  int v274 = (unsigned __int8 *)__src;
                                                  if (__src < v850)
                                                  {
                                                    __src = (char *)__src + 1;
                                                    uint64_t v275 = *v274;
                                                    int v270 = 7;
                                                    LODWORD(v847) = 7;
                                                    uint64_t v846 = v275 << 57;
                                                    LODWORD(v276) = (v275 >> 7) & 1;
                                                    goto LABEL_460;
                                                  }
                                                  HIDWORD(v847) = 1;
                                                }
                                                unint64_t v277 = v846;
                                                LODWORD(v847) = --v270;
                                                v846 *= 2;
                                                unint64_t v276 = v277 >> 63;
                                              }
                                              else
                                              {
                                                LODWORD(v276) = 0;
                                              }
                                              if (!v270)
                                              {
                                                int v278 = (unsigned __int8 *)__src;
                                                if (__src < v850)
                                                {
                                                  __src = (char *)__src + 1;
                                                  unint64_t v280 = *v278;
                                                  int v279 = 7;
                                                  LODWORD(v847) = 7;
                                                  uint64_t v846 = v280 << 57;
                                                  LODWORD(v280) = (v280 >> 7) & 1;
                                                  goto LABEL_461;
                                                }
                                                HIDWORD(v847) = 1;
                                              }
LABEL_460:
                                              unint64_t v281 = v846;
                                              int v279 = v270 - 1;
                                              LODWORD(v847) = v279;
                                              v846 *= 2;
                                              unint64_t v280 = v281 >> 63;
LABEL_461:
                                              if (v280)
                                              {
                                                char v282 = sub_224AEC250((uint64_t)&v846, 7u);
                                                int v279 = v847;
                                              }
                                              else
                                              {
                                                char v282 = 0;
                                              }
                                              *(unsigned char *)(v69 + 714) = v282;
                                              if (!v279)
                                              {
                                                uint64_t v283 = (unsigned __int8 *)__src;
                                                if (__src < v850)
                                                {
                                                  __src = (char *)__src + 1;
                                                  unint64_t v284 = *v283;
                                                  LODWORD(v847) = 7;
                                                  uint64_t v846 = v284 << 57;
                                                  LODWORD(v284) = (v284 >> 7) & 1;
                                                  goto LABEL_469;
                                                }
                                                HIDWORD(v847) = 1;
                                              }
                                              unint64_t v285 = v846;
                                              LODWORD(v847) = v279 - 1;
                                              v846 *= 2;
                                              unint64_t v284 = v285 >> 63;
LABEL_469:
                                              if (v284) {
                                                char v286 = sub_224AEC250((uint64_t)&v846, 7u);
                                              }
                                              else {
                                                char v286 = 0;
                                              }
                                              *(unsigned char *)(v69 + 715) = v286;
                                              if (!v276)
                                              {
                                                *(unsigned char *)(v69 + 716) = *(unsigned char *)(v69 + 714);
LABEL_490:
                                                *(unsigned char *)(v69 + 717) = v286;
                                                int v270 = v847;
                                                goto LABEL_491;
                                              }
                                              if (!v847)
                                              {
                                                uint64_t v287 = (unsigned __int8 *)__src;
                                                if (__src < v850)
                                                {
                                                  __src = (char *)__src + 1;
                                                  unint64_t v289 = *v287;
                                                  int v288 = 7;
                                                  LODWORD(v847) = 7;
                                                  uint64_t v846 = v289 << 57;
                                                  LODWORD(v289) = (v289 >> 7) & 1;
                                                  goto LABEL_479;
                                                }
                                                HIDWORD(v847) = 1;
                                              }
                                              unint64_t v290 = v846;
                                              int v288 = v847 - 1;
                                              LODWORD(v847) = v847 - 1;
                                              v846 *= 2;
                                              unint64_t v289 = v290 >> 63;
LABEL_479:
                                              if (v289)
                                              {
                                                char v291 = sub_224AEC250((uint64_t)&v846, 7u);
                                                int v288 = v847;
                                              }
                                              else
                                              {
                                                char v291 = 0;
                                              }
                                              *(unsigned char *)(v69 + 716) = v291;
                                              if (!v288)
                                              {
                                                uint64_t v292 = (unsigned __int8 *)__src;
                                                if (__src < v850)
                                                {
                                                  __src = (char *)__src + 1;
                                                  unint64_t v293 = *v292;
                                                  LODWORD(v847) = 7;
                                                  uint64_t v846 = v293 << 57;
                                                  LODWORD(v293) = (v293 >> 7) & 1;
                                                  goto LABEL_487;
                                                }
                                                HIDWORD(v847) = 1;
                                              }
                                              unint64_t v294 = v846;
                                              LODWORD(v847) = v288 - 1;
                                              v846 *= 2;
                                              unint64_t v293 = v294 >> 63;
LABEL_487:
                                              if (v293) {
                                                char v286 = sub_224AEC250((uint64_t)&v846, 7u);
                                              }
                                              else {
                                                char v286 = 0;
                                              }
                                              goto LABEL_490;
                                            }
                                            HIDWORD(v847) = 1;
                                          }
                                          unint64_t v221 = v846;
                                          int v218 = v212 - 1;
                                          LODWORD(v847) = v212 - 1;
                                          unint64_t v219 = 2 * v846;
                                          v846 *= 2;
                                          unint64_t v220 = v221 >> 63;
                                          goto LABEL_352;
                                        }
                                        HIDWORD(v847) = 1;
                                      }
                                      unint64_t v215 = v846;
                                      int v212 = v847 - 1;
                                      LODWORD(v847) = v847 - 1;
                                      v846 *= 2;
                                      unint64_t v214 = v215 >> 63;
                                      goto LABEL_346;
                                    }
                                    HIDWORD(v847) = 1;
                                  }
                                  LODWORD(v847) = v203 - 1;
                                  uint64_t v846 = 2 * v204;
                                  unint64_t v209 = v204 >> 63;
                                  goto LABEL_1183;
                                }
                                HIDWORD(v847) = 1;
                              }
                              unint64_t v206 = v846;
                              int v203 = v198 - 1;
                              LODWORD(v847) = v203;
                              unint64_t v204 = 2 * v846;
                              v846 *= 2;
                              unint64_t v205 = v206 >> 63;
                              goto LABEL_324;
                            }
                            HIDWORD(v847) = 1;
                          }
                          unint64_t v196 = v846;
                          int v191 = v847 - 1;
                          LODWORD(v847) = v847 - 1;
                          v846 *= 2;
                          unint64_t v194 = v196 >> 63;
                          goto LABEL_310;
                        }
LABEL_288:
                        int v144 = v842;
                        goto LABEL_289;
                      }
LABEL_204:
                      __int16 v142 = (unsigned char *)(v69 + 420);
                      *(unsigned char *)(v69 + 420) = 0;
                      goto LABEL_288;
                    }
                    HIDWORD(v847) = 1;
                  }
                  unint64_t v128 = v846;
                  LODWORD(v847) = v847 - 1;
                  v846 *= 2;
                  unint64_t v127 = v128 >> 63;
                  goto LABEL_175;
                }
LABEL_124:
                LODWORD(v847) = --v76;
                uint64_t v79 = v77 >> 63;
                v77 *= 2;
                uint64_t v846 = v77;
                goto LABEL_125;
              }
              HIDWORD(v847) = 1;
            }
            uint64_t v79 = v846;
            int v76 = v847 - 1;
            LODWORD(v847) = v847 - 1;
            unint64_t v77 = 2 * v846;
            v846 *= 2;
            uint64_t v78 = (unsigned char *)(v69 + 267);
            *(unsigned char *)(v69 + 267) = v79 < 0;
            LODWORD(v79) = *(_DWORD *)(v70 + 404);
            if (v79 != 2) {
              goto LABEL_125;
            }
            if (!v76)
            {
              int v82 = (unsigned __int8 *)__src;
              if (__src < v850)
              {
                __src = (char *)__src + 1;
                uint64_t v79 = *v82;
                int v76 = 7;
                LODWORD(v847) = 7;
                unint64_t v77 = v79 << 57;
                uint64_t v846 = v79 << 57;
                LODWORD(v79) = (v79 >> 7) & 1;
                goto LABEL_125;
              }
              HIDWORD(v847) = 1;
            }
            goto LABEL_124;
          }
          HIDWORD(v847) = 1;
        }
        unint64_t v195 = v846;
        LODWORD(v847) = v847 - 1;
        v846 *= 2;
        unint64_t v84 = v195 >> 63;
        goto LABEL_307;
      }
      *(void *)(a1 + 104) = 0;
      return -12;
    case 15:
      goto LABEL_889;
    default:
      sub_224B11AE8(a1, (uint64_t)"Unknown OBU type %d of size %td\n", v9, v10, v11, v12, v13, v14, v15);
      goto LABEL_889;
  }
}

uint64_t sub_224AD3350(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 112);
  if (a3)
  {
    unsigned int v7 = 0;
    while (!sub_224AEC164(a2))
    {
      if (++v7 == 7) {
        goto LABEL_5;
      }
    }
    uint64_t v9 = *(void *)(a1 + 344 * *(char *)(*(void *)(a1 + 112) + v7 + 421) + 49944);
    if (!v9) {
      return 0xFFFFFFFFLL;
    }
    int v10 = *(_DWORD *)(v9 + 240);
    *(_DWORD *)(v5 + 240) = v10;
    *(_DWORD *)(v5 + 244) = *(_DWORD *)(v9 + 244);
    *(void *)(v5 + 408) = *(void *)(v9 + 408);
    if (*(unsigned char *)(v4 + 413))
    {
      int v11 = sub_224AEC164(a2);
      *(unsigned char *)(v5 + 417) = v11;
      if (v11)
      {
        char v12 = sub_224AEC1C4(a2, 3u);
        *(unsigned char *)(v5 + 416) = v12 + 9;
        int v13 = *(_DWORD *)(v5 + 240);
        int v10 = (((v12 + 9) >> 1) + 8 * v13) / (v12 + 9);
        if (v13 >= 16) {
          int v14 = 16;
        }
        else {
          int v14 = *(_DWORD *)(v5 + 240);
        }
        if (v10 <= v14) {
          int v10 = v14;
        }
        goto LABEL_32;
      }
      int v10 = *(_DWORD *)(v5 + 240);
    }
    else
    {
      *(unsigned char *)(v5 + 417) = 0;
    }
    *(unsigned char *)(v5 + 416) = 8;
LABEL_32:
    uint64_t result = 0;
    *(_DWORD *)(v5 + 236) = v10;
    return result;
  }
LABEL_5:
  if (*(unsigned char *)(v5 + 270))
  {
    *(_DWORD *)(v5 + 240) = sub_224AEC1C4(a2, *(unsigned __int8 *)(v4 + 387)) + 1;
    int v8 = sub_224AEC1C4(a2, *(unsigned __int8 *)(v4 + 388)) + 1;
  }
  else
  {
    *(_DWORD *)(v5 + 240) = *(_DWORD *)(v4 + 4);
    int v8 = *(_DWORD *)(v4 + 8);
  }
  *(_DWORD *)(v5 + 244) = v8;
  if (*(unsigned char *)(v4 + 413))
  {
    int v15 = sub_224AEC164(a2);
    *(unsigned char *)(v5 + 417) = v15;
    if (v15)
    {
      char v16 = sub_224AEC1C4(a2, 3u);
      *(unsigned char *)(v5 + 416) = v16 + 9;
      int v17 = *(_DWORD *)(v5 + 240);
      int v18 = (((v16 + 9) >> 1) + 8 * v17) / (v16 + 9);
      if (v17 >= 16) {
        int v19 = 16;
      }
      else {
        int v19 = *(_DWORD *)(v5 + 240);
      }
      if (v18 <= v19) {
        int v18 = v19;
      }
      goto LABEL_25;
    }
  }
  else
  {
    *(unsigned char *)(v5 + 417) = 0;
  }
  *(unsigned char *)(v5 + 416) = 8;
  int v18 = *(_DWORD *)(v5 + 240);
LABEL_25:
  *(_DWORD *)(v5 + 236) = v18;
  char v20 = sub_224AEC164(a2);
  *(unsigned char *)(v5 + 418) = v20;
  if (v20)
  {
    *(_DWORD *)(v5 + 408) = sub_224AEC1C4(a2, 0x10u) + 1;
    int v21 = sub_224AEC1C4(a2, 0x10u);
    uint64_t result = 0;
    *(_DWORD *)(v5 + 412) = v21 + 1;
  }
  else
  {
    uint64_t result = 0;
    *(void *)(v5 + 408) = *(void *)(v5 + 240);
  }
  return result;
}

uint64_t sub_224AD3564(uint64_t result, uint64_t *a2, uint64_t a3, int a4, int a5, int a6, int a7)
{
  uint64_t v176 = *MEMORY[0x263EF8340];
  uint64_t v7 = *(void *)(result + 8);
  int v8 = *(_DWORD *)(v7 + 2168);
  char v142 = v8 != 3;
  int v150 = v8;
  BOOL v9 = v8 == 2;
  if (a4 < a5)
  {
    uint64_t v10 = 0;
    int v133 = 2 * *(_DWORD *)(v7 + 3456);
    uint64_t v11 = *(void *)(v7 + 24);
    int v12 = *(unsigned __int8 *)(v11 + 847);
    unint64_t v130 = (char *)&unk_224B28C70 + 8 * v9;
    unsigned int v13 = *(_DWORD *)(*(void *)(v7 + 3256) + 24);
    int v14 = *(_DWORD *)(v11 + 236);
    int v15 = *(_DWORD *)(v11 + 240);
    uint64_t v16 = *(void *)(v7 + 2152);
    uint64_t v17 = *(void *)(v7 + 2144);
    unsigned int v18 = a4;
    if (a4 <= 0) {
      int v19 = 8;
    }
    else {
      int v19 = 12;
    }
    BOOL v20 = a6 != 0;
    int v21 = (int *)(result + 258544);
    uint64_t v22 = 6;
    if (v150 == 1) {
      uint64_t v22 = 2;
    }
    uint64_t v112 = v22;
    uint64_t v23 = 7;
    uint64_t v24 = *(unsigned __int8 *)(*(void *)(v7 + 8) + 392);
    if (v150 == 1) {
      uint64_t v23 = 3;
    }
    uint64_t v111 = v23;
    int v25 = 4 * a7;
    uint64_t v121 = a2[1];
    uint64_t v122 = a2[2];
    int v26 = (4 << v24) * a7;
    int v27 = 4 * a7 - 4;
    uint64_t v123 = *a2;
    uint64_t result = (v26 - 4);
    unsigned int v170 = *(_DWORD *)(*(void *)(v7 + 3256) + 24);
    if (v13 < 2) {
      BOOL v20 = 1;
    }
    BOOL v117 = v20;
    if (v13 >= 2) {
      int v28 = a7;
    }
    else {
      int v28 = 0;
    }
    uint64_t v113 = v16 * 8 * v28;
    uint64_t v114 = v17 * 4 * v28;
    uint64_t v29 = (4 * a7) | 2;
    uint64_t v125 = v17 * v29;
    uint64_t v30 = (4 * v24 + v26) | 2;
    uint64_t v140 = v16 * v29;
    uint64_t v169 = v16 * (8u >> (v150 == 1));
    uint64_t v129 = v17 * v25;
    if (v13 >= 2) {
      uint64_t v31 = v17 * v25;
    }
    else {
      uint64_t v31 = 0;
    }
    uint64_t v139 = v31;
    uint64_t v141 = v16 * 8 * a7;
    if (v13 >= 2) {
      uint64_t v32 = v16 * 8 * a7;
    }
    else {
      uint64_t v32 = 0;
    }
    uint64_t v138 = v32;
    int v166 = v14;
    int v165 = v15;
    if (v14 == v15) {
      uint64_t v33 = (int)result;
    }
    else {
      uint64_t v33 = v27;
    }
    uint64_t v137 = v16 * v33;
    int v34 = a5;
    uint64_t v136 = v16 * v30;
    uint64_t v124 = v17 * v30;
    uint64_t v128 = v17 * v27;
    uint64_t v127 = v17 * (int)result;
    uint64_t v154 = *(void *)(v7 + 3280);
    uint64_t v156 = 8u >> v142;
    uint64_t v131 = 0x40u >> v142;
    int v35 = (void *)(v7 + 2144);
    unsigned int v36 = v12 - 1;
    uint64_t v149 = 8 * v17;
    uint64_t v118 = v21;
    int v37 = *v21;
    while (1)
    {
      if ((signed int)(v18 + 2) >= *(_DWORD *)(v7 + 3452)) {
        unsigned int v38 = v19 & 0xFFFFFFF7;
      }
      else {
        unsigned int v38 = v19;
      }
      signed int v120 = v18 + 2;
      int v39 = v117;
      if ((int)(v18 + 2) < v34) {
        int v39 = 1;
      }
      if (v39 == 1 && (v38 & 8) != 0)
      {
        uint64_t v41 = (void *)(v7 + 24 * (v37 == 0));
        uint64_t v42 = (char *)(v41[649] + v114);
        uint64_t v43 = v41[650];
        uint64_t v44 = v41[651];
        if (v17 < 0)
        {
          v42 += v17;
          uint64_t v45 = (const void *)(v123 - v17 + 8 * v17);
          size_t v46 = -2 * v17;
        }
        else
        {
          uint64_t v45 = (const void *)(v123 + 6 * v17);
          size_t v46 = 2 * v17;
        }
        uint64_t result = (uint64_t)memcpy(v42, v45, v46);
        int v34 = a5;
        if (v150)
        {
          int v47 = (char *)(v43 + v113);
          unsigned int v48 = (char *)(v44 + v113);
          uint64_t v49 = *(void *)(v7 + 2152);
          if (v49 < 0)
          {
            size_t v50 = -2 * v49;
            memcpy(&v47[v49], (const void *)(v121 + v49 * v111), -2 * v49);
            uint64_t v52 = &v48[v49];
            uint64_t v51 = (const void *)(v122 + v49 * v111);
          }
          else
          {
            size_t v50 = 2 * v49;
            memcpy(v47, (const void *)(v121 + v49 * v112), 2 * v49);
            uint64_t v51 = (const void *)(v122 + v49 * v112);
            uint64_t v52 = v48;
          }
          uint64_t result = (uint64_t)memcpy(v52, v51, v50);
          int v34 = a5;
          int v35 = (void *)(v7 + 2144);
        }
      }
      unsigned int v53 = v38 & 0xFFFFFFFC | 2;
      if (v133 >= 1) {
        break;
      }
LABEL_135:
      uint64_t v17 = *(void *)(v7 + 2144);
      v123 += 8 * v17;
      uint64_t v110 = (8 * *(void *)(v7 + 2152)) >> (v150 == 1);
      v121 += v110;
      v122 += v110;
      int v37 = *v118 ^ 1;
      *uint64_t v118 = v37;
      int v19 = v53 | 4;
      int v34 = a5;
      unsigned int v18 = v120;
      if (v120 >= a5) {
        return result;
      }
    }
    unsigned int v54 = 0;
    unsigned int v55 = 0;
    int v56 = 0;
    uint64_t v126 = (v18 >> 1) & 0xF;
    BOOL v57 = a6 != 0;
    BOOL v58 = v18 == a4 && a6 != 0;
    BOOL v167 = v58;
    int v132 = (v18 >> 3) & 2;
    if (v120 < v34) {
      BOOL v57 = 1;
    }
    BOOL v164 = v57;
    int v168 = v37;
    unint64_t v148 = (uint64_t *)(v7 + 24 * v37 + 5192);
    int v59 = 1;
    uint64_t v61 = v121;
    uint64_t v60 = v122;
    uint64_t v62 = v123;
    while (1)
    {
      uint64_t v63 = v54;
      uint64_t v64 = *(char *)(a3 + 1348 * (v55 >> 1) + (v55 & 1 | v132) + 1280);
      unsigned int v147 = v55;
      uint64_t v145 = v61;
      uint64_t v146 = v60;
      unsigned int v143 = v54;
      uint64_t v144 = v62;
      if (v64 != -1)
      {
        uint64_t v65 = *(void *)(v7 + 24) + v64;
        uint64_t result = *(unsigned __int8 *)(v65 + 849);
        unsigned int v66 = *(unsigned __int8 *)(v65 + 857);
        if (result | v66) {
          break;
        }
      }
      int v59 = 1;
LABEL_51:
      uint64_t v62 = v144 + 64;
      uint64_t v61 = v145 + v131;
      uint64_t v60 = v146 + v131;
      unsigned int v55 = v147 + 1;
      v53 |= 1u;
      unsigned int v54 = v143 + 16;
      if (v147 + 1 == v133) {
        goto LABEL_135;
      }
    }
    unsigned int v159 = *(_DWORD *)(a3 + 1348 * (v55 >> 1) + 4 * v126 + 1284);
    int v67 = result & 3;
    if (v67 == 3) {
      int v67 = 4;
    }
    int v155 = v67;
    if ((v66 & 3) == 3) {
      uint64_t v68 = 4;
    }
    else {
      uint64_t v68 = v66 & 3;
    }
    uint64_t v172 = v62;
    uint64_t v173 = v61;
    uint64_t v174 = v60;
    int v69 = 16 * v55;
    int v70 = v69 + 16;
    int v71 = *(_DWORD *)(v7 + 3448);
    int v158 = v69 + 16;
    if (v69 + 16 >= v71) {
      int v70 = *(_DWORD *)(v7 + 3448);
    }
    if (v69 >= v70) {
      goto LABEL_51;
    }
    int v72 = (result != 0) | (2 * (v66 != 0));
    unsigned int v134 = result >> 2;
    uint64_t v73 = v66 >> 2;
    unsigned int v153 = result;
    unsigned int v157 = v66;
    BOOL v75 = result > 3 || v66 > 3;
    BOOL v151 = v75;
    uint64_t v76 = v60;
    uint64_t v77 = v61;
    int v152 = (result != 0) | (2 * (v66 != 0));
    while (1)
    {
      uint64_t v163 = v63 + 2;
      if (v71 <= (int)v63 + 2) {
        unsigned int v78 = v53 & 0xFFFFFFFD;
      }
      else {
        unsigned int v78 = v53;
      }
      if (((v159 >> (v63 & 0x1E)) & 3) == 0)
      {
        int v59 = 1;
        goto LABEL_129;
      }
      if (v59) {
        int v79 = 3;
      }
      else {
        int v79 = ~v56;
      }
      if (v79 & v72) != 0 && (v78) {
        uint64_t result = sub_224AD3F44((uint64_t)&v175[3 * v10], &v172, v35, 0, v150, v79 & v72);
      }
      if ((v78 & 2) != 0) {
        uint64_t result = sub_224AD3F44((uint64_t)&v175[3 * (v10 == 0)], &v172, v35, 8u, v150, v72);
      }
      int v80 = 0;
      unsigned int v171 = 0;
      if (v151)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t, void, unsigned int *))(v154 + 3296))(v62, *v35, &v171);
        int v80 = result;
      }
      if (v170 > 1)
      {
        int v82 = v155;
        if (v167)
        {
          uint64_t v84 = (4 * v63) & 0xFFFFFFF8;
          if (v166 == v165)
          {
            uint64_t v85 = v127 + v84;
            uint64_t v86 = *(void *)(v7 + 5264);
          }
          else
          {
            uint64_t v85 = v128 + v84;
            uint64_t v86 = *(void *)(v7 + 5240);
          }
          uint64_t v83 = v86 + v85;
          goto LABEL_94;
        }
        uint64_t v81 = *v148;
        if (!v164)
        {
          uint64_t v87 = (4 * v63) & 0xFFFFFFF8;
          uint64_t v83 = v81 + v129 + v87;
          if (v166 == v165)
          {
            uint64_t v88 = v124 + v87;
            uint64_t v89 = *(void *)(v7 + 5264);
          }
          else
          {
            uint64_t v88 = v125 + v87;
            uint64_t v89 = *(void *)(v7 + 5240);
          }
          uint64_t v90 = v89 + v88;
          goto LABEL_95;
        }
      }
      else
      {
        uint64_t v81 = *v148;
        int v82 = v155;
      }
      uint64_t v83 = v81 + ((4 * v63) & 0xFFFFFFF8) + v139;
LABEL_94:
      uint64_t v90 = v172 + v149;
LABEL_95:
      if (v153 < 4)
      {
        if (v82) {
          uint64_t result = (*(uint64_t (**)(uint64_t, void, _OWORD *, uint64_t, uint64_t, void))(v154 + 3304))(v172, *v35, &v175[3 * v10], v83, v90, 0);
        }
      }
      else
      {
        if (v171)
        {
          if (v171 >= 0x40)
          {
            signed int v93 = __clz(v171 >> 6) ^ 0x1F;
            if (v93 >= 12) {
              signed int v93 = 12;
            }
            int v91 = v93 + 4;
          }
          else
          {
            int v91 = 4;
          }
          uint64_t v92 = (v91 * v134 + 8) >> 4;
        }
        else
        {
          uint64_t v92 = 0;
        }
        if (v92 | v82) {
          uint64_t result = (*(uint64_t (**)(uint64_t, void, _OWORD *, uint64_t, uint64_t, uint64_t))(v154 + 3304))(v172, *v35, &v175[3 * v10], v83, v90, v92);
        }
      }
      if (v157)
      {
        if (v157 < 4) {
          uint64_t v94 = 0;
        }
        else {
          uint64_t v94 = v130[v80];
        }
        char v95 = 0;
        uint64_t v96 = (4 * v63) >> v142;
        uint64_t v162 = v141 + v96;
        uint64_t v161 = v140 + v96;
        uint64_t v160 = v136 + v96;
        uint64_t v97 = v138 + v96;
        uint64_t v98 = v137 + v96;
        uint64_t v99 = 1;
        do
        {
          char v100 = v95;
          if (v170 >= 2)
          {
            if (v167)
            {
              uint64_t v102 = v7 + 8 * v99;
              uint64_t v103 = (void *)(v102 + 5264);
              int v104 = (void *)(v102 + 5240);
              if (v166 == v165) {
                int v104 = v103;
              }
              uint64_t v101 = *v104 + v98;
              goto LABEL_119;
            }
            if (!v164)
            {
              uint64_t v101 = *(void *)(v7 + 24 * v168 + 8 * v99 + 5192) + v162;
              uint64_t v107 = v7 + 8 * v99;
              int v108 = (uint64_t *)(v107 + 5264);
              unint64_t v105 = (uint64_t *)(v107 + 5240);
              if (v166 == v165) {
                unint64_t v105 = v108;
              }
              uint64_t v106 = v161;
              if (v166 == v165) {
                uint64_t v106 = v160;
              }
              goto LABEL_120;
            }
          }
          uint64_t v101 = *(void *)(v7 + 24 * v168 + 8 * v99 + 5192) + v97;
LABEL_119:
          unint64_t v105 = &v172 + v99;
          uint64_t v106 = v169;
LABEL_120:
          uint64_t result = (*(uint64_t (**)(void, void, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v154 + 8 * (3 - v150) + 3304))(*(&v172 + v99), *(void *)(v7 + 2152), &v175[3 * v10 + v99], v101, *v105 + v106, v73, v68, v94, __PAIR64__(v78, v36));
          char v95 = 1;
          uint64_t v99 = 2;
        }
        while ((v100 & 1) == 0);
      }
      int v59 = 0;
      v10 ^= 1uLL;
      uint64_t v62 = v172;
      uint64_t v77 = v173;
      uint64_t v76 = v174;
      int v72 = v152;
      int v56 = v152;
      int v71 = *(_DWORD *)(v7 + 3448);
      int v35 = (void *)(v7 + 2144);
LABEL_129:
      v62 += 8;
      v77 += v156;
      uint64_t v172 = v62;
      uint64_t v173 = v77;
      v76 += v156;
      uint64_t v174 = v76;
      unsigned int v53 = v78 | 1;
      int v109 = v158;
      if (v158 >= v71) {
        int v109 = v71;
      }
      uint64_t v63 = v163;
      if (v109 <= (int)v163) {
        goto LABEL_51;
      }
    }
  }
  return result;
}

uint64_t sub_224AD3F44(uint64_t result, void *a2, void *a3, unsigned int a4, int a5, char a6)
{
  if (a6)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      *(_WORD *)(result + v6) = *(_WORD *)(*a2 + a4 - 2 + v7);
      v7 += *a3;
      v6 += 2;
    }
    while (v6 != 16);
  }
  if (a5 && (a6 & 2) != 0)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8u >> (a5 == 1);
    uint64_t v10 = (a4 >> (a5 != 3)) - 2;
    uint64_t v11 = (_WORD *)(result + 32);
    do
    {
      *(v11 - 8) = *(_WORD *)(a2[1] + v10 + v8);
      *v11++ = *(_WORD *)(a2[2] + v10 + v8);
      v8 += a3[1];
      --v9;
    }
    while (v9);
  }
  return result;
}

_DWORD *sub_224AD3FDC(_DWORD *result, char *__dst, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, int a8, int a9, unsigned int a10, int a11, unsigned int a12, int a13)
{
  uint64_t v15 = a3;
  uint64_t v16 = __dst;
  uint64_t v17 = result;
  unsigned int v18 = a12;
  int v19 = a13;
  uint64_t v20 = *((void *)result + 3);
  unsigned int v48 = a10;
  if (*(unsigned char *)(v20 + 417)) {
    unsigned int v48 = (int)(*(_DWORD *)(v20 + 240) + a12) >> a12;
  }
  if (a8) {
    int v21 = 0;
  }
  else {
    int v21 = -8;
  }
  unsigned int v22 = ((64 << ((a13 == 0) & a7)) + v21) >> a6;
  uint64_t v23 = a5 >> 1;
  uint64_t v24 = (char *)(a4 + 2 * (a5 >> 1) * (v22 - 2));
  if (*(_DWORD *)(*((void *)result + 407) + 24) == 1)
  {
    if (a8)
    {
      int v25 = 4 << a7;
      uint64_t v26 = a3 >> 1;
      size_t v28 = (int)(2 * v48);
      memcpy(__dst, &__dst[2 * (a3 >> 1) * (4 << a7)], v28);
      memcpy(&v16[a3], &v16[2 * v26 * (v25 | 1)], v28);
      memcpy(&v16[2 * a3], &v16[2 * v26 * (v25 | 2)], v28);
      uint64_t v15 = a3;
      uint64_t result = memcpy(&v16[6 * v26], &v16[2 * v26 * (v25 | 3)], (int)(2 * v48));
      int v19 = a13;
      unsigned int v18 = a12;
      uint64_t v23 = a5 >> 1;
    }
    v16 += 4 * v15;
  }
  if (v19 && *(_DWORD *)(*((void *)v17 + 3) + 236) != *(_DWORD *)(*((void *)v17 + 3) + 240))
  {
    int v37 = v22 + a8;
    if (v37 <= a9)
    {
      unsigned int v38 = (char *)&v17[v18];
      uint64_t v45 = v38 + 3248;
      size_t v46 = (unsigned int *)(v38 + 3240);
      uint64_t v39 = 0x40u >> a6;
      uint64_t v40 = v15 >> 1;
      int v41 = a11 - 1;
      uint64_t v42 = 2 * v23 * v39;
      do
      {
        if (v41 == v37) {
          uint64_t v43 = 3;
        }
        else {
          uint64_t v43 = 4;
        }
        LODWORD(v44) = *v45;
        HIDWORD(v44) = v17[1081];
        uint64_t result = (_DWORD *)(*(uint64_t (**)(char *, uint64_t, char *, uint64_t, void, uint64_t, void, void, uint64_t))(*((void *)v17 + 410) + 672))(v16, v15, v24, a5, v48, v43, a10, *v46, v44);
        v16 += 2 * v40 * v43;
        if (v41 == v37)
        {
          uint64_t result = memcpy(v16, &v16[-2 * (v15 >> 1)], (int)(2 * v48));
          v16 += 2 * v40;
        }
        v37 += v39;
        v24 += v42;
      }
      while (v37 <= a9);
    }
  }
  else
  {
    int v29 = v22 + a8;
    if ((int)(v22 + a8) <= a9)
    {
      unsigned int v49 = 0x40u >> a6;
      uint64_t v30 = v23 * ((0x40u >> a6) - 4);
      unint64_t v31 = v15 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v32 = -(uint64_t)(v15 & 0xFFFFFFFFFFFFFFFELL);
      uint64_t v33 = 2 * v23;
      do
      {
        int v34 = 0;
        if (v29 + 1 == a11) {
          int v35 = 3;
        }
        else {
          int v35 = 4;
        }
        do
        {
          if (v35 == v34) {
            unsigned int v36 = &v16[v32];
          }
          else {
            unsigned int v36 = v24;
          }
          uint64_t result = memcpy(v16, v36, (int)(2 * a10));
          ++v34;
          v16 += v31;
          v24 += v33;
        }
        while (v34 != 4);
        v24 += 2 * v30;
        v29 += v49;
      }
      while (v29 <= a9);
    }
  }
  return result;
}

uint64_t sub_224AD42F4(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 258536);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  int v96 = *(unsigned __int8 *)(*(void *)(v4 + 8) + 392);
  unsigned int v5 = v96 == 0;
  uint64_t v6 = *(void *)(v4 + 3256);
  size_t __n = *(int *)(v4 + 3472);
  int v7 = *(_DWORD *)(v3 + 13884);
  uint64_t v8 = *(int *)(v3 + 13880);
  uint64_t v9 = *(void *)(v4 + 24);
  unsigned int v10 = *(unsigned __int16 *)(v9 + 2 * v8 + 450);
  char v95 = (void *)(a1 + 258536);
  if ((*(unsigned char *)(v9 + 232) & 1) == 0 && !*(unsigned char *)(v9 + 419)) {
    goto LABEL_21;
  }
  int v11 = *(_DWORD *)(v3 + 13864);
  int v12 = *(_DWORD *)(v3 + 13868);
  int v13 = *(_DWORD *)(v3 + 13872);
  int v14 = *(_DWORD *)(v3 + 13876);
  int v15 = *(_DWORD *)(a1 + 28);
  int v16 = *(_DWORD *)(v4 + 3468);
  int v17 = v15 >> v16;
  int v18 = *(_DWORD *)(a1 + 258564);
  int v19 = *(_DWORD *)(v4 + 4260);
  int v20 = v19 == 1 ? 0 : *(_DWORD *)(v3 + 13884);
  *(void *)(a1 + 968) = *(void *)(v4 + 4224) + 80 * *(void *)(v4 + 4232) * v20;
  if (v19 <= 1)
  {
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 0;
    if (v18 == 2 && *(int *)(v4 + 4264) > 1) {
      uint64_t v21 = 35 * *(void *)(v4 + 4248) * *(int *)(v4 + 4256);
    }
  }
  uint64_t v22 = *(void *)(v4 + 4248);
  uint64_t v23 = *(void *)(v4 + 4240) + 12 * (v21 + 35 * v20 * v22);
  int v24 = *(_DWORD *)(v4 + 4072);
  int v25 = ((_BYTE)v24 * (_BYTE)v17) & 0x10;
  if (v24 >= 1)
  {
    uint64_t v26 = (uint64_t *)(a1 + ((((unint64_t)(v24 * v17) >> 4) & 1) << 7) + 712);
    uint64_t v27 = *(unsigned int *)(v4 + 4072);
    do
    {
      *v26++ = v23;
      v23 += 12 * v22;
      --v27;
    }
    while (v27);
  }
  size_t v28 = (uint64_t *)(a1 + 672 + 8 * (((_BYTE)v24 * (_BYTE)v17) & 0x10));
  *size_t v28 = v23;
  uint64_t v29 = 3 * v22;
  uint64_t v30 = v23 + 12 * v22;
  *(void *)(a1 + 672 + 8 * (v25 | 1u)) = 0;
  unint64_t v31 = (uint64_t *)(a1 + 672 + 8 * (v25 | 2u));
  *unint64_t v31 = v30;
  *(void *)(a1 + 672 + 8 * (v25 | 3u)) = 0;
  uint64_t v32 = (uint64_t *)(a1 + 672 + 8 * (v25 | 4u));
  *uint64_t v32 = v30 + 4 * v29;
  if (v17)
  {
    uint64_t v33 = (void *)(a1 + 8 * (v25 + v24));
    *size_t v28 = v33[84];
    v33[84] = v23;
    uint64_t v34 = *v31;
    *unint64_t v31 = v33[86];
    v33[86] = v34;
    uint64_t v35 = *v32;
    *uint64_t v32 = v33[88];
    v33[88] = v35;
  }
  *(void *)(a1 + 664) = v4 + 4048;
  *(_DWORD *)(a1 + 984) = v13;
  if (v14 >= *(_DWORD *)(v4 + 4060)) {
    int v14 = *(_DWORD *)(v4 + 4060);
  }
  *(_DWORD *)(a1 + 988) = v14;
  *(_DWORD *)(a1 + 976) = v11;
  if (v12 >= *(_DWORD *)(v4 + 4056)) {
    int v12 = *(_DWORD *)(v4 + 4056);
  }
  *(_DWORD *)(a1 + 980) = v12;
  if (*(unsigned char *)(*(void *)(v4 + 24) + 232))
  {
    if (*(_DWORD *)(v6 + 8) < 2u)
    {
      unsigned int v36 = 0;
    }
    else
    {
      uint64_t v37 = 0;
      uint64_t v38 = *(void *)(v3 + 13944) + 56 * ((v15 - v13) >> v16);
      do
      {
        memset_pattern16((void *)(v38 + v37), &unk_224B15B40, 8uLL);
        v37 += 8;
      }
      while (v37 != 56);
      unsigned int v36 = 0;
      unsigned int v5 = v96 == 0;
      uint64_t v2 = v95;
    }
  }
  else
  {
LABEL_21:
    unsigned int v36 = 1;
  }
  unsigned int v39 = v10 >> v5;
  sub_224AD4BD0((_OWORD *)(a1 + 32), v36, *((_DWORD *)v2 + 7));
  if (*((_DWORD *)v2 + 7) == 2)
  {
    int v44 = *(_DWORD *)(v4 + 3456);
    if (*(_DWORD *)(v6 + 24) < 2u) {
      unint64_t v45 = 0;
    }
    else {
      unint64_t v45 = v44 * (unint64_t)*(unsigned __int8 *)(*(void *)(v4 + 24) + 449);
    }
    int v88 = *(_DWORD *)(v3 + 13864);
    *(_DWORD *)(a1 + 24) = v88;
    *(void *)(a1 + 656) = *(void *)(v4 + 4032) + 624 * v45 + 624 * v39 + 624 * v44 * v7;
    if (v88 < *(_DWORD *)(v3 + 13868))
    {
      while (!atomic_load_explicit(*(atomic_uint *volatile *)(v6 + 848), memory_order_acquire)
           && !sub_224AD4C58((int32x2_t *)a1, v5, (unsigned __int16 *)*(&off_2646ED658 + (v96 == 0))))
      {
        int v89 = *(_DWORD *)(a1 + 24);
        if ((v89 & 0x10) != 0 || *(unsigned char *)(*(void *)(v4 + 8) + 392)) {
          *(void *)(a1 + 656) += 624;
        }
        int v90 = v89 + __n;
        *(_DWORD *)(a1 + 24) = v90;
        if (v90 >= *(_DWORD *)(v3 + 13868)) {
          goto LABEL_85;
        }
      }
      return 1;
    }
LABEL_85:
    (*(void (**)(uint64_t))(v4 + 3352))(a1);
    return 0;
  }
  uint64_t v46 = *(void *)(v4 + 3256);
  if (*(_DWORD *)(v46 + 24) >= 2u && *(unsigned char *)(*(void *)(v4 + 24) + 437)) {
    (*(void (**)(uint64_t, void, void, void, void, void))(v46 + 63000))(v4 + 4048, *(unsigned int *)(v3 + 13884), (*(int *)(v3 + 13864) >> 1), (*(int *)(v3 + 13868) >> 1), (*(int *)(a1 + 28) >> 1), ((*(_DWORD *)(a1 + 28) + (int)__n) >> 1));
  }
  double v47 = 0.0;
  *(_OWORD *)(a1 + 8240) = 0u;
  *(_OWORD *)(a1 + 8224) = 0u;
  int v48 = *(int *)(a1 + 28) >> 5;
  int v49 = *(_DWORD *)(v3 + 13864);
  *(_DWORD *)(a1 + 24) = v49;
  int v50 = *(_DWORD *)(v4 + 3456);
  *(void *)(a1 + 656) = *(void *)(v4 + 4032) + 624 * v39 + 624 * v50 * v7;
  void *v2 = *(void *)(v4 + 4440) + 1348 * v50 * v48 + 1348 * v39;
  if (v49 < *(_DWORD *)(v3 + 13868))
  {
    uint64_t v94 = v3;
    uint64_t v93 = v6;
    while (!atomic_load_explicit(*(atomic_uint *volatile *)(v6 + 848), memory_order_acquire))
    {
      uint64_t v51 = *v2;
      if (v96)
      {
        v2[2] = v51 + 1280;
        *(unsigned char *)(v51 + 1280) = -1;
        *(unsigned char *)(v2[2] + 1) = -1;
        *(unsigned char *)(v2[2] + 2) = -1;
        uint64_t v52 = (unsigned char *)(v2[2] + 3);
      }
      else
      {
        uint64_t v52 = (unsigned char *)(v51 + ((*(_DWORD *)(a1 + 28) >> 3) & 2 | (*(_DWORD *)(a1 + 24) >> 4) & 1u) + 1280);
        v2[2] = v52;
      }
      uint64_t v53 = 0;
      *uint64_t v52 = -1;
      do
      {
        if ((*(_DWORD *)(v4 + 5352) >> v53))
        {
          if (v53)
          {
            int v54 = *(_DWORD *)(v4 + 2168);
            int v55 = v54 == 1;
            int v56 = v54 != 3;
          }
          else
          {
            int v55 = 0;
            int v56 = 0;
          }
          uint64_t v57 = *(void *)(v4 + 24);
          uint64_t v58 = v53 ? v57 + 1 : *(void *)(v4 + 24);
          char v59 = *(unsigned char *)(v58 + 880);
          int v60 = *(_DWORD *)(a1 + 28);
          int v61 = (4 * v60) >> v55;
          int v62 = 1 << v59;
          int v63 = (1 << v59) - 1;
          if ((v61 & v63) == 0 && (!v61 || v61 + (v62 >> 1) <= (*(_DWORD *)(v4 + 2164) + v55) >> v55))
          {
            int v64 = v62 >> 1;
            int v65 = *(_DWORD *)(v57 + 4 * v53 + 868);
            if (*(_DWORD *)(v57 + 236) == *(_DWORD *)(v57 + 240))
            {
              int v66 = *(_DWORD *)(a1 + 24);
              int v67 = (4 * v66) >> v56;
              if ((v67 & v63) == 0 && (!v67 || v67 + v64 <= (*(_DWORD *)(v4 + 2160) + v56) >> v56))
              {
                int v68 = *(_DWORD *)(v4 + 3476) * (v60 >> 5) + (v66 >> 5);
                uint64_t v69 = (v60 >> 3) & 2 | (v66 >> 4) & 1;
                sub_224AD5830(*(int16x4_t **)(a1 + 16), *(void *)(v4 + 4448) + 108 * v68 + 36 * v53 + (v69 | (8 * v69)), v53, v65, v47, v40, v41, v42, v43);
              }
            }
            else
            {
              int v70 = (((*(_DWORD *)(v4 + 2432) + v56) >> v56) + v64) >> v59;
              if (v70 <= 1) {
                int v70 = 1;
              }
              int v71 = *(unsigned __int8 *)(v57 + 416);
              int v72 = (8 << v59) - 1;
              int v73 = *(_DWORD *)(a1 + 24);
              int v74 = (((4 * v73 * v71) >> v56) + v72) >> (v59 + 3);
              int v75 = (((4 * v71 * (v73 + (int)__n)) >> v56) + v72) >> (v59 + 3);
              if (v75 >= v70) {
                int v76 = v70;
              }
              else {
                int v76 = v75;
              }
              if (v74 < v76)
              {
                char v77 = v59 + v56;
                do
                {
                  int v78 = *(_DWORD *)(a1 + 28);
                  int v79 = (v78 >> 5) * *(_DWORD *)(v4 + 3476) + (v74 << v77 >> 7);
                  uint64_t v80 = (v78 >> 3) & 2 | ((v74 << v77) >> 6) & 1;
                  sub_224AD5830(*(int16x4_t **)(a1 + 16), *(void *)(v4 + 4448) + 108 * v79 + 36 * v53 + (v80 | (8 * v80)), v53, v65, v47, v40, v41, v42, v43);
                  ++v74;
                }
                while (v76 != v74);
              }
            }
          }
        }
        ++v53;
      }
      while (v53 != 3);
      if (sub_224AD4C58((int32x2_t *)a1, v96 == 0, (unsigned __int16 *)*(&off_2646ED658 + (v96 == 0)))) {
        break;
      }
      int v81 = *(_DWORD *)(a1 + 24);
      uint64_t v2 = v95;
      if ((v81 & 0x10) != 0 || *(unsigned char *)(*(void *)(v4 + 8) + 392))
      {
        *(void *)(a1 + 656) += 624;
        *v95 += 1348;
      }
      int v82 = v81 + __n;
      *(_DWORD *)(a1 + 24) = v82;
      uint64_t v6 = v93;
      uint64_t v3 = v94;
      if (v82 >= *(_DWORD *)(v94 + 13868)) {
        goto LABEL_69;
      }
    }
    return 1;
  }
LABEL_69:
  if (*(unsigned char *)(*(void *)(v4 + 8) + 401))
  {
    uint64_t v83 = *(void *)(v4 + 3256);
    if (*(_DWORD *)(v83 + 24) >= 2u && (*(unsigned char *)(*(void *)(v4 + 24) + 232) & 1) != 0) {
      (*(void (**)(unint64_t))(v83 + 63008))(*(void *)(*(void *)(a1 + 664) + 160)+ 5 * *(void *)(*(void *)(a1 + 664) + 184) * ((unint64_t)*(unsigned int *)(a1 + 28) >> 1));
    }
  }
  if (*((_DWORD *)v2 + 7) != 1) {
    (*(void (**)(uint64_t))(v4 + 3352))(a1);
  }
  signed int v84 = (*(_DWORD *)(v4 + 3452) + 31) & 0xFFFFFFE0;
  memcpy((void *)(*(void *)(v4 + 5160) + *(_DWORD *)(a1 + 28) + v84 * (int)v8), (const void *)(a1 + 32 + (*(_DWORD *)(a1 + 28) & 0x10) + 480), __n);
  char v85 = *(_DWORD *)(v4 + 2168) == 1;
  memcpy((void *)(*(void *)(v4 + 5168) + (*(int *)(a1 + 28) >> v85) + (v84 >> v85) * (int)v8), (const void *)(a1 + 32 + ((*(_DWORD *)(a1 + 28) & 0x10u) >> v85) + 512), (int)__n >> v85);
  int v86 = *(_DWORD *)(v3 + 13852);
  if (v86 < -14) {
    return 1;
  }
  if (!*(_DWORD *)(v6 + 63072)
    || (*(int *)(a1 + 28) >> *(_DWORD *)(v4 + 3468)) + 1 < *(unsigned __int16 *)(*(void *)(v4 + 24)
                                                                               + 2 * (v7 + 1)
                                                                               + 580))
  {
    return 0;
  }
  int v91 = (unsigned char *)(*(void *)(v3 + 13824) + ((-7 - v86) >> 3));
  uint64_t result = 1;
  if (((2 * (0x80u >> ((1 - v86) & 7)) - 1) & *(v91 - 1)) == 0x80u >> ((1 - v86) & 7))
  {
    unint64_t v92 = *(void *)(v3 + 13832);
    if ((unint64_t)v91 < v92)
    {
      while (!*v91)
      {
        uint64_t result = 0;
        if ((unint64_t)++v91 >= v92) {
          return result;
        }
      }
      return 1;
    }
    return 0;
  }
  return result;
}

_OWORD *sub_224AD4BD0(_OWORD *result, unsigned int a2, int a3)
{
  int8x16_t v3 = vdupq_n_s8(a2);
  result[14] = v3;
  result[15] = v3;
  result[35] = 0u;
  result[36] = 0u;
  if (a2)
  {
    *uint64_t result = 0uLL;
    result[1] = 0uLL;
  }
  if (a3 != 2)
  {
    result[10] = 0uLL;
    result[11] = 0uLL;
    result[12] = 0uLL;
    result[13] = 0uLL;
    *(void *)&long long v4 = 0x202020202020202;
    *((void *)&v4 + 1) = 0x202020202020202;
    result[30] = v4;
    result[31] = v4;
    *(void *)&long long v4 = 0x101010101010101;
    *((void *)&v4 + 1) = 0x101010101010101;
    result[32] = v4;
    result[33] = v4;
    result[34] = 0uLL;
    *(void *)&long long v5 = -1;
    *((void *)&v5 + 1) = -1;
    result[26] = v5;
    result[27] = v5;
    *(void *)&long long v6 = 0x404040404040404;
    *((void *)&v6 + 1) = 0x404040404040404;
    result[28] = v6;
    result[29] = v6;
    if (!a2)
    {
      result[20] = v5;
      result[21] = v5;
      result[18] = v5;
      result[19] = v5;
      result[16] = 0uLL;
      result[17] = 0uLL;
      *uint64_t result = 0uLL;
      result[1] = 0uLL;
    }
    *(void *)&long long v7 = 0x4040404040404040;
    *((void *)&v7 + 1) = 0x4040404040404040;
    result[6] = v7;
    result[7] = v7;
    result[4] = v7;
    result[5] = v7;
    result[2] = v7;
    result[3] = v7;
    *(void *)&long long v7 = 0x303030303030303;
    *((void *)&v7 + 1) = 0x303030303030303;
    result[22] = v7;
    result[23] = v7;
    result[24] = v7;
    result[25] = v7;
    result[8] = 0uLL;
    result[9] = 0uLL;
    result[37] = 0uLL;
    result[38] = 0uLL;
  }
  return result;
}

uint64_t sub_224AD4C58(int32x2_t *a1, unsigned int a2, unsigned __int16 *a3)
{
  unsigned int v4 = a2;
  long long v6 = a1 + 32320;
  int32x2_t v7 = a1[1];
  int v8 = *(_DWORD *)(*(void *)&v7 + 3448);
  unint64_t v9 = a1[3].u32[0];
  unint64_t v10 = a1[3].u32[1];
  uint64_t v11 = (int)v9;
  int v12 = *(_DWORD *)(*(void *)&v7 + 3452);
  unsigned int v13 = 0x10u >> a2;
  int v14 = v9 + (0x10u >> a2);
  int v15 = v10 + (0x10u >> a2);
  BOOL v16 = v12 > v15;
  BOOL v18 = v8 <= v14;
  BOOL v17 = v8 > v14;
  BOOL v18 = v18 && v12 <= v15;
  if (v18)
  {
    do
    {
      unsigned int v13 = 8u >> v4++;
      a3 = (unsigned __int16 *)((char *)a3 + a3[4]);
      BOOL v16 = v12 > (int)(v10 + v13);
      BOOL v17 = v8 > (int)(v9 + v13);
    }
    while (v8 <= (int)(v9 + v13) && v12 <= (int)(v10 + v13));
  }
  if (a1[32320].i32[1] == 2)
  {
    if (v17 && v16)
    {
      uint64_t v20 = *(void *)(*(void *)&v7 + 4360);
      uint64_t v21 = v11 + *(void *)(*(void *)&v7 + 3432) * (int)v10;
      if (v4 == *(unsigned __int8 *)(v20 + 32 * v21))
      {
        LODWORD(v22) = 0;
        LODWORD(v23) = 0;
        int v24 = *(unsigned __int8 *)(v20 + 32 * v21 + 2);
        goto LABEL_18;
      }
      LODWORD(v23) = 0;
      LODWORD(v22) = 0;
LABEL_31:
      if (v4 == 4)
      {
        if (!sub_224AD5AC0())
        {
          __int32 v28 = v6->i32[0];
          ++a1[3].i32[0];
          if (!sub_224AD5AC0())
          {
            a1[3] = vadd_s32(a1[3], (int32x2_t)0x1FFFFFFFFLL);
            if (!sub_224AD5AC0())
            {
              ++a1[3].i32[0];
              v6->i32[0] = v28;
              if (!sub_224AD5AC0())
              {
                char v26 = 0;
                int32x2_t v29 = vadd_s32(a1[3], (int32x2_t)-1);
LABEL_103:
                a1[3] = v29;
                goto LABEL_42;
              }
            }
          }
        }
        return 0xFFFFFFFFLL;
      }
      if (!sub_224AD4C58(a1, v4 + 1, (char *)a3 + a3[4]))
      {
        a1[3].i32[0] += v13;
        if (!sub_224AD4C58(a1, v4 + 1, (char *)a3 + a3[5]))
        {
          unsigned __int32 v31 = a1[3].i32[1] + v13;
          a1[3].i32[0] -= v13;
          a1[3].i32[1] = v31;
          if (!sub_224AD4C58(a1, v4 + 1, (char *)a3 + a3[6]))
          {
            a1[3].i32[0] += v13;
            if (!sub_224AD4C58(a1, v4 + 1, (char *)a3 + a3[7]))
            {
              char v26 = 0;
              int32x2_t v29 = vsub_s32(a1[3], vdup_n_s32(v13));
              goto LABEL_103;
            }
          }
        }
      }
      return 1;
    }
    LODWORD(v23) = 0;
    LODWORD(v22) = 0;
    if (v17)
    {
      if (v4 != *(unsigned __int8 *)(*(void *)(*(void *)&v7 + 4360)
                                    + 32 * ((int)v9 + *(void *)(*(void *)&v7 + 3432) * (int)v10)))
        goto LABEL_23;
      goto LABEL_28;
    }
    BOOL v30 = v4 != *(unsigned __int8 *)(*(void *)(*(void *)&v7 + 4360)
                                   + 32 * (*(void *)(*(void *)&v7 + 3432) * (int)v10 + (int)v9));
LABEL_38:
    if (!v30)
    {
      uint64_t v25 = 2;
      if (!sub_224AD5AC0())
      {
LABEL_52:
        char v26 = 1;
        goto LABEL_53;
      }
      return 0xFFFFFFFFLL;
    }
    if (sub_224AD4C58(a1, v4 + 1, (char *)a3 + a3[4])) {
      return 1;
    }
    a1[3].i32[1] += v13;
    if (sub_224AD4C58(a1, v4 + 1, (char *)a3 + a3[6])) {
      return 1;
    }
    char v26 = 0;
    a1[3].i32[1] -= v13;
LABEL_42:
    uint64_t v25 = 3;
    goto LABEL_53;
  }
  uint64_t v22 = (v9 >> 1) & 0xF;
  uint64_t v23 = (v10 >> 1) & 0xF;
  if (v17 && v16)
  {
    sub_224AADBF0(*(void *)&a1[2] + 13824, *(void *)&a1[2]+ ((unint64_t)v4 << 7)+ 32* ((*(unsigned __int8 *)(*(void *)&a1[82] + v22 + 544) >> (4 - v4)) & 1 | (2 * ((a1[72].u8[v23] >> (4 - v4)) & 1u)))+ 1248, byte_224B19559[v4]);
    if (*(_DWORD *)(*(void *)&v7 + 2168) != 2 || (v24 - 2) >= 8 || ((0xB1u >> (v24 - 2)) & 1) == 0)
    {
LABEL_18:
      switch(v24)
      {
        case 1:
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[1] += v13;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[1] -= v13;
          char v26 = 1;
          uint64_t v25 = 1;
          goto LABEL_53;
        case 2:
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[0] += v13;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[0] -= v13;
          char v26 = 1;
          uint64_t v25 = 2;
          goto LABEL_53;
        case 3:
          goto LABEL_31;
        case 4:
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[0] += v13;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          unsigned __int32 v35 = a1[3].i32[1] + v13;
          a1[3].i32[0] -= v13;
          a1[3].i32[1] = v35;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[1] -= v13;
          char v26 = 1;
          uint64_t v25 = 4;
          goto LABEL_53;
        case 5:
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[1] += v13;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[0] += v13;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3] = vsub_s32(a1[3], vdup_n_s32(v13));
          char v26 = 1;
          uint64_t v25 = 5;
          goto LABEL_53;
        case 6:
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[1] += v13;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          unsigned __int32 v36 = a1[3].i32[1] - v13;
          a1[3].i32[0] += v13;
          a1[3].i32[1] = v36;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[0] -= v13;
          char v26 = 1;
          uint64_t v25 = 6;
          goto LABEL_53;
        case 7:
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[0] += v13;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[1] += v13;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3] = vsub_s32(a1[3], vdup_n_s32(v13));
          char v26 = 1;
          uint64_t v25 = 7;
          goto LABEL_53;
        case 8:
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          unsigned int v37 = 8u >> v4;
          a1[3].i32[1] += 8u >> v4;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[1] += v37;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          signed __int32 v38 = a1[3].i32[1] + v37;
          a1[3].i32[1] = v38;
          if (v38 >= *(_DWORD *)(*(void *)&v7 + 3452)) {
            goto LABEL_87;
          }
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          signed __int32 v38 = a1[3].i32[1];
LABEL_87:
          a1[3].i32[1] = v38 - ((3 * v13) >> 1);
          char v26 = 1;
          uint64_t v25 = 8;
          break;
        case 9:
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          unsigned int v39 = 8u >> v4;
          a1[3].i32[0] += 8u >> v4;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          a1[3].i32[0] += v39;
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          signed __int32 v45 = a1[3].i32[0] + v39;
          a1[3].i32[0] = v45;
          if (v45 >= *(_DWORD *)(*(void *)&v7 + 3448)) {
            goto LABEL_101;
          }
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          signed __int32 v45 = a1[3].i32[0];
LABEL_101:
          a1[3].i32[0] = v45 - ((3 * v13) >> 1);
          char v26 = 1;
          uint64_t v25 = 9;
          break;
        default:
          if (sub_224AD5AC0()) {
            return 0xFFFFFFFFLL;
          }
          uint64_t v25 = 0;
          goto LABEL_52;
      }
      goto LABEL_53;
    }
    return 1;
  }
  if (!v17)
  {
    sub_224AADEBC();
    if (*(_DWORD *)(*(void *)&v7 + 2168) == 2 && !v30) {
      return 1;
    }
    goto LABEL_38;
  }
  sub_224AADEBC();
  if (v27)
  {
LABEL_23:
    if (sub_224AD4C58(a1, v4 + 1, (char *)a3 + a3[4])) {
      return 1;
    }
    a1[3].i32[0] += v13;
    if (sub_224AD4C58(a1, v4 + 1, (char *)a3 + a3[5])) {
      return 1;
    }
    char v26 = 0;
    a1[3].i32[0] -= v13;
    goto LABEL_42;
  }
LABEL_28:
  uint64_t v25 = 1;
  if (sub_224AD5AC0()) {
    return 0xFFFFFFFFLL;
  }
  char v26 = 1;
LABEL_53:
  uint64_t result = 0;
  char v33 = v26 ^ 1;
  if (v4 == 4) {
    char v33 = 0;
  }
  if ((v33 & 1) == 0 && v6->i32[1] != 2)
  {
    uint64_t result = 0;
    switch(v13)
    {
      case 1u:
        uint64_t result = 0;
        uint64_t v34 = (char *)&unk_224B17752 + 10 * v4 + v25;
        *(unsigned char *)(*(void *)&a1[82] + v22 + 544) = *v34;
        a1[72].i8[v23] = v34[50];
        break;
      case 2u:
        uint64_t result = 0;
        double v42 = (unsigned __int8 *)&unk_224B17752 + 10 * v4 + v25;
        *(_WORD *)(*(void *)&a1[82] + v22 + 544) = *v42 | (*v42 << 8);
        *(__int16 *)((char *)a1[72].i16 + v23) = v42[50] | (v42[50] << 8);
        break;
      case 3u:
      case 5u:
      case 6u:
      case 7u:
        return result;
      case 4u:
        uint64_t result = 0;
        uint16x8_t v43 = (unsigned __int8 *)&unk_224B17752 + 10 * v4 + v25;
        *(_DWORD *)(*(void *)&a1[82] + v22 + 544) = 16843009 * *v43;
        *(__int32 *)((char *)a1[72].i32 + v23) = 16843009 * v43[50];
        break;
      case 8u:
        uint64_t result = 0;
        int v44 = (unsigned __int8 *)&unk_224B17752 + 10 * v4 + v25;
        *(void *)(*(void *)&a1[82] + v22 + 544) = 0x101010101010101 * *v44;
        *(int32x2_t *)((char *)&a1[72] + v23) = (int32x2_t)(0x101010101010101 * v44[50]);
        break;
      default:
        if (v13 == 16)
        {
          uint64_t result = 0;
          double v40 = (unsigned __int8 *)&unk_224B17752 + 10 * v4 + v25;
          uint64_t v41 = 0x101010101010101 * *v40;
          *(void *)(*(void *)&a1[82] + v22 + 544) = v41;
          *(void *)(*(void *)&a1[82] + (v22 + 8) + 544) = v41;
          *(int64x2_t *)&a1[72].i8[v23] = vdupq_n_s64(0x101010101010101 * (unint64_t)v40[50]);
        }
        break;
    }
  }
  return result;
}

void sub_224AD5830(int16x4_t *a1, uint64_t a2, unsigned int a3, int a4, double a5, double a6, double a7, double a8, uint16x8_t a9)
{
  uint64_t v12 = (uint64_t)&a1[1728];
  if (a4 == 1)
  {
    int v13 = sub_224AAD9A0((uint64_t)&a1[1728], a1 + 672, 2, a5, a6, a7, a8, a9);
    if (v13) {
      char v14 = v13 + 1;
    }
    else {
      char v14 = 0;
    }
  }
  else
  {
    char v14 = a4;
    if (a4 == 2) {
      int v15 = (unsigned int *)&a1[673];
    }
    else {
      int v15 = (unsigned int *)&a1[673] + 1;
    }
    sub_224AADEFC((uint64_t)&a1[1728], v15);
    if (!v16)
    {
      *(unsigned char *)a2 = 0;
      return;
    }
  }
  *(unsigned char *)a2 = v14;
  if (v14 == 2)
  {
    if (a3) {
      char v24 = 0;
    }
    else {
      char v24 = sub_224AE86F8(v12, *(char *)(*(void *)&a1[1823] + 4) + 5, 16, 1) - 5;
    }
    *(unsigned char *)(a2 + 4) = v24;
    uint64_t v30 = (uint64_t)&a1[a3 + 1823];
    *(unsigned char *)(a2 + 5) = sub_224AE86F8(v12, *(char *)(*(void *)v30 + 5) + 23, 32, 2) - 23;
    *(unsigned char *)(a2 + 6) = sub_224AE86F8(v12, *(char *)(*(void *)v30 + 6) + 17, 64, 3) - 17;
    if (a3) {
      char v31 = 0;
    }
    else {
      char v31 = sub_224AE86F8(v12, *(char *)(*(void *)v30 + 1) + 5, 16, 1) - 5;
    }
    *(unsigned char *)(a2 + 1) = v31;
    *(unsigned char *)(a2 + 2) = sub_224AE86F8(v12, *(char *)(*(void *)v30 + 2) + 23, 32, 2) - 23;
    *(unsigned char *)(a2 + 3) = sub_224AE86F8(v12, *(char *)(*(void *)v30 + 3) + 17, 64, 3) - 17;
    *(_WORD *)(a2 + 7) = *(_WORD *)(*(void *)v30 + 7);
    *(void *)uint64_t v30 = a2;
  }
  else if (v14 == 3)
  {
    unsigned int v17 = 0;
    int v18 = -4;
    do
    {
      sub_224AADE84();
      unsigned int v17 = v19 | (2 * v17);
    }
    while (!__CFADD__(v18++, 1));
    uint64_t v21 = (__int16 *)((char *)&unk_224B28C80 + 4 * v17);
    *(unsigned char *)a2 += v17;
    __int16 v22 = *v21;
    if (*v21) {
      LOBYTE(v22) = sub_224AE86F8(v12, *(char *)(*(void *)&a1[a3 + 1823] + 7) + 96, 128, 4) - 96;
    }
    *(unsigned char *)(a2 + 7) = v22;
    if (v21[1]) {
      char v23 = sub_224AE86F8(v12, *(char *)(*(void *)&a1[a3 + 1823] + 8) + 32, 128, 4) - 32;
    }
    else {
      char v23 = 95;
    }
    *(unsigned char *)(a2 + 8) = v23;
    uint64_t v25 = &a1[a3];
    int16x4_t v26 = v25[1823];
    __int16 v27 = *(_WORD *)(*(void *)&v26 + 4);
    *(unsigned char *)(a2 + 6) = *(unsigned char *)(*(void *)&v26 + 6);
    *(_WORD *)(a2 + 4) = v27;
    int16x4_t v28 = v25[1823];
    __int16 v29 = *(_WORD *)(*(void *)&v28 + 1);
    *(unsigned char *)(a2 + 3) = *(unsigned char *)(*(void *)&v28 + 3);
    *(_WORD *)(a2 + 1) = v29;
    v25[1823] = (int16x4_t)a2;
  }
}

uint64_t sub_224AD5AC0()
{
  uint64_t v0 = MEMORY[0x270FA5388]();
  unsigned int v1027 = v4;
  uint64_t v1047 = *MEMORY[0x263EF8340];
  uint64_t v9 = v0 + 258496;
  uint64_t v11 = *(void *)(v0 + 8);
  unint64_t v10 = *(int16x4_t **)(v0 + 16);
  int v12 = *(_DWORD *)(v0 + 258564);
  uint64_t v1035 = v0;
  signed int v13 = *(_DWORD *)(v0 + 28);
  if (v12)
  {
    uint64_t v14 = *(int *)(v0 + 24);
    int v15 = (_OWORD *)(*(void *)(v11 + 4360) + 32 * (v14 + *(void *)(v11 + 3432) * v13));
  }
  else
  {
    LODWORD(v14) = *(_DWORD *)(v0 + 24);
    int v15 = v1038;
  }
  unsigned int v1034 = v2;
  unint64_t v20 = (unint64_t)&byte_224B28CC0[4 * v2];
  uint64_t v1033 = v14 & 0x1F;
  uint64_t v16 = v13 & 0x1F;
  int v17 = *(_DWORD *)(v11 + 2168);
  unint64_t v18 = *(unsigned __int8 *)v20;
  v1025 = (unsigned __int8 *)v20;
  unint64_t v19 = *(unsigned __int8 *)(v20 + 1);
  LODWORD(v20) = *(_DWORD *)(v11 + 3448) - v14;
  if ((int)v18 >= (int)v20) {
    unint64_t v20 = v20;
  }
  else {
    unint64_t v20 = v18;
  }
  unint64_t v1020 = v20;
  int v21 = *(_DWORD *)(v11 + 3452) - v13;
  if ((int)v19 < v21) {
    int v21 = v19;
  }
  int v1015 = v21;
  unsigned int v22 = v17 != 3;
  if (v17 == 3) {
    unsigned int v23 = v18;
  }
  else {
    unsigned int v23 = v18 + 1;
  }
  unsigned int v24 = v17 == 1;
  unsigned int v1021 = v16 >> v24;
  if (v17 == 1) {
    unsigned int v25 = v19 + 1;
  }
  else {
    unsigned int v25 = v19;
  }
  int v1016 = v10[1733].i32[0];
  BOOL v26 = (int)v14 > v1016;
  int v1012 = v10[1734].i32[0];
  int v1007 = *(_DWORD *)(v11 + 2168);
  signed int v1024 = v14;
  if (v17 && (v18 > v22 || (v14 & 1) != 0))
  {
    if (v19 <= v24) {
      int v27 = v13 & 1;
    }
    else {
      int v27 = 1;
    }
    unsigned int v1029 = v27;
  }
  else
  {
    unsigned int v1029 = 0;
  }
  int v28 = v23 >> v22;
  signed int v1019 = v25 >> v24;
  unsigned int v1022 = v1033 >> v22;
  double v29 = 0.0;
  memset(v1038, 0, sizeof(v1038));
  if (v12 != 2)
  {
    v1030 = (unsigned __int8 *)(v13 & 0x1F);
    v1031 = v10;
    int v1005 = v17 == 1;
    *(unsigned char *)int v15 = v1;
    *((unsigned char *)v15 + 2) = v3;
    *((unsigned char *)v15 + 1) = v2;
    uint64_t v34 = *(unsigned char **)(v11 + 24);
    uint64_t v1032 = v11;
    unint64_t v1026 = v18;
    int v987 = v17 != 3;
    BOOL v988 = v13 > v1012;
    int v991 = v26;
    if (v34[722])
    {
      if (!v34[723])
      {
        uint64_t v45 = *(void *)(v11 + 2824);
        if (v45)
        {
          uint64_t v46 = *(void *)(v11 + 3432);
          uint64_t v47 = v45 + v46 * v13 + v1024;
          LODWORD(v38) = 8;
          int v48 = v1015;
          do
          {
            if ((int)v1020 >= 1)
            {
              for (uint64_t i = 0; i != v1020; ++i)
              {
                if ((int)v38 >= *(unsigned __int8 *)(v47 + i)) {
                  LODWORD(v38) = *(unsigned __int8 *)(v47 + i);
                }
              }
            }
            BOOL v43 = __OFSUB__(v48--, 1);
            if ((v48 < 0) ^ v43 | (v48 == 0)) {
              break;
            }
            v47 += v46;
          }
          while (v38);
        }
        else
        {
          LOBYTE(v38) = 0;
        }
        int v1006 = 0;
        goto LABEL_149;
      }
      if (v34[806])
      {
        signed int v35 = v13;
        signed int v36 = v1024;
        if (v34[724])
        {
          sub_224AADEFC((uint64_t)&v10[1728], (unsigned int *)&v10[754]+ *(unsigned __int8 *)(v1035 + (v13 & 0x1F) + 160)+ (unint64_t)*(unsigned __int8 *)(*(void *)(v1035 + 656) + v1033 + 128)+ 1);
          if (v37)
          {
            int v1006 = v37;
            uint64_t v38 = *(void *)(v11 + 2824);
            if (!v38)
            {
              *((unsigned char *)v15 + 4) = 0;
              uint64_t v34 = *(unsigned char **)(v11 + 24);
              unint64_t v10 = v1031;
              goto LABEL_150;
            }
            uint64_t v39 = *(void *)(v11 + 3432);
            uint64_t v34 = *(unsigned char **)(v11 + 24);
            uint64_t v40 = v38 + *(int *)(v1035 + 24) + v39 * *(int *)(v1035 + 28);
            LODWORD(v38) = 8;
            int v41 = v1015;
            unint64_t v10 = v1031;
            do
            {
              if ((int)v1020 >= 1)
              {
                for (uint64_t j = 0; j != v1020; ++j)
                {
                  if ((int)v38 >= *(unsigned __int8 *)(v40 + j)) {
                    LODWORD(v38) = *(unsigned __int8 *)(v40 + j);
                  }
                }
              }
              BOOL v43 = __OFSUB__(v41--, 1);
              if ((v41 < 0) ^ v43 | (v41 == 0)) {
                break;
              }
              v40 += v39;
            }
            while (v38);
LABEL_149:
            *((unsigned char *)v15 + 4) = v38;
LABEL_150:
            unint64_t v105 = v34 + 726;
            int v44 = &v34[10 * v38 + 726];
            if (v44[8]
              || v105[10 * v38 + 6] != 255
              || v105[10 * v38 + 7])
            {
              *((unsigned char *)v15 + 5) = 0;
              int v63 = (char *)v15 + 5;
              unsigned int v61 = v13 & 0x1F;
              goto LABEL_154;
            }
            char v54 = 0;
LABEL_66:
            if ((int)v1026 >= (int)v19) {
              unsigned int v55 = v19;
            }
            else {
              unsigned int v55 = v1026;
            }
            if (v34[890] && v55 > 1)
            {
              uint64_t v56 = v9;
              signed int v57 = v13;
              uint64_t v58 = (_OWORD *)v19;
              int v59 = v28;
              int v60 = v44;
              unsigned int v61 = v1030;
              sub_224AADEFC((uint64_t)&v10[1728], (unsigned int *)&v10[753]+ *(unsigned __int8 *)(v1035 + v1030 + 224)+ (unint64_t)*(unsigned __int8 *)(*(void *)(v1035 + 656) + v1033 + 192));
              *((unsigned char *)v15 + 5) = v62;
              int v63 = (char *)v15 + 5;
              if (v62)
              {
                int v64 = 1;
                int v44 = v60;
                int v28 = v59;
                unint64_t v19 = (unint64_t)v58;
                signed int v13 = v57;
                uint64_t v9 = v56;
                uint64_t v11 = v1032;
                goto LABEL_157;
              }
              unint64_t v10 = v1031;
              uint64_t v11 = v1032;
              int v44 = v60;
              int v28 = v59;
              unint64_t v19 = (unint64_t)v58;
              signed int v13 = v57;
              uint64_t v9 = v56;
              if (v54) {
                goto LABEL_156;
              }
            }
            else
            {
              *((unsigned char *)v15 + 5) = 0;
              int v63 = (char *)v15 + 5;
              unsigned int v61 = v13 & 0x1F;
              if (v54) {
                goto LABEL_156;
              }
            }
LABEL_154:
            if (v44[7])
            {
              int v64 = 1;
              goto LABEL_157;
            }
LABEL_156:
            uint64_t v106 = (unsigned int *)v10
                 + *(unsigned __int8 *)(v1035 + v61 + 192)
                 + (unint64_t)*(unsigned __int8 *)(*(void *)(v1035 + 656) + v1033 + 160);
            uint64_t v107 = v44;
            int v108 = v63;
            sub_224AADEFC((uint64_t)&v10[1728], v106 + 1503);
            int v63 = v108;
            int v44 = v107;
            int v64 = v109;
LABEL_157:
            *((unsigned char *)v15 + 6) = v64;
            uint64_t v110 = *(unsigned char **)(v11 + 24);
            uint64_t v1023 = v9;
            if (v110[722])
            {
              uint64_t v111 = v1031;
              if (v110[723] && !v110[806])
              {
                if (!v64 && v110[724])
                {
                  unsigned int v134 = v63;
                  sub_224AADEFC((uint64_t)&v1031[1728], (unsigned int *)&v1031[754]+ *(unsigned __int8 *)(v1035 + v1030 + 160)+ (unint64_t)*(unsigned __int8 *)(*(void *)(v1035 + 656) + v1033 + 128)+ 1);
                  int v1006 = v135;
                  if (v135)
                  {
                    uint64_t v136 = *(void *)(v11 + 2824);
                    uint64_t v111 = v1031;
                    int v63 = v134;
                    if (v136)
                    {
                      uint64_t v137 = *(void *)(v11 + 3432);
                      uint64_t v138 = v136 + *(int *)(v1035 + 24) + v137 * *(int *)(v1035 + 28);
                      int v139 = 8;
                      int v140 = v1015;
                      do
                      {
                        if ((int)v1020 >= 1)
                        {
                          for (uint64_t k = 0; k != v1020; ++k)
                          {
                            if (v139 >= *(unsigned __int8 *)(v138 + k)) {
                              int v139 = *(unsigned __int8 *)(v138 + k);
                            }
                          }
                        }
                        BOOL v43 = __OFSUB__(v140--, 1);
                        if ((v140 < 0) ^ v43 | (v140 == 0)) {
                          break;
                        }
                        v138 += v137;
                      }
                      while (v139);
                      LODWORD(v136) = v139;
                    }
                    goto LABEL_250;
                  }
                  int v1006 = 0;
                  uint64_t v111 = v1031;
                  int v63 = v134;
                }
                uint64_t v112 = *(void *)(v11 + 3432);
                uint64_t v113 = *(void *)(v11 + 2816) + *(int *)(v1035 + 24) + v112 * *(int *)(v1035 + 28);
                if (v1024 <= v1016 || v13 <= v1012)
                {
                  if (v1024 <= v1016)
                  {
                    uint64_t v124 = 0;
                    if (v13 <= v1012) {
                      unsigned int v123 = 0;
                    }
                    else {
                      unsigned int v123 = *(unsigned __int8 *)(v113 - v112);
                    }
                  }
                  else
                  {
                    uint64_t v124 = 0;
                    unsigned int v123 = *(unsigned __int8 *)(v113 - 1);
                  }
                }
                else
                {
                  unsigned int v114 = *(unsigned __int8 *)(v113 - 1);
                  char v115 = (unsigned __int8 *)(v113 - v112);
                  int v116 = *(unsigned __int8 *)(v113 + ~v112);
                  unsigned int v117 = *v115;
                  BOOL v118 = v114 == v117;
                  BOOL v119 = v116 == v114;
                  BOOL v120 = v116 == v114 || v114 == v117;
                  BOOL v121 = v117 == v116;
                  uint64_t v122 = v117 == v116 || v120;
                  if (v121) {
                    unsigned int v123 = v117;
                  }
                  else {
                    unsigned int v123 = v114;
                  }
                  uint64_t v124 = 2;
                  if (!v118 || !v119) {
                    uint64_t v124 = v122;
                  }
                }
                if (*((unsigned char *)v15 + 6)
                  || (uint64_t v169 = v63,
                      sub_224AADB30((uint64_t)&v111[1728], (int8x16_t *)&v111[2 * v124 + 438], 7),
                      unsigned int v170 = *(char *)(*(void *)(v11 + 24) + 807),
                      unsigned __int8 v172 = sub_224ADD320(v171, v123, v170 + 1),
                      int v63 = v169,
                      uint64_t v111 = v1031,
                      unsigned int v123 = v172,
                      v172 <= v170))
                {
                  if (v123 <= 7) {
                    LODWORD(v136) = v123;
                  }
                  else {
                    LODWORD(v136) = 0;
                  }
                  *((unsigned char *)v15 + 4) = v136;
                  uint64_t v9 = v1023;
LABEL_255:
                  uint64_t v110 = *(unsigned char **)(v11 + 24);
                  int v44 = &v110[10 * v136 + 726];
                  if (*((unsigned char *)v15 + 6)) {
                    goto LABEL_256;
                  }
LABEL_177:
                  if (*(unsigned char *)(*(void *)(v11 + 8) + 392)) {
                    unsigned int v125 = (*(_DWORD *)(v1035 + 28) >> 3) & 2 | (*(_DWORD *)(v1035 + 24) >> 4) & 1;
                  }
                  else {
                    unsigned int v125 = 0;
                  }
                  uint64_t v126 = *(void *)(v9 + 56);
                  if (*(unsigned __int8 *)(v126 + v125) == 255)
                  {
                    uint64_t v127 = v125;
                    int v128 = v110[848];
                    if (v110[848])
                    {
                      signed int __b = v13;
                      v997 = v63;
                      uint64_t v129 = (_OWORD *)v19;
                      int v130 = v28;
                      uint64_t v131 = v44;
                      char v132 = 0;
                      do
                      {
                        --v128;
                        sub_224AADE84();
                        char v132 = v133 | (2 * v132);
                      }
                      while (v128);
                      uint64_t v9 = v1023;
                      uint64_t v126 = *(void *)(v1023 + 56);
                      uint64_t v11 = v1032;
                      int v44 = v131;
                      int v28 = v130;
                      unint64_t v19 = (unint64_t)v129;
                      signed int v13 = __b;
                      int v63 = v997;
                    }
                    else
                    {
                      char v132 = 0;
                      uint64_t v9 = v1023;
                    }
                    *(unsigned char *)(v126 + v127) = v132;
                    if (v1026 >= 0x11) {
                      *(unsigned char *)(v127 + *(void *)(v9 + 56) + 1) = v132;
                    }
                    uint64_t v111 = v1031;
                    if (v19 >= 0x11)
                    {
                      *(unsigned char *)(v127 + *(void *)(v9 + 56) + 2) = v132;
                      if (v1026 == 32 && v19 == 32) {
                        *(unsigned char *)(v127 + *(void *)(v9 + 56) + 3) = v132;
                      }
                    }
                  }
LABEL_256:
                  unsigned int v173 = 0x1Fu >> (*(unsigned char *)(*(void *)(v11 + 8) + 392) == 0);
                  unint64_t v174 = v1026;
                  int v175 = v1030;
                  if ((v173 & *(_DWORD *)(v1035 + 24)) != 0 || (*(_DWORD *)(v1035 + 28) & v173) != 0) {
                    goto LABEL_325;
                  }
                  v998 = v63;
                  v979 = v44;
                  int v176 = v111[1757].i32[0];
                  int v177 = *(unsigned __int8 **)(v11 + 24);
                  if (v177[824])
                  {
                    if (*(unsigned char *)(*(void *)(v11 + 8) + 392)) {
                      int v178 = 0;
                    }
                    else {
                      int v178 = 3;
                    }
                    if (v178 == v1034)
                    {
                      int v179 = *((unsigned __int8 *)v15 + 6);
                      int v180 = (char *)&v111[1757] + 4;
                      LODWORD(v1040) = v111[1757].i32[1];
                      int v181 = v176;
                      if (v179) {
                        goto LABEL_315;
                      }
                    }
                    else
                    {
                      int v180 = (char *)&v111[1757] + 4;
                      LODWORD(v1040) = v111[1757].i32[1];
                    }
                    int v1000 = v28;
                    uint64_t v182 = (uint64_t)&v111[1728];
                    int v183 = sub_224AAD9A0((uint64_t)&v111[1728], v111 + 662, 3, v29, v5, v6, v7, v8);
                    if (v183 == 3)
                    {
                      int v189 = 0;
                      int v190 = -3;
                      do
                      {
                        sub_224AADE84();
                        int v189 = v191 | (2 * v189);
                        BOOL v271 = __CFADD__(v190++, 1);
                      }
                      while (!v271);
                      int v192 = 0;
                      BOOL v271 = __CFADD__(v189, 1);
                      int v193 = v189 + 1;
                      if (!v271)
                      {
                        int v194 = v193;
                        do
                        {
                          --v194;
                          sub_224AADE84();
                          int v192 = v195 | (2 * v192);
                        }
                        while (v194);
                      }
                      int v183 = (1 << v193) + v192 + 1;
                      unint64_t v174 = v1026;
                      int v175 = v1030;
                    }
                    if (v183)
                    {
                      sub_224AADE84();
                      if (v196) {
                        int v197 = -v183;
                      }
                      else {
                        int v197 = v183;
                      }
                      uint64_t v11 = v1032;
                      int v177 = *(unsigned __int8 **)(v1032 + 24);
                      int v198 = v197 << v177[825];
                    }
                    else
                    {
                      int v198 = 0;
                      uint64_t v11 = v1032;
                      int v177 = *(unsigned __int8 **)(v1032 + 24);
                    }
                    uint64_t v111 = v1031;
                    int v199 = v1031[1757].i32[0] + v198;
                    if (v199 >= 255) {
                      int v199 = 255;
                    }
                    if (v199 <= 1) {
                      int v181 = 1;
                    }
                    else {
                      int v181 = v199;
                    }
                    v1031[1757].i32[0] = v181;
                    if (v177[826])
                    {
                      v976 = v15;
                      int v973 = v176;
                      if (v177[828])
                      {
                        if (*(_DWORD *)(v11 + 2168)) {
                          uint64_t v200 = 4;
                        }
                        else {
                          uint64_t v200 = 2;
                        }
                      }
                      else
                      {
                        uint64_t v200 = 1;
                      }
                      for (uint64_t m = 0; m != v200; ++m)
                      {
                        int v202 = sub_224AAD9A0(v182, &v111[m + 663 + *(unsigned __int8 *)(*(void *)(v11 + 24) + 828)], 3, v184, v185, v186, v187, v188);
                        if (v202 == 3)
                        {
                          int v203 = 0;
                          int v204 = -3;
                          do
                          {
                            sub_224AADE84();
                            int v203 = v205 | (2 * v203);
                            BOOL v271 = __CFADD__(v204++, 1);
                          }
                          while (!v271);
                          int v206 = v203 + 1;
                          if (v203 == -1)
                          {
                            int v207 = 0;
                          }
                          else
                          {
                            int v207 = 0;
                            int v208 = v206;
                            do
                            {
                              --v208;
                              sub_224AADE84();
                              int v207 = v209 | (2 * v207);
                            }
                            while (v208);
                          }
                          int v202 = (1 << v206) + v207 + 1;
                          uint64_t v9 = v1023;
                          int v175 = v1030;
                        }
                        if (v202)
                        {
                          sub_224AADE84();
                          if (v210) {
                            int v211 = -v202;
                          }
                          else {
                            int v211 = v202;
                          }
                          uint64_t v11 = v1032;
                          int v212 = v211 << *(unsigned char *)(*(void *)(v1032 + 24) + 827);
                        }
                        else
                        {
                          int v212 = 0;
                          uint64_t v11 = v1032;
                        }
                        uint64_t v111 = v1031;
                        int v213 = v212 + v1031[1757].i8[m + 4];
                        if (v213 >= 63) {
                          int v213 = 63;
                        }
                        if (v213 <= -63) {
                          LOBYTE(v213) = -63;
                        }
                        v1031[1757].i8[m + 4] = v213;
                      }
                      int v181 = v1031[1757].i32[0];
                      int v177 = *(unsigned __int8 **)(v11 + 24);
                      int v15 = v976;
                      unint64_t v19 = v19;
                      int v28 = v1000;
                      unint64_t v174 = v1026;
                      int v176 = v973;
                    }
                    else
                    {
                      int v28 = v1000;
                    }
                  }
                  else
                  {
                    int v180 = (char *)&v111[1757] + 4;
                    LODWORD(v1040) = v111[1757].i32[1];
                    int v181 = v176;
                  }
LABEL_315:
                  if (v181 == v177[712])
                  {
                    unint64_t v214 = (int16x4_t *)(v11 + 3480);
                  }
                  else
                  {
                    if (v181 == v176)
                    {
LABEL_320:
                      v1037[1] = 0;
                      if (*(_DWORD *)v180)
                      {
                        int v44 = v979;
                        int v63 = v998;
                        if (*(_DWORD *)v180 == v1040) {
                          goto LABEL_325;
                        }
                        uint64_t v216 = v11;
                        uint64_t v217 = v111 + 1758;
                        sub_224AFF938(&v111[1758], *(unsigned char **)(v216 + 24), v180);
                        int v63 = v998;
                        int v44 = v979;
                        uint64_t v111 = v1031;
                      }
                      else
                      {
                        uint64_t v217 = (int16x4_t *)(v11 + 4644);
                        int v44 = v979;
                        int v63 = v998;
                      }
                      v111[1822] = (int16x4_t)v217;
                      uint64_t v11 = v1032;
LABEL_325:
                      if (*v63)
                      {
LABEL_326:
                        *((unsigned char *)v15 + 3) = 0;
                        v999 = (char *)v15 + 3;
                        goto LABEL_327;
                      }
                      uint64_t v235 = *(void *)(v11 + 24);
                      if (*(unsigned char *)(v235 + 232))
                      {
                        if (v44)
                        {
                          int v246 = v44[6];
                          if ((v246 & 0x80000000) == 0)
                          {
                            *((unsigned char *)v15 + 3) = v246 == 0;
                            v999 = (char *)v15 + 3;
                            if (!v246) {
                              goto LABEL_430;
                            }
                            goto LABEL_327;
                          }
                          if (v44[8]) {
                            goto LABEL_326;
                          }
                        }
                        int v263 = v175;
                        int v1001 = v28;
                        uint64_t v264 = *(void *)(v1035 + 656);
                        signed int v265 = v63;
                        int v266 = v44;
                        if (v1024 <= v1016)
                        {
                          if (v13 <= v1012) {
                            unsigned int v268 = 0;
                          }
                          else {
                            unsigned int v268 = 2 * *(unsigned __int8 *)(v264 + v1033 + 224);
                          }
                        }
                        else
                        {
                          int v267 = *(unsigned __int8 *)(v1035 + v263 + 256);
                          if (v13 <= v1012)
                          {
                            unsigned int v268 = 2 * v267;
                          }
                          else
                          {
                            unsigned int v268 = *(unsigned __int8 *)(v264 + v1033 + 224) + v267;
                            if (v268 == 2) {
                              unsigned int v268 = 3;
                            }
                          }
                        }
                        sub_224AADEFC((uint64_t)&v111[1728], (unsigned int *)&v111[702] + v268 + 1);
                        uint64_t v111 = v1031;
                        *((unsigned char *)v15 + 3) = v316 == 0;
                        v999 = (char *)v15 + 3;
                        int v44 = v266;
                        int v28 = v1001;
                        int v63 = v265;
                        int v175 = v263;
                        if (!v316) {
                          goto LABEL_430;
                        }
                      }
                      else
                      {
                        if (!*(unsigned char *)(v235 + 419))
                        {
                          *((unsigned char *)v15 + 3) = 1;
                          v999 = (char *)v15 + 3;
                          goto LABEL_430;
                        }
                        unsigned int v236 = v175;
                        unsigned int v237 = v15;
                        uint64_t v238 = v9;
                        signed int v239 = v13;
                        int v240 = (_OWORD *)v19;
                        int v241 = v28;
                        unsigned int v242 = v44;
                        unint64_t v243 = v174;
                        unint64_t v244 = v63;
                        sub_224AADEFC((uint64_t)&v111[1728], (unsigned int *)&v111[778] + 1);
                        int v63 = v244;
                        unint64_t v174 = v243;
                        int v44 = v242;
                        int v28 = v241;
                        unint64_t v19 = (unint64_t)v240;
                        signed int v13 = v239;
                        uint64_t v9 = v238;
                        int v15 = v237;
                        int v175 = v236;
                        uint64_t v111 = v1031;
                        *((unsigned char *)v15 + 3) = v245 == 0;
                        v999 = (char *)v15 + 3;
                        if (!v245)
                        {
LABEL_430:
                          if (*(unsigned char *)(*(void *)(v11 + 24) + 232))
                          {
                            uint64_t v318 = (uint64_t)&v111[4 * byte_224B177CA[v1034]];
                            unsigned int v319 = v1029;
                            uint64_t v320 = v1025;
                            uint64_t v317 = v1033;
                          }
                          else
                          {
                            uint64_t v317 = v1033;
                            uint64_t v318 = (uint64_t)&v111[20
                                                * byte_224B177E0[*(unsigned __int8 *)(*(void *)(v1035 + 656) + v1033)]
                                                + 780
                                                + 4 * byte_224B177E0[v175[v1035 + 32]]];
                            unsigned int v319 = v1029;
                            uint64_t v320 = v1025;
                          }
                          uint64_t v321 = (uint64_t)&v111[1728];
                          sub_224AADBF0((uint64_t)&v111[1728], v318, 12);
                          *((unsigned char *)v15 + 8) = v322;
                          uint64_t v328 = v320[2];
                          uint64_t v329 = v320[3];
                          uint64_t v330 = v329 + v328;
                          if ((v329 + v328) < 2 || (unsigned int v331 = v322 - 1, v331 > 7))
                          {
                            char v334 = 0;
                            char v332 = (int8x16_t *)v1031;
                          }
                          else
                          {
                            sub_224AADB30(v321, (int8x16_t *)&v1031[2 * v331 + 404], 6);
                            char v332 = (int8x16_t *)v1031;
                            uint64_t v317 = v1033;
                            char v334 = v333 - 3;
                          }
                          *((unsigned char *)v15 + 13) = v334;
                          int v1002 = v28;
                          if (v319)
                          {
                            if (*(unsigned char *)(*(void *)(v1032 + 24) + *((unsigned __int8 *)v15 + 4) + 808)) {
                              unsigned int v336 = v28 == 1 && v1019 == 1;
                            }
                            else {
                              unsigned int v336 = (0x3FFB80u >> v1034) & 1;
                            }
                            uint64_t v337 = v332;
                            sub_224AADBF0(v321, (uint64_t)v332[26 * v336 + 8 + 2 * *((unsigned __int8 *)v15 + 8)].i64, v336 | 0xC);
                            *((unsigned char *)v15 + 9) = v338;
                            *((unsigned char *)v15 + 14) = 0;
                            if (v338 == 13)
                            {
                              int v339 = v19;
                              unint64_t v19 = (unint64_t)v15;
                              sub_224AADB30(v321, v337 + 201, 7);
                              int v341 = 86 * (v340 + 1);
                              int v342 = v341 >> 8;
                              int v343 = -3 * (v341 >> 8) + v340 + 1;
                              if (v341 >= 0x100)
                              {
                                if (v342 == 2) {
                                  int v347 = 3;
                                }
                                else {
                                  int v347 = 0;
                                }
                                sub_224AADBF0(v321, (uint64_t)v337[2 * v347 + 118 + 2 * v343].i64, 15);
                                char v344 = ~v348;
                                if (v342 != 1) {
                                  char v344 = v348 + 1;
                                }
                              }
                              else
                              {
                                char v344 = 0;
                              }
                              uint64_t v317 = v1033;
                              *(unsigned char *)(v19 + 15) = v344;
                              if (v343)
                              {
                                if (v343 == 2) {
                                  int v349 = 3;
                                }
                                else {
                                  int v349 = 0;
                                }
                                sub_224AADBF0(v321, (uint64_t)&v1031[4 * v349 + 236 + 4 * v342], 15);
                                char v332 = (int8x16_t *)v1031;
                                char v351 = ~v350;
                                if (v343 != 1) {
                                  char v351 = v350 + 1;
                                }
                                *(unsigned char *)(v19 + 16) = v351;
                                int v15 = (_OWORD *)v19;
                                LODWORD(v19) = v339;
                                unsigned int v319 = v1029;
                              }
                              else
                              {
                                *(unsigned char *)(v19 + 16) = 0;
                                int v15 = (_OWORD *)v19;
                                LODWORD(v19) = v339;
                                unsigned int v319 = v1029;
                                char v332 = (int8x16_t *)v1031;
                              }
                            }
                            else
                            {
                              char v332 = v337;
                              uint64_t v317 = v1033;
                              if (v330 >= 2)
                              {
                                unsigned int v345 = v338 - 1;
                                if (v345 <= 7)
                                {
                                  sub_224AADB30(v321, &v332[v345 + 202], 6);
                                  char v332 = (int8x16_t *)v1031;
                                  *((unsigned char *)v15 + 14) = v346 - 3;
                                }
                              }
                            }
                          }
                          *(_WORD *)((char *)v15 + 11) = 0;
                          if (*(unsigned char *)(*(void *)(v1032 + 24) + 268))
                          {
                            unsigned int v371 = (int)v1026 <= (int)v19 ? v19 : v1026;
                            if (v371 <= 0x10 && (v19 + v1026) >= 4)
                            {
                              if (!*((unsigned char *)v15 + 8))
                              {
                                uint64_t v372 = *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 592)
                                     ? (*(unsigned char *)(v1035 + v1030 + 624) != 0) + 1
                                     : *(unsigned char *)(v1035 + v1030 + 624) != 0;
                                sub_224AADEFC(v321, (unsigned int *)&v332[382] + 3 * (int)v330 + v372);
                                char v332 = (int8x16_t *)v1031;
                                if (v373)
                                {
                                  (*(void (**)(uint64_t, _OWORD *, void, uint64_t, uint64_t, unsigned __int8 *))(v1032 + 3384))(v1035, v15, 0, v330 - 2, v317, v1030);
                                  char v332 = (int8x16_t *)v1031;
                                }
                              }
                              if (v319)
                              {
                                if (!*((unsigned char *)v15 + 9))
                                {
                                  sub_224AADEFC(v321, &v332[388].u32[(*((unsigned char *)v15 + 11) != 0) + 3]);
                                  char v332 = (int8x16_t *)v1031;
                                  if (v374)
                                  {
                                    (*(void (**)(uint64_t, _OWORD *, uint64_t, uint64_t, unsigned __int8 *))(v1032 + 3392))(v1035, v15, v330 - 2, v317, v1030);
                                    char v332 = (int8x16_t *)v1031;
                                  }
                                }
                              }
                            }
                          }
                          if (!*((unsigned char *)v15 + 8))
                          {
                            if (*((unsigned char *)v15 + 11))
                            {
LABEL_506:
                              int v375 = *(_DWORD *)(v1023 + 68);
                              if (v375)
                              {
                                int v376 = &v332->i8[24 * (v375 & 1)];
                                uint64_t v377 = *((void *)v376 + 1737);
                                int v378 = v1026;
                                *((void *)v376 + 1737) = v377 + (8 * v1026 * v19);
                              }
                              else
                              {
                                uint64_t v377 = v1035 + 11392;
                                int v378 = v1026;
                              }
                              sub_224ADD488((void *)v1035, v377, (uint64_t)v15, 0, v1020, v1015, v378, v19);
                              char v332 = (int8x16_t *)v1031;
                              goto LABEL_510;
                            }
                            if ((int)v328 <= (int)v329) {
                              unsigned int v383 = v329;
                            }
                            else {
                              unsigned int v383 = v328;
                            }
                            if (v383 > 3)
                            {
LABEL_510:
                              if (v319 && *((unsigned char *)v15 + 12))
                              {
                                int v379 = *(_DWORD *)(v1023 + 68);
                                if (v379)
                                {
                                  uint64_t v380 = &v1031[3 * (v379 & 1)];
                                  uint64_t v381 = (uint64_t)v380[1737];
                                  int v382 = v1019;
                                  v380[1737] = (int16x4_t)(v381 + (8 * v1002 * v1019));
                                }
                                else
                                {
                                  uint64_t v381 = v1035 + 13440;
                                  int v382 = v1019;
                                }
                                sub_224ADD488((void *)v1035, v381, (uint64_t)v15, 1u, ((int)v1020 + v987) >> v987, (v1015 + v1005) >> v1005, v1002, v382);
                                char v332 = (int8x16_t *)v1031;
                              }
                              if (*(unsigned char *)(*(void *)(v1032 + 24) + *((unsigned __int8 *)v15 + 4) + 808))
                              {
                                *((unsigned char *)v15 + 7) = 0;
                                *((unsigned char *)v15 + 10) = 0;
                                v1017 = byte_224B28D18;
                              }
                              else
                              {
                                char v445 = &byte_224B177ED[4 * v1034];
                                uint64_t v446 = *v445;
                                *((unsigned char *)v15 + 10) = v446;
                                *((unsigned char *)v15 + 7) = v445[*(unsigned int *)(v1032 + 2168)];
                                v1017 = &byte_224B28D18[8 * v446];
                                if (*(_DWORD *)(*(void *)(v1032 + 24) + 884) == 2 && v446)
                                {
                                  int v447 = &byte_224B28D18[8 * v446];
                                  int v448 = v447[5];
                                  int v449 = v447[3];
                                  uint64_t v450 = *(char *)(*(void *)(v1035 + 656) + v317 + 416) >= (int)v447[2];
                                  if (*(char *)(v1035 + v1030 + 448) >= v449) {
                                    ++v450;
                                  }
                                  if (v448 >= 2) {
                                    uint64_t v451 = 2;
                                  }
                                  else {
                                    uint64_t v451 = v448;
                                  }
                                  int v452 = sub_224AAD9A0(v321, (int16x4_t *)&v332[314] + 3 * (v448 - 1) + v450, v451, v323, v324, v325, v326, v327);
                                  uint64_t v296 = v1023;
                                  if (v452)
                                  {
                                    do
                                    {
                                      uint64_t v446 = byte_224B28D18[8 * v446 + 6];
                                      *((unsigned char *)v15 + 10) = v446;
                                      --v452;
                                    }
                                    while (v452);
                                    v1017 = &byte_224B28D18[8 * v446];
                                  }
                                  goto LABEL_526;
                                }
                              }
                              uint64_t v296 = v1023;
LABEL_526:
                              unsigned int v985 = v19;
                              unint64_t v386 = v15;
                              if (*(_DWORD *)(v296 + 68) == 1) {
                                (*(void (**)(uint64_t, void, _OWORD *))(v1032 + 3360))(v1035, v1034, v15);
                              }
                              else {
                                (*(void (**)(uint64_t, void, void, _OWORD *))(v1032 + 3288))(v1035, v1034, v1027, v15);
                              }
                              uint64_t v387 = *(void *)(v1032 + 24);
                              if (*(unsigned char *)(v387 + 830) || *(unsigned char *)(v387 + 831))
                              {
                                uint64_t v388 = *(void *)(v296 + 40);
                                uint64_t v389 = *(void *)(v1032 + 4432);
                                uint64_t v390 = *(void *)(v1032 + 3432);
                                unint64_t v391 = (unsigned char *)(*(void *)&v1031[1822]
                                               + ((unint64_t)*((unsigned __int8 *)v15 + 4) << 6));
                                int v392 = *(_DWORD *)(v1035 + 24);
                                int v393 = *(_DWORD *)(v1035 + 28);
                                uint64_t v394 = v392;
                                uint64_t v395 = v393;
                                int v396 = *(_DWORD *)(v1032 + 3440);
                                int v397 = *(_DWORD *)(v1032 + 3444);
                                unsigned int v398 = *((unsigned __int8 *)v15 + 7);
                                int v399 = *(_DWORD *)(v1032 + 2168);
                                uint64_t v400 = *(void *)(v1035 + 656);
                                uint64_t v401 = v1035 + 32;
                                if (v1029) {
                                  int v402 = (uint64_t *)(v400 + v1022 + 512);
                                }
                                else {
                                  int v402 = 0;
                                }
                                if (v1029) {
                                  int v403 = (uint64_t *)(v401 + v1021 + 512);
                                }
                                else {
                                  int v403 = 0;
                                }
                                int v404 = *v1025;
                                if (v396 - v392 >= v404) {
                                  size_t v405 = *v1025;
                                }
                                else {
                                  size_t v405 = (v396 - v392);
                                }
                                int v406 = v1025[1];
                                if (v397 - v393 >= v406) {
                                  size_t v407 = v1025[1];
                                }
                                else {
                                  size_t v407 = (v397 - v393);
                                }
                                unsigned int v408 = *(_DWORD *)(v1035 + 24) & 0x1F;
                                unsigned int v409 = *(_DWORD *)(v1035 + 28) & 0x1F;
                                if (v405 && v407)
                                {
                                  int v1009 = *(_DWORD *)(v1032 + 3440);
                                  int v1013 = *(_DWORD *)(v1032 + 2168);
                                  int v410 = 0;
                                  uint64_t v411 = *((unsigned __int8 *)v386 + 10);
                                  unint64_t v412 = (unsigned __int8 *)(v400 + v1033 + 480);
                                  uint64_t v413 = v401 + v1030 + 480;
                                  uint64_t v414 = v389 + 4 * v390 * v395 + 4 * v394;
                                  do
                                  {
                                    uint64_t v415 = 0;
                                    do
                                    {
                                      unint64_t v416 = (unsigned char *)(v414 + v415);
                                      *unint64_t v416 = *v391;
                                      v416[1] = v391[16];
                                      v415 += 4;
                                    }
                                    while (4 * v405 != v415);
                                    ++v410;
                                    v414 += 4 * v390;
                                  }
                                  while (v410 != v407);
                                  int v1028 = v394;
                                  int v989 = v397;
                                  int v992 = v395;
                                  __ba = (void *)v413;
                                  int v417 = &byte_224B28D18[8 * v411];
                                  int v418 = v417[2];
                                  int v419 = v417[3];
                                  if (v418 >= 2) {
                                    uint64_t v420 = 2;
                                  }
                                  else {
                                    uint64_t v420 = v418;
                                  }
                                  unint64_t v421 = (unsigned __int8 *)v413;
                                  size_t v422 = v407;
                                  unsigned int v423 = 1 << v409;
                                  do
                                  {
                                    int v425 = *v421++;
                                    unsigned int v424 = v425;
                                    if ((int)v420 < v425) {
                                      unsigned int v424 = v420;
                                    }
                                    uint64_t v426 = v388 + 12 * v408 + 4 * v424;
                                    *(_WORD *)(v426 + 2 * ((v423 & 0xFFFF0000) != 0)) |= v423 >> (16
                                                                                                  * ((v423 & 0xFFFF0000) != 0));
                                    v423 *= 2;
                                    --v422;
                                  }
                                  while (v422);
                                  if (v419 >= 2) {
                                    uint64_t v427 = 2;
                                  }
                                  else {
                                    uint64_t v427 = v419;
                                  }
                                  uint64_t v428 = (1 << v408);
                                  int v429 = v412;
                                  size_t v430 = v405;
                                  unsigned int v431 = 1 << v408;
                                  do
                                  {
                                    int v433 = *v429++;
                                    unsigned int v432 = v433;
                                    if ((int)v427 < v433) {
                                      unsigned int v432 = v427;
                                    }
                                    uint64_t v434 = v388 + 12 * v409 + 4 * v432 + 2 * ((v431 & 0xFFFF0000) != 0);
                                    *(_WORD *)(v434 + 384) |= v431 >> (16 * ((v431 & 0xFFFF0000) != 0));
                                    v431 *= 2;
                                    --v430;
                                  }
                                  while (v430);
                                  uint64_t v435 = byte_224B28D18[8 * v411];
                                  if (v405 > v435)
                                  {
                                    unsigned int v436 = ((unint64_t)(1 << v409) << v407) - (1 << v409);
                                    unint64_t v437 = (_WORD *)(12 * (v435 + v408)
                                                   + 4 * v420
                                                   + v388
                                                   + 2);
                                    size_t v438 = byte_224B28D18[8 * v411];
                                    do
                                    {
                                      if ((unsigned __int16)((unint64_t)(1 << v409) << v407) != 1 << v409) {
                                        *(v437 - 1) |= v436;
                                      }
                                      if (v436 >= 0x10000) {
                                        *v437 |= HIWORD(v436);
                                      }
                                      v438 += v435;
                                      v437 += 6 * v435;
                                    }
                                    while (v438 < v405);
                                  }
                                  size_t v439 = byte_224B28D18[8 * v411 + 1];
                                  if (v407 > v439)
                                  {
                                    unsigned int v440 = (v428 << v405) - v428;
                                    int v441 = (unsigned __int16)((v428 << v405) - v428);
                                    uint64_t v442 = (_WORD *)(12 * (v439 + v409)
                                                   + 4 * v427
                                                   + v388
                                                   + 386);
                                    size_t v443 = v439;
                                    do
                                    {
                                      if (v441) {
                                        *(v442 - 1) |= v440;
                                      }
                                      if (v440 >= 0x10000) {
                                        *v442 |= HIWORD(v440);
                                      }
                                      v443 += v439;
                                      v442 += 6 * v439;
                                    }
                                    while (v443 < v407);
                                  }
                                  uint64_t v444 = __ba;
                                  switch((int)v405)
                                  {
                                    case 1:
                                      *unint64_t v412 = v427;
                                      break;
                                    case 2:
                                      *(_WORD *)unint64_t v412 = v427 | ((_WORD)v427 << 8);
                                      break;
                                    case 3:
                                    case 5:
                                    case 6:
                                    case 7:
                                      goto LABEL_593;
                                    case 4:
                                      *(_DWORD *)unint64_t v412 = 16843009 * v427;
                                      break;
                                    case 8:
                                      *(void *)unint64_t v412 = 0x101010101010101 * v427;
                                      break;
                                    default:
                                      uint64_t v444 = __ba;
                                      if (v405 == 16)
                                      {
                                        *(void *)unint64_t v412 = 0x101010101010101 * v427;
                                        *((void *)v412 + 1) = 0x101010101010101 * v427;
                                      }
                                      else if (v405 == 32)
                                      {
                                        *(void *)unint64_t v412 = 0x101010101010101 * v427;
                                        *((void *)v412 + 1) = 0x101010101010101 * v427;
                                        *((void *)v412 + 2) = 0x101010101010101 * v427;
                                        *((void *)v412 + 3) = 0x101010101010101 * v427;
                                      }
                                      else
                                      {
LABEL_593:
                                        uint64_t v977 = v390;
                                        v981 = v402;
                                        unsigned int v453 = v398;
                                        v974 = v403;
                                        memset(v412, v427, v405);
                                        uint64_t v444 = __ba;
                                        int v403 = v974;
                                        unsigned int v398 = v453;
                                        uint64_t v390 = v977;
                                        int v402 = v981;
                                      }
                                      break;
                                  }
                                  LODWORD(v394) = v1028;
                                  int v399 = v1013;
                                  int v396 = v1009;
                                  switch((int)v407)
                                  {
                                    case 1:
                                      *(unsigned char *)uint64_t v444 = v420;
                                      break;
                                    case 2:
                                      *(_WORD *)uint64_t v444 = v420 | ((_WORD)v420 << 8);
                                      break;
                                    case 3:
                                    case 5:
                                    case 6:
                                    case 7:
                                      goto LABEL_627;
                                    case 4:
                                      *(_DWORD *)uint64_t v444 = 16843009 * v420;
                                      break;
                                    case 8:
                                      *uint64_t v444 = 0x101010101010101 * v420;
                                      break;
                                    default:
                                      if (v407 == 16)
                                      {
                                        *uint64_t v444 = 0x101010101010101 * v420;
                                        v444[1] = 0x101010101010101 * v420;
                                      }
                                      else if (v407 == 32)
                                      {
                                        *uint64_t v444 = 0x101010101010101 * v420;
                                        v444[1] = 0x101010101010101 * v420;
                                        v444[2] = 0x101010101010101 * v420;
                                        v444[3] = 0x101010101010101 * v420;
                                      }
                                      else
                                      {
LABEL_627:
                                        int v479 = v420;
                                        unsigned int v480 = v398;
                                        uint64_t v978 = v390;
                                        v983 = v402;
                                        int v481 = v403;
                                        memset(v444, v479, v407);
                                        int v396 = v1009;
                                        int v399 = v1013;
                                        LODWORD(v394) = v1028;
                                        int v403 = v481;
                                        uint64_t v390 = v978;
                                        int v402 = v983;
                                        unsigned int v398 = v480;
                                      }
                                      break;
                                  }
                                  uint64_t v296 = v1023;
                                  LODWORD(v395) = v992;
                                  int v397 = v989;
                                }
                                uint64_t v317 = v1033;
                                if (v1029)
                                {
                                  __int16 v482 = v399 != 3;
                                  int v483 = v399 == 3 ? v396 : v396 + 1;
                                  int v484 = v483 >> v482;
                                  int v485 = (int)v394 >> v482;
                                  unsigned int v486 = v399 == 3 ? v404 : v404 + 1;
                                  int v487 = v484 - v485;
                                  int v488 = v486 >> v482;
                                  size_t v489 = v487 >= v488 ? v488 : v487;
                                  char v490 = v399 == 1;
                                  int v491 = v399 == 1 ? v397 + 1 : v397;
                                  int v492 = v491 >> v490;
                                  int v493 = (int)v395 >> v490;
                                  unsigned int v494 = v399 == 1 ? v406 + 1 : v406;
                                  int v495 = v492 - v493;
                                  signed int v496 = v494 >> v490;
                                  unsigned int v497 = v495 >= v496 ? v496 : v495;
                                  if (v489 && v497)
                                  {
                                    int v498 = 0;
                                    uint64_t v499 = v389 + 4 * v390 * v493 + 4 * v485;
                                    do
                                    {
                                      uint64_t v500 = 0;
                                      do
                                      {
                                        uint64_t v501 = v499 + v500;
                                        *(unsigned char *)(v501 + 2) = v391[32];
                                        *(unsigned char *)(v501 + 3) = v391[48];
                                        v500 += 4;
                                      }
                                      while (4 * v489 != v500);
                                      ++v498;
                                      v499 += 4 * v390;
                                    }
                                    while (v498 != v497);
                                    sub_224AFF17C((char *)(v388 + 768), v409 >> v490, v408 >> v482, v489, v497, 0, v398, v402, v403, v482, SHIBYTE(v482));
                                  }
                                }
                              }
                              int v15 = v386;
                              if (*((unsigned char *)v386 + 8) == 13) {
                                uint64_t v502 = 0;
                              }
                              else {
                                uint64_t v502 = *((unsigned __int8 *)v386 + 8);
                              }
                              LODWORD(v19) = v985;
                              int v503 = v1002;
                              uint64_t v11 = v1032;
                              unsigned int v301 = v1029;
                              unint64_t v174 = v1026;
                              int v300 = v1030;
                              int v504 = v1006;
                              switch(v985)
                              {
                                case 1u:
                                  unsigned __int8 v505 = 0;
                                  unsigned __int8 v506 = v1017[3];
                                  uint64_t v507 = &v1030[v1035];
                                  v507[448] = v506;
                                  v507[480] = v506;
                                  v507[32] = v502;
                                  v507[624] = *((unsigned char *)v15 + 11);
                                  v507[160] = v1006;
                                  v507[224] = 0;
                                  v507[256] = 1;
                                  v507[192] = *((unsigned char *)v15 + 6);
                                  if (v1029) {
                                    unsigned __int8 v505 = *((unsigned char *)v15 + 12);
                                  }
                                  v507[8224] = v505;
                                  if (*(unsigned char *)(*(void *)(v1032 + 24) + 232))
                                  {
                                    uint64_t v508 = &v1030[v1035];
                                    v508[288] = 0;
                                    v508[320] = -1;
                                    v508[352] = -1;
                                    v508[384] = 3;
                                    v508[416] = 3;
                                  }
                                  break;
                                case 2u:
                                  __int16 v524 = 0;
                                  __int16 v525 = v1017[3] | (v1017[3] << 8);
                                  long long v526 = &v1030[v1035];
                                  *((_WORD *)v526 + 224) = v525;
                                  *((_WORD *)v526 + 240) = v525;
                                  *((_WORD *)v526 + 16) = v502 | ((_WORD)v502 << 8);
                                  *((_WORD *)v526 + 312) = *((unsigned __int8 *)v15 + 11) | (*((unsigned __int8 *)v15
                                                                                             + 11) << 8);
                                  *((_WORD *)v526 + 80) = 257 * v1006;
                                  *((_WORD *)v526 + 112) = 0;
                                  *((_WORD *)v526 + 128) = 257;
                                  *((_WORD *)v526 + 96) = *((unsigned __int8 *)v15 + 6) | (*((unsigned __int8 *)v15 + 6) << 8);
                                  if (v1029) {
                                    __int16 v524 = *((unsigned __int8 *)v15 + 12);
                                  }
                                  *((_WORD *)v526 + 4112) = v524 | (v524 << 8);
                                  if (*(unsigned char *)(*(void *)(v1032 + 24) + 232))
                                  {
                                    long long v527 = &v1030[v1035];
                                    *((_WORD *)v527 + 144) = 0;
                                    *((_WORD *)v527 + 160) = -1;
                                    *((_WORD *)v527 + 176) = -1;
                                    *((_WORD *)v527 + 192) = 771;
                                    *((_WORD *)v527 + 208) = 771;
                                  }
                                  break;
                                case 3u:
                                case 5u:
                                case 6u:
                                case 7u:
                                  break;
                                case 4u:
                                  int v528 = 0;
                                  int v529 = v1017[3];
                                  *(_DWORD *)&v1030[v1035 + 32] = 16843009 * v502;
                                  uint64_t v530 = &v1030[v1035 + 32];
                                  v529 *= 16843009;
                                  *((_DWORD *)v530 + 104) = v529;
                                  *((_DWORD *)v530 + 112) = v529;
                                  *((_DWORD *)v530 + 148) = 16843009 * *((unsigned __int8 *)v15 + 11);
                                  *((_DWORD *)v530 + 32) = 16843009 * v1006;
                                  *((_DWORD *)v530 + 48) = 0;
                                  *((_DWORD *)v530 + 56) = 16843009;
                                  *((_DWORD *)v530 + 40) = 16843009 * *((unsigned __int8 *)v15 + 6);
                                  if (v1029) {
                                    int v528 = *((unsigned __int8 *)v15 + 12);
                                  }
                                  *(_DWORD *)&v1030[v1035 + 8224] = 16843009 * v528;
                                  if (*(unsigned char *)(*(void *)(v1032 + 24) + 232))
                                  {
                                    int v531 = &v1030[v1035];
                                    *((_DWORD *)v531 + 72) = 0;
                                    *((_DWORD *)v531 + 80) = -1;
                                    *((_DWORD *)v531 + 88) = -1;
                                    *((_DWORD *)v531 + 96) = 50529027;
                                    *((_DWORD *)v531 + 104) = 50529027;
                                  }
                                  break;
                                case 8u:
                                  uint64_t v532 = 0;
                                  uint64_t v533 = v1017[3];
                                  *(void *)&v1030[v1035 + 32] = 0x101010101010101 * v502;
                                  unsigned int v534 = &v1030[v1035 + 32];
                                  v533 *= 0x101010101010101;
                                  *((void *)v534 + 52) = v533;
                                  *((void *)v534 + 56) = v533;
                                  *((void *)v534 + 74) = 0x101010101010101 * *((unsigned __int8 *)v15 + 11);
                                  *((void *)v534 + 16) = 0x101010101010101 * v1006;
                                  *((void *)v534 + 24) = 0;
                                  *((void *)v534 + 28) = 0x101010101010101;
                                  *((void *)v534 + 20) = 0x101010101010101 * *((unsigned __int8 *)v15 + 6);
                                  if (v1029) {
                                    uint64_t v532 = *((unsigned __int8 *)v15 + 12);
                                  }
                                  *(void *)&v1030[v1035 + 8224] = 0x101010101010101 * v532;
                                  if (*(unsigned char *)(*(void *)(v1032 + 24) + 232))
                                  {
                                    uint64_t v535 = &v1030[v1035];
                                    *((void *)v535 + 36) = 0;
                                    *((void *)v535 + 40) = -1;
                                    *((void *)v535 + 44) = -1;
                                    *((void *)v535 + 48) = 0x303030303030303;
                                    *((void *)v535 + 52) = 0x303030303030303;
                                  }
                                  break;
                                default:
                                  int v503 = v1002;
                                  uint64_t v11 = v1032;
                                  unsigned int v301 = v1029;
                                  unint64_t v174 = v1026;
                                  int v300 = v1030;
                                  int v504 = v1006;
                                  if (v985 == 16)
                                  {
                                    uint64_t v536 = 0;
                                    int64x2_t v537 = vdupq_n_s64(0x101010101010101 * (unint64_t)v1017[3]);
                                    *(int64x2_t *)&v1030[v1035 + 32] = vdupq_n_s64(0x101010101010101 * v502);
                                    uint64_t v538 = (uint64_t)&v1030[v1035 + 32];
                                    *(int64x2_t *)(v538 + 416) = v537;
                                    *(int64x2_t *)(v538 + 448) = v537;
                                    *(int64x2_t *)(v538 + 592) = vdupq_n_s64(0x101010101010101* (unint64_t)*((unsigned __int8 *)v15 + 11));
                                    *(int64x2_t *)(v538 + 128) = vdupq_n_s64(0x101010101010101 * v1006);
                                    *(void *)(v538 + 192) = 0;
                                    *(void *)(v538 + 200) = 0;
                                    v537.i64[0] = 0x101010101010101;
                                    v537.i64[1] = 0x101010101010101;
                                    *(int64x2_t *)(v538 + 224) = v537;
                                    *(int64x2_t *)(v538 + 160) = vdupq_n_s64(0x101010101010101* (unint64_t)*((unsigned __int8 *)v15 + 6));
                                    if (v1029) {
                                      uint64_t v536 = *((unsigned __int8 *)v15 + 12);
                                    }
                                    *(int64x2_t *)&v1030[v1035 + 8224] = vdupq_n_s64(0x101010101010101 * v536);
                                    if (*(unsigned char *)(*(void *)(v1032 + 24) + 232))
                                    {
                                      BOOL v539 = &v1030[v1035];
                                      *((void *)v539 + 36) = 0;
                                      *((void *)v539 + 37) = 0;
                                      *(void *)&long long v540 = -1;
                                      *((void *)&v540 + 1) = -1;
                                      *((_OWORD *)v539 + 20) = v540;
                                      *((_OWORD *)v539 + 22) = v540;
                                      *(void *)&long long v540 = 0x303030303030303;
                                      *((void *)&v540 + 1) = 0x303030303030303;
                                      *((_OWORD *)v539 + 24) = v540;
                                      *((_OWORD *)v539 + 26) = v540;
                                    }
                                  }
                                  else if (v985 == 32)
                                  {
                                    uint64_t v509 = v1035 + 32;
                                    uint64_t v510 = v1035 + 448;
                                    int64x2_t v511 = vdupq_n_s64(0x101010101010101 * (unint64_t)v1017[3]);
                                    *(int64x2_t *)&v1030[v510] = v511;
                                    uint64_t v512 = v1030 + 16;
                                    *(int64x2_t *)(v510 + v512) = v511;
                                    uint64_t v513 = v1035 + 480;
                                    *(int64x2_t *)&v1030[v513] = v511;
                                    *(int64x2_t *)(v513 + v512) = v511;
                                    int64x2_t v514 = vdupq_n_s64(0x101010101010101 * v502);
                                    *(int64x2_t *)&v1030[v509] = v514;
                                    *(int64x2_t *)(v509 + v512) = v514;
                                    uint64_t v515 = v1035 + 624;
                                    int64x2_t v516 = vdupq_n_s64(0x101010101010101 * (unint64_t)*((unsigned __int8 *)v15
                                                                                               + 11));
                                    *(int64x2_t *)&v1030[v515] = v516;
                                    *(int64x2_t *)(v515 + v512) = v516;
                                    uint64_t v517 = v1035 + 160;
                                    int64x2_t v518 = vdupq_n_s64(0x101010101010101 * v1006);
                                    *(int64x2_t *)&v1030[v517] = v518;
                                    *(int64x2_t *)(v517 + v512) = v518;
                                    uint64_t v519 = v1035 + 224;
                                    *(_OWORD *)&v1030[v519] = 0u;
                                    *(_OWORD *)(v519 + v512) = 0u;
                                    uint64_t v520 = v1035 + 256;
                                    v518.i64[0] = 0x101010101010101;
                                    v518.i64[1] = 0x101010101010101;
                                    *(int64x2_t *)&v1030[v520] = v518;
                                    *(int64x2_t *)(v520 + v512) = v518;
                                    uint64_t v521 = v1035 + 192;
                                    int64x2_t v522 = vdupq_n_s64(0x101010101010101 * (unint64_t)*((unsigned __int8 *)v15
                                                                                               + 6));
                                    *(int64x2_t *)&v1030[v521] = v522;
                                    *(int64x2_t *)(v521 + v512) = v522;
                                    uint64_t v523 = v1029 ? *((unsigned __int8 *)v15 + 12) : 0;
                                    unint64_t v541 = 0x101010101010101 * v523;
                                    uint64_t v542 = v1035 + 8224;
                                    int64x2_t v543 = vdupq_n_s64(v541);
                                    *(int64x2_t *)&v1030[v542] = v543;
                                    *(int64x2_t *)(v542 + v512) = v543;
                                    if (*(unsigned char *)(*(void *)(v1032 + 24) + 232))
                                    {
                                      uint64_t v544 = v1035 + 288;
                                      *(_OWORD *)&v1030[v544] = 0u;
                                      *(_OWORD *)(v544 + v512) = 0u;
                                      uint64_t v545 = v1035 + 320;
                                      *(void *)&long long v546 = -1;
                                      *((void *)&v546 + 1) = -1;
                                      *(_OWORD *)&v1030[v545] = v546;
                                      *(_OWORD *)(v545 + v512) = v546;
                                      uint64_t v547 = v1035 + 352;
                                      *(_OWORD *)&v1030[v547] = v546;
                                      *(_OWORD *)(v547 + v512) = v546;
                                      uint64_t v548 = v1035 + 384;
                                      *(void *)&long long v546 = 0x303030303030303;
                                      *((void *)&v546 + 1) = 0x303030303030303;
                                      *(_OWORD *)&v1030[v548] = v546;
                                      *(_OWORD *)(v548 + v512) = v546;
                                      uint64_t v549 = v1035 + 416;
                                      *(_OWORD *)&v1030[v549] = v546;
                                      *(_OWORD *)(v549 + v512) = v546;
                                    }
                                  }
                                  break;
                              }
                              switch((int)v174)
                              {
                                case 1:
                                  char v550 = 0;
                                  unsigned __int8 v551 = v1017[2];
                                  *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 416) = v551;
                                  *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 448) = v551;
                                  *(unsigned char *)(*(void *)(v1035 + 656) + v317) = v502;
                                  *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 592) = *((unsigned char *)v15 + 11);
                                  *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 128) = v504;
                                  *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 192) = 0;
                                  *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 224) = 1;
                                  *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 160) = *((unsigned char *)v15 + 6);
                                  if (v301) {
                                    char v550 = *((unsigned char *)v15 + 12);
                                  }
                                  *(unsigned char *)(v1035 + v317 + 0x2000) = v550;
                                  if (*(unsigned char *)(*(void *)(v11 + 24) + 232))
                                  {
                                    *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 256) = 0;
                                    *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 288) = -1;
                                    *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 320) = -1;
                                    *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 352) = 3;
                                    *(unsigned char *)(*(void *)(v1035 + 656) + v317 + 384) = 3;
                                  }
                                  break;
                                case 2:
                                  __int16 v564 = 0;
                                  __int16 v565 = v1017[2] | (v1017[2] << 8);
                                  *(_WORD *)(*(void *)(v1035 + 656) + v317 + 416) = v565;
                                  *(_WORD *)(*(void *)(v1035 + 656) + v317 + 448) = v565;
                                  *(_WORD *)(*(void *)(v1035 + 656) + v317) = v502 | ((_WORD)v502 << 8);
                                  *(_WORD *)(*(void *)(v1035 + 656) + v317 + 592) = *((unsigned __int8 *)v15 + 11) | (*((unsigned __int8 *)v15 + 11) << 8);
                                  *(_WORD *)(*(void *)(v1035 + 656) + v317 + 128) = 257 * v504;
                                  *(_WORD *)(*(void *)(v1035 + 656) + v317 + 192) = 0;
                                  *(_WORD *)(*(void *)(v1035 + 656) + v317 + 224) = 257;
                                  *(_WORD *)(*(void *)(v1035 + 656) + v317 + 160) = *((unsigned __int8 *)v15 + 6) | (*((unsigned __int8 *)v15 + 6) << 8);
                                  if (v301) {
                                    __int16 v564 = *((unsigned __int8 *)v15 + 12);
                                  }
                                  *(_WORD *)(v1035 + v317 + 0x2000) = v564 | (v564 << 8);
                                  if (*(unsigned char *)(*(void *)(v11 + 24) + 232))
                                  {
                                    *(_WORD *)(*(void *)(v1035 + 656) + v317 + 256) = 0;
                                    *(_WORD *)(*(void *)(v1035 + 656) + v317 + 288) = -1;
                                    *(_WORD *)(*(void *)(v1035 + 656) + v317 + 320) = -1;
                                    *(_WORD *)(*(void *)(v1035 + 656) + v317 + 352) = 771;
                                    *(_WORD *)(*(void *)(v1035 + 656) + v317 + 384) = 771;
                                  }
                                  break;
                                case 3:
                                case 5:
                                case 6:
                                case 7:
                                  break;
                                case 4:
                                  int v566 = 0;
                                  int v567 = 16843009 * v1017[2];
                                  *(_DWORD *)(*(void *)(v1035 + 656) + v317 + 416) = v567;
                                  *(_DWORD *)(*(void *)(v1035 + 656) + v317 + 448) = v567;
                                  *(_DWORD *)(*(void *)(v1035 + 656) + v317) = 16843009 * v502;
                                  *(_DWORD *)(*(void *)(v1035 + 656) + v317 + 592) = 16843009
                                                                                     * *((unsigned __int8 *)v15 + 11);
                                  *(_DWORD *)(*(void *)(v1035 + 656) + v317 + 128) = 16843009 * v504;
                                  *(_DWORD *)(*(void *)(v1035 + 656) + v317 + 192) = 0;
                                  *(_DWORD *)(*(void *)(v1035 + 656) + v317 + 224) = 16843009;
                                  *(_DWORD *)(*(void *)(v1035 + 656) + v317 + 160) = 16843009
                                                                                     * *((unsigned __int8 *)v15 + 6);
                                  if (v301) {
                                    int v566 = *((unsigned __int8 *)v15 + 12);
                                  }
                                  *(_DWORD *)(v1035 + v317 + 0x2000) = 16843009 * v566;
                                  if (*(unsigned char *)(*(void *)(v11 + 24) + 232))
                                  {
                                    *(_DWORD *)(*(void *)(v1035 + 656) + v317 + 256) = 0;
                                    *(_DWORD *)(*(void *)(v1035 + 656) + v317 + 288) = -1;
                                    *(_DWORD *)(*(void *)(v1035 + 656) + v317 + 320) = -1;
                                    *(_DWORD *)(*(void *)(v1035 + 656) + v317 + 352) = 50529027;
                                    *(_DWORD *)(*(void *)(v1035 + 656) + v317 + 384) = 50529027;
                                  }
                                  break;
                                case 8:
                                  uint64_t v568 = 0;
                                  uint64_t v569 = 0x101010101010101 * v1017[2];
                                  *(void *)(*(void *)(v1035 + 656) + v317 + 416) = v569;
                                  *(void *)(*(void *)(v1035 + 656) + v317 + 448) = v569;
                                  *(void *)(*(void *)(v1035 + 656) + v317) = 0x101010101010101 * v502;
                                  *(void *)(*(void *)(v1035 + 656) + v317 + 592) = 0x101010101010101
                                                                                     * *((unsigned __int8 *)v15 + 11);
                                  *(void *)(*(void *)(v1035 + 656) + v317 + 128) = 0x101010101010101 * v504;
                                  *(void *)(*(void *)(v1035 + 656) + v317 + 192) = 0;
                                  *(void *)(*(void *)(v1035 + 656) + v317 + 224) = 0x101010101010101;
                                  *(void *)(*(void *)(v1035 + 656) + v317 + 160) = 0x101010101010101
                                                                                     * *((unsigned __int8 *)v15 + 6);
                                  if (v301) {
                                    uint64_t v568 = *((unsigned __int8 *)v15 + 12);
                                  }
                                  *(void *)(v1035 + v317 + 0x2000) = 0x101010101010101 * v568;
                                  if (*(unsigned char *)(*(void *)(v11 + 24) + 232))
                                  {
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 256) = 0;
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 288) = -1;
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 320) = -1;
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 352) = 0x303030303030303;
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 384) = 0x303030303030303;
                                  }
                                  break;
                                default:
                                  if (v174 == 16)
                                  {
                                    uint64_t v570 = 0;
                                    uint64_t v571 = 0x101010101010101 * v1017[2];
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 416) = v571;
                                    uint64_t v572 = v317 + 8;
                                    *(void *)(*(void *)(v1035 + 656) + v572 + 416) = v571;
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 448) = v571;
                                    *(void *)(*(void *)(v1035 + 656) + v572 + 448) = v571;
                                    uint64_t v573 = 0x101010101010101 * v502;
                                    *(void *)(*(void *)(v1035 + 656) + v317) = v573;
                                    *(void *)(*(void *)(v1035 + 656) + v572) = v573;
                                    uint64_t v574 = 0x101010101010101 * *((unsigned __int8 *)v15 + 11);
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 592) = v574;
                                    *(void *)(*(void *)(v1035 + 656) + v572 + 592) = v574;
                                    uint64_t v575 = 0x101010101010101 * v504;
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 128) = v575;
                                    *(void *)(*(void *)(v1035 + 656) + v572 + 128) = v575;
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 192) = 0;
                                    *(void *)(*(void *)(v1035 + 656) + v572 + 192) = 0;
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 224) = 0x101010101010101;
                                    *(void *)(*(void *)(v1035 + 656) + v572 + 224) = 0x101010101010101;
                                    uint64_t v576 = 0x101010101010101 * *((unsigned __int8 *)v15 + 6);
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 160) = v576;
                                    *(void *)(*(void *)(v1035 + 656) + v572 + 160) = v576;
                                    if (v301) {
                                      uint64_t v570 = *((unsigned __int8 *)v15 + 12);
                                    }
                                    *(int64x2_t *)(v1035 + v317 + 0x2000) = vdupq_n_s64(0x101010101010101 * v570);
                                    if (*(unsigned char *)(*(void *)(v11 + 24) + 232))
                                    {
                                      *(void *)(*(void *)(v1035 + 656) + v317 + 256) = 0;
                                      *(void *)(*(void *)(v1035 + 656) + v572 + 256) = 0;
                                      *(void *)(*(void *)(v1035 + 656) + v317 + 288) = -1;
                                      *(void *)(*(void *)(v1035 + 656) + v572 + 288) = -1;
                                      *(void *)(*(void *)(v1035 + 656) + v317 + 320) = -1;
                                      *(void *)(*(void *)(v1035 + 656) + v572 + 320) = -1;
                                      *(void *)(*(void *)(v1035 + 656) + v317 + 352) = 0x303030303030303;
                                      *(void *)(*(void *)(v1035 + 656) + v572 + 352) = 0x303030303030303;
                                      *(void *)(*(void *)(v1035 + 656) + v317 + 384) = 0x303030303030303;
                                      *(void *)(*(void *)(v1035 + 656) + v572 + 384) = 0x303030303030303;
                                    }
                                  }
                                  else if (v174 == 32)
                                  {
                                    uint64_t v552 = 0;
                                    uint64_t v553 = 0x101010101010101 * v1017[2];
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 416) = v553;
                                    uint64_t v554 = v317 + 8;
                                    *(void *)(*(void *)(v1035 + 656) + v554 + 416) = v553;
                                    uint64_t v555 = v317 + 16;
                                    *(void *)(*(void *)(v1035 + 656) + v555 + 416) = v553;
                                    uint64_t v556 = v317 + 24;
                                    *(void *)(*(void *)(v1035 + 656) + v556 + 416) = v553;
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 448) = v553;
                                    *(void *)(*(void *)(v1035 + 656) + v554 + 448) = v553;
                                    *(void *)(*(void *)(v1035 + 656) + v555 + 448) = v553;
                                    *(void *)(*(void *)(v1035 + 656) + v556 + 448) = v553;
                                    uint64_t v557 = 0x101010101010101 * v502;
                                    *(void *)(*(void *)(v1035 + 656) + v317) = v557;
                                    *(void *)(*(void *)(v1035 + 656) + v554) = v557;
                                    *(void *)(*(void *)(v1035 + 656) + v555) = v557;
                                    *(void *)(*(void *)(v1035 + 656) + v556) = v557;
                                    uint64_t v558 = 0x101010101010101 * *((unsigned __int8 *)v15 + 11);
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 592) = v558;
                                    *(void *)(*(void *)(v1035 + 656) + v554 + 592) = v558;
                                    *(void *)(*(void *)(v1035 + 656) + v555 + 592) = v558;
                                    *(void *)(*(void *)(v1035 + 656) + v556 + 592) = v558;
                                    uint64_t v559 = 0x101010101010101 * v504;
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 128) = v559;
                                    *(void *)(*(void *)(v1035 + 656) + v554 + 128) = v559;
                                    *(void *)(*(void *)(v1035 + 656) + v555 + 128) = v559;
                                    *(void *)(*(void *)(v1035 + 656) + v556 + 128) = v559;
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 192) = 0;
                                    *(void *)(*(void *)(v1035 + 656) + v554 + 192) = 0;
                                    *(void *)(*(void *)(v1035 + 656) + v555 + 192) = 0;
                                    *(void *)(*(void *)(v1035 + 656) + v556 + 192) = 0;
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 224) = 0x101010101010101;
                                    *(void *)(*(void *)(v1035 + 656) + v554 + 224) = 0x101010101010101;
                                    *(void *)(*(void *)(v1035 + 656) + v555 + 224) = 0x101010101010101;
                                    *(void *)(*(void *)(v1035 + 656) + v556 + 224) = 0x101010101010101;
                                    uint64_t v560 = 0x101010101010101 * *((unsigned __int8 *)v15 + 6);
                                    *(void *)(*(void *)(v1035 + 656) + v317 + 160) = v560;
                                    *(void *)(*(void *)(v1035 + 656) + v554 + 160) = v560;
                                    *(void *)(*(void *)(v1035 + 656) + v555 + 160) = v560;
                                    *(void *)(*(void *)(v1035 + 656) + v556 + 160) = v560;
                                    if (v301) {
                                      uint64_t v552 = *((unsigned __int8 *)v15 + 12);
                                    }
                                    unint64_t v561 = 0x101010101010101 * v552;
                                    uint64_t v562 = v1035 + 0x2000;
                                    int64x2_t v563 = vdupq_n_s64(v561);
                                    *(int64x2_t *)(v562 + v317) = v563;
                                    *(int64x2_t *)(v562 + v555) = v563;
                                    if (*(unsigned char *)(*(void *)(v11 + 24) + 232))
                                    {
                                      *(void *)(*(void *)(v1035 + 656) + v317 + 256) = 0;
                                      *(void *)(*(void *)(v1035 + 656) + v554 + 256) = 0;
                                      *(void *)(*(void *)(v1035 + 656) + v555 + 256) = 0;
                                      *(void *)(*(void *)(v1035 + 656) + v556 + 256) = 0;
                                      *(void *)(*(void *)(v1035 + 656) + v317 + 288) = -1;
                                      *(void *)(*(void *)(v1035 + 656) + v554 + 288) = -1;
                                      *(void *)(*(void *)(v1035 + 656) + v555 + 288) = -1;
                                      *(void *)(*(void *)(v1035 + 656) + v556 + 288) = -1;
                                      *(void *)(*(void *)(v1035 + 656) + v317 + 320) = -1;
                                      *(void *)(*(void *)(v1035 + 656) + v554 + 320) = -1;
                                      *(void *)(*(void *)(v1035 + 656) + v555 + 320) = -1;
                                      *(void *)(*(void *)(v1035 + 656) + v556 + 320) = -1;
                                      *(void *)(*(void *)(v1035 + 656) + v317 + 352) = 0x303030303030303;
                                      *(void *)(*(void *)(v1035 + 656) + v554 + 352) = 0x303030303030303;
                                      *(void *)(*(void *)(v1035 + 656) + v555 + 352) = 0x303030303030303;
                                      *(void *)(*(void *)(v1035 + 656) + v556 + 352) = 0x303030303030303;
                                      *(void *)(*(void *)(v1035 + 656) + v317 + 384) = 0x303030303030303;
                                      *(void *)(*(void *)(v1035 + 656) + v554 + 384) = 0x303030303030303;
                                      *(void *)(*(void *)(v1035 + 656) + v555 + 384) = 0x303030303030303;
                                      *(void *)(*(void *)(v1035 + 656) + v556 + 384) = 0x303030303030303;
                                    }
                                  }
                                  break;
                              }
                              unsigned int v577 = v301;
                              if (*((unsigned char *)v15 + 11))
                              {
                                (*(void (**)(uint64_t, uint64_t, unsigned __int8 *, unint64_t, void))(v11 + 3368))(v1035, v317, v300, v174, v985);
                                unsigned int v301 = v577;
                              }
                              if (v301)
                              {
                                switch(v1019)
                                {
                                  case 1:
                                    *(unsigned char *)(v1035 + v1021 + 592) = *((unsigned char *)v15 + 9);
                                    break;
                                  case 2:
                                    *(_WORD *)(v1035 + v1021 + 592) = *((unsigned __int8 *)v15 + 9) | (*((unsigned __int8 *)v15 + 9) << 8);
                                    break;
                                  case 3:
                                  case 5:
                                  case 6:
                                  case 7:
                                    break;
                                  case 4:
                                    *(_DWORD *)(v1035 + v1021 + 592) = 16843009 * *((unsigned __int8 *)v15 + 9);
                                    break;
                                  case 8:
                                    *(void *)(v1035 + v1021 + 592) = 0x101010101010101
                                                                     * *((unsigned __int8 *)v15 + 9);
                                    break;
                                  default:
                                    if (v1019 == 16)
                                    {
                                      *(int64x2_t *)(v1035 + v1021 + 592) = vdupq_n_s64(0x101010101010101* (unint64_t)*((unsigned __int8 *)v15+ 9));
                                    }
                                    else if (v1019 == 32)
                                    {
                                      int64x2_t v578 = vdupq_n_s64(0x101010101010101 * (unint64_t)*((unsigned __int8 *)v15
                                                                                                 + 9));
                                      *(int64x2_t *)(v1035 + 592 + v1021) = v578;
                                      *(int64x2_t *)(v1035 + 592 + v1021 + 16) = v578;
                                    }
                                    break;
                                }
                                switch(v503)
                                {
                                  case 1:
                                    *(unsigned char *)(*(void *)(v1035 + 656) + v1022 + 560) = *((unsigned char *)v15 + 9);
                                    goto LABEL_740;
                                  case 2:
                                    *(_WORD *)(*(void *)(v1035 + 656) + v1022 + 560) = *((unsigned __int8 *)v15 + 9) | (*((unsigned __int8 *)v15 + 9) << 8);
                                    goto LABEL_740;
                                  case 3:
                                  case 5:
                                  case 6:
                                  case 7:
                                    goto LABEL_740;
                                  case 4:
                                    *(_DWORD *)(*(void *)(v1035 + 656) + v1022 + 560) = 16843009
                                                                                          * *((unsigned __int8 *)v15 + 9);
                                    goto LABEL_740;
                                  case 8:
                                    uint64_t v579 = 0x101010101010101 * *((unsigned __int8 *)v15 + 9);
                                    uint64_t v582 = *(void *)(v1035 + 656) + v1022;
                                    goto LABEL_739;
                                  default:
                                    if (v503 == 16)
                                    {
                                      uint64_t v579 = 0x101010101010101 * *((unsigned __int8 *)v15 + 9);
                                      *(void *)(*(void *)(v1035 + 656) + v1022 + 560) = v579;
                                      uint64_t v580 = *(void *)(v1035 + 656);
                                      uint64_t v581 = v1022 + 8;
                                    }
                                    else
                                    {
                                      if (v503 != 32) {
                                        goto LABEL_740;
                                      }
                                      uint64_t v579 = 0x101010101010101 * *((unsigned __int8 *)v15 + 9);
                                      *(void *)(*(void *)(v1035 + 656) + v1022 + 560) = v579;
                                      *(void *)(*(void *)(v1035 + 656) + v1022 + 8 + 560) = v579;
                                      *(void *)(*(void *)(v1035 + 656) + v1022 + 16 + 560) = v579;
                                      uint64_t v580 = *(void *)(v1035 + 656);
                                      uint64_t v581 = v1022 + 24;
                                    }
                                    uint64_t v582 = v580 + v581;
LABEL_739:
                                    *(void *)(v582 + 560) = v579;
LABEL_740:
                                    if (*((unsigned char *)v15 + 12))
                                    {
                                      (*(void (**)(uint64_t, uint64_t, unsigned __int8 *, unint64_t, void))(v11 + 3376))(v1035, v317, v300, v174, v985);
                                      unsigned int v301 = v577;
                                    }
                                    break;
                                }
                              }
                              uint64_t v583 = *(void *)(v11 + 24);
                              if ((*(unsigned char *)(v583 + 232) & 1) != 0 || *(unsigned char *)(v583 + 419))
                              {
                                uint64_t v584 = *(void *)(v11 + 3256);
                                uint64_t v1040 = 2147516416;
                                LOWORD(v1041) = -256;
                                HIWORD(v1041) = v1034;
                                (*(void (**)(uint64_t, uint64_t *, void, unint64_t, void))(v584 + 63016))(v1035 + 8 * (*(_DWORD *)(v1035 + 28) & 0x1FLL) + 712, &v1040, *(unsigned int *)(v1035 + 24), v174, v985);
                                unsigned int v301 = v577;
                              }
                              char v299 = v1031;
                              uint64_t v302 = v1025;
                              signed int v297 = v503;
                              goto LABEL_1039;
                            }
                            if (*(unsigned char *)(*(void *)(v1032 + 8) + 393))
                            {
                              sub_224AADEFC(v321, &v332[341].u32[v1034 + 2]);
                              char v332 = (int8x16_t *)v1031;
                              if (v384)
                              {
                                *((unsigned char *)v15 + 8) = 13;
                                char v385 = sub_224AAD9A0(v321, v1031 + 420, 4, v323, v324, v325, v326, v327);
                                char v332 = (int8x16_t *)v1031;
                                *((unsigned char *)v15 + 13) = v385;
                              }
                            }
                          }
                          if (!*((unsigned char *)v15 + 11)) {
                            goto LABEL_510;
                          }
                          goto LABEL_506;
                        }
                      }
LABEL_327:
                      int v218 = *(unsigned char **)(v11 + 24);
                      if ((v218[232] & 1) == 0)
                      {
                        v1037[0] = 0;
                        unsigned int v1036 = 0;
                        sub_224ABC22C((uint64_t *)(v1035 + 664), &v1040, v1037, (int *)&v1036, 65280, v1034, v1027, *(_DWORD *)(v1035 + 28), *(_DWORD *)(v1035 + 24));
                        if (v1040)
                        {
                          *((_DWORD *)v15 + 2) = v1040;
                          unsigned int v224 = v1029;
                          int v225 = v1031;
                        }
                        else
                        {
                          unsigned int v224 = v1029;
                          int v225 = v1031;
                          if (v1042)
                          {
                            *((_DWORD *)v15 + 2) = v1042;
                          }
                          else
                          {
                            char v262 = *(unsigned char *)(*(void *)(v11 + 8) + 392);
                            if ((-16 << v262) + *(_DWORD *)(v1035 + 28) >= v1031[1734].i32[0])
                            {
                              *((_DWORD *)v15 + 2) = (unsigned __int16)(-512 << v262);
                            }
                            else
                            {
                              *((_WORD *)v15 + 4) = 0;
                              *((_WORD *)v15 + 5) = (-512 << *(unsigned char *)(*(void *)(v11 + 8) + 392)) - 2048;
                            }
                          }
                        }
                        sub_224ADD848(v1035, (_WORD *)v15 + 4, v225 + 1692, 0, v219, v220, v221, v222, v223);
                        int v269 = 4 * v1031[1733].i32[0];
                        int v270 = 4 * v1031[1734].i32[0];
                        if (v224)
                        {
                          BOOL v271 = v1007 == 3 || v174 >= 2;
                          if (!v271) {
                            v269 += 4;
                          }
                          if (v1007 == 1 && v19 < 2) {
                            v270 += 4;
                          }
                        }
                        int v273 = *(_DWORD *)(v1035 + 24);
                        int v274 = *(_DWORD *)(v1035 + 28);
                        int v275 = *((__int16 *)v15 + 5);
                        int v276 = 4 * v273 + (v275 >> 3);
                        int v277 = *((__int16 *)v15 + 4);
                        int v278 = 4 * v274 + (v277 >> 3);
                        int v279 = 4 * (v273 + v174) + (v275 >> 3);
                        int v280 = 4 * (v274 + v19) + (v277 >> 3);
                        if (v269 <= v276)
                        {
                          int v281 = 4 * ((v174 + v1031[1733].i32[1] - 1) & -(int)v174);
                          if (v279 > v281)
                          {
                            int v276 = v276 - v279 + v281;
                            int v279 = 4 * ((v174 + v1031[1733].i32[1] - 1) & -(int)v174);
                          }
                        }
                        else
                        {
                          v279 += v269 - v276;
                          int v276 = v269;
                        }
                        int v282 = v270 - v278;
                        if (v270 <= v278) {
                          int v282 = 0;
                        }
                        int v283 = v280 + v282;
                        if (v278 <= v270) {
                          int v278 = v270;
                        }
                        char v284 = *(unsigned char *)(*(void *)(v11 + 8) + 392);
                        int v285 = v273 >> (v284 + 4) << (v284 + 6);
                        int v286 = v274 >> (v284 + 4) << (v284 + 6);
                        int v287 = 64 << v284;
                        int v288 = v283 - v286;
                        if (v283 <= v286 || (int v289 = v279 - v285, v279 <= v285))
                        {
                          int v290 = v28;
                        }
                        else
                        {
                          int v290 = v28;
                          if (v278 - v270 >= v288)
                          {
                            LOWORD(v278) = v278 - v288;
                            int v283 = v286;
                          }
                          else
                          {
                            if (v276 - v269 < v289)
                            {
                              __int16 v291 = 0;
                            }
                            else
                            {
                              int v279 = v285;
                              __int16 v291 = v289;
                            }
                            LOWORD(v276) = v276 - v291;
                          }
                        }
                        int v292 = v286 + v287;
                        if (v283 >= v286 + v287) {
                          int v293 = v286 + v287;
                        }
                        else {
                          int v293 = v283;
                        }
                        if (v293 > v286 && v279 > v285) {
                          return 0xFFFFFFFFLL;
                        }
                        __int16 v294 = v292 - v283;
                        if (v292 >= v283) {
                          __int16 v294 = 0;
                        }
                        *((_WORD *)v15 + 5) = 8 * v276 - 32 * v273;
                        *((_WORD *)v15 + 4) = 8 * (v278 + v294) - 32 * *(_WORD *)(v1035 + 28);
                        sub_224ADD920(v1035, (uint64_t)v15, v1034, v1033, v1030);
                        if (*(_DWORD *)(v1023 + 68) == 1)
                        {
                          (*(void (**)(uint64_t, void, _OWORD *))(v11 + 3360))(v1035, v1034, v15);
                          *((unsigned char *)v15 + 27) = 9;
                        }
                        else if ((*(unsigned int (**)(uint64_t, void, _OWORD *))(v11 + 3296))(v1035, v1034, v15))
                        {
                          return 0xFFFFFFFFLL;
                        }
                        uint64_t v295 = *(void *)(v11 + 3256);
                        *(void *)&long long v1039 = *((unsigned int *)v15 + 2);
                        WORD4(v1039) = -256;
                        WORD5(v1039) = v1034;
                        (*(void (**)(uint64_t, long long *, void, unint64_t, unint64_t))(v295 + 63016))(v1035 + 8 * (*(_DWORD *)(v1035 + 28) & 0x1FLL) + 712, &v1039, *(unsigned int *)(v1035 + 24), v174, v19);
                        uint64_t v296 = v1023;
                        signed int v297 = v290;
                        int v298 = v1006;
                        LODWORD(v300) = v1030;
                        char v299 = v1031;
                        unsigned int v301 = v224;
                        uint64_t v302 = v1025;
                        switch((int)v19)
                        {
                          case 1:
                            unint64_t v303 = &v1030[v1035];
                            v303[448] = v1025[3];
                            v303[32] = 0;
                            v303[8224] = 0;
                            v303[624] = 0;
                            v303[160] = v1006;
                            v303[224] = 0;
                            v303[256] = 0;
                            v303[192] = *((unsigned char *)v15 + 6);
                            break;
                          case 2:
                            long long v352 = &v1030[v1035];
                            *((_WORD *)v352 + 224) = v1025[3] | (v1025[3] << 8);
                            *((_WORD *)v352 + 16) = 0;
                            *((_WORD *)v352 + 312) = 0;
                            *((_WORD *)v352 + 4112) = 0;
                            *((_WORD *)v352 + 80) = 257 * v1006;
                            *((_WORD *)v352 + 112) = 0;
                            *((_WORD *)v352 + 128) = 0;
                            *((_WORD *)v352 + 96) = *((unsigned __int8 *)v15 + 6) | (*((unsigned __int8 *)v15 + 6) << 8);
                            break;
                          case 3:
                          case 5:
                          case 6:
                          case 7:
                            break;
                          case 4:
                            int v353 = 16843009 * v1025[3];
                            *(_DWORD *)&v1030[v1035 + 32] = 0;
                            long long v354 = &v1030[v1035 + 32];
                            *((_DWORD *)v354 + 104) = v353;
                            *((_DWORD *)v354 + 148) = 0;
                            *((_DWORD *)v354 + 2048) = 0;
                            *((_DWORD *)v354 + 32) = 16843009 * v1006;
                            *((_DWORD *)v354 + 48) = 0;
                            *((_DWORD *)v354 + 56) = 0;
                            *((_DWORD *)v354 + 40) = 16843009 * *((unsigned __int8 *)v15 + 6);
                            break;
                          case 8:
                            uint64_t v355 = 0x101010101010101 * v1025[3];
                            *(void *)&v1030[v1035 + 32] = 0;
                            char v356 = &v1030[v1035 + 32];
                            *((void *)v356 + 52) = v355;
                            *((void *)v356 + 74) = 0;
                            *((void *)v356 + 1024) = 0;
                            *((void *)v356 + 16) = 0x101010101010101 * v1006;
                            *((void *)v356 + 24) = 0;
                            *((void *)v356 + 28) = 0;
                            *((void *)v356 + 20) = 0x101010101010101 * *((unsigned __int8 *)v15 + 6);
                            break;
                          default:
                            uint64_t v296 = v1023;
                            signed int v297 = v290;
                            unsigned int v301 = v1025;
                            if (v19 == 16)
                            {
                              uint64_t v302 = v1030;
                              int64x2_t v357 = vdupq_n_s64(0x101010101010101 * (unint64_t)v1030[3]);
                              LODWORD(v300) = v1030;
                              char v299 = v1031;
                              *(_OWORD *)&v1030[v1035 + 32] = 0u;
                              uint64_t v358 = (uint64_t)&v1030[v1035 + 32];
                              *(int64x2_t *)(v358 + 416) = v357;
                              *(_OWORD *)(v358 + 592) = 0u;
                              *(_OWORD *)(v358 + 0x2000) = 0u;
                              int v298 = v1006;
                              *(int64x2_t *)(v358 + 128) = vdupq_n_s64(0x101010101010101 * v1006);
                              *(_OWORD *)(v358 + 192) = 0u;
                              *(_OWORD *)(v358 + 224) = 0u;
                              *(int64x2_t *)(v358 + 160) = vdupq_n_s64(0x101010101010101* (unint64_t)*((unsigned __int8 *)v15 + 6));
                            }
                            else
                            {
                              uint64_t v302 = v1030;
                              int v298 = v1006;
                              LODWORD(v300) = v1030;
                              char v299 = v1031;
                              if (v19 == 32)
                              {
                                uint64_t v304 = v1035 + 32;
                                uint64_t v305 = v1035 + 448;
                                int64x2_t v306 = vdupq_n_s64(0x101010101010101 * (unint64_t)v1030[3]);
                                *(int64x2_t *)&v1030[v305] = v306;
                                uint64_t v307 = v1030 + 16;
                                *(int64x2_t *)(v305 + v307) = v306;
                                *(_OWORD *)&v1030[v304] = 0u;
                                *(_OWORD *)(v304 + v307) = 0u;
                                uint64_t v308 = v1035 + 624;
                                *(_OWORD *)&v1030[v308] = 0u;
                                *(_OWORD *)(v308 + v307) = 0u;
                                uint64_t v309 = v1035 + 8224;
                                *(_OWORD *)&v1030[v309] = 0u;
                                *(_OWORD *)(v309 + v307) = 0u;
                                uint64_t v310 = v1035 + 160;
                                int64x2_t v311 = vdupq_n_s64(0x101010101010101 * v1006);
                                *(int64x2_t *)&v1030[v310] = v311;
                                *(int64x2_t *)(v310 + v307) = v311;
                                uint64_t v312 = v1035 + 224;
                                *(_OWORD *)&v1030[v312] = 0u;
                                *(_OWORD *)(v312 + v307) = 0u;
                                uint64_t v313 = v1035 + 256;
                                *(_OWORD *)&v1030[v313] = 0u;
                                *(_OWORD *)(v313 + v307) = 0u;
                                uint64_t v314 = v1035 + 192;
                                int64x2_t v315 = vdupq_n_s64(0x101010101010101 * (unint64_t)*((unsigned __int8 *)v15 + 6));
                                *(int64x2_t *)&v1030[v314] = v315;
                                *(int64x2_t *)(v314 + v307) = v315;
                              }
                            }
                            break;
                        }
                        switch((int)v174)
                        {
                          case 1:
                            *(unsigned char *)(*(void *)(v1035 + 656) + v1033 + 416) = v302[2];
                            *(unsigned char *)(*(void *)(v1035 + 656) + v1033) = 0;
                            *(unsigned char *)(*(void *)(v1035 + 656) + v1033 + 592) = 0;
                            *(unsigned char *)(v1035 + v1033 + 0x2000) = 0;
                            *(unsigned char *)(*(void *)(v1035 + 656) + v1033 + 128) = v298;
                            *(unsigned char *)(*(void *)(v1035 + 656) + v1033 + 192) = 0;
                            *(unsigned char *)(*(void *)(v1035 + 656) + v1033 + 224) = 0;
                            *(unsigned char *)(*(void *)(v1035 + 656) + v1033 + 160) = *((unsigned char *)v15 + 6);
                            goto LABEL_479;
                          case 2:
                            *(_WORD *)(*(void *)(v1035 + 656) + v1033 + 416) = v302[2] | (v302[2] << 8);
                            *(_WORD *)(*(void *)(v1035 + 656) + v1033) = 0;
                            *(_WORD *)(*(void *)(v1035 + 656) + v1033 + 592) = 0;
                            *(_WORD *)(v1035 + v1033 + 0x2000) = 0;
                            *(_WORD *)(*(void *)(v1035 + 656) + v1033 + 128) = 257 * v298;
                            *(_WORD *)(*(void *)(v1035 + 656) + v1033 + 192) = 0;
                            *(_WORD *)(*(void *)(v1035 + 656) + v1033 + 224) = 0;
                            *(_WORD *)(*(void *)(v1035 + 656) + v1033 + 160) = *((unsigned __int8 *)v15 + 6) | (*((unsigned __int8 *)v15 + 6) << 8);
                            goto LABEL_479;
                          case 3:
                          case 5:
                          case 6:
                          case 7:
                            goto LABEL_479;
                          case 4:
                            *(_DWORD *)(*(void *)(v1035 + 656) + v1033 + 416) = 16843009 * v302[2];
                            *(_DWORD *)(*(void *)(v1035 + 656) + v1033) = 0;
                            *(_DWORD *)(*(void *)(v1035 + 656) + v1033 + 592) = 0;
                            *(_DWORD *)(v1035 + v1033 + 0x2000) = 0;
                            *(_DWORD *)(*(void *)(v1035 + 656) + v1033 + 128) = 16843009 * v298;
                            *(_DWORD *)(*(void *)(v1035 + 656) + v1033 + 192) = 0;
                            *(_DWORD *)(*(void *)(v1035 + 656) + v1033 + 224) = 0;
                            *(_DWORD *)(*(void *)(v1035 + 656) + v1033 + 160) = 16843009
                                                                                * *((unsigned __int8 *)v15 + 6);
                            goto LABEL_479;
                          case 8:
                            *(void *)(*(void *)(v1035 + 656) + v1033 + 416) = 0x101010101010101 * v302[2];
                            *(void *)(*(void *)(v1035 + 656) + v1033) = 0;
                            *(void *)(*(void *)(v1035 + 656) + v1033 + 592) = 0;
                            *(void *)(v1035 + v1033 + 0x2000) = 0;
                            *(void *)(*(void *)(v1035 + 656) + v1033 + 128) = 0x101010101010101 * v298;
                            *(void *)(*(void *)(v1035 + 656) + v1033 + 192) = 0;
                            *(void *)(*(void *)(v1035 + 656) + v1033 + 224) = 0;
                            uint64_t v365 = 0x101010101010101 * *((unsigned __int8 *)v15 + 6);
                            uint64_t v367 = *(void *)(v1035 + 656) + v1033;
                            goto LABEL_478;
                          default:
                            if (v174 == 16)
                            {
                              uint64_t v368 = 0x101010101010101 * v302[2];
                              *(void *)(*(void *)(v1035 + 656) + v1033 + 416) = v368;
                              uint64_t v362 = v1033 + 8;
                              *(void *)(*(void *)(v1035 + 656) + v362 + 416) = v368;
                              *(void *)(*(void *)(v1035 + 656) + v1033) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v362) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v1033 + 592) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v362 + 592) = 0;
                              uint64_t v369 = v1035 + v1033;
                              *(void *)(v369 + 8200) = 0;
                              *(void *)(v369 + 0x2000) = 0;
                              uint64_t v370 = 0x101010101010101 * v298;
                              *(void *)(*(void *)(v1035 + 656) + v1033 + 128) = v370;
                              *(void *)(*(void *)(v1035 + 656) + v362 + 128) = v370;
                              *(void *)(*(void *)(v1035 + 656) + v1033 + 192) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v362 + 192) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v1033 + 224) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v362 + 224) = 0;
                              uint64_t v365 = 0x101010101010101 * *((unsigned __int8 *)v15 + 6);
                              *(void *)(*(void *)(v1035 + 656) + v1033 + 160) = v365;
                              uint64_t v366 = *(void *)(v1035 + 656);
                            }
                            else
                            {
                              if (v174 != 32) {
                                goto LABEL_479;
                              }
                              uint64_t v359 = 0x101010101010101 * v302[2];
                              *(void *)(*(void *)(v1035 + 656) + v1033 + 416) = v359;
                              uint64_t v360 = v1033 + 8;
                              *(void *)(*(void *)(v1035 + 656) + v360 + 416) = v359;
                              uint64_t v361 = v1033 + 16;
                              *(void *)(*(void *)(v1035 + 656) + v361 + 416) = v359;
                              uint64_t v362 = v1033 + 24;
                              *(void *)(*(void *)(v1035 + 656) + v362 + 416) = v359;
                              *(void *)(*(void *)(v1035 + 656) + v1033) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v360) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v361) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v362) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v1033 + 592) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v360 + 592) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v361 + 592) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v362 + 592) = 0;
                              uint64_t v363 = v1035 + 0x2000;
                              *(_OWORD *)(v363 + v1033) = 0u;
                              *(_OWORD *)(v363 + v361) = 0u;
                              uint64_t v364 = 0x101010101010101 * v298;
                              *(void *)(*(void *)(v1035 + 656) + v1033 + 128) = v364;
                              *(void *)(*(void *)(v1035 + 656) + v360 + 128) = v364;
                              *(void *)(*(void *)(v1035 + 656) + v361 + 128) = v364;
                              *(void *)(*(void *)(v1035 + 656) + v362 + 128) = v364;
                              *(void *)(*(void *)(v1035 + 656) + v1033 + 192) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v360 + 192) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v361 + 192) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v362 + 192) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v1033 + 224) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v360 + 224) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v361 + 224) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v362 + 224) = 0;
                              uint64_t v365 = 0x101010101010101 * *((unsigned __int8 *)v15 + 6);
                              *(void *)(*(void *)(v1035 + 656) + v1033 + 160) = v365;
                              *(void *)(*(void *)(v1035 + 656) + v360 + 160) = v365;
                              *(void *)(*(void *)(v1035 + 656) + v361 + 160) = v365;
                              uint64_t v366 = *(void *)(v1035 + 656);
                            }
                            uint64_t v367 = v366 + v362;
LABEL_478:
                            *(void *)(v367 + 160) = v365;
LABEL_479:
                            if (v301)
                            {
                              switch(v1019)
                              {
                                case 1:
                                  *(unsigned char *)(v1035 + v1021 + 592) = 0;
                                  break;
                                case 2:
                                  *(_WORD *)(v1035 + v1021 + 592) = 0;
                                  break;
                                case 3:
                                case 5:
                                case 6:
                                case 7:
                                  break;
                                case 4:
                                  *(_DWORD *)(v1035 + v1021 + 592) = 0;
                                  break;
                                case 8:
                                  uint64_t v477 = v1035 + v1021;
                                  goto LABEL_747;
                                default:
                                  if (v1019 == 16)
                                  {
                                    uint64_t v477 = v1035 + v1021;
                                    *(void *)(v477 + 600) = 0;
LABEL_747:
                                    *(void *)(v477 + 592) = 0;
                                  }
                                  else if (v1019 == 32)
                                  {
                                    *(_OWORD *)(v1035 + 592 + v1021) = 0u;
                                    *(_OWORD *)(v1035 + 592 + v1021 + 16) = 0u;
                                  }
                                  break;
                              }
                              switch(v297)
                              {
                                case 1:
                                  goto LABEL_1029;
                                case 2:
                                  goto LABEL_1033;
                                case 3:
                                case 5:
                                case 6:
                                case 7:
                                  goto LABEL_1039;
                                case 4:
                                  goto LABEL_1034;
                                case 8:
                                  goto LABEL_1035;
                                default:
                                  goto LABEL_1030;
                              }
                            }
                            break;
                        }
LABEL_1039:
                        uint64_t v844 = *(void *)(v11 + 24);
                        if (*(unsigned char *)(v844 + 722) && *(unsigned char *)(v844 + 723))
                        {
                          uint64_t v845 = *(void *)(v11 + 2816)
                               + *(int *)(v1035 + 24)
                               + *(void *)(v11 + 3432) * *(int *)(v1035 + 28);
                          switch((int)v174)
                          {
                            case 1:
                              if (!v19) {
                                break;
                              }
                              int v846 = v19;
                              do
                              {
                                *(unsigned char *)uint64_t v845 = *((unsigned char *)v15 + 4);
                                v845 += *(void *)(v11 + 3432);
                                --v846;
                              }
                              while (v846);
                              goto LABEL_1067;
                            case 2:
                              if (!v19) {
                                break;
                              }
                              int v849 = v19;
                              do
                              {
                                *(_WORD *)uint64_t v845 = *((unsigned __int8 *)v15 + 4) | (*((unsigned __int8 *)v15 + 4) << 8);
                                v845 += *(void *)(v11 + 3432);
                                --v849;
                              }
                              while (v849);
                              goto LABEL_1067;
                            case 3:
                            case 5:
                            case 6:
                            case 7:
                              goto LABEL_1067;
                            case 4:
                              if (!v19) {
                                break;
                              }
                              int v850 = v19;
                              do
                              {
                                *(_DWORD *)uint64_t v845 = 16843009 * *((unsigned __int8 *)v15 + 4);
                                v845 += *(void *)(v11 + 3432);
                                --v850;
                              }
                              while (v850);
                              goto LABEL_1067;
                            case 8:
                              if (!v19) {
                                break;
                              }
                              int v851 = v19;
                              do
                              {
                                *(void *)uint64_t v845 = 0x101010101010101 * *((unsigned __int8 *)v15 + 4);
                                v845 += *(void *)(v11 + 3432);
                                --v851;
                              }
                              while (v851);
                              goto LABEL_1067;
                            default:
                              if (v174 == 16)
                              {
                                if (!v19) {
                                  break;
                                }
                                int v852 = v19;
                                do
                                {
                                  uint64_t v853 = 0x101010101010101 * *((unsigned __int8 *)v15 + 4);
                                  *(void *)uint64_t v845 = v853;
                                  *(void *)(v845 + 8) = v853;
                                  v845 += *(void *)(v11 + 3432);
                                  --v852;
                                }
                                while (v852);
                                goto LABEL_1067;
                              }
                              if (v174 != 32) {
                                goto LABEL_1067;
                              }
                              if (v19)
                              {
                                int v847 = v19;
                                do
                                {
                                  uint64_t v848 = 0x101010101010101 * *((unsigned __int8 *)v15 + 4);
                                  *(void *)uint64_t v845 = v848;
                                  *(void *)(v845 + 8) = v848;
                                  *(void *)(v845 + 16) = v848;
                                  *(void *)(v845 + 24) = v848;
                                  v845 += *(void *)(v11 + 3432);
                                  --v847;
                                }
                                while (v847);
                                goto LABEL_1067;
                              }
                              break;
                          }
                        }
                        else
                        {
LABEL_1067:
                          if (*((unsigned char *)v15 + 6)) {
                            BOOL v854 = 1;
                          }
                          else {
                            BOOL v854 = v19 == 0;
                          }
                          if (!v854)
                          {
                            uint64_t v855 = 0;
                            unsigned int v856 = 0xFFFFFFFF >> -(char)v174 << (v1024 & 0xF);
                            uint64_t v857 = *(void *)(v296 + 40);
                            do
                            {
                              uint64_t v859 = ((4 * (v300 >> 1)) | (2 * ((v1024 >> 4) & 1)))
                                   + v857
                                   + 1284;
                              *(_WORD *)(v859 + 2 * v855) |= v856;
                              if (v174 == 32)
                              {
                                uint64_t v858 = v857 + 4 * (v300 >> 1) + 1286;
                                *(_WORD *)(v858 + 2 * v855) |= v856;
                              }
                              v855 += 2;
                            }
                            while (v855 < v19);
                          }
                        }
                        if (*(_DWORD *)(v296 + 68) != 1) {
                          return 0;
                        }
                        if (*v999) {
                          return 0;
                        }
                        uint64_t v860 = *(void *)(v11 + 24);
                        if ((*(unsigned char *)(v860 + 232) & 1) == 0) {
                          return 0;
                        }
                        signed int v861 = v297;
                        unsigned int v862 = v301;
                        int v863 = *(_DWORD *)(v1035 + 28);
                        uint64_t v864 = *(void *)&v299[1743] + 56 * ((v863 - v299[1734].i32[0]) >> *(_DWORD *)(v11 + 3468));
                        if (*((unsigned char *)v15 + 20))
                        {
                          uint64_t v865 = 0;
                          v866 = (char *)v15 + 8;
                          char v867 = 1;
                          do
                          {
                            char v868 = v867;
                            uint64_t v869 = *((char *)v15 + v865 + 24);
                            if (*((unsigned char *)v15 + 21) == 6 && *(unsigned char *)(v1032 + v869 + 3056)) {
                              sub_224ADF610(v1035, (signed int *)(v864 + 8 * v869), v302, (int *)(*(void *)(v1032 + 24) + 36 * *((char *)v15 + v865 + 24) + 896));
                            }
                            else {
                              sub_224ADF694((int *)(v864 + 8 * v869), *(_DWORD *)(v1035 + 28), v19, *(__int16 *)&v866[4 * v865], 0, (int *)(v1032 + 16 * v869 + 3136));
                            }
                            char v867 = 0;
                            uint64_t v865 = 1;
                          }
                          while ((v868 & 1) != 0);
                          if (v862)
                          {
                            uint64_t v870 = 0;
                            if (v861 >= v1019) {
                              unsigned int v871 = v1019;
                            }
                            else {
                              unsigned int v871 = v861;
                            }
                            char v872 = 1;
                            do
                            {
                              char v873 = v872;
                              uint64_t v874 = *((char *)v15 + v870 + 24);
                              BOOL v875 = *((unsigned char *)v15 + 21) == 6 && v871 >= 2;
                              if (v875 && *(unsigned char *)(v1032 + v874 + 3056)) {
                                sub_224ADF9F0(v1035, (signed int *)(v864 + 8 * v874 + 4), v302, (int *)(*(void *)(v1032 + 24) + 36 * *((char *)v15 + v870 + 24) + 896));
                              }
                              else {
                                sub_224ADF694((int *)(v864 + 8 * v874 + 4), *(_DWORD *)(v1035 + 28), v19, *(__int16 *)&v866[4 * v870], v1005, (int *)(v1032 + 16 * v874 + 3136));
                              }
                              char v872 = 0;
                              uint64_t result = 0;
                              uint64_t v870 = 1;
                            }
                            while ((v873 & 1) != 0);
                            return result;
                          }
                          return 0;
                        }
                        if ((int)v174 >= (int)v19) {
                          unsigned int v876 = v19;
                        }
                        else {
                          unsigned int v876 = v174;
                        }
                        if (v876 >= 2)
                        {
                          if (*((unsigned char *)v15 + 21) == 2)
                          {
                            uint64_t v877 = *((char *)v15 + 24);
                            if (*(unsigned char *)(v11 + v877 + 3056))
                            {
                              v878 = (signed int *)(v864 + 8 * v877);
                              if (*((unsigned char *)v15 + 22) != 2)
                              {
                                v879 = (int *)(v860 + 36 * *((char *)v15 + 24) + 896);
LABEL_1112:
                                sub_224ADF610(v1035, v878, v302, v879);
                                goto LABEL_1115;
                              }
LABEL_1111:
                              v879 = (int *)(v1035 + 258496);
                              goto LABEL_1112;
                            }
                          }
                          if (*((unsigned char *)v15 + 22) == 2 && *(_DWORD *)v1023 >= 2u)
                          {
                            v878 = (signed int *)(v864 + 8 * *((char *)v15 + 24));
                            goto LABEL_1111;
                          }
                        }
                        sub_224ADF694((int *)(v864 + 8 * *((char *)v15 + 24)), v863, v19, *((__int16 *)v15 + 4), 0, (int *)(v11 + 16 * *((char *)v15 + 24) + 3136));
                        if (*((unsigned char *)v15 + 22) == 1) {
                          sub_224ADF73C((int *)v1035, v864, 0, v302, v1020, v1015);
                        }
LABEL_1115:
                        if (!v862) {
                          return 0;
                        }
                        if (v174 == v987 || v19 == v1005)
                        {
                          int v880 = *(_DWORD *)(v1035 + 28);
                          v881 = (void *)(v1035 + 8 * (v880 & 0x1F) + 712);
                          BOOL v882 = v174 != 1 || *(char *)(*v881 + 12 * *(int *)(v1035 + 24) - 4) > 0;
                          if (v19 == v1005)
                          {
                            uint64_t v883 = *(void *)(v1035 + 8 * (v880 & 0x1F) + 704);
                            int v884 = *(_DWORD *)(v1035 + 24);
                            if (*(char *)(v883 + 12 * v884 + 8) <= 0) {
                              BOOL v882 = 0;
                            }
                            if (v174 == 1 && *(char *)(v883 + 12 * v884 - 4) <= 0) {
                              BOOL v882 = 0;
                            }
                          }
                          if (v882)
                          {
                            if (v174 == 1 && v19 == v1005)
                            {
                              uint64_t v885 = *(void *)(v1035 + 8 * (v880 & 0x1F) + 704) + 12 * *(int *)(v1035 + 24);
                              int v886 = v1005;
                              sub_224ADF694((int *)(v864 + 8 * (*(char *)(v885 - 4) - 1) + 4), v880 - 1, v1005, *(__int16 *)(v885 - 12), v1005, (int *)(v11 + 16 * (*(char *)(v885 - 4) - 1) + 3136));
                              int v880 = *(_DWORD *)(v1035 + 28);
                            }
                            else
                            {
                              BOOL v93 = v174 == 1;
                              int v886 = v1005;
                              if (!v93) {
                                goto LABEL_1154;
                              }
                            }
                            uint64_t v891 = *v881 + 12 * *(int *)(v1035 + 24);
                            sub_224ADF694((int *)(v864 + 8 * (*(char *)(v891 - 4) - 1) + 4), v880, v19, *(__int16 *)(v891 - 12), v886, (int *)(v11 + 16 * (*(char *)(v891 - 4) - 1) + 3136));
                            int v880 = *(_DWORD *)(v1035 + 28);
LABEL_1154:
                            if (v19 == v886)
                            {
                              v892 = (__int16 *)(*(v881 - 1) + 12 * *(int *)(v1035 + 24));
                              sub_224ADF694((int *)(v864 + 8 * (*((char *)v892 + 8) - 1) + 4), v880 - 1, v886, *v892, v886, (int *)(v11 + 16 * (*((char *)v892 + 8) - 1) + 3136));
                              int v880 = *(_DWORD *)(v1035 + 28);
                            }
                            sub_224ADF694((int *)(v864 + 8 * *((char *)v15 + 24) + 4), v880, v19, *((__int16 *)v15 + 4), v886, (int *)(v11 + 16 * *((char *)v15 + 24) + 3136));
                            return 0;
                          }
                        }
                        unsigned int v887 = v1019;
                        if (v861 < v1019) {
                          unsigned int v887 = v861;
                        }
                        if (v887 >= 2)
                        {
                          if (*((unsigned char *)v15 + 21) == 2)
                          {
                            uint64_t v888 = *((char *)v15 + 24);
                            if (*(unsigned char *)(v11 + v888 + 3056))
                            {
                              v889 = (signed int *)(v864 + 8 * v888 + 4);
                              if (*((unsigned char *)v15 + 22) != 2)
                              {
                                v890 = (int *)(*(void *)(v11 + 24) + 36 * *((char *)v15 + 24) + 896);
LABEL_1147:
                                sub_224ADF9F0(v1035, v889, v302, v890);
                                return 0;
                              }
LABEL_1146:
                              v890 = (int *)(v1035 + 258496);
                              goto LABEL_1147;
                            }
                          }
                          if (*((unsigned char *)v15 + 22) == 2 && *(_DWORD *)v1023 >= 2u)
                          {
                            v889 = (signed int *)(v864 + 8 * *((char *)v15 + 24) + 4);
                            goto LABEL_1146;
                          }
                        }
                        sub_224ADF694((int *)(v864 + 8 * *((char *)v15 + 24) + 4), *(_DWORD *)(v1035 + 28) & ~v1005, v19 << (v19 == v1005), *((__int16 *)v15 + 4), v1005, (int *)(v11 + 16 * *((char *)v15 + 24) + 3136));
                        if (*((unsigned char *)v15 + 22) == 1) {
                          sub_224ADF73C((int *)v1035, v864, 1u, v302, v1020, v1015);
                        }
                        return 0;
                      }
                      if (*v63)
                      {
                        int v1008 = 1;
                        uint64_t v226 = v1033;
                        goto LABEL_332;
                      }
                      uint64_t v247 = v1033;
                      if (v44 && (v44[6] != 255 || v44[8] || v44[7]))
                      {
                        int v248 = (unsigned __int16 *)v15 + 4;
                        *((unsigned char *)v15 + 20) = 0;
LABEL_352:
                        int v249 = v44[6];
                        char v250 = v249 - 1;
                        if (v249 >= 1)
                        {
                          int v251 = v44;
                          goto LABEL_778;
                        }
                        if (v44[8] || v44[7])
                        {
                          int v251 = v44;
                          char v250 = 0;
                          goto LABEL_778;
                        }
LABEL_609:
                        v1011 = v248;
                        int v251 = v44;
                        int v1003 = v28;
                        uint64_t v466 = v1035 + 32;
                        unsigned int v467 = v175;
                        long long v468 = v111;
                        unsigned int v469 = sub_224ADE5EC(*(void *)(v1035 + 656), v1035 + 32, v467, v247, v988, v991);
                        uint64_t v982 = (uint64_t)&v468[1728];
                        sub_224AADEFC((uint64_t)&v468[1728], (unsigned int *)&v468[720] + v469);
                        int v471 = v470;
                        uint64_t v472 = *(void *)(v1035 + 656);
                        uint64_t v473 = v1035 + 32;
                        if (v471)
                        {
                          uint64_t v474 = v247;
                          unsigned int v475 = sub_224ADE358(v472, v473, v1030, v247, v988, v991);
                          sub_224AADEFC(v982, (unsigned int *)&v468[721] + v475 + 1);
                          if (v476)
                          {
                            char v250 = 6;
                          }
                          else
                          {
                            unsigned int v594 = sub_224ADE4A8(*(void *)(v1035 + 656), v466, v1030, v247, v988, v991);
                            sub_224AADEFC(v982, (unsigned int *)&v468[727] + v594 + 1);
                            char v250 = v595 + 4;
                          }
                        }
                        else
                        {
                          uint64_t v474 = v247;
                          unsigned int v588 = sub_224ADDFCC(v472, v473, v1030, v247, v988, v991);
                          sub_224AADEFC(v982, (unsigned int *)&v468[723] + v588);
                          int v590 = v589;
                          uint64_t v591 = *(void *)(v1035 + 656);
                          if (v590)
                          {
                            unsigned int v592 = sub_224ADE0F8(v591, v466, v1030, v247, v988, v991);
                            sub_224AADEFC(v982, (unsigned int *)&v468[726] + v592);
                            char v250 = v593 + 2;
                          }
                          else
                          {
                            unsigned int v599 = sub_224ADE238(v591, v466, v1030, v247, v988, v991);
                            sub_224AADEFC(v982, (unsigned int *)&v468[724] + v599 + 1);
                          }
                        }
                        int v28 = v1003;
                        uint64_t v11 = v1032;
                        uint64_t v247 = v474;
                        int v248 = v1011;
LABEL_778:
                        *((unsigned char *)v15 + 24) = v250;
                        *((unsigned char *)v15 + 25) = -1;
                        v1037[0] = 0;
                        unsigned int v1036 = 0;
                        sub_224ABC22C((uint64_t *)(v1035 + 664), &v1040, v1037, (int *)&v1036, (v250 + 1) | 0xFF00, v1034, v1027, *(_DWORD *)(v1035 + 28), *(_DWORD *)(v1035 + 24));
                        if (!v251 || !v251[7] && !v251[8])
                        {
                          uint64_t v604 = (uint64_t)&v1031[1728];
                          unsigned int v605 = v1036;
                          sub_224AADEFC((uint64_t)&v1031[1728], (unsigned int *)&v1031[694] + (v1036 & 7));
                          if (!v606)
                          {
                            *((unsigned char *)v15 + 21) = 3;
                            *((unsigned char *)v15 + 23) = 0;
                            int v608 = v1037[0];
                            if (v1037[0] < 2)
                            {
                              *(_DWORD *)int v248 = v1040;
                              uint64_t v11 = v1032;
                              sub_224ADE840(*(void *)(v1032 + 24), v248);
                            }
                            else
                            {
                              int v609 = v1043;
                              if (v1041 <= 639) {
                                uint64_t v610 = 2 * (v1043 < 640);
                              }
                              else {
                                uint64_t v610 = v1043 < 640;
                              }
                              sub_224AADEFC(v604, (unsigned int *)&v1031[701] + v610);
                              unsigned __int8 v617 = *((unsigned char *)v15 + 23) + v616;
                              *((unsigned char *)v15 + 23) = v617;
                              if (v617 == 1 && v608 != 2)
                              {
                                uint64_t v618 = v1044 < 640;
                                if (v609 <= 639) {
                                  uint64_t v618 = 2 * (v1044 < 640);
                                }
                                sub_224AADEFC(v604, (unsigned int *)&v1031[701] + v618);
                                unsigned __int8 v617 = *((unsigned char *)v15 + 23) + v619;
                                *((unsigned char *)v15 + 23) = v617;
                              }
                              *(_DWORD *)int v248 = *((_DWORD *)&v1040 + 4 * v617);
                              uint64_t v11 = v1032;
                            }
                            sub_224ADD848(v1035, v248, v1031 + 1656, *(unsigned char *)(*(void *)(v11 + 24) + 269) == 0, v611, v612, v613, v614, v615);
                            goto LABEL_833;
                          }
                          if (v251)
                          {
                            v607 = v1031;
                            uint64_t v11 = v1032;
                            if (v251[7] || v251[8]) {
                              goto LABEL_810;
                            }
                            unsigned int v605 = v1036;
                          }
                          else
                          {
                            v607 = v1031;
                            uint64_t v11 = v1032;
                          }
                          uint64_t v620 = (uint64_t)&v607[1728];
                          sub_224AADEFC((uint64_t)&v607[1728], (unsigned int *)&v607[697] + ((v605 >> 3) & 1));
                          if (v621)
                          {
                            sub_224AADEFC(v620, (unsigned int *)&v1031[698] + (v605 >> 4));
                            if (v622)
                            {
                              uint64_t v623 = 1;
                              *((unsigned char *)v15 + 21) = 1;
                              *((unsigned char *)v15 + 23) = 1;
                              int v624 = v1037[0];
                              if (v1037[0] >= 3)
                              {
                                int v625 = v1044;
                                if (v1043 <= 639) {
                                  uint64_t v626 = 2 * (v1044 < 640);
                                }
                                else {
                                  uint64_t v626 = v1044 < 640;
                                }
                                sub_224AADEFC(v620, (unsigned int *)&v1031[701] + v626);
                                unsigned __int8 v629 = *((unsigned char *)v15 + 23) + v628;
                                *((unsigned char *)v15 + 23) = v629;
                                if (v629 == 2 && v624 != 3)
                                {
                                  uint64_t v630 = v1045 < 640;
                                  if (v625 <= 639) {
                                    uint64_t v630 = 2 * (v1045 < 640);
                                  }
                                  sub_224AADEFC(v620, (unsigned int *)&v1031[701] + v630);
                                  unsigned __int8 v629 = *((unsigned char *)v15 + 23) + v631;
                                  *((unsigned char *)v15 + 23) = v629;
                                }
                                *(_DWORD *)int v248 = *((_DWORD *)&v1040 + 4 * v629);
                                if (v629 > 1u) {
                                  goto LABEL_833;
                                }
                                goto LABEL_832;
                              }
                            }
                            else
                            {
                              uint64_t v623 = 0;
                              *((unsigned char *)v15 + 21) = 0;
                              *((unsigned char *)v15 + 23) = 0;
                            }
                            *(_DWORD *)int v248 = *((_DWORD *)&v1040 + 4 * v623);
LABEL_832:
                            sub_224ADE840(*(void *)(v11 + 24), v248);
                            goto LABEL_833;
                          }
                        }
LABEL_810:
                        *((unsigned char *)v15 + 21) = 2;
                        uint64_t v632 = *(void *)(v11 + 24);
                        int v633 = *((char *)v15 + 24);
                        int v634 = *(_DWORD *)(v632 + 36 * *((char *)v15 + 24) + 896);
                        if (v634)
                        {
                          if (v634 == 1)
                          {
                            int8x8_t v627 = (int8x8_t)vrev64_s32((int32x2_t)vshr_n_u32(*(uint32x2_t *)(v632+ 36 * *((char *)v15 + 24)+ 900), 0xDuLL));
                          }
                          else
                          {
                            if (v634 == 2)
                            {
                              uint64_t v635 = v632 + 36 * *((char *)v15 + 24);
                              int v636 = (const float *)(v635 + 920);
                              int32x2_t v637 = *(int32x2_t *)(v635 + 912);
                              int32x2_t v638 = (int32x2_t)vld1_dup_f32(v636);
                            }
                            else
                            {
                              BOOL v639 = (int32x2_t *)(v632 + 36 * *((char *)v15 + 24));
                              int32x2_t v637 = v639[114];
                              v638.i32[0] = v639[113].i32[1];
                              v638.i32[1] = v639[115].i32[0];
                            }
                            int32x2_t v640 = vshl_n_s32(*(int32x2_t *)(v1035 + 24), 2uLL);
                            int32x2_t v641 = vadd_s32((int32x2_t)__PAIR64__(v19, v174), (int32x2_t)__PAIR64__(v19, v174));
                            int32x2_t v642 = vadd_s32(v638, (int32x2_t)0xFFFF0000FFFF0000);
                            if (*(unsigned char *)(v632 + 428)) {
                              unsigned int v643 = 13;
                            }
                            else {
                              unsigned int v643 = 14;
                            }
                            v603.i64[0] = -1;
                            v603.i64[1] = -1;
                            int32x2_t v644 = vadd_s32(vadd_s32(v640, (int32x2_t)-1), v641);
                            int32x2_t v645 = vadd_s32(vmla_s32(vmul_s32(v637, vrev64_s32(v644)), v642, v644), *(int32x2_t *)(v632 + 36 * *((char *)v15 + 24) + 900));
                            uint32x2_t v602 = (uint32x2_t)vdup_n_s32(*(unsigned char *)(v632 + 428) == 0);
                            int32x2_t v600 = (int32x2_t)vshl_u32(vshl_u32((uint32x2_t)vadd_s32(vdup_n_s32((1 << v643) >> 1), vabs_s32(v645)), (uint32x2_t)vneg_s32(vdup_n_s32(v643))), v602);
                            int8x8_t v601 = (int8x8_t)vneg_s32(v600);
                            int8x8_t v627 = vbsl_s8((int8x8_t)vcltz_s32(v645), v601, (int8x8_t)v600);
                          }
                          if (*(unsigned char *)(v632 + 269))
                          {
                            int32x2_t v600 = vdup_n_s32(0xFFF8u);
                            int8x8_t v627 = vand_s8((int8x8_t)vadd_s32((int32x2_t)vsra_n_u32((uint32x2_t)v627, (uint32x2_t)vand_s8(v627, (int8x8_t)0xFFFF0000FFFFLL), 0xFuLL), (int32x2_t)0x300000003), (int8x8_t)v600);
                          }
                        }
                        else
                        {
                          int8x8_t v627 = 0;
                        }
                        *(_DWORD *)int v248 = v627.u16[2] | (v627.u16[0] << 16);
                        if ((int)v174 >= (int)v19) {
                          int v646 = v19;
                        }
                        else {
                          int v646 = v174;
                        }
                        if (v646 != 1)
                        {
                          BOOL v647 = *(_DWORD *)(*(void *)(v11 + 24) + 36 * v633 + 896) == 1;
LABEL_834:
                          if (*(unsigned char *)(*(void *)(v11 + 8) + 395)
                            && ((1 << v1034) & 0x33980) != 0
                            && (uint64_t v648 = byte_224B177CA[v1034],
                                uint64_t v649 = (uint64_t)&v1031[1728],
                                sub_224AADEFC((uint64_t)&v1031[1728], (unsigned int *)&v1031[674] + v648),
                                v650))
                          {
                            *((unsigned char *)v15 + 18) = sub_224AAD9A0(v649, &v1031[v648 + 668], 3, *(double *)&v627, *(double *)&v600, *(double *)&v601, *(double *)&v602, v603);
                            uint64_t v651 = byte_224B17855[v1034];
                            sub_224AADEFC(v649, (unsigned int *)&v1031[677] + v651 + 1);
                            *((unsigned char *)v15 + 28) = v652 + 1;
                            if ((v652 + 1) == 2)
                            {
                              sub_224AADBF0(v649, (uint64_t)&v1031[4 * v651 + 120], 15);
                              *((unsigned char *)v15 + 16) = v653;
                            }
                          }
                          else
                          {
                            *((unsigned char *)v15 + 28) = 0;
                          }
                          uint64_t v11 = v1032;
                          int v654 = *(unsigned __int8 **)(v1032 + 24);
                          if (v654[436])
                          {
                            unsigned int v655 = (int)v1026 >= (int)v19 ? v19 : v1026;
                            if (!*((unsigned char *)v15 + 28) && v655 >= 2)
                            {
                              int v656 = v654[269];
                              if (v654[269]
                                || *((unsigned char *)v15 + 21) != 2
                                || *(_DWORD *)&v654[36 * *((char *)v15 + 24) + 896] <= 1u)
                              {
                                if (v1024 > v1016 && v1015 >= 2)
                                {
                                  if (!*(unsigned char *)(v1035 + (v1030 + 1) + 256)) {
                                    goto LABEL_863;
                                  }
                                  unint64_t v657 = 0;
                                  unint64_t v658 = v1015 >> 1;
                                  char v659 = (unsigned __int8 *)((v13 & 0x1F) + v1035 + 259);
                                  while (v658 - 1 != v657)
                                  {
                                    int v660 = *v659;
                                    v659 += 2;
                                    ++v657;
                                    if (!v660)
                                    {
                                      if (v657 < v658) {
                                        goto LABEL_863;
                                      }
                                      break;
                                    }
                                  }
                                }
                                if (v13 > v1012 && (int)v1020 >= 2)
                                {
                                  uint64_t v661 = *(void *)(v1035 + 656);
                                  if (*(unsigned char *)(v661 + (v247 + 1) + 224))
                                  {
                                    unint64_t v662 = 0;
                                    unint64_t v663 = v1020 >> 1;
                                    uint64_t v664 = (unsigned __int8 *)((v1024 & 0x1F) + v661 + 227);
                                    while (v663 - 1 != v662)
                                    {
                                      int v665 = *v664;
                                      v664 += 2;
                                      ++v662;
                                      if (!v665)
                                      {
                                        if (v662 >= v663) {
                                          goto LABEL_868;
                                        }
                                        goto LABEL_863;
                                      }
                                    }
                                    goto LABEL_868;
                                  }
LABEL_863:
                                  long long v1039 = 0uLL;
                                  sub_224ADEA70(v1035, v1027, v1026, v19, v1020, v1015, v991, v988, *((char *)v15 + 24), &v1039);
                                  if (v656
                                    || *(_DWORD *)(v1032 + 16 * *((char *)v15 + 24) + 3128)
                                    || !v654[893]
                                    || v1039 == 0)
                                  {
                                    uint64_t v226 = v247;
                                    sub_224AADEFC((uint64_t)&v1031[1728], (unsigned int *)&v1031[756] + v1034);
                                  }
                                  else
                                  {
                                    uint64_t v226 = v247;
                                    char v671 = sub_224AAD9A0((uint64_t)&v1031[1728], &v1031[v1034 + 640], 2, v666, v667, v668, v669, v670);
                                  }
                                  int v252 = v28;
                                  *((unsigned char *)v15 + 22) = v671;
                                  unsigned int v232 = v1029;
                                  unint64_t v174 = v1026;
                                  if (v671 == 2)
                                  {
                                    sub_224ADED88(v1035, v1026, v19, v1039, *((unint64_t *)&v1039 + 1), *(_DWORD *)v248, v1023);
                                    if (*(_DWORD *)(v1023 + 68))
                                    {
                                      BOOL v647 = 0;
                                      if (*(_DWORD *)v1023 == 3)
                                      {
                                        *((_WORD *)v15 + 6) = *(_DWORD *)(v1023 + 12);
                                        *((_WORD *)v15 + 7) = *(_DWORD *)(v1023 + 16);
                                        *((_WORD *)v15 + 8) = *(_DWORD *)(v1023 + 20);
                                        *((_WORD *)v15 + 9) = *(_DWORD *)(v1023 + 24);
                                      }
                                      else
                                      {
                                        *((_WORD *)v15 + 6) = 0x8000;
                                      }
                                    }
                                    else
                                    {
                                      BOOL v647 = 0;
                                    }
                                  }
                                  goto LABEL_869;
                                }
                              }
                            }
                          }
LABEL_868:
                          uint64_t v226 = v247;
                          int v252 = v28;
                          *((unsigned char *)v15 + 22) = 0;
                          unsigned int v232 = v1029;
                          unint64_t v174 = v1026;
LABEL_869:
                          int v672 = 0;
LABEL_870:
                          unsigned int v253 = *(_DWORD *)(*(void *)(v11 + 24) + 432);
                          int v1008 = v672;
                          if (v253 == 4)
                          {
                            if (v647)
                            {
                              int v673 = *((unsigned __int8 *)v15 + 20);
                              BOOL v674 = *((unsigned char *)v15 + 20) != 0;
                              int v675 = *((unsigned __int8 *)v15 + 24);
                              v676 = (unsigned __int8 *)(*(void *)(v1035 + 656) + v226);
                              if (v676[288] == v675 || v676[320] == v675) {
                                int v677 = v676[352];
                              }
                              else {
                                int v677 = 3;
                              }
                              unint64_t v678 = &v1030[v1035];
                              if (v1030[v1035 + 320] == v675 || v678[352] == v675) {
                                int v679 = v678[384];
                              }
                              else {
                                int v679 = 3;
                              }
                              int v680 = 4 * (v673 != 0);
                              int v681 = v680 | 3;
                              int v682 = v677 + v680;
                              if (v679 != 3) {
                                int v682 = v681;
                              }
                              if (v677 == 3) {
                                int v682 = v679 + 4 * (v673 != 0);
                              }
                              unsigned int v683 = v677 + 4 * (v673 != 0);
                              if (v677 != v679) {
                                unsigned int v683 = v682;
                              }
                              unsigned int v253 = sub_224AAD9A0((uint64_t)&v1031[1728], &v1031[v683 + 612], 2, *(double *)&v627, *(double *)&v600, *(double *)&v601, *(double *)&v602, v603);
                              unsigned int v254 = v253;
                              if (*(unsigned char *)(*(void *)(v1032 + 8) + 398))
                              {
                                uint64_t v226 = v1033;
                                unsigned int v684 = sub_224ADF578(*(void *)(v1035 + 656), v1035 + 32, v674, *((char *)v15 + 24), v1030, v1033);
                                unsigned int v253 = sub_224AAD9A0((uint64_t)&v1031[1728], &v1031[v684 + 620], 2, v685, v686, v687, v688, v689);
                                uint64_t v11 = v1032;
                              }
                              else
                              {
                                uint64_t v11 = v1032;
                                uint64_t v226 = v1033;
                              }
                            }
                            else
                            {
                              unsigned int v253 = 0;
                              unsigned int v254 = 0;
                            }
                          }
                          else
                          {
                            unsigned int v254 = *(_DWORD *)(*(void *)(v11 + 24) + 432);
                          }
                          uint64_t v9 = v1023;
                          goto LABEL_892;
                        }
LABEL_833:
                        BOOL v647 = 1;
                        goto LABEL_834;
                      }
                      int v255 = v218[888];
                      if ((int)v174 >= (int)v19) {
                        unsigned int v256 = v19;
                      }
                      else {
                        unsigned int v256 = v174;
                      }
                      if (!v255 || v256 < 2) {
                        goto LABEL_608;
                      }
                      v980 = v44;
                      int v257 = v175;
                      unsigned __int8 v258 = v63;
                      int v259 = v111;
                      unsigned int v260 = sub_224ADDF0C(*(void *)(v1035 + 656), v1035 + 32, v257, v1033, v988, v991);
                      sub_224AADEFC((uint64_t)&v259[1728], (unsigned int *)&v259[704] + v260 + 1);
                      if (*v258)
                      {
                        int v1008 = v261;
                        int v218 = *(unsigned char **)(v11 + 24);
                        uint64_t v226 = v1033;
                        unint64_t v19 = v19;
LABEL_332:
                        char v227 = v218[891];
                        *((unsigned char *)v15 + 24) = v227;
                        char v228 = *(unsigned char *)(*(void *)(v11 + 24) + 892);
                        *((unsigned char *)v15 + 25) = v228;
                        *((_WORD *)v15 + 10) = 2;
                        *((unsigned char *)v15 + 23) = 0;
                        LODWORD(v1039) = 0;
                        sub_224ABC22C((uint64_t *)(v1035 + 664), &v1040, &v1039, v1037, (v227 + 1) | ((v228 + 1) << 8), v1034, v1027, *(_DWORD *)(v1035 + 28), *(_DWORD *)(v1035 + 24));
                        unsigned int v229 = v1040;
                        unsigned int v230 = HIDWORD(v1040);
                        *((_DWORD *)v15 + 2) = v1040;
                        *((_DWORD *)v15 + 3) = v230;
                        uint64_t v231 = *(void *)(v11 + 24);
                        unsigned int v232 = v1029;
                        if (*(unsigned char *)(v231 + 269))
                        {
                          *((_WORD *)v15 + 5) = (HIWORD(v229) + (v229 >> 31) + 3) & 0xFFF8;
                          unsigned int v233 = (v229 + ((unsigned __int16)(v229 & 0x8000) >> 15) + 3) & 0xFFFFFFF8;
                        }
                        else
                        {
                          if (*(unsigned char *)(v231 + 428)) {
                            goto LABEL_357;
                          }
                          *((_WORD *)v15 + 5) = ((v229 >> 31) + HIWORD(v229)) & 0xFFFE;
                          unsigned int v233 = (v229 + ((unsigned __int16)(v229 & 0x8000) >> 15)) & 0xFFFFFFFE;
                        }
                        *((_WORD *)v15 + 4) = v233;
                        uint64_t v231 = *(void *)(v11 + 24);
                        if (*(unsigned char *)(v231 + 269))
                        {
                          *((_WORD *)v15 + 7) = (HIWORD(v230) + (v230 >> 31) + 3) & 0xFFF8;
                          unsigned int v234 = (v230 + ((unsigned __int16)(v230 & 0x8000) >> 15) + 3) & 0xFFFFFFF8;
                        }
                        else
                        {
                          if (*(unsigned char *)(v231 + 428)) {
                            goto LABEL_357;
                          }
                          *((_WORD *)v15 + 7) = ((v230 >> 31) + HIWORD(v230)) & 0xFFFE;
                          unsigned int v234 = (v230 + ((unsigned __int16)(v230 & 0x8000) >> 15)) & 0xFFFFFFFE;
                        }
                        *((_WORD *)v15 + 6) = v234;
                        uint64_t v231 = *(void *)(v11 + 24);
LABEL_357:
                        int v252 = v28;
                        if (*(_DWORD *)(v231 + 432) == 4) {
                          unsigned int v253 = 0;
                        }
                        else {
                          unsigned int v253 = *(_DWORD *)(v231 + 432);
                        }
                        unsigned int v254 = v253;
LABEL_892:
                        unsigned int v1018 = v253;
                        *((unsigned char *)v15 + 27) = byte_224B19468[4 * v253 + v254];
                        sub_224ADD920(v1035, (uint64_t)v15, v1034, v226, v1030);
                        if (*(_DWORD *)(v9 + 68) == 1)
                        {
                          (*(void (**)(uint64_t, void, _OWORD *))(v11 + 3360))(v1035, v1034, v15);
                        }
                        else if ((*(unsigned int (**)(uint64_t, void, _OWORD *))(v11 + 3296))(v1035, v1034, v15))
                        {
                          return 0xFFFFFFFFLL;
                        }
                        uint64_t v690 = *(void *)(v11 + 24);
                        signed int v297 = v252;
                        uint64_t v691 = v1025;
                        int v692 = v1008;
                        if (*(unsigned char *)(v690 + 830) || *(unsigned char *)(v690 + 831))
                        {
                          signed int v1004 = v297;
                          unsigned int v986 = v19;
                          if (v1008) {
                            int v693 = 6;
                          }
                          else {
                            int v693 = 2;
                          }
                          BOOL v93 = v693 == *((unsigned __int8 *)v15 + 21);
                          uint64_t v694 = *((unsigned __int8 *)v15 + 4);
                          uint64_t v695 = *(void *)&v1031[1822] + (v694 << 6) + 2 * *((char *)v15 + 24);
                          if (!v93) {
                            ++v695;
                          }
                          uint64_t v696 = (unsigned char *)(v695 + 2);
                          LOWORD(v1039) = *((unsigned __int8 *)v15 + 29);
                          WORD1(v1039) = *((_WORD *)v15 + 15);
                          unsigned __int8 v697 = *((unsigned char *)v15 + 26);
                          if (*(unsigned char *)(v690 + v694 + 808))
                          {
                            unsigned __int8 v697 = 0;
                            unsigned __int8 v698 = 0;
                          }
                          else
                          {
                            unsigned __int8 v698 = *((unsigned char *)v15 + 7);
                          }
                          uint64_t v699 = *(void *)(v9 + 40);
                          uint64_t v700 = *(void *)(v11 + 4432);
                          uint64_t v701 = *(void *)(v11 + 3432);
                          int v702 = *(_DWORD *)(v1035 + 24);
                          int v703 = *(_DWORD *)(v1035 + 28);
                          uint64_t v704 = v702;
                          int v705 = v703;
                          int v706 = *(_DWORD *)(v11 + 3440);
                          int v707 = *(_DWORD *)(v11 + 3444);
                          int v1014 = *((unsigned __int8 *)v15 + 6);
                          int v708 = *(_DWORD *)(v11 + 2168);
                          uint64_t v709 = *(void *)(v1035 + 656);
                          uint64_t v710 = v1035 + 32;
                          if (v232) {
                            int v711 = (uint64_t *)(v709 + v1022 + 512);
                          }
                          else {
                            int v711 = 0;
                          }
                          if (v232) {
                            int v712 = (uint64_t *)(v710 + v1021 + 512);
                          }
                          else {
                            int v712 = 0;
                          }
                          int __bb = *v1025;
                          if (v706 - v702 >= __bb) {
                            size_t v713 = *v1025;
                          }
                          else {
                            size_t v713 = (v706 - v702);
                          }
                          LODWORD(v714) = v707 - v703;
                          int v715 = v1025[1];
                          if (v707 - v703 >= v715) {
                            uint64_t v714 = v1025[1];
                          }
                          else {
                            uint64_t v714 = v714;
                          }
                          unsigned int v716 = *(_DWORD *)(v1035 + 24) & 0x1F;
                          unsigned int v717 = v703 & 0x1F;
                          if (v713 && v714)
                          {
                            int v964 = v1025[1];
                            int v965 = *(_DWORD *)(v11 + 2168);
                            int v718 = 0;
                            unsigned int v719 = v697;
                            __dst = (unsigned __int8 *)(v709 + v226 + 480);
                            uint64_t v963 = v699;
                            uint64_t v961 = v710 + v1030 + 480;
                            uint64_t v720 = v700 + 4 * v701 * v703 + 4 * v704;
                            uint64_t v721 = v714;
                            do
                            {
                              uint64_t v722 = 0;
                              do
                              {
                                uint64_t v723 = (unsigned char *)(v720 + v722);
                                *uint64_t v723 = *v696;
                                v723[1] = v696[16];
                                v722 += 4;
                              }
                              while (4 * v713 != v722);
                              ++v718;
                              v720 += 4 * v701;
                            }
                            while (v718 != v714);
                            int v966 = v704;
                            int v967 = v707;
                            int v968 = v705;
                            uint64_t v969 = v700;
                            unsigned __int8 v970 = v698;
                            uint64_t v971 = v701;
                            v972 = v712;
                            unsigned int v990 = v717;
                            unsigned int v993 = v716;
                            v975 = v711;
                            unsigned int v984 = v254;
                            int v724 = 0;
                            unsigned int v725 = 0;
                            unsigned int v726 = &byte_224B28D18[8 * v719];
                            do
                            {
                              uint64_t v727 = v721;
                              unsigned int v728 = 0;
                              int v729 = 0;
                              uint64_t v730 = v725;
                              do
                              {
                                sub_224AFF588((uint64_t)&v1040 + 32 * v730 + v728, v719, 0, v724, v729, (uint64_t)&v1039);
                                v728 += *v726;
                                ++v729;
                              }
                              while (v728 < v713);
                              unsigned int v725 = v730 + v726[1];
                              ++v724;
                              uint64_t v721 = v727;
                            }
                            while (v725 < v727);
                            uint64_t v731 = 0;
                            unsigned int v732 = 1 << v990;
                            uint64_t v733 = v727;
                            uint64_t v734 = 32 * v727;
                            uint64_t v699 = v963;
                            v735 = (unsigned char *)v961;
                            uint64_t v736 = (unsigned __int8 *)v961;
                            unsigned int v737 = 1 << v990;
                            do
                            {
                              unsigned int v738 = *((unsigned __int8 *)&v1040 + v731);
                              int v740 = *v736++;
                              unsigned int v739 = v740;
                              if ((int)v738 >= v740) {
                                unsigned int v738 = v739;
                              }
                              *(_WORD *)(v963 + 12 * v993 + 4 * v738 + 2 * ((v737 & 0xFFFF0000) != 0)) |= v737 >> (16 * ((v737 & 0xFFFF0000) != 0));
                              v737 *= 2;
                              v731 += 32;
                            }
                            while (v734 != v731);
                            uint64_t v741 = 0;
                            unsigned int v742 = 1 << v993;
                            unsigned int v743 = 1 << v993;
                            uint64_t v11 = v1032;
                            do
                            {
                              int v744 = *((unsigned __int8 *)&v1046[64] + v741);
                              if (v744 >= __dst[v741]) {
                                int v744 = __dst[v741];
                              }
                              uint64_t v745 = v963 + 12 * v990 + 4 * v744 + 2 * ((v743 & 0xFFFF0000) != 0);
                              *(_WORD *)(v745 + 384) |= v743 >> (16 * ((v743 & 0xFFFF0000) != 0));
                              ++v741;
                              v743 *= 2;
                            }
                            while (v713 != v741);
                            uint64_t v691 = v1025;
                            uint64_t v226 = v1033;
                            unsigned int v254 = v984;
                            if (!v1014)
                            {
                              for (uint64_t n = 0; n != v721; ++n)
                              {
                                unsigned int v747 = LOBYTE(v1046[2 * n]);
                                if (v713 > v747)
                                {
                                  unsigned int v748 = *((unsigned __int8 *)&v1040 + 32 * n);
                                  do
                                  {
                                    int v749 = (unsigned __int8 *)&v1040 + 32 * n + v747;
                                    int v750 = *v749;
                                    if (v750 < (int)v748) {
                                      unsigned int v748 = *v749;
                                    }
                                    uint64_t v751 = v963 + 12 * (v747 + v993) + 4 * v748;
                                    *(_WORD *)(v751 + 2 * ((v732 & 0xFFFF0000) != 0)) |= v732 >> (16
                                                                                                  * ((v732 & 0xFFFF0000) != 0));
                                    v747 += v749[1024];
                                    unsigned int v748 = v750;
                                  }
                                  while (v747 < v713);
                                }
                                v732 *= 2;
                              }
                              for (iuint64_t i = 0; ii != v713; ++ii)
                              {
                                unsigned int v753 = *((unsigned __int8 *)&v1046[128] + ii);
                                if (v721 > v753)
                                {
                                  unsigned int v754 = *((unsigned __int8 *)&v1046[64] + ii);
                                  BOOL v755 = (v742 & 0xFFFF0000) != 0;
                                  do
                                  {
                                    int v756 = *((unsigned __int8 *)&v1046[2 * v753 + 64] + ii);
                                    if ((int)v754 >= v756) {
                                      unsigned int v754 = *((unsigned __int8 *)&v1046[2 * v753 + 64] + ii);
                                    }
                                    uint64_t v757 = v963 + 12 * (v753 + v990) + 4 * v754 + 2 * v755;
                                    *(_WORD *)(v757 + 384) |= v742 >> (16 * v755);
                                    v753 += *((unsigned __int8 *)&v1040 + 32 * v753 + ii + 3072);
                                    unsigned int v754 = v756;
                                  }
                                  while (v753 < v721);
                                }
                                v742 *= 2;
                              }
                            }
                            uint64_t v758 = (v713 - 1);
                            do
                            {
                              *v735++ = *((unsigned char *)&v1040 + v758);
                              v758 += 32;
                              --v733;
                            }
                            while (v733);
                            memcpy(__dst, &v1046[2 * (v721 - 1) + 64], v713);
                            unsigned int v232 = v1029;
                            int v692 = v1008;
                            int v712 = v972;
                            int v711 = v975;
                            unsigned int v717 = v990;
                            unsigned int v716 = v993;
                            uint64_t v701 = v971;
                            unsigned __int8 v698 = v970;
                            int v705 = v968;
                            uint64_t v700 = v969;
                            int v707 = v967;
                            LODWORD(v704) = v966;
                            int v708 = v965;
                            int v715 = v964;
                          }
                          signed int v297 = v1004;
                          if (v232)
                          {
                            char v759 = v708 != 3;
                            if (v708 == 3) {
                              int v760 = v706;
                            }
                            else {
                              int v760 = v706 + 1;
                            }
                            int v761 = v760 >> v759;
                            int v762 = (int)v704 >> v759;
                            unsigned int v763 = __bb;
                            if (v708 != 3) {
                              unsigned int v763 = __bb + 1;
                            }
                            int v764 = v761 - v762;
                            int v765 = v763 >> v759;
                            if (v764 >= v765) {
                              size_t v766 = v765;
                            }
                            else {
                              size_t v766 = v764;
                            }
                            char v767 = v708 == 1;
                            if (v708 == 1) {
                              int v768 = v707 + 1;
                            }
                            else {
                              int v768 = v707;
                            }
                            int v769 = v768 >> v767;
                            int v770 = v705 >> v767;
                            if (v708 == 1) {
                              unsigned int v771 = v715 + 1;
                            }
                            else {
                              unsigned int v771 = v715;
                            }
                            signed int v772 = v769 - v770;
                            signed int v773 = v771 >> v767;
                            if (v772 >= v773) {
                              unsigned int v774 = v773;
                            }
                            else {
                              unsigned int v774 = v772;
                            }
                            if (v766 && v774)
                            {
                              int v775 = 0;
                              uint64_t v776 = v700 + 4 * v701 * v770 + 4 * v762;
                              uint64_t v777 = 4 * v701;
                              do
                              {
                                uint64_t v778 = 0;
                                do
                                {
                                  uint64_t v779 = v776 + v778;
                                  *(unsigned char *)(v779 + 2) = v696[32];
                                  *(unsigned char *)(v779 + 3) = v696[48];
                                  v778 += 4;
                                }
                                while (4 * v766 != v778);
                                ++v775;
                                v776 += v777;
                              }
                              while (v775 != v774);
                              sub_224AFF17C((char *)(v699 + 768), v717 >> v767, v716 >> v759, v766, v774, v1014, v698, v711, v712, v708 != 3, 0);
                              int v692 = v1008;
                            }
                          }
                          unint64_t v19 = v986;
                          unint64_t v174 = v1026;
                        }
                        uint64_t v780 = *(void *)(v11 + 3256);
                        if (v692)
                        {
                          uint64_t v781 = *((unsigned __int8 *)v15 + 21);
                          uint64_t v1040 = *((void *)v15 + 1);
                          LOBYTE(v1041) = *((unsigned char *)v15 + 24) + 1;
                          BYTE1(v1041) = *((unsigned char *)v15 + 25) + 1;
                          BYTE2(v1041) = v1034;
                          unsigned int v782 = (0x178u >> v781) & 2 | (v781 == 6);
                        }
                        else
                        {
                          unsigned int v782 = *((unsigned __int8 *)v15 + 21);
                          uint64_t v1040 = *((unsigned int *)v15 + 2);
                          LOBYTE(v1041) = *((unsigned char *)v15 + 24) + 1;
                          if (*((unsigned char *)v15 + 28)) {
                            char v783 = 0;
                          }
                          else {
                            char v783 = -1;
                          }
                          BYTE1(v1041) = v783;
                          BYTE2(v1041) = v1034;
                          if ((int)v174 >= (int)v19) {
                            unsigned int v784 = v19;
                          }
                          else {
                            unsigned int v784 = v174;
                          }
                          BOOL v786 = v784 > 1 && v782 == 2;
                          LOBYTE(v782) = v786 | (2 * (v782 == 3));
                        }
                        uint64_t v787 = *(void (**)(uint64_t, uint64_t *, void, unint64_t, unint64_t))(v780 + 63016);
                        HIBYTE(v1041) = v782;
                        v787(v1035 + 8 * (*(_DWORD *)(v1035 + 28) & 0x1FLL) + 712, &v1040, *(unsigned int *)(v1035 + 24), v174, v19);
                        char v299 = v1031;
                        unsigned int v301 = v232;
                        uint64_t v302 = v691;
                        int v788 = v1006;
                        switch((int)v19)
                        {
                          case 1:
                            v789 = &v1030[v1035];
                            v789[160] = v1006;
                            v789[224] = *((unsigned char *)v15 + 5);
                            v789[256] = 0;
                            v789[192] = *((unsigned char *)v15 + 6);
                            v789[624] = 0;
                            v789[8224] = 0;
                            v789[448] = v691[3];
                            v789[288] = *((unsigned char *)v15 + 20);
                            v789[384] = v254;
                            v789[416] = v1018;
                            v789[32] = *((unsigned char *)v15 + 21);
                            v789[320] = *((unsigned char *)v15 + 24);
                            v789[352] = *((unsigned char *)v15 + 25);
                            break;
                          case 2:
                            v814 = &v1030[v1035];
                            *((_WORD *)v814 + 80) = 257 * v1006;
                            *((_WORD *)v814 + 112) = *((unsigned __int8 *)v15 + 5) | (*((unsigned __int8 *)v15 + 5) << 8);
                            *((_WORD *)v814 + 128) = 0;
                            *((_WORD *)v814 + 96) = *((unsigned __int8 *)v15 + 6) | (*((unsigned __int8 *)v15 + 6) << 8);
                            *((_WORD *)v814 + 312) = 0;
                            *((_WORD *)v814 + 4112) = 0;
                            *((_WORD *)v814 + 224) = v691[3] | (v691[3] << 8);
                            *((_WORD *)v814 + 144) = *((unsigned __int8 *)v15 + 20) | (*((unsigned __int8 *)v15 + 20) << 8);
                            *((_WORD *)v814 + 192) = 257 * v254;
                            *((_WORD *)v814 + 208) = 257 * v1018;
                            *((_WORD *)v814 + 16) = *((unsigned __int8 *)v15 + 21) | (*((unsigned __int8 *)v15 + 21) << 8);
                            *((_WORD *)v814 + 160) = 257 * *((char *)v15 + 24);
                            *((_WORD *)v814 + 176) = *((unsigned __int8 *)v15 + 25) | (*((unsigned __int8 *)v15 + 25) << 8);
                            break;
                          case 3:
                          case 5:
                          case 6:
                          case 7:
                            break;
                          case 4:
                            unsigned int v815 = &v1030[v1035];
                            *((_DWORD *)v815 + 40) = 16843009 * v1006;
                            *((_DWORD *)v815 + 56) = 16843009 * *((unsigned __int8 *)v15 + 5);
                            *((_DWORD *)v815 + 64) = 0;
                            *((_DWORD *)v815 + 48) = 16843009 * *((unsigned __int8 *)v15 + 6);
                            *((_DWORD *)v815 + 156) = 0;
                            *((_DWORD *)v815 + 2056) = 0;
                            *((_DWORD *)v815 + 112) = 16843009 * v691[3];
                            *((_DWORD *)v815 + 72) = 16843009 * *((unsigned __int8 *)v15 + 20);
                            *((_DWORD *)v815 + 96) = 16843009 * v254;
                            *((_DWORD *)v815 + 104) = 16843009 * v1018;
                            *((_DWORD *)v815 + 8) = 16843009 * *((unsigned __int8 *)v15 + 21);
                            *((_DWORD *)v815 + 80) = 16843009 * *((char *)v15 + 24);
                            *((_DWORD *)v815 + 88) = 16843009 * *((unsigned __int8 *)v15 + 25);
                            break;
                          case 8:
                            unsigned int v816 = &v1030[v1035];
                            *((void *)v816 + 20) = 0x101010101010101 * v1006;
                            *((void *)v816 + 28) = 0x101010101010101 * *((unsigned __int8 *)v15 + 5);
                            *((void *)v816 + 32) = 0;
                            *((void *)v816 + 24) = 0x101010101010101 * *((unsigned __int8 *)v15 + 6);
                            *((void *)v816 + 78) = 0;
                            *((void *)v816 + 1028) = 0;
                            *((void *)v816 + 56) = 0x101010101010101 * v691[3];
                            *((void *)v816 + 36) = 0x101010101010101 * *((unsigned __int8 *)v15 + 20);
                            *((void *)v816 + 48) = 0x101010101010101 * v254;
                            *((void *)v816 + 52) = 0x101010101010101 * v1018;
                            *((void *)v816 + 4) = 0x101010101010101 * *((unsigned __int8 *)v15 + 21);
                            *((void *)v816 + 40) = 0x101010101010101 * *((char *)v15 + 24);
                            *((void *)v816 + 44) = 0x101010101010101 * *((unsigned __int8 *)v15 + 25);
                            break;
                          default:
                            uint64_t v302 = v691;
                            if (v19 == 16)
                            {
                              int v788 = v1006;
                              char v817 = &v1030[v1035];
                              *((int64x2_t *)v817 + 10) = vdupq_n_s64(0x101010101010101 * v1006);
                              *((int64x2_t *)v817 + 14) = vdupq_n_s64(0x101010101010101* (unint64_t)*((unsigned __int8 *)v15 + 5));
                              *((_OWORD *)v817 + 16) = 0u;
                              *((int64x2_t *)v817 + 12) = vdupq_n_s64(0x101010101010101* (unint64_t)*((unsigned __int8 *)v15 + 6));
                              *((_OWORD *)v817 + 39) = 0u;
                              *((_OWORD *)v817 + 514) = 0u;
                              *((int64x2_t *)v817 + 28) = vdupq_n_s64(0x101010101010101 * (unint64_t)v691[3]);
                              *((int64x2_t *)v817 + 18) = vdupq_n_s64(0x101010101010101* (unint64_t)*((unsigned __int8 *)v15 + 20));
                              *((int64x2_t *)v817 + 24) = vdupq_n_s64(0x101010101010101 * (unint64_t)v254);
                              *((int64x2_t *)v817 + 26) = vdupq_n_s64(0x101010101010101 * (unint64_t)v1018);
                              *((int64x2_t *)v817 + 2) = vdupq_n_s64(0x101010101010101* (unint64_t)*((unsigned __int8 *)v15 + 21));
                              *((int64x2_t *)v817 + 20) = vdupq_n_s64(0x101010101010101 * *((char *)v15 + 24));
                              *((int64x2_t *)v817 + 22) = vdupq_n_s64(0x101010101010101* (unint64_t)*((unsigned __int8 *)v15 + 25));
                            }
                            else
                            {
                              int v788 = v1006;
                              if (v19 == 32)
                              {
                                uint64_t v790 = v1035 + 160;
                                int64x2_t v791 = vdupq_n_s64(0x101010101010101 * v1006);
                                *(int64x2_t *)&v1030[v790] = v791;
                                uint64_t v792 = v1030 + 16;
                                *(int64x2_t *)(v790 + v792) = v791;
                                int64x2_t v793 = vdupq_n_s64(0x101010101010101 * (unint64_t)*((unsigned __int8 *)v15 + 5));
                                uint64_t v794 = v1035 + 224;
                                *(int64x2_t *)&v1030[v794] = v793;
                                *(int64x2_t *)(v794 + v792) = v793;
                                uint64_t v795 = v1035 + 256;
                                *(_OWORD *)&v1030[v795] = 0u;
                                *(_OWORD *)(v795 + v792) = 0u;
                                uint64_t v796 = v1035 + 192;
                                int64x2_t v797 = vdupq_n_s64(0x101010101010101 * (unint64_t)*((unsigned __int8 *)v15 + 6));
                                *(int64x2_t *)&v1030[v796] = v797;
                                *(int64x2_t *)(v796 + v792) = v797;
                                uint64_t v798 = v1035 + 624;
                                *(_OWORD *)&v1030[v798] = 0u;
                                *(_OWORD *)(v798 + v792) = 0u;
                                uint64_t v799 = v1035 + 8224;
                                *(_OWORD *)&v1030[v799] = 0u;
                                *(_OWORD *)(v799 + v792) = 0u;
                                uint64_t v800 = v1035 + 448;
                                int64x2_t v801 = vdupq_n_s64(0x101010101010101 * (unint64_t)v691[3]);
                                *(int64x2_t *)&v1030[v800] = v801;
                                *(int64x2_t *)(v800 + v792) = v801;
                                uint64_t v802 = v1035 + 288;
                                int64x2_t v803 = vdupq_n_s64(0x101010101010101 * (unint64_t)*((unsigned __int8 *)v15 + 20));
                                *(int64x2_t *)&v1030[v802] = v803;
                                *(int64x2_t *)(v802 + v792) = v803;
                                uint64_t v804 = v1035 + 384;
                                int64x2_t v805 = vdupq_n_s64(0x101010101010101 * (unint64_t)v254);
                                *(int64x2_t *)&v1030[v804] = v805;
                                *(int64x2_t *)(v804 + v792) = v805;
                                uint64_t v806 = v1035 + 416;
                                int64x2_t v807 = vdupq_n_s64(0x101010101010101 * (unint64_t)v1018);
                                *(int64x2_t *)&v1030[v806] = v807;
                                *(int64x2_t *)(v806 + v792) = v807;
                                int64x2_t v808 = vdupq_n_s64(0x101010101010101 * (unint64_t)*((unsigned __int8 *)v15 + 21));
                                uint64_t v809 = v1035 + 32;
                                *(int64x2_t *)&v1030[v809] = v808;
                                *(int64x2_t *)(v809 + v792) = v808;
                                uint64_t v810 = v1035 + 320;
                                int64x2_t v811 = vdupq_n_s64(0x101010101010101 * *((char *)v15 + 24));
                                *(int64x2_t *)&v1030[v810] = v811;
                                *(int64x2_t *)(v810 + v792) = v811;
                                uint64_t v812 = v1035 + 352;
                                int64x2_t v813 = vdupq_n_s64(0x101010101010101 * (unint64_t)*((unsigned __int8 *)v15 + 25));
                                *(int64x2_t *)&v1030[v812] = v813;
                                *(int64x2_t *)(v812 + v792) = v813;
                              }
                            }
                            break;
                        }
                        switch((int)v174)
                        {
                          case 1:
                            *(unsigned char *)(*(void *)(v1035 + 656) + v226 + 128) = v788;
                            *(unsigned char *)(*(void *)(v1035 + 656) + v226 + 192) = *((unsigned char *)v15 + 5);
                            *(unsigned char *)(*(void *)(v1035 + 656) + v226 + 224) = 0;
                            *(unsigned char *)(*(void *)(v1035 + 656) + v226 + 160) = *((unsigned char *)v15 + 6);
                            *(unsigned char *)(*(void *)(v1035 + 656) + v226 + 592) = 0;
                            *(unsigned char *)(v1035 + v226 + 0x2000) = 0;
                            *(unsigned char *)(*(void *)(v1035 + 656) + v226 + 416) = v302[2];
                            *(unsigned char *)(*(void *)(v1035 + 656) + v226 + 256) = *((unsigned char *)v15 + 20);
                            *(unsigned char *)(*(void *)(v1035 + 656) + v226 + 352) = v254;
                            *(unsigned char *)(*(void *)(v1035 + 656) + v226 + 384) = v1018;
                            *(unsigned char *)(*(void *)(v1035 + 656) + v226) = *((unsigned char *)v15 + 21);
                            *(unsigned char *)(*(void *)(v1035 + 656) + v226 + 288) = *((unsigned char *)v15 + 24);
                            *(unsigned char *)(*(void *)(v1035 + 656) + v226 + 320) = *((unsigned char *)v15 + 25);
                            if (v301) {
                              goto LABEL_1014;
                            }
                            goto LABEL_1022;
                          case 2:
                            *(_WORD *)(*(void *)(v1035 + 656) + v226 + 128) = 257 * v788;
                            *(_WORD *)(*(void *)(v1035 + 656) + v226 + 192) = *((unsigned __int8 *)v15 + 5) | (*((unsigned __int8 *)v15 + 5) << 8);
                            *(_WORD *)(*(void *)(v1035 + 656) + v226 + 224) = 0;
                            *(_WORD *)(*(void *)(v1035 + 656) + v226 + 160) = *((unsigned __int8 *)v15 + 6) | (*((unsigned __int8 *)v15 + 6) << 8);
                            *(_WORD *)(*(void *)(v1035 + 656) + v226 + 592) = 0;
                            *(_WORD *)(v1035 + v226 + 0x2000) = 0;
                            *(_WORD *)(*(void *)(v1035 + 656) + v226 + 416) = v302[2] | (v302[2] << 8);
                            *(_WORD *)(*(void *)(v1035 + 656) + v226 + 256) = *((unsigned __int8 *)v15 + 20) | (*((unsigned __int8 *)v15 + 20) << 8);
                            *(_WORD *)(*(void *)(v1035 + 656) + v226 + 352) = 257 * v254;
                            *(_WORD *)(*(void *)(v1035 + 656) + v226 + 384) = 257 * v1018;
                            *(_WORD *)(*(void *)(v1035 + 656) + v226) = *((unsigned __int8 *)v15 + 21) | (*((unsigned __int8 *)v15 + 21) << 8);
                            *(_WORD *)(*(void *)(v1035 + 656) + v226 + 288) = 257 * *((char *)v15 + 24);
                            *(_WORD *)(*(void *)(v1035 + 656) + v226 + 320) = *((unsigned __int8 *)v15 + 25) | (*((unsigned __int8 *)v15 + 25) << 8);
                            if (!v301) {
                              goto LABEL_1022;
                            }
                            goto LABEL_1014;
                          case 3:
                          case 5:
                          case 6:
                          case 7:
                            goto LABEL_1013;
                          case 4:
                            *(_DWORD *)(*(void *)(v1035 + 656) + v226 + 128) = 16843009 * v788;
                            *(_DWORD *)(*(void *)(v1035 + 656) + v226 + 192) = 16843009
                                                                               * *((unsigned __int8 *)v15 + 5);
                            *(_DWORD *)(*(void *)(v1035 + 656) + v226 + 224) = 0;
                            *(_DWORD *)(*(void *)(v1035 + 656) + v226 + 160) = 16843009
                                                                               * *((unsigned __int8 *)v15 + 6);
                            *(_DWORD *)(*(void *)(v1035 + 656) + v226 + 592) = 0;
                            *(_DWORD *)(v1035 + v226 + 0x2000) = 0;
                            *(_DWORD *)(*(void *)(v1035 + 656) + v226 + 416) = 16843009 * v302[2];
                            *(_DWORD *)(*(void *)(v1035 + 656) + v226 + 256) = 16843009
                                                                               * *((unsigned __int8 *)v15 + 20);
                            *(_DWORD *)(*(void *)(v1035 + 656) + v226 + 352) = 16843009 * v254;
                            *(_DWORD *)(*(void *)(v1035 + 656) + v226 + 384) = 16843009 * v1018;
                            *(_DWORD *)(*(void *)(v1035 + 656) + v226) = 16843009 * *((unsigned __int8 *)v15 + 21);
                            *(_DWORD *)(*(void *)(v1035 + 656) + v226 + 288) = 16843009 * *((char *)v15 + 24);
                            *(_DWORD *)(*(void *)(v1035 + 656) + v226 + 320) = 16843009
                                                                               * *((unsigned __int8 *)v15 + 25);
                            goto LABEL_1013;
                          case 8:
                            *(void *)(*(void *)(v1035 + 656) + v226 + 128) = 0x101010101010101 * v788;
                            *(void *)(*(void *)(v1035 + 656) + v226 + 192) = 0x101010101010101
                                                                               * *((unsigned __int8 *)v15 + 5);
                            *(void *)(*(void *)(v1035 + 656) + v226 + 224) = 0;
                            *(void *)(*(void *)(v1035 + 656) + v226 + 160) = 0x101010101010101
                                                                               * *((unsigned __int8 *)v15 + 6);
                            *(void *)(*(void *)(v1035 + 656) + v226 + 592) = 0;
                            *(void *)(v1035 + v226 + 0x2000) = 0;
                            *(void *)(*(void *)(v1035 + 656) + v226 + 416) = 0x101010101010101 * v302[2];
                            *(void *)(*(void *)(v1035 + 656) + v226 + 256) = 0x101010101010101
                                                                               * *((unsigned __int8 *)v15 + 20);
                            *(void *)(*(void *)(v1035 + 656) + v226 + 352) = 0x101010101010101 * v254;
                            *(void *)(*(void *)(v1035 + 656) + v226 + 384) = 0x101010101010101 * v1018;
                            *(void *)(*(void *)(v1035 + 656) + v226) = 0x101010101010101
                                                                         * *((unsigned __int8 *)v15 + 21);
                            *(void *)(*(void *)(v1035 + 656) + v226 + 288) = 0x101010101010101
                                                                               * *((char *)v15 + 24);
                            uint64_t v829 = 0x101010101010101 * *((unsigned __int8 *)v15 + 25);
                            uint64_t v830 = *(void *)(v1035 + 656) + v226;
                            goto LABEL_1021;
                          default:
                            if (v174 == 16)
                            {
                              uint64_t v831 = 0x101010101010101 * v788;
                              *(void *)(*(void *)(v1035 + 656) + v226 + 128) = v831;
                              uint64_t v832 = v226 + 8;
                              *(void *)(*(void *)(v1035 + 656) + v832 + 128) = v831;
                              uint64_t v833 = 0x101010101010101 * *((unsigned __int8 *)v15 + 5);
                              *(void *)(*(void *)(v1035 + 656) + v226 + 192) = v833;
                              *(void *)(*(void *)(v1035 + 656) + v832 + 192) = v833;
                              *(void *)(*(void *)(v1035 + 656) + v226 + 224) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v832 + 224) = 0;
                              uint64_t v834 = 0x101010101010101 * *((unsigned __int8 *)v15 + 6);
                              *(void *)(*(void *)(v1035 + 656) + v226 + 160) = v834;
                              *(void *)(*(void *)(v1035 + 656) + v832 + 160) = v834;
                              *(void *)(*(void *)(v1035 + 656) + v226 + 592) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v832 + 592) = 0;
                              uint64_t v835 = v1035 + v226;
                              *(void *)(v835 + 8200) = 0;
                              *(void *)(v835 + 0x2000) = 0;
                              uint64_t v836 = 0x101010101010101 * v302[2];
                              *(void *)(*(void *)(v1035 + 656) + v226 + 416) = v836;
                              *(void *)(*(void *)(v1035 + 656) + v832 + 416) = v836;
                              uint64_t v837 = 0x101010101010101 * *((unsigned __int8 *)v15 + 20);
                              *(void *)(*(void *)(v1035 + 656) + v226 + 256) = v837;
                              *(void *)(*(void *)(v1035 + 656) + v832 + 256) = v837;
                              *(void *)(*(void *)(v1035 + 656) + v226 + 352) = 0x101010101010101 * v254;
                              *(void *)(*(void *)(v1035 + 656) + v832 + 352) = 0x101010101010101 * v254;
                              *(void *)(*(void *)(v1035 + 656) + v226 + 384) = 0x101010101010101 * v1018;
                              *(void *)(*(void *)(v1035 + 656) + v832 + 384) = 0x101010101010101 * v1018;
                              uint64_t v838 = 0x101010101010101 * *((unsigned __int8 *)v15 + 21);
                              *(void *)(*(void *)(v1035 + 656) + v226) = v838;
                              *(void *)(*(void *)(v1035 + 656) + v832) = v838;
                              uint64_t v839 = 0x101010101010101 * *((char *)v15 + 24);
                              *(void *)(*(void *)(v1035 + 656) + v226 + 288) = v839;
                              *(void *)(*(void *)(v1035 + 656) + v832 + 288) = v839;
                              uint64_t v829 = 0x101010101010101 * *((unsigned __int8 *)v15 + 25);
                              *(void *)(*(void *)(v1035 + 656) + v226 + 320) = v829;
                              uint64_t v830 = *(void *)(v1035 + 656) + v832;
                            }
                            else
                            {
                              if (v174 != 32)
                              {
LABEL_1013:
                                if (!v301)
                                {
LABEL_1022:
                                  uint64_t v11 = v1032;
                                  uint64_t v296 = v1023;
                                  LODWORD(v300) = v1030;
                                  goto LABEL_1039;
                                }
LABEL_1014:
                                uint64_t v11 = v1032;
                                uint64_t v296 = v1023;
                                LODWORD(v300) = v1030;
                                switch(v1019)
                                {
                                  case 1:
                                    *(unsigned char *)(v1035 + v1021 + 592) = 0;
                                    break;
                                  case 2:
                                    *(_WORD *)(v1035 + v1021 + 592) = 0;
                                    break;
                                  case 3:
                                  case 5:
                                  case 6:
                                  case 7:
                                    break;
                                  case 4:
                                    *(_DWORD *)(v1035 + v1021 + 592) = 0;
                                    break;
                                  case 8:
                                    uint64_t v840 = v1035 + v1021;
                                    goto LABEL_1027;
                                  default:
                                    if (v1019 == 16)
                                    {
                                      uint64_t v840 = v1035 + v1021;
                                      *(void *)(v840 + 600) = 0;
LABEL_1027:
                                      *(void *)(v840 + 592) = 0;
                                    }
                                    else if (v1019 == 32)
                                    {
                                      *(_OWORD *)(v1035 + 592 + v1021) = 0u;
                                      *(_OWORD *)(v1035 + 592 + v1021 + 16) = 0u;
                                    }
                                    break;
                                }
                                switch(v297)
                                {
                                  case 1:
LABEL_1029:
                                    *(unsigned char *)(*(void *)(v1035 + 656) + v1022 + 560) = 0;
                                    goto LABEL_1039;
                                  case 2:
LABEL_1033:
                                    *(_WORD *)(*(void *)(v1035 + 656) + v1022 + 560) = 0;
                                    goto LABEL_1039;
                                  case 3:
                                  case 5:
                                  case 6:
                                  case 7:
                                    goto LABEL_1039;
                                  case 4:
LABEL_1034:
                                    *(_DWORD *)(*(void *)(v1035 + 656) + v1022 + 560) = 0;
                                    goto LABEL_1039;
                                  case 8:
LABEL_1035:
                                    uint64_t v843 = *(void *)(v1035 + 656) + v1022;
                                    goto LABEL_1038;
                                  default:
LABEL_1030:
                                    if (v297 == 16)
                                    {
                                      *(void *)(*(void *)(v1035 + 656) + v1022 + 560) = 0;
                                      uint64_t v841 = *(void *)(v1035 + 656);
                                      uint64_t v842 = v1022 + 8;
                                    }
                                    else
                                    {
                                      if (v297 != 32) {
                                        goto LABEL_1039;
                                      }
                                      *(void *)(*(void *)(v1035 + 656) + v1022 + 560) = 0;
                                      *(void *)(*(void *)(v1035 + 656) + v1022 + 8 + 560) = 0;
                                      *(void *)(*(void *)(v1035 + 656) + v1022 + 16 + 560) = 0;
                                      uint64_t v841 = *(void *)(v1035 + 656);
                                      uint64_t v842 = v1022 + 24;
                                    }
                                    uint64_t v843 = v841 + v842;
LABEL_1038:
                                    *(void *)(v843 + 560) = 0;
                                    break;
                                }
                                goto LABEL_1039;
                              }
                              uint64_t v818 = 0x101010101010101 * v788;
                              *(void *)(*(void *)(v1035 + 656) + v226 + 128) = v818;
                              uint64_t v819 = v226 + 8;
                              *(void *)(*(void *)(v1035 + 656) + v819 + 128) = v818;
                              uint64_t v820 = v226 + 16;
                              *(void *)(*(void *)(v1035 + 656) + v820 + 128) = v818;
                              uint64_t v821 = v226 + 24;
                              *(void *)(*(void *)(v1035 + 656) + v821 + 128) = v818;
                              uint64_t v822 = 0x101010101010101 * *((unsigned __int8 *)v15 + 5);
                              *(void *)(*(void *)(v1035 + 656) + v226 + 192) = v822;
                              *(void *)(*(void *)(v1035 + 656) + v819 + 192) = v822;
                              *(void *)(*(void *)(v1035 + 656) + v820 + 192) = v822;
                              *(void *)(*(void *)(v1035 + 656) + v821 + 192) = v822;
                              *(void *)(*(void *)(v1035 + 656) + v226 + 224) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v819 + 224) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v820 + 224) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v821 + 224) = 0;
                              uint64_t v823 = 0x101010101010101 * *((unsigned __int8 *)v15 + 6);
                              *(void *)(*(void *)(v1035 + 656) + v226 + 160) = v823;
                              *(void *)(*(void *)(v1035 + 656) + v819 + 160) = v823;
                              *(void *)(*(void *)(v1035 + 656) + v820 + 160) = v823;
                              *(void *)(*(void *)(v1035 + 656) + v821 + 160) = v823;
                              *(void *)(*(void *)(v1035 + 656) + v226 + 592) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v819 + 592) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v820 + 592) = 0;
                              *(void *)(*(void *)(v1035 + 656) + v821 + 592) = 0;
                              uint64_t v824 = v1035 + 0x2000;
                              *(_OWORD *)(v824 + v226) = 0u;
                              *(_OWORD *)(v824 + v820) = 0u;
                              uint64_t v825 = 0x101010101010101 * v302[2];
                              *(void *)(*(void *)(v1035 + 656) + v226 + 416) = v825;
                              *(void *)(*(void *)(v1035 + 656) + v819 + 416) = v825;
                              *(void *)(*(void *)(v1035 + 656) + v820 + 416) = v825;
                              *(void *)(*(void *)(v1035 + 656) + v821 + 416) = v825;
                              uint64_t v826 = 0x101010101010101 * *((unsigned __int8 *)v15 + 20);
                              *(void *)(*(void *)(v1035 + 656) + v226 + 256) = v826;
                              *(void *)(*(void *)(v1035 + 656) + v819 + 256) = v826;
                              *(void *)(*(void *)(v1035 + 656) + v820 + 256) = v826;
                              *(void *)(*(void *)(v1035 + 656) + v821 + 256) = v826;
                              *(void *)(*(void *)(v1035 + 656) + v226 + 352) = 0x101010101010101 * v254;
                              *(void *)(*(void *)(v1035 + 656) + v819 + 352) = 0x101010101010101 * v254;
                              *(void *)(*(void *)(v1035 + 656) + v820 + 352) = 0x101010101010101 * v254;
                              *(void *)(*(void *)(v1035 + 656) + v821 + 352) = 0x101010101010101 * v254;
                              *(void *)(*(void *)(v1035 + 656) + v226 + 384) = 0x101010101010101 * v1018;
                              *(void *)(*(void *)(v1035 + 656) + v819 + 384) = 0x101010101010101 * v1018;
                              *(void *)(*(void *)(v1035 + 656) + v820 + 384) = 0x101010101010101 * v1018;
                              *(void *)(*(void *)(v1035 + 656) + v821 + 384) = 0x101010101010101 * v1018;
                              uint64_t v827 = 0x101010101010101 * *((unsigned __int8 *)v15 + 21);
                              *(void *)(*(void *)(v1035 + 656) + v226) = v827;
                              *(void *)(*(void *)(v1035 + 656) + v819) = v827;
                              *(void *)(*(void *)(v1035 + 656) + v820) = v827;
                              *(void *)(*(void *)(v1035 + 656) + v821) = v827;
                              uint64_t v828 = 0x101010101010101 * *((char *)v15 + 24);
                              *(void *)(*(void *)(v1035 + 656) + v226 + 288) = v828;
                              *(void *)(*(void *)(v1035 + 656) + v819 + 288) = v828;
                              *(void *)(*(void *)(v1035 + 656) + v820 + 288) = v828;
                              *(void *)(*(void *)(v1035 + 656) + v821 + 288) = v828;
                              uint64_t v829 = 0x101010101010101 * *((unsigned __int8 *)v15 + 25);
                              *(void *)(*(void *)(v1035 + 656) + v226 + 320) = v829;
                              *(void *)(*(void *)(v1035 + 656) + v819 + 320) = v829;
                              *(void *)(*(void *)(v1035 + 656) + v820 + 320) = v829;
                              uint64_t v830 = *(void *)(v1035 + 656) + v821;
                            }
LABEL_1021:
                            *(void *)(v830 + 320) = v829;
                            if (!v301) {
                              goto LABEL_1022;
                            }
                            goto LABEL_1014;
                        }
                      }
                      uint64_t v454 = (uint64_t)&v259[1728];
                      uint64_t v111 = v1031;
                      uint64_t v247 = v1033;
                      int v44 = v980;
                      unint64_t v19 = v19;
                      int v175 = v257;
                      if (!v261)
                      {
LABEL_608:
                        int v248 = (unsigned __int16 *)v15 + 4;
                        *((unsigned char *)v15 + 20) = 0;
                        if (!v44) {
                          goto LABEL_609;
                        }
                        goto LABEL_352;
                      }
                      uint64_t v455 = *(void *)(v1035 + 656);
                      int v1010 = v261;
                      if (v1024 <= v1016 || v13 <= v1012)
                      {
                        uint64_t v458 = v454;
                        if (v988 | v991)
                        {
                          uint64_t v459 = v1035 + 32;
                          if (v1024 <= v1016) {
                            uint64_t v596 = *(void *)(v1035 + 656);
                          }
                          else {
                            uint64_t v596 = v1035 + 32;
                          }
                          if (v1024 <= v1016) {
                            uint64_t v597 = v1033;
                          }
                          else {
                            uint64_t v597 = v175;
                          }
                          if (!*(unsigned char *)(v596 + v597 + 224) && *(unsigned char *)(v596 + v597 + 256))
                          {
                            BOOL v93 = *(char *)(v596 + v597 + 288) > 3 == *(char *)(v596 + v597 + 320) < 4;
                            uint64_t v598 = 4;
                            if (v93) {
                              uint64_t v598 = 0;
                            }
LABEL_1175:
                            v898 = v111;
                            sub_224AADEFC(v458, (unsigned int *)&v111[707] + v598);
                            int v900 = v899;
                            uint64_t v901 = *(void *)(v1035 + 656);
                            if (v900)
                            {
                              unsigned int v902 = sub_224ADDFCC(v901, v459, v175, v247, v988, v991);
                              sub_224AADEFC(v458, (unsigned int *)&v898[729] + v902);
                              int v904 = v903;
                              uint64_t v905 = *(void *)(v1035 + 656);
                              if (v904)
                              {
                                unsigned int v906 = sub_224ADE0F8(v905, v459, v175, v247, v988, v991);
                                sub_224AADEFC(v458, (unsigned int *)&v898[732] + v906);
                                char v908 = v907 + 2;
                              }
                              else
                              {
                                unsigned int v912 = sub_224ADE238(v905, v459, v175, v247, v988, v991);
                                sub_224AADEFC(v458, (unsigned int *)&v898[730] + v912 + 1);
                              }
                              *((unsigned char *)v15 + 24) = v908;
                              unsigned int v913 = sub_224ADE358(*(void *)(v1035 + 656), v459, v175, v247, v988, v991);
                              sub_224AADEFC(v458, (unsigned int *)&v898[733] + v913 + 1);
                              if (v914)
                              {
                                char v911 = 6;
                              }
                              else
                              {
                                unsigned int v915 = sub_224ADE4A8(*(void *)(v1035 + 656), v459, v175, v247, v988, v991);
                                sub_224AADEFC(v458, (unsigned int *)&v898[735] + v915);
                                char v911 = v916 + 4;
                              }
                            }
                            else
                            {
                              unsigned int v909 = sub_224ADE5EC(v901, v459, v175, v247, v988, v991);
                              sub_224AADEFC(v458, (unsigned int *)&v898[736] + v909 + 1);
                              if (v910)
                              {
                                *((_WORD *)v15 + 12) = 1540;
                                char v911 = 6;
                                goto LABEL_1187;
                              }
                              unsigned int v917 = sub_224ADE704(*(void *)(v1035 + 656), v459, v175, v247, v988, v991);
                              *((unsigned char *)v15 + 24) = 0;
                              sub_224AADEFC(v458, (unsigned int *)&v898[738] + v917);
                              char v911 = v918 + 1;
                              *((unsigned char *)v15 + 25) = v918 + 1;
                              if ((v918 + 1) != 2)
                              {
LABEL_1187:
                                LODWORD(v1039) = 0;
                                v1037[0] = 0;
                                sub_224ABC22C((uint64_t *)(v1035 + 664), &v1040, &v1039, v1037, (*((unsigned char *)v15 + 24) + 1) | ((v911 + 1) << 8), v1034, v1027, *(_DWORD *)(v1035 + 28), *(_DWORD *)(v1035 + 24));
                                sub_224AADB30(v458, (int8x16_t *)&v898[2 * v1037[0] + 422], 7);
                                *((unsigned char *)v15 + 21) = v921;
                                v922 = (char *)&unk_224B17845 + 2 * v921;
                                *((unsigned char *)v15 + 23) = 0;
                                if (v921 == 7)
                                {
                                  int v923 = v1039;
                                  if ((int)v1039 >= 2)
                                  {
                                    int v924 = v1043;
                                    if (v1041 <= 639) {
                                      uint64_t v925 = 2 * (v1043 < 640);
                                    }
                                    else {
                                      uint64_t v925 = v1043 < 640;
                                    }
                                    sub_224AADEFC(v458, (unsigned int *)&v1031[701] + v925);
                                    unsigned __int8 v927 = *((unsigned char *)v15 + 23) + v926;
                                    *((unsigned char *)v15 + 23) = v927;
                                    if (v927 == 1)
                                    {
                                      v928 = v1031;
                                      if (v923 == 2) {
                                        goto LABEL_1209;
                                      }
                                      uint64_t v929 = 2;
LABEL_1204:
                                      uint64_t v933 = *((_DWORD *)&v1040 + 4 * v929 + 2) < 640;
                                      if (v924 <= 639) {
                                        uint64_t v933 = 2 * v933;
                                      }
                                      sub_224AADEFC(v458, (unsigned int *)&v928[701] + v933);
                                      v928 = v1031;
                                      unsigned __int8 v927 = *((unsigned char *)v15 + 23) + v934;
                                      *((unsigned char *)v15 + 23) = v927;
LABEL_1209:
                                      v935 = (unsigned __int16 *)v15 + 4;
                                      int v936 = *((unsigned __int8 *)v15 + 21);
                                      BOOL v647 = v936 != 6;
                                      unsigned int v937 = *v922;
                                      if (v937 < 2)
                                      {
                                        *(_DWORD *)v935 = *((_DWORD *)&v1040 + 4 * v927);
                                        uint64_t v11 = v1032;
                                        sub_224ADE840(*(void *)(v1032 + 24), v935);
                                        unint64_t v174 = v1026;
                                      }
                                      else
                                      {
                                        uint64_t v11 = v1032;
                                        unint64_t v174 = v1026;
                                        if (v937 == 2)
                                        {
                                          uint64_t v938 = *(void *)(v1032 + 24);
                                          v939 = (int *)(v938 + 36 * *((char *)v15 + 24) + 896);
                                          BOOL v647 = v936 != 6 || *v939 == 1;
                                          *((_DWORD *)v15 + 2) = sub_224ADE8A0(v939, *(_DWORD *)(v1035 + 24), *(_DWORD *)(v1035 + 28), v1026, v19, v938);
                                        }
                                        else if (v937 == 3)
                                        {
                                          *(_DWORD *)v935 = *((_DWORD *)&v1040 + 4 * v927);
                                          sub_224ADD848(v1035, v935, v928 + 1656, *(unsigned char *)(*(void *)(v1032 + 24) + 269) == 0, *(double *)&v627, *(double *)&v600, *(double *)&v601, *(double *)&v602, v603);
                                        }
                                      }
                                      unsigned int v941 = v922[1];
                                      if (v941 < 2)
                                      {
                                        *((_DWORD *)v15 + 3) = *((_DWORD *)&v1040
                                                               + 4 * *((unsigned __int8 *)v15 + 23)
                                                               + 1);
                                        sub_224ADE840(*(void *)(v11 + 24), (unsigned __int16 *)v15 + 6);
                                        int v942 = v1006;
                                      }
                                      else
                                      {
                                        int v942 = v1006;
                                        if (v941 == 2)
                                        {
                                          uint64_t v943 = *(void *)(v11 + 24);
                                          v944 = (int *)(v943 + 36 * *((char *)v15 + 25) + 896);
                                          if (*v944 == 1) {
                                            BOOL v647 = 1;
                                          }
                                          *((_DWORD *)v15 + 3) = sub_224ADE8A0(v944, *(_DWORD *)(v1035 + 24), *(_DWORD *)(v1035 + 28), v174, v19, v943);
                                        }
                                        else if (v941 == 3)
                                        {
                                          *((_DWORD *)v15 + 3) = *((_DWORD *)&v1040
                                                                 + 4 * *((unsigned __int8 *)v15 + 23)
                                                                 + 1);
                                          sub_224ADD848(v1035, (_WORD *)v15 + 6, v1031 + 1656, *(unsigned char *)(*(void *)(v11 + 24) + 269) == 0, *(double *)&v627, *(double *)&v600, *(double *)&v601, *(double *)&v602, v603);
                                        }
                                      }
                                      v945 = *(unsigned char **)(v11 + 8);
                                      if (v945[396])
                                      {
                                        uint64_t v946 = *(void *)(v1035 + 656) + v247;
                                        if (*(unsigned __int8 *)(v946 + 256) <= 2u)
                                        {
                                          if (*(unsigned char *)(v946 + 288) == 6) {
                                            int v947 = 3;
                                          }
                                          else {
                                            int v947 = 0;
                                          }
                                        }
                                        else
                                        {
                                          int v947 = 1;
                                        }
                                        if (v1030[v1035 + 288] <= 2u)
                                        {
                                          if (v1030[v1035 + 320] == 6) {
                                            int v948 = 3;
                                          }
                                          else {
                                            int v948 = 0;
                                          }
                                        }
                                        else
                                        {
                                          int v948 = 1;
                                        }
                                        int v949 = v948 + v947;
                                        if (v949 >= 5) {
                                          int v949 = 5;
                                        }
                                        sub_224AADEFC(v458, (unsigned int *)&v1031[712] + v949 + 1);
                                        if (v950)
                                        {
                                          uint64_t v226 = v247;
                                          int v252 = v28;
                                          if (((1 << v1034) & 0x3BB80) != 0)
                                          {
                                            uint64_t v951 = byte_224B17855[v1034];
                                            sub_224AADEFC(v458, (unsigned int *)&v1031[715] + v951 + 1);
                                            *((unsigned char *)v15 + 20) = 4 - v952;
                                            if (!v952)
                                            {
                                              sub_224AADBF0(v458, (uint64_t)&v1031[4 * v951 + 120], 15);
                                              *((unsigned char *)v15 + 16) = v953;
                                            }
                                          }
                                          else
                                          {
                                            *((unsigned char *)v15 + 20) = 3;
                                          }
                                          sub_224AADE84();
                                          *((unsigned char *)v15 + 17) = v958;
                                          goto LABEL_1254;
                                        }
                                        int v1006 = v942;
                                        v945 = *(unsigned char **)(v11 + 8);
                                      }
                                      else
                                      {
                                        int v1006 = v942;
                                      }
                                      int v252 = v28;
                                      if (v945[400])
                                      {
                                        uint64_t v954 = v459;
                                        uint64_t v226 = v247;
                                        unsigned int v955 = sub_224ADE9B4(v945[412], *(unsigned __int8 *)(*(void *)(v11 + 2112) + 248), *(unsigned __int8 *)(*(void *)(v11+ 32+ 296 * *((char *)v15 + 24)+ 8)+ 248), *(unsigned __int8 *)(*(void *)(v11+ 32+ 296 * *((char *)v15 + 25)+ 8)+ 248), *(void *)(v1035 + 656), v954, v1030, v247);
                                        sub_224AADEFC(v458, (unsigned int *)&v1031[709] + v955 + 1);
                                        char v957 = v956 + 1;
                                      }
                                      else
                                      {
                                        uint64_t v226 = v247;
                                        char v957 = 2;
                                      }
                                      *((unsigned char *)v15 + 20) = v957;
LABEL_1254:
                                      unsigned int v232 = v1029;
                                      int v672 = v1010;
                                      goto LABEL_870;
                                    }
                                    goto LABEL_1208;
                                  }
                                }
                                else if (*v922 == 1 || v922[1] == 1)
                                {
                                  unsigned __int8 v927 = 1;
                                  *((unsigned char *)v15 + 23) = 1;
                                  int v930 = v1039;
                                  v928 = v1031;
                                  if ((int)v1039 < 3) {
                                    goto LABEL_1209;
                                  }
                                  int v924 = v1044;
                                  if (v1043 <= 639) {
                                    uint64_t v931 = 2 * (v1044 < 640);
                                  }
                                  else {
                                    uint64_t v931 = v1044 < 640;
                                  }
                                  sub_224AADEFC(v458, (unsigned int *)&v1031[701] + v931);
                                  unsigned __int8 v927 = *((unsigned char *)v15 + 23) + v932;
                                  *((unsigned char *)v15 + 23) = v927;
                                  if (v927 == 2)
                                  {
                                    v928 = v1031;
                                    if (v930 == 3) {
                                      goto LABEL_1209;
                                    }
                                    uint64_t v929 = 3;
                                    goto LABEL_1204;
                                  }
LABEL_1208:
                                  v928 = v1031;
                                  goto LABEL_1209;
                                }
                                unsigned __int8 v927 = 0;
                                goto LABEL_1208;
                              }
                              unsigned int v919 = sub_224ADE0F8(*(void *)(v1035 + 656), v459, v175, v247, v988, v991);
                              sub_224AADEFC(v458, (unsigned int *)&v898[739] + v919 + 1);
                              char v911 = *((unsigned char *)v15 + 25) + v920;
                            }
                            *((unsigned char *)v15 + 25) = v911;
                            goto LABEL_1187;
                          }
                          goto LABEL_773;
                        }
                      }
                      else
                      {
                        int v456 = *(unsigned __int8 *)(v455 + v1033 + 224);
                        int v457 = v257[v1035 + 256];
                        uint64_t v458 = v454;
                        if (!*(unsigned char *)(v455 + v1033 + 224) || !v457)
                        {
                          uint64_t v459 = v1035 + 32;
                          if (v456 | v457)
                          {
                            BOOL v460 = v456 == 0;
                            if (*(unsigned char *)(v455 + v1033 + 224)) {
                              uint64_t v461 = v1035 + 32;
                            }
                            else {
                              uint64_t v461 = *(void *)(v1035 + 656);
                            }
                            if (v460) {
                              uint64_t v462 = v1033;
                            }
                            else {
                              uint64_t v462 = v175;
                            }
                            int v463 = (unsigned char *)(v461 + v462);
                            if (v463[256])
                            {
                              int v464 = (char)v463[288] > 3;
                              int v465 = (char)v463[320] < 4;
LABEL_1171:
                              BOOL v897 = v464 == v465;
                              uint64_t v598 = 3;
LABEL_1172:
                              if (v897) {
                                uint64_t v598 = 1;
                              }
                              goto LABEL_1175;
                            }
LABEL_773:
                            uint64_t v598 = 2;
                            goto LABEL_1175;
                          }
                          int v893 = *(char *)(v455 + v1033 + 288);
                          int v894 = (char)v175[v1035 + 320];
                          if (!(*(unsigned __int8 *)(v455 + v1033 + 256) | v175[v1035 + 288]))
                          {
                            int v464 = v893 < 4;
                            int v465 = v894 > 3;
                            goto LABEL_1171;
                          }
                          if (!*(unsigned char *)(v455 + v1033 + 256) || !v175[v1035 + 288])
                          {
                            if (*(unsigned char *)(v455 + v1033 + 256))
                            {
                              uint64_t v959 = v1033;
                            }
                            else
                            {
                              uint64_t v455 = v1035 + 32;
                              uint64_t v959 = v175;
                            }
                            int v960 = (*(char *)(v455 + v959 + 288) > 3) ^ (*(char *)(v455 + v959 + 320) < 4);
                            BOOL v93 = v893 < 4 == v894 > 3;
                            uint64_t v598 = 3;
                            if (!v93) {
                              uint64_t v598 = 4;
                            }
                            BOOL v897 = v960 == 0;
                            goto LABEL_1172;
                          }
                          int v895 = (v893 > 3) ^ (*(char *)(v455 + v1033 + 320) < 4);
                          int v896 = (v894 > 3) ^ ((char)v175[v1035 + 352] < 4);
                          if ((v895 & 1) == 0 && !v896)
                          {
                            uint64_t v598 = 0;
                            goto LABEL_1175;
                          }
                          if ((v895 & v896) == 1)
                          {
                            BOOL v93 = (v893 != 4) == (v894 == 4);
                            uint64_t v598 = 3;
                            if (!v93) {
                              uint64_t v598 = 4;
                            }
                          }
                          else
                          {
                            uint64_t v598 = 2;
                          }
                          LODWORD(v175) = v1030;
                          uint64_t v111 = v1031;
                          uint64_t v247 = v1033;
                          uint64_t v458 = v454;
LABEL_775:
                          uint64_t v459 = v1035 + 32;
                          goto LABEL_1175;
                        }
                      }
                      uint64_t v598 = 2;
                      goto LABEL_775;
                    }
                    uint64_t v215 = *(void *)(v11 + 8);
                    unint64_t v214 = v111 + 1744;
                    sub_224ADD37C(*(unsigned char *)(v215 + 32), (uint64_t)v177, v181, (uint64_t)&v111[1744]);
                    uint64_t v111 = v1031;
                  }
                  v111[1756] = (int16x4_t)v214;
                  uint64_t v11 = v1032;
                  goto LABEL_320;
                }
                LODWORD(v136) = 0;
                uint64_t v9 = v1023;
LABEL_250:
                *((unsigned char *)v15 + 4) = v136;
                goto LABEL_255;
              }
            }
            else
            {
              uint64_t v111 = v1031;
            }
            if (v64) {
              goto LABEL_256;
            }
            goto LABEL_177;
          }
          signed int v36 = *(_DWORD *)(v1035 + 24);
          signed int v35 = *(_DWORD *)(v1035 + 28);
          unint64_t v10 = v1031;
        }
        uint64_t v84 = *(void *)(v11 + 3432);
        uint64_t v85 = *(void *)(v11 + 2816) + v84 * v35 + v36;
        if (v1024 <= v1016 || v13 <= v1012)
        {
          if (v1024 <= v1016)
          {
            uint64_t v96 = 0;
            if (v13 <= v1012) {
              int v95 = 0;
            }
            else {
              int v95 = *(unsigned __int8 *)(v85 - v84);
            }
          }
          else
          {
            uint64_t v96 = 0;
            int v95 = *(unsigned __int8 *)(v85 - 1);
          }
        }
        else
        {
          int v86 = *(unsigned __int8 *)(v85 - 1);
          uint64_t v87 = (unsigned __int8 *)(v85 - v84);
          int v88 = *(unsigned __int8 *)(v85 + ~v84);
          int v89 = *v87;
          BOOL v90 = v86 == v89;
          BOOL v91 = v88 == v86;
          BOOL v92 = v88 == v86 || v86 == v89;
          BOOL v93 = v89 == v88;
          uint64_t v94 = v89 == v88 || v92;
          if (v93) {
            int v95 = v89;
          }
          else {
            int v95 = v86;
          }
          uint64_t v96 = 2;
          if (!v90 || !v91) {
            uint64_t v96 = v94;
          }
        }
        sub_224AADB30((uint64_t)&v10[1728], (int8x16_t *)&v10[2 * v96 + 438], 7);
        uint64_t v34 = *(unsigned char **)(v1032 + 24);
        unsigned int v101 = (char)v34[807];
        int v102 = v95;
        uint64_t v11 = v1032;
        unsigned __int8 v104 = sub_224ADD320(v103, v102, v101 + 1);
        unint64_t v10 = v1031;
        int v1006 = 0;
        if (v101 >= v104) {
          LOBYTE(v38) = v104;
        }
        else {
          LOBYTE(v38) = 0;
        }
        if ((v38 & 0xF8) != 0) {
          LOBYTE(v38) = 0;
        }
        goto LABEL_149;
      }
      int v44 = 0;
      int v1006 = 0;
    }
    else
    {
      int v44 = 0;
      int v1006 = 0;
      *((unsigned char *)v15 + 4) = 0;
    }
    char v54 = 1;
    goto LABEL_66;
  }
  if (*((unsigned char *)v15 + 3))
  {
    (*(void (**)(uint64_t, void, void, _OWORD *))(v11 + 3288))(v1035, v2, v4, v15);
    if (*((unsigned char *)v15 + 8) == 13) {
      uint64_t v30 = 0;
    }
    else {
      uint64_t v30 = *((unsigned __int8 *)v15 + 8);
    }
    uint64_t v31 = (v19 - 1);
    uint64_t result = v1029;
    switch((int)v19)
    {
      case 1:
        uint64_t v33 = v1035 + v16;
        *(unsigned char *)(v33 + 32) = v30;
        *(unsigned char *)(v33 + 256) = 1;
        break;
      case 2:
        uint64_t v65 = v1035 + v16;
        *(_WORD *)(v65 + 32) = v30 | ((_WORD)v30 << 8);
        *(_WORD *)(v65 + 256) = 257;
        break;
      case 3:
      case 5:
      case 6:
      case 7:
        break;
      case 4:
        uint64_t v66 = v1035 + v16;
        *(_DWORD *)(v66 + 32) = 16843009 * v30;
        *(_DWORD *)(v66 + 256) = 16843009;
        break;
      case 8:
        uint64_t v67 = v1035 + v16;
        *(void *)(v67 + 32) = 0x101010101010101 * v30;
        *(void *)(v67 + 256) = 0x101010101010101;
        break;
      default:
        uint64_t result = v1029;
        if (v19 == 16)
        {
          uint64_t v68 = v1035 + v16;
          *(int64x2_t *)(v68 + 32) = vdupq_n_s64(0x101010101010101 * v30);
          *(void *)&long long v69 = 0x101010101010101;
          *((void *)&v69 + 1) = 0x101010101010101;
          *(_OWORD *)(v68 + 256) = v69;
        }
        else if (v19 == 32)
        {
          uint64_t v50 = v1035 + 32;
          int64x2_t v51 = vdupq_n_s64(0x101010101010101 * v30);
          *(int64x2_t *)(v50 + v16) = v51;
          uint64_t v52 = (v13 & 0x1F) + 16;
          *(int64x2_t *)(v50 + v52) = v51;
          uint64_t v53 = v1035 + 256;
          v51.i64[0] = 0x101010101010101;
          v51.i64[1] = 0x101010101010101;
          *(int64x2_t *)(v53 + v16) = v51;
          *(int64x2_t *)(v53 + v52) = v51;
        }
        break;
    }
    int v70 = v18 - 1;
    switch((int)v18)
    {
      case 1:
        *(unsigned char *)(*(void *)(v1035 + 656) + v1033) = v30;
        *(unsigned char *)(*(void *)(v1035 + 656) + v1033 + 224) = 1;
        goto LABEL_94;
      case 2:
        *(_WORD *)(*(void *)(v1035 + 656) + v1033) = v30 | ((_WORD)v30 << 8);
        *(_WORD *)(*(void *)(v1035 + 656) + v1033 + 224) = 257;
        goto LABEL_94;
      case 3:
      case 5:
      case 6:
      case 7:
        goto LABEL_94;
      case 4:
        *(_DWORD *)(*(void *)(v1035 + 656) + v1033) = 16843009 * v30;
        *(_DWORD *)(*(void *)(v1035 + 656) + v1033 + 224) = 16843009;
        goto LABEL_94;
      case 8:
        *(void *)(*(void *)(v1035 + 656) + v1033) = 0x101010101010101 * v30;
        uint64_t v76 = *(void *)(v1035 + 656) + v1033;
        goto LABEL_93;
      default:
        if (v18 == 16)
        {
          uint64_t v77 = 0x101010101010101 * v30;
          *(void *)(*(void *)(v1035 + 656) + v1033) = v77;
          uint64_t v74 = v1033 + 8;
          *(void *)(*(void *)(v1035 + 656) + v74) = v77;
          *(void *)(*(void *)(v1035 + 656) + v1033 + 224) = 0x101010101010101;
          uint64_t v75 = *(void *)(v1035 + 656);
        }
        else
        {
          if (v18 != 32) {
            goto LABEL_94;
          }
          uint64_t v71 = 0x101010101010101 * v30;
          *(void *)(*(void *)(v1035 + 656) + v1033) = v71;
          uint64_t v72 = v1033 + 8;
          *(void *)(*(void *)(v1035 + 656) + v72) = v71;
          uint64_t v73 = v1033 + 16;
          *(void *)(*(void *)(v1035 + 656) + v73) = v71;
          uint64_t v74 = v1033 + 24;
          *(void *)(*(void *)(v1035 + 656) + v74) = v71;
          *(void *)(*(void *)(v1035 + 656) + v1033 + 224) = 0x101010101010101;
          *(void *)(*(void *)(v1035 + 656) + v72 + 224) = 0x101010101010101;
          *(void *)(*(void *)(v1035 + 656) + v73 + 224) = 0x101010101010101;
          uint64_t v75 = *(void *)(v1035 + 656);
        }
        uint64_t v76 = v75 + v74;
LABEL_93:
        *(void *)(v76 + 224) = 0x101010101010101;
LABEL_94:
        if (*(unsigned char *)(*(void *)(v11 + 24) + 232))
        {
          int v78 = *(_DWORD *)(v1035 + 28) & 0x1F;
          if (v18)
          {
            int v79 = (unsigned char *)(*(void *)(v1035 + 8 * (v19 + v78 + 4) + 672)
                          + 12 * *(int *)(v1035 + 24)
                          + 10);
            do
            {
              *(v79 - 2) = 0;
              *int v79 = v1034;
              v79 += 12;
              --v18;
            }
            while (v18);
            int v78 = *(_DWORD *)(v1035 + 28) & 0x1F;
          }
          if (v19 >= 2)
          {
            uint64_t v80 = (uint64_t *)(v1035 + 8 * (v78 + 5) + 672);
            int v81 = *(_DWORD *)(v1035 + 24);
            do
            {
              *(unsigned char *)(*v80 + 12 * (v70 + v81) + 8) = 0;
              uint64_t v82 = *v80++;
              int v81 = *(_DWORD *)(v1035 + 24);
              *(unsigned char *)(v82 + 12 * (v70 + v81) + 10) = v1034;
              --v31;
            }
            while (v31);
          }
        }
        if (result)
        {
          switch(v1019)
          {
            case 1:
              *(unsigned char *)(v1035 + v1021 + 592) = *((unsigned char *)v15 + 9);
              break;
            case 2:
              *(_WORD *)(v1035 + v1021 + 592) = *((unsigned __int8 *)v15 + 9) | (*((unsigned __int8 *)v15 + 9) << 8);
              break;
            case 3:
            case 5:
            case 6:
            case 7:
              break;
            case 4:
              *(_DWORD *)(v1035 + v1021 + 592) = 16843009 * *((unsigned __int8 *)v15 + 9);
              break;
            case 8:
              *(void *)(v1035 + v1021 + 592) = 0x101010101010101 * *((unsigned __int8 *)v15 + 9);
              break;
            default:
              if (v1019 == 16)
              {
                *(int64x2_t *)(v1035 + v1021 + 592) = vdupq_n_s64(0x101010101010101* (unint64_t)*((unsigned __int8 *)v15 + 9));
              }
              else if (v1019 == 32)
              {
                int64x2_t v83 = vdupq_n_s64(0x101010101010101 * (unint64_t)*((unsigned __int8 *)v15 + 9));
                *(int64x2_t *)(v1035 + 592 + v1021) = v83;
                *(int64x2_t *)(v1035 + 592 + v1021 + 16) = v83;
              }
              break;
          }
          uint64_t result = 0;
          switch(v28)
          {
            case 1:
              uint64_t result = 0;
              *(unsigned char *)(*(void *)(v1035 + 656) + v1022 + 560) = *((unsigned char *)v15 + 9);
              return result;
            case 2:
              uint64_t result = 0;
              *(_WORD *)(*(void *)(v1035 + 656) + v1022 + 560) = *((unsigned __int8 *)v15 + 9) | (*((unsigned __int8 *)v15 + 9) << 8);
              return result;
            case 3:
            case 5:
            case 6:
            case 7:
              return result;
            case 4:
              uint64_t result = 0;
              *(_DWORD *)(*(void *)(v1035 + 656) + v1022 + 560) = 16843009 * *((unsigned __int8 *)v15 + 9);
              return result;
            case 8:
              uint64_t result = 0;
              uint64_t v97 = 0x101010101010101 * *((unsigned __int8 *)v15 + 9);
              uint64_t v100 = *(void *)(v1035 + 656) + v1022;
              goto LABEL_139;
            default:
              if (v28 == 16)
              {
                uint64_t result = 0;
                uint64_t v97 = 0x101010101010101 * *((unsigned __int8 *)v15 + 9);
                *(void *)(*(void *)(v1035 + 656) + v1022 + 560) = v97;
                uint64_t v98 = *(void *)(v1035 + 656);
                uint64_t v99 = v1022 + 8;
              }
              else
              {
                if (v28 != 32) {
                  return result;
                }
                uint64_t result = 0;
                uint64_t v97 = 0x101010101010101 * *((unsigned __int8 *)v15 + 9);
                *(void *)(*(void *)(v1035 + 656) + v1022 + 560) = v97;
                *(void *)(*(void *)(v1035 + 656) + v1022 + 8 + 560) = v97;
                *(void *)(*(void *)(v1035 + 656) + v1022 + 16 + 560) = v97;
                uint64_t v98 = *(void *)(v1035 + 656);
                uint64_t v99 = v1022 + 24;
              }
              uint64_t v100 = v98 + v99;
LABEL_139:
              *(void *)(v100 + 560) = v97;
              break;
          }
        }
        break;
    }
    return result;
  }
  if ((*(unsigned char *)(*(void *)(v11 + 24) + 232) & 1) != 0 && !*((unsigned char *)v15 + 20) && *((unsigned char *)v15 + 22) == 2)
  {
    if (*((__int16 *)v15 + 6) == -32768)
    {
      *(_DWORD *)uint64_t v9 = 0;
    }
    else
    {
      *(_DWORD *)uint64_t v9 = 3;
      *(_DWORD *)(v9 + 12) = *((__int16 *)v15 + 6) + 0x10000;
      *(_DWORD *)(v9 + 16) = *((__int16 *)v15 + 7);
      *(_DWORD *)(v9 + 20) = *((__int16 *)v15 + 8);
      *(_DWORD *)(v9 + 24) = *((__int16 *)v15 + 9) + 0x10000;
      sub_224AEC0D0(v18, v19, *((unsigned int *)v15 + 2), v9, v1024, v13);
      sub_224AEBEF0(v9);
    }
  }
  if ((*(unsigned int (**)(uint64_t, void, _OWORD *))(v11 + 3296))(v1035, v1034, v15)) {
    return 0xFFFFFFFFLL;
  }
  char v142 = (char *)&unk_224B177B6 + 2 * *((unsigned __int8 *)v15 + 27);
  uint64_t v143 = (v19 - 1);
  switch((int)v19)
  {
    case 1:
      uint64_t v144 = (unsigned char *)(v1035 + v16);
      v144[384] = *v142;
      v144[416] = v142[1];
      v144[256] = 0;
      break;
    case 2:
      BOOL v151 = (_WORD *)(v1035 + v16);
      v151[192] = *v142 | (*v142 << 8);
      v151[208] = v142[1] | (v142[1] << 8);
      v151[128] = 0;
      break;
    case 3:
    case 5:
    case 6:
    case 7:
      break;
    case 4:
      int v152 = (_DWORD *)(v1035 + v16);
      v152[96] = 16843009 * *v142;
      v152[104] = 16843009 * v142[1];
      v152[64] = 0;
      break;
    case 8:
      unsigned int v153 = (int64x2_t *)(v1035 + v16);
      v153[24].i64[0] = 0x101010101010101 * *v142;
      v153[26].i64[0] = 0x101010101010101 * v142[1];
      goto LABEL_220;
    default:
      if (v19 == 16)
      {
        unsigned int v153 = (int64x2_t *)(v1035 + v16);
        v153[24] = vdupq_n_s64(0x101010101010101 * (unint64_t)*v142);
        v153[26] = vdupq_n_s64(0x101010101010101 * (unint64_t)v142[1]);
        v153[16].i64[1] = 0;
LABEL_220:
        v153[16].i64[0] = 0;
      }
      else if (v19 == 32)
      {
        uint64_t v145 = v1035 + 384;
        int64x2_t v146 = vdupq_n_s64(0x101010101010101 * (unint64_t)*v142);
        *(int64x2_t *)(v145 + v16) = v146;
        uint64_t v147 = (v13 & 0x1F) + 16;
        *(int64x2_t *)(v145 + v147) = v146;
        uint64_t v148 = v1035 + 416;
        int64x2_t v149 = vdupq_n_s64(0x101010101010101 * (unint64_t)v142[1]);
        *(int64x2_t *)(v148 + v16) = v149;
        *(int64x2_t *)(v148 + v147) = v149;
        uint64_t v150 = v1035 + 256;
        *(_OWORD *)(v150 + v16) = 0u;
        *(_OWORD *)(v150 + v147) = 0u;
      }
      break;
  }
  int v154 = v18 - 1;
  switch((int)v18)
  {
    case 1:
      *(unsigned char *)(*(void *)(v1035 + 656) + v1033 + 352) = *v142;
      *(unsigned char *)(*(void *)(v1035 + 656) + v1033 + 384) = v142[1];
      *(unsigned char *)(*(void *)(v1035 + 656) + v1033 + 224) = 0;
      goto LABEL_232;
    case 2:
      *(_WORD *)(*(void *)(v1035 + 656) + v1033 + 352) = *v142 | (*v142 << 8);
      *(_WORD *)(*(void *)(v1035 + 656) + v1033 + 384) = v142[1] | (v142[1] << 8);
      *(_WORD *)(*(void *)(v1035 + 656) + v1033 + 224) = 0;
      goto LABEL_232;
    case 3:
    case 5:
    case 6:
    case 7:
      goto LABEL_232;
    case 4:
      *(_DWORD *)(*(void *)(v1035 + 656) + v1033 + 352) = 16843009 * *v142;
      *(_DWORD *)(*(void *)(v1035 + 656) + v1033 + 384) = 16843009 * v142[1];
      *(_DWORD *)(*(void *)(v1035 + 656) + v1033 + 224) = 0;
      goto LABEL_232;
    case 8:
      *(void *)(*(void *)(v1035 + 656) + v1033 + 352) = 0x101010101010101 * *v142;
      *(void *)(*(void *)(v1035 + 656) + v1033 + 384) = 0x101010101010101 * v142[1];
      uint64_t v161 = *(void *)(v1035 + 656) + v1033;
      goto LABEL_231;
    default:
      if (v18 == 16)
      {
        uint64_t v162 = 0x101010101010101 * *v142;
        *(void *)(*(void *)(v1035 + 656) + v1033 + 352) = v162;
        uint64_t v158 = v1033 + 8;
        *(void *)(*(void *)(v1035 + 656) + v158 + 352) = v162;
        uint64_t v163 = 0x101010101010101 * v142[1];
        *(void *)(*(void *)(v1035 + 656) + v1033 + 384) = v163;
        *(void *)(*(void *)(v1035 + 656) + v158 + 384) = v163;
        *(void *)(*(void *)(v1035 + 656) + v1033 + 224) = 0;
        uint64_t v160 = *(void *)(v1035 + 656);
      }
      else
      {
        if (v18 != 32) {
          goto LABEL_232;
        }
        uint64_t v155 = 0x101010101010101 * *v142;
        *(void *)(*(void *)(v1035 + 656) + v1033 + 352) = v155;
        uint64_t v156 = v1033 + 8;
        *(void *)(*(void *)(v1035 + 656) + v156 + 352) = v155;
        uint64_t v157 = v1033 + 16;
        *(void *)(*(void *)(v1035 + 656) + v157 + 352) = v155;
        uint64_t v158 = v1033 + 24;
        *(void *)(*(void *)(v1035 + 656) + v158 + 352) = v155;
        uint64_t v159 = 0x101010101010101 * v142[1];
        *(void *)(*(void *)(v1035 + 656) + v1033 + 384) = v159;
        *(void *)(*(void *)(v1035 + 656) + v156 + 384) = v159;
        *(void *)(*(void *)(v1035 + 656) + v157 + 384) = v159;
        *(void *)(*(void *)(v1035 + 656) + v158 + 384) = v159;
        *(void *)(*(void *)(v1035 + 656) + v1033 + 224) = 0;
        *(void *)(*(void *)(v1035 + 656) + v156 + 224) = 0;
        *(void *)(*(void *)(v1035 + 656) + v157 + 224) = 0;
        uint64_t v160 = *(void *)(v1035 + 656);
      }
      uint64_t v161 = v160 + v158;
LABEL_231:
      *(void *)(v161 + 224) = 0;
LABEL_232:
      if (*(unsigned char *)(*(void *)(v11 + 24) + 232))
      {
        int v164 = *(_DWORD *)(v1035 + 28) & 0x1F;
        if (v18)
        {
          int v165 = (unsigned char *)(*(void *)(v1035 + 8 * (v19 + v164 + 4) + 672)
                         + 12 * *(int *)(v1035 + 24)
                         + 10);
          do
          {
            *(v165 - 2) = *((unsigned char *)v15 + 24) + 1;
            *(_DWORD *)(v165 - 10) = *((_DWORD *)v15 + 2);
            *int v165 = v1034;
            v165 += 12;
            --v18;
          }
          while (v18);
          int v164 = *(_DWORD *)(v1035 + 28) & 0x1F;
        }
        if (v19 >= 2)
        {
          int v166 = (uint64_t *)(v1035 + 8 * (v164 + 5) + 672);
          int v167 = *(_DWORD *)(v1035 + 24);
          do
          {
            *(unsigned char *)(*v166 + 12 * (v154 + v167) + 8) = *((unsigned char *)v15 + 24) + 1;
            *(_DWORD *)(*v166 + 12 * (v154 + *(_DWORD *)(v1035 + 24))) = *((_DWORD *)v15 + 2);
            uint64_t v168 = *v166++;
            int v167 = *(_DWORD *)(v1035 + 24);
            *(unsigned char *)(v168 + 12 * (v154 + v167) + 10) = v1034;
            --v143;
          }
          while (v143);
        }
      }
      if (!v1029) {
        return 0;
      }
      switch(v1019)
      {
        case 1:
          *(unsigned char *)(v1035 + v1021 + 592) = 0;
          break;
        case 2:
          *(_WORD *)(v1035 + v1021 + 592) = 0;
          break;
        case 3:
        case 5:
        case 6:
        case 7:
          break;
        case 4:
          *(_DWORD *)(v1035 + v1021 + 592) = 0;
          break;
        case 8:
          uint64_t v478 = v1035 + v1021;
          goto LABEL_750;
        default:
          if (v1019 == 16)
          {
            uint64_t v478 = v1035 + v1021;
            *(void *)(v478 + 600) = 0;
LABEL_750:
            *(void *)(v478 + 592) = 0;
          }
          else if (v1019 == 32)
          {
            *(_OWORD *)(v1035 + 592 + v1021) = 0u;
            *(_OWORD *)(v1035 + 592 + v1021 + 16) = 0u;
          }
          break;
      }
      uint64_t result = 0;
      switch(v28)
      {
        case 1:
          uint64_t result = 0;
          *(unsigned char *)(*(void *)(v1035 + 656) + v1022 + 560) = 0;
          return result;
        case 2:
          uint64_t result = 0;
          *(_WORD *)(*(void *)(v1035 + 656) + v1022 + 560) = 0;
          return result;
        case 3:
        case 5:
        case 6:
        case 7:
          return result;
        case 4:
          uint64_t result = 0;
          *(_DWORD *)(*(void *)(v1035 + 656) + v1022 + 560) = 0;
          return result;
        case 8:
          uint64_t result = 0;
          uint64_t v587 = *(void *)(v1035 + 656) + v1022;
          goto LABEL_761;
        default:
          if (v28 == 16)
          {
            uint64_t result = 0;
            *(void *)(*(void *)(v1035 + 656) + v1022 + 560) = 0;
            uint64_t v585 = *(void *)(v1035 + 656);
            uint64_t v586 = v1022 + 8;
          }
          else
          {
            if (v28 != 32) {
              return result;
            }
            uint64_t result = 0;
            *(void *)(*(void *)(v1035 + 656) + v1022 + 560) = 0;
            *(void *)(*(void *)(v1035 + 656) + v1022 + 8 + 560) = 0;
            *(void *)(*(void *)(v1035 + 656) + v1022 + 16 + 560) = 0;
            uint64_t v585 = *(void *)(v1035 + 656);
            uint64_t v586 = v1022 + 24;
          }
          uint64_t v587 = v585 + v586;
LABEL_761:
          *(void *)(v587 + 560) = 0;
          break;
      }
      break;
  }
  return result;
}

uint64_t sub_224ADD320(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    int v3 = 2 * a2;
    unsigned int v4 = a2 - ((int)result >> 1);
    if (result) {
      unsigned int v5 = a2 + (((int)result + 1) >> 1);
    }
    else {
      unsigned int v5 = a2 - ((int)result >> 1);
    }
    if ((int)result <= 2 * (~a2 + a3)) {
      unsigned int v6 = v5;
    }
    else {
      unsigned int v6 = ~result + a3;
    }
    if (result) {
      unsigned int v4 = a2 + (((int)result + 1) >> 1);
    }
    if (v3 < (int)result) {
      unsigned int v4 = result;
    }
    if (v3 < a3) {
      unsigned int v7 = v4;
    }
    else {
      unsigned int v7 = v6;
    }
    if (a3 - 1 <= a2) {
      return (~result + a3);
    }
    else {
      return v7;
    }
  }
  return result;
}

uint64_t sub_224ADD37C(unsigned __int8 a1, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t v4 = 0;
  int v5 = *(unsigned __int8 *)(a2 + 722);
  int v6 = *(char *)(a2 + 713);
  int v7 = *(char *)(a2 + 715);
  int v8 = *(char *)(a2 + 714);
  int v9 = *(char *)(a2 + 717);
  int v10 = *(char *)(a2 + 716);
  uint64_t v11 = (__int16 *)(a2 + 726);
  int v12 = (_WORD *)(a4 + 6);
  signed int v13 = (char *)&unk_224B1786C + 1024 * (unint64_t)a1;
  uint64_t result = 255;
  do
  {
    int v15 = a3;
    if (v5)
    {
      int v16 = *v11 + a3;
      if (v16 >= 255) {
        int v16 = 255;
      }
      int v15 = v16 & ~(v16 >> 31);
    }
    int v17 = v15 + v6;
    if (v15 + v6 >= 255) {
      int v17 = 255;
    }
    unsigned int v18 = v17 & ~(v17 >> 31);
    int v19 = v15 + v7;
    if (v15 + v7 >= 255) {
      int v19 = 255;
    }
    unsigned int v20 = v19 & ~(v19 >> 31);
    int v21 = v15 + v8;
    if (v15 + v8 >= 255) {
      int v21 = 255;
    }
    unsigned int v22 = v21 & ~(v21 >> 31);
    int v23 = v15 + v9;
    if (v15 + v9 >= 255) {
      int v23 = 255;
    }
    unsigned int v24 = v23 & ~(v23 >> 31);
    int v25 = v15 + v10;
    if (v15 + v10 >= 255) {
      int v25 = 255;
    }
    *(v12 - 3) = *(_WORD *)&v13[4 * v18];
    *(v12 - 2) = *(_WORD *)&v13[4 * v15 + 2];
    *(v12 - 1) = *(_WORD *)&v13[4 * v22];
    *int v12 = *(_WORD *)&v13[4 * v20 + 2];
    v12[1] = *(_WORD *)&v13[4 * (v25 & ~(v25 >> 31))];
    v12[2] = *(_WORD *)&v13[4 * v24 + 2];
    if (!v5) {
      break;
    }
    v12 += 6;
    v11 += 5;
  }
  while (v4++ < 7);
  return result;
}

uint64_t sub_224ADD488(void *a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int a6, int a7, int a8)
{
  unsigned int v12 = 0;
  uint64_t v67 = (unsigned __int8 *)(a1 + 1096);
  uint64_t v13 = a1[2];
  uint64_t v14 = v13 + 13824;
  uint64_t v72 = a4;
  uint64_t v73 = a3 + 11;
  unsigned int v15 = *(unsigned __int8 *)(a3 + 11 + a4);
  unsigned int v16 = __clz(v15) ^ 0x1F;
  unsigned int v17 = v16;
  do
  {
    --v17;
    sub_224AADE84();
    unsigned int v12 = v18 | (2 * v12);
  }
  while (v17);
  uint64_t v68 = (4 * a7);
  int v19 = v67 + 4672;
  unsigned int v20 = (2 << v16) - v15;
  if (v12 >= v20)
  {
    sub_224AADE84();
    LOBYTE(v12) = v21 - v20 + 2 * v12;
  }
  *int v19 = v12;
  uint64_t v23 = v72;
  uint64_t v22 = v73;
  if (!((a6 + a5 < 0) ^ __OFADD__(a6, a5) | (a6 + a5 == 0)))
  {
    int v63 = a8;
    unsigned int v24 = a1 + 1032;
    uint64_t v25 = v13 + 560 * v72 + 80 * *(unsigned __int8 *)(v73 + v72) + 3616;
    LODWORD(v26) = 4 * (a6 + a5) - 1;
    LODWORD(v27) = 4 * a6;
    uint64_t v28 = v68 - 1;
    uint64_t v62 = (4 * a5);
    uint64_t v66 = 4 * a5;
    if ((int)v26 <= 2) {
      uint64_t v26 = 2;
    }
    else {
      uint64_t v26 = v26;
    }
    uint64_t v69 = v26;
    uint64_t v70 = 4 * a5 - 1;
    uint64_t v29 = 1;
    unsigned int v71 = v27;
    while (1)
    {
      if (v29 >= v70) {
        uint64_t v30 = v70;
      }
      else {
        uint64_t v30 = v29;
      }
      if ((int)v29 >= (int)v70) {
        int v31 = v70;
      }
      else {
        int v31 = v29;
      }
      int v32 = v29 - v27;
      if ((int)v29 - (int)v27 < 0) {
        int v32 = -1;
      }
      uint64_t v33 = (v31 - v32);
      if (v31 > v32) {
        break;
      }
LABEL_56:
      ++v29;
      uint64_t v27 = v71;
      if (v29 == v69)
      {
        a8 = v63;
        int v19 = v67 + 4672;
        uint64_t v59 = v62;
        goto LABEL_59;
      }
    }
    uint64_t v34 = 0;
    signed int v35 = v67;
    signed int v36 = (char *)a1 + v30 + v68 * (v29 - v30) + 13440;
    uint64_t v37 = (uint64_t)&v67[(v29 - v31) * v68 + 4672 + v31];
    BOOL v38 = v29 >= v66;
    while (1)
    {
      if (v31 <= 0)
      {
        v67[v34] = 0;
        char v47 = *(unsigned char *)(v37 - v68);
      }
      else
      {
        if (v38)
        {
          int v39 = *(unsigned __int8 *)(v37 - v68);
          int v40 = *(unsigned __int8 *)(v37 - 1);
          int v41 = *(unsigned __int8 *)(v37 + ~v68);
          if (v40 == v41 && v39 == v40 && v39 == v41)
          {
            v67[v34] = 4;
            LOBYTE(v24[v34]) = v40;
            int v46 = 1;
            int v45 = 1 << v39;
          }
          else if (v39 == v40)
          {
            v67[v34] = 3;
            int v44 = &v24[v34];
            *int v44 = v40;
            v44[1] = v41;
            int v45 = (1 << v41) | (1 << v39);
            int v46 = 2;
          }
          else if (v39 == v41 || v40 == v41)
          {
            int v46 = 2;
            v67[v34] = 2;
            int64x2_t v51 = &v24[v34];
            *int64x2_t v51 = v41;
            if (v39 == v41) {
              LOBYTE(v39) = v40;
            }
            v51[1] = v39;
            int v45 = (1 << v39) | (1 << v41);
          }
          else
          {
            v67[v34] = 1;
            if (v39 >= v40) {
              char v52 = v40;
            }
            else {
              char v52 = v39;
            }
            uint64_t v53 = &v24[v34];
            *uint64_t v53 = v52;
            int v54 = 1 << v52;
            if (v39 <= v40) {
              LOBYTE(v39) = v40;
            }
            v53[1] = v39;
            v53[2] = v41;
            int v45 = v54 | (1 << v39) | (1 << v41);
            int v46 = 3;
          }
          goto LABEL_34;
        }
        v67[v34] = 0;
        char v47 = *(unsigned char *)(v37 - 1);
      }
      LOBYTE(v24[v34]) = v47;
      int v46 = 1;
      int v45 = 1 << v47;
LABEL_34:
      int v48 = 0;
      int v49 = 1;
      do
      {
        if ((v49 & v45) == 0) {
          *((unsigned char *)&v24[v34] + v46++) = v48;
        }
        v49 *= 2;
        ++v48;
      }
      while (v48 != 8);
      --v31;
      ++v34;
      v37 += v28;
      BOOL v38 = 1;
      if (v34 == v33)
      {
        uint64_t v55 = v32;
        uint64_t v56 = a1 + 1032;
        do
        {
          unsigned int v57 = *v35++;
          sub_224AADB30(v14, (int8x16_t *)(v25 + 16 * v57), *(unsigned __int8 *)(v22 + v23) - 1);
          uint64_t v23 = v72;
          uint64_t v22 = v73;
          unsigned char *v36 = *((unsigned char *)v56 + v58);
          --v30;
          v36 += v28;
          ++v56;
        }
        while (v30 > v55);
        goto LABEL_56;
      }
    }
  }
  uint64_t v59 = (4 * a5);
  uint64_t v27 = (4 * a6);
LABEL_59:
  int v60 = *(uint64_t (**)(uint64_t, unsigned char *, uint64_t, void, uint64_t, uint64_t))(*a1 + 62992);

  return v60(a2, v19, v68, (4 * a8), v59, v27);
}

uint64_t sub_224ADD848(uint64_t a1, _WORD *a2, int16x4_t *a3, int a4, double a5, double a6, double a7, double a8, uint16x8_t a9)
{
  uint64_t result = sub_224AAD9A0(*(void *)(a1 + 16) + 13824, (int16x4_t *)(*(void *)(a1 + 16) + 13504), 3, a5, a6, a7, a8, a9);
  if (result == 1)
  {
LABEL_5:
    uint64_t result = sub_224ADFEC8(*(unsigned char *)(*(void *)(*(void *)(a1 + 8) + 24) + 428), *(void *)(a1 + 16), a3 + 16, a4);
    a2[1] += result;
    return result;
  }
  if (result != 2)
  {
    if (result != 3) {
      return result;
    }
    *a2 += sub_224ADFEC8(*(unsigned char *)(*(void *)(*(void *)(a1 + 8) + 24) + 428), *(void *)(a1 + 16), a3, a4);
    goto LABEL_5;
  }
  uint64_t result = sub_224ADFEC8(*(unsigned char *)(*(void *)(*(void *)(a1 + 8) + 24) + 428), *(void *)(a1 + 16), a3, a4);
  *a2 += result;
  return result;
}

void sub_224ADD920(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = a3;
  int v9 = &byte_224B28CC0[4 * a3];
  unsigned int v10 = *v9;
  unsigned int v11 = v9[1];
  int v41 = 0;
  uint64_t v12 = byte_224B177ED[4 * a3];
  *(unsigned char *)(a2 + 26) = v12;
  uint64_t v13 = *(void *)(v7 + 24);
  if (*(unsigned char *)(a2 + 6))
  {
    if (*(_DWORD *)(v13 + 884) == 2)
    {
      switch(v11)
      {
        case 1u:
          *(unsigned char *)(a1 + a5 + 480) = v9[3];
          goto LABEL_39;
        case 2u:
          *(_WORD *)(a1 + a5 + 480) = v9[3] | (v9[3] << 8);
          goto LABEL_39;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
          goto LABEL_39;
        case 4u:
          *(_DWORD *)(a1 + a5 + 480) = 16843009 * v9[3];
          goto LABEL_39;
        case 8u:
          *(void *)(a1 + a5 + 480) = 0x101010101010101 * v9[3];
          goto LABEL_39;
        default:
          if (v11 == 16)
          {
            uint64_t v16 = 0x101010101010101 * v9[3];
            uint64_t v17 = a1 + 480;
            *(void *)(a1 + 480 + a5) = v16;
            unsigned int v18 = a5 + 8;
          }
          else
          {
            if (v11 != 32) {
              goto LABEL_39;
            }
            uint64_t v16 = 0x101010101010101 * v9[3];
            uint64_t v17 = a1 + 480;
            *(void *)(a1 + 480 + a5) = v16;
            *(void *)(a1 + 480 + a5 + 8) = v16;
            *(void *)(a1 + 480 + a5 + 16) = v16;
            unsigned int v18 = a5 + 24;
          }
          *(void *)(v17 + v18) = v16;
LABEL_39:
          switch(v10)
          {
            case 1u:
              *(unsigned char *)(*(void *)(a1 + 656) + a4 + 448) = v9[2];
              goto LABEL_50;
            case 2u:
              *(_WORD *)(*(void *)(a1 + 656) + a4 + 448) = v9[2] | (v9[2] << 8);
              goto LABEL_50;
            case 3u:
            case 5u:
            case 6u:
            case 7u:
              goto LABEL_50;
            case 4u:
              *(_DWORD *)(*(void *)(a1 + 656) + a4 + 448) = 16843009 * v9[2];
              goto LABEL_50;
            case 8u:
              uint64_t v30 = 0x101010101010101 * v9[2];
              uint64_t v33 = *(void *)(a1 + 656) + a4;
              goto LABEL_49;
            default:
              if (v10 == 16)
              {
                uint64_t v30 = 0x101010101010101 * v9[2];
                *(void *)(*(void *)(a1 + 656) + a4 + 448) = v30;
                uint64_t v31 = *(void *)(a1 + 656);
                uint64_t v32 = a4 + 8;
              }
              else
              {
                if (v10 != 32) {
                  goto LABEL_50;
                }
                uint64_t v30 = 0x101010101010101 * v9[2];
                *(void *)(*(void *)(a1 + 656) + a4 + 448) = v30;
                *(void *)(*(void *)(a1 + 656) + a4 + 8 + 448) = v30;
                *(void *)(*(void *)(a1 + 656) + a4 + 16 + 448) = v30;
                uint64_t v31 = *(void *)(a1 + 656);
                uint64_t v32 = a4 + 24;
              }
              uint64_t v33 = v31 + v32;
LABEL_49:
              *(void *)(v33 + 448) = v30;
              break;
          }
          break;
      }
    }
LABEL_50:
    __int16 v19 = 0;
    char v20 = 0;
    goto LABEL_51;
  }
  if (*(unsigned char *)(v13 + *(unsigned __int8 *)(a2 + 4) + 808)) {
    BOOL v14 = 1;
  }
  else {
    BOOL v14 = v12 == 0;
  }
  if (!v14)
  {
    if (*(_DWORD *)(v13 + 884) != 2) {
      goto LABEL_50;
    }
    if (v10 >= 0x11 && v11 > 0x10)
    {
      uint64_t v39 = a3;
      uint64_t v40 = v7;
      uint64_t v12 = 4;
    }
    else
    {
      if (!v11)
      {
        __int16 v19 = 0;
        char v20 = 0;
        unsigned int v22 = 0;
        int v29 = *(_DWORD *)(a1 + 28);
LABEL_36:
        *(_DWORD *)(a1 + 28) = v29 - v22;
LABEL_51:
        *(unsigned char *)(a2 + 7) = byte_224B177ED[4 * v8 + *(unsigned int *)(v7 + 2168)];
        goto LABEL_52;
      }
      uint64_t v39 = a3;
      uint64_t v40 = v7;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    uint64_t v23 = &byte_224B28D18[8 * v12];
    do
    {
      if (v10)
      {
        int v24 = 0;
        unsigned int v25 = 0;
        do
        {
          sub_224ADFAA4(a1, *(unsigned __int8 *)(a2 + 26), 0, (uint64_t)&v41, v24, v21);
          int v26 = *v23;
          int v27 = *(_DWORD *)(a1 + 24) + v26;
          *(_DWORD *)(a1 + 24) = v27;
          v25 += v26;
          ++v24;
        }
        while (v25 < v10);
      }
      else
      {
        unsigned int v25 = 0;
        int v27 = *(_DWORD *)(a1 + 24);
      }
      int v28 = v23[1];
      int v29 = *(_DWORD *)(a1 + 28) + v28;
      *(_DWORD *)(a1 + 24) = v27 - v25;
      *(_DWORD *)(a1 + 28) = v29;
      v22 += v28;
      ++v21;
    }
    while (v22 < v11);
    char v20 = v41;
    __int16 v19 = HIWORD(v41);
    uint64_t v8 = v39;
    uint64_t v7 = v40;
    goto LABEL_36;
  }
  *(unsigned char *)(a2 + 7) = 0;
  *(unsigned char *)(a2 + 26) = 0;
  if (*(_DWORD *)(*(void *)(v7 + 24) + 884) != 2)
  {
    __int16 v19 = 0;
    char v20 = 0;
    goto LABEL_52;
  }
  switch(v11)
  {
    case 1u:
      *(unsigned char *)(a1 + a5 + 480) = 0;
      goto LABEL_62;
    case 2u:
      *(_WORD *)(a1 + a5 + 480) = 0;
      goto LABEL_62;
    case 3u:
    case 5u:
    case 6u:
    case 7u:
      goto LABEL_62;
    case 4u:
      *(_DWORD *)(a1 + a5 + 480) = 0;
      goto LABEL_62;
    case 8u:
      *(void *)(a1 + a5 + 480) = 0;
      goto LABEL_62;
    default:
      if (v11 == 16)
      {
        uint64_t v34 = a1 + 480;
        *(void *)(a1 + 480 + a5) = 0;
        unsigned int v35 = a5 + 8;
      }
      else
      {
        if (v11 != 32) {
          goto LABEL_62;
        }
        uint64_t v34 = a1 + 480;
        *(void *)(a1 + 480 + a5) = 0;
        *(void *)(a1 + 480 + a5 + 8) = 0;
        *(void *)(a1 + 480 + a5 + 16) = 0;
        unsigned int v35 = a5 + 24;
      }
      *(void *)(v34 + v35) = 0;
LABEL_62:
      __int16 v19 = 0;
      char v20 = 0;
      switch(v10)
      {
        case 1u:
          __int16 v19 = 0;
          char v20 = 0;
          *(unsigned char *)(*(void *)(a1 + 656) + a4 + 448) = 0;
          break;
        case 2u:
          __int16 v19 = 0;
          char v20 = 0;
          *(_WORD *)(*(void *)(a1 + 656) + a4 + 448) = 0;
          break;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
          break;
        case 4u:
          __int16 v19 = 0;
          char v20 = 0;
          *(_DWORD *)(*(void *)(a1 + 656) + a4 + 448) = 0;
          break;
        case 8u:
          __int16 v19 = 0;
          char v20 = 0;
          uint64_t v38 = *(void *)(a1 + 656) + a4;
          goto LABEL_72;
        default:
          if (v10 == 16)
          {
            __int16 v19 = 0;
            char v20 = 0;
            *(void *)(*(void *)(a1 + 656) + a4 + 448) = 0;
            uint64_t v36 = *(void *)(a1 + 656);
            uint64_t v37 = a4 + 8;
          }
          else
          {
            char v20 = 0;
            if (v10 != 32) {
              break;
            }
            __int16 v19 = 0;
            char v20 = 0;
            *(void *)(*(void *)(a1 + 656) + a4 + 448) = 0;
            *(void *)(*(void *)(a1 + 656) + a4 + 8 + 448) = 0;
            *(void *)(*(void *)(a1 + 656) + a4 + 16 + 448) = 0;
            uint64_t v36 = *(void *)(a1 + 656);
            uint64_t v37 = a4 + 24;
          }
          uint64_t v38 = v36 + v37;
LABEL_72:
          *(void *)(v38 + 448) = 0;
          break;
      }
LABEL_52:
      *(unsigned char *)(a2 + 29) = v20;
      *(_WORD *)(a2 + 30) = v19;
      return;
  }
}

uint64_t sub_224ADDF0C(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6)
{
  if (!a5)
  {
    if (!a6) {
      return 1;
    }
    if (*(unsigned char *)(a2 + a3 + 256)) {
      return 3;
    }
    uint64_t v7 = a2 + a3;
    return *(char *)(v7 + 288) > 3;
  }
  if (!a6)
  {
    if (*(unsigned char *)(a1 + a4 + 256)) {
      return 3;
    }
    uint64_t v7 = a1 + a4;
    return *(char *)(v7 + 288) > 3;
  }
  if (*(unsigned char *)(a1 + a4 + 256))
  {
    if (*(unsigned char *)(a2 + a3 + 256)) {
      return 4;
    }
    uint64_t v8 = a2 + a3;
  }
  else
  {
    if (!*(unsigned char *)(a2 + a3 + 256)) {
      return (*(char *)(a2 + a3 + 288) > 3) ^ (*(char *)(a1 + a4 + 288) > 3);
    }
    uint64_t v8 = a1 + a4;
  }
  if (*(unsigned __int8 *)(v8 + 288) <= 3u) {
    return 2;
  }
  else {
    return 3;
  }
}

uint64_t sub_224ADDFCC(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  if (a5 && !*(unsigned char *)(a1 + a4 + 224))
  {
    uint64_t v7 = a1 + a4;
    uint64_t v8 = *(char *)(v7 + 288);
    if (v8 <= 3) {
      ++*((_DWORD *)&v13 + v8);
    }
    if (*(unsigned char *)(v7 + 256))
    {
      uint64_t v9 = *(char *)(a1 + a4 + 320);
      if (v9 <= 3) {
        ++*((_DWORD *)&v13 + v9);
      }
    }
  }
  if (a6 && !*(unsigned char *)(a2 + a3 + 224))
  {
    uint64_t v10 = a2 + a3;
    uint64_t v11 = *(char *)(v10 + 288);
    if (v11 <= 3) {
      ++*((_DWORD *)&v13 + v11);
    }
    if (*(unsigned char *)(v10 + 256))
    {
      uint64_t v12 = *(char *)(a2 + a3 + 320);
      if (v12 <= 3) {
        ++*((_DWORD *)&v13 + v12);
      }
    }
  }
  if (v13 + HIDWORD(v13) == v14 + HIDWORD(v14)) {
    return 1;
  }
  else {
    return 2 * ((int)v13 + HIDWORD(v13) >= (int)v14 + HIDWORD(v14));
  }
}

uint64_t sub_224ADE0F8(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6)
{
  v13[1] = *MEMORY[0x263EF8340];
  v13[0] = 0;
  if (a5 && !*(unsigned char *)(a1 + a4 + 224))
  {
    uint64_t v7 = a1 + a4;
    int v8 = *(char *)(v7 + 288);
    if ((v8 ^ 2u) <= 1) {
      ++*((_DWORD *)&v13[-1] + v8);
    }
    if (*(unsigned char *)(v7 + 256))
    {
      int v9 = *(char *)(a1 + a4 + 320);
      if ((v9 ^ 2u) <= 1) {
        ++*((_DWORD *)&v13[-1] + v9);
      }
    }
  }
  if (a6 && !*(unsigned char *)(a2 + a3 + 224))
  {
    uint64_t v10 = a2 + a3;
    int v11 = *(char *)(v10 + 288);
    if ((v11 ^ 2u) <= 1) {
      ++*((_DWORD *)&v13[-1] + v11);
    }
    if (*(unsigned char *)(v10 + 256))
    {
      int v12 = *(char *)(a2 + a3 + 320);
      if ((v12 ^ 2u) <= 1) {
        ++*((_DWORD *)&v13[-1] + v12);
      }
    }
  }
  if (LODWORD(v13[0]) == HIDWORD(v13[0])) {
    return 1;
  }
  else {
    return 2 * (SLODWORD(v13[0]) >= SHIDWORD(v13[0]));
  }
}

uint64_t sub_224ADE238(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6)
{
  v13[1] = *MEMORY[0x263EF8340];
  v13[0] = 0;
  if (a5 && !*(unsigned char *)(a1 + a4 + 224))
  {
    uint64_t v7 = a1 + a4;
    uint64_t v8 = *(char *)(v7 + 288);
    if (v8 <= 1) {
      ++*((_DWORD *)v13 + v8);
    }
    if (*(unsigned char *)(v7 + 256))
    {
      uint64_t v9 = *(char *)(a1 + a4 + 320);
      if (v9 <= 1) {
        ++*((_DWORD *)v13 + v9);
      }
    }
  }
  if (a6 && !*(unsigned char *)(a2 + a3 + 224))
  {
    uint64_t v10 = a2 + a3;
    uint64_t v11 = *(char *)(v10 + 288);
    if (v11 <= 1) {
      ++*((_DWORD *)v13 + v11);
    }
    if (*(unsigned char *)(v10 + 256))
    {
      uint64_t v12 = *(char *)(a2 + a3 + 320);
      if (v12 <= 1) {
        ++*((_DWORD *)v13 + v12);
      }
    }
  }
  if (LODWORD(v13[0]) == HIDWORD(v13[0])) {
    return 1;
  }
  else {
    return 2 * (SLODWORD(v13[0]) >= SHIDWORD(v13[0]));
  }
}

uint64_t sub_224ADE358(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  int v12 = 0;
  uint64_t v11 = 0;
  if (a5 && !*(unsigned char *)(a1 + a4 + 224))
  {
    uint64_t v7 = a1 + a4;
    if (*(char *)(v7 + 288) >= 4) {
      ++*((_DWORD *)&v11 + *(unsigned __int8 *)(v7 + 288) - 4);
    }
    if (*(unsigned char *)(v7 + 256))
    {
      int v8 = *(char *)(a1 + a4 + 320);
      if (v8 >= 4) {
        ++*((_DWORD *)&v11 + v8 - 4);
      }
    }
  }
  if (a6 && !*(unsigned char *)(a2 + a3 + 224))
  {
    uint64_t v9 = a2 + a3;
    if (*(char *)(v9 + 288) >= 4) {
      ++*((_DWORD *)&v11 + *(unsigned __int8 *)(v9 + 288) - 4);
    }
    if (*(unsigned char *)(v9 + 256))
    {
      int v10 = *(char *)(a2 + a3 + 320);
      if (v10 >= 4) {
        ++*((_DWORD *)&v11 + v10 - 4);
      }
    }
  }
  if (v12 == HIDWORD(v11) + v11) {
    return 1;
  }
  else {
    return 2 * (HIDWORD(v11) + (int)v11 >= v12);
  }
}

uint64_t sub_224ADE4A8(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  int v12 = 0;
  uint64_t v11 = 0;
  if (a5 && !*(unsigned char *)(a1 + a4 + 224))
  {
    uint64_t v7 = a1 + a4;
    if (*(char *)(v7 + 288) >= 4) {
      ++*((_DWORD *)&v11 + *(unsigned __int8 *)(v7 + 288) - 4);
    }
    if (*(unsigned char *)(v7 + 256))
    {
      int v8 = *(char *)(a1 + a4 + 320);
      if (v8 >= 4) {
        ++*((_DWORD *)&v11 + v8 - 4);
      }
    }
  }
  if (a6 && !*(unsigned char *)(a2 + a3 + 224))
  {
    uint64_t v9 = a2 + a3;
    if (*(char *)(v9 + 288) >= 4) {
      ++*((_DWORD *)&v11 + *(unsigned __int8 *)(v9 + 288) - 4);
    }
    if (*(unsigned char *)(v9 + 256))
    {
      int v10 = *(char *)(a2 + a3 + 320);
      if (v10 >= 4) {
        ++*((_DWORD *)&v11 + v10 - 4);
      }
    }
  }
  if (v11 == HIDWORD(v11)) {
    return 1;
  }
  else {
    return 2 * ((int)v11 >= SHIDWORD(v11));
  }
}

uint64_t sub_224ADE5EC(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6)
{
  v13[1] = *MEMORY[0x263EF8340];
  v13[0] = 0;
  if (a5)
  {
    if (!*(unsigned char *)(a1 + a4 + 224))
    {
      int v6 = (unsigned char *)(a1 + a4);
      BOOL v7 = (char)v6[288] > 3;
      ++*(_DWORD *)((unint64_t)v13 | (4 * v7));
      if (v6[256])
      {
        BOOL v8 = (char)v6[320] > 3;
        ++*(_DWORD *)((unint64_t)v13 | (4 * v8));
      }
    }
  }
  if (a6)
  {
    if (!*(unsigned char *)(a2 + a3 + 224))
    {
      uint64_t v9 = (unsigned char *)(a2 + a3);
      BOOL v10 = (char)v9[288] > 3;
      ++*(_DWORD *)((unint64_t)v13 | (4 * v10));
      if (v9[256])
      {
        BOOL v11 = (char)v9[320] > 3;
        ++*(_DWORD *)((unint64_t)v13 | (4 * v11));
      }
    }
  }
  if (LODWORD(v13[0]) == HIDWORD(v13[0])) {
    return 1;
  }
  else {
    return 2 * (SLODWORD(v13[0]) >= SHIDWORD(v13[0]));
  }
}

uint64_t sub_224ADE704(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, int a5, int a6)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  int v14 = 0;
  uint64_t v13 = 0;
  if (a5 && !*(unsigned char *)(a1 + a4 + 224))
  {
    uint64_t v7 = a1 + a4;
    unsigned int v8 = *(char *)(v7 + 288) - 1;
    if (v8 <= 2) {
      ++*((_DWORD *)&v13 + v8);
    }
    if (*(unsigned char *)(v7 + 256))
    {
      unsigned int v9 = *(char *)(a1 + a4 + 320) - 1;
      if (v9 <= 2) {
        ++*((_DWORD *)&v13 + v9);
      }
    }
  }
  if (a6 && !*(unsigned char *)(a2 + a3 + 224))
  {
    uint64_t v10 = a2 + a3;
    unsigned int v11 = *(char *)(v10 + 288) - 1;
    if (v11 <= 2) {
      ++*((_DWORD *)&v13 + v11);
    }
    if (*(unsigned char *)(v10 + 256))
    {
      unsigned int v12 = *(char *)(a2 + a3 + 320) - 1;
      if (v12 <= 2) {
        ++*((_DWORD *)&v13 + v12);
      }
    }
  }
  if (v13 == HIDWORD(v13) + v14) {
    return 1;
  }
  else {
    return 2 * ((int)v13 >= HIDWORD(v13) + v14);
  }
}

uint64_t sub_224ADE840(uint64_t result, unsigned __int16 *a2)
{
  if (*(unsigned char *)(result + 269))
  {
    a2[1] = (a2[1] + (a2[1] >> 15) + 3) & 0xFFF8;
    int v2 = (*a2 + (*a2 >> 15) + 3) & 0x3FFF8;
LABEL_3:
    *a2 = v2;
    return result;
  }
  if (!*(unsigned char *)(result + 428))
  {
    a2[1] = (a2[1] + (a2[1] >> 15)) & 0xFFFE;
    int v2 = (*a2 + (*a2 >> 15)) & 0x1FFFE;
    goto LABEL_3;
  }
  return result;
}

uint64_t sub_224ADE8A0(int *a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, uint64_t a6)
{
  int v6 = *a1;
  if (*a1)
  {
    if (v6 == 1)
    {
      int8x8_t v10 = (int8x8_t)vrev64_s32((int32x2_t)vshr_n_u32(*(uint32x2_t *)(a1 + 1), 0xDuLL));
    }
    else
    {
      if (v6 == 2)
      {
        uint64_t v7 = (const float *)(a1 + 6);
        int32x2_t v8 = *(int32x2_t *)(a1 + 4);
        int32x2_t v9 = (int32x2_t)vld1_dup_f32(v7);
      }
      else
      {
        int32x2_t v8 = *(int32x2_t *)(a1 + 4);
        v9.i32[0] = a1[3];
        v9.i32[1] = a1[6];
      }
      int32x2_t v11 = vshl_n_s32((int32x2_t)__PAIR64__(a3, a2), 2uLL);
      int32x2_t v12 = vadd_s32((int32x2_t)__PAIR64__(a5, a4), (int32x2_t)__PAIR64__(a5, a4));
      int32x2_t v13 = vadd_s32(v9, (int32x2_t)0xFFFF0000FFFF0000);
      if (*(unsigned char *)(a6 + 428)) {
        unsigned int v14 = 13;
      }
      else {
        unsigned int v14 = 14;
      }
      int32x2_t v15 = vadd_s32(vadd_s32(v11, v12), (int32x2_t)-1);
      int32x2_t v16 = vadd_s32(vmla_s32(vmul_s32(v8, vrev64_s32(v15)), v13, v15), *(int32x2_t *)(a1 + 1));
      int32x2_t v17 = (int32x2_t)vshl_u32(vshl_u32((uint32x2_t)vadd_s32(vdup_n_s32((1 << v14) >> 1), vabs_s32(v16)), (uint32x2_t)vneg_s32(vdup_n_s32(v14))), (uint32x2_t)vdup_n_s32(*(unsigned char *)(a6 + 428) == 0));
      int8x8_t v10 = vbsl_s8((int8x8_t)vcltz_s32(v16), (int8x8_t)vneg_s32(v17), (int8x8_t)v17);
    }
    if (*(unsigned char *)(a6 + 269)) {
      int8x8_t v10 = vand_s8((int8x8_t)vadd_s32((int32x2_t)vsra_n_u32((uint32x2_t)v10, (uint32x2_t)vand_s8(v10, (int8x8_t)0xFFFF0000FFFFLL), 0xFuLL), (int32x2_t)0x300000003), (int8x8_t)vdup_n_s32(0xFFF8u));
    }
  }
  else
  {
    int8x8_t v10 = 0;
  }
  return v10.u16[2] | (v10.u16[0] << 16);
}

uint64_t sub_224ADE9B4(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7, unsigned int a8)
{
  int v8 = 1 << (a1 - 1);
  int v9 = ((a3 - a2) & (v8 - 1)) - ((a3 - a2) & v8);
  int v10 = ((a2 - a4) & (v8 - 1)) - ((a2 - a4) & v8);
  if (!a1)
  {
    int v9 = 0;
    int v10 = 0;
  }
  BOOL v11 = *(unsigned __int8 *)(a5 + a8 + 256) > 1u || *(unsigned __int8 *)(a5 + a8 + 288) == 6;
  BOOL v12 = *(unsigned __int8 *)(a6 + a7 + 256) > 1u || *(unsigned __int8 *)(a6 + a7 + 288) == 6;
  if (v9 < 0) {
    int v9 = -v9;
  }
  if (v10 < 0) {
    int v10 = -v10;
  }
  if (v9 == v10) {
    int v13 = 3;
  }
  else {
    int v13 = 0;
  }
  return (v11 + v12 + v13);
}

uint64_t sub_224ADEA70(uint64_t result, unsigned __int8 a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, void *a10)
{
  int v10 = *(_DWORD *)(result + 28);
  BOOL v11 = (uint64_t *)(result + 8 * (v10 & 0x1F) + 712);
  if (a7) {
    BOOL v12 = a8 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = !v12;
  if (a3 <= a4) {
    int v14 = a4;
  }
  else {
    int v14 = a3;
  }
  if (v14 <= 31 && a8)
  {
    int v15 = *(_DWORD *)(result + 24);
    int v16 = a2 & (v15 + a3 < *(_DWORD *)(*(void *)(result + 16) + 13868));
LABEL_15:
    uint64_t v17 = *(void *)(result + 8 * (v10 & 0x1F) + 704);
    int v18 = v15;
    uint64_t v19 = v17 + 12 * v15;
    if (a9 + 1 == *(char *)(v19 + 8) && *(unsigned __int8 *)(v19 + 9) == 255)
    {
      *a10 |= 1uLL;
      int v20 = 1;
    }
    else
    {
      int v20 = 0;
    }
    int v21 = byte_224B28CC0[4 * *(unsigned __int8 *)(v17 + 12 * v18 + 10)];
    if (v21 >= a3)
    {
      if (((v21 - 1) & v18) != 0) {
        int v13 = 0;
      }
      if (v21 - ((v21 - 1) & v18) > a3) {
        int v16 = 0;
      }
    }
    else if (v21 < a5)
    {
      unsigned int v22 = 1 << v21;
      unsigned int v23 = v21;
      do
      {
        uint64_t v24 = v19 + 12 * v23;
        if (a9 + 1 == *(char *)(v24 + 8) && *(unsigned __int8 *)(v24 + 9) == 255)
        {
          *a10 |= v22;
          if (v20 > 6) {
            return result;
          }
          ++v20;
        }
        unsigned int v23 = byte_224B28CC0[4 * *(unsigned __int8 *)(v19 + 12 * v23 + 10)];
        v22 <<= v23;
        v21 += v23;
        uint64_t v19 = v24;
      }
      while (v21 < a5);
    }
    if (!a7) {
      goto LABEL_48;
    }
    goto LABEL_32;
  }
  if (a8)
  {
    int v16 = 0;
    int v15 = *(_DWORD *)(result + 24);
    goto LABEL_15;
  }
  int v20 = 0;
  int v16 = 0;
  if (!a7) {
    goto LABEL_48;
  }
LABEL_32:
  uint64_t v25 = *v11;
  uint64_t v26 = *(int *)(result + 24) - 1;
  uint64_t v27 = *v11 + 12 * v26;
  int v29 = *(char *)(v27 + 8);
  uint64_t v28 = v27 + 8;
  if (a9 + 1 == v29 && *(unsigned __int8 *)(v28 + 1) == 255)
  {
    a10[1] |= 1uLL;
    if (v20 > 6) {
      return result;
    }
    ++v20;
  }
  int v30 = byte_224B28CC0[4 * *(unsigned __int8 *)(v25 + 12 * v26 + 10) + 1];
  if (v30 >= a4)
  {
    if (((v30 - 1) & v10) != 0) {
      goto LABEL_51;
    }
  }
  else if (v30 < a6)
  {
    unsigned int v31 = 1 << v30;
    unsigned int v32 = v30;
    uint64_t v33 = v11;
    do
    {
      v33 += v32;
      uint64_t v34 = *v33;
      uint64_t v35 = *v33 + 12 * v26;
      int v37 = *(char *)(v35 + 8);
      uint64_t v36 = v35 + 8;
      if (a9 + 1 == v37 && *(unsigned __int8 *)(v36 + 1) == 255)
      {
        a10[1] |= v31;
        if (v20 > 6) {
          return result;
        }
        ++v20;
      }
      unsigned int v32 = byte_224B28CC0[4 * *(unsigned __int8 *)(v34 + 12 * v26 + 10) + 1];
      v31 <<= v32;
      v30 += v32;
    }
    while (v30 < a6);
  }
LABEL_48:
  if (v13)
  {
    uint64_t v38 = *(v11 - 1);
    int v39 = *(_DWORD *)(result + 24);
    uint64_t v40 = v38 + 12 * (v39 - 1);
    int v42 = *(char *)(v40 + 8);
    uint64_t v41 = v40 + 8;
    int v43 = a9 + 1;
    if (a9 + 1 == v42 && *(unsigned __int8 *)(v41 + 1) == 255)
    {
      a10[1] |= 0x100000000uLL;
      if (v20 > 6 || !v16) {
        return result;
      }
      goto LABEL_53;
    }
  }
LABEL_51:
  if (!v16) {
    return result;
  }
  uint64_t v38 = *(v11 - 1);
  int v39 = *(_DWORD *)(result + 24);
  int v43 = a9 + 1;
LABEL_53:
  uint64_t v44 = v38 + 12 * (v39 + a3);
  int v46 = *(char *)(v44 + 8);
  uint64_t v45 = v44 + 8;
  if (v43 == v46 && *(unsigned __int8 *)(v45 + 1) == 255) {
    *a10 |= 0x100000000uLL;
  }
  return result;
}

uint64_t sub_224ADED88(uint64_t result, int a2, int a3, unint64_t a4, unint64_t a5, int a6, uint64_t a7)
{
  uint64_t v117 = *MEMORY[0x263EF8340];
  int v9 = *(_DWORD *)(result + 28);
  int v10 = (void *)(result + 8 * (v9 & 0x1F) + 712);
  if (a4 != 1 || HIDWORD(a5))
  {
    if (a4)
    {
      unint64_t v17 = 0;
      int v18 = 0;
      uint64_t v19 = *(void *)(result + 8 * (v9 & 0x1F) + 704);
      int v20 = *(_DWORD *)(result + 24);
      int v21 = v116;
      unsigned int v22 = a4;
      do
      {
        unint64_t v23 = v17;
        unsigned int v24 = __clz(__rbit32(v22));
        v18 += v24;
        uint64_t v25 = (__int16 *)(v19 + 12 * (v20 + v18));
        uint64_t v26 = &byte_224B28CC0[4 * *((unsigned __int8 *)v25 + 10)];
        int v27 = 32 * v18 + 16 * *v26 - 8;
        LODWORD(v26) = (16 * v26[1]) ^ 0xFFFFFFF8;
        *(v21 - 2) = v27;
        *(v21 - 1) = (int)v26;
        int v28 = v27 + v25[1];
        LODWORD(v25) = v26 + *v25;
        *int v21 = v28;
        v21[1] = (int)v25;
        unint64_t v17 = v23 + 1;
        if (v23 > 6) {
          break;
        }
        v21 += 4;
        unsigned int v22 = (v22 >> v24) & 0xFFFFFFFE;
      }
      while (v22);
      LODWORD(v16) = v23 + 1;
      if (v17 > 7) {
        goto LABEL_24;
      }
    }
    else
    {
      LODWORD(v16) = 0;
    }
  }
  else
  {
    int v11 = *(_DWORD *)(result + 24);
    BOOL v12 = (__int16 *)(*(void *)(result + 8 * (v9 & 0x1F) + 704) + 12 * v11);
    int v13 = &byte_224B28CC0[4 * *((unsigned __int8 *)v12 + 10)];
    int v14 = *v13;
    LODWORD(v13) = (16 * v13[1]) ^ 0xFFFFFFF8;
    v115[0] = 16 * v14 - 32 * ((v14 - 1) & v11) - 8;
    v115[1] = v13;
    int v15 = v12[1];
    LODWORD(v12) = v13 + *v12;
    v116[0] = v115[0] + v15;
    v116[1] = v12;
    LODWORD(v16) = 1;
  }
  if (a5 == 1)
  {
    uint64_t v29 = 12 * *(int *)(result + 24) - 12;
    int v30 = (byte_224B28CC0[4 * *(unsigned __int8 *)(*v10 + v29 + 10) + 1] - 1) & v9;
    unsigned int v31 = (__int16 *)(v10[-v30] + v29);
    unsigned int v32 = &byte_224B28CC0[4 * *((unsigned __int8 *)v31 + 10)];
    unsigned int v33 = (16 * *v32) ^ 0xFFFFFFF8;
    uint64_t v34 = &v115[4 * v16];
    int v35 = 16 * v32[1] - 32 * v30 - 8;
    unsigned int *v34 = v33;
    v34[1] = v35;
    int v36 = v35 + *v31;
    v34[2] = v33 + v31[1];
    v34[3] = v36;
    LODWORD(v16) = v16 + 1;
  }
  else
  {
    if (!a5) {
      goto LABEL_19;
    }
    int v37 = 0;
    uint64_t v38 = *(int *)(result + 24) - 1;
    unint64_t v39 = v16;
    uint64_t v40 = &v115[4 * v16 + 2];
    unsigned int v41 = a5;
    do
    {
      unint64_t v42 = v39;
      unsigned int v43 = __clz(__rbit32(v41));
      v37 += v43;
      uint64_t v44 = (__int16 *)(v10[v37] + 12 * v38);
      uint64_t v45 = &byte_224B28CC0[4 * *((unsigned __int8 *)v44 + 10)];
      unsigned int v46 = (16 * *v45) ^ 0xFFFFFFF8;
      LODWORD(v45) = 32 * v37 + 16 * v45[1] - 8;
      *(v40 - 2) = v46;
      *(v40 - 1) = v45;
      unsigned int v47 = v46 + v44[1];
      LODWORD(v44) = v45 + *v44;
      *uint64_t v40 = v47;
      v40[1] = v44;
      unint64_t v39 = v42 + 1;
      if (v42 > 6) {
        break;
      }
      v40 += 4;
      unsigned int v41 = (v41 >> v43) & 0xFFFFFFFE;
    }
    while (v41);
    LODWORD(v16) = v42 + 1;
  }
  if (v16 > 7) {
    goto LABEL_24;
  }
LABEL_19:
  if (!HIDWORD(a5)) {
    goto LABEL_22;
  }
  uint64_t v48 = *(void *)(result + 8 * (v9 & 0x1F) + 704) + 12 * *(int *)(result + 24);
  int v49 = &byte_224B28CC0[4 * *(unsigned __int8 *)(v48 - 2)];
  unsigned int v50 = (16 * *v49) ^ 0xFFFFFFF8;
  int64x2_t v51 = &v115[4 * v16];
  LODWORD(v49) = (16 * v49[1]) ^ 0xFFFFFFF8;
  *int64x2_t v51 = v50;
  v51[1] = v49;
  unsigned int v52 = v50 + *(__int16 *)(v48 - 10);
  LODWORD(v48) = v49 + *(__int16 *)(v48 - 12);
  v51[2] = v52;
  v51[3] = v48;
  if (v16 > 6)
  {
LABEL_24:
    LODWORD(v16) = 8;
    goto LABEL_25;
  }
  LODWORD(v16) = v16 + 1;
LABEL_22:
  if (HIDWORD(a4))
  {
    uint64_t v53 = (__int16 *)(*(void *)(result + 8 * (v9 & 0x1F) + 704) + 12 * (*(_DWORD *)(result + 24) + a2));
    int v54 = &byte_224B28CC0[4 * *((unsigned __int8 *)v53 + 10)];
    int v55 = 32 * a2 + 16 * *v54 - 8;
    uint64_t v56 = &v115[4 * v16];
    LODWORD(v54) = (16 * v54[1]) ^ 0xFFFFFFF8;
    *uint64_t v56 = v55;
    v56[1] = (int)v54;
    int v57 = v55 + v53[1];
    LODWORD(v53) = v54 + *v53;
    v56[2] = v57;
    v56[3] = (int)v53;
    LODWORD(v16) = v16 + 1;
  }
LABEL_25:
  uint64_t v58 = 0;
  LODWORD(v59) = 0;
  if (a2 <= a3) {
    int v60 = a3;
  }
  else {
    int v60 = a2;
  }
  if (v60 >= 28) {
    int v60 = 28;
  }
  if (v60 <= 4) {
    int v60 = 4;
  }
  v61.i32[0] = a6;
  v61.i32[1] = a6 << 16;
  int32x2_t v62 = vshr_n_s32(v61, 0x10uLL);
  int v63 = (int32x2_t *)v116;
  do
  {
    int32x2_t v64 = vabs_s32(vsub_s32(*v63, vadd_s32(v62, v63[-1])));
    v64.i32[0] = vadd_s32(vdup_lane_s32(v64, 1), v64).u32[0];
    *(_DWORD *)&v114[v58 + 4] = v64.i32[0];
    if (v64.i32[0] <= (4 * v60)) {
      LODWORD(v59) = v59 + 1;
    }
    else {
      *(_DWORD *)&v114[v58 + 4] = -1;
    }
    v58 += 4;
    v63 += 2;
  }
  while (4 * v16 != v58);
  if (v59)
  {
    int v65 = v16 - v59;
    if ((int)v16 - (int)v59 >= 1)
    {
      int v66 = 0;
      LODWORD(v67) = 0;
      do
      {
        uint64_t v67 = (int)v67;
        do
        {
          uint64_t v68 = v67;
          int v69 = *(_DWORD *)&v114[4 * v67++ + 4];
        }
        while (v69 != -1);
        uint64_t v16 = (int)v16;
        do
        {
          uint64_t v70 = v16--;
          int v71 = *(_DWORD *)&v114[4 * v70];
        }
        while (v71 == -1);
        if ((int)v68 >= (int)v70) {
          break;
        }
        *(_DWORD *)&v114[4 * v68 + 4] = v71;
        *(_OWORD *)&v115[4 * v68] = *(_OWORD *)&v115[4 * v16];
        ++v66;
      }
      while (v66 != v65);
    }
  }
  else
  {
    LODWORD(v59) = 1;
  }
  int32x2_t v72 = vadd_s32(vadd_s32((int32x2_t)__PAIR64__(a3, a2), (int32x2_t)__PAIR64__(a3, a2)), (int32x2_t)-1);
  if ((int)v59 < 1)
  {
    int v73 = 0;
    int32x4_t v77 = 0uLL;
    int32x2_t v79 = 0;
  }
  else
  {
    int v73 = 0;
    int32x2_t v74 = vshl_n_s32(v72, 3uLL);
    v75.i32[0] = a6 >> 16;
    v75.i32[1] = (__int16)a6;
    int32x2_t v76 = vadd_s32(v75, v74);
    uint64_t v59 = v59;
    int32x4_t v77 = 0uLL;
    int v78 = (int32x2_t *)v116;
    int32x2_t v79 = 0;
    do
    {
      int32x2_t v80 = vsub_s32(v78[-1], v74);
      *(int32x2_t *)v81.i8 = v80;
      v81.u64[1] = (unint64_t)v80;
      *(int32x2_t *)v7.i8 = vsub_s32(*v78, v76);
      int v82 = vsubq_s32(v81, v7).u32[0];
      if (v82 < 0) {
        int v82 = -v82;
      }
      if (v82 <= 0xFF)
      {
        int v83 = vsub_s32(v80, *(int32x2_t *)&v7).i32[1];
        if (v83 < 0) {
          int v83 = -v83;
        }
        if (v83 <= 0xFF)
        {
          int32x4_t v7 = vzip1q_s32(v7, v7);
          v73 += v80.i32[0] + v80.i32[1] + ((v80.i32[1] * v80.i32[0]) >> 2) + 4;
          int32x2_t v79 = vadd_s32(vadd_s32(vadd_s32(v79, vrev64_s32(vadd_s32(v80, v80))), (int32x2_t)0x800000008), vrev64_s32((int32x2_t)vshr_n_u32((uint32x2_t)vmul_s32(v80, v80), 2uLL)));
          int32x4_t v77 = vaddq_s32(vsraq_n_s32(vaddq_s32(vaddq_s32(v77, v7), v81), vmulq_s32(v81, v7), 2uLL), (int32x4_t)xmmword_224B159A0);
        }
      }
      v78 += 2;
      --v59;
    }
    while (v59);
  }
  uint64_t v84 = v79.i32[0] * (uint64_t)v79.i32[1] - v73 * (uint64_t)v73;
  if (!v84) {
    goto LABEL_105;
  }
  int v85 = v72.i32[1] + 4 * v9;
  __int32 v86 = v72.i32[0] + 4 * *(_DWORD *)(result + 24);
  if (v84 >= 0) {
    unint64_t v87 = v79.i32[0] * (uint64_t)v79.i32[1] - v73 * (uint64_t)v73;
  }
  else {
    unint64_t v87 = v73 * (uint64_t)v73 - v79.i32[0] * (uint64_t)v79.i32[1];
  }
  unsigned int v88 = __clz(v87);
  unint64_t v89 = (-1 << ~(_BYTE)v88) + v87;
  uint64_t v90 = v89 << (v88 - 55);
  uint64_t v91 = (uint64_t)(v89 + (1 << (54 - v88))) >> (55 - v88);
  if (v88 > 0x36) {
    uint64_t v91 = v90;
  }
  int v92 = word_224B19240[v91];
  if (v84 < 0) {
    int v92 = -v92;
  }
  char v93 = 61 - v88;
  if (v88 > 0x3D) {
    char v93 = 0;
  }
  BOOL v94 = v88 >= 0x3D;
  char v95 = v88 - 61;
  if (!v94) {
    char v95 = 0;
  }
  uint64_t v96 = v92 << v95;
  uint64_t v97 = (v79.i32[0] * (uint64_t)v77.i32[0] - v73 * (uint64_t)v77.i32[1]) * v96;
  BOOL v98 = v97 < 0;
  if (v97 < 0) {
    uint64_t v97 = -v97;
  }
  unint64_t v99 = 1 << v93;
  unint64_t v100 = (v97 + ((unint64_t)(1 << v93) >> 1)) >> v93;
  if (v98) {
    LODWORD(v100) = -(int)v100;
  }
  uint64_t v101 = (v79.i32[1] * (uint64_t)v77.i32[1] - v73 * (uint64_t)v77.i32[0]) * v96;
  BOOL v102 = v101 < 0;
  if (v101 < 0) {
    uint64_t v101 = -v101;
  }
  unint64_t v103 = (v101 + (v99 >> 1)) >> v93;
  if (v102) {
    LODWORD(v103) = -(int)v103;
  }
  if ((int)v103 >= 0x1FFF) {
    LODWORD(v103) = 0x1FFF;
  }
  if ((int)v103 <= -8191) {
    LODWORD(v103) = -8191;
  }
  uint64_t v104 = (v79.i32[0] * (uint64_t)v77.i32[2] - v73 * (uint64_t)v77.i32[3]) * v96;
  BOOL v105 = v104 < 0;
  if (v104 < 0) {
    uint64_t v104 = -v104;
  }
  unint64_t v106 = (v104 + (v99 >> 1)) >> v93;
  if (v105) {
    LODWORD(v106) = -(int)v106;
  }
  if ((int)v106 >= 0x1FFF) {
    LODWORD(v106) = 0x1FFF;
  }
  if ((int)v106 <= -8191) {
    LODWORD(v106) = -8191;
  }
  *(_DWORD *)(a7 + 16) = v103;
  *(_DWORD *)(a7 + 20) = v106;
  uint64_t v107 = (v79.i32[1] * (uint64_t)v77.i32[3] - v73 * (uint64_t)v77.i32[2]) * v96;
  BOOL v108 = v107 < 0;
  if (v107 < 0) {
    uint64_t v107 = -v107;
  }
  unint64_t v109 = (v107 + (v99 >> 1)) >> v93;
  if (v108) {
    LODWORD(v109) = -(int)v109;
  }
  if ((int)v109 >= 73727) {
    LODWORD(v109) = 73727;
  }
  if ((int)v109 <= 57345) {
    LODWORD(v109) = 57345;
  }
  *(_DWORD *)(a7 + 24) = v109;
  v110.i32[0] = (0x10000 - v109) * v85 - v106 * v86 + ((__int16)a6 << 13);
  v110.i32[1] = v100;
  int32x2_t v111 = vmax_s32(vmin_s32(v110, (int32x2_t)0x11FFF007FFFFFLL), (int32x2_t)0xE001FF800000);
  int v112 = (0x10000 - v111.i32[1]) * v86 - v103 * v85 + (a6 >> 16 << 13);
  if (v112 >= 0x7FFFFF) {
    int v112 = 0x7FFFFF;
  }
  if (v112 <= -8388608) {
    int v112 = -8388608;
  }
  *(_DWORD *)(a7 + 4) = v112;
  *(int32x2_t *)(a7 + 8) = v111;
  uint64_t result = sub_224AEBEF0(a7);
  if (!result) {
    int v113 = 3;
  }
  else {
LABEL_105:
  }
    int v113 = 0;
  *(_DWORD *)a7 = v113;
  return result;
}

uint64_t sub_224ADF578(uint64_t a1, uint64_t a2, int a3, int a4, unsigned int a5, unsigned int a6)
{
  if (*(char *)(a1 + a6 + 288) == a4 || *(char *)(a1 + a6 + 320) == a4) {
    int v6 = *(unsigned __int8 *)(a1 + a6 + 384);
  }
  else {
    int v6 = 3;
  }
  if (*(char *)(a2 + a5 + 288) == a4 || *(char *)(a2 + a5 + 320) == a4) {
    int v7 = *(unsigned __int8 *)(a2 + a5 + 384);
  }
  else {
    int v7 = 3;
  }
  unsigned int v8 = v6 + 4 * a3;
  if (v7 != 3) {
    unsigned int v8 = (4 * a3) | 3;
  }
  if (v6 == 3) {
    unsigned int v8 = v7 + 4 * a3;
  }
  if (v6 == v7) {
    return (v6 + 4 * a3);
  }
  else {
    return v8;
  }
}

uint64_t sub_224ADF610(uint64_t result, signed int *a2, unsigned __int8 *a3, int *a4)
{
  if (*a3)
  {
    int v4 = 0;
    uint64_t v5 = a4[2] + a4[6] * (uint64_t)(4 * (*(_DWORD *)(result + 28) + a3[1]) - 4);
    signed int v6 = *a2;
    do
    {
      if (v6 <= (int)(((unint64_t)(v5 + (4 * *(int *)(result + 24) + v4 + 4) * a4[5]) >> 16) + 8)) {
        signed int v6 = ((unint64_t)(v5 + (4 * *(int *)(result + 24) + v4 + 4) * a4[5]) >> 16) + 8;
      }
      *a2 = v6;
      int v7 = *a3;
      int v8 = 4 * v7;
      if (4 * v7 <= 16) {
        int v8 = 16;
      }
      int v4 = v4 + v8 - 8;
    }
    while (v4 < (4 * v7));
  }
  return result;
}

int *sub_224ADF694(int *result, int a2, int a3, int a4, int a5, int *a6)
{
  unsigned int v6 = 4u >> a5;
  char v7 = a5 == 0;
  if (*a6)
  {
    uint64_t v8 = 8 * *a6 - 0x20000 + *a6 * (uint64_t)(int)((a4 << v7) + 16 * a2 * v6);
    BOOL v9 = v8 < 0;
    if (v8 < 0) {
      uint64_t v8 = -v8;
    }
    unint64_t v10 = (unint64_t)(v8 + 128) >> 8;
    if (v9) {
      LODWORD(v10) = -(int)v10;
    }
    int v11 = ((int)(v10 + a6[1] * (v6 * a3 - 1) + 32) >> 10) + 5;
    if (*result > v11) {
      int v11 = *result;
    }
  }
  else
  {
    int v11 = (a4 >> (a5 + 3)) + v6 * (a3 + a2) + 4 * (((a4 << v7) & 0xF) != 0);
    if (*result > v11) {
      int v11 = *result;
    }
  }
  *uint64_t result = v11;
  return result;
}

int *sub_224ADF73C(int *result, uint64_t a2, unsigned int a3, unsigned __int8 *a4, int a5, int a6)
{
  uint64_t v8 = result;
  int v9 = result[6];
  int v10 = result[7];
  uint64_t v11 = *((void *)result + 1);
  uint64_t v12 = (uint64_t)&result[2 * (v10 & 0x1E) + 178];
  uint64_t v45 = v11;
  if (a3)
  {
    int v13 = *(_DWORD *)(v11 + 2168);
    int v14 = v13 == 1;
    uint64_t v16 = result + 4;
    uint64_t v15 = *((void *)result + 2);
    if (v10 <= *(_DWORD *)(v15 + 13872) || (4u >> (v13 != 3)) * *a4 + (4u >> v14) * a4[1] < 0x10) {
      goto LABEL_21;
    }
  }
  else
  {
    int v14 = 0;
    uint64_t v16 = result + 4;
    uint64_t v15 = *((void *)result + 2);
    if (v10 <= *(_DWORD *)(v15 + 13872)) {
      goto LABEL_21;
    }
  }
  if (a5 >= 1)
  {
    unsigned int v43 = v16;
    int v17 = 0;
    int v18 = 0;
    unsigned int v44 = a3;
    uint64_t v19 = a3;
    while (1)
    {
      int v20 = a4[2] >= 4u ? 4 : a4[2];
      int v9 = v8[6];
      if (v18 >= v20) {
        break;
      }
      uint64_t v21 = *(void *)(v12 - 8);
      int v22 = v17 + v9 + 1;
      uint64_t v23 = v21 + 12 * v22;
      uint64_t v24 = *(unsigned __int8 *)(v23 + 10);
      int v25 = *(char *)(v23 + 8);
      if (v25 >= 1)
      {
        unsigned int v26 = a4[1];
        if (v26 >= 0x10) {
          unsigned int v26 = 16;
        }
        uint64_t result = sub_224ADF694((int *)(a2 + 8 * (v25 - 1) + 4 * v19), v8[7], (3 * (v26 >> 1) + 3) >> 2, *(__int16 *)(v21 + 12 * v22), v14, (int *)(v11 + 16 * (v25 - 1) + 3136));
        uint64_t v11 = v45;
        ++v18;
      }
      unsigned int v27 = byte_224B28CC0[4 * v24];
      if (v27 <= 2) {
        unsigned int v27 = 2;
      }
      v17 += v27;
      if (v17 >= a5)
      {
        int v9 = v8[6];
        break;
      }
    }
    uint64_t v15 = *(void *)v43;
    a3 = v44;
  }
LABEL_21:
  if (v9 > *(_DWORD *)(v15 + 13864) && a6 >= 1)
  {
    int v29 = 0;
    signed int v30 = 0;
    uint64_t v31 = a3;
    do
    {
      unsigned int v32 = a4[3];
      if (v32 >= 4) {
        unsigned int v32 = 4;
      }
      if (v30 >= (int)v32) {
        break;
      }
      uint64_t v33 = *(void *)(v12 + 8 * (v29 + 1));
      uint64_t v34 = v8[6] - 1;
      uint64_t v35 = v33 + 12 * v34;
      int v36 = &byte_224B28CC0[4 * *(unsigned __int8 *)(v35 + 10)];
      int v37 = *(char *)(v35 + 8);
      if (v37 <= 0)
      {
        int v39 = v36[1];
      }
      else
      {
        uint64_t v38 = 12 * v34;
        int v39 = v36[1];
        int v40 = a4[1];
        if (v39 < v40) {
          int v40 = v39;
        }
        int v41 = v39 >= 2 ? v40 : 2;
        uint64_t result = sub_224ADF694((int *)(a2 + 8 * (v37 - 1) + 4 * v31), v8[7] + v29, v41, *(__int16 *)(v33 + v38), v14, (int *)(v11 + 16 * (v37 - 1) + 3136));
        uint64_t v11 = v45;
        ++v30;
      }
      int v42 = v39 <= 2 ? 2 : v39;
      v29 += v42;
    }
    while (v29 < a6);
  }
  return result;
}

uint64_t sub_224ADF9F0(uint64_t result, signed int *a2, unsigned __int8 *a3, int *a4)
{
  int v4 = *(_DWORD *)(*(void *)(result + 8) + 2168);
  if (v4 == 3) {
    return sub_224ADF610(result, a2, a3, a4);
  }
  if (*a3)
  {
    unsigned int v5 = 0;
    char v6 = v4 & 1;
    uint64_t v7 = a4[2] + (4 * *(int *)(result + 28) + (int)(((4u >> v6) * a3[1] - 4) << v6)) * a4[6];
    signed int v8 = *a2;
    do
    {
      if (v8 <= (int)(((unint64_t)((v7 + (4 * *(int *)(result + 24) + (int)(2 * v5 + 8)) * a4[5]) >> v6) >> 16)
                     + 8))
        signed int v8 = ((unint64_t)((v7 + (4 * *(int *)(result + 24) + (int)(2 * v5 + 8)) * a4[5]) >> v6) >> 16) + 8;
      *a2 = v8;
      int v9 = *a3;
      int v10 = 2 * v9;
      if (2 * v9 <= 16) {
        int v10 = 16;
      }
      unsigned int v5 = v5 + v10 - 8;
    }
    while (v5 < 2 * v9);
  }
  return result;
}

void sub_224ADFAA4(uint64_t a1, unsigned int a2, int a3, uint64_t a4, char a5, char a6)
{
  uint64_t v7 = *(_DWORD *)(a1 + 24) & 0x1FLL;
  uint64_t v8 = *(_DWORD *)(a1 + 28) & 0x1FLL;
  uint64_t v9 = a2;
  int v10 = &byte_224B28D18[8 * a2];
  uint64_t v11 = v10[2];
  uint64_t v12 = v10[3];
  int v13 = 1;
  if (!a2 || a3 > 1) {
    goto LABEL_9;
  }
  uint64_t v43 = v10[2];
  uint64_t v17 = *(char *)(a1 + v8 + 480) < (int)v12;
  uint64_t v41 = *(void *)(a1 + 8);
  if (*(char *)(*(void *)(a1 + 656) + v7 + 448) < (int)v11) {
    ++v17;
  }
  sub_224AADEFC(*(void *)(a1 + 16) + 13824, (unsigned int *)(-12 * (2 * byte_224B28D18[8 * a2 + 5] + a3) + *(void *)(a1 + 16) + 4 * v17 + 6024));
  int v13 = 1;
  if (!v18)
  {
LABEL_8:
    uint64_t v11 = v43;
LABEL_9:
    switch(byte_224B28D18[8 * v9 + 1])
    {
      case 1u:
        if (v13) {
          char v19 = v12;
        }
        else {
          char v19 = 0;
        }
        *(unsigned char *)(a1 + v8 + 480) = v19;
        break;
      case 2u:
        __int16 v29 = v12 | ((_WORD)v12 << 8);
        if (!v13) {
          __int16 v29 = 0;
        }
        *(_WORD *)(a1 + v8 + 480) = v29;
        break;
      case 3u:
      case 5u:
      case 6u:
      case 7u:
        break;
      case 4u:
        int v30 = 16843009 * v12;
        if (!v13) {
          int v30 = 0;
        }
        *(_DWORD *)(a1 + v8 + 480) = v30;
        break;
      case 8u:
        uint64_t v31 = 0x101010101010101 * v12;
        if (!v13) {
          uint64_t v31 = 0;
        }
        *(void *)(a1 + v8 + 480) = v31;
        break;
      default:
        if (byte_224B28D18[8 * v9 + 1] == 16)
        {
          unint64_t v20 = 0x101010101010101 * v12;
          if (!v13) {
            unint64_t v20 = 0;
          }
          *(int64x2_t *)(a1 + v8 + 480) = vdupq_n_s64(v20);
        }
        break;
    }
    switch(*v10)
    {
      case 1u:
        if (v13) {
          char v32 = v11;
        }
        else {
          char v32 = 0;
        }
        *(unsigned char *)(*(void *)(a1 + 656) + v7 + 448) = v32;
        break;
      case 2u:
        if (v13) {
          __int16 v35 = v11 | ((_WORD)v11 << 8);
        }
        else {
          __int16 v35 = 0;
        }
        *(_WORD *)(*(void *)(a1 + 656) + v7 + 448) = v35;
        break;
      case 3u:
      case 5u:
      case 6u:
      case 7u:
        return;
      case 4u:
        if (v13) {
          int v36 = 16843009 * v11;
        }
        else {
          int v36 = 0;
        }
        *(_DWORD *)(*(void *)(a1 + 656) + v7 + 448) = v36;
        break;
      case 8u:
        if (v13) {
          uint64_t v33 = 0x101010101010101 * v11;
        }
        else {
          uint64_t v33 = 0;
        }
        uint64_t v34 = *(void *)(a1 + 656) + v7;
        goto LABEL_51;
      default:
        if (*v10 == 16)
        {
          if (v13) {
            uint64_t v33 = 0x101010101010101 * v11;
          }
          else {
            uint64_t v33 = 0;
          }
          *(void *)(*(void *)(a1 + 656) + v7 + 448) = v33;
          uint64_t v34 = *(void *)(a1 + 656) + (v7 + 8);
LABEL_51:
          *(void *)(v34 + 448) = v33;
        }
        break;
    }
    return;
  }
  *(_WORD *)(a4 + 2 * a3) |= 1 << (a5 + 4 * a6);
  if (((0x7FF9CuLL >> v9) & 1) == 0)
  {
    int v13 = 0;
    goto LABEL_8;
  }
  uint64_t v21 = byte_224B28D18[8 * v9 + 6];
  int v22 = &byte_224B28D18[8 * v21];
  int v23 = *v22;
  int v24 = v22[1];
  uint64_t v25 = (a3 + 1);
  sub_224ADFAA4(a1, v21, v25);
  int v26 = *(_DWORD *)(a1 + 24) + v23;
  *(_DWORD *)(a1 + 24) = v26;
  unsigned int v27 = v43;
  if (v43 >= v12)
  {
    uint64_t v28 = v41;
    if (v26 < *(_DWORD *)(v41 + 3448))
    {
      sub_224ADFAA4(a1, v21, v25);
      unsigned int v27 = v43;
      int v26 = *(_DWORD *)(a1 + 24);
    }
  }
  else
  {
    uint64_t v28 = v41;
  }
  int v37 = v26 - v23;
  int v38 = *(_DWORD *)(a1 + 28) + v24;
  *(_DWORD *)(a1 + 24) = v37;
  *(_DWORD *)(a1 + 28) = v38;
  if (v12 >= v27 && v38 < *(_DWORD *)(v28 + 3452))
  {
    unsigned int v39 = v27;
    sub_224ADFAA4(a1, v21, v25);
    int v40 = *(_DWORD *)(a1 + 24) + v23;
    *(_DWORD *)(a1 + 24) = v40;
    if (v39 >= v12 && v40 < *(_DWORD *)(v28 + 3448))
    {
      sub_224ADFAA4(a1, v21, v25);
      int v40 = *(_DWORD *)(a1 + 24);
    }
    *(_DWORD *)(a1 + 24) = v40 - v23;
    int v38 = *(_DWORD *)(a1 + 28);
  }
  *(_DWORD *)(a1 + 28) = v38 - v24;
}

uint64_t sub_224ADFEC8(char a1, uint64_t a2, int16x4_t *a3, int a4)
{
  uint64_t v7 = a2 + 13824;
  sub_224AADEFC(a2 + 13824, (unsigned int *)&a3[13] + 1);
  int v9 = v8;
  sub_224AADBF0(v7, (uint64_t)a3, 10);
  if (!v10)
  {
    sub_224AADEFC(v7, (unsigned int *)&a3[8]);
    int v16 = v23;
    if (a4)
    {
      int v21 = sub_224AAD9A0(v7, &a3[v23 + 4], 3, v24, v25, v26, v27, v28);
      if (a1)
      {
        int v22 = (unsigned int *)&a3[7];
        goto LABEL_11;
      }
      goto LABEL_13;
    }
LABEL_12:
    int v29 = 1;
    int v21 = 3;
    goto LABEL_14;
  }
  int v16 = 1 << v10;
  if (v10 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = v10;
    char v19 = (unsigned int *)&a3[8] + 1;
    do
    {
      sub_224AADEFC(v7, v19);
      v16 |= v20 << v17++;
      ++v19;
    }
    while (v18 != v17);
  }
  if (!a4) {
    goto LABEL_12;
  }
  int v21 = sub_224AAD9A0(v7, a3 + 6, 3, v11, v12, v13, v14, v15);
  if (a1)
  {
    int v22 = (unsigned int *)&a3[7] + 1;
LABEL_11:
    sub_224AADEFC(v7, v22);
    goto LABEL_14;
  }
LABEL_13:
  int v29 = 1;
LABEL_14:
  int v30 = (2 * v21) | (8 * v16) | v29;
  if (v9) {
    return ~v30;
  }
  else {
    return (v30 + 1);
  }
}

uint64_t sub_224AE0010(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 3256);
  if (*(_DWORD *)(a1 + 3464) > *(_DWORD *)(a1 + 5296))
  {
    free(*(void **)(a1 + 5288));
    unsigned int v5 = malloc_type_malloc(*(int *)(a1 + 3464), 0x100004077774924uLL);
    *(void *)(a1 + 5288) = v5;
    if (!v5)
    {
      *(_DWORD *)(a1 + 5296) = 0;
      return 4294967284;
    }
    *(_DWORD *)(a1 + 5296) = *(_DWORD *)(a1 + 3464);
  }
  uint64_t v6 = *(void *)(a1 + 24);
  if (*(unsigned char *)(v6 + 449))
  {
    unint64_t v7 = 0;
    LODWORD(v8) = 0;
    do
    {
      *(unsigned char *)(*(void *)(a1 + 5288) + (int)v8) = v7++;
      uint64_t v6 = *(void *)(a1 + 24);
      if ((int)v8 + 1 >= *(unsigned __int16 *)(v6 + 2 * v7 + 580))
      {
        LODWORD(v8) = v8 + 1;
      }
      else
      {
        uint64_t v8 = (int)v8 + 1;
        do
        {
          *(unsigned char *)(*(void *)(a1 + 5288) + v8++) = 0;
          uint64_t v6 = *(void *)(a1 + 24);
        }
        while (v8 < *(unsigned __int16 *)(v6 + 2 * v7 + 580));
      }
      unint64_t v9 = *(unsigned __int8 *)(v6 + 449);
    }
    while (v7 < v9);
  }
  else
  {
    LODWORD(v9) = 0;
  }
  int v10 = v9 * *(unsigned __int8 *)(v6 + 445);
  if (v10 != *(_DWORD *)(a1 + 3272))
  {
    if (*(_DWORD *)(v4 + 8) >= 2u)
    {
      free(*(void **)(a1 + 4424));
      double v11 = malloc_type_malloc((4 * v10), 0x100004052888210uLL);
      *(void *)(a1 + 4424) = v11;
      if (!v11)
      {
        *(_DWORD *)(a1 + 3272) = 0;
        return 4294967284;
      }
    }
    free(*(void **)(a1 + 3264));
    memptr = 0;
    int v12 = malloc_type_posix_memalign(&memptr, 0x20uLL, (14624 * v10), 0xE584FBEuLL);
    double v13 = memptr;
    if (v12) {
      double v13 = 0;
    }
    *(void *)(a1 + 3264) = v13;
    if (!v13) {
      return 4294967284;
    }
    *(_DWORD *)(a1 + 3272) = v10;
    uint64_t v6 = *(void *)(a1 + 24);
  }
  int v14 = *(_DWORD *)(a1 + 3456);
  int v15 = v14 * *(unsigned __int8 *)(v6 + 449);
  unsigned int v16 = *(_DWORD *)(v4 + 8);
  char v17 = v16 >= 2 && *(_DWORD *)(v4 + 24) > 1u;
  int v18 = v15 << v17;
  if (v15 << v17 != *(_DWORD *)(a1 + 4040))
  {
    free(*(void **)(a1 + 4032));
    char v19 = malloc_type_malloc(624 * v18, 0x1000040EE3B7ECDuLL);
    *(void *)(a1 + 4032) = v19;
    if (!v19)
    {
      *(_DWORD *)(a1 + 4040) = 0;
      return 4294967284;
    }
    *(_DWORD *)(a1 + 4040) = v18;
    int v14 = *(_DWORD *)(a1 + 3456);
    unsigned int v16 = *(_DWORD *)(v4 + 8);
  }
  uint64_t v20 = *(int *)(a1 + 3460) * (uint64_t)v14;
  char v21 = *(unsigned char *)(*(void *)(a1 + 8) + 32) != 0;
  if (v16 >= 2)
  {
    uint64_t v22 = *(unsigned int *)(a1 + 2168);
    uint64_t v23 = *(void *)(a1 + 24);
    uint64_t v24 = *(unsigned __int8 *)(v23 + 449);
    uint64_t v25 = *(unsigned __int8 *)(v23 + 445);
    if (*(unsigned char *)(v23 + 449))
    {
      uint64_t v26 = 0;
      LODWORD(v27) = 0;
      int v28 = 4 * *(_DWORD *)(a1 + 3472);
      do
      {
        uint64_t v29 = v26 + 1;
        if (v25)
        {
          int v30 = *(unsigned __int16 *)(v23 + 2 * v26 + 580);
          int v31 = (v30 * *(_DWORD *)(a1 + 3456)) << 7;
          int v32 = (*(unsigned __int16 *)(v23 + 2 * v29 + 580) - v30) * v28;
          uint64_t v33 = *(void *)(a1 + 4424);
          uint64_t v27 = (int)v27;
          uint64_t v34 = (unsigned __int16 *)(v23 + 450);
          uint64_t v35 = v25;
          do
          {
            int v36 = *v34++;
            *(_DWORD *)(v33 + 4 * v27++) = (v31 + v32 * v36) * v28;
            --v35;
          }
          while (v35);
        }
        uint64_t v26 = v29;
      }
      while (v29 != v24);
    }
    uint64_t v37 = *(int *)(a1 + 3464) * (uint64_t)(int)v25;
    if (v37 != *(_DWORD *)(a1 + 5696))
    {
      free(*(void **)(a1 + 5688));
      int v38 = malloc_type_malloc(56 * v37, 0x100004021716A34uLL);
      *(void *)(a1 + 5688) = v38;
      if (!v38)
      {
        *(_DWORD *)(a1 + 5696) = 0;
        return 4294967284;
      }
      *(_DWORD *)(a1 + 5696) = v37;
      uint64_t v23 = *(void *)(a1 + 24);
      LODWORD(v24) = *(unsigned __int8 *)(v23 + 449);
    }
    unsigned int v39 = (unsigned __int8 *)&unk_224B176D8 + 2 * v22;
    if (v24)
    {
      uint64_t v40 = 0;
      uint64_t v41 = *(void *)(a1 + 5688);
      uint64_t v42 = *(unsigned __int8 *)(v23 + 445);
      uint64_t v43 = *(unsigned __int16 *)(v23 + 580);
      uint64_t v44 = 13944;
      do
      {
        ++v40;
        uint64_t v45 = *(unsigned __int16 *)(v23 + 2 * v40 + 580);
        if (v42)
        {
          unsigned int v46 = (void *)(*(void *)(a1 + 3264) + v44);
          uint64_t v47 = 56 * *(unsigned __int16 *)(v23 + 2 * v40 + 580) - 56 * v43;
          uint64_t v48 = v42;
          do
          {
            void *v46 = v41;
            v46 += 1828;
            v41 += v47;
            --v48;
          }
          while (v48);
        }
        v44 += 14624 * v42;
        uint64_t v43 = v45;
      }
      while (v40 != v24);
    }
    int v49 = v20 * *v39;
    if (v49 != *(_DWORD *)(a1 + 4404))
    {
      free(*(void **)(a1 + 4368));
      memptr = 0;
      int v50 = malloc_type_posix_memalign(&memptr, 0x40uLL, (v49 & 0x1FFFFFFFFFFFFFLL) << 9, 0xE584FBEuLL);
      int64x2_t v51 = memptr;
      if (v50) {
        int64x2_t v51 = 0;
      }
      *(void *)(a1 + 4368) = v51;
      if (!v51)
      {
        *(_DWORD *)(a1 + 4404) = 0;
        return 4294967284;
      }
      *(_DWORD *)(a1 + 4404) = v49;
    }
    int v52 = v49 << v21;
    if (v49 << v21 != *(_DWORD *)(a1 + 4416))
    {
      free(*(void **)(a1 + 4392));
      memptr = 0;
      if (malloc_type_posix_memalign(&memptr, 0x40uLL, (v52 & 0x3FFFFFFFFFFFFLL) << 13, 0xE584FBEuLL)) {
        uint64_t v53 = 0;
      }
      else {
        uint64_t v53 = memptr;
      }
      *(void *)(a1 + 4392) = v53;
      if (!v53)
      {
        *(_DWORD *)(a1 + 4416) = 0;
        return 4294967284;
      }
      bzero(v53, (v52 & 0x3FFFFFFFFFFFFLL) << 13);
      *(_DWORD *)(a1 + 4416) = v52;
    }
    if (*(unsigned char *)(*(void *)(a1 + 24) + 268))
    {
      int v54 = v20 << v21;
      if (v20 << v21 != *(_DWORD *)(a1 + 4408))
      {
        free(*(void **)(a1 + 4376));
        memptr = 0;
        int v55 = malloc_type_posix_memalign(&memptr, 0x40uLL, 6144 * v54, 0xE584FBEuLL);
        uint64_t v56 = memptr;
        if (v55) {
          uint64_t v56 = 0;
        }
        *(void *)(a1 + 4376) = v56;
        if (!v56)
        {
          *(_DWORD *)(a1 + 4408) = 0;
          return 4294967284;
        }
        *(_DWORD *)(a1 + 4408) = v54;
      }
      int v57 = v20 * v39[1];
      if (v57 != *(_DWORD *)(a1 + 4412))
      {
        free(*(void **)(a1 + 4384));
        memptr = 0;
        int v58 = malloc_type_posix_memalign(&memptr, 0x40uLL, (v57 & 0x3FFFFFFFFFFFFLL) << 11, 0xE584FBEuLL);
        uint64_t v59 = memptr;
        if (v58) {
          uint64_t v59 = 0;
        }
        *(void *)(a1 + 4384) = v59;
        if (!v59)
        {
          *(_DWORD *)(a1 + 4412) = 0;
          return 4294967284;
        }
        *(_DWORD *)(a1 + 4412) = v57;
      }
    }
    else
    {
      int v60 = *(void **)(a1 + 4376);
      if (v60)
      {
        free(v60);
        *(void *)(a1 + 4376) = 0;
        int32x2_t v61 = *(void **)(a1 + 4384);
        if (v61)
        {
          free(v61);
          *(void *)(a1 + 4384) = 0;
        }
        *(void *)(a1 + 4408) = 0;
      }
    }
  }
  uint64_t v62 = *(void *)(a1 + 2144);
  uint64_t v63 = *(void *)(a1 + 2152);
  uint64_t v64 = *(void *)(a1 + 24);
  int v66 = *(_DWORD *)(v64 + 236);
  int v65 = *(_DWORD *)(v64 + 240);
  unsigned int v67 = *(_DWORD *)(v4 + 24);
  BOOL v68 = v67 <= 1 || v66 == v65;
  int v69 = !v68;
  LODWORD(v70) = *(_DWORD *)(a1 + 3464);
  if (*(_DWORD *)(a1 + 4464) != 4 * v62 * (int)v70
    || *(_DWORD *)(a1 + 4468) != 8 * v63 * (int)v70
    || *(_DWORD *)(a1 + 5300) != v69
    || v70 != *(_DWORD *)(a1 + 4472))
  {
    free(*(void **)(a1 + 5176));
    if (v62 >= 0) {
      uint64_t v71 = v62;
    }
    else {
      uint64_t v71 = -v62;
    }
    if (v63 >= 0) {
      uint64_t v72 = v63;
    }
    else {
      uint64_t v72 = -v63;
    }
    uint64_t v73 = 8 * v72;
    size_t v74 = (((8 * v72 + 4 * v71) * *(int *)(a1 + 3464)) << v69) + 64;
    memptr = 0;
    int v75 = malloc_type_posix_memalign(&memptr, 0x20uLL, v74, 0xE584FBEuLL);
    int32x2_t v76 = (char *)memptr;
    if (v75) {
      int32x2_t v76 = 0;
    }
    *(void *)(a1 + 5176) = v76;
    if (!v76)
    {
      *(void *)(a1 + 4464) = 0;
      return 4294967284;
    }
    int32x4_t v77 = v76 + 32;
    if (v62 < 0)
    {
      uint64_t v70 = *(int *)(a1 + 3464);
      int32x2_t v79 = &v77[-(v62 * (4 * v70 - 1))];
      uint64_t v78 = -(v62 * (4 * (int)v70 - 3));
    }
    else
    {
      uint64_t v78 = 2 * v62;
      LODWORD(v70) = *(_DWORD *)(a1 + 3464);
      int32x2_t v79 = v77;
    }
    *(void *)(a1 + 5192) = v79;
    *(void *)(a1 + 5216) = &v77[v78];
    uint64_t v80 = 4 * v71 * (int)v70;
    int32x4_t v81 = &v77[v80];
    uint64_t v82 = 2 * v63;
    uint64_t v83 = 4 * v63;
    uint64_t v84 = 6 * v63;
    int v85 = 8 * v70 - 1;
    __int32 v86 = &v81[-(v63 * v85)];
    if (v63 < 0) {
      uint64_t v82 = -(v63 * (8 * (int)v70 - 3));
    }
    else {
      __int32 v86 = v81;
    }
    if (v63 < 0)
    {
      uint64_t v83 = -(v63 * (8 * (int)v70 - 5));
      uint64_t v84 = -(v63 * (8 * (int)v70 - 7));
    }
    *(void *)(a1 + 5200) = v86;
    *(void *)(a1 + 5208) = &v81[v82];
    *(void *)(a1 + 5224) = &v81[v83];
    *(void *)(a1 + 5232) = &v81[v84];
    if (v69)
    {
      unint64_t v87 = &v81[v73 * (int)v70];
      int v88 = 4 * v70 - 1;
      unint64_t v89 = &v87[-(v62 * v88)];
      if (v62 >= 0) {
        unint64_t v89 = v87;
      }
      *(void *)(a1 + 5240) = v89;
      uint64_t v90 = &v87[v80];
      uint64_t v91 = 4 * v63 * (int)v70;
      int v92 = &v90[-(v63 * v88)];
      uint64_t v93 = -(v63 * v85);
      if (v63 < 0) {
        uint64_t v91 = v93;
      }
      else {
        int v92 = v90;
      }
      *(void *)(a1 + 5248) = v92;
      *(void *)(a1 + 5256) = &v90[v91];
    }
    *(_DWORD *)(a1 + 4464) = 4 * v62 * v70;
    *(_DWORD *)(a1 + 4468) = 8 * v63 * v70;
    *(_DWORD *)(a1 + 5300) = v69;
    *(_DWORD *)(a1 + 4472) = v70;
    unsigned int v67 = *(_DWORD *)(v4 + 24);
  }
  if (v67 < 2) {
    int v94 = 12;
  }
  else {
    int v94 = (4 * v70) << *(unsigned char *)(*(void *)(a1 + 8) + 392);
  }
  uint64_t v95 = *(void *)(a1 + 2416);
  uint64_t v96 = *(void *)(a1 + 2424);
  uint64_t v97 = v94;
  if (v95 * v94 != *(_DWORD *)(a1 + 4476) || *(_DWORD *)(a1 + 4480) != 2 * v96 * v94)
  {
    free(*(void **)(a1 + 5184));
    if (v95 >= 0) {
      uint64_t v98 = v95;
    }
    else {
      uint64_t v98 = -v95;
    }
    uint64_t v99 = v98 * v97;
    if (v96 >= 0) {
      uint64_t v100 = v96;
    }
    else {
      uint64_t v100 = -v96;
    }
    memptr = 0;
    int v101 = malloc_type_posix_memalign(&memptr, 0x40uLL, v99 + 2 * v97 * v100 + 128, 0xE584FBEuLL);
    BOOL v102 = (char *)memptr;
    if (v101) {
      BOOL v102 = 0;
    }
    *(void *)(a1 + 5184) = v102;
    if (!v102)
    {
      *(void *)(a1 + 4476) = 0;
      return 4294967284;
    }
    unint64_t v103 = v102 + 64;
    uint64_t v104 = (int)v97 - 1;
    *(void *)(a1 + 5264) = &v103[-(v95 * v104) & (v95 >> 63)];
    BOOL v105 = &v103[v99];
    uint64_t v106 = v96 * v97;
    int v107 = 2 * v97;
    BOOL v108 = &v105[-(v96 * v104)];
    if (v96 >= 0)
    {
      BOOL v108 = v105;
    }
    else
    {
      int v107 = 2 * v97;
      uint64_t v106 = -(v96 * (2 * (int)v97 - 1));
    }
    *(void *)(a1 + 5272) = v108;
    *(void *)(a1 + 5280) = &v105[v106];
    *(_DWORD *)(a1 + 4476) = v97 * v95;
    *(_DWORD *)(a1 + 4480) = v107 * v96;
  }
  if (v20 != *(_DWORD *)(a1 + 4456))
  {
    free(*(void **)(a1 + 4440));
    free(*(void **)(a1 + 4432));
    *(void *)(a1 + 4440) = malloc_type_malloc(1348 * v20, 0x1000040A6200EAAuLL);
    unint64_t v109 = malloc_type_malloc((v20 << 12) | 3, 0x5CB83716uLL);
    *(void *)(a1 + 4432) = v109;
    if (!*(void *)(a1 + 4440)
      || !v109
      || *(_DWORD *)(v4 + 8) >= 2u
      && (free(*(void **)(a1 + 4360)),
          int32x2_t v110 = malloc_type_malloc(v20 << 15, 0xFAF7FA2FuLL),
          (*(void *)(a1 + 4360) = v110) == 0))
    {
      *(_DWORD *)(a1 + 4456) = 0;
      return 4294967284;
    }
    *(_DWORD *)(a1 + 4456) = v20;
  }
  int v111 = (*(_DWORD *)(a1 + 2432) + 127) >> 7;
  *(_DWORD *)(a1 + 3476) = v111;
  uint64_t v112 = *(int *)(a1 + 3460) * (uint64_t)v111;
  if (v112 != *(_DWORD *)(a1 + 4460))
  {
    free(*(void **)(a1 + 4448));
    int v113 = malloc_type_malloc(108 * v112, 0x1000040F139FF95uLL);
    *(void *)(a1 + 4448) = v113;
    if (!v113)
    {
      *(_DWORD *)(a1 + 4460) = 0;
      return 4294967284;
    }
    *(_DWORD *)(a1 + 4460) = v112;
  }
  uint64_t v114 = *(void *)(a1 + 24);
  *(_DWORD *)(a1 + 5352) = (*(_DWORD *)(v114 + 868) != 0) | (2 * (*(_DWORD *)(v114 + 872) != 0)) | (4
                                                                                                  * (*(_DWORD *)(v114 + 876) != 0));
  uint64_t v115 = *(unsigned __int8 *)(v114 + 846);
  if (*(_DWORD *)(a1 + 4640) != v115)
  {
    uint64_t v116 = 9 - v115;
    unint64_t v117 = (unint64_t)(v115 + 3) >> 2;
    int32x4_t v118 = vdupq_n_s32(9 - (int)v115);
    int32x4_t v119 = (int32x4_t)xmmword_224B159B0;
    int32x4_t v120 = (int32x4_t)xmmword_224B159C0;
    int32x4_t v121 = (int32x4_t)xmmword_224B159D0;
    int32x4_t v122 = (int32x4_t)xmmword_224B159E0;
    uint64_t v123 = -64;
    uint32x4_t v124 = (uint32x4_t)vnegq_s32(vdupq_n_s32(v117));
    v125.i64[0] = 0x100000001;
    v125.i64[1] = 0x100000001;
    v126.i64[0] = 0x404040404040404;
    v126.i64[1] = 0x404040404040404;
    v127.i64[0] = 0x1000000010;
    v127.i64[1] = 0x1000000010;
    do
    {
      v1.i32[0] = 0;
      v2.i32[0] = v115;
      int8x16_t v128 = vdupq_lane_s8((int8x8_t)*(_OWORD *)&vceqq_s8(v2, v1), 0);
      int32x4_t v129 = (int32x4_t)vbslq_s8(v128, (int8x16_t)v122, (int8x16_t)vminq_s32((int32x4_t)vshlq_u32((uint32x4_t)v122, v124), v118));
      int32x4_t v130 = (int32x4_t)vbslq_s8(v128, (int8x16_t)v121, (int8x16_t)vminq_s32((int32x4_t)vshlq_u32((uint32x4_t)v121, v124), v118));
      int32x4_t v131 = (int32x4_t)vbslq_s8(v128, (int8x16_t)v119, (int8x16_t)vminq_s32((int32x4_t)vshlq_u32((uint32x4_t)v119, v124), v118));
      int16x8_t v132 = (int16x8_t)vmaxq_s32((int32x4_t)vbslq_s8(v128, (int8x16_t)v120, (int8x16_t)vminq_s32((int32x4_t)vshlq_u32((uint32x4_t)v120, v124), v118)), v125);
      int16x8_t v133 = (int16x8_t)vmaxq_s32(v131, v125);
      int16x8_t v134 = (int16x8_t)vmaxq_s32(v130, v125);
      int16x8_t v135 = (int16x8_t)vmaxq_s32(v129, v125);
      uint64_t v136 = (int8x16_t *)(a1 + v123);
      v136[289] = vuzp1q_s8((int8x16_t)vuzp1q_s16(v135, v134), (int8x16_t)vuzp1q_s16(v132, v133));
      int8x16_t v2 = (int8x16_t)vuzp1q_s16((int16x8_t)vaddq_s32(vaddq_s32(v122, v122), (int32x4_t)v135), (int16x8_t)vaddq_s32(vaddq_s32(v121, v121), (int32x4_t)v134));
      int8x16_t v1 = vaddq_s8(vuzp1q_s8(v2, (int8x16_t)vuzp1q_s16((int16x8_t)vaddq_s32(vaddq_s32(v120, v120), (int32x4_t)v132), (int16x8_t)vaddq_s32(vaddq_s32(v119, v119), (int32x4_t)v133))), v126);
      v136[285] = v1;
      int32x4_t v122 = vaddq_s32(v122, v127);
      int32x4_t v121 = vaddq_s32(v121, v127);
      int32x4_t v120 = vaddq_s32(v120, v127);
      int32x4_t v119 = vaddq_s32(v119, v127);
      v123 += 16;
    }
    while (v123);
    *(void *)(a1 + 4624) = v117;
    BOOL v68 = v115 == 0;
    uint64_t v137 = 255;
    if (!v68) {
      uint64_t v137 = v116;
    }
    *(void *)(a1 + 4632) = v137;
    uint64_t v114 = *(void *)(a1 + 24);
    *(_DWORD *)(a1 + 4640) = *(unsigned __int8 *)(v114 + 846);
  }
  int v216 = 0;
  sub_224AFF938((void *)(a1 + 4644), (unsigned char *)v114, (char *)&v216);
  bzero(*(void **)(a1 + 4440), 1348 * (int)v20);
  int v138 = (*(_DWORD *)(a1 + 3456) * *(_DWORD *)(a1 + 3464)) << v21;
  if (v138 != *(_DWORD *)(a1 + 3400))
  {
    free(*(void **)(a1 + 3408));
    memptr = 0;
    int v139 = malloc_type_posix_memalign(&memptr, 0x40uLL, 384 * v138, 0xE584FBEuLL);
    int v140 = (char *)memptr;
    if (v139) {
      int v140 = 0;
    }
    *(void *)(a1 + 3408) = v140;
    if (!v140)
    {
      *(_DWORD *)(a1 + 3400) = 0;
      return 4294967284;
    }
    *(void *)(a1 + 3416) = &v140[128 * (uint64_t)v138];
    *(void *)(a1 + 3424) = &v140[256 * (uint64_t)v138];
    *(_DWORD *)(a1 + 3400) = v138;
  }
  uint64_t v141 = *(void *)(a1 + 24);
  int v142 = *(_DWORD *)(a1 + 3460) * *(unsigned __int8 *)(v141 + 445);
  if (v142 != *(_DWORD *)(a1 + 4484))
  {
    free(*(void **)(a1 + 5160));
    uint64_t v143 = (char *)malloc_type_malloc(v142 << 6, 0x39482F75uLL);
    *(void *)(a1 + 5160) = v143;
    if (!v143)
    {
      *(_DWORD *)(a1 + 4484) = 0;
      return 4294967284;
    }
    *(void *)(a1 + 5168) = &v143[32 * v142];
    *(_DWORD *)(a1 + 4484) = v142;
    uint64_t v141 = *(void *)(a1 + 24);
  }
  if ((*(unsigned char *)(v141 + 232) & 1) != 0 || *(unsigned char *)(v141 + 419))
  {
    uint64_t v144 = *(void *)(a1 + 8);
    uint64_t v145 = *(void *)(a1 + 2680);
    uint64_t v146 = *(void *)(a1 + 3256);
    int v147 = *(_DWORD *)(v146 + 24);
    int v148 = *(_DWORD *)(v146 + 8);
    *(_DWORD *)(a1 + 4072) = 16 << *(unsigned char *)(v144 + 392);
    *(void *)(a1 + 4048) = v141;
    LODWORD(v146) = (*(_DWORD *)(v141 + 236) + 7) >> 3;
    *(_DWORD *)(a1 + 4064) = v146;
    int v149 = (*(_DWORD *)(v141 + 244) + 7) >> 3;
    *(_DWORD *)(a1 + 4068) = v149;
    *(_DWORD *)(a1 + 4056) = 2 * v146;
    *(_DWORD *)(a1 + 4060) = 2 * v149;
    uint64_t v150 = (int)(((*(_DWORD *)(v141 + 236) + 127) >> 2) & 0xFFFFFFE0);
    if (v147 < 2) {
      int v151 = 1;
    }
    else {
      int v151 = *(unsigned __int8 *)(v141 + 449);
    }
    if (*(void *)(a1 + 4248) != v150 || v151 != *(_DWORD *)(a1 + 4256))
    {
      int v152 = *(void **)(a1 + 4240);
      if (v152)
      {
        free(v152);
        *(void *)(a1 + 4240) = 0;
      }
      char v154 = v147 > 1 && v148 > 1;
      memptr = 0;
      int v155 = malloc_type_posix_memalign(&memptr, 0x40uLL, (420 * (int)v150 * (uint64_t)v151) << v154, 0xE584FBEuLL);
      uint64_t v156 = memptr;
      if (v155) {
        uint64_t v156 = 0;
      }
      *(void *)(a1 + 4240) = v156;
      if (!v156) {
        return 4294967284;
      }
      *(void *)(a1 + 4248) = v150;
    }
    uint64_t v157 = v150 >> 1;
    if (v157 == *(void *)(a1 + 4232) && v151 == *(_DWORD *)(a1 + 4256)) {
      goto LABEL_181;
    }
    uint64_t v158 = *(void **)(a1 + 4224);
    if (v158)
    {
      free(v158);
      *(void *)(a1 + 4224) = 0;
    }
    memptr = 0;
    int v159 = malloc_type_posix_memalign(&memptr, 0x40uLL, 80 * (int)v157 * (uint64_t)v151, 0xE584FBEuLL);
    uint64_t v160 = memptr;
    if (v159) {
      uint64_t v160 = 0;
    }
    *(void *)(a1 + 4224) = v160;
    if (v160)
    {
      *(void *)(a1 + 4232) = v157;
LABEL_181:
      uint64_t v161 = 0;
      uint64_t v162 = a1 + 2832;
      *(_DWORD *)(a1 + 4256) = v151;
      *(_DWORD *)(a1 + 4260) = v147;
      *(_DWORD *)(a1 + 4264) = v148;
      *(void *)(a1 + 4208) = v145;
      *(void *)(a1 + 4216) = a1 + 2688;
      int v163 = *(unsigned __int8 *)(v141 + 248);
      do
      {
        if (*(unsigned char *)(v144 + 412)) {
          int v164 = ((*(_DWORD *)(v162 + 4 * v161) - v163) & ((1 << (*(unsigned char *)(v144 + 412) - 1)) - 1))
        }
               - ((*(_DWORD *)(v162 + 4 * v161) - v163) & (1 << (*(unsigned char *)(v144 + 412) - 1)));
        else {
          int v164 = 0;
        }
        int v165 = (unsigned char *)(v162 + v161);
        v165[1248] = v164 > 0;
        v165[1255] = v164 < 0;
        LOBYTE(v164) = *(unsigned char *)(v144 + 412);
        if ((_BYTE)v164)
        {
          int v164 = ((v163 - *(_DWORD *)(v162 + 4 * v161)) & ((1 << (v164 - 1)) - 1))
               - ((v163 - *(_DWORD *)(v162 + 4 * v161)) & (1 << (v164 - 1)));
          if (v164 >= 31) {
            int v164 = 31;
          }
          if (v164 <= -31) {
            LOBYTE(v164) = -31;
          }
        }
        v165[1262] = v164;
        ++v161;
      }
      while (v161 != 7);
      *(_DWORD *)(a1 + 4200) = 0;
      if (!*(unsigned char *)(v141 + 437) || !*(unsigned char *)(v144 + 412))
      {
        LODWORD(v166) = 0;
LABEL_242:
        *(_DWORD *)(a1 + 4076) = (int)v166 > 0;
        uint64_t v141 = *(void *)(a1 + 24);
        goto LABEL_243;
      }
      uint64_t v166 = *(void *)(a1 + 2688);
      if (v166)
      {
        if (*(_DWORD *)(a1 + 2884) != *(_DWORD *)(a1 + 2844))
        {
          LODWORD(v166) = 1;
          *(_DWORD *)(a1 + 4200) = 1;
          *(unsigned char *)(a1 + 4101) = 0;
          int v167 = 3;
LABEL_205:
          if (*(void *)(a1 + 2720))
          {
            if (*(unsigned char *)(v144 + 412))
            {
              int v169 = *(_DWORD *)(a1 + 2848) - *(unsigned __int8 *)(v141 + 248);
              if ((v169 & ((1 << (*(unsigned char *)(v144 + 412) - 1)) - 1)) > (v169 & (1 << (*(unsigned char *)(v144 + 412) - 1))))
              {
                uint64_t v170 = a1 + v166;
                LODWORD(v166) = v166 + 1;
                *(_DWORD *)(a1 + 4200) = v166;
                *(unsigned char *)(v170 + 4101) = 4;
              }
            }
          }
          if (*(void *)(a1 + 2728))
          {
            if (*(unsigned char *)(v144 + 412))
            {
              int v171 = *(_DWORD *)(a1 + 2852) - *(unsigned __int8 *)(v141 + 248);
              if ((v171 & ((1 << (*(unsigned char *)(v144 + 412) - 1)) - 1)) > (v171 & (1 << (*(unsigned char *)(v144 + 412) - 1))))
              {
                *(_DWORD *)(a1 + 4200) = v166 + 1;
                *(unsigned char *)(a1 + v166 + 4101) = 5;
                LODWORD(v166) = *(_DWORD *)(a1 + 4200);
              }
            }
          }
          if ((int)v166 < v167)
          {
            if (*(void *)(a1 + 2736))
            {
              if (*(unsigned char *)(v144 + 412))
              {
                int v172 = *(_DWORD *)(a1 + 2856) - *(unsigned __int8 *)(v141 + 248);
                if ((v172 & ((1 << (*(unsigned char *)(v144 + 412) - 1)) - 1)) > (v172 & (1 << (*(unsigned char *)(v144 + 412) - 1))))
                {
                  *(_DWORD *)(a1 + 4200) = v166 + 1;
                  *(unsigned char *)(a1 + (int)v166 + 4101) = 6;
                  LODWORD(v166) = *(_DWORD *)(a1 + 4200);
                }
              }
            }
          }
          if ((int)v166 < v167 && *(void *)(a1 + 2696))
          {
            *(_DWORD *)(a1 + 4200) = v166 + 1;
            *(unsigned char *)(a1 + (int)v166 + 4101) = 1;
            LODWORD(v166) = *(_DWORD *)(a1 + 4200);
          }
          if ((int)v166 >= 1)
          {
            uint64_t v173 = 0;
            int v174 = *(unsigned __int8 *)(v144 + 412);
            int v175 = 1 << (v174 - 1);
            int v176 = v175 - 1;
            uint64_t v177 = a1 + 4116;
            do
            {
              int v178 = (unsigned __int8 *)(a1 + v173 + 4101);
              uint64_t v179 = *v178;
              int v180 = *(_DWORD *)(v162 + 4 * v179);
              if (v174) {
                int v181 = ((v180 - *(unsigned __int8 *)(v141 + 248)) & v176)
              }
                     - ((v180 - *(unsigned __int8 *)(v141 + 248)) & v175);
              else {
                int v181 = 0;
              }
              if (v181 >= 0) {
                unsigned int v182 = v181;
              }
              else {
                unsigned int v182 = -v181;
              }
              if (v182 < 0x20)
              {
                uint64_t v183 = 0;
                if (v179 >= 4) {
                  int v184 = v181;
                }
                else {
                  int v184 = -v181;
                }
                *(_DWORD *)(a1 + 4 * v173 + 4104) = v184;
                do
                {
                  if (v174)
                  {
                    int v185 = v180 - *(_DWORD *)(a1 + 2860 + 28 * *v178 + v183);
                    unsigned int v186 = (v185 & v176) - (v185 & v175);
                    if (v186 > 0x1F) {
                      unsigned int v186 = 0;
                    }
                  }
                  else
                  {
                    unsigned int v186 = 0;
                  }
                  *(_DWORD *)(v177 + v183) = v186;
                  v183 += 4;
                }
                while (v183 != 28);
              }
              else
              {
                *(_DWORD *)(a1 + 4 * v173 + 4104) = 0x80000000;
              }
              ++v173;
              uint64_t v166 = *(int *)(a1 + 4200);
              v177 += 28;
            }
            while (v173 < v166);
          }
          goto LABEL_242;
        }
        LODWORD(v166) = 0;
      }
      int v167 = 2;
      goto LABEL_205;
    }
    return 4294967284;
  }
LABEL_243:
  sub_224ADD37C(*(unsigned char *)(*(void *)(a1 + 8) + 32), v141, *(unsigned __int8 *)(v141 + 712), a1 + 3480);
  double v187 = *(unsigned char **)(a1 + 24);
  if (v187[718])
  {
    uint64_t v188 = 0;
    int v189 = (char *)&unk_26AA96E00 + 304 * v187[719];
    int v190 = (char *)&unk_26AA96E00 + 304 * v187[721] + 152;
    int v191 = (void *)(a1 + 3592);
    int v192 = (char *)&unk_26AA96E00 + 304 * v187[720] + 152;
    do
    {
      *(v191 - 2) = *(void *)&v189[v188];
      *(v191 - 1) = *(void *)&v192[v188];
      void *v191 = *(void *)&v190[v188];
      v191 += 3;
      v188 += 8;
    }
    while (v188 != 152);
  }
  else
  {
    *(void *)(a1 + 4024) = 0;
    *(_OWORD *)(a1 + 3992) = 0u;
    *(_OWORD *)(a1 + 4008) = 0u;
    *(_OWORD *)(a1 + 3960) = 0u;
    *(_OWORD *)(a1 + 3976) = 0u;
    *(_OWORD *)(a1 + 3928) = 0u;
    *(_OWORD *)(a1 + 3944) = 0u;
    *(_OWORD *)(a1 + 3896) = 0u;
    *(_OWORD *)(a1 + 3912) = 0u;
    *(_OWORD *)(a1 + 3864) = 0u;
    *(_OWORD *)(a1 + 3880) = 0u;
    *(_OWORD *)(a1 + 3832) = 0u;
    *(_OWORD *)(a1 + 3848) = 0u;
    *(_OWORD *)(a1 + 3800) = 0u;
    *(_OWORD *)(a1 + 3816) = 0u;
    *(_OWORD *)(a1 + 3768) = 0u;
    *(_OWORD *)(a1 + 3784) = 0u;
    *(_OWORD *)(a1 + 3736) = 0u;
    *(_OWORD *)(a1 + 3752) = 0u;
    *(_OWORD *)(a1 + 3704) = 0u;
    *(_OWORD *)(a1 + 3720) = 0u;
    *(_OWORD *)(a1 + 3672) = 0u;
    *(_OWORD *)(a1 + 3688) = 0u;
    *(_OWORD *)(a1 + 3640) = 0u;
    *(_OWORD *)(a1 + 3656) = 0u;
    *(_OWORD *)(a1 + 3608) = 0u;
    *(_OWORD *)(a1 + 3624) = 0u;
    *(_OWORD *)(a1 + 3576) = 0u;
    *(_OWORD *)(a1 + 3592) = 0u;
  }
  if (v187[888])
  {
    unint64_t v193 = 0;
    uint64_t v194 = 1;
    do
    {
      if (v193 <= 5)
      {
        int v195 = *(unsigned __int8 *)(*(void *)(a1 + 296 * v193 + 40) + 248);
        uint64_t v196 = *(void *)(a1 + 8);
        uint64_t v197 = v194;
        do
        {
          unsigned int v198 = *(unsigned __int8 *)(v196 + 412);
          if (*(unsigned char *)(v196 + 412))
          {
            int v199 = *(unsigned __int8 *)(*(void *)(a1 + 2112) + 248);
            int v201 = 1 << (v198 - 1);
            unsigned int v198 = ((v195 - v199) & (v201 - 1)) - ((v195 - v199) & v201);
            if ((v198 & 0x80000000) != 0) {
              unsigned int v198 = ((v195 - v199) & v201) - ((v195 - v199) & (v201 - 1));
            }
            if ((int)v198 >= 31) {
              unsigned int v198 = 31;
            }
            int v200 = *(unsigned __int8 *)(*(void *)(a1 + 296 * v197 + 40) + 248);
            int v202 = ((v200 - v199) & (v201 - 1)) - ((v200 - v199) & v201);
          }
          else
          {
            int v202 = 0;
          }
          uint64_t v203 = 0;
          if (v202 < 0) {
            int v202 = -v202;
          }
          if (v202 >= 31) {
            unsigned int v204 = 31;
          }
          else {
            unsigned int v204 = v202;
          }
          if (v204 <= v198) {
            int v205 = (unsigned __int8 *)&unk_224B176E0;
          }
          else {
            int v205 = (unsigned __int8 *)&unk_224B176E1;
          }
          if (v204 > v198) {
            int v206 = (unsigned __int8 *)&unk_224B176E0;
          }
          else {
            int v206 = (unsigned __int8 *)&unk_224B176E1;
          }
          do
          {
            int v208 = *v206;
            v206 += 2;
            int v207 = v208;
            int v209 = *v205;
            v205 += 2;
            int v210 = v204 * v207;
            BOOL v211 = v210 < (int)(v198 * v209);
            BOOL v212 = v210 > (int)(v198 * v209) && v204 <= v198;
            if (v211 && v204 > v198) {
              break;
            }
            if (v212) {
              break;
            }
            ++v203;
          }
          while (v203 != 3);
          *(unsigned char *)(a1 - v193 + 8 * v193 + v197++ + 4272) = byte_224B176E6[2 * v203 + (v204 <= v198)];
        }
        while (v197 != 7);
      }
      ++v193;
      ++v194;
    }
    while (v193 != 7);
  }
  uint64_t result = 0;
  BOOL v214 = *(_DWORD *)(a1 + 2168) != 0;
  *(void *)(a1 + 5304) = *(void *)(a1 + 2120);
  *(void *)(a1 + 5312) = *(void *)(a1 + 2120 + 8 * v214);
  uint64_t v215 = 16 * v214;
  *(void *)(a1 + 5320) = *(void *)(a1 + 2120 + v215);
  *(void *)(a1 + 5328) = *(void *)(a1 + 2392);
  *(void *)(a1 + 5336) = *(void *)(a1 + 2392 + 8 * v214);
  *(void *)(a1 + 5344) = *(void *)(a1 + 2392 + v215);
  return result;
}